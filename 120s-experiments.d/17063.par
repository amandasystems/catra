// Parikh automata intersection problem, generated by OSTRICH+
counter int R12, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R3451, R3452, R3453, R3454, R3455, R3456, R4, R45, R4573, R4574, R4575, R4576, R4577, R4578, R4579, R4580, R47, R49, R5, R50, R5021, R5022, R5023, R5024, R5025, R5026, R5027, R5028, R5029, R5030, R5031, R5032, R5033, R5034, R5035, R5036, R5037, R5038, R5039, R5040, R5041, R5042, R5043, R5044, R5045, R5046, R5047, R5048, R5049, R5050, R5051, R5052, R5053, R5054, R5055, R5056, R5057, R5058, R5059, R5060, R5061, R5062, R5063, R5064, R5065, R5066, R5067, R5068, R5069, R5070, R5071, R5072, R5073, R5074, R5075, R5076, R5077, R5078, R5079, R5080, R5081, R5082, R5083, R5084, R5085, R5086, R5087, R5088, R5089, R5090, R5091, R5092, R5093, R5094, R5095, R5096, R5097, R5098, R5099, R5100, R5101, R5102, R5103, R5104, R5105, R5106, R5107, R5108, R5109, R5110, R5111, R5112, R5113, R5114, R5115, R5116, R5117, R5118, R5119, R5120, R5121, R5122, R5123, R5124, R5125, R5126, R5127, R5128, R5129, R5130, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R5052 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R5051 += 1, R5052 += 1 };
  s1 -> s1 [0, 65535] { R5052 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R5054 += 1 };
  s0 -> s0 [0, 65535] { R5053 += 1, R5054 += 1 };
  s0 -> s2 [70, 70] { R5054 += 1 };
  s0 -> s3 [70, 70] { R5054 += 1 };
  s0 -> s1 [76, 65535] { R5054 += 1 };
  s1 -> s1 [0, 69] { R5054 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5054 += 1 };
  s1 -> s3 [70, 70] { R5054 += 1 };
  s1 -> s1 [76, 65535] { R5054 += 1 };
  s2 -> s2 [0, 70] { R5054 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R5054 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R5056 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R5055 += 1, R5056 += 1 };
  s0 -> s2 [70, 70] { R5056 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R5056 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R5056 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R5056 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5056 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R5056 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R5056 += 1, R45 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5056 += 1, R45 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R5058 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R5057 += 1, R5058 += 1 };
  s0 -> s2 [70, 70] { R5058 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R5058 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R5058 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R5058 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5058 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R5058 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R5058 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R5058 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R5060 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R5059 += 1, R5060 += 1 };
  s0 -> s2 [70, 70] { R5060 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R5060 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R5060 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R5060 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5060 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R5060 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R5060 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R5060 += 1, R49 += 1, R50 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R5062 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R5061 += 1, R5062 += 1 };
  s0 -> s2 [70, 70] { R5062 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R5062 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R5062 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R5062 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5062 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R5062 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R5062 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R5062 += 1, R53 += 1, R54 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R5064 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R5063 += 1, R5064 += 1 };
  s0 -> s2 [70, 70] { R5064 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R5064 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R5064 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R5064 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5064 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R5064 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R5064 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535] { R5064 += 1, R59 += 1, R60 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R5066 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R5065 += 1, R5066 += 1 };
  s0 -> s2 [70, 70] { R5066 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R5066 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R5066 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R5066 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5066 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R5066 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R5066 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5066 += 1, R65 += 1, R66 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R5068 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R5067 += 1, R5068 += 1 };
  s0 -> s2 [70, 70] { R5068 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R5068 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R5068 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R5068 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5068 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R5068 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R5068 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R5068 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R5088 += 1 };
  s0 -> s0 [0, 65535] { R5087 += 1, R5088 += 1 };
  s0 -> s2 [70, 70] { R5088 += 1 };
  s0 -> s1 [71, 65535] { R5088 += 1 };
  s1 -> s1 [0, 69] { R5088 += 1 };
  s1 -> s2 [70, 70] { R5088 += 1 };
  s1 -> s1 [71, 65535] { R5088 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5088 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R5090 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R5089 += 1, R5090 += 1 };
  s1 -> s1 [0, 65535] { R5090 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R5092 += 1 };
  s0 -> s0 [0, 65535] { R5091 += 1, R5092 += 1 };
  s0 -> s2 [0, 65535] { R5092 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R5092 += 1 };
  s0 -> s1 [71, 65535] { R5092 += 1 };
  s1 -> s1 [0, 69] { R5092 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R5092 += 1 };
  s1 -> s1 [71, 65535] { R5092 += 1 };
  s2 -> s1 [0, 69] { R5092 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R5092 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R5092 += 1 };
  s2 -> s1 [71, 65535] { R5092 += 1 };
  s3 -> s3 [0, 65535] { R5092 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R5094 += 1, R5032 += 1 };
  s0 -> s2 [0, 65535] { R5094 += 1, R5031 += 1, R5032 += 1 };
  s0 -> s0 [0, 65535] { R5093 += 1, R5094 += 1 };
  s0 -> s1 [71, 65535] { R5094 += 1, R5032 += 1 };
  s1 -> s1 [0, 69] { R5094 += 1, R5032 += 1 };
  s1 -> s1 [0, 65535] { R5094 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R5094 += 1, R5032 += 1 };
  s2 -> s1 [0, 69] { R5094 += 1, R5032 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5094 += 1, R5031 += 1, R5032 += 1 };
  s2 -> s1 [71, 65535] { R5094 += 1, R5032 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s0 [0, 65535] { R5095 += 1, R5096 += 1 };
  s0 -> s1 [0, 65535] { R5096 += 1, R5033 += 1, R5034 += 1 };
  s0 -> s2 [0, 65535] { R5096 += 1, R5034 += 1, R20 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R5096 += 1, R5033 += 1, R5034 += 1 };
  s1 -> s2 [0, 65535] { R5096 += 1, R5034 += 1, R20 += 1 };
  s2 -> s3 [0, 65535] { R5096 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R5096 += 1, R5034 += 1, R20 += 1 };
  s3 -> s3 [0, 65535] { R5096 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R5098 += 1, R5036 += 1 };
  s0 -> s0 [0, 65535] { R5097 += 1, R5098 += 1 };
  s0 -> s2 [0, 65535] { R5098 += 1, R5035 += 1, R5036 += 1 };
  s0 -> s1 [75, 65535] { R5098 += 1, R5036 += 1 };
  s1 -> s1 [0, 70] { R5098 += 1, R5036 += 1 };
  s1 -> s1 [0, 65535] { R5098 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R5098 += 1, R5036 += 1 };
  s2 -> s1 [0, 70] { R5098 += 1, R5036 += 1 };
  s2 -> s2 [0, 65535] { R5098 += 1, R5035 += 1, R5036 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R5098 += 1, R5036 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R5100 += 1, R5037 += 1, R5038 += 1 };
  s0 -> s0 [0, 65535] { R5099 += 1, R5100 += 1 };
  s0 -> s2 [0, 65535] { R5100 += 1, R5038 += 1, R84 += 1 };
  s1 -> s1 [0, 65535] { R5100 += 1, R5037 += 1, R5038 += 1 };
  s1 -> s2 [0, 65535] { R5100 += 1, R5038 += 1, R84 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R5100 += 1 };
  s2 -> s2 [0, 65535] { R5100 += 1, R5038 += 1, R84 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5100 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R5102 += 1, R5040 += 1 };
  s0 -> s2 [0, 65535] { R5102 += 1, R5040 += 1, R86 += 1 };
  s0 -> s3 [0, 65535] { R5102 += 1, R5039 += 1, R5040 += 1 };
  s0 -> s0 [0, 65535] { R5101 += 1, R5102 += 1 };
  s0 -> s1 [76, 65535] { R5102 += 1, R5040 += 1 };
  s1 -> s1 [0, 74] { R5102 += 1, R5040 += 1 };
  s1 -> s1 [0, 65535] { R5102 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [76, 65535] { R5102 += 1, R5040 += 1 };
  s2 -> s1 [0, 74] { R5102 += 1, R5040 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R5102 += 1, R5040 += 1, R86 += 1 };
  s2 -> s5 [0, 65535] { R5102 += 1 };
  s2 -> s1 [76, 65535] { R5102 += 1, R5040 += 1 };
  s3 -> s1 [0, 74] { R5102 += 1, R5040 += 1 };
  s3 -> s2 [0, 65535] { R5102 += 1, R5040 += 1, R86 += 1 };
  s3 -> s3 [0, 65535] { R5102 += 1, R5039 += 1, R5040 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [76, 65535] { R5102 += 1, R5040 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5102 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R5104 += 1, R5041 += 1, R5042 += 1 };
  s0 -> s0 [0, 65535] { R5103 += 1, R5104 += 1 };
  s0 -> s2 [0, 65535] { R5104 += 1, R5042 += 1 };
  s0 -> s3 [0, 65535] { R5104 += 1, R5042 += 1, R90 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R5104 += 1, R5041 += 1, R5042 += 1 };
  s1 -> s2 [0, 65535] { R5104 += 1, R5042 += 1 };
  s1 -> s3 [0, 65535] { R5104 += 1, R5042 += 1, R90 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R5104 += 1, R5042 += 1 };
  s2 -> s5 [0, 65535] { R5104 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R5104 += 1, R5042 += 1 };
  s3 -> s3 [0, 65535] { R5104 += 1, R5042 += 1, R90 += 1 };
  s3 -> s5 [0, 65535] { R5104 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5104 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R5106 += 1, R5044 += 1, R95 += 1, R96 += 1 };
  s0 -> s2 [0, 65535] { R5106 += 1, R5044 += 1, R94 += 1, R95 += 1 };
  s0 -> s3 [0, 65535] { R5106 += 1, R5043 += 1, R5044 += 1 };
  s0 -> s0 [0, 65535] { R5105 += 1, R5106 += 1 };
  s1 -> s1 [0, 65535] { R5106 += 1, R5044 += 1, R95 += 1, R96 += 1 };
  s1 -> s6 [0, 65535] { R5106 += 1, R5044 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R5106 += 1 };
  s2 -> s1 [0, 65535] { R5106 += 1, R5044 += 1, R95 += 1, R96 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R5106 += 1, R5044 += 1, R94 += 1, R95 += 1 };
  s2 -> s5 [0, 65535] { R5106 += 1 };
  s3 -> s1 [0, 65535] { R5106 += 1, R5044 += 1, R95 += 1, R96 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R5106 += 1, R5044 += 1, R94 += 1, R95 += 1 };
  s3 -> s3 [0, 65535] { R5106 += 1, R5043 += 1, R5044 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5106 += 1 };
  s6 -> s6 [0, 65535] { R5106 += 1, R5044 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R5106 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R5108 += 1, R5046 += 1, R3455 += 1 };
  s0 -> s0 [0, 65535] { R5107 += 1, R5108 += 1 };
  s0 -> s1 [0, 65535] { R5108 += 1, R5046 += 1 };
  s0 -> s2 [0, 65535] { R5108 += 1, R5045 += 1, R5046 += 1 };
  s0 -> s1 [76, 65535] { R5108 += 1, R5046 += 1, R3455 += 1 };
  s1 -> s1 [0, 74] { R5108 += 1, R5046 += 1, R3455 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R5108 += 1, R5046 += 1 };
  s1 -> s4 [0, 65535] { R5108 += 1 };
  s1 -> s1 [76, 65535] { R5108 += 1, R5046 += 1, R3455 += 1 };
  s2 -> s1 [0, 74] { R5108 += 1, R5046 += 1, R3455 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R5108 += 1, R5046 += 1 };
  s2 -> s2 [0, 65535] { R5108 += 1, R5045 += 1, R5046 += 1 };
  s2 -> s1 [76, 65535] { R5108 += 1, R5046 += 1, R3455 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5108 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R5110 += 1, R5047 += 1, R5048 += 1 };
  s0 -> s0 [0, 65535] { R5109 += 1, R5110 += 1 };
  s0 -> s2 [0, 65535] { R5110 += 1, R5048 += 1 };
  s1 -> s1 [0, 65535] { R5110 += 1, R5047 += 1, R5048 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R5110 += 1, R5048 += 1 };
  s2 -> s3 [0, 65535] { R5110 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R5110 += 1, R5048 += 1 };
  s3 -> s3 [0, 65535] { R5110 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R5112 += 1, R5049 += 1, R5050 += 1 };
  s0 -> s2 [0, 65535] { R5112 += 1, R5050 += 1, R5027 += 1, R5028 += 1, R5029 += 1 };
  s0 -> s3 [0, 65535] { R5112 += 1, R5050 += 1 };
  s0 -> s4 [0, 65535] { R5112 += 1, R5050 += 1, R5027 += 1, R5029 += 1, R5030 += 1 };
  s0 -> s0 [0, 65535] { R5111 += 1, R5112 += 1 };
  s1 -> s1 [0, 65535] { R5112 += 1, R5049 += 1, R5050 += 1 };
  s1 -> s2 [0, 65535] { R5112 += 1, R5050 += 1, R5027 += 1, R5028 += 1, R5029 += 1 };
  s1 -> s3 [0, 65535] { R5112 += 1, R5050 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [0, 65535] { R5112 += 1, R5050 += 1, R5027 += 1, R5029 += 1, R5030 += 1 };
  s2 -> s2 [0, 65535] { R5112 += 1, R5050 += 1, R5027 += 1, R5028 += 1, R5029 += 1 };
  s2 -> s3 [0, 65535] { R5112 += 1, R5050 += 1 };
  s2 -> s5 [0, 65535] { R5112 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [0, 65535] { R5112 += 1, R5050 += 1, R5027 += 1, R5029 += 1, R5030 += 1 };
  s3 -> s3 [0, 65535] { R5112 += 1, R5050 += 1 };
  s3 -> s5 [0, 65535] { R5112 += 1 };
  s3 -> s7 [0, 65535];
  s4 -> s3 [0, 65535] { R5112 += 1, R5050 += 1 };
  s4 -> s5 [0, 65535] { R5112 += 1 };
  s4 -> s6 [0, 65535] { R5112 += 1, R5050 += 1, R5027 += 1 };
  s4 -> s4 [0, 65535] { R5112 += 1, R5050 += 1, R5027 += 1, R5029 += 1, R5030 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R5112 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s3 [0, 65535] { R5112 += 1, R5050 += 1 };
  s6 -> s5 [0, 65535] { R5112 += 1 };
  s6 -> s6 [0, 65535] { R5112 += 1, R5050 += 1, R5027 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R5113 += 1, R5114 += 1 };
  s0 -> s1 [0, 65535] { R5114 += 1, R5069 += 1, R5070 += 1 };
  s0 -> s2 [0, 65535] { R5114 += 1, R5070 += 1, R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R5114 += 1, R5069 += 1, R5070 += 1 };
  s1 -> s2 [0, 65535] { R5114 += 1, R5070 += 1, R21 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5114 += 1, R5070 += 1, R21 += 1 };
  s2 -> s4 [0, 65535] { R5114 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5114 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R5116 += 1, R5072 += 1 };
  s0 -> s2 [0, 65535] { R5116 += 1, R5071 += 1, R5072 += 1 };
  s0 -> s0 [0, 65535] { R5115 += 1, R5116 += 1 };
  s0 -> s3 [70, 70] { R5116 += 1, R5072 += 1 };
  s0 -> s4 [70, 70] { R5116 += 1, R5072 += 1 };
  s0 -> s5 [75, 75] { R5116 += 1, R5072 += 1 };
  s0 -> s1 [76, 65535] { R5116 += 1, R5072 += 1 };
  s1 -> s1 [0, 69] { R5116 += 1, R5072 += 1 };
  s1 -> s3 [70, 70] { R5116 += 1, R5072 += 1 };
  s1 -> s4 [70, 70] { R5116 += 1, R5072 += 1 };
  s1 -> s5 [75, 75] { R5116 += 1, R5072 += 1 };
  s1 -> s1 [76, 65535] { R5116 += 1, R5072 += 1 };
  s2 -> s1 [0, 69] { R5116 += 1, R5072 += 1 };
  s2 -> s2 [0, 65535] { R5116 += 1, R5071 += 1, R5072 += 1 };
  s2 -> s3 [70, 70] { R5116 += 1, R5072 += 1 };
  s2 -> s4 [70, 70] { R5116 += 1, R5072 += 1 };
  s2 -> s5 [75, 75] { R5116 += 1, R5072 += 1 };
  s2 -> s1 [76, 65535] { R5116 += 1, R5072 += 1 };
  s4 -> s4 [0, 70] { R5116 += 1, R5072 += 1 };
  s4 -> s7 [75, 75] { R5116 += 1, R5072 += 1 };
  s4 -> s4 [76, 65535] { R5116 += 1, R5072 += 1 };
  s5 -> s5 [0, 69] { R5116 += 1, R5072 += 1 };
  s5 -> s5 [0, 65535] { R5116 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R5116 += 1, R5072 += 1 };
  s5 -> s8 [70, 70] { R5116 += 1, R5072 += 1 };
  s5 -> s5 [75, 65535] { R5116 += 1, R5072 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R5116 += 1, R5072 += 1 };
  s7 -> s7 [0, 65535] { R5116 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R5116 += 1, R5072 += 1 };
  s8 -> s8 [0, 65535] { R5116 += 1 };
  s8 -> s6 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R5118 += 1, R5074 += 1, R83 += 1 };
  s0 -> s0 [0, 65535] { R5117 += 1, R5118 += 1 };
  s0 -> s2 [0, 65535] { R5118 += 1, R5073 += 1, R5074 += 1 };
  s0 -> s3 [70, 70] { R5118 += 1, R5074 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R5118 += 1, R5074 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R5118 += 1, R5074 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R5118 += 1, R5074 += 1, R83 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5118 += 1 };
  s1 -> s3 [70, 70] { R5118 += 1, R5074 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R5118 += 1, R5074 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R5118 += 1, R5074 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R5118 += 1, R5074 += 1, R83 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5118 += 1, R5073 += 1, R5074 += 1 };
  s2 -> s3 [70, 70] { R5118 += 1, R5074 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R5118 += 1, R5074 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R5118 += 1, R5074 += 1, R83 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5118 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5118 += 1 };
  s4 -> s4 [0, 65535] { R5118 += 1, R5074 += 1, R83 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5118 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R5120 += 1, R5076 += 1, R85 += 1 };
  s0 -> s0 [0, 65535] { R5119 += 1, R5120 += 1 };
  s0 -> s2 [0, 65535] { R5120 += 1, R5075 += 1, R5076 += 1 };
  s0 -> s3 [70, 70] { R5120 += 1, R5076 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R5120 += 1, R5076 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R5120 += 1, R5076 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R5120 += 1, R5076 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R5120 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R5120 += 1, R5076 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R5120 += 1, R5076 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R5120 += 1, R5076 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R5120 += 1, R5076 += 1, R85 += 1 };
  s2 -> s2 [0, 65535] { R5120 += 1, R5075 += 1, R5076 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R5120 += 1, R5076 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R5120 += 1, R5076 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R5120 += 1, R5076 += 1, R85 += 1 };
  s3 -> s3 [0, 65535] { R5120 += 1, R5076 += 1, R85 += 1 };
  s3 -> s6 [0, 65535] { R5120 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5120 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5120 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R5122 += 1, R5078 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R5122 += 1, R5078 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [0, 65535] { R5122 += 1, R5077 += 1, R5078 += 1 };
  s0 -> s0 [0, 65535] { R5121 += 1, R5122 += 1 };
  s0 -> s4 [70, 70] { R5122 += 1, R5078 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R5122 += 1, R5078 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R5122 += 1, R5078 += 1, R87 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R5122 += 1, R5078 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 74] { R5122 += 1, R5078 += 1, R88 += 1 };
  s0 -> s2 [71, 65535] { R5122 += 1, R5078 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R5122 += 1, R5078 += 1, R88 += 1 };
  s0 -> s1 [76, 65535] { R5122 += 1, R5078 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R5122 += 1, R5078 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R5122 += 1, R5078 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R5122 += 1, R5078 += 1, R88 += 1 };
  s1 -> s1 [71, 74] { R5122 += 1, R5078 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R5122 += 1, R5078 += 1, R88 += 1 };
  s1 -> s1 [76, 65535] { R5122 += 1, R5078 += 1, R88 += 1 };
  s2 -> s1 [0, 69] { R5122 += 1, R5078 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R5122 += 1, R5078 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R5122 += 1, R5078 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R5122 += 1, R5078 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R5122 += 1, R5078 += 1, R87 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R5122 += 1, R5078 += 1, R87 += 1, R88 += 1 };
  s2 -> s1 [71, 74] { R5122 += 1, R5078 += 1, R88 += 1 };
  s2 -> s2 [71, 65535] { R5122 += 1, R5078 += 1, R87 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R5122 += 1, R5078 += 1, R88 += 1 };
  s2 -> s1 [76, 65535] { R5122 += 1, R5078 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R5122 += 1, R5078 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R5122 += 1, R5078 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R5122 += 1, R5077 += 1, R5078 += 1 };
  s3 -> s4 [70, 70] { R5122 += 1, R5078 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R5122 += 1, R5078 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R5122 += 1, R5078 += 1, R87 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R5122 += 1, R5078 += 1, R87 += 1, R88 += 1 };
  s3 -> s1 [71, 74] { R5122 += 1, R5078 += 1, R88 += 1 };
  s3 -> s2 [71, 65535] { R5122 += 1, R5078 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R5122 += 1, R5078 += 1, R88 += 1 };
  s3 -> s1 [76, 65535] { R5122 += 1, R5078 += 1, R88 += 1 };
  s5 -> s5 [0, 74] { R5122 += 1, R5078 += 1, R88 += 1 };
  s5 -> s10 [75, 75] { R5122 += 1, R5078 += 1, R88 += 1 };
  s5 -> s5 [76, 65535] { R5122 += 1, R5078 += 1, R88 += 1 };
  s6 -> s5 [0, 74] { R5122 += 1, R5078 += 1, R88 += 1 };
  s6 -> s6 [0, 65535] { R5122 += 1, R5078 += 1, R87 += 1, R88 += 1 };
  s6 -> s10 [75, 75] { R5122 += 1, R5078 += 1, R88 += 1 };
  s6 -> s5 [76, 65535] { R5122 += 1, R5078 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R5122 += 1, R5078 += 1, R88 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R5122 += 1 };
  s8 -> s10 [70, 70] { R5122 += 1, R5078 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R5122 += 1, R5078 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R5122 += 1, R5078 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R5122 += 1, R5078 += 1, R88 += 1 };
  s10 -> s12 [0, 65535] { R5122 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R5122 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R5122 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R5124 += 1, R5080 += 1, R91 += 1, R92 += 1 };
  s0 -> s0 [0, 65535] { R5123 += 1, R5124 += 1 };
  s0 -> s2 [0, 65535] { R5124 += 1, R5079 += 1, R5080 += 1 };
  s0 -> s3 [70, 70] { R5124 += 1, R5080 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R5124 += 1, R5080 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R5124 += 1, R5080 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R5124 += 1, R5080 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 65535] { R5124 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R5124 += 1, R5080 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R5124 += 1, R5080 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R5124 += 1, R5080 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R5124 += 1, R5080 += 1, R91 += 1, R92 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5124 += 1, R5079 += 1, R5080 += 1 };
  s2 -> s3 [70, 70] { R5124 += 1, R5080 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R5124 += 1, R5080 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R5124 += 1, R5080 += 1, R91 += 1, R92 += 1 };
  s3 -> s6 [0, 65535] { R5124 += 1 };
  s3 -> s3 [0, 65535] { R5124 += 1, R5080 += 1, R91 += 1, R92 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5124 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5124 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R5126 += 1, R5082 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s2 [0, 69] { R5126 += 1, R5082 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s3 [0, 69] { R5126 += 1, R5082 += 1, R3452 += 1 };
  s0 -> s4 [0, 65535] { R5126 += 1, R5081 += 1, R5082 += 1 };
  s0 -> s0 [0, 65535] { R5125 += 1, R5126 += 1 };
  s0 -> s5 [70, 70] { R5126 += 1, R5082 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s6 [70, 70] { R5126 += 1, R5082 += 1, R3452 += 1 };
  s0 -> s7 [70, 70] { R5126 += 1, R5082 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s8 [70, 70] { R5126 += 1, R5082 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s9 [70, 70] { R5126 += 1, R5082 += 1, R3452 += 1 };
  s0 -> s10 [70, 70] { R5126 += 1, R5082 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s3 [71, 74] { R5126 += 1, R5082 += 1, R3452 += 1 };
  s0 -> s1 [71, 65535] { R5126 += 1, R5082 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s2 [71, 65535] { R5126 += 1, R5082 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s3 [76, 65535] { R5126 += 1, R5082 += 1, R3452 += 1 };
  s1 -> s1 [0, 69] { R5126 += 1, R5082 += 1, R3451 += 1, R3452 += 1 };
  s1 -> s2 [0, 69] { R5126 += 1, R5082 += 1, R3452 += 1, R3453 += 1 };
  s1 -> s3 [0, 69] { R5126 += 1, R5082 += 1, R3452 += 1 };
  s1 -> s5 [70, 70] { R5126 += 1, R5082 += 1, R3451 += 1, R3452 += 1 };
  s1 -> s6 [70, 70] { R5126 += 1, R5082 += 1, R3452 += 1 };
  s1 -> s7 [70, 70] { R5126 += 1, R5082 += 1, R3452 += 1, R3453 += 1 };
  s1 -> s8 [70, 70] { R5126 += 1, R5082 += 1, R3451 += 1, R3452 += 1 };
  s1 -> s9 [70, 70] { R5126 += 1, R5082 += 1, R3452 += 1 };
  s1 -> s10 [70, 70] { R5126 += 1, R5082 += 1, R3452 += 1, R3453 += 1 };
  s1 -> s3 [71, 74] { R5126 += 1, R5082 += 1, R3452 += 1 };
  s1 -> s1 [71, 65535] { R5126 += 1, R5082 += 1, R3451 += 1, R3452 += 1 };
  s1 -> s2 [71, 65535] { R5126 += 1, R5082 += 1, R3452 += 1, R3453 += 1 };
  s1 -> s3 [76, 65535] { R5126 += 1, R5082 += 1, R3452 += 1 };
  s2 -> s2 [0, 69] { R5126 += 1, R5082 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s3 [0, 69] { R5126 += 1, R5082 += 1, R3452 += 1 };
  s2 -> s6 [70, 70] { R5126 += 1, R5082 += 1, R3452 += 1 };
  s2 -> s7 [70, 70] { R5126 += 1, R5082 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s9 [70, 70] { R5126 += 1, R5082 += 1, R3452 += 1 };
  s2 -> s10 [70, 70] { R5126 += 1, R5082 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s3 [71, 74] { R5126 += 1, R5082 += 1, R3452 += 1 };
  s2 -> s2 [71, 65535] { R5126 += 1, R5082 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s3 [76, 65535] { R5126 += 1, R5082 += 1, R3452 += 1 };
  s3 -> s3 [0, 69] { R5126 += 1, R5082 += 1, R3452 += 1 };
  s3 -> s11 [0, 65535];
  s3 -> s3 [0, 65535] { R5126 += 1 };
  s3 -> s6 [70, 70] { R5126 += 1, R5082 += 1 };
  s3 -> s9 [70, 70] { R5126 += 1, R5082 += 1 };
  s3 -> s3 [71, 74] { R5126 += 1, R5082 += 1, R3452 += 1 };
  s3 -> s3 [71, 65535] { R5126 += 1, R5082 += 1 };
  s3 -> s3 [76, 65535] { R5126 += 1, R5082 += 1, R3452 += 1 };
  s4 -> s1 [0, 69] { R5126 += 1, R5082 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s2 [0, 69] { R5126 += 1, R5082 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s3 [0, 69] { R5126 += 1, R5082 += 1, R3452 += 1 };
  s4 -> s4 [0, 65535] { R5126 += 1, R5081 += 1, R5082 += 1 };
  s4 -> s5 [70, 70] { R5126 += 1, R5082 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s6 [70, 70] { R5126 += 1, R5082 += 1, R3452 += 1 };
  s4 -> s7 [70, 70] { R5126 += 1, R5082 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s8 [70, 70] { R5126 += 1, R5082 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s9 [70, 70] { R5126 += 1, R5082 += 1, R3452 += 1 };
  s4 -> s10 [70, 70] { R5126 += 1, R5082 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s3 [71, 74] { R5126 += 1, R5082 += 1, R3452 += 1 };
  s4 -> s1 [71, 65535] { R5126 += 1, R5082 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s2 [71, 65535] { R5126 += 1, R5082 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s3 [76, 65535] { R5126 += 1, R5082 += 1, R3452 += 1 };
  s5 -> s9 [0, 74] { R5126 += 1, R5082 += 1, R3452 += 1 };
  s5 -> s5 [0, 65535] { R5126 += 1, R5082 += 1, R3451 += 1, R3452 += 1 };
  s5 -> s7 [0, 65535] { R5126 += 1, R5082 += 1, R3452 += 1, R3453 += 1 };
  s5 -> s9 [76, 65535] { R5126 += 1, R5082 += 1, R3452 += 1 };
  s6 -> s6 [0, 65535] { R5126 += 1 };
  s6 -> s11 [0, 65535];
  s7 -> s9 [0, 74] { R5126 += 1, R5082 += 1, R3452 += 1 };
  s7 -> s7 [0, 65535] { R5126 += 1, R5082 += 1, R3452 += 1, R3453 += 1 };
  s7 -> s9 [76, 65535] { R5126 += 1, R5082 += 1, R3452 += 1 };
  s9 -> s9 [0, 74] { R5126 += 1, R5082 += 1, R3452 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s9 [0, 65535] { R5126 += 1, R5082 += 1 };
  s9 -> s12 [0, 65535] { R5126 += 1 };
  s9 -> s9 [76, 65535] { R5126 += 1, R5082 += 1, R3452 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R5126 += 1 };
  accepting s3, s12, s9, s6, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R5128 += 1, R5084 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s0 -> s2 [0, 69] { R5128 += 1, R5084 += 1, R4573 += 1, R4574 += 1 };
  s0 -> s3 [0, 69] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s0 -> s4 [0, 65535] { R5128 += 1, R5083 += 1, R5084 += 1 };
  s0 -> s0 [0, 65535] { R5127 += 1, R5128 += 1 };
  s0 -> s5 [70, 70] { R5128 += 1, R5084 += 1, R4573 += 1, R4574 += 1 };
  s0 -> s6 [70, 70] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s0 -> s7 [70, 70] { R5128 += 1, R5084 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s0 -> s8 [70, 70] { R5128 += 1, R5084 += 1, R4573 += 1, R4574 += 1 };
  s0 -> s9 [70, 70] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s0 -> s10 [70, 70] { R5128 += 1, R5084 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s0 -> s3 [71, 74] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s0 -> s1 [71, 65535] { R5128 += 1, R5084 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s0 -> s2 [71, 65535] { R5128 += 1, R5084 += 1, R4573 += 1, R4574 += 1 };
  s0 -> s11 [75, 75] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s0 -> s3 [76, 65535] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s1 -> s1 [0, 69] { R5128 += 1, R5084 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s1 -> s3 [0, 69] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s1 -> s6 [70, 70] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s1 -> s7 [70, 70] { R5128 += 1, R5084 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s1 -> s9 [70, 70] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s1 -> s10 [70, 70] { R5128 += 1, R5084 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s1 -> s3 [71, 74] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s1 -> s1 [71, 65535] { R5128 += 1, R5084 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s1 -> s11 [75, 75] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s1 -> s3 [76, 65535] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s2 -> s1 [0, 69] { R5128 += 1, R5084 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s2 -> s2 [0, 69] { R5128 += 1, R5084 += 1, R4573 += 1, R4574 += 1 };
  s2 -> s3 [0, 69] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s2 -> s5 [70, 70] { R5128 += 1, R5084 += 1, R4573 += 1, R4574 += 1 };
  s2 -> s6 [70, 70] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s2 -> s7 [70, 70] { R5128 += 1, R5084 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s2 -> s8 [70, 70] { R5128 += 1, R5084 += 1, R4573 += 1, R4574 += 1 };
  s2 -> s9 [70, 70] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s2 -> s10 [70, 70] { R5128 += 1, R5084 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s2 -> s3 [71, 74] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s2 -> s1 [71, 65535] { R5128 += 1, R5084 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s2 -> s2 [71, 65535] { R5128 += 1, R5084 += 1, R4573 += 1, R4574 += 1 };
  s2 -> s11 [75, 75] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s2 -> s3 [76, 65535] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s3 -> s3 [0, 69] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s3 -> s6 [70, 70] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s3 -> s9 [70, 70] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s3 -> s3 [71, 74] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s3 -> s11 [75, 75] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s3 -> s3 [76, 65535] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s4 -> s1 [0, 69] { R5128 += 1, R5084 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s4 -> s2 [0, 69] { R5128 += 1, R5084 += 1, R4573 += 1, R4574 += 1 };
  s4 -> s3 [0, 69] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s4 -> s4 [0, 65535] { R5128 += 1, R5083 += 1, R5084 += 1 };
  s4 -> s5 [70, 70] { R5128 += 1, R5084 += 1, R4573 += 1, R4574 += 1 };
  s4 -> s6 [70, 70] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s4 -> s7 [70, 70] { R5128 += 1, R5084 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s4 -> s8 [70, 70] { R5128 += 1, R5084 += 1, R4573 += 1, R4574 += 1 };
  s4 -> s9 [70, 70] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s4 -> s10 [70, 70] { R5128 += 1, R5084 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s4 -> s3 [71, 74] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s4 -> s1 [71, 65535] { R5128 += 1, R5084 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s4 -> s2 [71, 65535] { R5128 += 1, R5084 += 1, R4573 += 1, R4574 += 1 };
  s4 -> s11 [75, 75] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s4 -> s3 [76, 65535] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s5 -> s6 [0, 74] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s5 -> s5 [0, 65535] { R5128 += 1, R5084 += 1, R4573 += 1, R4574 += 1 };
  s5 -> s7 [0, 65535] { R5128 += 1, R5084 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s5 -> s19 [75, 75] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s5 -> s6 [76, 65535] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s6 -> s6 [0, 74] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s6 -> s19 [75, 75] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s6 -> s6 [76, 65535] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s7 -> s6 [0, 74] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s7 -> s7 [0, 65535] { R5128 += 1, R5084 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s7 -> s19 [75, 75] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s7 -> s6 [76, 65535] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s11 -> s11 [0, 69] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s11 -> s12 [0, 69] { R5128 += 1, R5084 += 1 };
  s11 -> s13 [0, 69] { R5128 += 1, R5084 += 1, R4574 += 1 };
  s11 -> s14 [70, 70] { R5128 += 1, R5084 += 1 };
  s11 -> s15 [70, 70] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s11 -> s16 [70, 70] { R5128 += 1, R5084 += 1, R4574 += 1 };
  s11 -> s17 [70, 70] { R5128 += 1, R5084 += 1 };
  s11 -> s18 [70, 70] { R5128 += 1, R5084 += 1, R4574 += 1 };
  s11 -> s19 [70, 70] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s11 -> s11 [71, 65535] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s11 -> s12 [71, 65535] { R5128 += 1, R5084 += 1 };
  s11 -> s13 [71, 65535] { R5128 += 1, R5084 += 1, R4574 += 1 };
  s12 -> s12 [0, 69] { R5128 += 1, R5084 += 1 };
  s12 -> s20 [0, 65535];
  s12 -> s12 [0, 65535] { R5128 += 1 };
  s12 -> s14 [70, 70] { R5128 += 1, R5084 += 1 };
  s12 -> s17 [70, 70] { R5128 += 1, R5084 += 1 };
  s12 -> s12 [71, 65535] { R5128 += 1, R5084 += 1 };
  s13 -> s12 [0, 69] { R5128 += 1, R5084 += 1 };
  s13 -> s13 [0, 69] { R5128 += 1, R5084 += 1, R4574 += 1 };
  s13 -> s14 [70, 70] { R5128 += 1, R5084 += 1 };
  s13 -> s16 [70, 70] { R5128 += 1, R5084 += 1, R4574 += 1 };
  s13 -> s17 [70, 70] { R5128 += 1, R5084 += 1 };
  s13 -> s18 [70, 70] { R5128 += 1, R5084 += 1, R4574 += 1 };
  s13 -> s12 [71, 65535] { R5128 += 1, R5084 += 1 };
  s13 -> s13 [71, 65535] { R5128 += 1, R5084 += 1, R4574 += 1 };
  s14 -> s14 [0, 65535] { R5128 += 1 };
  s14 -> s20 [0, 65535];
  s17 -> s20 [0, 65535];
  s17 -> s17 [0, 65535] { R5128 += 1, R5084 += 1 };
  s17 -> s21 [0, 65535] { R5128 += 1 };
  s18 -> s17 [0, 65535] { R5128 += 1, R5084 += 1 };
  s18 -> s18 [0, 65535] { R5128 += 1, R5084 += 1, R4574 += 1 };
  s19 -> s17 [0, 65535] { R5128 += 1, R5084 += 1 };
  s19 -> s18 [0, 65535] { R5128 += 1, R5084 += 1, R4574 += 1 };
  s19 -> s19 [0, 65535] { R5128 += 1, R5084 += 1, R4574 += 1, R4576 += 1 };
  s20 -> s20 [0, 65535];
  s21 -> s20 [0, 65535];
  s21 -> s21 [0, 65535] { R5128 += 1 };
  accepting s17, s12, s14, s21, s20;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R5130 += 1, R5086 += 1, R5021 += 1, R5022 += 1 };
  s0 -> s2 [0, 69] { R5130 += 1, R5086 += 1, R5022 += 1, R5023 += 1, R5024 += 1 };
  s0 -> s3 [0, 65535] { R5130 += 1, R5085 += 1, R5086 += 1 };
  s0 -> s0 [0, 65535] { R5129 += 1, R5130 += 1 };
  s0 -> s4 [70, 70] { R5130 += 1, R5086 += 1, R5022 += 1, R5023 += 1, R5024 += 1 };
  s0 -> s5 [70, 70] { R5130 += 1, R5086 += 1, R5022 += 1, R5023 += 1, R5024 += 1 };
  s0 -> s6 [70, 70] { R5130 += 1, R5086 += 1, R5021 += 1, R5022 += 1 };
  s0 -> s7 [70, 70] { R5130 += 1, R5086 += 1, R5021 += 1, R5022 += 1 };
  s0 -> s1 [71, 65535] { R5130 += 1, R5086 += 1, R5021 += 1, R5022 += 1 };
  s0 -> s2 [71, 65535] { R5130 += 1, R5086 += 1, R5022 += 1, R5023 += 1, R5024 += 1 };
  s1 -> s1 [0, 69] { R5130 += 1, R5086 += 1, R5021 += 1, R5022 += 1 };
  s1 -> s2 [0, 69] { R5130 += 1, R5086 += 1, R5022 += 1, R5023 += 1, R5024 += 1 };
  s1 -> s4 [70, 70] { R5130 += 1, R5086 += 1, R5022 += 1, R5023 += 1, R5024 += 1 };
  s1 -> s5 [70, 70] { R5130 += 1, R5086 += 1, R5022 += 1, R5023 += 1, R5024 += 1 };
  s1 -> s6 [70, 70] { R5130 += 1, R5086 += 1, R5021 += 1, R5022 += 1 };
  s1 -> s7 [70, 70] { R5130 += 1, R5086 += 1, R5021 += 1, R5022 += 1 };
  s1 -> s1 [71, 65535] { R5130 += 1, R5086 += 1, R5021 += 1, R5022 += 1 };
  s1 -> s2 [71, 65535] { R5130 += 1, R5086 += 1, R5022 += 1, R5023 += 1, R5024 += 1 };
  s2 -> s2 [0, 69] { R5130 += 1, R5086 += 1, R5022 += 1, R5023 += 1, R5024 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R5130 += 1 };
  s2 -> s4 [70, 70] { R5130 += 1, R5086 += 1, R5022 += 1, R5023 += 1, R5024 += 1 };
  s2 -> s5 [70, 70] { R5130 += 1, R5086 += 1, R5022 += 1, R5023 += 1, R5024 += 1 };
  s2 -> s2 [71, 65535] { R5130 += 1, R5086 += 1, R5022 += 1, R5023 += 1, R5024 += 1 };
  s3 -> s1 [0, 69] { R5130 += 1, R5086 += 1, R5021 += 1, R5022 += 1 };
  s3 -> s2 [0, 69] { R5130 += 1, R5086 += 1, R5022 += 1, R5023 += 1, R5024 += 1 };
  s3 -> s3 [0, 65535] { R5130 += 1, R5085 += 1, R5086 += 1 };
  s3 -> s4 [70, 70] { R5130 += 1, R5086 += 1, R5022 += 1, R5023 += 1, R5024 += 1 };
  s3 -> s5 [70, 70] { R5130 += 1, R5086 += 1, R5022 += 1, R5023 += 1, R5024 += 1 };
  s3 -> s6 [70, 70] { R5130 += 1, R5086 += 1, R5021 += 1, R5022 += 1 };
  s3 -> s7 [70, 70] { R5130 += 1, R5086 += 1, R5021 += 1, R5022 += 1 };
  s3 -> s1 [71, 65535] { R5130 += 1, R5086 += 1, R5021 += 1, R5022 += 1 };
  s3 -> s2 [71, 65535] { R5130 += 1, R5086 += 1, R5022 += 1, R5023 += 1, R5024 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s9 [0, 65535] { R5130 += 1 };
  s4 -> s4 [0, 65535] { R5130 += 1, R5086 += 1, R5022 += 1, R5023 += 1, R5024 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R5130 += 1 };
  s7 -> s4 [0, 65535] { R5130 += 1, R5086 += 1, R5022 += 1, R5023 += 1, R5024 += 1 };
  s7 -> s7 [0, 65535] { R5130 += 1, R5086 += 1, R5021 += 1, R5022 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R5130 += 1 };
  accepting s4, s8, s5, s2, s9;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R5130 && R23 - R5130 = -1 && R24 = R5130 && R25 - R5130 = -1 && R26 = R5130 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R4578 + -1*R4574 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R4578 + -1*R4574 - R66 = 0 && R55 + R96 + R93 + -1*R4580 + -1*R4576 - R68 = 0 && R65 + R4577 + R4573 = 0 && R67 + R4579 + R4575 = 0 && R5071 = 0 && R5072 = 0 && R5077 = 0 && R5078 = 0 && R5081 = 0 && R5082 = 0 && R5083 = 0 && R5084 = 0 && R5085 = 0 && R5086 = 0 && R5087 = 0 && R5088 = R5130 && R5089 = 0 && R5090 = R5130 && R5091 = 0 && R5092 = R5130 && R5093 = 0 && R5094 = R5130 && R5095 = 0 && R5096 = R5130 && R5097 = 0 && R5098 = R5130 && R5099 = 0 && R5100 = R5130 && R5101 = 0 && R5102 = R5130 && R5103 = 0 && R5104 = R5130 && R5105 = 0 && R5106 = R5130 && R5107 = 0 && R5108 = R5130 && R5109 = 0 && R5110 = R5130 && R5111 = 0 && R5112 = R5130 && R5113 = 0 && R5114 = R5130 && R5115 = 0 && R5116 = R5130 && R5117 = 0 && R5118 = R5130 && R5119 = 0 && R5120 = R5130 && R5121 = 0 && R5122 = R5130 && R5123 = 0 && R5124 = R5130 && R5125 = 0 && R5126 = R5130 && R5127 = 0 && R5128 = R5130 && R5129 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R3456 + R3453 < 1 && -1*R4578 + -1*R4574 - R66 < 1 && -1*R4580 + -1*R4576 - R68 < 1 && 0 < R5130 && (R2 != 0 || R20 = 0 || (R5031 = 0 && R5032 = 0)) && (R2 != 0 || R20 = 0 || (R5033 = 0 && R5034 = 0)) && (R2 != 0 || R20 = 0 || (R5035 = 0 && R5036 = 0)) && (R2 != 0 || R20 = 0 || (R5037 = 0 && R5038 = 0)) && (R2 != 0 || R20 = 0 || (R5039 = 0 && R5040 = 0)) && (R2 != 0 || R20 = 0 || (R5041 = 0 && R5042 = 0)) && (R2 != 0 || R20 = 0 || (R5043 = 0 && R5044 = 0)) && (R2 != 0 || R20 = 0 || (R5045 = 0 && R5046 = 0)) && (R2 != 0 || R20 = 0 || (R5047 = 0 && R5048 = 0)) && (R2 != 0 || R20 = 0 || (R5049 = 0 && R5050 = 0)) && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R4578 + -1*R4574 - R66 = 0 || R66 + R4578 + R4574 < 1) && (R59 + R3454 + R3451 != 0 || R60 + R3455 + R3452 + -1*R4578 + -1*R4574 - R66 = 0 || R66 + R4578 + R4574 < 1) && (R66 + R4578 + R4574 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R4580 + R4576 < 1) && (R53 + R94 + R91 = 0 || R68 + R4580 + R4576 < 1))) && (R66 + R4578 + R4574 != 0 || ((R59 + R3454 + R3451 != 0 || R60 + R3455 + R3452 = 0 || R68 + R4580 + R4576 < 1) && (R59 + R3454 + R3451 = 0 || R68 + R4580 + R4576 < 1))) && (R66 + R4578 + R4574 != 0 || ((R73 + R5026 + R5021 != 0 || R74 + R5027 + R5022 = 0 || R68 + R4580 + R4576 < 1) && (R73 + R5026 + R5021 = 0 || R68 + R4580 + R4576 < 1))) && (R68 + R4580 + R4576 != 0 || R77 + R5030 + R5025 = 0 || (R75 + R5028 + R5023 = 0 && R76 + R5029 + R5024 = 0)) && (R73 + R5026 + R5021 != 0 || R66 + R4578 + R4574 + -1*R5027 + -1*R5022 - R74 = 0 || R66 + R4578 + R4574 < 1) && (R75 + R5028 + R5023 != 0 || R68 + R4580 + R4576 + -1*R5029 + -1*R5024 - R76 = 0 || R68 + R4580 + R4576 < 1) && (R5031 != 0 || R2 = R5032 || R2 < 1) && (R5033 != 0 || R2 = R5034 || R2 < 1) && (R5035 != 0 || R2 = R5036 || R2 < 1) && (R5037 != 0 || R2 = R5038 || R2 < 1) && (R5039 != 0 || R2 = R5040 || R2 < 1) && (R5041 != 0 || R2 = R5042 || R2 < 1) && (R5043 != 0 || R2 = R5044 || R2 < 1) && (R5045 != 0 || R2 = R5046 || R2 < 1) && (R5047 != 0 || R2 = R5048 || R2 < 1) && (R5049 != 0 || R2 = R5050 || R2 < 1) && (R21 = 0 || (R5069 = 0 && R5070 = 0)) && (R21 = 0 || (R5073 = 0 && R5074 = 0)) && (R21 = 0 || (R5075 = 0 && R5076 = 0)) && (R21 = 0 || (R5079 = 0 && R5080 = 0)) && (R22 = 0 || (R5051 = 0 && R5052 = 0)) && (R22 = 0 || (R5053 = 0 && R5054 = 0)) && (R22 = 0 || (R5055 = 0 && R5056 = 0)) && (R22 = 0 || (R5057 = 0 && R5058 = 0)) && (R22 = 0 || (R5059 = 0 && R5060 = 0)) && (R22 = 0 || (R5061 = 0 && R5062 = 0)) && (R22 = 0 || (R5063 = 0 && R5064 = 0)) && (R22 = 0 || (R5065 = 0 && R5066 = 0)) && (R22 = 0 || (R5067 = 0 && R5068 = 0)) && (R53 + R94 + R91 = 0 || R66 + R4578 + R4574 < 1) && (R59 + R3454 + R3451 = 0 || R66 + R4578 + R4574 < 1) && (R73 + R5026 + R5021 = 0 || R66 + R4578 + R4574 < 1) && (R75 + R5028 + R5023 = 0 || R68 + R4580 + R4576 < 1) && (R5031 = 0 || R2 < 1) && (R5033 = 0 || R2 < 1) && (R5035 = 0 || R2 < 1) && (R5037 = 0 || R2 < 1) && (R5039 = 0 || R2 < 1) && (R5041 = 0 || R2 < 1) && (R5043 = 0 || R2 < 1) && (R5045 = 0 || R2 < 1) && (R5047 = 0 || R2 < 1) && (R5049 = 0 || R2 < 1);
// End of Parikh automata intersection problem
