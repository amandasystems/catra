// Parikh automata intersection problem, generated by OSTRICH+
counter int
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R15568 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R15567 += 1, R15568 += 1 };
  s1 -> s1 [0, 65535] { R15568 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R15570 += 1 };
  s0 -> s0 [0, 65535] { R15569 += 1, R15570 += 1 };
  s0 -> s2 [70, 70] { R15570 += 1 };
  s0 -> s3 [70, 70] { R15570 += 1 };
  s0 -> s1 [76, 65535] { R15570 += 1 };
  s1 -> s1 [0, 69] { R15570 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15570 += 1 };
  s1 -> s3 [70, 70] { R15570 += 1 };
  s1 -> s1 [76, 65535] { R15570 += 1 };
  s2 -> s2 [0, 70] { R15570 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R15570 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R15572 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R15571 += 1, R15572 += 1 };
  s0 -> s2 [70, 70] { R15572 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R15572 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R15572 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R15572 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15572 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R15572 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R15572 += 1, R45 += 1 };
  s2 -> s2 [0, 65535] { R15572 += 1, R45 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R15574 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R15573 += 1, R15574 += 1 };
  s0 -> s2 [70, 70] { R15574 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R15574 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R15574 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R15574 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15574 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R15574 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R15574 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R15574 += 1, R47 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R15576 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R15575 += 1, R15576 += 1 };
  s0 -> s2 [70, 70] { R15576 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R15576 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R15576 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R15576 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15576 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R15576 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R15576 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R15576 += 1, R49 += 1, R50 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R15578 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R15577 += 1, R15578 += 1 };
  s0 -> s2 [70, 70] { R15578 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R15578 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R15578 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R15578 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15578 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R15578 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R15578 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535] { R15578 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R15580 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R15579 += 1, R15580 += 1 };
  s0 -> s2 [70, 70] { R15580 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R15580 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R15580 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R15580 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15580 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R15580 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R15580 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R15580 += 1, R59 += 1, R60 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R15582 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R15581 += 1, R15582 += 1 };
  s0 -> s2 [70, 70] { R15582 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R15582 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R15582 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R15582 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15582 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R15582 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R15582 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R15582 += 1, R65 += 1, R66 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R15584 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R15583 += 1, R15584 += 1 };
  s0 -> s2 [70, 70] { R15584 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R15584 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R15584 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R15584 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15584 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R15584 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R15584 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R15584 += 1, R73 += 1, R74 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R15604 += 1 };
  s0 -> s0 [0, 65535] { R15603 += 1, R15604 += 1 };
  s0 -> s2 [70, 70] { R15604 += 1 };
  s0 -> s1 [71, 65535] { R15604 += 1 };
  s1 -> s1 [0, 69] { R15604 += 1 };
  s1 -> s2 [70, 70] { R15604 += 1 };
  s1 -> s1 [71, 65535] { R15604 += 1 };
  s2 -> s2 [0, 65535] { R15604 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R15606 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R15605 += 1, R15606 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R15606 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R15608 += 1 };
  s0 -> s0 [0, 65535] { R15607 += 1, R15608 += 1 };
  s0 -> s2 [0, 65535] { R15608 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R15608 += 1 };
  s0 -> s1 [71, 65535] { R15608 += 1 };
  s1 -> s1 [0, 69] { R15608 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R15608 += 1 };
  s1 -> s1 [71, 65535] { R15608 += 1 };
  s2 -> s1 [0, 69] { R15608 += 1 };
  s2 -> s2 [0, 65535] { R15608 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R15608 += 1 };
  s2 -> s1 [71, 65535] { R15608 += 1 };
  s3 -> s3 [0, 65535] { R15608 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R15610 += 1, R15548 += 1 };
  s0 -> s2 [0, 65535] { R15610 += 1, R15547 += 1, R15548 += 1 };
  s0 -> s0 [0, 65535] { R15609 += 1, R15610 += 1 };
  s0 -> s1 [71, 65535] { R15610 += 1, R15548 += 1 };
  s1 -> s1 [0, 69] { R15610 += 1, R15548 += 1 };
  s1 -> s1 [0, 65535] { R15610 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R15610 += 1, R15548 += 1 };
  s2 -> s1 [0, 69] { R15610 += 1, R15548 += 1 };
  s2 -> s2 [0, 65535] { R15610 += 1, R15547 += 1, R15548 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R15610 += 1, R15548 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R15612 += 1, R15550 += 1, R20 += 1 };
  s0 -> s0 [0, 65535] { R15611 += 1, R15612 += 1 };
  s0 -> s2 [0, 65535] { R15612 += 1, R15549 += 1, R15550 += 1 };
  s1 -> s1 [0, 65535] { R15612 += 1, R15550 += 1, R20 += 1 };
  s1 -> s4 [0, 65535] { R15612 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R15612 += 1, R15550 += 1, R20 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R15612 += 1, R15549 += 1, R15550 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R15612 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R15614 += 1, R15552 += 1 };
  s0 -> s2 [0, 65535] { R15614 += 1, R15551 += 1, R15552 += 1 };
  s0 -> s0 [0, 65535] { R15613 += 1, R15614 += 1 };
  s0 -> s1 [75, 65535] { R15614 += 1, R15552 += 1 };
  s1 -> s1 [0, 70] { R15614 += 1, R15552 += 1 };
  s1 -> s1 [0, 65535] { R15614 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R15614 += 1, R15552 += 1 };
  s2 -> s1 [0, 70] { R15614 += 1, R15552 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R15614 += 1, R15551 += 1, R15552 += 1 };
  s2 -> s1 [75, 65535] { R15614 += 1, R15552 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R15615 += 1, R15616 += 1 };
  s0 -> s1 [0, 65535] { R15616 += 1, R15553 += 1, R15554 += 1 };
  s0 -> s2 [0, 65535] { R15616 += 1, R15554 += 1, R84 += 1 };
  s1 -> s1 [0, 65535] { R15616 += 1, R15553 += 1, R15554 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R15616 += 1, R15554 += 1, R84 += 1 };
  s2 -> s3 [0, 65535] { R15616 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R15616 += 1, R15554 += 1, R84 += 1 };
  s3 -> s3 [0, 65535] { R15616 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R15618 += 1, R15556 += 1 };
  s0 -> s2 [0, 65535] { R15618 += 1, R15556 += 1, R86 += 1 };
  s0 -> s3 [0, 65535] { R15618 += 1, R15555 += 1, R15556 += 1 };
  s0 -> s0 [0, 65535] { R15617 += 1, R15618 += 1 };
  s0 -> s1 [76, 65535] { R15618 += 1, R15556 += 1 };
  s1 -> s1 [0, 74] { R15618 += 1, R15556 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R15618 += 1 };
  s1 -> s1 [76, 65535] { R15618 += 1, R15556 += 1 };
  s2 -> s1 [0, 74] { R15618 += 1, R15556 += 1 };
  s2 -> s2 [0, 65535] { R15618 += 1, R15556 += 1, R86 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R15618 += 1 };
  s2 -> s1 [76, 65535] { R15618 += 1, R15556 += 1 };
  s3 -> s1 [0, 74] { R15618 += 1, R15556 += 1 };
  s3 -> s2 [0, 65535] { R15618 += 1, R15556 += 1, R86 += 1 };
  s3 -> s3 [0, 65535] { R15618 += 1, R15555 += 1, R15556 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [76, 65535] { R15618 += 1, R15556 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R15618 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s0 [0, 65535] { R15619 += 1, R15620 += 1 };
  s0 -> s1 [0, 65535] { R15620 += 1, R15558 += 1 };
  s0 -> s2 [0, 65535] { R15620 += 1, R15558 += 1, R90 += 1 };
  s0 -> s3 [0, 65535] { R15620 += 1, R15557 += 1, R15558 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R15620 += 1, R15558 += 1 };
  s1 -> s5 [0, 65535] { R15620 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R15620 += 1, R15558 += 1 };
  s2 -> s2 [0, 65535] { R15620 += 1, R15558 += 1, R90 += 1 };
  s2 -> s5 [0, 65535] { R15620 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R15620 += 1, R15558 += 1 };
  s3 -> s2 [0, 65535] { R15620 += 1, R15558 += 1, R90 += 1 };
  s3 -> s3 [0, 65535] { R15620 += 1, R15557 += 1, R15558 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R15620 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R15621 += 1, R15622 += 1 };
  s0 -> s1 [0, 65535] { R15622 += 1, R15560 += 1, R13517 += 1, R13518 += 1 };
  s0 -> s2 [0, 65535] { R15622 += 1, R15559 += 1, R15560 += 1 };
  s0 -> s3 [0, 65535] { R15622 += 1, R15560 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R15622 += 1, R15560 += 1, R13517 += 1, R13518 += 1 };
  s1 -> s5 [0, 65535] { R15622 += 1 };
  s1 -> s3 [0, 65535] { R15622 += 1, R15560 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R15622 += 1, R15560 += 1, R13517 += 1, R13518 += 1 };
  s2 -> s2 [0, 65535] { R15622 += 1, R15559 += 1, R15560 += 1 };
  s2 -> s3 [0, 65535] { R15622 += 1, R15560 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R15622 += 1 };
  s3 -> s3 [0, 65535] { R15622 += 1, R15560 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R15622 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R15624 += 1, R15562 += 1, R13523 += 1 };
  s0 -> s0 [0, 65535] { R15623 += 1, R15624 += 1 };
  s0 -> s2 [0, 65535] { R15624 += 1, R15561 += 1, R15562 += 1 };
  s0 -> s3 [0, 65535] { R15624 += 1, R15562 += 1, R13523 += 1, R13524 += 1 };
  s0 -> s4 [0, 65535] { R15624 += 1, R15562 += 1, R13522 += 1, R13523 += 1 };
  s0 -> s1 [76, 65535] { R15624 += 1, R15562 += 1, R13523 += 1 };
  s1 -> s1 [0, 74] { R15624 += 1, R15562 += 1, R13523 += 1 };
  s1 -> s5 [0, 65535] { R15624 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R15624 += 1, R15562 += 1 };
  s1 -> s1 [76, 65535] { R15624 += 1, R15562 += 1, R13523 += 1 };
  s2 -> s1 [0, 74] { R15624 += 1, R15562 += 1, R13523 += 1 };
  s2 -> s2 [0, 65535] { R15624 += 1, R15561 += 1, R15562 += 1 };
  s2 -> s3 [0, 65535] { R15624 += 1, R15562 += 1, R13523 += 1, R13524 += 1 };
  s2 -> s4 [0, 65535] { R15624 += 1, R15562 += 1, R13522 += 1, R13523 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [76, 65535] { R15624 += 1, R15562 += 1, R13523 += 1 };
  s3 -> s1 [0, 74] { R15624 += 1, R15562 += 1, R13523 += 1 };
  s3 -> s5 [0, 65535] { R15624 += 1 };
  s3 -> s3 [0, 65535] { R15624 += 1, R15562 += 1, R13523 += 1, R13524 += 1 };
  s3 -> s7 [0, 65535] { R15624 += 1, R15562 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [76, 65535] { R15624 += 1, R15562 += 1, R13523 += 1 };
  s4 -> s1 [0, 74] { R15624 += 1, R15562 += 1, R13523 += 1 };
  s4 -> s5 [0, 65535] { R15624 += 1 };
  s4 -> s3 [0, 65535] { R15624 += 1, R15562 += 1, R13523 += 1, R13524 += 1 };
  s4 -> s4 [0, 65535] { R15624 += 1, R15562 += 1, R13522 += 1, R13523 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s1 [76, 65535] { R15624 += 1, R15562 += 1, R13523 += 1 };
  s5 -> s5 [0, 65535] { R15624 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R15624 += 1 };
  s7 -> s7 [0, 65535] { R15624 += 1, R15562 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 74] { R15626 += 1, R15564 += 1, R15204 += 1, R15206 += 1 };
  s0 -> s0 [0, 65535] { R15625 += 1, R15626 += 1 };
  s0 -> s2 [0, 65535] { R15626 += 1, R15563 += 1, R15564 += 1 };
  s0 -> s3 [0, 65535] { R15626 += 1, R15564 += 1, R15203 += 1, R15204 += 1 };
  s0 -> s4 [0, 65535] { R15626 += 1, R15564 += 1, R15204 += 1, R15205 += 1, R15206 += 1 };
  s0 -> s5 [75, 75] { R15626 += 1, R15564 += 1, R15204 += 1, R15206 += 1 };
  s0 -> s1 [76, 65535] { R15626 += 1, R15564 += 1, R15204 += 1, R15206 += 1 };
  s1 -> s1 [0, 74] { R15626 += 1, R15564 += 1, R15204 += 1, R15206 += 1 };
  s1 -> s5 [75, 75] { R15626 += 1, R15564 += 1, R15204 += 1, R15206 += 1 };
  s1 -> s1 [76, 65535] { R15626 += 1, R15564 += 1, R15204 += 1, R15206 += 1 };
  s2 -> s1 [0, 74] { R15626 += 1, R15564 += 1, R15204 += 1, R15206 += 1 };
  s2 -> s2 [0, 65535] { R15626 += 1, R15563 += 1, R15564 += 1 };
  s2 -> s3 [0, 65535] { R15626 += 1, R15564 += 1, R15203 += 1, R15204 += 1 };
  s2 -> s4 [0, 65535] { R15626 += 1, R15564 += 1, R15204 += 1, R15205 += 1, R15206 += 1 };
  s2 -> s5 [75, 75] { R15626 += 1, R15564 += 1, R15204 += 1, R15206 += 1 };
  s2 -> s1 [76, 65535] { R15626 += 1, R15564 += 1, R15204 += 1, R15206 += 1 };
  s3 -> s1 [0, 74] { R15626 += 1, R15564 += 1, R15204 += 1, R15206 += 1 };
  s3 -> s3 [0, 65535] { R15626 += 1, R15564 += 1, R15203 += 1, R15204 += 1 };
  s3 -> s4 [0, 65535] { R15626 += 1, R15564 += 1, R15204 += 1, R15205 += 1, R15206 += 1 };
  s3 -> s5 [75, 75] { R15626 += 1, R15564 += 1, R15204 += 1, R15206 += 1 };
  s3 -> s1 [76, 65535] { R15626 += 1, R15564 += 1, R15204 += 1, R15206 += 1 };
  s4 -> s1 [0, 74] { R15626 += 1, R15564 += 1, R15204 += 1, R15206 += 1 };
  s4 -> s4 [0, 65535] { R15626 += 1, R15564 += 1, R15204 += 1, R15205 += 1, R15206 += 1 };
  s4 -> s5 [75, 75] { R15626 += 1, R15564 += 1, R15204 += 1, R15206 += 1 };
  s4 -> s1 [76, 65535] { R15626 += 1, R15564 += 1, R15204 += 1, R15206 += 1 };
  s5 -> s5 [0, 65535] { R15626 += 1, R15564 += 1, R15204 += 1, R15206 += 1 };
  s5 -> s6 [0, 65535] { R15626 += 1, R15564 += 1, R15204 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R15626 += 1, R15564 += 1 };
  s5 -> s9 [0, 65535] { R15626 += 1 };
  s6 -> s6 [0, 65535] { R15626 += 1, R15564 += 1, R15204 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R15626 += 1, R15564 += 1 };
  s6 -> s9 [0, 65535] { R15626 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R15626 += 1, R15564 += 1 };
  s8 -> s9 [0, 65535] { R15626 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s9 [0, 65535] { R15626 += 1 };
  accepting s8, s5, s9, s6, s7;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R15628 += 1, R15565 += 1, R15566 += 1 };
  s0 -> s2 [0, 65535] { R15628 += 1, R15566 += 1 };
  s0 -> s3 [0, 65535] { R15628 += 1, R15566 += 1, R15543 += 1 };
  s0 -> s4 [0, 65535] { R15628 += 1, R15566 += 1, R15543 += 1, R15545 += 1, R15546 += 1 };
  s0 -> s0 [0, 65535] { R15627 += 1, R15628 += 1 };
  s1 -> s1 [0, 65535] { R15628 += 1, R15565 += 1, R15566 += 1 };
  s1 -> s2 [0, 65535] { R15628 += 1, R15566 += 1 };
  s1 -> s3 [0, 65535] { R15628 += 1, R15566 += 1, R15543 += 1 };
  s1 -> s4 [0, 65535] { R15628 += 1, R15566 += 1, R15543 += 1, R15545 += 1, R15546 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R15628 += 1, R15566 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R15628 += 1 };
  s3 -> s2 [0, 65535] { R15628 += 1, R15566 += 1 };
  s3 -> s3 [0, 65535] { R15628 += 1, R15566 += 1, R15543 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R15628 += 1 };
  s4 -> s2 [0, 65535] { R15628 += 1, R15566 += 1 };
  s4 -> s3 [0, 65535] { R15628 += 1, R15566 += 1, R15543 += 1 };
  s4 -> s4 [0, 65535] { R15628 += 1, R15566 += 1, R15543 += 1, R15545 += 1, R15546 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R15628 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15628 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R15629 += 1, R15630 += 1 };
  s0 -> s1 [0, 65535] { R15630 += 1, R15586 += 1, R21 += 1 };
  s0 -> s2 [0, 65535] { R15630 += 1, R15585 += 1, R15586 += 1 };
  s1 -> s4 [0, 65535] { R15630 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R15630 += 1, R15586 += 1, R21 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R15630 += 1, R15586 += 1, R21 += 1 };
  s2 -> s2 [0, 65535] { R15630 += 1, R15585 += 1, R15586 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R15630 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R15632 += 1, R15588 += 1 };
  s0 -> s0 [0, 65535] { R15631 += 1, R15632 += 1 };
  s0 -> s2 [0, 65535] { R15632 += 1, R15587 += 1, R15588 += 1 };
  s0 -> s3 [70, 70] { R15632 += 1, R15588 += 1 };
  s0 -> s4 [70, 70] { R15632 += 1, R15588 += 1 };
  s0 -> s5 [75, 75] { R15632 += 1, R15588 += 1 };
  s0 -> s1 [76, 65535] { R15632 += 1, R15588 += 1 };
  s1 -> s1 [0, 69] { R15632 += 1, R15588 += 1 };
  s1 -> s3 [70, 70] { R15632 += 1, R15588 += 1 };
  s1 -> s4 [70, 70] { R15632 += 1, R15588 += 1 };
  s1 -> s5 [75, 75] { R15632 += 1, R15588 += 1 };
  s1 -> s1 [76, 65535] { R15632 += 1, R15588 += 1 };
  s2 -> s1 [0, 69] { R15632 += 1, R15588 += 1 };
  s2 -> s2 [0, 65535] { R15632 += 1, R15587 += 1, R15588 += 1 };
  s2 -> s3 [70, 70] { R15632 += 1, R15588 += 1 };
  s2 -> s4 [70, 70] { R15632 += 1, R15588 += 1 };
  s2 -> s5 [75, 75] { R15632 += 1, R15588 += 1 };
  s2 -> s1 [76, 65535] { R15632 += 1, R15588 += 1 };
  s3 -> s3 [0, 70] { R15632 += 1, R15588 += 1 };
  s3 -> s8 [75, 75] { R15632 += 1, R15588 += 1 };
  s3 -> s3 [76, 65535] { R15632 += 1, R15588 += 1 };
  s5 -> s5 [0, 69] { R15632 += 1, R15588 += 1 };
  s5 -> s5 [0, 65535] { R15632 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R15632 += 1, R15588 += 1 };
  s5 -> s8 [70, 70] { R15632 += 1, R15588 += 1 };
  s5 -> s5 [75, 65535] { R15632 += 1, R15588 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R15632 += 1 };
  s8 -> s8 [0, 70] { R15632 += 1, R15588 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R15632 += 1 };
  s8 -> s8 [75, 65535] { R15632 += 1, R15588 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R15634 += 1, R15590 += 1, R83 += 1 };
  s0 -> s0 [0, 65535] { R15633 += 1, R15634 += 1 };
  s0 -> s2 [0, 65535] { R15634 += 1, R15589 += 1, R15590 += 1 };
  s0 -> s3 [70, 70] { R15634 += 1, R15590 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R15634 += 1, R15590 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R15634 += 1, R15590 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R15634 += 1, R15590 += 1, R83 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R15634 += 1 };
  s1 -> s3 [70, 70] { R15634 += 1, R15590 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R15634 += 1, R15590 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R15634 += 1, R15590 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R15634 += 1, R15590 += 1, R83 += 1 };
  s2 -> s2 [0, 65535] { R15634 += 1, R15589 += 1, R15590 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R15634 += 1, R15590 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R15634 += 1, R15590 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R15634 += 1, R15590 += 1, R83 += 1 };
  s3 -> s3 [0, 65535] { R15634 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R15634 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R15634 += 1, R15590 += 1, R83 += 1 };
  s5 -> s5 [0, 65535] { R15634 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R15636 += 1, R15592 += 1, R85 += 1 };
  s0 -> s2 [0, 65535] { R15636 += 1, R15591 += 1, R15592 += 1 };
  s0 -> s0 [0, 65535] { R15635 += 1, R15636 += 1 };
  s0 -> s3 [70, 70] { R15636 += 1, R15592 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R15636 += 1, R15592 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R15636 += 1, R15592 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R15636 += 1, R15592 += 1, R85 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R15636 += 1 };
  s1 -> s3 [70, 70] { R15636 += 1, R15592 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R15636 += 1, R15592 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R15636 += 1, R15592 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R15636 += 1, R15592 += 1, R85 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R15636 += 1, R15591 += 1, R15592 += 1 };
  s2 -> s3 [70, 70] { R15636 += 1, R15592 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R15636 += 1, R15592 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R15636 += 1, R15592 += 1, R85 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R15636 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R15636 += 1 };
  s4 -> s4 [0, 65535] { R15636 += 1, R15592 += 1, R85 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15636 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R15638 += 1, R15594 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R15638 += 1, R15594 += 1, R88 += 1 };
  s0 -> s3 [0, 65535] { R15638 += 1, R15593 += 1, R15594 += 1 };
  s0 -> s0 [0, 65535] { R15637 += 1, R15638 += 1 };
  s0 -> s4 [70, 70] { R15638 += 1, R15594 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R15638 += 1, R15594 += 1, R87 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R15638 += 1, R15594 += 1, R87 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R15638 += 1, R15594 += 1, R88 += 1 };
  s0 -> s2 [71, 74] { R15638 += 1, R15594 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R15638 += 1, R15594 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R15638 += 1, R15594 += 1, R88 += 1 };
  s0 -> s2 [76, 65535] { R15638 += 1, R15594 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R15638 += 1, R15594 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [0, 69] { R15638 += 1, R15594 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R15638 += 1, R15594 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R15638 += 1, R15594 += 1, R87 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R15638 += 1, R15594 += 1, R87 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R15638 += 1, R15594 += 1, R88 += 1 };
  s1 -> s2 [71, 74] { R15638 += 1, R15594 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R15638 += 1, R15594 += 1, R87 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R15638 += 1, R15594 += 1, R88 += 1 };
  s1 -> s2 [76, 65535] { R15638 += 1, R15594 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R15638 += 1, R15594 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R15638 += 1, R15594 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R15638 += 1, R15594 += 1, R88 += 1 };
  s2 -> s2 [71, 74] { R15638 += 1, R15594 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R15638 += 1, R15594 += 1, R88 += 1 };
  s2 -> s2 [76, 65535] { R15638 += 1, R15594 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R15638 += 1, R15594 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R15638 += 1, R15594 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R15638 += 1, R15593 += 1, R15594 += 1 };
  s3 -> s4 [70, 70] { R15638 += 1, R15594 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R15638 += 1, R15594 += 1, R87 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R15638 += 1, R15594 += 1, R87 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R15638 += 1, R15594 += 1, R88 += 1 };
  s3 -> s2 [71, 74] { R15638 += 1, R15594 += 1, R88 += 1 };
  s3 -> s1 [71, 65535] { R15638 += 1, R15594 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R15638 += 1, R15594 += 1, R88 += 1 };
  s3 -> s2 [76, 65535] { R15638 += 1, R15594 += 1, R88 += 1 };
  s6 -> s7 [0, 74] { R15638 += 1, R15594 += 1, R88 += 1 };
  s6 -> s6 [0, 65535] { R15638 += 1, R15594 += 1, R87 += 1, R88 += 1 };
  s6 -> s10 [75, 75] { R15638 += 1, R15594 += 1, R88 += 1 };
  s6 -> s7 [76, 65535] { R15638 += 1, R15594 += 1, R88 += 1 };
  s7 -> s7 [0, 74] { R15638 += 1, R15594 += 1, R88 += 1 };
  s7 -> s10 [75, 75] { R15638 += 1, R15594 += 1, R88 += 1 };
  s7 -> s7 [76, 65535] { R15638 += 1, R15594 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R15638 += 1, R15594 += 1, R88 += 1 };
  s8 -> s8 [0, 65535] { R15638 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R15638 += 1, R15594 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R15638 += 1, R15594 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R15638 += 1, R15594 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R15638 += 1, R15594 += 1, R88 += 1 };
  s10 -> s12 [0, 65535] { R15638 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R15638 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R15638 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R15640 += 1, R15596 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s2 [0, 69] { R15640 += 1, R15596 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s0 [0, 65535] { R15639 += 1, R15640 += 1 };
  s0 -> s3 [0, 65535] { R15640 += 1, R15595 += 1, R15596 += 1 };
  s0 -> s4 [70, 70] { R15640 += 1, R15596 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s5 [70, 70] { R15640 += 1, R15596 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s6 [70, 70] { R15640 += 1, R15596 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s7 [70, 70] { R15640 += 1, R15596 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s1 [71, 65535] { R15640 += 1, R15596 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s2 [71, 65535] { R15640 += 1, R15596 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s1 [0, 69] { R15640 += 1, R15596 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s2 [0, 69] { R15640 += 1, R15596 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s4 [70, 70] { R15640 += 1, R15596 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s5 [70, 70] { R15640 += 1, R15596 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s6 [70, 70] { R15640 += 1, R15596 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s7 [70, 70] { R15640 += 1, R15596 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s1 [71, 65535] { R15640 += 1, R15596 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s2 [71, 65535] { R15640 += 1, R15596 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [0, 69] { R15640 += 1, R15596 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R15640 += 1 };
  s2 -> s5 [70, 70] { R15640 += 1, R15596 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s6 [70, 70] { R15640 += 1, R15596 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [71, 65535] { R15640 += 1, R15596 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s1 [0, 69] { R15640 += 1, R15596 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s2 [0, 69] { R15640 += 1, R15596 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s3 [0, 65535] { R15640 += 1, R15595 += 1, R15596 += 1 };
  s3 -> s4 [70, 70] { R15640 += 1, R15596 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s5 [70, 70] { R15640 += 1, R15596 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s6 [70, 70] { R15640 += 1, R15596 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s7 [70, 70] { R15640 += 1, R15596 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s1 [71, 65535] { R15640 += 1, R15596 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s2 [71, 65535] { R15640 += 1, R15596 += 1, R13514 += 1, R13515 += 1 };
  s5 -> s5 [0, 65535] { R15640 += 1, R15596 += 1, R13514 += 1, R13515 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s9 [0, 65535] { R15640 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R15640 += 1 };
  s7 -> s5 [0, 65535] { R15640 += 1, R15596 += 1, R13514 += 1, R13515 += 1 };
  s7 -> s7 [0, 65535] { R15640 += 1, R15596 += 1, R13513 += 1, R13514 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R15640 += 1 };
  accepting s8, s5, s2, s9, s6;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R15642 += 1, R15598 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s2 [0, 65535] { R15642 += 1, R15597 += 1, R15598 += 1 };
  s0 -> s0 [0, 65535] { R15641 += 1, R15642 += 1 };
  s0 -> s3 [70, 70] { R15642 += 1, R15598 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s4 [70, 70] { R15642 += 1, R15598 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s1 [71, 65535] { R15642 += 1, R15598 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [0, 69] { R15642 += 1, R15598 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [0, 65535] { R15642 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R15642 += 1, R15598 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s4 [70, 70] { R15642 += 1, R15598 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [71, 65535] { R15642 += 1, R15598 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s1 [0, 69] { R15642 += 1, R15598 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s2 [0, 65535] { R15642 += 1, R15597 += 1, R15598 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R15642 += 1, R15598 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s4 [70, 70] { R15642 += 1, R15598 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s1 [71, 65535] { R15642 += 1, R15598 += 1, R13519 += 1, R13520 += 1 };
  s3 -> s3 [0, 65535] { R15642 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R15642 += 1 };
  s4 -> s4 [0, 65535] { R15642 += 1, R15598 += 1, R13519 += 1, R13520 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R15642 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R15644 += 1, R15600 += 1, R15199 += 1, R15200 += 1 };
  s0 -> s0 [0, 65535] { R15643 += 1, R15644 += 1 };
  s0 -> s2 [0, 65535] { R15644 += 1, R15599 += 1, R15600 += 1 };
  s0 -> s3 [70, 70] { R15644 += 1, R15600 += 1, R15199 += 1, R15200 += 1 };
  s0 -> s4 [70, 70] { R15644 += 1, R15600 += 1, R15199 += 1, R15200 += 1 };
  s0 -> s1 [71, 65535] { R15644 += 1, R15600 += 1, R15199 += 1, R15200 += 1 };
  s1 -> s1 [0, 69] { R15644 += 1, R15600 += 1, R15199 += 1, R15200 += 1 };
  s1 -> s1 [0, 65535] { R15644 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R15644 += 1, R15600 += 1, R15199 += 1, R15200 += 1 };
  s1 -> s4 [70, 70] { R15644 += 1, R15600 += 1, R15199 += 1, R15200 += 1 };
  s1 -> s1 [71, 65535] { R15644 += 1, R15600 += 1, R15199 += 1, R15200 += 1 };
  s2 -> s1 [0, 69] { R15644 += 1, R15600 += 1, R15199 += 1, R15200 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R15644 += 1, R15599 += 1, R15600 += 1 };
  s2 -> s3 [70, 70] { R15644 += 1, R15600 += 1, R15199 += 1, R15200 += 1 };
  s2 -> s4 [70, 70] { R15644 += 1, R15600 += 1, R15199 += 1, R15200 += 1 };
  s2 -> s1 [71, 65535] { R15644 += 1, R15600 += 1, R15199 += 1, R15200 += 1 };
  s3 -> s3 [0, 65535] { R15644 += 1, R15600 += 1, R15199 += 1, R15200 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R15644 += 1 };
  s4 -> s4 [0, 65535] { R15644 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15644 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R15646 += 1, R15602 += 1, R15537 += 1, R15538 += 1 };
  s0 -> s2 [0, 69] { R15646 += 1, R15602 += 1, R15538 += 1, R15540 += 1, R15541 += 1 };
  s0 -> s3 [0, 69] { R15646 += 1, R15602 += 1, R15538 += 1, R15539 += 1, R15540 += 1 };
  s0 -> s4 [0, 65535] { R15646 += 1, R15601 += 1, R15602 += 1 };
  s0 -> s0 [0, 65535] { R15645 += 1, R15646 += 1 };
  s0 -> s5 [70, 70] { R15646 += 1, R15602 += 1, R15537 += 1, R15538 += 1 };
  s0 -> s6 [70, 70] { R15646 += 1, R15602 += 1, R15538 += 1, R15539 += 1, R15540 += 1 };
  s0 -> s7 [70, 70] { R15646 += 1, R15602 += 1, R15538 += 1, R15539 += 1, R15540 += 1 };
  s0 -> s8 [70, 70] { R15646 += 1, R15602 += 1, R15538 += 1, R15540 += 1, R15541 += 1 };
  s0 -> s9 [70, 70] { R15646 += 1, R15602 += 1, R15538 += 1, R15540 += 1, R15541 += 1 };
  s0 -> s10 [70, 70] { R15646 += 1, R15602 += 1, R15537 += 1, R15538 += 1 };
  s0 -> s1 [71, 65535] { R15646 += 1, R15602 += 1, R15537 += 1, R15538 += 1 };
  s0 -> s2 [71, 65535] { R15646 += 1, R15602 += 1, R15538 += 1, R15540 += 1, R15541 += 1 };
  s0 -> s3 [71, 65535] { R15646 += 1, R15602 += 1, R15538 += 1, R15539 += 1, R15540 += 1 };
  s1 -> s1 [0, 69] { R15646 += 1, R15602 += 1, R15537 += 1, R15538 += 1 };
  s1 -> s2 [0, 69] { R15646 += 1, R15602 += 1, R15538 += 1, R15540 += 1, R15541 += 1 };
  s1 -> s3 [0, 69] { R15646 += 1, R15602 += 1, R15538 += 1, R15539 += 1, R15540 += 1 };
  s1 -> s5 [70, 70] { R15646 += 1, R15602 += 1, R15537 += 1, R15538 += 1 };
  s1 -> s6 [70, 70] { R15646 += 1, R15602 += 1, R15538 += 1, R15539 += 1, R15540 += 1 };
  s1 -> s7 [70, 70] { R15646 += 1, R15602 += 1, R15538 += 1, R15539 += 1, R15540 += 1 };
  s1 -> s8 [70, 70] { R15646 += 1, R15602 += 1, R15538 += 1, R15540 += 1, R15541 += 1 };
  s1 -> s9 [70, 70] { R15646 += 1, R15602 += 1, R15538 += 1, R15540 += 1, R15541 += 1 };
  s1 -> s10 [70, 70] { R15646 += 1, R15602 += 1, R15537 += 1, R15538 += 1 };
  s1 -> s1 [71, 65535] { R15646 += 1, R15602 += 1, R15537 += 1, R15538 += 1 };
  s1 -> s2 [71, 65535] { R15646 += 1, R15602 += 1, R15538 += 1, R15540 += 1, R15541 += 1 };
  s1 -> s3 [71, 65535] { R15646 += 1, R15602 += 1, R15538 += 1, R15539 += 1, R15540 += 1 };
  s2 -> s2 [0, 69] { R15646 += 1, R15602 += 1, R15538 += 1, R15540 += 1, R15541 += 1 };
  s2 -> s2 [0, 65535] { R15646 += 1 };
  s2 -> s11 [0, 65535];
  s2 -> s8 [70, 70] { R15646 += 1, R15602 += 1, R15538 += 1, R15540 += 1, R15541 += 1 };
  s2 -> s9 [70, 70] { R15646 += 1, R15602 += 1, R15538 += 1, R15540 += 1, R15541 += 1 };
  s2 -> s2 [71, 65535] { R15646 += 1, R15602 += 1, R15538 += 1, R15540 += 1, R15541 += 1 };
  s3 -> s2 [0, 69] { R15646 += 1, R15602 += 1, R15538 += 1, R15540 += 1, R15541 += 1 };
  s3 -> s3 [0, 69] { R15646 += 1, R15602 += 1, R15538 += 1, R15539 += 1, R15540 += 1 };
  s3 -> s6 [70, 70] { R15646 += 1, R15602 += 1, R15538 += 1, R15539 += 1, R15540 += 1 };
  s3 -> s7 [70, 70] { R15646 += 1, R15602 += 1, R15538 += 1, R15539 += 1, R15540 += 1 };
  s3 -> s8 [70, 70] { R15646 += 1, R15602 += 1, R15538 += 1, R15540 += 1, R15541 += 1 };
  s3 -> s9 [70, 70] { R15646 += 1, R15602 += 1, R15538 += 1, R15540 += 1, R15541 += 1 };
  s3 -> s2 [71, 65535] { R15646 += 1, R15602 += 1, R15538 += 1, R15540 += 1, R15541 += 1 };
  s3 -> s3 [71, 65535] { R15646 += 1, R15602 += 1, R15538 += 1, R15539 += 1, R15540 += 1 };
  s4 -> s1 [0, 69] { R15646 += 1, R15602 += 1, R15537 += 1, R15538 += 1 };
  s4 -> s2 [0, 69] { R15646 += 1, R15602 += 1, R15538 += 1, R15540 += 1, R15541 += 1 };
  s4 -> s3 [0, 69] { R15646 += 1, R15602 += 1, R15538 += 1, R15539 += 1, R15540 += 1 };
  s4 -> s4 [0, 65535] { R15646 += 1, R15601 += 1, R15602 += 1 };
  s4 -> s5 [70, 70] { R15646 += 1, R15602 += 1, R15537 += 1, R15538 += 1 };
  s4 -> s6 [70, 70] { R15646 += 1, R15602 += 1, R15538 += 1, R15539 += 1, R15540 += 1 };
  s4 -> s7 [70, 70] { R15646 += 1, R15602 += 1, R15538 += 1, R15539 += 1, R15540 += 1 };
  s4 -> s8 [70, 70] { R15646 += 1, R15602 += 1, R15538 += 1, R15540 += 1, R15541 += 1 };
  s4 -> s9 [70, 70] { R15646 += 1, R15602 += 1, R15538 += 1, R15540 += 1, R15541 += 1 };
  s4 -> s10 [70, 70] { R15646 += 1, R15602 += 1, R15537 += 1, R15538 += 1 };
  s4 -> s1 [71, 65535] { R15646 += 1, R15602 += 1, R15537 += 1, R15538 += 1 };
  s4 -> s2 [71, 65535] { R15646 += 1, R15602 += 1, R15538 += 1, R15540 += 1, R15541 += 1 };
  s4 -> s3 [71, 65535] { R15646 += 1, R15602 += 1, R15538 += 1, R15539 += 1, R15540 += 1 };
  s6 -> s6 [0, 65535] { R15646 += 1, R15602 += 1, R15538 += 1, R15539 += 1, R15540 += 1 };
  s6 -> s9 [0, 65535] { R15646 += 1, R15602 += 1, R15538 += 1, R15540 += 1, R15541 += 1 };
  s8 -> s11 [0, 65535];
  s8 -> s8 [0, 65535] { R15646 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s12 [0, 65535] { R15646 += 1 };
  s9 -> s9 [0, 65535] { R15646 += 1, R15602 += 1, R15538 += 1, R15540 += 1, R15541 += 1 };
  s10 -> s6 [0, 65535] { R15646 += 1, R15602 += 1, R15538 += 1, R15539 += 1, R15540 += 1 };
  s10 -> s9 [0, 65535] { R15646 += 1, R15602 += 1, R15538 += 1, R15540 += 1, R15541 += 1 };
  s10 -> s10 [0, 65535] { R15646 += 1, R15602 += 1, R15537 += 1, R15538 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R15646 += 1 };
  accepting s12, s8, s2, s9, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R15564 && R3 = R15646 && R23 - R15646 = -1 && R24 = R15646 && R25 - R15646 = -1 && R26 = R15646 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R15204 + -1*R15200 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R15204 + -1*R15200 - R66 = 0 && R55 + R13518 + R13515 + -1*R15206 + -1*R15202 - R68 = 0 && R65 + R15203 + R15199 = 0 && R67 + R15205 + R15201 = 0 && R15563 = 0 && R15587 = 0 && R15588 = 0 && R15593 = 0 && R15594 = 0 && R15595 = 0 && R15596 = 0 && R15601 = 0 && R15602 = 0 && R15603 = 0 && R15604 = R15646 && R15605 = 0 && R15606 = R15646 && R15607 = 0 && R15608 = R15646 && R15609 = 0 && R15610 = R15646 && R15611 = 0 && R15612 = R15646 && R15613 = 0 && R15614 = R15646 && R15615 = 0 && R15616 = R15646 && R15617 = 0 && R15618 = R15646 && R15619 = 0 && R15620 = R15646 && R15621 = 0 && R15622 = R15646 && R15623 = 0 && R15624 = R15646 && R15625 = 0 && R15626 = R15646 && R15627 = 0 && R15628 = R15646 && R15629 = 0 && R15630 = R15646 && R15631 = 0 && R15632 = R15646 && R15633 = 0 && R15634 = R15646 && R15635 = 0 && R15636 = R15646 && R15637 = 0 && R15638 = R15646 && R15639 = 0 && R15640 = R15646 && R15641 = 0 && R15642 = R15646 && R15643 = 0 && R15644 = R15646 && R15645 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R13524 + R13521 < 1 && -1*R15204 + -1*R15200 - R66 < 1 && -1*R15206 + -1*R15202 - R68 < 1 && -1 < R15564 && 0 < R15646 && (R53 + R13516 + R13513 != 0 || R54 + R13517 + R13514 + -1*R15204 + -1*R15200 - R66 = 0 || R66 + R15204 + R15200 < 1) && (R59 + R13522 + R13519 != 0 || R60 + R13523 + R13520 + -1*R15204 + -1*R15200 - R66 = 0 || R66 + R15204 + R15200 < 1) && (R66 + R15204 + R15200 != 0 || ((R53 + R13516 + R13513 != 0 || R54 + R13517 + R13514 = 0 || R68 + R15206 + R15202 < 1) && (R53 + R13516 + R13513 = 0 || R68 + R15206 + R15202 < 1))) && (R66 + R15204 + R15200 != 0 || ((R59 + R13522 + R13519 != 0 || R60 + R13523 + R13520 = 0 || R68 + R15206 + R15202 < 1) && (R59 + R13522 + R13519 = 0 || R68 + R15206 + R15202 < 1))) && (R66 + R15204 + R15200 != 0 || ((R73 + R15542 + R15537 != 0 || R74 + R15543 + R15538 = 0 || R68 + R15206 + R15202 < 1) && (R73 + R15542 + R15537 = 0 || R68 + R15206 + R15202 < 1))) && (R68 + R15206 + R15202 != 0 || R77 + R15546 + R15541 = 0 || (R75 + R15544 + R15539 = 0 && R76 + R15545 + R15540 = 0)) && (R73 + R15542 + R15537 != 0 || R66 + R15204 + R15200 + -1*R15543 + -1*R15538 - R74 = 0 || R66 + R15204 + R15200 < 1) && (R75 + R15544 + R15539 != 0 || R68 + R15206 + R15202 + -1*R15545 + -1*R15540 - R76 = 0 || R68 + R15206 + R15202 < 1) && (R15547 != 0 || R15548 = R15564 || (R20 = 0 && R15564 = 0)) && (R15549 != 0 || R15550 = R15564 || (R20 = 0 && R15564 = 0)) && (R15551 != 0 || R15552 = R15564 || (R20 = 0 && R15564 = 0)) && (R15553 != 0 || R15554 = R15564 || (R20 = 0 && R15564 = 0)) && (R15555 != 0 || R15556 = R15564 || (R20 = 0 && R15564 = 0)) && (R15557 != 0 || R15558 = R15564 || (R20 = 0 && R15564 = 0)) && (R15559 != 0 || R15560 = R15564 || (R20 = 0 && R15564 = 0)) && (R15561 != 0 || R15562 = R15564 || (R20 = 0 && R15564 = 0)) && (R15565 != 0 || R15564 = R15566 || (R20 = 0 && R15564 = 0)) && (R21 = 0 || (R15585 = 0 && R15586 = 0)) && (R21 = 0 || (R15589 = 0 && R15590 = 0)) && (R21 = 0 || (R15591 = 0 && R15592 = 0)) && (R21 = 0 || (R15597 = 0 && R15598 = 0)) && (R21 = 0 || (R15599 = 0 && R15600 = 0)) && (R22 = 0 || (R15567 = 0 && R15568 = 0)) && (R22 = 0 || (R15569 = 0 && R15570 = 0)) && (R22 = 0 || (R15571 = 0 && R15572 = 0)) && (R22 = 0 || (R15573 = 0 && R15574 = 0)) && (R22 = 0 || (R15575 = 0 && R15576 = 0)) && (R22 = 0 || (R15577 = 0 && R15578 = 0)) && (R22 = 0 || (R15579 = 0 && R15580 = 0)) && (R22 = 0 || (R15581 = 0 && R15582 = 0)) && (R22 = 0 || (R15583 = 0 && R15584 = 0)) && (R53 + R13516 + R13513 = 0 || R66 + R15204 + R15200 < 1) && (R59 + R13522 + R13519 = 0 || R66 + R15204 + R15200 < 1) && (R73 + R15542 + R15537 = 0 || R66 + R15204 + R15200 < 1) && (R75 + R15544 + R15539 = 0 || R68 + R15206 + R15202 < 1) && (R15547 = 0 || (R20 = 0 && R15564 = 0)) && (R15549 = 0 || (R20 = 0 && R15564 = 0)) && (R15551 = 0 || (R20 = 0 && R15564 = 0)) && (R15553 = 0 || (R20 = 0 && R15564 = 0)) && (R15555 = 0 || (R20 = 0 && R15564 = 0)) && (R15557 = 0 || (R20 = 0 && R15564 = 0)) && (R15559 = 0 || (R20 = 0 && R15564 = 0)) && (R15561 = 0 || (R20 = 0 && R15564 = 0)) && (R15565 = 0 || (R20 = 0 && R15564 = 0));
// End of Parikh automata intersection problem
