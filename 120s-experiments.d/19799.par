// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R12, R1350, R1351, R1352, R1353, R17, R1776, R1777, R1778, R1779, R1780, R1781, R18, R19, R2, R20, R2094, R2095, R2096, R2097, R2098, R2099, R21, R2100, R2101, R2102, R2103, R2104, R2105, R2106, R2107, R2108, R2109, R2110, R2111, R2112, R2113, R2114, R2115, R2116, R2117, R2118, R2119, R2120, R2121, R2122, R2123, R2124, R2125, R2126, R2127, R2128, R2129, R2130, R2131, R2132, R2133, R2134, R2135, R2136, R2137, R2138, R2139, R2140, R2141, R2142, R2143, R2144, R2145, R2146, R2147, R2148, R2149, R2150, R2151, R2152, R2153, R2154, R2155, R2156, R2157, R2158, R2159, R2160, R2161, R2162, R2163, R2164, R2165, R2166, R2167, R2168, R2169, R2170, R2171, R2172, R2173, R2174, R2175, R2176, R2177, R2178, R2179, R2180, R2181, R2182, R2183, R2184, R2185, R2186, R2187, R2188, R2189, R2190, R2191, R2192, R2193, R2194, R2195, R2196, R2197, R22, R23, R24, R25, R26, R27, R3, R38, R4, R40, R42, R43, R46, R47, R48, R52, R53, R56, R57, R58, R62, R63, R66, R67, R68, R69, R70, R71, R72, R73, R74, R75, R76, R77, R78, R79, R8;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [73, 73];
  s0 -> s0 [74, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [73, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R2 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R11 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 72];
  s0 -> s0 [0, 65535] { R12 += 1 };
  s0 -> s2 [73, 73];
  s0 -> s1 [74, 65535];
  s1 -> s1 [0, 72];
  s1 -> s2 [73, 73];
  s1 -> s1 [74, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R21 += 1 };
  s0 -> s0 [0, 65535] { R20 += 1, R21 += 1 };
  s0 -> s2 [9, 13] { R21 += 1 };
  s0 -> s1 [14, 31] { R21 += 1 };
  s0 -> s2 [32, 32] { R21 += 1 };
  s0 -> s1 [33, 65535] { R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R21 += 1 };
  s2 -> s1 [0, 65535] { R21 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R22 += 1, R23 += 1 };
  s1 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R25 += 1 };
  s0 -> s0 [0, 65535] { R24 += 1, R25 += 1 };
  s0 -> s2 [9, 13] { R25 += 1 };
  s0 -> s1 [14, 31] { R25 += 1 };
  s0 -> s2 [32, 32] { R25 += 1 };
  s0 -> s1 [33, 65535] { R25 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R25 += 1 };
  s2 -> s1 [0, 65535] { R25 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R26 += 1, R27 += 1 };
  s0 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R2119 += 1, R19 += 1 };
  s0 -> s0 [0, 65535] { R2118 += 1, R2119 += 1 };
  s1 -> s1 [0, 65535] { R2119 += 1, R19 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 72] { R2121 += 1 };
  s0 -> s0 [0, 65535] { R2120 += 1, R2121 += 1 };
  s0 -> s2 [73, 73] { R2121 += 1 };
  s0 -> s3 [73, 73] { R2121 += 1 };
  s0 -> s1 [82, 65535] { R2121 += 1 };
  s1 -> s1 [0, 72] { R2121 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R2121 += 1 };
  s1 -> s3 [73, 73] { R2121 += 1 };
  s1 -> s1 [82, 65535] { R2121 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 73] { R2121 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [82, 65535] { R2121 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 72] { R2123 += 1, R38 += 1 };
  s0 -> s0 [0, 65535] { R2122 += 1, R2123 += 1 };
  s0 -> s2 [73, 73] { R2123 += 1, R38 += 1 };
  s0 -> s3 [73, 73] { R2123 += 1, R38 += 1 };
  s0 -> s1 [74, 65535] { R2123 += 1, R38 += 1 };
  s1 -> s1 [0, 72] { R2123 += 1, R38 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R2123 += 1, R38 += 1 };
  s1 -> s3 [73, 73] { R2123 += 1, R38 += 1 };
  s1 -> s1 [74, 65535] { R2123 += 1, R38 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2123 += 1, R38 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 72] { R2125 += 1, R40 += 1 };
  s0 -> s0 [0, 65535] { R2124 += 1, R2125 += 1 };
  s0 -> s2 [73, 73] { R2125 += 1, R40 += 1 };
  s0 -> s3 [73, 73] { R2125 += 1, R40 += 1 };
  s0 -> s1 [74, 65535] { R2125 += 1, R40 += 1 };
  s1 -> s1 [0, 72] { R2125 += 1, R40 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R2125 += 1, R40 += 1 };
  s1 -> s3 [73, 73] { R2125 += 1, R40 += 1 };
  s1 -> s1 [74, 65535] { R2125 += 1, R40 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R2125 += 1, R40 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 72] { R2127 += 1, R42 += 1, R43 += 1 };
  s0 -> s0 [0, 65535] { R2126 += 1, R2127 += 1 };
  s0 -> s2 [73, 73] { R2127 += 1, R42 += 1, R43 += 1 };
  s0 -> s3 [73, 73] { R2127 += 1, R42 += 1, R43 += 1 };
  s0 -> s1 [74, 65535] { R2127 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 72] { R2127 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R2127 += 1, R42 += 1, R43 += 1 };
  s1 -> s3 [73, 73] { R2127 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [74, 65535] { R2127 += 1, R42 += 1, R43 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2127 += 1, R42 += 1, R43 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 72] { R2129 += 1, R46 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R2128 += 1, R2129 += 1 };
  s0 -> s2 [73, 73] { R2129 += 1, R46 += 1, R47 += 1 };
  s0 -> s3 [73, 73] { R2129 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [74, 65535] { R2129 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 72] { R2129 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R2129 += 1, R46 += 1, R47 += 1 };
  s1 -> s3 [73, 73] { R2129 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [74, 65535] { R2129 += 1, R46 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2129 += 1, R46 += 1, R47 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 72] { R2131 += 1, R52 += 1, R53 += 1 };
  s0 -> s0 [0, 65535] { R2130 += 1, R2131 += 1 };
  s0 -> s2 [73, 73] { R2131 += 1, R52 += 1, R53 += 1 };
  s0 -> s3 [73, 73] { R2131 += 1, R52 += 1, R53 += 1 };
  s0 -> s1 [74, 65535] { R2131 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 72] { R2131 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R2131 += 1, R52 += 1, R53 += 1 };
  s1 -> s3 [73, 73] { R2131 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [74, 65535] { R2131 += 1, R52 += 1, R53 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R2131 += 1, R52 += 1, R53 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 72] { R2133 += 1, R56 += 1, R57 += 1 };
  s0 -> s0 [0, 65535] { R2132 += 1, R2133 += 1 };
  s0 -> s2 [73, 73] { R2133 += 1, R56 += 1, R57 += 1 };
  s0 -> s3 [73, 73] { R2133 += 1, R56 += 1, R57 += 1 };
  s0 -> s1 [74, 65535] { R2133 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 72] { R2133 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R2133 += 1, R56 += 1, R57 += 1 };
  s1 -> s3 [73, 73] { R2133 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [74, 65535] { R2133 += 1, R56 += 1, R57 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2133 += 1, R56 += 1, R57 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 72] { R2135 += 1, R62 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R2134 += 1, R2135 += 1 };
  s0 -> s2 [73, 73] { R2135 += 1, R62 += 1, R63 += 1 };
  s0 -> s3 [73, 73] { R2135 += 1, R62 += 1, R63 += 1 };
  s0 -> s1 [74, 65535] { R2135 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 72] { R2135 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R2135 += 1, R62 += 1, R63 += 1 };
  s1 -> s3 [73, 73] { R2135 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [74, 65535] { R2135 += 1, R62 += 1, R63 += 1 };
  s2 -> s2 [0, 65535] { R2135 += 1, R62 += 1, R63 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 72] { R2155 += 1 };
  s0 -> s0 [0, 65535] { R2154 += 1, R2155 += 1 };
  s0 -> s2 [73, 73] { R2155 += 1 };
  s0 -> s1 [74, 65535] { R2155 += 1 };
  s1 -> s1 [0, 72] { R2155 += 1 };
  s1 -> s2 [73, 73] { R2155 += 1 };
  s1 -> s1 [74, 65535] { R2155 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2155 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R2156 += 1, R2157 += 1 };
  s0 -> s1 [0, 65535] { R2157 += 1, R1 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R2157 += 1, R1 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 72] { R2159 += 1 };
  s0 -> s0 [0, 65535] { R2158 += 1, R2159 += 1 };
  s0 -> s2 [0, 65535] { R2159 += 1, R8 += 1 };
  s0 -> s3 [73, 73] { R2159 += 1 };
  s0 -> s1 [74, 65535] { R2159 += 1 };
  s1 -> s1 [0, 72] { R2159 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [73, 73] { R2159 += 1 };
  s1 -> s1 [74, 65535] { R2159 += 1 };
  s2 -> s1 [0, 72] { R2159 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2159 += 1, R8 += 1 };
  s2 -> s3 [73, 73] { R2159 += 1 };
  s2 -> s1 [74, 65535] { R2159 += 1 };
  s3 -> s3 [0, 65535] { R2159 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 72] { R2161 += 1, R2099 += 1 };
  s0 -> s2 [0, 65535] { R2161 += 1, R2098 += 1, R2099 += 1 };
  s0 -> s0 [0, 65535] { R2160 += 1, R2161 += 1 };
  s0 -> s1 [74, 65535] { R2161 += 1, R2099 += 1 };
  s1 -> s1 [0, 72] { R2161 += 1, R2099 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2161 += 1 };
  s1 -> s1 [74, 65535] { R2161 += 1, R2099 += 1 };
  s2 -> s1 [0, 72] { R2161 += 1, R2099 += 1 };
  s2 -> s2 [0, 65535] { R2161 += 1, R2098 += 1, R2099 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [74, 65535] { R2161 += 1, R2099 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R2163 += 1, R2101 += 1, R17 += 1 };
  s0 -> s2 [0, 65535] { R2163 += 1, R2100 += 1, R2101 += 1 };
  s0 -> s0 [0, 65535] { R2162 += 1, R2163 += 1 };
  s1 -> s1 [0, 65535] { R2163 += 1, R2101 += 1, R17 += 1 };
  s1 -> s4 [0, 65535] { R2163 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R2163 += 1, R2101 += 1, R17 += 1 };
  s2 -> s2 [0, 65535] { R2163 += 1, R2100 += 1, R2101 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2163 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 73] { R2165 += 1, R2103 += 1 };
  s0 -> s0 [0, 65535] { R2164 += 1, R2165 += 1 };
  s0 -> s2 [0, 65535] { R2165 += 1, R2102 += 1, R2103 += 1 };
  s0 -> s1 [81, 65535] { R2165 += 1, R2103 += 1 };
  s1 -> s1 [0, 73] { R2165 += 1, R2103 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2165 += 1 };
  s1 -> s1 [81, 65535] { R2165 += 1, R2103 += 1 };
  s2 -> s1 [0, 73] { R2165 += 1, R2103 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2165 += 1, R2102 += 1, R2103 += 1 };
  s2 -> s1 [81, 65535] { R2165 += 1, R2103 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R2167 += 1, R2105 += 1, R67 += 1 };
  s0 -> s2 [0, 65535] { R2167 += 1, R2104 += 1, R2105 += 1 };
  s0 -> s0 [0, 65535] { R2166 += 1, R2167 += 1 };
  s1 -> s4 [0, 65535] { R2167 += 1 };
  s1 -> s1 [0, 65535] { R2167 += 1, R2105 += 1, R67 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R2167 += 1, R2105 += 1, R67 += 1 };
  s2 -> s2 [0, 65535] { R2167 += 1, R2104 += 1, R2105 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2167 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 80] { R2169 += 1, R2107 += 1 };
  s0 -> s2 [0, 65535] { R2169 += 1, R2107 += 1, R69 += 1 };
  s0 -> s0 [0, 65535] { R2168 += 1, R2169 += 1 };
  s0 -> s3 [0, 65535] { R2169 += 1, R2106 += 1, R2107 += 1 };
  s0 -> s1 [82, 65535] { R2169 += 1, R2107 += 1 };
  s1 -> s1 [0, 80] { R2169 += 1, R2107 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R2169 += 1 };
  s1 -> s1 [82, 65535] { R2169 += 1, R2107 += 1 };
  s2 -> s1 [0, 80] { R2169 += 1, R2107 += 1 };
  s2 -> s5 [0, 65535] { R2169 += 1 };
  s2 -> s2 [0, 65535] { R2169 += 1, R2107 += 1, R69 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [82, 65535] { R2169 += 1, R2107 += 1 };
  s3 -> s1 [0, 80] { R2169 += 1, R2107 += 1 };
  s3 -> s2 [0, 65535] { R2169 += 1, R2107 += 1, R69 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2169 += 1, R2106 += 1, R2107 += 1 };
  s3 -> s1 [82, 65535] { R2169 += 1, R2107 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2169 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 80] { R2171 += 1, R2109 += 1, R73 += 1 };
  s0 -> s2 [0, 65535] { R2171 += 1, R2108 += 1, R2109 += 1 };
  s0 -> s3 [0, 65535] { R2171 += 1, R2109 += 1, R72 += 1, R73 += 1 };
  s0 -> s0 [0, 65535] { R2170 += 1, R2171 += 1 };
  s0 -> s1 [82, 65535] { R2171 += 1, R2109 += 1, R73 += 1 };
  s1 -> s1 [0, 80] { R2171 += 1, R2109 += 1, R73 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R2171 += 1 };
  s1 -> s1 [0, 65535] { R2171 += 1, R2109 += 1 };
  s1 -> s1 [82, 65535] { R2171 += 1, R2109 += 1, R73 += 1 };
  s2 -> s1 [0, 80] { R2171 += 1, R2109 += 1, R73 += 1 };
  s2 -> s2 [0, 65535] { R2171 += 1, R2108 += 1, R2109 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R2171 += 1, R2109 += 1, R72 += 1, R73 += 1 };
  s2 -> s1 [82, 65535] { R2171 += 1, R2109 += 1, R73 += 1 };
  s3 -> s1 [0, 80] { R2171 += 1, R2109 += 1, R73 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2171 += 1, R2109 += 1, R72 += 1, R73 += 1 };
  s3 -> s5 [0, 65535] { R2171 += 1 };
  s3 -> s1 [82, 65535] { R2171 += 1, R2109 += 1, R73 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2171 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R2173 += 1, R2111 += 1, R78 += 1, R79 += 1 };
  s0 -> s2 [0, 65535] { R2173 += 1, R2110 += 1, R2111 += 1 };
  s0 -> s3 [0, 65535] { R2173 += 1, R2111 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R2172 += 1, R2173 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R2173 += 1 };
  s1 -> s6 [0, 65535] { R2173 += 1, R2111 += 1 };
  s1 -> s1 [0, 65535] { R2173 += 1, R2111 += 1, R78 += 1, R79 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R2173 += 1, R2111 += 1, R78 += 1, R79 += 1 };
  s2 -> s2 [0, 65535] { R2173 += 1, R2110 += 1, R2111 += 1 };
  s2 -> s3 [0, 65535] { R2173 += 1, R2111 += 1, R77 += 1, R78 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R2173 += 1 };
  s3 -> s1 [0, 65535] { R2173 += 1, R2111 += 1, R78 += 1, R79 += 1 };
  s3 -> s3 [0, 65535] { R2173 += 1, R2111 += 1, R77 += 1, R78 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2173 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R2173 += 1 };
  s6 -> s6 [0, 65535] { R2173 += 1, R2111 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 81] { R2175 += 1, R2113 += 1, R1353 += 1 };
  s0 -> s0 [0, 65535] { R2174 += 1, R2175 += 1 };
  s0 -> s2 [0, 65535] { R2175 += 1, R2112 += 1, R2113 += 1 };
  s0 -> s3 [89, 89] { R2175 += 1, R2113 += 1, R1353 += 1 };
  s0 -> s1 [90, 65535] { R2175 += 1, R2113 += 1, R1353 += 1 };
  s1 -> s1 [0, 81] { R2175 += 1, R2113 += 1, R1353 += 1 };
  s1 -> s3 [89, 89] { R2175 += 1, R2113 += 1, R1353 += 1 };
  s1 -> s1 [90, 65535] { R2175 += 1, R2113 += 1, R1353 += 1 };
  s2 -> s1 [0, 81] { R2175 += 1, R2113 += 1, R1353 += 1 };
  s2 -> s2 [0, 65535] { R2175 += 1, R2112 += 1, R2113 += 1 };
  s2 -> s3 [89, 89] { R2175 += 1, R2113 += 1, R1353 += 1 };
  s2 -> s1 [90, 65535] { R2175 += 1, R2113 += 1, R1353 += 1 };
  s3 -> s3 [0, 81] { R2175 += 1, R2113 += 1, R1353 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2175 += 1, R2113 += 1 };
  s3 -> s5 [0, 65535] { R2175 += 1 };
  s3 -> s3 [89, 65535] { R2175 += 1, R2113 += 1, R1353 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2175 += 1 };
  accepting s3, s4, s5;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R2177 += 1, R2115 += 1 };
  s0 -> s0 [0, 65535] { R2176 += 1, R2177 += 1 };
  s0 -> s2 [0, 65535] { R2177 += 1, R2115 += 1, R1780 += 1, R1781 += 1 };
  s0 -> s3 [0, 65535] { R2177 += 1, R2114 += 1, R2115 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R2177 += 1, R2115 += 1 };
  s1 -> s5 [0, 65535] { R2177 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R2177 += 1, R2115 += 1 };
  s2 -> s5 [0, 65535] { R2177 += 1 };
  s2 -> s2 [0, 65535] { R2177 += 1, R2115 += 1, R1780 += 1, R1781 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R2177 += 1, R2115 += 1 };
  s3 -> s2 [0, 65535] { R2177 += 1, R2115 += 1, R1780 += 1, R1781 += 1 };
  s3 -> s3 [0, 65535] { R2177 += 1, R2114 += 1, R2115 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2177 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s0 [0, 65535] { R2178 += 1, R2179 += 1 };
  s0 -> s1 [0, 65535] { R2179 += 1, R2116 += 1, R2117 += 1 };
  s0 -> s2 [0, 65535] { R2179 += 1, R2117 += 1 };
  s1 -> s1 [0, 65535] { R2179 += 1, R2116 += 1, R2117 += 1 };
  s1 -> s2 [0, 65535] { R2179 += 1, R2117 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R2179 += 1 };
  s2 -> s2 [0, 65535] { R2179 += 1, R2117 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2179 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R2180 += 1, R2181 += 1 };
  s0 -> s1 [0, 65535] { R2181 += 1, R2136 += 1, R2137 += 1 };
  s0 -> s2 [0, 65535] { R2181 += 1, R2137 += 1, R18 += 1 };
  s1 -> s1 [0, 65535] { R2181 += 1, R2136 += 1, R2137 += 1 };
  s1 -> s2 [0, 65535] { R2181 += 1, R2137 += 1, R18 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2181 += 1, R2137 += 1, R18 += 1 };
  s2 -> s3 [0, 65535] { R2181 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2181 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 72] { R2183 += 1, R2139 += 1 };
  s0 -> s0 [0, 65535] { R2182 += 1, R2183 += 1 };
  s0 -> s2 [0, 65535] { R2183 += 1, R2138 += 1, R2139 += 1 };
  s0 -> s3 [73, 73] { R2183 += 1, R2139 += 1 };
  s0 -> s4 [73, 73] { R2183 += 1, R2139 += 1 };
  s0 -> s5 [81, 81] { R2183 += 1, R2139 += 1 };
  s0 -> s1 [82, 65535] { R2183 += 1, R2139 += 1 };
  s1 -> s1 [0, 72] { R2183 += 1, R2139 += 1 };
  s1 -> s3 [73, 73] { R2183 += 1, R2139 += 1 };
  s1 -> s4 [73, 73] { R2183 += 1, R2139 += 1 };
  s1 -> s5 [81, 81] { R2183 += 1, R2139 += 1 };
  s1 -> s1 [82, 65535] { R2183 += 1, R2139 += 1 };
  s2 -> s1 [0, 72] { R2183 += 1, R2139 += 1 };
  s2 -> s2 [0, 65535] { R2183 += 1, R2138 += 1, R2139 += 1 };
  s2 -> s3 [73, 73] { R2183 += 1, R2139 += 1 };
  s2 -> s4 [73, 73] { R2183 += 1, R2139 += 1 };
  s2 -> s5 [81, 81] { R2183 += 1, R2139 += 1 };
  s2 -> s1 [82, 65535] { R2183 += 1, R2139 += 1 };
  s4 -> s4 [0, 73] { R2183 += 1, R2139 += 1 };
  s4 -> s8 [81, 81] { R2183 += 1, R2139 += 1 };
  s4 -> s4 [82, 65535] { R2183 += 1, R2139 += 1 };
  s5 -> s5 [0, 72] { R2183 += 1, R2139 += 1 };
  s5 -> s5 [0, 65535] { R2183 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [73, 73] { R2183 += 1, R2139 += 1 };
  s5 -> s8 [73, 73] { R2183 += 1, R2139 += 1 };
  s5 -> s5 [81, 65535] { R2183 += 1, R2139 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2183 += 1 };
  s8 -> s8 [0, 73] { R2183 += 1, R2139 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R2183 += 1 };
  s8 -> s8 [81, 65535] { R2183 += 1, R2139 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 72] { R2185 += 1, R2141 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R2184 += 1, R2185 += 1 };
  s0 -> s2 [0, 65535] { R2185 += 1, R2140 += 1, R2141 += 1 };
  s0 -> s3 [73, 73] { R2185 += 1, R2141 += 1, R66 += 1 };
  s0 -> s4 [73, 73] { R2185 += 1, R2141 += 1, R66 += 1 };
  s0 -> s1 [74, 65535] { R2185 += 1, R2141 += 1, R66 += 1 };
  s1 -> s1 [0, 72] { R2185 += 1, R2141 += 1, R66 += 1 };
  s1 -> s1 [0, 65535] { R2185 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [73, 73] { R2185 += 1, R2141 += 1, R66 += 1 };
  s1 -> s4 [73, 73] { R2185 += 1, R2141 += 1, R66 += 1 };
  s1 -> s1 [74, 65535] { R2185 += 1, R2141 += 1, R66 += 1 };
  s2 -> s1 [0, 72] { R2185 += 1, R2141 += 1, R66 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R2185 += 1, R2140 += 1, R2141 += 1 };
  s2 -> s3 [73, 73] { R2185 += 1, R2141 += 1, R66 += 1 };
  s2 -> s4 [73, 73] { R2185 += 1, R2141 += 1, R66 += 1 };
  s2 -> s1 [74, 65535] { R2185 += 1, R2141 += 1, R66 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R2185 += 1 };
  s4 -> s5 [0, 65535] { R2185 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2185 += 1, R2141 += 1, R66 += 1 };
  s5 -> s5 [0, 65535] { R2185 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 72] { R2187 += 1, R2143 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R2186 += 1, R2187 += 1 };
  s0 -> s2 [0, 65535] { R2187 += 1, R2142 += 1, R2143 += 1 };
  s0 -> s3 [73, 73] { R2187 += 1, R2143 += 1, R68 += 1 };
  s0 -> s4 [73, 73] { R2187 += 1, R2143 += 1, R68 += 1 };
  s0 -> s1 [74, 65535] { R2187 += 1, R2143 += 1, R68 += 1 };
  s1 -> s1 [0, 72] { R2187 += 1, R2143 += 1, R68 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R2187 += 1 };
  s1 -> s3 [73, 73] { R2187 += 1, R2143 += 1, R68 += 1 };
  s1 -> s4 [73, 73] { R2187 += 1, R2143 += 1, R68 += 1 };
  s1 -> s1 [74, 65535] { R2187 += 1, R2143 += 1, R68 += 1 };
  s2 -> s1 [0, 72] { R2187 += 1, R2143 += 1, R68 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R2187 += 1, R2142 += 1, R2143 += 1 };
  s2 -> s3 [73, 73] { R2187 += 1, R2143 += 1, R68 += 1 };
  s2 -> s4 [73, 73] { R2187 += 1, R2143 += 1, R68 += 1 };
  s2 -> s1 [74, 65535] { R2187 += 1, R2143 += 1, R68 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R2187 += 1 };
  s4 -> s5 [0, 65535] { R2187 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2187 += 1, R2143 += 1, R68 += 1 };
  s5 -> s5 [0, 65535] { R2187 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 72] { R2189 += 1, R2145 += 1, R70 += 1, R71 += 1 };
  s0 -> s2 [0, 65535] { R2189 += 1, R2144 += 1, R2145 += 1 };
  s0 -> s0 [0, 65535] { R2188 += 1, R2189 += 1 };
  s0 -> s3 [73, 73] { R2189 += 1, R2145 += 1, R70 += 1, R71 += 1 };
  s0 -> s4 [73, 73] { R2189 += 1, R2145 += 1, R70 += 1, R71 += 1 };
  s0 -> s1 [74, 65535] { R2189 += 1, R2145 += 1, R70 += 1, R71 += 1 };
  s1 -> s1 [0, 72] { R2189 += 1, R2145 += 1, R70 += 1, R71 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2189 += 1 };
  s1 -> s3 [73, 73] { R2189 += 1, R2145 += 1, R70 += 1, R71 += 1 };
  s1 -> s4 [73, 73] { R2189 += 1, R2145 += 1, R70 += 1, R71 += 1 };
  s1 -> s1 [74, 65535] { R2189 += 1, R2145 += 1, R70 += 1, R71 += 1 };
  s2 -> s1 [0, 72] { R2189 += 1, R2145 += 1, R70 += 1, R71 += 1 };
  s2 -> s2 [0, 65535] { R2189 += 1, R2144 += 1, R2145 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [73, 73] { R2189 += 1, R2145 += 1, R70 += 1, R71 += 1 };
  s2 -> s4 [73, 73] { R2189 += 1, R2145 += 1, R70 += 1, R71 += 1 };
  s2 -> s1 [74, 65535] { R2189 += 1, R2145 += 1, R70 += 1, R71 += 1 };
  s3 -> s3 [0, 65535] { R2189 += 1, R2145 += 1, R70 += 1, R71 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R2189 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2189 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2189 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 72] { R2191 += 1, R2147 += 1, R74 += 1, R75 += 1 };
  s0 -> s0 [0, 65535] { R2190 += 1, R2191 += 1 };
  s0 -> s2 [0, 65535] { R2191 += 1, R2146 += 1, R2147 += 1 };
  s0 -> s3 [73, 73] { R2191 += 1, R2147 += 1, R74 += 1, R75 += 1 };
  s0 -> s4 [73, 73] { R2191 += 1, R2147 += 1, R74 += 1, R75 += 1 };
  s0 -> s1 [74, 65535] { R2191 += 1, R2147 += 1, R74 += 1, R75 += 1 };
  s1 -> s1 [0, 72] { R2191 += 1, R2147 += 1, R74 += 1, R75 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2191 += 1 };
  s1 -> s3 [73, 73] { R2191 += 1, R2147 += 1, R74 += 1, R75 += 1 };
  s1 -> s4 [73, 73] { R2191 += 1, R2147 += 1, R74 += 1, R75 += 1 };
  s1 -> s1 [74, 65535] { R2191 += 1, R2147 += 1, R74 += 1, R75 += 1 };
  s2 -> s1 [0, 72] { R2191 += 1, R2147 += 1, R74 += 1, R75 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2191 += 1, R2146 += 1, R2147 += 1 };
  s2 -> s3 [73, 73] { R2191 += 1, R2147 += 1, R74 += 1, R75 += 1 };
  s2 -> s4 [73, 73] { R2191 += 1, R2147 += 1, R74 += 1, R75 += 1 };
  s2 -> s1 [74, 65535] { R2191 += 1, R2147 += 1, R74 += 1, R75 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R2191 += 1 };
  s3 -> s3 [0, 65535] { R2191 += 1, R2147 += 1, R74 += 1, R75 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2191 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2191 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 72] { R2193 += 1, R2149 += 1, R1350 += 1, R1351 += 1 };
  s0 -> s2 [0, 72] { R2193 += 1, R2149 += 1, R1351 += 1 };
  s0 -> s0 [0, 65535] { R2192 += 1, R2193 += 1 };
  s0 -> s3 [0, 65535] { R2193 += 1, R2148 += 1, R2149 += 1 };
  s0 -> s4 [73, 73] { R2193 += 1, R2149 += 1, R1350 += 1, R1351 += 1 };
  s0 -> s5 [73, 73] { R2193 += 1, R2149 += 1, R1350 += 1, R1351 += 1 };
  s0 -> s6 [73, 73] { R2193 += 1, R2149 += 1, R1351 += 1 };
  s0 -> s7 [73, 73] { R2193 += 1, R2149 += 1, R1351 += 1 };
  s0 -> s2 [74, 81] { R2193 += 1, R2149 += 1, R1351 += 1 };
  s0 -> s1 [74, 65535] { R2193 += 1, R2149 += 1, R1350 += 1, R1351 += 1 };
  s0 -> s2 [90, 65535] { R2193 += 1, R2149 += 1, R1351 += 1 };
  s1 -> s1 [0, 72] { R2193 += 1, R2149 += 1, R1350 += 1, R1351 += 1 };
  s1 -> s2 [0, 72] { R2193 += 1, R2149 += 1, R1351 += 1 };
  s1 -> s4 [73, 73] { R2193 += 1, R2149 += 1, R1350 += 1, R1351 += 1 };
  s1 -> s5 [73, 73] { R2193 += 1, R2149 += 1, R1350 += 1, R1351 += 1 };
  s1 -> s6 [73, 73] { R2193 += 1, R2149 += 1, R1351 += 1 };
  s1 -> s7 [73, 73] { R2193 += 1, R2149 += 1, R1351 += 1 };
  s1 -> s2 [74, 81] { R2193 += 1, R2149 += 1, R1351 += 1 };
  s1 -> s1 [74, 65535] { R2193 += 1, R2149 += 1, R1350 += 1, R1351 += 1 };
  s1 -> s2 [90, 65535] { R2193 += 1, R2149 += 1, R1351 += 1 };
  s2 -> s2 [0, 72] { R2193 += 1, R2149 += 1, R1351 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R2193 += 1 };
  s2 -> s6 [73, 73] { R2193 += 1, R2149 += 1, R1351 += 1 };
  s2 -> s7 [73, 73] { R2193 += 1, R2149 += 1, R1351 += 1 };
  s2 -> s2 [74, 81] { R2193 += 1, R2149 += 1, R1351 += 1 };
  s2 -> s2 [90, 65535] { R2193 += 1, R2149 += 1, R1351 += 1 };
  s3 -> s1 [0, 72] { R2193 += 1, R2149 += 1, R1350 += 1, R1351 += 1 };
  s3 -> s2 [0, 72] { R2193 += 1, R2149 += 1, R1351 += 1 };
  s3 -> s3 [0, 65535] { R2193 += 1, R2148 += 1, R2149 += 1 };
  s3 -> s4 [73, 73] { R2193 += 1, R2149 += 1, R1350 += 1, R1351 += 1 };
  s3 -> s5 [73, 73] { R2193 += 1, R2149 += 1, R1350 += 1, R1351 += 1 };
  s3 -> s6 [73, 73] { R2193 += 1, R2149 += 1, R1351 += 1 };
  s3 -> s7 [73, 73] { R2193 += 1, R2149 += 1, R1351 += 1 };
  s3 -> s2 [74, 81] { R2193 += 1, R2149 += 1, R1351 += 1 };
  s3 -> s1 [74, 65535] { R2193 += 1, R2149 += 1, R1350 += 1, R1351 += 1 };
  s3 -> s2 [90, 65535] { R2193 += 1, R2149 += 1, R1351 += 1 };
  s4 -> s7 [0, 81] { R2193 += 1, R2149 += 1, R1351 += 1 };
  s4 -> s4 [0, 65535] { R2193 += 1, R2149 += 1, R1350 += 1, R1351 += 1 };
  s4 -> s7 [90, 65535] { R2193 += 1, R2149 += 1, R1351 += 1 };
  s6 -> s6 [0, 65535] { R2193 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 81] { R2193 += 1, R2149 += 1, R1351 += 1 };
  s7 -> s7 [0, 65535] { R2193 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s7 [90, 65535] { R2193 += 1, R2149 += 1, R1351 += 1 };
  s8 -> s8 [0, 65535];
  accepting s2, s6, s7, s8;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 72] { R2195 += 1, R2151 += 1, R1777 += 1, R1778 += 1 };
  s0 -> s2 [0, 72] { R2195 += 1, R2151 += 1, R1776 += 1, R1777 += 1 };
  s0 -> s0 [0, 65535] { R2194 += 1, R2195 += 1 };
  s0 -> s3 [0, 65535] { R2195 += 1, R2150 += 1, R2151 += 1 };
  s0 -> s4 [73, 73] { R2195 += 1, R2151 += 1, R1777 += 1, R1778 += 1 };
  s0 -> s5 [73, 73] { R2195 += 1, R2151 += 1, R1777 += 1, R1778 += 1 };
  s0 -> s6 [73, 73] { R2195 += 1, R2151 += 1, R1776 += 1, R1777 += 1 };
  s0 -> s7 [73, 73] { R2195 += 1, R2151 += 1, R1776 += 1, R1777 += 1 };
  s0 -> s1 [74, 65535] { R2195 += 1, R2151 += 1, R1777 += 1, R1778 += 1 };
  s0 -> s2 [74, 65535] { R2195 += 1, R2151 += 1, R1776 += 1, R1777 += 1 };
  s1 -> s1 [0, 72] { R2195 += 1, R2151 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s1 [0, 65535] { R2195 += 1 };
  s1 -> s4 [73, 73] { R2195 += 1, R2151 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s5 [73, 73] { R2195 += 1, R2151 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s1 [74, 65535] { R2195 += 1, R2151 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s1 [0, 72] { R2195 += 1, R2151 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s2 [0, 72] { R2195 += 1, R2151 += 1, R1776 += 1, R1777 += 1 };
  s2 -> s4 [73, 73] { R2195 += 1, R2151 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s5 [73, 73] { R2195 += 1, R2151 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s6 [73, 73] { R2195 += 1, R2151 += 1, R1776 += 1, R1777 += 1 };
  s2 -> s7 [73, 73] { R2195 += 1, R2151 += 1, R1776 += 1, R1777 += 1 };
  s2 -> s1 [74, 65535] { R2195 += 1, R2151 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s2 [74, 65535] { R2195 += 1, R2151 += 1, R1776 += 1, R1777 += 1 };
  s3 -> s1 [0, 72] { R2195 += 1, R2151 += 1, R1777 += 1, R1778 += 1 };
  s3 -> s2 [0, 72] { R2195 += 1, R2151 += 1, R1776 += 1, R1777 += 1 };
  s3 -> s3 [0, 65535] { R2195 += 1, R2150 += 1, R2151 += 1 };
  s3 -> s4 [73, 73] { R2195 += 1, R2151 += 1, R1777 += 1, R1778 += 1 };
  s3 -> s5 [73, 73] { R2195 += 1, R2151 += 1, R1777 += 1, R1778 += 1 };
  s3 -> s6 [73, 73] { R2195 += 1, R2151 += 1, R1776 += 1, R1777 += 1 };
  s3 -> s7 [73, 73] { R2195 += 1, R2151 += 1, R1776 += 1, R1777 += 1 };
  s3 -> s1 [74, 65535] { R2195 += 1, R2151 += 1, R1777 += 1, R1778 += 1 };
  s3 -> s2 [74, 65535] { R2195 += 1, R2151 += 1, R1776 += 1, R1777 += 1 };
  s4 -> s4 [0, 65535] { R2195 += 1, R2151 += 1, R1777 += 1, R1778 += 1 };
  s4 -> s9 [0, 65535] { R2195 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R2195 += 1 };
  s5 -> s8 [0, 65535];
  s7 -> s4 [0, 65535] { R2195 += 1, R2151 += 1, R1777 += 1, R1778 += 1 };
  s7 -> s7 [0, 65535] { R2195 += 1, R2151 += 1, R1776 += 1, R1777 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R2195 += 1 };
  s9 -> s8 [0, 65535];
  accepting s4, s8, s5, s9, s1;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 72] { R2197 += 1, R2153 += 1, R2095 += 1 };
  s0 -> s2 [0, 72] { R2197 += 1, R2153 += 1, R2094 += 1, R2095 += 1 };
  s0 -> s0 [0, 65535] { R2196 += 1, R2197 += 1 };
  s0 -> s3 [0, 65535] { R2197 += 1, R2152 += 1, R2153 += 1 };
  s0 -> s4 [73, 73] { R2197 += 1, R2153 += 1, R2095 += 1 };
  s0 -> s5 [73, 73] { R2197 += 1, R2153 += 1, R2094 += 1, R2095 += 1 };
  s0 -> s6 [73, 73] { R2197 += 1, R2153 += 1, R2094 += 1, R2095 += 1 };
  s0 -> s7 [73, 73] { R2197 += 1, R2153 += 1, R2095 += 1 };
  s0 -> s1 [74, 80] { R2197 += 1, R2153 += 1, R2095 += 1 };
  s0 -> s2 [74, 65535] { R2197 += 1, R2153 += 1, R2094 += 1, R2095 += 1 };
  s0 -> s8 [81, 81] { R2197 += 1, R2153 += 1, R2095 += 1 };
  s0 -> s1 [90, 65535] { R2197 += 1, R2153 += 1, R2095 += 1 };
  s1 -> s1 [0, 72] { R2197 += 1, R2153 += 1, R2095 += 1 };
  s1 -> s4 [73, 73] { R2197 += 1, R2153 += 1 };
  s1 -> s7 [73, 73] { R2197 += 1, R2153 += 1 };
  s1 -> s1 [74, 80] { R2197 += 1, R2153 += 1, R2095 += 1 };
  s1 -> s1 [74, 65535] { R2197 += 1, R2153 += 1 };
  s1 -> s8 [81, 81] { R2197 += 1, R2153 += 1, R2095 += 1 };
  s1 -> s1 [90, 65535] { R2197 += 1, R2153 += 1, R2095 += 1 };
  s2 -> s1 [0, 72] { R2197 += 1, R2153 += 1, R2095 += 1 };
  s2 -> s2 [0, 72] { R2197 += 1, R2153 += 1, R2094 += 1, R2095 += 1 };
  s2 -> s4 [73, 73] { R2197 += 1, R2153 += 1, R2095 += 1 };
  s2 -> s5 [73, 73] { R2197 += 1, R2153 += 1, R2094 += 1, R2095 += 1 };
  s2 -> s6 [73, 73] { R2197 += 1, R2153 += 1, R2094 += 1, R2095 += 1 };
  s2 -> s7 [73, 73] { R2197 += 1, R2153 += 1, R2095 += 1 };
  s2 -> s1 [74, 80] { R2197 += 1, R2153 += 1, R2095 += 1 };
  s2 -> s2 [74, 65535] { R2197 += 1, R2153 += 1, R2094 += 1, R2095 += 1 };
  s2 -> s8 [81, 81] { R2197 += 1, R2153 += 1, R2095 += 1 };
  s2 -> s1 [90, 65535] { R2197 += 1, R2153 += 1, R2095 += 1 };
  s3 -> s1 [0, 72] { R2197 += 1, R2153 += 1, R2095 += 1 };
  s3 -> s2 [0, 72] { R2197 += 1, R2153 += 1, R2094 += 1, R2095 += 1 };
  s3 -> s3 [0, 65535] { R2197 += 1, R2152 += 1, R2153 += 1 };
  s3 -> s4 [73, 73] { R2197 += 1, R2153 += 1, R2095 += 1 };
  s3 -> s5 [73, 73] { R2197 += 1, R2153 += 1, R2094 += 1, R2095 += 1 };
  s3 -> s6 [73, 73] { R2197 += 1, R2153 += 1, R2094 += 1, R2095 += 1 };
  s3 -> s7 [73, 73] { R2197 += 1, R2153 += 1, R2095 += 1 };
  s3 -> s1 [74, 80] { R2197 += 1, R2153 += 1, R2095 += 1 };
  s3 -> s2 [74, 65535] { R2197 += 1, R2153 += 1, R2094 += 1, R2095 += 1 };
  s3 -> s8 [81, 81] { R2197 += 1, R2153 += 1, R2095 += 1 };
  s3 -> s1 [90, 65535] { R2197 += 1, R2153 += 1, R2095 += 1 };
  s5 -> s7 [0, 80] { R2197 += 1, R2153 += 1, R2095 += 1 };
  s5 -> s5 [0, 65535] { R2197 += 1, R2153 += 1, R2094 += 1, R2095 += 1 };
  s5 -> s11 [81, 81] { R2197 += 1, R2153 += 1, R2095 += 1 };
  s5 -> s7 [90, 65535] { R2197 += 1, R2153 += 1, R2095 += 1 };
  s7 -> s7 [0, 80] { R2197 += 1, R2153 += 1, R2095 += 1 };
  s7 -> s7 [0, 65535] { R2197 += 1, R2153 += 1 };
  s7 -> s11 [81, 81] { R2197 += 1, R2153 += 1, R2095 += 1 };
  s7 -> s7 [90, 65535] { R2197 += 1, R2153 += 1, R2095 += 1 };
  s8 -> s8 [0, 72] { R2197 += 1, R2153 += 1 };
  s8 -> s8 [0, 65535] { R2197 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [73, 73] { R2197 += 1, R2153 += 1 };
  s8 -> s11 [73, 73] { R2197 += 1, R2153 += 1 };
  s8 -> s8 [74, 65535] { R2197 += 1, R2153 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R2197 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R2197 += 1, R2153 += 1 };
  s11 -> s12 [0, 65535] { R2197 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R2197 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
};
synchronised {  // Automata constraining P58
automaton P58_0 {
  init s0;
  s0 -> s1 [113, 113];
  accepting s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [105, 105];
  accepting s1;
};
};
constraint R1 = R2113 && R2 = R2197 && R20 - R2197 = -1 && R21 = R2197 && R22 - R2197 = -1 && R23 = R2197 && R24 = 0 && R25 = 1 && R26 = 0 && R27 = 1 && R38 + R67 + R66 + -1*R1353 + -1*R1351 - R53 = 0 && R52 + R1352 + R1350 = 0 && R2112 = 0 && R2138 = 0 && R2139 = 0 && R2148 = 0 && R2149 = 0 && R2150 = 0 && R2151 = 0 && R2152 = 0 && R2153 = 0 && R2154 = 0 && R2155 = R2197 && R2156 = 0 && R2157 = R2197 && R2158 = 0 && R2159 = R2197 && R2160 = 0 && R2161 = R2197 && R2162 = 0 && R2163 = R2197 && R2164 = 0 && R2165 = R2197 && R2166 = 0 && R2167 = R2197 && R2168 = 0 && R2169 = R2197 && R2170 = 0 && R2171 = R2197 && R2172 = 0 && R2173 = R2197 && R2174 = 0 && R2175 = R2197 && R2176 = 0 && R2177 = R2197 && R2178 = 0 && R2179 = R2197 && R2180 = 0 && R2181 = R2197 && R2182 = 0 && R2183 = R2197 && R2184 = 0 && R2185 = R2197 && R2186 = 0 && R2187 = R2197 && R2188 = 0 && R2189 = R2197 && R2190 = 0 && R2191 = R2197 && R2192 = 0 && R2193 = R2197 && R2194 = 0 && R2195 = R2197 && R2196 = 0 && R8 < 1 && R11 < 1 && R12 < 1 && R40 + R69 + R68 < 1 && -1*R1353 + -1*R1351 - R53 < 1 && -1 < R2113 && 0 < R2197 && (R48 + R79 + R76 != 0 || ((R42 + R72 + R70 != 0 || R43 + R73 + R71 + -1*R1353 + -1*R1351 - R53 = 0 || R53 + R1353 + R1351 < 1) && (R42 + R72 + R70 = 0 || R53 + R1353 + R1351 < 1))) && (R48 + R79 + R76 != 0 || ((R46 + R77 + R74 != 0 || R47 + R78 + R75 + -1*R1353 + -1*R1351 - R53 = 0 || R53 + R1353 + R1351 < 1) && (R46 + R77 + R74 = 0 || R53 + R1353 + R1351 < 1))) && (R2098 != 0 || R2099 = R2113 || (R17 = 0 && R2113 = 0)) && (R2100 != 0 || R2101 = R2113 || (R17 = 0 && R2113 = 0)) && (R2102 != 0 || R2103 = R2113 || (R17 = 0 && R2113 = 0)) && (R2104 != 0 || R2105 = R2113 || (R17 = 0 && R2113 = 0)) && (R2106 != 0 || R2107 = R2113 || (R17 = 0 && R2113 = 0)) && (R2108 != 0 || R2109 = R2113 || (R17 = 0 && R2113 = 0)) && (R2110 != 0 || R2111 = R2113 || (R17 = 0 && R2113 = 0)) && (R2114 != 0 || R2113 = R2115 || (R17 = 0 && R2113 = 0)) && (R2116 != 0 || R2113 = R2117 || (R17 = 0 && R2113 = 0)) && (R18 = 0 || (R2136 = 0 && R2137 = 0)) && (R18 = 0 || (R2140 = 0 && R2141 = 0)) && (R18 = 0 || (R2142 = 0 && R2143 = 0)) && (R18 = 0 || (R2144 = 0 && R2145 = 0)) && (R18 = 0 || (R2146 = 0 && R2147 = 0)) && (R19 = 0 || (R2118 = 0 && R2119 = 0)) && (R19 = 0 || (R2120 = 0 && R2121 = 0)) && (R19 = 0 || (R2122 = 0 && R2123 = 0)) && (R19 = 0 || (R2124 = 0 && R2125 = 0)) && (R19 = 0 || (R2126 = 0 && R2127 = 0)) && (R19 = 0 || (R2128 = 0 && R2129 = 0)) && (R19 = 0 || (R2130 = 0 && R2131 = 0)) && (R19 = 0 || (R2132 = 0 && R2133 = 0)) && (R19 = 0 || (R2134 = 0 && R2135 = 0)) && (R48 + R79 + R76 = 0 || (R42 + R72 + R70 = 0 && R43 + R73 + R71 + -1*R1353 + -1*R1351 - R53 = 0)) && (R48 + R79 + R76 = 0 || (R46 + R77 + R74 = 0 && R47 + R78 + R75 + -1*R1353 + -1*R1351 - R53 = 0)) && (R58 + R1781 + R1778 = 0 || (R56 + R1779 + R1776 = 0 && R57 + R1780 + R1777 = 0)) && (R58 + R1781 + R1778 = 0 || (R62 + R2096 + R2094 = 0 && R63 + R2097 + R2095 = 0)) && (R2098 = 0 || (R17 = 0 && R2113 = 0)) && (R2100 = 0 || (R17 = 0 && R2113 = 0)) && (R2102 = 0 || (R17 = 0 && R2113 = 0)) && (R2104 = 0 || (R17 = 0 && R2113 = 0)) && (R2106 = 0 || (R17 = 0 && R2113 = 0)) && (R2108 = 0 || (R17 = 0 && R2113 = 0)) && (R2110 = 0 || (R17 = 0 && R2113 = 0)) && (R2114 = 0 || (R17 = 0 && R2113 = 0)) && (R2116 = 0 || (R17 = 0 && R2113 = 0));
// End of Parikh automata intersection problem
