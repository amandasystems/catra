// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R14, R1547, R1548, R1549, R1550, R1551, R1552, R17, R1913, R1914, R1915, R1916, R1917, R1918, R1919, R1920, R1921, R1922, R1923, R1924, R1925, R1926, R1927, R1928, R1929, R1930, R1931, R1932, R1933, R1934, R1935, R1936, R1937, R1938, R1939, R1940, R1941, R1942, R1943, R1944, R1945, R1946, R1947, R1948, R1949, R1950, R1951, R1952, R1953, R1954, R1955, R1956, R1957, R1958, R1959, R1960, R1961, R1962, R1963, R1964, R1965, R1966, R1967, R1968, R1969, R1970, R1971, R1972, R1973, R1974, R1975, R1976, R1977, R1978, R1979, R1980, R1981, R1982, R1983, R1984, R1985, R1986, R1987, R1988, R1989, R1990, R1991, R1992, R1993, R1994, R1995, R1996, R1997, R1998, R1999, R2, R20, R2000, R2001, R2002, R2003, R2004, R2005, R2006, R2007, R2008, R2009, R2010, R2011, R2012, R2013, R2014, R2015, R2016, R2017, R2018, R2019, R2020, R2021, R2022, R2023, R2024, R2025, R2026, R2027, R2028, R2029, R2030, R2031, R2032, R2033, R2034, R2035, R2036, R2037, R2038, R2039, R2040, R2041, R2042, R2043, R2044, R2045, R2046, R2047, R2048, R2049, R2050, R2051, R2052, R2053, R2054, R2055, R2056, R2057, R2058, R2059, R2060, R2061, R2062, R2063, R2064, R2065, R2066, R2067, R2068, R2069, R2070, R2071, R2072, R2073, R2074, R2075, R2076, R2077, R2078, R2079, R2080, R2081, R2082, R2083, R2084, R2085, R2086, R2087, R2088, R2089, R2090, R2091, R2092, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R33, R34, R35, R36, R37, R38, R4, R49, R5, R51, R53, R54, R57, R58, R59, R6, R63, R64, R67, R68, R69, R7, R73, R74, R77, R78, R79, R80, R81, R82, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94;
synchronised {  // Automata constraining P9
automaton P9_0 {
  init s0;
  s0 -> s1 [98, 98];
  accepting s1;
};
};
synchronised {  // Automata constraining P51
automaton P51_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R17 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [13, 13] { R32 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s0 [0, 65535] { R33 += 1, R34 += 1 };
  s0 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s1 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R36 += 1 };
  s0 -> s0 [0, 65535] { R35 += 1, R36 += 1 };
  s0 -> s2 [9, 13] { R36 += 1 };
  s0 -> s1 [14, 31] { R36 += 1 };
  s0 -> s2 [32, 32] { R36 += 1 };
  s0 -> s1 [33, 65535] { R36 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R36 += 1 };
  s2 -> s1 [0, 65535] { R36 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s0 [0, 65535] { R37 += 1, R38 += 1 };
  s0 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s1 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R2018 += 1 };
  s0 -> s0 [0, 65535] { R2017 += 1, R2018 += 1 };
  s0 -> s2 [66, 66] { R2018 += 1 };
  s0 -> s1 [67, 65535] { R2018 += 1 };
  s1 -> s1 [0, 64] { R2018 += 1 };
  s1 -> s2 [66, 66] { R2018 += 1 };
  s1 -> s1 [67, 65535] { R2018 += 1 };
  s2 -> s2 [0, 64] { R2018 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [66, 65535] { R2018 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R2019 += 1, R2020 += 1 };
  s0 -> s1 [0, 65535] { R2020 += 1, R2 += 1 };
  s1 -> s1 [0, 65535] { R2020 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 65] { R2022 += 1 };
  s0 -> s0 [0, 65535] { R2021 += 1, R2022 += 1 };
  s0 -> s2 [0, 65535] { R2022 += 1, R14 += 1 };
  s0 -> s3 [66, 66] { R2022 += 1 };
  s0 -> s1 [67, 65535] { R2022 += 1 };
  s1 -> s1 [0, 65] { R2022 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [66, 66] { R2022 += 1 };
  s1 -> s1 [67, 65535] { R2022 += 1 };
  s2 -> s1 [0, 65] { R2022 += 1 };
  s2 -> s2 [0, 65535] { R2022 += 1, R14 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [66, 66] { R2022 += 1 };
  s2 -> s1 [67, 65535] { R2022 += 1 };
  s3 -> s3 [0, 65535] { R2022 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R2024 += 1, R24 += 1 };
  s0 -> s2 [0, 65535] { R2024 += 1, R23 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R2023 += 1, R2024 += 1 };
  s0 -> s3 [9, 13] { R2024 += 1, R24 += 1 };
  s0 -> s1 [14, 31] { R2024 += 1, R24 += 1 };
  s0 -> s3 [32, 32] { R2024 += 1, R24 += 1 };
  s0 -> s1 [33, 65535] { R2024 += 1, R24 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R2024 += 1, R24 += 1 };
  s1 -> s5 [0, 65535] { R2024 += 1 };
  s2 -> s1 [0, 8] { R2024 += 1, R24 += 1 };
  s2 -> s2 [0, 65535] { R2024 += 1, R23 += 1, R24 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [9, 13] { R2024 += 1, R24 += 1 };
  s2 -> s1 [14, 31] { R2024 += 1, R24 += 1 };
  s2 -> s3 [32, 32] { R2024 += 1, R24 += 1 };
  s2 -> s1 [33, 65535] { R2024 += 1, R24 += 1 };
  s3 -> s1 [0, 65535] { R2024 += 1, R24 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2024 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 65535] { R2026 += 1, R25 += 1, R26 += 1 };
  s0 -> s2 [0, 65535] { R2026 += 1, R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R2025 += 1, R2026 += 1 };
  s1 -> s1 [0, 65535] { R2026 += 1, R25 += 1, R26 += 1 };
  s1 -> s2 [0, 65535] { R2026 += 1, R26 += 1, R4 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R2026 += 1 };
  s2 -> s2 [0, 65535] { R2026 += 1, R26 += 1, R4 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2026 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R2028 += 1, R28 += 1 };
  s0 -> s2 [0, 65535] { R2028 += 1, R27 += 1, R28 += 1 };
  s0 -> s0 [0, 65535] { R2027 += 1, R2028 += 1 };
  s0 -> s3 [9, 13] { R2028 += 1, R28 += 1 };
  s0 -> s1 [14, 31] { R2028 += 1, R28 += 1 };
  s0 -> s3 [32, 32] { R2028 += 1, R28 += 1 };
  s0 -> s1 [33, 65535] { R2028 += 1, R28 += 1 };
  s1 -> s1 [0, 65535] { R2028 += 1, R28 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R2028 += 1 };
  s2 -> s1 [0, 8] { R2028 += 1, R28 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2028 += 1, R27 += 1, R28 += 1 };
  s2 -> s3 [9, 13] { R2028 += 1, R28 += 1 };
  s2 -> s1 [14, 31] { R2028 += 1, R28 += 1 };
  s2 -> s3 [32, 32] { R2028 += 1, R28 += 1 };
  s2 -> s1 [33, 65535] { R2028 += 1, R28 += 1 };
  s3 -> s1 [0, 65535] { R2028 += 1, R28 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2028 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s0 [0, 65535] { R2029 += 1, R2030 += 1 };
  s0 -> s1 [0, 65535] { R2030 += 1, R30 += 1, R5 += 1 };
  s0 -> s2 [0, 65535] { R2030 += 1, R29 += 1, R30 += 1 };
  s1 -> s4 [0, 65535] { R2030 += 1 };
  s1 -> s1 [0, 65535] { R2030 += 1, R30 += 1, R5 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R2030 += 1, R30 += 1, R5 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2030 += 1, R29 += 1, R30 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2030 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 65535] { R2032 += 1, R1937 += 1, R1938 += 1 };
  s0 -> s0 [0, 65535] { R2031 += 1, R2032 += 1 };
  s0 -> s2 [0, 65535] { R2032 += 1, R1938 += 1, R22 += 1 };
  s1 -> s1 [0, 65535] { R2032 += 1, R1937 += 1, R1938 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R2032 += 1, R1938 += 1, R22 += 1 };
  s2 -> s3 [0, 65535] { R2032 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2032 += 1, R1938 += 1, R22 += 1 };
  s3 -> s3 [0, 65535] { R2032 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 65] { R2034 += 1, R1940 += 1 };
  s0 -> s0 [0, 65535] { R2033 += 1, R2034 += 1 };
  s0 -> s2 [0, 65535] { R2034 += 1, R1939 += 1, R1940 += 1 };
  s0 -> s3 [66, 66] { R2034 += 1, R1940 += 1 };
  s0 -> s4 [66, 66] { R2034 += 1, R1940 += 1 };
  s0 -> s1 [71, 65535] { R2034 += 1, R1940 += 1 };
  s1 -> s1 [0, 65] { R2034 += 1, R1940 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2034 += 1 };
  s1 -> s3 [66, 66] { R2034 += 1, R1940 += 1 };
  s1 -> s4 [66, 66] { R2034 += 1, R1940 += 1 };
  s1 -> s1 [71, 65535] { R2034 += 1, R1940 += 1 };
  s2 -> s1 [0, 65] { R2034 += 1, R1940 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2034 += 1, R1939 += 1, R1940 += 1 };
  s2 -> s3 [66, 66] { R2034 += 1, R1940 += 1 };
  s2 -> s4 [66, 66] { R2034 += 1, R1940 += 1 };
  s2 -> s1 [71, 65535] { R2034 += 1, R1940 += 1 };
  s3 -> s3 [0, 66] { R2034 += 1, R1940 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2034 += 1 };
  s3 -> s3 [71, 65535] { R2034 += 1, R1940 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2034 += 1 };
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 65] { R2036 += 1, R1942 += 1, R49 += 1 };
  s0 -> s0 [0, 65535] { R2035 += 1, R2036 += 1 };
  s0 -> s2 [0, 65535] { R2036 += 1, R1941 += 1, R1942 += 1 };
  s0 -> s3 [66, 66] { R2036 += 1, R1942 += 1, R49 += 1 };
  s0 -> s4 [66, 66] { R2036 += 1, R1942 += 1, R49 += 1 };
  s0 -> s1 [67, 65535] { R2036 += 1, R1942 += 1, R49 += 1 };
  s1 -> s1 [0, 65] { R2036 += 1, R1942 += 1, R49 += 1 };
  s1 -> s1 [0, 65535] { R2036 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [66, 66] { R2036 += 1, R1942 += 1, R49 += 1 };
  s1 -> s4 [66, 66] { R2036 += 1, R1942 += 1, R49 += 1 };
  s1 -> s1 [67, 65535] { R2036 += 1, R1942 += 1, R49 += 1 };
  s2 -> s1 [0, 65] { R2036 += 1, R1942 += 1, R49 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R2036 += 1, R1941 += 1, R1942 += 1 };
  s2 -> s3 [66, 66] { R2036 += 1, R1942 += 1, R49 += 1 };
  s2 -> s4 [66, 66] { R2036 += 1, R1942 += 1, R49 += 1 };
  s2 -> s1 [67, 65535] { R2036 += 1, R1942 += 1, R49 += 1 };
  s3 -> s3 [0, 65535] { R2036 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R2036 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2036 += 1, R1942 += 1, R49 += 1 };
  s5 -> s5 [0, 65535] { R2036 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 65] { R2038 += 1, R1944 += 1, R51 += 1 };
  s0 -> s0 [0, 65535] { R2037 += 1, R2038 += 1 };
  s0 -> s2 [0, 65535] { R2038 += 1, R1943 += 1, R1944 += 1 };
  s0 -> s3 [66, 66] { R2038 += 1, R1944 += 1, R51 += 1 };
  s0 -> s4 [66, 66] { R2038 += 1, R1944 += 1, R51 += 1 };
  s0 -> s1 [67, 65535] { R2038 += 1, R1944 += 1, R51 += 1 };
  s1 -> s1 [0, 65] { R2038 += 1, R1944 += 1, R51 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R2038 += 1 };
  s1 -> s3 [66, 66] { R2038 += 1, R1944 += 1, R51 += 1 };
  s1 -> s4 [66, 66] { R2038 += 1, R1944 += 1, R51 += 1 };
  s1 -> s1 [67, 65535] { R2038 += 1, R1944 += 1, R51 += 1 };
  s2 -> s1 [0, 65] { R2038 += 1, R1944 += 1, R51 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R2038 += 1, R1943 += 1, R1944 += 1 };
  s2 -> s3 [66, 66] { R2038 += 1, R1944 += 1, R51 += 1 };
  s2 -> s4 [66, 66] { R2038 += 1, R1944 += 1, R51 += 1 };
  s2 -> s1 [67, 65535] { R2038 += 1, R1944 += 1, R51 += 1 };
  s3 -> s3 [0, 65535] { R2038 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R2038 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2038 += 1, R1944 += 1, R51 += 1 };
  s5 -> s5 [0, 65535] { R2038 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65] { R2040 += 1, R1946 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R2039 += 1, R2040 += 1 };
  s0 -> s2 [0, 65535] { R2040 += 1, R1945 += 1, R1946 += 1 };
  s0 -> s3 [66, 66] { R2040 += 1, R1946 += 1, R53 += 1, R54 += 1 };
  s0 -> s4 [66, 66] { R2040 += 1, R1946 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [67, 65535] { R2040 += 1, R1946 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65] { R2040 += 1, R1946 += 1, R53 += 1, R54 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2040 += 1 };
  s1 -> s3 [66, 66] { R2040 += 1, R1946 += 1, R53 += 1, R54 += 1 };
  s1 -> s4 [66, 66] { R2040 += 1, R1946 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [67, 65535] { R2040 += 1, R1946 += 1, R53 += 1, R54 += 1 };
  s2 -> s1 [0, 65] { R2040 += 1, R1946 += 1, R53 += 1, R54 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2040 += 1, R1945 += 1, R1946 += 1 };
  s2 -> s3 [66, 66] { R2040 += 1, R1946 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [66, 66] { R2040 += 1, R1946 += 1, R53 += 1, R54 += 1 };
  s2 -> s1 [67, 65535] { R2040 += 1, R1946 += 1, R53 += 1, R54 += 1 };
  s3 -> s3 [0, 65535] { R2040 += 1, R1946 += 1, R53 += 1, R54 += 1 };
  s3 -> s6 [0, 65535] { R2040 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2040 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2040 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 65] { R2042 += 1, R1948 += 1, R57 += 1, R58 += 1 };
  s0 -> s2 [0, 65535] { R2042 += 1, R1947 += 1, R1948 += 1 };
  s0 -> s0 [0, 65535] { R2041 += 1, R2042 += 1 };
  s0 -> s3 [66, 66] { R2042 += 1, R1948 += 1, R57 += 1, R58 += 1 };
  s0 -> s4 [66, 66] { R2042 += 1, R1948 += 1, R57 += 1, R58 += 1 };
  s0 -> s1 [67, 65535] { R2042 += 1, R1948 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [0, 65] { R2042 += 1, R1948 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [0, 65535] { R2042 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R2042 += 1, R1948 += 1, R57 += 1, R58 += 1 };
  s1 -> s4 [66, 66] { R2042 += 1, R1948 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [67, 65535] { R2042 += 1, R1948 += 1, R57 += 1, R58 += 1 };
  s2 -> s1 [0, 65] { R2042 += 1, R1948 += 1, R57 += 1, R58 += 1 };
  s2 -> s2 [0, 65535] { R2042 += 1, R1947 += 1, R1948 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R2042 += 1, R1948 += 1, R57 += 1, R58 += 1 };
  s2 -> s4 [66, 66] { R2042 += 1, R1948 += 1, R57 += 1, R58 += 1 };
  s2 -> s1 [67, 65535] { R2042 += 1, R1948 += 1, R57 += 1, R58 += 1 };
  s3 -> s3 [0, 65535] { R2042 += 1, R1948 += 1, R57 += 1, R58 += 1 };
  s3 -> s6 [0, 65535] { R2042 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2042 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2042 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 65] { R2044 += 1, R1950 += 1, R63 += 1, R64 += 1 };
  s0 -> s2 [0, 65535] { R2044 += 1, R1949 += 1, R1950 += 1 };
  s0 -> s0 [0, 65535] { R2043 += 1, R2044 += 1 };
  s0 -> s3 [66, 66] { R2044 += 1, R1950 += 1, R63 += 1, R64 += 1 };
  s0 -> s4 [66, 66] { R2044 += 1, R1950 += 1, R63 += 1, R64 += 1 };
  s0 -> s1 [67, 65535] { R2044 += 1, R1950 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [0, 65] { R2044 += 1, R1950 += 1, R63 += 1, R64 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2044 += 1 };
  s1 -> s3 [66, 66] { R2044 += 1, R1950 += 1, R63 += 1, R64 += 1 };
  s1 -> s4 [66, 66] { R2044 += 1, R1950 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [67, 65535] { R2044 += 1, R1950 += 1, R63 += 1, R64 += 1 };
  s2 -> s1 [0, 65] { R2044 += 1, R1950 += 1, R63 += 1, R64 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2044 += 1, R1949 += 1, R1950 += 1 };
  s2 -> s3 [66, 66] { R2044 += 1, R1950 += 1, R63 += 1, R64 += 1 };
  s2 -> s4 [66, 66] { R2044 += 1, R1950 += 1, R63 += 1, R64 += 1 };
  s2 -> s1 [67, 65535] { R2044 += 1, R1950 += 1, R63 += 1, R64 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2044 += 1, R1950 += 1, R63 += 1, R64 += 1 };
  s3 -> s6 [0, 65535] { R2044 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2044 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2044 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65] { R2046 += 1, R1952 += 1, R67 += 1, R68 += 1 };
  s0 -> s2 [0, 65535] { R2046 += 1, R1951 += 1, R1952 += 1 };
  s0 -> s0 [0, 65535] { R2045 += 1, R2046 += 1 };
  s0 -> s3 [66, 66] { R2046 += 1, R1952 += 1, R67 += 1, R68 += 1 };
  s0 -> s4 [66, 66] { R2046 += 1, R1952 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [67, 65535] { R2046 += 1, R1952 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65] { R2046 += 1, R1952 += 1, R67 += 1, R68 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2046 += 1 };
  s1 -> s3 [66, 66] { R2046 += 1, R1952 += 1, R67 += 1, R68 += 1 };
  s1 -> s4 [66, 66] { R2046 += 1, R1952 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [67, 65535] { R2046 += 1, R1952 += 1, R67 += 1, R68 += 1 };
  s2 -> s1 [0, 65] { R2046 += 1, R1952 += 1, R67 += 1, R68 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2046 += 1, R1951 += 1, R1952 += 1 };
  s2 -> s3 [66, 66] { R2046 += 1, R1952 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [66, 66] { R2046 += 1, R1952 += 1, R67 += 1, R68 += 1 };
  s2 -> s1 [67, 65535] { R2046 += 1, R1952 += 1, R67 += 1, R68 += 1 };
  s3 -> s3 [0, 65535] { R2046 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R2046 += 1 };
  s4 -> s4 [0, 65535] { R2046 += 1, R1952 += 1, R67 += 1, R68 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2046 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 65] { R2048 += 1, R1954 += 1, R73 += 1, R74 += 1 };
  s0 -> s2 [0, 65535] { R2048 += 1, R1953 += 1, R1954 += 1 };
  s0 -> s0 [0, 65535] { R2047 += 1, R2048 += 1 };
  s0 -> s3 [66, 66] { R2048 += 1, R1954 += 1, R73 += 1, R74 += 1 };
  s0 -> s4 [66, 66] { R2048 += 1, R1954 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [67, 65535] { R2048 += 1, R1954 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65] { R2048 += 1, R1954 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535] { R2048 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [66, 66] { R2048 += 1, R1954 += 1, R73 += 1, R74 += 1 };
  s1 -> s4 [66, 66] { R2048 += 1, R1954 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [67, 65535] { R2048 += 1, R1954 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [0, 65] { R2048 += 1, R1954 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R2048 += 1, R1953 += 1, R1954 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [66, 66] { R2048 += 1, R1954 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [66, 66] { R2048 += 1, R1954 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [67, 65535] { R2048 += 1, R1954 += 1, R73 += 1, R74 += 1 };
  s3 -> s3 [0, 65535] { R2048 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R2048 += 1 };
  s4 -> s4 [0, 65535] { R2048 += 1, R1954 += 1, R73 += 1, R74 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R2048 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65] { R2050 += 1, R1974 += 1 };
  s0 -> s2 [0, 65535] { R2050 += 1, R1973 += 1, R1974 += 1 };
  s0 -> s0 [0, 65535] { R2049 += 1, R2050 += 1 };
  s0 -> s3 [66, 66] { R2050 += 1, R1974 += 1 };
  s0 -> s1 [67, 65535] { R2050 += 1, R1974 += 1 };
  s1 -> s1 [0, 65] { R2050 += 1, R1974 += 1 };
  s1 -> s3 [66, 66] { R2050 += 1, R1974 += 1 };
  s1 -> s1 [67, 65535] { R2050 += 1, R1974 += 1 };
  s2 -> s1 [0, 65] { R2050 += 1, R1974 += 1 };
  s2 -> s2 [0, 65535] { R2050 += 1, R1973 += 1, R1974 += 1 };
  s2 -> s3 [66, 66] { R2050 += 1, R1974 += 1 };
  s2 -> s1 [67, 65535] { R2050 += 1, R1974 += 1 };
  s3 -> s3 [0, 65535] { R2050 += 1, R1974 += 1 };
  s3 -> s4 [0, 65535] { R2050 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2050 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 65535] { R2052 += 1, R1976 += 1, R1 += 1 };
  s0 -> s2 [0, 65535] { R2052 += 1, R1975 += 1, R1976 += 1 };
  s0 -> s0 [0, 65535] { R2051 += 1, R2052 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R2052 += 1 };
  s1 -> s1 [0, 65535] { R2052 += 1, R1976 += 1, R1 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R2052 += 1, R1976 += 1, R1 += 1 };
  s2 -> s2 [0, 65535] { R2052 += 1, R1975 += 1, R1976 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2052 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65] { R2054 += 1, R1978 += 1 };
  s0 -> s2 [0, 65535] { R2054 += 1, R1977 += 1, R1978 += 1 };
  s0 -> s3 [0, 65535] { R2054 += 1, R1978 += 1, R11 += 1 };
  s0 -> s0 [0, 65535] { R2053 += 1, R2054 += 1 };
  s0 -> s4 [66, 66] { R2054 += 1, R1978 += 1 };
  s0 -> s1 [67, 65535] { R2054 += 1, R1978 += 1 };
  s1 -> s1 [0, 65] { R2054 += 1, R1978 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2054 += 1 };
  s1 -> s4 [66, 66] { R2054 += 1, R1978 += 1 };
  s1 -> s1 [67, 65535] { R2054 += 1, R1978 += 1 };
  s2 -> s1 [0, 65] { R2054 += 1, R1978 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2054 += 1, R1977 += 1, R1978 += 1 };
  s2 -> s3 [0, 65535] { R2054 += 1, R1978 += 1, R11 += 1 };
  s2 -> s4 [66, 66] { R2054 += 1, R1978 += 1 };
  s2 -> s1 [67, 65535] { R2054 += 1, R1978 += 1 };
  s3 -> s1 [0, 65] { R2054 += 1, R1978 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2054 += 1, R1978 += 1, R11 += 1 };
  s3 -> s6 [0, 65535] { R2054 += 1 };
  s3 -> s4 [66, 66] { R2054 += 1, R1978 += 1 };
  s3 -> s1 [67, 65535] { R2054 += 1, R1978 += 1 };
  s4 -> s4 [0, 65535] { R2054 += 1, R1978 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2054 += 1 };
  accepting s3, s5, s2, s6, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65] { R2056 += 1, R1980 += 1, R1918 += 1 };
  s0 -> s0 [0, 65535] { R2055 += 1, R2056 += 1 };
  s0 -> s2 [0, 65535] { R2056 += 1, R1979 += 1, R1980 += 1 };
  s0 -> s3 [0, 65535] { R2056 += 1, R1980 += 1, R1917 += 1, R1918 += 1 };
  s0 -> s1 [67, 65535] { R2056 += 1, R1980 += 1, R1918 += 1 };
  s1 -> s1 [0, 65] { R2056 += 1, R1980 += 1, R1918 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R2056 += 1, R1980 += 1 };
  s1 -> s5 [0, 65535] { R2056 += 1 };
  s1 -> s1 [67, 65535] { R2056 += 1, R1980 += 1, R1918 += 1 };
  s2 -> s1 [0, 65] { R2056 += 1, R1980 += 1, R1918 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2056 += 1, R1979 += 1, R1980 += 1 };
  s2 -> s3 [0, 65535] { R2056 += 1, R1980 += 1, R1917 += 1, R1918 += 1 };
  s2 -> s1 [67, 65535] { R2056 += 1, R1980 += 1, R1918 += 1 };
  s3 -> s1 [0, 65] { R2056 += 1, R1980 += 1, R1918 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2056 += 1, R1980 += 1, R1917 += 1, R1918 += 1 };
  s3 -> s5 [0, 65535] { R2056 += 1 };
  s3 -> s1 [67, 65535] { R2056 += 1, R1980 += 1, R1918 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2056 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s0 [0, 65535] { R2057 += 1, R2058 += 1 };
  s0 -> s1 [0, 65535] { R2058 += 1, R1982 += 1, R1919 += 1, R1920 += 1 };
  s0 -> s2 [0, 65535] { R2058 += 1, R1981 += 1, R1982 += 1 };
  s0 -> s3 [0, 65535] { R2058 += 1, R1982 += 1, R1920 += 1, R20 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R2058 += 1, R1982 += 1, R1919 += 1, R1920 += 1 };
  s1 -> s3 [0, 65535] { R2058 += 1, R1982 += 1, R1920 += 1, R20 += 1 };
  s1 -> s5 [0, 65535] { R2058 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R2058 += 1, R1982 += 1, R1919 += 1, R1920 += 1 };
  s2 -> s2 [0, 65535] { R2058 += 1, R1981 += 1, R1982 += 1 };
  s2 -> s3 [0, 65535] { R2058 += 1, R1982 += 1, R1920 += 1, R20 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2058 += 1, R1982 += 1, R1920 += 1, R20 += 1 };
  s3 -> s5 [0, 65535] { R2058 += 1 };
  s3 -> s6 [0, 65535] { R2058 += 1, R1982 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2058 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R2058 += 1 };
  s6 -> s6 [0, 65535] { R2058 += 1, R1982 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 66] { R2060 += 1, R1984 += 1, R1922 += 1 };
  s0 -> s0 [0, 65535] { R2059 += 1, R2060 += 1 };
  s0 -> s2 [0, 65535] { R2060 += 1, R1983 += 1, R1984 += 1 };
  s0 -> s3 [0, 65535] { R2060 += 1, R1984 += 1, R1921 += 1, R1922 += 1 };
  s0 -> s1 [70, 65535] { R2060 += 1, R1984 += 1, R1922 += 1 };
  s1 -> s1 [0, 66] { R2060 += 1, R1984 += 1, R1922 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R2060 += 1, R1984 += 1 };
  s1 -> s5 [0, 65535] { R2060 += 1 };
  s1 -> s1 [70, 65535] { R2060 += 1, R1984 += 1, R1922 += 1 };
  s2 -> s1 [0, 66] { R2060 += 1, R1984 += 1, R1922 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2060 += 1, R1983 += 1, R1984 += 1 };
  s2 -> s3 [0, 65535] { R2060 += 1, R1984 += 1, R1921 += 1, R1922 += 1 };
  s2 -> s1 [70, 65535] { R2060 += 1, R1984 += 1, R1922 += 1 };
  s3 -> s1 [0, 66] { R2060 += 1, R1984 += 1, R1922 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R2060 += 1 };
  s3 -> s3 [0, 65535] { R2060 += 1, R1984 += 1, R1921 += 1, R1922 += 1 };
  s3 -> s1 [70, 65535] { R2060 += 1, R1984 += 1, R1922 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2060 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R2062 += 1, R1986 += 1, R1923 += 1, R1924 += 1 };
  s0 -> s2 [0, 65535] { R2062 += 1, R1986 += 1, R1924 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R2061 += 1, R2062 += 1 };
  s0 -> s3 [0, 65535] { R2062 += 1, R1985 += 1, R1986 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R2062 += 1 };
  s1 -> s1 [0, 65535] { R2062 += 1, R1986 += 1, R1923 += 1, R1924 += 1 };
  s1 -> s2 [0, 65535] { R2062 += 1, R1986 += 1, R1924 += 1, R78 += 1 };
  s2 -> s5 [0, 65535] { R2062 += 1, R1986 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s6 [0, 65535] { R2062 += 1 };
  s2 -> s2 [0, 65535] { R2062 += 1, R1986 += 1, R1924 += 1, R78 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R2062 += 1, R1986 += 1, R1923 += 1, R1924 += 1 };
  s3 -> s2 [0, 65535] { R2062 += 1, R1986 += 1, R1924 += 1, R78 += 1 };
  s3 -> s3 [0, 65535] { R2062 += 1, R1985 += 1, R1986 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2062 += 1, R1986 += 1 };
  s5 -> s4 [0, 65535];
  s5 -> s6 [0, 65535] { R2062 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R2062 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 69] { R2064 += 1, R1988 += 1, R1926 += 1 };
  s0 -> s2 [0, 65535] { R2064 += 1, R1988 += 1, R1926 += 1, R80 += 1 };
  s0 -> s3 [0, 65535] { R2064 += 1, R1987 += 1, R1988 += 1 };
  s0 -> s0 [0, 65535] { R2063 += 1, R2064 += 1 };
  s0 -> s4 [0, 65535] { R2064 += 1, R1988 += 1, R1925 += 1, R1926 += 1 };
  s0 -> s1 [71, 65535] { R2064 += 1, R1988 += 1, R1926 += 1 };
  s1 -> s1 [0, 69] { R2064 += 1, R1988 += 1, R1926 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2064 += 1, R1988 += 1 };
  s1 -> s6 [0, 65535] { R2064 += 1 };
  s1 -> s1 [71, 65535] { R2064 += 1, R1988 += 1, R1926 += 1 };
  s2 -> s1 [0, 69] { R2064 += 1, R1988 += 1, R1926 += 1 };
  s2 -> s2 [0, 65535] { R2064 += 1, R1988 += 1, R1926 += 1, R80 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R2064 += 1 };
  s2 -> s7 [0, 65535] { R2064 += 1, R1988 += 1 };
  s2 -> s1 [71, 65535] { R2064 += 1, R1988 += 1, R1926 += 1 };
  s3 -> s1 [0, 69] { R2064 += 1, R1988 += 1, R1926 += 1 };
  s3 -> s2 [0, 65535] { R2064 += 1, R1988 += 1, R1926 += 1, R80 += 1 };
  s3 -> s3 [0, 65535] { R2064 += 1, R1987 += 1, R1988 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R2064 += 1, R1988 += 1, R1925 += 1, R1926 += 1 };
  s3 -> s1 [71, 65535] { R2064 += 1, R1988 += 1, R1926 += 1 };
  s4 -> s1 [0, 69] { R2064 += 1, R1988 += 1, R1926 += 1 };
  s4 -> s2 [0, 65535] { R2064 += 1, R1988 += 1, R1926 += 1, R80 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2064 += 1, R1988 += 1, R1925 += 1, R1926 += 1 };
  s4 -> s6 [0, 65535] { R2064 += 1 };
  s4 -> s1 [71, 65535] { R2064 += 1, R1988 += 1, R1926 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2064 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R2064 += 1 };
  s7 -> s7 [0, 65535] { R2064 += 1, R1988 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R2066 += 1, R1990 += 1, R1928 += 1, R84 += 1 };
  s0 -> s0 [0, 65535] { R2065 += 1, R2066 += 1 };
  s0 -> s2 [0, 65535] { R2066 += 1, R1990 += 1, R1927 += 1, R1928 += 1 };
  s0 -> s3 [0, 65535] { R2066 += 1, R1990 += 1, R1928 += 1, R83 += 1, R84 += 1 };
  s0 -> s4 [0, 65535] { R2066 += 1, R1989 += 1, R1990 += 1 };
  s0 -> s1 [71, 65535] { R2066 += 1, R1990 += 1, R1928 += 1, R84 += 1 };
  s1 -> s1 [0, 69] { R2066 += 1, R1990 += 1, R1928 += 1, R84 += 1 };
  s1 -> s1 [0, 65535] { R2066 += 1, R1990 += 1, R1928 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R2066 += 1, R1990 += 1 };
  s1 -> s7 [0, 65535] { R2066 += 1 };
  s1 -> s1 [71, 65535] { R2066 += 1, R1990 += 1, R1928 += 1, R84 += 1 };
  s2 -> s1 [0, 69] { R2066 += 1, R1990 += 1, R1928 += 1, R84 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2066 += 1, R1990 += 1, R1927 += 1, R1928 += 1 };
  s2 -> s3 [0, 65535] { R2066 += 1, R1990 += 1, R1928 += 1, R83 += 1, R84 += 1 };
  s2 -> s7 [0, 65535] { R2066 += 1 };
  s2 -> s1 [71, 65535] { R2066 += 1, R1990 += 1, R1928 += 1, R84 += 1 };
  s3 -> s1 [0, 69] { R2066 += 1, R1990 += 1, R1928 += 1, R84 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2066 += 1, R1990 += 1, R1928 += 1, R83 += 1, R84 += 1 };
  s3 -> s6 [0, 65535] { R2066 += 1, R1990 += 1 };
  s3 -> s7 [0, 65535] { R2066 += 1 };
  s3 -> s1 [71, 65535] { R2066 += 1, R1990 += 1, R1928 += 1, R84 += 1 };
  s4 -> s1 [0, 69] { R2066 += 1, R1990 += 1, R1928 += 1, R84 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R2066 += 1, R1990 += 1, R1927 += 1, R1928 += 1 };
  s4 -> s3 [0, 65535] { R2066 += 1, R1990 += 1, R1928 += 1, R83 += 1, R84 += 1 };
  s4 -> s4 [0, 65535] { R2066 += 1, R1989 += 1, R1990 += 1 };
  s4 -> s1 [71, 65535] { R2066 += 1, R1990 += 1, R1928 += 1, R84 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2066 += 1, R1990 += 1 };
  s6 -> s7 [0, 65535] { R2066 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R2066 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R2068 += 1, R1992 += 1, R1930 += 1, R89 += 1, R90 += 1 };
  s0 -> s2 [0, 65535] { R2068 += 1, R1992 += 1, R1929 += 1, R1930 += 1 };
  s0 -> s3 [0, 65535] { R2068 += 1, R1992 += 1, R1930 += 1, R88 += 1, R89 += 1 };
  s0 -> s4 [0, 65535] { R2068 += 1, R1991 += 1, R1992 += 1 };
  s0 -> s0 [0, 65535] { R2067 += 1, R2068 += 1 };
  s1 -> s8 [0, 65535] { R2068 += 1, R1992 += 1, R1930 += 1 };
  s1 -> s6 [0, 65535] { R2068 += 1, R1992 += 1 };
  s1 -> s1 [0, 65535] { R2068 += 1, R1992 += 1, R1930 += 1, R89 += 1, R90 += 1 };
  s1 -> s7 [0, 65535] { R2068 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R2068 += 1, R1992 += 1, R1930 += 1, R89 += 1, R90 += 1 };
  s2 -> s2 [0, 65535] { R2068 += 1, R1992 += 1, R1929 += 1, R1930 += 1 };
  s2 -> s3 [0, 65535] { R2068 += 1, R1992 += 1, R1930 += 1, R88 += 1, R89 += 1 };
  s2 -> s7 [0, 65535] { R2068 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R2068 += 1, R1992 += 1 };
  s3 -> s1 [0, 65535] { R2068 += 1, R1992 += 1, R1930 += 1, R89 += 1, R90 += 1 };
  s3 -> s3 [0, 65535] { R2068 += 1, R1992 += 1, R1930 += 1, R88 += 1, R89 += 1 };
  s3 -> s7 [0, 65535] { R2068 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R2068 += 1, R1992 += 1, R1930 += 1, R89 += 1, R90 += 1 };
  s4 -> s2 [0, 65535] { R2068 += 1, R1992 += 1, R1929 += 1, R1930 += 1 };
  s4 -> s3 [0, 65535] { R2068 += 1, R1992 += 1, R1930 += 1, R88 += 1, R89 += 1 };
  s4 -> s4 [0, 65535] { R2068 += 1, R1991 += 1, R1992 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2068 += 1, R1992 += 1 };
  s6 -> s7 [0, 65535] { R2068 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R2068 += 1 };
  s7 -> s5 [0, 65535];
  s8 -> s8 [0, 65535] { R2068 += 1, R1992 += 1, R1930 += 1 };
  s8 -> s6 [0, 65535] { R2068 += 1, R1992 += 1 };
  s8 -> s7 [0, 65535] { R2068 += 1 };
  s8 -> s5 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 70] { R2070 += 1, R1994 += 1, R1932 += 1, R94 += 1 };
  s0 -> s2 [0, 65535] { R2070 += 1, R1994 += 1, R1931 += 1, R1932 += 1 };
  s0 -> s0 [0, 65535] { R2069 += 1, R2070 += 1 };
  s0 -> s3 [0, 65535] { R2070 += 1, R1993 += 1, R1994 += 1 };
  s0 -> s1 [0, 65535] { R2070 += 1, R1994 += 1, R1932 += 1 };
  s0 -> s1 [81, 65535] { R2070 += 1, R1994 += 1, R1932 += 1, R94 += 1 };
  s1 -> s1 [0, 70] { R2070 += 1, R1994 += 1, R1932 += 1, R94 += 1 };
  s1 -> s5 [0, 65535] { R2070 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R2070 += 1, R1994 += 1 };
  s1 -> s1 [0, 65535] { R2070 += 1, R1994 += 1, R1932 += 1 };
  s1 -> s1 [81, 65535] { R2070 += 1, R1994 += 1, R1932 += 1, R94 += 1 };
  s2 -> s1 [0, 70] { R2070 += 1, R1994 += 1, R1932 += 1, R94 += 1 };
  s2 -> s5 [0, 65535] { R2070 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2070 += 1, R1994 += 1, R1931 += 1, R1932 += 1 };
  s2 -> s1 [0, 65535] { R2070 += 1, R1994 += 1, R1932 += 1 };
  s2 -> s1 [81, 65535] { R2070 += 1, R1994 += 1, R1932 += 1, R94 += 1 };
  s3 -> s1 [0, 70] { R2070 += 1, R1994 += 1, R1932 += 1, R94 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R2070 += 1, R1994 += 1, R1931 += 1, R1932 += 1 };
  s3 -> s3 [0, 65535] { R2070 += 1, R1993 += 1, R1994 += 1 };
  s3 -> s1 [0, 65535] { R2070 += 1, R1994 += 1, R1932 += 1 };
  s3 -> s1 [81, 65535] { R2070 += 1, R1994 += 1, R1932 += 1, R94 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2070 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R2070 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R2070 += 1, R1994 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 65535] { R2072 += 1, R1995 += 1, R1996 += 1 };
  s0 -> s0 [0, 65535] { R2071 += 1, R2072 += 1 };
  s0 -> s2 [0, 65535] { R2072 += 1, R1996 += 1, R1934 += 1 };
  s0 -> s3 [0, 65535] { R2072 += 1, R1996 += 1, R1933 += 1, R1934 += 1 };
  s1 -> s1 [0, 65535] { R2072 += 1, R1995 += 1, R1996 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R2072 += 1, R1996 += 1, R1934 += 1 };
  s1 -> s3 [0, 65535] { R2072 += 1, R1996 += 1, R1933 += 1, R1934 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2072 += 1, R1996 += 1, R1934 += 1 };
  s2 -> s5 [0, 65535] { R2072 += 1 };
  s2 -> s6 [0, 65535] { R2072 += 1, R1996 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R2072 += 1, R1996 += 1, R1934 += 1 };
  s3 -> s3 [0, 65535] { R2072 += 1, R1996 += 1, R1933 += 1, R1934 += 1 };
  s3 -> s5 [0, 65535] { R2072 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2072 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R2072 += 1 };
  s6 -> s6 [0, 65535] { R2072 += 1, R1996 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s0 [0, 65535] { R2073 += 1, R2074 += 1 };
  s0 -> s1 [0, 65535] { R2074 += 1, R1998 += 1, R1935 += 1, R1936 += 1 };
  s0 -> s2 [0, 65535] { R2074 += 1, R1998 += 1, R1936 += 1 };
  s0 -> s3 [0, 65535] { R2074 += 1, R1997 += 1, R1998 += 1 };
  s1 -> s6 [0, 65535] { R2074 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R2074 += 1, R1998 += 1, R1935 += 1, R1936 += 1 };
  s1 -> s2 [0, 65535] { R2074 += 1, R1998 += 1, R1936 += 1 };
  s2 -> s5 [0, 65535] { R2074 += 1, R1998 += 1 };
  s2 -> s6 [0, 65535] { R2074 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2074 += 1, R1998 += 1, R1936 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R2074 += 1, R1998 += 1, R1935 += 1, R1936 += 1 };
  s3 -> s2 [0, 65535] { R2074 += 1, R1998 += 1, R1936 += 1 };
  s3 -> s3 [0, 65535] { R2074 += 1, R1997 += 1, R1998 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2074 += 1, R1998 += 1 };
  s5 -> s6 [0, 65535] { R2074 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R2074 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R2076 += 1, R2000 += 1, R1955 += 1, R1956 += 1 };
  s0 -> s2 [0, 65535] { R2076 += 1, R1999 += 1, R2000 += 1 };
  s0 -> s3 [0, 65535] { R2076 += 1, R2000 += 1, R1956 += 1, R21 += 1 };
  s0 -> s0 [0, 65535] { R2075 += 1, R2076 += 1 };
  s1 -> s1 [0, 65535] { R2076 += 1, R2000 += 1, R1955 += 1, R1956 += 1 };
  s1 -> s3 [0, 65535] { R2076 += 1, R2000 += 1, R1956 += 1, R21 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R2076 += 1 };
  s2 -> s1 [0, 65535] { R2076 += 1, R2000 += 1, R1955 += 1, R1956 += 1 };
  s2 -> s2 [0, 65535] { R2076 += 1, R1999 += 1, R2000 += 1 };
  s2 -> s3 [0, 65535] { R2076 += 1, R2000 += 1, R1956 += 1, R21 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2076 += 1, R2000 += 1, R1956 += 1, R21 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R2076 += 1, R2000 += 1 };
  s3 -> s6 [0, 65535] { R2076 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2076 += 1, R2000 += 1 };
  s5 -> s6 [0, 65535] { R2076 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R2076 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 65] { R2078 += 1, R2002 += 1, R1958 += 1 };
  s0 -> s0 [0, 65535] { R2077 += 1, R2078 += 1 };
  s0 -> s2 [0, 65535] { R2078 += 1, R2002 += 1, R1957 += 1, R1958 += 1 };
  s0 -> s3 [0, 65535] { R2078 += 1, R2001 += 1, R2002 += 1 };
  s0 -> s4 [66, 66] { R2078 += 1, R2002 += 1, R1958 += 1 };
  s0 -> s5 [66, 66] { R2078 += 1, R2002 += 1, R1958 += 1 };
  s0 -> s6 [70, 70] { R2078 += 1, R2002 += 1, R1958 += 1 };
  s0 -> s1 [71, 65535] { R2078 += 1, R2002 += 1, R1958 += 1 };
  s1 -> s1 [0, 65] { R2078 += 1, R2002 += 1, R1958 += 1 };
  s1 -> s4 [66, 66] { R2078 += 1, R2002 += 1, R1958 += 1 };
  s1 -> s5 [66, 66] { R2078 += 1, R2002 += 1, R1958 += 1 };
  s1 -> s6 [70, 70] { R2078 += 1, R2002 += 1, R1958 += 1 };
  s1 -> s1 [71, 65535] { R2078 += 1, R2002 += 1, R1958 += 1 };
  s2 -> s1 [0, 65] { R2078 += 1, R2002 += 1, R1958 += 1 };
  s2 -> s2 [0, 65535] { R2078 += 1, R2002 += 1, R1957 += 1, R1958 += 1 };
  s2 -> s4 [66, 66] { R2078 += 1, R2002 += 1, R1958 += 1 };
  s2 -> s5 [66, 66] { R2078 += 1, R2002 += 1, R1958 += 1 };
  s2 -> s6 [70, 70] { R2078 += 1, R2002 += 1, R1958 += 1 };
  s2 -> s1 [71, 65535] { R2078 += 1, R2002 += 1, R1958 += 1 };
  s3 -> s1 [0, 65] { R2078 += 1, R2002 += 1, R1958 += 1 };
  s3 -> s2 [0, 65535] { R2078 += 1, R2002 += 1, R1957 += 1, R1958 += 1 };
  s3 -> s3 [0, 65535] { R2078 += 1, R2001 += 1, R2002 += 1 };
  s3 -> s4 [66, 66] { R2078 += 1, R2002 += 1, R1958 += 1 };
  s3 -> s5 [66, 66] { R2078 += 1, R2002 += 1, R1958 += 1 };
  s3 -> s6 [70, 70] { R2078 += 1, R2002 += 1, R1958 += 1 };
  s3 -> s1 [71, 65535] { R2078 += 1, R2002 += 1, R1958 += 1 };
  s4 -> s4 [0, 66] { R2078 += 1, R2002 += 1, R1958 += 1 };
  s4 -> s9 [70, 70] { R2078 += 1, R2002 += 1, R1958 += 1 };
  s4 -> s4 [71, 65535] { R2078 += 1, R2002 += 1, R1958 += 1 };
  s6 -> s6 [0, 65] { R2078 += 1, R2002 += 1, R1958 += 1 };
  s6 -> s6 [0, 65535] { R2078 += 1, R2002 += 1 };
  s6 -> s7 [0, 65535] { R2078 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [66, 66] { R2078 += 1, R2002 += 1, R1958 += 1 };
  s6 -> s10 [66, 66] { R2078 += 1, R2002 += 1, R1958 += 1 };
  s6 -> s6 [70, 65535] { R2078 += 1, R2002 += 1, R1958 += 1 };
  s7 -> s7 [0, 65535] { R2078 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 66] { R2078 += 1, R2002 += 1, R1958 += 1 };
  s9 -> s7 [0, 65535] { R2078 += 1 };
  s9 -> s9 [0, 65535] { R2078 += 1, R2002 += 1 };
  s9 -> s8 [0, 65535];
  s9 -> s9 [70, 65535] { R2078 += 1, R2002 += 1, R1958 += 1 };
  s10 -> s8 [0, 65535];
  s10 -> s7 [0, 65535] { R2078 += 1 };
  s10 -> s10 [0, 65535] { R2078 += 1, R2002 += 1 };
  accepting s8, s9, s6, s7, s10;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65] { R2080 += 1, R2004 += 1, R1960 += 1, R77 += 1 };
  s0 -> s2 [0, 65535] { R2080 += 1, R2004 += 1, R1959 += 1, R1960 += 1 };
  s0 -> s3 [0, 65535] { R2080 += 1, R2003 += 1, R2004 += 1 };
  s0 -> s0 [0, 65535] { R2079 += 1, R2080 += 1 };
  s0 -> s4 [66, 66] { R2080 += 1, R2004 += 1, R1960 += 1, R77 += 1 };
  s0 -> s5 [66, 66] { R2080 += 1, R2004 += 1, R1960 += 1, R77 += 1 };
  s0 -> s1 [67, 65535] { R2080 += 1, R2004 += 1, R1960 += 1, R77 += 1 };
  s1 -> s1 [0, 65] { R2080 += 1, R2004 += 1, R1960 += 1, R77 += 1 };
  s1 -> s6 [0, 65535] { R2080 += 1 };
  s1 -> s1 [0, 65535] { R2080 += 1, R2004 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [66, 66] { R2080 += 1, R2004 += 1, R1960 += 1, R77 += 1 };
  s1 -> s5 [66, 66] { R2080 += 1, R2004 += 1, R1960 += 1, R77 += 1 };
  s1 -> s1 [67, 65535] { R2080 += 1, R2004 += 1, R1960 += 1, R77 += 1 };
  s2 -> s1 [0, 65] { R2080 += 1, R2004 += 1, R1960 += 1, R77 += 1 };
  s2 -> s6 [0, 65535] { R2080 += 1 };
  s2 -> s2 [0, 65535] { R2080 += 1, R2004 += 1, R1959 += 1, R1960 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [66, 66] { R2080 += 1, R2004 += 1, R1960 += 1, R77 += 1 };
  s2 -> s5 [66, 66] { R2080 += 1, R2004 += 1, R1960 += 1, R77 += 1 };
  s2 -> s1 [67, 65535] { R2080 += 1, R2004 += 1, R1960 += 1, R77 += 1 };
  s3 -> s1 [0, 65] { R2080 += 1, R2004 += 1, R1960 += 1, R77 += 1 };
  s3 -> s2 [0, 65535] { R2080 += 1, R2004 += 1, R1959 += 1, R1960 += 1 };
  s3 -> s3 [0, 65535] { R2080 += 1, R2003 += 1, R2004 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [66, 66] { R2080 += 1, R2004 += 1, R1960 += 1, R77 += 1 };
  s3 -> s5 [66, 66] { R2080 += 1, R2004 += 1, R1960 += 1, R77 += 1 };
  s3 -> s1 [67, 65535] { R2080 += 1, R2004 += 1, R1960 += 1, R77 += 1 };
  s4 -> s6 [0, 65535] { R2080 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R2080 += 1, R2004 += 1 };
  s5 -> s6 [0, 65535] { R2080 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R2080 += 1, R2004 += 1 };
  s5 -> s5 [0, 65535] { R2080 += 1, R2004 += 1, R1960 += 1, R77 += 1 };
  s6 -> s6 [0, 65535] { R2080 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R2080 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R2080 += 1, R2004 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 65] { R2082 += 1, R2006 += 1, R1962 += 1, R79 += 1 };
  s0 -> s2 [0, 65535] { R2082 += 1, R2005 += 1, R2006 += 1 };
  s0 -> s3 [0, 65535] { R2082 += 1, R2006 += 1, R1961 += 1, R1962 += 1 };
  s0 -> s0 [0, 65535] { R2081 += 1, R2082 += 1 };
  s0 -> s4 [66, 66] { R2082 += 1, R2006 += 1, R1962 += 1, R79 += 1 };
  s0 -> s5 [66, 66] { R2082 += 1, R2006 += 1, R1962 += 1, R79 += 1 };
  s0 -> s1 [67, 65535] { R2082 += 1, R2006 += 1, R1962 += 1, R79 += 1 };
  s1 -> s1 [0, 65] { R2082 += 1, R2006 += 1, R1962 += 1, R79 += 1 };
  s1 -> s1 [0, 65535] { R2082 += 1, R2006 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R2082 += 1 };
  s1 -> s4 [66, 66] { R2082 += 1, R2006 += 1, R1962 += 1, R79 += 1 };
  s1 -> s5 [66, 66] { R2082 += 1, R2006 += 1, R1962 += 1, R79 += 1 };
  s1 -> s1 [67, 65535] { R2082 += 1, R2006 += 1, R1962 += 1, R79 += 1 };
  s2 -> s1 [0, 65] { R2082 += 1, R2006 += 1, R1962 += 1, R79 += 1 };
  s2 -> s2 [0, 65535] { R2082 += 1, R2005 += 1, R2006 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R2082 += 1, R2006 += 1, R1961 += 1, R1962 += 1 };
  s2 -> s4 [66, 66] { R2082 += 1, R2006 += 1, R1962 += 1, R79 += 1 };
  s2 -> s5 [66, 66] { R2082 += 1, R2006 += 1, R1962 += 1, R79 += 1 };
  s2 -> s1 [67, 65535] { R2082 += 1, R2006 += 1, R1962 += 1, R79 += 1 };
  s3 -> s1 [0, 65] { R2082 += 1, R2006 += 1, R1962 += 1, R79 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R2082 += 1, R2006 += 1, R1961 += 1, R1962 += 1 };
  s3 -> s7 [0, 65535] { R2082 += 1 };
  s3 -> s4 [66, 66] { R2082 += 1, R2006 += 1, R1962 += 1, R79 += 1 };
  s3 -> s5 [66, 66] { R2082 += 1, R2006 += 1, R1962 += 1, R79 += 1 };
  s3 -> s1 [67, 65535] { R2082 += 1, R2006 += 1, R1962 += 1, R79 += 1 };
  s4 -> s4 [0, 65535] { R2082 += 1, R2006 += 1, R1962 += 1, R79 += 1 };
  s4 -> s8 [0, 65535] { R2082 += 1, R2006 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R2082 += 1 };
  s5 -> s5 [0, 65535] { R2082 += 1, R2006 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R2082 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2082 += 1 };
  s8 -> s8 [0, 65535] { R2082 += 1, R2006 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R2082 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65] { R2084 += 1, R2008 += 1, R1964 += 1, R81 += 1, R82 += 1 };
  s0 -> s2 [0, 65535] { R2084 += 1, R2007 += 1, R2008 += 1 };
  s0 -> s0 [0, 65535] { R2083 += 1, R2084 += 1 };
  s0 -> s3 [0, 65535] { R2084 += 1, R2008 += 1, R1963 += 1, R1964 += 1 };
  s0 -> s4 [66, 66] { R2084 += 1, R2008 += 1, R1964 += 1, R81 += 1, R82 += 1 };
  s0 -> s5 [66, 66] { R2084 += 1, R2008 += 1, R1964 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [67, 65535] { R2084 += 1, R2008 += 1, R1964 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65] { R2084 += 1, R2008 += 1, R1964 += 1, R81 += 1, R82 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R2084 += 1, R2008 += 1 };
  s1 -> s7 [0, 65535] { R2084 += 1 };
  s1 -> s4 [66, 66] { R2084 += 1, R2008 += 1, R1964 += 1, R81 += 1, R82 += 1 };
  s1 -> s5 [66, 66] { R2084 += 1, R2008 += 1, R1964 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [67, 65535] { R2084 += 1, R2008 += 1, R1964 += 1, R81 += 1, R82 += 1 };
  s2 -> s1 [0, 65] { R2084 += 1, R2008 += 1, R1964 += 1, R81 += 1, R82 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R2084 += 1, R2007 += 1, R2008 += 1 };
  s2 -> s3 [0, 65535] { R2084 += 1, R2008 += 1, R1963 += 1, R1964 += 1 };
  s2 -> s4 [66, 66] { R2084 += 1, R2008 += 1, R1964 += 1, R81 += 1, R82 += 1 };
  s2 -> s5 [66, 66] { R2084 += 1, R2008 += 1, R1964 += 1, R81 += 1, R82 += 1 };
  s2 -> s1 [67, 65535] { R2084 += 1, R2008 += 1, R1964 += 1, R81 += 1, R82 += 1 };
  s3 -> s1 [0, 65] { R2084 += 1, R2008 += 1, R1964 += 1, R81 += 1, R82 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R2084 += 1 };
  s3 -> s3 [0, 65535] { R2084 += 1, R2008 += 1, R1963 += 1, R1964 += 1 };
  s3 -> s4 [66, 66] { R2084 += 1, R2008 += 1, R1964 += 1, R81 += 1, R82 += 1 };
  s3 -> s5 [66, 66] { R2084 += 1, R2008 += 1, R1964 += 1, R81 += 1, R82 += 1 };
  s3 -> s1 [67, 65535] { R2084 += 1, R2008 += 1, R1964 += 1, R81 += 1, R82 += 1 };
  s4 -> s4 [0, 65535] { R2084 += 1, R2008 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R2084 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R2084 += 1 };
  s5 -> s8 [0, 65535] { R2084 += 1, R2008 += 1 };
  s5 -> s5 [0, 65535] { R2084 += 1, R2008 += 1, R1964 += 1, R81 += 1, R82 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2084 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R2084 += 1 };
  s8 -> s8 [0, 65535] { R2084 += 1, R2008 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 65] { R2086 += 1, R2010 += 1, R1966 += 1, R85 += 1, R86 += 1 };
  s0 -> s2 [0, 65535] { R2086 += 1, R2010 += 1, R1965 += 1, R1966 += 1 };
  s0 -> s0 [0, 65535] { R2085 += 1, R2086 += 1 };
  s0 -> s3 [0, 65535] { R2086 += 1, R2009 += 1, R2010 += 1 };
  s0 -> s4 [66, 66] { R2086 += 1, R2010 += 1, R1966 += 1, R85 += 1, R86 += 1 };
  s0 -> s5 [66, 66] { R2086 += 1, R2010 += 1, R1966 += 1, R85 += 1, R86 += 1 };
  s0 -> s1 [67, 65535] { R2086 += 1, R2010 += 1, R1966 += 1, R85 += 1, R86 += 1 };
  s1 -> s1 [0, 65] { R2086 += 1, R2010 += 1, R1966 += 1, R85 += 1, R86 += 1 };
  s1 -> s6 [0, 65535] { R2086 += 1 };
  s1 -> s1 [0, 65535] { R2086 += 1, R2010 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [66, 66] { R2086 += 1, R2010 += 1, R1966 += 1, R85 += 1, R86 += 1 };
  s1 -> s5 [66, 66] { R2086 += 1, R2010 += 1, R1966 += 1, R85 += 1, R86 += 1 };
  s1 -> s1 [67, 65535] { R2086 += 1, R2010 += 1, R1966 += 1, R85 += 1, R86 += 1 };
  s2 -> s1 [0, 65] { R2086 += 1, R2010 += 1, R1966 += 1, R85 += 1, R86 += 1 };
  s2 -> s6 [0, 65535] { R2086 += 1 };
  s2 -> s2 [0, 65535] { R2086 += 1, R2010 += 1, R1965 += 1, R1966 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [66, 66] { R2086 += 1, R2010 += 1, R1966 += 1, R85 += 1, R86 += 1 };
  s2 -> s5 [66, 66] { R2086 += 1, R2010 += 1, R1966 += 1, R85 += 1, R86 += 1 };
  s2 -> s1 [67, 65535] { R2086 += 1, R2010 += 1, R1966 += 1, R85 += 1, R86 += 1 };
  s3 -> s1 [0, 65] { R2086 += 1, R2010 += 1, R1966 += 1, R85 += 1, R86 += 1 };
  s3 -> s2 [0, 65535] { R2086 += 1, R2010 += 1, R1965 += 1, R1966 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s3 [0, 65535] { R2086 += 1, R2009 += 1, R2010 += 1 };
  s3 -> s4 [66, 66] { R2086 += 1, R2010 += 1, R1966 += 1, R85 += 1, R86 += 1 };
  s3 -> s5 [66, 66] { R2086 += 1, R2010 += 1, R1966 += 1, R85 += 1, R86 += 1 };
  s3 -> s1 [67, 65535] { R2086 += 1, R2010 += 1, R1966 += 1, R85 += 1, R86 += 1 };
  s4 -> s6 [0, 65535] { R2086 += 1 };
  s4 -> s4 [0, 65535] { R2086 += 1, R2010 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s6 [0, 65535] { R2086 += 1 };
  s5 -> s5 [0, 65535] { R2086 += 1, R2010 += 1, R1966 += 1, R85 += 1, R86 += 1 };
  s5 -> s7 [0, 65535] { R2086 += 1, R2010 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R2086 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s6 [0, 65535] { R2086 += 1 };
  s7 -> s7 [0, 65535] { R2086 += 1, R2010 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 65] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s0 -> s2 [0, 65] { R2088 += 1, R2012 += 1, R1968 += 1, R91 += 1, R92 += 1 };
  s0 -> s3 [0, 65535] { R2088 += 1, R2012 += 1, R1967 += 1, R1968 += 1 };
  s0 -> s0 [0, 65535] { R2087 += 1, R2088 += 1 };
  s0 -> s4 [0, 65535] { R2088 += 1, R2011 += 1, R2012 += 1 };
  s0 -> s5 [66, 66] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s0 -> s6 [66, 66] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s0 -> s7 [66, 66] { R2088 += 1, R2012 += 1, R1968 += 1, R91 += 1, R92 += 1 };
  s0 -> s8 [66, 66] { R2088 += 1, R2012 += 1, R1968 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [67, 70] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s0 -> s2 [67, 65535] { R2088 += 1, R2012 += 1, R1968 += 1, R91 += 1, R92 += 1 };
  s0 -> s9 [81, 81] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s0 -> s1 [82, 65535] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s1 -> s1 [0, 65] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s1 -> s5 [66, 66] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s1 -> s6 [66, 66] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s1 -> s1 [67, 70] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s1 -> s9 [81, 81] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s1 -> s1 [82, 65535] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s2 -> s1 [0, 65] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s2 -> s2 [0, 65] { R2088 += 1, R2012 += 1, R1968 += 1, R91 += 1, R92 += 1 };
  s2 -> s5 [66, 66] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s2 -> s6 [66, 66] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s2 -> s7 [66, 66] { R2088 += 1, R2012 += 1, R1968 += 1, R91 += 1, R92 += 1 };
  s2 -> s8 [66, 66] { R2088 += 1, R2012 += 1, R1968 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [67, 70] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s2 -> s2 [67, 65535] { R2088 += 1, R2012 += 1, R1968 += 1, R91 += 1, R92 += 1 };
  s2 -> s9 [81, 81] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s2 -> s1 [82, 65535] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s3 -> s1 [0, 65] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s3 -> s2 [0, 65] { R2088 += 1, R2012 += 1, R1968 += 1, R91 += 1, R92 += 1 };
  s3 -> s3 [0, 65535] { R2088 += 1, R2012 += 1, R1967 += 1, R1968 += 1 };
  s3 -> s5 [66, 66] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s3 -> s6 [66, 66] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s3 -> s7 [66, 66] { R2088 += 1, R2012 += 1, R1968 += 1, R91 += 1, R92 += 1 };
  s3 -> s8 [66, 66] { R2088 += 1, R2012 += 1, R1968 += 1, R91 += 1, R92 += 1 };
  s3 -> s1 [67, 70] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s3 -> s2 [67, 65535] { R2088 += 1, R2012 += 1, R1968 += 1, R91 += 1, R92 += 1 };
  s3 -> s9 [81, 81] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s3 -> s1 [82, 65535] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s4 -> s1 [0, 65] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s4 -> s2 [0, 65] { R2088 += 1, R2012 += 1, R1968 += 1, R91 += 1, R92 += 1 };
  s4 -> s3 [0, 65535] { R2088 += 1, R2012 += 1, R1967 += 1, R1968 += 1 };
  s4 -> s4 [0, 65535] { R2088 += 1, R2011 += 1, R2012 += 1 };
  s4 -> s5 [66, 66] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s4 -> s6 [66, 66] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s4 -> s7 [66, 66] { R2088 += 1, R2012 += 1, R1968 += 1, R91 += 1, R92 += 1 };
  s4 -> s8 [66, 66] { R2088 += 1, R2012 += 1, R1968 += 1, R91 += 1, R92 += 1 };
  s4 -> s1 [67, 70] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s4 -> s2 [67, 65535] { R2088 += 1, R2012 += 1, R1968 += 1, R91 += 1, R92 += 1 };
  s4 -> s9 [81, 81] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s4 -> s1 [82, 65535] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s5 -> s5 [0, 70] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s5 -> s12 [81, 81] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s5 -> s5 [82, 65535] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s8 -> s5 [0, 70] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s8 -> s8 [0, 65535] { R2088 += 1, R2012 += 1, R1968 += 1, R91 += 1, R92 += 1 };
  s8 -> s12 [81, 81] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s8 -> s5 [82, 65535] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s9 -> s9 [0, 65] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s9 -> s10 [0, 65535];
  s9 -> s9 [0, 65535] { R2088 += 1, R2012 += 1 };
  s9 -> s11 [0, 65535] { R2088 += 1 };
  s9 -> s12 [66, 66] { R2088 += 1, R2012 += 1, R1968 += 1 };
  s9 -> s13 [66, 66] { R2088 += 1, R2012 += 1, R1968 += 1 };
  s9 -> s9 [67, 70] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s9 -> s9 [67, 65535] { R2088 += 1, R2012 += 1, R1968 += 1 };
  s9 -> s9 [81, 65535] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s10 -> s10 [0, 65535];
  s11 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R2088 += 1 };
  s12 -> s12 [0, 70] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s12 -> s12 [0, 65535] { R2088 += 1, R2012 += 1, R1968 += 1 };
  s12 -> s14 [0, 65535] { R2088 += 1, R2012 += 1 };
  s12 -> s10 [0, 65535];
  s12 -> s11 [0, 65535] { R2088 += 1 };
  s12 -> s12 [81, 65535] { R2088 += 1, R2012 += 1, R1968 += 1, R92 += 1 };
  s13 -> s10 [0, 65535];
  s13 -> s13 [0, 65535] { R2088 += 1, R2012 += 1 };
  s13 -> s11 [0, 65535] { R2088 += 1 };
  s14 -> s14 [0, 65535] { R2088 += 1, R2012 += 1 };
  s14 -> s10 [0, 65535];
  s14 -> s11 [0, 65535] { R2088 += 1 };
  accepting s12, s13, s9, s14, s10, s11;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 65] { R2090 += 1, R2014 += 1, R1970 += 1, R1547 += 1, R1548 += 1 };
  s0 -> s2 [0, 65] { R2090 += 1, R2014 += 1, R1970 += 1, R1548 += 1, R1549 += 1 };
  s0 -> s3 [0, 65535] { R2090 += 1, R2013 += 1, R2014 += 1 };
  s0 -> s4 [0, 65535] { R2090 += 1, R2014 += 1, R1969 += 1, R1970 += 1 };
  s0 -> s0 [0, 65535] { R2089 += 1, R2090 += 1 };
  s0 -> s5 [66, 66] { R2090 += 1, R2014 += 1, R1970 += 1, R1547 += 1, R1548 += 1 };
  s0 -> s6 [66, 66] { R2090 += 1, R2014 += 1, R1970 += 1, R1548 += 1, R1549 += 1 };
  s0 -> s7 [66, 66] { R2090 += 1, R2014 += 1, R1970 += 1, R1548 += 1, R1549 += 1 };
  s0 -> s8 [66, 66] { R2090 += 1, R2014 += 1, R1970 += 1, R1547 += 1, R1548 += 1 };
  s0 -> s1 [67, 65535] { R2090 += 1, R2014 += 1, R1970 += 1, R1547 += 1, R1548 += 1 };
  s0 -> s2 [67, 65535] { R2090 += 1, R2014 += 1, R1970 += 1, R1548 += 1, R1549 += 1 };
  s1 -> s1 [0, 65] { R2090 += 1, R2014 += 1, R1970 += 1, R1547 += 1, R1548 += 1 };
  s1 -> s2 [0, 65] { R2090 += 1, R2014 += 1, R1970 += 1, R1548 += 1, R1549 += 1 };
  s1 -> s5 [66, 66] { R2090 += 1, R2014 += 1, R1970 += 1, R1547 += 1, R1548 += 1 };
  s1 -> s6 [66, 66] { R2090 += 1, R2014 += 1, R1970 += 1, R1548 += 1, R1549 += 1 };
  s1 -> s7 [66, 66] { R2090 += 1, R2014 += 1, R1970 += 1, R1548 += 1, R1549 += 1 };
  s1 -> s8 [66, 66] { R2090 += 1, R2014 += 1, R1970 += 1, R1547 += 1, R1548 += 1 };
  s1 -> s1 [67, 65535] { R2090 += 1, R2014 += 1, R1970 += 1, R1547 += 1, R1548 += 1 };
  s1 -> s2 [67, 65535] { R2090 += 1, R2014 += 1, R1970 += 1, R1548 += 1, R1549 += 1 };
  s2 -> s2 [0, 65] { R2090 += 1, R2014 += 1, R1970 += 1, R1548 += 1, R1549 += 1 };
  s2 -> s13 [0, 65] { R2090 += 1, R2014 += 1, R1970 += 1 };
  s2 -> s9 [66, 66] { R2090 += 1, R2014 += 1, R1970 += 1 };
  s2 -> s6 [66, 66] { R2090 += 1, R2014 += 1, R1970 += 1, R1548 += 1, R1549 += 1 };
  s2 -> s7 [66, 66] { R2090 += 1, R2014 += 1, R1970 += 1, R1548 += 1, R1549 += 1 };
  s2 -> s14 [66, 66] { R2090 += 1, R2014 += 1, R1970 += 1 };
  s2 -> s2 [67, 65535] { R2090 += 1, R2014 += 1, R1970 += 1, R1548 += 1, R1549 += 1 };
  s2 -> s13 [67, 65535] { R2090 += 1, R2014 += 1, R1970 += 1 };
  s3 -> s1 [0, 65] { R2090 += 1, R2014 += 1, R1970 += 1, R1547 += 1, R1548 += 1 };
  s3 -> s2 [0, 65] { R2090 += 1, R2014 += 1, R1970 += 1, R1548 += 1, R1549 += 1 };
  s3 -> s3 [0, 65535] { R2090 += 1, R2013 += 1, R2014 += 1 };
  s3 -> s4 [0, 65535] { R2090 += 1, R2014 += 1, R1969 += 1, R1970 += 1 };
  s3 -> s5 [66, 66] { R2090 += 1, R2014 += 1, R1970 += 1, R1547 += 1, R1548 += 1 };
  s3 -> s6 [66, 66] { R2090 += 1, R2014 += 1, R1970 += 1, R1548 += 1, R1549 += 1 };
  s3 -> s7 [66, 66] { R2090 += 1, R2014 += 1, R1970 += 1, R1548 += 1, R1549 += 1 };
  s3 -> s8 [66, 66] { R2090 += 1, R2014 += 1, R1970 += 1, R1547 += 1, R1548 += 1 };
  s3 -> s1 [67, 65535] { R2090 += 1, R2014 += 1, R1970 += 1, R1547 += 1, R1548 += 1 };
  s3 -> s2 [67, 65535] { R2090 += 1, R2014 += 1, R1970 += 1, R1548 += 1, R1549 += 1 };
  s4 -> s1 [0, 65] { R2090 += 1, R2014 += 1, R1970 += 1, R1547 += 1, R1548 += 1 };
  s4 -> s2 [0, 65] { R2090 += 1, R2014 += 1, R1970 += 1, R1548 += 1, R1549 += 1 };
  s4 -> s4 [0, 65535] { R2090 += 1, R2014 += 1, R1969 += 1, R1970 += 1 };
  s4 -> s5 [66, 66] { R2090 += 1, R2014 += 1, R1970 += 1, R1547 += 1, R1548 += 1 };
  s4 -> s6 [66, 66] { R2090 += 1, R2014 += 1, R1970 += 1, R1548 += 1, R1549 += 1 };
  s4 -> s7 [66, 66] { R2090 += 1, R2014 += 1, R1970 += 1, R1548 += 1, R1549 += 1 };
  s4 -> s8 [66, 66] { R2090 += 1, R2014 += 1, R1970 += 1, R1547 += 1, R1548 += 1 };
  s4 -> s1 [67, 65535] { R2090 += 1, R2014 += 1, R1970 += 1, R1547 += 1, R1548 += 1 };
  s4 -> s2 [67, 65535] { R2090 += 1, R2014 += 1, R1970 += 1, R1548 += 1, R1549 += 1 };
  s5 -> s5 [0, 65535] { R2090 += 1, R2014 += 1, R1970 += 1, R1547 += 1, R1548 += 1 };
  s5 -> s6 [0, 65535] { R2090 += 1, R2014 += 1, R1970 += 1, R1548 += 1, R1549 += 1 };
  s6 -> s9 [0, 65535] { R2090 += 1, R2014 += 1, R1970 += 1 };
  s6 -> s6 [0, 65535] { R2090 += 1, R2014 += 1, R1970 += 1, R1548 += 1, R1549 += 1 };
  s9 -> s10 [0, 65535] { R2090 += 1, R2014 += 1 };
  s9 -> s9 [0, 65535] { R2090 += 1, R2014 += 1, R1970 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s12 [0, 65535] { R2090 += 1 };
  s10 -> s10 [0, 65535] { R2090 += 1, R2014 += 1 };
  s10 -> s11 [0, 65535];
  s10 -> s12 [0, 65535] { R2090 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R2090 += 1 };
  s13 -> s13 [0, 65] { R2090 += 1, R2014 += 1, R1970 += 1 };
  s13 -> s11 [0, 65535];
  s13 -> s12 [0, 65535] { R2090 += 1 };
  s13 -> s13 [0, 65535] { R2090 += 1, R2014 += 1 };
  s13 -> s9 [66, 66] { R2090 += 1, R2014 += 1, R1970 += 1 };
  s13 -> s14 [66, 66] { R2090 += 1, R2014 += 1, R1970 += 1 };
  s13 -> s13 [67, 65535] { R2090 += 1, R2014 += 1, R1970 += 1 };
  s14 -> s11 [0, 65535];
  s14 -> s12 [0, 65535] { R2090 += 1 };
  s14 -> s14 [0, 65535] { R2090 += 1, R2014 += 1 };
  accepting s12, s13, s9, s14, s10, s11;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 65] { R2092 += 1, R2016 += 1, R1972 += 1, R1914 += 1 };
  s0 -> s2 [0, 65] { R2092 += 1, R2016 += 1, R1972 += 1, R1913 += 1, R1914 += 1 };
  s0 -> s3 [0, 65535] { R2092 += 1, R2016 += 1, R1971 += 1, R1972 += 1 };
  s0 -> s4 [0, 65535] { R2092 += 1, R2015 += 1, R2016 += 1 };
  s0 -> s0 [0, 65535] { R2091 += 1, R2092 += 1 };
  s0 -> s5 [66, 66] { R2092 += 1, R2016 += 1, R1972 += 1, R1913 += 1, R1914 += 1 };
  s0 -> s6 [66, 66] { R2092 += 1, R2016 += 1, R1972 += 1, R1914 += 1 };
  s0 -> s7 [66, 66] { R2092 += 1, R2016 += 1, R1972 += 1, R1914 += 1 };
  s0 -> s8 [66, 66] { R2092 += 1, R2016 += 1, R1972 += 1, R1913 += 1, R1914 += 1 };
  s0 -> s1 [67, 69] { R2092 += 1, R2016 += 1, R1972 += 1, R1914 += 1 };
  s0 -> s2 [67, 65535] { R2092 += 1, R2016 += 1, R1972 += 1, R1913 += 1, R1914 += 1 };
  s0 -> s9 [70, 70] { R2092 += 1, R2016 += 1, R1972 += 1, R1914 += 1 };
  s0 -> s1 [82, 65535] { R2092 += 1, R2016 += 1, R1972 += 1, R1914 += 1 };
  s1 -> s1 [0, 65] { R2092 += 1, R2016 += 1, R1972 += 1, R1914 += 1 };
  s1 -> s6 [66, 66] { R2092 += 1, R2016 += 1, R1972 += 1 };
  s1 -> s7 [66, 66] { R2092 += 1, R2016 += 1, R1972 += 1 };
  s1 -> s1 [67, 69] { R2092 += 1, R2016 += 1, R1972 += 1, R1914 += 1 };
  s1 -> s1 [67, 65535] { R2092 += 1, R2016 += 1, R1972 += 1 };
  s1 -> s9 [70, 70] { R2092 += 1, R2016 += 1, R1972 += 1, R1914 += 1 };
  s1 -> s1 [82, 65535] { R2092 += 1, R2016 += 1, R1972 += 1, R1914 += 1 };
  s2 -> s1 [0, 65] { R2092 += 1, R2016 += 1, R1972 += 1, R1914 += 1 };
  s2 -> s2 [0, 65] { R2092 += 1, R2016 += 1, R1972 += 1, R1913 += 1, R1914 += 1 };
  s2 -> s5 [66, 66] { R2092 += 1, R2016 += 1, R1972 += 1, R1913 += 1, R1914 += 1 };
  s2 -> s6 [66, 66] { R2092 += 1, R2016 += 1, R1972 += 1, R1914 += 1 };
  s2 -> s7 [66, 66] { R2092 += 1, R2016 += 1, R1972 += 1, R1914 += 1 };
  s2 -> s8 [66, 66] { R2092 += 1, R2016 += 1, R1972 += 1, R1913 += 1, R1914 += 1 };
  s2 -> s1 [67, 69] { R2092 += 1, R2016 += 1, R1972 += 1, R1914 += 1 };
  s2 -> s2 [67, 65535] { R2092 += 1, R2016 += 1, R1972 += 1, R1913 += 1, R1914 += 1 };
  s2 -> s9 [70, 70] { R2092 += 1, R2016 += 1, R1972 += 1, R1914 += 1 };
  s2 -> s1 [82, 65535] { R2092 += 1, R2016 += 1, R1972 += 1, R1914 += 1 };
  s3 -> s1 [0, 65] { R2092 += 1, R2016 += 1, R1972 += 1, R1914 += 1 };
  s3 -> s2 [0, 65] { R2092 += 1, R2016 += 1, R1972 += 1, R1913 += 1, R1914 += 1 };
  s3 -> s3 [0, 65535] { R2092 += 1, R2016 += 1, R1971 += 1, R1972 += 1 };
  s3 -> s5 [66, 66] { R2092 += 1, R2016 += 1, R1972 += 1, R1913 += 1, R1914 += 1 };
  s3 -> s6 [66, 66] { R2092 += 1, R2016 += 1, R1972 += 1, R1914 += 1 };
  s3 -> s7 [66, 66] { R2092 += 1, R2016 += 1, R1972 += 1, R1914 += 1 };
  s3 -> s8 [66, 66] { R2092 += 1, R2016 += 1, R1972 += 1, R1913 += 1, R1914 += 1 };
  s3 -> s1 [67, 69] { R2092 += 1, R2016 += 1, R1972 += 1, R1914 += 1 };
  s3 -> s2 [67, 65535] { R2092 += 1, R2016 += 1, R1972 += 1, R1913 += 1, R1914 += 1 };
  s3 -> s9 [70, 70] { R2092 += 1, R2016 += 1, R1972 += 1, R1914 += 1 };
  s3 -> s1 [82, 65535] { R2092 += 1, R2016 += 1, R1972 += 1, R1914 += 1 };
  s4 -> s1 [0, 65] { R2092 += 1, R2016 += 1, R1972 += 1, R1914 += 1 };
  s4 -> s2 [0, 65] { R2092 += 1, R2016 += 1, R1972 += 1, R1913 += 1, R1914 += 1 };
  s4 -> s3 [0, 65535] { R2092 += 1, R2016 += 1, R1971 += 1, R1972 += 1 };
  s4 -> s4 [0, 65535] { R2092 += 1, R2015 += 1, R2016 += 1 };
  s4 -> s5 [66, 66] { R2092 += 1, R2016 += 1, R1972 += 1, R1913 += 1, R1914 += 1 };
  s4 -> s6 [66, 66] { R2092 += 1, R2016 += 1, R1972 += 1, R1914 += 1 };
  s4 -> s7 [66, 66] { R2092 += 1, R2016 += 1, R1972 += 1, R1914 += 1 };
  s4 -> s8 [66, 66] { R2092 += 1, R2016 += 1, R1972 += 1, R1913 += 1, R1914 += 1 };
  s4 -> s1 [67, 69] { R2092 += 1, R2016 += 1, R1972 += 1, R1914 += 1 };
  s4 -> s2 [67, 65535] { R2092 += 1, R2016 += 1, R1972 += 1, R1913 += 1, R1914 += 1 };
  s4 -> s9 [70, 70] { R2092 += 1, R2016 += 1, R1972 += 1, R1914 += 1 };
  s4 -> s1 [82, 65535] { R2092 += 1, R2016 += 1, R1972 += 1, R1914 += 1 };
  s7 -> s7 [0, 69] { R2092 += 1, R2016 += 1, R1972 += 1, R1914 += 1 };
  s7 -> s7 [0, 65535] { R2092 += 1, R2016 += 1, R1972 += 1 };
  s7 -> s12 [70, 70] { R2092 += 1, R2016 += 1, R1972 += 1, R1914 += 1 };
  s7 -> s7 [82, 65535] { R2092 += 1, R2016 += 1, R1972 += 1, R1914 += 1 };
  s8 -> s7 [0, 69] { R2092 += 1, R2016 += 1, R1972 += 1, R1914 += 1 };
  s8 -> s8 [0, 65535] { R2092 += 1, R2016 += 1, R1972 += 1, R1913 += 1, R1914 += 1 };
  s8 -> s12 [70, 70] { R2092 += 1, R2016 += 1, R1972 += 1, R1914 += 1 };
  s8 -> s7 [82, 65535] { R2092 += 1, R2016 += 1, R1972 += 1, R1914 += 1 };
  s9 -> s9 [0, 65] { R2092 += 1, R2016 += 1, R1972 += 1 };
  s9 -> s9 [0, 65535] { R2092 += 1, R2016 += 1 };
  s9 -> s10 [0, 65535];
  s9 -> s11 [0, 65535] { R2092 += 1 };
  s9 -> s12 [66, 66] { R2092 += 1, R2016 += 1, R1972 += 1 };
  s9 -> s13 [66, 66] { R2092 += 1, R2016 += 1, R1972 += 1 };
  s9 -> s9 [67, 65535] { R2092 += 1, R2016 += 1, R1972 += 1 };
  s10 -> s10 [0, 65535];
  s11 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R2092 += 1 };
  s12 -> s14 [0, 65535] { R2092 += 1, R2016 += 1 };
  s12 -> s12 [0, 65535] { R2092 += 1, R2016 += 1, R1972 += 1 };
  s12 -> s10 [0, 65535];
  s12 -> s11 [0, 65535] { R2092 += 1 };
  s13 -> s10 [0, 65535];
  s13 -> s11 [0, 65535] { R2092 += 1 };
  s13 -> s13 [0, 65535] { R2092 += 1, R2016 += 1 };
  s14 -> s14 [0, 65535] { R2092 += 1, R2016 += 1 };
  s14 -> s10 [0, 65535];
  s14 -> s11 [0, 65535] { R2092 += 1 };
  accepting s12, s13, s9, s14, s10, s11;
};
};
synchronised {  // Automata constraining P37
automaton P37_0 {
  init s0;
  s0 -> s1 [9, 9];
  accepting s1;
};
};
synchronised {  // Automata constraining P38
automaton P38_0 {
  init s0;
  s0 -> s1 [10, 10];
  accepting s1;
};
};
synchronised {  // Automata constraining P36
automaton P36_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
constraint R2 = R2016 && R3 - R2092 = 1 && R23 - R2016 = -1 && R24 = R2016 && R25 - R2016 = -1 && R26 = R2016 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R31 = R2092 && R32 - R2092 = 1 && R33 = R2092 && R34 - R2092 = 1 && R35 = 0 && R36 = 1 && R37 = 0 && R38 = 1 && R49 + R78 + R77 + -1*R94 + -1*R92 - R64 = 0 && R63 + R93 + R91 = 0 && R1957 = 0 && R1958 = 0 && R1967 = 0 && R1968 = 0 && R1969 = 0 && R1970 = 0 && R1971 = 0 && R1972 = 0 && R1973 = 0 && R1974 = R2016 && R1975 = 0 && R1976 = R2016 && R1977 = 0 && R1978 = R2016 && R1979 = 0 && R1980 = R2016 && R1981 = 0 && R1982 = R2016 && R1983 = 0 && R1984 = R2016 && R1985 = 0 && R1986 = R2016 && R1987 = 0 && R1988 = R2016 && R1989 = 0 && R1990 = R2016 && R1991 = 0 && R1992 = R2016 && R1993 = 0 && R1994 = R2016 && R1995 = 0 && R1996 = R2016 && R1997 = 0 && R1998 = R2016 && R1999 = 0 && R2000 = R2016 && R2001 = 0 && R2002 = R2016 && R2003 = 0 && R2004 = R2016 && R2005 = 0 && R2006 = R2016 && R2007 = 0 && R2008 = R2016 && R2009 = 0 && R2010 = R2016 && R2011 = 0 && R2012 = R2016 && R2013 = 0 && R2014 = R2016 && R2015 = 0 && R2017 = 0 && R2018 = R2092 && R2019 = 0 && R2020 = R2092 && R2021 = 0 && R2022 = R2092 && R2023 = 0 && R2024 = R2092 && R2025 = 0 && R2026 = R2092 && R2027 = 0 && R2028 = R2092 && R2029 = 0 && R2030 = R2092 && R2031 = 0 && R2032 = R2092 && R2033 = 0 && R2034 = R2092 && R2035 = 0 && R2036 = R2092 && R2037 = 0 && R2038 = R2092 && R2039 = 0 && R2040 = R2092 && R2041 = 0 && R2042 = R2092 && R2043 = 0 && R2044 = R2092 && R2045 = 0 && R2046 = R2092 && R2047 = 0 && R2048 = R2092 && R2049 = 0 && R2050 = R2092 && R2051 = 0 && R2052 = R2092 && R2053 = 0 && R2054 = R2092 && R2055 = 0 && R2056 = R2092 && R2057 = 0 && R2058 = R2092 && R2059 = 0 && R2060 = R2092 && R2061 = 0 && R2062 = R2092 && R2063 = 0 && R2064 = R2092 && R2065 = 0 && R2066 = R2092 && R2067 = 0 && R2068 = R2092 && R2069 = 0 && R2070 = R2092 && R2071 = 0 && R2072 = R2092 && R2073 = 0 && R2074 = R2092 && R2075 = 0 && R2076 = R2092 && R2077 = 0 && R2078 = R2092 && R2079 = 0 && R2080 = R2092 && R2081 = 0 && R2082 = R2092 && R2083 = 0 && R2084 = R2092 && R2085 = 0 && R2086 = R2092 && R2087 = 0 && R2088 = R2092 && R2089 = 0 && R2090 = R2092 && R2091 = 0 && -1 < R1 && R11 < 1 && R14 < 1 && R17 < 1 && R51 + R80 + R79 < 1 && -1*R94 + -1*R92 - R64 < 1 && 0 < R2016 && -1 < R2092 && (R1 != 0 || R20 = 0 || (R1917 = 0 && R1918 = 0)) && (R1 != 0 || R20 = 0 || (R1919 = 0 && R1920 = 0)) && (R1 != 0 || R20 = 0 || (R1921 = 0 && R1922 = 0)) && (R1 != 0 || R20 = 0 || (R1923 = 0 && R1924 = 0)) && (R1 != 0 || R20 = 0 || (R1925 = 0 && R1926 = 0)) && (R1 != 0 || R20 = 0 || (R1927 = 0 && R1928 = 0)) && (R1 != 0 || R20 = 0 || (R1929 = 0 && R1930 = 0)) && (R1 != 0 || R20 = 0 || (R1931 = 0 && R1932 = 0)) && (R1 != 0 || R20 = 0 || (R1933 = 0 && R1934 = 0)) && (R1 != 0 || R20 = 0 || (R1935 = 0 && R1936 = 0)) && (R59 + R90 + R87 != 0 || ((R53 + R83 + R81 != 0 || R54 + R84 + R82 + -1*R94 + -1*R92 - R64 = 0 || R64 + R94 + R92 < 1) && (R53 + R83 + R81 = 0 || R64 + R94 + R92 < 1))) && (R59 + R90 + R87 != 0 || ((R57 + R88 + R85 != 0 || R58 + R89 + R86 + -1*R94 + -1*R92 - R64 = 0 || R64 + R94 + R92 < 1) && (R57 + R88 + R85 = 0 || R64 + R94 + R92 < 1))) && (R1917 != 0 || R1 = R1918 || R1 < 1) && (R1919 != 0 || R1 = R1920 || R1 < 1) && (R1921 != 0 || R1 = R1922 || R1 < 1) && (R1923 != 0 || R1 = R1924 || R1 < 1) && (R1925 != 0 || R1 = R1926 || R1 < 1) && (R1927 != 0 || R1 = R1928 || R1 < 1) && (R1929 != 0 || R1 = R1930 || R1 < 1) && (R1931 != 0 || R1 = R1932 || R1 < 1) && (R1933 != 0 || R1 = R1934 || R1 < 1) && (R1935 != 0 || R1 = R1936 || R1 < 1) && (R21 = 0 || (R1955 = 0 && R1956 = 0)) && (R21 = 0 || (R1959 = 0 && R1960 = 0)) && (R21 = 0 || (R1961 = 0 && R1962 = 0)) && (R21 = 0 || (R1963 = 0 && R1964 = 0)) && (R21 = 0 || (R1965 = 0 && R1966 = 0)) && (R22 = 0 || (R1937 = 0 && R1938 = 0)) && (R22 = 0 || (R1939 = 0 && R1940 = 0)) && (R22 = 0 || (R1941 = 0 && R1942 = 0)) && (R22 = 0 || (R1943 = 0 && R1944 = 0)) && (R22 = 0 || (R1945 = 0 && R1946 = 0)) && (R22 = 0 || (R1947 = 0 && R1948 = 0)) && (R22 = 0 || (R1949 = 0 && R1950 = 0)) && (R22 = 0 || (R1951 = 0 && R1952 = 0)) && (R22 = 0 || (R1953 = 0 && R1954 = 0)) && (R59 + R90 + R87 = 0 || (R53 + R83 + R81 = 0 && R54 + R84 + R82 + -1*R94 + -1*R92 - R64 = 0)) && (R59 + R90 + R87 = 0 || (R57 + R88 + R85 = 0 && R58 + R89 + R86 + -1*R94 + -1*R92 - R64 = 0)) && (R69 + R1552 + R1549 = 0 || (R67 + R1550 + R1547 = 0 && R68 + R1551 + R1548 = 0)) && (R69 + R1552 + R1549 = 0 || (R73 + R1915 + R1913 = 0 && R74 + R1916 + R1914 = 0)) && (R1917 = 0 || R1 < 1) && (R1919 = 0 || R1 < 1) && (R1921 = 0 || R1 < 1) && (R1923 = 0 || R1 < 1) && (R1925 = 0 || R1 < 1) && (R1927 = 0 || R1 < 1) && (R1929 = 0 || R1 < 1) && (R1931 = 0 || R1 < 1) && (R1933 = 0 || R1 < 1) && (R1935 = 0 || R1 < 1);
// End of Parikh automata intersection problem
