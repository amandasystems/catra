// Parikh automata intersection problem, generated by OSTRICH+
counter int R0, R1, R10, R11, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R193, R194, R195, R196, R197, R198, R199, R2, R200, R201, R202, R203, R204, R205, R206, R207, R208, R209, R210, R211, R212, R213, R214, R215, R216, R217, R218, R219, R220, R221, R222, R223, R224, R225, R226, R227, R228, R229, R230, R231, R232, R233, R234, R235, R236, R237, R238, R239, R240, R241, R242, R243, R244, R245, R246, R247, R248, R249, R250, R251, R252, R253, R254, R255, R256, R257, R258, R259, R260, R261, R262, R263, R264, R265, R266, R267, R268, R269, R3, R4, R5, R6, R7, R8;
synchronised {  // Automata constraining P40
automaton P40_0 {
  init s0;
  s0 -> s1 [100, 100];
  accepting s1;
};
};
synchronised {  // Automata constraining P25
automaton P25_0 {
  init s0;
  s0 -> s1 [9, 9];
  accepting s1;
};
};
synchronised {  // Automata constraining P26
automaton P26_0 {
  init s0;
  s0 -> s1 [10, 10];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R2 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R175 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R194 += 1, R195 += 1 };
  s0 -> s1 [13, 13] { R195 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 65535] { R197 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R196 += 1, R197 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R197 += 1, R7 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R199 += 1 };
  s0 -> s0 [0, 65535] { R198 += 1, R199 += 1 };
  s0 -> s2 [9, 13] { R199 += 1 };
  s0 -> s1 [14, 31] { R199 += 1 };
  s0 -> s2 [32, 32] { R199 += 1 };
  s0 -> s1 [33, 65535] { R199 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R199 += 1 };
  s2 -> s1 [0, 65535] { R199 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 65535] { R201 += 1, R8 += 1 };
  s0 -> s0 [0, 65535] { R200 += 1, R201 += 1 };
  s1 -> s1 [0, 65535] { R201 += 1, R8 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R236 += 1, R237 += 1 };
  s0 -> s1 [0, 65535] { R237 += 1, R1 += 1 };
  s1 -> s1 [0, 65535] { R237 += 1, R1 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R239 += 1, R186 += 1, R187 += 1 };
  s0 -> s0 [0, 65535] { R238 += 1, R239 += 1 };
  s0 -> s2 [32, 32] { R239 += 1, R187 += 1 };
  s1 -> s1 [0, 65535] { R239 += 1, R186 += 1, R187 += 1 };
  s1 -> s2 [32, 32] { R239 += 1, R187 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R239 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 65535] { R241 += 1, R189 += 1, R5 += 1 };
  s0 -> s2 [0, 65535] { R241 += 1, R188 += 1, R189 += 1 };
  s0 -> s0 [0, 65535] { R240 += 1, R241 += 1 };
  s1 -> s1 [0, 65535] { R241 += 1, R189 += 1, R5 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R241 += 1 };
  s2 -> s1 [0, 65535] { R241 += 1, R189 += 1, R5 += 1 };
  s2 -> s2 [0, 65535] { R241 += 1, R188 += 1, R189 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R241 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R243 += 1, R191 += 1 };
  s0 -> s2 [0, 65535] { R243 += 1, R190 += 1, R191 += 1 };
  s0 -> s0 [0, 65535] { R242 += 1, R243 += 1 };
  s0 -> s3 [9, 13] { R243 += 1, R191 += 1 };
  s0 -> s1 [14, 31] { R243 += 1, R191 += 1 };
  s0 -> s3 [32, 32] { R243 += 1, R191 += 1 };
  s0 -> s1 [33, 65535] { R243 += 1, R191 += 1 };
  s1 -> s1 [0, 65535] { R243 += 1, R191 += 1 };
  s1 -> s5 [0, 65535] { R243 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 8] { R243 += 1, R191 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R243 += 1, R190 += 1, R191 += 1 };
  s2 -> s3 [9, 13] { R243 += 1, R191 += 1 };
  s2 -> s1 [14, 31] { R243 += 1, R191 += 1 };
  s2 -> s3 [32, 32] { R243 += 1, R191 += 1 };
  s2 -> s1 [33, 65535] { R243 += 1, R191 += 1 };
  s3 -> s1 [0, 65535] { R243 += 1, R191 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R243 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s0 [0, 65535] { R244 += 1, R245 += 1 };
  s0 -> s1 [0, 65535] { R245 += 1, R193 += 1, R6 += 1 };
  s0 -> s2 [0, 65535] { R245 += 1, R192 += 1, R193 += 1 };
  s1 -> s4 [0, 65535] { R245 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R245 += 1, R193 += 1, R6 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R245 += 1, R193 += 1, R6 += 1 };
  s2 -> s2 [0, 65535] { R245 += 1, R192 += 1, R193 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R245 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 64] { R247 += 1, R213 += 1 };
  s0 -> s2 [0, 65535] { R247 += 1, R212 += 1, R213 += 1 };
  s0 -> s0 [0, 65535] { R246 += 1, R247 += 1 };
  s0 -> s3 [68, 68] { R247 += 1, R213 += 1 };
  s0 -> s1 [69, 65535] { R247 += 1, R213 += 1 };
  s1 -> s1 [0, 64] { R247 += 1, R213 += 1 };
  s1 -> s3 [68, 68] { R247 += 1, R213 += 1 };
  s1 -> s1 [69, 65535] { R247 += 1, R213 += 1 };
  s2 -> s1 [0, 64] { R247 += 1, R213 += 1 };
  s2 -> s2 [0, 65535] { R247 += 1, R212 += 1, R213 += 1 };
  s2 -> s3 [68, 68] { R247 += 1, R213 += 1 };
  s2 -> s1 [69, 65535] { R247 += 1, R213 += 1 };
  s3 -> s3 [0, 64] { R247 += 1, R213 += 1 };
  s3 -> s3 [0, 65535] { R247 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [68, 65535] { R247 += 1, R213 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton value2_13 {
  init s0;
  s0 -> s0 [0, 65535] { R248 += 1, R249 += 1 };
  s0 -> s1 [0, 65535] { R249 += 1, R214 += 1, R215 += 1 };
  s0 -> s2 [0, 65535] { R249 += 1, R215 += 1, R0 += 1 };
  s1 -> s1 [0, 65535] { R249 += 1, R214 += 1, R215 += 1 };
  s1 -> s2 [0, 65535] { R249 += 1, R215 += 1, R0 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R249 += 1 };
  s2 -> s2 [0, 65535] { R249 += 1, R215 += 1, R0 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R249 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 67] { R251 += 1, R217 += 1, R11 += 1 };
  s0 -> s2 [0, 65535] { R251 += 1, R217 += 1, R10 += 1, R11 += 1 };
  s0 -> s3 [0, 65535] { R251 += 1, R216 += 1, R217 += 1 };
  s0 -> s0 [0, 65535] { R250 += 1, R251 += 1 };
  s0 -> s4 [68, 68] { R251 += 1, R217 += 1 };
  s0 -> s1 [69, 65535] { R251 += 1, R217 += 1, R11 += 1 };
  s1 -> s1 [0, 67] { R251 += 1, R217 += 1, R11 += 1 };
  s1 -> s4 [68, 68] { R251 += 1, R217 += 1 };
  s1 -> s1 [69, 65535] { R251 += 1, R217 += 1, R11 += 1 };
  s2 -> s1 [0, 67] { R251 += 1, R217 += 1, R11 += 1 };
  s2 -> s2 [0, 65535] { R251 += 1, R217 += 1, R10 += 1, R11 += 1 };
  s2 -> s4 [68, 68] { R251 += 1, R217 += 1 };
  s2 -> s1 [69, 65535] { R251 += 1, R217 += 1, R11 += 1 };
  s3 -> s1 [0, 67] { R251 += 1, R217 += 1, R11 += 1 };
  s3 -> s2 [0, 65535] { R251 += 1, R217 += 1, R10 += 1, R11 += 1 };
  s3 -> s3 [0, 65535] { R251 += 1, R216 += 1, R217 += 1 };
  s3 -> s4 [68, 68] { R251 += 1, R217 += 1 };
  s3 -> s1 [69, 65535] { R251 += 1, R217 += 1, R11 += 1 };
  s4 -> s4 [0, 65535] { R251 += 1, R217 += 1 };
  s4 -> s5 [0, 65535] { R251 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R251 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s4, s5, s6;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 8] { R253 += 1, R219 += 1, R179 += 1 };
  s0 -> s2 [0, 65535] { R253 += 1, R219 += 1, R178 += 1, R179 += 1 };
  s0 -> s3 [0, 65535] { R253 += 1, R218 += 1, R219 += 1 };
  s0 -> s0 [0, 65535] { R252 += 1, R253 += 1 };
  s0 -> s4 [9, 13] { R253 += 1, R219 += 1, R179 += 1 };
  s0 -> s1 [14, 31] { R253 += 1, R219 += 1, R179 += 1 };
  s0 -> s4 [32, 32] { R253 += 1, R219 += 1, R179 += 1 };
  s0 -> s1 [33, 65535] { R253 += 1, R219 += 1, R179 += 1 };
  s1 -> s1 [0, 65535] { R253 += 1, R219 += 1, R179 += 1 };
  s1 -> s6 [0, 65535] { R253 += 1 };
  s1 -> s7 [0, 65535] { R253 += 1, R219 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 8] { R253 += 1, R219 += 1, R179 += 1 };
  s2 -> s2 [0, 65535] { R253 += 1, R219 += 1, R178 += 1, R179 += 1 };
  s2 -> s6 [0, 65535] { R253 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s4 [9, 13] { R253 += 1, R219 += 1, R179 += 1 };
  s2 -> s1 [14, 31] { R253 += 1, R219 += 1, R179 += 1 };
  s2 -> s4 [32, 32] { R253 += 1, R219 += 1, R179 += 1 };
  s2 -> s1 [33, 65535] { R253 += 1, R219 += 1, R179 += 1 };
  s3 -> s1 [0, 8] { R253 += 1, R219 += 1, R179 += 1 };
  s3 -> s2 [0, 65535] { R253 += 1, R219 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [0, 65535] { R253 += 1, R218 += 1, R219 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s4 [9, 13] { R253 += 1, R219 += 1, R179 += 1 };
  s3 -> s1 [14, 31] { R253 += 1, R219 += 1, R179 += 1 };
  s3 -> s4 [32, 32] { R253 += 1, R219 += 1, R179 += 1 };
  s3 -> s1 [33, 65535] { R253 += 1, R219 += 1, R179 += 1 };
  s4 -> s1 [0, 65535] { R253 += 1, R219 += 1, R179 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R253 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R253 += 1 };
  s7 -> s7 [0, 65535] { R253 += 1, R219 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s5, s2, s6, s1, s7, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 65535] { R255 += 1, R220 += 1, R221 += 1 };
  s0 -> s2 [0, 65535] { R255 += 1, R221 += 1, R180 += 1, R181 += 1 };
  s0 -> s0 [0, 65535] { R254 += 1, R255 += 1 };
  s0 -> s3 [0, 65535] { R255 += 1, R221 += 1, R181 += 1, R3 += 1 };
  s1 -> s1 [0, 65535] { R255 += 1, R220 += 1, R221 += 1 };
  s1 -> s2 [0, 65535] { R255 += 1, R221 += 1, R180 += 1, R181 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R255 += 1, R221 += 1, R181 += 1, R3 += 1 };
  s2 -> s2 [0, 65535] { R255 += 1, R221 += 1, R180 += 1, R181 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R255 += 1, R221 += 1, R181 += 1, R3 += 1 };
  s2 -> s6 [0, 65535] { R255 += 1 };
  s3 -> s4 [0, 65535] { R255 += 1, R221 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R255 += 1, R221 += 1, R181 += 1, R3 += 1 };
  s3 -> s6 [0, 65535] { R255 += 1 };
  s4 -> s4 [0, 65535] { R255 += 1, R221 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R255 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R255 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 8] { R257 += 1, R223 += 1, R183 += 1 };
  s0 -> s0 [0, 65535] { R256 += 1, R257 += 1 };
  s0 -> s2 [0, 65535] { R257 += 1, R223 += 1, R182 += 1, R183 += 1 };
  s0 -> s3 [0, 65535] { R257 += 1, R222 += 1, R223 += 1 };
  s0 -> s4 [9, 13] { R257 += 1, R223 += 1, R183 += 1 };
  s0 -> s1 [14, 31] { R257 += 1, R223 += 1, R183 += 1 };
  s0 -> s4 [32, 32] { R257 += 1, R223 += 1, R183 += 1 };
  s0 -> s1 [33, 65535] { R257 += 1, R223 += 1, R183 += 1 };
  s1 -> s7 [0, 65535] { R257 += 1, R223 += 1 };
  s1 -> s1 [0, 65535] { R257 += 1, R223 += 1, R183 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R257 += 1 };
  s2 -> s1 [0, 8] { R257 += 1, R223 += 1, R183 += 1 };
  s2 -> s2 [0, 65535] { R257 += 1, R223 += 1, R182 += 1, R183 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R257 += 1 };
  s2 -> s4 [9, 13] { R257 += 1, R223 += 1, R183 += 1 };
  s2 -> s1 [14, 31] { R257 += 1, R223 += 1, R183 += 1 };
  s2 -> s4 [32, 32] { R257 += 1, R223 += 1, R183 += 1 };
  s2 -> s1 [33, 65535] { R257 += 1, R223 += 1, R183 += 1 };
  s3 -> s1 [0, 8] { R257 += 1, R223 += 1, R183 += 1 };
  s3 -> s2 [0, 65535] { R257 += 1, R223 += 1, R182 += 1, R183 += 1 };
  s3 -> s3 [0, 65535] { R257 += 1, R222 += 1, R223 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s4 [9, 13] { R257 += 1, R223 += 1, R183 += 1 };
  s3 -> s1 [14, 31] { R257 += 1, R223 += 1, R183 += 1 };
  s3 -> s4 [32, 32] { R257 += 1, R223 += 1, R183 += 1 };
  s3 -> s1 [33, 65535] { R257 += 1, R223 += 1, R183 += 1 };
  s4 -> s1 [0, 65535] { R257 += 1, R223 += 1, R183 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R257 += 1 };
  s7 -> s7 [0, 65535] { R257 += 1, R223 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R257 += 1 };
  accepting s3, s5, s2, s6, s1, s7, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R259 += 1, R225 += 1, R185 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R258 += 1, R259 += 1 };
  s0 -> s2 [0, 65535] { R259 += 1, R225 += 1, R184 += 1, R185 += 1 };
  s0 -> s3 [0, 65535] { R259 += 1, R224 += 1, R225 += 1 };
  s1 -> s6 [0, 65535] { R259 += 1, R225 += 1 };
  s1 -> s1 [0, 65535] { R259 += 1, R225 += 1, R185 += 1, R4 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R259 += 1 };
  s2 -> s1 [0, 65535] { R259 += 1, R225 += 1, R185 += 1, R4 += 1 };
  s2 -> s2 [0, 65535] { R259 += 1, R225 += 1, R184 += 1, R185 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R259 += 1 };
  s3 -> s1 [0, 65535] { R259 += 1, R225 += 1, R185 += 1, R4 += 1 };
  s3 -> s2 [0, 65535] { R259 += 1, R225 += 1, R184 += 1, R185 += 1 };
  s3 -> s3 [0, 65535] { R259 += 1, R224 += 1, R225 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R259 += 1 };
  s6 -> s6 [0, 65535] { R259 += 1, R225 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R259 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 67] { R261 += 1, R227 += 1, R203 += 1 };
  s0 -> s0 [0, 65535] { R260 += 1, R261 += 1 };
  s0 -> s2 [0, 65535] { R261 += 1, R227 += 1, R202 += 1, R203 += 1 };
  s0 -> s3 [0, 65535] { R261 += 1, R226 += 1, R227 += 1 };
  s0 -> s1 [69, 65535] { R261 += 1, R227 += 1, R203 += 1 };
  s1 -> s1 [0, 67] { R261 += 1, R227 += 1, R203 += 1 };
  s1 -> s5 [0, 65535] { R261 += 1 };
  s1 -> s1 [0, 65535] { R261 += 1, R227 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [69, 65535] { R261 += 1, R227 += 1, R203 += 1 };
  s2 -> s1 [0, 67] { R261 += 1, R227 += 1, R203 += 1 };
  s2 -> s5 [0, 65535] { R261 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R261 += 1, R227 += 1, R202 += 1, R203 += 1 };
  s2 -> s1 [69, 65535] { R261 += 1, R227 += 1, R203 += 1 };
  s3 -> s1 [0, 67] { R261 += 1, R227 += 1, R203 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R261 += 1, R227 += 1, R202 += 1, R203 += 1 };
  s3 -> s3 [0, 65535] { R261 += 1, R226 += 1, R227 += 1 };
  s3 -> s1 [69, 65535] { R261 += 1, R227 += 1, R203 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R261 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 65535] { R263 += 1, R228 += 1, R229 += 1 };
  s0 -> s2 [0, 65535] { R263 += 1, R229 += 1, R204 += 1, R205 += 1 };
  s0 -> s0 [0, 65535] { R262 += 1, R263 += 1 };
  s0 -> s3 [0, 65535] { R263 += 1, R229 += 1, R205 += 1, R176 += 1 };
  s1 -> s1 [0, 65535] { R263 += 1, R228 += 1, R229 += 1 };
  s1 -> s2 [0, 65535] { R263 += 1, R229 += 1, R204 += 1, R205 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R263 += 1, R229 += 1, R205 += 1, R176 += 1 };
  s2 -> s2 [0, 65535] { R263 += 1, R229 += 1, R204 += 1, R205 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R263 += 1 };
  s2 -> s3 [0, 65535] { R263 += 1, R229 += 1, R205 += 1, R176 += 1 };
  s3 -> s4 [0, 65535] { R263 += 1, R229 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R263 += 1 };
  s3 -> s3 [0, 65535] { R263 += 1, R229 += 1, R205 += 1, R176 += 1 };
  s4 -> s4 [0, 65535] { R263 += 1, R229 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R263 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R263 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 68] { R265 += 1, R231 += 1, R207 += 1 };
  s0 -> s2 [0, 65535] { R265 += 1, R231 += 1, R206 += 1, R207 += 1 };
  s0 -> s0 [0, 65535] { R264 += 1, R265 += 1 };
  s0 -> s3 [0, 65535] { R265 += 1, R230 += 1, R231 += 1 };
  s0 -> s4 [78, 78] { R265 += 1, R231 += 1, R207 += 1 };
  s0 -> s1 [79, 65535] { R265 += 1, R231 += 1, R207 += 1 };
  s1 -> s1 [0, 68] { R265 += 1, R231 += 1, R207 += 1 };
  s1 -> s4 [78, 78] { R265 += 1, R231 += 1, R207 += 1 };
  s1 -> s1 [79, 65535] { R265 += 1, R231 += 1, R207 += 1 };
  s2 -> s1 [0, 68] { R265 += 1, R231 += 1, R207 += 1 };
  s2 -> s2 [0, 65535] { R265 += 1, R231 += 1, R206 += 1, R207 += 1 };
  s2 -> s4 [78, 78] { R265 += 1, R231 += 1, R207 += 1 };
  s2 -> s1 [79, 65535] { R265 += 1, R231 += 1, R207 += 1 };
  s3 -> s1 [0, 68] { R265 += 1, R231 += 1, R207 += 1 };
  s3 -> s2 [0, 65535] { R265 += 1, R231 += 1, R206 += 1, R207 += 1 };
  s3 -> s3 [0, 65535] { R265 += 1, R230 += 1, R231 += 1 };
  s3 -> s4 [78, 78] { R265 += 1, R231 += 1, R207 += 1 };
  s3 -> s1 [79, 65535] { R265 += 1, R231 += 1, R207 += 1 };
  s4 -> s4 [0, 68] { R265 += 1, R231 += 1, R207 += 1 };
  s4 -> s4 [0, 65535] { R265 += 1, R231 += 1 };
  s4 -> s5 [0, 65535] { R265 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [78, 65535] { R265 += 1, R231 += 1, R207 += 1 };
  s5 -> s5 [0, 65535] { R265 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s4, s5, s6;
};
automaton value2_22 {
  init s0;
  s0 -> s0 [0, 65535] { R266 += 1, R267 += 1 };
  s0 -> s1 [0, 65535] { R267 += 1, R233 += 1, R209 += 1, R177 += 1 };
  s0 -> s2 [0, 65535] { R267 += 1, R232 += 1, R233 += 1 };
  s0 -> s3 [0, 65535] { R267 += 1, R233 += 1, R208 += 1, R209 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R267 += 1, R233 += 1, R209 += 1, R177 += 1 };
  s1 -> s6 [0, 65535] { R267 += 1, R233 += 1 };
  s1 -> s5 [0, 65535] { R267 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R267 += 1, R233 += 1, R209 += 1, R177 += 1 };
  s2 -> s2 [0, 65535] { R267 += 1, R232 += 1, R233 += 1 };
  s2 -> s3 [0, 65535] { R267 += 1, R233 += 1, R208 += 1, R209 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R267 += 1, R233 += 1, R209 += 1, R177 += 1 };
  s3 -> s5 [0, 65535] { R267 += 1 };
  s3 -> s3 [0, 65535] { R267 += 1, R233 += 1, R208 += 1, R209 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R267 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R267 += 1, R233 += 1 };
  s6 -> s5 [0, 65535] { R267 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 67] { R269 += 1, R235 += 1, R211 += 1 };
  s0 -> s2 [0, 65535] { R269 += 1, R235 += 1, R210 += 1, R211 += 1 };
  s0 -> s3 [0, 65535] { R269 += 1, R234 += 1, R235 += 1 };
  s0 -> s0 [0, 65535] { R268 += 1, R269 += 1 };
  s0 -> s4 [68, 68] { R269 += 1, R235 += 1, R211 += 1 };
  s0 -> s5 [68, 68] { R269 += 1, R235 += 1, R211 += 1 };
  s0 -> s1 [79, 65535] { R269 += 1, R235 += 1, R211 += 1 };
  s1 -> s1 [0, 67] { R269 += 1, R235 += 1, R211 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R269 += 1, R235 += 1 };
  s1 -> s7 [0, 65535] { R269 += 1 };
  s1 -> s4 [68, 68] { R269 += 1, R235 += 1, R211 += 1 };
  s1 -> s5 [68, 68] { R269 += 1, R235 += 1, R211 += 1 };
  s1 -> s1 [79, 65535] { R269 += 1, R235 += 1, R211 += 1 };
  s2 -> s1 [0, 67] { R269 += 1, R235 += 1, R211 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R269 += 1 };
  s2 -> s2 [0, 65535] { R269 += 1, R235 += 1, R210 += 1, R211 += 1 };
  s2 -> s4 [68, 68] { R269 += 1, R235 += 1, R211 += 1 };
  s2 -> s5 [68, 68] { R269 += 1, R235 += 1, R211 += 1 };
  s2 -> s1 [79, 65535] { R269 += 1, R235 += 1, R211 += 1 };
  s3 -> s1 [0, 67] { R269 += 1, R235 += 1, R211 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R269 += 1, R235 += 1, R210 += 1, R211 += 1 };
  s3 -> s3 [0, 65535] { R269 += 1, R234 += 1, R235 += 1 };
  s3 -> s4 [68, 68] { R269 += 1, R235 += 1, R211 += 1 };
  s3 -> s5 [68, 68] { R269 += 1, R235 += 1, R211 += 1 };
  s3 -> s1 [79, 65535] { R269 += 1, R235 += 1, R211 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R269 += 1, R235 += 1 };
  s4 -> s7 [0, 65535] { R269 += 1 };
  s5 -> s5 [0, 68] { R269 += 1, R235 += 1, R211 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R269 += 1, R235 += 1 };
  s5 -> s7 [0, 65535] { R269 += 1 };
  s5 -> s5 [79, 65535] { R269 += 1, R235 += 1, R211 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R269 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
};
