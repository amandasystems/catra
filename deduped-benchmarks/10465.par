// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R14, R17, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R33, R34, R35, R36, R37, R38, R4, R49, R5, R51, R53, R54, R57, R58, R59, R6, R63, R64, R6637, R6638, R6639, R6640, R6641, R6642, R67, R68, R69, R7, R73, R74, R77, R78, R79, R80, R81, R82, R83, R84, R8825, R8826, R8827, R8828, R8829, R8830, R8831, R8832, R8833, R8834, R8835, R8836, R8837, R8838, R8839, R8840, R8841, R8842, R8843, R8844, R8845, R8846, R8847, R8848, R8849, R8850, R8851, R8852, R8853, R8854, R8855, R8856, R8857, R8858, R8859, R8860, R8861, R8862, R8863, R8864, R8865, R8866, R8867, R8868, R8869, R8870, R8871, R8872, R8873, R8874, R8875, R8876, R8877, R8878, R8879, R8880, R8881, R8882, R8883, R8884, R8885, R8886, R8887, R8888, R8889, R8890, R8891, R8892, R8893, R8894, R8895, R8896, R8897, R8898, R8899, R8900, R8901, R8902, R8903, R8904, R8905, R8906, R8907, R8908, R8909, R8910, R8911, R8912, R8913, R8914, R8915, R8916, R8917, R8918, R8919, R8920, R8921, R8922, R8923, R8924, R8925, R8926, R8927, R8928, R8929, R8930, R8931, R8932, R8933, R8934, R8935, R8936, R8937, R8938, R8939, R8940, R8941, R8942, R8943, R8944, R8945, R8946, R8947, R8948, R8949, R8950, R8951, R8952, R8953, R8954, R8955, R8956, R8957, R8958, R8959, R8960, R8961, R8962, R8963, R8964, R8965, R8966, R8967, R8968, R8969, R8970, R8971, R8972, R8973, R8974, R8975, R8976, R8977, R8978, R8979, R8980, R8981, R8982, R8983, R8984, R8985, R8986, R8987, R8988, R8989, R8990, R8991, R8992, R8993, R8994, R8995, R8996, R8997, R8998, R8999, R9000, R9001, R9002, R9003, R9004, R9005, R9006, R9007, R9008, R9009, R9010, R9011, R9012, R9013, R9014;
synchronised {  // Automata constraining P9
automaton P9_0 {
  init s0;
  s0 -> s1 [98, 98];
  accepting s1;
};
};
synchronised {  // Automata constraining P51
automaton P51_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R17 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [13, 13] { R32 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s0 [0, 65535] { R33 += 1, R34 += 1 };
  s0 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R36 += 1 };
  s0 -> s0 [0, 65535] { R35 += 1, R36 += 1 };
  s0 -> s2 [9, 13] { R36 += 1 };
  s0 -> s1 [14, 31] { R36 += 1 };
  s0 -> s2 [32, 32] { R36 += 1 };
  s0 -> s1 [33, 65535] { R36 += 1 };
  s1 -> s1 [0, 65535] { R36 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R36 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s0 [0, 65535] { R37 += 1, R38 += 1 };
  s0 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R8940 += 1 };
  s0 -> s0 [0, 65535] { R8939 += 1, R8940 += 1 };
  s0 -> s2 [66, 66] { R8940 += 1 };
  s0 -> s1 [67, 65535] { R8940 += 1 };
  s1 -> s1 [0, 64] { R8940 += 1 };
  s1 -> s2 [66, 66] { R8940 += 1 };
  s1 -> s1 [67, 65535] { R8940 += 1 };
  s2 -> s2 [0, 64] { R8940 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [66, 65535] { R8940 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R8942 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R8941 += 1, R8942 += 1 };
  s1 -> s1 [0, 65535] { R8942 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 65] { R8944 += 1 };
  s0 -> s0 [0, 65535] { R8943 += 1, R8944 += 1 };
  s0 -> s2 [0, 65535] { R8944 += 1, R14 += 1 };
  s0 -> s3 [66, 66] { R8944 += 1 };
  s0 -> s1 [67, 65535] { R8944 += 1 };
  s1 -> s1 [0, 65] { R8944 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [66, 66] { R8944 += 1 };
  s1 -> s1 [67, 65535] { R8944 += 1 };
  s2 -> s1 [0, 65] { R8944 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R8944 += 1, R14 += 1 };
  s2 -> s3 [66, 66] { R8944 += 1 };
  s2 -> s1 [67, 65535] { R8944 += 1 };
  s3 -> s3 [0, 65535] { R8944 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R8946 += 1, R24 += 1 };
  s0 -> s2 [0, 65535] { R8946 += 1, R23 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R8945 += 1, R8946 += 1 };
  s0 -> s3 [9, 13] { R8946 += 1, R24 += 1 };
  s0 -> s1 [14, 31] { R8946 += 1, R24 += 1 };
  s0 -> s3 [32, 32] { R8946 += 1, R24 += 1 };
  s0 -> s1 [33, 65535] { R8946 += 1, R24 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R8946 += 1 };
  s1 -> s1 [0, 65535] { R8946 += 1, R24 += 1 };
  s2 -> s1 [0, 8] { R8946 += 1, R24 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R8946 += 1, R23 += 1, R24 += 1 };
  s2 -> s3 [9, 13] { R8946 += 1, R24 += 1 };
  s2 -> s1 [14, 31] { R8946 += 1, R24 += 1 };
  s2 -> s3 [32, 32] { R8946 += 1, R24 += 1 };
  s2 -> s1 [33, 65535] { R8946 += 1, R24 += 1 };
  s3 -> s1 [0, 65535] { R8946 += 1, R24 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R8946 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 65535] { R8948 += 1, R25 += 1, R26 += 1 };
  s0 -> s2 [0, 65535] { R8948 += 1, R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R8947 += 1, R8948 += 1 };
  s1 -> s1 [0, 65535] { R8948 += 1, R25 += 1, R26 += 1 };
  s1 -> s2 [0, 65535] { R8948 += 1, R26 += 1, R4 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R8948 += 1 };
  s2 -> s2 [0, 65535] { R8948 += 1, R26 += 1, R4 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R8948 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R8950 += 1, R28 += 1 };
  s0 -> s0 [0, 65535] { R8949 += 1, R8950 += 1 };
  s0 -> s2 [0, 65535] { R8950 += 1, R27 += 1, R28 += 1 };
  s0 -> s3 [9, 13] { R8950 += 1, R28 += 1 };
  s0 -> s1 [14, 31] { R8950 += 1, R28 += 1 };
  s0 -> s3 [32, 32] { R8950 += 1, R28 += 1 };
  s0 -> s1 [33, 65535] { R8950 += 1, R28 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R8950 += 1, R28 += 1 };
  s1 -> s5 [0, 65535] { R8950 += 1 };
  s2 -> s1 [0, 8] { R8950 += 1, R28 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R8950 += 1, R27 += 1, R28 += 1 };
  s2 -> s3 [9, 13] { R8950 += 1, R28 += 1 };
  s2 -> s1 [14, 31] { R8950 += 1, R28 += 1 };
  s2 -> s3 [32, 32] { R8950 += 1, R28 += 1 };
  s2 -> s1 [33, 65535] { R8950 += 1, R28 += 1 };
  s3 -> s1 [0, 65535] { R8950 += 1, R28 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R8950 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 65535] { R8952 += 1, R29 += 1, R30 += 1 };
  s0 -> s2 [0, 65535] { R8952 += 1, R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R8951 += 1, R8952 += 1 };
  s1 -> s1 [0, 65535] { R8952 += 1, R29 += 1, R30 += 1 };
  s1 -> s2 [0, 65535] { R8952 += 1, R30 += 1, R5 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R8952 += 1, R30 += 1, R5 += 1 };
  s2 -> s3 [0, 65535] { R8952 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R8952 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s0 [0, 65535] { R8953 += 1, R8954 += 1 };
  s0 -> s1 [0, 65535] { R8954 += 1, R8860 += 1, R22 += 1 };
  s0 -> s2 [0, 65535] { R8954 += 1, R8859 += 1, R8860 += 1 };
  s1 -> s4 [0, 65535] { R8954 += 1 };
  s1 -> s1 [0, 65535] { R8954 += 1, R8860 += 1, R22 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R8954 += 1, R8860 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R8954 += 1, R8859 += 1, R8860 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R8954 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 65] { R8956 += 1, R8862 += 1 };
  s0 -> s0 [0, 65535] { R8955 += 1, R8956 += 1 };
  s0 -> s2 [0, 65535] { R8956 += 1, R8861 += 1, R8862 += 1 };
  s0 -> s3 [66, 66] { R8956 += 1, R8862 += 1 };
  s0 -> s4 [66, 66] { R8956 += 1, R8862 += 1 };
  s0 -> s1 [71, 65535] { R8956 += 1, R8862 += 1 };
  s1 -> s1 [0, 65] { R8956 += 1, R8862 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R8956 += 1 };
  s1 -> s3 [66, 66] { R8956 += 1, R8862 += 1 };
  s1 -> s4 [66, 66] { R8956 += 1, R8862 += 1 };
  s1 -> s1 [71, 65535] { R8956 += 1, R8862 += 1 };
  s2 -> s1 [0, 65] { R8956 += 1, R8862 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R8956 += 1, R8861 += 1, R8862 += 1 };
  s2 -> s3 [66, 66] { R8956 += 1, R8862 += 1 };
  s2 -> s4 [66, 66] { R8956 += 1, R8862 += 1 };
  s2 -> s1 [71, 65535] { R8956 += 1, R8862 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R8956 += 1 };
  s4 -> s4 [0, 66] { R8956 += 1, R8862 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R8956 += 1 };
  s4 -> s4 [71, 65535] { R8956 += 1, R8862 += 1 };
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 65] { R8958 += 1, R8864 += 1, R49 += 1 };
  s0 -> s2 [0, 65535] { R8958 += 1, R8863 += 1, R8864 += 1 };
  s0 -> s0 [0, 65535] { R8957 += 1, R8958 += 1 };
  s0 -> s3 [66, 66] { R8958 += 1, R8864 += 1, R49 += 1 };
  s0 -> s4 [66, 66] { R8958 += 1, R8864 += 1, R49 += 1 };
  s0 -> s1 [67, 65535] { R8958 += 1, R8864 += 1, R49 += 1 };
  s1 -> s1 [0, 65] { R8958 += 1, R8864 += 1, R49 += 1 };
  s1 -> s1 [0, 65535] { R8958 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R8958 += 1, R8864 += 1, R49 += 1 };
  s1 -> s4 [66, 66] { R8958 += 1, R8864 += 1, R49 += 1 };
  s1 -> s1 [67, 65535] { R8958 += 1, R8864 += 1, R49 += 1 };
  s2 -> s1 [0, 65] { R8958 += 1, R8864 += 1, R49 += 1 };
  s2 -> s2 [0, 65535] { R8958 += 1, R8863 += 1, R8864 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R8958 += 1, R8864 += 1, R49 += 1 };
  s2 -> s4 [66, 66] { R8958 += 1, R8864 += 1, R49 += 1 };
  s2 -> s1 [67, 65535] { R8958 += 1, R8864 += 1, R49 += 1 };
  s3 -> s6 [0, 65535] { R8958 += 1 };
  s3 -> s3 [0, 65535] { R8958 += 1, R8864 += 1, R49 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R8958 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R8958 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 65] { R8960 += 1, R8866 += 1, R51 += 1 };
  s0 -> s2 [0, 65535] { R8960 += 1, R8865 += 1, R8866 += 1 };
  s0 -> s0 [0, 65535] { R8959 += 1, R8960 += 1 };
  s0 -> s3 [66, 66] { R8960 += 1, R8866 += 1, R51 += 1 };
  s0 -> s4 [66, 66] { R8960 += 1, R8866 += 1, R51 += 1 };
  s0 -> s1 [67, 65535] { R8960 += 1, R8866 += 1, R51 += 1 };
  s1 -> s1 [0, 65] { R8960 += 1, R8866 += 1, R51 += 1 };
  s1 -> s1 [0, 65535] { R8960 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [66, 66] { R8960 += 1, R8866 += 1, R51 += 1 };
  s1 -> s4 [66, 66] { R8960 += 1, R8866 += 1, R51 += 1 };
  s1 -> s1 [67, 65535] { R8960 += 1, R8866 += 1, R51 += 1 };
  s2 -> s1 [0, 65] { R8960 += 1, R8866 += 1, R51 += 1 };
  s2 -> s2 [0, 65535] { R8960 += 1, R8865 += 1, R8866 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [66, 66] { R8960 += 1, R8866 += 1, R51 += 1 };
  s2 -> s4 [66, 66] { R8960 += 1, R8866 += 1, R51 += 1 };
  s2 -> s1 [67, 65535] { R8960 += 1, R8866 += 1, R51 += 1 };
  s3 -> s3 [0, 65535] { R8960 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R8960 += 1 };
  s4 -> s4 [0, 65535] { R8960 += 1, R8866 += 1, R51 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R8960 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65] { R8962 += 1, R8868 += 1, R53 += 1, R54 += 1 };
  s0 -> s2 [0, 65535] { R8962 += 1, R8867 += 1, R8868 += 1 };
  s0 -> s0 [0, 65535] { R8961 += 1, R8962 += 1 };
  s0 -> s3 [66, 66] { R8962 += 1, R8868 += 1, R53 += 1, R54 += 1 };
  s0 -> s4 [66, 66] { R8962 += 1, R8868 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [67, 65535] { R8962 += 1, R8868 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65] { R8962 += 1, R8868 += 1, R53 += 1, R54 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R8962 += 1 };
  s1 -> s3 [66, 66] { R8962 += 1, R8868 += 1, R53 += 1, R54 += 1 };
  s1 -> s4 [66, 66] { R8962 += 1, R8868 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [67, 65535] { R8962 += 1, R8868 += 1, R53 += 1, R54 += 1 };
  s2 -> s1 [0, 65] { R8962 += 1, R8868 += 1, R53 += 1, R54 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R8962 += 1, R8867 += 1, R8868 += 1 };
  s2 -> s3 [66, 66] { R8962 += 1, R8868 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [66, 66] { R8962 += 1, R8868 += 1, R53 += 1, R54 += 1 };
  s2 -> s1 [67, 65535] { R8962 += 1, R8868 += 1, R53 += 1, R54 += 1 };
  s3 -> s3 [0, 65535] { R8962 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R8962 += 1, R8868 += 1, R53 += 1, R54 += 1 };
  s4 -> s6 [0, 65535] { R8962 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R8962 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 65] { R8964 += 1, R8870 += 1, R57 += 1, R58 += 1 };
  s0 -> s2 [0, 65535] { R8964 += 1, R8869 += 1, R8870 += 1 };
  s0 -> s0 [0, 65535] { R8963 += 1, R8964 += 1 };
  s0 -> s3 [66, 66] { R8964 += 1, R8870 += 1, R57 += 1, R58 += 1 };
  s0 -> s4 [66, 66] { R8964 += 1, R8870 += 1, R57 += 1, R58 += 1 };
  s0 -> s1 [67, 65535] { R8964 += 1, R8870 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [0, 65] { R8964 += 1, R8870 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [0, 65535] { R8964 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R8964 += 1, R8870 += 1, R57 += 1, R58 += 1 };
  s1 -> s4 [66, 66] { R8964 += 1, R8870 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [67, 65535] { R8964 += 1, R8870 += 1, R57 += 1, R58 += 1 };
  s2 -> s1 [0, 65] { R8964 += 1, R8870 += 1, R57 += 1, R58 += 1 };
  s2 -> s2 [0, 65535] { R8964 += 1, R8869 += 1, R8870 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R8964 += 1, R8870 += 1, R57 += 1, R58 += 1 };
  s2 -> s4 [66, 66] { R8964 += 1, R8870 += 1, R57 += 1, R58 += 1 };
  s2 -> s1 [67, 65535] { R8964 += 1, R8870 += 1, R57 += 1, R58 += 1 };
  s3 -> s3 [0, 65535] { R8964 += 1, R8870 += 1, R57 += 1, R58 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R8964 += 1 };
  s4 -> s4 [0, 65535] { R8964 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R8964 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 65] { R8966 += 1, R8872 += 1, R63 += 1, R64 += 1 };
  s0 -> s0 [0, 65535] { R8965 += 1, R8966 += 1 };
  s0 -> s2 [0, 65535] { R8966 += 1, R8871 += 1, R8872 += 1 };
  s0 -> s3 [66, 66] { R8966 += 1, R8872 += 1, R63 += 1, R64 += 1 };
  s0 -> s4 [66, 66] { R8966 += 1, R8872 += 1, R63 += 1, R64 += 1 };
  s0 -> s1 [67, 65535] { R8966 += 1, R8872 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [0, 65] { R8966 += 1, R8872 += 1, R63 += 1, R64 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R8966 += 1 };
  s1 -> s3 [66, 66] { R8966 += 1, R8872 += 1, R63 += 1, R64 += 1 };
  s1 -> s4 [66, 66] { R8966 += 1, R8872 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [67, 65535] { R8966 += 1, R8872 += 1, R63 += 1, R64 += 1 };
  s2 -> s1 [0, 65] { R8966 += 1, R8872 += 1, R63 += 1, R64 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R8966 += 1, R8871 += 1, R8872 += 1 };
  s2 -> s3 [66, 66] { R8966 += 1, R8872 += 1, R63 += 1, R64 += 1 };
  s2 -> s4 [66, 66] { R8966 += 1, R8872 += 1, R63 += 1, R64 += 1 };
  s2 -> s1 [67, 65535] { R8966 += 1, R8872 += 1, R63 += 1, R64 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R8966 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R8966 += 1 };
  s4 -> s4 [0, 65535] { R8966 += 1, R8872 += 1, R63 += 1, R64 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R8966 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65] { R8968 += 1, R8874 += 1, R67 += 1, R68 += 1 };
  s0 -> s2 [0, 65535] { R8968 += 1, R8873 += 1, R8874 += 1 };
  s0 -> s0 [0, 65535] { R8967 += 1, R8968 += 1 };
  s0 -> s3 [66, 66] { R8968 += 1, R8874 += 1, R67 += 1, R68 += 1 };
  s0 -> s4 [66, 66] { R8968 += 1, R8874 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [67, 65535] { R8968 += 1, R8874 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65] { R8968 += 1, R8874 += 1, R67 += 1, R68 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R8968 += 1 };
  s1 -> s3 [66, 66] { R8968 += 1, R8874 += 1, R67 += 1, R68 += 1 };
  s1 -> s4 [66, 66] { R8968 += 1, R8874 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [67, 65535] { R8968 += 1, R8874 += 1, R67 += 1, R68 += 1 };
  s2 -> s1 [0, 65] { R8968 += 1, R8874 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535] { R8968 += 1, R8873 += 1, R8874 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R8968 += 1, R8874 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [66, 66] { R8968 += 1, R8874 += 1, R67 += 1, R68 += 1 };
  s2 -> s1 [67, 65535] { R8968 += 1, R8874 += 1, R67 += 1, R68 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R8968 += 1 };
  s3 -> s3 [0, 65535] { R8968 += 1, R8874 += 1, R67 += 1, R68 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R8968 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R8968 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 65] { R8970 += 1, R8876 += 1, R73 += 1, R74 += 1 };
  s0 -> s2 [0, 65535] { R8970 += 1, R8875 += 1, R8876 += 1 };
  s0 -> s0 [0, 65535] { R8969 += 1, R8970 += 1 };
  s0 -> s3 [66, 66] { R8970 += 1, R8876 += 1, R73 += 1, R74 += 1 };
  s0 -> s4 [66, 66] { R8970 += 1, R8876 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [67, 65535] { R8970 += 1, R8876 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65] { R8970 += 1, R8876 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535] { R8970 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R8970 += 1, R8876 += 1, R73 += 1, R74 += 1 };
  s1 -> s4 [66, 66] { R8970 += 1, R8876 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [67, 65535] { R8970 += 1, R8876 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [0, 65] { R8970 += 1, R8876 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R8970 += 1, R8875 += 1, R8876 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R8970 += 1, R8876 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [66, 66] { R8970 += 1, R8876 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [67, 65535] { R8970 += 1, R8876 += 1, R73 += 1, R74 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R8970 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R8970 += 1 };
  s4 -> s4 [0, 65535] { R8970 += 1, R8876 += 1, R73 += 1, R74 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R8970 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65] { R8972 += 1, R8896 += 1 };
  s0 -> s0 [0, 65535] { R8971 += 1, R8972 += 1 };
  s0 -> s2 [0, 65535] { R8972 += 1, R8895 += 1, R8896 += 1 };
  s0 -> s3 [66, 66] { R8972 += 1, R8896 += 1 };
  s0 -> s1 [67, 65535] { R8972 += 1, R8896 += 1 };
  s1 -> s1 [0, 65] { R8972 += 1, R8896 += 1 };
  s1 -> s3 [66, 66] { R8972 += 1, R8896 += 1 };
  s1 -> s1 [67, 65535] { R8972 += 1, R8896 += 1 };
  s2 -> s1 [0, 65] { R8972 += 1, R8896 += 1 };
  s2 -> s2 [0, 65535] { R8972 += 1, R8895 += 1, R8896 += 1 };
  s2 -> s3 [66, 66] { R8972 += 1, R8896 += 1 };
  s2 -> s1 [67, 65535] { R8972 += 1, R8896 += 1 };
  s3 -> s3 [0, 65535] { R8972 += 1, R8896 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R8972 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R8972 += 1 };
  accepting s3, s4, s5;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 65535] { R8974 += 1, R8897 += 1, R8898 += 1 };
  s0 -> s2 [0, 65535] { R8974 += 1, R8898 += 1, R1 += 1 };
  s0 -> s0 [0, 65535] { R8973 += 1, R8974 += 1 };
  s1 -> s1 [0, 65535] { R8974 += 1, R8897 += 1, R8898 += 1 };
  s1 -> s2 [0, 65535] { R8974 += 1, R8898 += 1, R1 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R8974 += 1, R8898 += 1, R1 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R8974 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R8974 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65] { R8976 += 1, R8900 += 1 };
  s0 -> s2 [0, 65535] { R8976 += 1, R8900 += 1, R11 += 1 };
  s0 -> s3 [0, 65535] { R8976 += 1, R8899 += 1, R8900 += 1 };
  s0 -> s0 [0, 65535] { R8975 += 1, R8976 += 1 };
  s0 -> s4 [66, 66] { R8976 += 1, R8900 += 1 };
  s0 -> s1 [67, 65535] { R8976 += 1, R8900 += 1 };
  s1 -> s1 [0, 65] { R8976 += 1, R8900 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R8976 += 1 };
  s1 -> s4 [66, 66] { R8976 += 1, R8900 += 1 };
  s1 -> s1 [67, 65535] { R8976 += 1, R8900 += 1 };
  s2 -> s1 [0, 65] { R8976 += 1, R8900 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R8976 += 1, R8900 += 1, R11 += 1 };
  s2 -> s6 [0, 65535] { R8976 += 1 };
  s2 -> s4 [66, 66] { R8976 += 1, R8900 += 1 };
  s2 -> s1 [67, 65535] { R8976 += 1, R8900 += 1 };
  s3 -> s1 [0, 65] { R8976 += 1, R8900 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R8976 += 1, R8900 += 1, R11 += 1 };
  s3 -> s3 [0, 65535] { R8976 += 1, R8899 += 1, R8900 += 1 };
  s3 -> s4 [66, 66] { R8976 += 1, R8900 += 1 };
  s3 -> s1 [67, 65535] { R8976 += 1, R8900 += 1 };
  s4 -> s4 [0, 65535] { R8976 += 1, R8900 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R8976 += 1 };
  accepting s3, s5, s2, s6, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65] { R8978 += 1, R8902 += 1, R8840 += 1 };
  s0 -> s2 [0, 65535] { R8978 += 1, R8902 += 1, R8839 += 1, R8840 += 1 };
  s0 -> s3 [0, 65535] { R8978 += 1, R8901 += 1, R8902 += 1 };
  s0 -> s0 [0, 65535] { R8977 += 1, R8978 += 1 };
  s0 -> s1 [67, 65535] { R8978 += 1, R8902 += 1, R8840 += 1 };
  s1 -> s1 [0, 65] { R8978 += 1, R8902 += 1, R8840 += 1 };
  s1 -> s5 [0, 65535] { R8978 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R8978 += 1, R8902 += 1 };
  s1 -> s1 [67, 65535] { R8978 += 1, R8902 += 1, R8840 += 1 };
  s2 -> s1 [0, 65] { R8978 += 1, R8902 += 1, R8840 += 1 };
  s2 -> s5 [0, 65535] { R8978 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R8978 += 1, R8902 += 1, R8839 += 1, R8840 += 1 };
  s2 -> s1 [67, 65535] { R8978 += 1, R8902 += 1, R8840 += 1 };
  s3 -> s1 [0, 65] { R8978 += 1, R8902 += 1, R8840 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R8978 += 1, R8902 += 1, R8839 += 1, R8840 += 1 };
  s3 -> s3 [0, 65535] { R8978 += 1, R8901 += 1, R8902 += 1 };
  s3 -> s1 [67, 65535] { R8978 += 1, R8902 += 1, R8840 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R8978 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 65535] { R8980 += 1, R8903 += 1, R8904 += 1 };
  s0 -> s0 [0, 65535] { R8979 += 1, R8980 += 1 };
  s0 -> s2 [0, 65535] { R8980 += 1, R8904 += 1, R8842 += 1, R20 += 1 };
  s0 -> s3 [0, 65535] { R8980 += 1, R8904 += 1, R8841 += 1, R8842 += 1 };
  s1 -> s1 [0, 65535] { R8980 += 1, R8903 += 1, R8904 += 1 };
  s1 -> s2 [0, 65535] { R8980 += 1, R8904 += 1, R8842 += 1, R20 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R8980 += 1, R8904 += 1, R8841 += 1, R8842 += 1 };
  s2 -> s4 [0, 65535] { R8980 += 1 };
  s2 -> s2 [0, 65535] { R8980 += 1, R8904 += 1, R8842 += 1, R20 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R8980 += 1, R8904 += 1 };
  s3 -> s4 [0, 65535] { R8980 += 1 };
  s3 -> s2 [0, 65535] { R8980 += 1, R8904 += 1, R8842 += 1, R20 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R8980 += 1, R8904 += 1, R8841 += 1, R8842 += 1 };
  s4 -> s4 [0, 65535] { R8980 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R8980 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R8980 += 1, R8904 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 66] { R8982 += 1, R8906 += 1, R8844 += 1 };
  s0 -> s2 [0, 65535] { R8982 += 1, R8905 += 1, R8906 += 1 };
  s0 -> s3 [0, 65535] { R8982 += 1, R8906 += 1, R8843 += 1, R8844 += 1 };
  s0 -> s0 [0, 65535] { R8981 += 1, R8982 += 1 };
  s0 -> s1 [70, 65535] { R8982 += 1, R8906 += 1, R8844 += 1 };
  s1 -> s1 [0, 66] { R8982 += 1, R8906 += 1, R8844 += 1 };
  s1 -> s4 [0, 65535] { R8982 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R8982 += 1, R8906 += 1 };
  s1 -> s1 [70, 65535] { R8982 += 1, R8906 += 1, R8844 += 1 };
  s2 -> s1 [0, 66] { R8982 += 1, R8906 += 1, R8844 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R8982 += 1, R8905 += 1, R8906 += 1 };
  s2 -> s3 [0, 65535] { R8982 += 1, R8906 += 1, R8843 += 1, R8844 += 1 };
  s2 -> s1 [70, 65535] { R8982 += 1, R8906 += 1, R8844 += 1 };
  s3 -> s1 [0, 66] { R8982 += 1, R8906 += 1, R8844 += 1 };
  s3 -> s4 [0, 65535] { R8982 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R8982 += 1, R8906 += 1, R8843 += 1, R8844 += 1 };
  s3 -> s1 [70, 65535] { R8982 += 1, R8906 += 1, R8844 += 1 };
  s4 -> s4 [0, 65535] { R8982 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s0 [0, 65535] { R8983 += 1, R8984 += 1 };
  s0 -> s1 [0, 65535] { R8984 += 1, R8908 += 1, R8845 += 1, R8846 += 1 };
  s0 -> s2 [0, 65535] { R8984 += 1, R8907 += 1, R8908 += 1 };
  s0 -> s3 [0, 65535] { R8984 += 1, R8908 += 1, R8846 += 1, R78 += 1 };
  s1 -> s4 [0, 65535] { R8984 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R8984 += 1, R8908 += 1, R8845 += 1, R8846 += 1 };
  s1 -> s3 [0, 65535] { R8984 += 1, R8908 += 1, R8846 += 1, R78 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R8984 += 1, R8908 += 1, R8845 += 1, R8846 += 1 };
  s2 -> s2 [0, 65535] { R8984 += 1, R8907 += 1, R8908 += 1 };
  s2 -> s3 [0, 65535] { R8984 += 1, R8908 += 1, R8846 += 1, R78 += 1 };
  s3 -> s4 [0, 65535] { R8984 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R8984 += 1, R8908 += 1, R8846 += 1, R78 += 1 };
  s3 -> s6 [0, 65535] { R8984 += 1, R8908 += 1 };
  s4 -> s4 [0, 65535] { R8984 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R8984 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R8984 += 1, R8908 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 69] { R8986 += 1, R8910 += 1, R8848 += 1 };
  s0 -> s2 [0, 65535] { R8986 += 1, R8910 += 1, R8848 += 1, R80 += 1 };
  s0 -> s3 [0, 65535] { R8986 += 1, R8910 += 1, R8847 += 1, R8848 += 1 };
  s0 -> s0 [0, 65535] { R8985 += 1, R8986 += 1 };
  s0 -> s4 [0, 65535] { R8986 += 1, R8909 += 1, R8910 += 1 };
  s0 -> s1 [71, 65535] { R8986 += 1, R8910 += 1, R8848 += 1 };
  s1 -> s1 [0, 69] { R8986 += 1, R8910 += 1, R8848 += 1 };
  s1 -> s6 [0, 65535] { R8986 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R8986 += 1, R8910 += 1 };
  s1 -> s1 [71, 65535] { R8986 += 1, R8910 += 1, R8848 += 1 };
  s2 -> s1 [0, 69] { R8986 += 1, R8910 += 1, R8848 += 1 };
  s2 -> s6 [0, 65535] { R8986 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R8986 += 1, R8910 += 1 };
  s2 -> s2 [0, 65535] { R8986 += 1, R8910 += 1, R8848 += 1, R80 += 1 };
  s2 -> s1 [71, 65535] { R8986 += 1, R8910 += 1, R8848 += 1 };
  s3 -> s1 [0, 69] { R8986 += 1, R8910 += 1, R8848 += 1 };
  s3 -> s6 [0, 65535] { R8986 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R8986 += 1, R8910 += 1, R8848 += 1, R80 += 1 };
  s3 -> s3 [0, 65535] { R8986 += 1, R8910 += 1, R8847 += 1, R8848 += 1 };
  s3 -> s1 [71, 65535] { R8986 += 1, R8910 += 1, R8848 += 1 };
  s4 -> s1 [0, 69] { R8986 += 1, R8910 += 1, R8848 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R8986 += 1, R8910 += 1, R8848 += 1, R80 += 1 };
  s4 -> s3 [0, 65535] { R8986 += 1, R8910 += 1, R8847 += 1, R8848 += 1 };
  s4 -> s4 [0, 65535] { R8986 += 1, R8909 += 1, R8910 += 1 };
  s4 -> s1 [71, 65535] { R8986 += 1, R8910 += 1, R8848 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R8986 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R8986 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R8986 += 1, R8910 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R8988 += 1, R8912 += 1, R8850 += 1, R84 += 1 };
  s0 -> s2 [0, 65535] { R8988 += 1, R8912 += 1, R8849 += 1, R8850 += 1 };
  s0 -> s3 [0, 65535] { R8988 += 1, R8912 += 1, R8850 += 1, R83 += 1, R84 += 1 };
  s0 -> s0 [0, 65535] { R8987 += 1, R8988 += 1 };
  s0 -> s4 [0, 65535] { R8988 += 1, R8911 += 1, R8912 += 1 };
  s0 -> s1 [71, 65535] { R8988 += 1, R8912 += 1, R8850 += 1, R84 += 1 };
  s1 -> s1 [0, 69] { R8988 += 1, R8912 += 1, R8850 += 1, R84 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R8988 += 1 };
  s1 -> s7 [0, 65535] { R8988 += 1, R8912 += 1 };
  s1 -> s1 [0, 65535] { R8988 += 1, R8912 += 1, R8850 += 1 };
  s1 -> s1 [71, 65535] { R8988 += 1, R8912 += 1, R8850 += 1, R84 += 1 };
  s2 -> s1 [0, 69] { R8988 += 1, R8912 += 1, R8850 += 1, R84 += 1 };
  s2 -> s2 [0, 65535] { R8988 += 1, R8912 += 1, R8849 += 1, R8850 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R8988 += 1 };
  s2 -> s3 [0, 65535] { R8988 += 1, R8912 += 1, R8850 += 1, R83 += 1, R84 += 1 };
  s2 -> s1 [71, 65535] { R8988 += 1, R8912 += 1, R8850 += 1, R84 += 1 };
  s3 -> s1 [0, 69] { R8988 += 1, R8912 += 1, R8850 += 1, R84 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R8988 += 1 };
  s3 -> s7 [0, 65535] { R8988 += 1, R8912 += 1 };
  s3 -> s3 [0, 65535] { R8988 += 1, R8912 += 1, R8850 += 1, R83 += 1, R84 += 1 };
  s3 -> s1 [71, 65535] { R8988 += 1, R8912 += 1, R8850 += 1, R84 += 1 };
  s4 -> s1 [0, 69] { R8988 += 1, R8912 += 1, R8850 += 1, R84 += 1 };
  s4 -> s2 [0, 65535] { R8988 += 1, R8912 += 1, R8849 += 1, R8850 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R8988 += 1, R8912 += 1, R8850 += 1, R83 += 1, R84 += 1 };
  s4 -> s4 [0, 65535] { R8988 += 1, R8911 += 1, R8912 += 1 };
  s4 -> s1 [71, 65535] { R8988 += 1, R8912 += 1, R8850 += 1, R84 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R8988 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R8988 += 1 };
  s7 -> s7 [0, 65535] { R8988 += 1, R8912 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R8990 += 1, R8914 += 1, R8852 += 1, R6641 += 1, R6642 += 1 };
  s0 -> s0 [0, 65535] { R8989 += 1, R8990 += 1 };
  s0 -> s2 [0, 65535] { R8990 += 1, R8914 += 1, R8851 += 1, R8852 += 1 };
  s0 -> s3 [0, 65535] { R8990 += 1, R8914 += 1, R8852 += 1 };
  s0 -> s4 [0, 65535] { R8990 += 1, R8913 += 1, R8914 += 1 };
  s1 -> s1 [0, 65535] { R8990 += 1, R8914 += 1, R8852 += 1, R6641 += 1, R6642 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R8990 += 1, R8914 += 1 };
  s1 -> s3 [0, 65535] { R8990 += 1, R8914 += 1, R8852 += 1 };
  s1 -> s7 [0, 65535] { R8990 += 1 };
  s2 -> s1 [0, 65535] { R8990 += 1, R8914 += 1, R8852 += 1, R6641 += 1, R6642 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R8990 += 1, R8914 += 1, R8851 += 1, R8852 += 1 };
  s2 -> s3 [0, 65535] { R8990 += 1, R8914 += 1, R8852 += 1 };
  s2 -> s7 [0, 65535] { R8990 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R8990 += 1, R8914 += 1 };
  s3 -> s3 [0, 65535] { R8990 += 1, R8914 += 1, R8852 += 1 };
  s3 -> s7 [0, 65535] { R8990 += 1 };
  s4 -> s1 [0, 65535] { R8990 += 1, R8914 += 1, R8852 += 1, R6641 += 1, R6642 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R8990 += 1, R8914 += 1, R8851 += 1, R8852 += 1 };
  s4 -> s3 [0, 65535] { R8990 += 1, R8914 += 1, R8852 += 1 };
  s4 -> s4 [0, 65535] { R8990 += 1, R8913 += 1, R8914 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R8990 += 1, R8914 += 1 };
  s6 -> s7 [0, 65535] { R8990 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R8990 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 70] { R8992 += 1, R8916 += 1, R8854 += 1, R8828 += 1 };
  s0 -> s2 [0, 65535] { R8992 += 1, R8916 += 1, R8853 += 1, R8854 += 1 };
  s0 -> s0 [0, 65535] { R8991 += 1, R8992 += 1 };
  s0 -> s3 [0, 65535] { R8992 += 1, R8915 += 1, R8916 += 1 };
  s0 -> s4 [0, 65535] { R8992 += 1, R8916 += 1, R8854 += 1, R8827 += 1, R8828 += 1 };
  s0 -> s5 [80, 80] { R8992 += 1, R8916 += 1, R8854 += 1, R8828 += 1 };
  s0 -> s1 [81, 65535] { R8992 += 1, R8916 += 1, R8854 += 1, R8828 += 1 };
  s1 -> s1 [0, 70] { R8992 += 1, R8916 += 1, R8854 += 1, R8828 += 1 };
  s1 -> s5 [80, 80] { R8992 += 1, R8916 += 1, R8854 += 1, R8828 += 1 };
  s1 -> s1 [81, 65535] { R8992 += 1, R8916 += 1, R8854 += 1, R8828 += 1 };
  s2 -> s1 [0, 70] { R8992 += 1, R8916 += 1, R8854 += 1, R8828 += 1 };
  s2 -> s2 [0, 65535] { R8992 += 1, R8916 += 1, R8853 += 1, R8854 += 1 };
  s2 -> s4 [0, 65535] { R8992 += 1, R8916 += 1, R8854 += 1, R8827 += 1, R8828 += 1 };
  s2 -> s5 [80, 80] { R8992 += 1, R8916 += 1, R8854 += 1, R8828 += 1 };
  s2 -> s1 [81, 65535] { R8992 += 1, R8916 += 1, R8854 += 1, R8828 += 1 };
  s3 -> s1 [0, 70] { R8992 += 1, R8916 += 1, R8854 += 1, R8828 += 1 };
  s3 -> s2 [0, 65535] { R8992 += 1, R8916 += 1, R8853 += 1, R8854 += 1 };
  s3 -> s3 [0, 65535] { R8992 += 1, R8915 += 1, R8916 += 1 };
  s3 -> s4 [0, 65535] { R8992 += 1, R8916 += 1, R8854 += 1, R8827 += 1, R8828 += 1 };
  s3 -> s5 [80, 80] { R8992 += 1, R8916 += 1, R8854 += 1, R8828 += 1 };
  s3 -> s1 [81, 65535] { R8992 += 1, R8916 += 1, R8854 += 1, R8828 += 1 };
  s4 -> s1 [0, 70] { R8992 += 1, R8916 += 1, R8854 += 1, R8828 += 1 };
  s4 -> s4 [0, 65535] { R8992 += 1, R8916 += 1, R8854 += 1, R8827 += 1, R8828 += 1 };
  s4 -> s5 [80, 80] { R8992 += 1, R8916 += 1, R8854 += 1, R8828 += 1 };
  s4 -> s1 [81, 65535] { R8992 += 1, R8916 += 1, R8854 += 1, R8828 += 1 };
  s5 -> s5 [0, 70] { R8992 += 1, R8916 += 1, R8854 += 1, R8828 += 1 };
  s5 -> s6 [0, 65535] { R8992 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R8992 += 1, R8916 += 1 };
  s5 -> s5 [0, 65535] { R8992 += 1, R8916 += 1, R8854 += 1 };
  s5 -> s5 [80, 65535] { R8992 += 1, R8916 += 1, R8854 += 1, R8828 += 1 };
  s6 -> s6 [0, 65535] { R8992 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R8992 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R8992 += 1, R8916 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 65535] { R8994 += 1, R8918 += 1, R8856 += 1, R8832 += 1, R8833 += 1 };
  s0 -> s2 [0, 65535] { R8994 += 1, R8918 += 1, R8855 += 1, R8856 += 1 };
  s0 -> s3 [0, 65535] { R8994 += 1, R8918 += 1, R8856 += 1, R8833 += 1, R8834 += 1 };
  s0 -> s4 [0, 65535] { R8994 += 1, R8917 += 1, R8918 += 1 };
  s0 -> s0 [0, 65535] { R8993 += 1, R8994 += 1 };
  s1 -> s1 [0, 65535] { R8994 += 1, R8918 += 1, R8856 += 1, R8832 += 1, R8833 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R8994 += 1, R8918 += 1, R8856 += 1, R8833 += 1, R8834 += 1 };
  s1 -> s7 [0, 65535] { R8994 += 1 };
  s1 -> s8 [0, 65535] { R8994 += 1, R8918 += 1 };
  s2 -> s1 [0, 65535] { R8994 += 1, R8918 += 1, R8856 += 1, R8832 += 1, R8833 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R8994 += 1, R8918 += 1, R8855 += 1, R8856 += 1 };
  s2 -> s3 [0, 65535] { R8994 += 1, R8918 += 1, R8856 += 1, R8833 += 1, R8834 += 1 };
  s2 -> s7 [0, 65535] { R8994 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R8994 += 1, R8918 += 1, R8856 += 1, R8833 += 1, R8834 += 1 };
  s3 -> s6 [0, 65535] { R8994 += 1, R8918 += 1, R8856 += 1 };
  s3 -> s7 [0, 65535] { R8994 += 1 };
  s3 -> s8 [0, 65535] { R8994 += 1, R8918 += 1 };
  s4 -> s1 [0, 65535] { R8994 += 1, R8918 += 1, R8856 += 1, R8832 += 1, R8833 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R8994 += 1, R8918 += 1, R8855 += 1, R8856 += 1 };
  s4 -> s3 [0, 65535] { R8994 += 1, R8918 += 1, R8856 += 1, R8833 += 1, R8834 += 1 };
  s4 -> s4 [0, 65535] { R8994 += 1, R8917 += 1, R8918 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R8994 += 1, R8918 += 1, R8856 += 1 };
  s6 -> s7 [0, 65535] { R8994 += 1 };
  s6 -> s8 [0, 65535] { R8994 += 1, R8918 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R8994 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s7 [0, 65535] { R8994 += 1 };
  s8 -> s8 [0, 65535] { R8994 += 1, R8918 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R8996 += 1, R8920 += 1, R8858 += 1, R8838 += 1 };
  s0 -> s0 [0, 65535] { R8995 += 1, R8996 += 1 };
  s0 -> s2 [0, 65535] { R8996 += 1, R8920 += 1, R8858 += 1, R8837 += 1, R8838 += 1 };
  s0 -> s3 [0, 65535] { R8996 += 1, R8919 += 1, R8920 += 1 };
  s0 -> s4 [0, 65535] { R8996 += 1, R8920 += 1, R8857 += 1, R8858 += 1 };
  s0 -> s5 [70, 70] { R8996 += 1, R8920 += 1, R8858 += 1, R8838 += 1 };
  s0 -> s6 [70, 70] { R8996 += 1, R8920 += 1, R8858 += 1, R8838 += 1 };
  s0 -> s1 [81, 65535] { R8996 += 1, R8920 += 1, R8858 += 1, R8838 += 1 };
  s1 -> s1 [0, 69] { R8996 += 1, R8920 += 1, R8858 += 1, R8838 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s8 [0, 65535] { R8996 += 1, R8920 += 1 };
  s1 -> s9 [0, 65535] { R8996 += 1 };
  s1 -> s1 [0, 65535] { R8996 += 1, R8920 += 1, R8858 += 1 };
  s1 -> s5 [70, 70] { R8996 += 1, R8920 += 1, R8858 += 1, R8838 += 1 };
  s1 -> s6 [70, 70] { R8996 += 1, R8920 += 1, R8858 += 1, R8838 += 1 };
  s1 -> s1 [81, 65535] { R8996 += 1, R8920 += 1, R8858 += 1, R8838 += 1 };
  s2 -> s1 [0, 69] { R8996 += 1, R8920 += 1, R8858 += 1, R8838 += 1 };
  s2 -> s2 [0, 65535] { R8996 += 1, R8920 += 1, R8858 += 1, R8837 += 1, R8838 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s8 [0, 65535] { R8996 += 1, R8920 += 1 };
  s2 -> s9 [0, 65535] { R8996 += 1 };
  s2 -> s5 [70, 70] { R8996 += 1, R8920 += 1, R8858 += 1, R8838 += 1 };
  s2 -> s6 [70, 70] { R8996 += 1, R8920 += 1, R8858 += 1, R8838 += 1 };
  s2 -> s1 [81, 65535] { R8996 += 1, R8920 += 1, R8858 += 1, R8838 += 1 };
  s3 -> s1 [0, 69] { R8996 += 1, R8920 += 1, R8858 += 1, R8838 += 1 };
  s3 -> s2 [0, 65535] { R8996 += 1, R8920 += 1, R8858 += 1, R8837 += 1, R8838 += 1 };
  s3 -> s3 [0, 65535] { R8996 += 1, R8919 += 1, R8920 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [0, 65535] { R8996 += 1, R8920 += 1, R8857 += 1, R8858 += 1 };
  s3 -> s5 [70, 70] { R8996 += 1, R8920 += 1, R8858 += 1, R8838 += 1 };
  s3 -> s6 [70, 70] { R8996 += 1, R8920 += 1, R8858 += 1, R8838 += 1 };
  s3 -> s1 [81, 65535] { R8996 += 1, R8920 += 1, R8858 += 1, R8838 += 1 };
  s4 -> s1 [0, 69] { R8996 += 1, R8920 += 1, R8858 += 1, R8838 += 1 };
  s4 -> s2 [0, 65535] { R8996 += 1, R8920 += 1, R8858 += 1, R8837 += 1, R8838 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s9 [0, 65535] { R8996 += 1 };
  s4 -> s4 [0, 65535] { R8996 += 1, R8920 += 1, R8857 += 1, R8858 += 1 };
  s4 -> s5 [70, 70] { R8996 += 1, R8920 += 1, R8858 += 1, R8838 += 1 };
  s4 -> s6 [70, 70] { R8996 += 1, R8920 += 1, R8858 += 1, R8838 += 1 };
  s4 -> s1 [81, 65535] { R8996 += 1, R8920 += 1, R8858 += 1, R8838 += 1 };
  s5 -> s5 [0, 70] { R8996 += 1, R8920 += 1, R8858 += 1, R8838 += 1 };
  s5 -> s5 [0, 65535] { R8996 += 1, R8920 += 1, R8858 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R8996 += 1, R8920 += 1 };
  s5 -> s9 [0, 65535] { R8996 += 1 };
  s5 -> s5 [81, 65535] { R8996 += 1, R8920 += 1, R8858 += 1, R8838 += 1 };
  s6 -> s6 [0, 65535] { R8996 += 1, R8920 += 1, R8858 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R8996 += 1, R8920 += 1 };
  s6 -> s9 [0, 65535] { R8996 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R8996 += 1, R8920 += 1 };
  s8 -> s9 [0, 65535] { R8996 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s9 [0, 65535] { R8996 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R8998 += 1, R8922 += 1, R8878 += 1, R21 += 1 };
  s0 -> s2 [0, 65535] { R8998 += 1, R8922 += 1, R8877 += 1, R8878 += 1 };
  s0 -> s0 [0, 65535] { R8997 += 1, R8998 += 1 };
  s0 -> s3 [0, 65535] { R8998 += 1, R8921 += 1, R8922 += 1 };
  s1 -> s1 [0, 65535] { R8998 += 1, R8922 += 1, R8878 += 1, R21 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R8998 += 1 };
  s1 -> s6 [0, 65535] { R8998 += 1, R8922 += 1 };
  s2 -> s1 [0, 65535] { R8998 += 1, R8922 += 1, R8878 += 1, R21 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R8998 += 1, R8922 += 1, R8877 += 1, R8878 += 1 };
  s2 -> s5 [0, 65535] { R8998 += 1 };
  s3 -> s1 [0, 65535] { R8998 += 1, R8922 += 1, R8878 += 1, R21 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R8998 += 1, R8922 += 1, R8877 += 1, R8878 += 1 };
  s3 -> s3 [0, 65535] { R8998 += 1, R8921 += 1, R8922 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R8998 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R8998 += 1 };
  s6 -> s6 [0, 65535] { R8998 += 1, R8922 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 65] { R9000 += 1, R8924 += 1, R8880 += 1 };
  s0 -> s2 [0, 65535] { R9000 += 1, R8924 += 1, R8879 += 1, R8880 += 1 };
  s0 -> s3 [0, 65535] { R9000 += 1, R8923 += 1, R8924 += 1 };
  s0 -> s0 [0, 65535] { R8999 += 1, R9000 += 1 };
  s0 -> s4 [66, 66] { R9000 += 1, R8924 += 1, R8880 += 1 };
  s0 -> s5 [66, 66] { R9000 += 1, R8924 += 1, R8880 += 1 };
  s0 -> s6 [70, 70] { R9000 += 1, R8924 += 1, R8880 += 1 };
  s0 -> s1 [71, 65535] { R9000 += 1, R8924 += 1, R8880 += 1 };
  s1 -> s1 [0, 65] { R9000 += 1, R8924 += 1, R8880 += 1 };
  s1 -> s4 [66, 66] { R9000 += 1, R8924 += 1, R8880 += 1 };
  s1 -> s5 [66, 66] { R9000 += 1, R8924 += 1, R8880 += 1 };
  s1 -> s6 [70, 70] { R9000 += 1, R8924 += 1, R8880 += 1 };
  s1 -> s1 [71, 65535] { R9000 += 1, R8924 += 1, R8880 += 1 };
  s2 -> s1 [0, 65] { R9000 += 1, R8924 += 1, R8880 += 1 };
  s2 -> s2 [0, 65535] { R9000 += 1, R8924 += 1, R8879 += 1, R8880 += 1 };
  s2 -> s4 [66, 66] { R9000 += 1, R8924 += 1, R8880 += 1 };
  s2 -> s5 [66, 66] { R9000 += 1, R8924 += 1, R8880 += 1 };
  s2 -> s6 [70, 70] { R9000 += 1, R8924 += 1, R8880 += 1 };
  s2 -> s1 [71, 65535] { R9000 += 1, R8924 += 1, R8880 += 1 };
  s3 -> s1 [0, 65] { R9000 += 1, R8924 += 1, R8880 += 1 };
  s3 -> s2 [0, 65535] { R9000 += 1, R8924 += 1, R8879 += 1, R8880 += 1 };
  s3 -> s3 [0, 65535] { R9000 += 1, R8923 += 1, R8924 += 1 };
  s3 -> s4 [66, 66] { R9000 += 1, R8924 += 1, R8880 += 1 };
  s3 -> s5 [66, 66] { R9000 += 1, R8924 += 1, R8880 += 1 };
  s3 -> s6 [70, 70] { R9000 += 1, R8924 += 1, R8880 += 1 };
  s3 -> s1 [71, 65535] { R9000 += 1, R8924 += 1, R8880 += 1 };
  s5 -> s5 [0, 66] { R9000 += 1, R8924 += 1, R8880 += 1 };
  s5 -> s9 [70, 70] { R9000 += 1, R8924 += 1, R8880 += 1 };
  s5 -> s5 [71, 65535] { R9000 += 1, R8924 += 1, R8880 += 1 };
  s6 -> s6 [0, 65] { R9000 += 1, R8924 += 1, R8880 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R9000 += 1 };
  s6 -> s6 [0, 65535] { R9000 += 1, R8924 += 1 };
  s6 -> s9 [66, 66] { R9000 += 1, R8924 += 1, R8880 += 1 };
  s6 -> s10 [66, 66] { R9000 += 1, R8924 += 1, R8880 += 1 };
  s6 -> s6 [70, 65535] { R9000 += 1, R8924 += 1, R8880 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R9000 += 1 };
  s9 -> s9 [0, 66] { R9000 += 1, R8924 += 1, R8880 += 1 };
  s9 -> s9 [0, 65535] { R9000 += 1, R8924 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s8 [0, 65535] { R9000 += 1 };
  s9 -> s9 [70, 65535] { R9000 += 1, R8924 += 1, R8880 += 1 };
  s10 -> s10 [0, 65535] { R9000 += 1, R8924 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s8 [0, 65535] { R9000 += 1 };
  accepting s8, s9, s6, s7, s10;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65] { R9002 += 1, R8926 += 1, R8882 += 1, R77 += 1 };
  s0 -> s0 [0, 65535] { R9001 += 1, R9002 += 1 };
  s0 -> s2 [0, 65535] { R9002 += 1, R8926 += 1, R8881 += 1, R8882 += 1 };
  s0 -> s3 [0, 65535] { R9002 += 1, R8925 += 1, R8926 += 1 };
  s0 -> s4 [66, 66] { R9002 += 1, R8926 += 1, R8882 += 1, R77 += 1 };
  s0 -> s5 [66, 66] { R9002 += 1, R8926 += 1, R8882 += 1, R77 += 1 };
  s0 -> s1 [67, 65535] { R9002 += 1, R8926 += 1, R8882 += 1, R77 += 1 };
  s1 -> s1 [0, 65] { R9002 += 1, R8926 += 1, R8882 += 1, R77 += 1 };
  s1 -> s6 [0, 65535] { R9002 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R9002 += 1, R8926 += 1 };
  s1 -> s4 [66, 66] { R9002 += 1, R8926 += 1, R8882 += 1, R77 += 1 };
  s1 -> s5 [66, 66] { R9002 += 1, R8926 += 1, R8882 += 1, R77 += 1 };
  s1 -> s1 [67, 65535] { R9002 += 1, R8926 += 1, R8882 += 1, R77 += 1 };
  s2 -> s1 [0, 65] { R9002 += 1, R8926 += 1, R8882 += 1, R77 += 1 };
  s2 -> s6 [0, 65535] { R9002 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s2 [0, 65535] { R9002 += 1, R8926 += 1, R8881 += 1, R8882 += 1 };
  s2 -> s4 [66, 66] { R9002 += 1, R8926 += 1, R8882 += 1, R77 += 1 };
  s2 -> s5 [66, 66] { R9002 += 1, R8926 += 1, R8882 += 1, R77 += 1 };
  s2 -> s1 [67, 65535] { R9002 += 1, R8926 += 1, R8882 += 1, R77 += 1 };
  s3 -> s1 [0, 65] { R9002 += 1, R8926 += 1, R8882 += 1, R77 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s2 [0, 65535] { R9002 += 1, R8926 += 1, R8881 += 1, R8882 += 1 };
  s3 -> s3 [0, 65535] { R9002 += 1, R8925 += 1, R8926 += 1 };
  s3 -> s4 [66, 66] { R9002 += 1, R8926 += 1, R8882 += 1, R77 += 1 };
  s3 -> s5 [66, 66] { R9002 += 1, R8926 += 1, R8882 += 1, R77 += 1 };
  s3 -> s1 [67, 65535] { R9002 += 1, R8926 += 1, R8882 += 1, R77 += 1 };
  s4 -> s6 [0, 65535] { R9002 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R9002 += 1, R8926 += 1 };
  s4 -> s4 [0, 65535] { R9002 += 1, R8926 += 1, R8882 += 1, R77 += 1 };
  s5 -> s6 [0, 65535] { R9002 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R9002 += 1, R8926 += 1 };
  s6 -> s6 [0, 65535] { R9002 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R9002 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R9002 += 1, R8926 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 65] { R9004 += 1, R8928 += 1, R8884 += 1, R79 += 1 };
  s0 -> s0 [0, 65535] { R9003 += 1, R9004 += 1 };
  s0 -> s2 [0, 65535] { R9004 += 1, R8927 += 1, R8928 += 1 };
  s0 -> s3 [0, 65535] { R9004 += 1, R8928 += 1, R8883 += 1, R8884 += 1 };
  s0 -> s4 [66, 66] { R9004 += 1, R8928 += 1, R8884 += 1, R79 += 1 };
  s0 -> s5 [66, 66] { R9004 += 1, R8928 += 1, R8884 += 1, R79 += 1 };
  s0 -> s1 [67, 65535] { R9004 += 1, R8928 += 1, R8884 += 1, R79 += 1 };
  s1 -> s1 [0, 65] { R9004 += 1, R8928 += 1, R8884 += 1, R79 += 1 };
  s1 -> s1 [0, 65535] { R9004 += 1, R8928 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R9004 += 1 };
  s1 -> s4 [66, 66] { R9004 += 1, R8928 += 1, R8884 += 1, R79 += 1 };
  s1 -> s5 [66, 66] { R9004 += 1, R8928 += 1, R8884 += 1, R79 += 1 };
  s1 -> s1 [67, 65535] { R9004 += 1, R8928 += 1, R8884 += 1, R79 += 1 };
  s2 -> s1 [0, 65] { R9004 += 1, R8928 += 1, R8884 += 1, R79 += 1 };
  s2 -> s2 [0, 65535] { R9004 += 1, R8927 += 1, R8928 += 1 };
  s2 -> s3 [0, 65535] { R9004 += 1, R8928 += 1, R8883 += 1, R8884 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [66, 66] { R9004 += 1, R8928 += 1, R8884 += 1, R79 += 1 };
  s2 -> s5 [66, 66] { R9004 += 1, R8928 += 1, R8884 += 1, R79 += 1 };
  s2 -> s1 [67, 65535] { R9004 += 1, R8928 += 1, R8884 += 1, R79 += 1 };
  s3 -> s1 [0, 65] { R9004 += 1, R8928 += 1, R8884 += 1, R79 += 1 };
  s3 -> s3 [0, 65535] { R9004 += 1, R8928 += 1, R8883 += 1, R8884 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R9004 += 1 };
  s3 -> s4 [66, 66] { R9004 += 1, R8928 += 1, R8884 += 1, R79 += 1 };
  s3 -> s5 [66, 66] { R9004 += 1, R8928 += 1, R8884 += 1, R79 += 1 };
  s3 -> s1 [67, 65535] { R9004 += 1, R8928 += 1, R8884 += 1, R79 += 1 };
  s4 -> s4 [0, 65535] { R9004 += 1, R8928 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R9004 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R9004 += 1 };
  s5 -> s5 [0, 65535] { R9004 += 1, R8928 += 1, R8884 += 1, R79 += 1 };
  s5 -> s8 [0, 65535] { R9004 += 1, R8928 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R9004 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R9004 += 1 };
  s8 -> s8 [0, 65535] { R9004 += 1, R8928 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65] { R9006 += 1, R8930 += 1, R8886 += 1, R81 += 1, R82 += 1 };
  s0 -> s2 [0, 65535] { R9006 += 1, R8929 += 1, R8930 += 1 };
  s0 -> s3 [0, 65535] { R9006 += 1, R8930 += 1, R8885 += 1, R8886 += 1 };
  s0 -> s0 [0, 65535] { R9005 += 1, R9006 += 1 };
  s0 -> s4 [66, 66] { R9006 += 1, R8930 += 1, R8886 += 1, R81 += 1, R82 += 1 };
  s0 -> s5 [66, 66] { R9006 += 1, R8930 += 1, R8886 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [67, 65535] { R9006 += 1, R8930 += 1, R8886 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65] { R9006 += 1, R8930 += 1, R8886 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535] { R9006 += 1, R8930 += 1 };
  s1 -> s6 [0, 65535] { R9006 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [66, 66] { R9006 += 1, R8930 += 1, R8886 += 1, R81 += 1, R82 += 1 };
  s1 -> s5 [66, 66] { R9006 += 1, R8930 += 1, R8886 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [67, 65535] { R9006 += 1, R8930 += 1, R8886 += 1, R81 += 1, R82 += 1 };
  s2 -> s1 [0, 65] { R9006 += 1, R8930 += 1, R8886 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535] { R9006 += 1, R8929 += 1, R8930 += 1 };
  s2 -> s3 [0, 65535] { R9006 += 1, R8930 += 1, R8885 += 1, R8886 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [66, 66] { R9006 += 1, R8930 += 1, R8886 += 1, R81 += 1, R82 += 1 };
  s2 -> s5 [66, 66] { R9006 += 1, R8930 += 1, R8886 += 1, R81 += 1, R82 += 1 };
  s2 -> s1 [67, 65535] { R9006 += 1, R8930 += 1, R8886 += 1, R81 += 1, R82 += 1 };
  s3 -> s1 [0, 65] { R9006 += 1, R8930 += 1, R8886 += 1, R81 += 1, R82 += 1 };
  s3 -> s3 [0, 65535] { R9006 += 1, R8930 += 1, R8885 += 1, R8886 += 1 };
  s3 -> s6 [0, 65535] { R9006 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [66, 66] { R9006 += 1, R8930 += 1, R8886 += 1, R81 += 1, R82 += 1 };
  s3 -> s5 [66, 66] { R9006 += 1, R8930 += 1, R8886 += 1, R81 += 1, R82 += 1 };
  s3 -> s1 [67, 65535] { R9006 += 1, R8930 += 1, R8886 += 1, R81 += 1, R82 += 1 };
  s4 -> s4 [0, 65535] { R9006 += 1, R8930 += 1, R8886 += 1, R81 += 1, R82 += 1 };
  s4 -> s8 [0, 65535] { R9006 += 1, R8930 += 1 };
  s4 -> s6 [0, 65535] { R9006 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R9006 += 1, R8930 += 1 };
  s5 -> s6 [0, 65535] { R9006 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R9006 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R9006 += 1, R8930 += 1 };
  s8 -> s6 [0, 65535] { R9006 += 1 };
  s8 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 65] { R9008 += 1, R8932 += 1, R8888 += 1, R6637 += 1, R6638 += 1 };
  s0 -> s2 [0, 65] { R9008 += 1, R8932 += 1, R8888 += 1, R6638 += 1, R6639 += 1 };
  s0 -> s3 [0, 65535] { R9008 += 1, R8932 += 1, R8887 += 1, R8888 += 1 };
  s0 -> s4 [0, 65535] { R9008 += 1, R8931 += 1, R8932 += 1 };
  s0 -> s0 [0, 65535] { R9007 += 1, R9008 += 1 };
  s0 -> s5 [66, 66] { R9008 += 1, R8932 += 1, R8888 += 1, R6637 += 1, R6638 += 1 };
  s0 -> s6 [66, 66] { R9008 += 1, R8932 += 1, R8888 += 1, R6638 += 1, R6639 += 1 };
  s0 -> s7 [66, 66] { R9008 += 1, R8932 += 1, R8888 += 1, R6637 += 1, R6638 += 1 };
  s0 -> s8 [66, 66] { R9008 += 1, R8932 += 1, R8888 += 1, R6638 += 1, R6639 += 1 };
  s0 -> s1 [67, 65535] { R9008 += 1, R8932 += 1, R8888 += 1, R6637 += 1, R6638 += 1 };
  s0 -> s2 [67, 65535] { R9008 += 1, R8932 += 1, R8888 += 1, R6638 += 1, R6639 += 1 };
  s1 -> s1 [0, 65] { R9008 += 1, R8932 += 1, R8888 += 1, R6637 += 1, R6638 += 1 };
  s1 -> s2 [0, 65] { R9008 += 1, R8932 += 1, R8888 += 1, R6638 += 1, R6639 += 1 };
  s1 -> s5 [66, 66] { R9008 += 1, R8932 += 1, R8888 += 1, R6637 += 1, R6638 += 1 };
  s1 -> s6 [66, 66] { R9008 += 1, R8932 += 1, R8888 += 1, R6638 += 1, R6639 += 1 };
  s1 -> s7 [66, 66] { R9008 += 1, R8932 += 1, R8888 += 1, R6637 += 1, R6638 += 1 };
  s1 -> s8 [66, 66] { R9008 += 1, R8932 += 1, R8888 += 1, R6638 += 1, R6639 += 1 };
  s1 -> s1 [67, 65535] { R9008 += 1, R8932 += 1, R8888 += 1, R6637 += 1, R6638 += 1 };
  s1 -> s2 [67, 65535] { R9008 += 1, R8932 += 1, R8888 += 1, R6638 += 1, R6639 += 1 };
  s2 -> s2 [0, 65] { R9008 += 1, R8932 += 1, R8888 += 1, R6638 += 1, R6639 += 1 };
  s2 -> s10 [0, 65535];
  s2 -> s11 [0, 65535] { R9008 += 1 };
  s2 -> s2 [0, 65535] { R9008 += 1, R8932 += 1 };
  s2 -> s6 [66, 66] { R9008 += 1, R8932 += 1, R8888 += 1, R6638 += 1, R6639 += 1 };
  s2 -> s8 [66, 66] { R9008 += 1, R8932 += 1, R8888 += 1, R6638 += 1, R6639 += 1 };
  s2 -> s2 [67, 65535] { R9008 += 1, R8932 += 1, R8888 += 1, R6638 += 1, R6639 += 1 };
  s3 -> s1 [0, 65] { R9008 += 1, R8932 += 1, R8888 += 1, R6637 += 1, R6638 += 1 };
  s3 -> s2 [0, 65] { R9008 += 1, R8932 += 1, R8888 += 1, R6638 += 1, R6639 += 1 };
  s3 -> s3 [0, 65535] { R9008 += 1, R8932 += 1, R8887 += 1, R8888 += 1 };
  s3 -> s5 [66, 66] { R9008 += 1, R8932 += 1, R8888 += 1, R6637 += 1, R6638 += 1 };
  s3 -> s6 [66, 66] { R9008 += 1, R8932 += 1, R8888 += 1, R6638 += 1, R6639 += 1 };
  s3 -> s7 [66, 66] { R9008 += 1, R8932 += 1, R8888 += 1, R6637 += 1, R6638 += 1 };
  s3 -> s8 [66, 66] { R9008 += 1, R8932 += 1, R8888 += 1, R6638 += 1, R6639 += 1 };
  s3 -> s1 [67, 65535] { R9008 += 1, R8932 += 1, R8888 += 1, R6637 += 1, R6638 += 1 };
  s3 -> s2 [67, 65535] { R9008 += 1, R8932 += 1, R8888 += 1, R6638 += 1, R6639 += 1 };
  s4 -> s1 [0, 65] { R9008 += 1, R8932 += 1, R8888 += 1, R6637 += 1, R6638 += 1 };
  s4 -> s2 [0, 65] { R9008 += 1, R8932 += 1, R8888 += 1, R6638 += 1, R6639 += 1 };
  s4 -> s3 [0, 65535] { R9008 += 1, R8932 += 1, R8887 += 1, R8888 += 1 };
  s4 -> s4 [0, 65535] { R9008 += 1, R8931 += 1, R8932 += 1 };
  s4 -> s5 [66, 66] { R9008 += 1, R8932 += 1, R8888 += 1, R6637 += 1, R6638 += 1 };
  s4 -> s6 [66, 66] { R9008 += 1, R8932 += 1, R8888 += 1, R6638 += 1, R6639 += 1 };
  s4 -> s7 [66, 66] { R9008 += 1, R8932 += 1, R8888 += 1, R6637 += 1, R6638 += 1 };
  s4 -> s8 [66, 66] { R9008 += 1, R8932 += 1, R8888 += 1, R6638 += 1, R6639 += 1 };
  s4 -> s1 [67, 65535] { R9008 += 1, R8932 += 1, R8888 += 1, R6637 += 1, R6638 += 1 };
  s4 -> s2 [67, 65535] { R9008 += 1, R8932 += 1, R8888 += 1, R6638 += 1, R6639 += 1 };
  s5 -> s5 [0, 65535] { R9008 += 1, R8932 += 1, R8888 += 1, R6637 += 1, R6638 += 1 };
  s5 -> s8 [0, 65535] { R9008 += 1, R8932 += 1, R8888 += 1, R6638 += 1, R6639 += 1 };
  s6 -> s6 [0, 65535] { R9008 += 1, R8932 += 1 };
  s6 -> s10 [0, 65535];
  s6 -> s11 [0, 65535] { R9008 += 1 };
  s8 -> s9 [0, 65535] { R9008 += 1, R8932 += 1 };
  s8 -> s10 [0, 65535];
  s8 -> s8 [0, 65535] { R9008 += 1, R8932 += 1, R8888 += 1, R6638 += 1, R6639 += 1 };
  s8 -> s11 [0, 65535] { R9008 += 1 };
  s9 -> s9 [0, 65535] { R9008 += 1, R8932 += 1 };
  s9 -> s10 [0, 65535];
  s9 -> s11 [0, 65535] { R9008 += 1 };
  s10 -> s10 [0, 65535];
  s11 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R9008 += 1 };
  accepting s8, s2, s9, s6, s10, s11;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 65] { R9010 += 1, R8934 += 1, R8890 += 1, R8825 += 1, R8826 += 1 };
  s0 -> s0 [0, 65535] { R9009 += 1, R9010 += 1 };
  s0 -> s2 [0, 65535] { R9010 += 1, R8933 += 1, R8934 += 1 };
  s0 -> s3 [0, 65535] { R9010 += 1, R8934 += 1, R8889 += 1, R8890 += 1 };
  s0 -> s4 [66, 66] { R9010 += 1, R8934 += 1, R8890 += 1, R8825 += 1, R8826 += 1 };
  s0 -> s5 [66, 66] { R9010 += 1, R8934 += 1, R8890 += 1, R8825 += 1, R8826 += 1 };
  s0 -> s1 [67, 65535] { R9010 += 1, R8934 += 1, R8890 += 1, R8825 += 1, R8826 += 1 };
  s1 -> s1 [0, 65] { R9010 += 1, R8934 += 1, R8890 += 1, R8825 += 1, R8826 += 1 };
  s1 -> s1 [0, 65535] { R9010 += 1, R8934 += 1 };
  s1 -> s6 [0, 65535] { R9010 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [66, 66] { R9010 += 1, R8934 += 1, R8890 += 1, R8825 += 1, R8826 += 1 };
  s1 -> s5 [66, 66] { R9010 += 1, R8934 += 1, R8890 += 1, R8825 += 1, R8826 += 1 };
  s1 -> s1 [67, 65535] { R9010 += 1, R8934 += 1, R8890 += 1, R8825 += 1, R8826 += 1 };
  s2 -> s1 [0, 65] { R9010 += 1, R8934 += 1, R8890 += 1, R8825 += 1, R8826 += 1 };
  s2 -> s2 [0, 65535] { R9010 += 1, R8933 += 1, R8934 += 1 };
  s2 -> s3 [0, 65535] { R9010 += 1, R8934 += 1, R8889 += 1, R8890 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [66, 66] { R9010 += 1, R8934 += 1, R8890 += 1, R8825 += 1, R8826 += 1 };
  s2 -> s5 [66, 66] { R9010 += 1, R8934 += 1, R8890 += 1, R8825 += 1, R8826 += 1 };
  s2 -> s1 [67, 65535] { R9010 += 1, R8934 += 1, R8890 += 1, R8825 += 1, R8826 += 1 };
  s3 -> s1 [0, 65] { R9010 += 1, R8934 += 1, R8890 += 1, R8825 += 1, R8826 += 1 };
  s3 -> s6 [0, 65535] { R9010 += 1 };
  s3 -> s3 [0, 65535] { R9010 += 1, R8934 += 1, R8889 += 1, R8890 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [66, 66] { R9010 += 1, R8934 += 1, R8890 += 1, R8825 += 1, R8826 += 1 };
  s3 -> s5 [66, 66] { R9010 += 1, R8934 += 1, R8890 += 1, R8825 += 1, R8826 += 1 };
  s3 -> s1 [67, 65535] { R9010 += 1, R8934 += 1, R8890 += 1, R8825 += 1, R8826 += 1 };
  s4 -> s4 [0, 65535] { R9010 += 1, R8934 += 1, R8890 += 1, R8825 += 1, R8826 += 1 };
  s4 -> s8 [0, 65535] { R9010 += 1, R8934 += 1 };
  s4 -> s6 [0, 65535] { R9010 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R9010 += 1, R8934 += 1 };
  s5 -> s6 [0, 65535] { R9010 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R9010 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R9010 += 1, R8934 += 1 };
  s8 -> s6 [0, 65535] { R9010 += 1 };
  s8 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 65] { R9012 += 1, R8936 += 1, R8892 += 1, R8829 += 1, R8830 += 1 };
  s0 -> s0 [0, 65535] { R9011 += 1, R9012 += 1 };
  s0 -> s2 [0, 65535] { R9012 += 1, R8935 += 1, R8936 += 1 };
  s0 -> s3 [0, 65535] { R9012 += 1, R8936 += 1, R8891 += 1, R8892 += 1 };
  s0 -> s4 [66, 66] { R9012 += 1, R8936 += 1, R8892 += 1, R8829 += 1, R8830 += 1 };
  s0 -> s5 [66, 66] { R9012 += 1, R8936 += 1, R8892 += 1, R8829 += 1, R8830 += 1 };
  s0 -> s1 [67, 65535] { R9012 += 1, R8936 += 1, R8892 += 1, R8829 += 1, R8830 += 1 };
  s1 -> s1 [0, 65] { R9012 += 1, R8936 += 1, R8892 += 1, R8829 += 1, R8830 += 1 };
  s1 -> s1 [0, 65535] { R9012 += 1, R8936 += 1 };
  s1 -> s6 [0, 65535] { R9012 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [66, 66] { R9012 += 1, R8936 += 1, R8892 += 1, R8829 += 1, R8830 += 1 };
  s1 -> s5 [66, 66] { R9012 += 1, R8936 += 1, R8892 += 1, R8829 += 1, R8830 += 1 };
  s1 -> s1 [67, 65535] { R9012 += 1, R8936 += 1, R8892 += 1, R8829 += 1, R8830 += 1 };
  s2 -> s1 [0, 65] { R9012 += 1, R8936 += 1, R8892 += 1, R8829 += 1, R8830 += 1 };
  s2 -> s2 [0, 65535] { R9012 += 1, R8935 += 1, R8936 += 1 };
  s2 -> s3 [0, 65535] { R9012 += 1, R8936 += 1, R8891 += 1, R8892 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [66, 66] { R9012 += 1, R8936 += 1, R8892 += 1, R8829 += 1, R8830 += 1 };
  s2 -> s5 [66, 66] { R9012 += 1, R8936 += 1, R8892 += 1, R8829 += 1, R8830 += 1 };
  s2 -> s1 [67, 65535] { R9012 += 1, R8936 += 1, R8892 += 1, R8829 += 1, R8830 += 1 };
  s3 -> s1 [0, 65] { R9012 += 1, R8936 += 1, R8892 += 1, R8829 += 1, R8830 += 1 };
  s3 -> s3 [0, 65535] { R9012 += 1, R8936 += 1, R8891 += 1, R8892 += 1 };
  s3 -> s6 [0, 65535] { R9012 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [66, 66] { R9012 += 1, R8936 += 1, R8892 += 1, R8829 += 1, R8830 += 1 };
  s3 -> s5 [66, 66] { R9012 += 1, R8936 += 1, R8892 += 1, R8829 += 1, R8830 += 1 };
  s3 -> s1 [67, 65535] { R9012 += 1, R8936 += 1, R8892 += 1, R8829 += 1, R8830 += 1 };
  s4 -> s8 [0, 65535] { R9012 += 1, R8936 += 1 };
  s4 -> s4 [0, 65535] { R9012 += 1, R8936 += 1, R8892 += 1, R8829 += 1, R8830 += 1 };
  s4 -> s6 [0, 65535] { R9012 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R9012 += 1, R8936 += 1 };
  s5 -> s6 [0, 65535] { R9012 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R9012 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R9012 += 1, R8936 += 1 };
  s8 -> s6 [0, 65535] { R9012 += 1 };
  s8 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 65] { R9014 += 1, R8938 += 1, R8894 += 1, R8835 += 1, R8836 += 1 };
  s0 -> s0 [0, 65535] { R9013 += 1, R9014 += 1 };
  s0 -> s2 [0, 65535] { R9014 += 1, R8938 += 1, R8893 += 1, R8894 += 1 };
  s0 -> s3 [0, 65535] { R9014 += 1, R8937 += 1, R8938 += 1 };
  s0 -> s4 [66, 66] { R9014 += 1, R8938 += 1, R8894 += 1, R8835 += 1, R8836 += 1 };
  s0 -> s5 [66, 66] { R9014 += 1, R8938 += 1, R8894 += 1, R8835 += 1, R8836 += 1 };
  s0 -> s1 [67, 65535] { R9014 += 1, R8938 += 1, R8894 += 1, R8835 += 1, R8836 += 1 };
  s1 -> s1 [0, 65] { R9014 += 1, R8938 += 1, R8894 += 1, R8835 += 1, R8836 += 1 };
  s1 -> s6 [0, 65535] { R9014 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R9014 += 1, R8938 += 1 };
  s1 -> s4 [66, 66] { R9014 += 1, R8938 += 1, R8894 += 1, R8835 += 1, R8836 += 1 };
  s1 -> s5 [66, 66] { R9014 += 1, R8938 += 1, R8894 += 1, R8835 += 1, R8836 += 1 };
  s1 -> s1 [67, 65535] { R9014 += 1, R8938 += 1, R8894 += 1, R8835 += 1, R8836 += 1 };
  s2 -> s1 [0, 65] { R9014 += 1, R8938 += 1, R8894 += 1, R8835 += 1, R8836 += 1 };
  s2 -> s2 [0, 65535] { R9014 += 1, R8938 += 1, R8893 += 1, R8894 += 1 };
  s2 -> s6 [0, 65535] { R9014 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [66, 66] { R9014 += 1, R8938 += 1, R8894 += 1, R8835 += 1, R8836 += 1 };
  s2 -> s5 [66, 66] { R9014 += 1, R8938 += 1, R8894 += 1, R8835 += 1, R8836 += 1 };
  s2 -> s1 [67, 65535] { R9014 += 1, R8938 += 1, R8894 += 1, R8835 += 1, R8836 += 1 };
  s3 -> s1 [0, 65] { R9014 += 1, R8938 += 1, R8894 += 1, R8835 += 1, R8836 += 1 };
  s3 -> s2 [0, 65535] { R9014 += 1, R8938 += 1, R8893 += 1, R8894 += 1 };
  s3 -> s3 [0, 65535] { R9014 += 1, R8937 += 1, R8938 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [66, 66] { R9014 += 1, R8938 += 1, R8894 += 1, R8835 += 1, R8836 += 1 };
  s3 -> s5 [66, 66] { R9014 += 1, R8938 += 1, R8894 += 1, R8835 += 1, R8836 += 1 };
  s3 -> s1 [67, 65535] { R9014 += 1, R8938 += 1, R8894 += 1, R8835 += 1, R8836 += 1 };
  s4 -> s4 [0, 65535] { R9014 += 1, R8938 += 1, R8894 += 1, R8835 += 1, R8836 += 1 };
  s4 -> s6 [0, 65535] { R9014 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R9014 += 1, R8938 += 1 };
  s5 -> s6 [0, 65535] { R9014 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R9014 += 1, R8938 += 1 };
  s6 -> s6 [0, 65535] { R9014 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R9014 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R9014 += 1, R8938 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
};
synchronised {  // Automata constraining P37
automaton P37_0 {
  init s0;
  s0 -> s1 [9, 9];
  accepting s1;
};
};
synchronised {  // Automata constraining P38
automaton P38_0 {
  init s0;
  s0 -> s1 [10, 10];
  accepting s1;
};
};
synchronised {  // Automata constraining P36
automaton P36_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
constraint R1 = R8854 && R2 = R8938 && R3 - R9014 = 1 && R23 - R8938 = -1 && R24 = R8938 && R25 - R8938 = -1 && R26 = R8938 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R31 = R9014 && R32 - R9014 = 1 && R33 = R9014 && R34 - R9014 = 1 && R35 = 0 && R36 = 1 && R37 = 0 && R38 = 1 && R49 + R78 + R77 + -1*R8828 + -1*R8826 - R64 = 0 && R63 + R8827 + R8825 = 0 && R8853 = 0 && R8879 = 0 && R8880 = 0 && R8887 = 0 && R8888 = 0 && R8895 = 0 && R8896 = R8938 && R8897 = 0 && R8898 = R8938 && R8899 = 0 && R8900 = R8938 && R8901 = 0 && R8902 = R8938 && R8903 = 0 && R8904 = R8938 && R8905 = 0 && R8906 = R8938 && R8907 = 0 && R8908 = R8938 && R8909 = 0 && R8910 = R8938 && R8911 = 0 && R8912 = R8938 && R8913 = 0 && R8914 = R8938 && R8915 = 0 && R8916 = R8938 && R8917 = 0 && R8918 = R8938 && R8919 = 0 && R8920 = R8938 && R8921 = 0 && R8922 = R8938 && R8923 = 0 && R8924 = R8938 && R8925 = 0 && R8926 = R8938 && R8927 = 0 && R8928 = R8938 && R8929 = 0 && R8930 = R8938 && R8931 = 0 && R8932 = R8938 && R8933 = 0 && R8934 = R8938 && R8935 = 0 && R8936 = R8938 && R8937 = 0 && R8939 = 0 && R8940 = R9014 && R8941 = 0 && R8942 = R9014 && R8943 = 0 && R8944 = R9014 && R8945 = 0 && R8946 = R9014 && R8947 = 0 && R8948 = R9014 && R8949 = 0 && R8950 = R9014 && R8951 = 0 && R8952 = R9014 && R8953 = 0 && R8954 = R9014 && R8955 = 0 && R8956 = R9014 && R8957 = 0 && R8958 = R9014 && R8959 = 0 && R8960 = R9014 && R8961 = 0 && R8962 = R9014 && R8963 = 0 && R8964 = R9014 && R8965 = 0 && R8966 = R9014 && R8967 = 0 && R8968 = R9014 && R8969 = 0 && R8970 = R9014 && R8971 = 0 && R8972 = R9014 && R8973 = 0 && R8974 = R9014 && R8975 = 0 && R8976 = R9014 && R8977 = 0 && R8978 = R9014 && R8979 = 0 && R8980 = R9014 && R8981 = 0 && R8982 = R9014 && R8983 = 0 && R8984 = R9014 && R8985 = 0 && R8986 = R9014 && R8987 = 0 && R8988 = R9014 && R8989 = 0 && R8990 = R9014 && R8991 = 0 && R8992 = R9014 && R8993 = 0 && R8994 = R9014 && R8995 = 0 && R8996 = R9014 && R8997 = 0 && R8998 = R9014 && R8999 = 0 && R9000 = R9014 && R9001 = 0 && R9002 = R9014 && R9003 = 0 && R9004 = R9014 && R9005 = 0 && R9006 = R9014 && R9007 = 0 && R9008 = R9014 && R9009 = 0 && R9010 = R9014 && R9011 = 0 && R9012 = R9014 && R9013 = 0 && R11 < 1 && R14 < 1 && R17 < 1 && R51 + R80 + R79 < 1 && -1*R8828 + -1*R8826 - R64 < 1 && -1 < R8854 && 0 < R8938 && -1 < R9014 && (R59 + R6642 + R6639 != 0 || ((R53 + R83 + R81 != 0 || R54 + R84 + R82 + -1*R8828 + -1*R8826 - R64 = 0 || R64 + R8828 + R8826 < 1) && (R53 + R83 + R81 = 0 || R64 + R8828 + R8826 < 1))) && (R59 + R6642 + R6639 != 0 || ((R57 + R6640 + R6637 != 0 || R58 + R6641 + R6638 + -1*R8828 + -1*R8826 - R64 = 0 || R64 + R8828 + R8826 < 1) && (R57 + R6640 + R6637 = 0 || R64 + R8828 + R8826 < 1))) && (R8839 != 0 || R8840 = R8854 || (R20 = 0 && R8854 = 0)) && (R8841 != 0 || R8842 = R8854 || (R20 = 0 && R8854 = 0)) && (R8843 != 0 || R8844 = R8854 || (R20 = 0 && R8854 = 0)) && (R8845 != 0 || R8846 = R8854 || (R20 = 0 && R8854 = 0)) && (R8847 != 0 || R8848 = R8854 || (R20 = 0 && R8854 = 0)) && (R8849 != 0 || R8850 = R8854 || (R20 = 0 && R8854 = 0)) && (R8851 != 0 || R8852 = R8854 || (R20 = 0 && R8854 = 0)) && (R8855 != 0 || R8854 = R8856 || (R20 = 0 && R8854 = 0)) && (R8857 != 0 || R8854 = R8858 || (R20 = 0 && R8854 = 0)) && (R21 = 0 || (R8877 = 0 && R8878 = 0)) && (R21 = 0 || (R8881 = 0 && R8882 = 0)) && (R21 = 0 || (R8883 = 0 && R8884 = 0)) && (R21 = 0 || (R8885 = 0 && R8886 = 0)) && (R21 = 0 || (R8889 = 0 && R8890 = 0)) && (R21 = 0 || (R8891 = 0 && R8892 = 0)) && (R21 = 0 || (R8893 = 0 && R8894 = 0)) && (R22 = 0 || (R8859 = 0 && R8860 = 0)) && (R22 = 0 || (R8861 = 0 && R8862 = 0)) && (R22 = 0 || (R8863 = 0 && R8864 = 0)) && (R22 = 0 || (R8865 = 0 && R8866 = 0)) && (R22 = 0 || (R8867 = 0 && R8868 = 0)) && (R22 = 0 || (R8869 = 0 && R8870 = 0)) && (R22 = 0 || (R8871 = 0 && R8872 = 0)) && (R22 = 0 || (R8873 = 0 && R8874 = 0)) && (R22 = 0 || (R8875 = 0 && R8876 = 0)) && (R59 + R6642 + R6639 = 0 || (R53 + R83 + R81 = 0 && R54 + R84 + R82 + -1*R8828 + -1*R8826 - R64 = 0)) && (R59 + R6642 + R6639 = 0 || (R57 + R6640 + R6637 = 0 && R58 + R6641 + R6638 + -1*R8828 + -1*R8826 - R64 = 0)) && (R69 + R8834 + R8831 = 0 || (R67 + R8832 + R8829 = 0 && R68 + R8833 + R8830 = 0)) && (R69 + R8834 + R8831 = 0 || (R73 + R8837 + R8835 = 0 && R74 + R8838 + R8836 = 0)) && (R8839 = 0 || (R20 = 0 && R8854 = 0)) && (R8841 = 0 || (R20 = 0 && R8854 = 0)) && (R8843 = 0 || (R20 = 0 && R8854 = 0)) && (R8845 = 0 || (R20 = 0 && R8854 = 0)) && (R8847 = 0 || (R20 = 0 && R8854 = 0)) && (R8849 = 0 || (R20 = 0 && R8854 = 0)) && (R8851 = 0 || (R20 = 0 && R8854 = 0)) && (R8855 = 0 || (R20 = 0 && R8854 = 0)) && (R8857 = 0 || (R20 = 0 && R8854 = 0));
// End of Parikh automata intersection problem
