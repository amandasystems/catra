// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R14, R1684, R1685, R17, R19, R2, R20, R2092, R2093, R2094, R2095, R21, R22, R2230, R2231, R2232, R2233, R2234, R2235, R2236, R2237, R2238, R2239, R2240, R2241, R2242, R2243, R2244, R2245, R2246, R2247, R2248, R2249, R2250, R2251, R2252, R2253, R2254, R2255, R2256, R2257, R2258, R2259, R2260, R2261, R2262, R2263, R2264, R2265, R2266, R2267, R2268, R2269, R2270, R2271, R2272, R2273, R2274, R2275, R2276, R2277, R2278, R2279, R2280, R2281, R2282, R2283, R2284, R2285, R2286, R2287, R2288, R2289, R2290, R2291, R2292, R2293, R2294, R2295, R2296, R2297, R2298, R2299, R23, R2300, R2301, R2302, R2303, R2304, R2305, R2306, R2307, R2308, R2309, R2310, R2311, R2312, R2313, R2314, R2315, R2316, R2317, R2318, R2319, R2320, R2321, R2322, R2323, R2324, R2325, R2326, R2327, R2328, R2329, R2330, R2331, R2332, R2333, R2334, R2335, R2336, R2337, R2338, R2339, R2340, R2341, R2342, R2343, R2344, R2345, R2346, R2347, R2348, R2349, R2350, R2351, R2352, R2353, R2354, R2355, R2356, R2357, R2358, R2359, R2360, R2361, R2362, R2363, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R33, R34, R35, R36, R37, R4, R42, R44, R46, R47, R5, R50, R51, R52, R56, R57, R6, R7;
synchronised {  // Automata constraining P9
automaton P9_0 {
  init s0;
  s0 -> s1 [98, 98];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R17 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R30 += 1, R31 += 1 };
  s0 -> s1 [13, 13] { R31 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s0 [0, 65535] { R32 += 1, R33 += 1 };
  s0 -> s1 [0, 65535] { R33 += 1, R6 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R33 += 1, R6 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R35 += 1 };
  s0 -> s0 [0, 65535] { R34 += 1, R35 += 1 };
  s0 -> s2 [9, 13] { R35 += 1 };
  s0 -> s1 [14, 31] { R35 += 1 };
  s0 -> s2 [32, 32] { R35 += 1 };
  s0 -> s1 [33, 65535] { R35 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R35 += 1 };
  s2 -> s1 [0, 65535] { R35 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 65535] { R37 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R36 += 1, R37 += 1 };
  s1 -> s1 [0, 65535] { R37 += 1, R7 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R2307 += 1 };
  s0 -> s0 [0, 65535] { R2306 += 1, R2307 += 1 };
  s0 -> s2 [66, 66] { R2307 += 1 };
  s0 -> s1 [67, 65535] { R2307 += 1 };
  s1 -> s1 [0, 64] { R2307 += 1 };
  s1 -> s2 [66, 66] { R2307 += 1 };
  s1 -> s1 [67, 65535] { R2307 += 1 };
  s2 -> s2 [0, 64] { R2307 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [66, 65535] { R2307 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R2309 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R2308 += 1, R2309 += 1 };
  s1 -> s1 [0, 65535] { R2309 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 65] { R2311 += 1 };
  s0 -> s2 [0, 65535] { R2311 += 1, R14 += 1 };
  s0 -> s0 [0, 65535] { R2310 += 1, R2311 += 1 };
  s0 -> s3 [66, 66] { R2311 += 1 };
  s0 -> s1 [67, 65535] { R2311 += 1 };
  s1 -> s1 [0, 65] { R2311 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [66, 66] { R2311 += 1 };
  s1 -> s1 [67, 65535] { R2311 += 1 };
  s2 -> s1 [0, 65] { R2311 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2311 += 1, R14 += 1 };
  s2 -> s3 [66, 66] { R2311 += 1 };
  s2 -> s1 [67, 65535] { R2311 += 1 };
  s3 -> s3 [0, 65535] { R2311 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R2313 += 1, R23 += 1 };
  s0 -> s2 [0, 65535] { R2313 += 1, R22 += 1, R23 += 1 };
  s0 -> s0 [0, 65535] { R2312 += 1, R2313 += 1 };
  s0 -> s3 [9, 13] { R2313 += 1, R23 += 1 };
  s0 -> s1 [14, 31] { R2313 += 1, R23 += 1 };
  s0 -> s3 [32, 32] { R2313 += 1, R23 += 1 };
  s0 -> s1 [33, 65535] { R2313 += 1, R23 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R2313 += 1 };
  s1 -> s1 [0, 65535] { R2313 += 1, R23 += 1 };
  s2 -> s1 [0, 8] { R2313 += 1, R23 += 1 };
  s2 -> s2 [0, 65535] { R2313 += 1, R22 += 1, R23 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [9, 13] { R2313 += 1, R23 += 1 };
  s2 -> s1 [14, 31] { R2313 += 1, R23 += 1 };
  s2 -> s3 [32, 32] { R2313 += 1, R23 += 1 };
  s2 -> s1 [33, 65535] { R2313 += 1, R23 += 1 };
  s3 -> s1 [0, 65535] { R2313 += 1, R23 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2313 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 65535] { R2315 += 1, R24 += 1, R25 += 1 };
  s0 -> s0 [0, 65535] { R2314 += 1, R2315 += 1 };
  s0 -> s2 [0, 65535] { R2315 += 1, R25 += 1, R4 += 1 };
  s1 -> s1 [0, 65535] { R2315 += 1, R24 += 1, R25 += 1 };
  s1 -> s2 [0, 65535] { R2315 += 1, R25 += 1, R4 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2315 += 1, R25 += 1, R4 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R2315 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2315 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R2317 += 1, R27 += 1 };
  s0 -> s2 [0, 65535] { R2317 += 1, R26 += 1, R27 += 1 };
  s0 -> s0 [0, 65535] { R2316 += 1, R2317 += 1 };
  s0 -> s3 [9, 13] { R2317 += 1, R27 += 1 };
  s0 -> s1 [14, 31] { R2317 += 1, R27 += 1 };
  s0 -> s3 [32, 32] { R2317 += 1, R27 += 1 };
  s0 -> s1 [33, 65535] { R2317 += 1, R27 += 1 };
  s1 -> s1 [0, 65535] { R2317 += 1, R27 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R2317 += 1 };
  s2 -> s1 [0, 8] { R2317 += 1, R27 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2317 += 1, R26 += 1, R27 += 1 };
  s2 -> s3 [9, 13] { R2317 += 1, R27 += 1 };
  s2 -> s1 [14, 31] { R2317 += 1, R27 += 1 };
  s2 -> s3 [32, 32] { R2317 += 1, R27 += 1 };
  s2 -> s1 [33, 65535] { R2317 += 1, R27 += 1 };
  s3 -> s1 [0, 65535] { R2317 += 1, R27 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2317 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 65535] { R2319 += 1, R29 += 1, R5 += 1 };
  s0 -> s2 [0, 65535] { R2319 += 1, R28 += 1, R29 += 1 };
  s0 -> s0 [0, 65535] { R2318 += 1, R2319 += 1 };
  s1 -> s1 [0, 65535] { R2319 += 1, R29 += 1, R5 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R2319 += 1 };
  s2 -> s1 [0, 65535] { R2319 += 1, R29 += 1, R5 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2319 += 1, R28 += 1, R29 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2319 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 65535] { R2321 += 1, R2251 += 1, R21 += 1 };
  s0 -> s2 [0, 65535] { R2321 += 1, R2250 += 1, R2251 += 1 };
  s0 -> s0 [0, 65535] { R2320 += 1, R2321 += 1 };
  s1 -> s1 [0, 65535] { R2321 += 1, R2251 += 1, R21 += 1 };
  s1 -> s4 [0, 65535] { R2321 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R2321 += 1, R2251 += 1, R21 += 1 };
  s2 -> s2 [0, 65535] { R2321 += 1, R2250 += 1, R2251 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2321 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 65] { R2323 += 1, R2253 += 1 };
  s0 -> s2 [0, 65535] { R2323 += 1, R2252 += 1, R2253 += 1 };
  s0 -> s0 [0, 65535] { R2322 += 1, R2323 += 1 };
  s0 -> s3 [66, 66] { R2323 += 1, R2253 += 1 };
  s0 -> s4 [66, 66] { R2323 += 1, R2253 += 1 };
  s0 -> s1 [71, 65535] { R2323 += 1, R2253 += 1 };
  s1 -> s1 [0, 65] { R2323 += 1, R2253 += 1 };
  s1 -> s1 [0, 65535] { R2323 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R2323 += 1, R2253 += 1 };
  s1 -> s4 [66, 66] { R2323 += 1, R2253 += 1 };
  s1 -> s1 [71, 65535] { R2323 += 1, R2253 += 1 };
  s2 -> s1 [0, 65] { R2323 += 1, R2253 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2323 += 1, R2252 += 1, R2253 += 1 };
  s2 -> s3 [66, 66] { R2323 += 1, R2253 += 1 };
  s2 -> s4 [66, 66] { R2323 += 1, R2253 += 1 };
  s2 -> s1 [71, 65535] { R2323 += 1, R2253 += 1 };
  s3 -> s3 [0, 65535] { R2323 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 66] { R2323 += 1, R2253 += 1 };
  s4 -> s4 [0, 65535] { R2323 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [71, 65535] { R2323 += 1, R2253 += 1 };
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 65] { R2325 += 1, R2255 += 1, R42 += 1 };
  s0 -> s2 [0, 65535] { R2325 += 1, R2254 += 1, R2255 += 1 };
  s0 -> s0 [0, 65535] { R2324 += 1, R2325 += 1 };
  s0 -> s3 [66, 66] { R2325 += 1, R2255 += 1, R42 += 1 };
  s0 -> s4 [66, 66] { R2325 += 1, R2255 += 1, R42 += 1 };
  s0 -> s1 [67, 65535] { R2325 += 1, R2255 += 1, R42 += 1 };
  s1 -> s1 [0, 65] { R2325 += 1, R2255 += 1, R42 += 1 };
  s1 -> s1 [0, 65535] { R2325 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [66, 66] { R2325 += 1, R2255 += 1, R42 += 1 };
  s1 -> s4 [66, 66] { R2325 += 1, R2255 += 1, R42 += 1 };
  s1 -> s1 [67, 65535] { R2325 += 1, R2255 += 1, R42 += 1 };
  s2 -> s1 [0, 65] { R2325 += 1, R2255 += 1, R42 += 1 };
  s2 -> s2 [0, 65535] { R2325 += 1, R2254 += 1, R2255 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [66, 66] { R2325 += 1, R2255 += 1, R42 += 1 };
  s2 -> s4 [66, 66] { R2325 += 1, R2255 += 1, R42 += 1 };
  s2 -> s1 [67, 65535] { R2325 += 1, R2255 += 1, R42 += 1 };
  s3 -> s3 [0, 65535] { R2325 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R2325 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2325 += 1, R2255 += 1, R42 += 1 };
  s5 -> s5 [0, 65535] { R2325 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 65] { R2327 += 1, R2257 += 1, R44 += 1 };
  s0 -> s2 [0, 65535] { R2327 += 1, R2256 += 1, R2257 += 1 };
  s0 -> s0 [0, 65535] { R2326 += 1, R2327 += 1 };
  s0 -> s3 [66, 66] { R2327 += 1, R2257 += 1, R44 += 1 };
  s0 -> s4 [66, 66] { R2327 += 1, R2257 += 1, R44 += 1 };
  s0 -> s1 [67, 65535] { R2327 += 1, R2257 += 1, R44 += 1 };
  s1 -> s1 [0, 65] { R2327 += 1, R2257 += 1, R44 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2327 += 1 };
  s1 -> s3 [66, 66] { R2327 += 1, R2257 += 1, R44 += 1 };
  s1 -> s4 [66, 66] { R2327 += 1, R2257 += 1, R44 += 1 };
  s1 -> s1 [67, 65535] { R2327 += 1, R2257 += 1, R44 += 1 };
  s2 -> s1 [0, 65] { R2327 += 1, R2257 += 1, R44 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2327 += 1, R2256 += 1, R2257 += 1 };
  s2 -> s3 [66, 66] { R2327 += 1, R2257 += 1, R44 += 1 };
  s2 -> s4 [66, 66] { R2327 += 1, R2257 += 1, R44 += 1 };
  s2 -> s1 [67, 65535] { R2327 += 1, R2257 += 1, R44 += 1 };
  s3 -> s3 [0, 65535] { R2327 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R2327 += 1 };
  s4 -> s4 [0, 65535] { R2327 += 1, R2257 += 1, R44 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2327 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65] { R2329 += 1, R2259 += 1, R46 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R2328 += 1, R2329 += 1 };
  s0 -> s2 [0, 65535] { R2329 += 1, R2258 += 1, R2259 += 1 };
  s0 -> s3 [66, 66] { R2329 += 1, R2259 += 1, R46 += 1, R47 += 1 };
  s0 -> s4 [66, 66] { R2329 += 1, R2259 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [67, 65535] { R2329 += 1, R2259 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65] { R2329 += 1, R2259 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65535] { R2329 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [66, 66] { R2329 += 1, R2259 += 1, R46 += 1, R47 += 1 };
  s1 -> s4 [66, 66] { R2329 += 1, R2259 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [67, 65535] { R2329 += 1, R2259 += 1, R46 += 1, R47 += 1 };
  s2 -> s1 [0, 65] { R2329 += 1, R2259 += 1, R46 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R2329 += 1, R2258 += 1, R2259 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [66, 66] { R2329 += 1, R2259 += 1, R46 += 1, R47 += 1 };
  s2 -> s4 [66, 66] { R2329 += 1, R2259 += 1, R46 += 1, R47 += 1 };
  s2 -> s1 [67, 65535] { R2329 += 1, R2259 += 1, R46 += 1, R47 += 1 };
  s3 -> s3 [0, 65535] { R2329 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R2329 += 1 };
  s4 -> s4 [0, 65535] { R2329 += 1, R2259 += 1, R46 += 1, R47 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R2329 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 65] { R2331 += 1, R2261 += 1, R50 += 1, R51 += 1 };
  s0 -> s2 [0, 65535] { R2331 += 1, R2260 += 1, R2261 += 1 };
  s0 -> s0 [0, 65535] { R2330 += 1, R2331 += 1 };
  s0 -> s3 [66, 66] { R2331 += 1, R2261 += 1, R50 += 1, R51 += 1 };
  s0 -> s4 [66, 66] { R2331 += 1, R2261 += 1, R50 += 1, R51 += 1 };
  s0 -> s1 [67, 65535] { R2331 += 1, R2261 += 1, R50 += 1, R51 += 1 };
  s1 -> s1 [0, 65] { R2331 += 1, R2261 += 1, R50 += 1, R51 += 1 };
  s1 -> s1 [0, 65535] { R2331 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R2331 += 1, R2261 += 1, R50 += 1, R51 += 1 };
  s1 -> s4 [66, 66] { R2331 += 1, R2261 += 1, R50 += 1, R51 += 1 };
  s1 -> s1 [67, 65535] { R2331 += 1, R2261 += 1, R50 += 1, R51 += 1 };
  s2 -> s1 [0, 65] { R2331 += 1, R2261 += 1, R50 += 1, R51 += 1 };
  s2 -> s2 [0, 65535] { R2331 += 1, R2260 += 1, R2261 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R2331 += 1, R2261 += 1, R50 += 1, R51 += 1 };
  s2 -> s4 [66, 66] { R2331 += 1, R2261 += 1, R50 += 1, R51 += 1 };
  s2 -> s1 [67, 65535] { R2331 += 1, R2261 += 1, R50 += 1, R51 += 1 };
  s3 -> s3 [0, 65535] { R2331 += 1, R2261 += 1, R50 += 1, R51 += 1 };
  s3 -> s6 [0, 65535] { R2331 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2331 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2331 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 65] { R2333 += 1, R2275 += 1 };
  s0 -> s0 [0, 65535] { R2332 += 1, R2333 += 1 };
  s0 -> s2 [0, 65535] { R2333 += 1, R2274 += 1, R2275 += 1 };
  s0 -> s3 [66, 66] { R2333 += 1, R2275 += 1 };
  s0 -> s1 [67, 65535] { R2333 += 1, R2275 += 1 };
  s1 -> s1 [0, 65] { R2333 += 1, R2275 += 1 };
  s1 -> s3 [66, 66] { R2333 += 1, R2275 += 1 };
  s1 -> s1 [67, 65535] { R2333 += 1, R2275 += 1 };
  s2 -> s1 [0, 65] { R2333 += 1, R2275 += 1 };
  s2 -> s2 [0, 65535] { R2333 += 1, R2274 += 1, R2275 += 1 };
  s2 -> s3 [66, 66] { R2333 += 1, R2275 += 1 };
  s2 -> s1 [67, 65535] { R2333 += 1, R2275 += 1 };
  s3 -> s4 [0, 65535] { R2333 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2333 += 1, R2275 += 1 };
  s4 -> s4 [0, 65535] { R2333 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5;
};
automaton value2_21 {
  init s0;
  s0 -> s0 [0, 65535] { R2334 += 1, R2335 += 1 };
  s0 -> s1 [0, 65535] { R2335 += 1, R2277 += 1, R1 += 1 };
  s0 -> s2 [0, 65535] { R2335 += 1, R2276 += 1, R2277 += 1 };
  s1 -> s4 [0, 65535] { R2335 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2335 += 1, R2277 += 1, R1 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R2335 += 1, R2277 += 1, R1 += 1 };
  s2 -> s2 [0, 65535] { R2335 += 1, R2276 += 1, R2277 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2335 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 65] { R2337 += 1, R2279 += 1 };
  s0 -> s2 [0, 65535] { R2337 += 1, R2279 += 1, R11 += 1 };
  s0 -> s3 [0, 65535] { R2337 += 1, R2278 += 1, R2279 += 1 };
  s0 -> s0 [0, 65535] { R2336 += 1, R2337 += 1 };
  s0 -> s4 [66, 66] { R2337 += 1, R2279 += 1 };
  s0 -> s1 [67, 65535] { R2337 += 1, R2279 += 1 };
  s1 -> s1 [0, 65] { R2337 += 1, R2279 += 1 };
  s1 -> s1 [0, 65535] { R2337 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s4 [66, 66] { R2337 += 1, R2279 += 1 };
  s1 -> s1 [67, 65535] { R2337 += 1, R2279 += 1 };
  s2 -> s1 [0, 65] { R2337 += 1, R2279 += 1 };
  s2 -> s2 [0, 65535] { R2337 += 1, R2279 += 1, R11 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R2337 += 1 };
  s2 -> s4 [66, 66] { R2337 += 1, R2279 += 1 };
  s2 -> s1 [67, 65535] { R2337 += 1, R2279 += 1 };
  s3 -> s1 [0, 65] { R2337 += 1, R2279 += 1 };
  s3 -> s2 [0, 65535] { R2337 += 1, R2279 += 1, R11 += 1 };
  s3 -> s3 [0, 65535] { R2337 += 1, R2278 += 1, R2279 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s4 [66, 66] { R2337 += 1, R2279 += 1 };
  s3 -> s1 [67, 65535] { R2337 += 1, R2279 += 1 };
  s4 -> s4 [0, 65535] { R2337 += 1, R2279 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2337 += 1 };
  accepting s3, s5, s2, s6, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65] { R2339 += 1, R2281 += 1, R2237 += 1 };
  s0 -> s2 [0, 65535] { R2339 += 1, R2281 += 1, R2236 += 1, R2237 += 1 };
  s0 -> s3 [0, 65535] { R2339 += 1, R2280 += 1, R2281 += 1 };
  s0 -> s0 [0, 65535] { R2338 += 1, R2339 += 1 };
  s0 -> s1 [67, 65535] { R2339 += 1, R2281 += 1, R2237 += 1 };
  s1 -> s1 [0, 65] { R2339 += 1, R2281 += 1, R2237 += 1 };
  s1 -> s1 [0, 65535] { R2339 += 1, R2281 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R2339 += 1 };
  s1 -> s1 [67, 65535] { R2339 += 1, R2281 += 1, R2237 += 1 };
  s2 -> s1 [0, 65] { R2339 += 1, R2281 += 1, R2237 += 1 };
  s2 -> s2 [0, 65535] { R2339 += 1, R2281 += 1, R2236 += 1, R2237 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R2339 += 1 };
  s2 -> s1 [67, 65535] { R2339 += 1, R2281 += 1, R2237 += 1 };
  s3 -> s1 [0, 65] { R2339 += 1, R2281 += 1, R2237 += 1 };
  s3 -> s2 [0, 65535] { R2339 += 1, R2281 += 1, R2236 += 1, R2237 += 1 };
  s3 -> s3 [0, 65535] { R2339 += 1, R2280 += 1, R2281 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [67, 65535] { R2339 += 1, R2281 += 1, R2237 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2339 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 65535] { R2341 += 1, R2283 += 1, R2239 += 1, R19 += 1 };
  s0 -> s2 [0, 65535] { R2341 += 1, R2282 += 1, R2283 += 1 };
  s0 -> s0 [0, 65535] { R2340 += 1, R2341 += 1 };
  s0 -> s3 [0, 65535] { R2341 += 1, R2283 += 1, R2238 += 1, R2239 += 1 };
  s1 -> s1 [0, 65535] { R2341 += 1, R2283 += 1, R2239 += 1, R19 += 1 };
  s1 -> s4 [0, 65535] { R2341 += 1 };
  s1 -> s6 [0, 65535] { R2341 += 1, R2283 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R2341 += 1, R2283 += 1, R2239 += 1, R19 += 1 };
  s2 -> s2 [0, 65535] { R2341 += 1, R2282 += 1, R2283 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R2341 += 1, R2283 += 1, R2238 += 1, R2239 += 1 };
  s3 -> s1 [0, 65535] { R2341 += 1, R2283 += 1, R2239 += 1, R19 += 1 };
  s3 -> s4 [0, 65535] { R2341 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2341 += 1, R2283 += 1, R2238 += 1, R2239 += 1 };
  s4 -> s4 [0, 65535] { R2341 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R2341 += 1 };
  s6 -> s6 [0, 65535] { R2341 += 1, R2283 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 66] { R2343 += 1, R2285 += 1, R2241 += 1 };
  s0 -> s0 [0, 65535] { R2342 += 1, R2343 += 1 };
  s0 -> s2 [0, 65535] { R2343 += 1, R2285 += 1, R2240 += 1, R2241 += 1 };
  s0 -> s3 [0, 65535] { R2343 += 1, R2284 += 1, R2285 += 1 };
  s0 -> s1 [70, 65535] { R2343 += 1, R2285 += 1, R2241 += 1 };
  s1 -> s1 [0, 66] { R2343 += 1, R2285 += 1, R2241 += 1 };
  s1 -> s1 [0, 65535] { R2343 += 1, R2285 += 1 };
  s1 -> s5 [0, 65535] { R2343 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [70, 65535] { R2343 += 1, R2285 += 1, R2241 += 1 };
  s2 -> s1 [0, 66] { R2343 += 1, R2285 += 1, R2241 += 1 };
  s2 -> s2 [0, 65535] { R2343 += 1, R2285 += 1, R2240 += 1, R2241 += 1 };
  s2 -> s5 [0, 65535] { R2343 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [70, 65535] { R2343 += 1, R2285 += 1, R2241 += 1 };
  s3 -> s1 [0, 66] { R2343 += 1, R2285 += 1, R2241 += 1 };
  s3 -> s2 [0, 65535] { R2343 += 1, R2285 += 1, R2240 += 1, R2241 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2343 += 1, R2284 += 1, R2285 += 1 };
  s3 -> s1 [70, 65535] { R2343 += 1, R2285 += 1, R2241 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2343 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R2345 += 1, R2287 += 1, R2242 += 1, R2243 += 1 };
  s0 -> s2 [0, 65535] { R2345 += 1, R2286 += 1, R2287 += 1 };
  s0 -> s0 [0, 65535] { R2344 += 1, R2345 += 1 };
  s0 -> s3 [0, 65535] { R2345 += 1, R2287 += 1, R2243 += 1, R57 += 1 };
  s1 -> s1 [0, 65535] { R2345 += 1, R2287 += 1, R2242 += 1, R2243 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R2345 += 1 };
  s1 -> s3 [0, 65535] { R2345 += 1, R2287 += 1, R2243 += 1, R57 += 1 };
  s2 -> s1 [0, 65535] { R2345 += 1, R2287 += 1, R2242 += 1, R2243 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2345 += 1, R2286 += 1, R2287 += 1 };
  s2 -> s3 [0, 65535] { R2345 += 1, R2287 += 1, R2243 += 1, R57 += 1 };
  s3 -> s4 [0, 65535] { R2345 += 1, R2287 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R2345 += 1 };
  s3 -> s3 [0, 65535] { R2345 += 1, R2287 += 1, R2243 += 1, R57 += 1 };
  s4 -> s4 [0, 65535] { R2345 += 1, R2287 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R2345 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2345 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 69] { R2347 += 1, R2289 += 1, R2245 += 1 };
  s0 -> s2 [0, 65535] { R2347 += 1, R2289 += 1, R2244 += 1, R2245 += 1 };
  s0 -> s3 [0, 65535] { R2347 += 1, R2288 += 1, R2289 += 1 };
  s0 -> s0 [0, 65535] { R2346 += 1, R2347 += 1 };
  s0 -> s1 [71, 65535] { R2347 += 1, R2289 += 1, R2245 += 1 };
  s1 -> s1 [0, 69] { R2347 += 1, R2289 += 1, R2245 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R2347 += 1 };
  s1 -> s1 [0, 65535] { R2347 += 1, R2289 += 1 };
  s1 -> s1 [71, 65535] { R2347 += 1, R2289 += 1, R2245 += 1 };
  s2 -> s1 [0, 69] { R2347 += 1, R2289 += 1, R2245 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2347 += 1, R2289 += 1, R2244 += 1, R2245 += 1 };
  s2 -> s5 [0, 65535] { R2347 += 1 };
  s2 -> s1 [71, 65535] { R2347 += 1, R2289 += 1, R2245 += 1 };
  s3 -> s1 [0, 69] { R2347 += 1, R2289 += 1, R2245 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R2347 += 1, R2289 += 1, R2244 += 1, R2245 += 1 };
  s3 -> s3 [0, 65535] { R2347 += 1, R2288 += 1, R2289 += 1 };
  s3 -> s1 [71, 65535] { R2347 += 1, R2289 += 1, R2245 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2347 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R2349 += 1, R2290 += 1, R2291 += 1 };
  s0 -> s0 [0, 65535] { R2348 += 1, R2349 += 1 };
  s0 -> s2 [0, 65535] { R2349 += 1, R2291 += 1, R2246 += 1, R2247 += 1 };
  s0 -> s3 [0, 65535] { R2349 += 1, R2291 += 1, R2247 += 1 };
  s1 -> s1 [0, 65535] { R2349 += 1, R2290 += 1, R2291 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s2 [0, 65535] { R2349 += 1, R2291 += 1, R2246 += 1, R2247 += 1 };
  s1 -> s3 [0, 65535] { R2349 += 1, R2291 += 1, R2247 += 1 };
  s2 -> s5 [0, 65535] { R2349 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R2349 += 1, R2291 += 1, R2246 += 1, R2247 += 1 };
  s2 -> s3 [0, 65535] { R2349 += 1, R2291 += 1, R2247 += 1 };
  s3 -> s4 [0, 65535] { R2349 += 1, R2291 += 1 };
  s3 -> s5 [0, 65535] { R2349 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R2349 += 1, R2291 += 1, R2247 += 1 };
  s4 -> s4 [0, 65535] { R2349 += 1, R2291 += 1 };
  s4 -> s5 [0, 65535] { R2349 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R2349 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s0 [0, 65535] { R2350 += 1, R2351 += 1 };
  s0 -> s1 [0, 65535] { R2351 += 1, R2293 += 1, R2249 += 1 };
  s0 -> s2 [0, 65535] { R2351 += 1, R2292 += 1, R2293 += 1 };
  s0 -> s3 [0, 65535] { R2351 += 1, R2293 += 1, R2248 += 1, R2249 += 1 };
  s0 -> s4 [0, 65535] { R2351 += 1, R2293 += 1, R2249 += 1, R2234 += 1, R2235 += 1 };
  s1 -> s5 [0, 65535] { R2351 += 1 };
  s1 -> s1 [0, 65535] { R2351 += 1, R2293 += 1, R2249 += 1 };
  s1 -> s6 [0, 65535] { R2351 += 1, R2293 += 1 };
  s1 -> s7 [0, 65535];
  s2 -> s1 [0, 65535] { R2351 += 1, R2293 += 1, R2249 += 1 };
  s2 -> s2 [0, 65535] { R2351 += 1, R2292 += 1, R2293 += 1 };
  s2 -> s3 [0, 65535] { R2351 += 1, R2293 += 1, R2248 += 1, R2249 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [0, 65535] { R2351 += 1, R2293 += 1, R2249 += 1, R2234 += 1, R2235 += 1 };
  s3 -> s5 [0, 65535] { R2351 += 1 };
  s3 -> s1 [0, 65535] { R2351 += 1, R2293 += 1, R2249 += 1 };
  s3 -> s3 [0, 65535] { R2351 += 1, R2293 += 1, R2248 += 1, R2249 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [0, 65535] { R2351 += 1, R2293 += 1, R2249 += 1, R2234 += 1, R2235 += 1 };
  s4 -> s5 [0, 65535] { R2351 += 1 };
  s4 -> s1 [0, 65535] { R2351 += 1, R2293 += 1, R2249 += 1 };
  s4 -> s6 [0, 65535] { R2351 += 1, R2293 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R2351 += 1, R2293 += 1, R2249 += 1, R2234 += 1, R2235 += 1 };
  s5 -> s5 [0, 65535] { R2351 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s5 [0, 65535] { R2351 += 1 };
  s6 -> s6 [0, 65535] { R2351 += 1, R2293 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R2353 += 1, R2294 += 1, R2295 += 1 };
  s0 -> s2 [0, 65535] { R2353 += 1, R2295 += 1, R2263 += 1, R20 += 1 };
  s0 -> s3 [0, 65535] { R2353 += 1, R2295 += 1, R2262 += 1, R2263 += 1 };
  s0 -> s0 [0, 65535] { R2352 += 1, R2353 += 1 };
  s1 -> s1 [0, 65535] { R2353 += 1, R2294 += 1, R2295 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R2353 += 1, R2295 += 1, R2263 += 1, R20 += 1 };
  s1 -> s3 [0, 65535] { R2353 += 1, R2295 += 1, R2262 += 1, R2263 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2353 += 1, R2295 += 1, R2263 += 1, R20 += 1 };
  s2 -> s6 [0, 65535] { R2353 += 1, R2295 += 1 };
  s2 -> s5 [0, 65535] { R2353 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R2353 += 1, R2295 += 1, R2263 += 1, R20 += 1 };
  s3 -> s3 [0, 65535] { R2353 += 1, R2295 += 1, R2262 += 1, R2263 += 1 };
  s3 -> s5 [0, 65535] { R2353 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2353 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R2353 += 1, R2295 += 1 };
  s6 -> s5 [0, 65535] { R2353 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 65] { R2355 += 1, R2297 += 1, R2265 += 1 };
  s0 -> s2 [0, 65535] { R2355 += 1, R2296 += 1, R2297 += 1 };
  s0 -> s0 [0, 65535] { R2354 += 1, R2355 += 1 };
  s0 -> s3 [0, 65535] { R2355 += 1, R2297 += 1, R2264 += 1, R2265 += 1 };
  s0 -> s4 [66, 66] { R2355 += 1, R2297 += 1, R2265 += 1 };
  s0 -> s5 [66, 66] { R2355 += 1, R2297 += 1, R2265 += 1 };
  s0 -> s6 [70, 70] { R2355 += 1, R2297 += 1, R2265 += 1 };
  s0 -> s1 [71, 65535] { R2355 += 1, R2297 += 1, R2265 += 1 };
  s1 -> s1 [0, 65] { R2355 += 1, R2297 += 1, R2265 += 1 };
  s1 -> s4 [66, 66] { R2355 += 1, R2297 += 1, R2265 += 1 };
  s1 -> s5 [66, 66] { R2355 += 1, R2297 += 1, R2265 += 1 };
  s1 -> s6 [70, 70] { R2355 += 1, R2297 += 1, R2265 += 1 };
  s1 -> s1 [71, 65535] { R2355 += 1, R2297 += 1, R2265 += 1 };
  s2 -> s1 [0, 65] { R2355 += 1, R2297 += 1, R2265 += 1 };
  s2 -> s2 [0, 65535] { R2355 += 1, R2296 += 1, R2297 += 1 };
  s2 -> s3 [0, 65535] { R2355 += 1, R2297 += 1, R2264 += 1, R2265 += 1 };
  s2 -> s4 [66, 66] { R2355 += 1, R2297 += 1, R2265 += 1 };
  s2 -> s5 [66, 66] { R2355 += 1, R2297 += 1, R2265 += 1 };
  s2 -> s6 [70, 70] { R2355 += 1, R2297 += 1, R2265 += 1 };
  s2 -> s1 [71, 65535] { R2355 += 1, R2297 += 1, R2265 += 1 };
  s3 -> s1 [0, 65] { R2355 += 1, R2297 += 1, R2265 += 1 };
  s3 -> s3 [0, 65535] { R2355 += 1, R2297 += 1, R2264 += 1, R2265 += 1 };
  s3 -> s4 [66, 66] { R2355 += 1, R2297 += 1, R2265 += 1 };
  s3 -> s5 [66, 66] { R2355 += 1, R2297 += 1, R2265 += 1 };
  s3 -> s6 [70, 70] { R2355 += 1, R2297 += 1, R2265 += 1 };
  s3 -> s1 [71, 65535] { R2355 += 1, R2297 += 1, R2265 += 1 };
  s5 -> s5 [0, 66] { R2355 += 1, R2297 += 1, R2265 += 1 };
  s5 -> s10 [70, 70] { R2355 += 1, R2297 += 1, R2265 += 1 };
  s5 -> s5 [71, 65535] { R2355 += 1, R2297 += 1, R2265 += 1 };
  s6 -> s6 [0, 65] { R2355 += 1, R2297 += 1, R2265 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R2355 += 1 };
  s6 -> s6 [0, 65535] { R2355 += 1, R2297 += 1 };
  s6 -> s9 [66, 66] { R2355 += 1, R2297 += 1, R2265 += 1 };
  s6 -> s10 [66, 66] { R2355 += 1, R2297 += 1, R2265 += 1 };
  s6 -> s6 [70, 65535] { R2355 += 1, R2297 += 1, R2265 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R2355 += 1 };
  s9 -> s9 [0, 65535] { R2355 += 1, R2297 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s8 [0, 65535] { R2355 += 1 };
  s10 -> s10 [0, 66] { R2355 += 1, R2297 += 1, R2265 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s10 [0, 65535] { R2355 += 1, R2297 += 1 };
  s10 -> s8 [0, 65535] { R2355 += 1 };
  s10 -> s10 [70, 65535] { R2355 += 1, R2297 += 1, R2265 += 1 };
  accepting s8, s9, s6, s7, s10;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65] { R2357 += 1, R2299 += 1, R2267 += 1, R56 += 1 };
  s0 -> s2 [0, 65535] { R2357 += 1, R2299 += 1, R2266 += 1, R2267 += 1 };
  s0 -> s0 [0, 65535] { R2356 += 1, R2357 += 1 };
  s0 -> s3 [0, 65535] { R2357 += 1, R2298 += 1, R2299 += 1 };
  s0 -> s4 [66, 66] { R2357 += 1, R2299 += 1, R2267 += 1, R56 += 1 };
  s0 -> s5 [66, 66] { R2357 += 1, R2299 += 1, R2267 += 1, R56 += 1 };
  s0 -> s1 [67, 65535] { R2357 += 1, R2299 += 1, R2267 += 1, R56 += 1 };
  s1 -> s1 [0, 65] { R2357 += 1, R2299 += 1, R2267 += 1, R56 += 1 };
  s1 -> s1 [0, 65535] { R2357 += 1, R2299 += 1 };
  s1 -> s7 [0, 65535] { R2357 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [66, 66] { R2357 += 1, R2299 += 1, R2267 += 1, R56 += 1 };
  s1 -> s5 [66, 66] { R2357 += 1, R2299 += 1, R2267 += 1, R56 += 1 };
  s1 -> s1 [67, 65535] { R2357 += 1, R2299 += 1, R2267 += 1, R56 += 1 };
  s2 -> s1 [0, 65] { R2357 += 1, R2299 += 1, R2267 += 1, R56 += 1 };
  s2 -> s2 [0, 65535] { R2357 += 1, R2299 += 1, R2266 += 1, R2267 += 1 };
  s2 -> s7 [0, 65535] { R2357 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [66, 66] { R2357 += 1, R2299 += 1, R2267 += 1, R56 += 1 };
  s2 -> s5 [66, 66] { R2357 += 1, R2299 += 1, R2267 += 1, R56 += 1 };
  s2 -> s1 [67, 65535] { R2357 += 1, R2299 += 1, R2267 += 1, R56 += 1 };
  s3 -> s1 [0, 65] { R2357 += 1, R2299 += 1, R2267 += 1, R56 += 1 };
  s3 -> s2 [0, 65535] { R2357 += 1, R2299 += 1, R2266 += 1, R2267 += 1 };
  s3 -> s3 [0, 65535] { R2357 += 1, R2298 += 1, R2299 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s4 [66, 66] { R2357 += 1, R2299 += 1, R2267 += 1, R56 += 1 };
  s3 -> s5 [66, 66] { R2357 += 1, R2299 += 1, R2267 += 1, R56 += 1 };
  s3 -> s1 [67, 65535] { R2357 += 1, R2299 += 1, R2267 += 1, R56 += 1 };
  s4 -> s4 [0, 65535] { R2357 += 1, R2299 += 1 };
  s4 -> s7 [0, 65535] { R2357 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s6 [0, 65535] { R2357 += 1, R2299 += 1 };
  s5 -> s5 [0, 65535] { R2357 += 1, R2299 += 1, R2267 += 1, R56 += 1 };
  s5 -> s7 [0, 65535] { R2357 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R2357 += 1, R2299 += 1 };
  s6 -> s7 [0, 65535] { R2357 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R2357 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65] { R2359 += 1, R2301 += 1, R2269 += 1 };
  s0 -> s2 [0, 65] { R2359 += 1, R2301 += 1, R2269 += 1, R1684 += 1 };
  s0 -> s0 [0, 65535] { R2358 += 1, R2359 += 1 };
  s0 -> s3 [0, 65535] { R2359 += 1, R2300 += 1, R2301 += 1 };
  s0 -> s4 [0, 65535] { R2359 += 1, R2301 += 1, R2268 += 1, R2269 += 1 };
  s0 -> s5 [66, 66] { R2359 += 1, R2301 += 1, R2269 += 1, R1684 += 1 };
  s0 -> s6 [66, 66] { R2359 += 1, R2301 += 1, R2269 += 1 };
  s0 -> s7 [66, 66] { R2359 += 1, R2301 += 1, R2269 += 1 };
  s0 -> s8 [66, 66] { R2359 += 1, R2301 += 1, R2269 += 1, R1684 += 1 };
  s0 -> s1 [67, 69] { R2359 += 1, R2301 += 1, R2269 += 1 };
  s0 -> s2 [67, 65535] { R2359 += 1, R2301 += 1, R2269 += 1, R1684 += 1 };
  s0 -> s1 [71, 65535] { R2359 += 1, R2301 += 1, R2269 += 1 };
  s1 -> s1 [0, 65] { R2359 += 1, R2301 += 1, R2269 += 1 };
  s1 -> s9 [0, 65535] { R2359 += 1 };
  s1 -> s10 [0, 65535];
  s1 -> s1 [0, 65535] { R2359 += 1, R2301 += 1 };
  s1 -> s6 [66, 66] { R2359 += 1, R2301 += 1, R2269 += 1 };
  s1 -> s7 [66, 66] { R2359 += 1, R2301 += 1, R2269 += 1 };
  s1 -> s1 [67, 69] { R2359 += 1, R2301 += 1, R2269 += 1 };
  s1 -> s1 [71, 65535] { R2359 += 1, R2301 += 1, R2269 += 1 };
  s2 -> s1 [0, 65] { R2359 += 1, R2301 += 1, R2269 += 1 };
  s2 -> s2 [0, 65] { R2359 += 1, R2301 += 1, R2269 += 1, R1684 += 1 };
  s2 -> s5 [66, 66] { R2359 += 1, R2301 += 1, R2269 += 1, R1684 += 1 };
  s2 -> s6 [66, 66] { R2359 += 1, R2301 += 1, R2269 += 1 };
  s2 -> s7 [66, 66] { R2359 += 1, R2301 += 1, R2269 += 1 };
  s2 -> s8 [66, 66] { R2359 += 1, R2301 += 1, R2269 += 1, R1684 += 1 };
  s2 -> s1 [67, 69] { R2359 += 1, R2301 += 1, R2269 += 1 };
  s2 -> s2 [67, 65535] { R2359 += 1, R2301 += 1, R2269 += 1, R1684 += 1 };
  s2 -> s1 [71, 65535] { R2359 += 1, R2301 += 1, R2269 += 1 };
  s3 -> s1 [0, 65] { R2359 += 1, R2301 += 1, R2269 += 1 };
  s3 -> s2 [0, 65] { R2359 += 1, R2301 += 1, R2269 += 1, R1684 += 1 };
  s3 -> s3 [0, 65535] { R2359 += 1, R2300 += 1, R2301 += 1 };
  s3 -> s4 [0, 65535] { R2359 += 1, R2301 += 1, R2268 += 1, R2269 += 1 };
  s3 -> s5 [66, 66] { R2359 += 1, R2301 += 1, R2269 += 1, R1684 += 1 };
  s3 -> s6 [66, 66] { R2359 += 1, R2301 += 1, R2269 += 1 };
  s3 -> s7 [66, 66] { R2359 += 1, R2301 += 1, R2269 += 1 };
  s3 -> s8 [66, 66] { R2359 += 1, R2301 += 1, R2269 += 1, R1684 += 1 };
  s3 -> s1 [67, 69] { R2359 += 1, R2301 += 1, R2269 += 1 };
  s3 -> s2 [67, 65535] { R2359 += 1, R2301 += 1, R2269 += 1, R1684 += 1 };
  s3 -> s1 [71, 65535] { R2359 += 1, R2301 += 1, R2269 += 1 };
  s4 -> s1 [0, 65] { R2359 += 1, R2301 += 1, R2269 += 1 };
  s4 -> s2 [0, 65] { R2359 += 1, R2301 += 1, R2269 += 1, R1684 += 1 };
  s4 -> s4 [0, 65535] { R2359 += 1, R2301 += 1, R2268 += 1, R2269 += 1 };
  s4 -> s5 [66, 66] { R2359 += 1, R2301 += 1, R2269 += 1, R1684 += 1 };
  s4 -> s6 [66, 66] { R2359 += 1, R2301 += 1, R2269 += 1 };
  s4 -> s7 [66, 66] { R2359 += 1, R2301 += 1, R2269 += 1 };
  s4 -> s8 [66, 66] { R2359 += 1, R2301 += 1, R2269 += 1, R1684 += 1 };
  s4 -> s1 [67, 69] { R2359 += 1, R2301 += 1, R2269 += 1 };
  s4 -> s2 [67, 65535] { R2359 += 1, R2301 += 1, R2269 += 1, R1684 += 1 };
  s4 -> s1 [71, 65535] { R2359 += 1, R2301 += 1, R2269 += 1 };
  s6 -> s6 [0, 69] { R2359 += 1, R2301 += 1, R2269 += 1 };
  s6 -> s9 [0, 65535] { R2359 += 1 };
  s6 -> s10 [0, 65535];
  s6 -> s6 [0, 65535] { R2359 += 1, R2301 += 1 };
  s6 -> s6 [71, 65535] { R2359 += 1, R2301 += 1, R2269 += 1 };
  s7 -> s9 [0, 65535] { R2359 += 1 };
  s7 -> s10 [0, 65535];
  s7 -> s7 [0, 65535] { R2359 += 1, R2301 += 1 };
  s8 -> s6 [0, 69] { R2359 += 1, R2301 += 1, R2269 += 1 };
  s8 -> s8 [0, 65535] { R2359 += 1, R2301 += 1, R2269 += 1, R1684 += 1 };
  s8 -> s6 [71, 65535] { R2359 += 1, R2301 += 1, R2269 += 1 };
  s9 -> s9 [0, 65535] { R2359 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  accepting s9, s6, s1, s7, s10;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 65] { R2361 += 1, R2303 += 1, R2271 += 1, R2092 += 1, R2093 += 1 };
  s0 -> s2 [0, 65] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s0 -> s0 [0, 65535] { R2360 += 1, R2361 += 1 };
  s0 -> s3 [0, 65535] { R2361 += 1, R2303 += 1, R2270 += 1, R2271 += 1 };
  s0 -> s4 [0, 65535] { R2361 += 1, R2302 += 1, R2303 += 1 };
  s0 -> s5 [66, 66] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s0 -> s6 [66, 66] { R2361 += 1, R2303 += 1, R2271 += 1, R2092 += 1, R2093 += 1 };
  s0 -> s7 [66, 66] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s0 -> s8 [66, 66] { R2361 += 1, R2303 += 1, R2271 += 1, R2092 += 1, R2093 += 1 };
  s0 -> s2 [67, 69] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s0 -> s1 [67, 65535] { R2361 += 1, R2303 += 1, R2271 += 1, R2092 += 1, R2093 += 1 };
  s0 -> s9 [70, 70] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s0 -> s2 [71, 65535] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s1 -> s1 [0, 65] { R2361 += 1, R2303 += 1, R2271 += 1, R2092 += 1, R2093 += 1 };
  s1 -> s2 [0, 65] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s1 -> s5 [66, 66] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s1 -> s6 [66, 66] { R2361 += 1, R2303 += 1, R2271 += 1, R2092 += 1, R2093 += 1 };
  s1 -> s7 [66, 66] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s1 -> s8 [66, 66] { R2361 += 1, R2303 += 1, R2271 += 1, R2092 += 1, R2093 += 1 };
  s1 -> s2 [67, 69] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s1 -> s1 [67, 65535] { R2361 += 1, R2303 += 1, R2271 += 1, R2092 += 1, R2093 += 1 };
  s1 -> s9 [70, 70] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s1 -> s2 [71, 65535] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s2 -> s2 [0, 65] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s2 -> s5 [66, 66] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s2 -> s7 [66, 66] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s2 -> s2 [67, 69] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s2 -> s9 [70, 70] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s2 -> s2 [71, 65535] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s3 -> s1 [0, 65] { R2361 += 1, R2303 += 1, R2271 += 1, R2092 += 1, R2093 += 1 };
  s3 -> s2 [0, 65] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s3 -> s3 [0, 65535] { R2361 += 1, R2303 += 1, R2270 += 1, R2271 += 1 };
  s3 -> s5 [66, 66] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s3 -> s6 [66, 66] { R2361 += 1, R2303 += 1, R2271 += 1, R2092 += 1, R2093 += 1 };
  s3 -> s7 [66, 66] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s3 -> s8 [66, 66] { R2361 += 1, R2303 += 1, R2271 += 1, R2092 += 1, R2093 += 1 };
  s3 -> s2 [67, 69] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s3 -> s1 [67, 65535] { R2361 += 1, R2303 += 1, R2271 += 1, R2092 += 1, R2093 += 1 };
  s3 -> s9 [70, 70] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s3 -> s2 [71, 65535] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s4 -> s1 [0, 65] { R2361 += 1, R2303 += 1, R2271 += 1, R2092 += 1, R2093 += 1 };
  s4 -> s2 [0, 65] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s4 -> s3 [0, 65535] { R2361 += 1, R2303 += 1, R2270 += 1, R2271 += 1 };
  s4 -> s4 [0, 65535] { R2361 += 1, R2302 += 1, R2303 += 1 };
  s4 -> s5 [66, 66] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s4 -> s6 [66, 66] { R2361 += 1, R2303 += 1, R2271 += 1, R2092 += 1, R2093 += 1 };
  s4 -> s7 [66, 66] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s4 -> s8 [66, 66] { R2361 += 1, R2303 += 1, R2271 += 1, R2092 += 1, R2093 += 1 };
  s4 -> s2 [67, 69] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s4 -> s1 [67, 65535] { R2361 += 1, R2303 += 1, R2271 += 1, R2092 += 1, R2093 += 1 };
  s4 -> s9 [70, 70] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s4 -> s2 [71, 65535] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s5 -> s5 [0, 69] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s5 -> s11 [70, 70] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s5 -> s5 [71, 65535] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s8 -> s5 [0, 69] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s8 -> s8 [0, 65535] { R2361 += 1, R2303 += 1, R2271 += 1, R2092 += 1, R2093 += 1 };
  s8 -> s11 [70, 70] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s8 -> s5 [71, 65535] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s9 -> s9 [0, 65] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s9 -> s10 [0, 65] { R2361 += 1, R2303 += 1, R2271 += 1 };
  s9 -> s11 [66, 66] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s9 -> s12 [66, 66] { R2361 += 1, R2303 += 1, R2271 += 1 };
  s9 -> s13 [66, 66] { R2361 += 1, R2303 += 1, R2271 += 1 };
  s9 -> s14 [66, 66] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s9 -> s9 [67, 65535] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s9 -> s10 [67, 65535] { R2361 += 1, R2303 += 1, R2271 += 1 };
  s10 -> s10 [0, 65] { R2361 += 1, R2303 += 1, R2271 += 1 };
  s10 -> s10 [0, 65535] { R2361 += 1, R2303 += 1 };
  s10 -> s15 [0, 65535] { R2361 += 1 };
  s10 -> s16 [0, 65535];
  s10 -> s12 [66, 66] { R2361 += 1, R2303 += 1, R2271 += 1 };
  s10 -> s13 [66, 66] { R2361 += 1, R2303 += 1, R2271 += 1 };
  s10 -> s10 [67, 65535] { R2361 += 1, R2303 += 1, R2271 += 1 };
  s11 -> s11 [0, 65535] { R2361 += 1, R2303 += 1, R2271 += 1, R2093 += 1 };
  s11 -> s12 [0, 65535] { R2361 += 1, R2303 += 1, R2271 += 1 };
  s12 -> s17 [0, 65535] { R2361 += 1, R2303 += 1 };
  s12 -> s12 [0, 65535] { R2361 += 1, R2303 += 1, R2271 += 1 };
  s12 -> s15 [0, 65535] { R2361 += 1 };
  s12 -> s16 [0, 65535];
  s13 -> s13 [0, 65535] { R2361 += 1, R2303 += 1 };
  s13 -> s15 [0, 65535] { R2361 += 1 };
  s13 -> s16 [0, 65535];
  s15 -> s15 [0, 65535] { R2361 += 1 };
  s15 -> s16 [0, 65535];
  s16 -> s16 [0, 65535];
  s17 -> s17 [0, 65535] { R2361 += 1, R2303 += 1 };
  s17 -> s15 [0, 65535] { R2361 += 1 };
  s17 -> s16 [0, 65535];
  accepting s17, s16, s12, s13, s15, s10;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 65] { R2363 += 1, R2305 += 1, R2273 += 1, R2231 += 1, R2232 += 1 };
  s0 -> s2 [0, 65] { R2363 += 1, R2305 += 1, R2273 += 1, R2230 += 1, R2231 += 1 };
  s0 -> s0 [0, 65535] { R2362 += 1, R2363 += 1 };
  s0 -> s3 [0, 65535] { R2363 += 1, R2305 += 1, R2272 += 1, R2273 += 1 };
  s0 -> s4 [0, 65535] { R2363 += 1, R2304 += 1, R2305 += 1 };
  s0 -> s5 [66, 66] { R2363 += 1, R2305 += 1, R2273 += 1, R2230 += 1, R2231 += 1 };
  s0 -> s6 [66, 66] { R2363 += 1, R2305 += 1, R2273 += 1, R2231 += 1, R2232 += 1 };
  s0 -> s7 [66, 66] { R2363 += 1, R2305 += 1, R2273 += 1, R2231 += 1, R2232 += 1 };
  s0 -> s8 [66, 66] { R2363 += 1, R2305 += 1, R2273 += 1, R2230 += 1, R2231 += 1 };
  s0 -> s1 [67, 65535] { R2363 += 1, R2305 += 1, R2273 += 1, R2231 += 1, R2232 += 1 };
  s0 -> s2 [67, 65535] { R2363 += 1, R2305 += 1, R2273 += 1, R2230 += 1, R2231 += 1 };
  s1 -> s1 [0, 65] { R2363 += 1, R2305 += 1, R2273 += 1, R2231 += 1, R2232 += 1 };
  s1 -> s1 [0, 65535] { R2363 += 1, R2305 += 1 };
  s1 -> s9 [0, 65535] { R2363 += 1 };
  s1 -> s10 [0, 65535];
  s1 -> s6 [66, 66] { R2363 += 1, R2305 += 1, R2273 += 1, R2231 += 1, R2232 += 1 };
  s1 -> s7 [66, 66] { R2363 += 1, R2305 += 1, R2273 += 1, R2231 += 1, R2232 += 1 };
  s1 -> s1 [67, 65535] { R2363 += 1, R2305 += 1, R2273 += 1, R2231 += 1, R2232 += 1 };
  s2 -> s1 [0, 65] { R2363 += 1, R2305 += 1, R2273 += 1, R2231 += 1, R2232 += 1 };
  s2 -> s2 [0, 65] { R2363 += 1, R2305 += 1, R2273 += 1, R2230 += 1, R2231 += 1 };
  s2 -> s5 [66, 66] { R2363 += 1, R2305 += 1, R2273 += 1, R2230 += 1, R2231 += 1 };
  s2 -> s6 [66, 66] { R2363 += 1, R2305 += 1, R2273 += 1, R2231 += 1, R2232 += 1 };
  s2 -> s7 [66, 66] { R2363 += 1, R2305 += 1, R2273 += 1, R2231 += 1, R2232 += 1 };
  s2 -> s8 [66, 66] { R2363 += 1, R2305 += 1, R2273 += 1, R2230 += 1, R2231 += 1 };
  s2 -> s1 [67, 65535] { R2363 += 1, R2305 += 1, R2273 += 1, R2231 += 1, R2232 += 1 };
  s2 -> s2 [67, 65535] { R2363 += 1, R2305 += 1, R2273 += 1, R2230 += 1, R2231 += 1 };
  s3 -> s1 [0, 65] { R2363 += 1, R2305 += 1, R2273 += 1, R2231 += 1, R2232 += 1 };
  s3 -> s2 [0, 65] { R2363 += 1, R2305 += 1, R2273 += 1, R2230 += 1, R2231 += 1 };
  s3 -> s3 [0, 65535] { R2363 += 1, R2305 += 1, R2272 += 1, R2273 += 1 };
  s3 -> s5 [66, 66] { R2363 += 1, R2305 += 1, R2273 += 1, R2230 += 1, R2231 += 1 };
  s3 -> s6 [66, 66] { R2363 += 1, R2305 += 1, R2273 += 1, R2231 += 1, R2232 += 1 };
  s3 -> s7 [66, 66] { R2363 += 1, R2305 += 1, R2273 += 1, R2231 += 1, R2232 += 1 };
  s3 -> s8 [66, 66] { R2363 += 1, R2305 += 1, R2273 += 1, R2230 += 1, R2231 += 1 };
  s3 -> s1 [67, 65535] { R2363 += 1, R2305 += 1, R2273 += 1, R2231 += 1, R2232 += 1 };
  s3 -> s2 [67, 65535] { R2363 += 1, R2305 += 1, R2273 += 1, R2230 += 1, R2231 += 1 };
  s4 -> s1 [0, 65] { R2363 += 1, R2305 += 1, R2273 += 1, R2231 += 1, R2232 += 1 };
  s4 -> s2 [0, 65] { R2363 += 1, R2305 += 1, R2273 += 1, R2230 += 1, R2231 += 1 };
  s4 -> s3 [0, 65535] { R2363 += 1, R2305 += 1, R2272 += 1, R2273 += 1 };
  s4 -> s4 [0, 65535] { R2363 += 1, R2304 += 1, R2305 += 1 };
  s4 -> s5 [66, 66] { R2363 += 1, R2305 += 1, R2273 += 1, R2230 += 1, R2231 += 1 };
  s4 -> s6 [66, 66] { R2363 += 1, R2305 += 1, R2273 += 1, R2231 += 1, R2232 += 1 };
  s4 -> s7 [66, 66] { R2363 += 1, R2305 += 1, R2273 += 1, R2231 += 1, R2232 += 1 };
  s4 -> s8 [66, 66] { R2363 += 1, R2305 += 1, R2273 += 1, R2230 += 1, R2231 += 1 };
  s4 -> s1 [67, 65535] { R2363 += 1, R2305 += 1, R2273 += 1, R2231 += 1, R2232 += 1 };
  s4 -> s2 [67, 65535] { R2363 += 1, R2305 += 1, R2273 += 1, R2230 += 1, R2231 += 1 };
  s6 -> s6 [0, 65535] { R2363 += 1, R2305 += 1 };
  s6 -> s9 [0, 65535] { R2363 += 1 };
  s6 -> s10 [0, 65535];
  s7 -> s9 [0, 65535] { R2363 += 1 };
  s7 -> s10 [0, 65535];
  s7 -> s11 [0, 65535] { R2363 += 1, R2305 += 1 };
  s7 -> s7 [0, 65535] { R2363 += 1, R2305 += 1, R2273 += 1, R2231 += 1, R2232 += 1 };
  s8 -> s7 [0, 65535] { R2363 += 1, R2305 += 1, R2273 += 1, R2231 += 1, R2232 += 1 };
  s8 -> s8 [0, 65535] { R2363 += 1, R2305 += 1, R2273 += 1, R2230 += 1, R2231 += 1 };
  s9 -> s9 [0, 65535] { R2363 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  s11 -> s9 [0, 65535] { R2363 += 1 };
  s11 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R2363 += 1, R2305 += 1 };
  accepting s9, s6, s1, s7, s10, s11;
};
};
synchronised {  // Automata constraining P37
automaton P37_0 {
  init s0;
  s0 -> s1 [9, 9];
  accepting s1;
};
};
synchronised {  // Automata constraining P38
automaton P38_0 {
  init s0;
  s0 -> s1 [10, 10];
  accepting s1;
};
};
synchronised {  // Automata constraining P36
automaton P36_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
constraint R2 = R2305 && R3 - R2363 = 1 && R22 - R2305 = -1 && R23 = R2305 && R24 - R2305 = -1 && R25 = R2305 && R26 = 0 && R27 = 1 && R28 = 0 && R29 = 1 && R30 = R2363 && R31 - R2363 = 1 && R32 = R2363 && R33 - R2363 = 1 && R34 = 0 && R35 = 1 && R36 = 0 && R37 = 1 && R42 + R57 + R56 + -1*R2095 + -1*R2093 - R47 = 0 && R46 + R2094 + R2092 = 0 && R2264 = 0 && R2265 = 0 && R2268 = 0 && R2269 = 0 && R2270 = 0 && R2271 = 0 && R2272 = 0 && R2273 = 0 && R2274 = 0 && R2275 = R2305 && R2276 = 0 && R2277 = R2305 && R2278 = 0 && R2279 = R2305 && R2280 = 0 && R2281 = R2305 && R2282 = 0 && R2283 = R2305 && R2284 = 0 && R2285 = R2305 && R2286 = 0 && R2287 = R2305 && R2288 = 0 && R2289 = R2305 && R2290 = 0 && R2291 = R2305 && R2292 = 0 && R2293 = R2305 && R2294 = 0 && R2295 = R2305 && R2296 = 0 && R2297 = R2305 && R2298 = 0 && R2299 = R2305 && R2300 = 0 && R2301 = R2305 && R2302 = 0 && R2303 = R2305 && R2304 = 0 && R2306 = 0 && R2307 = R2363 && R2308 = 0 && R2309 = R2363 && R2310 = 0 && R2311 = R2363 && R2312 = 0 && R2313 = R2363 && R2314 = 0 && R2315 = R2363 && R2316 = 0 && R2317 = R2363 && R2318 = 0 && R2319 = R2363 && R2320 = 0 && R2321 = R2363 && R2322 = 0 && R2323 = R2363 && R2324 = 0 && R2325 = R2363 && R2326 = 0 && R2327 = R2363 && R2328 = 0 && R2329 = R2363 && R2330 = 0 && R2331 = R2363 && R2332 = 0 && R2333 = R2363 && R2334 = 0 && R2335 = R2363 && R2336 = 0 && R2337 = R2363 && R2338 = 0 && R2339 = R2363 && R2340 = 0 && R2341 = R2363 && R2342 = 0 && R2343 = R2363 && R2344 = 0 && R2345 = R2363 && R2346 = 0 && R2347 = R2363 && R2348 = 0 && R2349 = R2363 && R2350 = 0 && R2351 = R2363 && R2352 = 0 && R2353 = R2363 && R2354 = 0 && R2355 = R2363 && R2356 = 0 && R2357 = R2363 && R2358 = 0 && R2359 = R2363 && R2360 = 0 && R2361 = R2363 && R2362 = 0 && -1 < R1 && R11 < 1 && R14 < 1 && R17 < 1 && R44 + R1685 + R1684 < 1 && -1*R2095 + -1*R2093 - R47 < 1 && 0 < R2305 && -1 < R2363 && (R1 != 0 || R19 = 0 || (R2236 = 0 && R2237 = 0)) && (R1 != 0 || R19 = 0 || (R2238 = 0 && R2239 = 0)) && (R1 != 0 || R19 = 0 || (R2240 = 0 && R2241 = 0)) && (R1 != 0 || R19 = 0 || (R2242 = 0 && R2243 = 0)) && (R1 != 0 || R19 = 0 || (R2244 = 0 && R2245 = 0)) && (R1 != 0 || R19 = 0 || (R2246 = 0 && R2247 = 0)) && (R1 != 0 || R19 = 0 || (R2248 = 0 && R2249 = 0)) && (R47 + R2095 + R2093 != 0 || R52 + R2235 + R2232 = 0 || (R50 + R2233 + R2230 = 0 && R51 + R2234 + R2231 = 0)) && (R50 + R2233 + R2230 != 0 || R47 + R2095 + R2093 + -1*R2234 + -1*R2231 - R51 = 0 || R47 + R2095 + R2093 < 1) && (R2236 != 0 || R1 = R2237 || R1 < 1) && (R2238 != 0 || R1 = R2239 || R1 < 1) && (R2240 != 0 || R1 = R2241 || R1 < 1) && (R2242 != 0 || R1 = R2243 || R1 < 1) && (R2244 != 0 || R1 = R2245 || R1 < 1) && (R2246 != 0 || R1 = R2247 || R1 < 1) && (R2248 != 0 || R1 = R2249 || R1 < 1) && (R20 = 0 || (R2262 = 0 && R2263 = 0)) && (R20 = 0 || (R2266 = 0 && R2267 = 0)) && (R21 = 0 || (R2250 = 0 && R2251 = 0)) && (R21 = 0 || (R2252 = 0 && R2253 = 0)) && (R21 = 0 || (R2254 = 0 && R2255 = 0)) && (R21 = 0 || (R2256 = 0 && R2257 = 0)) && (R21 = 0 || (R2258 = 0 && R2259 = 0)) && (R21 = 0 || (R2260 = 0 && R2261 = 0)) && (R50 + R2233 + R2230 = 0 || R47 + R2095 + R2093 < 1) && (R2236 = 0 || R1 < 1) && (R2238 = 0 || R1 < 1) && (R2240 = 0 || R1 < 1) && (R2242 = 0 || R1 < 1) && (R2244 = 0 || R1 < 1) && (R2246 = 0 || R1 < 1) && (R2248 = 0 || R1 < 1);
// End of Parikh automata intersection problem
