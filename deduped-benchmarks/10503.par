// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R14, R1684, R1685, R1686, R1687, R1688, R1689, R17, R19, R1958, R1959, R1960, R1961, R1962, R1963, R1964, R1965, R1966, R1967, R1968, R1969, R1970, R1971, R1972, R1973, R1974, R1975, R1976, R1977, R1978, R1979, R1980, R1981, R1982, R1983, R1984, R1985, R1986, R1987, R1988, R1989, R1990, R1991, R1992, R1993, R1994, R1995, R1996, R1997, R1998, R1999, R2, R20, R2000, R2001, R2002, R2003, R2004, R2005, R2006, R2007, R2008, R2009, R2010, R2011, R2012, R2013, R2014, R2015, R2016, R2017, R2018, R2019, R2020, R2021, R2022, R2023, R2024, R2025, R2026, R2027, R2028, R2029, R2030, R2031, R2032, R2033, R2034, R2035, R2036, R2037, R2038, R2039, R2040, R2041, R2042, R2043, R2044, R2045, R2046, R2047, R2048, R2049, R2050, R2051, R2052, R2053, R2054, R2055, R2056, R2057, R2058, R2059, R2060, R2061, R2062, R2063, R2064, R2065, R2066, R2067, R2068, R2069, R2070, R2071, R2072, R2073, R2074, R2075, R2076, R2077, R2078, R2079, R2080, R2081, R2082, R2083, R2084, R2085, R2086, R2087, R2088, R2089, R2090, R2091, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R33, R34, R35, R36, R37, R4, R42, R44, R46, R47, R5, R50, R51, R52, R56, R57, R6, R7;
synchronised {  // Automata constraining P9
automaton P9_0 {
  init s0;
  s0 -> s1 [98, 98];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R17 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R30 += 1, R31 += 1 };
  s0 -> s1 [13, 13] { R31 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s0 [0, 65535] { R32 += 1, R33 += 1 };
  s0 -> s1 [0, 65535] { R33 += 1, R6 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R33 += 1, R6 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R35 += 1 };
  s0 -> s0 [0, 65535] { R34 += 1, R35 += 1 };
  s0 -> s2 [9, 13] { R35 += 1 };
  s0 -> s1 [14, 31] { R35 += 1 };
  s0 -> s2 [32, 32] { R35 += 1 };
  s0 -> s1 [33, 65535] { R35 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R35 += 1 };
  s2 -> s1 [0, 65535] { R35 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 65535] { R37 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R36 += 1, R37 += 1 };
  s1 -> s1 [0, 65535] { R37 += 1, R7 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R2035 += 1 };
  s0 -> s0 [0, 65535] { R2034 += 1, R2035 += 1 };
  s0 -> s2 [66, 66] { R2035 += 1 };
  s0 -> s1 [67, 65535] { R2035 += 1 };
  s1 -> s1 [0, 64] { R2035 += 1 };
  s1 -> s2 [66, 66] { R2035 += 1 };
  s1 -> s1 [67, 65535] { R2035 += 1 };
  s2 -> s2 [0, 64] { R2035 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [66, 65535] { R2035 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R2037 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R2036 += 1, R2037 += 1 };
  s1 -> s1 [0, 65535] { R2037 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 65] { R2039 += 1 };
  s0 -> s2 [0, 65535] { R2039 += 1, R14 += 1 };
  s0 -> s0 [0, 65535] { R2038 += 1, R2039 += 1 };
  s0 -> s3 [66, 66] { R2039 += 1 };
  s0 -> s1 [67, 65535] { R2039 += 1 };
  s1 -> s1 [0, 65] { R2039 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [66, 66] { R2039 += 1 };
  s1 -> s1 [67, 65535] { R2039 += 1 };
  s2 -> s1 [0, 65] { R2039 += 1 };
  s2 -> s2 [0, 65535] { R2039 += 1, R14 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [66, 66] { R2039 += 1 };
  s2 -> s1 [67, 65535] { R2039 += 1 };
  s3 -> s3 [0, 65535] { R2039 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R2041 += 1, R23 += 1 };
  s0 -> s2 [0, 65535] { R2041 += 1, R22 += 1, R23 += 1 };
  s0 -> s0 [0, 65535] { R2040 += 1, R2041 += 1 };
  s0 -> s3 [9, 13] { R2041 += 1, R23 += 1 };
  s0 -> s1 [14, 31] { R2041 += 1, R23 += 1 };
  s0 -> s3 [32, 32] { R2041 += 1, R23 += 1 };
  s0 -> s1 [33, 65535] { R2041 += 1, R23 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R2041 += 1 };
  s1 -> s1 [0, 65535] { R2041 += 1, R23 += 1 };
  s2 -> s1 [0, 8] { R2041 += 1, R23 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2041 += 1, R22 += 1, R23 += 1 };
  s2 -> s3 [9, 13] { R2041 += 1, R23 += 1 };
  s2 -> s1 [14, 31] { R2041 += 1, R23 += 1 };
  s2 -> s3 [32, 32] { R2041 += 1, R23 += 1 };
  s2 -> s1 [33, 65535] { R2041 += 1, R23 += 1 };
  s3 -> s1 [0, 65535] { R2041 += 1, R23 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2041 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s0 [0, 65535] { R2042 += 1, R2043 += 1 };
  s0 -> s1 [0, 65535] { R2043 += 1, R25 += 1, R4 += 1 };
  s0 -> s2 [0, 65535] { R2043 += 1, R24 += 1, R25 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2043 += 1, R25 += 1, R4 += 1 };
  s1 -> s4 [0, 65535] { R2043 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R2043 += 1, R25 += 1, R4 += 1 };
  s2 -> s2 [0, 65535] { R2043 += 1, R24 += 1, R25 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2043 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R2045 += 1, R27 += 1 };
  s0 -> s0 [0, 65535] { R2044 += 1, R2045 += 1 };
  s0 -> s2 [0, 65535] { R2045 += 1, R26 += 1, R27 += 1 };
  s0 -> s3 [9, 13] { R2045 += 1, R27 += 1 };
  s0 -> s1 [14, 31] { R2045 += 1, R27 += 1 };
  s0 -> s3 [32, 32] { R2045 += 1, R27 += 1 };
  s0 -> s1 [33, 65535] { R2045 += 1, R27 += 1 };
  s1 -> s5 [0, 65535] { R2045 += 1 };
  s1 -> s1 [0, 65535] { R2045 += 1, R27 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 8] { R2045 += 1, R27 += 1 };
  s2 -> s2 [0, 65535] { R2045 += 1, R26 += 1, R27 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [9, 13] { R2045 += 1, R27 += 1 };
  s2 -> s1 [14, 31] { R2045 += 1, R27 += 1 };
  s2 -> s3 [32, 32] { R2045 += 1, R27 += 1 };
  s2 -> s1 [33, 65535] { R2045 += 1, R27 += 1 };
  s3 -> s1 [0, 65535] { R2045 += 1, R27 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2045 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 65535] { R2047 += 1, R28 += 1, R29 += 1 };
  s0 -> s2 [0, 65535] { R2047 += 1, R29 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R2046 += 1, R2047 += 1 };
  s1 -> s1 [0, 65535] { R2047 += 1, R28 += 1, R29 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R2047 += 1, R29 += 1, R5 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2047 += 1, R29 += 1, R5 += 1 };
  s2 -> s4 [0, 65535] { R2047 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2047 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 65535] { R2049 += 1, R1978 += 1, R1979 += 1 };
  s0 -> s2 [0, 65535] { R2049 += 1, R1979 += 1, R21 += 1 };
  s0 -> s0 [0, 65535] { R2048 += 1, R2049 += 1 };
  s1 -> s1 [0, 65535] { R2049 += 1, R1978 += 1, R1979 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R2049 += 1, R1979 += 1, R21 += 1 };
  s2 -> s3 [0, 65535] { R2049 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2049 += 1, R1979 += 1, R21 += 1 };
  s3 -> s3 [0, 65535] { R2049 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 65] { R2051 += 1, R1981 += 1 };
  s0 -> s2 [0, 65535] { R2051 += 1, R1980 += 1, R1981 += 1 };
  s0 -> s0 [0, 65535] { R2050 += 1, R2051 += 1 };
  s0 -> s3 [66, 66] { R2051 += 1, R1981 += 1 };
  s0 -> s4 [66, 66] { R2051 += 1, R1981 += 1 };
  s0 -> s1 [71, 65535] { R2051 += 1, R1981 += 1 };
  s1 -> s1 [0, 65] { R2051 += 1, R1981 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2051 += 1 };
  s1 -> s3 [66, 66] { R2051 += 1, R1981 += 1 };
  s1 -> s4 [66, 66] { R2051 += 1, R1981 += 1 };
  s1 -> s1 [71, 65535] { R2051 += 1, R1981 += 1 };
  s2 -> s1 [0, 65] { R2051 += 1, R1981 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2051 += 1, R1980 += 1, R1981 += 1 };
  s2 -> s3 [66, 66] { R2051 += 1, R1981 += 1 };
  s2 -> s4 [66, 66] { R2051 += 1, R1981 += 1 };
  s2 -> s1 [71, 65535] { R2051 += 1, R1981 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2051 += 1 };
  s4 -> s4 [0, 66] { R2051 += 1, R1981 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2051 += 1 };
  s4 -> s4 [71, 65535] { R2051 += 1, R1981 += 1 };
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 65] { R2053 += 1, R1983 += 1, R42 += 1 };
  s0 -> s0 [0, 65535] { R2052 += 1, R2053 += 1 };
  s0 -> s2 [0, 65535] { R2053 += 1, R1982 += 1, R1983 += 1 };
  s0 -> s3 [66, 66] { R2053 += 1, R1983 += 1, R42 += 1 };
  s0 -> s4 [66, 66] { R2053 += 1, R1983 += 1, R42 += 1 };
  s0 -> s1 [67, 65535] { R2053 += 1, R1983 += 1, R42 += 1 };
  s1 -> s1 [0, 65] { R2053 += 1, R1983 += 1, R42 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2053 += 1 };
  s1 -> s3 [66, 66] { R2053 += 1, R1983 += 1, R42 += 1 };
  s1 -> s4 [66, 66] { R2053 += 1, R1983 += 1, R42 += 1 };
  s1 -> s1 [67, 65535] { R2053 += 1, R1983 += 1, R42 += 1 };
  s2 -> s1 [0, 65] { R2053 += 1, R1983 += 1, R42 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2053 += 1, R1982 += 1, R1983 += 1 };
  s2 -> s3 [66, 66] { R2053 += 1, R1983 += 1, R42 += 1 };
  s2 -> s4 [66, 66] { R2053 += 1, R1983 += 1, R42 += 1 };
  s2 -> s1 [67, 65535] { R2053 += 1, R1983 += 1, R42 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R2053 += 1 };
  s3 -> s3 [0, 65535] { R2053 += 1, R1983 += 1, R42 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2053 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2053 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 65] { R2055 += 1, R1985 += 1, R44 += 1 };
  s0 -> s2 [0, 65535] { R2055 += 1, R1984 += 1, R1985 += 1 };
  s0 -> s0 [0, 65535] { R2054 += 1, R2055 += 1 };
  s0 -> s3 [66, 66] { R2055 += 1, R1985 += 1, R44 += 1 };
  s0 -> s4 [66, 66] { R2055 += 1, R1985 += 1, R44 += 1 };
  s0 -> s1 [67, 65535] { R2055 += 1, R1985 += 1, R44 += 1 };
  s1 -> s1 [0, 65] { R2055 += 1, R1985 += 1, R44 += 1 };
  s1 -> s1 [0, 65535] { R2055 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R2055 += 1, R1985 += 1, R44 += 1 };
  s1 -> s4 [66, 66] { R2055 += 1, R1985 += 1, R44 += 1 };
  s1 -> s1 [67, 65535] { R2055 += 1, R1985 += 1, R44 += 1 };
  s2 -> s1 [0, 65] { R2055 += 1, R1985 += 1, R44 += 1 };
  s2 -> s2 [0, 65535] { R2055 += 1, R1984 += 1, R1985 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R2055 += 1, R1985 += 1, R44 += 1 };
  s2 -> s4 [66, 66] { R2055 += 1, R1985 += 1, R44 += 1 };
  s2 -> s1 [67, 65535] { R2055 += 1, R1985 += 1, R44 += 1 };
  s3 -> s3 [0, 65535] { R2055 += 1, R1985 += 1, R44 += 1 };
  s3 -> s6 [0, 65535] { R2055 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2055 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2055 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65] { R2057 += 1, R1987 += 1, R46 += 1, R47 += 1 };
  s0 -> s2 [0, 65535] { R2057 += 1, R1986 += 1, R1987 += 1 };
  s0 -> s0 [0, 65535] { R2056 += 1, R2057 += 1 };
  s0 -> s3 [66, 66] { R2057 += 1, R1987 += 1, R46 += 1, R47 += 1 };
  s0 -> s4 [66, 66] { R2057 += 1, R1987 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [67, 65535] { R2057 += 1, R1987 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65] { R2057 += 1, R1987 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65535] { R2057 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R2057 += 1, R1987 += 1, R46 += 1, R47 += 1 };
  s1 -> s4 [66, 66] { R2057 += 1, R1987 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [67, 65535] { R2057 += 1, R1987 += 1, R46 += 1, R47 += 1 };
  s2 -> s1 [0, 65] { R2057 += 1, R1987 += 1, R46 += 1, R47 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2057 += 1, R1986 += 1, R1987 += 1 };
  s2 -> s3 [66, 66] { R2057 += 1, R1987 += 1, R46 += 1, R47 += 1 };
  s2 -> s4 [66, 66] { R2057 += 1, R1987 += 1, R46 += 1, R47 += 1 };
  s2 -> s1 [67, 65535] { R2057 += 1, R1987 += 1, R46 += 1, R47 += 1 };
  s3 -> s3 [0, 65535] { R2057 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2057 += 1, R1987 += 1, R46 += 1, R47 += 1 };
  s4 -> s6 [0, 65535] { R2057 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2057 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 65] { R2059 += 1, R1989 += 1, R50 += 1, R51 += 1 };
  s0 -> s0 [0, 65535] { R2058 += 1, R2059 += 1 };
  s0 -> s2 [0, 65535] { R2059 += 1, R1988 += 1, R1989 += 1 };
  s0 -> s3 [66, 66] { R2059 += 1, R1989 += 1, R50 += 1, R51 += 1 };
  s0 -> s4 [66, 66] { R2059 += 1, R1989 += 1, R50 += 1, R51 += 1 };
  s0 -> s1 [67, 65535] { R2059 += 1, R1989 += 1, R50 += 1, R51 += 1 };
  s1 -> s1 [0, 65] { R2059 += 1, R1989 += 1, R50 += 1, R51 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R2059 += 1 };
  s1 -> s3 [66, 66] { R2059 += 1, R1989 += 1, R50 += 1, R51 += 1 };
  s1 -> s4 [66, 66] { R2059 += 1, R1989 += 1, R50 += 1, R51 += 1 };
  s1 -> s1 [67, 65535] { R2059 += 1, R1989 += 1, R50 += 1, R51 += 1 };
  s2 -> s1 [0, 65] { R2059 += 1, R1989 += 1, R50 += 1, R51 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R2059 += 1, R1988 += 1, R1989 += 1 };
  s2 -> s3 [66, 66] { R2059 += 1, R1989 += 1, R50 += 1, R51 += 1 };
  s2 -> s4 [66, 66] { R2059 += 1, R1989 += 1, R50 += 1, R51 += 1 };
  s2 -> s1 [67, 65535] { R2059 += 1, R1989 += 1, R50 += 1, R51 += 1 };
  s3 -> s3 [0, 65535] { R2059 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R2059 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2059 += 1, R1989 += 1, R50 += 1, R51 += 1 };
  s5 -> s5 [0, 65535] { R2059 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 65] { R2061 += 1, R2003 += 1 };
  s0 -> s0 [0, 65535] { R2060 += 1, R2061 += 1 };
  s0 -> s2 [0, 65535] { R2061 += 1, R2002 += 1, R2003 += 1 };
  s0 -> s3 [66, 66] { R2061 += 1, R2003 += 1 };
  s0 -> s1 [67, 65535] { R2061 += 1, R2003 += 1 };
  s1 -> s1 [0, 65] { R2061 += 1, R2003 += 1 };
  s1 -> s3 [66, 66] { R2061 += 1, R2003 += 1 };
  s1 -> s1 [67, 65535] { R2061 += 1, R2003 += 1 };
  s2 -> s1 [0, 65] { R2061 += 1, R2003 += 1 };
  s2 -> s2 [0, 65535] { R2061 += 1, R2002 += 1, R2003 += 1 };
  s2 -> s3 [66, 66] { R2061 += 1, R2003 += 1 };
  s2 -> s1 [67, 65535] { R2061 += 1, R2003 += 1 };
  s3 -> s4 [0, 65535] { R2061 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2061 += 1, R2003 += 1 };
  s4 -> s4 [0, 65535] { R2061 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R2063 += 1, R2004 += 1, R2005 += 1 };
  s0 -> s2 [0, 65535] { R2063 += 1, R2005 += 1, R1 += 1 };
  s0 -> s0 [0, 65535] { R2062 += 1, R2063 += 1 };
  s1 -> s1 [0, 65535] { R2063 += 1, R2004 += 1, R2005 += 1 };
  s1 -> s2 [0, 65535] { R2063 += 1, R2005 += 1, R1 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2063 += 1, R2005 += 1, R1 += 1 };
  s2 -> s3 [0, 65535] { R2063 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2063 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 65] { R2065 += 1, R2007 += 1 };
  s0 -> s2 [0, 65535] { R2065 += 1, R2006 += 1, R2007 += 1 };
  s0 -> s0 [0, 65535] { R2064 += 1, R2065 += 1 };
  s0 -> s3 [0, 65535] { R2065 += 1, R2007 += 1, R11 += 1 };
  s0 -> s4 [66, 66] { R2065 += 1, R2007 += 1 };
  s0 -> s1 [67, 65535] { R2065 += 1, R2007 += 1 };
  s1 -> s1 [0, 65] { R2065 += 1, R2007 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R2065 += 1 };
  s1 -> s4 [66, 66] { R2065 += 1, R2007 += 1 };
  s1 -> s1 [67, 65535] { R2065 += 1, R2007 += 1 };
  s2 -> s1 [0, 65] { R2065 += 1, R2007 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R2065 += 1, R2006 += 1, R2007 += 1 };
  s2 -> s3 [0, 65535] { R2065 += 1, R2007 += 1, R11 += 1 };
  s2 -> s4 [66, 66] { R2065 += 1, R2007 += 1 };
  s2 -> s1 [67, 65535] { R2065 += 1, R2007 += 1 };
  s3 -> s1 [0, 65] { R2065 += 1, R2007 += 1 };
  s3 -> s5 [0, 65535] { R2065 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R2065 += 1, R2007 += 1, R11 += 1 };
  s3 -> s4 [66, 66] { R2065 += 1, R2007 += 1 };
  s3 -> s1 [67, 65535] { R2065 += 1, R2007 += 1 };
  s4 -> s4 [0, 65535] { R2065 += 1, R2007 += 1 };
  s5 -> s5 [0, 65535] { R2065 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s5, s2, s6, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65] { R2067 += 1, R2009 += 1, R1965 += 1 };
  s0 -> s2 [0, 65535] { R2067 += 1, R2009 += 1, R1964 += 1, R1965 += 1 };
  s0 -> s3 [0, 65535] { R2067 += 1, R2008 += 1, R2009 += 1 };
  s0 -> s0 [0, 65535] { R2066 += 1, R2067 += 1 };
  s0 -> s1 [67, 65535] { R2067 += 1, R2009 += 1, R1965 += 1 };
  s1 -> s1 [0, 65] { R2067 += 1, R2009 += 1, R1965 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R2067 += 1 };
  s1 -> s1 [0, 65535] { R2067 += 1, R2009 += 1 };
  s1 -> s1 [67, 65535] { R2067 += 1, R2009 += 1, R1965 += 1 };
  s2 -> s1 [0, 65] { R2067 += 1, R2009 += 1, R1965 += 1 };
  s2 -> s2 [0, 65535] { R2067 += 1, R2009 += 1, R1964 += 1, R1965 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R2067 += 1 };
  s2 -> s1 [67, 65535] { R2067 += 1, R2009 += 1, R1965 += 1 };
  s3 -> s1 [0, 65] { R2067 += 1, R2009 += 1, R1965 += 1 };
  s3 -> s2 [0, 65535] { R2067 += 1, R2009 += 1, R1964 += 1, R1965 += 1 };
  s3 -> s3 [0, 65535] { R2067 += 1, R2008 += 1, R2009 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [67, 65535] { R2067 += 1, R2009 += 1, R1965 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2067 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 65535] { R2069 += 1, R2010 += 1, R2011 += 1 };
  s0 -> s0 [0, 65535] { R2068 += 1, R2069 += 1 };
  s0 -> s2 [0, 65535] { R2069 += 1, R2011 += 1, R1966 += 1, R1967 += 1 };
  s0 -> s3 [0, 65535] { R2069 += 1, R2011 += 1, R1967 += 1, R19 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R2069 += 1, R2010 += 1, R2011 += 1 };
  s1 -> s2 [0, 65535] { R2069 += 1, R2011 += 1, R1966 += 1, R1967 += 1 };
  s1 -> s3 [0, 65535] { R2069 += 1, R2011 += 1, R1967 += 1, R19 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R2069 += 1 };
  s2 -> s2 [0, 65535] { R2069 += 1, R2011 += 1, R1966 += 1, R1967 += 1 };
  s2 -> s3 [0, 65535] { R2069 += 1, R2011 += 1, R1967 += 1, R19 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R2069 += 1 };
  s3 -> s6 [0, 65535] { R2069 += 1, R2011 += 1 };
  s3 -> s3 [0, 65535] { R2069 += 1, R2011 += 1, R1967 += 1, R19 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2069 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R2069 += 1 };
  s6 -> s6 [0, 65535] { R2069 += 1, R2011 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 66] { R2071 += 1, R2013 += 1, R1969 += 1 };
  s0 -> s0 [0, 65535] { R2070 += 1, R2071 += 1 };
  s0 -> s2 [0, 65535] { R2071 += 1, R2013 += 1, R1968 += 1, R1969 += 1 };
  s0 -> s3 [0, 65535] { R2071 += 1, R2012 += 1, R2013 += 1 };
  s0 -> s1 [70, 65535] { R2071 += 1, R2013 += 1, R1969 += 1 };
  s1 -> s1 [0, 66] { R2071 += 1, R2013 += 1, R1969 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R2071 += 1 };
  s1 -> s1 [0, 65535] { R2071 += 1, R2013 += 1 };
  s1 -> s1 [70, 65535] { R2071 += 1, R2013 += 1, R1969 += 1 };
  s2 -> s1 [0, 66] { R2071 += 1, R2013 += 1, R1969 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2071 += 1, R2013 += 1, R1968 += 1, R1969 += 1 };
  s2 -> s5 [0, 65535] { R2071 += 1 };
  s2 -> s1 [70, 65535] { R2071 += 1, R2013 += 1, R1969 += 1 };
  s3 -> s1 [0, 66] { R2071 += 1, R2013 += 1, R1969 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R2071 += 1, R2013 += 1, R1968 += 1, R1969 += 1 };
  s3 -> s3 [0, 65535] { R2071 += 1, R2012 += 1, R2013 += 1 };
  s3 -> s1 [70, 65535] { R2071 += 1, R2013 += 1, R1969 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2071 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R2072 += 1, R2073 += 1 };
  s0 -> s1 [0, 65535] { R2073 += 1, R2014 += 1, R2015 += 1 };
  s0 -> s2 [0, 65535] { R2073 += 1, R2015 += 1, R1970 += 1, R1971 += 1 };
  s0 -> s3 [0, 65535] { R2073 += 1, R2015 += 1, R1971 += 1, R57 += 1 };
  s1 -> s1 [0, 65535] { R2073 += 1, R2014 += 1, R2015 += 1 };
  s1 -> s2 [0, 65535] { R2073 += 1, R2015 += 1, R1970 += 1, R1971 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R2073 += 1, R2015 += 1, R1971 += 1, R57 += 1 };
  s2 -> s2 [0, 65535] { R2073 += 1, R2015 += 1, R1970 += 1, R1971 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R2073 += 1 };
  s2 -> s3 [0, 65535] { R2073 += 1, R2015 += 1, R1971 += 1, R57 += 1 };
  s3 -> s4 [0, 65535] { R2073 += 1, R2015 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R2073 += 1 };
  s3 -> s3 [0, 65535] { R2073 += 1, R2015 += 1, R1971 += 1, R57 += 1 };
  s4 -> s4 [0, 65535] { R2073 += 1, R2015 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R2073 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2073 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 69] { R2075 += 1, R2017 += 1, R1973 += 1 };
  s0 -> s2 [0, 65535] { R2075 += 1, R2016 += 1, R2017 += 1 };
  s0 -> s0 [0, 65535] { R2074 += 1, R2075 += 1 };
  s0 -> s3 [0, 65535] { R2075 += 1, R2017 += 1, R1972 += 1, R1973 += 1 };
  s0 -> s1 [71, 65535] { R2075 += 1, R2017 += 1, R1973 += 1 };
  s1 -> s1 [0, 69] { R2075 += 1, R2017 += 1, R1973 += 1 };
  s1 -> s4 [0, 65535] { R2075 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2075 += 1, R2017 += 1 };
  s1 -> s1 [71, 65535] { R2075 += 1, R2017 += 1, R1973 += 1 };
  s2 -> s1 [0, 69] { R2075 += 1, R2017 += 1, R1973 += 1 };
  s2 -> s2 [0, 65535] { R2075 += 1, R2016 += 1, R2017 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R2075 += 1, R2017 += 1, R1972 += 1, R1973 += 1 };
  s2 -> s1 [71, 65535] { R2075 += 1, R2017 += 1, R1973 += 1 };
  s3 -> s1 [0, 69] { R2075 += 1, R2017 += 1, R1973 += 1 };
  s3 -> s4 [0, 65535] { R2075 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2075 += 1, R2017 += 1, R1972 += 1, R1973 += 1 };
  s3 -> s1 [71, 65535] { R2075 += 1, R2017 += 1, R1973 += 1 };
  s4 -> s4 [0, 65535] { R2075 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R2077 += 1, R2018 += 1, R2019 += 1 };
  s0 -> s2 [0, 65535] { R2077 += 1, R2019 += 1, R1975 += 1, R1689 += 1 };
  s0 -> s3 [0, 65535] { R2077 += 1, R2019 += 1, R1974 += 1, R1975 += 1 };
  s0 -> s4 [0, 65535] { R2077 += 1, R2019 += 1, R1975 += 1 };
  s0 -> s0 [0, 65535] { R2076 += 1, R2077 += 1 };
  s1 -> s1 [0, 65535] { R2077 += 1, R2018 += 1, R2019 += 1 };
  s1 -> s2 [0, 65535] { R2077 += 1, R2019 += 1, R1975 += 1, R1689 += 1 };
  s1 -> s3 [0, 65535] { R2077 += 1, R2019 += 1, R1974 += 1, R1975 += 1 };
  s1 -> s4 [0, 65535] { R2077 += 1, R2019 += 1, R1975 += 1 };
  s1 -> s7 [0, 65535];
  s2 -> s4 [0, 65535] { R2077 += 1, R2019 += 1, R1975 += 1 };
  s2 -> s5 [0, 65535] { R2077 += 1 };
  s2 -> s2 [0, 65535] { R2077 += 1, R2019 += 1, R1975 += 1, R1689 += 1 };
  s2 -> s6 [0, 65535] { R2077 += 1, R2019 += 1 };
  s2 -> s7 [0, 65535];
  s3 -> s4 [0, 65535] { R2077 += 1, R2019 += 1, R1975 += 1 };
  s3 -> s5 [0, 65535] { R2077 += 1 };
  s3 -> s3 [0, 65535] { R2077 += 1, R2019 += 1, R1974 += 1, R1975 += 1 };
  s3 -> s2 [0, 65535] { R2077 += 1, R2019 += 1, R1975 += 1, R1689 += 1 };
  s3 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R2077 += 1, R2019 += 1, R1975 += 1 };
  s4 -> s5 [0, 65535] { R2077 += 1 };
  s4 -> s6 [0, 65535] { R2077 += 1, R2019 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R2077 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s5 [0, 65535] { R2077 += 1 };
  s6 -> s6 [0, 65535] { R2077 += 1, R2019 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R2079 += 1, R2020 += 1, R2021 += 1 };
  s0 -> s0 [0, 65535] { R2078 += 1, R2079 += 1 };
  s0 -> s2 [0, 65535] { R2079 += 1, R2021 += 1, R1977 += 1 };
  s0 -> s3 [0, 65535] { R2079 += 1, R2021 += 1, R1976 += 1, R1977 += 1 };
  s1 -> s1 [0, 65535] { R2079 += 1, R2020 += 1, R2021 += 1 };
  s1 -> s2 [0, 65535] { R2079 += 1, R2021 += 1, R1977 += 1 };
  s1 -> s3 [0, 65535] { R2079 += 1, R2021 += 1, R1976 += 1, R1977 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s4 [0, 65535] { R2079 += 1 };
  s2 -> s2 [0, 65535] { R2079 += 1, R2021 += 1, R1977 += 1 };
  s2 -> s6 [0, 65535] { R2079 += 1, R2021 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R2079 += 1 };
  s3 -> s2 [0, 65535] { R2079 += 1, R2021 += 1, R1977 += 1 };
  s3 -> s3 [0, 65535] { R2079 += 1, R2021 += 1, R1976 += 1, R1977 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2079 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R2079 += 1 };
  s6 -> s6 [0, 65535] { R2079 += 1, R2021 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R2081 += 1, R2023 += 1, R1990 += 1, R1991 += 1 };
  s0 -> s2 [0, 65535] { R2081 += 1, R2023 += 1, R1991 += 1, R20 += 1 };
  s0 -> s3 [0, 65535] { R2081 += 1, R2022 += 1, R2023 += 1 };
  s0 -> s0 [0, 65535] { R2080 += 1, R2081 += 1 };
  s1 -> s1 [0, 65535] { R2081 += 1, R2023 += 1, R1990 += 1, R1991 += 1 };
  s1 -> s5 [0, 65535] { R2081 += 1 };
  s1 -> s2 [0, 65535] { R2081 += 1, R2023 += 1, R1991 += 1, R20 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R2081 += 1 };
  s2 -> s2 [0, 65535] { R2081 += 1, R2023 += 1, R1991 += 1, R20 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s6 [0, 65535] { R2081 += 1, R2023 += 1 };
  s3 -> s1 [0, 65535] { R2081 += 1, R2023 += 1, R1990 += 1, R1991 += 1 };
  s3 -> s2 [0, 65535] { R2081 += 1, R2023 += 1, R1991 += 1, R20 += 1 };
  s3 -> s3 [0, 65535] { R2081 += 1, R2022 += 1, R2023 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2081 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R2081 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R2081 += 1, R2023 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 65] { R2083 += 1, R2025 += 1, R1993 += 1 };
  s0 -> s2 [0, 65535] { R2083 += 1, R2025 += 1, R1992 += 1, R1993 += 1 };
  s0 -> s3 [0, 65535] { R2083 += 1, R2024 += 1, R2025 += 1 };
  s0 -> s0 [0, 65535] { R2082 += 1, R2083 += 1 };
  s0 -> s4 [66, 66] { R2083 += 1, R2025 += 1, R1993 += 1 };
  s0 -> s5 [66, 66] { R2083 += 1, R2025 += 1, R1993 += 1 };
  s0 -> s6 [70, 70] { R2083 += 1, R2025 += 1, R1993 += 1 };
  s0 -> s1 [71, 65535] { R2083 += 1, R2025 += 1, R1993 += 1 };
  s1 -> s1 [0, 65] { R2083 += 1, R2025 += 1, R1993 += 1 };
  s1 -> s4 [66, 66] { R2083 += 1, R2025 += 1, R1993 += 1 };
  s1 -> s5 [66, 66] { R2083 += 1, R2025 += 1, R1993 += 1 };
  s1 -> s6 [70, 70] { R2083 += 1, R2025 += 1, R1993 += 1 };
  s1 -> s1 [71, 65535] { R2083 += 1, R2025 += 1, R1993 += 1 };
  s2 -> s1 [0, 65] { R2083 += 1, R2025 += 1, R1993 += 1 };
  s2 -> s2 [0, 65535] { R2083 += 1, R2025 += 1, R1992 += 1, R1993 += 1 };
  s2 -> s4 [66, 66] { R2083 += 1, R2025 += 1, R1993 += 1 };
  s2 -> s5 [66, 66] { R2083 += 1, R2025 += 1, R1993 += 1 };
  s2 -> s6 [70, 70] { R2083 += 1, R2025 += 1, R1993 += 1 };
  s2 -> s1 [71, 65535] { R2083 += 1, R2025 += 1, R1993 += 1 };
  s3 -> s1 [0, 65] { R2083 += 1, R2025 += 1, R1993 += 1 };
  s3 -> s2 [0, 65535] { R2083 += 1, R2025 += 1, R1992 += 1, R1993 += 1 };
  s3 -> s3 [0, 65535] { R2083 += 1, R2024 += 1, R2025 += 1 };
  s3 -> s4 [66, 66] { R2083 += 1, R2025 += 1, R1993 += 1 };
  s3 -> s5 [66, 66] { R2083 += 1, R2025 += 1, R1993 += 1 };
  s3 -> s6 [70, 70] { R2083 += 1, R2025 += 1, R1993 += 1 };
  s3 -> s1 [71, 65535] { R2083 += 1, R2025 += 1, R1993 += 1 };
  s5 -> s5 [0, 66] { R2083 += 1, R2025 += 1, R1993 += 1 };
  s5 -> s10 [70, 70] { R2083 += 1, R2025 += 1, R1993 += 1 };
  s5 -> s5 [71, 65535] { R2083 += 1, R2025 += 1, R1993 += 1 };
  s6 -> s6 [0, 65] { R2083 += 1, R2025 += 1, R1993 += 1 };
  s6 -> s6 [0, 65535] { R2083 += 1, R2025 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R2083 += 1 };
  s6 -> s9 [66, 66] { R2083 += 1, R2025 += 1, R1993 += 1 };
  s6 -> s10 [66, 66] { R2083 += 1, R2025 += 1, R1993 += 1 };
  s6 -> s6 [70, 65535] { R2083 += 1, R2025 += 1, R1993 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R2083 += 1 };
  s9 -> s9 [0, 65535] { R2083 += 1, R2025 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s8 [0, 65535] { R2083 += 1 };
  s10 -> s10 [0, 66] { R2083 += 1, R2025 += 1, R1993 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s10 [0, 65535] { R2083 += 1, R2025 += 1 };
  s10 -> s8 [0, 65535] { R2083 += 1 };
  s10 -> s10 [70, 65535] { R2083 += 1, R2025 += 1, R1993 += 1 };
  accepting s8, s9, s6, s7, s10;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65] { R2085 += 1, R2027 += 1, R1995 += 1, R56 += 1 };
  s0 -> s2 [0, 65535] { R2085 += 1, R2026 += 1, R2027 += 1 };
  s0 -> s3 [0, 65535] { R2085 += 1, R2027 += 1, R1994 += 1, R1995 += 1 };
  s0 -> s0 [0, 65535] { R2084 += 1, R2085 += 1 };
  s0 -> s4 [66, 66] { R2085 += 1, R2027 += 1, R1995 += 1, R56 += 1 };
  s0 -> s5 [66, 66] { R2085 += 1, R2027 += 1, R1995 += 1, R56 += 1 };
  s0 -> s1 [67, 65535] { R2085 += 1, R2027 += 1, R1995 += 1, R56 += 1 };
  s1 -> s1 [0, 65] { R2085 += 1, R2027 += 1, R1995 += 1, R56 += 1 };
  s1 -> s1 [0, 65535] { R2085 += 1, R2027 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s8 [0, 65535] { R2085 += 1 };
  s1 -> s4 [66, 66] { R2085 += 1, R2027 += 1, R1995 += 1, R56 += 1 };
  s1 -> s5 [66, 66] { R2085 += 1, R2027 += 1, R1995 += 1, R56 += 1 };
  s1 -> s1 [67, 65535] { R2085 += 1, R2027 += 1, R1995 += 1, R56 += 1 };
  s2 -> s1 [0, 65] { R2085 += 1, R2027 += 1, R1995 += 1, R56 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R2085 += 1, R2026 += 1, R2027 += 1 };
  s2 -> s3 [0, 65535] { R2085 += 1, R2027 += 1, R1994 += 1, R1995 += 1 };
  s2 -> s4 [66, 66] { R2085 += 1, R2027 += 1, R1995 += 1, R56 += 1 };
  s2 -> s5 [66, 66] { R2085 += 1, R2027 += 1, R1995 += 1, R56 += 1 };
  s2 -> s1 [67, 65535] { R2085 += 1, R2027 += 1, R1995 += 1, R56 += 1 };
  s3 -> s1 [0, 65] { R2085 += 1, R2027 += 1, R1995 += 1, R56 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R2085 += 1, R2027 += 1, R1994 += 1, R1995 += 1 };
  s3 -> s8 [0, 65535] { R2085 += 1 };
  s3 -> s4 [66, 66] { R2085 += 1, R2027 += 1, R1995 += 1, R56 += 1 };
  s3 -> s5 [66, 66] { R2085 += 1, R2027 += 1, R1995 += 1, R56 += 1 };
  s3 -> s1 [67, 65535] { R2085 += 1, R2027 += 1, R1995 += 1, R56 += 1 };
  s4 -> s4 [0, 65535] { R2085 += 1, R2027 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s8 [0, 65535] { R2085 += 1 };
  s5 -> s5 [0, 65535] { R2085 += 1, R2027 += 1, R1995 += 1, R56 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R2085 += 1, R2027 += 1 };
  s5 -> s8 [0, 65535] { R2085 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2085 += 1, R2027 += 1 };
  s7 -> s8 [0, 65535] { R2085 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R2085 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65] { R2087 += 1, R2029 += 1, R1997 += 1, R1684 += 1 };
  s0 -> s2 [0, 65] { R2087 += 1, R2029 += 1, R1997 += 1 };
  s0 -> s0 [0, 65535] { R2086 += 1, R2087 += 1 };
  s0 -> s3 [0, 65535] { R2087 += 1, R2029 += 1, R1996 += 1, R1997 += 1 };
  s0 -> s4 [0, 65535] { R2087 += 1, R2028 += 1, R2029 += 1 };
  s0 -> s5 [66, 66] { R2087 += 1, R2029 += 1, R1997 += 1, R1684 += 1 };
  s0 -> s6 [66, 66] { R2087 += 1, R2029 += 1, R1997 += 1 };
  s0 -> s7 [66, 66] { R2087 += 1, R2029 += 1, R1997 += 1, R1684 += 1 };
  s0 -> s8 [66, 66] { R2087 += 1, R2029 += 1, R1997 += 1 };
  s0 -> s2 [67, 69] { R2087 += 1, R2029 += 1, R1997 += 1 };
  s0 -> s1 [67, 65535] { R2087 += 1, R2029 += 1, R1997 += 1, R1684 += 1 };
  s0 -> s2 [71, 65535] { R2087 += 1, R2029 += 1, R1997 += 1 };
  s1 -> s1 [0, 65] { R2087 += 1, R2029 += 1, R1997 += 1, R1684 += 1 };
  s1 -> s2 [0, 65] { R2087 += 1, R2029 += 1, R1997 += 1 };
  s1 -> s5 [66, 66] { R2087 += 1, R2029 += 1, R1997 += 1, R1684 += 1 };
  s1 -> s6 [66, 66] { R2087 += 1, R2029 += 1, R1997 += 1 };
  s1 -> s7 [66, 66] { R2087 += 1, R2029 += 1, R1997 += 1, R1684 += 1 };
  s1 -> s8 [66, 66] { R2087 += 1, R2029 += 1, R1997 += 1 };
  s1 -> s2 [67, 69] { R2087 += 1, R2029 += 1, R1997 += 1 };
  s1 -> s1 [67, 65535] { R2087 += 1, R2029 += 1, R1997 += 1, R1684 += 1 };
  s1 -> s2 [71, 65535] { R2087 += 1, R2029 += 1, R1997 += 1 };
  s2 -> s2 [0, 65] { R2087 += 1, R2029 += 1, R1997 += 1 };
  s2 -> s9 [0, 65535] { R2087 += 1 };
  s2 -> s2 [0, 65535] { R2087 += 1, R2029 += 1 };
  s2 -> s10 [0, 65535];
  s2 -> s6 [66, 66] { R2087 += 1, R2029 += 1, R1997 += 1 };
  s2 -> s8 [66, 66] { R2087 += 1, R2029 += 1, R1997 += 1 };
  s2 -> s2 [67, 69] { R2087 += 1, R2029 += 1, R1997 += 1 };
  s2 -> s2 [71, 65535] { R2087 += 1, R2029 += 1, R1997 += 1 };
  s3 -> s1 [0, 65] { R2087 += 1, R2029 += 1, R1997 += 1, R1684 += 1 };
  s3 -> s2 [0, 65] { R2087 += 1, R2029 += 1, R1997 += 1 };
  s3 -> s3 [0, 65535] { R2087 += 1, R2029 += 1, R1996 += 1, R1997 += 1 };
  s3 -> s5 [66, 66] { R2087 += 1, R2029 += 1, R1997 += 1, R1684 += 1 };
  s3 -> s6 [66, 66] { R2087 += 1, R2029 += 1, R1997 += 1 };
  s3 -> s7 [66, 66] { R2087 += 1, R2029 += 1, R1997 += 1, R1684 += 1 };
  s3 -> s8 [66, 66] { R2087 += 1, R2029 += 1, R1997 += 1 };
  s3 -> s2 [67, 69] { R2087 += 1, R2029 += 1, R1997 += 1 };
  s3 -> s1 [67, 65535] { R2087 += 1, R2029 += 1, R1997 += 1, R1684 += 1 };
  s3 -> s2 [71, 65535] { R2087 += 1, R2029 += 1, R1997 += 1 };
  s4 -> s1 [0, 65] { R2087 += 1, R2029 += 1, R1997 += 1, R1684 += 1 };
  s4 -> s2 [0, 65] { R2087 += 1, R2029 += 1, R1997 += 1 };
  s4 -> s3 [0, 65535] { R2087 += 1, R2029 += 1, R1996 += 1, R1997 += 1 };
  s4 -> s4 [0, 65535] { R2087 += 1, R2028 += 1, R2029 += 1 };
  s4 -> s5 [66, 66] { R2087 += 1, R2029 += 1, R1997 += 1, R1684 += 1 };
  s4 -> s6 [66, 66] { R2087 += 1, R2029 += 1, R1997 += 1 };
  s4 -> s7 [66, 66] { R2087 += 1, R2029 += 1, R1997 += 1, R1684 += 1 };
  s4 -> s8 [66, 66] { R2087 += 1, R2029 += 1, R1997 += 1 };
  s4 -> s2 [67, 69] { R2087 += 1, R2029 += 1, R1997 += 1 };
  s4 -> s1 [67, 65535] { R2087 += 1, R2029 += 1, R1997 += 1, R1684 += 1 };
  s4 -> s2 [71, 65535] { R2087 += 1, R2029 += 1, R1997 += 1 };
  s5 -> s8 [0, 69] { R2087 += 1, R2029 += 1, R1997 += 1 };
  s5 -> s5 [0, 65535] { R2087 += 1, R2029 += 1, R1997 += 1, R1684 += 1 };
  s5 -> s8 [71, 65535] { R2087 += 1, R2029 += 1, R1997 += 1 };
  s6 -> s9 [0, 65535] { R2087 += 1 };
  s6 -> s6 [0, 65535] { R2087 += 1, R2029 += 1 };
  s6 -> s10 [0, 65535];
  s8 -> s8 [0, 69] { R2087 += 1, R2029 += 1, R1997 += 1 };
  s8 -> s9 [0, 65535] { R2087 += 1 };
  s8 -> s10 [0, 65535];
  s8 -> s8 [0, 65535] { R2087 += 1, R2029 += 1 };
  s8 -> s8 [71, 65535] { R2087 += 1, R2029 += 1, R1997 += 1 };
  s9 -> s9 [0, 65535] { R2087 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  accepting s8, s2, s9, s6, s10;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 65] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s0 -> s2 [0, 65] { R2089 += 1, R2031 += 1, R1999 += 1, R1686 += 1, R1687 += 1 };
  s0 -> s3 [0, 65535] { R2089 += 1, R2030 += 1, R2031 += 1 };
  s0 -> s4 [0, 65535] { R2089 += 1, R2031 += 1, R1998 += 1, R1999 += 1 };
  s0 -> s0 [0, 65535] { R2088 += 1, R2089 += 1 };
  s0 -> s5 [66, 66] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s0 -> s6 [66, 66] { R2089 += 1, R2031 += 1, R1999 += 1, R1686 += 1, R1687 += 1 };
  s0 -> s7 [66, 66] { R2089 += 1, R2031 += 1, R1999 += 1, R1686 += 1, R1687 += 1 };
  s0 -> s8 [66, 66] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s0 -> s1 [67, 69] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s0 -> s2 [67, 65535] { R2089 += 1, R2031 += 1, R1999 += 1, R1686 += 1, R1687 += 1 };
  s0 -> s9 [70, 70] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s0 -> s1 [71, 65535] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s1 -> s1 [0, 65] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s1 -> s5 [66, 66] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s1 -> s8 [66, 66] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s1 -> s1 [67, 69] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s1 -> s9 [70, 70] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s1 -> s1 [71, 65535] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s2 -> s1 [0, 65] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s2 -> s2 [0, 65] { R2089 += 1, R2031 += 1, R1999 += 1, R1686 += 1, R1687 += 1 };
  s2 -> s5 [66, 66] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s2 -> s6 [66, 66] { R2089 += 1, R2031 += 1, R1999 += 1, R1686 += 1, R1687 += 1 };
  s2 -> s7 [66, 66] { R2089 += 1, R2031 += 1, R1999 += 1, R1686 += 1, R1687 += 1 };
  s2 -> s8 [66, 66] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s2 -> s1 [67, 69] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s2 -> s2 [67, 65535] { R2089 += 1, R2031 += 1, R1999 += 1, R1686 += 1, R1687 += 1 };
  s2 -> s9 [70, 70] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s2 -> s1 [71, 65535] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s3 -> s1 [0, 65] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s3 -> s2 [0, 65] { R2089 += 1, R2031 += 1, R1999 += 1, R1686 += 1, R1687 += 1 };
  s3 -> s3 [0, 65535] { R2089 += 1, R2030 += 1, R2031 += 1 };
  s3 -> s4 [0, 65535] { R2089 += 1, R2031 += 1, R1998 += 1, R1999 += 1 };
  s3 -> s5 [66, 66] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s3 -> s6 [66, 66] { R2089 += 1, R2031 += 1, R1999 += 1, R1686 += 1, R1687 += 1 };
  s3 -> s7 [66, 66] { R2089 += 1, R2031 += 1, R1999 += 1, R1686 += 1, R1687 += 1 };
  s3 -> s8 [66, 66] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s3 -> s1 [67, 69] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s3 -> s2 [67, 65535] { R2089 += 1, R2031 += 1, R1999 += 1, R1686 += 1, R1687 += 1 };
  s3 -> s9 [70, 70] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s3 -> s1 [71, 65535] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s4 -> s1 [0, 65] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s4 -> s2 [0, 65] { R2089 += 1, R2031 += 1, R1999 += 1, R1686 += 1, R1687 += 1 };
  s4 -> s4 [0, 65535] { R2089 += 1, R2031 += 1, R1998 += 1, R1999 += 1 };
  s4 -> s5 [66, 66] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s4 -> s6 [66, 66] { R2089 += 1, R2031 += 1, R1999 += 1, R1686 += 1, R1687 += 1 };
  s4 -> s7 [66, 66] { R2089 += 1, R2031 += 1, R1999 += 1, R1686 += 1, R1687 += 1 };
  s4 -> s8 [66, 66] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s4 -> s1 [67, 69] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s4 -> s2 [67, 65535] { R2089 += 1, R2031 += 1, R1999 += 1, R1686 += 1, R1687 += 1 };
  s4 -> s9 [70, 70] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s4 -> s1 [71, 65535] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s6 -> s8 [0, 69] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s6 -> s6 [0, 65535] { R2089 += 1, R2031 += 1, R1999 += 1, R1686 += 1, R1687 += 1 };
  s6 -> s12 [70, 70] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s6 -> s8 [71, 65535] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s8 -> s8 [0, 69] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s8 -> s12 [70, 70] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s8 -> s8 [71, 65535] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s9 -> s9 [0, 65] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s9 -> s9 [0, 65535] { R2089 += 1, R2031 += 1 };
  s9 -> s10 [0, 65535] { R2089 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s12 [66, 66] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s9 -> s13 [66, 66] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s9 -> s9 [67, 65535] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s10 -> s10 [0, 65535] { R2089 += 1 };
  s10 -> s11 [0, 65535];
  s11 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R2089 += 1, R2031 += 1, R1999 += 1, R1687 += 1 };
  s12 -> s10 [0, 65535] { R2089 += 1 };
  s12 -> s11 [0, 65535];
  s12 -> s14 [0, 65535] { R2089 += 1, R2031 += 1 };
  s13 -> s10 [0, 65535] { R2089 += 1 };
  s13 -> s13 [0, 65535] { R2089 += 1, R2031 += 1 };
  s13 -> s11 [0, 65535];
  s14 -> s10 [0, 65535] { R2089 += 1 };
  s14 -> s11 [0, 65535];
  s14 -> s14 [0, 65535] { R2089 += 1, R2031 += 1 };
  accepting s12, s13, s9, s14, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 65] { R2091 += 1, R2033 += 1, R2001 += 1, R1958 += 1, R1959 += 1 };
  s0 -> s2 [0, 65] { R2091 += 1, R2033 += 1, R2001 += 1, R1959 += 1, R1960 += 1 };
  s0 -> s3 [0, 65535] { R2091 += 1, R2033 += 1, R2000 += 1, R2001 += 1 };
  s0 -> s0 [0, 65535] { R2090 += 1, R2091 += 1 };
  s0 -> s4 [0, 65535] { R2091 += 1, R2032 += 1, R2033 += 1 };
  s0 -> s5 [66, 66] { R2091 += 1, R2033 += 1, R2001 += 1, R1958 += 1, R1959 += 1 };
  s0 -> s6 [66, 66] { R2091 += 1, R2033 += 1, R2001 += 1, R1958 += 1, R1959 += 1 };
  s0 -> s7 [66, 66] { R2091 += 1, R2033 += 1, R2001 += 1, R1959 += 1, R1960 += 1 };
  s0 -> s8 [66, 66] { R2091 += 1, R2033 += 1, R2001 += 1, R1959 += 1, R1960 += 1 };
  s0 -> s1 [67, 65535] { R2091 += 1, R2033 += 1, R2001 += 1, R1958 += 1, R1959 += 1 };
  s0 -> s2 [67, 65535] { R2091 += 1, R2033 += 1, R2001 += 1, R1959 += 1, R1960 += 1 };
  s1 -> s1 [0, 65] { R2091 += 1, R2033 += 1, R2001 += 1, R1958 += 1, R1959 += 1 };
  s1 -> s2 [0, 65] { R2091 += 1, R2033 += 1, R2001 += 1, R1959 += 1, R1960 += 1 };
  s1 -> s5 [66, 66] { R2091 += 1, R2033 += 1, R2001 += 1, R1958 += 1, R1959 += 1 };
  s1 -> s6 [66, 66] { R2091 += 1, R2033 += 1, R2001 += 1, R1958 += 1, R1959 += 1 };
  s1 -> s7 [66, 66] { R2091 += 1, R2033 += 1, R2001 += 1, R1959 += 1, R1960 += 1 };
  s1 -> s8 [66, 66] { R2091 += 1, R2033 += 1, R2001 += 1, R1959 += 1, R1960 += 1 };
  s1 -> s1 [67, 65535] { R2091 += 1, R2033 += 1, R2001 += 1, R1958 += 1, R1959 += 1 };
  s1 -> s2 [67, 65535] { R2091 += 1, R2033 += 1, R2001 += 1, R1959 += 1, R1960 += 1 };
  s2 -> s13 [0, 65] { R2091 += 1, R2033 += 1, R2001 += 1 };
  s2 -> s2 [0, 65] { R2091 += 1, R2033 += 1, R2001 += 1, R1959 += 1, R1960 += 1 };
  s2 -> s9 [66, 66] { R2091 += 1, R2033 += 1, R2001 += 1 };
  s2 -> s14 [66, 66] { R2091 += 1, R2033 += 1, R2001 += 1 };
  s2 -> s7 [66, 66] { R2091 += 1, R2033 += 1, R2001 += 1, R1959 += 1, R1960 += 1 };
  s2 -> s8 [66, 66] { R2091 += 1, R2033 += 1, R2001 += 1, R1959 += 1, R1960 += 1 };
  s2 -> s13 [67, 65535] { R2091 += 1, R2033 += 1, R2001 += 1 };
  s2 -> s2 [67, 65535] { R2091 += 1, R2033 += 1, R2001 += 1, R1959 += 1, R1960 += 1 };
  s3 -> s1 [0, 65] { R2091 += 1, R2033 += 1, R2001 += 1, R1958 += 1, R1959 += 1 };
  s3 -> s2 [0, 65] { R2091 += 1, R2033 += 1, R2001 += 1, R1959 += 1, R1960 += 1 };
  s3 -> s3 [0, 65535] { R2091 += 1, R2033 += 1, R2000 += 1, R2001 += 1 };
  s3 -> s5 [66, 66] { R2091 += 1, R2033 += 1, R2001 += 1, R1958 += 1, R1959 += 1 };
  s3 -> s6 [66, 66] { R2091 += 1, R2033 += 1, R2001 += 1, R1958 += 1, R1959 += 1 };
  s3 -> s7 [66, 66] { R2091 += 1, R2033 += 1, R2001 += 1, R1959 += 1, R1960 += 1 };
  s3 -> s8 [66, 66] { R2091 += 1, R2033 += 1, R2001 += 1, R1959 += 1, R1960 += 1 };
  s3 -> s1 [67, 65535] { R2091 += 1, R2033 += 1, R2001 += 1, R1958 += 1, R1959 += 1 };
  s3 -> s2 [67, 65535] { R2091 += 1, R2033 += 1, R2001 += 1, R1959 += 1, R1960 += 1 };
  s4 -> s1 [0, 65] { R2091 += 1, R2033 += 1, R2001 += 1, R1958 += 1, R1959 += 1 };
  s4 -> s2 [0, 65] { R2091 += 1, R2033 += 1, R2001 += 1, R1959 += 1, R1960 += 1 };
  s4 -> s3 [0, 65535] { R2091 += 1, R2033 += 1, R2000 += 1, R2001 += 1 };
  s4 -> s4 [0, 65535] { R2091 += 1, R2032 += 1, R2033 += 1 };
  s4 -> s5 [66, 66] { R2091 += 1, R2033 += 1, R2001 += 1, R1958 += 1, R1959 += 1 };
  s4 -> s6 [66, 66] { R2091 += 1, R2033 += 1, R2001 += 1, R1958 += 1, R1959 += 1 };
  s4 -> s7 [66, 66] { R2091 += 1, R2033 += 1, R2001 += 1, R1959 += 1, R1960 += 1 };
  s4 -> s8 [66, 66] { R2091 += 1, R2033 += 1, R2001 += 1, R1959 += 1, R1960 += 1 };
  s4 -> s1 [67, 65535] { R2091 += 1, R2033 += 1, R2001 += 1, R1958 += 1, R1959 += 1 };
  s4 -> s2 [67, 65535] { R2091 += 1, R2033 += 1, R2001 += 1, R1959 += 1, R1960 += 1 };
  s6 -> s6 [0, 65535] { R2091 += 1, R2033 += 1, R2001 += 1, R1958 += 1, R1959 += 1 };
  s6 -> s8 [0, 65535] { R2091 += 1, R2033 += 1, R2001 += 1, R1959 += 1, R1960 += 1 };
  s8 -> s9 [0, 65535] { R2091 += 1, R2033 += 1, R2001 += 1 };
  s8 -> s8 [0, 65535] { R2091 += 1, R2033 += 1, R2001 += 1, R1959 += 1, R1960 += 1 };
  s9 -> s10 [0, 65535];
  s9 -> s11 [0, 65535] { R2091 += 1, R2033 += 1 };
  s9 -> s9 [0, 65535] { R2091 += 1, R2033 += 1, R2001 += 1 };
  s9 -> s12 [0, 65535] { R2091 += 1 };
  s10 -> s10 [0, 65535];
  s11 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R2091 += 1, R2033 += 1 };
  s11 -> s12 [0, 65535] { R2091 += 1 };
  s12 -> s10 [0, 65535];
  s12 -> s12 [0, 65535] { R2091 += 1 };
  s13 -> s13 [0, 65] { R2091 += 1, R2033 += 1, R2001 += 1 };
  s13 -> s10 [0, 65535];
  s13 -> s13 [0, 65535] { R2091 += 1, R2033 += 1 };
  s13 -> s12 [0, 65535] { R2091 += 1 };
  s13 -> s9 [66, 66] { R2091 += 1, R2033 += 1, R2001 += 1 };
  s13 -> s14 [66, 66] { R2091 += 1, R2033 += 1, R2001 += 1 };
  s13 -> s13 [67, 65535] { R2091 += 1, R2033 += 1, R2001 += 1 };
  s14 -> s10 [0, 65535];
  s14 -> s14 [0, 65535] { R2091 += 1, R2033 += 1 };
  s14 -> s12 [0, 65535] { R2091 += 1 };
  accepting s12, s13, s9, s14, s10, s11;
};
};
synchronised {  // Automata constraining P37
automaton P37_0 {
  init s0;
  s0 -> s1 [9, 9];
  accepting s1;
};
};
synchronised {  // Automata constraining P38
automaton P38_0 {
  init s0;
  s0 -> s1 [10, 10];
  accepting s1;
};
};
synchronised {  // Automata constraining P36
automaton P36_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
constraint R2 = R2033 && R3 - R2091 = 1 && R22 - R2033 = -1 && R23 = R2033 && R24 - R2033 = -1 && R25 = R2033 && R26 = 0 && R27 = 1 && R28 = 0 && R29 = 1 && R30 = R2091 && R31 - R2091 = 1 && R32 = R2091 && R33 - R2091 = 1 && R34 = 0 && R35 = 1 && R36 = 0 && R37 = 1 && R42 + R57 + R56 + -1*R1689 + -1*R1687 - R47 = 0 && R46 + R1688 + R1686 = 0 && R1992 = 0 && R1993 = 0 && R1996 = 0 && R1997 = 0 && R1998 = 0 && R1999 = 0 && R2000 = 0 && R2001 = 0 && R2002 = 0 && R2003 = R2033 && R2004 = 0 && R2005 = R2033 && R2006 = 0 && R2007 = R2033 && R2008 = 0 && R2009 = R2033 && R2010 = 0 && R2011 = R2033 && R2012 = 0 && R2013 = R2033 && R2014 = 0 && R2015 = R2033 && R2016 = 0 && R2017 = R2033 && R2018 = 0 && R2019 = R2033 && R2020 = 0 && R2021 = R2033 && R2022 = 0 && R2023 = R2033 && R2024 = 0 && R2025 = R2033 && R2026 = 0 && R2027 = R2033 && R2028 = 0 && R2029 = R2033 && R2030 = 0 && R2031 = R2033 && R2032 = 0 && R2034 = 0 && R2035 = R2091 && R2036 = 0 && R2037 = R2091 && R2038 = 0 && R2039 = R2091 && R2040 = 0 && R2041 = R2091 && R2042 = 0 && R2043 = R2091 && R2044 = 0 && R2045 = R2091 && R2046 = 0 && R2047 = R2091 && R2048 = 0 && R2049 = R2091 && R2050 = 0 && R2051 = R2091 && R2052 = 0 && R2053 = R2091 && R2054 = 0 && R2055 = R2091 && R2056 = 0 && R2057 = R2091 && R2058 = 0 && R2059 = R2091 && R2060 = 0 && R2061 = R2091 && R2062 = 0 && R2063 = R2091 && R2064 = 0 && R2065 = R2091 && R2066 = 0 && R2067 = R2091 && R2068 = 0 && R2069 = R2091 && R2070 = 0 && R2071 = R2091 && R2072 = 0 && R2073 = R2091 && R2074 = 0 && R2075 = R2091 && R2076 = 0 && R2077 = R2091 && R2078 = 0 && R2079 = R2091 && R2080 = 0 && R2081 = R2091 && R2082 = 0 && R2083 = R2091 && R2084 = 0 && R2085 = R2091 && R2086 = 0 && R2087 = R2091 && R2088 = 0 && R2089 = R2091 && R2090 = 0 && -1 < R1 && R11 < 1 && R14 < 1 && R17 < 1 && R44 + R1685 + R1684 < 1 && -1*R1689 + -1*R1687 - R47 < 1 && 0 < R2033 && -1 < R2091 && (R1 != 0 || R19 = 0 || (R1964 = 0 && R1965 = 0)) && (R1 != 0 || R19 = 0 || (R1966 = 0 && R1967 = 0)) && (R1 != 0 || R19 = 0 || (R1968 = 0 && R1969 = 0)) && (R1 != 0 || R19 = 0 || (R1970 = 0 && R1971 = 0)) && (R1 != 0 || R19 = 0 || (R1972 = 0 && R1973 = 0)) && (R1 != 0 || R19 = 0 || (R1974 = 0 && R1975 = 0)) && (R1 != 0 || R19 = 0 || (R1976 = 0 && R1977 = 0)) && (R47 + R1689 + R1687 != 0 || R52 + R1963 + R1960 = 0 || (R50 + R1961 + R1958 = 0 && R51 + R1962 + R1959 = 0)) && (R50 + R1961 + R1958 != 0 || R47 + R1689 + R1687 + -1*R1962 + -1*R1959 - R51 = 0 || R47 + R1689 + R1687 < 1) && (R1964 != 0 || R1 = R1965 || R1 < 1) && (R1966 != 0 || R1 = R1967 || R1 < 1) && (R1968 != 0 || R1 = R1969 || R1 < 1) && (R1970 != 0 || R1 = R1971 || R1 < 1) && (R1972 != 0 || R1 = R1973 || R1 < 1) && (R1974 != 0 || R1 = R1975 || R1 < 1) && (R1976 != 0 || R1 = R1977 || R1 < 1) && (R20 = 0 || (R1990 = 0 && R1991 = 0)) && (R20 = 0 || (R1994 = 0 && R1995 = 0)) && (R21 = 0 || (R1978 = 0 && R1979 = 0)) && (R21 = 0 || (R1980 = 0 && R1981 = 0)) && (R21 = 0 || (R1982 = 0 && R1983 = 0)) && (R21 = 0 || (R1984 = 0 && R1985 = 0)) && (R21 = 0 || (R1986 = 0 && R1987 = 0)) && (R21 = 0 || (R1988 = 0 && R1989 = 0)) && (R50 + R1961 + R1958 = 0 || R47 + R1689 + R1687 < 1) && (R1964 = 0 || R1 < 1) && (R1966 = 0 || R1 < 1) && (R1968 = 0 || R1 < 1) && (R1970 = 0 || R1 < 1) && (R1972 = 0 || R1 < 1) && (R1974 = 0 || R1 < 1) && (R1976 = 0 || R1 < 1);
// End of Parikh automata intersection problem
