// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R14, R1684, R1685, R17, R19, R2, R20, R2092, R2093, R2094, R2095, R2096, R2097, R2098, R2099, R21, R2100, R2101, R2102, R2103, R2104, R2105, R2106, R2107, R2108, R2109, R2110, R2111, R2112, R2113, R2114, R2115, R2116, R2117, R2118, R2119, R2120, R2121, R2122, R2123, R2124, R2125, R2126, R2127, R2128, R2129, R2130, R2131, R2132, R2133, R2134, R2135, R2136, R2137, R2138, R2139, R2140, R2141, R2142, R2143, R2144, R2145, R2146, R2147, R2148, R2149, R2150, R2151, R2152, R2153, R2154, R2155, R2156, R2157, R2158, R2159, R2160, R2161, R2162, R2163, R2164, R2165, R2166, R2167, R2168, R2169, R2170, R2171, R2172, R2173, R2174, R2175, R2176, R2177, R2178, R2179, R2180, R2181, R2182, R2183, R2184, R2185, R2186, R2187, R2188, R2189, R2190, R2191, R2192, R2193, R2194, R2195, R2196, R2197, R2198, R2199, R22, R2200, R2201, R2202, R2203, R2204, R2205, R2206, R2207, R2208, R2209, R2210, R2211, R2212, R2213, R2214, R2215, R2216, R2217, R2218, R2219, R2220, R2221, R2222, R2223, R2224, R2225, R2226, R2227, R2228, R2229, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R33, R34, R35, R36, R37, R4, R42, R44, R46, R47, R5, R50, R51, R52, R56, R57, R6, R7;
synchronised {  // Automata constraining P9
automaton P9_0 {
  init s0;
  s0 -> s1 [98, 98];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R17 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R30 += 1, R31 += 1 };
  s0 -> s1 [13, 13] { R31 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s0 [0, 65535] { R32 += 1, R33 += 1 };
  s0 -> s1 [0, 65535] { R33 += 1, R6 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R33 += 1, R6 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R35 += 1 };
  s0 -> s0 [0, 65535] { R34 += 1, R35 += 1 };
  s0 -> s2 [9, 13] { R35 += 1 };
  s0 -> s1 [14, 31] { R35 += 1 };
  s0 -> s2 [32, 32] { R35 += 1 };
  s0 -> s1 [33, 65535] { R35 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R35 += 1 };
  s2 -> s1 [0, 65535] { R35 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 65535] { R37 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R36 += 1, R37 += 1 };
  s1 -> s1 [0, 65535] { R37 += 1, R7 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R2173 += 1 };
  s0 -> s0 [0, 65535] { R2172 += 1, R2173 += 1 };
  s0 -> s2 [66, 66] { R2173 += 1 };
  s0 -> s1 [67, 65535] { R2173 += 1 };
  s1 -> s1 [0, 64] { R2173 += 1 };
  s1 -> s2 [66, 66] { R2173 += 1 };
  s1 -> s1 [67, 65535] { R2173 += 1 };
  s2 -> s2 [0, 64] { R2173 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [66, 65535] { R2173 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R2175 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R2174 += 1, R2175 += 1 };
  s1 -> s1 [0, 65535] { R2175 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 65] { R2177 += 1 };
  s0 -> s2 [0, 65535] { R2177 += 1, R14 += 1 };
  s0 -> s0 [0, 65535] { R2176 += 1, R2177 += 1 };
  s0 -> s3 [66, 66] { R2177 += 1 };
  s0 -> s1 [67, 65535] { R2177 += 1 };
  s1 -> s1 [0, 65] { R2177 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [66, 66] { R2177 += 1 };
  s1 -> s1 [67, 65535] { R2177 += 1 };
  s2 -> s1 [0, 65] { R2177 += 1 };
  s2 -> s2 [0, 65535] { R2177 += 1, R14 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [66, 66] { R2177 += 1 };
  s2 -> s1 [67, 65535] { R2177 += 1 };
  s3 -> s3 [0, 65535] { R2177 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R2179 += 1, R23 += 1 };
  s0 -> s2 [0, 65535] { R2179 += 1, R22 += 1, R23 += 1 };
  s0 -> s0 [0, 65535] { R2178 += 1, R2179 += 1 };
  s0 -> s3 [9, 13] { R2179 += 1, R23 += 1 };
  s0 -> s1 [14, 31] { R2179 += 1, R23 += 1 };
  s0 -> s3 [32, 32] { R2179 += 1, R23 += 1 };
  s0 -> s1 [33, 65535] { R2179 += 1, R23 += 1 };
  s1 -> s5 [0, 65535] { R2179 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R2179 += 1, R23 += 1 };
  s2 -> s1 [0, 8] { R2179 += 1, R23 += 1 };
  s2 -> s2 [0, 65535] { R2179 += 1, R22 += 1, R23 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [9, 13] { R2179 += 1, R23 += 1 };
  s2 -> s1 [14, 31] { R2179 += 1, R23 += 1 };
  s2 -> s3 [32, 32] { R2179 += 1, R23 += 1 };
  s2 -> s1 [33, 65535] { R2179 += 1, R23 += 1 };
  s3 -> s1 [0, 65535] { R2179 += 1, R23 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2179 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 65535] { R2181 += 1, R24 += 1, R25 += 1 };
  s0 -> s2 [0, 65535] { R2181 += 1, R25 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R2180 += 1, R2181 += 1 };
  s1 -> s1 [0, 65535] { R2181 += 1, R24 += 1, R25 += 1 };
  s1 -> s2 [0, 65535] { R2181 += 1, R25 += 1, R4 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2181 += 1, R25 += 1, R4 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R2181 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2181 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R2183 += 1, R27 += 1 };
  s0 -> s0 [0, 65535] { R2182 += 1, R2183 += 1 };
  s0 -> s2 [0, 65535] { R2183 += 1, R26 += 1, R27 += 1 };
  s0 -> s3 [9, 13] { R2183 += 1, R27 += 1 };
  s0 -> s1 [14, 31] { R2183 += 1, R27 += 1 };
  s0 -> s3 [32, 32] { R2183 += 1, R27 += 1 };
  s0 -> s1 [33, 65535] { R2183 += 1, R27 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R2183 += 1, R27 += 1 };
  s1 -> s5 [0, 65535] { R2183 += 1 };
  s2 -> s1 [0, 8] { R2183 += 1, R27 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2183 += 1, R26 += 1, R27 += 1 };
  s2 -> s3 [9, 13] { R2183 += 1, R27 += 1 };
  s2 -> s1 [14, 31] { R2183 += 1, R27 += 1 };
  s2 -> s3 [32, 32] { R2183 += 1, R27 += 1 };
  s2 -> s1 [33, 65535] { R2183 += 1, R27 += 1 };
  s3 -> s1 [0, 65535] { R2183 += 1, R27 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2183 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 65535] { R2185 += 1, R28 += 1, R29 += 1 };
  s0 -> s2 [0, 65535] { R2185 += 1, R29 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R2184 += 1, R2185 += 1 };
  s1 -> s1 [0, 65535] { R2185 += 1, R28 += 1, R29 += 1 };
  s1 -> s2 [0, 65535] { R2185 += 1, R29 += 1, R5 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2185 += 1, R29 += 1, R5 += 1 };
  s2 -> s3 [0, 65535] { R2185 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2185 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 65535] { R2187 += 1, R2116 += 1, R2117 += 1 };
  s0 -> s2 [0, 65535] { R2187 += 1, R2117 += 1, R21 += 1 };
  s0 -> s0 [0, 65535] { R2186 += 1, R2187 += 1 };
  s1 -> s1 [0, 65535] { R2187 += 1, R2116 += 1, R2117 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R2187 += 1, R2117 += 1, R21 += 1 };
  s2 -> s3 [0, 65535] { R2187 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2187 += 1, R2117 += 1, R21 += 1 };
  s3 -> s3 [0, 65535] { R2187 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 65] { R2189 += 1, R2119 += 1 };
  s0 -> s2 [0, 65535] { R2189 += 1, R2118 += 1, R2119 += 1 };
  s0 -> s0 [0, 65535] { R2188 += 1, R2189 += 1 };
  s0 -> s3 [66, 66] { R2189 += 1, R2119 += 1 };
  s0 -> s4 [66, 66] { R2189 += 1, R2119 += 1 };
  s0 -> s1 [71, 65535] { R2189 += 1, R2119 += 1 };
  s1 -> s1 [0, 65] { R2189 += 1, R2119 += 1 };
  s1 -> s1 [0, 65535] { R2189 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R2189 += 1, R2119 += 1 };
  s1 -> s4 [66, 66] { R2189 += 1, R2119 += 1 };
  s1 -> s1 [71, 65535] { R2189 += 1, R2119 += 1 };
  s2 -> s1 [0, 65] { R2189 += 1, R2119 += 1 };
  s2 -> s2 [0, 65535] { R2189 += 1, R2118 += 1, R2119 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R2189 += 1, R2119 += 1 };
  s2 -> s4 [66, 66] { R2189 += 1, R2119 += 1 };
  s2 -> s1 [71, 65535] { R2189 += 1, R2119 += 1 };
  s3 -> s3 [0, 65535] { R2189 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 66] { R2189 += 1, R2119 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2189 += 1 };
  s4 -> s4 [71, 65535] { R2189 += 1, R2119 += 1 };
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 65] { R2191 += 1, R2121 += 1, R42 += 1 };
  s0 -> s0 [0, 65535] { R2190 += 1, R2191 += 1 };
  s0 -> s2 [0, 65535] { R2191 += 1, R2120 += 1, R2121 += 1 };
  s0 -> s3 [66, 66] { R2191 += 1, R2121 += 1, R42 += 1 };
  s0 -> s4 [66, 66] { R2191 += 1, R2121 += 1, R42 += 1 };
  s0 -> s1 [67, 65535] { R2191 += 1, R2121 += 1, R42 += 1 };
  s1 -> s1 [0, 65] { R2191 += 1, R2121 += 1, R42 += 1 };
  s1 -> s1 [0, 65535] { R2191 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R2191 += 1, R2121 += 1, R42 += 1 };
  s1 -> s4 [66, 66] { R2191 += 1, R2121 += 1, R42 += 1 };
  s1 -> s1 [67, 65535] { R2191 += 1, R2121 += 1, R42 += 1 };
  s2 -> s1 [0, 65] { R2191 += 1, R2121 += 1, R42 += 1 };
  s2 -> s2 [0, 65535] { R2191 += 1, R2120 += 1, R2121 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R2191 += 1, R2121 += 1, R42 += 1 };
  s2 -> s4 [66, 66] { R2191 += 1, R2121 += 1, R42 += 1 };
  s2 -> s1 [67, 65535] { R2191 += 1, R2121 += 1, R42 += 1 };
  s3 -> s6 [0, 65535] { R2191 += 1 };
  s3 -> s3 [0, 65535] { R2191 += 1, R2121 += 1, R42 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2191 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2191 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 65] { R2193 += 1, R2123 += 1, R44 += 1 };
  s0 -> s2 [0, 65535] { R2193 += 1, R2122 += 1, R2123 += 1 };
  s0 -> s0 [0, 65535] { R2192 += 1, R2193 += 1 };
  s0 -> s3 [66, 66] { R2193 += 1, R2123 += 1, R44 += 1 };
  s0 -> s4 [66, 66] { R2193 += 1, R2123 += 1, R44 += 1 };
  s0 -> s1 [67, 65535] { R2193 += 1, R2123 += 1, R44 += 1 };
  s1 -> s1 [0, 65] { R2193 += 1, R2123 += 1, R44 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2193 += 1 };
  s1 -> s3 [66, 66] { R2193 += 1, R2123 += 1, R44 += 1 };
  s1 -> s4 [66, 66] { R2193 += 1, R2123 += 1, R44 += 1 };
  s1 -> s1 [67, 65535] { R2193 += 1, R2123 += 1, R44 += 1 };
  s2 -> s1 [0, 65] { R2193 += 1, R2123 += 1, R44 += 1 };
  s2 -> s2 [0, 65535] { R2193 += 1, R2122 += 1, R2123 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R2193 += 1, R2123 += 1, R44 += 1 };
  s2 -> s4 [66, 66] { R2193 += 1, R2123 += 1, R44 += 1 };
  s2 -> s1 [67, 65535] { R2193 += 1, R2123 += 1, R44 += 1 };
  s3 -> s3 [0, 65535] { R2193 += 1, R2123 += 1, R44 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R2193 += 1 };
  s4 -> s4 [0, 65535] { R2193 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2193 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65] { R2195 += 1, R2125 += 1, R46 += 1, R47 += 1 };
  s0 -> s2 [0, 65535] { R2195 += 1, R2124 += 1, R2125 += 1 };
  s0 -> s0 [0, 65535] { R2194 += 1, R2195 += 1 };
  s0 -> s3 [66, 66] { R2195 += 1, R2125 += 1, R46 += 1, R47 += 1 };
  s0 -> s4 [66, 66] { R2195 += 1, R2125 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [67, 65535] { R2195 += 1, R2125 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65] { R2195 += 1, R2125 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65535] { R2195 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [66, 66] { R2195 += 1, R2125 += 1, R46 += 1, R47 += 1 };
  s1 -> s4 [66, 66] { R2195 += 1, R2125 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [67, 65535] { R2195 += 1, R2125 += 1, R46 += 1, R47 += 1 };
  s2 -> s1 [0, 65] { R2195 += 1, R2125 += 1, R46 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R2195 += 1, R2124 += 1, R2125 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [66, 66] { R2195 += 1, R2125 += 1, R46 += 1, R47 += 1 };
  s2 -> s4 [66, 66] { R2195 += 1, R2125 += 1, R46 += 1, R47 += 1 };
  s2 -> s1 [67, 65535] { R2195 += 1, R2125 += 1, R46 += 1, R47 += 1 };
  s3 -> s3 [0, 65535] { R2195 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R2195 += 1 };
  s4 -> s4 [0, 65535] { R2195 += 1, R2125 += 1, R46 += 1, R47 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R2195 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 65] { R2197 += 1, R2127 += 1, R50 += 1, R51 += 1 };
  s0 -> s2 [0, 65535] { R2197 += 1, R2126 += 1, R2127 += 1 };
  s0 -> s0 [0, 65535] { R2196 += 1, R2197 += 1 };
  s0 -> s3 [66, 66] { R2197 += 1, R2127 += 1, R50 += 1, R51 += 1 };
  s0 -> s4 [66, 66] { R2197 += 1, R2127 += 1, R50 += 1, R51 += 1 };
  s0 -> s1 [67, 65535] { R2197 += 1, R2127 += 1, R50 += 1, R51 += 1 };
  s1 -> s1 [0, 65] { R2197 += 1, R2127 += 1, R50 += 1, R51 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2197 += 1 };
  s1 -> s3 [66, 66] { R2197 += 1, R2127 += 1, R50 += 1, R51 += 1 };
  s1 -> s4 [66, 66] { R2197 += 1, R2127 += 1, R50 += 1, R51 += 1 };
  s1 -> s1 [67, 65535] { R2197 += 1, R2127 += 1, R50 += 1, R51 += 1 };
  s2 -> s1 [0, 65] { R2197 += 1, R2127 += 1, R50 += 1, R51 += 1 };
  s2 -> s2 [0, 65535] { R2197 += 1, R2126 += 1, R2127 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R2197 += 1, R2127 += 1, R50 += 1, R51 += 1 };
  s2 -> s4 [66, 66] { R2197 += 1, R2127 += 1, R50 += 1, R51 += 1 };
  s2 -> s1 [67, 65535] { R2197 += 1, R2127 += 1, R50 += 1, R51 += 1 };
  s3 -> s3 [0, 65535] { R2197 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2197 += 1, R2127 += 1, R50 += 1, R51 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R2197 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2197 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 65] { R2199 += 1, R2141 += 1 };
  s0 -> s0 [0, 65535] { R2198 += 1, R2199 += 1 };
  s0 -> s2 [0, 65535] { R2199 += 1, R2140 += 1, R2141 += 1 };
  s0 -> s3 [66, 66] { R2199 += 1, R2141 += 1 };
  s0 -> s1 [67, 65535] { R2199 += 1, R2141 += 1 };
  s1 -> s1 [0, 65] { R2199 += 1, R2141 += 1 };
  s1 -> s3 [66, 66] { R2199 += 1, R2141 += 1 };
  s1 -> s1 [67, 65535] { R2199 += 1, R2141 += 1 };
  s2 -> s1 [0, 65] { R2199 += 1, R2141 += 1 };
  s2 -> s2 [0, 65535] { R2199 += 1, R2140 += 1, R2141 += 1 };
  s2 -> s3 [66, 66] { R2199 += 1, R2141 += 1 };
  s2 -> s1 [67, 65535] { R2199 += 1, R2141 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2199 += 1, R2141 += 1 };
  s3 -> s5 [0, 65535] { R2199 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2199 += 1 };
  accepting s3, s4, s5;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R2201 += 1, R2143 += 1, R1 += 1 };
  s0 -> s0 [0, 65535] { R2200 += 1, R2201 += 1 };
  s0 -> s2 [0, 65535] { R2201 += 1, R2142 += 1, R2143 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2201 += 1, R2143 += 1, R1 += 1 };
  s1 -> s4 [0, 65535] { R2201 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R2201 += 1, R2143 += 1, R1 += 1 };
  s2 -> s2 [0, 65535] { R2201 += 1, R2142 += 1, R2143 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2201 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 65] { R2203 += 1, R2145 += 1 };
  s0 -> s2 [0, 65535] { R2203 += 1, R2145 += 1, R11 += 1 };
  s0 -> s0 [0, 65535] { R2202 += 1, R2203 += 1 };
  s0 -> s3 [0, 65535] { R2203 += 1, R2144 += 1, R2145 += 1 };
  s0 -> s4 [66, 66] { R2203 += 1, R2145 += 1 };
  s0 -> s1 [67, 65535] { R2203 += 1, R2145 += 1 };
  s1 -> s1 [0, 65] { R2203 += 1, R2145 += 1 };
  s1 -> s1 [0, 65535] { R2203 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s4 [66, 66] { R2203 += 1, R2145 += 1 };
  s1 -> s1 [67, 65535] { R2203 += 1, R2145 += 1 };
  s2 -> s1 [0, 65] { R2203 += 1, R2145 += 1 };
  s2 -> s2 [0, 65535] { R2203 += 1, R2145 += 1, R11 += 1 };
  s2 -> s6 [0, 65535] { R2203 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s4 [66, 66] { R2203 += 1, R2145 += 1 };
  s2 -> s1 [67, 65535] { R2203 += 1, R2145 += 1 };
  s3 -> s1 [0, 65] { R2203 += 1, R2145 += 1 };
  s3 -> s2 [0, 65535] { R2203 += 1, R2145 += 1, R11 += 1 };
  s3 -> s3 [0, 65535] { R2203 += 1, R2144 += 1, R2145 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s4 [66, 66] { R2203 += 1, R2145 += 1 };
  s3 -> s1 [67, 65535] { R2203 += 1, R2145 += 1 };
  s4 -> s4 [0, 65535] { R2203 += 1, R2145 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2203 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s5, s2, s6, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65] { R2205 += 1, R2147 += 1, R2103 += 1 };
  s0 -> s2 [0, 65535] { R2205 += 1, R2146 += 1, R2147 += 1 };
  s0 -> s0 [0, 65535] { R2204 += 1, R2205 += 1 };
  s0 -> s3 [0, 65535] { R2205 += 1, R2147 += 1, R2102 += 1, R2103 += 1 };
  s0 -> s1 [67, 65535] { R2205 += 1, R2147 += 1, R2103 += 1 };
  s1 -> s1 [0, 65] { R2205 += 1, R2147 += 1, R2103 += 1 };
  s1 -> s1 [0, 65535] { R2205 += 1, R2147 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R2205 += 1 };
  s1 -> s1 [67, 65535] { R2205 += 1, R2147 += 1, R2103 += 1 };
  s2 -> s1 [0, 65] { R2205 += 1, R2147 += 1, R2103 += 1 };
  s2 -> s2 [0, 65535] { R2205 += 1, R2146 += 1, R2147 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R2205 += 1, R2147 += 1, R2102 += 1, R2103 += 1 };
  s2 -> s1 [67, 65535] { R2205 += 1, R2147 += 1, R2103 += 1 };
  s3 -> s1 [0, 65] { R2205 += 1, R2147 += 1, R2103 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2205 += 1, R2147 += 1, R2102 += 1, R2103 += 1 };
  s3 -> s5 [0, 65535] { R2205 += 1 };
  s3 -> s1 [67, 65535] { R2205 += 1, R2147 += 1, R2103 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2205 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 65535] { R2207 += 1, R2149 += 1, R2105 += 1, R19 += 1 };
  s0 -> s0 [0, 65535] { R2206 += 1, R2207 += 1 };
  s0 -> s2 [0, 65535] { R2207 += 1, R2149 += 1, R2104 += 1, R2105 += 1 };
  s0 -> s3 [0, 65535] { R2207 += 1, R2148 += 1, R2149 += 1 };
  s1 -> s6 [0, 65535] { R2207 += 1, R2149 += 1 };
  s1 -> s1 [0, 65535] { R2207 += 1, R2149 += 1, R2105 += 1, R19 += 1 };
  s1 -> s5 [0, 65535] { R2207 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R2207 += 1, R2149 += 1, R2105 += 1, R19 += 1 };
  s2 -> s2 [0, 65535] { R2207 += 1, R2149 += 1, R2104 += 1, R2105 += 1 };
  s2 -> s5 [0, 65535] { R2207 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R2207 += 1, R2149 += 1, R2105 += 1, R19 += 1 };
  s3 -> s2 [0, 65535] { R2207 += 1, R2149 += 1, R2104 += 1, R2105 += 1 };
  s3 -> s3 [0, 65535] { R2207 += 1, R2148 += 1, R2149 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2207 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R2207 += 1, R2149 += 1 };
  s6 -> s5 [0, 65535] { R2207 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 66] { R2209 += 1, R2151 += 1, R2107 += 1 };
  s0 -> s2 [0, 65535] { R2209 += 1, R2151 += 1, R2106 += 1, R2107 += 1 };
  s0 -> s3 [0, 65535] { R2209 += 1, R2150 += 1, R2151 += 1 };
  s0 -> s0 [0, 65535] { R2208 += 1, R2209 += 1 };
  s0 -> s1 [70, 65535] { R2209 += 1, R2151 += 1, R2107 += 1 };
  s1 -> s1 [0, 66] { R2209 += 1, R2151 += 1, R2107 += 1 };
  s1 -> s5 [0, 65535] { R2209 += 1 };
  s1 -> s1 [0, 65535] { R2209 += 1, R2151 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [70, 65535] { R2209 += 1, R2151 += 1, R2107 += 1 };
  s2 -> s1 [0, 66] { R2209 += 1, R2151 += 1, R2107 += 1 };
  s2 -> s2 [0, 65535] { R2209 += 1, R2151 += 1, R2106 += 1, R2107 += 1 };
  s2 -> s5 [0, 65535] { R2209 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [70, 65535] { R2209 += 1, R2151 += 1, R2107 += 1 };
  s3 -> s1 [0, 66] { R2209 += 1, R2151 += 1, R2107 += 1 };
  s3 -> s2 [0, 65535] { R2209 += 1, R2151 += 1, R2106 += 1, R2107 += 1 };
  s3 -> s3 [0, 65535] { R2209 += 1, R2150 += 1, R2151 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [70, 65535] { R2209 += 1, R2151 += 1, R2107 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2209 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R2210 += 1, R2211 += 1 };
  s0 -> s1 [0, 65535] { R2211 += 1, R2152 += 1, R2153 += 1 };
  s0 -> s2 [0, 65535] { R2211 += 1, R2153 += 1, R2109 += 1, R57 += 1 };
  s0 -> s3 [0, 65535] { R2211 += 1, R2153 += 1, R2108 += 1, R2109 += 1 };
  s1 -> s1 [0, 65535] { R2211 += 1, R2152 += 1, R2153 += 1 };
  s1 -> s2 [0, 65535] { R2211 += 1, R2153 += 1, R2109 += 1, R57 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R2211 += 1, R2153 += 1, R2108 += 1, R2109 += 1 };
  s2 -> s6 [0, 65535] { R2211 += 1, R2153 += 1 };
  s2 -> s4 [0, 65535] { R2211 += 1 };
  s2 -> s2 [0, 65535] { R2211 += 1, R2153 += 1, R2109 += 1, R57 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R2211 += 1 };
  s3 -> s2 [0, 65535] { R2211 += 1, R2153 += 1, R2109 += 1, R57 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2211 += 1, R2153 += 1, R2108 += 1, R2109 += 1 };
  s4 -> s4 [0, 65535] { R2211 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2211 += 1, R2153 += 1 };
  s6 -> s4 [0, 65535] { R2211 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 69] { R2213 += 1, R2155 += 1, R2111 += 1 };
  s0 -> s2 [0, 65535] { R2213 += 1, R2155 += 1, R2110 += 1, R2111 += 1 };
  s0 -> s0 [0, 65535] { R2212 += 1, R2213 += 1 };
  s0 -> s3 [0, 65535] { R2213 += 1, R2154 += 1, R2155 += 1 };
  s0 -> s1 [71, 65535] { R2213 += 1, R2155 += 1, R2111 += 1 };
  s1 -> s1 [0, 69] { R2213 += 1, R2155 += 1, R2111 += 1 };
  s1 -> s1 [0, 65535] { R2213 += 1, R2155 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R2213 += 1 };
  s1 -> s1 [71, 65535] { R2213 += 1, R2155 += 1, R2111 += 1 };
  s2 -> s1 [0, 69] { R2213 += 1, R2155 += 1, R2111 += 1 };
  s2 -> s2 [0, 65535] { R2213 += 1, R2155 += 1, R2110 += 1, R2111 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R2213 += 1 };
  s2 -> s1 [71, 65535] { R2213 += 1, R2155 += 1, R2111 += 1 };
  s3 -> s1 [0, 69] { R2213 += 1, R2155 += 1, R2111 += 1 };
  s3 -> s2 [0, 65535] { R2213 += 1, R2155 += 1, R2110 += 1, R2111 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2213 += 1, R2154 += 1, R2155 += 1 };
  s3 -> s1 [71, 65535] { R2213 += 1, R2155 += 1, R2111 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2213 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R2215 += 1, R2157 += 1, R2112 += 1, R2113 += 1 };
  s0 -> s2 [0, 65535] { R2215 += 1, R2156 += 1, R2157 += 1 };
  s0 -> s3 [0, 65535] { R2215 += 1, R2157 += 1, R2113 += 1 };
  s0 -> s0 [0, 65535] { R2214 += 1, R2215 += 1 };
  s1 -> s4 [0, 65535] { R2215 += 1 };
  s1 -> s1 [0, 65535] { R2215 += 1, R2157 += 1, R2112 += 1, R2113 += 1 };
  s1 -> s3 [0, 65535] { R2215 += 1, R2157 += 1, R2113 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R2215 += 1, R2157 += 1, R2112 += 1, R2113 += 1 };
  s2 -> s2 [0, 65535] { R2215 += 1, R2156 += 1, R2157 += 1 };
  s2 -> s3 [0, 65535] { R2215 += 1, R2157 += 1, R2113 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R2215 += 1 };
  s3 -> s3 [0, 65535] { R2215 += 1, R2157 += 1, R2113 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R2215 += 1, R2157 += 1 };
  s4 -> s4 [0, 65535] { R2215 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R2215 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2215 += 1, R2157 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R2217 += 1, R2158 += 1, R2159 += 1 };
  s0 -> s0 [0, 65535] { R2216 += 1, R2217 += 1 };
  s0 -> s2 [0, 65535] { R2217 += 1, R2159 += 1, R2114 += 1, R2115 += 1 };
  s0 -> s3 [0, 65535] { R2217 += 1, R2159 += 1, R2115 += 1, R2100 += 1, R2101 += 1 };
  s0 -> s4 [0, 65535] { R2217 += 1, R2159 += 1, R2115 += 1, R2099 += 1, R2100 += 1 };
  s1 -> s1 [0, 65535] { R2217 += 1, R2158 += 1, R2159 += 1 };
  s1 -> s2 [0, 65535] { R2217 += 1, R2159 += 1, R2114 += 1, R2115 += 1 };
  s1 -> s3 [0, 65535] { R2217 += 1, R2159 += 1, R2115 += 1, R2100 += 1, R2101 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s4 [0, 65535] { R2217 += 1, R2159 += 1, R2115 += 1, R2099 += 1, R2100 += 1 };
  s2 -> s5 [0, 65535] { R2217 += 1 };
  s2 -> s2 [0, 65535] { R2217 += 1, R2159 += 1, R2114 += 1, R2115 += 1 };
  s2 -> s3 [0, 65535] { R2217 += 1, R2159 += 1, R2115 += 1, R2100 += 1, R2101 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [0, 65535] { R2217 += 1, R2159 += 1, R2115 += 1, R2099 += 1, R2100 += 1 };
  s3 -> s5 [0, 65535] { R2217 += 1 };
  s3 -> s3 [0, 65535] { R2217 += 1, R2159 += 1, R2115 += 1, R2100 += 1, R2101 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s8 [0, 65535] { R2217 += 1, R2159 += 1, R2115 += 1 };
  s3 -> s7 [0, 65535] { R2217 += 1, R2159 += 1 };
  s4 -> s5 [0, 65535] { R2217 += 1 };
  s4 -> s3 [0, 65535] { R2217 += 1, R2159 += 1, R2115 += 1, R2100 += 1, R2101 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2217 += 1, R2159 += 1, R2115 += 1, R2099 += 1, R2100 += 1 };
  s4 -> s7 [0, 65535] { R2217 += 1, R2159 += 1 };
  s5 -> s5 [0, 65535] { R2217 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R2217 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2217 += 1, R2159 += 1 };
  s8 -> s5 [0, 65535] { R2217 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R2217 += 1, R2159 += 1, R2115 += 1 };
  s8 -> s7 [0, 65535] { R2217 += 1, R2159 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R2219 += 1, R2161 += 1, R2128 += 1, R2129 += 1 };
  s0 -> s2 [0, 65535] { R2219 += 1, R2160 += 1, R2161 += 1 };
  s0 -> s0 [0, 65535] { R2218 += 1, R2219 += 1 };
  s0 -> s3 [0, 65535] { R2219 += 1, R2161 += 1, R2129 += 1, R20 += 1 };
  s1 -> s4 [0, 65535] { R2219 += 1 };
  s1 -> s1 [0, 65535] { R2219 += 1, R2161 += 1, R2128 += 1, R2129 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [0, 65535] { R2219 += 1, R2161 += 1, R2129 += 1, R20 += 1 };
  s2 -> s1 [0, 65535] { R2219 += 1, R2161 += 1, R2128 += 1, R2129 += 1 };
  s2 -> s2 [0, 65535] { R2219 += 1, R2160 += 1, R2161 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R2219 += 1, R2161 += 1, R2129 += 1, R20 += 1 };
  s3 -> s4 [0, 65535] { R2219 += 1 };
  s3 -> s5 [0, 65535] { R2219 += 1, R2161 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R2219 += 1, R2161 += 1, R2129 += 1, R20 += 1 };
  s4 -> s4 [0, 65535] { R2219 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s4 [0, 65535] { R2219 += 1 };
  s5 -> s5 [0, 65535] { R2219 += 1, R2161 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 65] { R2221 += 1, R2163 += 1, R2131 += 1 };
  s0 -> s0 [0, 65535] { R2220 += 1, R2221 += 1 };
  s0 -> s2 [0, 65535] { R2221 += 1, R2162 += 1, R2163 += 1 };
  s0 -> s3 [0, 65535] { R2221 += 1, R2163 += 1, R2130 += 1, R2131 += 1 };
  s0 -> s4 [66, 66] { R2221 += 1, R2163 += 1, R2131 += 1 };
  s0 -> s5 [66, 66] { R2221 += 1, R2163 += 1, R2131 += 1 };
  s0 -> s6 [70, 70] { R2221 += 1, R2163 += 1, R2131 += 1 };
  s0 -> s1 [71, 65535] { R2221 += 1, R2163 += 1, R2131 += 1 };
  s1 -> s1 [0, 65] { R2221 += 1, R2163 += 1, R2131 += 1 };
  s1 -> s4 [66, 66] { R2221 += 1, R2163 += 1, R2131 += 1 };
  s1 -> s5 [66, 66] { R2221 += 1, R2163 += 1, R2131 += 1 };
  s1 -> s6 [70, 70] { R2221 += 1, R2163 += 1, R2131 += 1 };
  s1 -> s1 [71, 65535] { R2221 += 1, R2163 += 1, R2131 += 1 };
  s2 -> s1 [0, 65] { R2221 += 1, R2163 += 1, R2131 += 1 };
  s2 -> s2 [0, 65535] { R2221 += 1, R2162 += 1, R2163 += 1 };
  s2 -> s3 [0, 65535] { R2221 += 1, R2163 += 1, R2130 += 1, R2131 += 1 };
  s2 -> s4 [66, 66] { R2221 += 1, R2163 += 1, R2131 += 1 };
  s2 -> s5 [66, 66] { R2221 += 1, R2163 += 1, R2131 += 1 };
  s2 -> s6 [70, 70] { R2221 += 1, R2163 += 1, R2131 += 1 };
  s2 -> s1 [71, 65535] { R2221 += 1, R2163 += 1, R2131 += 1 };
  s3 -> s1 [0, 65] { R2221 += 1, R2163 += 1, R2131 += 1 };
  s3 -> s3 [0, 65535] { R2221 += 1, R2163 += 1, R2130 += 1, R2131 += 1 };
  s3 -> s4 [66, 66] { R2221 += 1, R2163 += 1, R2131 += 1 };
  s3 -> s5 [66, 66] { R2221 += 1, R2163 += 1, R2131 += 1 };
  s3 -> s6 [70, 70] { R2221 += 1, R2163 += 1, R2131 += 1 };
  s3 -> s1 [71, 65535] { R2221 += 1, R2163 += 1, R2131 += 1 };
  s5 -> s5 [0, 66] { R2221 += 1, R2163 += 1, R2131 += 1 };
  s5 -> s10 [70, 70] { R2221 += 1, R2163 += 1, R2131 += 1 };
  s5 -> s5 [71, 65535] { R2221 += 1, R2163 += 1, R2131 += 1 };
  s6 -> s6 [0, 65] { R2221 += 1, R2163 += 1, R2131 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R2221 += 1, R2163 += 1 };
  s6 -> s8 [0, 65535] { R2221 += 1 };
  s6 -> s9 [66, 66] { R2221 += 1, R2163 += 1, R2131 += 1 };
  s6 -> s10 [66, 66] { R2221 += 1, R2163 += 1, R2131 += 1 };
  s6 -> s6 [70, 65535] { R2221 += 1, R2163 += 1, R2131 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R2221 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s8 [0, 65535] { R2221 += 1 };
  s9 -> s9 [0, 65535] { R2221 += 1, R2163 += 1 };
  s10 -> s10 [0, 66] { R2221 += 1, R2163 += 1, R2131 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s8 [0, 65535] { R2221 += 1 };
  s10 -> s10 [0, 65535] { R2221 += 1, R2163 += 1 };
  s10 -> s10 [70, 65535] { R2221 += 1, R2163 += 1, R2131 += 1 };
  accepting s8, s9, s6, s7, s10;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65] { R2223 += 1, R2165 += 1, R2133 += 1, R56 += 1 };
  s0 -> s0 [0, 65535] { R2222 += 1, R2223 += 1 };
  s0 -> s2 [0, 65535] { R2223 += 1, R2165 += 1, R2132 += 1, R2133 += 1 };
  s0 -> s3 [0, 65535] { R2223 += 1, R2164 += 1, R2165 += 1 };
  s0 -> s4 [66, 66] { R2223 += 1, R2165 += 1, R2133 += 1, R56 += 1 };
  s0 -> s5 [66, 66] { R2223 += 1, R2165 += 1, R2133 += 1, R56 += 1 };
  s0 -> s1 [67, 65535] { R2223 += 1, R2165 += 1, R2133 += 1, R56 += 1 };
  s1 -> s1 [0, 65] { R2223 += 1, R2165 += 1, R2133 += 1, R56 += 1 };
  s1 -> s6 [0, 65535] { R2223 += 1 };
  s1 -> s1 [0, 65535] { R2223 += 1, R2165 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [66, 66] { R2223 += 1, R2165 += 1, R2133 += 1, R56 += 1 };
  s1 -> s5 [66, 66] { R2223 += 1, R2165 += 1, R2133 += 1, R56 += 1 };
  s1 -> s1 [67, 65535] { R2223 += 1, R2165 += 1, R2133 += 1, R56 += 1 };
  s2 -> s1 [0, 65] { R2223 += 1, R2165 += 1, R2133 += 1, R56 += 1 };
  s2 -> s6 [0, 65535] { R2223 += 1 };
  s2 -> s2 [0, 65535] { R2223 += 1, R2165 += 1, R2132 += 1, R2133 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [66, 66] { R2223 += 1, R2165 += 1, R2133 += 1, R56 += 1 };
  s2 -> s5 [66, 66] { R2223 += 1, R2165 += 1, R2133 += 1, R56 += 1 };
  s2 -> s1 [67, 65535] { R2223 += 1, R2165 += 1, R2133 += 1, R56 += 1 };
  s3 -> s1 [0, 65] { R2223 += 1, R2165 += 1, R2133 += 1, R56 += 1 };
  s3 -> s2 [0, 65535] { R2223 += 1, R2165 += 1, R2132 += 1, R2133 += 1 };
  s3 -> s3 [0, 65535] { R2223 += 1, R2164 += 1, R2165 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [66, 66] { R2223 += 1, R2165 += 1, R2133 += 1, R56 += 1 };
  s3 -> s5 [66, 66] { R2223 += 1, R2165 += 1, R2133 += 1, R56 += 1 };
  s3 -> s1 [67, 65535] { R2223 += 1, R2165 += 1, R2133 += 1, R56 += 1 };
  s4 -> s6 [0, 65535] { R2223 += 1 };
  s4 -> s8 [0, 65535] { R2223 += 1, R2165 += 1 };
  s4 -> s4 [0, 65535] { R2223 += 1, R2165 += 1, R2133 += 1, R56 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s6 [0, 65535] { R2223 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R2223 += 1, R2165 += 1 };
  s6 -> s6 [0, 65535] { R2223 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R2223 += 1 };
  s8 -> s8 [0, 65535] { R2223 += 1, R2165 += 1 };
  s8 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65] { R2225 += 1, R2167 += 1, R2135 += 1 };
  s0 -> s2 [0, 65] { R2225 += 1, R2167 += 1, R2135 += 1, R1684 += 1 };
  s0 -> s3 [0, 65535] { R2225 += 1, R2167 += 1, R2134 += 1, R2135 += 1 };
  s0 -> s4 [0, 65535] { R2225 += 1, R2166 += 1, R2167 += 1 };
  s0 -> s0 [0, 65535] { R2224 += 1, R2225 += 1 };
  s0 -> s5 [66, 66] { R2225 += 1, R2167 += 1, R2135 += 1, R1684 += 1 };
  s0 -> s6 [66, 66] { R2225 += 1, R2167 += 1, R2135 += 1 };
  s0 -> s7 [66, 66] { R2225 += 1, R2167 += 1, R2135 += 1, R1684 += 1 };
  s0 -> s8 [66, 66] { R2225 += 1, R2167 += 1, R2135 += 1 };
  s0 -> s1 [67, 69] { R2225 += 1, R2167 += 1, R2135 += 1 };
  s0 -> s2 [67, 65535] { R2225 += 1, R2167 += 1, R2135 += 1, R1684 += 1 };
  s0 -> s1 [71, 65535] { R2225 += 1, R2167 += 1, R2135 += 1 };
  s1 -> s1 [0, 65] { R2225 += 1, R2167 += 1, R2135 += 1 };
  s1 -> s1 [0, 65535] { R2225 += 1, R2167 += 1 };
  s1 -> s9 [0, 65535] { R2225 += 1 };
  s1 -> s10 [0, 65535];
  s1 -> s6 [66, 66] { R2225 += 1, R2167 += 1, R2135 += 1 };
  s1 -> s8 [66, 66] { R2225 += 1, R2167 += 1, R2135 += 1 };
  s1 -> s1 [67, 69] { R2225 += 1, R2167 += 1, R2135 += 1 };
  s1 -> s1 [71, 65535] { R2225 += 1, R2167 += 1, R2135 += 1 };
  s2 -> s1 [0, 65] { R2225 += 1, R2167 += 1, R2135 += 1 };
  s2 -> s2 [0, 65] { R2225 += 1, R2167 += 1, R2135 += 1, R1684 += 1 };
  s2 -> s5 [66, 66] { R2225 += 1, R2167 += 1, R2135 += 1, R1684 += 1 };
  s2 -> s6 [66, 66] { R2225 += 1, R2167 += 1, R2135 += 1 };
  s2 -> s7 [66, 66] { R2225 += 1, R2167 += 1, R2135 += 1, R1684 += 1 };
  s2 -> s8 [66, 66] { R2225 += 1, R2167 += 1, R2135 += 1 };
  s2 -> s1 [67, 69] { R2225 += 1, R2167 += 1, R2135 += 1 };
  s2 -> s2 [67, 65535] { R2225 += 1, R2167 += 1, R2135 += 1, R1684 += 1 };
  s2 -> s1 [71, 65535] { R2225 += 1, R2167 += 1, R2135 += 1 };
  s3 -> s1 [0, 65] { R2225 += 1, R2167 += 1, R2135 += 1 };
  s3 -> s2 [0, 65] { R2225 += 1, R2167 += 1, R2135 += 1, R1684 += 1 };
  s3 -> s3 [0, 65535] { R2225 += 1, R2167 += 1, R2134 += 1, R2135 += 1 };
  s3 -> s5 [66, 66] { R2225 += 1, R2167 += 1, R2135 += 1, R1684 += 1 };
  s3 -> s6 [66, 66] { R2225 += 1, R2167 += 1, R2135 += 1 };
  s3 -> s7 [66, 66] { R2225 += 1, R2167 += 1, R2135 += 1, R1684 += 1 };
  s3 -> s8 [66, 66] { R2225 += 1, R2167 += 1, R2135 += 1 };
  s3 -> s1 [67, 69] { R2225 += 1, R2167 += 1, R2135 += 1 };
  s3 -> s2 [67, 65535] { R2225 += 1, R2167 += 1, R2135 += 1, R1684 += 1 };
  s3 -> s1 [71, 65535] { R2225 += 1, R2167 += 1, R2135 += 1 };
  s4 -> s1 [0, 65] { R2225 += 1, R2167 += 1, R2135 += 1 };
  s4 -> s2 [0, 65] { R2225 += 1, R2167 += 1, R2135 += 1, R1684 += 1 };
  s4 -> s3 [0, 65535] { R2225 += 1, R2167 += 1, R2134 += 1, R2135 += 1 };
  s4 -> s4 [0, 65535] { R2225 += 1, R2166 += 1, R2167 += 1 };
  s4 -> s5 [66, 66] { R2225 += 1, R2167 += 1, R2135 += 1, R1684 += 1 };
  s4 -> s6 [66, 66] { R2225 += 1, R2167 += 1, R2135 += 1 };
  s4 -> s7 [66, 66] { R2225 += 1, R2167 += 1, R2135 += 1, R1684 += 1 };
  s4 -> s8 [66, 66] { R2225 += 1, R2167 += 1, R2135 += 1 };
  s4 -> s1 [67, 69] { R2225 += 1, R2167 += 1, R2135 += 1 };
  s4 -> s2 [67, 65535] { R2225 += 1, R2167 += 1, R2135 += 1, R1684 += 1 };
  s4 -> s1 [71, 65535] { R2225 += 1, R2167 += 1, R2135 += 1 };
  s5 -> s8 [0, 69] { R2225 += 1, R2167 += 1, R2135 += 1 };
  s5 -> s5 [0, 65535] { R2225 += 1, R2167 += 1, R2135 += 1, R1684 += 1 };
  s5 -> s8 [71, 65535] { R2225 += 1, R2167 += 1, R2135 += 1 };
  s6 -> s9 [0, 65535] { R2225 += 1 };
  s6 -> s6 [0, 65535] { R2225 += 1, R2167 += 1 };
  s6 -> s10 [0, 65535];
  s8 -> s8 [0, 69] { R2225 += 1, R2167 += 1, R2135 += 1 };
  s8 -> s9 [0, 65535] { R2225 += 1 };
  s8 -> s10 [0, 65535];
  s8 -> s8 [0, 65535] { R2225 += 1, R2167 += 1 };
  s8 -> s8 [71, 65535] { R2225 += 1, R2167 += 1, R2135 += 1 };
  s9 -> s9 [0, 65535] { R2225 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  accepting s8, s9, s6, s1, s10;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 65] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s0 -> s2 [0, 65] { R2227 += 1, R2169 += 1, R2137 += 1, R2092 += 1, R2093 += 1 };
  s0 -> s3 [0, 65535] { R2227 += 1, R2168 += 1, R2169 += 1 };
  s0 -> s4 [0, 65535] { R2227 += 1, R2169 += 1, R2136 += 1, R2137 += 1 };
  s0 -> s0 [0, 65535] { R2226 += 1, R2227 += 1 };
  s0 -> s5 [66, 66] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s0 -> s6 [66, 66] { R2227 += 1, R2169 += 1, R2137 += 1, R2092 += 1, R2093 += 1 };
  s0 -> s7 [66, 66] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s0 -> s8 [66, 66] { R2227 += 1, R2169 += 1, R2137 += 1, R2092 += 1, R2093 += 1 };
  s0 -> s1 [67, 69] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s0 -> s2 [67, 65535] { R2227 += 1, R2169 += 1, R2137 += 1, R2092 += 1, R2093 += 1 };
  s0 -> s9 [70, 70] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s0 -> s1 [71, 65535] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s1 -> s1 [0, 65] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s1 -> s5 [66, 66] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s1 -> s7 [66, 66] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s1 -> s1 [67, 69] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s1 -> s9 [70, 70] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s1 -> s1 [71, 65535] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s2 -> s1 [0, 65] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s2 -> s2 [0, 65] { R2227 += 1, R2169 += 1, R2137 += 1, R2092 += 1, R2093 += 1 };
  s2 -> s5 [66, 66] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s2 -> s6 [66, 66] { R2227 += 1, R2169 += 1, R2137 += 1, R2092 += 1, R2093 += 1 };
  s2 -> s7 [66, 66] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s2 -> s8 [66, 66] { R2227 += 1, R2169 += 1, R2137 += 1, R2092 += 1, R2093 += 1 };
  s2 -> s1 [67, 69] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s2 -> s2 [67, 65535] { R2227 += 1, R2169 += 1, R2137 += 1, R2092 += 1, R2093 += 1 };
  s2 -> s9 [70, 70] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s2 -> s1 [71, 65535] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s3 -> s1 [0, 65] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s3 -> s2 [0, 65] { R2227 += 1, R2169 += 1, R2137 += 1, R2092 += 1, R2093 += 1 };
  s3 -> s3 [0, 65535] { R2227 += 1, R2168 += 1, R2169 += 1 };
  s3 -> s4 [0, 65535] { R2227 += 1, R2169 += 1, R2136 += 1, R2137 += 1 };
  s3 -> s5 [66, 66] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s3 -> s6 [66, 66] { R2227 += 1, R2169 += 1, R2137 += 1, R2092 += 1, R2093 += 1 };
  s3 -> s7 [66, 66] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s3 -> s8 [66, 66] { R2227 += 1, R2169 += 1, R2137 += 1, R2092 += 1, R2093 += 1 };
  s3 -> s1 [67, 69] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s3 -> s2 [67, 65535] { R2227 += 1, R2169 += 1, R2137 += 1, R2092 += 1, R2093 += 1 };
  s3 -> s9 [70, 70] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s3 -> s1 [71, 65535] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s4 -> s1 [0, 65] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s4 -> s2 [0, 65] { R2227 += 1, R2169 += 1, R2137 += 1, R2092 += 1, R2093 += 1 };
  s4 -> s4 [0, 65535] { R2227 += 1, R2169 += 1, R2136 += 1, R2137 += 1 };
  s4 -> s5 [66, 66] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s4 -> s6 [66, 66] { R2227 += 1, R2169 += 1, R2137 += 1, R2092 += 1, R2093 += 1 };
  s4 -> s7 [66, 66] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s4 -> s8 [66, 66] { R2227 += 1, R2169 += 1, R2137 += 1, R2092 += 1, R2093 += 1 };
  s4 -> s1 [67, 69] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s4 -> s2 [67, 65535] { R2227 += 1, R2169 += 1, R2137 += 1, R2092 += 1, R2093 += 1 };
  s4 -> s9 [70, 70] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s4 -> s1 [71, 65535] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s5 -> s5 [0, 69] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s5 -> s12 [70, 70] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s5 -> s5 [71, 65535] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s6 -> s5 [0, 69] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s6 -> s6 [0, 65535] { R2227 += 1, R2169 += 1, R2137 += 1, R2092 += 1, R2093 += 1 };
  s6 -> s12 [70, 70] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s6 -> s5 [71, 65535] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s9 -> s10 [0, 65] { R2227 += 1, R2169 += 1, R2137 += 1 };
  s9 -> s9 [0, 65] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s9 -> s11 [66, 66] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s9 -> s12 [66, 66] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s9 -> s13 [66, 66] { R2227 += 1, R2169 += 1, R2137 += 1 };
  s9 -> s14 [66, 66] { R2227 += 1, R2169 += 1, R2137 += 1 };
  s9 -> s10 [67, 65535] { R2227 += 1, R2169 += 1, R2137 += 1 };
  s9 -> s9 [67, 65535] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s10 -> s10 [0, 65] { R2227 += 1, R2169 += 1, R2137 += 1 };
  s10 -> s10 [0, 65535] { R2227 += 1, R2169 += 1 };
  s10 -> s16 [0, 65535];
  s10 -> s17 [0, 65535] { R2227 += 1 };
  s10 -> s13 [66, 66] { R2227 += 1, R2169 += 1, R2137 += 1 };
  s10 -> s14 [66, 66] { R2227 += 1, R2169 += 1, R2137 += 1 };
  s10 -> s10 [67, 65535] { R2227 += 1, R2169 += 1, R2137 += 1 };
  s12 -> s12 [0, 65535] { R2227 += 1, R2169 += 1, R2137 += 1, R2093 += 1 };
  s12 -> s14 [0, 65535] { R2227 += 1, R2169 += 1, R2137 += 1 };
  s13 -> s13 [0, 65535] { R2227 += 1, R2169 += 1 };
  s13 -> s16 [0, 65535];
  s13 -> s17 [0, 65535] { R2227 += 1 };
  s14 -> s15 [0, 65535] { R2227 += 1, R2169 += 1 };
  s14 -> s16 [0, 65535];
  s14 -> s14 [0, 65535] { R2227 += 1, R2169 += 1, R2137 += 1 };
  s14 -> s17 [0, 65535] { R2227 += 1 };
  s15 -> s15 [0, 65535] { R2227 += 1, R2169 += 1 };
  s15 -> s16 [0, 65535];
  s15 -> s17 [0, 65535] { R2227 += 1 };
  s16 -> s16 [0, 65535];
  s17 -> s16 [0, 65535];
  s17 -> s17 [0, 65535] { R2227 += 1 };
  accepting s17, s16, s13, s14, s15, s10;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 65] { R2229 += 1, R2171 += 1, R2139 += 1, R2096 += 1, R2097 += 1 };
  s0 -> s2 [0, 65535] { R2229 += 1, R2171 += 1, R2138 += 1, R2139 += 1 };
  s0 -> s0 [0, 65535] { R2228 += 1, R2229 += 1 };
  s0 -> s3 [0, 65535] { R2229 += 1, R2170 += 1, R2171 += 1 };
  s0 -> s4 [66, 66] { R2229 += 1, R2171 += 1, R2139 += 1, R2096 += 1, R2097 += 1 };
  s0 -> s5 [66, 66] { R2229 += 1, R2171 += 1, R2139 += 1, R2096 += 1, R2097 += 1 };
  s0 -> s1 [67, 65535] { R2229 += 1, R2171 += 1, R2139 += 1, R2096 += 1, R2097 += 1 };
  s1 -> s1 [0, 65] { R2229 += 1, R2171 += 1, R2139 += 1, R2096 += 1, R2097 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R2229 += 1, R2171 += 1 };
  s1 -> s8 [0, 65535] { R2229 += 1 };
  s1 -> s4 [66, 66] { R2229 += 1, R2171 += 1, R2139 += 1, R2096 += 1, R2097 += 1 };
  s1 -> s5 [66, 66] { R2229 += 1, R2171 += 1, R2139 += 1, R2096 += 1, R2097 += 1 };
  s1 -> s1 [67, 65535] { R2229 += 1, R2171 += 1, R2139 += 1, R2096 += 1, R2097 += 1 };
  s2 -> s1 [0, 65] { R2229 += 1, R2171 += 1, R2139 += 1, R2096 += 1, R2097 += 1 };
  s2 -> s2 [0, 65535] { R2229 += 1, R2171 += 1, R2138 += 1, R2139 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s8 [0, 65535] { R2229 += 1 };
  s2 -> s4 [66, 66] { R2229 += 1, R2171 += 1, R2139 += 1, R2096 += 1, R2097 += 1 };
  s2 -> s5 [66, 66] { R2229 += 1, R2171 += 1, R2139 += 1, R2096 += 1, R2097 += 1 };
  s2 -> s1 [67, 65535] { R2229 += 1, R2171 += 1, R2139 += 1, R2096 += 1, R2097 += 1 };
  s3 -> s1 [0, 65] { R2229 += 1, R2171 += 1, R2139 += 1, R2096 += 1, R2097 += 1 };
  s3 -> s2 [0, 65535] { R2229 += 1, R2171 += 1, R2138 += 1, R2139 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R2229 += 1, R2170 += 1, R2171 += 1 };
  s3 -> s4 [66, 66] { R2229 += 1, R2171 += 1, R2139 += 1, R2096 += 1, R2097 += 1 };
  s3 -> s5 [66, 66] { R2229 += 1, R2171 += 1, R2139 += 1, R2096 += 1, R2097 += 1 };
  s3 -> s1 [67, 65535] { R2229 += 1, R2171 += 1, R2139 += 1, R2096 += 1, R2097 += 1 };
  s4 -> s4 [0, 65535] { R2229 += 1, R2171 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R2229 += 1 };
  s5 -> s6 [0, 65535] { R2229 += 1, R2171 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R2229 += 1, R2171 += 1, R2139 += 1, R2096 += 1, R2097 += 1 };
  s5 -> s8 [0, 65535] { R2229 += 1 };
  s6 -> s6 [0, 65535] { R2229 += 1, R2171 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R2229 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R2229 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
};
synchronised {  // Automata constraining P37
automaton P37_0 {
  init s0;
  s0 -> s1 [9, 9];
  accepting s1;
};
};
synchronised {  // Automata constraining P38
automaton P38_0 {
  init s0;
  s0 -> s1 [10, 10];
  accepting s1;
};
};
synchronised {  // Automata constraining P36
automaton P36_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
constraint R2 = R2171 && R3 - R2229 = 1 && R22 - R2171 = -1 && R23 = R2171 && R24 - R2171 = -1 && R25 = R2171 && R26 = 0 && R27 = 1 && R28 = 0 && R29 = 1 && R30 = R2229 && R31 - R2229 = 1 && R32 = R2229 && R33 - R2229 = 1 && R34 = 0 && R35 = 1 && R36 = 0 && R37 = 1 && R42 + R57 + R56 + -1*R2095 + -1*R2093 - R47 = 0 && R46 + R2094 + R2092 = 0 && R2130 = 0 && R2131 = 0 && R2134 = 0 && R2135 = 0 && R2136 = 0 && R2137 = 0 && R2140 = 0 && R2141 = R2171 && R2142 = 0 && R2143 = R2171 && R2144 = 0 && R2145 = R2171 && R2146 = 0 && R2147 = R2171 && R2148 = 0 && R2149 = R2171 && R2150 = 0 && R2151 = R2171 && R2152 = 0 && R2153 = R2171 && R2154 = 0 && R2155 = R2171 && R2156 = 0 && R2157 = R2171 && R2158 = 0 && R2159 = R2171 && R2160 = 0 && R2161 = R2171 && R2162 = 0 && R2163 = R2171 && R2164 = 0 && R2165 = R2171 && R2166 = 0 && R2167 = R2171 && R2168 = 0 && R2169 = R2171 && R2170 = 0 && R2172 = 0 && R2173 = R2229 && R2174 = 0 && R2175 = R2229 && R2176 = 0 && R2177 = R2229 && R2178 = 0 && R2179 = R2229 && R2180 = 0 && R2181 = R2229 && R2182 = 0 && R2183 = R2229 && R2184 = 0 && R2185 = R2229 && R2186 = 0 && R2187 = R2229 && R2188 = 0 && R2189 = R2229 && R2190 = 0 && R2191 = R2229 && R2192 = 0 && R2193 = R2229 && R2194 = 0 && R2195 = R2229 && R2196 = 0 && R2197 = R2229 && R2198 = 0 && R2199 = R2229 && R2200 = 0 && R2201 = R2229 && R2202 = 0 && R2203 = R2229 && R2204 = 0 && R2205 = R2229 && R2206 = 0 && R2207 = R2229 && R2208 = 0 && R2209 = R2229 && R2210 = 0 && R2211 = R2229 && R2212 = 0 && R2213 = R2229 && R2214 = 0 && R2215 = R2229 && R2216 = 0 && R2217 = R2229 && R2218 = 0 && R2219 = R2229 && R2220 = 0 && R2221 = R2229 && R2222 = 0 && R2223 = R2229 && R2224 = 0 && R2225 = R2229 && R2226 = 0 && R2227 = R2229 && R2228 = 0 && -1 < R1 && R11 < 1 && R14 < 1 && R17 < 1 && R44 + R1685 + R1684 < 1 && -1*R2095 + -1*R2093 - R47 < 1 && 0 < R2171 && -1 < R2229 && (R1 != 0 || R19 = 0 || (R2102 = 0 && R2103 = 0)) && (R1 != 0 || R19 = 0 || (R2104 = 0 && R2105 = 0)) && (R1 != 0 || R19 = 0 || (R2106 = 0 && R2107 = 0)) && (R1 != 0 || R19 = 0 || (R2108 = 0 && R2109 = 0)) && (R1 != 0 || R19 = 0 || (R2110 = 0 && R2111 = 0)) && (R1 != 0 || R19 = 0 || (R2112 = 0 && R2113 = 0)) && (R1 != 0 || R19 = 0 || (R2114 = 0 && R2115 = 0)) && (R47 + R2095 + R2093 != 0 || R52 + R2101 + R2098 = 0 || (R50 + R2099 + R2096 = 0 && R51 + R2100 + R2097 = 0)) && (R50 + R2099 + R2096 != 0 || R47 + R2095 + R2093 + -1*R2100 + -1*R2097 - R51 = 0 || R47 + R2095 + R2093 < 1) && (R2102 != 0 || R1 = R2103 || R1 < 1) && (R2104 != 0 || R1 = R2105 || R1 < 1) && (R2106 != 0 || R1 = R2107 || R1 < 1) && (R2108 != 0 || R1 = R2109 || R1 < 1) && (R2110 != 0 || R1 = R2111 || R1 < 1) && (R2112 != 0 || R1 = R2113 || R1 < 1) && (R2114 != 0 || R1 = R2115 || R1 < 1) && (R20 = 0 || (R2128 = 0 && R2129 = 0)) && (R20 = 0 || (R2132 = 0 && R2133 = 0)) && (R20 = 0 || (R2138 = 0 && R2139 = 0)) && (R21 = 0 || (R2116 = 0 && R2117 = 0)) && (R21 = 0 || (R2118 = 0 && R2119 = 0)) && (R21 = 0 || (R2120 = 0 && R2121 = 0)) && (R21 = 0 || (R2122 = 0 && R2123 = 0)) && (R21 = 0 || (R2124 = 0 && R2125 = 0)) && (R21 = 0 || (R2126 = 0 && R2127 = 0)) && (R50 + R2099 + R2096 = 0 || R47 + R2095 + R2093 < 1) && (R2102 = 0 || R1 < 1) && (R2104 = 0 || R1 < 1) && (R2106 = 0 || R1 < 1) && (R2108 = 0 || R1 < 1) && (R2110 = 0 || R1 < 1) && (R2112 = 0 || R1 < 1) && (R2114 = 0 || R1 < 1);
// End of Parikh automata intersection problem
