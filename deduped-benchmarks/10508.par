// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R14, R1684, R1685, R1686, R1687, R1688, R1689, R17, R1824, R1825, R1826, R1827, R1828, R1829, R1830, R1831, R1832, R1833, R1834, R1835, R1836, R1837, R1838, R1839, R1840, R1841, R1842, R1843, R1844, R1845, R1846, R1847, R1848, R1849, R1850, R1851, R1852, R1853, R1854, R1855, R1856, R1857, R1858, R1859, R1860, R1861, R1862, R1863, R1864, R1865, R1866, R1867, R1868, R1869, R1870, R1871, R1872, R1873, R1874, R1875, R1876, R1877, R1878, R1879, R1880, R1881, R1882, R1883, R1884, R1885, R1886, R1887, R1888, R1889, R1890, R1891, R1892, R1893, R1894, R1895, R1896, R1897, R1898, R1899, R19, R1900, R1901, R1902, R1903, R1904, R1905, R1906, R1907, R1908, R1909, R1910, R1911, R1912, R1913, R1914, R1915, R1916, R1917, R1918, R1919, R1920, R1921, R1922, R1923, R1924, R1925, R1926, R1927, R1928, R1929, R1930, R1931, R1932, R1933, R1934, R1935, R1936, R1937, R1938, R1939, R1940, R1941, R1942, R1943, R1944, R1945, R1946, R1947, R1948, R1949, R1950, R1951, R1952, R1953, R1954, R1955, R1956, R1957, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R33, R34, R35, R36, R37, R4, R42, R44, R46, R47, R5, R50, R51, R52, R56, R57, R6, R7;
synchronised {  // Automata constraining P9
automaton P9_0 {
  init s0;
  s0 -> s1 [98, 98];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R17 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R30 += 1, R31 += 1 };
  s0 -> s1 [13, 13] { R31 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s0 [0, 65535] { R32 += 1, R33 += 1 };
  s0 -> s1 [0, 65535] { R33 += 1, R6 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R33 += 1, R6 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R35 += 1 };
  s0 -> s0 [0, 65535] { R34 += 1, R35 += 1 };
  s0 -> s2 [9, 13] { R35 += 1 };
  s0 -> s1 [14, 31] { R35 += 1 };
  s0 -> s2 [32, 32] { R35 += 1 };
  s0 -> s1 [33, 65535] { R35 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R35 += 1 };
  s2 -> s1 [0, 65535] { R35 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 65535] { R37 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R36 += 1, R37 += 1 };
  s1 -> s1 [0, 65535] { R37 += 1, R7 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R1901 += 1 };
  s0 -> s0 [0, 65535] { R1900 += 1, R1901 += 1 };
  s0 -> s2 [66, 66] { R1901 += 1 };
  s0 -> s1 [67, 65535] { R1901 += 1 };
  s1 -> s1 [0, 64] { R1901 += 1 };
  s1 -> s2 [66, 66] { R1901 += 1 };
  s1 -> s1 [67, 65535] { R1901 += 1 };
  s2 -> s2 [0, 64] { R1901 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [66, 65535] { R1901 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R1903 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R1902 += 1, R1903 += 1 };
  s1 -> s1 [0, 65535] { R1903 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 65] { R1905 += 1 };
  s0 -> s0 [0, 65535] { R1904 += 1, R1905 += 1 };
  s0 -> s2 [0, 65535] { R1905 += 1, R14 += 1 };
  s0 -> s3 [66, 66] { R1905 += 1 };
  s0 -> s1 [67, 65535] { R1905 += 1 };
  s1 -> s1 [0, 65] { R1905 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [66, 66] { R1905 += 1 };
  s1 -> s1 [67, 65535] { R1905 += 1 };
  s2 -> s1 [0, 65] { R1905 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1905 += 1, R14 += 1 };
  s2 -> s3 [66, 66] { R1905 += 1 };
  s2 -> s1 [67, 65535] { R1905 += 1 };
  s3 -> s3 [0, 65535] { R1905 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R1907 += 1, R23 += 1 };
  s0 -> s0 [0, 65535] { R1906 += 1, R1907 += 1 };
  s0 -> s2 [0, 65535] { R1907 += 1, R22 += 1, R23 += 1 };
  s0 -> s3 [9, 13] { R1907 += 1, R23 += 1 };
  s0 -> s1 [14, 31] { R1907 += 1, R23 += 1 };
  s0 -> s3 [32, 32] { R1907 += 1, R23 += 1 };
  s0 -> s1 [33, 65535] { R1907 += 1, R23 += 1 };
  s1 -> s5 [0, 65535] { R1907 += 1 };
  s1 -> s1 [0, 65535] { R1907 += 1, R23 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 8] { R1907 += 1, R23 += 1 };
  s2 -> s2 [0, 65535] { R1907 += 1, R22 += 1, R23 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [9, 13] { R1907 += 1, R23 += 1 };
  s2 -> s1 [14, 31] { R1907 += 1, R23 += 1 };
  s2 -> s3 [32, 32] { R1907 += 1, R23 += 1 };
  s2 -> s1 [33, 65535] { R1907 += 1, R23 += 1 };
  s3 -> s1 [0, 65535] { R1907 += 1, R23 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1907 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s0 [0, 65535] { R1908 += 1, R1909 += 1 };
  s0 -> s1 [0, 65535] { R1909 += 1, R25 += 1, R4 += 1 };
  s0 -> s2 [0, 65535] { R1909 += 1, R24 += 1, R25 += 1 };
  s1 -> s1 [0, 65535] { R1909 += 1, R25 += 1, R4 += 1 };
  s1 -> s4 [0, 65535] { R1909 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R1909 += 1, R25 += 1, R4 += 1 };
  s2 -> s2 [0, 65535] { R1909 += 1, R24 += 1, R25 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1909 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R1911 += 1, R27 += 1 };
  s0 -> s2 [0, 65535] { R1911 += 1, R26 += 1, R27 += 1 };
  s0 -> s0 [0, 65535] { R1910 += 1, R1911 += 1 };
  s0 -> s3 [9, 13] { R1911 += 1, R27 += 1 };
  s0 -> s1 [14, 31] { R1911 += 1, R27 += 1 };
  s0 -> s3 [32, 32] { R1911 += 1, R27 += 1 };
  s0 -> s1 [33, 65535] { R1911 += 1, R27 += 1 };
  s1 -> s5 [0, 65535] { R1911 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R1911 += 1, R27 += 1 };
  s2 -> s1 [0, 8] { R1911 += 1, R27 += 1 };
  s2 -> s2 [0, 65535] { R1911 += 1, R26 += 1, R27 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [9, 13] { R1911 += 1, R27 += 1 };
  s2 -> s1 [14, 31] { R1911 += 1, R27 += 1 };
  s2 -> s3 [32, 32] { R1911 += 1, R27 += 1 };
  s2 -> s1 [33, 65535] { R1911 += 1, R27 += 1 };
  s3 -> s1 [0, 65535] { R1911 += 1, R27 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1911 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s0 [0, 65535] { R1912 += 1, R1913 += 1 };
  s0 -> s1 [0, 65535] { R1913 += 1, R29 += 1, R5 += 1 };
  s0 -> s2 [0, 65535] { R1913 += 1, R28 += 1, R29 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R1913 += 1, R29 += 1, R5 += 1 };
  s1 -> s4 [0, 65535] { R1913 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R1913 += 1, R29 += 1, R5 += 1 };
  s2 -> s2 [0, 65535] { R1913 += 1, R28 += 1, R29 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1913 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 65535] { R1915 += 1, R1845 += 1, R21 += 1 };
  s0 -> s0 [0, 65535] { R1914 += 1, R1915 += 1 };
  s0 -> s2 [0, 65535] { R1915 += 1, R1844 += 1, R1845 += 1 };
  s1 -> s1 [0, 65535] { R1915 += 1, R1845 += 1, R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R1915 += 1 };
  s2 -> s1 [0, 65535] { R1915 += 1, R1845 += 1, R21 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1915 += 1, R1844 += 1, R1845 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1915 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 65] { R1917 += 1, R1847 += 1 };
  s0 -> s0 [0, 65535] { R1916 += 1, R1917 += 1 };
  s0 -> s2 [0, 65535] { R1917 += 1, R1846 += 1, R1847 += 1 };
  s0 -> s3 [66, 66] { R1917 += 1, R1847 += 1 };
  s0 -> s4 [66, 66] { R1917 += 1, R1847 += 1 };
  s0 -> s1 [71, 65535] { R1917 += 1, R1847 += 1 };
  s1 -> s1 [0, 65] { R1917 += 1, R1847 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1917 += 1 };
  s1 -> s3 [66, 66] { R1917 += 1, R1847 += 1 };
  s1 -> s4 [66, 66] { R1917 += 1, R1847 += 1 };
  s1 -> s1 [71, 65535] { R1917 += 1, R1847 += 1 };
  s2 -> s1 [0, 65] { R1917 += 1, R1847 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1917 += 1, R1846 += 1, R1847 += 1 };
  s2 -> s3 [66, 66] { R1917 += 1, R1847 += 1 };
  s2 -> s4 [66, 66] { R1917 += 1, R1847 += 1 };
  s2 -> s1 [71, 65535] { R1917 += 1, R1847 += 1 };
  s3 -> s3 [0, 66] { R1917 += 1, R1847 += 1 };
  s3 -> s3 [0, 65535] { R1917 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [71, 65535] { R1917 += 1, R1847 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1917 += 1 };
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 65] { R1919 += 1, R1849 += 1, R42 += 1 };
  s0 -> s0 [0, 65535] { R1918 += 1, R1919 += 1 };
  s0 -> s2 [0, 65535] { R1919 += 1, R1848 += 1, R1849 += 1 };
  s0 -> s3 [66, 66] { R1919 += 1, R1849 += 1, R42 += 1 };
  s0 -> s4 [66, 66] { R1919 += 1, R1849 += 1, R42 += 1 };
  s0 -> s1 [67, 65535] { R1919 += 1, R1849 += 1, R42 += 1 };
  s1 -> s1 [0, 65] { R1919 += 1, R1849 += 1, R42 += 1 };
  s1 -> s1 [0, 65535] { R1919 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R1919 += 1, R1849 += 1, R42 += 1 };
  s1 -> s4 [66, 66] { R1919 += 1, R1849 += 1, R42 += 1 };
  s1 -> s1 [67, 65535] { R1919 += 1, R1849 += 1, R42 += 1 };
  s2 -> s1 [0, 65] { R1919 += 1, R1849 += 1, R42 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1919 += 1, R1848 += 1, R1849 += 1 };
  s2 -> s3 [66, 66] { R1919 += 1, R1849 += 1, R42 += 1 };
  s2 -> s4 [66, 66] { R1919 += 1, R1849 += 1, R42 += 1 };
  s2 -> s1 [67, 65535] { R1919 += 1, R1849 += 1, R42 += 1 };
  s3 -> s3 [0, 65535] { R1919 += 1, R1849 += 1, R42 += 1 };
  s3 -> s6 [0, 65535] { R1919 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1919 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1919 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 65] { R1921 += 1, R1851 += 1, R44 += 1 };
  s0 -> s2 [0, 65535] { R1921 += 1, R1850 += 1, R1851 += 1 };
  s0 -> s0 [0, 65535] { R1920 += 1, R1921 += 1 };
  s0 -> s3 [66, 66] { R1921 += 1, R1851 += 1, R44 += 1 };
  s0 -> s4 [66, 66] { R1921 += 1, R1851 += 1, R44 += 1 };
  s0 -> s1 [67, 65535] { R1921 += 1, R1851 += 1, R44 += 1 };
  s1 -> s1 [0, 65] { R1921 += 1, R1851 += 1, R44 += 1 };
  s1 -> s1 [0, 65535] { R1921 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R1921 += 1, R1851 += 1, R44 += 1 };
  s1 -> s4 [66, 66] { R1921 += 1, R1851 += 1, R44 += 1 };
  s1 -> s1 [67, 65535] { R1921 += 1, R1851 += 1, R44 += 1 };
  s2 -> s1 [0, 65] { R1921 += 1, R1851 += 1, R44 += 1 };
  s2 -> s2 [0, 65535] { R1921 += 1, R1850 += 1, R1851 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R1921 += 1, R1851 += 1, R44 += 1 };
  s2 -> s4 [66, 66] { R1921 += 1, R1851 += 1, R44 += 1 };
  s2 -> s1 [67, 65535] { R1921 += 1, R1851 += 1, R44 += 1 };
  s3 -> s3 [0, 65535] { R1921 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1921 += 1, R1851 += 1, R44 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1921 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1921 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65] { R1923 += 1, R1853 += 1, R46 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R1922 += 1, R1923 += 1 };
  s0 -> s2 [0, 65535] { R1923 += 1, R1852 += 1, R1853 += 1 };
  s0 -> s3 [66, 66] { R1923 += 1, R1853 += 1, R46 += 1, R47 += 1 };
  s0 -> s4 [66, 66] { R1923 += 1, R1853 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [67, 65535] { R1923 += 1, R1853 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65] { R1923 += 1, R1853 += 1, R46 += 1, R47 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1923 += 1 };
  s1 -> s3 [66, 66] { R1923 += 1, R1853 += 1, R46 += 1, R47 += 1 };
  s1 -> s4 [66, 66] { R1923 += 1, R1853 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [67, 65535] { R1923 += 1, R1853 += 1, R46 += 1, R47 += 1 };
  s2 -> s1 [0, 65] { R1923 += 1, R1853 += 1, R46 += 1, R47 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1923 += 1, R1852 += 1, R1853 += 1 };
  s2 -> s3 [66, 66] { R1923 += 1, R1853 += 1, R46 += 1, R47 += 1 };
  s2 -> s4 [66, 66] { R1923 += 1, R1853 += 1, R46 += 1, R47 += 1 };
  s2 -> s1 [67, 65535] { R1923 += 1, R1853 += 1, R46 += 1, R47 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1923 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1923 += 1 };
  s4 -> s4 [0, 65535] { R1923 += 1, R1853 += 1, R46 += 1, R47 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1923 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 65] { R1925 += 1, R1855 += 1, R50 += 1, R51 += 1 };
  s0 -> s0 [0, 65535] { R1924 += 1, R1925 += 1 };
  s0 -> s2 [0, 65535] { R1925 += 1, R1854 += 1, R1855 += 1 };
  s0 -> s3 [66, 66] { R1925 += 1, R1855 += 1, R50 += 1, R51 += 1 };
  s0 -> s4 [66, 66] { R1925 += 1, R1855 += 1, R50 += 1, R51 += 1 };
  s0 -> s1 [67, 65535] { R1925 += 1, R1855 += 1, R50 += 1, R51 += 1 };
  s1 -> s1 [0, 65] { R1925 += 1, R1855 += 1, R50 += 1, R51 += 1 };
  s1 -> s1 [0, 65535] { R1925 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R1925 += 1, R1855 += 1, R50 += 1, R51 += 1 };
  s1 -> s4 [66, 66] { R1925 += 1, R1855 += 1, R50 += 1, R51 += 1 };
  s1 -> s1 [67, 65535] { R1925 += 1, R1855 += 1, R50 += 1, R51 += 1 };
  s2 -> s1 [0, 65] { R1925 += 1, R1855 += 1, R50 += 1, R51 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1925 += 1, R1854 += 1, R1855 += 1 };
  s2 -> s3 [66, 66] { R1925 += 1, R1855 += 1, R50 += 1, R51 += 1 };
  s2 -> s4 [66, 66] { R1925 += 1, R1855 += 1, R50 += 1, R51 += 1 };
  s2 -> s1 [67, 65535] { R1925 += 1, R1855 += 1, R50 += 1, R51 += 1 };
  s3 -> s3 [0, 65535] { R1925 += 1, R1855 += 1, R50 += 1, R51 += 1 };
  s3 -> s6 [0, 65535] { R1925 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1925 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1925 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 65] { R1927 += 1, R1869 += 1 };
  s0 -> s0 [0, 65535] { R1926 += 1, R1927 += 1 };
  s0 -> s2 [0, 65535] { R1927 += 1, R1868 += 1, R1869 += 1 };
  s0 -> s3 [66, 66] { R1927 += 1, R1869 += 1 };
  s0 -> s1 [67, 65535] { R1927 += 1, R1869 += 1 };
  s1 -> s1 [0, 65] { R1927 += 1, R1869 += 1 };
  s1 -> s3 [66, 66] { R1927 += 1, R1869 += 1 };
  s1 -> s1 [67, 65535] { R1927 += 1, R1869 += 1 };
  s2 -> s1 [0, 65] { R1927 += 1, R1869 += 1 };
  s2 -> s2 [0, 65535] { R1927 += 1, R1868 += 1, R1869 += 1 };
  s2 -> s3 [66, 66] { R1927 += 1, R1869 += 1 };
  s2 -> s1 [67, 65535] { R1927 += 1, R1869 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1927 += 1, R1869 += 1 };
  s3 -> s5 [0, 65535] { R1927 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1927 += 1 };
  accepting s3, s4, s5;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R1929 += 1, R1871 += 1, R1 += 1 };
  s0 -> s2 [0, 65535] { R1929 += 1, R1870 += 1, R1871 += 1 };
  s0 -> s0 [0, 65535] { R1928 += 1, R1929 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R1929 += 1, R1871 += 1, R1 += 1 };
  s1 -> s4 [0, 65535] { R1929 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R1929 += 1, R1871 += 1, R1 += 1 };
  s2 -> s2 [0, 65535] { R1929 += 1, R1870 += 1, R1871 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1929 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 65] { R1931 += 1, R1873 += 1 };
  s0 -> s2 [0, 65535] { R1931 += 1, R1873 += 1, R11 += 1 };
  s0 -> s0 [0, 65535] { R1930 += 1, R1931 += 1 };
  s0 -> s3 [0, 65535] { R1931 += 1, R1872 += 1, R1873 += 1 };
  s0 -> s4 [66, 66] { R1931 += 1, R1873 += 1 };
  s0 -> s1 [67, 65535] { R1931 += 1, R1873 += 1 };
  s1 -> s1 [0, 65] { R1931 += 1, R1873 += 1 };
  s1 -> s1 [0, 65535] { R1931 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s4 [66, 66] { R1931 += 1, R1873 += 1 };
  s1 -> s1 [67, 65535] { R1931 += 1, R1873 += 1 };
  s2 -> s1 [0, 65] { R1931 += 1, R1873 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R1931 += 1 };
  s2 -> s2 [0, 65535] { R1931 += 1, R1873 += 1, R11 += 1 };
  s2 -> s4 [66, 66] { R1931 += 1, R1873 += 1 };
  s2 -> s1 [67, 65535] { R1931 += 1, R1873 += 1 };
  s3 -> s1 [0, 65] { R1931 += 1, R1873 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R1931 += 1, R1873 += 1, R11 += 1 };
  s3 -> s3 [0, 65535] { R1931 += 1, R1872 += 1, R1873 += 1 };
  s3 -> s4 [66, 66] { R1931 += 1, R1873 += 1 };
  s3 -> s1 [67, 65535] { R1931 += 1, R1873 += 1 };
  s4 -> s4 [0, 65535] { R1931 += 1, R1873 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1931 += 1 };
  accepting s3, s5, s2, s6, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65] { R1933 += 1, R1875 += 1, R1831 += 1 };
  s0 -> s2 [0, 65535] { R1933 += 1, R1874 += 1, R1875 += 1 };
  s0 -> s3 [0, 65535] { R1933 += 1, R1875 += 1, R1830 += 1, R1831 += 1 };
  s0 -> s0 [0, 65535] { R1932 += 1, R1933 += 1 };
  s0 -> s1 [67, 65535] { R1933 += 1, R1875 += 1, R1831 += 1 };
  s1 -> s1 [0, 65] { R1933 += 1, R1875 += 1, R1831 += 1 };
  s1 -> s4 [0, 65535] { R1933 += 1 };
  s1 -> s1 [0, 65535] { R1933 += 1, R1875 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [67, 65535] { R1933 += 1, R1875 += 1, R1831 += 1 };
  s2 -> s1 [0, 65] { R1933 += 1, R1875 += 1, R1831 += 1 };
  s2 -> s2 [0, 65535] { R1933 += 1, R1874 += 1, R1875 += 1 };
  s2 -> s3 [0, 65535] { R1933 += 1, R1875 += 1, R1830 += 1, R1831 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [67, 65535] { R1933 += 1, R1875 += 1, R1831 += 1 };
  s3 -> s1 [0, 65] { R1933 += 1, R1875 += 1, R1831 += 1 };
  s3 -> s4 [0, 65535] { R1933 += 1 };
  s3 -> s3 [0, 65535] { R1933 += 1, R1875 += 1, R1830 += 1, R1831 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [67, 65535] { R1933 += 1, R1875 += 1, R1831 += 1 };
  s4 -> s4 [0, 65535] { R1933 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 65535] { R1935 += 1, R1876 += 1, R1877 += 1 };
  s0 -> s2 [0, 65535] { R1935 += 1, R1877 += 1, R1833 += 1, R19 += 1 };
  s0 -> s0 [0, 65535] { R1934 += 1, R1935 += 1 };
  s0 -> s3 [0, 65535] { R1935 += 1, R1877 += 1, R1832 += 1, R1833 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R1935 += 1, R1876 += 1, R1877 += 1 };
  s1 -> s2 [0, 65535] { R1935 += 1, R1877 += 1, R1833 += 1, R19 += 1 };
  s1 -> s3 [0, 65535] { R1935 += 1, R1877 += 1, R1832 += 1, R1833 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1935 += 1, R1877 += 1, R1833 += 1, R19 += 1 };
  s2 -> s5 [0, 65535] { R1935 += 1 };
  s2 -> s6 [0, 65535] { R1935 += 1, R1877 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R1935 += 1, R1877 += 1, R1833 += 1, R19 += 1 };
  s3 -> s5 [0, 65535] { R1935 += 1 };
  s3 -> s3 [0, 65535] { R1935 += 1, R1877 += 1, R1832 += 1, R1833 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1935 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R1935 += 1 };
  s6 -> s6 [0, 65535] { R1935 += 1, R1877 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 66] { R1937 += 1, R1879 += 1, R1835 += 1 };
  s0 -> s0 [0, 65535] { R1936 += 1, R1937 += 1 };
  s0 -> s2 [0, 65535] { R1937 += 1, R1879 += 1, R1834 += 1, R1835 += 1 };
  s0 -> s3 [0, 65535] { R1937 += 1, R1878 += 1, R1879 += 1 };
  s0 -> s1 [70, 65535] { R1937 += 1, R1879 += 1, R1835 += 1 };
  s1 -> s1 [0, 66] { R1937 += 1, R1879 += 1, R1835 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R1937 += 1, R1879 += 1 };
  s1 -> s5 [0, 65535] { R1937 += 1 };
  s1 -> s1 [70, 65535] { R1937 += 1, R1879 += 1, R1835 += 1 };
  s2 -> s1 [0, 66] { R1937 += 1, R1879 += 1, R1835 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1937 += 1, R1879 += 1, R1834 += 1, R1835 += 1 };
  s2 -> s5 [0, 65535] { R1937 += 1 };
  s2 -> s1 [70, 65535] { R1937 += 1, R1879 += 1, R1835 += 1 };
  s3 -> s1 [0, 66] { R1937 += 1, R1879 += 1, R1835 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R1937 += 1, R1879 += 1, R1834 += 1, R1835 += 1 };
  s3 -> s3 [0, 65535] { R1937 += 1, R1878 += 1, R1879 += 1 };
  s3 -> s1 [70, 65535] { R1937 += 1, R1879 += 1, R1835 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1937 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R1939 += 1, R1881 += 1, R1836 += 1, R1837 += 1 };
  s0 -> s2 [0, 65535] { R1939 += 1, R1880 += 1, R1881 += 1 };
  s0 -> s0 [0, 65535] { R1938 += 1, R1939 += 1 };
  s0 -> s3 [0, 65535] { R1939 += 1, R1881 += 1, R1837 += 1, R57 += 1 };
  s1 -> s1 [0, 65535] { R1939 += 1, R1881 += 1, R1836 += 1, R1837 += 1 };
  s1 -> s5 [0, 65535] { R1939 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [0, 65535] { R1939 += 1, R1881 += 1, R1837 += 1, R57 += 1 };
  s2 -> s1 [0, 65535] { R1939 += 1, R1881 += 1, R1836 += 1, R1837 += 1 };
  s2 -> s2 [0, 65535] { R1939 += 1, R1880 += 1, R1881 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R1939 += 1, R1881 += 1, R1837 += 1, R57 += 1 };
  s3 -> s4 [0, 65535] { R1939 += 1, R1881 += 1 };
  s3 -> s5 [0, 65535] { R1939 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R1939 += 1, R1881 += 1, R1837 += 1, R57 += 1 };
  s4 -> s4 [0, 65535] { R1939 += 1, R1881 += 1 };
  s4 -> s5 [0, 65535] { R1939 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R1939 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 69] { R1941 += 1, R1883 += 1, R1839 += 1 };
  s0 -> s2 [0, 65535] { R1941 += 1, R1882 += 1, R1883 += 1 };
  s0 -> s3 [0, 65535] { R1941 += 1, R1883 += 1, R1838 += 1, R1839 += 1 };
  s0 -> s0 [0, 65535] { R1940 += 1, R1941 += 1 };
  s0 -> s1 [71, 65535] { R1941 += 1, R1883 += 1, R1839 += 1 };
  s1 -> s1 [0, 69] { R1941 += 1, R1883 += 1, R1839 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R1941 += 1 };
  s1 -> s1 [0, 65535] { R1941 += 1, R1883 += 1 };
  s1 -> s1 [71, 65535] { R1941 += 1, R1883 += 1, R1839 += 1 };
  s2 -> s1 [0, 69] { R1941 += 1, R1883 += 1, R1839 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1941 += 1, R1882 += 1, R1883 += 1 };
  s2 -> s3 [0, 65535] { R1941 += 1, R1883 += 1, R1838 += 1, R1839 += 1 };
  s2 -> s1 [71, 65535] { R1941 += 1, R1883 += 1, R1839 += 1 };
  s3 -> s1 [0, 69] { R1941 += 1, R1883 += 1, R1839 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1941 += 1, R1883 += 1, R1838 += 1, R1839 += 1 };
  s3 -> s5 [0, 65535] { R1941 += 1 };
  s3 -> s1 [71, 65535] { R1941 += 1, R1883 += 1, R1839 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1941 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s0 [0, 65535] { R1942 += 1, R1943 += 1 };
  s0 -> s1 [0, 65535] { R1943 += 1, R1885 += 1, R1841 += 1 };
  s0 -> s2 [0, 65535] { R1943 += 1, R1885 += 1, R1841 += 1, R1689 += 1 };
  s0 -> s3 [0, 65535] { R1943 += 1, R1884 += 1, R1885 += 1 };
  s0 -> s4 [0, 65535] { R1943 += 1, R1885 += 1, R1840 += 1, R1841 += 1 };
  s1 -> s1 [0, 65535] { R1943 += 1, R1885 += 1, R1841 += 1 };
  s1 -> s5 [0, 65535] { R1943 += 1 };
  s1 -> s7 [0, 65535] { R1943 += 1, R1885 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s1 [0, 65535] { R1943 += 1, R1885 += 1, R1841 += 1 };
  s2 -> s2 [0, 65535] { R1943 += 1, R1885 += 1, R1841 += 1, R1689 += 1 };
  s2 -> s5 [0, 65535] { R1943 += 1 };
  s2 -> s7 [0, 65535] { R1943 += 1, R1885 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s1 [0, 65535] { R1943 += 1, R1885 += 1, R1841 += 1 };
  s3 -> s2 [0, 65535] { R1943 += 1, R1885 += 1, R1841 += 1, R1689 += 1 };
  s3 -> s3 [0, 65535] { R1943 += 1, R1884 += 1, R1885 += 1 };
  s3 -> s4 [0, 65535] { R1943 += 1, R1885 += 1, R1840 += 1, R1841 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s1 [0, 65535] { R1943 += 1, R1885 += 1, R1841 += 1 };
  s4 -> s2 [0, 65535] { R1943 += 1, R1885 += 1, R1841 += 1, R1689 += 1 };
  s4 -> s5 [0, 65535] { R1943 += 1 };
  s4 -> s4 [0, 65535] { R1943 += 1, R1885 += 1, R1840 += 1, R1841 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R1943 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R1943 += 1 };
  s7 -> s7 [0, 65535] { R1943 += 1, R1885 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R1945 += 1, R1887 += 1, R1842 += 1, R1843 += 1 };
  s0 -> s2 [0, 65535] { R1945 += 1, R1886 += 1, R1887 += 1 };
  s0 -> s0 [0, 65535] { R1944 += 1, R1945 += 1 };
  s0 -> s3 [0, 65535] { R1945 += 1, R1887 += 1, R1843 += 1, R1828 += 1, R1829 += 1 };
  s0 -> s4 [0, 65535] { R1945 += 1, R1887 += 1, R1843 += 1 };
  s1 -> s1 [0, 65535] { R1945 += 1, R1887 += 1, R1842 += 1, R1843 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R1945 += 1, R1887 += 1, R1843 += 1, R1828 += 1, R1829 += 1 };
  s1 -> s6 [0, 65535] { R1945 += 1 };
  s1 -> s4 [0, 65535] { R1945 += 1, R1887 += 1, R1843 += 1 };
  s2 -> s1 [0, 65535] { R1945 += 1, R1887 += 1, R1842 += 1, R1843 += 1 };
  s2 -> s2 [0, 65535] { R1945 += 1, R1886 += 1, R1887 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R1945 += 1, R1887 += 1, R1843 += 1, R1828 += 1, R1829 += 1 };
  s2 -> s4 [0, 65535] { R1945 += 1, R1887 += 1, R1843 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1945 += 1, R1887 += 1, R1843 += 1, R1828 += 1, R1829 += 1 };
  s3 -> s6 [0, 65535] { R1945 += 1 };
  s3 -> s4 [0, 65535] { R1945 += 1, R1887 += 1, R1843 += 1 };
  s3 -> s7 [0, 65535] { R1945 += 1, R1887 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1945 += 1 };
  s4 -> s4 [0, 65535] { R1945 += 1, R1887 += 1, R1843 += 1 };
  s4 -> s7 [0, 65535] { R1945 += 1, R1887 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1945 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R1945 += 1 };
  s7 -> s7 [0, 65535] { R1945 += 1, R1887 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R1947 += 1, R1889 += 1, R1856 += 1, R1857 += 1 };
  s0 -> s2 [0, 65535] { R1947 += 1, R1889 += 1, R1857 += 1, R20 += 1 };
  s0 -> s3 [0, 65535] { R1947 += 1, R1888 += 1, R1889 += 1 };
  s0 -> s0 [0, 65535] { R1946 += 1, R1947 += 1 };
  s1 -> s1 [0, 65535] { R1947 += 1, R1889 += 1, R1856 += 1, R1857 += 1 };
  s1 -> s2 [0, 65535] { R1947 += 1, R1889 += 1, R1857 += 1, R20 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R1947 += 1 };
  s2 -> s2 [0, 65535] { R1947 += 1, R1889 += 1, R1857 += 1, R20 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R1947 += 1 };
  s2 -> s6 [0, 65535] { R1947 += 1, R1889 += 1 };
  s3 -> s1 [0, 65535] { R1947 += 1, R1889 += 1, R1856 += 1, R1857 += 1 };
  s3 -> s2 [0, 65535] { R1947 += 1, R1889 += 1, R1857 += 1, R20 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1947 += 1, R1888 += 1, R1889 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1947 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R1947 += 1 };
  s6 -> s6 [0, 65535] { R1947 += 1, R1889 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 65] { R1949 += 1, R1891 += 1, R1859 += 1 };
  s0 -> s2 [0, 65535] { R1949 += 1, R1890 += 1, R1891 += 1 };
  s0 -> s3 [0, 65535] { R1949 += 1, R1891 += 1, R1858 += 1, R1859 += 1 };
  s0 -> s0 [0, 65535] { R1948 += 1, R1949 += 1 };
  s0 -> s4 [66, 66] { R1949 += 1, R1891 += 1, R1859 += 1 };
  s0 -> s5 [66, 66] { R1949 += 1, R1891 += 1, R1859 += 1 };
  s0 -> s6 [70, 70] { R1949 += 1, R1891 += 1, R1859 += 1 };
  s0 -> s1 [71, 65535] { R1949 += 1, R1891 += 1, R1859 += 1 };
  s1 -> s1 [0, 65] { R1949 += 1, R1891 += 1, R1859 += 1 };
  s1 -> s4 [66, 66] { R1949 += 1, R1891 += 1, R1859 += 1 };
  s1 -> s5 [66, 66] { R1949 += 1, R1891 += 1, R1859 += 1 };
  s1 -> s6 [70, 70] { R1949 += 1, R1891 += 1, R1859 += 1 };
  s1 -> s1 [71, 65535] { R1949 += 1, R1891 += 1, R1859 += 1 };
  s2 -> s1 [0, 65] { R1949 += 1, R1891 += 1, R1859 += 1 };
  s2 -> s2 [0, 65535] { R1949 += 1, R1890 += 1, R1891 += 1 };
  s2 -> s3 [0, 65535] { R1949 += 1, R1891 += 1, R1858 += 1, R1859 += 1 };
  s2 -> s4 [66, 66] { R1949 += 1, R1891 += 1, R1859 += 1 };
  s2 -> s5 [66, 66] { R1949 += 1, R1891 += 1, R1859 += 1 };
  s2 -> s6 [70, 70] { R1949 += 1, R1891 += 1, R1859 += 1 };
  s2 -> s1 [71, 65535] { R1949 += 1, R1891 += 1, R1859 += 1 };
  s3 -> s1 [0, 65] { R1949 += 1, R1891 += 1, R1859 += 1 };
  s3 -> s3 [0, 65535] { R1949 += 1, R1891 += 1, R1858 += 1, R1859 += 1 };
  s3 -> s4 [66, 66] { R1949 += 1, R1891 += 1, R1859 += 1 };
  s3 -> s5 [66, 66] { R1949 += 1, R1891 += 1, R1859 += 1 };
  s3 -> s6 [70, 70] { R1949 += 1, R1891 += 1, R1859 += 1 };
  s3 -> s1 [71, 65535] { R1949 += 1, R1891 += 1, R1859 += 1 };
  s4 -> s4 [0, 66] { R1949 += 1, R1891 += 1, R1859 += 1 };
  s4 -> s9 [70, 70] { R1949 += 1, R1891 += 1, R1859 += 1 };
  s4 -> s4 [71, 65535] { R1949 += 1, R1891 += 1, R1859 += 1 };
  s6 -> s6 [0, 65] { R1949 += 1, R1891 += 1, R1859 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R1949 += 1, R1891 += 1 };
  s6 -> s8 [0, 65535] { R1949 += 1 };
  s6 -> s9 [66, 66] { R1949 += 1, R1891 += 1, R1859 += 1 };
  s6 -> s10 [66, 66] { R1949 += 1, R1891 += 1, R1859 += 1 };
  s6 -> s6 [70, 65535] { R1949 += 1, R1891 += 1, R1859 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R1949 += 1 };
  s9 -> s9 [0, 66] { R1949 += 1, R1891 += 1, R1859 += 1 };
  s9 -> s9 [0, 65535] { R1949 += 1, R1891 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s8 [0, 65535] { R1949 += 1 };
  s9 -> s9 [70, 65535] { R1949 += 1, R1891 += 1, R1859 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s10 [0, 65535] { R1949 += 1, R1891 += 1 };
  s10 -> s8 [0, 65535] { R1949 += 1 };
  accepting s8, s9, s6, s7, s10;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65] { R1951 += 1, R1893 += 1, R1861 += 1, R56 += 1 };
  s0 -> s0 [0, 65535] { R1950 += 1, R1951 += 1 };
  s0 -> s2 [0, 65535] { R1951 += 1, R1892 += 1, R1893 += 1 };
  s0 -> s3 [0, 65535] { R1951 += 1, R1893 += 1, R1860 += 1, R1861 += 1 };
  s0 -> s4 [66, 66] { R1951 += 1, R1893 += 1, R1861 += 1, R56 += 1 };
  s0 -> s5 [66, 66] { R1951 += 1, R1893 += 1, R1861 += 1, R56 += 1 };
  s0 -> s1 [67, 65535] { R1951 += 1, R1893 += 1, R1861 += 1, R56 += 1 };
  s1 -> s1 [0, 65] { R1951 += 1, R1893 += 1, R1861 += 1, R56 += 1 };
  s1 -> s6 [0, 65535] { R1951 += 1 };
  s1 -> s1 [0, 65535] { R1951 += 1, R1893 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [66, 66] { R1951 += 1, R1893 += 1, R1861 += 1, R56 += 1 };
  s1 -> s5 [66, 66] { R1951 += 1, R1893 += 1, R1861 += 1, R56 += 1 };
  s1 -> s1 [67, 65535] { R1951 += 1, R1893 += 1, R1861 += 1, R56 += 1 };
  s2 -> s1 [0, 65] { R1951 += 1, R1893 += 1, R1861 += 1, R56 += 1 };
  s2 -> s2 [0, 65535] { R1951 += 1, R1892 += 1, R1893 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s3 [0, 65535] { R1951 += 1, R1893 += 1, R1860 += 1, R1861 += 1 };
  s2 -> s4 [66, 66] { R1951 += 1, R1893 += 1, R1861 += 1, R56 += 1 };
  s2 -> s5 [66, 66] { R1951 += 1, R1893 += 1, R1861 += 1, R56 += 1 };
  s2 -> s1 [67, 65535] { R1951 += 1, R1893 += 1, R1861 += 1, R56 += 1 };
  s3 -> s1 [0, 65] { R1951 += 1, R1893 += 1, R1861 += 1, R56 += 1 };
  s3 -> s6 [0, 65535] { R1951 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R1951 += 1, R1893 += 1, R1860 += 1, R1861 += 1 };
  s3 -> s4 [66, 66] { R1951 += 1, R1893 += 1, R1861 += 1, R56 += 1 };
  s3 -> s5 [66, 66] { R1951 += 1, R1893 += 1, R1861 += 1, R56 += 1 };
  s3 -> s1 [67, 65535] { R1951 += 1, R1893 += 1, R1861 += 1, R56 += 1 };
  s4 -> s4 [0, 65535] { R1951 += 1, R1893 += 1 };
  s4 -> s6 [0, 65535] { R1951 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s6 [0, 65535] { R1951 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R1951 += 1, R1893 += 1, R1861 += 1, R56 += 1 };
  s5 -> s8 [0, 65535] { R1951 += 1, R1893 += 1 };
  s6 -> s6 [0, 65535] { R1951 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R1951 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R1951 += 1, R1893 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65] { R1953 += 1, R1895 += 1, R1863 += 1 };
  s0 -> s2 [0, 65] { R1953 += 1, R1895 += 1, R1863 += 1, R1684 += 1 };
  s0 -> s3 [0, 65535] { R1953 += 1, R1894 += 1, R1895 += 1 };
  s0 -> s0 [0, 65535] { R1952 += 1, R1953 += 1 };
  s0 -> s4 [0, 65535] { R1953 += 1, R1895 += 1, R1862 += 1, R1863 += 1 };
  s0 -> s5 [66, 66] { R1953 += 1, R1895 += 1, R1863 += 1 };
  s0 -> s6 [66, 66] { R1953 += 1, R1895 += 1, R1863 += 1 };
  s0 -> s7 [66, 66] { R1953 += 1, R1895 += 1, R1863 += 1, R1684 += 1 };
  s0 -> s8 [66, 66] { R1953 += 1, R1895 += 1, R1863 += 1, R1684 += 1 };
  s0 -> s1 [67, 69] { R1953 += 1, R1895 += 1, R1863 += 1 };
  s0 -> s2 [67, 65535] { R1953 += 1, R1895 += 1, R1863 += 1, R1684 += 1 };
  s0 -> s1 [71, 65535] { R1953 += 1, R1895 += 1, R1863 += 1 };
  s1 -> s1 [0, 65] { R1953 += 1, R1895 += 1, R1863 += 1 };
  s1 -> s1 [0, 65535] { R1953 += 1, R1895 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s10 [0, 65535] { R1953 += 1 };
  s1 -> s5 [66, 66] { R1953 += 1, R1895 += 1, R1863 += 1 };
  s1 -> s6 [66, 66] { R1953 += 1, R1895 += 1, R1863 += 1 };
  s1 -> s1 [67, 69] { R1953 += 1, R1895 += 1, R1863 += 1 };
  s1 -> s1 [71, 65535] { R1953 += 1, R1895 += 1, R1863 += 1 };
  s2 -> s1 [0, 65] { R1953 += 1, R1895 += 1, R1863 += 1 };
  s2 -> s2 [0, 65] { R1953 += 1, R1895 += 1, R1863 += 1, R1684 += 1 };
  s2 -> s5 [66, 66] { R1953 += 1, R1895 += 1, R1863 += 1 };
  s2 -> s6 [66, 66] { R1953 += 1, R1895 += 1, R1863 += 1 };
  s2 -> s7 [66, 66] { R1953 += 1, R1895 += 1, R1863 += 1, R1684 += 1 };
  s2 -> s8 [66, 66] { R1953 += 1, R1895 += 1, R1863 += 1, R1684 += 1 };
  s2 -> s1 [67, 69] { R1953 += 1, R1895 += 1, R1863 += 1 };
  s2 -> s2 [67, 65535] { R1953 += 1, R1895 += 1, R1863 += 1, R1684 += 1 };
  s2 -> s1 [71, 65535] { R1953 += 1, R1895 += 1, R1863 += 1 };
  s3 -> s1 [0, 65] { R1953 += 1, R1895 += 1, R1863 += 1 };
  s3 -> s2 [0, 65] { R1953 += 1, R1895 += 1, R1863 += 1, R1684 += 1 };
  s3 -> s3 [0, 65535] { R1953 += 1, R1894 += 1, R1895 += 1 };
  s3 -> s4 [0, 65535] { R1953 += 1, R1895 += 1, R1862 += 1, R1863 += 1 };
  s3 -> s5 [66, 66] { R1953 += 1, R1895 += 1, R1863 += 1 };
  s3 -> s6 [66, 66] { R1953 += 1, R1895 += 1, R1863 += 1 };
  s3 -> s7 [66, 66] { R1953 += 1, R1895 += 1, R1863 += 1, R1684 += 1 };
  s3 -> s8 [66, 66] { R1953 += 1, R1895 += 1, R1863 += 1, R1684 += 1 };
  s3 -> s1 [67, 69] { R1953 += 1, R1895 += 1, R1863 += 1 };
  s3 -> s2 [67, 65535] { R1953 += 1, R1895 += 1, R1863 += 1, R1684 += 1 };
  s3 -> s1 [71, 65535] { R1953 += 1, R1895 += 1, R1863 += 1 };
  s4 -> s1 [0, 65] { R1953 += 1, R1895 += 1, R1863 += 1 };
  s4 -> s2 [0, 65] { R1953 += 1, R1895 += 1, R1863 += 1, R1684 += 1 };
  s4 -> s4 [0, 65535] { R1953 += 1, R1895 += 1, R1862 += 1, R1863 += 1 };
  s4 -> s5 [66, 66] { R1953 += 1, R1895 += 1, R1863 += 1 };
  s4 -> s6 [66, 66] { R1953 += 1, R1895 += 1, R1863 += 1 };
  s4 -> s7 [66, 66] { R1953 += 1, R1895 += 1, R1863 += 1, R1684 += 1 };
  s4 -> s8 [66, 66] { R1953 += 1, R1895 += 1, R1863 += 1, R1684 += 1 };
  s4 -> s1 [67, 69] { R1953 += 1, R1895 += 1, R1863 += 1 };
  s4 -> s2 [67, 65535] { R1953 += 1, R1895 += 1, R1863 += 1, R1684 += 1 };
  s4 -> s1 [71, 65535] { R1953 += 1, R1895 += 1, R1863 += 1 };
  s5 -> s5 [0, 65535] { R1953 += 1, R1895 += 1 };
  s5 -> s9 [0, 65535];
  s5 -> s10 [0, 65535] { R1953 += 1 };
  s6 -> s6 [0, 69] { R1953 += 1, R1895 += 1, R1863 += 1 };
  s6 -> s6 [0, 65535] { R1953 += 1, R1895 += 1 };
  s6 -> s9 [0, 65535];
  s6 -> s10 [0, 65535] { R1953 += 1 };
  s6 -> s6 [71, 65535] { R1953 += 1, R1895 += 1, R1863 += 1 };
  s7 -> s6 [0, 69] { R1953 += 1, R1895 += 1, R1863 += 1 };
  s7 -> s7 [0, 65535] { R1953 += 1, R1895 += 1, R1863 += 1, R1684 += 1 };
  s7 -> s6 [71, 65535] { R1953 += 1, R1895 += 1, R1863 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R1953 += 1 };
  accepting s5, s9, s6, s1, s10;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 65] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s0 -> s2 [0, 65] { R1955 += 1, R1897 += 1, R1865 += 1, R1686 += 1, R1687 += 1 };
  s0 -> s0 [0, 65535] { R1954 += 1, R1955 += 1 };
  s0 -> s3 [0, 65535] { R1955 += 1, R1896 += 1, R1897 += 1 };
  s0 -> s4 [0, 65535] { R1955 += 1, R1897 += 1, R1864 += 1, R1865 += 1 };
  s0 -> s5 [66, 66] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s0 -> s6 [66, 66] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s0 -> s7 [66, 66] { R1955 += 1, R1897 += 1, R1865 += 1, R1686 += 1, R1687 += 1 };
  s0 -> s8 [66, 66] { R1955 += 1, R1897 += 1, R1865 += 1, R1686 += 1, R1687 += 1 };
  s0 -> s1 [67, 69] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s0 -> s2 [67, 65535] { R1955 += 1, R1897 += 1, R1865 += 1, R1686 += 1, R1687 += 1 };
  s0 -> s9 [70, 70] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s0 -> s1 [71, 65535] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s1 -> s1 [0, 65] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s1 -> s5 [66, 66] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s1 -> s6 [66, 66] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s1 -> s1 [67, 69] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s1 -> s9 [70, 70] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s1 -> s1 [71, 65535] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s2 -> s1 [0, 65] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s2 -> s2 [0, 65] { R1955 += 1, R1897 += 1, R1865 += 1, R1686 += 1, R1687 += 1 };
  s2 -> s5 [66, 66] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s2 -> s6 [66, 66] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s2 -> s7 [66, 66] { R1955 += 1, R1897 += 1, R1865 += 1, R1686 += 1, R1687 += 1 };
  s2 -> s8 [66, 66] { R1955 += 1, R1897 += 1, R1865 += 1, R1686 += 1, R1687 += 1 };
  s2 -> s1 [67, 69] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s2 -> s2 [67, 65535] { R1955 += 1, R1897 += 1, R1865 += 1, R1686 += 1, R1687 += 1 };
  s2 -> s9 [70, 70] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s2 -> s1 [71, 65535] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s3 -> s1 [0, 65] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s3 -> s2 [0, 65] { R1955 += 1, R1897 += 1, R1865 += 1, R1686 += 1, R1687 += 1 };
  s3 -> s3 [0, 65535] { R1955 += 1, R1896 += 1, R1897 += 1 };
  s3 -> s4 [0, 65535] { R1955 += 1, R1897 += 1, R1864 += 1, R1865 += 1 };
  s3 -> s5 [66, 66] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s3 -> s6 [66, 66] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s3 -> s7 [66, 66] { R1955 += 1, R1897 += 1, R1865 += 1, R1686 += 1, R1687 += 1 };
  s3 -> s8 [66, 66] { R1955 += 1, R1897 += 1, R1865 += 1, R1686 += 1, R1687 += 1 };
  s3 -> s1 [67, 69] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s3 -> s2 [67, 65535] { R1955 += 1, R1897 += 1, R1865 += 1, R1686 += 1, R1687 += 1 };
  s3 -> s9 [70, 70] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s3 -> s1 [71, 65535] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s4 -> s1 [0, 65] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s4 -> s2 [0, 65] { R1955 += 1, R1897 += 1, R1865 += 1, R1686 += 1, R1687 += 1 };
  s4 -> s4 [0, 65535] { R1955 += 1, R1897 += 1, R1864 += 1, R1865 += 1 };
  s4 -> s5 [66, 66] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s4 -> s6 [66, 66] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s4 -> s7 [66, 66] { R1955 += 1, R1897 += 1, R1865 += 1, R1686 += 1, R1687 += 1 };
  s4 -> s8 [66, 66] { R1955 += 1, R1897 += 1, R1865 += 1, R1686 += 1, R1687 += 1 };
  s4 -> s1 [67, 69] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s4 -> s2 [67, 65535] { R1955 += 1, R1897 += 1, R1865 += 1, R1686 += 1, R1687 += 1 };
  s4 -> s9 [70, 70] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s4 -> s1 [71, 65535] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s5 -> s5 [0, 69] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s5 -> s13 [70, 70] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s5 -> s5 [71, 65535] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s7 -> s5 [0, 69] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s7 -> s7 [0, 65535] { R1955 += 1, R1897 += 1, R1865 += 1, R1686 += 1, R1687 += 1 };
  s7 -> s13 [70, 70] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s7 -> s5 [71, 65535] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s9 -> s9 [0, 65] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s9 -> s10 [0, 65535];
  s9 -> s9 [0, 65535] { R1955 += 1, R1897 += 1 };
  s9 -> s11 [0, 65535] { R1955 += 1 };
  s9 -> s12 [66, 66] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s9 -> s13 [66, 66] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s9 -> s9 [67, 65535] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s10 -> s10 [0, 65535];
  s11 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R1955 += 1 };
  s12 -> s12 [0, 65535] { R1955 += 1, R1897 += 1 };
  s12 -> s10 [0, 65535];
  s12 -> s11 [0, 65535] { R1955 += 1 };
  s13 -> s10 [0, 65535];
  s13 -> s13 [0, 65535] { R1955 += 1, R1897 += 1, R1865 += 1, R1687 += 1 };
  s13 -> s14 [0, 65535] { R1955 += 1, R1897 += 1 };
  s13 -> s11 [0, 65535] { R1955 += 1 };
  s14 -> s10 [0, 65535];
  s14 -> s14 [0, 65535] { R1955 += 1, R1897 += 1 };
  s14 -> s11 [0, 65535] { R1955 += 1 };
  accepting s12, s13, s9, s14, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 65] { R1957 += 1, R1899 += 1, R1867 += 1, R1824 += 1, R1825 += 1 };
  s0 -> s2 [0, 65] { R1957 += 1, R1899 += 1, R1867 += 1, R1825 += 1, R1826 += 1 };
  s0 -> s3 [0, 65535] { R1957 += 1, R1898 += 1, R1899 += 1 };
  s0 -> s4 [0, 65535] { R1957 += 1, R1899 += 1, R1866 += 1, R1867 += 1 };
  s0 -> s0 [0, 65535] { R1956 += 1, R1957 += 1 };
  s0 -> s5 [66, 66] { R1957 += 1, R1899 += 1, R1867 += 1, R1824 += 1, R1825 += 1 };
  s0 -> s6 [66, 66] { R1957 += 1, R1899 += 1, R1867 += 1, R1825 += 1, R1826 += 1 };
  s0 -> s7 [66, 66] { R1957 += 1, R1899 += 1, R1867 += 1, R1825 += 1, R1826 += 1 };
  s0 -> s8 [66, 66] { R1957 += 1, R1899 += 1, R1867 += 1, R1824 += 1, R1825 += 1 };
  s0 -> s1 [67, 65535] { R1957 += 1, R1899 += 1, R1867 += 1, R1824 += 1, R1825 += 1 };
  s0 -> s2 [67, 65535] { R1957 += 1, R1899 += 1, R1867 += 1, R1825 += 1, R1826 += 1 };
  s1 -> s1 [0, 65] { R1957 += 1, R1899 += 1, R1867 += 1, R1824 += 1, R1825 += 1 };
  s1 -> s2 [0, 65] { R1957 += 1, R1899 += 1, R1867 += 1, R1825 += 1, R1826 += 1 };
  s1 -> s5 [66, 66] { R1957 += 1, R1899 += 1, R1867 += 1, R1824 += 1, R1825 += 1 };
  s1 -> s6 [66, 66] { R1957 += 1, R1899 += 1, R1867 += 1, R1825 += 1, R1826 += 1 };
  s1 -> s7 [66, 66] { R1957 += 1, R1899 += 1, R1867 += 1, R1825 += 1, R1826 += 1 };
  s1 -> s8 [66, 66] { R1957 += 1, R1899 += 1, R1867 += 1, R1824 += 1, R1825 += 1 };
  s1 -> s1 [67, 65535] { R1957 += 1, R1899 += 1, R1867 += 1, R1824 += 1, R1825 += 1 };
  s1 -> s2 [67, 65535] { R1957 += 1, R1899 += 1, R1867 += 1, R1825 += 1, R1826 += 1 };
  s2 -> s2 [0, 65] { R1957 += 1, R1899 += 1, R1867 += 1, R1825 += 1, R1826 += 1 };
  s2 -> s2 [0, 65535] { R1957 += 1, R1899 += 1 };
  s2 -> s9 [0, 65535];
  s2 -> s10 [0, 65535] { R1957 += 1 };
  s2 -> s6 [66, 66] { R1957 += 1, R1899 += 1, R1867 += 1, R1825 += 1, R1826 += 1 };
  s2 -> s7 [66, 66] { R1957 += 1, R1899 += 1, R1867 += 1, R1825 += 1, R1826 += 1 };
  s2 -> s2 [67, 65535] { R1957 += 1, R1899 += 1, R1867 += 1, R1825 += 1, R1826 += 1 };
  s3 -> s1 [0, 65] { R1957 += 1, R1899 += 1, R1867 += 1, R1824 += 1, R1825 += 1 };
  s3 -> s2 [0, 65] { R1957 += 1, R1899 += 1, R1867 += 1, R1825 += 1, R1826 += 1 };
  s3 -> s3 [0, 65535] { R1957 += 1, R1898 += 1, R1899 += 1 };
  s3 -> s4 [0, 65535] { R1957 += 1, R1899 += 1, R1866 += 1, R1867 += 1 };
  s3 -> s5 [66, 66] { R1957 += 1, R1899 += 1, R1867 += 1, R1824 += 1, R1825 += 1 };
  s3 -> s6 [66, 66] { R1957 += 1, R1899 += 1, R1867 += 1, R1825 += 1, R1826 += 1 };
  s3 -> s7 [66, 66] { R1957 += 1, R1899 += 1, R1867 += 1, R1825 += 1, R1826 += 1 };
  s3 -> s8 [66, 66] { R1957 += 1, R1899 += 1, R1867 += 1, R1824 += 1, R1825 += 1 };
  s3 -> s1 [67, 65535] { R1957 += 1, R1899 += 1, R1867 += 1, R1824 += 1, R1825 += 1 };
  s3 -> s2 [67, 65535] { R1957 += 1, R1899 += 1, R1867 += 1, R1825 += 1, R1826 += 1 };
  s4 -> s1 [0, 65] { R1957 += 1, R1899 += 1, R1867 += 1, R1824 += 1, R1825 += 1 };
  s4 -> s2 [0, 65] { R1957 += 1, R1899 += 1, R1867 += 1, R1825 += 1, R1826 += 1 };
  s4 -> s4 [0, 65535] { R1957 += 1, R1899 += 1, R1866 += 1, R1867 += 1 };
  s4 -> s5 [66, 66] { R1957 += 1, R1899 += 1, R1867 += 1, R1824 += 1, R1825 += 1 };
  s4 -> s6 [66, 66] { R1957 += 1, R1899 += 1, R1867 += 1, R1825 += 1, R1826 += 1 };
  s4 -> s7 [66, 66] { R1957 += 1, R1899 += 1, R1867 += 1, R1825 += 1, R1826 += 1 };
  s4 -> s8 [66, 66] { R1957 += 1, R1899 += 1, R1867 += 1, R1824 += 1, R1825 += 1 };
  s4 -> s1 [67, 65535] { R1957 += 1, R1899 += 1, R1867 += 1, R1824 += 1, R1825 += 1 };
  s4 -> s2 [67, 65535] { R1957 += 1, R1899 += 1, R1867 += 1, R1825 += 1, R1826 += 1 };
  s6 -> s6 [0, 65535] { R1957 += 1, R1899 += 1, R1867 += 1, R1825 += 1, R1826 += 1 };
  s6 -> s9 [0, 65535];
  s6 -> s10 [0, 65535] { R1957 += 1 };
  s6 -> s11 [0, 65535] { R1957 += 1, R1899 += 1 };
  s7 -> s7 [0, 65535] { R1957 += 1, R1899 += 1 };
  s7 -> s9 [0, 65535];
  s7 -> s10 [0, 65535] { R1957 += 1 };
  s8 -> s6 [0, 65535] { R1957 += 1, R1899 += 1, R1867 += 1, R1825 += 1, R1826 += 1 };
  s8 -> s8 [0, 65535] { R1957 += 1, R1899 += 1, R1867 += 1, R1824 += 1, R1825 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R1957 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s10 [0, 65535] { R1957 += 1 };
  s11 -> s11 [0, 65535] { R1957 += 1, R1899 += 1 };
  accepting s2, s9, s6, s7, s10, s11;
};
};
synchronised {  // Automata constraining P37
automaton P37_0 {
  init s0;
  s0 -> s1 [9, 9];
  accepting s1;
};
};
synchronised {  // Automata constraining P38
automaton P38_0 {
  init s0;
  s0 -> s1 [10, 10];
  accepting s1;
};
};
synchronised {  // Automata constraining P36
automaton P36_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
constraint R2 = R1899 && R3 - R1957 = 1 && R22 - R1899 = -1 && R23 = R1899 && R24 - R1899 = -1 && R25 = R1899 && R26 = 0 && R27 = 1 && R28 = 0 && R29 = 1 && R30 = R1957 && R31 - R1957 = 1 && R32 = R1957 && R33 - R1957 = 1 && R34 = 0 && R35 = 1 && R36 = 0 && R37 = 1 && R42 + R57 + R56 + -1*R1689 + -1*R1687 - R47 = 0 && R46 + R1688 + R1686 = 0 && R1858 = 0 && R1859 = 0 && R1862 = 0 && R1863 = 0 && R1864 = 0 && R1865 = 0 && R1866 = 0 && R1867 = 0 && R1868 = 0 && R1869 = R1899 && R1870 = 0 && R1871 = R1899 && R1872 = 0 && R1873 = R1899 && R1874 = 0 && R1875 = R1899 && R1876 = 0 && R1877 = R1899 && R1878 = 0 && R1879 = R1899 && R1880 = 0 && R1881 = R1899 && R1882 = 0 && R1883 = R1899 && R1884 = 0 && R1885 = R1899 && R1886 = 0 && R1887 = R1899 && R1888 = 0 && R1889 = R1899 && R1890 = 0 && R1891 = R1899 && R1892 = 0 && R1893 = R1899 && R1894 = 0 && R1895 = R1899 && R1896 = 0 && R1897 = R1899 && R1898 = 0 && R1900 = 0 && R1901 = R1957 && R1902 = 0 && R1903 = R1957 && R1904 = 0 && R1905 = R1957 && R1906 = 0 && R1907 = R1957 && R1908 = 0 && R1909 = R1957 && R1910 = 0 && R1911 = R1957 && R1912 = 0 && R1913 = R1957 && R1914 = 0 && R1915 = R1957 && R1916 = 0 && R1917 = R1957 && R1918 = 0 && R1919 = R1957 && R1920 = 0 && R1921 = R1957 && R1922 = 0 && R1923 = R1957 && R1924 = 0 && R1925 = R1957 && R1926 = 0 && R1927 = R1957 && R1928 = 0 && R1929 = R1957 && R1930 = 0 && R1931 = R1957 && R1932 = 0 && R1933 = R1957 && R1934 = 0 && R1935 = R1957 && R1936 = 0 && R1937 = R1957 && R1938 = 0 && R1939 = R1957 && R1940 = 0 && R1941 = R1957 && R1942 = 0 && R1943 = R1957 && R1944 = 0 && R1945 = R1957 && R1946 = 0 && R1947 = R1957 && R1948 = 0 && R1949 = R1957 && R1950 = 0 && R1951 = R1957 && R1952 = 0 && R1953 = R1957 && R1954 = 0 && R1955 = R1957 && R1956 = 0 && -1 < R1 && R11 < 1 && R14 < 1 && R17 < 1 && R44 + R1685 + R1684 < 1 && -1*R1689 + -1*R1687 - R47 < 1 && 0 < R1899 && -1 < R1957 && (R1 != 0 || R19 = 0 || (R1830 = 0 && R1831 = 0)) && (R1 != 0 || R19 = 0 || (R1832 = 0 && R1833 = 0)) && (R1 != 0 || R19 = 0 || (R1834 = 0 && R1835 = 0)) && (R1 != 0 || R19 = 0 || (R1836 = 0 && R1837 = 0)) && (R1 != 0 || R19 = 0 || (R1838 = 0 && R1839 = 0)) && (R1 != 0 || R19 = 0 || (R1840 = 0 && R1841 = 0)) && (R1 != 0 || R19 = 0 || (R1842 = 0 && R1843 = 0)) && (R47 + R1689 + R1687 != 0 || R52 + R1829 + R1826 = 0 || (R50 + R1827 + R1824 = 0 && R51 + R1828 + R1825 = 0)) && (R50 + R1827 + R1824 != 0 || R47 + R1689 + R1687 + -1*R1828 + -1*R1825 - R51 = 0 || R47 + R1689 + R1687 < 1) && (R1830 != 0 || R1 = R1831 || R1 < 1) && (R1832 != 0 || R1 = R1833 || R1 < 1) && (R1834 != 0 || R1 = R1835 || R1 < 1) && (R1836 != 0 || R1 = R1837 || R1 < 1) && (R1838 != 0 || R1 = R1839 || R1 < 1) && (R1840 != 0 || R1 = R1841 || R1 < 1) && (R1842 != 0 || R1 = R1843 || R1 < 1) && (R20 = 0 || (R1856 = 0 && R1857 = 0)) && (R20 = 0 || (R1860 = 0 && R1861 = 0)) && (R21 = 0 || (R1844 = 0 && R1845 = 0)) && (R21 = 0 || (R1846 = 0 && R1847 = 0)) && (R21 = 0 || (R1848 = 0 && R1849 = 0)) && (R21 = 0 || (R1850 = 0 && R1851 = 0)) && (R21 = 0 || (R1852 = 0 && R1853 = 0)) && (R21 = 0 || (R1854 = 0 && R1855 = 0)) && (R50 + R1827 + R1824 = 0 || R47 + R1689 + R1687 < 1) && (R1830 = 0 || R1 < 1) && (R1832 = 0 || R1 < 1) && (R1834 = 0 || R1 < 1) && (R1836 = 0 || R1 < 1) && (R1838 = 0 || R1 < 1) && (R1840 = 0 || R1 < 1) && (R1842 = 0 || R1 < 1);
// End of Parikh automata intersection problem
