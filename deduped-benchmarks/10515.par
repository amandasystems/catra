// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R14, R17, R19, R198, R199, R2, R20, R200, R201, R202, R203, R204, R205, R206, R207, R208, R209, R21, R210, R211, R212, R213, R214, R215, R216, R217, R218, R219, R22, R220, R221, R222, R223, R224, R225, R226, R227, R228, R229, R23, R230, R231, R232, R233, R234, R235, R236, R237, R238, R239, R24, R240, R241, R242, R243, R244, R245, R246, R247, R248, R249, R25, R250, R251, R252, R253, R254, R255, R256, R257, R258, R259, R26, R260, R261, R262, R263, R264, R265, R266, R267, R268, R269, R27, R270, R271, R272, R273, R274, R275, R276, R277, R278, R279, R28, R280, R281, R282, R283, R284, R285, R286, R287, R288, R289, R29, R290, R291, R292, R293, R294, R295, R296, R297, R298, R299, R3, R30, R300, R301, R302, R303, R304, R305, R306, R307, R308, R309, R31, R310, R311, R312, R313, R314, R315, R316, R317, R318, R319, R32, R320, R321, R322, R323, R324, R325, R326, R327, R328, R329, R33, R330, R331, R34, R35, R36, R37, R4, R42, R44, R46, R47, R5, R50, R51, R52, R56, R57, R58, R59, R6, R60, R61, R62, R63, R7;
synchronised {  // Automata constraining P9
automaton P9_0 {
  init s0;
  s0 -> s1 [98, 98];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R17 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R30 += 1, R31 += 1 };
  s0 -> s1 [13, 13] { R31 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s0 [0, 65535] { R32 += 1, R33 += 1 };
  s0 -> s1 [0, 65535] { R33 += 1, R6 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R33 += 1, R6 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R35 += 1 };
  s0 -> s0 [0, 65535] { R34 += 1, R35 += 1 };
  s0 -> s2 [9, 13] { R35 += 1 };
  s0 -> s1 [14, 31] { R35 += 1 };
  s0 -> s2 [32, 32] { R35 += 1 };
  s0 -> s1 [33, 65535] { R35 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R35 += 1 };
  s2 -> s1 [0, 65535] { R35 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 65535] { R37 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R36 += 1, R37 += 1 };
  s1 -> s1 [0, 65535] { R37 += 1, R7 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R275 += 1 };
  s0 -> s0 [0, 65535] { R274 += 1, R275 += 1 };
  s0 -> s2 [66, 66] { R275 += 1 };
  s0 -> s1 [67, 65535] { R275 += 1 };
  s1 -> s1 [0, 64] { R275 += 1 };
  s1 -> s2 [66, 66] { R275 += 1 };
  s1 -> s1 [67, 65535] { R275 += 1 };
  s2 -> s2 [0, 64] { R275 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [66, 65535] { R275 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R276 += 1, R277 += 1 };
  s0 -> s1 [0, 65535] { R277 += 1, R2 += 1 };
  s1 -> s1 [0, 65535] { R277 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 65] { R279 += 1 };
  s0 -> s0 [0, 65535] { R278 += 1, R279 += 1 };
  s0 -> s2 [0, 65535] { R279 += 1, R14 += 1 };
  s0 -> s3 [66, 66] { R279 += 1 };
  s0 -> s1 [67, 65535] { R279 += 1 };
  s1 -> s1 [0, 65] { R279 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [66, 66] { R279 += 1 };
  s1 -> s1 [67, 65535] { R279 += 1 };
  s2 -> s1 [0, 65] { R279 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R279 += 1, R14 += 1 };
  s2 -> s3 [66, 66] { R279 += 1 };
  s2 -> s1 [67, 65535] { R279 += 1 };
  s3 -> s3 [0, 65535] { R279 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R281 += 1, R23 += 1 };
  s0 -> s0 [0, 65535] { R280 += 1, R281 += 1 };
  s0 -> s2 [0, 65535] { R281 += 1, R22 += 1, R23 += 1 };
  s0 -> s3 [9, 13] { R281 += 1, R23 += 1 };
  s0 -> s1 [14, 31] { R281 += 1, R23 += 1 };
  s0 -> s3 [32, 32] { R281 += 1, R23 += 1 };
  s0 -> s1 [33, 65535] { R281 += 1, R23 += 1 };
  s1 -> s1 [0, 65535] { R281 += 1, R23 += 1 };
  s1 -> s5 [0, 65535] { R281 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 8] { R281 += 1, R23 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R281 += 1, R22 += 1, R23 += 1 };
  s2 -> s3 [9, 13] { R281 += 1, R23 += 1 };
  s2 -> s1 [14, 31] { R281 += 1, R23 += 1 };
  s2 -> s3 [32, 32] { R281 += 1, R23 += 1 };
  s2 -> s1 [33, 65535] { R281 += 1, R23 += 1 };
  s3 -> s1 [0, 65535] { R281 += 1, R23 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R281 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 65535] { R283 += 1, R25 += 1, R4 += 1 };
  s0 -> s2 [0, 65535] { R283 += 1, R24 += 1, R25 += 1 };
  s0 -> s0 [0, 65535] { R282 += 1, R283 += 1 };
  s1 -> s1 [0, 65535] { R283 += 1, R25 += 1, R4 += 1 };
  s1 -> s4 [0, 65535] { R283 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R283 += 1, R25 += 1, R4 += 1 };
  s2 -> s2 [0, 65535] { R283 += 1, R24 += 1, R25 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R283 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R285 += 1, R27 += 1 };
  s0 -> s0 [0, 65535] { R284 += 1, R285 += 1 };
  s0 -> s2 [0, 65535] { R285 += 1, R26 += 1, R27 += 1 };
  s0 -> s3 [9, 13] { R285 += 1, R27 += 1 };
  s0 -> s1 [14, 31] { R285 += 1, R27 += 1 };
  s0 -> s3 [32, 32] { R285 += 1, R27 += 1 };
  s0 -> s1 [33, 65535] { R285 += 1, R27 += 1 };
  s1 -> s5 [0, 65535] { R285 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R285 += 1, R27 += 1 };
  s2 -> s1 [0, 8] { R285 += 1, R27 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R285 += 1, R26 += 1, R27 += 1 };
  s2 -> s3 [9, 13] { R285 += 1, R27 += 1 };
  s2 -> s1 [14, 31] { R285 += 1, R27 += 1 };
  s2 -> s3 [32, 32] { R285 += 1, R27 += 1 };
  s2 -> s1 [33, 65535] { R285 += 1, R27 += 1 };
  s3 -> s1 [0, 65535] { R285 += 1, R27 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R285 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 65535] { R287 += 1, R29 += 1, R5 += 1 };
  s0 -> s2 [0, 65535] { R287 += 1, R28 += 1, R29 += 1 };
  s0 -> s0 [0, 65535] { R286 += 1, R287 += 1 };
  s1 -> s4 [0, 65535] { R287 += 1 };
  s1 -> s1 [0, 65535] { R287 += 1, R29 += 1, R5 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R287 += 1, R29 += 1, R5 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R287 += 1, R28 += 1, R29 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R287 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 65535] { R289 += 1, R219 += 1, R21 += 1 };
  s0 -> s2 [0, 65535] { R289 += 1, R218 += 1, R219 += 1 };
  s0 -> s0 [0, 65535] { R288 += 1, R289 += 1 };
  s1 -> s1 [0, 65535] { R289 += 1, R219 += 1, R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R289 += 1 };
  s2 -> s1 [0, 65535] { R289 += 1, R219 += 1, R21 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R289 += 1, R218 += 1, R219 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R289 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 65] { R291 += 1, R221 += 1 };
  s0 -> s0 [0, 65535] { R290 += 1, R291 += 1 };
  s0 -> s2 [0, 65535] { R291 += 1, R220 += 1, R221 += 1 };
  s0 -> s3 [66, 66] { R291 += 1, R221 += 1 };
  s0 -> s4 [66, 66] { R291 += 1, R221 += 1 };
  s0 -> s1 [71, 65535] { R291 += 1, R221 += 1 };
  s1 -> s1 [0, 65] { R291 += 1, R221 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R291 += 1 };
  s1 -> s3 [66, 66] { R291 += 1, R221 += 1 };
  s1 -> s4 [66, 66] { R291 += 1, R221 += 1 };
  s1 -> s1 [71, 65535] { R291 += 1, R221 += 1 };
  s2 -> s1 [0, 65] { R291 += 1, R221 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R291 += 1, R220 += 1, R221 += 1 };
  s2 -> s3 [66, 66] { R291 += 1, R221 += 1 };
  s2 -> s4 [66, 66] { R291 += 1, R221 += 1 };
  s2 -> s1 [71, 65535] { R291 += 1, R221 += 1 };
  s3 -> s3 [0, 66] { R291 += 1, R221 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R291 += 1 };
  s3 -> s3 [71, 65535] { R291 += 1, R221 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R291 += 1 };
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 65] { R293 += 1, R223 += 1, R42 += 1 };
  s0 -> s0 [0, 65535] { R292 += 1, R293 += 1 };
  s0 -> s2 [0, 65535] { R293 += 1, R222 += 1, R223 += 1 };
  s0 -> s3 [66, 66] { R293 += 1, R223 += 1, R42 += 1 };
  s0 -> s4 [66, 66] { R293 += 1, R223 += 1, R42 += 1 };
  s0 -> s1 [67, 65535] { R293 += 1, R223 += 1, R42 += 1 };
  s1 -> s1 [0, 65] { R293 += 1, R223 += 1, R42 += 1 };
  s1 -> s1 [0, 65535] { R293 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R293 += 1, R223 += 1, R42 += 1 };
  s1 -> s4 [66, 66] { R293 += 1, R223 += 1, R42 += 1 };
  s1 -> s1 [67, 65535] { R293 += 1, R223 += 1, R42 += 1 };
  s2 -> s1 [0, 65] { R293 += 1, R223 += 1, R42 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R293 += 1, R222 += 1, R223 += 1 };
  s2 -> s3 [66, 66] { R293 += 1, R223 += 1, R42 += 1 };
  s2 -> s4 [66, 66] { R293 += 1, R223 += 1, R42 += 1 };
  s2 -> s1 [67, 65535] { R293 += 1, R223 += 1, R42 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R293 += 1, R223 += 1, R42 += 1 };
  s3 -> s6 [0, 65535] { R293 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R293 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R293 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 65] { R295 += 1, R225 += 1, R44 += 1 };
  s0 -> s0 [0, 65535] { R294 += 1, R295 += 1 };
  s0 -> s2 [0, 65535] { R295 += 1, R224 += 1, R225 += 1 };
  s0 -> s3 [66, 66] { R295 += 1, R225 += 1, R44 += 1 };
  s0 -> s4 [66, 66] { R295 += 1, R225 += 1, R44 += 1 };
  s0 -> s1 [67, 65535] { R295 += 1, R225 += 1, R44 += 1 };
  s1 -> s1 [0, 65] { R295 += 1, R225 += 1, R44 += 1 };
  s1 -> s1 [0, 65535] { R295 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R295 += 1, R225 += 1, R44 += 1 };
  s1 -> s4 [66, 66] { R295 += 1, R225 += 1, R44 += 1 };
  s1 -> s1 [67, 65535] { R295 += 1, R225 += 1, R44 += 1 };
  s2 -> s1 [0, 65] { R295 += 1, R225 += 1, R44 += 1 };
  s2 -> s2 [0, 65535] { R295 += 1, R224 += 1, R225 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R295 += 1, R225 += 1, R44 += 1 };
  s2 -> s4 [66, 66] { R295 += 1, R225 += 1, R44 += 1 };
  s2 -> s1 [67, 65535] { R295 += 1, R225 += 1, R44 += 1 };
  s3 -> s3 [0, 65535] { R295 += 1, R225 += 1, R44 += 1 };
  s3 -> s6 [0, 65535] { R295 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R295 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R295 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65] { R297 += 1, R227 += 1, R46 += 1, R47 += 1 };
  s0 -> s2 [0, 65535] { R297 += 1, R226 += 1, R227 += 1 };
  s0 -> s0 [0, 65535] { R296 += 1, R297 += 1 };
  s0 -> s3 [66, 66] { R297 += 1, R227 += 1, R46 += 1, R47 += 1 };
  s0 -> s4 [66, 66] { R297 += 1, R227 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [67, 65535] { R297 += 1, R227 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65] { R297 += 1, R227 += 1, R46 += 1, R47 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R297 += 1 };
  s1 -> s3 [66, 66] { R297 += 1, R227 += 1, R46 += 1, R47 += 1 };
  s1 -> s4 [66, 66] { R297 += 1, R227 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [67, 65535] { R297 += 1, R227 += 1, R46 += 1, R47 += 1 };
  s2 -> s1 [0, 65] { R297 += 1, R227 += 1, R46 += 1, R47 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R297 += 1, R226 += 1, R227 += 1 };
  s2 -> s3 [66, 66] { R297 += 1, R227 += 1, R46 += 1, R47 += 1 };
  s2 -> s4 [66, 66] { R297 += 1, R227 += 1, R46 += 1, R47 += 1 };
  s2 -> s1 [67, 65535] { R297 += 1, R227 += 1, R46 += 1, R47 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R297 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R297 += 1, R227 += 1, R46 += 1, R47 += 1 };
  s4 -> s6 [0, 65535] { R297 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R297 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 65] { R299 += 1, R229 += 1, R50 += 1, R51 += 1 };
  s0 -> s2 [0, 65535] { R299 += 1, R228 += 1, R229 += 1 };
  s0 -> s0 [0, 65535] { R298 += 1, R299 += 1 };
  s0 -> s3 [66, 66] { R299 += 1, R229 += 1, R50 += 1, R51 += 1 };
  s0 -> s4 [66, 66] { R299 += 1, R229 += 1, R50 += 1, R51 += 1 };
  s0 -> s1 [67, 65535] { R299 += 1, R229 += 1, R50 += 1, R51 += 1 };
  s1 -> s1 [0, 65] { R299 += 1, R229 += 1, R50 += 1, R51 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R299 += 1 };
  s1 -> s3 [66, 66] { R299 += 1, R229 += 1, R50 += 1, R51 += 1 };
  s1 -> s4 [66, 66] { R299 += 1, R229 += 1, R50 += 1, R51 += 1 };
  s1 -> s1 [67, 65535] { R299 += 1, R229 += 1, R50 += 1, R51 += 1 };
  s2 -> s1 [0, 65] { R299 += 1, R229 += 1, R50 += 1, R51 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R299 += 1, R228 += 1, R229 += 1 };
  s2 -> s3 [66, 66] { R299 += 1, R229 += 1, R50 += 1, R51 += 1 };
  s2 -> s4 [66, 66] { R299 += 1, R229 += 1, R50 += 1, R51 += 1 };
  s2 -> s1 [67, 65535] { R299 += 1, R229 += 1, R50 += 1, R51 += 1 };
  s3 -> s3 [0, 65535] { R299 += 1, R229 += 1, R50 += 1, R51 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R299 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R299 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R299 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 65] { R301 += 1, R243 += 1 };
  s0 -> s2 [0, 65535] { R301 += 1, R242 += 1, R243 += 1 };
  s0 -> s0 [0, 65535] { R300 += 1, R301 += 1 };
  s0 -> s3 [66, 66] { R301 += 1, R243 += 1 };
  s0 -> s1 [67, 65535] { R301 += 1, R243 += 1 };
  s1 -> s1 [0, 65] { R301 += 1, R243 += 1 };
  s1 -> s3 [66, 66] { R301 += 1, R243 += 1 };
  s1 -> s1 [67, 65535] { R301 += 1, R243 += 1 };
  s2 -> s1 [0, 65] { R301 += 1, R243 += 1 };
  s2 -> s2 [0, 65535] { R301 += 1, R242 += 1, R243 += 1 };
  s2 -> s3 [66, 66] { R301 += 1, R243 += 1 };
  s2 -> s1 [67, 65535] { R301 += 1, R243 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R301 += 1, R243 += 1 };
  s3 -> s5 [0, 65535] { R301 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R301 += 1 };
  accepting s3, s4, s5;
};
automaton value2_21 {
  init s0;
  s0 -> s0 [0, 65535] { R302 += 1, R303 += 1 };
  s0 -> s1 [0, 65535] { R303 += 1, R244 += 1, R245 += 1 };
  s0 -> s2 [0, 65535] { R303 += 1, R245 += 1, R1 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R303 += 1, R244 += 1, R245 += 1 };
  s1 -> s2 [0, 65535] { R303 += 1, R245 += 1, R1 += 1 };
  s2 -> s3 [0, 65535] { R303 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R303 += 1, R245 += 1, R1 += 1 };
  s3 -> s3 [0, 65535] { R303 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 65] { R305 += 1, R247 += 1 };
  s0 -> s2 [0, 65535] { R305 += 1, R247 += 1, R11 += 1 };
  s0 -> s0 [0, 65535] { R304 += 1, R305 += 1 };
  s0 -> s3 [0, 65535] { R305 += 1, R246 += 1, R247 += 1 };
  s0 -> s4 [66, 66] { R305 += 1, R247 += 1 };
  s0 -> s1 [67, 65535] { R305 += 1, R247 += 1 };
  s1 -> s1 [0, 65] { R305 += 1, R247 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R305 += 1 };
  s1 -> s4 [66, 66] { R305 += 1, R247 += 1 };
  s1 -> s1 [67, 65535] { R305 += 1, R247 += 1 };
  s2 -> s1 [0, 65] { R305 += 1, R247 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R305 += 1, R247 += 1, R11 += 1 };
  s2 -> s6 [0, 65535] { R305 += 1 };
  s2 -> s4 [66, 66] { R305 += 1, R247 += 1 };
  s2 -> s1 [67, 65535] { R305 += 1, R247 += 1 };
  s3 -> s1 [0, 65] { R305 += 1, R247 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R305 += 1, R247 += 1, R11 += 1 };
  s3 -> s3 [0, 65535] { R305 += 1, R246 += 1, R247 += 1 };
  s3 -> s4 [66, 66] { R305 += 1, R247 += 1 };
  s3 -> s1 [67, 65535] { R305 += 1, R247 += 1 };
  s4 -> s4 [0, 65535] { R305 += 1, R247 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R305 += 1 };
  accepting s3, s5, s2, s6, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65] { R307 += 1, R249 += 1, R205 += 1 };
  s0 -> s2 [0, 65535] { R307 += 1, R248 += 1, R249 += 1 };
  s0 -> s3 [0, 65535] { R307 += 1, R249 += 1, R204 += 1, R205 += 1 };
  s0 -> s0 [0, 65535] { R306 += 1, R307 += 1 };
  s0 -> s1 [67, 65535] { R307 += 1, R249 += 1, R205 += 1 };
  s1 -> s1 [0, 65] { R307 += 1, R249 += 1, R205 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R307 += 1, R249 += 1 };
  s1 -> s5 [0, 65535] { R307 += 1 };
  s1 -> s1 [67, 65535] { R307 += 1, R249 += 1, R205 += 1 };
  s2 -> s1 [0, 65] { R307 += 1, R249 += 1, R205 += 1 };
  s2 -> s2 [0, 65535] { R307 += 1, R248 += 1, R249 += 1 };
  s2 -> s3 [0, 65535] { R307 += 1, R249 += 1, R204 += 1, R205 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [67, 65535] { R307 += 1, R249 += 1, R205 += 1 };
  s3 -> s1 [0, 65] { R307 += 1, R249 += 1, R205 += 1 };
  s3 -> s3 [0, 65535] { R307 += 1, R249 += 1, R204 += 1, R205 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R307 += 1 };
  s3 -> s1 [67, 65535] { R307 += 1, R249 += 1, R205 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R307 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 65535] { R309 += 1, R251 += 1, R206 += 1, R207 += 1 };
  s0 -> s2 [0, 65535] { R309 += 1, R251 += 1, R207 += 1, R19 += 1 };
  s0 -> s0 [0, 65535] { R308 += 1, R309 += 1 };
  s0 -> s3 [0, 65535] { R309 += 1, R250 += 1, R251 += 1 };
  s1 -> s1 [0, 65535] { R309 += 1, R251 += 1, R206 += 1, R207 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R309 += 1, R251 += 1, R207 += 1, R19 += 1 };
  s1 -> s6 [0, 65535] { R309 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R309 += 1, R251 += 1 };
  s2 -> s2 [0, 65535] { R309 += 1, R251 += 1, R207 += 1, R19 += 1 };
  s2 -> s6 [0, 65535] { R309 += 1 };
  s3 -> s1 [0, 65535] { R309 += 1, R251 += 1, R206 += 1, R207 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R309 += 1, R251 += 1, R207 += 1, R19 += 1 };
  s3 -> s3 [0, 65535] { R309 += 1, R250 += 1, R251 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R309 += 1, R251 += 1 };
  s5 -> s6 [0, 65535] { R309 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R309 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 66] { R311 += 1, R253 += 1, R209 += 1 };
  s0 -> s0 [0, 65535] { R310 += 1, R311 += 1 };
  s0 -> s2 [0, 65535] { R311 += 1, R252 += 1, R253 += 1 };
  s0 -> s3 [0, 65535] { R311 += 1, R253 += 1, R208 += 1, R209 += 1 };
  s0 -> s1 [70, 65535] { R311 += 1, R253 += 1, R209 += 1 };
  s1 -> s1 [0, 66] { R311 += 1, R253 += 1, R209 += 1 };
  s1 -> s1 [0, 65535] { R311 += 1, R253 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R311 += 1 };
  s1 -> s1 [70, 65535] { R311 += 1, R253 += 1, R209 += 1 };
  s2 -> s1 [0, 66] { R311 += 1, R253 += 1, R209 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R311 += 1, R252 += 1, R253 += 1 };
  s2 -> s3 [0, 65535] { R311 += 1, R253 += 1, R208 += 1, R209 += 1 };
  s2 -> s1 [70, 65535] { R311 += 1, R253 += 1, R209 += 1 };
  s3 -> s1 [0, 66] { R311 += 1, R253 += 1, R209 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R311 += 1 };
  s3 -> s3 [0, 65535] { R311 += 1, R253 += 1, R208 += 1, R209 += 1 };
  s3 -> s1 [70, 65535] { R311 += 1, R253 += 1, R209 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R311 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R313 += 1, R255 += 1, R210 += 1, R211 += 1 };
  s0 -> s2 [0, 65535] { R313 += 1, R254 += 1, R255 += 1 };
  s0 -> s0 [0, 65535] { R312 += 1, R313 += 1 };
  s0 -> s3 [0, 65535] { R313 += 1, R255 += 1, R211 += 1, R57 += 1 };
  s1 -> s1 [0, 65535] { R313 += 1, R255 += 1, R210 += 1, R211 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R313 += 1 };
  s1 -> s3 [0, 65535] { R313 += 1, R255 += 1, R211 += 1, R57 += 1 };
  s2 -> s1 [0, 65535] { R313 += 1, R255 += 1, R210 += 1, R211 += 1 };
  s2 -> s2 [0, 65535] { R313 += 1, R254 += 1, R255 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R313 += 1, R255 += 1, R211 += 1, R57 += 1 };
  s3 -> s4 [0, 65535] { R313 += 1, R255 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R313 += 1 };
  s3 -> s3 [0, 65535] { R313 += 1, R255 += 1, R211 += 1, R57 += 1 };
  s4 -> s4 [0, 65535] { R313 += 1, R255 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R313 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R313 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 69] { R315 += 1, R257 += 1, R213 += 1 };
  s0 -> s2 [0, 65535] { R315 += 1, R256 += 1, R257 += 1 };
  s0 -> s3 [0, 65535] { R315 += 1, R257 += 1, R212 += 1, R213 += 1 };
  s0 -> s4 [0, 65535] { R315 += 1, R257 += 1, R213 += 1, R59 += 1 };
  s0 -> s0 [0, 65535] { R314 += 1, R315 += 1 };
  s0 -> s1 [71, 65535] { R315 += 1, R257 += 1, R213 += 1 };
  s1 -> s1 [0, 69] { R315 += 1, R257 += 1, R213 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R315 += 1 };
  s1 -> s1 [0, 65535] { R315 += 1, R257 += 1 };
  s1 -> s1 [71, 65535] { R315 += 1, R257 += 1, R213 += 1 };
  s2 -> s1 [0, 69] { R315 += 1, R257 += 1, R213 += 1 };
  s2 -> s2 [0, 65535] { R315 += 1, R256 += 1, R257 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R315 += 1, R257 += 1, R212 += 1, R213 += 1 };
  s2 -> s4 [0, 65535] { R315 += 1, R257 += 1, R213 += 1, R59 += 1 };
  s2 -> s1 [71, 65535] { R315 += 1, R257 += 1, R213 += 1 };
  s3 -> s1 [0, 69] { R315 += 1, R257 += 1, R213 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R315 += 1, R257 += 1, R212 += 1, R213 += 1 };
  s3 -> s7 [0, 65535] { R315 += 1 };
  s3 -> s4 [0, 65535] { R315 += 1, R257 += 1, R213 += 1, R59 += 1 };
  s3 -> s1 [71, 65535] { R315 += 1, R257 += 1, R213 += 1 };
  s4 -> s1 [0, 69] { R315 += 1, R257 += 1, R213 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R315 += 1, R257 += 1 };
  s4 -> s7 [0, 65535] { R315 += 1 };
  s4 -> s4 [0, 65535] { R315 += 1, R257 += 1, R213 += 1, R59 += 1 };
  s4 -> s1 [71, 65535] { R315 += 1, R257 += 1, R213 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R315 += 1, R257 += 1 };
  s6 -> s7 [0, 65535] { R315 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R315 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R317 += 1, R259 += 1, R215 += 1 };
  s0 -> s0 [0, 65535] { R316 += 1, R317 += 1 };
  s0 -> s2 [0, 65535] { R317 += 1, R258 += 1, R259 += 1 };
  s0 -> s3 [0, 65535] { R317 += 1, R259 += 1, R214 += 1, R215 += 1 };
  s0 -> s4 [0, 65535] { R317 += 1, R259 += 1, R215 += 1, R63 += 1 };
  s1 -> s1 [0, 65535] { R317 += 1, R259 += 1, R215 += 1 };
  s1 -> s5 [0, 65535] { R317 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R317 += 1, R259 += 1 };
  s2 -> s1 [0, 65535] { R317 += 1, R259 += 1, R215 += 1 };
  s2 -> s2 [0, 65535] { R317 += 1, R258 += 1, R259 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R317 += 1, R259 += 1, R214 += 1, R215 += 1 };
  s2 -> s4 [0, 65535] { R317 += 1, R259 += 1, R215 += 1, R63 += 1 };
  s3 -> s1 [0, 65535] { R317 += 1, R259 += 1, R215 += 1 };
  s3 -> s5 [0, 65535] { R317 += 1 };
  s3 -> s3 [0, 65535] { R317 += 1, R259 += 1, R214 += 1, R215 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R317 += 1, R259 += 1, R215 += 1, R63 += 1 };
  s4 -> s1 [0, 65535] { R317 += 1, R259 += 1, R215 += 1 };
  s4 -> s5 [0, 65535] { R317 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R317 += 1, R259 += 1 };
  s4 -> s4 [0, 65535] { R317 += 1, R259 += 1, R215 += 1, R63 += 1 };
  s5 -> s5 [0, 65535] { R317 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R317 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R317 += 1, R259 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R319 += 1, R261 += 1, R217 += 1 };
  s0 -> s2 [0, 65535] { R319 += 1, R261 += 1, R216 += 1, R217 += 1 };
  s0 -> s3 [0, 65535] { R319 += 1, R260 += 1, R261 += 1 };
  s0 -> s0 [0, 65535] { R318 += 1, R319 += 1 };
  s0 -> s4 [0, 65535] { R319 += 1, R261 += 1, R217 += 1, R202 += 1, R203 += 1 };
  s1 -> s1 [0, 65535] { R319 += 1, R261 += 1, R217 += 1 };
  s1 -> s5 [0, 65535] { R319 += 1, R261 += 1 };
  s1 -> s6 [0, 65535] { R319 += 1 };
  s1 -> s7 [0, 65535];
  s2 -> s1 [0, 65535] { R319 += 1, R261 += 1, R217 += 1 };
  s2 -> s2 [0, 65535] { R319 += 1, R261 += 1, R216 += 1, R217 += 1 };
  s2 -> s6 [0, 65535] { R319 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [0, 65535] { R319 += 1, R261 += 1, R217 += 1, R202 += 1, R203 += 1 };
  s3 -> s1 [0, 65535] { R319 += 1, R261 += 1, R217 += 1 };
  s3 -> s2 [0, 65535] { R319 += 1, R261 += 1, R216 += 1, R217 += 1 };
  s3 -> s3 [0, 65535] { R319 += 1, R260 += 1, R261 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [0, 65535] { R319 += 1, R261 += 1, R217 += 1, R202 += 1, R203 += 1 };
  s4 -> s1 [0, 65535] { R319 += 1, R261 += 1, R217 += 1 };
  s4 -> s5 [0, 65535] { R319 += 1, R261 += 1 };
  s4 -> s6 [0, 65535] { R319 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R319 += 1, R261 += 1, R217 += 1, R202 += 1, R203 += 1 };
  s5 -> s5 [0, 65535] { R319 += 1, R261 += 1 };
  s5 -> s6 [0, 65535] { R319 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R319 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R321 += 1, R263 += 1, R231 += 1, R20 += 1 };
  s0 -> s2 [0, 65535] { R321 += 1, R262 += 1, R263 += 1 };
  s0 -> s0 [0, 65535] { R320 += 1, R321 += 1 };
  s0 -> s3 [0, 65535] { R321 += 1, R263 += 1, R230 += 1, R231 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R321 += 1, R263 += 1, R231 += 1, R20 += 1 };
  s1 -> s6 [0, 65535] { R321 += 1, R263 += 1 };
  s1 -> s5 [0, 65535] { R321 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R321 += 1, R263 += 1, R231 += 1, R20 += 1 };
  s2 -> s2 [0, 65535] { R321 += 1, R262 += 1, R263 += 1 };
  s2 -> s3 [0, 65535] { R321 += 1, R263 += 1, R230 += 1, R231 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R321 += 1, R263 += 1, R231 += 1, R20 += 1 };
  s3 -> s3 [0, 65535] { R321 += 1, R263 += 1, R230 += 1, R231 += 1 };
  s3 -> s5 [0, 65535] { R321 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R321 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R321 += 1, R263 += 1 };
  s6 -> s5 [0, 65535] { R321 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 65] { R323 += 1, R265 += 1, R233 += 1 };
  s0 -> s2 [0, 65535] { R323 += 1, R265 += 1, R232 += 1, R233 += 1 };
  s0 -> s0 [0, 65535] { R322 += 1, R323 += 1 };
  s0 -> s3 [0, 65535] { R323 += 1, R264 += 1, R265 += 1 };
  s0 -> s4 [66, 66] { R323 += 1, R265 += 1, R233 += 1 };
  s0 -> s5 [66, 66] { R323 += 1, R265 += 1, R233 += 1 };
  s0 -> s6 [70, 70] { R323 += 1, R265 += 1, R233 += 1 };
  s0 -> s1 [71, 65535] { R323 += 1, R265 += 1, R233 += 1 };
  s1 -> s1 [0, 65] { R323 += 1, R265 += 1, R233 += 1 };
  s1 -> s4 [66, 66] { R323 += 1, R265 += 1, R233 += 1 };
  s1 -> s5 [66, 66] { R323 += 1, R265 += 1, R233 += 1 };
  s1 -> s6 [70, 70] { R323 += 1, R265 += 1, R233 += 1 };
  s1 -> s1 [71, 65535] { R323 += 1, R265 += 1, R233 += 1 };
  s2 -> s1 [0, 65] { R323 += 1, R265 += 1, R233 += 1 };
  s2 -> s2 [0, 65535] { R323 += 1, R265 += 1, R232 += 1, R233 += 1 };
  s2 -> s4 [66, 66] { R323 += 1, R265 += 1, R233 += 1 };
  s2 -> s5 [66, 66] { R323 += 1, R265 += 1, R233 += 1 };
  s2 -> s6 [70, 70] { R323 += 1, R265 += 1, R233 += 1 };
  s2 -> s1 [71, 65535] { R323 += 1, R265 += 1, R233 += 1 };
  s3 -> s1 [0, 65] { R323 += 1, R265 += 1, R233 += 1 };
  s3 -> s2 [0, 65535] { R323 += 1, R265 += 1, R232 += 1, R233 += 1 };
  s3 -> s3 [0, 65535] { R323 += 1, R264 += 1, R265 += 1 };
  s3 -> s4 [66, 66] { R323 += 1, R265 += 1, R233 += 1 };
  s3 -> s5 [66, 66] { R323 += 1, R265 += 1, R233 += 1 };
  s3 -> s6 [70, 70] { R323 += 1, R265 += 1, R233 += 1 };
  s3 -> s1 [71, 65535] { R323 += 1, R265 += 1, R233 += 1 };
  s5 -> s5 [0, 66] { R323 += 1, R265 += 1, R233 += 1 };
  s5 -> s9 [70, 70] { R323 += 1, R265 += 1, R233 += 1 };
  s5 -> s5 [71, 65535] { R323 += 1, R265 += 1, R233 += 1 };
  s6 -> s6 [0, 65] { R323 += 1, R265 += 1, R233 += 1 };
  s6 -> s6 [0, 65535] { R323 += 1, R265 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R323 += 1 };
  s6 -> s9 [66, 66] { R323 += 1, R265 += 1, R233 += 1 };
  s6 -> s10 [66, 66] { R323 += 1, R265 += 1, R233 += 1 };
  s6 -> s6 [70, 65535] { R323 += 1, R265 += 1, R233 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R323 += 1 };
  s9 -> s9 [0, 66] { R323 += 1, R265 += 1, R233 += 1 };
  s9 -> s9 [0, 65535] { R323 += 1, R265 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s8 [0, 65535] { R323 += 1 };
  s9 -> s9 [70, 65535] { R323 += 1, R265 += 1, R233 += 1 };
  s10 -> s10 [0, 65535] { R323 += 1, R265 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s8 [0, 65535] { R323 += 1 };
  accepting s8, s9, s6, s7, s10;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65] { R325 += 1, R267 += 1, R235 += 1, R56 += 1 };
  s0 -> s0 [0, 65535] { R324 += 1, R325 += 1 };
  s0 -> s2 [0, 65535] { R325 += 1, R266 += 1, R267 += 1 };
  s0 -> s3 [0, 65535] { R325 += 1, R267 += 1, R234 += 1, R235 += 1 };
  s0 -> s4 [66, 66] { R325 += 1, R267 += 1, R235 += 1, R56 += 1 };
  s0 -> s5 [66, 66] { R325 += 1, R267 += 1, R235 += 1, R56 += 1 };
  s0 -> s1 [67, 65535] { R325 += 1, R267 += 1, R235 += 1, R56 += 1 };
  s1 -> s1 [0, 65] { R325 += 1, R267 += 1, R235 += 1, R56 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R325 += 1, R267 += 1 };
  s1 -> s7 [0, 65535] { R325 += 1 };
  s1 -> s4 [66, 66] { R325 += 1, R267 += 1, R235 += 1, R56 += 1 };
  s1 -> s5 [66, 66] { R325 += 1, R267 += 1, R235 += 1, R56 += 1 };
  s1 -> s1 [67, 65535] { R325 += 1, R267 += 1, R235 += 1, R56 += 1 };
  s2 -> s1 [0, 65] { R325 += 1, R267 += 1, R235 += 1, R56 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R325 += 1, R266 += 1, R267 += 1 };
  s2 -> s3 [0, 65535] { R325 += 1, R267 += 1, R234 += 1, R235 += 1 };
  s2 -> s4 [66, 66] { R325 += 1, R267 += 1, R235 += 1, R56 += 1 };
  s2 -> s5 [66, 66] { R325 += 1, R267 += 1, R235 += 1, R56 += 1 };
  s2 -> s1 [67, 65535] { R325 += 1, R267 += 1, R235 += 1, R56 += 1 };
  s3 -> s1 [0, 65] { R325 += 1, R267 += 1, R235 += 1, R56 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R325 += 1, R267 += 1, R234 += 1, R235 += 1 };
  s3 -> s7 [0, 65535] { R325 += 1 };
  s3 -> s4 [66, 66] { R325 += 1, R267 += 1, R235 += 1, R56 += 1 };
  s3 -> s5 [66, 66] { R325 += 1, R267 += 1, R235 += 1, R56 += 1 };
  s3 -> s1 [67, 65535] { R325 += 1, R267 += 1, R235 += 1, R56 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s8 [0, 65535] { R325 += 1, R267 += 1 };
  s4 -> s4 [0, 65535] { R325 += 1, R267 += 1, R235 += 1, R56 += 1 };
  s4 -> s7 [0, 65535] { R325 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R325 += 1, R267 += 1 };
  s5 -> s7 [0, 65535] { R325 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R325 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R325 += 1, R267 += 1 };
  s8 -> s7 [0, 65535] { R325 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65] { R327 += 1, R269 += 1, R237 += 1, R58 += 1 };
  s0 -> s2 [0, 65535] { R327 += 1, R268 += 1, R269 += 1 };
  s0 -> s0 [0, 65535] { R326 += 1, R327 += 1 };
  s0 -> s3 [0, 65535] { R327 += 1, R269 += 1, R236 += 1, R237 += 1 };
  s0 -> s4 [66, 66] { R327 += 1, R269 += 1, R237 += 1, R58 += 1 };
  s0 -> s5 [66, 66] { R327 += 1, R269 += 1, R237 += 1, R58 += 1 };
  s0 -> s1 [67, 65535] { R327 += 1, R269 += 1, R237 += 1, R58 += 1 };
  s1 -> s1 [0, 65] { R327 += 1, R269 += 1, R237 += 1, R58 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R327 += 1, R269 += 1 };
  s1 -> s7 [0, 65535] { R327 += 1 };
  s1 -> s4 [66, 66] { R327 += 1, R269 += 1, R237 += 1, R58 += 1 };
  s1 -> s5 [66, 66] { R327 += 1, R269 += 1, R237 += 1, R58 += 1 };
  s1 -> s1 [67, 65535] { R327 += 1, R269 += 1, R237 += 1, R58 += 1 };
  s2 -> s1 [0, 65] { R327 += 1, R269 += 1, R237 += 1, R58 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R327 += 1, R268 += 1, R269 += 1 };
  s2 -> s3 [0, 65535] { R327 += 1, R269 += 1, R236 += 1, R237 += 1 };
  s2 -> s4 [66, 66] { R327 += 1, R269 += 1, R237 += 1, R58 += 1 };
  s2 -> s5 [66, 66] { R327 += 1, R269 += 1, R237 += 1, R58 += 1 };
  s2 -> s1 [67, 65535] { R327 += 1, R269 += 1, R237 += 1, R58 += 1 };
  s3 -> s1 [0, 65] { R327 += 1, R269 += 1, R237 += 1, R58 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R327 += 1 };
  s3 -> s3 [0, 65535] { R327 += 1, R269 += 1, R236 += 1, R237 += 1 };
  s3 -> s4 [66, 66] { R327 += 1, R269 += 1, R237 += 1, R58 += 1 };
  s3 -> s5 [66, 66] { R327 += 1, R269 += 1, R237 += 1, R58 += 1 };
  s3 -> s1 [67, 65535] { R327 += 1, R269 += 1, R237 += 1, R58 += 1 };
  s4 -> s4 [0, 65535] { R327 += 1, R269 += 1, R237 += 1, R58 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s8 [0, 65535] { R327 += 1, R269 += 1 };
  s4 -> s7 [0, 65535] { R327 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R327 += 1 };
  s5 -> s5 [0, 65535] { R327 += 1, R269 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R327 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R327 += 1, R269 += 1 };
  s8 -> s7 [0, 65535] { R327 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 65] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s0 -> s2 [0, 65] { R329 += 1, R271 += 1, R239 += 1, R60 += 1, R61 += 1 };
  s0 -> s3 [0, 65535] { R329 += 1, R271 += 1, R238 += 1, R239 += 1 };
  s0 -> s4 [0, 65535] { R329 += 1, R270 += 1, R271 += 1 };
  s0 -> s0 [0, 65535] { R328 += 1, R329 += 1 };
  s0 -> s5 [66, 66] { R329 += 1, R271 += 1, R239 += 1, R60 += 1, R61 += 1 };
  s0 -> s6 [66, 66] { R329 += 1, R271 += 1, R239 += 1, R60 += 1, R61 += 1 };
  s0 -> s7 [66, 66] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s0 -> s8 [66, 66] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s0 -> s1 [67, 69] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s0 -> s2 [67, 65535] { R329 += 1, R271 += 1, R239 += 1, R60 += 1, R61 += 1 };
  s0 -> s9 [70, 70] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s0 -> s1 [71, 65535] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s1 -> s1 [0, 65] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s1 -> s7 [66, 66] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s1 -> s8 [66, 66] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s1 -> s1 [67, 69] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s1 -> s9 [70, 70] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s1 -> s1 [71, 65535] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s2 -> s1 [0, 65] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s2 -> s2 [0, 65] { R329 += 1, R271 += 1, R239 += 1, R60 += 1, R61 += 1 };
  s2 -> s5 [66, 66] { R329 += 1, R271 += 1, R239 += 1, R60 += 1, R61 += 1 };
  s2 -> s6 [66, 66] { R329 += 1, R271 += 1, R239 += 1, R60 += 1, R61 += 1 };
  s2 -> s7 [66, 66] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s2 -> s8 [66, 66] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s2 -> s1 [67, 69] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s2 -> s2 [67, 65535] { R329 += 1, R271 += 1, R239 += 1, R60 += 1, R61 += 1 };
  s2 -> s9 [70, 70] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s2 -> s1 [71, 65535] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s3 -> s1 [0, 65] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s3 -> s2 [0, 65] { R329 += 1, R271 += 1, R239 += 1, R60 += 1, R61 += 1 };
  s3 -> s3 [0, 65535] { R329 += 1, R271 += 1, R238 += 1, R239 += 1 };
  s3 -> s5 [66, 66] { R329 += 1, R271 += 1, R239 += 1, R60 += 1, R61 += 1 };
  s3 -> s6 [66, 66] { R329 += 1, R271 += 1, R239 += 1, R60 += 1, R61 += 1 };
  s3 -> s7 [66, 66] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s3 -> s8 [66, 66] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s3 -> s1 [67, 69] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s3 -> s2 [67, 65535] { R329 += 1, R271 += 1, R239 += 1, R60 += 1, R61 += 1 };
  s3 -> s9 [70, 70] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s3 -> s1 [71, 65535] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s4 -> s1 [0, 65] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s4 -> s2 [0, 65] { R329 += 1, R271 += 1, R239 += 1, R60 += 1, R61 += 1 };
  s4 -> s3 [0, 65535] { R329 += 1, R271 += 1, R238 += 1, R239 += 1 };
  s4 -> s4 [0, 65535] { R329 += 1, R270 += 1, R271 += 1 };
  s4 -> s5 [66, 66] { R329 += 1, R271 += 1, R239 += 1, R60 += 1, R61 += 1 };
  s4 -> s6 [66, 66] { R329 += 1, R271 += 1, R239 += 1, R60 += 1, R61 += 1 };
  s4 -> s7 [66, 66] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s4 -> s8 [66, 66] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s4 -> s1 [67, 69] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s4 -> s2 [67, 65535] { R329 += 1, R271 += 1, R239 += 1, R60 += 1, R61 += 1 };
  s4 -> s9 [70, 70] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s4 -> s1 [71, 65535] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s5 -> s7 [0, 69] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s5 -> s5 [0, 65535] { R329 += 1, R271 += 1, R239 += 1, R60 += 1, R61 += 1 };
  s5 -> s13 [70, 70] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s5 -> s7 [71, 65535] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s7 -> s7 [0, 69] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s7 -> s13 [70, 70] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s7 -> s7 [71, 65535] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s9 -> s9 [0, 65] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s9 -> s10 [0, 65535];
  s9 -> s9 [0, 65535] { R329 += 1, R271 += 1 };
  s9 -> s11 [0, 65535] { R329 += 1 };
  s9 -> s12 [66, 66] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s9 -> s13 [66, 66] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s9 -> s9 [67, 65535] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s10 -> s10 [0, 65535];
  s11 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R329 += 1 };
  s12 -> s10 [0, 65535];
  s12 -> s12 [0, 65535] { R329 += 1, R271 += 1 };
  s12 -> s11 [0, 65535] { R329 += 1 };
  s13 -> s14 [0, 65535] { R329 += 1, R271 += 1 };
  s13 -> s10 [0, 65535];
  s13 -> s11 [0, 65535] { R329 += 1 };
  s13 -> s13 [0, 65535] { R329 += 1, R271 += 1, R239 += 1, R61 += 1 };
  s14 -> s14 [0, 65535] { R329 += 1, R271 += 1 };
  s14 -> s10 [0, 65535];
  s14 -> s11 [0, 65535] { R329 += 1 };
  accepting s12, s13, s9, s14, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 65] { R331 += 1, R273 += 1, R241 += 1, R199 += 1, R200 += 1 };
  s0 -> s2 [0, 65] { R331 += 1, R273 += 1, R241 += 1, R198 += 1, R199 += 1 };
  s0 -> s3 [0, 65535] { R331 += 1, R273 += 1, R240 += 1, R241 += 1 };
  s0 -> s0 [0, 65535] { R330 += 1, R331 += 1 };
  s0 -> s4 [0, 65535] { R331 += 1, R272 += 1, R273 += 1 };
  s0 -> s5 [66, 66] { R331 += 1, R273 += 1, R241 += 1, R199 += 1, R200 += 1 };
  s0 -> s6 [66, 66] { R331 += 1, R273 += 1, R241 += 1, R199 += 1, R200 += 1 };
  s0 -> s7 [66, 66] { R331 += 1, R273 += 1, R241 += 1, R198 += 1, R199 += 1 };
  s0 -> s8 [66, 66] { R331 += 1, R273 += 1, R241 += 1, R198 += 1, R199 += 1 };
  s0 -> s1 [67, 65535] { R331 += 1, R273 += 1, R241 += 1, R199 += 1, R200 += 1 };
  s0 -> s2 [67, 65535] { R331 += 1, R273 += 1, R241 += 1, R198 += 1, R199 += 1 };
  s1 -> s1 [0, 65] { R331 += 1, R273 += 1, R241 += 1, R199 += 1, R200 += 1 };
  s1 -> s1 [0, 65535] { R331 += 1, R273 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s10 [0, 65535] { R331 += 1 };
  s1 -> s5 [66, 66] { R331 += 1, R273 += 1, R241 += 1, R199 += 1, R200 += 1 };
  s1 -> s6 [66, 66] { R331 += 1, R273 += 1, R241 += 1, R199 += 1, R200 += 1 };
  s1 -> s1 [67, 65535] { R331 += 1, R273 += 1, R241 += 1, R199 += 1, R200 += 1 };
  s2 -> s1 [0, 65] { R331 += 1, R273 += 1, R241 += 1, R199 += 1, R200 += 1 };
  s2 -> s2 [0, 65] { R331 += 1, R273 += 1, R241 += 1, R198 += 1, R199 += 1 };
  s2 -> s5 [66, 66] { R331 += 1, R273 += 1, R241 += 1, R199 += 1, R200 += 1 };
  s2 -> s6 [66, 66] { R331 += 1, R273 += 1, R241 += 1, R199 += 1, R200 += 1 };
  s2 -> s7 [66, 66] { R331 += 1, R273 += 1, R241 += 1, R198 += 1, R199 += 1 };
  s2 -> s8 [66, 66] { R331 += 1, R273 += 1, R241 += 1, R198 += 1, R199 += 1 };
  s2 -> s1 [67, 65535] { R331 += 1, R273 += 1, R241 += 1, R199 += 1, R200 += 1 };
  s2 -> s2 [67, 65535] { R331 += 1, R273 += 1, R241 += 1, R198 += 1, R199 += 1 };
  s3 -> s1 [0, 65] { R331 += 1, R273 += 1, R241 += 1, R199 += 1, R200 += 1 };
  s3 -> s2 [0, 65] { R331 += 1, R273 += 1, R241 += 1, R198 += 1, R199 += 1 };
  s3 -> s3 [0, 65535] { R331 += 1, R273 += 1, R240 += 1, R241 += 1 };
  s3 -> s5 [66, 66] { R331 += 1, R273 += 1, R241 += 1, R199 += 1, R200 += 1 };
  s3 -> s6 [66, 66] { R331 += 1, R273 += 1, R241 += 1, R199 += 1, R200 += 1 };
  s3 -> s7 [66, 66] { R331 += 1, R273 += 1, R241 += 1, R198 += 1, R199 += 1 };
  s3 -> s8 [66, 66] { R331 += 1, R273 += 1, R241 += 1, R198 += 1, R199 += 1 };
  s3 -> s1 [67, 65535] { R331 += 1, R273 += 1, R241 += 1, R199 += 1, R200 += 1 };
  s3 -> s2 [67, 65535] { R331 += 1, R273 += 1, R241 += 1, R198 += 1, R199 += 1 };
  s4 -> s1 [0, 65] { R331 += 1, R273 += 1, R241 += 1, R199 += 1, R200 += 1 };
  s4 -> s2 [0, 65] { R331 += 1, R273 += 1, R241 += 1, R198 += 1, R199 += 1 };
  s4 -> s3 [0, 65535] { R331 += 1, R273 += 1, R240 += 1, R241 += 1 };
  s4 -> s4 [0, 65535] { R331 += 1, R272 += 1, R273 += 1 };
  s4 -> s5 [66, 66] { R331 += 1, R273 += 1, R241 += 1, R199 += 1, R200 += 1 };
  s4 -> s6 [66, 66] { R331 += 1, R273 += 1, R241 += 1, R199 += 1, R200 += 1 };
  s4 -> s7 [66, 66] { R331 += 1, R273 += 1, R241 += 1, R198 += 1, R199 += 1 };
  s4 -> s8 [66, 66] { R331 += 1, R273 += 1, R241 += 1, R198 += 1, R199 += 1 };
  s4 -> s1 [67, 65535] { R331 += 1, R273 += 1, R241 += 1, R199 += 1, R200 += 1 };
  s4 -> s2 [67, 65535] { R331 += 1, R273 += 1, R241 += 1, R198 += 1, R199 += 1 };
  s5 -> s11 [0, 65535] { R331 += 1, R273 += 1 };
  s5 -> s5 [0, 65535] { R331 += 1, R273 += 1, R241 += 1, R199 += 1, R200 += 1 };
  s5 -> s9 [0, 65535];
  s5 -> s10 [0, 65535] { R331 += 1 };
  s6 -> s6 [0, 65535] { R331 += 1, R273 += 1 };
  s6 -> s9 [0, 65535];
  s6 -> s10 [0, 65535] { R331 += 1 };
  s7 -> s5 [0, 65535] { R331 += 1, R273 += 1, R241 += 1, R199 += 1, R200 += 1 };
  s7 -> s7 [0, 65535] { R331 += 1, R273 += 1, R241 += 1, R198 += 1, R199 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R331 += 1 };
  s11 -> s11 [0, 65535] { R331 += 1, R273 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s10 [0, 65535] { R331 += 1 };
  accepting s5, s9, s6, s1, s10, s11;
};
};
synchronised {  // Automata constraining P37
automaton P37_0 {
  init s0;
  s0 -> s1 [9, 9];
  accepting s1;
};
};
synchronised {  // Automata constraining P38
automaton P38_0 {
  init s0;
  s0 -> s1 [10, 10];
  accepting s1;
};
};
synchronised {  // Automata constraining P36
automaton P36_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
constraint R2 = R273 && R3 - R331 = 1 && R22 - R273 = -1 && R23 = R273 && R24 - R273 = -1 && R25 = R273 && R26 = 0 && R27 = 1 && R28 = 0 && R29 = 1 && R30 = R331 && R31 - R331 = 1 && R32 = R331 && R33 - R331 = 1 && R34 = 0 && R35 = 1 && R36 = 0 && R37 = 1 && R42 + R57 + R56 + -1*R63 + -1*R61 - R47 = 0 && R46 + R62 + R60 = 0 && R232 = 0 && R233 = 0 && R238 = 0 && R239 = 0 && R240 = 0 && R241 = 0 && R242 = 0 && R243 = R273 && R244 = 0 && R245 = R273 && R246 = 0 && R247 = R273 && R248 = 0 && R249 = R273 && R250 = 0 && R251 = R273 && R252 = 0 && R253 = R273 && R254 = 0 && R255 = R273 && R256 = 0 && R257 = R273 && R258 = 0 && R259 = R273 && R260 = 0 && R261 = R273 && R262 = 0 && R263 = R273 && R264 = 0 && R265 = R273 && R266 = 0 && R267 = R273 && R268 = 0 && R269 = R273 && R270 = 0 && R271 = R273 && R272 = 0 && R274 = 0 && R275 = R331 && R276 = 0 && R277 = R331 && R278 = 0 && R279 = R331 && R280 = 0 && R281 = R331 && R282 = 0 && R283 = R331 && R284 = 0 && R285 = R331 && R286 = 0 && R287 = R331 && R288 = 0 && R289 = R331 && R290 = 0 && R291 = R331 && R292 = 0 && R293 = R331 && R294 = 0 && R295 = R331 && R296 = 0 && R297 = R331 && R298 = 0 && R299 = R331 && R300 = 0 && R301 = R331 && R302 = 0 && R303 = R331 && R304 = 0 && R305 = R331 && R306 = 0 && R307 = R331 && R308 = 0 && R309 = R331 && R310 = 0 && R311 = R331 && R312 = 0 && R313 = R331 && R314 = 0 && R315 = R331 && R316 = 0 && R317 = R331 && R318 = 0 && R319 = R331 && R320 = 0 && R321 = R331 && R322 = 0 && R323 = R331 && R324 = 0 && R325 = R331 && R326 = 0 && R327 = R331 && R328 = 0 && R329 = R331 && R330 = 0 && -1 < R1 && R11 < 1 && R14 < 1 && R17 < 1 && R44 + R59 + R58 < 1 && -1*R63 + -1*R61 - R47 < 1 && 0 < R273 && -1 < R331 && (R1 != 0 || R19 = 0 || (R204 = 0 && R205 = 0)) && (R1 != 0 || R19 = 0 || (R206 = 0 && R207 = 0)) && (R1 != 0 || R19 = 0 || (R208 = 0 && R209 = 0)) && (R1 != 0 || R19 = 0 || (R210 = 0 && R211 = 0)) && (R1 != 0 || R19 = 0 || (R212 = 0 && R213 = 0)) && (R1 != 0 || R19 = 0 || (R214 = 0 && R215 = 0)) && (R1 != 0 || R19 = 0 || (R216 = 0 && R217 = 0)) && (R47 + R63 + R61 != 0 || R52 + R203 + R200 = 0 || (R50 + R201 + R198 = 0 && R51 + R202 + R199 = 0)) && (R50 + R201 + R198 != 0 || R47 + R63 + R61 + -1*R202 + -1*R199 - R51 = 0 || R47 + R63 + R61 < 1) && (R204 != 0 || R1 = R205 || R1 < 1) && (R206 != 0 || R1 = R207 || R1 < 1) && (R208 != 0 || R1 = R209 || R1 < 1) && (R210 != 0 || R1 = R211 || R1 < 1) && (R212 != 0 || R1 = R213 || R1 < 1) && (R214 != 0 || R1 = R215 || R1 < 1) && (R216 != 0 || R1 = R217 || R1 < 1) && (R20 = 0 || (R230 = 0 && R231 = 0)) && (R20 = 0 || (R234 = 0 && R235 = 0)) && (R20 = 0 || (R236 = 0 && R237 = 0)) && (R21 = 0 || (R218 = 0 && R219 = 0)) && (R21 = 0 || (R220 = 0 && R221 = 0)) && (R21 = 0 || (R222 = 0 && R223 = 0)) && (R21 = 0 || (R224 = 0 && R225 = 0)) && (R21 = 0 || (R226 = 0 && R227 = 0)) && (R21 = 0 || (R228 = 0 && R229 = 0)) && (R50 + R201 + R198 = 0 || R47 + R63 + R61 < 1) && (R204 = 0 || R1 < 1) && (R206 = 0 || R1 < 1) && (R208 = 0 || R1 < 1) && (R210 = 0 || R1 < 1) && (R212 = 0 || R1 < 1) && (R214 = 0 || R1 < 1) && (R216 = 0 || R1 < 1);
// End of Parikh automata intersection problem
