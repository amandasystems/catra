// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R100, R101, R102, R103, R104, R105, R106, R107, R108, R109, R110, R111, R112, R113, R114, R115, R116, R117, R118, R119, R120, R121, R122, R123, R124, R125, R126, R127, R128, R129, R13, R130, R131, R132, R133, R134, R135, R136, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R19, R190, R191, R192, R193, R194, R195, R196, R197, R198, R199, R2, R20, R200, R201, R202, R203, R204, R205, R206, R207, R208, R209, R21, R210, R211, R212, R213, R214, R215, R216, R217, R218, R219, R22, R220, R221, R222, R223, R224, R225, R226, R227, R228, R229, R23, R230, R231, R232, R233, R234, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R33, R34, R35, R36, R37, R38, R39, R4, R40, R41, R42, R43, R44, R5, R55, R56, R57, R58, R59, R6, R60, R61, R62, R63, R64, R65, R66, R67, R68, R69, R7, R70, R71, R72, R73, R74, R75, R76, R77, R78, R79, R8, R80, R81, R82, R83, R84, R85, R86, R87, R88, R89, R9, R90, R91, R92, R93, R94, R95, R96, R97, R98, R99;
synchronised {  // Automata constraining P8
automaton P8_0 {
  init s0;
  s0 -> s1 [101, 101];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R37 += 1, R38 += 1 };
  s0 -> s1 [9, 9] { R38 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s0 [0, 65535] { R39 += 1, R40 += 1 };
  s0 -> s1 [0, 65535] { R40 += 1, R8 += 1 };
  s1 -> s1 [0, 65535] { R40 += 1, R8 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R42 += 1 };
  s0 -> s0 [0, 65535] { R41 += 1, R42 += 1 };
  s0 -> s2 [9, 13] { R42 += 1 };
  s0 -> s1 [14, 31] { R42 += 1 };
  s0 -> s2 [32, 32] { R42 += 1 };
  s0 -> s1 [33, 65535] { R42 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R42 += 1 };
  s2 -> s1 [0, 65535] { R42 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s0 [0, 65535] { R43 += 1, R44 += 1 };
  s0 -> s1 [0, 65535] { R44 += 1, R9 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R44 += 1, R9 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R174 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R173 += 1, R174 += 1 };
  s1 -> s1 [0, 65535] { R174 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R176 += 1, R29 += 1, R30 += 1 };
  s0 -> s0 [0, 65535] { R175 += 1, R176 += 1 };
  s0 -> s2 [13, 13] { R176 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R176 += 1, R29 += 1, R30 += 1 };
  s1 -> s2 [13, 13] { R176 += 1, R30 += 1 };
  s2 -> s2 [0, 65535] { R176 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_9 {
  init s0;
  s0 -> s0 [0, 65535] { R177 += 1, R178 += 1 };
  s0 -> s1 [0, 65535] { R178 += 1, R32 += 1, R6 += 1 };
  s0 -> s2 [0, 65535] { R178 += 1, R31 += 1, R32 += 1 };
  s1 -> s4 [0, 65535] { R178 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R178 += 1, R32 += 1, R6 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R178 += 1, R32 += 1, R6 += 1 };
  s2 -> s2 [0, 65535] { R178 += 1, R31 += 1, R32 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R178 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R180 += 1, R34 += 1 };
  s0 -> s2 [0, 65535] { R180 += 1, R33 += 1, R34 += 1 };
  s0 -> s0 [0, 65535] { R179 += 1, R180 += 1 };
  s0 -> s3 [9, 13] { R180 += 1, R34 += 1 };
  s0 -> s1 [14, 31] { R180 += 1, R34 += 1 };
  s0 -> s3 [32, 32] { R180 += 1, R34 += 1 };
  s0 -> s1 [33, 65535] { R180 += 1, R34 += 1 };
  s1 -> s1 [0, 65535] { R180 += 1, R34 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R180 += 1 };
  s2 -> s1 [0, 8] { R180 += 1, R34 += 1 };
  s2 -> s2 [0, 65535] { R180 += 1, R33 += 1, R34 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [9, 13] { R180 += 1, R34 += 1 };
  s2 -> s1 [14, 31] { R180 += 1, R34 += 1 };
  s2 -> s3 [32, 32] { R180 += 1, R34 += 1 };
  s2 -> s1 [33, 65535] { R180 += 1, R34 += 1 };
  s3 -> s1 [0, 65535] { R180 += 1, R34 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R180 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 65535] { R182 += 1, R35 += 1, R36 += 1 };
  s0 -> s2 [0, 65535] { R182 += 1, R36 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R181 += 1, R182 += 1 };
  s1 -> s1 [0, 65535] { R182 += 1, R35 += 1, R36 += 1 };
  s1 -> s2 [0, 65535] { R182 += 1, R36 += 1, R7 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R182 += 1, R36 += 1, R7 += 1 };
  s2 -> s3 [0, 65535] { R182 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R182 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 64] { R184 += 1, R122 += 1 };
  s0 -> s2 [0, 65535] { R184 += 1, R121 += 1, R122 += 1 };
  s0 -> s0 [0, 65535] { R183 += 1, R184 += 1 };
  s0 -> s3 [69, 69] { R184 += 1, R122 += 1 };
  s0 -> s1 [70, 65535] { R184 += 1, R122 += 1 };
  s1 -> s1 [0, 64] { R184 += 1, R122 += 1 };
  s1 -> s3 [69, 69] { R184 += 1, R122 += 1 };
  s1 -> s1 [70, 65535] { R184 += 1, R122 += 1 };
  s2 -> s1 [0, 64] { R184 += 1, R122 += 1 };
  s2 -> s2 [0, 65535] { R184 += 1, R121 += 1, R122 += 1 };
  s2 -> s3 [69, 69] { R184 += 1, R122 += 1 };
  s2 -> s1 [70, 65535] { R184 += 1, R122 += 1 };
  s3 -> s3 [0, 64] { R184 += 1, R122 += 1 };
  s3 -> s3 [0, 65535] { R184 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [69, 65535] { R184 += 1, R122 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 65535] { R186 += 1, R123 += 1, R124 += 1 };
  s0 -> s2 [0, 65535] { R186 += 1, R124 += 1, R1 += 1 };
  s0 -> s0 [0, 65535] { R185 += 1, R186 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R186 += 1, R123 += 1, R124 += 1 };
  s1 -> s2 [0, 65535] { R186 += 1, R124 += 1, R1 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R186 += 1 };
  s2 -> s2 [0, 65535] { R186 += 1, R124 += 1, R1 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R186 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 68] { R188 += 1, R126 += 1 };
  s0 -> s2 [0, 65535] { R188 += 1, R126 += 1, R13 += 1 };
  s0 -> s0 [0, 65535] { R187 += 1, R188 += 1 };
  s0 -> s3 [0, 65535] { R188 += 1, R125 += 1, R126 += 1 };
  s0 -> s4 [69, 69] { R188 += 1, R126 += 1 };
  s0 -> s1 [70, 65535] { R188 += 1, R126 += 1 };
  s1 -> s1 [0, 68] { R188 += 1, R126 += 1 };
  s1 -> s1 [0, 65535] { R188 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s4 [69, 69] { R188 += 1, R126 += 1 };
  s1 -> s1 [70, 65535] { R188 += 1, R126 += 1 };
  s2 -> s1 [0, 68] { R188 += 1, R126 += 1 };
  s2 -> s2 [0, 65535] { R188 += 1, R126 += 1, R13 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R188 += 1 };
  s2 -> s4 [69, 69] { R188 += 1, R126 += 1 };
  s2 -> s1 [70, 65535] { R188 += 1, R126 += 1 };
  s3 -> s1 [0, 68] { R188 += 1, R126 += 1 };
  s3 -> s2 [0, 65535] { R188 += 1, R126 += 1, R13 += 1 };
  s3 -> s3 [0, 65535] { R188 += 1, R125 += 1, R126 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s4 [69, 69] { R188 += 1, R126 += 1 };
  s3 -> s1 [70, 65535] { R188 += 1, R126 += 1 };
  s4 -> s4 [0, 65535] { R188 += 1, R126 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R188 += 1 };
  accepting s3, s5, s2, s6, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 8] { R190 += 1, R128 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R189 += 1, R190 += 1 };
  s0 -> s2 [0, 65535] { R190 += 1, R128 += 1, R21 += 1, R22 += 1 };
  s0 -> s3 [0, 65535] { R190 += 1, R127 += 1, R128 += 1 };
  s0 -> s4 [9, 13] { R190 += 1, R128 += 1, R22 += 1 };
  s0 -> s1 [14, 31] { R190 += 1, R128 += 1, R22 += 1 };
  s0 -> s4 [32, 32] { R190 += 1, R128 += 1, R22 += 1 };
  s0 -> s1 [33, 65535] { R190 += 1, R128 += 1, R22 += 1 };
  s1 -> s1 [0, 65535] { R190 += 1, R128 += 1, R22 += 1 };
  s1 -> s6 [0, 65535] { R190 += 1 };
  s1 -> s7 [0, 65535] { R190 += 1, R128 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 8] { R190 += 1, R128 += 1, R22 += 1 };
  s2 -> s2 [0, 65535] { R190 += 1, R128 += 1, R21 += 1, R22 += 1 };
  s2 -> s6 [0, 65535] { R190 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s4 [9, 13] { R190 += 1, R128 += 1, R22 += 1 };
  s2 -> s1 [14, 31] { R190 += 1, R128 += 1, R22 += 1 };
  s2 -> s4 [32, 32] { R190 += 1, R128 += 1, R22 += 1 };
  s2 -> s1 [33, 65535] { R190 += 1, R128 += 1, R22 += 1 };
  s3 -> s1 [0, 8] { R190 += 1, R128 += 1, R22 += 1 };
  s3 -> s2 [0, 65535] { R190 += 1, R128 += 1, R21 += 1, R22 += 1 };
  s3 -> s3 [0, 65535] { R190 += 1, R127 += 1, R128 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s4 [9, 13] { R190 += 1, R128 += 1, R22 += 1 };
  s3 -> s1 [14, 31] { R190 += 1, R128 += 1, R22 += 1 };
  s3 -> s4 [32, 32] { R190 += 1, R128 += 1, R22 += 1 };
  s3 -> s1 [33, 65535] { R190 += 1, R128 += 1, R22 += 1 };
  s4 -> s1 [0, 65535] { R190 += 1, R128 += 1, R22 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R190 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R190 += 1 };
  s7 -> s7 [0, 65535] { R190 += 1, R128 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s5, s2, s6, s1, s7, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 65535] { R192 += 1, R129 += 1, R130 += 1 };
  s0 -> s2 [0, 65535] { R192 += 1, R130 += 1, R24 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R191 += 1, R192 += 1 };
  s0 -> s3 [0, 65535] { R192 += 1, R130 += 1, R23 += 1, R24 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R192 += 1, R129 += 1, R130 += 1 };
  s1 -> s2 [0, 65535] { R192 += 1, R130 += 1, R24 += 1, R4 += 1 };
  s1 -> s3 [0, 65535] { R192 += 1, R130 += 1, R23 += 1, R24 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R192 += 1, R130 += 1, R24 += 1, R4 += 1 };
  s2 -> s5 [0, 65535] { R192 += 1 };
  s2 -> s6 [0, 65535] { R192 += 1, R130 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R192 += 1, R130 += 1, R24 += 1, R4 += 1 };
  s3 -> s5 [0, 65535] { R192 += 1 };
  s3 -> s3 [0, 65535] { R192 += 1, R130 += 1, R23 += 1, R24 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R192 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R192 += 1 };
  s6 -> s6 [0, 65535] { R192 += 1, R130 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 8] { R194 += 1, R132 += 1, R26 += 1 };
  s0 -> s2 [0, 65535] { R194 += 1, R131 += 1, R132 += 1 };
  s0 -> s0 [0, 65535] { R193 += 1, R194 += 1 };
  s0 -> s3 [0, 65535] { R194 += 1, R132 += 1, R25 += 1, R26 += 1 };
  s0 -> s4 [9, 13] { R194 += 1, R132 += 1, R26 += 1 };
  s0 -> s1 [14, 31] { R194 += 1, R132 += 1, R26 += 1 };
  s0 -> s4 [32, 32] { R194 += 1, R132 += 1, R26 += 1 };
  s0 -> s1 [33, 65535] { R194 += 1, R132 += 1, R26 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R194 += 1, R132 += 1 };
  s1 -> s1 [0, 65535] { R194 += 1, R132 += 1, R26 += 1 };
  s1 -> s6 [0, 65535] { R194 += 1 };
  s2 -> s1 [0, 8] { R194 += 1, R132 += 1, R26 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R194 += 1, R131 += 1, R132 += 1 };
  s2 -> s3 [0, 65535] { R194 += 1, R132 += 1, R25 += 1, R26 += 1 };
  s2 -> s4 [9, 13] { R194 += 1, R132 += 1, R26 += 1 };
  s2 -> s1 [14, 31] { R194 += 1, R132 += 1, R26 += 1 };
  s2 -> s4 [32, 32] { R194 += 1, R132 += 1, R26 += 1 };
  s2 -> s1 [33, 65535] { R194 += 1, R132 += 1, R26 += 1 };
  s3 -> s1 [0, 8] { R194 += 1, R132 += 1, R26 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R194 += 1 };
  s3 -> s3 [0, 65535] { R194 += 1, R132 += 1, R25 += 1, R26 += 1 };
  s3 -> s4 [9, 13] { R194 += 1, R132 += 1, R26 += 1 };
  s3 -> s1 [14, 31] { R194 += 1, R132 += 1, R26 += 1 };
  s3 -> s4 [32, 32] { R194 += 1, R132 += 1, R26 += 1 };
  s3 -> s1 [33, 65535] { R194 += 1, R132 += 1, R26 += 1 };
  s4 -> s1 [0, 65535] { R194 += 1, R132 += 1, R26 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R194 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R194 += 1, R132 += 1 };
  s7 -> s6 [0, 65535] { R194 += 1 };
  accepting s3, s5, s2, s6, s1, s7, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R196 += 1, R134 += 1, R27 += 1, R28 += 1 };
  s0 -> s0 [0, 65535] { R195 += 1, R196 += 1 };
  s0 -> s2 [0, 65535] { R196 += 1, R134 += 1, R28 += 1, R5 += 1 };
  s0 -> s3 [0, 65535] { R196 += 1, R133 += 1, R134 += 1 };
  s1 -> s1 [0, 65535] { R196 += 1, R134 += 1, R27 += 1, R28 += 1 };
  s1 -> s2 [0, 65535] { R196 += 1, R134 += 1, R28 += 1, R5 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R196 += 1 };
  s2 -> s2 [0, 65535] { R196 += 1, R134 += 1, R28 += 1, R5 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R196 += 1, R134 += 1 };
  s2 -> s6 [0, 65535] { R196 += 1 };
  s3 -> s1 [0, 65535] { R196 += 1, R134 += 1, R27 += 1, R28 += 1 };
  s3 -> s2 [0, 65535] { R196 += 1, R134 += 1, R28 += 1, R5 += 1 };
  s3 -> s3 [0, 65535] { R196 += 1, R133 += 1, R134 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R196 += 1, R134 += 1 };
  s5 -> s6 [0, 65535] { R196 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R196 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 68] { R198 += 1, R136 += 1, R84 += 1 };
  s0 -> s2 [0, 65535] { R198 += 1, R136 += 1, R83 += 1, R84 += 1 };
  s0 -> s0 [0, 65535] { R197 += 1, R198 += 1 };
  s0 -> s3 [0, 65535] { R198 += 1, R135 += 1, R136 += 1 };
  s0 -> s1 [70, 65535] { R198 += 1, R136 += 1, R84 += 1 };
  s1 -> s1 [0, 68] { R198 += 1, R136 += 1, R84 += 1 };
  s1 -> s1 [0, 65535] { R198 += 1, R136 += 1 };
  s1 -> s5 [0, 65535] { R198 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [70, 65535] { R198 += 1, R136 += 1, R84 += 1 };
  s2 -> s1 [0, 68] { R198 += 1, R136 += 1, R84 += 1 };
  s2 -> s2 [0, 65535] { R198 += 1, R136 += 1, R83 += 1, R84 += 1 };
  s2 -> s5 [0, 65535] { R198 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [70, 65535] { R198 += 1, R136 += 1, R84 += 1 };
  s3 -> s1 [0, 68] { R198 += 1, R136 += 1, R84 += 1 };
  s3 -> s2 [0, 65535] { R198 += 1, R136 += 1, R83 += 1, R84 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R198 += 1, R135 += 1, R136 += 1 };
  s3 -> s1 [70, 65535] { R198 += 1, R136 += 1, R84 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R198 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 65535] { R200 += 1, R138 += 1, R86 += 1, R19 += 1 };
  s0 -> s2 [0, 65535] { R200 += 1, R138 += 1, R85 += 1, R86 += 1 };
  s0 -> s0 [0, 65535] { R199 += 1, R200 += 1 };
  s0 -> s3 [0, 65535] { R200 += 1, R137 += 1, R138 += 1 };
  s1 -> s1 [0, 65535] { R200 += 1, R138 += 1, R86 += 1, R19 += 1 };
  s1 -> s5 [0, 65535] { R200 += 1 };
  s1 -> s6 [0, 65535] { R200 += 1, R138 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R200 += 1, R138 += 1, R86 += 1, R19 += 1 };
  s2 -> s5 [0, 65535] { R200 += 1 };
  s2 -> s2 [0, 65535] { R200 += 1, R138 += 1, R85 += 1, R86 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R200 += 1, R138 += 1, R86 += 1, R19 += 1 };
  s3 -> s2 [0, 65535] { R200 += 1, R138 += 1, R85 += 1, R86 += 1 };
  s3 -> s3 [0, 65535] { R200 += 1, R137 += 1, R138 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R200 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R200 += 1 };
  s6 -> s6 [0, 65535] { R200 += 1, R138 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R202 += 1, R140 += 1, R88 += 1 };
  s0 -> s2 [0, 65535] { R202 += 1, R139 += 1, R140 += 1 };
  s0 -> s0 [0, 65535] { R201 += 1, R202 += 1 };
  s0 -> s3 [0, 65535] { R202 += 1, R140 += 1, R87 += 1, R88 += 1 };
  s0 -> s4 [82, 82] { R202 += 1, R140 += 1, R88 += 1 };
  s0 -> s1 [83, 65535] { R202 += 1, R140 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R202 += 1, R140 += 1, R88 += 1 };
  s1 -> s4 [82, 82] { R202 += 1, R140 += 1, R88 += 1 };
  s1 -> s1 [83, 65535] { R202 += 1, R140 += 1, R88 += 1 };
  s2 -> s1 [0, 69] { R202 += 1, R140 += 1, R88 += 1 };
  s2 -> s2 [0, 65535] { R202 += 1, R139 += 1, R140 += 1 };
  s2 -> s3 [0, 65535] { R202 += 1, R140 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [82, 82] { R202 += 1, R140 += 1, R88 += 1 };
  s2 -> s1 [83, 65535] { R202 += 1, R140 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R202 += 1, R140 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R202 += 1, R140 += 1, R87 += 1, R88 += 1 };
  s3 -> s4 [82, 82] { R202 += 1, R140 += 1, R88 += 1 };
  s3 -> s1 [83, 65535] { R202 += 1, R140 += 1, R88 += 1 };
  s4 -> s4 [0, 69] { R202 += 1, R140 += 1, R88 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R202 += 1 };
  s4 -> s4 [0, 65535] { R202 += 1, R140 += 1 };
  s4 -> s4 [82, 65535] { R202 += 1, R140 += 1, R88 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R202 += 1 };
  accepting s4, s5, s6;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 65535] { R204 += 1, R141 += 1, R142 += 1 };
  s0 -> s0 [0, 65535] { R203 += 1, R204 += 1 };
  s0 -> s2 [0, 65535] { R204 += 1, R142 += 1, R89 += 1, R90 += 1 };
  s0 -> s3 [0, 65535] { R204 += 1, R142 += 1, R90 += 1, R56 += 1 };
  s1 -> s1 [0, 65535] { R204 += 1, R141 += 1, R142 += 1 };
  s1 -> s2 [0, 65535] { R204 += 1, R142 += 1, R89 += 1, R90 += 1 };
  s1 -> s3 [0, 65535] { R204 += 1, R142 += 1, R90 += 1, R56 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R204 += 1, R142 += 1, R89 += 1, R90 += 1 };
  s2 -> s4 [0, 65535] { R204 += 1 };
  s2 -> s3 [0, 65535] { R204 += 1, R142 += 1, R90 += 1, R56 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R204 += 1 };
  s3 -> s5 [0, 65535] { R204 += 1, R142 += 1 };
  s3 -> s3 [0, 65535] { R204 += 1, R142 += 1, R90 += 1, R56 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R204 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s4 [0, 65535] { R204 += 1 };
  s5 -> s5 [0, 65535] { R204 += 1, R142 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 81] { R206 += 1, R144 += 1, R92 += 1 };
  s0 -> s2 [0, 65535] { R206 += 1, R144 += 1, R92 += 1, R58 += 1 };
  s0 -> s3 [0, 65535] { R206 += 1, R143 += 1, R144 += 1 };
  s0 -> s0 [0, 65535] { R205 += 1, R206 += 1 };
  s0 -> s4 [0, 65535] { R206 += 1, R144 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [83, 65535] { R206 += 1, R144 += 1, R92 += 1 };
  s1 -> s1 [0, 81] { R206 += 1, R144 += 1, R92 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R206 += 1, R144 += 1 };
  s1 -> s6 [0, 65535] { R206 += 1 };
  s1 -> s1 [83, 65535] { R206 += 1, R144 += 1, R92 += 1 };
  s2 -> s1 [0, 81] { R206 += 1, R144 += 1, R92 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R206 += 1, R144 += 1, R92 += 1, R58 += 1 };
  s2 -> s6 [0, 65535] { R206 += 1 };
  s2 -> s7 [0, 65535] { R206 += 1, R144 += 1 };
  s2 -> s1 [83, 65535] { R206 += 1, R144 += 1, R92 += 1 };
  s3 -> s1 [0, 81] { R206 += 1, R144 += 1, R92 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R206 += 1, R144 += 1, R92 += 1, R58 += 1 };
  s3 -> s3 [0, 65535] { R206 += 1, R143 += 1, R144 += 1 };
  s3 -> s4 [0, 65535] { R206 += 1, R144 += 1, R91 += 1, R92 += 1 };
  s3 -> s1 [83, 65535] { R206 += 1, R144 += 1, R92 += 1 };
  s4 -> s1 [0, 81] { R206 += 1, R144 += 1, R92 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R206 += 1, R144 += 1, R92 += 1, R58 += 1 };
  s4 -> s6 [0, 65535] { R206 += 1 };
  s4 -> s4 [0, 65535] { R206 += 1, R144 += 1, R91 += 1, R92 += 1 };
  s4 -> s1 [83, 65535] { R206 += 1, R144 += 1, R92 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R206 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R206 += 1 };
  s7 -> s7 [0, 65535] { R206 += 1, R144 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 81] { R208 += 1, R146 += 1, R94 += 1, R62 += 1 };
  s0 -> s2 [0, 65535] { R208 += 1, R146 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R207 += 1, R208 += 1 };
  s0 -> s3 [0, 65535] { R208 += 1, R145 += 1, R146 += 1 };
  s0 -> s4 [0, 65535] { R208 += 1, R146 += 1, R94 += 1, R61 += 1, R62 += 1 };
  s0 -> s1 [83, 65535] { R208 += 1, R146 += 1, R94 += 1, R62 += 1 };
  s1 -> s1 [0, 81] { R208 += 1, R146 += 1, R94 += 1, R62 += 1 };
  s1 -> s1 [0, 65535] { R208 += 1, R146 += 1, R94 += 1 };
  s1 -> s5 [0, 65535] { R208 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R208 += 1, R146 += 1 };
  s1 -> s1 [83, 65535] { R208 += 1, R146 += 1, R94 += 1, R62 += 1 };
  s2 -> s1 [0, 81] { R208 += 1, R146 += 1, R94 += 1, R62 += 1 };
  s2 -> s2 [0, 65535] { R208 += 1, R146 += 1, R93 += 1, R94 += 1 };
  s2 -> s5 [0, 65535] { R208 += 1 };
  s2 -> s4 [0, 65535] { R208 += 1, R146 += 1, R94 += 1, R61 += 1, R62 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [83, 65535] { R208 += 1, R146 += 1, R94 += 1, R62 += 1 };
  s3 -> s1 [0, 81] { R208 += 1, R146 += 1, R94 += 1, R62 += 1 };
  s3 -> s2 [0, 65535] { R208 += 1, R146 += 1, R93 += 1, R94 += 1 };
  s3 -> s3 [0, 65535] { R208 += 1, R145 += 1, R146 += 1 };
  s3 -> s4 [0, 65535] { R208 += 1, R146 += 1, R94 += 1, R61 += 1, R62 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [83, 65535] { R208 += 1, R146 += 1, R94 += 1, R62 += 1 };
  s4 -> s1 [0, 81] { R208 += 1, R146 += 1, R94 += 1, R62 += 1 };
  s4 -> s5 [0, 65535] { R208 += 1 };
  s4 -> s4 [0, 65535] { R208 += 1, R146 += 1, R94 += 1, R61 += 1, R62 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R208 += 1, R146 += 1 };
  s4 -> s1 [83, 65535] { R208 += 1, R146 += 1, R94 += 1, R62 += 1 };
  s5 -> s5 [0, 65535] { R208 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R208 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R208 += 1, R146 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R210 += 1, R148 += 1, R96 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R209 += 1, R210 += 1 };
  s0 -> s2 [0, 65535] { R210 += 1, R148 += 1, R95 += 1, R96 += 1 };
  s0 -> s3 [0, 65535] { R210 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [0, 65535] { R210 += 1, R148 += 1, R96 += 1, R66 += 1, R67 += 1 };
  s1 -> s8 [0, 65535] { R210 += 1, R148 += 1, R96 += 1 };
  s1 -> s1 [0, 65535] { R210 += 1, R148 += 1, R96 += 1, R67 += 1, R68 += 1 };
  s1 -> s5 [0, 65535] { R210 += 1, R148 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R210 += 1 };
  s2 -> s1 [0, 65535] { R210 += 1, R148 += 1, R96 += 1, R67 += 1, R68 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R210 += 1, R148 += 1, R95 += 1, R96 += 1 };
  s2 -> s7 [0, 65535] { R210 += 1 };
  s2 -> s4 [0, 65535] { R210 += 1, R148 += 1, R96 += 1, R66 += 1, R67 += 1 };
  s3 -> s1 [0, 65535] { R210 += 1, R148 += 1, R96 += 1, R67 += 1, R68 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R210 += 1, R148 += 1, R95 += 1, R96 += 1 };
  s3 -> s3 [0, 65535] { R210 += 1, R147 += 1, R148 += 1 };
  s3 -> s4 [0, 65535] { R210 += 1, R148 += 1, R96 += 1, R66 += 1, R67 += 1 };
  s4 -> s1 [0, 65535] { R210 += 1, R148 += 1, R96 += 1, R67 += 1, R68 += 1 };
  s4 -> s5 [0, 65535] { R210 += 1, R148 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R210 += 1 };
  s4 -> s4 [0, 65535] { R210 += 1, R148 += 1, R96 += 1, R66 += 1, R67 += 1 };
  s5 -> s5 [0, 65535] { R210 += 1, R148 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R210 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R210 += 1 };
  s8 -> s8 [0, 65535] { R210 += 1, R148 += 1, R96 += 1 };
  s8 -> s5 [0, 65535] { R210 += 1, R148 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R210 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 82] { R212 += 1, R150 += 1, R98 += 1, R72 += 1 };
  s0 -> s2 [0, 65535] { R212 += 1, R150 += 1, R98 += 1, R71 += 1, R72 += 1 };
  s0 -> s0 [0, 65535] { R211 += 1, R212 += 1 };
  s0 -> s3 [0, 65535] { R212 += 1, R149 += 1, R150 += 1 };
  s0 -> s4 [0, 65535] { R212 += 1, R150 += 1, R97 += 1, R98 += 1 };
  s0 -> s5 [85, 85] { R212 += 1, R150 += 1, R98 += 1, R72 += 1 };
  s0 -> s1 [86, 65535] { R212 += 1, R150 += 1, R98 += 1, R72 += 1 };
  s1 -> s1 [0, 82] { R212 += 1, R150 += 1, R98 += 1, R72 += 1 };
  s1 -> s5 [85, 85] { R212 += 1, R150 += 1, R98 += 1, R72 += 1 };
  s1 -> s1 [86, 65535] { R212 += 1, R150 += 1, R98 += 1, R72 += 1 };
  s2 -> s1 [0, 82] { R212 += 1, R150 += 1, R98 += 1, R72 += 1 };
  s2 -> s2 [0, 65535] { R212 += 1, R150 += 1, R98 += 1, R71 += 1, R72 += 1 };
  s2 -> s5 [85, 85] { R212 += 1, R150 += 1, R98 += 1, R72 += 1 };
  s2 -> s1 [86, 65535] { R212 += 1, R150 += 1, R98 += 1, R72 += 1 };
  s3 -> s1 [0, 82] { R212 += 1, R150 += 1, R98 += 1, R72 += 1 };
  s3 -> s2 [0, 65535] { R212 += 1, R150 += 1, R98 += 1, R71 += 1, R72 += 1 };
  s3 -> s3 [0, 65535] { R212 += 1, R149 += 1, R150 += 1 };
  s3 -> s4 [0, 65535] { R212 += 1, R150 += 1, R97 += 1, R98 += 1 };
  s3 -> s5 [85, 85] { R212 += 1, R150 += 1, R98 += 1, R72 += 1 };
  s3 -> s1 [86, 65535] { R212 += 1, R150 += 1, R98 += 1, R72 += 1 };
  s4 -> s1 [0, 82] { R212 += 1, R150 += 1, R98 += 1, R72 += 1 };
  s4 -> s2 [0, 65535] { R212 += 1, R150 += 1, R98 += 1, R71 += 1, R72 += 1 };
  s4 -> s4 [0, 65535] { R212 += 1, R150 += 1, R97 += 1, R98 += 1 };
  s4 -> s5 [85, 85] { R212 += 1, R150 += 1, R98 += 1, R72 += 1 };
  s4 -> s1 [86, 65535] { R212 += 1, R150 += 1, R98 += 1, R72 += 1 };
  s5 -> s5 [0, 82] { R212 += 1, R150 += 1, R98 += 1, R72 += 1 };
  s5 -> s5 [0, 65535] { R212 += 1, R150 += 1, R98 += 1 };
  s5 -> s6 [0, 65535] { R212 += 1 };
  s5 -> s7 [0, 65535] { R212 += 1, R150 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [85, 65535] { R212 += 1, R150 += 1, R98 += 1, R72 += 1 };
  s6 -> s6 [0, 65535] { R212 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s6 [0, 65535] { R212 += 1 };
  s7 -> s7 [0, 65535] { R212 += 1, R150 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 65535] { R214 += 1, R152 += 1, R100 += 1, R76 += 1, R77 += 1 };
  s0 -> s0 [0, 65535] { R213 += 1, R214 += 1 };
  s0 -> s2 [0, 65535] { R214 += 1, R152 += 1, R99 += 1, R100 += 1 };
  s0 -> s3 [0, 65535] { R214 += 1, R151 += 1, R152 += 1 };
  s0 -> s4 [0, 65535] { R214 += 1, R152 += 1, R100 += 1, R77 += 1, R78 += 1 };
  s1 -> s5 [0, 65535] { R214 += 1 };
  s1 -> s1 [0, 65535] { R214 += 1, R152 += 1, R100 += 1, R76 += 1, R77 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s8 [0, 65535] { R214 += 1, R152 += 1 };
  s1 -> s4 [0, 65535] { R214 += 1, R152 += 1, R100 += 1, R77 += 1, R78 += 1 };
  s2 -> s5 [0, 65535] { R214 += 1 };
  s2 -> s1 [0, 65535] { R214 += 1, R152 += 1, R100 += 1, R76 += 1, R77 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R214 += 1, R152 += 1, R99 += 1, R100 += 1 };
  s2 -> s4 [0, 65535] { R214 += 1, R152 += 1, R100 += 1, R77 += 1, R78 += 1 };
  s3 -> s1 [0, 65535] { R214 += 1, R152 += 1, R100 += 1, R76 += 1, R77 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R214 += 1, R152 += 1, R99 += 1, R100 += 1 };
  s3 -> s3 [0, 65535] { R214 += 1, R151 += 1, R152 += 1 };
  s3 -> s4 [0, 65535] { R214 += 1, R152 += 1, R100 += 1, R77 += 1, R78 += 1 };
  s4 -> s5 [0, 65535] { R214 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R214 += 1, R152 += 1, R100 += 1 };
  s4 -> s8 [0, 65535] { R214 += 1, R152 += 1 };
  s4 -> s4 [0, 65535] { R214 += 1, R152 += 1, R100 += 1, R77 += 1, R78 += 1 };
  s5 -> s5 [0, 65535] { R214 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R214 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R214 += 1, R152 += 1, R100 += 1 };
  s7 -> s8 [0, 65535] { R214 += 1, R152 += 1 };
  s8 -> s5 [0, 65535] { R214 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R214 += 1, R152 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 81] { R216 += 1, R154 += 1, R102 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R215 += 1, R216 += 1 };
  s0 -> s2 [0, 65535] { R216 += 1, R154 += 1, R102 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [0, 65535] { R216 += 1, R153 += 1, R154 += 1 };
  s0 -> s4 [0, 65535] { R216 += 1, R154 += 1, R101 += 1, R102 += 1 };
  s0 -> s5 [82, 82] { R216 += 1, R154 += 1, R102 += 1, R82 += 1 };
  s0 -> s6 [82, 82] { R216 += 1, R154 += 1, R102 += 1, R82 += 1 };
  s0 -> s1 [86, 65535] { R216 += 1, R154 += 1, R102 += 1, R82 += 1 };
  s1 -> s1 [0, 81] { R216 += 1, R154 += 1, R102 += 1, R82 += 1 };
  s1 -> s7 [0, 65535] { R216 += 1 };
  s1 -> s1 [0, 65535] { R216 += 1, R154 += 1, R102 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s9 [0, 65535] { R216 += 1, R154 += 1 };
  s1 -> s5 [82, 82] { R216 += 1, R154 += 1, R102 += 1, R82 += 1 };
  s1 -> s6 [82, 82] { R216 += 1, R154 += 1, R102 += 1, R82 += 1 };
  s1 -> s1 [86, 65535] { R216 += 1, R154 += 1, R102 += 1, R82 += 1 };
  s2 -> s1 [0, 81] { R216 += 1, R154 += 1, R102 += 1, R82 += 1 };
  s2 -> s2 [0, 65535] { R216 += 1, R154 += 1, R102 += 1, R81 += 1, R82 += 1 };
  s2 -> s7 [0, 65535] { R216 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s9 [0, 65535] { R216 += 1, R154 += 1 };
  s2 -> s5 [82, 82] { R216 += 1, R154 += 1, R102 += 1, R82 += 1 };
  s2 -> s6 [82, 82] { R216 += 1, R154 += 1, R102 += 1, R82 += 1 };
  s2 -> s1 [86, 65535] { R216 += 1, R154 += 1, R102 += 1, R82 += 1 };
  s3 -> s1 [0, 81] { R216 += 1, R154 += 1, R102 += 1, R82 += 1 };
  s3 -> s2 [0, 65535] { R216 += 1, R154 += 1, R102 += 1, R81 += 1, R82 += 1 };
  s3 -> s3 [0, 65535] { R216 += 1, R153 += 1, R154 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s4 [0, 65535] { R216 += 1, R154 += 1, R101 += 1, R102 += 1 };
  s3 -> s5 [82, 82] { R216 += 1, R154 += 1, R102 += 1, R82 += 1 };
  s3 -> s6 [82, 82] { R216 += 1, R154 += 1, R102 += 1, R82 += 1 };
  s3 -> s1 [86, 65535] { R216 += 1, R154 += 1, R102 += 1, R82 += 1 };
  s4 -> s1 [0, 81] { R216 += 1, R154 += 1, R102 += 1, R82 += 1 };
  s4 -> s2 [0, 65535] { R216 += 1, R154 += 1, R102 += 1, R81 += 1, R82 += 1 };
  s4 -> s7 [0, 65535] { R216 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [0, 65535] { R216 += 1, R154 += 1, R101 += 1, R102 += 1 };
  s4 -> s5 [82, 82] { R216 += 1, R154 += 1, R102 += 1, R82 += 1 };
  s4 -> s6 [82, 82] { R216 += 1, R154 += 1, R102 += 1, R82 += 1 };
  s4 -> s1 [86, 65535] { R216 += 1, R154 += 1, R102 += 1, R82 += 1 };
  s5 -> s5 [0, 65535] { R216 += 1, R154 += 1, R102 += 1 };
  s5 -> s7 [0, 65535] { R216 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s9 [0, 65535] { R216 += 1, R154 += 1 };
  s6 -> s6 [0, 82] { R216 += 1, R154 += 1, R102 += 1, R82 += 1 };
  s6 -> s7 [0, 65535] { R216 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R216 += 1, R154 += 1, R102 += 1 };
  s6 -> s9 [0, 65535] { R216 += 1, R154 += 1 };
  s6 -> s6 [86, 65535] { R216 += 1, R154 += 1, R102 += 1, R82 += 1 };
  s7 -> s7 [0, 65535] { R216 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s7 [0, 65535] { R216 += 1 };
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R216 += 1, R154 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R218 += 1, R156 += 1, R103 += 1, R104 += 1 };
  s0 -> s2 [0, 65535] { R218 += 1, R155 += 1, R156 += 1 };
  s0 -> s3 [0, 65535] { R218 += 1, R156 += 1, R104 += 1, R20 += 1 };
  s0 -> s0 [0, 65535] { R217 += 1, R218 += 1 };
  s1 -> s4 [0, 65535] { R218 += 1 };
  s1 -> s1 [0, 65535] { R218 += 1, R156 += 1, R103 += 1, R104 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [0, 65535] { R218 += 1, R156 += 1, R104 += 1, R20 += 1 };
  s2 -> s1 [0, 65535] { R218 += 1, R156 += 1, R103 += 1, R104 += 1 };
  s2 -> s2 [0, 65535] { R218 += 1, R155 += 1, R156 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R218 += 1, R156 += 1, R104 += 1, R20 += 1 };
  s3 -> s4 [0, 65535] { R218 += 1 };
  s3 -> s5 [0, 65535] { R218 += 1, R156 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R218 += 1, R156 += 1, R104 += 1, R20 += 1 };
  s4 -> s4 [0, 65535] { R218 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s4 [0, 65535] { R218 += 1 };
  s5 -> s5 [0, 65535] { R218 += 1, R156 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 68] { R220 += 1, R158 += 1, R106 += 1 };
  s0 -> s0 [0, 65535] { R219 += 1, R220 += 1 };
  s0 -> s2 [0, 65535] { R220 += 1, R158 += 1, R105 += 1, R106 += 1 };
  s0 -> s3 [0, 65535] { R220 += 1, R157 += 1, R158 += 1 };
  s0 -> s4 [69, 69] { R220 += 1, R158 += 1, R106 += 1 };
  s0 -> s5 [69, 69] { R220 += 1, R158 += 1, R106 += 1 };
  s0 -> s1 [83, 65535] { R220 += 1, R158 += 1, R106 += 1 };
  s1 -> s1 [0, 68] { R220 += 1, R158 += 1, R106 += 1 };
  s1 -> s1 [0, 65535] { R220 += 1, R158 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R220 += 1 };
  s1 -> s4 [69, 69] { R220 += 1, R158 += 1, R106 += 1 };
  s1 -> s5 [69, 69] { R220 += 1, R158 += 1, R106 += 1 };
  s1 -> s1 [83, 65535] { R220 += 1, R158 += 1, R106 += 1 };
  s2 -> s1 [0, 68] { R220 += 1, R158 += 1, R106 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R220 += 1 };
  s2 -> s2 [0, 65535] { R220 += 1, R158 += 1, R105 += 1, R106 += 1 };
  s2 -> s4 [69, 69] { R220 += 1, R158 += 1, R106 += 1 };
  s2 -> s5 [69, 69] { R220 += 1, R158 += 1, R106 += 1 };
  s2 -> s1 [83, 65535] { R220 += 1, R158 += 1, R106 += 1 };
  s3 -> s1 [0, 68] { R220 += 1, R158 += 1, R106 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R220 += 1, R158 += 1, R105 += 1, R106 += 1 };
  s3 -> s3 [0, 65535] { R220 += 1, R157 += 1, R158 += 1 };
  s3 -> s4 [69, 69] { R220 += 1, R158 += 1, R106 += 1 };
  s3 -> s5 [69, 69] { R220 += 1, R158 += 1, R106 += 1 };
  s3 -> s1 [83, 65535] { R220 += 1, R158 += 1, R106 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R220 += 1 };
  s4 -> s4 [0, 65535] { R220 += 1, R158 += 1 };
  s5 -> s5 [0, 69] { R220 += 1, R158 += 1, R106 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R220 += 1 };
  s5 -> s5 [0, 65535] { R220 += 1, R158 += 1 };
  s5 -> s5 [83, 65535] { R220 += 1, R158 += 1, R106 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R220 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 68] { R222 += 1, R160 += 1, R108 += 1, R55 += 1 };
  s0 -> s2 [0, 65535] { R222 += 1, R160 += 1, R107 += 1, R108 += 1 };
  s0 -> s3 [0, 65535] { R222 += 1, R159 += 1, R160 += 1 };
  s0 -> s0 [0, 65535] { R221 += 1, R222 += 1 };
  s0 -> s4 [69, 69] { R222 += 1, R160 += 1, R108 += 1, R55 += 1 };
  s0 -> s5 [69, 69] { R222 += 1, R160 += 1, R108 += 1, R55 += 1 };
  s0 -> s1 [70, 65535] { R222 += 1, R160 += 1, R108 += 1, R55 += 1 };
  s1 -> s1 [0, 68] { R222 += 1, R160 += 1, R108 += 1, R55 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s8 [0, 65535] { R222 += 1 };
  s1 -> s1 [0, 65535] { R222 += 1, R160 += 1 };
  s1 -> s4 [69, 69] { R222 += 1, R160 += 1, R108 += 1, R55 += 1 };
  s1 -> s5 [69, 69] { R222 += 1, R160 += 1, R108 += 1, R55 += 1 };
  s1 -> s1 [70, 65535] { R222 += 1, R160 += 1, R108 += 1, R55 += 1 };
  s2 -> s1 [0, 68] { R222 += 1, R160 += 1, R108 += 1, R55 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R222 += 1, R160 += 1, R107 += 1, R108 += 1 };
  s2 -> s8 [0, 65535] { R222 += 1 };
  s2 -> s4 [69, 69] { R222 += 1, R160 += 1, R108 += 1, R55 += 1 };
  s2 -> s5 [69, 69] { R222 += 1, R160 += 1, R108 += 1, R55 += 1 };
  s2 -> s1 [70, 65535] { R222 += 1, R160 += 1, R108 += 1, R55 += 1 };
  s3 -> s1 [0, 68] { R222 += 1, R160 += 1, R108 += 1, R55 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R222 += 1, R160 += 1, R107 += 1, R108 += 1 };
  s3 -> s3 [0, 65535] { R222 += 1, R159 += 1, R160 += 1 };
  s3 -> s4 [69, 69] { R222 += 1, R160 += 1, R108 += 1, R55 += 1 };
  s3 -> s5 [69, 69] { R222 += 1, R160 += 1, R108 += 1, R55 += 1 };
  s3 -> s1 [70, 65535] { R222 += 1, R160 += 1, R108 += 1, R55 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R222 += 1, R160 += 1 };
  s4 -> s8 [0, 65535] { R222 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R222 += 1, R160 += 1 };
  s5 -> s8 [0, 65535] { R222 += 1 };
  s5 -> s5 [0, 65535] { R222 += 1, R160 += 1, R108 += 1, R55 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R222 += 1, R160 += 1 };
  s7 -> s8 [0, 65535] { R222 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R222 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 68] { R224 += 1, R162 += 1, R110 += 1, R57 += 1 };
  s0 -> s0 [0, 65535] { R223 += 1, R224 += 1 };
  s0 -> s2 [0, 65535] { R224 += 1, R162 += 1, R109 += 1, R110 += 1 };
  s0 -> s3 [0, 65535] { R224 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [69, 69] { R224 += 1, R162 += 1, R110 += 1, R57 += 1 };
  s0 -> s5 [69, 69] { R224 += 1, R162 += 1, R110 += 1, R57 += 1 };
  s0 -> s1 [70, 65535] { R224 += 1, R162 += 1, R110 += 1, R57 += 1 };
  s1 -> s1 [0, 68] { R224 += 1, R162 += 1, R110 += 1, R57 += 1 };
  s1 -> s6 [0, 65535] { R224 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R224 += 1, R162 += 1 };
  s1 -> s4 [69, 69] { R224 += 1, R162 += 1, R110 += 1, R57 += 1 };
  s1 -> s5 [69, 69] { R224 += 1, R162 += 1, R110 += 1, R57 += 1 };
  s1 -> s1 [70, 65535] { R224 += 1, R162 += 1, R110 += 1, R57 += 1 };
  s2 -> s1 [0, 68] { R224 += 1, R162 += 1, R110 += 1, R57 += 1 };
  s2 -> s2 [0, 65535] { R224 += 1, R162 += 1, R109 += 1, R110 += 1 };
  s2 -> s6 [0, 65535] { R224 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [69, 69] { R224 += 1, R162 += 1, R110 += 1, R57 += 1 };
  s2 -> s5 [69, 69] { R224 += 1, R162 += 1, R110 += 1, R57 += 1 };
  s2 -> s1 [70, 65535] { R224 += 1, R162 += 1, R110 += 1, R57 += 1 };
  s3 -> s1 [0, 68] { R224 += 1, R162 += 1, R110 += 1, R57 += 1 };
  s3 -> s2 [0, 65535] { R224 += 1, R162 += 1, R109 += 1, R110 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R224 += 1, R161 += 1, R162 += 1 };
  s3 -> s4 [69, 69] { R224 += 1, R162 += 1, R110 += 1, R57 += 1 };
  s3 -> s5 [69, 69] { R224 += 1, R162 += 1, R110 += 1, R57 += 1 };
  s3 -> s1 [70, 65535] { R224 += 1, R162 += 1, R110 += 1, R57 += 1 };
  s4 -> s4 [0, 65535] { R224 += 1, R162 += 1, R110 += 1, R57 += 1 };
  s4 -> s8 [0, 65535] { R224 += 1, R162 += 1 };
  s4 -> s6 [0, 65535] { R224 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s6 [0, 65535] { R224 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R224 += 1, R162 += 1 };
  s6 -> s6 [0, 65535] { R224 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R224 += 1, R162 += 1 };
  s8 -> s6 [0, 65535] { R224 += 1 };
  s8 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 68] { R226 += 1, R164 += 1, R112 += 1, R59 += 1, R60 += 1 };
  s0 -> s2 [0, 65535] { R226 += 1, R163 += 1, R164 += 1 };
  s0 -> s3 [0, 65535] { R226 += 1, R164 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R225 += 1, R226 += 1 };
  s0 -> s4 [69, 69] { R226 += 1, R164 += 1, R112 += 1, R59 += 1, R60 += 1 };
  s0 -> s5 [69, 69] { R226 += 1, R164 += 1, R112 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [70, 65535] { R226 += 1, R164 += 1, R112 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 68] { R226 += 1, R164 += 1, R112 += 1, R59 += 1, R60 += 1 };
  s1 -> s6 [0, 65535] { R226 += 1 };
  s1 -> s1 [0, 65535] { R226 += 1, R164 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [69, 69] { R226 += 1, R164 += 1, R112 += 1, R59 += 1, R60 += 1 };
  s1 -> s5 [69, 69] { R226 += 1, R164 += 1, R112 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [70, 65535] { R226 += 1, R164 += 1, R112 += 1, R59 += 1, R60 += 1 };
  s2 -> s1 [0, 68] { R226 += 1, R164 += 1, R112 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535] { R226 += 1, R163 += 1, R164 += 1 };
  s2 -> s3 [0, 65535] { R226 += 1, R164 += 1, R111 += 1, R112 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [69, 69] { R226 += 1, R164 += 1, R112 += 1, R59 += 1, R60 += 1 };
  s2 -> s5 [69, 69] { R226 += 1, R164 += 1, R112 += 1, R59 += 1, R60 += 1 };
  s2 -> s1 [70, 65535] { R226 += 1, R164 += 1, R112 += 1, R59 += 1, R60 += 1 };
  s3 -> s1 [0, 68] { R226 += 1, R164 += 1, R112 += 1, R59 += 1, R60 += 1 };
  s3 -> s6 [0, 65535] { R226 += 1 };
  s3 -> s3 [0, 65535] { R226 += 1, R164 += 1, R111 += 1, R112 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [69, 69] { R226 += 1, R164 += 1, R112 += 1, R59 += 1, R60 += 1 };
  s3 -> s5 [69, 69] { R226 += 1, R164 += 1, R112 += 1, R59 += 1, R60 += 1 };
  s3 -> s1 [70, 65535] { R226 += 1, R164 += 1, R112 += 1, R59 += 1, R60 += 1 };
  s4 -> s6 [0, 65535] { R226 += 1 };
  s4 -> s4 [0, 65535] { R226 += 1, R164 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s6 [0, 65535] { R226 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R226 += 1, R164 += 1 };
  s5 -> s5 [0, 65535] { R226 += 1, R164 += 1, R112 += 1, R59 += 1, R60 += 1 };
  s6 -> s6 [0, 65535] { R226 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R226 += 1 };
  s8 -> s8 [0, 65535] { R226 += 1, R164 += 1 };
  s8 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 68] { R228 += 1, R166 += 1, R114 += 1, R63 += 1, R64 += 1 };
  s0 -> s2 [0, 65535] { R228 += 1, R165 += 1, R166 += 1 };
  s0 -> s0 [0, 65535] { R227 += 1, R228 += 1 };
  s0 -> s3 [0, 65535] { R228 += 1, R166 += 1, R113 += 1, R114 += 1 };
  s0 -> s4 [69, 69] { R228 += 1, R166 += 1, R114 += 1, R63 += 1, R64 += 1 };
  s0 -> s5 [69, 69] { R228 += 1, R166 += 1, R114 += 1, R63 += 1, R64 += 1 };
  s0 -> s1 [70, 65535] { R228 += 1, R166 += 1, R114 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [0, 68] { R228 += 1, R166 += 1, R114 += 1, R63 += 1, R64 += 1 };
  s1 -> s6 [0, 65535] { R228 += 1 };
  s1 -> s1 [0, 65535] { R228 += 1, R166 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [69, 69] { R228 += 1, R166 += 1, R114 += 1, R63 += 1, R64 += 1 };
  s1 -> s5 [69, 69] { R228 += 1, R166 += 1, R114 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [70, 65535] { R228 += 1, R166 += 1, R114 += 1, R63 += 1, R64 += 1 };
  s2 -> s1 [0, 68] { R228 += 1, R166 += 1, R114 += 1, R63 += 1, R64 += 1 };
  s2 -> s2 [0, 65535] { R228 += 1, R165 += 1, R166 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s3 [0, 65535] { R228 += 1, R166 += 1, R113 += 1, R114 += 1 };
  s2 -> s4 [69, 69] { R228 += 1, R166 += 1, R114 += 1, R63 += 1, R64 += 1 };
  s2 -> s5 [69, 69] { R228 += 1, R166 += 1, R114 += 1, R63 += 1, R64 += 1 };
  s2 -> s1 [70, 65535] { R228 += 1, R166 += 1, R114 += 1, R63 += 1, R64 += 1 };
  s3 -> s1 [0, 68] { R228 += 1, R166 += 1, R114 += 1, R63 += 1, R64 += 1 };
  s3 -> s6 [0, 65535] { R228 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R228 += 1, R166 += 1, R113 += 1, R114 += 1 };
  s3 -> s4 [69, 69] { R228 += 1, R166 += 1, R114 += 1, R63 += 1, R64 += 1 };
  s3 -> s5 [69, 69] { R228 += 1, R166 += 1, R114 += 1, R63 += 1, R64 += 1 };
  s3 -> s1 [70, 65535] { R228 += 1, R166 += 1, R114 += 1, R63 += 1, R64 += 1 };
  s4 -> s6 [0, 65535] { R228 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R228 += 1, R166 += 1 };
  s5 -> s6 [0, 65535] { R228 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R228 += 1, R166 += 1, R114 += 1, R63 += 1, R64 += 1 };
  s5 -> s8 [0, 65535] { R228 += 1, R166 += 1 };
  s6 -> s6 [0, 65535] { R228 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R228 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R228 += 1, R166 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 68] { R230 += 1, R168 += 1, R116 += 1, R69 += 1, R70 += 1 };
  s0 -> s0 [0, 65535] { R229 += 1, R230 += 1 };
  s0 -> s2 [0, 65535] { R230 += 1, R168 += 1, R115 += 1, R116 += 1 };
  s0 -> s3 [0, 65535] { R230 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [69, 69] { R230 += 1, R168 += 1, R116 += 1, R69 += 1, R70 += 1 };
  s0 -> s5 [69, 69] { R230 += 1, R168 += 1, R116 += 1, R69 += 1, R70 += 1 };
  s0 -> s1 [70, 65535] { R230 += 1, R168 += 1, R116 += 1, R69 += 1, R70 += 1 };
  s1 -> s1 [0, 68] { R230 += 1, R168 += 1, R116 += 1, R69 += 1, R70 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R230 += 1, R168 += 1 };
  s1 -> s8 [0, 65535] { R230 += 1 };
  s1 -> s4 [69, 69] { R230 += 1, R168 += 1, R116 += 1, R69 += 1, R70 += 1 };
  s1 -> s5 [69, 69] { R230 += 1, R168 += 1, R116 += 1, R69 += 1, R70 += 1 };
  s1 -> s1 [70, 65535] { R230 += 1, R168 += 1, R116 += 1, R69 += 1, R70 += 1 };
  s2 -> s1 [0, 68] { R230 += 1, R168 += 1, R116 += 1, R69 += 1, R70 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R230 += 1, R168 += 1, R115 += 1, R116 += 1 };
  s2 -> s8 [0, 65535] { R230 += 1 };
  s2 -> s4 [69, 69] { R230 += 1, R168 += 1, R116 += 1, R69 += 1, R70 += 1 };
  s2 -> s5 [69, 69] { R230 += 1, R168 += 1, R116 += 1, R69 += 1, R70 += 1 };
  s2 -> s1 [70, 65535] { R230 += 1, R168 += 1, R116 += 1, R69 += 1, R70 += 1 };
  s3 -> s1 [0, 68] { R230 += 1, R168 += 1, R116 += 1, R69 += 1, R70 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R230 += 1, R168 += 1, R115 += 1, R116 += 1 };
  s3 -> s3 [0, 65535] { R230 += 1, R167 += 1, R168 += 1 };
  s3 -> s4 [69, 69] { R230 += 1, R168 += 1, R116 += 1, R69 += 1, R70 += 1 };
  s3 -> s5 [69, 69] { R230 += 1, R168 += 1, R116 += 1, R69 += 1, R70 += 1 };
  s3 -> s1 [70, 65535] { R230 += 1, R168 += 1, R116 += 1, R69 += 1, R70 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R230 += 1, R168 += 1 };
  s4 -> s8 [0, 65535] { R230 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R230 += 1, R168 += 1 };
  s5 -> s5 [0, 65535] { R230 += 1, R168 += 1, R116 += 1, R69 += 1, R70 += 1 };
  s5 -> s8 [0, 65535] { R230 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R230 += 1, R168 += 1 };
  s7 -> s8 [0, 65535] { R230 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R230 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 68] { R232 += 1, R170 += 1, R118 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R231 += 1, R232 += 1 };
  s0 -> s2 [0, 65535] { R232 += 1, R169 += 1, R170 += 1 };
  s0 -> s3 [0, 65535] { R232 += 1, R170 += 1, R117 += 1, R118 += 1 };
  s0 -> s4 [69, 69] { R232 += 1, R170 += 1, R118 += 1, R73 += 1, R74 += 1 };
  s0 -> s5 [69, 69] { R232 += 1, R170 += 1, R118 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [70, 65535] { R232 += 1, R170 += 1, R118 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 68] { R232 += 1, R170 += 1, R118 += 1, R73 += 1, R74 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R232 += 1, R170 += 1 };
  s1 -> s8 [0, 65535] { R232 += 1 };
  s1 -> s4 [69, 69] { R232 += 1, R170 += 1, R118 += 1, R73 += 1, R74 += 1 };
  s1 -> s5 [69, 69] { R232 += 1, R170 += 1, R118 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [70, 65535] { R232 += 1, R170 += 1, R118 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [0, 68] { R232 += 1, R170 += 1, R118 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R232 += 1, R169 += 1, R170 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s3 [0, 65535] { R232 += 1, R170 += 1, R117 += 1, R118 += 1 };
  s2 -> s4 [69, 69] { R232 += 1, R170 += 1, R118 += 1, R73 += 1, R74 += 1 };
  s2 -> s5 [69, 69] { R232 += 1, R170 += 1, R118 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [70, 65535] { R232 += 1, R170 += 1, R118 += 1, R73 += 1, R74 += 1 };
  s3 -> s1 [0, 68] { R232 += 1, R170 += 1, R118 += 1, R73 += 1, R74 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s8 [0, 65535] { R232 += 1 };
  s3 -> s3 [0, 65535] { R232 += 1, R170 += 1, R117 += 1, R118 += 1 };
  s3 -> s4 [69, 69] { R232 += 1, R170 += 1, R118 += 1, R73 += 1, R74 += 1 };
  s3 -> s5 [69, 69] { R232 += 1, R170 += 1, R118 += 1, R73 += 1, R74 += 1 };
  s3 -> s1 [70, 65535] { R232 += 1, R170 += 1, R118 += 1, R73 += 1, R74 += 1 };
  s4 -> s4 [0, 65535] { R232 += 1, R170 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R232 += 1 };
  s5 -> s6 [0, 65535] { R232 += 1, R170 += 1 };
  s5 -> s5 [0, 65535] { R232 += 1, R170 += 1, R118 += 1, R73 += 1, R74 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R232 += 1 };
  s6 -> s6 [0, 65535] { R232 += 1, R170 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R232 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R232 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 68] { R234 += 1, R172 += 1, R120 += 1, R79 += 1, R80 += 1 };
  s0 -> s2 [0, 65535] { R234 += 1, R172 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R233 += 1, R234 += 1 };
  s0 -> s3 [0, 65535] { R234 += 1, R171 += 1, R172 += 1 };
  s0 -> s4 [69, 69] { R234 += 1, R172 += 1, R120 += 1, R79 += 1, R80 += 1 };
  s0 -> s5 [69, 69] { R234 += 1, R172 += 1, R120 += 1, R79 += 1, R80 += 1 };
  s0 -> s1 [70, 65535] { R234 += 1, R172 += 1, R120 += 1, R79 += 1, R80 += 1 };
  s1 -> s1 [0, 68] { R234 += 1, R172 += 1, R120 += 1, R79 += 1, R80 += 1 };
  s1 -> s6 [0, 65535] { R234 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R234 += 1, R172 += 1 };
  s1 -> s4 [69, 69] { R234 += 1, R172 += 1, R120 += 1, R79 += 1, R80 += 1 };
  s1 -> s5 [69, 69] { R234 += 1, R172 += 1, R120 += 1, R79 += 1, R80 += 1 };
  s1 -> s1 [70, 65535] { R234 += 1, R172 += 1, R120 += 1, R79 += 1, R80 += 1 };
  s2 -> s1 [0, 68] { R234 += 1, R172 += 1, R120 += 1, R79 += 1, R80 += 1 };
  s2 -> s2 [0, 65535] { R234 += 1, R172 += 1, R119 += 1, R120 += 1 };
  s2 -> s6 [0, 65535] { R234 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [69, 69] { R234 += 1, R172 += 1, R120 += 1, R79 += 1, R80 += 1 };
  s2 -> s5 [69, 69] { R234 += 1, R172 += 1, R120 += 1, R79 += 1, R80 += 1 };
  s2 -> s1 [70, 65535] { R234 += 1, R172 += 1, R120 += 1, R79 += 1, R80 += 1 };
  s3 -> s1 [0, 68] { R234 += 1, R172 += 1, R120 += 1, R79 += 1, R80 += 1 };
  s3 -> s2 [0, 65535] { R234 += 1, R172 += 1, R119 += 1, R120 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R234 += 1, R171 += 1, R172 += 1 };
  s3 -> s4 [69, 69] { R234 += 1, R172 += 1, R120 += 1, R79 += 1, R80 += 1 };
  s3 -> s5 [69, 69] { R234 += 1, R172 += 1, R120 += 1, R79 += 1, R80 += 1 };
  s3 -> s1 [70, 65535] { R234 += 1, R172 += 1, R120 += 1, R79 += 1, R80 += 1 };
  s4 -> s6 [0, 65535] { R234 += 1 };
  s4 -> s4 [0, 65535] { R234 += 1, R172 += 1, R120 += 1, R79 += 1, R80 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R234 += 1, R172 += 1 };
  s5 -> s6 [0, 65535] { R234 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R234 += 1, R172 += 1 };
  s6 -> s6 [0, 65535] { R234 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R234 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R234 += 1, R172 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
};
synchronised {  // Automata constraining c1
automaton c1_0 {
  init s0;
  s0 -> s1 [114, 114];
  accepting s1;
};
};
synchronised {  // Automata constraining P32
automaton P32_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
synchronised {  // Automata constraining P34
automaton P34_0 {
  init s0;
  s0 -> s1 [10, 10];
  accepting s1;
};
};
constraint R1 = R102 && R2 - R172 = 1 && R3 - R234 = 1 && R21 - R102 = -1 && R22 = R102 && R23 - R102 = -1 && R24 = R102 && R25 = 0 && R26 = 1 && R27 = 0 && R28 = 1 && R29 = R172 && R30 - R172 = 1 && R31 = R172 && R32 - R172 = 1 && R33 = 0 && R34 = 1 && R35 = 0 && R36 = 1 && R37 = R234 && R38 - R234 = 1 && R39 = R234 && R40 - R234 = 1 && R41 = 0 && R42 = 1 && R43 = 0 && R44 = 1 && R56 + R55 + -1*R72 + -1*R70 = 0 && R71 + R69 = 0 && R83 = 0 && R84 = R102 && R85 = 0 && R86 = R102 && R87 = 0 && R88 = R102 && R89 = 0 && R90 = R102 && R91 = 0 && R92 = R102 && R93 = 0 && R94 = R102 && R95 = 0 && R96 = R102 && R97 = 0 && R98 = R102 && R99 = 0 && R100 = R102 && R101 = 0 && R121 = 0 && R122 = R172 && R123 = 0 && R124 = R172 && R125 = 0 && R126 = R172 && R127 = 0 && R128 = R172 && R129 = 0 && R130 = R172 && R131 = 0 && R132 = R172 && R133 = 0 && R134 = R172 && R135 = 0 && R136 = R172 && R137 = 0 && R138 = R172 && R139 = 0 && R140 = R172 && R141 = 0 && R142 = R172 && R143 = 0 && R144 = R172 && R145 = 0 && R146 = R172 && R147 = 0 && R148 = R172 && R149 = 0 && R150 = R172 && R151 = 0 && R152 = R172 && R153 = 0 && R154 = R172 && R155 = 0 && R156 = R172 && R157 = 0 && R158 = R172 && R159 = 0 && R160 = R172 && R161 = 0 && R162 = R172 && R163 = 0 && R164 = R172 && R165 = 0 && R166 = R172 && R167 = 0 && R168 = R172 && R169 = 0 && R170 = R172 && R171 = 0 && R173 = 0 && R174 = R234 && R175 = 0 && R176 = R234 && R177 = 0 && R178 = R234 && R179 = 0 && R180 = R234 && R181 = 0 && R182 = R234 && R183 = 0 && R184 = R234 && R185 = 0 && R186 = R234 && R187 = 0 && R188 = R234 && R189 = 0 && R190 = R234 && R191 = 0 && R192 = R234 && R193 = 0 && R194 = R234 && R195 = 0 && R196 = R234 && R197 = 0 && R198 = R234 && R199 = 0 && R200 = R234 && R201 = 0 && R202 = R234 && R203 = 0 && R204 = R234 && R205 = 0 && R206 = R234 && R207 = 0 && R208 = R234 && R209 = 0 && R210 = R234 && R211 = 0 && R212 = R234 && R213 = 0 && R214 = R234 && R215 = 0 && R216 = R234 && R217 = 0 && R218 = R234 && R219 = 0 && R220 = R234 && R221 = 0 && R222 = R234 && R223 = 0 && R224 = R234 && R225 = 0 && R226 = R234 && R227 = 0 && R228 = R234 && R229 = 0 && R230 = R234 && R231 = 0 && R232 = R234 && R233 = 0 && R13 < 1 && R16 < 1 && R58 + R57 < 1 && -1*R72 + -1*R70 < 1 && 0 < R102 && -1 < R172 && -1 < R234 && (R68 + R65 != 0 || ((R61 + R59 != 0 || R62 + R60 + -1*R72 + -1*R70 = 0 || R72 + R70 < 1) && (R61 + R59 = 0 || R72 + R70 < 1))) && (R68 + R65 != 0 || ((R66 + R63 != 0 || R67 + R64 + -1*R72 + -1*R70 = 0 || R72 + R70 < 1) && (R66 + R63 = 0 || R72 + R70 < 1))) && (R20 = 0 || (R103 = 0 && R104 = 0)) && (R20 = 0 || (R105 = 0 && R106 = 0)) && (R20 = 0 || (R107 = 0 && R108 = 0)) && (R20 = 0 || (R109 = 0 && R110 = 0)) && (R20 = 0 || (R111 = 0 && R112 = 0)) && (R20 = 0 || (R113 = 0 && R114 = 0)) && (R20 = 0 || (R115 = 0 && R116 = 0)) && (R20 = 0 || (R117 = 0 && R118 = 0)) && (R20 = 0 || (R119 = 0 && R120 = 0)) && (R68 + R65 = 0 || (R61 + R59 = 0 && R62 + R60 + -1*R72 + -1*R70 = 0)) && (R68 + R65 = 0 || (R66 + R63 = 0 && R67 + R64 + -1*R72 + -1*R70 = 0)) && (R78 + R75 = 0 || (R76 + R73 = 0 && R77 + R74 = 0)) && (R78 + R75 = 0 || (R81 + R79 = 0 && R82 + R80 = 0));
// End of Parikh automata intersection problem
