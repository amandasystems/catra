// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R13189, R13190, R13191, R13192, R13193, R13194, R13195, R13196, R13197, R13198, R13199, R13200, R13201, R13202, R13203, R13204, R13565, R13566, R13567, R13568, R13569, R13570, R13571, R13572, R13573, R13574, R13575, R13576, R13577, R13578, R13579, R13580, R13581, R13582, R13583, R13584, R13585, R13586, R13587, R13588, R13589, R13590, R13591, R13592, R13593, R13594, R13595, R13596, R13597, R13598, R13599, R13600, R13601, R13602, R13603, R13604, R13605, R13606, R13607, R13608, R13609, R13610, R13611, R13612, R13613, R13614, R13615, R13616, R13617, R13618, R13619, R13620, R13621, R13622, R13623, R13624, R13625, R13626, R13627, R13628, R13629, R13630, R13631, R13632, R13633, R13634, R13635, R13636, R13637, R13638, R13639, R13640, R13641, R13642, R13643, R13644, R13645, R13646, R13647, R13648, R13649, R13650, R13651, R13652, R13653, R13654, R13655, R13656, R13657, R13658, R13659, R13660, R13661, R13662, R13663, R13664, R13665, R13666, R13667, R13668, R13669, R13670, R13671, R13672, R13673, R13674, R13675, R13676, R13677, R13678, R13679, R13680, R13681, R13682, R13683, R13684, R13685, R13686, R13687, R13688, R13689, R13690, R13691, R13692, R13693, R13694, R13695, R13696, R13697, R13698, R13699, R13700, R13701, R13702, R13703, R13704, R13705, R13706, R13707, R13708, R13709, R13710, R13711, R13712, R13713, R13714, R13715, R13716, R13717, R13718, R13719, R13720, R13721, R13722, R13723, R13724, R13725, R13726, R13727, R13728, R13729, R13730, R13731, R13732, R13733, R13734, R13735, R13736, R13737, R13738, R13739, R13740, R13741, R13742, R13743, R13744, R14, R17, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R33, R34, R35, R36, R37, R38, R4, R49, R5, R51, R53, R54, R57, R58, R59, R6, R63, R64, R67, R68, R69, R7, R73, R74, R77, R78, R79, R80, R81, R82, R83, R84;
synchronised {  // Automata constraining P9
automaton P9_0 {
  init s0;
  s0 -> s1 [98, 98];
  accepting s1;
};
};
synchronised {  // Automata constraining P51
automaton P51_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R17 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [13, 13] { R32 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s0 [0, 65535] { R33 += 1, R34 += 1 };
  s0 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s1 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R36 += 1 };
  s0 -> s0 [0, 65535] { R35 += 1, R36 += 1 };
  s0 -> s2 [9, 13] { R36 += 1 };
  s0 -> s1 [14, 31] { R36 += 1 };
  s0 -> s2 [32, 32] { R36 += 1 };
  s0 -> s1 [33, 65535] { R36 += 1 };
  s1 -> s1 [0, 65535] { R36 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R36 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s0 [0, 65535] { R37 += 1, R38 += 1 };
  s0 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R13670 += 1 };
  s0 -> s0 [0, 65535] { R13669 += 1, R13670 += 1 };
  s0 -> s2 [66, 66] { R13670 += 1 };
  s0 -> s1 [67, 65535] { R13670 += 1 };
  s1 -> s1 [0, 64] { R13670 += 1 };
  s1 -> s2 [66, 66] { R13670 += 1 };
  s1 -> s1 [67, 65535] { R13670 += 1 };
  s2 -> s2 [0, 64] { R13670 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [66, 65535] { R13670 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R13672 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R13671 += 1, R13672 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R13672 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 65] { R13674 += 1 };
  s0 -> s0 [0, 65535] { R13673 += 1, R13674 += 1 };
  s0 -> s2 [0, 65535] { R13674 += 1, R14 += 1 };
  s0 -> s3 [66, 66] { R13674 += 1 };
  s0 -> s1 [67, 65535] { R13674 += 1 };
  s1 -> s1 [0, 65] { R13674 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [66, 66] { R13674 += 1 };
  s1 -> s1 [67, 65535] { R13674 += 1 };
  s2 -> s1 [0, 65] { R13674 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13674 += 1, R14 += 1 };
  s2 -> s3 [66, 66] { R13674 += 1 };
  s2 -> s1 [67, 65535] { R13674 += 1 };
  s3 -> s3 [0, 65535] { R13674 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R13676 += 1, R24 += 1 };
  s0 -> s2 [0, 65535] { R13676 += 1, R23 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R13675 += 1, R13676 += 1 };
  s0 -> s3 [9, 13] { R13676 += 1, R24 += 1 };
  s0 -> s1 [14, 31] { R13676 += 1, R24 += 1 };
  s0 -> s3 [32, 32] { R13676 += 1, R24 += 1 };
  s0 -> s1 [33, 65535] { R13676 += 1, R24 += 1 };
  s1 -> s5 [0, 65535] { R13676 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R13676 += 1, R24 += 1 };
  s2 -> s1 [0, 8] { R13676 += 1, R24 += 1 };
  s2 -> s2 [0, 65535] { R13676 += 1, R23 += 1, R24 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [9, 13] { R13676 += 1, R24 += 1 };
  s2 -> s1 [14, 31] { R13676 += 1, R24 += 1 };
  s2 -> s3 [32, 32] { R13676 += 1, R24 += 1 };
  s2 -> s1 [33, 65535] { R13676 += 1, R24 += 1 };
  s3 -> s1 [0, 65535] { R13676 += 1, R24 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13676 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 65535] { R13678 += 1, R25 += 1, R26 += 1 };
  s0 -> s2 [0, 65535] { R13678 += 1, R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R13677 += 1, R13678 += 1 };
  s1 -> s1 [0, 65535] { R13678 += 1, R25 += 1, R26 += 1 };
  s1 -> s2 [0, 65535] { R13678 += 1, R26 += 1, R4 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R13678 += 1 };
  s2 -> s2 [0, 65535] { R13678 += 1, R26 += 1, R4 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13678 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R13680 += 1, R28 += 1 };
  s0 -> s0 [0, 65535] { R13679 += 1, R13680 += 1 };
  s0 -> s2 [0, 65535] { R13680 += 1, R27 += 1, R28 += 1 };
  s0 -> s3 [9, 13] { R13680 += 1, R28 += 1 };
  s0 -> s1 [14, 31] { R13680 += 1, R28 += 1 };
  s0 -> s3 [32, 32] { R13680 += 1, R28 += 1 };
  s0 -> s1 [33, 65535] { R13680 += 1, R28 += 1 };
  s1 -> s1 [0, 65535] { R13680 += 1, R28 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R13680 += 1 };
  s2 -> s1 [0, 8] { R13680 += 1, R28 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13680 += 1, R27 += 1, R28 += 1 };
  s2 -> s3 [9, 13] { R13680 += 1, R28 += 1 };
  s2 -> s1 [14, 31] { R13680 += 1, R28 += 1 };
  s2 -> s3 [32, 32] { R13680 += 1, R28 += 1 };
  s2 -> s1 [33, 65535] { R13680 += 1, R28 += 1 };
  s3 -> s1 [0, 65535] { R13680 += 1, R28 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13680 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 65535] { R13682 += 1, R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R13681 += 1, R13682 += 1 };
  s0 -> s2 [0, 65535] { R13682 += 1, R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R13682 += 1, R30 += 1, R5 += 1 };
  s1 -> s4 [0, 65535] { R13682 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R13682 += 1, R30 += 1, R5 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13682 += 1, R29 += 1, R30 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13682 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s0 [0, 65535] { R13683 += 1, R13684 += 1 };
  s0 -> s1 [0, 65535] { R13684 += 1, R13590 += 1, R22 += 1 };
  s0 -> s2 [0, 65535] { R13684 += 1, R13589 += 1, R13590 += 1 };
  s1 -> s1 [0, 65535] { R13684 += 1, R13590 += 1, R22 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R13684 += 1 };
  s2 -> s1 [0, 65535] { R13684 += 1, R13590 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13684 += 1, R13589 += 1, R13590 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13684 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 65] { R13686 += 1, R13592 += 1 };
  s0 -> s0 [0, 65535] { R13685 += 1, R13686 += 1 };
  s0 -> s2 [0, 65535] { R13686 += 1, R13591 += 1, R13592 += 1 };
  s0 -> s3 [66, 66] { R13686 += 1, R13592 += 1 };
  s0 -> s4 [66, 66] { R13686 += 1, R13592 += 1 };
  s0 -> s1 [71, 65535] { R13686 += 1, R13592 += 1 };
  s1 -> s1 [0, 65] { R13686 += 1, R13592 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13686 += 1 };
  s1 -> s3 [66, 66] { R13686 += 1, R13592 += 1 };
  s1 -> s4 [66, 66] { R13686 += 1, R13592 += 1 };
  s1 -> s1 [71, 65535] { R13686 += 1, R13592 += 1 };
  s2 -> s1 [0, 65] { R13686 += 1, R13592 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13686 += 1, R13591 += 1, R13592 += 1 };
  s2 -> s3 [66, 66] { R13686 += 1, R13592 += 1 };
  s2 -> s4 [66, 66] { R13686 += 1, R13592 += 1 };
  s2 -> s1 [71, 65535] { R13686 += 1, R13592 += 1 };
  s3 -> s3 [0, 65535] { R13686 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 66] { R13686 += 1, R13592 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13686 += 1 };
  s4 -> s4 [71, 65535] { R13686 += 1, R13592 += 1 };
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 65] { R13688 += 1, R13594 += 1, R49 += 1 };
  s0 -> s0 [0, 65535] { R13687 += 1, R13688 += 1 };
  s0 -> s2 [0, 65535] { R13688 += 1, R13593 += 1, R13594 += 1 };
  s0 -> s3 [66, 66] { R13688 += 1, R13594 += 1, R49 += 1 };
  s0 -> s4 [66, 66] { R13688 += 1, R13594 += 1, R49 += 1 };
  s0 -> s1 [67, 65535] { R13688 += 1, R13594 += 1, R49 += 1 };
  s1 -> s1 [0, 65] { R13688 += 1, R13594 += 1, R49 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R13688 += 1 };
  s1 -> s3 [66, 66] { R13688 += 1, R13594 += 1, R49 += 1 };
  s1 -> s4 [66, 66] { R13688 += 1, R13594 += 1, R49 += 1 };
  s1 -> s1 [67, 65535] { R13688 += 1, R13594 += 1, R49 += 1 };
  s2 -> s1 [0, 65] { R13688 += 1, R13594 += 1, R49 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R13688 += 1, R13593 += 1, R13594 += 1 };
  s2 -> s3 [66, 66] { R13688 += 1, R13594 += 1, R49 += 1 };
  s2 -> s4 [66, 66] { R13688 += 1, R13594 += 1, R49 += 1 };
  s2 -> s1 [67, 65535] { R13688 += 1, R13594 += 1, R49 += 1 };
  s3 -> s3 [0, 65535] { R13688 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R13688 += 1, R13594 += 1, R49 += 1 };
  s4 -> s5 [0, 65535] { R13688 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R13688 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 65] { R13690 += 1, R13596 += 1, R51 += 1 };
  s0 -> s2 [0, 65535] { R13690 += 1, R13595 += 1, R13596 += 1 };
  s0 -> s0 [0, 65535] { R13689 += 1, R13690 += 1 };
  s0 -> s3 [66, 66] { R13690 += 1, R13596 += 1, R51 += 1 };
  s0 -> s4 [66, 66] { R13690 += 1, R13596 += 1, R51 += 1 };
  s0 -> s1 [67, 65535] { R13690 += 1, R13596 += 1, R51 += 1 };
  s1 -> s1 [0, 65] { R13690 += 1, R13596 += 1, R51 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13690 += 1 };
  s1 -> s3 [66, 66] { R13690 += 1, R13596 += 1, R51 += 1 };
  s1 -> s4 [66, 66] { R13690 += 1, R13596 += 1, R51 += 1 };
  s1 -> s1 [67, 65535] { R13690 += 1, R13596 += 1, R51 += 1 };
  s2 -> s1 [0, 65] { R13690 += 1, R13596 += 1, R51 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13690 += 1, R13595 += 1, R13596 += 1 };
  s2 -> s3 [66, 66] { R13690 += 1, R13596 += 1, R51 += 1 };
  s2 -> s4 [66, 66] { R13690 += 1, R13596 += 1, R51 += 1 };
  s2 -> s1 [67, 65535] { R13690 += 1, R13596 += 1, R51 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R13690 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R13690 += 1 };
  s4 -> s4 [0, 65535] { R13690 += 1, R13596 += 1, R51 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13690 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65] { R13692 += 1, R13598 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R13691 += 1, R13692 += 1 };
  s0 -> s2 [0, 65535] { R13692 += 1, R13597 += 1, R13598 += 1 };
  s0 -> s3 [66, 66] { R13692 += 1, R13598 += 1, R53 += 1, R54 += 1 };
  s0 -> s4 [66, 66] { R13692 += 1, R13598 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [67, 65535] { R13692 += 1, R13598 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65] { R13692 += 1, R13598 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535] { R13692 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [66, 66] { R13692 += 1, R13598 += 1, R53 += 1, R54 += 1 };
  s1 -> s4 [66, 66] { R13692 += 1, R13598 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [67, 65535] { R13692 += 1, R13598 += 1, R53 += 1, R54 += 1 };
  s2 -> s1 [0, 65] { R13692 += 1, R13598 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535] { R13692 += 1, R13597 += 1, R13598 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [66, 66] { R13692 += 1, R13598 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [66, 66] { R13692 += 1, R13598 += 1, R53 += 1, R54 += 1 };
  s2 -> s1 [67, 65535] { R13692 += 1, R13598 += 1, R53 += 1, R54 += 1 };
  s3 -> s3 [0, 65535] { R13692 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R13692 += 1 };
  s4 -> s4 [0, 65535] { R13692 += 1, R13598 += 1, R53 += 1, R54 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R13692 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 65] { R13694 += 1, R13600 += 1, R57 += 1, R58 += 1 };
  s0 -> s0 [0, 65535] { R13693 += 1, R13694 += 1 };
  s0 -> s2 [0, 65535] { R13694 += 1, R13599 += 1, R13600 += 1 };
  s0 -> s3 [66, 66] { R13694 += 1, R13600 += 1, R57 += 1, R58 += 1 };
  s0 -> s4 [66, 66] { R13694 += 1, R13600 += 1, R57 += 1, R58 += 1 };
  s0 -> s1 [67, 65535] { R13694 += 1, R13600 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [0, 65] { R13694 += 1, R13600 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [0, 65535] { R13694 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [66, 66] { R13694 += 1, R13600 += 1, R57 += 1, R58 += 1 };
  s1 -> s4 [66, 66] { R13694 += 1, R13600 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [67, 65535] { R13694 += 1, R13600 += 1, R57 += 1, R58 += 1 };
  s2 -> s1 [0, 65] { R13694 += 1, R13600 += 1, R57 += 1, R58 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R13694 += 1, R13599 += 1, R13600 += 1 };
  s2 -> s3 [66, 66] { R13694 += 1, R13600 += 1, R57 += 1, R58 += 1 };
  s2 -> s4 [66, 66] { R13694 += 1, R13600 += 1, R57 += 1, R58 += 1 };
  s2 -> s1 [67, 65535] { R13694 += 1, R13600 += 1, R57 += 1, R58 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R13694 += 1 };
  s4 -> s5 [0, 65535] { R13694 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R13694 += 1, R13600 += 1, R57 += 1, R58 += 1 };
  s5 -> s5 [0, 65535] { R13694 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 65] { R13696 += 1, R13602 += 1, R63 += 1, R64 += 1 };
  s0 -> s2 [0, 65535] { R13696 += 1, R13601 += 1, R13602 += 1 };
  s0 -> s0 [0, 65535] { R13695 += 1, R13696 += 1 };
  s0 -> s3 [66, 66] { R13696 += 1, R13602 += 1, R63 += 1, R64 += 1 };
  s0 -> s4 [66, 66] { R13696 += 1, R13602 += 1, R63 += 1, R64 += 1 };
  s0 -> s1 [67, 65535] { R13696 += 1, R13602 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [0, 65] { R13696 += 1, R13602 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [0, 65535] { R13696 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R13696 += 1, R13602 += 1, R63 += 1, R64 += 1 };
  s1 -> s4 [66, 66] { R13696 += 1, R13602 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [67, 65535] { R13696 += 1, R13602 += 1, R63 += 1, R64 += 1 };
  s2 -> s1 [0, 65] { R13696 += 1, R13602 += 1, R63 += 1, R64 += 1 };
  s2 -> s2 [0, 65535] { R13696 += 1, R13601 += 1, R13602 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R13696 += 1, R13602 += 1, R63 += 1, R64 += 1 };
  s2 -> s4 [66, 66] { R13696 += 1, R13602 += 1, R63 += 1, R64 += 1 };
  s2 -> s1 [67, 65535] { R13696 += 1, R13602 += 1, R63 += 1, R64 += 1 };
  s3 -> s3 [0, 65535] { R13696 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13696 += 1, R13602 += 1, R63 += 1, R64 += 1 };
  s4 -> s6 [0, 65535] { R13696 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13696 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65] { R13698 += 1, R13604 += 1, R67 += 1, R68 += 1 };
  s0 -> s2 [0, 65535] { R13698 += 1, R13603 += 1, R13604 += 1 };
  s0 -> s0 [0, 65535] { R13697 += 1, R13698 += 1 };
  s0 -> s3 [66, 66] { R13698 += 1, R13604 += 1, R67 += 1, R68 += 1 };
  s0 -> s4 [66, 66] { R13698 += 1, R13604 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [67, 65535] { R13698 += 1, R13604 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65] { R13698 += 1, R13604 += 1, R67 += 1, R68 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13698 += 1 };
  s1 -> s3 [66, 66] { R13698 += 1, R13604 += 1, R67 += 1, R68 += 1 };
  s1 -> s4 [66, 66] { R13698 += 1, R13604 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [67, 65535] { R13698 += 1, R13604 += 1, R67 += 1, R68 += 1 };
  s2 -> s1 [0, 65] { R13698 += 1, R13604 += 1, R67 += 1, R68 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13698 += 1, R13603 += 1, R13604 += 1 };
  s2 -> s3 [66, 66] { R13698 += 1, R13604 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [66, 66] { R13698 += 1, R13604 += 1, R67 += 1, R68 += 1 };
  s2 -> s1 [67, 65535] { R13698 += 1, R13604 += 1, R67 += 1, R68 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R13698 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R13698 += 1 };
  s4 -> s4 [0, 65535] { R13698 += 1, R13604 += 1, R67 += 1, R68 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13698 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 65] { R13700 += 1, R13606 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R13699 += 1, R13700 += 1 };
  s0 -> s2 [0, 65535] { R13700 += 1, R13605 += 1, R13606 += 1 };
  s0 -> s3 [66, 66] { R13700 += 1, R13606 += 1, R73 += 1, R74 += 1 };
  s0 -> s4 [66, 66] { R13700 += 1, R13606 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [67, 65535] { R13700 += 1, R13606 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65] { R13700 += 1, R13606 += 1, R73 += 1, R74 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13700 += 1 };
  s1 -> s3 [66, 66] { R13700 += 1, R13606 += 1, R73 += 1, R74 += 1 };
  s1 -> s4 [66, 66] { R13700 += 1, R13606 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [67, 65535] { R13700 += 1, R13606 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [0, 65] { R13700 += 1, R13606 += 1, R73 += 1, R74 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13700 += 1, R13605 += 1, R13606 += 1 };
  s2 -> s3 [66, 66] { R13700 += 1, R13606 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [66, 66] { R13700 += 1, R13606 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [67, 65535] { R13700 += 1, R13606 += 1, R73 += 1, R74 += 1 };
  s3 -> s3 [0, 65535] { R13700 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13700 += 1, R13606 += 1, R73 += 1, R74 += 1 };
  s4 -> s6 [0, 65535] { R13700 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13700 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65] { R13702 += 1, R13626 += 1 };
  s0 -> s2 [0, 65535] { R13702 += 1, R13625 += 1, R13626 += 1 };
  s0 -> s0 [0, 65535] { R13701 += 1, R13702 += 1 };
  s0 -> s3 [66, 66] { R13702 += 1, R13626 += 1 };
  s0 -> s1 [67, 65535] { R13702 += 1, R13626 += 1 };
  s1 -> s1 [0, 65] { R13702 += 1, R13626 += 1 };
  s1 -> s3 [66, 66] { R13702 += 1, R13626 += 1 };
  s1 -> s1 [67, 65535] { R13702 += 1, R13626 += 1 };
  s2 -> s1 [0, 65] { R13702 += 1, R13626 += 1 };
  s2 -> s2 [0, 65535] { R13702 += 1, R13625 += 1, R13626 += 1 };
  s2 -> s3 [66, 66] { R13702 += 1, R13626 += 1 };
  s2 -> s1 [67, 65535] { R13702 += 1, R13626 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R13702 += 1 };
  s3 -> s3 [0, 65535] { R13702 += 1, R13626 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13702 += 1 };
  accepting s3, s4, s5;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 65535] { R13704 += 1, R13627 += 1, R13628 += 1 };
  s0 -> s2 [0, 65535] { R13704 += 1, R13628 += 1, R1 += 1 };
  s0 -> s0 [0, 65535] { R13703 += 1, R13704 += 1 };
  s1 -> s1 [0, 65535] { R13704 += 1, R13627 += 1, R13628 += 1 };
  s1 -> s2 [0, 65535] { R13704 += 1, R13628 += 1, R1 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13704 += 1, R13628 += 1, R1 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R13704 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13704 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65] { R13706 += 1, R13630 += 1 };
  s0 -> s0 [0, 65535] { R13705 += 1, R13706 += 1 };
  s0 -> s2 [0, 65535] { R13706 += 1, R13630 += 1, R11 += 1 };
  s0 -> s3 [0, 65535] { R13706 += 1, R13629 += 1, R13630 += 1 };
  s0 -> s4 [66, 66] { R13706 += 1, R13630 += 1 };
  s0 -> s1 [67, 65535] { R13706 += 1, R13630 += 1 };
  s1 -> s1 [0, 65] { R13706 += 1, R13630 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13706 += 1 };
  s1 -> s4 [66, 66] { R13706 += 1, R13630 += 1 };
  s1 -> s1 [67, 65535] { R13706 += 1, R13630 += 1 };
  s2 -> s1 [0, 65] { R13706 += 1, R13630 += 1 };
  s2 -> s6 [0, 65535] { R13706 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13706 += 1, R13630 += 1, R11 += 1 };
  s2 -> s4 [66, 66] { R13706 += 1, R13630 += 1 };
  s2 -> s1 [67, 65535] { R13706 += 1, R13630 += 1 };
  s3 -> s1 [0, 65] { R13706 += 1, R13630 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R13706 += 1, R13630 += 1, R11 += 1 };
  s3 -> s3 [0, 65535] { R13706 += 1, R13629 += 1, R13630 += 1 };
  s3 -> s4 [66, 66] { R13706 += 1, R13630 += 1 };
  s3 -> s1 [67, 65535] { R13706 += 1, R13630 += 1 };
  s4 -> s4 [0, 65535] { R13706 += 1, R13630 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13706 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s5, s2, s6, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65] { R13708 += 1, R13632 += 1, R13570 += 1 };
  s0 -> s2 [0, 65535] { R13708 += 1, R13631 += 1, R13632 += 1 };
  s0 -> s0 [0, 65535] { R13707 += 1, R13708 += 1 };
  s0 -> s3 [0, 65535] { R13708 += 1, R13632 += 1, R13569 += 1, R13570 += 1 };
  s0 -> s1 [67, 65535] { R13708 += 1, R13632 += 1, R13570 += 1 };
  s1 -> s1 [0, 65] { R13708 += 1, R13632 += 1, R13570 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R13708 += 1 };
  s1 -> s1 [0, 65535] { R13708 += 1, R13632 += 1 };
  s1 -> s1 [67, 65535] { R13708 += 1, R13632 += 1, R13570 += 1 };
  s2 -> s1 [0, 65] { R13708 += 1, R13632 += 1, R13570 += 1 };
  s2 -> s2 [0, 65535] { R13708 += 1, R13631 += 1, R13632 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R13708 += 1, R13632 += 1, R13569 += 1, R13570 += 1 };
  s2 -> s1 [67, 65535] { R13708 += 1, R13632 += 1, R13570 += 1 };
  s3 -> s1 [0, 65] { R13708 += 1, R13632 += 1, R13570 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13708 += 1, R13632 += 1, R13569 += 1, R13570 += 1 };
  s3 -> s5 [0, 65535] { R13708 += 1 };
  s3 -> s1 [67, 65535] { R13708 += 1, R13632 += 1, R13570 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13708 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 65535] { R13710 += 1, R13634 += 1, R13572 += 1, R20 += 1 };
  s0 -> s0 [0, 65535] { R13709 += 1, R13710 += 1 };
  s0 -> s2 [0, 65535] { R13710 += 1, R13633 += 1, R13634 += 1 };
  s0 -> s3 [0, 65535] { R13710 += 1, R13634 += 1, R13571 += 1, R13572 += 1 };
  s1 -> s1 [0, 65535] { R13710 += 1, R13634 += 1, R13572 += 1, R20 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R13710 += 1 };
  s1 -> s6 [0, 65535] { R13710 += 1, R13634 += 1 };
  s2 -> s1 [0, 65535] { R13710 += 1, R13634 += 1, R13572 += 1, R20 += 1 };
  s2 -> s2 [0, 65535] { R13710 += 1, R13633 += 1, R13634 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R13710 += 1, R13634 += 1, R13571 += 1, R13572 += 1 };
  s3 -> s1 [0, 65535] { R13710 += 1, R13634 += 1, R13572 += 1, R20 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R13710 += 1 };
  s3 -> s3 [0, 65535] { R13710 += 1, R13634 += 1, R13571 += 1, R13572 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13710 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R13710 += 1 };
  s6 -> s6 [0, 65535] { R13710 += 1, R13634 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 66] { R13712 += 1, R13636 += 1, R13574 += 1 };
  s0 -> s2 [0, 65535] { R13712 += 1, R13635 += 1, R13636 += 1 };
  s0 -> s0 [0, 65535] { R13711 += 1, R13712 += 1 };
  s0 -> s3 [0, 65535] { R13712 += 1, R13636 += 1, R13573 += 1, R13574 += 1 };
  s0 -> s1 [70, 65535] { R13712 += 1, R13636 += 1, R13574 += 1 };
  s1 -> s1 [0, 66] { R13712 += 1, R13636 += 1, R13574 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R13712 += 1, R13636 += 1 };
  s1 -> s5 [0, 65535] { R13712 += 1 };
  s1 -> s1 [70, 65535] { R13712 += 1, R13636 += 1, R13574 += 1 };
  s2 -> s1 [0, 66] { R13712 += 1, R13636 += 1, R13574 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13712 += 1, R13635 += 1, R13636 += 1 };
  s2 -> s3 [0, 65535] { R13712 += 1, R13636 += 1, R13573 += 1, R13574 += 1 };
  s2 -> s1 [70, 65535] { R13712 += 1, R13636 += 1, R13574 += 1 };
  s3 -> s1 [0, 66] { R13712 += 1, R13636 += 1, R13574 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13712 += 1, R13636 += 1, R13573 += 1, R13574 += 1 };
  s3 -> s5 [0, 65535] { R13712 += 1 };
  s3 -> s1 [70, 65535] { R13712 += 1, R13636 += 1, R13574 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13712 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R13714 += 1, R13638 += 1, R13576 += 1, R78 += 1 };
  s0 -> s2 [0, 65535] { R13714 += 1, R13638 += 1, R13575 += 1, R13576 += 1 };
  s0 -> s0 [0, 65535] { R13713 += 1, R13714 += 1 };
  s0 -> s3 [0, 65535] { R13714 += 1, R13637 += 1, R13638 += 1 };
  s1 -> s6 [0, 65535] { R13714 += 1, R13638 += 1 };
  s1 -> s1 [0, 65535] { R13714 += 1, R13638 += 1, R13576 += 1, R78 += 1 };
  s1 -> s5 [0, 65535] { R13714 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R13714 += 1, R13638 += 1, R13576 += 1, R78 += 1 };
  s2 -> s2 [0, 65535] { R13714 += 1, R13638 += 1, R13575 += 1, R13576 += 1 };
  s2 -> s5 [0, 65535] { R13714 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R13714 += 1, R13638 += 1, R13576 += 1, R78 += 1 };
  s3 -> s2 [0, 65535] { R13714 += 1, R13638 += 1, R13575 += 1, R13576 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13714 += 1, R13637 += 1, R13638 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13714 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R13714 += 1, R13638 += 1 };
  s6 -> s5 [0, 65535] { R13714 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 69] { R13716 += 1, R13640 += 1, R13578 += 1 };
  s0 -> s2 [0, 65535] { R13716 += 1, R13640 += 1, R13578 += 1, R80 += 1 };
  s0 -> s0 [0, 65535] { R13715 += 1, R13716 += 1 };
  s0 -> s3 [0, 65535] { R13716 += 1, R13640 += 1, R13577 += 1, R13578 += 1 };
  s0 -> s4 [0, 65535] { R13716 += 1, R13639 += 1, R13640 += 1 };
  s0 -> s1 [71, 65535] { R13716 += 1, R13640 += 1, R13578 += 1 };
  s1 -> s1 [0, 69] { R13716 += 1, R13640 += 1, R13578 += 1 };
  s1 -> s6 [0, 65535] { R13716 += 1 };
  s1 -> s1 [0, 65535] { R13716 += 1, R13640 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [71, 65535] { R13716 += 1, R13640 += 1, R13578 += 1 };
  s2 -> s1 [0, 69] { R13716 += 1, R13640 += 1, R13578 += 1 };
  s2 -> s6 [0, 65535] { R13716 += 1 };
  s2 -> s2 [0, 65535] { R13716 += 1, R13640 += 1, R13578 += 1, R80 += 1 };
  s2 -> s7 [0, 65535] { R13716 += 1, R13640 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [71, 65535] { R13716 += 1, R13640 += 1, R13578 += 1 };
  s3 -> s1 [0, 69] { R13716 += 1, R13640 += 1, R13578 += 1 };
  s3 -> s6 [0, 65535] { R13716 += 1 };
  s3 -> s2 [0, 65535] { R13716 += 1, R13640 += 1, R13578 += 1, R80 += 1 };
  s3 -> s3 [0, 65535] { R13716 += 1, R13640 += 1, R13577 += 1, R13578 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [71, 65535] { R13716 += 1, R13640 += 1, R13578 += 1 };
  s4 -> s1 [0, 69] { R13716 += 1, R13640 += 1, R13578 += 1 };
  s4 -> s2 [0, 65535] { R13716 += 1, R13640 += 1, R13578 += 1, R80 += 1 };
  s4 -> s3 [0, 65535] { R13716 += 1, R13640 += 1, R13577 += 1, R13578 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13716 += 1, R13639 += 1, R13640 += 1 };
  s4 -> s1 [71, 65535] { R13716 += 1, R13640 += 1, R13578 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13716 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R13716 += 1 };
  s7 -> s7 [0, 65535] { R13716 += 1, R13640 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R13718 += 1, R13642 += 1, R13580 += 1, R84 += 1 };
  s0 -> s2 [0, 65535] { R13718 += 1, R13641 += 1, R13642 += 1 };
  s0 -> s3 [0, 65535] { R13718 += 1, R13642 += 1, R13580 += 1, R83 += 1, R84 += 1 };
  s0 -> s0 [0, 65535] { R13717 += 1, R13718 += 1 };
  s0 -> s4 [0, 65535] { R13718 += 1, R13642 += 1, R13579 += 1, R13580 += 1 };
  s0 -> s1 [71, 65535] { R13718 += 1, R13642 += 1, R13580 += 1, R84 += 1 };
  s1 -> s1 [0, 69] { R13718 += 1, R13642 += 1, R13580 += 1, R84 += 1 };
  s1 -> s5 [0, 65535] { R13718 += 1 };
  s1 -> s1 [0, 65535] { R13718 += 1, R13642 += 1, R13580 += 1 };
  s1 -> s7 [0, 65535] { R13718 += 1, R13642 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [71, 65535] { R13718 += 1, R13642 += 1, R13580 += 1, R84 += 1 };
  s2 -> s1 [0, 69] { R13718 += 1, R13642 += 1, R13580 += 1, R84 += 1 };
  s2 -> s2 [0, 65535] { R13718 += 1, R13641 += 1, R13642 += 1 };
  s2 -> s3 [0, 65535] { R13718 += 1, R13642 += 1, R13580 += 1, R83 += 1, R84 += 1 };
  s2 -> s4 [0, 65535] { R13718 += 1, R13642 += 1, R13579 += 1, R13580 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [71, 65535] { R13718 += 1, R13642 += 1, R13580 += 1, R84 += 1 };
  s3 -> s1 [0, 69] { R13718 += 1, R13642 += 1, R13580 += 1, R84 += 1 };
  s3 -> s5 [0, 65535] { R13718 += 1 };
  s3 -> s3 [0, 65535] { R13718 += 1, R13642 += 1, R13580 += 1, R83 += 1, R84 += 1 };
  s3 -> s7 [0, 65535] { R13718 += 1, R13642 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [71, 65535] { R13718 += 1, R13642 += 1, R13580 += 1, R84 += 1 };
  s4 -> s1 [0, 69] { R13718 += 1, R13642 += 1, R13580 += 1, R84 += 1 };
  s4 -> s5 [0, 65535] { R13718 += 1 };
  s4 -> s3 [0, 65535] { R13718 += 1, R13642 += 1, R13580 += 1, R83 += 1, R84 += 1 };
  s4 -> s4 [0, 65535] { R13718 += 1, R13642 += 1, R13579 += 1, R13580 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s1 [71, 65535] { R13718 += 1, R13642 += 1, R13580 += 1, R84 += 1 };
  s5 -> s5 [0, 65535] { R13718 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R13718 += 1 };
  s7 -> s7 [0, 65535] { R13718 += 1, R13642 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R13720 += 1, R13644 += 1, R13581 += 1, R13582 += 1 };
  s0 -> s2 [0, 65535] { R13720 += 1, R13643 += 1, R13644 += 1 };
  s0 -> s0 [0, 65535] { R13719 += 1, R13720 += 1 };
  s0 -> s3 [0, 65535] { R13720 += 1, R13644 += 1, R13582 += 1 };
  s1 -> s1 [0, 65535] { R13720 += 1, R13644 += 1, R13581 += 1, R13582 += 1 };
  s1 -> s4 [0, 65535] { R13720 += 1 };
  s1 -> s3 [0, 65535] { R13720 += 1, R13644 += 1, R13582 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s1 [0, 65535] { R13720 += 1, R13644 += 1, R13581 += 1, R13582 += 1 };
  s2 -> s2 [0, 65535] { R13720 += 1, R13643 += 1, R13644 += 1 };
  s2 -> s3 [0, 65535] { R13720 += 1, R13644 += 1, R13582 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R13720 += 1 };
  s3 -> s5 [0, 65535] { R13720 += 1, R13644 += 1 };
  s3 -> s3 [0, 65535] { R13720 += 1, R13644 += 1, R13582 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R13720 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s4 [0, 65535] { R13720 += 1 };
  s5 -> s5 [0, 65535] { R13720 += 1, R13644 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 70] { R13722 += 1, R13646 += 1, R13584 += 1, R13198 += 1 };
  s0 -> s2 [0, 65535] { R13722 += 1, R13646 += 1, R13583 += 1, R13584 += 1 };
  s0 -> s1 [0, 65535] { R13722 += 1, R13646 += 1, R13584 += 1 };
  s0 -> s0 [0, 65535] { R13721 += 1, R13722 += 1 };
  s0 -> s3 [0, 65535] { R13722 += 1, R13645 += 1, R13646 += 1 };
  s0 -> s1 [72, 65535] { R13722 += 1, R13646 += 1, R13584 += 1, R13198 += 1 };
  s1 -> s1 [0, 70] { R13722 += 1, R13646 += 1, R13584 += 1, R13198 += 1 };
  s1 -> s5 [0, 65535] { R13722 += 1 };
  s1 -> s6 [0, 65535] { R13722 += 1, R13646 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R13722 += 1, R13646 += 1, R13584 += 1 };
  s1 -> s1 [72, 65535] { R13722 += 1, R13646 += 1, R13584 += 1, R13198 += 1 };
  s2 -> s1 [0, 70] { R13722 += 1, R13646 += 1, R13584 += 1, R13198 += 1 };
  s2 -> s5 [0, 65535] { R13722 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13722 += 1, R13646 += 1, R13583 += 1, R13584 += 1 };
  s2 -> s1 [0, 65535] { R13722 += 1, R13646 += 1, R13584 += 1 };
  s2 -> s1 [72, 65535] { R13722 += 1, R13646 += 1, R13584 += 1, R13198 += 1 };
  s3 -> s1 [0, 70] { R13722 += 1, R13646 += 1, R13584 += 1, R13198 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R13722 += 1, R13646 += 1, R13583 += 1, R13584 += 1 };
  s3 -> s1 [0, 65535] { R13722 += 1, R13646 += 1, R13584 += 1 };
  s3 -> s3 [0, 65535] { R13722 += 1, R13645 += 1, R13646 += 1 };
  s3 -> s1 [72, 65535] { R13722 += 1, R13646 += 1, R13584 += 1, R13198 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13722 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R13722 += 1 };
  s6 -> s6 [0, 65535] { R13722 += 1, R13646 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 65535] { R13724 += 1, R13648 += 1, R13585 += 1, R13586 += 1 };
  s0 -> s0 [0, 65535] { R13723 += 1, R13724 += 1 };
  s0 -> s2 [0, 65535] { R13724 += 1, R13648 += 1, R13586 += 1, R13202 += 1, R13203 += 1 };
  s0 -> s3 [0, 65535] { R13724 += 1, R13647 += 1, R13648 += 1 };
  s0 -> s4 [0, 65535] { R13724 += 1, R13648 += 1, R13586 += 1, R13203 += 1, R13204 += 1 };
  s1 -> s1 [0, 65535] { R13724 += 1, R13648 += 1, R13585 += 1, R13586 += 1 };
  s1 -> s7 [0, 65535] { R13724 += 1 };
  s1 -> s2 [0, 65535] { R13724 += 1, R13648 += 1, R13586 += 1, R13202 += 1, R13203 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [0, 65535] { R13724 += 1, R13648 += 1, R13586 += 1, R13203 += 1, R13204 += 1 };
  s2 -> s5 [0, 65535] { R13724 += 1, R13648 += 1 };
  s2 -> s7 [0, 65535] { R13724 += 1 };
  s2 -> s2 [0, 65535] { R13724 += 1, R13648 += 1, R13586 += 1, R13202 += 1, R13203 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [0, 65535] { R13724 += 1, R13648 += 1, R13586 += 1, R13203 += 1, R13204 += 1 };
  s3 -> s1 [0, 65535] { R13724 += 1, R13648 += 1, R13585 += 1, R13586 += 1 };
  s3 -> s2 [0, 65535] { R13724 += 1, R13648 += 1, R13586 += 1, R13202 += 1, R13203 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s3 [0, 65535] { R13724 += 1, R13647 += 1, R13648 += 1 };
  s3 -> s4 [0, 65535] { R13724 += 1, R13648 += 1, R13586 += 1, R13203 += 1, R13204 += 1 };
  s4 -> s5 [0, 65535] { R13724 += 1, R13648 += 1 };
  s4 -> s6 [0, 65535] { R13724 += 1, R13648 += 1, R13586 += 1 };
  s4 -> s7 [0, 65535] { R13724 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [0, 65535] { R13724 += 1, R13648 += 1, R13586 += 1, R13203 += 1, R13204 += 1 };
  s5 -> s5 [0, 65535] { R13724 += 1, R13648 += 1 };
  s5 -> s7 [0, 65535] { R13724 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s5 [0, 65535] { R13724 += 1, R13648 += 1 };
  s6 -> s6 [0, 65535] { R13724 += 1, R13648 += 1, R13586 += 1 };
  s6 -> s7 [0, 65535] { R13724 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R13724 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 70] { R13726 += 1, R13650 += 1, R13588 += 1, R13568 += 1 };
  s0 -> s0 [0, 65535] { R13725 += 1, R13726 += 1 };
  s0 -> s2 [0, 65535] { R13726 += 1, R13649 += 1, R13650 += 1 };
  s0 -> s1 [0, 65535] { R13726 += 1, R13650 += 1, R13588 += 1 };
  s0 -> s3 [0, 65535] { R13726 += 1, R13650 += 1, R13587 += 1, R13588 += 1 };
  s0 -> s1 [73, 65535] { R13726 += 1, R13650 += 1, R13588 += 1, R13568 += 1 };
  s1 -> s1 [0, 70] { R13726 += 1, R13650 += 1, R13588 += 1, R13568 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R13726 += 1, R13650 += 1 };
  s1 -> s5 [0, 65535] { R13726 += 1 };
  s1 -> s1 [0, 65535] { R13726 += 1, R13650 += 1, R13588 += 1 };
  s1 -> s1 [73, 65535] { R13726 += 1, R13650 += 1, R13588 += 1, R13568 += 1 };
  s2 -> s1 [0, 70] { R13726 += 1, R13650 += 1, R13588 += 1, R13568 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13726 += 1, R13649 += 1, R13650 += 1 };
  s2 -> s1 [0, 65535] { R13726 += 1, R13650 += 1, R13588 += 1 };
  s2 -> s3 [0, 65535] { R13726 += 1, R13650 += 1, R13587 += 1, R13588 += 1 };
  s2 -> s1 [73, 65535] { R13726 += 1, R13650 += 1, R13588 += 1, R13568 += 1 };
  s3 -> s1 [0, 70] { R13726 += 1, R13650 += 1, R13588 += 1, R13568 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R13726 += 1 };
  s3 -> s1 [0, 65535] { R13726 += 1, R13650 += 1, R13588 += 1 };
  s3 -> s3 [0, 65535] { R13726 += 1, R13650 += 1, R13587 += 1, R13588 += 1 };
  s3 -> s1 [73, 65535] { R13726 += 1, R13650 += 1, R13588 += 1, R13568 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13726 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R13726 += 1, R13650 += 1 };
  s6 -> s5 [0, 65535] { R13726 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R13728 += 1, R13652 += 1, R13608 += 1, R21 += 1 };
  s0 -> s2 [0, 65535] { R13728 += 1, R13652 += 1, R13607 += 1, R13608 += 1 };
  s0 -> s3 [0, 65535] { R13728 += 1, R13651 += 1, R13652 += 1 };
  s0 -> s0 [0, 65535] { R13727 += 1, R13728 += 1 };
  s1 -> s5 [0, 65535] { R13728 += 1 };
  s1 -> s1 [0, 65535] { R13728 += 1, R13652 += 1, R13608 += 1, R21 += 1 };
  s1 -> s6 [0, 65535] { R13728 += 1, R13652 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R13728 += 1 };
  s2 -> s1 [0, 65535] { R13728 += 1, R13652 += 1, R13608 += 1, R21 += 1 };
  s2 -> s2 [0, 65535] { R13728 += 1, R13652 += 1, R13607 += 1, R13608 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R13728 += 1, R13652 += 1, R13608 += 1, R21 += 1 };
  s3 -> s2 [0, 65535] { R13728 += 1, R13652 += 1, R13607 += 1, R13608 += 1 };
  s3 -> s3 [0, 65535] { R13728 += 1, R13651 += 1, R13652 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13728 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R13728 += 1 };
  s6 -> s6 [0, 65535] { R13728 += 1, R13652 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 65] { R13730 += 1, R13654 += 1, R13610 += 1 };
  s0 -> s2 [0, 65535] { R13730 += 1, R13653 += 1, R13654 += 1 };
  s0 -> s0 [0, 65535] { R13729 += 1, R13730 += 1 };
  s0 -> s3 [0, 65535] { R13730 += 1, R13654 += 1, R13609 += 1, R13610 += 1 };
  s0 -> s4 [66, 66] { R13730 += 1, R13654 += 1, R13610 += 1 };
  s0 -> s5 [66, 66] { R13730 += 1, R13654 += 1, R13610 += 1 };
  s0 -> s6 [70, 70] { R13730 += 1, R13654 += 1, R13610 += 1 };
  s0 -> s1 [71, 65535] { R13730 += 1, R13654 += 1, R13610 += 1 };
  s1 -> s1 [0, 65] { R13730 += 1, R13654 += 1, R13610 += 1 };
  s1 -> s4 [66, 66] { R13730 += 1, R13654 += 1, R13610 += 1 };
  s1 -> s5 [66, 66] { R13730 += 1, R13654 += 1, R13610 += 1 };
  s1 -> s6 [70, 70] { R13730 += 1, R13654 += 1, R13610 += 1 };
  s1 -> s1 [71, 65535] { R13730 += 1, R13654 += 1, R13610 += 1 };
  s2 -> s1 [0, 65] { R13730 += 1, R13654 += 1, R13610 += 1 };
  s2 -> s2 [0, 65535] { R13730 += 1, R13653 += 1, R13654 += 1 };
  s2 -> s3 [0, 65535] { R13730 += 1, R13654 += 1, R13609 += 1, R13610 += 1 };
  s2 -> s4 [66, 66] { R13730 += 1, R13654 += 1, R13610 += 1 };
  s2 -> s5 [66, 66] { R13730 += 1, R13654 += 1, R13610 += 1 };
  s2 -> s6 [70, 70] { R13730 += 1, R13654 += 1, R13610 += 1 };
  s2 -> s1 [71, 65535] { R13730 += 1, R13654 += 1, R13610 += 1 };
  s3 -> s1 [0, 65] { R13730 += 1, R13654 += 1, R13610 += 1 };
  s3 -> s3 [0, 65535] { R13730 += 1, R13654 += 1, R13609 += 1, R13610 += 1 };
  s3 -> s4 [66, 66] { R13730 += 1, R13654 += 1, R13610 += 1 };
  s3 -> s5 [66, 66] { R13730 += 1, R13654 += 1, R13610 += 1 };
  s3 -> s6 [70, 70] { R13730 += 1, R13654 += 1, R13610 += 1 };
  s3 -> s1 [71, 65535] { R13730 += 1, R13654 += 1, R13610 += 1 };
  s4 -> s4 [0, 66] { R13730 += 1, R13654 += 1, R13610 += 1 };
  s4 -> s10 [70, 70] { R13730 += 1, R13654 += 1, R13610 += 1 };
  s4 -> s4 [71, 65535] { R13730 += 1, R13654 += 1, R13610 += 1 };
  s6 -> s6 [0, 65] { R13730 += 1, R13654 += 1, R13610 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R13730 += 1, R13654 += 1 };
  s6 -> s8 [0, 65535] { R13730 += 1 };
  s6 -> s9 [66, 66] { R13730 += 1, R13654 += 1, R13610 += 1 };
  s6 -> s10 [66, 66] { R13730 += 1, R13654 += 1, R13610 += 1 };
  s6 -> s6 [70, 65535] { R13730 += 1, R13654 += 1, R13610 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R13730 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s8 [0, 65535] { R13730 += 1 };
  s9 -> s9 [0, 65535] { R13730 += 1, R13654 += 1 };
  s10 -> s10 [0, 66] { R13730 += 1, R13654 += 1, R13610 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s8 [0, 65535] { R13730 += 1 };
  s10 -> s10 [0, 65535] { R13730 += 1, R13654 += 1 };
  s10 -> s10 [70, 65535] { R13730 += 1, R13654 += 1, R13610 += 1 };
  accepting s8, s9, s6, s7, s10;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65] { R13732 += 1, R13656 += 1, R13612 += 1, R77 += 1 };
  s0 -> s2 [0, 65535] { R13732 += 1, R13656 += 1, R13611 += 1, R13612 += 1 };
  s0 -> s3 [0, 65535] { R13732 += 1, R13655 += 1, R13656 += 1 };
  s0 -> s0 [0, 65535] { R13731 += 1, R13732 += 1 };
  s0 -> s4 [66, 66] { R13732 += 1, R13656 += 1, R13612 += 1, R77 += 1 };
  s0 -> s5 [66, 66] { R13732 += 1, R13656 += 1, R13612 += 1, R77 += 1 };
  s0 -> s1 [67, 65535] { R13732 += 1, R13656 += 1, R13612 += 1, R77 += 1 };
  s1 -> s1 [0, 65] { R13732 += 1, R13656 += 1, R13612 += 1, R77 += 1 };
  s1 -> s1 [0, 65535] { R13732 += 1, R13656 += 1 };
  s1 -> s6 [0, 65535] { R13732 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [66, 66] { R13732 += 1, R13656 += 1, R13612 += 1, R77 += 1 };
  s1 -> s5 [66, 66] { R13732 += 1, R13656 += 1, R13612 += 1, R77 += 1 };
  s1 -> s1 [67, 65535] { R13732 += 1, R13656 += 1, R13612 += 1, R77 += 1 };
  s2 -> s1 [0, 65] { R13732 += 1, R13656 += 1, R13612 += 1, R77 += 1 };
  s2 -> s2 [0, 65535] { R13732 += 1, R13656 += 1, R13611 += 1, R13612 += 1 };
  s2 -> s6 [0, 65535] { R13732 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [66, 66] { R13732 += 1, R13656 += 1, R13612 += 1, R77 += 1 };
  s2 -> s5 [66, 66] { R13732 += 1, R13656 += 1, R13612 += 1, R77 += 1 };
  s2 -> s1 [67, 65535] { R13732 += 1, R13656 += 1, R13612 += 1, R77 += 1 };
  s3 -> s1 [0, 65] { R13732 += 1, R13656 += 1, R13612 += 1, R77 += 1 };
  s3 -> s2 [0, 65535] { R13732 += 1, R13656 += 1, R13611 += 1, R13612 += 1 };
  s3 -> s3 [0, 65535] { R13732 += 1, R13655 += 1, R13656 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [66, 66] { R13732 += 1, R13656 += 1, R13612 += 1, R77 += 1 };
  s3 -> s5 [66, 66] { R13732 += 1, R13656 += 1, R13612 += 1, R77 += 1 };
  s3 -> s1 [67, 65535] { R13732 += 1, R13656 += 1, R13612 += 1, R77 += 1 };
  s4 -> s8 [0, 65535] { R13732 += 1, R13656 += 1 };
  s4 -> s4 [0, 65535] { R13732 += 1, R13656 += 1, R13612 += 1, R77 += 1 };
  s4 -> s6 [0, 65535] { R13732 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s6 [0, 65535] { R13732 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R13732 += 1, R13656 += 1 };
  s6 -> s6 [0, 65535] { R13732 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R13732 += 1, R13656 += 1 };
  s8 -> s6 [0, 65535] { R13732 += 1 };
  s8 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 65] { R13734 += 1, R13658 += 1, R13614 += 1, R79 += 1 };
  s0 -> s2 [0, 65535] { R13734 += 1, R13657 += 1, R13658 += 1 };
  s0 -> s0 [0, 65535] { R13733 += 1, R13734 += 1 };
  s0 -> s3 [0, 65535] { R13734 += 1, R13658 += 1, R13613 += 1, R13614 += 1 };
  s0 -> s4 [66, 66] { R13734 += 1, R13658 += 1, R13614 += 1, R79 += 1 };
  s0 -> s5 [66, 66] { R13734 += 1, R13658 += 1, R13614 += 1, R79 += 1 };
  s0 -> s1 [67, 65535] { R13734 += 1, R13658 += 1, R13614 += 1, R79 += 1 };
  s1 -> s1 [0, 65] { R13734 += 1, R13658 += 1, R13614 += 1, R79 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R13734 += 1 };
  s1 -> s1 [0, 65535] { R13734 += 1, R13658 += 1 };
  s1 -> s4 [66, 66] { R13734 += 1, R13658 += 1, R13614 += 1, R79 += 1 };
  s1 -> s5 [66, 66] { R13734 += 1, R13658 += 1, R13614 += 1, R79 += 1 };
  s1 -> s1 [67, 65535] { R13734 += 1, R13658 += 1, R13614 += 1, R79 += 1 };
  s2 -> s1 [0, 65] { R13734 += 1, R13658 += 1, R13614 += 1, R79 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R13734 += 1, R13657 += 1, R13658 += 1 };
  s2 -> s3 [0, 65535] { R13734 += 1, R13658 += 1, R13613 += 1, R13614 += 1 };
  s2 -> s4 [66, 66] { R13734 += 1, R13658 += 1, R13614 += 1, R79 += 1 };
  s2 -> s5 [66, 66] { R13734 += 1, R13658 += 1, R13614 += 1, R79 += 1 };
  s2 -> s1 [67, 65535] { R13734 += 1, R13658 += 1, R13614 += 1, R79 += 1 };
  s3 -> s1 [0, 65] { R13734 += 1, R13658 += 1, R13614 += 1, R79 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R13734 += 1 };
  s3 -> s3 [0, 65535] { R13734 += 1, R13658 += 1, R13613 += 1, R13614 += 1 };
  s3 -> s4 [66, 66] { R13734 += 1, R13658 += 1, R13614 += 1, R79 += 1 };
  s3 -> s5 [66, 66] { R13734 += 1, R13658 += 1, R13614 += 1, R79 += 1 };
  s3 -> s1 [67, 65535] { R13734 += 1, R13658 += 1, R13614 += 1, R79 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R13734 += 1 };
  s4 -> s8 [0, 65535] { R13734 += 1, R13658 += 1 };
  s4 -> s4 [0, 65535] { R13734 += 1, R13658 += 1, R13614 += 1, R79 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R13734 += 1 };
  s5 -> s5 [0, 65535] { R13734 += 1, R13658 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R13734 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R13734 += 1 };
  s8 -> s8 [0, 65535] { R13734 += 1, R13658 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65] { R13736 += 1, R13660 += 1, R13616 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R13735 += 1, R13736 += 1 };
  s0 -> s2 [0, 65535] { R13736 += 1, R13659 += 1, R13660 += 1 };
  s0 -> s3 [0, 65535] { R13736 += 1, R13660 += 1, R13615 += 1, R13616 += 1 };
  s0 -> s4 [66, 66] { R13736 += 1, R13660 += 1, R13616 += 1, R81 += 1, R82 += 1 };
  s0 -> s5 [66, 66] { R13736 += 1, R13660 += 1, R13616 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [67, 65535] { R13736 += 1, R13660 += 1, R13616 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65] { R13736 += 1, R13660 += 1, R13616 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535] { R13736 += 1, R13660 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R13736 += 1 };
  s1 -> s4 [66, 66] { R13736 += 1, R13660 += 1, R13616 += 1, R81 += 1, R82 += 1 };
  s1 -> s5 [66, 66] { R13736 += 1, R13660 += 1, R13616 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [67, 65535] { R13736 += 1, R13660 += 1, R13616 += 1, R81 += 1, R82 += 1 };
  s2 -> s1 [0, 65] { R13736 += 1, R13660 += 1, R13616 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535] { R13736 += 1, R13659 += 1, R13660 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R13736 += 1, R13660 += 1, R13615 += 1, R13616 += 1 };
  s2 -> s4 [66, 66] { R13736 += 1, R13660 += 1, R13616 += 1, R81 += 1, R82 += 1 };
  s2 -> s5 [66, 66] { R13736 += 1, R13660 += 1, R13616 += 1, R81 += 1, R82 += 1 };
  s2 -> s1 [67, 65535] { R13736 += 1, R13660 += 1, R13616 += 1, R81 += 1, R82 += 1 };
  s3 -> s1 [0, 65] { R13736 += 1, R13660 += 1, R13616 += 1, R81 += 1, R82 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R13736 += 1, R13660 += 1, R13615 += 1, R13616 += 1 };
  s3 -> s7 [0, 65535] { R13736 += 1 };
  s3 -> s4 [66, 66] { R13736 += 1, R13660 += 1, R13616 += 1, R81 += 1, R82 += 1 };
  s3 -> s5 [66, 66] { R13736 += 1, R13660 += 1, R13616 += 1, R81 += 1, R82 += 1 };
  s3 -> s1 [67, 65535] { R13736 += 1, R13660 += 1, R13616 += 1, R81 += 1, R82 += 1 };
  s4 -> s4 [0, 65535] { R13736 += 1, R13660 += 1, R13616 += 1, R81 += 1, R82 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s8 [0, 65535] { R13736 += 1, R13660 += 1 };
  s4 -> s7 [0, 65535] { R13736 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R13736 += 1, R13660 += 1 };
  s5 -> s7 [0, 65535] { R13736 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R13736 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R13736 += 1, R13660 += 1 };
  s8 -> s7 [0, 65535] { R13736 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 65] { R13738 += 1, R13662 += 1, R13618 += 1, R13190 += 1, R13191 += 1 };
  s0 -> s2 [0, 65] { R13738 += 1, R13662 += 1, R13618 += 1, R13189 += 1, R13190 += 1 };
  s0 -> s3 [0, 65535] { R13738 += 1, R13662 += 1, R13617 += 1, R13618 += 1 };
  s0 -> s4 [0, 65535] { R13738 += 1, R13661 += 1, R13662 += 1 };
  s0 -> s0 [0, 65535] { R13737 += 1, R13738 += 1 };
  s0 -> s5 [66, 66] { R13738 += 1, R13662 += 1, R13618 += 1, R13189 += 1, R13190 += 1 };
  s0 -> s6 [66, 66] { R13738 += 1, R13662 += 1, R13618 += 1, R13190 += 1, R13191 += 1 };
  s0 -> s7 [66, 66] { R13738 += 1, R13662 += 1, R13618 += 1, R13190 += 1, R13191 += 1 };
  s0 -> s8 [66, 66] { R13738 += 1, R13662 += 1, R13618 += 1, R13189 += 1, R13190 += 1 };
  s0 -> s1 [67, 65535] { R13738 += 1, R13662 += 1, R13618 += 1, R13190 += 1, R13191 += 1 };
  s0 -> s2 [67, 65535] { R13738 += 1, R13662 += 1, R13618 += 1, R13189 += 1, R13190 += 1 };
  s1 -> s1 [0, 65] { R13738 += 1, R13662 += 1, R13618 += 1, R13190 += 1, R13191 += 1 };
  s1 -> s13 [0, 65] { R13738 += 1, R13662 += 1, R13618 += 1 };
  s1 -> s6 [66, 66] { R13738 += 1, R13662 += 1, R13618 += 1, R13190 += 1, R13191 += 1 };
  s1 -> s7 [66, 66] { R13738 += 1, R13662 += 1, R13618 += 1, R13190 += 1, R13191 += 1 };
  s1 -> s14 [66, 66] { R13738 += 1, R13662 += 1, R13618 += 1 };
  s1 -> s9 [66, 66] { R13738 += 1, R13662 += 1, R13618 += 1 };
  s1 -> s1 [67, 65535] { R13738 += 1, R13662 += 1, R13618 += 1, R13190 += 1, R13191 += 1 };
  s1 -> s13 [67, 65535] { R13738 += 1, R13662 += 1, R13618 += 1 };
  s2 -> s1 [0, 65] { R13738 += 1, R13662 += 1, R13618 += 1, R13190 += 1, R13191 += 1 };
  s2 -> s2 [0, 65] { R13738 += 1, R13662 += 1, R13618 += 1, R13189 += 1, R13190 += 1 };
  s2 -> s5 [66, 66] { R13738 += 1, R13662 += 1, R13618 += 1, R13189 += 1, R13190 += 1 };
  s2 -> s6 [66, 66] { R13738 += 1, R13662 += 1, R13618 += 1, R13190 += 1, R13191 += 1 };
  s2 -> s7 [66, 66] { R13738 += 1, R13662 += 1, R13618 += 1, R13190 += 1, R13191 += 1 };
  s2 -> s8 [66, 66] { R13738 += 1, R13662 += 1, R13618 += 1, R13189 += 1, R13190 += 1 };
  s2 -> s1 [67, 65535] { R13738 += 1, R13662 += 1, R13618 += 1, R13190 += 1, R13191 += 1 };
  s2 -> s2 [67, 65535] { R13738 += 1, R13662 += 1, R13618 += 1, R13189 += 1, R13190 += 1 };
  s3 -> s1 [0, 65] { R13738 += 1, R13662 += 1, R13618 += 1, R13190 += 1, R13191 += 1 };
  s3 -> s2 [0, 65] { R13738 += 1, R13662 += 1, R13618 += 1, R13189 += 1, R13190 += 1 };
  s3 -> s3 [0, 65535] { R13738 += 1, R13662 += 1, R13617 += 1, R13618 += 1 };
  s3 -> s5 [66, 66] { R13738 += 1, R13662 += 1, R13618 += 1, R13189 += 1, R13190 += 1 };
  s3 -> s6 [66, 66] { R13738 += 1, R13662 += 1, R13618 += 1, R13190 += 1, R13191 += 1 };
  s3 -> s7 [66, 66] { R13738 += 1, R13662 += 1, R13618 += 1, R13190 += 1, R13191 += 1 };
  s3 -> s8 [66, 66] { R13738 += 1, R13662 += 1, R13618 += 1, R13189 += 1, R13190 += 1 };
  s3 -> s1 [67, 65535] { R13738 += 1, R13662 += 1, R13618 += 1, R13190 += 1, R13191 += 1 };
  s3 -> s2 [67, 65535] { R13738 += 1, R13662 += 1, R13618 += 1, R13189 += 1, R13190 += 1 };
  s4 -> s1 [0, 65] { R13738 += 1, R13662 += 1, R13618 += 1, R13190 += 1, R13191 += 1 };
  s4 -> s2 [0, 65] { R13738 += 1, R13662 += 1, R13618 += 1, R13189 += 1, R13190 += 1 };
  s4 -> s3 [0, 65535] { R13738 += 1, R13662 += 1, R13617 += 1, R13618 += 1 };
  s4 -> s4 [0, 65535] { R13738 += 1, R13661 += 1, R13662 += 1 };
  s4 -> s5 [66, 66] { R13738 += 1, R13662 += 1, R13618 += 1, R13189 += 1, R13190 += 1 };
  s4 -> s6 [66, 66] { R13738 += 1, R13662 += 1, R13618 += 1, R13190 += 1, R13191 += 1 };
  s4 -> s7 [66, 66] { R13738 += 1, R13662 += 1, R13618 += 1, R13190 += 1, R13191 += 1 };
  s4 -> s8 [66, 66] { R13738 += 1, R13662 += 1, R13618 += 1, R13189 += 1, R13190 += 1 };
  s4 -> s1 [67, 65535] { R13738 += 1, R13662 += 1, R13618 += 1, R13190 += 1, R13191 += 1 };
  s4 -> s2 [67, 65535] { R13738 += 1, R13662 += 1, R13618 += 1, R13189 += 1, R13190 += 1 };
  s5 -> s5 [0, 65535] { R13738 += 1, R13662 += 1, R13618 += 1, R13189 += 1, R13190 += 1 };
  s5 -> s7 [0, 65535] { R13738 += 1, R13662 += 1, R13618 += 1, R13190 += 1, R13191 += 1 };
  s7 -> s7 [0, 65535] { R13738 += 1, R13662 += 1, R13618 += 1, R13190 += 1, R13191 += 1 };
  s7 -> s9 [0, 65535] { R13738 += 1, R13662 += 1, R13618 += 1 };
  s9 -> s10 [0, 65535] { R13738 += 1, R13662 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s12 [0, 65535] { R13738 += 1 };
  s9 -> s9 [0, 65535] { R13738 += 1, R13662 += 1, R13618 += 1 };
  s10 -> s10 [0, 65535] { R13738 += 1, R13662 += 1 };
  s10 -> s11 [0, 65535];
  s10 -> s12 [0, 65535] { R13738 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R13738 += 1 };
  s13 -> s13 [0, 65] { R13738 += 1, R13662 += 1, R13618 += 1 };
  s13 -> s11 [0, 65535];
  s13 -> s12 [0, 65535] { R13738 += 1 };
  s13 -> s13 [0, 65535] { R13738 += 1, R13662 += 1 };
  s13 -> s14 [66, 66] { R13738 += 1, R13662 += 1, R13618 += 1 };
  s13 -> s9 [66, 66] { R13738 += 1, R13662 += 1, R13618 += 1 };
  s13 -> s13 [67, 65535] { R13738 += 1, R13662 += 1, R13618 += 1 };
  s14 -> s11 [0, 65535];
  s14 -> s12 [0, 65535] { R13738 += 1 };
  s14 -> s14 [0, 65535] { R13738 += 1, R13662 += 1 };
  accepting s12, s13, s9, s14, s10, s11;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 65] { R13740 += 1, R13664 += 1, R13620 += 1, R13195 += 1, R13196 += 1 };
  s0 -> s2 [0, 65] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s0 -> s3 [0, 65535] { R13740 += 1, R13664 += 1, R13619 += 1, R13620 += 1 };
  s0 -> s4 [0, 65535] { R13740 += 1, R13663 += 1, R13664 += 1 };
  s0 -> s0 [0, 65535] { R13739 += 1, R13740 += 1 };
  s0 -> s5 [66, 66] { R13740 += 1, R13664 += 1, R13620 += 1, R13195 += 1, R13196 += 1 };
  s0 -> s6 [66, 66] { R13740 += 1, R13664 += 1, R13620 += 1, R13195 += 1, R13196 += 1 };
  s0 -> s7 [66, 66] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s0 -> s8 [66, 66] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s0 -> s2 [67, 70] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s0 -> s1 [67, 65535] { R13740 += 1, R13664 += 1, R13620 += 1, R13195 += 1, R13196 += 1 };
  s0 -> s9 [72, 72] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s0 -> s2 [73, 65535] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s1 -> s1 [0, 65] { R13740 += 1, R13664 += 1, R13620 += 1, R13195 += 1, R13196 += 1 };
  s1 -> s2 [0, 65] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s1 -> s5 [66, 66] { R13740 += 1, R13664 += 1, R13620 += 1, R13195 += 1, R13196 += 1 };
  s1 -> s6 [66, 66] { R13740 += 1, R13664 += 1, R13620 += 1, R13195 += 1, R13196 += 1 };
  s1 -> s7 [66, 66] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s1 -> s8 [66, 66] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s1 -> s2 [67, 70] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s1 -> s1 [67, 65535] { R13740 += 1, R13664 += 1, R13620 += 1, R13195 += 1, R13196 += 1 };
  s1 -> s9 [72, 72] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s1 -> s2 [73, 65535] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s2 -> s2 [0, 65] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s2 -> s7 [66, 66] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s2 -> s8 [66, 66] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s2 -> s2 [67, 70] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s2 -> s9 [72, 72] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s2 -> s2 [73, 65535] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s3 -> s1 [0, 65] { R13740 += 1, R13664 += 1, R13620 += 1, R13195 += 1, R13196 += 1 };
  s3 -> s2 [0, 65] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s3 -> s3 [0, 65535] { R13740 += 1, R13664 += 1, R13619 += 1, R13620 += 1 };
  s3 -> s5 [66, 66] { R13740 += 1, R13664 += 1, R13620 += 1, R13195 += 1, R13196 += 1 };
  s3 -> s6 [66, 66] { R13740 += 1, R13664 += 1, R13620 += 1, R13195 += 1, R13196 += 1 };
  s3 -> s7 [66, 66] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s3 -> s8 [66, 66] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s3 -> s2 [67, 70] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s3 -> s1 [67, 65535] { R13740 += 1, R13664 += 1, R13620 += 1, R13195 += 1, R13196 += 1 };
  s3 -> s9 [72, 72] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s3 -> s2 [73, 65535] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s4 -> s1 [0, 65] { R13740 += 1, R13664 += 1, R13620 += 1, R13195 += 1, R13196 += 1 };
  s4 -> s2 [0, 65] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s4 -> s3 [0, 65535] { R13740 += 1, R13664 += 1, R13619 += 1, R13620 += 1 };
  s4 -> s4 [0, 65535] { R13740 += 1, R13663 += 1, R13664 += 1 };
  s4 -> s5 [66, 66] { R13740 += 1, R13664 += 1, R13620 += 1, R13195 += 1, R13196 += 1 };
  s4 -> s6 [66, 66] { R13740 += 1, R13664 += 1, R13620 += 1, R13195 += 1, R13196 += 1 };
  s4 -> s7 [66, 66] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s4 -> s8 [66, 66] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s4 -> s2 [67, 70] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s4 -> s1 [67, 65535] { R13740 += 1, R13664 += 1, R13620 += 1, R13195 += 1, R13196 += 1 };
  s4 -> s9 [72, 72] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s4 -> s2 [73, 65535] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s5 -> s7 [0, 70] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s5 -> s5 [0, 65535] { R13740 += 1, R13664 += 1, R13620 += 1, R13195 += 1, R13196 += 1 };
  s5 -> s12 [72, 72] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s5 -> s7 [73, 65535] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s7 -> s7 [0, 70] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s7 -> s12 [72, 72] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s7 -> s7 [73, 65535] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s9 -> s9 [0, 65] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s9 -> s10 [0, 65535] { R13740 += 1 };
  s9 -> s9 [0, 65535] { R13740 += 1, R13664 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s12 [66, 66] { R13740 += 1, R13664 += 1, R13620 += 1 };
  s9 -> s13 [66, 66] { R13740 += 1, R13664 += 1, R13620 += 1 };
  s9 -> s9 [67, 70] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s9 -> s9 [67, 65535] { R13740 += 1, R13664 += 1, R13620 += 1 };
  s9 -> s9 [72, 65535] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s10 -> s10 [0, 65535] { R13740 += 1 };
  s10 -> s11 [0, 65535];
  s11 -> s11 [0, 65535];
  s12 -> s12 [0, 70] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s12 -> s10 [0, 65535] { R13740 += 1 };
  s12 -> s14 [0, 65535] { R13740 += 1, R13664 += 1 };
  s12 -> s12 [0, 65535] { R13740 += 1, R13664 += 1, R13620 += 1 };
  s12 -> s11 [0, 65535];
  s12 -> s12 [72, 65535] { R13740 += 1, R13664 += 1, R13620 += 1, R13196 += 1 };
  s13 -> s10 [0, 65535] { R13740 += 1 };
  s13 -> s13 [0, 65535] { R13740 += 1, R13664 += 1 };
  s13 -> s11 [0, 65535];
  s14 -> s10 [0, 65535] { R13740 += 1 };
  s14 -> s14 [0, 65535] { R13740 += 1, R13664 += 1 };
  s14 -> s11 [0, 65535];
  accepting s12, s13, s9, s14, s10, s11;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 65] { R13742 += 1, R13666 += 1, R13622 += 1, R13199 += 1, R13200 += 1 };
  s0 -> s2 [0, 65535] { R13742 += 1, R13665 += 1, R13666 += 1 };
  s0 -> s0 [0, 65535] { R13741 += 1, R13742 += 1 };
  s0 -> s3 [0, 65535] { R13742 += 1, R13666 += 1, R13621 += 1, R13622 += 1 };
  s0 -> s4 [66, 66] { R13742 += 1, R13666 += 1, R13622 += 1, R13199 += 1, R13200 += 1 };
  s0 -> s5 [66, 66] { R13742 += 1, R13666 += 1, R13622 += 1, R13199 += 1, R13200 += 1 };
  s0 -> s1 [67, 65535] { R13742 += 1, R13666 += 1, R13622 += 1, R13199 += 1, R13200 += 1 };
  s1 -> s1 [0, 65] { R13742 += 1, R13666 += 1, R13622 += 1, R13199 += 1, R13200 += 1 };
  s1 -> s6 [0, 65535] { R13742 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R13742 += 1, R13666 += 1 };
  s1 -> s4 [66, 66] { R13742 += 1, R13666 += 1, R13622 += 1, R13199 += 1, R13200 += 1 };
  s1 -> s5 [66, 66] { R13742 += 1, R13666 += 1, R13622 += 1, R13199 += 1, R13200 += 1 };
  s1 -> s1 [67, 65535] { R13742 += 1, R13666 += 1, R13622 += 1, R13199 += 1, R13200 += 1 };
  s2 -> s1 [0, 65] { R13742 += 1, R13666 += 1, R13622 += 1, R13199 += 1, R13200 += 1 };
  s2 -> s2 [0, 65535] { R13742 += 1, R13665 += 1, R13666 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s3 [0, 65535] { R13742 += 1, R13666 += 1, R13621 += 1, R13622 += 1 };
  s2 -> s4 [66, 66] { R13742 += 1, R13666 += 1, R13622 += 1, R13199 += 1, R13200 += 1 };
  s2 -> s5 [66, 66] { R13742 += 1, R13666 += 1, R13622 += 1, R13199 += 1, R13200 += 1 };
  s2 -> s1 [67, 65535] { R13742 += 1, R13666 += 1, R13622 += 1, R13199 += 1, R13200 += 1 };
  s3 -> s1 [0, 65] { R13742 += 1, R13666 += 1, R13622 += 1, R13199 += 1, R13200 += 1 };
  s3 -> s6 [0, 65535] { R13742 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R13742 += 1, R13666 += 1, R13621 += 1, R13622 += 1 };
  s3 -> s4 [66, 66] { R13742 += 1, R13666 += 1, R13622 += 1, R13199 += 1, R13200 += 1 };
  s3 -> s5 [66, 66] { R13742 += 1, R13666 += 1, R13622 += 1, R13199 += 1, R13200 += 1 };
  s3 -> s1 [67, 65535] { R13742 += 1, R13666 += 1, R13622 += 1, R13199 += 1, R13200 += 1 };
  s4 -> s6 [0, 65535] { R13742 += 1 };
  s4 -> s4 [0, 65535] { R13742 += 1, R13666 += 1, R13622 += 1, R13199 += 1, R13200 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R13742 += 1, R13666 += 1 };
  s5 -> s6 [0, 65535] { R13742 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R13742 += 1, R13666 += 1 };
  s6 -> s6 [0, 65535] { R13742 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R13742 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R13742 += 1, R13666 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 65] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s0 -> s2 [0, 65] { R13744 += 1, R13668 += 1, R13624 += 1, R13565 += 1, R13566 += 1 };
  s0 -> s3 [0, 65535] { R13744 += 1, R13667 += 1, R13668 += 1 };
  s0 -> s0 [0, 65535] { R13743 += 1, R13744 += 1 };
  s0 -> s4 [0, 65535] { R13744 += 1, R13668 += 1, R13623 += 1, R13624 += 1 };
  s0 -> s5 [66, 66] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s0 -> s6 [66, 66] { R13744 += 1, R13668 += 1, R13624 += 1, R13565 += 1, R13566 += 1 };
  s0 -> s7 [66, 66] { R13744 += 1, R13668 += 1, R13624 += 1, R13565 += 1, R13566 += 1 };
  s0 -> s8 [66, 66] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s0 -> s1 [67, 69] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s0 -> s2 [67, 65535] { R13744 += 1, R13668 += 1, R13624 += 1, R13565 += 1, R13566 += 1 };
  s0 -> s9 [70, 70] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s0 -> s1 [73, 65535] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s1 -> s1 [0, 65] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s1 -> s5 [66, 66] { R13744 += 1, R13668 += 1, R13624 += 1 };
  s1 -> s8 [66, 66] { R13744 += 1, R13668 += 1, R13624 += 1 };
  s1 -> s1 [67, 69] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s1 -> s1 [67, 65535] { R13744 += 1, R13668 += 1, R13624 += 1 };
  s1 -> s9 [70, 70] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s1 -> s1 [73, 65535] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s2 -> s1 [0, 65] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s2 -> s2 [0, 65] { R13744 += 1, R13668 += 1, R13624 += 1, R13565 += 1, R13566 += 1 };
  s2 -> s5 [66, 66] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s2 -> s6 [66, 66] { R13744 += 1, R13668 += 1, R13624 += 1, R13565 += 1, R13566 += 1 };
  s2 -> s7 [66, 66] { R13744 += 1, R13668 += 1, R13624 += 1, R13565 += 1, R13566 += 1 };
  s2 -> s8 [66, 66] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s2 -> s1 [67, 69] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s2 -> s2 [67, 65535] { R13744 += 1, R13668 += 1, R13624 += 1, R13565 += 1, R13566 += 1 };
  s2 -> s9 [70, 70] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s2 -> s1 [73, 65535] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s3 -> s1 [0, 65] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s3 -> s2 [0, 65] { R13744 += 1, R13668 += 1, R13624 += 1, R13565 += 1, R13566 += 1 };
  s3 -> s3 [0, 65535] { R13744 += 1, R13667 += 1, R13668 += 1 };
  s3 -> s4 [0, 65535] { R13744 += 1, R13668 += 1, R13623 += 1, R13624 += 1 };
  s3 -> s5 [66, 66] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s3 -> s6 [66, 66] { R13744 += 1, R13668 += 1, R13624 += 1, R13565 += 1, R13566 += 1 };
  s3 -> s7 [66, 66] { R13744 += 1, R13668 += 1, R13624 += 1, R13565 += 1, R13566 += 1 };
  s3 -> s8 [66, 66] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s3 -> s1 [67, 69] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s3 -> s2 [67, 65535] { R13744 += 1, R13668 += 1, R13624 += 1, R13565 += 1, R13566 += 1 };
  s3 -> s9 [70, 70] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s3 -> s1 [73, 65535] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s4 -> s1 [0, 65] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s4 -> s2 [0, 65] { R13744 += 1, R13668 += 1, R13624 += 1, R13565 += 1, R13566 += 1 };
  s4 -> s4 [0, 65535] { R13744 += 1, R13668 += 1, R13623 += 1, R13624 += 1 };
  s4 -> s5 [66, 66] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s4 -> s6 [66, 66] { R13744 += 1, R13668 += 1, R13624 += 1, R13565 += 1, R13566 += 1 };
  s4 -> s7 [66, 66] { R13744 += 1, R13668 += 1, R13624 += 1, R13565 += 1, R13566 += 1 };
  s4 -> s8 [66, 66] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s4 -> s1 [67, 69] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s4 -> s2 [67, 65535] { R13744 += 1, R13668 += 1, R13624 += 1, R13565 += 1, R13566 += 1 };
  s4 -> s9 [70, 70] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s4 -> s1 [73, 65535] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s7 -> s8 [0, 69] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s7 -> s7 [0, 65535] { R13744 += 1, R13668 += 1, R13624 += 1, R13565 += 1, R13566 += 1 };
  s7 -> s13 [70, 70] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s7 -> s8 [73, 65535] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s8 -> s8 [0, 69] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s8 -> s8 [0, 65535] { R13744 += 1, R13668 += 1, R13624 += 1 };
  s8 -> s13 [70, 70] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s8 -> s8 [73, 65535] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s9 -> s9 [0, 65] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s9 -> s9 [0, 65535] { R13744 += 1, R13668 += 1 };
  s9 -> s10 [0, 65535];
  s9 -> s11 [0, 65535] { R13744 += 1 };
  s9 -> s12 [66, 66] { R13744 += 1, R13668 += 1, R13624 += 1 };
  s9 -> s13 [66, 66] { R13744 += 1, R13668 += 1, R13624 += 1 };
  s9 -> s9 [67, 70] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s9 -> s9 [67, 65535] { R13744 += 1, R13668 += 1, R13624 += 1 };
  s9 -> s9 [73, 65535] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s10 -> s10 [0, 65535];
  s11 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R13744 += 1 };
  s12 -> s10 [0, 65535];
  s12 -> s12 [0, 65535] { R13744 += 1, R13668 += 1 };
  s12 -> s11 [0, 65535] { R13744 += 1 };
  s13 -> s13 [0, 70] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s13 -> s10 [0, 65535];
  s13 -> s14 [0, 65535] { R13744 += 1, R13668 += 1 };
  s13 -> s13 [0, 65535] { R13744 += 1, R13668 += 1, R13624 += 1 };
  s13 -> s11 [0, 65535] { R13744 += 1 };
  s13 -> s13 [73, 65535] { R13744 += 1, R13668 += 1, R13624 += 1, R13566 += 1 };
  s14 -> s10 [0, 65535];
  s14 -> s14 [0, 65535] { R13744 += 1, R13668 += 1 };
  s14 -> s11 [0, 65535] { R13744 += 1 };
  accepting s12, s13, s9, s14, s10, s11;
};
};
synchronised {  // Automata constraining P37
automaton P37_0 {
  init s0;
  s0 -> s1 [9, 9];
  accepting s1;
};
};
synchronised {  // Automata constraining P38
automaton P38_0 {
  init s0;
  s0 -> s1 [10, 10];
  accepting s1;
};
};
synchronised {  // Automata constraining P36
automaton P36_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
constraint R2 = R13668 && R3 - R13744 = 1 && R23 - R13668 = -1 && R24 = R13668 && R25 - R13668 = -1 && R26 = R13668 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R31 = R13744 && R32 - R13744 = 1 && R33 = R13744 && R34 - R13744 = 1 && R35 = 0 && R36 = 1 && R37 = 0 && R38 = 1 && R49 + R78 + R77 + -1*R13198 + -1*R13196 - R64 = 0 && R63 + R13197 + R13195 = 0 && R13609 = 0 && R13610 = 0 && R13617 = 0 && R13618 = 0 && R13619 = 0 && R13620 = 0 && R13623 = 0 && R13624 = 0 && R13625 = 0 && R13626 = R13668 && R13627 = 0 && R13628 = R13668 && R13629 = 0 && R13630 = R13668 && R13631 = 0 && R13632 = R13668 && R13633 = 0 && R13634 = R13668 && R13635 = 0 && R13636 = R13668 && R13637 = 0 && R13638 = R13668 && R13639 = 0 && R13640 = R13668 && R13641 = 0 && R13642 = R13668 && R13643 = 0 && R13644 = R13668 && R13645 = 0 && R13646 = R13668 && R13647 = 0 && R13648 = R13668 && R13649 = 0 && R13650 = R13668 && R13651 = 0 && R13652 = R13668 && R13653 = 0 && R13654 = R13668 && R13655 = 0 && R13656 = R13668 && R13657 = 0 && R13658 = R13668 && R13659 = 0 && R13660 = R13668 && R13661 = 0 && R13662 = R13668 && R13663 = 0 && R13664 = R13668 && R13665 = 0 && R13666 = R13668 && R13667 = 0 && R13669 = 0 && R13670 = R13744 && R13671 = 0 && R13672 = R13744 && R13673 = 0 && R13674 = R13744 && R13675 = 0 && R13676 = R13744 && R13677 = 0 && R13678 = R13744 && R13679 = 0 && R13680 = R13744 && R13681 = 0 && R13682 = R13744 && R13683 = 0 && R13684 = R13744 && R13685 = 0 && R13686 = R13744 && R13687 = 0 && R13688 = R13744 && R13689 = 0 && R13690 = R13744 && R13691 = 0 && R13692 = R13744 && R13693 = 0 && R13694 = R13744 && R13695 = 0 && R13696 = R13744 && R13697 = 0 && R13698 = R13744 && R13699 = 0 && R13700 = R13744 && R13701 = 0 && R13702 = R13744 && R13703 = 0 && R13704 = R13744 && R13705 = 0 && R13706 = R13744 && R13707 = 0 && R13708 = R13744 && R13709 = 0 && R13710 = R13744 && R13711 = 0 && R13712 = R13744 && R13713 = 0 && R13714 = R13744 && R13715 = 0 && R13716 = R13744 && R13717 = 0 && R13718 = R13744 && R13719 = 0 && R13720 = R13744 && R13721 = 0 && R13722 = R13744 && R13723 = 0 && R13724 = R13744 && R13725 = 0 && R13726 = R13744 && R13727 = 0 && R13728 = R13744 && R13729 = 0 && R13730 = R13744 && R13731 = 0 && R13732 = R13744 && R13733 = 0 && R13734 = R13744 && R13735 = 0 && R13736 = R13744 && R13737 = 0 && R13738 = R13744 && R13739 = 0 && R13740 = R13744 && R13741 = 0 && R13742 = R13744 && R13743 = 0 && -1 < R1 && R11 < 1 && R14 < 1 && R17 < 1 && R51 + R80 + R79 < 1 && -1*R13198 + -1*R13196 - R64 < 1 && 0 < R13668 && -1 < R13744 && (R1 != 0 || R20 = 0 || (R13569 = 0 && R13570 = 0)) && (R1 != 0 || R20 = 0 || (R13571 = 0 && R13572 = 0)) && (R1 != 0 || R20 = 0 || (R13573 = 0 && R13574 = 0)) && (R1 != 0 || R20 = 0 || (R13575 = 0 && R13576 = 0)) && (R1 != 0 || R20 = 0 || (R13577 = 0 && R13578 = 0)) && (R1 != 0 || R20 = 0 || (R13579 = 0 && R13580 = 0)) && (R1 != 0 || R20 = 0 || (R13581 = 0 && R13582 = 0)) && (R1 != 0 || R20 = 0 || (R13583 = 0 && R13584 = 0)) && (R1 != 0 || R20 = 0 || (R13585 = 0 && R13586 = 0)) && (R1 != 0 || R20 = 0 || (R13587 = 0 && R13588 = 0)) && (R59 + R13194 + R13191 != 0 || ((R53 + R83 + R81 != 0 || R54 + R84 + R82 + -1*R13198 + -1*R13196 - R64 = 0 || R64 + R13198 + R13196 < 1) && (R53 + R83 + R81 = 0 || R64 + R13198 + R13196 < 1))) && (R59 + R13194 + R13191 != 0 || ((R57 + R13192 + R13189 != 0 || R58 + R13193 + R13190 + -1*R13198 + -1*R13196 - R64 = 0 || R64 + R13198 + R13196 < 1) && (R57 + R13192 + R13189 = 0 || R64 + R13198 + R13196 < 1))) && (R13569 != 0 || R1 = R13570 || R1 < 1) && (R13571 != 0 || R1 = R13572 || R1 < 1) && (R13573 != 0 || R1 = R13574 || R1 < 1) && (R13575 != 0 || R1 = R13576 || R1 < 1) && (R13577 != 0 || R1 = R13578 || R1 < 1) && (R13579 != 0 || R1 = R13580 || R1 < 1) && (R13581 != 0 || R1 = R13582 || R1 < 1) && (R13583 != 0 || R1 = R13584 || R1 < 1) && (R13585 != 0 || R1 = R13586 || R1 < 1) && (R13587 != 0 || R1 = R13588 || R1 < 1) && (R21 = 0 || (R13607 = 0 && R13608 = 0)) && (R21 = 0 || (R13611 = 0 && R13612 = 0)) && (R21 = 0 || (R13613 = 0 && R13614 = 0)) && (R21 = 0 || (R13615 = 0 && R13616 = 0)) && (R21 = 0 || (R13621 = 0 && R13622 = 0)) && (R22 = 0 || (R13589 = 0 && R13590 = 0)) && (R22 = 0 || (R13591 = 0 && R13592 = 0)) && (R22 = 0 || (R13593 = 0 && R13594 = 0)) && (R22 = 0 || (R13595 = 0 && R13596 = 0)) && (R22 = 0 || (R13597 = 0 && R13598 = 0)) && (R22 = 0 || (R13599 = 0 && R13600 = 0)) && (R22 = 0 || (R13601 = 0 && R13602 = 0)) && (R22 = 0 || (R13603 = 0 && R13604 = 0)) && (R22 = 0 || (R13605 = 0 && R13606 = 0)) && (R59 + R13194 + R13191 = 0 || (R53 + R83 + R81 = 0 && R54 + R84 + R82 + -1*R13198 + -1*R13196 - R64 = 0)) && (R59 + R13194 + R13191 = 0 || (R57 + R13192 + R13189 = 0 && R58 + R13193 + R13190 + -1*R13198 + -1*R13196 - R64 = 0)) && (R69 + R13204 + R13201 = 0 || (R67 + R13202 + R13199 = 0 && R68 + R13203 + R13200 = 0)) && (R69 + R13204 + R13201 = 0 || (R73 + R13567 + R13565 = 0 && R74 + R13568 + R13566 = 0)) && (R13569 = 0 || R1 < 1) && (R13571 = 0 || R1 < 1) && (R13573 = 0 || R1 < 1) && (R13575 = 0 || R1 < 1) && (R13577 = 0 || R1 < 1) && (R13579 = 0 || R1 < 1) && (R13581 = 0 || R1 < 1) && (R13583 = 0 || R1 < 1) && (R13585 = 0 || R1 < 1) && (R13587 = 0 || R1 < 1);
// End of Parikh automata intersection problem
