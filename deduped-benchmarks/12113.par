// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R11007, R11008, R11009, R11010, R12463, R12464, R12465, R12466, R12467, R12468, R12829, R12830, R12831, R12832, R12833, R12834, R12835, R12836, R12837, R12838, R12839, R12840, R12841, R12842, R12843, R12844, R12845, R12846, R12847, R12848, R12849, R12850, R12851, R12852, R12853, R12854, R12855, R12856, R12857, R12858, R12859, R12860, R12861, R12862, R12863, R12864, R12865, R12866, R12867, R12868, R12869, R12870, R12871, R12872, R12873, R12874, R12875, R12876, R12877, R12878, R12879, R12880, R12881, R12882, R12883, R12884, R12885, R12886, R12887, R12888, R12889, R12890, R12891, R12892, R12893, R12894, R12895, R12896, R12897, R12898, R12899, R12900, R12901, R12902, R12903, R12904, R12905, R12906, R12907, R12908, R12909, R12910, R12911, R12912, R12913, R12914, R12915, R12916, R12917, R12918, R12919, R12920, R12921, R12922, R12923, R12924, R12925, R12926, R12927, R12928, R12929, R12930, R12931, R12932, R12933, R12934, R12935, R12936, R12937, R12938, R12939, R12940, R12941, R12942, R12943, R12944, R12945, R12946, R12947, R12948, R12949, R12950, R12951, R12952, R12953, R12954, R12955, R12956, R12957, R12958, R12959, R12960, R12961, R12962, R12963, R12964, R12965, R12966, R12967, R12968, R12969, R12970, R12971, R12972, R12973, R12974, R12975, R12976, R12977, R12978, R12979, R12980, R12981, R12982, R12983, R12984, R12985, R12986, R12987, R12988, R12989, R12990, R12991, R12992, R12993, R12994, R12995, R12996, R12997, R12998, R12999, R13000, R13001, R13002, R13003, R13004, R13005, R13006, R13007, R13008, R14, R17, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R33, R34, R35, R36, R37, R38, R4, R49, R5, R51, R53, R54, R57, R58, R59, R6, R63, R64, R6637, R6638, R6639, R6640, R6641, R6642, R67, R68, R69, R7, R73, R74, R77, R78, R79, R80, R81, R82, R83, R84;
synchronised {  // Automata constraining P9
automaton P9_0 {
  init s0;
  s0 -> s1 [98, 98];
  accepting s1;
};
};
synchronised {  // Automata constraining P51
automaton P51_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R17 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [13, 13] { R32 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s0 [0, 65535] { R33 += 1, R34 += 1 };
  s0 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s1 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R36 += 1 };
  s0 -> s0 [0, 65535] { R35 += 1, R36 += 1 };
  s0 -> s2 [9, 13] { R36 += 1 };
  s0 -> s1 [14, 31] { R36 += 1 };
  s0 -> s2 [32, 32] { R36 += 1 };
  s0 -> s1 [33, 65535] { R36 += 1 };
  s1 -> s1 [0, 65535] { R36 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R36 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s0 [0, 65535] { R37 += 1, R38 += 1 };
  s0 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R12934 += 1 };
  s0 -> s0 [0, 65535] { R12933 += 1, R12934 += 1 };
  s0 -> s2 [66, 66] { R12934 += 1 };
  s0 -> s1 [67, 65535] { R12934 += 1 };
  s1 -> s1 [0, 64] { R12934 += 1 };
  s1 -> s2 [66, 66] { R12934 += 1 };
  s1 -> s1 [67, 65535] { R12934 += 1 };
  s2 -> s2 [0, 64] { R12934 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [66, 65535] { R12934 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R12935 += 1, R12936 += 1 };
  s0 -> s1 [0, 65535] { R12936 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R12936 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 65] { R12938 += 1 };
  s0 -> s0 [0, 65535] { R12937 += 1, R12938 += 1 };
  s0 -> s2 [0, 65535] { R12938 += 1, R14 += 1 };
  s0 -> s3 [66, 66] { R12938 += 1 };
  s0 -> s1 [67, 65535] { R12938 += 1 };
  s1 -> s1 [0, 65] { R12938 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [66, 66] { R12938 += 1 };
  s1 -> s1 [67, 65535] { R12938 += 1 };
  s2 -> s1 [0, 65] { R12938 += 1 };
  s2 -> s2 [0, 65535] { R12938 += 1, R14 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [66, 66] { R12938 += 1 };
  s2 -> s1 [67, 65535] { R12938 += 1 };
  s3 -> s3 [0, 65535] { R12938 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R12940 += 1, R24 += 1 };
  s0 -> s2 [0, 65535] { R12940 += 1, R23 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R12939 += 1, R12940 += 1 };
  s0 -> s3 [9, 13] { R12940 += 1, R24 += 1 };
  s0 -> s1 [14, 31] { R12940 += 1, R24 += 1 };
  s0 -> s3 [32, 32] { R12940 += 1, R24 += 1 };
  s0 -> s1 [33, 65535] { R12940 += 1, R24 += 1 };
  s1 -> s5 [0, 65535] { R12940 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R12940 += 1, R24 += 1 };
  s2 -> s1 [0, 8] { R12940 += 1, R24 += 1 };
  s2 -> s2 [0, 65535] { R12940 += 1, R23 += 1, R24 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [9, 13] { R12940 += 1, R24 += 1 };
  s2 -> s1 [14, 31] { R12940 += 1, R24 += 1 };
  s2 -> s3 [32, 32] { R12940 += 1, R24 += 1 };
  s2 -> s1 [33, 65535] { R12940 += 1, R24 += 1 };
  s3 -> s1 [0, 65535] { R12940 += 1, R24 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R12940 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s0 [0, 65535] { R12941 += 1, R12942 += 1 };
  s0 -> s1 [0, 65535] { R12942 += 1, R26 += 1, R4 += 1 };
  s0 -> s2 [0, 65535] { R12942 += 1, R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R12942 += 1, R26 += 1, R4 += 1 };
  s1 -> s4 [0, 65535] { R12942 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R12942 += 1, R26 += 1, R4 += 1 };
  s2 -> s2 [0, 65535] { R12942 += 1, R25 += 1, R26 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R12942 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R12944 += 1, R28 += 1 };
  s0 -> s0 [0, 65535] { R12943 += 1, R12944 += 1 };
  s0 -> s2 [0, 65535] { R12944 += 1, R27 += 1, R28 += 1 };
  s0 -> s3 [9, 13] { R12944 += 1, R28 += 1 };
  s0 -> s1 [14, 31] { R12944 += 1, R28 += 1 };
  s0 -> s3 [32, 32] { R12944 += 1, R28 += 1 };
  s0 -> s1 [33, 65535] { R12944 += 1, R28 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R12944 += 1, R28 += 1 };
  s1 -> s5 [0, 65535] { R12944 += 1 };
  s2 -> s1 [0, 8] { R12944 += 1, R28 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R12944 += 1, R27 += 1, R28 += 1 };
  s2 -> s3 [9, 13] { R12944 += 1, R28 += 1 };
  s2 -> s1 [14, 31] { R12944 += 1, R28 += 1 };
  s2 -> s3 [32, 32] { R12944 += 1, R28 += 1 };
  s2 -> s1 [33, 65535] { R12944 += 1, R28 += 1 };
  s3 -> s1 [0, 65535] { R12944 += 1, R28 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R12944 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 65535] { R12946 += 1, R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R12945 += 1, R12946 += 1 };
  s0 -> s2 [0, 65535] { R12946 += 1, R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R12946 += 1, R30 += 1, R5 += 1 };
  s1 -> s4 [0, 65535] { R12946 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R12946 += 1, R30 += 1, R5 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R12946 += 1, R29 += 1, R30 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R12946 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 65535] { R12948 += 1, R12854 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R12947 += 1, R12948 += 1 };
  s0 -> s2 [0, 65535] { R12948 += 1, R12853 += 1, R12854 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R12948 += 1, R12854 += 1, R22 += 1 };
  s1 -> s4 [0, 65535] { R12948 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R12948 += 1, R12854 += 1, R22 += 1 };
  s2 -> s2 [0, 65535] { R12948 += 1, R12853 += 1, R12854 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R12948 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 65] { R12950 += 1, R12856 += 1 };
  s0 -> s0 [0, 65535] { R12949 += 1, R12950 += 1 };
  s0 -> s2 [0, 65535] { R12950 += 1, R12855 += 1, R12856 += 1 };
  s0 -> s3 [66, 66] { R12950 += 1, R12856 += 1 };
  s0 -> s4 [66, 66] { R12950 += 1, R12856 += 1 };
  s0 -> s1 [71, 65535] { R12950 += 1, R12856 += 1 };
  s1 -> s1 [0, 65] { R12950 += 1, R12856 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R12950 += 1 };
  s1 -> s3 [66, 66] { R12950 += 1, R12856 += 1 };
  s1 -> s4 [66, 66] { R12950 += 1, R12856 += 1 };
  s1 -> s1 [71, 65535] { R12950 += 1, R12856 += 1 };
  s2 -> s1 [0, 65] { R12950 += 1, R12856 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R12950 += 1, R12855 += 1, R12856 += 1 };
  s2 -> s3 [66, 66] { R12950 += 1, R12856 += 1 };
  s2 -> s4 [66, 66] { R12950 += 1, R12856 += 1 };
  s2 -> s1 [71, 65535] { R12950 += 1, R12856 += 1 };
  s3 -> s3 [0, 65535] { R12950 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 66] { R12950 += 1, R12856 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R12950 += 1 };
  s4 -> s4 [71, 65535] { R12950 += 1, R12856 += 1 };
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 65] { R12952 += 1, R12858 += 1, R49 += 1 };
  s0 -> s2 [0, 65535] { R12952 += 1, R12857 += 1, R12858 += 1 };
  s0 -> s0 [0, 65535] { R12951 += 1, R12952 += 1 };
  s0 -> s3 [66, 66] { R12952 += 1, R12858 += 1, R49 += 1 };
  s0 -> s4 [66, 66] { R12952 += 1, R12858 += 1, R49 += 1 };
  s0 -> s1 [67, 65535] { R12952 += 1, R12858 += 1, R49 += 1 };
  s1 -> s1 [0, 65] { R12952 += 1, R12858 += 1, R49 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R12952 += 1 };
  s1 -> s3 [66, 66] { R12952 += 1, R12858 += 1, R49 += 1 };
  s1 -> s4 [66, 66] { R12952 += 1, R12858 += 1, R49 += 1 };
  s1 -> s1 [67, 65535] { R12952 += 1, R12858 += 1, R49 += 1 };
  s2 -> s1 [0, 65] { R12952 += 1, R12858 += 1, R49 += 1 };
  s2 -> s2 [0, 65535] { R12952 += 1, R12857 += 1, R12858 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R12952 += 1, R12858 += 1, R49 += 1 };
  s2 -> s4 [66, 66] { R12952 += 1, R12858 += 1, R49 += 1 };
  s2 -> s1 [67, 65535] { R12952 += 1, R12858 += 1, R49 += 1 };
  s3 -> s3 [0, 65535] { R12952 += 1, R12858 += 1, R49 += 1 };
  s3 -> s6 [0, 65535] { R12952 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R12952 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12952 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 65] { R12954 += 1, R12860 += 1, R51 += 1 };
  s0 -> s2 [0, 65535] { R12954 += 1, R12859 += 1, R12860 += 1 };
  s0 -> s0 [0, 65535] { R12953 += 1, R12954 += 1 };
  s0 -> s3 [66, 66] { R12954 += 1, R12860 += 1, R51 += 1 };
  s0 -> s4 [66, 66] { R12954 += 1, R12860 += 1, R51 += 1 };
  s0 -> s1 [67, 65535] { R12954 += 1, R12860 += 1, R51 += 1 };
  s1 -> s1 [0, 65] { R12954 += 1, R12860 += 1, R51 += 1 };
  s1 -> s1 [0, 65535] { R12954 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R12954 += 1, R12860 += 1, R51 += 1 };
  s1 -> s4 [66, 66] { R12954 += 1, R12860 += 1, R51 += 1 };
  s1 -> s1 [67, 65535] { R12954 += 1, R12860 += 1, R51 += 1 };
  s2 -> s1 [0, 65] { R12954 += 1, R12860 += 1, R51 += 1 };
  s2 -> s2 [0, 65535] { R12954 += 1, R12859 += 1, R12860 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R12954 += 1, R12860 += 1, R51 += 1 };
  s2 -> s4 [66, 66] { R12954 += 1, R12860 += 1, R51 += 1 };
  s2 -> s1 [67, 65535] { R12954 += 1, R12860 += 1, R51 += 1 };
  s3 -> s3 [0, 65535] { R12954 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R12954 += 1, R12860 += 1, R51 += 1 };
  s4 -> s6 [0, 65535] { R12954 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12954 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65] { R12956 += 1, R12862 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R12955 += 1, R12956 += 1 };
  s0 -> s2 [0, 65535] { R12956 += 1, R12861 += 1, R12862 += 1 };
  s0 -> s3 [66, 66] { R12956 += 1, R12862 += 1, R53 += 1, R54 += 1 };
  s0 -> s4 [66, 66] { R12956 += 1, R12862 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [67, 65535] { R12956 += 1, R12862 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65] { R12956 += 1, R12862 += 1, R53 += 1, R54 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R12956 += 1 };
  s1 -> s3 [66, 66] { R12956 += 1, R12862 += 1, R53 += 1, R54 += 1 };
  s1 -> s4 [66, 66] { R12956 += 1, R12862 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [67, 65535] { R12956 += 1, R12862 += 1, R53 += 1, R54 += 1 };
  s2 -> s1 [0, 65] { R12956 += 1, R12862 += 1, R53 += 1, R54 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R12956 += 1, R12861 += 1, R12862 += 1 };
  s2 -> s3 [66, 66] { R12956 += 1, R12862 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [66, 66] { R12956 += 1, R12862 += 1, R53 += 1, R54 += 1 };
  s2 -> s1 [67, 65535] { R12956 += 1, R12862 += 1, R53 += 1, R54 += 1 };
  s3 -> s6 [0, 65535] { R12956 += 1 };
  s3 -> s3 [0, 65535] { R12956 += 1, R12862 += 1, R53 += 1, R54 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R12956 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12956 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 65] { R12958 += 1, R12864 += 1, R57 += 1, R58 += 1 };
  s0 -> s2 [0, 65535] { R12958 += 1, R12863 += 1, R12864 += 1 };
  s0 -> s0 [0, 65535] { R12957 += 1, R12958 += 1 };
  s0 -> s3 [66, 66] { R12958 += 1, R12864 += 1, R57 += 1, R58 += 1 };
  s0 -> s4 [66, 66] { R12958 += 1, R12864 += 1, R57 += 1, R58 += 1 };
  s0 -> s1 [67, 65535] { R12958 += 1, R12864 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [0, 65] { R12958 += 1, R12864 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [0, 65535] { R12958 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [66, 66] { R12958 += 1, R12864 += 1, R57 += 1, R58 += 1 };
  s1 -> s4 [66, 66] { R12958 += 1, R12864 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [67, 65535] { R12958 += 1, R12864 += 1, R57 += 1, R58 += 1 };
  s2 -> s1 [0, 65] { R12958 += 1, R12864 += 1, R57 += 1, R58 += 1 };
  s2 -> s2 [0, 65535] { R12958 += 1, R12863 += 1, R12864 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [66, 66] { R12958 += 1, R12864 += 1, R57 += 1, R58 += 1 };
  s2 -> s4 [66, 66] { R12958 += 1, R12864 += 1, R57 += 1, R58 += 1 };
  s2 -> s1 [67, 65535] { R12958 += 1, R12864 += 1, R57 += 1, R58 += 1 };
  s3 -> s3 [0, 65535] { R12958 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R12958 += 1, R12864 += 1, R57 += 1, R58 += 1 };
  s4 -> s5 [0, 65535] { R12958 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R12958 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 65] { R12960 += 1, R12866 += 1, R63 += 1, R64 += 1 };
  s0 -> s0 [0, 65535] { R12959 += 1, R12960 += 1 };
  s0 -> s2 [0, 65535] { R12960 += 1, R12865 += 1, R12866 += 1 };
  s0 -> s3 [66, 66] { R12960 += 1, R12866 += 1, R63 += 1, R64 += 1 };
  s0 -> s4 [66, 66] { R12960 += 1, R12866 += 1, R63 += 1, R64 += 1 };
  s0 -> s1 [67, 65535] { R12960 += 1, R12866 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [0, 65] { R12960 += 1, R12866 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [0, 65535] { R12960 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R12960 += 1, R12866 += 1, R63 += 1, R64 += 1 };
  s1 -> s4 [66, 66] { R12960 += 1, R12866 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [67, 65535] { R12960 += 1, R12866 += 1, R63 += 1, R64 += 1 };
  s2 -> s1 [0, 65] { R12960 += 1, R12866 += 1, R63 += 1, R64 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R12960 += 1, R12865 += 1, R12866 += 1 };
  s2 -> s3 [66, 66] { R12960 += 1, R12866 += 1, R63 += 1, R64 += 1 };
  s2 -> s4 [66, 66] { R12960 += 1, R12866 += 1, R63 += 1, R64 += 1 };
  s2 -> s1 [67, 65535] { R12960 += 1, R12866 += 1, R63 += 1, R64 += 1 };
  s3 -> s3 [0, 65535] { R12960 += 1, R12866 += 1, R63 += 1, R64 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R12960 += 1 };
  s4 -> s4 [0, 65535] { R12960 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12960 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65] { R12962 += 1, R12868 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R12961 += 1, R12962 += 1 };
  s0 -> s2 [0, 65535] { R12962 += 1, R12867 += 1, R12868 += 1 };
  s0 -> s3 [66, 66] { R12962 += 1, R12868 += 1, R67 += 1, R68 += 1 };
  s0 -> s4 [66, 66] { R12962 += 1, R12868 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [67, 65535] { R12962 += 1, R12868 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65] { R12962 += 1, R12868 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535] { R12962 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R12962 += 1, R12868 += 1, R67 += 1, R68 += 1 };
  s1 -> s4 [66, 66] { R12962 += 1, R12868 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [67, 65535] { R12962 += 1, R12868 += 1, R67 += 1, R68 += 1 };
  s2 -> s1 [0, 65] { R12962 += 1, R12868 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535] { R12962 += 1, R12867 += 1, R12868 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R12962 += 1, R12868 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [66, 66] { R12962 += 1, R12868 += 1, R67 += 1, R68 += 1 };
  s2 -> s1 [67, 65535] { R12962 += 1, R12868 += 1, R67 += 1, R68 += 1 };
  s3 -> s3 [0, 65535] { R12962 += 1, R12868 += 1, R67 += 1, R68 += 1 };
  s3 -> s6 [0, 65535] { R12962 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R12962 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12962 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 65] { R12964 += 1, R12870 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R12963 += 1, R12964 += 1 };
  s0 -> s2 [0, 65535] { R12964 += 1, R12869 += 1, R12870 += 1 };
  s0 -> s3 [66, 66] { R12964 += 1, R12870 += 1, R73 += 1, R74 += 1 };
  s0 -> s4 [66, 66] { R12964 += 1, R12870 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [67, 65535] { R12964 += 1, R12870 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65] { R12964 += 1, R12870 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535] { R12964 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R12964 += 1, R12870 += 1, R73 += 1, R74 += 1 };
  s1 -> s4 [66, 66] { R12964 += 1, R12870 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [67, 65535] { R12964 += 1, R12870 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [0, 65] { R12964 += 1, R12870 += 1, R73 += 1, R74 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R12964 += 1, R12869 += 1, R12870 += 1 };
  s2 -> s3 [66, 66] { R12964 += 1, R12870 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [66, 66] { R12964 += 1, R12870 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [67, 65535] { R12964 += 1, R12870 += 1, R73 += 1, R74 += 1 };
  s3 -> s3 [0, 65535] { R12964 += 1, R12870 += 1, R73 += 1, R74 += 1 };
  s3 -> s6 [0, 65535] { R12964 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R12964 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12964 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65] { R12966 += 1, R12890 += 1 };
  s0 -> s0 [0, 65535] { R12965 += 1, R12966 += 1 };
  s0 -> s2 [0, 65535] { R12966 += 1, R12889 += 1, R12890 += 1 };
  s0 -> s3 [66, 66] { R12966 += 1, R12890 += 1 };
  s0 -> s1 [67, 65535] { R12966 += 1, R12890 += 1 };
  s1 -> s1 [0, 65] { R12966 += 1, R12890 += 1 };
  s1 -> s3 [66, 66] { R12966 += 1, R12890 += 1 };
  s1 -> s1 [67, 65535] { R12966 += 1, R12890 += 1 };
  s2 -> s1 [0, 65] { R12966 += 1, R12890 += 1 };
  s2 -> s2 [0, 65535] { R12966 += 1, R12889 += 1, R12890 += 1 };
  s2 -> s3 [66, 66] { R12966 += 1, R12890 += 1 };
  s2 -> s1 [67, 65535] { R12966 += 1, R12890 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R12966 += 1, R12890 += 1 };
  s3 -> s5 [0, 65535] { R12966 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R12966 += 1 };
  accepting s3, s4, s5;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 65535] { R12968 += 1, R12892 += 1, R1 += 1 };
  s0 -> s2 [0, 65535] { R12968 += 1, R12891 += 1, R12892 += 1 };
  s0 -> s0 [0, 65535] { R12967 += 1, R12968 += 1 };
  s1 -> s1 [0, 65535] { R12968 += 1, R12892 += 1, R1 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R12968 += 1 };
  s2 -> s1 [0, 65535] { R12968 += 1, R12892 += 1, R1 += 1 };
  s2 -> s2 [0, 65535] { R12968 += 1, R12891 += 1, R12892 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R12968 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65] { R12970 += 1, R12894 += 1 };
  s0 -> s0 [0, 65535] { R12969 += 1, R12970 += 1 };
  s0 -> s2 [0, 65535] { R12970 += 1, R12894 += 1, R11 += 1 };
  s0 -> s3 [0, 65535] { R12970 += 1, R12893 += 1, R12894 += 1 };
  s0 -> s4 [66, 66] { R12970 += 1, R12894 += 1 };
  s0 -> s1 [67, 65535] { R12970 += 1, R12894 += 1 };
  s1 -> s1 [0, 65] { R12970 += 1, R12894 += 1 };
  s1 -> s1 [0, 65535] { R12970 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s4 [66, 66] { R12970 += 1, R12894 += 1 };
  s1 -> s1 [67, 65535] { R12970 += 1, R12894 += 1 };
  s2 -> s1 [0, 65] { R12970 += 1, R12894 += 1 };
  s2 -> s6 [0, 65535] { R12970 += 1 };
  s2 -> s2 [0, 65535] { R12970 += 1, R12894 += 1, R11 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s4 [66, 66] { R12970 += 1, R12894 += 1 };
  s2 -> s1 [67, 65535] { R12970 += 1, R12894 += 1 };
  s3 -> s1 [0, 65] { R12970 += 1, R12894 += 1 };
  s3 -> s2 [0, 65535] { R12970 += 1, R12894 += 1, R11 += 1 };
  s3 -> s3 [0, 65535] { R12970 += 1, R12893 += 1, R12894 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s4 [66, 66] { R12970 += 1, R12894 += 1 };
  s3 -> s1 [67, 65535] { R12970 += 1, R12894 += 1 };
  s4 -> s4 [0, 65535] { R12970 += 1, R12894 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12970 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s5, s2, s6, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65] { R12972 += 1, R12896 += 1, R12834 += 1 };
  s0 -> s2 [0, 65535] { R12972 += 1, R12896 += 1, R12833 += 1, R12834 += 1 };
  s0 -> s3 [0, 65535] { R12972 += 1, R12895 += 1, R12896 += 1 };
  s0 -> s0 [0, 65535] { R12971 += 1, R12972 += 1 };
  s0 -> s1 [67, 65535] { R12972 += 1, R12896 += 1, R12834 += 1 };
  s1 -> s1 [0, 65] { R12972 += 1, R12896 += 1, R12834 += 1 };
  s1 -> s5 [0, 65535] { R12972 += 1 };
  s1 -> s1 [0, 65535] { R12972 += 1, R12896 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [67, 65535] { R12972 += 1, R12896 += 1, R12834 += 1 };
  s2 -> s1 [0, 65] { R12972 += 1, R12896 += 1, R12834 += 1 };
  s2 -> s2 [0, 65535] { R12972 += 1, R12896 += 1, R12833 += 1, R12834 += 1 };
  s2 -> s5 [0, 65535] { R12972 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [67, 65535] { R12972 += 1, R12896 += 1, R12834 += 1 };
  s3 -> s1 [0, 65] { R12972 += 1, R12896 += 1, R12834 += 1 };
  s3 -> s2 [0, 65535] { R12972 += 1, R12896 += 1, R12833 += 1, R12834 += 1 };
  s3 -> s3 [0, 65535] { R12972 += 1, R12895 += 1, R12896 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [67, 65535] { R12972 += 1, R12896 += 1, R12834 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R12972 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 65535] { R12974 += 1, R12898 += 1, R12836 += 1, R20 += 1 };
  s0 -> s0 [0, 65535] { R12973 += 1, R12974 += 1 };
  s0 -> s2 [0, 65535] { R12974 += 1, R12897 += 1, R12898 += 1 };
  s0 -> s3 [0, 65535] { R12974 += 1, R12898 += 1, R12835 += 1, R12836 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R12974 += 1, R12898 += 1, R12836 += 1, R20 += 1 };
  s1 -> s6 [0, 65535] { R12974 += 1, R12898 += 1 };
  s1 -> s5 [0, 65535] { R12974 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R12974 += 1, R12898 += 1, R12836 += 1, R20 += 1 };
  s2 -> s2 [0, 65535] { R12974 += 1, R12897 += 1, R12898 += 1 };
  s2 -> s3 [0, 65535] { R12974 += 1, R12898 += 1, R12835 += 1, R12836 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R12974 += 1, R12898 += 1, R12836 += 1, R20 += 1 };
  s3 -> s5 [0, 65535] { R12974 += 1 };
  s3 -> s3 [0, 65535] { R12974 += 1, R12898 += 1, R12835 += 1, R12836 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R12974 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R12974 += 1, R12898 += 1 };
  s6 -> s5 [0, 65535] { R12974 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 66] { R12976 += 1, R12900 += 1, R12838 += 1 };
  s0 -> s2 [0, 65535] { R12976 += 1, R12899 += 1, R12900 += 1 };
  s0 -> s0 [0, 65535] { R12975 += 1, R12976 += 1 };
  s0 -> s3 [0, 65535] { R12976 += 1, R12900 += 1, R12837 += 1, R12838 += 1 };
  s0 -> s1 [70, 65535] { R12976 += 1, R12900 += 1, R12838 += 1 };
  s1 -> s1 [0, 66] { R12976 += 1, R12900 += 1, R12838 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R12976 += 1 };
  s1 -> s1 [0, 65535] { R12976 += 1, R12900 += 1 };
  s1 -> s1 [70, 65535] { R12976 += 1, R12900 += 1, R12838 += 1 };
  s2 -> s1 [0, 66] { R12976 += 1, R12900 += 1, R12838 += 1 };
  s2 -> s2 [0, 65535] { R12976 += 1, R12899 += 1, R12900 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R12976 += 1, R12900 += 1, R12837 += 1, R12838 += 1 };
  s2 -> s1 [70, 65535] { R12976 += 1, R12900 += 1, R12838 += 1 };
  s3 -> s1 [0, 66] { R12976 += 1, R12900 += 1, R12838 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R12976 += 1 };
  s3 -> s3 [0, 65535] { R12976 += 1, R12900 += 1, R12837 += 1, R12838 += 1 };
  s3 -> s1 [70, 65535] { R12976 += 1, R12900 += 1, R12838 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R12976 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R12978 += 1, R12902 += 1, R12840 += 1, R78 += 1 };
  s0 -> s2 [0, 65535] { R12978 += 1, R12902 += 1, R12839 += 1, R12840 += 1 };
  s0 -> s3 [0, 65535] { R12978 += 1, R12901 += 1, R12902 += 1 };
  s0 -> s0 [0, 65535] { R12977 += 1, R12978 += 1 };
  s1 -> s1 [0, 65535] { R12978 += 1, R12902 += 1, R12840 += 1, R78 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R12978 += 1, R12902 += 1 };
  s1 -> s5 [0, 65535] { R12978 += 1 };
  s2 -> s1 [0, 65535] { R12978 += 1, R12902 += 1, R12840 += 1, R78 += 1 };
  s2 -> s2 [0, 65535] { R12978 += 1, R12902 += 1, R12839 += 1, R12840 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R12978 += 1 };
  s3 -> s1 [0, 65535] { R12978 += 1, R12902 += 1, R12840 += 1, R78 += 1 };
  s3 -> s2 [0, 65535] { R12978 += 1, R12902 += 1, R12839 += 1, R12840 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R12978 += 1, R12901 += 1, R12902 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R12978 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R12978 += 1, R12902 += 1 };
  s6 -> s5 [0, 65535] { R12978 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 69] { R12980 += 1, R12904 += 1, R12842 += 1 };
  s0 -> s2 [0, 65535] { R12980 += 1, R12904 += 1, R12841 += 1, R12842 += 1 };
  s0 -> s3 [0, 65535] { R12980 += 1, R12903 += 1, R12904 += 1 };
  s0 -> s0 [0, 65535] { R12979 += 1, R12980 += 1 };
  s0 -> s4 [0, 65535] { R12980 += 1, R12904 += 1, R12842 += 1, R80 += 1 };
  s0 -> s1 [71, 65535] { R12980 += 1, R12904 += 1, R12842 += 1 };
  s1 -> s1 [0, 69] { R12980 += 1, R12904 += 1, R12842 += 1 };
  s1 -> s6 [0, 65535] { R12980 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R12980 += 1, R12904 += 1 };
  s1 -> s1 [71, 65535] { R12980 += 1, R12904 += 1, R12842 += 1 };
  s2 -> s1 [0, 69] { R12980 += 1, R12904 += 1, R12842 += 1 };
  s2 -> s2 [0, 65535] { R12980 += 1, R12904 += 1, R12841 += 1, R12842 += 1 };
  s2 -> s6 [0, 65535] { R12980 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [0, 65535] { R12980 += 1, R12904 += 1, R12842 += 1, R80 += 1 };
  s2 -> s1 [71, 65535] { R12980 += 1, R12904 += 1, R12842 += 1 };
  s3 -> s1 [0, 69] { R12980 += 1, R12904 += 1, R12842 += 1 };
  s3 -> s2 [0, 65535] { R12980 += 1, R12904 += 1, R12841 += 1, R12842 += 1 };
  s3 -> s3 [0, 65535] { R12980 += 1, R12903 += 1, R12904 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [0, 65535] { R12980 += 1, R12904 += 1, R12842 += 1, R80 += 1 };
  s3 -> s1 [71, 65535] { R12980 += 1, R12904 += 1, R12842 += 1 };
  s4 -> s1 [0, 69] { R12980 += 1, R12904 += 1, R12842 += 1 };
  s4 -> s5 [0, 65535] { R12980 += 1, R12904 += 1 };
  s4 -> s6 [0, 65535] { R12980 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R12980 += 1, R12904 += 1, R12842 += 1, R80 += 1 };
  s4 -> s1 [71, 65535] { R12980 += 1, R12904 += 1, R12842 += 1 };
  s5 -> s5 [0, 65535] { R12980 += 1, R12904 += 1 };
  s5 -> s6 [0, 65535] { R12980 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R12980 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R12982 += 1, R12906 += 1, R12844 += 1, R84 += 1 };
  s0 -> s2 [0, 65535] { R12982 += 1, R12906 += 1, R12843 += 1, R12844 += 1 };
  s0 -> s3 [0, 65535] { R12982 += 1, R12905 += 1, R12906 += 1 };
  s0 -> s4 [0, 65535] { R12982 += 1, R12906 += 1, R12844 += 1, R83 += 1, R84 += 1 };
  s0 -> s0 [0, 65535] { R12981 += 1, R12982 += 1 };
  s0 -> s1 [71, 65535] { R12982 += 1, R12906 += 1, R12844 += 1, R84 += 1 };
  s1 -> s1 [0, 69] { R12982 += 1, R12906 += 1, R12844 += 1, R84 += 1 };
  s1 -> s1 [0, 65535] { R12982 += 1, R12906 += 1, R12844 += 1 };
  s1 -> s5 [0, 65535] { R12982 += 1, R12906 += 1 };
  s1 -> s6 [0, 65535] { R12982 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [71, 65535] { R12982 += 1, R12906 += 1, R12844 += 1, R84 += 1 };
  s2 -> s1 [0, 69] { R12982 += 1, R12906 += 1, R12844 += 1, R84 += 1 };
  s2 -> s6 [0, 65535] { R12982 += 1 };
  s2 -> s2 [0, 65535] { R12982 += 1, R12906 += 1, R12843 += 1, R12844 += 1 };
  s2 -> s4 [0, 65535] { R12982 += 1, R12906 += 1, R12844 += 1, R83 += 1, R84 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s1 [71, 65535] { R12982 += 1, R12906 += 1, R12844 += 1, R84 += 1 };
  s3 -> s1 [0, 69] { R12982 += 1, R12906 += 1, R12844 += 1, R84 += 1 };
  s3 -> s2 [0, 65535] { R12982 += 1, R12906 += 1, R12843 += 1, R12844 += 1 };
  s3 -> s3 [0, 65535] { R12982 += 1, R12905 += 1, R12906 += 1 };
  s3 -> s4 [0, 65535] { R12982 += 1, R12906 += 1, R12844 += 1, R83 += 1, R84 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s1 [71, 65535] { R12982 += 1, R12906 += 1, R12844 += 1, R84 += 1 };
  s4 -> s1 [0, 69] { R12982 += 1, R12906 += 1, R12844 += 1, R84 += 1 };
  s4 -> s5 [0, 65535] { R12982 += 1, R12906 += 1 };
  s4 -> s6 [0, 65535] { R12982 += 1 };
  s4 -> s4 [0, 65535] { R12982 += 1, R12906 += 1, R12844 += 1, R83 += 1, R84 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s1 [71, 65535] { R12982 += 1, R12906 += 1, R12844 += 1, R84 += 1 };
  s5 -> s5 [0, 65535] { R12982 += 1, R12906 += 1 };
  s5 -> s6 [0, 65535] { R12982 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R12982 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R12984 += 1, R12908 += 1, R12846 += 1, R6641 += 1, R6642 += 1 };
  s0 -> s2 [0, 65535] { R12984 += 1, R12907 += 1, R12908 += 1 };
  s0 -> s0 [0, 65535] { R12983 += 1, R12984 += 1 };
  s0 -> s3 [0, 65535] { R12984 += 1, R12908 += 1, R12846 += 1 };
  s0 -> s4 [0, 65535] { R12984 += 1, R12908 += 1, R12845 += 1, R12846 += 1 };
  s1 -> s5 [0, 65535] { R12984 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R12984 += 1, R12908 += 1 };
  s1 -> s1 [0, 65535] { R12984 += 1, R12908 += 1, R12846 += 1, R6641 += 1, R6642 += 1 };
  s1 -> s3 [0, 65535] { R12984 += 1, R12908 += 1, R12846 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [0, 65535] { R12984 += 1, R12908 += 1, R12846 += 1, R6641 += 1, R6642 += 1 };
  s2 -> s2 [0, 65535] { R12984 += 1, R12907 += 1, R12908 += 1 };
  s2 -> s3 [0, 65535] { R12984 += 1, R12908 += 1, R12846 += 1 };
  s2 -> s4 [0, 65535] { R12984 += 1, R12908 += 1, R12845 += 1, R12846 += 1 };
  s3 -> s5 [0, 65535] { R12984 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R12984 += 1, R12908 += 1 };
  s3 -> s3 [0, 65535] { R12984 += 1, R12908 += 1, R12846 += 1 };
  s4 -> s5 [0, 65535] { R12984 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s1 [0, 65535] { R12984 += 1, R12908 += 1, R12846 += 1, R6641 += 1, R6642 += 1 };
  s4 -> s3 [0, 65535] { R12984 += 1, R12908 += 1, R12846 += 1 };
  s4 -> s4 [0, 65535] { R12984 += 1, R12908 += 1, R12845 += 1, R12846 += 1 };
  s5 -> s5 [0, 65535] { R12984 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R12984 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R12984 += 1, R12908 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 70] { R12986 += 1, R12910 += 1, R12848 += 1, R11010 += 1 };
  s0 -> s2 [0, 65535] { R12986 += 1, R12910 += 1, R12847 += 1, R12848 += 1 };
  s0 -> s0 [0, 65535] { R12985 += 1, R12986 += 1 };
  s0 -> s3 [0, 65535] { R12986 += 1, R12909 += 1, R12910 += 1 };
  s0 -> s4 [72, 72] { R12986 += 1, R12910 += 1, R12848 += 1, R11010 += 1 };
  s0 -> s1 [73, 65535] { R12986 += 1, R12910 += 1, R12848 += 1, R11010 += 1 };
  s1 -> s1 [0, 70] { R12986 += 1, R12910 += 1, R12848 += 1, R11010 += 1 };
  s1 -> s4 [72, 72] { R12986 += 1, R12910 += 1, R12848 += 1, R11010 += 1 };
  s1 -> s1 [73, 65535] { R12986 += 1, R12910 += 1, R12848 += 1, R11010 += 1 };
  s2 -> s1 [0, 70] { R12986 += 1, R12910 += 1, R12848 += 1, R11010 += 1 };
  s2 -> s2 [0, 65535] { R12986 += 1, R12910 += 1, R12847 += 1, R12848 += 1 };
  s2 -> s4 [72, 72] { R12986 += 1, R12910 += 1, R12848 += 1, R11010 += 1 };
  s2 -> s1 [73, 65535] { R12986 += 1, R12910 += 1, R12848 += 1, R11010 += 1 };
  s3 -> s1 [0, 70] { R12986 += 1, R12910 += 1, R12848 += 1, R11010 += 1 };
  s3 -> s2 [0, 65535] { R12986 += 1, R12910 += 1, R12847 += 1, R12848 += 1 };
  s3 -> s3 [0, 65535] { R12986 += 1, R12909 += 1, R12910 += 1 };
  s3 -> s4 [72, 72] { R12986 += 1, R12910 += 1, R12848 += 1, R11010 += 1 };
  s3 -> s1 [73, 65535] { R12986 += 1, R12910 += 1, R12848 += 1, R11010 += 1 };
  s4 -> s4 [0, 70] { R12986 += 1, R12910 += 1, R12848 += 1, R11010 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R12986 += 1 };
  s4 -> s7 [0, 65535] { R12986 += 1, R12910 += 1 };
  s4 -> s4 [0, 65535] { R12986 += 1, R12910 += 1, R12848 += 1 };
  s4 -> s4 [72, 65535] { R12986 += 1, R12910 += 1, R12848 += 1, R11010 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12986 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R12986 += 1 };
  s7 -> s7 [0, 65535] { R12986 += 1, R12910 += 1 };
  accepting s4, s5, s6, s7;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 65535] { R12988 += 1, R12911 += 1, R12912 += 1 };
  s0 -> s0 [0, 65535] { R12987 += 1, R12988 += 1 };
  s0 -> s2 [0, 65535] { R12988 += 1, R12912 += 1, R12849 += 1, R12850 += 1 };
  s0 -> s3 [0, 65535] { R12988 += 1, R12912 += 1, R12850 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R12988 += 1, R12911 += 1, R12912 += 1 };
  s1 -> s2 [0, 65535] { R12988 += 1, R12912 += 1, R12849 += 1, R12850 += 1 };
  s1 -> s3 [0, 65535] { R12988 += 1, R12912 += 1, R12850 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R12988 += 1 };
  s2 -> s2 [0, 65535] { R12988 += 1, R12912 += 1, R12849 += 1, R12850 += 1 };
  s2 -> s3 [0, 65535] { R12988 += 1, R12912 += 1, R12850 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R12988 += 1 };
  s3 -> s3 [0, 65535] { R12988 += 1, R12912 += 1, R12850 += 1 };
  s3 -> s6 [0, 65535] { R12988 += 1, R12912 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R12988 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R12988 += 1 };
  s6 -> s6 [0, 65535] { R12988 += 1, R12912 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 70] { R12990 += 1, R12914 += 1, R12852 += 1, R12832 += 1 };
  s0 -> s2 [0, 65535] { R12990 += 1, R12914 += 1, R12851 += 1, R12852 += 1 };
  s0 -> s1 [0, 65535] { R12990 += 1, R12914 += 1, R12852 += 1 };
  s0 -> s0 [0, 65535] { R12989 += 1, R12990 += 1 };
  s0 -> s3 [0, 65535] { R12990 += 1, R12913 += 1, R12914 += 1 };
  s0 -> s1 [73, 65535] { R12990 += 1, R12914 += 1, R12852 += 1, R12832 += 1 };
  s1 -> s1 [0, 70] { R12990 += 1, R12914 += 1, R12852 += 1, R12832 += 1 };
  s1 -> s1 [0, 65535] { R12990 += 1, R12914 += 1, R12852 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R12990 += 1 };
  s1 -> s6 [0, 65535] { R12990 += 1, R12914 += 1 };
  s1 -> s1 [73, 65535] { R12990 += 1, R12914 += 1, R12852 += 1, R12832 += 1 };
  s2 -> s1 [0, 70] { R12990 += 1, R12914 += 1, R12852 += 1, R12832 += 1 };
  s2 -> s2 [0, 65535] { R12990 += 1, R12914 += 1, R12851 += 1, R12852 += 1 };
  s2 -> s1 [0, 65535] { R12990 += 1, R12914 += 1, R12852 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R12990 += 1 };
  s2 -> s1 [73, 65535] { R12990 += 1, R12914 += 1, R12852 += 1, R12832 += 1 };
  s3 -> s1 [0, 70] { R12990 += 1, R12914 += 1, R12852 += 1, R12832 += 1 };
  s3 -> s2 [0, 65535] { R12990 += 1, R12914 += 1, R12851 += 1, R12852 += 1 };
  s3 -> s1 [0, 65535] { R12990 += 1, R12914 += 1, R12852 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R12990 += 1, R12913 += 1, R12914 += 1 };
  s3 -> s1 [73, 65535] { R12990 += 1, R12914 += 1, R12852 += 1, R12832 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R12990 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R12990 += 1 };
  s6 -> s6 [0, 65535] { R12990 += 1, R12914 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R12992 += 1, R12916 += 1, R12871 += 1, R12872 += 1 };
  s0 -> s2 [0, 65535] { R12992 += 1, R12915 += 1, R12916 += 1 };
  s0 -> s0 [0, 65535] { R12991 += 1, R12992 += 1 };
  s0 -> s3 [0, 65535] { R12992 += 1, R12916 += 1, R12872 += 1, R21 += 1 };
  s1 -> s1 [0, 65535] { R12992 += 1, R12916 += 1, R12871 += 1, R12872 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R12992 += 1 };
  s1 -> s3 [0, 65535] { R12992 += 1, R12916 += 1, R12872 += 1, R21 += 1 };
  s2 -> s1 [0, 65535] { R12992 += 1, R12916 += 1, R12871 += 1, R12872 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R12992 += 1, R12915 += 1, R12916 += 1 };
  s2 -> s3 [0, 65535] { R12992 += 1, R12916 += 1, R12872 += 1, R21 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R12992 += 1, R12916 += 1 };
  s3 -> s6 [0, 65535] { R12992 += 1 };
  s3 -> s3 [0, 65535] { R12992 += 1, R12916 += 1, R12872 += 1, R21 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R12992 += 1, R12916 += 1 };
  s5 -> s6 [0, 65535] { R12992 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R12992 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 65] { R12994 += 1, R12918 += 1, R12874 += 1 };
  s0 -> s2 [0, 65535] { R12994 += 1, R12918 += 1, R12873 += 1, R12874 += 1 };
  s0 -> s3 [0, 65535] { R12994 += 1, R12917 += 1, R12918 += 1 };
  s0 -> s0 [0, 65535] { R12993 += 1, R12994 += 1 };
  s0 -> s4 [66, 66] { R12994 += 1, R12918 += 1, R12874 += 1 };
  s0 -> s5 [66, 66] { R12994 += 1, R12918 += 1, R12874 += 1 };
  s0 -> s6 [70, 70] { R12994 += 1, R12918 += 1, R12874 += 1 };
  s0 -> s1 [71, 65535] { R12994 += 1, R12918 += 1, R12874 += 1 };
  s1 -> s1 [0, 65] { R12994 += 1, R12918 += 1, R12874 += 1 };
  s1 -> s4 [66, 66] { R12994 += 1, R12918 += 1, R12874 += 1 };
  s1 -> s5 [66, 66] { R12994 += 1, R12918 += 1, R12874 += 1 };
  s1 -> s6 [70, 70] { R12994 += 1, R12918 += 1, R12874 += 1 };
  s1 -> s1 [71, 65535] { R12994 += 1, R12918 += 1, R12874 += 1 };
  s2 -> s1 [0, 65] { R12994 += 1, R12918 += 1, R12874 += 1 };
  s2 -> s2 [0, 65535] { R12994 += 1, R12918 += 1, R12873 += 1, R12874 += 1 };
  s2 -> s4 [66, 66] { R12994 += 1, R12918 += 1, R12874 += 1 };
  s2 -> s5 [66, 66] { R12994 += 1, R12918 += 1, R12874 += 1 };
  s2 -> s6 [70, 70] { R12994 += 1, R12918 += 1, R12874 += 1 };
  s2 -> s1 [71, 65535] { R12994 += 1, R12918 += 1, R12874 += 1 };
  s3 -> s1 [0, 65] { R12994 += 1, R12918 += 1, R12874 += 1 };
  s3 -> s2 [0, 65535] { R12994 += 1, R12918 += 1, R12873 += 1, R12874 += 1 };
  s3 -> s3 [0, 65535] { R12994 += 1, R12917 += 1, R12918 += 1 };
  s3 -> s4 [66, 66] { R12994 += 1, R12918 += 1, R12874 += 1 };
  s3 -> s5 [66, 66] { R12994 += 1, R12918 += 1, R12874 += 1 };
  s3 -> s6 [70, 70] { R12994 += 1, R12918 += 1, R12874 += 1 };
  s3 -> s1 [71, 65535] { R12994 += 1, R12918 += 1, R12874 += 1 };
  s5 -> s5 [0, 66] { R12994 += 1, R12918 += 1, R12874 += 1 };
  s5 -> s10 [70, 70] { R12994 += 1, R12918 += 1, R12874 += 1 };
  s5 -> s5 [71, 65535] { R12994 += 1, R12918 += 1, R12874 += 1 };
  s6 -> s6 [0, 65] { R12994 += 1, R12918 += 1, R12874 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R12994 += 1, R12918 += 1 };
  s6 -> s8 [0, 65535] { R12994 += 1 };
  s6 -> s9 [66, 66] { R12994 += 1, R12918 += 1, R12874 += 1 };
  s6 -> s10 [66, 66] { R12994 += 1, R12918 += 1, R12874 += 1 };
  s6 -> s6 [70, 65535] { R12994 += 1, R12918 += 1, R12874 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R12994 += 1 };
  s9 -> s9 [0, 65535] { R12994 += 1, R12918 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s8 [0, 65535] { R12994 += 1 };
  s10 -> s10 [0, 66] { R12994 += 1, R12918 += 1, R12874 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s10 [0, 65535] { R12994 += 1, R12918 += 1 };
  s10 -> s8 [0, 65535] { R12994 += 1 };
  s10 -> s10 [70, 65535] { R12994 += 1, R12918 += 1, R12874 += 1 };
  accepting s8, s9, s6, s7, s10;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65] { R12996 += 1, R12920 += 1, R12876 += 1, R77 += 1 };
  s0 -> s2 [0, 65535] { R12996 += 1, R12919 += 1, R12920 += 1 };
  s0 -> s3 [0, 65535] { R12996 += 1, R12920 += 1, R12875 += 1, R12876 += 1 };
  s0 -> s0 [0, 65535] { R12995 += 1, R12996 += 1 };
  s0 -> s4 [66, 66] { R12996 += 1, R12920 += 1, R12876 += 1, R77 += 1 };
  s0 -> s5 [66, 66] { R12996 += 1, R12920 += 1, R12876 += 1, R77 += 1 };
  s0 -> s1 [67, 65535] { R12996 += 1, R12920 += 1, R12876 += 1, R77 += 1 };
  s1 -> s1 [0, 65] { R12996 += 1, R12920 += 1, R12876 += 1, R77 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R12996 += 1 };
  s1 -> s1 [0, 65535] { R12996 += 1, R12920 += 1 };
  s1 -> s4 [66, 66] { R12996 += 1, R12920 += 1, R12876 += 1, R77 += 1 };
  s1 -> s5 [66, 66] { R12996 += 1, R12920 += 1, R12876 += 1, R77 += 1 };
  s1 -> s1 [67, 65535] { R12996 += 1, R12920 += 1, R12876 += 1, R77 += 1 };
  s2 -> s1 [0, 65] { R12996 += 1, R12920 += 1, R12876 += 1, R77 += 1 };
  s2 -> s2 [0, 65535] { R12996 += 1, R12919 += 1, R12920 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R12996 += 1, R12920 += 1, R12875 += 1, R12876 += 1 };
  s2 -> s4 [66, 66] { R12996 += 1, R12920 += 1, R12876 += 1, R77 += 1 };
  s2 -> s5 [66, 66] { R12996 += 1, R12920 += 1, R12876 += 1, R77 += 1 };
  s2 -> s1 [67, 65535] { R12996 += 1, R12920 += 1, R12876 += 1, R77 += 1 };
  s3 -> s1 [0, 65] { R12996 += 1, R12920 += 1, R12876 += 1, R77 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R12996 += 1 };
  s3 -> s3 [0, 65535] { R12996 += 1, R12920 += 1, R12875 += 1, R12876 += 1 };
  s3 -> s4 [66, 66] { R12996 += 1, R12920 += 1, R12876 += 1, R77 += 1 };
  s3 -> s5 [66, 66] { R12996 += 1, R12920 += 1, R12876 += 1, R77 += 1 };
  s3 -> s1 [67, 65535] { R12996 += 1, R12920 += 1, R12876 += 1, R77 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R12996 += 1, R12920 += 1 };
  s4 -> s7 [0, 65535] { R12996 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R12996 += 1 };
  s5 -> s8 [0, 65535] { R12996 += 1, R12920 += 1 };
  s5 -> s5 [0, 65535] { R12996 += 1, R12920 += 1, R12876 += 1, R77 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R12996 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R12996 += 1 };
  s8 -> s8 [0, 65535] { R12996 += 1, R12920 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 65] { R12998 += 1, R12922 += 1, R12878 += 1, R79 += 1 };
  s0 -> s2 [0, 65535] { R12998 += 1, R12921 += 1, R12922 += 1 };
  s0 -> s3 [0, 65535] { R12998 += 1, R12922 += 1, R12877 += 1, R12878 += 1 };
  s0 -> s0 [0, 65535] { R12997 += 1, R12998 += 1 };
  s0 -> s4 [66, 66] { R12998 += 1, R12922 += 1, R12878 += 1, R79 += 1 };
  s0 -> s5 [66, 66] { R12998 += 1, R12922 += 1, R12878 += 1, R79 += 1 };
  s0 -> s1 [67, 65535] { R12998 += 1, R12922 += 1, R12878 += 1, R79 += 1 };
  s1 -> s1 [0, 65] { R12998 += 1, R12922 += 1, R12878 += 1, R79 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R12998 += 1, R12922 += 1 };
  s1 -> s8 [0, 65535] { R12998 += 1 };
  s1 -> s4 [66, 66] { R12998 += 1, R12922 += 1, R12878 += 1, R79 += 1 };
  s1 -> s5 [66, 66] { R12998 += 1, R12922 += 1, R12878 += 1, R79 += 1 };
  s1 -> s1 [67, 65535] { R12998 += 1, R12922 += 1, R12878 += 1, R79 += 1 };
  s2 -> s1 [0, 65] { R12998 += 1, R12922 += 1, R12878 += 1, R79 += 1 };
  s2 -> s2 [0, 65535] { R12998 += 1, R12921 += 1, R12922 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s3 [0, 65535] { R12998 += 1, R12922 += 1, R12877 += 1, R12878 += 1 };
  s2 -> s4 [66, 66] { R12998 += 1, R12922 += 1, R12878 += 1, R79 += 1 };
  s2 -> s5 [66, 66] { R12998 += 1, R12922 += 1, R12878 += 1, R79 += 1 };
  s2 -> s1 [67, 65535] { R12998 += 1, R12922 += 1, R12878 += 1, R79 += 1 };
  s3 -> s1 [0, 65] { R12998 += 1, R12922 += 1, R12878 += 1, R79 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s8 [0, 65535] { R12998 += 1 };
  s3 -> s3 [0, 65535] { R12998 += 1, R12922 += 1, R12877 += 1, R12878 += 1 };
  s3 -> s4 [66, 66] { R12998 += 1, R12922 += 1, R12878 += 1, R79 += 1 };
  s3 -> s5 [66, 66] { R12998 += 1, R12922 += 1, R12878 += 1, R79 += 1 };
  s3 -> s1 [67, 65535] { R12998 += 1, R12922 += 1, R12878 += 1, R79 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R12998 += 1 };
  s4 -> s4 [0, 65535] { R12998 += 1, R12922 += 1 };
  s5 -> s6 [0, 65535] { R12998 += 1, R12922 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R12998 += 1 };
  s5 -> s5 [0, 65535] { R12998 += 1, R12922 += 1, R12878 += 1, R79 += 1 };
  s6 -> s6 [0, 65535] { R12998 += 1, R12922 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R12998 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R12998 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65] { R13000 += 1, R12924 += 1, R12880 += 1, R81 += 1, R82 += 1 };
  s0 -> s2 [0, 65535] { R13000 += 1, R12924 += 1, R12879 += 1, R12880 += 1 };
  s0 -> s3 [0, 65535] { R13000 += 1, R12923 += 1, R12924 += 1 };
  s0 -> s0 [0, 65535] { R12999 += 1, R13000 += 1 };
  s0 -> s4 [66, 66] { R13000 += 1, R12924 += 1, R12880 += 1, R81 += 1, R82 += 1 };
  s0 -> s5 [66, 66] { R13000 += 1, R12924 += 1, R12880 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [67, 65535] { R13000 += 1, R12924 += 1, R12880 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65] { R13000 += 1, R12924 += 1, R12880 += 1, R81 += 1, R82 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s8 [0, 65535] { R13000 += 1 };
  s1 -> s1 [0, 65535] { R13000 += 1, R12924 += 1 };
  s1 -> s4 [66, 66] { R13000 += 1, R12924 += 1, R12880 += 1, R81 += 1, R82 += 1 };
  s1 -> s5 [66, 66] { R13000 += 1, R12924 += 1, R12880 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [67, 65535] { R13000 += 1, R12924 += 1, R12880 += 1, R81 += 1, R82 += 1 };
  s2 -> s1 [0, 65] { R13000 += 1, R12924 += 1, R12880 += 1, R81 += 1, R82 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s8 [0, 65535] { R13000 += 1 };
  s2 -> s2 [0, 65535] { R13000 += 1, R12924 += 1, R12879 += 1, R12880 += 1 };
  s2 -> s4 [66, 66] { R13000 += 1, R12924 += 1, R12880 += 1, R81 += 1, R82 += 1 };
  s2 -> s5 [66, 66] { R13000 += 1, R12924 += 1, R12880 += 1, R81 += 1, R82 += 1 };
  s2 -> s1 [67, 65535] { R13000 += 1, R12924 += 1, R12880 += 1, R81 += 1, R82 += 1 };
  s3 -> s1 [0, 65] { R13000 += 1, R12924 += 1, R12880 += 1, R81 += 1, R82 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R13000 += 1, R12924 += 1, R12879 += 1, R12880 += 1 };
  s3 -> s3 [0, 65535] { R13000 += 1, R12923 += 1, R12924 += 1 };
  s3 -> s4 [66, 66] { R13000 += 1, R12924 += 1, R12880 += 1, R81 += 1, R82 += 1 };
  s3 -> s5 [66, 66] { R13000 += 1, R12924 += 1, R12880 += 1, R81 += 1, R82 += 1 };
  s3 -> s1 [67, 65535] { R13000 += 1, R12924 += 1, R12880 += 1, R81 += 1, R82 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R13000 += 1, R12924 += 1 };
  s4 -> s8 [0, 65535] { R13000 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R13000 += 1, R12924 += 1 };
  s5 -> s8 [0, 65535] { R13000 += 1 };
  s5 -> s5 [0, 65535] { R13000 += 1, R12924 += 1, R12880 += 1, R81 += 1, R82 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R13000 += 1, R12924 += 1 };
  s7 -> s8 [0, 65535] { R13000 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R13000 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 65] { R13002 += 1, R12926 += 1, R12882 += 1, R6638 += 1, R6639 += 1 };
  s0 -> s2 [0, 65] { R13002 += 1, R12926 += 1, R12882 += 1, R6637 += 1, R6638 += 1 };
  s0 -> s3 [0, 65535] { R13002 += 1, R12925 += 1, R12926 += 1 };
  s0 -> s0 [0, 65535] { R13001 += 1, R13002 += 1 };
  s0 -> s4 [0, 65535] { R13002 += 1, R12926 += 1, R12881 += 1, R12882 += 1 };
  s0 -> s5 [66, 66] { R13002 += 1, R12926 += 1, R12882 += 1, R6637 += 1, R6638 += 1 };
  s0 -> s6 [66, 66] { R13002 += 1, R12926 += 1, R12882 += 1, R6638 += 1, R6639 += 1 };
  s0 -> s7 [66, 66] { R13002 += 1, R12926 += 1, R12882 += 1, R6637 += 1, R6638 += 1 };
  s0 -> s8 [66, 66] { R13002 += 1, R12926 += 1, R12882 += 1, R6638 += 1, R6639 += 1 };
  s0 -> s1 [67, 65535] { R13002 += 1, R12926 += 1, R12882 += 1, R6638 += 1, R6639 += 1 };
  s0 -> s2 [67, 65535] { R13002 += 1, R12926 += 1, R12882 += 1, R6637 += 1, R6638 += 1 };
  s1 -> s1 [0, 65] { R13002 += 1, R12926 += 1, R12882 += 1, R6638 += 1, R6639 += 1 };
  s1 -> s10 [0, 65535];
  s1 -> s11 [0, 65535] { R13002 += 1 };
  s1 -> s1 [0, 65535] { R13002 += 1, R12926 += 1 };
  s1 -> s6 [66, 66] { R13002 += 1, R12926 += 1, R12882 += 1, R6638 += 1, R6639 += 1 };
  s1 -> s8 [66, 66] { R13002 += 1, R12926 += 1, R12882 += 1, R6638 += 1, R6639 += 1 };
  s1 -> s1 [67, 65535] { R13002 += 1, R12926 += 1, R12882 += 1, R6638 += 1, R6639 += 1 };
  s2 -> s1 [0, 65] { R13002 += 1, R12926 += 1, R12882 += 1, R6638 += 1, R6639 += 1 };
  s2 -> s2 [0, 65] { R13002 += 1, R12926 += 1, R12882 += 1, R6637 += 1, R6638 += 1 };
  s2 -> s5 [66, 66] { R13002 += 1, R12926 += 1, R12882 += 1, R6637 += 1, R6638 += 1 };
  s2 -> s6 [66, 66] { R13002 += 1, R12926 += 1, R12882 += 1, R6638 += 1, R6639 += 1 };
  s2 -> s7 [66, 66] { R13002 += 1, R12926 += 1, R12882 += 1, R6637 += 1, R6638 += 1 };
  s2 -> s8 [66, 66] { R13002 += 1, R12926 += 1, R12882 += 1, R6638 += 1, R6639 += 1 };
  s2 -> s1 [67, 65535] { R13002 += 1, R12926 += 1, R12882 += 1, R6638 += 1, R6639 += 1 };
  s2 -> s2 [67, 65535] { R13002 += 1, R12926 += 1, R12882 += 1, R6637 += 1, R6638 += 1 };
  s3 -> s1 [0, 65] { R13002 += 1, R12926 += 1, R12882 += 1, R6638 += 1, R6639 += 1 };
  s3 -> s2 [0, 65] { R13002 += 1, R12926 += 1, R12882 += 1, R6637 += 1, R6638 += 1 };
  s3 -> s3 [0, 65535] { R13002 += 1, R12925 += 1, R12926 += 1 };
  s3 -> s4 [0, 65535] { R13002 += 1, R12926 += 1, R12881 += 1, R12882 += 1 };
  s3 -> s5 [66, 66] { R13002 += 1, R12926 += 1, R12882 += 1, R6637 += 1, R6638 += 1 };
  s3 -> s6 [66, 66] { R13002 += 1, R12926 += 1, R12882 += 1, R6638 += 1, R6639 += 1 };
  s3 -> s7 [66, 66] { R13002 += 1, R12926 += 1, R12882 += 1, R6637 += 1, R6638 += 1 };
  s3 -> s8 [66, 66] { R13002 += 1, R12926 += 1, R12882 += 1, R6638 += 1, R6639 += 1 };
  s3 -> s1 [67, 65535] { R13002 += 1, R12926 += 1, R12882 += 1, R6638 += 1, R6639 += 1 };
  s3 -> s2 [67, 65535] { R13002 += 1, R12926 += 1, R12882 += 1, R6637 += 1, R6638 += 1 };
  s4 -> s1 [0, 65] { R13002 += 1, R12926 += 1, R12882 += 1, R6638 += 1, R6639 += 1 };
  s4 -> s2 [0, 65] { R13002 += 1, R12926 += 1, R12882 += 1, R6637 += 1, R6638 += 1 };
  s4 -> s4 [0, 65535] { R13002 += 1, R12926 += 1, R12881 += 1, R12882 += 1 };
  s4 -> s5 [66, 66] { R13002 += 1, R12926 += 1, R12882 += 1, R6637 += 1, R6638 += 1 };
  s4 -> s6 [66, 66] { R13002 += 1, R12926 += 1, R12882 += 1, R6638 += 1, R6639 += 1 };
  s4 -> s7 [66, 66] { R13002 += 1, R12926 += 1, R12882 += 1, R6637 += 1, R6638 += 1 };
  s4 -> s8 [66, 66] { R13002 += 1, R12926 += 1, R12882 += 1, R6638 += 1, R6639 += 1 };
  s4 -> s1 [67, 65535] { R13002 += 1, R12926 += 1, R12882 += 1, R6638 += 1, R6639 += 1 };
  s4 -> s2 [67, 65535] { R13002 += 1, R12926 += 1, R12882 += 1, R6637 += 1, R6638 += 1 };
  s6 -> s10 [0, 65535];
  s6 -> s6 [0, 65535] { R13002 += 1, R12926 += 1 };
  s6 -> s11 [0, 65535] { R13002 += 1 };
  s7 -> s7 [0, 65535] { R13002 += 1, R12926 += 1, R12882 += 1, R6637 += 1, R6638 += 1 };
  s7 -> s8 [0, 65535] { R13002 += 1, R12926 += 1, R12882 += 1, R6638 += 1, R6639 += 1 };
  s8 -> s9 [0, 65535] { R13002 += 1, R12926 += 1 };
  s8 -> s10 [0, 65535];
  s8 -> s11 [0, 65535] { R13002 += 1 };
  s8 -> s8 [0, 65535] { R13002 += 1, R12926 += 1, R12882 += 1, R6638 += 1, R6639 += 1 };
  s9 -> s9 [0, 65535] { R13002 += 1, R12926 += 1 };
  s9 -> s10 [0, 65535];
  s9 -> s11 [0, 65535] { R13002 += 1 };
  s10 -> s10 [0, 65535];
  s11 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R13002 += 1 };
  accepting s8, s9, s6, s1, s10, s11;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 65] { R13004 += 1, R12928 += 1, R12884 += 1, R11008 += 1 };
  s0 -> s2 [0, 65] { R13004 += 1, R12928 += 1, R12884 += 1, R11007 += 1, R11008 += 1 };
  s0 -> s3 [0, 65535] { R13004 += 1, R12927 += 1, R12928 += 1 };
  s0 -> s0 [0, 65535] { R13003 += 1, R13004 += 1 };
  s0 -> s4 [0, 65535] { R13004 += 1, R12928 += 1, R12883 += 1, R12884 += 1 };
  s0 -> s5 [66, 66] { R13004 += 1, R12928 += 1, R12884 += 1, R11007 += 1, R11008 += 1 };
  s0 -> s6 [66, 66] { R13004 += 1, R12928 += 1, R12884 += 1, R11007 += 1, R11008 += 1 };
  s0 -> s7 [66, 66] { R13004 += 1, R12928 += 1, R12884 += 1, R11008 += 1 };
  s0 -> s8 [66, 66] { R13004 += 1, R12928 += 1, R12884 += 1, R11008 += 1 };
  s0 -> s1 [67, 70] { R13004 += 1, R12928 += 1, R12884 += 1, R11008 += 1 };
  s0 -> s2 [67, 65535] { R13004 += 1, R12928 += 1, R12884 += 1, R11007 += 1, R11008 += 1 };
  s0 -> s1 [73, 65535] { R13004 += 1, R12928 += 1, R12884 += 1, R11008 += 1 };
  s1 -> s1 [0, 65] { R13004 += 1, R12928 += 1, R12884 += 1, R11008 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s1 [0, 65535] { R13004 += 1, R12928 += 1 };
  s1 -> s10 [0, 65535] { R13004 += 1 };
  s1 -> s7 [66, 66] { R13004 += 1, R12928 += 1, R12884 += 1, R11008 += 1 };
  s1 -> s8 [66, 66] { R13004 += 1, R12928 += 1, R12884 += 1, R11008 += 1 };
  s1 -> s1 [67, 70] { R13004 += 1, R12928 += 1, R12884 += 1, R11008 += 1 };
  s1 -> s1 [73, 65535] { R13004 += 1, R12928 += 1, R12884 += 1, R11008 += 1 };
  s2 -> s1 [0, 65] { R13004 += 1, R12928 += 1, R12884 += 1, R11008 += 1 };
  s2 -> s2 [0, 65] { R13004 += 1, R12928 += 1, R12884 += 1, R11007 += 1, R11008 += 1 };
  s2 -> s5 [66, 66] { R13004 += 1, R12928 += 1, R12884 += 1, R11007 += 1, R11008 += 1 };
  s2 -> s6 [66, 66] { R13004 += 1, R12928 += 1, R12884 += 1, R11007 += 1, R11008 += 1 };
  s2 -> s7 [66, 66] { R13004 += 1, R12928 += 1, R12884 += 1, R11008 += 1 };
  s2 -> s8 [66, 66] { R13004 += 1, R12928 += 1, R12884 += 1, R11008 += 1 };
  s2 -> s1 [67, 70] { R13004 += 1, R12928 += 1, R12884 += 1, R11008 += 1 };
  s2 -> s2 [67, 65535] { R13004 += 1, R12928 += 1, R12884 += 1, R11007 += 1, R11008 += 1 };
  s2 -> s1 [73, 65535] { R13004 += 1, R12928 += 1, R12884 += 1, R11008 += 1 };
  s3 -> s1 [0, 65] { R13004 += 1, R12928 += 1, R12884 += 1, R11008 += 1 };
  s3 -> s2 [0, 65] { R13004 += 1, R12928 += 1, R12884 += 1, R11007 += 1, R11008 += 1 };
  s3 -> s3 [0, 65535] { R13004 += 1, R12927 += 1, R12928 += 1 };
  s3 -> s4 [0, 65535] { R13004 += 1, R12928 += 1, R12883 += 1, R12884 += 1 };
  s3 -> s5 [66, 66] { R13004 += 1, R12928 += 1, R12884 += 1, R11007 += 1, R11008 += 1 };
  s3 -> s6 [66, 66] { R13004 += 1, R12928 += 1, R12884 += 1, R11007 += 1, R11008 += 1 };
  s3 -> s7 [66, 66] { R13004 += 1, R12928 += 1, R12884 += 1, R11008 += 1 };
  s3 -> s8 [66, 66] { R13004 += 1, R12928 += 1, R12884 += 1, R11008 += 1 };
  s3 -> s1 [67, 70] { R13004 += 1, R12928 += 1, R12884 += 1, R11008 += 1 };
  s3 -> s2 [67, 65535] { R13004 += 1, R12928 += 1, R12884 += 1, R11007 += 1, R11008 += 1 };
  s3 -> s1 [73, 65535] { R13004 += 1, R12928 += 1, R12884 += 1, R11008 += 1 };
  s4 -> s1 [0, 65] { R13004 += 1, R12928 += 1, R12884 += 1, R11008 += 1 };
  s4 -> s2 [0, 65] { R13004 += 1, R12928 += 1, R12884 += 1, R11007 += 1, R11008 += 1 };
  s4 -> s4 [0, 65535] { R13004 += 1, R12928 += 1, R12883 += 1, R12884 += 1 };
  s4 -> s5 [66, 66] { R13004 += 1, R12928 += 1, R12884 += 1, R11007 += 1, R11008 += 1 };
  s4 -> s6 [66, 66] { R13004 += 1, R12928 += 1, R12884 += 1, R11007 += 1, R11008 += 1 };
  s4 -> s7 [66, 66] { R13004 += 1, R12928 += 1, R12884 += 1, R11008 += 1 };
  s4 -> s8 [66, 66] { R13004 += 1, R12928 += 1, R12884 += 1, R11008 += 1 };
  s4 -> s1 [67, 70] { R13004 += 1, R12928 += 1, R12884 += 1, R11008 += 1 };
  s4 -> s2 [67, 65535] { R13004 += 1, R12928 += 1, R12884 += 1, R11007 += 1, R11008 += 1 };
  s4 -> s1 [73, 65535] { R13004 += 1, R12928 += 1, R12884 += 1, R11008 += 1 };
  s5 -> s7 [0, 70] { R13004 += 1, R12928 += 1, R12884 += 1, R11008 += 1 };
  s5 -> s5 [0, 65535] { R13004 += 1, R12928 += 1, R12884 += 1, R11007 += 1, R11008 += 1 };
  s5 -> s7 [73, 65535] { R13004 += 1, R12928 += 1, R12884 += 1, R11008 += 1 };
  s7 -> s7 [0, 70] { R13004 += 1, R12928 += 1, R12884 += 1, R11008 += 1 };
  s7 -> s9 [0, 65535];
  s7 -> s7 [0, 65535] { R13004 += 1, R12928 += 1 };
  s7 -> s10 [0, 65535] { R13004 += 1 };
  s7 -> s7 [73, 65535] { R13004 += 1, R12928 += 1, R12884 += 1, R11008 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R13004 += 1, R12928 += 1 };
  s8 -> s10 [0, 65535] { R13004 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R13004 += 1 };
  accepting s8, s9, s1, s7, s10;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 65] { R13006 += 1, R12930 += 1, R12886 += 1, R12463 += 1, R12464 += 1 };
  s0 -> s2 [0, 65] { R13006 += 1, R12930 += 1, R12886 += 1, R12464 += 1, R12465 += 1 };
  s0 -> s3 [0, 65535] { R13006 += 1, R12930 += 1, R12885 += 1, R12886 += 1 };
  s0 -> s0 [0, 65535] { R13005 += 1, R13006 += 1 };
  s0 -> s4 [0, 65535] { R13006 += 1, R12929 += 1, R12930 += 1 };
  s0 -> s5 [66, 66] { R13006 += 1, R12930 += 1, R12886 += 1, R12464 += 1, R12465 += 1 };
  s0 -> s6 [66, 66] { R13006 += 1, R12930 += 1, R12886 += 1, R12463 += 1, R12464 += 1 };
  s0 -> s7 [66, 66] { R13006 += 1, R12930 += 1, R12886 += 1, R12463 += 1, R12464 += 1 };
  s0 -> s8 [66, 66] { R13006 += 1, R12930 += 1, R12886 += 1, R12464 += 1, R12465 += 1 };
  s0 -> s1 [67, 65535] { R13006 += 1, R12930 += 1, R12886 += 1, R12463 += 1, R12464 += 1 };
  s0 -> s2 [67, 65535] { R13006 += 1, R12930 += 1, R12886 += 1, R12464 += 1, R12465 += 1 };
  s1 -> s1 [0, 65] { R13006 += 1, R12930 += 1, R12886 += 1, R12463 += 1, R12464 += 1 };
  s1 -> s2 [0, 65] { R13006 += 1, R12930 += 1, R12886 += 1, R12464 += 1, R12465 += 1 };
  s1 -> s5 [66, 66] { R13006 += 1, R12930 += 1, R12886 += 1, R12464 += 1, R12465 += 1 };
  s1 -> s6 [66, 66] { R13006 += 1, R12930 += 1, R12886 += 1, R12463 += 1, R12464 += 1 };
  s1 -> s7 [66, 66] { R13006 += 1, R12930 += 1, R12886 += 1, R12463 += 1, R12464 += 1 };
  s1 -> s8 [66, 66] { R13006 += 1, R12930 += 1, R12886 += 1, R12464 += 1, R12465 += 1 };
  s1 -> s1 [67, 65535] { R13006 += 1, R12930 += 1, R12886 += 1, R12463 += 1, R12464 += 1 };
  s1 -> s2 [67, 65535] { R13006 += 1, R12930 += 1, R12886 += 1, R12464 += 1, R12465 += 1 };
  s2 -> s2 [0, 65] { R13006 += 1, R12930 += 1, R12886 += 1, R12464 += 1, R12465 += 1 };
  s2 -> s13 [0, 65] { R13006 += 1, R12930 += 1, R12886 += 1 };
  s2 -> s14 [66, 66] { R13006 += 1, R12930 += 1, R12886 += 1 };
  s2 -> s5 [66, 66] { R13006 += 1, R12930 += 1, R12886 += 1, R12464 += 1, R12465 += 1 };
  s2 -> s9 [66, 66] { R13006 += 1, R12930 += 1, R12886 += 1 };
  s2 -> s8 [66, 66] { R13006 += 1, R12930 += 1, R12886 += 1, R12464 += 1, R12465 += 1 };
  s2 -> s2 [67, 65535] { R13006 += 1, R12930 += 1, R12886 += 1, R12464 += 1, R12465 += 1 };
  s2 -> s13 [67, 65535] { R13006 += 1, R12930 += 1, R12886 += 1 };
  s3 -> s1 [0, 65] { R13006 += 1, R12930 += 1, R12886 += 1, R12463 += 1, R12464 += 1 };
  s3 -> s2 [0, 65] { R13006 += 1, R12930 += 1, R12886 += 1, R12464 += 1, R12465 += 1 };
  s3 -> s3 [0, 65535] { R13006 += 1, R12930 += 1, R12885 += 1, R12886 += 1 };
  s3 -> s5 [66, 66] { R13006 += 1, R12930 += 1, R12886 += 1, R12464 += 1, R12465 += 1 };
  s3 -> s6 [66, 66] { R13006 += 1, R12930 += 1, R12886 += 1, R12463 += 1, R12464 += 1 };
  s3 -> s7 [66, 66] { R13006 += 1, R12930 += 1, R12886 += 1, R12463 += 1, R12464 += 1 };
  s3 -> s8 [66, 66] { R13006 += 1, R12930 += 1, R12886 += 1, R12464 += 1, R12465 += 1 };
  s3 -> s1 [67, 65535] { R13006 += 1, R12930 += 1, R12886 += 1, R12463 += 1, R12464 += 1 };
  s3 -> s2 [67, 65535] { R13006 += 1, R12930 += 1, R12886 += 1, R12464 += 1, R12465 += 1 };
  s4 -> s1 [0, 65] { R13006 += 1, R12930 += 1, R12886 += 1, R12463 += 1, R12464 += 1 };
  s4 -> s2 [0, 65] { R13006 += 1, R12930 += 1, R12886 += 1, R12464 += 1, R12465 += 1 };
  s4 -> s3 [0, 65535] { R13006 += 1, R12930 += 1, R12885 += 1, R12886 += 1 };
  s4 -> s4 [0, 65535] { R13006 += 1, R12929 += 1, R12930 += 1 };
  s4 -> s5 [66, 66] { R13006 += 1, R12930 += 1, R12886 += 1, R12464 += 1, R12465 += 1 };
  s4 -> s6 [66, 66] { R13006 += 1, R12930 += 1, R12886 += 1, R12463 += 1, R12464 += 1 };
  s4 -> s7 [66, 66] { R13006 += 1, R12930 += 1, R12886 += 1, R12463 += 1, R12464 += 1 };
  s4 -> s8 [66, 66] { R13006 += 1, R12930 += 1, R12886 += 1, R12464 += 1, R12465 += 1 };
  s4 -> s1 [67, 65535] { R13006 += 1, R12930 += 1, R12886 += 1, R12463 += 1, R12464 += 1 };
  s4 -> s2 [67, 65535] { R13006 += 1, R12930 += 1, R12886 += 1, R12464 += 1, R12465 += 1 };
  s7 -> s7 [0, 65535] { R13006 += 1, R12930 += 1, R12886 += 1, R12463 += 1, R12464 += 1 };
  s7 -> s8 [0, 65535] { R13006 += 1, R12930 += 1, R12886 += 1, R12464 += 1, R12465 += 1 };
  s8 -> s9 [0, 65535] { R13006 += 1, R12930 += 1, R12886 += 1 };
  s8 -> s8 [0, 65535] { R13006 += 1, R12930 += 1, R12886 += 1, R12464 += 1, R12465 += 1 };
  s9 -> s9 [0, 65535] { R13006 += 1, R12930 += 1, R12886 += 1 };
  s9 -> s10 [0, 65535] { R13006 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s12 [0, 65535] { R13006 += 1, R12930 += 1 };
  s10 -> s10 [0, 65535] { R13006 += 1 };
  s10 -> s11 [0, 65535];
  s11 -> s11 [0, 65535];
  s12 -> s10 [0, 65535] { R13006 += 1 };
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R13006 += 1, R12930 += 1 };
  s13 -> s13 [0, 65] { R13006 += 1, R12930 += 1, R12886 += 1 };
  s13 -> s10 [0, 65535] { R13006 += 1 };
  s13 -> s11 [0, 65535];
  s13 -> s13 [0, 65535] { R13006 += 1, R12930 += 1 };
  s13 -> s14 [66, 66] { R13006 += 1, R12930 += 1, R12886 += 1 };
  s13 -> s9 [66, 66] { R13006 += 1, R12930 += 1, R12886 += 1 };
  s13 -> s13 [67, 65535] { R13006 += 1, R12930 += 1, R12886 += 1 };
  s14 -> s14 [0, 65535] { R13006 += 1, R12930 += 1 };
  s14 -> s10 [0, 65535] { R13006 += 1 };
  s14 -> s11 [0, 65535];
  accepting s12, s13, s9, s14, s10, s11;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 65] { R13008 += 1, R12932 += 1, R12888 += 1, R12829 += 1, R12830 += 1 };
  s0 -> s2 [0, 65] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s0 -> s0 [0, 65535] { R13007 += 1, R13008 += 1 };
  s0 -> s3 [0, 65535] { R13008 += 1, R12932 += 1, R12887 += 1, R12888 += 1 };
  s0 -> s4 [0, 65535] { R13008 += 1, R12931 += 1, R12932 += 1 };
  s0 -> s5 [66, 66] { R13008 += 1, R12932 += 1, R12888 += 1, R12829 += 1, R12830 += 1 };
  s0 -> s6 [66, 66] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s0 -> s7 [66, 66] { R13008 += 1, R12932 += 1, R12888 += 1, R12829 += 1, R12830 += 1 };
  s0 -> s8 [66, 66] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s0 -> s2 [67, 69] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s0 -> s1 [67, 65535] { R13008 += 1, R12932 += 1, R12888 += 1, R12829 += 1, R12830 += 1 };
  s0 -> s9 [70, 70] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s0 -> s2 [73, 65535] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s1 -> s1 [0, 65] { R13008 += 1, R12932 += 1, R12888 += 1, R12829 += 1, R12830 += 1 };
  s1 -> s2 [0, 65] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s1 -> s5 [66, 66] { R13008 += 1, R12932 += 1, R12888 += 1, R12829 += 1, R12830 += 1 };
  s1 -> s6 [66, 66] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s1 -> s7 [66, 66] { R13008 += 1, R12932 += 1, R12888 += 1, R12829 += 1, R12830 += 1 };
  s1 -> s8 [66, 66] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s1 -> s2 [67, 69] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s1 -> s1 [67, 65535] { R13008 += 1, R12932 += 1, R12888 += 1, R12829 += 1, R12830 += 1 };
  s1 -> s9 [70, 70] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s1 -> s2 [73, 65535] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s2 -> s2 [0, 65] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s2 -> s6 [66, 66] { R13008 += 1, R12932 += 1, R12888 += 1 };
  s2 -> s8 [66, 66] { R13008 += 1, R12932 += 1, R12888 += 1 };
  s2 -> s2 [67, 69] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s2 -> s2 [67, 65535] { R13008 += 1, R12932 += 1, R12888 += 1 };
  s2 -> s9 [70, 70] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s2 -> s2 [73, 65535] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s3 -> s1 [0, 65] { R13008 += 1, R12932 += 1, R12888 += 1, R12829 += 1, R12830 += 1 };
  s3 -> s2 [0, 65] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s3 -> s3 [0, 65535] { R13008 += 1, R12932 += 1, R12887 += 1, R12888 += 1 };
  s3 -> s5 [66, 66] { R13008 += 1, R12932 += 1, R12888 += 1, R12829 += 1, R12830 += 1 };
  s3 -> s6 [66, 66] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s3 -> s7 [66, 66] { R13008 += 1, R12932 += 1, R12888 += 1, R12829 += 1, R12830 += 1 };
  s3 -> s8 [66, 66] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s3 -> s2 [67, 69] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s3 -> s1 [67, 65535] { R13008 += 1, R12932 += 1, R12888 += 1, R12829 += 1, R12830 += 1 };
  s3 -> s9 [70, 70] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s3 -> s2 [73, 65535] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s4 -> s1 [0, 65] { R13008 += 1, R12932 += 1, R12888 += 1, R12829 += 1, R12830 += 1 };
  s4 -> s2 [0, 65] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s4 -> s3 [0, 65535] { R13008 += 1, R12932 += 1, R12887 += 1, R12888 += 1 };
  s4 -> s4 [0, 65535] { R13008 += 1, R12931 += 1, R12932 += 1 };
  s4 -> s5 [66, 66] { R13008 += 1, R12932 += 1, R12888 += 1, R12829 += 1, R12830 += 1 };
  s4 -> s6 [66, 66] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s4 -> s7 [66, 66] { R13008 += 1, R12932 += 1, R12888 += 1, R12829 += 1, R12830 += 1 };
  s4 -> s8 [66, 66] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s4 -> s2 [67, 69] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s4 -> s1 [67, 65535] { R13008 += 1, R12932 += 1, R12888 += 1, R12829 += 1, R12830 += 1 };
  s4 -> s9 [70, 70] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s4 -> s2 [73, 65535] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s7 -> s8 [0, 69] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s7 -> s7 [0, 65535] { R13008 += 1, R12932 += 1, R12888 += 1, R12829 += 1, R12830 += 1 };
  s7 -> s12 [70, 70] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s7 -> s8 [73, 65535] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s8 -> s8 [0, 69] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s8 -> s8 [0, 65535] { R13008 += 1, R12932 += 1, R12888 += 1 };
  s8 -> s12 [70, 70] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s8 -> s8 [73, 65535] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s9 -> s9 [0, 65] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s9 -> s10 [0, 65535];
  s9 -> s9 [0, 65535] { R13008 += 1, R12932 += 1 };
  s9 -> s11 [0, 65535] { R13008 += 1 };
  s9 -> s12 [66, 66] { R13008 += 1, R12932 += 1, R12888 += 1 };
  s9 -> s13 [66, 66] { R13008 += 1, R12932 += 1, R12888 += 1 };
  s9 -> s9 [67, 70] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s9 -> s9 [67, 65535] { R13008 += 1, R12932 += 1, R12888 += 1 };
  s9 -> s9 [73, 65535] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s10 -> s10 [0, 65535];
  s11 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R13008 += 1 };
  s12 -> s12 [0, 70] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s12 -> s14 [0, 65535] { R13008 += 1, R12932 += 1 };
  s12 -> s10 [0, 65535];
  s12 -> s12 [0, 65535] { R13008 += 1, R12932 += 1, R12888 += 1 };
  s12 -> s11 [0, 65535] { R13008 += 1 };
  s12 -> s12 [73, 65535] { R13008 += 1, R12932 += 1, R12888 += 1, R12830 += 1 };
  s13 -> s10 [0, 65535];
  s13 -> s11 [0, 65535] { R13008 += 1 };
  s13 -> s13 [0, 65535] { R13008 += 1, R12932 += 1 };
  s14 -> s14 [0, 65535] { R13008 += 1, R12932 += 1 };
  s14 -> s10 [0, 65535];
  s14 -> s11 [0, 65535] { R13008 += 1 };
  accepting s12, s13, s9, s14, s10, s11;
};
};
synchronised {  // Automata constraining P37
automaton P37_0 {
  init s0;
  s0 -> s1 [9, 9];
  accepting s1;
};
};
synchronised {  // Automata constraining P38
automaton P38_0 {
  init s0;
  s0 -> s1 [10, 10];
  accepting s1;
};
};
synchronised {  // Automata constraining P36
automaton P36_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
constraint R1 = R12848 && R2 = R12932 && R3 - R13008 = 1 && R23 - R12932 = -1 && R24 = R12932 && R25 - R12932 = -1 && R26 = R12932 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R31 = R13008 && R32 - R13008 = 1 && R33 = R13008 && R34 - R13008 = 1 && R35 = 0 && R36 = 1 && R37 = 0 && R38 = 1 && R49 + R78 + R77 + -1*R11010 + -1*R11008 - R64 = 0 && R63 + R11009 + R11007 = 0 && R12847 = 0 && R12873 = 0 && R12874 = 0 && R12881 = 0 && R12882 = 0 && R12883 = 0 && R12884 = 0 && R12885 = 0 && R12886 = 0 && R12887 = 0 && R12888 = 0 && R12889 = 0 && R12890 = R12932 && R12891 = 0 && R12892 = R12932 && R12893 = 0 && R12894 = R12932 && R12895 = 0 && R12896 = R12932 && R12897 = 0 && R12898 = R12932 && R12899 = 0 && R12900 = R12932 && R12901 = 0 && R12902 = R12932 && R12903 = 0 && R12904 = R12932 && R12905 = 0 && R12906 = R12932 && R12907 = 0 && R12908 = R12932 && R12909 = 0 && R12910 = R12932 && R12911 = 0 && R12912 = R12932 && R12913 = 0 && R12914 = R12932 && R12915 = 0 && R12916 = R12932 && R12917 = 0 && R12918 = R12932 && R12919 = 0 && R12920 = R12932 && R12921 = 0 && R12922 = R12932 && R12923 = 0 && R12924 = R12932 && R12925 = 0 && R12926 = R12932 && R12927 = 0 && R12928 = R12932 && R12929 = 0 && R12930 = R12932 && R12931 = 0 && R12933 = 0 && R12934 = R13008 && R12935 = 0 && R12936 = R13008 && R12937 = 0 && R12938 = R13008 && R12939 = 0 && R12940 = R13008 && R12941 = 0 && R12942 = R13008 && R12943 = 0 && R12944 = R13008 && R12945 = 0 && R12946 = R13008 && R12947 = 0 && R12948 = R13008 && R12949 = 0 && R12950 = R13008 && R12951 = 0 && R12952 = R13008 && R12953 = 0 && R12954 = R13008 && R12955 = 0 && R12956 = R13008 && R12957 = 0 && R12958 = R13008 && R12959 = 0 && R12960 = R13008 && R12961 = 0 && R12962 = R13008 && R12963 = 0 && R12964 = R13008 && R12965 = 0 && R12966 = R13008 && R12967 = 0 && R12968 = R13008 && R12969 = 0 && R12970 = R13008 && R12971 = 0 && R12972 = R13008 && R12973 = 0 && R12974 = R13008 && R12975 = 0 && R12976 = R13008 && R12977 = 0 && R12978 = R13008 && R12979 = 0 && R12980 = R13008 && R12981 = 0 && R12982 = R13008 && R12983 = 0 && R12984 = R13008 && R12985 = 0 && R12986 = R13008 && R12987 = 0 && R12988 = R13008 && R12989 = 0 && R12990 = R13008 && R12991 = 0 && R12992 = R13008 && R12993 = 0 && R12994 = R13008 && R12995 = 0 && R12996 = R13008 && R12997 = 0 && R12998 = R13008 && R12999 = 0 && R13000 = R13008 && R13001 = 0 && R13002 = R13008 && R13003 = 0 && R13004 = R13008 && R13005 = 0 && R13006 = R13008 && R13007 = 0 && R11 < 1 && R14 < 1 && R17 < 1 && R51 + R80 + R79 < 1 && -1*R11010 + -1*R11008 - R64 < 1 && -1 < R12848 && 0 < R12932 && -1 < R13008 && (R59 + R6642 + R6639 != 0 || ((R53 + R83 + R81 != 0 || R54 + R84 + R82 + -1*R11010 + -1*R11008 - R64 = 0 || R64 + R11010 + R11008 < 1) && (R53 + R83 + R81 = 0 || R64 + R11010 + R11008 < 1))) && (R59 + R6642 + R6639 != 0 || ((R57 + R6640 + R6637 != 0 || R58 + R6641 + R6638 + -1*R11010 + -1*R11008 - R64 = 0 || R64 + R11010 + R11008 < 1) && (R57 + R6640 + R6637 = 0 || R64 + R11010 + R11008 < 1))) && (R12833 != 0 || R12834 = R12848 || (R20 = 0 && R12848 = 0)) && (R12835 != 0 || R12836 = R12848 || (R20 = 0 && R12848 = 0)) && (R12837 != 0 || R12838 = R12848 || (R20 = 0 && R12848 = 0)) && (R12839 != 0 || R12840 = R12848 || (R20 = 0 && R12848 = 0)) && (R12841 != 0 || R12842 = R12848 || (R20 = 0 && R12848 = 0)) && (R12843 != 0 || R12844 = R12848 || (R20 = 0 && R12848 = 0)) && (R12845 != 0 || R12846 = R12848 || (R20 = 0 && R12848 = 0)) && (R12849 != 0 || R12848 = R12850 || (R20 = 0 && R12848 = 0)) && (R12851 != 0 || R12848 = R12852 || (R20 = 0 && R12848 = 0)) && (R21 = 0 || (R12871 = 0 && R12872 = 0)) && (R21 = 0 || (R12875 = 0 && R12876 = 0)) && (R21 = 0 || (R12877 = 0 && R12878 = 0)) && (R21 = 0 || (R12879 = 0 && R12880 = 0)) && (R22 = 0 || (R12853 = 0 && R12854 = 0)) && (R22 = 0 || (R12855 = 0 && R12856 = 0)) && (R22 = 0 || (R12857 = 0 && R12858 = 0)) && (R22 = 0 || (R12859 = 0 && R12860 = 0)) && (R22 = 0 || (R12861 = 0 && R12862 = 0)) && (R22 = 0 || (R12863 = 0 && R12864 = 0)) && (R22 = 0 || (R12865 = 0 && R12866 = 0)) && (R22 = 0 || (R12867 = 0 && R12868 = 0)) && (R22 = 0 || (R12869 = 0 && R12870 = 0)) && (R59 + R6642 + R6639 = 0 || (R53 + R83 + R81 = 0 && R54 + R84 + R82 + -1*R11010 + -1*R11008 - R64 = 0)) && (R59 + R6642 + R6639 = 0 || (R57 + R6640 + R6637 = 0 && R58 + R6641 + R6638 + -1*R11010 + -1*R11008 - R64 = 0)) && (R69 + R12468 + R12465 = 0 || (R67 + R12466 + R12463 = 0 && R68 + R12467 + R12464 = 0)) && (R69 + R12468 + R12465 = 0 || (R73 + R12831 + R12829 = 0 && R74 + R12832 + R12830 = 0)) && (R12833 = 0 || (R20 = 0 && R12848 = 0)) && (R12835 = 0 || (R20 = 0 && R12848 = 0)) && (R12837 = 0 || (R20 = 0 && R12848 = 0)) && (R12839 = 0 || (R20 = 0 && R12848 = 0)) && (R12841 = 0 || (R20 = 0 && R12848 = 0)) && (R12843 = 0 || (R20 = 0 && R12848 = 0)) && (R12845 = 0 || (R20 = 0 && R12848 = 0)) && (R12849 = 0 || (R20 = 0 && R12848 = 0)) && (R12851 = 0 || (R20 = 0 && R12848 = 0));
// End of Parikh automata intersection problem
