// Parikh automata intersection problem, generated by OSTRICH+
counter int R0, R1, R1051, R1052, R11, R12, R1571, R1572, R1831, R1832, R1960, R1961, R1962, R1963, R1964, R1965, R1966, R1967, R1968, R1969, R1970, R1971, R1972, R1973, R1974, R1975, R1976, R1977, R1978, R1979, R1980, R1981, R1982, R1983, R1984, R1985, R1986, R1987, R1988, R1989, R1990, R1991, R1992, R1993, R1994, R1995, R1996, R1997, R1998, R1999, R2, R2000, R2001, R2002, R2003, R2004, R2005, R2006, R2007, R2008, R2009, R2010, R2011, R2012, R2013, R2014, R2015, R2016, R2017, R2018, R2019, R2020, R2021, R2022, R2023, R2024, R2025, R2026, R2027, R2028, R2029, R2030, R2031, R2032, R2033, R2034, R2035, R2036, R2037, R2038, R2039, R2040, R2041, R2042, R2043, R2044, R2045, R2046, R2047, R2048, R2049, R2050, R2051, R2052, R2053, R2054, R2055, R2056, R2057, R2058, R2059, R2060, R2061, R2062, R2063, R2064, R2065, R2066, R2067, R2068, R2069, R2070, R2071, R2072, R2073, R2074, R2075, R2076, R2077, R2078, R2079, R2080, R2081, R2082, R2083, R2084, R2085, R2086, R3, R4, R5, R6, R7, R8, R9;
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R7 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 45] { R2044 += 1 };
  s0 -> s0 [0, 65535] { R2043 += 1, R2044 += 1 };
  s0 -> s2 [46, 46] { R2044 += 1 };
  s0 -> s3 [47, 47] { R2044 += 1 };
  s0 -> s1 [48, 65535] { R2044 += 1 };
  s1 -> s1 [0, 45] { R2044 += 1 };
  s1 -> s2 [46, 46] { R2044 += 1 };
  s1 -> s3 [47, 47] { R2044 += 1 };
  s1 -> s1 [48, 65535] { R2044 += 1 };
  s2 -> s1 [0, 45] { R2044 += 1 };
  s2 -> s2 [46, 46] { R2044 += 1 };
  s2 -> s3 [47, 47] { R2044 += 1 };
  s2 -> s1 [48, 114] { R2044 += 1 };
  s2 -> s8 [115, 115] { R2044 += 1 };
  s2 -> s1 [116, 65535] { R2044 += 1 };
  s3 -> s3 [0, 45] { R2044 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s4 [46, 46] { R2044 += 1 };
  s3 -> s3 [47, 65535] { R2044 += 1 };
  s4 -> s3 [0, 45] { R2044 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s4 [46, 46] { R2044 += 1 };
  s4 -> s3 [47, 114] { R2044 += 1 };
  s4 -> s5 [115, 115] { R2044 += 1 };
  s4 -> s3 [116, 65535] { R2044 += 1 };
  s5 -> s3 [0, 45] { R2044 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s4 [46, 46] { R2044 += 1 };
  s5 -> s3 [47, 110] { R2044 += 1 };
  s5 -> s6 [111, 111] { R2044 += 1 };
  s5 -> s3 [112, 65535] { R2044 += 1 };
  s6 -> s3 [0, 45] { R2044 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s4 [46, 46] { R2044 += 1 };
  s6 -> s3 [47, 98] { R2044 += 1 };
  s6 -> s7 [99, 99] { R2044 += 1 };
  s6 -> s3 [100, 65535] { R2044 += 1 };
  s7 -> s3 [0, 45] { R2044 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s4 [46, 46] { R2044 += 1 };
  s7 -> s3 [47, 106] { R2044 += 1 };
  s7 -> s3 [108, 65535] { R2044 += 1 };
  s8 -> s1 [0, 45] { R2044 += 1 };
  s8 -> s2 [46, 46] { R2044 += 1 };
  s8 -> s3 [47, 47] { R2044 += 1 };
  s8 -> s1 [48, 110] { R2044 += 1 };
  s8 -> s9 [111, 111] { R2044 += 1 };
  s8 -> s1 [112, 65535] { R2044 += 1 };
  s9 -> s1 [0, 45] { R2044 += 1 };
  s9 -> s2 [46, 46] { R2044 += 1 };
  s9 -> s3 [47, 47] { R2044 += 1 };
  s9 -> s1 [48, 98] { R2044 += 1 };
  s9 -> s10 [99, 99] { R2044 += 1 };
  s9 -> s1 [100, 65535] { R2044 += 1 };
  s10 -> s1 [0, 45] { R2044 += 1 };
  s10 -> s2 [46, 46] { R2044 += 1 };
  s10 -> s3 [47, 47] { R2044 += 1 };
  s10 -> s1 [48, 106] { R2044 += 1 };
  s10 -> s1 [108, 65535] { R2044 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_3 {
  init s0;
  s0 -> s0 [0, 65535] { R2045 += 1, R2046 += 1 };
  s0 -> s1 [0, 65535] { R2046 += 1, R6 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R2046 += 1, R6 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s1 [0, 46] { R2048 += 1, R1832 += 1 };
  s0 -> s2 [0, 65535] { R2048 += 1, R1831 += 1, R1832 += 1 };
  s0 -> s0 [0, 65535] { R2047 += 1, R2048 += 1 };
  s0 -> s3 [47, 47] { R2048 += 1 };
  s0 -> s1 [48, 65535] { R2048 += 1, R1832 += 1 };
  s1 -> s1 [0, 46] { R2048 += 1, R1832 += 1 };
  s1 -> s3 [47, 47] { R2048 += 1 };
  s1 -> s1 [48, 65535] { R2048 += 1, R1832 += 1 };
  s2 -> s1 [0, 46] { R2048 += 1, R1832 += 1 };
  s2 -> s2 [0, 65535] { R2048 += 1, R1831 += 1, R1832 += 1 };
  s2 -> s3 [47, 47] { R2048 += 1 };
  s2 -> s1 [48, 65535] { R2048 += 1, R1832 += 1 };
  s3 -> s3 [0, 65535] { R2048 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton uri_5 {
  init s0;
  s0 -> s0 [0, 65535] { R2049 += 1, R2050 += 1 };
  s0 -> s1 [0, 65535] { R2050 += 1, R2005 += 1, R2006 += 1 };
  s0 -> s2 [0, 65535] { R2050 += 1, R2006 += 1, R3 += 1 };
  s1 -> s1 [0, 65535] { R2050 += 1, R2005 += 1, R2006 += 1 };
  s1 -> s2 [0, 65535] { R2050 += 1, R2006 += 1, R3 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2050 += 1, R2006 += 1, R3 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R2050 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2050 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_6 {
  init s0;
  s0 -> s1 [0, 65535] { R2052 += 1, R2008 += 1, R1961 += 1, R1962 += 1 };
  s0 -> s2 [0, 65535] { R2052 += 1, R2007 += 1, R2008 += 1 };
  s0 -> s0 [0, 65535] { R2051 += 1, R2052 += 1 };
  s0 -> s3 [63, 63] { R2052 += 1, R2008 += 1, R1962 += 1 };
  s1 -> s1 [0, 65535] { R2052 += 1, R2008 += 1, R1961 += 1, R1962 += 1 };
  s1 -> s3 [63, 63] { R2052 += 1, R2008 += 1, R1962 += 1 };
  s2 -> s1 [0, 65535] { R2052 += 1, R2008 += 1, R1961 += 1, R1962 += 1 };
  s2 -> s2 [0, 65535] { R2052 += 1, R2007 += 1, R2008 += 1 };
  s2 -> s3 [63, 63] { R2052 += 1, R2008 += 1, R1962 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2052 += 1, R2008 += 1 };
  s3 -> s5 [0, 65535] { R2052 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2052 += 1 };
  accepting s3, s4, s5;
};
automaton uri_7 {
  init s0;
  s0 -> s1 [0, 65535] { R2054 += 1, R2010 += 1, R1964 += 1, R8 += 1 };
  s0 -> s2 [0, 65535] { R2054 += 1, R2010 += 1, R1963 += 1, R1964 += 1 };
  s0 -> s3 [0, 65535] { R2054 += 1, R2009 += 1, R2010 += 1 };
  s0 -> s0 [0, 65535] { R2053 += 1, R2054 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R2054 += 1, R2010 += 1, R1964 += 1, R8 += 1 };
  s1 -> s6 [0, 65535] { R2054 += 1, R2010 += 1 };
  s1 -> s5 [0, 65535] { R2054 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R2054 += 1, R2010 += 1, R1964 += 1, R8 += 1 };
  s2 -> s2 [0, 65535] { R2054 += 1, R2010 += 1, R1963 += 1, R1964 += 1 };
  s2 -> s5 [0, 65535] { R2054 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R2054 += 1, R2010 += 1, R1964 += 1, R8 += 1 };
  s3 -> s2 [0, 65535] { R2054 += 1, R2010 += 1, R1963 += 1, R1964 += 1 };
  s3 -> s3 [0, 65535] { R2054 += 1, R2009 += 1, R2010 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2054 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R2054 += 1, R2010 += 1 };
  s6 -> s5 [0, 65535] { R2054 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_8 {
  init s0;
  s0 -> s0 [0, 65535] { R2055 += 1, R2056 += 1 };
  s0 -> s1 [0, 65535] { R2056 += 1, R2012 += 1, R1970 += 1, R0 += 1 };
  s0 -> s2 [0, 65535] { R2056 += 1, R2011 += 1, R2012 += 1 };
  s0 -> s3 [0, 65535] { R2056 += 1, R2012 += 1, R1969 += 1, R1970 += 1 };
  s1 -> s4 [0, 65535] { R2056 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R2056 += 1, R2012 += 1 };
  s1 -> s1 [0, 65535] { R2056 += 1, R2012 += 1, R1970 += 1, R0 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R2056 += 1, R2012 += 1, R1970 += 1, R0 += 1 };
  s2 -> s2 [0, 65535] { R2056 += 1, R2011 += 1, R2012 += 1 };
  s2 -> s3 [0, 65535] { R2056 += 1, R2012 += 1, R1969 += 1, R1970 += 1 };
  s3 -> s4 [0, 65535] { R2056 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R2056 += 1, R2012 += 1, R1970 += 1, R0 += 1 };
  s3 -> s3 [0, 65535] { R2056 += 1, R2012 += 1, R1969 += 1, R1970 += 1 };
  s4 -> s4 [0, 65535] { R2056 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R2056 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2056 += 1, R2012 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_9 {
  init s0;
  s0 -> s1 [0, 58] { R2058 += 1, R2014 += 1, R1972 += 1, R12 += 1 };
  s0 -> s2 [0, 65535] { R2058 += 1, R2013 += 1, R2014 += 1 };
  s0 -> s3 [0, 65535] { R2058 += 1, R2014 += 1, R1971 += 1, R1972 += 1 };
  s0 -> s0 [0, 65535] { R2057 += 1, R2058 += 1 };
  s0 -> s4 [0, 65535] { R2058 += 1, R2014 += 1, R1972 += 1, R11 += 1, R12 += 1 };
  s0 -> s5 [59, 59] { R2058 += 1, R2014 += 1, R1972 += 1 };
  s0 -> s1 [60, 65535] { R2058 += 1, R2014 += 1, R1972 += 1, R12 += 1 };
  s1 -> s1 [0, 58] { R2058 += 1, R2014 += 1, R1972 += 1, R12 += 1 };
  s1 -> s5 [59, 59] { R2058 += 1, R2014 += 1, R1972 += 1 };
  s1 -> s1 [60, 65535] { R2058 += 1, R2014 += 1, R1972 += 1, R12 += 1 };
  s2 -> s1 [0, 58] { R2058 += 1, R2014 += 1, R1972 += 1, R12 += 1 };
  s2 -> s2 [0, 65535] { R2058 += 1, R2013 += 1, R2014 += 1 };
  s2 -> s3 [0, 65535] { R2058 += 1, R2014 += 1, R1971 += 1, R1972 += 1 };
  s2 -> s4 [0, 65535] { R2058 += 1, R2014 += 1, R1972 += 1, R11 += 1, R12 += 1 };
  s2 -> s5 [59, 59] { R2058 += 1, R2014 += 1, R1972 += 1 };
  s2 -> s1 [60, 65535] { R2058 += 1, R2014 += 1, R1972 += 1, R12 += 1 };
  s3 -> s1 [0, 58] { R2058 += 1, R2014 += 1, R1972 += 1, R12 += 1 };
  s3 -> s3 [0, 65535] { R2058 += 1, R2014 += 1, R1971 += 1, R1972 += 1 };
  s3 -> s4 [0, 65535] { R2058 += 1, R2014 += 1, R1972 += 1, R11 += 1, R12 += 1 };
  s3 -> s5 [59, 59] { R2058 += 1, R2014 += 1, R1972 += 1 };
  s3 -> s1 [60, 65535] { R2058 += 1, R2014 += 1, R1972 += 1, R12 += 1 };
  s4 -> s1 [0, 58] { R2058 += 1, R2014 += 1, R1972 += 1, R12 += 1 };
  s4 -> s4 [0, 65535] { R2058 += 1, R2014 += 1, R1972 += 1, R11 += 1, R12 += 1 };
  s4 -> s5 [59, 59] { R2058 += 1, R2014 += 1, R1972 += 1 };
  s4 -> s1 [60, 65535] { R2058 += 1, R2014 += 1, R1972 += 1, R12 += 1 };
  s5 -> s5 [0, 65535] { R2058 += 1, R2014 += 1, R1972 += 1 };
  s5 -> s6 [0, 65535] { R2058 += 1 };
  s5 -> s7 [0, 65535] { R2058 += 1, R2014 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R2058 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s6 [0, 65535] { R2058 += 1 };
  s7 -> s7 [0, 65535] { R2058 += 1, R2014 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton uri_10 {
  init s0;
  s0 -> s1 [0, 37] { R2060 += 1, R2016 += 1, R1974 += 1, R1052 += 1 };
  s0 -> s2 [0, 65535] { R2060 += 1, R2016 += 1, R1973 += 1, R1974 += 1 };
  s0 -> s3 [0, 65535] { R2060 += 1, R2015 += 1, R2016 += 1 };
  s0 -> s4 [0, 65535] { R2060 += 1, R2016 += 1, R1974 += 1, R1051 += 1, R1052 += 1 };
  s0 -> s0 [0, 65535] { R2059 += 1, R2060 += 1 };
  s0 -> s5 [38, 38] { R2060 += 1, R2016 += 1, R1974 += 1 };
  s0 -> s1 [39, 65535] { R2060 += 1, R2016 += 1, R1974 += 1, R1052 += 1 };
  s1 -> s1 [0, 37] { R2060 += 1, R2016 += 1, R1974 += 1, R1052 += 1 };
  s1 -> s5 [38, 38] { R2060 += 1, R2016 += 1, R1974 += 1 };
  s1 -> s1 [39, 65535] { R2060 += 1, R2016 += 1, R1974 += 1, R1052 += 1 };
  s2 -> s1 [0, 37] { R2060 += 1, R2016 += 1, R1974 += 1, R1052 += 1 };
  s2 -> s2 [0, 65535] { R2060 += 1, R2016 += 1, R1973 += 1, R1974 += 1 };
  s2 -> s4 [0, 65535] { R2060 += 1, R2016 += 1, R1974 += 1, R1051 += 1, R1052 += 1 };
  s2 -> s5 [38, 38] { R2060 += 1, R2016 += 1, R1974 += 1 };
  s2 -> s1 [39, 65535] { R2060 += 1, R2016 += 1, R1974 += 1, R1052 += 1 };
  s3 -> s1 [0, 37] { R2060 += 1, R2016 += 1, R1974 += 1, R1052 += 1 };
  s3 -> s2 [0, 65535] { R2060 += 1, R2016 += 1, R1973 += 1, R1974 += 1 };
  s3 -> s3 [0, 65535] { R2060 += 1, R2015 += 1, R2016 += 1 };
  s3 -> s4 [0, 65535] { R2060 += 1, R2016 += 1, R1974 += 1, R1051 += 1, R1052 += 1 };
  s3 -> s5 [38, 38] { R2060 += 1, R2016 += 1, R1974 += 1 };
  s3 -> s1 [39, 65535] { R2060 += 1, R2016 += 1, R1974 += 1, R1052 += 1 };
  s4 -> s1 [0, 37] { R2060 += 1, R2016 += 1, R1974 += 1, R1052 += 1 };
  s4 -> s4 [0, 65535] { R2060 += 1, R2016 += 1, R1974 += 1, R1051 += 1, R1052 += 1 };
  s4 -> s5 [38, 38] { R2060 += 1, R2016 += 1, R1974 += 1 };
  s4 -> s1 [39, 65535] { R2060 += 1, R2016 += 1, R1974 += 1, R1052 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R2060 += 1 };
  s5 -> s5 [0, 65535] { R2060 += 1, R2016 += 1, R1974 += 1 };
  s5 -> s8 [0, 65535] { R2060 += 1, R2016 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2060 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R2060 += 1 };
  s8 -> s8 [0, 65535] { R2060 += 1, R2016 += 1 };
  accepting s5, s6, s7, s8;
};
automaton uri_11 {
  init s0;
  s0 -> s1 [0, 63] { R2062 += 1, R2018 += 1 };
  s0 -> s2 [0, 65535] { R2062 += 1, R2017 += 1, R2018 += 1 };
  s0 -> s0 [0, 65535] { R2061 += 1, R2062 += 1 };
  s0 -> s3 [64, 64] { R2062 += 1, R2018 += 1 };
  s0 -> s1 [65, 65535] { R2062 += 1, R2018 += 1 };
  s1 -> s1 [0, 63] { R2062 += 1, R2018 += 1 };
  s1 -> s3 [64, 64] { R2062 += 1, R2018 += 1 };
  s1 -> s1 [65, 65535] { R2062 += 1, R2018 += 1 };
  s2 -> s1 [0, 63] { R2062 += 1, R2018 += 1 };
  s2 -> s2 [0, 65535] { R2062 += 1, R2017 += 1, R2018 += 1 };
  s2 -> s3 [64, 64] { R2062 += 1, R2018 += 1 };
  s2 -> s1 [65, 65535] { R2062 += 1, R2018 += 1 };
  s3 -> s4 [0, 65535] { R2062 += 1 };
  s3 -> s3 [0, 65535] { R2062 += 1, R2018 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2062 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5;
};
automaton uri_12 {
  init s0;
  s0 -> s0 [0, 65535] { R2063 += 1, R2064 += 1 };
  s0 -> s1 [0, 65535] { R2064 += 1, R2019 += 1, R2020 += 1 };
  s0 -> s2 [0, 65535] { R2064 += 1, R2020 += 1, R5 += 1 };
  s1 -> s1 [0, 65535] { R2064 += 1, R2019 += 1, R2020 += 1 };
  s1 -> s2 [0, 65535] { R2064 += 1, R2020 += 1, R5 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R2064 += 1 };
  s2 -> s2 [0, 65535] { R2064 += 1, R2020 += 1, R5 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2064 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_13 {
  init s0;
  s0 -> s1 [0, 36] { R2066 += 1, R2022 += 1, R1984 += 1 };
  s0 -> s0 [0, 65535] { R2065 += 1, R2066 += 1 };
  s0 -> s2 [0, 65535] { R2066 += 1, R2021 += 1, R2022 += 1 };
  s0 -> s3 [0, 65535] { R2066 += 1, R2022 += 1, R1983 += 1, R1984 += 1 };
  s0 -> s1 [38, 42] { R2066 += 1, R2022 += 1, R1984 += 1 };
  s0 -> s1 [44, 57] { R2066 += 1, R2022 += 1, R1984 += 1 };
  s0 -> s1 [59, 63] { R2066 += 1, R2022 += 1, R1984 += 1 };
  s0 -> s1 [65, 65535] { R2066 += 1, R2022 += 1, R1984 += 1 };
  s1 -> s1 [0, 36] { R2066 += 1, R2022 += 1, R1984 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R2066 += 1, R2022 += 1 };
  s1 -> s5 [0, 65535] { R2066 += 1 };
  s1 -> s1 [38, 42] { R2066 += 1, R2022 += 1, R1984 += 1 };
  s1 -> s1 [44, 57] { R2066 += 1, R2022 += 1, R1984 += 1 };
  s1 -> s1 [59, 63] { R2066 += 1, R2022 += 1, R1984 += 1 };
  s1 -> s1 [65, 65535] { R2066 += 1, R2022 += 1, R1984 += 1 };
  s2 -> s1 [0, 36] { R2066 += 1, R2022 += 1, R1984 += 1 };
  s2 -> s2 [0, 65535] { R2066 += 1, R2021 += 1, R2022 += 1 };
  s2 -> s3 [0, 65535] { R2066 += 1, R2022 += 1, R1983 += 1, R1984 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [38, 42] { R2066 += 1, R2022 += 1, R1984 += 1 };
  s2 -> s1 [44, 57] { R2066 += 1, R2022 += 1, R1984 += 1 };
  s2 -> s1 [59, 63] { R2066 += 1, R2022 += 1, R1984 += 1 };
  s2 -> s1 [65, 65535] { R2066 += 1, R2022 += 1, R1984 += 1 };
  s3 -> s1 [0, 36] { R2066 += 1, R2022 += 1, R1984 += 1 };
  s3 -> s3 [0, 65535] { R2066 += 1, R2022 += 1, R1983 += 1, R1984 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R2066 += 1 };
  s3 -> s1 [38, 42] { R2066 += 1, R2022 += 1, R1984 += 1 };
  s3 -> s1 [44, 57] { R2066 += 1, R2022 += 1, R1984 += 1 };
  s3 -> s1 [59, 63] { R2066 += 1, R2022 += 1, R1984 += 1 };
  s3 -> s1 [65, 65535] { R2066 += 1, R2022 += 1, R1984 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2066 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 65535] { R2068 += 1, R2024 += 1, R1985 += 1, R1986 += 1 };
  s0 -> s2 [0, 65535] { R2068 += 1, R2023 += 1, R2024 += 1 };
  s0 -> s0 [0, 65535] { R2067 += 1, R2068 += 1 };
  s0 -> s3 [0, 65535] { R2068 += 1, R2024 += 1, R1986 += 1, R2 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R2068 += 1, R2024 += 1, R1985 += 1, R1986 += 1 };
  s1 -> s5 [0, 65535] { R2068 += 1 };
  s1 -> s3 [0, 65535] { R2068 += 1, R2024 += 1, R1986 += 1, R2 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R2068 += 1, R2024 += 1, R1985 += 1, R1986 += 1 };
  s2 -> s2 [0, 65535] { R2068 += 1, R2023 += 1, R2024 += 1 };
  s2 -> s3 [0, 65535] { R2068 += 1, R2024 += 1, R1986 += 1, R2 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R2068 += 1 };
  s3 -> s6 [0, 65535] { R2068 += 1, R2024 += 1 };
  s3 -> s3 [0, 65535] { R2068 += 1, R2024 += 1, R1986 += 1, R2 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2068 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R2068 += 1 };
  s6 -> s6 [0, 65535] { R2068 += 1, R2024 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_15 {
  init s0;
  s0 -> s1 [0, 43] { R2070 += 1, R2026 += 1, R1988 += 1 };
  s0 -> s2 [0, 65535] { R2070 += 1, R2026 += 1, R1987 += 1, R1988 += 1 };
  s0 -> s3 [0, 65535] { R2070 += 1, R2025 += 1, R2026 += 1 };
  s0 -> s0 [0, 65535] { R2069 += 1, R2070 += 1 };
  s0 -> s1 [45, 57] { R2070 += 1, R2026 += 1, R1988 += 1 };
  s0 -> s4 [58, 58] { R2070 += 1, R2026 += 1, R1988 += 1 };
  s0 -> s1 [59, 65535] { R2070 += 1, R2026 += 1, R1988 += 1 };
  s1 -> s1 [0, 43] { R2070 += 1, R2026 += 1, R1988 += 1 };
  s1 -> s1 [45, 57] { R2070 += 1, R2026 += 1, R1988 += 1 };
  s1 -> s4 [58, 58] { R2070 += 1, R2026 += 1, R1988 += 1 };
  s1 -> s1 [59, 65535] { R2070 += 1, R2026 += 1, R1988 += 1 };
  s2 -> s1 [0, 43] { R2070 += 1, R2026 += 1, R1988 += 1 };
  s2 -> s2 [0, 65535] { R2070 += 1, R2026 += 1, R1987 += 1, R1988 += 1 };
  s2 -> s1 [45, 57] { R2070 += 1, R2026 += 1, R1988 += 1 };
  s2 -> s4 [58, 58] { R2070 += 1, R2026 += 1, R1988 += 1 };
  s2 -> s1 [59, 65535] { R2070 += 1, R2026 += 1, R1988 += 1 };
  s3 -> s1 [0, 43] { R2070 += 1, R2026 += 1, R1988 += 1 };
  s3 -> s2 [0, 65535] { R2070 += 1, R2026 += 1, R1987 += 1, R1988 += 1 };
  s3 -> s3 [0, 65535] { R2070 += 1, R2025 += 1, R2026 += 1 };
  s3 -> s1 [45, 57] { R2070 += 1, R2026 += 1, R1988 += 1 };
  s3 -> s4 [58, 58] { R2070 += 1, R2026 += 1, R1988 += 1 };
  s3 -> s1 [59, 65535] { R2070 += 1, R2026 += 1, R1988 += 1 };
  s4 -> s4 [0, 43] { R2070 += 1, R2026 += 1, R1988 += 1 };
  s4 -> s4 [0, 65535] { R2070 += 1, R2026 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R2070 += 1 };
  s4 -> s4 [45, 65535] { R2070 += 1, R2026 += 1, R1988 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2070 += 1 };
  accepting s4, s5, s6;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 65535] { R2072 += 1, R2028 += 1, R1989 += 1, R1990 += 1 };
  s0 -> s2 [0, 65535] { R2072 += 1, R2027 += 1, R2028 += 1 };
  s0 -> s0 [0, 65535] { R2071 += 1, R2072 += 1 };
  s0 -> s3 [0, 65535] { R2072 += 1, R2028 += 1, R1990 += 1, R4 += 1 };
  s1 -> s4 [0, 65535] { R2072 += 1 };
  s1 -> s1 [0, 65535] { R2072 += 1, R2028 += 1, R1989 += 1, R1990 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [0, 65535] { R2072 += 1, R2028 += 1, R1990 += 1, R4 += 1 };
  s2 -> s1 [0, 65535] { R2072 += 1, R2028 += 1, R1989 += 1, R1990 += 1 };
  s2 -> s2 [0, 65535] { R2072 += 1, R2027 += 1, R2028 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R2072 += 1, R2028 += 1, R1990 += 1, R4 += 1 };
  s3 -> s4 [0, 65535] { R2072 += 1 };
  s3 -> s5 [0, 65535] { R2072 += 1, R2028 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R2072 += 1, R2028 += 1, R1990 += 1, R4 += 1 };
  s4 -> s4 [0, 65535] { R2072 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s4 [0, 65535] { R2072 += 1 };
  s5 -> s5 [0, 65535] { R2072 += 1, R2028 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_17 {
  init s0;
  s0 -> s1 [0, 57] { R2074 += 1, R2030 += 1, R1992 += 1, R1572 += 1 };
  s0 -> s2 [0, 65535] { R2074 += 1, R2030 += 1, R1991 += 1, R1992 += 1 };
  s0 -> s3 [0, 65535] { R2074 += 1, R2030 += 1, R1992 += 1, R1571 += 1, R1572 += 1 };
  s0 -> s4 [0, 65535] { R2074 += 1, R2029 += 1, R2030 += 1 };
  s0 -> s0 [0, 65535] { R2073 += 1, R2074 += 1 };
  s0 -> s5 [58, 58] { R2074 += 1, R2030 += 1, R1992 += 1 };
  s0 -> s1 [59, 65535] { R2074 += 1, R2030 += 1, R1992 += 1, R1572 += 1 };
  s1 -> s1 [0, 57] { R2074 += 1, R2030 += 1, R1992 += 1, R1572 += 1 };
  s1 -> s5 [58, 58] { R2074 += 1, R2030 += 1, R1992 += 1 };
  s1 -> s1 [59, 65535] { R2074 += 1, R2030 += 1, R1992 += 1, R1572 += 1 };
  s2 -> s1 [0, 57] { R2074 += 1, R2030 += 1, R1992 += 1, R1572 += 1 };
  s2 -> s2 [0, 65535] { R2074 += 1, R2030 += 1, R1991 += 1, R1992 += 1 };
  s2 -> s3 [0, 65535] { R2074 += 1, R2030 += 1, R1992 += 1, R1571 += 1, R1572 += 1 };
  s2 -> s5 [58, 58] { R2074 += 1, R2030 += 1, R1992 += 1 };
  s2 -> s1 [59, 65535] { R2074 += 1, R2030 += 1, R1992 += 1, R1572 += 1 };
  s3 -> s1 [0, 57] { R2074 += 1, R2030 += 1, R1992 += 1, R1572 += 1 };
  s3 -> s3 [0, 65535] { R2074 += 1, R2030 += 1, R1992 += 1, R1571 += 1, R1572 += 1 };
  s3 -> s5 [58, 58] { R2074 += 1, R2030 += 1, R1992 += 1 };
  s3 -> s1 [59, 65535] { R2074 += 1, R2030 += 1, R1992 += 1, R1572 += 1 };
  s4 -> s1 [0, 57] { R2074 += 1, R2030 += 1, R1992 += 1, R1572 += 1 };
  s4 -> s2 [0, 65535] { R2074 += 1, R2030 += 1, R1991 += 1, R1992 += 1 };
  s4 -> s3 [0, 65535] { R2074 += 1, R2030 += 1, R1992 += 1, R1571 += 1, R1572 += 1 };
  s4 -> s4 [0, 65535] { R2074 += 1, R2029 += 1, R2030 += 1 };
  s4 -> s5 [58, 58] { R2074 += 1, R2030 += 1, R1992 += 1 };
  s4 -> s1 [59, 65535] { R2074 += 1, R2030 += 1, R1992 += 1, R1572 += 1 };
  s5 -> s6 [0, 65535] { R2074 += 1, R2030 += 1 };
  s5 -> s5 [0, 65535] { R2074 += 1, R2030 += 1, R1992 += 1 };
  s5 -> s7 [0, 65535] { R2074 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R2074 += 1, R2030 += 1 };
  s6 -> s7 [0, 65535] { R2074 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R2074 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 90] { R2076 += 1, R2032 += 1, R1994 += 1, R1966 += 1 };
  s0 -> s2 [0, 65535] { R2076 += 1, R2032 += 1, R1994 += 1, R1965 += 1, R1966 += 1 };
  s0 -> s0 [0, 65535] { R2075 += 1, R2076 += 1 };
  s0 -> s3 [0, 65535] { R2076 += 1, R2031 += 1, R2032 += 1 };
  s0 -> s4 [0, 65535] { R2076 += 1, R2032 += 1, R1993 += 1, R1994 += 1 };
  s0 -> s5 [91, 91] { R2076 += 1, R2032 += 1, R1994 += 1, R1966 += 1 };
  s0 -> s1 [92, 65535] { R2076 += 1, R2032 += 1, R1994 += 1, R1966 += 1 };
  s1 -> s6 [0, 65535] { R2076 += 1 };
  s1 -> s8 [0, 65535] { R2076 += 1, R2032 += 1 };
  s1 -> s1 [0, 65535] { R2076 += 1, R2032 += 1, R1994 += 1, R1966 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s9 [0, 65535] { R2076 += 1, R2032 += 1, R1994 += 1 };
  s2 -> s1 [0, 90] { R2076 += 1, R2032 += 1, R1994 += 1, R1966 += 1 };
  s2 -> s2 [0, 65535] { R2076 += 1, R2032 += 1, R1994 += 1, R1965 += 1, R1966 += 1 };
  s2 -> s6 [0, 65535] { R2076 += 1 };
  s2 -> s8 [0, 65535] { R2076 += 1, R2032 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s5 [91, 91] { R2076 += 1, R2032 += 1, R1994 += 1, R1966 += 1 };
  s2 -> s1 [92, 65535] { R2076 += 1, R2032 += 1, R1994 += 1, R1966 += 1 };
  s3 -> s1 [0, 90] { R2076 += 1, R2032 += 1, R1994 += 1, R1966 += 1 };
  s3 -> s2 [0, 65535] { R2076 += 1, R2032 += 1, R1994 += 1, R1965 += 1, R1966 += 1 };
  s3 -> s3 [0, 65535] { R2076 += 1, R2031 += 1, R2032 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [0, 65535] { R2076 += 1, R2032 += 1, R1993 += 1, R1994 += 1 };
  s3 -> s5 [91, 91] { R2076 += 1, R2032 += 1, R1994 += 1, R1966 += 1 };
  s3 -> s1 [92, 65535] { R2076 += 1, R2032 += 1, R1994 += 1, R1966 += 1 };
  s4 -> s1 [0, 90] { R2076 += 1, R2032 += 1, R1994 += 1, R1966 += 1 };
  s4 -> s2 [0, 65535] { R2076 += 1, R2032 += 1, R1994 += 1, R1965 += 1, R1966 += 1 };
  s4 -> s6 [0, 65535] { R2076 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R2076 += 1, R2032 += 1, R1993 += 1, R1994 += 1 };
  s4 -> s5 [91, 91] { R2076 += 1, R2032 += 1, R1994 += 1, R1966 += 1 };
  s4 -> s1 [92, 65535] { R2076 += 1, R2032 += 1, R1994 += 1, R1966 += 1 };
  s5 -> s1 [0, 65535] { R2076 += 1, R2032 += 1, R1994 += 1, R1966 += 1 };
  s6 -> s6 [0, 65535] { R2076 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R2076 += 1 };
  s8 -> s8 [0, 65535] { R2076 += 1, R2032 += 1 };
  s8 -> s7 [0, 65535];
  s9 -> s6 [0, 65535] { R2076 += 1 };
  s9 -> s8 [0, 65535] { R2076 += 1, R2032 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s9 [0, 65535] { R2076 += 1, R2032 += 1, R1994 += 1 };
  accepting s3, s4, s8, s2, s9, s6, s1, s7, s0;
};
automaton uri_19 {
  init s0;
  s0 -> s1 [0, 65535] { R2078 += 1, R2034 += 1, R1996 += 1, R1967 += 1, R1968 += 1 };
  s0 -> s2 [0, 65535] { R2078 += 1, R2034 += 1, R1996 += 1, R1968 += 1, R9 += 1 };
  s0 -> s0 [0, 65535] { R2077 += 1, R2078 += 1 };
  s0 -> s3 [0, 65535] { R2078 += 1, R2034 += 1, R1995 += 1, R1996 += 1 };
  s0 -> s4 [0, 65535] { R2078 += 1, R2033 += 1, R2034 += 1 };
  s1 -> s7 [0, 65535] { R2078 += 1, R2034 += 1 };
  s1 -> s1 [0, 65535] { R2078 += 1, R2034 += 1, R1996 += 1, R1967 += 1, R1968 += 1 };
  s1 -> s2 [0, 65535] { R2078 += 1, R2034 += 1, R1996 += 1, R1968 += 1, R9 += 1 };
  s1 -> s6 [0, 65535] { R2078 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R2078 += 1, R2034 += 1 };
  s2 -> s8 [0, 65535] { R2078 += 1, R2034 += 1, R1996 += 1 };
  s2 -> s2 [0, 65535] { R2078 += 1, R2034 += 1, R1996 += 1, R1968 += 1, R9 += 1 };
  s2 -> s6 [0, 65535] { R2078 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R2078 += 1, R2034 += 1, R1996 += 1, R1967 += 1, R1968 += 1 };
  s3 -> s2 [0, 65535] { R2078 += 1, R2034 += 1, R1996 += 1, R1968 += 1, R9 += 1 };
  s3 -> s3 [0, 65535] { R2078 += 1, R2034 += 1, R1995 += 1, R1996 += 1 };
  s3 -> s6 [0, 65535] { R2078 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R2078 += 1, R2034 += 1, R1996 += 1, R1967 += 1, R1968 += 1 };
  s4 -> s2 [0, 65535] { R2078 += 1, R2034 += 1, R1996 += 1, R1968 += 1, R9 += 1 };
  s4 -> s3 [0, 65535] { R2078 += 1, R2034 += 1, R1995 += 1, R1996 += 1 };
  s4 -> s4 [0, 65535] { R2078 += 1, R2033 += 1, R2034 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2078 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R2078 += 1, R2034 += 1 };
  s7 -> s6 [0, 65535] { R2078 += 1 };
  s7 -> s5 [0, 65535];
  s8 -> s7 [0, 65535] { R2078 += 1, R2034 += 1 };
  s8 -> s8 [0, 65535] { R2078 += 1, R2034 += 1, R1996 += 1 };
  s8 -> s6 [0, 65535] { R2078 += 1 };
  s8 -> s5 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 57] { R2080 += 1, R2036 += 1, R1998 += 1, R1976 += 1 };
  s0 -> s2 [0, 65535] { R2080 += 1, R2035 += 1, R2036 += 1 };
  s0 -> s0 [0, 65535] { R2079 += 1, R2080 += 1 };
  s0 -> s3 [0, 65535] { R2080 += 1, R2036 += 1, R1997 += 1, R1998 += 1 };
  s0 -> s4 [0, 65535] { R2080 += 1, R2036 += 1, R1998 += 1, R1975 += 1, R1976 += 1 };
  s0 -> s1 [59, 65535] { R2080 += 1, R2036 += 1, R1998 += 1, R1976 += 1 };
  s1 -> s1 [0, 57] { R2080 += 1, R2036 += 1, R1998 += 1, R1976 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2080 += 1, R2036 += 1, R1998 += 1 };
  s1 -> s6 [0, 65535] { R2080 += 1, R2036 += 1 };
  s1 -> s7 [0, 65535] { R2080 += 1 };
  s1 -> s1 [59, 65535] { R2080 += 1, R2036 += 1, R1998 += 1, R1976 += 1 };
  s2 -> s1 [0, 57] { R2080 += 1, R2036 += 1, R1998 += 1, R1976 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2080 += 1, R2035 += 1, R2036 += 1 };
  s2 -> s3 [0, 65535] { R2080 += 1, R2036 += 1, R1997 += 1, R1998 += 1 };
  s2 -> s4 [0, 65535] { R2080 += 1, R2036 += 1, R1998 += 1, R1975 += 1, R1976 += 1 };
  s2 -> s1 [59, 65535] { R2080 += 1, R2036 += 1, R1998 += 1, R1976 += 1 };
  s3 -> s1 [0, 57] { R2080 += 1, R2036 += 1, R1998 += 1, R1976 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2080 += 1, R2036 += 1, R1997 += 1, R1998 += 1 };
  s3 -> s4 [0, 65535] { R2080 += 1, R2036 += 1, R1998 += 1, R1975 += 1, R1976 += 1 };
  s3 -> s7 [0, 65535] { R2080 += 1 };
  s3 -> s1 [59, 65535] { R2080 += 1, R2036 += 1, R1998 += 1, R1976 += 1 };
  s4 -> s1 [0, 57] { R2080 += 1, R2036 += 1, R1998 += 1, R1976 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R2080 += 1, R2036 += 1 };
  s4 -> s4 [0, 65535] { R2080 += 1, R2036 += 1, R1998 += 1, R1975 += 1, R1976 += 1 };
  s4 -> s7 [0, 65535] { R2080 += 1 };
  s4 -> s1 [59, 65535] { R2080 += 1, R2036 += 1, R1998 += 1, R1976 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2080 += 1, R2036 += 1 };
  s6 -> s7 [0, 65535] { R2080 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R2080 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton uri_21 {
  init s0;
  s0 -> s0 [0, 65535] { R2081 += 1, R2082 += 1 };
  s0 -> s1 [0, 65535] { R2082 += 1, R2037 += 1, R2038 += 1 };
  s0 -> s2 [0, 65535] { R2082 += 1, R2038 += 1, R1999 += 1, R2000 += 1 };
  s0 -> s3 [0, 65535] { R2082 += 1, R2038 += 1, R2000 += 1, R1978 += 1, R1 += 1 };
  s0 -> s4 [0, 65535] { R2082 += 1, R2038 += 1, R2000 += 1, R1977 += 1, R1978 += 1 };
  s1 -> s1 [0, 65535] { R2082 += 1, R2037 += 1, R2038 += 1 };
  s1 -> s2 [0, 65535] { R2082 += 1, R2038 += 1, R1999 += 1, R2000 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R2082 += 1, R2038 += 1, R2000 += 1, R1978 += 1, R1 += 1 };
  s1 -> s4 [0, 65535] { R2082 += 1, R2038 += 1, R2000 += 1, R1977 += 1, R1978 += 1 };
  s2 -> s2 [0, 65535] { R2082 += 1, R2038 += 1, R1999 += 1, R2000 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R2082 += 1 };
  s2 -> s3 [0, 65535] { R2082 += 1, R2038 += 1, R2000 += 1, R1978 += 1, R1 += 1 };
  s2 -> s4 [0, 65535] { R2082 += 1, R2038 += 1, R2000 += 1, R1977 += 1, R1978 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R2082 += 1 };
  s3 -> s3 [0, 65535] { R2082 += 1, R2038 += 1, R2000 += 1, R1978 += 1, R1 += 1 };
  s3 -> s7 [0, 65535] { R2082 += 1, R2038 += 1 };
  s3 -> s8 [0, 65535] { R2082 += 1, R2038 += 1, R2000 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R2082 += 1 };
  s4 -> s3 [0, 65535] { R2082 += 1, R2038 += 1, R2000 += 1, R1978 += 1, R1 += 1 };
  s4 -> s7 [0, 65535] { R2082 += 1, R2038 += 1 };
  s4 -> s4 [0, 65535] { R2082 += 1, R2038 += 1, R2000 += 1, R1977 += 1, R1978 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2082 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R2082 += 1 };
  s7 -> s7 [0, 65535] { R2082 += 1, R2038 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R2082 += 1 };
  s8 -> s7 [0, 65535] { R2082 += 1, R2038 += 1 };
  s8 -> s8 [0, 65535] { R2082 += 1, R2038 += 1, R2000 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_22 {
  init s0;
  s0 -> s1 [0, 64] { R2084 += 1, R2040 += 1, R2002 += 1, R1980 += 1 };
  s0 -> s2 [0, 65535] { R2084 += 1, R2040 += 1, R2001 += 1, R2002 += 1 };
  s0 -> s0 [0, 65535] { R2083 += 1, R2084 += 1 };
  s0 -> s3 [0, 65535] { R2084 += 1, R2040 += 1, R2002 += 1, R1979 += 1, R1980 += 1 };
  s0 -> s4 [0, 65535] { R2084 += 1, R2039 += 1, R2040 += 1 };
  s0 -> s1 [91, 65535] { R2084 += 1, R2040 += 1, R2002 += 1, R1980 += 1 };
  s1 -> s1 [0, 64] { R2084 += 1, R2040 += 1, R2002 += 1, R1980 += 1 };
  s1 -> s1 [0, 65535] { R2084 += 1, R2040 += 1, R2002 += 1 };
  s1 -> s6 [0, 65535] { R2084 += 1, R2040 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R2084 += 1 };
  s1 -> s1 [91, 65535] { R2084 += 1, R2040 += 1, R2002 += 1, R1980 += 1 };
  s2 -> s1 [0, 64] { R2084 += 1, R2040 += 1, R2002 += 1, R1980 += 1 };
  s2 -> s2 [0, 65535] { R2084 += 1, R2040 += 1, R2001 += 1, R2002 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R2084 += 1, R2040 += 1, R2002 += 1, R1979 += 1, R1980 += 1 };
  s2 -> s7 [0, 65535] { R2084 += 1 };
  s2 -> s1 [91, 65535] { R2084 += 1, R2040 += 1, R2002 += 1, R1980 += 1 };
  s3 -> s1 [0, 64] { R2084 += 1, R2040 += 1, R2002 += 1, R1980 += 1 };
  s3 -> s6 [0, 65535] { R2084 += 1, R2040 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2084 += 1, R2040 += 1, R2002 += 1, R1979 += 1, R1980 += 1 };
  s3 -> s7 [0, 65535] { R2084 += 1 };
  s3 -> s1 [91, 65535] { R2084 += 1, R2040 += 1, R2002 += 1, R1980 += 1 };
  s4 -> s1 [0, 64] { R2084 += 1, R2040 += 1, R2002 += 1, R1980 += 1 };
  s4 -> s2 [0, 65535] { R2084 += 1, R2040 += 1, R2001 += 1, R2002 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R2084 += 1, R2040 += 1, R2002 += 1, R1979 += 1, R1980 += 1 };
  s4 -> s4 [0, 65535] { R2084 += 1, R2039 += 1, R2040 += 1 };
  s4 -> s1 [91, 65535] { R2084 += 1, R2040 += 1, R2002 += 1, R1980 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2084 += 1, R2040 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s7 [0, 65535] { R2084 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R2084 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton uri_23 {
  init s0;
  s0 -> s1 [0, 65535] { R2086 += 1, R2042 += 1, R2004 += 1, R1981 += 1, R1982 += 1 };
  s0 -> s0 [0, 65535] { R2085 += 1, R2086 += 1 };
  s0 -> s2 [0, 65535] { R2086 += 1, R2042 += 1, R2003 += 1, R2004 += 1 };
  s0 -> s3 [0, 65535] { R2086 += 1, R2042 += 1, R2004 += 1, R1982 += 1, R1960 += 1 };
  s0 -> s4 [0, 65535] { R2086 += 1, R2041 += 1, R2042 += 1 };
  s1 -> s6 [0, 65535] { R2086 += 1 };
  s1 -> s1 [0, 65535] { R2086 += 1, R2042 += 1, R2004 += 1, R1981 += 1, R1982 += 1 };
  s1 -> s3 [0, 65535] { R2086 += 1, R2042 += 1, R2004 += 1, R1982 += 1, R1960 += 1 };
  s1 -> s8 [0, 65535] { R2086 += 1, R2042 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R2086 += 1 };
  s2 -> s1 [0, 65535] { R2086 += 1, R2042 += 1, R2004 += 1, R1981 += 1, R1982 += 1 };
  s2 -> s2 [0, 65535] { R2086 += 1, R2042 += 1, R2003 += 1, R2004 += 1 };
  s2 -> s3 [0, 65535] { R2086 += 1, R2042 += 1, R2004 += 1, R1982 += 1, R1960 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R2086 += 1 };
  s3 -> s7 [0, 65535] { R2086 += 1, R2042 += 1, R2004 += 1 };
  s3 -> s3 [0, 65535] { R2086 += 1, R2042 += 1, R2004 += 1, R1982 += 1, R1960 += 1 };
  s3 -> s8 [0, 65535] { R2086 += 1, R2042 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R2086 += 1, R2042 += 1, R2004 += 1, R1981 += 1, R1982 += 1 };
  s4 -> s2 [0, 65535] { R2086 += 1, R2042 += 1, R2003 += 1, R2004 += 1 };
  s4 -> s3 [0, 65535] { R2086 += 1, R2042 += 1, R2004 += 1, R1982 += 1, R1960 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2086 += 1, R2041 += 1, R2042 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2086 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R2086 += 1 };
  s7 -> s7 [0, 65535] { R2086 += 1, R2042 += 1, R2004 += 1 };
  s7 -> s8 [0, 65535] { R2086 += 1, R2042 += 1 };
  s7 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R2086 += 1 };
  s8 -> s8 [0, 65535] { R2086 += 1, R2042 += 1 };
  s8 -> s5 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
};
constraint R3 = R1974 && R4 = R1978 && R5 = R2004 && R6 = R2016 && R7 = R2086 && R11 = 0 && R1051 = 0 && R1571 = 0 && R1572 - R1977 = -1 && R1831 = 0 && R1832 = R2042 && R1961 = 0 && R1962 = 1 && R1963 = 0 && R1964 = 1 && R1965 = 0 && R1966 = 1 && R1967 = 0 && R1968 = 1 && R1969 = 1 && R1970 = R1974 && R1971 = 1 && R1972 = R1974 && R1973 = 1 && R1975 = R1977 && R1976 = R1978 && R1983 = 0 && R1984 = 4 && R1985 = 0 && R1986 = 4 && R1987 = 5 && R1988 = R2004 && R1989 = 5 && R1990 = R2004 && R1991 = 5 && R1992 = R2004 && R1993 = 5 && R1994 = R2004 && R1995 = 5 && R1996 = R2004 && R1997 = 5 && R1998 = R2004 && R1999 = 5 && R2000 = R2004 && R2001 = 5 && R2002 = R2004 && R2003 = 5 && R2005 - R2042 = 1 && R2006 = R2016 && R2007 - R2042 = 1 && R2008 = R2016 && R2009 - R2042 = 1 && R2010 = R2016 && R2011 - R2042 = 1 && R2012 = R2016 && R2013 - R2042 = 1 && R2014 = R2016 && R2015 - R2042 = 1 && R2017 = 0 && R2018 = R2042 && R2019 = 0 && R2020 = R2042 && R2021 = 0 && R2022 = R2042 && R2023 = 0 && R2024 = R2042 && R2025 = 0 && R2026 = R2042 && R2027 = 0 && R2028 = R2042 && R2029 = 0 && R2030 = R2042 && R2031 = 0 && R2032 = R2042 && R2033 = 0 && R2034 = R2042 && R2035 = 0 && R2036 = R2042 && R2037 = 0 && R2038 = R2042 && R2039 = 0 && R2040 = R2042 && R2041 = 0 && R2043 = 10 && R2044 = R2086 && R2045 = 10 && R2046 = R2086 && R2047 = 10 && R2048 = R2086 && R2049 = 10 && R2050 = R2086 && R2051 = 10 && R2052 = R2086 && R2053 = 10 && R2054 = R2086 && R2055 = 10 && R2056 = R2086 && R2057 = 10 && R2058 = R2086 && R2059 = 10 && R2060 = R2086 && R2061 = 10 && R2062 = R2086 && R2063 = 10 && R2064 = R2086 && R2065 = 10 && R2066 = R2086 && R2067 = 10 && R2068 = R2086 && R2069 = 10 && R2070 = R2086 && R2071 = 10 && R2072 = R2086 && R2073 = 10 && R2074 = R2086 && R2075 = 10 && R2076 = R2086 && R2077 = 10 && R2078 = R2086 && R2079 = 10 && R2080 = R2086 && R2081 = 10 && R2082 = R2086 && R2083 = 10 && R2084 = R2086 && R2085 = 10 && R0 != 0 && R1 != 0 && R2 != 0 && R12 < 0 && R1052 < 0 && 0 < R1974 && R1977 - R1978 < 1 && 0 < R1977 && 4 < R2004 && R2042 < R2016 && -1 < R2042 && 9 < R2086 && (R1979 != 0 || R1977 - R1980 = 1 || (R1960 = 0 && R1977 = 1)) && (R1981 != 0 || R1977 - R1982 = 1 || (R1960 = 0 && R1977 = 1)) && (R1979 = 0 || (R1960 = 0 && R1977 = 1)) && (R1981 = 0 || (R1960 = 0 && R1977 = 1));
// End of Parikh automata intersection problem
