// Parikh automata intersection problem, generated by OSTRICH+
counter int R0, R1, R10, R11, R13, R14, R2, R2956, R2960, R2961, R3, R3696, R3697, R4, R4064, R4065, R4247, R4248, R4249, R4250, R4251, R4252, R4253, R4254, R4255, R4256, R4257, R4258, R4259, R4260, R4261, R4262, R4263, R4264, R4265, R4266, R4267, R4268, R4269, R4270, R4271, R4272, R4273, R4274, R4275, R4276, R4277, R4278, R4279, R4280, R4281, R4282, R4283, R4284, R4285, R4286, R4287, R4288, R4289, R4290, R4291, R4292, R4293, R4294, R4295, R4296, R4297, R4298, R4299, R4300, R4301, R4302, R4303, R4304, R4305, R4306, R4307, R4308, R4309, R4310, R4311, R4312, R4313, R4314, R4315, R4316, R4317, R4318, R4319, R4320, R4321, R4322, R4323, R4324, R4325, R4326, R4327, R4328, R4329, R4330, R4331, R4332, R4333, R4334, R4335, R4336, R4337, R4338, R4339, R4340, R4341, R4342, R4343, R4344, R4345, R4346, R4347, R4348, R4349, R4350, R4351, R4352, R4353, R4354, R4355, R4356, R4357, R4358, R4359, R4360, R4361, R4362, R4363, R4364, R4365, R4366, R4367, R4368, R4369, R4370, R4371, R4372, R4373, R4374, R4375, R4376, R4377, R4378, R4379, R4380, R4381, R4382, R4383, R4384, R4385, R4386, R4387, R4388, R4389, R4390, R4391, R4392, R4393, R4394, R4395, R4396, R4397, R4398, R4399, R4400, R4401, R4402, R4403, R4404, R4405, R4406, R4407, R4408, R4409, R4410, R4411, R4412, R4413, R4414, R4415, R4416, R4417, R4418, R4419, R4420, R4421, R4422, R4423, R4424, R4425, R4426, R4427, R5, R6, R7, R8, R9;
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R9 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 45] { R4371 += 1 };
  s0 -> s0 [0, 65535] { R4370 += 1, R4371 += 1 };
  s0 -> s2 [46, 46] { R4371 += 1 };
  s0 -> s3 [47, 47] { R4371 += 1 };
  s0 -> s1 [48, 65535] { R4371 += 1 };
  s1 -> s1 [0, 45] { R4371 += 1 };
  s1 -> s2 [46, 46] { R4371 += 1 };
  s1 -> s3 [47, 47] { R4371 += 1 };
  s1 -> s1 [48, 65535] { R4371 += 1 };
  s2 -> s1 [0, 45] { R4371 += 1 };
  s2 -> s2 [46, 46] { R4371 += 1 };
  s2 -> s3 [47, 47] { R4371 += 1 };
  s2 -> s1 [48, 114] { R4371 += 1 };
  s2 -> s8 [115, 115] { R4371 += 1 };
  s2 -> s1 [116, 65535] { R4371 += 1 };
  s3 -> s3 [0, 45] { R4371 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s4 [46, 46] { R4371 += 1 };
  s3 -> s3 [47, 65535] { R4371 += 1 };
  s4 -> s3 [0, 45] { R4371 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s4 [46, 46] { R4371 += 1 };
  s4 -> s3 [47, 114] { R4371 += 1 };
  s4 -> s5 [115, 115] { R4371 += 1 };
  s4 -> s3 [116, 65535] { R4371 += 1 };
  s5 -> s3 [0, 45] { R4371 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s4 [46, 46] { R4371 += 1 };
  s5 -> s3 [47, 110] { R4371 += 1 };
  s5 -> s6 [111, 111] { R4371 += 1 };
  s5 -> s3 [112, 65535] { R4371 += 1 };
  s6 -> s3 [0, 45] { R4371 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s4 [46, 46] { R4371 += 1 };
  s6 -> s3 [47, 98] { R4371 += 1 };
  s6 -> s7 [99, 99] { R4371 += 1 };
  s6 -> s3 [100, 65535] { R4371 += 1 };
  s7 -> s3 [0, 45] { R4371 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s4 [46, 46] { R4371 += 1 };
  s7 -> s3 [47, 106] { R4371 += 1 };
  s7 -> s3 [108, 65535] { R4371 += 1 };
  s8 -> s1 [0, 45] { R4371 += 1 };
  s8 -> s2 [46, 46] { R4371 += 1 };
  s8 -> s3 [47, 47] { R4371 += 1 };
  s8 -> s1 [48, 110] { R4371 += 1 };
  s8 -> s9 [111, 111] { R4371 += 1 };
  s8 -> s1 [112, 65535] { R4371 += 1 };
  s9 -> s1 [0, 45] { R4371 += 1 };
  s9 -> s2 [46, 46] { R4371 += 1 };
  s9 -> s3 [47, 47] { R4371 += 1 };
  s9 -> s1 [48, 98] { R4371 += 1 };
  s9 -> s10 [99, 99] { R4371 += 1 };
  s9 -> s1 [100, 65535] { R4371 += 1 };
  s10 -> s1 [0, 45] { R4371 += 1 };
  s10 -> s2 [46, 46] { R4371 += 1 };
  s10 -> s3 [47, 47] { R4371 += 1 };
  s10 -> s1 [48, 106] { R4371 += 1 };
  s10 -> s1 [108, 65535] { R4371 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_3 {
  init s0;
  s0 -> s1 [0, 65535] { R4373 += 1, R8 += 1 };
  s0 -> s0 [0, 65535] { R4372 += 1, R4373 += 1 };
  s1 -> s1 [0, 65535] { R4373 += 1, R8 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s1 [0, 46] { R4375 += 1, R4065 += 1 };
  s0 -> s0 [0, 65535] { R4374 += 1, R4375 += 1 };
  s0 -> s2 [0, 65535] { R4375 += 1, R4064 += 1, R4065 += 1 };
  s0 -> s3 [47, 47] { R4375 += 1 };
  s0 -> s1 [48, 65535] { R4375 += 1, R4065 += 1 };
  s1 -> s1 [0, 46] { R4375 += 1, R4065 += 1 };
  s1 -> s3 [47, 47] { R4375 += 1 };
  s1 -> s1 [48, 65535] { R4375 += 1, R4065 += 1 };
  s2 -> s1 [0, 46] { R4375 += 1, R4065 += 1 };
  s2 -> s2 [0, 65535] { R4375 += 1, R4064 += 1, R4065 += 1 };
  s2 -> s3 [47, 47] { R4375 += 1 };
  s2 -> s1 [48, 65535] { R4375 += 1, R4065 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4375 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 63] { R4377 += 1, R4319 += 1 };
  s0 -> s2 [0, 65535] { R4377 += 1, R4318 += 1, R4319 += 1 };
  s0 -> s0 [0, 65535] { R4376 += 1, R4377 += 1 };
  s0 -> s3 [64, 64] { R4377 += 1, R4319 += 1 };
  s0 -> s1 [65, 65535] { R4377 += 1, R4319 += 1 };
  s1 -> s1 [0, 63] { R4377 += 1, R4319 += 1 };
  s1 -> s3 [64, 64] { R4377 += 1, R4319 += 1 };
  s1 -> s1 [65, 65535] { R4377 += 1, R4319 += 1 };
  s2 -> s1 [0, 63] { R4377 += 1, R4319 += 1 };
  s2 -> s2 [0, 65535] { R4377 += 1, R4318 += 1, R4319 += 1 };
  s2 -> s3 [64, 64] { R4377 += 1, R4319 += 1 };
  s2 -> s1 [65, 65535] { R4377 += 1, R4319 += 1 };
  s3 -> s4 [0, 65535] { R4377 += 1 };
  s3 -> s3 [0, 65535] { R4377 += 1, R4319 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4377 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5;
};
automaton uri_6 {
  init s0;
  s0 -> s1 [0, 65535] { R4379 += 1, R4321 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R4378 += 1, R4379 += 1 };
  s0 -> s2 [0, 65535] { R4379 += 1, R4320 += 1, R4321 += 1 };
  s1 -> s1 [0, 65535] { R4379 += 1, R4321 += 1, R7 += 1 };
  s1 -> s4 [0, 65535] { R4379 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4379 += 1, R4321 += 1, R7 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4379 += 1, R4320 += 1, R4321 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4379 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_7 {
  init s0;
  s0 -> s1 [0, 36] { R4381 += 1, R4323 += 1, R4269 += 1 };
  s0 -> s0 [0, 65535] { R4380 += 1, R4381 += 1 };
  s0 -> s2 [0, 65535] { R4381 += 1, R4323 += 1, R4268 += 1, R4269 += 1 };
  s0 -> s3 [0, 65535] { R4381 += 1, R4322 += 1, R4323 += 1 };
  s0 -> s1 [38, 42] { R4381 += 1, R4323 += 1, R4269 += 1 };
  s0 -> s1 [44, 57] { R4381 += 1, R4323 += 1, R4269 += 1 };
  s0 -> s1 [59, 63] { R4381 += 1, R4323 += 1, R4269 += 1 };
  s0 -> s1 [65, 65535] { R4381 += 1, R4323 += 1, R4269 += 1 };
  s1 -> s1 [0, 36] { R4381 += 1, R4323 += 1, R4269 += 1 };
  s1 -> s1 [0, 65535] { R4381 += 1, R4323 += 1 };
  s1 -> s5 [0, 65535] { R4381 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [38, 42] { R4381 += 1, R4323 += 1, R4269 += 1 };
  s1 -> s1 [44, 57] { R4381 += 1, R4323 += 1, R4269 += 1 };
  s1 -> s1 [59, 63] { R4381 += 1, R4323 += 1, R4269 += 1 };
  s1 -> s1 [65, 65535] { R4381 += 1, R4323 += 1, R4269 += 1 };
  s2 -> s1 [0, 36] { R4381 += 1, R4323 += 1, R4269 += 1 };
  s2 -> s5 [0, 65535] { R4381 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4381 += 1, R4323 += 1, R4268 += 1, R4269 += 1 };
  s2 -> s1 [38, 42] { R4381 += 1, R4323 += 1, R4269 += 1 };
  s2 -> s1 [44, 57] { R4381 += 1, R4323 += 1, R4269 += 1 };
  s2 -> s1 [59, 63] { R4381 += 1, R4323 += 1, R4269 += 1 };
  s2 -> s1 [65, 65535] { R4381 += 1, R4323 += 1, R4269 += 1 };
  s3 -> s1 [0, 36] { R4381 += 1, R4323 += 1, R4269 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R4381 += 1, R4323 += 1, R4268 += 1, R4269 += 1 };
  s3 -> s3 [0, 65535] { R4381 += 1, R4322 += 1, R4323 += 1 };
  s3 -> s1 [38, 42] { R4381 += 1, R4323 += 1, R4269 += 1 };
  s3 -> s1 [44, 57] { R4381 += 1, R4323 += 1, R4269 += 1 };
  s3 -> s1 [59, 63] { R4381 += 1, R4323 += 1, R4269 += 1 };
  s3 -> s1 [65, 65535] { R4381 += 1, R4323 += 1, R4269 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4381 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_8 {
  init s0;
  s0 -> s1 [0, 65535] { R4383 += 1, R4325 += 1, R4271 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R4382 += 1, R4383 += 1 };
  s0 -> s2 [0, 65535] { R4383 += 1, R4324 += 1, R4325 += 1 };
  s0 -> s3 [0, 65535] { R4383 += 1, R4325 += 1, R4270 += 1, R4271 += 1 };
  s1 -> s1 [0, 65535] { R4383 += 1, R4325 += 1, R4271 += 1, R2 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R4383 += 1, R4325 += 1 };
  s1 -> s5 [0, 65535] { R4383 += 1 };
  s2 -> s1 [0, 65535] { R4383 += 1, R4325 += 1, R4271 += 1, R2 += 1 };
  s2 -> s2 [0, 65535] { R4383 += 1, R4324 += 1, R4325 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R4383 += 1, R4325 += 1, R4270 += 1, R4271 += 1 };
  s3 -> s1 [0, 65535] { R4383 += 1, R4325 += 1, R4271 += 1, R2 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4383 += 1, R4325 += 1, R4270 += 1, R4271 += 1 };
  s3 -> s5 [0, 65535] { R4383 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4383 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R4383 += 1, R4325 += 1 };
  s6 -> s5 [0, 65535] { R4383 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_9 {
  init s0;
  s0 -> s1 [0, 43] { R4385 += 1, R4327 += 1, R4281 += 1 };
  s0 -> s0 [0, 65535] { R4384 += 1, R4385 += 1 };
  s0 -> s2 [0, 65535] { R4385 += 1, R4326 += 1, R4327 += 1 };
  s0 -> s3 [0, 65535] { R4385 += 1, R4327 += 1, R4280 += 1, R4281 += 1 };
  s0 -> s1 [45, 57] { R4385 += 1, R4327 += 1, R4281 += 1 };
  s0 -> s4 [58, 58] { R4385 += 1, R4327 += 1, R4281 += 1 };
  s0 -> s1 [59, 65535] { R4385 += 1, R4327 += 1, R4281 += 1 };
  s1 -> s1 [0, 43] { R4385 += 1, R4327 += 1, R4281 += 1 };
  s1 -> s1 [45, 57] { R4385 += 1, R4327 += 1, R4281 += 1 };
  s1 -> s4 [58, 58] { R4385 += 1, R4327 += 1, R4281 += 1 };
  s1 -> s1 [59, 65535] { R4385 += 1, R4327 += 1, R4281 += 1 };
  s2 -> s1 [0, 43] { R4385 += 1, R4327 += 1, R4281 += 1 };
  s2 -> s2 [0, 65535] { R4385 += 1, R4326 += 1, R4327 += 1 };
  s2 -> s3 [0, 65535] { R4385 += 1, R4327 += 1, R4280 += 1, R4281 += 1 };
  s2 -> s1 [45, 57] { R4385 += 1, R4327 += 1, R4281 += 1 };
  s2 -> s4 [58, 58] { R4385 += 1, R4327 += 1, R4281 += 1 };
  s2 -> s1 [59, 65535] { R4385 += 1, R4327 += 1, R4281 += 1 };
  s3 -> s1 [0, 43] { R4385 += 1, R4327 += 1, R4281 += 1 };
  s3 -> s3 [0, 65535] { R4385 += 1, R4327 += 1, R4280 += 1, R4281 += 1 };
  s3 -> s1 [45, 57] { R4385 += 1, R4327 += 1, R4281 += 1 };
  s3 -> s4 [58, 58] { R4385 += 1, R4327 += 1, R4281 += 1 };
  s3 -> s1 [59, 65535] { R4385 += 1, R4327 += 1, R4281 += 1 };
  s4 -> s4 [0, 43] { R4385 += 1, R4327 += 1, R4281 += 1 };
  s4 -> s4 [0, 65535] { R4385 += 1, R4327 += 1 };
  s4 -> s5 [0, 65535] { R4385 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [45, 65535] { R4385 += 1, R4327 += 1, R4281 += 1 };
  s5 -> s5 [0, 65535] { R4385 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s4, s5, s6;
};
automaton uri_10 {
  init s0;
  s0 -> s1 [0, 65535] { R4387 += 1, R4328 += 1, R4329 += 1 };
  s0 -> s2 [0, 65535] { R4387 += 1, R4329 += 1, R4282 += 1, R4283 += 1 };
  s0 -> s3 [0, 65535] { R4387 += 1, R4329 += 1, R4283 += 1, R6 += 1 };
  s0 -> s0 [0, 65535] { R4386 += 1, R4387 += 1 };
  s1 -> s1 [0, 65535] { R4387 += 1, R4328 += 1, R4329 += 1 };
  s1 -> s2 [0, 65535] { R4387 += 1, R4329 += 1, R4282 += 1, R4283 += 1 };
  s1 -> s3 [0, 65535] { R4387 += 1, R4329 += 1, R4283 += 1, R6 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4387 += 1, R4329 += 1, R4282 += 1, R4283 += 1 };
  s2 -> s3 [0, 65535] { R4387 += 1, R4329 += 1, R4283 += 1, R6 += 1 };
  s2 -> s4 [0, 65535] { R4387 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4387 += 1, R4329 += 1, R4283 += 1, R6 += 1 };
  s3 -> s4 [0, 65535] { R4387 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R4387 += 1, R4329 += 1 };
  s4 -> s4 [0, 65535] { R4387 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R4387 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4387 += 1, R4329 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_11 {
  init s0;
  s0 -> s1 [0, 57] { R4389 += 1, R4331 += 1, R4285 += 1, R3697 += 1 };
  s0 -> s0 [0, 65535] { R4388 += 1, R4389 += 1 };
  s0 -> s2 [0, 65535] { R4389 += 1, R4330 += 1, R4331 += 1 };
  s0 -> s3 [0, 65535] { R4389 += 1, R4331 += 1, R4285 += 1, R3696 += 1, R3697 += 1 };
  s0 -> s4 [0, 65535] { R4389 += 1, R4331 += 1, R4284 += 1, R4285 += 1 };
  s0 -> s5 [58, 58] { R4389 += 1, R4331 += 1, R4285 += 1 };
  s0 -> s1 [59, 65535] { R4389 += 1, R4331 += 1, R4285 += 1, R3697 += 1 };
  s1 -> s1 [0, 57] { R4389 += 1, R4331 += 1, R4285 += 1, R3697 += 1 };
  s1 -> s5 [58, 58] { R4389 += 1, R4331 += 1, R4285 += 1 };
  s1 -> s1 [59, 65535] { R4389 += 1, R4331 += 1, R4285 += 1, R3697 += 1 };
  s2 -> s1 [0, 57] { R4389 += 1, R4331 += 1, R4285 += 1, R3697 += 1 };
  s2 -> s2 [0, 65535] { R4389 += 1, R4330 += 1, R4331 += 1 };
  s2 -> s3 [0, 65535] { R4389 += 1, R4331 += 1, R4285 += 1, R3696 += 1, R3697 += 1 };
  s2 -> s4 [0, 65535] { R4389 += 1, R4331 += 1, R4284 += 1, R4285 += 1 };
  s2 -> s5 [58, 58] { R4389 += 1, R4331 += 1, R4285 += 1 };
  s2 -> s1 [59, 65535] { R4389 += 1, R4331 += 1, R4285 += 1, R3697 += 1 };
  s3 -> s1 [0, 57] { R4389 += 1, R4331 += 1, R4285 += 1, R3697 += 1 };
  s3 -> s3 [0, 65535] { R4389 += 1, R4331 += 1, R4285 += 1, R3696 += 1, R3697 += 1 };
  s3 -> s5 [58, 58] { R4389 += 1, R4331 += 1, R4285 += 1 };
  s3 -> s1 [59, 65535] { R4389 += 1, R4331 += 1, R4285 += 1, R3697 += 1 };
  s4 -> s1 [0, 57] { R4389 += 1, R4331 += 1, R4285 += 1, R3697 += 1 };
  s4 -> s3 [0, 65535] { R4389 += 1, R4331 += 1, R4285 += 1, R3696 += 1, R3697 += 1 };
  s4 -> s4 [0, 65535] { R4389 += 1, R4331 += 1, R4284 += 1, R4285 += 1 };
  s4 -> s5 [58, 58] { R4389 += 1, R4331 += 1, R4285 += 1 };
  s4 -> s1 [59, 65535] { R4389 += 1, R4331 += 1, R4285 += 1, R3697 += 1 };
  s5 -> s5 [0, 65535] { R4389 += 1, R4331 += 1, R4285 += 1 };
  s5 -> s6 [0, 65535] { R4389 += 1, R4331 += 1 };
  s5 -> s7 [0, 65535] { R4389 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R4389 += 1, R4331 += 1 };
  s6 -> s7 [0, 65535] { R4389 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R4389 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton uri_12 {
  init s0;
  s0 -> s1 [0, 90] { R4391 += 1, R4333 += 1, R4287 += 1, R4253 += 1 };
  s0 -> s2 [0, 65535] { R4391 += 1, R4333 += 1, R4286 += 1, R4287 += 1 };
  s0 -> s3 [0, 65535] { R4391 += 1, R4333 += 1, R4287 += 1, R4252 += 1, R4253 += 1 };
  s0 -> s4 [0, 65535] { R4391 += 1, R4332 += 1, R4333 += 1 };
  s0 -> s0 [0, 65535] { R4390 += 1, R4391 += 1 };
  s0 -> s5 [91, 91] { R4391 += 1, R4333 += 1, R4287 += 1, R4253 += 1 };
  s0 -> s1 [92, 65535] { R4391 += 1, R4333 += 1, R4287 += 1, R4253 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s9 [0, 65535] { R4391 += 1, R4333 += 1, R4287 += 1 };
  s1 -> s1 [0, 65535] { R4391 += 1, R4333 += 1, R4287 += 1, R4253 += 1 };
  s1 -> s7 [0, 65535] { R4391 += 1, R4333 += 1 };
  s1 -> s8 [0, 65535] { R4391 += 1 };
  s2 -> s1 [0, 90] { R4391 += 1, R4333 += 1, R4287 += 1, R4253 += 1 };
  s2 -> s2 [0, 65535] { R4391 += 1, R4333 += 1, R4286 += 1, R4287 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R4391 += 1, R4333 += 1, R4287 += 1, R4252 += 1, R4253 += 1 };
  s2 -> s8 [0, 65535] { R4391 += 1 };
  s2 -> s5 [91, 91] { R4391 += 1, R4333 += 1, R4287 += 1, R4253 += 1 };
  s2 -> s1 [92, 65535] { R4391 += 1, R4333 += 1, R4287 += 1, R4253 += 1 };
  s3 -> s1 [0, 90] { R4391 += 1, R4333 += 1, R4287 += 1, R4253 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R4391 += 1, R4333 += 1, R4287 += 1, R4252 += 1, R4253 += 1 };
  s3 -> s7 [0, 65535] { R4391 += 1, R4333 += 1 };
  s3 -> s8 [0, 65535] { R4391 += 1 };
  s3 -> s5 [91, 91] { R4391 += 1, R4333 += 1, R4287 += 1, R4253 += 1 };
  s3 -> s1 [92, 65535] { R4391 += 1, R4333 += 1, R4287 += 1, R4253 += 1 };
  s4 -> s1 [0, 90] { R4391 += 1, R4333 += 1, R4287 += 1, R4253 += 1 };
  s4 -> s2 [0, 65535] { R4391 += 1, R4333 += 1, R4286 += 1, R4287 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s3 [0, 65535] { R4391 += 1, R4333 += 1, R4287 += 1, R4252 += 1, R4253 += 1 };
  s4 -> s4 [0, 65535] { R4391 += 1, R4332 += 1, R4333 += 1 };
  s4 -> s5 [91, 91] { R4391 += 1, R4333 += 1, R4287 += 1, R4253 += 1 };
  s4 -> s1 [92, 65535] { R4391 += 1, R4333 += 1, R4287 += 1, R4253 += 1 };
  s5 -> s1 [0, 65535] { R4391 += 1, R4333 += 1, R4287 += 1, R4253 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4391 += 1, R4333 += 1 };
  s7 -> s8 [0, 65535] { R4391 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R4391 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s9 [0, 65535] { R4391 += 1, R4333 += 1, R4287 += 1 };
  s9 -> s7 [0, 65535] { R4391 += 1, R4333 += 1 };
  s9 -> s8 [0, 65535] { R4391 += 1 };
  accepting s3, s4, s8, s2, s9, s6, s1, s7, s0;
};
automaton uri_13 {
  init s0;
  s0 -> s1 [0, 65535] { R4393 += 1, R4335 += 1, R4289 += 1, R4255 += 1, R11 += 1 };
  s0 -> s2 [0, 65535] { R4393 += 1, R4335 += 1, R4289 += 1, R4254 += 1, R4255 += 1 };
  s0 -> s3 [0, 65535] { R4393 += 1, R4334 += 1, R4335 += 1 };
  s0 -> s4 [0, 65535] { R4393 += 1, R4335 += 1, R4288 += 1, R4289 += 1 };
  s0 -> s0 [0, 65535] { R4392 += 1, R4393 += 1 };
  s1 -> s5 [0, 65535] { R4393 += 1 };
  s1 -> s1 [0, 65535] { R4393 += 1, R4335 += 1, R4289 += 1, R4255 += 1, R11 += 1 };
  s1 -> s7 [0, 65535] { R4393 += 1, R4335 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s8 [0, 65535] { R4393 += 1, R4335 += 1, R4289 += 1 };
  s2 -> s5 [0, 65535] { R4393 += 1 };
  s2 -> s1 [0, 65535] { R4393 += 1, R4335 += 1, R4289 += 1, R4255 += 1, R11 += 1 };
  s2 -> s7 [0, 65535] { R4393 += 1, R4335 += 1 };
  s2 -> s2 [0, 65535] { R4393 += 1, R4335 += 1, R4289 += 1, R4254 += 1, R4255 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s1 [0, 65535] { R4393 += 1, R4335 += 1, R4289 += 1, R4255 += 1, R11 += 1 };
  s3 -> s2 [0, 65535] { R4393 += 1, R4335 += 1, R4289 += 1, R4254 += 1, R4255 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R4393 += 1, R4334 += 1, R4335 += 1 };
  s3 -> s4 [0, 65535] { R4393 += 1, R4335 += 1, R4288 += 1, R4289 += 1 };
  s4 -> s5 [0, 65535] { R4393 += 1 };
  s4 -> s1 [0, 65535] { R4393 += 1, R4335 += 1, R4289 += 1, R4255 += 1, R11 += 1 };
  s4 -> s2 [0, 65535] { R4393 += 1, R4335 += 1, R4289 += 1, R4254 += 1, R4255 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4393 += 1, R4335 += 1, R4288 += 1, R4289 += 1 };
  s5 -> s5 [0, 65535] { R4393 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R4393 += 1 };
  s7 -> s7 [0, 65535] { R4393 += 1, R4335 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s5 [0, 65535] { R4393 += 1 };
  s8 -> s7 [0, 65535] { R4393 += 1, R4335 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R4393 += 1, R4335 += 1, R4289 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 57] { R4395 += 1, R4337 += 1, R4291 += 1, R4261 += 1 };
  s0 -> s2 [0, 65535] { R4395 += 1, R4337 += 1, R4291 += 1, R4260 += 1, R4261 += 1 };
  s0 -> s3 [0, 65535] { R4395 += 1, R4337 += 1, R4290 += 1, R4291 += 1 };
  s0 -> s0 [0, 65535] { R4394 += 1, R4395 += 1 };
  s0 -> s4 [0, 65535] { R4395 += 1, R4336 += 1, R4337 += 1 };
  s0 -> s1 [59, 65535] { R4395 += 1, R4337 += 1, R4291 += 1, R4261 += 1 };
  s1 -> s1 [0, 57] { R4395 += 1, R4337 += 1, R4291 += 1, R4261 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R4395 += 1, R4337 += 1 };
  s1 -> s1 [0, 65535] { R4395 += 1, R4337 += 1, R4291 += 1 };
  s1 -> s6 [0, 65535] { R4395 += 1 };
  s1 -> s1 [59, 65535] { R4395 += 1, R4337 += 1, R4291 += 1, R4261 += 1 };
  s2 -> s1 [0, 57] { R4395 += 1, R4337 += 1, R4291 += 1, R4261 += 1 };
  s2 -> s2 [0, 65535] { R4395 += 1, R4337 += 1, R4291 += 1, R4260 += 1, R4261 += 1 };
  s2 -> s7 [0, 65535] { R4395 += 1, R4337 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R4395 += 1 };
  s2 -> s1 [59, 65535] { R4395 += 1, R4337 += 1, R4291 += 1, R4261 += 1 };
  s3 -> s1 [0, 57] { R4395 += 1, R4337 += 1, R4291 += 1, R4261 += 1 };
  s3 -> s2 [0, 65535] { R4395 += 1, R4337 += 1, R4291 += 1, R4260 += 1, R4261 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4395 += 1, R4337 += 1, R4290 += 1, R4291 += 1 };
  s3 -> s6 [0, 65535] { R4395 += 1 };
  s3 -> s1 [59, 65535] { R4395 += 1, R4337 += 1, R4291 += 1, R4261 += 1 };
  s4 -> s1 [0, 57] { R4395 += 1, R4337 += 1, R4291 += 1, R4261 += 1 };
  s4 -> s2 [0, 65535] { R4395 += 1, R4337 += 1, R4291 += 1, R4260 += 1, R4261 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R4395 += 1, R4337 += 1, R4290 += 1, R4291 += 1 };
  s4 -> s4 [0, 65535] { R4395 += 1, R4336 += 1, R4337 += 1 };
  s4 -> s1 [59, 65535] { R4395 += 1, R4337 += 1, R4291 += 1, R4261 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4395 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R4395 += 1, R4337 += 1 };
  s7 -> s6 [0, 65535] { R4395 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton uri_15 {
  init s0;
  s0 -> s1 [0, 65535] { R4397 += 1, R4339 += 1, R4293 += 1, R4262 += 1, R4263 += 1 };
  s0 -> s2 [0, 65535] { R4397 += 1, R4338 += 1, R4339 += 1 };
  s0 -> s3 [0, 65535] { R4397 += 1, R4339 += 1, R4292 += 1, R4293 += 1 };
  s0 -> s4 [0, 65535] { R4397 += 1, R4339 += 1, R4293 += 1, R4263 += 1, R1 += 1 };
  s0 -> s0 [0, 65535] { R4396 += 1, R4397 += 1 };
  s1 -> s1 [0, 65535] { R4397 += 1, R4339 += 1, R4293 += 1, R4262 += 1, R4263 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R4397 += 1, R4339 += 1 };
  s1 -> s4 [0, 65535] { R4397 += 1, R4339 += 1, R4293 += 1, R4263 += 1, R1 += 1 };
  s1 -> s8 [0, 65535] { R4397 += 1 };
  s2 -> s1 [0, 65535] { R4397 += 1, R4339 += 1, R4293 += 1, R4262 += 1, R4263 += 1 };
  s2 -> s2 [0, 65535] { R4397 += 1, R4338 += 1, R4339 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R4397 += 1, R4339 += 1, R4292 += 1, R4293 += 1 };
  s2 -> s4 [0, 65535] { R4397 += 1, R4339 += 1, R4293 += 1, R4263 += 1, R1 += 1 };
  s3 -> s1 [0, 65535] { R4397 += 1, R4339 += 1, R4293 += 1, R4262 += 1, R4263 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R4397 += 1, R4339 += 1, R4292 += 1, R4293 += 1 };
  s3 -> s4 [0, 65535] { R4397 += 1, R4339 += 1, R4293 += 1, R4263 += 1, R1 += 1 };
  s3 -> s8 [0, 65535] { R4397 += 1 };
  s4 -> s5 [0, 65535] { R4397 += 1, R4339 += 1, R4293 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R4397 += 1, R4339 += 1 };
  s4 -> s4 [0, 65535] { R4397 += 1, R4339 += 1, R4293 += 1, R4263 += 1, R1 += 1 };
  s4 -> s8 [0, 65535] { R4397 += 1 };
  s5 -> s5 [0, 65535] { R4397 += 1, R4339 += 1, R4293 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R4397 += 1, R4339 += 1 };
  s5 -> s8 [0, 65535] { R4397 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4397 += 1, R4339 += 1 };
  s7 -> s8 [0, 65535] { R4397 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R4397 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 64] { R4399 += 1, R4341 += 1, R4295 += 1, R4265 += 1 };
  s0 -> s2 [0, 65535] { R4399 += 1, R4340 += 1, R4341 += 1 };
  s0 -> s3 [0, 65535] { R4399 += 1, R4341 += 1, R4294 += 1, R4295 += 1 };
  s0 -> s4 [0, 65535] { R4399 += 1, R4341 += 1, R4295 += 1, R4264 += 1, R4265 += 1 };
  s0 -> s0 [0, 65535] { R4398 += 1, R4399 += 1 };
  s0 -> s1 [91, 65535] { R4399 += 1, R4341 += 1, R4295 += 1, R4265 += 1 };
  s1 -> s1 [0, 64] { R4399 += 1, R4341 += 1, R4295 += 1, R4265 += 1 };
  s1 -> s5 [0, 65535] { R4399 += 1, R4341 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R4399 += 1 };
  s1 -> s1 [0, 65535] { R4399 += 1, R4341 += 1, R4295 += 1 };
  s1 -> s1 [91, 65535] { R4399 += 1, R4341 += 1, R4295 += 1, R4265 += 1 };
  s2 -> s1 [0, 64] { R4399 += 1, R4341 += 1, R4295 += 1, R4265 += 1 };
  s2 -> s2 [0, 65535] { R4399 += 1, R4340 += 1, R4341 += 1 };
  s2 -> s3 [0, 65535] { R4399 += 1, R4341 += 1, R4294 += 1, R4295 += 1 };
  s2 -> s4 [0, 65535] { R4399 += 1, R4341 += 1, R4295 += 1, R4264 += 1, R4265 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [91, 65535] { R4399 += 1, R4341 += 1, R4295 += 1, R4265 += 1 };
  s3 -> s1 [0, 64] { R4399 += 1, R4341 += 1, R4295 += 1, R4265 += 1 };
  s3 -> s3 [0, 65535] { R4399 += 1, R4341 += 1, R4294 += 1, R4295 += 1 };
  s3 -> s4 [0, 65535] { R4399 += 1, R4341 += 1, R4295 += 1, R4264 += 1, R4265 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R4399 += 1 };
  s3 -> s1 [91, 65535] { R4399 += 1, R4341 += 1, R4295 += 1, R4265 += 1 };
  s4 -> s1 [0, 64] { R4399 += 1, R4341 += 1, R4295 += 1, R4265 += 1 };
  s4 -> s4 [0, 65535] { R4399 += 1, R4341 += 1, R4295 += 1, R4264 += 1, R4265 += 1 };
  s4 -> s5 [0, 65535] { R4399 += 1, R4341 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R4399 += 1 };
  s4 -> s1 [91, 65535] { R4399 += 1, R4341 += 1, R4295 += 1, R4265 += 1 };
  s5 -> s5 [0, 65535] { R4399 += 1, R4341 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R4399 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4399 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton uri_17 {
  init s0;
  s0 -> s1 [0, 65535] { R4401 += 1, R4342 += 1, R4343 += 1 };
  s0 -> s0 [0, 65535] { R4400 += 1, R4401 += 1 };
  s0 -> s2 [0, 65535] { R4401 += 1, R4343 += 1, R4297 += 1, R4266 += 1, R4267 += 1 };
  s0 -> s3 [0, 65535] { R4401 += 1, R4343 += 1, R4297 += 1, R4267 += 1, R4247 += 1 };
  s0 -> s4 [0, 65535] { R4401 += 1, R4343 += 1, R4296 += 1, R4297 += 1 };
  s1 -> s1 [0, 65535] { R4401 += 1, R4342 += 1, R4343 += 1 };
  s1 -> s2 [0, 65535] { R4401 += 1, R4343 += 1, R4297 += 1, R4266 += 1, R4267 += 1 };
  s1 -> s3 [0, 65535] { R4401 += 1, R4343 += 1, R4297 += 1, R4267 += 1, R4247 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s4 [0, 65535] { R4401 += 1, R4343 += 1, R4296 += 1, R4297 += 1 };
  s2 -> s2 [0, 65535] { R4401 += 1, R4343 += 1, R4297 += 1, R4266 += 1, R4267 += 1 };
  s2 -> s3 [0, 65535] { R4401 += 1, R4343 += 1, R4297 += 1, R4267 += 1, R4247 += 1 };
  s2 -> s8 [0, 65535] { R4401 += 1, R4343 += 1 };
  s2 -> s5 [0, 65535] { R4401 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R4401 += 1, R4343 += 1, R4297 += 1 };
  s3 -> s3 [0, 65535] { R4401 += 1, R4343 += 1, R4297 += 1, R4267 += 1, R4247 += 1 };
  s3 -> s8 [0, 65535] { R4401 += 1, R4343 += 1 };
  s3 -> s5 [0, 65535] { R4401 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s2 [0, 65535] { R4401 += 1, R4343 += 1, R4297 += 1, R4266 += 1, R4267 += 1 };
  s4 -> s3 [0, 65535] { R4401 += 1, R4343 += 1, R4297 += 1, R4267 += 1, R4247 += 1 };
  s4 -> s5 [0, 65535] { R4401 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4401 += 1, R4343 += 1, R4296 += 1, R4297 += 1 };
  s5 -> s5 [0, 65535] { R4401 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4401 += 1, R4343 += 1, R4297 += 1 };
  s7 -> s8 [0, 65535] { R4401 += 1, R4343 += 1 };
  s7 -> s5 [0, 65535] { R4401 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R4401 += 1, R4343 += 1 };
  s8 -> s5 [0, 65535] { R4401 += 1 };
  s8 -> s6 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 65535] { R4403 += 1, R4345 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R4402 += 1, R4403 += 1 };
  s0 -> s2 [0, 65535] { R4403 += 1, R4344 += 1, R4345 += 1 };
  s1 -> s1 [0, 65535] { R4403 += 1, R4345 += 1, R5 += 1 };
  s1 -> s4 [0, 65535] { R4403 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4403 += 1, R4345 += 1, R5 += 1 };
  s2 -> s2 [0, 65535] { R4403 += 1, R4344 += 1, R4345 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4403 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_19 {
  init s0;
  s0 -> s0 [0, 65535] { R4404 += 1, R4405 += 1 };
  s0 -> s1 [0, 65535] { R4405 += 1, R4347 += 1, R4248 += 1, R4249 += 1 };
  s0 -> s2 [0, 65535] { R4405 += 1, R4346 += 1, R4347 += 1 };
  s0 -> s3 [63, 63] { R4405 += 1, R4347 += 1, R4249 += 1 };
  s1 -> s1 [0, 65535] { R4405 += 1, R4347 += 1, R4248 += 1, R4249 += 1 };
  s1 -> s3 [63, 63] { R4405 += 1, R4347 += 1, R4249 += 1 };
  s2 -> s1 [0, 65535] { R4405 += 1, R4347 += 1, R4248 += 1, R4249 += 1 };
  s2 -> s2 [0, 65535] { R4405 += 1, R4346 += 1, R4347 += 1 };
  s2 -> s3 [63, 63] { R4405 += 1, R4347 += 1, R4249 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R4405 += 1 };
  s3 -> s3 [0, 65535] { R4405 += 1, R4347 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4405 += 1 };
  accepting s3, s4, s5;
};
automaton uri_20 {
  init s0;
  s0 -> s0 [0, 65535] { R4406 += 1, R4407 += 1 };
  s0 -> s1 [0, 65535] { R4407 += 1, R4349 += 1, R4250 += 1, R4251 += 1 };
  s0 -> s2 [0, 65535] { R4407 += 1, R4349 += 1, R4251 += 1, R10 += 1 };
  s0 -> s3 [0, 65535] { R4407 += 1, R4348 += 1, R4349 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R4407 += 1, R4349 += 1, R4250 += 1, R4251 += 1 };
  s1 -> s2 [0, 65535] { R4407 += 1, R4349 += 1, R4251 += 1, R10 += 1 };
  s1 -> s5 [0, 65535] { R4407 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4407 += 1, R4349 += 1, R4251 += 1, R10 += 1 };
  s2 -> s5 [0, 65535] { R4407 += 1 };
  s2 -> s6 [0, 65535] { R4407 += 1, R4349 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R4407 += 1, R4349 += 1, R4250 += 1, R4251 += 1 };
  s3 -> s2 [0, 65535] { R4407 += 1, R4349 += 1, R4251 += 1, R10 += 1 };
  s3 -> s3 [0, 65535] { R4407 += 1, R4348 += 1, R4349 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4407 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R4407 += 1 };
  s6 -> s6 [0, 65535] { R4407 += 1, R4349 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_21 {
  init s0;
  s0 -> s1 [0, 58] { R4409 += 1, R4351 += 1, R4299 += 1 };
  s0 -> s2 [0, 65535] { R4409 += 1, R4350 += 1, R4351 += 1 };
  s0 -> s3 [0, 65535] { R4409 += 1, R4351 += 1, R4298 += 1, R4299 += 1 };
  s0 -> s0 [0, 65535] { R4408 += 1, R4409 += 1 };
  s0 -> s4 [59, 59] { R4409 += 1, R4351 += 1, R4299 += 1 };
  s0 -> s1 [60, 65535] { R4409 += 1, R4351 += 1, R4299 += 1 };
  s1 -> s1 [0, 58] { R4409 += 1, R4351 += 1, R4299 += 1 };
  s1 -> s4 [59, 59] { R4409 += 1, R4351 += 1, R4299 += 1 };
  s1 -> s1 [60, 65535] { R4409 += 1, R4351 += 1, R4299 += 1 };
  s2 -> s1 [0, 58] { R4409 += 1, R4351 += 1, R4299 += 1 };
  s2 -> s2 [0, 65535] { R4409 += 1, R4350 += 1, R4351 += 1 };
  s2 -> s3 [0, 65535] { R4409 += 1, R4351 += 1, R4298 += 1, R4299 += 1 };
  s2 -> s4 [59, 59] { R4409 += 1, R4351 += 1, R4299 += 1 };
  s2 -> s1 [60, 65535] { R4409 += 1, R4351 += 1, R4299 += 1 };
  s3 -> s1 [0, 58] { R4409 += 1, R4351 += 1, R4299 += 1 };
  s3 -> s3 [0, 65535] { R4409 += 1, R4351 += 1, R4298 += 1, R4299 += 1 };
  s3 -> s4 [59, 59] { R4409 += 1, R4351 += 1, R4299 += 1 };
  s3 -> s1 [60, 65535] { R4409 += 1, R4351 += 1, R4299 += 1 };
  s4 -> s5 [0, 65535] { R4409 += 1 };
  s4 -> s4 [0, 65535] { R4409 += 1, R4351 += 1, R4299 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R4409 += 1, R4351 += 1 };
  s5 -> s5 [0, 65535] { R4409 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R4409 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4409 += 1, R4351 += 1 };
  accepting s4, s5, s6, s7;
};
automaton uri_22 {
  init s0;
  s0 -> s1 [0, 65535] { R4411 += 1, R4353 += 1, R4301 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R4410 += 1, R4411 += 1 };
  s0 -> s2 [0, 65535] { R4411 += 1, R4352 += 1, R4353 += 1 };
  s0 -> s3 [0, 65535] { R4411 += 1, R4353 += 1, R4300 += 1, R4301 += 1 };
  s1 -> s1 [0, 65535] { R4411 += 1, R4353 += 1, R4301 += 1, R4 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R4411 += 1, R4353 += 1 };
  s1 -> s5 [0, 65535] { R4411 += 1 };
  s2 -> s1 [0, 65535] { R4411 += 1, R4353 += 1, R4301 += 1, R4 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4411 += 1, R4352 += 1, R4353 += 1 };
  s2 -> s3 [0, 65535] { R4411 += 1, R4353 += 1, R4300 += 1, R4301 += 1 };
  s3 -> s1 [0, 65535] { R4411 += 1, R4353 += 1, R4301 += 1, R4 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4411 += 1, R4353 += 1, R4300 += 1, R4301 += 1 };
  s3 -> s5 [0, 65535] { R4411 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4411 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R4411 += 1, R4353 += 1 };
  s6 -> s5 [0, 65535] { R4411 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_23 {
  init s0;
  s0 -> s1 [0, 37] { R4413 += 1, R4355 += 1, R4303 += 1 };
  s0 -> s0 [0, 65535] { R4412 += 1, R4413 += 1 };
  s0 -> s2 [0, 65535] { R4413 += 1, R4354 += 1, R4355 += 1 };
  s0 -> s3 [0, 65535] { R4413 += 1, R4355 += 1, R4302 += 1, R4303 += 1 };
  s0 -> s4 [0, 65535] { R4413 += 1, R4355 += 1, R4303 += 1, R2956 += 1 };
  s0 -> s5 [38, 38] { R4413 += 1, R4355 += 1, R4303 += 1 };
  s0 -> s1 [39, 65535] { R4413 += 1, R4355 += 1, R4303 += 1 };
  s1 -> s1 [0, 37] { R4413 += 1, R4355 += 1, R4303 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R4413 += 1, R4355 += 1 };
  s1 -> s8 [0, 65535] { R4413 += 1 };
  s1 -> s5 [38, 38] { R4413 += 1, R4355 += 1, R4303 += 1 };
  s1 -> s1 [39, 65535] { R4413 += 1, R4355 += 1, R4303 += 1 };
  s2 -> s1 [0, 37] { R4413 += 1, R4355 += 1, R4303 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s2 [0, 65535] { R4413 += 1, R4354 += 1, R4355 += 1 };
  s2 -> s3 [0, 65535] { R4413 += 1, R4355 += 1, R4302 += 1, R4303 += 1 };
  s2 -> s4 [0, 65535] { R4413 += 1, R4355 += 1, R4303 += 1, R2956 += 1 };
  s2 -> s5 [38, 38] { R4413 += 1, R4355 += 1, R4303 += 1 };
  s2 -> s1 [39, 65535] { R4413 += 1, R4355 += 1, R4303 += 1 };
  s3 -> s1 [0, 37] { R4413 += 1, R4355 += 1, R4303 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s8 [0, 65535] { R4413 += 1 };
  s3 -> s3 [0, 65535] { R4413 += 1, R4355 += 1, R4302 += 1, R4303 += 1 };
  s3 -> s4 [0, 65535] { R4413 += 1, R4355 += 1, R4303 += 1, R2956 += 1 };
  s3 -> s5 [38, 38] { R4413 += 1, R4355 += 1, R4303 += 1 };
  s3 -> s1 [39, 65535] { R4413 += 1, R4355 += 1, R4303 += 1 };
  s4 -> s1 [0, 37] { R4413 += 1, R4355 += 1, R4303 += 1 };
  s4 -> s6 [0, 65535] { R4413 += 1, R4355 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R4413 += 1 };
  s4 -> s4 [0, 65535] { R4413 += 1, R4355 += 1, R4303 += 1, R2956 += 1 };
  s4 -> s5 [38, 38] { R4413 += 1, R4355 += 1, R4303 += 1 };
  s4 -> s1 [39, 65535] { R4413 += 1, R4355 += 1, R4303 += 1 };
  s5 -> s5 [0, 65535] { R4413 += 1, R4355 += 1, R4303 += 1 };
  s6 -> s6 [0, 65535] { R4413 += 1, R4355 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R4413 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R4413 += 1 };
  accepting s3, s4, s8, s2, s6, s1, s7, s0;
};
automaton uri_24 {
  init s0;
  s0 -> s1 [0, 58] { R4415 += 1, R4357 += 1, R4305 += 1, R2961 += 1 };
  s0 -> s0 [0, 65535] { R4414 += 1, R4415 += 1 };
  s0 -> s2 [0, 65535] { R4415 += 1, R4357 += 1, R4304 += 1, R4305 += 1 };
  s0 -> s3 [0, 65535] { R4415 += 1, R4357 += 1, R4305 += 1, R2960 += 1, R2961 += 1 };
  s0 -> s4 [0, 65535] { R4415 += 1, R4356 += 1, R4357 += 1 };
  s0 -> s5 [59, 59] { R4415 += 1, R4357 += 1, R4305 += 1 };
  s0 -> s1 [60, 65535] { R4415 += 1, R4357 += 1, R4305 += 1, R2961 += 1 };
  s1 -> s1 [0, 58] { R4415 += 1, R4357 += 1, R4305 += 1, R2961 += 1 };
  s1 -> s5 [59, 59] { R4415 += 1, R4357 += 1, R4305 += 1 };
  s1 -> s1 [60, 65535] { R4415 += 1, R4357 += 1, R4305 += 1, R2961 += 1 };
  s2 -> s1 [0, 58] { R4415 += 1, R4357 += 1, R4305 += 1, R2961 += 1 };
  s2 -> s2 [0, 65535] { R4415 += 1, R4357 += 1, R4304 += 1, R4305 += 1 };
  s2 -> s3 [0, 65535] { R4415 += 1, R4357 += 1, R4305 += 1, R2960 += 1, R2961 += 1 };
  s2 -> s5 [59, 59] { R4415 += 1, R4357 += 1, R4305 += 1 };
  s2 -> s1 [60, 65535] { R4415 += 1, R4357 += 1, R4305 += 1, R2961 += 1 };
  s3 -> s1 [0, 58] { R4415 += 1, R4357 += 1, R4305 += 1, R2961 += 1 };
  s3 -> s3 [0, 65535] { R4415 += 1, R4357 += 1, R4305 += 1, R2960 += 1, R2961 += 1 };
  s3 -> s5 [59, 59] { R4415 += 1, R4357 += 1, R4305 += 1 };
  s3 -> s1 [60, 65535] { R4415 += 1, R4357 += 1, R4305 += 1, R2961 += 1 };
  s4 -> s1 [0, 58] { R4415 += 1, R4357 += 1, R4305 += 1, R2961 += 1 };
  s4 -> s2 [0, 65535] { R4415 += 1, R4357 += 1, R4304 += 1, R4305 += 1 };
  s4 -> s3 [0, 65535] { R4415 += 1, R4357 += 1, R4305 += 1, R2960 += 1, R2961 += 1 };
  s4 -> s4 [0, 65535] { R4415 += 1, R4356 += 1, R4357 += 1 };
  s4 -> s5 [59, 59] { R4415 += 1, R4357 += 1, R4305 += 1 };
  s4 -> s1 [60, 65535] { R4415 += 1, R4357 += 1, R4305 += 1, R2961 += 1 };
  s5 -> s5 [0, 65535] { R4415 += 1, R4357 += 1, R4305 += 1 };
  s5 -> s6 [0, 65535] { R4415 += 1, R4357 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R4415 += 1 };
  s6 -> s6 [0, 65535] { R4415 += 1, R4357 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R4415 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R4415 += 1 };
  accepting s5, s6, s7, s8;
};
automaton uri_25 {
  init s0;
  s0 -> s1 [0, 58] { R4417 += 1, R4359 += 1, R4307 += 1, R4257 += 1 };
  s0 -> s2 [0, 65535] { R4417 += 1, R4359 += 1, R4306 += 1, R4307 += 1 };
  s0 -> s3 [0, 65535] { R4417 += 1, R4358 += 1, R4359 += 1 };
  s0 -> s4 [0, 65535] { R4417 += 1, R4359 += 1, R4307 += 1, R4256 += 1, R4257 += 1 };
  s0 -> s0 [0, 65535] { R4416 += 1, R4417 += 1 };
  s0 -> s1 [60, 65535] { R4417 += 1, R4359 += 1, R4307 += 1, R4257 += 1 };
  s1 -> s1 [0, 58] { R4417 += 1, R4359 += 1, R4307 += 1, R4257 += 1 };
  s1 -> s5 [0, 65535] { R4417 += 1, R4359 += 1 };
  s1 -> s6 [0, 65535] { R4417 += 1 };
  s1 -> s1 [0, 65535] { R4417 += 1, R4359 += 1, R4307 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [60, 65535] { R4417 += 1, R4359 += 1, R4307 += 1, R4257 += 1 };
  s2 -> s1 [0, 58] { R4417 += 1, R4359 += 1, R4307 += 1, R4257 += 1 };
  s2 -> s2 [0, 65535] { R4417 += 1, R4359 += 1, R4306 += 1, R4307 += 1 };
  s2 -> s4 [0, 65535] { R4417 += 1, R4359 += 1, R4307 += 1, R4256 += 1, R4257 += 1 };
  s2 -> s6 [0, 65535] { R4417 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s1 [60, 65535] { R4417 += 1, R4359 += 1, R4307 += 1, R4257 += 1 };
  s3 -> s1 [0, 58] { R4417 += 1, R4359 += 1, R4307 += 1, R4257 += 1 };
  s3 -> s2 [0, 65535] { R4417 += 1, R4359 += 1, R4306 += 1, R4307 += 1 };
  s3 -> s3 [0, 65535] { R4417 += 1, R4358 += 1, R4359 += 1 };
  s3 -> s4 [0, 65535] { R4417 += 1, R4359 += 1, R4307 += 1, R4256 += 1, R4257 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s1 [60, 65535] { R4417 += 1, R4359 += 1, R4307 += 1, R4257 += 1 };
  s4 -> s1 [0, 58] { R4417 += 1, R4359 += 1, R4307 += 1, R4257 += 1 };
  s4 -> s5 [0, 65535] { R4417 += 1, R4359 += 1 };
  s4 -> s4 [0, 65535] { R4417 += 1, R4359 += 1, R4307 += 1, R4256 += 1, R4257 += 1 };
  s4 -> s6 [0, 65535] { R4417 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s1 [60, 65535] { R4417 += 1, R4359 += 1, R4307 += 1, R4257 += 1 };
  s5 -> s5 [0, 65535] { R4417 += 1, R4359 += 1 };
  s5 -> s6 [0, 65535] { R4417 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R4417 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton uri_26 {
  init s0;
  s0 -> s1 [0, 65535] { R4419 += 1, R4361 += 1, R4309 += 1, R4258 += 1, R4259 += 1 };
  s0 -> s2 [0, 65535] { R4419 += 1, R4361 += 1, R4308 += 1, R4309 += 1 };
  s0 -> s0 [0, 65535] { R4418 += 1, R4419 += 1 };
  s0 -> s3 [0, 65535] { R4419 += 1, R4360 += 1, R4361 += 1 };
  s0 -> s4 [0, 65535] { R4419 += 1, R4361 += 1, R4309 += 1, R4259 += 1, R0 += 1 };
  s1 -> s5 [0, 65535] { R4419 += 1, R4361 += 1 };
  s1 -> s1 [0, 65535] { R4419 += 1, R4361 += 1, R4309 += 1, R4258 += 1, R4259 += 1 };
  s1 -> s6 [0, 65535] { R4419 += 1 };
  s1 -> s4 [0, 65535] { R4419 += 1, R4361 += 1, R4309 += 1, R4259 += 1, R0 += 1 };
  s1 -> s8 [0, 65535];
  s2 -> s1 [0, 65535] { R4419 += 1, R4361 += 1, R4309 += 1, R4258 += 1, R4259 += 1 };
  s2 -> s2 [0, 65535] { R4419 += 1, R4361 += 1, R4308 += 1, R4309 += 1 };
  s2 -> s6 [0, 65535] { R4419 += 1 };
  s2 -> s4 [0, 65535] { R4419 += 1, R4361 += 1, R4309 += 1, R4259 += 1, R0 += 1 };
  s2 -> s8 [0, 65535];
  s3 -> s1 [0, 65535] { R4419 += 1, R4361 += 1, R4309 += 1, R4258 += 1, R4259 += 1 };
  s3 -> s2 [0, 65535] { R4419 += 1, R4361 += 1, R4308 += 1, R4309 += 1 };
  s3 -> s3 [0, 65535] { R4419 += 1, R4360 += 1, R4361 += 1 };
  s3 -> s4 [0, 65535] { R4419 += 1, R4361 += 1, R4309 += 1, R4259 += 1, R0 += 1 };
  s3 -> s8 [0, 65535];
  s4 -> s5 [0, 65535] { R4419 += 1, R4361 += 1 };
  s4 -> s6 [0, 65535] { R4419 += 1 };
  s4 -> s7 [0, 65535] { R4419 += 1, R4361 += 1, R4309 += 1 };
  s4 -> s4 [0, 65535] { R4419 += 1, R4361 += 1, R4309 += 1, R4259 += 1, R0 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R4419 += 1, R4361 += 1 };
  s5 -> s6 [0, 65535] { R4419 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R4419 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s5 [0, 65535] { R4419 += 1, R4361 += 1 };
  s7 -> s6 [0, 65535] { R4419 += 1 };
  s7 -> s7 [0, 65535] { R4419 += 1, R4361 += 1, R4309 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_27 {
  init s0;
  s0 -> s1 [0, 60] { R4421 += 1, R4363 += 1, R4311 += 1, R4273 += 1 };
  s0 -> s2 [0, 65535] { R4421 += 1, R4362 += 1, R4363 += 1 };
  s0 -> s3 [0, 65535] { R4421 += 1, R4363 += 1, R4311 += 1, R4272 += 1, R4273 += 1 };
  s0 -> s0 [0, 65535] { R4420 += 1, R4421 += 1 };
  s0 -> s4 [0, 65535] { R4421 += 1, R4363 += 1, R4310 += 1, R4311 += 1 };
  s0 -> s5 [61, 61] { R4421 += 1, R4363 += 1, R4311 += 1, R4273 += 1 };
  s0 -> s1 [62, 65535] { R4421 += 1, R4363 += 1, R4311 += 1, R4273 += 1 };
  s1 -> s1 [0, 60] { R4421 += 1, R4363 += 1, R4311 += 1, R4273 += 1 };
  s1 -> s5 [61, 61] { R4421 += 1, R4363 += 1, R4311 += 1, R4273 += 1 };
  s1 -> s1 [62, 65535] { R4421 += 1, R4363 += 1, R4311 += 1, R4273 += 1 };
  s2 -> s1 [0, 60] { R4421 += 1, R4363 += 1, R4311 += 1, R4273 += 1 };
  s2 -> s2 [0, 65535] { R4421 += 1, R4362 += 1, R4363 += 1 };
  s2 -> s3 [0, 65535] { R4421 += 1, R4363 += 1, R4311 += 1, R4272 += 1, R4273 += 1 };
  s2 -> s4 [0, 65535] { R4421 += 1, R4363 += 1, R4310 += 1, R4311 += 1 };
  s2 -> s5 [61, 61] { R4421 += 1, R4363 += 1, R4311 += 1, R4273 += 1 };
  s2 -> s1 [62, 65535] { R4421 += 1, R4363 += 1, R4311 += 1, R4273 += 1 };
  s3 -> s1 [0, 60] { R4421 += 1, R4363 += 1, R4311 += 1, R4273 += 1 };
  s3 -> s3 [0, 65535] { R4421 += 1, R4363 += 1, R4311 += 1, R4272 += 1, R4273 += 1 };
  s3 -> s5 [61, 61] { R4421 += 1, R4363 += 1, R4311 += 1, R4273 += 1 };
  s3 -> s1 [62, 65535] { R4421 += 1, R4363 += 1, R4311 += 1, R4273 += 1 };
  s4 -> s1 [0, 60] { R4421 += 1, R4363 += 1, R4311 += 1, R4273 += 1 };
  s4 -> s3 [0, 65535] { R4421 += 1, R4363 += 1, R4311 += 1, R4272 += 1, R4273 += 1 };
  s4 -> s4 [0, 65535] { R4421 += 1, R4363 += 1, R4310 += 1, R4311 += 1 };
  s4 -> s5 [61, 61] { R4421 += 1, R4363 += 1, R4311 += 1, R4273 += 1 };
  s4 -> s1 [62, 65535] { R4421 += 1, R4363 += 1, R4311 += 1, R4273 += 1 };
  s5 -> s6 [0, 65535] { R4421 += 1 };
  s5 -> s7 [0, 65535] { R4421 += 1, R4363 += 1, R4311 += 1 };
  s5 -> s8 [0, 65535] { R4421 += 1, R4363 += 1 };
  s5 -> s5 [0, 65535] { R4421 += 1, R4363 += 1, R4311 += 1, R4273 += 1 };
  s5 -> s9 [0, 65535];
  s6 -> s6 [0, 65535] { R4421 += 1 };
  s6 -> s9 [0, 65535];
  s7 -> s6 [0, 65535] { R4421 += 1 };
  s7 -> s7 [0, 65535] { R4421 += 1, R4363 += 1, R4311 += 1 };
  s7 -> s8 [0, 65535] { R4421 += 1, R4363 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s6 [0, 65535] { R4421 += 1 };
  s8 -> s8 [0, 65535] { R4421 += 1, R4363 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  accepting s8, s5, s9, s6, s7;
};
automaton uri_28 {
  init s0;
  s0 -> s0 [0, 65535] { R4422 += 1, R4423 += 1 };
  s0 -> s1 [0, 65535] { R4423 += 1, R4365 += 1, R4313 += 1, R4274 += 1, R4275 += 1 };
  s0 -> s2 [0, 65535] { R4423 += 1, R4365 += 1, R4312 += 1, R4313 += 1 };
  s0 -> s3 [0, 65535] { R4423 += 1, R4364 += 1, R4365 += 1 };
  s0 -> s4 [0, 65535] { R4423 += 1, R4365 += 1, R4313 += 1, R4275 += 1, R3 += 1 };
  s1 -> s5 [0, 65535] { R4423 += 1 };
  s1 -> s7 [0, 65535] { R4423 += 1, R4365 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s1 [0, 65535] { R4423 += 1, R4365 += 1, R4313 += 1, R4274 += 1, R4275 += 1 };
  s1 -> s4 [0, 65535] { R4423 += 1, R4365 += 1, R4313 += 1, R4275 += 1, R3 += 1 };
  s2 -> s5 [0, 65535] { R4423 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s1 [0, 65535] { R4423 += 1, R4365 += 1, R4313 += 1, R4274 += 1, R4275 += 1 };
  s2 -> s2 [0, 65535] { R4423 += 1, R4365 += 1, R4312 += 1, R4313 += 1 };
  s2 -> s4 [0, 65535] { R4423 += 1, R4365 += 1, R4313 += 1, R4275 += 1, R3 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s1 [0, 65535] { R4423 += 1, R4365 += 1, R4313 += 1, R4274 += 1, R4275 += 1 };
  s3 -> s2 [0, 65535] { R4423 += 1, R4365 += 1, R4312 += 1, R4313 += 1 };
  s3 -> s3 [0, 65535] { R4423 += 1, R4364 += 1, R4365 += 1 };
  s3 -> s4 [0, 65535] { R4423 += 1, R4365 += 1, R4313 += 1, R4275 += 1, R3 += 1 };
  s4 -> s5 [0, 65535] { R4423 += 1 };
  s4 -> s6 [0, 65535] { R4423 += 1, R4365 += 1, R4313 += 1 };
  s4 -> s7 [0, 65535] { R4423 += 1, R4365 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [0, 65535] { R4423 += 1, R4365 += 1, R4313 += 1, R4275 += 1, R3 += 1 };
  s5 -> s5 [0, 65535] { R4423 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s5 [0, 65535] { R4423 += 1 };
  s6 -> s6 [0, 65535] { R4423 += 1, R4365 += 1, R4313 += 1 };
  s6 -> s7 [0, 65535] { R4423 += 1, R4365 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s5 [0, 65535] { R4423 += 1 };
  s7 -> s7 [0, 65535] { R4423 += 1, R4365 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_29 {
  init s0;
  s0 -> s1 [0, 60] { R4425 += 1, R4367 += 1, R4315 += 1, R4277 += 1, R14 += 1 };
  s0 -> s0 [0, 65535] { R4424 += 1, R4425 += 1 };
  s0 -> s2 [0, 65535] { R4425 += 1, R4366 += 1, R4367 += 1 };
  s0 -> s3 [0, 65535] { R4425 += 1, R4367 += 1, R4315 += 1, R4276 += 1, R4277 += 1 };
  s0 -> s4 [0, 65535] { R4425 += 1, R4367 += 1, R4315 += 1, R4277 += 1, R13 += 1, R14 += 1 };
  s0 -> s5 [0, 65535] { R4425 += 1, R4367 += 1, R4314 += 1, R4315 += 1 };
  s0 -> s6 [61, 61] { R4425 += 1, R4367 += 1, R4315 += 1, R4277 += 1 };
  s0 -> s1 [62, 65535] { R4425 += 1, R4367 += 1, R4315 += 1, R4277 += 1, R14 += 1 };
  s1 -> s1 [0, 60] { R4425 += 1, R4367 += 1, R4315 += 1, R4277 += 1, R14 += 1 };
  s1 -> s6 [61, 61] { R4425 += 1, R4367 += 1, R4315 += 1, R4277 += 1 };
  s1 -> s1 [62, 65535] { R4425 += 1, R4367 += 1, R4315 += 1, R4277 += 1, R14 += 1 };
  s2 -> s1 [0, 60] { R4425 += 1, R4367 += 1, R4315 += 1, R4277 += 1, R14 += 1 };
  s2 -> s2 [0, 65535] { R4425 += 1, R4366 += 1, R4367 += 1 };
  s2 -> s3 [0, 65535] { R4425 += 1, R4367 += 1, R4315 += 1, R4276 += 1, R4277 += 1 };
  s2 -> s4 [0, 65535] { R4425 += 1, R4367 += 1, R4315 += 1, R4277 += 1, R13 += 1, R14 += 1 };
  s2 -> s5 [0, 65535] { R4425 += 1, R4367 += 1, R4314 += 1, R4315 += 1 };
  s2 -> s6 [61, 61] { R4425 += 1, R4367 += 1, R4315 += 1, R4277 += 1 };
  s2 -> s1 [62, 65535] { R4425 += 1, R4367 += 1, R4315 += 1, R4277 += 1, R14 += 1 };
  s3 -> s1 [0, 60] { R4425 += 1, R4367 += 1, R4315 += 1, R4277 += 1, R14 += 1 };
  s3 -> s3 [0, 65535] { R4425 += 1, R4367 += 1, R4315 += 1, R4276 += 1, R4277 += 1 };
  s3 -> s4 [0, 65535] { R4425 += 1, R4367 += 1, R4315 += 1, R4277 += 1, R13 += 1, R14 += 1 };
  s3 -> s6 [61, 61] { R4425 += 1, R4367 += 1, R4315 += 1, R4277 += 1 };
  s3 -> s1 [62, 65535] { R4425 += 1, R4367 += 1, R4315 += 1, R4277 += 1, R14 += 1 };
  s4 -> s1 [0, 60] { R4425 += 1, R4367 += 1, R4315 += 1, R4277 += 1, R14 += 1 };
  s4 -> s4 [0, 65535] { R4425 += 1, R4367 += 1, R4315 += 1, R4277 += 1, R13 += 1, R14 += 1 };
  s4 -> s6 [61, 61] { R4425 += 1, R4367 += 1, R4315 += 1, R4277 += 1 };
  s4 -> s1 [62, 65535] { R4425 += 1, R4367 += 1, R4315 += 1, R4277 += 1, R14 += 1 };
  s5 -> s1 [0, 60] { R4425 += 1, R4367 += 1, R4315 += 1, R4277 += 1, R14 += 1 };
  s5 -> s3 [0, 65535] { R4425 += 1, R4367 += 1, R4315 += 1, R4276 += 1, R4277 += 1 };
  s5 -> s4 [0, 65535] { R4425 += 1, R4367 += 1, R4315 += 1, R4277 += 1, R13 += 1, R14 += 1 };
  s5 -> s5 [0, 65535] { R4425 += 1, R4367 += 1, R4314 += 1, R4315 += 1 };
  s5 -> s6 [61, 61] { R4425 += 1, R4367 += 1, R4315 += 1, R4277 += 1 };
  s5 -> s1 [62, 65535] { R4425 += 1, R4367 += 1, R4315 += 1, R4277 += 1, R14 += 1 };
  s6 -> s7 [0, 65535] { R4425 += 1, R4367 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R4425 += 1, R4367 += 1, R4315 += 1, R4277 += 1 };
  s6 -> s9 [0, 65535] { R4425 += 1 };
  s6 -> s10 [0, 65535] { R4425 += 1, R4367 += 1, R4315 += 1 };
  s7 -> s7 [0, 65535] { R4425 += 1, R4367 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R4425 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R4425 += 1 };
  s10 -> s7 [0, 65535] { R4425 += 1, R4367 += 1 };
  s10 -> s8 [0, 65535];
  s10 -> s9 [0, 65535] { R4425 += 1 };
  s10 -> s10 [0, 65535] { R4425 += 1, R4367 += 1, R4315 += 1 };
  accepting s8, s9, s6, s7, s10;
};
automaton uri_30 {
  init s0;
  s0 -> s1 [0, 65535] { R4427 += 1, R4369 += 1, R4317 += 1, R4278 += 1, R4279 += 1 };
  s0 -> s2 [0, 65535] { R4427 += 1, R4369 += 1, R4316 += 1, R4317 += 1 };
  s0 -> s3 [0, 65535] { R4427 += 1, R4368 += 1, R4369 += 1 };
  s0 -> s4 [0, 65535] { R4427 += 1, R4369 += 1, R4317 += 1, R4279 += 1 };
  s0 -> s0 [0, 65535] { R4426 += 1, R4427 += 1 };
  s1 -> s1 [0, 65535] { R4427 += 1, R4369 += 1, R4317 += 1, R4278 += 1, R4279 += 1 };
  s1 -> s5 [0, 65535] { R4427 += 1 };
  s1 -> s6 [0, 65535] { R4427 += 1, R4369 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [0, 65535] { R4427 += 1, R4369 += 1, R4317 += 1, R4279 += 1 };
  s2 -> s1 [0, 65535] { R4427 += 1, R4369 += 1, R4317 += 1, R4278 += 1, R4279 += 1 };
  s2 -> s5 [0, 65535] { R4427 += 1 };
  s2 -> s2 [0, 65535] { R4427 += 1, R4369 += 1, R4316 += 1, R4317 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [0, 65535] { R4427 += 1, R4369 += 1, R4317 += 1, R4279 += 1 };
  s3 -> s1 [0, 65535] { R4427 += 1, R4369 += 1, R4317 += 1, R4278 += 1, R4279 += 1 };
  s3 -> s2 [0, 65535] { R4427 += 1, R4369 += 1, R4316 += 1, R4317 += 1 };
  s3 -> s3 [0, 65535] { R4427 += 1, R4368 += 1, R4369 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s4 [0, 65535] { R4427 += 1, R4369 += 1, R4317 += 1, R4279 += 1 };
  s4 -> s5 [0, 65535] { R4427 += 1 };
  s4 -> s6 [0, 65535] { R4427 += 1, R4369 += 1 };
  s4 -> s7 [0, 65535] { R4427 += 1, R4369 += 1, R4317 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [0, 65535] { R4427 += 1, R4369 += 1, R4317 += 1, R4279 += 1 };
  s5 -> s5 [0, 65535] { R4427 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s5 [0, 65535] { R4427 += 1 };
  s6 -> s6 [0, 65535] { R4427 += 1, R4369 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s5 [0, 65535] { R4427 += 1 };
  s7 -> s6 [0, 65535] { R4427 += 1, R4369 += 1 };
  s7 -> s7 [0, 65535] { R4427 += 1, R4369 += 1, R4317 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
};
constraint R3 - R14 = 1 && R4 = R4259 && R5 = R4317 && R6 = R4263 && R7 = R4297 && R8 = R4369 && R9 = R4427 && R13 = 0 && R2960 = 0 && R2961 = R4279 && R3696 = 0 && R3697 - R4262 = -1 && R4064 = 0 && R4065 - R4368 = -1 && R4248 = 0 && R4249 = 1 && R4250 = 0 && R4251 = 1 && R4252 = 0 && R4253 = 1 && R4254 = 0 && R4255 = 1 && R4256 - R4279 = 1 && R4257 = R4259 && R4258 - R4279 = 1 && R4260 = R4262 && R4261 = R4263 && R4268 = 0 && R4269 = 4 && R4270 = 0 && R4271 = 4 && R4272 = 0 && R4273 = R4279 && R4274 = 0 && R4275 = R4279 && R4276 = 0 && R4277 = R4279 && R4278 = 0 && R4280 = 5 && R4281 = R4297 && R4282 = 5 && R4283 = R4297 && R4284 = 5 && R4285 = R4297 && R4286 = 5 && R4287 = R4297 && R4288 = 5 && R4289 = R4297 && R4290 = 5 && R4291 = R4297 && R4292 = 5 && R4293 = R4297 && R4294 = 5 && R4295 = R4297 && R4296 = 5 && R4298 = 1 && R4299 = R4317 && R4300 = 1 && R4301 = R4317 && R4302 = 1 && R4303 = R4317 && R4304 = 1 && R4305 = R4317 && R4306 = 1 && R4307 = R4317 && R4308 = 1 && R4309 = R4317 && R4310 = 1 && R4311 = R4317 && R4312 = 1 && R4313 = R4317 && R4314 = 1 && R4315 = R4317 && R4316 = 1 && R4318 = 0 && R4319 - R4368 = -1 && R4320 = 0 && R4321 - R4368 = -1 && R4322 = 0 && R4323 - R4368 = -1 && R4324 = 0 && R4325 - R4368 = -1 && R4326 = 0 && R4327 - R4368 = -1 && R4328 = 0 && R4329 - R4368 = -1 && R4330 = 0 && R4331 - R4368 = -1 && R4332 = 0 && R4333 - R4368 = -1 && R4334 = 0 && R4335 - R4368 = -1 && R4336 = 0 && R4337 - R4368 = -1 && R4338 = 0 && R4339 - R4368 = -1 && R4340 = 0 && R4341 - R4368 = -1 && R4342 = 0 && R4343 - R4368 = -1 && R4344 = R4368 && R4345 = R4369 && R4346 = R4368 && R4347 = R4369 && R4348 = R4368 && R4349 = R4369 && R4350 = R4368 && R4351 = R4369 && R4352 = R4368 && R4353 = R4369 && R4354 = R4368 && R4355 = R4369 && R4356 = R4368 && R4357 = R4369 && R4358 = R4368 && R4359 = R4369 && R4360 = R4368 && R4361 = R4369 && R4362 = R4368 && R4363 = R4369 && R4364 = R4368 && R4365 = R4369 && R4366 = R4368 && R4367 = R4369 && R4370 = 10 && R4371 = R4427 && R4372 = 10 && R4373 = R4427 && R4374 = 10 && R4375 = R4427 && R4376 = 10 && R4377 = R4427 && R4378 = 10 && R4379 = R4427 && R4380 = 10 && R4381 = R4427 && R4382 = 10 && R4383 = R4427 && R4384 = 10 && R4385 = R4427 && R4386 = 10 && R4387 = R4427 && R4388 = 10 && R4389 = R4427 && R4390 = 10 && R4391 = R4427 && R4392 = 10 && R4393 = R4427 && R4394 = 10 && R4395 = R4427 && R4396 = 10 && R4397 = R4427 && R4398 = 10 && R4399 = R4427 && R4400 = 10 && R4401 = R4427 && R4402 = 10 && R4403 = R4427 && R4404 = 10 && R4405 = R4427 && R4406 = 10 && R4407 = R4427 && R4408 = 10 && R4409 = R4427 && R4410 = 10 && R4411 = R4427 && R4412 = 10 && R4413 = R4427 && R4414 = 10 && R4415 = R4427 && R4416 = 10 && R4417 = R4427 && R4418 = 10 && R4419 = R4427 && R4420 = 10 && R4421 = R4427 && R4422 = 10 && R4423 = R4427 && R4424 = 10 && R4425 = R4427 && R4426 = 10 && R0 != 0 && R1 != 0 && R2 != 0 && -1 < R14 && R2956 < 1 && R4279 < R4259 && R4262 - R4263 < 1 && 0 < R4262 && -1 < R4279 && 4 < R4297 && 0 < R4317 && R4368 - R4369 < 1 && 0 < R4368 && 9 < R4427 && (R4264 != 0 || R4262 - R4265 = 1 || (R4247 = 0 && R4262 = 1)) && (R4266 != 0 || R4262 - R4267 = 1 || (R4247 = 0 && R4262 = 1)) && (R4264 = 0 || (R4247 = 0 && R4262 = 1)) && (R4266 = 0 || (R4247 = 0 && R4262 = 1));
// End of Parikh automata intersection problem
