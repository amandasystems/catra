// Parikh automata intersection problem, generated by OSTRICH+
counter int R0, R1, R10, R11, R12, R14, R15, R2, R3, R3485, R3489, R3490, R4, R4357, R4358, R4791, R4792, R5, R5007, R5008, R5009, R5010, R5011, R5012, R5013, R5014, R5015, R5016, R5017, R5018, R5019, R5020, R5021, R5022, R5023, R5024, R5025, R5026, R5027, R5028, R5029, R5030, R5031, R5032, R5033, R5034, R5035, R5036, R5037, R5038, R5039, R5040, R5041, R5042, R5043, R5044, R5045, R5046, R5047, R5048, R5049, R5050, R5051, R5052, R5053, R5054, R5055, R5056, R5057, R5058, R5059, R5060, R5061, R5062, R5063, R5064, R5065, R5066, R5067, R5068, R5069, R5070, R5071, R5072, R5073, R5074, R5075, R5076, R5077, R5078, R5079, R5080, R5081, R5082, R5083, R5084, R5085, R5086, R5087, R5088, R5089, R5090, R5091, R5092, R5093, R5094, R5095, R5096, R5097, R5098, R5099, R5100, R5101, R5102, R5103, R5104, R5105, R5106, R5107, R5108, R5109, R5110, R5111, R5112, R5113, R5114, R5115, R5116, R5117, R5118, R5119, R5120, R5121, R5122, R5123, R5124, R5125, R5126, R5127, R5128, R5129, R5130, R5131, R5132, R5133, R5134, R5135, R5136, R5137, R5138, R5139, R5140, R5141, R5142, R5143, R5144, R5145, R5146, R5147, R5148, R5149, R5150, R5151, R5152, R5153, R5154, R5155, R5156, R5157, R5158, R5159, R5160, R5161, R5162, R5163, R5164, R5165, R5166, R5167, R5168, R5169, R5170, R5171, R5172, R5173, R5174, R5175, R5176, R5177, R5178, R5179, R5180, R5181, R5182, R5183, R5184, R5185, R5186, R5187, R5188, R5189, R5190, R5191, R5192, R5193, R5194, R5195, R5196, R5197, R5198, R5199, R5200, R5201, R5202, R5203, R5204, R5205, R5206, R5207, R5208, R5209, R5210, R5211, R5212, R5213, R5214, R5215, R5216, R5217, R5218, R5219, R5220, R6, R7, R8, R9;
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R10 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 45] { R5158 += 1 };
  s0 -> s0 [0, 65535] { R5157 += 1, R5158 += 1 };
  s0 -> s2 [46, 46] { R5158 += 1 };
  s0 -> s3 [47, 47] { R5158 += 1 };
  s0 -> s1 [48, 65535] { R5158 += 1 };
  s1 -> s1 [0, 45] { R5158 += 1 };
  s1 -> s2 [46, 46] { R5158 += 1 };
  s1 -> s3 [47, 47] { R5158 += 1 };
  s1 -> s1 [48, 65535] { R5158 += 1 };
  s2 -> s1 [0, 45] { R5158 += 1 };
  s2 -> s2 [46, 46] { R5158 += 1 };
  s2 -> s3 [47, 47] { R5158 += 1 };
  s2 -> s1 [48, 114] { R5158 += 1 };
  s2 -> s8 [115, 115] { R5158 += 1 };
  s2 -> s1 [116, 65535] { R5158 += 1 };
  s3 -> s3 [0, 45] { R5158 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s4 [46, 46] { R5158 += 1 };
  s3 -> s3 [47, 65535] { R5158 += 1 };
  s4 -> s3 [0, 45] { R5158 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s4 [46, 46] { R5158 += 1 };
  s4 -> s3 [47, 114] { R5158 += 1 };
  s4 -> s5 [115, 115] { R5158 += 1 };
  s4 -> s3 [116, 65535] { R5158 += 1 };
  s5 -> s3 [0, 45] { R5158 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s4 [46, 46] { R5158 += 1 };
  s5 -> s3 [47, 110] { R5158 += 1 };
  s5 -> s6 [111, 111] { R5158 += 1 };
  s5 -> s3 [112, 65535] { R5158 += 1 };
  s6 -> s3 [0, 45] { R5158 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s4 [46, 46] { R5158 += 1 };
  s6 -> s3 [47, 98] { R5158 += 1 };
  s6 -> s7 [99, 99] { R5158 += 1 };
  s6 -> s3 [100, 65535] { R5158 += 1 };
  s7 -> s3 [0, 45] { R5158 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s4 [46, 46] { R5158 += 1 };
  s7 -> s3 [47, 106] { R5158 += 1 };
  s7 -> s3 [108, 65535] { R5158 += 1 };
  s8 -> s1 [0, 45] { R5158 += 1 };
  s8 -> s2 [46, 46] { R5158 += 1 };
  s8 -> s3 [47, 47] { R5158 += 1 };
  s8 -> s1 [48, 110] { R5158 += 1 };
  s8 -> s9 [111, 111] { R5158 += 1 };
  s8 -> s1 [112, 65535] { R5158 += 1 };
  s9 -> s1 [0, 45] { R5158 += 1 };
  s9 -> s2 [46, 46] { R5158 += 1 };
  s9 -> s3 [47, 47] { R5158 += 1 };
  s9 -> s1 [48, 98] { R5158 += 1 };
  s9 -> s10 [99, 99] { R5158 += 1 };
  s9 -> s1 [100, 65535] { R5158 += 1 };
  s10 -> s1 [0, 45] { R5158 += 1 };
  s10 -> s2 [46, 46] { R5158 += 1 };
  s10 -> s3 [47, 47] { R5158 += 1 };
  s10 -> s1 [48, 106] { R5158 += 1 };
  s10 -> s1 [108, 65535] { R5158 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_3 {
  init s0;
  s0 -> s1 [0, 65535] { R5160 += 1, R9 += 1 };
  s0 -> s0 [0, 65535] { R5159 += 1, R5160 += 1 };
  s1 -> s1 [0, 65535] { R5160 += 1, R9 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s1 [0, 46] { R5162 += 1, R4792 += 1 };
  s0 -> s0 [0, 65535] { R5161 += 1, R5162 += 1 };
  s0 -> s2 [0, 65535] { R5162 += 1, R4791 += 1, R4792 += 1 };
  s0 -> s3 [47, 47] { R5162 += 1 };
  s0 -> s1 [48, 65535] { R5162 += 1, R4792 += 1 };
  s1 -> s1 [0, 46] { R5162 += 1, R4792 += 1 };
  s1 -> s3 [47, 47] { R5162 += 1 };
  s1 -> s1 [48, 65535] { R5162 += 1, R4792 += 1 };
  s2 -> s1 [0, 46] { R5162 += 1, R4792 += 1 };
  s2 -> s2 [0, 65535] { R5162 += 1, R4791 += 1, R4792 += 1 };
  s2 -> s3 [47, 47] { R5162 += 1 };
  s2 -> s1 [48, 65535] { R5162 += 1, R4792 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5162 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 63] { R5164 += 1, R5100 += 1 };
  s0 -> s0 [0, 65535] { R5163 += 1, R5164 += 1 };
  s0 -> s2 [0, 65535] { R5164 += 1, R5099 += 1, R5100 += 1 };
  s0 -> s3 [64, 64] { R5164 += 1, R5100 += 1 };
  s0 -> s1 [65, 65535] { R5164 += 1, R5100 += 1 };
  s1 -> s1 [0, 63] { R5164 += 1, R5100 += 1 };
  s1 -> s3 [64, 64] { R5164 += 1, R5100 += 1 };
  s1 -> s1 [65, 65535] { R5164 += 1, R5100 += 1 };
  s2 -> s1 [0, 63] { R5164 += 1, R5100 += 1 };
  s2 -> s2 [0, 65535] { R5164 += 1, R5099 += 1, R5100 += 1 };
  s2 -> s3 [64, 64] { R5164 += 1, R5100 += 1 };
  s2 -> s1 [65, 65535] { R5164 += 1, R5100 += 1 };
  s3 -> s4 [0, 65535] { R5164 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5164 += 1, R5100 += 1 };
  s4 -> s4 [0, 65535] { R5164 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5;
};
automaton uri_6 {
  init s0;
  s0 -> s1 [0, 65535] { R5166 += 1, R5101 += 1, R5102 += 1 };
  s0 -> s0 [0, 65535] { R5165 += 1, R5166 += 1 };
  s0 -> s2 [0, 65535] { R5166 += 1, R5102 += 1, R8 += 1 };
  s1 -> s1 [0, 65535] { R5166 += 1, R5101 += 1, R5102 += 1 };
  s1 -> s2 [0, 65535] { R5166 += 1, R5102 += 1, R8 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R5166 += 1 };
  s2 -> s2 [0, 65535] { R5166 += 1, R5102 += 1, R8 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5166 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_7 {
  init s0;
  s0 -> s1 [0, 36] { R5168 += 1, R5104 += 1, R5038 += 1 };
  s0 -> s0 [0, 65535] { R5167 += 1, R5168 += 1 };
  s0 -> s2 [0, 65535] { R5168 += 1, R5103 += 1, R5104 += 1 };
  s0 -> s3 [0, 65535] { R5168 += 1, R5104 += 1, R5037 += 1, R5038 += 1 };
  s0 -> s1 [38, 42] { R5168 += 1, R5104 += 1, R5038 += 1 };
  s0 -> s1 [44, 57] { R5168 += 1, R5104 += 1, R5038 += 1 };
  s0 -> s1 [59, 63] { R5168 += 1, R5104 += 1, R5038 += 1 };
  s0 -> s1 [65, 65535] { R5168 += 1, R5104 += 1, R5038 += 1 };
  s1 -> s1 [0, 36] { R5168 += 1, R5104 += 1, R5038 += 1 };
  s1 -> s1 [0, 65535] { R5168 += 1, R5104 += 1 };
  s1 -> s4 [0, 65535] { R5168 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [38, 42] { R5168 += 1, R5104 += 1, R5038 += 1 };
  s1 -> s1 [44, 57] { R5168 += 1, R5104 += 1, R5038 += 1 };
  s1 -> s1 [59, 63] { R5168 += 1, R5104 += 1, R5038 += 1 };
  s1 -> s1 [65, 65535] { R5168 += 1, R5104 += 1, R5038 += 1 };
  s2 -> s1 [0, 36] { R5168 += 1, R5104 += 1, R5038 += 1 };
  s2 -> s2 [0, 65535] { R5168 += 1, R5103 += 1, R5104 += 1 };
  s2 -> s3 [0, 65535] { R5168 += 1, R5104 += 1, R5037 += 1, R5038 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [38, 42] { R5168 += 1, R5104 += 1, R5038 += 1 };
  s2 -> s1 [44, 57] { R5168 += 1, R5104 += 1, R5038 += 1 };
  s2 -> s1 [59, 63] { R5168 += 1, R5104 += 1, R5038 += 1 };
  s2 -> s1 [65, 65535] { R5168 += 1, R5104 += 1, R5038 += 1 };
  s3 -> s1 [0, 36] { R5168 += 1, R5104 += 1, R5038 += 1 };
  s3 -> s4 [0, 65535] { R5168 += 1 };
  s3 -> s3 [0, 65535] { R5168 += 1, R5104 += 1, R5037 += 1, R5038 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [38, 42] { R5168 += 1, R5104 += 1, R5038 += 1 };
  s3 -> s1 [44, 57] { R5168 += 1, R5104 += 1, R5038 += 1 };
  s3 -> s1 [59, 63] { R5168 += 1, R5104 += 1, R5038 += 1 };
  s3 -> s1 [65, 65535] { R5168 += 1, R5104 += 1, R5038 += 1 };
  s4 -> s4 [0, 65535] { R5168 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_8 {
  init s0;
  s0 -> s1 [0, 65535] { R5170 += 1, R5105 += 1, R5106 += 1 };
  s0 -> s2 [0, 65535] { R5170 += 1, R5106 += 1, R5039 += 1, R5040 += 1 };
  s0 -> s3 [0, 65535] { R5170 += 1, R5106 += 1, R5040 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R5169 += 1, R5170 += 1 };
  s1 -> s1 [0, 65535] { R5170 += 1, R5105 += 1, R5106 += 1 };
  s1 -> s2 [0, 65535] { R5170 += 1, R5106 += 1, R5039 += 1, R5040 += 1 };
  s1 -> s3 [0, 65535] { R5170 += 1, R5106 += 1, R5040 += 1, R3 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s4 [0, 65535] { R5170 += 1 };
  s2 -> s2 [0, 65535] { R5170 += 1, R5106 += 1, R5039 += 1, R5040 += 1 };
  s2 -> s3 [0, 65535] { R5170 += 1, R5106 += 1, R5040 += 1, R3 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R5170 += 1 };
  s3 -> s5 [0, 65535] { R5170 += 1, R5106 += 1 };
  s3 -> s3 [0, 65535] { R5170 += 1, R5106 += 1, R5040 += 1, R3 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R5170 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s4 [0, 65535] { R5170 += 1 };
  s5 -> s5 [0, 65535] { R5170 += 1, R5106 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_9 {
  init s0;
  s0 -> s1 [0, 43] { R5172 += 1, R5108 += 1, R5056 += 1 };
  s0 -> s0 [0, 65535] { R5171 += 1, R5172 += 1 };
  s0 -> s2 [0, 65535] { R5172 += 1, R5107 += 1, R5108 += 1 };
  s0 -> s3 [0, 65535] { R5172 += 1, R5108 += 1, R5055 += 1, R5056 += 1 };
  s0 -> s1 [45, 57] { R5172 += 1, R5108 += 1, R5056 += 1 };
  s0 -> s4 [58, 58] { R5172 += 1, R5108 += 1, R5056 += 1 };
  s0 -> s1 [59, 65535] { R5172 += 1, R5108 += 1, R5056 += 1 };
  s1 -> s1 [0, 43] { R5172 += 1, R5108 += 1, R5056 += 1 };
  s1 -> s1 [45, 57] { R5172 += 1, R5108 += 1, R5056 += 1 };
  s1 -> s4 [58, 58] { R5172 += 1, R5108 += 1, R5056 += 1 };
  s1 -> s1 [59, 65535] { R5172 += 1, R5108 += 1, R5056 += 1 };
  s2 -> s1 [0, 43] { R5172 += 1, R5108 += 1, R5056 += 1 };
  s2 -> s2 [0, 65535] { R5172 += 1, R5107 += 1, R5108 += 1 };
  s2 -> s3 [0, 65535] { R5172 += 1, R5108 += 1, R5055 += 1, R5056 += 1 };
  s2 -> s1 [45, 57] { R5172 += 1, R5108 += 1, R5056 += 1 };
  s2 -> s4 [58, 58] { R5172 += 1, R5108 += 1, R5056 += 1 };
  s2 -> s1 [59, 65535] { R5172 += 1, R5108 += 1, R5056 += 1 };
  s3 -> s1 [0, 43] { R5172 += 1, R5108 += 1, R5056 += 1 };
  s3 -> s3 [0, 65535] { R5172 += 1, R5108 += 1, R5055 += 1, R5056 += 1 };
  s3 -> s1 [45, 57] { R5172 += 1, R5108 += 1, R5056 += 1 };
  s3 -> s4 [58, 58] { R5172 += 1, R5108 += 1, R5056 += 1 };
  s3 -> s1 [59, 65535] { R5172 += 1, R5108 += 1, R5056 += 1 };
  s4 -> s4 [0, 43] { R5172 += 1, R5108 += 1, R5056 += 1 };
  s4 -> s4 [0, 65535] { R5172 += 1, R5108 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5172 += 1 };
  s4 -> s4 [45, 65535] { R5172 += 1, R5108 += 1, R5056 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5172 += 1 };
  accepting s4, s5, s6;
};
automaton uri_10 {
  init s0;
  s0 -> s1 [0, 65535] { R5174 += 1, R5110 += 1, R5057 += 1, R5058 += 1 };
  s0 -> s0 [0, 65535] { R5173 += 1, R5174 += 1 };
  s0 -> s2 [0, 65535] { R5174 += 1, R5109 += 1, R5110 += 1 };
  s0 -> s3 [0, 65535] { R5174 += 1, R5110 += 1, R5058 += 1, R7 += 1 };
  s1 -> s1 [0, 65535] { R5174 += 1, R5110 += 1, R5057 += 1, R5058 += 1 };
  s1 -> s3 [0, 65535] { R5174 += 1, R5110 += 1, R5058 += 1, R7 += 1 };
  s1 -> s5 [0, 65535] { R5174 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s1 [0, 65535] { R5174 += 1, R5110 += 1, R5057 += 1, R5058 += 1 };
  s2 -> s2 [0, 65535] { R5174 += 1, R5109 += 1, R5110 += 1 };
  s2 -> s3 [0, 65535] { R5174 += 1, R5110 += 1, R5058 += 1, R7 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R5174 += 1, R5110 += 1 };
  s3 -> s3 [0, 65535] { R5174 += 1, R5110 += 1, R5058 += 1, R7 += 1 };
  s3 -> s5 [0, 65535] { R5174 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R5174 += 1, R5110 += 1 };
  s4 -> s5 [0, 65535] { R5174 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R5174 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_11 {
  init s0;
  s0 -> s1 [0, 57] { R5176 += 1, R5112 += 1, R5060 += 1, R4358 += 1 };
  s0 -> s2 [0, 65535] { R5176 += 1, R5111 += 1, R5112 += 1 };
  s0 -> s3 [0, 65535] { R5176 += 1, R5112 += 1, R5060 += 1, R4357 += 1, R4358 += 1 };
  s0 -> s4 [0, 65535] { R5176 += 1, R5112 += 1, R5059 += 1, R5060 += 1 };
  s0 -> s0 [0, 65535] { R5175 += 1, R5176 += 1 };
  s0 -> s5 [58, 58] { R5176 += 1, R5112 += 1, R5060 += 1 };
  s0 -> s1 [59, 65535] { R5176 += 1, R5112 += 1, R5060 += 1, R4358 += 1 };
  s1 -> s1 [0, 57] { R5176 += 1, R5112 += 1, R5060 += 1, R4358 += 1 };
  s1 -> s5 [58, 58] { R5176 += 1, R5112 += 1, R5060 += 1 };
  s1 -> s1 [59, 65535] { R5176 += 1, R5112 += 1, R5060 += 1, R4358 += 1 };
  s2 -> s1 [0, 57] { R5176 += 1, R5112 += 1, R5060 += 1, R4358 += 1 };
  s2 -> s2 [0, 65535] { R5176 += 1, R5111 += 1, R5112 += 1 };
  s2 -> s3 [0, 65535] { R5176 += 1, R5112 += 1, R5060 += 1, R4357 += 1, R4358 += 1 };
  s2 -> s4 [0, 65535] { R5176 += 1, R5112 += 1, R5059 += 1, R5060 += 1 };
  s2 -> s5 [58, 58] { R5176 += 1, R5112 += 1, R5060 += 1 };
  s2 -> s1 [59, 65535] { R5176 += 1, R5112 += 1, R5060 += 1, R4358 += 1 };
  s3 -> s1 [0, 57] { R5176 += 1, R5112 += 1, R5060 += 1, R4358 += 1 };
  s3 -> s3 [0, 65535] { R5176 += 1, R5112 += 1, R5060 += 1, R4357 += 1, R4358 += 1 };
  s3 -> s5 [58, 58] { R5176 += 1, R5112 += 1, R5060 += 1 };
  s3 -> s1 [59, 65535] { R5176 += 1, R5112 += 1, R5060 += 1, R4358 += 1 };
  s4 -> s1 [0, 57] { R5176 += 1, R5112 += 1, R5060 += 1, R4358 += 1 };
  s4 -> s3 [0, 65535] { R5176 += 1, R5112 += 1, R5060 += 1, R4357 += 1, R4358 += 1 };
  s4 -> s4 [0, 65535] { R5176 += 1, R5112 += 1, R5059 += 1, R5060 += 1 };
  s4 -> s5 [58, 58] { R5176 += 1, R5112 += 1, R5060 += 1 };
  s4 -> s1 [59, 65535] { R5176 += 1, R5112 += 1, R5060 += 1, R4358 += 1 };
  s5 -> s5 [0, 65535] { R5176 += 1, R5112 += 1, R5060 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R5176 += 1, R5112 += 1 };
  s5 -> s8 [0, 65535] { R5176 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5176 += 1, R5112 += 1 };
  s7 -> s8 [0, 65535] { R5176 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R5176 += 1 };
  accepting s5, s6, s7, s8;
};
automaton uri_12 {
  init s0;
  s0 -> s1 [0, 90] { R5178 += 1, R5114 += 1, R5062 += 1, R5014 += 1 };
  s0 -> s0 [0, 65535] { R5177 += 1, R5178 += 1 };
  s0 -> s2 [0, 65535] { R5178 += 1, R5114 += 1, R5062 += 1, R5013 += 1, R5014 += 1 };
  s0 -> s3 [0, 65535] { R5178 += 1, R5113 += 1, R5114 += 1 };
  s0 -> s4 [0, 65535] { R5178 += 1, R5114 += 1, R5061 += 1, R5062 += 1 };
  s0 -> s5 [91, 91] { R5178 += 1, R5114 += 1, R5062 += 1, R5014 += 1 };
  s0 -> s1 [92, 65535] { R5178 += 1, R5114 += 1, R5062 += 1, R5014 += 1 };
  s1 -> s1 [0, 65535] { R5178 += 1, R5114 += 1, R5062 += 1, R5014 += 1 };
  s1 -> s6 [0, 65535] { R5178 += 1 };
  s1 -> s9 [0, 65535] { R5178 += 1, R5114 += 1, R5062 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s8 [0, 65535] { R5178 += 1, R5114 += 1 };
  s2 -> s1 [0, 90] { R5178 += 1, R5114 += 1, R5062 += 1, R5014 += 1 };
  s2 -> s6 [0, 65535] { R5178 += 1 };
  s2 -> s2 [0, 65535] { R5178 += 1, R5114 += 1, R5062 += 1, R5013 += 1, R5014 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s8 [0, 65535] { R5178 += 1, R5114 += 1 };
  s2 -> s5 [91, 91] { R5178 += 1, R5114 += 1, R5062 += 1, R5014 += 1 };
  s2 -> s1 [92, 65535] { R5178 += 1, R5114 += 1, R5062 += 1, R5014 += 1 };
  s3 -> s1 [0, 90] { R5178 += 1, R5114 += 1, R5062 += 1, R5014 += 1 };
  s3 -> s2 [0, 65535] { R5178 += 1, R5114 += 1, R5062 += 1, R5013 += 1, R5014 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R5178 += 1, R5113 += 1, R5114 += 1 };
  s3 -> s4 [0, 65535] { R5178 += 1, R5114 += 1, R5061 += 1, R5062 += 1 };
  s3 -> s5 [91, 91] { R5178 += 1, R5114 += 1, R5062 += 1, R5014 += 1 };
  s3 -> s1 [92, 65535] { R5178 += 1, R5114 += 1, R5062 += 1, R5014 += 1 };
  s4 -> s1 [0, 90] { R5178 += 1, R5114 += 1, R5062 += 1, R5014 += 1 };
  s4 -> s6 [0, 65535] { R5178 += 1 };
  s4 -> s2 [0, 65535] { R5178 += 1, R5114 += 1, R5062 += 1, R5013 += 1, R5014 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R5178 += 1, R5114 += 1, R5061 += 1, R5062 += 1 };
  s4 -> s5 [91, 91] { R5178 += 1, R5114 += 1, R5062 += 1, R5014 += 1 };
  s4 -> s1 [92, 65535] { R5178 += 1, R5114 += 1, R5062 += 1, R5014 += 1 };
  s5 -> s1 [0, 65535] { R5178 += 1, R5114 += 1, R5062 += 1, R5014 += 1 };
  s6 -> s6 [0, 65535] { R5178 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R5178 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R5178 += 1, R5114 += 1 };
  s9 -> s6 [0, 65535] { R5178 += 1 };
  s9 -> s9 [0, 65535] { R5178 += 1, R5114 += 1, R5062 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s8 [0, 65535] { R5178 += 1, R5114 += 1 };
  accepting s3, s4, s8, s2, s9, s6, s1, s7, s0;
};
automaton uri_13 {
  init s0;
  s0 -> s1 [0, 65535] { R5180 += 1, R5116 += 1, R5064 += 1, R5016 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R5179 += 1, R5180 += 1 };
  s0 -> s2 [0, 65535] { R5180 += 1, R5115 += 1, R5116 += 1 };
  s0 -> s3 [0, 65535] { R5180 += 1, R5116 += 1, R5064 += 1, R5015 += 1, R5016 += 1 };
  s0 -> s4 [0, 65535] { R5180 += 1, R5116 += 1, R5063 += 1, R5064 += 1 };
  s1 -> s1 [0, 65535] { R5180 += 1, R5116 += 1, R5064 += 1, R5016 += 1, R12 += 1 };
  s1 -> s5 [0, 65535] { R5180 += 1 };
  s1 -> s8 [0, 65535] { R5180 += 1, R5116 += 1, R5064 += 1 };
  s1 -> s7 [0, 65535] { R5180 += 1, R5116 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s1 [0, 65535] { R5180 += 1, R5116 += 1, R5064 += 1, R5016 += 1, R12 += 1 };
  s2 -> s2 [0, 65535] { R5180 += 1, R5115 += 1, R5116 += 1 };
  s2 -> s3 [0, 65535] { R5180 += 1, R5116 += 1, R5064 += 1, R5015 += 1, R5016 += 1 };
  s2 -> s4 [0, 65535] { R5180 += 1, R5116 += 1, R5063 += 1, R5064 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s1 [0, 65535] { R5180 += 1, R5116 += 1, R5064 += 1, R5016 += 1, R12 += 1 };
  s3 -> s5 [0, 65535] { R5180 += 1 };
  s3 -> s7 [0, 65535] { R5180 += 1, R5116 += 1 };
  s3 -> s3 [0, 65535] { R5180 += 1, R5116 += 1, R5064 += 1, R5015 += 1, R5016 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s1 [0, 65535] { R5180 += 1, R5116 += 1, R5064 += 1, R5016 += 1, R12 += 1 };
  s4 -> s5 [0, 65535] { R5180 += 1 };
  s4 -> s3 [0, 65535] { R5180 += 1, R5116 += 1, R5064 += 1, R5015 += 1, R5016 += 1 };
  s4 -> s4 [0, 65535] { R5180 += 1, R5116 += 1, R5063 += 1, R5064 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R5180 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R5180 += 1 };
  s7 -> s7 [0, 65535] { R5180 += 1, R5116 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s5 [0, 65535] { R5180 += 1 };
  s8 -> s8 [0, 65535] { R5180 += 1, R5116 += 1, R5064 += 1 };
  s8 -> s7 [0, 65535] { R5180 += 1, R5116 += 1 };
  s8 -> s6 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 57] { R5182 += 1, R5118 += 1, R5066 += 1, R5030 += 1 };
  s0 -> s0 [0, 65535] { R5181 += 1, R5182 += 1 };
  s0 -> s2 [0, 65535] { R5182 += 1, R5117 += 1, R5118 += 1 };
  s0 -> s3 [0, 65535] { R5182 += 1, R5118 += 1, R5066 += 1, R5029 += 1, R5030 += 1 };
  s0 -> s4 [0, 65535] { R5182 += 1, R5118 += 1, R5065 += 1, R5066 += 1 };
  s0 -> s1 [59, 65535] { R5182 += 1, R5118 += 1, R5066 += 1, R5030 += 1 };
  s1 -> s1 [0, 57] { R5182 += 1, R5118 += 1, R5066 += 1, R5030 += 1 };
  s1 -> s1 [0, 65535] { R5182 += 1, R5118 += 1, R5066 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R5182 += 1 };
  s1 -> s7 [0, 65535] { R5182 += 1, R5118 += 1 };
  s1 -> s1 [59, 65535] { R5182 += 1, R5118 += 1, R5066 += 1, R5030 += 1 };
  s2 -> s1 [0, 57] { R5182 += 1, R5118 += 1, R5066 += 1, R5030 += 1 };
  s2 -> s2 [0, 65535] { R5182 += 1, R5117 += 1, R5118 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R5182 += 1, R5118 += 1, R5066 += 1, R5029 += 1, R5030 += 1 };
  s2 -> s4 [0, 65535] { R5182 += 1, R5118 += 1, R5065 += 1, R5066 += 1 };
  s2 -> s1 [59, 65535] { R5182 += 1, R5118 += 1, R5066 += 1, R5030 += 1 };
  s3 -> s1 [0, 57] { R5182 += 1, R5118 += 1, R5066 += 1, R5030 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R5182 += 1 };
  s3 -> s3 [0, 65535] { R5182 += 1, R5118 += 1, R5066 += 1, R5029 += 1, R5030 += 1 };
  s3 -> s7 [0, 65535] { R5182 += 1, R5118 += 1 };
  s3 -> s1 [59, 65535] { R5182 += 1, R5118 += 1, R5066 += 1, R5030 += 1 };
  s4 -> s1 [0, 57] { R5182 += 1, R5118 += 1, R5066 += 1, R5030 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5182 += 1 };
  s4 -> s3 [0, 65535] { R5182 += 1, R5118 += 1, R5066 += 1, R5029 += 1, R5030 += 1 };
  s4 -> s4 [0, 65535] { R5182 += 1, R5118 += 1, R5065 += 1, R5066 += 1 };
  s4 -> s1 [59, 65535] { R5182 += 1, R5118 += 1, R5066 += 1, R5030 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5182 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R5182 += 1 };
  s7 -> s7 [0, 65535] { R5182 += 1, R5118 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton uri_15 {
  init s0;
  s0 -> s1 [0, 65535] { R5184 += 1, R5120 += 1, R5068 += 1, R5031 += 1, R5032 += 1 };
  s0 -> s2 [0, 65535] { R5184 += 1, R5119 += 1, R5120 += 1 };
  s0 -> s3 [0, 65535] { R5184 += 1, R5120 += 1, R5068 += 1, R5032 += 1, R2 += 1 };
  s0 -> s4 [0, 65535] { R5184 += 1, R5120 += 1, R5067 += 1, R5068 += 1 };
  s0 -> s0 [0, 65535] { R5183 += 1, R5184 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5184 += 1, R5120 += 1, R5068 += 1, R5031 += 1, R5032 += 1 };
  s1 -> s3 [0, 65535] { R5184 += 1, R5120 += 1, R5068 += 1, R5032 += 1, R2 += 1 };
  s1 -> s7 [0, 65535] { R5184 += 1, R5120 += 1 };
  s1 -> s6 [0, 65535] { R5184 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R5184 += 1, R5120 += 1, R5068 += 1, R5031 += 1, R5032 += 1 };
  s2 -> s2 [0, 65535] { R5184 += 1, R5119 += 1, R5120 += 1 };
  s2 -> s3 [0, 65535] { R5184 += 1, R5120 += 1, R5068 += 1, R5032 += 1, R2 += 1 };
  s2 -> s4 [0, 65535] { R5184 += 1, R5120 += 1, R5067 += 1, R5068 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5184 += 1, R5120 += 1, R5068 += 1, R5032 += 1, R2 += 1 };
  s3 -> s7 [0, 65535] { R5184 += 1, R5120 += 1 };
  s3 -> s8 [0, 65535] { R5184 += 1, R5120 += 1, R5068 += 1 };
  s3 -> s6 [0, 65535] { R5184 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R5184 += 1, R5120 += 1, R5068 += 1, R5031 += 1, R5032 += 1 };
  s4 -> s3 [0, 65535] { R5184 += 1, R5120 += 1, R5068 += 1, R5032 += 1, R2 += 1 };
  s4 -> s6 [0, 65535] { R5184 += 1 };
  s4 -> s4 [0, 65535] { R5184 += 1, R5120 += 1, R5067 += 1, R5068 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5184 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R5184 += 1, R5120 += 1 };
  s7 -> s6 [0, 65535] { R5184 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s7 [0, 65535] { R5184 += 1, R5120 += 1 };
  s8 -> s8 [0, 65535] { R5184 += 1, R5120 += 1, R5068 += 1 };
  s8 -> s6 [0, 65535] { R5184 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 64] { R5186 += 1, R5122 += 1, R5070 += 1, R5034 += 1 };
  s0 -> s2 [0, 65535] { R5186 += 1, R5122 += 1, R5070 += 1, R5033 += 1, R5034 += 1 };
  s0 -> s3 [0, 65535] { R5186 += 1, R5122 += 1, R5069 += 1, R5070 += 1 };
  s0 -> s4 [0, 65535] { R5186 += 1, R5121 += 1, R5122 += 1 };
  s0 -> s0 [0, 65535] { R5185 += 1, R5186 += 1 };
  s0 -> s1 [91, 65535] { R5186 += 1, R5122 += 1, R5070 += 1, R5034 += 1 };
  s1 -> s1 [0, 64] { R5186 += 1, R5122 += 1, R5070 += 1, R5034 += 1 };
  s1 -> s1 [0, 65535] { R5186 += 1, R5122 += 1, R5070 += 1 };
  s1 -> s6 [0, 65535] { R5186 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R5186 += 1, R5122 += 1 };
  s1 -> s1 [91, 65535] { R5186 += 1, R5122 += 1, R5070 += 1, R5034 += 1 };
  s2 -> s1 [0, 64] { R5186 += 1, R5122 += 1, R5070 += 1, R5034 += 1 };
  s2 -> s2 [0, 65535] { R5186 += 1, R5122 += 1, R5070 += 1, R5033 += 1, R5034 += 1 };
  s2 -> s6 [0, 65535] { R5186 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R5186 += 1, R5122 += 1 };
  s2 -> s1 [91, 65535] { R5186 += 1, R5122 += 1, R5070 += 1, R5034 += 1 };
  s3 -> s1 [0, 64] { R5186 += 1, R5122 += 1, R5070 += 1, R5034 += 1 };
  s3 -> s2 [0, 65535] { R5186 += 1, R5122 += 1, R5070 += 1, R5033 += 1, R5034 += 1 };
  s3 -> s3 [0, 65535] { R5186 += 1, R5122 += 1, R5069 += 1, R5070 += 1 };
  s3 -> s6 [0, 65535] { R5186 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [91, 65535] { R5186 += 1, R5122 += 1, R5070 += 1, R5034 += 1 };
  s4 -> s1 [0, 64] { R5186 += 1, R5122 += 1, R5070 += 1, R5034 += 1 };
  s4 -> s2 [0, 65535] { R5186 += 1, R5122 += 1, R5070 += 1, R5033 += 1, R5034 += 1 };
  s4 -> s3 [0, 65535] { R5186 += 1, R5122 += 1, R5069 += 1, R5070 += 1 };
  s4 -> s4 [0, 65535] { R5186 += 1, R5121 += 1, R5122 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s1 [91, 65535] { R5186 += 1, R5122 += 1, R5070 += 1, R5034 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5186 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R5186 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R5186 += 1, R5122 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton uri_17 {
  init s0;
  s0 -> s1 [0, 65535] { R5188 += 1, R5124 += 1, R5072 += 1, R5035 += 1, R5036 += 1 };
  s0 -> s2 [0, 65535] { R5188 += 1, R5124 += 1, R5071 += 1, R5072 += 1 };
  s0 -> s3 [0, 65535] { R5188 += 1, R5123 += 1, R5124 += 1 };
  s0 -> s4 [0, 65535] { R5188 += 1, R5124 += 1, R5072 += 1, R5036 += 1, R5008 += 1 };
  s0 -> s0 [0, 65535] { R5187 += 1, R5188 += 1 };
  s1 -> s5 [0, 65535] { R5188 += 1 };
  s1 -> s1 [0, 65535] { R5188 += 1, R5124 += 1, R5072 += 1, R5035 += 1, R5036 += 1 };
  s1 -> s4 [0, 65535] { R5188 += 1, R5124 += 1, R5072 += 1, R5036 += 1, R5008 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s8 [0, 65535] { R5188 += 1, R5124 += 1 };
  s2 -> s1 [0, 65535] { R5188 += 1, R5124 += 1, R5072 += 1, R5035 += 1, R5036 += 1 };
  s2 -> s2 [0, 65535] { R5188 += 1, R5124 += 1, R5071 += 1, R5072 += 1 };
  s2 -> s4 [0, 65535] { R5188 += 1, R5124 += 1, R5072 += 1, R5036 += 1, R5008 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s5 [0, 65535] { R5188 += 1 };
  s3 -> s1 [0, 65535] { R5188 += 1, R5124 += 1, R5072 += 1, R5035 += 1, R5036 += 1 };
  s3 -> s2 [0, 65535] { R5188 += 1, R5124 += 1, R5071 += 1, R5072 += 1 };
  s3 -> s3 [0, 65535] { R5188 += 1, R5123 += 1, R5124 += 1 };
  s3 -> s4 [0, 65535] { R5188 += 1, R5124 += 1, R5072 += 1, R5036 += 1, R5008 += 1 };
  s3 -> s7 [0, 65535];
  s4 -> s5 [0, 65535] { R5188 += 1 };
  s4 -> s4 [0, 65535] { R5188 += 1, R5124 += 1, R5072 += 1, R5036 += 1, R5008 += 1 };
  s4 -> s6 [0, 65535] { R5188 += 1, R5124 += 1, R5072 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R5188 += 1, R5124 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R5188 += 1 };
  s6 -> s5 [0, 65535] { R5188 += 1 };
  s6 -> s6 [0, 65535] { R5188 += 1, R5124 += 1, R5072 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R5188 += 1, R5124 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s5 [0, 65535] { R5188 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R5188 += 1, R5124 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 65535] { R5190 += 1, R5125 += 1, R5126 += 1 };
  s0 -> s2 [0, 65535] { R5190 += 1, R5126 += 1, R6 += 1 };
  s0 -> s0 [0, 65535] { R5189 += 1, R5190 += 1 };
  s1 -> s1 [0, 65535] { R5190 += 1, R5125 += 1, R5126 += 1 };
  s1 -> s2 [0, 65535] { R5190 += 1, R5126 += 1, R6 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5190 += 1, R5126 += 1, R6 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R5190 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5190 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_19 {
  init s0;
  s0 -> s0 [0, 65535] { R5191 += 1, R5192 += 1 };
  s0 -> s1 [0, 65535] { R5192 += 1, R5128 += 1, R5009 += 1, R5010 += 1 };
  s0 -> s2 [0, 65535] { R5192 += 1, R5127 += 1, R5128 += 1 };
  s0 -> s3 [63, 63] { R5192 += 1, R5128 += 1, R5010 += 1 };
  s1 -> s1 [0, 65535] { R5192 += 1, R5128 += 1, R5009 += 1, R5010 += 1 };
  s1 -> s3 [63, 63] { R5192 += 1, R5128 += 1, R5010 += 1 };
  s2 -> s1 [0, 65535] { R5192 += 1, R5128 += 1, R5009 += 1, R5010 += 1 };
  s2 -> s2 [0, 65535] { R5192 += 1, R5127 += 1, R5128 += 1 };
  s2 -> s3 [63, 63] { R5192 += 1, R5128 += 1, R5010 += 1 };
  s3 -> s3 [0, 65535] { R5192 += 1, R5128 += 1 };
  s3 -> s4 [0, 65535] { R5192 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5192 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 65535] { R5194 += 1, R5130 += 1, R5012 += 1, R11 += 1 };
  s0 -> s2 [0, 65535] { R5194 += 1, R5130 += 1, R5011 += 1, R5012 += 1 };
  s0 -> s3 [0, 65535] { R5194 += 1, R5129 += 1, R5130 += 1 };
  s0 -> s0 [0, 65535] { R5193 += 1, R5194 += 1 };
  s1 -> s1 [0, 65535] { R5194 += 1, R5130 += 1, R5012 += 1, R11 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R5194 += 1 };
  s1 -> s6 [0, 65535] { R5194 += 1, R5130 += 1 };
  s2 -> s1 [0, 65535] { R5194 += 1, R5130 += 1, R5012 += 1, R11 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R5194 += 1 };
  s2 -> s2 [0, 65535] { R5194 += 1, R5130 += 1, R5011 += 1, R5012 += 1 };
  s3 -> s1 [0, 65535] { R5194 += 1, R5130 += 1, R5012 += 1, R11 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R5194 += 1, R5130 += 1, R5011 += 1, R5012 += 1 };
  s3 -> s3 [0, 65535] { R5194 += 1, R5129 += 1, R5130 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5194 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R5194 += 1 };
  s6 -> s6 [0, 65535] { R5194 += 1, R5130 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_21 {
  init s0;
  s0 -> s1 [0, 58] { R5196 += 1, R5132 += 1, R5074 += 1 };
  s0 -> s0 [0, 65535] { R5195 += 1, R5196 += 1 };
  s0 -> s2 [0, 65535] { R5196 += 1, R5132 += 1, R5073 += 1, R5074 += 1 };
  s0 -> s3 [0, 65535] { R5196 += 1, R5131 += 1, R5132 += 1 };
  s0 -> s4 [59, 59] { R5196 += 1, R5132 += 1, R5074 += 1 };
  s0 -> s1 [60, 65535] { R5196 += 1, R5132 += 1, R5074 += 1 };
  s1 -> s1 [0, 58] { R5196 += 1, R5132 += 1, R5074 += 1 };
  s1 -> s4 [59, 59] { R5196 += 1, R5132 += 1, R5074 += 1 };
  s1 -> s1 [60, 65535] { R5196 += 1, R5132 += 1, R5074 += 1 };
  s2 -> s1 [0, 58] { R5196 += 1, R5132 += 1, R5074 += 1 };
  s2 -> s2 [0, 65535] { R5196 += 1, R5132 += 1, R5073 += 1, R5074 += 1 };
  s2 -> s4 [59, 59] { R5196 += 1, R5132 += 1, R5074 += 1 };
  s2 -> s1 [60, 65535] { R5196 += 1, R5132 += 1, R5074 += 1 };
  s3 -> s1 [0, 58] { R5196 += 1, R5132 += 1, R5074 += 1 };
  s3 -> s2 [0, 65535] { R5196 += 1, R5132 += 1, R5073 += 1, R5074 += 1 };
  s3 -> s3 [0, 65535] { R5196 += 1, R5131 += 1, R5132 += 1 };
  s3 -> s4 [59, 59] { R5196 += 1, R5132 += 1, R5074 += 1 };
  s3 -> s1 [60, 65535] { R5196 += 1, R5132 += 1, R5074 += 1 };
  s4 -> s5 [0, 65535] { R5196 += 1 };
  s4 -> s4 [0, 65535] { R5196 += 1, R5132 += 1, R5074 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R5196 += 1, R5132 += 1 };
  s5 -> s5 [0, 65535] { R5196 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R5196 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5196 += 1, R5132 += 1 };
  accepting s4, s5, s6, s7;
};
automaton uri_22 {
  init s0;
  s0 -> s1 [0, 65535] { R5198 += 1, R5133 += 1, R5134 += 1 };
  s0 -> s2 [0, 65535] { R5198 += 1, R5134 += 1, R5076 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R5197 += 1, R5198 += 1 };
  s0 -> s3 [0, 65535] { R5198 += 1, R5134 += 1, R5075 += 1, R5076 += 1 };
  s1 -> s1 [0, 65535] { R5198 += 1, R5133 += 1, R5134 += 1 };
  s1 -> s2 [0, 65535] { R5198 += 1, R5134 += 1, R5076 += 1, R5 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R5198 += 1, R5134 += 1, R5075 += 1, R5076 += 1 };
  s2 -> s6 [0, 65535] { R5198 += 1, R5134 += 1 };
  s2 -> s4 [0, 65535] { R5198 += 1 };
  s2 -> s2 [0, 65535] { R5198 += 1, R5134 += 1, R5076 += 1, R5 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R5198 += 1 };
  s3 -> s2 [0, 65535] { R5198 += 1, R5134 += 1, R5076 += 1, R5 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5198 += 1, R5134 += 1, R5075 += 1, R5076 += 1 };
  s4 -> s4 [0, 65535] { R5198 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5198 += 1, R5134 += 1 };
  s6 -> s4 [0, 65535] { R5198 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_23 {
  init s0;
  s0 -> s1 [0, 37] { R5200 += 1, R5136 += 1, R5078 += 1 };
  s0 -> s2 [0, 65535] { R5200 += 1, R5136 += 1, R5077 += 1, R5078 += 1 };
  s0 -> s0 [0, 65535] { R5199 += 1, R5200 += 1 };
  s0 -> s3 [0, 65535] { R5200 += 1, R5136 += 1, R5078 += 1, R3485 += 1 };
  s0 -> s4 [0, 65535] { R5200 += 1, R5135 += 1, R5136 += 1 };
  s0 -> s5 [38, 38] { R5200 += 1, R5136 += 1, R5078 += 1 };
  s0 -> s1 [39, 65535] { R5200 += 1, R5136 += 1, R5078 += 1 };
  s1 -> s1 [0, 37] { R5200 += 1, R5136 += 1, R5078 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R5200 += 1, R5136 += 1 };
  s1 -> s7 [0, 65535] { R5200 += 1 };
  s1 -> s5 [38, 38] { R5200 += 1, R5136 += 1, R5078 += 1 };
  s1 -> s1 [39, 65535] { R5200 += 1, R5136 += 1, R5078 += 1 };
  s2 -> s1 [0, 37] { R5200 += 1, R5136 += 1, R5078 += 1 };
  s2 -> s2 [0, 65535] { R5200 += 1, R5136 += 1, R5077 += 1, R5078 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R5200 += 1, R5136 += 1, R5078 += 1, R3485 += 1 };
  s2 -> s7 [0, 65535] { R5200 += 1 };
  s2 -> s5 [38, 38] { R5200 += 1, R5136 += 1, R5078 += 1 };
  s2 -> s1 [39, 65535] { R5200 += 1, R5136 += 1, R5078 += 1 };
  s3 -> s1 [0, 37] { R5200 += 1, R5136 += 1, R5078 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R5200 += 1, R5136 += 1, R5078 += 1, R3485 += 1 };
  s3 -> s7 [0, 65535] { R5200 += 1 };
  s3 -> s8 [0, 65535] { R5200 += 1, R5136 += 1 };
  s3 -> s5 [38, 38] { R5200 += 1, R5136 += 1, R5078 += 1 };
  s3 -> s1 [39, 65535] { R5200 += 1, R5136 += 1, R5078 += 1 };
  s4 -> s1 [0, 37] { R5200 += 1, R5136 += 1, R5078 += 1 };
  s4 -> s2 [0, 65535] { R5200 += 1, R5136 += 1, R5077 += 1, R5078 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s3 [0, 65535] { R5200 += 1, R5136 += 1, R5078 += 1, R3485 += 1 };
  s4 -> s4 [0, 65535] { R5200 += 1, R5135 += 1, R5136 += 1 };
  s4 -> s5 [38, 38] { R5200 += 1, R5136 += 1, R5078 += 1 };
  s4 -> s1 [39, 65535] { R5200 += 1, R5136 += 1, R5078 += 1 };
  s5 -> s5 [0, 65535] { R5200 += 1, R5136 += 1, R5078 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5200 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R5200 += 1 };
  s8 -> s8 [0, 65535] { R5200 += 1, R5136 += 1 };
  accepting s3, s4, s8, s2, s6, s1, s7, s0;
};
automaton uri_24 {
  init s0;
  s0 -> s1 [0, 58] { R5202 += 1, R5138 += 1, R5080 += 1, R3490 += 1 };
  s0 -> s2 [0, 65535] { R5202 += 1, R5138 += 1, R5079 += 1, R5080 += 1 };
  s0 -> s3 [0, 65535] { R5202 += 1, R5137 += 1, R5138 += 1 };
  s0 -> s0 [0, 65535] { R5201 += 1, R5202 += 1 };
  s0 -> s4 [0, 65535] { R5202 += 1, R5138 += 1, R5080 += 1, R3489 += 1, R3490 += 1 };
  s0 -> s5 [59, 59] { R5202 += 1, R5138 += 1, R5080 += 1 };
  s0 -> s1 [60, 65535] { R5202 += 1, R5138 += 1, R5080 += 1, R3490 += 1 };
  s1 -> s1 [0, 58] { R5202 += 1, R5138 += 1, R5080 += 1, R3490 += 1 };
  s1 -> s5 [59, 59] { R5202 += 1, R5138 += 1, R5080 += 1 };
  s1 -> s1 [60, 65535] { R5202 += 1, R5138 += 1, R5080 += 1, R3490 += 1 };
  s2 -> s1 [0, 58] { R5202 += 1, R5138 += 1, R5080 += 1, R3490 += 1 };
  s2 -> s2 [0, 65535] { R5202 += 1, R5138 += 1, R5079 += 1, R5080 += 1 };
  s2 -> s4 [0, 65535] { R5202 += 1, R5138 += 1, R5080 += 1, R3489 += 1, R3490 += 1 };
  s2 -> s5 [59, 59] { R5202 += 1, R5138 += 1, R5080 += 1 };
  s2 -> s1 [60, 65535] { R5202 += 1, R5138 += 1, R5080 += 1, R3490 += 1 };
  s3 -> s1 [0, 58] { R5202 += 1, R5138 += 1, R5080 += 1, R3490 += 1 };
  s3 -> s2 [0, 65535] { R5202 += 1, R5138 += 1, R5079 += 1, R5080 += 1 };
  s3 -> s3 [0, 65535] { R5202 += 1, R5137 += 1, R5138 += 1 };
  s3 -> s4 [0, 65535] { R5202 += 1, R5138 += 1, R5080 += 1, R3489 += 1, R3490 += 1 };
  s3 -> s5 [59, 59] { R5202 += 1, R5138 += 1, R5080 += 1 };
  s3 -> s1 [60, 65535] { R5202 += 1, R5138 += 1, R5080 += 1, R3490 += 1 };
  s4 -> s1 [0, 58] { R5202 += 1, R5138 += 1, R5080 += 1, R3490 += 1 };
  s4 -> s4 [0, 65535] { R5202 += 1, R5138 += 1, R5080 += 1, R3489 += 1, R3490 += 1 };
  s4 -> s5 [59, 59] { R5202 += 1, R5138 += 1, R5080 += 1 };
  s4 -> s1 [60, 65535] { R5202 += 1, R5138 += 1, R5080 += 1, R3490 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R5202 += 1, R5138 += 1, R5080 += 1 };
  s5 -> s7 [0, 65535] { R5202 += 1 };
  s5 -> s8 [0, 65535] { R5202 += 1, R5138 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5202 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R5202 += 1 };
  s8 -> s8 [0, 65535] { R5202 += 1, R5138 += 1 };
  accepting s5, s6, s7, s8;
};
automaton uri_25 {
  init s0;
  s0 -> s1 [0, 58] { R5204 += 1, R5140 += 1, R5082 += 1, R5026 += 1 };
  s0 -> s2 [0, 65535] { R5204 += 1, R5140 += 1, R5082 += 1, R5025 += 1, R5026 += 1 };
  s0 -> s3 [0, 65535] { R5204 += 1, R5140 += 1, R5081 += 1, R5082 += 1 };
  s0 -> s4 [0, 65535] { R5204 += 1, R5139 += 1, R5140 += 1 };
  s0 -> s0 [0, 65535] { R5203 += 1, R5204 += 1 };
  s0 -> s1 [60, 65535] { R5204 += 1, R5140 += 1, R5082 += 1, R5026 += 1 };
  s1 -> s1 [0, 58] { R5204 += 1, R5140 += 1, R5082 += 1, R5026 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R5204 += 1 };
  s1 -> s1 [0, 65535] { R5204 += 1, R5140 += 1, R5082 += 1 };
  s1 -> s7 [0, 65535] { R5204 += 1, R5140 += 1 };
  s1 -> s1 [60, 65535] { R5204 += 1, R5140 += 1, R5082 += 1, R5026 += 1 };
  s2 -> s1 [0, 58] { R5204 += 1, R5140 += 1, R5082 += 1, R5026 += 1 };
  s2 -> s2 [0, 65535] { R5204 += 1, R5140 += 1, R5082 += 1, R5025 += 1, R5026 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R5204 += 1 };
  s2 -> s7 [0, 65535] { R5204 += 1, R5140 += 1 };
  s2 -> s1 [60, 65535] { R5204 += 1, R5140 += 1, R5082 += 1, R5026 += 1 };
  s3 -> s1 [0, 58] { R5204 += 1, R5140 += 1, R5082 += 1, R5026 += 1 };
  s3 -> s2 [0, 65535] { R5204 += 1, R5140 += 1, R5082 += 1, R5025 += 1, R5026 += 1 };
  s3 -> s3 [0, 65535] { R5204 += 1, R5140 += 1, R5081 += 1, R5082 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R5204 += 1 };
  s3 -> s1 [60, 65535] { R5204 += 1, R5140 += 1, R5082 += 1, R5026 += 1 };
  s4 -> s1 [0, 58] { R5204 += 1, R5140 += 1, R5082 += 1, R5026 += 1 };
  s4 -> s2 [0, 65535] { R5204 += 1, R5140 += 1, R5082 += 1, R5025 += 1, R5026 += 1 };
  s4 -> s3 [0, 65535] { R5204 += 1, R5140 += 1, R5081 += 1, R5082 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5204 += 1, R5139 += 1, R5140 += 1 };
  s4 -> s1 [60, 65535] { R5204 += 1, R5140 += 1, R5082 += 1, R5026 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5204 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R5204 += 1 };
  s7 -> s7 [0, 65535] { R5204 += 1, R5140 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton uri_26 {
  init s0;
  s0 -> s1 [0, 65535] { R5206 += 1, R5141 += 1, R5142 += 1 };
  s0 -> s2 [0, 65535] { R5206 += 1, R5142 += 1, R5083 += 1, R5084 += 1 };
  s0 -> s0 [0, 65535] { R5205 += 1, R5206 += 1 };
  s0 -> s3 [0, 65535] { R5206 += 1, R5142 += 1, R5084 += 1, R5028 += 1, R1 += 1 };
  s0 -> s4 [0, 65535] { R5206 += 1, R5142 += 1, R5084 += 1, R5027 += 1, R5028 += 1 };
  s1 -> s1 [0, 65535] { R5206 += 1, R5141 += 1, R5142 += 1 };
  s1 -> s2 [0, 65535] { R5206 += 1, R5142 += 1, R5083 += 1, R5084 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [0, 65535] { R5206 += 1, R5142 += 1, R5084 += 1, R5028 += 1, R1 += 1 };
  s1 -> s4 [0, 65535] { R5206 += 1, R5142 += 1, R5084 += 1, R5027 += 1, R5028 += 1 };
  s2 -> s5 [0, 65535] { R5206 += 1 };
  s2 -> s2 [0, 65535] { R5206 += 1, R5142 += 1, R5083 += 1, R5084 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R5206 += 1, R5142 += 1, R5084 += 1, R5028 += 1, R1 += 1 };
  s2 -> s4 [0, 65535] { R5206 += 1, R5142 += 1, R5084 += 1, R5027 += 1, R5028 += 1 };
  s3 -> s5 [0, 65535] { R5206 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R5206 += 1, R5142 += 1, R5084 += 1, R5028 += 1, R1 += 1 };
  s3 -> s7 [0, 65535] { R5206 += 1, R5142 += 1 };
  s3 -> s8 [0, 65535] { R5206 += 1, R5142 += 1, R5084 += 1 };
  s4 -> s5 [0, 65535] { R5206 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s3 [0, 65535] { R5206 += 1, R5142 += 1, R5084 += 1, R5028 += 1, R1 += 1 };
  s4 -> s7 [0, 65535] { R5206 += 1, R5142 += 1 };
  s4 -> s4 [0, 65535] { R5206 += 1, R5142 += 1, R5084 += 1, R5027 += 1, R5028 += 1 };
  s5 -> s5 [0, 65535] { R5206 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R5206 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5206 += 1, R5142 += 1 };
  s8 -> s5 [0, 65535] { R5206 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R5206 += 1, R5142 += 1, R5084 += 1 };
  s8 -> s7 [0, 65535] { R5206 += 1, R5142 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_27 {
  init s0;
  s0 -> s1 [0, 60] { R5208 += 1, R5144 += 1, R5086 += 1, R5042 += 1 };
  s0 -> s2 [0, 65535] { R5208 += 1, R5144 += 1, R5086 += 1, R5041 += 1, R5042 += 1 };
  s0 -> s0 [0, 65535] { R5207 += 1, R5208 += 1 };
  s0 -> s3 [0, 65535] { R5208 += 1, R5143 += 1, R5144 += 1 };
  s0 -> s4 [0, 65535] { R5208 += 1, R5144 += 1, R5085 += 1, R5086 += 1 };
  s0 -> s5 [61, 61] { R5208 += 1, R5144 += 1, R5086 += 1, R5042 += 1 };
  s0 -> s1 [62, 65535] { R5208 += 1, R5144 += 1, R5086 += 1, R5042 += 1 };
  s1 -> s1 [0, 60] { R5208 += 1, R5144 += 1, R5086 += 1, R5042 += 1 };
  s1 -> s5 [61, 61] { R5208 += 1, R5144 += 1, R5086 += 1, R5042 += 1 };
  s1 -> s1 [62, 65535] { R5208 += 1, R5144 += 1, R5086 += 1, R5042 += 1 };
  s2 -> s1 [0, 60] { R5208 += 1, R5144 += 1, R5086 += 1, R5042 += 1 };
  s2 -> s2 [0, 65535] { R5208 += 1, R5144 += 1, R5086 += 1, R5041 += 1, R5042 += 1 };
  s2 -> s5 [61, 61] { R5208 += 1, R5144 += 1, R5086 += 1, R5042 += 1 };
  s2 -> s1 [62, 65535] { R5208 += 1, R5144 += 1, R5086 += 1, R5042 += 1 };
  s3 -> s1 [0, 60] { R5208 += 1, R5144 += 1, R5086 += 1, R5042 += 1 };
  s3 -> s2 [0, 65535] { R5208 += 1, R5144 += 1, R5086 += 1, R5041 += 1, R5042 += 1 };
  s3 -> s3 [0, 65535] { R5208 += 1, R5143 += 1, R5144 += 1 };
  s3 -> s4 [0, 65535] { R5208 += 1, R5144 += 1, R5085 += 1, R5086 += 1 };
  s3 -> s5 [61, 61] { R5208 += 1, R5144 += 1, R5086 += 1, R5042 += 1 };
  s3 -> s1 [62, 65535] { R5208 += 1, R5144 += 1, R5086 += 1, R5042 += 1 };
  s4 -> s1 [0, 60] { R5208 += 1, R5144 += 1, R5086 += 1, R5042 += 1 };
  s4 -> s2 [0, 65535] { R5208 += 1, R5144 += 1, R5086 += 1, R5041 += 1, R5042 += 1 };
  s4 -> s4 [0, 65535] { R5208 += 1, R5144 += 1, R5085 += 1, R5086 += 1 };
  s4 -> s5 [61, 61] { R5208 += 1, R5144 += 1, R5086 += 1, R5042 += 1 };
  s4 -> s1 [62, 65535] { R5208 += 1, R5144 += 1, R5086 += 1, R5042 += 1 };
  s5 -> s6 [0, 65535] { R5208 += 1, R5144 += 1, R5086 += 1 };
  s5 -> s7 [0, 65535] { R5208 += 1, R5144 += 1 };
  s5 -> s8 [0, 65535] { R5208 += 1 };
  s5 -> s9 [0, 65535];
  s5 -> s5 [0, 65535] { R5208 += 1, R5144 += 1, R5086 += 1, R5042 += 1 };
  s6 -> s6 [0, 65535] { R5208 += 1, R5144 += 1, R5086 += 1 };
  s6 -> s7 [0, 65535] { R5208 += 1, R5144 += 1 };
  s6 -> s8 [0, 65535] { R5208 += 1 };
  s6 -> s9 [0, 65535];
  s7 -> s7 [0, 65535] { R5208 += 1, R5144 += 1 };
  s7 -> s8 [0, 65535] { R5208 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R5208 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  accepting s8, s5, s9, s6, s7;
};
automaton uri_28 {
  init s0;
  s0 -> s1 [0, 65535] { R5210 += 1, R5146 += 1, R5088 += 1, R5043 += 1, R5044 += 1 };
  s0 -> s2 [0, 65535] { R5210 += 1, R5146 += 1, R5087 += 1, R5088 += 1 };
  s0 -> s0 [0, 65535] { R5209 += 1, R5210 += 1 };
  s0 -> s3 [0, 65535] { R5210 += 1, R5145 += 1, R5146 += 1 };
  s0 -> s4 [0, 65535] { R5210 += 1, R5146 += 1, R5088 += 1, R5044 += 1, R4 += 1 };
  s1 -> s1 [0, 65535] { R5210 += 1, R5146 += 1, R5088 += 1, R5043 += 1, R5044 += 1 };
  s1 -> s6 [0, 65535] { R5210 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [0, 65535] { R5210 += 1, R5146 += 1, R5088 += 1, R5044 += 1, R4 += 1 };
  s1 -> s8 [0, 65535] { R5210 += 1, R5146 += 1 };
  s2 -> s1 [0, 65535] { R5210 += 1, R5146 += 1, R5088 += 1, R5043 += 1, R5044 += 1 };
  s2 -> s2 [0, 65535] { R5210 += 1, R5146 += 1, R5087 += 1, R5088 += 1 };
  s2 -> s6 [0, 65535] { R5210 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [0, 65535] { R5210 += 1, R5146 += 1, R5088 += 1, R5044 += 1, R4 += 1 };
  s3 -> s1 [0, 65535] { R5210 += 1, R5146 += 1, R5088 += 1, R5043 += 1, R5044 += 1 };
  s3 -> s2 [0, 65535] { R5210 += 1, R5146 += 1, R5087 += 1, R5088 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R5210 += 1, R5145 += 1, R5146 += 1 };
  s3 -> s4 [0, 65535] { R5210 += 1, R5146 += 1, R5088 += 1, R5044 += 1, R4 += 1 };
  s4 -> s5 [0, 65535] { R5210 += 1, R5146 += 1, R5088 += 1 };
  s4 -> s6 [0, 65535] { R5210 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R5210 += 1, R5146 += 1, R5088 += 1, R5044 += 1, R4 += 1 };
  s4 -> s8 [0, 65535] { R5210 += 1, R5146 += 1 };
  s5 -> s5 [0, 65535] { R5210 += 1, R5146 += 1, R5088 += 1 };
  s5 -> s6 [0, 65535] { R5210 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R5210 += 1, R5146 += 1 };
  s6 -> s6 [0, 65535] { R5210 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R5210 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R5210 += 1, R5146 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_29 {
  init s0;
  s0 -> s1 [0, 60] { R5212 += 1, R5148 += 1, R5090 += 1, R5046 += 1, R15 += 1 };
  s0 -> s2 [0, 65535] { R5212 += 1, R5148 += 1, R5090 += 1, R5046 += 1, R14 += 1, R15 += 1 };
  s0 -> s3 [0, 65535] { R5212 += 1, R5147 += 1, R5148 += 1 };
  s0 -> s4 [0, 65535] { R5212 += 1, R5148 += 1, R5090 += 1, R5045 += 1, R5046 += 1 };
  s0 -> s5 [0, 65535] { R5212 += 1, R5148 += 1, R5089 += 1, R5090 += 1 };
  s0 -> s0 [0, 65535] { R5211 += 1, R5212 += 1 };
  s0 -> s6 [61, 61] { R5212 += 1, R5148 += 1, R5090 += 1, R5046 += 1 };
  s0 -> s1 [62, 65535] { R5212 += 1, R5148 += 1, R5090 += 1, R5046 += 1, R15 += 1 };
  s1 -> s1 [0, 60] { R5212 += 1, R5148 += 1, R5090 += 1, R5046 += 1, R15 += 1 };
  s1 -> s6 [61, 61] { R5212 += 1, R5148 += 1, R5090 += 1, R5046 += 1 };
  s1 -> s1 [62, 65535] { R5212 += 1, R5148 += 1, R5090 += 1, R5046 += 1, R15 += 1 };
  s2 -> s1 [0, 60] { R5212 += 1, R5148 += 1, R5090 += 1, R5046 += 1, R15 += 1 };
  s2 -> s2 [0, 65535] { R5212 += 1, R5148 += 1, R5090 += 1, R5046 += 1, R14 += 1, R15 += 1 };
  s2 -> s6 [61, 61] { R5212 += 1, R5148 += 1, R5090 += 1, R5046 += 1 };
  s2 -> s1 [62, 65535] { R5212 += 1, R5148 += 1, R5090 += 1, R5046 += 1, R15 += 1 };
  s3 -> s1 [0, 60] { R5212 += 1, R5148 += 1, R5090 += 1, R5046 += 1, R15 += 1 };
  s3 -> s2 [0, 65535] { R5212 += 1, R5148 += 1, R5090 += 1, R5046 += 1, R14 += 1, R15 += 1 };
  s3 -> s3 [0, 65535] { R5212 += 1, R5147 += 1, R5148 += 1 };
  s3 -> s4 [0, 65535] { R5212 += 1, R5148 += 1, R5090 += 1, R5045 += 1, R5046 += 1 };
  s3 -> s5 [0, 65535] { R5212 += 1, R5148 += 1, R5089 += 1, R5090 += 1 };
  s3 -> s6 [61, 61] { R5212 += 1, R5148 += 1, R5090 += 1, R5046 += 1 };
  s3 -> s1 [62, 65535] { R5212 += 1, R5148 += 1, R5090 += 1, R5046 += 1, R15 += 1 };
  s4 -> s1 [0, 60] { R5212 += 1, R5148 += 1, R5090 += 1, R5046 += 1, R15 += 1 };
  s4 -> s2 [0, 65535] { R5212 += 1, R5148 += 1, R5090 += 1, R5046 += 1, R14 += 1, R15 += 1 };
  s4 -> s4 [0, 65535] { R5212 += 1, R5148 += 1, R5090 += 1, R5045 += 1, R5046 += 1 };
  s4 -> s6 [61, 61] { R5212 += 1, R5148 += 1, R5090 += 1, R5046 += 1 };
  s4 -> s1 [62, 65535] { R5212 += 1, R5148 += 1, R5090 += 1, R5046 += 1, R15 += 1 };
  s5 -> s1 [0, 60] { R5212 += 1, R5148 += 1, R5090 += 1, R5046 += 1, R15 += 1 };
  s5 -> s2 [0, 65535] { R5212 += 1, R5148 += 1, R5090 += 1, R5046 += 1, R14 += 1, R15 += 1 };
  s5 -> s4 [0, 65535] { R5212 += 1, R5148 += 1, R5090 += 1, R5045 += 1, R5046 += 1 };
  s5 -> s5 [0, 65535] { R5212 += 1, R5148 += 1, R5089 += 1, R5090 += 1 };
  s5 -> s6 [61, 61] { R5212 += 1, R5148 += 1, R5090 += 1, R5046 += 1 };
  s5 -> s1 [62, 65535] { R5212 += 1, R5148 += 1, R5090 += 1, R5046 += 1, R15 += 1 };
  s6 -> s7 [0, 65535] { R5212 += 1 };
  s6 -> s6 [0, 65535] { R5212 += 1, R5148 += 1, R5090 += 1, R5046 += 1 };
  s6 -> s8 [0, 65535] { R5212 += 1, R5148 += 1 };
  s6 -> s9 [0, 65535] { R5212 += 1, R5148 += 1, R5090 += 1 };
  s6 -> s10 [0, 65535];
  s7 -> s7 [0, 65535] { R5212 += 1 };
  s7 -> s10 [0, 65535];
  s8 -> s7 [0, 65535] { R5212 += 1 };
  s8 -> s8 [0, 65535] { R5212 += 1, R5148 += 1 };
  s8 -> s10 [0, 65535];
  s9 -> s7 [0, 65535] { R5212 += 1 };
  s9 -> s8 [0, 65535] { R5212 += 1, R5148 += 1 };
  s9 -> s9 [0, 65535] { R5212 += 1, R5148 += 1, R5090 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  accepting s8, s9, s6, s7, s10;
};
automaton uri_30 {
  init s0;
  s0 -> s1 [0, 60] { R5214 += 1, R5150 += 1, R5092 += 1, R5048 += 1, R5018 += 1 };
  s0 -> s0 [0, 65535] { R5213 += 1, R5214 += 1 };
  s0 -> s2 [0, 65535] { R5214 += 1, R5150 += 1, R5091 += 1, R5092 += 1 };
  s0 -> s3 [0, 65535] { R5214 += 1, R5150 += 1, R5092 += 1, R5048 += 1, R5017 += 1, R5018 += 1 };
  s0 -> s4 [0, 65535] { R5214 += 1, R5149 += 1, R5150 += 1 };
  s0 -> s5 [0, 65535] { R5214 += 1, R5150 += 1, R5092 += 1, R5047 += 1, R5048 += 1 };
  s0 -> s1 [62, 65535] { R5214 += 1, R5150 += 1, R5092 += 1, R5048 += 1, R5018 += 1 };
  s1 -> s1 [0, 60] { R5214 += 1, R5150 += 1, R5092 += 1, R5048 += 1, R5018 += 1 };
  s1 -> s6 [0, 65535] { R5214 += 1 };
  s1 -> s7 [0, 65535] { R5214 += 1, R5150 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s9 [0, 65535] { R5214 += 1, R5150 += 1, R5092 += 1 };
  s1 -> s1 [0, 65535] { R5214 += 1, R5150 += 1, R5092 += 1, R5048 += 1 };
  s1 -> s1 [62, 65535] { R5214 += 1, R5150 += 1, R5092 += 1, R5048 += 1, R5018 += 1 };
  s2 -> s1 [0, 60] { R5214 += 1, R5150 += 1, R5092 += 1, R5048 += 1, R5018 += 1 };
  s2 -> s6 [0, 65535] { R5214 += 1 };
  s2 -> s2 [0, 65535] { R5214 += 1, R5150 += 1, R5091 += 1, R5092 += 1 };
  s2 -> s3 [0, 65535] { R5214 += 1, R5150 += 1, R5092 += 1, R5048 += 1, R5017 += 1, R5018 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s5 [0, 65535] { R5214 += 1, R5150 += 1, R5092 += 1, R5047 += 1, R5048 += 1 };
  s2 -> s1 [62, 65535] { R5214 += 1, R5150 += 1, R5092 += 1, R5048 += 1, R5018 += 1 };
  s3 -> s1 [0, 60] { R5214 += 1, R5150 += 1, R5092 += 1, R5048 += 1, R5018 += 1 };
  s3 -> s6 [0, 65535] { R5214 += 1 };
  s3 -> s7 [0, 65535] { R5214 += 1, R5150 += 1 };
  s3 -> s3 [0, 65535] { R5214 += 1, R5150 += 1, R5092 += 1, R5048 += 1, R5017 += 1, R5018 += 1 };
  s3 -> s9 [0, 65535] { R5214 += 1, R5150 += 1, R5092 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s1 [62, 65535] { R5214 += 1, R5150 += 1, R5092 += 1, R5048 += 1, R5018 += 1 };
  s4 -> s1 [0, 60] { R5214 += 1, R5150 += 1, R5092 += 1, R5048 += 1, R5018 += 1 };
  s4 -> s2 [0, 65535] { R5214 += 1, R5150 += 1, R5091 += 1, R5092 += 1 };
  s4 -> s3 [0, 65535] { R5214 += 1, R5150 += 1, R5092 += 1, R5048 += 1, R5017 += 1, R5018 += 1 };
  s4 -> s4 [0, 65535] { R5214 += 1, R5149 += 1, R5150 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s5 [0, 65535] { R5214 += 1, R5150 += 1, R5092 += 1, R5047 += 1, R5048 += 1 };
  s4 -> s1 [62, 65535] { R5214 += 1, R5150 += 1, R5092 += 1, R5048 += 1, R5018 += 1 };
  s5 -> s1 [0, 60] { R5214 += 1, R5150 += 1, R5092 += 1, R5048 += 1, R5018 += 1 };
  s5 -> s6 [0, 65535] { R5214 += 1 };
  s5 -> s7 [0, 65535] { R5214 += 1, R5150 += 1 };
  s5 -> s3 [0, 65535] { R5214 += 1, R5150 += 1, R5092 += 1, R5048 += 1, R5017 += 1, R5018 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R5214 += 1, R5150 += 1, R5092 += 1, R5047 += 1, R5048 += 1 };
  s5 -> s1 [62, 65535] { R5214 += 1, R5150 += 1, R5092 += 1, R5048 += 1, R5018 += 1 };
  s6 -> s6 [0, 65535] { R5214 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s6 [0, 65535] { R5214 += 1 };
  s7 -> s7 [0, 65535] { R5214 += 1, R5150 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s6 [0, 65535] { R5214 += 1 };
  s9 -> s7 [0, 65535] { R5214 += 1, R5150 += 1 };
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R5214 += 1, R5150 += 1, R5092 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton uri_31 {
  init s0;
  s0 -> s1 [0, 65535] { R5216 += 1, R5152 += 1, R5094 += 1, R5050 += 1, R5020 += 1, R0 += 1 };
  s0 -> s2 [0, 65535] { R5216 += 1, R5151 += 1, R5152 += 1 };
  s0 -> s3 [0, 65535] { R5216 += 1, R5152 += 1, R5093 += 1, R5094 += 1 };
  s0 -> s4 [0, 65535] { R5216 += 1, R5152 += 1, R5094 += 1, R5050 += 1, R5019 += 1, R5020 += 1 };
  s0 -> s5 [0, 65535] { R5216 += 1, R5152 += 1, R5094 += 1, R5049 += 1, R5050 += 1 };
  s0 -> s0 [0, 65535] { R5215 += 1, R5216 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R5216 += 1, R5152 += 1, R5094 += 1, R5050 += 1, R5020 += 1, R0 += 1 };
  s1 -> s7 [0, 65535] { R5216 += 1, R5152 += 1 };
  s1 -> s9 [0, 65535] { R5216 += 1, R5152 += 1, R5094 += 1 };
  s1 -> s8 [0, 65535] { R5216 += 1 };
  s1 -> s10 [0, 65535] { R5216 += 1, R5152 += 1, R5094 += 1, R5050 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [0, 65535] { R5216 += 1, R5152 += 1, R5094 += 1, R5050 += 1, R5020 += 1, R0 += 1 };
  s2 -> s2 [0, 65535] { R5216 += 1, R5151 += 1, R5152 += 1 };
  s2 -> s3 [0, 65535] { R5216 += 1, R5152 += 1, R5093 += 1, R5094 += 1 };
  s2 -> s4 [0, 65535] { R5216 += 1, R5152 += 1, R5094 += 1, R5050 += 1, R5019 += 1, R5020 += 1 };
  s2 -> s5 [0, 65535] { R5216 += 1, R5152 += 1, R5094 += 1, R5049 += 1, R5050 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [0, 65535] { R5216 += 1, R5152 += 1, R5094 += 1, R5050 += 1, R5020 += 1, R0 += 1 };
  s3 -> s3 [0, 65535] { R5216 += 1, R5152 += 1, R5093 += 1, R5094 += 1 };
  s3 -> s4 [0, 65535] { R5216 += 1, R5152 += 1, R5094 += 1, R5050 += 1, R5019 += 1, R5020 += 1 };
  s3 -> s5 [0, 65535] { R5216 += 1, R5152 += 1, R5094 += 1, R5049 += 1, R5050 += 1 };
  s3 -> s8 [0, 65535] { R5216 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s1 [0, 65535] { R5216 += 1, R5152 += 1, R5094 += 1, R5050 += 1, R5020 += 1, R0 += 1 };
  s4 -> s7 [0, 65535] { R5216 += 1, R5152 += 1 };
  s4 -> s4 [0, 65535] { R5216 += 1, R5152 += 1, R5094 += 1, R5050 += 1, R5019 += 1, R5020 += 1 };
  s4 -> s9 [0, 65535] { R5216 += 1, R5152 += 1, R5094 += 1 };
  s4 -> s8 [0, 65535] { R5216 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s1 [0, 65535] { R5216 += 1, R5152 += 1, R5094 += 1, R5050 += 1, R5020 += 1, R0 += 1 };
  s5 -> s7 [0, 65535] { R5216 += 1, R5152 += 1 };
  s5 -> s4 [0, 65535] { R5216 += 1, R5152 += 1, R5094 += 1, R5050 += 1, R5019 += 1, R5020 += 1 };
  s5 -> s5 [0, 65535] { R5216 += 1, R5152 += 1, R5094 += 1, R5049 += 1, R5050 += 1 };
  s5 -> s8 [0, 65535] { R5216 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5216 += 1, R5152 += 1 };
  s7 -> s8 [0, 65535] { R5216 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R5216 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s7 [0, 65535] { R5216 += 1, R5152 += 1 };
  s9 -> s9 [0, 65535] { R5216 += 1, R5152 += 1, R5094 += 1 };
  s9 -> s8 [0, 65535] { R5216 += 1 };
  s10 -> s6 [0, 65535];
  s10 -> s7 [0, 65535] { R5216 += 1, R5152 += 1 };
  s10 -> s9 [0, 65535] { R5216 += 1, R5152 += 1, R5094 += 1 };
  s10 -> s8 [0, 65535] { R5216 += 1 };
  s10 -> s10 [0, 65535] { R5216 += 1, R5152 += 1, R5094 += 1, R5050 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton uri_32 {
  init s0;
  s0 -> s1 [0, 64] { R5218 += 1, R5154 += 1, R5096 += 1, R5052 += 1, R5022 += 1 };
  s0 -> s2 [0, 65535] { R5218 += 1, R5153 += 1, R5154 += 1 };
  s0 -> s3 [0, 65535] { R5218 += 1, R5154 += 1, R5096 += 1, R5051 += 1, R5052 += 1 };
  s0 -> s4 [0, 65535] { R5218 += 1, R5154 += 1, R5096 += 1, R5052 += 1, R5021 += 1, R5022 += 1 };
  s0 -> s0 [0, 65535] { R5217 += 1, R5218 += 1 };
  s0 -> s5 [0, 65535] { R5218 += 1, R5154 += 1, R5095 += 1, R5096 += 1 };
  s0 -> s1 [78, 65535] { R5218 += 1, R5154 += 1, R5096 += 1, R5052 += 1, R5022 += 1 };
  s1 -> s1 [0, 64] { R5218 += 1, R5154 += 1, R5096 += 1, R5052 += 1, R5022 += 1 };
  s1 -> s8 [0, 65535] { R5218 += 1, R5154 += 1, R5096 += 1 };
  s1 -> s6 [0, 65535] { R5218 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R5218 += 1, R5154 += 1, R5096 += 1, R5052 += 1 };
  s1 -> s9 [0, 65535] { R5218 += 1, R5154 += 1 };
  s1 -> s1 [78, 65535] { R5218 += 1, R5154 += 1, R5096 += 1, R5052 += 1, R5022 += 1 };
  s2 -> s1 [0, 64] { R5218 += 1, R5154 += 1, R5096 += 1, R5052 += 1, R5022 += 1 };
  s2 -> s2 [0, 65535] { R5218 += 1, R5153 += 1, R5154 += 1 };
  s2 -> s3 [0, 65535] { R5218 += 1, R5154 += 1, R5096 += 1, R5051 += 1, R5052 += 1 };
  s2 -> s4 [0, 65535] { R5218 += 1, R5154 += 1, R5096 += 1, R5052 += 1, R5021 += 1, R5022 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s5 [0, 65535] { R5218 += 1, R5154 += 1, R5095 += 1, R5096 += 1 };
  s2 -> s1 [78, 65535] { R5218 += 1, R5154 += 1, R5096 += 1, R5052 += 1, R5022 += 1 };
  s3 -> s1 [0, 64] { R5218 += 1, R5154 += 1, R5096 += 1, R5052 += 1, R5022 += 1 };
  s3 -> s3 [0, 65535] { R5218 += 1, R5154 += 1, R5096 += 1, R5051 += 1, R5052 += 1 };
  s3 -> s4 [0, 65535] { R5218 += 1, R5154 += 1, R5096 += 1, R5052 += 1, R5021 += 1, R5022 += 1 };
  s3 -> s6 [0, 65535] { R5218 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s9 [0, 65535] { R5218 += 1, R5154 += 1 };
  s3 -> s1 [78, 65535] { R5218 += 1, R5154 += 1, R5096 += 1, R5052 += 1, R5022 += 1 };
  s4 -> s1 [0, 64] { R5218 += 1, R5154 += 1, R5096 += 1, R5052 += 1, R5022 += 1 };
  s4 -> s8 [0, 65535] { R5218 += 1, R5154 += 1, R5096 += 1 };
  s4 -> s4 [0, 65535] { R5218 += 1, R5154 += 1, R5096 += 1, R5052 += 1, R5021 += 1, R5022 += 1 };
  s4 -> s6 [0, 65535] { R5218 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s9 [0, 65535] { R5218 += 1, R5154 += 1 };
  s4 -> s1 [78, 65535] { R5218 += 1, R5154 += 1, R5096 += 1, R5052 += 1, R5022 += 1 };
  s5 -> s1 [0, 64] { R5218 += 1, R5154 += 1, R5096 += 1, R5052 += 1, R5022 += 1 };
  s5 -> s3 [0, 65535] { R5218 += 1, R5154 += 1, R5096 += 1, R5051 += 1, R5052 += 1 };
  s5 -> s4 [0, 65535] { R5218 += 1, R5154 += 1, R5096 += 1, R5052 += 1, R5021 += 1, R5022 += 1 };
  s5 -> s6 [0, 65535] { R5218 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R5218 += 1, R5154 += 1, R5095 += 1, R5096 += 1 };
  s5 -> s1 [78, 65535] { R5218 += 1, R5154 += 1, R5096 += 1, R5052 += 1, R5022 += 1 };
  s6 -> s6 [0, 65535] { R5218 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R5218 += 1, R5154 += 1, R5096 += 1 };
  s8 -> s6 [0, 65535] { R5218 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s9 [0, 65535] { R5218 += 1, R5154 += 1 };
  s9 -> s6 [0, 65535] { R5218 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s9 [0, 65535] { R5218 += 1, R5154 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton uri_33 {
  init s0;
  s0 -> s1 [0, 65535] { R5220 += 1, R5156 += 1, R5098 += 1, R5054 += 1, R5024 += 1, R5007 += 1 };
  s0 -> s0 [0, 65535] { R5219 += 1, R5220 += 1 };
  s0 -> s2 [0, 65535] { R5220 += 1, R5156 += 1, R5097 += 1, R5098 += 1 };
  s0 -> s3 [0, 65535] { R5220 += 1, R5156 += 1, R5098 += 1, R5053 += 1, R5054 += 1 };
  s0 -> s4 [0, 65535] { R5220 += 1, R5156 += 1, R5098 += 1, R5054 += 1, R5023 += 1, R5024 += 1 };
  s0 -> s5 [0, 65535] { R5220 += 1, R5155 += 1, R5156 += 1 };
  s1 -> s1 [0, 65535] { R5220 += 1, R5156 += 1, R5098 += 1, R5054 += 1, R5024 += 1, R5007 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R5220 += 1, R5156 += 1, R5098 += 1 };
  s1 -> s8 [0, 65535] { R5220 += 1, R5156 += 1 };
  s1 -> s10 [0, 65535] { R5220 += 1, R5156 += 1, R5098 += 1, R5054 += 1 };
  s1 -> s9 [0, 65535] { R5220 += 1 };
  s2 -> s1 [0, 65535] { R5220 += 1, R5156 += 1, R5098 += 1, R5054 += 1, R5024 += 1, R5007 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R5220 += 1, R5156 += 1, R5097 += 1, R5098 += 1 };
  s2 -> s3 [0, 65535] { R5220 += 1, R5156 += 1, R5098 += 1, R5053 += 1, R5054 += 1 };
  s2 -> s4 [0, 65535] { R5220 += 1, R5156 += 1, R5098 += 1, R5054 += 1, R5023 += 1, R5024 += 1 };
  s2 -> s9 [0, 65535] { R5220 += 1 };
  s3 -> s1 [0, 65535] { R5220 += 1, R5156 += 1, R5098 += 1, R5054 += 1, R5024 += 1, R5007 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s8 [0, 65535] { R5220 += 1, R5156 += 1 };
  s3 -> s3 [0, 65535] { R5220 += 1, R5156 += 1, R5098 += 1, R5053 += 1, R5054 += 1 };
  s3 -> s4 [0, 65535] { R5220 += 1, R5156 += 1, R5098 += 1, R5054 += 1, R5023 += 1, R5024 += 1 };
  s3 -> s9 [0, 65535] { R5220 += 1 };
  s4 -> s1 [0, 65535] { R5220 += 1, R5156 += 1, R5098 += 1, R5054 += 1, R5024 += 1, R5007 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R5220 += 1, R5156 += 1, R5098 += 1 };
  s4 -> s8 [0, 65535] { R5220 += 1, R5156 += 1 };
  s4 -> s4 [0, 65535] { R5220 += 1, R5156 += 1, R5098 += 1, R5054 += 1, R5023 += 1, R5024 += 1 };
  s4 -> s9 [0, 65535] { R5220 += 1 };
  s5 -> s1 [0, 65535] { R5220 += 1, R5156 += 1, R5098 += 1, R5054 += 1, R5024 += 1, R5007 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s2 [0, 65535] { R5220 += 1, R5156 += 1, R5097 += 1, R5098 += 1 };
  s5 -> s3 [0, 65535] { R5220 += 1, R5156 += 1, R5098 += 1, R5053 += 1, R5054 += 1 };
  s5 -> s4 [0, 65535] { R5220 += 1, R5156 += 1, R5098 += 1, R5054 += 1, R5023 += 1, R5024 += 1 };
  s5 -> s5 [0, 65535] { R5220 += 1, R5155 += 1, R5156 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5220 += 1, R5156 += 1, R5098 += 1 };
  s7 -> s8 [0, 65535] { R5220 += 1, R5156 += 1 };
  s7 -> s9 [0, 65535] { R5220 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R5220 += 1, R5156 += 1 };
  s8 -> s9 [0, 65535] { R5220 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s9 [0, 65535] { R5220 += 1 };
  s10 -> s6 [0, 65535];
  s10 -> s7 [0, 65535] { R5220 += 1, R5156 += 1, R5098 += 1 };
  s10 -> s8 [0, 65535] { R5220 += 1, R5156 += 1 };
  s10 -> s10 [0, 65535] { R5220 += 1, R5156 += 1, R5098 += 1, R5054 += 1 };
  s10 -> s9 [0, 65535] { R5220 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
};
constraint R4 = R5020 && R5 = R5028 && R6 = R5098 && R7 = R5032 && R8 = R5072 && R9 = R5156 && R10 = R5220 && R14 = 0 && R15 - R5019 = -1 && R3489 = 0 && R3490 = R5054 && R4357 = 0 && R4358 - R5031 = -1 && R4791 = 0 && R4792 - R5155 = -1 && R5009 = 0 && R5010 = 1 && R5011 = 0 && R5012 = 1 && R5013 = 0 && R5014 = 1 && R5015 = 0 && R5016 = 1 && R5017 = R5019 && R5018 = R5020 && R5025 - R5054 = 1 && R5026 = R5028 && R5027 - R5054 = 1 && R5029 = R5031 && R5030 = R5032 && R5037 = 0 && R5038 = 4 && R5039 = 0 && R5040 = 4 && R5041 = 0 && R5042 = R5054 && R5043 = 0 && R5044 = R5054 && R5045 = 0 && R5046 = R5054 && R5047 = 0 && R5048 = R5054 && R5049 = 0 && R5050 = R5054 && R5051 = 0 && R5052 = R5054 && R5053 = 0 && R5055 = 5 && R5056 = R5072 && R5057 = 5 && R5058 = R5072 && R5059 = 5 && R5060 = R5072 && R5061 = 5 && R5062 = R5072 && R5063 = 5 && R5064 = R5072 && R5065 = 5 && R5066 = R5072 && R5067 = 5 && R5068 = R5072 && R5069 = 5 && R5070 = R5072 && R5071 = 5 && R5073 = 1 && R5074 = R5098 && R5075 = 1 && R5076 = R5098 && R5077 = 1 && R5078 = R5098 && R5079 = 1 && R5080 = R5098 && R5081 = 1 && R5082 = R5098 && R5083 = 1 && R5084 = R5098 && R5085 = 1 && R5086 = R5098 && R5087 = 1 && R5088 = R5098 && R5089 = 1 && R5090 = R5098 && R5091 = 1 && R5092 = R5098 && R5093 = 1 && R5094 = R5098 && R5095 = 1 && R5096 = R5098 && R5097 = 1 && R5099 = 0 && R5100 - R5155 = -1 && R5101 = 0 && R5102 - R5155 = -1 && R5103 = 0 && R5104 - R5155 = -1 && R5105 = 0 && R5106 - R5155 = -1 && R5107 = 0 && R5108 - R5155 = -1 && R5109 = 0 && R5110 - R5155 = -1 && R5111 = 0 && R5112 - R5155 = -1 && R5113 = 0 && R5114 - R5155 = -1 && R5115 = 0 && R5116 - R5155 = -1 && R5117 = 0 && R5118 - R5155 = -1 && R5119 = 0 && R5120 - R5155 = -1 && R5121 = 0 && R5122 - R5155 = -1 && R5123 = 0 && R5124 - R5155 = -1 && R5125 = R5155 && R5126 = R5156 && R5127 = R5155 && R5128 = R5156 && R5129 = R5155 && R5130 = R5156 && R5131 = R5155 && R5132 = R5156 && R5133 = R5155 && R5134 = R5156 && R5135 = R5155 && R5136 = R5156 && R5137 = R5155 && R5138 = R5156 && R5139 = R5155 && R5140 = R5156 && R5141 = R5155 && R5142 = R5156 && R5143 = R5155 && R5144 = R5156 && R5145 = R5155 && R5146 = R5156 && R5147 = R5155 && R5148 = R5156 && R5149 = R5155 && R5150 = R5156 && R5151 = R5155 && R5152 = R5156 && R5153 = R5155 && R5154 = R5156 && R5157 = 10 && R5158 = R5220 && R5159 = 10 && R5160 = R5220 && R5161 = 10 && R5162 = R5220 && R5163 = 10 && R5164 = R5220 && R5165 = 10 && R5166 = R5220 && R5167 = 10 && R5168 = R5220 && R5169 = 10 && R5170 = R5220 && R5171 = 10 && R5172 = R5220 && R5173 = 10 && R5174 = R5220 && R5175 = 10 && R5176 = R5220 && R5177 = 10 && R5178 = R5220 && R5179 = 10 && R5180 = R5220 && R5181 = 10 && R5182 = R5220 && R5183 = 10 && R5184 = R5220 && R5185 = 10 && R5186 = R5220 && R5187 = 10 && R5188 = R5220 && R5189 = 10 && R5190 = R5220 && R5191 = 10 && R5192 = R5220 && R5193 = 10 && R5194 = R5220 && R5195 = 10 && R5196 = R5220 && R5197 = 10 && R5198 = R5220 && R5199 = 10 && R5200 = R5220 && R5201 = 10 && R5202 = R5220 && R5203 = 10 && R5204 = R5220 && R5205 = 10 && R5206 = R5220 && R5207 = 10 && R5208 = R5220 && R5209 = 10 && R5210 = R5220 && R5211 = 10 && R5212 = R5220 && R5213 = 10 && R5214 = R5220 && R5215 = 10 && R5216 = R5220 && R5217 = 10 && R5218 = R5220 && R5219 = 10 && R0 != 0 && R1 != 0 && R2 != 0 && R3 != 0 && R3485 < 1 && R5019 - R5020 < 1 && 0 < R5019 && R5054 < R5028 && R5031 - R5032 < 1 && 0 < R5031 && -1 < R5054 && 4 < R5072 && 0 < R5098 && R5155 - R5156 < 1 && 0 < R5155 && 9 < R5220 && (R5021 != 0 || R5019 - R5022 = 1 || (R5007 = 0 && R5019 = 1)) && (R5023 != 0 || R5019 - R5024 = 1 || (R5007 = 0 && R5019 = 1)) && (R5033 != 0 || R5031 - R5034 = 1 || (R5008 = 0 && R5031 = 1)) && (R5035 != 0 || R5031 - R5036 = 1 || (R5008 = 0 && R5031 = 1)) && (R5021 = 0 || (R5007 = 0 && R5019 = 1)) && (R5023 = 0 || (R5007 = 0 && R5019 = 1)) && (R5033 = 0 || (R5008 = 0 && R5031 = 1)) && (R5035 = 0 || (R5008 = 0 && R5031 = 1));
// End of Parikh automata intersection problem
