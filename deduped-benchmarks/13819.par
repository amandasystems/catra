// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R1467, R1468, R1469, R147, R1470, R1471, R1472, R1473, R1474, R1475, R1476, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R2, R22, R23, R24, R25, R2583, R2584, R2585, R2586, R2587, R2588, R2589, R2590, R2591, R2592, R2593, R2594, R2595, R2596, R2597, R2598, R2599, R26, R2600, R2601, R2602, R2603, R2604, R2605, R2606, R2607, R2608, R2609, R2610, R2611, R2612, R2613, R2614, R2615, R2616, R2617, R2618, R2619, R2620, R2621, R2622, R2623, R2624, R2625, R2626, R2627, R2628, R2629, R2630, R2631, R2632, R2633, R2634, R2635, R2636, R2637, R2638, R2639, R2640, R2641, R2642, R2643, R2644, R2645, R2646, R2647, R2648, R2649, R2650, R2651, R2652, R2653, R2654, R2655, R2656, R2657, R2658, R2659, R2660, R2661, R2662, R2663, R2664, R2665, R2666, R2667, R2668, R2669, R2670, R2671, R2672, R2673, R2674, R2675, R2676, R2677, R2678, R2679, R2680, R2681, R2682, R2683, R2684, R2685, R2686, R2687, R2688, R2689, R2690, R2691, R2692, R2693, R2694, R2695, R2696, R2697, R2698, R2699, R27, R2700, R2701, R2702, R2703, R2704, R2705, R2706, R2707, R2708, R2709, R2710, R2711, R2712, R2713, R2714, R2715, R2716, R2717, R2718, R2719, R2720, R2721, R2722, R2723, R2724, R2725, R2726, R2727, R2728, R2729, R2730, R2731, R2732, R2733, R2734, R2735, R2736, R2737, R2738, R2739, R2740, R28, R29, R3, R30, R31, R32, R4, R5, R63, R65, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R30 += 1 };
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R2621 += 1, R2622 += 1 };
  s0 -> s1 [0, 65535] { R2622 += 1, R24 += 1 };
  s1 -> s1 [0, 65535] { R2622 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R2624 += 1 };
  s0 -> s0 [0, 65535] { R2623 += 1, R2624 += 1 };
  s0 -> s2 [70, 70] { R2624 += 1 };
  s0 -> s3 [70, 70] { R2624 += 1 };
  s0 -> s1 [76, 65535] { R2624 += 1 };
  s1 -> s1 [0, 69] { R2624 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2624 += 1 };
  s1 -> s3 [70, 70] { R2624 += 1 };
  s1 -> s1 [76, 65535] { R2624 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R2624 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R2624 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R2626 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R2625 += 1, R2626 += 1 };
  s0 -> s2 [70, 70] { R2626 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R2626 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R2626 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R2626 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2626 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R2626 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R2626 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2626 += 1, R63 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R2628 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R2627 += 1, R2628 += 1 };
  s0 -> s2 [70, 70] { R2628 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R2628 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R2628 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R2628 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2628 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R2628 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R2628 += 1, R65 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2628 += 1, R65 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R2630 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R2629 += 1, R2630 += 1 };
  s0 -> s2 [70, 70] { R2630 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R2630 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R2630 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R2630 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2630 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R2630 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R2630 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2630 += 1, R67 += 1, R68 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R2632 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R2631 += 1, R2632 += 1 };
  s0 -> s2 [70, 70] { R2632 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R2632 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R2632 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R2632 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2632 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R2632 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R2632 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R2632 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R2634 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R2633 += 1, R2634 += 1 };
  s0 -> s2 [70, 70] { R2634 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R2634 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R2634 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R2634 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2634 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R2634 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R2634 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R2634 += 1, R77 += 1, R78 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R2636 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R2635 += 1, R2636 += 1 };
  s0 -> s2 [70, 70] { R2636 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R2636 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R2636 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R2636 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2636 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R2636 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R2636 += 1, R81 += 1, R82 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2636 += 1, R81 += 1, R82 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R2638 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R2637 += 1, R2638 += 1 };
  s0 -> s2 [70, 70] { R2638 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R2638 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R2638 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R2638 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2638 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R2638 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R2638 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2638 += 1, R87 += 1, R88 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R2640 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R2639 += 1, R2640 += 1 };
  s0 -> s2 [70, 70] { R2640 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R2640 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R2640 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R2640 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2640 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R2640 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R2640 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R2640 += 1, R93 += 1, R94 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R2642 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R2641 += 1, R2642 += 1 };
  s0 -> s2 [70, 70] { R2642 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R2642 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R2642 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R2642 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2642 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R2642 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R2642 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535] { R2642 += 1, R101 += 1, R102 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R2644 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R2643 += 1, R2644 += 1 };
  s0 -> s2 [70, 70] { R2644 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R2644 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R2644 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R2644 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2644 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R2644 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R2644 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2644 += 1, R111 += 1, R112 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R2646 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R2645 += 1, R2646 += 1 };
  s0 -> s2 [70, 70] { R2646 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R2646 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R2646 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R2646 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2646 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R2646 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R2646 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2646 += 1, R119 += 1, R120 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R2648 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R2647 += 1, R2648 += 1 };
  s0 -> s2 [70, 70] { R2648 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R2648 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R2648 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R2648 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2648 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R2648 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R2648 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535] { R2648 += 1, R129 += 1, R130 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R2678 += 1 };
  s0 -> s0 [0, 65535] { R2677 += 1, R2678 += 1 };
  s0 -> s2 [70, 70] { R2678 += 1 };
  s0 -> s1 [71, 65535] { R2678 += 1 };
  s1 -> s1 [0, 69] { R2678 += 1 };
  s1 -> s2 [70, 70] { R2678 += 1 };
  s1 -> s1 [71, 65535] { R2678 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2678 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R2679 += 1, R2680 += 1 };
  s0 -> s1 [0, 65535] { R2680 += 1, R2 += 1 };
  s1 -> s1 [0, 65535] { R2680 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R2682 += 1 };
  s0 -> s0 [0, 65535] { R2681 += 1, R2682 += 1 };
  s0 -> s2 [0, 65535] { R2682 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R2682 += 1 };
  s0 -> s1 [71, 65535] { R2682 += 1 };
  s1 -> s1 [0, 69] { R2682 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R2682 += 1 };
  s1 -> s1 [71, 65535] { R2682 += 1 };
  s2 -> s1 [0, 69] { R2682 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2682 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R2682 += 1 };
  s2 -> s1 [71, 65535] { R2682 += 1 };
  s3 -> s3 [0, 65535] { R2682 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R2684 += 1, R2592 += 1 };
  s0 -> s2 [0, 65535] { R2684 += 1, R2591 += 1, R2592 += 1 };
  s0 -> s0 [0, 65535] { R2683 += 1, R2684 += 1 };
  s0 -> s1 [71, 65535] { R2684 += 1, R2592 += 1 };
  s1 -> s1 [0, 69] { R2684 += 1, R2592 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2684 += 1 };
  s1 -> s1 [71, 65535] { R2684 += 1, R2592 += 1 };
  s2 -> s1 [0, 69] { R2684 += 1, R2592 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2684 += 1, R2591 += 1, R2592 += 1 };
  s2 -> s1 [71, 65535] { R2684 += 1, R2592 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R2686 += 1, R2594 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R2685 += 1, R2686 += 1 };
  s0 -> s2 [0, 65535] { R2686 += 1, R2593 += 1, R2594 += 1 };
  s1 -> s1 [0, 65535] { R2686 += 1, R2594 += 1, R22 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R2686 += 1 };
  s2 -> s1 [0, 65535] { R2686 += 1, R2594 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2686 += 1, R2593 += 1, R2594 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2686 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R2688 += 1, R2596 += 1 };
  s0 -> s2 [0, 65535] { R2688 += 1, R2595 += 1, R2596 += 1 };
  s0 -> s0 [0, 65535] { R2687 += 1, R2688 += 1 };
  s0 -> s1 [75, 65535] { R2688 += 1, R2596 += 1 };
  s1 -> s1 [0, 70] { R2688 += 1, R2596 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2688 += 1 };
  s1 -> s1 [75, 65535] { R2688 += 1, R2596 += 1 };
  s2 -> s1 [0, 70] { R2688 += 1, R2596 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2688 += 1, R2595 += 1, R2596 += 1 };
  s2 -> s1 [75, 65535] { R2688 += 1, R2596 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R2690 += 1, R2597 += 1, R2598 += 1 };
  s0 -> s0 [0, 65535] { R2689 += 1, R2690 += 1 };
  s0 -> s2 [0, 65535] { R2690 += 1, R2598 += 1, R138 += 1 };
  s1 -> s1 [0, 65535] { R2690 += 1, R2597 += 1, R2598 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R2690 += 1, R2598 += 1, R138 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R2690 += 1 };
  s2 -> s2 [0, 65535] { R2690 += 1, R2598 += 1, R138 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2690 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R2692 += 1, R2600 += 1 };
  s0 -> s0 [0, 65535] { R2691 += 1, R2692 += 1 };
  s0 -> s2 [0, 65535] { R2692 += 1, R2599 += 1, R2600 += 1 };
  s0 -> s3 [0, 65535] { R2692 += 1, R2600 += 1, R140 += 1 };
  s0 -> s1 [76, 65535] { R2692 += 1, R2600 += 1 };
  s1 -> s1 [0, 74] { R2692 += 1, R2600 += 1 };
  s1 -> s1 [0, 65535] { R2692 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R2692 += 1, R2600 += 1 };
  s2 -> s1 [0, 74] { R2692 += 1, R2600 += 1 };
  s2 -> s2 [0, 65535] { R2692 += 1, R2599 += 1, R2600 += 1 };
  s2 -> s3 [0, 65535] { R2692 += 1, R2600 += 1, R140 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [76, 65535] { R2692 += 1, R2600 += 1 };
  s3 -> s1 [0, 74] { R2692 += 1, R2600 += 1 };
  s3 -> s4 [0, 65535] { R2692 += 1 };
  s3 -> s3 [0, 65535] { R2692 += 1, R2600 += 1, R140 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [76, 65535] { R2692 += 1, R2600 += 1 };
  s4 -> s4 [0, 65535] { R2692 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R2694 += 1, R2602 += 1, R144 += 1, R145 += 1 };
  s0 -> s2 [0, 65535] { R2694 += 1, R2601 += 1, R2602 += 1 };
  s0 -> s3 [0, 65535] { R2694 += 1, R2602 += 1, R145 += 1, R146 += 1 };
  s0 -> s0 [0, 65535] { R2693 += 1, R2694 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2694 += 1, R2602 += 1, R144 += 1, R145 += 1 };
  s1 -> s6 [0, 65535] { R2694 += 1 };
  s1 -> s3 [0, 65535] { R2694 += 1, R2602 += 1, R145 += 1, R146 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R2694 += 1, R2602 += 1, R144 += 1, R145 += 1 };
  s2 -> s2 [0, 65535] { R2694 += 1, R2601 += 1, R2602 += 1 };
  s2 -> s3 [0, 65535] { R2694 += 1, R2602 += 1, R145 += 1, R146 += 1 };
  s3 -> s4 [0, 65535] { R2694 += 1, R2602 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R2694 += 1 };
  s3 -> s3 [0, 65535] { R2694 += 1, R2602 += 1, R145 += 1, R146 += 1 };
  s4 -> s4 [0, 65535] { R2694 += 1, R2602 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R2694 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2694 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R2696 += 1, R2604 += 1, R150 += 1 };
  s0 -> s0 [0, 65535] { R2695 += 1, R2696 += 1 };
  s0 -> s2 [0, 65535] { R2696 += 1, R2603 += 1, R2604 += 1 };
  s0 -> s3 [0, 65535] { R2696 += 1, R2604 += 1, R149 += 1, R150 += 1 };
  s0 -> s4 [75, 75] { R2696 += 1, R2604 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R2696 += 1, R2604 += 1, R150 += 1 };
  s0 -> s1 [88, 65535] { R2696 += 1, R2604 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R2696 += 1, R2604 += 1, R150 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R2696 += 1, R2604 += 1 };
  s1 -> s7 [0, 65535] { R2696 += 1 };
  s1 -> s4 [75, 75] { R2696 += 1, R2604 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R2696 += 1, R2604 += 1, R150 += 1 };
  s1 -> s1 [88, 65535] { R2696 += 1, R2604 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R2696 += 1, R2604 += 1, R150 += 1 };
  s2 -> s2 [0, 65535] { R2696 += 1, R2603 += 1, R2604 += 1 };
  s2 -> s3 [0, 65535] { R2696 += 1, R2604 += 1, R149 += 1, R150 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [75, 75] { R2696 += 1, R2604 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R2696 += 1, R2604 += 1, R150 += 1 };
  s2 -> s1 [88, 65535] { R2696 += 1, R2604 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R2696 += 1, R2604 += 1, R150 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R2696 += 1, R2604 += 1, R149 += 1, R150 += 1 };
  s3 -> s7 [0, 65535] { R2696 += 1 };
  s3 -> s4 [75, 75] { R2696 += 1, R2604 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R2696 += 1, R2604 += 1, R150 += 1 };
  s3 -> s1 [88, 65535] { R2696 += 1, R2604 += 1, R150 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2696 += 1, R2604 += 1 };
  s4 -> s7 [0, 65535] { R2696 += 1 };
  s5 -> s5 [0, 75] { R2696 += 1, R2604 += 1, R150 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R2696 += 1, R2604 += 1 };
  s5 -> s7 [0, 65535] { R2696 += 1 };
  s5 -> s5 [88, 65535] { R2696 += 1, R2604 += 1, R150 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2696 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R2698 += 1, R2605 += 1, R2606 += 1 };
  s0 -> s2 [0, 65535] { R2698 += 1, R2606 += 1, R154 += 1 };
  s0 -> s0 [0, 65535] { R2697 += 1, R2698 += 1 };
  s0 -> s3 [0, 65535] { R2698 += 1, R2606 += 1 };
  s1 -> s1 [0, 65535] { R2698 += 1, R2605 += 1, R2606 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R2698 += 1, R2606 += 1, R154 += 1 };
  s1 -> s3 [0, 65535] { R2698 += 1, R2606 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2698 += 1, R2606 += 1, R154 += 1 };
  s2 -> s5 [0, 65535] { R2698 += 1 };
  s2 -> s3 [0, 65535] { R2698 += 1, R2606 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R2698 += 1 };
  s3 -> s3 [0, 65535] { R2698 += 1, R2606 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2698 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R2700 += 1, R2607 += 1, R2608 += 1 };
  s0 -> s2 [0, 65535] { R2700 += 1, R2608 += 1, R159 += 1, R160 += 1 };
  s0 -> s0 [0, 65535] { R2699 += 1, R2700 += 1 };
  s0 -> s3 [0, 65535] { R2700 += 1, R2608 += 1, R158 += 1, R159 += 1 };
  s1 -> s1 [0, 65535] { R2700 += 1, R2607 += 1, R2608 += 1 };
  s1 -> s2 [0, 65535] { R2700 += 1, R2608 += 1, R159 += 1, R160 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s3 [0, 65535] { R2700 += 1, R2608 += 1, R158 += 1, R159 += 1 };
  s2 -> s2 [0, 65535] { R2700 += 1, R2608 += 1, R159 += 1, R160 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R2700 += 1 };
  s2 -> s6 [0, 65535] { R2700 += 1, R2608 += 1 };
  s3 -> s2 [0, 65535] { R2700 += 1, R2608 += 1, R159 += 1, R160 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2700 += 1, R2608 += 1, R158 += 1, R159 += 1 };
  s3 -> s5 [0, 65535] { R2700 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2700 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R2700 += 1 };
  s6 -> s6 [0, 65535] { R2700 += 1, R2608 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R2702 += 1, R2610 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R2702 += 1, R2609 += 1, R2610 += 1 };
  s0 -> s3 [0, 65535] { R2702 += 1, R2610 += 1, R165 += 1, R166 += 1 };
  s0 -> s0 [0, 65535] { R2701 += 1, R2702 += 1 };
  s0 -> s4 [0, 65535] { R2702 += 1, R2610 += 1, R164 += 1, R165 += 1 };
  s0 -> s1 [76, 65535] { R2702 += 1, R2610 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R2702 += 1, R2610 += 1, R165 += 1 };
  s1 -> s1 [0, 65535] { R2702 += 1, R2610 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R2702 += 1 };
  s1 -> s1 [76, 65535] { R2702 += 1, R2610 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R2702 += 1, R2610 += 1, R165 += 1 };
  s2 -> s2 [0, 65535] { R2702 += 1, R2609 += 1, R2610 += 1 };
  s2 -> s3 [0, 65535] { R2702 += 1, R2610 += 1, R165 += 1, R166 += 1 };
  s2 -> s4 [0, 65535] { R2702 += 1, R2610 += 1, R164 += 1, R165 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [76, 65535] { R2702 += 1, R2610 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R2702 += 1, R2610 += 1, R165 += 1 };
  s3 -> s3 [0, 65535] { R2702 += 1, R2610 += 1, R165 += 1, R166 += 1 };
  s3 -> s7 [0, 65535] { R2702 += 1, R2610 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R2702 += 1 };
  s3 -> s1 [76, 65535] { R2702 += 1, R2610 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R2702 += 1, R2610 += 1, R165 += 1 };
  s4 -> s3 [0, 65535] { R2702 += 1, R2610 += 1, R165 += 1, R166 += 1 };
  s4 -> s4 [0, 65535] { R2702 += 1, R2610 += 1, R164 += 1, R165 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R2702 += 1 };
  s4 -> s1 [76, 65535] { R2702 += 1, R2610 += 1, R165 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2702 += 1 };
  s7 -> s7 [0, 65535] { R2702 += 1, R2610 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R2702 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R2704 += 1, R2612 += 1, R172 += 1, R174 += 1 };
  s0 -> s2 [0, 65535] { R2704 += 1, R2612 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s3 [0, 65535] { R2704 += 1, R2612 += 1, R171 += 1, R172 += 1 };
  s0 -> s0 [0, 65535] { R2703 += 1, R2704 += 1 };
  s0 -> s4 [0, 65535] { R2704 += 1, R2611 += 1, R2612 += 1 };
  s0 -> s1 [76, 65535] { R2704 += 1, R2612 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R2704 += 1, R2612 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 65535] { R2704 += 1, R2612 += 1, R172 += 1 };
  s1 -> s6 [0, 65535] { R2704 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R2704 += 1, R2612 += 1 };
  s1 -> s1 [76, 65535] { R2704 += 1, R2612 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R2704 += 1, R2612 += 1, R172 += 1, R174 += 1 };
  s2 -> s2 [0, 65535] { R2704 += 1, R2612 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s6 [0, 65535] { R2704 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R2704 += 1, R2612 += 1 };
  s2 -> s1 [76, 65535] { R2704 += 1, R2612 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R2704 += 1, R2612 += 1, R172 += 1, R174 += 1 };
  s3 -> s2 [0, 65535] { R2704 += 1, R2612 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s3 [0, 65535] { R2704 += 1, R2612 += 1, R171 += 1, R172 += 1 };
  s3 -> s6 [0, 65535] { R2704 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [76, 65535] { R2704 += 1, R2612 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R2704 += 1, R2612 += 1, R172 += 1, R174 += 1 };
  s4 -> s2 [0, 65535] { R2704 += 1, R2612 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s3 [0, 65535] { R2704 += 1, R2612 += 1, R171 += 1, R172 += 1 };
  s4 -> s4 [0, 65535] { R2704 += 1, R2611 += 1, R2612 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s1 [76, 65535] { R2704 += 1, R2612 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2704 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R2704 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R2704 += 1, R2612 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R2706 += 1, R2614 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s0 -> s2 [0, 65535] { R2706 += 1, R2614 += 1 };
  s0 -> s3 [0, 65535] { R2706 += 1, R2614 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s0 -> s0 [0, 65535] { R2705 += 1, R2706 += 1 };
  s0 -> s4 [0, 65535] { R2706 += 1, R2613 += 1, R2614 += 1 };
  s1 -> s1 [0, 65535] { R2706 += 1, R2614 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s1 -> s2 [0, 65535] { R2706 += 1, R2614 += 1 };
  s1 -> s3 [0, 65535] { R2706 += 1, R2614 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R2706 += 1 };
  s2 -> s2 [0, 65535] { R2706 += 1, R2614 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R2706 += 1 };
  s3 -> s2 [0, 65535] { R2706 += 1, R2614 += 1 };
  s3 -> s3 [0, 65535] { R2706 += 1, R2614 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s3 -> s6 [0, 65535] { R2706 += 1, R2614 += 1, R181 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s7 [0, 65535] { R2706 += 1 };
  s4 -> s1 [0, 65535] { R2706 += 1, R2614 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s4 -> s2 [0, 65535] { R2706 += 1, R2614 += 1 };
  s4 -> s3 [0, 65535] { R2706 += 1, R2614 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2706 += 1, R2613 += 1, R2614 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s2 [0, 65535] { R2706 += 1, R2614 += 1 };
  s6 -> s6 [0, 65535] { R2706 += 1, R2614 += 1, R181 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s7 [0, 65535] { R2706 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R2706 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R2708 += 1, R2616 += 1, R190 += 1, R192 += 1 };
  s0 -> s2 [0, 65535] { R2708 += 1, R2615 += 1, R2616 += 1 };
  s0 -> s3 [0, 65535] { R2708 += 1, R2616 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s0 -> s4 [0, 65535] { R2708 += 1, R2616 += 1, R189 += 1, R190 += 1 };
  s0 -> s0 [0, 65535] { R2707 += 1, R2708 += 1 };
  s0 -> s1 [87, 65535] { R2708 += 1, R2616 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 75] { R2708 += 1, R2616 += 1, R190 += 1, R192 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R2708 += 1, R2616 += 1, R190 += 1 };
  s1 -> s5 [0, 65535] { R2708 += 1 };
  s1 -> s7 [0, 65535] { R2708 += 1, R2616 += 1 };
  s1 -> s1 [87, 65535] { R2708 += 1, R2616 += 1, R190 += 1, R192 += 1 };
  s2 -> s1 [0, 75] { R2708 += 1, R2616 += 1, R190 += 1, R192 += 1 };
  s2 -> s2 [0, 65535] { R2708 += 1, R2615 += 1, R2616 += 1 };
  s2 -> s3 [0, 65535] { R2708 += 1, R2616 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s2 -> s4 [0, 65535] { R2708 += 1, R2616 += 1, R189 += 1, R190 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [87, 65535] { R2708 += 1, R2616 += 1, R190 += 1, R192 += 1 };
  s3 -> s1 [0, 75] { R2708 += 1, R2616 += 1, R190 += 1, R192 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s5 [0, 65535] { R2708 += 1 };
  s3 -> s3 [0, 65535] { R2708 += 1, R2616 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s3 -> s7 [0, 65535] { R2708 += 1, R2616 += 1 };
  s3 -> s1 [87, 65535] { R2708 += 1, R2616 += 1, R190 += 1, R192 += 1 };
  s4 -> s1 [0, 75] { R2708 += 1, R2616 += 1, R190 += 1, R192 += 1 };
  s4 -> s5 [0, 65535] { R2708 += 1 };
  s4 -> s3 [0, 65535] { R2708 += 1, R2616 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s4 -> s4 [0, 65535] { R2708 += 1, R2616 += 1, R189 += 1, R190 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s1 [87, 65535] { R2708 += 1, R2616 += 1, R190 += 1, R192 += 1 };
  s5 -> s5 [0, 65535] { R2708 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R2708 += 1 };
  s7 -> s7 [0, 65535] { R2708 += 1, R2616 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R2710 += 1, R2618 += 1 };
  s0 -> s2 [0, 65535] { R2710 += 1, R2617 += 1, R2618 += 1 };
  s0 -> s0 [0, 65535] { R2709 += 1, R2710 += 1 };
  s1 -> s1 [0, 65535] { R2710 += 1, R2618 += 1 };
  s1 -> s4 [0, 65535] { R2710 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R2710 += 1, R2618 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2710 += 1, R2617 += 1, R2618 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2710 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 74] { R2712 += 1, R2620 += 1, R2588 += 1, R2590 += 1 };
  s0 -> s2 [0, 65535] { R2712 += 1, R2620 += 1, R2588 += 1, R2589 += 1, R2590 += 1 };
  s0 -> s0 [0, 65535] { R2711 += 1, R2712 += 1 };
  s0 -> s3 [0, 65535] { R2712 += 1, R2619 += 1, R2620 += 1 };
  s0 -> s4 [0, 65535] { R2712 += 1, R2620 += 1, R2587 += 1, R2588 += 1 };
  s0 -> s5 [75, 75] { R2712 += 1, R2620 += 1, R2588 += 1, R2590 += 1 };
  s0 -> s6 [87, 87] { R2712 += 1, R2620 += 1, R2588 += 1, R2590 += 1 };
  s0 -> s1 [88, 65535] { R2712 += 1, R2620 += 1, R2588 += 1, R2590 += 1 };
  s1 -> s1 [0, 74] { R2712 += 1, R2620 += 1, R2588 += 1, R2590 += 1 };
  s1 -> s5 [75, 75] { R2712 += 1, R2620 += 1, R2588 += 1, R2590 += 1 };
  s1 -> s6 [87, 87] { R2712 += 1, R2620 += 1, R2588 += 1, R2590 += 1 };
  s1 -> s1 [88, 65535] { R2712 += 1, R2620 += 1, R2588 += 1, R2590 += 1 };
  s2 -> s1 [0, 74] { R2712 += 1, R2620 += 1, R2588 += 1, R2590 += 1 };
  s2 -> s2 [0, 65535] { R2712 += 1, R2620 += 1, R2588 += 1, R2589 += 1, R2590 += 1 };
  s2 -> s5 [75, 75] { R2712 += 1, R2620 += 1, R2588 += 1, R2590 += 1 };
  s2 -> s6 [87, 87] { R2712 += 1, R2620 += 1, R2588 += 1, R2590 += 1 };
  s2 -> s1 [88, 65535] { R2712 += 1, R2620 += 1, R2588 += 1, R2590 += 1 };
  s3 -> s1 [0, 74] { R2712 += 1, R2620 += 1, R2588 += 1, R2590 += 1 };
  s3 -> s2 [0, 65535] { R2712 += 1, R2620 += 1, R2588 += 1, R2589 += 1, R2590 += 1 };
  s3 -> s3 [0, 65535] { R2712 += 1, R2619 += 1, R2620 += 1 };
  s3 -> s4 [0, 65535] { R2712 += 1, R2620 += 1, R2587 += 1, R2588 += 1 };
  s3 -> s5 [75, 75] { R2712 += 1, R2620 += 1, R2588 += 1, R2590 += 1 };
  s3 -> s6 [87, 87] { R2712 += 1, R2620 += 1, R2588 += 1, R2590 += 1 };
  s3 -> s1 [88, 65535] { R2712 += 1, R2620 += 1, R2588 += 1, R2590 += 1 };
  s4 -> s1 [0, 74] { R2712 += 1, R2620 += 1, R2588 += 1, R2590 += 1 };
  s4 -> s2 [0, 65535] { R2712 += 1, R2620 += 1, R2588 += 1, R2589 += 1, R2590 += 1 };
  s4 -> s4 [0, 65535] { R2712 += 1, R2620 += 1, R2587 += 1, R2588 += 1 };
  s4 -> s5 [75, 75] { R2712 += 1, R2620 += 1, R2588 += 1, R2590 += 1 };
  s4 -> s6 [87, 87] { R2712 += 1, R2620 += 1, R2588 += 1, R2590 += 1 };
  s4 -> s1 [88, 65535] { R2712 += 1, R2620 += 1, R2588 += 1, R2590 += 1 };
  s5 -> s5 [0, 75] { R2712 += 1, R2620 += 1, R2588 += 1, R2590 += 1 };
  s5 -> s11 [87, 87] { R2712 += 1, R2620 += 1, R2588 += 1, R2590 += 1 };
  s5 -> s5 [88, 65535] { R2712 += 1, R2620 += 1, R2588 += 1, R2590 += 1 };
  s6 -> s6 [0, 74] { R2712 += 1, R2620 += 1, R2588 += 1, R2590 += 1 };
  s6 -> s6 [0, 65535] { R2712 += 1, R2620 += 1, R2588 += 1 };
  s6 -> s7 [0, 65535] { R2712 += 1 };
  s6 -> s8 [0, 65535] { R2712 += 1, R2620 += 1 };
  s6 -> s9 [0, 65535];
  s6 -> s10 [75, 75] { R2712 += 1, R2620 += 1, R2588 += 1, R2590 += 1 };
  s6 -> s11 [75, 75] { R2712 += 1, R2620 += 1, R2588 += 1, R2590 += 1 };
  s6 -> s6 [87, 65535] { R2712 += 1, R2620 += 1, R2588 += 1, R2590 += 1 };
  s7 -> s7 [0, 65535] { R2712 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R2712 += 1, R2620 += 1 };
  s8 -> s7 [0, 65535] { R2712 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R2712 += 1, R2620 += 1, R2588 += 1 };
  s10 -> s8 [0, 65535] { R2712 += 1, R2620 += 1 };
  s10 -> s7 [0, 65535] { R2712 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 75] { R2712 += 1, R2620 += 1, R2588 += 1, R2590 += 1 };
  s11 -> s8 [0, 65535] { R2712 += 1, R2620 += 1 };
  s11 -> s7 [0, 65535] { R2712 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R2712 += 1, R2620 += 1, R2588 += 1 };
  s11 -> s11 [87, 65535] { R2712 += 1, R2620 += 1, R2588 += 1, R2590 += 1 };
  accepting s8, s9, s6, s7, s10, s11;
};
automaton value2_40 {
  init s0;
  s0 -> s0 [0, 65535] { R2713 += 1, R2714 += 1 };
  s0 -> s1 [0, 65535] { R2714 += 1, R2649 += 1, R2650 += 1 };
  s0 -> s2 [0, 65535] { R2714 += 1, R2650 += 1, R23 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2714 += 1, R2649 += 1, R2650 += 1 };
  s1 -> s2 [0, 65535] { R2714 += 1, R2650 += 1, R23 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R2714 += 1 };
  s2 -> s2 [0, 65535] { R2714 += 1, R2650 += 1, R23 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2714 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R2716 += 1, R2652 += 1 };
  s0 -> s0 [0, 65535] { R2715 += 1, R2716 += 1 };
  s0 -> s2 [0, 65535] { R2716 += 1, R2651 += 1, R2652 += 1 };
  s0 -> s3 [70, 70] { R2716 += 1, R2652 += 1 };
  s0 -> s4 [70, 70] { R2716 += 1, R2652 += 1 };
  s0 -> s5 [75, 75] { R2716 += 1, R2652 += 1 };
  s0 -> s1 [76, 65535] { R2716 += 1, R2652 += 1 };
  s1 -> s1 [0, 69] { R2716 += 1, R2652 += 1 };
  s1 -> s3 [70, 70] { R2716 += 1, R2652 += 1 };
  s1 -> s4 [70, 70] { R2716 += 1, R2652 += 1 };
  s1 -> s5 [75, 75] { R2716 += 1, R2652 += 1 };
  s1 -> s1 [76, 65535] { R2716 += 1, R2652 += 1 };
  s2 -> s1 [0, 69] { R2716 += 1, R2652 += 1 };
  s2 -> s2 [0, 65535] { R2716 += 1, R2651 += 1, R2652 += 1 };
  s2 -> s3 [70, 70] { R2716 += 1, R2652 += 1 };
  s2 -> s4 [70, 70] { R2716 += 1, R2652 += 1 };
  s2 -> s5 [75, 75] { R2716 += 1, R2652 += 1 };
  s2 -> s1 [76, 65535] { R2716 += 1, R2652 += 1 };
  s4 -> s4 [0, 70] { R2716 += 1, R2652 += 1 };
  s4 -> s8 [75, 75] { R2716 += 1, R2652 += 1 };
  s4 -> s4 [76, 65535] { R2716 += 1, R2652 += 1 };
  s5 -> s5 [0, 69] { R2716 += 1, R2652 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R2716 += 1 };
  s5 -> s7 [70, 70] { R2716 += 1, R2652 += 1 };
  s5 -> s8 [70, 70] { R2716 += 1, R2652 += 1 };
  s5 -> s5 [75, 65535] { R2716 += 1, R2652 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2716 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 70] { R2716 += 1, R2652 += 1 };
  s8 -> s8 [0, 65535] { R2716 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [75, 65535] { R2716 += 1, R2652 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R2718 += 1, R2654 += 1, R137 += 1 };
  s0 -> s2 [0, 65535] { R2718 += 1, R2653 += 1, R2654 += 1 };
  s0 -> s0 [0, 65535] { R2717 += 1, R2718 += 1 };
  s0 -> s3 [70, 70] { R2718 += 1, R2654 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R2718 += 1, R2654 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R2718 += 1, R2654 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R2718 += 1, R2654 += 1, R137 += 1 };
  s1 -> s1 [0, 65535] { R2718 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R2718 += 1, R2654 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R2718 += 1, R2654 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R2718 += 1, R2654 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R2718 += 1, R2654 += 1, R137 += 1 };
  s2 -> s2 [0, 65535] { R2718 += 1, R2653 += 1, R2654 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R2718 += 1, R2654 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R2718 += 1, R2654 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R2718 += 1, R2654 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R2718 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R2718 += 1 };
  s4 -> s4 [0, 65535] { R2718 += 1, R2654 += 1, R137 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R2718 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R2720 += 1, R2656 += 1, R139 += 1 };
  s0 -> s2 [0, 65535] { R2720 += 1, R2655 += 1, R2656 += 1 };
  s0 -> s0 [0, 65535] { R2719 += 1, R2720 += 1 };
  s0 -> s3 [70, 70] { R2720 += 1, R2656 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R2720 += 1, R2656 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R2720 += 1, R2656 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R2720 += 1, R2656 += 1, R139 += 1 };
  s1 -> s1 [0, 65535] { R2720 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R2720 += 1, R2656 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R2720 += 1, R2656 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R2720 += 1, R2656 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R2720 += 1, R2656 += 1, R139 += 1 };
  s2 -> s2 [0, 65535] { R2720 += 1, R2655 += 1, R2656 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R2720 += 1, R2656 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R2720 += 1, R2656 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R2720 += 1, R2656 += 1, R139 += 1 };
  s3 -> s3 [0, 65535] { R2720 += 1, R2656 += 1, R139 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R2720 += 1 };
  s4 -> s4 [0, 65535] { R2720 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2720 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R2722 += 1, R2658 += 1, R141 += 1, R142 += 1 };
  s0 -> s2 [0, 65535] { R2722 += 1, R2657 += 1, R2658 += 1 };
  s0 -> s0 [0, 65535] { R2721 += 1, R2722 += 1 };
  s0 -> s3 [70, 70] { R2722 += 1, R2658 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R2722 += 1, R2658 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R2722 += 1, R2658 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R2722 += 1, R2658 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 65535] { R2722 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R2722 += 1, R2658 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R2722 += 1, R2658 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R2722 += 1, R2658 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R2722 += 1, R2658 += 1, R141 += 1, R142 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2722 += 1, R2657 += 1, R2658 += 1 };
  s2 -> s3 [70, 70] { R2722 += 1, R2658 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R2722 += 1, R2658 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R2722 += 1, R2658 += 1, R141 += 1, R142 += 1 };
  s3 -> s6 [0, 65535] { R2722 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2722 += 1, R2658 += 1, R141 += 1, R142 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2722 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2722 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R2724 += 1, R2660 += 1, R147 += 1, R148 += 1 };
  s0 -> s2 [0, 65535] { R2724 += 1, R2659 += 1, R2660 += 1 };
  s0 -> s0 [0, 65535] { R2723 += 1, R2724 += 1 };
  s0 -> s3 [70, 70] { R2724 += 1, R2660 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R2724 += 1, R2660 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R2724 += 1, R2660 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R2724 += 1, R2660 += 1, R147 += 1, R148 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2724 += 1 };
  s1 -> s3 [70, 70] { R2724 += 1, R2660 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R2724 += 1, R2660 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R2724 += 1, R2660 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R2724 += 1, R2660 += 1, R147 += 1, R148 += 1 };
  s2 -> s2 [0, 65535] { R2724 += 1, R2659 += 1, R2660 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R2724 += 1, R2660 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R2724 += 1, R2660 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R2724 += 1, R2660 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R2724 += 1, R2660 += 1, R147 += 1, R148 += 1 };
  s3 -> s6 [0, 65535] { R2724 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2724 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2724 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R2726 += 1, R2662 += 1, R151 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R2726 += 1, R2662 += 1, R152 += 1 };
  s0 -> s3 [0, 65535] { R2726 += 1, R2661 += 1, R2662 += 1 };
  s0 -> s0 [0, 65535] { R2725 += 1, R2726 += 1 };
  s0 -> s4 [70, 70] { R2726 += 1, R2662 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R2726 += 1, R2662 += 1, R151 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R2726 += 1, R2662 += 1, R151 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R2726 += 1, R2662 += 1, R152 += 1 };
  s0 -> s2 [71, 74] { R2726 += 1, R2662 += 1, R152 += 1 };
  s0 -> s1 [71, 65535] { R2726 += 1, R2662 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R2726 += 1, R2662 += 1, R152 += 1 };
  s0 -> s2 [76, 65535] { R2726 += 1, R2662 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R2726 += 1, R2662 += 1, R151 += 1, R152 += 1 };
  s1 -> s2 [0, 69] { R2726 += 1, R2662 += 1, R152 += 1 };
  s1 -> s4 [70, 70] { R2726 += 1, R2662 += 1, R152 += 1 };
  s1 -> s5 [70, 70] { R2726 += 1, R2662 += 1, R151 += 1, R152 += 1 };
  s1 -> s6 [70, 70] { R2726 += 1, R2662 += 1, R151 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R2726 += 1, R2662 += 1, R152 += 1 };
  s1 -> s2 [71, 74] { R2726 += 1, R2662 += 1, R152 += 1 };
  s1 -> s1 [71, 65535] { R2726 += 1, R2662 += 1, R151 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R2726 += 1, R2662 += 1, R152 += 1 };
  s1 -> s2 [76, 65535] { R2726 += 1, R2662 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R2726 += 1, R2662 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R2726 += 1, R2662 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R2726 += 1, R2662 += 1, R152 += 1 };
  s2 -> s2 [71, 74] { R2726 += 1, R2662 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R2726 += 1, R2662 += 1, R152 += 1 };
  s2 -> s2 [76, 65535] { R2726 += 1, R2662 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R2726 += 1, R2662 += 1, R151 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R2726 += 1, R2662 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R2726 += 1, R2661 += 1, R2662 += 1 };
  s3 -> s4 [70, 70] { R2726 += 1, R2662 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R2726 += 1, R2662 += 1, R151 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R2726 += 1, R2662 += 1, R151 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R2726 += 1, R2662 += 1, R152 += 1 };
  s3 -> s2 [71, 74] { R2726 += 1, R2662 += 1, R152 += 1 };
  s3 -> s1 [71, 65535] { R2726 += 1, R2662 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R2726 += 1, R2662 += 1, R152 += 1 };
  s3 -> s2 [76, 65535] { R2726 += 1, R2662 += 1, R152 += 1 };
  s4 -> s4 [0, 74] { R2726 += 1, R2662 += 1, R152 += 1 };
  s4 -> s10 [75, 75] { R2726 += 1, R2662 += 1, R152 += 1 };
  s4 -> s4 [76, 65535] { R2726 += 1, R2662 += 1, R152 += 1 };
  s5 -> s4 [0, 74] { R2726 += 1, R2662 += 1, R152 += 1 };
  s5 -> s5 [0, 65535] { R2726 += 1, R2662 += 1, R151 += 1, R152 += 1 };
  s5 -> s10 [75, 75] { R2726 += 1, R2662 += 1, R152 += 1 };
  s5 -> s4 [76, 65535] { R2726 += 1, R2662 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R2726 += 1, R2662 += 1, R152 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R2726 += 1 };
  s8 -> s10 [70, 70] { R2726 += 1, R2662 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R2726 += 1, R2662 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R2726 += 1, R2662 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s12 [0, 65535] { R2726 += 1 };
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R2726 += 1, R2662 += 1, R152 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R2726 += 1 };
  s12 -> s12 [0, 65535] { R2726 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R2728 += 1, R2664 += 1, R155 += 1, R156 += 1 };
  s0 -> s2 [0, 65535] { R2728 += 1, R2663 += 1, R2664 += 1 };
  s0 -> s0 [0, 65535] { R2727 += 1, R2728 += 1 };
  s0 -> s3 [70, 70] { R2728 += 1, R2664 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R2728 += 1, R2664 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R2728 += 1, R2664 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R2728 += 1, R2664 += 1, R155 += 1, R156 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2728 += 1 };
  s1 -> s3 [70, 70] { R2728 += 1, R2664 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R2728 += 1, R2664 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R2728 += 1, R2664 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R2728 += 1, R2664 += 1, R155 += 1, R156 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2728 += 1, R2663 += 1, R2664 += 1 };
  s2 -> s3 [70, 70] { R2728 += 1, R2664 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R2728 += 1, R2664 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R2728 += 1, R2664 += 1, R155 += 1, R156 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2728 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2728 += 1, R2664 += 1, R155 += 1, R156 += 1 };
  s4 -> s6 [0, 65535] { R2728 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2728 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R2730 += 1, R2666 += 1, R161 += 1, R162 += 1 };
  s0 -> s2 [0, 65535] { R2730 += 1, R2665 += 1, R2666 += 1 };
  s0 -> s0 [0, 65535] { R2729 += 1, R2730 += 1 };
  s0 -> s3 [70, 70] { R2730 += 1, R2666 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R2730 += 1, R2666 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R2730 += 1, R2666 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R2730 += 1, R2666 += 1, R161 += 1, R162 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2730 += 1 };
  s1 -> s3 [70, 70] { R2730 += 1, R2666 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R2730 += 1, R2666 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R2730 += 1, R2666 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R2730 += 1, R2666 += 1, R161 += 1, R162 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2730 += 1, R2665 += 1, R2666 += 1 };
  s2 -> s3 [70, 70] { R2730 += 1, R2666 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R2730 += 1, R2666 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R2730 += 1, R2666 += 1, R161 += 1, R162 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R2730 += 1 };
  s3 -> s3 [0, 65535] { R2730 += 1, R2666 += 1, R161 += 1, R162 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2730 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2730 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R2732 += 1, R2668 += 1, R167 += 1, R168 += 1 };
  s0 -> s2 [0, 65535] { R2732 += 1, R2667 += 1, R2668 += 1 };
  s0 -> s0 [0, 65535] { R2731 += 1, R2732 += 1 };
  s0 -> s3 [70, 70] { R2732 += 1, R2668 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R2732 += 1, R2668 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R2732 += 1, R2668 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R2732 += 1, R2668 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 65535] { R2732 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R2732 += 1, R2668 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R2732 += 1, R2668 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R2732 += 1, R2668 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R2732 += 1, R2668 += 1, R167 += 1, R168 += 1 };
  s2 -> s2 [0, 65535] { R2732 += 1, R2667 += 1, R2668 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R2732 += 1, R2668 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R2732 += 1, R2668 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R2732 += 1, R2668 += 1, R167 += 1, R168 += 1 };
  s3 -> s3 [0, 65535] { R2732 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R2732 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2732 += 1, R2668 += 1, R167 += 1, R168 += 1 };
  s5 -> s5 [0, 65535] { R2732 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R2734 += 1, R2670 += 1, R175 += 1, R176 += 1 };
  s0 -> s2 [0, 69] { R2734 += 1, R2670 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s3 [0, 65535] { R2734 += 1, R2669 += 1, R2670 += 1 };
  s0 -> s0 [0, 65535] { R2733 += 1, R2734 += 1 };
  s0 -> s4 [70, 70] { R2734 += 1, R2670 += 1, R175 += 1, R176 += 1 };
  s0 -> s5 [70, 70] { R2734 += 1, R2670 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s6 [70, 70] { R2734 += 1, R2670 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s7 [70, 70] { R2734 += 1, R2670 += 1, R175 += 1, R176 += 1 };
  s0 -> s1 [71, 65535] { R2734 += 1, R2670 += 1, R175 += 1, R176 += 1 };
  s0 -> s2 [71, 65535] { R2734 += 1, R2670 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s1 [0, 69] { R2734 += 1, R2670 += 1, R175 += 1, R176 += 1 };
  s1 -> s2 [0, 69] { R2734 += 1, R2670 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s4 [70, 70] { R2734 += 1, R2670 += 1, R175 += 1, R176 += 1 };
  s1 -> s5 [70, 70] { R2734 += 1, R2670 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s6 [70, 70] { R2734 += 1, R2670 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s7 [70, 70] { R2734 += 1, R2670 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [71, 65535] { R2734 += 1, R2670 += 1, R175 += 1, R176 += 1 };
  s1 -> s2 [71, 65535] { R2734 += 1, R2670 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s2 [0, 69] { R2734 += 1, R2670 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s2 [0, 65535] { R2734 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s5 [70, 70] { R2734 += 1, R2670 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s6 [70, 70] { R2734 += 1, R2670 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s2 [71, 65535] { R2734 += 1, R2670 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s1 [0, 69] { R2734 += 1, R2670 += 1, R175 += 1, R176 += 1 };
  s3 -> s2 [0, 69] { R2734 += 1, R2670 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s3 [0, 65535] { R2734 += 1, R2669 += 1, R2670 += 1 };
  s3 -> s4 [70, 70] { R2734 += 1, R2670 += 1, R175 += 1, R176 += 1 };
  s3 -> s5 [70, 70] { R2734 += 1, R2670 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s6 [70, 70] { R2734 += 1, R2670 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s7 [70, 70] { R2734 += 1, R2670 += 1, R175 += 1, R176 += 1 };
  s3 -> s1 [71, 65535] { R2734 += 1, R2670 += 1, R175 += 1, R176 += 1 };
  s3 -> s2 [71, 65535] { R2734 += 1, R2670 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s4 [0, 65535] { R2734 += 1, R2670 += 1, R175 += 1, R176 += 1 };
  s4 -> s5 [0, 65535] { R2734 += 1, R2670 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s5 -> s5 [0, 65535] { R2734 += 1, R2670 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s5 -> s9 [0, 65535] { R2734 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R2734 += 1 };
  s6 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R2734 += 1 };
  s9 -> s8 [0, 65535];
  accepting s8, s5, s2, s9, s6;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R2736 += 1, R2672 += 1, R185 += 1, R186 += 1 };
  s0 -> s2 [0, 65535] { R2736 += 1, R2671 += 1, R2672 += 1 };
  s0 -> s0 [0, 65535] { R2735 += 1, R2736 += 1 };
  s0 -> s3 [70, 70] { R2736 += 1, R2672 += 1, R185 += 1, R186 += 1 };
  s0 -> s4 [70, 70] { R2736 += 1, R2672 += 1, R185 += 1, R186 += 1 };
  s0 -> s1 [71, 65535] { R2736 += 1, R2672 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 69] { R2736 += 1, R2672 += 1, R185 += 1, R186 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2736 += 1 };
  s1 -> s3 [70, 70] { R2736 += 1, R2672 += 1, R185 += 1, R186 += 1 };
  s1 -> s4 [70, 70] { R2736 += 1, R2672 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [71, 65535] { R2736 += 1, R2672 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [0, 69] { R2736 += 1, R2672 += 1, R185 += 1, R186 += 1 };
  s2 -> s2 [0, 65535] { R2736 += 1, R2671 += 1, R2672 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R2736 += 1, R2672 += 1, R185 += 1, R186 += 1 };
  s2 -> s4 [70, 70] { R2736 += 1, R2672 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [71, 65535] { R2736 += 1, R2672 += 1, R185 += 1, R186 += 1 };
  s3 -> s3 [0, 65535] { R2736 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2736 += 1, R2672 += 1, R185 += 1, R186 += 1 };
  s4 -> s6 [0, 65535] { R2736 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2736 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R2738 += 1, R2674 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s0 -> s2 [0, 69] { R2738 += 1, R2674 += 1, R1467 += 1, R1468 += 1 };
  s0 -> s3 [0, 69] { R2738 += 1, R2674 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s0 -> s4 [0, 65535] { R2738 += 1, R2673 += 1, R2674 += 1 };
  s0 -> s0 [0, 65535] { R2737 += 1, R2738 += 1 };
  s0 -> s5 [70, 70] { R2738 += 1, R2674 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s0 -> s6 [70, 70] { R2738 += 1, R2674 += 1, R1467 += 1, R1468 += 1 };
  s0 -> s7 [70, 70] { R2738 += 1, R2674 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s0 -> s8 [70, 70] { R2738 += 1, R2674 += 1, R1467 += 1, R1468 += 1 };
  s0 -> s9 [70, 70] { R2738 += 1, R2674 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s0 -> s10 [70, 70] { R2738 += 1, R2674 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s0 -> s1 [71, 65535] { R2738 += 1, R2674 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s0 -> s2 [71, 65535] { R2738 += 1, R2674 += 1, R1467 += 1, R1468 += 1 };
  s0 -> s3 [71, 65535] { R2738 += 1, R2674 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s1 -> s1 [0, 69] { R2738 += 1, R2674 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s1 -> s17 [0, 69] { R2738 += 1, R2674 += 1, R1468 += 1 };
  s1 -> s15 [0, 69] { R2738 += 1, R2674 += 1 };
  s1 -> s11 [70, 70] { R2738 += 1, R2674 += 1, R1468 += 1 };
  s1 -> s16 [70, 70] { R2738 += 1, R2674 += 1 };
  s1 -> s12 [70, 70] { R2738 += 1, R2674 += 1 };
  s1 -> s10 [70, 70] { R2738 += 1, R2674 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s1 -> s18 [70, 70] { R2738 += 1, R2674 += 1, R1468 += 1 };
  s1 -> s9 [70, 70] { R2738 += 1, R2674 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s1 -> s1 [71, 65535] { R2738 += 1, R2674 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s1 -> s17 [71, 65535] { R2738 += 1, R2674 += 1, R1468 += 1 };
  s1 -> s15 [71, 65535] { R2738 += 1, R2674 += 1 };
  s2 -> s1 [0, 69] { R2738 += 1, R2674 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s2 -> s2 [0, 69] { R2738 += 1, R2674 += 1, R1467 += 1, R1468 += 1 };
  s2 -> s3 [0, 69] { R2738 += 1, R2674 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s2 -> s5 [70, 70] { R2738 += 1, R2674 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s2 -> s6 [70, 70] { R2738 += 1, R2674 += 1, R1467 += 1, R1468 += 1 };
  s2 -> s7 [70, 70] { R2738 += 1, R2674 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s2 -> s8 [70, 70] { R2738 += 1, R2674 += 1, R1467 += 1, R1468 += 1 };
  s2 -> s9 [70, 70] { R2738 += 1, R2674 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s2 -> s10 [70, 70] { R2738 += 1, R2674 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s2 -> s1 [71, 65535] { R2738 += 1, R2674 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s2 -> s2 [71, 65535] { R2738 += 1, R2674 += 1, R1467 += 1, R1468 += 1 };
  s2 -> s3 [71, 65535] { R2738 += 1, R2674 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s3 -> s1 [0, 69] { R2738 += 1, R2674 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s3 -> s3 [0, 69] { R2738 += 1, R2674 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s3 -> s15 [0, 69] { R2738 += 1, R2674 += 1 };
  s3 -> s5 [70, 70] { R2738 += 1, R2674 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s3 -> s16 [70, 70] { R2738 += 1, R2674 += 1 };
  s3 -> s12 [70, 70] { R2738 += 1, R2674 += 1 };
  s3 -> s7 [70, 70] { R2738 += 1, R2674 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s3 -> s10 [70, 70] { R2738 += 1, R2674 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s3 -> s9 [70, 70] { R2738 += 1, R2674 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s3 -> s1 [71, 65535] { R2738 += 1, R2674 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s3 -> s3 [71, 65535] { R2738 += 1, R2674 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s3 -> s15 [71, 65535] { R2738 += 1, R2674 += 1 };
  s4 -> s1 [0, 69] { R2738 += 1, R2674 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s4 -> s2 [0, 69] { R2738 += 1, R2674 += 1, R1467 += 1, R1468 += 1 };
  s4 -> s3 [0, 69] { R2738 += 1, R2674 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s4 -> s4 [0, 65535] { R2738 += 1, R2673 += 1, R2674 += 1 };
  s4 -> s5 [70, 70] { R2738 += 1, R2674 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s4 -> s6 [70, 70] { R2738 += 1, R2674 += 1, R1467 += 1, R1468 += 1 };
  s4 -> s7 [70, 70] { R2738 += 1, R2674 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s4 -> s8 [70, 70] { R2738 += 1, R2674 += 1, R1467 += 1, R1468 += 1 };
  s4 -> s9 [70, 70] { R2738 += 1, R2674 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s4 -> s10 [70, 70] { R2738 += 1, R2674 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s4 -> s1 [71, 65535] { R2738 += 1, R2674 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s4 -> s2 [71, 65535] { R2738 += 1, R2674 += 1, R1467 += 1, R1468 += 1 };
  s4 -> s3 [71, 65535] { R2738 += 1, R2674 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s5 -> s5 [0, 65535] { R2738 += 1, R2674 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s5 -> s12 [0, 65535] { R2738 += 1, R2674 += 1 };
  s5 -> s10 [0, 65535] { R2738 += 1, R2674 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s8 -> s5 [0, 65535] { R2738 += 1, R2674 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s8 -> s8 [0, 65535] { R2738 += 1, R2674 += 1, R1467 += 1, R1468 += 1 };
  s8 -> s10 [0, 65535] { R2738 += 1, R2674 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s10 -> s11 [0, 65535] { R2738 += 1, R2674 += 1, R1468 += 1 };
  s10 -> s12 [0, 65535] { R2738 += 1, R2674 += 1 };
  s10 -> s10 [0, 65535] { R2738 += 1, R2674 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s11 -> s11 [0, 65535] { R2738 += 1, R2674 += 1, R1468 += 1 };
  s11 -> s12 [0, 65535] { R2738 += 1, R2674 += 1 };
  s12 -> s13 [0, 65535] { R2738 += 1 };
  s12 -> s14 [0, 65535];
  s12 -> s12 [0, 65535] { R2738 += 1, R2674 += 1 };
  s13 -> s13 [0, 65535] { R2738 += 1 };
  s13 -> s14 [0, 65535];
  s14 -> s14 [0, 65535];
  s15 -> s15 [0, 69] { R2738 += 1, R2674 += 1 };
  s15 -> s14 [0, 65535];
  s15 -> s15 [0, 65535] { R2738 += 1 };
  s15 -> s16 [70, 70] { R2738 += 1, R2674 += 1 };
  s15 -> s12 [70, 70] { R2738 += 1, R2674 += 1 };
  s15 -> s15 [71, 65535] { R2738 += 1, R2674 += 1 };
  s16 -> s14 [0, 65535];
  s16 -> s16 [0, 65535] { R2738 += 1 };
  s17 -> s17 [0, 69] { R2738 += 1, R2674 += 1, R1468 += 1 };
  s17 -> s15 [0, 69] { R2738 += 1, R2674 += 1 };
  s17 -> s11 [70, 70] { R2738 += 1, R2674 += 1, R1468 += 1 };
  s17 -> s16 [70, 70] { R2738 += 1, R2674 += 1 };
  s17 -> s12 [70, 70] { R2738 += 1, R2674 += 1 };
  s17 -> s18 [70, 70] { R2738 += 1, R2674 += 1, R1468 += 1 };
  s17 -> s17 [71, 65535] { R2738 += 1, R2674 += 1, R1468 += 1 };
  s17 -> s15 [71, 65535] { R2738 += 1, R2674 += 1 };
  accepting s16, s12, s13, s14, s15;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R2740 += 1, R2676 += 1, R2583 += 1, R2584 += 1 };
  s0 -> s0 [0, 65535] { R2739 += 1, R2740 += 1 };
  s0 -> s2 [0, 65535] { R2740 += 1, R2675 += 1, R2676 += 1 };
  s0 -> s3 [70, 70] { R2740 += 1, R2676 += 1, R2583 += 1, R2584 += 1 };
  s0 -> s4 [70, 70] { R2740 += 1, R2676 += 1, R2583 += 1, R2584 += 1 };
  s0 -> s1 [71, 65535] { R2740 += 1, R2676 += 1, R2583 += 1, R2584 += 1 };
  s1 -> s1 [0, 69] { R2740 += 1, R2676 += 1, R2583 += 1, R2584 += 1 };
  s1 -> s1 [0, 65535] { R2740 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R2740 += 1, R2676 += 1, R2583 += 1, R2584 += 1 };
  s1 -> s4 [70, 70] { R2740 += 1, R2676 += 1, R2583 += 1, R2584 += 1 };
  s1 -> s1 [71, 65535] { R2740 += 1, R2676 += 1, R2583 += 1, R2584 += 1 };
  s2 -> s1 [0, 69] { R2740 += 1, R2676 += 1, R2583 += 1, R2584 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R2740 += 1, R2675 += 1, R2676 += 1 };
  s2 -> s3 [70, 70] { R2740 += 1, R2676 += 1, R2583 += 1, R2584 += 1 };
  s2 -> s4 [70, 70] { R2740 += 1, R2676 += 1, R2583 += 1, R2584 += 1 };
  s2 -> s1 [71, 65535] { R2740 += 1, R2676 += 1, R2583 += 1, R2584 += 1 };
  s3 -> s3 [0, 65535] { R2740 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R2740 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2740 += 1, R2676 += 1, R2583 += 1, R2584 += 1 };
  s5 -> s5 [0, 65535] { R2740 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
constraint R2 = R2620 && R3 = R2740 && R25 - R2740 = -1 && R26 = R2740 && R27 - R2740 = -1 && R28 = R2740 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R2588 + -1*R2584 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R2588 + -1*R2584 - R130 = 0 && R129 + R2587 + R2583 = 0 && R131 + R2589 + R2585 = 0 && R132 + R2590 + R2586 = 0 && R2619 = 0 && R2651 = 0 && R2652 = 0 && R2661 = 0 && R2662 = 0 && R2669 = 0 && R2670 = 0 && R2673 = 0 && R2674 = 0 && R2677 = 0 && R2678 = R2740 && R2679 = 0 && R2680 = R2740 && R2681 = 0 && R2682 = R2740 && R2683 = 0 && R2684 = R2740 && R2685 = 0 && R2686 = R2740 && R2687 = 0 && R2688 = R2740 && R2689 = 0 && R2690 = R2740 && R2691 = 0 && R2692 = R2740 && R2693 = 0 && R2694 = R2740 && R2695 = 0 && R2696 = R2740 && R2697 = 0 && R2698 = R2740 && R2699 = 0 && R2700 = R2740 && R2701 = 0 && R2702 = R2740 && R2703 = 0 && R2704 = R2740 && R2705 = 0 && R2706 = R2740 && R2707 = 0 && R2708 = R2740 && R2709 = 0 && R2710 = R2740 && R2711 = 0 && R2712 = R2740 && R2713 = 0 && R2714 = R2740 && R2715 = 0 && R2716 = R2740 && R2717 = 0 && R2718 = R2740 && R2719 = 0 && R2720 = R2740 && R2721 = 0 && R2722 = R2740 && R2723 = 0 && R2724 = R2740 && R2725 = 0 && R2726 = R2740 && R2727 = 0 && R2728 = R2740 && R2729 = 0 && R2730 = R2740 && R2731 = 0 && R2732 = R2740 && R2733 = 0 && R2734 = R2740 && R2735 = 0 && R2736 = R2740 && R2737 = 0 && R2738 = R2740 && R2739 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R2588 + -1*R2584 - R130 < 1 && -1 < R2620 && 0 < R2740 && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R2588 + -1*R2584 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R191 + R187 = 0 && R114 + R192 + R188 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R2588 + -1*R2584 - R130 = 0 || R130 + R2588 + R2584 < 1) && (R81 + R158 + R155 = 0 || R130 + R2588 + R2584 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R2588 + -1*R2584 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R2588 + R2584 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R2588 + -1*R2584 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R2588 + R2584 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R2588 + -1*R2584 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R2588 + R2584 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 != 0 || R112 + R190 + R186 + -1*R2588 + -1*R2584 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R2588 + R2584 = 0)) && (R113 + R191 + R187 != 0 || R83 + R160 + R157 + -1*R192 + -1*R188 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R1472 + R1467 != 0 || R120 + R1473 + R1468 + -1*R2588 + -1*R2584 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R2588 + R2584 = 0)) && (R2591 != 0 || R2592 = R2620 || (R22 = 0 && R2620 = 0)) && (R2593 != 0 || R2594 = R2620 || (R22 = 0 && R2620 = 0)) && (R2595 != 0 || R2596 = R2620 || (R22 = 0 && R2620 = 0)) && (R2597 != 0 || R2598 = R2620 || (R22 = 0 && R2620 = 0)) && (R2599 != 0 || R2600 = R2620 || (R22 = 0 && R2620 = 0)) && (R2601 != 0 || R2602 = R2620 || (R22 = 0 && R2620 = 0)) && (R2603 != 0 || R2604 = R2620 || (R22 = 0 && R2620 = 0)) && (R2605 != 0 || R2606 = R2620 || (R22 = 0 && R2620 = 0)) && (R2607 != 0 || R2608 = R2620 || (R22 = 0 && R2620 = 0)) && (R2609 != 0 || R2610 = R2620 || (R22 = 0 && R2620 = 0)) && (R2611 != 0 || R2612 = R2620 || (R22 = 0 && R2620 = 0)) && (R2613 != 0 || R2614 = R2620 || (R22 = 0 && R2620 = 0)) && (R2615 != 0 || R2616 = R2620 || (R22 = 0 && R2620 = 0)) && (R2617 != 0 || R2618 = R2620 || (R22 = 0 && R2620 = 0)) && (R23 = 0 || (R2649 = 0 && R2650 = 0)) && (R23 = 0 || (R2653 = 0 && R2654 = 0)) && (R23 = 0 || (R2655 = 0 && R2656 = 0)) && (R23 = 0 || (R2657 = 0 && R2658 = 0)) && (R23 = 0 || (R2659 = 0 && R2660 = 0)) && (R23 = 0 || (R2663 = 0 && R2664 = 0)) && (R23 = 0 || (R2665 = 0 && R2666 = 0)) && (R23 = 0 || (R2667 = 0 && R2668 = 0)) && (R23 = 0 || (R2671 = 0 && R2672 = 0)) && (R23 = 0 || (R2675 = 0 && R2676 = 0)) && (R24 = 0 || (R2621 = 0 && R2622 = 0)) && (R24 = 0 || (R2623 = 0 && R2624 = 0)) && (R24 = 0 || (R2625 = 0 && R2626 = 0)) && (R24 = 0 || (R2627 = 0 && R2628 = 0)) && (R24 = 0 || (R2629 = 0 && R2630 = 0)) && (R24 = 0 || (R2631 = 0 && R2632 = 0)) && (R24 = 0 || (R2633 = 0 && R2634 = 0)) && (R24 = 0 || (R2635 = 0 && R2636 = 0)) && (R24 = 0 || (R2637 = 0 && R2638 = 0)) && (R24 = 0 || (R2639 = 0 && R2640 = 0)) && (R24 = 0 || (R2641 = 0 && R2642 = 0)) && (R24 = 0 || (R2643 = 0 && R2644 = 0)) && (R24 = 0 || (R2645 = 0 && R2646 = 0)) && (R24 = 0 || (R2647 = 0 && R2648 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R2588 + R2584 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R2588 + R2584 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R2588 + R2584 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 = 0 || (R83 + R160 + R157 = 0 && R130 + R2588 + R2584 = 0)) && (R113 + R191 + R187 = 0 || R83 + R160 + R157 < 1) && (R119 + R1472 + R1467 = 0 || (R83 + R160 + R157 = 0 && R130 + R2588 + R2584 = 0)) && (R123 + R1476 + R1471 = 0 || (R121 + R1474 + R1469 = 0 && R122 + R1475 + R1470 = 0)) && (R2591 = 0 || (R22 = 0 && R2620 = 0)) && (R2593 = 0 || (R22 = 0 && R2620 = 0)) && (R2595 = 0 || (R22 = 0 && R2620 = 0)) && (R2597 = 0 || (R22 = 0 && R2620 = 0)) && (R2599 = 0 || (R22 = 0 && R2620 = 0)) && (R2601 = 0 || (R22 = 0 && R2620 = 0)) && (R2603 = 0 || (R22 = 0 && R2620 = 0)) && (R2605 = 0 || (R22 = 0 && R2620 = 0)) && (R2607 = 0 || (R22 = 0 && R2620 = 0)) && (R2609 = 0 || (R22 = 0 && R2620 = 0)) && (R2611 = 0 || (R22 = 0 && R2620 = 0)) && (R2613 = 0 || (R22 = 0 && R2620 = 0)) && (R2615 = 0 || (R22 = 0 && R2620 = 0)) && (R2617 = 0 || (R22 = 0 && R2620 = 0));
// End of Parikh automata intersection problem
