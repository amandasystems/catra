// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R10393, R10394, R10395, R10396, R10397, R10398, R10399, R104, R10400, R10401, R10402, R105, R10719, R10720, R10721, R10722, R10723, R10724, R10725, R10726, R10727, R10728, R10729, R10730, R10731, R10732, R10733, R10734, R10735, R10736, R10737, R10738, R10739, R10740, R10741, R10742, R10743, R10744, R10745, R10746, R10747, R10748, R10749, R10750, R10751, R10752, R10753, R10754, R10755, R10756, R10757, R10758, R10759, R10760, R10761, R10762, R10763, R10764, R10765, R10766, R10767, R10768, R10769, R10770, R10771, R10772, R10773, R10774, R10775, R10776, R10777, R10778, R10779, R10780, R10781, R10782, R10783, R10784, R10785, R10786, R10787, R10788, R10789, R10790, R10791, R10792, R10793, R10794, R10795, R10796, R10797, R10798, R10799, R10800, R10801, R10802, R10803, R10804, R10805, R10806, R10807, R10808, R10809, R10810, R10811, R10812, R10813, R10814, R10815, R10816, R10817, R10818, R10819, R10820, R10821, R10822, R10823, R10824, R10825, R10826, R10827, R10828, R10829, R10830, R10831, R10832, R10833, R10834, R10835, R10836, R10837, R10838, R10839, R10840, R10841, R10842, R10843, R10844, R10845, R10846, R10847, R10848, R10849, R10850, R10851, R10852, R10853, R10854, R10855, R10856, R10857, R10858, R10859, R10860, R10861, R10862, R10863, R10864, R10865, R10866, R10867, R10868, R10869, R10870, R10871, R10872, R10873, R10874, R10875, R10876, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R2, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R5, R63, R65, R6563, R6564, R6565, R6566, R6567, R6568, R6569, R6570, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R30 += 1 };
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R10758 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R10757 += 1, R10758 += 1 };
  s1 -> s1 [0, 65535] { R10758 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R10760 += 1 };
  s0 -> s0 [0, 65535] { R10759 += 1, R10760 += 1 };
  s0 -> s2 [70, 70] { R10760 += 1 };
  s0 -> s3 [70, 70] { R10760 += 1 };
  s0 -> s1 [76, 65535] { R10760 += 1 };
  s1 -> s1 [0, 69] { R10760 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10760 += 1 };
  s1 -> s3 [70, 70] { R10760 += 1 };
  s1 -> s1 [76, 65535] { R10760 += 1 };
  s2 -> s2 [0, 70] { R10760 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R10760 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R10762 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R10761 += 1, R10762 += 1 };
  s0 -> s2 [70, 70] { R10762 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R10762 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R10762 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R10762 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10762 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R10762 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R10762 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R10762 += 1, R63 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R10764 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R10763 += 1, R10764 += 1 };
  s0 -> s2 [70, 70] { R10764 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R10764 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R10764 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R10764 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10764 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R10764 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R10764 += 1, R65 += 1 };
  s2 -> s2 [0, 65535] { R10764 += 1, R65 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R10766 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R10765 += 1, R10766 += 1 };
  s0 -> s2 [70, 70] { R10766 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R10766 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R10766 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R10766 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10766 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R10766 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R10766 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R10766 += 1, R67 += 1, R68 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R10768 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R10767 += 1, R10768 += 1 };
  s0 -> s2 [70, 70] { R10768 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R10768 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R10768 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R10768 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10768 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R10768 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R10768 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R10768 += 1, R73 += 1, R74 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R10770 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R10769 += 1, R10770 += 1 };
  s0 -> s2 [70, 70] { R10770 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R10770 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R10770 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R10770 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10770 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R10770 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R10770 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535] { R10770 += 1, R77 += 1, R78 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R10772 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R10771 += 1, R10772 += 1 };
  s0 -> s2 [70, 70] { R10772 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R10772 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R10772 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R10772 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10772 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R10772 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R10772 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535] { R10772 += 1, R81 += 1, R82 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R10774 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R10773 += 1, R10774 += 1 };
  s0 -> s2 [70, 70] { R10774 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R10774 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R10774 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R10774 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10774 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R10774 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R10774 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535] { R10774 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R10776 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R10775 += 1, R10776 += 1 };
  s0 -> s2 [70, 70] { R10776 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R10776 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R10776 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R10776 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10776 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R10776 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R10776 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R10776 += 1, R93 += 1, R94 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R10778 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R10777 += 1, R10778 += 1 };
  s0 -> s2 [70, 70] { R10778 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R10778 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R10778 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R10778 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10778 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R10778 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R10778 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R10778 += 1, R101 += 1, R102 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R10780 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R10779 += 1, R10780 += 1 };
  s0 -> s2 [70, 70] { R10780 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R10780 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R10780 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R10780 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10780 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R10780 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R10780 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535] { R10780 += 1, R111 += 1, R112 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R10782 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R10781 += 1, R10782 += 1 };
  s0 -> s2 [70, 70] { R10782 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R10782 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R10782 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R10782 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10782 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R10782 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R10782 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535] { R10782 += 1, R119 += 1, R120 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R10784 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R10783 += 1, R10784 += 1 };
  s0 -> s2 [70, 70] { R10784 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R10784 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R10784 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R10784 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10784 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R10784 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R10784 += 1, R129 += 1, R130 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R10784 += 1, R129 += 1, R130 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R10814 += 1 };
  s0 -> s0 [0, 65535] { R10813 += 1, R10814 += 1 };
  s0 -> s2 [70, 70] { R10814 += 1 };
  s0 -> s1 [71, 65535] { R10814 += 1 };
  s1 -> s1 [0, 69] { R10814 += 1 };
  s1 -> s2 [70, 70] { R10814 += 1 };
  s1 -> s1 [71, 65535] { R10814 += 1 };
  s2 -> s2 [0, 65535] { R10814 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R10816 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R10815 += 1, R10816 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R10816 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R10818 += 1 };
  s0 -> s2 [0, 65535] { R10818 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R10817 += 1, R10818 += 1 };
  s0 -> s3 [70, 70] { R10818 += 1 };
  s0 -> s1 [71, 65535] { R10818 += 1 };
  s1 -> s1 [0, 69] { R10818 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R10818 += 1 };
  s1 -> s1 [71, 65535] { R10818 += 1 };
  s2 -> s1 [0, 69] { R10818 += 1 };
  s2 -> s2 [0, 65535] { R10818 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R10818 += 1 };
  s2 -> s1 [71, 65535] { R10818 += 1 };
  s3 -> s3 [0, 65535] { R10818 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R10820 += 1, R10728 += 1 };
  s0 -> s2 [0, 65535] { R10820 += 1, R10727 += 1, R10728 += 1 };
  s0 -> s0 [0, 65535] { R10819 += 1, R10820 += 1 };
  s0 -> s1 [71, 65535] { R10820 += 1, R10728 += 1 };
  s1 -> s1 [0, 69] { R10820 += 1, R10728 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R10820 += 1 };
  s1 -> s1 [71, 65535] { R10820 += 1, R10728 += 1 };
  s2 -> s1 [0, 69] { R10820 += 1, R10728 += 1 };
  s2 -> s2 [0, 65535] { R10820 += 1, R10727 += 1, R10728 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R10820 += 1, R10728 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R10822 += 1, R10730 += 1, R22 += 1 };
  s0 -> s2 [0, 65535] { R10822 += 1, R10729 += 1, R10730 += 1 };
  s0 -> s0 [0, 65535] { R10821 += 1, R10822 += 1 };
  s1 -> s1 [0, 65535] { R10822 += 1, R10730 += 1, R22 += 1 };
  s1 -> s4 [0, 65535] { R10822 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R10822 += 1, R10730 += 1, R22 += 1 };
  s2 -> s2 [0, 65535] { R10822 += 1, R10729 += 1, R10730 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R10822 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R10824 += 1, R10732 += 1 };
  s0 -> s2 [0, 65535] { R10824 += 1, R10731 += 1, R10732 += 1 };
  s0 -> s0 [0, 65535] { R10823 += 1, R10824 += 1 };
  s0 -> s1 [75, 65535] { R10824 += 1, R10732 += 1 };
  s1 -> s1 [0, 70] { R10824 += 1, R10732 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R10824 += 1 };
  s1 -> s1 [75, 65535] { R10824 += 1, R10732 += 1 };
  s2 -> s1 [0, 70] { R10824 += 1, R10732 += 1 };
  s2 -> s2 [0, 65535] { R10824 += 1, R10731 += 1, R10732 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R10824 += 1, R10732 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s0 [0, 65535] { R10825 += 1, R10826 += 1 };
  s0 -> s1 [0, 65535] { R10826 += 1, R10734 += 1, R138 += 1 };
  s0 -> s2 [0, 65535] { R10826 += 1, R10733 += 1, R10734 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R10826 += 1, R10734 += 1, R138 += 1 };
  s1 -> s4 [0, 65535] { R10826 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R10826 += 1, R10734 += 1, R138 += 1 };
  s2 -> s2 [0, 65535] { R10826 += 1, R10733 += 1, R10734 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R10826 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R10828 += 1, R10736 += 1 };
  s0 -> s2 [0, 65535] { R10828 += 1, R10736 += 1, R140 += 1 };
  s0 -> s0 [0, 65535] { R10827 += 1, R10828 += 1 };
  s0 -> s3 [0, 65535] { R10828 += 1, R10735 += 1, R10736 += 1 };
  s0 -> s1 [76, 65535] { R10828 += 1, R10736 += 1 };
  s1 -> s1 [0, 74] { R10828 += 1, R10736 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R10828 += 1 };
  s1 -> s1 [76, 65535] { R10828 += 1, R10736 += 1 };
  s2 -> s1 [0, 74] { R10828 += 1, R10736 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R10828 += 1, R10736 += 1, R140 += 1 };
  s2 -> s5 [0, 65535] { R10828 += 1 };
  s2 -> s1 [76, 65535] { R10828 += 1, R10736 += 1 };
  s3 -> s1 [0, 74] { R10828 += 1, R10736 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R10828 += 1, R10736 += 1, R140 += 1 };
  s3 -> s3 [0, 65535] { R10828 += 1, R10735 += 1, R10736 += 1 };
  s3 -> s1 [76, 65535] { R10828 += 1, R10736 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R10828 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R10830 += 1, R10737 += 1, R10738 += 1 };
  s0 -> s0 [0, 65535] { R10829 += 1, R10830 += 1 };
  s0 -> s2 [0, 65535] { R10830 += 1, R10738 += 1, R144 += 1, R145 += 1 };
  s0 -> s3 [0, 65535] { R10830 += 1, R10738 += 1, R145 += 1, R146 += 1 };
  s1 -> s1 [0, 65535] { R10830 += 1, R10737 += 1, R10738 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R10830 += 1, R10738 += 1, R144 += 1, R145 += 1 };
  s1 -> s3 [0, 65535] { R10830 += 1, R10738 += 1, R145 += 1, R146 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10830 += 1, R10738 += 1, R144 += 1, R145 += 1 };
  s2 -> s6 [0, 65535] { R10830 += 1 };
  s2 -> s3 [0, 65535] { R10830 += 1, R10738 += 1, R145 += 1, R146 += 1 };
  s3 -> s4 [0, 65535] { R10830 += 1, R10738 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R10830 += 1 };
  s3 -> s3 [0, 65535] { R10830 += 1, R10738 += 1, R145 += 1, R146 += 1 };
  s4 -> s4 [0, 65535] { R10830 += 1, R10738 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R10830 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10830 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R10832 += 1, R10740 += 1, R150 += 1 };
  s0 -> s2 [0, 65535] { R10832 += 1, R10740 += 1, R149 += 1, R150 += 1 };
  s0 -> s3 [0, 65535] { R10832 += 1, R10739 += 1, R10740 += 1 };
  s0 -> s0 [0, 65535] { R10831 += 1, R10832 += 1 };
  s0 -> s4 [75, 75] { R10832 += 1, R10740 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R10832 += 1, R10740 += 1, R150 += 1 };
  s0 -> s1 [88, 65535] { R10832 += 1, R10740 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R10832 += 1, R10740 += 1, R150 += 1 };
  s1 -> s1 [0, 65535] { R10832 += 1, R10740 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R10832 += 1 };
  s1 -> s4 [75, 75] { R10832 += 1, R10740 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R10832 += 1, R10740 += 1, R150 += 1 };
  s1 -> s1 [88, 65535] { R10832 += 1, R10740 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R10832 += 1, R10740 += 1, R150 += 1 };
  s2 -> s2 [0, 65535] { R10832 += 1, R10740 += 1, R149 += 1, R150 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R10832 += 1 };
  s2 -> s4 [75, 75] { R10832 += 1, R10740 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R10832 += 1, R10740 += 1, R150 += 1 };
  s2 -> s1 [88, 65535] { R10832 += 1, R10740 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R10832 += 1, R10740 += 1, R150 += 1 };
  s3 -> s2 [0, 65535] { R10832 += 1, R10740 += 1, R149 += 1, R150 += 1 };
  s3 -> s3 [0, 65535] { R10832 += 1, R10739 += 1, R10740 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s4 [75, 75] { R10832 += 1, R10740 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R10832 += 1, R10740 += 1, R150 += 1 };
  s3 -> s1 [88, 65535] { R10832 += 1, R10740 += 1, R150 += 1 };
  s4 -> s4 [0, 75] { R10832 += 1, R10740 += 1, R150 += 1 };
  s4 -> s4 [0, 65535] { R10832 += 1, R10740 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R10832 += 1 };
  s4 -> s4 [88, 65535] { R10832 += 1, R10740 += 1, R150 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R10832 += 1 };
  s5 -> s5 [0, 65535] { R10832 += 1, R10740 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R10832 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R10834 += 1, R10742 += 1, R154 += 1 };
  s0 -> s2 [0, 65535] { R10834 += 1, R10741 += 1, R10742 += 1 };
  s0 -> s3 [0, 65535] { R10834 += 1, R10742 += 1 };
  s0 -> s0 [0, 65535] { R10833 += 1, R10834 += 1 };
  s1 -> s4 [0, 65535] { R10834 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R10834 += 1, R10742 += 1, R154 += 1 };
  s1 -> s3 [0, 65535] { R10834 += 1, R10742 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R10834 += 1, R10742 += 1, R154 += 1 };
  s2 -> s2 [0, 65535] { R10834 += 1, R10741 += 1, R10742 += 1 };
  s2 -> s3 [0, 65535] { R10834 += 1, R10742 += 1 };
  s3 -> s4 [0, 65535] { R10834 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R10834 += 1, R10742 += 1 };
  s4 -> s4 [0, 65535] { R10834 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R10836 += 1, R10743 += 1, R10744 += 1 };
  s0 -> s2 [0, 65535] { R10836 += 1, R10744 += 1, R159 += 1, R160 += 1 };
  s0 -> s3 [0, 65535] { R10836 += 1, R10744 += 1, R158 += 1, R159 += 1 };
  s0 -> s0 [0, 65535] { R10835 += 1, R10836 += 1 };
  s1 -> s1 [0, 65535] { R10836 += 1, R10743 += 1, R10744 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R10836 += 1, R10744 += 1, R159 += 1, R160 += 1 };
  s1 -> s3 [0, 65535] { R10836 += 1, R10744 += 1, R158 += 1, R159 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R10836 += 1 };
  s2 -> s2 [0, 65535] { R10836 += 1, R10744 += 1, R159 += 1, R160 += 1 };
  s2 -> s6 [0, 65535] { R10836 += 1, R10744 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R10836 += 1 };
  s3 -> s2 [0, 65535] { R10836 += 1, R10744 += 1, R159 += 1, R160 += 1 };
  s3 -> s3 [0, 65535] { R10836 += 1, R10744 += 1, R158 += 1, R159 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R10836 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R10836 += 1 };
  s6 -> s6 [0, 65535] { R10836 += 1, R10744 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R10838 += 1, R10746 += 1, R165 += 1 };
  s0 -> s0 [0, 65535] { R10837 += 1, R10838 += 1 };
  s0 -> s2 [0, 65535] { R10838 += 1, R10745 += 1, R10746 += 1 };
  s0 -> s3 [0, 65535] { R10838 += 1, R10746 += 1, R164 += 1, R165 += 1 };
  s0 -> s4 [0, 65535] { R10838 += 1, R10746 += 1, R165 += 1, R166 += 1 };
  s0 -> s1 [76, 65535] { R10838 += 1, R10746 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R10838 += 1, R10746 += 1, R165 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R10838 += 1 };
  s1 -> s1 [0, 65535] { R10838 += 1, R10746 += 1 };
  s1 -> s1 [76, 65535] { R10838 += 1, R10746 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R10838 += 1, R10746 += 1, R165 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10838 += 1, R10745 += 1, R10746 += 1 };
  s2 -> s3 [0, 65535] { R10838 += 1, R10746 += 1, R164 += 1, R165 += 1 };
  s2 -> s4 [0, 65535] { R10838 += 1, R10746 += 1, R165 += 1, R166 += 1 };
  s2 -> s1 [76, 65535] { R10838 += 1, R10746 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R10838 += 1, R10746 += 1, R165 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R10838 += 1, R10746 += 1, R164 += 1, R165 += 1 };
  s3 -> s6 [0, 65535] { R10838 += 1 };
  s3 -> s4 [0, 65535] { R10838 += 1, R10746 += 1, R165 += 1, R166 += 1 };
  s3 -> s1 [76, 65535] { R10838 += 1, R10746 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R10838 += 1, R10746 += 1, R165 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R10838 += 1 };
  s4 -> s7 [0, 65535] { R10838 += 1, R10746 += 1 };
  s4 -> s4 [0, 65535] { R10838 += 1, R10746 += 1, R165 += 1, R166 += 1 };
  s4 -> s1 [76, 65535] { R10838 += 1, R10746 += 1, R165 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10838 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R10838 += 1 };
  s7 -> s7 [0, 65535] { R10838 += 1, R10746 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R10840 += 1, R10748 += 1, R172 += 1, R174 += 1 };
  s0 -> s2 [0, 65535] { R10840 += 1, R10747 += 1, R10748 += 1 };
  s0 -> s0 [0, 65535] { R10839 += 1, R10840 += 1 };
  s0 -> s3 [0, 65535] { R10840 += 1, R10748 += 1, R171 += 1, R172 += 1 };
  s0 -> s4 [0, 65535] { R10840 += 1, R10748 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s1 [76, 65535] { R10840 += 1, R10748 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R10840 += 1, R10748 += 1, R172 += 1, R174 += 1 };
  s1 -> s5 [0, 65535] { R10840 += 1 };
  s1 -> s1 [0, 65535] { R10840 += 1, R10748 += 1, R172 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R10840 += 1, R10748 += 1 };
  s1 -> s1 [76, 65535] { R10840 += 1, R10748 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R10840 += 1, R10748 += 1, R172 += 1, R174 += 1 };
  s2 -> s2 [0, 65535] { R10840 += 1, R10747 += 1, R10748 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R10840 += 1, R10748 += 1, R171 += 1, R172 += 1 };
  s2 -> s4 [0, 65535] { R10840 += 1, R10748 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s1 [76, 65535] { R10840 += 1, R10748 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R10840 += 1, R10748 += 1, R172 += 1, R174 += 1 };
  s3 -> s5 [0, 65535] { R10840 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R10840 += 1, R10748 += 1, R171 += 1, R172 += 1 };
  s3 -> s4 [0, 65535] { R10840 += 1, R10748 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s1 [76, 65535] { R10840 += 1, R10748 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R10840 += 1, R10748 += 1, R172 += 1, R174 += 1 };
  s4 -> s5 [0, 65535] { R10840 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R10840 += 1, R10748 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s7 [0, 65535] { R10840 += 1, R10748 += 1 };
  s4 -> s1 [76, 65535] { R10840 += 1, R10748 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535] { R10840 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R10840 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R10840 += 1, R10748 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R10842 += 1, R10750 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s0 -> s2 [0, 65535] { R10842 += 1, R10750 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s0 -> s0 [0, 65535] { R10841 += 1, R10842 += 1 };
  s0 -> s3 [0, 65535] { R10842 += 1, R10749 += 1, R10750 += 1 };
  s0 -> s4 [0, 65535] { R10842 += 1, R10750 += 1 };
  s1 -> s5 [0, 65535] { R10842 += 1 };
  s1 -> s1 [0, 65535] { R10842 += 1, R10750 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s1 -> s4 [0, 65535] { R10842 += 1, R10750 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R10842 += 1, R10750 += 1, R181 += 1 };
  s2 -> s5 [0, 65535] { R10842 += 1 };
  s2 -> s1 [0, 65535] { R10842 += 1, R10750 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s2 -> s2 [0, 65535] { R10842 += 1, R10750 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s2 -> s4 [0, 65535] { R10842 += 1, R10750 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s1 [0, 65535] { R10842 += 1, R10750 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s3 -> s2 [0, 65535] { R10842 += 1, R10750 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s3 -> s3 [0, 65535] { R10842 += 1, R10749 += 1, R10750 += 1 };
  s3 -> s4 [0, 65535] { R10842 += 1, R10750 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R10842 += 1 };
  s4 -> s4 [0, 65535] { R10842 += 1, R10750 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R10842 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R10842 += 1 };
  s7 -> s4 [0, 65535] { R10842 += 1, R10750 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R10842 += 1, R10750 += 1, R181 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R10844 += 1, R10752 += 1, R6568 += 1, R6570 += 1 };
  s0 -> s2 [0, 65535] { R10844 += 1, R10752 += 1 };
  s0 -> s3 [0, 65535] { R10844 += 1, R10751 += 1, R10752 += 1 };
  s0 -> s0 [0, 65535] { R10843 += 1, R10844 += 1 };
  s0 -> s1 [0, 65535] { R10844 += 1, R10752 += 1, R6568 += 1 };
  s0 -> s1 [87, 65535] { R10844 += 1, R10752 += 1, R6568 += 1, R6570 += 1 };
  s1 -> s1 [0, 75] { R10844 += 1, R10752 += 1, R6568 += 1, R6570 += 1 };
  s1 -> s2 [0, 65535] { R10844 += 1, R10752 += 1 };
  s1 -> s5 [0, 65535] { R10844 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R10844 += 1, R10752 += 1, R6568 += 1 };
  s1 -> s1 [87, 65535] { R10844 += 1, R10752 += 1, R6568 += 1, R6570 += 1 };
  s2 -> s2 [0, 65535] { R10844 += 1, R10752 += 1 };
  s2 -> s5 [0, 65535] { R10844 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 75] { R10844 += 1, R10752 += 1, R6568 += 1, R6570 += 1 };
  s3 -> s2 [0, 65535] { R10844 += 1, R10752 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R10844 += 1, R10751 += 1, R10752 += 1 };
  s3 -> s1 [0, 65535] { R10844 += 1, R10752 += 1, R6568 += 1 };
  s3 -> s1 [87, 65535] { R10844 += 1, R10752 += 1, R6568 += 1, R6570 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R10844 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R10846 += 1, R10753 += 1, R10754 += 1 };
  s0 -> s2 [0, 65535] { R10846 += 1, R10754 += 1, R10399 += 1, R10401 += 1, R10402 += 1 };
  s0 -> s0 [0, 65535] { R10845 += 1, R10846 += 1 };
  s0 -> s3 [0, 65535] { R10846 += 1, R10754 += 1, R10399 += 1, R10400 += 1, R10401 += 1 };
  s0 -> s4 [0, 65535] { R10846 += 1, R10754 += 1, R10398 += 1, R10399 += 1 };
  s1 -> s1 [0, 65535] { R10846 += 1, R10753 += 1, R10754 += 1 };
  s1 -> s2 [0, 65535] { R10846 += 1, R10754 += 1, R10399 += 1, R10401 += 1, R10402 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [0, 65535] { R10846 += 1, R10754 += 1, R10399 += 1, R10400 += 1, R10401 += 1 };
  s1 -> s4 [0, 65535] { R10846 += 1, R10754 += 1, R10398 += 1, R10399 += 1 };
  s2 -> s2 [0, 65535] { R10846 += 1, R10754 += 1, R10399 += 1, R10401 += 1, R10402 += 1 };
  s2 -> s5 [0, 65535] { R10846 += 1 };
  s2 -> s7 [0, 65535] { R10846 += 1, R10754 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s8 [0, 65535] { R10846 += 1, R10754 += 1, R10399 += 1 };
  s3 -> s2 [0, 65535] { R10846 += 1, R10754 += 1, R10399 += 1, R10401 += 1, R10402 += 1 };
  s3 -> s5 [0, 65535] { R10846 += 1 };
  s3 -> s7 [0, 65535] { R10846 += 1, R10754 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R10846 += 1, R10754 += 1, R10399 += 1, R10400 += 1, R10401 += 1 };
  s4 -> s2 [0, 65535] { R10846 += 1, R10754 += 1, R10399 += 1, R10401 += 1, R10402 += 1 };
  s4 -> s5 [0, 65535] { R10846 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s3 [0, 65535] { R10846 += 1, R10754 += 1, R10399 += 1, R10400 += 1, R10401 += 1 };
  s4 -> s4 [0, 65535] { R10846 += 1, R10754 += 1, R10398 += 1, R10399 += 1 };
  s5 -> s5 [0, 65535] { R10846 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R10846 += 1 };
  s7 -> s7 [0, 65535] { R10846 += 1, R10754 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s5 [0, 65535] { R10846 += 1 };
  s8 -> s7 [0, 65535] { R10846 += 1, R10754 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R10846 += 1, R10754 += 1, R10399 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 75] { R10848 += 1, R10756 += 1, R10724 += 1, R10726 += 1 };
  s0 -> s0 [0, 65535] { R10847 += 1, R10848 += 1 };
  s0 -> s2 [0, 65535] { R10848 += 1, R10756 += 1 };
  s0 -> s1 [0, 65535] { R10848 += 1, R10756 += 1, R10724 += 1 };
  s0 -> s3 [0, 65535] { R10848 += 1, R10755 += 1, R10756 += 1 };
  s0 -> s1 [87, 65535] { R10848 += 1, R10756 += 1, R10724 += 1, R10726 += 1 };
  s1 -> s1 [0, 75] { R10848 += 1, R10756 += 1, R10724 += 1, R10726 += 1 };
  s1 -> s5 [0, 65535] { R10848 += 1 };
  s1 -> s2 [0, 65535] { R10848 += 1, R10756 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R10848 += 1, R10756 += 1, R10724 += 1 };
  s1 -> s1 [87, 65535] { R10848 += 1, R10756 += 1, R10724 += 1, R10726 += 1 };
  s2 -> s5 [0, 65535] { R10848 += 1 };
  s2 -> s2 [0, 65535] { R10848 += 1, R10756 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 75] { R10848 += 1, R10756 += 1, R10724 += 1, R10726 += 1 };
  s3 -> s2 [0, 65535] { R10848 += 1, R10756 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R10848 += 1, R10756 += 1, R10724 += 1 };
  s3 -> s3 [0, 65535] { R10848 += 1, R10755 += 1, R10756 += 1 };
  s3 -> s1 [87, 65535] { R10848 += 1, R10756 += 1, R10724 += 1, R10726 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R10848 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s0 [0, 65535] { R10849 += 1, R10850 += 1 };
  s0 -> s1 [0, 65535] { R10850 += 1, R10786 += 1, R23 += 1 };
  s0 -> s2 [0, 65535] { R10850 += 1, R10785 += 1, R10786 += 1 };
  s1 -> s4 [0, 65535] { R10850 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R10850 += 1, R10786 += 1, R23 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R10850 += 1, R10786 += 1, R23 += 1 };
  s2 -> s2 [0, 65535] { R10850 += 1, R10785 += 1, R10786 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R10850 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R10852 += 1, R10788 += 1 };
  s0 -> s0 [0, 65535] { R10851 += 1, R10852 += 1 };
  s0 -> s2 [0, 65535] { R10852 += 1, R10787 += 1, R10788 += 1 };
  s0 -> s3 [70, 70] { R10852 += 1, R10788 += 1 };
  s0 -> s4 [70, 70] { R10852 += 1, R10788 += 1 };
  s0 -> s5 [75, 75] { R10852 += 1, R10788 += 1 };
  s0 -> s1 [76, 65535] { R10852 += 1, R10788 += 1 };
  s1 -> s1 [0, 69] { R10852 += 1, R10788 += 1 };
  s1 -> s3 [70, 70] { R10852 += 1, R10788 += 1 };
  s1 -> s4 [70, 70] { R10852 += 1, R10788 += 1 };
  s1 -> s5 [75, 75] { R10852 += 1, R10788 += 1 };
  s1 -> s1 [76, 65535] { R10852 += 1, R10788 += 1 };
  s2 -> s1 [0, 69] { R10852 += 1, R10788 += 1 };
  s2 -> s2 [0, 65535] { R10852 += 1, R10787 += 1, R10788 += 1 };
  s2 -> s3 [70, 70] { R10852 += 1, R10788 += 1 };
  s2 -> s4 [70, 70] { R10852 += 1, R10788 += 1 };
  s2 -> s5 [75, 75] { R10852 += 1, R10788 += 1 };
  s2 -> s1 [76, 65535] { R10852 += 1, R10788 += 1 };
  s4 -> s4 [0, 70] { R10852 += 1, R10788 += 1 };
  s4 -> s7 [75, 75] { R10852 += 1, R10788 += 1 };
  s4 -> s4 [76, 65535] { R10852 += 1, R10788 += 1 };
  s5 -> s5 [0, 69] { R10852 += 1, R10788 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R10852 += 1 };
  s5 -> s7 [70, 70] { R10852 += 1, R10788 += 1 };
  s5 -> s8 [70, 70] { R10852 += 1, R10788 += 1 };
  s5 -> s5 [75, 65535] { R10852 += 1, R10788 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R10852 += 1, R10788 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R10852 += 1 };
  s7 -> s7 [75, 65535] { R10852 += 1, R10788 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R10852 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R10854 += 1, R10790 += 1, R137 += 1 };
  s0 -> s2 [0, 65535] { R10854 += 1, R10789 += 1, R10790 += 1 };
  s0 -> s0 [0, 65535] { R10853 += 1, R10854 += 1 };
  s0 -> s3 [70, 70] { R10854 += 1, R10790 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R10854 += 1, R10790 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R10854 += 1, R10790 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R10854 += 1, R10790 += 1, R137 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R10854 += 1 };
  s1 -> s3 [70, 70] { R10854 += 1, R10790 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R10854 += 1, R10790 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R10854 += 1, R10790 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R10854 += 1, R10790 += 1, R137 += 1 };
  s2 -> s2 [0, 65535] { R10854 += 1, R10789 += 1, R10790 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R10854 += 1, R10790 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R10854 += 1, R10790 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R10854 += 1, R10790 += 1, R137 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R10854 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R10854 += 1 };
  s4 -> s4 [0, 65535] { R10854 += 1, R10790 += 1, R137 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10854 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R10856 += 1, R10792 += 1, R139 += 1 };
  s0 -> s2 [0, 65535] { R10856 += 1, R10791 += 1, R10792 += 1 };
  s0 -> s0 [0, 65535] { R10855 += 1, R10856 += 1 };
  s0 -> s3 [70, 70] { R10856 += 1, R10792 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R10856 += 1, R10792 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R10856 += 1, R10792 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R10856 += 1, R10792 += 1, R139 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R10856 += 1 };
  s1 -> s3 [70, 70] { R10856 += 1, R10792 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R10856 += 1, R10792 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R10856 += 1, R10792 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R10856 += 1, R10792 += 1, R139 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10856 += 1, R10791 += 1, R10792 += 1 };
  s2 -> s3 [70, 70] { R10856 += 1, R10792 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R10856 += 1, R10792 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R10856 += 1, R10792 += 1, R139 += 1 };
  s3 -> s6 [0, 65535] { R10856 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R10856 += 1, R10792 += 1, R139 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10856 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10856 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R10858 += 1, R10794 += 1, R141 += 1, R142 += 1 };
  s0 -> s2 [0, 65535] { R10858 += 1, R10793 += 1, R10794 += 1 };
  s0 -> s0 [0, 65535] { R10857 += 1, R10858 += 1 };
  s0 -> s3 [70, 70] { R10858 += 1, R10794 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R10858 += 1, R10794 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R10858 += 1, R10794 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R10858 += 1, R10794 += 1, R141 += 1, R142 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R10858 += 1 };
  s1 -> s3 [70, 70] { R10858 += 1, R10794 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R10858 += 1, R10794 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R10858 += 1, R10794 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R10858 += 1, R10794 += 1, R141 += 1, R142 += 1 };
  s2 -> s2 [0, 65535] { R10858 += 1, R10793 += 1, R10794 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R10858 += 1, R10794 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R10858 += 1, R10794 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R10858 += 1, R10794 += 1, R141 += 1, R142 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R10858 += 1 };
  s4 -> s5 [0, 65535] { R10858 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R10858 += 1, R10794 += 1, R141 += 1, R142 += 1 };
  s5 -> s5 [0, 65535] { R10858 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R10860 += 1, R10796 += 1, R147 += 1, R148 += 1 };
  s0 -> s2 [0, 65535] { R10860 += 1, R10795 += 1, R10796 += 1 };
  s0 -> s0 [0, 65535] { R10859 += 1, R10860 += 1 };
  s0 -> s3 [70, 70] { R10860 += 1, R10796 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R10860 += 1, R10796 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R10860 += 1, R10796 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R10860 += 1, R10796 += 1, R147 += 1, R148 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R10860 += 1 };
  s1 -> s3 [70, 70] { R10860 += 1, R10796 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R10860 += 1, R10796 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R10860 += 1, R10796 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R10860 += 1, R10796 += 1, R147 += 1, R148 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10860 += 1, R10795 += 1, R10796 += 1 };
  s2 -> s3 [70, 70] { R10860 += 1, R10796 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R10860 += 1, R10796 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R10860 += 1, R10796 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R10860 += 1, R10796 += 1, R147 += 1, R148 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R10860 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10860 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10860 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R10862 += 1, R10798 += 1, R151 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R10862 += 1, R10798 += 1, R152 += 1 };
  s0 -> s3 [0, 65535] { R10862 += 1, R10797 += 1, R10798 += 1 };
  s0 -> s0 [0, 65535] { R10861 += 1, R10862 += 1 };
  s0 -> s4 [70, 70] { R10862 += 1, R10798 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R10862 += 1, R10798 += 1, R151 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R10862 += 1, R10798 += 1, R151 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R10862 += 1, R10798 += 1, R152 += 1 };
  s0 -> s2 [71, 74] { R10862 += 1, R10798 += 1, R152 += 1 };
  s0 -> s1 [71, 65535] { R10862 += 1, R10798 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R10862 += 1, R10798 += 1, R152 += 1 };
  s0 -> s2 [76, 65535] { R10862 += 1, R10798 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R10862 += 1, R10798 += 1, R151 += 1, R152 += 1 };
  s1 -> s2 [0, 69] { R10862 += 1, R10798 += 1, R152 += 1 };
  s1 -> s4 [70, 70] { R10862 += 1, R10798 += 1, R152 += 1 };
  s1 -> s5 [70, 70] { R10862 += 1, R10798 += 1, R151 += 1, R152 += 1 };
  s1 -> s6 [70, 70] { R10862 += 1, R10798 += 1, R151 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R10862 += 1, R10798 += 1, R152 += 1 };
  s1 -> s2 [71, 74] { R10862 += 1, R10798 += 1, R152 += 1 };
  s1 -> s1 [71, 65535] { R10862 += 1, R10798 += 1, R151 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R10862 += 1, R10798 += 1, R152 += 1 };
  s1 -> s2 [76, 65535] { R10862 += 1, R10798 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R10862 += 1, R10798 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R10862 += 1, R10798 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R10862 += 1, R10798 += 1, R152 += 1 };
  s2 -> s2 [71, 74] { R10862 += 1, R10798 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R10862 += 1, R10798 += 1, R152 += 1 };
  s2 -> s2 [76, 65535] { R10862 += 1, R10798 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R10862 += 1, R10798 += 1, R151 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R10862 += 1, R10798 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R10862 += 1, R10797 += 1, R10798 += 1 };
  s3 -> s4 [70, 70] { R10862 += 1, R10798 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R10862 += 1, R10798 += 1, R151 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R10862 += 1, R10798 += 1, R151 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R10862 += 1, R10798 += 1, R152 += 1 };
  s3 -> s2 [71, 74] { R10862 += 1, R10798 += 1, R152 += 1 };
  s3 -> s1 [71, 65535] { R10862 += 1, R10798 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R10862 += 1, R10798 += 1, R152 += 1 };
  s3 -> s2 [76, 65535] { R10862 += 1, R10798 += 1, R152 += 1 };
  s6 -> s7 [0, 74] { R10862 += 1, R10798 += 1, R152 += 1 };
  s6 -> s6 [0, 65535] { R10862 += 1, R10798 += 1, R151 += 1, R152 += 1 };
  s6 -> s11 [75, 75] { R10862 += 1, R10798 += 1, R152 += 1 };
  s6 -> s7 [76, 65535] { R10862 += 1, R10798 += 1, R152 += 1 };
  s7 -> s7 [0, 74] { R10862 += 1, R10798 += 1, R152 += 1 };
  s7 -> s11 [75, 75] { R10862 += 1, R10798 += 1, R152 += 1 };
  s7 -> s7 [76, 65535] { R10862 += 1, R10798 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R10862 += 1, R10798 += 1, R152 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R10862 += 1 };
  s8 -> s10 [70, 70] { R10862 += 1, R10798 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R10862 += 1, R10798 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R10862 += 1, R10798 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R10862 += 1 };
  s11 -> s12 [0, 65535] { R10862 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R10862 += 1, R10798 += 1, R152 += 1 };
  s12 -> s12 [0, 65535] { R10862 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R10864 += 1, R10800 += 1, R155 += 1, R156 += 1 };
  s0 -> s0 [0, 65535] { R10863 += 1, R10864 += 1 };
  s0 -> s2 [0, 65535] { R10864 += 1, R10799 += 1, R10800 += 1 };
  s0 -> s3 [70, 70] { R10864 += 1, R10800 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R10864 += 1, R10800 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R10864 += 1, R10800 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R10864 += 1, R10800 += 1, R155 += 1, R156 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R10864 += 1 };
  s1 -> s3 [70, 70] { R10864 += 1, R10800 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R10864 += 1, R10800 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R10864 += 1, R10800 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R10864 += 1, R10800 += 1, R155 += 1, R156 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10864 += 1, R10799 += 1, R10800 += 1 };
  s2 -> s3 [70, 70] { R10864 += 1, R10800 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R10864 += 1, R10800 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R10864 += 1, R10800 += 1, R155 += 1, R156 += 1 };
  s3 -> s6 [0, 65535] { R10864 += 1 };
  s3 -> s3 [0, 65535] { R10864 += 1, R10800 += 1, R155 += 1, R156 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10864 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10864 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R10866 += 1, R10802 += 1, R161 += 1, R162 += 1 };
  s0 -> s2 [0, 65535] { R10866 += 1, R10801 += 1, R10802 += 1 };
  s0 -> s0 [0, 65535] { R10865 += 1, R10866 += 1 };
  s0 -> s3 [70, 70] { R10866 += 1, R10802 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R10866 += 1, R10802 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R10866 += 1, R10802 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R10866 += 1, R10802 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535] { R10866 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R10866 += 1, R10802 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R10866 += 1, R10802 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R10866 += 1, R10802 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R10866 += 1, R10802 += 1, R161 += 1, R162 += 1 };
  s2 -> s2 [0, 65535] { R10866 += 1, R10801 += 1, R10802 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R10866 += 1, R10802 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R10866 += 1, R10802 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R10866 += 1, R10802 += 1, R161 += 1, R162 += 1 };
  s3 -> s3 [0, 65535] { R10866 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R10866 += 1 };
  s4 -> s4 [0, 65535] { R10866 += 1, R10802 += 1, R161 += 1, R162 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R10866 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R10868 += 1, R10804 += 1, R167 += 1, R168 += 1 };
  s0 -> s0 [0, 65535] { R10867 += 1, R10868 += 1 };
  s0 -> s2 [0, 65535] { R10868 += 1, R10803 += 1, R10804 += 1 };
  s0 -> s3 [70, 70] { R10868 += 1, R10804 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R10868 += 1, R10804 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R10868 += 1, R10804 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R10868 += 1, R10804 += 1, R167 += 1, R168 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R10868 += 1 };
  s1 -> s3 [70, 70] { R10868 += 1, R10804 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R10868 += 1, R10804 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R10868 += 1, R10804 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R10868 += 1, R10804 += 1, R167 += 1, R168 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10868 += 1, R10803 += 1, R10804 += 1 };
  s2 -> s3 [70, 70] { R10868 += 1, R10804 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R10868 += 1, R10804 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R10868 += 1, R10804 += 1, R167 += 1, R168 += 1 };
  s3 -> s3 [0, 65535] { R10868 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10868 += 1, R10804 += 1, R167 += 1, R168 += 1 };
  s4 -> s6 [0, 65535] { R10868 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10868 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R10870 += 1, R10806 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s2 [0, 69] { R10870 += 1, R10806 += 1, R175 += 1, R176 += 1 };
  s0 -> s3 [0, 65535] { R10870 += 1, R10805 += 1, R10806 += 1 };
  s0 -> s0 [0, 65535] { R10869 += 1, R10870 += 1 };
  s0 -> s4 [70, 70] { R10870 += 1, R10806 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s5 [70, 70] { R10870 += 1, R10806 += 1, R175 += 1, R176 += 1 };
  s0 -> s6 [70, 70] { R10870 += 1, R10806 += 1, R175 += 1, R176 += 1 };
  s0 -> s7 [70, 70] { R10870 += 1, R10806 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s1 [71, 65535] { R10870 += 1, R10806 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s2 [71, 65535] { R10870 += 1, R10806 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [0, 69] { R10870 += 1, R10806 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s1 [0, 65535] { R10870 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [70, 70] { R10870 += 1, R10806 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s7 [70, 70] { R10870 += 1, R10806 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s1 [71, 65535] { R10870 += 1, R10806 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s1 [0, 69] { R10870 += 1, R10806 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s2 [0, 69] { R10870 += 1, R10806 += 1, R175 += 1, R176 += 1 };
  s2 -> s4 [70, 70] { R10870 += 1, R10806 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s5 [70, 70] { R10870 += 1, R10806 += 1, R175 += 1, R176 += 1 };
  s2 -> s6 [70, 70] { R10870 += 1, R10806 += 1, R175 += 1, R176 += 1 };
  s2 -> s7 [70, 70] { R10870 += 1, R10806 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s1 [71, 65535] { R10870 += 1, R10806 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s2 [71, 65535] { R10870 += 1, R10806 += 1, R175 += 1, R176 += 1 };
  s3 -> s1 [0, 69] { R10870 += 1, R10806 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s2 [0, 69] { R10870 += 1, R10806 += 1, R175 += 1, R176 += 1 };
  s3 -> s3 [0, 65535] { R10870 += 1, R10805 += 1, R10806 += 1 };
  s3 -> s4 [70, 70] { R10870 += 1, R10806 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s5 [70, 70] { R10870 += 1, R10806 += 1, R175 += 1, R176 += 1 };
  s3 -> s6 [70, 70] { R10870 += 1, R10806 += 1, R175 += 1, R176 += 1 };
  s3 -> s7 [70, 70] { R10870 += 1, R10806 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s1 [71, 65535] { R10870 += 1, R10806 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s2 [71, 65535] { R10870 += 1, R10806 += 1, R175 += 1, R176 += 1 };
  s4 -> s4 [0, 65535] { R10870 += 1 };
  s4 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R10870 += 1, R10806 += 1, R175 += 1, R176 += 1 };
  s6 -> s7 [0, 65535] { R10870 += 1, R10806 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R10870 += 1 };
  s7 -> s7 [0, 65535] { R10870 += 1, R10806 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R10870 += 1 };
  accepting s4, s8, s9, s1, s7;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R10872 += 1, R10808 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s2 [0, 69] { R10872 += 1, R10808 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s3 [0, 69] { R10872 += 1, R10808 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s4 [0, 65535] { R10872 += 1, R10807 += 1, R10808 += 1 };
  s0 -> s0 [0, 65535] { R10871 += 1, R10872 += 1 };
  s0 -> s5 [70, 70] { R10872 += 1, R10808 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s6 [70, 70] { R10872 += 1, R10808 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s7 [70, 70] { R10872 += 1, R10808 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s8 [70, 70] { R10872 += 1, R10808 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s9 [70, 70] { R10872 += 1, R10808 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s10 [70, 70] { R10872 += 1, R10808 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s3 [71, 75] { R10872 += 1, R10808 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s1 [71, 65535] { R10872 += 1, R10808 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s2 [71, 65535] { R10872 += 1, R10808 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s3 [87, 65535] { R10872 += 1, R10808 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s1 [0, 69] { R10872 += 1, R10808 += 1, R6563 += 1, R6564 += 1 };
  s1 -> s2 [0, 69] { R10872 += 1, R10808 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s1 -> s3 [0, 69] { R10872 += 1, R10808 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s5 [70, 70] { R10872 += 1, R10808 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s6 [70, 70] { R10872 += 1, R10808 += 1, R6563 += 1, R6564 += 1 };
  s1 -> s7 [70, 70] { R10872 += 1, R10808 += 1, R6563 += 1, R6564 += 1 };
  s1 -> s8 [70, 70] { R10872 += 1, R10808 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s9 [70, 70] { R10872 += 1, R10808 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s1 -> s10 [70, 70] { R10872 += 1, R10808 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s1 -> s3 [71, 75] { R10872 += 1, R10808 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s1 [71, 65535] { R10872 += 1, R10808 += 1, R6563 += 1, R6564 += 1 };
  s1 -> s2 [71, 65535] { R10872 += 1, R10808 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s1 -> s3 [87, 65535] { R10872 += 1, R10808 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s2 [0, 69] { R10872 += 1, R10808 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s3 [0, 69] { R10872 += 1, R10808 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s5 [70, 70] { R10872 += 1, R10808 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s8 [70, 70] { R10872 += 1, R10808 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s9 [70, 70] { R10872 += 1, R10808 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s10 [70, 70] { R10872 += 1, R10808 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s3 [71, 75] { R10872 += 1, R10808 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s2 [71, 65535] { R10872 += 1, R10808 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s3 [87, 65535] { R10872 += 1, R10808 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s3 [0, 69] { R10872 += 1, R10808 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s11 [0, 65535];
  s3 -> s3 [0, 65535] { R10872 += 1 };
  s3 -> s5 [70, 70] { R10872 += 1, R10808 += 1, R6564 += 1 };
  s3 -> s8 [70, 70] { R10872 += 1, R10808 += 1, R6564 += 1 };
  s3 -> s3 [71, 75] { R10872 += 1, R10808 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s3 [71, 65535] { R10872 += 1, R10808 += 1, R6564 += 1 };
  s3 -> s3 [87, 65535] { R10872 += 1, R10808 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s1 [0, 69] { R10872 += 1, R10808 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s2 [0, 69] { R10872 += 1, R10808 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s3 [0, 69] { R10872 += 1, R10808 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s4 [0, 65535] { R10872 += 1, R10807 += 1, R10808 += 1 };
  s4 -> s5 [70, 70] { R10872 += 1, R10808 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s6 [70, 70] { R10872 += 1, R10808 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s7 [70, 70] { R10872 += 1, R10808 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s8 [70, 70] { R10872 += 1, R10808 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s9 [70, 70] { R10872 += 1, R10808 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s10 [70, 70] { R10872 += 1, R10808 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s3 [71, 75] { R10872 += 1, R10808 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s1 [71, 65535] { R10872 += 1, R10808 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s2 [71, 65535] { R10872 += 1, R10808 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s3 [87, 65535] { R10872 += 1, R10808 += 1, R6564 += 1, R6566 += 1 };
  s5 -> s11 [0, 65535];
  s5 -> s5 [0, 65535] { R10872 += 1 };
  s6 -> s8 [0, 75] { R10872 += 1, R10808 += 1, R6564 += 1, R6566 += 1 };
  s6 -> s6 [0, 65535] { R10872 += 1, R10808 += 1, R6563 += 1, R6564 += 1 };
  s6 -> s9 [0, 65535] { R10872 += 1, R10808 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s6 -> s8 [87, 65535] { R10872 += 1, R10808 += 1, R6564 += 1, R6566 += 1 };
  s8 -> s8 [0, 75] { R10872 += 1, R10808 += 1, R6564 += 1, R6566 += 1 };
  s8 -> s11 [0, 65535];
  s8 -> s8 [0, 65535] { R10872 += 1, R10808 += 1, R6564 += 1 };
  s8 -> s12 [0, 65535] { R10872 += 1 };
  s8 -> s8 [87, 65535] { R10872 += 1, R10808 += 1, R6564 += 1, R6566 += 1 };
  s9 -> s8 [0, 75] { R10872 += 1, R10808 += 1, R6564 += 1, R6566 += 1 };
  s9 -> s9 [0, 65535] { R10872 += 1, R10808 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s9 -> s8 [87, 65535] { R10872 += 1, R10808 += 1, R6564 += 1, R6566 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R10872 += 1 };
  accepting s3, s12, s8, s5, s11;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R10874 += 1, R10810 += 1, R10393 += 1, R10394 += 1 };
  s0 -> s2 [0, 65535] { R10874 += 1, R10809 += 1, R10810 += 1 };
  s0 -> s0 [0, 65535] { R10873 += 1, R10874 += 1 };
  s0 -> s3 [70, 70] { R10874 += 1, R10810 += 1, R10393 += 1, R10394 += 1 };
  s0 -> s4 [70, 70] { R10874 += 1, R10810 += 1, R10393 += 1, R10394 += 1 };
  s0 -> s1 [71, 65535] { R10874 += 1, R10810 += 1, R10393 += 1, R10394 += 1 };
  s1 -> s1 [0, 69] { R10874 += 1, R10810 += 1, R10393 += 1, R10394 += 1 };
  s1 -> s1 [0, 65535] { R10874 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R10874 += 1, R10810 += 1, R10393 += 1, R10394 += 1 };
  s1 -> s4 [70, 70] { R10874 += 1, R10810 += 1, R10393 += 1, R10394 += 1 };
  s1 -> s1 [71, 65535] { R10874 += 1, R10810 += 1, R10393 += 1, R10394 += 1 };
  s2 -> s1 [0, 69] { R10874 += 1, R10810 += 1, R10393 += 1, R10394 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10874 += 1, R10809 += 1, R10810 += 1 };
  s2 -> s3 [70, 70] { R10874 += 1, R10810 += 1, R10393 += 1, R10394 += 1 };
  s2 -> s4 [70, 70] { R10874 += 1, R10810 += 1, R10393 += 1, R10394 += 1 };
  s2 -> s1 [71, 65535] { R10874 += 1, R10810 += 1, R10393 += 1, R10394 += 1 };
  s3 -> s3 [0, 65535] { R10874 += 1, R10810 += 1, R10393 += 1, R10394 += 1 };
  s3 -> s6 [0, 65535] { R10874 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10874 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10874 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s0 -> s2 [0, 69] { R10876 += 1, R10812 += 1, R10719 += 1, R10720 += 1 };
  s0 -> s3 [0, 69] { R10876 += 1, R10812 += 1, R10720 += 1, R10721 += 1, R10722 += 1 };
  s0 -> s4 [0, 65535] { R10876 += 1, R10811 += 1, R10812 += 1 };
  s0 -> s0 [0, 65535] { R10875 += 1, R10876 += 1 };
  s0 -> s5 [70, 70] { R10876 += 1, R10812 += 1, R10719 += 1, R10720 += 1 };
  s0 -> s6 [70, 70] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s0 -> s7 [70, 70] { R10876 += 1, R10812 += 1, R10720 += 1, R10721 += 1, R10722 += 1 };
  s0 -> s8 [70, 70] { R10876 += 1, R10812 += 1, R10719 += 1, R10720 += 1 };
  s0 -> s9 [70, 70] { R10876 += 1, R10812 += 1, R10720 += 1, R10721 += 1, R10722 += 1 };
  s0 -> s10 [70, 70] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s0 -> s1 [71, 74] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s0 -> s2 [71, 65535] { R10876 += 1, R10812 += 1, R10719 += 1, R10720 += 1 };
  s0 -> s3 [71, 65535] { R10876 += 1, R10812 += 1, R10720 += 1, R10721 += 1, R10722 += 1 };
  s0 -> s11 [75, 75] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s0 -> s12 [87, 87] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s0 -> s1 [88, 65535] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s1 -> s1 [0, 69] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s1 -> s6 [70, 70] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s1 -> s10 [70, 70] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s1 -> s1 [71, 74] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s1 -> s11 [75, 75] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s1 -> s12 [87, 87] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s1 -> s1 [88, 65535] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s2 -> s1 [0, 69] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s2 -> s2 [0, 69] { R10876 += 1, R10812 += 1, R10719 += 1, R10720 += 1 };
  s2 -> s3 [0, 69] { R10876 += 1, R10812 += 1, R10720 += 1, R10721 += 1, R10722 += 1 };
  s2 -> s5 [70, 70] { R10876 += 1, R10812 += 1, R10719 += 1, R10720 += 1 };
  s2 -> s6 [70, 70] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s2 -> s7 [70, 70] { R10876 += 1, R10812 += 1, R10720 += 1, R10721 += 1, R10722 += 1 };
  s2 -> s8 [70, 70] { R10876 += 1, R10812 += 1, R10719 += 1, R10720 += 1 };
  s2 -> s9 [70, 70] { R10876 += 1, R10812 += 1, R10720 += 1, R10721 += 1, R10722 += 1 };
  s2 -> s10 [70, 70] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s2 -> s1 [71, 74] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s2 -> s2 [71, 65535] { R10876 += 1, R10812 += 1, R10719 += 1, R10720 += 1 };
  s2 -> s3 [71, 65535] { R10876 += 1, R10812 += 1, R10720 += 1, R10721 += 1, R10722 += 1 };
  s2 -> s11 [75, 75] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s2 -> s12 [87, 87] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s2 -> s1 [88, 65535] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s3 -> s1 [0, 69] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s3 -> s3 [0, 69] { R10876 += 1, R10812 += 1, R10720 += 1, R10721 += 1, R10722 += 1 };
  s3 -> s6 [70, 70] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s3 -> s7 [70, 70] { R10876 += 1, R10812 += 1, R10720 += 1, R10721 += 1, R10722 += 1 };
  s3 -> s9 [70, 70] { R10876 += 1, R10812 += 1, R10720 += 1, R10721 += 1, R10722 += 1 };
  s3 -> s10 [70, 70] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s3 -> s1 [71, 74] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s3 -> s3 [71, 65535] { R10876 += 1, R10812 += 1, R10720 += 1, R10721 += 1, R10722 += 1 };
  s3 -> s11 [75, 75] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s3 -> s12 [87, 87] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s3 -> s1 [88, 65535] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s4 -> s1 [0, 69] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s4 -> s2 [0, 69] { R10876 += 1, R10812 += 1, R10719 += 1, R10720 += 1 };
  s4 -> s3 [0, 69] { R10876 += 1, R10812 += 1, R10720 += 1, R10721 += 1, R10722 += 1 };
  s4 -> s4 [0, 65535] { R10876 += 1, R10811 += 1, R10812 += 1 };
  s4 -> s5 [70, 70] { R10876 += 1, R10812 += 1, R10719 += 1, R10720 += 1 };
  s4 -> s6 [70, 70] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s4 -> s7 [70, 70] { R10876 += 1, R10812 += 1, R10720 += 1, R10721 += 1, R10722 += 1 };
  s4 -> s8 [70, 70] { R10876 += 1, R10812 += 1, R10719 += 1, R10720 += 1 };
  s4 -> s9 [70, 70] { R10876 += 1, R10812 += 1, R10720 += 1, R10721 += 1, R10722 += 1 };
  s4 -> s10 [70, 70] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s4 -> s1 [71, 74] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s4 -> s2 [71, 65535] { R10876 += 1, R10812 += 1, R10719 += 1, R10720 += 1 };
  s4 -> s3 [71, 65535] { R10876 += 1, R10812 += 1, R10720 += 1, R10721 += 1, R10722 += 1 };
  s4 -> s11 [75, 75] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s4 -> s12 [87, 87] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s4 -> s1 [88, 65535] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s8 -> s10 [0, 74] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s8 -> s8 [0, 65535] { R10876 += 1, R10812 += 1, R10719 += 1, R10720 += 1 };
  s8 -> s9 [0, 65535] { R10876 += 1, R10812 += 1, R10720 += 1, R10721 += 1, R10722 += 1 };
  s8 -> s21 [75, 75] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s8 -> s14 [87, 87] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s8 -> s10 [88, 65535] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s9 -> s10 [0, 74] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s9 -> s9 [0, 65535] { R10876 += 1, R10812 += 1, R10720 += 1, R10721 += 1, R10722 += 1 };
  s9 -> s21 [75, 75] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s9 -> s14 [87, 87] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s9 -> s10 [88, 65535] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s10 -> s10 [0, 74] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s10 -> s21 [75, 75] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s10 -> s14 [87, 87] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s10 -> s10 [88, 65535] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s11 -> s11 [0, 69] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s11 -> s20 [70, 70] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s11 -> s21 [70, 70] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s11 -> s11 [71, 75] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s11 -> s15 [87, 87] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s11 -> s11 [88, 65535] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s12 -> s12 [0, 69] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s12 -> s13 [70, 70] { R10876 += 1, R10812 += 1, R10720 += 1 };
  s12 -> s14 [70, 70] { R10876 += 1, R10812 += 1, R10720 += 1 };
  s12 -> s12 [71, 74] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s12 -> s12 [71, 65535] { R10876 += 1, R10812 += 1, R10720 += 1 };
  s12 -> s15 [75, 75] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s12 -> s12 [87, 65535] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s14 -> s14 [0, 74] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s14 -> s14 [0, 65535] { R10876 += 1, R10812 += 1, R10720 += 1 };
  s14 -> s18 [75, 75] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s14 -> s14 [87, 65535] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s15 -> s15 [0, 69] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s15 -> s15 [0, 65535] { R10876 += 1 };
  s15 -> s16 [0, 65535];
  s15 -> s17 [70, 70] { R10876 += 1, R10812 += 1, R10720 += 1 };
  s15 -> s18 [70, 70] { R10876 += 1, R10812 += 1, R10720 += 1 };
  s15 -> s15 [71, 75] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s15 -> s15 [71, 65535] { R10876 += 1, R10812 += 1, R10720 += 1 };
  s15 -> s15 [87, 65535] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s16 -> s16 [0, 65535];
  s17 -> s17 [0, 65535] { R10876 += 1 };
  s17 -> s16 [0, 65535];
  s18 -> s18 [0, 75] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s18 -> s18 [0, 65535] { R10876 += 1, R10812 += 1, R10720 += 1 };
  s18 -> s19 [0, 65535] { R10876 += 1 };
  s18 -> s16 [0, 65535];
  s18 -> s18 [87, 65535] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s19 -> s19 [0, 65535] { R10876 += 1 };
  s19 -> s16 [0, 65535];
  s21 -> s21 [0, 75] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s21 -> s18 [87, 87] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  s21 -> s21 [88, 65535] { R10876 += 1, R10812 += 1, R10720 += 1, R10722 += 1 };
  accepting s17, s16, s19, s18, s15;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
constraint R3 = R10876 && R25 - R10876 = -1 && R26 = R10876 && R27 - R10876 = -1 && R28 = R10876 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R10724 + -1*R10720 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R10724 + -1*R10720 - R130 = 0 && R129 + R10723 + R10719 = 0 && R131 + R10725 + R10721 = 0 && R132 + R10726 + R10722 = 0 && R10787 = 0 && R10788 = 0 && R10797 = 0 && R10798 = 0 && R10805 = 0 && R10806 = 0 && R10807 = 0 && R10808 = 0 && R10811 = 0 && R10812 = 0 && R10813 = 0 && R10814 = R10876 && R10815 = 0 && R10816 = R10876 && R10817 = 0 && R10818 = R10876 && R10819 = 0 && R10820 = R10876 && R10821 = 0 && R10822 = R10876 && R10823 = 0 && R10824 = R10876 && R10825 = 0 && R10826 = R10876 && R10827 = 0 && R10828 = R10876 && R10829 = 0 && R10830 = R10876 && R10831 = 0 && R10832 = R10876 && R10833 = 0 && R10834 = R10876 && R10835 = 0 && R10836 = R10876 && R10837 = 0 && R10838 = R10876 && R10839 = 0 && R10840 = R10876 && R10841 = 0 && R10842 = R10876 && R10843 = 0 && R10844 = R10876 && R10845 = 0 && R10846 = R10876 && R10847 = 0 && R10848 = R10876 && R10849 = 0 && R10850 = R10876 && R10851 = 0 && R10852 = R10876 && R10853 = 0 && R10854 = R10876 && R10855 = 0 && R10856 = R10876 && R10857 = 0 && R10858 = R10876 && R10859 = 0 && R10860 = R10876 && R10861 = 0 && R10862 = R10876 && R10863 = 0 && R10864 = R10876 && R10865 = 0 && R10866 = R10876 && R10867 = 0 && R10868 = R10876 && R10869 = 0 && R10870 = R10876 && R10871 = 0 && R10872 = R10876 && R10873 = 0 && R10874 = R10876 && R10875 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R10724 + -1*R10720 - R130 < 1 && 0 < R10876 && (R2 != 0 || R22 = 0 || (R10727 = 0 && R10728 = 0)) && (R2 != 0 || R22 = 0 || (R10729 = 0 && R10730 = 0)) && (R2 != 0 || R22 = 0 || (R10731 = 0 && R10732 = 0)) && (R2 != 0 || R22 = 0 || (R10733 = 0 && R10734 = 0)) && (R2 != 0 || R22 = 0 || (R10735 = 0 && R10736 = 0)) && (R2 != 0 || R22 = 0 || (R10737 = 0 && R10738 = 0)) && (R2 != 0 || R22 = 0 || (R10739 = 0 && R10740 = 0)) && (R2 != 0 || R22 = 0 || (R10741 = 0 && R10742 = 0)) && (R2 != 0 || R22 = 0 || (R10743 = 0 && R10744 = 0)) && (R2 != 0 || R22 = 0 || (R10745 = 0 && R10746 = 0)) && (R2 != 0 || R22 = 0 || (R10747 = 0 && R10748 = 0)) && (R2 != 0 || R22 = 0 || (R10749 = 0 && R10750 = 0)) && (R2 != 0 || R22 = 0 || (R10751 = 0 && R10752 = 0)) && (R2 != 0 || R22 = 0 || (R10753 = 0 && R10754 = 0)) && (R2 != 0 || R22 = 0 || (R10755 = 0 && R10756 = 0)) && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R10724 + -1*R10720 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R6569 + R6565 = 0 && R114 + R6570 + R6566 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R10724 + -1*R10720 - R130 = 0 || R130 + R10724 + R10720 < 1) && (R81 + R158 + R155 = 0 || R130 + R10724 + R10720 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R10724 + -1*R10720 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R10724 + R10720 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R10724 + -1*R10720 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R10724 + R10720 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R10724 + -1*R10720 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R10724 + R10720 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R6567 + R6563 != 0 || R112 + R6568 + R6564 + -1*R10724 + -1*R10720 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R10724 + R10720 = 0)) && (R113 + R6569 + R6565 != 0 || R83 + R160 + R157 + -1*R6570 + -1*R6566 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R10398 + R10393 != 0 || R120 + R10399 + R10394 + -1*R10724 + -1*R10720 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R10724 + R10720 = 0)) && (R10727 != 0 || R2 = R10728 || R2 < 1) && (R10729 != 0 || R2 = R10730 || R2 < 1) && (R10731 != 0 || R2 = R10732 || R2 < 1) && (R10733 != 0 || R2 = R10734 || R2 < 1) && (R10735 != 0 || R2 = R10736 || R2 < 1) && (R10737 != 0 || R2 = R10738 || R2 < 1) && (R10739 != 0 || R2 = R10740 || R2 < 1) && (R10741 != 0 || R2 = R10742 || R2 < 1) && (R10743 != 0 || R2 = R10744 || R2 < 1) && (R10745 != 0 || R2 = R10746 || R2 < 1) && (R10747 != 0 || R2 = R10748 || R2 < 1) && (R10749 != 0 || R2 = R10750 || R2 < 1) && (R10751 != 0 || R2 = R10752 || R2 < 1) && (R10753 != 0 || R2 = R10754 || R2 < 1) && (R10755 != 0 || R2 = R10756 || R2 < 1) && (R23 = 0 || (R10785 = 0 && R10786 = 0)) && (R23 = 0 || (R10789 = 0 && R10790 = 0)) && (R23 = 0 || (R10791 = 0 && R10792 = 0)) && (R23 = 0 || (R10793 = 0 && R10794 = 0)) && (R23 = 0 || (R10795 = 0 && R10796 = 0)) && (R23 = 0 || (R10799 = 0 && R10800 = 0)) && (R23 = 0 || (R10801 = 0 && R10802 = 0)) && (R23 = 0 || (R10803 = 0 && R10804 = 0)) && (R23 = 0 || (R10809 = 0 && R10810 = 0)) && (R24 = 0 || (R10757 = 0 && R10758 = 0)) && (R24 = 0 || (R10759 = 0 && R10760 = 0)) && (R24 = 0 || (R10761 = 0 && R10762 = 0)) && (R24 = 0 || (R10763 = 0 && R10764 = 0)) && (R24 = 0 || (R10765 = 0 && R10766 = 0)) && (R24 = 0 || (R10767 = 0 && R10768 = 0)) && (R24 = 0 || (R10769 = 0 && R10770 = 0)) && (R24 = 0 || (R10771 = 0 && R10772 = 0)) && (R24 = 0 || (R10773 = 0 && R10774 = 0)) && (R24 = 0 || (R10775 = 0 && R10776 = 0)) && (R24 = 0 || (R10777 = 0 && R10778 = 0)) && (R24 = 0 || (R10779 = 0 && R10780 = 0)) && (R24 = 0 || (R10781 = 0 && R10782 = 0)) && (R24 = 0 || (R10783 = 0 && R10784 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R10724 + R10720 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R10724 + R10720 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R10724 + R10720 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R6567 + R6563 = 0 || (R83 + R160 + R157 = 0 && R130 + R10724 + R10720 = 0)) && (R113 + R6569 + R6565 = 0 || R83 + R160 + R157 < 1) && (R119 + R10398 + R10393 = 0 || (R83 + R160 + R157 = 0 && R130 + R10724 + R10720 = 0)) && (R123 + R10402 + R10397 = 0 || (R121 + R10400 + R10395 = 0 && R122 + R10401 + R10396 = 0)) && (R10727 = 0 || R2 < 1) && (R10729 = 0 || R2 < 1) && (R10731 = 0 || R2 < 1) && (R10733 = 0 || R2 < 1) && (R10735 = 0 || R2 < 1) && (R10737 = 0 || R2 < 1) && (R10739 = 0 || R2 < 1) && (R10741 = 0 || R2 < 1) && (R10743 = 0 || R2 < 1) && (R10745 = 0 || R2 < 1) && (R10747 = 0 || R2 < 1) && (R10749 = 0 || R2 < 1) && (R10751 = 0 || R2 < 1) && (R10753 = 0 || R2 < 1) && (R10755 = 0 || R2 < 1);
// End of Parikh automata intersection problem
