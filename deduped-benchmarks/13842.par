// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R10393, R10394, R10395, R10396, R10397, R10398, R10399, R104, R10400, R10401, R10402, R105, R10561, R10562, R10563, R10564, R10565, R10566, R10567, R10568, R10569, R10570, R10571, R10572, R10573, R10574, R10575, R10576, R10577, R10578, R10579, R10580, R10581, R10582, R10583, R10584, R10585, R10586, R10587, R10588, R10589, R10590, R10591, R10592, R10593, R10594, R10595, R10596, R10597, R10598, R10599, R10600, R10601, R10602, R10603, R10604, R10605, R10606, R10607, R10608, R10609, R10610, R10611, R10612, R10613, R10614, R10615, R10616, R10617, R10618, R10619, R10620, R10621, R10622, R10623, R10624, R10625, R10626, R10627, R10628, R10629, R10630, R10631, R10632, R10633, R10634, R10635, R10636, R10637, R10638, R10639, R10640, R10641, R10642, R10643, R10644, R10645, R10646, R10647, R10648, R10649, R10650, R10651, R10652, R10653, R10654, R10655, R10656, R10657, R10658, R10659, R10660, R10661, R10662, R10663, R10664, R10665, R10666, R10667, R10668, R10669, R10670, R10671, R10672, R10673, R10674, R10675, R10676, R10677, R10678, R10679, R10680, R10681, R10682, R10683, R10684, R10685, R10686, R10687, R10688, R10689, R10690, R10691, R10692, R10693, R10694, R10695, R10696, R10697, R10698, R10699, R10700, R10701, R10702, R10703, R10704, R10705, R10706, R10707, R10708, R10709, R10710, R10711, R10712, R10713, R10714, R10715, R10716, R10717, R10718, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R2, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R5, R63, R65, R6563, R6564, R6565, R6566, R6567, R6568, R6569, R6570, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R30 += 1 };
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R10599 += 1, R10600 += 1 };
  s0 -> s1 [0, 65535] { R10600 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R10600 += 1, R24 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R10602 += 1 };
  s0 -> s0 [0, 65535] { R10601 += 1, R10602 += 1 };
  s0 -> s2 [70, 70] { R10602 += 1 };
  s0 -> s3 [70, 70] { R10602 += 1 };
  s0 -> s1 [76, 65535] { R10602 += 1 };
  s1 -> s1 [0, 69] { R10602 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10602 += 1 };
  s1 -> s3 [70, 70] { R10602 += 1 };
  s1 -> s1 [76, 65535] { R10602 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R10602 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R10602 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R10604 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R10603 += 1, R10604 += 1 };
  s0 -> s2 [70, 70] { R10604 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R10604 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R10604 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R10604 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10604 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R10604 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R10604 += 1, R63 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R10604 += 1, R63 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R10606 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R10605 += 1, R10606 += 1 };
  s0 -> s2 [70, 70] { R10606 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R10606 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R10606 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R10606 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10606 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R10606 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R10606 += 1, R65 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R10606 += 1, R65 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R10608 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R10607 += 1, R10608 += 1 };
  s0 -> s2 [70, 70] { R10608 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R10608 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R10608 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R10608 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10608 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R10608 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R10608 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535] { R10608 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R10610 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R10609 += 1, R10610 += 1 };
  s0 -> s2 [70, 70] { R10610 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R10610 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R10610 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R10610 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10610 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R10610 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R10610 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R10610 += 1, R73 += 1, R74 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R10612 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R10611 += 1, R10612 += 1 };
  s0 -> s2 [70, 70] { R10612 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R10612 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R10612 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R10612 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10612 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R10612 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R10612 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535] { R10612 += 1, R77 += 1, R78 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R10614 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R10613 += 1, R10614 += 1 };
  s0 -> s2 [70, 70] { R10614 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R10614 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R10614 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R10614 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10614 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R10614 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R10614 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R10614 += 1, R81 += 1, R82 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R10616 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R10615 += 1, R10616 += 1 };
  s0 -> s2 [70, 70] { R10616 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R10616 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R10616 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R10616 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10616 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R10616 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R10616 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R10616 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R10618 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R10617 += 1, R10618 += 1 };
  s0 -> s2 [70, 70] { R10618 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R10618 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R10618 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R10618 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10618 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R10618 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R10618 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535] { R10618 += 1, R93 += 1, R94 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R10620 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R10619 += 1, R10620 += 1 };
  s0 -> s2 [70, 70] { R10620 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R10620 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R10620 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R10620 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10620 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R10620 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R10620 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R10620 += 1, R101 += 1, R102 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R10622 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R10621 += 1, R10622 += 1 };
  s0 -> s2 [70, 70] { R10622 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R10622 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R10622 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R10622 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10622 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R10622 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R10622 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R10622 += 1, R111 += 1, R112 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R10624 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R10623 += 1, R10624 += 1 };
  s0 -> s2 [70, 70] { R10624 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R10624 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R10624 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R10624 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10624 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R10624 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R10624 += 1, R119 += 1, R120 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R10624 += 1, R119 += 1, R120 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R10626 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R10625 += 1, R10626 += 1 };
  s0 -> s2 [70, 70] { R10626 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R10626 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R10626 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R10626 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10626 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R10626 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R10626 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R10626 += 1, R129 += 1, R130 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R10656 += 1 };
  s0 -> s0 [0, 65535] { R10655 += 1, R10656 += 1 };
  s0 -> s2 [70, 70] { R10656 += 1 };
  s0 -> s1 [71, 65535] { R10656 += 1 };
  s1 -> s1 [0, 69] { R10656 += 1 };
  s1 -> s2 [70, 70] { R10656 += 1 };
  s1 -> s1 [71, 65535] { R10656 += 1 };
  s2 -> s2 [0, 65535] { R10656 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R10658 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R10657 += 1, R10658 += 1 };
  s1 -> s1 [0, 65535] { R10658 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R10660 += 1 };
  s0 -> s0 [0, 65535] { R10659 += 1, R10660 += 1 };
  s0 -> s2 [0, 65535] { R10660 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R10660 += 1 };
  s0 -> s1 [71, 65535] { R10660 += 1 };
  s1 -> s1 [0, 69] { R10660 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R10660 += 1 };
  s1 -> s1 [71, 65535] { R10660 += 1 };
  s2 -> s1 [0, 69] { R10660 += 1 };
  s2 -> s2 [0, 65535] { R10660 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R10660 += 1 };
  s2 -> s1 [71, 65535] { R10660 += 1 };
  s3 -> s3 [0, 65535] { R10660 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R10662 += 1, R10570 += 1 };
  s0 -> s0 [0, 65535] { R10661 += 1, R10662 += 1 };
  s0 -> s2 [0, 65535] { R10662 += 1, R10569 += 1, R10570 += 1 };
  s0 -> s1 [71, 65535] { R10662 += 1, R10570 += 1 };
  s1 -> s1 [0, 69] { R10662 += 1, R10570 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R10662 += 1 };
  s1 -> s1 [71, 65535] { R10662 += 1, R10570 += 1 };
  s2 -> s1 [0, 69] { R10662 += 1, R10570 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R10662 += 1, R10569 += 1, R10570 += 1 };
  s2 -> s1 [71, 65535] { R10662 += 1, R10570 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R10664 += 1, R10571 += 1, R10572 += 1 };
  s0 -> s0 [0, 65535] { R10663 += 1, R10664 += 1 };
  s0 -> s2 [0, 65535] { R10664 += 1, R10572 += 1, R22 += 1 };
  s1 -> s1 [0, 65535] { R10664 += 1, R10571 += 1, R10572 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R10664 += 1, R10572 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R10664 += 1 };
  s2 -> s2 [0, 65535] { R10664 += 1, R10572 += 1, R22 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R10664 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R10666 += 1, R10574 += 1 };
  s0 -> s2 [0, 65535] { R10666 += 1, R10573 += 1, R10574 += 1 };
  s0 -> s0 [0, 65535] { R10665 += 1, R10666 += 1 };
  s0 -> s1 [75, 65535] { R10666 += 1, R10574 += 1 };
  s1 -> s1 [0, 70] { R10666 += 1, R10574 += 1 };
  s1 -> s1 [0, 65535] { R10666 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R10666 += 1, R10574 += 1 };
  s2 -> s1 [0, 70] { R10666 += 1, R10574 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R10666 += 1, R10573 += 1, R10574 += 1 };
  s2 -> s1 [75, 65535] { R10666 += 1, R10574 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R10668 += 1, R10576 += 1, R138 += 1 };
  s0 -> s2 [0, 65535] { R10668 += 1, R10575 += 1, R10576 += 1 };
  s0 -> s0 [0, 65535] { R10667 += 1, R10668 += 1 };
  s1 -> s1 [0, 65535] { R10668 += 1, R10576 += 1, R138 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R10668 += 1 };
  s2 -> s1 [0, 65535] { R10668 += 1, R10576 += 1, R138 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R10668 += 1, R10575 += 1, R10576 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R10668 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R10670 += 1, R10578 += 1 };
  s0 -> s2 [0, 65535] { R10670 += 1, R10578 += 1, R140 += 1 };
  s0 -> s3 [0, 65535] { R10670 += 1, R10577 += 1, R10578 += 1 };
  s0 -> s0 [0, 65535] { R10669 += 1, R10670 += 1 };
  s0 -> s1 [76, 65535] { R10670 += 1, R10578 += 1 };
  s1 -> s1 [0, 74] { R10670 += 1, R10578 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R10670 += 1 };
  s1 -> s1 [76, 65535] { R10670 += 1, R10578 += 1 };
  s2 -> s1 [0, 74] { R10670 += 1, R10578 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R10670 += 1 };
  s2 -> s2 [0, 65535] { R10670 += 1, R10578 += 1, R140 += 1 };
  s2 -> s1 [76, 65535] { R10670 += 1, R10578 += 1 };
  s3 -> s1 [0, 74] { R10670 += 1, R10578 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R10670 += 1, R10578 += 1, R140 += 1 };
  s3 -> s3 [0, 65535] { R10670 += 1, R10577 += 1, R10578 += 1 };
  s3 -> s1 [76, 65535] { R10670 += 1, R10578 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R10670 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R10672 += 1, R10579 += 1, R10580 += 1 };
  s0 -> s2 [0, 65535] { R10672 += 1, R10580 += 1, R144 += 1, R145 += 1 };
  s0 -> s0 [0, 65535] { R10671 += 1, R10672 += 1 };
  s0 -> s3 [0, 65535] { R10672 += 1, R10580 += 1, R145 += 1, R146 += 1 };
  s1 -> s1 [0, 65535] { R10672 += 1, R10579 += 1, R10580 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R10672 += 1, R10580 += 1, R144 += 1, R145 += 1 };
  s1 -> s3 [0, 65535] { R10672 += 1, R10580 += 1, R145 += 1, R146 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R10672 += 1 };
  s2 -> s2 [0, 65535] { R10672 += 1, R10580 += 1, R144 += 1, R145 += 1 };
  s2 -> s3 [0, 65535] { R10672 += 1, R10580 += 1, R145 += 1, R146 += 1 };
  s3 -> s4 [0, 65535] { R10672 += 1, R10580 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R10672 += 1 };
  s3 -> s3 [0, 65535] { R10672 += 1, R10580 += 1, R145 += 1, R146 += 1 };
  s4 -> s4 [0, 65535] { R10672 += 1, R10580 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R10672 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10672 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R10674 += 1, R10582 += 1, R150 += 1 };
  s0 -> s2 [0, 65535] { R10674 += 1, R10581 += 1, R10582 += 1 };
  s0 -> s0 [0, 65535] { R10673 += 1, R10674 += 1 };
  s0 -> s3 [0, 65535] { R10674 += 1, R10582 += 1, R149 += 1, R150 += 1 };
  s0 -> s4 [75, 75] { R10674 += 1, R10582 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R10674 += 1, R10582 += 1, R150 += 1 };
  s0 -> s1 [88, 65535] { R10674 += 1, R10582 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R10674 += 1, R10582 += 1, R150 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R10674 += 1, R10582 += 1 };
  s1 -> s7 [0, 65535] { R10674 += 1 };
  s1 -> s4 [75, 75] { R10674 += 1, R10582 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R10674 += 1, R10582 += 1, R150 += 1 };
  s1 -> s1 [88, 65535] { R10674 += 1, R10582 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R10674 += 1, R10582 += 1, R150 += 1 };
  s2 -> s2 [0, 65535] { R10674 += 1, R10581 += 1, R10582 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R10674 += 1, R10582 += 1, R149 += 1, R150 += 1 };
  s2 -> s4 [75, 75] { R10674 += 1, R10582 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R10674 += 1, R10582 += 1, R150 += 1 };
  s2 -> s1 [88, 65535] { R10674 += 1, R10582 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R10674 += 1, R10582 += 1, R150 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R10674 += 1, R10582 += 1, R149 += 1, R150 += 1 };
  s3 -> s7 [0, 65535] { R10674 += 1 };
  s3 -> s4 [75, 75] { R10674 += 1, R10582 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R10674 += 1, R10582 += 1, R150 += 1 };
  s3 -> s1 [88, 65535] { R10674 += 1, R10582 += 1, R150 += 1 };
  s4 -> s4 [0, 75] { R10674 += 1, R10582 += 1, R150 += 1 };
  s4 -> s4 [0, 65535] { R10674 += 1, R10582 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R10674 += 1 };
  s4 -> s4 [88, 65535] { R10674 += 1, R10582 += 1, R150 += 1 };
  s5 -> s5 [0, 65535] { R10674 += 1, R10582 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R10674 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R10674 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R10676 += 1, R10583 += 1, R10584 += 1 };
  s0 -> s2 [0, 65535] { R10676 += 1, R10584 += 1, R154 += 1 };
  s0 -> s0 [0, 65535] { R10675 += 1, R10676 += 1 };
  s0 -> s3 [0, 65535] { R10676 += 1, R10584 += 1 };
  s1 -> s1 [0, 65535] { R10676 += 1, R10583 += 1, R10584 += 1 };
  s1 -> s2 [0, 65535] { R10676 += 1, R10584 += 1, R154 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R10676 += 1, R10584 += 1 };
  s2 -> s2 [0, 65535] { R10676 += 1, R10584 += 1, R154 += 1 };
  s2 -> s4 [0, 65535] { R10676 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R10676 += 1, R10584 += 1 };
  s3 -> s4 [0, 65535] { R10676 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R10676 += 1, R10584 += 1 };
  s4 -> s4 [0, 65535] { R10676 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R10678 += 1, R10586 += 1, R159 += 1, R160 += 1 };
  s0 -> s0 [0, 65535] { R10677 += 1, R10678 += 1 };
  s0 -> s2 [0, 65535] { R10678 += 1, R10585 += 1, R10586 += 1 };
  s0 -> s3 [0, 65535] { R10678 += 1, R10586 += 1, R158 += 1, R159 += 1 };
  s1 -> s1 [0, 65535] { R10678 += 1, R10586 += 1, R159 += 1, R160 += 1 };
  s1 -> s4 [0, 65535] { R10678 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R10678 += 1, R10586 += 1 };
  s2 -> s1 [0, 65535] { R10678 += 1, R10586 += 1, R159 += 1, R160 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10678 += 1, R10585 += 1, R10586 += 1 };
  s2 -> s3 [0, 65535] { R10678 += 1, R10586 += 1, R158 += 1, R159 += 1 };
  s3 -> s1 [0, 65535] { R10678 += 1, R10586 += 1, R159 += 1, R160 += 1 };
  s3 -> s4 [0, 65535] { R10678 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R10678 += 1, R10586 += 1, R158 += 1, R159 += 1 };
  s4 -> s4 [0, 65535] { R10678 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R10678 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10678 += 1, R10586 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R10680 += 1, R10588 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R10680 += 1, R10588 += 1, R165 += 1, R166 += 1 };
  s0 -> s3 [0, 65535] { R10680 += 1, R10587 += 1, R10588 += 1 };
  s0 -> s4 [0, 65535] { R10680 += 1, R10588 += 1, R164 += 1, R165 += 1 };
  s0 -> s0 [0, 65535] { R10679 += 1, R10680 += 1 };
  s0 -> s1 [76, 65535] { R10680 += 1, R10588 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R10680 += 1, R10588 += 1, R165 += 1 };
  s1 -> s5 [0, 65535] { R10680 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R10680 += 1, R10588 += 1 };
  s1 -> s1 [76, 65535] { R10680 += 1, R10588 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R10680 += 1, R10588 += 1, R165 += 1 };
  s2 -> s2 [0, 65535] { R10680 += 1, R10588 += 1, R165 += 1, R166 += 1 };
  s2 -> s5 [0, 65535] { R10680 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R10680 += 1, R10588 += 1 };
  s2 -> s1 [76, 65535] { R10680 += 1, R10588 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R10680 += 1, R10588 += 1, R165 += 1 };
  s3 -> s2 [0, 65535] { R10680 += 1, R10588 += 1, R165 += 1, R166 += 1 };
  s3 -> s3 [0, 65535] { R10680 += 1, R10587 += 1, R10588 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R10680 += 1, R10588 += 1, R164 += 1, R165 += 1 };
  s3 -> s1 [76, 65535] { R10680 += 1, R10588 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R10680 += 1, R10588 += 1, R165 += 1 };
  s4 -> s2 [0, 65535] { R10680 += 1, R10588 += 1, R165 += 1, R166 += 1 };
  s4 -> s5 [0, 65535] { R10680 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R10680 += 1, R10588 += 1, R164 += 1, R165 += 1 };
  s4 -> s1 [76, 65535] { R10680 += 1, R10588 += 1, R165 += 1 };
  s5 -> s5 [0, 65535] { R10680 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R10680 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R10680 += 1, R10588 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R10682 += 1, R10590 += 1, R172 += 1, R174 += 1 };
  s0 -> s2 [0, 65535] { R10682 += 1, R10590 += 1, R171 += 1, R172 += 1 };
  s0 -> s0 [0, 65535] { R10681 += 1, R10682 += 1 };
  s0 -> s3 [0, 65535] { R10682 += 1, R10590 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s4 [0, 65535] { R10682 += 1, R10589 += 1, R10590 += 1 };
  s0 -> s1 [76, 65535] { R10682 += 1, R10590 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R10682 += 1, R10590 += 1, R172 += 1, R174 += 1 };
  s1 -> s6 [0, 65535] { R10682 += 1, R10590 += 1 };
  s1 -> s1 [0, 65535] { R10682 += 1, R10590 += 1, R172 += 1 };
  s1 -> s7 [0, 65535] { R10682 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R10682 += 1, R10590 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R10682 += 1, R10590 += 1, R172 += 1, R174 += 1 };
  s2 -> s2 [0, 65535] { R10682 += 1, R10590 += 1, R171 += 1, R172 += 1 };
  s2 -> s3 [0, 65535] { R10682 += 1, R10590 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s7 [0, 65535] { R10682 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [76, 65535] { R10682 += 1, R10590 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R10682 += 1, R10590 += 1, R172 += 1, R174 += 1 };
  s3 -> s6 [0, 65535] { R10682 += 1, R10590 += 1 };
  s3 -> s3 [0, 65535] { R10682 += 1, R10590 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s7 [0, 65535] { R10682 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [76, 65535] { R10682 += 1, R10590 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R10682 += 1, R10590 += 1, R172 += 1, R174 += 1 };
  s4 -> s2 [0, 65535] { R10682 += 1, R10590 += 1, R171 += 1, R172 += 1 };
  s4 -> s3 [0, 65535] { R10682 += 1, R10590 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s4 [0, 65535] { R10682 += 1, R10589 += 1, R10590 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s1 [76, 65535] { R10682 += 1, R10590 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10682 += 1, R10590 += 1 };
  s6 -> s7 [0, 65535] { R10682 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R10682 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R10684 += 1, R10592 += 1 };
  s0 -> s0 [0, 65535] { R10683 += 1, R10684 += 1 };
  s0 -> s2 [0, 65535] { R10684 += 1, R10592 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s0 -> s3 [0, 65535] { R10684 += 1, R10591 += 1, R10592 += 1 };
  s0 -> s4 [0, 65535] { R10684 += 1, R10592 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s1 -> s1 [0, 65535] { R10684 += 1, R10592 += 1 };
  s1 -> s5 [0, 65535] { R10684 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s1 [0, 65535] { R10684 += 1, R10592 += 1 };
  s2 -> s5 [0, 65535] { R10684 += 1 };
  s2 -> s2 [0, 65535] { R10684 += 1, R10592 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R10684 += 1, R10592 += 1, R181 += 1 };
  s3 -> s1 [0, 65535] { R10684 += 1, R10592 += 1 };
  s3 -> s2 [0, 65535] { R10684 += 1, R10592 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R10684 += 1, R10591 += 1, R10592 += 1 };
  s3 -> s4 [0, 65535] { R10684 += 1, R10592 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s4 -> s1 [0, 65535] { R10684 += 1, R10592 += 1 };
  s4 -> s5 [0, 65535] { R10684 += 1 };
  s4 -> s2 [0, 65535] { R10684 += 1, R10592 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R10684 += 1, R10592 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s5 -> s5 [0, 65535] { R10684 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s1 [0, 65535] { R10684 += 1, R10592 += 1 };
  s7 -> s5 [0, 65535] { R10684 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R10684 += 1, R10592 += 1, R181 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R10686 += 1, R10594 += 1, R6568 += 1, R6570 += 1 };
  s0 -> s2 [0, 65535] { R10686 += 1, R10593 += 1, R10594 += 1 };
  s0 -> s0 [0, 65535] { R10685 += 1, R10686 += 1 };
  s0 -> s3 [0, 65535] { R10686 += 1, R10594 += 1 };
  s0 -> s1 [0, 65535] { R10686 += 1, R10594 += 1, R6568 += 1 };
  s0 -> s1 [87, 65535] { R10686 += 1, R10594 += 1, R6568 += 1, R6570 += 1 };
  s1 -> s1 [0, 75] { R10686 += 1, R10594 += 1, R6568 += 1, R6570 += 1 };
  s1 -> s3 [0, 65535] { R10686 += 1, R10594 += 1 };
  s1 -> s4 [0, 65535] { R10686 += 1 };
  s1 -> s1 [0, 65535] { R10686 += 1, R10594 += 1, R6568 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [87, 65535] { R10686 += 1, R10594 += 1, R6568 += 1, R6570 += 1 };
  s2 -> s1 [0, 75] { R10686 += 1, R10594 += 1, R6568 += 1, R6570 += 1 };
  s2 -> s2 [0, 65535] { R10686 += 1, R10593 += 1, R10594 += 1 };
  s2 -> s3 [0, 65535] { R10686 += 1, R10594 += 1 };
  s2 -> s1 [0, 65535] { R10686 += 1, R10594 += 1, R6568 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [87, 65535] { R10686 += 1, R10594 += 1, R6568 += 1, R6570 += 1 };
  s3 -> s3 [0, 65535] { R10686 += 1, R10594 += 1 };
  s3 -> s4 [0, 65535] { R10686 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10686 += 1 };
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R10688 += 1, R10596 += 1, R10399 += 1, R10400 += 1, R10401 += 1 };
  s0 -> s2 [0, 65535] { R10688 += 1, R10596 += 1, R10398 += 1, R10399 += 1 };
  s0 -> s0 [0, 65535] { R10687 += 1, R10688 += 1 };
  s0 -> s3 [0, 65535] { R10688 += 1, R10596 += 1, R10399 += 1, R10401 += 1, R10402 += 1 };
  s0 -> s4 [0, 65535] { R10688 += 1, R10595 += 1, R10596 += 1 };
  s1 -> s1 [0, 65535] { R10688 += 1, R10596 += 1, R10399 += 1, R10400 += 1, R10401 += 1 };
  s1 -> s6 [0, 65535] { R10688 += 1 };
  s1 -> s3 [0, 65535] { R10688 += 1, R10596 += 1, R10399 += 1, R10401 += 1, R10402 += 1 };
  s1 -> s7 [0, 65535] { R10688 += 1, R10596 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R10688 += 1, R10596 += 1, R10399 += 1, R10400 += 1, R10401 += 1 };
  s2 -> s2 [0, 65535] { R10688 += 1, R10596 += 1, R10398 += 1, R10399 += 1 };
  s2 -> s6 [0, 65535] { R10688 += 1 };
  s2 -> s3 [0, 65535] { R10688 += 1, R10596 += 1, R10399 += 1, R10401 += 1, R10402 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R10688 += 1 };
  s3 -> s3 [0, 65535] { R10688 += 1, R10596 += 1, R10399 += 1, R10401 += 1, R10402 += 1 };
  s3 -> s7 [0, 65535] { R10688 += 1, R10596 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s8 [0, 65535] { R10688 += 1, R10596 += 1, R10399 += 1 };
  s4 -> s1 [0, 65535] { R10688 += 1, R10596 += 1, R10399 += 1, R10400 += 1, R10401 += 1 };
  s4 -> s2 [0, 65535] { R10688 += 1, R10596 += 1, R10398 += 1, R10399 += 1 };
  s4 -> s3 [0, 65535] { R10688 += 1, R10596 += 1, R10399 += 1, R10401 += 1, R10402 += 1 };
  s4 -> s4 [0, 65535] { R10688 += 1, R10595 += 1, R10596 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10688 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R10688 += 1 };
  s7 -> s7 [0, 65535] { R10688 += 1, R10596 += 1 };
  s7 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R10688 += 1 };
  s8 -> s7 [0, 65535] { R10688 += 1, R10596 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s8 [0, 65535] { R10688 += 1, R10596 += 1, R10399 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 65535] { R10690 += 1, R10597 += 1, R10598 += 1 };
  s0 -> s0 [0, 65535] { R10689 += 1, R10690 += 1 };
  s0 -> s2 [0, 65535] { R10690 += 1, R10598 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R10690 += 1, R10597 += 1, R10598 += 1 };
  s1 -> s2 [0, 65535] { R10690 += 1, R10598 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R10690 += 1 };
  s2 -> s2 [0, 65535] { R10690 += 1, R10598 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R10690 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65535] { R10692 += 1, R10627 += 1, R10628 += 1 };
  s0 -> s0 [0, 65535] { R10691 += 1, R10692 += 1 };
  s0 -> s2 [0, 65535] { R10692 += 1, R10628 += 1, R23 += 1 };
  s1 -> s1 [0, 65535] { R10692 += 1, R10627 += 1, R10628 += 1 };
  s1 -> s2 [0, 65535] { R10692 += 1, R10628 += 1, R23 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R10692 += 1, R10628 += 1, R23 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R10692 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R10692 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R10694 += 1, R10630 += 1 };
  s0 -> s2 [0, 65535] { R10694 += 1, R10629 += 1, R10630 += 1 };
  s0 -> s0 [0, 65535] { R10693 += 1, R10694 += 1 };
  s0 -> s3 [70, 70] { R10694 += 1, R10630 += 1 };
  s0 -> s4 [70, 70] { R10694 += 1, R10630 += 1 };
  s0 -> s5 [75, 75] { R10694 += 1, R10630 += 1 };
  s0 -> s1 [76, 65535] { R10694 += 1, R10630 += 1 };
  s1 -> s1 [0, 69] { R10694 += 1, R10630 += 1 };
  s1 -> s3 [70, 70] { R10694 += 1, R10630 += 1 };
  s1 -> s4 [70, 70] { R10694 += 1, R10630 += 1 };
  s1 -> s5 [75, 75] { R10694 += 1, R10630 += 1 };
  s1 -> s1 [76, 65535] { R10694 += 1, R10630 += 1 };
  s2 -> s1 [0, 69] { R10694 += 1, R10630 += 1 };
  s2 -> s2 [0, 65535] { R10694 += 1, R10629 += 1, R10630 += 1 };
  s2 -> s3 [70, 70] { R10694 += 1, R10630 += 1 };
  s2 -> s4 [70, 70] { R10694 += 1, R10630 += 1 };
  s2 -> s5 [75, 75] { R10694 += 1, R10630 += 1 };
  s2 -> s1 [76, 65535] { R10694 += 1, R10630 += 1 };
  s4 -> s4 [0, 70] { R10694 += 1, R10630 += 1 };
  s4 -> s7 [75, 75] { R10694 += 1, R10630 += 1 };
  s4 -> s4 [76, 65535] { R10694 += 1, R10630 += 1 };
  s5 -> s5 [0, 69] { R10694 += 1, R10630 += 1 };
  s5 -> s5 [0, 65535] { R10694 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R10694 += 1, R10630 += 1 };
  s5 -> s8 [70, 70] { R10694 += 1, R10630 += 1 };
  s5 -> s5 [75, 65535] { R10694 += 1, R10630 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R10694 += 1, R10630 += 1 };
  s7 -> s7 [0, 65535] { R10694 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R10694 += 1, R10630 += 1 };
  s8 -> s8 [0, 65535] { R10694 += 1 };
  s8 -> s6 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R10696 += 1, R10632 += 1, R137 += 1 };
  s0 -> s2 [0, 65535] { R10696 += 1, R10631 += 1, R10632 += 1 };
  s0 -> s0 [0, 65535] { R10695 += 1, R10696 += 1 };
  s0 -> s3 [70, 70] { R10696 += 1, R10632 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R10696 += 1, R10632 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R10696 += 1, R10632 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R10696 += 1, R10632 += 1, R137 += 1 };
  s1 -> s1 [0, 65535] { R10696 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R10696 += 1, R10632 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R10696 += 1, R10632 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R10696 += 1, R10632 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R10696 += 1, R10632 += 1, R137 += 1 };
  s2 -> s2 [0, 65535] { R10696 += 1, R10631 += 1, R10632 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R10696 += 1, R10632 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R10696 += 1, R10632 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R10696 += 1, R10632 += 1, R137 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R10696 += 1 };
  s4 -> s5 [0, 65535] { R10696 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R10696 += 1, R10632 += 1, R137 += 1 };
  s5 -> s5 [0, 65535] { R10696 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R10698 += 1, R10634 += 1, R139 += 1 };
  s0 -> s2 [0, 65535] { R10698 += 1, R10633 += 1, R10634 += 1 };
  s0 -> s0 [0, 65535] { R10697 += 1, R10698 += 1 };
  s0 -> s3 [70, 70] { R10698 += 1, R10634 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R10698 += 1, R10634 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R10698 += 1, R10634 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R10698 += 1, R10634 += 1, R139 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R10698 += 1 };
  s1 -> s3 [70, 70] { R10698 += 1, R10634 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R10698 += 1, R10634 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R10698 += 1, R10634 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R10698 += 1, R10634 += 1, R139 += 1 };
  s2 -> s2 [0, 65535] { R10698 += 1, R10633 += 1, R10634 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R10698 += 1, R10634 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R10698 += 1, R10634 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R10698 += 1, R10634 += 1, R139 += 1 };
  s3 -> s3 [0, 65535] { R10698 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R10698 += 1, R10634 += 1, R139 += 1 };
  s4 -> s5 [0, 65535] { R10698 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R10698 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R10700 += 1, R10636 += 1, R141 += 1, R142 += 1 };
  s0 -> s0 [0, 65535] { R10699 += 1, R10700 += 1 };
  s0 -> s2 [0, 65535] { R10700 += 1, R10635 += 1, R10636 += 1 };
  s0 -> s3 [70, 70] { R10700 += 1, R10636 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R10700 += 1, R10636 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R10700 += 1, R10636 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R10700 += 1, R10636 += 1, R141 += 1, R142 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R10700 += 1 };
  s1 -> s3 [70, 70] { R10700 += 1, R10636 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R10700 += 1, R10636 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R10700 += 1, R10636 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R10700 += 1, R10636 += 1, R141 += 1, R142 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10700 += 1, R10635 += 1, R10636 += 1 };
  s2 -> s3 [70, 70] { R10700 += 1, R10636 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R10700 += 1, R10636 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R10700 += 1, R10636 += 1, R141 += 1, R142 += 1 };
  s3 -> s3 [0, 65535] { R10700 += 1, R10636 += 1, R141 += 1, R142 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R10700 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10700 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10700 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R10702 += 1, R10638 += 1, R147 += 1, R148 += 1 };
  s0 -> s0 [0, 65535] { R10701 += 1, R10702 += 1 };
  s0 -> s2 [0, 65535] { R10702 += 1, R10637 += 1, R10638 += 1 };
  s0 -> s3 [70, 70] { R10702 += 1, R10638 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R10702 += 1, R10638 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R10702 += 1, R10638 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R10702 += 1, R10638 += 1, R147 += 1, R148 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R10702 += 1 };
  s1 -> s3 [70, 70] { R10702 += 1, R10638 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R10702 += 1, R10638 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R10702 += 1, R10638 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R10702 += 1, R10638 += 1, R147 += 1, R148 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10702 += 1, R10637 += 1, R10638 += 1 };
  s2 -> s3 [70, 70] { R10702 += 1, R10638 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R10702 += 1, R10638 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R10702 += 1, R10638 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R10702 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10702 += 1, R10638 += 1, R147 += 1, R148 += 1 };
  s4 -> s6 [0, 65535] { R10702 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10702 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R10704 += 1, R10640 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R10704 += 1, R10640 += 1, R151 += 1, R152 += 1 };
  s0 -> s0 [0, 65535] { R10703 += 1, R10704 += 1 };
  s0 -> s3 [0, 65535] { R10704 += 1, R10639 += 1, R10640 += 1 };
  s0 -> s4 [70, 70] { R10704 += 1, R10640 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R10704 += 1, R10640 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R10704 += 1, R10640 += 1, R151 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R10704 += 1, R10640 += 1, R151 += 1, R152 += 1 };
  s0 -> s1 [71, 74] { R10704 += 1, R10640 += 1, R152 += 1 };
  s0 -> s2 [71, 65535] { R10704 += 1, R10640 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R10704 += 1, R10640 += 1, R152 += 1 };
  s0 -> s1 [76, 65535] { R10704 += 1, R10640 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R10704 += 1, R10640 += 1, R152 += 1 };
  s1 -> s4 [70, 70] { R10704 += 1, R10640 += 1, R152 += 1 };
  s1 -> s5 [70, 70] { R10704 += 1, R10640 += 1, R152 += 1 };
  s1 -> s1 [71, 74] { R10704 += 1, R10640 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R10704 += 1, R10640 += 1, R152 += 1 };
  s1 -> s1 [76, 65535] { R10704 += 1, R10640 += 1, R152 += 1 };
  s2 -> s1 [0, 69] { R10704 += 1, R10640 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R10704 += 1, R10640 += 1, R151 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R10704 += 1, R10640 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R10704 += 1, R10640 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R10704 += 1, R10640 += 1, R151 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R10704 += 1, R10640 += 1, R151 += 1, R152 += 1 };
  s2 -> s1 [71, 74] { R10704 += 1, R10640 += 1, R152 += 1 };
  s2 -> s2 [71, 65535] { R10704 += 1, R10640 += 1, R151 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R10704 += 1, R10640 += 1, R152 += 1 };
  s2 -> s1 [76, 65535] { R10704 += 1, R10640 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R10704 += 1, R10640 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R10704 += 1, R10640 += 1, R151 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R10704 += 1, R10639 += 1, R10640 += 1 };
  s3 -> s4 [70, 70] { R10704 += 1, R10640 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R10704 += 1, R10640 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R10704 += 1, R10640 += 1, R151 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R10704 += 1, R10640 += 1, R151 += 1, R152 += 1 };
  s3 -> s1 [71, 74] { R10704 += 1, R10640 += 1, R152 += 1 };
  s3 -> s2 [71, 65535] { R10704 += 1, R10640 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R10704 += 1, R10640 += 1, R152 += 1 };
  s3 -> s1 [76, 65535] { R10704 += 1, R10640 += 1, R152 += 1 };
  s4 -> s4 [0, 74] { R10704 += 1, R10640 += 1, R152 += 1 };
  s4 -> s11 [75, 75] { R10704 += 1, R10640 += 1, R152 += 1 };
  s4 -> s4 [76, 65535] { R10704 += 1, R10640 += 1, R152 += 1 };
  s6 -> s4 [0, 74] { R10704 += 1, R10640 += 1, R152 += 1 };
  s6 -> s6 [0, 65535] { R10704 += 1, R10640 += 1, R151 += 1, R152 += 1 };
  s6 -> s11 [75, 75] { R10704 += 1, R10640 += 1, R152 += 1 };
  s6 -> s4 [76, 65535] { R10704 += 1, R10640 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R10704 += 1, R10640 += 1, R152 += 1 };
  s8 -> s8 [0, 65535] { R10704 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R10704 += 1, R10640 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R10704 += 1, R10640 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R10704 += 1, R10640 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R10704 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R10704 += 1, R10640 += 1, R152 += 1 };
  s11 -> s12 [0, 65535] { R10704 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R10704 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R10706 += 1, R10642 += 1, R155 += 1, R156 += 1 };
  s0 -> s0 [0, 65535] { R10705 += 1, R10706 += 1 };
  s0 -> s2 [0, 65535] { R10706 += 1, R10641 += 1, R10642 += 1 };
  s0 -> s3 [70, 70] { R10706 += 1, R10642 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R10706 += 1, R10642 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R10706 += 1, R10642 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R10706 += 1, R10642 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 65535] { R10706 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R10706 += 1, R10642 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R10706 += 1, R10642 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R10706 += 1, R10642 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R10706 += 1, R10642 += 1, R155 += 1, R156 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10706 += 1, R10641 += 1, R10642 += 1 };
  s2 -> s3 [70, 70] { R10706 += 1, R10642 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R10706 += 1, R10642 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R10706 += 1, R10642 += 1, R155 += 1, R156 += 1 };
  s3 -> s3 [0, 65535] { R10706 += 1, R10642 += 1, R155 += 1, R156 += 1 };
  s3 -> s6 [0, 65535] { R10706 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10706 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10706 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R10708 += 1, R10644 += 1, R161 += 1, R162 += 1 };
  s0 -> s2 [0, 65535] { R10708 += 1, R10643 += 1, R10644 += 1 };
  s0 -> s0 [0, 65535] { R10707 += 1, R10708 += 1 };
  s0 -> s3 [70, 70] { R10708 += 1, R10644 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R10708 += 1, R10644 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R10708 += 1, R10644 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R10708 += 1, R10644 += 1, R161 += 1, R162 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R10708 += 1 };
  s1 -> s3 [70, 70] { R10708 += 1, R10644 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R10708 += 1, R10644 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R10708 += 1, R10644 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R10708 += 1, R10644 += 1, R161 += 1, R162 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R10708 += 1, R10643 += 1, R10644 += 1 };
  s2 -> s3 [70, 70] { R10708 += 1, R10644 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R10708 += 1, R10644 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R10708 += 1, R10644 += 1, R161 += 1, R162 += 1 };
  s3 -> s3 [0, 65535] { R10708 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R10708 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R10708 += 1, R10644 += 1, R161 += 1, R162 += 1 };
  s5 -> s5 [0, 65535] { R10708 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R10710 += 1, R10646 += 1, R167 += 1, R168 += 1 };
  s0 -> s0 [0, 65535] { R10709 += 1, R10710 += 1 };
  s0 -> s2 [0, 65535] { R10710 += 1, R10645 += 1, R10646 += 1 };
  s0 -> s3 [70, 70] { R10710 += 1, R10646 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R10710 += 1, R10646 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R10710 += 1, R10646 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R10710 += 1, R10646 += 1, R167 += 1, R168 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R10710 += 1 };
  s1 -> s3 [70, 70] { R10710 += 1, R10646 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R10710 += 1, R10646 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R10710 += 1, R10646 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R10710 += 1, R10646 += 1, R167 += 1, R168 += 1 };
  s2 -> s2 [0, 65535] { R10710 += 1, R10645 += 1, R10646 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R10710 += 1, R10646 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R10710 += 1, R10646 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R10710 += 1, R10646 += 1, R167 += 1, R168 += 1 };
  s3 -> s3 [0, 65535] { R10710 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R10710 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R10710 += 1, R10646 += 1, R167 += 1, R168 += 1 };
  s5 -> s5 [0, 65535] { R10710 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R10712 += 1, R10648 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s2 [0, 69] { R10712 += 1, R10648 += 1, R175 += 1, R176 += 1 };
  s0 -> s0 [0, 65535] { R10711 += 1, R10712 += 1 };
  s0 -> s3 [0, 65535] { R10712 += 1, R10647 += 1, R10648 += 1 };
  s0 -> s4 [70, 70] { R10712 += 1, R10648 += 1, R175 += 1, R176 += 1 };
  s0 -> s5 [70, 70] { R10712 += 1, R10648 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s6 [70, 70] { R10712 += 1, R10648 += 1, R175 += 1, R176 += 1 };
  s0 -> s7 [70, 70] { R10712 += 1, R10648 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s1 [71, 65535] { R10712 += 1, R10648 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s2 [71, 65535] { R10712 += 1, R10648 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [0, 69] { R10712 += 1, R10648 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s1 [0, 65535] { R10712 += 1 };
  s1 -> s5 [70, 70] { R10712 += 1, R10648 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s7 [70, 70] { R10712 += 1, R10648 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s1 [71, 65535] { R10712 += 1, R10648 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s1 [0, 69] { R10712 += 1, R10648 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s2 [0, 69] { R10712 += 1, R10648 += 1, R175 += 1, R176 += 1 };
  s2 -> s4 [70, 70] { R10712 += 1, R10648 += 1, R175 += 1, R176 += 1 };
  s2 -> s5 [70, 70] { R10712 += 1, R10648 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s6 [70, 70] { R10712 += 1, R10648 += 1, R175 += 1, R176 += 1 };
  s2 -> s7 [70, 70] { R10712 += 1, R10648 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s1 [71, 65535] { R10712 += 1, R10648 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s2 [71, 65535] { R10712 += 1, R10648 += 1, R175 += 1, R176 += 1 };
  s3 -> s1 [0, 69] { R10712 += 1, R10648 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s2 [0, 69] { R10712 += 1, R10648 += 1, R175 += 1, R176 += 1 };
  s3 -> s3 [0, 65535] { R10712 += 1, R10647 += 1, R10648 += 1 };
  s3 -> s4 [70, 70] { R10712 += 1, R10648 += 1, R175 += 1, R176 += 1 };
  s3 -> s5 [70, 70] { R10712 += 1, R10648 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s6 [70, 70] { R10712 += 1, R10648 += 1, R175 += 1, R176 += 1 };
  s3 -> s7 [70, 70] { R10712 += 1, R10648 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s1 [71, 65535] { R10712 += 1, R10648 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s2 [71, 65535] { R10712 += 1, R10648 += 1, R175 += 1, R176 += 1 };
  s5 -> s5 [0, 65535] { R10712 += 1, R10648 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s9 [0, 65535] { R10712 += 1 };
  s6 -> s5 [0, 65535] { R10712 += 1, R10648 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s6 -> s6 [0, 65535] { R10712 += 1, R10648 += 1, R175 += 1, R176 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R10712 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R10712 += 1 };
  accepting s8, s5, s9, s1, s7;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R10714 += 1, R10650 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s2 [0, 69] { R10714 += 1, R10650 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s3 [0, 69] { R10714 += 1, R10650 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s0 [0, 65535] { R10713 += 1, R10714 += 1 };
  s0 -> s4 [0, 65535] { R10714 += 1, R10649 += 1, R10650 += 1 };
  s0 -> s5 [70, 70] { R10714 += 1, R10650 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s6 [70, 70] { R10714 += 1, R10650 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s7 [70, 70] { R10714 += 1, R10650 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s8 [70, 70] { R10714 += 1, R10650 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s9 [70, 70] { R10714 += 1, R10650 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s10 [70, 70] { R10714 += 1, R10650 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s3 [71, 75] { R10714 += 1, R10650 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s1 [71, 65535] { R10714 += 1, R10650 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s2 [71, 65535] { R10714 += 1, R10650 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s3 [87, 65535] { R10714 += 1, R10650 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s1 [0, 69] { R10714 += 1, R10650 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s1 -> s3 [0, 69] { R10714 += 1, R10650 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s5 [70, 70] { R10714 += 1, R10650 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s1 -> s6 [70, 70] { R10714 += 1, R10650 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s9 [70, 70] { R10714 += 1, R10650 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s10 [70, 70] { R10714 += 1, R10650 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s1 -> s3 [71, 75] { R10714 += 1, R10650 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s1 [71, 65535] { R10714 += 1, R10650 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s1 -> s3 [87, 65535] { R10714 += 1, R10650 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s1 [0, 69] { R10714 += 1, R10650 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s2 [0, 69] { R10714 += 1, R10650 += 1, R6563 += 1, R6564 += 1 };
  s2 -> s3 [0, 69] { R10714 += 1, R10650 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s5 [70, 70] { R10714 += 1, R10650 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s6 [70, 70] { R10714 += 1, R10650 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s7 [70, 70] { R10714 += 1, R10650 += 1, R6563 += 1, R6564 += 1 };
  s2 -> s8 [70, 70] { R10714 += 1, R10650 += 1, R6563 += 1, R6564 += 1 };
  s2 -> s9 [70, 70] { R10714 += 1, R10650 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s10 [70, 70] { R10714 += 1, R10650 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s3 [71, 75] { R10714 += 1, R10650 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s1 [71, 65535] { R10714 += 1, R10650 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s2 [71, 65535] { R10714 += 1, R10650 += 1, R6563 += 1, R6564 += 1 };
  s2 -> s3 [87, 65535] { R10714 += 1, R10650 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s3 [0, 69] { R10714 += 1, R10650 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s11 [0, 65535];
  s3 -> s3 [0, 65535] { R10714 += 1 };
  s3 -> s6 [70, 70] { R10714 += 1, R10650 += 1, R6564 += 1 };
  s3 -> s9 [70, 70] { R10714 += 1, R10650 += 1, R6564 += 1 };
  s3 -> s3 [71, 75] { R10714 += 1, R10650 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s3 [71, 65535] { R10714 += 1, R10650 += 1, R6564 += 1 };
  s3 -> s3 [87, 65535] { R10714 += 1, R10650 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s1 [0, 69] { R10714 += 1, R10650 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s2 [0, 69] { R10714 += 1, R10650 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s3 [0, 69] { R10714 += 1, R10650 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s4 [0, 65535] { R10714 += 1, R10649 += 1, R10650 += 1 };
  s4 -> s5 [70, 70] { R10714 += 1, R10650 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s6 [70, 70] { R10714 += 1, R10650 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s7 [70, 70] { R10714 += 1, R10650 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s8 [70, 70] { R10714 += 1, R10650 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s9 [70, 70] { R10714 += 1, R10650 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s10 [70, 70] { R10714 += 1, R10650 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s3 [71, 75] { R10714 += 1, R10650 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s1 [71, 65535] { R10714 += 1, R10650 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s2 [71, 65535] { R10714 += 1, R10650 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s3 [87, 65535] { R10714 += 1, R10650 += 1, R6564 += 1, R6566 += 1 };
  s5 -> s9 [0, 75] { R10714 += 1, R10650 += 1, R6564 += 1, R6566 += 1 };
  s5 -> s5 [0, 65535] { R10714 += 1, R10650 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s5 -> s9 [87, 65535] { R10714 += 1, R10650 += 1, R6564 += 1, R6566 += 1 };
  s6 -> s6 [0, 65535] { R10714 += 1 };
  s6 -> s11 [0, 65535];
  s8 -> s9 [0, 75] { R10714 += 1, R10650 += 1, R6564 += 1, R6566 += 1 };
  s8 -> s5 [0, 65535] { R10714 += 1, R10650 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s8 -> s8 [0, 65535] { R10714 += 1, R10650 += 1, R6563 += 1, R6564 += 1 };
  s8 -> s9 [87, 65535] { R10714 += 1, R10650 += 1, R6564 += 1, R6566 += 1 };
  s9 -> s9 [0, 75] { R10714 += 1, R10650 += 1, R6564 += 1, R6566 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s12 [0, 65535] { R10714 += 1 };
  s9 -> s9 [0, 65535] { R10714 += 1, R10650 += 1, R6564 += 1 };
  s9 -> s9 [87, 65535] { R10714 += 1, R10650 += 1, R6564 += 1, R6566 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R10714 += 1 };
  accepting s3, s12, s9, s6, s11;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R10716 += 1, R10652 += 1, R10393 += 1, R10394 += 1 };
  s0 -> s2 [0, 65535] { R10716 += 1, R10651 += 1, R10652 += 1 };
  s0 -> s0 [0, 65535] { R10715 += 1, R10716 += 1 };
  s0 -> s3 [70, 70] { R10716 += 1, R10652 += 1, R10393 += 1, R10394 += 1 };
  s0 -> s4 [70, 70] { R10716 += 1, R10652 += 1, R10393 += 1, R10394 += 1 };
  s0 -> s1 [71, 65535] { R10716 += 1, R10652 += 1, R10393 += 1, R10394 += 1 };
  s1 -> s1 [0, 69] { R10716 += 1, R10652 += 1, R10393 += 1, R10394 += 1 };
  s1 -> s1 [0, 65535] { R10716 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R10716 += 1, R10652 += 1, R10393 += 1, R10394 += 1 };
  s1 -> s4 [70, 70] { R10716 += 1, R10652 += 1, R10393 += 1, R10394 += 1 };
  s1 -> s1 [71, 65535] { R10716 += 1, R10652 += 1, R10393 += 1, R10394 += 1 };
  s2 -> s1 [0, 69] { R10716 += 1, R10652 += 1, R10393 += 1, R10394 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10716 += 1, R10651 += 1, R10652 += 1 };
  s2 -> s3 [70, 70] { R10716 += 1, R10652 += 1, R10393 += 1, R10394 += 1 };
  s2 -> s4 [70, 70] { R10716 += 1, R10652 += 1, R10393 += 1, R10394 += 1 };
  s2 -> s1 [71, 65535] { R10716 += 1, R10652 += 1, R10393 += 1, R10394 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R10716 += 1 };
  s3 -> s3 [0, 65535] { R10716 += 1, R10652 += 1, R10393 += 1, R10394 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10716 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10716 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s0 -> s2 [0, 69] { R10718 += 1, R10654 += 1, R10561 += 1, R10562 += 1 };
  s0 -> s3 [0, 69] { R10718 += 1, R10654 += 1, R10562 += 1, R10563 += 1, R10564 += 1 };
  s0 -> s0 [0, 65535] { R10717 += 1, R10718 += 1 };
  s0 -> s4 [0, 65535] { R10718 += 1, R10653 += 1, R10654 += 1 };
  s0 -> s5 [70, 70] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s0 -> s6 [70, 70] { R10718 += 1, R10654 += 1, R10562 += 1, R10563 += 1, R10564 += 1 };
  s0 -> s7 [70, 70] { R10718 += 1, R10654 += 1, R10561 += 1, R10562 += 1 };
  s0 -> s8 [70, 70] { R10718 += 1, R10654 += 1, R10561 += 1, R10562 += 1 };
  s0 -> s9 [70, 70] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s0 -> s10 [70, 70] { R10718 += 1, R10654 += 1, R10562 += 1, R10563 += 1, R10564 += 1 };
  s0 -> s1 [71, 74] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s0 -> s2 [71, 65535] { R10718 += 1, R10654 += 1, R10561 += 1, R10562 += 1 };
  s0 -> s3 [71, 65535] { R10718 += 1, R10654 += 1, R10562 += 1, R10563 += 1, R10564 += 1 };
  s0 -> s11 [75, 75] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s0 -> s12 [87, 87] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s0 -> s1 [88, 65535] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s1 -> s1 [0, 69] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s1 -> s5 [70, 70] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s1 -> s9 [70, 70] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s1 -> s1 [71, 74] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s1 -> s11 [75, 75] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s1 -> s12 [87, 87] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s1 -> s1 [88, 65535] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s2 -> s1 [0, 69] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s2 -> s2 [0, 69] { R10718 += 1, R10654 += 1, R10561 += 1, R10562 += 1 };
  s2 -> s3 [0, 69] { R10718 += 1, R10654 += 1, R10562 += 1, R10563 += 1, R10564 += 1 };
  s2 -> s5 [70, 70] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s2 -> s6 [70, 70] { R10718 += 1, R10654 += 1, R10562 += 1, R10563 += 1, R10564 += 1 };
  s2 -> s7 [70, 70] { R10718 += 1, R10654 += 1, R10561 += 1, R10562 += 1 };
  s2 -> s8 [70, 70] { R10718 += 1, R10654 += 1, R10561 += 1, R10562 += 1 };
  s2 -> s9 [70, 70] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s2 -> s10 [70, 70] { R10718 += 1, R10654 += 1, R10562 += 1, R10563 += 1, R10564 += 1 };
  s2 -> s1 [71, 74] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s2 -> s2 [71, 65535] { R10718 += 1, R10654 += 1, R10561 += 1, R10562 += 1 };
  s2 -> s3 [71, 65535] { R10718 += 1, R10654 += 1, R10562 += 1, R10563 += 1, R10564 += 1 };
  s2 -> s11 [75, 75] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s2 -> s12 [87, 87] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s2 -> s1 [88, 65535] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s3 -> s1 [0, 69] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s3 -> s3 [0, 69] { R10718 += 1, R10654 += 1, R10562 += 1, R10563 += 1, R10564 += 1 };
  s3 -> s5 [70, 70] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s3 -> s6 [70, 70] { R10718 += 1, R10654 += 1, R10562 += 1, R10563 += 1, R10564 += 1 };
  s3 -> s9 [70, 70] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s3 -> s10 [70, 70] { R10718 += 1, R10654 += 1, R10562 += 1, R10563 += 1, R10564 += 1 };
  s3 -> s1 [71, 74] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s3 -> s3 [71, 65535] { R10718 += 1, R10654 += 1, R10562 += 1, R10563 += 1, R10564 += 1 };
  s3 -> s11 [75, 75] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s3 -> s12 [87, 87] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s3 -> s1 [88, 65535] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s4 -> s1 [0, 69] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s4 -> s2 [0, 69] { R10718 += 1, R10654 += 1, R10561 += 1, R10562 += 1 };
  s4 -> s3 [0, 69] { R10718 += 1, R10654 += 1, R10562 += 1, R10563 += 1, R10564 += 1 };
  s4 -> s4 [0, 65535] { R10718 += 1, R10653 += 1, R10654 += 1 };
  s4 -> s5 [70, 70] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s4 -> s6 [70, 70] { R10718 += 1, R10654 += 1, R10562 += 1, R10563 += 1, R10564 += 1 };
  s4 -> s7 [70, 70] { R10718 += 1, R10654 += 1, R10561 += 1, R10562 += 1 };
  s4 -> s8 [70, 70] { R10718 += 1, R10654 += 1, R10561 += 1, R10562 += 1 };
  s4 -> s9 [70, 70] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s4 -> s10 [70, 70] { R10718 += 1, R10654 += 1, R10562 += 1, R10563 += 1, R10564 += 1 };
  s4 -> s1 [71, 74] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s4 -> s2 [71, 65535] { R10718 += 1, R10654 += 1, R10561 += 1, R10562 += 1 };
  s4 -> s3 [71, 65535] { R10718 += 1, R10654 += 1, R10562 += 1, R10563 += 1, R10564 += 1 };
  s4 -> s11 [75, 75] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s4 -> s12 [87, 87] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s4 -> s1 [88, 65535] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s8 -> s9 [0, 74] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s8 -> s8 [0, 65535] { R10718 += 1, R10654 += 1, R10561 += 1, R10562 += 1 };
  s8 -> s10 [0, 65535] { R10718 += 1, R10654 += 1, R10562 += 1, R10563 += 1, R10564 += 1 };
  s8 -> s27 [75, 75] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s8 -> s16 [87, 87] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s8 -> s9 [88, 65535] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s9 -> s9 [0, 74] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s9 -> s27 [75, 75] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s9 -> s16 [87, 87] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s9 -> s9 [88, 65535] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s10 -> s9 [0, 74] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s10 -> s10 [0, 65535] { R10718 += 1, R10654 += 1, R10562 += 1, R10563 += 1, R10564 += 1 };
  s10 -> s27 [75, 75] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s10 -> s16 [87, 87] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s10 -> s9 [88, 65535] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s11 -> s11 [0, 69] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s11 -> s26 [70, 70] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s11 -> s27 [70, 70] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s11 -> s11 [71, 75] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s11 -> s19 [87, 87] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s11 -> s11 [88, 65535] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s12 -> s12 [0, 69] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s12 -> s13 [0, 69] { R10718 += 1, R10654 += 1 };
  s12 -> s14 [70, 70] { R10718 += 1, R10654 += 1 };
  s12 -> s15 [70, 70] { R10718 += 1, R10654 += 1 };
  s12 -> s16 [70, 70] { R10718 += 1, R10654 += 1, R10562 += 1 };
  s12 -> s17 [70, 70] { R10718 += 1, R10654 += 1, R10562 += 1 };
  s12 -> s12 [71, 74] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s12 -> s12 [71, 65535] { R10718 += 1, R10654 += 1, R10562 += 1 };
  s12 -> s13 [71, 65535] { R10718 += 1, R10654 += 1 };
  s12 -> s18 [75, 75] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s12 -> s19 [75, 75] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s12 -> s12 [87, 65535] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s13 -> s13 [0, 69] { R10718 += 1, R10654 += 1 };
  s13 -> s13 [0, 65535] { R10718 += 1 };
  s13 -> s24 [0, 65535];
  s13 -> s14 [70, 70] { R10718 += 1, R10654 += 1 };
  s13 -> s15 [70, 70] { R10718 += 1, R10654 += 1 };
  s13 -> s13 [71, 65535] { R10718 += 1, R10654 += 1 };
  s14 -> s14 [0, 65535] { R10718 += 1, R10654 += 1 };
  s14 -> s25 [0, 65535] { R10718 += 1 };
  s14 -> s24 [0, 65535];
  s15 -> s15 [0, 65535] { R10718 += 1 };
  s15 -> s24 [0, 65535];
  s16 -> s16 [0, 74] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s16 -> s14 [0, 65535] { R10718 += 1, R10654 += 1 };
  s16 -> s16 [0, 65535] { R10718 += 1, R10654 += 1, R10562 += 1 };
  s16 -> s20 [75, 75] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s16 -> s23 [75, 75] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s16 -> s16 [87, 65535] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s18 -> s18 [0, 69] { R10718 += 1, R10654 += 1, R10562 += 1 };
  s18 -> s13 [0, 69] { R10718 += 1, R10654 += 1 };
  s18 -> s14 [70, 70] { R10718 += 1, R10654 += 1 };
  s18 -> s15 [70, 70] { R10718 += 1, R10654 += 1 };
  s18 -> s22 [70, 70] { R10718 += 1, R10654 += 1, R10562 += 1 };
  s18 -> s23 [70, 70] { R10718 += 1, R10654 += 1, R10562 += 1 };
  s18 -> s18 [71, 65535] { R10718 += 1, R10654 += 1, R10562 += 1 };
  s18 -> s13 [71, 65535] { R10718 += 1, R10654 += 1 };
  s19 -> s13 [0, 69] { R10718 += 1, R10654 += 1 };
  s19 -> s19 [0, 69] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s19 -> s14 [70, 70] { R10718 += 1, R10654 += 1 };
  s19 -> s15 [70, 70] { R10718 += 1, R10654 += 1 };
  s19 -> s20 [70, 70] { R10718 += 1, R10654 += 1, R10562 += 1 };
  s19 -> s21 [70, 70] { R10718 += 1, R10654 += 1, R10562 += 1 };
  s19 -> s19 [71, 75] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s19 -> s13 [71, 65535] { R10718 += 1, R10654 += 1 };
  s19 -> s19 [71, 65535] { R10718 += 1, R10654 += 1, R10562 += 1 };
  s19 -> s19 [87, 65535] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s20 -> s20 [0, 75] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s20 -> s14 [0, 65535] { R10718 += 1, R10654 += 1 };
  s20 -> s20 [0, 65535] { R10718 += 1, R10654 += 1, R10562 += 1 };
  s20 -> s20 [87, 65535] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s23 -> s14 [0, 65535] { R10718 += 1, R10654 += 1 };
  s23 -> s23 [0, 65535] { R10718 += 1, R10654 += 1, R10562 += 1 };
  s24 -> s24 [0, 65535];
  s25 -> s25 [0, 65535] { R10718 += 1 };
  s25 -> s24 [0, 65535];
  s27 -> s27 [0, 75] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s27 -> s20 [87, 87] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  s27 -> s27 [88, 65535] { R10718 += 1, R10654 += 1, R10562 += 1, R10564 += 1 };
  accepting s24, s13, s14, s15, s25;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
constraint R3 = R10718 && R25 - R10718 = -1 && R26 = R10718 && R27 - R10718 = -1 && R28 = R10718 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R10566 + -1*R10562 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R10566 + -1*R10562 - R130 = 0 && R129 + R10565 + R10561 = 0 && R131 + R10567 + R10563 = 0 && R132 + R10568 + R10564 = 0 && R10629 = 0 && R10630 = 0 && R10639 = 0 && R10640 = 0 && R10647 = 0 && R10648 = 0 && R10649 = 0 && R10650 = 0 && R10653 = 0 && R10654 = 0 && R10655 = 0 && R10656 = R10718 && R10657 = 0 && R10658 = R10718 && R10659 = 0 && R10660 = R10718 && R10661 = 0 && R10662 = R10718 && R10663 = 0 && R10664 = R10718 && R10665 = 0 && R10666 = R10718 && R10667 = 0 && R10668 = R10718 && R10669 = 0 && R10670 = R10718 && R10671 = 0 && R10672 = R10718 && R10673 = 0 && R10674 = R10718 && R10675 = 0 && R10676 = R10718 && R10677 = 0 && R10678 = R10718 && R10679 = 0 && R10680 = R10718 && R10681 = 0 && R10682 = R10718 && R10683 = 0 && R10684 = R10718 && R10685 = 0 && R10686 = R10718 && R10687 = 0 && R10688 = R10718 && R10689 = 0 && R10690 = R10718 && R10691 = 0 && R10692 = R10718 && R10693 = 0 && R10694 = R10718 && R10695 = 0 && R10696 = R10718 && R10697 = 0 && R10698 = R10718 && R10699 = 0 && R10700 = R10718 && R10701 = 0 && R10702 = R10718 && R10703 = 0 && R10704 = R10718 && R10705 = 0 && R10706 = R10718 && R10707 = 0 && R10708 = R10718 && R10709 = 0 && R10710 = R10718 && R10711 = 0 && R10712 = R10718 && R10713 = 0 && R10714 = R10718 && R10715 = 0 && R10716 = R10718 && R10717 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R10566 + -1*R10562 - R130 < 1 && 0 < R10718 && (R2 != 0 || R22 = 0 || (R10569 = 0 && R10570 = 0)) && (R2 != 0 || R22 = 0 || (R10571 = 0 && R10572 = 0)) && (R2 != 0 || R22 = 0 || (R10573 = 0 && R10574 = 0)) && (R2 != 0 || R22 = 0 || (R10575 = 0 && R10576 = 0)) && (R2 != 0 || R22 = 0 || (R10577 = 0 && R10578 = 0)) && (R2 != 0 || R22 = 0 || (R10579 = 0 && R10580 = 0)) && (R2 != 0 || R22 = 0 || (R10581 = 0 && R10582 = 0)) && (R2 != 0 || R22 = 0 || (R10583 = 0 && R10584 = 0)) && (R2 != 0 || R22 = 0 || (R10585 = 0 && R10586 = 0)) && (R2 != 0 || R22 = 0 || (R10587 = 0 && R10588 = 0)) && (R2 != 0 || R22 = 0 || (R10589 = 0 && R10590 = 0)) && (R2 != 0 || R22 = 0 || (R10591 = 0 && R10592 = 0)) && (R2 != 0 || R22 = 0 || (R10593 = 0 && R10594 = 0)) && (R2 != 0 || R22 = 0 || (R10595 = 0 && R10596 = 0)) && (R2 != 0 || R22 = 0 || (R10597 = 0 && R10598 = 0)) && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R10566 + -1*R10562 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R6569 + R6565 = 0 && R114 + R6570 + R6566 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R10566 + -1*R10562 - R130 = 0 || R130 + R10566 + R10562 < 1) && (R81 + R158 + R155 = 0 || R130 + R10566 + R10562 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R10566 + -1*R10562 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R10566 + R10562 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R10566 + -1*R10562 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R10566 + R10562 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R10566 + -1*R10562 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R10566 + R10562 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R6567 + R6563 != 0 || R112 + R6568 + R6564 + -1*R10566 + -1*R10562 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R10566 + R10562 = 0)) && (R113 + R6569 + R6565 != 0 || R83 + R160 + R157 + -1*R6570 + -1*R6566 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R10398 + R10393 != 0 || R120 + R10399 + R10394 + -1*R10566 + -1*R10562 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R10566 + R10562 = 0)) && (R10569 != 0 || R2 = R10570 || R2 < 1) && (R10571 != 0 || R2 = R10572 || R2 < 1) && (R10573 != 0 || R2 = R10574 || R2 < 1) && (R10575 != 0 || R2 = R10576 || R2 < 1) && (R10577 != 0 || R2 = R10578 || R2 < 1) && (R10579 != 0 || R2 = R10580 || R2 < 1) && (R10581 != 0 || R2 = R10582 || R2 < 1) && (R10583 != 0 || R2 = R10584 || R2 < 1) && (R10585 != 0 || R2 = R10586 || R2 < 1) && (R10587 != 0 || R2 = R10588 || R2 < 1) && (R10589 != 0 || R2 = R10590 || R2 < 1) && (R10591 != 0 || R2 = R10592 || R2 < 1) && (R10593 != 0 || R2 = R10594 || R2 < 1) && (R10595 != 0 || R2 = R10596 || R2 < 1) && (R10597 != 0 || R2 = R10598 || R2 < 1) && (R23 = 0 || (R10627 = 0 && R10628 = 0)) && (R23 = 0 || (R10631 = 0 && R10632 = 0)) && (R23 = 0 || (R10633 = 0 && R10634 = 0)) && (R23 = 0 || (R10635 = 0 && R10636 = 0)) && (R23 = 0 || (R10637 = 0 && R10638 = 0)) && (R23 = 0 || (R10641 = 0 && R10642 = 0)) && (R23 = 0 || (R10643 = 0 && R10644 = 0)) && (R23 = 0 || (R10645 = 0 && R10646 = 0)) && (R23 = 0 || (R10651 = 0 && R10652 = 0)) && (R24 = 0 || (R10599 = 0 && R10600 = 0)) && (R24 = 0 || (R10601 = 0 && R10602 = 0)) && (R24 = 0 || (R10603 = 0 && R10604 = 0)) && (R24 = 0 || (R10605 = 0 && R10606 = 0)) && (R24 = 0 || (R10607 = 0 && R10608 = 0)) && (R24 = 0 || (R10609 = 0 && R10610 = 0)) && (R24 = 0 || (R10611 = 0 && R10612 = 0)) && (R24 = 0 || (R10613 = 0 && R10614 = 0)) && (R24 = 0 || (R10615 = 0 && R10616 = 0)) && (R24 = 0 || (R10617 = 0 && R10618 = 0)) && (R24 = 0 || (R10619 = 0 && R10620 = 0)) && (R24 = 0 || (R10621 = 0 && R10622 = 0)) && (R24 = 0 || (R10623 = 0 && R10624 = 0)) && (R24 = 0 || (R10625 = 0 && R10626 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R10566 + R10562 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R10566 + R10562 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R10566 + R10562 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R6567 + R6563 = 0 || (R83 + R160 + R157 = 0 && R130 + R10566 + R10562 = 0)) && (R113 + R6569 + R6565 = 0 || R83 + R160 + R157 < 1) && (R119 + R10398 + R10393 = 0 || (R83 + R160 + R157 = 0 && R130 + R10566 + R10562 = 0)) && (R123 + R10402 + R10397 = 0 || (R121 + R10400 + R10395 = 0 && R122 + R10401 + R10396 = 0)) && (R10569 = 0 || R2 < 1) && (R10571 = 0 || R2 < 1) && (R10573 = 0 || R2 < 1) && (R10575 = 0 || R2 < 1) && (R10577 = 0 || R2 < 1) && (R10579 = 0 || R2 < 1) && (R10581 = 0 || R2 < 1) && (R10583 = 0 || R2 < 1) && (R10585 = 0 || R2 < 1) && (R10587 = 0 || R2 < 1) && (R10589 = 0 || R2 < 1) && (R10591 = 0 || R2 < 1) && (R10593 = 0 || R2 < 1) && (R10595 = 0 || R2 < 1) && (R10597 = 0 || R2 < 1);
// End of Parikh automata intersection problem
