// Parikh automata intersection problem, generated by OSTRICH+
counter int R100, R101, R102, R103, R104, R105, R106, R107, R108, R109, R110, R111, R112, R113, R114, R115, R116, R117, R118, R119, R120, R121, R122, R123, R124, R125, R126, R127, R128, R129, R130, R131, R132, R133, R134, R135, R136, R137, R138, R139, R14, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R17, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R193, R194, R195, R196, R197, R198, R199, R2, R200, R201, R202, R203, R204, R205, R206, R207, R208, R209, R21, R210, R211, R212, R213, R214, R215, R216, R217, R218, R219, R22, R220, R221, R222, R223, R224, R225, R226, R227, R228, R229, R23, R230, R231, R232, R233, R234, R235, R236, R237, R238, R239, R24, R240, R241, R242, R243, R244, R245, R246, R247, R248, R249, R25, R250, R251, R252, R253, R254, R255, R256, R257, R258, R259, R26, R260, R261, R262, R263, R264, R265, R266, R267, R268, R269, R27, R270, R271, R272, R28, R29, R3, R30, R31, R32, R33, R34, R35, R36, R37, R38, R4, R5, R6, R69, R7, R70, R71, R72, R73, R74, R75, R76, R77, R78, R79, R80, R81, R82, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96, R97, R98, R99;
synchronised {  // Automata constraining P6
automaton P6_0 {
  init s0;
  s0 -> s1 [100, 100];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R17 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [12, 12] { R32 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s0 -> s0 [0, 65535] { R33 += 1, R34 += 1 };
  s1 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R36 += 1 };
  s0 -> s0 [0, 65535] { R35 += 1, R36 += 1 };
  s0 -> s2 [9, 13] { R36 += 1 };
  s0 -> s1 [14, 31] { R36 += 1 };
  s0 -> s2 [32, 32] { R36 += 1 };
  s0 -> s1 [33, 65535] { R36 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R36 += 1 };
  s2 -> s1 [0, 65535] { R36 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R37 += 1, R38 += 1 };
  s1 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R202 += 1 };
  s0 -> s0 [0, 65535] { R201 += 1, R202 += 1 };
  s0 -> s2 [68, 68] { R202 += 1 };
  s0 -> s1 [69, 65535] { R202 += 1 };
  s1 -> s1 [0, 64] { R202 += 1 };
  s1 -> s2 [68, 68] { R202 += 1 };
  s1 -> s1 [69, 65535] { R202 += 1 };
  s2 -> s2 [0, 64] { R202 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [68, 65535] { R202 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R203 += 1, R204 += 1 };
  s0 -> s1 [0, 65535] { R204 += 1, R2 += 1 };
  s1 -> s1 [0, 65535] { R204 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 67] { R206 += 1 };
  s0 -> s0 [0, 65535] { R205 += 1, R206 += 1 };
  s0 -> s2 [0, 65535] { R206 += 1, R14 += 1 };
  s0 -> s3 [68, 68] { R206 += 1 };
  s0 -> s1 [69, 65535] { R206 += 1 };
  s1 -> s1 [0, 67] { R206 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [68, 68] { R206 += 1 };
  s1 -> s1 [69, 65535] { R206 += 1 };
  s2 -> s1 [0, 67] { R206 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R206 += 1, R14 += 1 };
  s2 -> s3 [68, 68] { R206 += 1 };
  s2 -> s1 [69, 65535] { R206 += 1 };
  s3 -> s3 [0, 65535] { R206 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R208 += 1, R24 += 1 };
  s0 -> s2 [0, 65535] { R208 += 1, R23 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R207 += 1, R208 += 1 };
  s0 -> s3 [9, 13] { R208 += 1, R24 += 1 };
  s0 -> s1 [14, 31] { R208 += 1, R24 += 1 };
  s0 -> s3 [32, 32] { R208 += 1, R24 += 1 };
  s0 -> s1 [33, 65535] { R208 += 1, R24 += 1 };
  s1 -> s5 [0, 65535] { R208 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R208 += 1, R24 += 1 };
  s2 -> s1 [0, 8] { R208 += 1, R24 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R208 += 1, R23 += 1, R24 += 1 };
  s2 -> s3 [9, 13] { R208 += 1, R24 += 1 };
  s2 -> s1 [14, 31] { R208 += 1, R24 += 1 };
  s2 -> s3 [32, 32] { R208 += 1, R24 += 1 };
  s2 -> s1 [33, 65535] { R208 += 1, R24 += 1 };
  s3 -> s1 [0, 65535] { R208 += 1, R24 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R208 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s0 [0, 65535] { R209 += 1, R210 += 1 };
  s0 -> s1 [0, 65535] { R210 += 1, R26 += 1, R4 += 1 };
  s0 -> s2 [0, 65535] { R210 += 1, R25 += 1, R26 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R210 += 1 };
  s1 -> s1 [0, 65535] { R210 += 1, R26 += 1, R4 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R210 += 1, R26 += 1, R4 += 1 };
  s2 -> s2 [0, 65535] { R210 += 1, R25 += 1, R26 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R210 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R212 += 1, R28 += 1 };
  s0 -> s0 [0, 65535] { R211 += 1, R212 += 1 };
  s0 -> s2 [0, 65535] { R212 += 1, R27 += 1, R28 += 1 };
  s0 -> s3 [9, 13] { R212 += 1, R28 += 1 };
  s0 -> s1 [14, 31] { R212 += 1, R28 += 1 };
  s0 -> s3 [32, 32] { R212 += 1, R28 += 1 };
  s0 -> s1 [33, 65535] { R212 += 1, R28 += 1 };
  s1 -> s5 [0, 65535] { R212 += 1 };
  s1 -> s1 [0, 65535] { R212 += 1, R28 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 8] { R212 += 1, R28 += 1 };
  s2 -> s2 [0, 65535] { R212 += 1, R27 += 1, R28 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [9, 13] { R212 += 1, R28 += 1 };
  s2 -> s1 [14, 31] { R212 += 1, R28 += 1 };
  s2 -> s3 [32, 32] { R212 += 1, R28 += 1 };
  s2 -> s1 [33, 65535] { R212 += 1, R28 += 1 };
  s3 -> s1 [0, 65535] { R212 += 1, R28 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R212 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 65535] { R214 += 1, R29 += 1, R30 += 1 };
  s0 -> s2 [0, 65535] { R214 += 1, R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R213 += 1, R214 += 1 };
  s1 -> s1 [0, 65535] { R214 += 1, R29 += 1, R30 += 1 };
  s1 -> s2 [0, 65535] { R214 += 1, R30 += 1, R5 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R214 += 1, R30 += 1, R5 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R214 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R214 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 67] { R216 += 1, R144 += 1 };
  s0 -> s2 [0, 65535] { R216 += 1, R143 += 1, R144 += 1 };
  s0 -> s0 [0, 65535] { R215 += 1, R216 += 1 };
  s0 -> s1 [69, 65535] { R216 += 1, R144 += 1 };
  s1 -> s1 [0, 67] { R216 += 1, R144 += 1 };
  s1 -> s1 [0, 65535] { R216 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [69, 65535] { R216 += 1, R144 += 1 };
  s2 -> s1 [0, 67] { R216 += 1, R144 += 1 };
  s2 -> s2 [0, 65535] { R216 += 1, R143 += 1, R144 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [69, 65535] { R216 += 1, R144 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_15 {
  init s0;
  s0 -> s0 [0, 65535] { R217 += 1, R218 += 1 };
  s0 -> s1 [0, 65535] { R218 += 1, R146 += 1, R21 += 1 };
  s0 -> s2 [0, 65535] { R218 += 1, R145 += 1, R146 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R218 += 1, R146 += 1, R21 += 1 };
  s1 -> s4 [0, 65535] { R218 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R218 += 1, R146 += 1, R21 += 1 };
  s2 -> s2 [0, 65535] { R218 += 1, R145 += 1, R146 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R218 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 68] { R220 += 1, R148 += 1 };
  s0 -> s2 [0, 65535] { R220 += 1, R147 += 1, R148 += 1 };
  s0 -> s0 [0, 65535] { R219 += 1, R220 += 1 };
  s0 -> s3 [85, 85] { R220 += 1, R148 += 1 };
  s0 -> s1 [86, 65535] { R220 += 1, R148 += 1 };
  s1 -> s1 [0, 68] { R220 += 1, R148 += 1 };
  s1 -> s3 [85, 85] { R220 += 1, R148 += 1 };
  s1 -> s1 [86, 65535] { R220 += 1, R148 += 1 };
  s2 -> s1 [0, 68] { R220 += 1, R148 += 1 };
  s2 -> s2 [0, 65535] { R220 += 1, R147 += 1, R148 += 1 };
  s2 -> s3 [85, 85] { R220 += 1, R148 += 1 };
  s2 -> s1 [86, 65535] { R220 += 1, R148 += 1 };
  s3 -> s3 [0, 68] { R220 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R220 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [85, 65535] { R220 += 1, R148 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 65535] { R222 += 1, R150 += 1, R70 += 1 };
  s0 -> s2 [0, 65535] { R222 += 1, R149 += 1, R150 += 1 };
  s0 -> s0 [0, 65535] { R221 += 1, R222 += 1 };
  s1 -> s4 [0, 65535] { R222 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R222 += 1, R150 += 1, R70 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R222 += 1, R150 += 1, R70 += 1 };
  s2 -> s2 [0, 65535] { R222 += 1, R149 += 1, R150 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R222 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 84] { R224 += 1, R152 += 1 };
  s0 -> s2 [0, 65535] { R224 += 1, R152 += 1, R72 += 1 };
  s0 -> s3 [0, 65535] { R224 += 1, R151 += 1, R152 += 1 };
  s0 -> s0 [0, 65535] { R223 += 1, R224 += 1 };
  s0 -> s1 [86, 65535] { R224 += 1, R152 += 1 };
  s1 -> s1 [0, 84] { R224 += 1, R152 += 1 };
  s1 -> s1 [0, 65535] { R224 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [86, 65535] { R224 += 1, R152 += 1 };
  s2 -> s1 [0, 84] { R224 += 1, R152 += 1 };
  s2 -> s5 [0, 65535] { R224 += 1 };
  s2 -> s2 [0, 65535] { R224 += 1, R152 += 1, R72 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [86, 65535] { R224 += 1, R152 += 1 };
  s3 -> s1 [0, 84] { R224 += 1, R152 += 1 };
  s3 -> s2 [0, 65535] { R224 += 1, R152 += 1, R72 += 1 };
  s3 -> s3 [0, 65535] { R224 += 1, R151 += 1, R152 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [86, 65535] { R224 += 1, R152 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R224 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 65535] { R226 += 1, R154 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R225 += 1, R226 += 1 };
  s0 -> s2 [0, 65535] { R226 += 1, R154 += 1, R76 += 1, R77 += 1 };
  s0 -> s3 [0, 65535] { R226 += 1, R153 += 1, R154 += 1 };
  s1 -> s1 [0, 65535] { R226 += 1, R154 += 1, R77 += 1, R78 += 1 };
  s1 -> s5 [0, 65535] { R226 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R226 += 1, R154 += 1 };
  s2 -> s1 [0, 65535] { R226 += 1, R154 += 1, R77 += 1, R78 += 1 };
  s2 -> s5 [0, 65535] { R226 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R226 += 1, R154 += 1, R76 += 1, R77 += 1 };
  s3 -> s1 [0, 65535] { R226 += 1, R154 += 1, R77 += 1, R78 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R226 += 1, R154 += 1, R76 += 1, R77 += 1 };
  s3 -> s3 [0, 65535] { R226 += 1, R153 += 1, R154 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R226 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R226 += 1 };
  s6 -> s6 [0, 65535] { R226 += 1, R154 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 84] { R228 += 1, R156 += 1, R82 += 1 };
  s0 -> s2 [0, 65535] { R228 += 1, R155 += 1, R156 += 1 };
  s0 -> s3 [0, 65535] { R228 += 1, R156 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R227 += 1, R228 += 1 };
  s0 -> s4 [85, 85] { R228 += 1, R156 += 1, R82 += 1 };
  s0 -> s5 [85, 85] { R228 += 1, R156 += 1, R82 += 1 };
  s0 -> s1 [87, 65535] { R228 += 1, R156 += 1, R82 += 1 };
  s1 -> s1 [0, 84] { R228 += 1, R156 += 1, R82 += 1 };
  s1 -> s6 [0, 65535] { R228 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R228 += 1, R156 += 1 };
  s1 -> s4 [85, 85] { R228 += 1, R156 += 1, R82 += 1 };
  s1 -> s5 [85, 85] { R228 += 1, R156 += 1, R82 += 1 };
  s1 -> s1 [87, 65535] { R228 += 1, R156 += 1, R82 += 1 };
  s2 -> s1 [0, 84] { R228 += 1, R156 += 1, R82 += 1 };
  s2 -> s2 [0, 65535] { R228 += 1, R155 += 1, R156 += 1 };
  s2 -> s3 [0, 65535] { R228 += 1, R156 += 1, R81 += 1, R82 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [85, 85] { R228 += 1, R156 += 1, R82 += 1 };
  s2 -> s5 [85, 85] { R228 += 1, R156 += 1, R82 += 1 };
  s2 -> s1 [87, 65535] { R228 += 1, R156 += 1, R82 += 1 };
  s3 -> s1 [0, 84] { R228 += 1, R156 += 1, R82 += 1 };
  s3 -> s6 [0, 65535] { R228 += 1 };
  s3 -> s3 [0, 65535] { R228 += 1, R156 += 1, R81 += 1, R82 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [85, 85] { R228 += 1, R156 += 1, R82 += 1 };
  s3 -> s5 [85, 85] { R228 += 1, R156 += 1, R82 += 1 };
  s3 -> s1 [87, 65535] { R228 += 1, R156 += 1, R82 += 1 };
  s4 -> s4 [0, 85] { R228 += 1, R156 += 1, R82 += 1 };
  s4 -> s4 [0, 65535] { R228 += 1, R156 += 1 };
  s4 -> s6 [0, 65535] { R228 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [87, 65535] { R228 += 1, R156 += 1, R82 += 1 };
  s5 -> s6 [0, 65535] { R228 += 1 };
  s5 -> s5 [0, 65535] { R228 += 1, R156 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R228 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 84] { R230 += 1, R158 += 1, R86 += 1 };
  s0 -> s0 [0, 65535] { R229 += 1, R230 += 1 };
  s0 -> s2 [0, 65535] { R230 += 1, R157 += 1, R158 += 1 };
  s0 -> s3 [0, 65535] { R230 += 1, R158 += 1, R85 += 1, R86 += 1 };
  s0 -> s4 [85, 85] { R230 += 1, R158 += 1, R86 += 1 };
  s0 -> s1 [86, 65535] { R230 += 1, R158 += 1, R86 += 1 };
  s1 -> s1 [0, 84] { R230 += 1, R158 += 1, R86 += 1 };
  s1 -> s4 [85, 85] { R230 += 1, R158 += 1, R86 += 1 };
  s1 -> s1 [86, 65535] { R230 += 1, R158 += 1, R86 += 1 };
  s2 -> s1 [0, 84] { R230 += 1, R158 += 1, R86 += 1 };
  s2 -> s2 [0, 65535] { R230 += 1, R157 += 1, R158 += 1 };
  s2 -> s3 [0, 65535] { R230 += 1, R158 += 1, R85 += 1, R86 += 1 };
  s2 -> s4 [85, 85] { R230 += 1, R158 += 1, R86 += 1 };
  s2 -> s1 [86, 65535] { R230 += 1, R158 += 1, R86 += 1 };
  s3 -> s1 [0, 84] { R230 += 1, R158 += 1, R86 += 1 };
  s3 -> s3 [0, 65535] { R230 += 1, R158 += 1, R85 += 1, R86 += 1 };
  s3 -> s4 [85, 85] { R230 += 1, R158 += 1, R86 += 1 };
  s3 -> s1 [86, 65535] { R230 += 1, R158 += 1, R86 += 1 };
  s4 -> s4 [0, 65535] { R230 += 1, R158 += 1, R86 += 1 };
  s4 -> s5 [0, 65535] { R230 += 1, R158 += 1 };
  s4 -> s6 [0, 65535] { R230 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R230 += 1, R158 += 1 };
  s5 -> s6 [0, 65535] { R230 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R230 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s4, s5, s6, s7;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 65535] { R232 += 1, R160 += 1, R90 += 1, R91 += 1 };
  s0 -> s2 [0, 65535] { R232 += 1, R160 += 1, R91 += 1, R92 += 1 };
  s0 -> s3 [0, 65535] { R232 += 1, R159 += 1, R160 += 1 };
  s0 -> s0 [0, 65535] { R231 += 1, R232 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R232 += 1, R160 += 1, R90 += 1, R91 += 1 };
  s1 -> s2 [0, 65535] { R232 += 1, R160 += 1, R91 += 1, R92 += 1 };
  s1 -> s6 [0, 65535] { R232 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R232 += 1, R160 += 1, R91 += 1, R92 += 1 };
  s2 -> s5 [0, 65535] { R232 += 1, R160 += 1 };
  s2 -> s6 [0, 65535] { R232 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R232 += 1, R160 += 1, R90 += 1, R91 += 1 };
  s3 -> s2 [0, 65535] { R232 += 1, R160 += 1, R91 += 1, R92 += 1 };
  s3 -> s3 [0, 65535] { R232 += 1, R159 += 1, R160 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R232 += 1, R160 += 1 };
  s5 -> s6 [0, 65535] { R232 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R232 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 84] { R234 += 1, R162 += 1, R97 += 1 };
  s0 -> s2 [0, 65535] { R234 += 1, R162 += 1, R96 += 1, R97 += 1 };
  s0 -> s3 [0, 65535] { R234 += 1, R162 += 1, R97 += 1, R98 += 1 };
  s0 -> s4 [0, 65535] { R234 += 1, R161 += 1, R162 += 1 };
  s0 -> s0 [0, 65535] { R233 += 1, R234 += 1 };
  s0 -> s1 [86, 65535] { R234 += 1, R162 += 1, R97 += 1 };
  s1 -> s1 [0, 84] { R234 += 1, R162 += 1, R97 += 1 };
  s1 -> s1 [0, 65535] { R234 += 1, R162 += 1 };
  s1 -> s7 [0, 65535] { R234 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [86, 65535] { R234 += 1, R162 += 1, R97 += 1 };
  s2 -> s1 [0, 84] { R234 += 1, R162 += 1, R97 += 1 };
  s2 -> s2 [0, 65535] { R234 += 1, R162 += 1, R96 += 1, R97 += 1 };
  s2 -> s3 [0, 65535] { R234 += 1, R162 += 1, R97 += 1, R98 += 1 };
  s2 -> s7 [0, 65535] { R234 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [86, 65535] { R234 += 1, R162 += 1, R97 += 1 };
  s3 -> s1 [0, 84] { R234 += 1, R162 += 1, R97 += 1 };
  s3 -> s6 [0, 65535] { R234 += 1, R162 += 1 };
  s3 -> s3 [0, 65535] { R234 += 1, R162 += 1, R97 += 1, R98 += 1 };
  s3 -> s7 [0, 65535] { R234 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [86, 65535] { R234 += 1, R162 += 1, R97 += 1 };
  s4 -> s1 [0, 84] { R234 += 1, R162 += 1, R97 += 1 };
  s4 -> s2 [0, 65535] { R234 += 1, R162 += 1, R96 += 1, R97 += 1 };
  s4 -> s3 [0, 65535] { R234 += 1, R162 += 1, R97 += 1, R98 += 1 };
  s4 -> s4 [0, 65535] { R234 += 1, R161 += 1, R162 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s1 [86, 65535] { R234 += 1, R162 += 1, R97 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R234 += 1, R162 += 1 };
  s6 -> s7 [0, 65535] { R234 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R234 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 84] { R236 += 1, R164 += 1, R104 += 1, R106 += 1 };
  s0 -> s0 [0, 65535] { R235 += 1, R236 += 1 };
  s0 -> s2 [0, 65535] { R236 += 1, R163 += 1, R164 += 1 };
  s0 -> s3 [0, 65535] { R236 += 1, R164 += 1, R103 += 1, R104 += 1 };
  s0 -> s4 [0, 65535] { R236 += 1, R164 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s0 -> s1 [86, 65535] { R236 += 1, R164 += 1, R104 += 1, R106 += 1 };
  s1 -> s1 [0, 84] { R236 += 1, R164 += 1, R104 += 1, R106 += 1 };
  s1 -> s1 [0, 65535] { R236 += 1, R164 += 1, R104 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R236 += 1 };
  s1 -> s7 [0, 65535] { R236 += 1, R164 += 1 };
  s1 -> s1 [86, 65535] { R236 += 1, R164 += 1, R104 += 1, R106 += 1 };
  s2 -> s1 [0, 84] { R236 += 1, R164 += 1, R104 += 1, R106 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R236 += 1, R163 += 1, R164 += 1 };
  s2 -> s3 [0, 65535] { R236 += 1, R164 += 1, R103 += 1, R104 += 1 };
  s2 -> s4 [0, 65535] { R236 += 1, R164 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s2 -> s1 [86, 65535] { R236 += 1, R164 += 1, R104 += 1, R106 += 1 };
  s3 -> s1 [0, 84] { R236 += 1, R164 += 1, R104 += 1, R106 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R236 += 1 };
  s3 -> s3 [0, 65535] { R236 += 1, R164 += 1, R103 += 1, R104 += 1 };
  s3 -> s4 [0, 65535] { R236 += 1, R164 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s3 -> s1 [86, 65535] { R236 += 1, R164 += 1, R104 += 1, R106 += 1 };
  s4 -> s1 [0, 84] { R236 += 1, R164 += 1, R104 += 1, R106 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R236 += 1 };
  s4 -> s7 [0, 65535] { R236 += 1, R164 += 1 };
  s4 -> s4 [0, 65535] { R236 += 1, R164 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s4 -> s1 [86, 65535] { R236 += 1, R164 += 1, R104 += 1, R106 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R236 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R236 += 1 };
  s7 -> s7 [0, 65535] { R236 += 1, R164 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s0 [0, 65535] { R237 += 1, R238 += 1 };
  s0 -> s1 [0, 65535] { R238 += 1, R166 += 1, R112 += 1, R113 += 1 };
  s0 -> s2 [0, 65535] { R238 += 1, R166 += 1, R113 += 1, R115 += 1, R116 += 1 };
  s0 -> s3 [0, 65535] { R238 += 1, R166 += 1, R113 += 1, R114 += 1, R115 += 1 };
  s0 -> s4 [0, 65535] { R238 += 1, R165 += 1, R166 += 1 };
  s1 -> s7 [0, 65535] { R238 += 1 };
  s1 -> s1 [0, 65535] { R238 += 1, R166 += 1, R112 += 1, R113 += 1 };
  s1 -> s2 [0, 65535] { R238 += 1, R166 += 1, R113 += 1, R115 += 1, R116 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R238 += 1, R166 += 1, R113 += 1, R114 += 1, R115 += 1 };
  s2 -> s8 [0, 65535] { R238 += 1, R166 += 1, R113 += 1 };
  s2 -> s6 [0, 65535] { R238 += 1, R166 += 1 };
  s2 -> s7 [0, 65535] { R238 += 1 };
  s2 -> s2 [0, 65535] { R238 += 1, R166 += 1, R113 += 1, R115 += 1, R116 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R238 += 1, R166 += 1 };
  s3 -> s7 [0, 65535] { R238 += 1 };
  s3 -> s2 [0, 65535] { R238 += 1, R166 += 1, R113 += 1, R115 += 1, R116 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R238 += 1, R166 += 1, R113 += 1, R114 += 1, R115 += 1 };
  s4 -> s1 [0, 65535] { R238 += 1, R166 += 1, R112 += 1, R113 += 1 };
  s4 -> s2 [0, 65535] { R238 += 1, R166 += 1, R113 += 1, R115 += 1, R116 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R238 += 1, R166 += 1, R113 += 1, R114 += 1, R115 += 1 };
  s4 -> s4 [0, 65535] { R238 += 1, R165 += 1, R166 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R238 += 1, R166 += 1 };
  s6 -> s7 [0, 65535] { R238 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R238 += 1 };
  s7 -> s5 [0, 65535];
  s8 -> s8 [0, 65535] { R238 += 1, R166 += 1, R113 += 1 };
  s8 -> s6 [0, 65535] { R238 += 1, R166 += 1 };
  s8 -> s7 [0, 65535] { R238 += 1 };
  s8 -> s5 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R240 += 1, R167 += 1, R168 += 1 };
  s0 -> s0 [0, 65535] { R239 += 1, R240 += 1 };
  s0 -> s2 [0, 65535] { R240 += 1, R168 += 1, R122 += 1, R123 += 1, R124 += 1 };
  s0 -> s3 [0, 65535] { R240 += 1, R168 += 1, R121 += 1, R122 += 1 };
  s0 -> s4 [0, 65535] { R240 += 1, R168 += 1, R122 += 1, R124 += 1 };
  s1 -> s1 [0, 65535] { R240 += 1, R167 += 1, R168 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R240 += 1, R168 += 1, R122 += 1, R123 += 1, R124 += 1 };
  s1 -> s3 [0, 65535] { R240 += 1, R168 += 1, R121 += 1, R122 += 1 };
  s1 -> s4 [0, 65535] { R240 += 1, R168 += 1, R122 += 1, R124 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R240 += 1, R168 += 1, R122 += 1, R123 += 1, R124 += 1 };
  s2 -> s6 [0, 65535] { R240 += 1 };
  s2 -> s7 [0, 65535] { R240 += 1, R168 += 1 };
  s2 -> s4 [0, 65535] { R240 += 1, R168 += 1, R122 += 1, R124 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R240 += 1, R168 += 1, R122 += 1, R123 += 1, R124 += 1 };
  s3 -> s6 [0, 65535] { R240 += 1 };
  s3 -> s3 [0, 65535] { R240 += 1, R168 += 1, R121 += 1, R122 += 1 };
  s3 -> s4 [0, 65535] { R240 += 1, R168 += 1, R122 += 1, R124 += 1 };
  s4 -> s4 [0, 65535] { R240 += 1, R168 += 1, R122 += 1, R124 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R240 += 1 };
  s4 -> s7 [0, 65535] { R240 += 1, R168 += 1 };
  s4 -> s8 [0, 65535] { R240 += 1, R168 += 1, R122 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R240 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R240 += 1 };
  s7 -> s7 [0, 65535] { R240 += 1, R168 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R240 += 1 };
  s8 -> s7 [0, 65535] { R240 += 1, R168 += 1 };
  s8 -> s8 [0, 65535] { R240 += 1, R168 += 1, R122 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 65535] { R242 += 1, R170 += 1, R131 += 1, R133 += 1, R134 += 1 };
  s0 -> s2 [0, 65535] { R242 += 1, R170 += 1, R130 += 1, R131 += 1 };
  s0 -> s3 [0, 65535] { R242 += 1, R170 += 1, R131 += 1, R132 += 1, R133 += 1 };
  s0 -> s0 [0, 65535] { R241 += 1, R242 += 1 };
  s0 -> s4 [0, 65535] { R242 += 1, R169 += 1, R170 += 1 };
  s1 -> s1 [0, 65535] { R242 += 1, R170 += 1, R131 += 1, R133 += 1, R134 += 1 };
  s1 -> s8 [0, 65535] { R242 += 1, R170 += 1, R131 += 1 };
  s1 -> s6 [0, 65535] { R242 += 1, R170 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R242 += 1 };
  s2 -> s1 [0, 65535] { R242 += 1, R170 += 1, R131 += 1, R133 += 1, R134 += 1 };
  s2 -> s2 [0, 65535] { R242 += 1, R170 += 1, R130 += 1, R131 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R242 += 1, R170 += 1, R131 += 1, R132 += 1, R133 += 1 };
  s2 -> s7 [0, 65535] { R242 += 1 };
  s3 -> s1 [0, 65535] { R242 += 1, R170 += 1, R131 += 1, R133 += 1, R134 += 1 };
  s3 -> s6 [0, 65535] { R242 += 1, R170 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R242 += 1, R170 += 1, R131 += 1, R132 += 1, R133 += 1 };
  s3 -> s7 [0, 65535] { R242 += 1 };
  s4 -> s1 [0, 65535] { R242 += 1, R170 += 1, R131 += 1, R133 += 1, R134 += 1 };
  s4 -> s2 [0, 65535] { R242 += 1, R170 += 1, R130 += 1, R131 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R242 += 1, R170 += 1, R131 += 1, R132 += 1, R133 += 1 };
  s4 -> s4 [0, 65535] { R242 += 1, R169 += 1, R170 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R242 += 1, R170 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s7 [0, 65535] { R242 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R242 += 1 };
  s8 -> s8 [0, 65535] { R242 += 1, R170 += 1, R131 += 1 };
  s8 -> s6 [0, 65535] { R242 += 1, R170 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s7 [0, 65535] { R242 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 84] { R244 += 1, R172 += 1, R140 += 1, R142 += 1 };
  s0 -> s2 [0, 65535] { R244 += 1, R171 += 1, R172 += 1 };
  s0 -> s0 [0, 65535] { R243 += 1, R244 += 1 };
  s0 -> s3 [0, 65535] { R244 += 1, R172 += 1, R140 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [0, 65535] { R244 += 1, R172 += 1, R139 += 1, R140 += 1 };
  s0 -> s5 [85, 85] { R244 += 1, R172 += 1, R140 += 1, R142 += 1 };
  s0 -> s6 [86, 86] { R244 += 1, R172 += 1, R140 += 1, R142 += 1 };
  s0 -> s1 [87, 65535] { R244 += 1, R172 += 1, R140 += 1, R142 += 1 };
  s1 -> s1 [0, 84] { R244 += 1, R172 += 1, R140 += 1, R142 += 1 };
  s1 -> s5 [85, 85] { R244 += 1, R172 += 1, R140 += 1, R142 += 1 };
  s1 -> s6 [86, 86] { R244 += 1, R172 += 1, R140 += 1, R142 += 1 };
  s1 -> s1 [87, 65535] { R244 += 1, R172 += 1, R140 += 1, R142 += 1 };
  s2 -> s1 [0, 84] { R244 += 1, R172 += 1, R140 += 1, R142 += 1 };
  s2 -> s2 [0, 65535] { R244 += 1, R171 += 1, R172 += 1 };
  s2 -> s3 [0, 65535] { R244 += 1, R172 += 1, R140 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [0, 65535] { R244 += 1, R172 += 1, R139 += 1, R140 += 1 };
  s2 -> s5 [85, 85] { R244 += 1, R172 += 1, R140 += 1, R142 += 1 };
  s2 -> s6 [86, 86] { R244 += 1, R172 += 1, R140 += 1, R142 += 1 };
  s2 -> s1 [87, 65535] { R244 += 1, R172 += 1, R140 += 1, R142 += 1 };
  s3 -> s1 [0, 84] { R244 += 1, R172 += 1, R140 += 1, R142 += 1 };
  s3 -> s3 [0, 65535] { R244 += 1, R172 += 1, R140 += 1, R141 += 1, R142 += 1 };
  s3 -> s5 [85, 85] { R244 += 1, R172 += 1, R140 += 1, R142 += 1 };
  s3 -> s6 [86, 86] { R244 += 1, R172 += 1, R140 += 1, R142 += 1 };
  s3 -> s1 [87, 65535] { R244 += 1, R172 += 1, R140 += 1, R142 += 1 };
  s4 -> s1 [0, 84] { R244 += 1, R172 += 1, R140 += 1, R142 += 1 };
  s4 -> s3 [0, 65535] { R244 += 1, R172 += 1, R140 += 1, R141 += 1, R142 += 1 };
  s4 -> s4 [0, 65535] { R244 += 1, R172 += 1, R139 += 1, R140 += 1 };
  s4 -> s5 [85, 85] { R244 += 1, R172 += 1, R140 += 1, R142 += 1 };
  s4 -> s6 [86, 86] { R244 += 1, R172 += 1, R140 += 1, R142 += 1 };
  s4 -> s1 [87, 65535] { R244 += 1, R172 += 1, R140 += 1, R142 += 1 };
  s5 -> s5 [0, 85] { R244 += 1, R172 += 1, R140 += 1, R142 += 1 };
  s5 -> s11 [86, 86] { R244 += 1, R172 += 1, R140 += 1, R142 += 1 };
  s5 -> s5 [87, 65535] { R244 += 1, R172 += 1, R140 += 1, R142 += 1 };
  s6 -> s6 [0, 84] { R244 += 1, R172 += 1, R140 += 1, R142 += 1 };
  s6 -> s6 [0, 65535] { R244 += 1, R172 += 1, R140 += 1 };
  s6 -> s7 [0, 65535] { R244 += 1, R172 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [0, 65535] { R244 += 1 };
  s6 -> s10 [85, 85] { R244 += 1, R172 += 1, R140 += 1, R142 += 1 };
  s6 -> s11 [85, 85] { R244 += 1, R172 += 1, R140 += 1, R142 += 1 };
  s6 -> s6 [86, 65535] { R244 += 1, R172 += 1, R140 += 1, R142 += 1 };
  s7 -> s7 [0, 65535] { R244 += 1, R172 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R244 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R244 += 1 };
  s10 -> s7 [0, 65535] { R244 += 1, R172 += 1 };
  s10 -> s10 [0, 65535] { R244 += 1, R172 += 1, R140 += 1 };
  s10 -> s8 [0, 65535];
  s10 -> s9 [0, 65535] { R244 += 1 };
  s11 -> s12 [0, 65535] { R244 += 1, R172 += 1, R140 += 1 };
  s11 -> s7 [0, 65535] { R244 += 1, R172 += 1 };
  s11 -> s8 [0, 65535];
  s11 -> s11 [0, 65535] { R244 += 1, R172 += 1, R140 += 1, R142 += 1 };
  s11 -> s9 [0, 65535] { R244 += 1 };
  s12 -> s12 [0, 65535] { R244 += 1, R172 += 1, R140 += 1 };
  s12 -> s7 [0, 65535] { R244 += 1, R172 += 1 };
  s12 -> s8 [0, 65535];
  s12 -> s9 [0, 65535] { R244 += 1 };
  accepting s12, s8, s9, s6, s7, s10, s11;
};
automaton value2_29 {
  init s0;
  s0 -> s0 [0, 65535] { R245 += 1, R246 += 1 };
  s0 -> s1 [0, 65535] { R246 += 1, R174 += 1, R22 += 1 };
  s0 -> s2 [0, 65535] { R246 += 1, R173 += 1, R174 += 1 };
  s1 -> s1 [0, 65535] { R246 += 1, R174 += 1, R22 += 1 };
  s1 -> s4 [0, 65535] { R246 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R246 += 1, R174 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R246 += 1, R173 += 1, R174 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R246 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 67] { R248 += 1, R176 += 1 };
  s0 -> s0 [0, 65535] { R247 += 1, R248 += 1 };
  s0 -> s2 [0, 65535] { R248 += 1, R175 += 1, R176 += 1 };
  s0 -> s3 [68, 68] { R248 += 1, R176 += 1 };
  s0 -> s4 [68, 68] { R248 += 1, R176 += 1 };
  s0 -> s1 [86, 65535] { R248 += 1, R176 += 1 };
  s1 -> s1 [0, 67] { R248 += 1, R176 += 1 };
  s1 -> s1 [0, 65535] { R248 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [68, 68] { R248 += 1, R176 += 1 };
  s1 -> s4 [68, 68] { R248 += 1, R176 += 1 };
  s1 -> s1 [86, 65535] { R248 += 1, R176 += 1 };
  s2 -> s1 [0, 67] { R248 += 1, R176 += 1 };
  s2 -> s2 [0, 65535] { R248 += 1, R175 += 1, R176 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [68, 68] { R248 += 1, R176 += 1 };
  s2 -> s4 [68, 68] { R248 += 1, R176 += 1 };
  s2 -> s1 [86, 65535] { R248 += 1, R176 += 1 };
  s3 -> s3 [0, 68] { R248 += 1, R176 += 1 };
  s3 -> s3 [0, 65535] { R248 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [86, 65535] { R248 += 1, R176 += 1 };
  s4 -> s4 [0, 65535] { R248 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 67] { R250 += 1, R178 += 1, R69 += 1 };
  s0 -> s2 [0, 65535] { R250 += 1, R177 += 1, R178 += 1 };
  s0 -> s0 [0, 65535] { R249 += 1, R250 += 1 };
  s0 -> s3 [68, 68] { R250 += 1, R178 += 1, R69 += 1 };
  s0 -> s4 [68, 68] { R250 += 1, R178 += 1, R69 += 1 };
  s0 -> s1 [69, 65535] { R250 += 1, R178 += 1, R69 += 1 };
  s1 -> s1 [0, 67] { R250 += 1, R178 += 1, R69 += 1 };
  s1 -> s1 [0, 65535] { R250 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [68, 68] { R250 += 1, R178 += 1, R69 += 1 };
  s1 -> s4 [68, 68] { R250 += 1, R178 += 1, R69 += 1 };
  s1 -> s1 [69, 65535] { R250 += 1, R178 += 1, R69 += 1 };
  s2 -> s1 [0, 67] { R250 += 1, R178 += 1, R69 += 1 };
  s2 -> s2 [0, 65535] { R250 += 1, R177 += 1, R178 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [68, 68] { R250 += 1, R178 += 1, R69 += 1 };
  s2 -> s4 [68, 68] { R250 += 1, R178 += 1, R69 += 1 };
  s2 -> s1 [69, 65535] { R250 += 1, R178 += 1, R69 += 1 };
  s3 -> s3 [0, 65535] { R250 += 1, R178 += 1, R69 += 1 };
  s3 -> s6 [0, 65535] { R250 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R250 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R250 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 67] { R252 += 1, R180 += 1, R71 += 1 };
  s0 -> s0 [0, 65535] { R251 += 1, R252 += 1 };
  s0 -> s2 [0, 65535] { R252 += 1, R179 += 1, R180 += 1 };
  s0 -> s3 [68, 68] { R252 += 1, R180 += 1, R71 += 1 };
  s0 -> s4 [68, 68] { R252 += 1, R180 += 1, R71 += 1 };
  s0 -> s1 [69, 65535] { R252 += 1, R180 += 1, R71 += 1 };
  s1 -> s1 [0, 67] { R252 += 1, R180 += 1, R71 += 1 };
  s1 -> s1 [0, 65535] { R252 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [68, 68] { R252 += 1, R180 += 1, R71 += 1 };
  s1 -> s4 [68, 68] { R252 += 1, R180 += 1, R71 += 1 };
  s1 -> s1 [69, 65535] { R252 += 1, R180 += 1, R71 += 1 };
  s2 -> s1 [0, 67] { R252 += 1, R180 += 1, R71 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R252 += 1, R179 += 1, R180 += 1 };
  s2 -> s3 [68, 68] { R252 += 1, R180 += 1, R71 += 1 };
  s2 -> s4 [68, 68] { R252 += 1, R180 += 1, R71 += 1 };
  s2 -> s1 [69, 65535] { R252 += 1, R180 += 1, R71 += 1 };
  s3 -> s3 [0, 65535] { R252 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R252 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R252 += 1, R180 += 1, R71 += 1 };
  s5 -> s5 [0, 65535] { R252 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 67] { R254 += 1, R182 += 1, R73 += 1, R74 += 1 };
  s0 -> s2 [0, 65535] { R254 += 1, R181 += 1, R182 += 1 };
  s0 -> s0 [0, 65535] { R253 += 1, R254 += 1 };
  s0 -> s3 [68, 68] { R254 += 1, R182 += 1, R73 += 1, R74 += 1 };
  s0 -> s4 [68, 68] { R254 += 1, R182 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [69, 65535] { R254 += 1, R182 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 67] { R254 += 1, R182 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535] { R254 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [68, 68] { R254 += 1, R182 += 1, R73 += 1, R74 += 1 };
  s1 -> s4 [68, 68] { R254 += 1, R182 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [69, 65535] { R254 += 1, R182 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [0, 67] { R254 += 1, R182 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R254 += 1, R181 += 1, R182 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [68, 68] { R254 += 1, R182 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [68, 68] { R254 += 1, R182 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [69, 65535] { R254 += 1, R182 += 1, R73 += 1, R74 += 1 };
  s3 -> s3 [0, 65535] { R254 += 1, R182 += 1, R73 += 1, R74 += 1 };
  s3 -> s6 [0, 65535] { R254 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R254 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R254 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 67] { R256 += 1, R184 += 1, R79 += 1, R80 += 1 };
  s0 -> s0 [0, 65535] { R255 += 1, R256 += 1 };
  s0 -> s2 [0, 65535] { R256 += 1, R183 += 1, R184 += 1 };
  s0 -> s3 [68, 68] { R256 += 1, R184 += 1, R79 += 1, R80 += 1 };
  s0 -> s4 [68, 68] { R256 += 1, R184 += 1, R79 += 1, R80 += 1 };
  s0 -> s1 [69, 65535] { R256 += 1, R184 += 1, R79 += 1, R80 += 1 };
  s1 -> s1 [0, 67] { R256 += 1, R184 += 1, R79 += 1, R80 += 1 };
  s1 -> s1 [0, 65535] { R256 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [68, 68] { R256 += 1, R184 += 1, R79 += 1, R80 += 1 };
  s1 -> s4 [68, 68] { R256 += 1, R184 += 1, R79 += 1, R80 += 1 };
  s1 -> s1 [69, 65535] { R256 += 1, R184 += 1, R79 += 1, R80 += 1 };
  s2 -> s1 [0, 67] { R256 += 1, R184 += 1, R79 += 1, R80 += 1 };
  s2 -> s2 [0, 65535] { R256 += 1, R183 += 1, R184 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [68, 68] { R256 += 1, R184 += 1, R79 += 1, R80 += 1 };
  s2 -> s4 [68, 68] { R256 += 1, R184 += 1, R79 += 1, R80 += 1 };
  s2 -> s1 [69, 65535] { R256 += 1, R184 += 1, R79 += 1, R80 += 1 };
  s3 -> s3 [0, 65535] { R256 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R256 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R256 += 1, R184 += 1, R79 += 1, R80 += 1 };
  s5 -> s5 [0, 65535] { R256 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 67] { R258 += 1, R186 += 1, R83 += 1, R84 += 1 };
  s0 -> s2 [0, 65535] { R258 += 1, R185 += 1, R186 += 1 };
  s0 -> s0 [0, 65535] { R257 += 1, R258 += 1 };
  s0 -> s3 [68, 68] { R258 += 1, R186 += 1, R83 += 1, R84 += 1 };
  s0 -> s4 [68, 68] { R258 += 1, R186 += 1, R83 += 1, R84 += 1 };
  s0 -> s1 [69, 65535] { R258 += 1, R186 += 1, R83 += 1, R84 += 1 };
  s1 -> s1 [0, 67] { R258 += 1, R186 += 1, R83 += 1, R84 += 1 };
  s1 -> s1 [0, 65535] { R258 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [68, 68] { R258 += 1, R186 += 1, R83 += 1, R84 += 1 };
  s1 -> s4 [68, 68] { R258 += 1, R186 += 1, R83 += 1, R84 += 1 };
  s1 -> s1 [69, 65535] { R258 += 1, R186 += 1, R83 += 1, R84 += 1 };
  s2 -> s1 [0, 67] { R258 += 1, R186 += 1, R83 += 1, R84 += 1 };
  s2 -> s2 [0, 65535] { R258 += 1, R185 += 1, R186 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [68, 68] { R258 += 1, R186 += 1, R83 += 1, R84 += 1 };
  s2 -> s4 [68, 68] { R258 += 1, R186 += 1, R83 += 1, R84 += 1 };
  s2 -> s1 [69, 65535] { R258 += 1, R186 += 1, R83 += 1, R84 += 1 };
  s3 -> s3 [0, 65535] { R258 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R258 += 1, R186 += 1, R83 += 1, R84 += 1 };
  s4 -> s6 [0, 65535] { R258 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R258 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 67] { R260 += 1, R188 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [0, 65535] { R260 += 1, R187 += 1, R188 += 1 };
  s0 -> s0 [0, 65535] { R259 += 1, R260 += 1 };
  s0 -> s3 [68, 68] { R260 += 1, R188 += 1, R87 += 1, R88 += 1 };
  s0 -> s4 [68, 68] { R260 += 1, R188 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [69, 65535] { R260 += 1, R188 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 67] { R260 += 1, R188 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535] { R260 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [68, 68] { R260 += 1, R188 += 1, R87 += 1, R88 += 1 };
  s1 -> s4 [68, 68] { R260 += 1, R188 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [69, 65535] { R260 += 1, R188 += 1, R87 += 1, R88 += 1 };
  s2 -> s1 [0, 67] { R260 += 1, R188 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535] { R260 += 1, R187 += 1, R188 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [68, 68] { R260 += 1, R188 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [68, 68] { R260 += 1, R188 += 1, R87 += 1, R88 += 1 };
  s2 -> s1 [69, 65535] { R260 += 1, R188 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R260 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R260 += 1 };
  s4 -> s4 [0, 65535] { R260 += 1, R188 += 1, R87 += 1, R88 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R260 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 67] { R262 += 1, R190 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R261 += 1, R262 += 1 };
  s0 -> s2 [0, 65535] { R262 += 1, R189 += 1, R190 += 1 };
  s0 -> s3 [68, 68] { R262 += 1, R190 += 1, R93 += 1, R94 += 1 };
  s0 -> s4 [68, 68] { R262 += 1, R190 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [69, 65535] { R262 += 1, R190 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 67] { R262 += 1, R190 += 1, R93 += 1, R94 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R262 += 1 };
  s1 -> s3 [68, 68] { R262 += 1, R190 += 1, R93 += 1, R94 += 1 };
  s1 -> s4 [68, 68] { R262 += 1, R190 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [69, 65535] { R262 += 1, R190 += 1, R93 += 1, R94 += 1 };
  s2 -> s1 [0, 67] { R262 += 1, R190 += 1, R93 += 1, R94 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R262 += 1, R189 += 1, R190 += 1 };
  s2 -> s3 [68, 68] { R262 += 1, R190 += 1, R93 += 1, R94 += 1 };
  s2 -> s4 [68, 68] { R262 += 1, R190 += 1, R93 += 1, R94 += 1 };
  s2 -> s1 [69, 65535] { R262 += 1, R190 += 1, R93 += 1, R94 += 1 };
  s3 -> s3 [0, 65535] { R262 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R262 += 1, R190 += 1, R93 += 1, R94 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R262 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R262 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 67] { R264 += 1, R192 += 1, R99 += 1, R100 += 1 };
  s0 -> s2 [0, 65535] { R264 += 1, R191 += 1, R192 += 1 };
  s0 -> s0 [0, 65535] { R263 += 1, R264 += 1 };
  s0 -> s3 [68, 68] { R264 += 1, R192 += 1, R99 += 1, R100 += 1 };
  s0 -> s4 [68, 68] { R264 += 1, R192 += 1, R99 += 1, R100 += 1 };
  s0 -> s1 [69, 65535] { R264 += 1, R192 += 1, R99 += 1, R100 += 1 };
  s1 -> s1 [0, 67] { R264 += 1, R192 += 1, R99 += 1, R100 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R264 += 1 };
  s1 -> s3 [68, 68] { R264 += 1, R192 += 1, R99 += 1, R100 += 1 };
  s1 -> s4 [68, 68] { R264 += 1, R192 += 1, R99 += 1, R100 += 1 };
  s1 -> s1 [69, 65535] { R264 += 1, R192 += 1, R99 += 1, R100 += 1 };
  s2 -> s1 [0, 67] { R264 += 1, R192 += 1, R99 += 1, R100 += 1 };
  s2 -> s2 [0, 65535] { R264 += 1, R191 += 1, R192 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [68, 68] { R264 += 1, R192 += 1, R99 += 1, R100 += 1 };
  s2 -> s4 [68, 68] { R264 += 1, R192 += 1, R99 += 1, R100 += 1 };
  s2 -> s1 [69, 65535] { R264 += 1, R192 += 1, R99 += 1, R100 += 1 };
  s3 -> s3 [0, 65535] { R264 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R264 += 1 };
  s4 -> s4 [0, 65535] { R264 += 1, R192 += 1, R99 += 1, R100 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R264 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 67] { R266 += 1, R194 += 1, R107 += 1, R108 += 1 };
  s0 -> s0 [0, 65535] { R265 += 1, R266 += 1 };
  s0 -> s2 [0, 65535] { R266 += 1, R193 += 1, R194 += 1 };
  s0 -> s3 [68, 68] { R266 += 1, R194 += 1, R107 += 1, R108 += 1 };
  s0 -> s4 [68, 68] { R266 += 1, R194 += 1, R107 += 1, R108 += 1 };
  s0 -> s1 [69, 65535] { R266 += 1, R194 += 1, R107 += 1, R108 += 1 };
  s1 -> s1 [0, 67] { R266 += 1, R194 += 1, R107 += 1, R108 += 1 };
  s1 -> s1 [0, 65535] { R266 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [68, 68] { R266 += 1, R194 += 1, R107 += 1, R108 += 1 };
  s1 -> s4 [68, 68] { R266 += 1, R194 += 1, R107 += 1, R108 += 1 };
  s1 -> s1 [69, 65535] { R266 += 1, R194 += 1, R107 += 1, R108 += 1 };
  s2 -> s1 [0, 67] { R266 += 1, R194 += 1, R107 += 1, R108 += 1 };
  s2 -> s2 [0, 65535] { R266 += 1, R193 += 1, R194 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [68, 68] { R266 += 1, R194 += 1, R107 += 1, R108 += 1 };
  s2 -> s4 [68, 68] { R266 += 1, R194 += 1, R107 += 1, R108 += 1 };
  s2 -> s1 [69, 65535] { R266 += 1, R194 += 1, R107 += 1, R108 += 1 };
  s3 -> s6 [0, 65535] { R266 += 1 };
  s3 -> s3 [0, 65535] { R266 += 1, R194 += 1, R107 += 1, R108 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R266 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R266 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 67] { R268 += 1, R196 += 1, R117 += 1, R118 += 1 };
  s0 -> s2 [0, 65535] { R268 += 1, R195 += 1, R196 += 1 };
  s0 -> s0 [0, 65535] { R267 += 1, R268 += 1 };
  s0 -> s3 [68, 68] { R268 += 1, R196 += 1, R117 += 1, R118 += 1 };
  s0 -> s4 [68, 68] { R268 += 1, R196 += 1, R117 += 1, R118 += 1 };
  s0 -> s1 [69, 65535] { R268 += 1, R196 += 1, R117 += 1, R118 += 1 };
  s1 -> s1 [0, 67] { R268 += 1, R196 += 1, R117 += 1, R118 += 1 };
  s1 -> s1 [0, 65535] { R268 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [68, 68] { R268 += 1, R196 += 1, R117 += 1, R118 += 1 };
  s1 -> s4 [68, 68] { R268 += 1, R196 += 1, R117 += 1, R118 += 1 };
  s1 -> s1 [69, 65535] { R268 += 1, R196 += 1, R117 += 1, R118 += 1 };
  s2 -> s1 [0, 67] { R268 += 1, R196 += 1, R117 += 1, R118 += 1 };
  s2 -> s2 [0, 65535] { R268 += 1, R195 += 1, R196 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [68, 68] { R268 += 1, R196 += 1, R117 += 1, R118 += 1 };
  s2 -> s4 [68, 68] { R268 += 1, R196 += 1, R117 += 1, R118 += 1 };
  s2 -> s1 [69, 65535] { R268 += 1, R196 += 1, R117 += 1, R118 += 1 };
  s3 -> s3 [0, 65535] { R268 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R268 += 1 };
  s4 -> s4 [0, 65535] { R268 += 1, R196 += 1, R117 += 1, R118 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R268 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 67] { R270 += 1, R198 += 1, R125 += 1, R126 += 1 };
  s0 -> s2 [0, 65535] { R270 += 1, R197 += 1, R198 += 1 };
  s0 -> s0 [0, 65535] { R269 += 1, R270 += 1 };
  s0 -> s3 [68, 68] { R270 += 1, R198 += 1, R125 += 1, R126 += 1 };
  s0 -> s4 [68, 68] { R270 += 1, R198 += 1, R125 += 1, R126 += 1 };
  s0 -> s1 [69, 65535] { R270 += 1, R198 += 1, R125 += 1, R126 += 1 };
  s1 -> s1 [0, 67] { R270 += 1, R198 += 1, R125 += 1, R126 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R270 += 1 };
  s1 -> s3 [68, 68] { R270 += 1, R198 += 1, R125 += 1, R126 += 1 };
  s1 -> s4 [68, 68] { R270 += 1, R198 += 1, R125 += 1, R126 += 1 };
  s1 -> s1 [69, 65535] { R270 += 1, R198 += 1, R125 += 1, R126 += 1 };
  s2 -> s1 [0, 67] { R270 += 1, R198 += 1, R125 += 1, R126 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R270 += 1, R197 += 1, R198 += 1 };
  s2 -> s3 [68, 68] { R270 += 1, R198 += 1, R125 += 1, R126 += 1 };
  s2 -> s4 [68, 68] { R270 += 1, R198 += 1, R125 += 1, R126 += 1 };
  s2 -> s1 [69, 65535] { R270 += 1, R198 += 1, R125 += 1, R126 += 1 };
  s3 -> s3 [0, 65535] { R270 += 1, R198 += 1, R125 += 1, R126 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R270 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R270 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R270 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 67] { R272 += 1, R200 += 1, R135 += 1, R136 += 1 };
  s0 -> s0 [0, 65535] { R271 += 1, R272 += 1 };
  s0 -> s2 [0, 65535] { R272 += 1, R199 += 1, R200 += 1 };
  s0 -> s3 [68, 68] { R272 += 1, R200 += 1, R135 += 1, R136 += 1 };
  s0 -> s4 [68, 68] { R272 += 1, R200 += 1, R135 += 1, R136 += 1 };
  s0 -> s1 [69, 65535] { R272 += 1, R200 += 1, R135 += 1, R136 += 1 };
  s1 -> s1 [0, 67] { R272 += 1, R200 += 1, R135 += 1, R136 += 1 };
  s1 -> s1 [0, 65535] { R272 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [68, 68] { R272 += 1, R200 += 1, R135 += 1, R136 += 1 };
  s1 -> s4 [68, 68] { R272 += 1, R200 += 1, R135 += 1, R136 += 1 };
  s1 -> s1 [69, 65535] { R272 += 1, R200 += 1, R135 += 1, R136 += 1 };
  s2 -> s1 [0, 67] { R272 += 1, R200 += 1, R135 += 1, R136 += 1 };
  s2 -> s2 [0, 65535] { R272 += 1, R199 += 1, R200 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [68, 68] { R272 += 1, R200 += 1, R135 += 1, R136 += 1 };
  s2 -> s4 [68, 68] { R272 += 1, R200 += 1, R135 += 1, R136 += 1 };
  s2 -> s1 [69, 65535] { R272 += 1, R200 += 1, R135 += 1, R136 += 1 };
  s3 -> s3 [0, 65535] { R272 += 1, R200 += 1, R135 += 1, R136 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R272 += 1 };
  s4 -> s4 [0, 65535] { R272 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R272 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
};
synchronised {  // Automata constraining P63
automaton P63_0 {
  init s0;
  s0 -> s1 [117, 117];
  accepting s1;
};
};
synchronised {  // Automata constraining P33
automaton P33_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
synchronised {  // Automata constraining P37
automaton P37_0 {
  init s0;
  s0 -> s1 [11, 11];
  accepting s1;
};
};
synchronised {  // Automata constraining P35
automaton P35_0 {
  init s0;
  s0 -> s1 [10, 10];
  accepting s1;
};
};
synchronised {  // Automata constraining P34
automaton P34_0 {
  init s0;
  s0 -> s1 [9, 9];
  accepting s1;
};
};
synchronised {  // Automata constraining P36
automaton P36_0 {
  init s0;
  s0 -> s1 [13, 13];
  accepting s1;
};
};
constraint R2 = R172 && R3 - R272 = 1 && R23 - R172 = -1 && R24 = R172 && R25 - R172 = -1 && R26 = R172 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R31 = R272 && R32 - R272 = 1 && R33 = R272 && R34 - R272 = 1 && R35 = 0 && R36 = 1 && R37 = 0 && R38 = 1 && R70 + R69 + -1*R140 + -1*R136 = 0 && R85 + R83 = 0 && R86 + R84 + -1*R140 + -1*R136 = 0 && R139 + R135 = 0 && R141 + R137 = 0 && R142 + R138 = 0 && R143 = 0 && R144 = R172 && R145 = 0 && R146 = R172 && R147 = 0 && R148 = R172 && R149 = 0 && R150 = R172 && R151 = 0 && R152 = R172 && R153 = 0 && R154 = R172 && R155 = 0 && R156 = R172 && R157 = 0 && R158 = R172 && R159 = 0 && R160 = R172 && R161 = 0 && R162 = R172 && R163 = 0 && R164 = R172 && R165 = 0 && R166 = R172 && R167 = 0 && R168 = R172 && R169 = 0 && R170 = R172 && R171 = 0 && R201 = 0 && R202 = R272 && R203 = 0 && R204 = R272 && R205 = 0 && R206 = R272 && R207 = 0 && R208 = R272 && R209 = 0 && R210 = R272 && R211 = 0 && R212 = R272 && R213 = 0 && R214 = R272 && R215 = 0 && R216 = R272 && R217 = 0 && R218 = R272 && R219 = 0 && R220 = R272 && R221 = 0 && R222 = R272 && R223 = 0 && R224 = R272 && R225 = 0 && R226 = R272 && R227 = 0 && R228 = R272 && R229 = 0 && R230 = R272 && R231 = 0 && R232 = R272 && R233 = 0 && R234 = R272 && R235 = 0 && R236 = R272 && R237 = 0 && R238 = R272 && R239 = 0 && R240 = R272 && R241 = 0 && R242 = R272 && R243 = 0 && R244 = R272 && R245 = 0 && R246 = R272 && R247 = 0 && R248 = R272 && R249 = 0 && R250 = R272 && R251 = 0 && R252 = R272 && R253 = 0 && R254 = R272 && R255 = 0 && R256 = R272 && R257 = 0 && R258 = R272 && R259 = 0 && R260 = R272 && R261 = 0 && R262 = R272 && R263 = 0 && R264 = R272 && R265 = 0 && R266 = R272 && R267 = 0 && R268 = R272 && R269 = 0 && R270 = R272 && R271 = 0 && R14 < 1 && R17 < 1 && R72 + R71 < 1 && -1*R92 + -1*R89 < 1 && R98 + R95 < 1 && -1*R140 + -1*R136 < 1 && 0 < R172 && -1 < R272 && (R90 + R87 != 0 || R91 + R88 + -1*R140 + -1*R136 = 0 || R92 + R89 < 1) && (R92 + R89 != 0 || R116 + R111 = 0 || (R105 + R101 = 0 && R106 + R102 = 0)) && (R92 + R89 != 0 || R116 + R111 = 0 || (R114 + R109 = 0 && R115 + R110 = 0)) && (R92 + R89 != 0 || R116 + R111 = 0 || (R123 + R119 = 0 && R124 + R120 = 0)) && (R92 + R89 != 0 || ((R90 + R87 != 0 || R91 + R88 + -1*R140 + -1*R136 = 0 || R140 + R136 < 1) && (R90 + R87 = 0 || R140 + R136 < 1))) && (R96 + R93 != 0 || R97 + R94 + -1*R140 + -1*R136 = 0 || (R92 + R89 = 0 && R140 + R136 = 0)) && (R103 + R99 != 0 || R104 + R100 + -1*R140 + -1*R136 = 0 || (R92 + R89 = 0 && R140 + R136 = 0)) && (R105 + R101 != 0 || R92 + R89 + -1*R106 + -1*R102 = 0 || R92 + R89 < 1) && (R112 + R107 != 0 || R113 + R108 + -1*R140 + -1*R136 = 0 || (R92 + R89 = 0 && R140 + R136 = 0)) && (R114 + R109 != 0 || R92 + R89 + -1*R115 + -1*R110 = 0 || R92 + R89 < 1) && (R121 + R117 != 0 || R122 + R118 + -1*R140 + -1*R136 = 0 || (R92 + R89 = 0 && R140 + R136 = 0)) && (R123 + R119 != 0 || R92 + R89 + -1*R124 + -1*R120 = 0 || R92 + R89 < 1) && (R130 + R125 != 0 || R131 + R126 + -1*R140 + -1*R136 = 0 || (R92 + R89 = 0 && R140 + R136 = 0)) && (R22 = 0 || (R173 = 0 && R174 = 0)) && (R22 = 0 || (R175 = 0 && R176 = 0)) && (R22 = 0 || (R177 = 0 && R178 = 0)) && (R22 = 0 || (R179 = 0 && R180 = 0)) && (R22 = 0 || (R181 = 0 && R182 = 0)) && (R22 = 0 || (R183 = 0 && R184 = 0)) && (R22 = 0 || (R185 = 0 && R186 = 0)) && (R22 = 0 || (R187 = 0 && R188 = 0)) && (R22 = 0 || (R189 = 0 && R190 = 0)) && (R22 = 0 || (R191 = 0 && R192 = 0)) && (R22 = 0 || (R193 = 0 && R194 = 0)) && (R22 = 0 || (R195 = 0 && R196 = 0)) && (R22 = 0 || (R197 = 0 && R198 = 0)) && (R22 = 0 || (R199 = 0 && R200 = 0)) && (R78 + R75 = 0 || (R76 + R73 = 0 && R77 + R74 = 0)) && (R78 + R75 = 0 || (R81 + R79 = 0 && R82 + R80 = 0)) && (R90 + R87 = 0 || R92 + R89 < 1) && (R96 + R93 = 0 || (R92 + R89 = 0 && R140 + R136 = 0)) && (R103 + R99 = 0 || (R92 + R89 = 0 && R140 + R136 = 0)) && (R105 + R101 = 0 || R92 + R89 < 1) && (R112 + R107 = 0 || (R92 + R89 = 0 && R140 + R136 = 0)) && (R114 + R109 = 0 || R92 + R89 < 1) && (R121 + R117 = 0 || (R92 + R89 = 0 && R140 + R136 = 0)) && (R123 + R119 = 0 || R92 + R89 < 1) && (R130 + R125 = 0 || (R92 + R89 = 0 && R140 + R136 = 0)) && (R134 + R129 = 0 || (R132 + R127 = 0 && R133 + R128 = 0));
// End of Parikh automata intersection problem
