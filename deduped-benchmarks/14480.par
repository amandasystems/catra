// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R11522, R11523, R11524, R11525, R12, R17, R18, R19, R19158, R19159, R19160, R19161, R19162, R19163, R19164, R19165, R19166, R19167, R19168, R19169, R19170, R19171, R19172, R19173, R19486, R19487, R19488, R19489, R19490, R19491, R19492, R19493, R19494, R19495, R19496, R19497, R19498, R19499, R19500, R19501, R19502, R19503, R19504, R19505, R19506, R19507, R19508, R19509, R19510, R19511, R19512, R19513, R19514, R19515, R19516, R19517, R19518, R19519, R19520, R19521, R19522, R19523, R19524, R19525, R19526, R19527, R19528, R19529, R19530, R19531, R19532, R19533, R19534, R19535, R19536, R19537, R19538, R19539, R19540, R19541, R19542, R19543, R19544, R19545, R19546, R19547, R19548, R19549, R19550, R19551, R19552, R19553, R19554, R19555, R19556, R19557, R19558, R19559, R19560, R19561, R19562, R19563, R19564, R19565, R19566, R19567, R19568, R19569, R19570, R19571, R19572, R19573, R19574, R19575, R19576, R19577, R19578, R19579, R19580, R19581, R19582, R19583, R19584, R19585, R19586, R19587, R19588, R19589, R2, R20, R21, R22, R23, R24, R25, R26, R27, R3, R38, R4, R40, R42, R43, R46, R47, R48, R52, R53, R56, R57, R58, R62, R63, R66, R67, R68, R69, R8;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [73, 73];
  s0 -> s0 [74, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [73, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R2 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R11 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 72];
  s0 -> s0 [0, 65535] { R12 += 1 };
  s0 -> s2 [73, 73];
  s0 -> s1 [74, 65535];
  s1 -> s1 [0, 72];
  s1 -> s2 [73, 73];
  s1 -> s1 [74, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R21 += 1 };
  s0 -> s0 [0, 65535] { R20 += 1, R21 += 1 };
  s0 -> s2 [9, 13] { R21 += 1 };
  s0 -> s1 [14, 31] { R21 += 1 };
  s0 -> s2 [32, 32] { R21 += 1 };
  s0 -> s1 [33, 65535] { R21 += 1 };
  s1 -> s1 [0, 65535] { R21 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R21 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R22 += 1, R23 += 1 };
  s1 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R25 += 1 };
  s0 -> s0 [0, 65535] { R24 += 1, R25 += 1 };
  s0 -> s2 [9, 13] { R25 += 1 };
  s0 -> s1 [14, 31] { R25 += 1 };
  s0 -> s2 [32, 32] { R25 += 1 };
  s0 -> s1 [33, 65535] { R25 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R25 += 1 };
  s2 -> s1 [0, 65535] { R25 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R26 += 1, R27 += 1 };
  s1 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R19510 += 1, R19511 += 1 };
  s0 -> s1 [0, 65535] { R19511 += 1, R19 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R19511 += 1, R19 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 72] { R19513 += 1 };
  s0 -> s0 [0, 65535] { R19512 += 1, R19513 += 1 };
  s0 -> s2 [73, 73] { R19513 += 1 };
  s0 -> s3 [73, 73] { R19513 += 1 };
  s0 -> s1 [82, 65535] { R19513 += 1 };
  s1 -> s1 [0, 72] { R19513 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19513 += 1 };
  s1 -> s3 [73, 73] { R19513 += 1 };
  s1 -> s1 [82, 65535] { R19513 += 1 };
  s2 -> s2 [0, 73] { R19513 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [82, 65535] { R19513 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 72] { R19515 += 1, R38 += 1 };
  s0 -> s0 [0, 65535] { R19514 += 1, R19515 += 1 };
  s0 -> s2 [73, 73] { R19515 += 1, R38 += 1 };
  s0 -> s3 [73, 73] { R19515 += 1, R38 += 1 };
  s0 -> s1 [74, 65535] { R19515 += 1, R38 += 1 };
  s1 -> s1 [0, 72] { R19515 += 1, R38 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19515 += 1, R38 += 1 };
  s1 -> s3 [73, 73] { R19515 += 1, R38 += 1 };
  s1 -> s1 [74, 65535] { R19515 += 1, R38 += 1 };
  s2 -> s2 [0, 65535] { R19515 += 1, R38 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 72] { R19517 += 1, R40 += 1 };
  s0 -> s0 [0, 65535] { R19516 += 1, R19517 += 1 };
  s0 -> s2 [73, 73] { R19517 += 1, R40 += 1 };
  s0 -> s3 [73, 73] { R19517 += 1, R40 += 1 };
  s0 -> s1 [74, 65535] { R19517 += 1, R40 += 1 };
  s1 -> s1 [0, 72] { R19517 += 1, R40 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19517 += 1, R40 += 1 };
  s1 -> s3 [73, 73] { R19517 += 1, R40 += 1 };
  s1 -> s1 [74, 65535] { R19517 += 1, R40 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R19517 += 1, R40 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 72] { R19519 += 1, R42 += 1, R43 += 1 };
  s0 -> s0 [0, 65535] { R19518 += 1, R19519 += 1 };
  s0 -> s2 [73, 73] { R19519 += 1, R42 += 1, R43 += 1 };
  s0 -> s3 [73, 73] { R19519 += 1, R42 += 1, R43 += 1 };
  s0 -> s1 [74, 65535] { R19519 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 72] { R19519 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19519 += 1, R42 += 1, R43 += 1 };
  s1 -> s3 [73, 73] { R19519 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [74, 65535] { R19519 += 1, R42 += 1, R43 += 1 };
  s2 -> s2 [0, 65535] { R19519 += 1, R42 += 1, R43 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 72] { R19521 += 1, R46 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R19520 += 1, R19521 += 1 };
  s0 -> s2 [73, 73] { R19521 += 1, R46 += 1, R47 += 1 };
  s0 -> s3 [73, 73] { R19521 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [74, 65535] { R19521 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 72] { R19521 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19521 += 1, R46 += 1, R47 += 1 };
  s1 -> s3 [73, 73] { R19521 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [74, 65535] { R19521 += 1, R46 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R19521 += 1, R46 += 1, R47 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 72] { R19523 += 1, R52 += 1, R53 += 1 };
  s0 -> s0 [0, 65535] { R19522 += 1, R19523 += 1 };
  s0 -> s2 [73, 73] { R19523 += 1, R52 += 1, R53 += 1 };
  s0 -> s3 [73, 73] { R19523 += 1, R52 += 1, R53 += 1 };
  s0 -> s1 [74, 65535] { R19523 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 72] { R19523 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19523 += 1, R52 += 1, R53 += 1 };
  s1 -> s3 [73, 73] { R19523 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [74, 65535] { R19523 += 1, R52 += 1, R53 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R19523 += 1, R52 += 1, R53 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 72] { R19525 += 1, R56 += 1, R57 += 1 };
  s0 -> s0 [0, 65535] { R19524 += 1, R19525 += 1 };
  s0 -> s2 [73, 73] { R19525 += 1, R56 += 1, R57 += 1 };
  s0 -> s3 [73, 73] { R19525 += 1, R56 += 1, R57 += 1 };
  s0 -> s1 [74, 65535] { R19525 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 72] { R19525 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19525 += 1, R56 += 1, R57 += 1 };
  s1 -> s3 [73, 73] { R19525 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [74, 65535] { R19525 += 1, R56 += 1, R57 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R19525 += 1, R56 += 1, R57 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 72] { R19527 += 1, R62 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R19526 += 1, R19527 += 1 };
  s0 -> s2 [73, 73] { R19527 += 1, R62 += 1, R63 += 1 };
  s0 -> s3 [73, 73] { R19527 += 1, R62 += 1, R63 += 1 };
  s0 -> s1 [74, 65535] { R19527 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 72] { R19527 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19527 += 1, R62 += 1, R63 += 1 };
  s1 -> s3 [73, 73] { R19527 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [74, 65535] { R19527 += 1, R62 += 1, R63 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R19527 += 1, R62 += 1, R63 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 72] { R19547 += 1 };
  s0 -> s0 [0, 65535] { R19546 += 1, R19547 += 1 };
  s0 -> s2 [73, 73] { R19547 += 1 };
  s0 -> s1 [74, 65535] { R19547 += 1 };
  s1 -> s1 [0, 72] { R19547 += 1 };
  s1 -> s2 [73, 73] { R19547 += 1 };
  s1 -> s1 [74, 65535] { R19547 += 1 };
  s2 -> s2 [0, 65535] { R19547 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R19549 += 1, R1 += 1 };
  s0 -> s0 [0, 65535] { R19548 += 1, R19549 += 1 };
  s1 -> s1 [0, 65535] { R19549 += 1, R1 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 72] { R19551 += 1 };
  s0 -> s2 [0, 65535] { R19551 += 1, R8 += 1 };
  s0 -> s0 [0, 65535] { R19550 += 1, R19551 += 1 };
  s0 -> s3 [73, 73] { R19551 += 1 };
  s0 -> s1 [74, 65535] { R19551 += 1 };
  s1 -> s1 [0, 72] { R19551 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [73, 73] { R19551 += 1 };
  s1 -> s1 [74, 65535] { R19551 += 1 };
  s2 -> s1 [0, 72] { R19551 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R19551 += 1, R8 += 1 };
  s2 -> s3 [73, 73] { R19551 += 1 };
  s2 -> s1 [74, 65535] { R19551 += 1 };
  s3 -> s3 [0, 65535] { R19551 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 72] { R19553 += 1, R19491 += 1 };
  s0 -> s2 [0, 65535] { R19553 += 1, R19490 += 1, R19491 += 1 };
  s0 -> s0 [0, 65535] { R19552 += 1, R19553 += 1 };
  s0 -> s1 [74, 65535] { R19553 += 1, R19491 += 1 };
  s1 -> s1 [0, 72] { R19553 += 1, R19491 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R19553 += 1 };
  s1 -> s1 [74, 65535] { R19553 += 1, R19491 += 1 };
  s2 -> s1 [0, 72] { R19553 += 1, R19491 += 1 };
  s2 -> s2 [0, 65535] { R19553 += 1, R19490 += 1, R19491 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [74, 65535] { R19553 += 1, R19491 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s0 [0, 65535] { R19554 += 1, R19555 += 1 };
  s0 -> s1 [0, 65535] { R19555 += 1, R19493 += 1, R17 += 1 };
  s0 -> s2 [0, 65535] { R19555 += 1, R19492 += 1, R19493 += 1 };
  s1 -> s4 [0, 65535] { R19555 += 1 };
  s1 -> s1 [0, 65535] { R19555 += 1, R19493 += 1, R17 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R19555 += 1, R19493 += 1, R17 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R19555 += 1, R19492 += 1, R19493 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19555 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 73] { R19557 += 1, R19495 += 1 };
  s0 -> s0 [0, 65535] { R19556 += 1, R19557 += 1 };
  s0 -> s2 [0, 65535] { R19557 += 1, R19494 += 1, R19495 += 1 };
  s0 -> s1 [81, 65535] { R19557 += 1, R19495 += 1 };
  s1 -> s1 [0, 73] { R19557 += 1, R19495 += 1 };
  s1 -> s1 [0, 65535] { R19557 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [81, 65535] { R19557 += 1, R19495 += 1 };
  s2 -> s1 [0, 73] { R19557 += 1, R19495 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R19557 += 1, R19494 += 1, R19495 += 1 };
  s2 -> s1 [81, 65535] { R19557 += 1, R19495 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R19558 += 1, R19559 += 1 };
  s0 -> s1 [0, 65535] { R19559 += 1, R19496 += 1, R19497 += 1 };
  s0 -> s2 [0, 65535] { R19559 += 1, R19497 += 1, R67 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R19559 += 1, R19496 += 1, R19497 += 1 };
  s1 -> s2 [0, 65535] { R19559 += 1, R19497 += 1, R67 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R19559 += 1 };
  s2 -> s2 [0, 65535] { R19559 += 1, R19497 += 1, R67 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19559 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 80] { R19561 += 1, R19499 += 1 };
  s0 -> s2 [0, 65535] { R19561 += 1, R19499 += 1, R69 += 1 };
  s0 -> s3 [0, 65535] { R19561 += 1, R19498 += 1, R19499 += 1 };
  s0 -> s0 [0, 65535] { R19560 += 1, R19561 += 1 };
  s0 -> s1 [82, 65535] { R19561 += 1, R19499 += 1 };
  s1 -> s1 [0, 80] { R19561 += 1, R19499 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R19561 += 1 };
  s1 -> s1 [82, 65535] { R19561 += 1, R19499 += 1 };
  s2 -> s1 [0, 80] { R19561 += 1, R19499 += 1 };
  s2 -> s2 [0, 65535] { R19561 += 1, R19499 += 1, R69 += 1 };
  s2 -> s5 [0, 65535] { R19561 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [82, 65535] { R19561 += 1, R19499 += 1 };
  s3 -> s1 [0, 80] { R19561 += 1, R19499 += 1 };
  s3 -> s2 [0, 65535] { R19561 += 1, R19499 += 1, R69 += 1 };
  s3 -> s3 [0, 65535] { R19561 += 1, R19498 += 1, R19499 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [82, 65535] { R19561 += 1, R19499 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R19561 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 80] { R19563 += 1, R19501 += 1, R11525 += 1 };
  s0 -> s1 [0, 65535] { R19563 += 1, R19501 += 1 };
  s0 -> s0 [0, 65535] { R19562 += 1, R19563 += 1 };
  s0 -> s2 [0, 65535] { R19563 += 1, R19500 += 1, R19501 += 1 };
  s0 -> s1 [82, 65535] { R19563 += 1, R19501 += 1, R11525 += 1 };
  s1 -> s1 [0, 80] { R19563 += 1, R19501 += 1, R11525 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R19563 += 1, R19501 += 1 };
  s1 -> s4 [0, 65535] { R19563 += 1 };
  s1 -> s1 [82, 65535] { R19563 += 1, R19501 += 1, R11525 += 1 };
  s2 -> s1 [0, 80] { R19563 += 1, R19501 += 1, R11525 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R19563 += 1, R19501 += 1 };
  s2 -> s2 [0, 65535] { R19563 += 1, R19500 += 1, R19501 += 1 };
  s2 -> s1 [82, 65535] { R19563 += 1, R19501 += 1, R11525 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19563 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R19564 += 1, R19565 += 1 };
  s0 -> s1 [0, 65535] { R19565 += 1, R19503 += 1 };
  s0 -> s2 [0, 65535] { R19565 += 1, R19502 += 1, R19503 += 1 };
  s1 -> s1 [0, 65535] { R19565 += 1, R19503 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R19565 += 1 };
  s2 -> s1 [0, 65535] { R19565 += 1, R19503 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R19565 += 1, R19502 += 1, R19503 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19565 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 81] { R19567 += 1, R19505 += 1, R19167 += 1 };
  s0 -> s1 [0, 65535] { R19567 += 1, R19505 += 1 };
  s0 -> s0 [0, 65535] { R19566 += 1, R19567 += 1 };
  s0 -> s2 [0, 65535] { R19567 += 1, R19504 += 1, R19505 += 1 };
  s0 -> s1 [88, 65535] { R19567 += 1, R19505 += 1, R19167 += 1 };
  s1 -> s1 [0, 81] { R19567 += 1, R19505 += 1, R19167 += 1 };
  s1 -> s1 [0, 65535] { R19567 += 1, R19505 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R19567 += 1 };
  s1 -> s1 [88, 65535] { R19567 += 1, R19505 += 1, R19167 += 1 };
  s2 -> s1 [0, 81] { R19567 += 1, R19505 += 1, R19167 += 1 };
  s2 -> s1 [0, 65535] { R19567 += 1, R19505 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R19567 += 1, R19504 += 1, R19505 += 1 };
  s2 -> s1 [88, 65535] { R19567 += 1, R19505 += 1, R19167 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19567 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R19569 += 1, R19506 += 1, R19507 += 1 };
  s0 -> s0 [0, 65535] { R19568 += 1, R19569 += 1 };
  s0 -> s2 [0, 65535] { R19569 += 1, R19507 += 1, R19171 += 1, R19172 += 1 };
  s0 -> s3 [0, 65535] { R19569 += 1, R19507 += 1, R19172 += 1, R19173 += 1 };
  s1 -> s1 [0, 65535] { R19569 += 1, R19506 += 1, R19507 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R19569 += 1, R19507 += 1, R19171 += 1, R19172 += 1 };
  s1 -> s3 [0, 65535] { R19569 += 1, R19507 += 1, R19172 += 1, R19173 += 1 };
  s2 -> s4 [0, 65535] { R19569 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R19569 += 1, R19507 += 1, R19171 += 1, R19172 += 1 };
  s2 -> s3 [0, 65535] { R19569 += 1, R19507 += 1, R19172 += 1, R19173 += 1 };
  s3 -> s4 [0, 65535] { R19569 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R19569 += 1, R19507 += 1 };
  s3 -> s3 [0, 65535] { R19569 += 1, R19507 += 1, R19172 += 1, R19173 += 1 };
  s4 -> s4 [0, 65535] { R19569 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R19569 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R19569 += 1, R19507 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 81] { R19571 += 1, R19509 += 1, R19489 += 1 };
  s0 -> s1 [0, 65535] { R19571 += 1, R19509 += 1 };
  s0 -> s0 [0, 65535] { R19570 += 1, R19571 += 1 };
  s0 -> s2 [0, 65535] { R19571 += 1, R19508 += 1, R19509 += 1 };
  s0 -> s1 [89, 65535] { R19571 += 1, R19509 += 1, R19489 += 1 };
  s1 -> s1 [0, 81] { R19571 += 1, R19509 += 1, R19489 += 1 };
  s1 -> s1 [0, 65535] { R19571 += 1, R19509 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R19571 += 1 };
  s1 -> s1 [89, 65535] { R19571 += 1, R19509 += 1, R19489 += 1 };
  s2 -> s1 [0, 81] { R19571 += 1, R19509 += 1, R19489 += 1 };
  s2 -> s1 [0, 65535] { R19571 += 1, R19509 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R19571 += 1, R19508 += 1, R19509 += 1 };
  s2 -> s1 [89, 65535] { R19571 += 1, R19509 += 1, R19489 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19571 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R19573 += 1, R19528 += 1, R19529 += 1 };
  s0 -> s0 [0, 65535] { R19572 += 1, R19573 += 1 };
  s0 -> s2 [0, 65535] { R19573 += 1, R19529 += 1, R18 += 1 };
  s1 -> s1 [0, 65535] { R19573 += 1, R19528 += 1, R19529 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R19573 += 1, R19529 += 1, R18 += 1 };
  s2 -> s3 [0, 65535] { R19573 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R19573 += 1, R19529 += 1, R18 += 1 };
  s3 -> s3 [0, 65535] { R19573 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 72] { R19575 += 1, R19531 += 1 };
  s0 -> s2 [0, 65535] { R19575 += 1, R19530 += 1, R19531 += 1 };
  s0 -> s0 [0, 65535] { R19574 += 1, R19575 += 1 };
  s0 -> s3 [73, 73] { R19575 += 1, R19531 += 1 };
  s0 -> s4 [73, 73] { R19575 += 1, R19531 += 1 };
  s0 -> s5 [81, 81] { R19575 += 1, R19531 += 1 };
  s0 -> s1 [82, 65535] { R19575 += 1, R19531 += 1 };
  s1 -> s1 [0, 72] { R19575 += 1, R19531 += 1 };
  s1 -> s3 [73, 73] { R19575 += 1, R19531 += 1 };
  s1 -> s4 [73, 73] { R19575 += 1, R19531 += 1 };
  s1 -> s5 [81, 81] { R19575 += 1, R19531 += 1 };
  s1 -> s1 [82, 65535] { R19575 += 1, R19531 += 1 };
  s2 -> s1 [0, 72] { R19575 += 1, R19531 += 1 };
  s2 -> s2 [0, 65535] { R19575 += 1, R19530 += 1, R19531 += 1 };
  s2 -> s3 [73, 73] { R19575 += 1, R19531 += 1 };
  s2 -> s4 [73, 73] { R19575 += 1, R19531 += 1 };
  s2 -> s5 [81, 81] { R19575 += 1, R19531 += 1 };
  s2 -> s1 [82, 65535] { R19575 += 1, R19531 += 1 };
  s3 -> s3 [0, 73] { R19575 += 1, R19531 += 1 };
  s3 -> s7 [81, 81] { R19575 += 1, R19531 += 1 };
  s3 -> s3 [82, 65535] { R19575 += 1, R19531 += 1 };
  s5 -> s5 [0, 72] { R19575 += 1, R19531 += 1 };
  s5 -> s5 [0, 65535] { R19575 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [73, 73] { R19575 += 1, R19531 += 1 };
  s5 -> s8 [73, 73] { R19575 += 1, R19531 += 1 };
  s5 -> s5 [81, 65535] { R19575 += 1, R19531 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 73] { R19575 += 1, R19531 += 1 };
  s7 -> s7 [0, 65535] { R19575 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [81, 65535] { R19575 += 1, R19531 += 1 };
  s8 -> s8 [0, 65535] { R19575 += 1 };
  s8 -> s6 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 72] { R19577 += 1, R19533 += 1, R66 += 1 };
  s0 -> s2 [0, 65535] { R19577 += 1, R19532 += 1, R19533 += 1 };
  s0 -> s0 [0, 65535] { R19576 += 1, R19577 += 1 };
  s0 -> s3 [73, 73] { R19577 += 1, R19533 += 1, R66 += 1 };
  s0 -> s4 [73, 73] { R19577 += 1, R19533 += 1, R66 += 1 };
  s0 -> s1 [74, 65535] { R19577 += 1, R19533 += 1, R66 += 1 };
  s1 -> s1 [0, 72] { R19577 += 1, R19533 += 1, R66 += 1 };
  s1 -> s1 [0, 65535] { R19577 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [73, 73] { R19577 += 1, R19533 += 1, R66 += 1 };
  s1 -> s4 [73, 73] { R19577 += 1, R19533 += 1, R66 += 1 };
  s1 -> s1 [74, 65535] { R19577 += 1, R19533 += 1, R66 += 1 };
  s2 -> s1 [0, 72] { R19577 += 1, R19533 += 1, R66 += 1 };
  s2 -> s2 [0, 65535] { R19577 += 1, R19532 += 1, R19533 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [73, 73] { R19577 += 1, R19533 += 1, R66 += 1 };
  s2 -> s4 [73, 73] { R19577 += 1, R19533 += 1, R66 += 1 };
  s2 -> s1 [74, 65535] { R19577 += 1, R19533 += 1, R66 += 1 };
  s3 -> s3 [0, 65535] { R19577 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R19577 += 1 };
  s4 -> s4 [0, 65535] { R19577 += 1, R19533 += 1, R66 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R19577 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 72] { R19579 += 1, R19535 += 1, R68 += 1 };
  s0 -> s2 [0, 65535] { R19579 += 1, R19534 += 1, R19535 += 1 };
  s0 -> s0 [0, 65535] { R19578 += 1, R19579 += 1 };
  s0 -> s3 [73, 73] { R19579 += 1, R19535 += 1, R68 += 1 };
  s0 -> s4 [73, 73] { R19579 += 1, R19535 += 1, R68 += 1 };
  s0 -> s1 [74, 65535] { R19579 += 1, R19535 += 1, R68 += 1 };
  s1 -> s1 [0, 72] { R19579 += 1, R19535 += 1, R68 += 1 };
  s1 -> s1 [0, 65535] { R19579 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [73, 73] { R19579 += 1, R19535 += 1, R68 += 1 };
  s1 -> s4 [73, 73] { R19579 += 1, R19535 += 1, R68 += 1 };
  s1 -> s1 [74, 65535] { R19579 += 1, R19535 += 1, R68 += 1 };
  s2 -> s1 [0, 72] { R19579 += 1, R19535 += 1, R68 += 1 };
  s2 -> s2 [0, 65535] { R19579 += 1, R19534 += 1, R19535 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [73, 73] { R19579 += 1, R19535 += 1, R68 += 1 };
  s2 -> s4 [73, 73] { R19579 += 1, R19535 += 1, R68 += 1 };
  s2 -> s1 [74, 65535] { R19579 += 1, R19535 += 1, R68 += 1 };
  s3 -> s6 [0, 65535] { R19579 += 1 };
  s3 -> s3 [0, 65535] { R19579 += 1, R19535 += 1, R68 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R19579 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R19579 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 72] { R19581 += 1, R19537 += 1, R11523 += 1 };
  s0 -> s2 [0, 72] { R19581 += 1, R19537 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s3 [0, 65535] { R19581 += 1, R19536 += 1, R19537 += 1 };
  s0 -> s0 [0, 65535] { R19580 += 1, R19581 += 1 };
  s0 -> s4 [73, 73] { R19581 += 1, R19537 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s5 [73, 73] { R19581 += 1, R19537 += 1, R11523 += 1 };
  s0 -> s6 [73, 73] { R19581 += 1, R19537 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s7 [73, 73] { R19581 += 1, R19537 += 1, R11523 += 1 };
  s0 -> s1 [74, 80] { R19581 += 1, R19537 += 1, R11523 += 1 };
  s0 -> s2 [74, 65535] { R19581 += 1, R19537 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s1 [82, 65535] { R19581 += 1, R19537 += 1, R11523 += 1 };
  s1 -> s1 [0, 72] { R19581 += 1, R19537 += 1, R11523 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s1 [0, 65535] { R19581 += 1 };
  s1 -> s5 [73, 73] { R19581 += 1, R19537 += 1 };
  s1 -> s7 [73, 73] { R19581 += 1, R19537 += 1 };
  s1 -> s1 [74, 80] { R19581 += 1, R19537 += 1, R11523 += 1 };
  s1 -> s1 [74, 65535] { R19581 += 1, R19537 += 1 };
  s1 -> s1 [82, 65535] { R19581 += 1, R19537 += 1, R11523 += 1 };
  s2 -> s1 [0, 72] { R19581 += 1, R19537 += 1, R11523 += 1 };
  s2 -> s2 [0, 72] { R19581 += 1, R19537 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s4 [73, 73] { R19581 += 1, R19537 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s5 [73, 73] { R19581 += 1, R19537 += 1, R11523 += 1 };
  s2 -> s6 [73, 73] { R19581 += 1, R19537 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s7 [73, 73] { R19581 += 1, R19537 += 1, R11523 += 1 };
  s2 -> s1 [74, 80] { R19581 += 1, R19537 += 1, R11523 += 1 };
  s2 -> s2 [74, 65535] { R19581 += 1, R19537 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s1 [82, 65535] { R19581 += 1, R19537 += 1, R11523 += 1 };
  s3 -> s1 [0, 72] { R19581 += 1, R19537 += 1, R11523 += 1 };
  s3 -> s2 [0, 72] { R19581 += 1, R19537 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s3 [0, 65535] { R19581 += 1, R19536 += 1, R19537 += 1 };
  s3 -> s4 [73, 73] { R19581 += 1, R19537 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s5 [73, 73] { R19581 += 1, R19537 += 1, R11523 += 1 };
  s3 -> s6 [73, 73] { R19581 += 1, R19537 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s7 [73, 73] { R19581 += 1, R19537 += 1, R11523 += 1 };
  s3 -> s1 [74, 80] { R19581 += 1, R19537 += 1, R11523 += 1 };
  s3 -> s2 [74, 65535] { R19581 += 1, R19537 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s1 [82, 65535] { R19581 += 1, R19537 += 1, R11523 += 1 };
  s4 -> s5 [0, 80] { R19581 += 1, R19537 += 1, R11523 += 1 };
  s4 -> s4 [0, 65535] { R19581 += 1, R19537 += 1, R11522 += 1, R11523 += 1 };
  s4 -> s5 [82, 65535] { R19581 += 1, R19537 += 1, R11523 += 1 };
  s5 -> s5 [0, 80] { R19581 += 1, R19537 += 1, R11523 += 1 };
  s5 -> s5 [0, 65535] { R19581 += 1, R19537 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s9 [0, 65535] { R19581 += 1 };
  s5 -> s5 [82, 65535] { R19581 += 1, R19537 += 1, R11523 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R19581 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R19581 += 1 };
  accepting s8, s5, s9, s1, s7;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 72] { R19583 += 1, R19539 += 1, R19158 += 1, R19159 += 1 };
  s0 -> s2 [0, 72] { R19583 += 1, R19539 += 1, R19159 += 1, R19160 += 1 };
  s0 -> s3 [0, 65535] { R19583 += 1, R19538 += 1, R19539 += 1 };
  s0 -> s0 [0, 65535] { R19582 += 1, R19583 += 1 };
  s0 -> s4 [73, 73] { R19583 += 1, R19539 += 1, R19158 += 1, R19159 += 1 };
  s0 -> s5 [73, 73] { R19583 += 1, R19539 += 1, R19159 += 1, R19160 += 1 };
  s0 -> s6 [73, 73] { R19583 += 1, R19539 += 1, R19159 += 1, R19160 += 1 };
  s0 -> s7 [73, 73] { R19583 += 1, R19539 += 1, R19158 += 1, R19159 += 1 };
  s0 -> s1 [74, 65535] { R19583 += 1, R19539 += 1, R19158 += 1, R19159 += 1 };
  s0 -> s2 [74, 65535] { R19583 += 1, R19539 += 1, R19159 += 1, R19160 += 1 };
  s1 -> s1 [0, 72] { R19583 += 1, R19539 += 1, R19158 += 1, R19159 += 1 };
  s1 -> s2 [0, 72] { R19583 += 1, R19539 += 1, R19159 += 1, R19160 += 1 };
  s1 -> s4 [73, 73] { R19583 += 1, R19539 += 1, R19158 += 1, R19159 += 1 };
  s1 -> s5 [73, 73] { R19583 += 1, R19539 += 1, R19159 += 1, R19160 += 1 };
  s1 -> s6 [73, 73] { R19583 += 1, R19539 += 1, R19159 += 1, R19160 += 1 };
  s1 -> s7 [73, 73] { R19583 += 1, R19539 += 1, R19158 += 1, R19159 += 1 };
  s1 -> s1 [74, 65535] { R19583 += 1, R19539 += 1, R19158 += 1, R19159 += 1 };
  s1 -> s2 [74, 65535] { R19583 += 1, R19539 += 1, R19159 += 1, R19160 += 1 };
  s2 -> s2 [0, 72] { R19583 += 1, R19539 += 1, R19159 += 1, R19160 += 1 };
  s2 -> s11 [0, 72] { R19583 += 1, R19539 += 1 };
  s2 -> s5 [73, 73] { R19583 += 1, R19539 += 1, R19159 += 1, R19160 += 1 };
  s2 -> s6 [73, 73] { R19583 += 1, R19539 += 1, R19159 += 1, R19160 += 1 };
  s2 -> s12 [73, 73] { R19583 += 1, R19539 += 1 };
  s2 -> s8 [73, 73] { R19583 += 1, R19539 += 1 };
  s2 -> s2 [74, 65535] { R19583 += 1, R19539 += 1, R19159 += 1, R19160 += 1 };
  s2 -> s11 [74, 65535] { R19583 += 1, R19539 += 1 };
  s3 -> s1 [0, 72] { R19583 += 1, R19539 += 1, R19158 += 1, R19159 += 1 };
  s3 -> s2 [0, 72] { R19583 += 1, R19539 += 1, R19159 += 1, R19160 += 1 };
  s3 -> s3 [0, 65535] { R19583 += 1, R19538 += 1, R19539 += 1 };
  s3 -> s4 [73, 73] { R19583 += 1, R19539 += 1, R19158 += 1, R19159 += 1 };
  s3 -> s5 [73, 73] { R19583 += 1, R19539 += 1, R19159 += 1, R19160 += 1 };
  s3 -> s6 [73, 73] { R19583 += 1, R19539 += 1, R19159 += 1, R19160 += 1 };
  s3 -> s7 [73, 73] { R19583 += 1, R19539 += 1, R19158 += 1, R19159 += 1 };
  s3 -> s1 [74, 65535] { R19583 += 1, R19539 += 1, R19158 += 1, R19159 += 1 };
  s3 -> s2 [74, 65535] { R19583 += 1, R19539 += 1, R19159 += 1, R19160 += 1 };
  s5 -> s5 [0, 65535] { R19583 += 1, R19539 += 1, R19159 += 1, R19160 += 1 };
  s5 -> s8 [0, 65535] { R19583 += 1, R19539 += 1 };
  s7 -> s5 [0, 65535] { R19583 += 1, R19539 += 1, R19159 += 1, R19160 += 1 };
  s7 -> s7 [0, 65535] { R19583 += 1, R19539 += 1, R19158 += 1, R19159 += 1 };
  s8 -> s8 [0, 65535] { R19583 += 1, R19539 += 1 };
  s8 -> s9 [0, 65535] { R19583 += 1 };
  s8 -> s10 [0, 65535];
  s9 -> s9 [0, 65535] { R19583 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  s11 -> s11 [0, 72] { R19583 += 1, R19539 += 1 };
  s11 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R19583 += 1 };
  s11 -> s12 [73, 73] { R19583 += 1, R19539 += 1 };
  s11 -> s8 [73, 73] { R19583 += 1, R19539 += 1 };
  s11 -> s11 [74, 65535] { R19583 += 1, R19539 += 1 };
  s12 -> s12 [0, 65535] { R19583 += 1 };
  s12 -> s10 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 72] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s0 -> s2 [0, 72] { R19585 += 1, R19541 += 1, R19164 += 1, R19165 += 1 };
  s0 -> s0 [0, 65535] { R19584 += 1, R19585 += 1 };
  s0 -> s3 [0, 65535] { R19585 += 1, R19540 += 1, R19541 += 1 };
  s0 -> s4 [73, 73] { R19585 += 1, R19541 += 1, R19164 += 1, R19165 += 1 };
  s0 -> s5 [73, 73] { R19585 += 1, R19541 += 1, R19164 += 1, R19165 += 1 };
  s0 -> s6 [73, 73] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s0 -> s7 [73, 73] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s0 -> s1 [74, 81] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s0 -> s2 [74, 65535] { R19585 += 1, R19541 += 1, R19164 += 1, R19165 += 1 };
  s0 -> s8 [88, 88] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s0 -> s1 [89, 65535] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s1 -> s1 [0, 72] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s1 -> s6 [73, 73] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s1 -> s7 [73, 73] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s1 -> s1 [74, 81] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s1 -> s8 [88, 88] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s1 -> s1 [89, 65535] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s2 -> s1 [0, 72] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s2 -> s2 [0, 72] { R19585 += 1, R19541 += 1, R19164 += 1, R19165 += 1 };
  s2 -> s4 [73, 73] { R19585 += 1, R19541 += 1, R19164 += 1, R19165 += 1 };
  s2 -> s5 [73, 73] { R19585 += 1, R19541 += 1, R19164 += 1, R19165 += 1 };
  s2 -> s6 [73, 73] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s2 -> s7 [73, 73] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s2 -> s1 [74, 81] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s2 -> s2 [74, 65535] { R19585 += 1, R19541 += 1, R19164 += 1, R19165 += 1 };
  s2 -> s8 [88, 88] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s2 -> s1 [89, 65535] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s3 -> s1 [0, 72] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s3 -> s2 [0, 72] { R19585 += 1, R19541 += 1, R19164 += 1, R19165 += 1 };
  s3 -> s3 [0, 65535] { R19585 += 1, R19540 += 1, R19541 += 1 };
  s3 -> s4 [73, 73] { R19585 += 1, R19541 += 1, R19164 += 1, R19165 += 1 };
  s3 -> s5 [73, 73] { R19585 += 1, R19541 += 1, R19164 += 1, R19165 += 1 };
  s3 -> s6 [73, 73] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s3 -> s7 [73, 73] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s3 -> s1 [74, 81] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s3 -> s2 [74, 65535] { R19585 += 1, R19541 += 1, R19164 += 1, R19165 += 1 };
  s3 -> s8 [88, 88] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s3 -> s1 [89, 65535] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s5 -> s7 [0, 81] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s5 -> s5 [0, 65535] { R19585 += 1, R19541 += 1, R19164 += 1, R19165 += 1 };
  s5 -> s10 [88, 88] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s5 -> s7 [89, 65535] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s7 -> s7 [0, 81] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s7 -> s10 [88, 88] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s7 -> s7 [89, 65535] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s8 -> s8 [0, 72] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R19585 += 1 };
  s8 -> s10 [73, 73] { R19585 += 1, R19541 += 1 };
  s8 -> s11 [73, 73] { R19585 += 1, R19541 += 1 };
  s8 -> s8 [74, 81] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s8 -> s8 [74, 65535] { R19585 += 1, R19541 += 1 };
  s8 -> s8 [88, 65535] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 81] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s10 -> s10 [0, 65535] { R19585 += 1, R19541 += 1 };
  s10 -> s12 [0, 65535] { R19585 += 1 };
  s10 -> s9 [0, 65535];
  s10 -> s10 [88, 65535] { R19585 += 1, R19541 += 1, R19165 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R19585 += 1 };
  s12 -> s12 [0, 65535] { R19585 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 72] { R19587 += 1, R19543 += 1, R19168 += 1, R19169 += 1 };
  s0 -> s0 [0, 65535] { R19586 += 1, R19587 += 1 };
  s0 -> s2 [0, 65535] { R19587 += 1, R19542 += 1, R19543 += 1 };
  s0 -> s3 [73, 73] { R19587 += 1, R19543 += 1, R19168 += 1, R19169 += 1 };
  s0 -> s4 [73, 73] { R19587 += 1, R19543 += 1, R19168 += 1, R19169 += 1 };
  s0 -> s1 [74, 65535] { R19587 += 1, R19543 += 1, R19168 += 1, R19169 += 1 };
  s1 -> s1 [0, 72] { R19587 += 1, R19543 += 1, R19168 += 1, R19169 += 1 };
  s1 -> s1 [0, 65535] { R19587 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [73, 73] { R19587 += 1, R19543 += 1, R19168 += 1, R19169 += 1 };
  s1 -> s4 [73, 73] { R19587 += 1, R19543 += 1, R19168 += 1, R19169 += 1 };
  s1 -> s1 [74, 65535] { R19587 += 1, R19543 += 1, R19168 += 1, R19169 += 1 };
  s2 -> s1 [0, 72] { R19587 += 1, R19543 += 1, R19168 += 1, R19169 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R19587 += 1, R19542 += 1, R19543 += 1 };
  s2 -> s3 [73, 73] { R19587 += 1, R19543 += 1, R19168 += 1, R19169 += 1 };
  s2 -> s4 [73, 73] { R19587 += 1, R19543 += 1, R19168 += 1, R19169 += 1 };
  s2 -> s1 [74, 65535] { R19587 += 1, R19543 += 1, R19168 += 1, R19169 += 1 };
  s3 -> s6 [0, 65535] { R19587 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R19587 += 1, R19543 += 1, R19168 += 1, R19169 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R19587 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R19587 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 72] { R19589 += 1, R19545 += 1, R19487 += 1 };
  s0 -> s2 [0, 72] { R19589 += 1, R19545 += 1, R19486 += 1, R19487 += 1 };
  s0 -> s3 [0, 65535] { R19589 += 1, R19544 += 1, R19545 += 1 };
  s0 -> s0 [0, 65535] { R19588 += 1, R19589 += 1 };
  s0 -> s4 [73, 73] { R19589 += 1, R19545 += 1, R19487 += 1 };
  s0 -> s5 [73, 73] { R19589 += 1, R19545 += 1, R19486 += 1, R19487 += 1 };
  s0 -> s6 [73, 73] { R19589 += 1, R19545 += 1, R19486 += 1, R19487 += 1 };
  s0 -> s7 [73, 73] { R19589 += 1, R19545 += 1, R19487 += 1 };
  s0 -> s1 [74, 80] { R19589 += 1, R19545 += 1, R19487 += 1 };
  s0 -> s2 [74, 65535] { R19589 += 1, R19545 += 1, R19486 += 1, R19487 += 1 };
  s0 -> s8 [81, 81] { R19589 += 1, R19545 += 1, R19487 += 1 };
  s0 -> s1 [89, 65535] { R19589 += 1, R19545 += 1, R19487 += 1 };
  s1 -> s1 [0, 72] { R19589 += 1, R19545 += 1, R19487 += 1 };
  s1 -> s4 [73, 73] { R19589 += 1, R19545 += 1 };
  s1 -> s7 [73, 73] { R19589 += 1, R19545 += 1 };
  s1 -> s1 [74, 80] { R19589 += 1, R19545 += 1, R19487 += 1 };
  s1 -> s1 [74, 65535] { R19589 += 1, R19545 += 1 };
  s1 -> s8 [81, 81] { R19589 += 1, R19545 += 1, R19487 += 1 };
  s1 -> s1 [89, 65535] { R19589 += 1, R19545 += 1, R19487 += 1 };
  s2 -> s1 [0, 72] { R19589 += 1, R19545 += 1, R19487 += 1 };
  s2 -> s2 [0, 72] { R19589 += 1, R19545 += 1, R19486 += 1, R19487 += 1 };
  s2 -> s4 [73, 73] { R19589 += 1, R19545 += 1, R19487 += 1 };
  s2 -> s5 [73, 73] { R19589 += 1, R19545 += 1, R19486 += 1, R19487 += 1 };
  s2 -> s6 [73, 73] { R19589 += 1, R19545 += 1, R19486 += 1, R19487 += 1 };
  s2 -> s7 [73, 73] { R19589 += 1, R19545 += 1, R19487 += 1 };
  s2 -> s1 [74, 80] { R19589 += 1, R19545 += 1, R19487 += 1 };
  s2 -> s2 [74, 65535] { R19589 += 1, R19545 += 1, R19486 += 1, R19487 += 1 };
  s2 -> s8 [81, 81] { R19589 += 1, R19545 += 1, R19487 += 1 };
  s2 -> s1 [89, 65535] { R19589 += 1, R19545 += 1, R19487 += 1 };
  s3 -> s1 [0, 72] { R19589 += 1, R19545 += 1, R19487 += 1 };
  s3 -> s2 [0, 72] { R19589 += 1, R19545 += 1, R19486 += 1, R19487 += 1 };
  s3 -> s3 [0, 65535] { R19589 += 1, R19544 += 1, R19545 += 1 };
  s3 -> s4 [73, 73] { R19589 += 1, R19545 += 1, R19487 += 1 };
  s3 -> s5 [73, 73] { R19589 += 1, R19545 += 1, R19486 += 1, R19487 += 1 };
  s3 -> s6 [73, 73] { R19589 += 1, R19545 += 1, R19486 += 1, R19487 += 1 };
  s3 -> s7 [73, 73] { R19589 += 1, R19545 += 1, R19487 += 1 };
  s3 -> s1 [74, 80] { R19589 += 1, R19545 += 1, R19487 += 1 };
  s3 -> s2 [74, 65535] { R19589 += 1, R19545 += 1, R19486 += 1, R19487 += 1 };
  s3 -> s8 [81, 81] { R19589 += 1, R19545 += 1, R19487 += 1 };
  s3 -> s1 [89, 65535] { R19589 += 1, R19545 += 1, R19487 += 1 };
  s5 -> s7 [0, 80] { R19589 += 1, R19545 += 1, R19487 += 1 };
  s5 -> s5 [0, 65535] { R19589 += 1, R19545 += 1, R19486 += 1, R19487 += 1 };
  s5 -> s11 [81, 81] { R19589 += 1, R19545 += 1, R19487 += 1 };
  s5 -> s7 [89, 65535] { R19589 += 1, R19545 += 1, R19487 += 1 };
  s7 -> s7 [0, 80] { R19589 += 1, R19545 += 1, R19487 += 1 };
  s7 -> s7 [0, 65535] { R19589 += 1, R19545 += 1 };
  s7 -> s11 [81, 81] { R19589 += 1, R19545 += 1, R19487 += 1 };
  s7 -> s7 [89, 65535] { R19589 += 1, R19545 += 1, R19487 += 1 };
  s8 -> s8 [0, 72] { R19589 += 1, R19545 += 1, R19487 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R19589 += 1 };
  s8 -> s10 [73, 73] { R19589 += 1, R19545 += 1 };
  s8 -> s11 [73, 73] { R19589 += 1, R19545 += 1 };
  s8 -> s8 [74, 81] { R19589 += 1, R19545 += 1, R19487 += 1 };
  s8 -> s8 [74, 65535] { R19589 += 1, R19545 += 1 };
  s8 -> s8 [89, 65535] { R19589 += 1, R19545 += 1, R19487 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R19589 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 81] { R19589 += 1, R19545 += 1, R19487 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R19589 += 1 };
  s11 -> s11 [0, 65535] { R19589 += 1, R19545 += 1 };
  s11 -> s11 [89, 65535] { R19589 += 1, R19545 += 1, R19487 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R19589 += 1 };
  accepting s12, s8, s9, s10, s11;
};
};
synchronised {  // Automata constraining P58
automaton P58_0 {
  init s0;
  s0 -> s1 [113, 113];
  accepting s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [105, 105];
  accepting s1;
};
};
constraint R2 = R19589 && R20 - R19589 = -1 && R21 = R19589 && R22 - R19589 = -1 && R23 = R19589 && R24 = 0 && R25 = 1 && R26 = 0 && R27 = 1 && R38 + R67 + R66 + -1*R19167 + -1*R19165 - R53 = 0 && R52 + R19166 + R19164 = 0 && R19530 = 0 && R19531 = 0 && R19536 = 0 && R19537 = 0 && R19538 = 0 && R19539 = 0 && R19540 = 0 && R19541 = 0 && R19544 = 0 && R19545 = 0 && R19546 = 0 && R19547 = R19589 && R19548 = 0 && R19549 = R19589 && R19550 = 0 && R19551 = R19589 && R19552 = 0 && R19553 = R19589 && R19554 = 0 && R19555 = R19589 && R19556 = 0 && R19557 = R19589 && R19558 = 0 && R19559 = R19589 && R19560 = 0 && R19561 = R19589 && R19562 = 0 && R19563 = R19589 && R19564 = 0 && R19565 = R19589 && R19566 = 0 && R19567 = R19589 && R19568 = 0 && R19569 = R19589 && R19570 = 0 && R19571 = R19589 && R19572 = 0 && R19573 = R19589 && R19574 = 0 && R19575 = R19589 && R19576 = 0 && R19577 = R19589 && R19578 = 0 && R19579 = R19589 && R19580 = 0 && R19581 = R19589 && R19582 = 0 && R19583 = R19589 && R19584 = 0 && R19585 = R19589 && R19586 = 0 && R19587 = R19589 && R19588 = 0 && -1 < R1 && R8 < 1 && R11 < 1 && R12 < 1 && R40 + R69 + R68 < 1 && -1*R19167 + -1*R19165 - R53 < 1 && 0 < R19589 && (R1 != 0 || R17 = 0 || (R19490 = 0 && R19491 = 0)) && (R1 != 0 || R17 = 0 || (R19492 = 0 && R19493 = 0)) && (R1 != 0 || R17 = 0 || (R19494 = 0 && R19495 = 0)) && (R1 != 0 || R17 = 0 || (R19496 = 0 && R19497 = 0)) && (R1 != 0 || R17 = 0 || (R19498 = 0 && R19499 = 0)) && (R1 != 0 || R17 = 0 || (R19500 = 0 && R19501 = 0)) && (R1 != 0 || R17 = 0 || (R19502 = 0 && R19503 = 0)) && (R1 != 0 || R17 = 0 || (R19504 = 0 && R19505 = 0)) && (R1 != 0 || R17 = 0 || (R19506 = 0 && R19507 = 0)) && (R1 != 0 || R17 = 0 || (R19508 = 0 && R19509 = 0)) && (R48 + R19163 + R19160 != 0 || ((R42 + R11524 + R11522 != 0 || R43 + R11525 + R11523 + -1*R19167 + -1*R19165 - R53 = 0 || R53 + R19167 + R19165 < 1) && (R42 + R11524 + R11522 = 0 || R53 + R19167 + R19165 < 1))) && (R48 + R19163 + R19160 != 0 || ((R46 + R19161 + R19158 != 0 || R47 + R19162 + R19159 + -1*R19167 + -1*R19165 - R53 = 0 || R53 + R19167 + R19165 < 1) && (R46 + R19161 + R19158 = 0 || R53 + R19167 + R19165 < 1))) && (R19490 != 0 || R1 = R19491 || R1 < 1) && (R19492 != 0 || R1 = R19493 || R1 < 1) && (R19494 != 0 || R1 = R19495 || R1 < 1) && (R19496 != 0 || R1 = R19497 || R1 < 1) && (R19498 != 0 || R1 = R19499 || R1 < 1) && (R19500 != 0 || R1 = R19501 || R1 < 1) && (R19502 != 0 || R1 = R19503 || R1 < 1) && (R19504 != 0 || R1 = R19505 || R1 < 1) && (R19506 != 0 || R1 = R19507 || R1 < 1) && (R19508 != 0 || R1 = R19509 || R1 < 1) && (R18 = 0 || (R19528 = 0 && R19529 = 0)) && (R18 = 0 || (R19532 = 0 && R19533 = 0)) && (R18 = 0 || (R19534 = 0 && R19535 = 0)) && (R18 = 0 || (R19542 = 0 && R19543 = 0)) && (R19 = 0 || (R19510 = 0 && R19511 = 0)) && (R19 = 0 || (R19512 = 0 && R19513 = 0)) && (R19 = 0 || (R19514 = 0 && R19515 = 0)) && (R19 = 0 || (R19516 = 0 && R19517 = 0)) && (R19 = 0 || (R19518 = 0 && R19519 = 0)) && (R19 = 0 || (R19520 = 0 && R19521 = 0)) && (R19 = 0 || (R19522 = 0 && R19523 = 0)) && (R19 = 0 || (R19524 = 0 && R19525 = 0)) && (R19 = 0 || (R19526 = 0 && R19527 = 0)) && (R48 + R19163 + R19160 = 0 || (R42 + R11524 + R11522 = 0 && R43 + R11525 + R11523 + -1*R19167 + -1*R19165 - R53 = 0)) && (R48 + R19163 + R19160 = 0 || (R46 + R19161 + R19158 = 0 && R47 + R19162 + R19159 + -1*R19167 + -1*R19165 - R53 = 0)) && (R58 + R19173 + R19170 = 0 || (R56 + R19171 + R19168 = 0 && R57 + R19172 + R19169 = 0)) && (R58 + R19173 + R19170 = 0 || (R62 + R19488 + R19486 = 0 && R63 + R19489 + R19487 = 0)) && (R19490 = 0 || R1 < 1) && (R19492 = 0 || R1 < 1) && (R19494 = 0 || R1 < 1) && (R19496 = 0 || R1 < 1) && (R19498 = 0 || R1 < 1) && (R19500 = 0 || R1 < 1) && (R19502 = 0 || R1 < 1) && (R19504 = 0 || R1 < 1) && (R19506 = 0 || R1 < 1) && (R19508 = 0 || R1 < 1);
// End of Parikh automata intersection problem
