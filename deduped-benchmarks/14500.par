// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R11522, R11523, R11524, R11525, R12, R17, R18, R19, R19158, R19159, R19160, R19161, R19162, R19163, R19164, R19165, R19166, R19167, R19168, R19169, R19170, R19171, R19172, R19173, R19278, R19279, R19280, R19281, R19282, R19283, R19284, R19285, R19286, R19287, R19288, R19289, R19290, R19291, R19292, R19293, R19294, R19295, R19296, R19297, R19298, R19299, R19300, R19301, R19302, R19303, R19304, R19305, R19306, R19307, R19308, R19309, R19310, R19311, R19312, R19313, R19314, R19315, R19316, R19317, R19318, R19319, R19320, R19321, R19322, R19323, R19324, R19325, R19326, R19327, R19328, R19329, R19330, R19331, R19332, R19333, R19334, R19335, R19336, R19337, R19338, R19339, R19340, R19341, R19342, R19343, R19344, R19345, R19346, R19347, R19348, R19349, R19350, R19351, R19352, R19353, R19354, R19355, R19356, R19357, R19358, R19359, R19360, R19361, R19362, R19363, R19364, R19365, R19366, R19367, R19368, R19369, R19370, R19371, R19372, R19373, R19374, R19375, R19376, R19377, R19378, R19379, R19380, R19381, R2, R20, R21, R22, R23, R24, R25, R26, R27, R3, R38, R4, R40, R42, R43, R46, R47, R48, R52, R53, R56, R57, R58, R62, R63, R66, R67, R68, R69, R8;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [73, 73];
  s0 -> s0 [74, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [73, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R2 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R11 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 72];
  s0 -> s0 [0, 65535] { R12 += 1 };
  s0 -> s2 [73, 73];
  s0 -> s1 [74, 65535];
  s1 -> s1 [0, 72];
  s1 -> s2 [73, 73];
  s1 -> s1 [74, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R21 += 1 };
  s0 -> s0 [0, 65535] { R20 += 1, R21 += 1 };
  s0 -> s2 [9, 13] { R21 += 1 };
  s0 -> s1 [14, 31] { R21 += 1 };
  s0 -> s2 [32, 32] { R21 += 1 };
  s0 -> s1 [33, 65535] { R21 += 1 };
  s1 -> s1 [0, 65535] { R21 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R21 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R22 += 1, R23 += 1 };
  s1 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R25 += 1 };
  s0 -> s0 [0, 65535] { R24 += 1, R25 += 1 };
  s0 -> s2 [9, 13] { R25 += 1 };
  s0 -> s1 [14, 31] { R25 += 1 };
  s0 -> s2 [32, 32] { R25 += 1 };
  s0 -> s1 [33, 65535] { R25 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R25 += 1 };
  s2 -> s1 [0, 65535] { R25 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R26 += 1, R27 += 1 };
  s1 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R19302 += 1, R19303 += 1 };
  s0 -> s1 [0, 65535] { R19303 += 1, R19 += 1 };
  s1 -> s1 [0, 65535] { R19303 += 1, R19 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 72] { R19305 += 1 };
  s0 -> s0 [0, 65535] { R19304 += 1, R19305 += 1 };
  s0 -> s2 [73, 73] { R19305 += 1 };
  s0 -> s3 [73, 73] { R19305 += 1 };
  s0 -> s1 [82, 65535] { R19305 += 1 };
  s1 -> s1 [0, 72] { R19305 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19305 += 1 };
  s1 -> s3 [73, 73] { R19305 += 1 };
  s1 -> s1 [82, 65535] { R19305 += 1 };
  s2 -> s2 [0, 73] { R19305 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [82, 65535] { R19305 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 72] { R19307 += 1, R38 += 1 };
  s0 -> s0 [0, 65535] { R19306 += 1, R19307 += 1 };
  s0 -> s2 [73, 73] { R19307 += 1, R38 += 1 };
  s0 -> s3 [73, 73] { R19307 += 1, R38 += 1 };
  s0 -> s1 [74, 65535] { R19307 += 1, R38 += 1 };
  s1 -> s1 [0, 72] { R19307 += 1, R38 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19307 += 1, R38 += 1 };
  s1 -> s3 [73, 73] { R19307 += 1, R38 += 1 };
  s1 -> s1 [74, 65535] { R19307 += 1, R38 += 1 };
  s2 -> s2 [0, 65535] { R19307 += 1, R38 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 72] { R19309 += 1, R40 += 1 };
  s0 -> s0 [0, 65535] { R19308 += 1, R19309 += 1 };
  s0 -> s2 [73, 73] { R19309 += 1, R40 += 1 };
  s0 -> s3 [73, 73] { R19309 += 1, R40 += 1 };
  s0 -> s1 [74, 65535] { R19309 += 1, R40 += 1 };
  s1 -> s1 [0, 72] { R19309 += 1, R40 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19309 += 1, R40 += 1 };
  s1 -> s3 [73, 73] { R19309 += 1, R40 += 1 };
  s1 -> s1 [74, 65535] { R19309 += 1, R40 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R19309 += 1, R40 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 72] { R19311 += 1, R42 += 1, R43 += 1 };
  s0 -> s0 [0, 65535] { R19310 += 1, R19311 += 1 };
  s0 -> s2 [73, 73] { R19311 += 1, R42 += 1, R43 += 1 };
  s0 -> s3 [73, 73] { R19311 += 1, R42 += 1, R43 += 1 };
  s0 -> s1 [74, 65535] { R19311 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 72] { R19311 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19311 += 1, R42 += 1, R43 += 1 };
  s1 -> s3 [73, 73] { R19311 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [74, 65535] { R19311 += 1, R42 += 1, R43 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R19311 += 1, R42 += 1, R43 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 72] { R19313 += 1, R46 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R19312 += 1, R19313 += 1 };
  s0 -> s2 [73, 73] { R19313 += 1, R46 += 1, R47 += 1 };
  s0 -> s3 [73, 73] { R19313 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [74, 65535] { R19313 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 72] { R19313 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19313 += 1, R46 += 1, R47 += 1 };
  s1 -> s3 [73, 73] { R19313 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [74, 65535] { R19313 += 1, R46 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R19313 += 1, R46 += 1, R47 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 72] { R19315 += 1, R52 += 1, R53 += 1 };
  s0 -> s0 [0, 65535] { R19314 += 1, R19315 += 1 };
  s0 -> s2 [73, 73] { R19315 += 1, R52 += 1, R53 += 1 };
  s0 -> s3 [73, 73] { R19315 += 1, R52 += 1, R53 += 1 };
  s0 -> s1 [74, 65535] { R19315 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 72] { R19315 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19315 += 1, R52 += 1, R53 += 1 };
  s1 -> s3 [73, 73] { R19315 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [74, 65535] { R19315 += 1, R52 += 1, R53 += 1 };
  s2 -> s2 [0, 65535] { R19315 += 1, R52 += 1, R53 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 72] { R19317 += 1, R56 += 1, R57 += 1 };
  s0 -> s0 [0, 65535] { R19316 += 1, R19317 += 1 };
  s0 -> s2 [73, 73] { R19317 += 1, R56 += 1, R57 += 1 };
  s0 -> s3 [73, 73] { R19317 += 1, R56 += 1, R57 += 1 };
  s0 -> s1 [74, 65535] { R19317 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 72] { R19317 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19317 += 1, R56 += 1, R57 += 1 };
  s1 -> s3 [73, 73] { R19317 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [74, 65535] { R19317 += 1, R56 += 1, R57 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R19317 += 1, R56 += 1, R57 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 72] { R19319 += 1, R62 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R19318 += 1, R19319 += 1 };
  s0 -> s2 [73, 73] { R19319 += 1, R62 += 1, R63 += 1 };
  s0 -> s3 [73, 73] { R19319 += 1, R62 += 1, R63 += 1 };
  s0 -> s1 [74, 65535] { R19319 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 72] { R19319 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19319 += 1, R62 += 1, R63 += 1 };
  s1 -> s3 [73, 73] { R19319 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [74, 65535] { R19319 += 1, R62 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R19319 += 1, R62 += 1, R63 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 72] { R19339 += 1 };
  s0 -> s0 [0, 65535] { R19338 += 1, R19339 += 1 };
  s0 -> s2 [73, 73] { R19339 += 1 };
  s0 -> s1 [74, 65535] { R19339 += 1 };
  s1 -> s1 [0, 72] { R19339 += 1 };
  s1 -> s2 [73, 73] { R19339 += 1 };
  s1 -> s1 [74, 65535] { R19339 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R19339 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R19340 += 1, R19341 += 1 };
  s0 -> s1 [0, 65535] { R19341 += 1, R1 += 1 };
  s1 -> s1 [0, 65535] { R19341 += 1, R1 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 72] { R19343 += 1 };
  s0 -> s2 [0, 65535] { R19343 += 1, R8 += 1 };
  s0 -> s0 [0, 65535] { R19342 += 1, R19343 += 1 };
  s0 -> s3 [73, 73] { R19343 += 1 };
  s0 -> s1 [74, 65535] { R19343 += 1 };
  s1 -> s1 [0, 72] { R19343 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [73, 73] { R19343 += 1 };
  s1 -> s1 [74, 65535] { R19343 += 1 };
  s2 -> s1 [0, 72] { R19343 += 1 };
  s2 -> s2 [0, 65535] { R19343 += 1, R8 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [73, 73] { R19343 += 1 };
  s2 -> s1 [74, 65535] { R19343 += 1 };
  s3 -> s3 [0, 65535] { R19343 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 72] { R19345 += 1, R19283 += 1 };
  s0 -> s0 [0, 65535] { R19344 += 1, R19345 += 1 };
  s0 -> s2 [0, 65535] { R19345 += 1, R19282 += 1, R19283 += 1 };
  s0 -> s1 [74, 65535] { R19345 += 1, R19283 += 1 };
  s1 -> s1 [0, 72] { R19345 += 1, R19283 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R19345 += 1 };
  s1 -> s1 [74, 65535] { R19345 += 1, R19283 += 1 };
  s2 -> s1 [0, 72] { R19345 += 1, R19283 += 1 };
  s2 -> s2 [0, 65535] { R19345 += 1, R19282 += 1, R19283 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [74, 65535] { R19345 += 1, R19283 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R19347 += 1, R19285 += 1, R17 += 1 };
  s0 -> s2 [0, 65535] { R19347 += 1, R19284 += 1, R19285 += 1 };
  s0 -> s0 [0, 65535] { R19346 += 1, R19347 += 1 };
  s1 -> s1 [0, 65535] { R19347 += 1, R19285 += 1, R17 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R19347 += 1 };
  s2 -> s1 [0, 65535] { R19347 += 1, R19285 += 1, R17 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R19347 += 1, R19284 += 1, R19285 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19347 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 73] { R19349 += 1, R19287 += 1 };
  s0 -> s2 [0, 65535] { R19349 += 1, R19286 += 1, R19287 += 1 };
  s0 -> s0 [0, 65535] { R19348 += 1, R19349 += 1 };
  s0 -> s1 [81, 65535] { R19349 += 1, R19287 += 1 };
  s1 -> s1 [0, 73] { R19349 += 1, R19287 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R19349 += 1 };
  s1 -> s1 [81, 65535] { R19349 += 1, R19287 += 1 };
  s2 -> s1 [0, 73] { R19349 += 1, R19287 += 1 };
  s2 -> s2 [0, 65535] { R19349 += 1, R19286 += 1, R19287 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [81, 65535] { R19349 += 1, R19287 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R19351 += 1, R19289 += 1, R67 += 1 };
  s0 -> s0 [0, 65535] { R19350 += 1, R19351 += 1 };
  s0 -> s2 [0, 65535] { R19351 += 1, R19288 += 1, R19289 += 1 };
  s1 -> s4 [0, 65535] { R19351 += 1 };
  s1 -> s1 [0, 65535] { R19351 += 1, R19289 += 1, R67 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R19351 += 1, R19289 += 1, R67 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R19351 += 1, R19288 += 1, R19289 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19351 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 80] { R19353 += 1, R19291 += 1 };
  s0 -> s0 [0, 65535] { R19352 += 1, R19353 += 1 };
  s0 -> s2 [0, 65535] { R19353 += 1, R19291 += 1, R69 += 1 };
  s0 -> s3 [0, 65535] { R19353 += 1, R19290 += 1, R19291 += 1 };
  s0 -> s1 [82, 65535] { R19353 += 1, R19291 += 1 };
  s1 -> s1 [0, 80] { R19353 += 1, R19291 += 1 };
  s1 -> s1 [0, 65535] { R19353 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [82, 65535] { R19353 += 1, R19291 += 1 };
  s2 -> s1 [0, 80] { R19353 += 1, R19291 += 1 };
  s2 -> s5 [0, 65535] { R19353 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R19353 += 1, R19291 += 1, R69 += 1 };
  s2 -> s1 [82, 65535] { R19353 += 1, R19291 += 1 };
  s3 -> s1 [0, 80] { R19353 += 1, R19291 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R19353 += 1, R19291 += 1, R69 += 1 };
  s3 -> s3 [0, 65535] { R19353 += 1, R19290 += 1, R19291 += 1 };
  s3 -> s1 [82, 65535] { R19353 += 1, R19291 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R19353 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 80] { R19355 += 1, R19293 += 1, R11525 += 1 };
  s0 -> s1 [0, 65535] { R19355 += 1, R19293 += 1 };
  s0 -> s0 [0, 65535] { R19354 += 1, R19355 += 1 };
  s0 -> s2 [0, 65535] { R19355 += 1, R19292 += 1, R19293 += 1 };
  s0 -> s1 [82, 65535] { R19355 += 1, R19293 += 1, R11525 += 1 };
  s1 -> s1 [0, 80] { R19355 += 1, R19293 += 1, R11525 += 1 };
  s1 -> s1 [0, 65535] { R19355 += 1, R19293 += 1 };
  s1 -> s4 [0, 65535] { R19355 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [82, 65535] { R19355 += 1, R19293 += 1, R11525 += 1 };
  s2 -> s1 [0, 80] { R19355 += 1, R19293 += 1, R11525 += 1 };
  s2 -> s1 [0, 65535] { R19355 += 1, R19293 += 1 };
  s2 -> s2 [0, 65535] { R19355 += 1, R19292 += 1, R19293 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [82, 65535] { R19355 += 1, R19293 += 1, R11525 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19355 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R19357 += 1, R19294 += 1, R19295 += 1 };
  s0 -> s2 [0, 65535] { R19357 += 1, R19295 += 1 };
  s0 -> s0 [0, 65535] { R19356 += 1, R19357 += 1 };
  s1 -> s1 [0, 65535] { R19357 += 1, R19294 += 1, R19295 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R19357 += 1, R19295 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R19357 += 1, R19295 += 1 };
  s2 -> s4 [0, 65535] { R19357 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19357 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 81] { R19359 += 1, R19297 += 1, R19167 += 1 };
  s0 -> s0 [0, 65535] { R19358 += 1, R19359 += 1 };
  s0 -> s2 [0, 65535] { R19359 += 1, R19296 += 1, R19297 += 1 };
  s0 -> s1 [0, 65535] { R19359 += 1, R19297 += 1 };
  s0 -> s1 [88, 65535] { R19359 += 1, R19297 += 1, R19167 += 1 };
  s1 -> s1 [0, 81] { R19359 += 1, R19297 += 1, R19167 += 1 };
  s1 -> s4 [0, 65535] { R19359 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R19359 += 1, R19297 += 1 };
  s1 -> s1 [88, 65535] { R19359 += 1, R19297 += 1, R19167 += 1 };
  s2 -> s1 [0, 81] { R19359 += 1, R19297 += 1, R19167 += 1 };
  s2 -> s2 [0, 65535] { R19359 += 1, R19296 += 1, R19297 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R19359 += 1, R19297 += 1 };
  s2 -> s1 [88, 65535] { R19359 += 1, R19297 += 1, R19167 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19359 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R19361 += 1, R19299 += 1, R19172 += 1, R19173 += 1 };
  s0 -> s0 [0, 65535] { R19360 += 1, R19361 += 1 };
  s0 -> s2 [0, 65535] { R19361 += 1, R19299 += 1, R19171 += 1, R19172 += 1 };
  s0 -> s3 [0, 65535] { R19361 += 1, R19298 += 1, R19299 += 1 };
  s1 -> s1 [0, 65535] { R19361 += 1, R19299 += 1, R19172 += 1, R19173 += 1 };
  s1 -> s5 [0, 65535] { R19361 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R19361 += 1, R19299 += 1 };
  s2 -> s1 [0, 65535] { R19361 += 1, R19299 += 1, R19172 += 1, R19173 += 1 };
  s2 -> s5 [0, 65535] { R19361 += 1 };
  s2 -> s2 [0, 65535] { R19361 += 1, R19299 += 1, R19171 += 1, R19172 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R19361 += 1, R19299 += 1, R19172 += 1, R19173 += 1 };
  s3 -> s2 [0, 65535] { R19361 += 1, R19299 += 1, R19171 += 1, R19172 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R19361 += 1, R19298 += 1, R19299 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R19361 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R19361 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R19361 += 1, R19299 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 80] { R19363 += 1, R19301 += 1, R19281 += 1 };
  s0 -> s0 [0, 65535] { R19362 += 1, R19363 += 1 };
  s0 -> s2 [0, 65535] { R19363 += 1, R19300 += 1, R19301 += 1 };
  s0 -> s1 [0, 65535] { R19363 += 1, R19301 += 1 };
  s0 -> s3 [81, 81] { R19363 += 1, R19301 += 1, R19281 += 1 };
  s0 -> s4 [81, 81] { R19363 += 1, R19301 += 1, R19281 += 1 };
  s0 -> s1 [89, 65535] { R19363 += 1, R19301 += 1, R19281 += 1 };
  s1 -> s1 [0, 80] { R19363 += 1, R19301 += 1, R19281 += 1 };
  s1 -> s5 [0, 65535] { R19363 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R19363 += 1, R19301 += 1 };
  s1 -> s3 [81, 81] { R19363 += 1, R19301 += 1, R19281 += 1 };
  s1 -> s4 [81, 81] { R19363 += 1, R19301 += 1, R19281 += 1 };
  s1 -> s1 [89, 65535] { R19363 += 1, R19301 += 1, R19281 += 1 };
  s2 -> s1 [0, 80] { R19363 += 1, R19301 += 1, R19281 += 1 };
  s2 -> s2 [0, 65535] { R19363 += 1, R19300 += 1, R19301 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [0, 65535] { R19363 += 1, R19301 += 1 };
  s2 -> s3 [81, 81] { R19363 += 1, R19301 += 1, R19281 += 1 };
  s2 -> s4 [81, 81] { R19363 += 1, R19301 += 1, R19281 += 1 };
  s2 -> s1 [89, 65535] { R19363 += 1, R19301 += 1, R19281 += 1 };
  s3 -> s3 [0, 81] { R19363 += 1, R19301 += 1, R19281 += 1 };
  s3 -> s3 [0, 65535] { R19363 += 1, R19301 += 1 };
  s3 -> s5 [0, 65535] { R19363 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [89, 65535] { R19363 += 1, R19301 += 1, R19281 += 1 };
  s4 -> s5 [0, 65535] { R19363 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R19363 += 1, R19301 += 1 };
  s5 -> s5 [0, 65535] { R19363 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R19365 += 1, R19320 += 1, R19321 += 1 };
  s0 -> s2 [0, 65535] { R19365 += 1, R19321 += 1, R18 += 1 };
  s0 -> s0 [0, 65535] { R19364 += 1, R19365 += 1 };
  s1 -> s1 [0, 65535] { R19365 += 1, R19320 += 1, R19321 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R19365 += 1, R19321 += 1, R18 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R19365 += 1, R19321 += 1, R18 += 1 };
  s2 -> s4 [0, 65535] { R19365 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19365 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 72] { R19367 += 1, R19323 += 1 };
  s0 -> s2 [0, 65535] { R19367 += 1, R19322 += 1, R19323 += 1 };
  s0 -> s0 [0, 65535] { R19366 += 1, R19367 += 1 };
  s0 -> s3 [73, 73] { R19367 += 1, R19323 += 1 };
  s0 -> s4 [73, 73] { R19367 += 1, R19323 += 1 };
  s0 -> s5 [81, 81] { R19367 += 1, R19323 += 1 };
  s0 -> s1 [82, 65535] { R19367 += 1, R19323 += 1 };
  s1 -> s1 [0, 72] { R19367 += 1, R19323 += 1 };
  s1 -> s3 [73, 73] { R19367 += 1, R19323 += 1 };
  s1 -> s4 [73, 73] { R19367 += 1, R19323 += 1 };
  s1 -> s5 [81, 81] { R19367 += 1, R19323 += 1 };
  s1 -> s1 [82, 65535] { R19367 += 1, R19323 += 1 };
  s2 -> s1 [0, 72] { R19367 += 1, R19323 += 1 };
  s2 -> s2 [0, 65535] { R19367 += 1, R19322 += 1, R19323 += 1 };
  s2 -> s3 [73, 73] { R19367 += 1, R19323 += 1 };
  s2 -> s4 [73, 73] { R19367 += 1, R19323 += 1 };
  s2 -> s5 [81, 81] { R19367 += 1, R19323 += 1 };
  s2 -> s1 [82, 65535] { R19367 += 1, R19323 += 1 };
  s4 -> s4 [0, 73] { R19367 += 1, R19323 += 1 };
  s4 -> s7 [81, 81] { R19367 += 1, R19323 += 1 };
  s4 -> s4 [82, 65535] { R19367 += 1, R19323 += 1 };
  s5 -> s5 [0, 72] { R19367 += 1, R19323 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R19367 += 1 };
  s5 -> s7 [73, 73] { R19367 += 1, R19323 += 1 };
  s5 -> s8 [73, 73] { R19367 += 1, R19323 += 1 };
  s5 -> s5 [81, 65535] { R19367 += 1, R19323 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 73] { R19367 += 1, R19323 += 1 };
  s7 -> s7 [0, 65535] { R19367 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [81, 65535] { R19367 += 1, R19323 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R19367 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 72] { R19369 += 1, R19325 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R19368 += 1, R19369 += 1 };
  s0 -> s2 [0, 65535] { R19369 += 1, R19324 += 1, R19325 += 1 };
  s0 -> s3 [73, 73] { R19369 += 1, R19325 += 1, R66 += 1 };
  s0 -> s4 [73, 73] { R19369 += 1, R19325 += 1, R66 += 1 };
  s0 -> s1 [74, 65535] { R19369 += 1, R19325 += 1, R66 += 1 };
  s1 -> s1 [0, 72] { R19369 += 1, R19325 += 1, R66 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R19369 += 1 };
  s1 -> s3 [73, 73] { R19369 += 1, R19325 += 1, R66 += 1 };
  s1 -> s4 [73, 73] { R19369 += 1, R19325 += 1, R66 += 1 };
  s1 -> s1 [74, 65535] { R19369 += 1, R19325 += 1, R66 += 1 };
  s2 -> s1 [0, 72] { R19369 += 1, R19325 += 1, R66 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R19369 += 1, R19324 += 1, R19325 += 1 };
  s2 -> s3 [73, 73] { R19369 += 1, R19325 += 1, R66 += 1 };
  s2 -> s4 [73, 73] { R19369 += 1, R19325 += 1, R66 += 1 };
  s2 -> s1 [74, 65535] { R19369 += 1, R19325 += 1, R66 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R19369 += 1, R19325 += 1, R66 += 1 };
  s3 -> s6 [0, 65535] { R19369 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R19369 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R19369 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 72] { R19371 += 1, R19327 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R19370 += 1, R19371 += 1 };
  s0 -> s2 [0, 65535] { R19371 += 1, R19326 += 1, R19327 += 1 };
  s0 -> s3 [73, 73] { R19371 += 1, R19327 += 1, R68 += 1 };
  s0 -> s4 [73, 73] { R19371 += 1, R19327 += 1, R68 += 1 };
  s0 -> s1 [74, 65535] { R19371 += 1, R19327 += 1, R68 += 1 };
  s1 -> s1 [0, 72] { R19371 += 1, R19327 += 1, R68 += 1 };
  s1 -> s1 [0, 65535] { R19371 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [73, 73] { R19371 += 1, R19327 += 1, R68 += 1 };
  s1 -> s4 [73, 73] { R19371 += 1, R19327 += 1, R68 += 1 };
  s1 -> s1 [74, 65535] { R19371 += 1, R19327 += 1, R68 += 1 };
  s2 -> s1 [0, 72] { R19371 += 1, R19327 += 1, R68 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R19371 += 1, R19326 += 1, R19327 += 1 };
  s2 -> s3 [73, 73] { R19371 += 1, R19327 += 1, R68 += 1 };
  s2 -> s4 [73, 73] { R19371 += 1, R19327 += 1, R68 += 1 };
  s2 -> s1 [74, 65535] { R19371 += 1, R19327 += 1, R68 += 1 };
  s3 -> s3 [0, 65535] { R19371 += 1, R19327 += 1, R68 += 1 };
  s3 -> s6 [0, 65535] { R19371 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R19371 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R19371 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 72] { R19373 += 1, R19329 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s2 [0, 72] { R19373 += 1, R19329 += 1, R11523 += 1 };
  s0 -> s3 [0, 65535] { R19373 += 1, R19328 += 1, R19329 += 1 };
  s0 -> s0 [0, 65535] { R19372 += 1, R19373 += 1 };
  s0 -> s4 [73, 73] { R19373 += 1, R19329 += 1, R11523 += 1 };
  s0 -> s5 [73, 73] { R19373 += 1, R19329 += 1, R11523 += 1 };
  s0 -> s6 [73, 73] { R19373 += 1, R19329 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s7 [73, 73] { R19373 += 1, R19329 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s2 [74, 80] { R19373 += 1, R19329 += 1, R11523 += 1 };
  s0 -> s1 [74, 65535] { R19373 += 1, R19329 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s2 [82, 65535] { R19373 += 1, R19329 += 1, R11523 += 1 };
  s1 -> s1 [0, 72] { R19373 += 1, R19329 += 1, R11522 += 1, R11523 += 1 };
  s1 -> s2 [0, 72] { R19373 += 1, R19329 += 1, R11523 += 1 };
  s1 -> s4 [73, 73] { R19373 += 1, R19329 += 1, R11523 += 1 };
  s1 -> s5 [73, 73] { R19373 += 1, R19329 += 1, R11523 += 1 };
  s1 -> s6 [73, 73] { R19373 += 1, R19329 += 1, R11522 += 1, R11523 += 1 };
  s1 -> s7 [73, 73] { R19373 += 1, R19329 += 1, R11522 += 1, R11523 += 1 };
  s1 -> s2 [74, 80] { R19373 += 1, R19329 += 1, R11523 += 1 };
  s1 -> s1 [74, 65535] { R19373 += 1, R19329 += 1, R11522 += 1, R11523 += 1 };
  s1 -> s2 [82, 65535] { R19373 += 1, R19329 += 1, R11523 += 1 };
  s2 -> s2 [0, 72] { R19373 += 1, R19329 += 1, R11523 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R19373 += 1 };
  s2 -> s4 [73, 73] { R19373 += 1, R19329 += 1 };
  s2 -> s5 [73, 73] { R19373 += 1, R19329 += 1 };
  s2 -> s2 [74, 80] { R19373 += 1, R19329 += 1, R11523 += 1 };
  s2 -> s2 [74, 65535] { R19373 += 1, R19329 += 1 };
  s2 -> s2 [82, 65535] { R19373 += 1, R19329 += 1, R11523 += 1 };
  s3 -> s1 [0, 72] { R19373 += 1, R19329 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s2 [0, 72] { R19373 += 1, R19329 += 1, R11523 += 1 };
  s3 -> s3 [0, 65535] { R19373 += 1, R19328 += 1, R19329 += 1 };
  s3 -> s4 [73, 73] { R19373 += 1, R19329 += 1, R11523 += 1 };
  s3 -> s5 [73, 73] { R19373 += 1, R19329 += 1, R11523 += 1 };
  s3 -> s6 [73, 73] { R19373 += 1, R19329 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s7 [73, 73] { R19373 += 1, R19329 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s2 [74, 80] { R19373 += 1, R19329 += 1, R11523 += 1 };
  s3 -> s1 [74, 65535] { R19373 += 1, R19329 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s2 [82, 65535] { R19373 += 1, R19329 += 1, R11523 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [0, 65535] { R19373 += 1 };
  s5 -> s5 [0, 80] { R19373 += 1, R19329 += 1, R11523 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s9 [0, 65535] { R19373 += 1 };
  s5 -> s5 [0, 65535] { R19373 += 1, R19329 += 1 };
  s5 -> s5 [82, 65535] { R19373 += 1, R19329 += 1, R11523 += 1 };
  s7 -> s5 [0, 80] { R19373 += 1, R19329 += 1, R11523 += 1 };
  s7 -> s7 [0, 65535] { R19373 += 1, R19329 += 1, R11522 += 1, R11523 += 1 };
  s7 -> s5 [82, 65535] { R19373 += 1, R19329 += 1, R11523 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R19373 += 1 };
  accepting s4, s8, s5, s2, s9;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 72] { R19375 += 1, R19331 += 1, R19158 += 1, R19159 += 1 };
  s0 -> s2 [0, 72] { R19375 += 1, R19331 += 1, R19159 += 1, R19160 += 1 };
  s0 -> s3 [0, 65535] { R19375 += 1, R19330 += 1, R19331 += 1 };
  s0 -> s0 [0, 65535] { R19374 += 1, R19375 += 1 };
  s0 -> s4 [73, 73] { R19375 += 1, R19331 += 1, R19159 += 1, R19160 += 1 };
  s0 -> s5 [73, 73] { R19375 += 1, R19331 += 1, R19159 += 1, R19160 += 1 };
  s0 -> s6 [73, 73] { R19375 += 1, R19331 += 1, R19158 += 1, R19159 += 1 };
  s0 -> s7 [73, 73] { R19375 += 1, R19331 += 1, R19158 += 1, R19159 += 1 };
  s0 -> s1 [74, 65535] { R19375 += 1, R19331 += 1, R19158 += 1, R19159 += 1 };
  s0 -> s2 [74, 65535] { R19375 += 1, R19331 += 1, R19159 += 1, R19160 += 1 };
  s1 -> s1 [0, 72] { R19375 += 1, R19331 += 1, R19158 += 1, R19159 += 1 };
  s1 -> s2 [0, 72] { R19375 += 1, R19331 += 1, R19159 += 1, R19160 += 1 };
  s1 -> s4 [73, 73] { R19375 += 1, R19331 += 1, R19159 += 1, R19160 += 1 };
  s1 -> s5 [73, 73] { R19375 += 1, R19331 += 1, R19159 += 1, R19160 += 1 };
  s1 -> s6 [73, 73] { R19375 += 1, R19331 += 1, R19158 += 1, R19159 += 1 };
  s1 -> s7 [73, 73] { R19375 += 1, R19331 += 1, R19158 += 1, R19159 += 1 };
  s1 -> s1 [74, 65535] { R19375 += 1, R19331 += 1, R19158 += 1, R19159 += 1 };
  s1 -> s2 [74, 65535] { R19375 += 1, R19331 += 1, R19159 += 1, R19160 += 1 };
  s2 -> s11 [0, 72] { R19375 += 1, R19331 += 1 };
  s2 -> s2 [0, 72] { R19375 += 1, R19331 += 1, R19159 += 1, R19160 += 1 };
  s2 -> s4 [73, 73] { R19375 += 1, R19331 += 1, R19159 += 1, R19160 += 1 };
  s2 -> s5 [73, 73] { R19375 += 1, R19331 += 1, R19159 += 1, R19160 += 1 };
  s2 -> s12 [73, 73] { R19375 += 1, R19331 += 1 };
  s2 -> s8 [73, 73] { R19375 += 1, R19331 += 1 };
  s2 -> s11 [74, 65535] { R19375 += 1, R19331 += 1 };
  s2 -> s2 [74, 65535] { R19375 += 1, R19331 += 1, R19159 += 1, R19160 += 1 };
  s3 -> s1 [0, 72] { R19375 += 1, R19331 += 1, R19158 += 1, R19159 += 1 };
  s3 -> s2 [0, 72] { R19375 += 1, R19331 += 1, R19159 += 1, R19160 += 1 };
  s3 -> s3 [0, 65535] { R19375 += 1, R19330 += 1, R19331 += 1 };
  s3 -> s4 [73, 73] { R19375 += 1, R19331 += 1, R19159 += 1, R19160 += 1 };
  s3 -> s5 [73, 73] { R19375 += 1, R19331 += 1, R19159 += 1, R19160 += 1 };
  s3 -> s6 [73, 73] { R19375 += 1, R19331 += 1, R19158 += 1, R19159 += 1 };
  s3 -> s7 [73, 73] { R19375 += 1, R19331 += 1, R19158 += 1, R19159 += 1 };
  s3 -> s1 [74, 65535] { R19375 += 1, R19331 += 1, R19158 += 1, R19159 += 1 };
  s3 -> s2 [74, 65535] { R19375 += 1, R19331 += 1, R19159 += 1, R19160 += 1 };
  s5 -> s5 [0, 65535] { R19375 += 1, R19331 += 1, R19159 += 1, R19160 += 1 };
  s5 -> s8 [0, 65535] { R19375 += 1, R19331 += 1 };
  s6 -> s5 [0, 65535] { R19375 += 1, R19331 += 1, R19159 += 1, R19160 += 1 };
  s6 -> s6 [0, 65535] { R19375 += 1, R19331 += 1, R19158 += 1, R19159 += 1 };
  s8 -> s9 [0, 65535] { R19375 += 1 };
  s8 -> s10 [0, 65535];
  s8 -> s8 [0, 65535] { R19375 += 1, R19331 += 1 };
  s9 -> s9 [0, 65535] { R19375 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  s11 -> s11 [0, 72] { R19375 += 1, R19331 += 1 };
  s11 -> s11 [0, 65535] { R19375 += 1 };
  s11 -> s10 [0, 65535];
  s11 -> s12 [73, 73] { R19375 += 1, R19331 += 1 };
  s11 -> s8 [73, 73] { R19375 += 1, R19331 += 1 };
  s11 -> s11 [74, 65535] { R19375 += 1, R19331 += 1 };
  s12 -> s12 [0, 65535] { R19375 += 1 };
  s12 -> s10 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 72] { R19377 += 1, R19333 += 1, R19164 += 1, R19165 += 1 };
  s0 -> s2 [0, 72] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s0 -> s0 [0, 65535] { R19376 += 1, R19377 += 1 };
  s0 -> s3 [0, 65535] { R19377 += 1, R19332 += 1, R19333 += 1 };
  s0 -> s4 [73, 73] { R19377 += 1, R19333 += 1, R19164 += 1, R19165 += 1 };
  s0 -> s5 [73, 73] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s0 -> s6 [73, 73] { R19377 += 1, R19333 += 1, R19164 += 1, R19165 += 1 };
  s0 -> s7 [73, 73] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s0 -> s2 [74, 81] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s0 -> s1 [74, 65535] { R19377 += 1, R19333 += 1, R19164 += 1, R19165 += 1 };
  s0 -> s8 [88, 88] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s0 -> s2 [89, 65535] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s1 -> s1 [0, 72] { R19377 += 1, R19333 += 1, R19164 += 1, R19165 += 1 };
  s1 -> s2 [0, 72] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s1 -> s4 [73, 73] { R19377 += 1, R19333 += 1, R19164 += 1, R19165 += 1 };
  s1 -> s5 [73, 73] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s1 -> s6 [73, 73] { R19377 += 1, R19333 += 1, R19164 += 1, R19165 += 1 };
  s1 -> s7 [73, 73] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s1 -> s2 [74, 81] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s1 -> s1 [74, 65535] { R19377 += 1, R19333 += 1, R19164 += 1, R19165 += 1 };
  s1 -> s8 [88, 88] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s1 -> s2 [89, 65535] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s2 -> s2 [0, 72] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s2 -> s5 [73, 73] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s2 -> s7 [73, 73] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s2 -> s2 [74, 81] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s2 -> s8 [88, 88] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s2 -> s2 [89, 65535] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s3 -> s1 [0, 72] { R19377 += 1, R19333 += 1, R19164 += 1, R19165 += 1 };
  s3 -> s2 [0, 72] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s3 -> s3 [0, 65535] { R19377 += 1, R19332 += 1, R19333 += 1 };
  s3 -> s4 [73, 73] { R19377 += 1, R19333 += 1, R19164 += 1, R19165 += 1 };
  s3 -> s5 [73, 73] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s3 -> s6 [73, 73] { R19377 += 1, R19333 += 1, R19164 += 1, R19165 += 1 };
  s3 -> s7 [73, 73] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s3 -> s2 [74, 81] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s3 -> s1 [74, 65535] { R19377 += 1, R19333 += 1, R19164 += 1, R19165 += 1 };
  s3 -> s8 [88, 88] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s3 -> s2 [89, 65535] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s4 -> s7 [0, 81] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s4 -> s4 [0, 65535] { R19377 += 1, R19333 += 1, R19164 += 1, R19165 += 1 };
  s4 -> s10 [88, 88] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s4 -> s7 [89, 65535] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s7 -> s7 [0, 81] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s7 -> s10 [88, 88] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s7 -> s7 [89, 65535] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s8 -> s8 [0, 72] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s8 -> s8 [0, 65535] { R19377 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [73, 73] { R19377 += 1, R19333 += 1 };
  s8 -> s11 [73, 73] { R19377 += 1, R19333 += 1 };
  s8 -> s8 [74, 81] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s8 -> s8 [74, 65535] { R19377 += 1, R19333 += 1 };
  s8 -> s8 [88, 65535] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 81] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s10 -> s10 [0, 65535] { R19377 += 1, R19333 += 1 };
  s10 -> s9 [0, 65535];
  s10 -> s12 [0, 65535] { R19377 += 1 };
  s10 -> s10 [88, 65535] { R19377 += 1, R19333 += 1, R19165 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R19377 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R19377 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 72] { R19379 += 1, R19335 += 1, R19168 += 1, R19169 += 1 };
  s0 -> s2 [0, 65535] { R19379 += 1, R19334 += 1, R19335 += 1 };
  s0 -> s0 [0, 65535] { R19378 += 1, R19379 += 1 };
  s0 -> s3 [73, 73] { R19379 += 1, R19335 += 1, R19168 += 1, R19169 += 1 };
  s0 -> s4 [73, 73] { R19379 += 1, R19335 += 1, R19168 += 1, R19169 += 1 };
  s0 -> s1 [74, 65535] { R19379 += 1, R19335 += 1, R19168 += 1, R19169 += 1 };
  s1 -> s1 [0, 72] { R19379 += 1, R19335 += 1, R19168 += 1, R19169 += 1 };
  s1 -> s1 [0, 65535] { R19379 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [73, 73] { R19379 += 1, R19335 += 1, R19168 += 1, R19169 += 1 };
  s1 -> s4 [73, 73] { R19379 += 1, R19335 += 1, R19168 += 1, R19169 += 1 };
  s1 -> s1 [74, 65535] { R19379 += 1, R19335 += 1, R19168 += 1, R19169 += 1 };
  s2 -> s1 [0, 72] { R19379 += 1, R19335 += 1, R19168 += 1, R19169 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R19379 += 1, R19334 += 1, R19335 += 1 };
  s2 -> s3 [73, 73] { R19379 += 1, R19335 += 1, R19168 += 1, R19169 += 1 };
  s2 -> s4 [73, 73] { R19379 += 1, R19335 += 1, R19168 += 1, R19169 += 1 };
  s2 -> s1 [74, 65535] { R19379 += 1, R19335 += 1, R19168 += 1, R19169 += 1 };
  s3 -> s6 [0, 65535] { R19379 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R19379 += 1, R19335 += 1, R19168 += 1, R19169 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R19379 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R19379 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 72] { R19381 += 1, R19337 += 1, R19278 += 1, R19279 += 1 };
  s0 -> s2 [0, 72] { R19381 += 1, R19337 += 1, R19279 += 1 };
  s0 -> s3 [0, 65535] { R19381 += 1, R19336 += 1, R19337 += 1 };
  s0 -> s0 [0, 65535] { R19380 += 1, R19381 += 1 };
  s0 -> s4 [73, 73] { R19381 += 1, R19337 += 1, R19279 += 1 };
  s0 -> s5 [73, 73] { R19381 += 1, R19337 += 1, R19278 += 1, R19279 += 1 };
  s0 -> s6 [73, 73] { R19381 += 1, R19337 += 1, R19278 += 1, R19279 += 1 };
  s0 -> s7 [73, 73] { R19381 += 1, R19337 += 1, R19279 += 1 };
  s0 -> s2 [74, 80] { R19381 += 1, R19337 += 1, R19279 += 1 };
  s0 -> s1 [74, 65535] { R19381 += 1, R19337 += 1, R19278 += 1, R19279 += 1 };
  s0 -> s2 [89, 65535] { R19381 += 1, R19337 += 1, R19279 += 1 };
  s1 -> s1 [0, 72] { R19381 += 1, R19337 += 1, R19278 += 1, R19279 += 1 };
  s1 -> s2 [0, 72] { R19381 += 1, R19337 += 1, R19279 += 1 };
  s1 -> s4 [73, 73] { R19381 += 1, R19337 += 1, R19279 += 1 };
  s1 -> s5 [73, 73] { R19381 += 1, R19337 += 1, R19278 += 1, R19279 += 1 };
  s1 -> s6 [73, 73] { R19381 += 1, R19337 += 1, R19278 += 1, R19279 += 1 };
  s1 -> s7 [73, 73] { R19381 += 1, R19337 += 1, R19279 += 1 };
  s1 -> s2 [74, 80] { R19381 += 1, R19337 += 1, R19279 += 1 };
  s1 -> s1 [74, 65535] { R19381 += 1, R19337 += 1, R19278 += 1, R19279 += 1 };
  s1 -> s2 [89, 65535] { R19381 += 1, R19337 += 1, R19279 += 1 };
  s2 -> s2 [0, 72] { R19381 += 1, R19337 += 1, R19279 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R19381 += 1 };
  s2 -> s4 [73, 73] { R19381 += 1, R19337 += 1 };
  s2 -> s7 [73, 73] { R19381 += 1, R19337 += 1 };
  s2 -> s2 [74, 80] { R19381 += 1, R19337 += 1, R19279 += 1 };
  s2 -> s2 [74, 65535] { R19381 += 1, R19337 += 1 };
  s2 -> s2 [89, 65535] { R19381 += 1, R19337 += 1, R19279 += 1 };
  s3 -> s1 [0, 72] { R19381 += 1, R19337 += 1, R19278 += 1, R19279 += 1 };
  s3 -> s2 [0, 72] { R19381 += 1, R19337 += 1, R19279 += 1 };
  s3 -> s3 [0, 65535] { R19381 += 1, R19336 += 1, R19337 += 1 };
  s3 -> s4 [73, 73] { R19381 += 1, R19337 += 1, R19279 += 1 };
  s3 -> s5 [73, 73] { R19381 += 1, R19337 += 1, R19278 += 1, R19279 += 1 };
  s3 -> s6 [73, 73] { R19381 += 1, R19337 += 1, R19278 += 1, R19279 += 1 };
  s3 -> s7 [73, 73] { R19381 += 1, R19337 += 1, R19279 += 1 };
  s3 -> s2 [74, 80] { R19381 += 1, R19337 += 1, R19279 += 1 };
  s3 -> s1 [74, 65535] { R19381 += 1, R19337 += 1, R19278 += 1, R19279 += 1 };
  s3 -> s2 [89, 65535] { R19381 += 1, R19337 += 1, R19279 += 1 };
  s4 -> s4 [0, 80] { R19381 += 1, R19337 += 1, R19279 += 1 };
  s4 -> s4 [0, 65535] { R19381 += 1, R19337 += 1 };
  s4 -> s9 [0, 65535] { R19381 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [89, 65535] { R19381 += 1, R19337 += 1, R19279 += 1 };
  s6 -> s4 [0, 80] { R19381 += 1, R19337 += 1, R19279 += 1 };
  s6 -> s6 [0, 65535] { R19381 += 1, R19337 += 1, R19278 += 1, R19279 += 1 };
  s6 -> s4 [89, 65535] { R19381 += 1, R19337 += 1, R19279 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R19381 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R19381 += 1 };
  s9 -> s8 [0, 65535];
  accepting s4, s8, s2, s9, s7;
};
};
synchronised {  // Automata constraining P58
automaton P58_0 {
  init s0;
  s0 -> s1 [113, 113];
  accepting s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [105, 105];
  accepting s1;
};
};
constraint R2 = R19381 && R20 - R19381 = -1 && R21 = R19381 && R22 - R19381 = -1 && R23 = R19381 && R24 = 0 && R25 = 1 && R26 = 0 && R27 = 1 && R38 + R67 + R66 + -1*R19167 + -1*R19165 - R53 = 0 && R52 + R19166 + R19164 = 0 && R19322 = 0 && R19323 = 0 && R19328 = 0 && R19329 = 0 && R19330 = 0 && R19331 = 0 && R19332 = 0 && R19333 = 0 && R19336 = 0 && R19337 = 0 && R19338 = 0 && R19339 = R19381 && R19340 = 0 && R19341 = R19381 && R19342 = 0 && R19343 = R19381 && R19344 = 0 && R19345 = R19381 && R19346 = 0 && R19347 = R19381 && R19348 = 0 && R19349 = R19381 && R19350 = 0 && R19351 = R19381 && R19352 = 0 && R19353 = R19381 && R19354 = 0 && R19355 = R19381 && R19356 = 0 && R19357 = R19381 && R19358 = 0 && R19359 = R19381 && R19360 = 0 && R19361 = R19381 && R19362 = 0 && R19363 = R19381 && R19364 = 0 && R19365 = R19381 && R19366 = 0 && R19367 = R19381 && R19368 = 0 && R19369 = R19381 && R19370 = 0 && R19371 = R19381 && R19372 = 0 && R19373 = R19381 && R19374 = 0 && R19375 = R19381 && R19376 = 0 && R19377 = R19381 && R19378 = 0 && R19379 = R19381 && R19380 = 0 && -1 < R1 && R8 < 1 && R11 < 1 && R12 < 1 && R40 + R69 + R68 < 1 && -1*R19167 + -1*R19165 - R53 < 1 && 0 < R19381 && (R1 != 0 || R17 = 0 || (R19282 = 0 && R19283 = 0)) && (R1 != 0 || R17 = 0 || (R19284 = 0 && R19285 = 0)) && (R1 != 0 || R17 = 0 || (R19286 = 0 && R19287 = 0)) && (R1 != 0 || R17 = 0 || (R19288 = 0 && R19289 = 0)) && (R1 != 0 || R17 = 0 || (R19290 = 0 && R19291 = 0)) && (R1 != 0 || R17 = 0 || (R19292 = 0 && R19293 = 0)) && (R1 != 0 || R17 = 0 || (R19294 = 0 && R19295 = 0)) && (R1 != 0 || R17 = 0 || (R19296 = 0 && R19297 = 0)) && (R1 != 0 || R17 = 0 || (R19298 = 0 && R19299 = 0)) && (R1 != 0 || R17 = 0 || (R19300 = 0 && R19301 = 0)) && (R48 + R19163 + R19160 != 0 || ((R42 + R11524 + R11522 != 0 || R43 + R11525 + R11523 + -1*R19167 + -1*R19165 - R53 = 0 || R53 + R19167 + R19165 < 1) && (R42 + R11524 + R11522 = 0 || R53 + R19167 + R19165 < 1))) && (R48 + R19163 + R19160 != 0 || ((R46 + R19161 + R19158 != 0 || R47 + R19162 + R19159 + -1*R19167 + -1*R19165 - R53 = 0 || R53 + R19167 + R19165 < 1) && (R46 + R19161 + R19158 = 0 || R53 + R19167 + R19165 < 1))) && (R19282 != 0 || R1 = R19283 || R1 < 1) && (R19284 != 0 || R1 = R19285 || R1 < 1) && (R19286 != 0 || R1 = R19287 || R1 < 1) && (R19288 != 0 || R1 = R19289 || R1 < 1) && (R19290 != 0 || R1 = R19291 || R1 < 1) && (R19292 != 0 || R1 = R19293 || R1 < 1) && (R19294 != 0 || R1 = R19295 || R1 < 1) && (R19296 != 0 || R1 = R19297 || R1 < 1) && (R19298 != 0 || R1 = R19299 || R1 < 1) && (R19300 != 0 || R1 = R19301 || R1 < 1) && (R18 = 0 || (R19320 = 0 && R19321 = 0)) && (R18 = 0 || (R19324 = 0 && R19325 = 0)) && (R18 = 0 || (R19326 = 0 && R19327 = 0)) && (R18 = 0 || (R19334 = 0 && R19335 = 0)) && (R19 = 0 || (R19302 = 0 && R19303 = 0)) && (R19 = 0 || (R19304 = 0 && R19305 = 0)) && (R19 = 0 || (R19306 = 0 && R19307 = 0)) && (R19 = 0 || (R19308 = 0 && R19309 = 0)) && (R19 = 0 || (R19310 = 0 && R19311 = 0)) && (R19 = 0 || (R19312 = 0 && R19313 = 0)) && (R19 = 0 || (R19314 = 0 && R19315 = 0)) && (R19 = 0 || (R19316 = 0 && R19317 = 0)) && (R19 = 0 || (R19318 = 0 && R19319 = 0)) && (R48 + R19163 + R19160 = 0 || (R42 + R11524 + R11522 = 0 && R43 + R11525 + R11523 + -1*R19167 + -1*R19165 - R53 = 0)) && (R48 + R19163 + R19160 = 0 || (R46 + R19161 + R19158 = 0 && R47 + R19162 + R19159 + -1*R19167 + -1*R19165 - R53 = 0)) && (R58 + R19173 + R19170 = 0 || (R56 + R19171 + R19168 = 0 && R57 + R19172 + R19169 = 0)) && (R58 + R19173 + R19170 = 0 || (R62 + R19280 + R19278 = 0 && R63 + R19281 + R19279 = 0)) && (R19282 = 0 || R1 < 1) && (R19284 = 0 || R1 < 1) && (R19286 = 0 || R1 < 1) && (R19288 = 0 || R1 < 1) && (R19290 = 0 || R1 < 1) && (R19292 = 0 || R1 < 1) && (R19294 = 0 || R1 < 1) && (R19296 = 0 || R1 < 1) && (R19298 = 0 || R1 < 1) && (R19300 = 0 || R1 < 1);
// End of Parikh automata intersection problem
