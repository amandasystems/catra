// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R11522, R11523, R11524, R11525, R12, R17, R18, R19, R19158, R19159, R19160, R19161, R19162, R19163, R19164, R19165, R19166, R19167, R19590, R19591, R19592, R19593, R19594, R19595, R19804, R19805, R19806, R19807, R19808, R19809, R19810, R19811, R19812, R19813, R19814, R19815, R19816, R19817, R19818, R19819, R19820, R19821, R19822, R19823, R19824, R19825, R19826, R19827, R19828, R19829, R19830, R19831, R19832, R19833, R19834, R19835, R19836, R19837, R19838, R19839, R19840, R19841, R19842, R19843, R19844, R19845, R19846, R19847, R19848, R19849, R19850, R19851, R19852, R19853, R19854, R19855, R19856, R19857, R19858, R19859, R19860, R19861, R19862, R19863, R19864, R19865, R19866, R19867, R19868, R19869, R19870, R19871, R19872, R19873, R19874, R19875, R19876, R19877, R19878, R19879, R19880, R19881, R19882, R19883, R19884, R19885, R19886, R19887, R19888, R19889, R19890, R19891, R19892, R19893, R19894, R19895, R19896, R19897, R19898, R19899, R19900, R19901, R19902, R19903, R19904, R19905, R19906, R19907, R2, R20, R21, R22, R23, R24, R25, R26, R27, R3, R38, R4, R40, R42, R43, R46, R47, R48, R52, R53, R56, R57, R58, R62, R63, R66, R67, R68, R69, R8;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [73, 73];
  s0 -> s0 [74, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [73, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R2 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R11 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 72];
  s0 -> s0 [0, 65535] { R12 += 1 };
  s0 -> s2 [73, 73];
  s0 -> s1 [74, 65535];
  s1 -> s1 [0, 72];
  s1 -> s2 [73, 73];
  s1 -> s1 [74, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R21 += 1 };
  s0 -> s0 [0, 65535] { R20 += 1, R21 += 1 };
  s0 -> s2 [9, 13] { R21 += 1 };
  s0 -> s1 [14, 31] { R21 += 1 };
  s0 -> s2 [32, 32] { R21 += 1 };
  s0 -> s1 [33, 65535] { R21 += 1 };
  s1 -> s1 [0, 65535] { R21 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R21 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R22 += 1, R23 += 1 };
  s1 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R25 += 1 };
  s0 -> s0 [0, 65535] { R24 += 1, R25 += 1 };
  s0 -> s2 [9, 13] { R25 += 1 };
  s0 -> s1 [14, 31] { R25 += 1 };
  s0 -> s2 [32, 32] { R25 += 1 };
  s0 -> s1 [33, 65535] { R25 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R25 += 1 };
  s2 -> s1 [0, 65535] { R25 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R26 += 1, R27 += 1 };
  s1 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R19829 += 1, R19 += 1 };
  s0 -> s0 [0, 65535] { R19828 += 1, R19829 += 1 };
  s1 -> s1 [0, 65535] { R19829 += 1, R19 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 72] { R19831 += 1 };
  s0 -> s0 [0, 65535] { R19830 += 1, R19831 += 1 };
  s0 -> s2 [73, 73] { R19831 += 1 };
  s0 -> s3 [73, 73] { R19831 += 1 };
  s0 -> s1 [82, 65535] { R19831 += 1 };
  s1 -> s1 [0, 72] { R19831 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19831 += 1 };
  s1 -> s3 [73, 73] { R19831 += 1 };
  s1 -> s1 [82, 65535] { R19831 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 73] { R19831 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [82, 65535] { R19831 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 72] { R19833 += 1, R38 += 1 };
  s0 -> s0 [0, 65535] { R19832 += 1, R19833 += 1 };
  s0 -> s2 [73, 73] { R19833 += 1, R38 += 1 };
  s0 -> s3 [73, 73] { R19833 += 1, R38 += 1 };
  s0 -> s1 [74, 65535] { R19833 += 1, R38 += 1 };
  s1 -> s1 [0, 72] { R19833 += 1, R38 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19833 += 1, R38 += 1 };
  s1 -> s3 [73, 73] { R19833 += 1, R38 += 1 };
  s1 -> s1 [74, 65535] { R19833 += 1, R38 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R19833 += 1, R38 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 72] { R19835 += 1, R40 += 1 };
  s0 -> s0 [0, 65535] { R19834 += 1, R19835 += 1 };
  s0 -> s2 [73, 73] { R19835 += 1, R40 += 1 };
  s0 -> s3 [73, 73] { R19835 += 1, R40 += 1 };
  s0 -> s1 [74, 65535] { R19835 += 1, R40 += 1 };
  s1 -> s1 [0, 72] { R19835 += 1, R40 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19835 += 1, R40 += 1 };
  s1 -> s3 [73, 73] { R19835 += 1, R40 += 1 };
  s1 -> s1 [74, 65535] { R19835 += 1, R40 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R19835 += 1, R40 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 72] { R19837 += 1, R42 += 1, R43 += 1 };
  s0 -> s0 [0, 65535] { R19836 += 1, R19837 += 1 };
  s0 -> s2 [73, 73] { R19837 += 1, R42 += 1, R43 += 1 };
  s0 -> s3 [73, 73] { R19837 += 1, R42 += 1, R43 += 1 };
  s0 -> s1 [74, 65535] { R19837 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 72] { R19837 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19837 += 1, R42 += 1, R43 += 1 };
  s1 -> s3 [73, 73] { R19837 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [74, 65535] { R19837 += 1, R42 += 1, R43 += 1 };
  s2 -> s2 [0, 65535] { R19837 += 1, R42 += 1, R43 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 72] { R19839 += 1, R46 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R19838 += 1, R19839 += 1 };
  s0 -> s2 [73, 73] { R19839 += 1, R46 += 1, R47 += 1 };
  s0 -> s3 [73, 73] { R19839 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [74, 65535] { R19839 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 72] { R19839 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19839 += 1, R46 += 1, R47 += 1 };
  s1 -> s3 [73, 73] { R19839 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [74, 65535] { R19839 += 1, R46 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R19839 += 1, R46 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 72] { R19841 += 1, R52 += 1, R53 += 1 };
  s0 -> s0 [0, 65535] { R19840 += 1, R19841 += 1 };
  s0 -> s2 [73, 73] { R19841 += 1, R52 += 1, R53 += 1 };
  s0 -> s3 [73, 73] { R19841 += 1, R52 += 1, R53 += 1 };
  s0 -> s1 [74, 65535] { R19841 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 72] { R19841 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19841 += 1, R52 += 1, R53 += 1 };
  s1 -> s3 [73, 73] { R19841 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [74, 65535] { R19841 += 1, R52 += 1, R53 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R19841 += 1, R52 += 1, R53 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 72] { R19843 += 1, R56 += 1, R57 += 1 };
  s0 -> s0 [0, 65535] { R19842 += 1, R19843 += 1 };
  s0 -> s2 [73, 73] { R19843 += 1, R56 += 1, R57 += 1 };
  s0 -> s3 [73, 73] { R19843 += 1, R56 += 1, R57 += 1 };
  s0 -> s1 [74, 65535] { R19843 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 72] { R19843 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19843 += 1, R56 += 1, R57 += 1 };
  s1 -> s3 [73, 73] { R19843 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [74, 65535] { R19843 += 1, R56 += 1, R57 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R19843 += 1, R56 += 1, R57 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 72] { R19845 += 1, R62 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R19844 += 1, R19845 += 1 };
  s0 -> s2 [73, 73] { R19845 += 1, R62 += 1, R63 += 1 };
  s0 -> s3 [73, 73] { R19845 += 1, R62 += 1, R63 += 1 };
  s0 -> s1 [74, 65535] { R19845 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 72] { R19845 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19845 += 1, R62 += 1, R63 += 1 };
  s1 -> s3 [73, 73] { R19845 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [74, 65535] { R19845 += 1, R62 += 1, R63 += 1 };
  s2 -> s2 [0, 65535] { R19845 += 1, R62 += 1, R63 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 72] { R19865 += 1 };
  s0 -> s0 [0, 65535] { R19864 += 1, R19865 += 1 };
  s0 -> s2 [73, 73] { R19865 += 1 };
  s0 -> s1 [74, 65535] { R19865 += 1 };
  s1 -> s1 [0, 72] { R19865 += 1 };
  s1 -> s2 [73, 73] { R19865 += 1 };
  s1 -> s1 [74, 65535] { R19865 += 1 };
  s2 -> s2 [0, 65535] { R19865 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R19867 += 1, R1 += 1 };
  s0 -> s0 [0, 65535] { R19866 += 1, R19867 += 1 };
  s1 -> s1 [0, 65535] { R19867 += 1, R1 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 72] { R19869 += 1 };
  s0 -> s0 [0, 65535] { R19868 += 1, R19869 += 1 };
  s0 -> s2 [0, 65535] { R19869 += 1, R8 += 1 };
  s0 -> s3 [73, 73] { R19869 += 1 };
  s0 -> s1 [74, 65535] { R19869 += 1 };
  s1 -> s1 [0, 72] { R19869 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [73, 73] { R19869 += 1 };
  s1 -> s1 [74, 65535] { R19869 += 1 };
  s2 -> s1 [0, 72] { R19869 += 1 };
  s2 -> s2 [0, 65535] { R19869 += 1, R8 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [73, 73] { R19869 += 1 };
  s2 -> s1 [74, 65535] { R19869 += 1 };
  s3 -> s3 [0, 65535] { R19869 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 72] { R19871 += 1, R19809 += 1 };
  s0 -> s0 [0, 65535] { R19870 += 1, R19871 += 1 };
  s0 -> s2 [0, 65535] { R19871 += 1, R19808 += 1, R19809 += 1 };
  s0 -> s1 [74, 65535] { R19871 += 1, R19809 += 1 };
  s1 -> s1 [0, 72] { R19871 += 1, R19809 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R19871 += 1 };
  s1 -> s1 [74, 65535] { R19871 += 1, R19809 += 1 };
  s2 -> s1 [0, 72] { R19871 += 1, R19809 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R19871 += 1, R19808 += 1, R19809 += 1 };
  s2 -> s1 [74, 65535] { R19871 += 1, R19809 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R19873 += 1, R19810 += 1, R19811 += 1 };
  s0 -> s2 [0, 65535] { R19873 += 1, R19811 += 1, R17 += 1 };
  s0 -> s0 [0, 65535] { R19872 += 1, R19873 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R19873 += 1, R19810 += 1, R19811 += 1 };
  s1 -> s2 [0, 65535] { R19873 += 1, R19811 += 1, R17 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R19873 += 1, R19811 += 1, R17 += 1 };
  s2 -> s4 [0, 65535] { R19873 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19873 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 73] { R19875 += 1, R19813 += 1 };
  s0 -> s0 [0, 65535] { R19874 += 1, R19875 += 1 };
  s0 -> s2 [0, 65535] { R19875 += 1, R19812 += 1, R19813 += 1 };
  s0 -> s1 [81, 65535] { R19875 += 1, R19813 += 1 };
  s1 -> s1 [0, 73] { R19875 += 1, R19813 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R19875 += 1 };
  s1 -> s1 [81, 65535] { R19875 += 1, R19813 += 1 };
  s2 -> s1 [0, 73] { R19875 += 1, R19813 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R19875 += 1, R19812 += 1, R19813 += 1 };
  s2 -> s1 [81, 65535] { R19875 += 1, R19813 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R19877 += 1, R19814 += 1, R19815 += 1 };
  s0 -> s0 [0, 65535] { R19876 += 1, R19877 += 1 };
  s0 -> s2 [0, 65535] { R19877 += 1, R19815 += 1, R67 += 1 };
  s1 -> s1 [0, 65535] { R19877 += 1, R19814 += 1, R19815 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R19877 += 1, R19815 += 1, R67 += 1 };
  s2 -> s3 [0, 65535] { R19877 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R19877 += 1, R19815 += 1, R67 += 1 };
  s3 -> s3 [0, 65535] { R19877 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 80] { R19879 += 1, R19817 += 1 };
  s0 -> s0 [0, 65535] { R19878 += 1, R19879 += 1 };
  s0 -> s2 [0, 65535] { R19879 += 1, R19816 += 1, R19817 += 1 };
  s0 -> s3 [0, 65535] { R19879 += 1, R19817 += 1, R69 += 1 };
  s0 -> s1 [82, 65535] { R19879 += 1, R19817 += 1 };
  s1 -> s1 [0, 80] { R19879 += 1, R19817 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R19879 += 1 };
  s1 -> s1 [82, 65535] { R19879 += 1, R19817 += 1 };
  s2 -> s1 [0, 80] { R19879 += 1, R19817 += 1 };
  s2 -> s2 [0, 65535] { R19879 += 1, R19816 += 1, R19817 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R19879 += 1, R19817 += 1, R69 += 1 };
  s2 -> s1 [82, 65535] { R19879 += 1, R19817 += 1 };
  s3 -> s1 [0, 80] { R19879 += 1, R19817 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R19879 += 1 };
  s3 -> s3 [0, 65535] { R19879 += 1, R19817 += 1, R69 += 1 };
  s3 -> s1 [82, 65535] { R19879 += 1, R19817 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R19879 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 80] { R19881 += 1, R19819 += 1, R11525 += 1 };
  s0 -> s0 [0, 65535] { R19880 += 1, R19881 += 1 };
  s0 -> s1 [0, 65535] { R19881 += 1, R19819 += 1 };
  s0 -> s2 [0, 65535] { R19881 += 1, R19818 += 1, R19819 += 1 };
  s0 -> s1 [82, 65535] { R19881 += 1, R19819 += 1, R11525 += 1 };
  s1 -> s1 [0, 80] { R19881 += 1, R19819 += 1, R11525 += 1 };
  s1 -> s4 [0, 65535] { R19881 += 1 };
  s1 -> s1 [0, 65535] { R19881 += 1, R19819 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [82, 65535] { R19881 += 1, R19819 += 1, R11525 += 1 };
  s2 -> s1 [0, 80] { R19881 += 1, R19819 += 1, R11525 += 1 };
  s2 -> s1 [0, 65535] { R19881 += 1, R19819 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R19881 += 1, R19818 += 1, R19819 += 1 };
  s2 -> s1 [82, 65535] { R19881 += 1, R19819 += 1, R11525 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19881 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R19883 += 1, R19820 += 1, R19821 += 1 };
  s0 -> s2 [0, 65535] { R19883 += 1, R19821 += 1 };
  s0 -> s0 [0, 65535] { R19882 += 1, R19883 += 1 };
  s1 -> s1 [0, 65535] { R19883 += 1, R19820 += 1, R19821 += 1 };
  s1 -> s2 [0, 65535] { R19883 += 1, R19821 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R19883 += 1, R19821 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R19883 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19883 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 81] { R19885 += 1, R19823 += 1, R19167 += 1 };
  s0 -> s0 [0, 65535] { R19884 += 1, R19885 += 1 };
  s0 -> s2 [0, 65535] { R19885 += 1, R19822 += 1, R19823 += 1 };
  s0 -> s1 [0, 65535] { R19885 += 1, R19823 += 1 };
  s0 -> s1 [88, 65535] { R19885 += 1, R19823 += 1, R19167 += 1 };
  s1 -> s1 [0, 81] { R19885 += 1, R19823 += 1, R19167 += 1 };
  s1 -> s4 [0, 65535] { R19885 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R19885 += 1, R19823 += 1 };
  s1 -> s1 [88, 65535] { R19885 += 1, R19823 += 1, R19167 += 1 };
  s2 -> s1 [0, 81] { R19885 += 1, R19823 += 1, R19167 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R19885 += 1, R19822 += 1, R19823 += 1 };
  s2 -> s1 [0, 65535] { R19885 += 1, R19823 += 1 };
  s2 -> s1 [88, 65535] { R19885 += 1, R19823 += 1, R19167 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19885 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R19887 += 1, R19825 += 1 };
  s0 -> s2 [0, 65535] { R19887 += 1, R19824 += 1, R19825 += 1 };
  s0 -> s3 [0, 65535] { R19887 += 1, R19825 += 1, R19594 += 1, R19595 += 1 };
  s0 -> s0 [0, 65535] { R19886 += 1, R19887 += 1 };
  s1 -> s1 [0, 65535] { R19887 += 1, R19825 += 1 };
  s1 -> s4 [0, 65535] { R19887 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R19887 += 1, R19825 += 1 };
  s2 -> s2 [0, 65535] { R19887 += 1, R19824 += 1, R19825 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R19887 += 1, R19825 += 1, R19594 += 1, R19595 += 1 };
  s3 -> s1 [0, 65535] { R19887 += 1, R19825 += 1 };
  s3 -> s4 [0, 65535] { R19887 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R19887 += 1, R19825 += 1, R19594 += 1, R19595 += 1 };
  s4 -> s4 [0, 65535] { R19887 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s0 [0, 65535] { R19888 += 1, R19889 += 1 };
  s0 -> s1 [0, 65535] { R19889 += 1, R19826 += 1, R19827 += 1 };
  s0 -> s2 [0, 65535] { R19889 += 1, R19827 += 1 };
  s1 -> s1 [0, 65535] { R19889 += 1, R19826 += 1, R19827 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R19889 += 1, R19827 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R19889 += 1 };
  s2 -> s2 [0, 65535] { R19889 += 1, R19827 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19889 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R19890 += 1, R19891 += 1 };
  s0 -> s1 [0, 65535] { R19891 += 1, R19847 += 1, R18 += 1 };
  s0 -> s2 [0, 65535] { R19891 += 1, R19846 += 1, R19847 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R19891 += 1 };
  s1 -> s1 [0, 65535] { R19891 += 1, R19847 += 1, R18 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R19891 += 1, R19847 += 1, R18 += 1 };
  s2 -> s2 [0, 65535] { R19891 += 1, R19846 += 1, R19847 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19891 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 72] { R19893 += 1, R19849 += 1 };
  s0 -> s0 [0, 65535] { R19892 += 1, R19893 += 1 };
  s0 -> s2 [0, 65535] { R19893 += 1, R19848 += 1, R19849 += 1 };
  s0 -> s3 [73, 73] { R19893 += 1, R19849 += 1 };
  s0 -> s4 [73, 73] { R19893 += 1, R19849 += 1 };
  s0 -> s5 [81, 81] { R19893 += 1, R19849 += 1 };
  s0 -> s1 [82, 65535] { R19893 += 1, R19849 += 1 };
  s1 -> s1 [0, 72] { R19893 += 1, R19849 += 1 };
  s1 -> s3 [73, 73] { R19893 += 1, R19849 += 1 };
  s1 -> s4 [73, 73] { R19893 += 1, R19849 += 1 };
  s1 -> s5 [81, 81] { R19893 += 1, R19849 += 1 };
  s1 -> s1 [82, 65535] { R19893 += 1, R19849 += 1 };
  s2 -> s1 [0, 72] { R19893 += 1, R19849 += 1 };
  s2 -> s2 [0, 65535] { R19893 += 1, R19848 += 1, R19849 += 1 };
  s2 -> s3 [73, 73] { R19893 += 1, R19849 += 1 };
  s2 -> s4 [73, 73] { R19893 += 1, R19849 += 1 };
  s2 -> s5 [81, 81] { R19893 += 1, R19849 += 1 };
  s2 -> s1 [82, 65535] { R19893 += 1, R19849 += 1 };
  s3 -> s3 [0, 73] { R19893 += 1, R19849 += 1 };
  s3 -> s8 [81, 81] { R19893 += 1, R19849 += 1 };
  s3 -> s3 [82, 65535] { R19893 += 1, R19849 += 1 };
  s5 -> s5 [0, 72] { R19893 += 1, R19849 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R19893 += 1 };
  s5 -> s7 [73, 73] { R19893 += 1, R19849 += 1 };
  s5 -> s8 [73, 73] { R19893 += 1, R19849 += 1 };
  s5 -> s5 [81, 65535] { R19893 += 1, R19849 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R19893 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 73] { R19893 += 1, R19849 += 1 };
  s8 -> s8 [0, 65535] { R19893 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [81, 65535] { R19893 += 1, R19849 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 72] { R19895 += 1, R19851 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R19894 += 1, R19895 += 1 };
  s0 -> s2 [0, 65535] { R19895 += 1, R19850 += 1, R19851 += 1 };
  s0 -> s3 [73, 73] { R19895 += 1, R19851 += 1, R66 += 1 };
  s0 -> s4 [73, 73] { R19895 += 1, R19851 += 1, R66 += 1 };
  s0 -> s1 [74, 65535] { R19895 += 1, R19851 += 1, R66 += 1 };
  s1 -> s1 [0, 72] { R19895 += 1, R19851 += 1, R66 += 1 };
  s1 -> s1 [0, 65535] { R19895 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [73, 73] { R19895 += 1, R19851 += 1, R66 += 1 };
  s1 -> s4 [73, 73] { R19895 += 1, R19851 += 1, R66 += 1 };
  s1 -> s1 [74, 65535] { R19895 += 1, R19851 += 1, R66 += 1 };
  s2 -> s1 [0, 72] { R19895 += 1, R19851 += 1, R66 += 1 };
  s2 -> s2 [0, 65535] { R19895 += 1, R19850 += 1, R19851 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [73, 73] { R19895 += 1, R19851 += 1, R66 += 1 };
  s2 -> s4 [73, 73] { R19895 += 1, R19851 += 1, R66 += 1 };
  s2 -> s1 [74, 65535] { R19895 += 1, R19851 += 1, R66 += 1 };
  s3 -> s3 [0, 65535] { R19895 += 1, R19851 += 1, R66 += 1 };
  s3 -> s6 [0, 65535] { R19895 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R19895 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R19895 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 72] { R19897 += 1, R19853 += 1, R68 += 1 };
  s0 -> s2 [0, 65535] { R19897 += 1, R19852 += 1, R19853 += 1 };
  s0 -> s0 [0, 65535] { R19896 += 1, R19897 += 1 };
  s0 -> s3 [73, 73] { R19897 += 1, R19853 += 1, R68 += 1 };
  s0 -> s4 [73, 73] { R19897 += 1, R19853 += 1, R68 += 1 };
  s0 -> s1 [74, 65535] { R19897 += 1, R19853 += 1, R68 += 1 };
  s1 -> s1 [0, 72] { R19897 += 1, R19853 += 1, R68 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R19897 += 1 };
  s1 -> s3 [73, 73] { R19897 += 1, R19853 += 1, R68 += 1 };
  s1 -> s4 [73, 73] { R19897 += 1, R19853 += 1, R68 += 1 };
  s1 -> s1 [74, 65535] { R19897 += 1, R19853 += 1, R68 += 1 };
  s2 -> s1 [0, 72] { R19897 += 1, R19853 += 1, R68 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R19897 += 1, R19852 += 1, R19853 += 1 };
  s2 -> s3 [73, 73] { R19897 += 1, R19853 += 1, R68 += 1 };
  s2 -> s4 [73, 73] { R19897 += 1, R19853 += 1, R68 += 1 };
  s2 -> s1 [74, 65535] { R19897 += 1, R19853 += 1, R68 += 1 };
  s3 -> s3 [0, 65535] { R19897 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R19897 += 1, R19853 += 1, R68 += 1 };
  s4 -> s6 [0, 65535] { R19897 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R19897 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 72] { R19899 += 1, R19855 += 1, R11523 += 1 };
  s0 -> s2 [0, 72] { R19899 += 1, R19855 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s0 [0, 65535] { R19898 += 1, R19899 += 1 };
  s0 -> s3 [0, 65535] { R19899 += 1, R19854 += 1, R19855 += 1 };
  s0 -> s4 [73, 73] { R19899 += 1, R19855 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s5 [73, 73] { R19899 += 1, R19855 += 1, R11523 += 1 };
  s0 -> s6 [73, 73] { R19899 += 1, R19855 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s7 [73, 73] { R19899 += 1, R19855 += 1, R11523 += 1 };
  s0 -> s1 [74, 80] { R19899 += 1, R19855 += 1, R11523 += 1 };
  s0 -> s2 [74, 65535] { R19899 += 1, R19855 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s1 [82, 65535] { R19899 += 1, R19855 += 1, R11523 += 1 };
  s1 -> s1 [0, 72] { R19899 += 1, R19855 += 1, R11523 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s1 [0, 65535] { R19899 += 1 };
  s1 -> s5 [73, 73] { R19899 += 1, R19855 += 1 };
  s1 -> s7 [73, 73] { R19899 += 1, R19855 += 1 };
  s1 -> s1 [74, 80] { R19899 += 1, R19855 += 1, R11523 += 1 };
  s1 -> s1 [74, 65535] { R19899 += 1, R19855 += 1 };
  s1 -> s1 [82, 65535] { R19899 += 1, R19855 += 1, R11523 += 1 };
  s2 -> s1 [0, 72] { R19899 += 1, R19855 += 1, R11523 += 1 };
  s2 -> s2 [0, 72] { R19899 += 1, R19855 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s4 [73, 73] { R19899 += 1, R19855 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s5 [73, 73] { R19899 += 1, R19855 += 1, R11523 += 1 };
  s2 -> s6 [73, 73] { R19899 += 1, R19855 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s7 [73, 73] { R19899 += 1, R19855 += 1, R11523 += 1 };
  s2 -> s1 [74, 80] { R19899 += 1, R19855 += 1, R11523 += 1 };
  s2 -> s2 [74, 65535] { R19899 += 1, R19855 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s1 [82, 65535] { R19899 += 1, R19855 += 1, R11523 += 1 };
  s3 -> s1 [0, 72] { R19899 += 1, R19855 += 1, R11523 += 1 };
  s3 -> s2 [0, 72] { R19899 += 1, R19855 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s3 [0, 65535] { R19899 += 1, R19854 += 1, R19855 += 1 };
  s3 -> s4 [73, 73] { R19899 += 1, R19855 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s5 [73, 73] { R19899 += 1, R19855 += 1, R11523 += 1 };
  s3 -> s6 [73, 73] { R19899 += 1, R19855 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s7 [73, 73] { R19899 += 1, R19855 += 1, R11523 += 1 };
  s3 -> s1 [74, 80] { R19899 += 1, R19855 += 1, R11523 += 1 };
  s3 -> s2 [74, 65535] { R19899 += 1, R19855 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s1 [82, 65535] { R19899 += 1, R19855 += 1, R11523 += 1 };
  s4 -> s7 [0, 80] { R19899 += 1, R19855 += 1, R11523 += 1 };
  s4 -> s4 [0, 65535] { R19899 += 1, R19855 += 1, R11522 += 1, R11523 += 1 };
  s4 -> s7 [82, 65535] { R19899 += 1, R19855 += 1, R11523 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R19899 += 1 };
  s7 -> s7 [0, 80] { R19899 += 1, R19855 += 1, R11523 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R19899 += 1 };
  s7 -> s7 [0, 65535] { R19899 += 1, R19855 += 1 };
  s7 -> s7 [82, 65535] { R19899 += 1, R19855 += 1, R11523 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R19899 += 1 };
  accepting s8, s5, s9, s1, s7;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 72] { R19901 += 1, R19857 += 1, R19158 += 1, R19159 += 1 };
  s0 -> s2 [0, 72] { R19901 += 1, R19857 += 1, R19159 += 1, R19160 += 1 };
  s0 -> s0 [0, 65535] { R19900 += 1, R19901 += 1 };
  s0 -> s3 [0, 65535] { R19901 += 1, R19856 += 1, R19857 += 1 };
  s0 -> s4 [73, 73] { R19901 += 1, R19857 += 1, R19158 += 1, R19159 += 1 };
  s0 -> s5 [73, 73] { R19901 += 1, R19857 += 1, R19159 += 1, R19160 += 1 };
  s0 -> s6 [73, 73] { R19901 += 1, R19857 += 1, R19158 += 1, R19159 += 1 };
  s0 -> s7 [73, 73] { R19901 += 1, R19857 += 1, R19159 += 1, R19160 += 1 };
  s0 -> s1 [74, 65535] { R19901 += 1, R19857 += 1, R19158 += 1, R19159 += 1 };
  s0 -> s2 [74, 65535] { R19901 += 1, R19857 += 1, R19159 += 1, R19160 += 1 };
  s1 -> s1 [0, 72] { R19901 += 1, R19857 += 1, R19158 += 1, R19159 += 1 };
  s1 -> s2 [0, 72] { R19901 += 1, R19857 += 1, R19159 += 1, R19160 += 1 };
  s1 -> s4 [73, 73] { R19901 += 1, R19857 += 1, R19158 += 1, R19159 += 1 };
  s1 -> s5 [73, 73] { R19901 += 1, R19857 += 1, R19159 += 1, R19160 += 1 };
  s1 -> s6 [73, 73] { R19901 += 1, R19857 += 1, R19158 += 1, R19159 += 1 };
  s1 -> s7 [73, 73] { R19901 += 1, R19857 += 1, R19159 += 1, R19160 += 1 };
  s1 -> s1 [74, 65535] { R19901 += 1, R19857 += 1, R19158 += 1, R19159 += 1 };
  s1 -> s2 [74, 65535] { R19901 += 1, R19857 += 1, R19159 += 1, R19160 += 1 };
  s2 -> s2 [0, 72] { R19901 += 1, R19857 += 1, R19159 += 1, R19160 += 1 };
  s2 -> s11 [0, 72] { R19901 += 1, R19857 += 1 };
  s2 -> s12 [73, 73] { R19901 += 1, R19857 += 1 };
  s2 -> s5 [73, 73] { R19901 += 1, R19857 += 1, R19159 += 1, R19160 += 1 };
  s2 -> s8 [73, 73] { R19901 += 1, R19857 += 1 };
  s2 -> s7 [73, 73] { R19901 += 1, R19857 += 1, R19159 += 1, R19160 += 1 };
  s2 -> s2 [74, 65535] { R19901 += 1, R19857 += 1, R19159 += 1, R19160 += 1 };
  s2 -> s11 [74, 65535] { R19901 += 1, R19857 += 1 };
  s3 -> s1 [0, 72] { R19901 += 1, R19857 += 1, R19158 += 1, R19159 += 1 };
  s3 -> s2 [0, 72] { R19901 += 1, R19857 += 1, R19159 += 1, R19160 += 1 };
  s3 -> s3 [0, 65535] { R19901 += 1, R19856 += 1, R19857 += 1 };
  s3 -> s4 [73, 73] { R19901 += 1, R19857 += 1, R19158 += 1, R19159 += 1 };
  s3 -> s5 [73, 73] { R19901 += 1, R19857 += 1, R19159 += 1, R19160 += 1 };
  s3 -> s6 [73, 73] { R19901 += 1, R19857 += 1, R19158 += 1, R19159 += 1 };
  s3 -> s7 [73, 73] { R19901 += 1, R19857 += 1, R19159 += 1, R19160 += 1 };
  s3 -> s1 [74, 65535] { R19901 += 1, R19857 += 1, R19158 += 1, R19159 += 1 };
  s3 -> s2 [74, 65535] { R19901 += 1, R19857 += 1, R19159 += 1, R19160 += 1 };
  s4 -> s4 [0, 65535] { R19901 += 1, R19857 += 1, R19158 += 1, R19159 += 1 };
  s4 -> s5 [0, 65535] { R19901 += 1, R19857 += 1, R19159 += 1, R19160 += 1 };
  s5 -> s5 [0, 65535] { R19901 += 1, R19857 += 1, R19159 += 1, R19160 += 1 };
  s5 -> s8 [0, 65535] { R19901 += 1, R19857 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [0, 65535] { R19901 += 1 };
  s8 -> s8 [0, 65535] { R19901 += 1, R19857 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R19901 += 1 };
  s11 -> s11 [0, 72] { R19901 += 1, R19857 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R19901 += 1 };
  s11 -> s12 [73, 73] { R19901 += 1, R19857 += 1 };
  s11 -> s8 [73, 73] { R19901 += 1, R19857 += 1 };
  s11 -> s11 [74, 65535] { R19901 += 1, R19857 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R19901 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 72] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s0 -> s2 [0, 72] { R19903 += 1, R19859 += 1, R19164 += 1, R19165 += 1 };
  s0 -> s0 [0, 65535] { R19902 += 1, R19903 += 1 };
  s0 -> s3 [0, 65535] { R19903 += 1, R19858 += 1, R19859 += 1 };
  s0 -> s4 [73, 73] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s0 -> s5 [73, 73] { R19903 += 1, R19859 += 1, R19164 += 1, R19165 += 1 };
  s0 -> s6 [73, 73] { R19903 += 1, R19859 += 1, R19164 += 1, R19165 += 1 };
  s0 -> s7 [73, 73] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s0 -> s1 [74, 81] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s0 -> s2 [74, 65535] { R19903 += 1, R19859 += 1, R19164 += 1, R19165 += 1 };
  s0 -> s8 [88, 88] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s0 -> s1 [89, 65535] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s1 -> s1 [0, 72] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s1 -> s4 [73, 73] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s1 -> s7 [73, 73] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s1 -> s1 [74, 81] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s1 -> s8 [88, 88] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s1 -> s1 [89, 65535] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s2 -> s1 [0, 72] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s2 -> s2 [0, 72] { R19903 += 1, R19859 += 1, R19164 += 1, R19165 += 1 };
  s2 -> s4 [73, 73] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s2 -> s5 [73, 73] { R19903 += 1, R19859 += 1, R19164 += 1, R19165 += 1 };
  s2 -> s6 [73, 73] { R19903 += 1, R19859 += 1, R19164 += 1, R19165 += 1 };
  s2 -> s7 [73, 73] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s2 -> s1 [74, 81] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s2 -> s2 [74, 65535] { R19903 += 1, R19859 += 1, R19164 += 1, R19165 += 1 };
  s2 -> s8 [88, 88] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s2 -> s1 [89, 65535] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s3 -> s1 [0, 72] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s3 -> s2 [0, 72] { R19903 += 1, R19859 += 1, R19164 += 1, R19165 += 1 };
  s3 -> s3 [0, 65535] { R19903 += 1, R19858 += 1, R19859 += 1 };
  s3 -> s4 [73, 73] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s3 -> s5 [73, 73] { R19903 += 1, R19859 += 1, R19164 += 1, R19165 += 1 };
  s3 -> s6 [73, 73] { R19903 += 1, R19859 += 1, R19164 += 1, R19165 += 1 };
  s3 -> s7 [73, 73] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s3 -> s1 [74, 81] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s3 -> s2 [74, 65535] { R19903 += 1, R19859 += 1, R19164 += 1, R19165 += 1 };
  s3 -> s8 [88, 88] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s3 -> s1 [89, 65535] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s6 -> s7 [0, 81] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s6 -> s6 [0, 65535] { R19903 += 1, R19859 += 1, R19164 += 1, R19165 += 1 };
  s6 -> s11 [88, 88] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s6 -> s7 [89, 65535] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s7 -> s7 [0, 81] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s7 -> s11 [88, 88] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s7 -> s7 [89, 65535] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s8 -> s8 [0, 72] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R19903 += 1 };
  s8 -> s10 [73, 73] { R19903 += 1, R19859 += 1 };
  s8 -> s11 [73, 73] { R19903 += 1, R19859 += 1 };
  s8 -> s8 [74, 81] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s8 -> s8 [74, 65535] { R19903 += 1, R19859 += 1 };
  s8 -> s8 [88, 65535] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R19903 += 1 };
  s11 -> s11 [0, 81] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R19903 += 1 };
  s11 -> s11 [0, 65535] { R19903 += 1, R19859 += 1 };
  s11 -> s11 [88, 65535] { R19903 += 1, R19859 += 1, R19165 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R19903 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 72] { R19905 += 1, R19861 += 1, R19591 += 1, R19592 += 1 };
  s0 -> s2 [0, 72] { R19905 += 1, R19861 += 1, R19590 += 1, R19591 += 1 };
  s0 -> s0 [0, 65535] { R19904 += 1, R19905 += 1 };
  s0 -> s3 [0, 65535] { R19905 += 1, R19860 += 1, R19861 += 1 };
  s0 -> s4 [73, 73] { R19905 += 1, R19861 += 1, R19591 += 1, R19592 += 1 };
  s0 -> s5 [73, 73] { R19905 += 1, R19861 += 1, R19590 += 1, R19591 += 1 };
  s0 -> s6 [73, 73] { R19905 += 1, R19861 += 1, R19591 += 1, R19592 += 1 };
  s0 -> s7 [73, 73] { R19905 += 1, R19861 += 1, R19590 += 1, R19591 += 1 };
  s0 -> s1 [74, 65535] { R19905 += 1, R19861 += 1, R19591 += 1, R19592 += 1 };
  s0 -> s2 [74, 65535] { R19905 += 1, R19861 += 1, R19590 += 1, R19591 += 1 };
  s1 -> s1 [0, 72] { R19905 += 1, R19861 += 1, R19591 += 1, R19592 += 1 };
  s1 -> s1 [0, 65535] { R19905 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [73, 73] { R19905 += 1, R19861 += 1, R19591 += 1, R19592 += 1 };
  s1 -> s6 [73, 73] { R19905 += 1, R19861 += 1, R19591 += 1, R19592 += 1 };
  s1 -> s1 [74, 65535] { R19905 += 1, R19861 += 1, R19591 += 1, R19592 += 1 };
  s2 -> s1 [0, 72] { R19905 += 1, R19861 += 1, R19591 += 1, R19592 += 1 };
  s2 -> s2 [0, 72] { R19905 += 1, R19861 += 1, R19590 += 1, R19591 += 1 };
  s2 -> s4 [73, 73] { R19905 += 1, R19861 += 1, R19591 += 1, R19592 += 1 };
  s2 -> s5 [73, 73] { R19905 += 1, R19861 += 1, R19590 += 1, R19591 += 1 };
  s2 -> s6 [73, 73] { R19905 += 1, R19861 += 1, R19591 += 1, R19592 += 1 };
  s2 -> s7 [73, 73] { R19905 += 1, R19861 += 1, R19590 += 1, R19591 += 1 };
  s2 -> s1 [74, 65535] { R19905 += 1, R19861 += 1, R19591 += 1, R19592 += 1 };
  s2 -> s2 [74, 65535] { R19905 += 1, R19861 += 1, R19590 += 1, R19591 += 1 };
  s3 -> s1 [0, 72] { R19905 += 1, R19861 += 1, R19591 += 1, R19592 += 1 };
  s3 -> s2 [0, 72] { R19905 += 1, R19861 += 1, R19590 += 1, R19591 += 1 };
  s3 -> s3 [0, 65535] { R19905 += 1, R19860 += 1, R19861 += 1 };
  s3 -> s4 [73, 73] { R19905 += 1, R19861 += 1, R19591 += 1, R19592 += 1 };
  s3 -> s5 [73, 73] { R19905 += 1, R19861 += 1, R19590 += 1, R19591 += 1 };
  s3 -> s6 [73, 73] { R19905 += 1, R19861 += 1, R19591 += 1, R19592 += 1 };
  s3 -> s7 [73, 73] { R19905 += 1, R19861 += 1, R19590 += 1, R19591 += 1 };
  s3 -> s1 [74, 65535] { R19905 += 1, R19861 += 1, R19591 += 1, R19592 += 1 };
  s3 -> s2 [74, 65535] { R19905 += 1, R19861 += 1, R19590 += 1, R19591 += 1 };
  s4 -> s4 [0, 65535] { R19905 += 1, R19861 += 1, R19591 += 1, R19592 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s9 [0, 65535] { R19905 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R19905 += 1 };
  s7 -> s4 [0, 65535] { R19905 += 1, R19861 += 1, R19591 += 1, R19592 += 1 };
  s7 -> s7 [0, 65535] { R19905 += 1, R19861 += 1, R19590 += 1, R19591 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R19905 += 1 };
  accepting s4, s8, s9, s6, s1;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 72] { R19907 += 1, R19863 += 1, R19804 += 1, R19805 += 1 };
  s0 -> s2 [0, 72] { R19907 += 1, R19863 += 1, R19805 += 1 };
  s0 -> s3 [0, 65535] { R19907 += 1, R19862 += 1, R19863 += 1 };
  s0 -> s0 [0, 65535] { R19906 += 1, R19907 += 1 };
  s0 -> s4 [73, 73] { R19907 += 1, R19863 += 1, R19805 += 1 };
  s0 -> s5 [73, 73] { R19907 += 1, R19863 += 1, R19805 += 1 };
  s0 -> s6 [73, 73] { R19907 += 1, R19863 += 1, R19804 += 1, R19805 += 1 };
  s0 -> s7 [73, 73] { R19907 += 1, R19863 += 1, R19804 += 1, R19805 += 1 };
  s0 -> s2 [74, 80] { R19907 += 1, R19863 += 1, R19805 += 1 };
  s0 -> s1 [74, 65535] { R19907 += 1, R19863 += 1, R19804 += 1, R19805 += 1 };
  s0 -> s8 [81, 81] { R19907 += 1, R19863 += 1, R19805 += 1 };
  s0 -> s2 [89, 65535] { R19907 += 1, R19863 += 1, R19805 += 1 };
  s1 -> s1 [0, 72] { R19907 += 1, R19863 += 1, R19804 += 1, R19805 += 1 };
  s1 -> s2 [0, 72] { R19907 += 1, R19863 += 1, R19805 += 1 };
  s1 -> s4 [73, 73] { R19907 += 1, R19863 += 1, R19805 += 1 };
  s1 -> s5 [73, 73] { R19907 += 1, R19863 += 1, R19805 += 1 };
  s1 -> s6 [73, 73] { R19907 += 1, R19863 += 1, R19804 += 1, R19805 += 1 };
  s1 -> s7 [73, 73] { R19907 += 1, R19863 += 1, R19804 += 1, R19805 += 1 };
  s1 -> s2 [74, 80] { R19907 += 1, R19863 += 1, R19805 += 1 };
  s1 -> s1 [74, 65535] { R19907 += 1, R19863 += 1, R19804 += 1, R19805 += 1 };
  s1 -> s8 [81, 81] { R19907 += 1, R19863 += 1, R19805 += 1 };
  s1 -> s2 [89, 65535] { R19907 += 1, R19863 += 1, R19805 += 1 };
  s2 -> s2 [0, 72] { R19907 += 1, R19863 += 1, R19805 += 1 };
  s2 -> s4 [73, 73] { R19907 += 1, R19863 += 1 };
  s2 -> s5 [73, 73] { R19907 += 1, R19863 += 1 };
  s2 -> s2 [74, 80] { R19907 += 1, R19863 += 1, R19805 += 1 };
  s2 -> s2 [74, 65535] { R19907 += 1, R19863 += 1 };
  s2 -> s8 [81, 81] { R19907 += 1, R19863 += 1, R19805 += 1 };
  s2 -> s2 [89, 65535] { R19907 += 1, R19863 += 1, R19805 += 1 };
  s3 -> s1 [0, 72] { R19907 += 1, R19863 += 1, R19804 += 1, R19805 += 1 };
  s3 -> s2 [0, 72] { R19907 += 1, R19863 += 1, R19805 += 1 };
  s3 -> s3 [0, 65535] { R19907 += 1, R19862 += 1, R19863 += 1 };
  s3 -> s4 [73, 73] { R19907 += 1, R19863 += 1, R19805 += 1 };
  s3 -> s5 [73, 73] { R19907 += 1, R19863 += 1, R19805 += 1 };
  s3 -> s6 [73, 73] { R19907 += 1, R19863 += 1, R19804 += 1, R19805 += 1 };
  s3 -> s7 [73, 73] { R19907 += 1, R19863 += 1, R19804 += 1, R19805 += 1 };
  s3 -> s2 [74, 80] { R19907 += 1, R19863 += 1, R19805 += 1 };
  s3 -> s1 [74, 65535] { R19907 += 1, R19863 += 1, R19804 += 1, R19805 += 1 };
  s3 -> s8 [81, 81] { R19907 += 1, R19863 += 1, R19805 += 1 };
  s3 -> s2 [89, 65535] { R19907 += 1, R19863 += 1, R19805 += 1 };
  s4 -> s4 [0, 80] { R19907 += 1, R19863 += 1, R19805 += 1 };
  s4 -> s4 [0, 65535] { R19907 += 1, R19863 += 1 };
  s4 -> s11 [81, 81] { R19907 += 1, R19863 += 1, R19805 += 1 };
  s4 -> s4 [89, 65535] { R19907 += 1, R19863 += 1, R19805 += 1 };
  s7 -> s4 [0, 80] { R19907 += 1, R19863 += 1, R19805 += 1 };
  s7 -> s7 [0, 65535] { R19907 += 1, R19863 += 1, R19804 += 1, R19805 += 1 };
  s7 -> s11 [81, 81] { R19907 += 1, R19863 += 1, R19805 += 1 };
  s7 -> s4 [89, 65535] { R19907 += 1, R19863 += 1, R19805 += 1 };
  s8 -> s8 [0, 72] { R19907 += 1, R19863 += 1 };
  s8 -> s8 [0, 65535] { R19907 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [73, 73] { R19907 += 1, R19863 += 1 };
  s8 -> s11 [73, 73] { R19907 += 1, R19863 += 1 };
  s8 -> s8 [74, 65535] { R19907 += 1, R19863 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R19907 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R19907 += 1 };
  s11 -> s11 [0, 65535] { R19907 += 1, R19863 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R19907 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
};
synchronised {  // Automata constraining P58
automaton P58_0 {
  init s0;
  s0 -> s1 [113, 113];
  accepting s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [105, 105];
  accepting s1;
};
};
constraint R2 = R19907 && R20 - R19907 = -1 && R21 = R19907 && R22 - R19907 = -1 && R23 = R19907 && R24 = 0 && R25 = 1 && R26 = 0 && R27 = 1 && R38 + R67 + R66 + -1*R19167 + -1*R19165 - R53 = 0 && R52 + R19166 + R19164 = 0 && R19848 = 0 && R19849 = 0 && R19854 = 0 && R19855 = 0 && R19856 = 0 && R19857 = 0 && R19858 = 0 && R19859 = 0 && R19860 = 0 && R19861 = 0 && R19862 = 0 && R19863 = 0 && R19864 = 0 && R19865 = R19907 && R19866 = 0 && R19867 = R19907 && R19868 = 0 && R19869 = R19907 && R19870 = 0 && R19871 = R19907 && R19872 = 0 && R19873 = R19907 && R19874 = 0 && R19875 = R19907 && R19876 = 0 && R19877 = R19907 && R19878 = 0 && R19879 = R19907 && R19880 = 0 && R19881 = R19907 && R19882 = 0 && R19883 = R19907 && R19884 = 0 && R19885 = R19907 && R19886 = 0 && R19887 = R19907 && R19888 = 0 && R19889 = R19907 && R19890 = 0 && R19891 = R19907 && R19892 = 0 && R19893 = R19907 && R19894 = 0 && R19895 = R19907 && R19896 = 0 && R19897 = R19907 && R19898 = 0 && R19899 = R19907 && R19900 = 0 && R19901 = R19907 && R19902 = 0 && R19903 = R19907 && R19904 = 0 && R19905 = R19907 && R19906 = 0 && -1 < R1 && R8 < 1 && R11 < 1 && R12 < 1 && R40 + R69 + R68 < 1 && -1*R19167 + -1*R19165 - R53 < 1 && 0 < R19907 && (R1 != 0 || R17 = 0 || (R19808 = 0 && R19809 = 0)) && (R1 != 0 || R17 = 0 || (R19810 = 0 && R19811 = 0)) && (R1 != 0 || R17 = 0 || (R19812 = 0 && R19813 = 0)) && (R1 != 0 || R17 = 0 || (R19814 = 0 && R19815 = 0)) && (R1 != 0 || R17 = 0 || (R19816 = 0 && R19817 = 0)) && (R1 != 0 || R17 = 0 || (R19818 = 0 && R19819 = 0)) && (R1 != 0 || R17 = 0 || (R19820 = 0 && R19821 = 0)) && (R1 != 0 || R17 = 0 || (R19822 = 0 && R19823 = 0)) && (R1 != 0 || R17 = 0 || (R19824 = 0 && R19825 = 0)) && (R1 != 0 || R17 = 0 || (R19826 = 0 && R19827 = 0)) && (R48 + R19163 + R19160 != 0 || ((R42 + R11524 + R11522 != 0 || R43 + R11525 + R11523 + -1*R19167 + -1*R19165 - R53 = 0 || R53 + R19167 + R19165 < 1) && (R42 + R11524 + R11522 = 0 || R53 + R19167 + R19165 < 1))) && (R48 + R19163 + R19160 != 0 || ((R46 + R19161 + R19158 != 0 || R47 + R19162 + R19159 + -1*R19167 + -1*R19165 - R53 = 0 || R53 + R19167 + R19165 < 1) && (R46 + R19161 + R19158 = 0 || R53 + R19167 + R19165 < 1))) && (R19808 != 0 || R1 = R19809 || R1 < 1) && (R19810 != 0 || R1 = R19811 || R1 < 1) && (R19812 != 0 || R1 = R19813 || R1 < 1) && (R19814 != 0 || R1 = R19815 || R1 < 1) && (R19816 != 0 || R1 = R19817 || R1 < 1) && (R19818 != 0 || R1 = R19819 || R1 < 1) && (R19820 != 0 || R1 = R19821 || R1 < 1) && (R19822 != 0 || R1 = R19823 || R1 < 1) && (R19824 != 0 || R1 = R19825 || R1 < 1) && (R19826 != 0 || R1 = R19827 || R1 < 1) && (R18 = 0 || (R19846 = 0 && R19847 = 0)) && (R18 = 0 || (R19850 = 0 && R19851 = 0)) && (R18 = 0 || (R19852 = 0 && R19853 = 0)) && (R19 = 0 || (R19828 = 0 && R19829 = 0)) && (R19 = 0 || (R19830 = 0 && R19831 = 0)) && (R19 = 0 || (R19832 = 0 && R19833 = 0)) && (R19 = 0 || (R19834 = 0 && R19835 = 0)) && (R19 = 0 || (R19836 = 0 && R19837 = 0)) && (R19 = 0 || (R19838 = 0 && R19839 = 0)) && (R19 = 0 || (R19840 = 0 && R19841 = 0)) && (R19 = 0 || (R19842 = 0 && R19843 = 0)) && (R19 = 0 || (R19844 = 0 && R19845 = 0)) && (R48 + R19163 + R19160 = 0 || (R42 + R11524 + R11522 = 0 && R43 + R11525 + R11523 + -1*R19167 + -1*R19165 - R53 = 0)) && (R48 + R19163 + R19160 = 0 || (R46 + R19161 + R19158 = 0 && R47 + R19162 + R19159 + -1*R19167 + -1*R19165 - R53 = 0)) && (R58 + R19595 + R19592 = 0 || (R56 + R19593 + R19590 = 0 && R57 + R19594 + R19591 = 0)) && (R58 + R19595 + R19592 = 0 || (R62 + R19806 + R19804 = 0 && R63 + R19807 + R19805 = 0)) && (R19808 = 0 || R1 < 1) && (R19810 = 0 || R1 < 1) && (R19812 = 0 || R1 < 1) && (R19814 = 0 || R1 < 1) && (R19816 = 0 || R1 < 1) && (R19818 = 0 || R1 < 1) && (R19820 = 0 || R1 < 1) && (R19822 = 0 || R1 < 1) && (R19824 = 0 || R1 < 1) && (R19826 = 0 || R1 < 1);
// End of Parikh automata intersection problem
