// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R100, R10000, R10001, R10002, R10003, R10004, R10005, R10006, R10007, R10008, R10009, R10010, R10011, R10012, R10013, R10014, R10015, R10016, R10017, R10018, R10019, R10020, R10021, R10022, R10023, R10024, R10025, R10026, R10027, R10028, R10029, R10030, R10031, R10032, R10033, R10034, R10035, R10036, R10037, R10038, R10039, R10040, R10041, R10042, R10043, R10044, R10045, R10046, R10047, R10048, R10049, R10050, R10051, R10052, R10053, R10054, R10055, R10056, R10057, R10058, R10059, R10060, R10061, R10062, R10063, R10064, R10065, R10066, R10067, R10068, R10069, R10070, R10071, R10072, R101, R102, R103, R104, R105, R106, R107, R108, R109, R110, R111, R112, R113, R114, R115, R116, R117, R118, R119, R12, R120, R15, R16, R2, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R43, R45, R47, R48, R5, R51, R52, R53, R57, R58, R61, R62, R63, R6401, R6402, R6403, R6404, R67, R68, R71, R73, R75, R76, R79, R80, R81, R8497, R8498, R8499, R85, R8500, R8501, R8502, R8503, R8504, R8505, R8506, R86, R89, R9, R90, R91, R95, R96, R9895, R9896, R9897, R9898, R9899, R99, R9900, R9901, R9902, R9903, R9904, R9905, R9906, R9907, R9908, R9909, R9910, R9911, R9912, R9913, R9914, R9915, R9916, R9917, R9918, R9919, R9920, R9921, R9922, R9923, R9924, R9925, R9926, R9927, R9928, R9929, R9930, R9931, R9932, R9933, R9934, R9935, R9936, R9937, R9938, R9939, R9940, R9941, R9942, R9943, R9944, R9945, R9946, R9947, R9948, R9949, R9950, R9951, R9952, R9953, R9954, R9955, R9956, R9957, R9958, R9959, R9960, R9961, R9962, R9963, R9964, R9965, R9966, R9967, R9968, R9969, R9970, R9971, R9972, R9973, R9974, R9975, R9976, R9977, R9978, R9979, R9980, R9981, R9982, R9983, R9984, R9985, R9986, R9987, R9988, R9989, R9990, R9991, R9992, R9993, R9994, R9995, R9996, R9997, R9998, R9999;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [69, 69];
  s0 -> s0 [70, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [69, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 68];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [69, 69];
  s0 -> s1 [70, 65535];
  s1 -> s1 [0, 68];
  s1 -> s2 [69, 69];
  s1 -> s1 [70, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R26 += 1 };
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R30 += 1 };
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R99 += 1, R100 += 1 };
  s0 -> s1 [0, 65535] { R100 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R100 += 1, R24 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 68] { R102 += 1 };
  s0 -> s0 [0, 65535] { R101 += 1, R102 += 1 };
  s0 -> s2 [69, 69] { R102 += 1 };
  s0 -> s3 [69, 69] { R102 += 1 };
  s0 -> s1 [86, 65535] { R102 += 1 };
  s1 -> s1 [0, 68] { R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [69, 69] { R102 += 1 };
  s1 -> s3 [69, 69] { R102 += 1 };
  s1 -> s1 [86, 65535] { R102 += 1 };
  s2 -> s2 [0, 69] { R102 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [86, 65535] { R102 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 68] { R104 += 1, R43 += 1 };
  s0 -> s0 [0, 65535] { R103 += 1, R104 += 1 };
  s0 -> s2 [69, 69] { R104 += 1, R43 += 1 };
  s0 -> s3 [69, 69] { R104 += 1, R43 += 1 };
  s0 -> s1 [70, 65535] { R104 += 1, R43 += 1 };
  s1 -> s1 [0, 68] { R104 += 1, R43 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [69, 69] { R104 += 1, R43 += 1 };
  s1 -> s3 [69, 69] { R104 += 1, R43 += 1 };
  s1 -> s1 [70, 65535] { R104 += 1, R43 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R104 += 1, R43 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 68] { R106 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R105 += 1, R106 += 1 };
  s0 -> s2 [69, 69] { R106 += 1, R45 += 1 };
  s0 -> s3 [69, 69] { R106 += 1, R45 += 1 };
  s0 -> s1 [70, 65535] { R106 += 1, R45 += 1 };
  s1 -> s1 [0, 68] { R106 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [69, 69] { R106 += 1, R45 += 1 };
  s1 -> s3 [69, 69] { R106 += 1, R45 += 1 };
  s1 -> s1 [70, 65535] { R106 += 1, R45 += 1 };
  s2 -> s2 [0, 65535] { R106 += 1, R45 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 68] { R108 += 1, R47 += 1, R48 += 1 };
  s0 -> s0 [0, 65535] { R107 += 1, R108 += 1 };
  s0 -> s2 [69, 69] { R108 += 1, R47 += 1, R48 += 1 };
  s0 -> s3 [69, 69] { R108 += 1, R47 += 1, R48 += 1 };
  s0 -> s1 [70, 65535] { R108 += 1, R47 += 1, R48 += 1 };
  s1 -> s1 [0, 68] { R108 += 1, R47 += 1, R48 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [69, 69] { R108 += 1, R47 += 1, R48 += 1 };
  s1 -> s3 [69, 69] { R108 += 1, R47 += 1, R48 += 1 };
  s1 -> s1 [70, 65535] { R108 += 1, R47 += 1, R48 += 1 };
  s2 -> s2 [0, 65535] { R108 += 1, R47 += 1, R48 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 68] { R110 += 1, R51 += 1, R52 += 1 };
  s0 -> s0 [0, 65535] { R109 += 1, R110 += 1 };
  s0 -> s2 [69, 69] { R110 += 1, R51 += 1, R52 += 1 };
  s0 -> s3 [69, 69] { R110 += 1, R51 += 1, R52 += 1 };
  s0 -> s1 [70, 65535] { R110 += 1, R51 += 1, R52 += 1 };
  s1 -> s1 [0, 68] { R110 += 1, R51 += 1, R52 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [69, 69] { R110 += 1, R51 += 1, R52 += 1 };
  s1 -> s3 [69, 69] { R110 += 1, R51 += 1, R52 += 1 };
  s1 -> s1 [70, 65535] { R110 += 1, R51 += 1, R52 += 1 };
  s2 -> s2 [0, 65535] { R110 += 1, R51 += 1, R52 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 68] { R112 += 1, R57 += 1, R58 += 1 };
  s0 -> s0 [0, 65535] { R111 += 1, R112 += 1 };
  s0 -> s2 [69, 69] { R112 += 1, R57 += 1, R58 += 1 };
  s0 -> s3 [69, 69] { R112 += 1, R57 += 1, R58 += 1 };
  s0 -> s1 [70, 65535] { R112 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [0, 68] { R112 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [69, 69] { R112 += 1, R57 += 1, R58 += 1 };
  s1 -> s3 [69, 69] { R112 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [70, 65535] { R112 += 1, R57 += 1, R58 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R112 += 1, R57 += 1, R58 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 68] { R114 += 1, R61 += 1, R62 += 1 };
  s0 -> s0 [0, 65535] { R113 += 1, R114 += 1 };
  s0 -> s2 [69, 69] { R114 += 1, R61 += 1, R62 += 1 };
  s0 -> s3 [69, 69] { R114 += 1, R61 += 1, R62 += 1 };
  s0 -> s1 [70, 65535] { R114 += 1, R61 += 1, R62 += 1 };
  s1 -> s1 [0, 68] { R114 += 1, R61 += 1, R62 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [69, 69] { R114 += 1, R61 += 1, R62 += 1 };
  s1 -> s3 [69, 69] { R114 += 1, R61 += 1, R62 += 1 };
  s1 -> s1 [70, 65535] { R114 += 1, R61 += 1, R62 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R114 += 1, R61 += 1, R62 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 68] { R116 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R115 += 1, R116 += 1 };
  s0 -> s2 [69, 69] { R116 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [69, 69] { R116 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [70, 65535] { R116 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 68] { R116 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [69, 69] { R116 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [69, 69] { R116 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [70, 65535] { R116 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535] { R116 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 68] { R10006 += 1 };
  s0 -> s0 [0, 65535] { R10005 += 1, R10006 += 1 };
  s0 -> s2 [69, 69] { R10006 += 1 };
  s0 -> s1 [70, 65535] { R10006 += 1 };
  s1 -> s1 [0, 68] { R10006 += 1 };
  s1 -> s2 [69, 69] { R10006 += 1 };
  s1 -> s1 [70, 65535] { R10006 += 1 };
  s2 -> s2 [0, 65535] { R10006 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R10007 += 1, R10008 += 1 };
  s0 -> s1 [0, 65535] { R10008 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R10008 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 68] { R10010 += 1 };
  s0 -> s0 [0, 65535] { R10009 += 1, R10010 += 1 };
  s0 -> s2 [0, 65535] { R10010 += 1, R12 += 1 };
  s0 -> s3 [69, 69] { R10010 += 1 };
  s0 -> s1 [70, 65535] { R10010 += 1 };
  s1 -> s1 [0, 68] { R10010 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [69, 69] { R10010 += 1 };
  s1 -> s1 [70, 65535] { R10010 += 1 };
  s2 -> s1 [0, 68] { R10010 += 1 };
  s2 -> s2 [0, 65535] { R10010 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [69, 69] { R10010 += 1 };
  s2 -> s1 [70, 65535] { R10010 += 1 };
  s3 -> s3 [0, 65535] { R10010 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 65535] { R10012 += 1, R9925 += 1, R9926 += 1 };
  s0 -> s0 [0, 65535] { R10011 += 1, R10012 += 1 };
  s0 -> s2 [0, 65535] { R10012 += 1, R9926 += 1, R23 += 1 };
  s1 -> s1 [0, 65535] { R10012 += 1, R9925 += 1, R9926 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R10012 += 1, R9926 += 1, R23 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R10012 += 1 };
  s2 -> s2 [0, 65535] { R10012 += 1, R9926 += 1, R23 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R10012 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 68] { R10014 += 1, R9928 += 1 };
  s0 -> s0 [0, 65535] { R10013 += 1, R10014 += 1 };
  s0 -> s2 [0, 65535] { R10014 += 1, R9927 += 1, R9928 += 1 };
  s0 -> s3 [69, 69] { R10014 += 1, R9928 += 1 };
  s0 -> s4 [69, 69] { R10014 += 1, R9928 += 1 };
  s0 -> s5 [85, 85] { R10014 += 1, R9928 += 1 };
  s0 -> s1 [86, 65535] { R10014 += 1, R9928 += 1 };
  s1 -> s1 [0, 68] { R10014 += 1, R9928 += 1 };
  s1 -> s3 [69, 69] { R10014 += 1, R9928 += 1 };
  s1 -> s4 [69, 69] { R10014 += 1, R9928 += 1 };
  s1 -> s5 [85, 85] { R10014 += 1, R9928 += 1 };
  s1 -> s1 [86, 65535] { R10014 += 1, R9928 += 1 };
  s2 -> s1 [0, 68] { R10014 += 1, R9928 += 1 };
  s2 -> s2 [0, 65535] { R10014 += 1, R9927 += 1, R9928 += 1 };
  s2 -> s3 [69, 69] { R10014 += 1, R9928 += 1 };
  s2 -> s4 [69, 69] { R10014 += 1, R9928 += 1 };
  s2 -> s5 [85, 85] { R10014 += 1, R9928 += 1 };
  s2 -> s1 [86, 65535] { R10014 += 1, R9928 += 1 };
  s4 -> s4 [0, 69] { R10014 += 1, R9928 += 1 };
  s4 -> s7 [85, 85] { R10014 += 1, R9928 += 1 };
  s4 -> s4 [86, 65535] { R10014 += 1, R9928 += 1 };
  s5 -> s5 [0, 68] { R10014 += 1, R9928 += 1 };
  s5 -> s5 [0, 65535] { R10014 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [69, 69] { R10014 += 1, R9928 += 1 };
  s5 -> s8 [69, 69] { R10014 += 1, R9928 += 1 };
  s5 -> s5 [85, 65535] { R10014 += 1, R9928 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 69] { R10014 += 1, R9928 += 1 };
  s7 -> s7 [0, 65535] { R10014 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [85, 65535] { R10014 += 1, R9928 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R10014 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 68] { R10016 += 1, R9930 += 1, R71 += 1 };
  s0 -> s0 [0, 65535] { R10015 += 1, R10016 += 1 };
  s0 -> s2 [0, 65535] { R10016 += 1, R9929 += 1, R9930 += 1 };
  s0 -> s3 [69, 69] { R10016 += 1, R9930 += 1, R71 += 1 };
  s0 -> s4 [69, 69] { R10016 += 1, R9930 += 1, R71 += 1 };
  s0 -> s1 [70, 65535] { R10016 += 1, R9930 += 1, R71 += 1 };
  s1 -> s1 [0, 68] { R10016 += 1, R9930 += 1, R71 += 1 };
  s1 -> s1 [0, 65535] { R10016 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [69, 69] { R10016 += 1, R9930 += 1, R71 += 1 };
  s1 -> s4 [69, 69] { R10016 += 1, R9930 += 1, R71 += 1 };
  s1 -> s1 [70, 65535] { R10016 += 1, R9930 += 1, R71 += 1 };
  s2 -> s1 [0, 68] { R10016 += 1, R9930 += 1, R71 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10016 += 1, R9929 += 1, R9930 += 1 };
  s2 -> s3 [69, 69] { R10016 += 1, R9930 += 1, R71 += 1 };
  s2 -> s4 [69, 69] { R10016 += 1, R9930 += 1, R71 += 1 };
  s2 -> s1 [70, 65535] { R10016 += 1, R9930 += 1, R71 += 1 };
  s3 -> s3 [0, 65535] { R10016 += 1, R9930 += 1, R71 += 1 };
  s3 -> s6 [0, 65535] { R10016 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10016 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10016 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 68] { R10018 += 1, R9932 += 1, R73 += 1 };
  s0 -> s2 [0, 65535] { R10018 += 1, R9931 += 1, R9932 += 1 };
  s0 -> s0 [0, 65535] { R10017 += 1, R10018 += 1 };
  s0 -> s3 [69, 69] { R10018 += 1, R9932 += 1, R73 += 1 };
  s0 -> s4 [69, 69] { R10018 += 1, R9932 += 1, R73 += 1 };
  s0 -> s1 [70, 65535] { R10018 += 1, R9932 += 1, R73 += 1 };
  s1 -> s1 [0, 68] { R10018 += 1, R9932 += 1, R73 += 1 };
  s1 -> s1 [0, 65535] { R10018 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [69, 69] { R10018 += 1, R9932 += 1, R73 += 1 };
  s1 -> s4 [69, 69] { R10018 += 1, R9932 += 1, R73 += 1 };
  s1 -> s1 [70, 65535] { R10018 += 1, R9932 += 1, R73 += 1 };
  s2 -> s1 [0, 68] { R10018 += 1, R9932 += 1, R73 += 1 };
  s2 -> s2 [0, 65535] { R10018 += 1, R9931 += 1, R9932 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [69, 69] { R10018 += 1, R9932 += 1, R73 += 1 };
  s2 -> s4 [69, 69] { R10018 += 1, R9932 += 1, R73 += 1 };
  s2 -> s1 [70, 65535] { R10018 += 1, R9932 += 1, R73 += 1 };
  s3 -> s3 [0, 65535] { R10018 += 1, R9932 += 1, R73 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R10018 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10018 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10018 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 68] { R10020 += 1, R9934 += 1, R75 += 1, R76 += 1 };
  s0 -> s0 [0, 65535] { R10019 += 1, R10020 += 1 };
  s0 -> s2 [0, 65535] { R10020 += 1, R9933 += 1, R9934 += 1 };
  s0 -> s3 [69, 69] { R10020 += 1, R9934 += 1, R75 += 1, R76 += 1 };
  s0 -> s4 [69, 69] { R10020 += 1, R9934 += 1, R75 += 1, R76 += 1 };
  s0 -> s1 [70, 65535] { R10020 += 1, R9934 += 1, R75 += 1, R76 += 1 };
  s1 -> s1 [0, 68] { R10020 += 1, R9934 += 1, R75 += 1, R76 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R10020 += 1 };
  s1 -> s3 [69, 69] { R10020 += 1, R9934 += 1, R75 += 1, R76 += 1 };
  s1 -> s4 [69, 69] { R10020 += 1, R9934 += 1, R75 += 1, R76 += 1 };
  s1 -> s1 [70, 65535] { R10020 += 1, R9934 += 1, R75 += 1, R76 += 1 };
  s2 -> s1 [0, 68] { R10020 += 1, R9934 += 1, R75 += 1, R76 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10020 += 1, R9933 += 1, R9934 += 1 };
  s2 -> s3 [69, 69] { R10020 += 1, R9934 += 1, R75 += 1, R76 += 1 };
  s2 -> s4 [69, 69] { R10020 += 1, R9934 += 1, R75 += 1, R76 += 1 };
  s2 -> s1 [70, 65535] { R10020 += 1, R9934 += 1, R75 += 1, R76 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R10020 += 1, R9934 += 1, R75 += 1, R76 += 1 };
  s3 -> s6 [0, 65535] { R10020 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10020 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10020 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 68] { R10022 += 1, R9936 += 1, R79 += 1, R80 += 1 };
  s0 -> s2 [0, 65535] { R10022 += 1, R9935 += 1, R9936 += 1 };
  s0 -> s0 [0, 65535] { R10021 += 1, R10022 += 1 };
  s0 -> s3 [69, 69] { R10022 += 1, R9936 += 1, R79 += 1, R80 += 1 };
  s0 -> s4 [69, 69] { R10022 += 1, R9936 += 1, R79 += 1, R80 += 1 };
  s0 -> s1 [70, 65535] { R10022 += 1, R9936 += 1, R79 += 1, R80 += 1 };
  s1 -> s1 [0, 68] { R10022 += 1, R9936 += 1, R79 += 1, R80 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R10022 += 1 };
  s1 -> s3 [69, 69] { R10022 += 1, R9936 += 1, R79 += 1, R80 += 1 };
  s1 -> s4 [69, 69] { R10022 += 1, R9936 += 1, R79 += 1, R80 += 1 };
  s1 -> s1 [70, 65535] { R10022 += 1, R9936 += 1, R79 += 1, R80 += 1 };
  s2 -> s1 [0, 68] { R10022 += 1, R9936 += 1, R79 += 1, R80 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10022 += 1, R9935 += 1, R9936 += 1 };
  s2 -> s3 [69, 69] { R10022 += 1, R9936 += 1, R79 += 1, R80 += 1 };
  s2 -> s4 [69, 69] { R10022 += 1, R9936 += 1, R79 += 1, R80 += 1 };
  s2 -> s1 [70, 65535] { R10022 += 1, R9936 += 1, R79 += 1, R80 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R10022 += 1, R9936 += 1, R79 += 1, R80 += 1 };
  s3 -> s6 [0, 65535] { R10022 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10022 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10022 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 68] { R10024 += 1, R9938 += 1, R85 += 1, R86 += 1 };
  s0 -> s2 [0, 68] { R10024 += 1, R9938 += 1, R86 += 1 };
  s0 -> s3 [0, 65535] { R10024 += 1, R9937 += 1, R9938 += 1 };
  s0 -> s0 [0, 65535] { R10023 += 1, R10024 += 1 };
  s0 -> s4 [69, 69] { R10024 += 1, R9938 += 1, R85 += 1, R86 += 1 };
  s0 -> s5 [69, 69] { R10024 += 1, R9938 += 1, R85 += 1, R86 += 1 };
  s0 -> s6 [69, 69] { R10024 += 1, R9938 += 1, R86 += 1 };
  s0 -> s7 [69, 69] { R10024 += 1, R9938 += 1, R86 += 1 };
  s0 -> s2 [70, 85] { R10024 += 1, R9938 += 1, R86 += 1 };
  s0 -> s1 [70, 65535] { R10024 += 1, R9938 += 1, R85 += 1, R86 += 1 };
  s0 -> s8 [89, 89] { R10024 += 1, R9938 += 1, R86 += 1 };
  s0 -> s2 [90, 65535] { R10024 += 1, R9938 += 1, R86 += 1 };
  s1 -> s1 [0, 68] { R10024 += 1, R9938 += 1, R85 += 1, R86 += 1 };
  s1 -> s2 [0, 68] { R10024 += 1, R9938 += 1, R86 += 1 };
  s1 -> s4 [69, 69] { R10024 += 1, R9938 += 1, R85 += 1, R86 += 1 };
  s1 -> s5 [69, 69] { R10024 += 1, R9938 += 1, R85 += 1, R86 += 1 };
  s1 -> s6 [69, 69] { R10024 += 1, R9938 += 1, R86 += 1 };
  s1 -> s7 [69, 69] { R10024 += 1, R9938 += 1, R86 += 1 };
  s1 -> s2 [70, 85] { R10024 += 1, R9938 += 1, R86 += 1 };
  s1 -> s1 [70, 65535] { R10024 += 1, R9938 += 1, R85 += 1, R86 += 1 };
  s1 -> s8 [89, 89] { R10024 += 1, R9938 += 1, R86 += 1 };
  s1 -> s2 [90, 65535] { R10024 += 1, R9938 += 1, R86 += 1 };
  s2 -> s2 [0, 68] { R10024 += 1, R9938 += 1, R86 += 1 };
  s2 -> s6 [69, 69] { R10024 += 1, R9938 += 1, R86 += 1 };
  s2 -> s7 [69, 69] { R10024 += 1, R9938 += 1, R86 += 1 };
  s2 -> s2 [70, 85] { R10024 += 1, R9938 += 1, R86 += 1 };
  s2 -> s8 [89, 89] { R10024 += 1, R9938 += 1, R86 += 1 };
  s2 -> s2 [90, 65535] { R10024 += 1, R9938 += 1, R86 += 1 };
  s3 -> s1 [0, 68] { R10024 += 1, R9938 += 1, R85 += 1, R86 += 1 };
  s3 -> s2 [0, 68] { R10024 += 1, R9938 += 1, R86 += 1 };
  s3 -> s3 [0, 65535] { R10024 += 1, R9937 += 1, R9938 += 1 };
  s3 -> s4 [69, 69] { R10024 += 1, R9938 += 1, R85 += 1, R86 += 1 };
  s3 -> s5 [69, 69] { R10024 += 1, R9938 += 1, R85 += 1, R86 += 1 };
  s3 -> s6 [69, 69] { R10024 += 1, R9938 += 1, R86 += 1 };
  s3 -> s7 [69, 69] { R10024 += 1, R9938 += 1, R86 += 1 };
  s3 -> s2 [70, 85] { R10024 += 1, R9938 += 1, R86 += 1 };
  s3 -> s1 [70, 65535] { R10024 += 1, R9938 += 1, R85 += 1, R86 += 1 };
  s3 -> s8 [89, 89] { R10024 += 1, R9938 += 1, R86 += 1 };
  s3 -> s2 [90, 65535] { R10024 += 1, R9938 += 1, R86 += 1 };
  s4 -> s7 [0, 85] { R10024 += 1, R9938 += 1, R86 += 1 };
  s4 -> s4 [0, 65535] { R10024 += 1, R9938 += 1, R85 += 1, R86 += 1 };
  s4 -> s10 [89, 89] { R10024 += 1, R9938 += 1, R86 += 1 };
  s4 -> s7 [90, 65535] { R10024 += 1, R9938 += 1, R86 += 1 };
  s7 -> s7 [0, 85] { R10024 += 1, R9938 += 1, R86 += 1 };
  s7 -> s10 [89, 89] { R10024 += 1, R9938 += 1, R86 += 1 };
  s7 -> s7 [90, 65535] { R10024 += 1, R9938 += 1, R86 += 1 };
  s8 -> s8 [0, 68] { R10024 += 1, R9938 += 1, R86 += 1 };
  s8 -> s8 [0, 65535] { R10024 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [69, 69] { R10024 += 1, R9938 += 1 };
  s8 -> s11 [69, 69] { R10024 += 1, R9938 += 1 };
  s8 -> s8 [70, 85] { R10024 += 1, R9938 += 1, R86 += 1 };
  s8 -> s8 [70, 65535] { R10024 += 1, R9938 += 1 };
  s8 -> s8 [89, 65535] { R10024 += 1, R9938 += 1, R86 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 85] { R10024 += 1, R9938 += 1, R86 += 1 };
  s10 -> s12 [0, 65535] { R10024 += 1 };
  s10 -> s10 [0, 65535] { R10024 += 1, R9938 += 1 };
  s10 -> s9 [0, 65535];
  s10 -> s10 [89, 65535] { R10024 += 1, R9938 += 1, R86 += 1 };
  s11 -> s11 [0, 65535] { R10024 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R10024 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 68] { R10026 += 1, R9940 += 1, R89 += 1, R90 += 1 };
  s0 -> s2 [0, 65535] { R10026 += 1, R9939 += 1, R9940 += 1 };
  s0 -> s0 [0, 65535] { R10025 += 1, R10026 += 1 };
  s0 -> s3 [69, 69] { R10026 += 1, R9940 += 1, R89 += 1, R90 += 1 };
  s0 -> s4 [69, 69] { R10026 += 1, R9940 += 1, R89 += 1, R90 += 1 };
  s0 -> s1 [70, 65535] { R10026 += 1, R9940 += 1, R89 += 1, R90 += 1 };
  s1 -> s1 [0, 68] { R10026 += 1, R9940 += 1, R89 += 1, R90 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R10026 += 1 };
  s1 -> s3 [69, 69] { R10026 += 1, R9940 += 1, R89 += 1, R90 += 1 };
  s1 -> s4 [69, 69] { R10026 += 1, R9940 += 1, R89 += 1, R90 += 1 };
  s1 -> s1 [70, 65535] { R10026 += 1, R9940 += 1, R89 += 1, R90 += 1 };
  s2 -> s1 [0, 68] { R10026 += 1, R9940 += 1, R89 += 1, R90 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10026 += 1, R9939 += 1, R9940 += 1 };
  s2 -> s3 [69, 69] { R10026 += 1, R9940 += 1, R89 += 1, R90 += 1 };
  s2 -> s4 [69, 69] { R10026 += 1, R9940 += 1, R89 += 1, R90 += 1 };
  s2 -> s1 [70, 65535] { R10026 += 1, R9940 += 1, R89 += 1, R90 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R10026 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10026 += 1, R9940 += 1, R89 += 1, R90 += 1 };
  s4 -> s6 [0, 65535] { R10026 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10026 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 68] { R10028 += 1, R9942 += 1, R95 += 1, R96 += 1 };
  s0 -> s0 [0, 65535] { R10027 += 1, R10028 += 1 };
  s0 -> s2 [0, 65535] { R10028 += 1, R9941 += 1, R9942 += 1 };
  s0 -> s3 [69, 69] { R10028 += 1, R9942 += 1, R95 += 1, R96 += 1 };
  s0 -> s4 [69, 69] { R10028 += 1, R9942 += 1, R95 += 1, R96 += 1 };
  s0 -> s1 [70, 65535] { R10028 += 1, R9942 += 1, R95 += 1, R96 += 1 };
  s1 -> s1 [0, 68] { R10028 += 1, R9942 += 1, R95 += 1, R96 += 1 };
  s1 -> s1 [0, 65535] { R10028 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [69, 69] { R10028 += 1, R9942 += 1, R95 += 1, R96 += 1 };
  s1 -> s4 [69, 69] { R10028 += 1, R9942 += 1, R95 += 1, R96 += 1 };
  s1 -> s1 [70, 65535] { R10028 += 1, R9942 += 1, R95 += 1, R96 += 1 };
  s2 -> s1 [0, 68] { R10028 += 1, R9942 += 1, R95 += 1, R96 += 1 };
  s2 -> s2 [0, 65535] { R10028 += 1, R9941 += 1, R9942 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [69, 69] { R10028 += 1, R9942 += 1, R95 += 1, R96 += 1 };
  s2 -> s4 [69, 69] { R10028 += 1, R9942 += 1, R95 += 1, R96 += 1 };
  s2 -> s1 [70, 65535] { R10028 += 1, R9942 += 1, R95 += 1, R96 += 1 };
  s3 -> s3 [0, 65535] { R10028 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R10028 += 1 };
  s4 -> s4 [0, 65535] { R10028 += 1, R9942 += 1, R95 += 1, R96 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R10028 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 68] { R10030 += 1, R9962 += 1 };
  s0 -> s2 [0, 65535] { R10030 += 1, R9961 += 1, R9962 += 1 };
  s0 -> s0 [0, 65535] { R10029 += 1, R10030 += 1 };
  s0 -> s3 [69, 69] { R10030 += 1, R9962 += 1 };
  s0 -> s1 [70, 65535] { R10030 += 1, R9962 += 1 };
  s1 -> s1 [0, 68] { R10030 += 1, R9962 += 1 };
  s1 -> s3 [69, 69] { R10030 += 1, R9962 += 1 };
  s1 -> s1 [70, 65535] { R10030 += 1, R9962 += 1 };
  s2 -> s1 [0, 68] { R10030 += 1, R9962 += 1 };
  s2 -> s2 [0, 65535] { R10030 += 1, R9961 += 1, R9962 += 1 };
  s2 -> s3 [69, 69] { R10030 += 1, R9962 += 1 };
  s2 -> s1 [70, 65535] { R10030 += 1, R9962 += 1 };
  s3 -> s3 [0, 65535] { R10030 += 1, R9962 += 1 };
  s3 -> s4 [0, 65535] { R10030 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10030 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R10031 += 1, R10032 += 1 };
  s0 -> s1 [0, 65535] { R10032 += 1, R9963 += 1, R9964 += 1 };
  s0 -> s2 [0, 65535] { R10032 += 1, R9964 += 1, R1 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R10032 += 1, R9963 += 1, R9964 += 1 };
  s1 -> s2 [0, 65535] { R10032 += 1, R9964 += 1, R1 += 1 };
  s2 -> s3 [0, 65535] { R10032 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R10032 += 1, R9964 += 1, R1 += 1 };
  s3 -> s3 [0, 65535] { R10032 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 68] { R10034 += 1, R9966 += 1 };
  s0 -> s2 [0, 65535] { R10034 += 1, R9966 += 1, R9 += 1 };
  s0 -> s0 [0, 65535] { R10033 += 1, R10034 += 1 };
  s0 -> s3 [0, 65535] { R10034 += 1, R9965 += 1, R9966 += 1 };
  s0 -> s4 [69, 69] { R10034 += 1, R9966 += 1 };
  s0 -> s1 [70, 65535] { R10034 += 1, R9966 += 1 };
  s1 -> s1 [0, 68] { R10034 += 1, R9966 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R10034 += 1 };
  s1 -> s4 [69, 69] { R10034 += 1, R9966 += 1 };
  s1 -> s1 [70, 65535] { R10034 += 1, R9966 += 1 };
  s2 -> s1 [0, 68] { R10034 += 1, R9966 += 1 };
  s2 -> s2 [0, 65535] { R10034 += 1, R9966 += 1, R9 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R10034 += 1 };
  s2 -> s4 [69, 69] { R10034 += 1, R9966 += 1 };
  s2 -> s1 [70, 65535] { R10034 += 1, R9966 += 1 };
  s3 -> s1 [0, 68] { R10034 += 1, R9966 += 1 };
  s3 -> s2 [0, 65535] { R10034 += 1, R9966 += 1, R9 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R10034 += 1, R9965 += 1, R9966 += 1 };
  s3 -> s4 [69, 69] { R10034 += 1, R9966 += 1 };
  s3 -> s1 [70, 65535] { R10034 += 1, R9966 += 1 };
  s4 -> s4 [0, 65535] { R10034 += 1, R9966 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10034 += 1 };
  accepting s3, s5, s2, s6, s1, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 68] { R10036 += 1, R9968 += 1, R9906 += 1 };
  s0 -> s2 [0, 65535] { R10036 += 1, R9967 += 1, R9968 += 1 };
  s0 -> s3 [0, 65535] { R10036 += 1, R9968 += 1, R9905 += 1, R9906 += 1 };
  s0 -> s0 [0, 65535] { R10035 += 1, R10036 += 1 };
  s0 -> s1 [70, 65535] { R10036 += 1, R9968 += 1, R9906 += 1 };
  s1 -> s1 [0, 68] { R10036 += 1, R9968 += 1, R9906 += 1 };
  s1 -> s4 [0, 65535] { R10036 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R10036 += 1, R9968 += 1 };
  s1 -> s1 [70, 65535] { R10036 += 1, R9968 += 1, R9906 += 1 };
  s2 -> s1 [0, 68] { R10036 += 1, R9968 += 1, R9906 += 1 };
  s2 -> s2 [0, 65535] { R10036 += 1, R9967 += 1, R9968 += 1 };
  s2 -> s3 [0, 65535] { R10036 += 1, R9968 += 1, R9905 += 1, R9906 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [70, 65535] { R10036 += 1, R9968 += 1, R9906 += 1 };
  s3 -> s1 [0, 68] { R10036 += 1, R9968 += 1, R9906 += 1 };
  s3 -> s4 [0, 65535] { R10036 += 1 };
  s3 -> s3 [0, 65535] { R10036 += 1, R9968 += 1, R9905 += 1, R9906 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [70, 65535] { R10036 += 1, R9968 += 1, R9906 += 1 };
  s4 -> s4 [0, 65535] { R10036 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R10038 += 1, R9970 += 1, R9908 += 1, R21 += 1 };
  s0 -> s2 [0, 65535] { R10038 += 1, R9970 += 1, R9907 += 1, R9908 += 1 };
  s0 -> s3 [0, 65535] { R10038 += 1, R9969 += 1, R9970 += 1 };
  s0 -> s0 [0, 65535] { R10037 += 1, R10038 += 1 };
  s1 -> s1 [0, 65535] { R10038 += 1, R9970 += 1, R9908 += 1, R21 += 1 };
  s1 -> s5 [0, 65535] { R10038 += 1 };
  s1 -> s6 [0, 65535] { R10038 += 1, R9970 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R10038 += 1, R9970 += 1, R9908 += 1, R21 += 1 };
  s2 -> s5 [0, 65535] { R10038 += 1 };
  s2 -> s2 [0, 65535] { R10038 += 1, R9970 += 1, R9907 += 1, R9908 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R10038 += 1, R9970 += 1, R9908 += 1, R21 += 1 };
  s3 -> s2 [0, 65535] { R10038 += 1, R9970 += 1, R9907 += 1, R9908 += 1 };
  s3 -> s3 [0, 65535] { R10038 += 1, R9969 += 1, R9970 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R10038 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R10038 += 1 };
  s6 -> s6 [0, 65535] { R10038 += 1, R9970 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R10040 += 1, R9972 += 1, R9910 += 1 };
  s0 -> s2 [0, 65535] { R10040 += 1, R9972 += 1, R9909 += 1, R9910 += 1 };
  s0 -> s0 [0, 65535] { R10039 += 1, R10040 += 1 };
  s0 -> s3 [0, 65535] { R10040 += 1, R9971 += 1, R9972 += 1 };
  s0 -> s1 [85, 65535] { R10040 += 1, R9972 += 1, R9910 += 1 };
  s1 -> s1 [0, 69] { R10040 += 1, R9972 += 1, R9910 += 1 };
  s1 -> s5 [0, 65535] { R10040 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R10040 += 1, R9972 += 1 };
  s1 -> s1 [85, 65535] { R10040 += 1, R9972 += 1, R9910 += 1 };
  s2 -> s1 [0, 69] { R10040 += 1, R9972 += 1, R9910 += 1 };
  s2 -> s2 [0, 65535] { R10040 += 1, R9972 += 1, R9909 += 1, R9910 += 1 };
  s2 -> s5 [0, 65535] { R10040 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [85, 65535] { R10040 += 1, R9972 += 1, R9910 += 1 };
  s3 -> s1 [0, 69] { R10040 += 1, R9972 += 1, R9910 += 1 };
  s3 -> s2 [0, 65535] { R10040 += 1, R9972 += 1, R9909 += 1, R9910 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R10040 += 1, R9971 += 1, R9972 += 1 };
  s3 -> s1 [85, 65535] { R10040 += 1, R9972 += 1, R9910 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R10040 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 65535] { R10042 += 1, R9973 += 1, R9974 += 1 };
  s0 -> s2 [0, 65535] { R10042 += 1, R9974 += 1, R9911 += 1, R9912 += 1 };
  s0 -> s3 [0, 65535] { R10042 += 1, R9974 += 1, R9912 += 1, R118 += 1 };
  s0 -> s0 [0, 65535] { R10041 += 1, R10042 += 1 };
  s1 -> s1 [0, 65535] { R10042 += 1, R9973 += 1, R9974 += 1 };
  s1 -> s2 [0, 65535] { R10042 += 1, R9974 += 1, R9911 += 1, R9912 += 1 };
  s1 -> s3 [0, 65535] { R10042 += 1, R9974 += 1, R9912 += 1, R118 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R10042 += 1, R9974 += 1, R9911 += 1, R9912 += 1 };
  s2 -> s4 [0, 65535] { R10042 += 1 };
  s2 -> s3 [0, 65535] { R10042 += 1, R9974 += 1, R9912 += 1, R118 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R10042 += 1 };
  s3 -> s5 [0, 65535] { R10042 += 1, R9974 += 1 };
  s3 -> s3 [0, 65535] { R10042 += 1, R9974 += 1, R9912 += 1, R118 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R10042 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s4 [0, 65535] { R10042 += 1 };
  s5 -> s5 [0, 65535] { R10042 += 1, R9974 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 84] { R10044 += 1, R9976 += 1, R9914 += 1 };
  s0 -> s2 [0, 65535] { R10044 += 1, R9976 += 1, R9914 += 1, R120 += 1 };
  s0 -> s3 [0, 65535] { R10044 += 1, R9975 += 1, R9976 += 1 };
  s0 -> s0 [0, 65535] { R10043 += 1, R10044 += 1 };
  s0 -> s4 [0, 65535] { R10044 += 1, R9976 += 1, R9913 += 1, R9914 += 1 };
  s0 -> s1 [86, 65535] { R10044 += 1, R9976 += 1, R9914 += 1 };
  s1 -> s1 [0, 84] { R10044 += 1, R9976 += 1, R9914 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R10044 += 1 };
  s1 -> s1 [0, 65535] { R10044 += 1, R9976 += 1 };
  s1 -> s1 [86, 65535] { R10044 += 1, R9976 += 1, R9914 += 1 };
  s2 -> s1 [0, 84] { R10044 += 1, R9976 += 1, R9914 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10044 += 1, R9976 += 1, R9914 += 1, R120 += 1 };
  s2 -> s6 [0, 65535] { R10044 += 1 };
  s2 -> s7 [0, 65535] { R10044 += 1, R9976 += 1 };
  s2 -> s1 [86, 65535] { R10044 += 1, R9976 += 1, R9914 += 1 };
  s3 -> s1 [0, 84] { R10044 += 1, R9976 += 1, R9914 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R10044 += 1, R9976 += 1, R9914 += 1, R120 += 1 };
  s3 -> s3 [0, 65535] { R10044 += 1, R9975 += 1, R9976 += 1 };
  s3 -> s4 [0, 65535] { R10044 += 1, R9976 += 1, R9913 += 1, R9914 += 1 };
  s3 -> s1 [86, 65535] { R10044 += 1, R9976 += 1, R9914 += 1 };
  s4 -> s1 [0, 84] { R10044 += 1, R9976 += 1, R9914 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R10044 += 1, R9976 += 1, R9914 += 1, R120 += 1 };
  s4 -> s4 [0, 65535] { R10044 += 1, R9976 += 1, R9913 += 1, R9914 += 1 };
  s4 -> s6 [0, 65535] { R10044 += 1 };
  s4 -> s1 [86, 65535] { R10044 += 1, R9976 += 1, R9914 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10044 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R10044 += 1 };
  s7 -> s7 [0, 65535] { R10044 += 1, R9976 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 84] { R10046 += 1, R9978 += 1, R9916 += 1, R6404 += 1 };
  s0 -> s1 [0, 65535] { R10046 += 1, R9978 += 1, R9916 += 1 };
  s0 -> s0 [0, 65535] { R10045 += 1, R10046 += 1 };
  s0 -> s2 [0, 65535] { R10046 += 1, R9978 += 1, R9915 += 1, R9916 += 1 };
  s0 -> s3 [0, 65535] { R10046 += 1, R9977 += 1, R9978 += 1 };
  s0 -> s1 [86, 65535] { R10046 += 1, R9978 += 1, R9916 += 1, R6404 += 1 };
  s1 -> s1 [0, 84] { R10046 += 1, R9978 += 1, R9916 += 1, R6404 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R10046 += 1, R9978 += 1, R9916 += 1 };
  s1 -> s6 [0, 65535] { R10046 += 1, R9978 += 1 };
  s1 -> s5 [0, 65535] { R10046 += 1 };
  s1 -> s1 [86, 65535] { R10046 += 1, R9978 += 1, R9916 += 1, R6404 += 1 };
  s2 -> s1 [0, 84] { R10046 += 1, R9978 += 1, R9916 += 1, R6404 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R10046 += 1, R9978 += 1, R9916 += 1 };
  s2 -> s2 [0, 65535] { R10046 += 1, R9978 += 1, R9915 += 1, R9916 += 1 };
  s2 -> s5 [0, 65535] { R10046 += 1 };
  s2 -> s1 [86, 65535] { R10046 += 1, R9978 += 1, R9916 += 1, R6404 += 1 };
  s3 -> s1 [0, 84] { R10046 += 1, R9978 += 1, R9916 += 1, R6404 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R10046 += 1, R9978 += 1, R9916 += 1 };
  s3 -> s2 [0, 65535] { R10046 += 1, R9978 += 1, R9915 += 1, R9916 += 1 };
  s3 -> s3 [0, 65535] { R10046 += 1, R9977 += 1, R9978 += 1 };
  s3 -> s1 [86, 65535] { R10046 += 1, R9978 += 1, R9916 += 1, R6404 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R10046 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R10046 += 1, R9978 += 1 };
  s6 -> s5 [0, 65535] { R10046 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R10048 += 1, R9979 += 1, R9980 += 1 };
  s0 -> s2 [0, 65535] { R10048 += 1, R9980 += 1, R9918 += 1, R8501 += 1, R8502 += 1 };
  s0 -> s3 [0, 65535] { R10048 += 1, R9980 += 1, R9918 += 1 };
  s0 -> s4 [0, 65535] { R10048 += 1, R9980 += 1, R9917 += 1, R9918 += 1 };
  s0 -> s0 [0, 65535] { R10047 += 1, R10048 += 1 };
  s1 -> s1 [0, 65535] { R10048 += 1, R9979 += 1, R9980 += 1 };
  s1 -> s2 [0, 65535] { R10048 += 1, R9980 += 1, R9918 += 1, R8501 += 1, R8502 += 1 };
  s1 -> s3 [0, 65535] { R10048 += 1, R9980 += 1, R9918 += 1 };
  s1 -> s4 [0, 65535] { R10048 += 1, R9980 += 1, R9917 += 1, R9918 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R10048 += 1, R9980 += 1 };
  s2 -> s2 [0, 65535] { R10048 += 1, R9980 += 1, R9918 += 1, R8501 += 1, R8502 += 1 };
  s2 -> s3 [0, 65535] { R10048 += 1, R9980 += 1, R9918 += 1 };
  s2 -> s5 [0, 65535] { R10048 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R10048 += 1, R9980 += 1 };
  s3 -> s3 [0, 65535] { R10048 += 1, R9980 += 1, R9918 += 1 };
  s3 -> s5 [0, 65535] { R10048 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s2 [0, 65535] { R10048 += 1, R9980 += 1, R9918 += 1, R8501 += 1, R8502 += 1 };
  s4 -> s3 [0, 65535] { R10048 += 1, R9980 += 1, R9918 += 1 };
  s4 -> s4 [0, 65535] { R10048 += 1, R9980 += 1, R9917 += 1, R9918 += 1 };
  s4 -> s5 [0, 65535] { R10048 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R10048 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R10048 += 1, R9980 += 1 };
  s7 -> s5 [0, 65535] { R10048 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 85] { R10050 += 1, R9982 += 1, R9920 += 1, R8506 += 1 };
  s0 -> s1 [0, 65535] { R10050 += 1, R9982 += 1, R9920 += 1 };
  s0 -> s2 [0, 65535] { R10050 += 1, R9981 += 1, R9982 += 1 };
  s0 -> s0 [0, 65535] { R10049 += 1, R10050 += 1 };
  s0 -> s3 [0, 65535] { R10050 += 1, R9982 += 1, R9919 += 1, R9920 += 1 };
  s0 -> s1 [89, 65535] { R10050 += 1, R9982 += 1, R9920 += 1, R8506 += 1 };
  s1 -> s1 [0, 85] { R10050 += 1, R9982 += 1, R9920 += 1, R8506 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R10050 += 1, R9982 += 1, R9920 += 1 };
  s1 -> s6 [0, 65535] { R10050 += 1, R9982 += 1 };
  s1 -> s5 [0, 65535] { R10050 += 1 };
  s1 -> s1 [89, 65535] { R10050 += 1, R9982 += 1, R9920 += 1, R8506 += 1 };
  s2 -> s1 [0, 85] { R10050 += 1, R9982 += 1, R9920 += 1, R8506 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R10050 += 1, R9982 += 1, R9920 += 1 };
  s2 -> s2 [0, 65535] { R10050 += 1, R9981 += 1, R9982 += 1 };
  s2 -> s3 [0, 65535] { R10050 += 1, R9982 += 1, R9919 += 1, R9920 += 1 };
  s2 -> s1 [89, 65535] { R10050 += 1, R9982 += 1, R9920 += 1, R8506 += 1 };
  s3 -> s1 [0, 85] { R10050 += 1, R9982 += 1, R9920 += 1, R8506 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R10050 += 1, R9982 += 1, R9920 += 1 };
  s3 -> s5 [0, 65535] { R10050 += 1 };
  s3 -> s3 [0, 65535] { R10050 += 1, R9982 += 1, R9919 += 1, R9920 += 1 };
  s3 -> s1 [89, 65535] { R10050 += 1, R9982 += 1, R9920 += 1, R8506 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R10050 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R10050 += 1, R9982 += 1 };
  s6 -> s5 [0, 65535] { R10050 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65535] { R10052 += 1, R9984 += 1, R9922 += 1 };
  s0 -> s0 [0, 65535] { R10051 += 1, R10052 += 1 };
  s0 -> s2 [0, 65535] { R10052 += 1, R9984 += 1, R9921 += 1, R9922 += 1 };
  s0 -> s3 [0, 65535] { R10052 += 1, R9983 += 1, R9984 += 1 };
  s1 -> s5 [0, 65535] { R10052 += 1 };
  s1 -> s6 [0, 65535] { R10052 += 1, R9984 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R10052 += 1, R9984 += 1, R9922 += 1 };
  s2 -> s5 [0, 65535] { R10052 += 1 };
  s2 -> s2 [0, 65535] { R10052 += 1, R9984 += 1, R9921 += 1, R9922 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R10052 += 1, R9984 += 1, R9922 += 1 };
  s3 -> s1 [0, 65535] { R10052 += 1, R9984 += 1, R9922 += 1 };
  s3 -> s2 [0, 65535] { R10052 += 1, R9984 += 1, R9921 += 1, R9922 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R10052 += 1, R9983 += 1, R9984 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R10052 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R10052 += 1 };
  s6 -> s6 [0, 65535] { R10052 += 1, R9984 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 84] { R10054 += 1, R9986 += 1, R9924 += 1, R9904 += 1 };
  s0 -> s2 [0, 65535] { R10054 += 1, R9986 += 1, R9923 += 1, R9924 += 1 };
  s0 -> s3 [0, 65535] { R10054 += 1, R9985 += 1, R9986 += 1 };
  s0 -> s4 [0, 65535] { R10054 += 1, R9986 += 1, R9924 += 1, R9903 += 1, R9904 += 1 };
  s0 -> s0 [0, 65535] { R10053 += 1, R10054 += 1 };
  s0 -> s5 [85, 85] { R10054 += 1, R9986 += 1, R9924 += 1, R9904 += 1 };
  s0 -> s6 [85, 85] { R10054 += 1, R9986 += 1, R9924 += 1, R9904 += 1 };
  s0 -> s1 [90, 65535] { R10054 += 1, R9986 += 1, R9924 += 1, R9904 += 1 };
  s1 -> s1 [0, 84] { R10054 += 1, R9986 += 1, R9924 += 1, R9904 += 1 };
  s1 -> s7 [0, 65535] { R10054 += 1 };
  s1 -> s8 [0, 65535] { R10054 += 1, R9986 += 1 };
  s1 -> s1 [0, 65535] { R10054 += 1, R9986 += 1, R9924 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s5 [85, 85] { R10054 += 1, R9986 += 1, R9924 += 1, R9904 += 1 };
  s1 -> s6 [85, 85] { R10054 += 1, R9986 += 1, R9924 += 1, R9904 += 1 };
  s1 -> s1 [90, 65535] { R10054 += 1, R9986 += 1, R9924 += 1, R9904 += 1 };
  s2 -> s1 [0, 84] { R10054 += 1, R9986 += 1, R9924 += 1, R9904 += 1 };
  s2 -> s2 [0, 65535] { R10054 += 1, R9986 += 1, R9923 += 1, R9924 += 1 };
  s2 -> s7 [0, 65535] { R10054 += 1 };
  s2 -> s9 [0, 65535];
  s2 -> s4 [0, 65535] { R10054 += 1, R9986 += 1, R9924 += 1, R9903 += 1, R9904 += 1 };
  s2 -> s5 [85, 85] { R10054 += 1, R9986 += 1, R9924 += 1, R9904 += 1 };
  s2 -> s6 [85, 85] { R10054 += 1, R9986 += 1, R9924 += 1, R9904 += 1 };
  s2 -> s1 [90, 65535] { R10054 += 1, R9986 += 1, R9924 += 1, R9904 += 1 };
  s3 -> s1 [0, 84] { R10054 += 1, R9986 += 1, R9924 += 1, R9904 += 1 };
  s3 -> s2 [0, 65535] { R10054 += 1, R9986 += 1, R9923 += 1, R9924 += 1 };
  s3 -> s3 [0, 65535] { R10054 += 1, R9985 += 1, R9986 += 1 };
  s3 -> s9 [0, 65535];
  s3 -> s4 [0, 65535] { R10054 += 1, R9986 += 1, R9924 += 1, R9903 += 1, R9904 += 1 };
  s3 -> s5 [85, 85] { R10054 += 1, R9986 += 1, R9924 += 1, R9904 += 1 };
  s3 -> s6 [85, 85] { R10054 += 1, R9986 += 1, R9924 += 1, R9904 += 1 };
  s3 -> s1 [90, 65535] { R10054 += 1, R9986 += 1, R9924 += 1, R9904 += 1 };
  s4 -> s1 [0, 84] { R10054 += 1, R9986 += 1, R9924 += 1, R9904 += 1 };
  s4 -> s7 [0, 65535] { R10054 += 1 };
  s4 -> s8 [0, 65535] { R10054 += 1, R9986 += 1 };
  s4 -> s9 [0, 65535];
  s4 -> s4 [0, 65535] { R10054 += 1, R9986 += 1, R9924 += 1, R9903 += 1, R9904 += 1 };
  s4 -> s5 [85, 85] { R10054 += 1, R9986 += 1, R9924 += 1, R9904 += 1 };
  s4 -> s6 [85, 85] { R10054 += 1, R9986 += 1, R9924 += 1, R9904 += 1 };
  s4 -> s1 [90, 65535] { R10054 += 1, R9986 += 1, R9924 += 1, R9904 += 1 };
  s5 -> s5 [0, 65535] { R10054 += 1, R9986 += 1, R9924 += 1 };
  s5 -> s7 [0, 65535] { R10054 += 1 };
  s5 -> s8 [0, 65535] { R10054 += 1, R9986 += 1 };
  s5 -> s9 [0, 65535];
  s6 -> s6 [0, 85] { R10054 += 1, R9986 += 1, R9924 += 1, R9904 += 1 };
  s6 -> s7 [0, 65535] { R10054 += 1 };
  s6 -> s8 [0, 65535] { R10054 += 1, R9986 += 1 };
  s6 -> s6 [0, 65535] { R10054 += 1, R9986 += 1, R9924 += 1 };
  s6 -> s9 [0, 65535];
  s6 -> s6 [90, 65535] { R10054 += 1, R9986 += 1, R9924 += 1, R9904 += 1 };
  s7 -> s7 [0, 65535] { R10054 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s7 [0, 65535] { R10054 += 1 };
  s8 -> s8 [0, 65535] { R10054 += 1, R9986 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton value2_42 {
  init s0;
  s0 -> s0 [0, 65535] { R10055 += 1, R10056 += 1 };
  s0 -> s1 [0, 65535] { R10056 += 1, R9988 += 1, R9944 += 1, R22 += 1 };
  s0 -> s2 [0, 65535] { R10056 += 1, R9987 += 1, R9988 += 1 };
  s0 -> s3 [0, 65535] { R10056 += 1, R9988 += 1, R9943 += 1, R9944 += 1 };
  s1 -> s4 [0, 65535] { R10056 += 1 };
  s1 -> s6 [0, 65535] { R10056 += 1, R9988 += 1 };
  s1 -> s1 [0, 65535] { R10056 += 1, R9988 += 1, R9944 += 1, R22 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R10056 += 1, R9988 += 1, R9944 += 1, R22 += 1 };
  s2 -> s2 [0, 65535] { R10056 += 1, R9987 += 1, R9988 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R10056 += 1, R9988 += 1, R9943 += 1, R9944 += 1 };
  s3 -> s4 [0, 65535] { R10056 += 1 };
  s3 -> s1 [0, 65535] { R10056 += 1, R9988 += 1, R9944 += 1, R22 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R10056 += 1, R9988 += 1, R9943 += 1, R9944 += 1 };
  s4 -> s4 [0, 65535] { R10056 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R10056 += 1 };
  s6 -> s6 [0, 65535] { R10056 += 1, R9988 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 68] { R10058 += 1, R9990 += 1, R9946 += 1 };
  s0 -> s0 [0, 65535] { R10057 += 1, R10058 += 1 };
  s0 -> s2 [0, 65535] { R10058 += 1, R9989 += 1, R9990 += 1 };
  s0 -> s3 [0, 65535] { R10058 += 1, R9990 += 1, R9945 += 1, R9946 += 1 };
  s0 -> s4 [69, 69] { R10058 += 1, R9990 += 1, R9946 += 1 };
  s0 -> s5 [69, 69] { R10058 += 1, R9990 += 1, R9946 += 1 };
  s0 -> s1 [85, 65535] { R10058 += 1, R9990 += 1, R9946 += 1 };
  s1 -> s1 [0, 68] { R10058 += 1, R9990 += 1, R9946 += 1 };
  s1 -> s1 [0, 65535] { R10058 += 1, R9990 += 1 };
  s1 -> s6 [0, 65535] { R10058 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [69, 69] { R10058 += 1, R9990 += 1, R9946 += 1 };
  s1 -> s5 [69, 69] { R10058 += 1, R9990 += 1, R9946 += 1 };
  s1 -> s1 [85, 65535] { R10058 += 1, R9990 += 1, R9946 += 1 };
  s2 -> s1 [0, 68] { R10058 += 1, R9990 += 1, R9946 += 1 };
  s2 -> s2 [0, 65535] { R10058 += 1, R9989 += 1, R9990 += 1 };
  s2 -> s3 [0, 65535] { R10058 += 1, R9990 += 1, R9945 += 1, R9946 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [69, 69] { R10058 += 1, R9990 += 1, R9946 += 1 };
  s2 -> s5 [69, 69] { R10058 += 1, R9990 += 1, R9946 += 1 };
  s2 -> s1 [85, 65535] { R10058 += 1, R9990 += 1, R9946 += 1 };
  s3 -> s1 [0, 68] { R10058 += 1, R9990 += 1, R9946 += 1 };
  s3 -> s6 [0, 65535] { R10058 += 1 };
  s3 -> s3 [0, 65535] { R10058 += 1, R9990 += 1, R9945 += 1, R9946 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [69, 69] { R10058 += 1, R9990 += 1, R9946 += 1 };
  s3 -> s5 [69, 69] { R10058 += 1, R9990 += 1, R9946 += 1 };
  s3 -> s1 [85, 65535] { R10058 += 1, R9990 += 1, R9946 += 1 };
  s4 -> s6 [0, 65535] { R10058 += 1 };
  s4 -> s4 [0, 65535] { R10058 += 1, R9990 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 69] { R10058 += 1, R9990 += 1, R9946 += 1 };
  s5 -> s6 [0, 65535] { R10058 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R10058 += 1, R9990 += 1 };
  s5 -> s5 [85, 65535] { R10058 += 1, R9990 += 1, R9946 += 1 };
  s6 -> s6 [0, 65535] { R10058 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 68] { R10060 += 1, R9992 += 1, R9948 += 1, R117 += 1 };
  s0 -> s0 [0, 65535] { R10059 += 1, R10060 += 1 };
  s0 -> s2 [0, 65535] { R10060 += 1, R9992 += 1, R9947 += 1, R9948 += 1 };
  s0 -> s3 [0, 65535] { R10060 += 1, R9991 += 1, R9992 += 1 };
  s0 -> s4 [69, 69] { R10060 += 1, R9992 += 1, R9948 += 1, R117 += 1 };
  s0 -> s5 [69, 69] { R10060 += 1, R9992 += 1, R9948 += 1, R117 += 1 };
  s0 -> s1 [70, 65535] { R10060 += 1, R9992 += 1, R9948 += 1, R117 += 1 };
  s1 -> s1 [0, 68] { R10060 += 1, R9992 += 1, R9948 += 1, R117 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R10060 += 1, R9992 += 1 };
  s1 -> s7 [0, 65535] { R10060 += 1 };
  s1 -> s4 [69, 69] { R10060 += 1, R9992 += 1, R9948 += 1, R117 += 1 };
  s1 -> s5 [69, 69] { R10060 += 1, R9992 += 1, R9948 += 1, R117 += 1 };
  s1 -> s1 [70, 65535] { R10060 += 1, R9992 += 1, R9948 += 1, R117 += 1 };
  s2 -> s1 [0, 68] { R10060 += 1, R9992 += 1, R9948 += 1, R117 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R10060 += 1, R9992 += 1, R9947 += 1, R9948 += 1 };
  s2 -> s7 [0, 65535] { R10060 += 1 };
  s2 -> s4 [69, 69] { R10060 += 1, R9992 += 1, R9948 += 1, R117 += 1 };
  s2 -> s5 [69, 69] { R10060 += 1, R9992 += 1, R9948 += 1, R117 += 1 };
  s2 -> s1 [70, 65535] { R10060 += 1, R9992 += 1, R9948 += 1, R117 += 1 };
  s3 -> s1 [0, 68] { R10060 += 1, R9992 += 1, R9948 += 1, R117 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R10060 += 1, R9992 += 1, R9947 += 1, R9948 += 1 };
  s3 -> s3 [0, 65535] { R10060 += 1, R9991 += 1, R9992 += 1 };
  s3 -> s4 [69, 69] { R10060 += 1, R9992 += 1, R9948 += 1, R117 += 1 };
  s3 -> s5 [69, 69] { R10060 += 1, R9992 += 1, R9948 += 1, R117 += 1 };
  s3 -> s1 [70, 65535] { R10060 += 1, R9992 += 1, R9948 += 1, R117 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s8 [0, 65535] { R10060 += 1, R9992 += 1 };
  s4 -> s4 [0, 65535] { R10060 += 1, R9992 += 1, R9948 += 1, R117 += 1 };
  s4 -> s7 [0, 65535] { R10060 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R10060 += 1 };
  s5 -> s5 [0, 65535] { R10060 += 1, R9992 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R10060 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R10060 += 1, R9992 += 1 };
  s8 -> s7 [0, 65535] { R10060 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 68] { R10062 += 1, R9994 += 1, R9950 += 1, R119 += 1 };
  s0 -> s0 [0, 65535] { R10061 += 1, R10062 += 1 };
  s0 -> s2 [0, 65535] { R10062 += 1, R9993 += 1, R9994 += 1 };
  s0 -> s3 [0, 65535] { R10062 += 1, R9994 += 1, R9949 += 1, R9950 += 1 };
  s0 -> s4 [69, 69] { R10062 += 1, R9994 += 1, R9950 += 1, R119 += 1 };
  s0 -> s5 [69, 69] { R10062 += 1, R9994 += 1, R9950 += 1, R119 += 1 };
  s0 -> s1 [70, 65535] { R10062 += 1, R9994 += 1, R9950 += 1, R119 += 1 };
  s1 -> s1 [0, 68] { R10062 += 1, R9994 += 1, R9950 += 1, R119 += 1 };
  s1 -> s6 [0, 65535] { R10062 += 1 };
  s1 -> s1 [0, 65535] { R10062 += 1, R9994 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [69, 69] { R10062 += 1, R9994 += 1, R9950 += 1, R119 += 1 };
  s1 -> s5 [69, 69] { R10062 += 1, R9994 += 1, R9950 += 1, R119 += 1 };
  s1 -> s1 [70, 65535] { R10062 += 1, R9994 += 1, R9950 += 1, R119 += 1 };
  s2 -> s1 [0, 68] { R10062 += 1, R9994 += 1, R9950 += 1, R119 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R10062 += 1, R9993 += 1, R9994 += 1 };
  s2 -> s3 [0, 65535] { R10062 += 1, R9994 += 1, R9949 += 1, R9950 += 1 };
  s2 -> s4 [69, 69] { R10062 += 1, R9994 += 1, R9950 += 1, R119 += 1 };
  s2 -> s5 [69, 69] { R10062 += 1, R9994 += 1, R9950 += 1, R119 += 1 };
  s2 -> s1 [70, 65535] { R10062 += 1, R9994 += 1, R9950 += 1, R119 += 1 };
  s3 -> s1 [0, 68] { R10062 += 1, R9994 += 1, R9950 += 1, R119 += 1 };
  s3 -> s6 [0, 65535] { R10062 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s3 [0, 65535] { R10062 += 1, R9994 += 1, R9949 += 1, R9950 += 1 };
  s3 -> s4 [69, 69] { R10062 += 1, R9994 += 1, R9950 += 1, R119 += 1 };
  s3 -> s5 [69, 69] { R10062 += 1, R9994 += 1, R9950 += 1, R119 += 1 };
  s3 -> s1 [70, 65535] { R10062 += 1, R9994 += 1, R9950 += 1, R119 += 1 };
  s4 -> s4 [0, 65535] { R10062 += 1, R9994 += 1 };
  s4 -> s6 [0, 65535] { R10062 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s6 [0, 65535] { R10062 += 1 };
  s5 -> s7 [0, 65535] { R10062 += 1, R9994 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R10062 += 1, R9994 += 1, R9950 += 1, R119 += 1 };
  s6 -> s6 [0, 65535] { R10062 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s6 [0, 65535] { R10062 += 1 };
  s7 -> s7 [0, 65535] { R10062 += 1, R9994 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 68] { R10064 += 1, R9996 += 1, R9952 += 1, R6401 += 1, R6402 += 1 };
  s0 -> s2 [0, 68] { R10064 += 1, R9996 += 1, R9952 += 1, R6402 += 1 };
  s0 -> s3 [0, 65535] { R10064 += 1, R9996 += 1, R9951 += 1, R9952 += 1 };
  s0 -> s0 [0, 65535] { R10063 += 1, R10064 += 1 };
  s0 -> s4 [0, 65535] { R10064 += 1, R9995 += 1, R9996 += 1 };
  s0 -> s5 [69, 69] { R10064 += 1, R9996 += 1, R9952 += 1, R6402 += 1 };
  s0 -> s6 [69, 69] { R10064 += 1, R9996 += 1, R9952 += 1, R6402 += 1 };
  s0 -> s7 [69, 69] { R10064 += 1, R9996 += 1, R9952 += 1, R6401 += 1, R6402 += 1 };
  s0 -> s8 [69, 69] { R10064 += 1, R9996 += 1, R9952 += 1, R6401 += 1, R6402 += 1 };
  s0 -> s2 [70, 84] { R10064 += 1, R9996 += 1, R9952 += 1, R6402 += 1 };
  s0 -> s1 [70, 65535] { R10064 += 1, R9996 += 1, R9952 += 1, R6401 += 1, R6402 += 1 };
  s0 -> s2 [86, 65535] { R10064 += 1, R9996 += 1, R9952 += 1, R6402 += 1 };
  s1 -> s1 [0, 68] { R10064 += 1, R9996 += 1, R9952 += 1, R6401 += 1, R6402 += 1 };
  s1 -> s2 [0, 68] { R10064 += 1, R9996 += 1, R9952 += 1, R6402 += 1 };
  s1 -> s5 [69, 69] { R10064 += 1, R9996 += 1, R9952 += 1, R6402 += 1 };
  s1 -> s6 [69, 69] { R10064 += 1, R9996 += 1, R9952 += 1, R6402 += 1 };
  s1 -> s7 [69, 69] { R10064 += 1, R9996 += 1, R9952 += 1, R6401 += 1, R6402 += 1 };
  s1 -> s8 [69, 69] { R10064 += 1, R9996 += 1, R9952 += 1, R6401 += 1, R6402 += 1 };
  s1 -> s2 [70, 84] { R10064 += 1, R9996 += 1, R9952 += 1, R6402 += 1 };
  s1 -> s1 [70, 65535] { R10064 += 1, R9996 += 1, R9952 += 1, R6401 += 1, R6402 += 1 };
  s1 -> s2 [86, 65535] { R10064 += 1, R9996 += 1, R9952 += 1, R6402 += 1 };
  s2 -> s2 [0, 68] { R10064 += 1, R9996 += 1, R9952 += 1, R6402 += 1 };
  s2 -> s9 [0, 65535];
  s2 -> s10 [0, 65535] { R10064 += 1 };
  s2 -> s2 [0, 65535] { R10064 += 1, R9996 += 1 };
  s2 -> s5 [69, 69] { R10064 += 1, R9996 += 1, R9952 += 1 };
  s2 -> s6 [69, 69] { R10064 += 1, R9996 += 1, R9952 += 1 };
  s2 -> s2 [70, 84] { R10064 += 1, R9996 += 1, R9952 += 1, R6402 += 1 };
  s2 -> s2 [70, 65535] { R10064 += 1, R9996 += 1, R9952 += 1 };
  s2 -> s2 [86, 65535] { R10064 += 1, R9996 += 1, R9952 += 1, R6402 += 1 };
  s3 -> s1 [0, 68] { R10064 += 1, R9996 += 1, R9952 += 1, R6401 += 1, R6402 += 1 };
  s3 -> s2 [0, 68] { R10064 += 1, R9996 += 1, R9952 += 1, R6402 += 1 };
  s3 -> s3 [0, 65535] { R10064 += 1, R9996 += 1, R9951 += 1, R9952 += 1 };
  s3 -> s5 [69, 69] { R10064 += 1, R9996 += 1, R9952 += 1, R6402 += 1 };
  s3 -> s6 [69, 69] { R10064 += 1, R9996 += 1, R9952 += 1, R6402 += 1 };
  s3 -> s7 [69, 69] { R10064 += 1, R9996 += 1, R9952 += 1, R6401 += 1, R6402 += 1 };
  s3 -> s8 [69, 69] { R10064 += 1, R9996 += 1, R9952 += 1, R6401 += 1, R6402 += 1 };
  s3 -> s2 [70, 84] { R10064 += 1, R9996 += 1, R9952 += 1, R6402 += 1 };
  s3 -> s1 [70, 65535] { R10064 += 1, R9996 += 1, R9952 += 1, R6401 += 1, R6402 += 1 };
  s3 -> s2 [86, 65535] { R10064 += 1, R9996 += 1, R9952 += 1, R6402 += 1 };
  s4 -> s1 [0, 68] { R10064 += 1, R9996 += 1, R9952 += 1, R6401 += 1, R6402 += 1 };
  s4 -> s2 [0, 68] { R10064 += 1, R9996 += 1, R9952 += 1, R6402 += 1 };
  s4 -> s3 [0, 65535] { R10064 += 1, R9996 += 1, R9951 += 1, R9952 += 1 };
  s4 -> s4 [0, 65535] { R10064 += 1, R9995 += 1, R9996 += 1 };
  s4 -> s5 [69, 69] { R10064 += 1, R9996 += 1, R9952 += 1, R6402 += 1 };
  s4 -> s6 [69, 69] { R10064 += 1, R9996 += 1, R9952 += 1, R6402 += 1 };
  s4 -> s7 [69, 69] { R10064 += 1, R9996 += 1, R9952 += 1, R6401 += 1, R6402 += 1 };
  s4 -> s8 [69, 69] { R10064 += 1, R9996 += 1, R9952 += 1, R6401 += 1, R6402 += 1 };
  s4 -> s2 [70, 84] { R10064 += 1, R9996 += 1, R9952 += 1, R6402 += 1 };
  s4 -> s1 [70, 65535] { R10064 += 1, R9996 += 1, R9952 += 1, R6401 += 1, R6402 += 1 };
  s4 -> s2 [86, 65535] { R10064 += 1, R9996 += 1, R9952 += 1, R6402 += 1 };
  s5 -> s5 [0, 84] { R10064 += 1, R9996 += 1, R9952 += 1, R6402 += 1 };
  s5 -> s9 [0, 65535];
  s5 -> s10 [0, 65535] { R10064 += 1 };
  s5 -> s11 [0, 65535] { R10064 += 1, R9996 += 1 };
  s5 -> s5 [0, 65535] { R10064 += 1, R9996 += 1, R9952 += 1 };
  s5 -> s5 [86, 65535] { R10064 += 1, R9996 += 1, R9952 += 1, R6402 += 1 };
  s6 -> s9 [0, 65535];
  s6 -> s10 [0, 65535] { R10064 += 1 };
  s6 -> s6 [0, 65535] { R10064 += 1, R9996 += 1 };
  s8 -> s5 [0, 84] { R10064 += 1, R9996 += 1, R9952 += 1, R6402 += 1 };
  s8 -> s8 [0, 65535] { R10064 += 1, R9996 += 1, R9952 += 1, R6401 += 1, R6402 += 1 };
  s8 -> s5 [86, 65535] { R10064 += 1, R9996 += 1, R9952 += 1, R6402 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R10064 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s10 [0, 65535] { R10064 += 1 };
  s11 -> s11 [0, 65535] { R10064 += 1, R9996 += 1 };
  accepting s5, s2, s9, s6, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 68] { R10066 += 1, R9998 += 1, R9954 += 1, R8497 += 1, R8498 += 1 };
  s0 -> s2 [0, 68] { R10066 += 1, R9998 += 1, R9954 += 1, R8498 += 1, R8499 += 1 };
  s0 -> s3 [0, 65535] { R10066 += 1, R9998 += 1, R9953 += 1, R9954 += 1 };
  s0 -> s4 [0, 65535] { R10066 += 1, R9997 += 1, R9998 += 1 };
  s0 -> s0 [0, 65535] { R10065 += 1, R10066 += 1 };
  s0 -> s5 [69, 69] { R10066 += 1, R9998 += 1, R9954 += 1, R8498 += 1, R8499 += 1 };
  s0 -> s6 [69, 69] { R10066 += 1, R9998 += 1, R9954 += 1, R8497 += 1, R8498 += 1 };
  s0 -> s7 [69, 69] { R10066 += 1, R9998 += 1, R9954 += 1, R8498 += 1, R8499 += 1 };
  s0 -> s8 [69, 69] { R10066 += 1, R9998 += 1, R9954 += 1, R8497 += 1, R8498 += 1 };
  s0 -> s1 [70, 65535] { R10066 += 1, R9998 += 1, R9954 += 1, R8497 += 1, R8498 += 1 };
  s0 -> s2 [70, 65535] { R10066 += 1, R9998 += 1, R9954 += 1, R8498 += 1, R8499 += 1 };
  s1 -> s1 [0, 68] { R10066 += 1, R9998 += 1, R9954 += 1, R8497 += 1, R8498 += 1 };
  s1 -> s2 [0, 68] { R10066 += 1, R9998 += 1, R9954 += 1, R8498 += 1, R8499 += 1 };
  s1 -> s5 [69, 69] { R10066 += 1, R9998 += 1, R9954 += 1, R8498 += 1, R8499 += 1 };
  s1 -> s6 [69, 69] { R10066 += 1, R9998 += 1, R9954 += 1, R8497 += 1, R8498 += 1 };
  s1 -> s7 [69, 69] { R10066 += 1, R9998 += 1, R9954 += 1, R8498 += 1, R8499 += 1 };
  s1 -> s8 [69, 69] { R10066 += 1, R9998 += 1, R9954 += 1, R8497 += 1, R8498 += 1 };
  s1 -> s1 [70, 65535] { R10066 += 1, R9998 += 1, R9954 += 1, R8497 += 1, R8498 += 1 };
  s1 -> s2 [70, 65535] { R10066 += 1, R9998 += 1, R9954 += 1, R8498 += 1, R8499 += 1 };
  s2 -> s2 [0, 68] { R10066 += 1, R9998 += 1, R9954 += 1, R8498 += 1, R8499 += 1 };
  s2 -> s9 [0, 65535] { R10066 += 1 };
  s2 -> s10 [0, 65535];
  s2 -> s2 [0, 65535] { R10066 += 1, R9998 += 1 };
  s2 -> s5 [69, 69] { R10066 += 1, R9998 += 1, R9954 += 1, R8498 += 1, R8499 += 1 };
  s2 -> s7 [69, 69] { R10066 += 1, R9998 += 1, R9954 += 1, R8498 += 1, R8499 += 1 };
  s2 -> s2 [70, 65535] { R10066 += 1, R9998 += 1, R9954 += 1, R8498 += 1, R8499 += 1 };
  s3 -> s1 [0, 68] { R10066 += 1, R9998 += 1, R9954 += 1, R8497 += 1, R8498 += 1 };
  s3 -> s2 [0, 68] { R10066 += 1, R9998 += 1, R9954 += 1, R8498 += 1, R8499 += 1 };
  s3 -> s3 [0, 65535] { R10066 += 1, R9998 += 1, R9953 += 1, R9954 += 1 };
  s3 -> s5 [69, 69] { R10066 += 1, R9998 += 1, R9954 += 1, R8498 += 1, R8499 += 1 };
  s3 -> s6 [69, 69] { R10066 += 1, R9998 += 1, R9954 += 1, R8497 += 1, R8498 += 1 };
  s3 -> s7 [69, 69] { R10066 += 1, R9998 += 1, R9954 += 1, R8498 += 1, R8499 += 1 };
  s3 -> s8 [69, 69] { R10066 += 1, R9998 += 1, R9954 += 1, R8497 += 1, R8498 += 1 };
  s3 -> s1 [70, 65535] { R10066 += 1, R9998 += 1, R9954 += 1, R8497 += 1, R8498 += 1 };
  s3 -> s2 [70, 65535] { R10066 += 1, R9998 += 1, R9954 += 1, R8498 += 1, R8499 += 1 };
  s4 -> s1 [0, 68] { R10066 += 1, R9998 += 1, R9954 += 1, R8497 += 1, R8498 += 1 };
  s4 -> s2 [0, 68] { R10066 += 1, R9998 += 1, R9954 += 1, R8498 += 1, R8499 += 1 };
  s4 -> s3 [0, 65535] { R10066 += 1, R9998 += 1, R9953 += 1, R9954 += 1 };
  s4 -> s4 [0, 65535] { R10066 += 1, R9997 += 1, R9998 += 1 };
  s4 -> s5 [69, 69] { R10066 += 1, R9998 += 1, R9954 += 1, R8498 += 1, R8499 += 1 };
  s4 -> s6 [69, 69] { R10066 += 1, R9998 += 1, R9954 += 1, R8497 += 1, R8498 += 1 };
  s4 -> s7 [69, 69] { R10066 += 1, R9998 += 1, R9954 += 1, R8498 += 1, R8499 += 1 };
  s4 -> s8 [69, 69] { R10066 += 1, R9998 += 1, R9954 += 1, R8497 += 1, R8498 += 1 };
  s4 -> s1 [70, 65535] { R10066 += 1, R9998 += 1, R9954 += 1, R8497 += 1, R8498 += 1 };
  s4 -> s2 [70, 65535] { R10066 += 1, R9998 += 1, R9954 += 1, R8498 += 1, R8499 += 1 };
  s5 -> s5 [0, 65535] { R10066 += 1, R9998 += 1, R9954 += 1, R8498 += 1, R8499 += 1 };
  s5 -> s11 [0, 65535] { R10066 += 1, R9998 += 1 };
  s5 -> s9 [0, 65535] { R10066 += 1 };
  s5 -> s10 [0, 65535];
  s6 -> s5 [0, 65535] { R10066 += 1, R9998 += 1, R9954 += 1, R8498 += 1, R8499 += 1 };
  s6 -> s6 [0, 65535] { R10066 += 1, R9998 += 1, R9954 += 1, R8497 += 1, R8498 += 1 };
  s7 -> s9 [0, 65535] { R10066 += 1 };
  s7 -> s7 [0, 65535] { R10066 += 1, R9998 += 1 };
  s7 -> s10 [0, 65535];
  s9 -> s9 [0, 65535] { R10066 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R10066 += 1, R9998 += 1 };
  s11 -> s9 [0, 65535] { R10066 += 1 };
  s11 -> s10 [0, 65535];
  accepting s5, s2, s9, s7, s10, s11;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 68] { R10068 += 1, R10000 += 1, R9956 += 1, R8504 += 1 };
  s0 -> s0 [0, 65535] { R10067 += 1, R10068 += 1 };
  s0 -> s2 [0, 65535] { R10068 += 1, R9999 += 1, R10000 += 1 };
  s0 -> s3 [0, 65535] { R10068 += 1, R10000 += 1, R9955 += 1, R9956 += 1 };
  s0 -> s4 [69, 69] { R10068 += 1, R10000 += 1, R9956 += 1 };
  s0 -> s5 [69, 69] { R10068 += 1, R10000 += 1, R9956 += 1 };
  s0 -> s1 [70, 85] { R10068 += 1, R10000 += 1, R9956 += 1, R8504 += 1 };
  s0 -> s1 [70, 65535] { R10068 += 1, R10000 += 1, R9956 += 1 };
  s0 -> s1 [89, 65535] { R10068 += 1, R10000 += 1, R9956 += 1, R8504 += 1 };
  s1 -> s1 [0, 68] { R10068 += 1, R10000 += 1, R9956 += 1, R8504 += 1 };
  s1 -> s1 [0, 65535] { R10068 += 1, R10000 += 1 };
  s1 -> s6 [0, 65535] { R10068 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [69, 69] { R10068 += 1, R10000 += 1, R9956 += 1 };
  s1 -> s5 [69, 69] { R10068 += 1, R10000 += 1, R9956 += 1 };
  s1 -> s1 [70, 85] { R10068 += 1, R10000 += 1, R9956 += 1, R8504 += 1 };
  s1 -> s1 [70, 65535] { R10068 += 1, R10000 += 1, R9956 += 1 };
  s1 -> s1 [89, 65535] { R10068 += 1, R10000 += 1, R9956 += 1, R8504 += 1 };
  s2 -> s1 [0, 68] { R10068 += 1, R10000 += 1, R9956 += 1, R8504 += 1 };
  s2 -> s2 [0, 65535] { R10068 += 1, R9999 += 1, R10000 += 1 };
  s2 -> s3 [0, 65535] { R10068 += 1, R10000 += 1, R9955 += 1, R9956 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [69, 69] { R10068 += 1, R10000 += 1, R9956 += 1 };
  s2 -> s5 [69, 69] { R10068 += 1, R10000 += 1, R9956 += 1 };
  s2 -> s1 [70, 85] { R10068 += 1, R10000 += 1, R9956 += 1, R8504 += 1 };
  s2 -> s1 [70, 65535] { R10068 += 1, R10000 += 1, R9956 += 1 };
  s2 -> s1 [89, 65535] { R10068 += 1, R10000 += 1, R9956 += 1, R8504 += 1 };
  s3 -> s1 [0, 68] { R10068 += 1, R10000 += 1, R9956 += 1, R8504 += 1 };
  s3 -> s6 [0, 65535] { R10068 += 1 };
  s3 -> s3 [0, 65535] { R10068 += 1, R10000 += 1, R9955 += 1, R9956 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [69, 69] { R10068 += 1, R10000 += 1, R9956 += 1 };
  s3 -> s5 [69, 69] { R10068 += 1, R10000 += 1, R9956 += 1 };
  s3 -> s1 [70, 85] { R10068 += 1, R10000 += 1, R9956 += 1, R8504 += 1 };
  s3 -> s1 [70, 65535] { R10068 += 1, R10000 += 1, R9956 += 1 };
  s3 -> s1 [89, 65535] { R10068 += 1, R10000 += 1, R9956 += 1, R8504 += 1 };
  s4 -> s4 [0, 85] { R10068 += 1, R10000 += 1, R9956 += 1, R8504 += 1 };
  s4 -> s8 [0, 65535] { R10068 += 1, R10000 += 1 };
  s4 -> s4 [0, 65535] { R10068 += 1, R10000 += 1, R9956 += 1 };
  s4 -> s6 [0, 65535] { R10068 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [89, 65535] { R10068 += 1, R10000 += 1, R9956 += 1, R8504 += 1 };
  s5 -> s6 [0, 65535] { R10068 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R10068 += 1, R10000 += 1 };
  s6 -> s6 [0, 65535] { R10068 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R10068 += 1, R10000 += 1 };
  s8 -> s6 [0, 65535] { R10068 += 1 };
  s8 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 68] { R10070 += 1, R10002 += 1, R9958 += 1, R9896 += 1, R9897 += 1 };
  s0 -> s2 [0, 68] { R10070 += 1, R10002 += 1, R9958 += 1, R9895 += 1, R9896 += 1 };
  s0 -> s3 [0, 65535] { R10070 += 1, R10002 += 1, R9957 += 1, R9958 += 1 };
  s0 -> s0 [0, 65535] { R10069 += 1, R10070 += 1 };
  s0 -> s4 [0, 65535] { R10070 += 1, R10001 += 1, R10002 += 1 };
  s0 -> s5 [69, 69] { R10070 += 1, R10002 += 1, R9958 += 1, R9896 += 1, R9897 += 1 };
  s0 -> s6 [69, 69] { R10070 += 1, R10002 += 1, R9958 += 1, R9895 += 1, R9896 += 1 };
  s0 -> s7 [69, 69] { R10070 += 1, R10002 += 1, R9958 += 1, R9896 += 1, R9897 += 1 };
  s0 -> s8 [69, 69] { R10070 += 1, R10002 += 1, R9958 += 1, R9895 += 1, R9896 += 1 };
  s0 -> s1 [70, 65535] { R10070 += 1, R10002 += 1, R9958 += 1, R9896 += 1, R9897 += 1 };
  s0 -> s2 [70, 65535] { R10070 += 1, R10002 += 1, R9958 += 1, R9895 += 1, R9896 += 1 };
  s1 -> s1 [0, 68] { R10070 += 1, R10002 += 1, R9958 += 1, R9896 += 1, R9897 += 1 };
  s1 -> s13 [0, 68] { R10070 += 1, R10002 += 1, R9958 += 1 };
  s1 -> s5 [69, 69] { R10070 += 1, R10002 += 1, R9958 += 1, R9896 += 1, R9897 += 1 };
  s1 -> s9 [69, 69] { R10070 += 1, R10002 += 1, R9958 += 1 };
  s1 -> s7 [69, 69] { R10070 += 1, R10002 += 1, R9958 += 1, R9896 += 1, R9897 += 1 };
  s1 -> s14 [69, 69] { R10070 += 1, R10002 += 1, R9958 += 1 };
  s1 -> s1 [70, 65535] { R10070 += 1, R10002 += 1, R9958 += 1, R9896 += 1, R9897 += 1 };
  s1 -> s13 [70, 65535] { R10070 += 1, R10002 += 1, R9958 += 1 };
  s2 -> s1 [0, 68] { R10070 += 1, R10002 += 1, R9958 += 1, R9896 += 1, R9897 += 1 };
  s2 -> s2 [0, 68] { R10070 += 1, R10002 += 1, R9958 += 1, R9895 += 1, R9896 += 1 };
  s2 -> s5 [69, 69] { R10070 += 1, R10002 += 1, R9958 += 1, R9896 += 1, R9897 += 1 };
  s2 -> s6 [69, 69] { R10070 += 1, R10002 += 1, R9958 += 1, R9895 += 1, R9896 += 1 };
  s2 -> s7 [69, 69] { R10070 += 1, R10002 += 1, R9958 += 1, R9896 += 1, R9897 += 1 };
  s2 -> s8 [69, 69] { R10070 += 1, R10002 += 1, R9958 += 1, R9895 += 1, R9896 += 1 };
  s2 -> s1 [70, 65535] { R10070 += 1, R10002 += 1, R9958 += 1, R9896 += 1, R9897 += 1 };
  s2 -> s2 [70, 65535] { R10070 += 1, R10002 += 1, R9958 += 1, R9895 += 1, R9896 += 1 };
  s3 -> s1 [0, 68] { R10070 += 1, R10002 += 1, R9958 += 1, R9896 += 1, R9897 += 1 };
  s3 -> s2 [0, 68] { R10070 += 1, R10002 += 1, R9958 += 1, R9895 += 1, R9896 += 1 };
  s3 -> s3 [0, 65535] { R10070 += 1, R10002 += 1, R9957 += 1, R9958 += 1 };
  s3 -> s5 [69, 69] { R10070 += 1, R10002 += 1, R9958 += 1, R9896 += 1, R9897 += 1 };
  s3 -> s6 [69, 69] { R10070 += 1, R10002 += 1, R9958 += 1, R9895 += 1, R9896 += 1 };
  s3 -> s7 [69, 69] { R10070 += 1, R10002 += 1, R9958 += 1, R9896 += 1, R9897 += 1 };
  s3 -> s8 [69, 69] { R10070 += 1, R10002 += 1, R9958 += 1, R9895 += 1, R9896 += 1 };
  s3 -> s1 [70, 65535] { R10070 += 1, R10002 += 1, R9958 += 1, R9896 += 1, R9897 += 1 };
  s3 -> s2 [70, 65535] { R10070 += 1, R10002 += 1, R9958 += 1, R9895 += 1, R9896 += 1 };
  s4 -> s1 [0, 68] { R10070 += 1, R10002 += 1, R9958 += 1, R9896 += 1, R9897 += 1 };
  s4 -> s2 [0, 68] { R10070 += 1, R10002 += 1, R9958 += 1, R9895 += 1, R9896 += 1 };
  s4 -> s3 [0, 65535] { R10070 += 1, R10002 += 1, R9957 += 1, R9958 += 1 };
  s4 -> s4 [0, 65535] { R10070 += 1, R10001 += 1, R10002 += 1 };
  s4 -> s5 [69, 69] { R10070 += 1, R10002 += 1, R9958 += 1, R9896 += 1, R9897 += 1 };
  s4 -> s6 [69, 69] { R10070 += 1, R10002 += 1, R9958 += 1, R9895 += 1, R9896 += 1 };
  s4 -> s7 [69, 69] { R10070 += 1, R10002 += 1, R9958 += 1, R9896 += 1, R9897 += 1 };
  s4 -> s8 [69, 69] { R10070 += 1, R10002 += 1, R9958 += 1, R9895 += 1, R9896 += 1 };
  s4 -> s1 [70, 65535] { R10070 += 1, R10002 += 1, R9958 += 1, R9896 += 1, R9897 += 1 };
  s4 -> s2 [70, 65535] { R10070 += 1, R10002 += 1, R9958 += 1, R9895 += 1, R9896 += 1 };
  s5 -> s5 [0, 65535] { R10070 += 1, R10002 += 1, R9958 += 1, R9896 += 1, R9897 += 1 };
  s5 -> s9 [0, 65535] { R10070 += 1, R10002 += 1, R9958 += 1 };
  s8 -> s5 [0, 65535] { R10070 += 1, R10002 += 1, R9958 += 1, R9896 += 1, R9897 += 1 };
  s8 -> s8 [0, 65535] { R10070 += 1, R10002 += 1, R9958 += 1, R9895 += 1, R9896 += 1 };
  s9 -> s9 [0, 65535] { R10070 += 1, R10002 += 1, R9958 += 1 };
  s9 -> s10 [0, 65535] { R10070 += 1, R10002 += 1 };
  s9 -> s11 [0, 65535] { R10070 += 1 };
  s9 -> s12 [0, 65535];
  s10 -> s10 [0, 65535] { R10070 += 1, R10002 += 1 };
  s10 -> s11 [0, 65535] { R10070 += 1 };
  s10 -> s12 [0, 65535];
  s11 -> s11 [0, 65535] { R10070 += 1 };
  s11 -> s12 [0, 65535];
  s12 -> s12 [0, 65535];
  s13 -> s13 [0, 68] { R10070 += 1, R10002 += 1, R9958 += 1 };
  s13 -> s13 [0, 65535] { R10070 += 1, R10002 += 1 };
  s13 -> s11 [0, 65535] { R10070 += 1 };
  s13 -> s12 [0, 65535];
  s13 -> s9 [69, 69] { R10070 += 1, R10002 += 1, R9958 += 1 };
  s13 -> s14 [69, 69] { R10070 += 1, R10002 += 1, R9958 += 1 };
  s13 -> s13 [70, 65535] { R10070 += 1, R10002 += 1, R9958 += 1 };
  s14 -> s11 [0, 65535] { R10070 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R10070 += 1, R10002 += 1 };
  accepting s12, s13, s9, s14, s10, s11;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 68] { R10072 += 1, R10004 += 1, R9960 += 1, R9901 += 1, R9902 += 1 };
  s0 -> s2 [0, 65535] { R10072 += 1, R10003 += 1, R10004 += 1 };
  s0 -> s0 [0, 65535] { R10071 += 1, R10072 += 1 };
  s0 -> s3 [0, 65535] { R10072 += 1, R10004 += 1, R9959 += 1, R9960 += 1 };
  s0 -> s4 [69, 69] { R10072 += 1, R10004 += 1, R9960 += 1, R9901 += 1, R9902 += 1 };
  s0 -> s5 [69, 69] { R10072 += 1, R10004 += 1, R9960 += 1, R9901 += 1, R9902 += 1 };
  s0 -> s1 [70, 65535] { R10072 += 1, R10004 += 1, R9960 += 1, R9901 += 1, R9902 += 1 };
  s1 -> s1 [0, 68] { R10072 += 1, R10004 += 1, R9960 += 1, R9901 += 1, R9902 += 1 };
  s1 -> s6 [0, 65535] { R10072 += 1 };
  s1 -> s1 [0, 65535] { R10072 += 1, R10004 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [69, 69] { R10072 += 1, R10004 += 1, R9960 += 1, R9901 += 1, R9902 += 1 };
  s1 -> s5 [69, 69] { R10072 += 1, R10004 += 1, R9960 += 1, R9901 += 1, R9902 += 1 };
  s1 -> s1 [70, 65535] { R10072 += 1, R10004 += 1, R9960 += 1, R9901 += 1, R9902 += 1 };
  s2 -> s1 [0, 68] { R10072 += 1, R10004 += 1, R9960 += 1, R9901 += 1, R9902 += 1 };
  s2 -> s2 [0, 65535] { R10072 += 1, R10003 += 1, R10004 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s3 [0, 65535] { R10072 += 1, R10004 += 1, R9959 += 1, R9960 += 1 };
  s2 -> s4 [69, 69] { R10072 += 1, R10004 += 1, R9960 += 1, R9901 += 1, R9902 += 1 };
  s2 -> s5 [69, 69] { R10072 += 1, R10004 += 1, R9960 += 1, R9901 += 1, R9902 += 1 };
  s2 -> s1 [70, 65535] { R10072 += 1, R10004 += 1, R9960 += 1, R9901 += 1, R9902 += 1 };
  s3 -> s1 [0, 68] { R10072 += 1, R10004 += 1, R9960 += 1, R9901 += 1, R9902 += 1 };
  s3 -> s6 [0, 65535] { R10072 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R10072 += 1, R10004 += 1, R9959 += 1, R9960 += 1 };
  s3 -> s4 [69, 69] { R10072 += 1, R10004 += 1, R9960 += 1, R9901 += 1, R9902 += 1 };
  s3 -> s5 [69, 69] { R10072 += 1, R10004 += 1, R9960 += 1, R9901 += 1, R9902 += 1 };
  s3 -> s1 [70, 65535] { R10072 += 1, R10004 += 1, R9960 += 1, R9901 += 1, R9902 += 1 };
  s4 -> s6 [0, 65535] { R10072 += 1 };
  s4 -> s4 [0, 65535] { R10072 += 1, R10004 += 1, R9960 += 1, R9901 += 1, R9902 += 1 };
  s4 -> s8 [0, 65535] { R10072 += 1, R10004 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s6 [0, 65535] { R10072 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R10072 += 1, R10004 += 1 };
  s6 -> s6 [0, 65535] { R10072 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R10072 += 1 };
  s8 -> s8 [0, 65535] { R10072 += 1, R10004 += 1 };
  s8 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
};
synchronised {  // Automata constraining P68
automaton P68_0 {
  init s0;
  s0 -> s1 [117, 117];
  accepting s1;
};
};
synchronised {  // Automata constraining P10
automaton P10_0 {
  init s0;
  s0 -> s1 [101, 101];
  accepting s1;
};
};
