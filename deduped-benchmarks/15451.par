// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R11522, R11523, R11524, R11525, R12, R15342, R15343, R15344, R15345, R15346, R15347, R15348, R15349, R15350, R15351, R15774, R15775, R15776, R15777, R15778, R15779, R15884, R15885, R15886, R15887, R15888, R15889, R15890, R15891, R15892, R15893, R15894, R15895, R15896, R15897, R15898, R15899, R15900, R15901, R15902, R15903, R15904, R15905, R15906, R15907, R15908, R15909, R15910, R15911, R15912, R15913, R15914, R15915, R15916, R15917, R15918, R15919, R15920, R15921, R15922, R15923, R15924, R15925, R15926, R15927, R15928, R15929, R15930, R15931, R15932, R15933, R15934, R15935, R15936, R15937, R15938, R15939, R15940, R15941, R15942, R15943, R15944, R15945, R15946, R15947, R15948, R15949, R15950, R15951, R15952, R15953, R15954, R15955, R15956, R15957, R15958, R15959, R15960, R15961, R15962, R15963, R15964, R15965, R15966, R15967, R15968, R15969, R15970, R15971, R15972, R15973, R15974, R15975, R15976, R15977, R15978, R15979, R15980, R15981, R15982, R15983, R15984, R15985, R15986, R15987, R17, R18, R19, R2, R20, R21, R22, R23, R24, R25, R26, R27, R3, R38, R4, R40, R42, R43, R46, R47, R48, R52, R53, R56, R57, R58, R62, R63, R66, R67, R68, R69, R8;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [81, 81];
  s0 -> s0 [82, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [81, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R2 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R11 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 80];
  s0 -> s0 [0, 65535] { R12 += 1 };
  s0 -> s2 [81, 81];
  s0 -> s1 [82, 65535];
  s1 -> s1 [0, 80];
  s1 -> s2 [81, 81];
  s1 -> s1 [82, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R21 += 1 };
  s0 -> s0 [0, 65535] { R20 += 1, R21 += 1 };
  s0 -> s2 [9, 13] { R21 += 1 };
  s0 -> s1 [14, 31] { R21 += 1 };
  s0 -> s2 [32, 32] { R21 += 1 };
  s0 -> s1 [33, 65535] { R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R21 += 1 };
  s2 -> s1 [0, 65535] { R21 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R22 += 1, R23 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R25 += 1 };
  s0 -> s0 [0, 65535] { R24 += 1, R25 += 1 };
  s0 -> s2 [9, 13] { R25 += 1 };
  s0 -> s1 [14, 31] { R25 += 1 };
  s0 -> s2 [32, 32] { R25 += 1 };
  s0 -> s1 [33, 65535] { R25 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R25 += 1 };
  s2 -> s1 [0, 65535] { R25 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R26 += 1, R27 += 1 };
  s0 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s1 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R15909 += 1, R19 += 1 };
  s0 -> s0 [0, 65535] { R15908 += 1, R15909 += 1 };
  s1 -> s1 [0, 65535] { R15909 += 1, R19 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 80] { R15911 += 1 };
  s0 -> s0 [0, 65535] { R15910 += 1, R15911 += 1 };
  s0 -> s2 [81, 81] { R15911 += 1 };
  s0 -> s3 [81, 81] { R15911 += 1 };
  s0 -> s1 [83, 65535] { R15911 += 1 };
  s1 -> s1 [0, 80] { R15911 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [81, 81] { R15911 += 1 };
  s1 -> s3 [81, 81] { R15911 += 1 };
  s1 -> s1 [83, 65535] { R15911 += 1 };
  s2 -> s2 [0, 81] { R15911 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [83, 65535] { R15911 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 80] { R15913 += 1, R38 += 1 };
  s0 -> s0 [0, 65535] { R15912 += 1, R15913 += 1 };
  s0 -> s2 [81, 81] { R15913 += 1, R38 += 1 };
  s0 -> s3 [81, 81] { R15913 += 1, R38 += 1 };
  s0 -> s1 [82, 65535] { R15913 += 1, R38 += 1 };
  s1 -> s1 [0, 80] { R15913 += 1, R38 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [81, 81] { R15913 += 1, R38 += 1 };
  s1 -> s3 [81, 81] { R15913 += 1, R38 += 1 };
  s1 -> s1 [82, 65535] { R15913 += 1, R38 += 1 };
  s2 -> s2 [0, 65535] { R15913 += 1, R38 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 80] { R15915 += 1, R40 += 1 };
  s0 -> s0 [0, 65535] { R15914 += 1, R15915 += 1 };
  s0 -> s2 [81, 81] { R15915 += 1, R40 += 1 };
  s0 -> s3 [81, 81] { R15915 += 1, R40 += 1 };
  s0 -> s1 [82, 65535] { R15915 += 1, R40 += 1 };
  s1 -> s1 [0, 80] { R15915 += 1, R40 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [81, 81] { R15915 += 1, R40 += 1 };
  s1 -> s3 [81, 81] { R15915 += 1, R40 += 1 };
  s1 -> s1 [82, 65535] { R15915 += 1, R40 += 1 };
  s2 -> s2 [0, 65535] { R15915 += 1, R40 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 80] { R15917 += 1, R42 += 1, R43 += 1 };
  s0 -> s0 [0, 65535] { R15916 += 1, R15917 += 1 };
  s0 -> s2 [81, 81] { R15917 += 1, R42 += 1, R43 += 1 };
  s0 -> s3 [81, 81] { R15917 += 1, R42 += 1, R43 += 1 };
  s0 -> s1 [82, 65535] { R15917 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 80] { R15917 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [81, 81] { R15917 += 1, R42 += 1, R43 += 1 };
  s1 -> s3 [81, 81] { R15917 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [82, 65535] { R15917 += 1, R42 += 1, R43 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R15917 += 1, R42 += 1, R43 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 80] { R15919 += 1, R46 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R15918 += 1, R15919 += 1 };
  s0 -> s2 [81, 81] { R15919 += 1, R46 += 1, R47 += 1 };
  s0 -> s3 [81, 81] { R15919 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [82, 65535] { R15919 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 80] { R15919 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [81, 81] { R15919 += 1, R46 += 1, R47 += 1 };
  s1 -> s3 [81, 81] { R15919 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [82, 65535] { R15919 += 1, R46 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R15919 += 1, R46 += 1, R47 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 80] { R15921 += 1, R52 += 1, R53 += 1 };
  s0 -> s0 [0, 65535] { R15920 += 1, R15921 += 1 };
  s0 -> s2 [81, 81] { R15921 += 1, R52 += 1, R53 += 1 };
  s0 -> s3 [81, 81] { R15921 += 1, R52 += 1, R53 += 1 };
  s0 -> s1 [82, 65535] { R15921 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 80] { R15921 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [81, 81] { R15921 += 1, R52 += 1, R53 += 1 };
  s1 -> s3 [81, 81] { R15921 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [82, 65535] { R15921 += 1, R52 += 1, R53 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R15921 += 1, R52 += 1, R53 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 80] { R15923 += 1, R56 += 1, R57 += 1 };
  s0 -> s0 [0, 65535] { R15922 += 1, R15923 += 1 };
  s0 -> s2 [81, 81] { R15923 += 1, R56 += 1, R57 += 1 };
  s0 -> s3 [81, 81] { R15923 += 1, R56 += 1, R57 += 1 };
  s0 -> s1 [82, 65535] { R15923 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 80] { R15923 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [81, 81] { R15923 += 1, R56 += 1, R57 += 1 };
  s1 -> s3 [81, 81] { R15923 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [82, 65535] { R15923 += 1, R56 += 1, R57 += 1 };
  s2 -> s2 [0, 65535] { R15923 += 1, R56 += 1, R57 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 80] { R15925 += 1, R62 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R15924 += 1, R15925 += 1 };
  s0 -> s2 [81, 81] { R15925 += 1, R62 += 1, R63 += 1 };
  s0 -> s3 [81, 81] { R15925 += 1, R62 += 1, R63 += 1 };
  s0 -> s1 [82, 65535] { R15925 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 80] { R15925 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [81, 81] { R15925 += 1, R62 += 1, R63 += 1 };
  s1 -> s3 [81, 81] { R15925 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [82, 65535] { R15925 += 1, R62 += 1, R63 += 1 };
  s2 -> s2 [0, 65535] { R15925 += 1, R62 += 1, R63 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 80] { R15945 += 1 };
  s0 -> s0 [0, 65535] { R15944 += 1, R15945 += 1 };
  s0 -> s2 [81, 81] { R15945 += 1 };
  s0 -> s1 [82, 65535] { R15945 += 1 };
  s1 -> s1 [0, 80] { R15945 += 1 };
  s1 -> s2 [81, 81] { R15945 += 1 };
  s1 -> s1 [82, 65535] { R15945 += 1 };
  s2 -> s2 [0, 65535] { R15945 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R15946 += 1, R15947 += 1 };
  s0 -> s1 [0, 65535] { R15947 += 1, R1 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R15947 += 1, R1 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 80] { R15949 += 1 };
  s0 -> s2 [0, 65535] { R15949 += 1, R8 += 1 };
  s0 -> s0 [0, 65535] { R15948 += 1, R15949 += 1 };
  s0 -> s3 [81, 81] { R15949 += 1 };
  s0 -> s1 [82, 65535] { R15949 += 1 };
  s1 -> s1 [0, 80] { R15949 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [81, 81] { R15949 += 1 };
  s1 -> s1 [82, 65535] { R15949 += 1 };
  s2 -> s1 [0, 80] { R15949 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R15949 += 1, R8 += 1 };
  s2 -> s3 [81, 81] { R15949 += 1 };
  s2 -> s1 [82, 65535] { R15949 += 1 };
  s3 -> s3 [0, 65535] { R15949 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 80] { R15951 += 1, R15889 += 1 };
  s0 -> s2 [0, 65535] { R15951 += 1, R15888 += 1, R15889 += 1 };
  s0 -> s0 [0, 65535] { R15950 += 1, R15951 += 1 };
  s0 -> s1 [82, 65535] { R15951 += 1, R15889 += 1 };
  s1 -> s1 [0, 80] { R15951 += 1, R15889 += 1 };
  s1 -> s1 [0, 65535] { R15951 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [82, 65535] { R15951 += 1, R15889 += 1 };
  s2 -> s1 [0, 80] { R15951 += 1, R15889 += 1 };
  s2 -> s2 [0, 65535] { R15951 += 1, R15888 += 1, R15889 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [82, 65535] { R15951 += 1, R15889 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R15953 += 1, R15890 += 1, R15891 += 1 };
  s0 -> s0 [0, 65535] { R15952 += 1, R15953 += 1 };
  s0 -> s2 [0, 65535] { R15953 += 1, R15891 += 1, R17 += 1 };
  s1 -> s1 [0, 65535] { R15953 += 1, R15890 += 1, R15891 += 1 };
  s1 -> s2 [0, 65535] { R15953 += 1, R15891 += 1, R17 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R15953 += 1 };
  s2 -> s2 [0, 65535] { R15953 += 1, R15891 += 1, R17 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R15953 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 65535] { R15955 += 1, R15893 += 1 };
  s0 -> s0 [0, 65535] { R15954 += 1, R15955 += 1 };
  s0 -> s2 [0, 65535] { R15955 += 1, R15892 += 1, R15893 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R15955 += 1 };
  s1 -> s1 [0, 65535] { R15955 += 1, R15893 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R15955 += 1, R15893 += 1 };
  s2 -> s2 [0, 65535] { R15955 += 1, R15892 += 1, R15893 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R15955 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R15957 += 1, R15895 += 1, R67 += 1 };
  s0 -> s2 [0, 65535] { R15957 += 1, R15894 += 1, R15895 += 1 };
  s0 -> s0 [0, 65535] { R15956 += 1, R15957 += 1 };
  s1 -> s1 [0, 65535] { R15957 += 1, R15895 += 1, R67 += 1 };
  s1 -> s4 [0, 65535] { R15957 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R15957 += 1, R15895 += 1, R67 += 1 };
  s2 -> s2 [0, 65535] { R15957 += 1, R15894 += 1, R15895 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R15957 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 81] { R15959 += 1, R15897 += 1 };
  s0 -> s2 [0, 65535] { R15959 += 1, R15896 += 1, R15897 += 1 };
  s0 -> s0 [0, 65535] { R15958 += 1, R15959 += 1 };
  s0 -> s3 [0, 65535] { R15959 += 1, R15897 += 1, R69 += 1 };
  s0 -> s1 [83, 65535] { R15959 += 1, R15897 += 1 };
  s1 -> s1 [0, 81] { R15959 += 1, R15897 += 1 };
  s1 -> s1 [0, 65535] { R15959 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [83, 65535] { R15959 += 1, R15897 += 1 };
  s2 -> s1 [0, 81] { R15959 += 1, R15897 += 1 };
  s2 -> s2 [0, 65535] { R15959 += 1, R15896 += 1, R15897 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R15959 += 1, R15897 += 1, R69 += 1 };
  s2 -> s1 [83, 65535] { R15959 += 1, R15897 += 1 };
  s3 -> s1 [0, 81] { R15959 += 1, R15897 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R15959 += 1 };
  s3 -> s3 [0, 65535] { R15959 += 1, R15897 += 1, R69 += 1 };
  s3 -> s1 [83, 65535] { R15959 += 1, R15897 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R15959 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 81] { R15961 += 1, R15899 += 1, R11525 += 1 };
  s0 -> s0 [0, 65535] { R15960 += 1, R15961 += 1 };
  s0 -> s1 [0, 65535] { R15961 += 1, R15899 += 1 };
  s0 -> s2 [0, 65535] { R15961 += 1, R15898 += 1, R15899 += 1 };
  s0 -> s1 [83, 65535] { R15961 += 1, R15899 += 1, R11525 += 1 };
  s1 -> s1 [0, 81] { R15961 += 1, R15899 += 1, R11525 += 1 };
  s1 -> s1 [0, 65535] { R15961 += 1, R15899 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R15961 += 1 };
  s1 -> s1 [83, 65535] { R15961 += 1, R15899 += 1, R11525 += 1 };
  s2 -> s1 [0, 81] { R15961 += 1, R15899 += 1, R11525 += 1 };
  s2 -> s1 [0, 65535] { R15961 += 1, R15899 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R15961 += 1, R15898 += 1, R15899 += 1 };
  s2 -> s1 [83, 65535] { R15961 += 1, R15899 += 1, R11525 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R15961 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R15962 += 1, R15963 += 1 };
  s0 -> s1 [0, 65535] { R15963 += 1, R15900 += 1, R15901 += 1 };
  s0 -> s2 [0, 65535] { R15963 += 1, R15901 += 1, R15346 += 1, R15347 += 1 };
  s0 -> s3 [0, 65535] { R15963 += 1, R15901 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R15963 += 1, R15900 += 1, R15901 += 1 };
  s1 -> s2 [0, 65535] { R15963 += 1, R15901 += 1, R15346 += 1, R15347 += 1 };
  s1 -> s3 [0, 65535] { R15963 += 1, R15901 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R15963 += 1 };
  s2 -> s2 [0, 65535] { R15963 += 1, R15901 += 1, R15346 += 1, R15347 += 1 };
  s2 -> s3 [0, 65535] { R15963 += 1, R15901 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R15963 += 1 };
  s3 -> s3 [0, 65535] { R15963 += 1, R15901 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R15963 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 82] { R15965 += 1, R15903 += 1, R15351 += 1 };
  s0 -> s2 [0, 65535] { R15965 += 1, R15902 += 1, R15903 += 1 };
  s0 -> s1 [0, 65535] { R15965 += 1, R15903 += 1 };
  s0 -> s0 [0, 65535] { R15964 += 1, R15965 += 1 };
  s0 -> s1 [84, 65535] { R15965 += 1, R15903 += 1, R15351 += 1 };
  s1 -> s1 [0, 82] { R15965 += 1, R15903 += 1, R15351 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R15965 += 1, R15903 += 1 };
  s1 -> s4 [0, 65535] { R15965 += 1 };
  s1 -> s1 [84, 65535] { R15965 += 1, R15903 += 1, R15351 += 1 };
  s2 -> s1 [0, 82] { R15965 += 1, R15903 += 1, R15351 += 1 };
  s2 -> s2 [0, 65535] { R15965 += 1, R15902 += 1, R15903 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R15965 += 1, R15903 += 1 };
  s2 -> s1 [84, 65535] { R15965 += 1, R15903 += 1, R15351 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R15965 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R15967 += 1, R15904 += 1, R15905 += 1 };
  s0 -> s2 [0, 65535] { R15967 += 1, R15905 += 1 };
  s0 -> s3 [0, 65535] { R15967 += 1, R15905 += 1, R15778 += 1, R15779 += 1 };
  s0 -> s0 [0, 65535] { R15966 += 1, R15967 += 1 };
  s1 -> s1 [0, 65535] { R15967 += 1, R15904 += 1, R15905 += 1 };
  s1 -> s2 [0, 65535] { R15967 += 1, R15905 += 1 };
  s1 -> s3 [0, 65535] { R15967 += 1, R15905 += 1, R15778 += 1, R15779 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R15967 += 1, R15905 += 1 };
  s2 -> s4 [0, 65535] { R15967 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R15967 += 1, R15905 += 1 };
  s3 -> s3 [0, 65535] { R15967 += 1, R15905 += 1, R15778 += 1, R15779 += 1 };
  s3 -> s4 [0, 65535] { R15967 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R15967 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 81] { R15969 += 1, R15907 += 1, R15887 += 1 };
  s0 -> s0 [0, 65535] { R15968 += 1, R15969 += 1 };
  s0 -> s2 [0, 65535] { R15969 += 1, R15906 += 1, R15907 += 1 };
  s0 -> s1 [0, 65535] { R15969 += 1, R15907 += 1 };
  s0 -> s3 [82, 82] { R15969 += 1, R15907 += 1, R15887 += 1 };
  s0 -> s4 [82, 82] { R15969 += 1, R15907 += 1, R15887 += 1 };
  s0 -> s1 [85, 65535] { R15969 += 1, R15907 += 1, R15887 += 1 };
  s1 -> s1 [0, 81] { R15969 += 1, R15907 += 1, R15887 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R15969 += 1 };
  s1 -> s1 [0, 65535] { R15969 += 1, R15907 += 1 };
  s1 -> s3 [82, 82] { R15969 += 1, R15907 += 1, R15887 += 1 };
  s1 -> s4 [82, 82] { R15969 += 1, R15907 += 1, R15887 += 1 };
  s1 -> s1 [85, 65535] { R15969 += 1, R15907 += 1, R15887 += 1 };
  s2 -> s1 [0, 81] { R15969 += 1, R15907 += 1, R15887 += 1 };
  s2 -> s2 [0, 65535] { R15969 += 1, R15906 += 1, R15907 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R15969 += 1, R15907 += 1 };
  s2 -> s3 [82, 82] { R15969 += 1, R15907 += 1, R15887 += 1 };
  s2 -> s4 [82, 82] { R15969 += 1, R15907 += 1, R15887 += 1 };
  s2 -> s1 [85, 65535] { R15969 += 1, R15907 += 1, R15887 += 1 };
  s3 -> s3 [0, 82] { R15969 += 1, R15907 += 1, R15887 += 1 };
  s3 -> s3 [0, 65535] { R15969 += 1, R15907 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R15969 += 1 };
  s3 -> s3 [85, 65535] { R15969 += 1, R15907 += 1, R15887 += 1 };
  s4 -> s4 [0, 65535] { R15969 += 1, R15907 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R15969 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15969 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R15971 += 1, R15926 += 1, R15927 += 1 };
  s0 -> s2 [0, 65535] { R15971 += 1, R15927 += 1, R18 += 1 };
  s0 -> s0 [0, 65535] { R15970 += 1, R15971 += 1 };
  s1 -> s1 [0, 65535] { R15971 += 1, R15926 += 1, R15927 += 1 };
  s1 -> s2 [0, 65535] { R15971 += 1, R15927 += 1, R18 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R15971 += 1, R15927 += 1, R18 += 1 };
  s2 -> s3 [0, 65535] { R15971 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R15971 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 80] { R15973 += 1, R15929 += 1 };
  s0 -> s0 [0, 65535] { R15972 += 1, R15973 += 1 };
  s0 -> s2 [0, 65535] { R15973 += 1, R15928 += 1, R15929 += 1 };
  s0 -> s3 [81, 81] { R15973 += 1, R15929 += 1 };
  s0 -> s4 [81, 81] { R15973 += 1, R15929 += 1 };
  s0 -> s5 [82, 82] { R15973 += 1, R15929 += 1 };
  s0 -> s1 [83, 65535] { R15973 += 1, R15929 += 1 };
  s1 -> s1 [0, 80] { R15973 += 1, R15929 += 1 };
  s1 -> s3 [81, 81] { R15973 += 1, R15929 += 1 };
  s1 -> s4 [81, 81] { R15973 += 1, R15929 += 1 };
  s1 -> s5 [82, 82] { R15973 += 1, R15929 += 1 };
  s1 -> s1 [83, 65535] { R15973 += 1, R15929 += 1 };
  s2 -> s1 [0, 80] { R15973 += 1, R15929 += 1 };
  s2 -> s2 [0, 65535] { R15973 += 1, R15928 += 1, R15929 += 1 };
  s2 -> s3 [81, 81] { R15973 += 1, R15929 += 1 };
  s2 -> s4 [81, 81] { R15973 += 1, R15929 += 1 };
  s2 -> s5 [82, 82] { R15973 += 1, R15929 += 1 };
  s2 -> s1 [83, 65535] { R15973 += 1, R15929 += 1 };
  s4 -> s4 [0, 81] { R15973 += 1, R15929 += 1 };
  s4 -> s7 [82, 82] { R15973 += 1, R15929 += 1 };
  s4 -> s4 [83, 65535] { R15973 += 1, R15929 += 1 };
  s5 -> s5 [0, 80] { R15973 += 1, R15929 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R15973 += 1 };
  s5 -> s7 [81, 81] { R15973 += 1, R15929 += 1 };
  s5 -> s8 [81, 81] { R15973 += 1, R15929 += 1 };
  s5 -> s5 [82, 65535] { R15973 += 1, R15929 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s9 [0, 65535] { R15973 += 1 };
  s7 -> s7 [0, 65535] { R15973 += 1, R15929 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R15973 += 1 };
  s9 -> s9 [0, 65535] { R15973 += 1 };
  s9 -> s6 [0, 65535];
  accepting s8, s5, s9, s6, s7;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 80] { R15975 += 1, R15931 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R15974 += 1, R15975 += 1 };
  s0 -> s2 [0, 65535] { R15975 += 1, R15930 += 1, R15931 += 1 };
  s0 -> s3 [81, 81] { R15975 += 1, R15931 += 1, R66 += 1 };
  s0 -> s4 [81, 81] { R15975 += 1, R15931 += 1, R66 += 1 };
  s0 -> s1 [82, 65535] { R15975 += 1, R15931 += 1, R66 += 1 };
  s1 -> s1 [0, 80] { R15975 += 1, R15931 += 1, R66 += 1 };
  s1 -> s1 [0, 65535] { R15975 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [81, 81] { R15975 += 1, R15931 += 1, R66 += 1 };
  s1 -> s4 [81, 81] { R15975 += 1, R15931 += 1, R66 += 1 };
  s1 -> s1 [82, 65535] { R15975 += 1, R15931 += 1, R66 += 1 };
  s2 -> s1 [0, 80] { R15975 += 1, R15931 += 1, R66 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R15975 += 1, R15930 += 1, R15931 += 1 };
  s2 -> s3 [81, 81] { R15975 += 1, R15931 += 1, R66 += 1 };
  s2 -> s4 [81, 81] { R15975 += 1, R15931 += 1, R66 += 1 };
  s2 -> s1 [82, 65535] { R15975 += 1, R15931 += 1, R66 += 1 };
  s3 -> s3 [0, 65535] { R15975 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R15975 += 1, R15931 += 1, R66 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R15975 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15975 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 80] { R15977 += 1, R15933 += 1, R68 += 1 };
  s0 -> s2 [0, 65535] { R15977 += 1, R15932 += 1, R15933 += 1 };
  s0 -> s0 [0, 65535] { R15976 += 1, R15977 += 1 };
  s0 -> s3 [81, 81] { R15977 += 1, R15933 += 1, R68 += 1 };
  s0 -> s4 [81, 81] { R15977 += 1, R15933 += 1, R68 += 1 };
  s0 -> s1 [82, 65535] { R15977 += 1, R15933 += 1, R68 += 1 };
  s1 -> s1 [0, 80] { R15977 += 1, R15933 += 1, R68 += 1 };
  s1 -> s1 [0, 65535] { R15977 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [81, 81] { R15977 += 1, R15933 += 1, R68 += 1 };
  s1 -> s4 [81, 81] { R15977 += 1, R15933 += 1, R68 += 1 };
  s1 -> s1 [82, 65535] { R15977 += 1, R15933 += 1, R68 += 1 };
  s2 -> s1 [0, 80] { R15977 += 1, R15933 += 1, R68 += 1 };
  s2 -> s2 [0, 65535] { R15977 += 1, R15932 += 1, R15933 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [81, 81] { R15977 += 1, R15933 += 1, R68 += 1 };
  s2 -> s4 [81, 81] { R15977 += 1, R15933 += 1, R68 += 1 };
  s2 -> s1 [82, 65535] { R15977 += 1, R15933 += 1, R68 += 1 };
  s3 -> s6 [0, 65535] { R15977 += 1 };
  s3 -> s3 [0, 65535] { R15977 += 1, R15933 += 1, R68 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R15977 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15977 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 80] { R15979 += 1, R15935 += 1, R11523 += 1 };
  s0 -> s2 [0, 80] { R15979 += 1, R15935 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s3 [0, 65535] { R15979 += 1, R15934 += 1, R15935 += 1 };
  s0 -> s0 [0, 65535] { R15978 += 1, R15979 += 1 };
  s0 -> s4 [81, 81] { R15979 += 1, R15935 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s5 [81, 81] { R15979 += 1, R15935 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s6 [81, 81] { R15979 += 1, R15935 += 1, R11523 += 1 };
  s0 -> s7 [81, 81] { R15979 += 1, R15935 += 1, R11523 += 1 };
  s0 -> s2 [82, 65535] { R15979 += 1, R15935 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s1 [83, 65535] { R15979 += 1, R15935 += 1, R11523 += 1 };
  s1 -> s1 [0, 80] { R15979 += 1, R15935 += 1, R11523 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s1 [0, 65535] { R15979 += 1 };
  s1 -> s6 [81, 81] { R15979 += 1, R15935 += 1 };
  s1 -> s7 [81, 81] { R15979 += 1, R15935 += 1 };
  s1 -> s1 [82, 65535] { R15979 += 1, R15935 += 1 };
  s1 -> s1 [83, 65535] { R15979 += 1, R15935 += 1, R11523 += 1 };
  s2 -> s1 [0, 80] { R15979 += 1, R15935 += 1, R11523 += 1 };
  s2 -> s2 [0, 80] { R15979 += 1, R15935 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s4 [81, 81] { R15979 += 1, R15935 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s5 [81, 81] { R15979 += 1, R15935 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s6 [81, 81] { R15979 += 1, R15935 += 1, R11523 += 1 };
  s2 -> s7 [81, 81] { R15979 += 1, R15935 += 1, R11523 += 1 };
  s2 -> s2 [82, 65535] { R15979 += 1, R15935 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s1 [83, 65535] { R15979 += 1, R15935 += 1, R11523 += 1 };
  s3 -> s1 [0, 80] { R15979 += 1, R15935 += 1, R11523 += 1 };
  s3 -> s2 [0, 80] { R15979 += 1, R15935 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s3 [0, 65535] { R15979 += 1, R15934 += 1, R15935 += 1 };
  s3 -> s4 [81, 81] { R15979 += 1, R15935 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s5 [81, 81] { R15979 += 1, R15935 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s6 [81, 81] { R15979 += 1, R15935 += 1, R11523 += 1 };
  s3 -> s7 [81, 81] { R15979 += 1, R15935 += 1, R11523 += 1 };
  s3 -> s2 [82, 65535] { R15979 += 1, R15935 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s1 [83, 65535] { R15979 += 1, R15935 += 1, R11523 += 1 };
  s5 -> s7 [0, 81] { R15979 += 1, R15935 += 1, R11523 += 1 };
  s5 -> s5 [0, 65535] { R15979 += 1, R15935 += 1, R11522 += 1, R11523 += 1 };
  s5 -> s7 [83, 65535] { R15979 += 1, R15935 += 1, R11523 += 1 };
  s6 -> s6 [0, 65535] { R15979 += 1 };
  s6 -> s9 [0, 65535];
  s7 -> s7 [0, 81] { R15979 += 1, R15935 += 1, R11523 += 1 };
  s7 -> s8 [0, 65535] { R15979 += 1 };
  s7 -> s9 [0, 65535];
  s7 -> s7 [0, 65535] { R15979 += 1, R15935 += 1 };
  s7 -> s7 [83, 65535] { R15979 += 1, R15935 += 1, R11523 += 1 };
  s8 -> s8 [0, 65535] { R15979 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  accepting s8, s9, s6, s1, s7;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 80] { R15981 += 1, R15937 += 1, R15343 += 1, R15344 += 1 };
  s0 -> s2 [0, 80] { R15981 += 1, R15937 += 1, R15342 += 1, R15343 += 1 };
  s0 -> s0 [0, 65535] { R15980 += 1, R15981 += 1 };
  s0 -> s3 [0, 65535] { R15981 += 1, R15936 += 1, R15937 += 1 };
  s0 -> s4 [81, 81] { R15981 += 1, R15937 += 1, R15342 += 1, R15343 += 1 };
  s0 -> s5 [81, 81] { R15981 += 1, R15937 += 1, R15343 += 1, R15344 += 1 };
  s0 -> s6 [81, 81] { R15981 += 1, R15937 += 1, R15343 += 1, R15344 += 1 };
  s0 -> s7 [81, 81] { R15981 += 1, R15937 += 1, R15342 += 1, R15343 += 1 };
  s0 -> s1 [82, 65535] { R15981 += 1, R15937 += 1, R15343 += 1, R15344 += 1 };
  s0 -> s2 [82, 65535] { R15981 += 1, R15937 += 1, R15342 += 1, R15343 += 1 };
  s1 -> s1 [0, 80] { R15981 += 1, R15937 += 1, R15343 += 1, R15344 += 1 };
  s1 -> s1 [0, 65535] { R15981 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s5 [81, 81] { R15981 += 1, R15937 += 1, R15343 += 1, R15344 += 1 };
  s1 -> s6 [81, 81] { R15981 += 1, R15937 += 1, R15343 += 1, R15344 += 1 };
  s1 -> s1 [82, 65535] { R15981 += 1, R15937 += 1, R15343 += 1, R15344 += 1 };
  s2 -> s1 [0, 80] { R15981 += 1, R15937 += 1, R15343 += 1, R15344 += 1 };
  s2 -> s2 [0, 80] { R15981 += 1, R15937 += 1, R15342 += 1, R15343 += 1 };
  s2 -> s4 [81, 81] { R15981 += 1, R15937 += 1, R15342 += 1, R15343 += 1 };
  s2 -> s5 [81, 81] { R15981 += 1, R15937 += 1, R15343 += 1, R15344 += 1 };
  s2 -> s6 [81, 81] { R15981 += 1, R15937 += 1, R15343 += 1, R15344 += 1 };
  s2 -> s7 [81, 81] { R15981 += 1, R15937 += 1, R15342 += 1, R15343 += 1 };
  s2 -> s1 [82, 65535] { R15981 += 1, R15937 += 1, R15343 += 1, R15344 += 1 };
  s2 -> s2 [82, 65535] { R15981 += 1, R15937 += 1, R15342 += 1, R15343 += 1 };
  s3 -> s1 [0, 80] { R15981 += 1, R15937 += 1, R15343 += 1, R15344 += 1 };
  s3 -> s2 [0, 80] { R15981 += 1, R15937 += 1, R15342 += 1, R15343 += 1 };
  s3 -> s3 [0, 65535] { R15981 += 1, R15936 += 1, R15937 += 1 };
  s3 -> s4 [81, 81] { R15981 += 1, R15937 += 1, R15342 += 1, R15343 += 1 };
  s3 -> s5 [81, 81] { R15981 += 1, R15937 += 1, R15343 += 1, R15344 += 1 };
  s3 -> s6 [81, 81] { R15981 += 1, R15937 += 1, R15343 += 1, R15344 += 1 };
  s3 -> s7 [81, 81] { R15981 += 1, R15937 += 1, R15342 += 1, R15343 += 1 };
  s3 -> s1 [82, 65535] { R15981 += 1, R15937 += 1, R15343 += 1, R15344 += 1 };
  s3 -> s2 [82, 65535] { R15981 += 1, R15937 += 1, R15342 += 1, R15343 += 1 };
  s4 -> s4 [0, 65535] { R15981 += 1, R15937 += 1, R15342 += 1, R15343 += 1 };
  s4 -> s5 [0, 65535] { R15981 += 1, R15937 += 1, R15343 += 1, R15344 += 1 };
  s5 -> s9 [0, 65535] { R15981 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R15981 += 1, R15937 += 1, R15343 += 1, R15344 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R15981 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R15981 += 1 };
  s9 -> s8 [0, 65535];
  accepting s8, s5, s9, s6, s1;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 80] { R15983 += 1, R15939 += 1, R15348 += 1, R15349 += 1 };
  s0 -> s2 [0, 80] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s0 -> s0 [0, 65535] { R15982 += 1, R15983 += 1 };
  s0 -> s3 [0, 65535] { R15983 += 1, R15938 += 1, R15939 += 1 };
  s0 -> s4 [81, 81] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s0 -> s5 [81, 81] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s0 -> s6 [81, 81] { R15983 += 1, R15939 += 1, R15348 += 1, R15349 += 1 };
  s0 -> s7 [81, 81] { R15983 += 1, R15939 += 1, R15348 += 1, R15349 += 1 };
  s0 -> s2 [82, 82] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s0 -> s1 [82, 65535] { R15983 += 1, R15939 += 1, R15348 += 1, R15349 += 1 };
  s0 -> s8 [84, 84] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s0 -> s2 [85, 65535] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s1 -> s1 [0, 80] { R15983 += 1, R15939 += 1, R15348 += 1, R15349 += 1 };
  s1 -> s2 [0, 80] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s1 -> s4 [81, 81] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s1 -> s5 [81, 81] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s1 -> s6 [81, 81] { R15983 += 1, R15939 += 1, R15348 += 1, R15349 += 1 };
  s1 -> s7 [81, 81] { R15983 += 1, R15939 += 1, R15348 += 1, R15349 += 1 };
  s1 -> s2 [82, 82] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s1 -> s1 [82, 65535] { R15983 += 1, R15939 += 1, R15348 += 1, R15349 += 1 };
  s1 -> s8 [84, 84] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s1 -> s2 [85, 65535] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s2 -> s2 [0, 80] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s2 -> s4 [81, 81] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s2 -> s5 [81, 81] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s2 -> s2 [82, 82] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s2 -> s8 [84, 84] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s2 -> s2 [85, 65535] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s3 -> s1 [0, 80] { R15983 += 1, R15939 += 1, R15348 += 1, R15349 += 1 };
  s3 -> s2 [0, 80] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s3 -> s3 [0, 65535] { R15983 += 1, R15938 += 1, R15939 += 1 };
  s3 -> s4 [81, 81] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s3 -> s5 [81, 81] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s3 -> s6 [81, 81] { R15983 += 1, R15939 += 1, R15348 += 1, R15349 += 1 };
  s3 -> s7 [81, 81] { R15983 += 1, R15939 += 1, R15348 += 1, R15349 += 1 };
  s3 -> s2 [82, 82] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s3 -> s1 [82, 65535] { R15983 += 1, R15939 += 1, R15348 += 1, R15349 += 1 };
  s3 -> s8 [84, 84] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s3 -> s2 [85, 65535] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s4 -> s4 [0, 82] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s4 -> s10 [84, 84] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s4 -> s4 [85, 65535] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s7 -> s4 [0, 82] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s7 -> s7 [0, 65535] { R15983 += 1, R15939 += 1, R15348 += 1, R15349 += 1 };
  s7 -> s10 [84, 84] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s7 -> s4 [85, 65535] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s8 -> s8 [0, 80] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R15983 += 1 };
  s8 -> s10 [81, 81] { R15983 += 1, R15939 += 1 };
  s8 -> s11 [81, 81] { R15983 += 1, R15939 += 1 };
  s8 -> s8 [82, 82] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s8 -> s8 [82, 65535] { R15983 += 1, R15939 += 1 };
  s8 -> s8 [84, 65535] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 82] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s10 -> s12 [0, 65535] { R15983 += 1 };
  s10 -> s10 [0, 65535] { R15983 += 1, R15939 += 1 };
  s10 -> s9 [0, 65535];
  s10 -> s10 [84, 65535] { R15983 += 1, R15939 += 1, R15349 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R15983 += 1 };
  s12 -> s12 [0, 65535] { R15983 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 80] { R15985 += 1, R15941 += 1, R15775 += 1, R15776 += 1 };
  s0 -> s2 [0, 80] { R15985 += 1, R15941 += 1, R15774 += 1, R15775 += 1 };
  s0 -> s3 [0, 65535] { R15985 += 1, R15940 += 1, R15941 += 1 };
  s0 -> s0 [0, 65535] { R15984 += 1, R15985 += 1 };
  s0 -> s4 [81, 81] { R15985 += 1, R15941 += 1, R15775 += 1, R15776 += 1 };
  s0 -> s5 [81, 81] { R15985 += 1, R15941 += 1, R15775 += 1, R15776 += 1 };
  s0 -> s6 [81, 81] { R15985 += 1, R15941 += 1, R15774 += 1, R15775 += 1 };
  s0 -> s7 [81, 81] { R15985 += 1, R15941 += 1, R15774 += 1, R15775 += 1 };
  s0 -> s1 [82, 65535] { R15985 += 1, R15941 += 1, R15775 += 1, R15776 += 1 };
  s0 -> s2 [82, 65535] { R15985 += 1, R15941 += 1, R15774 += 1, R15775 += 1 };
  s1 -> s1 [0, 80] { R15985 += 1, R15941 += 1, R15775 += 1, R15776 += 1 };
  s1 -> s1 [0, 65535] { R15985 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [81, 81] { R15985 += 1, R15941 += 1, R15775 += 1, R15776 += 1 };
  s1 -> s5 [81, 81] { R15985 += 1, R15941 += 1, R15775 += 1, R15776 += 1 };
  s1 -> s1 [82, 65535] { R15985 += 1, R15941 += 1, R15775 += 1, R15776 += 1 };
  s2 -> s1 [0, 80] { R15985 += 1, R15941 += 1, R15775 += 1, R15776 += 1 };
  s2 -> s2 [0, 80] { R15985 += 1, R15941 += 1, R15774 += 1, R15775 += 1 };
  s2 -> s4 [81, 81] { R15985 += 1, R15941 += 1, R15775 += 1, R15776 += 1 };
  s2 -> s5 [81, 81] { R15985 += 1, R15941 += 1, R15775 += 1, R15776 += 1 };
  s2 -> s6 [81, 81] { R15985 += 1, R15941 += 1, R15774 += 1, R15775 += 1 };
  s2 -> s7 [81, 81] { R15985 += 1, R15941 += 1, R15774 += 1, R15775 += 1 };
  s2 -> s1 [82, 65535] { R15985 += 1, R15941 += 1, R15775 += 1, R15776 += 1 };
  s2 -> s2 [82, 65535] { R15985 += 1, R15941 += 1, R15774 += 1, R15775 += 1 };
  s3 -> s1 [0, 80] { R15985 += 1, R15941 += 1, R15775 += 1, R15776 += 1 };
  s3 -> s2 [0, 80] { R15985 += 1, R15941 += 1, R15774 += 1, R15775 += 1 };
  s3 -> s3 [0, 65535] { R15985 += 1, R15940 += 1, R15941 += 1 };
  s3 -> s4 [81, 81] { R15985 += 1, R15941 += 1, R15775 += 1, R15776 += 1 };
  s3 -> s5 [81, 81] { R15985 += 1, R15941 += 1, R15775 += 1, R15776 += 1 };
  s3 -> s6 [81, 81] { R15985 += 1, R15941 += 1, R15774 += 1, R15775 += 1 };
  s3 -> s7 [81, 81] { R15985 += 1, R15941 += 1, R15774 += 1, R15775 += 1 };
  s3 -> s1 [82, 65535] { R15985 += 1, R15941 += 1, R15775 += 1, R15776 += 1 };
  s3 -> s2 [82, 65535] { R15985 += 1, R15941 += 1, R15774 += 1, R15775 += 1 };
  s4 -> s4 [0, 65535] { R15985 += 1, R15941 += 1, R15775 += 1, R15776 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s9 [0, 65535] { R15985 += 1 };
  s5 -> s5 [0, 65535] { R15985 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s4 [0, 65535] { R15985 += 1, R15941 += 1, R15775 += 1, R15776 += 1 };
  s6 -> s6 [0, 65535] { R15985 += 1, R15941 += 1, R15774 += 1, R15775 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R15985 += 1 };
  accepting s4, s8, s5, s9, s1;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 80] { R15987 += 1, R15943 += 1, R15884 += 1, R15885 += 1 };
  s0 -> s2 [0, 80] { R15987 += 1, R15943 += 1, R15885 += 1 };
  s0 -> s3 [0, 65535] { R15987 += 1, R15942 += 1, R15943 += 1 };
  s0 -> s0 [0, 65535] { R15986 += 1, R15987 += 1 };
  s0 -> s4 [81, 81] { R15987 += 1, R15943 += 1, R15885 += 1 };
  s0 -> s5 [81, 81] { R15987 += 1, R15943 += 1, R15885 += 1 };
  s0 -> s6 [81, 81] { R15987 += 1, R15943 += 1, R15884 += 1, R15885 += 1 };
  s0 -> s7 [81, 81] { R15987 += 1, R15943 += 1, R15884 += 1, R15885 += 1 };
  s0 -> s1 [82, 65535] { R15987 += 1, R15943 += 1, R15884 += 1, R15885 += 1 };
  s0 -> s2 [85, 65535] { R15987 += 1, R15943 += 1, R15885 += 1 };
  s1 -> s1 [0, 80] { R15987 += 1, R15943 += 1, R15884 += 1, R15885 += 1 };
  s1 -> s2 [0, 80] { R15987 += 1, R15943 += 1, R15885 += 1 };
  s1 -> s4 [81, 81] { R15987 += 1, R15943 += 1, R15885 += 1 };
  s1 -> s5 [81, 81] { R15987 += 1, R15943 += 1, R15885 += 1 };
  s1 -> s6 [81, 81] { R15987 += 1, R15943 += 1, R15884 += 1, R15885 += 1 };
  s1 -> s7 [81, 81] { R15987 += 1, R15943 += 1, R15884 += 1, R15885 += 1 };
  s1 -> s1 [82, 65535] { R15987 += 1, R15943 += 1, R15884 += 1, R15885 += 1 };
  s1 -> s2 [85, 65535] { R15987 += 1, R15943 += 1, R15885 += 1 };
  s2 -> s2 [0, 80] { R15987 += 1, R15943 += 1, R15885 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R15987 += 1 };
  s2 -> s4 [81, 81] { R15987 += 1, R15943 += 1 };
  s2 -> s5 [81, 81] { R15987 += 1, R15943 += 1 };
  s2 -> s2 [82, 65535] { R15987 += 1, R15943 += 1 };
  s2 -> s2 [85, 65535] { R15987 += 1, R15943 += 1, R15885 += 1 };
  s3 -> s1 [0, 80] { R15987 += 1, R15943 += 1, R15884 += 1, R15885 += 1 };
  s3 -> s2 [0, 80] { R15987 += 1, R15943 += 1, R15885 += 1 };
  s3 -> s3 [0, 65535] { R15987 += 1, R15942 += 1, R15943 += 1 };
  s3 -> s4 [81, 81] { R15987 += 1, R15943 += 1, R15885 += 1 };
  s3 -> s5 [81, 81] { R15987 += 1, R15943 += 1, R15885 += 1 };
  s3 -> s6 [81, 81] { R15987 += 1, R15943 += 1, R15884 += 1, R15885 += 1 };
  s3 -> s7 [81, 81] { R15987 += 1, R15943 += 1, R15884 += 1, R15885 += 1 };
  s3 -> s1 [82, 65535] { R15987 += 1, R15943 += 1, R15884 += 1, R15885 += 1 };
  s3 -> s2 [85, 65535] { R15987 += 1, R15943 += 1, R15885 += 1 };
  s4 -> s4 [0, 81] { R15987 += 1, R15943 += 1, R15885 += 1 };
  s4 -> s4 [0, 65535] { R15987 += 1, R15943 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s9 [0, 65535] { R15987 += 1 };
  s4 -> s4 [85, 65535] { R15987 += 1, R15943 += 1, R15885 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R15987 += 1 };
  s6 -> s4 [0, 81] { R15987 += 1, R15943 += 1, R15885 += 1 };
  s6 -> s6 [0, 65535] { R15987 += 1, R15943 += 1, R15884 += 1, R15885 += 1 };
  s6 -> s4 [85, 65535] { R15987 += 1, R15943 += 1, R15885 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R15987 += 1 };
  accepting s4, s8, s5, s2, s9;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [113, 113];
  accepting s1;
};
};
synchronised {  // Automata constraining c1
automaton c1_0 {
  init s0;
  s0 -> s1 [114, 114];
  accepting s1;
};
};
constraint R2 = R15987 && R20 - R15987 = -1 && R21 = R15987 && R22 - R15987 = -1 && R23 = R15987 && R24 = 0 && R25 = 1 && R26 = 0 && R27 = 1 && R38 + R67 + R66 + -1*R15351 + -1*R15349 - R53 = 0 && R52 + R15350 + R15348 = 0 && R15928 = 0 && R15929 = 0 && R15934 = 0 && R15935 = 0 && R15936 = 0 && R15937 = 0 && R15938 = 0 && R15939 = 0 && R15940 = 0 && R15941 = 0 && R15942 = 0 && R15943 = 0 && R15944 = 0 && R15945 = R15987 && R15946 = 0 && R15947 = R15987 && R15948 = 0 && R15949 = R15987 && R15950 = 0 && R15951 = R15987 && R15952 = 0 && R15953 = R15987 && R15954 = 0 && R15955 = R15987 && R15956 = 0 && R15957 = R15987 && R15958 = 0 && R15959 = R15987 && R15960 = 0 && R15961 = R15987 && R15962 = 0 && R15963 = R15987 && R15964 = 0 && R15965 = R15987 && R15966 = 0 && R15967 = R15987 && R15968 = 0 && R15969 = R15987 && R15970 = 0 && R15971 = R15987 && R15972 = 0 && R15973 = R15987 && R15974 = 0 && R15975 = R15987 && R15976 = 0 && R15977 = R15987 && R15978 = 0 && R15979 = R15987 && R15980 = 0 && R15981 = R15987 && R15982 = 0 && R15983 = R15987 && R15984 = 0 && R15985 = R15987 && R15986 = 0 && -1 < R1 && R8 < 1 && R11 < 1 && R12 < 1 && R40 + R69 + R68 < 1 && -1*R15351 + -1*R15349 - R53 < 1 && 0 < R15987 && (R1 != 0 || R17 = 0 || (R15888 = 0 && R15889 = 0)) && (R1 != 0 || R17 = 0 || (R15890 = 0 && R15891 = 0)) && (R1 != 0 || R17 = 0 || (R15892 = 0 && R15893 = 0)) && (R1 != 0 || R17 = 0 || (R15894 = 0 && R15895 = 0)) && (R1 != 0 || R17 = 0 || (R15896 = 0 && R15897 = 0)) && (R1 != 0 || R17 = 0 || (R15898 = 0 && R15899 = 0)) && (R1 != 0 || R17 = 0 || (R15900 = 0 && R15901 = 0)) && (R1 != 0 || R17 = 0 || (R15902 = 0 && R15903 = 0)) && (R1 != 0 || R17 = 0 || (R15904 = 0 && R15905 = 0)) && (R1 != 0 || R17 = 0 || (R15906 = 0 && R15907 = 0)) && (R48 + R15347 + R15344 != 0 || ((R42 + R11524 + R11522 != 0 || R43 + R11525 + R11523 + -1*R15351 + -1*R15349 - R53 = 0 || R53 + R15351 + R15349 < 1) && (R42 + R11524 + R11522 = 0 || R53 + R15351 + R15349 < 1))) && (R48 + R15347 + R15344 != 0 || ((R46 + R15345 + R15342 != 0 || R47 + R15346 + R15343 + -1*R15351 + -1*R15349 - R53 = 0 || R53 + R15351 + R15349 < 1) && (R46 + R15345 + R15342 = 0 || R53 + R15351 + R15349 < 1))) && (R15888 != 0 || R1 = R15889 || R1 < 1) && (R15890 != 0 || R1 = R15891 || R1 < 1) && (R15892 != 0 || R1 = R15893 || R1 < 1) && (R15894 != 0 || R1 = R15895 || R1 < 1) && (R15896 != 0 || R1 = R15897 || R1 < 1) && (R15898 != 0 || R1 = R15899 || R1 < 1) && (R15900 != 0 || R1 = R15901 || R1 < 1) && (R15902 != 0 || R1 = R15903 || R1 < 1) && (R15904 != 0 || R1 = R15905 || R1 < 1) && (R15906 != 0 || R1 = R15907 || R1 < 1) && (R18 = 0 || (R15926 = 0 && R15927 = 0)) && (R18 = 0 || (R15930 = 0 && R15931 = 0)) && (R18 = 0 || (R15932 = 0 && R15933 = 0)) && (R19 = 0 || (R15908 = 0 && R15909 = 0)) && (R19 = 0 || (R15910 = 0 && R15911 = 0)) && (R19 = 0 || (R15912 = 0 && R15913 = 0)) && (R19 = 0 || (R15914 = 0 && R15915 = 0)) && (R19 = 0 || (R15916 = 0 && R15917 = 0)) && (R19 = 0 || (R15918 = 0 && R15919 = 0)) && (R19 = 0 || (R15920 = 0 && R15921 = 0)) && (R19 = 0 || (R15922 = 0 && R15923 = 0)) && (R19 = 0 || (R15924 = 0 && R15925 = 0)) && (R48 + R15347 + R15344 = 0 || (R42 + R11524 + R11522 = 0 && R43 + R11525 + R11523 + -1*R15351 + -1*R15349 - R53 = 0)) && (R48 + R15347 + R15344 = 0 || (R46 + R15345 + R15342 = 0 && R47 + R15346 + R15343 + -1*R15351 + -1*R15349 - R53 = 0)) && (R58 + R15779 + R15776 = 0 || (R56 + R15777 + R15774 = 0 && R57 + R15778 + R15775 = 0)) && (R58 + R15779 + R15776 = 0 || (R62 + R15886 + R15884 = 0 && R63 + R15887 + R15885 = 0)) && (R15888 = 0 || R1 < 1) && (R15890 = 0 || R1 < 1) && (R15892 = 0 || R1 < 1) && (R15894 = 0 || R1 < 1) && (R15896 = 0 || R1 < 1) && (R15898 = 0 || R1 < 1) && (R15900 = 0 || R1 < 1) && (R15902 = 0 || R1 < 1) && (R15904 = 0 || R1 < 1) && (R15906 = 0 || R1 < 1);
// End of Parikh automata intersection problem
