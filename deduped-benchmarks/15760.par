// Parikh automata intersection problem, generated by OSTRICH+
counter int R105, R106, R107, R108, R109, R11, R110, R111, R112, R113, R114, R115, R116, R117, R118, R119, R12, R120, R121, R122, R123, R124, R125, R126, R127, R128, R129, R130, R131, R132, R133, R134, R135, R136, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R19, R190, R191, R192, R193, R194, R195, R196, R197, R198, R199, R2, R20, R200, R201, R202, R203, R204, R205, R206, R207, R208, R209, R21, R210, R211, R212, R213, R214, R215, R216, R217, R218, R219, R22, R220, R221, R222, R223, R224, R225, R226, R227, R228, R229, R23, R230, R231, R232, R233, R234, R235, R236, R237, R238, R239, R24, R240, R241, R242, R243, R244, R245, R246, R247, R248, R249, R25, R250, R251, R252, R253, R254, R255, R256, R257, R258, R259, R26, R260, R261, R262, R263, R264, R265, R266, R267, R268, R269, R27, R270, R271, R272, R273, R274, R275, R276, R277, R278, R279, R28, R280, R281, R282, R283, R284, R285, R286, R287, R288, R289, R290, R291, R292, R293, R294, R295, R296, R297, R298, R299, R3, R300, R301, R302, R303, R304, R305, R306, R307, R308, R309, R310, R311, R312, R313, R314, R315, R316, R317, R318, R319, R320, R321, R322, R323, R324, R325, R326, R327, R328, R329, R330, R331, R332, R333, R334, R335, R336, R337, R338, R4;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [65, 65];
  s0 -> s0 [66, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R2 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R11 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 64];
  s0 -> s0 [0, 65535] { R12 += 1 };
  s0 -> s2 [65, 65];
  s0 -> s1 [66, 65535];
  s1 -> s1 [0, 64];
  s1 -> s2 [65, 65];
  s1 -> s1 [66, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R22 += 1 };
  s0 -> s0 [0, 65535] { R21 += 1, R22 += 1 };
  s0 -> s2 [9, 13] { R22 += 1 };
  s0 -> s1 [14, 31] { R22 += 1 };
  s0 -> s2 [32, 32] { R22 += 1 };
  s0 -> s1 [33, 65535] { R22 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R22 += 1 };
  s2 -> s1 [0, 65535] { R22 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R24 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s1 -> s1 [0, 65535] { R24 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 64] { R246 += 1 };
  s0 -> s0 [0, 65535] { R245 += 1, R246 += 1 };
  s0 -> s1 [66, 65535] { R246 += 1 };
  s1 -> s1 [0, 64] { R246 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s1 [66, 65535] { R246 += 1 };
  accepting s0, s1;
};
automaton value2_9 {
  init s0;
  s0 -> s0 [0, 65535] { R247 += 1, R248 += 1 };
  s0 -> s1 [0, 65535] { R248 += 1, R19 += 1 };
  s1 -> s1 [0, 65535] { R248 += 1, R19 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 65] { R250 += 1 };
  s0 -> s0 [0, 65535] { R249 += 1, R250 += 1 };
  s0 -> s2 [68, 68] { R250 += 1 };
  s0 -> s1 [69, 65535] { R250 += 1 };
  s1 -> s1 [0, 65] { R250 += 1 };
  s1 -> s2 [68, 68] { R250 += 1 };
  s1 -> s1 [69, 65535] { R250 += 1 };
  s2 -> s2 [0, 65] { R250 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [68, 65535] { R250 += 1 };
  accepting s2;
};
automaton value2_11 {
  init s0;
  s0 -> s0 [0, 65535] { R251 += 1, R252 += 1 };
  s0 -> s1 [0, 65535] { R252 += 1, R106 += 1 };
  s1 -> s1 [0, 65535] { R252 += 1, R106 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 67] { R254 += 1 };
  s0 -> s2 [0, 65535] { R254 += 1, R108 += 1 };
  s0 -> s0 [0, 65535] { R253 += 1, R254 += 1 };
  s0 -> s1 [69, 65535] { R254 += 1 };
  s1 -> s1 [0, 67] { R254 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s1 [69, 65535] { R254 += 1 };
  s2 -> s1 [0, 67] { R254 += 1 };
  s2 -> s2 [0, 65535] { R254 += 1, R108 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [69, 65535] { R254 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 67] { R256 += 1, R112 += 1 };
  s0 -> s2 [0, 65535] { R256 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R255 += 1, R256 += 1 };
  s0 -> s1 [69, 65535] { R256 += 1, R112 += 1 };
  s1 -> s1 [0, 67] { R256 += 1, R112 += 1 };
  s1 -> s1 [0, 65535] { R256 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [69, 65535] { R256 += 1, R112 += 1 };
  s2 -> s1 [0, 67] { R256 += 1, R112 += 1 };
  s2 -> s2 [0, 65535] { R256 += 1, R111 += 1, R112 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [69, 65535] { R256 += 1, R112 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_14 {
  init s0;
  s0 -> s0 [0, 65535] { R257 += 1, R258 += 1 };
  s0 -> s1 [0, 65535] { R258 += 1, R116 += 1, R117 += 1 };
  s0 -> s2 [0, 65535] { R258 += 1, R117 += 1, R118 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R258 += 1, R116 += 1, R117 += 1 };
  s1 -> s2 [0, 65535] { R258 += 1, R117 += 1, R118 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R258 += 1, R117 += 1, R118 += 1 };
  s2 -> s4 [0, 65535] { R258 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R258 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 68] { R260 += 1, R122 += 1 };
  s0 -> s2 [0, 65535] { R260 += 1, R121 += 1, R122 += 1 };
  s0 -> s0 [0, 65535] { R259 += 1, R260 += 1 };
  s0 -> s3 [74, 74] { R260 += 1, R122 += 1 };
  s0 -> s1 [75, 65535] { R260 += 1, R122 += 1 };
  s1 -> s1 [0, 68] { R260 += 1, R122 += 1 };
  s1 -> s3 [74, 74] { R260 += 1, R122 += 1 };
  s1 -> s1 [75, 65535] { R260 += 1, R122 += 1 };
  s2 -> s1 [0, 68] { R260 += 1, R122 += 1 };
  s2 -> s2 [0, 65535] { R260 += 1, R121 += 1, R122 += 1 };
  s2 -> s3 [74, 74] { R260 += 1, R122 += 1 };
  s2 -> s1 [75, 65535] { R260 += 1, R122 += 1 };
  s3 -> s3 [0, 68] { R260 += 1, R122 += 1 };
  s3 -> s3 [0, 65535] { R260 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [74, 65535] { R260 += 1, R122 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 65535] { R262 += 1, R127 += 1, R128 += 1 };
  s0 -> s2 [0, 65535] { R262 += 1, R126 += 1, R127 += 1 };
  s0 -> s0 [0, 65535] { R261 += 1, R262 += 1 };
  s1 -> s1 [0, 65535] { R262 += 1, R127 += 1, R128 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R262 += 1 };
  s2 -> s1 [0, 65535] { R262 += 1, R127 += 1, R128 += 1 };
  s2 -> s2 [0, 65535] { R262 += 1, R126 += 1, R127 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R262 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 73] { R264 += 1, R133 += 1 };
  s0 -> s2 [0, 65535] { R264 += 1, R132 += 1, R133 += 1 };
  s0 -> s3 [0, 65535] { R264 += 1, R133 += 1, R134 += 1 };
  s0 -> s0 [0, 65535] { R263 += 1, R264 += 1 };
  s0 -> s1 [75, 65535] { R264 += 1, R133 += 1 };
  s1 -> s1 [0, 73] { R264 += 1, R133 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R264 += 1 };
  s1 -> s1 [75, 65535] { R264 += 1, R133 += 1 };
  s2 -> s1 [0, 73] { R264 += 1, R133 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R264 += 1, R132 += 1, R133 += 1 };
  s2 -> s3 [0, 65535] { R264 += 1, R133 += 1, R134 += 1 };
  s2 -> s1 [75, 65535] { R264 += 1, R133 += 1 };
  s3 -> s1 [0, 73] { R264 += 1, R133 += 1 };
  s3 -> s4 [0, 65535] { R264 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R264 += 1, R133 += 1, R134 += 1 };
  s3 -> s1 [75, 65535] { R264 += 1, R133 += 1 };
  s4 -> s4 [0, 65535] { R264 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 73] { R266 += 1, R140 += 1, R142 += 1 };
  s0 -> s2 [0, 65535] { R266 += 1, R140 += 1, R141 += 1, R142 += 1 };
  s0 -> s3 [0, 65535] { R266 += 1, R139 += 1, R140 += 1 };
  s0 -> s0 [0, 65535] { R265 += 1, R266 += 1 };
  s0 -> s1 [75, 65535] { R266 += 1, R140 += 1, R142 += 1 };
  s1 -> s1 [0, 73] { R266 += 1, R140 += 1, R142 += 1 };
  s1 -> s5 [0, 65535] { R266 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R266 += 1, R140 += 1 };
  s1 -> s1 [75, 65535] { R266 += 1, R140 += 1, R142 += 1 };
  s2 -> s1 [0, 73] { R266 += 1, R140 += 1, R142 += 1 };
  s2 -> s5 [0, 65535] { R266 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R266 += 1, R140 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [75, 65535] { R266 += 1, R140 += 1, R142 += 1 };
  s3 -> s1 [0, 73] { R266 += 1, R140 += 1, R142 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R266 += 1, R140 += 1, R141 += 1, R142 += 1 };
  s3 -> s3 [0, 65535] { R266 += 1, R139 += 1, R140 += 1 };
  s3 -> s1 [75, 65535] { R266 += 1, R140 += 1, R142 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R266 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 65535] { R268 += 1, R149 += 1, R151 += 1, R152 += 1 };
  s0 -> s2 [0, 65535] { R268 += 1, R148 += 1, R149 += 1 };
  s0 -> s3 [0, 65535] { R268 += 1, R149 += 1, R150 += 1, R151 += 1 };
  s0 -> s0 [0, 65535] { R267 += 1, R268 += 1 };
  s1 -> s1 [0, 65535] { R268 += 1, R149 += 1, R151 += 1, R152 += 1 };
  s1 -> s4 [0, 65535] { R268 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R268 += 1, R149 += 1 };
  s2 -> s1 [0, 65535] { R268 += 1, R149 += 1, R151 += 1, R152 += 1 };
  s2 -> s2 [0, 65535] { R268 += 1, R148 += 1, R149 += 1 };
  s2 -> s3 [0, 65535] { R268 += 1, R149 += 1, R150 += 1, R151 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R268 += 1, R149 += 1, R151 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R268 += 1, R149 += 1, R150 += 1, R151 += 1 };
  s3 -> s4 [0, 65535] { R268 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R268 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R268 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R268 += 1, R149 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 74] { R270 += 1, R158 += 1, R160 += 1 };
  s0 -> s0 [0, 65535] { R269 += 1, R270 += 1 };
  s0 -> s2 [0, 65535] { R270 += 1, R158 += 1, R159 += 1, R160 += 1 };
  s0 -> s3 [0, 65535] { R270 += 1, R157 += 1, R158 += 1 };
  s0 -> s4 [77, 77] { R270 += 1, R158 += 1, R160 += 1 };
  s0 -> s1 [78, 65535] { R270 += 1, R158 += 1, R160 += 1 };
  s1 -> s1 [0, 74] { R270 += 1, R158 += 1, R160 += 1 };
  s1 -> s4 [77, 77] { R270 += 1, R158 += 1, R160 += 1 };
  s1 -> s1 [78, 65535] { R270 += 1, R158 += 1, R160 += 1 };
  s2 -> s1 [0, 74] { R270 += 1, R158 += 1, R160 += 1 };
  s2 -> s2 [0, 65535] { R270 += 1, R158 += 1, R159 += 1, R160 += 1 };
  s2 -> s4 [77, 77] { R270 += 1, R158 += 1, R160 += 1 };
  s2 -> s1 [78, 65535] { R270 += 1, R158 += 1, R160 += 1 };
  s3 -> s1 [0, 74] { R270 += 1, R158 += 1, R160 += 1 };
  s3 -> s2 [0, 65535] { R270 += 1, R158 += 1, R159 += 1, R160 += 1 };
  s3 -> s3 [0, 65535] { R270 += 1, R157 += 1, R158 += 1 };
  s3 -> s4 [77, 77] { R270 += 1, R158 += 1, R160 += 1 };
  s3 -> s1 [78, 65535] { R270 += 1, R158 += 1, R160 += 1 };
  s4 -> s4 [0, 74] { R270 += 1, R158 += 1, R160 += 1 };
  s4 -> s4 [0, 65535] { R270 += 1, R158 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R270 += 1 };
  s4 -> s4 [77, 65535] { R270 += 1, R158 += 1, R160 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R270 += 1 };
  accepting s4, s5, s6;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R272 += 1, R167 += 1, R168 += 1, R169 += 1 };
  s0 -> s0 [0, 65535] { R271 += 1, R272 += 1 };
  s0 -> s2 [0, 65535] { R272 += 1, R166 += 1, R167 += 1 };
  s0 -> s3 [0, 65535] { R272 += 1, R167 += 1, R169 += 1, R170 += 1 };
  s1 -> s4 [0, 65535] { R272 += 1 };
  s1 -> s1 [0, 65535] { R272 += 1, R167 += 1, R168 += 1, R169 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [0, 65535] { R272 += 1, R167 += 1, R169 += 1, R170 += 1 };
  s2 -> s1 [0, 65535] { R272 += 1, R167 += 1, R168 += 1, R169 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R272 += 1, R166 += 1, R167 += 1 };
  s2 -> s3 [0, 65535] { R272 += 1, R167 += 1, R169 += 1, R170 += 1 };
  s3 -> s4 [0, 65535] { R272 += 1 };
  s3 -> s5 [0, 65535] { R272 += 1, R167 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R272 += 1, R167 += 1, R169 += 1, R170 += 1 };
  s4 -> s4 [0, 65535] { R272 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s4 [0, 65535] { R272 += 1 };
  s5 -> s5 [0, 65535] { R272 += 1, R167 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 73] { R274 += 1, R176 += 1, R178 += 1 };
  s0 -> s0 [0, 65535] { R273 += 1, R274 += 1 };
  s0 -> s2 [0, 65535] { R274 += 1, R175 += 1, R176 += 1 };
  s0 -> s3 [0, 65535] { R274 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s4 [74, 74] { R274 += 1, R176 += 1, R178 += 1 };
  s0 -> s5 [74, 74] { R274 += 1, R176 += 1, R178 += 1 };
  s0 -> s1 [78, 65535] { R274 += 1, R176 += 1, R178 += 1 };
  s1 -> s1 [0, 73] { R274 += 1, R176 += 1, R178 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R274 += 1, R176 += 1 };
  s1 -> s7 [0, 65535] { R274 += 1 };
  s1 -> s4 [74, 74] { R274 += 1, R176 += 1, R178 += 1 };
  s1 -> s5 [74, 74] { R274 += 1, R176 += 1, R178 += 1 };
  s1 -> s1 [78, 65535] { R274 += 1, R176 += 1, R178 += 1 };
  s2 -> s1 [0, 73] { R274 += 1, R176 += 1, R178 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R274 += 1, R175 += 1, R176 += 1 };
  s2 -> s3 [0, 65535] { R274 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s4 [74, 74] { R274 += 1, R176 += 1, R178 += 1 };
  s2 -> s5 [74, 74] { R274 += 1, R176 += 1, R178 += 1 };
  s2 -> s1 [78, 65535] { R274 += 1, R176 += 1, R178 += 1 };
  s3 -> s1 [0, 73] { R274 += 1, R176 += 1, R178 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R274 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s7 [0, 65535] { R274 += 1 };
  s3 -> s4 [74, 74] { R274 += 1, R176 += 1, R178 += 1 };
  s3 -> s5 [74, 74] { R274 += 1, R176 += 1, R178 += 1 };
  s3 -> s1 [78, 65535] { R274 += 1, R176 += 1, R178 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R274 += 1, R176 += 1 };
  s4 -> s7 [0, 65535] { R274 += 1 };
  s5 -> s5 [0, 74] { R274 += 1, R176 += 1, R178 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R274 += 1 };
  s5 -> s5 [0, 65535] { R274 += 1, R176 += 1 };
  s5 -> s5 [78, 65535] { R274 += 1, R176 += 1, R178 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R274 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R276 += 1, R182 += 1, R183 += 1 };
  s0 -> s2 [0, 65535] { R276 += 1, R183 += 1, R184 += 1 };
  s0 -> s0 [0, 65535] { R275 += 1, R276 += 1 };
  s1 -> s1 [0, 65535] { R276 += 1, R182 += 1, R183 += 1 };
  s1 -> s2 [0, 65535] { R276 += 1, R183 += 1, R184 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R276 += 1 };
  s2 -> s2 [0, 65535] { R276 += 1, R183 += 1, R184 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R276 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 67] { R278 += 1, R188 += 1 };
  s0 -> s2 [0, 65535] { R278 += 1, R187 += 1, R188 += 1 };
  s0 -> s0 [0, 65535] { R277 += 1, R278 += 1 };
  s0 -> s3 [68, 68] { R278 += 1, R188 += 1 };
  s0 -> s4 [68, 68] { R278 += 1, R188 += 1 };
  s0 -> s1 [75, 65535] { R278 += 1, R188 += 1 };
  s1 -> s1 [0, 67] { R278 += 1, R188 += 1 };
  s1 -> s1 [0, 65535] { R278 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [68, 68] { R278 += 1, R188 += 1 };
  s1 -> s4 [68, 68] { R278 += 1, R188 += 1 };
  s1 -> s1 [75, 65535] { R278 += 1, R188 += 1 };
  s2 -> s1 [0, 67] { R278 += 1, R188 += 1 };
  s2 -> s2 [0, 65535] { R278 += 1, R187 += 1, R188 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [68, 68] { R278 += 1, R188 += 1 };
  s2 -> s4 [68, 68] { R278 += 1, R188 += 1 };
  s2 -> s1 [75, 65535] { R278 += 1, R188 += 1 };
  s3 -> s3 [0, 65535] { R278 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 68] { R278 += 1, R188 += 1 };
  s4 -> s4 [0, 65535] { R278 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [75, 65535] { R278 += 1, R188 += 1 };
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 67] { R280 += 1, R193 += 1, R194 += 1 };
  s0 -> s0 [0, 65535] { R279 += 1, R280 += 1 };
  s0 -> s2 [0, 65535] { R280 += 1, R192 += 1, R193 += 1 };
  s0 -> s3 [68, 68] { R280 += 1, R193 += 1, R194 += 1 };
  s0 -> s4 [68, 68] { R280 += 1, R193 += 1, R194 += 1 };
  s0 -> s1 [69, 65535] { R280 += 1, R193 += 1, R194 += 1 };
  s1 -> s1 [0, 67] { R280 += 1, R193 += 1, R194 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R280 += 1 };
  s1 -> s3 [68, 68] { R280 += 1, R193 += 1, R194 += 1 };
  s1 -> s4 [68, 68] { R280 += 1, R193 += 1, R194 += 1 };
  s1 -> s1 [69, 65535] { R280 += 1, R193 += 1, R194 += 1 };
  s2 -> s1 [0, 67] { R280 += 1, R193 += 1, R194 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R280 += 1, R192 += 1, R193 += 1 };
  s2 -> s3 [68, 68] { R280 += 1, R193 += 1, R194 += 1 };
  s2 -> s4 [68, 68] { R280 += 1, R193 += 1, R194 += 1 };
  s2 -> s1 [69, 65535] { R280 += 1, R193 += 1, R194 += 1 };
  s3 -> s3 [0, 65535] { R280 += 1, R193 += 1, R194 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R280 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R280 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R280 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 67] { R282 += 1, R199 += 1, R200 += 1 };
  s0 -> s0 [0, 65535] { R281 += 1, R282 += 1 };
  s0 -> s2 [0, 65535] { R282 += 1, R198 += 1, R199 += 1 };
  s0 -> s3 [68, 68] { R282 += 1, R199 += 1, R200 += 1 };
  s0 -> s4 [68, 68] { R282 += 1, R199 += 1, R200 += 1 };
  s0 -> s1 [69, 65535] { R282 += 1, R199 += 1, R200 += 1 };
  s1 -> s1 [0, 67] { R282 += 1, R199 += 1, R200 += 1 };
  s1 -> s1 [0, 65535] { R282 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [68, 68] { R282 += 1, R199 += 1, R200 += 1 };
  s1 -> s4 [68, 68] { R282 += 1, R199 += 1, R200 += 1 };
  s1 -> s1 [69, 65535] { R282 += 1, R199 += 1, R200 += 1 };
  s2 -> s1 [0, 67] { R282 += 1, R199 += 1, R200 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R282 += 1, R198 += 1, R199 += 1 };
  s2 -> s3 [68, 68] { R282 += 1, R199 += 1, R200 += 1 };
  s2 -> s4 [68, 68] { R282 += 1, R199 += 1, R200 += 1 };
  s2 -> s1 [69, 65535] { R282 += 1, R199 += 1, R200 += 1 };
  s3 -> s3 [0, 65535] { R282 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R282 += 1, R199 += 1, R200 += 1 };
  s4 -> s6 [0, 65535] { R282 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R282 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 67] { R284 += 1, R206 += 1, R207 += 1, R208 += 1 };
  s0 -> s2 [0, 65535] { R284 += 1, R205 += 1, R206 += 1 };
  s0 -> s0 [0, 65535] { R283 += 1, R284 += 1 };
  s0 -> s3 [68, 68] { R284 += 1, R206 += 1, R207 += 1, R208 += 1 };
  s0 -> s4 [68, 68] { R284 += 1, R206 += 1, R207 += 1, R208 += 1 };
  s0 -> s1 [69, 65535] { R284 += 1, R206 += 1, R207 += 1, R208 += 1 };
  s1 -> s1 [0, 67] { R284 += 1, R206 += 1, R207 += 1, R208 += 1 };
  s1 -> s1 [0, 65535] { R284 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [68, 68] { R284 += 1, R206 += 1, R207 += 1, R208 += 1 };
  s1 -> s4 [68, 68] { R284 += 1, R206 += 1, R207 += 1, R208 += 1 };
  s1 -> s1 [69, 65535] { R284 += 1, R206 += 1, R207 += 1, R208 += 1 };
  s2 -> s1 [0, 67] { R284 += 1, R206 += 1, R207 += 1, R208 += 1 };
  s2 -> s2 [0, 65535] { R284 += 1, R205 += 1, R206 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [68, 68] { R284 += 1, R206 += 1, R207 += 1, R208 += 1 };
  s2 -> s4 [68, 68] { R284 += 1, R206 += 1, R207 += 1, R208 += 1 };
  s2 -> s1 [69, 65535] { R284 += 1, R206 += 1, R207 += 1, R208 += 1 };
  s3 -> s3 [0, 65535] { R284 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R284 += 1, R206 += 1, R207 += 1, R208 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R284 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R284 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 67] { R286 += 1, R215 += 1, R216 += 1, R217 += 1 };
  s0 -> s0 [0, 65535] { R285 += 1, R286 += 1 };
  s0 -> s2 [0, 65535] { R286 += 1, R214 += 1, R215 += 1 };
  s0 -> s3 [68, 68] { R286 += 1, R215 += 1, R216 += 1, R217 += 1 };
  s0 -> s4 [68, 68] { R286 += 1, R215 += 1, R216 += 1, R217 += 1 };
  s0 -> s1 [69, 65535] { R286 += 1, R215 += 1, R216 += 1, R217 += 1 };
  s1 -> s1 [0, 67] { R286 += 1, R215 += 1, R216 += 1, R217 += 1 };
  s1 -> s1 [0, 65535] { R286 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [68, 68] { R286 += 1, R215 += 1, R216 += 1, R217 += 1 };
  s1 -> s4 [68, 68] { R286 += 1, R215 += 1, R216 += 1, R217 += 1 };
  s1 -> s1 [69, 65535] { R286 += 1, R215 += 1, R216 += 1, R217 += 1 };
  s2 -> s1 [0, 67] { R286 += 1, R215 += 1, R216 += 1, R217 += 1 };
  s2 -> s2 [0, 65535] { R286 += 1, R214 += 1, R215 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [68, 68] { R286 += 1, R215 += 1, R216 += 1, R217 += 1 };
  s2 -> s4 [68, 68] { R286 += 1, R215 += 1, R216 += 1, R217 += 1 };
  s2 -> s1 [69, 65535] { R286 += 1, R215 += 1, R216 += 1, R217 += 1 };
  s3 -> s6 [0, 65535] { R286 += 1 };
  s3 -> s3 [0, 65535] { R286 += 1, R215 += 1, R216 += 1, R217 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R286 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R286 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 67] { R288 += 1, R224 += 1, R225 += 1, R226 += 1 };
  s0 -> s2 [0, 65535] { R288 += 1, R223 += 1, R224 += 1 };
  s0 -> s0 [0, 65535] { R287 += 1, R288 += 1 };
  s0 -> s3 [68, 68] { R288 += 1, R224 += 1, R225 += 1, R226 += 1 };
  s0 -> s4 [68, 68] { R288 += 1, R224 += 1, R225 += 1, R226 += 1 };
  s0 -> s1 [69, 65535] { R288 += 1, R224 += 1, R225 += 1, R226 += 1 };
  s1 -> s1 [0, 67] { R288 += 1, R224 += 1, R225 += 1, R226 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R288 += 1 };
  s1 -> s3 [68, 68] { R288 += 1, R224 += 1, R225 += 1, R226 += 1 };
  s1 -> s4 [68, 68] { R288 += 1, R224 += 1, R225 += 1, R226 += 1 };
  s1 -> s1 [69, 65535] { R288 += 1, R224 += 1, R225 += 1, R226 += 1 };
  s2 -> s1 [0, 67] { R288 += 1, R224 += 1, R225 += 1, R226 += 1 };
  s2 -> s2 [0, 65535] { R288 += 1, R223 += 1, R224 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [68, 68] { R288 += 1, R224 += 1, R225 += 1, R226 += 1 };
  s2 -> s4 [68, 68] { R288 += 1, R224 += 1, R225 += 1, R226 += 1 };
  s2 -> s1 [69, 65535] { R288 += 1, R224 += 1, R225 += 1, R226 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R288 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R288 += 1 };
  s4 -> s4 [0, 65535] { R288 += 1, R224 += 1, R225 += 1, R226 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R288 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 67] { R290 += 1, R233 += 1, R234 += 1, R235 += 1 };
  s0 -> s2 [0, 65535] { R290 += 1, R232 += 1, R233 += 1 };
  s0 -> s0 [0, 65535] { R289 += 1, R290 += 1 };
  s0 -> s3 [68, 68] { R290 += 1, R233 += 1, R234 += 1, R235 += 1 };
  s0 -> s4 [68, 68] { R290 += 1, R233 += 1, R234 += 1, R235 += 1 };
  s0 -> s1 [69, 65535] { R290 += 1, R233 += 1, R234 += 1, R235 += 1 };
  s1 -> s1 [0, 67] { R290 += 1, R233 += 1, R234 += 1, R235 += 1 };
  s1 -> s1 [0, 65535] { R290 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [68, 68] { R290 += 1, R233 += 1, R234 += 1, R235 += 1 };
  s1 -> s4 [68, 68] { R290 += 1, R233 += 1, R234 += 1, R235 += 1 };
  s1 -> s1 [69, 65535] { R290 += 1, R233 += 1, R234 += 1, R235 += 1 };
  s2 -> s1 [0, 67] { R290 += 1, R233 += 1, R234 += 1, R235 += 1 };
  s2 -> s2 [0, 65535] { R290 += 1, R232 += 1, R233 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [68, 68] { R290 += 1, R233 += 1, R234 += 1, R235 += 1 };
  s2 -> s4 [68, 68] { R290 += 1, R233 += 1, R234 += 1, R235 += 1 };
  s2 -> s1 [69, 65535] { R290 += 1, R233 += 1, R234 += 1, R235 += 1 };
  s3 -> s3 [0, 65535] { R290 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R290 += 1, R233 += 1, R234 += 1, R235 += 1 };
  s4 -> s5 [0, 65535] { R290 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R290 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 67] { R292 += 1, R242 += 1, R243 += 1, R244 += 1 };
  s0 -> s0 [0, 65535] { R291 += 1, R292 += 1 };
  s0 -> s2 [0, 65535] { R292 += 1, R241 += 1, R242 += 1 };
  s0 -> s3 [68, 68] { R292 += 1, R242 += 1, R243 += 1, R244 += 1 };
  s0 -> s4 [68, 68] { R292 += 1, R242 += 1, R243 += 1, R244 += 1 };
  s0 -> s1 [69, 65535] { R292 += 1, R242 += 1, R243 += 1, R244 += 1 };
  s1 -> s1 [0, 67] { R292 += 1, R242 += 1, R243 += 1, R244 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R292 += 1 };
  s1 -> s3 [68, 68] { R292 += 1, R242 += 1, R243 += 1, R244 += 1 };
  s1 -> s4 [68, 68] { R292 += 1, R242 += 1, R243 += 1, R244 += 1 };
  s1 -> s1 [69, 65535] { R292 += 1, R242 += 1, R243 += 1, R244 += 1 };
  s2 -> s1 [0, 67] { R292 += 1, R242 += 1, R243 += 1, R244 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R292 += 1, R241 += 1, R242 += 1 };
  s2 -> s3 [68, 68] { R292 += 1, R242 += 1, R243 += 1, R244 += 1 };
  s2 -> s4 [68, 68] { R292 += 1, R242 += 1, R243 += 1, R244 += 1 };
  s2 -> s1 [69, 65535] { R292 += 1, R242 += 1, R243 += 1, R244 += 1 };
  s3 -> s3 [0, 65535] { R292 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R292 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R292 += 1, R242 += 1, R243 += 1, R244 += 1 };
  s5 -> s5 [0, 65535] { R292 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R294 += 1, R20 += 1 };
  s0 -> s0 [0, 65535] { R293 += 1, R294 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R294 += 1, R20 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 64] { R296 += 1 };
  s0 -> s0 [0, 65535] { R295 += 1, R296 += 1 };
  s0 -> s2 [65, 65] { R296 += 1 };
  s0 -> s3 [65, 65] { R296 += 1 };
  s0 -> s1 [69, 65535] { R296 += 1 };
  s1 -> s1 [0, 64] { R296 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R296 += 1 };
  s1 -> s3 [65, 65] { R296 += 1 };
  s1 -> s1 [69, 65535] { R296 += 1 };
  s2 -> s2 [0, 65] { R296 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [69, 65535] { R296 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 64] { R298 += 1, R105 += 1 };
  s0 -> s0 [0, 65535] { R297 += 1, R298 += 1 };
  s0 -> s2 [65, 65] { R298 += 1, R105 += 1 };
  s0 -> s3 [65, 65] { R298 += 1, R105 += 1 };
  s0 -> s1 [66, 65535] { R298 += 1, R105 += 1 };
  s1 -> s1 [0, 64] { R298 += 1, R105 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R298 += 1, R105 += 1 };
  s1 -> s3 [65, 65] { R298 += 1, R105 += 1 };
  s1 -> s1 [66, 65535] { R298 += 1, R105 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R298 += 1, R105 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 64] { R300 += 1, R107 += 1 };
  s0 -> s0 [0, 65535] { R299 += 1, R300 += 1 };
  s0 -> s2 [65, 65] { R300 += 1, R107 += 1 };
  s0 -> s3 [65, 65] { R300 += 1, R107 += 1 };
  s0 -> s1 [66, 65535] { R300 += 1, R107 += 1 };
  s1 -> s1 [0, 64] { R300 += 1, R107 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R300 += 1, R107 += 1 };
  s1 -> s3 [65, 65] { R300 += 1, R107 += 1 };
  s1 -> s1 [66, 65535] { R300 += 1, R107 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R300 += 1, R107 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 64] { R302 += 1, R109 += 1, R110 += 1 };
  s0 -> s0 [0, 65535] { R301 += 1, R302 += 1 };
  s0 -> s2 [65, 65] { R302 += 1, R109 += 1, R110 += 1 };
  s0 -> s3 [65, 65] { R302 += 1, R109 += 1, R110 += 1 };
  s0 -> s1 [66, 65535] { R302 += 1, R109 += 1, R110 += 1 };
  s1 -> s1 [0, 64] { R302 += 1, R109 += 1, R110 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R302 += 1, R109 += 1, R110 += 1 };
  s1 -> s3 [65, 65] { R302 += 1, R109 += 1, R110 += 1 };
  s1 -> s1 [66, 65535] { R302 += 1, R109 += 1, R110 += 1 };
  s2 -> s2 [0, 65535] { R302 += 1, R109 += 1, R110 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 64] { R304 += 1, R113 += 1, R114 += 1 };
  s0 -> s0 [0, 65535] { R303 += 1, R304 += 1 };
  s0 -> s2 [65, 65] { R304 += 1, R113 += 1, R114 += 1 };
  s0 -> s3 [65, 65] { R304 += 1, R113 += 1, R114 += 1 };
  s0 -> s1 [66, 65535] { R304 += 1, R113 += 1, R114 += 1 };
  s1 -> s1 [0, 64] { R304 += 1, R113 += 1, R114 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R304 += 1, R113 += 1, R114 += 1 };
  s1 -> s3 [65, 65] { R304 += 1, R113 += 1, R114 += 1 };
  s1 -> s1 [66, 65535] { R304 += 1, R113 += 1, R114 += 1 };
  s2 -> s2 [0, 65535] { R304 += 1, R113 += 1, R114 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 64] { R306 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R305 += 1, R306 += 1 };
  s0 -> s2 [65, 65] { R306 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [65, 65] { R306 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [66, 65535] { R306 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 64] { R306 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R306 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [65, 65] { R306 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [66, 65535] { R306 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R306 += 1, R119 += 1, R120 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 64] { R308 += 1, R123 += 1, R124 += 1 };
  s0 -> s0 [0, 65535] { R307 += 1, R308 += 1 };
  s0 -> s2 [65, 65] { R308 += 1, R123 += 1, R124 += 1 };
  s0 -> s3 [65, 65] { R308 += 1, R123 += 1, R124 += 1 };
  s0 -> s1 [66, 65535] { R308 += 1, R123 += 1, R124 += 1 };
  s1 -> s1 [0, 64] { R308 += 1, R123 += 1, R124 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R308 += 1, R123 += 1, R124 += 1 };
  s1 -> s3 [65, 65] { R308 += 1, R123 += 1, R124 += 1 };
  s1 -> s1 [66, 65535] { R308 += 1, R123 += 1, R124 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R308 += 1, R123 += 1, R124 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 64] { R310 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R309 += 1, R310 += 1 };
  s0 -> s2 [65, 65] { R310 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [65, 65] { R310 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [66, 65535] { R310 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 64] { R310 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R310 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [65, 65] { R310 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [66, 65535] { R310 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R310 += 1, R129 += 1, R130 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 64] { R312 += 1, R135 += 1, R136 += 1 };
  s0 -> s0 [0, 65535] { R311 += 1, R312 += 1 };
  s0 -> s2 [65, 65] { R312 += 1, R135 += 1, R136 += 1 };
  s0 -> s3 [65, 65] { R312 += 1, R135 += 1, R136 += 1 };
  s0 -> s1 [66, 65535] { R312 += 1, R135 += 1, R136 += 1 };
  s1 -> s1 [0, 64] { R312 += 1, R135 += 1, R136 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R312 += 1, R135 += 1, R136 += 1 };
  s1 -> s3 [65, 65] { R312 += 1, R135 += 1, R136 += 1 };
  s1 -> s1 [66, 65535] { R312 += 1, R135 += 1, R136 += 1 };
  s2 -> s2 [0, 65535] { R312 += 1, R135 += 1, R136 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 64] { R314 += 1, R143 += 1, R144 += 1 };
  s0 -> s0 [0, 65535] { R313 += 1, R314 += 1 };
  s0 -> s2 [65, 65] { R314 += 1, R143 += 1, R144 += 1 };
  s0 -> s3 [65, 65] { R314 += 1, R143 += 1, R144 += 1 };
  s0 -> s1 [66, 65535] { R314 += 1, R143 += 1, R144 += 1 };
  s1 -> s1 [0, 64] { R314 += 1, R143 += 1, R144 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R314 += 1, R143 += 1, R144 += 1 };
  s1 -> s3 [65, 65] { R314 += 1, R143 += 1, R144 += 1 };
  s1 -> s1 [66, 65535] { R314 += 1, R143 += 1, R144 += 1 };
  s2 -> s2 [0, 65535] { R314 += 1, R143 += 1, R144 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 64] { R316 += 1, R153 += 1, R154 += 1 };
  s0 -> s0 [0, 65535] { R315 += 1, R316 += 1 };
  s0 -> s2 [65, 65] { R316 += 1, R153 += 1, R154 += 1 };
  s0 -> s3 [65, 65] { R316 += 1, R153 += 1, R154 += 1 };
  s0 -> s1 [66, 65535] { R316 += 1, R153 += 1, R154 += 1 };
  s1 -> s1 [0, 64] { R316 += 1, R153 += 1, R154 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R316 += 1, R153 += 1, R154 += 1 };
  s1 -> s3 [65, 65] { R316 += 1, R153 += 1, R154 += 1 };
  s1 -> s1 [66, 65535] { R316 += 1, R153 += 1, R154 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R316 += 1, R153 += 1, R154 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 64] { R318 += 1, R161 += 1, R162 += 1 };
  s0 -> s0 [0, 65535] { R317 += 1, R318 += 1 };
  s0 -> s2 [65, 65] { R318 += 1, R161 += 1, R162 += 1 };
  s0 -> s3 [65, 65] { R318 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [66, 65535] { R318 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 64] { R318 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R318 += 1, R161 += 1, R162 += 1 };
  s1 -> s3 [65, 65] { R318 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [66, 65535] { R318 += 1, R161 += 1, R162 += 1 };
  s2 -> s2 [0, 65535] { R318 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 64] { R320 += 1, R171 += 1, R172 += 1 };
  s0 -> s0 [0, 65535] { R319 += 1, R320 += 1 };
  s0 -> s2 [65, 65] { R320 += 1, R171 += 1, R172 += 1 };
  s0 -> s3 [65, 65] { R320 += 1, R171 += 1, R172 += 1 };
  s0 -> s1 [66, 65535] { R320 += 1, R171 += 1, R172 += 1 };
  s1 -> s1 [0, 64] { R320 += 1, R171 += 1, R172 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R320 += 1, R171 += 1, R172 += 1 };
  s1 -> s3 [65, 65] { R320 += 1, R171 += 1, R172 += 1 };
  s1 -> s1 [66, 65535] { R320 += 1, R171 += 1, R172 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R320 += 1, R171 += 1, R172 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 64] { R322 += 1, R179 += 1, R180 += 1 };
  s0 -> s0 [0, 65535] { R321 += 1, R322 += 1 };
  s0 -> s2 [65, 65] { R322 += 1, R179 += 1, R180 += 1 };
  s0 -> s3 [65, 65] { R322 += 1, R179 += 1, R180 += 1 };
  s0 -> s1 [66, 65535] { R322 += 1, R179 += 1, R180 += 1 };
  s1 -> s1 [0, 64] { R322 += 1, R179 += 1, R180 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R322 += 1, R179 += 1, R180 += 1 };
  s1 -> s3 [65, 65] { R322 += 1, R179 += 1, R180 += 1 };
  s1 -> s1 [66, 65535] { R322 += 1, R179 += 1, R180 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R322 += 1, R179 += 1, R180 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 64] { R324 += 1, R185 += 1, R186 += 1 };
  s0 -> s0 [0, 65535] { R323 += 1, R324 += 1 };
  s0 -> s2 [65, 65] { R324 += 1, R185 += 1, R186 += 1 };
  s0 -> s3 [65, 65] { R324 += 1, R185 += 1, R186 += 1 };
  s0 -> s1 [66, 65535] { R324 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 64] { R324 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R324 += 1, R185 += 1, R186 += 1 };
  s1 -> s3 [65, 65] { R324 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [66, 65535] { R324 += 1, R185 += 1, R186 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R324 += 1, R185 += 1, R186 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 64] { R326 += 1, R189 += 1, R190 += 1 };
  s0 -> s0 [0, 65535] { R325 += 1, R326 += 1 };
  s0 -> s2 [65, 65] { R326 += 1, R189 += 1, R190 += 1 };
  s0 -> s3 [65, 65] { R326 += 1, R189 += 1, R190 += 1 };
  s0 -> s1 [66, 65535] { R326 += 1, R189 += 1, R190 += 1 };
  s1 -> s1 [0, 64] { R326 += 1, R189 += 1, R190 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R326 += 1, R189 += 1, R190 += 1 };
  s1 -> s3 [65, 65] { R326 += 1, R189 += 1, R190 += 1 };
  s1 -> s1 [66, 65535] { R326 += 1, R189 += 1, R190 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R326 += 1, R189 += 1, R190 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 64] { R328 += 1, R195 += 1, R196 += 1 };
  s0 -> s0 [0, 65535] { R327 += 1, R328 += 1 };
  s0 -> s2 [65, 65] { R328 += 1, R195 += 1, R196 += 1 };
  s0 -> s3 [65, 65] { R328 += 1, R195 += 1, R196 += 1 };
  s0 -> s1 [66, 65535] { R328 += 1, R195 += 1, R196 += 1 };
  s1 -> s1 [0, 64] { R328 += 1, R195 += 1, R196 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R328 += 1, R195 += 1, R196 += 1 };
  s1 -> s3 [65, 65] { R328 += 1, R195 += 1, R196 += 1 };
  s1 -> s1 [66, 65535] { R328 += 1, R195 += 1, R196 += 1 };
  s2 -> s2 [0, 65535] { R328 += 1, R195 += 1, R196 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 64] { R330 += 1, R201 += 1, R202 += 1 };
  s0 -> s0 [0, 65535] { R329 += 1, R330 += 1 };
  s0 -> s2 [65, 65] { R330 += 1, R201 += 1, R202 += 1 };
  s0 -> s3 [65, 65] { R330 += 1, R201 += 1, R202 += 1 };
  s0 -> s1 [66, 65535] { R330 += 1, R201 += 1, R202 += 1 };
  s1 -> s1 [0, 64] { R330 += 1, R201 += 1, R202 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R330 += 1, R201 += 1, R202 += 1 };
  s1 -> s3 [65, 65] { R330 += 1, R201 += 1, R202 += 1 };
  s1 -> s1 [66, 65535] { R330 += 1, R201 += 1, R202 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R330 += 1, R201 += 1, R202 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 64] { R332 += 1, R209 += 1, R210 += 1 };
  s0 -> s0 [0, 65535] { R331 += 1, R332 += 1 };
  s0 -> s2 [65, 65] { R332 += 1, R209 += 1, R210 += 1 };
  s0 -> s3 [65, 65] { R332 += 1, R209 += 1, R210 += 1 };
  s0 -> s1 [66, 65535] { R332 += 1, R209 += 1, R210 += 1 };
  s1 -> s1 [0, 64] { R332 += 1, R209 += 1, R210 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R332 += 1, R209 += 1, R210 += 1 };
  s1 -> s3 [65, 65] { R332 += 1, R209 += 1, R210 += 1 };
  s1 -> s1 [66, 65535] { R332 += 1, R209 += 1, R210 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R332 += 1, R209 += 1, R210 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 64] { R334 += 1, R219 += 1, R220 += 1 };
  s0 -> s0 [0, 65535] { R333 += 1, R334 += 1 };
  s0 -> s2 [65, 65] { R334 += 1, R219 += 1, R220 += 1 };
  s0 -> s3 [65, 65] { R334 += 1, R219 += 1, R220 += 1 };
  s0 -> s1 [66, 65535] { R334 += 1, R219 += 1, R220 += 1 };
  s1 -> s1 [0, 64] { R334 += 1, R219 += 1, R220 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R334 += 1, R219 += 1, R220 += 1 };
  s1 -> s3 [65, 65] { R334 += 1, R219 += 1, R220 += 1 };
  s1 -> s1 [66, 65535] { R334 += 1, R219 += 1, R220 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R334 += 1, R219 += 1, R220 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 64] { R336 += 1, R227 += 1, R228 += 1 };
  s0 -> s0 [0, 65535] { R335 += 1, R336 += 1 };
  s0 -> s2 [65, 65] { R336 += 1, R227 += 1, R228 += 1 };
  s0 -> s3 [65, 65] { R336 += 1, R227 += 1, R228 += 1 };
  s0 -> s1 [66, 65535] { R336 += 1, R227 += 1, R228 += 1 };
  s1 -> s1 [0, 64] { R336 += 1, R227 += 1, R228 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R336 += 1, R227 += 1, R228 += 1 };
  s1 -> s3 [65, 65] { R336 += 1, R227 += 1, R228 += 1 };
  s1 -> s1 [66, 65535] { R336 += 1, R227 += 1, R228 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R336 += 1, R227 += 1, R228 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_54 {
  init s0;
  s0 -> s1 [0, 64] { R338 += 1, R237 += 1, R238 += 1 };
  s0 -> s0 [0, 65535] { R337 += 1, R338 += 1 };
  s0 -> s2 [65, 65] { R338 += 1, R237 += 1, R238 += 1 };
  s0 -> s3 [65, 65] { R338 += 1, R237 += 1, R238 += 1 };
  s0 -> s1 [66, 65535] { R338 += 1, R237 += 1, R238 += 1 };
  s1 -> s1 [0, 64] { R338 += 1, R237 += 1, R238 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R338 += 1, R237 += 1, R238 += 1 };
  s1 -> s3 [65, 65] { R338 += 1, R237 += 1, R238 += 1 };
  s1 -> s1 [66, 65535] { R338 += 1, R237 += 1, R238 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R338 += 1, R237 += 1, R238 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
};
synchronised {  // Automata constraining P4
automaton P4_0 {
  init s0;
  s0 -> s1 [97, 97];
  accepting s1;
};
};
synchronised {  // Automata constraining P12
automaton P12_0 {
  init s0;
  s0 -> s1 [100, 100];
  accepting s1;
};
};
synchronised {  // Automata constraining P52
automaton P52_0 {
  init s0;
  s0 -> s1 [106, 106];
  accepting s1;
};
};
constraint R2 = R292 && R21 - R292 = -1 && R22 = R292 && R23 - R292 = -1 && R24 = R292 && R25 = 0 && R26 = 1 && R27 = 0 && R28 = 1 && R106 + R105 + -1*R158 + -1*R154 = 0 && R121 + R119 = 0 && R122 + R120 + -1*R158 + -1*R154 = 0 && R128 + R125 + R194 + R191 + -1*R226 + -1*R222 - R156 - R160 = 0 && R157 + R153 = 0 && R159 + R155 + R225 + R221 = 0 && R245 = 0 && R246 = R292 && R247 = 0 && R248 = R292 && R249 = 0 && R250 = R292 && R251 = 0 && R252 = R292 && R253 = 0 && R254 = R292 && R255 = 0 && R256 = R292 && R257 = 0 && R258 = R292 && R259 = 0 && R260 = R292 && R261 = 0 && R262 = R292 && R263 = 0 && R264 = R292 && R265 = 0 && R266 = R292 && R267 = 0 && R268 = R292 && R269 = 0 && R270 = R292 && R271 = 0 && R272 = R292 && R273 = 0 && R274 = R292 && R275 = 0 && R276 = R292 && R277 = 0 && R278 = R292 && R279 = 0 && R280 = R292 && R281 = 0 && R282 = R292 && R283 = 0 && R284 = R292 && R285 = 0 && R286 = R292 && R287 = 0 && R288 = R292 && R289 = 0 && R290 = R292 && R291 = 0 && R11 < 1 && R12 < 1 && R108 + R107 < 1 && R134 + R131 + R200 + R197 < 1 && -1*R158 + -1*R154 < 1 && -1*R226 + -1*R222 - R156 - R160 < 1 && 0 < R292 && (R118 + R115 != 0 || ((R111 + R109 != 0 || R112 + R110 + -1*R158 + -1*R154 = 0 || R158 + R154 < 1) && (R111 + R109 = 0 || R158 + R154 < 1))) && (R118 + R115 != 0 || ((R116 + R113 != 0 || R117 + R114 + -1*R158 + -1*R154 = 0 || R158 + R154 < 1) && (R116 + R113 = 0 || R158 + R154 < 1))) && (R126 + R123 != 0 || R127 + R124 + -1*R158 + -1*R154 = 0 || (R118 + R115 = 0 && R158 + R154 = 0)) && (R132 + R129 != 0 || R133 + R130 + -1*R158 + -1*R154 = 0 || (R118 + R115 = 0 && R158 + R154 = 0)) && (R139 + R135 != 0 || R140 + R136 + -1*R158 + -1*R154 = 0 || (R118 + R115 = 0 && R158 + R154 = 0)) && (R148 + R143 != 0 || R149 + R144 + -1*R158 + -1*R154 = 0 || (R118 + R115 = 0 && R158 + R154 = 0)) && (R152 + R147 + R218 + R213 != 0 || ((R141 + R137 + R207 + R203 != 0 || R142 + R138 + R208 + R204 + -1*R226 + -1*R222 - R156 - R160 = 0 || R160 + R156 + R226 + R222 < 1) && (R141 + R137 + R207 + R203 = 0 || R160 + R156 + R226 + R222 < 1))) && (R152 + R147 + R218 + R213 != 0 || ((R150 + R145 + R216 + R211 != 0 || R151 + R146 + R217 + R212 + -1*R226 + -1*R222 - R156 - R160 = 0 || R160 + R156 + R226 + R222 < 1) && (R150 + R145 + R216 + R211 = 0 || R160 + R156 + R226 + R222 < 1))) && (R166 + R161 != 0 || R158 + R154 + -1*R167 + -1*R162 = 0 || (R118 + R115 = 0 && R158 + R154 = 0)) && (R175 + R171 != 0 || R158 + R154 + -1*R176 + -1*R172 = 0 || (R118 + R115 = 0 && R158 + R154 = 0)) && (R20 = 0 || (R293 = 0 && R294 = 0 && R295 = 0 && R296 = 0 && R297 = 0 && R298 = 0 && R299 = 0 && R300 = 0 && R301 = 0 && R302 = 0 && R303 = 0 && R304 = 0 && R305 = 0 && R306 = 0 && R307 = 0 && R308 = 0 && R309 = 0 && R310 = 0 && R311 = 0 && R312 = 0 && R313 = 0 && R314 = 0 && R315 = 0 && R316 = 0 && R317 = 0 && R318 = 0 && R319 = 0 && R320 = 0 && R321 = 0 && R322 = 0 && R323 = 0 && R324 = 0 && R325 = 0 && R326 = 0 && R327 = 0 && R328 = 0 && R329 = 0 && R330 = 0 && R331 = 0 && R332 = 0 && R333 = 0 && R334 = 0 && R335 = 0 && R336 = 0 && R337 = 0 && R338 = 0)) && (R118 + R115 = 0 || (R111 + R109 = 0 && R112 + R110 + -1*R158 + -1*R154 = 0)) && (R118 + R115 = 0 || (R116 + R113 = 0 && R117 + R114 + -1*R158 + -1*R154 = 0)) && (R126 + R123 = 0 || (R118 + R115 = 0 && R158 + R154 = 0)) && (R132 + R129 = 0 || (R118 + R115 = 0 && R158 + R154 = 0)) && (R139 + R135 = 0 || (R118 + R115 = 0 && R158 + R154 = 0)) && (R148 + R143 = 0 || (R118 + R115 = 0 && R158 + R154 = 0)) && (R152 + R147 + R218 + R213 = 0 || (R141 + R137 + R207 + R203 = 0 && R142 + R138 + R208 + R204 + -1*R226 + -1*R222 - R156 - R160 = 0)) && (R152 + R147 + R218 + R213 = 0 || (R150 + R145 + R216 + R211 = 0 && R151 + R146 + R217 + R212 + -1*R226 + -1*R222 - R156 - R160 = 0)) && (R166 + R161 = 0 || (R118 + R115 = 0 && R158 + R154 = 0)) && (R170 + R165 + R236 + R231 = 0 || (R168 + R163 + R234 + R229 = 0 && R169 + R164 + R235 + R230 = 0)) && (R170 + R165 + R236 + R231 = 0 || (R177 + R173 + R243 + R239 = 0 && R178 + R174 + R244 + R240 = 0)) && (R175 + R171 = 0 || (R118 + R115 = 0 && R158 + R154 = 0)) && (R184 + R181 = 0 || (R182 + R179 = 0 && R183 + R180 = 0)) && (R184 + R181 = 0 || (R187 + R185 = 0 && R188 + R186 = 0)) && (R184 + R181 = 0 || (R192 + R189 = 0 && R193 + R190 = 0)) && (R184 + R181 = 0 || (R198 + R195 = 0 && R199 + R196 = 0)) && (R184 + R181 = 0 || (R205 + R201 = 0 && R206 + R202 = 0)) && (R184 + R181 = 0 || (R214 + R209 = 0 && R215 + R210 = 0)) && (R184 + R181 = 0 || (R223 + R219 = 0 && R224 + R220 = 0)) && (R184 + R181 = 0 || (R232 + R227 = 0 && R233 + R228 = 0)) && (R184 + R181 = 0 || (R241 + R237 = 0 && R242 + R238 = 0));
// End of Parikh automata intersection problem
