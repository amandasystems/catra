// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R12, R17, R18, R19, R2, R20, R21, R22, R23, R24, R25, R26, R27, R3, R38, R3890, R3891, R3892, R3893, R3894, R3895, R3896, R3897, R3898, R3899, R3900, R3901, R3902, R3903, R3904, R3905, R4, R40, R4010, R4011, R4012, R4013, R4014, R4015, R4016, R4017, R4018, R4019, R4020, R4021, R4022, R4023, R4024, R4025, R4026, R4027, R4028, R4029, R4030, R4031, R4032, R4033, R4034, R4035, R4036, R4037, R4038, R4039, R4040, R4041, R4042, R4043, R4044, R4045, R4046, R4047, R4048, R4049, R4050, R4051, R4052, R4053, R4054, R4055, R4056, R4057, R4058, R4059, R4060, R4061, R4062, R4063, R4064, R4065, R4066, R4067, R4068, R4069, R4070, R4071, R4072, R4073, R4074, R4075, R4076, R4077, R4078, R4079, R4080, R4081, R4082, R4083, R4084, R4085, R4086, R4087, R4088, R4089, R4090, R4091, R4092, R4093, R4094, R4095, R4096, R4097, R4098, R4099, R4100, R4101, R4102, R4103, R4104, R4105, R4106, R4107, R4108, R4109, R4110, R4111, R4112, R4113, R42, R43, R46, R47, R48, R52, R53, R56, R57, R58, R62, R63, R66, R67, R68, R69, R70, R71, R72, R73, R8;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [84, 84];
  s0 -> s0 [85, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [84, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R2 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R11 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 83];
  s0 -> s0 [0, 65535] { R12 += 1 };
  s0 -> s2 [84, 84];
  s0 -> s1 [85, 65535];
  s1 -> s1 [0, 83];
  s1 -> s2 [84, 84];
  s1 -> s1 [85, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R21 += 1 };
  s0 -> s0 [0, 65535] { R20 += 1, R21 += 1 };
  s0 -> s2 [9, 13] { R21 += 1 };
  s0 -> s1 [14, 31] { R21 += 1 };
  s0 -> s2 [32, 32] { R21 += 1 };
  s0 -> s1 [33, 65535] { R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R21 += 1 };
  s2 -> s1 [0, 65535] { R21 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s0 [0, 65535] { R22 += 1, R23 += 1 };
  s0 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R25 += 1 };
  s0 -> s0 [0, 65535] { R24 += 1, R25 += 1 };
  s0 -> s2 [9, 13] { R25 += 1 };
  s0 -> s1 [14, 31] { R25 += 1 };
  s0 -> s2 [32, 32] { R25 += 1 };
  s0 -> s1 [33, 65535] { R25 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R25 += 1 };
  s2 -> s1 [0, 65535] { R25 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R26 += 1, R27 += 1 };
  s0 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s1 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R4035 += 1, R19 += 1 };
  s0 -> s0 [0, 65535] { R4034 += 1, R4035 += 1 };
  s1 -> s1 [0, 65535] { R4035 += 1, R19 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 83] { R4037 += 1 };
  s0 -> s0 [0, 65535] { R4036 += 1, R4037 += 1 };
  s0 -> s2 [84, 84] { R4037 += 1 };
  s0 -> s3 [84, 84] { R4037 += 1 };
  s0 -> s1 [86, 65535] { R4037 += 1 };
  s1 -> s1 [0, 83] { R4037 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R4037 += 1 };
  s1 -> s3 [84, 84] { R4037 += 1 };
  s1 -> s1 [86, 65535] { R4037 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 84] { R4037 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [86, 65535] { R4037 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 83] { R4039 += 1, R38 += 1 };
  s0 -> s0 [0, 65535] { R4038 += 1, R4039 += 1 };
  s0 -> s2 [84, 84] { R4039 += 1, R38 += 1 };
  s0 -> s3 [84, 84] { R4039 += 1, R38 += 1 };
  s0 -> s1 [85, 65535] { R4039 += 1, R38 += 1 };
  s1 -> s1 [0, 83] { R4039 += 1, R38 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R4039 += 1, R38 += 1 };
  s1 -> s3 [84, 84] { R4039 += 1, R38 += 1 };
  s1 -> s1 [85, 65535] { R4039 += 1, R38 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4039 += 1, R38 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 83] { R4041 += 1, R40 += 1 };
  s0 -> s0 [0, 65535] { R4040 += 1, R4041 += 1 };
  s0 -> s2 [84, 84] { R4041 += 1, R40 += 1 };
  s0 -> s3 [84, 84] { R4041 += 1, R40 += 1 };
  s0 -> s1 [85, 65535] { R4041 += 1, R40 += 1 };
  s1 -> s1 [0, 83] { R4041 += 1, R40 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R4041 += 1, R40 += 1 };
  s1 -> s3 [84, 84] { R4041 += 1, R40 += 1 };
  s1 -> s1 [85, 65535] { R4041 += 1, R40 += 1 };
  s2 -> s2 [0, 65535] { R4041 += 1, R40 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 83] { R4043 += 1, R42 += 1, R43 += 1 };
  s0 -> s0 [0, 65535] { R4042 += 1, R4043 += 1 };
  s0 -> s2 [84, 84] { R4043 += 1, R42 += 1, R43 += 1 };
  s0 -> s3 [84, 84] { R4043 += 1, R42 += 1, R43 += 1 };
  s0 -> s1 [85, 65535] { R4043 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 83] { R4043 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R4043 += 1, R42 += 1, R43 += 1 };
  s1 -> s3 [84, 84] { R4043 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [85, 65535] { R4043 += 1, R42 += 1, R43 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4043 += 1, R42 += 1, R43 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 83] { R4045 += 1, R46 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R4044 += 1, R4045 += 1 };
  s0 -> s2 [84, 84] { R4045 += 1, R46 += 1, R47 += 1 };
  s0 -> s3 [84, 84] { R4045 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [85, 65535] { R4045 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 83] { R4045 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R4045 += 1, R46 += 1, R47 += 1 };
  s1 -> s3 [84, 84] { R4045 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [85, 65535] { R4045 += 1, R46 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4045 += 1, R46 += 1, R47 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 83] { R4047 += 1, R52 += 1, R53 += 1 };
  s0 -> s0 [0, 65535] { R4046 += 1, R4047 += 1 };
  s0 -> s2 [84, 84] { R4047 += 1, R52 += 1, R53 += 1 };
  s0 -> s3 [84, 84] { R4047 += 1, R52 += 1, R53 += 1 };
  s0 -> s1 [85, 65535] { R4047 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 83] { R4047 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R4047 += 1, R52 += 1, R53 += 1 };
  s1 -> s3 [84, 84] { R4047 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [85, 65535] { R4047 += 1, R52 += 1, R53 += 1 };
  s2 -> s2 [0, 65535] { R4047 += 1, R52 += 1, R53 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 83] { R4049 += 1, R56 += 1, R57 += 1 };
  s0 -> s0 [0, 65535] { R4048 += 1, R4049 += 1 };
  s0 -> s2 [84, 84] { R4049 += 1, R56 += 1, R57 += 1 };
  s0 -> s3 [84, 84] { R4049 += 1, R56 += 1, R57 += 1 };
  s0 -> s1 [85, 65535] { R4049 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 83] { R4049 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R4049 += 1, R56 += 1, R57 += 1 };
  s1 -> s3 [84, 84] { R4049 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [85, 65535] { R4049 += 1, R56 += 1, R57 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4049 += 1, R56 += 1, R57 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 83] { R4051 += 1, R62 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R4050 += 1, R4051 += 1 };
  s0 -> s2 [84, 84] { R4051 += 1, R62 += 1, R63 += 1 };
  s0 -> s3 [84, 84] { R4051 += 1, R62 += 1, R63 += 1 };
  s0 -> s1 [85, 65535] { R4051 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 83] { R4051 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R4051 += 1, R62 += 1, R63 += 1 };
  s1 -> s3 [84, 84] { R4051 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [85, 65535] { R4051 += 1, R62 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R4051 += 1, R62 += 1, R63 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 83] { R4071 += 1 };
  s0 -> s0 [0, 65535] { R4070 += 1, R4071 += 1 };
  s0 -> s2 [84, 84] { R4071 += 1 };
  s0 -> s1 [85, 65535] { R4071 += 1 };
  s1 -> s1 [0, 83] { R4071 += 1 };
  s1 -> s2 [84, 84] { R4071 += 1 };
  s1 -> s1 [85, 65535] { R4071 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4071 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R4073 += 1, R1 += 1 };
  s0 -> s0 [0, 65535] { R4072 += 1, R4073 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R4073 += 1, R1 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 83] { R4075 += 1 };
  s0 -> s0 [0, 65535] { R4074 += 1, R4075 += 1 };
  s0 -> s2 [0, 65535] { R4075 += 1, R8 += 1 };
  s0 -> s3 [84, 84] { R4075 += 1 };
  s0 -> s1 [85, 65535] { R4075 += 1 };
  s1 -> s1 [0, 83] { R4075 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [84, 84] { R4075 += 1 };
  s1 -> s1 [85, 65535] { R4075 += 1 };
  s2 -> s1 [0, 83] { R4075 += 1 };
  s2 -> s2 [0, 65535] { R4075 += 1, R8 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [84, 84] { R4075 += 1 };
  s2 -> s1 [85, 65535] { R4075 += 1 };
  s3 -> s3 [0, 65535] { R4075 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 83] { R4077 += 1, R4015 += 1 };
  s0 -> s0 [0, 65535] { R4076 += 1, R4077 += 1 };
  s0 -> s2 [0, 65535] { R4077 += 1, R4014 += 1, R4015 += 1 };
  s0 -> s1 [85, 65535] { R4077 += 1, R4015 += 1 };
  s1 -> s1 [0, 83] { R4077 += 1, R4015 += 1 };
  s1 -> s1 [0, 65535] { R4077 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [85, 65535] { R4077 += 1, R4015 += 1 };
  s2 -> s1 [0, 83] { R4077 += 1, R4015 += 1 };
  s2 -> s2 [0, 65535] { R4077 += 1, R4014 += 1, R4015 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [85, 65535] { R4077 += 1, R4015 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s0 [0, 65535] { R4078 += 1, R4079 += 1 };
  s0 -> s1 [0, 65535] { R4079 += 1, R4016 += 1, R4017 += 1 };
  s0 -> s2 [0, 65535] { R4079 += 1, R4017 += 1, R17 += 1 };
  s1 -> s1 [0, 65535] { R4079 += 1, R4016 += 1, R4017 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R4079 += 1, R4017 += 1, R17 += 1 };
  s2 -> s3 [0, 65535] { R4079 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4079 += 1, R4017 += 1, R17 += 1 };
  s3 -> s3 [0, 65535] { R4079 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 65535] { R4081 += 1, R4019 += 1 };
  s0 -> s2 [0, 65535] { R4081 += 1, R4018 += 1, R4019 += 1 };
  s0 -> s0 [0, 65535] { R4080 += 1, R4081 += 1 };
  s1 -> s4 [0, 65535] { R4081 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4081 += 1, R4019 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4081 += 1, R4019 += 1 };
  s2 -> s2 [0, 65535] { R4081 += 1, R4018 += 1, R4019 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4081 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R4083 += 1, R4020 += 1, R4021 += 1 };
  s0 -> s0 [0, 65535] { R4082 += 1, R4083 += 1 };
  s0 -> s2 [0, 65535] { R4083 += 1, R4021 += 1, R67 += 1 };
  s1 -> s1 [0, 65535] { R4083 += 1, R4020 += 1, R4021 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R4083 += 1, R4021 += 1, R67 += 1 };
  s2 -> s3 [0, 65535] { R4083 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4083 += 1, R4021 += 1, R67 += 1 };
  s3 -> s3 [0, 65535] { R4083 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 84] { R4085 += 1, R4023 += 1 };
  s0 -> s0 [0, 65535] { R4084 += 1, R4085 += 1 };
  s0 -> s2 [0, 65535] { R4085 += 1, R4023 += 1, R69 += 1 };
  s0 -> s3 [0, 65535] { R4085 += 1, R4022 += 1, R4023 += 1 };
  s0 -> s1 [86, 65535] { R4085 += 1, R4023 += 1 };
  s1 -> s1 [0, 84] { R4085 += 1, R4023 += 1 };
  s1 -> s1 [0, 65535] { R4085 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [86, 65535] { R4085 += 1, R4023 += 1 };
  s2 -> s1 [0, 84] { R4085 += 1, R4023 += 1 };
  s2 -> s5 [0, 65535] { R4085 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4085 += 1, R4023 += 1, R69 += 1 };
  s2 -> s1 [86, 65535] { R4085 += 1, R4023 += 1 };
  s3 -> s1 [0, 84] { R4085 += 1, R4023 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R4085 += 1, R4023 += 1, R69 += 1 };
  s3 -> s3 [0, 65535] { R4085 += 1, R4022 += 1, R4023 += 1 };
  s3 -> s1 [86, 65535] { R4085 += 1, R4023 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4085 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 84] { R4087 += 1, R4025 += 1, R73 += 1 };
  s0 -> s2 [0, 65535] { R4087 += 1, R4024 += 1, R4025 += 1 };
  s0 -> s0 [0, 65535] { R4086 += 1, R4087 += 1 };
  s0 -> s3 [0, 65535] { R4087 += 1, R4025 += 1, R72 += 1, R73 += 1 };
  s0 -> s1 [86, 65535] { R4087 += 1, R4025 += 1, R73 += 1 };
  s1 -> s1 [0, 84] { R4087 += 1, R4025 += 1, R73 += 1 };
  s1 -> s4 [0, 65535] { R4087 += 1 };
  s1 -> s1 [0, 65535] { R4087 += 1, R4025 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [86, 65535] { R4087 += 1, R4025 += 1, R73 += 1 };
  s2 -> s1 [0, 84] { R4087 += 1, R4025 += 1, R73 += 1 };
  s2 -> s2 [0, 65535] { R4087 += 1, R4024 += 1, R4025 += 1 };
  s2 -> s3 [0, 65535] { R4087 += 1, R4025 += 1, R72 += 1, R73 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [86, 65535] { R4087 += 1, R4025 += 1, R73 += 1 };
  s3 -> s1 [0, 84] { R4087 += 1, R4025 += 1, R73 += 1 };
  s3 -> s4 [0, 65535] { R4087 += 1 };
  s3 -> s3 [0, 65535] { R4087 += 1, R4025 += 1, R72 += 1, R73 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [86, 65535] { R4087 += 1, R4025 += 1, R73 += 1 };
  s4 -> s4 [0, 65535] { R4087 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R4089 += 1, R4026 += 1, R4027 += 1 };
  s0 -> s2 [0, 65535] { R4089 += 1, R4027 += 1 };
  s0 -> s3 [0, 65535] { R4089 += 1, R4027 += 1, R3894 += 1, R3895 += 1 };
  s0 -> s0 [0, 65535] { R4088 += 1, R4089 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R4089 += 1, R4026 += 1, R4027 += 1 };
  s1 -> s2 [0, 65535] { R4089 += 1, R4027 += 1 };
  s1 -> s3 [0, 65535] { R4089 += 1, R4027 += 1, R3894 += 1, R3895 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4089 += 1, R4027 += 1 };
  s2 -> s5 [0, 65535] { R4089 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R4089 += 1, R4027 += 1 };
  s3 -> s3 [0, 65535] { R4089 += 1, R4027 += 1, R3894 += 1, R3895 += 1 };
  s3 -> s5 [0, 65535] { R4089 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4089 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 85] { R4091 += 1, R4029 += 1, R3899 += 1 };
  s0 -> s2 [0, 65535] { R4091 += 1, R4028 += 1, R4029 += 1 };
  s0 -> s1 [0, 65535] { R4091 += 1, R4029 += 1 };
  s0 -> s0 [0, 65535] { R4090 += 1, R4091 += 1 };
  s0 -> s1 [88, 65535] { R4091 += 1, R4029 += 1, R3899 += 1 };
  s1 -> s1 [0, 85] { R4091 += 1, R4029 += 1, R3899 += 1 };
  s1 -> s1 [0, 65535] { R4091 += 1, R4029 += 1 };
  s1 -> s4 [0, 65535] { R4091 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [88, 65535] { R4091 += 1, R4029 += 1, R3899 += 1 };
  s2 -> s1 [0, 85] { R4091 += 1, R4029 += 1, R3899 += 1 };
  s2 -> s2 [0, 65535] { R4091 += 1, R4028 += 1, R4029 += 1 };
  s2 -> s1 [0, 65535] { R4091 += 1, R4029 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [88, 65535] { R4091 += 1, R4029 += 1, R3899 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4091 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s0 [0, 65535] { R4092 += 1, R4093 += 1 };
  s0 -> s1 [0, 65535] { R4093 += 1, R4031 += 1, R3904 += 1, R3905 += 1 };
  s0 -> s2 [0, 65535] { R4093 += 1, R4031 += 1, R3903 += 1, R3904 += 1 };
  s0 -> s3 [0, 65535] { R4093 += 1, R4030 += 1, R4031 += 1 };
  s1 -> s5 [0, 65535] { R4093 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R4093 += 1, R4031 += 1, R3904 += 1, R3905 += 1 };
  s1 -> s6 [0, 65535] { R4093 += 1, R4031 += 1 };
  s2 -> s5 [0, 65535] { R4093 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R4093 += 1, R4031 += 1, R3904 += 1, R3905 += 1 };
  s2 -> s2 [0, 65535] { R4093 += 1, R4031 += 1, R3903 += 1, R3904 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R4093 += 1, R4031 += 1, R3904 += 1, R3905 += 1 };
  s3 -> s2 [0, 65535] { R4093 += 1, R4031 += 1, R3903 += 1, R3904 += 1 };
  s3 -> s3 [0, 65535] { R4093 += 1, R4030 += 1, R4031 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4093 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R4093 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R4093 += 1, R4031 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 84] { R4095 += 1, R4033 += 1, R4013 += 1 };
  s0 -> s2 [0, 65535] { R4095 += 1, R4032 += 1, R4033 += 1 };
  s0 -> s1 [0, 65535] { R4095 += 1, R4033 += 1 };
  s0 -> s0 [0, 65535] { R4094 += 1, R4095 += 1 };
  s0 -> s3 [85, 85] { R4095 += 1, R4033 += 1, R4013 += 1 };
  s0 -> s4 [85, 85] { R4095 += 1, R4033 += 1, R4013 += 1 };
  s0 -> s1 [89, 65535] { R4095 += 1, R4033 += 1, R4013 += 1 };
  s1 -> s1 [0, 84] { R4095 += 1, R4033 += 1, R4013 += 1 };
  s1 -> s1 [0, 65535] { R4095 += 1, R4033 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R4095 += 1 };
  s1 -> s3 [85, 85] { R4095 += 1, R4033 += 1, R4013 += 1 };
  s1 -> s4 [85, 85] { R4095 += 1, R4033 += 1, R4013 += 1 };
  s1 -> s1 [89, 65535] { R4095 += 1, R4033 += 1, R4013 += 1 };
  s2 -> s1 [0, 84] { R4095 += 1, R4033 += 1, R4013 += 1 };
  s2 -> s2 [0, 65535] { R4095 += 1, R4032 += 1, R4033 += 1 };
  s2 -> s1 [0, 65535] { R4095 += 1, R4033 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [85, 85] { R4095 += 1, R4033 += 1, R4013 += 1 };
  s2 -> s4 [85, 85] { R4095 += 1, R4033 += 1, R4013 += 1 };
  s2 -> s1 [89, 65535] { R4095 += 1, R4033 += 1, R4013 += 1 };
  s3 -> s3 [0, 85] { R4095 += 1, R4033 += 1, R4013 += 1 };
  s3 -> s3 [0, 65535] { R4095 += 1, R4033 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R4095 += 1 };
  s3 -> s3 [89, 65535] { R4095 += 1, R4033 += 1, R4013 += 1 };
  s4 -> s4 [0, 65535] { R4095 += 1, R4033 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4095 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4095 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R4097 += 1, R4052 += 1, R4053 += 1 };
  s0 -> s0 [0, 65535] { R4096 += 1, R4097 += 1 };
  s0 -> s2 [0, 65535] { R4097 += 1, R4053 += 1, R18 += 1 };
  s1 -> s1 [0, 65535] { R4097 += 1, R4052 += 1, R4053 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R4097 += 1, R4053 += 1, R18 += 1 };
  s2 -> s3 [0, 65535] { R4097 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4097 += 1, R4053 += 1, R18 += 1 };
  s3 -> s3 [0, 65535] { R4097 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 83] { R4099 += 1, R4055 += 1 };
  s0 -> s2 [0, 65535] { R4099 += 1, R4054 += 1, R4055 += 1 };
  s0 -> s0 [0, 65535] { R4098 += 1, R4099 += 1 };
  s0 -> s3 [84, 84] { R4099 += 1, R4055 += 1 };
  s0 -> s4 [84, 84] { R4099 += 1, R4055 += 1 };
  s0 -> s5 [85, 85] { R4099 += 1, R4055 += 1 };
  s0 -> s1 [86, 65535] { R4099 += 1, R4055 += 1 };
  s1 -> s1 [0, 83] { R4099 += 1, R4055 += 1 };
  s1 -> s3 [84, 84] { R4099 += 1, R4055 += 1 };
  s1 -> s4 [84, 84] { R4099 += 1, R4055 += 1 };
  s1 -> s5 [85, 85] { R4099 += 1, R4055 += 1 };
  s1 -> s1 [86, 65535] { R4099 += 1, R4055 += 1 };
  s2 -> s1 [0, 83] { R4099 += 1, R4055 += 1 };
  s2 -> s2 [0, 65535] { R4099 += 1, R4054 += 1, R4055 += 1 };
  s2 -> s3 [84, 84] { R4099 += 1, R4055 += 1 };
  s2 -> s4 [84, 84] { R4099 += 1, R4055 += 1 };
  s2 -> s5 [85, 85] { R4099 += 1, R4055 += 1 };
  s2 -> s1 [86, 65535] { R4099 += 1, R4055 += 1 };
  s4 -> s4 [0, 84] { R4099 += 1, R4055 += 1 };
  s4 -> s8 [85, 85] { R4099 += 1, R4055 += 1 };
  s4 -> s4 [86, 65535] { R4099 += 1, R4055 += 1 };
  s5 -> s5 [0, 83] { R4099 += 1, R4055 += 1 };
  s5 -> s5 [0, 65535] { R4099 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [84, 84] { R4099 += 1, R4055 += 1 };
  s5 -> s8 [84, 84] { R4099 += 1, R4055 += 1 };
  s5 -> s5 [85, 65535] { R4099 += 1, R4055 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4099 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R4099 += 1, R4055 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s9 [0, 65535] { R4099 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s9 [0, 65535] { R4099 += 1 };
  accepting s8, s5, s9, s6, s7;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 83] { R4101 += 1, R4057 += 1, R66 += 1 };
  s0 -> s2 [0, 65535] { R4101 += 1, R4056 += 1, R4057 += 1 };
  s0 -> s0 [0, 65535] { R4100 += 1, R4101 += 1 };
  s0 -> s3 [84, 84] { R4101 += 1, R4057 += 1, R66 += 1 };
  s0 -> s4 [84, 84] { R4101 += 1, R4057 += 1, R66 += 1 };
  s0 -> s1 [85, 65535] { R4101 += 1, R4057 += 1, R66 += 1 };
  s1 -> s1 [0, 83] { R4101 += 1, R4057 += 1, R66 += 1 };
  s1 -> s1 [0, 65535] { R4101 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [84, 84] { R4101 += 1, R4057 += 1, R66 += 1 };
  s1 -> s4 [84, 84] { R4101 += 1, R4057 += 1, R66 += 1 };
  s1 -> s1 [85, 65535] { R4101 += 1, R4057 += 1, R66 += 1 };
  s2 -> s1 [0, 83] { R4101 += 1, R4057 += 1, R66 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4101 += 1, R4056 += 1, R4057 += 1 };
  s2 -> s3 [84, 84] { R4101 += 1, R4057 += 1, R66 += 1 };
  s2 -> s4 [84, 84] { R4101 += 1, R4057 += 1, R66 += 1 };
  s2 -> s1 [85, 65535] { R4101 += 1, R4057 += 1, R66 += 1 };
  s3 -> s3 [0, 65535] { R4101 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4101 += 1 };
  s4 -> s4 [0, 65535] { R4101 += 1, R4057 += 1, R66 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4101 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 83] { R4103 += 1, R4059 += 1, R68 += 1 };
  s0 -> s2 [0, 65535] { R4103 += 1, R4058 += 1, R4059 += 1 };
  s0 -> s0 [0, 65535] { R4102 += 1, R4103 += 1 };
  s0 -> s3 [84, 84] { R4103 += 1, R4059 += 1, R68 += 1 };
  s0 -> s4 [84, 84] { R4103 += 1, R4059 += 1, R68 += 1 };
  s0 -> s1 [85, 65535] { R4103 += 1, R4059 += 1, R68 += 1 };
  s1 -> s1 [0, 83] { R4103 += 1, R4059 += 1, R68 += 1 };
  s1 -> s1 [0, 65535] { R4103 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [84, 84] { R4103 += 1, R4059 += 1, R68 += 1 };
  s1 -> s4 [84, 84] { R4103 += 1, R4059 += 1, R68 += 1 };
  s1 -> s1 [85, 65535] { R4103 += 1, R4059 += 1, R68 += 1 };
  s2 -> s1 [0, 83] { R4103 += 1, R4059 += 1, R68 += 1 };
  s2 -> s2 [0, 65535] { R4103 += 1, R4058 += 1, R4059 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [84, 84] { R4103 += 1, R4059 += 1, R68 += 1 };
  s2 -> s4 [84, 84] { R4103 += 1, R4059 += 1, R68 += 1 };
  s2 -> s1 [85, 65535] { R4103 += 1, R4059 += 1, R68 += 1 };
  s3 -> s3 [0, 65535] { R4103 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4103 += 1 };
  s4 -> s4 [0, 65535] { R4103 += 1, R4059 += 1, R68 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4103 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 83] { R4105 += 1, R4061 += 1, R70 += 1, R71 += 1 };
  s0 -> s0 [0, 65535] { R4104 += 1, R4105 += 1 };
  s0 -> s2 [0, 65535] { R4105 += 1, R4060 += 1, R4061 += 1 };
  s0 -> s3 [84, 84] { R4105 += 1, R4061 += 1, R70 += 1, R71 += 1 };
  s0 -> s4 [84, 84] { R4105 += 1, R4061 += 1, R70 += 1, R71 += 1 };
  s0 -> s1 [85, 65535] { R4105 += 1, R4061 += 1, R70 += 1, R71 += 1 };
  s1 -> s1 [0, 83] { R4105 += 1, R4061 += 1, R70 += 1, R71 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R4105 += 1 };
  s1 -> s3 [84, 84] { R4105 += 1, R4061 += 1, R70 += 1, R71 += 1 };
  s1 -> s4 [84, 84] { R4105 += 1, R4061 += 1, R70 += 1, R71 += 1 };
  s1 -> s1 [85, 65535] { R4105 += 1, R4061 += 1, R70 += 1, R71 += 1 };
  s2 -> s1 [0, 83] { R4105 += 1, R4061 += 1, R70 += 1, R71 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R4105 += 1, R4060 += 1, R4061 += 1 };
  s2 -> s3 [84, 84] { R4105 += 1, R4061 += 1, R70 += 1, R71 += 1 };
  s2 -> s4 [84, 84] { R4105 += 1, R4061 += 1, R70 += 1, R71 += 1 };
  s2 -> s1 [85, 65535] { R4105 += 1, R4061 += 1, R70 += 1, R71 += 1 };
  s3 -> s3 [0, 65535] { R4105 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R4105 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4105 += 1, R4061 += 1, R70 += 1, R71 += 1 };
  s5 -> s5 [0, 65535] { R4105 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 83] { R4107 += 1, R4063 += 1, R3890 += 1, R3891 += 1 };
  s0 -> s2 [0, 83] { R4107 += 1, R4063 += 1, R3891 += 1, R3892 += 1 };
  s0 -> s0 [0, 65535] { R4106 += 1, R4107 += 1 };
  s0 -> s3 [0, 65535] { R4107 += 1, R4062 += 1, R4063 += 1 };
  s0 -> s4 [84, 84] { R4107 += 1, R4063 += 1, R3891 += 1, R3892 += 1 };
  s0 -> s5 [84, 84] { R4107 += 1, R4063 += 1, R3891 += 1, R3892 += 1 };
  s0 -> s6 [84, 84] { R4107 += 1, R4063 += 1, R3890 += 1, R3891 += 1 };
  s0 -> s7 [84, 84] { R4107 += 1, R4063 += 1, R3890 += 1, R3891 += 1 };
  s0 -> s1 [85, 65535] { R4107 += 1, R4063 += 1, R3890 += 1, R3891 += 1 };
  s0 -> s2 [85, 65535] { R4107 += 1, R4063 += 1, R3891 += 1, R3892 += 1 };
  s1 -> s1 [0, 83] { R4107 += 1, R4063 += 1, R3890 += 1, R3891 += 1 };
  s1 -> s2 [0, 83] { R4107 += 1, R4063 += 1, R3891 += 1, R3892 += 1 };
  s1 -> s4 [84, 84] { R4107 += 1, R4063 += 1, R3891 += 1, R3892 += 1 };
  s1 -> s5 [84, 84] { R4107 += 1, R4063 += 1, R3891 += 1, R3892 += 1 };
  s1 -> s6 [84, 84] { R4107 += 1, R4063 += 1, R3890 += 1, R3891 += 1 };
  s1 -> s7 [84, 84] { R4107 += 1, R4063 += 1, R3890 += 1, R3891 += 1 };
  s1 -> s1 [85, 65535] { R4107 += 1, R4063 += 1, R3890 += 1, R3891 += 1 };
  s1 -> s2 [85, 65535] { R4107 += 1, R4063 += 1, R3891 += 1, R3892 += 1 };
  s2 -> s2 [0, 83] { R4107 += 1, R4063 += 1, R3891 += 1, R3892 += 1 };
  s2 -> s2 [0, 65535] { R4107 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [84, 84] { R4107 += 1, R4063 += 1, R3891 += 1, R3892 += 1 };
  s2 -> s5 [84, 84] { R4107 += 1, R4063 += 1, R3891 += 1, R3892 += 1 };
  s2 -> s2 [85, 65535] { R4107 += 1, R4063 += 1, R3891 += 1, R3892 += 1 };
  s3 -> s1 [0, 83] { R4107 += 1, R4063 += 1, R3890 += 1, R3891 += 1 };
  s3 -> s2 [0, 83] { R4107 += 1, R4063 += 1, R3891 += 1, R3892 += 1 };
  s3 -> s3 [0, 65535] { R4107 += 1, R4062 += 1, R4063 += 1 };
  s3 -> s4 [84, 84] { R4107 += 1, R4063 += 1, R3891 += 1, R3892 += 1 };
  s3 -> s5 [84, 84] { R4107 += 1, R4063 += 1, R3891 += 1, R3892 += 1 };
  s3 -> s6 [84, 84] { R4107 += 1, R4063 += 1, R3890 += 1, R3891 += 1 };
  s3 -> s7 [84, 84] { R4107 += 1, R4063 += 1, R3890 += 1, R3891 += 1 };
  s3 -> s1 [85, 65535] { R4107 += 1, R4063 += 1, R3890 += 1, R3891 += 1 };
  s3 -> s2 [85, 65535] { R4107 += 1, R4063 += 1, R3891 += 1, R3892 += 1 };
  s4 -> s4 [0, 65535] { R4107 += 1, R4063 += 1, R3891 += 1, R3892 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s9 [0, 65535] { R4107 += 1 };
  s5 -> s5 [0, 65535] { R4107 += 1 };
  s5 -> s8 [0, 65535];
  s7 -> s4 [0, 65535] { R4107 += 1, R4063 += 1, R3891 += 1, R3892 += 1 };
  s7 -> s7 [0, 65535] { R4107 += 1, R4063 += 1, R3890 += 1, R3891 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R4107 += 1 };
  accepting s4, s8, s5, s2, s9;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 83] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s0 -> s2 [0, 83] { R4109 += 1, R4065 += 1, R3896 += 1, R3897 += 1 };
  s0 -> s0 [0, 65535] { R4108 += 1, R4109 += 1 };
  s0 -> s3 [0, 65535] { R4109 += 1, R4064 += 1, R4065 += 1 };
  s0 -> s4 [84, 84] { R4109 += 1, R4065 += 1, R3896 += 1, R3897 += 1 };
  s0 -> s5 [84, 84] { R4109 += 1, R4065 += 1, R3896 += 1, R3897 += 1 };
  s0 -> s6 [84, 84] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s0 -> s7 [84, 84] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s0 -> s1 [85, 85] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s0 -> s2 [85, 65535] { R4109 += 1, R4065 += 1, R3896 += 1, R3897 += 1 };
  s0 -> s8 [88, 88] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s0 -> s1 [89, 65535] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s1 -> s1 [0, 83] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s1 -> s6 [84, 84] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s1 -> s7 [84, 84] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s1 -> s1 [85, 85] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s1 -> s8 [88, 88] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s1 -> s1 [89, 65535] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s2 -> s1 [0, 83] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s2 -> s2 [0, 83] { R4109 += 1, R4065 += 1, R3896 += 1, R3897 += 1 };
  s2 -> s4 [84, 84] { R4109 += 1, R4065 += 1, R3896 += 1, R3897 += 1 };
  s2 -> s5 [84, 84] { R4109 += 1, R4065 += 1, R3896 += 1, R3897 += 1 };
  s2 -> s6 [84, 84] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s2 -> s7 [84, 84] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s2 -> s1 [85, 85] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s2 -> s2 [85, 65535] { R4109 += 1, R4065 += 1, R3896 += 1, R3897 += 1 };
  s2 -> s8 [88, 88] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s2 -> s1 [89, 65535] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s3 -> s1 [0, 83] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s3 -> s2 [0, 83] { R4109 += 1, R4065 += 1, R3896 += 1, R3897 += 1 };
  s3 -> s3 [0, 65535] { R4109 += 1, R4064 += 1, R4065 += 1 };
  s3 -> s4 [84, 84] { R4109 += 1, R4065 += 1, R3896 += 1, R3897 += 1 };
  s3 -> s5 [84, 84] { R4109 += 1, R4065 += 1, R3896 += 1, R3897 += 1 };
  s3 -> s6 [84, 84] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s3 -> s7 [84, 84] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s3 -> s1 [85, 85] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s3 -> s2 [85, 65535] { R4109 += 1, R4065 += 1, R3896 += 1, R3897 += 1 };
  s3 -> s8 [88, 88] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s3 -> s1 [89, 65535] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s4 -> s6 [0, 85] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s4 -> s4 [0, 65535] { R4109 += 1, R4065 += 1, R3896 += 1, R3897 += 1 };
  s4 -> s11 [88, 88] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s4 -> s6 [89, 65535] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s6 -> s6 [0, 85] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s6 -> s11 [88, 88] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s6 -> s6 [89, 65535] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s8 -> s8 [0, 83] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R4109 += 1 };
  s8 -> s10 [84, 84] { R4109 += 1, R4065 += 1 };
  s8 -> s11 [84, 84] { R4109 += 1, R4065 += 1 };
  s8 -> s8 [85, 85] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s8 -> s8 [85, 65535] { R4109 += 1, R4065 += 1 };
  s8 -> s8 [88, 65535] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R4109 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 85] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R4109 += 1 };
  s11 -> s11 [0, 65535] { R4109 += 1, R4065 += 1 };
  s11 -> s11 [88, 65535] { R4109 += 1, R4065 += 1, R3897 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R4109 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 83] { R4111 += 1, R4067 += 1, R3900 += 1, R3901 += 1 };
  s0 -> s2 [0, 65535] { R4111 += 1, R4066 += 1, R4067 += 1 };
  s0 -> s0 [0, 65535] { R4110 += 1, R4111 += 1 };
  s0 -> s3 [84, 84] { R4111 += 1, R4067 += 1, R3900 += 1, R3901 += 1 };
  s0 -> s4 [84, 84] { R4111 += 1, R4067 += 1, R3900 += 1, R3901 += 1 };
  s0 -> s1 [85, 65535] { R4111 += 1, R4067 += 1, R3900 += 1, R3901 += 1 };
  s1 -> s1 [0, 83] { R4111 += 1, R4067 += 1, R3900 += 1, R3901 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4111 += 1 };
  s1 -> s3 [84, 84] { R4111 += 1, R4067 += 1, R3900 += 1, R3901 += 1 };
  s1 -> s4 [84, 84] { R4111 += 1, R4067 += 1, R3900 += 1, R3901 += 1 };
  s1 -> s1 [85, 65535] { R4111 += 1, R4067 += 1, R3900 += 1, R3901 += 1 };
  s2 -> s1 [0, 83] { R4111 += 1, R4067 += 1, R3900 += 1, R3901 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4111 += 1, R4066 += 1, R4067 += 1 };
  s2 -> s3 [84, 84] { R4111 += 1, R4067 += 1, R3900 += 1, R3901 += 1 };
  s2 -> s4 [84, 84] { R4111 += 1, R4067 += 1, R3900 += 1, R3901 += 1 };
  s2 -> s1 [85, 65535] { R4111 += 1, R4067 += 1, R3900 += 1, R3901 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4111 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4111 += 1, R4067 += 1, R3900 += 1, R3901 += 1 };
  s4 -> s6 [0, 65535] { R4111 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4111 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 83] { R4113 += 1, R4069 += 1, R4011 += 1 };
  s0 -> s2 [0, 83] { R4113 += 1, R4069 += 1, R4010 += 1, R4011 += 1 };
  s0 -> s0 [0, 65535] { R4112 += 1, R4113 += 1 };
  s0 -> s3 [0, 65535] { R4113 += 1, R4068 += 1, R4069 += 1 };
  s0 -> s4 [84, 84] { R4113 += 1, R4069 += 1, R4011 += 1 };
  s0 -> s5 [84, 84] { R4113 += 1, R4069 += 1, R4010 += 1, R4011 += 1 };
  s0 -> s6 [84, 84] { R4113 += 1, R4069 += 1, R4010 += 1, R4011 += 1 };
  s0 -> s7 [84, 84] { R4113 += 1, R4069 += 1, R4011 += 1 };
  s0 -> s2 [85, 65535] { R4113 += 1, R4069 += 1, R4010 += 1, R4011 += 1 };
  s0 -> s1 [89, 65535] { R4113 += 1, R4069 += 1, R4011 += 1 };
  s1 -> s1 [0, 83] { R4113 += 1, R4069 += 1, R4011 += 1 };
  s1 -> s1 [0, 65535] { R4113 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [84, 84] { R4113 += 1, R4069 += 1 };
  s1 -> s7 [84, 84] { R4113 += 1, R4069 += 1 };
  s1 -> s1 [85, 65535] { R4113 += 1, R4069 += 1 };
  s1 -> s1 [89, 65535] { R4113 += 1, R4069 += 1, R4011 += 1 };
  s2 -> s1 [0, 83] { R4113 += 1, R4069 += 1, R4011 += 1 };
  s2 -> s2 [0, 83] { R4113 += 1, R4069 += 1, R4010 += 1, R4011 += 1 };
  s2 -> s4 [84, 84] { R4113 += 1, R4069 += 1, R4011 += 1 };
  s2 -> s5 [84, 84] { R4113 += 1, R4069 += 1, R4010 += 1, R4011 += 1 };
  s2 -> s6 [84, 84] { R4113 += 1, R4069 += 1, R4010 += 1, R4011 += 1 };
  s2 -> s7 [84, 84] { R4113 += 1, R4069 += 1, R4011 += 1 };
  s2 -> s2 [85, 65535] { R4113 += 1, R4069 += 1, R4010 += 1, R4011 += 1 };
  s2 -> s1 [89, 65535] { R4113 += 1, R4069 += 1, R4011 += 1 };
  s3 -> s1 [0, 83] { R4113 += 1, R4069 += 1, R4011 += 1 };
  s3 -> s2 [0, 83] { R4113 += 1, R4069 += 1, R4010 += 1, R4011 += 1 };
  s3 -> s3 [0, 65535] { R4113 += 1, R4068 += 1, R4069 += 1 };
  s3 -> s4 [84, 84] { R4113 += 1, R4069 += 1, R4011 += 1 };
  s3 -> s5 [84, 84] { R4113 += 1, R4069 += 1, R4010 += 1, R4011 += 1 };
  s3 -> s6 [84, 84] { R4113 += 1, R4069 += 1, R4010 += 1, R4011 += 1 };
  s3 -> s7 [84, 84] { R4113 += 1, R4069 += 1, R4011 += 1 };
  s3 -> s2 [85, 65535] { R4113 += 1, R4069 += 1, R4010 += 1, R4011 += 1 };
  s3 -> s1 [89, 65535] { R4113 += 1, R4069 += 1, R4011 += 1 };
  s4 -> s4 [0, 65535] { R4113 += 1 };
  s4 -> s8 [0, 65535];
  s6 -> s7 [0, 84] { R4113 += 1, R4069 += 1, R4011 += 1 };
  s6 -> s6 [0, 65535] { R4113 += 1, R4069 += 1, R4010 += 1, R4011 += 1 };
  s6 -> s7 [89, 65535] { R4113 += 1, R4069 += 1, R4011 += 1 };
  s7 -> s7 [0, 84] { R4113 += 1, R4069 += 1, R4011 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R4113 += 1 };
  s7 -> s7 [0, 65535] { R4113 += 1, R4069 += 1 };
  s7 -> s7 [89, 65535] { R4113 += 1, R4069 += 1, R4011 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R4113 += 1 };
  accepting s4, s8, s9, s1, s7;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [116, 116];
  accepting s1;
};
};
synchronised {  // Automata constraining P62
automaton P62_0 {
  init s0;
  s0 -> s1 [117, 117];
  accepting s1;
};
};
constraint R2 = R4113 && R20 - R4113 = -1 && R21 = R4113 && R22 - R4113 = -1 && R23 = R4113 && R24 = 0 && R25 = 1 && R26 = 0 && R27 = 1 && R38 + R67 + R66 + -1*R3899 + -1*R3897 - R53 = 0 && R52 + R3898 + R3896 = 0 && R4054 = 0 && R4055 = 0 && R4062 = 0 && R4063 = 0 && R4064 = 0 && R4065 = 0 && R4068 = 0 && R4069 = 0 && R4070 = 0 && R4071 = R4113 && R4072 = 0 && R4073 = R4113 && R4074 = 0 && R4075 = R4113 && R4076 = 0 && R4077 = R4113 && R4078 = 0 && R4079 = R4113 && R4080 = 0 && R4081 = R4113 && R4082 = 0 && R4083 = R4113 && R4084 = 0 && R4085 = R4113 && R4086 = 0 && R4087 = R4113 && R4088 = 0 && R4089 = R4113 && R4090 = 0 && R4091 = R4113 && R4092 = 0 && R4093 = R4113 && R4094 = 0 && R4095 = R4113 && R4096 = 0 && R4097 = R4113 && R4098 = 0 && R4099 = R4113 && R4100 = 0 && R4101 = R4113 && R4102 = 0 && R4103 = R4113 && R4104 = 0 && R4105 = R4113 && R4106 = 0 && R4107 = R4113 && R4108 = 0 && R4109 = R4113 && R4110 = 0 && R4111 = R4113 && R4112 = 0 && -1 < R1 && R8 < 1 && R11 < 1 && R12 < 1 && R40 + R69 + R68 < 1 && -1*R3899 + -1*R3897 - R53 < 1 && 0 < R4113 && (R1 != 0 || R17 = 0 || (R4014 = 0 && R4015 = 0)) && (R1 != 0 || R17 = 0 || (R4016 = 0 && R4017 = 0)) && (R1 != 0 || R17 = 0 || (R4018 = 0 && R4019 = 0)) && (R1 != 0 || R17 = 0 || (R4020 = 0 && R4021 = 0)) && (R1 != 0 || R17 = 0 || (R4022 = 0 && R4023 = 0)) && (R1 != 0 || R17 = 0 || (R4024 = 0 && R4025 = 0)) && (R1 != 0 || R17 = 0 || (R4026 = 0 && R4027 = 0)) && (R1 != 0 || R17 = 0 || (R4028 = 0 && R4029 = 0)) && (R1 != 0 || R17 = 0 || (R4030 = 0 && R4031 = 0)) && (R1 != 0 || R17 = 0 || (R4032 = 0 && R4033 = 0)) && (R48 + R3895 + R3892 != 0 || ((R42 + R72 + R70 != 0 || R43 + R73 + R71 + -1*R3899 + -1*R3897 - R53 = 0 || R53 + R3899 + R3897 < 1) && (R42 + R72 + R70 = 0 || R53 + R3899 + R3897 < 1))) && (R48 + R3895 + R3892 != 0 || ((R46 + R3893 + R3890 != 0 || R47 + R3894 + R3891 + -1*R3899 + -1*R3897 - R53 = 0 || R53 + R3899 + R3897 < 1) && (R46 + R3893 + R3890 = 0 || R53 + R3899 + R3897 < 1))) && (R4014 != 0 || R1 = R4015 || R1 < 1) && (R4016 != 0 || R1 = R4017 || R1 < 1) && (R4018 != 0 || R1 = R4019 || R1 < 1) && (R4020 != 0 || R1 = R4021 || R1 < 1) && (R4022 != 0 || R1 = R4023 || R1 < 1) && (R4024 != 0 || R1 = R4025 || R1 < 1) && (R4026 != 0 || R1 = R4027 || R1 < 1) && (R4028 != 0 || R1 = R4029 || R1 < 1) && (R4030 != 0 || R1 = R4031 || R1 < 1) && (R4032 != 0 || R1 = R4033 || R1 < 1) && (R18 = 0 || (R4052 = 0 && R4053 = 0)) && (R18 = 0 || (R4056 = 0 && R4057 = 0)) && (R18 = 0 || (R4058 = 0 && R4059 = 0)) && (R18 = 0 || (R4060 = 0 && R4061 = 0)) && (R18 = 0 || (R4066 = 0 && R4067 = 0)) && (R19 = 0 || (R4034 = 0 && R4035 = 0)) && (R19 = 0 || (R4036 = 0 && R4037 = 0)) && (R19 = 0 || (R4038 = 0 && R4039 = 0)) && (R19 = 0 || (R4040 = 0 && R4041 = 0)) && (R19 = 0 || (R4042 = 0 && R4043 = 0)) && (R19 = 0 || (R4044 = 0 && R4045 = 0)) && (R19 = 0 || (R4046 = 0 && R4047 = 0)) && (R19 = 0 || (R4048 = 0 && R4049 = 0)) && (R19 = 0 || (R4050 = 0 && R4051 = 0)) && (R48 + R3895 + R3892 = 0 || (R42 + R72 + R70 = 0 && R43 + R73 + R71 + -1*R3899 + -1*R3897 - R53 = 0)) && (R48 + R3895 + R3892 = 0 || (R46 + R3893 + R3890 = 0 && R47 + R3894 + R3891 + -1*R3899 + -1*R3897 - R53 = 0)) && (R58 + R3905 + R3902 = 0 || (R56 + R3903 + R3900 = 0 && R57 + R3904 + R3901 = 0)) && (R58 + R3905 + R3902 = 0 || (R62 + R4012 + R4010 = 0 && R63 + R4013 + R4011 = 0)) && (R4014 = 0 || R1 < 1) && (R4016 = 0 || R1 < 1) && (R4018 = 0 || R1 < 1) && (R4020 = 0 || R1 < 1) && (R4022 = 0 || R1 < 1) && (R4024 = 0 || R1 < 1) && (R4026 = 0 || R1 < 1) && (R4028 = 0 || R1 < 1) && (R4030 = 0 || R1 < 1) && (R4032 = 0 || R1 < 1);
// End of Parikh automata intersection problem
