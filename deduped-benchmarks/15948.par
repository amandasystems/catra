// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R11522, R11523, R11524, R11525, R12, R15342, R15343, R15344, R15345, R15346, R15347, R17, R17888, R17889, R17890, R17891, R18, R18736, R18737, R18738, R18739, R18740, R18741, R18950, R18951, R18952, R18953, R18954, R18955, R18956, R18957, R18958, R18959, R18960, R18961, R18962, R18963, R18964, R18965, R18966, R18967, R18968, R18969, R18970, R18971, R18972, R18973, R18974, R18975, R18976, R18977, R18978, R18979, R18980, R18981, R18982, R18983, R18984, R18985, R18986, R18987, R18988, R18989, R18990, R18991, R18992, R18993, R18994, R18995, R18996, R18997, R18998, R18999, R19, R19000, R19001, R19002, R19003, R19004, R19005, R19006, R19007, R19008, R19009, R19010, R19011, R19012, R19013, R19014, R19015, R19016, R19017, R19018, R19019, R19020, R19021, R19022, R19023, R19024, R19025, R19026, R19027, R19028, R19029, R19030, R19031, R19032, R19033, R19034, R19035, R19036, R19037, R19038, R19039, R19040, R19041, R19042, R19043, R19044, R19045, R19046, R19047, R19048, R19049, R19050, R19051, R19052, R19053, R2, R20, R21, R22, R23, R24, R25, R26, R27, R3, R38, R4, R40, R42, R43, R46, R47, R48, R52, R53, R56, R57, R58, R62, R63, R66, R67, R68, R69, R8;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [84, 84];
  s0 -> s0 [85, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [84, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R2 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R11 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 83];
  s0 -> s0 [0, 65535] { R12 += 1 };
  s0 -> s2 [84, 84];
  s0 -> s1 [85, 65535];
  s1 -> s1 [0, 83];
  s1 -> s2 [84, 84];
  s1 -> s1 [85, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R21 += 1 };
  s0 -> s0 [0, 65535] { R20 += 1, R21 += 1 };
  s0 -> s2 [9, 13] { R21 += 1 };
  s0 -> s1 [14, 31] { R21 += 1 };
  s0 -> s2 [32, 32] { R21 += 1 };
  s0 -> s1 [33, 65535] { R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R21 += 1 };
  s2 -> s1 [0, 65535] { R21 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s0 [0, 65535] { R22 += 1, R23 += 1 };
  s0 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R25 += 1 };
  s0 -> s0 [0, 65535] { R24 += 1, R25 += 1 };
  s0 -> s2 [9, 13] { R25 += 1 };
  s0 -> s1 [14, 31] { R25 += 1 };
  s0 -> s2 [32, 32] { R25 += 1 };
  s0 -> s1 [33, 65535] { R25 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R25 += 1 };
  s2 -> s1 [0, 65535] { R25 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R26 += 1, R27 += 1 };
  s0 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s1 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R18975 += 1, R19 += 1 };
  s0 -> s0 [0, 65535] { R18974 += 1, R18975 += 1 };
  s1 -> s1 [0, 65535] { R18975 += 1, R19 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 83] { R18977 += 1 };
  s0 -> s0 [0, 65535] { R18976 += 1, R18977 += 1 };
  s0 -> s2 [84, 84] { R18977 += 1 };
  s0 -> s3 [84, 84] { R18977 += 1 };
  s0 -> s1 [86, 65535] { R18977 += 1 };
  s1 -> s1 [0, 83] { R18977 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R18977 += 1 };
  s1 -> s3 [84, 84] { R18977 += 1 };
  s1 -> s1 [86, 65535] { R18977 += 1 };
  s2 -> s2 [0, 84] { R18977 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [86, 65535] { R18977 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 83] { R18979 += 1, R38 += 1 };
  s0 -> s0 [0, 65535] { R18978 += 1, R18979 += 1 };
  s0 -> s2 [84, 84] { R18979 += 1, R38 += 1 };
  s0 -> s3 [84, 84] { R18979 += 1, R38 += 1 };
  s0 -> s1 [85, 65535] { R18979 += 1, R38 += 1 };
  s1 -> s1 [0, 83] { R18979 += 1, R38 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R18979 += 1, R38 += 1 };
  s1 -> s3 [84, 84] { R18979 += 1, R38 += 1 };
  s1 -> s1 [85, 65535] { R18979 += 1, R38 += 1 };
  s2 -> s2 [0, 65535] { R18979 += 1, R38 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 83] { R18981 += 1, R40 += 1 };
  s0 -> s0 [0, 65535] { R18980 += 1, R18981 += 1 };
  s0 -> s2 [84, 84] { R18981 += 1, R40 += 1 };
  s0 -> s3 [84, 84] { R18981 += 1, R40 += 1 };
  s0 -> s1 [85, 65535] { R18981 += 1, R40 += 1 };
  s1 -> s1 [0, 83] { R18981 += 1, R40 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R18981 += 1, R40 += 1 };
  s1 -> s3 [84, 84] { R18981 += 1, R40 += 1 };
  s1 -> s1 [85, 65535] { R18981 += 1, R40 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R18981 += 1, R40 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 83] { R18983 += 1, R42 += 1, R43 += 1 };
  s0 -> s0 [0, 65535] { R18982 += 1, R18983 += 1 };
  s0 -> s2 [84, 84] { R18983 += 1, R42 += 1, R43 += 1 };
  s0 -> s3 [84, 84] { R18983 += 1, R42 += 1, R43 += 1 };
  s0 -> s1 [85, 65535] { R18983 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 83] { R18983 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R18983 += 1, R42 += 1, R43 += 1 };
  s1 -> s3 [84, 84] { R18983 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [85, 65535] { R18983 += 1, R42 += 1, R43 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R18983 += 1, R42 += 1, R43 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 83] { R18985 += 1, R46 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R18984 += 1, R18985 += 1 };
  s0 -> s2 [84, 84] { R18985 += 1, R46 += 1, R47 += 1 };
  s0 -> s3 [84, 84] { R18985 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [85, 65535] { R18985 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 83] { R18985 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R18985 += 1, R46 += 1, R47 += 1 };
  s1 -> s3 [84, 84] { R18985 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [85, 65535] { R18985 += 1, R46 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R18985 += 1, R46 += 1, R47 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 83] { R18987 += 1, R52 += 1, R53 += 1 };
  s0 -> s0 [0, 65535] { R18986 += 1, R18987 += 1 };
  s0 -> s2 [84, 84] { R18987 += 1, R52 += 1, R53 += 1 };
  s0 -> s3 [84, 84] { R18987 += 1, R52 += 1, R53 += 1 };
  s0 -> s1 [85, 65535] { R18987 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 83] { R18987 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R18987 += 1, R52 += 1, R53 += 1 };
  s1 -> s3 [84, 84] { R18987 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [85, 65535] { R18987 += 1, R52 += 1, R53 += 1 };
  s2 -> s2 [0, 65535] { R18987 += 1, R52 += 1, R53 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 83] { R18989 += 1, R56 += 1, R57 += 1 };
  s0 -> s0 [0, 65535] { R18988 += 1, R18989 += 1 };
  s0 -> s2 [84, 84] { R18989 += 1, R56 += 1, R57 += 1 };
  s0 -> s3 [84, 84] { R18989 += 1, R56 += 1, R57 += 1 };
  s0 -> s1 [85, 65535] { R18989 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 83] { R18989 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R18989 += 1, R56 += 1, R57 += 1 };
  s1 -> s3 [84, 84] { R18989 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [85, 65535] { R18989 += 1, R56 += 1, R57 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R18989 += 1, R56 += 1, R57 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 83] { R18991 += 1, R62 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R18990 += 1, R18991 += 1 };
  s0 -> s2 [84, 84] { R18991 += 1, R62 += 1, R63 += 1 };
  s0 -> s3 [84, 84] { R18991 += 1, R62 += 1, R63 += 1 };
  s0 -> s1 [85, 65535] { R18991 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 83] { R18991 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R18991 += 1, R62 += 1, R63 += 1 };
  s1 -> s3 [84, 84] { R18991 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [85, 65535] { R18991 += 1, R62 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R18991 += 1, R62 += 1, R63 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 83] { R19011 += 1 };
  s0 -> s0 [0, 65535] { R19010 += 1, R19011 += 1 };
  s0 -> s2 [84, 84] { R19011 += 1 };
  s0 -> s1 [85, 65535] { R19011 += 1 };
  s1 -> s1 [0, 83] { R19011 += 1 };
  s1 -> s2 [84, 84] { R19011 += 1 };
  s1 -> s1 [85, 65535] { R19011 += 1 };
  s2 -> s2 [0, 65535] { R19011 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R19012 += 1, R19013 += 1 };
  s0 -> s1 [0, 65535] { R19013 += 1, R1 += 1 };
  s1 -> s1 [0, 65535] { R19013 += 1, R1 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 83] { R19015 += 1 };
  s0 -> s2 [0, 65535] { R19015 += 1, R8 += 1 };
  s0 -> s0 [0, 65535] { R19014 += 1, R19015 += 1 };
  s0 -> s3 [84, 84] { R19015 += 1 };
  s0 -> s1 [85, 65535] { R19015 += 1 };
  s1 -> s1 [0, 83] { R19015 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [84, 84] { R19015 += 1 };
  s1 -> s1 [85, 65535] { R19015 += 1 };
  s2 -> s1 [0, 83] { R19015 += 1 };
  s2 -> s2 [0, 65535] { R19015 += 1, R8 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [84, 84] { R19015 += 1 };
  s2 -> s1 [85, 65535] { R19015 += 1 };
  s3 -> s3 [0, 65535] { R19015 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 83] { R19017 += 1, R18955 += 1 };
  s0 -> s2 [0, 65535] { R19017 += 1, R18954 += 1, R18955 += 1 };
  s0 -> s0 [0, 65535] { R19016 += 1, R19017 += 1 };
  s0 -> s1 [85, 65535] { R19017 += 1, R18955 += 1 };
  s1 -> s1 [0, 83] { R19017 += 1, R18955 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R19017 += 1 };
  s1 -> s1 [85, 65535] { R19017 += 1, R18955 += 1 };
  s2 -> s1 [0, 83] { R19017 += 1, R18955 += 1 };
  s2 -> s2 [0, 65535] { R19017 += 1, R18954 += 1, R18955 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [85, 65535] { R19017 += 1, R18955 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R19019 += 1, R18957 += 1, R17 += 1 };
  s0 -> s2 [0, 65535] { R19019 += 1, R18956 += 1, R18957 += 1 };
  s0 -> s0 [0, 65535] { R19018 += 1, R19019 += 1 };
  s1 -> s1 [0, 65535] { R19019 += 1, R18957 += 1, R17 += 1 };
  s1 -> s4 [0, 65535] { R19019 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R19019 += 1, R18957 += 1, R17 += 1 };
  s2 -> s2 [0, 65535] { R19019 += 1, R18956 += 1, R18957 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19019 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 65535] { R19021 += 1, R18958 += 1, R18959 += 1 };
  s0 -> s2 [0, 65535] { R19021 += 1, R18959 += 1 };
  s0 -> s0 [0, 65535] { R19020 += 1, R19021 += 1 };
  s1 -> s1 [0, 65535] { R19021 += 1, R18958 += 1, R18959 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R19021 += 1, R18959 += 1 };
  s2 -> s3 [0, 65535] { R19021 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R19021 += 1, R18959 += 1 };
  s3 -> s3 [0, 65535] { R19021 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R19022 += 1, R19023 += 1 };
  s0 -> s1 [0, 65535] { R19023 += 1, R18960 += 1, R18961 += 1 };
  s0 -> s2 [0, 65535] { R19023 += 1, R18961 += 1, R67 += 1 };
  s1 -> s1 [0, 65535] { R19023 += 1, R18960 += 1, R18961 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R19023 += 1, R18961 += 1, R67 += 1 };
  s2 -> s3 [0, 65535] { R19023 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R19023 += 1, R18961 += 1, R67 += 1 };
  s3 -> s3 [0, 65535] { R19023 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 84] { R19025 += 1, R18963 += 1 };
  s0 -> s2 [0, 65535] { R19025 += 1, R18963 += 1, R69 += 1 };
  s0 -> s3 [0, 65535] { R19025 += 1, R18962 += 1, R18963 += 1 };
  s0 -> s0 [0, 65535] { R19024 += 1, R19025 += 1 };
  s0 -> s1 [86, 65535] { R19025 += 1, R18963 += 1 };
  s1 -> s1 [0, 84] { R19025 += 1, R18963 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R19025 += 1 };
  s1 -> s1 [86, 65535] { R19025 += 1, R18963 += 1 };
  s2 -> s1 [0, 84] { R19025 += 1, R18963 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R19025 += 1, R18963 += 1, R69 += 1 };
  s2 -> s5 [0, 65535] { R19025 += 1 };
  s2 -> s1 [86, 65535] { R19025 += 1, R18963 += 1 };
  s3 -> s1 [0, 84] { R19025 += 1, R18963 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R19025 += 1, R18963 += 1, R69 += 1 };
  s3 -> s3 [0, 65535] { R19025 += 1, R18962 += 1, R18963 += 1 };
  s3 -> s1 [86, 65535] { R19025 += 1, R18963 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R19025 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 84] { R19027 += 1, R18965 += 1, R11525 += 1 };
  s0 -> s1 [0, 65535] { R19027 += 1, R18965 += 1 };
  s0 -> s2 [0, 65535] { R19027 += 1, R18964 += 1, R18965 += 1 };
  s0 -> s0 [0, 65535] { R19026 += 1, R19027 += 1 };
  s0 -> s1 [86, 65535] { R19027 += 1, R18965 += 1, R11525 += 1 };
  s1 -> s1 [0, 84] { R19027 += 1, R18965 += 1, R11525 += 1 };
  s1 -> s1 [0, 65535] { R19027 += 1, R18965 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R19027 += 1 };
  s1 -> s1 [86, 65535] { R19027 += 1, R18965 += 1, R11525 += 1 };
  s2 -> s1 [0, 84] { R19027 += 1, R18965 += 1, R11525 += 1 };
  s2 -> s1 [0, 65535] { R19027 += 1, R18965 += 1 };
  s2 -> s2 [0, 65535] { R19027 += 1, R18964 += 1, R18965 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [86, 65535] { R19027 += 1, R18965 += 1, R11525 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19027 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R19029 += 1, R18966 += 1, R18967 += 1 };
  s0 -> s2 [0, 65535] { R19029 += 1, R18967 += 1, R15346 += 1, R15347 += 1 };
  s0 -> s0 [0, 65535] { R19028 += 1, R19029 += 1 };
  s0 -> s3 [0, 65535] { R19029 += 1, R18967 += 1 };
  s1 -> s1 [0, 65535] { R19029 += 1, R18966 += 1, R18967 += 1 };
  s1 -> s2 [0, 65535] { R19029 += 1, R18967 += 1, R15346 += 1, R15347 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s3 [0, 65535] { R19029 += 1, R18967 += 1 };
  s2 -> s2 [0, 65535] { R19029 += 1, R18967 += 1, R15346 += 1, R15347 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R19029 += 1 };
  s2 -> s3 [0, 65535] { R19029 += 1, R18967 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R19029 += 1 };
  s3 -> s3 [0, 65535] { R19029 += 1, R18967 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R19029 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 85] { R19031 += 1, R18969 += 1, R17891 += 1 };
  s0 -> s0 [0, 65535] { R19030 += 1, R19031 += 1 };
  s0 -> s2 [0, 65535] { R19031 += 1, R18969 += 1, R17890 += 1, R17891 += 1 };
  s0 -> s3 [0, 65535] { R19031 += 1, R18968 += 1, R18969 += 1 };
  s0 -> s4 [88, 88] { R19031 += 1, R18969 += 1, R17891 += 1 };
  s0 -> s1 [89, 65535] { R19031 += 1, R18969 += 1, R17891 += 1 };
  s1 -> s1 [0, 85] { R19031 += 1, R18969 += 1, R17891 += 1 };
  s1 -> s4 [88, 88] { R19031 += 1, R18969 += 1, R17891 += 1 };
  s1 -> s1 [89, 65535] { R19031 += 1, R18969 += 1, R17891 += 1 };
  s2 -> s1 [0, 85] { R19031 += 1, R18969 += 1, R17891 += 1 };
  s2 -> s2 [0, 65535] { R19031 += 1, R18969 += 1, R17890 += 1, R17891 += 1 };
  s2 -> s4 [88, 88] { R19031 += 1, R18969 += 1, R17891 += 1 };
  s2 -> s1 [89, 65535] { R19031 += 1, R18969 += 1, R17891 += 1 };
  s3 -> s1 [0, 85] { R19031 += 1, R18969 += 1, R17891 += 1 };
  s3 -> s2 [0, 65535] { R19031 += 1, R18969 += 1, R17890 += 1, R17891 += 1 };
  s3 -> s3 [0, 65535] { R19031 += 1, R18968 += 1, R18969 += 1 };
  s3 -> s4 [88, 88] { R19031 += 1, R18969 += 1, R17891 += 1 };
  s3 -> s1 [89, 65535] { R19031 += 1, R18969 += 1, R17891 += 1 };
  s4 -> s4 [0, 85] { R19031 += 1, R18969 += 1, R17891 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R19031 += 1 };
  s4 -> s4 [0, 65535] { R19031 += 1, R18969 += 1 };
  s4 -> s4 [88, 65535] { R19031 += 1, R18969 += 1, R17891 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R19031 += 1 };
  accepting s4, s5, s6;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R19033 += 1, R18971 += 1 };
  s0 -> s0 [0, 65535] { R19032 += 1, R19033 += 1 };
  s0 -> s2 [0, 65535] { R19033 += 1, R18970 += 1, R18971 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R19033 += 1 };
  s1 -> s1 [0, 65535] { R19033 += 1, R18971 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R19033 += 1, R18971 += 1 };
  s2 -> s2 [0, 65535] { R19033 += 1, R18970 += 1, R18971 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19033 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R19035 += 1, R18972 += 1, R18973 += 1 };
  s0 -> s2 [0, 65535] { R19035 += 1, R18973 += 1 };
  s0 -> s0 [0, 65535] { R19034 += 1, R19035 += 1 };
  s1 -> s1 [0, 65535] { R19035 += 1, R18972 += 1, R18973 += 1 };
  s1 -> s2 [0, 65535] { R19035 += 1, R18973 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R19035 += 1, R18973 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R19035 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19035 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R19036 += 1, R19037 += 1 };
  s0 -> s1 [0, 65535] { R19037 += 1, R18992 += 1, R18993 += 1 };
  s0 -> s2 [0, 65535] { R19037 += 1, R18993 += 1, R18 += 1 };
  s1 -> s1 [0, 65535] { R19037 += 1, R18992 += 1, R18993 += 1 };
  s1 -> s2 [0, 65535] { R19037 += 1, R18993 += 1, R18 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R19037 += 1 };
  s2 -> s2 [0, 65535] { R19037 += 1, R18993 += 1, R18 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R19037 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 83] { R19039 += 1, R18995 += 1 };
  s0 -> s0 [0, 65535] { R19038 += 1, R19039 += 1 };
  s0 -> s2 [0, 65535] { R19039 += 1, R18994 += 1, R18995 += 1 };
  s0 -> s3 [84, 84] { R19039 += 1, R18995 += 1 };
  s0 -> s4 [84, 84] { R19039 += 1, R18995 += 1 };
  s0 -> s5 [85, 85] { R19039 += 1, R18995 += 1 };
  s0 -> s1 [86, 65535] { R19039 += 1, R18995 += 1 };
  s1 -> s1 [0, 83] { R19039 += 1, R18995 += 1 };
  s1 -> s3 [84, 84] { R19039 += 1, R18995 += 1 };
  s1 -> s4 [84, 84] { R19039 += 1, R18995 += 1 };
  s1 -> s5 [85, 85] { R19039 += 1, R18995 += 1 };
  s1 -> s1 [86, 65535] { R19039 += 1, R18995 += 1 };
  s2 -> s1 [0, 83] { R19039 += 1, R18995 += 1 };
  s2 -> s2 [0, 65535] { R19039 += 1, R18994 += 1, R18995 += 1 };
  s2 -> s3 [84, 84] { R19039 += 1, R18995 += 1 };
  s2 -> s4 [84, 84] { R19039 += 1, R18995 += 1 };
  s2 -> s5 [85, 85] { R19039 += 1, R18995 += 1 };
  s2 -> s1 [86, 65535] { R19039 += 1, R18995 += 1 };
  s4 -> s4 [0, 84] { R19039 += 1, R18995 += 1 };
  s4 -> s7 [85, 85] { R19039 += 1, R18995 += 1 };
  s4 -> s4 [86, 65535] { R19039 += 1, R18995 += 1 };
  s5 -> s5 [0, 83] { R19039 += 1, R18995 += 1 };
  s5 -> s5 [0, 65535] { R19039 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [84, 84] { R19039 += 1, R18995 += 1 };
  s5 -> s8 [84, 84] { R19039 += 1, R18995 += 1 };
  s5 -> s5 [85, 65535] { R19039 += 1, R18995 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R19039 += 1, R18995 += 1 };
  s7 -> s9 [0, 65535] { R19039 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R19039 += 1 };
  s8 -> s6 [0, 65535];
  s9 -> s9 [0, 65535] { R19039 += 1 };
  s9 -> s6 [0, 65535];
  accepting s8, s5, s9, s6, s7;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 83] { R19041 += 1, R18997 += 1, R66 += 1 };
  s0 -> s2 [0, 65535] { R19041 += 1, R18996 += 1, R18997 += 1 };
  s0 -> s0 [0, 65535] { R19040 += 1, R19041 += 1 };
  s0 -> s3 [84, 84] { R19041 += 1, R18997 += 1, R66 += 1 };
  s0 -> s4 [84, 84] { R19041 += 1, R18997 += 1, R66 += 1 };
  s0 -> s1 [85, 65535] { R19041 += 1, R18997 += 1, R66 += 1 };
  s1 -> s1 [0, 83] { R19041 += 1, R18997 += 1, R66 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R19041 += 1 };
  s1 -> s3 [84, 84] { R19041 += 1, R18997 += 1, R66 += 1 };
  s1 -> s4 [84, 84] { R19041 += 1, R18997 += 1, R66 += 1 };
  s1 -> s1 [85, 65535] { R19041 += 1, R18997 += 1, R66 += 1 };
  s2 -> s1 [0, 83] { R19041 += 1, R18997 += 1, R66 += 1 };
  s2 -> s2 [0, 65535] { R19041 += 1, R18996 += 1, R18997 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [84, 84] { R19041 += 1, R18997 += 1, R66 += 1 };
  s2 -> s4 [84, 84] { R19041 += 1, R18997 += 1, R66 += 1 };
  s2 -> s1 [85, 65535] { R19041 += 1, R18997 += 1, R66 += 1 };
  s3 -> s3 [0, 65535] { R19041 += 1, R18997 += 1, R66 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R19041 += 1 };
  s4 -> s4 [0, 65535] { R19041 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R19041 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 83] { R19043 += 1, R18999 += 1, R68 += 1 };
  s0 -> s2 [0, 65535] { R19043 += 1, R18998 += 1, R18999 += 1 };
  s0 -> s0 [0, 65535] { R19042 += 1, R19043 += 1 };
  s0 -> s3 [84, 84] { R19043 += 1, R18999 += 1, R68 += 1 };
  s0 -> s4 [84, 84] { R19043 += 1, R18999 += 1, R68 += 1 };
  s0 -> s1 [85, 65535] { R19043 += 1, R18999 += 1, R68 += 1 };
  s1 -> s1 [0, 83] { R19043 += 1, R18999 += 1, R68 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R19043 += 1 };
  s1 -> s3 [84, 84] { R19043 += 1, R18999 += 1, R68 += 1 };
  s1 -> s4 [84, 84] { R19043 += 1, R18999 += 1, R68 += 1 };
  s1 -> s1 [85, 65535] { R19043 += 1, R18999 += 1, R68 += 1 };
  s2 -> s1 [0, 83] { R19043 += 1, R18999 += 1, R68 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R19043 += 1, R18998 += 1, R18999 += 1 };
  s2 -> s3 [84, 84] { R19043 += 1, R18999 += 1, R68 += 1 };
  s2 -> s4 [84, 84] { R19043 += 1, R18999 += 1, R68 += 1 };
  s2 -> s1 [85, 65535] { R19043 += 1, R18999 += 1, R68 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R19043 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R19043 += 1 };
  s4 -> s4 [0, 65535] { R19043 += 1, R18999 += 1, R68 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R19043 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 83] { R19045 += 1, R19001 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s2 [0, 83] { R19045 += 1, R19001 += 1, R11523 += 1 };
  s0 -> s3 [0, 65535] { R19045 += 1, R19000 += 1, R19001 += 1 };
  s0 -> s0 [0, 65535] { R19044 += 1, R19045 += 1 };
  s0 -> s4 [84, 84] { R19045 += 1, R19001 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s5 [84, 84] { R19045 += 1, R19001 += 1, R11523 += 1 };
  s0 -> s6 [84, 84] { R19045 += 1, R19001 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s7 [84, 84] { R19045 += 1, R19001 += 1, R11523 += 1 };
  s0 -> s1 [85, 65535] { R19045 += 1, R19001 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s2 [86, 65535] { R19045 += 1, R19001 += 1, R11523 += 1 };
  s1 -> s1 [0, 83] { R19045 += 1, R19001 += 1, R11522 += 1, R11523 += 1 };
  s1 -> s2 [0, 83] { R19045 += 1, R19001 += 1, R11523 += 1 };
  s1 -> s4 [84, 84] { R19045 += 1, R19001 += 1, R11522 += 1, R11523 += 1 };
  s1 -> s5 [84, 84] { R19045 += 1, R19001 += 1, R11523 += 1 };
  s1 -> s6 [84, 84] { R19045 += 1, R19001 += 1, R11522 += 1, R11523 += 1 };
  s1 -> s7 [84, 84] { R19045 += 1, R19001 += 1, R11523 += 1 };
  s1 -> s1 [85, 65535] { R19045 += 1, R19001 += 1, R11522 += 1, R11523 += 1 };
  s1 -> s2 [86, 65535] { R19045 += 1, R19001 += 1, R11523 += 1 };
  s2 -> s2 [0, 83] { R19045 += 1, R19001 += 1, R11523 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R19045 += 1 };
  s2 -> s5 [84, 84] { R19045 += 1, R19001 += 1 };
  s2 -> s7 [84, 84] { R19045 += 1, R19001 += 1 };
  s2 -> s2 [85, 65535] { R19045 += 1, R19001 += 1 };
  s2 -> s2 [86, 65535] { R19045 += 1, R19001 += 1, R11523 += 1 };
  s3 -> s1 [0, 83] { R19045 += 1, R19001 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s2 [0, 83] { R19045 += 1, R19001 += 1, R11523 += 1 };
  s3 -> s3 [0, 65535] { R19045 += 1, R19000 += 1, R19001 += 1 };
  s3 -> s4 [84, 84] { R19045 += 1, R19001 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s5 [84, 84] { R19045 += 1, R19001 += 1, R11523 += 1 };
  s3 -> s6 [84, 84] { R19045 += 1, R19001 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s7 [84, 84] { R19045 += 1, R19001 += 1, R11523 += 1 };
  s3 -> s1 [85, 65535] { R19045 += 1, R19001 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s2 [86, 65535] { R19045 += 1, R19001 += 1, R11523 += 1 };
  s5 -> s5 [0, 84] { R19045 += 1, R19001 += 1, R11523 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s9 [0, 65535] { R19045 += 1 };
  s5 -> s5 [0, 65535] { R19045 += 1, R19001 += 1 };
  s5 -> s5 [86, 65535] { R19045 += 1, R19001 += 1, R11523 += 1 };
  s6 -> s5 [0, 84] { R19045 += 1, R19001 += 1, R11523 += 1 };
  s6 -> s6 [0, 65535] { R19045 += 1, R19001 += 1, R11522 += 1, R11523 += 1 };
  s6 -> s5 [86, 65535] { R19045 += 1, R19001 += 1, R11523 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R19045 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R19045 += 1 };
  accepting s8, s5, s2, s9, s7;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 83] { R19047 += 1, R19003 += 1, R15342 += 1, R15343 += 1 };
  s0 -> s2 [0, 83] { R19047 += 1, R19003 += 1, R15343 += 1, R15344 += 1 };
  s0 -> s3 [0, 65535] { R19047 += 1, R19002 += 1, R19003 += 1 };
  s0 -> s0 [0, 65535] { R19046 += 1, R19047 += 1 };
  s0 -> s4 [84, 84] { R19047 += 1, R19003 += 1, R15342 += 1, R15343 += 1 };
  s0 -> s5 [84, 84] { R19047 += 1, R19003 += 1, R15343 += 1, R15344 += 1 };
  s0 -> s6 [84, 84] { R19047 += 1, R19003 += 1, R15342 += 1, R15343 += 1 };
  s0 -> s7 [84, 84] { R19047 += 1, R19003 += 1, R15343 += 1, R15344 += 1 };
  s0 -> s1 [85, 65535] { R19047 += 1, R19003 += 1, R15342 += 1, R15343 += 1 };
  s0 -> s2 [85, 65535] { R19047 += 1, R19003 += 1, R15343 += 1, R15344 += 1 };
  s1 -> s1 [0, 83] { R19047 += 1, R19003 += 1, R15342 += 1, R15343 += 1 };
  s1 -> s2 [0, 83] { R19047 += 1, R19003 += 1, R15343 += 1, R15344 += 1 };
  s1 -> s4 [84, 84] { R19047 += 1, R19003 += 1, R15342 += 1, R15343 += 1 };
  s1 -> s5 [84, 84] { R19047 += 1, R19003 += 1, R15343 += 1, R15344 += 1 };
  s1 -> s6 [84, 84] { R19047 += 1, R19003 += 1, R15342 += 1, R15343 += 1 };
  s1 -> s7 [84, 84] { R19047 += 1, R19003 += 1, R15343 += 1, R15344 += 1 };
  s1 -> s1 [85, 65535] { R19047 += 1, R19003 += 1, R15342 += 1, R15343 += 1 };
  s1 -> s2 [85, 65535] { R19047 += 1, R19003 += 1, R15343 += 1, R15344 += 1 };
  s2 -> s2 [0, 83] { R19047 += 1, R19003 += 1, R15343 += 1, R15344 += 1 };
  s2 -> s2 [0, 65535] { R19047 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s5 [84, 84] { R19047 += 1, R19003 += 1, R15343 += 1, R15344 += 1 };
  s2 -> s7 [84, 84] { R19047 += 1, R19003 += 1, R15343 += 1, R15344 += 1 };
  s2 -> s2 [85, 65535] { R19047 += 1, R19003 += 1, R15343 += 1, R15344 += 1 };
  s3 -> s1 [0, 83] { R19047 += 1, R19003 += 1, R15342 += 1, R15343 += 1 };
  s3 -> s2 [0, 83] { R19047 += 1, R19003 += 1, R15343 += 1, R15344 += 1 };
  s3 -> s3 [0, 65535] { R19047 += 1, R19002 += 1, R19003 += 1 };
  s3 -> s4 [84, 84] { R19047 += 1, R19003 += 1, R15342 += 1, R15343 += 1 };
  s3 -> s5 [84, 84] { R19047 += 1, R19003 += 1, R15343 += 1, R15344 += 1 };
  s3 -> s6 [84, 84] { R19047 += 1, R19003 += 1, R15342 += 1, R15343 += 1 };
  s3 -> s7 [84, 84] { R19047 += 1, R19003 += 1, R15343 += 1, R15344 += 1 };
  s3 -> s1 [85, 65535] { R19047 += 1, R19003 += 1, R15342 += 1, R15343 += 1 };
  s3 -> s2 [85, 65535] { R19047 += 1, R19003 += 1, R15343 += 1, R15344 += 1 };
  s4 -> s4 [0, 65535] { R19047 += 1, R19003 += 1, R15342 += 1, R15343 += 1 };
  s4 -> s5 [0, 65535] { R19047 += 1, R19003 += 1, R15343 += 1, R15344 += 1 };
  s5 -> s9 [0, 65535] { R19047 += 1 };
  s5 -> s5 [0, 65535] { R19047 += 1, R19003 += 1, R15343 += 1, R15344 += 1 };
  s5 -> s8 [0, 65535];
  s7 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R19047 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R19047 += 1 };
  s9 -> s8 [0, 65535];
  accepting s8, s5, s2, s9, s7;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 83] { R19049 += 1, R19005 += 1, R17888 += 1, R17889 += 1 };
  s0 -> s2 [0, 65535] { R19049 += 1, R19004 += 1, R19005 += 1 };
  s0 -> s0 [0, 65535] { R19048 += 1, R19049 += 1 };
  s0 -> s3 [84, 84] { R19049 += 1, R19005 += 1, R17888 += 1, R17889 += 1 };
  s0 -> s4 [84, 84] { R19049 += 1, R19005 += 1, R17888 += 1, R17889 += 1 };
  s0 -> s1 [85, 65535] { R19049 += 1, R19005 += 1, R17888 += 1, R17889 += 1 };
  s1 -> s1 [0, 83] { R19049 += 1, R19005 += 1, R17888 += 1, R17889 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R19049 += 1 };
  s1 -> s3 [84, 84] { R19049 += 1, R19005 += 1, R17888 += 1, R17889 += 1 };
  s1 -> s4 [84, 84] { R19049 += 1, R19005 += 1, R17888 += 1, R17889 += 1 };
  s1 -> s1 [85, 65535] { R19049 += 1, R19005 += 1, R17888 += 1, R17889 += 1 };
  s2 -> s1 [0, 83] { R19049 += 1, R19005 += 1, R17888 += 1, R17889 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R19049 += 1, R19004 += 1, R19005 += 1 };
  s2 -> s3 [84, 84] { R19049 += 1, R19005 += 1, R17888 += 1, R17889 += 1 };
  s2 -> s4 [84, 84] { R19049 += 1, R19005 += 1, R17888 += 1, R17889 += 1 };
  s2 -> s1 [85, 65535] { R19049 += 1, R19005 += 1, R17888 += 1, R17889 += 1 };
  s3 -> s6 [0, 65535] { R19049 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R19049 += 1, R19005 += 1, R17888 += 1, R17889 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R19049 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R19049 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 83] { R19051 += 1, R19007 += 1, R18737 += 1, R18738 += 1 };
  s0 -> s2 [0, 83] { R19051 += 1, R19007 += 1, R18736 += 1, R18737 += 1 };
  s0 -> s3 [0, 65535] { R19051 += 1, R19006 += 1, R19007 += 1 };
  s0 -> s0 [0, 65535] { R19050 += 1, R19051 += 1 };
  s0 -> s4 [84, 84] { R19051 += 1, R19007 += 1, R18736 += 1, R18737 += 1 };
  s0 -> s5 [84, 84] { R19051 += 1, R19007 += 1, R18736 += 1, R18737 += 1 };
  s0 -> s6 [84, 84] { R19051 += 1, R19007 += 1, R18737 += 1, R18738 += 1 };
  s0 -> s7 [84, 84] { R19051 += 1, R19007 += 1, R18737 += 1, R18738 += 1 };
  s0 -> s1 [85, 65535] { R19051 += 1, R19007 += 1, R18737 += 1, R18738 += 1 };
  s0 -> s2 [85, 65535] { R19051 += 1, R19007 += 1, R18736 += 1, R18737 += 1 };
  s1 -> s11 [0, 83] { R19051 += 1, R19007 += 1 };
  s1 -> s1 [0, 83] { R19051 += 1, R19007 += 1, R18737 += 1, R18738 += 1 };
  s1 -> s6 [84, 84] { R19051 += 1, R19007 += 1, R18737 += 1, R18738 += 1 };
  s1 -> s7 [84, 84] { R19051 += 1, R19007 += 1, R18737 += 1, R18738 += 1 };
  s1 -> s12 [84, 84] { R19051 += 1, R19007 += 1 };
  s1 -> s8 [84, 84] { R19051 += 1, R19007 += 1 };
  s1 -> s11 [85, 65535] { R19051 += 1, R19007 += 1 };
  s1 -> s1 [85, 65535] { R19051 += 1, R19007 += 1, R18737 += 1, R18738 += 1 };
  s2 -> s1 [0, 83] { R19051 += 1, R19007 += 1, R18737 += 1, R18738 += 1 };
  s2 -> s2 [0, 83] { R19051 += 1, R19007 += 1, R18736 += 1, R18737 += 1 };
  s2 -> s4 [84, 84] { R19051 += 1, R19007 += 1, R18736 += 1, R18737 += 1 };
  s2 -> s5 [84, 84] { R19051 += 1, R19007 += 1, R18736 += 1, R18737 += 1 };
  s2 -> s6 [84, 84] { R19051 += 1, R19007 += 1, R18737 += 1, R18738 += 1 };
  s2 -> s7 [84, 84] { R19051 += 1, R19007 += 1, R18737 += 1, R18738 += 1 };
  s2 -> s1 [85, 65535] { R19051 += 1, R19007 += 1, R18737 += 1, R18738 += 1 };
  s2 -> s2 [85, 65535] { R19051 += 1, R19007 += 1, R18736 += 1, R18737 += 1 };
  s3 -> s1 [0, 83] { R19051 += 1, R19007 += 1, R18737 += 1, R18738 += 1 };
  s3 -> s2 [0, 83] { R19051 += 1, R19007 += 1, R18736 += 1, R18737 += 1 };
  s3 -> s3 [0, 65535] { R19051 += 1, R19006 += 1, R19007 += 1 };
  s3 -> s4 [84, 84] { R19051 += 1, R19007 += 1, R18736 += 1, R18737 += 1 };
  s3 -> s5 [84, 84] { R19051 += 1, R19007 += 1, R18736 += 1, R18737 += 1 };
  s3 -> s6 [84, 84] { R19051 += 1, R19007 += 1, R18737 += 1, R18738 += 1 };
  s3 -> s7 [84, 84] { R19051 += 1, R19007 += 1, R18737 += 1, R18738 += 1 };
  s3 -> s1 [85, 65535] { R19051 += 1, R19007 += 1, R18737 += 1, R18738 += 1 };
  s3 -> s2 [85, 65535] { R19051 += 1, R19007 += 1, R18736 += 1, R18737 += 1 };
  s5 -> s5 [0, 65535] { R19051 += 1, R19007 += 1, R18736 += 1, R18737 += 1 };
  s5 -> s7 [0, 65535] { R19051 += 1, R19007 += 1, R18737 += 1, R18738 += 1 };
  s7 -> s7 [0, 65535] { R19051 += 1, R19007 += 1, R18737 += 1, R18738 += 1 };
  s7 -> s8 [0, 65535] { R19051 += 1, R19007 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [0, 65535] { R19051 += 1 };
  s8 -> s8 [0, 65535] { R19051 += 1, R19007 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R19051 += 1 };
  s11 -> s11 [0, 83] { R19051 += 1, R19007 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R19051 += 1 };
  s11 -> s12 [84, 84] { R19051 += 1, R19007 += 1 };
  s11 -> s8 [84, 84] { R19051 += 1, R19007 += 1 };
  s11 -> s11 [85, 65535] { R19051 += 1, R19007 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R19051 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 83] { R19053 += 1, R19009 += 1, R18950 += 1, R18951 += 1 };
  s0 -> s2 [0, 83] { R19053 += 1, R19009 += 1, R18951 += 1 };
  s0 -> s0 [0, 65535] { R19052 += 1, R19053 += 1 };
  s0 -> s3 [0, 65535] { R19053 += 1, R19008 += 1, R19009 += 1 };
  s0 -> s4 [84, 84] { R19053 += 1, R19009 += 1, R18950 += 1, R18951 += 1 };
  s0 -> s5 [84, 84] { R19053 += 1, R19009 += 1, R18951 += 1 };
  s0 -> s6 [84, 84] { R19053 += 1, R19009 += 1, R18950 += 1, R18951 += 1 };
  s0 -> s7 [84, 84] { R19053 += 1, R19009 += 1, R18951 += 1 };
  s0 -> s8 [85, 85] { R19053 += 1, R19009 += 1, R18951 += 1 };
  s0 -> s1 [85, 65535] { R19053 += 1, R19009 += 1, R18950 += 1, R18951 += 1 };
  s0 -> s2 [89, 65535] { R19053 += 1, R19009 += 1, R18951 += 1 };
  s1 -> s1 [0, 83] { R19053 += 1, R19009 += 1, R18950 += 1, R18951 += 1 };
  s1 -> s2 [0, 83] { R19053 += 1, R19009 += 1, R18951 += 1 };
  s1 -> s4 [84, 84] { R19053 += 1, R19009 += 1, R18950 += 1, R18951 += 1 };
  s1 -> s5 [84, 84] { R19053 += 1, R19009 += 1, R18951 += 1 };
  s1 -> s6 [84, 84] { R19053 += 1, R19009 += 1, R18950 += 1, R18951 += 1 };
  s1 -> s7 [84, 84] { R19053 += 1, R19009 += 1, R18951 += 1 };
  s1 -> s8 [85, 85] { R19053 += 1, R19009 += 1, R18951 += 1 };
  s1 -> s1 [85, 65535] { R19053 += 1, R19009 += 1, R18950 += 1, R18951 += 1 };
  s1 -> s2 [89, 65535] { R19053 += 1, R19009 += 1, R18951 += 1 };
  s2 -> s2 [0, 83] { R19053 += 1, R19009 += 1, R18951 += 1 };
  s2 -> s5 [84, 84] { R19053 += 1, R19009 += 1 };
  s2 -> s7 [84, 84] { R19053 += 1, R19009 += 1 };
  s2 -> s8 [85, 85] { R19053 += 1, R19009 += 1, R18951 += 1 };
  s2 -> s2 [85, 65535] { R19053 += 1, R19009 += 1 };
  s2 -> s2 [89, 65535] { R19053 += 1, R19009 += 1, R18951 += 1 };
  s3 -> s1 [0, 83] { R19053 += 1, R19009 += 1, R18950 += 1, R18951 += 1 };
  s3 -> s2 [0, 83] { R19053 += 1, R19009 += 1, R18951 += 1 };
  s3 -> s3 [0, 65535] { R19053 += 1, R19008 += 1, R19009 += 1 };
  s3 -> s4 [84, 84] { R19053 += 1, R19009 += 1, R18950 += 1, R18951 += 1 };
  s3 -> s5 [84, 84] { R19053 += 1, R19009 += 1, R18951 += 1 };
  s3 -> s6 [84, 84] { R19053 += 1, R19009 += 1, R18950 += 1, R18951 += 1 };
  s3 -> s7 [84, 84] { R19053 += 1, R19009 += 1, R18951 += 1 };
  s3 -> s8 [85, 85] { R19053 += 1, R19009 += 1, R18951 += 1 };
  s3 -> s1 [85, 65535] { R19053 += 1, R19009 += 1, R18950 += 1, R18951 += 1 };
  s3 -> s2 [89, 65535] { R19053 += 1, R19009 += 1, R18951 += 1 };
  s6 -> s7 [0, 84] { R19053 += 1, R19009 += 1, R18951 += 1 };
  s6 -> s6 [0, 65535] { R19053 += 1, R19009 += 1, R18950 += 1, R18951 += 1 };
  s6 -> s11 [85, 85] { R19053 += 1, R19009 += 1, R18951 += 1 };
  s6 -> s7 [89, 65535] { R19053 += 1, R19009 += 1, R18951 += 1 };
  s7 -> s7 [0, 84] { R19053 += 1, R19009 += 1, R18951 += 1 };
  s7 -> s7 [0, 65535] { R19053 += 1, R19009 += 1 };
  s7 -> s11 [85, 85] { R19053 += 1, R19009 += 1, R18951 += 1 };
  s7 -> s7 [89, 65535] { R19053 += 1, R19009 += 1, R18951 += 1 };
  s8 -> s8 [0, 83] { R19053 += 1, R19009 += 1 };
  s8 -> s8 [0, 65535] { R19053 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [84, 84] { R19053 += 1, R19009 += 1 };
  s8 -> s11 [84, 84] { R19053 += 1, R19009 += 1 };
  s8 -> s8 [85, 65535] { R19053 += 1, R19009 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R19053 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R19053 += 1 };
  s11 -> s11 [0, 65535] { R19053 += 1, R19009 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R19053 += 1 };
  accepting s12, s8, s9, s10, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [116, 116];
  accepting s1;
};
};
synchronised {  // Automata constraining P62
automaton P62_0 {
  init s0;
  s0 -> s1 [117, 117];
  accepting s1;
};
};
