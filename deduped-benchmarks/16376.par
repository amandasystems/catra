// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R11522, R11523, R11524, R11525, R12, R15342, R15343, R15344, R15345, R15346, R15347, R15348, R15349, R15350, R15351, R15352, R15353, R15354, R15355, R15356, R15357, R15462, R15463, R15464, R15465, R15466, R15467, R15468, R15469, R15470, R15471, R15472, R15473, R15474, R15475, R15476, R15477, R15478, R15479, R15480, R15481, R15482, R15483, R15484, R15485, R15486, R15487, R15488, R15489, R15490, R15491, R15492, R15493, R15494, R15495, R15496, R15497, R15498, R15499, R15500, R15501, R15502, R15503, R15504, R15505, R15506, R15507, R15508, R15509, R15510, R15511, R15512, R15513, R15514, R15515, R15516, R15517, R15518, R15519, R15520, R15521, R15522, R15523, R15524, R15525, R15526, R15527, R15528, R15529, R15530, R15531, R15532, R15533, R15534, R15535, R15536, R15537, R15538, R15539, R15540, R15541, R15542, R15543, R15544, R15545, R15546, R15547, R15548, R15549, R15550, R15551, R15552, R15553, R15554, R15555, R15556, R15557, R15558, R15559, R15560, R15561, R15562, R15563, R15564, R15565, R17, R18, R19, R2, R20, R21, R22, R23, R24, R25, R26, R27, R3, R38, R4, R40, R42, R43, R46, R47, R48, R52, R53, R56, R57, R58, R62, R63, R66, R67, R68, R69, R8;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [73, 73];
  s0 -> s0 [74, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [73, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R2 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R11 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 72];
  s0 -> s0 [0, 65535] { R12 += 1 };
  s0 -> s2 [73, 73];
  s0 -> s1 [74, 65535];
  s1 -> s1 [0, 72];
  s1 -> s2 [73, 73];
  s1 -> s1 [74, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R21 += 1 };
  s0 -> s0 [0, 65535] { R20 += 1, R21 += 1 };
  s0 -> s2 [9, 13] { R21 += 1 };
  s0 -> s1 [14, 31] { R21 += 1 };
  s0 -> s2 [32, 32] { R21 += 1 };
  s0 -> s1 [33, 65535] { R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R21 += 1 };
  s2 -> s1 [0, 65535] { R21 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R22 += 1, R23 += 1 };
  s1 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R25 += 1 };
  s0 -> s0 [0, 65535] { R24 += 1, R25 += 1 };
  s0 -> s2 [9, 13] { R25 += 1 };
  s0 -> s1 [14, 31] { R25 += 1 };
  s0 -> s2 [32, 32] { R25 += 1 };
  s0 -> s1 [33, 65535] { R25 += 1 };
  s1 -> s1 [0, 65535] { R25 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R25 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R26 += 1, R27 += 1 };
  s0 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R15487 += 1, R19 += 1 };
  s0 -> s0 [0, 65535] { R15486 += 1, R15487 += 1 };
  s1 -> s1 [0, 65535] { R15487 += 1, R19 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 72] { R15489 += 1 };
  s0 -> s0 [0, 65535] { R15488 += 1, R15489 += 1 };
  s0 -> s2 [73, 73] { R15489 += 1 };
  s0 -> s3 [73, 73] { R15489 += 1 };
  s0 -> s1 [78, 65535] { R15489 += 1 };
  s1 -> s1 [0, 72] { R15489 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R15489 += 1 };
  s1 -> s3 [73, 73] { R15489 += 1 };
  s1 -> s1 [78, 65535] { R15489 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 73] { R15489 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [78, 65535] { R15489 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 72] { R15491 += 1, R38 += 1 };
  s0 -> s0 [0, 65535] { R15490 += 1, R15491 += 1 };
  s0 -> s2 [73, 73] { R15491 += 1, R38 += 1 };
  s0 -> s3 [73, 73] { R15491 += 1, R38 += 1 };
  s0 -> s1 [74, 65535] { R15491 += 1, R38 += 1 };
  s1 -> s1 [0, 72] { R15491 += 1, R38 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R15491 += 1, R38 += 1 };
  s1 -> s3 [73, 73] { R15491 += 1, R38 += 1 };
  s1 -> s1 [74, 65535] { R15491 += 1, R38 += 1 };
  s2 -> s2 [0, 65535] { R15491 += 1, R38 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 72] { R15493 += 1, R40 += 1 };
  s0 -> s0 [0, 65535] { R15492 += 1, R15493 += 1 };
  s0 -> s2 [73, 73] { R15493 += 1, R40 += 1 };
  s0 -> s3 [73, 73] { R15493 += 1, R40 += 1 };
  s0 -> s1 [74, 65535] { R15493 += 1, R40 += 1 };
  s1 -> s1 [0, 72] { R15493 += 1, R40 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R15493 += 1, R40 += 1 };
  s1 -> s3 [73, 73] { R15493 += 1, R40 += 1 };
  s1 -> s1 [74, 65535] { R15493 += 1, R40 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R15493 += 1, R40 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 72] { R15495 += 1, R42 += 1, R43 += 1 };
  s0 -> s0 [0, 65535] { R15494 += 1, R15495 += 1 };
  s0 -> s2 [73, 73] { R15495 += 1, R42 += 1, R43 += 1 };
  s0 -> s3 [73, 73] { R15495 += 1, R42 += 1, R43 += 1 };
  s0 -> s1 [74, 65535] { R15495 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 72] { R15495 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R15495 += 1, R42 += 1, R43 += 1 };
  s1 -> s3 [73, 73] { R15495 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [74, 65535] { R15495 += 1, R42 += 1, R43 += 1 };
  s2 -> s2 [0, 65535] { R15495 += 1, R42 += 1, R43 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 72] { R15497 += 1, R46 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R15496 += 1, R15497 += 1 };
  s0 -> s2 [73, 73] { R15497 += 1, R46 += 1, R47 += 1 };
  s0 -> s3 [73, 73] { R15497 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [74, 65535] { R15497 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 72] { R15497 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R15497 += 1, R46 += 1, R47 += 1 };
  s1 -> s3 [73, 73] { R15497 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [74, 65535] { R15497 += 1, R46 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R15497 += 1, R46 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 72] { R15499 += 1, R52 += 1, R53 += 1 };
  s0 -> s0 [0, 65535] { R15498 += 1, R15499 += 1 };
  s0 -> s2 [73, 73] { R15499 += 1, R52 += 1, R53 += 1 };
  s0 -> s3 [73, 73] { R15499 += 1, R52 += 1, R53 += 1 };
  s0 -> s1 [74, 65535] { R15499 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 72] { R15499 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R15499 += 1, R52 += 1, R53 += 1 };
  s1 -> s3 [73, 73] { R15499 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [74, 65535] { R15499 += 1, R52 += 1, R53 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R15499 += 1, R52 += 1, R53 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 72] { R15501 += 1, R56 += 1, R57 += 1 };
  s0 -> s0 [0, 65535] { R15500 += 1, R15501 += 1 };
  s0 -> s2 [73, 73] { R15501 += 1, R56 += 1, R57 += 1 };
  s0 -> s3 [73, 73] { R15501 += 1, R56 += 1, R57 += 1 };
  s0 -> s1 [74, 65535] { R15501 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 72] { R15501 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R15501 += 1, R56 += 1, R57 += 1 };
  s1 -> s3 [73, 73] { R15501 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [74, 65535] { R15501 += 1, R56 += 1, R57 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R15501 += 1, R56 += 1, R57 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 72] { R15503 += 1, R62 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R15502 += 1, R15503 += 1 };
  s0 -> s2 [73, 73] { R15503 += 1, R62 += 1, R63 += 1 };
  s0 -> s3 [73, 73] { R15503 += 1, R62 += 1, R63 += 1 };
  s0 -> s1 [74, 65535] { R15503 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 72] { R15503 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R15503 += 1, R62 += 1, R63 += 1 };
  s1 -> s3 [73, 73] { R15503 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [74, 65535] { R15503 += 1, R62 += 1, R63 += 1 };
  s2 -> s2 [0, 65535] { R15503 += 1, R62 += 1, R63 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 72] { R15523 += 1 };
  s0 -> s0 [0, 65535] { R15522 += 1, R15523 += 1 };
  s0 -> s2 [73, 73] { R15523 += 1 };
  s0 -> s1 [74, 65535] { R15523 += 1 };
  s1 -> s1 [0, 72] { R15523 += 1 };
  s1 -> s2 [73, 73] { R15523 += 1 };
  s1 -> s1 [74, 65535] { R15523 += 1 };
  s2 -> s2 [0, 65535] { R15523 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R15524 += 1, R15525 += 1 };
  s0 -> s1 [0, 65535] { R15525 += 1, R1 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R15525 += 1, R1 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 72] { R15527 += 1 };
  s0 -> s2 [0, 65535] { R15527 += 1, R8 += 1 };
  s0 -> s0 [0, 65535] { R15526 += 1, R15527 += 1 };
  s0 -> s3 [73, 73] { R15527 += 1 };
  s0 -> s1 [74, 65535] { R15527 += 1 };
  s1 -> s1 [0, 72] { R15527 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [73, 73] { R15527 += 1 };
  s1 -> s1 [74, 65535] { R15527 += 1 };
  s2 -> s1 [0, 72] { R15527 += 1 };
  s2 -> s2 [0, 65535] { R15527 += 1, R8 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [73, 73] { R15527 += 1 };
  s2 -> s1 [74, 65535] { R15527 += 1 };
  s3 -> s3 [0, 65535] { R15527 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 72] { R15529 += 1, R15467 += 1 };
  s0 -> s0 [0, 65535] { R15528 += 1, R15529 += 1 };
  s0 -> s2 [0, 65535] { R15529 += 1, R15466 += 1, R15467 += 1 };
  s0 -> s1 [74, 65535] { R15529 += 1, R15467 += 1 };
  s1 -> s1 [0, 72] { R15529 += 1, R15467 += 1 };
  s1 -> s1 [0, 65535] { R15529 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [74, 65535] { R15529 += 1, R15467 += 1 };
  s2 -> s1 [0, 72] { R15529 += 1, R15467 += 1 };
  s2 -> s2 [0, 65535] { R15529 += 1, R15466 += 1, R15467 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [74, 65535] { R15529 += 1, R15467 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s0 [0, 65535] { R15530 += 1, R15531 += 1 };
  s0 -> s1 [0, 65535] { R15531 += 1, R15468 += 1, R15469 += 1 };
  s0 -> s2 [0, 65535] { R15531 += 1, R15469 += 1, R17 += 1 };
  s1 -> s1 [0, 65535] { R15531 += 1, R15468 += 1, R15469 += 1 };
  s1 -> s2 [0, 65535] { R15531 += 1, R15469 += 1, R17 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R15531 += 1, R15469 += 1, R17 += 1 };
  s2 -> s3 [0, 65535] { R15531 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R15531 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 73] { R15533 += 1, R15471 += 1 };
  s0 -> s2 [0, 65535] { R15533 += 1, R15470 += 1, R15471 += 1 };
  s0 -> s0 [0, 65535] { R15532 += 1, R15533 += 1 };
  s0 -> s1 [77, 65535] { R15533 += 1, R15471 += 1 };
  s1 -> s1 [0, 73] { R15533 += 1, R15471 += 1 };
  s1 -> s1 [0, 65535] { R15533 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [77, 65535] { R15533 += 1, R15471 += 1 };
  s2 -> s1 [0, 73] { R15533 += 1, R15471 += 1 };
  s2 -> s2 [0, 65535] { R15533 += 1, R15470 += 1, R15471 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [77, 65535] { R15533 += 1, R15471 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R15535 += 1, R15473 += 1, R67 += 1 };
  s0 -> s0 [0, 65535] { R15534 += 1, R15535 += 1 };
  s0 -> s2 [0, 65535] { R15535 += 1, R15472 += 1, R15473 += 1 };
  s1 -> s1 [0, 65535] { R15535 += 1, R15473 += 1, R67 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R15535 += 1 };
  s2 -> s1 [0, 65535] { R15535 += 1, R15473 += 1, R67 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R15535 += 1, R15472 += 1, R15473 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R15535 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 76] { R15537 += 1, R15475 += 1 };
  s0 -> s2 [0, 65535] { R15537 += 1, R15474 += 1, R15475 += 1 };
  s0 -> s0 [0, 65535] { R15536 += 1, R15537 += 1 };
  s0 -> s3 [0, 65535] { R15537 += 1, R15475 += 1, R69 += 1 };
  s0 -> s1 [78, 65535] { R15537 += 1, R15475 += 1 };
  s1 -> s1 [0, 76] { R15537 += 1, R15475 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R15537 += 1 };
  s1 -> s1 [78, 65535] { R15537 += 1, R15475 += 1 };
  s2 -> s1 [0, 76] { R15537 += 1, R15475 += 1 };
  s2 -> s2 [0, 65535] { R15537 += 1, R15474 += 1, R15475 += 1 };
  s2 -> s3 [0, 65535] { R15537 += 1, R15475 += 1, R69 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [78, 65535] { R15537 += 1, R15475 += 1 };
  s3 -> s1 [0, 76] { R15537 += 1, R15475 += 1 };
  s3 -> s4 [0, 65535] { R15537 += 1 };
  s3 -> s3 [0, 65535] { R15537 += 1, R15475 += 1, R69 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [78, 65535] { R15537 += 1, R15475 += 1 };
  s4 -> s4 [0, 65535] { R15537 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 76] { R15539 += 1, R15477 += 1, R11525 += 1 };
  s0 -> s1 [0, 65535] { R15539 += 1, R15477 += 1 };
  s0 -> s2 [0, 65535] { R15539 += 1, R15476 += 1, R15477 += 1 };
  s0 -> s0 [0, 65535] { R15538 += 1, R15539 += 1 };
  s0 -> s1 [78, 65535] { R15539 += 1, R15477 += 1, R11525 += 1 };
  s1 -> s1 [0, 76] { R15539 += 1, R15477 += 1, R11525 += 1 };
  s1 -> s1 [0, 65535] { R15539 += 1, R15477 += 1 };
  s1 -> s4 [0, 65535] { R15539 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [78, 65535] { R15539 += 1, R15477 += 1, R11525 += 1 };
  s2 -> s1 [0, 76] { R15539 += 1, R15477 += 1, R11525 += 1 };
  s2 -> s1 [0, 65535] { R15539 += 1, R15477 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R15539 += 1, R15476 += 1, R15477 += 1 };
  s2 -> s1 [78, 65535] { R15539 += 1, R15477 += 1, R11525 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R15539 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R15541 += 1, R15479 += 1 };
  s0 -> s2 [0, 65535] { R15541 += 1, R15478 += 1, R15479 += 1 };
  s0 -> s3 [0, 65535] { R15541 += 1, R15479 += 1, R15346 += 1, R15347 += 1 };
  s0 -> s0 [0, 65535] { R15540 += 1, R15541 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R15541 += 1 };
  s1 -> s1 [0, 65535] { R15541 += 1, R15479 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R15541 += 1, R15479 += 1 };
  s2 -> s2 [0, 65535] { R15541 += 1, R15478 += 1, R15479 += 1 };
  s2 -> s3 [0, 65535] { R15541 += 1, R15479 += 1, R15346 += 1, R15347 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R15541 += 1 };
  s3 -> s1 [0, 65535] { R15541 += 1, R15479 += 1 };
  s3 -> s3 [0, 65535] { R15541 += 1, R15479 += 1, R15346 += 1, R15347 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R15541 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 77] { R15543 += 1, R15481 += 1, R15351 += 1 };
  s0 -> s0 [0, 65535] { R15542 += 1, R15543 += 1 };
  s0 -> s2 [0, 65535] { R15543 += 1, R15480 += 1, R15481 += 1 };
  s0 -> s1 [0, 65535] { R15543 += 1, R15481 += 1 };
  s0 -> s1 [84, 65535] { R15543 += 1, R15481 += 1, R15351 += 1 };
  s1 -> s1 [0, 77] { R15543 += 1, R15481 += 1, R15351 += 1 };
  s1 -> s4 [0, 65535] { R15543 += 1 };
  s1 -> s1 [0, 65535] { R15543 += 1, R15481 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [84, 65535] { R15543 += 1, R15481 += 1, R15351 += 1 };
  s2 -> s1 [0, 77] { R15543 += 1, R15481 += 1, R15351 += 1 };
  s2 -> s2 [0, 65535] { R15543 += 1, R15480 += 1, R15481 += 1 };
  s2 -> s1 [0, 65535] { R15543 += 1, R15481 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [84, 65535] { R15543 += 1, R15481 += 1, R15351 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R15543 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R15545 += 1, R15483 += 1, R15355 += 1, R15356 += 1 };
  s0 -> s2 [0, 65535] { R15545 += 1, R15482 += 1, R15483 += 1 };
  s0 -> s0 [0, 65535] { R15544 += 1, R15545 += 1 };
  s0 -> s3 [0, 65535] { R15545 += 1, R15483 += 1, R15356 += 1, R15357 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R15545 += 1 };
  s1 -> s1 [0, 65535] { R15545 += 1, R15483 += 1, R15355 += 1, R15356 += 1 };
  s1 -> s3 [0, 65535] { R15545 += 1, R15483 += 1, R15356 += 1, R15357 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R15545 += 1, R15483 += 1, R15355 += 1, R15356 += 1 };
  s2 -> s2 [0, 65535] { R15545 += 1, R15482 += 1, R15483 += 1 };
  s2 -> s3 [0, 65535] { R15545 += 1, R15483 += 1, R15356 += 1, R15357 += 1 };
  s3 -> s4 [0, 65535] { R15545 += 1, R15483 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R15545 += 1 };
  s3 -> s3 [0, 65535] { R15545 += 1, R15483 += 1, R15356 += 1, R15357 += 1 };
  s4 -> s4 [0, 65535] { R15545 += 1, R15483 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R15545 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15545 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 76] { R15547 += 1, R15485 += 1, R15465 += 1 };
  s0 -> s1 [0, 65535] { R15547 += 1, R15485 += 1 };
  s0 -> s0 [0, 65535] { R15546 += 1, R15547 += 1 };
  s0 -> s2 [0, 65535] { R15547 += 1, R15484 += 1, R15485 += 1 };
  s0 -> s3 [77, 77] { R15547 += 1, R15485 += 1, R15465 += 1 };
  s0 -> s4 [77, 77] { R15547 += 1, R15485 += 1, R15465 += 1 };
  s0 -> s1 [85, 65535] { R15547 += 1, R15485 += 1, R15465 += 1 };
  s1 -> s1 [0, 76] { R15547 += 1, R15485 += 1, R15465 += 1 };
  s1 -> s1 [0, 65535] { R15547 += 1, R15485 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R15547 += 1 };
  s1 -> s3 [77, 77] { R15547 += 1, R15485 += 1, R15465 += 1 };
  s1 -> s4 [77, 77] { R15547 += 1, R15485 += 1, R15465 += 1 };
  s1 -> s1 [85, 65535] { R15547 += 1, R15485 += 1, R15465 += 1 };
  s2 -> s1 [0, 76] { R15547 += 1, R15485 += 1, R15465 += 1 };
  s2 -> s1 [0, 65535] { R15547 += 1, R15485 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R15547 += 1, R15484 += 1, R15485 += 1 };
  s2 -> s3 [77, 77] { R15547 += 1, R15485 += 1, R15465 += 1 };
  s2 -> s4 [77, 77] { R15547 += 1, R15485 += 1, R15465 += 1 };
  s2 -> s1 [85, 65535] { R15547 += 1, R15485 += 1, R15465 += 1 };
  s3 -> s3 [0, 65535] { R15547 += 1, R15485 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R15547 += 1 };
  s4 -> s4 [0, 77] { R15547 += 1, R15485 += 1, R15465 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R15547 += 1 };
  s4 -> s4 [0, 65535] { R15547 += 1, R15485 += 1 };
  s4 -> s4 [85, 65535] { R15547 += 1, R15485 += 1, R15465 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15547 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R15548 += 1, R15549 += 1 };
  s0 -> s1 [0, 65535] { R15549 += 1, R15504 += 1, R15505 += 1 };
  s0 -> s2 [0, 65535] { R15549 += 1, R15505 += 1, R18 += 1 };
  s1 -> s1 [0, 65535] { R15549 += 1, R15504 += 1, R15505 += 1 };
  s1 -> s2 [0, 65535] { R15549 += 1, R15505 += 1, R18 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R15549 += 1 };
  s2 -> s2 [0, 65535] { R15549 += 1, R15505 += 1, R18 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R15549 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 72] { R15551 += 1, R15507 += 1 };
  s0 -> s2 [0, 65535] { R15551 += 1, R15506 += 1, R15507 += 1 };
  s0 -> s0 [0, 65535] { R15550 += 1, R15551 += 1 };
  s0 -> s3 [73, 73] { R15551 += 1, R15507 += 1 };
  s0 -> s4 [73, 73] { R15551 += 1, R15507 += 1 };
  s0 -> s5 [77, 77] { R15551 += 1, R15507 += 1 };
  s0 -> s1 [78, 65535] { R15551 += 1, R15507 += 1 };
  s1 -> s1 [0, 72] { R15551 += 1, R15507 += 1 };
  s1 -> s3 [73, 73] { R15551 += 1, R15507 += 1 };
  s1 -> s4 [73, 73] { R15551 += 1, R15507 += 1 };
  s1 -> s5 [77, 77] { R15551 += 1, R15507 += 1 };
  s1 -> s1 [78, 65535] { R15551 += 1, R15507 += 1 };
  s2 -> s1 [0, 72] { R15551 += 1, R15507 += 1 };
  s2 -> s2 [0, 65535] { R15551 += 1, R15506 += 1, R15507 += 1 };
  s2 -> s3 [73, 73] { R15551 += 1, R15507 += 1 };
  s2 -> s4 [73, 73] { R15551 += 1, R15507 += 1 };
  s2 -> s5 [77, 77] { R15551 += 1, R15507 += 1 };
  s2 -> s1 [78, 65535] { R15551 += 1, R15507 += 1 };
  s4 -> s4 [0, 73] { R15551 += 1, R15507 += 1 };
  s4 -> s7 [77, 77] { R15551 += 1, R15507 += 1 };
  s4 -> s4 [78, 65535] { R15551 += 1, R15507 += 1 };
  s5 -> s5 [0, 72] { R15551 += 1, R15507 += 1 };
  s5 -> s5 [0, 65535] { R15551 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [73, 73] { R15551 += 1, R15507 += 1 };
  s5 -> s8 [73, 73] { R15551 += 1, R15507 += 1 };
  s5 -> s5 [77, 65535] { R15551 += 1, R15507 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 73] { R15551 += 1, R15507 += 1 };
  s7 -> s7 [0, 65535] { R15551 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [77, 65535] { R15551 += 1, R15507 += 1 };
  s8 -> s8 [0, 65535] { R15551 += 1 };
  s8 -> s6 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 72] { R15553 += 1, R15509 += 1, R66 += 1 };
  s0 -> s2 [0, 65535] { R15553 += 1, R15508 += 1, R15509 += 1 };
  s0 -> s0 [0, 65535] { R15552 += 1, R15553 += 1 };
  s0 -> s3 [73, 73] { R15553 += 1, R15509 += 1, R66 += 1 };
  s0 -> s4 [73, 73] { R15553 += 1, R15509 += 1, R66 += 1 };
  s0 -> s1 [74, 65535] { R15553 += 1, R15509 += 1, R66 += 1 };
  s1 -> s1 [0, 72] { R15553 += 1, R15509 += 1, R66 += 1 };
  s1 -> s1 [0, 65535] { R15553 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [73, 73] { R15553 += 1, R15509 += 1, R66 += 1 };
  s1 -> s4 [73, 73] { R15553 += 1, R15509 += 1, R66 += 1 };
  s1 -> s1 [74, 65535] { R15553 += 1, R15509 += 1, R66 += 1 };
  s2 -> s1 [0, 72] { R15553 += 1, R15509 += 1, R66 += 1 };
  s2 -> s2 [0, 65535] { R15553 += 1, R15508 += 1, R15509 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [73, 73] { R15553 += 1, R15509 += 1, R66 += 1 };
  s2 -> s4 [73, 73] { R15553 += 1, R15509 += 1, R66 += 1 };
  s2 -> s1 [74, 65535] { R15553 += 1, R15509 += 1, R66 += 1 };
  s3 -> s3 [0, 65535] { R15553 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R15553 += 1, R15509 += 1, R66 += 1 };
  s4 -> s5 [0, 65535] { R15553 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R15553 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 72] { R15555 += 1, R15511 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R15554 += 1, R15555 += 1 };
  s0 -> s2 [0, 65535] { R15555 += 1, R15510 += 1, R15511 += 1 };
  s0 -> s3 [73, 73] { R15555 += 1, R15511 += 1, R68 += 1 };
  s0 -> s4 [73, 73] { R15555 += 1, R15511 += 1, R68 += 1 };
  s0 -> s1 [74, 65535] { R15555 += 1, R15511 += 1, R68 += 1 };
  s1 -> s1 [0, 72] { R15555 += 1, R15511 += 1, R68 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R15555 += 1 };
  s1 -> s3 [73, 73] { R15555 += 1, R15511 += 1, R68 += 1 };
  s1 -> s4 [73, 73] { R15555 += 1, R15511 += 1, R68 += 1 };
  s1 -> s1 [74, 65535] { R15555 += 1, R15511 += 1, R68 += 1 };
  s2 -> s1 [0, 72] { R15555 += 1, R15511 += 1, R68 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R15555 += 1, R15510 += 1, R15511 += 1 };
  s2 -> s3 [73, 73] { R15555 += 1, R15511 += 1, R68 += 1 };
  s2 -> s4 [73, 73] { R15555 += 1, R15511 += 1, R68 += 1 };
  s2 -> s1 [74, 65535] { R15555 += 1, R15511 += 1, R68 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R15555 += 1, R15511 += 1, R68 += 1 };
  s3 -> s6 [0, 65535] { R15555 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R15555 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15555 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 72] { R15557 += 1, R15513 += 1, R11523 += 1 };
  s0 -> s2 [0, 72] { R15557 += 1, R15513 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s0 [0, 65535] { R15556 += 1, R15557 += 1 };
  s0 -> s3 [0, 65535] { R15557 += 1, R15512 += 1, R15513 += 1 };
  s0 -> s4 [73, 73] { R15557 += 1, R15513 += 1, R11523 += 1 };
  s0 -> s5 [73, 73] { R15557 += 1, R15513 += 1, R11523 += 1 };
  s0 -> s6 [73, 73] { R15557 += 1, R15513 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s7 [73, 73] { R15557 += 1, R15513 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s1 [74, 76] { R15557 += 1, R15513 += 1, R11523 += 1 };
  s0 -> s2 [74, 65535] { R15557 += 1, R15513 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s1 [78, 65535] { R15557 += 1, R15513 += 1, R11523 += 1 };
  s1 -> s1 [0, 72] { R15557 += 1, R15513 += 1, R11523 += 1 };
  s1 -> s1 [0, 65535] { R15557 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [73, 73] { R15557 += 1, R15513 += 1 };
  s1 -> s5 [73, 73] { R15557 += 1, R15513 += 1 };
  s1 -> s1 [74, 76] { R15557 += 1, R15513 += 1, R11523 += 1 };
  s1 -> s1 [74, 65535] { R15557 += 1, R15513 += 1 };
  s1 -> s1 [78, 65535] { R15557 += 1, R15513 += 1, R11523 += 1 };
  s2 -> s1 [0, 72] { R15557 += 1, R15513 += 1, R11523 += 1 };
  s2 -> s2 [0, 72] { R15557 += 1, R15513 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s4 [73, 73] { R15557 += 1, R15513 += 1, R11523 += 1 };
  s2 -> s5 [73, 73] { R15557 += 1, R15513 += 1, R11523 += 1 };
  s2 -> s6 [73, 73] { R15557 += 1, R15513 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s7 [73, 73] { R15557 += 1, R15513 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s1 [74, 76] { R15557 += 1, R15513 += 1, R11523 += 1 };
  s2 -> s2 [74, 65535] { R15557 += 1, R15513 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s1 [78, 65535] { R15557 += 1, R15513 += 1, R11523 += 1 };
  s3 -> s1 [0, 72] { R15557 += 1, R15513 += 1, R11523 += 1 };
  s3 -> s2 [0, 72] { R15557 += 1, R15513 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s3 [0, 65535] { R15557 += 1, R15512 += 1, R15513 += 1 };
  s3 -> s4 [73, 73] { R15557 += 1, R15513 += 1, R11523 += 1 };
  s3 -> s5 [73, 73] { R15557 += 1, R15513 += 1, R11523 += 1 };
  s3 -> s6 [73, 73] { R15557 += 1, R15513 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s7 [73, 73] { R15557 += 1, R15513 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s1 [74, 76] { R15557 += 1, R15513 += 1, R11523 += 1 };
  s3 -> s2 [74, 65535] { R15557 += 1, R15513 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s1 [78, 65535] { R15557 += 1, R15513 += 1, R11523 += 1 };
  s4 -> s4 [0, 65535] { R15557 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s5 [0, 76] { R15557 += 1, R15513 += 1, R11523 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R15557 += 1, R15513 += 1 };
  s5 -> s9 [0, 65535] { R15557 += 1 };
  s5 -> s5 [78, 65535] { R15557 += 1, R15513 += 1, R11523 += 1 };
  s6 -> s5 [0, 76] { R15557 += 1, R15513 += 1, R11523 += 1 };
  s6 -> s6 [0, 65535] { R15557 += 1, R15513 += 1, R11522 += 1, R11523 += 1 };
  s6 -> s5 [78, 65535] { R15557 += 1, R15513 += 1, R11523 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R15557 += 1 };
  accepting s4, s8, s5, s9, s1;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 72] { R15559 += 1, R15515 += 1, R15342 += 1, R15343 += 1 };
  s0 -> s2 [0, 72] { R15559 += 1, R15515 += 1, R15343 += 1, R15344 += 1 };
  s0 -> s3 [0, 65535] { R15559 += 1, R15514 += 1, R15515 += 1 };
  s0 -> s0 [0, 65535] { R15558 += 1, R15559 += 1 };
  s0 -> s4 [73, 73] { R15559 += 1, R15515 += 1, R15343 += 1, R15344 += 1 };
  s0 -> s5 [73, 73] { R15559 += 1, R15515 += 1, R15342 += 1, R15343 += 1 };
  s0 -> s6 [73, 73] { R15559 += 1, R15515 += 1, R15342 += 1, R15343 += 1 };
  s0 -> s7 [73, 73] { R15559 += 1, R15515 += 1, R15343 += 1, R15344 += 1 };
  s0 -> s1 [74, 65535] { R15559 += 1, R15515 += 1, R15342 += 1, R15343 += 1 };
  s0 -> s2 [74, 65535] { R15559 += 1, R15515 += 1, R15343 += 1, R15344 += 1 };
  s1 -> s1 [0, 72] { R15559 += 1, R15515 += 1, R15342 += 1, R15343 += 1 };
  s1 -> s2 [0, 72] { R15559 += 1, R15515 += 1, R15343 += 1, R15344 += 1 };
  s1 -> s4 [73, 73] { R15559 += 1, R15515 += 1, R15343 += 1, R15344 += 1 };
  s1 -> s5 [73, 73] { R15559 += 1, R15515 += 1, R15342 += 1, R15343 += 1 };
  s1 -> s6 [73, 73] { R15559 += 1, R15515 += 1, R15342 += 1, R15343 += 1 };
  s1 -> s7 [73, 73] { R15559 += 1, R15515 += 1, R15343 += 1, R15344 += 1 };
  s1 -> s1 [74, 65535] { R15559 += 1, R15515 += 1, R15342 += 1, R15343 += 1 };
  s1 -> s2 [74, 65535] { R15559 += 1, R15515 += 1, R15343 += 1, R15344 += 1 };
  s2 -> s2 [0, 72] { R15559 += 1, R15515 += 1, R15343 += 1, R15344 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R15559 += 1 };
  s2 -> s4 [73, 73] { R15559 += 1, R15515 += 1, R15343 += 1, R15344 += 1 };
  s2 -> s7 [73, 73] { R15559 += 1, R15515 += 1, R15343 += 1, R15344 += 1 };
  s2 -> s2 [74, 65535] { R15559 += 1, R15515 += 1, R15343 += 1, R15344 += 1 };
  s3 -> s1 [0, 72] { R15559 += 1, R15515 += 1, R15342 += 1, R15343 += 1 };
  s3 -> s2 [0, 72] { R15559 += 1, R15515 += 1, R15343 += 1, R15344 += 1 };
  s3 -> s3 [0, 65535] { R15559 += 1, R15514 += 1, R15515 += 1 };
  s3 -> s4 [73, 73] { R15559 += 1, R15515 += 1, R15343 += 1, R15344 += 1 };
  s3 -> s5 [73, 73] { R15559 += 1, R15515 += 1, R15342 += 1, R15343 += 1 };
  s3 -> s6 [73, 73] { R15559 += 1, R15515 += 1, R15342 += 1, R15343 += 1 };
  s3 -> s7 [73, 73] { R15559 += 1, R15515 += 1, R15343 += 1, R15344 += 1 };
  s3 -> s1 [74, 65535] { R15559 += 1, R15515 += 1, R15342 += 1, R15343 += 1 };
  s3 -> s2 [74, 65535] { R15559 += 1, R15515 += 1, R15343 += 1, R15344 += 1 };
  s4 -> s4 [0, 65535] { R15559 += 1, R15515 += 1, R15343 += 1, R15344 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s9 [0, 65535] { R15559 += 1 };
  s6 -> s4 [0, 65535] { R15559 += 1, R15515 += 1, R15343 += 1, R15344 += 1 };
  s6 -> s6 [0, 65535] { R15559 += 1, R15515 += 1, R15342 += 1, R15343 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R15559 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R15559 += 1 };
  accepting s4, s8, s2, s9, s7;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 72] { R15561 += 1, R15517 += 1, R15348 += 1, R15349 += 1 };
  s0 -> s2 [0, 72] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s0 -> s3 [0, 65535] { R15561 += 1, R15516 += 1, R15517 += 1 };
  s0 -> s0 [0, 65535] { R15560 += 1, R15561 += 1 };
  s0 -> s4 [73, 73] { R15561 += 1, R15517 += 1, R15348 += 1, R15349 += 1 };
  s0 -> s5 [73, 73] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s0 -> s6 [73, 73] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s0 -> s7 [73, 73] { R15561 += 1, R15517 += 1, R15348 += 1, R15349 += 1 };
  s0 -> s2 [74, 77] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s0 -> s1 [74, 65535] { R15561 += 1, R15517 += 1, R15348 += 1, R15349 += 1 };
  s0 -> s8 [84, 84] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s0 -> s2 [85, 65535] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s1 -> s1 [0, 72] { R15561 += 1, R15517 += 1, R15348 += 1, R15349 += 1 };
  s1 -> s2 [0, 72] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s1 -> s4 [73, 73] { R15561 += 1, R15517 += 1, R15348 += 1, R15349 += 1 };
  s1 -> s5 [73, 73] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s1 -> s6 [73, 73] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s1 -> s7 [73, 73] { R15561 += 1, R15517 += 1, R15348 += 1, R15349 += 1 };
  s1 -> s2 [74, 77] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s1 -> s1 [74, 65535] { R15561 += 1, R15517 += 1, R15348 += 1, R15349 += 1 };
  s1 -> s8 [84, 84] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s1 -> s2 [85, 65535] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s2 -> s2 [0, 72] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s2 -> s5 [73, 73] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s2 -> s6 [73, 73] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s2 -> s2 [74, 77] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s2 -> s8 [84, 84] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s2 -> s2 [85, 65535] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s3 -> s1 [0, 72] { R15561 += 1, R15517 += 1, R15348 += 1, R15349 += 1 };
  s3 -> s2 [0, 72] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s3 -> s3 [0, 65535] { R15561 += 1, R15516 += 1, R15517 += 1 };
  s3 -> s4 [73, 73] { R15561 += 1, R15517 += 1, R15348 += 1, R15349 += 1 };
  s3 -> s5 [73, 73] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s3 -> s6 [73, 73] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s3 -> s7 [73, 73] { R15561 += 1, R15517 += 1, R15348 += 1, R15349 += 1 };
  s3 -> s2 [74, 77] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s3 -> s1 [74, 65535] { R15561 += 1, R15517 += 1, R15348 += 1, R15349 += 1 };
  s3 -> s8 [84, 84] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s3 -> s2 [85, 65535] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s6 -> s6 [0, 77] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s6 -> s10 [84, 84] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s6 -> s6 [85, 65535] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s7 -> s6 [0, 77] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s7 -> s7 [0, 65535] { R15561 += 1, R15517 += 1, R15348 += 1, R15349 += 1 };
  s7 -> s10 [84, 84] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s7 -> s6 [85, 65535] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s8 -> s8 [0, 72] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s8 -> s8 [0, 65535] { R15561 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [73, 73] { R15561 += 1, R15517 += 1 };
  s8 -> s11 [73, 73] { R15561 += 1, R15517 += 1 };
  s8 -> s8 [74, 77] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s8 -> s8 [74, 65535] { R15561 += 1, R15517 += 1 };
  s8 -> s8 [84, 65535] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 77] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s10 -> s10 [0, 65535] { R15561 += 1, R15517 += 1 };
  s10 -> s9 [0, 65535];
  s10 -> s12 [0, 65535] { R15561 += 1 };
  s10 -> s10 [84, 65535] { R15561 += 1, R15517 += 1, R15349 += 1 };
  s11 -> s11 [0, 65535] { R15561 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R15561 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 72] { R15563 += 1, R15519 += 1, R15352 += 1, R15353 += 1 };
  s0 -> s0 [0, 65535] { R15562 += 1, R15563 += 1 };
  s0 -> s2 [0, 65535] { R15563 += 1, R15518 += 1, R15519 += 1 };
  s0 -> s3 [73, 73] { R15563 += 1, R15519 += 1, R15352 += 1, R15353 += 1 };
  s0 -> s4 [73, 73] { R15563 += 1, R15519 += 1, R15352 += 1, R15353 += 1 };
  s0 -> s1 [74, 65535] { R15563 += 1, R15519 += 1, R15352 += 1, R15353 += 1 };
  s1 -> s1 [0, 72] { R15563 += 1, R15519 += 1, R15352 += 1, R15353 += 1 };
  s1 -> s1 [0, 65535] { R15563 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [73, 73] { R15563 += 1, R15519 += 1, R15352 += 1, R15353 += 1 };
  s1 -> s4 [73, 73] { R15563 += 1, R15519 += 1, R15352 += 1, R15353 += 1 };
  s1 -> s1 [74, 65535] { R15563 += 1, R15519 += 1, R15352 += 1, R15353 += 1 };
  s2 -> s1 [0, 72] { R15563 += 1, R15519 += 1, R15352 += 1, R15353 += 1 };
  s2 -> s2 [0, 65535] { R15563 += 1, R15518 += 1, R15519 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [73, 73] { R15563 += 1, R15519 += 1, R15352 += 1, R15353 += 1 };
  s2 -> s4 [73, 73] { R15563 += 1, R15519 += 1, R15352 += 1, R15353 += 1 };
  s2 -> s1 [74, 65535] { R15563 += 1, R15519 += 1, R15352 += 1, R15353 += 1 };
  s3 -> s3 [0, 65535] { R15563 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R15563 += 1, R15519 += 1, R15352 += 1, R15353 += 1 };
  s4 -> s6 [0, 65535] { R15563 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15563 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 72] { R15565 += 1, R15521 += 1, R15463 += 1 };
  s0 -> s2 [0, 72] { R15565 += 1, R15521 += 1, R15462 += 1, R15463 += 1 };
  s0 -> s0 [0, 65535] { R15564 += 1, R15565 += 1 };
  s0 -> s3 [0, 65535] { R15565 += 1, R15520 += 1, R15521 += 1 };
  s0 -> s4 [73, 73] { R15565 += 1, R15521 += 1, R15463 += 1 };
  s0 -> s5 [73, 73] { R15565 += 1, R15521 += 1, R15463 += 1 };
  s0 -> s6 [73, 73] { R15565 += 1, R15521 += 1, R15462 += 1, R15463 += 1 };
  s0 -> s7 [73, 73] { R15565 += 1, R15521 += 1, R15462 += 1, R15463 += 1 };
  s0 -> s1 [74, 76] { R15565 += 1, R15521 += 1, R15463 += 1 };
  s0 -> s2 [74, 65535] { R15565 += 1, R15521 += 1, R15462 += 1, R15463 += 1 };
  s0 -> s1 [85, 65535] { R15565 += 1, R15521 += 1, R15463 += 1 };
  s1 -> s1 [0, 72] { R15565 += 1, R15521 += 1, R15463 += 1 };
  s1 -> s1 [0, 65535] { R15565 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s4 [73, 73] { R15565 += 1, R15521 += 1 };
  s1 -> s5 [73, 73] { R15565 += 1, R15521 += 1 };
  s1 -> s1 [74, 76] { R15565 += 1, R15521 += 1, R15463 += 1 };
  s1 -> s1 [74, 65535] { R15565 += 1, R15521 += 1 };
  s1 -> s1 [85, 65535] { R15565 += 1, R15521 += 1, R15463 += 1 };
  s2 -> s1 [0, 72] { R15565 += 1, R15521 += 1, R15463 += 1 };
  s2 -> s2 [0, 72] { R15565 += 1, R15521 += 1, R15462 += 1, R15463 += 1 };
  s2 -> s4 [73, 73] { R15565 += 1, R15521 += 1, R15463 += 1 };
  s2 -> s5 [73, 73] { R15565 += 1, R15521 += 1, R15463 += 1 };
  s2 -> s6 [73, 73] { R15565 += 1, R15521 += 1, R15462 += 1, R15463 += 1 };
  s2 -> s7 [73, 73] { R15565 += 1, R15521 += 1, R15462 += 1, R15463 += 1 };
  s2 -> s1 [74, 76] { R15565 += 1, R15521 += 1, R15463 += 1 };
  s2 -> s2 [74, 65535] { R15565 += 1, R15521 += 1, R15462 += 1, R15463 += 1 };
  s2 -> s1 [85, 65535] { R15565 += 1, R15521 += 1, R15463 += 1 };
  s3 -> s1 [0, 72] { R15565 += 1, R15521 += 1, R15463 += 1 };
  s3 -> s2 [0, 72] { R15565 += 1, R15521 += 1, R15462 += 1, R15463 += 1 };
  s3 -> s3 [0, 65535] { R15565 += 1, R15520 += 1, R15521 += 1 };
  s3 -> s4 [73, 73] { R15565 += 1, R15521 += 1, R15463 += 1 };
  s3 -> s5 [73, 73] { R15565 += 1, R15521 += 1, R15463 += 1 };
  s3 -> s6 [73, 73] { R15565 += 1, R15521 += 1, R15462 += 1, R15463 += 1 };
  s3 -> s7 [73, 73] { R15565 += 1, R15521 += 1, R15462 += 1, R15463 += 1 };
  s3 -> s1 [74, 76] { R15565 += 1, R15521 += 1, R15463 += 1 };
  s3 -> s2 [74, 65535] { R15565 += 1, R15521 += 1, R15462 += 1, R15463 += 1 };
  s3 -> s1 [85, 65535] { R15565 += 1, R15521 += 1, R15463 += 1 };
  s4 -> s4 [0, 65535] { R15565 += 1 };
  s4 -> s9 [0, 65535];
  s5 -> s5 [0, 76] { R15565 += 1, R15521 += 1, R15463 += 1 };
  s5 -> s5 [0, 65535] { R15565 += 1, R15521 += 1 };
  s5 -> s8 [0, 65535] { R15565 += 1 };
  s5 -> s9 [0, 65535];
  s5 -> s5 [85, 65535] { R15565 += 1, R15521 += 1, R15463 += 1 };
  s7 -> s5 [0, 76] { R15565 += 1, R15521 += 1, R15463 += 1 };
  s7 -> s7 [0, 65535] { R15565 += 1, R15521 += 1, R15462 += 1, R15463 += 1 };
  s7 -> s5 [85, 65535] { R15565 += 1, R15521 += 1, R15463 += 1 };
  s8 -> s8 [0, 65535] { R15565 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  accepting s4, s8, s5, s9, s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [105, 105];
  accepting s1;
};
};
synchronised {  // Automata constraining P54
automaton P54_0 {
  init s0;
  s0 -> s1 [109, 109];
  accepting s1;
};
};
constraint R2 = R15565 && R20 - R15565 = -1 && R21 = R15565 && R22 - R15565 = -1 && R23 = R15565 && R24 = 0 && R25 = 1 && R26 = 0 && R27 = 1 && R38 + R67 + R66 + -1*R15351 + -1*R15349 - R53 = 0 && R52 + R15350 + R15348 = 0 && R15506 = 0 && R15507 = 0 && R15512 = 0 && R15513 = 0 && R15514 = 0 && R15515 = 0 && R15516 = 0 && R15517 = 0 && R15520 = 0 && R15521 = 0 && R15522 = 0 && R15523 = R15565 && R15524 = 0 && R15525 = R15565 && R15526 = 0 && R15527 = R15565 && R15528 = 0 && R15529 = R15565 && R15530 = 0 && R15531 = R15565 && R15532 = 0 && R15533 = R15565 && R15534 = 0 && R15535 = R15565 && R15536 = 0 && R15537 = R15565 && R15538 = 0 && R15539 = R15565 && R15540 = 0 && R15541 = R15565 && R15542 = 0 && R15543 = R15565 && R15544 = 0 && R15545 = R15565 && R15546 = 0 && R15547 = R15565 && R15548 = 0 && R15549 = R15565 && R15550 = 0 && R15551 = R15565 && R15552 = 0 && R15553 = R15565 && R15554 = 0 && R15555 = R15565 && R15556 = 0 && R15557 = R15565 && R15558 = 0 && R15559 = R15565 && R15560 = 0 && R15561 = R15565 && R15562 = 0 && R15563 = R15565 && R15564 = 0 && -1 < R1 && R8 < 1 && R11 < 1 && R12 < 1 && R40 + R69 + R68 < 1 && -1*R15351 + -1*R15349 - R53 < 1 && 0 < R15565 && (R1 != 0 || R17 = 0 || (R15466 = 0 && R15467 = 0)) && (R1 != 0 || R17 = 0 || (R15468 = 0 && R15469 = 0)) && (R1 != 0 || R17 = 0 || (R15470 = 0 && R15471 = 0)) && (R1 != 0 || R17 = 0 || (R15472 = 0 && R15473 = 0)) && (R1 != 0 || R17 = 0 || (R15474 = 0 && R15475 = 0)) && (R1 != 0 || R17 = 0 || (R15476 = 0 && R15477 = 0)) && (R1 != 0 || R17 = 0 || (R15478 = 0 && R15479 = 0)) && (R1 != 0 || R17 = 0 || (R15480 = 0 && R15481 = 0)) && (R1 != 0 || R17 = 0 || (R15482 = 0 && R15483 = 0)) && (R1 != 0 || R17 = 0 || (R15484 = 0 && R15485 = 0)) && (R48 + R15347 + R15344 != 0 || ((R42 + R11524 + R11522 != 0 || R43 + R11525 + R11523 + -1*R15351 + -1*R15349 - R53 = 0 || R53 + R15351 + R15349 < 1) && (R42 + R11524 + R11522 = 0 || R53 + R15351 + R15349 < 1))) && (R48 + R15347 + R15344 != 0 || ((R46 + R15345 + R15342 != 0 || R47 + R15346 + R15343 + -1*R15351 + -1*R15349 - R53 = 0 || R53 + R15351 + R15349 < 1) && (R46 + R15345 + R15342 = 0 || R53 + R15351 + R15349 < 1))) && (R15466 != 0 || R1 = R15467 || R1 < 1) && (R15468 != 0 || R1 = R15469 || R1 < 1) && (R15470 != 0 || R1 = R15471 || R1 < 1) && (R15472 != 0 || R1 = R15473 || R1 < 1) && (R15474 != 0 || R1 = R15475 || R1 < 1) && (R15476 != 0 || R1 = R15477 || R1 < 1) && (R15478 != 0 || R1 = R15479 || R1 < 1) && (R15480 != 0 || R1 = R15481 || R1 < 1) && (R15482 != 0 || R1 = R15483 || R1 < 1) && (R15484 != 0 || R1 = R15485 || R1 < 1) && (R18 = 0 || (R15504 = 0 && R15505 = 0)) && (R18 = 0 || (R15508 = 0 && R15509 = 0)) && (R18 = 0 || (R15510 = 0 && R15511 = 0)) && (R18 = 0 || (R15518 = 0 && R15519 = 0)) && (R19 = 0 || (R15486 = 0 && R15487 = 0)) && (R19 = 0 || (R15488 = 0 && R15489 = 0)) && (R19 = 0 || (R15490 = 0 && R15491 = 0)) && (R19 = 0 || (R15492 = 0 && R15493 = 0)) && (R19 = 0 || (R15494 = 0 && R15495 = 0)) && (R19 = 0 || (R15496 = 0 && R15497 = 0)) && (R19 = 0 || (R15498 = 0 && R15499 = 0)) && (R19 = 0 || (R15500 = 0 && R15501 = 0)) && (R19 = 0 || (R15502 = 0 && R15503 = 0)) && (R48 + R15347 + R15344 = 0 || (R42 + R11524 + R11522 = 0 && R43 + R11525 + R11523 + -1*R15351 + -1*R15349 - R53 = 0)) && (R48 + R15347 + R15344 = 0 || (R46 + R15345 + R15342 = 0 && R47 + R15346 + R15343 + -1*R15351 + -1*R15349 - R53 = 0)) && (R58 + R15357 + R15354 = 0 || (R56 + R15355 + R15352 = 0 && R57 + R15356 + R15353 = 0)) && (R58 + R15357 + R15354 = 0 || (R62 + R15464 + R15462 = 0 && R63 + R15465 + R15463 = 0)) && (R15466 = 0 || R1 < 1) && (R15468 = 0 || R1 < 1) && (R15470 = 0 || R1 < 1) && (R15472 = 0 || R1 < 1) && (R15474 = 0 || R1 < 1) && (R15476 = 0 || R1 < 1) && (R15478 = 0 || R1 < 1) && (R15480 = 0 || R1 < 1) && (R15482 = 0 || R1 < 1) && (R15484 = 0 || R1 < 1);
// End of Parikh automata intersection problem
