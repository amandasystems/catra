// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R2, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R5, R63, R65, R6563, R6564, R6565, R6566, R6567, R6568, R6569, R6570, R67, R68, R69, R73, R74, R77, R78, R7845, R7846, R7847, R7848, R7849, R7850, R7851, R7852, R7853, R7854, R7855, R7856, R7857, R7858, R7859, R7860, R7861, R7862, R7863, R7864, R7865, R7866, R7867, R7868, R7869, R7870, R7871, R7872, R7873, R7874, R7875, R7876, R7877, R7878, R7879, R7880, R7881, R7882, R7883, R7884, R7885, R7886, R7887, R7888, R7889, R7890, R7891, R7892, R7893, R7894, R7895, R7896, R7897, R7898, R7899, R7900, R7901, R7902, R7903, R7904, R7905, R7906, R7907, R7908, R7909, R7910, R7911, R7912, R7913, R7914, R7915, R7916, R7917, R7918, R7919, R7920, R7921, R7922, R7923, R7924, R7925, R7926, R7927, R7928, R7929, R7930, R7931, R7932, R7933, R7934, R7935, R7936, R7937, R7938, R7939, R7940, R7941, R7942, R7943, R7944, R7945, R7946, R7947, R7948, R7949, R7950, R7951, R7952, R7953, R7954, R7955, R7956, R7957, R7958, R7959, R7960, R7961, R7962, R7963, R7964, R7965, R7966, R7967, R7968, R7969, R7970, R7971, R7972, R7973, R7974, R7975, R7976, R7977, R7978, R7979, R7980, R7981, R7982, R7983, R7984, R7985, R7986, R7987, R7988, R7989, R7990, R7991, R7992, R7993, R7994, R7995, R7996, R7997, R7998, R7999, R8000, R8001, R8002, R8003, R8004, R8005, R8006, R8007, R8008, R8009, R8010, R8011, R8012, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R26 += 1 };
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R7894 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R7893 += 1, R7894 += 1 };
  s1 -> s1 [0, 65535] { R7894 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R7896 += 1 };
  s0 -> s0 [0, 65535] { R7895 += 1, R7896 += 1 };
  s0 -> s2 [70, 70] { R7896 += 1 };
  s0 -> s3 [70, 70] { R7896 += 1 };
  s0 -> s1 [76, 65535] { R7896 += 1 };
  s1 -> s1 [0, 69] { R7896 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7896 += 1 };
  s1 -> s3 [70, 70] { R7896 += 1 };
  s1 -> s1 [76, 65535] { R7896 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R7896 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R7896 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R7898 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R7897 += 1, R7898 += 1 };
  s0 -> s2 [70, 70] { R7898 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R7898 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R7898 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R7898 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7898 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R7898 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R7898 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R7898 += 1, R63 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R7900 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R7899 += 1, R7900 += 1 };
  s0 -> s2 [70, 70] { R7900 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R7900 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R7900 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R7900 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7900 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R7900 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R7900 += 1, R65 += 1 };
  s2 -> s2 [0, 65535] { R7900 += 1, R65 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R7902 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R7901 += 1, R7902 += 1 };
  s0 -> s2 [70, 70] { R7902 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R7902 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R7902 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R7902 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7902 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R7902 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R7902 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535] { R7902 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R7904 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R7903 += 1, R7904 += 1 };
  s0 -> s2 [70, 70] { R7904 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R7904 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R7904 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R7904 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7904 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R7904 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R7904 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R7904 += 1, R73 += 1, R74 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R7906 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R7905 += 1, R7906 += 1 };
  s0 -> s2 [70, 70] { R7906 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R7906 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R7906 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R7906 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7906 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R7906 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R7906 += 1, R77 += 1, R78 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R7906 += 1, R77 += 1, R78 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R7908 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R7907 += 1, R7908 += 1 };
  s0 -> s2 [70, 70] { R7908 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R7908 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R7908 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R7908 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7908 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R7908 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R7908 += 1, R81 += 1, R82 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R7908 += 1, R81 += 1, R82 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R7910 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R7909 += 1, R7910 += 1 };
  s0 -> s2 [70, 70] { R7910 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R7910 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R7910 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R7910 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7910 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R7910 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R7910 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535] { R7910 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R7912 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R7911 += 1, R7912 += 1 };
  s0 -> s2 [70, 70] { R7912 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R7912 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R7912 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R7912 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7912 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R7912 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R7912 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R7912 += 1, R93 += 1, R94 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R7914 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R7913 += 1, R7914 += 1 };
  s0 -> s2 [70, 70] { R7914 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R7914 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R7914 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R7914 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7914 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R7914 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R7914 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535] { R7914 += 1, R101 += 1, R102 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R7916 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R7915 += 1, R7916 += 1 };
  s0 -> s2 [70, 70] { R7916 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R7916 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R7916 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R7916 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7916 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R7916 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R7916 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535] { R7916 += 1, R111 += 1, R112 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R7918 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R7917 += 1, R7918 += 1 };
  s0 -> s2 [70, 70] { R7918 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R7918 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R7918 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R7918 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7918 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R7918 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R7918 += 1, R119 += 1, R120 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R7918 += 1, R119 += 1, R120 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R7920 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R7919 += 1, R7920 += 1 };
  s0 -> s2 [70, 70] { R7920 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R7920 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R7920 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R7920 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7920 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R7920 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R7920 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R7920 += 1, R129 += 1, R130 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R7950 += 1 };
  s0 -> s0 [0, 65535] { R7949 += 1, R7950 += 1 };
  s0 -> s2 [70, 70] { R7950 += 1 };
  s0 -> s1 [71, 65535] { R7950 += 1 };
  s1 -> s1 [0, 69] { R7950 += 1 };
  s1 -> s2 [70, 70] { R7950 += 1 };
  s1 -> s1 [71, 65535] { R7950 += 1 };
  s2 -> s2 [0, 65535] { R7950 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R7952 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R7951 += 1, R7952 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R7952 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R7954 += 1 };
  s0 -> s0 [0, 65535] { R7953 += 1, R7954 += 1 };
  s0 -> s2 [0, 65535] { R7954 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R7954 += 1 };
  s0 -> s1 [71, 65535] { R7954 += 1 };
  s1 -> s1 [0, 69] { R7954 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R7954 += 1 };
  s1 -> s1 [71, 65535] { R7954 += 1 };
  s2 -> s1 [0, 69] { R7954 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R7954 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R7954 += 1 };
  s2 -> s1 [71, 65535] { R7954 += 1 };
  s3 -> s3 [0, 65535] { R7954 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R7956 += 1, R7864 += 1 };
  s0 -> s2 [0, 65535] { R7956 += 1, R7863 += 1, R7864 += 1 };
  s0 -> s0 [0, 65535] { R7955 += 1, R7956 += 1 };
  s0 -> s1 [71, 65535] { R7956 += 1, R7864 += 1 };
  s1 -> s1 [0, 69] { R7956 += 1, R7864 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R7956 += 1 };
  s1 -> s1 [71, 65535] { R7956 += 1, R7864 += 1 };
  s2 -> s1 [0, 69] { R7956 += 1, R7864 += 1 };
  s2 -> s2 [0, 65535] { R7956 += 1, R7863 += 1, R7864 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R7956 += 1, R7864 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R7958 += 1, R7865 += 1, R7866 += 1 };
  s0 -> s2 [0, 65535] { R7958 += 1, R7866 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R7957 += 1, R7958 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R7958 += 1, R7865 += 1, R7866 += 1 };
  s1 -> s2 [0, 65535] { R7958 += 1, R7866 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R7958 += 1 };
  s2 -> s2 [0, 65535] { R7958 += 1, R7866 += 1, R22 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R7958 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R7960 += 1, R7868 += 1 };
  s0 -> s2 [0, 65535] { R7960 += 1, R7867 += 1, R7868 += 1 };
  s0 -> s0 [0, 65535] { R7959 += 1, R7960 += 1 };
  s0 -> s1 [75, 65535] { R7960 += 1, R7868 += 1 };
  s1 -> s1 [0, 70] { R7960 += 1, R7868 += 1 };
  s1 -> s1 [0, 65535] { R7960 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R7960 += 1, R7868 += 1 };
  s2 -> s1 [0, 70] { R7960 += 1, R7868 += 1 };
  s2 -> s2 [0, 65535] { R7960 += 1, R7867 += 1, R7868 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R7960 += 1, R7868 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s0 [0, 65535] { R7961 += 1, R7962 += 1 };
  s0 -> s1 [0, 65535] { R7962 += 1, R7869 += 1, R7870 += 1 };
  s0 -> s2 [0, 65535] { R7962 += 1, R7870 += 1, R138 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R7962 += 1, R7869 += 1, R7870 += 1 };
  s1 -> s2 [0, 65535] { R7962 += 1, R7870 += 1, R138 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R7962 += 1 };
  s2 -> s2 [0, 65535] { R7962 += 1, R7870 += 1, R138 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R7962 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R7964 += 1, R7872 += 1 };
  s0 -> s2 [0, 65535] { R7964 += 1, R7871 += 1, R7872 += 1 };
  s0 -> s3 [0, 65535] { R7964 += 1, R7872 += 1, R140 += 1 };
  s0 -> s0 [0, 65535] { R7963 += 1, R7964 += 1 };
  s0 -> s1 [76, 65535] { R7964 += 1, R7872 += 1 };
  s1 -> s1 [0, 74] { R7964 += 1, R7872 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R7964 += 1 };
  s1 -> s1 [76, 65535] { R7964 += 1, R7872 += 1 };
  s2 -> s1 [0, 74] { R7964 += 1, R7872 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R7964 += 1, R7871 += 1, R7872 += 1 };
  s2 -> s3 [0, 65535] { R7964 += 1, R7872 += 1, R140 += 1 };
  s2 -> s1 [76, 65535] { R7964 += 1, R7872 += 1 };
  s3 -> s1 [0, 74] { R7964 += 1, R7872 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R7964 += 1 };
  s3 -> s3 [0, 65535] { R7964 += 1, R7872 += 1, R140 += 1 };
  s3 -> s1 [76, 65535] { R7964 += 1, R7872 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R7964 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R7965 += 1, R7966 += 1 };
  s0 -> s1 [0, 65535] { R7966 += 1, R7873 += 1, R7874 += 1 };
  s0 -> s2 [0, 65535] { R7966 += 1, R7874 += 1, R144 += 1, R145 += 1 };
  s0 -> s3 [0, 65535] { R7966 += 1, R7874 += 1, R145 += 1, R146 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R7966 += 1, R7873 += 1, R7874 += 1 };
  s1 -> s2 [0, 65535] { R7966 += 1, R7874 += 1, R144 += 1, R145 += 1 };
  s1 -> s3 [0, 65535] { R7966 += 1, R7874 += 1, R145 += 1, R146 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R7966 += 1 };
  s2 -> s2 [0, 65535] { R7966 += 1, R7874 += 1, R144 += 1, R145 += 1 };
  s2 -> s3 [0, 65535] { R7966 += 1, R7874 += 1, R145 += 1, R146 += 1 };
  s3 -> s4 [0, 65535] { R7966 += 1, R7874 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R7966 += 1 };
  s3 -> s3 [0, 65535] { R7966 += 1, R7874 += 1, R145 += 1, R146 += 1 };
  s4 -> s4 [0, 65535] { R7966 += 1, R7874 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R7966 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7966 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R7968 += 1, R7876 += 1, R150 += 1 };
  s0 -> s0 [0, 65535] { R7967 += 1, R7968 += 1 };
  s0 -> s2 [0, 65535] { R7968 += 1, R7876 += 1, R149 += 1, R150 += 1 };
  s0 -> s3 [0, 65535] { R7968 += 1, R7875 += 1, R7876 += 1 };
  s0 -> s4 [75, 75] { R7968 += 1, R7876 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R7968 += 1, R7876 += 1, R150 += 1 };
  s0 -> s1 [82, 65535] { R7968 += 1, R7876 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R7968 += 1, R7876 += 1, R150 += 1 };
  s1 -> s1 [0, 65535] { R7968 += 1, R7876 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R7968 += 1 };
  s1 -> s4 [75, 75] { R7968 += 1, R7876 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R7968 += 1, R7876 += 1, R150 += 1 };
  s1 -> s1 [82, 65535] { R7968 += 1, R7876 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R7968 += 1, R7876 += 1, R150 += 1 };
  s2 -> s2 [0, 65535] { R7968 += 1, R7876 += 1, R149 += 1, R150 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R7968 += 1 };
  s2 -> s4 [75, 75] { R7968 += 1, R7876 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R7968 += 1, R7876 += 1, R150 += 1 };
  s2 -> s1 [82, 65535] { R7968 += 1, R7876 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R7968 += 1, R7876 += 1, R150 += 1 };
  s3 -> s2 [0, 65535] { R7968 += 1, R7876 += 1, R149 += 1, R150 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R7968 += 1, R7875 += 1, R7876 += 1 };
  s3 -> s4 [75, 75] { R7968 += 1, R7876 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R7968 += 1, R7876 += 1, R150 += 1 };
  s3 -> s1 [82, 65535] { R7968 += 1, R7876 += 1, R150 += 1 };
  s4 -> s4 [0, 75] { R7968 += 1, R7876 += 1, R150 += 1 };
  s4 -> s4 [0, 65535] { R7968 += 1, R7876 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R7968 += 1 };
  s4 -> s4 [82, 65535] { R7968 += 1, R7876 += 1, R150 += 1 };
  s5 -> s5 [0, 65535] { R7968 += 1, R7876 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R7968 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R7968 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R7970 += 1, R7877 += 1, R7878 += 1 };
  s0 -> s2 [0, 65535] { R7970 += 1, R7878 += 1, R154 += 1 };
  s0 -> s3 [0, 65535] { R7970 += 1, R7878 += 1 };
  s0 -> s0 [0, 65535] { R7969 += 1, R7970 += 1 };
  s1 -> s1 [0, 65535] { R7970 += 1, R7877 += 1, R7878 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R7970 += 1, R7878 += 1, R154 += 1 };
  s1 -> s3 [0, 65535] { R7970 += 1, R7878 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R7970 += 1, R7878 += 1, R154 += 1 };
  s2 -> s5 [0, 65535] { R7970 += 1 };
  s2 -> s3 [0, 65535] { R7970 += 1, R7878 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R7970 += 1 };
  s3 -> s3 [0, 65535] { R7970 += 1, R7878 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R7970 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R7972 += 1, R7880 += 1, R159 += 1, R160 += 1 };
  s0 -> s2 [0, 65535] { R7972 += 1, R7879 += 1, R7880 += 1 };
  s0 -> s0 [0, 65535] { R7971 += 1, R7972 += 1 };
  s0 -> s3 [0, 65535] { R7972 += 1, R7880 += 1, R158 += 1, R159 += 1 };
  s1 -> s1 [0, 65535] { R7972 += 1, R7880 += 1, R159 += 1, R160 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R7972 += 1 };
  s1 -> s6 [0, 65535] { R7972 += 1, R7880 += 1 };
  s2 -> s1 [0, 65535] { R7972 += 1, R7880 += 1, R159 += 1, R160 += 1 };
  s2 -> s2 [0, 65535] { R7972 += 1, R7879 += 1, R7880 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R7972 += 1, R7880 += 1, R158 += 1, R159 += 1 };
  s3 -> s1 [0, 65535] { R7972 += 1, R7880 += 1, R159 += 1, R160 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R7972 += 1 };
  s3 -> s3 [0, 65535] { R7972 += 1, R7880 += 1, R158 += 1, R159 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R7972 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R7972 += 1 };
  s6 -> s6 [0, 65535] { R7972 += 1, R7880 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R7974 += 1, R7882 += 1, R165 += 1 };
  s0 -> s0 [0, 65535] { R7973 += 1, R7974 += 1 };
  s0 -> s2 [0, 65535] { R7974 += 1, R7882 += 1, R165 += 1, R166 += 1 };
  s0 -> s3 [0, 65535] { R7974 += 1, R7881 += 1, R7882 += 1 };
  s0 -> s4 [0, 65535] { R7974 += 1, R7882 += 1, R164 += 1, R165 += 1 };
  s0 -> s1 [76, 65535] { R7974 += 1, R7882 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R7974 += 1, R7882 += 1, R165 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R7974 += 1 };
  s1 -> s1 [0, 65535] { R7974 += 1, R7882 += 1 };
  s1 -> s1 [76, 65535] { R7974 += 1, R7882 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R7974 += 1, R7882 += 1, R165 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R7974 += 1, R7882 += 1 };
  s2 -> s2 [0, 65535] { R7974 += 1, R7882 += 1, R165 += 1, R166 += 1 };
  s2 -> s6 [0, 65535] { R7974 += 1 };
  s2 -> s1 [76, 65535] { R7974 += 1, R7882 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R7974 += 1, R7882 += 1, R165 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R7974 += 1, R7882 += 1, R165 += 1, R166 += 1 };
  s3 -> s3 [0, 65535] { R7974 += 1, R7881 += 1, R7882 += 1 };
  s3 -> s4 [0, 65535] { R7974 += 1, R7882 += 1, R164 += 1, R165 += 1 };
  s3 -> s1 [76, 65535] { R7974 += 1, R7882 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R7974 += 1, R7882 += 1, R165 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R7974 += 1, R7882 += 1, R165 += 1, R166 += 1 };
  s4 -> s4 [0, 65535] { R7974 += 1, R7882 += 1, R164 += 1, R165 += 1 };
  s4 -> s6 [0, 65535] { R7974 += 1 };
  s4 -> s1 [76, 65535] { R7974 += 1, R7882 += 1, R165 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7974 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R7974 += 1, R7882 += 1 };
  s7 -> s6 [0, 65535] { R7974 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R7976 += 1, R7884 += 1, R172 += 1, R174 += 1 };
  s0 -> s2 [0, 65535] { R7976 += 1, R7884 += 1, R171 += 1, R172 += 1 };
  s0 -> s3 [0, 65535] { R7976 += 1, R7883 += 1, R7884 += 1 };
  s0 -> s0 [0, 65535] { R7975 += 1, R7976 += 1 };
  s0 -> s4 [0, 65535] { R7976 += 1, R7884 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s1 [76, 65535] { R7976 += 1, R7884 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R7976 += 1, R7884 += 1, R172 += 1, R174 += 1 };
  s1 -> s5 [0, 65535] { R7976 += 1, R7884 += 1 };
  s1 -> s6 [0, 65535] { R7976 += 1 };
  s1 -> s1 [0, 65535] { R7976 += 1, R7884 += 1, R172 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [76, 65535] { R7976 += 1, R7884 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R7976 += 1, R7884 += 1, R172 += 1, R174 += 1 };
  s2 -> s2 [0, 65535] { R7976 += 1, R7884 += 1, R171 += 1, R172 += 1 };
  s2 -> s6 [0, 65535] { R7976 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [0, 65535] { R7976 += 1, R7884 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s1 [76, 65535] { R7976 += 1, R7884 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R7976 += 1, R7884 += 1, R172 += 1, R174 += 1 };
  s3 -> s2 [0, 65535] { R7976 += 1, R7884 += 1, R171 += 1, R172 += 1 };
  s3 -> s3 [0, 65535] { R7976 += 1, R7883 += 1, R7884 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [0, 65535] { R7976 += 1, R7884 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s1 [76, 65535] { R7976 += 1, R7884 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R7976 += 1, R7884 += 1, R172 += 1, R174 += 1 };
  s4 -> s5 [0, 65535] { R7976 += 1, R7884 += 1 };
  s4 -> s6 [0, 65535] { R7976 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R7976 += 1, R7884 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s1 [76, 65535] { R7976 += 1, R7884 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535] { R7976 += 1, R7884 += 1 };
  s5 -> s6 [0, 65535] { R7976 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R7976 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R7978 += 1, R7886 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s0 -> s2 [0, 65535] { R7978 += 1, R7886 += 1, R180 += 1, R181 += 1 };
  s0 -> s0 [0, 65535] { R7977 += 1, R7978 += 1 };
  s0 -> s3 [0, 65535] { R7978 += 1, R7886 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s0 -> s4 [0, 65535] { R7978 += 1, R7885 += 1, R7886 += 1 };
  s1 -> s1 [0, 65535] { R7978 += 1, R7886 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s1 -> s3 [0, 65535] { R7978 += 1, R7886 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s1 -> s7 [0, 65535] { R7978 += 1 };
  s1 -> s8 [0, 65535] { R7978 += 1, R7886 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R7978 += 1, R7886 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s2 -> s2 [0, 65535] { R7978 += 1, R7886 += 1, R180 += 1, R181 += 1 };
  s2 -> s3 [0, 65535] { R7978 += 1, R7886 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s2 -> s7 [0, 65535] { R7978 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R7978 += 1, R7886 += 1, R181 += 1 };
  s3 -> s3 [0, 65535] { R7978 += 1, R7886 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s3 -> s7 [0, 65535] { R7978 += 1 };
  s3 -> s8 [0, 65535] { R7978 += 1, R7886 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R7978 += 1, R7886 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s4 -> s2 [0, 65535] { R7978 += 1, R7886 += 1, R180 += 1, R181 += 1 };
  s4 -> s3 [0, 65535] { R7978 += 1, R7886 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s4 -> s4 [0, 65535] { R7978 += 1, R7885 += 1, R7886 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7978 += 1, R7886 += 1, R181 += 1 };
  s6 -> s7 [0, 65535] { R7978 += 1 };
  s6 -> s8 [0, 65535] { R7978 += 1, R7886 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R7978 += 1 };
  s7 -> s5 [0, 65535];
  s8 -> s7 [0, 65535] { R7978 += 1 };
  s8 -> s8 [0, 65535] { R7978 += 1, R7886 += 1 };
  s8 -> s5 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R7980 += 1, R7888 += 1, R6568 += 1, R6570 += 1 };
  s0 -> s2 [0, 65535] { R7980 += 1, R7887 += 1, R7888 += 1 };
  s0 -> s3 [0, 65535] { R7980 += 1, R7888 += 1 };
  s0 -> s0 [0, 65535] { R7979 += 1, R7980 += 1 };
  s0 -> s1 [0, 65535] { R7980 += 1, R7888 += 1, R6568 += 1 };
  s0 -> s1 [81, 65535] { R7980 += 1, R7888 += 1, R6568 += 1, R6570 += 1 };
  s1 -> s1 [0, 75] { R7980 += 1, R7888 += 1, R6568 += 1, R6570 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s3 [0, 65535] { R7980 += 1, R7888 += 1 };
  s1 -> s5 [0, 65535] { R7980 += 1 };
  s1 -> s1 [0, 65535] { R7980 += 1, R7888 += 1, R6568 += 1 };
  s1 -> s1 [81, 65535] { R7980 += 1, R7888 += 1, R6568 += 1, R6570 += 1 };
  s2 -> s1 [0, 75] { R7980 += 1, R7888 += 1, R6568 += 1, R6570 += 1 };
  s2 -> s2 [0, 65535] { R7980 += 1, R7887 += 1, R7888 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R7980 += 1, R7888 += 1 };
  s2 -> s1 [0, 65535] { R7980 += 1, R7888 += 1, R6568 += 1 };
  s2 -> s1 [81, 65535] { R7980 += 1, R7888 += 1, R6568 += 1, R6570 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R7980 += 1, R7888 += 1 };
  s3 -> s5 [0, 65535] { R7980 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R7980 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R7982 += 1, R7890 += 1, R7851 += 1 };
  s0 -> s0 [0, 65535] { R7981 += 1, R7982 += 1 };
  s0 -> s2 [0, 65535] { R7982 += 1, R7890 += 1, R7851 += 1, R7853 += 1, R7854 += 1 };
  s0 -> s3 [0, 65535] { R7982 += 1, R7890 += 1 };
  s0 -> s4 [0, 65535] { R7982 += 1, R7889 += 1, R7890 += 1 };
  s1 -> s1 [0, 65535] { R7982 += 1, R7890 += 1, R7851 += 1 };
  s1 -> s6 [0, 65535] { R7982 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R7982 += 1, R7890 += 1 };
  s2 -> s1 [0, 65535] { R7982 += 1, R7890 += 1, R7851 += 1 };
  s2 -> s6 [0, 65535] { R7982 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R7982 += 1, R7890 += 1, R7851 += 1, R7853 += 1, R7854 += 1 };
  s2 -> s3 [0, 65535] { R7982 += 1, R7890 += 1 };
  s3 -> s6 [0, 65535] { R7982 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R7982 += 1, R7890 += 1 };
  s4 -> s1 [0, 65535] { R7982 += 1, R7890 += 1, R7851 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R7982 += 1, R7890 += 1, R7851 += 1, R7853 += 1, R7854 += 1 };
  s4 -> s3 [0, 65535] { R7982 += 1, R7890 += 1 };
  s4 -> s4 [0, 65535] { R7982 += 1, R7889 += 1, R7890 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7982 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 74] { R7984 += 1, R7892 += 1, R7860 += 1, R7862 += 1 };
  s0 -> s0 [0, 65535] { R7983 += 1, R7984 += 1 };
  s0 -> s1 [0, 65535] { R7984 += 1, R7892 += 1, R7860 += 1 };
  s0 -> s2 [0, 65535] { R7984 += 1, R7892 += 1 };
  s0 -> s3 [0, 65535] { R7984 += 1, R7891 += 1, R7892 += 1 };
  s0 -> s4 [75, 75] { R7984 += 1, R7892 += 1, R7860 += 1, R7862 += 1 };
  s0 -> s5 [75, 75] { R7984 += 1, R7892 += 1, R7860 += 1, R7862 += 1 };
  s0 -> s1 [81, 65535] { R7984 += 1, R7892 += 1, R7860 += 1, R7862 += 1 };
  s1 -> s1 [0, 74] { R7984 += 1, R7892 += 1, R7860 += 1, R7862 += 1 };
  s1 -> s1 [0, 65535] { R7984 += 1, R7892 += 1, R7860 += 1 };
  s1 -> s2 [0, 65535] { R7984 += 1, R7892 += 1 };
  s1 -> s6 [0, 65535] { R7984 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [75, 75] { R7984 += 1, R7892 += 1, R7860 += 1, R7862 += 1 };
  s1 -> s5 [75, 75] { R7984 += 1, R7892 += 1, R7860 += 1, R7862 += 1 };
  s1 -> s1 [81, 65535] { R7984 += 1, R7892 += 1, R7860 += 1, R7862 += 1 };
  s2 -> s2 [0, 65535] { R7984 += 1, R7892 += 1 };
  s2 -> s6 [0, 65535] { R7984 += 1 };
  s2 -> s7 [0, 65535];
  s3 -> s1 [0, 74] { R7984 += 1, R7892 += 1, R7860 += 1, R7862 += 1 };
  s3 -> s1 [0, 65535] { R7984 += 1, R7892 += 1, R7860 += 1 };
  s3 -> s2 [0, 65535] { R7984 += 1, R7892 += 1 };
  s3 -> s3 [0, 65535] { R7984 += 1, R7891 += 1, R7892 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [75, 75] { R7984 += 1, R7892 += 1, R7860 += 1, R7862 += 1 };
  s3 -> s5 [75, 75] { R7984 += 1, R7892 += 1, R7860 += 1, R7862 += 1 };
  s3 -> s1 [81, 65535] { R7984 += 1, R7892 += 1, R7860 += 1, R7862 += 1 };
  s4 -> s4 [0, 65535] { R7984 += 1, R7892 += 1, R7860 += 1 };
  s4 -> s2 [0, 65535] { R7984 += 1, R7892 += 1 };
  s4 -> s6 [0, 65535] { R7984 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 75] { R7984 += 1, R7892 += 1, R7860 += 1, R7862 += 1 };
  s5 -> s5 [0, 65535] { R7984 += 1, R7892 += 1, R7860 += 1 };
  s5 -> s2 [0, 65535] { R7984 += 1, R7892 += 1 };
  s5 -> s6 [0, 65535] { R7984 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [81, 65535] { R7984 += 1, R7892 += 1, R7860 += 1, R7862 += 1 };
  s6 -> s6 [0, 65535] { R7984 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65535] { R7986 += 1, R7921 += 1, R7922 += 1 };
  s0 -> s2 [0, 65535] { R7986 += 1, R7922 += 1, R23 += 1 };
  s0 -> s0 [0, 65535] { R7985 += 1, R7986 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R7986 += 1, R7921 += 1, R7922 += 1 };
  s1 -> s2 [0, 65535] { R7986 += 1, R7922 += 1, R23 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R7986 += 1, R7922 += 1, R23 += 1 };
  s2 -> s4 [0, 65535] { R7986 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R7986 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R7988 += 1, R7924 += 1 };
  s0 -> s0 [0, 65535] { R7987 += 1, R7988 += 1 };
  s0 -> s2 [0, 65535] { R7988 += 1, R7923 += 1, R7924 += 1 };
  s0 -> s3 [70, 70] { R7988 += 1, R7924 += 1 };
  s0 -> s4 [70, 70] { R7988 += 1, R7924 += 1 };
  s0 -> s5 [75, 75] { R7988 += 1, R7924 += 1 };
  s0 -> s1 [76, 65535] { R7988 += 1, R7924 += 1 };
  s1 -> s1 [0, 69] { R7988 += 1, R7924 += 1 };
  s1 -> s3 [70, 70] { R7988 += 1, R7924 += 1 };
  s1 -> s4 [70, 70] { R7988 += 1, R7924 += 1 };
  s1 -> s5 [75, 75] { R7988 += 1, R7924 += 1 };
  s1 -> s1 [76, 65535] { R7988 += 1, R7924 += 1 };
  s2 -> s1 [0, 69] { R7988 += 1, R7924 += 1 };
  s2 -> s2 [0, 65535] { R7988 += 1, R7923 += 1, R7924 += 1 };
  s2 -> s3 [70, 70] { R7988 += 1, R7924 += 1 };
  s2 -> s4 [70, 70] { R7988 += 1, R7924 += 1 };
  s2 -> s5 [75, 75] { R7988 += 1, R7924 += 1 };
  s2 -> s1 [76, 65535] { R7988 += 1, R7924 += 1 };
  s3 -> s3 [0, 70] { R7988 += 1, R7924 += 1 };
  s3 -> s7 [75, 75] { R7988 += 1, R7924 += 1 };
  s3 -> s3 [76, 65535] { R7988 += 1, R7924 += 1 };
  s5 -> s5 [0, 69] { R7988 += 1, R7924 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R7988 += 1 };
  s5 -> s7 [70, 70] { R7988 += 1, R7924 += 1 };
  s5 -> s8 [70, 70] { R7988 += 1, R7924 += 1 };
  s5 -> s5 [75, 65535] { R7988 += 1, R7924 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R7988 += 1, R7924 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R7988 += 1 };
  s7 -> s7 [75, 65535] { R7988 += 1, R7924 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R7988 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R7990 += 1, R7926 += 1, R137 += 1 };
  s0 -> s0 [0, 65535] { R7989 += 1, R7990 += 1 };
  s0 -> s2 [0, 65535] { R7990 += 1, R7925 += 1, R7926 += 1 };
  s0 -> s3 [70, 70] { R7990 += 1, R7926 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R7990 += 1, R7926 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R7990 += 1, R7926 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R7990 += 1, R7926 += 1, R137 += 1 };
  s1 -> s1 [0, 65535] { R7990 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R7990 += 1, R7926 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R7990 += 1, R7926 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R7990 += 1, R7926 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R7990 += 1, R7926 += 1, R137 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R7990 += 1, R7925 += 1, R7926 += 1 };
  s2 -> s3 [70, 70] { R7990 += 1, R7926 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R7990 += 1, R7926 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R7990 += 1, R7926 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R7990 += 1, R7926 += 1, R137 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R7990 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R7990 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7990 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R7992 += 1, R7928 += 1, R139 += 1 };
  s0 -> s0 [0, 65535] { R7991 += 1, R7992 += 1 };
  s0 -> s2 [0, 65535] { R7992 += 1, R7927 += 1, R7928 += 1 };
  s0 -> s3 [70, 70] { R7992 += 1, R7928 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R7992 += 1, R7928 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R7992 += 1, R7928 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R7992 += 1, R7928 += 1, R139 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R7992 += 1 };
  s1 -> s3 [70, 70] { R7992 += 1, R7928 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R7992 += 1, R7928 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R7992 += 1, R7928 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R7992 += 1, R7928 += 1, R139 += 1 };
  s2 -> s2 [0, 65535] { R7992 += 1, R7927 += 1, R7928 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R7992 += 1, R7928 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R7992 += 1, R7928 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R7992 += 1, R7928 += 1, R139 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R7992 += 1 };
  s4 -> s5 [0, 65535] { R7992 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R7992 += 1, R7928 += 1, R139 += 1 };
  s5 -> s5 [0, 65535] { R7992 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R7994 += 1, R7930 += 1, R141 += 1, R142 += 1 };
  s0 -> s0 [0, 65535] { R7993 += 1, R7994 += 1 };
  s0 -> s2 [0, 65535] { R7994 += 1, R7929 += 1, R7930 += 1 };
  s0 -> s3 [70, 70] { R7994 += 1, R7930 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R7994 += 1, R7930 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R7994 += 1, R7930 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R7994 += 1, R7930 += 1, R141 += 1, R142 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R7994 += 1 };
  s1 -> s3 [70, 70] { R7994 += 1, R7930 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R7994 += 1, R7930 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R7994 += 1, R7930 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R7994 += 1, R7930 += 1, R141 += 1, R142 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R7994 += 1, R7929 += 1, R7930 += 1 };
  s2 -> s3 [70, 70] { R7994 += 1, R7930 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R7994 += 1, R7930 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R7994 += 1, R7930 += 1, R141 += 1, R142 += 1 };
  s3 -> s6 [0, 65535] { R7994 += 1 };
  s3 -> s3 [0, 65535] { R7994 += 1, R7930 += 1, R141 += 1, R142 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R7994 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7994 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R7996 += 1, R7932 += 1, R147 += 1, R148 += 1 };
  s0 -> s2 [0, 65535] { R7996 += 1, R7931 += 1, R7932 += 1 };
  s0 -> s0 [0, 65535] { R7995 += 1, R7996 += 1 };
  s0 -> s3 [70, 70] { R7996 += 1, R7932 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R7996 += 1, R7932 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R7996 += 1, R7932 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R7996 += 1, R7932 += 1, R147 += 1, R148 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R7996 += 1 };
  s1 -> s3 [70, 70] { R7996 += 1, R7932 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R7996 += 1, R7932 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R7996 += 1, R7932 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R7996 += 1, R7932 += 1, R147 += 1, R148 += 1 };
  s2 -> s2 [0, 65535] { R7996 += 1, R7931 += 1, R7932 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R7996 += 1, R7932 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R7996 += 1, R7932 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R7996 += 1, R7932 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R7996 += 1, R7932 += 1, R147 += 1, R148 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R7996 += 1 };
  s4 -> s4 [0, 65535] { R7996 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7996 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R7998 += 1, R7934 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R7998 += 1, R7934 += 1, R151 += 1, R152 += 1 };
  s0 -> s3 [0, 65535] { R7998 += 1, R7933 += 1, R7934 += 1 };
  s0 -> s0 [0, 65535] { R7997 += 1, R7998 += 1 };
  s0 -> s4 [70, 70] { R7998 += 1, R7934 += 1, R151 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R7998 += 1, R7934 += 1, R151 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R7998 += 1, R7934 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R7998 += 1, R7934 += 1, R152 += 1 };
  s0 -> s1 [71, 74] { R7998 += 1, R7934 += 1, R152 += 1 };
  s0 -> s2 [71, 65535] { R7998 += 1, R7934 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R7998 += 1, R7934 += 1, R152 += 1 };
  s0 -> s1 [76, 65535] { R7998 += 1, R7934 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R7998 += 1, R7934 += 1, R152 += 1 };
  s1 -> s6 [70, 70] { R7998 += 1, R7934 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R7998 += 1, R7934 += 1, R152 += 1 };
  s1 -> s1 [71, 74] { R7998 += 1, R7934 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R7998 += 1, R7934 += 1, R152 += 1 };
  s1 -> s1 [76, 65535] { R7998 += 1, R7934 += 1, R152 += 1 };
  s2 -> s1 [0, 69] { R7998 += 1, R7934 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R7998 += 1, R7934 += 1, R151 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R7998 += 1, R7934 += 1, R151 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R7998 += 1, R7934 += 1, R151 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R7998 += 1, R7934 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R7998 += 1, R7934 += 1, R152 += 1 };
  s2 -> s1 [71, 74] { R7998 += 1, R7934 += 1, R152 += 1 };
  s2 -> s2 [71, 65535] { R7998 += 1, R7934 += 1, R151 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R7998 += 1, R7934 += 1, R152 += 1 };
  s2 -> s1 [76, 65535] { R7998 += 1, R7934 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R7998 += 1, R7934 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R7998 += 1, R7934 += 1, R151 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R7998 += 1, R7933 += 1, R7934 += 1 };
  s3 -> s4 [70, 70] { R7998 += 1, R7934 += 1, R151 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R7998 += 1, R7934 += 1, R151 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R7998 += 1, R7934 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R7998 += 1, R7934 += 1, R152 += 1 };
  s3 -> s1 [71, 74] { R7998 += 1, R7934 += 1, R152 += 1 };
  s3 -> s2 [71, 65535] { R7998 += 1, R7934 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R7998 += 1, R7934 += 1, R152 += 1 };
  s3 -> s1 [76, 65535] { R7998 += 1, R7934 += 1, R152 += 1 };
  s4 -> s6 [0, 74] { R7998 += 1, R7934 += 1, R152 += 1 };
  s4 -> s4 [0, 65535] { R7998 += 1, R7934 += 1, R151 += 1, R152 += 1 };
  s4 -> s11 [75, 75] { R7998 += 1, R7934 += 1, R152 += 1 };
  s4 -> s6 [76, 65535] { R7998 += 1, R7934 += 1, R152 += 1 };
  s6 -> s6 [0, 74] { R7998 += 1, R7934 += 1, R152 += 1 };
  s6 -> s11 [75, 75] { R7998 += 1, R7934 += 1, R152 += 1 };
  s6 -> s6 [76, 65535] { R7998 += 1, R7934 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R7998 += 1, R7934 += 1, R152 += 1 };
  s8 -> s8 [0, 65535] { R7998 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R7998 += 1, R7934 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R7998 += 1, R7934 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R7998 += 1, R7934 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R7998 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R7998 += 1, R7934 += 1, R152 += 1 };
  s11 -> s12 [0, 65535] { R7998 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R7998 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R8000 += 1, R7936 += 1, R155 += 1, R156 += 1 };
  s0 -> s0 [0, 65535] { R7999 += 1, R8000 += 1 };
  s0 -> s2 [0, 65535] { R8000 += 1, R7935 += 1, R7936 += 1 };
  s0 -> s3 [70, 70] { R8000 += 1, R7936 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R8000 += 1, R7936 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R8000 += 1, R7936 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R8000 += 1, R7936 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 65535] { R8000 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R8000 += 1, R7936 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R8000 += 1, R7936 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R8000 += 1, R7936 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R8000 += 1, R7936 += 1, R155 += 1, R156 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R8000 += 1, R7935 += 1, R7936 += 1 };
  s2 -> s3 [70, 70] { R8000 += 1, R7936 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R8000 += 1, R7936 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R8000 += 1, R7936 += 1, R155 += 1, R156 += 1 };
  s3 -> s3 [0, 65535] { R8000 += 1, R7936 += 1, R155 += 1, R156 += 1 };
  s3 -> s6 [0, 65535] { R8000 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R8000 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R8000 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R8002 += 1, R7938 += 1, R161 += 1, R162 += 1 };
  s0 -> s0 [0, 65535] { R8001 += 1, R8002 += 1 };
  s0 -> s2 [0, 65535] { R8002 += 1, R7937 += 1, R7938 += 1 };
  s0 -> s3 [70, 70] { R8002 += 1, R7938 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R8002 += 1, R7938 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R8002 += 1, R7938 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R8002 += 1, R7938 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535] { R8002 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R8002 += 1, R7938 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R8002 += 1, R7938 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R8002 += 1, R7938 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R8002 += 1, R7938 += 1, R161 += 1, R162 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R8002 += 1, R7937 += 1, R7938 += 1 };
  s2 -> s3 [70, 70] { R8002 += 1, R7938 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R8002 += 1, R7938 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R8002 += 1, R7938 += 1, R161 += 1, R162 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R8002 += 1 };
  s3 -> s3 [0, 65535] { R8002 += 1, R7938 += 1, R161 += 1, R162 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R8002 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R8002 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R8004 += 1, R7940 += 1, R167 += 1, R168 += 1 };
  s0 -> s2 [0, 65535] { R8004 += 1, R7939 += 1, R7940 += 1 };
  s0 -> s0 [0, 65535] { R8003 += 1, R8004 += 1 };
  s0 -> s3 [70, 70] { R8004 += 1, R7940 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R8004 += 1, R7940 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R8004 += 1, R7940 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R8004 += 1, R7940 += 1, R167 += 1, R168 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R8004 += 1 };
  s1 -> s3 [70, 70] { R8004 += 1, R7940 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R8004 += 1, R7940 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R8004 += 1, R7940 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R8004 += 1, R7940 += 1, R167 += 1, R168 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R8004 += 1, R7939 += 1, R7940 += 1 };
  s2 -> s3 [70, 70] { R8004 += 1, R7940 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R8004 += 1, R7940 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R8004 += 1, R7940 += 1, R167 += 1, R168 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R8004 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R8004 += 1 };
  s4 -> s4 [0, 65535] { R8004 += 1, R7940 += 1, R167 += 1, R168 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R8004 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R8006 += 1, R7942 += 1, R175 += 1, R176 += 1 };
  s0 -> s0 [0, 65535] { R8005 += 1, R8006 += 1 };
  s0 -> s2 [0, 65535] { R8006 += 1, R7941 += 1, R7942 += 1 };
  s0 -> s3 [70, 70] { R8006 += 1, R7942 += 1, R175 += 1, R176 += 1 };
  s0 -> s4 [70, 70] { R8006 += 1, R7942 += 1, R175 += 1, R176 += 1 };
  s0 -> s1 [71, 65535] { R8006 += 1, R7942 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [0, 69] { R8006 += 1, R7942 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [0, 65535] { R8006 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R8006 += 1, R7942 += 1, R175 += 1, R176 += 1 };
  s1 -> s4 [70, 70] { R8006 += 1, R7942 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [71, 65535] { R8006 += 1, R7942 += 1, R175 += 1, R176 += 1 };
  s2 -> s1 [0, 69] { R8006 += 1, R7942 += 1, R175 += 1, R176 += 1 };
  s2 -> s2 [0, 65535] { R8006 += 1, R7941 += 1, R7942 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R8006 += 1, R7942 += 1, R175 += 1, R176 += 1 };
  s2 -> s4 [70, 70] { R8006 += 1, R7942 += 1, R175 += 1, R176 += 1 };
  s2 -> s1 [71, 65535] { R8006 += 1, R7942 += 1, R175 += 1, R176 += 1 };
  s3 -> s3 [0, 65535] { R8006 += 1, R7942 += 1, R175 += 1, R176 += 1 };
  s3 -> s6 [0, 65535] { R8006 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R8006 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R8006 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R8008 += 1, R7944 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s2 [0, 69] { R8008 += 1, R7944 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s3 [0, 69] { R8008 += 1, R7944 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s0 [0, 65535] { R8007 += 1, R8008 += 1 };
  s0 -> s4 [0, 65535] { R8008 += 1, R7943 += 1, R7944 += 1 };
  s0 -> s5 [70, 70] { R8008 += 1, R7944 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s6 [70, 70] { R8008 += 1, R7944 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s7 [70, 70] { R8008 += 1, R7944 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s8 [70, 70] { R8008 += 1, R7944 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s9 [70, 70] { R8008 += 1, R7944 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s10 [70, 70] { R8008 += 1, R7944 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s2 [71, 75] { R8008 += 1, R7944 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s1 [71, 65535] { R8008 += 1, R7944 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s3 [71, 65535] { R8008 += 1, R7944 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s2 [81, 65535] { R8008 += 1, R7944 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s1 [0, 69] { R8008 += 1, R7944 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s1 -> s2 [0, 69] { R8008 += 1, R7944 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s5 [70, 70] { R8008 += 1, R7944 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s6 [70, 70] { R8008 += 1, R7944 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s7 [70, 70] { R8008 += 1, R7944 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s1 -> s9 [70, 70] { R8008 += 1, R7944 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s1 -> s2 [71, 75] { R8008 += 1, R7944 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s1 [71, 65535] { R8008 += 1, R7944 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s1 -> s2 [81, 65535] { R8008 += 1, R7944 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s2 [0, 69] { R8008 += 1, R7944 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s11 [0, 65535];
  s2 -> s2 [0, 65535] { R8008 += 1 };
  s2 -> s5 [70, 70] { R8008 += 1, R7944 += 1, R6564 += 1 };
  s2 -> s6 [70, 70] { R8008 += 1, R7944 += 1, R6564 += 1 };
  s2 -> s2 [71, 75] { R8008 += 1, R7944 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s2 [71, 65535] { R8008 += 1, R7944 += 1, R6564 += 1 };
  s2 -> s2 [81, 65535] { R8008 += 1, R7944 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s1 [0, 69] { R8008 += 1, R7944 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s3 -> s2 [0, 69] { R8008 += 1, R7944 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s3 [0, 69] { R8008 += 1, R7944 += 1, R6563 += 1, R6564 += 1 };
  s3 -> s5 [70, 70] { R8008 += 1, R7944 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s6 [70, 70] { R8008 += 1, R7944 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s7 [70, 70] { R8008 += 1, R7944 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s3 -> s8 [70, 70] { R8008 += 1, R7944 += 1, R6563 += 1, R6564 += 1 };
  s3 -> s9 [70, 70] { R8008 += 1, R7944 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s3 -> s10 [70, 70] { R8008 += 1, R7944 += 1, R6563 += 1, R6564 += 1 };
  s3 -> s2 [71, 75] { R8008 += 1, R7944 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s1 [71, 65535] { R8008 += 1, R7944 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s3 -> s3 [71, 65535] { R8008 += 1, R7944 += 1, R6563 += 1, R6564 += 1 };
  s3 -> s2 [81, 65535] { R8008 += 1, R7944 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s1 [0, 69] { R8008 += 1, R7944 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s2 [0, 69] { R8008 += 1, R7944 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s3 [0, 69] { R8008 += 1, R7944 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s4 [0, 65535] { R8008 += 1, R7943 += 1, R7944 += 1 };
  s4 -> s5 [70, 70] { R8008 += 1, R7944 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s6 [70, 70] { R8008 += 1, R7944 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s7 [70, 70] { R8008 += 1, R7944 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s8 [70, 70] { R8008 += 1, R7944 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s9 [70, 70] { R8008 += 1, R7944 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s10 [70, 70] { R8008 += 1, R7944 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s2 [71, 75] { R8008 += 1, R7944 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s1 [71, 65535] { R8008 += 1, R7944 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s3 [71, 65535] { R8008 += 1, R7944 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s2 [81, 65535] { R8008 += 1, R7944 += 1, R6564 += 1, R6566 += 1 };
  s5 -> s5 [0, 75] { R8008 += 1, R7944 += 1, R6564 += 1, R6566 += 1 };
  s5 -> s5 [0, 65535] { R8008 += 1, R7944 += 1, R6564 += 1 };
  s5 -> s11 [0, 65535];
  s5 -> s12 [0, 65535] { R8008 += 1 };
  s5 -> s5 [81, 65535] { R8008 += 1, R7944 += 1, R6564 += 1, R6566 += 1 };
  s6 -> s6 [0, 65535] { R8008 += 1 };
  s6 -> s11 [0, 65535];
  s7 -> s5 [0, 75] { R8008 += 1, R7944 += 1, R6564 += 1, R6566 += 1 };
  s7 -> s7 [0, 65535] { R8008 += 1, R7944 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s7 -> s5 [81, 65535] { R8008 += 1, R7944 += 1, R6564 += 1, R6566 += 1 };
  s10 -> s5 [0, 75] { R8008 += 1, R7944 += 1, R6564 += 1, R6566 += 1 };
  s10 -> s7 [0, 65535] { R8008 += 1, R7944 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s10 -> s10 [0, 65535] { R8008 += 1, R7944 += 1, R6563 += 1, R6564 += 1 };
  s10 -> s5 [81, 65535] { R8008 += 1, R7944 += 1, R6564 += 1, R6566 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R8008 += 1 };
  accepting s12, s5, s2, s6, s11;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R8010 += 1, R7946 += 1, R7845 += 1, R7846 += 1 };
  s0 -> s2 [0, 69] { R8010 += 1, R7946 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s0 -> s3 [0, 69] { R8010 += 1, R7946 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s0 -> s0 [0, 65535] { R8009 += 1, R8010 += 1 };
  s0 -> s4 [0, 65535] { R8010 += 1, R7945 += 1, R7946 += 1 };
  s0 -> s5 [70, 70] { R8010 += 1, R7946 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s0 -> s6 [70, 70] { R8010 += 1, R7946 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s0 -> s7 [70, 70] { R8010 += 1, R7946 += 1, R7845 += 1, R7846 += 1 };
  s0 -> s8 [70, 70] { R8010 += 1, R7946 += 1, R7845 += 1, R7846 += 1 };
  s0 -> s9 [70, 70] { R8010 += 1, R7946 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s0 -> s10 [70, 70] { R8010 += 1, R7946 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s0 -> s1 [71, 65535] { R8010 += 1, R7946 += 1, R7845 += 1, R7846 += 1 };
  s0 -> s2 [71, 65535] { R8010 += 1, R7946 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s0 -> s3 [71, 65535] { R8010 += 1, R7946 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s1 -> s1 [0, 69] { R8010 += 1, R7946 += 1, R7845 += 1, R7846 += 1 };
  s1 -> s2 [0, 69] { R8010 += 1, R7946 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s1 -> s3 [0, 69] { R8010 += 1, R7946 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s1 -> s5 [70, 70] { R8010 += 1, R7946 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s1 -> s6 [70, 70] { R8010 += 1, R7946 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s1 -> s7 [70, 70] { R8010 += 1, R7946 += 1, R7845 += 1, R7846 += 1 };
  s1 -> s8 [70, 70] { R8010 += 1, R7946 += 1, R7845 += 1, R7846 += 1 };
  s1 -> s9 [70, 70] { R8010 += 1, R7946 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s1 -> s10 [70, 70] { R8010 += 1, R7946 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s1 -> s1 [71, 65535] { R8010 += 1, R7946 += 1, R7845 += 1, R7846 += 1 };
  s1 -> s2 [71, 65535] { R8010 += 1, R7946 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s1 -> s3 [71, 65535] { R8010 += 1, R7946 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s2 -> s2 [0, 69] { R8010 += 1, R7946 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s2 -> s11 [0, 65535];
  s2 -> s2 [0, 65535] { R8010 += 1 };
  s2 -> s6 [70, 70] { R8010 += 1, R7946 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s2 -> s10 [70, 70] { R8010 += 1, R7946 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s2 -> s2 [71, 65535] { R8010 += 1, R7946 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s3 -> s2 [0, 69] { R8010 += 1, R7946 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s3 -> s3 [0, 69] { R8010 += 1, R7946 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s3 -> s5 [70, 70] { R8010 += 1, R7946 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s3 -> s6 [70, 70] { R8010 += 1, R7946 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s3 -> s9 [70, 70] { R8010 += 1, R7946 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s3 -> s10 [70, 70] { R8010 += 1, R7946 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s3 -> s2 [71, 65535] { R8010 += 1, R7946 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s3 -> s3 [71, 65535] { R8010 += 1, R7946 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s4 -> s1 [0, 69] { R8010 += 1, R7946 += 1, R7845 += 1, R7846 += 1 };
  s4 -> s2 [0, 69] { R8010 += 1, R7946 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s4 -> s3 [0, 69] { R8010 += 1, R7946 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s4 -> s4 [0, 65535] { R8010 += 1, R7945 += 1, R7946 += 1 };
  s4 -> s5 [70, 70] { R8010 += 1, R7946 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s4 -> s6 [70, 70] { R8010 += 1, R7946 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s4 -> s7 [70, 70] { R8010 += 1, R7946 += 1, R7845 += 1, R7846 += 1 };
  s4 -> s8 [70, 70] { R8010 += 1, R7946 += 1, R7845 += 1, R7846 += 1 };
  s4 -> s9 [70, 70] { R8010 += 1, R7946 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s4 -> s10 [70, 70] { R8010 += 1, R7946 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s4 -> s1 [71, 65535] { R8010 += 1, R7946 += 1, R7845 += 1, R7846 += 1 };
  s4 -> s2 [71, 65535] { R8010 += 1, R7946 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s4 -> s3 [71, 65535] { R8010 += 1, R7946 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s5 -> s5 [0, 65535] { R8010 += 1, R7946 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s5 -> s6 [0, 65535] { R8010 += 1, R7946 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s6 -> s11 [0, 65535];
  s6 -> s6 [0, 65535] { R8010 += 1, R7946 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s6 -> s12 [0, 65535] { R8010 += 1 };
  s7 -> s5 [0, 65535] { R8010 += 1, R7946 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s7 -> s6 [0, 65535] { R8010 += 1, R7946 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s7 -> s7 [0, 65535] { R8010 += 1, R7946 += 1, R7845 += 1, R7846 += 1 };
  s10 -> s11 [0, 65535];
  s10 -> s10 [0, 65535] { R8010 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R8010 += 1 };
  accepting s12, s2, s6, s10, s11;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R8012 += 1, R7948 += 1, R7855 += 1, R7856 += 1 };
  s0 -> s2 [0, 69] { R8012 += 1, R7948 += 1, R7856 += 1, R7857 += 1, R7858 += 1 };
  s0 -> s3 [0, 69] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s0 -> s4 [0, 65535] { R8012 += 1, R7947 += 1, R7948 += 1 };
  s0 -> s0 [0, 65535] { R8011 += 1, R8012 += 1 };
  s0 -> s5 [70, 70] { R8012 += 1, R7948 += 1, R7855 += 1, R7856 += 1 };
  s0 -> s6 [70, 70] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s0 -> s7 [70, 70] { R8012 += 1, R7948 += 1, R7855 += 1, R7856 += 1 };
  s0 -> s8 [70, 70] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s0 -> s9 [70, 70] { R8012 += 1, R7948 += 1, R7856 += 1, R7857 += 1, R7858 += 1 };
  s0 -> s10 [70, 70] { R8012 += 1, R7948 += 1, R7856 += 1, R7857 += 1, R7858 += 1 };
  s0 -> s3 [71, 74] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s0 -> s1 [71, 65535] { R8012 += 1, R7948 += 1, R7855 += 1, R7856 += 1 };
  s0 -> s2 [71, 65535] { R8012 += 1, R7948 += 1, R7856 += 1, R7857 += 1, R7858 += 1 };
  s0 -> s11 [81, 81] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s0 -> s3 [82, 65535] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s1 -> s1 [0, 69] { R8012 += 1, R7948 += 1, R7855 += 1, R7856 += 1 };
  s1 -> s2 [0, 69] { R8012 += 1, R7948 += 1, R7856 += 1, R7857 += 1, R7858 += 1 };
  s1 -> s3 [0, 69] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s1 -> s5 [70, 70] { R8012 += 1, R7948 += 1, R7855 += 1, R7856 += 1 };
  s1 -> s6 [70, 70] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s1 -> s7 [70, 70] { R8012 += 1, R7948 += 1, R7855 += 1, R7856 += 1 };
  s1 -> s8 [70, 70] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s1 -> s9 [70, 70] { R8012 += 1, R7948 += 1, R7856 += 1, R7857 += 1, R7858 += 1 };
  s1 -> s10 [70, 70] { R8012 += 1, R7948 += 1, R7856 += 1, R7857 += 1, R7858 += 1 };
  s1 -> s3 [71, 74] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s1 -> s1 [71, 65535] { R8012 += 1, R7948 += 1, R7855 += 1, R7856 += 1 };
  s1 -> s2 [71, 65535] { R8012 += 1, R7948 += 1, R7856 += 1, R7857 += 1, R7858 += 1 };
  s1 -> s11 [81, 81] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s1 -> s3 [82, 65535] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s2 -> s2 [0, 69] { R8012 += 1, R7948 += 1, R7856 += 1, R7857 += 1, R7858 += 1 };
  s2 -> s3 [0, 69] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s2 -> s6 [70, 70] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s2 -> s8 [70, 70] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s2 -> s9 [70, 70] { R8012 += 1, R7948 += 1, R7856 += 1, R7857 += 1, R7858 += 1 };
  s2 -> s10 [70, 70] { R8012 += 1, R7948 += 1, R7856 += 1, R7857 += 1, R7858 += 1 };
  s2 -> s3 [71, 74] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s2 -> s2 [71, 65535] { R8012 += 1, R7948 += 1, R7856 += 1, R7857 += 1, R7858 += 1 };
  s2 -> s11 [81, 81] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s2 -> s3 [82, 65535] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s3 -> s3 [0, 69] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s3 -> s6 [70, 70] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s3 -> s8 [70, 70] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s3 -> s3 [71, 74] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s3 -> s11 [81, 81] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s3 -> s3 [82, 65535] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s4 -> s1 [0, 69] { R8012 += 1, R7948 += 1, R7855 += 1, R7856 += 1 };
  s4 -> s2 [0, 69] { R8012 += 1, R7948 += 1, R7856 += 1, R7857 += 1, R7858 += 1 };
  s4 -> s3 [0, 69] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s4 -> s4 [0, 65535] { R8012 += 1, R7947 += 1, R7948 += 1 };
  s4 -> s5 [70, 70] { R8012 += 1, R7948 += 1, R7855 += 1, R7856 += 1 };
  s4 -> s6 [70, 70] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s4 -> s7 [70, 70] { R8012 += 1, R7948 += 1, R7855 += 1, R7856 += 1 };
  s4 -> s8 [70, 70] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s4 -> s9 [70, 70] { R8012 += 1, R7948 += 1, R7856 += 1, R7857 += 1, R7858 += 1 };
  s4 -> s10 [70, 70] { R8012 += 1, R7948 += 1, R7856 += 1, R7857 += 1, R7858 += 1 };
  s4 -> s3 [71, 74] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s4 -> s1 [71, 65535] { R8012 += 1, R7948 += 1, R7855 += 1, R7856 += 1 };
  s4 -> s2 [71, 65535] { R8012 += 1, R7948 += 1, R7856 += 1, R7857 += 1, R7858 += 1 };
  s4 -> s11 [81, 81] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s4 -> s3 [82, 65535] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s7 -> s8 [0, 74] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s7 -> s7 [0, 65535] { R8012 += 1, R7948 += 1, R7855 += 1, R7856 += 1 };
  s7 -> s9 [0, 65535] { R8012 += 1, R7948 += 1, R7856 += 1, R7857 += 1, R7858 += 1 };
  s7 -> s14 [81, 81] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s7 -> s8 [82, 65535] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s8 -> s8 [0, 74] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s8 -> s14 [81, 81] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s8 -> s8 [82, 65535] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s9 -> s8 [0, 74] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s9 -> s9 [0, 65535] { R8012 += 1, R7948 += 1, R7856 += 1, R7857 += 1, R7858 += 1 };
  s9 -> s14 [81, 81] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s9 -> s8 [82, 65535] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s11 -> s11 [0, 69] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s11 -> s11 [0, 65535] { R8012 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [70, 70] { R8012 += 1, R7948 += 1, R7856 += 1 };
  s11 -> s14 [70, 70] { R8012 += 1, R7948 += 1, R7856 += 1 };
  s11 -> s11 [71, 74] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s11 -> s11 [71, 65535] { R8012 += 1, R7948 += 1, R7856 += 1 };
  s11 -> s11 [81, 65535] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R8012 += 1 };
  s13 -> s12 [0, 65535];
  s14 -> s14 [0, 74] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s15 [0, 65535] { R8012 += 1 };
  s14 -> s14 [0, 65535] { R8012 += 1, R7948 += 1, R7856 += 1 };
  s14 -> s14 [81, 65535] { R8012 += 1, R7948 += 1, R7856 += 1, R7858 += 1 };
  s15 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R8012 += 1 };
  accepting s12, s13, s14, s15, s11;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R8012 && R25 - R8012 = -1 && R26 = R8012 && R27 - R8012 = -1 && R28 = R8012 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R7860 + -1*R7856 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R7860 + -1*R7856 - R130 = 0 && R129 + R7859 + R7855 = 0 && R131 + R7861 + R7857 = 0 && R132 + R7862 + R7858 = 0 && R7923 = 0 && R7924 = 0 && R7933 = 0 && R7934 = 0 && R7943 = 0 && R7944 = 0 && R7945 = 0 && R7946 = 0 && R7947 = 0 && R7948 = 0 && R7949 = 0 && R7950 = R8012 && R7951 = 0 && R7952 = R8012 && R7953 = 0 && R7954 = R8012 && R7955 = 0 && R7956 = R8012 && R7957 = 0 && R7958 = R8012 && R7959 = 0 && R7960 = R8012 && R7961 = 0 && R7962 = R8012 && R7963 = 0 && R7964 = R8012 && R7965 = 0 && R7966 = R8012 && R7967 = 0 && R7968 = R8012 && R7969 = 0 && R7970 = R8012 && R7971 = 0 && R7972 = R8012 && R7973 = 0 && R7974 = R8012 && R7975 = 0 && R7976 = R8012 && R7977 = 0 && R7978 = R8012 && R7979 = 0 && R7980 = R8012 && R7981 = 0 && R7982 = R8012 && R7983 = 0 && R7984 = R8012 && R7985 = 0 && R7986 = R8012 && R7987 = 0 && R7988 = R8012 && R7989 = 0 && R7990 = R8012 && R7991 = 0 && R7992 = R8012 && R7993 = 0 && R7994 = R8012 && R7995 = 0 && R7996 = R8012 && R7997 = 0 && R7998 = R8012 && R7999 = 0 && R8000 = R8012 && R8001 = 0 && R8002 = R8012 && R8003 = 0 && R8004 = R8012 && R8005 = 0 && R8006 = R8012 && R8007 = 0 && R8008 = R8012 && R8009 = 0 && R8010 = R8012 && R8011 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R7860 + -1*R7856 - R130 < 1 && 0 < R8012 && (R2 != 0 || R22 = 0 || (R7863 = 0 && R7864 = 0)) && (R2 != 0 || R22 = 0 || (R7865 = 0 && R7866 = 0)) && (R2 != 0 || R22 = 0 || (R7867 = 0 && R7868 = 0)) && (R2 != 0 || R22 = 0 || (R7869 = 0 && R7870 = 0)) && (R2 != 0 || R22 = 0 || (R7871 = 0 && R7872 = 0)) && (R2 != 0 || R22 = 0 || (R7873 = 0 && R7874 = 0)) && (R2 != 0 || R22 = 0 || (R7875 = 0 && R7876 = 0)) && (R2 != 0 || R22 = 0 || (R7877 = 0 && R7878 = 0)) && (R2 != 0 || R22 = 0 || (R7879 = 0 && R7880 = 0)) && (R2 != 0 || R22 = 0 || (R7881 = 0 && R7882 = 0)) && (R2 != 0 || R22 = 0 || (R7883 = 0 && R7884 = 0)) && (R2 != 0 || R22 = 0 || (R7885 = 0 && R7886 = 0)) && (R2 != 0 || R22 = 0 || (R7887 = 0 && R7888 = 0)) && (R2 != 0 || R22 = 0 || (R7889 = 0 && R7890 = 0)) && (R2 != 0 || R22 = 0 || (R7891 = 0 && R7892 = 0)) && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R7860 + -1*R7856 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R6569 + R6565 = 0 && R114 + R6570 + R6566 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R7860 + -1*R7856 - R130 = 0 || R130 + R7860 + R7856 < 1) && (R81 + R158 + R155 = 0 || R130 + R7860 + R7856 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R7860 + -1*R7856 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R7860 + R7856 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R7860 + -1*R7856 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R7860 + R7856 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R7860 + -1*R7856 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R7860 + R7856 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R6567 + R6563 != 0 || R112 + R6568 + R6564 + -1*R7860 + -1*R7856 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R7860 + R7856 = 0)) && (R113 + R6569 + R6565 != 0 || R83 + R160 + R157 + -1*R6570 + -1*R6566 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R7850 + R7845 != 0 || R120 + R7851 + R7846 + -1*R7860 + -1*R7856 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R7860 + R7856 = 0)) && (R7863 != 0 || R2 = R7864 || R2 < 1) && (R7865 != 0 || R2 = R7866 || R2 < 1) && (R7867 != 0 || R2 = R7868 || R2 < 1) && (R7869 != 0 || R2 = R7870 || R2 < 1) && (R7871 != 0 || R2 = R7872 || R2 < 1) && (R7873 != 0 || R2 = R7874 || R2 < 1) && (R7875 != 0 || R2 = R7876 || R2 < 1) && (R7877 != 0 || R2 = R7878 || R2 < 1) && (R7879 != 0 || R2 = R7880 || R2 < 1) && (R7881 != 0 || R2 = R7882 || R2 < 1) && (R7883 != 0 || R2 = R7884 || R2 < 1) && (R7885 != 0 || R2 = R7886 || R2 < 1) && (R7887 != 0 || R2 = R7888 || R2 < 1) && (R7889 != 0 || R2 = R7890 || R2 < 1) && (R7891 != 0 || R2 = R7892 || R2 < 1) && (R23 = 0 || (R7921 = 0 && R7922 = 0)) && (R23 = 0 || (R7925 = 0 && R7926 = 0)) && (R23 = 0 || (R7927 = 0 && R7928 = 0)) && (R23 = 0 || (R7929 = 0 && R7930 = 0)) && (R23 = 0 || (R7931 = 0 && R7932 = 0)) && (R23 = 0 || (R7935 = 0 && R7936 = 0)) && (R23 = 0 || (R7937 = 0 && R7938 = 0)) && (R23 = 0 || (R7939 = 0 && R7940 = 0)) && (R23 = 0 || (R7941 = 0 && R7942 = 0)) && (R24 = 0 || (R7893 = 0 && R7894 = 0)) && (R24 = 0 || (R7895 = 0 && R7896 = 0)) && (R24 = 0 || (R7897 = 0 && R7898 = 0)) && (R24 = 0 || (R7899 = 0 && R7900 = 0)) && (R24 = 0 || (R7901 = 0 && R7902 = 0)) && (R24 = 0 || (R7903 = 0 && R7904 = 0)) && (R24 = 0 || (R7905 = 0 && R7906 = 0)) && (R24 = 0 || (R7907 = 0 && R7908 = 0)) && (R24 = 0 || (R7909 = 0 && R7910 = 0)) && (R24 = 0 || (R7911 = 0 && R7912 = 0)) && (R24 = 0 || (R7913 = 0 && R7914 = 0)) && (R24 = 0 || (R7915 = 0 && R7916 = 0)) && (R24 = 0 || (R7917 = 0 && R7918 = 0)) && (R24 = 0 || (R7919 = 0 && R7920 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R7860 + R7856 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R7860 + R7856 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R7860 + R7856 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R6567 + R6563 = 0 || (R83 + R160 + R157 = 0 && R130 + R7860 + R7856 = 0)) && (R113 + R6569 + R6565 = 0 || R83 + R160 + R157 < 1) && (R119 + R7850 + R7845 = 0 || (R83 + R160 + R157 = 0 && R130 + R7860 + R7856 = 0)) && (R123 + R7854 + R7849 = 0 || (R121 + R7852 + R7847 = 0 && R122 + R7853 + R7848 = 0)) && (R7863 = 0 || R2 < 1) && (R7865 = 0 || R2 < 1) && (R7867 = 0 || R2 < 1) && (R7869 = 0 || R2 < 1) && (R7871 = 0 || R2 < 1) && (R7873 = 0 || R2 < 1) && (R7875 = 0 || R2 < 1) && (R7877 = 0 || R2 < 1) && (R7879 = 0 || R2 < 1) && (R7881 = 0 || R2 < 1) && (R7883 = 0 || R2 < 1) && (R7885 = 0 || R2 < 1) && (R7887 = 0 || R2 < 1) && (R7889 = 0 || R2 < 1) && (R7891 = 0 || R2 < 1);
// End of Parikh automata intersection problem
