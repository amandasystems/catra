// Parikh automata intersection problem, generated by OSTRICH+
counter int R1000, R1001, R1002, R1003, R1004, R1005, R1006, R1007, R1008, R1009, R101, R1010, R1011, R1012, R1013, R1014, R1015, R1016, R1017, R1018, R1019, R102, R1020, R1021, R1022, R1023, R1024, R1025, R1026, R1027, R1028, R1029, R103, R1030, R1031, R1032, R1033, R1034, R1035, R1036, R1037, R1038, R1039, R104, R1040, R1041, R1042, R1043, R1044, R1045, R1046, R1047, R1048, R1049, R105, R1050, R1051, R1052, R1053, R1054, R1055, R1056, R1057, R1058, R1059, R1060, R1061, R1062, R1063, R1064, R1065, R1066, R1067, R1068, R1069, R1070, R1071, R1072, R1073, R1074, R1075, R1076, R1077, R1078, R1079, R1080, R1081, R1082, R1083, R1084, R1085, R1086, R1087, R1088, R1089, R1090, R1091, R1092, R1093, R1094, R1095, R1096, R1097, R1098, R1099, R1100, R1101, R1102, R1103, R1104, R1105, R1106, R1107, R1108, R1109, R111, R1110, R1111, R1112, R1113, R1114, R1115, R1116, R1117, R1118, R1119, R112, R1120, R1121, R1122, R1123, R1124, R1125, R1126, R1127, R1128, R1129, R113, R1130, R1131, R1132, R1133, R1134, R1135, R1136, R1137, R1138, R1139, R114, R1140, R1141, R1142, R1143, R1144, R1145, R1146, R1147, R1148, R1149, R1150, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R193, R194, R195, R196, R197, R198, R199, R2, R200, R201, R202, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R5, R63, R65, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96, R993, R994, R995, R996, R997, R998, R999;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R26 += 1 };
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R1031 += 1, R1032 += 1 };
  s0 -> s1 [0, 65535] { R1032 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R1032 += 1, R24 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R1034 += 1 };
  s0 -> s0 [0, 65535] { R1033 += 1, R1034 += 1 };
  s0 -> s2 [70, 70] { R1034 += 1 };
  s0 -> s3 [70, 70] { R1034 += 1 };
  s0 -> s1 [76, 65535] { R1034 += 1 };
  s1 -> s1 [0, 69] { R1034 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1034 += 1 };
  s1 -> s3 [70, 70] { R1034 += 1 };
  s1 -> s1 [76, 65535] { R1034 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R1034 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R1034 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R1036 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R1035 += 1, R1036 += 1 };
  s0 -> s2 [70, 70] { R1036 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R1036 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R1036 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R1036 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1036 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R1036 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R1036 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1036 += 1, R63 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R1038 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R1037 += 1, R1038 += 1 };
  s0 -> s2 [70, 70] { R1038 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R1038 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R1038 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R1038 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1038 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R1038 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R1038 += 1, R65 += 1 };
  s2 -> s2 [0, 65535] { R1038 += 1, R65 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R1040 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R1039 += 1, R1040 += 1 };
  s0 -> s2 [70, 70] { R1040 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R1040 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R1040 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R1040 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1040 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R1040 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R1040 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1040 += 1, R67 += 1, R68 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R1042 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R1041 += 1, R1042 += 1 };
  s0 -> s2 [70, 70] { R1042 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R1042 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R1042 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R1042 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1042 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R1042 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R1042 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1042 += 1, R73 += 1, R74 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R1044 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R1043 += 1, R1044 += 1 };
  s0 -> s2 [70, 70] { R1044 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R1044 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R1044 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R1044 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1044 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R1044 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R1044 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1044 += 1, R77 += 1, R78 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R1046 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R1045 += 1, R1046 += 1 };
  s0 -> s2 [70, 70] { R1046 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R1046 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R1046 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R1046 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1046 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R1046 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R1046 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535] { R1046 += 1, R81 += 1, R82 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R1048 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R1047 += 1, R1048 += 1 };
  s0 -> s2 [70, 70] { R1048 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R1048 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R1048 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R1048 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1048 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R1048 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R1048 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535] { R1048 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R1050 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R1049 += 1, R1050 += 1 };
  s0 -> s2 [70, 70] { R1050 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R1050 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R1050 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R1050 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1050 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R1050 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R1050 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1050 += 1, R93 += 1, R94 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R1052 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R1051 += 1, R1052 += 1 };
  s0 -> s2 [70, 70] { R1052 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R1052 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R1052 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R1052 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1052 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R1052 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R1052 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R1052 += 1, R101 += 1, R102 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R1054 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R1053 += 1, R1054 += 1 };
  s0 -> s2 [70, 70] { R1054 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R1054 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R1054 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R1054 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1054 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R1054 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R1054 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1054 += 1, R111 += 1, R112 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R1056 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R1055 += 1, R1056 += 1 };
  s0 -> s2 [70, 70] { R1056 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R1056 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R1056 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R1056 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1056 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R1056 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R1056 += 1, R119 += 1, R120 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1056 += 1, R119 += 1, R120 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R1058 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R1057 += 1, R1058 += 1 };
  s0 -> s2 [70, 70] { R1058 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R1058 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R1058 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R1058 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1058 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R1058 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R1058 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R1058 += 1, R129 += 1, R130 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R1088 += 1 };
  s0 -> s0 [0, 65535] { R1087 += 1, R1088 += 1 };
  s0 -> s2 [70, 70] { R1088 += 1 };
  s0 -> s1 [71, 65535] { R1088 += 1 };
  s1 -> s1 [0, 69] { R1088 += 1 };
  s1 -> s2 [70, 70] { R1088 += 1 };
  s1 -> s1 [71, 65535] { R1088 += 1 };
  s2 -> s2 [0, 65535] { R1088 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R1090 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R1089 += 1, R1090 += 1 };
  s1 -> s1 [0, 65535] { R1090 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R1092 += 1 };
  s0 -> s0 [0, 65535] { R1091 += 1, R1092 += 1 };
  s0 -> s2 [0, 65535] { R1092 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R1092 += 1 };
  s0 -> s1 [71, 65535] { R1092 += 1 };
  s1 -> s1 [0, 69] { R1092 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R1092 += 1 };
  s1 -> s1 [71, 65535] { R1092 += 1 };
  s2 -> s1 [0, 69] { R1092 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1092 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R1092 += 1 };
  s2 -> s1 [71, 65535] { R1092 += 1 };
  s3 -> s3 [0, 65535] { R1092 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R1094 += 1, R1002 += 1 };
  s0 -> s2 [0, 65535] { R1094 += 1, R1001 += 1, R1002 += 1 };
  s0 -> s0 [0, 65535] { R1093 += 1, R1094 += 1 };
  s0 -> s1 [71, 65535] { R1094 += 1, R1002 += 1 };
  s1 -> s1 [0, 69] { R1094 += 1, R1002 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R1094 += 1 };
  s1 -> s1 [71, 65535] { R1094 += 1, R1002 += 1 };
  s2 -> s1 [0, 69] { R1094 += 1, R1002 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1094 += 1, R1001 += 1, R1002 += 1 };
  s2 -> s1 [71, 65535] { R1094 += 1, R1002 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R1095 += 1, R1096 += 1 };
  s0 -> s1 [0, 65535] { R1096 += 1, R1003 += 1, R1004 += 1 };
  s0 -> s2 [0, 65535] { R1096 += 1, R1004 += 1, R22 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R1096 += 1, R1003 += 1, R1004 += 1 };
  s1 -> s2 [0, 65535] { R1096 += 1, R1004 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1096 += 1, R1004 += 1, R22 += 1 };
  s2 -> s4 [0, 65535] { R1096 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1096 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R1098 += 1, R1006 += 1 };
  s0 -> s2 [0, 65535] { R1098 += 1, R1005 += 1, R1006 += 1 };
  s0 -> s0 [0, 65535] { R1097 += 1, R1098 += 1 };
  s0 -> s1 [75, 65535] { R1098 += 1, R1006 += 1 };
  s1 -> s1 [0, 70] { R1098 += 1, R1006 += 1 };
  s1 -> s1 [0, 65535] { R1098 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R1098 += 1, R1006 += 1 };
  s2 -> s1 [0, 70] { R1098 += 1, R1006 += 1 };
  s2 -> s2 [0, 65535] { R1098 += 1, R1005 += 1, R1006 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R1098 += 1, R1006 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R1100 += 1, R1008 += 1, R138 += 1 };
  s0 -> s0 [0, 65535] { R1099 += 1, R1100 += 1 };
  s0 -> s2 [0, 65535] { R1100 += 1, R1007 += 1, R1008 += 1 };
  s1 -> s1 [0, 65535] { R1100 += 1, R1008 += 1, R138 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R1100 += 1 };
  s2 -> s1 [0, 65535] { R1100 += 1, R1008 += 1, R138 += 1 };
  s2 -> s2 [0, 65535] { R1100 += 1, R1007 += 1, R1008 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1100 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R1102 += 1, R1010 += 1 };
  s0 -> s0 [0, 65535] { R1101 += 1, R1102 += 1 };
  s0 -> s2 [0, 65535] { R1102 += 1, R1010 += 1, R140 += 1 };
  s0 -> s3 [0, 65535] { R1102 += 1, R1009 += 1, R1010 += 1 };
  s0 -> s1 [76, 65535] { R1102 += 1, R1010 += 1 };
  s1 -> s1 [0, 74] { R1102 += 1, R1010 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R1102 += 1 };
  s1 -> s1 [76, 65535] { R1102 += 1, R1010 += 1 };
  s2 -> s1 [0, 74] { R1102 += 1, R1010 += 1 };
  s2 -> s5 [0, 65535] { R1102 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1102 += 1, R1010 += 1, R140 += 1 };
  s2 -> s1 [76, 65535] { R1102 += 1, R1010 += 1 };
  s3 -> s1 [0, 74] { R1102 += 1, R1010 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R1102 += 1, R1010 += 1, R140 += 1 };
  s3 -> s3 [0, 65535] { R1102 += 1, R1009 += 1, R1010 += 1 };
  s3 -> s1 [76, 65535] { R1102 += 1, R1010 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1102 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R1103 += 1, R1104 += 1 };
  s0 -> s1 [0, 65535] { R1104 += 1, R1011 += 1, R1012 += 1 };
  s0 -> s2 [0, 65535] { R1104 += 1, R1012 += 1, R145 += 1, R146 += 1 };
  s0 -> s3 [0, 65535] { R1104 += 1, R1012 += 1, R144 += 1, R145 += 1 };
  s1 -> s1 [0, 65535] { R1104 += 1, R1011 += 1, R1012 += 1 };
  s1 -> s2 [0, 65535] { R1104 += 1, R1012 += 1, R145 += 1, R146 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R1104 += 1, R1012 += 1, R144 += 1, R145 += 1 };
  s2 -> s4 [0, 65535] { R1104 += 1 };
  s2 -> s6 [0, 65535] { R1104 += 1, R1012 += 1 };
  s2 -> s2 [0, 65535] { R1104 += 1, R1012 += 1, R145 += 1, R146 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R1104 += 1 };
  s3 -> s2 [0, 65535] { R1104 += 1, R1012 += 1, R145 += 1, R146 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1104 += 1, R1012 += 1, R144 += 1, R145 += 1 };
  s4 -> s4 [0, 65535] { R1104 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R1104 += 1 };
  s6 -> s6 [0, 65535] { R1104 += 1, R1012 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R1106 += 1, R1014 += 1, R150 += 1 };
  s0 -> s0 [0, 65535] { R1105 += 1, R1106 += 1 };
  s0 -> s2 [0, 65535] { R1106 += 1, R1013 += 1, R1014 += 1 };
  s0 -> s3 [0, 65535] { R1106 += 1, R1014 += 1, R149 += 1, R150 += 1 };
  s0 -> s4 [75, 75] { R1106 += 1, R1014 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R1106 += 1, R1014 += 1, R150 += 1 };
  s0 -> s1 [82, 65535] { R1106 += 1, R1014 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R1106 += 1, R1014 += 1, R150 += 1 };
  s1 -> s6 [0, 65535] { R1106 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R1106 += 1, R1014 += 1 };
  s1 -> s4 [75, 75] { R1106 += 1, R1014 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R1106 += 1, R1014 += 1, R150 += 1 };
  s1 -> s1 [82, 65535] { R1106 += 1, R1014 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R1106 += 1, R1014 += 1, R150 += 1 };
  s2 -> s2 [0, 65535] { R1106 += 1, R1013 += 1, R1014 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s3 [0, 65535] { R1106 += 1, R1014 += 1, R149 += 1, R150 += 1 };
  s2 -> s4 [75, 75] { R1106 += 1, R1014 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R1106 += 1, R1014 += 1, R150 += 1 };
  s2 -> s1 [82, 65535] { R1106 += 1, R1014 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R1106 += 1, R1014 += 1, R150 += 1 };
  s3 -> s6 [0, 65535] { R1106 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R1106 += 1, R1014 += 1, R149 += 1, R150 += 1 };
  s3 -> s4 [75, 75] { R1106 += 1, R1014 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R1106 += 1, R1014 += 1, R150 += 1 };
  s3 -> s1 [82, 65535] { R1106 += 1, R1014 += 1, R150 += 1 };
  s4 -> s4 [0, 75] { R1106 += 1, R1014 += 1, R150 += 1 };
  s4 -> s4 [0, 65535] { R1106 += 1, R1014 += 1 };
  s4 -> s6 [0, 65535] { R1106 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [82, 65535] { R1106 += 1, R1014 += 1, R150 += 1 };
  s5 -> s5 [0, 65535] { R1106 += 1, R1014 += 1 };
  s5 -> s6 [0, 65535] { R1106 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R1106 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R1108 += 1, R1016 += 1, R154 += 1 };
  s0 -> s0 [0, 65535] { R1107 += 1, R1108 += 1 };
  s0 -> s2 [0, 65535] { R1108 += 1, R1016 += 1 };
  s0 -> s3 [0, 65535] { R1108 += 1, R1015 += 1, R1016 += 1 };
  s1 -> s5 [0, 65535] { R1108 += 1 };
  s1 -> s1 [0, 65535] { R1108 += 1, R1016 += 1, R154 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R1108 += 1, R1016 += 1 };
  s2 -> s5 [0, 65535] { R1108 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1108 += 1, R1016 += 1 };
  s3 -> s1 [0, 65535] { R1108 += 1, R1016 += 1, R154 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R1108 += 1, R1016 += 1 };
  s3 -> s3 [0, 65535] { R1108 += 1, R1015 += 1, R1016 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1108 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R1110 += 1, R1018 += 1, R159 += 1, R160 += 1 };
  s0 -> s0 [0, 65535] { R1109 += 1, R1110 += 1 };
  s0 -> s2 [0, 65535] { R1110 += 1, R1017 += 1, R1018 += 1 };
  s0 -> s3 [0, 65535] { R1110 += 1, R1018 += 1, R158 += 1, R159 += 1 };
  s1 -> s1 [0, 65535] { R1110 += 1, R1018 += 1, R159 += 1, R160 += 1 };
  s1 -> s4 [0, 65535] { R1110 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R1110 += 1, R1018 += 1 };
  s2 -> s1 [0, 65535] { R1110 += 1, R1018 += 1, R159 += 1, R160 += 1 };
  s2 -> s2 [0, 65535] { R1110 += 1, R1017 += 1, R1018 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R1110 += 1, R1018 += 1, R158 += 1, R159 += 1 };
  s3 -> s1 [0, 65535] { R1110 += 1, R1018 += 1, R159 += 1, R160 += 1 };
  s3 -> s4 [0, 65535] { R1110 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1110 += 1, R1018 += 1, R158 += 1, R159 += 1 };
  s4 -> s4 [0, 65535] { R1110 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R1110 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1110 += 1, R1018 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R1112 += 1, R1020 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R1112 += 1, R1020 += 1, R165 += 1, R166 += 1 };
  s0 -> s3 [0, 65535] { R1112 += 1, R1019 += 1, R1020 += 1 };
  s0 -> s0 [0, 65535] { R1111 += 1, R1112 += 1 };
  s0 -> s4 [0, 65535] { R1112 += 1, R1020 += 1, R164 += 1, R165 += 1 };
  s0 -> s1 [76, 65535] { R1112 += 1, R1020 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R1112 += 1, R1020 += 1, R165 += 1 };
  s1 -> s6 [0, 65535] { R1112 += 1 };
  s1 -> s1 [0, 65535] { R1112 += 1, R1020 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R1112 += 1, R1020 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R1112 += 1, R1020 += 1, R165 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1112 += 1, R1020 += 1, R165 += 1, R166 += 1 };
  s2 -> s6 [0, 65535] { R1112 += 1 };
  s2 -> s7 [0, 65535] { R1112 += 1, R1020 += 1 };
  s2 -> s1 [76, 65535] { R1112 += 1, R1020 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R1112 += 1, R1020 += 1, R165 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R1112 += 1, R1020 += 1, R165 += 1, R166 += 1 };
  s3 -> s3 [0, 65535] { R1112 += 1, R1019 += 1, R1020 += 1 };
  s3 -> s4 [0, 65535] { R1112 += 1, R1020 += 1, R164 += 1, R165 += 1 };
  s3 -> s1 [76, 65535] { R1112 += 1, R1020 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R1112 += 1, R1020 += 1, R165 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R1112 += 1, R1020 += 1, R165 += 1, R166 += 1 };
  s4 -> s6 [0, 65535] { R1112 += 1 };
  s4 -> s4 [0, 65535] { R1112 += 1, R1020 += 1, R164 += 1, R165 += 1 };
  s4 -> s1 [76, 65535] { R1112 += 1, R1020 += 1, R165 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1112 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R1112 += 1 };
  s7 -> s7 [0, 65535] { R1112 += 1, R1020 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R1114 += 1, R1022 += 1, R172 += 1, R174 += 1 };
  s0 -> s2 [0, 65535] { R1114 += 1, R1022 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s3 [0, 65535] { R1114 += 1, R1021 += 1, R1022 += 1 };
  s0 -> s0 [0, 65535] { R1113 += 1, R1114 += 1 };
  s0 -> s4 [0, 65535] { R1114 += 1, R1022 += 1, R171 += 1, R172 += 1 };
  s0 -> s1 [76, 65535] { R1114 += 1, R1022 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R1114 += 1, R1022 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 65535] { R1114 += 1, R1022 += 1, R172 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R1114 += 1, R1022 += 1 };
  s1 -> s6 [0, 65535] { R1114 += 1 };
  s1 -> s1 [76, 65535] { R1114 += 1, R1022 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R1114 += 1, R1022 += 1, R172 += 1, R174 += 1 };
  s2 -> s2 [0, 65535] { R1114 += 1, R1022 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R1114 += 1, R1022 += 1 };
  s2 -> s6 [0, 65535] { R1114 += 1 };
  s2 -> s1 [76, 65535] { R1114 += 1, R1022 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R1114 += 1, R1022 += 1, R172 += 1, R174 += 1 };
  s3 -> s2 [0, 65535] { R1114 += 1, R1022 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s3 [0, 65535] { R1114 += 1, R1021 += 1, R1022 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R1114 += 1, R1022 += 1, R171 += 1, R172 += 1 };
  s3 -> s1 [76, 65535] { R1114 += 1, R1022 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R1114 += 1, R1022 += 1, R172 += 1, R174 += 1 };
  s4 -> s2 [0, 65535] { R1114 += 1, R1022 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1114 += 1 };
  s4 -> s4 [0, 65535] { R1114 += 1, R1022 += 1, R171 += 1, R172 += 1 };
  s4 -> s1 [76, 65535] { R1114 += 1, R1022 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1114 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R1114 += 1, R1022 += 1 };
  s7 -> s6 [0, 65535] { R1114 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s0 [0, 65535] { R1115 += 1, R1116 += 1 };
  s0 -> s1 [0, 65535] { R1116 += 1, R1024 += 1, R180 += 1, R181 += 1 };
  s0 -> s2 [0, 65535] { R1116 += 1, R1023 += 1, R1024 += 1 };
  s0 -> s3 [0, 65535] { R1116 += 1, R1024 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s0 -> s4 [0, 65535] { R1116 += 1, R1024 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s1 -> s1 [0, 65535] { R1116 += 1, R1024 += 1, R180 += 1, R181 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R1116 += 1, R1024 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s1 -> s7 [0, 65535] { R1116 += 1 };
  s1 -> s4 [0, 65535] { R1116 += 1, R1024 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s2 -> s1 [0, 65535] { R1116 += 1, R1024 += 1, R180 += 1, R181 += 1 };
  s2 -> s2 [0, 65535] { R1116 += 1, R1023 += 1, R1024 += 1 };
  s2 -> s3 [0, 65535] { R1116 += 1, R1024 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s4 [0, 65535] { R1116 += 1, R1024 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s3 -> s8 [0, 65535] { R1116 += 1, R1024 += 1, R181 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1116 += 1, R1024 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s3 -> s6 [0, 65535] { R1116 += 1, R1024 += 1 };
  s3 -> s7 [0, 65535] { R1116 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R1116 += 1, R1024 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s4 -> s6 [0, 65535] { R1116 += 1, R1024 += 1 };
  s4 -> s7 [0, 65535] { R1116 += 1 };
  s4 -> s4 [0, 65535] { R1116 += 1, R1024 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1116 += 1, R1024 += 1 };
  s6 -> s7 [0, 65535] { R1116 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R1116 += 1 };
  s8 -> s8 [0, 65535] { R1116 += 1, R1024 += 1, R181 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R1116 += 1, R1024 += 1 };
  s8 -> s7 [0, 65535] { R1116 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R1118 += 1, R1026 += 1, R190 += 1, R192 += 1 };
  s0 -> s2 [0, 65535] { R1118 += 1, R1026 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s0 -> s3 [0, 65535] { R1118 += 1, R1025 += 1, R1026 += 1 };
  s0 -> s4 [0, 65535] { R1118 += 1, R1026 += 1, R189 += 1, R190 += 1 };
  s0 -> s0 [0, 65535] { R1117 += 1, R1118 += 1 };
  s0 -> s1 [81, 65535] { R1118 += 1, R1026 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 75] { R1118 += 1, R1026 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 65535] { R1118 += 1, R1026 += 1, R190 += 1 };
  s1 -> s7 [0, 65535] { R1118 += 1, R1026 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R1118 += 1 };
  s1 -> s1 [81, 65535] { R1118 += 1, R1026 += 1, R190 += 1, R192 += 1 };
  s2 -> s1 [0, 75] { R1118 += 1, R1026 += 1, R190 += 1, R192 += 1 };
  s2 -> s2 [0, 65535] { R1118 += 1, R1026 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s2 -> s7 [0, 65535] { R1118 += 1, R1026 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R1118 += 1 };
  s2 -> s1 [81, 65535] { R1118 += 1, R1026 += 1, R190 += 1, R192 += 1 };
  s3 -> s1 [0, 75] { R1118 += 1, R1026 += 1, R190 += 1, R192 += 1 };
  s3 -> s2 [0, 65535] { R1118 += 1, R1026 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s3 -> s3 [0, 65535] { R1118 += 1, R1025 += 1, R1026 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R1118 += 1, R1026 += 1, R189 += 1, R190 += 1 };
  s3 -> s1 [81, 65535] { R1118 += 1, R1026 += 1, R190 += 1, R192 += 1 };
  s4 -> s1 [0, 75] { R1118 += 1, R1026 += 1, R190 += 1, R192 += 1 };
  s4 -> s2 [0, 65535] { R1118 += 1, R1026 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1118 += 1, R1026 += 1, R189 += 1, R190 += 1 };
  s4 -> s6 [0, 65535] { R1118 += 1 };
  s4 -> s1 [81, 65535] { R1118 += 1, R1026 += 1, R190 += 1, R192 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1118 += 1 };
  s7 -> s7 [0, 65535] { R1118 += 1, R1026 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R1118 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R1120 += 1, R1028 += 1, R199 += 1, R201 += 1, R202 += 1 };
  s0 -> s2 [0, 65535] { R1120 += 1, R1027 += 1, R1028 += 1 };
  s0 -> s3 [0, 65535] { R1120 += 1, R1028 += 1 };
  s0 -> s4 [0, 65535] { R1120 += 1, R1028 += 1, R199 += 1, R200 += 1, R201 += 1 };
  s0 -> s0 [0, 65535] { R1119 += 1, R1120 += 1 };
  s1 -> s1 [0, 65535] { R1120 += 1, R1028 += 1, R199 += 1, R201 += 1, R202 += 1 };
  s1 -> s3 [0, 65535] { R1120 += 1, R1028 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R1120 += 1, R1028 += 1, R199 += 1 };
  s1 -> s6 [0, 65535] { R1120 += 1 };
  s2 -> s1 [0, 65535] { R1120 += 1, R1028 += 1, R199 += 1, R201 += 1, R202 += 1 };
  s2 -> s2 [0, 65535] { R1120 += 1, R1027 += 1, R1028 += 1 };
  s2 -> s3 [0, 65535] { R1120 += 1, R1028 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s4 [0, 65535] { R1120 += 1, R1028 += 1, R199 += 1, R200 += 1, R201 += 1 };
  s3 -> s3 [0, 65535] { R1120 += 1, R1028 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R1120 += 1 };
  s4 -> s1 [0, 65535] { R1120 += 1, R1028 += 1, R199 += 1, R201 += 1, R202 += 1 };
  s4 -> s3 [0, 65535] { R1120 += 1, R1028 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1120 += 1, R1028 += 1, R199 += 1, R200 += 1, R201 += 1 };
  s4 -> s6 [0, 65535] { R1120 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1120 += 1 };
  s7 -> s3 [0, 65535] { R1120 += 1, R1028 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R1120 += 1, R1028 += 1, R199 += 1 };
  s7 -> s6 [0, 65535] { R1120 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 74] { R1122 += 1, R1030 += 1, R998 += 1, R1000 += 1 };
  s0 -> s2 [0, 65535] { R1122 += 1, R1030 += 1, R998 += 1, R999 += 1, R1000 += 1 };
  s0 -> s3 [0, 65535] { R1122 += 1, R1030 += 1, R997 += 1, R998 += 1 };
  s0 -> s0 [0, 65535] { R1121 += 1, R1122 += 1 };
  s0 -> s4 [0, 65535] { R1122 += 1, R1029 += 1, R1030 += 1 };
  s0 -> s5 [75, 75] { R1122 += 1, R1030 += 1, R998 += 1, R1000 += 1 };
  s0 -> s6 [81, 81] { R1122 += 1, R1030 += 1, R998 += 1, R1000 += 1 };
  s0 -> s1 [82, 65535] { R1122 += 1, R1030 += 1, R998 += 1, R1000 += 1 };
  s1 -> s1 [0, 74] { R1122 += 1, R1030 += 1, R998 += 1, R1000 += 1 };
  s1 -> s5 [75, 75] { R1122 += 1, R1030 += 1, R998 += 1, R1000 += 1 };
  s1 -> s6 [81, 81] { R1122 += 1, R1030 += 1, R998 += 1, R1000 += 1 };
  s1 -> s1 [82, 65535] { R1122 += 1, R1030 += 1, R998 += 1, R1000 += 1 };
  s2 -> s1 [0, 74] { R1122 += 1, R1030 += 1, R998 += 1, R1000 += 1 };
  s2 -> s2 [0, 65535] { R1122 += 1, R1030 += 1, R998 += 1, R999 += 1, R1000 += 1 };
  s2 -> s5 [75, 75] { R1122 += 1, R1030 += 1, R998 += 1, R1000 += 1 };
  s2 -> s6 [81, 81] { R1122 += 1, R1030 += 1, R998 += 1, R1000 += 1 };
  s2 -> s1 [82, 65535] { R1122 += 1, R1030 += 1, R998 += 1, R1000 += 1 };
  s3 -> s1 [0, 74] { R1122 += 1, R1030 += 1, R998 += 1, R1000 += 1 };
  s3 -> s2 [0, 65535] { R1122 += 1, R1030 += 1, R998 += 1, R999 += 1, R1000 += 1 };
  s3 -> s3 [0, 65535] { R1122 += 1, R1030 += 1, R997 += 1, R998 += 1 };
  s3 -> s5 [75, 75] { R1122 += 1, R1030 += 1, R998 += 1, R1000 += 1 };
  s3 -> s6 [81, 81] { R1122 += 1, R1030 += 1, R998 += 1, R1000 += 1 };
  s3 -> s1 [82, 65535] { R1122 += 1, R1030 += 1, R998 += 1, R1000 += 1 };
  s4 -> s1 [0, 74] { R1122 += 1, R1030 += 1, R998 += 1, R1000 += 1 };
  s4 -> s2 [0, 65535] { R1122 += 1, R1030 += 1, R998 += 1, R999 += 1, R1000 += 1 };
  s4 -> s3 [0, 65535] { R1122 += 1, R1030 += 1, R997 += 1, R998 += 1 };
  s4 -> s4 [0, 65535] { R1122 += 1, R1029 += 1, R1030 += 1 };
  s4 -> s5 [75, 75] { R1122 += 1, R1030 += 1, R998 += 1, R1000 += 1 };
  s4 -> s6 [81, 81] { R1122 += 1, R1030 += 1, R998 += 1, R1000 += 1 };
  s4 -> s1 [82, 65535] { R1122 += 1, R1030 += 1, R998 += 1, R1000 += 1 };
  s5 -> s5 [0, 75] { R1122 += 1, R1030 += 1, R998 += 1, R1000 += 1 };
  s5 -> s10 [81, 81] { R1122 += 1, R1030 += 1, R998 += 1, R1000 += 1 };
  s5 -> s5 [82, 65535] { R1122 += 1, R1030 += 1, R998 += 1, R1000 += 1 };
  s6 -> s6 [0, 74] { R1122 += 1, R1030 += 1, R998 += 1, R1000 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R1122 += 1, R1030 += 1, R998 += 1 };
  s6 -> s8 [0, 65535] { R1122 += 1, R1030 += 1 };
  s6 -> s9 [0, 65535] { R1122 += 1 };
  s6 -> s10 [75, 75] { R1122 += 1, R1030 += 1, R998 += 1, R1000 += 1 };
  s6 -> s11 [75, 75] { R1122 += 1, R1030 += 1, R998 += 1, R1000 += 1 };
  s6 -> s6 [81, 65535] { R1122 += 1, R1030 += 1, R998 += 1, R1000 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R1122 += 1, R1030 += 1 };
  s8 -> s9 [0, 65535] { R1122 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s9 [0, 65535] { R1122 += 1 };
  s10 -> s10 [0, 75] { R1122 += 1, R1030 += 1, R998 += 1, R1000 += 1 };
  s10 -> s10 [0, 65535] { R1122 += 1, R1030 += 1, R998 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s8 [0, 65535] { R1122 += 1, R1030 += 1 };
  s10 -> s9 [0, 65535] { R1122 += 1 };
  s10 -> s10 [81, 65535] { R1122 += 1, R1030 += 1, R998 += 1, R1000 += 1 };
  s11 -> s11 [0, 65535] { R1122 += 1, R1030 += 1, R998 += 1 };
  s11 -> s7 [0, 65535];
  s11 -> s8 [0, 65535] { R1122 += 1, R1030 += 1 };
  s11 -> s9 [0, 65535] { R1122 += 1 };
  accepting s8, s9, s6, s7, s10, s11;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65535] { R1124 += 1, R1060 += 1, R23 += 1 };
  s0 -> s0 [0, 65535] { R1123 += 1, R1124 += 1 };
  s0 -> s2 [0, 65535] { R1124 += 1, R1059 += 1, R1060 += 1 };
  s1 -> s1 [0, 65535] { R1124 += 1, R1060 += 1, R23 += 1 };
  s1 -> s4 [0, 65535] { R1124 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R1124 += 1, R1060 += 1, R23 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1124 += 1, R1059 += 1, R1060 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1124 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R1126 += 1, R1062 += 1 };
  s0 -> s2 [0, 65535] { R1126 += 1, R1061 += 1, R1062 += 1 };
  s0 -> s0 [0, 65535] { R1125 += 1, R1126 += 1 };
  s0 -> s3 [70, 70] { R1126 += 1, R1062 += 1 };
  s0 -> s4 [70, 70] { R1126 += 1, R1062 += 1 };
  s0 -> s5 [75, 75] { R1126 += 1, R1062 += 1 };
  s0 -> s1 [76, 65535] { R1126 += 1, R1062 += 1 };
  s1 -> s1 [0, 69] { R1126 += 1, R1062 += 1 };
  s1 -> s3 [70, 70] { R1126 += 1, R1062 += 1 };
  s1 -> s4 [70, 70] { R1126 += 1, R1062 += 1 };
  s1 -> s5 [75, 75] { R1126 += 1, R1062 += 1 };
  s1 -> s1 [76, 65535] { R1126 += 1, R1062 += 1 };
  s2 -> s1 [0, 69] { R1126 += 1, R1062 += 1 };
  s2 -> s2 [0, 65535] { R1126 += 1, R1061 += 1, R1062 += 1 };
  s2 -> s3 [70, 70] { R1126 += 1, R1062 += 1 };
  s2 -> s4 [70, 70] { R1126 += 1, R1062 += 1 };
  s2 -> s5 [75, 75] { R1126 += 1, R1062 += 1 };
  s2 -> s1 [76, 65535] { R1126 += 1, R1062 += 1 };
  s4 -> s4 [0, 70] { R1126 += 1, R1062 += 1 };
  s4 -> s7 [75, 75] { R1126 += 1, R1062 += 1 };
  s4 -> s4 [76, 65535] { R1126 += 1, R1062 += 1 };
  s5 -> s5 [0, 69] { R1126 += 1, R1062 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R1126 += 1 };
  s5 -> s7 [70, 70] { R1126 += 1, R1062 += 1 };
  s5 -> s8 [70, 70] { R1126 += 1, R1062 += 1 };
  s5 -> s5 [75, 65535] { R1126 += 1, R1062 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R1126 += 1, R1062 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R1126 += 1 };
  s7 -> s7 [75, 65535] { R1126 += 1, R1062 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R1126 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R1128 += 1, R1064 += 1, R137 += 1 };
  s0 -> s0 [0, 65535] { R1127 += 1, R1128 += 1 };
  s0 -> s2 [0, 65535] { R1128 += 1, R1063 += 1, R1064 += 1 };
  s0 -> s3 [70, 70] { R1128 += 1, R1064 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R1128 += 1, R1064 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R1128 += 1, R1064 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R1128 += 1, R1064 += 1, R137 += 1 };
  s1 -> s1 [0, 65535] { R1128 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R1128 += 1, R1064 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R1128 += 1, R1064 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R1128 += 1, R1064 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R1128 += 1, R1064 += 1, R137 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R1128 += 1, R1063 += 1, R1064 += 1 };
  s2 -> s3 [70, 70] { R1128 += 1, R1064 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R1128 += 1, R1064 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R1128 += 1, R1064 += 1, R137 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R1128 += 1 };
  s4 -> s5 [0, 65535] { R1128 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R1128 += 1, R1064 += 1, R137 += 1 };
  s5 -> s5 [0, 65535] { R1128 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R1130 += 1, R1066 += 1, R139 += 1 };
  s0 -> s2 [0, 65535] { R1130 += 1, R1065 += 1, R1066 += 1 };
  s0 -> s0 [0, 65535] { R1129 += 1, R1130 += 1 };
  s0 -> s3 [70, 70] { R1130 += 1, R1066 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R1130 += 1, R1066 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R1130 += 1, R1066 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R1130 += 1, R1066 += 1, R139 += 1 };
  s1 -> s1 [0, 65535] { R1130 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R1130 += 1, R1066 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R1130 += 1, R1066 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R1130 += 1, R1066 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R1130 += 1, R1066 += 1, R139 += 1 };
  s2 -> s2 [0, 65535] { R1130 += 1, R1065 += 1, R1066 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R1130 += 1, R1066 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R1130 += 1, R1066 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R1130 += 1, R1066 += 1, R139 += 1 };
  s3 -> s3 [0, 65535] { R1130 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R1130 += 1 };
  s4 -> s4 [0, 65535] { R1130 += 1, R1066 += 1, R139 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R1130 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R1132 += 1, R1068 += 1, R141 += 1, R142 += 1 };
  s0 -> s0 [0, 65535] { R1131 += 1, R1132 += 1 };
  s0 -> s2 [0, 65535] { R1132 += 1, R1067 += 1, R1068 += 1 };
  s0 -> s3 [70, 70] { R1132 += 1, R1068 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R1132 += 1, R1068 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R1132 += 1, R1068 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R1132 += 1, R1068 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 65535] { R1132 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R1132 += 1, R1068 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R1132 += 1, R1068 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R1132 += 1, R1068 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R1132 += 1, R1068 += 1, R141 += 1, R142 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R1132 += 1, R1067 += 1, R1068 += 1 };
  s2 -> s3 [70, 70] { R1132 += 1, R1068 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R1132 += 1, R1068 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R1132 += 1, R1068 += 1, R141 += 1, R142 += 1 };
  s3 -> s3 [0, 65535] { R1132 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R1132 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R1132 += 1, R1068 += 1, R141 += 1, R142 += 1 };
  s5 -> s5 [0, 65535] { R1132 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R1134 += 1, R1070 += 1, R147 += 1, R148 += 1 };
  s0 -> s0 [0, 65535] { R1133 += 1, R1134 += 1 };
  s0 -> s2 [0, 65535] { R1134 += 1, R1069 += 1, R1070 += 1 };
  s0 -> s3 [70, 70] { R1134 += 1, R1070 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R1134 += 1, R1070 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R1134 += 1, R1070 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R1134 += 1, R1070 += 1, R147 += 1, R148 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1134 += 1 };
  s1 -> s3 [70, 70] { R1134 += 1, R1070 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R1134 += 1, R1070 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R1134 += 1, R1070 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R1134 += 1, R1070 += 1, R147 += 1, R148 += 1 };
  s2 -> s2 [0, 65535] { R1134 += 1, R1069 += 1, R1070 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R1134 += 1, R1070 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R1134 += 1, R1070 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R1134 += 1, R1070 += 1, R147 += 1, R148 += 1 };
  s3 -> s6 [0, 65535] { R1134 += 1 };
  s3 -> s3 [0, 65535] { R1134 += 1, R1070 += 1, R147 += 1, R148 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1134 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1134 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R1136 += 1, R1072 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R1136 += 1, R1072 += 1, R151 += 1, R152 += 1 };
  s0 -> s0 [0, 65535] { R1135 += 1, R1136 += 1 };
  s0 -> s3 [0, 65535] { R1136 += 1, R1071 += 1, R1072 += 1 };
  s0 -> s4 [70, 70] { R1136 += 1, R1072 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R1136 += 1, R1072 += 1, R151 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R1136 += 1, R1072 += 1, R151 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R1136 += 1, R1072 += 1, R152 += 1 };
  s0 -> s1 [71, 74] { R1136 += 1, R1072 += 1, R152 += 1 };
  s0 -> s2 [71, 65535] { R1136 += 1, R1072 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R1136 += 1, R1072 += 1, R152 += 1 };
  s0 -> s1 [76, 65535] { R1136 += 1, R1072 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R1136 += 1, R1072 += 1, R152 += 1 };
  s1 -> s4 [70, 70] { R1136 += 1, R1072 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R1136 += 1, R1072 += 1, R152 += 1 };
  s1 -> s1 [71, 74] { R1136 += 1, R1072 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R1136 += 1, R1072 += 1, R152 += 1 };
  s1 -> s1 [76, 65535] { R1136 += 1, R1072 += 1, R152 += 1 };
  s2 -> s1 [0, 69] { R1136 += 1, R1072 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R1136 += 1, R1072 += 1, R151 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R1136 += 1, R1072 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R1136 += 1, R1072 += 1, R151 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R1136 += 1, R1072 += 1, R151 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R1136 += 1, R1072 += 1, R152 += 1 };
  s2 -> s1 [71, 74] { R1136 += 1, R1072 += 1, R152 += 1 };
  s2 -> s2 [71, 65535] { R1136 += 1, R1072 += 1, R151 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R1136 += 1, R1072 += 1, R152 += 1 };
  s2 -> s1 [76, 65535] { R1136 += 1, R1072 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R1136 += 1, R1072 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R1136 += 1, R1072 += 1, R151 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R1136 += 1, R1071 += 1, R1072 += 1 };
  s3 -> s4 [70, 70] { R1136 += 1, R1072 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R1136 += 1, R1072 += 1, R151 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R1136 += 1, R1072 += 1, R151 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R1136 += 1, R1072 += 1, R152 += 1 };
  s3 -> s1 [71, 74] { R1136 += 1, R1072 += 1, R152 += 1 };
  s3 -> s2 [71, 65535] { R1136 += 1, R1072 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R1136 += 1, R1072 += 1, R152 += 1 };
  s3 -> s1 [76, 65535] { R1136 += 1, R1072 += 1, R152 += 1 };
  s4 -> s4 [0, 74] { R1136 += 1, R1072 += 1, R152 += 1 };
  s4 -> s10 [75, 75] { R1136 += 1, R1072 += 1, R152 += 1 };
  s4 -> s4 [76, 65535] { R1136 += 1, R1072 += 1, R152 += 1 };
  s6 -> s4 [0, 74] { R1136 += 1, R1072 += 1, R152 += 1 };
  s6 -> s6 [0, 65535] { R1136 += 1, R1072 += 1, R151 += 1, R152 += 1 };
  s6 -> s10 [75, 75] { R1136 += 1, R1072 += 1, R152 += 1 };
  s6 -> s4 [76, 65535] { R1136 += 1, R1072 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R1136 += 1, R1072 += 1, R152 += 1 };
  s8 -> s8 [0, 65535] { R1136 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R1136 += 1, R1072 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R1136 += 1, R1072 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R1136 += 1, R1072 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s12 [0, 65535] { R1136 += 1 };
  s10 -> s10 [0, 65535] { R1136 += 1, R1072 += 1, R152 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R1136 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R1136 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R1138 += 1, R1074 += 1, R155 += 1, R156 += 1 };
  s0 -> s0 [0, 65535] { R1137 += 1, R1138 += 1 };
  s0 -> s2 [0, 65535] { R1138 += 1, R1073 += 1, R1074 += 1 };
  s0 -> s3 [70, 70] { R1138 += 1, R1074 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R1138 += 1, R1074 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R1138 += 1, R1074 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R1138 += 1, R1074 += 1, R155 += 1, R156 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1138 += 1 };
  s1 -> s3 [70, 70] { R1138 += 1, R1074 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R1138 += 1, R1074 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R1138 += 1, R1074 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R1138 += 1, R1074 += 1, R155 += 1, R156 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1138 += 1, R1073 += 1, R1074 += 1 };
  s2 -> s3 [70, 70] { R1138 += 1, R1074 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R1138 += 1, R1074 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R1138 += 1, R1074 += 1, R155 += 1, R156 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1138 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1138 += 1 };
  s4 -> s4 [0, 65535] { R1138 += 1, R1074 += 1, R155 += 1, R156 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1138 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R1140 += 1, R1076 += 1, R161 += 1, R162 += 1 };
  s0 -> s0 [0, 65535] { R1139 += 1, R1140 += 1 };
  s0 -> s2 [0, 65535] { R1140 += 1, R1075 += 1, R1076 += 1 };
  s0 -> s3 [70, 70] { R1140 += 1, R1076 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R1140 += 1, R1076 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R1140 += 1, R1076 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R1140 += 1, R1076 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535] { R1140 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R1140 += 1, R1076 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R1140 += 1, R1076 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R1140 += 1, R1076 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R1140 += 1, R1076 += 1, R161 += 1, R162 += 1 };
  s2 -> s2 [0, 65535] { R1140 += 1, R1075 += 1, R1076 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R1140 += 1, R1076 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R1140 += 1, R1076 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R1140 += 1, R1076 += 1, R161 += 1, R162 += 1 };
  s3 -> s3 [0, 65535] { R1140 += 1, R1076 += 1, R161 += 1, R162 += 1 };
  s3 -> s6 [0, 65535] { R1140 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1140 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1140 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R1142 += 1, R1078 += 1, R167 += 1, R168 += 1 };
  s0 -> s0 [0, 65535] { R1141 += 1, R1142 += 1 };
  s0 -> s2 [0, 65535] { R1142 += 1, R1077 += 1, R1078 += 1 };
  s0 -> s3 [70, 70] { R1142 += 1, R1078 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R1142 += 1, R1078 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R1142 += 1, R1078 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R1142 += 1, R1078 += 1, R167 += 1, R168 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1142 += 1 };
  s1 -> s3 [70, 70] { R1142 += 1, R1078 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R1142 += 1, R1078 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R1142 += 1, R1078 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R1142 += 1, R1078 += 1, R167 += 1, R168 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1142 += 1, R1077 += 1, R1078 += 1 };
  s2 -> s3 [70, 70] { R1142 += 1, R1078 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R1142 += 1, R1078 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R1142 += 1, R1078 += 1, R167 += 1, R168 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1142 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1142 += 1 };
  s4 -> s4 [0, 65535] { R1142 += 1, R1078 += 1, R167 += 1, R168 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1142 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R1144 += 1, R1080 += 1, R175 += 1, R176 += 1 };
  s0 -> s0 [0, 65535] { R1143 += 1, R1144 += 1 };
  s0 -> s2 [0, 65535] { R1144 += 1, R1079 += 1, R1080 += 1 };
  s0 -> s3 [70, 70] { R1144 += 1, R1080 += 1, R175 += 1, R176 += 1 };
  s0 -> s4 [70, 70] { R1144 += 1, R1080 += 1, R175 += 1, R176 += 1 };
  s0 -> s1 [71, 65535] { R1144 += 1, R1080 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [0, 69] { R1144 += 1, R1080 += 1, R175 += 1, R176 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1144 += 1 };
  s1 -> s3 [70, 70] { R1144 += 1, R1080 += 1, R175 += 1, R176 += 1 };
  s1 -> s4 [70, 70] { R1144 += 1, R1080 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [71, 65535] { R1144 += 1, R1080 += 1, R175 += 1, R176 += 1 };
  s2 -> s1 [0, 69] { R1144 += 1, R1080 += 1, R175 += 1, R176 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1144 += 1, R1079 += 1, R1080 += 1 };
  s2 -> s3 [70, 70] { R1144 += 1, R1080 += 1, R175 += 1, R176 += 1 };
  s2 -> s4 [70, 70] { R1144 += 1, R1080 += 1, R175 += 1, R176 += 1 };
  s2 -> s1 [71, 65535] { R1144 += 1, R1080 += 1, R175 += 1, R176 += 1 };
  s3 -> s3 [0, 65535] { R1144 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1144 += 1 };
  s4 -> s4 [0, 65535] { R1144 += 1, R1080 += 1, R175 += 1, R176 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1144 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R1146 += 1, R1082 += 1, R185 += 1, R186 += 1 };
  s0 -> s2 [0, 65535] { R1146 += 1, R1081 += 1, R1082 += 1 };
  s0 -> s0 [0, 65535] { R1145 += 1, R1146 += 1 };
  s0 -> s3 [70, 70] { R1146 += 1, R1082 += 1, R185 += 1, R186 += 1 };
  s0 -> s4 [70, 70] { R1146 += 1, R1082 += 1, R185 += 1, R186 += 1 };
  s0 -> s1 [71, 65535] { R1146 += 1, R1082 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 69] { R1146 += 1, R1082 += 1, R185 += 1, R186 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1146 += 1 };
  s1 -> s3 [70, 70] { R1146 += 1, R1082 += 1, R185 += 1, R186 += 1 };
  s1 -> s4 [70, 70] { R1146 += 1, R1082 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [71, 65535] { R1146 += 1, R1082 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [0, 69] { R1146 += 1, R1082 += 1, R185 += 1, R186 += 1 };
  s2 -> s2 [0, 65535] { R1146 += 1, R1081 += 1, R1082 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R1146 += 1, R1082 += 1, R185 += 1, R186 += 1 };
  s2 -> s4 [70, 70] { R1146 += 1, R1082 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [71, 65535] { R1146 += 1, R1082 += 1, R185 += 1, R186 += 1 };
  s3 -> s3 [0, 65535] { R1146 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1146 += 1, R1082 += 1, R185 += 1, R186 += 1 };
  s4 -> s6 [0, 65535] { R1146 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1146 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R1148 += 1, R1084 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s0 -> s2 [0, 69] { R1148 += 1, R1084 += 1, R193 += 1, R194 += 1 };
  s0 -> s0 [0, 65535] { R1147 += 1, R1148 += 1 };
  s0 -> s3 [0, 65535] { R1148 += 1, R1083 += 1, R1084 += 1 };
  s0 -> s4 [70, 70] { R1148 += 1, R1084 += 1, R193 += 1, R194 += 1 };
  s0 -> s5 [70, 70] { R1148 += 1, R1084 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s0 -> s6 [70, 70] { R1148 += 1, R1084 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s0 -> s7 [70, 70] { R1148 += 1, R1084 += 1, R193 += 1, R194 += 1 };
  s0 -> s1 [71, 65535] { R1148 += 1, R1084 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s0 -> s2 [71, 65535] { R1148 += 1, R1084 += 1, R193 += 1, R194 += 1 };
  s1 -> s1 [0, 69] { R1148 += 1, R1084 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s1 [0, 65535] { R1148 += 1 };
  s1 -> s5 [70, 70] { R1148 += 1, R1084 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s1 -> s6 [70, 70] { R1148 += 1, R1084 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s1 -> s1 [71, 65535] { R1148 += 1, R1084 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s2 -> s1 [0, 69] { R1148 += 1, R1084 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s2 -> s2 [0, 69] { R1148 += 1, R1084 += 1, R193 += 1, R194 += 1 };
  s2 -> s4 [70, 70] { R1148 += 1, R1084 += 1, R193 += 1, R194 += 1 };
  s2 -> s5 [70, 70] { R1148 += 1, R1084 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s2 -> s6 [70, 70] { R1148 += 1, R1084 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s2 -> s7 [70, 70] { R1148 += 1, R1084 += 1, R193 += 1, R194 += 1 };
  s2 -> s1 [71, 65535] { R1148 += 1, R1084 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s2 -> s2 [71, 65535] { R1148 += 1, R1084 += 1, R193 += 1, R194 += 1 };
  s3 -> s1 [0, 69] { R1148 += 1, R1084 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s3 -> s2 [0, 69] { R1148 += 1, R1084 += 1, R193 += 1, R194 += 1 };
  s3 -> s3 [0, 65535] { R1148 += 1, R1083 += 1, R1084 += 1 };
  s3 -> s4 [70, 70] { R1148 += 1, R1084 += 1, R193 += 1, R194 += 1 };
  s3 -> s5 [70, 70] { R1148 += 1, R1084 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s3 -> s6 [70, 70] { R1148 += 1, R1084 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s3 -> s7 [70, 70] { R1148 += 1, R1084 += 1, R193 += 1, R194 += 1 };
  s3 -> s1 [71, 65535] { R1148 += 1, R1084 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s3 -> s2 [71, 65535] { R1148 += 1, R1084 += 1, R193 += 1, R194 += 1 };
  s4 -> s4 [0, 65535] { R1148 += 1, R1084 += 1, R193 += 1, R194 += 1 };
  s4 -> s6 [0, 65535] { R1148 += 1, R1084 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R1148 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [0, 65535] { R1148 += 1 };
  s6 -> s6 [0, 65535] { R1148 += 1, R1084 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R1148 += 1 };
  accepting s8, s5, s9, s6, s1;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R1150 += 1, R1086 += 1, R993 += 1, R994 += 1 };
  s0 -> s2 [0, 65535] { R1150 += 1, R1085 += 1, R1086 += 1 };
  s0 -> s0 [0, 65535] { R1149 += 1, R1150 += 1 };
  s0 -> s3 [70, 70] { R1150 += 1, R1086 += 1, R993 += 1, R994 += 1 };
  s0 -> s4 [70, 70] { R1150 += 1, R1086 += 1, R993 += 1, R994 += 1 };
  s0 -> s1 [71, 65535] { R1150 += 1, R1086 += 1, R993 += 1, R994 += 1 };
  s1 -> s1 [0, 69] { R1150 += 1, R1086 += 1, R993 += 1, R994 += 1 };
  s1 -> s1 [0, 65535] { R1150 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R1150 += 1, R1086 += 1, R993 += 1, R994 += 1 };
  s1 -> s4 [70, 70] { R1150 += 1, R1086 += 1, R993 += 1, R994 += 1 };
  s1 -> s1 [71, 65535] { R1150 += 1, R1086 += 1, R993 += 1, R994 += 1 };
  s2 -> s1 [0, 69] { R1150 += 1, R1086 += 1, R993 += 1, R994 += 1 };
  s2 -> s2 [0, 65535] { R1150 += 1, R1085 += 1, R1086 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R1150 += 1, R1086 += 1, R993 += 1, R994 += 1 };
  s2 -> s4 [70, 70] { R1150 += 1, R1086 += 1, R993 += 1, R994 += 1 };
  s2 -> s1 [71, 65535] { R1150 += 1, R1086 += 1, R993 += 1, R994 += 1 };
  s3 -> s3 [0, 65535] { R1150 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1150 += 1, R1086 += 1, R993 += 1, R994 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1150 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1150 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R1030 && R3 = R1150 && R25 - R1150 = -1 && R26 = R1150 && R27 - R1150 = -1 && R28 = R1150 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R998 + -1*R994 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R998 + -1*R994 - R130 = 0 && R129 + R997 + R993 = 0 && R131 + R999 + R995 = 0 && R132 + R1000 + R996 = 0 && R1029 = 0 && R1061 = 0 && R1062 = 0 && R1071 = 0 && R1072 = 0 && R1083 = 0 && R1084 = 0 && R1087 = 0 && R1088 = R1150 && R1089 = 0 && R1090 = R1150 && R1091 = 0 && R1092 = R1150 && R1093 = 0 && R1094 = R1150 && R1095 = 0 && R1096 = R1150 && R1097 = 0 && R1098 = R1150 && R1099 = 0 && R1100 = R1150 && R1101 = 0 && R1102 = R1150 && R1103 = 0 && R1104 = R1150 && R1105 = 0 && R1106 = R1150 && R1107 = 0 && R1108 = R1150 && R1109 = 0 && R1110 = R1150 && R1111 = 0 && R1112 = R1150 && R1113 = 0 && R1114 = R1150 && R1115 = 0 && R1116 = R1150 && R1117 = 0 && R1118 = R1150 && R1119 = 0 && R1120 = R1150 && R1121 = 0 && R1122 = R1150 && R1123 = 0 && R1124 = R1150 && R1125 = 0 && R1126 = R1150 && R1127 = 0 && R1128 = R1150 && R1129 = 0 && R1130 = R1150 && R1131 = 0 && R1132 = R1150 && R1133 = 0 && R1134 = R1150 && R1135 = 0 && R1136 = R1150 && R1137 = 0 && R1138 = R1150 && R1139 = 0 && R1140 = R1150 && R1141 = 0 && R1142 = R1150 && R1143 = 0 && R1144 = R1150 && R1145 = 0 && R1146 = R1150 && R1147 = 0 && R1148 = R1150 && R1149 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R998 + -1*R994 - R130 < 1 && -1 < R1030 && 0 < R1150 && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R998 + -1*R994 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R191 + R187 = 0 && R114 + R192 + R188 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R998 + -1*R994 - R130 = 0 || R130 + R998 + R994 < 1) && (R81 + R158 + R155 = 0 || R130 + R998 + R994 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R998 + -1*R994 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R998 + R994 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R998 + -1*R994 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R998 + R994 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R998 + -1*R994 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R998 + R994 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 != 0 || R112 + R190 + R186 + -1*R998 + -1*R994 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R998 + R994 = 0)) && (R113 + R191 + R187 != 0 || R83 + R160 + R157 + -1*R192 + -1*R188 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R198 + R193 != 0 || R120 + R199 + R194 + -1*R998 + -1*R994 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R998 + R994 = 0)) && (R1001 != 0 || R1002 = R1030 || (R22 = 0 && R1030 = 0)) && (R1003 != 0 || R1004 = R1030 || (R22 = 0 && R1030 = 0)) && (R1005 != 0 || R1006 = R1030 || (R22 = 0 && R1030 = 0)) && (R1007 != 0 || R1008 = R1030 || (R22 = 0 && R1030 = 0)) && (R1009 != 0 || R1010 = R1030 || (R22 = 0 && R1030 = 0)) && (R1011 != 0 || R1012 = R1030 || (R22 = 0 && R1030 = 0)) && (R1013 != 0 || R1014 = R1030 || (R22 = 0 && R1030 = 0)) && (R1015 != 0 || R1016 = R1030 || (R22 = 0 && R1030 = 0)) && (R1017 != 0 || R1018 = R1030 || (R22 = 0 && R1030 = 0)) && (R1019 != 0 || R1020 = R1030 || (R22 = 0 && R1030 = 0)) && (R1021 != 0 || R1022 = R1030 || (R22 = 0 && R1030 = 0)) && (R1023 != 0 || R1024 = R1030 || (R22 = 0 && R1030 = 0)) && (R1025 != 0 || R1026 = R1030 || (R22 = 0 && R1030 = 0)) && (R1027 != 0 || R1028 = R1030 || (R22 = 0 && R1030 = 0)) && (R23 = 0 || (R1059 = 0 && R1060 = 0)) && (R23 = 0 || (R1063 = 0 && R1064 = 0)) && (R23 = 0 || (R1065 = 0 && R1066 = 0)) && (R23 = 0 || (R1067 = 0 && R1068 = 0)) && (R23 = 0 || (R1069 = 0 && R1070 = 0)) && (R23 = 0 || (R1073 = 0 && R1074 = 0)) && (R23 = 0 || (R1075 = 0 && R1076 = 0)) && (R23 = 0 || (R1077 = 0 && R1078 = 0)) && (R23 = 0 || (R1079 = 0 && R1080 = 0)) && (R23 = 0 || (R1081 = 0 && R1082 = 0)) && (R23 = 0 || (R1085 = 0 && R1086 = 0)) && (R24 = 0 || (R1031 = 0 && R1032 = 0)) && (R24 = 0 || (R1033 = 0 && R1034 = 0)) && (R24 = 0 || (R1035 = 0 && R1036 = 0)) && (R24 = 0 || (R1037 = 0 && R1038 = 0)) && (R24 = 0 || (R1039 = 0 && R1040 = 0)) && (R24 = 0 || (R1041 = 0 && R1042 = 0)) && (R24 = 0 || (R1043 = 0 && R1044 = 0)) && (R24 = 0 || (R1045 = 0 && R1046 = 0)) && (R24 = 0 || (R1047 = 0 && R1048 = 0)) && (R24 = 0 || (R1049 = 0 && R1050 = 0)) && (R24 = 0 || (R1051 = 0 && R1052 = 0)) && (R24 = 0 || (R1053 = 0 && R1054 = 0)) && (R24 = 0 || (R1055 = 0 && R1056 = 0)) && (R24 = 0 || (R1057 = 0 && R1058 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R998 + R994 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R998 + R994 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R998 + R994 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 = 0 || (R83 + R160 + R157 = 0 && R130 + R998 + R994 = 0)) && (R113 + R191 + R187 = 0 || R83 + R160 + R157 < 1) && (R119 + R198 + R193 = 0 || (R83 + R160 + R157 = 0 && R130 + R998 + R994 = 0)) && (R123 + R202 + R197 = 0 || (R121 + R200 + R195 = 0 && R122 + R201 + R196 = 0)) && (R1001 = 0 || (R22 = 0 && R1030 = 0)) && (R1003 = 0 || (R22 = 0 && R1030 = 0)) && (R1005 = 0 || (R22 = 0 && R1030 = 0)) && (R1007 = 0 || (R22 = 0 && R1030 = 0)) && (R1009 = 0 || (R22 = 0 && R1030 = 0)) && (R1011 = 0 || (R22 = 0 && R1030 = 0)) && (R1013 = 0 || (R22 = 0 && R1030 = 0)) && (R1015 = 0 || (R22 = 0 && R1030 = 0)) && (R1017 = 0 || (R22 = 0 && R1030 = 0)) && (R1019 = 0 || (R22 = 0 && R1030 = 0)) && (R1021 = 0 || (R22 = 0 && R1030 = 0)) && (R1023 = 0 || (R22 = 0 && R1030 = 0)) && (R1025 = 0 || (R22 = 0 && R1030 = 0)) && (R1027 = 0 || (R22 = 0 && R1030 = 0));
// End of Parikh automata intersection problem
