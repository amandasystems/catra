// Parikh automata intersection problem, generated by OSTRICH+
counter int R12, R13513, R13514, R13515, R13516, R13517, R13518, R13519, R13520, R13521, R13522, R13523, R13524, R13525, R13526, R13527, R13528, R13529, R13530, R13531, R13532, R13863, R13864, R13865, R13866, R13867, R13868, R13869, R13870, R13871, R13872, R13873, R13874, R13875, R13876, R13877, R13878, R13879, R13880, R13881, R13882, R13883, R13884, R13885, R13886, R13887, R13888, R13889, R13890, R13891, R13892, R13893, R13894, R13895, R13896, R13897, R13898, R13899, R13900, R13901, R13902, R13903, R13904, R13905, R13906, R13907, R13908, R13909, R13910, R13911, R13912, R13913, R13914, R13915, R13916, R13917, R13918, R13919, R13920, R13921, R13922, R13923, R13924, R13925, R13926, R13927, R13928, R13929, R13930, R13931, R13932, R13933, R13934, R13935, R13936, R13937, R13938, R13939, R13940, R13941, R13942, R13943, R13944, R13945, R13946, R13947, R13948, R13949, R13950, R13951, R13952, R13953, R13954, R13955, R13956, R13957, R13958, R13959, R13960, R13961, R13962, R13963, R13964, R13965, R13966, R13967, R13968, R13969, R13970, R13971, R13972, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R4, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R13893 += 1, R13894 += 1 };
  s0 -> s1 [0, 65535] { R13894 += 1, R22 += 1 };
  s1 -> s1 [0, 65535] { R13894 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R13896 += 1 };
  s0 -> s0 [0, 65535] { R13895 += 1, R13896 += 1 };
  s0 -> s2 [70, 70] { R13896 += 1 };
  s0 -> s3 [70, 70] { R13896 += 1 };
  s0 -> s1 [76, 65535] { R13896 += 1 };
  s1 -> s1 [0, 69] { R13896 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13896 += 1 };
  s1 -> s3 [70, 70] { R13896 += 1 };
  s1 -> s1 [76, 65535] { R13896 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R13896 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R13896 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R13898 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R13897 += 1, R13898 += 1 };
  s0 -> s2 [70, 70] { R13898 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R13898 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R13898 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R13898 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13898 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R13898 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R13898 += 1, R45 += 1 };
  s2 -> s2 [0, 65535] { R13898 += 1, R45 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R13900 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R13899 += 1, R13900 += 1 };
  s0 -> s2 [70, 70] { R13900 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R13900 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R13900 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R13900 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13900 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R13900 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R13900 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R13900 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R13902 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R13901 += 1, R13902 += 1 };
  s0 -> s2 [70, 70] { R13902 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R13902 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R13902 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R13902 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13902 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R13902 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R13902 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13902 += 1, R49 += 1, R50 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R13904 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R13903 += 1, R13904 += 1 };
  s0 -> s2 [70, 70] { R13904 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R13904 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R13904 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R13904 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13904 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R13904 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R13904 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13904 += 1, R53 += 1, R54 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R13906 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R13905 += 1, R13906 += 1 };
  s0 -> s2 [70, 70] { R13906 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R13906 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R13906 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R13906 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13906 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R13906 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R13906 += 1, R59 += 1, R60 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13906 += 1, R59 += 1, R60 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R13908 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R13907 += 1, R13908 += 1 };
  s0 -> s2 [70, 70] { R13908 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R13908 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R13908 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R13908 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13908 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R13908 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R13908 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535] { R13908 += 1, R65 += 1, R66 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R13910 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R13909 += 1, R13910 += 1 };
  s0 -> s2 [70, 70] { R13910 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R13910 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R13910 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R13910 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13910 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R13910 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R13910 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R13910 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R13930 += 1 };
  s0 -> s0 [0, 65535] { R13929 += 1, R13930 += 1 };
  s0 -> s2 [70, 70] { R13930 += 1 };
  s0 -> s1 [71, 65535] { R13930 += 1 };
  s1 -> s1 [0, 69] { R13930 += 1 };
  s1 -> s2 [70, 70] { R13930 += 1 };
  s1 -> s1 [71, 65535] { R13930 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13930 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R13931 += 1, R13932 += 1 };
  s0 -> s1 [0, 65535] { R13932 += 1, R2 += 1 };
  s1 -> s1 [0, 65535] { R13932 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R13934 += 1 };
  s0 -> s2 [0, 65535] { R13934 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R13933 += 1, R13934 += 1 };
  s0 -> s3 [70, 70] { R13934 += 1 };
  s0 -> s1 [71, 65535] { R13934 += 1 };
  s1 -> s1 [0, 69] { R13934 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R13934 += 1 };
  s1 -> s1 [71, 65535] { R13934 += 1 };
  s2 -> s1 [0, 69] { R13934 += 1 };
  s2 -> s2 [0, 65535] { R13934 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R13934 += 1 };
  s2 -> s1 [71, 65535] { R13934 += 1 };
  s3 -> s3 [0, 65535] { R13934 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R13936 += 1, R13874 += 1 };
  s0 -> s2 [0, 65535] { R13936 += 1, R13873 += 1, R13874 += 1 };
  s0 -> s0 [0, 65535] { R13935 += 1, R13936 += 1 };
  s0 -> s1 [71, 65535] { R13936 += 1, R13874 += 1 };
  s1 -> s1 [0, 69] { R13936 += 1, R13874 += 1 };
  s1 -> s1 [0, 65535] { R13936 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R13936 += 1, R13874 += 1 };
  s2 -> s1 [0, 69] { R13936 += 1, R13874 += 1 };
  s2 -> s2 [0, 65535] { R13936 += 1, R13873 += 1, R13874 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R13936 += 1, R13874 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s0 [0, 65535] { R13937 += 1, R13938 += 1 };
  s0 -> s1 [0, 65535] { R13938 += 1, R13876 += 1, R20 += 1 };
  s0 -> s2 [0, 65535] { R13938 += 1, R13875 += 1, R13876 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R13938 += 1, R13876 += 1, R20 += 1 };
  s1 -> s4 [0, 65535] { R13938 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R13938 += 1, R13876 += 1, R20 += 1 };
  s2 -> s2 [0, 65535] { R13938 += 1, R13875 += 1, R13876 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13938 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R13940 += 1, R13878 += 1 };
  s0 -> s2 [0, 65535] { R13940 += 1, R13877 += 1, R13878 += 1 };
  s0 -> s0 [0, 65535] { R13939 += 1, R13940 += 1 };
  s0 -> s1 [75, 65535] { R13940 += 1, R13878 += 1 };
  s1 -> s1 [0, 70] { R13940 += 1, R13878 += 1 };
  s1 -> s1 [0, 65535] { R13940 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R13940 += 1, R13878 += 1 };
  s2 -> s1 [0, 70] { R13940 += 1, R13878 += 1 };
  s2 -> s2 [0, 65535] { R13940 += 1, R13877 += 1, R13878 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R13940 += 1, R13878 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R13942 += 1, R13880 += 1, R84 += 1 };
  s0 -> s2 [0, 65535] { R13942 += 1, R13879 += 1, R13880 += 1 };
  s0 -> s0 [0, 65535] { R13941 += 1, R13942 += 1 };
  s1 -> s1 [0, 65535] { R13942 += 1, R13880 += 1, R84 += 1 };
  s1 -> s4 [0, 65535] { R13942 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R13942 += 1, R13880 += 1, R84 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13942 += 1, R13879 += 1, R13880 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13942 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R13944 += 1, R13882 += 1 };
  s0 -> s2 [0, 65535] { R13944 += 1, R13882 += 1, R86 += 1 };
  s0 -> s3 [0, 65535] { R13944 += 1, R13881 += 1, R13882 += 1 };
  s0 -> s0 [0, 65535] { R13943 += 1, R13944 += 1 };
  s0 -> s1 [76, 65535] { R13944 += 1, R13882 += 1 };
  s1 -> s1 [0, 74] { R13944 += 1, R13882 += 1 };
  s1 -> s1 [0, 65535] { R13944 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [76, 65535] { R13944 += 1, R13882 += 1 };
  s2 -> s1 [0, 74] { R13944 += 1, R13882 += 1 };
  s2 -> s2 [0, 65535] { R13944 += 1, R13882 += 1, R86 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R13944 += 1 };
  s2 -> s1 [76, 65535] { R13944 += 1, R13882 += 1 };
  s3 -> s1 [0, 74] { R13944 += 1, R13882 += 1 };
  s3 -> s2 [0, 65535] { R13944 += 1, R13882 += 1, R86 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13944 += 1, R13881 += 1, R13882 += 1 };
  s3 -> s1 [76, 65535] { R13944 += 1, R13882 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13944 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R13946 += 1, R13884 += 1 };
  s0 -> s2 [0, 65535] { R13946 += 1, R13883 += 1, R13884 += 1 };
  s0 -> s0 [0, 65535] { R13945 += 1, R13946 += 1 };
  s0 -> s3 [0, 65535] { R13946 += 1, R13884 += 1, R90 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R13946 += 1 };
  s1 -> s1 [0, 65535] { R13946 += 1, R13884 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R13946 += 1, R13884 += 1 };
  s2 -> s2 [0, 65535] { R13946 += 1, R13883 += 1, R13884 += 1 };
  s2 -> s3 [0, 65535] { R13946 += 1, R13884 += 1, R90 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R13946 += 1 };
  s3 -> s1 [0, 65535] { R13946 += 1, R13884 += 1 };
  s3 -> s3 [0, 65535] { R13946 += 1, R13884 += 1, R90 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13946 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R13948 += 1, R13886 += 1, R13517 += 1, R13518 += 1 };
  s0 -> s2 [0, 65535] { R13948 += 1, R13886 += 1 };
  s0 -> s3 [0, 65535] { R13948 += 1, R13885 += 1, R13886 += 1 };
  s0 -> s0 [0, 65535] { R13947 += 1, R13948 += 1 };
  s1 -> s1 [0, 65535] { R13948 += 1, R13886 += 1, R13517 += 1, R13518 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R13948 += 1, R13886 += 1 };
  s1 -> s5 [0, 65535] { R13948 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13948 += 1, R13886 += 1 };
  s2 -> s5 [0, 65535] { R13948 += 1 };
  s3 -> s1 [0, 65535] { R13948 += 1, R13886 += 1, R13517 += 1, R13518 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R13948 += 1, R13886 += 1 };
  s3 -> s3 [0, 65535] { R13948 += 1, R13885 += 1, R13886 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13948 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R13950 += 1, R13888 += 1, R13523 += 1 };
  s0 -> s0 [0, 65535] { R13949 += 1, R13950 += 1 };
  s0 -> s2 [0, 65535] { R13950 += 1, R13887 += 1, R13888 += 1 };
  s0 -> s3 [0, 65535] { R13950 += 1, R13888 += 1, R13522 += 1, R13523 += 1 };
  s0 -> s4 [0, 65535] { R13950 += 1, R13888 += 1, R13523 += 1, R13524 += 1 };
  s0 -> s1 [76, 65535] { R13950 += 1, R13888 += 1, R13523 += 1 };
  s1 -> s1 [0, 74] { R13950 += 1, R13888 += 1, R13523 += 1 };
  s1 -> s1 [0, 65535] { R13950 += 1, R13888 += 1 };
  s1 -> s5 [0, 65535] { R13950 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [76, 65535] { R13950 += 1, R13888 += 1, R13523 += 1 };
  s2 -> s1 [0, 74] { R13950 += 1, R13888 += 1, R13523 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R13950 += 1, R13887 += 1, R13888 += 1 };
  s2 -> s3 [0, 65535] { R13950 += 1, R13888 += 1, R13522 += 1, R13523 += 1 };
  s2 -> s4 [0, 65535] { R13950 += 1, R13888 += 1, R13523 += 1, R13524 += 1 };
  s2 -> s1 [76, 65535] { R13950 += 1, R13888 += 1, R13523 += 1 };
  s3 -> s1 [0, 74] { R13950 += 1, R13888 += 1, R13523 += 1 };
  s3 -> s5 [0, 65535] { R13950 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R13950 += 1, R13888 += 1, R13522 += 1, R13523 += 1 };
  s3 -> s4 [0, 65535] { R13950 += 1, R13888 += 1, R13523 += 1, R13524 += 1 };
  s3 -> s1 [76, 65535] { R13950 += 1, R13888 += 1, R13523 += 1 };
  s4 -> s1 [0, 74] { R13950 += 1, R13888 += 1, R13523 += 1 };
  s4 -> s5 [0, 65535] { R13950 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R13950 += 1, R13888 += 1, R13523 += 1, R13524 += 1 };
  s4 -> s7 [0, 65535] { R13950 += 1, R13888 += 1 };
  s4 -> s1 [76, 65535] { R13950 += 1, R13888 += 1, R13523 += 1 };
  s5 -> s5 [0, 65535] { R13950 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R13950 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R13950 += 1, R13888 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s0 [0, 65535] { R13951 += 1, R13952 += 1 };
  s0 -> s1 [0, 65535] { R13952 += 1, R13890 += 1, R13530 += 1 };
  s0 -> s2 [0, 65535] { R13952 += 1, R13889 += 1, R13890 += 1 };
  s0 -> s3 [0, 65535] { R13952 += 1, R13890 += 1, R13530 += 1, R13532 += 1 };
  s0 -> s4 [0, 65535] { R13952 += 1, R13890 += 1 };
  s1 -> s1 [0, 65535] { R13952 += 1, R13890 += 1, R13530 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R13952 += 1 };
  s1 -> s4 [0, 65535] { R13952 += 1, R13890 += 1 };
  s2 -> s1 [0, 65535] { R13952 += 1, R13890 += 1, R13530 += 1 };
  s2 -> s2 [0, 65535] { R13952 += 1, R13889 += 1, R13890 += 1 };
  s2 -> s3 [0, 65535] { R13952 += 1, R13890 += 1, R13530 += 1, R13532 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s4 [0, 65535] { R13952 += 1, R13890 += 1 };
  s3 -> s1 [0, 65535] { R13952 += 1, R13890 += 1, R13530 += 1 };
  s3 -> s3 [0, 65535] { R13952 += 1, R13890 += 1, R13530 += 1, R13532 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R13952 += 1 };
  s3 -> s4 [0, 65535] { R13952 += 1, R13890 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R13952 += 1 };
  s4 -> s4 [0, 65535] { R13952 += 1, R13890 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13952 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R13954 += 1, R13891 += 1, R13892 += 1 };
  s0 -> s0 [0, 65535] { R13953 += 1, R13954 += 1 };
  s0 -> s2 [0, 65535] { R13954 += 1, R13892 += 1 };
  s0 -> s3 [0, 65535] { R13954 += 1, R13892 += 1, R13869 += 1, R13871 += 1, R13872 += 1 };
  s0 -> s4 [0, 65535] { R13954 += 1, R13892 += 1, R13869 += 1 };
  s1 -> s1 [0, 65535] { R13954 += 1, R13891 += 1, R13892 += 1 };
  s1 -> s2 [0, 65535] { R13954 += 1, R13892 += 1 };
  s1 -> s3 [0, 65535] { R13954 += 1, R13892 += 1, R13869 += 1, R13871 += 1, R13872 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s4 [0, 65535] { R13954 += 1, R13892 += 1, R13869 += 1 };
  s2 -> s2 [0, 65535] { R13954 += 1, R13892 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R13954 += 1 };
  s3 -> s2 [0, 65535] { R13954 += 1, R13892 += 1 };
  s3 -> s3 [0, 65535] { R13954 += 1, R13892 += 1, R13869 += 1, R13871 += 1, R13872 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R13954 += 1, R13892 += 1, R13869 += 1 };
  s3 -> s6 [0, 65535] { R13954 += 1 };
  s4 -> s2 [0, 65535] { R13954 += 1, R13892 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13954 += 1, R13892 += 1, R13869 += 1 };
  s4 -> s6 [0, 65535] { R13954 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13954 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R13956 += 1, R13912 += 1, R21 += 1 };
  s0 -> s2 [0, 65535] { R13956 += 1, R13911 += 1, R13912 += 1 };
  s0 -> s0 [0, 65535] { R13955 += 1, R13956 += 1 };
  s1 -> s1 [0, 65535] { R13956 += 1, R13912 += 1, R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R13956 += 1 };
  s2 -> s1 [0, 65535] { R13956 += 1, R13912 += 1, R21 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13956 += 1, R13911 += 1, R13912 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13956 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R13958 += 1, R13914 += 1 };
  s0 -> s2 [0, 65535] { R13958 += 1, R13913 += 1, R13914 += 1 };
  s0 -> s0 [0, 65535] { R13957 += 1, R13958 += 1 };
  s0 -> s3 [70, 70] { R13958 += 1, R13914 += 1 };
  s0 -> s4 [70, 70] { R13958 += 1, R13914 += 1 };
  s0 -> s5 [75, 75] { R13958 += 1, R13914 += 1 };
  s0 -> s1 [76, 65535] { R13958 += 1, R13914 += 1 };
  s1 -> s1 [0, 69] { R13958 += 1, R13914 += 1 };
  s1 -> s3 [70, 70] { R13958 += 1, R13914 += 1 };
  s1 -> s4 [70, 70] { R13958 += 1, R13914 += 1 };
  s1 -> s5 [75, 75] { R13958 += 1, R13914 += 1 };
  s1 -> s1 [76, 65535] { R13958 += 1, R13914 += 1 };
  s2 -> s1 [0, 69] { R13958 += 1, R13914 += 1 };
  s2 -> s2 [0, 65535] { R13958 += 1, R13913 += 1, R13914 += 1 };
  s2 -> s3 [70, 70] { R13958 += 1, R13914 += 1 };
  s2 -> s4 [70, 70] { R13958 += 1, R13914 += 1 };
  s2 -> s5 [75, 75] { R13958 += 1, R13914 += 1 };
  s2 -> s1 [76, 65535] { R13958 += 1, R13914 += 1 };
  s3 -> s3 [0, 70] { R13958 += 1, R13914 += 1 };
  s3 -> s8 [75, 75] { R13958 += 1, R13914 += 1 };
  s3 -> s3 [76, 65535] { R13958 += 1, R13914 += 1 };
  s5 -> s5 [0, 69] { R13958 += 1, R13914 += 1 };
  s5 -> s5 [0, 65535] { R13958 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R13958 += 1, R13914 += 1 };
  s5 -> s8 [70, 70] { R13958 += 1, R13914 += 1 };
  s5 -> s5 [75, 65535] { R13958 += 1, R13914 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R13958 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 70] { R13958 += 1, R13914 += 1 };
  s8 -> s8 [0, 65535] { R13958 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [75, 65535] { R13958 += 1, R13914 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R13960 += 1, R13916 += 1, R83 += 1 };
  s0 -> s0 [0, 65535] { R13959 += 1, R13960 += 1 };
  s0 -> s2 [0, 65535] { R13960 += 1, R13915 += 1, R13916 += 1 };
  s0 -> s3 [70, 70] { R13960 += 1, R13916 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R13960 += 1, R13916 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R13960 += 1, R13916 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R13960 += 1, R13916 += 1, R83 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13960 += 1 };
  s1 -> s3 [70, 70] { R13960 += 1, R13916 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R13960 += 1, R13916 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R13960 += 1, R13916 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R13960 += 1, R13916 += 1, R83 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13960 += 1, R13915 += 1, R13916 += 1 };
  s2 -> s3 [70, 70] { R13960 += 1, R13916 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R13960 += 1, R13916 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R13960 += 1, R13916 += 1, R83 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R13960 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R13960 += 1 };
  s4 -> s4 [0, 65535] { R13960 += 1, R13916 += 1, R83 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13960 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R13962 += 1, R13918 += 1, R85 += 1 };
  s0 -> s0 [0, 65535] { R13961 += 1, R13962 += 1 };
  s0 -> s2 [0, 65535] { R13962 += 1, R13917 += 1, R13918 += 1 };
  s0 -> s3 [70, 70] { R13962 += 1, R13918 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R13962 += 1, R13918 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R13962 += 1, R13918 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R13962 += 1, R13918 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R13962 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R13962 += 1, R13918 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R13962 += 1, R13918 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R13962 += 1, R13918 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R13962 += 1, R13918 += 1, R85 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13962 += 1, R13917 += 1, R13918 += 1 };
  s2 -> s3 [70, 70] { R13962 += 1, R13918 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R13962 += 1, R13918 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R13962 += 1, R13918 += 1, R85 += 1 };
  s3 -> s3 [0, 65535] { R13962 += 1, R13918 += 1, R85 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R13962 += 1 };
  s4 -> s4 [0, 65535] { R13962 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13962 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R13964 += 1, R13920 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R13964 += 1, R13920 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [0, 65535] { R13964 += 1, R13919 += 1, R13920 += 1 };
  s0 -> s0 [0, 65535] { R13963 += 1, R13964 += 1 };
  s0 -> s4 [70, 70] { R13964 += 1, R13920 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R13964 += 1, R13920 += 1, R87 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R13964 += 1, R13920 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R13964 += 1, R13920 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 74] { R13964 += 1, R13920 += 1, R88 += 1 };
  s0 -> s2 [71, 65535] { R13964 += 1, R13920 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R13964 += 1, R13920 += 1, R88 += 1 };
  s0 -> s1 [76, 65535] { R13964 += 1, R13920 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R13964 += 1, R13920 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R13964 += 1, R13920 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R13964 += 1, R13920 += 1, R88 += 1 };
  s1 -> s1 [71, 74] { R13964 += 1, R13920 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R13964 += 1, R13920 += 1, R88 += 1 };
  s1 -> s1 [76, 65535] { R13964 += 1, R13920 += 1, R88 += 1 };
  s2 -> s1 [0, 69] { R13964 += 1, R13920 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R13964 += 1, R13920 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R13964 += 1, R13920 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R13964 += 1, R13920 += 1, R87 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R13964 += 1, R13920 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R13964 += 1, R13920 += 1, R87 += 1, R88 += 1 };
  s2 -> s1 [71, 74] { R13964 += 1, R13920 += 1, R88 += 1 };
  s2 -> s2 [71, 65535] { R13964 += 1, R13920 += 1, R87 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R13964 += 1, R13920 += 1, R88 += 1 };
  s2 -> s1 [76, 65535] { R13964 += 1, R13920 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R13964 += 1, R13920 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R13964 += 1, R13920 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R13964 += 1, R13919 += 1, R13920 += 1 };
  s3 -> s4 [70, 70] { R13964 += 1, R13920 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R13964 += 1, R13920 += 1, R87 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R13964 += 1, R13920 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R13964 += 1, R13920 += 1, R87 += 1, R88 += 1 };
  s3 -> s1 [71, 74] { R13964 += 1, R13920 += 1, R88 += 1 };
  s3 -> s2 [71, 65535] { R13964 += 1, R13920 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R13964 += 1, R13920 += 1, R88 += 1 };
  s3 -> s1 [76, 65535] { R13964 += 1, R13920 += 1, R88 += 1 };
  s5 -> s6 [0, 74] { R13964 += 1, R13920 += 1, R88 += 1 };
  s5 -> s5 [0, 65535] { R13964 += 1, R13920 += 1, R87 += 1, R88 += 1 };
  s5 -> s10 [75, 75] { R13964 += 1, R13920 += 1, R88 += 1 };
  s5 -> s6 [76, 65535] { R13964 += 1, R13920 += 1, R88 += 1 };
  s6 -> s6 [0, 74] { R13964 += 1, R13920 += 1, R88 += 1 };
  s6 -> s10 [75, 75] { R13964 += 1, R13920 += 1, R88 += 1 };
  s6 -> s6 [76, 65535] { R13964 += 1, R13920 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R13964 += 1, R13920 += 1, R88 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R13964 += 1 };
  s8 -> s10 [70, 70] { R13964 += 1, R13920 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R13964 += 1, R13920 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R13964 += 1, R13920 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R13964 += 1, R13920 += 1, R88 += 1 };
  s10 -> s9 [0, 65535];
  s10 -> s12 [0, 65535] { R13964 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R13964 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R13964 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R13966 += 1, R13922 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s2 [0, 69] { R13966 += 1, R13922 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s0 [0, 65535] { R13965 += 1, R13966 += 1 };
  s0 -> s3 [0, 65535] { R13966 += 1, R13921 += 1, R13922 += 1 };
  s0 -> s4 [70, 70] { R13966 += 1, R13922 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s5 [70, 70] { R13966 += 1, R13922 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s6 [70, 70] { R13966 += 1, R13922 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s7 [70, 70] { R13966 += 1, R13922 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s1 [71, 65535] { R13966 += 1, R13922 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s2 [71, 65535] { R13966 += 1, R13922 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s1 [0, 69] { R13966 += 1, R13922 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s2 [0, 69] { R13966 += 1, R13922 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s4 [70, 70] { R13966 += 1, R13922 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s5 [70, 70] { R13966 += 1, R13922 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s6 [70, 70] { R13966 += 1, R13922 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s7 [70, 70] { R13966 += 1, R13922 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s1 [71, 65535] { R13966 += 1, R13922 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s2 [71, 65535] { R13966 += 1, R13922 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [0, 69] { R13966 += 1, R13922 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R13966 += 1 };
  s2 -> s6 [70, 70] { R13966 += 1, R13922 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s7 [70, 70] { R13966 += 1, R13922 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [71, 65535] { R13966 += 1, R13922 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s1 [0, 69] { R13966 += 1, R13922 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s2 [0, 69] { R13966 += 1, R13922 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s3 [0, 65535] { R13966 += 1, R13921 += 1, R13922 += 1 };
  s3 -> s4 [70, 70] { R13966 += 1, R13922 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s5 [70, 70] { R13966 += 1, R13922 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s6 [70, 70] { R13966 += 1, R13922 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s7 [70, 70] { R13966 += 1, R13922 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s1 [71, 65535] { R13966 += 1, R13922 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s2 [71, 65535] { R13966 += 1, R13922 += 1, R13514 += 1, R13515 += 1 };
  s4 -> s4 [0, 65535] { R13966 += 1, R13922 += 1, R13513 += 1, R13514 += 1 };
  s4 -> s7 [0, 65535] { R13966 += 1, R13922 += 1, R13514 += 1, R13515 += 1 };
  s6 -> s6 [0, 65535] { R13966 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R13966 += 1, R13922 += 1, R13514 += 1, R13515 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R13966 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R13966 += 1 };
  accepting s8, s2, s9, s6, s7;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R13968 += 1, R13924 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s0 [0, 65535] { R13967 += 1, R13968 += 1 };
  s0 -> s2 [0, 65535] { R13968 += 1, R13923 += 1, R13924 += 1 };
  s0 -> s3 [70, 70] { R13968 += 1, R13924 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s4 [70, 70] { R13968 += 1, R13924 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s1 [71, 65535] { R13968 += 1, R13924 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [0, 69] { R13968 += 1, R13924 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [0, 65535] { R13968 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R13968 += 1, R13924 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s4 [70, 70] { R13968 += 1, R13924 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [71, 65535] { R13968 += 1, R13924 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s1 [0, 69] { R13968 += 1, R13924 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s2 [0, 65535] { R13968 += 1, R13923 += 1, R13924 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R13968 += 1, R13924 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s4 [70, 70] { R13968 += 1, R13924 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s1 [71, 65535] { R13968 += 1, R13924 += 1, R13519 += 1, R13520 += 1 };
  s3 -> s6 [0, 65535] { R13968 += 1 };
  s3 -> s3 [0, 65535] { R13968 += 1, R13924 += 1, R13519 += 1, R13520 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13968 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13968 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s0 -> s2 [0, 69] { R13970 += 1, R13926 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s0 -> s3 [0, 69] { R13970 += 1, R13926 += 1, R13525 += 1, R13526 += 1 };
  s0 -> s4 [0, 65535] { R13970 += 1, R13925 += 1, R13926 += 1 };
  s0 -> s0 [0, 65535] { R13969 += 1, R13970 += 1 };
  s0 -> s5 [70, 70] { R13970 += 1, R13926 += 1, R13525 += 1, R13526 += 1 };
  s0 -> s6 [70, 70] { R13970 += 1, R13926 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s0 -> s7 [70, 70] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s0 -> s8 [70, 70] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s0 -> s9 [70, 70] { R13970 += 1, R13926 += 1, R13525 += 1, R13526 += 1 };
  s0 -> s10 [70, 70] { R13970 += 1, R13926 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s0 -> s1 [71, 74] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s0 -> s2 [71, 65535] { R13970 += 1, R13926 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s0 -> s3 [71, 65535] { R13970 += 1, R13926 += 1, R13525 += 1, R13526 += 1 };
  s0 -> s11 [75, 75] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s0 -> s1 [76, 65535] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s1 -> s1 [0, 69] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s1 -> s7 [70, 70] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s1 -> s8 [70, 70] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s1 -> s1 [71, 74] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s1 -> s11 [75, 75] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s1 -> s1 [76, 65535] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s2 -> s1 [0, 69] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s2 -> s2 [0, 69] { R13970 += 1, R13926 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s2 -> s6 [70, 70] { R13970 += 1, R13926 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s2 -> s7 [70, 70] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s2 -> s8 [70, 70] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s2 -> s10 [70, 70] { R13970 += 1, R13926 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s2 -> s1 [71, 74] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s2 -> s2 [71, 65535] { R13970 += 1, R13926 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s2 -> s11 [75, 75] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s2 -> s1 [76, 65535] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s3 -> s1 [0, 69] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s3 -> s2 [0, 69] { R13970 += 1, R13926 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s3 -> s3 [0, 69] { R13970 += 1, R13926 += 1, R13525 += 1, R13526 += 1 };
  s3 -> s5 [70, 70] { R13970 += 1, R13926 += 1, R13525 += 1, R13526 += 1 };
  s3 -> s6 [70, 70] { R13970 += 1, R13926 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s3 -> s7 [70, 70] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s3 -> s8 [70, 70] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s3 -> s9 [70, 70] { R13970 += 1, R13926 += 1, R13525 += 1, R13526 += 1 };
  s3 -> s10 [70, 70] { R13970 += 1, R13926 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s3 -> s1 [71, 74] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s3 -> s2 [71, 65535] { R13970 += 1, R13926 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s3 -> s3 [71, 65535] { R13970 += 1, R13926 += 1, R13525 += 1, R13526 += 1 };
  s3 -> s11 [75, 75] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s3 -> s1 [76, 65535] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s4 -> s1 [0, 69] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s4 -> s2 [0, 69] { R13970 += 1, R13926 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s4 -> s3 [0, 69] { R13970 += 1, R13926 += 1, R13525 += 1, R13526 += 1 };
  s4 -> s4 [0, 65535] { R13970 += 1, R13925 += 1, R13926 += 1 };
  s4 -> s5 [70, 70] { R13970 += 1, R13926 += 1, R13525 += 1, R13526 += 1 };
  s4 -> s6 [70, 70] { R13970 += 1, R13926 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s4 -> s7 [70, 70] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s4 -> s8 [70, 70] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s4 -> s9 [70, 70] { R13970 += 1, R13926 += 1, R13525 += 1, R13526 += 1 };
  s4 -> s10 [70, 70] { R13970 += 1, R13926 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s4 -> s1 [71, 74] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s4 -> s2 [71, 65535] { R13970 += 1, R13926 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s4 -> s3 [71, 65535] { R13970 += 1, R13926 += 1, R13525 += 1, R13526 += 1 };
  s4 -> s11 [75, 75] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s4 -> s1 [76, 65535] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s5 -> s7 [0, 74] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s5 -> s5 [0, 65535] { R13970 += 1, R13926 += 1, R13525 += 1, R13526 += 1 };
  s5 -> s10 [0, 65535] { R13970 += 1, R13926 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s5 -> s14 [75, 75] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s5 -> s7 [76, 65535] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s7 -> s7 [0, 74] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s7 -> s14 [75, 75] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s7 -> s7 [76, 65535] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s10 -> s7 [0, 74] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s10 -> s10 [0, 65535] { R13970 += 1, R13926 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s10 -> s14 [75, 75] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s10 -> s7 [76, 65535] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s11 -> s11 [0, 69] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s11 -> s11 [0, 65535] { R13970 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [70, 70] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s11 -> s14 [70, 70] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s11 -> s11 [71, 65535] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R13970 += 1 };
  s13 -> s12 [0, 65535];
  s14 -> s15 [0, 65535] { R13970 += 1 };
  s14 -> s14 [0, 65535] { R13970 += 1, R13926 += 1, R13526 += 1, R13528 += 1 };
  s14 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R13970 += 1 };
  s15 -> s12 [0, 65535];
  accepting s12, s13, s14, s15, s11;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R13972 += 1, R13928 += 1, R13864 += 1, R13865 += 1, R13866 += 1 };
  s0 -> s2 [0, 69] { R13972 += 1, R13928 += 1, R13864 += 1, R13866 += 1, R13867 += 1 };
  s0 -> s3 [0, 69] { R13972 += 1, R13928 += 1, R13863 += 1, R13864 += 1 };
  s0 -> s4 [0, 65535] { R13972 += 1, R13927 += 1, R13928 += 1 };
  s0 -> s0 [0, 65535] { R13971 += 1, R13972 += 1 };
  s0 -> s5 [70, 70] { R13972 += 1, R13928 += 1, R13864 += 1, R13865 += 1, R13866 += 1 };
  s0 -> s6 [70, 70] { R13972 += 1, R13928 += 1, R13863 += 1, R13864 += 1 };
  s0 -> s7 [70, 70] { R13972 += 1, R13928 += 1, R13864 += 1, R13866 += 1, R13867 += 1 };
  s0 -> s8 [70, 70] { R13972 += 1, R13928 += 1, R13863 += 1, R13864 += 1 };
  s0 -> s9 [70, 70] { R13972 += 1, R13928 += 1, R13864 += 1, R13866 += 1, R13867 += 1 };
  s0 -> s10 [70, 70] { R13972 += 1, R13928 += 1, R13864 += 1, R13865 += 1, R13866 += 1 };
  s0 -> s1 [71, 65535] { R13972 += 1, R13928 += 1, R13864 += 1, R13865 += 1, R13866 += 1 };
  s0 -> s2 [71, 65535] { R13972 += 1, R13928 += 1, R13864 += 1, R13866 += 1, R13867 += 1 };
  s0 -> s3 [71, 65535] { R13972 += 1, R13928 += 1, R13863 += 1, R13864 += 1 };
  s1 -> s1 [0, 69] { R13972 += 1, R13928 += 1, R13864 += 1, R13865 += 1, R13866 += 1 };
  s1 -> s2 [0, 69] { R13972 += 1, R13928 += 1, R13864 += 1, R13866 += 1, R13867 += 1 };
  s1 -> s5 [70, 70] { R13972 += 1, R13928 += 1, R13864 += 1, R13865 += 1, R13866 += 1 };
  s1 -> s7 [70, 70] { R13972 += 1, R13928 += 1, R13864 += 1, R13866 += 1, R13867 += 1 };
  s1 -> s9 [70, 70] { R13972 += 1, R13928 += 1, R13864 += 1, R13866 += 1, R13867 += 1 };
  s1 -> s10 [70, 70] { R13972 += 1, R13928 += 1, R13864 += 1, R13865 += 1, R13866 += 1 };
  s1 -> s1 [71, 65535] { R13972 += 1, R13928 += 1, R13864 += 1, R13865 += 1, R13866 += 1 };
  s1 -> s2 [71, 65535] { R13972 += 1, R13928 += 1, R13864 += 1, R13866 += 1, R13867 += 1 };
  s2 -> s2 [0, 69] { R13972 += 1, R13928 += 1, R13864 += 1, R13866 += 1, R13867 += 1 };
  s2 -> s11 [0, 65535];
  s2 -> s2 [0, 65535] { R13972 += 1 };
  s2 -> s7 [70, 70] { R13972 += 1, R13928 += 1, R13864 += 1, R13866 += 1, R13867 += 1 };
  s2 -> s9 [70, 70] { R13972 += 1, R13928 += 1, R13864 += 1, R13866 += 1, R13867 += 1 };
  s2 -> s2 [71, 65535] { R13972 += 1, R13928 += 1, R13864 += 1, R13866 += 1, R13867 += 1 };
  s3 -> s1 [0, 69] { R13972 += 1, R13928 += 1, R13864 += 1, R13865 += 1, R13866 += 1 };
  s3 -> s2 [0, 69] { R13972 += 1, R13928 += 1, R13864 += 1, R13866 += 1, R13867 += 1 };
  s3 -> s3 [0, 69] { R13972 += 1, R13928 += 1, R13863 += 1, R13864 += 1 };
  s3 -> s5 [70, 70] { R13972 += 1, R13928 += 1, R13864 += 1, R13865 += 1, R13866 += 1 };
  s3 -> s6 [70, 70] { R13972 += 1, R13928 += 1, R13863 += 1, R13864 += 1 };
  s3 -> s7 [70, 70] { R13972 += 1, R13928 += 1, R13864 += 1, R13866 += 1, R13867 += 1 };
  s3 -> s8 [70, 70] { R13972 += 1, R13928 += 1, R13863 += 1, R13864 += 1 };
  s3 -> s9 [70, 70] { R13972 += 1, R13928 += 1, R13864 += 1, R13866 += 1, R13867 += 1 };
  s3 -> s10 [70, 70] { R13972 += 1, R13928 += 1, R13864 += 1, R13865 += 1, R13866 += 1 };
  s3 -> s1 [71, 65535] { R13972 += 1, R13928 += 1, R13864 += 1, R13865 += 1, R13866 += 1 };
  s3 -> s2 [71, 65535] { R13972 += 1, R13928 += 1, R13864 += 1, R13866 += 1, R13867 += 1 };
  s3 -> s3 [71, 65535] { R13972 += 1, R13928 += 1, R13863 += 1, R13864 += 1 };
  s4 -> s1 [0, 69] { R13972 += 1, R13928 += 1, R13864 += 1, R13865 += 1, R13866 += 1 };
  s4 -> s2 [0, 69] { R13972 += 1, R13928 += 1, R13864 += 1, R13866 += 1, R13867 += 1 };
  s4 -> s3 [0, 69] { R13972 += 1, R13928 += 1, R13863 += 1, R13864 += 1 };
  s4 -> s4 [0, 65535] { R13972 += 1, R13927 += 1, R13928 += 1 };
  s4 -> s5 [70, 70] { R13972 += 1, R13928 += 1, R13864 += 1, R13865 += 1, R13866 += 1 };
  s4 -> s6 [70, 70] { R13972 += 1, R13928 += 1, R13863 += 1, R13864 += 1 };
  s4 -> s7 [70, 70] { R13972 += 1, R13928 += 1, R13864 += 1, R13866 += 1, R13867 += 1 };
  s4 -> s8 [70, 70] { R13972 += 1, R13928 += 1, R13863 += 1, R13864 += 1 };
  s4 -> s9 [70, 70] { R13972 += 1, R13928 += 1, R13864 += 1, R13866 += 1, R13867 += 1 };
  s4 -> s10 [70, 70] { R13972 += 1, R13928 += 1, R13864 += 1, R13865 += 1, R13866 += 1 };
  s4 -> s1 [71, 65535] { R13972 += 1, R13928 += 1, R13864 += 1, R13865 += 1, R13866 += 1 };
  s4 -> s2 [71, 65535] { R13972 += 1, R13928 += 1, R13864 += 1, R13866 += 1, R13867 += 1 };
  s4 -> s3 [71, 65535] { R13972 += 1, R13928 += 1, R13863 += 1, R13864 += 1 };
  s7 -> s7 [0, 65535] { R13972 += 1 };
  s7 -> s11 [0, 65535];
  s8 -> s8 [0, 65535] { R13972 += 1, R13928 += 1, R13863 += 1, R13864 += 1 };
  s8 -> s9 [0, 65535] { R13972 += 1, R13928 += 1, R13864 += 1, R13866 += 1, R13867 += 1 };
  s8 -> s10 [0, 65535] { R13972 += 1, R13928 += 1, R13864 += 1, R13865 += 1, R13866 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s12 [0, 65535] { R13972 += 1 };
  s9 -> s9 [0, 65535] { R13972 += 1, R13928 += 1, R13864 += 1, R13866 += 1, R13867 += 1 };
  s10 -> s9 [0, 65535] { R13972 += 1, R13928 += 1, R13864 += 1, R13866 += 1, R13867 += 1 };
  s10 -> s10 [0, 65535] { R13972 += 1, R13928 += 1, R13864 += 1, R13865 += 1, R13866 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R13972 += 1 };
  accepting s12, s2, s9, s7, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R13972 && R23 - R13972 = -1 && R24 = R13972 && R25 - R13972 = -1 && R26 = R13972 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R13530 + -1*R13526 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R13530 + -1*R13526 - R66 = 0 && R55 + R13518 + R13515 + -1*R13532 + -1*R13528 - R68 = 0 && R65 + R13529 + R13525 = 0 && R67 + R13531 + R13527 = 0 && R13913 = 0 && R13914 = 0 && R13919 = 0 && R13920 = 0 && R13921 = 0 && R13922 = 0 && R13925 = 0 && R13926 = 0 && R13927 = 0 && R13928 = 0 && R13929 = 0 && R13930 = R13972 && R13931 = 0 && R13932 = R13972 && R13933 = 0 && R13934 = R13972 && R13935 = 0 && R13936 = R13972 && R13937 = 0 && R13938 = R13972 && R13939 = 0 && R13940 = R13972 && R13941 = 0 && R13942 = R13972 && R13943 = 0 && R13944 = R13972 && R13945 = 0 && R13946 = R13972 && R13947 = 0 && R13948 = R13972 && R13949 = 0 && R13950 = R13972 && R13951 = 0 && R13952 = R13972 && R13953 = 0 && R13954 = R13972 && R13955 = 0 && R13956 = R13972 && R13957 = 0 && R13958 = R13972 && R13959 = 0 && R13960 = R13972 && R13961 = 0 && R13962 = R13972 && R13963 = 0 && R13964 = R13972 && R13965 = 0 && R13966 = R13972 && R13967 = 0 && R13968 = R13972 && R13969 = 0 && R13970 = R13972 && R13971 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R13524 + R13521 < 1 && -1*R13530 + -1*R13526 - R66 < 1 && -1*R13532 + -1*R13528 - R68 < 1 && 0 < R13972 && (R2 != 0 || R20 = 0 || (R13873 = 0 && R13874 = 0)) && (R2 != 0 || R20 = 0 || (R13875 = 0 && R13876 = 0)) && (R2 != 0 || R20 = 0 || (R13877 = 0 && R13878 = 0)) && (R2 != 0 || R20 = 0 || (R13879 = 0 && R13880 = 0)) && (R2 != 0 || R20 = 0 || (R13881 = 0 && R13882 = 0)) && (R2 != 0 || R20 = 0 || (R13883 = 0 && R13884 = 0)) && (R2 != 0 || R20 = 0 || (R13885 = 0 && R13886 = 0)) && (R2 != 0 || R20 = 0 || (R13887 = 0 && R13888 = 0)) && (R2 != 0 || R20 = 0 || (R13889 = 0 && R13890 = 0)) && (R2 != 0 || R20 = 0 || (R13891 = 0 && R13892 = 0)) && (R53 + R13516 + R13513 != 0 || R54 + R13517 + R13514 + -1*R13530 + -1*R13526 - R66 = 0 || R66 + R13530 + R13526 < 1) && (R59 + R13522 + R13519 != 0 || R60 + R13523 + R13520 + -1*R13530 + -1*R13526 - R66 = 0 || R66 + R13530 + R13526 < 1) && (R66 + R13530 + R13526 != 0 || ((R53 + R13516 + R13513 != 0 || R54 + R13517 + R13514 = 0 || R68 + R13532 + R13528 < 1) && (R53 + R13516 + R13513 = 0 || R68 + R13532 + R13528 < 1))) && (R66 + R13530 + R13526 != 0 || ((R59 + R13522 + R13519 != 0 || R60 + R13523 + R13520 = 0 || R68 + R13532 + R13528 < 1) && (R59 + R13522 + R13519 = 0 || R68 + R13532 + R13528 < 1))) && (R66 + R13530 + R13526 != 0 || ((R73 + R13868 + R13863 != 0 || R74 + R13869 + R13864 = 0 || R68 + R13532 + R13528 < 1) && (R73 + R13868 + R13863 = 0 || R68 + R13532 + R13528 < 1))) && (R68 + R13532 + R13528 != 0 || R77 + R13872 + R13867 = 0 || (R75 + R13870 + R13865 = 0 && R76 + R13871 + R13866 = 0)) && (R73 + R13868 + R13863 != 0 || R66 + R13530 + R13526 + -1*R13869 + -1*R13864 - R74 = 0 || R66 + R13530 + R13526 < 1) && (R75 + R13870 + R13865 != 0 || R68 + R13532 + R13528 + -1*R13871 + -1*R13866 - R76 = 0 || R68 + R13532 + R13528 < 1) && (R13873 != 0 || R2 = R13874 || R2 < 1) && (R13875 != 0 || R2 = R13876 || R2 < 1) && (R13877 != 0 || R2 = R13878 || R2 < 1) && (R13879 != 0 || R2 = R13880 || R2 < 1) && (R13881 != 0 || R2 = R13882 || R2 < 1) && (R13883 != 0 || R2 = R13884 || R2 < 1) && (R13885 != 0 || R2 = R13886 || R2 < 1) && (R13887 != 0 || R2 = R13888 || R2 < 1) && (R13889 != 0 || R2 = R13890 || R2 < 1) && (R13891 != 0 || R2 = R13892 || R2 < 1) && (R21 = 0 || (R13911 = 0 && R13912 = 0)) && (R21 = 0 || (R13915 = 0 && R13916 = 0)) && (R21 = 0 || (R13917 = 0 && R13918 = 0)) && (R21 = 0 || (R13923 = 0 && R13924 = 0)) && (R22 = 0 || (R13893 = 0 && R13894 = 0)) && (R22 = 0 || (R13895 = 0 && R13896 = 0)) && (R22 = 0 || (R13897 = 0 && R13898 = 0)) && (R22 = 0 || (R13899 = 0 && R13900 = 0)) && (R22 = 0 || (R13901 = 0 && R13902 = 0)) && (R22 = 0 || (R13903 = 0 && R13904 = 0)) && (R22 = 0 || (R13905 = 0 && R13906 = 0)) && (R22 = 0 || (R13907 = 0 && R13908 = 0)) && (R22 = 0 || (R13909 = 0 && R13910 = 0)) && (R53 + R13516 + R13513 = 0 || R66 + R13530 + R13526 < 1) && (R59 + R13522 + R13519 = 0 || R66 + R13530 + R13526 < 1) && (R73 + R13868 + R13863 = 0 || R66 + R13530 + R13526 < 1) && (R75 + R13870 + R13865 = 0 || R68 + R13532 + R13528 < 1) && (R13873 = 0 || R2 < 1) && (R13875 = 0 || R2 < 1) && (R13877 = 0 || R2 < 1) && (R13879 = 0 || R2 < 1) && (R13881 = 0 || R2 < 1) && (R13883 = 0 || R2 < 1) && (R13885 = 0 || R2 < 1) && (R13887 = 0 || R2 < 1) && (R13889 = 0 || R2 < 1) && (R13891 = 0 || R2 < 1);
// End of Parikh automata intersection problem
