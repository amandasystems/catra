// Parikh automata intersection problem, generated by OSTRICH+
counter int
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R15457 += 1, R15458 += 1 };
  s0 -> s1 [0, 65535] { R15458 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R15458 += 1, R22 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R15460 += 1 };
  s0 -> s0 [0, 65535] { R15459 += 1, R15460 += 1 };
  s0 -> s2 [70, 70] { R15460 += 1 };
  s0 -> s3 [70, 70] { R15460 += 1 };
  s0 -> s1 [76, 65535] { R15460 += 1 };
  s1 -> s1 [0, 69] { R15460 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15460 += 1 };
  s1 -> s3 [70, 70] { R15460 += 1 };
  s1 -> s1 [76, 65535] { R15460 += 1 };
  s2 -> s2 [0, 70] { R15460 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R15460 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R15462 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R15461 += 1, R15462 += 1 };
  s0 -> s2 [70, 70] { R15462 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R15462 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R15462 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R15462 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15462 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R15462 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R15462 += 1, R45 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R15462 += 1, R45 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R15464 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R15463 += 1, R15464 += 1 };
  s0 -> s2 [70, 70] { R15464 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R15464 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R15464 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R15464 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15464 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R15464 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R15464 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R15464 += 1, R47 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R15466 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R15465 += 1, R15466 += 1 };
  s0 -> s2 [70, 70] { R15466 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R15466 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R15466 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R15466 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15466 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R15466 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R15466 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R15466 += 1, R49 += 1, R50 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R15468 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R15467 += 1, R15468 += 1 };
  s0 -> s2 [70, 70] { R15468 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R15468 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R15468 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R15468 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15468 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R15468 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R15468 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R15468 += 1, R53 += 1, R54 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R15470 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R15469 += 1, R15470 += 1 };
  s0 -> s2 [70, 70] { R15470 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R15470 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R15470 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R15470 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15470 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R15470 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R15470 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R15470 += 1, R59 += 1, R60 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R15472 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R15471 += 1, R15472 += 1 };
  s0 -> s2 [70, 70] { R15472 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R15472 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R15472 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R15472 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15472 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R15472 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R15472 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535] { R15472 += 1, R65 += 1, R66 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R15474 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R15473 += 1, R15474 += 1 };
  s0 -> s2 [70, 70] { R15474 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R15474 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R15474 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R15474 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15474 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R15474 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R15474 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R15474 += 1, R73 += 1, R74 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R15494 += 1 };
  s0 -> s0 [0, 65535] { R15493 += 1, R15494 += 1 };
  s0 -> s2 [70, 70] { R15494 += 1 };
  s0 -> s1 [71, 65535] { R15494 += 1 };
  s1 -> s1 [0, 69] { R15494 += 1 };
  s1 -> s2 [70, 70] { R15494 += 1 };
  s1 -> s1 [71, 65535] { R15494 += 1 };
  s2 -> s2 [0, 65535] { R15494 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R15495 += 1, R15496 += 1 };
  s0 -> s1 [0, 65535] { R15496 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R15496 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R15498 += 1 };
  s0 -> s2 [0, 65535] { R15498 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R15497 += 1, R15498 += 1 };
  s0 -> s3 [70, 70] { R15498 += 1 };
  s0 -> s1 [71, 65535] { R15498 += 1 };
  s1 -> s1 [0, 69] { R15498 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R15498 += 1 };
  s1 -> s1 [71, 65535] { R15498 += 1 };
  s2 -> s1 [0, 69] { R15498 += 1 };
  s2 -> s2 [0, 65535] { R15498 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R15498 += 1 };
  s2 -> s1 [71, 65535] { R15498 += 1 };
  s3 -> s3 [0, 65535] { R15498 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R15500 += 1, R15438 += 1 };
  s0 -> s2 [0, 65535] { R15500 += 1, R15437 += 1, R15438 += 1 };
  s0 -> s0 [0, 65535] { R15499 += 1, R15500 += 1 };
  s0 -> s1 [71, 65535] { R15500 += 1, R15438 += 1 };
  s1 -> s1 [0, 69] { R15500 += 1, R15438 += 1 };
  s1 -> s1 [0, 65535] { R15500 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R15500 += 1, R15438 += 1 };
  s2 -> s1 [0, 69] { R15500 += 1, R15438 += 1 };
  s2 -> s2 [0, 65535] { R15500 += 1, R15437 += 1, R15438 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R15500 += 1, R15438 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s0 [0, 65535] { R15501 += 1, R15502 += 1 };
  s0 -> s1 [0, 65535] { R15502 += 1, R15439 += 1, R15440 += 1 };
  s0 -> s2 [0, 65535] { R15502 += 1, R15440 += 1, R20 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R15502 += 1, R15439 += 1, R15440 += 1 };
  s1 -> s2 [0, 65535] { R15502 += 1, R15440 += 1, R20 += 1 };
  s2 -> s3 [0, 65535] { R15502 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R15502 += 1, R15440 += 1, R20 += 1 };
  s3 -> s3 [0, 65535] { R15502 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R15504 += 1, R15442 += 1 };
  s0 -> s0 [0, 65535] { R15503 += 1, R15504 += 1 };
  s0 -> s2 [0, 65535] { R15504 += 1, R15441 += 1, R15442 += 1 };
  s0 -> s1 [75, 65535] { R15504 += 1, R15442 += 1 };
  s1 -> s1 [0, 70] { R15504 += 1, R15442 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R15504 += 1 };
  s1 -> s1 [75, 65535] { R15504 += 1, R15442 += 1 };
  s2 -> s1 [0, 70] { R15504 += 1, R15442 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R15504 += 1, R15441 += 1, R15442 += 1 };
  s2 -> s1 [75, 65535] { R15504 += 1, R15442 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R15506 += 1, R15444 += 1, R84 += 1 };
  s0 -> s2 [0, 65535] { R15506 += 1, R15443 += 1, R15444 += 1 };
  s0 -> s0 [0, 65535] { R15505 += 1, R15506 += 1 };
  s1 -> s1 [0, 65535] { R15506 += 1, R15444 += 1, R84 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R15506 += 1 };
  s2 -> s1 [0, 65535] { R15506 += 1, R15444 += 1, R84 += 1 };
  s2 -> s2 [0, 65535] { R15506 += 1, R15443 += 1, R15444 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R15506 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R15508 += 1, R15446 += 1 };
  s0 -> s2 [0, 65535] { R15508 += 1, R15446 += 1, R86 += 1 };
  s0 -> s0 [0, 65535] { R15507 += 1, R15508 += 1 };
  s0 -> s3 [0, 65535] { R15508 += 1, R15445 += 1, R15446 += 1 };
  s0 -> s1 [76, 65535] { R15508 += 1, R15446 += 1 };
  s1 -> s1 [0, 74] { R15508 += 1, R15446 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R15508 += 1 };
  s1 -> s1 [76, 65535] { R15508 += 1, R15446 += 1 };
  s2 -> s1 [0, 74] { R15508 += 1, R15446 += 1 };
  s2 -> s2 [0, 65535] { R15508 += 1, R15446 += 1, R86 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R15508 += 1 };
  s2 -> s1 [76, 65535] { R15508 += 1, R15446 += 1 };
  s3 -> s1 [0, 74] { R15508 += 1, R15446 += 1 };
  s3 -> s2 [0, 65535] { R15508 += 1, R15446 += 1, R86 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R15508 += 1, R15445 += 1, R15446 += 1 };
  s3 -> s1 [76, 65535] { R15508 += 1, R15446 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R15508 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R15510 += 1, R15448 += 1 };
  s0 -> s0 [0, 65535] { R15509 += 1, R15510 += 1 };
  s0 -> s2 [0, 65535] { R15510 += 1, R15447 += 1, R15448 += 1 };
  s0 -> s3 [0, 65535] { R15510 += 1, R15448 += 1, R90 += 1 };
  s1 -> s1 [0, 65535] { R15510 += 1, R15448 += 1 };
  s1 -> s4 [0, 65535] { R15510 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R15510 += 1, R15448 += 1 };
  s2 -> s2 [0, 65535] { R15510 += 1, R15447 += 1, R15448 += 1 };
  s2 -> s3 [0, 65535] { R15510 += 1, R15448 += 1, R90 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R15510 += 1, R15448 += 1 };
  s3 -> s4 [0, 65535] { R15510 += 1 };
  s3 -> s3 [0, 65535] { R15510 += 1, R15448 += 1, R90 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R15510 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R15512 += 1, R15450 += 1, R13517 += 1, R13518 += 1 };
  s0 -> s0 [0, 65535] { R15511 += 1, R15512 += 1 };
  s0 -> s2 [0, 65535] { R15512 += 1, R15450 += 1 };
  s0 -> s3 [0, 65535] { R15512 += 1, R15449 += 1, R15450 += 1 };
  s1 -> s1 [0, 65535] { R15512 += 1, R15450 += 1, R13517 += 1, R13518 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R15512 += 1, R15450 += 1 };
  s1 -> s5 [0, 65535] { R15512 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R15512 += 1, R15450 += 1 };
  s2 -> s5 [0, 65535] { R15512 += 1 };
  s3 -> s1 [0, 65535] { R15512 += 1, R15450 += 1, R13517 += 1, R13518 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R15512 += 1, R15450 += 1 };
  s3 -> s3 [0, 65535] { R15512 += 1, R15449 += 1, R15450 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R15512 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R15514 += 1, R15452 += 1, R13523 += 1 };
  s0 -> s2 [0, 65535] { R15514 += 1, R15452 += 1, R13523 += 1, R13524 += 1 };
  s0 -> s3 [0, 65535] { R15514 += 1, R15451 += 1, R15452 += 1 };
  s0 -> s4 [0, 65535] { R15514 += 1, R15452 += 1, R13522 += 1, R13523 += 1 };
  s0 -> s0 [0, 65535] { R15513 += 1, R15514 += 1 };
  s0 -> s1 [76, 65535] { R15514 += 1, R15452 += 1, R13523 += 1 };
  s1 -> s1 [0, 74] { R15514 += 1, R15452 += 1, R13523 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R15514 += 1, R15452 += 1 };
  s1 -> s6 [0, 65535] { R15514 += 1 };
  s1 -> s1 [76, 65535] { R15514 += 1, R15452 += 1, R13523 += 1 };
  s2 -> s1 [0, 74] { R15514 += 1, R15452 += 1, R13523 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R15514 += 1, R15452 += 1, R13523 += 1, R13524 += 1 };
  s2 -> s7 [0, 65535] { R15514 += 1, R15452 += 1 };
  s2 -> s6 [0, 65535] { R15514 += 1 };
  s2 -> s1 [76, 65535] { R15514 += 1, R15452 += 1, R13523 += 1 };
  s3 -> s1 [0, 74] { R15514 += 1, R15452 += 1, R13523 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R15514 += 1, R15452 += 1, R13523 += 1, R13524 += 1 };
  s3 -> s3 [0, 65535] { R15514 += 1, R15451 += 1, R15452 += 1 };
  s3 -> s4 [0, 65535] { R15514 += 1, R15452 += 1, R13522 += 1, R13523 += 1 };
  s3 -> s1 [76, 65535] { R15514 += 1, R15452 += 1, R13523 += 1 };
  s4 -> s1 [0, 74] { R15514 += 1, R15452 += 1, R13523 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R15514 += 1, R15452 += 1, R13523 += 1, R13524 += 1 };
  s4 -> s4 [0, 65535] { R15514 += 1, R15452 += 1, R13522 += 1, R13523 += 1 };
  s4 -> s6 [0, 65535] { R15514 += 1 };
  s4 -> s1 [76, 65535] { R15514 += 1, R15452 += 1, R13523 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15514 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R15514 += 1, R15452 += 1 };
  s7 -> s6 [0, 65535] { R15514 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 74] { R15516 += 1, R15454 += 1, R15204 += 1, R15206 += 1 };
  s0 -> s0 [0, 65535] { R15515 += 1, R15516 += 1 };
  s0 -> s2 [0, 65535] { R15516 += 1, R15454 += 1, R15204 += 1, R15205 += 1, R15206 += 1 };
  s0 -> s3 [0, 65535] { R15516 += 1, R15454 += 1, R15203 += 1, R15204 += 1 };
  s0 -> s4 [0, 65535] { R15516 += 1, R15453 += 1, R15454 += 1 };
  s0 -> s5 [75, 75] { R15516 += 1, R15454 += 1, R15204 += 1, R15206 += 1 };
  s0 -> s1 [76, 65535] { R15516 += 1, R15454 += 1, R15204 += 1, R15206 += 1 };
  s1 -> s1 [0, 74] { R15516 += 1, R15454 += 1, R15204 += 1, R15206 += 1 };
  s1 -> s5 [75, 75] { R15516 += 1, R15454 += 1, R15204 += 1, R15206 += 1 };
  s1 -> s1 [76, 65535] { R15516 += 1, R15454 += 1, R15204 += 1, R15206 += 1 };
  s2 -> s1 [0, 74] { R15516 += 1, R15454 += 1, R15204 += 1, R15206 += 1 };
  s2 -> s2 [0, 65535] { R15516 += 1, R15454 += 1, R15204 += 1, R15205 += 1, R15206 += 1 };
  s2 -> s5 [75, 75] { R15516 += 1, R15454 += 1, R15204 += 1, R15206 += 1 };
  s2 -> s1 [76, 65535] { R15516 += 1, R15454 += 1, R15204 += 1, R15206 += 1 };
  s3 -> s1 [0, 74] { R15516 += 1, R15454 += 1, R15204 += 1, R15206 += 1 };
  s3 -> s2 [0, 65535] { R15516 += 1, R15454 += 1, R15204 += 1, R15205 += 1, R15206 += 1 };
  s3 -> s3 [0, 65535] { R15516 += 1, R15454 += 1, R15203 += 1, R15204 += 1 };
  s3 -> s5 [75, 75] { R15516 += 1, R15454 += 1, R15204 += 1, R15206 += 1 };
  s3 -> s1 [76, 65535] { R15516 += 1, R15454 += 1, R15204 += 1, R15206 += 1 };
  s4 -> s1 [0, 74] { R15516 += 1, R15454 += 1, R15204 += 1, R15206 += 1 };
  s4 -> s2 [0, 65535] { R15516 += 1, R15454 += 1, R15204 += 1, R15205 += 1, R15206 += 1 };
  s4 -> s3 [0, 65535] { R15516 += 1, R15454 += 1, R15203 += 1, R15204 += 1 };
  s4 -> s4 [0, 65535] { R15516 += 1, R15453 += 1, R15454 += 1 };
  s4 -> s5 [75, 75] { R15516 += 1, R15454 += 1, R15204 += 1, R15206 += 1 };
  s4 -> s1 [76, 65535] { R15516 += 1, R15454 += 1, R15204 += 1, R15206 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R15516 += 1 };
  s5 -> s8 [0, 65535] { R15516 += 1, R15454 += 1, R15204 += 1 };
  s5 -> s9 [0, 65535] { R15516 += 1, R15454 += 1 };
  s5 -> s5 [0, 65535] { R15516 += 1, R15454 += 1, R15204 += 1, R15206 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R15516 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R15516 += 1 };
  s8 -> s8 [0, 65535] { R15516 += 1, R15454 += 1, R15204 += 1 };
  s8 -> s9 [0, 65535] { R15516 += 1, R15454 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s7 [0, 65535] { R15516 += 1 };
  s9 -> s9 [0, 65535] { R15516 += 1, R15454 += 1 };
  accepting s8, s5, s9, s6, s7;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R15518 += 1, R15456 += 1, R15433 += 1, R15434 += 1, R15435 += 1 };
  s0 -> s2 [0, 65535] { R15518 += 1, R15455 += 1, R15456 += 1 };
  s0 -> s3 [0, 65535] { R15518 += 1, R15456 += 1, R15432 += 1, R15433 += 1 };
  s0 -> s0 [0, 65535] { R15517 += 1, R15518 += 1 };
  s0 -> s4 [0, 65535] { R15518 += 1, R15456 += 1, R15433 += 1, R15435 += 1, R15436 += 1 };
  s1 -> s1 [0, 65535] { R15518 += 1, R15456 += 1, R15433 += 1, R15434 += 1, R15435 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R15518 += 1 };
  s1 -> s7 [0, 65535] { R15518 += 1, R15456 += 1 };
  s1 -> s4 [0, 65535] { R15518 += 1, R15456 += 1, R15433 += 1, R15435 += 1, R15436 += 1 };
  s2 -> s1 [0, 65535] { R15518 += 1, R15456 += 1, R15433 += 1, R15434 += 1, R15435 += 1 };
  s2 -> s2 [0, 65535] { R15518 += 1, R15455 += 1, R15456 += 1 };
  s2 -> s3 [0, 65535] { R15518 += 1, R15456 += 1, R15432 += 1, R15433 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s4 [0, 65535] { R15518 += 1, R15456 += 1, R15433 += 1, R15435 += 1, R15436 += 1 };
  s3 -> s1 [0, 65535] { R15518 += 1, R15456 += 1, R15433 += 1, R15434 += 1, R15435 += 1 };
  s3 -> s3 [0, 65535] { R15518 += 1, R15456 += 1, R15432 += 1, R15433 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R15518 += 1 };
  s3 -> s4 [0, 65535] { R15518 += 1, R15456 += 1, R15433 += 1, R15435 += 1, R15436 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R15518 += 1 };
  s4 -> s7 [0, 65535] { R15518 += 1, R15456 += 1 };
  s4 -> s8 [0, 65535] { R15518 += 1, R15456 += 1, R15433 += 1 };
  s4 -> s4 [0, 65535] { R15518 += 1, R15456 += 1, R15433 += 1, R15435 += 1, R15436 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15518 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R15518 += 1 };
  s7 -> s7 [0, 65535] { R15518 += 1, R15456 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R15518 += 1 };
  s8 -> s7 [0, 65535] { R15518 += 1, R15456 += 1 };
  s8 -> s8 [0, 65535] { R15518 += 1, R15456 += 1, R15433 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R15519 += 1, R15520 += 1 };
  s0 -> s1 [0, 65535] { R15520 += 1, R15475 += 1, R15476 += 1 };
  s0 -> s2 [0, 65535] { R15520 += 1, R15476 += 1, R21 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R15520 += 1, R15475 += 1, R15476 += 1 };
  s1 -> s2 [0, 65535] { R15520 += 1, R15476 += 1, R21 += 1 };
  s2 -> s3 [0, 65535] { R15520 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R15520 += 1, R15476 += 1, R21 += 1 };
  s3 -> s3 [0, 65535] { R15520 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R15522 += 1, R15478 += 1 };
  s0 -> s2 [0, 65535] { R15522 += 1, R15477 += 1, R15478 += 1 };
  s0 -> s0 [0, 65535] { R15521 += 1, R15522 += 1 };
  s0 -> s3 [70, 70] { R15522 += 1, R15478 += 1 };
  s0 -> s4 [70, 70] { R15522 += 1, R15478 += 1 };
  s0 -> s5 [75, 75] { R15522 += 1, R15478 += 1 };
  s0 -> s1 [76, 65535] { R15522 += 1, R15478 += 1 };
  s1 -> s1 [0, 69] { R15522 += 1, R15478 += 1 };
  s1 -> s3 [70, 70] { R15522 += 1, R15478 += 1 };
  s1 -> s4 [70, 70] { R15522 += 1, R15478 += 1 };
  s1 -> s5 [75, 75] { R15522 += 1, R15478 += 1 };
  s1 -> s1 [76, 65535] { R15522 += 1, R15478 += 1 };
  s2 -> s1 [0, 69] { R15522 += 1, R15478 += 1 };
  s2 -> s2 [0, 65535] { R15522 += 1, R15477 += 1, R15478 += 1 };
  s2 -> s3 [70, 70] { R15522 += 1, R15478 += 1 };
  s2 -> s4 [70, 70] { R15522 += 1, R15478 += 1 };
  s2 -> s5 [75, 75] { R15522 += 1, R15478 += 1 };
  s2 -> s1 [76, 65535] { R15522 += 1, R15478 += 1 };
  s4 -> s4 [0, 70] { R15522 += 1, R15478 += 1 };
  s4 -> s7 [75, 75] { R15522 += 1, R15478 += 1 };
  s4 -> s4 [76, 65535] { R15522 += 1, R15478 += 1 };
  s5 -> s5 [0, 69] { R15522 += 1, R15478 += 1 };
  s5 -> s5 [0, 65535] { R15522 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R15522 += 1, R15478 += 1 };
  s5 -> s8 [70, 70] { R15522 += 1, R15478 += 1 };
  s5 -> s5 [75, 65535] { R15522 += 1, R15478 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R15522 += 1, R15478 += 1 };
  s7 -> s7 [0, 65535] { R15522 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R15522 += 1, R15478 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R15522 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R15524 += 1, R15480 += 1, R83 += 1 };
  s0 -> s2 [0, 65535] { R15524 += 1, R15479 += 1, R15480 += 1 };
  s0 -> s0 [0, 65535] { R15523 += 1, R15524 += 1 };
  s0 -> s3 [70, 70] { R15524 += 1, R15480 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R15524 += 1, R15480 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R15524 += 1, R15480 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R15524 += 1, R15480 += 1, R83 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R15524 += 1 };
  s1 -> s3 [70, 70] { R15524 += 1, R15480 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R15524 += 1, R15480 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R15524 += 1, R15480 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R15524 += 1, R15480 += 1, R83 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R15524 += 1, R15479 += 1, R15480 += 1 };
  s2 -> s3 [70, 70] { R15524 += 1, R15480 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R15524 += 1, R15480 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R15524 += 1, R15480 += 1, R83 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R15524 += 1 };
  s3 -> s3 [0, 65535] { R15524 += 1, R15480 += 1, R83 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R15524 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15524 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R15526 += 1, R15482 += 1, R85 += 1 };
  s0 -> s0 [0, 65535] { R15525 += 1, R15526 += 1 };
  s0 -> s2 [0, 65535] { R15526 += 1, R15481 += 1, R15482 += 1 };
  s0 -> s3 [70, 70] { R15526 += 1, R15482 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R15526 += 1, R15482 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R15526 += 1, R15482 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R15526 += 1, R15482 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R15526 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R15526 += 1, R15482 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R15526 += 1, R15482 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R15526 += 1, R15482 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R15526 += 1, R15482 += 1, R85 += 1 };
  s2 -> s2 [0, 65535] { R15526 += 1, R15481 += 1, R15482 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R15526 += 1, R15482 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R15526 += 1, R15482 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R15526 += 1, R15482 += 1, R85 += 1 };
  s3 -> s3 [0, 65535] { R15526 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R15526 += 1, R15482 += 1, R85 += 1 };
  s4 -> s5 [0, 65535] { R15526 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R15526 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R15528 += 1, R15484 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R15528 += 1, R15484 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R15527 += 1, R15528 += 1 };
  s0 -> s3 [0, 65535] { R15528 += 1, R15483 += 1, R15484 += 1 };
  s0 -> s4 [70, 70] { R15528 += 1, R15484 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R15528 += 1, R15484 += 1, R87 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R15528 += 1, R15484 += 1, R87 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R15528 += 1, R15484 += 1, R88 += 1 };
  s0 -> s2 [71, 74] { R15528 += 1, R15484 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R15528 += 1, R15484 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R15528 += 1, R15484 += 1, R88 += 1 };
  s0 -> s2 [76, 65535] { R15528 += 1, R15484 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R15528 += 1, R15484 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [0, 69] { R15528 += 1, R15484 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R15528 += 1, R15484 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R15528 += 1, R15484 += 1, R87 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R15528 += 1, R15484 += 1, R87 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R15528 += 1, R15484 += 1, R88 += 1 };
  s1 -> s2 [71, 74] { R15528 += 1, R15484 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R15528 += 1, R15484 += 1, R87 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R15528 += 1, R15484 += 1, R88 += 1 };
  s1 -> s2 [76, 65535] { R15528 += 1, R15484 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R15528 += 1, R15484 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R15528 += 1, R15484 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R15528 += 1, R15484 += 1, R88 += 1 };
  s2 -> s2 [71, 74] { R15528 += 1, R15484 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R15528 += 1, R15484 += 1, R88 += 1 };
  s2 -> s2 [76, 65535] { R15528 += 1, R15484 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R15528 += 1, R15484 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R15528 += 1, R15484 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R15528 += 1, R15483 += 1, R15484 += 1 };
  s3 -> s4 [70, 70] { R15528 += 1, R15484 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R15528 += 1, R15484 += 1, R87 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R15528 += 1, R15484 += 1, R87 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R15528 += 1, R15484 += 1, R88 += 1 };
  s3 -> s2 [71, 74] { R15528 += 1, R15484 += 1, R88 += 1 };
  s3 -> s1 [71, 65535] { R15528 += 1, R15484 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R15528 += 1, R15484 += 1, R88 += 1 };
  s3 -> s2 [76, 65535] { R15528 += 1, R15484 += 1, R88 += 1 };
  s5 -> s7 [0, 74] { R15528 += 1, R15484 += 1, R88 += 1 };
  s5 -> s5 [0, 65535] { R15528 += 1, R15484 += 1, R87 += 1, R88 += 1 };
  s5 -> s10 [75, 75] { R15528 += 1, R15484 += 1, R88 += 1 };
  s5 -> s7 [76, 65535] { R15528 += 1, R15484 += 1, R88 += 1 };
  s7 -> s7 [0, 74] { R15528 += 1, R15484 += 1, R88 += 1 };
  s7 -> s10 [75, 75] { R15528 += 1, R15484 += 1, R88 += 1 };
  s7 -> s7 [76, 65535] { R15528 += 1, R15484 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R15528 += 1, R15484 += 1, R88 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R15528 += 1 };
  s8 -> s10 [70, 70] { R15528 += 1, R15484 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R15528 += 1, R15484 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R15528 += 1, R15484 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s12 [0, 65535] { R15528 += 1 };
  s10 -> s10 [0, 65535] { R15528 += 1, R15484 += 1, R88 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R15528 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R15528 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R15530 += 1, R15486 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s2 [0, 69] { R15530 += 1, R15486 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s0 [0, 65535] { R15529 += 1, R15530 += 1 };
  s0 -> s3 [0, 65535] { R15530 += 1, R15485 += 1, R15486 += 1 };
  s0 -> s4 [70, 70] { R15530 += 1, R15486 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s5 [70, 70] { R15530 += 1, R15486 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s6 [70, 70] { R15530 += 1, R15486 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s7 [70, 70] { R15530 += 1, R15486 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s1 [71, 65535] { R15530 += 1, R15486 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s2 [71, 65535] { R15530 += 1, R15486 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s1 [0, 69] { R15530 += 1, R15486 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s1 [0, 65535] { R15530 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s6 [70, 70] { R15530 += 1, R15486 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s7 [70, 70] { R15530 += 1, R15486 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s1 [71, 65535] { R15530 += 1, R15486 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s1 [0, 69] { R15530 += 1, R15486 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [0, 69] { R15530 += 1, R15486 += 1, R13513 += 1, R13514 += 1 };
  s2 -> s4 [70, 70] { R15530 += 1, R15486 += 1, R13513 += 1, R13514 += 1 };
  s2 -> s5 [70, 70] { R15530 += 1, R15486 += 1, R13513 += 1, R13514 += 1 };
  s2 -> s6 [70, 70] { R15530 += 1, R15486 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s7 [70, 70] { R15530 += 1, R15486 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s1 [71, 65535] { R15530 += 1, R15486 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [71, 65535] { R15530 += 1, R15486 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s1 [0, 69] { R15530 += 1, R15486 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s2 [0, 69] { R15530 += 1, R15486 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s3 [0, 65535] { R15530 += 1, R15485 += 1, R15486 += 1 };
  s3 -> s4 [70, 70] { R15530 += 1, R15486 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s5 [70, 70] { R15530 += 1, R15486 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s6 [70, 70] { R15530 += 1, R15486 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s7 [70, 70] { R15530 += 1, R15486 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s1 [71, 65535] { R15530 += 1, R15486 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s2 [71, 65535] { R15530 += 1, R15486 += 1, R13513 += 1, R13514 += 1 };
  s4 -> s4 [0, 65535] { R15530 += 1, R15486 += 1, R13513 += 1, R13514 += 1 };
  s4 -> s6 [0, 65535] { R15530 += 1, R15486 += 1, R13514 += 1, R13515 += 1 };
  s6 -> s9 [0, 65535] { R15530 += 1 };
  s6 -> s6 [0, 65535] { R15530 += 1, R15486 += 1, R13514 += 1, R13515 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R15530 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R15530 += 1 };
  s9 -> s8 [0, 65535];
  accepting s8, s9, s6, s1, s7;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R15532 += 1, R15488 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s2 [0, 65535] { R15532 += 1, R15487 += 1, R15488 += 1 };
  s0 -> s0 [0, 65535] { R15531 += 1, R15532 += 1 };
  s0 -> s3 [70, 70] { R15532 += 1, R15488 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s4 [70, 70] { R15532 += 1, R15488 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s1 [71, 65535] { R15532 += 1, R15488 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [0, 69] { R15532 += 1, R15488 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [0, 65535] { R15532 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R15532 += 1, R15488 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s4 [70, 70] { R15532 += 1, R15488 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [71, 65535] { R15532 += 1, R15488 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s1 [0, 69] { R15532 += 1, R15488 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s2 [0, 65535] { R15532 += 1, R15487 += 1, R15488 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R15532 += 1, R15488 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s4 [70, 70] { R15532 += 1, R15488 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s1 [71, 65535] { R15532 += 1, R15488 += 1, R13519 += 1, R13520 += 1 };
  s3 -> s3 [0, 65535] { R15532 += 1, R15488 += 1, R13519 += 1, R13520 += 1 };
  s3 -> s6 [0, 65535] { R15532 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R15532 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15532 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R15534 += 1, R15490 += 1, R15199 += 1, R15200 += 1 };
  s0 -> s2 [0, 65535] { R15534 += 1, R15489 += 1, R15490 += 1 };
  s0 -> s0 [0, 65535] { R15533 += 1, R15534 += 1 };
  s0 -> s3 [70, 70] { R15534 += 1, R15490 += 1, R15199 += 1, R15200 += 1 };
  s0 -> s4 [70, 70] { R15534 += 1, R15490 += 1, R15199 += 1, R15200 += 1 };
  s0 -> s1 [71, 65535] { R15534 += 1, R15490 += 1, R15199 += 1, R15200 += 1 };
  s1 -> s1 [0, 69] { R15534 += 1, R15490 += 1, R15199 += 1, R15200 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R15534 += 1 };
  s1 -> s3 [70, 70] { R15534 += 1, R15490 += 1, R15199 += 1, R15200 += 1 };
  s1 -> s4 [70, 70] { R15534 += 1, R15490 += 1, R15199 += 1, R15200 += 1 };
  s1 -> s1 [71, 65535] { R15534 += 1, R15490 += 1, R15199 += 1, R15200 += 1 };
  s2 -> s1 [0, 69] { R15534 += 1, R15490 += 1, R15199 += 1, R15200 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R15534 += 1, R15489 += 1, R15490 += 1 };
  s2 -> s3 [70, 70] { R15534 += 1, R15490 += 1, R15199 += 1, R15200 += 1 };
  s2 -> s4 [70, 70] { R15534 += 1, R15490 += 1, R15199 += 1, R15200 += 1 };
  s2 -> s1 [71, 65535] { R15534 += 1, R15490 += 1, R15199 += 1, R15200 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R15534 += 1 };
  s4 -> s5 [0, 65535] { R15534 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R15534 += 1, R15490 += 1, R15199 += 1, R15200 += 1 };
  s5 -> s5 [0, 65535] { R15534 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R15536 += 1, R15492 += 1, R15427 += 1, R15428 += 1 };
  s0 -> s0 [0, 65535] { R15535 += 1, R15536 += 1 };
  s0 -> s2 [0, 65535] { R15536 += 1, R15491 += 1, R15492 += 1 };
  s0 -> s3 [70, 70] { R15536 += 1, R15492 += 1, R15427 += 1, R15428 += 1 };
  s0 -> s4 [70, 70] { R15536 += 1, R15492 += 1, R15427 += 1, R15428 += 1 };
  s0 -> s1 [71, 65535] { R15536 += 1, R15492 += 1, R15427 += 1, R15428 += 1 };
  s1 -> s1 [0, 69] { R15536 += 1, R15492 += 1, R15427 += 1, R15428 += 1 };
  s1 -> s1 [0, 65535] { R15536 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R15536 += 1, R15492 += 1, R15427 += 1, R15428 += 1 };
  s1 -> s4 [70, 70] { R15536 += 1, R15492 += 1, R15427 += 1, R15428 += 1 };
  s1 -> s1 [71, 65535] { R15536 += 1, R15492 += 1, R15427 += 1, R15428 += 1 };
  s2 -> s1 [0, 69] { R15536 += 1, R15492 += 1, R15427 += 1, R15428 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R15536 += 1, R15491 += 1, R15492 += 1 };
  s2 -> s3 [70, 70] { R15536 += 1, R15492 += 1, R15427 += 1, R15428 += 1 };
  s2 -> s4 [70, 70] { R15536 += 1, R15492 += 1, R15427 += 1, R15428 += 1 };
  s2 -> s1 [71, 65535] { R15536 += 1, R15492 += 1, R15427 += 1, R15428 += 1 };
  s3 -> s3 [0, 65535] { R15536 += 1, R15492 += 1, R15427 += 1, R15428 += 1 };
  s3 -> s6 [0, 65535] { R15536 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R15536 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15536 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R15454 && R3 = R15536 && R23 - R15536 = -1 && R24 = R15536 && R25 - R15536 = -1 && R26 = R15536 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R15204 + -1*R15200 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R15204 + -1*R15200 - R66 = 0 && R55 + R13518 + R13515 + -1*R15206 + -1*R15202 - R68 = 0 && R65 + R15203 + R15199 = 0 && R67 + R15205 + R15201 = 0 && R15453 = 0 && R15477 = 0 && R15478 = 0 && R15483 = 0 && R15484 = 0 && R15485 = 0 && R15486 = 0 && R15493 = 0 && R15494 = R15536 && R15495 = 0 && R15496 = R15536 && R15497 = 0 && R15498 = R15536 && R15499 = 0 && R15500 = R15536 && R15501 = 0 && R15502 = R15536 && R15503 = 0 && R15504 = R15536 && R15505 = 0 && R15506 = R15536 && R15507 = 0 && R15508 = R15536 && R15509 = 0 && R15510 = R15536 && R15511 = 0 && R15512 = R15536 && R15513 = 0 && R15514 = R15536 && R15515 = 0 && R15516 = R15536 && R15517 = 0 && R15518 = R15536 && R15519 = 0 && R15520 = R15536 && R15521 = 0 && R15522 = R15536 && R15523 = 0 && R15524 = R15536 && R15525 = 0 && R15526 = R15536 && R15527 = 0 && R15528 = R15536 && R15529 = 0 && R15530 = R15536 && R15531 = 0 && R15532 = R15536 && R15533 = 0 && R15534 = R15536 && R15535 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R13524 + R13521 < 1 && -1*R15204 + -1*R15200 - R66 < 1 && -1*R15206 + -1*R15202 - R68 < 1 && -1 < R15454 && 0 < R15536 && (R53 + R13516 + R13513 != 0 || R54 + R13517 + R13514 + -1*R15204 + -1*R15200 - R66 = 0 || R66 + R15204 + R15200 < 1) && (R59 + R13522 + R13519 != 0 || R60 + R13523 + R13520 + -1*R15204 + -1*R15200 - R66 = 0 || R66 + R15204 + R15200 < 1) && (R66 + R15204 + R15200 != 0 || ((R53 + R13516 + R13513 != 0 || R54 + R13517 + R13514 = 0 || R68 + R15206 + R15202 < 1) && (R53 + R13516 + R13513 = 0 || R68 + R15206 + R15202 < 1))) && (R66 + R15204 + R15200 != 0 || ((R59 + R13522 + R13519 != 0 || R60 + R13523 + R13520 = 0 || R68 + R15206 + R15202 < 1) && (R59 + R13522 + R13519 = 0 || R68 + R15206 + R15202 < 1))) && (R66 + R15204 + R15200 != 0 || ((R73 + R15432 + R15427 != 0 || R74 + R15433 + R15428 = 0 || R68 + R15206 + R15202 < 1) && (R73 + R15432 + R15427 = 0 || R68 + R15206 + R15202 < 1))) && (R68 + R15206 + R15202 != 0 || R77 + R15436 + R15431 = 0 || (R75 + R15434 + R15429 = 0 && R76 + R15435 + R15430 = 0)) && (R73 + R15432 + R15427 != 0 || R66 + R15204 + R15200 + -1*R15433 + -1*R15428 - R74 = 0 || R66 + R15204 + R15200 < 1) && (R75 + R15434 + R15429 != 0 || R68 + R15206 + R15202 + -1*R15435 + -1*R15430 - R76 = 0 || R68 + R15206 + R15202 < 1) && (R15437 != 0 || R15438 = R15454 || (R20 = 0 && R15454 = 0)) && (R15439 != 0 || R15440 = R15454 || (R20 = 0 && R15454 = 0)) && (R15441 != 0 || R15442 = R15454 || (R20 = 0 && R15454 = 0)) && (R15443 != 0 || R15444 = R15454 || (R20 = 0 && R15454 = 0)) && (R15445 != 0 || R15446 = R15454 || (R20 = 0 && R15454 = 0)) && (R15447 != 0 || R15448 = R15454 || (R20 = 0 && R15454 = 0)) && (R15449 != 0 || R15450 = R15454 || (R20 = 0 && R15454 = 0)) && (R15451 != 0 || R15452 = R15454 || (R20 = 0 && R15454 = 0)) && (R15455 != 0 || R15454 = R15456 || (R20 = 0 && R15454 = 0)) && (R21 = 0 || (R15475 = 0 && R15476 = 0)) && (R21 = 0 || (R15479 = 0 && R15480 = 0)) && (R21 = 0 || (R15481 = 0 && R15482 = 0)) && (R21 = 0 || (R15487 = 0 && R15488 = 0)) && (R21 = 0 || (R15489 = 0 && R15490 = 0)) && (R21 = 0 || (R15491 = 0 && R15492 = 0)) && (R22 = 0 || (R15457 = 0 && R15458 = 0)) && (R22 = 0 || (R15459 = 0 && R15460 = 0)) && (R22 = 0 || (R15461 = 0 && R15462 = 0)) && (R22 = 0 || (R15463 = 0 && R15464 = 0)) && (R22 = 0 || (R15465 = 0 && R15466 = 0)) && (R22 = 0 || (R15467 = 0 && R15468 = 0)) && (R22 = 0 || (R15469 = 0 && R15470 = 0)) && (R22 = 0 || (R15471 = 0 && R15472 = 0)) && (R22 = 0 || (R15473 = 0 && R15474 = 0)) && (R53 + R13516 + R13513 = 0 || R66 + R15204 + R15200 < 1) && (R59 + R13522 + R13519 = 0 || R66 + R15204 + R15200 < 1) && (R73 + R15432 + R15427 = 0 || R66 + R15204 + R15200 < 1) && (R75 + R15434 + R15429 = 0 || R68 + R15206 + R15202 < 1) && (R15437 = 0 || (R20 = 0 && R15454 = 0)) && (R15439 = 0 || (R20 = 0 && R15454 = 0)) && (R15441 = 0 || (R20 = 0 && R15454 = 0)) && (R15443 = 0 || (R20 = 0 && R15454 = 0)) && (R15445 = 0 || (R20 = 0 && R15454 = 0)) && (R15447 = 0 || (R20 = 0 && R15454 = 0)) && (R15449 = 0 || (R20 = 0 && R15454 = 0)) && (R15451 = 0 || (R20 = 0 && R15454 = 0)) && (R15455 = 0 || (R20 = 0 && R15454 = 0));
// End of Parikh automata intersection problem
