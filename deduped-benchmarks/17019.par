// Parikh automata intersection problem, generated by OSTRICH+
counter int R12, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R3451, R3452, R3453, R3454, R3455, R3456, R4, R45, R4573, R4574, R4575, R4576, R4577, R4578, R4579, R4580, R4691, R4692, R4693, R4694, R4695, R4696, R4697, R4698, R4699, R47, R4700, R4701, R4702, R4703, R4704, R4705, R4706, R4707, R4708, R4709, R4710, R4711, R4712, R4713, R4714, R4715, R4716, R4717, R4718, R4719, R4720, R4721, R4722, R4723, R4724, R4725, R4726, R4727, R4728, R4729, R4730, R4731, R4732, R4733, R4734, R4735, R4736, R4737, R4738, R4739, R4740, R4741, R4742, R4743, R4744, R4745, R4746, R4747, R4748, R4749, R4750, R4751, R4752, R4753, R4754, R4755, R4756, R4757, R4758, R4759, R4760, R4761, R4762, R4763, R4764, R4765, R4766, R4767, R4768, R4769, R4770, R4771, R4772, R4773, R4774, R4775, R4776, R4777, R4778, R4779, R4780, R4781, R4782, R4783, R4784, R4785, R4786, R4787, R4788, R4789, R4790, R4791, R4792, R4793, R4794, R4795, R4796, R4797, R4798, R4799, R4800, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R4722 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R4721 += 1, R4722 += 1 };
  s1 -> s1 [0, 65535] { R4722 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R4724 += 1 };
  s0 -> s0 [0, 65535] { R4723 += 1, R4724 += 1 };
  s0 -> s2 [70, 70] { R4724 += 1 };
  s0 -> s3 [70, 70] { R4724 += 1 };
  s0 -> s1 [76, 65535] { R4724 += 1 };
  s1 -> s1 [0, 69] { R4724 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4724 += 1 };
  s1 -> s3 [70, 70] { R4724 += 1 };
  s1 -> s1 [76, 65535] { R4724 += 1 };
  s2 -> s2 [0, 70] { R4724 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R4724 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R4726 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R4725 += 1, R4726 += 1 };
  s0 -> s2 [70, 70] { R4726 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R4726 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R4726 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R4726 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4726 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R4726 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R4726 += 1, R45 += 1 };
  s2 -> s2 [0, 65535] { R4726 += 1, R45 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R4728 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R4727 += 1, R4728 += 1 };
  s0 -> s2 [70, 70] { R4728 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R4728 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R4728 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R4728 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4728 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R4728 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R4728 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4728 += 1, R47 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R4730 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R4729 += 1, R4730 += 1 };
  s0 -> s2 [70, 70] { R4730 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R4730 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R4730 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R4730 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4730 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R4730 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R4730 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4730 += 1, R49 += 1, R50 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R4732 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R4731 += 1, R4732 += 1 };
  s0 -> s2 [70, 70] { R4732 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R4732 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R4732 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R4732 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4732 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R4732 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R4732 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535] { R4732 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R4734 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R4733 += 1, R4734 += 1 };
  s0 -> s2 [70, 70] { R4734 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R4734 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R4734 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R4734 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4734 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R4734 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R4734 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535] { R4734 += 1, R59 += 1, R60 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R4736 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R4735 += 1, R4736 += 1 };
  s0 -> s2 [70, 70] { R4736 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R4736 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R4736 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R4736 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4736 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R4736 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R4736 += 1, R65 += 1, R66 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4736 += 1, R65 += 1, R66 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R4738 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R4737 += 1, R4738 += 1 };
  s0 -> s2 [70, 70] { R4738 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R4738 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R4738 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R4738 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4738 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R4738 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R4738 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R4738 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R4758 += 1 };
  s0 -> s0 [0, 65535] { R4757 += 1, R4758 += 1 };
  s0 -> s2 [70, 70] { R4758 += 1 };
  s0 -> s1 [71, 65535] { R4758 += 1 };
  s1 -> s1 [0, 69] { R4758 += 1 };
  s1 -> s2 [70, 70] { R4758 += 1 };
  s1 -> s1 [71, 65535] { R4758 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4758 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R4760 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R4759 += 1, R4760 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R4760 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R4762 += 1 };
  s0 -> s0 [0, 65535] { R4761 += 1, R4762 += 1 };
  s0 -> s2 [0, 65535] { R4762 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R4762 += 1 };
  s0 -> s1 [71, 65535] { R4762 += 1 };
  s1 -> s1 [0, 69] { R4762 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R4762 += 1 };
  s1 -> s1 [71, 65535] { R4762 += 1 };
  s2 -> s1 [0, 69] { R4762 += 1 };
  s2 -> s2 [0, 65535] { R4762 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R4762 += 1 };
  s2 -> s1 [71, 65535] { R4762 += 1 };
  s3 -> s3 [0, 65535] { R4762 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R4764 += 1, R4702 += 1 };
  s0 -> s0 [0, 65535] { R4763 += 1, R4764 += 1 };
  s0 -> s2 [0, 65535] { R4764 += 1, R4701 += 1, R4702 += 1 };
  s0 -> s1 [71, 65535] { R4764 += 1, R4702 += 1 };
  s1 -> s1 [0, 69] { R4764 += 1, R4702 += 1 };
  s1 -> s1 [0, 65535] { R4764 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R4764 += 1, R4702 += 1 };
  s2 -> s1 [0, 69] { R4764 += 1, R4702 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4764 += 1, R4701 += 1, R4702 += 1 };
  s2 -> s1 [71, 65535] { R4764 += 1, R4702 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s0 [0, 65535] { R4765 += 1, R4766 += 1 };
  s0 -> s1 [0, 65535] { R4766 += 1, R4703 += 1, R4704 += 1 };
  s0 -> s2 [0, 65535] { R4766 += 1, R4704 += 1, R20 += 1 };
  s1 -> s1 [0, 65535] { R4766 += 1, R4703 += 1, R4704 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R4766 += 1, R4704 += 1, R20 += 1 };
  s2 -> s3 [0, 65535] { R4766 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4766 += 1, R4704 += 1, R20 += 1 };
  s3 -> s3 [0, 65535] { R4766 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R4768 += 1, R4706 += 1 };
  s0 -> s2 [0, 65535] { R4768 += 1, R4705 += 1, R4706 += 1 };
  s0 -> s0 [0, 65535] { R4767 += 1, R4768 += 1 };
  s0 -> s1 [75, 65535] { R4768 += 1, R4706 += 1 };
  s1 -> s1 [0, 70] { R4768 += 1, R4706 += 1 };
  s1 -> s1 [0, 65535] { R4768 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R4768 += 1, R4706 += 1 };
  s2 -> s1 [0, 70] { R4768 += 1, R4706 += 1 };
  s2 -> s2 [0, 65535] { R4768 += 1, R4705 += 1, R4706 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R4768 += 1, R4706 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R4770 += 1, R4707 += 1, R4708 += 1 };
  s0 -> s2 [0, 65535] { R4770 += 1, R4708 += 1, R84 += 1 };
  s0 -> s0 [0, 65535] { R4769 += 1, R4770 += 1 };
  s1 -> s1 [0, 65535] { R4770 += 1, R4707 += 1, R4708 += 1 };
  s1 -> s2 [0, 65535] { R4770 += 1, R4708 += 1, R84 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4770 += 1, R4708 += 1, R84 += 1 };
  s2 -> s3 [0, 65535] { R4770 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4770 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R4772 += 1, R4710 += 1 };
  s0 -> s2 [0, 65535] { R4772 += 1, R4709 += 1, R4710 += 1 };
  s0 -> s0 [0, 65535] { R4771 += 1, R4772 += 1 };
  s0 -> s3 [0, 65535] { R4772 += 1, R4710 += 1, R86 += 1 };
  s0 -> s1 [76, 65535] { R4772 += 1, R4710 += 1 };
  s1 -> s1 [0, 74] { R4772 += 1, R4710 += 1 };
  s1 -> s1 [0, 65535] { R4772 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R4772 += 1, R4710 += 1 };
  s2 -> s1 [0, 74] { R4772 += 1, R4710 += 1 };
  s2 -> s2 [0, 65535] { R4772 += 1, R4709 += 1, R4710 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R4772 += 1, R4710 += 1, R86 += 1 };
  s2 -> s1 [76, 65535] { R4772 += 1, R4710 += 1 };
  s3 -> s1 [0, 74] { R4772 += 1, R4710 += 1 };
  s3 -> s4 [0, 65535] { R4772 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4772 += 1, R4710 += 1, R86 += 1 };
  s3 -> s1 [76, 65535] { R4772 += 1, R4710 += 1 };
  s4 -> s4 [0, 65535] { R4772 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R4774 += 1, R4711 += 1, R4712 += 1 };
  s0 -> s2 [0, 65535] { R4774 += 1, R4712 += 1 };
  s0 -> s0 [0, 65535] { R4773 += 1, R4774 += 1 };
  s0 -> s3 [0, 65535] { R4774 += 1, R4712 += 1, R90 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R4774 += 1, R4711 += 1, R4712 += 1 };
  s1 -> s2 [0, 65535] { R4774 += 1, R4712 += 1 };
  s1 -> s3 [0, 65535] { R4774 += 1, R4712 += 1, R90 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4774 += 1, R4712 += 1 };
  s2 -> s5 [0, 65535] { R4774 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R4774 += 1, R4712 += 1 };
  s3 -> s5 [0, 65535] { R4774 += 1 };
  s3 -> s3 [0, 65535] { R4774 += 1, R4712 += 1, R90 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4774 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R4775 += 1, R4776 += 1 };
  s0 -> s1 [0, 65535] { R4776 += 1, R4714 += 1, R95 += 1, R96 += 1 };
  s0 -> s2 [0, 65535] { R4776 += 1, R4713 += 1, R4714 += 1 };
  s0 -> s3 [0, 65535] { R4776 += 1, R4714 += 1, R94 += 1, R95 += 1 };
  s1 -> s1 [0, 65535] { R4776 += 1, R4714 += 1, R95 += 1, R96 += 1 };
  s1 -> s6 [0, 65535] { R4776 += 1, R4714 += 1 };
  s1 -> s4 [0, 65535] { R4776 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R4776 += 1, R4714 += 1, R95 += 1, R96 += 1 };
  s2 -> s2 [0, 65535] { R4776 += 1, R4713 += 1, R4714 += 1 };
  s2 -> s3 [0, 65535] { R4776 += 1, R4714 += 1, R94 += 1, R95 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R4776 += 1, R4714 += 1, R95 += 1, R96 += 1 };
  s3 -> s3 [0, 65535] { R4776 += 1, R4714 += 1, R94 += 1, R95 += 1 };
  s3 -> s4 [0, 65535] { R4776 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4776 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4776 += 1, R4714 += 1 };
  s6 -> s4 [0, 65535] { R4776 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R4778 += 1, R4716 += 1, R3455 += 1 };
  s0 -> s2 [0, 65535] { R4778 += 1, R4715 += 1, R4716 += 1 };
  s0 -> s0 [0, 65535] { R4777 += 1, R4778 += 1 };
  s0 -> s1 [0, 65535] { R4778 += 1, R4716 += 1 };
  s0 -> s1 [76, 65535] { R4778 += 1, R4716 += 1, R3455 += 1 };
  s1 -> s1 [0, 74] { R4778 += 1, R4716 += 1, R3455 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4778 += 1, R4716 += 1 };
  s1 -> s4 [0, 65535] { R4778 += 1 };
  s1 -> s1 [76, 65535] { R4778 += 1, R4716 += 1, R3455 += 1 };
  s2 -> s1 [0, 74] { R4778 += 1, R4716 += 1, R3455 += 1 };
  s2 -> s2 [0, 65535] { R4778 += 1, R4715 += 1, R4716 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4778 += 1, R4716 += 1 };
  s2 -> s1 [76, 65535] { R4778 += 1, R4716 += 1, R3455 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4778 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R4780 += 1, R4717 += 1, R4718 += 1 };
  s0 -> s2 [0, 65535] { R4780 += 1, R4718 += 1 };
  s0 -> s0 [0, 65535] { R4779 += 1, R4780 += 1 };
  s1 -> s1 [0, 65535] { R4780 += 1, R4717 += 1, R4718 += 1 };
  s1 -> s2 [0, 65535] { R4780 += 1, R4718 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4780 += 1, R4718 += 1 };
  s2 -> s3 [0, 65535] { R4780 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4780 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s0 [0, 65535] { R4781 += 1, R4782 += 1 };
  s0 -> s1 [0, 65535] { R4782 += 1, R4719 += 1, R4720 += 1 };
  s0 -> s2 [0, 65535] { R4782 += 1, R4720 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4782 += 1, R4719 += 1, R4720 += 1 };
  s1 -> s2 [0, 65535] { R4782 += 1, R4720 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R4782 += 1 };
  s2 -> s2 [0, 65535] { R4782 += 1, R4720 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4782 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R4784 += 1, R4739 += 1, R4740 += 1 };
  s0 -> s0 [0, 65535] { R4783 += 1, R4784 += 1 };
  s0 -> s2 [0, 65535] { R4784 += 1, R4740 += 1, R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4784 += 1, R4739 += 1, R4740 += 1 };
  s1 -> s2 [0, 65535] { R4784 += 1, R4740 += 1, R21 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R4784 += 1 };
  s2 -> s2 [0, 65535] { R4784 += 1, R4740 += 1, R21 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4784 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R4786 += 1, R4742 += 1 };
  s0 -> s2 [0, 65535] { R4786 += 1, R4741 += 1, R4742 += 1 };
  s0 -> s0 [0, 65535] { R4785 += 1, R4786 += 1 };
  s0 -> s3 [70, 70] { R4786 += 1, R4742 += 1 };
  s0 -> s4 [70, 70] { R4786 += 1, R4742 += 1 };
  s0 -> s5 [75, 75] { R4786 += 1, R4742 += 1 };
  s0 -> s1 [76, 65535] { R4786 += 1, R4742 += 1 };
  s1 -> s1 [0, 69] { R4786 += 1, R4742 += 1 };
  s1 -> s3 [70, 70] { R4786 += 1, R4742 += 1 };
  s1 -> s4 [70, 70] { R4786 += 1, R4742 += 1 };
  s1 -> s5 [75, 75] { R4786 += 1, R4742 += 1 };
  s1 -> s1 [76, 65535] { R4786 += 1, R4742 += 1 };
  s2 -> s1 [0, 69] { R4786 += 1, R4742 += 1 };
  s2 -> s2 [0, 65535] { R4786 += 1, R4741 += 1, R4742 += 1 };
  s2 -> s3 [70, 70] { R4786 += 1, R4742 += 1 };
  s2 -> s4 [70, 70] { R4786 += 1, R4742 += 1 };
  s2 -> s5 [75, 75] { R4786 += 1, R4742 += 1 };
  s2 -> s1 [76, 65535] { R4786 += 1, R4742 += 1 };
  s3 -> s3 [0, 70] { R4786 += 1, R4742 += 1 };
  s3 -> s7 [75, 75] { R4786 += 1, R4742 += 1 };
  s3 -> s3 [76, 65535] { R4786 += 1, R4742 += 1 };
  s5 -> s5 [0, 69] { R4786 += 1, R4742 += 1 };
  s5 -> s5 [0, 65535] { R4786 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R4786 += 1, R4742 += 1 };
  s5 -> s8 [70, 70] { R4786 += 1, R4742 += 1 };
  s5 -> s5 [75, 65535] { R4786 += 1, R4742 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R4786 += 1, R4742 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4786 += 1 };
  s7 -> s7 [75, 65535] { R4786 += 1, R4742 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R4786 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R4788 += 1, R4744 += 1, R83 += 1 };
  s0 -> s0 [0, 65535] { R4787 += 1, R4788 += 1 };
  s0 -> s2 [0, 65535] { R4788 += 1, R4743 += 1, R4744 += 1 };
  s0 -> s3 [70, 70] { R4788 += 1, R4744 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R4788 += 1, R4744 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R4788 += 1, R4744 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R4788 += 1, R4744 += 1, R83 += 1 };
  s1 -> s1 [0, 65535] { R4788 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R4788 += 1, R4744 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R4788 += 1, R4744 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R4788 += 1, R4744 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R4788 += 1, R4744 += 1, R83 += 1 };
  s2 -> s2 [0, 65535] { R4788 += 1, R4743 += 1, R4744 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R4788 += 1, R4744 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R4788 += 1, R4744 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R4788 += 1, R4744 += 1, R83 += 1 };
  s3 -> s3 [0, 65535] { R4788 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4788 += 1, R4744 += 1, R83 += 1 };
  s4 -> s5 [0, 65535] { R4788 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4788 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R4790 += 1, R4746 += 1, R85 += 1 };
  s0 -> s0 [0, 65535] { R4789 += 1, R4790 += 1 };
  s0 -> s2 [0, 65535] { R4790 += 1, R4745 += 1, R4746 += 1 };
  s0 -> s3 [70, 70] { R4790 += 1, R4746 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R4790 += 1, R4746 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R4790 += 1, R4746 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R4790 += 1, R4746 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R4790 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R4790 += 1, R4746 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R4790 += 1, R4746 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R4790 += 1, R4746 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R4790 += 1, R4746 += 1, R85 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R4790 += 1, R4745 += 1, R4746 += 1 };
  s2 -> s3 [70, 70] { R4790 += 1, R4746 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R4790 += 1, R4746 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R4790 += 1, R4746 += 1, R85 += 1 };
  s3 -> s3 [0, 65535] { R4790 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R4790 += 1 };
  s4 -> s4 [0, 65535] { R4790 += 1, R4746 += 1, R85 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4790 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R4792 += 1, R4748 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R4792 += 1, R4748 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R4791 += 1, R4792 += 1 };
  s0 -> s3 [0, 65535] { R4792 += 1, R4747 += 1, R4748 += 1 };
  s0 -> s4 [70, 70] { R4792 += 1, R4748 += 1, R87 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R4792 += 1, R4748 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R4792 += 1, R4748 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R4792 += 1, R4748 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [71, 74] { R4792 += 1, R4748 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R4792 += 1, R4748 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R4792 += 1, R4748 += 1, R88 += 1 };
  s0 -> s2 [76, 65535] { R4792 += 1, R4748 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R4792 += 1, R4748 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [0, 69] { R4792 += 1, R4748 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R4792 += 1, R4748 += 1, R87 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R4792 += 1, R4748 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R4792 += 1, R4748 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R4792 += 1, R4748 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [71, 74] { R4792 += 1, R4748 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R4792 += 1, R4748 += 1, R87 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R4792 += 1, R4748 += 1, R88 += 1 };
  s1 -> s2 [76, 65535] { R4792 += 1, R4748 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R4792 += 1, R4748 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R4792 += 1, R4748 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R4792 += 1, R4748 += 1, R88 += 1 };
  s2 -> s2 [71, 74] { R4792 += 1, R4748 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R4792 += 1, R4748 += 1, R88 += 1 };
  s2 -> s2 [76, 65535] { R4792 += 1, R4748 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R4792 += 1, R4748 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R4792 += 1, R4748 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R4792 += 1, R4747 += 1, R4748 += 1 };
  s3 -> s4 [70, 70] { R4792 += 1, R4748 += 1, R87 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R4792 += 1, R4748 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R4792 += 1, R4748 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R4792 += 1, R4748 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [71, 74] { R4792 += 1, R4748 += 1, R88 += 1 };
  s3 -> s1 [71, 65535] { R4792 += 1, R4748 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R4792 += 1, R4748 += 1, R88 += 1 };
  s3 -> s2 [76, 65535] { R4792 += 1, R4748 += 1, R88 += 1 };
  s6 -> s6 [0, 74] { R4792 += 1, R4748 += 1, R88 += 1 };
  s6 -> s10 [75, 75] { R4792 += 1, R4748 += 1, R88 += 1 };
  s6 -> s6 [76, 65535] { R4792 += 1, R4748 += 1, R88 += 1 };
  s7 -> s6 [0, 74] { R4792 += 1, R4748 += 1, R88 += 1 };
  s7 -> s7 [0, 65535] { R4792 += 1, R4748 += 1, R87 += 1, R88 += 1 };
  s7 -> s10 [75, 75] { R4792 += 1, R4748 += 1, R88 += 1 };
  s7 -> s6 [76, 65535] { R4792 += 1, R4748 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R4792 += 1, R4748 += 1, R88 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R4792 += 1 };
  s8 -> s10 [70, 70] { R4792 += 1, R4748 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R4792 += 1, R4748 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R4792 += 1, R4748 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R4792 += 1, R4748 += 1, R88 += 1 };
  s10 -> s12 [0, 65535] { R4792 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R4792 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R4792 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R4794 += 1, R4750 += 1, R91 += 1, R92 += 1 };
  s0 -> s2 [0, 65535] { R4794 += 1, R4749 += 1, R4750 += 1 };
  s0 -> s0 [0, 65535] { R4793 += 1, R4794 += 1 };
  s0 -> s3 [70, 70] { R4794 += 1, R4750 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R4794 += 1, R4750 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R4794 += 1, R4750 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R4794 += 1, R4750 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 65535] { R4794 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R4794 += 1, R4750 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R4794 += 1, R4750 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R4794 += 1, R4750 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R4794 += 1, R4750 += 1, R91 += 1, R92 += 1 };
  s2 -> s2 [0, 65535] { R4794 += 1, R4749 += 1, R4750 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R4794 += 1, R4750 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R4794 += 1, R4750 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R4794 += 1, R4750 += 1, R91 += 1, R92 += 1 };
  s3 -> s3 [0, 65535] { R4794 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4794 += 1, R4750 += 1, R91 += 1, R92 += 1 };
  s4 -> s5 [0, 65535] { R4794 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4794 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R4796 += 1, R4752 += 1, R3452 += 1 };
  s0 -> s2 [0, 69] { R4796 += 1, R4752 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s3 [0, 69] { R4796 += 1, R4752 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s4 [0, 65535] { R4796 += 1, R4751 += 1, R4752 += 1 };
  s0 -> s0 [0, 65535] { R4795 += 1, R4796 += 1 };
  s0 -> s5 [70, 70] { R4796 += 1, R4752 += 1, R3452 += 1 };
  s0 -> s6 [70, 70] { R4796 += 1, R4752 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s7 [70, 70] { R4796 += 1, R4752 += 1, R3452 += 1 };
  s0 -> s8 [70, 70] { R4796 += 1, R4752 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s9 [70, 70] { R4796 += 1, R4752 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s10 [70, 70] { R4796 += 1, R4752 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s1 [71, 74] { R4796 += 1, R4752 += 1, R3452 += 1 };
  s0 -> s2 [71, 65535] { R4796 += 1, R4752 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s3 [71, 65535] { R4796 += 1, R4752 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s1 [76, 65535] { R4796 += 1, R4752 += 1, R3452 += 1 };
  s1 -> s1 [0, 69] { R4796 += 1, R4752 += 1, R3452 += 1 };
  s1 -> s1 [0, 65535] { R4796 += 1 };
  s1 -> s12 [0, 65535];
  s1 -> s5 [70, 70] { R4796 += 1, R4752 += 1 };
  s1 -> s7 [70, 70] { R4796 += 1, R4752 += 1 };
  s1 -> s1 [71, 74] { R4796 += 1, R4752 += 1, R3452 += 1 };
  s1 -> s1 [71, 65535] { R4796 += 1, R4752 += 1 };
  s1 -> s1 [76, 65535] { R4796 += 1, R4752 += 1, R3452 += 1 };
  s2 -> s1 [0, 69] { R4796 += 1, R4752 += 1, R3452 += 1 };
  s2 -> s2 [0, 69] { R4796 += 1, R4752 += 1, R3451 += 1, R3452 += 1 };
  s2 -> s3 [0, 69] { R4796 += 1, R4752 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s5 [70, 70] { R4796 += 1, R4752 += 1, R3452 += 1 };
  s2 -> s6 [70, 70] { R4796 += 1, R4752 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s7 [70, 70] { R4796 += 1, R4752 += 1, R3452 += 1 };
  s2 -> s8 [70, 70] { R4796 += 1, R4752 += 1, R3451 += 1, R3452 += 1 };
  s2 -> s9 [70, 70] { R4796 += 1, R4752 += 1, R3451 += 1, R3452 += 1 };
  s2 -> s10 [70, 70] { R4796 += 1, R4752 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s1 [71, 74] { R4796 += 1, R4752 += 1, R3452 += 1 };
  s2 -> s2 [71, 65535] { R4796 += 1, R4752 += 1, R3451 += 1, R3452 += 1 };
  s2 -> s3 [71, 65535] { R4796 += 1, R4752 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s1 [76, 65535] { R4796 += 1, R4752 += 1, R3452 += 1 };
  s3 -> s1 [0, 69] { R4796 += 1, R4752 += 1, R3452 += 1 };
  s3 -> s3 [0, 69] { R4796 += 1, R4752 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s5 [70, 70] { R4796 += 1, R4752 += 1, R3452 += 1 };
  s3 -> s6 [70, 70] { R4796 += 1, R4752 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s7 [70, 70] { R4796 += 1, R4752 += 1, R3452 += 1 };
  s3 -> s10 [70, 70] { R4796 += 1, R4752 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s1 [71, 74] { R4796 += 1, R4752 += 1, R3452 += 1 };
  s3 -> s3 [71, 65535] { R4796 += 1, R4752 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s1 [76, 65535] { R4796 += 1, R4752 += 1, R3452 += 1 };
  s4 -> s1 [0, 69] { R4796 += 1, R4752 += 1, R3452 += 1 };
  s4 -> s2 [0, 69] { R4796 += 1, R4752 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s3 [0, 69] { R4796 += 1, R4752 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s4 [0, 65535] { R4796 += 1, R4751 += 1, R4752 += 1 };
  s4 -> s5 [70, 70] { R4796 += 1, R4752 += 1, R3452 += 1 };
  s4 -> s6 [70, 70] { R4796 += 1, R4752 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s7 [70, 70] { R4796 += 1, R4752 += 1, R3452 += 1 };
  s4 -> s8 [70, 70] { R4796 += 1, R4752 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s9 [70, 70] { R4796 += 1, R4752 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s10 [70, 70] { R4796 += 1, R4752 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s1 [71, 74] { R4796 += 1, R4752 += 1, R3452 += 1 };
  s4 -> s2 [71, 65535] { R4796 += 1, R4752 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s3 [71, 65535] { R4796 += 1, R4752 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s1 [76, 65535] { R4796 += 1, R4752 += 1, R3452 += 1 };
  s5 -> s5 [0, 65535] { R4796 += 1 };
  s5 -> s12 [0, 65535];
  s7 -> s7 [0, 74] { R4796 += 1, R4752 += 1, R3452 += 1 };
  s7 -> s11 [0, 65535] { R4796 += 1 };
  s7 -> s12 [0, 65535];
  s7 -> s7 [0, 65535] { R4796 += 1, R4752 += 1 };
  s7 -> s7 [76, 65535] { R4796 += 1, R4752 += 1, R3452 += 1 };
  s8 -> s7 [0, 74] { R4796 += 1, R4752 += 1, R3452 += 1 };
  s8 -> s8 [0, 65535] { R4796 += 1, R4752 += 1, R3451 += 1, R3452 += 1 };
  s8 -> s10 [0, 65535] { R4796 += 1, R4752 += 1, R3452 += 1, R3453 += 1 };
  s8 -> s7 [76, 65535] { R4796 += 1, R4752 += 1, R3452 += 1 };
  s10 -> s7 [0, 74] { R4796 += 1, R4752 += 1, R3452 += 1 };
  s10 -> s10 [0, 65535] { R4796 += 1, R4752 += 1, R3452 += 1, R3453 += 1 };
  s10 -> s7 [76, 65535] { R4796 += 1, R4752 += 1, R3452 += 1 };
  s11 -> s11 [0, 65535] { R4796 += 1 };
  s11 -> s12 [0, 65535];
  s12 -> s12 [0, 65535];
  accepting s12, s5, s1, s7, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R4798 += 1, R4754 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s0 -> s2 [0, 69] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s0 -> s3 [0, 69] { R4798 += 1, R4754 += 1, R4573 += 1, R4574 += 1 };
  s0 -> s4 [0, 65535] { R4798 += 1, R4753 += 1, R4754 += 1 };
  s0 -> s0 [0, 65535] { R4797 += 1, R4798 += 1 };
  s0 -> s5 [70, 70] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s0 -> s6 [70, 70] { R4798 += 1, R4754 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s0 -> s7 [70, 70] { R4798 += 1, R4754 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s0 -> s8 [70, 70] { R4798 += 1, R4754 += 1, R4573 += 1, R4574 += 1 };
  s0 -> s9 [70, 70] { R4798 += 1, R4754 += 1, R4573 += 1, R4574 += 1 };
  s0 -> s10 [70, 70] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s0 -> s2 [71, 74] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s0 -> s1 [71, 65535] { R4798 += 1, R4754 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s0 -> s3 [71, 65535] { R4798 += 1, R4754 += 1, R4573 += 1, R4574 += 1 };
  s0 -> s11 [75, 75] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s0 -> s2 [76, 65535] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s1 -> s1 [0, 69] { R4798 += 1, R4754 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s1 -> s2 [0, 69] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s1 -> s5 [70, 70] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s1 -> s6 [70, 70] { R4798 += 1, R4754 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s1 -> s7 [70, 70] { R4798 += 1, R4754 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s1 -> s10 [70, 70] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s1 -> s2 [71, 74] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s1 -> s1 [71, 65535] { R4798 += 1, R4754 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s1 -> s11 [75, 75] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s1 -> s2 [76, 65535] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s2 -> s2 [0, 69] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s2 -> s5 [70, 70] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s2 -> s10 [70, 70] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s2 -> s2 [71, 74] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s2 -> s11 [75, 75] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s2 -> s2 [76, 65535] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s3 -> s1 [0, 69] { R4798 += 1, R4754 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s3 -> s2 [0, 69] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s3 -> s3 [0, 69] { R4798 += 1, R4754 += 1, R4573 += 1, R4574 += 1 };
  s3 -> s5 [70, 70] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s3 -> s6 [70, 70] { R4798 += 1, R4754 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s3 -> s7 [70, 70] { R4798 += 1, R4754 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s3 -> s8 [70, 70] { R4798 += 1, R4754 += 1, R4573 += 1, R4574 += 1 };
  s3 -> s9 [70, 70] { R4798 += 1, R4754 += 1, R4573 += 1, R4574 += 1 };
  s3 -> s10 [70, 70] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s3 -> s2 [71, 74] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s3 -> s1 [71, 65535] { R4798 += 1, R4754 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s3 -> s3 [71, 65535] { R4798 += 1, R4754 += 1, R4573 += 1, R4574 += 1 };
  s3 -> s11 [75, 75] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s3 -> s2 [76, 65535] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s4 -> s1 [0, 69] { R4798 += 1, R4754 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s4 -> s2 [0, 69] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s4 -> s3 [0, 69] { R4798 += 1, R4754 += 1, R4573 += 1, R4574 += 1 };
  s4 -> s4 [0, 65535] { R4798 += 1, R4753 += 1, R4754 += 1 };
  s4 -> s5 [70, 70] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s4 -> s6 [70, 70] { R4798 += 1, R4754 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s4 -> s7 [70, 70] { R4798 += 1, R4754 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s4 -> s8 [70, 70] { R4798 += 1, R4754 += 1, R4573 += 1, R4574 += 1 };
  s4 -> s9 [70, 70] { R4798 += 1, R4754 += 1, R4573 += 1, R4574 += 1 };
  s4 -> s10 [70, 70] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s4 -> s2 [71, 74] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s4 -> s1 [71, 65535] { R4798 += 1, R4754 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s4 -> s3 [71, 65535] { R4798 += 1, R4754 += 1, R4573 += 1, R4574 += 1 };
  s4 -> s11 [75, 75] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s4 -> s2 [76, 65535] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s5 -> s5 [0, 74] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s5 -> s17 [75, 75] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s5 -> s5 [76, 65535] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s6 -> s5 [0, 74] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s6 -> s6 [0, 65535] { R4798 += 1, R4754 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s6 -> s17 [75, 75] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s6 -> s5 [76, 65535] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s8 -> s5 [0, 74] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s8 -> s6 [0, 65535] { R4798 += 1, R4754 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s8 -> s8 [0, 65535] { R4798 += 1, R4754 += 1, R4573 += 1, R4574 += 1 };
  s8 -> s17 [75, 75] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s8 -> s5 [76, 65535] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s11 -> s12 [0, 69] { R4798 += 1, R4754 += 1, R4574 += 1 };
  s11 -> s13 [0, 69] { R4798 += 1, R4754 += 1 };
  s11 -> s11 [0, 69] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s11 -> s14 [70, 70] { R4798 += 1, R4754 += 1 };
  s11 -> s15 [70, 70] { R4798 += 1, R4754 += 1 };
  s11 -> s16 [70, 70] { R4798 += 1, R4754 += 1, R4574 += 1 };
  s11 -> s17 [70, 70] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s11 -> s18 [70, 70] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s11 -> s19 [70, 70] { R4798 += 1, R4754 += 1, R4574 += 1 };
  s11 -> s12 [71, 65535] { R4798 += 1, R4754 += 1, R4574 += 1 };
  s11 -> s13 [71, 65535] { R4798 += 1, R4754 += 1 };
  s11 -> s11 [71, 65535] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s12 -> s12 [0, 69] { R4798 += 1, R4754 += 1, R4574 += 1 };
  s12 -> s13 [0, 69] { R4798 += 1, R4754 += 1 };
  s12 -> s14 [70, 70] { R4798 += 1, R4754 += 1 };
  s12 -> s15 [70, 70] { R4798 += 1, R4754 += 1 };
  s12 -> s16 [70, 70] { R4798 += 1, R4754 += 1, R4574 += 1 };
  s12 -> s19 [70, 70] { R4798 += 1, R4754 += 1, R4574 += 1 };
  s12 -> s12 [71, 65535] { R4798 += 1, R4754 += 1, R4574 += 1 };
  s12 -> s13 [71, 65535] { R4798 += 1, R4754 += 1 };
  s13 -> s13 [0, 69] { R4798 += 1, R4754 += 1 };
  s13 -> s13 [0, 65535] { R4798 += 1 };
  s13 -> s21 [0, 65535];
  s13 -> s14 [70, 70] { R4798 += 1, R4754 += 1 };
  s13 -> s15 [70, 70] { R4798 += 1, R4754 += 1 };
  s13 -> s13 [71, 65535] { R4798 += 1, R4754 += 1 };
  s14 -> s14 [0, 65535] { R4798 += 1 };
  s14 -> s21 [0, 65535];
  s15 -> s20 [0, 65535] { R4798 += 1 };
  s15 -> s15 [0, 65535] { R4798 += 1, R4754 += 1 };
  s15 -> s21 [0, 65535];
  s16 -> s15 [0, 65535] { R4798 += 1, R4754 += 1 };
  s16 -> s16 [0, 65535] { R4798 += 1, R4754 += 1, R4574 += 1 };
  s17 -> s15 [0, 65535] { R4798 += 1, R4754 += 1 };
  s17 -> s16 [0, 65535] { R4798 += 1, R4754 += 1, R4574 += 1 };
  s17 -> s17 [0, 65535] { R4798 += 1, R4754 += 1, R4574 += 1, R4576 += 1 };
  s20 -> s20 [0, 65535] { R4798 += 1 };
  s20 -> s21 [0, 65535];
  s21 -> s21 [0, 65535];
  accepting s13, s14, s21, s20, s15;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R4800 += 1, R4756 += 1, R4692 += 1, R4694 += 1, R4695 += 1 };
  s0 -> s2 [0, 69] { R4800 += 1, R4756 += 1, R4691 += 1, R4692 += 1 };
  s0 -> s3 [0, 69] { R4800 += 1, R4756 += 1, R4692 += 1, R4693 += 1, R4694 += 1 };
  s0 -> s0 [0, 65535] { R4799 += 1, R4800 += 1 };
  s0 -> s4 [0, 65535] { R4800 += 1, R4755 += 1, R4756 += 1 };
  s0 -> s5 [70, 70] { R4800 += 1, R4756 += 1, R4692 += 1, R4694 += 1, R4695 += 1 };
  s0 -> s6 [70, 70] { R4800 += 1, R4756 += 1, R4691 += 1, R4692 += 1 };
  s0 -> s7 [70, 70] { R4800 += 1, R4756 += 1, R4692 += 1, R4693 += 1, R4694 += 1 };
  s0 -> s8 [70, 70] { R4800 += 1, R4756 += 1, R4692 += 1, R4694 += 1, R4695 += 1 };
  s0 -> s9 [70, 70] { R4800 += 1, R4756 += 1, R4692 += 1, R4693 += 1, R4694 += 1 };
  s0 -> s10 [70, 70] { R4800 += 1, R4756 += 1, R4691 += 1, R4692 += 1 };
  s0 -> s1 [71, 65535] { R4800 += 1, R4756 += 1, R4692 += 1, R4694 += 1, R4695 += 1 };
  s0 -> s2 [71, 65535] { R4800 += 1, R4756 += 1, R4691 += 1, R4692 += 1 };
  s0 -> s3 [71, 65535] { R4800 += 1, R4756 += 1, R4692 += 1, R4693 += 1, R4694 += 1 };
  s1 -> s1 [0, 69] { R4800 += 1, R4756 += 1, R4692 += 1, R4694 += 1, R4695 += 1 };
  s1 -> s17 [0, 69] { R4800 += 1, R4756 += 1, R4692 += 1 };
  s1 -> s15 [0, 69] { R4800 += 1, R4756 += 1 };
  s1 -> s5 [70, 70] { R4800 += 1, R4756 += 1, R4692 += 1, R4694 += 1, R4695 += 1 };
  s1 -> s11 [70, 70] { R4800 += 1, R4756 += 1, R4692 += 1 };
  s1 -> s18 [70, 70] { R4800 += 1, R4756 += 1, R4692 += 1 };
  s1 -> s8 [70, 70] { R4800 += 1, R4756 += 1, R4692 += 1, R4694 += 1, R4695 += 1 };
  s1 -> s16 [70, 70] { R4800 += 1, R4756 += 1 };
  s1 -> s12 [70, 70] { R4800 += 1, R4756 += 1 };
  s1 -> s1 [71, 65535] { R4800 += 1, R4756 += 1, R4692 += 1, R4694 += 1, R4695 += 1 };
  s1 -> s17 [71, 65535] { R4800 += 1, R4756 += 1, R4692 += 1 };
  s1 -> s15 [71, 65535] { R4800 += 1, R4756 += 1 };
  s2 -> s1 [0, 69] { R4800 += 1, R4756 += 1, R4692 += 1, R4694 += 1, R4695 += 1 };
  s2 -> s2 [0, 69] { R4800 += 1, R4756 += 1, R4691 += 1, R4692 += 1 };
  s2 -> s3 [0, 69] { R4800 += 1, R4756 += 1, R4692 += 1, R4693 += 1, R4694 += 1 };
  s2 -> s5 [70, 70] { R4800 += 1, R4756 += 1, R4692 += 1, R4694 += 1, R4695 += 1 };
  s2 -> s6 [70, 70] { R4800 += 1, R4756 += 1, R4691 += 1, R4692 += 1 };
  s2 -> s7 [70, 70] { R4800 += 1, R4756 += 1, R4692 += 1, R4693 += 1, R4694 += 1 };
  s2 -> s8 [70, 70] { R4800 += 1, R4756 += 1, R4692 += 1, R4694 += 1, R4695 += 1 };
  s2 -> s9 [70, 70] { R4800 += 1, R4756 += 1, R4692 += 1, R4693 += 1, R4694 += 1 };
  s2 -> s10 [70, 70] { R4800 += 1, R4756 += 1, R4691 += 1, R4692 += 1 };
  s2 -> s1 [71, 65535] { R4800 += 1, R4756 += 1, R4692 += 1, R4694 += 1, R4695 += 1 };
  s2 -> s2 [71, 65535] { R4800 += 1, R4756 += 1, R4691 += 1, R4692 += 1 };
  s2 -> s3 [71, 65535] { R4800 += 1, R4756 += 1, R4692 += 1, R4693 += 1, R4694 += 1 };
  s3 -> s1 [0, 69] { R4800 += 1, R4756 += 1, R4692 += 1, R4694 += 1, R4695 += 1 };
  s3 -> s15 [0, 69] { R4800 += 1, R4756 += 1 };
  s3 -> s3 [0, 69] { R4800 += 1, R4756 += 1, R4692 += 1, R4693 += 1, R4694 += 1 };
  s3 -> s5 [70, 70] { R4800 += 1, R4756 += 1, R4692 += 1, R4694 += 1, R4695 += 1 };
  s3 -> s7 [70, 70] { R4800 += 1, R4756 += 1, R4692 += 1, R4693 += 1, R4694 += 1 };
  s3 -> s8 [70, 70] { R4800 += 1, R4756 += 1, R4692 += 1, R4694 += 1, R4695 += 1 };
  s3 -> s16 [70, 70] { R4800 += 1, R4756 += 1 };
  s3 -> s9 [70, 70] { R4800 += 1, R4756 += 1, R4692 += 1, R4693 += 1, R4694 += 1 };
  s3 -> s12 [70, 70] { R4800 += 1, R4756 += 1 };
  s3 -> s1 [71, 65535] { R4800 += 1, R4756 += 1, R4692 += 1, R4694 += 1, R4695 += 1 };
  s3 -> s15 [71, 65535] { R4800 += 1, R4756 += 1 };
  s3 -> s3 [71, 65535] { R4800 += 1, R4756 += 1, R4692 += 1, R4693 += 1, R4694 += 1 };
  s4 -> s1 [0, 69] { R4800 += 1, R4756 += 1, R4692 += 1, R4694 += 1, R4695 += 1 };
  s4 -> s2 [0, 69] { R4800 += 1, R4756 += 1, R4691 += 1, R4692 += 1 };
  s4 -> s3 [0, 69] { R4800 += 1, R4756 += 1, R4692 += 1, R4693 += 1, R4694 += 1 };
  s4 -> s4 [0, 65535] { R4800 += 1, R4755 += 1, R4756 += 1 };
  s4 -> s5 [70, 70] { R4800 += 1, R4756 += 1, R4692 += 1, R4694 += 1, R4695 += 1 };
  s4 -> s6 [70, 70] { R4800 += 1, R4756 += 1, R4691 += 1, R4692 += 1 };
  s4 -> s7 [70, 70] { R4800 += 1, R4756 += 1, R4692 += 1, R4693 += 1, R4694 += 1 };
  s4 -> s8 [70, 70] { R4800 += 1, R4756 += 1, R4692 += 1, R4694 += 1, R4695 += 1 };
  s4 -> s9 [70, 70] { R4800 += 1, R4756 += 1, R4692 += 1, R4693 += 1, R4694 += 1 };
  s4 -> s10 [70, 70] { R4800 += 1, R4756 += 1, R4691 += 1, R4692 += 1 };
  s4 -> s1 [71, 65535] { R4800 += 1, R4756 += 1, R4692 += 1, R4694 += 1, R4695 += 1 };
  s4 -> s2 [71, 65535] { R4800 += 1, R4756 += 1, R4691 += 1, R4692 += 1 };
  s4 -> s3 [71, 65535] { R4800 += 1, R4756 += 1, R4692 += 1, R4693 += 1, R4694 += 1 };
  s6 -> s6 [0, 65535] { R4800 += 1, R4756 += 1, R4691 += 1, R4692 += 1 };
  s6 -> s7 [0, 65535] { R4800 += 1, R4756 += 1, R4692 += 1, R4693 += 1, R4694 += 1 };
  s6 -> s8 [0, 65535] { R4800 += 1, R4756 += 1, R4692 += 1, R4694 += 1, R4695 += 1 };
  s7 -> s7 [0, 65535] { R4800 += 1, R4756 += 1, R4692 += 1, R4693 += 1, R4694 += 1 };
  s7 -> s8 [0, 65535] { R4800 += 1, R4756 += 1, R4692 += 1, R4694 += 1, R4695 += 1 };
  s7 -> s12 [0, 65535] { R4800 += 1, R4756 += 1 };
  s8 -> s11 [0, 65535] { R4800 += 1, R4756 += 1, R4692 += 1 };
  s8 -> s8 [0, 65535] { R4800 += 1, R4756 += 1, R4692 += 1, R4694 += 1, R4695 += 1 };
  s8 -> s12 [0, 65535] { R4800 += 1, R4756 += 1 };
  s11 -> s11 [0, 65535] { R4800 += 1, R4756 += 1, R4692 += 1 };
  s11 -> s12 [0, 65535] { R4800 += 1, R4756 += 1 };
  s12 -> s12 [0, 65535] { R4800 += 1, R4756 += 1 };
  s12 -> s13 [0, 65535] { R4800 += 1 };
  s12 -> s14 [0, 65535];
  s13 -> s13 [0, 65535] { R4800 += 1 };
  s13 -> s14 [0, 65535];
  s14 -> s14 [0, 65535];
  s15 -> s15 [0, 69] { R4800 += 1, R4756 += 1 };
  s15 -> s15 [0, 65535] { R4800 += 1 };
  s15 -> s14 [0, 65535];
  s15 -> s16 [70, 70] { R4800 += 1, R4756 += 1 };
  s15 -> s12 [70, 70] { R4800 += 1, R4756 += 1 };
  s15 -> s15 [71, 65535] { R4800 += 1, R4756 += 1 };
  s16 -> s16 [0, 65535] { R4800 += 1 };
  s16 -> s14 [0, 65535];
  s17 -> s17 [0, 69] { R4800 += 1, R4756 += 1, R4692 += 1 };
  s17 -> s15 [0, 69] { R4800 += 1, R4756 += 1 };
  s17 -> s11 [70, 70] { R4800 += 1, R4756 += 1, R4692 += 1 };
  s17 -> s18 [70, 70] { R4800 += 1, R4756 += 1, R4692 += 1 };
  s17 -> s16 [70, 70] { R4800 += 1, R4756 += 1 };
  s17 -> s12 [70, 70] { R4800 += 1, R4756 += 1 };
  s17 -> s17 [71, 65535] { R4800 += 1, R4756 += 1, R4692 += 1 };
  s17 -> s15 [71, 65535] { R4800 += 1, R4756 += 1 };
  accepting s16, s12, s13, s14, s15;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R4800 && R23 - R4800 = -1 && R24 = R4800 && R25 - R4800 = -1 && R26 = R4800 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R4578 + -1*R4574 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R4578 + -1*R4574 - R66 = 0 && R55 + R96 + R93 + -1*R4580 + -1*R4576 - R68 = 0 && R65 + R4577 + R4573 = 0 && R67 + R4579 + R4575 = 0 && R4741 = 0 && R4742 = 0 && R4747 = 0 && R4748 = 0 && R4751 = 0 && R4752 = 0 && R4753 = 0 && R4754 = 0 && R4755 = 0 && R4756 = 0 && R4757 = 0 && R4758 = R4800 && R4759 = 0 && R4760 = R4800 && R4761 = 0 && R4762 = R4800 && R4763 = 0 && R4764 = R4800 && R4765 = 0 && R4766 = R4800 && R4767 = 0 && R4768 = R4800 && R4769 = 0 && R4770 = R4800 && R4771 = 0 && R4772 = R4800 && R4773 = 0 && R4774 = R4800 && R4775 = 0 && R4776 = R4800 && R4777 = 0 && R4778 = R4800 && R4779 = 0 && R4780 = R4800 && R4781 = 0 && R4782 = R4800 && R4783 = 0 && R4784 = R4800 && R4785 = 0 && R4786 = R4800 && R4787 = 0 && R4788 = R4800 && R4789 = 0 && R4790 = R4800 && R4791 = 0 && R4792 = R4800 && R4793 = 0 && R4794 = R4800 && R4795 = 0 && R4796 = R4800 && R4797 = 0 && R4798 = R4800 && R4799 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R3456 + R3453 < 1 && -1*R4578 + -1*R4574 - R66 < 1 && -1*R4580 + -1*R4576 - R68 < 1 && 0 < R4800 && (R2 != 0 || R20 = 0 || (R4701 = 0 && R4702 = 0)) && (R2 != 0 || R20 = 0 || (R4703 = 0 && R4704 = 0)) && (R2 != 0 || R20 = 0 || (R4705 = 0 && R4706 = 0)) && (R2 != 0 || R20 = 0 || (R4707 = 0 && R4708 = 0)) && (R2 != 0 || R20 = 0 || (R4709 = 0 && R4710 = 0)) && (R2 != 0 || R20 = 0 || (R4711 = 0 && R4712 = 0)) && (R2 != 0 || R20 = 0 || (R4713 = 0 && R4714 = 0)) && (R2 != 0 || R20 = 0 || (R4715 = 0 && R4716 = 0)) && (R2 != 0 || R20 = 0 || (R4717 = 0 && R4718 = 0)) && (R2 != 0 || R20 = 0 || (R4719 = 0 && R4720 = 0)) && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R4578 + -1*R4574 - R66 = 0 || R66 + R4578 + R4574 < 1) && (R59 + R3454 + R3451 != 0 || R60 + R3455 + R3452 + -1*R4578 + -1*R4574 - R66 = 0 || R66 + R4578 + R4574 < 1) && (R66 + R4578 + R4574 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R4580 + R4576 < 1) && (R53 + R94 + R91 = 0 || R68 + R4580 + R4576 < 1))) && (R66 + R4578 + R4574 != 0 || ((R59 + R3454 + R3451 != 0 || R60 + R3455 + R3452 = 0 || R68 + R4580 + R4576 < 1) && (R59 + R3454 + R3451 = 0 || R68 + R4580 + R4576 < 1))) && (R66 + R4578 + R4574 != 0 || ((R73 + R4696 + R4691 != 0 || R74 + R4697 + R4692 = 0 || R68 + R4580 + R4576 < 1) && (R73 + R4696 + R4691 = 0 || R68 + R4580 + R4576 < 1))) && (R68 + R4580 + R4576 != 0 || R77 + R4700 + R4695 = 0 || (R75 + R4698 + R4693 = 0 && R76 + R4699 + R4694 = 0)) && (R73 + R4696 + R4691 != 0 || R66 + R4578 + R4574 + -1*R4697 + -1*R4692 - R74 = 0 || R66 + R4578 + R4574 < 1) && (R75 + R4698 + R4693 != 0 || R68 + R4580 + R4576 + -1*R4699 + -1*R4694 - R76 = 0 || R68 + R4580 + R4576 < 1) && (R4701 != 0 || R2 = R4702 || R2 < 1) && (R4703 != 0 || R2 = R4704 || R2 < 1) && (R4705 != 0 || R2 = R4706 || R2 < 1) && (R4707 != 0 || R2 = R4708 || R2 < 1) && (R4709 != 0 || R2 = R4710 || R2 < 1) && (R4711 != 0 || R2 = R4712 || R2 < 1) && (R4713 != 0 || R2 = R4714 || R2 < 1) && (R4715 != 0 || R2 = R4716 || R2 < 1) && (R4717 != 0 || R2 = R4718 || R2 < 1) && (R4719 != 0 || R2 = R4720 || R2 < 1) && (R21 = 0 || (R4739 = 0 && R4740 = 0)) && (R21 = 0 || (R4743 = 0 && R4744 = 0)) && (R21 = 0 || (R4745 = 0 && R4746 = 0)) && (R21 = 0 || (R4749 = 0 && R4750 = 0)) && (R22 = 0 || (R4721 = 0 && R4722 = 0)) && (R22 = 0 || (R4723 = 0 && R4724 = 0)) && (R22 = 0 || (R4725 = 0 && R4726 = 0)) && (R22 = 0 || (R4727 = 0 && R4728 = 0)) && (R22 = 0 || (R4729 = 0 && R4730 = 0)) && (R22 = 0 || (R4731 = 0 && R4732 = 0)) && (R22 = 0 || (R4733 = 0 && R4734 = 0)) && (R22 = 0 || (R4735 = 0 && R4736 = 0)) && (R22 = 0 || (R4737 = 0 && R4738 = 0)) && (R53 + R94 + R91 = 0 || R66 + R4578 + R4574 < 1) && (R59 + R3454 + R3451 = 0 || R66 + R4578 + R4574 < 1) && (R73 + R4696 + R4691 = 0 || R66 + R4578 + R4574 < 1) && (R75 + R4698 + R4693 = 0 || R68 + R4580 + R4576 < 1) && (R4701 = 0 || R2 < 1) && (R4703 = 0 || R2 < 1) && (R4705 = 0 || R2 < 1) && (R4707 = 0 || R2 < 1) && (R4709 = 0 || R2 < 1) && (R4711 = 0 || R2 < 1) && (R4713 = 0 || R2 < 1) && (R4715 = 0 || R2 < 1) && (R4717 = 0 || R2 < 1) && (R4719 = 0 || R2 < 1);
// End of Parikh automata intersection problem
