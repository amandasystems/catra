// Parikh automata intersection problem, generated by OSTRICH+
counter int R12, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R4, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R6805, R6806, R6807, R6808, R6809, R6810, R73, R7369, R7370, R7371, R7372, R7373, R7374, R7375, R7376, R74, R75, R76, R77, R7817, R7818, R7819, R7820, R7821, R7822, R7823, R7824, R7825, R7826, R7827, R7828, R7829, R7830, R7831, R7832, R7833, R7834, R7835, R7836, R7837, R7838, R7839, R7840, R7841, R7842, R7843, R7844, R7845, R7846, R7847, R7848, R7849, R7850, R7851, R7852, R7853, R7854, R7855, R7856, R7857, R7858, R7859, R7860, R7861, R7862, R7863, R7864, R7865, R7866, R7867, R7868, R7869, R7870, R7871, R7872, R7873, R7874, R7875, R7876, R7877, R7878, R7879, R7880, R7881, R7882, R7883, R7884, R7885, R7886, R7887, R7888, R7889, R7890, R7891, R7892, R7893, R7894, R7895, R7896, R7897, R7898, R7899, R7900, R7901, R7902, R7903, R7904, R7905, R7906, R7907, R7908, R7909, R7910, R7911, R7912, R7913, R7914, R7915, R7916, R7917, R7918, R7919, R7920, R7921, R7922, R7923, R7924, R7925, R7926, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R7847 += 1, R7848 += 1 };
  s0 -> s1 [0, 65535] { R7848 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R7848 += 1, R22 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R7850 += 1 };
  s0 -> s0 [0, 65535] { R7849 += 1, R7850 += 1 };
  s0 -> s2 [70, 70] { R7850 += 1 };
  s0 -> s3 [70, 70] { R7850 += 1 };
  s0 -> s1 [76, 65535] { R7850 += 1 };
  s1 -> s1 [0, 69] { R7850 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7850 += 1 };
  s1 -> s3 [70, 70] { R7850 += 1 };
  s1 -> s1 [76, 65535] { R7850 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R7850 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R7850 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R7852 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R7851 += 1, R7852 += 1 };
  s0 -> s2 [70, 70] { R7852 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R7852 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R7852 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R7852 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7852 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R7852 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R7852 += 1, R45 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R7852 += 1, R45 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R7854 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R7853 += 1, R7854 += 1 };
  s0 -> s2 [70, 70] { R7854 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R7854 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R7854 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R7854 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7854 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R7854 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R7854 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R7854 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R7856 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R7855 += 1, R7856 += 1 };
  s0 -> s2 [70, 70] { R7856 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R7856 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R7856 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R7856 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7856 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R7856 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R7856 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535] { R7856 += 1, R49 += 1, R50 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R7858 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R7857 += 1, R7858 += 1 };
  s0 -> s2 [70, 70] { R7858 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R7858 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R7858 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R7858 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7858 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R7858 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R7858 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535] { R7858 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R7860 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R7859 += 1, R7860 += 1 };
  s0 -> s2 [70, 70] { R7860 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R7860 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R7860 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R7860 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7860 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R7860 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R7860 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535] { R7860 += 1, R59 += 1, R60 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R7862 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R7861 += 1, R7862 += 1 };
  s0 -> s2 [70, 70] { R7862 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R7862 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R7862 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R7862 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7862 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R7862 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R7862 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R7862 += 1, R65 += 1, R66 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R7864 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R7863 += 1, R7864 += 1 };
  s0 -> s2 [70, 70] { R7864 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R7864 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R7864 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R7864 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7864 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R7864 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R7864 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R7864 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R7884 += 1 };
  s0 -> s0 [0, 65535] { R7883 += 1, R7884 += 1 };
  s0 -> s2 [70, 70] { R7884 += 1 };
  s0 -> s1 [71, 65535] { R7884 += 1 };
  s1 -> s1 [0, 69] { R7884 += 1 };
  s1 -> s2 [70, 70] { R7884 += 1 };
  s1 -> s1 [71, 65535] { R7884 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R7884 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R7886 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R7885 += 1, R7886 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R7886 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R7888 += 1 };
  s0 -> s0 [0, 65535] { R7887 += 1, R7888 += 1 };
  s0 -> s2 [0, 65535] { R7888 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R7888 += 1 };
  s0 -> s1 [71, 65535] { R7888 += 1 };
  s1 -> s1 [0, 69] { R7888 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R7888 += 1 };
  s1 -> s1 [71, 65535] { R7888 += 1 };
  s2 -> s1 [0, 69] { R7888 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R7888 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R7888 += 1 };
  s2 -> s1 [71, 65535] { R7888 += 1 };
  s3 -> s3 [0, 65535] { R7888 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R7890 += 1, R7828 += 1 };
  s0 -> s0 [0, 65535] { R7889 += 1, R7890 += 1 };
  s0 -> s2 [0, 65535] { R7890 += 1, R7827 += 1, R7828 += 1 };
  s0 -> s1 [71, 65535] { R7890 += 1, R7828 += 1 };
  s1 -> s1 [0, 69] { R7890 += 1, R7828 += 1 };
  s1 -> s1 [0, 65535] { R7890 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R7890 += 1, R7828 += 1 };
  s2 -> s1 [0, 69] { R7890 += 1, R7828 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R7890 += 1, R7827 += 1, R7828 += 1 };
  s2 -> s1 [71, 65535] { R7890 += 1, R7828 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R7892 += 1, R7829 += 1, R7830 += 1 };
  s0 -> s2 [0, 65535] { R7892 += 1, R7830 += 1, R20 += 1 };
  s0 -> s0 [0, 65535] { R7891 += 1, R7892 += 1 };
  s1 -> s1 [0, 65535] { R7892 += 1, R7829 += 1, R7830 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R7892 += 1, R7830 += 1, R20 += 1 };
  s2 -> s3 [0, 65535] { R7892 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R7892 += 1, R7830 += 1, R20 += 1 };
  s3 -> s3 [0, 65535] { R7892 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R7894 += 1, R7832 += 1 };
  s0 -> s0 [0, 65535] { R7893 += 1, R7894 += 1 };
  s0 -> s2 [0, 65535] { R7894 += 1, R7831 += 1, R7832 += 1 };
  s0 -> s1 [75, 65535] { R7894 += 1, R7832 += 1 };
  s1 -> s1 [0, 70] { R7894 += 1, R7832 += 1 };
  s1 -> s1 [0, 65535] { R7894 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R7894 += 1, R7832 += 1 };
  s2 -> s1 [0, 70] { R7894 += 1, R7832 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R7894 += 1, R7831 += 1, R7832 += 1 };
  s2 -> s1 [75, 65535] { R7894 += 1, R7832 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R7895 += 1, R7896 += 1 };
  s0 -> s1 [0, 65535] { R7896 += 1, R7833 += 1, R7834 += 1 };
  s0 -> s2 [0, 65535] { R7896 += 1, R7834 += 1, R84 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R7896 += 1, R7833 += 1, R7834 += 1 };
  s1 -> s2 [0, 65535] { R7896 += 1, R7834 += 1, R84 += 1 };
  s2 -> s3 [0, 65535] { R7896 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R7896 += 1, R7834 += 1, R84 += 1 };
  s3 -> s3 [0, 65535] { R7896 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R7898 += 1, R7836 += 1 };
  s0 -> s2 [0, 65535] { R7898 += 1, R7835 += 1, R7836 += 1 };
  s0 -> s0 [0, 65535] { R7897 += 1, R7898 += 1 };
  s0 -> s3 [0, 65535] { R7898 += 1, R7836 += 1, R86 += 1 };
  s0 -> s1 [76, 65535] { R7898 += 1, R7836 += 1 };
  s1 -> s1 [0, 74] { R7898 += 1, R7836 += 1 };
  s1 -> s1 [0, 65535] { R7898 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R7898 += 1, R7836 += 1 };
  s2 -> s1 [0, 74] { R7898 += 1, R7836 += 1 };
  s2 -> s2 [0, 65535] { R7898 += 1, R7835 += 1, R7836 += 1 };
  s2 -> s3 [0, 65535] { R7898 += 1, R7836 += 1, R86 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [76, 65535] { R7898 += 1, R7836 += 1 };
  s3 -> s1 [0, 74] { R7898 += 1, R7836 += 1 };
  s3 -> s4 [0, 65535] { R7898 += 1 };
  s3 -> s3 [0, 65535] { R7898 += 1, R7836 += 1, R86 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [76, 65535] { R7898 += 1, R7836 += 1 };
  s4 -> s4 [0, 65535] { R7898 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R7900 += 1, R7838 += 1, R90 += 1 };
  s0 -> s2 [0, 65535] { R7900 += 1, R7838 += 1 };
  s0 -> s0 [0, 65535] { R7899 += 1, R7900 += 1 };
  s0 -> s3 [0, 65535] { R7900 += 1, R7837 += 1, R7838 += 1 };
  s1 -> s1 [0, 65535] { R7900 += 1, R7838 += 1, R90 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R7900 += 1, R7838 += 1 };
  s1 -> s5 [0, 65535] { R7900 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R7900 += 1, R7838 += 1 };
  s2 -> s5 [0, 65535] { R7900 += 1 };
  s3 -> s1 [0, 65535] { R7900 += 1, R7838 += 1, R90 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R7900 += 1, R7838 += 1 };
  s3 -> s3 [0, 65535] { R7900 += 1, R7837 += 1, R7838 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R7900 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R7902 += 1, R7839 += 1, R7840 += 1 };
  s0 -> s0 [0, 65535] { R7901 += 1, R7902 += 1 };
  s0 -> s2 [0, 65535] { R7902 += 1, R7840 += 1, R95 += 1, R96 += 1 };
  s0 -> s3 [0, 65535] { R7902 += 1, R7840 += 1, R94 += 1, R95 += 1 };
  s1 -> s1 [0, 65535] { R7902 += 1, R7839 += 1, R7840 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R7902 += 1, R7840 += 1, R95 += 1, R96 += 1 };
  s1 -> s3 [0, 65535] { R7902 += 1, R7840 += 1, R94 += 1, R95 += 1 };
  s2 -> s4 [0, 65535] { R7902 += 1 };
  s2 -> s6 [0, 65535] { R7902 += 1, R7840 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R7902 += 1, R7840 += 1, R95 += 1, R96 += 1 };
  s3 -> s4 [0, 65535] { R7902 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R7902 += 1, R7840 += 1, R95 += 1, R96 += 1 };
  s3 -> s3 [0, 65535] { R7902 += 1, R7840 += 1, R94 += 1, R95 += 1 };
  s4 -> s4 [0, 65535] { R7902 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R7902 += 1 };
  s6 -> s6 [0, 65535] { R7902 += 1, R7840 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R7904 += 1, R7842 += 1, R6809 += 1 };
  s0 -> s0 [0, 65535] { R7903 += 1, R7904 += 1 };
  s0 -> s2 [0, 65535] { R7904 += 1, R7841 += 1, R7842 += 1 };
  s0 -> s3 [0, 65535] { R7904 += 1, R7842 += 1 };
  s0 -> s4 [0, 65535] { R7904 += 1, R7842 += 1, R6809 += 1, R6810 += 1 };
  s0 -> s1 [76, 65535] { R7904 += 1, R7842 += 1, R6809 += 1 };
  s1 -> s1 [0, 74] { R7904 += 1, R7842 += 1, R6809 += 1 };
  s1 -> s5 [0, 65535] { R7904 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R7904 += 1, R7842 += 1 };
  s1 -> s1 [76, 65535] { R7904 += 1, R7842 += 1, R6809 += 1 };
  s2 -> s1 [0, 74] { R7904 += 1, R7842 += 1, R6809 += 1 };
  s2 -> s2 [0, 65535] { R7904 += 1, R7841 += 1, R7842 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R7904 += 1, R7842 += 1 };
  s2 -> s4 [0, 65535] { R7904 += 1, R7842 += 1, R6809 += 1, R6810 += 1 };
  s2 -> s1 [76, 65535] { R7904 += 1, R7842 += 1, R6809 += 1 };
  s3 -> s5 [0, 65535] { R7904 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R7904 += 1, R7842 += 1 };
  s4 -> s1 [0, 74] { R7904 += 1, R7842 += 1, R6809 += 1 };
  s4 -> s5 [0, 65535] { R7904 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s3 [0, 65535] { R7904 += 1, R7842 += 1 };
  s4 -> s4 [0, 65535] { R7904 += 1, R7842 += 1, R6809 += 1, R6810 += 1 };
  s4 -> s1 [76, 65535] { R7904 += 1, R7842 += 1, R6809 += 1 };
  s5 -> s5 [0, 65535] { R7904 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R7906 += 1, R7844 += 1 };
  s0 -> s0 [0, 65535] { R7905 += 1, R7906 += 1 };
  s0 -> s2 [0, 65535] { R7906 += 1, R7843 += 1, R7844 += 1 };
  s0 -> s3 [0, 65535] { R7906 += 1, R7844 += 1, R7374 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R7906 += 1, R7844 += 1 };
  s1 -> s5 [0, 65535] { R7906 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R7906 += 1, R7844 += 1 };
  s2 -> s2 [0, 65535] { R7906 += 1, R7843 += 1, R7844 += 1 };
  s2 -> s3 [0, 65535] { R7906 += 1, R7844 += 1, R7374 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R7906 += 1, R7844 += 1 };
  s3 -> s5 [0, 65535] { R7906 += 1 };
  s3 -> s3 [0, 65535] { R7906 += 1, R7844 += 1, R7374 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R7906 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s0 [0, 65535] { R7907 += 1, R7908 += 1 };
  s0 -> s1 [0, 65535] { R7908 += 1, R7846 += 1, R7823 += 1, R7824 += 1, R7825 += 1 };
  s0 -> s2 [0, 65535] { R7908 += 1, R7846 += 1, R7823 += 1, R7825 += 1, R7826 += 1 };
  s0 -> s3 [0, 65535] { R7908 += 1, R7846 += 1 };
  s0 -> s4 [0, 65535] { R7908 += 1, R7845 += 1, R7846 += 1 };
  s1 -> s1 [0, 65535] { R7908 += 1, R7846 += 1, R7823 += 1, R7824 += 1, R7825 += 1 };
  s1 -> s2 [0, 65535] { R7908 += 1, R7846 += 1, R7823 += 1, R7825 += 1, R7826 += 1 };
  s1 -> s6 [0, 65535] { R7908 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R7908 += 1, R7846 += 1 };
  s2 -> s7 [0, 65535] { R7908 += 1, R7846 += 1, R7823 += 1 };
  s2 -> s2 [0, 65535] { R7908 += 1, R7846 += 1, R7823 += 1, R7825 += 1, R7826 += 1 };
  s2 -> s6 [0, 65535] { R7908 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R7908 += 1, R7846 += 1 };
  s3 -> s6 [0, 65535] { R7908 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R7908 += 1, R7846 += 1 };
  s4 -> s1 [0, 65535] { R7908 += 1, R7846 += 1, R7823 += 1, R7824 += 1, R7825 += 1 };
  s4 -> s2 [0, 65535] { R7908 += 1, R7846 += 1, R7823 += 1, R7825 += 1, R7826 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R7908 += 1, R7846 += 1 };
  s4 -> s4 [0, 65535] { R7908 += 1, R7845 += 1, R7846 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7908 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R7908 += 1, R7846 += 1, R7823 += 1 };
  s7 -> s6 [0, 65535] { R7908 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s3 [0, 65535] { R7908 += 1, R7846 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R7910 += 1, R7866 += 1, R21 += 1 };
  s0 -> s2 [0, 65535] { R7910 += 1, R7865 += 1, R7866 += 1 };
  s0 -> s0 [0, 65535] { R7909 += 1, R7910 += 1 };
  s1 -> s1 [0, 65535] { R7910 += 1, R7866 += 1, R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R7910 += 1 };
  s2 -> s1 [0, 65535] { R7910 += 1, R7866 += 1, R21 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R7910 += 1, R7865 += 1, R7866 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R7910 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R7912 += 1, R7868 += 1 };
  s0 -> s0 [0, 65535] { R7911 += 1, R7912 += 1 };
  s0 -> s2 [0, 65535] { R7912 += 1, R7867 += 1, R7868 += 1 };
  s0 -> s3 [70, 70] { R7912 += 1, R7868 += 1 };
  s0 -> s4 [70, 70] { R7912 += 1, R7868 += 1 };
  s0 -> s5 [75, 75] { R7912 += 1, R7868 += 1 };
  s0 -> s1 [76, 65535] { R7912 += 1, R7868 += 1 };
  s1 -> s1 [0, 69] { R7912 += 1, R7868 += 1 };
  s1 -> s3 [70, 70] { R7912 += 1, R7868 += 1 };
  s1 -> s4 [70, 70] { R7912 += 1, R7868 += 1 };
  s1 -> s5 [75, 75] { R7912 += 1, R7868 += 1 };
  s1 -> s1 [76, 65535] { R7912 += 1, R7868 += 1 };
  s2 -> s1 [0, 69] { R7912 += 1, R7868 += 1 };
  s2 -> s2 [0, 65535] { R7912 += 1, R7867 += 1, R7868 += 1 };
  s2 -> s3 [70, 70] { R7912 += 1, R7868 += 1 };
  s2 -> s4 [70, 70] { R7912 += 1, R7868 += 1 };
  s2 -> s5 [75, 75] { R7912 += 1, R7868 += 1 };
  s2 -> s1 [76, 65535] { R7912 += 1, R7868 += 1 };
  s3 -> s3 [0, 70] { R7912 += 1, R7868 += 1 };
  s3 -> s7 [75, 75] { R7912 += 1, R7868 += 1 };
  s3 -> s3 [76, 65535] { R7912 += 1, R7868 += 1 };
  s5 -> s5 [0, 69] { R7912 += 1, R7868 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R7912 += 1 };
  s5 -> s7 [70, 70] { R7912 += 1, R7868 += 1 };
  s5 -> s8 [70, 70] { R7912 += 1, R7868 += 1 };
  s5 -> s5 [75, 65535] { R7912 += 1, R7868 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R7912 += 1, R7868 += 1 };
  s7 -> s7 [0, 65535] { R7912 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R7912 += 1, R7868 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R7912 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R7914 += 1, R7870 += 1, R83 += 1 };
  s0 -> s2 [0, 65535] { R7914 += 1, R7869 += 1, R7870 += 1 };
  s0 -> s0 [0, 65535] { R7913 += 1, R7914 += 1 };
  s0 -> s3 [70, 70] { R7914 += 1, R7870 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R7914 += 1, R7870 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R7914 += 1, R7870 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R7914 += 1, R7870 += 1, R83 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R7914 += 1 };
  s1 -> s3 [70, 70] { R7914 += 1, R7870 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R7914 += 1, R7870 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R7914 += 1, R7870 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R7914 += 1, R7870 += 1, R83 += 1 };
  s2 -> s2 [0, 65535] { R7914 += 1, R7869 += 1, R7870 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R7914 += 1, R7870 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R7914 += 1, R7870 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R7914 += 1, R7870 += 1, R83 += 1 };
  s3 -> s3 [0, 65535] { R7914 += 1, R7870 += 1, R83 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R7914 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R7914 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7914 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R7916 += 1, R7872 += 1, R85 += 1 };
  s0 -> s2 [0, 65535] { R7916 += 1, R7871 += 1, R7872 += 1 };
  s0 -> s0 [0, 65535] { R7915 += 1, R7916 += 1 };
  s0 -> s3 [70, 70] { R7916 += 1, R7872 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R7916 += 1, R7872 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R7916 += 1, R7872 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R7916 += 1, R7872 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R7916 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R7916 += 1, R7872 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R7916 += 1, R7872 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R7916 += 1, R7872 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R7916 += 1, R7872 += 1, R85 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R7916 += 1, R7871 += 1, R7872 += 1 };
  s2 -> s3 [70, 70] { R7916 += 1, R7872 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R7916 += 1, R7872 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R7916 += 1, R7872 += 1, R85 += 1 };
  s3 -> s3 [0, 65535] { R7916 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R7916 += 1, R7872 += 1, R85 += 1 };
  s4 -> s6 [0, 65535] { R7916 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7916 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R7918 += 1, R7874 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R7918 += 1, R7874 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R7917 += 1, R7918 += 1 };
  s0 -> s3 [0, 65535] { R7918 += 1, R7873 += 1, R7874 += 1 };
  s0 -> s4 [70, 70] { R7918 += 1, R7874 += 1, R87 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R7918 += 1, R7874 += 1, R87 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R7918 += 1, R7874 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R7918 += 1, R7874 += 1, R88 += 1 };
  s0 -> s1 [71, 74] { R7918 += 1, R7874 += 1, R88 += 1 };
  s0 -> s2 [71, 65535] { R7918 += 1, R7874 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R7918 += 1, R7874 += 1, R88 += 1 };
  s0 -> s1 [76, 65535] { R7918 += 1, R7874 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R7918 += 1, R7874 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R7918 += 1, R7874 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R7918 += 1, R7874 += 1, R88 += 1 };
  s1 -> s1 [71, 74] { R7918 += 1, R7874 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R7918 += 1, R7874 += 1, R88 += 1 };
  s1 -> s1 [76, 65535] { R7918 += 1, R7874 += 1, R88 += 1 };
  s2 -> s1 [0, 69] { R7918 += 1, R7874 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R7918 += 1, R7874 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R7918 += 1, R7874 += 1, R87 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R7918 += 1, R7874 += 1, R87 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R7918 += 1, R7874 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R7918 += 1, R7874 += 1, R88 += 1 };
  s2 -> s1 [71, 74] { R7918 += 1, R7874 += 1, R88 += 1 };
  s2 -> s2 [71, 65535] { R7918 += 1, R7874 += 1, R87 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R7918 += 1, R7874 += 1, R88 += 1 };
  s2 -> s1 [76, 65535] { R7918 += 1, R7874 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R7918 += 1, R7874 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R7918 += 1, R7874 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R7918 += 1, R7873 += 1, R7874 += 1 };
  s3 -> s4 [70, 70] { R7918 += 1, R7874 += 1, R87 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R7918 += 1, R7874 += 1, R87 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R7918 += 1, R7874 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R7918 += 1, R7874 += 1, R88 += 1 };
  s3 -> s1 [71, 74] { R7918 += 1, R7874 += 1, R88 += 1 };
  s3 -> s2 [71, 65535] { R7918 += 1, R7874 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R7918 += 1, R7874 += 1, R88 += 1 };
  s3 -> s1 [76, 65535] { R7918 += 1, R7874 += 1, R88 += 1 };
  s4 -> s7 [0, 74] { R7918 += 1, R7874 += 1, R88 += 1 };
  s4 -> s4 [0, 65535] { R7918 += 1, R7874 += 1, R87 += 1, R88 += 1 };
  s4 -> s10 [75, 75] { R7918 += 1, R7874 += 1, R88 += 1 };
  s4 -> s7 [76, 65535] { R7918 += 1, R7874 += 1, R88 += 1 };
  s7 -> s7 [0, 74] { R7918 += 1, R7874 += 1, R88 += 1 };
  s7 -> s10 [75, 75] { R7918 += 1, R7874 += 1, R88 += 1 };
  s7 -> s7 [76, 65535] { R7918 += 1, R7874 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R7918 += 1, R7874 += 1, R88 += 1 };
  s8 -> s8 [0, 65535] { R7918 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R7918 += 1, R7874 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R7918 += 1, R7874 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R7918 += 1, R7874 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R7918 += 1, R7874 += 1, R88 += 1 };
  s10 -> s12 [0, 65535] { R7918 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R7918 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R7918 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R7920 += 1, R7876 += 1, R91 += 1, R92 += 1 };
  s0 -> s0 [0, 65535] { R7919 += 1, R7920 += 1 };
  s0 -> s2 [0, 65535] { R7920 += 1, R7875 += 1, R7876 += 1 };
  s0 -> s3 [70, 70] { R7920 += 1, R7876 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R7920 += 1, R7876 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R7920 += 1, R7876 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R7920 += 1, R7876 += 1, R91 += 1, R92 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R7920 += 1 };
  s1 -> s3 [70, 70] { R7920 += 1, R7876 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R7920 += 1, R7876 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R7920 += 1, R7876 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R7920 += 1, R7876 += 1, R91 += 1, R92 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R7920 += 1, R7875 += 1, R7876 += 1 };
  s2 -> s3 [70, 70] { R7920 += 1, R7876 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R7920 += 1, R7876 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R7920 += 1, R7876 += 1, R91 += 1, R92 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R7920 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R7920 += 1 };
  s4 -> s4 [0, 65535] { R7920 += 1, R7876 += 1, R91 += 1, R92 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7920 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R7922 += 1, R7878 += 1, R6805 += 1, R6806 += 1 };
  s0 -> s2 [0, 69] { R7922 += 1, R7878 += 1, R6806 += 1, R6807 += 1 };
  s0 -> s3 [0, 65535] { R7922 += 1, R7877 += 1, R7878 += 1 };
  s0 -> s0 [0, 65535] { R7921 += 1, R7922 += 1 };
  s0 -> s4 [70, 70] { R7922 += 1, R7878 += 1, R6806 += 1, R6807 += 1 };
  s0 -> s5 [70, 70] { R7922 += 1, R7878 += 1, R6806 += 1, R6807 += 1 };
  s0 -> s6 [70, 70] { R7922 += 1, R7878 += 1, R6805 += 1, R6806 += 1 };
  s0 -> s7 [70, 70] { R7922 += 1, R7878 += 1, R6805 += 1, R6806 += 1 };
  s0 -> s1 [71, 65535] { R7922 += 1, R7878 += 1, R6805 += 1, R6806 += 1 };
  s0 -> s2 [71, 65535] { R7922 += 1, R7878 += 1, R6806 += 1, R6807 += 1 };
  s1 -> s1 [0, 69] { R7922 += 1, R7878 += 1, R6805 += 1, R6806 += 1 };
  s1 -> s2 [0, 69] { R7922 += 1, R7878 += 1, R6806 += 1, R6807 += 1 };
  s1 -> s4 [70, 70] { R7922 += 1, R7878 += 1, R6806 += 1, R6807 += 1 };
  s1 -> s5 [70, 70] { R7922 += 1, R7878 += 1, R6806 += 1, R6807 += 1 };
  s1 -> s6 [70, 70] { R7922 += 1, R7878 += 1, R6805 += 1, R6806 += 1 };
  s1 -> s7 [70, 70] { R7922 += 1, R7878 += 1, R6805 += 1, R6806 += 1 };
  s1 -> s1 [71, 65535] { R7922 += 1, R7878 += 1, R6805 += 1, R6806 += 1 };
  s1 -> s2 [71, 65535] { R7922 += 1, R7878 += 1, R6806 += 1, R6807 += 1 };
  s2 -> s2 [0, 69] { R7922 += 1, R7878 += 1, R6806 += 1, R6807 += 1 };
  s2 -> s2 [0, 65535] { R7922 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [70, 70] { R7922 += 1, R7878 += 1, R6806 += 1, R6807 += 1 };
  s2 -> s5 [70, 70] { R7922 += 1, R7878 += 1, R6806 += 1, R6807 += 1 };
  s2 -> s2 [71, 65535] { R7922 += 1, R7878 += 1, R6806 += 1, R6807 += 1 };
  s3 -> s1 [0, 69] { R7922 += 1, R7878 += 1, R6805 += 1, R6806 += 1 };
  s3 -> s2 [0, 69] { R7922 += 1, R7878 += 1, R6806 += 1, R6807 += 1 };
  s3 -> s3 [0, 65535] { R7922 += 1, R7877 += 1, R7878 += 1 };
  s3 -> s4 [70, 70] { R7922 += 1, R7878 += 1, R6806 += 1, R6807 += 1 };
  s3 -> s5 [70, 70] { R7922 += 1, R7878 += 1, R6806 += 1, R6807 += 1 };
  s3 -> s6 [70, 70] { R7922 += 1, R7878 += 1, R6805 += 1, R6806 += 1 };
  s3 -> s7 [70, 70] { R7922 += 1, R7878 += 1, R6805 += 1, R6806 += 1 };
  s3 -> s1 [71, 65535] { R7922 += 1, R7878 += 1, R6805 += 1, R6806 += 1 };
  s3 -> s2 [71, 65535] { R7922 += 1, R7878 += 1, R6806 += 1, R6807 += 1 };
  s4 -> s4 [0, 65535] { R7922 += 1, R7878 += 1, R6806 += 1, R6807 += 1 };
  s4 -> s9 [0, 65535] { R7922 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R7922 += 1 };
  s5 -> s8 [0, 65535];
  s7 -> s4 [0, 65535] { R7922 += 1, R7878 += 1, R6806 += 1, R6807 += 1 };
  s7 -> s7 [0, 65535] { R7922 += 1, R7878 += 1, R6805 += 1, R6806 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R7922 += 1 };
  s9 -> s8 [0, 65535];
  accepting s4, s8, s5, s2, s9;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s0 -> s2 [0, 69] { R7924 += 1, R7880 += 1, R7370 += 1, R7371 += 1, R7372 += 1 };
  s0 -> s3 [0, 69] { R7924 += 1, R7880 += 1, R7369 += 1, R7370 += 1 };
  s0 -> s0 [0, 65535] { R7923 += 1, R7924 += 1 };
  s0 -> s4 [0, 65535] { R7924 += 1, R7879 += 1, R7880 += 1 };
  s0 -> s5 [70, 70] { R7924 += 1, R7880 += 1, R7369 += 1, R7370 += 1 };
  s0 -> s6 [70, 70] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s0 -> s7 [70, 70] { R7924 += 1, R7880 += 1, R7369 += 1, R7370 += 1 };
  s0 -> s8 [70, 70] { R7924 += 1, R7880 += 1, R7370 += 1, R7371 += 1, R7372 += 1 };
  s0 -> s9 [70, 70] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s0 -> s10 [70, 70] { R7924 += 1, R7880 += 1, R7370 += 1, R7371 += 1, R7372 += 1 };
  s0 -> s1 [71, 74] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s0 -> s2 [71, 65535] { R7924 += 1, R7880 += 1, R7370 += 1, R7371 += 1, R7372 += 1 };
  s0 -> s3 [71, 65535] { R7924 += 1, R7880 += 1, R7369 += 1, R7370 += 1 };
  s0 -> s11 [75, 75] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s0 -> s1 [76, 65535] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s1 -> s1 [0, 69] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s1 -> s6 [70, 70] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s1 -> s9 [70, 70] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s1 -> s1 [71, 74] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s1 -> s11 [75, 75] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s1 -> s1 [76, 65535] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s2 -> s1 [0, 69] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s2 -> s2 [0, 69] { R7924 += 1, R7880 += 1, R7370 += 1, R7371 += 1, R7372 += 1 };
  s2 -> s6 [70, 70] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s2 -> s8 [70, 70] { R7924 += 1, R7880 += 1, R7370 += 1, R7371 += 1, R7372 += 1 };
  s2 -> s9 [70, 70] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s2 -> s10 [70, 70] { R7924 += 1, R7880 += 1, R7370 += 1, R7371 += 1, R7372 += 1 };
  s2 -> s1 [71, 74] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s2 -> s2 [71, 65535] { R7924 += 1, R7880 += 1, R7370 += 1, R7371 += 1, R7372 += 1 };
  s2 -> s11 [75, 75] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s2 -> s1 [76, 65535] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s3 -> s1 [0, 69] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s3 -> s2 [0, 69] { R7924 += 1, R7880 += 1, R7370 += 1, R7371 += 1, R7372 += 1 };
  s3 -> s3 [0, 69] { R7924 += 1, R7880 += 1, R7369 += 1, R7370 += 1 };
  s3 -> s5 [70, 70] { R7924 += 1, R7880 += 1, R7369 += 1, R7370 += 1 };
  s3 -> s6 [70, 70] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s3 -> s7 [70, 70] { R7924 += 1, R7880 += 1, R7369 += 1, R7370 += 1 };
  s3 -> s8 [70, 70] { R7924 += 1, R7880 += 1, R7370 += 1, R7371 += 1, R7372 += 1 };
  s3 -> s9 [70, 70] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s3 -> s10 [70, 70] { R7924 += 1, R7880 += 1, R7370 += 1, R7371 += 1, R7372 += 1 };
  s3 -> s1 [71, 74] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s3 -> s2 [71, 65535] { R7924 += 1, R7880 += 1, R7370 += 1, R7371 += 1, R7372 += 1 };
  s3 -> s3 [71, 65535] { R7924 += 1, R7880 += 1, R7369 += 1, R7370 += 1 };
  s3 -> s11 [75, 75] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s3 -> s1 [76, 65535] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s4 -> s1 [0, 69] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s4 -> s2 [0, 69] { R7924 += 1, R7880 += 1, R7370 += 1, R7371 += 1, R7372 += 1 };
  s4 -> s3 [0, 69] { R7924 += 1, R7880 += 1, R7369 += 1, R7370 += 1 };
  s4 -> s4 [0, 65535] { R7924 += 1, R7879 += 1, R7880 += 1 };
  s4 -> s5 [70, 70] { R7924 += 1, R7880 += 1, R7369 += 1, R7370 += 1 };
  s4 -> s6 [70, 70] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s4 -> s7 [70, 70] { R7924 += 1, R7880 += 1, R7369 += 1, R7370 += 1 };
  s4 -> s8 [70, 70] { R7924 += 1, R7880 += 1, R7370 += 1, R7371 += 1, R7372 += 1 };
  s4 -> s9 [70, 70] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s4 -> s10 [70, 70] { R7924 += 1, R7880 += 1, R7370 += 1, R7371 += 1, R7372 += 1 };
  s4 -> s1 [71, 74] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s4 -> s2 [71, 65535] { R7924 += 1, R7880 += 1, R7370 += 1, R7371 += 1, R7372 += 1 };
  s4 -> s3 [71, 65535] { R7924 += 1, R7880 += 1, R7369 += 1, R7370 += 1 };
  s4 -> s11 [75, 75] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s4 -> s1 [76, 65535] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s5 -> s9 [0, 74] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s5 -> s5 [0, 65535] { R7924 += 1, R7880 += 1, R7369 += 1, R7370 += 1 };
  s5 -> s10 [0, 65535] { R7924 += 1, R7880 += 1, R7370 += 1, R7371 += 1, R7372 += 1 };
  s5 -> s16 [75, 75] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s5 -> s9 [76, 65535] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s9 -> s9 [0, 74] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s9 -> s16 [75, 75] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s9 -> s9 [76, 65535] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s10 -> s9 [0, 74] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s10 -> s10 [0, 65535] { R7924 += 1, R7880 += 1, R7370 += 1, R7371 += 1, R7372 += 1 };
  s10 -> s16 [75, 75] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s10 -> s9 [76, 65535] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s11 -> s11 [0, 69] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s11 -> s12 [0, 69] { R7924 += 1, R7880 += 1, R7370 += 1 };
  s11 -> s13 [70, 70] { R7924 += 1, R7880 += 1, R7370 += 1 };
  s11 -> s14 [70, 70] { R7924 += 1, R7880 += 1, R7370 += 1 };
  s11 -> s15 [70, 70] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s11 -> s16 [70, 70] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s11 -> s11 [71, 65535] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s11 -> s12 [71, 65535] { R7924 += 1, R7880 += 1, R7370 += 1 };
  s12 -> s12 [0, 69] { R7924 += 1, R7880 += 1, R7370 += 1 };
  s12 -> s17 [0, 65535];
  s12 -> s12 [0, 65535] { R7924 += 1 };
  s12 -> s13 [70, 70] { R7924 += 1, R7880 += 1, R7370 += 1 };
  s12 -> s14 [70, 70] { R7924 += 1, R7880 += 1, R7370 += 1 };
  s12 -> s12 [71, 65535] { R7924 += 1, R7880 += 1, R7370 += 1 };
  s13 -> s17 [0, 65535];
  s13 -> s18 [0, 65535] { R7924 += 1 };
  s13 -> s13 [0, 65535] { R7924 += 1, R7880 += 1, R7370 += 1 };
  s14 -> s17 [0, 65535];
  s14 -> s14 [0, 65535] { R7924 += 1 };
  s16 -> s13 [0, 65535] { R7924 += 1, R7880 += 1, R7370 += 1 };
  s16 -> s16 [0, 65535] { R7924 += 1, R7880 += 1, R7370 += 1, R7372 += 1 };
  s17 -> s17 [0, 65535];
  s18 -> s17 [0, 65535];
  s18 -> s18 [0, 65535] { R7924 += 1 };
  accepting s17, s12, s13, s14, s18;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R7926 += 1, R7882 += 1, R7817 += 1, R7818 += 1 };
  s0 -> s2 [0, 69] { R7926 += 1, R7882 += 1, R7818 += 1, R7819 += 1, R7820 += 1 };
  s0 -> s0 [0, 65535] { R7925 += 1, R7926 += 1 };
  s0 -> s3 [0, 65535] { R7926 += 1, R7881 += 1, R7882 += 1 };
  s0 -> s4 [70, 70] { R7926 += 1, R7882 += 1, R7817 += 1, R7818 += 1 };
  s0 -> s5 [70, 70] { R7926 += 1, R7882 += 1, R7818 += 1, R7819 += 1, R7820 += 1 };
  s0 -> s6 [70, 70] { R7926 += 1, R7882 += 1, R7817 += 1, R7818 += 1 };
  s0 -> s7 [70, 70] { R7926 += 1, R7882 += 1, R7818 += 1, R7819 += 1, R7820 += 1 };
  s0 -> s1 [71, 65535] { R7926 += 1, R7882 += 1, R7817 += 1, R7818 += 1 };
  s0 -> s2 [71, 65535] { R7926 += 1, R7882 += 1, R7818 += 1, R7819 += 1, R7820 += 1 };
  s1 -> s1 [0, 69] { R7926 += 1, R7882 += 1, R7817 += 1, R7818 += 1 };
  s1 -> s2 [0, 69] { R7926 += 1, R7882 += 1, R7818 += 1, R7819 += 1, R7820 += 1 };
  s1 -> s4 [70, 70] { R7926 += 1, R7882 += 1, R7817 += 1, R7818 += 1 };
  s1 -> s5 [70, 70] { R7926 += 1, R7882 += 1, R7818 += 1, R7819 += 1, R7820 += 1 };
  s1 -> s6 [70, 70] { R7926 += 1, R7882 += 1, R7817 += 1, R7818 += 1 };
  s1 -> s7 [70, 70] { R7926 += 1, R7882 += 1, R7818 += 1, R7819 += 1, R7820 += 1 };
  s1 -> s1 [71, 65535] { R7926 += 1, R7882 += 1, R7817 += 1, R7818 += 1 };
  s1 -> s2 [71, 65535] { R7926 += 1, R7882 += 1, R7818 += 1, R7819 += 1, R7820 += 1 };
  s2 -> s2 [0, 69] { R7926 += 1, R7882 += 1, R7818 += 1, R7819 += 1, R7820 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R7926 += 1 };
  s2 -> s5 [70, 70] { R7926 += 1, R7882 += 1, R7818 += 1, R7819 += 1, R7820 += 1 };
  s2 -> s7 [70, 70] { R7926 += 1, R7882 += 1, R7818 += 1, R7819 += 1, R7820 += 1 };
  s2 -> s2 [71, 65535] { R7926 += 1, R7882 += 1, R7818 += 1, R7819 += 1, R7820 += 1 };
  s3 -> s1 [0, 69] { R7926 += 1, R7882 += 1, R7817 += 1, R7818 += 1 };
  s3 -> s2 [0, 69] { R7926 += 1, R7882 += 1, R7818 += 1, R7819 += 1, R7820 += 1 };
  s3 -> s3 [0, 65535] { R7926 += 1, R7881 += 1, R7882 += 1 };
  s3 -> s4 [70, 70] { R7926 += 1, R7882 += 1, R7817 += 1, R7818 += 1 };
  s3 -> s5 [70, 70] { R7926 += 1, R7882 += 1, R7818 += 1, R7819 += 1, R7820 += 1 };
  s3 -> s6 [70, 70] { R7926 += 1, R7882 += 1, R7817 += 1, R7818 += 1 };
  s3 -> s7 [70, 70] { R7926 += 1, R7882 += 1, R7818 += 1, R7819 += 1, R7820 += 1 };
  s3 -> s1 [71, 65535] { R7926 += 1, R7882 += 1, R7817 += 1, R7818 += 1 };
  s3 -> s2 [71, 65535] { R7926 += 1, R7882 += 1, R7818 += 1, R7819 += 1, R7820 += 1 };
  s4 -> s4 [0, 65535] { R7926 += 1, R7882 += 1, R7817 += 1, R7818 += 1 };
  s4 -> s5 [0, 65535] { R7926 += 1, R7882 += 1, R7818 += 1, R7819 += 1, R7820 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s9 [0, 65535] { R7926 += 1 };
  s5 -> s5 [0, 65535] { R7926 += 1, R7882 += 1, R7818 += 1, R7819 += 1, R7820 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R7926 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R7926 += 1 };
  accepting s8, s5, s2, s9, s7;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R7926 && R23 - R7926 = -1 && R24 = R7926 && R25 - R7926 = -1 && R26 = R7926 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R7374 + -1*R7370 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R7374 + -1*R7370 - R66 = 0 && R55 + R96 + R93 + -1*R7376 + -1*R7372 - R68 = 0 && R65 + R7373 + R7369 = 0 && R67 + R7375 + R7371 = 0 && R7867 = 0 && R7868 = 0 && R7873 = 0 && R7874 = 0 && R7877 = 0 && R7878 = 0 && R7879 = 0 && R7880 = 0 && R7881 = 0 && R7882 = 0 && R7883 = 0 && R7884 = R7926 && R7885 = 0 && R7886 = R7926 && R7887 = 0 && R7888 = R7926 && R7889 = 0 && R7890 = R7926 && R7891 = 0 && R7892 = R7926 && R7893 = 0 && R7894 = R7926 && R7895 = 0 && R7896 = R7926 && R7897 = 0 && R7898 = R7926 && R7899 = 0 && R7900 = R7926 && R7901 = 0 && R7902 = R7926 && R7903 = 0 && R7904 = R7926 && R7905 = 0 && R7906 = R7926 && R7907 = 0 && R7908 = R7926 && R7909 = 0 && R7910 = R7926 && R7911 = 0 && R7912 = R7926 && R7913 = 0 && R7914 = R7926 && R7915 = 0 && R7916 = R7926 && R7917 = 0 && R7918 = R7926 && R7919 = 0 && R7920 = R7926 && R7921 = 0 && R7922 = R7926 && R7923 = 0 && R7924 = R7926 && R7925 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R6810 + R6807 < 1 && -1*R7374 + -1*R7370 - R66 < 1 && -1*R7376 + -1*R7372 - R68 < 1 && 0 < R7926 && (R2 != 0 || R20 = 0 || (R7827 = 0 && R7828 = 0)) && (R2 != 0 || R20 = 0 || (R7829 = 0 && R7830 = 0)) && (R2 != 0 || R20 = 0 || (R7831 = 0 && R7832 = 0)) && (R2 != 0 || R20 = 0 || (R7833 = 0 && R7834 = 0)) && (R2 != 0 || R20 = 0 || (R7835 = 0 && R7836 = 0)) && (R2 != 0 || R20 = 0 || (R7837 = 0 && R7838 = 0)) && (R2 != 0 || R20 = 0 || (R7839 = 0 && R7840 = 0)) && (R2 != 0 || R20 = 0 || (R7841 = 0 && R7842 = 0)) && (R2 != 0 || R20 = 0 || (R7843 = 0 && R7844 = 0)) && (R2 != 0 || R20 = 0 || (R7845 = 0 && R7846 = 0)) && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R7374 + -1*R7370 - R66 = 0 || R66 + R7374 + R7370 < 1) && (R59 + R6808 + R6805 != 0 || R60 + R6809 + R6806 + -1*R7374 + -1*R7370 - R66 = 0 || R66 + R7374 + R7370 < 1) && (R66 + R7374 + R7370 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R7376 + R7372 < 1) && (R53 + R94 + R91 = 0 || R68 + R7376 + R7372 < 1))) && (R66 + R7374 + R7370 != 0 || ((R59 + R6808 + R6805 != 0 || R60 + R6809 + R6806 = 0 || R68 + R7376 + R7372 < 1) && (R59 + R6808 + R6805 = 0 || R68 + R7376 + R7372 < 1))) && (R66 + R7374 + R7370 != 0 || ((R73 + R7822 + R7817 != 0 || R74 + R7823 + R7818 = 0 || R68 + R7376 + R7372 < 1) && (R73 + R7822 + R7817 = 0 || R68 + R7376 + R7372 < 1))) && (R68 + R7376 + R7372 != 0 || R77 + R7826 + R7821 = 0 || (R75 + R7824 + R7819 = 0 && R76 + R7825 + R7820 = 0)) && (R73 + R7822 + R7817 != 0 || R66 + R7374 + R7370 + -1*R7823 + -1*R7818 - R74 = 0 || R66 + R7374 + R7370 < 1) && (R75 + R7824 + R7819 != 0 || R68 + R7376 + R7372 + -1*R7825 + -1*R7820 - R76 = 0 || R68 + R7376 + R7372 < 1) && (R7827 != 0 || R2 = R7828 || R2 < 1) && (R7829 != 0 || R2 = R7830 || R2 < 1) && (R7831 != 0 || R2 = R7832 || R2 < 1) && (R7833 != 0 || R2 = R7834 || R2 < 1) && (R7835 != 0 || R2 = R7836 || R2 < 1) && (R7837 != 0 || R2 = R7838 || R2 < 1) && (R7839 != 0 || R2 = R7840 || R2 < 1) && (R7841 != 0 || R2 = R7842 || R2 < 1) && (R7843 != 0 || R2 = R7844 || R2 < 1) && (R7845 != 0 || R2 = R7846 || R2 < 1) && (R21 = 0 || (R7865 = 0 && R7866 = 0)) && (R21 = 0 || (R7869 = 0 && R7870 = 0)) && (R21 = 0 || (R7871 = 0 && R7872 = 0)) && (R21 = 0 || (R7875 = 0 && R7876 = 0)) && (R22 = 0 || (R7847 = 0 && R7848 = 0)) && (R22 = 0 || (R7849 = 0 && R7850 = 0)) && (R22 = 0 || (R7851 = 0 && R7852 = 0)) && (R22 = 0 || (R7853 = 0 && R7854 = 0)) && (R22 = 0 || (R7855 = 0 && R7856 = 0)) && (R22 = 0 || (R7857 = 0 && R7858 = 0)) && (R22 = 0 || (R7859 = 0 && R7860 = 0)) && (R22 = 0 || (R7861 = 0 && R7862 = 0)) && (R22 = 0 || (R7863 = 0 && R7864 = 0)) && (R53 + R94 + R91 = 0 || R66 + R7374 + R7370 < 1) && (R59 + R6808 + R6805 = 0 || R66 + R7374 + R7370 < 1) && (R73 + R7822 + R7817 = 0 || R66 + R7374 + R7370 < 1) && (R75 + R7824 + R7819 = 0 || R68 + R7376 + R7372 < 1) && (R7827 = 0 || R2 < 1) && (R7829 = 0 || R2 < 1) && (R7831 = 0 || R2 < 1) && (R7833 = 0 || R2 < 1) && (R7835 = 0 || R2 < 1) && (R7837 = 0 || R2 < 1) && (R7839 = 0 || R2 < 1) && (R7841 = 0 || R2 < 1) && (R7843 = 0 || R2 < 1) && (R7845 = 0 || R2 < 1);
// End of Parikh automata intersection problem
