// Parikh automata intersection problem, generated by OSTRICH+
counter int R12, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R3451, R3452, R3453, R3454, R3455, R3456, R4, R45, R4573, R4574, R4575, R4576, R4577, R4578, R4579, R4580, R4581, R4582, R4583, R4584, R4585, R4586, R4587, R4588, R4589, R4590, R4591, R4592, R4593, R4594, R4595, R4596, R4597, R4598, R4599, R4600, R4601, R4602, R4603, R4604, R4605, R4606, R4607, R4608, R4609, R4610, R4611, R4612, R4613, R4614, R4615, R4616, R4617, R4618, R4619, R4620, R4621, R4622, R4623, R4624, R4625, R4626, R4627, R4628, R4629, R4630, R4631, R4632, R4633, R4634, R4635, R4636, R4637, R4638, R4639, R4640, R4641, R4642, R4643, R4644, R4645, R4646, R4647, R4648, R4649, R4650, R4651, R4652, R4653, R4654, R4655, R4656, R4657, R4658, R4659, R4660, R4661, R4662, R4663, R4664, R4665, R4666, R4667, R4668, R4669, R4670, R4671, R4672, R4673, R4674, R4675, R4676, R4677, R4678, R4679, R4680, R4681, R4682, R4683, R4684, R4685, R4686, R4687, R4688, R4689, R4690, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R4611 += 1, R4612 += 1 };
  s0 -> s1 [0, 65535] { R4612 += 1, R22 += 1 };
  s1 -> s1 [0, 65535] { R4612 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R4614 += 1 };
  s0 -> s0 [0, 65535] { R4613 += 1, R4614 += 1 };
  s0 -> s2 [70, 70] { R4614 += 1 };
  s0 -> s3 [70, 70] { R4614 += 1 };
  s0 -> s1 [76, 65535] { R4614 += 1 };
  s1 -> s1 [0, 69] { R4614 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4614 += 1 };
  s1 -> s3 [70, 70] { R4614 += 1 };
  s1 -> s1 [76, 65535] { R4614 += 1 };
  s2 -> s2 [0, 70] { R4614 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R4614 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R4616 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R4615 += 1, R4616 += 1 };
  s0 -> s2 [70, 70] { R4616 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R4616 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R4616 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R4616 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4616 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R4616 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R4616 += 1, R45 += 1 };
  s2 -> s2 [0, 65535] { R4616 += 1, R45 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R4618 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R4617 += 1, R4618 += 1 };
  s0 -> s2 [70, 70] { R4618 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R4618 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R4618 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R4618 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4618 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R4618 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R4618 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R4618 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R4620 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R4619 += 1, R4620 += 1 };
  s0 -> s2 [70, 70] { R4620 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R4620 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R4620 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R4620 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4620 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R4620 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R4620 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535] { R4620 += 1, R49 += 1, R50 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R4622 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R4621 += 1, R4622 += 1 };
  s0 -> s2 [70, 70] { R4622 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R4622 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R4622 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R4622 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4622 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R4622 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R4622 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4622 += 1, R53 += 1, R54 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R4624 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R4623 += 1, R4624 += 1 };
  s0 -> s2 [70, 70] { R4624 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R4624 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R4624 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R4624 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4624 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R4624 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R4624 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R4624 += 1, R59 += 1, R60 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R4626 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R4625 += 1, R4626 += 1 };
  s0 -> s2 [70, 70] { R4626 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R4626 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R4626 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R4626 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4626 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R4626 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R4626 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4626 += 1, R65 += 1, R66 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R4628 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R4627 += 1, R4628 += 1 };
  s0 -> s2 [70, 70] { R4628 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R4628 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R4628 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R4628 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4628 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R4628 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R4628 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R4628 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R4648 += 1 };
  s0 -> s0 [0, 65535] { R4647 += 1, R4648 += 1 };
  s0 -> s2 [70, 70] { R4648 += 1 };
  s0 -> s1 [71, 65535] { R4648 += 1 };
  s1 -> s1 [0, 69] { R4648 += 1 };
  s1 -> s2 [70, 70] { R4648 += 1 };
  s1 -> s1 [71, 65535] { R4648 += 1 };
  s2 -> s2 [0, 65535] { R4648 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R4650 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R4649 += 1, R4650 += 1 };
  s1 -> s1 [0, 65535] { R4650 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R4652 += 1 };
  s0 -> s0 [0, 65535] { R4651 += 1, R4652 += 1 };
  s0 -> s2 [0, 65535] { R4652 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R4652 += 1 };
  s0 -> s1 [71, 65535] { R4652 += 1 };
  s1 -> s1 [0, 69] { R4652 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R4652 += 1 };
  s1 -> s1 [71, 65535] { R4652 += 1 };
  s2 -> s1 [0, 69] { R4652 += 1 };
  s2 -> s2 [0, 65535] { R4652 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R4652 += 1 };
  s2 -> s1 [71, 65535] { R4652 += 1 };
  s3 -> s3 [0, 65535] { R4652 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R4654 += 1, R4592 += 1 };
  s0 -> s0 [0, 65535] { R4653 += 1, R4654 += 1 };
  s0 -> s2 [0, 65535] { R4654 += 1, R4591 += 1, R4592 += 1 };
  s0 -> s1 [71, 65535] { R4654 += 1, R4592 += 1 };
  s1 -> s1 [0, 69] { R4654 += 1, R4592 += 1 };
  s1 -> s1 [0, 65535] { R4654 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R4654 += 1, R4592 += 1 };
  s2 -> s1 [0, 69] { R4654 += 1, R4592 += 1 };
  s2 -> s2 [0, 65535] { R4654 += 1, R4591 += 1, R4592 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R4654 += 1, R4592 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R4656 += 1, R4593 += 1, R4594 += 1 };
  s0 -> s2 [0, 65535] { R4656 += 1, R4594 += 1, R20 += 1 };
  s0 -> s0 [0, 65535] { R4655 += 1, R4656 += 1 };
  s1 -> s1 [0, 65535] { R4656 += 1, R4593 += 1, R4594 += 1 };
  s1 -> s2 [0, 65535] { R4656 += 1, R4594 += 1, R20 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R4656 += 1 };
  s2 -> s2 [0, 65535] { R4656 += 1, R4594 += 1, R20 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4656 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R4658 += 1, R4596 += 1 };
  s0 -> s0 [0, 65535] { R4657 += 1, R4658 += 1 };
  s0 -> s2 [0, 65535] { R4658 += 1, R4595 += 1, R4596 += 1 };
  s0 -> s1 [75, 65535] { R4658 += 1, R4596 += 1 };
  s1 -> s1 [0, 70] { R4658 += 1, R4596 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4658 += 1 };
  s1 -> s1 [75, 65535] { R4658 += 1, R4596 += 1 };
  s2 -> s1 [0, 70] { R4658 += 1, R4596 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4658 += 1, R4595 += 1, R4596 += 1 };
  s2 -> s1 [75, 65535] { R4658 += 1, R4596 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R4660 += 1, R4598 += 1, R84 += 1 };
  s0 -> s2 [0, 65535] { R4660 += 1, R4597 += 1, R4598 += 1 };
  s0 -> s0 [0, 65535] { R4659 += 1, R4660 += 1 };
  s1 -> s1 [0, 65535] { R4660 += 1, R4598 += 1, R84 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R4660 += 1 };
  s2 -> s1 [0, 65535] { R4660 += 1, R4598 += 1, R84 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4660 += 1, R4597 += 1, R4598 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4660 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R4662 += 1, R4600 += 1 };
  s0 -> s2 [0, 65535] { R4662 += 1, R4599 += 1, R4600 += 1 };
  s0 -> s0 [0, 65535] { R4661 += 1, R4662 += 1 };
  s0 -> s3 [0, 65535] { R4662 += 1, R4600 += 1, R86 += 1 };
  s0 -> s1 [76, 65535] { R4662 += 1, R4600 += 1 };
  s1 -> s1 [0, 74] { R4662 += 1, R4600 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4662 += 1 };
  s1 -> s1 [76, 65535] { R4662 += 1, R4600 += 1 };
  s2 -> s1 [0, 74] { R4662 += 1, R4600 += 1 };
  s2 -> s2 [0, 65535] { R4662 += 1, R4599 += 1, R4600 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R4662 += 1, R4600 += 1, R86 += 1 };
  s2 -> s1 [76, 65535] { R4662 += 1, R4600 += 1 };
  s3 -> s1 [0, 74] { R4662 += 1, R4600 += 1 };
  s3 -> s4 [0, 65535] { R4662 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4662 += 1, R4600 += 1, R86 += 1 };
  s3 -> s1 [76, 65535] { R4662 += 1, R4600 += 1 };
  s4 -> s4 [0, 65535] { R4662 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R4664 += 1, R4601 += 1, R4602 += 1 };
  s0 -> s2 [0, 65535] { R4664 += 1, R4602 += 1 };
  s0 -> s3 [0, 65535] { R4664 += 1, R4602 += 1, R90 += 1 };
  s0 -> s0 [0, 65535] { R4663 += 1, R4664 += 1 };
  s1 -> s1 [0, 65535] { R4664 += 1, R4601 += 1, R4602 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R4664 += 1, R4602 += 1 };
  s1 -> s3 [0, 65535] { R4664 += 1, R4602 += 1, R90 += 1 };
  s2 -> s4 [0, 65535] { R4664 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4664 += 1, R4602 += 1 };
  s3 -> s4 [0, 65535] { R4664 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R4664 += 1, R4602 += 1 };
  s3 -> s3 [0, 65535] { R4664 += 1, R4602 += 1, R90 += 1 };
  s4 -> s4 [0, 65535] { R4664 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R4666 += 1, R4604 += 1, R94 += 1, R95 += 1 };
  s0 -> s2 [0, 65535] { R4666 += 1, R4603 += 1, R4604 += 1 };
  s0 -> s0 [0, 65535] { R4665 += 1, R4666 += 1 };
  s0 -> s3 [0, 65535] { R4666 += 1, R4604 += 1, R95 += 1, R96 += 1 };
  s1 -> s1 [0, 65535] { R4666 += 1, R4604 += 1, R94 += 1, R95 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R4666 += 1 };
  s1 -> s3 [0, 65535] { R4666 += 1, R4604 += 1, R95 += 1, R96 += 1 };
  s2 -> s1 [0, 65535] { R4666 += 1, R4604 += 1, R94 += 1, R95 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4666 += 1, R4603 += 1, R4604 += 1 };
  s2 -> s3 [0, 65535] { R4666 += 1, R4604 += 1, R95 += 1, R96 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R4666 += 1, R4604 += 1 };
  s3 -> s6 [0, 65535] { R4666 += 1 };
  s3 -> s3 [0, 65535] { R4666 += 1, R4604 += 1, R95 += 1, R96 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4666 += 1, R4604 += 1 };
  s5 -> s6 [0, 65535] { R4666 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R4666 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R4668 += 1, R4606 += 1, R3455 += 1 };
  s0 -> s2 [0, 65535] { R4668 += 1, R4605 += 1, R4606 += 1 };
  s0 -> s0 [0, 65535] { R4667 += 1, R4668 += 1 };
  s0 -> s1 [0, 65535] { R4668 += 1, R4606 += 1 };
  s0 -> s1 [76, 65535] { R4668 += 1, R4606 += 1, R3455 += 1 };
  s1 -> s1 [0, 74] { R4668 += 1, R4606 += 1, R3455 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R4668 += 1 };
  s1 -> s1 [0, 65535] { R4668 += 1, R4606 += 1 };
  s1 -> s1 [76, 65535] { R4668 += 1, R4606 += 1, R3455 += 1 };
  s2 -> s1 [0, 74] { R4668 += 1, R4606 += 1, R3455 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4668 += 1, R4605 += 1, R4606 += 1 };
  s2 -> s1 [0, 65535] { R4668 += 1, R4606 += 1 };
  s2 -> s1 [76, 65535] { R4668 += 1, R4606 += 1, R3455 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4668 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R4670 += 1, R4607 += 1, R4608 += 1 };
  s0 -> s0 [0, 65535] { R4669 += 1, R4670 += 1 };
  s0 -> s2 [0, 65535] { R4670 += 1, R4608 += 1 };
  s1 -> s1 [0, 65535] { R4670 += 1, R4607 += 1, R4608 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R4670 += 1, R4608 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R4670 += 1 };
  s2 -> s2 [0, 65535] { R4670 += 1, R4608 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4670 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s0 [0, 65535] { R4671 += 1, R4672 += 1 };
  s0 -> s1 [0, 65535] { R4672 += 1, R4610 += 1 };
  s0 -> s2 [0, 65535] { R4672 += 1, R4609 += 1, R4610 += 1 };
  s0 -> s3 [0, 65535] { R4672 += 1, R4610 += 1, R4587 += 1 };
  s1 -> s1 [0, 65535] { R4672 += 1, R4610 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R4672 += 1 };
  s2 -> s1 [0, 65535] { R4672 += 1, R4610 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4672 += 1, R4609 += 1, R4610 += 1 };
  s2 -> s3 [0, 65535] { R4672 += 1, R4610 += 1, R4587 += 1 };
  s3 -> s1 [0, 65535] { R4672 += 1, R4610 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R4672 += 1 };
  s3 -> s3 [0, 65535] { R4672 += 1, R4610 += 1, R4587 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4672 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R4674 += 1, R4630 += 1, R21 += 1 };
  s0 -> s2 [0, 65535] { R4674 += 1, R4629 += 1, R4630 += 1 };
  s0 -> s0 [0, 65535] { R4673 += 1, R4674 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4674 += 1, R4630 += 1, R21 += 1 };
  s1 -> s4 [0, 65535] { R4674 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4674 += 1, R4630 += 1, R21 += 1 };
  s2 -> s2 [0, 65535] { R4674 += 1, R4629 += 1, R4630 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4674 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R4676 += 1, R4632 += 1 };
  s0 -> s2 [0, 65535] { R4676 += 1, R4631 += 1, R4632 += 1 };
  s0 -> s0 [0, 65535] { R4675 += 1, R4676 += 1 };
  s0 -> s3 [70, 70] { R4676 += 1, R4632 += 1 };
  s0 -> s4 [70, 70] { R4676 += 1, R4632 += 1 };
  s0 -> s5 [75, 75] { R4676 += 1, R4632 += 1 };
  s0 -> s1 [76, 65535] { R4676 += 1, R4632 += 1 };
  s1 -> s1 [0, 69] { R4676 += 1, R4632 += 1 };
  s1 -> s3 [70, 70] { R4676 += 1, R4632 += 1 };
  s1 -> s4 [70, 70] { R4676 += 1, R4632 += 1 };
  s1 -> s5 [75, 75] { R4676 += 1, R4632 += 1 };
  s1 -> s1 [76, 65535] { R4676 += 1, R4632 += 1 };
  s2 -> s1 [0, 69] { R4676 += 1, R4632 += 1 };
  s2 -> s2 [0, 65535] { R4676 += 1, R4631 += 1, R4632 += 1 };
  s2 -> s3 [70, 70] { R4676 += 1, R4632 += 1 };
  s2 -> s4 [70, 70] { R4676 += 1, R4632 += 1 };
  s2 -> s5 [75, 75] { R4676 += 1, R4632 += 1 };
  s2 -> s1 [76, 65535] { R4676 += 1, R4632 += 1 };
  s3 -> s3 [0, 70] { R4676 += 1, R4632 += 1 };
  s3 -> s7 [75, 75] { R4676 += 1, R4632 += 1 };
  s3 -> s3 [76, 65535] { R4676 += 1, R4632 += 1 };
  s5 -> s5 [0, 69] { R4676 += 1, R4632 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4676 += 1 };
  s5 -> s7 [70, 70] { R4676 += 1, R4632 += 1 };
  s5 -> s8 [70, 70] { R4676 += 1, R4632 += 1 };
  s5 -> s5 [75, 65535] { R4676 += 1, R4632 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R4676 += 1, R4632 += 1 };
  s7 -> s7 [0, 65535] { R4676 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R4676 += 1, R4632 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R4676 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R4678 += 1, R4634 += 1, R83 += 1 };
  s0 -> s0 [0, 65535] { R4677 += 1, R4678 += 1 };
  s0 -> s2 [0, 65535] { R4678 += 1, R4633 += 1, R4634 += 1 };
  s0 -> s3 [70, 70] { R4678 += 1, R4634 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R4678 += 1, R4634 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R4678 += 1, R4634 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R4678 += 1, R4634 += 1, R83 += 1 };
  s1 -> s1 [0, 65535] { R4678 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R4678 += 1, R4634 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R4678 += 1, R4634 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R4678 += 1, R4634 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R4678 += 1, R4634 += 1, R83 += 1 };
  s2 -> s2 [0, 65535] { R4678 += 1, R4633 += 1, R4634 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R4678 += 1, R4634 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R4678 += 1, R4634 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R4678 += 1, R4634 += 1, R83 += 1 };
  s3 -> s3 [0, 65535] { R4678 += 1, R4634 += 1, R83 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R4678 += 1 };
  s4 -> s4 [0, 65535] { R4678 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4678 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R4680 += 1, R4636 += 1, R85 += 1 };
  s0 -> s2 [0, 65535] { R4680 += 1, R4635 += 1, R4636 += 1 };
  s0 -> s0 [0, 65535] { R4679 += 1, R4680 += 1 };
  s0 -> s3 [70, 70] { R4680 += 1, R4636 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R4680 += 1, R4636 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R4680 += 1, R4636 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R4680 += 1, R4636 += 1, R85 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4680 += 1 };
  s1 -> s3 [70, 70] { R4680 += 1, R4636 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R4680 += 1, R4636 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R4680 += 1, R4636 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R4680 += 1, R4636 += 1, R85 += 1 };
  s2 -> s2 [0, 65535] { R4680 += 1, R4635 += 1, R4636 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R4680 += 1, R4636 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R4680 += 1, R4636 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R4680 += 1, R4636 += 1, R85 += 1 };
  s3 -> s3 [0, 65535] { R4680 += 1, R4636 += 1, R85 += 1 };
  s3 -> s6 [0, 65535] { R4680 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4680 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4680 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R4682 += 1, R4638 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R4682 += 1, R4638 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [0, 65535] { R4682 += 1, R4637 += 1, R4638 += 1 };
  s0 -> s0 [0, 65535] { R4681 += 1, R4682 += 1 };
  s0 -> s4 [70, 70] { R4682 += 1, R4638 += 1, R87 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R4682 += 1, R4638 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R4682 += 1, R4638 += 1, R87 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R4682 += 1, R4638 += 1, R88 += 1 };
  s0 -> s1 [71, 74] { R4682 += 1, R4638 += 1, R88 += 1 };
  s0 -> s2 [71, 65535] { R4682 += 1, R4638 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R4682 += 1, R4638 += 1, R88 += 1 };
  s0 -> s1 [76, 65535] { R4682 += 1, R4638 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R4682 += 1, R4638 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R4682 += 1, R4638 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R4682 += 1, R4638 += 1, R88 += 1 };
  s1 -> s1 [71, 74] { R4682 += 1, R4638 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R4682 += 1, R4638 += 1, R88 += 1 };
  s1 -> s1 [76, 65535] { R4682 += 1, R4638 += 1, R88 += 1 };
  s2 -> s1 [0, 69] { R4682 += 1, R4638 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R4682 += 1, R4638 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R4682 += 1, R4638 += 1, R87 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R4682 += 1, R4638 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R4682 += 1, R4638 += 1, R87 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R4682 += 1, R4638 += 1, R88 += 1 };
  s2 -> s1 [71, 74] { R4682 += 1, R4638 += 1, R88 += 1 };
  s2 -> s2 [71, 65535] { R4682 += 1, R4638 += 1, R87 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R4682 += 1, R4638 += 1, R88 += 1 };
  s2 -> s1 [76, 65535] { R4682 += 1, R4638 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R4682 += 1, R4638 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R4682 += 1, R4638 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R4682 += 1, R4637 += 1, R4638 += 1 };
  s3 -> s4 [70, 70] { R4682 += 1, R4638 += 1, R87 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R4682 += 1, R4638 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R4682 += 1, R4638 += 1, R87 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R4682 += 1, R4638 += 1, R88 += 1 };
  s3 -> s1 [71, 74] { R4682 += 1, R4638 += 1, R88 += 1 };
  s3 -> s2 [71, 65535] { R4682 += 1, R4638 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R4682 += 1, R4638 += 1, R88 += 1 };
  s3 -> s1 [76, 65535] { R4682 += 1, R4638 += 1, R88 += 1 };
  s4 -> s5 [0, 74] { R4682 += 1, R4638 += 1, R88 += 1 };
  s4 -> s4 [0, 65535] { R4682 += 1, R4638 += 1, R87 += 1, R88 += 1 };
  s4 -> s11 [75, 75] { R4682 += 1, R4638 += 1, R88 += 1 };
  s4 -> s5 [76, 65535] { R4682 += 1, R4638 += 1, R88 += 1 };
  s5 -> s5 [0, 74] { R4682 += 1, R4638 += 1, R88 += 1 };
  s5 -> s11 [75, 75] { R4682 += 1, R4638 += 1, R88 += 1 };
  s5 -> s5 [76, 65535] { R4682 += 1, R4638 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R4682 += 1, R4638 += 1, R88 += 1 };
  s8 -> s8 [0, 65535] { R4682 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R4682 += 1, R4638 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R4682 += 1, R4638 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R4682 += 1, R4638 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R4682 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R4682 += 1 };
  s11 -> s11 [0, 65535] { R4682 += 1, R4638 += 1, R88 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R4682 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R4684 += 1, R4640 += 1, R91 += 1, R92 += 1 };
  s0 -> s0 [0, 65535] { R4683 += 1, R4684 += 1 };
  s0 -> s2 [0, 65535] { R4684 += 1, R4639 += 1, R4640 += 1 };
  s0 -> s3 [70, 70] { R4684 += 1, R4640 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R4684 += 1, R4640 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R4684 += 1, R4640 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R4684 += 1, R4640 += 1, R91 += 1, R92 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4684 += 1 };
  s1 -> s3 [70, 70] { R4684 += 1, R4640 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R4684 += 1, R4640 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R4684 += 1, R4640 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R4684 += 1, R4640 += 1, R91 += 1, R92 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4684 += 1, R4639 += 1, R4640 += 1 };
  s2 -> s3 [70, 70] { R4684 += 1, R4640 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R4684 += 1, R4640 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R4684 += 1, R4640 += 1, R91 += 1, R92 += 1 };
  s3 -> s6 [0, 65535] { R4684 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4684 += 1, R4640 += 1, R91 += 1, R92 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4684 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4684 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R4686 += 1, R4642 += 1, R3452 += 1 };
  s0 -> s2 [0, 69] { R4686 += 1, R4642 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s3 [0, 69] { R4686 += 1, R4642 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s4 [0, 65535] { R4686 += 1, R4641 += 1, R4642 += 1 };
  s0 -> s0 [0, 65535] { R4685 += 1, R4686 += 1 };
  s0 -> s5 [70, 70] { R4686 += 1, R4642 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s6 [70, 70] { R4686 += 1, R4642 += 1, R3452 += 1 };
  s0 -> s7 [70, 70] { R4686 += 1, R4642 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s8 [70, 70] { R4686 += 1, R4642 += 1, R3452 += 1 };
  s0 -> s9 [70, 70] { R4686 += 1, R4642 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s10 [70, 70] { R4686 += 1, R4642 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s1 [71, 74] { R4686 += 1, R4642 += 1, R3452 += 1 };
  s0 -> s2 [71, 65535] { R4686 += 1, R4642 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s3 [71, 65535] { R4686 += 1, R4642 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s1 [76, 65535] { R4686 += 1, R4642 += 1, R3452 += 1 };
  s1 -> s1 [0, 69] { R4686 += 1, R4642 += 1, R3452 += 1 };
  s1 -> s1 [0, 65535] { R4686 += 1 };
  s1 -> s12 [0, 65535];
  s1 -> s6 [70, 70] { R4686 += 1, R4642 += 1 };
  s1 -> s8 [70, 70] { R4686 += 1, R4642 += 1 };
  s1 -> s1 [71, 74] { R4686 += 1, R4642 += 1, R3452 += 1 };
  s1 -> s1 [71, 65535] { R4686 += 1, R4642 += 1 };
  s1 -> s1 [76, 65535] { R4686 += 1, R4642 += 1, R3452 += 1 };
  s2 -> s1 [0, 69] { R4686 += 1, R4642 += 1, R3452 += 1 };
  s2 -> s2 [0, 69] { R4686 += 1, R4642 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s5 [70, 70] { R4686 += 1, R4642 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s6 [70, 70] { R4686 += 1, R4642 += 1, R3452 += 1 };
  s2 -> s7 [70, 70] { R4686 += 1, R4642 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s8 [70, 70] { R4686 += 1, R4642 += 1, R3452 += 1 };
  s2 -> s1 [71, 74] { R4686 += 1, R4642 += 1, R3452 += 1 };
  s2 -> s2 [71, 65535] { R4686 += 1, R4642 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s1 [76, 65535] { R4686 += 1, R4642 += 1, R3452 += 1 };
  s3 -> s1 [0, 69] { R4686 += 1, R4642 += 1, R3452 += 1 };
  s3 -> s2 [0, 69] { R4686 += 1, R4642 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s3 [0, 69] { R4686 += 1, R4642 += 1, R3451 += 1, R3452 += 1 };
  s3 -> s5 [70, 70] { R4686 += 1, R4642 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s6 [70, 70] { R4686 += 1, R4642 += 1, R3452 += 1 };
  s3 -> s7 [70, 70] { R4686 += 1, R4642 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s8 [70, 70] { R4686 += 1, R4642 += 1, R3452 += 1 };
  s3 -> s9 [70, 70] { R4686 += 1, R4642 += 1, R3451 += 1, R3452 += 1 };
  s3 -> s10 [70, 70] { R4686 += 1, R4642 += 1, R3451 += 1, R3452 += 1 };
  s3 -> s1 [71, 74] { R4686 += 1, R4642 += 1, R3452 += 1 };
  s3 -> s2 [71, 65535] { R4686 += 1, R4642 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s3 [71, 65535] { R4686 += 1, R4642 += 1, R3451 += 1, R3452 += 1 };
  s3 -> s1 [76, 65535] { R4686 += 1, R4642 += 1, R3452 += 1 };
  s4 -> s1 [0, 69] { R4686 += 1, R4642 += 1, R3452 += 1 };
  s4 -> s2 [0, 69] { R4686 += 1, R4642 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s3 [0, 69] { R4686 += 1, R4642 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s4 [0, 65535] { R4686 += 1, R4641 += 1, R4642 += 1 };
  s4 -> s5 [70, 70] { R4686 += 1, R4642 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s6 [70, 70] { R4686 += 1, R4642 += 1, R3452 += 1 };
  s4 -> s7 [70, 70] { R4686 += 1, R4642 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s8 [70, 70] { R4686 += 1, R4642 += 1, R3452 += 1 };
  s4 -> s9 [70, 70] { R4686 += 1, R4642 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s10 [70, 70] { R4686 += 1, R4642 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s1 [71, 74] { R4686 += 1, R4642 += 1, R3452 += 1 };
  s4 -> s2 [71, 65535] { R4686 += 1, R4642 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s3 [71, 65535] { R4686 += 1, R4642 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s1 [76, 65535] { R4686 += 1, R4642 += 1, R3452 += 1 };
  s5 -> s8 [0, 74] { R4686 += 1, R4642 += 1, R3452 += 1 };
  s5 -> s5 [0, 65535] { R4686 += 1, R4642 += 1, R3452 += 1, R3453 += 1 };
  s5 -> s8 [76, 65535] { R4686 += 1, R4642 += 1, R3452 += 1 };
  s6 -> s6 [0, 65535] { R4686 += 1 };
  s6 -> s12 [0, 65535];
  s8 -> s8 [0, 74] { R4686 += 1, R4642 += 1, R3452 += 1 };
  s8 -> s11 [0, 65535] { R4686 += 1 };
  s8 -> s8 [0, 65535] { R4686 += 1, R4642 += 1 };
  s8 -> s12 [0, 65535];
  s8 -> s8 [76, 65535] { R4686 += 1, R4642 += 1, R3452 += 1 };
  s9 -> s8 [0, 74] { R4686 += 1, R4642 += 1, R3452 += 1 };
  s9 -> s5 [0, 65535] { R4686 += 1, R4642 += 1, R3452 += 1, R3453 += 1 };
  s9 -> s9 [0, 65535] { R4686 += 1, R4642 += 1, R3451 += 1, R3452 += 1 };
  s9 -> s8 [76, 65535] { R4686 += 1, R4642 += 1, R3452 += 1 };
  s11 -> s11 [0, 65535] { R4686 += 1 };
  s11 -> s12 [0, 65535];
  s12 -> s12 [0, 65535];
  accepting s12, s8, s6, s1, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s0 -> s2 [0, 69] { R4688 += 1, R4644 += 1, R4573 += 1, R4574 += 1 };
  s0 -> s3 [0, 69] { R4688 += 1, R4644 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s0 -> s0 [0, 65535] { R4687 += 1, R4688 += 1 };
  s0 -> s4 [0, 65535] { R4688 += 1, R4643 += 1, R4644 += 1 };
  s0 -> s5 [70, 70] { R4688 += 1, R4644 += 1, R4573 += 1, R4574 += 1 };
  s0 -> s6 [70, 70] { R4688 += 1, R4644 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s0 -> s7 [70, 70] { R4688 += 1, R4644 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s0 -> s8 [70, 70] { R4688 += 1, R4644 += 1, R4573 += 1, R4574 += 1 };
  s0 -> s9 [70, 70] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s0 -> s10 [70, 70] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s0 -> s1 [71, 74] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s0 -> s2 [71, 65535] { R4688 += 1, R4644 += 1, R4573 += 1, R4574 += 1 };
  s0 -> s3 [71, 65535] { R4688 += 1, R4644 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s0 -> s11 [75, 75] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s0 -> s1 [76, 65535] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s1 -> s1 [0, 69] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s1 -> s9 [70, 70] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s1 -> s10 [70, 70] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s1 -> s1 [71, 74] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s1 -> s11 [75, 75] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s1 -> s1 [76, 65535] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s2 -> s1 [0, 69] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s2 -> s2 [0, 69] { R4688 += 1, R4644 += 1, R4573 += 1, R4574 += 1 };
  s2 -> s3 [0, 69] { R4688 += 1, R4644 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s2 -> s5 [70, 70] { R4688 += 1, R4644 += 1, R4573 += 1, R4574 += 1 };
  s2 -> s6 [70, 70] { R4688 += 1, R4644 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s2 -> s7 [70, 70] { R4688 += 1, R4644 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s2 -> s8 [70, 70] { R4688 += 1, R4644 += 1, R4573 += 1, R4574 += 1 };
  s2 -> s9 [70, 70] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s2 -> s10 [70, 70] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s2 -> s1 [71, 74] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s2 -> s2 [71, 65535] { R4688 += 1, R4644 += 1, R4573 += 1, R4574 += 1 };
  s2 -> s3 [71, 65535] { R4688 += 1, R4644 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s2 -> s11 [75, 75] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s2 -> s1 [76, 65535] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s3 -> s1 [0, 69] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s3 -> s3 [0, 69] { R4688 += 1, R4644 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s3 -> s6 [70, 70] { R4688 += 1, R4644 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s3 -> s7 [70, 70] { R4688 += 1, R4644 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s3 -> s9 [70, 70] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s3 -> s10 [70, 70] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s3 -> s1 [71, 74] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s3 -> s3 [71, 65535] { R4688 += 1, R4644 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s3 -> s11 [75, 75] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s3 -> s1 [76, 65535] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s4 -> s1 [0, 69] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s4 -> s2 [0, 69] { R4688 += 1, R4644 += 1, R4573 += 1, R4574 += 1 };
  s4 -> s3 [0, 69] { R4688 += 1, R4644 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s4 -> s4 [0, 65535] { R4688 += 1, R4643 += 1, R4644 += 1 };
  s4 -> s5 [70, 70] { R4688 += 1, R4644 += 1, R4573 += 1, R4574 += 1 };
  s4 -> s6 [70, 70] { R4688 += 1, R4644 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s4 -> s7 [70, 70] { R4688 += 1, R4644 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s4 -> s8 [70, 70] { R4688 += 1, R4644 += 1, R4573 += 1, R4574 += 1 };
  s4 -> s9 [70, 70] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s4 -> s10 [70, 70] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s4 -> s1 [71, 74] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s4 -> s2 [71, 65535] { R4688 += 1, R4644 += 1, R4573 += 1, R4574 += 1 };
  s4 -> s3 [71, 65535] { R4688 += 1, R4644 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s4 -> s11 [75, 75] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s4 -> s1 [76, 65535] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s6 -> s9 [0, 74] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s6 -> s6 [0, 65535] { R4688 += 1, R4644 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s6 -> s17 [75, 75] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s6 -> s9 [76, 65535] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s8 -> s9 [0, 74] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s8 -> s6 [0, 65535] { R4688 += 1, R4644 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s8 -> s8 [0, 65535] { R4688 += 1, R4644 += 1, R4573 += 1, R4574 += 1 };
  s8 -> s17 [75, 75] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s8 -> s9 [76, 65535] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s9 -> s9 [0, 74] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s9 -> s17 [75, 75] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s9 -> s9 [76, 65535] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s11 -> s12 [0, 69] { R4688 += 1, R4644 += 1, R4574 += 1 };
  s11 -> s13 [0, 69] { R4688 += 1, R4644 += 1 };
  s11 -> s11 [0, 69] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s11 -> s14 [70, 70] { R4688 += 1, R4644 += 1 };
  s11 -> s15 [70, 70] { R4688 += 1, R4644 += 1, R4574 += 1 };
  s11 -> s16 [70, 70] { R4688 += 1, R4644 += 1, R4574 += 1 };
  s11 -> s17 [70, 70] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s11 -> s18 [70, 70] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s11 -> s19 [70, 70] { R4688 += 1, R4644 += 1 };
  s11 -> s12 [71, 65535] { R4688 += 1, R4644 += 1, R4574 += 1 };
  s11 -> s13 [71, 65535] { R4688 += 1, R4644 += 1 };
  s11 -> s11 [71, 65535] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s12 -> s12 [0, 69] { R4688 += 1, R4644 += 1, R4574 += 1 };
  s12 -> s13 [0, 69] { R4688 += 1, R4644 += 1 };
  s12 -> s14 [70, 70] { R4688 += 1, R4644 += 1 };
  s12 -> s15 [70, 70] { R4688 += 1, R4644 += 1, R4574 += 1 };
  s12 -> s16 [70, 70] { R4688 += 1, R4644 += 1, R4574 += 1 };
  s12 -> s19 [70, 70] { R4688 += 1, R4644 += 1 };
  s12 -> s12 [71, 65535] { R4688 += 1, R4644 += 1, R4574 += 1 };
  s12 -> s13 [71, 65535] { R4688 += 1, R4644 += 1 };
  s13 -> s13 [0, 69] { R4688 += 1, R4644 += 1 };
  s13 -> s20 [0, 65535];
  s13 -> s13 [0, 65535] { R4688 += 1 };
  s13 -> s14 [70, 70] { R4688 += 1, R4644 += 1 };
  s13 -> s19 [70, 70] { R4688 += 1, R4644 += 1 };
  s13 -> s13 [71, 65535] { R4688 += 1, R4644 += 1 };
  s14 -> s14 [0, 65535] { R4688 += 1, R4644 += 1 };
  s14 -> s21 [0, 65535] { R4688 += 1 };
  s14 -> s20 [0, 65535];
  s15 -> s14 [0, 65535] { R4688 += 1, R4644 += 1 };
  s15 -> s15 [0, 65535] { R4688 += 1, R4644 += 1, R4574 += 1 };
  s17 -> s14 [0, 65535] { R4688 += 1, R4644 += 1 };
  s17 -> s15 [0, 65535] { R4688 += 1, R4644 += 1, R4574 += 1 };
  s17 -> s17 [0, 65535] { R4688 += 1, R4644 += 1, R4574 += 1, R4576 += 1 };
  s19 -> s19 [0, 65535] { R4688 += 1 };
  s19 -> s20 [0, 65535];
  s20 -> s20 [0, 65535];
  s21 -> s21 [0, 65535] { R4688 += 1 };
  s21 -> s20 [0, 65535];
  accepting s19, s13, s14, s21, s20;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R4690 += 1, R4646 += 1, R4582 += 1, R4584 += 1, R4585 += 1 };
  s0 -> s2 [0, 69] { R4690 += 1, R4646 += 1, R4581 += 1, R4582 += 1 };
  s0 -> s3 [0, 69] { R4690 += 1, R4646 += 1, R4582 += 1, R4583 += 1, R4584 += 1 };
  s0 -> s4 [0, 65535] { R4690 += 1, R4645 += 1, R4646 += 1 };
  s0 -> s0 [0, 65535] { R4689 += 1, R4690 += 1 };
  s0 -> s5 [70, 70] { R4690 += 1, R4646 += 1, R4582 += 1, R4584 += 1, R4585 += 1 };
  s0 -> s6 [70, 70] { R4690 += 1, R4646 += 1, R4582 += 1, R4584 += 1, R4585 += 1 };
  s0 -> s7 [70, 70] { R4690 += 1, R4646 += 1, R4582 += 1, R4583 += 1, R4584 += 1 };
  s0 -> s8 [70, 70] { R4690 += 1, R4646 += 1, R4581 += 1, R4582 += 1 };
  s0 -> s9 [70, 70] { R4690 += 1, R4646 += 1, R4581 += 1, R4582 += 1 };
  s0 -> s10 [70, 70] { R4690 += 1, R4646 += 1, R4582 += 1, R4583 += 1, R4584 += 1 };
  s0 -> s1 [71, 65535] { R4690 += 1, R4646 += 1, R4582 += 1, R4584 += 1, R4585 += 1 };
  s0 -> s2 [71, 65535] { R4690 += 1, R4646 += 1, R4581 += 1, R4582 += 1 };
  s0 -> s3 [71, 65535] { R4690 += 1, R4646 += 1, R4582 += 1, R4583 += 1, R4584 += 1 };
  s1 -> s1 [0, 69] { R4690 += 1, R4646 += 1, R4582 += 1, R4584 += 1, R4585 += 1 };
  s1 -> s14 [0, 69] { R4690 += 1, R4646 += 1, R4582 += 1 };
  s1 -> s11 [70, 70] { R4690 += 1, R4646 += 1, R4582 += 1 };
  s1 -> s5 [70, 70] { R4690 += 1, R4646 += 1, R4582 += 1, R4584 += 1, R4585 += 1 };
  s1 -> s6 [70, 70] { R4690 += 1, R4646 += 1, R4582 += 1, R4584 += 1, R4585 += 1 };
  s1 -> s15 [70, 70] { R4690 += 1, R4646 += 1, R4582 += 1 };
  s1 -> s1 [71, 65535] { R4690 += 1, R4646 += 1, R4582 += 1, R4584 += 1, R4585 += 1 };
  s1 -> s14 [71, 65535] { R4690 += 1, R4646 += 1, R4582 += 1 };
  s2 -> s1 [0, 69] { R4690 += 1, R4646 += 1, R4582 += 1, R4584 += 1, R4585 += 1 };
  s2 -> s2 [0, 69] { R4690 += 1, R4646 += 1, R4581 += 1, R4582 += 1 };
  s2 -> s3 [0, 69] { R4690 += 1, R4646 += 1, R4582 += 1, R4583 += 1, R4584 += 1 };
  s2 -> s5 [70, 70] { R4690 += 1, R4646 += 1, R4582 += 1, R4584 += 1, R4585 += 1 };
  s2 -> s6 [70, 70] { R4690 += 1, R4646 += 1, R4582 += 1, R4584 += 1, R4585 += 1 };
  s2 -> s7 [70, 70] { R4690 += 1, R4646 += 1, R4582 += 1, R4583 += 1, R4584 += 1 };
  s2 -> s8 [70, 70] { R4690 += 1, R4646 += 1, R4581 += 1, R4582 += 1 };
  s2 -> s9 [70, 70] { R4690 += 1, R4646 += 1, R4581 += 1, R4582 += 1 };
  s2 -> s10 [70, 70] { R4690 += 1, R4646 += 1, R4582 += 1, R4583 += 1, R4584 += 1 };
  s2 -> s1 [71, 65535] { R4690 += 1, R4646 += 1, R4582 += 1, R4584 += 1, R4585 += 1 };
  s2 -> s2 [71, 65535] { R4690 += 1, R4646 += 1, R4581 += 1, R4582 += 1 };
  s2 -> s3 [71, 65535] { R4690 += 1, R4646 += 1, R4582 += 1, R4583 += 1, R4584 += 1 };
  s3 -> s1 [0, 69] { R4690 += 1, R4646 += 1, R4582 += 1, R4584 += 1, R4585 += 1 };
  s3 -> s3 [0, 69] { R4690 += 1, R4646 += 1, R4582 += 1, R4583 += 1, R4584 += 1 };
  s3 -> s5 [70, 70] { R4690 += 1, R4646 += 1, R4582 += 1, R4584 += 1, R4585 += 1 };
  s3 -> s6 [70, 70] { R4690 += 1, R4646 += 1, R4582 += 1, R4584 += 1, R4585 += 1 };
  s3 -> s7 [70, 70] { R4690 += 1, R4646 += 1, R4582 += 1, R4583 += 1, R4584 += 1 };
  s3 -> s10 [70, 70] { R4690 += 1, R4646 += 1, R4582 += 1, R4583 += 1, R4584 += 1 };
  s3 -> s1 [71, 65535] { R4690 += 1, R4646 += 1, R4582 += 1, R4584 += 1, R4585 += 1 };
  s3 -> s3 [71, 65535] { R4690 += 1, R4646 += 1, R4582 += 1, R4583 += 1, R4584 += 1 };
  s4 -> s1 [0, 69] { R4690 += 1, R4646 += 1, R4582 += 1, R4584 += 1, R4585 += 1 };
  s4 -> s2 [0, 69] { R4690 += 1, R4646 += 1, R4581 += 1, R4582 += 1 };
  s4 -> s3 [0, 69] { R4690 += 1, R4646 += 1, R4582 += 1, R4583 += 1, R4584 += 1 };
  s4 -> s4 [0, 65535] { R4690 += 1, R4645 += 1, R4646 += 1 };
  s4 -> s5 [70, 70] { R4690 += 1, R4646 += 1, R4582 += 1, R4584 += 1, R4585 += 1 };
  s4 -> s6 [70, 70] { R4690 += 1, R4646 += 1, R4582 += 1, R4584 += 1, R4585 += 1 };
  s4 -> s7 [70, 70] { R4690 += 1, R4646 += 1, R4582 += 1, R4583 += 1, R4584 += 1 };
  s4 -> s8 [70, 70] { R4690 += 1, R4646 += 1, R4581 += 1, R4582 += 1 };
  s4 -> s9 [70, 70] { R4690 += 1, R4646 += 1, R4581 += 1, R4582 += 1 };
  s4 -> s10 [70, 70] { R4690 += 1, R4646 += 1, R4582 += 1, R4583 += 1, R4584 += 1 };
  s4 -> s1 [71, 65535] { R4690 += 1, R4646 += 1, R4582 += 1, R4584 += 1, R4585 += 1 };
  s4 -> s2 [71, 65535] { R4690 += 1, R4646 += 1, R4581 += 1, R4582 += 1 };
  s4 -> s3 [71, 65535] { R4690 += 1, R4646 += 1, R4582 += 1, R4583 += 1, R4584 += 1 };
  s5 -> s11 [0, 65535] { R4690 += 1, R4646 += 1, R4582 += 1 };
  s5 -> s5 [0, 65535] { R4690 += 1, R4646 += 1, R4582 += 1, R4584 += 1, R4585 += 1 };
  s9 -> s5 [0, 65535] { R4690 += 1, R4646 += 1, R4582 += 1, R4584 += 1, R4585 += 1 };
  s9 -> s9 [0, 65535] { R4690 += 1, R4646 += 1, R4581 += 1, R4582 += 1 };
  s9 -> s10 [0, 65535] { R4690 += 1, R4646 += 1, R4582 += 1, R4583 += 1, R4584 += 1 };
  s10 -> s5 [0, 65535] { R4690 += 1, R4646 += 1, R4582 += 1, R4584 += 1, R4585 += 1 };
  s10 -> s10 [0, 65535] { R4690 += 1, R4646 += 1, R4582 += 1, R4583 += 1, R4584 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s11 [0, 65535] { R4690 += 1, R4646 += 1, R4582 += 1 };
  s11 -> s13 [0, 65535] { R4690 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R4690 += 1 };
  s14 -> s14 [0, 69] { R4690 += 1, R4646 += 1, R4582 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R4690 += 1 };
  s14 -> s11 [70, 70] { R4690 += 1, R4646 += 1, R4582 += 1 };
  s14 -> s15 [70, 70] { R4690 += 1, R4646 += 1, R4582 += 1 };
  s14 -> s14 [71, 65535] { R4690 += 1, R4646 += 1, R4582 += 1 };
  s15 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R4690 += 1 };
  accepting s12, s13, s14, s15, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R4690 && R23 - R4690 = -1 && R24 = R4690 && R25 - R4690 = -1 && R26 = R4690 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R4578 + -1*R4574 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R4578 + -1*R4574 - R66 = 0 && R55 + R96 + R93 + -1*R4580 + -1*R4576 - R68 = 0 && R65 + R4577 + R4573 = 0 && R67 + R4579 + R4575 = 0 && R4631 = 0 && R4632 = 0 && R4637 = 0 && R4638 = 0 && R4641 = 0 && R4642 = 0 && R4643 = 0 && R4644 = 0 && R4645 = 0 && R4646 = 0 && R4647 = 0 && R4648 = R4690 && R4649 = 0 && R4650 = R4690 && R4651 = 0 && R4652 = R4690 && R4653 = 0 && R4654 = R4690 && R4655 = 0 && R4656 = R4690 && R4657 = 0 && R4658 = R4690 && R4659 = 0 && R4660 = R4690 && R4661 = 0 && R4662 = R4690 && R4663 = 0 && R4664 = R4690 && R4665 = 0 && R4666 = R4690 && R4667 = 0 && R4668 = R4690 && R4669 = 0 && R4670 = R4690 && R4671 = 0 && R4672 = R4690 && R4673 = 0 && R4674 = R4690 && R4675 = 0 && R4676 = R4690 && R4677 = 0 && R4678 = R4690 && R4679 = 0 && R4680 = R4690 && R4681 = 0 && R4682 = R4690 && R4683 = 0 && R4684 = R4690 && R4685 = 0 && R4686 = R4690 && R4687 = 0 && R4688 = R4690 && R4689 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R3456 + R3453 < 1 && -1*R4578 + -1*R4574 - R66 < 1 && -1*R4580 + -1*R4576 - R68 < 1 && 0 < R4690 && (R2 != 0 || R20 = 0 || (R4591 = 0 && R4592 = 0)) && (R2 != 0 || R20 = 0 || (R4593 = 0 && R4594 = 0)) && (R2 != 0 || R20 = 0 || (R4595 = 0 && R4596 = 0)) && (R2 != 0 || R20 = 0 || (R4597 = 0 && R4598 = 0)) && (R2 != 0 || R20 = 0 || (R4599 = 0 && R4600 = 0)) && (R2 != 0 || R20 = 0 || (R4601 = 0 && R4602 = 0)) && (R2 != 0 || R20 = 0 || (R4603 = 0 && R4604 = 0)) && (R2 != 0 || R20 = 0 || (R4605 = 0 && R4606 = 0)) && (R2 != 0 || R20 = 0 || (R4607 = 0 && R4608 = 0)) && (R2 != 0 || R20 = 0 || (R4609 = 0 && R4610 = 0)) && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R4578 + -1*R4574 - R66 = 0 || R66 + R4578 + R4574 < 1) && (R59 + R3454 + R3451 != 0 || R60 + R3455 + R3452 + -1*R4578 + -1*R4574 - R66 = 0 || R66 + R4578 + R4574 < 1) && (R66 + R4578 + R4574 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R4580 + R4576 < 1) && (R53 + R94 + R91 = 0 || R68 + R4580 + R4576 < 1))) && (R66 + R4578 + R4574 != 0 || ((R59 + R3454 + R3451 != 0 || R60 + R3455 + R3452 = 0 || R68 + R4580 + R4576 < 1) && (R59 + R3454 + R3451 = 0 || R68 + R4580 + R4576 < 1))) && (R66 + R4578 + R4574 != 0 || ((R73 + R4586 + R4581 != 0 || R74 + R4587 + R4582 = 0 || R68 + R4580 + R4576 < 1) && (R73 + R4586 + R4581 = 0 || R68 + R4580 + R4576 < 1))) && (R68 + R4580 + R4576 != 0 || R77 + R4590 + R4585 = 0 || (R75 + R4588 + R4583 = 0 && R76 + R4589 + R4584 = 0)) && (R73 + R4586 + R4581 != 0 || R66 + R4578 + R4574 + -1*R4587 + -1*R4582 - R74 = 0 || R66 + R4578 + R4574 < 1) && (R75 + R4588 + R4583 != 0 || R68 + R4580 + R4576 + -1*R4589 + -1*R4584 - R76 = 0 || R68 + R4580 + R4576 < 1) && (R4591 != 0 || R2 = R4592 || R2 < 1) && (R4593 != 0 || R2 = R4594 || R2 < 1) && (R4595 != 0 || R2 = R4596 || R2 < 1) && (R4597 != 0 || R2 = R4598 || R2 < 1) && (R4599 != 0 || R2 = R4600 || R2 < 1) && (R4601 != 0 || R2 = R4602 || R2 < 1) && (R4603 != 0 || R2 = R4604 || R2 < 1) && (R4605 != 0 || R2 = R4606 || R2 < 1) && (R4607 != 0 || R2 = R4608 || R2 < 1) && (R4609 != 0 || R2 = R4610 || R2 < 1) && (R21 = 0 || (R4629 = 0 && R4630 = 0)) && (R21 = 0 || (R4633 = 0 && R4634 = 0)) && (R21 = 0 || (R4635 = 0 && R4636 = 0)) && (R21 = 0 || (R4639 = 0 && R4640 = 0)) && (R22 = 0 || (R4611 = 0 && R4612 = 0)) && (R22 = 0 || (R4613 = 0 && R4614 = 0)) && (R22 = 0 || (R4615 = 0 && R4616 = 0)) && (R22 = 0 || (R4617 = 0 && R4618 = 0)) && (R22 = 0 || (R4619 = 0 && R4620 = 0)) && (R22 = 0 || (R4621 = 0 && R4622 = 0)) && (R22 = 0 || (R4623 = 0 && R4624 = 0)) && (R22 = 0 || (R4625 = 0 && R4626 = 0)) && (R22 = 0 || (R4627 = 0 && R4628 = 0)) && (R53 + R94 + R91 = 0 || R66 + R4578 + R4574 < 1) && (R59 + R3454 + R3451 = 0 || R66 + R4578 + R4574 < 1) && (R73 + R4586 + R4581 = 0 || R66 + R4578 + R4574 < 1) && (R75 + R4588 + R4583 = 0 || R68 + R4580 + R4576 < 1) && (R4591 = 0 || R2 < 1) && (R4593 = 0 || R2 < 1) && (R4595 = 0 || R2 < 1) && (R4597 = 0 || R2 < 1) && (R4599 = 0 || R2 < 1) && (R4601 = 0 || R2 < 1) && (R4603 = 0 || R2 < 1) && (R4605 = 0 || R2 < 1) && (R4607 = 0 || R2 < 1) && (R4609 = 0 || R2 < 1);
// End of Parikh automata intersection problem
