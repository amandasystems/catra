// Parikh automata intersection problem, generated by OSTRICH+
counter int
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R15348 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R15347 += 1, R15348 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R15348 += 1, R22 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R15350 += 1 };
  s0 -> s0 [0, 65535] { R15349 += 1, R15350 += 1 };
  s0 -> s2 [70, 70] { R15350 += 1 };
  s0 -> s3 [70, 70] { R15350 += 1 };
  s0 -> s1 [76, 65535] { R15350 += 1 };
  s1 -> s1 [0, 69] { R15350 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15350 += 1 };
  s1 -> s3 [70, 70] { R15350 += 1 };
  s1 -> s1 [76, 65535] { R15350 += 1 };
  s2 -> s2 [0, 70] { R15350 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R15350 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R15352 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R15351 += 1, R15352 += 1 };
  s0 -> s2 [70, 70] { R15352 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R15352 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R15352 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R15352 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15352 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R15352 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R15352 += 1, R45 += 1 };
  s2 -> s2 [0, 65535] { R15352 += 1, R45 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R15354 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R15353 += 1, R15354 += 1 };
  s0 -> s2 [70, 70] { R15354 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R15354 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R15354 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R15354 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15354 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R15354 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R15354 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R15354 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R15356 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R15355 += 1, R15356 += 1 };
  s0 -> s2 [70, 70] { R15356 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R15356 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R15356 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R15356 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15356 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R15356 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R15356 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535] { R15356 += 1, R49 += 1, R50 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R15358 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R15357 += 1, R15358 += 1 };
  s0 -> s2 [70, 70] { R15358 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R15358 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R15358 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R15358 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15358 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R15358 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R15358 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535] { R15358 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R15360 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R15359 += 1, R15360 += 1 };
  s0 -> s2 [70, 70] { R15360 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R15360 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R15360 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R15360 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15360 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R15360 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R15360 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R15360 += 1, R59 += 1, R60 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R15362 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R15361 += 1, R15362 += 1 };
  s0 -> s2 [70, 70] { R15362 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R15362 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R15362 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R15362 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15362 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R15362 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R15362 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535] { R15362 += 1, R65 += 1, R66 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R15364 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R15363 += 1, R15364 += 1 };
  s0 -> s2 [70, 70] { R15364 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R15364 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R15364 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R15364 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15364 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R15364 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R15364 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R15364 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R15384 += 1 };
  s0 -> s0 [0, 65535] { R15383 += 1, R15384 += 1 };
  s0 -> s2 [70, 70] { R15384 += 1 };
  s0 -> s1 [71, 65535] { R15384 += 1 };
  s1 -> s1 [0, 69] { R15384 += 1 };
  s1 -> s2 [70, 70] { R15384 += 1 };
  s1 -> s1 [71, 65535] { R15384 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R15384 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R15386 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R15385 += 1, R15386 += 1 };
  s1 -> s1 [0, 65535] { R15386 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R15388 += 1 };
  s0 -> s0 [0, 65535] { R15387 += 1, R15388 += 1 };
  s0 -> s2 [0, 65535] { R15388 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R15388 += 1 };
  s0 -> s1 [71, 65535] { R15388 += 1 };
  s1 -> s1 [0, 69] { R15388 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R15388 += 1 };
  s1 -> s1 [71, 65535] { R15388 += 1 };
  s2 -> s1 [0, 69] { R15388 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R15388 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R15388 += 1 };
  s2 -> s1 [71, 65535] { R15388 += 1 };
  s3 -> s3 [0, 65535] { R15388 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R15390 += 1, R15328 += 1 };
  s0 -> s2 [0, 65535] { R15390 += 1, R15327 += 1, R15328 += 1 };
  s0 -> s0 [0, 65535] { R15389 += 1, R15390 += 1 };
  s0 -> s1 [71, 65535] { R15390 += 1, R15328 += 1 };
  s1 -> s1 [0, 69] { R15390 += 1, R15328 += 1 };
  s1 -> s1 [0, 65535] { R15390 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R15390 += 1, R15328 += 1 };
  s2 -> s1 [0, 69] { R15390 += 1, R15328 += 1 };
  s2 -> s2 [0, 65535] { R15390 += 1, R15327 += 1, R15328 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R15390 += 1, R15328 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R15392 += 1, R15329 += 1, R15330 += 1 };
  s0 -> s0 [0, 65535] { R15391 += 1, R15392 += 1 };
  s0 -> s2 [0, 65535] { R15392 += 1, R15330 += 1, R20 += 1 };
  s1 -> s1 [0, 65535] { R15392 += 1, R15329 += 1, R15330 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R15392 += 1, R15330 += 1, R20 += 1 };
  s2 -> s3 [0, 65535] { R15392 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R15392 += 1, R15330 += 1, R20 += 1 };
  s3 -> s3 [0, 65535] { R15392 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R15394 += 1, R15332 += 1 };
  s0 -> s2 [0, 65535] { R15394 += 1, R15331 += 1, R15332 += 1 };
  s0 -> s0 [0, 65535] { R15393 += 1, R15394 += 1 };
  s0 -> s1 [75, 65535] { R15394 += 1, R15332 += 1 };
  s1 -> s1 [0, 70] { R15394 += 1, R15332 += 1 };
  s1 -> s1 [0, 65535] { R15394 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R15394 += 1, R15332 += 1 };
  s2 -> s1 [0, 70] { R15394 += 1, R15332 += 1 };
  s2 -> s2 [0, 65535] { R15394 += 1, R15331 += 1, R15332 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R15394 += 1, R15332 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R15396 += 1, R15333 += 1, R15334 += 1 };
  s0 -> s2 [0, 65535] { R15396 += 1, R15334 += 1, R84 += 1 };
  s0 -> s0 [0, 65535] { R15395 += 1, R15396 += 1 };
  s1 -> s1 [0, 65535] { R15396 += 1, R15333 += 1, R15334 += 1 };
  s1 -> s2 [0, 65535] { R15396 += 1, R15334 += 1, R84 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R15396 += 1 };
  s2 -> s2 [0, 65535] { R15396 += 1, R15334 += 1, R84 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R15396 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R15398 += 1, R15336 += 1 };
  s0 -> s2 [0, 65535] { R15398 += 1, R15336 += 1, R86 += 1 };
  s0 -> s3 [0, 65535] { R15398 += 1, R15335 += 1, R15336 += 1 };
  s0 -> s0 [0, 65535] { R15397 += 1, R15398 += 1 };
  s0 -> s1 [76, 65535] { R15398 += 1, R15336 += 1 };
  s1 -> s1 [0, 74] { R15398 += 1, R15336 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R15398 += 1 };
  s1 -> s1 [76, 65535] { R15398 += 1, R15336 += 1 };
  s2 -> s1 [0, 74] { R15398 += 1, R15336 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R15398 += 1, R15336 += 1, R86 += 1 };
  s2 -> s5 [0, 65535] { R15398 += 1 };
  s2 -> s1 [76, 65535] { R15398 += 1, R15336 += 1 };
  s3 -> s1 [0, 74] { R15398 += 1, R15336 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R15398 += 1, R15336 += 1, R86 += 1 };
  s3 -> s3 [0, 65535] { R15398 += 1, R15335 += 1, R15336 += 1 };
  s3 -> s1 [76, 65535] { R15398 += 1, R15336 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R15398 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R15400 += 1, R15338 += 1, R90 += 1 };
  s0 -> s2 [0, 65535] { R15400 += 1, R15337 += 1, R15338 += 1 };
  s0 -> s0 [0, 65535] { R15399 += 1, R15400 += 1 };
  s0 -> s3 [0, 65535] { R15400 += 1, R15338 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R15400 += 1 };
  s1 -> s1 [0, 65535] { R15400 += 1, R15338 += 1, R90 += 1 };
  s1 -> s3 [0, 65535] { R15400 += 1, R15338 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R15400 += 1, R15338 += 1, R90 += 1 };
  s2 -> s2 [0, 65535] { R15400 += 1, R15337 += 1, R15338 += 1 };
  s2 -> s3 [0, 65535] { R15400 += 1, R15338 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R15400 += 1 };
  s3 -> s3 [0, 65535] { R15400 += 1, R15338 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R15400 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R15402 += 1, R15340 += 1 };
  s0 -> s2 [0, 65535] { R15402 += 1, R15339 += 1, R15340 += 1 };
  s0 -> s3 [0, 65535] { R15402 += 1, R15340 += 1, R13517 += 1, R13518 += 1 };
  s0 -> s0 [0, 65535] { R15401 += 1, R15402 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R15402 += 1 };
  s1 -> s1 [0, 65535] { R15402 += 1, R15340 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R15402 += 1, R15340 += 1 };
  s2 -> s2 [0, 65535] { R15402 += 1, R15339 += 1, R15340 += 1 };
  s2 -> s3 [0, 65535] { R15402 += 1, R15340 += 1, R13517 += 1, R13518 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R15402 += 1 };
  s3 -> s1 [0, 65535] { R15402 += 1, R15340 += 1 };
  s3 -> s3 [0, 65535] { R15402 += 1, R15340 += 1, R13517 += 1, R13518 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R15402 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R15404 += 1, R15342 += 1, R13523 += 1 };
  s0 -> s2 [0, 65535] { R15404 += 1, R15342 += 1, R13523 += 1, R13524 += 1 };
  s0 -> s0 [0, 65535] { R15403 += 1, R15404 += 1 };
  s0 -> s3 [0, 65535] { R15404 += 1, R15341 += 1, R15342 += 1 };
  s0 -> s4 [0, 65535] { R15404 += 1, R15342 += 1, R13522 += 1, R13523 += 1 };
  s0 -> s1 [76, 65535] { R15404 += 1, R15342 += 1, R13523 += 1 };
  s1 -> s1 [0, 74] { R15404 += 1, R15342 += 1, R13523 += 1 };
  s1 -> s1 [0, 65535] { R15404 += 1, R15342 += 1 };
  s1 -> s5 [0, 65535] { R15404 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [76, 65535] { R15404 += 1, R15342 += 1, R13523 += 1 };
  s2 -> s1 [0, 74] { R15404 += 1, R15342 += 1, R13523 += 1 };
  s2 -> s2 [0, 65535] { R15404 += 1, R15342 += 1, R13523 += 1, R13524 += 1 };
  s2 -> s7 [0, 65535] { R15404 += 1, R15342 += 1 };
  s2 -> s5 [0, 65535] { R15404 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [76, 65535] { R15404 += 1, R15342 += 1, R13523 += 1 };
  s3 -> s1 [0, 74] { R15404 += 1, R15342 += 1, R13523 += 1 };
  s3 -> s2 [0, 65535] { R15404 += 1, R15342 += 1, R13523 += 1, R13524 += 1 };
  s3 -> s3 [0, 65535] { R15404 += 1, R15341 += 1, R15342 += 1 };
  s3 -> s4 [0, 65535] { R15404 += 1, R15342 += 1, R13522 += 1, R13523 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [76, 65535] { R15404 += 1, R15342 += 1, R13523 += 1 };
  s4 -> s1 [0, 74] { R15404 += 1, R15342 += 1, R13523 += 1 };
  s4 -> s2 [0, 65535] { R15404 += 1, R15342 += 1, R13523 += 1, R13524 += 1 };
  s4 -> s4 [0, 65535] { R15404 += 1, R15342 += 1, R13522 += 1, R13523 += 1 };
  s4 -> s5 [0, 65535] { R15404 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s1 [76, 65535] { R15404 += 1, R15342 += 1, R13523 += 1 };
  s5 -> s5 [0, 65535] { R15404 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R15404 += 1, R15342 += 1 };
  s7 -> s5 [0, 65535] { R15404 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 74] { R15406 += 1, R15344 += 1, R15204 += 1, R15206 += 1 };
  s0 -> s0 [0, 65535] { R15405 += 1, R15406 += 1 };
  s0 -> s2 [0, 65535] { R15406 += 1, R15344 += 1, R15203 += 1, R15204 += 1 };
  s0 -> s3 [0, 65535] { R15406 += 1, R15344 += 1, R15204 += 1, R15205 += 1, R15206 += 1 };
  s0 -> s4 [0, 65535] { R15406 += 1, R15343 += 1, R15344 += 1 };
  s0 -> s5 [75, 75] { R15406 += 1, R15344 += 1, R15204 += 1, R15206 += 1 };
  s0 -> s1 [76, 65535] { R15406 += 1, R15344 += 1, R15204 += 1, R15206 += 1 };
  s1 -> s1 [0, 74] { R15406 += 1, R15344 += 1, R15204 += 1, R15206 += 1 };
  s1 -> s5 [75, 75] { R15406 += 1, R15344 += 1, R15204 += 1, R15206 += 1 };
  s1 -> s1 [76, 65535] { R15406 += 1, R15344 += 1, R15204 += 1, R15206 += 1 };
  s2 -> s1 [0, 74] { R15406 += 1, R15344 += 1, R15204 += 1, R15206 += 1 };
  s2 -> s2 [0, 65535] { R15406 += 1, R15344 += 1, R15203 += 1, R15204 += 1 };
  s2 -> s3 [0, 65535] { R15406 += 1, R15344 += 1, R15204 += 1, R15205 += 1, R15206 += 1 };
  s2 -> s5 [75, 75] { R15406 += 1, R15344 += 1, R15204 += 1, R15206 += 1 };
  s2 -> s1 [76, 65535] { R15406 += 1, R15344 += 1, R15204 += 1, R15206 += 1 };
  s3 -> s1 [0, 74] { R15406 += 1, R15344 += 1, R15204 += 1, R15206 += 1 };
  s3 -> s3 [0, 65535] { R15406 += 1, R15344 += 1, R15204 += 1, R15205 += 1, R15206 += 1 };
  s3 -> s5 [75, 75] { R15406 += 1, R15344 += 1, R15204 += 1, R15206 += 1 };
  s3 -> s1 [76, 65535] { R15406 += 1, R15344 += 1, R15204 += 1, R15206 += 1 };
  s4 -> s1 [0, 74] { R15406 += 1, R15344 += 1, R15204 += 1, R15206 += 1 };
  s4 -> s2 [0, 65535] { R15406 += 1, R15344 += 1, R15203 += 1, R15204 += 1 };
  s4 -> s3 [0, 65535] { R15406 += 1, R15344 += 1, R15204 += 1, R15205 += 1, R15206 += 1 };
  s4 -> s4 [0, 65535] { R15406 += 1, R15343 += 1, R15344 += 1 };
  s4 -> s5 [75, 75] { R15406 += 1, R15344 += 1, R15204 += 1, R15206 += 1 };
  s4 -> s1 [76, 65535] { R15406 += 1, R15344 += 1, R15204 += 1, R15206 += 1 };
  s5 -> s6 [0, 65535] { R15406 += 1 };
  s5 -> s7 [0, 65535] { R15406 += 1, R15344 += 1, R15204 += 1 };
  s5 -> s5 [0, 65535] { R15406 += 1, R15344 += 1, R15204 += 1, R15206 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s9 [0, 65535] { R15406 += 1, R15344 += 1 };
  s6 -> s6 [0, 65535] { R15406 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s6 [0, 65535] { R15406 += 1 };
  s7 -> s7 [0, 65535] { R15406 += 1, R15344 += 1, R15204 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R15406 += 1, R15344 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s6 [0, 65535] { R15406 += 1 };
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R15406 += 1, R15344 += 1 };
  accepting s8, s5, s9, s6, s7;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R15408 += 1, R15345 += 1, R15346 += 1 };
  s0 -> s2 [0, 65535] { R15408 += 1, R15346 += 1 };
  s0 -> s0 [0, 65535] { R15407 += 1, R15408 += 1 };
  s1 -> s1 [0, 65535] { R15408 += 1, R15345 += 1, R15346 += 1 };
  s1 -> s2 [0, 65535] { R15408 += 1, R15346 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R15408 += 1, R15346 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R15408 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R15408 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R15409 += 1, R15410 += 1 };
  s0 -> s1 [0, 65535] { R15410 += 1, R15365 += 1, R15366 += 1 };
  s0 -> s2 [0, 65535] { R15410 += 1, R15366 += 1, R21 += 1 };
  s1 -> s1 [0, 65535] { R15410 += 1, R15365 += 1, R15366 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R15410 += 1, R15366 += 1, R21 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R15410 += 1, R15366 += 1, R21 += 1 };
  s2 -> s4 [0, 65535] { R15410 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R15410 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R15412 += 1, R15368 += 1 };
  s0 -> s0 [0, 65535] { R15411 += 1, R15412 += 1 };
  s0 -> s2 [0, 65535] { R15412 += 1, R15367 += 1, R15368 += 1 };
  s0 -> s3 [70, 70] { R15412 += 1, R15368 += 1 };
  s0 -> s4 [70, 70] { R15412 += 1, R15368 += 1 };
  s0 -> s5 [75, 75] { R15412 += 1, R15368 += 1 };
  s0 -> s1 [76, 65535] { R15412 += 1, R15368 += 1 };
  s1 -> s1 [0, 69] { R15412 += 1, R15368 += 1 };
  s1 -> s3 [70, 70] { R15412 += 1, R15368 += 1 };
  s1 -> s4 [70, 70] { R15412 += 1, R15368 += 1 };
  s1 -> s5 [75, 75] { R15412 += 1, R15368 += 1 };
  s1 -> s1 [76, 65535] { R15412 += 1, R15368 += 1 };
  s2 -> s1 [0, 69] { R15412 += 1, R15368 += 1 };
  s2 -> s2 [0, 65535] { R15412 += 1, R15367 += 1, R15368 += 1 };
  s2 -> s3 [70, 70] { R15412 += 1, R15368 += 1 };
  s2 -> s4 [70, 70] { R15412 += 1, R15368 += 1 };
  s2 -> s5 [75, 75] { R15412 += 1, R15368 += 1 };
  s2 -> s1 [76, 65535] { R15412 += 1, R15368 += 1 };
  s4 -> s4 [0, 70] { R15412 += 1, R15368 += 1 };
  s4 -> s7 [75, 75] { R15412 += 1, R15368 += 1 };
  s4 -> s4 [76, 65535] { R15412 += 1, R15368 += 1 };
  s5 -> s5 [0, 69] { R15412 += 1, R15368 += 1 };
  s5 -> s5 [0, 65535] { R15412 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R15412 += 1, R15368 += 1 };
  s5 -> s8 [70, 70] { R15412 += 1, R15368 += 1 };
  s5 -> s5 [75, 65535] { R15412 += 1, R15368 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R15412 += 1, R15368 += 1 };
  s7 -> s7 [0, 65535] { R15412 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R15412 += 1, R15368 += 1 };
  s8 -> s8 [0, 65535] { R15412 += 1 };
  s8 -> s6 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R15414 += 1, R15370 += 1, R83 += 1 };
  s0 -> s0 [0, 65535] { R15413 += 1, R15414 += 1 };
  s0 -> s2 [0, 65535] { R15414 += 1, R15369 += 1, R15370 += 1 };
  s0 -> s3 [70, 70] { R15414 += 1, R15370 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R15414 += 1, R15370 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R15414 += 1, R15370 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R15414 += 1, R15370 += 1, R83 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R15414 += 1 };
  s1 -> s3 [70, 70] { R15414 += 1, R15370 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R15414 += 1, R15370 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R15414 += 1, R15370 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R15414 += 1, R15370 += 1, R83 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R15414 += 1, R15369 += 1, R15370 += 1 };
  s2 -> s3 [70, 70] { R15414 += 1, R15370 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R15414 += 1, R15370 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R15414 += 1, R15370 += 1, R83 += 1 };
  s3 -> s3 [0, 65535] { R15414 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R15414 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R15414 += 1, R15370 += 1, R83 += 1 };
  s5 -> s5 [0, 65535] { R15414 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R15416 += 1, R15372 += 1, R85 += 1 };
  s0 -> s0 [0, 65535] { R15415 += 1, R15416 += 1 };
  s0 -> s2 [0, 65535] { R15416 += 1, R15371 += 1, R15372 += 1 };
  s0 -> s3 [70, 70] { R15416 += 1, R15372 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R15416 += 1, R15372 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R15416 += 1, R15372 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R15416 += 1, R15372 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R15416 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R15416 += 1, R15372 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R15416 += 1, R15372 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R15416 += 1, R15372 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R15416 += 1, R15372 += 1, R85 += 1 };
  s2 -> s2 [0, 65535] { R15416 += 1, R15371 += 1, R15372 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R15416 += 1, R15372 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R15416 += 1, R15372 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R15416 += 1, R15372 += 1, R85 += 1 };
  s3 -> s3 [0, 65535] { R15416 += 1, R15372 += 1, R85 += 1 };
  s3 -> s6 [0, 65535] { R15416 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R15416 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15416 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R15418 += 1, R15374 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R15418 += 1, R15374 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R15417 += 1, R15418 += 1 };
  s0 -> s3 [0, 65535] { R15418 += 1, R15373 += 1, R15374 += 1 };
  s0 -> s4 [70, 70] { R15418 += 1, R15374 += 1, R87 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R15418 += 1, R15374 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R15418 += 1, R15374 += 1, R87 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R15418 += 1, R15374 += 1, R88 += 1 };
  s0 -> s2 [71, 74] { R15418 += 1, R15374 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R15418 += 1, R15374 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R15418 += 1, R15374 += 1, R88 += 1 };
  s0 -> s2 [76, 65535] { R15418 += 1, R15374 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R15418 += 1, R15374 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [0, 69] { R15418 += 1, R15374 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R15418 += 1, R15374 += 1, R87 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R15418 += 1, R15374 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R15418 += 1, R15374 += 1, R87 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R15418 += 1, R15374 += 1, R88 += 1 };
  s1 -> s2 [71, 74] { R15418 += 1, R15374 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R15418 += 1, R15374 += 1, R87 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R15418 += 1, R15374 += 1, R88 += 1 };
  s1 -> s2 [76, 65535] { R15418 += 1, R15374 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R15418 += 1, R15374 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R15418 += 1, R15374 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R15418 += 1, R15374 += 1, R88 += 1 };
  s2 -> s2 [71, 74] { R15418 += 1, R15374 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R15418 += 1, R15374 += 1, R88 += 1 };
  s2 -> s2 [76, 65535] { R15418 += 1, R15374 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R15418 += 1, R15374 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R15418 += 1, R15374 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R15418 += 1, R15373 += 1, R15374 += 1 };
  s3 -> s4 [70, 70] { R15418 += 1, R15374 += 1, R87 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R15418 += 1, R15374 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R15418 += 1, R15374 += 1, R87 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R15418 += 1, R15374 += 1, R88 += 1 };
  s3 -> s2 [71, 74] { R15418 += 1, R15374 += 1, R88 += 1 };
  s3 -> s1 [71, 65535] { R15418 += 1, R15374 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R15418 += 1, R15374 += 1, R88 += 1 };
  s3 -> s2 [76, 65535] { R15418 += 1, R15374 += 1, R88 += 1 };
  s5 -> s5 [0, 74] { R15418 += 1, R15374 += 1, R88 += 1 };
  s5 -> s11 [75, 75] { R15418 += 1, R15374 += 1, R88 += 1 };
  s5 -> s5 [76, 65535] { R15418 += 1, R15374 += 1, R88 += 1 };
  s6 -> s5 [0, 74] { R15418 += 1, R15374 += 1, R88 += 1 };
  s6 -> s6 [0, 65535] { R15418 += 1, R15374 += 1, R87 += 1, R88 += 1 };
  s6 -> s11 [75, 75] { R15418 += 1, R15374 += 1, R88 += 1 };
  s6 -> s5 [76, 65535] { R15418 += 1, R15374 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R15418 += 1, R15374 += 1, R88 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R15418 += 1 };
  s8 -> s10 [70, 70] { R15418 += 1, R15374 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R15418 += 1, R15374 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R15418 += 1, R15374 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R15418 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R15418 += 1 };
  s11 -> s11 [0, 65535] { R15418 += 1, R15374 += 1, R88 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R15418 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R15420 += 1, R15376 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s2 [0, 69] { R15420 += 1, R15376 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s3 [0, 65535] { R15420 += 1, R15375 += 1, R15376 += 1 };
  s0 -> s0 [0, 65535] { R15419 += 1, R15420 += 1 };
  s0 -> s4 [70, 70] { R15420 += 1, R15376 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s5 [70, 70] { R15420 += 1, R15376 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s6 [70, 70] { R15420 += 1, R15376 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s7 [70, 70] { R15420 += 1, R15376 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s1 [71, 65535] { R15420 += 1, R15376 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s2 [71, 65535] { R15420 += 1, R15376 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s1 [0, 69] { R15420 += 1, R15376 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s1 [0, 65535] { R15420 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [70, 70] { R15420 += 1, R15376 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s5 [70, 70] { R15420 += 1, R15376 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s1 [71, 65535] { R15420 += 1, R15376 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s1 [0, 69] { R15420 += 1, R15376 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [0, 69] { R15420 += 1, R15376 += 1, R13513 += 1, R13514 += 1 };
  s2 -> s4 [70, 70] { R15420 += 1, R15376 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s5 [70, 70] { R15420 += 1, R15376 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s6 [70, 70] { R15420 += 1, R15376 += 1, R13513 += 1, R13514 += 1 };
  s2 -> s7 [70, 70] { R15420 += 1, R15376 += 1, R13513 += 1, R13514 += 1 };
  s2 -> s1 [71, 65535] { R15420 += 1, R15376 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [71, 65535] { R15420 += 1, R15376 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s1 [0, 69] { R15420 += 1, R15376 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s2 [0, 69] { R15420 += 1, R15376 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s3 [0, 65535] { R15420 += 1, R15375 += 1, R15376 += 1 };
  s3 -> s4 [70, 70] { R15420 += 1, R15376 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s5 [70, 70] { R15420 += 1, R15376 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s6 [70, 70] { R15420 += 1, R15376 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s7 [70, 70] { R15420 += 1, R15376 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s1 [71, 65535] { R15420 += 1, R15376 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s2 [71, 65535] { R15420 += 1, R15376 += 1, R13513 += 1, R13514 += 1 };
  s4 -> s4 [0, 65535] { R15420 += 1, R15376 += 1, R13514 += 1, R13515 += 1 };
  s4 -> s9 [0, 65535] { R15420 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R15420 += 1 };
  s5 -> s8 [0, 65535];
  s7 -> s4 [0, 65535] { R15420 += 1, R15376 += 1, R13514 += 1, R13515 += 1 };
  s7 -> s7 [0, 65535] { R15420 += 1, R15376 += 1, R13513 += 1, R13514 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R15420 += 1 };
  s9 -> s8 [0, 65535];
  accepting s4, s8, s5, s9, s1;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R15422 += 1, R15378 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s2 [0, 65535] { R15422 += 1, R15377 += 1, R15378 += 1 };
  s0 -> s0 [0, 65535] { R15421 += 1, R15422 += 1 };
  s0 -> s3 [70, 70] { R15422 += 1, R15378 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s4 [70, 70] { R15422 += 1, R15378 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s1 [71, 65535] { R15422 += 1, R15378 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [0, 69] { R15422 += 1, R15378 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R15422 += 1 };
  s1 -> s3 [70, 70] { R15422 += 1, R15378 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s4 [70, 70] { R15422 += 1, R15378 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [71, 65535] { R15422 += 1, R15378 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s1 [0, 69] { R15422 += 1, R15378 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R15422 += 1, R15377 += 1, R15378 += 1 };
  s2 -> s3 [70, 70] { R15422 += 1, R15378 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s4 [70, 70] { R15422 += 1, R15378 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s1 [71, 65535] { R15422 += 1, R15378 += 1, R13519 += 1, R13520 += 1 };
  s3 -> s3 [0, 65535] { R15422 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R15422 += 1 };
  s4 -> s4 [0, 65535] { R15422 += 1, R15378 += 1, R13519 += 1, R13520 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R15422 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R15424 += 1, R15380 += 1, R15199 += 1, R15200 += 1 };
  s0 -> s0 [0, 65535] { R15423 += 1, R15424 += 1 };
  s0 -> s2 [0, 65535] { R15424 += 1, R15379 += 1, R15380 += 1 };
  s0 -> s3 [70, 70] { R15424 += 1, R15380 += 1, R15199 += 1, R15200 += 1 };
  s0 -> s4 [70, 70] { R15424 += 1, R15380 += 1, R15199 += 1, R15200 += 1 };
  s0 -> s1 [71, 65535] { R15424 += 1, R15380 += 1, R15199 += 1, R15200 += 1 };
  s1 -> s1 [0, 69] { R15424 += 1, R15380 += 1, R15199 += 1, R15200 += 1 };
  s1 -> s1 [0, 65535] { R15424 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R15424 += 1, R15380 += 1, R15199 += 1, R15200 += 1 };
  s1 -> s4 [70, 70] { R15424 += 1, R15380 += 1, R15199 += 1, R15200 += 1 };
  s1 -> s1 [71, 65535] { R15424 += 1, R15380 += 1, R15199 += 1, R15200 += 1 };
  s2 -> s1 [0, 69] { R15424 += 1, R15380 += 1, R15199 += 1, R15200 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R15424 += 1, R15379 += 1, R15380 += 1 };
  s2 -> s3 [70, 70] { R15424 += 1, R15380 += 1, R15199 += 1, R15200 += 1 };
  s2 -> s4 [70, 70] { R15424 += 1, R15380 += 1, R15199 += 1, R15200 += 1 };
  s2 -> s1 [71, 65535] { R15424 += 1, R15380 += 1, R15199 += 1, R15200 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R15424 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R15424 += 1 };
  s4 -> s4 [0, 65535] { R15424 += 1, R15380 += 1, R15199 += 1, R15200 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15424 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R15426 += 1, R15382 += 1, R15318 += 1, R15320 += 1, R15321 += 1 };
  s0 -> s2 [0, 69] { R15426 += 1, R15382 += 1, R15318 += 1, R15319 += 1, R15320 += 1 };
  s0 -> s3 [0, 69] { R15426 += 1, R15382 += 1, R15317 += 1, R15318 += 1 };
  s0 -> s0 [0, 65535] { R15425 += 1, R15426 += 1 };
  s0 -> s4 [0, 65535] { R15426 += 1, R15381 += 1, R15382 += 1 };
  s0 -> s5 [70, 70] { R15426 += 1, R15382 += 1, R15318 += 1, R15320 += 1, R15321 += 1 };
  s0 -> s6 [70, 70] { R15426 += 1, R15382 += 1, R15318 += 1, R15319 += 1, R15320 += 1 };
  s0 -> s7 [70, 70] { R15426 += 1, R15382 += 1, R15317 += 1, R15318 += 1 };
  s0 -> s8 [70, 70] { R15426 += 1, R15382 += 1, R15318 += 1, R15320 += 1, R15321 += 1 };
  s0 -> s9 [70, 70] { R15426 += 1, R15382 += 1, R15318 += 1, R15319 += 1, R15320 += 1 };
  s0 -> s10 [70, 70] { R15426 += 1, R15382 += 1, R15317 += 1, R15318 += 1 };
  s0 -> s1 [71, 65535] { R15426 += 1, R15382 += 1, R15318 += 1, R15320 += 1, R15321 += 1 };
  s0 -> s2 [71, 65535] { R15426 += 1, R15382 += 1, R15318 += 1, R15319 += 1, R15320 += 1 };
  s0 -> s3 [71, 65535] { R15426 += 1, R15382 += 1, R15317 += 1, R15318 += 1 };
  s1 -> s1 [0, 69] { R15426 += 1, R15382 += 1, R15318 += 1, R15320 += 1, R15321 += 1 };
  s1 -> s17 [0, 69] { R15426 += 1, R15382 += 1, R15318 += 1 };
  s1 -> s15 [0, 69] { R15426 += 1, R15382 += 1 };
  s1 -> s5 [70, 70] { R15426 += 1, R15382 += 1, R15318 += 1, R15320 += 1, R15321 += 1 };
  s1 -> s11 [70, 70] { R15426 += 1, R15382 += 1 };
  s1 -> s16 [70, 70] { R15426 += 1, R15382 += 1 };
  s1 -> s8 [70, 70] { R15426 += 1, R15382 += 1, R15318 += 1, R15320 += 1, R15321 += 1 };
  s1 -> s12 [70, 70] { R15426 += 1, R15382 += 1, R15318 += 1 };
  s1 -> s18 [70, 70] { R15426 += 1, R15382 += 1, R15318 += 1 };
  s1 -> s1 [71, 65535] { R15426 += 1, R15382 += 1, R15318 += 1, R15320 += 1, R15321 += 1 };
  s1 -> s17 [71, 65535] { R15426 += 1, R15382 += 1, R15318 += 1 };
  s1 -> s15 [71, 65535] { R15426 += 1, R15382 += 1 };
  s2 -> s1 [0, 69] { R15426 += 1, R15382 += 1, R15318 += 1, R15320 += 1, R15321 += 1 };
  s2 -> s2 [0, 69] { R15426 += 1, R15382 += 1, R15318 += 1, R15319 += 1, R15320 += 1 };
  s2 -> s15 [0, 69] { R15426 += 1, R15382 += 1 };
  s2 -> s5 [70, 70] { R15426 += 1, R15382 += 1, R15318 += 1, R15320 += 1, R15321 += 1 };
  s2 -> s6 [70, 70] { R15426 += 1, R15382 += 1, R15318 += 1, R15319 += 1, R15320 += 1 };
  s2 -> s11 [70, 70] { R15426 += 1, R15382 += 1 };
  s2 -> s16 [70, 70] { R15426 += 1, R15382 += 1 };
  s2 -> s8 [70, 70] { R15426 += 1, R15382 += 1, R15318 += 1, R15320 += 1, R15321 += 1 };
  s2 -> s9 [70, 70] { R15426 += 1, R15382 += 1, R15318 += 1, R15319 += 1, R15320 += 1 };
  s2 -> s1 [71, 65535] { R15426 += 1, R15382 += 1, R15318 += 1, R15320 += 1, R15321 += 1 };
  s2 -> s2 [71, 65535] { R15426 += 1, R15382 += 1, R15318 += 1, R15319 += 1, R15320 += 1 };
  s2 -> s15 [71, 65535] { R15426 += 1, R15382 += 1 };
  s3 -> s1 [0, 69] { R15426 += 1, R15382 += 1, R15318 += 1, R15320 += 1, R15321 += 1 };
  s3 -> s2 [0, 69] { R15426 += 1, R15382 += 1, R15318 += 1, R15319 += 1, R15320 += 1 };
  s3 -> s3 [0, 69] { R15426 += 1, R15382 += 1, R15317 += 1, R15318 += 1 };
  s3 -> s5 [70, 70] { R15426 += 1, R15382 += 1, R15318 += 1, R15320 += 1, R15321 += 1 };
  s3 -> s6 [70, 70] { R15426 += 1, R15382 += 1, R15318 += 1, R15319 += 1, R15320 += 1 };
  s3 -> s7 [70, 70] { R15426 += 1, R15382 += 1, R15317 += 1, R15318 += 1 };
  s3 -> s8 [70, 70] { R15426 += 1, R15382 += 1, R15318 += 1, R15320 += 1, R15321 += 1 };
  s3 -> s9 [70, 70] { R15426 += 1, R15382 += 1, R15318 += 1, R15319 += 1, R15320 += 1 };
  s3 -> s10 [70, 70] { R15426 += 1, R15382 += 1, R15317 += 1, R15318 += 1 };
  s3 -> s1 [71, 65535] { R15426 += 1, R15382 += 1, R15318 += 1, R15320 += 1, R15321 += 1 };
  s3 -> s2 [71, 65535] { R15426 += 1, R15382 += 1, R15318 += 1, R15319 += 1, R15320 += 1 };
  s3 -> s3 [71, 65535] { R15426 += 1, R15382 += 1, R15317 += 1, R15318 += 1 };
  s4 -> s1 [0, 69] { R15426 += 1, R15382 += 1, R15318 += 1, R15320 += 1, R15321 += 1 };
  s4 -> s2 [0, 69] { R15426 += 1, R15382 += 1, R15318 += 1, R15319 += 1, R15320 += 1 };
  s4 -> s3 [0, 69] { R15426 += 1, R15382 += 1, R15317 += 1, R15318 += 1 };
  s4 -> s4 [0, 65535] { R15426 += 1, R15381 += 1, R15382 += 1 };
  s4 -> s5 [70, 70] { R15426 += 1, R15382 += 1, R15318 += 1, R15320 += 1, R15321 += 1 };
  s4 -> s6 [70, 70] { R15426 += 1, R15382 += 1, R15318 += 1, R15319 += 1, R15320 += 1 };
  s4 -> s7 [70, 70] { R15426 += 1, R15382 += 1, R15317 += 1, R15318 += 1 };
  s4 -> s8 [70, 70] { R15426 += 1, R15382 += 1, R15318 += 1, R15320 += 1, R15321 += 1 };
  s4 -> s9 [70, 70] { R15426 += 1, R15382 += 1, R15318 += 1, R15319 += 1, R15320 += 1 };
  s4 -> s10 [70, 70] { R15426 += 1, R15382 += 1, R15317 += 1, R15318 += 1 };
  s4 -> s1 [71, 65535] { R15426 += 1, R15382 += 1, R15318 += 1, R15320 += 1, R15321 += 1 };
  s4 -> s2 [71, 65535] { R15426 += 1, R15382 += 1, R15318 += 1, R15319 += 1, R15320 += 1 };
  s4 -> s3 [71, 65535] { R15426 += 1, R15382 += 1, R15317 += 1, R15318 += 1 };
  s6 -> s6 [0, 65535] { R15426 += 1, R15382 += 1, R15318 += 1, R15319 += 1, R15320 += 1 };
  s6 -> s11 [0, 65535] { R15426 += 1, R15382 += 1 };
  s6 -> s8 [0, 65535] { R15426 += 1, R15382 += 1, R15318 += 1, R15320 += 1, R15321 += 1 };
  s7 -> s6 [0, 65535] { R15426 += 1, R15382 += 1, R15318 += 1, R15319 += 1, R15320 += 1 };
  s7 -> s7 [0, 65535] { R15426 += 1, R15382 += 1, R15317 += 1, R15318 += 1 };
  s7 -> s8 [0, 65535] { R15426 += 1, R15382 += 1, R15318 += 1, R15320 += 1, R15321 += 1 };
  s8 -> s11 [0, 65535] { R15426 += 1, R15382 += 1 };
  s8 -> s8 [0, 65535] { R15426 += 1, R15382 += 1, R15318 += 1, R15320 += 1, R15321 += 1 };
  s8 -> s12 [0, 65535] { R15426 += 1, R15382 += 1, R15318 += 1 };
  s11 -> s11 [0, 65535] { R15426 += 1, R15382 += 1 };
  s11 -> s13 [0, 65535];
  s11 -> s14 [0, 65535] { R15426 += 1 };
  s12 -> s11 [0, 65535] { R15426 += 1, R15382 += 1 };
  s12 -> s12 [0, 65535] { R15426 += 1, R15382 += 1, R15318 += 1 };
  s13 -> s13 [0, 65535];
  s14 -> s13 [0, 65535];
  s14 -> s14 [0, 65535] { R15426 += 1 };
  s15 -> s15 [0, 69] { R15426 += 1, R15382 += 1 };
  s15 -> s13 [0, 65535];
  s15 -> s15 [0, 65535] { R15426 += 1 };
  s15 -> s11 [70, 70] { R15426 += 1, R15382 += 1 };
  s15 -> s16 [70, 70] { R15426 += 1, R15382 += 1 };
  s15 -> s15 [71, 65535] { R15426 += 1, R15382 += 1 };
  s16 -> s16 [0, 65535] { R15426 += 1 };
  s16 -> s13 [0, 65535];
  s17 -> s17 [0, 69] { R15426 += 1, R15382 += 1, R15318 += 1 };
  s17 -> s15 [0, 69] { R15426 += 1, R15382 += 1 };
  s17 -> s11 [70, 70] { R15426 += 1, R15382 += 1 };
  s17 -> s16 [70, 70] { R15426 += 1, R15382 += 1 };
  s17 -> s12 [70, 70] { R15426 += 1, R15382 += 1, R15318 += 1 };
  s17 -> s18 [70, 70] { R15426 += 1, R15382 += 1, R15318 += 1 };
  s17 -> s17 [71, 65535] { R15426 += 1, R15382 += 1, R15318 += 1 };
  s17 -> s15 [71, 65535] { R15426 += 1, R15382 += 1 };
  accepting s16, s13, s14, s15, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R15344 && R3 = R15426 && R23 - R15426 = -1 && R24 = R15426 && R25 - R15426 = -1 && R26 = R15426 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R15204 + -1*R15200 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R15204 + -1*R15200 - R66 = 0 && R55 + R13518 + R13515 + -1*R15206 + -1*R15202 - R68 = 0 && R65 + R15203 + R15199 = 0 && R67 + R15205 + R15201 = 0 && R15343 = 0 && R15367 = 0 && R15368 = 0 && R15373 = 0 && R15374 = 0 && R15375 = 0 && R15376 = 0 && R15381 = 0 && R15382 = 0 && R15383 = 0 && R15384 = R15426 && R15385 = 0 && R15386 = R15426 && R15387 = 0 && R15388 = R15426 && R15389 = 0 && R15390 = R15426 && R15391 = 0 && R15392 = R15426 && R15393 = 0 && R15394 = R15426 && R15395 = 0 && R15396 = R15426 && R15397 = 0 && R15398 = R15426 && R15399 = 0 && R15400 = R15426 && R15401 = 0 && R15402 = R15426 && R15403 = 0 && R15404 = R15426 && R15405 = 0 && R15406 = R15426 && R15407 = 0 && R15408 = R15426 && R15409 = 0 && R15410 = R15426 && R15411 = 0 && R15412 = R15426 && R15413 = 0 && R15414 = R15426 && R15415 = 0 && R15416 = R15426 && R15417 = 0 && R15418 = R15426 && R15419 = 0 && R15420 = R15426 && R15421 = 0 && R15422 = R15426 && R15423 = 0 && R15424 = R15426 && R15425 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R13524 + R13521 < 1 && -1*R15204 + -1*R15200 - R66 < 1 && -1*R15206 + -1*R15202 - R68 < 1 && -1 < R15344 && 0 < R15426 && (R53 + R13516 + R13513 != 0 || R54 + R13517 + R13514 + -1*R15204 + -1*R15200 - R66 = 0 || R66 + R15204 + R15200 < 1) && (R59 + R13522 + R13519 != 0 || R60 + R13523 + R13520 + -1*R15204 + -1*R15200 - R66 = 0 || R66 + R15204 + R15200 < 1) && (R66 + R15204 + R15200 != 0 || ((R53 + R13516 + R13513 != 0 || R54 + R13517 + R13514 = 0 || R68 + R15206 + R15202 < 1) && (R53 + R13516 + R13513 = 0 || R68 + R15206 + R15202 < 1))) && (R66 + R15204 + R15200 != 0 || ((R59 + R13522 + R13519 != 0 || R60 + R13523 + R13520 = 0 || R68 + R15206 + R15202 < 1) && (R59 + R13522 + R13519 = 0 || R68 + R15206 + R15202 < 1))) && (R66 + R15204 + R15200 != 0 || ((R73 + R15322 + R15317 != 0 || R74 + R15323 + R15318 = 0 || R68 + R15206 + R15202 < 1) && (R73 + R15322 + R15317 = 0 || R68 + R15206 + R15202 < 1))) && (R68 + R15206 + R15202 != 0 || R77 + R15326 + R15321 = 0 || (R75 + R15324 + R15319 = 0 && R76 + R15325 + R15320 = 0)) && (R73 + R15322 + R15317 != 0 || R66 + R15204 + R15200 + -1*R15323 + -1*R15318 - R74 = 0 || R66 + R15204 + R15200 < 1) && (R75 + R15324 + R15319 != 0 || R68 + R15206 + R15202 + -1*R15325 + -1*R15320 - R76 = 0 || R68 + R15206 + R15202 < 1) && (R15327 != 0 || R15328 = R15344 || (R20 = 0 && R15344 = 0)) && (R15329 != 0 || R15330 = R15344 || (R20 = 0 && R15344 = 0)) && (R15331 != 0 || R15332 = R15344 || (R20 = 0 && R15344 = 0)) && (R15333 != 0 || R15334 = R15344 || (R20 = 0 && R15344 = 0)) && (R15335 != 0 || R15336 = R15344 || (R20 = 0 && R15344 = 0)) && (R15337 != 0 || R15338 = R15344 || (R20 = 0 && R15344 = 0)) && (R15339 != 0 || R15340 = R15344 || (R20 = 0 && R15344 = 0)) && (R15341 != 0 || R15342 = R15344 || (R20 = 0 && R15344 = 0)) && (R15345 != 0 || R15344 = R15346 || (R20 = 0 && R15344 = 0)) && (R21 = 0 || (R15365 = 0 && R15366 = 0)) && (R21 = 0 || (R15369 = 0 && R15370 = 0)) && (R21 = 0 || (R15371 = 0 && R15372 = 0)) && (R21 = 0 || (R15377 = 0 && R15378 = 0)) && (R21 = 0 || (R15379 = 0 && R15380 = 0)) && (R22 = 0 || (R15347 = 0 && R15348 = 0)) && (R22 = 0 || (R15349 = 0 && R15350 = 0)) && (R22 = 0 || (R15351 = 0 && R15352 = 0)) && (R22 = 0 || (R15353 = 0 && R15354 = 0)) && (R22 = 0 || (R15355 = 0 && R15356 = 0)) && (R22 = 0 || (R15357 = 0 && R15358 = 0)) && (R22 = 0 || (R15359 = 0 && R15360 = 0)) && (R22 = 0 || (R15361 = 0 && R15362 = 0)) && (R22 = 0 || (R15363 = 0 && R15364 = 0)) && (R53 + R13516 + R13513 = 0 || R66 + R15204 + R15200 < 1) && (R59 + R13522 + R13519 = 0 || R66 + R15204 + R15200 < 1) && (R73 + R15322 + R15317 = 0 || R66 + R15204 + R15200 < 1) && (R75 + R15324 + R15319 = 0 || R68 + R15206 + R15202 < 1) && (R15327 = 0 || (R20 = 0 && R15344 = 0)) && (R15329 = 0 || (R20 = 0 && R15344 = 0)) && (R15331 = 0 || (R20 = 0 && R15344 = 0)) && (R15333 = 0 || (R20 = 0 && R15344 = 0)) && (R15335 = 0 || (R20 = 0 && R15344 = 0)) && (R15337 = 0 || (R20 = 0 && R15344 = 0)) && (R15339 = 0 || (R20 = 0 && R15344 = 0)) && (R15341 = 0 || (R20 = 0 && R15344 = 0)) && (R15345 = 0 || (R20 = 0 && R15344 = 0));
// End of Parikh automata intersection problem
