// Parikh automata intersection problem, generated by OSTRICH+
counter int R12, R13513, R13514, R13515, R13516, R13517, R13518, R13519, R13520, R13521, R13522, R13523, R13524, R13525, R13526, R13527, R13528, R13529, R13530, R13531, R13532, R13753, R13754, R13755, R13756, R13757, R13758, R13759, R13760, R13761, R13762, R13763, R13764, R13765, R13766, R13767, R13768, R13769, R13770, R13771, R13772, R13773, R13774, R13775, R13776, R13777, R13778, R13779, R13780, R13781, R13782, R13783, R13784, R13785, R13786, R13787, R13788, R13789, R13790, R13791, R13792, R13793, R13794, R13795, R13796, R13797, R13798, R13799, R13800, R13801, R13802, R13803, R13804, R13805, R13806, R13807, R13808, R13809, R13810, R13811, R13812, R13813, R13814, R13815, R13816, R13817, R13818, R13819, R13820, R13821, R13822, R13823, R13824, R13825, R13826, R13827, R13828, R13829, R13830, R13831, R13832, R13833, R13834, R13835, R13836, R13837, R13838, R13839, R13840, R13841, R13842, R13843, R13844, R13845, R13846, R13847, R13848, R13849, R13850, R13851, R13852, R13853, R13854, R13855, R13856, R13857, R13858, R13859, R13860, R13861, R13862, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R4, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R13783 += 1, R13784 += 1 };
  s0 -> s1 [0, 65535] { R13784 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R13784 += 1, R22 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R13786 += 1 };
  s0 -> s0 [0, 65535] { R13785 += 1, R13786 += 1 };
  s0 -> s2 [70, 70] { R13786 += 1 };
  s0 -> s3 [70, 70] { R13786 += 1 };
  s0 -> s1 [76, 65535] { R13786 += 1 };
  s1 -> s1 [0, 69] { R13786 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13786 += 1 };
  s1 -> s3 [70, 70] { R13786 += 1 };
  s1 -> s1 [76, 65535] { R13786 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R13786 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R13786 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R13788 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R13787 += 1, R13788 += 1 };
  s0 -> s2 [70, 70] { R13788 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R13788 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R13788 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R13788 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13788 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R13788 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R13788 += 1, R45 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13788 += 1, R45 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R13790 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R13789 += 1, R13790 += 1 };
  s0 -> s2 [70, 70] { R13790 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R13790 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R13790 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R13790 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13790 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R13790 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R13790 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R13790 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R13792 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R13791 += 1, R13792 += 1 };
  s0 -> s2 [70, 70] { R13792 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R13792 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R13792 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R13792 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13792 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R13792 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R13792 += 1, R49 += 1, R50 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13792 += 1, R49 += 1, R50 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R13794 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R13793 += 1, R13794 += 1 };
  s0 -> s2 [70, 70] { R13794 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R13794 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R13794 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R13794 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13794 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R13794 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R13794 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13794 += 1, R53 += 1, R54 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R13796 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R13795 += 1, R13796 += 1 };
  s0 -> s2 [70, 70] { R13796 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R13796 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R13796 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R13796 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13796 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R13796 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R13796 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R13796 += 1, R59 += 1, R60 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R13798 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R13797 += 1, R13798 += 1 };
  s0 -> s2 [70, 70] { R13798 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R13798 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R13798 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R13798 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13798 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R13798 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R13798 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R13798 += 1, R65 += 1, R66 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R13800 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R13799 += 1, R13800 += 1 };
  s0 -> s2 [70, 70] { R13800 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R13800 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R13800 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R13800 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13800 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R13800 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R13800 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R13800 += 1, R73 += 1, R74 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R13820 += 1 };
  s0 -> s0 [0, 65535] { R13819 += 1, R13820 += 1 };
  s0 -> s2 [70, 70] { R13820 += 1 };
  s0 -> s1 [71, 65535] { R13820 += 1 };
  s1 -> s1 [0, 69] { R13820 += 1 };
  s1 -> s2 [70, 70] { R13820 += 1 };
  s1 -> s1 [71, 65535] { R13820 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13820 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R13821 += 1, R13822 += 1 };
  s0 -> s1 [0, 65535] { R13822 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R13822 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R13824 += 1 };
  s0 -> s2 [0, 65535] { R13824 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R13823 += 1, R13824 += 1 };
  s0 -> s3 [70, 70] { R13824 += 1 };
  s0 -> s1 [71, 65535] { R13824 += 1 };
  s1 -> s1 [0, 69] { R13824 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R13824 += 1 };
  s1 -> s1 [71, 65535] { R13824 += 1 };
  s2 -> s1 [0, 69] { R13824 += 1 };
  s2 -> s2 [0, 65535] { R13824 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R13824 += 1 };
  s2 -> s1 [71, 65535] { R13824 += 1 };
  s3 -> s3 [0, 65535] { R13824 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R13826 += 1, R13764 += 1 };
  s0 -> s2 [0, 65535] { R13826 += 1, R13763 += 1, R13764 += 1 };
  s0 -> s0 [0, 65535] { R13825 += 1, R13826 += 1 };
  s0 -> s1 [71, 65535] { R13826 += 1, R13764 += 1 };
  s1 -> s1 [0, 69] { R13826 += 1, R13764 += 1 };
  s1 -> s1 [0, 65535] { R13826 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R13826 += 1, R13764 += 1 };
  s2 -> s1 [0, 69] { R13826 += 1, R13764 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13826 += 1, R13763 += 1, R13764 += 1 };
  s2 -> s1 [71, 65535] { R13826 += 1, R13764 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s0 [0, 65535] { R13827 += 1, R13828 += 1 };
  s0 -> s1 [0, 65535] { R13828 += 1, R13765 += 1, R13766 += 1 };
  s0 -> s2 [0, 65535] { R13828 += 1, R13766 += 1, R20 += 1 };
  s1 -> s1 [0, 65535] { R13828 += 1, R13765 += 1, R13766 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R13828 += 1, R13766 += 1, R20 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R13828 += 1 };
  s2 -> s2 [0, 65535] { R13828 += 1, R13766 += 1, R20 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13828 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R13830 += 1, R13768 += 1 };
  s0 -> s2 [0, 65535] { R13830 += 1, R13767 += 1, R13768 += 1 };
  s0 -> s0 [0, 65535] { R13829 += 1, R13830 += 1 };
  s0 -> s1 [75, 65535] { R13830 += 1, R13768 += 1 };
  s1 -> s1 [0, 70] { R13830 += 1, R13768 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R13830 += 1 };
  s1 -> s1 [75, 65535] { R13830 += 1, R13768 += 1 };
  s2 -> s1 [0, 70] { R13830 += 1, R13768 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13830 += 1, R13767 += 1, R13768 += 1 };
  s2 -> s1 [75, 65535] { R13830 += 1, R13768 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R13832 += 1, R13769 += 1, R13770 += 1 };
  s0 -> s0 [0, 65535] { R13831 += 1, R13832 += 1 };
  s0 -> s2 [0, 65535] { R13832 += 1, R13770 += 1, R84 += 1 };
  s1 -> s1 [0, 65535] { R13832 += 1, R13769 += 1, R13770 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R13832 += 1, R13770 += 1, R84 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13832 += 1, R13770 += 1, R84 += 1 };
  s2 -> s4 [0, 65535] { R13832 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13832 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R13834 += 1, R13772 += 1 };
  s0 -> s0 [0, 65535] { R13833 += 1, R13834 += 1 };
  s0 -> s2 [0, 65535] { R13834 += 1, R13772 += 1, R86 += 1 };
  s0 -> s3 [0, 65535] { R13834 += 1, R13771 += 1, R13772 += 1 };
  s0 -> s1 [76, 65535] { R13834 += 1, R13772 += 1 };
  s1 -> s1 [0, 74] { R13834 += 1, R13772 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R13834 += 1 };
  s1 -> s1 [76, 65535] { R13834 += 1, R13772 += 1 };
  s2 -> s1 [0, 74] { R13834 += 1, R13772 += 1 };
  s2 -> s5 [0, 65535] { R13834 += 1 };
  s2 -> s2 [0, 65535] { R13834 += 1, R13772 += 1, R86 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [76, 65535] { R13834 += 1, R13772 += 1 };
  s3 -> s1 [0, 74] { R13834 += 1, R13772 += 1 };
  s3 -> s2 [0, 65535] { R13834 += 1, R13772 += 1, R86 += 1 };
  s3 -> s3 [0, 65535] { R13834 += 1, R13771 += 1, R13772 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [76, 65535] { R13834 += 1, R13772 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13834 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R13836 += 1, R13774 += 1, R90 += 1 };
  s0 -> s2 [0, 65535] { R13836 += 1, R13773 += 1, R13774 += 1 };
  s0 -> s0 [0, 65535] { R13835 += 1, R13836 += 1 };
  s0 -> s3 [0, 65535] { R13836 += 1, R13774 += 1 };
  s1 -> s4 [0, 65535] { R13836 += 1 };
  s1 -> s1 [0, 65535] { R13836 += 1, R13774 += 1, R90 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R13836 += 1, R13774 += 1 };
  s2 -> s1 [0, 65535] { R13836 += 1, R13774 += 1, R90 += 1 };
  s2 -> s2 [0, 65535] { R13836 += 1, R13773 += 1, R13774 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R13836 += 1, R13774 += 1 };
  s3 -> s4 [0, 65535] { R13836 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R13836 += 1, R13774 += 1 };
  s4 -> s4 [0, 65535] { R13836 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R13838 += 1, R13775 += 1, R13776 += 1 };
  s0 -> s2 [0, 65535] { R13838 += 1, R13776 += 1, R13517 += 1, R13518 += 1 };
  s0 -> s0 [0, 65535] { R13837 += 1, R13838 += 1 };
  s0 -> s3 [0, 65535] { R13838 += 1, R13776 += 1 };
  s1 -> s1 [0, 65535] { R13838 += 1, R13775 += 1, R13776 += 1 };
  s1 -> s2 [0, 65535] { R13838 += 1, R13776 += 1, R13517 += 1, R13518 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R13838 += 1, R13776 += 1 };
  s2 -> s4 [0, 65535] { R13838 += 1 };
  s2 -> s2 [0, 65535] { R13838 += 1, R13776 += 1, R13517 += 1, R13518 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R13838 += 1, R13776 += 1 };
  s3 -> s4 [0, 65535] { R13838 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R13838 += 1, R13776 += 1 };
  s4 -> s4 [0, 65535] { R13838 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R13840 += 1, R13778 += 1, R13523 += 1 };
  s0 -> s0 [0, 65535] { R13839 += 1, R13840 += 1 };
  s0 -> s2 [0, 65535] { R13840 += 1, R13778 += 1, R13522 += 1, R13523 += 1 };
  s0 -> s3 [0, 65535] { R13840 += 1, R13778 += 1, R13523 += 1, R13524 += 1 };
  s0 -> s4 [0, 65535] { R13840 += 1, R13777 += 1, R13778 += 1 };
  s0 -> s1 [76, 65535] { R13840 += 1, R13778 += 1, R13523 += 1 };
  s1 -> s1 [0, 74] { R13840 += 1, R13778 += 1, R13523 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R13840 += 1 };
  s1 -> s1 [0, 65535] { R13840 += 1, R13778 += 1 };
  s1 -> s1 [76, 65535] { R13840 += 1, R13778 += 1, R13523 += 1 };
  s2 -> s1 [0, 74] { R13840 += 1, R13778 += 1, R13523 += 1 };
  s2 -> s2 [0, 65535] { R13840 += 1, R13778 += 1, R13522 += 1, R13523 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R13840 += 1 };
  s2 -> s3 [0, 65535] { R13840 += 1, R13778 += 1, R13523 += 1, R13524 += 1 };
  s2 -> s1 [76, 65535] { R13840 += 1, R13778 += 1, R13523 += 1 };
  s3 -> s1 [0, 74] { R13840 += 1, R13778 += 1, R13523 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R13840 += 1, R13778 += 1 };
  s3 -> s7 [0, 65535] { R13840 += 1 };
  s3 -> s3 [0, 65535] { R13840 += 1, R13778 += 1, R13523 += 1, R13524 += 1 };
  s3 -> s1 [76, 65535] { R13840 += 1, R13778 += 1, R13523 += 1 };
  s4 -> s1 [0, 74] { R13840 += 1, R13778 += 1, R13523 += 1 };
  s4 -> s2 [0, 65535] { R13840 += 1, R13778 += 1, R13522 += 1, R13523 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R13840 += 1, R13778 += 1, R13523 += 1, R13524 += 1 };
  s4 -> s4 [0, 65535] { R13840 += 1, R13777 += 1, R13778 += 1 };
  s4 -> s1 [76, 65535] { R13840 += 1, R13778 += 1, R13523 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13840 += 1, R13778 += 1 };
  s6 -> s7 [0, 65535] { R13840 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R13840 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s0 [0, 65535] { R13841 += 1, R13842 += 1 };
  s0 -> s1 [0, 65535] { R13842 += 1, R13780 += 1 };
  s0 -> s2 [0, 65535] { R13842 += 1, R13779 += 1, R13780 += 1 };
  s0 -> s3 [0, 65535] { R13842 += 1, R13780 += 1, R13530 += 1 };
  s0 -> s4 [0, 65535] { R13842 += 1, R13780 += 1, R13530 += 1, R13532 += 1 };
  s1 -> s5 [0, 65535] { R13842 += 1 };
  s1 -> s1 [0, 65535] { R13842 += 1, R13780 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s1 [0, 65535] { R13842 += 1, R13780 += 1 };
  s2 -> s2 [0, 65535] { R13842 += 1, R13779 += 1, R13780 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R13842 += 1, R13780 += 1, R13530 += 1 };
  s2 -> s4 [0, 65535] { R13842 += 1, R13780 += 1, R13530 += 1, R13532 += 1 };
  s3 -> s5 [0, 65535] { R13842 += 1 };
  s3 -> s1 [0, 65535] { R13842 += 1, R13780 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R13842 += 1, R13780 += 1, R13530 += 1 };
  s4 -> s5 [0, 65535] { R13842 += 1 };
  s4 -> s1 [0, 65535] { R13842 += 1, R13780 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s3 [0, 65535] { R13842 += 1, R13780 += 1, R13530 += 1 };
  s4 -> s4 [0, 65535] { R13842 += 1, R13780 += 1, R13530 += 1, R13532 += 1 };
  s5 -> s5 [0, 65535] { R13842 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s0 [0, 65535] { R13843 += 1, R13844 += 1 };
  s0 -> s1 [0, 65535] { R13844 += 1, R13781 += 1, R13782 += 1 };
  s0 -> s2 [0, 65535] { R13844 += 1, R13782 += 1, R13758 += 1, R13759 += 1 };
  s0 -> s3 [0, 65535] { R13844 += 1, R13782 += 1, R13759 += 1, R13760 += 1, R13761 += 1 };
  s0 -> s4 [0, 65535] { R13844 += 1, R13782 += 1, R13759 += 1, R13761 += 1, R13762 += 1 };
  s1 -> s1 [0, 65535] { R13844 += 1, R13781 += 1, R13782 += 1 };
  s1 -> s2 [0, 65535] { R13844 += 1, R13782 += 1, R13758 += 1, R13759 += 1 };
  s1 -> s3 [0, 65535] { R13844 += 1, R13782 += 1, R13759 += 1, R13760 += 1, R13761 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s4 [0, 65535] { R13844 += 1, R13782 += 1, R13759 += 1, R13761 += 1, R13762 += 1 };
  s2 -> s2 [0, 65535] { R13844 += 1, R13782 += 1, R13758 += 1, R13759 += 1 };
  s2 -> s3 [0, 65535] { R13844 += 1, R13782 += 1, R13759 += 1, R13760 += 1, R13761 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R13844 += 1 };
  s2 -> s4 [0, 65535] { R13844 += 1, R13782 += 1, R13759 += 1, R13761 += 1, R13762 += 1 };
  s3 -> s3 [0, 65535] { R13844 += 1, R13782 += 1, R13759 += 1, R13760 += 1, R13761 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s7 [0, 65535] { R13844 += 1 };
  s3 -> s4 [0, 65535] { R13844 += 1, R13782 += 1, R13759 += 1, R13761 += 1, R13762 += 1 };
  s3 -> s8 [0, 65535] { R13844 += 1, R13782 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R13844 += 1, R13782 += 1, R13759 += 1 };
  s4 -> s7 [0, 65535] { R13844 += 1 };
  s4 -> s4 [0, 65535] { R13844 += 1, R13782 += 1, R13759 += 1, R13761 += 1, R13762 += 1 };
  s4 -> s8 [0, 65535] { R13844 += 1, R13782 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13844 += 1, R13782 += 1, R13759 += 1 };
  s6 -> s7 [0, 65535] { R13844 += 1 };
  s6 -> s8 [0, 65535] { R13844 += 1, R13782 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R13844 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s7 [0, 65535] { R13844 += 1 };
  s8 -> s8 [0, 65535] { R13844 += 1, R13782 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R13846 += 1, R13802 += 1, R21 += 1 };
  s0 -> s0 [0, 65535] { R13845 += 1, R13846 += 1 };
  s0 -> s2 [0, 65535] { R13846 += 1, R13801 += 1, R13802 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R13846 += 1 };
  s1 -> s1 [0, 65535] { R13846 += 1, R13802 += 1, R21 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R13846 += 1, R13802 += 1, R21 += 1 };
  s2 -> s2 [0, 65535] { R13846 += 1, R13801 += 1, R13802 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13846 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R13848 += 1, R13804 += 1 };
  s0 -> s2 [0, 65535] { R13848 += 1, R13803 += 1, R13804 += 1 };
  s0 -> s0 [0, 65535] { R13847 += 1, R13848 += 1 };
  s0 -> s3 [70, 70] { R13848 += 1, R13804 += 1 };
  s0 -> s4 [70, 70] { R13848 += 1, R13804 += 1 };
  s0 -> s5 [75, 75] { R13848 += 1, R13804 += 1 };
  s0 -> s1 [76, 65535] { R13848 += 1, R13804 += 1 };
  s1 -> s1 [0, 69] { R13848 += 1, R13804 += 1 };
  s1 -> s3 [70, 70] { R13848 += 1, R13804 += 1 };
  s1 -> s4 [70, 70] { R13848 += 1, R13804 += 1 };
  s1 -> s5 [75, 75] { R13848 += 1, R13804 += 1 };
  s1 -> s1 [76, 65535] { R13848 += 1, R13804 += 1 };
  s2 -> s1 [0, 69] { R13848 += 1, R13804 += 1 };
  s2 -> s2 [0, 65535] { R13848 += 1, R13803 += 1, R13804 += 1 };
  s2 -> s3 [70, 70] { R13848 += 1, R13804 += 1 };
  s2 -> s4 [70, 70] { R13848 += 1, R13804 += 1 };
  s2 -> s5 [75, 75] { R13848 += 1, R13804 += 1 };
  s2 -> s1 [76, 65535] { R13848 += 1, R13804 += 1 };
  s4 -> s4 [0, 70] { R13848 += 1, R13804 += 1 };
  s4 -> s7 [75, 75] { R13848 += 1, R13804 += 1 };
  s4 -> s4 [76, 65535] { R13848 += 1, R13804 += 1 };
  s5 -> s5 [0, 69] { R13848 += 1, R13804 += 1 };
  s5 -> s5 [0, 65535] { R13848 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R13848 += 1, R13804 += 1 };
  s5 -> s8 [70, 70] { R13848 += 1, R13804 += 1 };
  s5 -> s5 [75, 65535] { R13848 += 1, R13804 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R13848 += 1, R13804 += 1 };
  s7 -> s7 [0, 65535] { R13848 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R13848 += 1, R13804 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R13848 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R13850 += 1, R13806 += 1, R83 += 1 };
  s0 -> s2 [0, 65535] { R13850 += 1, R13805 += 1, R13806 += 1 };
  s0 -> s0 [0, 65535] { R13849 += 1, R13850 += 1 };
  s0 -> s3 [70, 70] { R13850 += 1, R13806 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R13850 += 1, R13806 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R13850 += 1, R13806 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R13850 += 1, R13806 += 1, R83 += 1 };
  s1 -> s1 [0, 65535] { R13850 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R13850 += 1, R13806 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R13850 += 1, R13806 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R13850 += 1, R13806 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R13850 += 1, R13806 += 1, R83 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13850 += 1, R13805 += 1, R13806 += 1 };
  s2 -> s3 [70, 70] { R13850 += 1, R13806 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R13850 += 1, R13806 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R13850 += 1, R13806 += 1, R83 += 1 };
  s3 -> s6 [0, 65535] { R13850 += 1 };
  s3 -> s3 [0, 65535] { R13850 += 1, R13806 += 1, R83 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13850 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13850 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R13852 += 1, R13808 += 1, R85 += 1 };
  s0 -> s2 [0, 65535] { R13852 += 1, R13807 += 1, R13808 += 1 };
  s0 -> s0 [0, 65535] { R13851 += 1, R13852 += 1 };
  s0 -> s3 [70, 70] { R13852 += 1, R13808 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R13852 += 1, R13808 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R13852 += 1, R13808 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R13852 += 1, R13808 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R13852 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R13852 += 1, R13808 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R13852 += 1, R13808 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R13852 += 1, R13808 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R13852 += 1, R13808 += 1, R85 += 1 };
  s2 -> s2 [0, 65535] { R13852 += 1, R13807 += 1, R13808 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R13852 += 1, R13808 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R13852 += 1, R13808 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R13852 += 1, R13808 += 1, R85 += 1 };
  s3 -> s6 [0, 65535] { R13852 += 1 };
  s3 -> s3 [0, 65535] { R13852 += 1, R13808 += 1, R85 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13852 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13852 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R13854 += 1, R13810 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R13854 += 1, R13810 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [0, 65535] { R13854 += 1, R13809 += 1, R13810 += 1 };
  s0 -> s0 [0, 65535] { R13853 += 1, R13854 += 1 };
  s0 -> s4 [70, 70] { R13854 += 1, R13810 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R13854 += 1, R13810 += 1, R87 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R13854 += 1, R13810 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R13854 += 1, R13810 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 74] { R13854 += 1, R13810 += 1, R88 += 1 };
  s0 -> s2 [71, 65535] { R13854 += 1, R13810 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R13854 += 1, R13810 += 1, R88 += 1 };
  s0 -> s1 [76, 65535] { R13854 += 1, R13810 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R13854 += 1, R13810 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R13854 += 1, R13810 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R13854 += 1, R13810 += 1, R88 += 1 };
  s1 -> s1 [71, 74] { R13854 += 1, R13810 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R13854 += 1, R13810 += 1, R88 += 1 };
  s1 -> s1 [76, 65535] { R13854 += 1, R13810 += 1, R88 += 1 };
  s2 -> s1 [0, 69] { R13854 += 1, R13810 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R13854 += 1, R13810 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R13854 += 1, R13810 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R13854 += 1, R13810 += 1, R87 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R13854 += 1, R13810 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R13854 += 1, R13810 += 1, R87 += 1, R88 += 1 };
  s2 -> s1 [71, 74] { R13854 += 1, R13810 += 1, R88 += 1 };
  s2 -> s2 [71, 65535] { R13854 += 1, R13810 += 1, R87 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R13854 += 1, R13810 += 1, R88 += 1 };
  s2 -> s1 [76, 65535] { R13854 += 1, R13810 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R13854 += 1, R13810 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R13854 += 1, R13810 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R13854 += 1, R13809 += 1, R13810 += 1 };
  s3 -> s4 [70, 70] { R13854 += 1, R13810 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R13854 += 1, R13810 += 1, R87 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R13854 += 1, R13810 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R13854 += 1, R13810 += 1, R87 += 1, R88 += 1 };
  s3 -> s1 [71, 74] { R13854 += 1, R13810 += 1, R88 += 1 };
  s3 -> s2 [71, 65535] { R13854 += 1, R13810 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R13854 += 1, R13810 += 1, R88 += 1 };
  s3 -> s1 [76, 65535] { R13854 += 1, R13810 += 1, R88 += 1 };
  s6 -> s6 [0, 74] { R13854 += 1, R13810 += 1, R88 += 1 };
  s6 -> s11 [75, 75] { R13854 += 1, R13810 += 1, R88 += 1 };
  s6 -> s6 [76, 65535] { R13854 += 1, R13810 += 1, R88 += 1 };
  s7 -> s6 [0, 74] { R13854 += 1, R13810 += 1, R88 += 1 };
  s7 -> s7 [0, 65535] { R13854 += 1, R13810 += 1, R87 += 1, R88 += 1 };
  s7 -> s11 [75, 75] { R13854 += 1, R13810 += 1, R88 += 1 };
  s7 -> s6 [76, 65535] { R13854 += 1, R13810 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R13854 += 1, R13810 += 1, R88 += 1 };
  s8 -> s8 [0, 65535] { R13854 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R13854 += 1, R13810 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R13854 += 1, R13810 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R13854 += 1, R13810 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R13854 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R13854 += 1 };
  s11 -> s11 [0, 65535] { R13854 += 1, R13810 += 1, R88 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R13854 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R13856 += 1, R13812 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s2 [0, 69] { R13856 += 1, R13812 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s0 [0, 65535] { R13855 += 1, R13856 += 1 };
  s0 -> s3 [0, 65535] { R13856 += 1, R13811 += 1, R13812 += 1 };
  s0 -> s4 [70, 70] { R13856 += 1, R13812 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s5 [70, 70] { R13856 += 1, R13812 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s6 [70, 70] { R13856 += 1, R13812 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s7 [70, 70] { R13856 += 1, R13812 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s1 [71, 65535] { R13856 += 1, R13812 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s2 [71, 65535] { R13856 += 1, R13812 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s1 [0, 69] { R13856 += 1, R13812 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s2 [0, 69] { R13856 += 1, R13812 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s4 [70, 70] { R13856 += 1, R13812 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s5 [70, 70] { R13856 += 1, R13812 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s6 [70, 70] { R13856 += 1, R13812 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s7 [70, 70] { R13856 += 1, R13812 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s1 [71, 65535] { R13856 += 1, R13812 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s2 [71, 65535] { R13856 += 1, R13812 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [0, 69] { R13856 += 1, R13812 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [0, 65535] { R13856 += 1 };
  s2 -> s9 [0, 65535];
  s2 -> s6 [70, 70] { R13856 += 1, R13812 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s7 [70, 70] { R13856 += 1, R13812 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [71, 65535] { R13856 += 1, R13812 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s1 [0, 69] { R13856 += 1, R13812 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s2 [0, 69] { R13856 += 1, R13812 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s3 [0, 65535] { R13856 += 1, R13811 += 1, R13812 += 1 };
  s3 -> s4 [70, 70] { R13856 += 1, R13812 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s5 [70, 70] { R13856 += 1, R13812 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s6 [70, 70] { R13856 += 1, R13812 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s7 [70, 70] { R13856 += 1, R13812 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s1 [71, 65535] { R13856 += 1, R13812 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s2 [71, 65535] { R13856 += 1, R13812 += 1, R13514 += 1, R13515 += 1 };
  s5 -> s5 [0, 65535] { R13856 += 1, R13812 += 1, R13513 += 1, R13514 += 1 };
  s5 -> s7 [0, 65535] { R13856 += 1, R13812 += 1, R13514 += 1, R13515 += 1 };
  s6 -> s6 [0, 65535] { R13856 += 1 };
  s6 -> s9 [0, 65535];
  s7 -> s7 [0, 65535] { R13856 += 1, R13812 += 1, R13514 += 1, R13515 += 1 };
  s7 -> s8 [0, 65535] { R13856 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R13856 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  accepting s8, s2, s9, s6, s7;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R13858 += 1, R13814 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s0 [0, 65535] { R13857 += 1, R13858 += 1 };
  s0 -> s2 [0, 65535] { R13858 += 1, R13813 += 1, R13814 += 1 };
  s0 -> s3 [70, 70] { R13858 += 1, R13814 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s4 [70, 70] { R13858 += 1, R13814 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s1 [71, 65535] { R13858 += 1, R13814 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [0, 69] { R13858 += 1, R13814 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [0, 65535] { R13858 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R13858 += 1, R13814 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s4 [70, 70] { R13858 += 1, R13814 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [71, 65535] { R13858 += 1, R13814 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s1 [0, 69] { R13858 += 1, R13814 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13858 += 1, R13813 += 1, R13814 += 1 };
  s2 -> s3 [70, 70] { R13858 += 1, R13814 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s4 [70, 70] { R13858 += 1, R13814 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s1 [71, 65535] { R13858 += 1, R13814 += 1, R13519 += 1, R13520 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R13858 += 1, R13814 += 1, R13519 += 1, R13520 += 1 };
  s3 -> s6 [0, 65535] { R13858 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13858 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13858 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R13860 += 1, R13816 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s0 -> s2 [0, 69] { R13860 += 1, R13816 += 1, R13525 += 1, R13526 += 1 };
  s0 -> s3 [0, 69] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s0 -> s0 [0, 65535] { R13859 += 1, R13860 += 1 };
  s0 -> s4 [0, 65535] { R13860 += 1, R13815 += 1, R13816 += 1 };
  s0 -> s5 [70, 70] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s0 -> s6 [70, 70] { R13860 += 1, R13816 += 1, R13525 += 1, R13526 += 1 };
  s0 -> s7 [70, 70] { R13860 += 1, R13816 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s0 -> s8 [70, 70] { R13860 += 1, R13816 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s0 -> s9 [70, 70] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s0 -> s10 [70, 70] { R13860 += 1, R13816 += 1, R13525 += 1, R13526 += 1 };
  s0 -> s3 [71, 74] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s0 -> s1 [71, 65535] { R13860 += 1, R13816 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s0 -> s2 [71, 65535] { R13860 += 1, R13816 += 1, R13525 += 1, R13526 += 1 };
  s0 -> s11 [75, 75] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s0 -> s3 [76, 65535] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s1 -> s1 [0, 69] { R13860 += 1, R13816 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s1 -> s3 [0, 69] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s1 -> s5 [70, 70] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s1 -> s7 [70, 70] { R13860 += 1, R13816 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s1 -> s8 [70, 70] { R13860 += 1, R13816 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s1 -> s9 [70, 70] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s1 -> s3 [71, 74] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s1 -> s1 [71, 65535] { R13860 += 1, R13816 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s1 -> s11 [75, 75] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s1 -> s3 [76, 65535] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s2 -> s1 [0, 69] { R13860 += 1, R13816 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s2 -> s2 [0, 69] { R13860 += 1, R13816 += 1, R13525 += 1, R13526 += 1 };
  s2 -> s3 [0, 69] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s2 -> s5 [70, 70] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s2 -> s6 [70, 70] { R13860 += 1, R13816 += 1, R13525 += 1, R13526 += 1 };
  s2 -> s7 [70, 70] { R13860 += 1, R13816 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s2 -> s8 [70, 70] { R13860 += 1, R13816 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s2 -> s9 [70, 70] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s2 -> s10 [70, 70] { R13860 += 1, R13816 += 1, R13525 += 1, R13526 += 1 };
  s2 -> s3 [71, 74] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s2 -> s1 [71, 65535] { R13860 += 1, R13816 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s2 -> s2 [71, 65535] { R13860 += 1, R13816 += 1, R13525 += 1, R13526 += 1 };
  s2 -> s11 [75, 75] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s2 -> s3 [76, 65535] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s3 -> s3 [0, 69] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s3 -> s5 [70, 70] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s3 -> s9 [70, 70] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s3 -> s3 [71, 74] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s3 -> s11 [75, 75] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s3 -> s3 [76, 65535] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s4 -> s1 [0, 69] { R13860 += 1, R13816 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s4 -> s2 [0, 69] { R13860 += 1, R13816 += 1, R13525 += 1, R13526 += 1 };
  s4 -> s3 [0, 69] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s4 -> s4 [0, 65535] { R13860 += 1, R13815 += 1, R13816 += 1 };
  s4 -> s5 [70, 70] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s4 -> s6 [70, 70] { R13860 += 1, R13816 += 1, R13525 += 1, R13526 += 1 };
  s4 -> s7 [70, 70] { R13860 += 1, R13816 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s4 -> s8 [70, 70] { R13860 += 1, R13816 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s4 -> s9 [70, 70] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s4 -> s10 [70, 70] { R13860 += 1, R13816 += 1, R13525 += 1, R13526 += 1 };
  s4 -> s3 [71, 74] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s4 -> s1 [71, 65535] { R13860 += 1, R13816 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s4 -> s2 [71, 65535] { R13860 += 1, R13816 += 1, R13525 += 1, R13526 += 1 };
  s4 -> s11 [75, 75] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s4 -> s3 [76, 65535] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s6 -> s9 [0, 74] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s6 -> s6 [0, 65535] { R13860 += 1, R13816 += 1, R13525 += 1, R13526 += 1 };
  s6 -> s8 [0, 65535] { R13860 += 1, R13816 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s6 -> s14 [75, 75] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s6 -> s9 [76, 65535] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s8 -> s9 [0, 74] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s8 -> s8 [0, 65535] { R13860 += 1, R13816 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s8 -> s14 [75, 75] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s8 -> s9 [76, 65535] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s9 -> s9 [0, 74] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s9 -> s14 [75, 75] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s9 -> s9 [76, 65535] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s11 -> s11 [0, 69] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s11 -> s11 [0, 65535] { R13860 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [70, 70] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s11 -> s14 [70, 70] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s11 -> s11 [71, 65535] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R13860 += 1 };
  s13 -> s12 [0, 65535];
  s14 -> s15 [0, 65535] { R13860 += 1 };
  s14 -> s14 [0, 65535] { R13860 += 1, R13816 += 1, R13526 += 1, R13528 += 1 };
  s14 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R13860 += 1 };
  s15 -> s12 [0, 65535];
  accepting s12, s13, s14, s15, s11;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R13862 += 1, R13818 += 1, R13753 += 1, R13754 += 1 };
  s0 -> s0 [0, 65535] { R13861 += 1, R13862 += 1 };
  s0 -> s2 [0, 65535] { R13862 += 1, R13817 += 1, R13818 += 1 };
  s0 -> s3 [70, 70] { R13862 += 1, R13818 += 1, R13753 += 1, R13754 += 1 };
  s0 -> s4 [70, 70] { R13862 += 1, R13818 += 1, R13753 += 1, R13754 += 1 };
  s0 -> s1 [71, 65535] { R13862 += 1, R13818 += 1, R13753 += 1, R13754 += 1 };
  s1 -> s1 [0, 69] { R13862 += 1, R13818 += 1, R13753 += 1, R13754 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R13862 += 1 };
  s1 -> s3 [70, 70] { R13862 += 1, R13818 += 1, R13753 += 1, R13754 += 1 };
  s1 -> s4 [70, 70] { R13862 += 1, R13818 += 1, R13753 += 1, R13754 += 1 };
  s1 -> s1 [71, 65535] { R13862 += 1, R13818 += 1, R13753 += 1, R13754 += 1 };
  s2 -> s1 [0, 69] { R13862 += 1, R13818 += 1, R13753 += 1, R13754 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R13862 += 1, R13817 += 1, R13818 += 1 };
  s2 -> s3 [70, 70] { R13862 += 1, R13818 += 1, R13753 += 1, R13754 += 1 };
  s2 -> s4 [70, 70] { R13862 += 1, R13818 += 1, R13753 += 1, R13754 += 1 };
  s2 -> s1 [71, 65535] { R13862 += 1, R13818 += 1, R13753 += 1, R13754 += 1 };
  s3 -> s3 [0, 65535] { R13862 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R13862 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R13862 += 1, R13818 += 1, R13753 += 1, R13754 += 1 };
  s5 -> s5 [0, 65535] { R13862 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R13862 && R23 - R13862 = -1 && R24 = R13862 && R25 - R13862 = -1 && R26 = R13862 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R13530 + -1*R13526 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R13530 + -1*R13526 - R66 = 0 && R55 + R13518 + R13515 + -1*R13532 + -1*R13528 - R68 = 0 && R65 + R13529 + R13525 = 0 && R67 + R13531 + R13527 = 0 && R13803 = 0 && R13804 = 0 && R13809 = 0 && R13810 = 0 && R13811 = 0 && R13812 = 0 && R13815 = 0 && R13816 = 0 && R13819 = 0 && R13820 = R13862 && R13821 = 0 && R13822 = R13862 && R13823 = 0 && R13824 = R13862 && R13825 = 0 && R13826 = R13862 && R13827 = 0 && R13828 = R13862 && R13829 = 0 && R13830 = R13862 && R13831 = 0 && R13832 = R13862 && R13833 = 0 && R13834 = R13862 && R13835 = 0 && R13836 = R13862 && R13837 = 0 && R13838 = R13862 && R13839 = 0 && R13840 = R13862 && R13841 = 0 && R13842 = R13862 && R13843 = 0 && R13844 = R13862 && R13845 = 0 && R13846 = R13862 && R13847 = 0 && R13848 = R13862 && R13849 = 0 && R13850 = R13862 && R13851 = 0 && R13852 = R13862 && R13853 = 0 && R13854 = R13862 && R13855 = 0 && R13856 = R13862 && R13857 = 0 && R13858 = R13862 && R13859 = 0 && R13860 = R13862 && R13861 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R13524 + R13521 < 1 && -1*R13530 + -1*R13526 - R66 < 1 && -1*R13532 + -1*R13528 - R68 < 1 && 0 < R13862 && (R2 != 0 || R20 = 0 || (R13763 = 0 && R13764 = 0)) && (R2 != 0 || R20 = 0 || (R13765 = 0 && R13766 = 0)) && (R2 != 0 || R20 = 0 || (R13767 = 0 && R13768 = 0)) && (R2 != 0 || R20 = 0 || (R13769 = 0 && R13770 = 0)) && (R2 != 0 || R20 = 0 || (R13771 = 0 && R13772 = 0)) && (R2 != 0 || R20 = 0 || (R13773 = 0 && R13774 = 0)) && (R2 != 0 || R20 = 0 || (R13775 = 0 && R13776 = 0)) && (R2 != 0 || R20 = 0 || (R13777 = 0 && R13778 = 0)) && (R2 != 0 || R20 = 0 || (R13779 = 0 && R13780 = 0)) && (R2 != 0 || R20 = 0 || (R13781 = 0 && R13782 = 0)) && (R53 + R13516 + R13513 != 0 || R54 + R13517 + R13514 + -1*R13530 + -1*R13526 - R66 = 0 || R66 + R13530 + R13526 < 1) && (R59 + R13522 + R13519 != 0 || R60 + R13523 + R13520 + -1*R13530 + -1*R13526 - R66 = 0 || R66 + R13530 + R13526 < 1) && (R66 + R13530 + R13526 != 0 || ((R53 + R13516 + R13513 != 0 || R54 + R13517 + R13514 = 0 || R68 + R13532 + R13528 < 1) && (R53 + R13516 + R13513 = 0 || R68 + R13532 + R13528 < 1))) && (R66 + R13530 + R13526 != 0 || ((R59 + R13522 + R13519 != 0 || R60 + R13523 + R13520 = 0 || R68 + R13532 + R13528 < 1) && (R59 + R13522 + R13519 = 0 || R68 + R13532 + R13528 < 1))) && (R66 + R13530 + R13526 != 0 || ((R73 + R13758 + R13753 != 0 || R74 + R13759 + R13754 = 0 || R68 + R13532 + R13528 < 1) && (R73 + R13758 + R13753 = 0 || R68 + R13532 + R13528 < 1))) && (R68 + R13532 + R13528 != 0 || R77 + R13762 + R13757 = 0 || (R75 + R13760 + R13755 = 0 && R76 + R13761 + R13756 = 0)) && (R73 + R13758 + R13753 != 0 || R66 + R13530 + R13526 + -1*R13759 + -1*R13754 - R74 = 0 || R66 + R13530 + R13526 < 1) && (R75 + R13760 + R13755 != 0 || R68 + R13532 + R13528 + -1*R13761 + -1*R13756 - R76 = 0 || R68 + R13532 + R13528 < 1) && (R13763 != 0 || R2 = R13764 || R2 < 1) && (R13765 != 0 || R2 = R13766 || R2 < 1) && (R13767 != 0 || R2 = R13768 || R2 < 1) && (R13769 != 0 || R2 = R13770 || R2 < 1) && (R13771 != 0 || R2 = R13772 || R2 < 1) && (R13773 != 0 || R2 = R13774 || R2 < 1) && (R13775 != 0 || R2 = R13776 || R2 < 1) && (R13777 != 0 || R2 = R13778 || R2 < 1) && (R13779 != 0 || R2 = R13780 || R2 < 1) && (R13781 != 0 || R2 = R13782 || R2 < 1) && (R21 = 0 || (R13801 = 0 && R13802 = 0)) && (R21 = 0 || (R13805 = 0 && R13806 = 0)) && (R21 = 0 || (R13807 = 0 && R13808 = 0)) && (R21 = 0 || (R13813 = 0 && R13814 = 0)) && (R21 = 0 || (R13817 = 0 && R13818 = 0)) && (R22 = 0 || (R13783 = 0 && R13784 = 0)) && (R22 = 0 || (R13785 = 0 && R13786 = 0)) && (R22 = 0 || (R13787 = 0 && R13788 = 0)) && (R22 = 0 || (R13789 = 0 && R13790 = 0)) && (R22 = 0 || (R13791 = 0 && R13792 = 0)) && (R22 = 0 || (R13793 = 0 && R13794 = 0)) && (R22 = 0 || (R13795 = 0 && R13796 = 0)) && (R22 = 0 || (R13797 = 0 && R13798 = 0)) && (R22 = 0 || (R13799 = 0 && R13800 = 0)) && (R53 + R13516 + R13513 = 0 || R66 + R13530 + R13526 < 1) && (R59 + R13522 + R13519 = 0 || R66 + R13530 + R13526 < 1) && (R73 + R13758 + R13753 = 0 || R66 + R13530 + R13526 < 1) && (R75 + R13760 + R13755 = 0 || R68 + R13532 + R13528 < 1) && (R13763 = 0 || R2 < 1) && (R13765 = 0 || R2 < 1) && (R13767 = 0 || R2 < 1) && (R13769 = 0 || R2 < 1) && (R13771 = 0 || R2 < 1) && (R13773 = 0 || R2 < 1) && (R13775 = 0 || R2 < 1) && (R13777 = 0 || R2 < 1) && (R13779 = 0 || R2 < 1) && (R13781 = 0 || R2 < 1);
// End of Parikh automata intersection problem
