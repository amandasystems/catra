// Parikh automata intersection problem, generated by OSTRICH+
counter int
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R15120 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R15119 += 1, R15120 += 1 };
  s1 -> s1 [0, 65535] { R15120 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R15122 += 1 };
  s0 -> s0 [0, 65535] { R15121 += 1, R15122 += 1 };
  s0 -> s2 [70, 70] { R15122 += 1 };
  s0 -> s3 [70, 70] { R15122 += 1 };
  s0 -> s1 [76, 65535] { R15122 += 1 };
  s1 -> s1 [0, 69] { R15122 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15122 += 1 };
  s1 -> s3 [70, 70] { R15122 += 1 };
  s1 -> s1 [76, 65535] { R15122 += 1 };
  s2 -> s2 [0, 70] { R15122 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R15122 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R15124 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R15123 += 1, R15124 += 1 };
  s0 -> s2 [70, 70] { R15124 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R15124 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R15124 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R15124 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15124 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R15124 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R15124 += 1, R45 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R15124 += 1, R45 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R15126 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R15125 += 1, R15126 += 1 };
  s0 -> s2 [70, 70] { R15126 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R15126 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R15126 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R15126 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15126 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R15126 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R15126 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R15126 += 1, R47 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R15128 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R15127 += 1, R15128 += 1 };
  s0 -> s2 [70, 70] { R15128 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R15128 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R15128 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R15128 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15128 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R15128 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R15128 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R15128 += 1, R49 += 1, R50 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R15130 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R15129 += 1, R15130 += 1 };
  s0 -> s2 [70, 70] { R15130 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R15130 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R15130 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R15130 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15130 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R15130 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R15130 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R15130 += 1, R53 += 1, R54 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R15132 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R15131 += 1, R15132 += 1 };
  s0 -> s2 [70, 70] { R15132 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R15132 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R15132 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R15132 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15132 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R15132 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R15132 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R15132 += 1, R59 += 1, R60 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R15134 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R15133 += 1, R15134 += 1 };
  s0 -> s2 [70, 70] { R15134 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R15134 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R15134 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R15134 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15134 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R15134 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R15134 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R15134 += 1, R65 += 1, R66 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R15136 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R15135 += 1, R15136 += 1 };
  s0 -> s2 [70, 70] { R15136 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R15136 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R15136 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R15136 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15136 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R15136 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R15136 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R15136 += 1, R73 += 1, R74 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R15156 += 1 };
  s0 -> s0 [0, 65535] { R15155 += 1, R15156 += 1 };
  s0 -> s2 [70, 70] { R15156 += 1 };
  s0 -> s1 [71, 65535] { R15156 += 1 };
  s1 -> s1 [0, 69] { R15156 += 1 };
  s1 -> s2 [70, 70] { R15156 += 1 };
  s1 -> s1 [71, 65535] { R15156 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R15156 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R15157 += 1, R15158 += 1 };
  s0 -> s1 [0, 65535] { R15158 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R15158 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R15160 += 1 };
  s0 -> s2 [0, 65535] { R15160 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R15159 += 1, R15160 += 1 };
  s0 -> s3 [70, 70] { R15160 += 1 };
  s0 -> s1 [71, 65535] { R15160 += 1 };
  s1 -> s1 [0, 69] { R15160 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R15160 += 1 };
  s1 -> s1 [71, 65535] { R15160 += 1 };
  s2 -> s1 [0, 69] { R15160 += 1 };
  s2 -> s2 [0, 65535] { R15160 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R15160 += 1 };
  s2 -> s1 [71, 65535] { R15160 += 1 };
  s3 -> s3 [0, 65535] { R15160 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R15162 += 1, R15100 += 1 };
  s0 -> s0 [0, 65535] { R15161 += 1, R15162 += 1 };
  s0 -> s2 [0, 65535] { R15162 += 1, R15099 += 1, R15100 += 1 };
  s0 -> s1 [71, 65535] { R15162 += 1, R15100 += 1 };
  s1 -> s1 [0, 69] { R15162 += 1, R15100 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R15162 += 1 };
  s1 -> s1 [71, 65535] { R15162 += 1, R15100 += 1 };
  s2 -> s1 [0, 69] { R15162 += 1, R15100 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R15162 += 1, R15099 += 1, R15100 += 1 };
  s2 -> s1 [71, 65535] { R15162 += 1, R15100 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R15164 += 1, R15101 += 1, R15102 += 1 };
  s0 -> s0 [0, 65535] { R15163 += 1, R15164 += 1 };
  s0 -> s2 [0, 65535] { R15164 += 1, R15102 += 1, R20 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R15164 += 1, R15101 += 1, R15102 += 1 };
  s1 -> s2 [0, 65535] { R15164 += 1, R15102 += 1, R20 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R15164 += 1 };
  s2 -> s2 [0, 65535] { R15164 += 1, R15102 += 1, R20 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R15164 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R15166 += 1, R15104 += 1 };
  s0 -> s0 [0, 65535] { R15165 += 1, R15166 += 1 };
  s0 -> s2 [0, 65535] { R15166 += 1, R15103 += 1, R15104 += 1 };
  s0 -> s1 [75, 65535] { R15166 += 1, R15104 += 1 };
  s1 -> s1 [0, 70] { R15166 += 1, R15104 += 1 };
  s1 -> s1 [0, 65535] { R15166 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R15166 += 1, R15104 += 1 };
  s2 -> s1 [0, 70] { R15166 += 1, R15104 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R15166 += 1, R15103 += 1, R15104 += 1 };
  s2 -> s1 [75, 65535] { R15166 += 1, R15104 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R15167 += 1, R15168 += 1 };
  s0 -> s1 [0, 65535] { R15168 += 1, R15106 += 1, R84 += 1 };
  s0 -> s2 [0, 65535] { R15168 += 1, R15105 += 1, R15106 += 1 };
  s1 -> s1 [0, 65535] { R15168 += 1, R15106 += 1, R84 += 1 };
  s1 -> s4 [0, 65535] { R15168 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R15168 += 1, R15106 += 1, R84 += 1 };
  s2 -> s2 [0, 65535] { R15168 += 1, R15105 += 1, R15106 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R15168 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R15170 += 1, R15108 += 1 };
  s0 -> s2 [0, 65535] { R15170 += 1, R15108 += 1, R86 += 1 };
  s0 -> s0 [0, 65535] { R15169 += 1, R15170 += 1 };
  s0 -> s3 [0, 65535] { R15170 += 1, R15107 += 1, R15108 += 1 };
  s0 -> s1 [76, 65535] { R15170 += 1, R15108 += 1 };
  s1 -> s1 [0, 74] { R15170 += 1, R15108 += 1 };
  s1 -> s1 [0, 65535] { R15170 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [76, 65535] { R15170 += 1, R15108 += 1 };
  s2 -> s1 [0, 74] { R15170 += 1, R15108 += 1 };
  s2 -> s2 [0, 65535] { R15170 += 1, R15108 += 1, R86 += 1 };
  s2 -> s5 [0, 65535] { R15170 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [76, 65535] { R15170 += 1, R15108 += 1 };
  s3 -> s1 [0, 74] { R15170 += 1, R15108 += 1 };
  s3 -> s2 [0, 65535] { R15170 += 1, R15108 += 1, R86 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R15170 += 1, R15107 += 1, R15108 += 1 };
  s3 -> s1 [76, 65535] { R15170 += 1, R15108 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R15170 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R15172 += 1, R15110 += 1, R90 += 1 };
  s0 -> s2 [0, 65535] { R15172 += 1, R15109 += 1, R15110 += 1 };
  s0 -> s0 [0, 65535] { R15171 += 1, R15172 += 1 };
  s0 -> s3 [0, 65535] { R15172 += 1, R15110 += 1 };
  s1 -> s1 [0, 65535] { R15172 += 1, R15110 += 1, R90 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s3 [0, 65535] { R15172 += 1, R15110 += 1 };
  s1 -> s5 [0, 65535] { R15172 += 1 };
  s2 -> s1 [0, 65535] { R15172 += 1, R15110 += 1, R90 += 1 };
  s2 -> s2 [0, 65535] { R15172 += 1, R15109 += 1, R15110 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R15172 += 1, R15110 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R15172 += 1, R15110 += 1 };
  s3 -> s5 [0, 65535] { R15172 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R15172 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R15174 += 1, R15111 += 1, R15112 += 1 };
  s0 -> s0 [0, 65535] { R15173 += 1, R15174 += 1 };
  s0 -> s2 [0, 65535] { R15174 += 1, R15112 += 1, R13517 += 1, R13518 += 1 };
  s0 -> s3 [0, 65535] { R15174 += 1, R15112 += 1 };
  s1 -> s1 [0, 65535] { R15174 += 1, R15111 += 1, R15112 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R15174 += 1, R15112 += 1, R13517 += 1, R13518 += 1 };
  s1 -> s3 [0, 65535] { R15174 += 1, R15112 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R15174 += 1 };
  s2 -> s2 [0, 65535] { R15174 += 1, R15112 += 1, R13517 += 1, R13518 += 1 };
  s2 -> s3 [0, 65535] { R15174 += 1, R15112 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R15174 += 1 };
  s3 -> s3 [0, 65535] { R15174 += 1, R15112 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R15174 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R15176 += 1, R15114 += 1, R13523 += 1 };
  s0 -> s2 [0, 65535] { R15176 += 1, R15114 += 1, R13523 += 1, R13524 += 1 };
  s0 -> s0 [0, 65535] { R15175 += 1, R15176 += 1 };
  s0 -> s3 [0, 65535] { R15176 += 1, R15113 += 1, R15114 += 1 };
  s0 -> s4 [0, 65535] { R15176 += 1, R15114 += 1, R13522 += 1, R13523 += 1 };
  s0 -> s1 [76, 65535] { R15176 += 1, R15114 += 1, R13523 += 1 };
  s1 -> s1 [0, 74] { R15176 += 1, R15114 += 1, R13523 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R15176 += 1 };
  s1 -> s1 [0, 65535] { R15176 += 1, R15114 += 1 };
  s1 -> s1 [76, 65535] { R15176 += 1, R15114 += 1, R13523 += 1 };
  s2 -> s1 [0, 74] { R15176 += 1, R15114 += 1, R13523 += 1 };
  s2 -> s7 [0, 65535] { R15176 += 1, R15114 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R15176 += 1, R15114 += 1, R13523 += 1, R13524 += 1 };
  s2 -> s6 [0, 65535] { R15176 += 1 };
  s2 -> s1 [76, 65535] { R15176 += 1, R15114 += 1, R13523 += 1 };
  s3 -> s1 [0, 74] { R15176 += 1, R15114 += 1, R13523 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R15176 += 1, R15114 += 1, R13523 += 1, R13524 += 1 };
  s3 -> s3 [0, 65535] { R15176 += 1, R15113 += 1, R15114 += 1 };
  s3 -> s4 [0, 65535] { R15176 += 1, R15114 += 1, R13522 += 1, R13523 += 1 };
  s3 -> s1 [76, 65535] { R15176 += 1, R15114 += 1, R13523 += 1 };
  s4 -> s1 [0, 74] { R15176 += 1, R15114 += 1, R13523 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R15176 += 1, R15114 += 1, R13523 += 1, R13524 += 1 };
  s4 -> s6 [0, 65535] { R15176 += 1 };
  s4 -> s4 [0, 65535] { R15176 += 1, R15114 += 1, R13522 += 1, R13523 += 1 };
  s4 -> s1 [76, 65535] { R15176 += 1, R15114 += 1, R13523 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15176 += 1 };
  s7 -> s7 [0, 65535] { R15176 += 1, R15114 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R15176 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R15178 += 1, R15115 += 1, R15116 += 1 };
  s0 -> s2 [0, 65535] { R15178 += 1, R15116 += 1 };
  s0 -> s0 [0, 65535] { R15177 += 1, R15178 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R15178 += 1, R15115 += 1, R15116 += 1 };
  s1 -> s2 [0, 65535] { R15178 += 1, R15116 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R15178 += 1 };
  s2 -> s2 [0, 65535] { R15178 += 1, R15116 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R15178 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R15180 += 1, R15117 += 1, R15118 += 1 };
  s0 -> s2 [0, 65535] { R15180 += 1, R15118 += 1, R15095 += 1, R15096 += 1, R15097 += 1 };
  s0 -> s3 [0, 65535] { R15180 += 1, R15118 += 1, R15095 += 1, R15097 += 1, R15098 += 1 };
  s0 -> s0 [0, 65535] { R15179 += 1, R15180 += 1 };
  s0 -> s4 [0, 65535] { R15180 += 1, R15118 += 1 };
  s1 -> s1 [0, 65535] { R15180 += 1, R15117 += 1, R15118 += 1 };
  s1 -> s2 [0, 65535] { R15180 += 1, R15118 += 1, R15095 += 1, R15096 += 1, R15097 += 1 };
  s1 -> s3 [0, 65535] { R15180 += 1, R15118 += 1, R15095 += 1, R15097 += 1, R15098 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s4 [0, 65535] { R15180 += 1, R15118 += 1 };
  s2 -> s5 [0, 65535] { R15180 += 1 };
  s2 -> s2 [0, 65535] { R15180 += 1, R15118 += 1, R15095 += 1, R15096 += 1, R15097 += 1 };
  s2 -> s3 [0, 65535] { R15180 += 1, R15118 += 1, R15095 += 1, R15097 += 1, R15098 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [0, 65535] { R15180 += 1, R15118 += 1 };
  s3 -> s5 [0, 65535] { R15180 += 1 };
  s3 -> s7 [0, 65535] { R15180 += 1, R15118 += 1, R15095 += 1 };
  s3 -> s3 [0, 65535] { R15180 += 1, R15118 += 1, R15095 += 1, R15097 += 1, R15098 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R15180 += 1, R15118 += 1 };
  s4 -> s5 [0, 65535] { R15180 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R15180 += 1, R15118 += 1 };
  s5 -> s5 [0, 65535] { R15180 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R15180 += 1 };
  s7 -> s7 [0, 65535] { R15180 += 1, R15118 += 1, R15095 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s4 [0, 65535] { R15180 += 1, R15118 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R15182 += 1, R15137 += 1, R15138 += 1 };
  s0 -> s0 [0, 65535] { R15181 += 1, R15182 += 1 };
  s0 -> s2 [0, 65535] { R15182 += 1, R15138 += 1, R21 += 1 };
  s1 -> s1 [0, 65535] { R15182 += 1, R15137 += 1, R15138 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R15182 += 1, R15138 += 1, R21 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R15182 += 1 };
  s2 -> s2 [0, 65535] { R15182 += 1, R15138 += 1, R21 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R15182 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R15184 += 1, R15140 += 1 };
  s0 -> s0 [0, 65535] { R15183 += 1, R15184 += 1 };
  s0 -> s2 [0, 65535] { R15184 += 1, R15139 += 1, R15140 += 1 };
  s0 -> s3 [70, 70] { R15184 += 1, R15140 += 1 };
  s0 -> s4 [70, 70] { R15184 += 1, R15140 += 1 };
  s0 -> s5 [75, 75] { R15184 += 1, R15140 += 1 };
  s0 -> s1 [76, 65535] { R15184 += 1, R15140 += 1 };
  s1 -> s1 [0, 69] { R15184 += 1, R15140 += 1 };
  s1 -> s3 [70, 70] { R15184 += 1, R15140 += 1 };
  s1 -> s4 [70, 70] { R15184 += 1, R15140 += 1 };
  s1 -> s5 [75, 75] { R15184 += 1, R15140 += 1 };
  s1 -> s1 [76, 65535] { R15184 += 1, R15140 += 1 };
  s2 -> s1 [0, 69] { R15184 += 1, R15140 += 1 };
  s2 -> s2 [0, 65535] { R15184 += 1, R15139 += 1, R15140 += 1 };
  s2 -> s3 [70, 70] { R15184 += 1, R15140 += 1 };
  s2 -> s4 [70, 70] { R15184 += 1, R15140 += 1 };
  s2 -> s5 [75, 75] { R15184 += 1, R15140 += 1 };
  s2 -> s1 [76, 65535] { R15184 += 1, R15140 += 1 };
  s4 -> s4 [0, 70] { R15184 += 1, R15140 += 1 };
  s4 -> s8 [75, 75] { R15184 += 1, R15140 += 1 };
  s4 -> s4 [76, 65535] { R15184 += 1, R15140 += 1 };
  s5 -> s5 [0, 69] { R15184 += 1, R15140 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R15184 += 1 };
  s5 -> s7 [70, 70] { R15184 += 1, R15140 += 1 };
  s5 -> s8 [70, 70] { R15184 += 1, R15140 += 1 };
  s5 -> s5 [75, 65535] { R15184 += 1, R15140 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R15184 += 1 };
  s8 -> s8 [0, 70] { R15184 += 1, R15140 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R15184 += 1 };
  s8 -> s8 [75, 65535] { R15184 += 1, R15140 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R15186 += 1, R15142 += 1, R83 += 1 };
  s0 -> s2 [0, 65535] { R15186 += 1, R15141 += 1, R15142 += 1 };
  s0 -> s0 [0, 65535] { R15185 += 1, R15186 += 1 };
  s0 -> s3 [70, 70] { R15186 += 1, R15142 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R15186 += 1, R15142 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R15186 += 1, R15142 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R15186 += 1, R15142 += 1, R83 += 1 };
  s1 -> s1 [0, 65535] { R15186 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R15186 += 1, R15142 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R15186 += 1, R15142 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R15186 += 1, R15142 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R15186 += 1, R15142 += 1, R83 += 1 };
  s2 -> s2 [0, 65535] { R15186 += 1, R15141 += 1, R15142 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R15186 += 1, R15142 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R15186 += 1, R15142 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R15186 += 1, R15142 += 1, R83 += 1 };
  s3 -> s3 [0, 65535] { R15186 += 1, R15142 += 1, R83 += 1 };
  s3 -> s6 [0, 65535] { R15186 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R15186 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15186 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R15188 += 1, R15144 += 1, R85 += 1 };
  s0 -> s2 [0, 65535] { R15188 += 1, R15143 += 1, R15144 += 1 };
  s0 -> s0 [0, 65535] { R15187 += 1, R15188 += 1 };
  s0 -> s3 [70, 70] { R15188 += 1, R15144 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R15188 += 1, R15144 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R15188 += 1, R15144 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R15188 += 1, R15144 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R15188 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R15188 += 1, R15144 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R15188 += 1, R15144 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R15188 += 1, R15144 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R15188 += 1, R15144 += 1, R85 += 1 };
  s2 -> s2 [0, 65535] { R15188 += 1, R15143 += 1, R15144 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R15188 += 1, R15144 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R15188 += 1, R15144 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R15188 += 1, R15144 += 1, R85 += 1 };
  s3 -> s3 [0, 65535] { R15188 += 1, R15144 += 1, R85 += 1 };
  s3 -> s6 [0, 65535] { R15188 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R15188 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15188 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R15190 += 1, R15146 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R15190 += 1, R15146 += 1, R88 += 1 };
  s0 -> s3 [0, 65535] { R15190 += 1, R15145 += 1, R15146 += 1 };
  s0 -> s0 [0, 65535] { R15189 += 1, R15190 += 1 };
  s0 -> s4 [70, 70] { R15190 += 1, R15146 += 1, R87 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R15190 += 1, R15146 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R15190 += 1, R15146 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R15190 += 1, R15146 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [71, 74] { R15190 += 1, R15146 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R15190 += 1, R15146 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R15190 += 1, R15146 += 1, R88 += 1 };
  s0 -> s2 [76, 65535] { R15190 += 1, R15146 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R15190 += 1, R15146 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [0, 69] { R15190 += 1, R15146 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R15190 += 1, R15146 += 1, R87 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R15190 += 1, R15146 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R15190 += 1, R15146 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R15190 += 1, R15146 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [71, 74] { R15190 += 1, R15146 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R15190 += 1, R15146 += 1, R87 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R15190 += 1, R15146 += 1, R88 += 1 };
  s1 -> s2 [76, 65535] { R15190 += 1, R15146 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R15190 += 1, R15146 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R15190 += 1, R15146 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R15190 += 1, R15146 += 1, R88 += 1 };
  s2 -> s2 [71, 74] { R15190 += 1, R15146 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R15190 += 1, R15146 += 1, R88 += 1 };
  s2 -> s2 [76, 65535] { R15190 += 1, R15146 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R15190 += 1, R15146 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R15190 += 1, R15146 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R15190 += 1, R15145 += 1, R15146 += 1 };
  s3 -> s4 [70, 70] { R15190 += 1, R15146 += 1, R87 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R15190 += 1, R15146 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R15190 += 1, R15146 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R15190 += 1, R15146 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [71, 74] { R15190 += 1, R15146 += 1, R88 += 1 };
  s3 -> s1 [71, 65535] { R15190 += 1, R15146 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R15190 += 1, R15146 += 1, R88 += 1 };
  s3 -> s2 [76, 65535] { R15190 += 1, R15146 += 1, R88 += 1 };
  s4 -> s5 [0, 74] { R15190 += 1, R15146 += 1, R88 += 1 };
  s4 -> s4 [0, 65535] { R15190 += 1, R15146 += 1, R87 += 1, R88 += 1 };
  s4 -> s11 [75, 75] { R15190 += 1, R15146 += 1, R88 += 1 };
  s4 -> s5 [76, 65535] { R15190 += 1, R15146 += 1, R88 += 1 };
  s5 -> s5 [0, 74] { R15190 += 1, R15146 += 1, R88 += 1 };
  s5 -> s11 [75, 75] { R15190 += 1, R15146 += 1, R88 += 1 };
  s5 -> s5 [76, 65535] { R15190 += 1, R15146 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R15190 += 1, R15146 += 1, R88 += 1 };
  s8 -> s8 [0, 65535] { R15190 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R15190 += 1, R15146 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R15190 += 1, R15146 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R15190 += 1, R15146 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R15190 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R15190 += 1, R15146 += 1, R88 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R15190 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R15190 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R15192 += 1, R15148 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s2 [0, 69] { R15192 += 1, R15148 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s3 [0, 65535] { R15192 += 1, R15147 += 1, R15148 += 1 };
  s0 -> s0 [0, 65535] { R15191 += 1, R15192 += 1 };
  s0 -> s4 [70, 70] { R15192 += 1, R15148 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s5 [70, 70] { R15192 += 1, R15148 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s6 [70, 70] { R15192 += 1, R15148 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s7 [70, 70] { R15192 += 1, R15148 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s1 [71, 65535] { R15192 += 1, R15148 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s2 [71, 65535] { R15192 += 1, R15148 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s1 [0, 69] { R15192 += 1, R15148 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s2 [0, 69] { R15192 += 1, R15148 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s4 [70, 70] { R15192 += 1, R15148 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s5 [70, 70] { R15192 += 1, R15148 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s6 [70, 70] { R15192 += 1, R15148 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s7 [70, 70] { R15192 += 1, R15148 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s1 [71, 65535] { R15192 += 1, R15148 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s2 [71, 65535] { R15192 += 1, R15148 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [0, 69] { R15192 += 1, R15148 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R15192 += 1 };
  s2 -> s4 [70, 70] { R15192 += 1, R15148 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s6 [70, 70] { R15192 += 1, R15148 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [71, 65535] { R15192 += 1, R15148 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s1 [0, 69] { R15192 += 1, R15148 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s2 [0, 69] { R15192 += 1, R15148 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s3 [0, 65535] { R15192 += 1, R15147 += 1, R15148 += 1 };
  s3 -> s4 [70, 70] { R15192 += 1, R15148 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s5 [70, 70] { R15192 += 1, R15148 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s6 [70, 70] { R15192 += 1, R15148 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s7 [70, 70] { R15192 += 1, R15148 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s1 [71, 65535] { R15192 += 1, R15148 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s2 [71, 65535] { R15192 += 1, R15148 += 1, R13514 += 1, R13515 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [0, 65535] { R15192 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R15192 += 1, R15148 += 1, R13514 += 1, R13515 += 1 };
  s6 -> s9 [0, 65535] { R15192 += 1 };
  s7 -> s6 [0, 65535] { R15192 += 1, R15148 += 1, R13514 += 1, R13515 += 1 };
  s7 -> s7 [0, 65535] { R15192 += 1, R15148 += 1, R13513 += 1, R13514 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R15192 += 1 };
  accepting s4, s8, s2, s9, s6;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R15194 += 1, R15150 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s0 [0, 65535] { R15193 += 1, R15194 += 1 };
  s0 -> s2 [0, 65535] { R15194 += 1, R15149 += 1, R15150 += 1 };
  s0 -> s3 [70, 70] { R15194 += 1, R15150 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s4 [70, 70] { R15194 += 1, R15150 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s1 [71, 65535] { R15194 += 1, R15150 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [0, 69] { R15194 += 1, R15150 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R15194 += 1 };
  s1 -> s3 [70, 70] { R15194 += 1, R15150 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s4 [70, 70] { R15194 += 1, R15150 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [71, 65535] { R15194 += 1, R15150 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s1 [0, 69] { R15194 += 1, R15150 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R15194 += 1, R15149 += 1, R15150 += 1 };
  s2 -> s3 [70, 70] { R15194 += 1, R15150 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s4 [70, 70] { R15194 += 1, R15150 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s1 [71, 65535] { R15194 += 1, R15150 += 1, R13519 += 1, R13520 += 1 };
  s3 -> s3 [0, 65535] { R15194 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R15194 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R15194 += 1, R15150 += 1, R13519 += 1, R13520 += 1 };
  s5 -> s5 [0, 65535] { R15194 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s0 -> s2 [0, 69] { R15196 += 1, R15152 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s0 -> s3 [0, 69] { R15196 += 1, R15152 += 1, R14641 += 1, R14642 += 1 };
  s0 -> s4 [0, 65535] { R15196 += 1, R15151 += 1, R15152 += 1 };
  s0 -> s0 [0, 65535] { R15195 += 1, R15196 += 1 };
  s0 -> s5 [70, 70] { R15196 += 1, R15152 += 1, R14641 += 1, R14642 += 1 };
  s0 -> s6 [70, 70] { R15196 += 1, R15152 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s0 -> s7 [70, 70] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s0 -> s8 [70, 70] { R15196 += 1, R15152 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s0 -> s9 [70, 70] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s0 -> s10 [70, 70] { R15196 += 1, R15152 += 1, R14641 += 1, R14642 += 1 };
  s0 -> s1 [71, 74] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s0 -> s2 [71, 65535] { R15196 += 1, R15152 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s0 -> s3 [71, 65535] { R15196 += 1, R15152 += 1, R14641 += 1, R14642 += 1 };
  s0 -> s11 [75, 75] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s0 -> s1 [76, 65535] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s1 -> s1 [0, 69] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s1 -> s7 [70, 70] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s1 -> s9 [70, 70] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s1 -> s1 [71, 74] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s1 -> s11 [75, 75] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s1 -> s1 [76, 65535] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s2 -> s1 [0, 69] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s2 -> s2 [0, 69] { R15196 += 1, R15152 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s2 -> s6 [70, 70] { R15196 += 1, R15152 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s2 -> s7 [70, 70] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s2 -> s8 [70, 70] { R15196 += 1, R15152 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s2 -> s9 [70, 70] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s2 -> s1 [71, 74] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s2 -> s2 [71, 65535] { R15196 += 1, R15152 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s2 -> s11 [75, 75] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s2 -> s1 [76, 65535] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s3 -> s1 [0, 69] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s3 -> s2 [0, 69] { R15196 += 1, R15152 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s3 -> s3 [0, 69] { R15196 += 1, R15152 += 1, R14641 += 1, R14642 += 1 };
  s3 -> s5 [70, 70] { R15196 += 1, R15152 += 1, R14641 += 1, R14642 += 1 };
  s3 -> s6 [70, 70] { R15196 += 1, R15152 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s3 -> s7 [70, 70] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s3 -> s8 [70, 70] { R15196 += 1, R15152 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s3 -> s9 [70, 70] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s3 -> s10 [70, 70] { R15196 += 1, R15152 += 1, R14641 += 1, R14642 += 1 };
  s3 -> s1 [71, 74] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s3 -> s2 [71, 65535] { R15196 += 1, R15152 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s3 -> s3 [71, 65535] { R15196 += 1, R15152 += 1, R14641 += 1, R14642 += 1 };
  s3 -> s11 [75, 75] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s3 -> s1 [76, 65535] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s4 -> s1 [0, 69] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s4 -> s2 [0, 69] { R15196 += 1, R15152 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s4 -> s3 [0, 69] { R15196 += 1, R15152 += 1, R14641 += 1, R14642 += 1 };
  s4 -> s4 [0, 65535] { R15196 += 1, R15151 += 1, R15152 += 1 };
  s4 -> s5 [70, 70] { R15196 += 1, R15152 += 1, R14641 += 1, R14642 += 1 };
  s4 -> s6 [70, 70] { R15196 += 1, R15152 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s4 -> s7 [70, 70] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s4 -> s8 [70, 70] { R15196 += 1, R15152 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s4 -> s9 [70, 70] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s4 -> s10 [70, 70] { R15196 += 1, R15152 += 1, R14641 += 1, R14642 += 1 };
  s4 -> s1 [71, 74] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s4 -> s2 [71, 65535] { R15196 += 1, R15152 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s4 -> s3 [71, 65535] { R15196 += 1, R15152 += 1, R14641 += 1, R14642 += 1 };
  s4 -> s11 [75, 75] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s4 -> s1 [76, 65535] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s5 -> s7 [0, 74] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s5 -> s5 [0, 65535] { R15196 += 1, R15152 += 1, R14641 += 1, R14642 += 1 };
  s5 -> s8 [0, 65535] { R15196 += 1, R15152 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s5 -> s16 [75, 75] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s5 -> s7 [76, 65535] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s7 -> s7 [0, 74] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s7 -> s16 [75, 75] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s7 -> s7 [76, 65535] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s8 -> s7 [0, 74] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s8 -> s8 [0, 65535] { R15196 += 1, R15152 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s8 -> s16 [75, 75] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s8 -> s7 [76, 65535] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s11 -> s11 [0, 69] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s11 -> s12 [0, 69] { R15196 += 1, R15152 += 1 };
  s11 -> s13 [0, 69] { R15196 += 1, R15152 += 1, R14642 += 1 };
  s11 -> s14 [70, 70] { R15196 += 1, R15152 += 1 };
  s11 -> s15 [70, 70] { R15196 += 1, R15152 += 1 };
  s11 -> s16 [70, 70] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s11 -> s17 [70, 70] { R15196 += 1, R15152 += 1, R14642 += 1 };
  s11 -> s18 [70, 70] { R15196 += 1, R15152 += 1, R14642 += 1 };
  s11 -> s19 [70, 70] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s11 -> s11 [71, 65535] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s11 -> s12 [71, 65535] { R15196 += 1, R15152 += 1 };
  s11 -> s13 [71, 65535] { R15196 += 1, R15152 += 1, R14642 += 1 };
  s12 -> s12 [0, 69] { R15196 += 1, R15152 += 1 };
  s12 -> s20 [0, 65535];
  s12 -> s12 [0, 65535] { R15196 += 1 };
  s12 -> s14 [70, 70] { R15196 += 1, R15152 += 1 };
  s12 -> s15 [70, 70] { R15196 += 1, R15152 += 1 };
  s12 -> s12 [71, 65535] { R15196 += 1, R15152 += 1 };
  s13 -> s12 [0, 69] { R15196 += 1, R15152 += 1 };
  s13 -> s13 [0, 69] { R15196 += 1, R15152 += 1, R14642 += 1 };
  s13 -> s14 [70, 70] { R15196 += 1, R15152 += 1 };
  s13 -> s15 [70, 70] { R15196 += 1, R15152 += 1 };
  s13 -> s17 [70, 70] { R15196 += 1, R15152 += 1, R14642 += 1 };
  s13 -> s18 [70, 70] { R15196 += 1, R15152 += 1, R14642 += 1 };
  s13 -> s12 [71, 65535] { R15196 += 1, R15152 += 1 };
  s13 -> s13 [71, 65535] { R15196 += 1, R15152 += 1, R14642 += 1 };
  s14 -> s14 [0, 65535] { R15196 += 1, R15152 += 1 };
  s14 -> s20 [0, 65535];
  s14 -> s21 [0, 65535] { R15196 += 1 };
  s15 -> s15 [0, 65535] { R15196 += 1 };
  s15 -> s20 [0, 65535];
  s16 -> s14 [0, 65535] { R15196 += 1, R15152 += 1 };
  s16 -> s16 [0, 65535] { R15196 += 1, R15152 += 1, R14642 += 1, R14644 += 1 };
  s16 -> s18 [0, 65535] { R15196 += 1, R15152 += 1, R14642 += 1 };
  s18 -> s14 [0, 65535] { R15196 += 1, R15152 += 1 };
  s18 -> s18 [0, 65535] { R15196 += 1, R15152 += 1, R14642 += 1 };
  s20 -> s20 [0, 65535];
  s21 -> s20 [0, 65535];
  s21 -> s21 [0, 65535] { R15196 += 1 };
  accepting s12, s14, s21, s20, s15;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R15198 += 1, R15154 += 1, R15090 += 1, R15091 += 1, R15092 += 1 };
  s0 -> s2 [0, 69] { R15198 += 1, R15154 += 1, R15089 += 1, R15090 += 1 };
  s0 -> s0 [0, 65535] { R15197 += 1, R15198 += 1 };
  s0 -> s3 [0, 65535] { R15198 += 1, R15153 += 1, R15154 += 1 };
  s0 -> s4 [70, 70] { R15198 += 1, R15154 += 1, R15090 += 1, R15091 += 1, R15092 += 1 };
  s0 -> s5 [70, 70] { R15198 += 1, R15154 += 1, R15090 += 1, R15091 += 1, R15092 += 1 };
  s0 -> s6 [70, 70] { R15198 += 1, R15154 += 1, R15089 += 1, R15090 += 1 };
  s0 -> s7 [70, 70] { R15198 += 1, R15154 += 1, R15089 += 1, R15090 += 1 };
  s0 -> s1 [71, 65535] { R15198 += 1, R15154 += 1, R15090 += 1, R15091 += 1, R15092 += 1 };
  s0 -> s2 [71, 65535] { R15198 += 1, R15154 += 1, R15089 += 1, R15090 += 1 };
  s1 -> s1 [0, 69] { R15198 += 1, R15154 += 1, R15090 += 1, R15091 += 1, R15092 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s1 [0, 65535] { R15198 += 1 };
  s1 -> s4 [70, 70] { R15198 += 1, R15154 += 1, R15090 += 1, R15091 += 1, R15092 += 1 };
  s1 -> s5 [70, 70] { R15198 += 1, R15154 += 1, R15090 += 1, R15091 += 1, R15092 += 1 };
  s1 -> s1 [71, 65535] { R15198 += 1, R15154 += 1, R15090 += 1, R15091 += 1, R15092 += 1 };
  s2 -> s1 [0, 69] { R15198 += 1, R15154 += 1, R15090 += 1, R15091 += 1, R15092 += 1 };
  s2 -> s2 [0, 69] { R15198 += 1, R15154 += 1, R15089 += 1, R15090 += 1 };
  s2 -> s4 [70, 70] { R15198 += 1, R15154 += 1, R15090 += 1, R15091 += 1, R15092 += 1 };
  s2 -> s5 [70, 70] { R15198 += 1, R15154 += 1, R15090 += 1, R15091 += 1, R15092 += 1 };
  s2 -> s6 [70, 70] { R15198 += 1, R15154 += 1, R15089 += 1, R15090 += 1 };
  s2 -> s7 [70, 70] { R15198 += 1, R15154 += 1, R15089 += 1, R15090 += 1 };
  s2 -> s1 [71, 65535] { R15198 += 1, R15154 += 1, R15090 += 1, R15091 += 1, R15092 += 1 };
  s2 -> s2 [71, 65535] { R15198 += 1, R15154 += 1, R15089 += 1, R15090 += 1 };
  s3 -> s1 [0, 69] { R15198 += 1, R15154 += 1, R15090 += 1, R15091 += 1, R15092 += 1 };
  s3 -> s2 [0, 69] { R15198 += 1, R15154 += 1, R15089 += 1, R15090 += 1 };
  s3 -> s3 [0, 65535] { R15198 += 1, R15153 += 1, R15154 += 1 };
  s3 -> s4 [70, 70] { R15198 += 1, R15154 += 1, R15090 += 1, R15091 += 1, R15092 += 1 };
  s3 -> s5 [70, 70] { R15198 += 1, R15154 += 1, R15090 += 1, R15091 += 1, R15092 += 1 };
  s3 -> s6 [70, 70] { R15198 += 1, R15154 += 1, R15089 += 1, R15090 += 1 };
  s3 -> s7 [70, 70] { R15198 += 1, R15154 += 1, R15089 += 1, R15090 += 1 };
  s3 -> s1 [71, 65535] { R15198 += 1, R15154 += 1, R15090 += 1, R15091 += 1, R15092 += 1 };
  s3 -> s2 [71, 65535] { R15198 += 1, R15154 += 1, R15089 += 1, R15090 += 1 };
  s4 -> s4 [0, 65535] { R15198 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R15198 += 1, R15154 += 1, R15090 += 1, R15091 += 1, R15092 += 1 };
  s5 -> s9 [0, 65535] { R15198 += 1 };
  s7 -> s5 [0, 65535] { R15198 += 1, R15154 += 1, R15090 += 1, R15091 += 1, R15092 += 1 };
  s7 -> s7 [0, 65535] { R15198 += 1, R15154 += 1, R15089 += 1, R15090 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R15198 += 1 };
  accepting s4, s8, s5, s9, s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R15198 && R23 - R15198 = -1 && R24 = R15198 && R25 - R15198 = -1 && R26 = R15198 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R14646 + -1*R14642 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R14646 + -1*R14642 - R66 = 0 && R55 + R13518 + R13515 + -1*R14648 + -1*R14644 - R68 = 0 && R65 + R14645 + R14641 = 0 && R67 + R14647 + R14643 = 0 && R15139 = 0 && R15140 = 0 && R15145 = 0 && R15146 = 0 && R15147 = 0 && R15148 = 0 && R15151 = 0 && R15152 = 0 && R15153 = 0 && R15154 = 0 && R15155 = 0 && R15156 = R15198 && R15157 = 0 && R15158 = R15198 && R15159 = 0 && R15160 = R15198 && R15161 = 0 && R15162 = R15198 && R15163 = 0 && R15164 = R15198 && R15165 = 0 && R15166 = R15198 && R15167 = 0 && R15168 = R15198 && R15169 = 0 && R15170 = R15198 && R15171 = 0 && R15172 = R15198 && R15173 = 0 && R15174 = R15198 && R15175 = 0 && R15176 = R15198 && R15177 = 0 && R15178 = R15198 && R15179 = 0 && R15180 = R15198 && R15181 = 0 && R15182 = R15198 && R15183 = 0 && R15184 = R15198 && R15185 = 0 && R15186 = R15198 && R15187 = 0 && R15188 = R15198 && R15189 = 0 && R15190 = R15198 && R15191 = 0 && R15192 = R15198 && R15193 = 0 && R15194 = R15198 && R15195 = 0 && R15196 = R15198 && R15197 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R13524 + R13521 < 1 && -1*R14646 + -1*R14642 - R66 < 1 && -1*R14648 + -1*R14644 - R68 < 1 && 0 < R15198 && (R2 != 0 || R20 = 0 || (R15099 = 0 && R15100 = 0)) && (R2 != 0 || R20 = 0 || (R15101 = 0 && R15102 = 0)) && (R2 != 0 || R20 = 0 || (R15103 = 0 && R15104 = 0)) && (R2 != 0 || R20 = 0 || (R15105 = 0 && R15106 = 0)) && (R2 != 0 || R20 = 0 || (R15107 = 0 && R15108 = 0)) && (R2 != 0 || R20 = 0 || (R15109 = 0 && R15110 = 0)) && (R2 != 0 || R20 = 0 || (R15111 = 0 && R15112 = 0)) && (R2 != 0 || R20 = 0 || (R15113 = 0 && R15114 = 0)) && (R2 != 0 || R20 = 0 || (R15115 = 0 && R15116 = 0)) && (R2 != 0 || R20 = 0 || (R15117 = 0 && R15118 = 0)) && (R53 + R13516 + R13513 != 0 || R54 + R13517 + R13514 + -1*R14646 + -1*R14642 - R66 = 0 || R66 + R14646 + R14642 < 1) && (R59 + R13522 + R13519 != 0 || R60 + R13523 + R13520 + -1*R14646 + -1*R14642 - R66 = 0 || R66 + R14646 + R14642 < 1) && (R66 + R14646 + R14642 != 0 || ((R53 + R13516 + R13513 != 0 || R54 + R13517 + R13514 = 0 || R68 + R14648 + R14644 < 1) && (R53 + R13516 + R13513 = 0 || R68 + R14648 + R14644 < 1))) && (R66 + R14646 + R14642 != 0 || ((R59 + R13522 + R13519 != 0 || R60 + R13523 + R13520 = 0 || R68 + R14648 + R14644 < 1) && (R59 + R13522 + R13519 = 0 || R68 + R14648 + R14644 < 1))) && (R66 + R14646 + R14642 != 0 || ((R73 + R15094 + R15089 != 0 || R74 + R15095 + R15090 = 0 || R68 + R14648 + R14644 < 1) && (R73 + R15094 + R15089 = 0 || R68 + R14648 + R14644 < 1))) && (R68 + R14648 + R14644 != 0 || R77 + R15098 + R15093 = 0 || (R75 + R15096 + R15091 = 0 && R76 + R15097 + R15092 = 0)) && (R73 + R15094 + R15089 != 0 || R66 + R14646 + R14642 + -1*R15095 + -1*R15090 - R74 = 0 || R66 + R14646 + R14642 < 1) && (R75 + R15096 + R15091 != 0 || R68 + R14648 + R14644 + -1*R15097 + -1*R15092 - R76 = 0 || R68 + R14648 + R14644 < 1) && (R15099 != 0 || R2 = R15100 || R2 < 1) && (R15101 != 0 || R2 = R15102 || R2 < 1) && (R15103 != 0 || R2 = R15104 || R2 < 1) && (R15105 != 0 || R2 = R15106 || R2 < 1) && (R15107 != 0 || R2 = R15108 || R2 < 1) && (R15109 != 0 || R2 = R15110 || R2 < 1) && (R15111 != 0 || R2 = R15112 || R2 < 1) && (R15113 != 0 || R2 = R15114 || R2 < 1) && (R15115 != 0 || R2 = R15116 || R2 < 1) && (R15117 != 0 || R2 = R15118 || R2 < 1) && (R21 = 0 || (R15137 = 0 && R15138 = 0)) && (R21 = 0 || (R15141 = 0 && R15142 = 0)) && (R21 = 0 || (R15143 = 0 && R15144 = 0)) && (R21 = 0 || (R15149 = 0 && R15150 = 0)) && (R22 = 0 || (R15119 = 0 && R15120 = 0)) && (R22 = 0 || (R15121 = 0 && R15122 = 0)) && (R22 = 0 || (R15123 = 0 && R15124 = 0)) && (R22 = 0 || (R15125 = 0 && R15126 = 0)) && (R22 = 0 || (R15127 = 0 && R15128 = 0)) && (R22 = 0 || (R15129 = 0 && R15130 = 0)) && (R22 = 0 || (R15131 = 0 && R15132 = 0)) && (R22 = 0 || (R15133 = 0 && R15134 = 0)) && (R22 = 0 || (R15135 = 0 && R15136 = 0)) && (R53 + R13516 + R13513 = 0 || R66 + R14646 + R14642 < 1) && (R59 + R13522 + R13519 = 0 || R66 + R14646 + R14642 < 1) && (R73 + R15094 + R15089 = 0 || R66 + R14646 + R14642 < 1) && (R75 + R15096 + R15091 = 0 || R68 + R14648 + R14644 < 1) && (R15099 = 0 || R2 < 1) && (R15101 = 0 || R2 < 1) && (R15103 = 0 || R2 < 1) && (R15105 = 0 || R2 < 1) && (R15107 = 0 || R2 < 1) && (R15109 = 0 || R2 < 1) && (R15111 = 0 || R2 < 1) && (R15113 = 0 || R2 < 1) && (R15115 = 0 || R2 < 1) && (R15117 = 0 || R2 < 1);
// End of Parikh automata intersection problem
