// Parikh automata intersection problem, generated by OSTRICH+
counter int R12, R13513, R13514, R13515, R13516, R13517, R13518, R13519, R13520, R13521, R13522, R13523, R13524, R13525, R13526, R13527, R13528, R13529, R13530, R13531, R13532, R13533, R13534, R13535, R13536, R13537, R13538, R13539, R13540, R13541, R13542, R13543, R13544, R13545, R13546, R13547, R13548, R13549, R13550, R13551, R13552, R13553, R13554, R13555, R13556, R13557, R13558, R13559, R13560, R13561, R13562, R13563, R13564, R13565, R13566, R13567, R13568, R13569, R13570, R13571, R13572, R13573, R13574, R13575, R13576, R13577, R13578, R13579, R13580, R13581, R13582, R13583, R13584, R13585, R13586, R13587, R13588, R13589, R13590, R13591, R13592, R13593, R13594, R13595, R13596, R13597, R13598, R13599, R13600, R13601, R13602, R13603, R13604, R13605, R13606, R13607, R13608, R13609, R13610, R13611, R13612, R13613, R13614, R13615, R13616, R13617, R13618, R13619, R13620, R13621, R13622, R13623, R13624, R13625, R13626, R13627, R13628, R13629, R13630, R13631, R13632, R13633, R13634, R13635, R13636, R13637, R13638, R13639, R13640, R13641, R13642, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R4, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R13563 += 1, R13564 += 1 };
  s0 -> s1 [0, 65535] { R13564 += 1, R22 += 1 };
  s1 -> s1 [0, 65535] { R13564 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R13566 += 1 };
  s0 -> s0 [0, 65535] { R13565 += 1, R13566 += 1 };
  s0 -> s2 [70, 70] { R13566 += 1 };
  s0 -> s3 [70, 70] { R13566 += 1 };
  s0 -> s1 [76, 65535] { R13566 += 1 };
  s1 -> s1 [0, 69] { R13566 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13566 += 1 };
  s1 -> s3 [70, 70] { R13566 += 1 };
  s1 -> s1 [76, 65535] { R13566 += 1 };
  s2 -> s2 [0, 70] { R13566 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R13566 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R13568 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R13567 += 1, R13568 += 1 };
  s0 -> s2 [70, 70] { R13568 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R13568 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R13568 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R13568 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13568 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R13568 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R13568 += 1, R45 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13568 += 1, R45 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R13570 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R13569 += 1, R13570 += 1 };
  s0 -> s2 [70, 70] { R13570 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R13570 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R13570 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R13570 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13570 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R13570 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R13570 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13570 += 1, R47 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R13572 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R13571 += 1, R13572 += 1 };
  s0 -> s2 [70, 70] { R13572 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R13572 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R13572 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R13572 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13572 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R13572 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R13572 += 1, R49 += 1, R50 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13572 += 1, R49 += 1, R50 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R13574 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R13573 += 1, R13574 += 1 };
  s0 -> s2 [70, 70] { R13574 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R13574 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R13574 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R13574 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13574 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R13574 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R13574 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13574 += 1, R53 += 1, R54 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R13576 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R13575 += 1, R13576 += 1 };
  s0 -> s2 [70, 70] { R13576 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R13576 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R13576 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R13576 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13576 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R13576 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R13576 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13576 += 1, R59 += 1, R60 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R13578 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R13577 += 1, R13578 += 1 };
  s0 -> s2 [70, 70] { R13578 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R13578 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R13578 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R13578 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13578 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R13578 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R13578 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R13578 += 1, R65 += 1, R66 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R13580 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R13579 += 1, R13580 += 1 };
  s0 -> s2 [70, 70] { R13580 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R13580 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R13580 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R13580 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13580 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R13580 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R13580 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R13580 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R13600 += 1 };
  s0 -> s0 [0, 65535] { R13599 += 1, R13600 += 1 };
  s0 -> s2 [70, 70] { R13600 += 1 };
  s0 -> s1 [71, 65535] { R13600 += 1 };
  s1 -> s1 [0, 69] { R13600 += 1 };
  s1 -> s2 [70, 70] { R13600 += 1 };
  s1 -> s1 [71, 65535] { R13600 += 1 };
  s2 -> s2 [0, 65535] { R13600 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R13601 += 1, R13602 += 1 };
  s0 -> s1 [0, 65535] { R13602 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R13602 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R13604 += 1 };
  s0 -> s0 [0, 65535] { R13603 += 1, R13604 += 1 };
  s0 -> s2 [0, 65535] { R13604 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R13604 += 1 };
  s0 -> s1 [71, 65535] { R13604 += 1 };
  s1 -> s1 [0, 69] { R13604 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R13604 += 1 };
  s1 -> s1 [71, 65535] { R13604 += 1 };
  s2 -> s1 [0, 69] { R13604 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13604 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R13604 += 1 };
  s2 -> s1 [71, 65535] { R13604 += 1 };
  s3 -> s3 [0, 65535] { R13604 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R13606 += 1, R13544 += 1 };
  s0 -> s2 [0, 65535] { R13606 += 1, R13543 += 1, R13544 += 1 };
  s0 -> s0 [0, 65535] { R13605 += 1, R13606 += 1 };
  s0 -> s1 [71, 65535] { R13606 += 1, R13544 += 1 };
  s1 -> s1 [0, 69] { R13606 += 1, R13544 += 1 };
  s1 -> s1 [0, 65535] { R13606 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R13606 += 1, R13544 += 1 };
  s2 -> s1 [0, 69] { R13606 += 1, R13544 += 1 };
  s2 -> s2 [0, 65535] { R13606 += 1, R13543 += 1, R13544 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R13606 += 1, R13544 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R13608 += 1, R13545 += 1, R13546 += 1 };
  s0 -> s0 [0, 65535] { R13607 += 1, R13608 += 1 };
  s0 -> s2 [0, 65535] { R13608 += 1, R13546 += 1, R20 += 1 };
  s1 -> s1 [0, 65535] { R13608 += 1, R13545 += 1, R13546 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R13608 += 1, R13546 += 1, R20 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13608 += 1, R13546 += 1, R20 += 1 };
  s2 -> s4 [0, 65535] { R13608 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13608 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R13610 += 1, R13548 += 1 };
  s0 -> s2 [0, 65535] { R13610 += 1, R13547 += 1, R13548 += 1 };
  s0 -> s0 [0, 65535] { R13609 += 1, R13610 += 1 };
  s0 -> s1 [75, 65535] { R13610 += 1, R13548 += 1 };
  s1 -> s1 [0, 70] { R13610 += 1, R13548 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R13610 += 1 };
  s1 -> s1 [75, 65535] { R13610 += 1, R13548 += 1 };
  s2 -> s1 [0, 70] { R13610 += 1, R13548 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13610 += 1, R13547 += 1, R13548 += 1 };
  s2 -> s1 [75, 65535] { R13610 += 1, R13548 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R13612 += 1, R13549 += 1, R13550 += 1 };
  s0 -> s0 [0, 65535] { R13611 += 1, R13612 += 1 };
  s0 -> s2 [0, 65535] { R13612 += 1, R13550 += 1, R84 += 1 };
  s1 -> s1 [0, 65535] { R13612 += 1, R13549 += 1, R13550 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R13612 += 1, R13550 += 1, R84 += 1 };
  s2 -> s3 [0, 65535] { R13612 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13612 += 1, R13550 += 1, R84 += 1 };
  s3 -> s3 [0, 65535] { R13612 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R13614 += 1, R13552 += 1 };
  s0 -> s2 [0, 65535] { R13614 += 1, R13551 += 1, R13552 += 1 };
  s0 -> s0 [0, 65535] { R13613 += 1, R13614 += 1 };
  s0 -> s3 [0, 65535] { R13614 += 1, R13552 += 1, R86 += 1 };
  s0 -> s1 [76, 65535] { R13614 += 1, R13552 += 1 };
  s1 -> s1 [0, 74] { R13614 += 1, R13552 += 1 };
  s1 -> s1 [0, 65535] { R13614 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R13614 += 1, R13552 += 1 };
  s2 -> s1 [0, 74] { R13614 += 1, R13552 += 1 };
  s2 -> s2 [0, 65535] { R13614 += 1, R13551 += 1, R13552 += 1 };
  s2 -> s3 [0, 65535] { R13614 += 1, R13552 += 1, R86 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [76, 65535] { R13614 += 1, R13552 += 1 };
  s3 -> s1 [0, 74] { R13614 += 1, R13552 += 1 };
  s3 -> s4 [0, 65535] { R13614 += 1 };
  s3 -> s3 [0, 65535] { R13614 += 1, R13552 += 1, R86 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [76, 65535] { R13614 += 1, R13552 += 1 };
  s4 -> s4 [0, 65535] { R13614 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R13616 += 1, R13553 += 1, R13554 += 1 };
  s0 -> s0 [0, 65535] { R13615 += 1, R13616 += 1 };
  s0 -> s2 [0, 65535] { R13616 += 1, R13554 += 1 };
  s0 -> s3 [0, 65535] { R13616 += 1, R13554 += 1, R90 += 1 };
  s1 -> s1 [0, 65535] { R13616 += 1, R13553 += 1, R13554 += 1 };
  s1 -> s2 [0, 65535] { R13616 += 1, R13554 += 1 };
  s1 -> s3 [0, 65535] { R13616 += 1, R13554 += 1, R90 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s4 [0, 65535] { R13616 += 1 };
  s2 -> s2 [0, 65535] { R13616 += 1, R13554 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R13616 += 1 };
  s3 -> s2 [0, 65535] { R13616 += 1, R13554 += 1 };
  s3 -> s3 [0, 65535] { R13616 += 1, R13554 += 1, R90 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13616 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R13618 += 1, R13556 += 1 };
  s0 -> s0 [0, 65535] { R13617 += 1, R13618 += 1 };
  s0 -> s2 [0, 65535] { R13618 += 1, R13556 += 1, R13517 += 1, R13518 += 1 };
  s0 -> s3 [0, 65535] { R13618 += 1, R13555 += 1, R13556 += 1 };
  s1 -> s1 [0, 65535] { R13618 += 1, R13556 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R13618 += 1 };
  s2 -> s1 [0, 65535] { R13618 += 1, R13556 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13618 += 1, R13556 += 1, R13517 += 1, R13518 += 1 };
  s2 -> s5 [0, 65535] { R13618 += 1 };
  s3 -> s1 [0, 65535] { R13618 += 1, R13556 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R13618 += 1, R13556 += 1, R13517 += 1, R13518 += 1 };
  s3 -> s3 [0, 65535] { R13618 += 1, R13555 += 1, R13556 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13618 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R13620 += 1, R13558 += 1, R13523 += 1 };
  s0 -> s2 [0, 65535] { R13620 += 1, R13558 += 1, R13523 += 1, R13524 += 1 };
  s0 -> s3 [0, 65535] { R13620 += 1, R13558 += 1, R13522 += 1, R13523 += 1 };
  s0 -> s4 [0, 65535] { R13620 += 1, R13557 += 1, R13558 += 1 };
  s0 -> s0 [0, 65535] { R13619 += 1, R13620 += 1 };
  s0 -> s1 [76, 65535] { R13620 += 1, R13558 += 1, R13523 += 1 };
  s1 -> s1 [0, 74] { R13620 += 1, R13558 += 1, R13523 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R13620 += 1 };
  s1 -> s1 [0, 65535] { R13620 += 1, R13558 += 1 };
  s1 -> s1 [76, 65535] { R13620 += 1, R13558 += 1, R13523 += 1 };
  s2 -> s1 [0, 74] { R13620 += 1, R13558 += 1, R13523 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13620 += 1, R13558 += 1, R13523 += 1, R13524 += 1 };
  s2 -> s7 [0, 65535] { R13620 += 1, R13558 += 1 };
  s2 -> s6 [0, 65535] { R13620 += 1 };
  s2 -> s1 [76, 65535] { R13620 += 1, R13558 += 1, R13523 += 1 };
  s3 -> s1 [0, 74] { R13620 += 1, R13558 += 1, R13523 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R13620 += 1, R13558 += 1, R13523 += 1, R13524 += 1 };
  s3 -> s3 [0, 65535] { R13620 += 1, R13558 += 1, R13522 += 1, R13523 += 1 };
  s3 -> s6 [0, 65535] { R13620 += 1 };
  s3 -> s1 [76, 65535] { R13620 += 1, R13558 += 1, R13523 += 1 };
  s4 -> s1 [0, 74] { R13620 += 1, R13558 += 1, R13523 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R13620 += 1, R13558 += 1, R13523 += 1, R13524 += 1 };
  s4 -> s3 [0, 65535] { R13620 += 1, R13558 += 1, R13522 += 1, R13523 += 1 };
  s4 -> s4 [0, 65535] { R13620 += 1, R13557 += 1, R13558 += 1 };
  s4 -> s1 [76, 65535] { R13620 += 1, R13558 += 1, R13523 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13620 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R13620 += 1, R13558 += 1 };
  s7 -> s6 [0, 65535] { R13620 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R13622 += 1, R13560 += 1 };
  s0 -> s2 [0, 65535] { R13622 += 1, R13560 += 1, R13530 += 1 };
  s0 -> s3 [0, 65535] { R13622 += 1, R13559 += 1, R13560 += 1 };
  s0 -> s0 [0, 65535] { R13621 += 1, R13622 += 1 };
  s0 -> s4 [0, 65535] { R13622 += 1, R13560 += 1, R13530 += 1, R13532 += 1 };
  s1 -> s1 [0, 65535] { R13622 += 1, R13560 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R13622 += 1 };
  s2 -> s1 [0, 65535] { R13622 += 1, R13560 += 1 };
  s2 -> s2 [0, 65535] { R13622 += 1, R13560 += 1, R13530 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R13622 += 1 };
  s3 -> s1 [0, 65535] { R13622 += 1, R13560 += 1 };
  s3 -> s2 [0, 65535] { R13622 += 1, R13560 += 1, R13530 += 1 };
  s3 -> s3 [0, 65535] { R13622 += 1, R13559 += 1, R13560 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R13622 += 1, R13560 += 1, R13530 += 1, R13532 += 1 };
  s4 -> s1 [0, 65535] { R13622 += 1, R13560 += 1 };
  s4 -> s2 [0, 65535] { R13622 += 1, R13560 += 1, R13530 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R13622 += 1 };
  s4 -> s4 [0, 65535] { R13622 += 1, R13560 += 1, R13530 += 1, R13532 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13622 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s0 [0, 65535] { R13623 += 1, R13624 += 1 };
  s0 -> s1 [0, 65535] { R13624 += 1, R13561 += 1, R13562 += 1 };
  s0 -> s2 [0, 65535] { R13624 += 1, R13562 += 1 };
  s0 -> s3 [0, 65535] { R13624 += 1, R13562 += 1, R13539 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R13624 += 1, R13561 += 1, R13562 += 1 };
  s1 -> s2 [0, 65535] { R13624 += 1, R13562 += 1 };
  s1 -> s3 [0, 65535] { R13624 += 1, R13562 += 1, R13539 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R13624 += 1 };
  s2 -> s2 [0, 65535] { R13624 += 1, R13562 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R13624 += 1 };
  s3 -> s2 [0, 65535] { R13624 += 1, R13562 += 1 };
  s3 -> s3 [0, 65535] { R13624 += 1, R13562 += 1, R13539 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13624 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R13626 += 1, R13582 += 1, R21 += 1 };
  s0 -> s0 [0, 65535] { R13625 += 1, R13626 += 1 };
  s0 -> s2 [0, 65535] { R13626 += 1, R13581 += 1, R13582 += 1 };
  s1 -> s4 [0, 65535] { R13626 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R13626 += 1, R13582 += 1, R21 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R13626 += 1, R13582 += 1, R21 += 1 };
  s2 -> s2 [0, 65535] { R13626 += 1, R13581 += 1, R13582 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13626 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R13628 += 1, R13584 += 1 };
  s0 -> s2 [0, 65535] { R13628 += 1, R13583 += 1, R13584 += 1 };
  s0 -> s0 [0, 65535] { R13627 += 1, R13628 += 1 };
  s0 -> s3 [70, 70] { R13628 += 1, R13584 += 1 };
  s0 -> s4 [70, 70] { R13628 += 1, R13584 += 1 };
  s0 -> s5 [75, 75] { R13628 += 1, R13584 += 1 };
  s0 -> s1 [76, 65535] { R13628 += 1, R13584 += 1 };
  s1 -> s1 [0, 69] { R13628 += 1, R13584 += 1 };
  s1 -> s3 [70, 70] { R13628 += 1, R13584 += 1 };
  s1 -> s4 [70, 70] { R13628 += 1, R13584 += 1 };
  s1 -> s5 [75, 75] { R13628 += 1, R13584 += 1 };
  s1 -> s1 [76, 65535] { R13628 += 1, R13584 += 1 };
  s2 -> s1 [0, 69] { R13628 += 1, R13584 += 1 };
  s2 -> s2 [0, 65535] { R13628 += 1, R13583 += 1, R13584 += 1 };
  s2 -> s3 [70, 70] { R13628 += 1, R13584 += 1 };
  s2 -> s4 [70, 70] { R13628 += 1, R13584 += 1 };
  s2 -> s5 [75, 75] { R13628 += 1, R13584 += 1 };
  s2 -> s1 [76, 65535] { R13628 += 1, R13584 += 1 };
  s4 -> s4 [0, 70] { R13628 += 1, R13584 += 1 };
  s4 -> s7 [75, 75] { R13628 += 1, R13584 += 1 };
  s4 -> s4 [76, 65535] { R13628 += 1, R13584 += 1 };
  s5 -> s5 [0, 69] { R13628 += 1, R13584 += 1 };
  s5 -> s5 [0, 65535] { R13628 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R13628 += 1, R13584 += 1 };
  s5 -> s8 [70, 70] { R13628 += 1, R13584 += 1 };
  s5 -> s5 [75, 65535] { R13628 += 1, R13584 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R13628 += 1, R13584 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R13628 += 1 };
  s7 -> s7 [75, 65535] { R13628 += 1, R13584 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R13628 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R13630 += 1, R13586 += 1, R83 += 1 };
  s0 -> s0 [0, 65535] { R13629 += 1, R13630 += 1 };
  s0 -> s2 [0, 65535] { R13630 += 1, R13585 += 1, R13586 += 1 };
  s0 -> s3 [70, 70] { R13630 += 1, R13586 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R13630 += 1, R13586 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R13630 += 1, R13586 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R13630 += 1, R13586 += 1, R83 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13630 += 1 };
  s1 -> s3 [70, 70] { R13630 += 1, R13586 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R13630 += 1, R13586 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R13630 += 1, R13586 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R13630 += 1, R13586 += 1, R83 += 1 };
  s2 -> s2 [0, 65535] { R13630 += 1, R13585 += 1, R13586 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R13630 += 1, R13586 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R13630 += 1, R13586 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R13630 += 1, R13586 += 1, R83 += 1 };
  s3 -> s3 [0, 65535] { R13630 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R13630 += 1 };
  s4 -> s4 [0, 65535] { R13630 += 1, R13586 += 1, R83 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13630 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R13632 += 1, R13588 += 1, R85 += 1 };
  s0 -> s2 [0, 65535] { R13632 += 1, R13587 += 1, R13588 += 1 };
  s0 -> s0 [0, 65535] { R13631 += 1, R13632 += 1 };
  s0 -> s3 [70, 70] { R13632 += 1, R13588 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R13632 += 1, R13588 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R13632 += 1, R13588 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R13632 += 1, R13588 += 1, R85 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13632 += 1 };
  s1 -> s3 [70, 70] { R13632 += 1, R13588 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R13632 += 1, R13588 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R13632 += 1, R13588 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R13632 += 1, R13588 += 1, R85 += 1 };
  s2 -> s2 [0, 65535] { R13632 += 1, R13587 += 1, R13588 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R13632 += 1, R13588 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R13632 += 1, R13588 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R13632 += 1, R13588 += 1, R85 += 1 };
  s3 -> s6 [0, 65535] { R13632 += 1 };
  s3 -> s3 [0, 65535] { R13632 += 1, R13588 += 1, R85 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13632 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13632 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R13634 += 1, R13590 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R13634 += 1, R13590 += 1, R88 += 1 };
  s0 -> s3 [0, 65535] { R13634 += 1, R13589 += 1, R13590 += 1 };
  s0 -> s0 [0, 65535] { R13633 += 1, R13634 += 1 };
  s0 -> s4 [70, 70] { R13634 += 1, R13590 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R13634 += 1, R13590 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R13634 += 1, R13590 += 1, R87 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R13634 += 1, R13590 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [71, 74] { R13634 += 1, R13590 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R13634 += 1, R13590 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R13634 += 1, R13590 += 1, R88 += 1 };
  s0 -> s2 [76, 65535] { R13634 += 1, R13590 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R13634 += 1, R13590 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [0, 69] { R13634 += 1, R13590 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R13634 += 1, R13590 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R13634 += 1, R13590 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R13634 += 1, R13590 += 1, R87 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R13634 += 1, R13590 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [71, 74] { R13634 += 1, R13590 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R13634 += 1, R13590 += 1, R87 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R13634 += 1, R13590 += 1, R88 += 1 };
  s1 -> s2 [76, 65535] { R13634 += 1, R13590 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R13634 += 1, R13590 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R13634 += 1, R13590 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R13634 += 1, R13590 += 1, R88 += 1 };
  s2 -> s2 [71, 74] { R13634 += 1, R13590 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R13634 += 1, R13590 += 1, R88 += 1 };
  s2 -> s2 [76, 65535] { R13634 += 1, R13590 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R13634 += 1, R13590 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R13634 += 1, R13590 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R13634 += 1, R13589 += 1, R13590 += 1 };
  s3 -> s4 [70, 70] { R13634 += 1, R13590 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R13634 += 1, R13590 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R13634 += 1, R13590 += 1, R87 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R13634 += 1, R13590 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [71, 74] { R13634 += 1, R13590 += 1, R88 += 1 };
  s3 -> s1 [71, 65535] { R13634 += 1, R13590 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R13634 += 1, R13590 += 1, R88 += 1 };
  s3 -> s2 [76, 65535] { R13634 += 1, R13590 += 1, R88 += 1 };
  s5 -> s5 [0, 74] { R13634 += 1, R13590 += 1, R88 += 1 };
  s5 -> s10 [75, 75] { R13634 += 1, R13590 += 1, R88 += 1 };
  s5 -> s5 [76, 65535] { R13634 += 1, R13590 += 1, R88 += 1 };
  s6 -> s5 [0, 74] { R13634 += 1, R13590 += 1, R88 += 1 };
  s6 -> s6 [0, 65535] { R13634 += 1, R13590 += 1, R87 += 1, R88 += 1 };
  s6 -> s10 [75, 75] { R13634 += 1, R13590 += 1, R88 += 1 };
  s6 -> s5 [76, 65535] { R13634 += 1, R13590 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R13634 += 1, R13590 += 1, R88 += 1 };
  s8 -> s8 [0, 65535] { R13634 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R13634 += 1, R13590 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R13634 += 1, R13590 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R13634 += 1, R13590 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s12 [0, 65535] { R13634 += 1 };
  s10 -> s10 [0, 65535] { R13634 += 1, R13590 += 1, R88 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R13634 += 1 };
  s12 -> s12 [0, 65535] { R13634 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R13636 += 1, R13592 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s2 [0, 69] { R13636 += 1, R13592 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s0 [0, 65535] { R13635 += 1, R13636 += 1 };
  s0 -> s3 [0, 65535] { R13636 += 1, R13591 += 1, R13592 += 1 };
  s0 -> s4 [70, 70] { R13636 += 1, R13592 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s5 [70, 70] { R13636 += 1, R13592 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s6 [70, 70] { R13636 += 1, R13592 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s7 [70, 70] { R13636 += 1, R13592 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s1 [71, 65535] { R13636 += 1, R13592 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s2 [71, 65535] { R13636 += 1, R13592 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s1 [0, 69] { R13636 += 1, R13592 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s2 [0, 69] { R13636 += 1, R13592 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s4 [70, 70] { R13636 += 1, R13592 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s5 [70, 70] { R13636 += 1, R13592 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s6 [70, 70] { R13636 += 1, R13592 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s7 [70, 70] { R13636 += 1, R13592 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s1 [71, 65535] { R13636 += 1, R13592 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s2 [71, 65535] { R13636 += 1, R13592 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [0, 69] { R13636 += 1, R13592 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R13636 += 1 };
  s2 -> s4 [70, 70] { R13636 += 1, R13592 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s7 [70, 70] { R13636 += 1, R13592 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [71, 65535] { R13636 += 1, R13592 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s1 [0, 69] { R13636 += 1, R13592 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s2 [0, 69] { R13636 += 1, R13592 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s3 [0, 65535] { R13636 += 1, R13591 += 1, R13592 += 1 };
  s3 -> s4 [70, 70] { R13636 += 1, R13592 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s5 [70, 70] { R13636 += 1, R13592 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s6 [70, 70] { R13636 += 1, R13592 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s7 [70, 70] { R13636 += 1, R13592 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s1 [71, 65535] { R13636 += 1, R13592 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s2 [71, 65535] { R13636 += 1, R13592 += 1, R13514 += 1, R13515 += 1 };
  s4 -> s4 [0, 65535] { R13636 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R13636 += 1, R13592 += 1, R13513 += 1, R13514 += 1 };
  s5 -> s7 [0, 65535] { R13636 += 1, R13592 += 1, R13514 += 1, R13515 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R13636 += 1 };
  s7 -> s7 [0, 65535] { R13636 += 1, R13592 += 1, R13514 += 1, R13515 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R13636 += 1 };
  accepting s4, s8, s2, s9, s7;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R13638 += 1, R13594 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s0 [0, 65535] { R13637 += 1, R13638 += 1 };
  s0 -> s2 [0, 65535] { R13638 += 1, R13593 += 1, R13594 += 1 };
  s0 -> s3 [70, 70] { R13638 += 1, R13594 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s4 [70, 70] { R13638 += 1, R13594 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s1 [71, 65535] { R13638 += 1, R13594 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [0, 69] { R13638 += 1, R13594 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [0, 65535] { R13638 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R13638 += 1, R13594 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s4 [70, 70] { R13638 += 1, R13594 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [71, 65535] { R13638 += 1, R13594 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s1 [0, 69] { R13638 += 1, R13594 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13638 += 1, R13593 += 1, R13594 += 1 };
  s2 -> s3 [70, 70] { R13638 += 1, R13594 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s4 [70, 70] { R13638 += 1, R13594 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s1 [71, 65535] { R13638 += 1, R13594 += 1, R13519 += 1, R13520 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R13638 += 1 };
  s3 -> s3 [0, 65535] { R13638 += 1, R13594 += 1, R13519 += 1, R13520 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13638 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13638 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R13640 += 1, R13596 += 1, R13525 += 1, R13526 += 1 };
  s0 -> s2 [0, 69] { R13640 += 1, R13596 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s0 -> s3 [0, 69] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s0 -> s4 [0, 65535] { R13640 += 1, R13595 += 1, R13596 += 1 };
  s0 -> s0 [0, 65535] { R13639 += 1, R13640 += 1 };
  s0 -> s5 [70, 70] { R13640 += 1, R13596 += 1, R13525 += 1, R13526 += 1 };
  s0 -> s6 [70, 70] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s0 -> s7 [70, 70] { R13640 += 1, R13596 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s0 -> s8 [70, 70] { R13640 += 1, R13596 += 1, R13525 += 1, R13526 += 1 };
  s0 -> s9 [70, 70] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s0 -> s10 [70, 70] { R13640 += 1, R13596 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s0 -> s3 [71, 74] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s0 -> s1 [71, 65535] { R13640 += 1, R13596 += 1, R13525 += 1, R13526 += 1 };
  s0 -> s2 [71, 65535] { R13640 += 1, R13596 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s0 -> s11 [75, 75] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s0 -> s3 [76, 65535] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s1 -> s1 [0, 69] { R13640 += 1, R13596 += 1, R13525 += 1, R13526 += 1 };
  s1 -> s2 [0, 69] { R13640 += 1, R13596 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s1 -> s3 [0, 69] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s1 -> s5 [70, 70] { R13640 += 1, R13596 += 1, R13525 += 1, R13526 += 1 };
  s1 -> s6 [70, 70] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s1 -> s7 [70, 70] { R13640 += 1, R13596 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s1 -> s8 [70, 70] { R13640 += 1, R13596 += 1, R13525 += 1, R13526 += 1 };
  s1 -> s9 [70, 70] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s1 -> s10 [70, 70] { R13640 += 1, R13596 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s1 -> s3 [71, 74] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s1 -> s1 [71, 65535] { R13640 += 1, R13596 += 1, R13525 += 1, R13526 += 1 };
  s1 -> s2 [71, 65535] { R13640 += 1, R13596 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s1 -> s11 [75, 75] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s1 -> s3 [76, 65535] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s2 -> s2 [0, 69] { R13640 += 1, R13596 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s2 -> s3 [0, 69] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s2 -> s6 [70, 70] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s2 -> s7 [70, 70] { R13640 += 1, R13596 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s2 -> s9 [70, 70] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s2 -> s10 [70, 70] { R13640 += 1, R13596 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s2 -> s3 [71, 74] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s2 -> s2 [71, 65535] { R13640 += 1, R13596 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s2 -> s11 [75, 75] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s2 -> s3 [76, 65535] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s3 -> s3 [0, 69] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s3 -> s6 [70, 70] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s3 -> s9 [70, 70] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s3 -> s3 [71, 74] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s3 -> s11 [75, 75] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s3 -> s3 [76, 65535] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s4 -> s1 [0, 69] { R13640 += 1, R13596 += 1, R13525 += 1, R13526 += 1 };
  s4 -> s2 [0, 69] { R13640 += 1, R13596 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s4 -> s3 [0, 69] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s4 -> s4 [0, 65535] { R13640 += 1, R13595 += 1, R13596 += 1 };
  s4 -> s5 [70, 70] { R13640 += 1, R13596 += 1, R13525 += 1, R13526 += 1 };
  s4 -> s6 [70, 70] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s4 -> s7 [70, 70] { R13640 += 1, R13596 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s4 -> s8 [70, 70] { R13640 += 1, R13596 += 1, R13525 += 1, R13526 += 1 };
  s4 -> s9 [70, 70] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s4 -> s10 [70, 70] { R13640 += 1, R13596 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s4 -> s3 [71, 74] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s4 -> s1 [71, 65535] { R13640 += 1, R13596 += 1, R13525 += 1, R13526 += 1 };
  s4 -> s2 [71, 65535] { R13640 += 1, R13596 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s4 -> s11 [75, 75] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s4 -> s3 [76, 65535] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s8 -> s9 [0, 74] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s8 -> s8 [0, 65535] { R13640 += 1, R13596 += 1, R13525 += 1, R13526 += 1 };
  s8 -> s10 [0, 65535] { R13640 += 1, R13596 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s8 -> s13 [75, 75] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s8 -> s9 [76, 65535] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s9 -> s9 [0, 74] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s9 -> s13 [75, 75] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s9 -> s9 [76, 65535] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s10 -> s9 [0, 74] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s10 -> s10 [0, 65535] { R13640 += 1, R13596 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s10 -> s13 [75, 75] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s10 -> s9 [76, 65535] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s11 -> s11 [0, 69] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s11 -> s11 [0, 65535] { R13640 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [70, 70] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s11 -> s14 [70, 70] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s11 -> s11 [71, 65535] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s15 [0, 65535] { R13640 += 1 };
  s13 -> s13 [0, 65535] { R13640 += 1, R13596 += 1, R13526 += 1, R13528 += 1 };
  s13 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R13640 += 1 };
  s14 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R13640 += 1 };
  s15 -> s12 [0, 65535];
  accepting s12, s13, s14, s15, s11;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R13642 += 1, R13598 += 1, R13534 += 1, R13536 += 1, R13537 += 1 };
  s0 -> s2 [0, 69] { R13642 += 1, R13598 += 1, R13533 += 1, R13534 += 1 };
  s0 -> s3 [0, 69] { R13642 += 1, R13598 += 1, R13534 += 1, R13535 += 1, R13536 += 1 };
  s0 -> s4 [0, 65535] { R13642 += 1, R13597 += 1, R13598 += 1 };
  s0 -> s0 [0, 65535] { R13641 += 1, R13642 += 1 };
  s0 -> s5 [70, 70] { R13642 += 1, R13598 += 1, R13534 += 1, R13535 += 1, R13536 += 1 };
  s0 -> s6 [70, 70] { R13642 += 1, R13598 += 1, R13534 += 1, R13536 += 1, R13537 += 1 };
  s0 -> s7 [70, 70] { R13642 += 1, R13598 += 1, R13534 += 1, R13536 += 1, R13537 += 1 };
  s0 -> s8 [70, 70] { R13642 += 1, R13598 += 1, R13533 += 1, R13534 += 1 };
  s0 -> s9 [70, 70] { R13642 += 1, R13598 += 1, R13534 += 1, R13535 += 1, R13536 += 1 };
  s0 -> s10 [70, 70] { R13642 += 1, R13598 += 1, R13533 += 1, R13534 += 1 };
  s0 -> s1 [71, 65535] { R13642 += 1, R13598 += 1, R13534 += 1, R13536 += 1, R13537 += 1 };
  s0 -> s2 [71, 65535] { R13642 += 1, R13598 += 1, R13533 += 1, R13534 += 1 };
  s0 -> s3 [71, 65535] { R13642 += 1, R13598 += 1, R13534 += 1, R13535 += 1, R13536 += 1 };
  s1 -> s1 [0, 69] { R13642 += 1, R13598 += 1, R13534 += 1, R13536 += 1, R13537 += 1 };
  s1 -> s14 [0, 69] { R13642 += 1, R13598 += 1, R13534 += 1 };
  s1 -> s11 [70, 70] { R13642 += 1, R13598 += 1, R13534 += 1 };
  s1 -> s6 [70, 70] { R13642 += 1, R13598 += 1, R13534 += 1, R13536 += 1, R13537 += 1 };
  s1 -> s7 [70, 70] { R13642 += 1, R13598 += 1, R13534 += 1, R13536 += 1, R13537 += 1 };
  s1 -> s15 [70, 70] { R13642 += 1, R13598 += 1, R13534 += 1 };
  s1 -> s1 [71, 65535] { R13642 += 1, R13598 += 1, R13534 += 1, R13536 += 1, R13537 += 1 };
  s1 -> s14 [71, 65535] { R13642 += 1, R13598 += 1, R13534 += 1 };
  s2 -> s1 [0, 69] { R13642 += 1, R13598 += 1, R13534 += 1, R13536 += 1, R13537 += 1 };
  s2 -> s2 [0, 69] { R13642 += 1, R13598 += 1, R13533 += 1, R13534 += 1 };
  s2 -> s3 [0, 69] { R13642 += 1, R13598 += 1, R13534 += 1, R13535 += 1, R13536 += 1 };
  s2 -> s5 [70, 70] { R13642 += 1, R13598 += 1, R13534 += 1, R13535 += 1, R13536 += 1 };
  s2 -> s6 [70, 70] { R13642 += 1, R13598 += 1, R13534 += 1, R13536 += 1, R13537 += 1 };
  s2 -> s7 [70, 70] { R13642 += 1, R13598 += 1, R13534 += 1, R13536 += 1, R13537 += 1 };
  s2 -> s8 [70, 70] { R13642 += 1, R13598 += 1, R13533 += 1, R13534 += 1 };
  s2 -> s9 [70, 70] { R13642 += 1, R13598 += 1, R13534 += 1, R13535 += 1, R13536 += 1 };
  s2 -> s10 [70, 70] { R13642 += 1, R13598 += 1, R13533 += 1, R13534 += 1 };
  s2 -> s1 [71, 65535] { R13642 += 1, R13598 += 1, R13534 += 1, R13536 += 1, R13537 += 1 };
  s2 -> s2 [71, 65535] { R13642 += 1, R13598 += 1, R13533 += 1, R13534 += 1 };
  s2 -> s3 [71, 65535] { R13642 += 1, R13598 += 1, R13534 += 1, R13535 += 1, R13536 += 1 };
  s3 -> s1 [0, 69] { R13642 += 1, R13598 += 1, R13534 += 1, R13536 += 1, R13537 += 1 };
  s3 -> s3 [0, 69] { R13642 += 1, R13598 += 1, R13534 += 1, R13535 += 1, R13536 += 1 };
  s3 -> s5 [70, 70] { R13642 += 1, R13598 += 1, R13534 += 1, R13535 += 1, R13536 += 1 };
  s3 -> s6 [70, 70] { R13642 += 1, R13598 += 1, R13534 += 1, R13536 += 1, R13537 += 1 };
  s3 -> s7 [70, 70] { R13642 += 1, R13598 += 1, R13534 += 1, R13536 += 1, R13537 += 1 };
  s3 -> s9 [70, 70] { R13642 += 1, R13598 += 1, R13534 += 1, R13535 += 1, R13536 += 1 };
  s3 -> s1 [71, 65535] { R13642 += 1, R13598 += 1, R13534 += 1, R13536 += 1, R13537 += 1 };
  s3 -> s3 [71, 65535] { R13642 += 1, R13598 += 1, R13534 += 1, R13535 += 1, R13536 += 1 };
  s4 -> s1 [0, 69] { R13642 += 1, R13598 += 1, R13534 += 1, R13536 += 1, R13537 += 1 };
  s4 -> s2 [0, 69] { R13642 += 1, R13598 += 1, R13533 += 1, R13534 += 1 };
  s4 -> s3 [0, 69] { R13642 += 1, R13598 += 1, R13534 += 1, R13535 += 1, R13536 += 1 };
  s4 -> s4 [0, 65535] { R13642 += 1, R13597 += 1, R13598 += 1 };
  s4 -> s5 [70, 70] { R13642 += 1, R13598 += 1, R13534 += 1, R13535 += 1, R13536 += 1 };
  s4 -> s6 [70, 70] { R13642 += 1, R13598 += 1, R13534 += 1, R13536 += 1, R13537 += 1 };
  s4 -> s7 [70, 70] { R13642 += 1, R13598 += 1, R13534 += 1, R13536 += 1, R13537 += 1 };
  s4 -> s8 [70, 70] { R13642 += 1, R13598 += 1, R13533 += 1, R13534 += 1 };
  s4 -> s9 [70, 70] { R13642 += 1, R13598 += 1, R13534 += 1, R13535 += 1, R13536 += 1 };
  s4 -> s10 [70, 70] { R13642 += 1, R13598 += 1, R13533 += 1, R13534 += 1 };
  s4 -> s1 [71, 65535] { R13642 += 1, R13598 += 1, R13534 += 1, R13536 += 1, R13537 += 1 };
  s4 -> s2 [71, 65535] { R13642 += 1, R13598 += 1, R13533 += 1, R13534 += 1 };
  s4 -> s3 [71, 65535] { R13642 += 1, R13598 += 1, R13534 += 1, R13535 += 1, R13536 += 1 };
  s7 -> s11 [0, 65535] { R13642 += 1, R13598 += 1, R13534 += 1 };
  s7 -> s7 [0, 65535] { R13642 += 1, R13598 += 1, R13534 += 1, R13536 += 1, R13537 += 1 };
  s8 -> s7 [0, 65535] { R13642 += 1, R13598 += 1, R13534 += 1, R13536 += 1, R13537 += 1 };
  s8 -> s8 [0, 65535] { R13642 += 1, R13598 += 1, R13533 += 1, R13534 += 1 };
  s8 -> s9 [0, 65535] { R13642 += 1, R13598 += 1, R13534 += 1, R13535 += 1, R13536 += 1 };
  s9 -> s7 [0, 65535] { R13642 += 1, R13598 += 1, R13534 += 1, R13536 += 1, R13537 += 1 };
  s9 -> s9 [0, 65535] { R13642 += 1, R13598 += 1, R13534 += 1, R13535 += 1, R13536 += 1 };
  s11 -> s11 [0, 65535] { R13642 += 1, R13598 += 1, R13534 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [0, 65535] { R13642 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R13642 += 1 };
  s14 -> s14 [0, 69] { R13642 += 1, R13598 += 1, R13534 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R13642 += 1 };
  s14 -> s11 [70, 70] { R13642 += 1, R13598 += 1, R13534 += 1 };
  s14 -> s15 [70, 70] { R13642 += 1, R13598 += 1, R13534 += 1 };
  s14 -> s14 [71, 65535] { R13642 += 1, R13598 += 1, R13534 += 1 };
  s15 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R13642 += 1 };
  accepting s12, s13, s14, s15, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R13642 && R23 - R13642 = -1 && R24 = R13642 && R25 - R13642 = -1 && R26 = R13642 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R13530 + -1*R13526 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R13530 + -1*R13526 - R66 = 0 && R55 + R13518 + R13515 + -1*R13532 + -1*R13528 - R68 = 0 && R65 + R13529 + R13525 = 0 && R67 + R13531 + R13527 = 0 && R13583 = 0 && R13584 = 0 && R13589 = 0 && R13590 = 0 && R13591 = 0 && R13592 = 0 && R13595 = 0 && R13596 = 0 && R13597 = 0 && R13598 = 0 && R13599 = 0 && R13600 = R13642 && R13601 = 0 && R13602 = R13642 && R13603 = 0 && R13604 = R13642 && R13605 = 0 && R13606 = R13642 && R13607 = 0 && R13608 = R13642 && R13609 = 0 && R13610 = R13642 && R13611 = 0 && R13612 = R13642 && R13613 = 0 && R13614 = R13642 && R13615 = 0 && R13616 = R13642 && R13617 = 0 && R13618 = R13642 && R13619 = 0 && R13620 = R13642 && R13621 = 0 && R13622 = R13642 && R13623 = 0 && R13624 = R13642 && R13625 = 0 && R13626 = R13642 && R13627 = 0 && R13628 = R13642 && R13629 = 0 && R13630 = R13642 && R13631 = 0 && R13632 = R13642 && R13633 = 0 && R13634 = R13642 && R13635 = 0 && R13636 = R13642 && R13637 = 0 && R13638 = R13642 && R13639 = 0 && R13640 = R13642 && R13641 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R13524 + R13521 < 1 && -1*R13530 + -1*R13526 - R66 < 1 && -1*R13532 + -1*R13528 - R68 < 1 && 0 < R13642 && (R2 != 0 || R20 = 0 || (R13543 = 0 && R13544 = 0)) && (R2 != 0 || R20 = 0 || (R13545 = 0 && R13546 = 0)) && (R2 != 0 || R20 = 0 || (R13547 = 0 && R13548 = 0)) && (R2 != 0 || R20 = 0 || (R13549 = 0 && R13550 = 0)) && (R2 != 0 || R20 = 0 || (R13551 = 0 && R13552 = 0)) && (R2 != 0 || R20 = 0 || (R13553 = 0 && R13554 = 0)) && (R2 != 0 || R20 = 0 || (R13555 = 0 && R13556 = 0)) && (R2 != 0 || R20 = 0 || (R13557 = 0 && R13558 = 0)) && (R2 != 0 || R20 = 0 || (R13559 = 0 && R13560 = 0)) && (R2 != 0 || R20 = 0 || (R13561 = 0 && R13562 = 0)) && (R53 + R13516 + R13513 != 0 || R54 + R13517 + R13514 + -1*R13530 + -1*R13526 - R66 = 0 || R66 + R13530 + R13526 < 1) && (R59 + R13522 + R13519 != 0 || R60 + R13523 + R13520 + -1*R13530 + -1*R13526 - R66 = 0 || R66 + R13530 + R13526 < 1) && (R66 + R13530 + R13526 != 0 || ((R53 + R13516 + R13513 != 0 || R54 + R13517 + R13514 = 0 || R68 + R13532 + R13528 < 1) && (R53 + R13516 + R13513 = 0 || R68 + R13532 + R13528 < 1))) && (R66 + R13530 + R13526 != 0 || ((R59 + R13522 + R13519 != 0 || R60 + R13523 + R13520 = 0 || R68 + R13532 + R13528 < 1) && (R59 + R13522 + R13519 = 0 || R68 + R13532 + R13528 < 1))) && (R66 + R13530 + R13526 != 0 || ((R73 + R13538 + R13533 != 0 || R74 + R13539 + R13534 = 0 || R68 + R13532 + R13528 < 1) && (R73 + R13538 + R13533 = 0 || R68 + R13532 + R13528 < 1))) && (R68 + R13532 + R13528 != 0 || R77 + R13542 + R13537 = 0 || (R75 + R13540 + R13535 = 0 && R76 + R13541 + R13536 = 0)) && (R73 + R13538 + R13533 != 0 || R66 + R13530 + R13526 + -1*R13539 + -1*R13534 - R74 = 0 || R66 + R13530 + R13526 < 1) && (R75 + R13540 + R13535 != 0 || R68 + R13532 + R13528 + -1*R13541 + -1*R13536 - R76 = 0 || R68 + R13532 + R13528 < 1) && (R13543 != 0 || R2 = R13544 || R2 < 1) && (R13545 != 0 || R2 = R13546 || R2 < 1) && (R13547 != 0 || R2 = R13548 || R2 < 1) && (R13549 != 0 || R2 = R13550 || R2 < 1) && (R13551 != 0 || R2 = R13552 || R2 < 1) && (R13553 != 0 || R2 = R13554 || R2 < 1) && (R13555 != 0 || R2 = R13556 || R2 < 1) && (R13557 != 0 || R2 = R13558 || R2 < 1) && (R13559 != 0 || R2 = R13560 || R2 < 1) && (R13561 != 0 || R2 = R13562 || R2 < 1) && (R21 = 0 || (R13581 = 0 && R13582 = 0)) && (R21 = 0 || (R13585 = 0 && R13586 = 0)) && (R21 = 0 || (R13587 = 0 && R13588 = 0)) && (R21 = 0 || (R13593 = 0 && R13594 = 0)) && (R22 = 0 || (R13563 = 0 && R13564 = 0)) && (R22 = 0 || (R13565 = 0 && R13566 = 0)) && (R22 = 0 || (R13567 = 0 && R13568 = 0)) && (R22 = 0 || (R13569 = 0 && R13570 = 0)) && (R22 = 0 || (R13571 = 0 && R13572 = 0)) && (R22 = 0 || (R13573 = 0 && R13574 = 0)) && (R22 = 0 || (R13575 = 0 && R13576 = 0)) && (R22 = 0 || (R13577 = 0 && R13578 = 0)) && (R22 = 0 || (R13579 = 0 && R13580 = 0)) && (R53 + R13516 + R13513 = 0 || R66 + R13530 + R13526 < 1) && (R59 + R13522 + R13519 = 0 || R66 + R13530 + R13526 < 1) && (R73 + R13538 + R13533 = 0 || R66 + R13530 + R13526 < 1) && (R75 + R13540 + R13535 = 0 || R68 + R13532 + R13528 < 1) && (R13543 = 0 || R2 < 1) && (R13545 = 0 || R2 < 1) && (R13547 = 0 || R2 < 1) && (R13549 = 0 || R2 < 1) && (R13551 = 0 || R2 < 1) && (R13553 = 0 || R2 < 1) && (R13555 = 0 || R2 < 1) && (R13557 = 0 || R2 < 1) && (R13559 = 0 || R2 < 1) && (R13561 = 0 || R2 < 1);
// End of Parikh automata intersection problem
