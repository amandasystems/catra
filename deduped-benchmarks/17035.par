// Parikh automata intersection problem, generated by OSTRICH+
counter int R12, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R3451, R3452, R3453, R3454, R3455, R3456, R4, R45, R4573, R4574, R4575, R4576, R4577, R4578, R4579, R4580, R47, R4801, R4802, R4803, R4804, R4805, R4806, R4807, R4808, R4809, R4810, R4811, R4812, R4813, R4814, R4815, R4816, R4817, R4818, R4819, R4820, R4821, R4822, R4823, R4824, R4825, R4826, R4827, R4828, R4829, R4830, R4831, R4832, R4833, R4834, R4835, R4836, R4837, R4838, R4839, R4840, R4841, R4842, R4843, R4844, R4845, R4846, R4847, R4848, R4849, R4850, R4851, R4852, R4853, R4854, R4855, R4856, R4857, R4858, R4859, R4860, R4861, R4862, R4863, R4864, R4865, R4866, R4867, R4868, R4869, R4870, R4871, R4872, R4873, R4874, R4875, R4876, R4877, R4878, R4879, R4880, R4881, R4882, R4883, R4884, R4885, R4886, R4887, R4888, R4889, R4890, R4891, R4892, R4893, R4894, R4895, R4896, R4897, R4898, R4899, R49, R4900, R4901, R4902, R4903, R4904, R4905, R4906, R4907, R4908, R4909, R4910, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R4832 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R4831 += 1, R4832 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R4832 += 1, R22 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R4834 += 1 };
  s0 -> s0 [0, 65535] { R4833 += 1, R4834 += 1 };
  s0 -> s2 [70, 70] { R4834 += 1 };
  s0 -> s3 [70, 70] { R4834 += 1 };
  s0 -> s1 [76, 65535] { R4834 += 1 };
  s1 -> s1 [0, 69] { R4834 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4834 += 1 };
  s1 -> s3 [70, 70] { R4834 += 1 };
  s1 -> s1 [76, 65535] { R4834 += 1 };
  s2 -> s2 [0, 70] { R4834 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R4834 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R4836 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R4835 += 1, R4836 += 1 };
  s0 -> s2 [70, 70] { R4836 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R4836 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R4836 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R4836 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4836 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R4836 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R4836 += 1, R45 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R4836 += 1, R45 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R4838 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R4837 += 1, R4838 += 1 };
  s0 -> s2 [70, 70] { R4838 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R4838 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R4838 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R4838 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4838 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R4838 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R4838 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R4838 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R4840 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R4839 += 1, R4840 += 1 };
  s0 -> s2 [70, 70] { R4840 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R4840 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R4840 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R4840 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4840 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R4840 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R4840 += 1, R49 += 1, R50 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4840 += 1, R49 += 1, R50 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R4842 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R4841 += 1, R4842 += 1 };
  s0 -> s2 [70, 70] { R4842 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R4842 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R4842 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R4842 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4842 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R4842 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R4842 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535] { R4842 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R4844 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R4843 += 1, R4844 += 1 };
  s0 -> s2 [70, 70] { R4844 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R4844 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R4844 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R4844 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4844 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R4844 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R4844 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R4844 += 1, R59 += 1, R60 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R4846 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R4845 += 1, R4846 += 1 };
  s0 -> s2 [70, 70] { R4846 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R4846 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R4846 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R4846 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4846 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R4846 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R4846 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4846 += 1, R65 += 1, R66 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R4848 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R4847 += 1, R4848 += 1 };
  s0 -> s2 [70, 70] { R4848 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R4848 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R4848 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R4848 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4848 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R4848 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R4848 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R4848 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R4868 += 1 };
  s0 -> s0 [0, 65535] { R4867 += 1, R4868 += 1 };
  s0 -> s2 [70, 70] { R4868 += 1 };
  s0 -> s1 [71, 65535] { R4868 += 1 };
  s1 -> s1 [0, 69] { R4868 += 1 };
  s1 -> s2 [70, 70] { R4868 += 1 };
  s1 -> s1 [71, 65535] { R4868 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4868 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R4869 += 1, R4870 += 1 };
  s0 -> s1 [0, 65535] { R4870 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R4870 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R4872 += 1 };
  s0 -> s0 [0, 65535] { R4871 += 1, R4872 += 1 };
  s0 -> s2 [0, 65535] { R4872 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R4872 += 1 };
  s0 -> s1 [71, 65535] { R4872 += 1 };
  s1 -> s1 [0, 69] { R4872 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R4872 += 1 };
  s1 -> s1 [71, 65535] { R4872 += 1 };
  s2 -> s1 [0, 69] { R4872 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4872 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R4872 += 1 };
  s2 -> s1 [71, 65535] { R4872 += 1 };
  s3 -> s3 [0, 65535] { R4872 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R4874 += 1, R4812 += 1 };
  s0 -> s2 [0, 65535] { R4874 += 1, R4811 += 1, R4812 += 1 };
  s0 -> s0 [0, 65535] { R4873 += 1, R4874 += 1 };
  s0 -> s1 [71, 65535] { R4874 += 1, R4812 += 1 };
  s1 -> s1 [0, 69] { R4874 += 1, R4812 += 1 };
  s1 -> s1 [0, 65535] { R4874 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R4874 += 1, R4812 += 1 };
  s2 -> s1 [0, 69] { R4874 += 1, R4812 += 1 };
  s2 -> s2 [0, 65535] { R4874 += 1, R4811 += 1, R4812 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R4874 += 1, R4812 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s0 [0, 65535] { R4875 += 1, R4876 += 1 };
  s0 -> s1 [0, 65535] { R4876 += 1, R4814 += 1, R20 += 1 };
  s0 -> s2 [0, 65535] { R4876 += 1, R4813 += 1, R4814 += 1 };
  s1 -> s1 [0, 65535] { R4876 += 1, R4814 += 1, R20 += 1 };
  s1 -> s4 [0, 65535] { R4876 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4876 += 1, R4814 += 1, R20 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4876 += 1, R4813 += 1, R4814 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4876 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R4878 += 1, R4816 += 1 };
  s0 -> s0 [0, 65535] { R4877 += 1, R4878 += 1 };
  s0 -> s2 [0, 65535] { R4878 += 1, R4815 += 1, R4816 += 1 };
  s0 -> s1 [75, 65535] { R4878 += 1, R4816 += 1 };
  s1 -> s1 [0, 70] { R4878 += 1, R4816 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4878 += 1 };
  s1 -> s1 [75, 65535] { R4878 += 1, R4816 += 1 };
  s2 -> s1 [0, 70] { R4878 += 1, R4816 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4878 += 1, R4815 += 1, R4816 += 1 };
  s2 -> s1 [75, 65535] { R4878 += 1, R4816 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R4879 += 1, R4880 += 1 };
  s0 -> s1 [0, 65535] { R4880 += 1, R4817 += 1, R4818 += 1 };
  s0 -> s2 [0, 65535] { R4880 += 1, R4818 += 1, R84 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4880 += 1, R4817 += 1, R4818 += 1 };
  s1 -> s2 [0, 65535] { R4880 += 1, R4818 += 1, R84 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R4880 += 1 };
  s2 -> s2 [0, 65535] { R4880 += 1, R4818 += 1, R84 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4880 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R4882 += 1, R4820 += 1 };
  s0 -> s2 [0, 65535] { R4882 += 1, R4819 += 1, R4820 += 1 };
  s0 -> s0 [0, 65535] { R4881 += 1, R4882 += 1 };
  s0 -> s3 [0, 65535] { R4882 += 1, R4820 += 1, R86 += 1 };
  s0 -> s1 [76, 65535] { R4882 += 1, R4820 += 1 };
  s1 -> s1 [0, 74] { R4882 += 1, R4820 += 1 };
  s1 -> s1 [0, 65535] { R4882 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R4882 += 1, R4820 += 1 };
  s2 -> s1 [0, 74] { R4882 += 1, R4820 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4882 += 1, R4819 += 1, R4820 += 1 };
  s2 -> s3 [0, 65535] { R4882 += 1, R4820 += 1, R86 += 1 };
  s2 -> s1 [76, 65535] { R4882 += 1, R4820 += 1 };
  s3 -> s1 [0, 74] { R4882 += 1, R4820 += 1 };
  s3 -> s4 [0, 65535] { R4882 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4882 += 1, R4820 += 1, R86 += 1 };
  s3 -> s1 [76, 65535] { R4882 += 1, R4820 += 1 };
  s4 -> s4 [0, 65535] { R4882 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R4884 += 1, R4822 += 1, R90 += 1 };
  s0 -> s2 [0, 65535] { R4884 += 1, R4821 += 1, R4822 += 1 };
  s0 -> s3 [0, 65535] { R4884 += 1, R4822 += 1 };
  s0 -> s0 [0, 65535] { R4883 += 1, R4884 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R4884 += 1 };
  s1 -> s1 [0, 65535] { R4884 += 1, R4822 += 1, R90 += 1 };
  s1 -> s3 [0, 65535] { R4884 += 1, R4822 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R4884 += 1, R4822 += 1, R90 += 1 };
  s2 -> s2 [0, 65535] { R4884 += 1, R4821 += 1, R4822 += 1 };
  s2 -> s3 [0, 65535] { R4884 += 1, R4822 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R4884 += 1 };
  s3 -> s3 [0, 65535] { R4884 += 1, R4822 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4884 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R4886 += 1, R4823 += 1, R4824 += 1 };
  s0 -> s2 [0, 65535] { R4886 += 1, R4824 += 1, R94 += 1, R95 += 1 };
  s0 -> s3 [0, 65535] { R4886 += 1, R4824 += 1, R95 += 1, R96 += 1 };
  s0 -> s0 [0, 65535] { R4885 += 1, R4886 += 1 };
  s1 -> s1 [0, 65535] { R4886 += 1, R4823 += 1, R4824 += 1 };
  s1 -> s2 [0, 65535] { R4886 += 1, R4824 += 1, R94 += 1, R95 += 1 };
  s1 -> s3 [0, 65535] { R4886 += 1, R4824 += 1, R95 += 1, R96 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4886 += 1, R4824 += 1, R94 += 1, R95 += 1 };
  s2 -> s3 [0, 65535] { R4886 += 1, R4824 += 1, R95 += 1, R96 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R4886 += 1 };
  s3 -> s3 [0, 65535] { R4886 += 1, R4824 += 1, R95 += 1, R96 += 1 };
  s3 -> s4 [0, 65535] { R4886 += 1, R4824 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R4886 += 1 };
  s4 -> s4 [0, 65535] { R4886 += 1, R4824 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4886 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4886 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R4888 += 1, R4826 += 1, R3455 += 1 };
  s0 -> s2 [0, 65535] { R4888 += 1, R4825 += 1, R4826 += 1 };
  s0 -> s0 [0, 65535] { R4887 += 1, R4888 += 1 };
  s0 -> s1 [0, 65535] { R4888 += 1, R4826 += 1 };
  s0 -> s1 [76, 65535] { R4888 += 1, R4826 += 1, R3455 += 1 };
  s1 -> s1 [0, 74] { R4888 += 1, R4826 += 1, R3455 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R4888 += 1 };
  s1 -> s1 [0, 65535] { R4888 += 1, R4826 += 1 };
  s1 -> s1 [76, 65535] { R4888 += 1, R4826 += 1, R3455 += 1 };
  s2 -> s1 [0, 74] { R4888 += 1, R4826 += 1, R3455 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4888 += 1, R4825 += 1, R4826 += 1 };
  s2 -> s1 [0, 65535] { R4888 += 1, R4826 += 1 };
  s2 -> s1 [76, 65535] { R4888 += 1, R4826 += 1, R3455 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4888 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R4890 += 1, R4827 += 1, R4828 += 1 };
  s0 -> s2 [0, 65535] { R4890 += 1, R4828 += 1 };
  s0 -> s0 [0, 65535] { R4889 += 1, R4890 += 1 };
  s1 -> s1 [0, 65535] { R4890 += 1, R4827 += 1, R4828 += 1 };
  s1 -> s2 [0, 65535] { R4890 += 1, R4828 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4890 += 1, R4828 += 1 };
  s2 -> s3 [0, 65535] { R4890 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4890 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R4892 += 1, R4830 += 1, R4806 += 1, R4807 += 1 };
  s0 -> s0 [0, 65535] { R4891 += 1, R4892 += 1 };
  s0 -> s2 [0, 65535] { R4892 += 1, R4830 += 1, R4807 += 1, R4808 += 1, R4809 += 1 };
  s0 -> s3 [0, 65535] { R4892 += 1, R4830 += 1, R4807 += 1, R4809 += 1, R4810 += 1 };
  s0 -> s4 [0, 65535] { R4892 += 1, R4829 += 1, R4830 += 1 };
  s1 -> s1 [0, 65535] { R4892 += 1, R4830 += 1, R4806 += 1, R4807 += 1 };
  s1 -> s6 [0, 65535] { R4892 += 1 };
  s1 -> s2 [0, 65535] { R4892 += 1, R4830 += 1, R4807 += 1, R4808 += 1, R4809 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R4892 += 1, R4830 += 1, R4807 += 1, R4809 += 1, R4810 += 1 };
  s2 -> s6 [0, 65535] { R4892 += 1 };
  s2 -> s2 [0, 65535] { R4892 += 1, R4830 += 1, R4807 += 1, R4808 += 1, R4809 += 1 };
  s2 -> s8 [0, 65535] { R4892 += 1, R4830 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R4892 += 1, R4830 += 1, R4807 += 1, R4809 += 1, R4810 += 1 };
  s3 -> s6 [0, 65535] { R4892 += 1 };
  s3 -> s7 [0, 65535] { R4892 += 1, R4830 += 1, R4807 += 1 };
  s3 -> s8 [0, 65535] { R4892 += 1, R4830 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4892 += 1, R4830 += 1, R4807 += 1, R4809 += 1, R4810 += 1 };
  s4 -> s1 [0, 65535] { R4892 += 1, R4830 += 1, R4806 += 1, R4807 += 1 };
  s4 -> s2 [0, 65535] { R4892 += 1, R4830 += 1, R4807 += 1, R4808 += 1, R4809 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R4892 += 1, R4830 += 1, R4807 += 1, R4809 += 1, R4810 += 1 };
  s4 -> s4 [0, 65535] { R4892 += 1, R4829 += 1, R4830 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4892 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R4892 += 1 };
  s7 -> s7 [0, 65535] { R4892 += 1, R4830 += 1, R4807 += 1 };
  s7 -> s8 [0, 65535] { R4892 += 1, R4830 += 1 };
  s7 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R4892 += 1 };
  s8 -> s8 [0, 65535] { R4892 += 1, R4830 += 1 };
  s8 -> s5 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R4894 += 1, R4849 += 1, R4850 += 1 };
  s0 -> s0 [0, 65535] { R4893 += 1, R4894 += 1 };
  s0 -> s2 [0, 65535] { R4894 += 1, R4850 += 1, R21 += 1 };
  s1 -> s1 [0, 65535] { R4894 += 1, R4849 += 1, R4850 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R4894 += 1, R4850 += 1, R21 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R4894 += 1 };
  s2 -> s2 [0, 65535] { R4894 += 1, R4850 += 1, R21 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4894 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R4896 += 1, R4852 += 1 };
  s0 -> s0 [0, 65535] { R4895 += 1, R4896 += 1 };
  s0 -> s2 [0, 65535] { R4896 += 1, R4851 += 1, R4852 += 1 };
  s0 -> s3 [70, 70] { R4896 += 1, R4852 += 1 };
  s0 -> s4 [70, 70] { R4896 += 1, R4852 += 1 };
  s0 -> s5 [75, 75] { R4896 += 1, R4852 += 1 };
  s0 -> s1 [76, 65535] { R4896 += 1, R4852 += 1 };
  s1 -> s1 [0, 69] { R4896 += 1, R4852 += 1 };
  s1 -> s3 [70, 70] { R4896 += 1, R4852 += 1 };
  s1 -> s4 [70, 70] { R4896 += 1, R4852 += 1 };
  s1 -> s5 [75, 75] { R4896 += 1, R4852 += 1 };
  s1 -> s1 [76, 65535] { R4896 += 1, R4852 += 1 };
  s2 -> s1 [0, 69] { R4896 += 1, R4852 += 1 };
  s2 -> s2 [0, 65535] { R4896 += 1, R4851 += 1, R4852 += 1 };
  s2 -> s3 [70, 70] { R4896 += 1, R4852 += 1 };
  s2 -> s4 [70, 70] { R4896 += 1, R4852 += 1 };
  s2 -> s5 [75, 75] { R4896 += 1, R4852 += 1 };
  s2 -> s1 [76, 65535] { R4896 += 1, R4852 += 1 };
  s3 -> s3 [0, 70] { R4896 += 1, R4852 += 1 };
  s3 -> s8 [75, 75] { R4896 += 1, R4852 += 1 };
  s3 -> s3 [76, 65535] { R4896 += 1, R4852 += 1 };
  s5 -> s5 [0, 69] { R4896 += 1, R4852 += 1 };
  s5 -> s5 [0, 65535] { R4896 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R4896 += 1, R4852 += 1 };
  s5 -> s8 [70, 70] { R4896 += 1, R4852 += 1 };
  s5 -> s5 [75, 65535] { R4896 += 1, R4852 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4896 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 70] { R4896 += 1, R4852 += 1 };
  s8 -> s8 [0, 65535] { R4896 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [75, 65535] { R4896 += 1, R4852 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R4898 += 1, R4854 += 1, R83 += 1 };
  s0 -> s0 [0, 65535] { R4897 += 1, R4898 += 1 };
  s0 -> s2 [0, 65535] { R4898 += 1, R4853 += 1, R4854 += 1 };
  s0 -> s3 [70, 70] { R4898 += 1, R4854 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R4898 += 1, R4854 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R4898 += 1, R4854 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R4898 += 1, R4854 += 1, R83 += 1 };
  s1 -> s1 [0, 65535] { R4898 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R4898 += 1, R4854 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R4898 += 1, R4854 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R4898 += 1, R4854 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R4898 += 1, R4854 += 1, R83 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4898 += 1, R4853 += 1, R4854 += 1 };
  s2 -> s3 [70, 70] { R4898 += 1, R4854 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R4898 += 1, R4854 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R4898 += 1, R4854 += 1, R83 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4898 += 1, R4854 += 1, R83 += 1 };
  s3 -> s6 [0, 65535] { R4898 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4898 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4898 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R4900 += 1, R4856 += 1, R85 += 1 };
  s0 -> s0 [0, 65535] { R4899 += 1, R4900 += 1 };
  s0 -> s2 [0, 65535] { R4900 += 1, R4855 += 1, R4856 += 1 };
  s0 -> s3 [70, 70] { R4900 += 1, R4856 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R4900 += 1, R4856 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R4900 += 1, R4856 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R4900 += 1, R4856 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R4900 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R4900 += 1, R4856 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R4900 += 1, R4856 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R4900 += 1, R4856 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R4900 += 1, R4856 += 1, R85 += 1 };
  s2 -> s2 [0, 65535] { R4900 += 1, R4855 += 1, R4856 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R4900 += 1, R4856 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R4900 += 1, R4856 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R4900 += 1, R4856 += 1, R85 += 1 };
  s3 -> s3 [0, 65535] { R4900 += 1, R4856 += 1, R85 += 1 };
  s3 -> s6 [0, 65535] { R4900 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4900 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4900 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R4902 += 1, R4858 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R4902 += 1, R4858 += 1, R88 += 1 };
  s0 -> s3 [0, 65535] { R4902 += 1, R4857 += 1, R4858 += 1 };
  s0 -> s0 [0, 65535] { R4901 += 1, R4902 += 1 };
  s0 -> s4 [70, 70] { R4902 += 1, R4858 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R4902 += 1, R4858 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R4902 += 1, R4858 += 1, R87 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R4902 += 1, R4858 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [71, 74] { R4902 += 1, R4858 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R4902 += 1, R4858 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R4902 += 1, R4858 += 1, R88 += 1 };
  s0 -> s2 [76, 65535] { R4902 += 1, R4858 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R4902 += 1, R4858 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [0, 69] { R4902 += 1, R4858 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R4902 += 1, R4858 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R4902 += 1, R4858 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R4902 += 1, R4858 += 1, R87 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R4902 += 1, R4858 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [71, 74] { R4902 += 1, R4858 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R4902 += 1, R4858 += 1, R87 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R4902 += 1, R4858 += 1, R88 += 1 };
  s1 -> s2 [76, 65535] { R4902 += 1, R4858 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R4902 += 1, R4858 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R4902 += 1, R4858 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R4902 += 1, R4858 += 1, R88 += 1 };
  s2 -> s2 [71, 74] { R4902 += 1, R4858 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R4902 += 1, R4858 += 1, R88 += 1 };
  s2 -> s2 [76, 65535] { R4902 += 1, R4858 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R4902 += 1, R4858 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R4902 += 1, R4858 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R4902 += 1, R4857 += 1, R4858 += 1 };
  s3 -> s4 [70, 70] { R4902 += 1, R4858 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R4902 += 1, R4858 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R4902 += 1, R4858 += 1, R87 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R4902 += 1, R4858 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [71, 74] { R4902 += 1, R4858 += 1, R88 += 1 };
  s3 -> s1 [71, 65535] { R4902 += 1, R4858 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R4902 += 1, R4858 += 1, R88 += 1 };
  s3 -> s2 [76, 65535] { R4902 += 1, R4858 += 1, R88 += 1 };
  s5 -> s5 [0, 74] { R4902 += 1, R4858 += 1, R88 += 1 };
  s5 -> s10 [75, 75] { R4902 += 1, R4858 += 1, R88 += 1 };
  s5 -> s5 [76, 65535] { R4902 += 1, R4858 += 1, R88 += 1 };
  s6 -> s5 [0, 74] { R4902 += 1, R4858 += 1, R88 += 1 };
  s6 -> s6 [0, 65535] { R4902 += 1, R4858 += 1, R87 += 1, R88 += 1 };
  s6 -> s10 [75, 75] { R4902 += 1, R4858 += 1, R88 += 1 };
  s6 -> s5 [76, 65535] { R4902 += 1, R4858 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R4902 += 1, R4858 += 1, R88 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R4902 += 1 };
  s8 -> s10 [70, 70] { R4902 += 1, R4858 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R4902 += 1, R4858 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R4902 += 1, R4858 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R4902 += 1, R4858 += 1, R88 += 1 };
  s10 -> s12 [0, 65535] { R4902 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R4902 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R4902 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R4904 += 1, R4860 += 1, R91 += 1, R92 += 1 };
  s0 -> s2 [0, 65535] { R4904 += 1, R4859 += 1, R4860 += 1 };
  s0 -> s0 [0, 65535] { R4903 += 1, R4904 += 1 };
  s0 -> s3 [70, 70] { R4904 += 1, R4860 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R4904 += 1, R4860 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R4904 += 1, R4860 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R4904 += 1, R4860 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 65535] { R4904 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R4904 += 1, R4860 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R4904 += 1, R4860 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R4904 += 1, R4860 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R4904 += 1, R4860 += 1, R91 += 1, R92 += 1 };
  s2 -> s2 [0, 65535] { R4904 += 1, R4859 += 1, R4860 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R4904 += 1, R4860 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R4904 += 1, R4860 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R4904 += 1, R4860 += 1, R91 += 1, R92 += 1 };
  s3 -> s3 [0, 65535] { R4904 += 1, R4860 += 1, R91 += 1, R92 += 1 };
  s3 -> s6 [0, 65535] { R4904 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4904 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4904 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R4906 += 1, R4862 += 1, R3452 += 1 };
  s0 -> s2 [0, 69] { R4906 += 1, R4862 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s3 [0, 69] { R4906 += 1, R4862 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s0 [0, 65535] { R4905 += 1, R4906 += 1 };
  s0 -> s4 [0, 65535] { R4906 += 1, R4861 += 1, R4862 += 1 };
  s0 -> s5 [70, 70] { R4906 += 1, R4862 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s6 [70, 70] { R4906 += 1, R4862 += 1, R3452 += 1 };
  s0 -> s7 [70, 70] { R4906 += 1, R4862 += 1, R3452 += 1 };
  s0 -> s8 [70, 70] { R4906 += 1, R4862 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s9 [70, 70] { R4906 += 1, R4862 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s10 [70, 70] { R4906 += 1, R4862 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s1 [71, 74] { R4906 += 1, R4862 += 1, R3452 += 1 };
  s0 -> s2 [71, 65535] { R4906 += 1, R4862 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s3 [71, 65535] { R4906 += 1, R4862 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s1 [76, 65535] { R4906 += 1, R4862 += 1, R3452 += 1 };
  s1 -> s1 [0, 69] { R4906 += 1, R4862 += 1, R3452 += 1 };
  s1 -> s1 [0, 65535] { R4906 += 1 };
  s1 -> s11 [0, 65535];
  s1 -> s6 [70, 70] { R4906 += 1, R4862 += 1 };
  s1 -> s7 [70, 70] { R4906 += 1, R4862 += 1 };
  s1 -> s1 [71, 74] { R4906 += 1, R4862 += 1, R3452 += 1 };
  s1 -> s1 [71, 65535] { R4906 += 1, R4862 += 1 };
  s1 -> s1 [76, 65535] { R4906 += 1, R4862 += 1, R3452 += 1 };
  s2 -> s1 [0, 69] { R4906 += 1, R4862 += 1, R3452 += 1 };
  s2 -> s2 [0, 69] { R4906 += 1, R4862 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s6 [70, 70] { R4906 += 1, R4862 += 1, R3452 += 1 };
  s2 -> s7 [70, 70] { R4906 += 1, R4862 += 1, R3452 += 1 };
  s2 -> s8 [70, 70] { R4906 += 1, R4862 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s9 [70, 70] { R4906 += 1, R4862 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s1 [71, 74] { R4906 += 1, R4862 += 1, R3452 += 1 };
  s2 -> s2 [71, 65535] { R4906 += 1, R4862 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s1 [76, 65535] { R4906 += 1, R4862 += 1, R3452 += 1 };
  s3 -> s1 [0, 69] { R4906 += 1, R4862 += 1, R3452 += 1 };
  s3 -> s2 [0, 69] { R4906 += 1, R4862 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s3 [0, 69] { R4906 += 1, R4862 += 1, R3451 += 1, R3452 += 1 };
  s3 -> s5 [70, 70] { R4906 += 1, R4862 += 1, R3451 += 1, R3452 += 1 };
  s3 -> s6 [70, 70] { R4906 += 1, R4862 += 1, R3452 += 1 };
  s3 -> s7 [70, 70] { R4906 += 1, R4862 += 1, R3452 += 1 };
  s3 -> s8 [70, 70] { R4906 += 1, R4862 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s9 [70, 70] { R4906 += 1, R4862 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s10 [70, 70] { R4906 += 1, R4862 += 1, R3451 += 1, R3452 += 1 };
  s3 -> s1 [71, 74] { R4906 += 1, R4862 += 1, R3452 += 1 };
  s3 -> s2 [71, 65535] { R4906 += 1, R4862 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s3 [71, 65535] { R4906 += 1, R4862 += 1, R3451 += 1, R3452 += 1 };
  s3 -> s1 [76, 65535] { R4906 += 1, R4862 += 1, R3452 += 1 };
  s4 -> s1 [0, 69] { R4906 += 1, R4862 += 1, R3452 += 1 };
  s4 -> s2 [0, 69] { R4906 += 1, R4862 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s3 [0, 69] { R4906 += 1, R4862 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s4 [0, 65535] { R4906 += 1, R4861 += 1, R4862 += 1 };
  s4 -> s5 [70, 70] { R4906 += 1, R4862 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s6 [70, 70] { R4906 += 1, R4862 += 1, R3452 += 1 };
  s4 -> s7 [70, 70] { R4906 += 1, R4862 += 1, R3452 += 1 };
  s4 -> s8 [70, 70] { R4906 += 1, R4862 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s9 [70, 70] { R4906 += 1, R4862 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s10 [70, 70] { R4906 += 1, R4862 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s1 [71, 74] { R4906 += 1, R4862 += 1, R3452 += 1 };
  s4 -> s2 [71, 65535] { R4906 += 1, R4862 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s3 [71, 65535] { R4906 += 1, R4862 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s1 [76, 65535] { R4906 += 1, R4862 += 1, R3452 += 1 };
  s5 -> s7 [0, 74] { R4906 += 1, R4862 += 1, R3452 += 1 };
  s5 -> s5 [0, 65535] { R4906 += 1, R4862 += 1, R3451 += 1, R3452 += 1 };
  s5 -> s9 [0, 65535] { R4906 += 1, R4862 += 1, R3452 += 1, R3453 += 1 };
  s5 -> s7 [76, 65535] { R4906 += 1, R4862 += 1, R3452 += 1 };
  s6 -> s6 [0, 65535] { R4906 += 1 };
  s6 -> s11 [0, 65535];
  s7 -> s7 [0, 74] { R4906 += 1, R4862 += 1, R3452 += 1 };
  s7 -> s11 [0, 65535];
  s7 -> s7 [0, 65535] { R4906 += 1, R4862 += 1 };
  s7 -> s12 [0, 65535] { R4906 += 1 };
  s7 -> s7 [76, 65535] { R4906 += 1, R4862 += 1, R3452 += 1 };
  s9 -> s7 [0, 74] { R4906 += 1, R4862 += 1, R3452 += 1 };
  s9 -> s9 [0, 65535] { R4906 += 1, R4862 += 1, R3452 += 1, R3453 += 1 };
  s9 -> s7 [76, 65535] { R4906 += 1, R4862 += 1, R3452 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R4906 += 1 };
  accepting s12, s6, s1, s7, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s0 -> s2 [0, 69] { R4908 += 1, R4864 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s0 -> s3 [0, 69] { R4908 += 1, R4864 += 1, R4573 += 1, R4574 += 1 };
  s0 -> s4 [0, 65535] { R4908 += 1, R4863 += 1, R4864 += 1 };
  s0 -> s0 [0, 65535] { R4907 += 1, R4908 += 1 };
  s0 -> s5 [70, 70] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s0 -> s6 [70, 70] { R4908 += 1, R4864 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s0 -> s7 [70, 70] { R4908 += 1, R4864 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s0 -> s8 [70, 70] { R4908 += 1, R4864 += 1, R4573 += 1, R4574 += 1 };
  s0 -> s9 [70, 70] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s0 -> s10 [70, 70] { R4908 += 1, R4864 += 1, R4573 += 1, R4574 += 1 };
  s0 -> s1 [71, 74] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s0 -> s2 [71, 65535] { R4908 += 1, R4864 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s0 -> s3 [71, 65535] { R4908 += 1, R4864 += 1, R4573 += 1, R4574 += 1 };
  s0 -> s11 [75, 75] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s0 -> s1 [76, 65535] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s1 -> s1 [0, 69] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s1 -> s5 [70, 70] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s1 -> s9 [70, 70] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s1 -> s1 [71, 74] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s1 -> s11 [75, 75] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s1 -> s1 [76, 65535] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s2 -> s1 [0, 69] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s2 -> s2 [0, 69] { R4908 += 1, R4864 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s2 -> s5 [70, 70] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s2 -> s6 [70, 70] { R4908 += 1, R4864 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s2 -> s7 [70, 70] { R4908 += 1, R4864 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s2 -> s9 [70, 70] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s2 -> s1 [71, 74] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s2 -> s2 [71, 65535] { R4908 += 1, R4864 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s2 -> s11 [75, 75] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s2 -> s1 [76, 65535] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s3 -> s1 [0, 69] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s3 -> s2 [0, 69] { R4908 += 1, R4864 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s3 -> s3 [0, 69] { R4908 += 1, R4864 += 1, R4573 += 1, R4574 += 1 };
  s3 -> s5 [70, 70] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s3 -> s6 [70, 70] { R4908 += 1, R4864 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s3 -> s7 [70, 70] { R4908 += 1, R4864 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s3 -> s8 [70, 70] { R4908 += 1, R4864 += 1, R4573 += 1, R4574 += 1 };
  s3 -> s9 [70, 70] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s3 -> s10 [70, 70] { R4908 += 1, R4864 += 1, R4573 += 1, R4574 += 1 };
  s3 -> s1 [71, 74] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s3 -> s2 [71, 65535] { R4908 += 1, R4864 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s3 -> s3 [71, 65535] { R4908 += 1, R4864 += 1, R4573 += 1, R4574 += 1 };
  s3 -> s11 [75, 75] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s3 -> s1 [76, 65535] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s4 -> s1 [0, 69] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s4 -> s2 [0, 69] { R4908 += 1, R4864 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s4 -> s3 [0, 69] { R4908 += 1, R4864 += 1, R4573 += 1, R4574 += 1 };
  s4 -> s4 [0, 65535] { R4908 += 1, R4863 += 1, R4864 += 1 };
  s4 -> s5 [70, 70] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s4 -> s6 [70, 70] { R4908 += 1, R4864 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s4 -> s7 [70, 70] { R4908 += 1, R4864 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s4 -> s8 [70, 70] { R4908 += 1, R4864 += 1, R4573 += 1, R4574 += 1 };
  s4 -> s9 [70, 70] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s4 -> s10 [70, 70] { R4908 += 1, R4864 += 1, R4573 += 1, R4574 += 1 };
  s4 -> s1 [71, 74] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s4 -> s2 [71, 65535] { R4908 += 1, R4864 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s4 -> s3 [71, 65535] { R4908 += 1, R4864 += 1, R4573 += 1, R4574 += 1 };
  s4 -> s11 [75, 75] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s4 -> s1 [76, 65535] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s5 -> s5 [0, 74] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s5 -> s18 [75, 75] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s5 -> s5 [76, 65535] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s6 -> s5 [0, 74] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s6 -> s6 [0, 65535] { R4908 += 1, R4864 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s6 -> s18 [75, 75] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s6 -> s5 [76, 65535] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s10 -> s5 [0, 74] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s10 -> s6 [0, 65535] { R4908 += 1, R4864 += 1, R4574 += 1, R4575 += 1, R4576 += 1 };
  s10 -> s10 [0, 65535] { R4908 += 1, R4864 += 1, R4573 += 1, R4574 += 1 };
  s10 -> s18 [75, 75] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s10 -> s5 [76, 65535] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s11 -> s12 [0, 69] { R4908 += 1, R4864 += 1, R4574 += 1 };
  s11 -> s11 [0, 69] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s11 -> s13 [0, 69] { R4908 += 1, R4864 += 1 };
  s11 -> s14 [70, 70] { R4908 += 1, R4864 += 1 };
  s11 -> s15 [70, 70] { R4908 += 1, R4864 += 1, R4574 += 1 };
  s11 -> s16 [70, 70] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s11 -> s17 [70, 70] { R4908 += 1, R4864 += 1 };
  s11 -> s18 [70, 70] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s11 -> s19 [70, 70] { R4908 += 1, R4864 += 1, R4574 += 1 };
  s11 -> s12 [71, 65535] { R4908 += 1, R4864 += 1, R4574 += 1 };
  s11 -> s11 [71, 65535] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s11 -> s13 [71, 65535] { R4908 += 1, R4864 += 1 };
  s12 -> s12 [0, 69] { R4908 += 1, R4864 += 1, R4574 += 1 };
  s12 -> s13 [0, 69] { R4908 += 1, R4864 += 1 };
  s12 -> s14 [70, 70] { R4908 += 1, R4864 += 1 };
  s12 -> s15 [70, 70] { R4908 += 1, R4864 += 1, R4574 += 1 };
  s12 -> s17 [70, 70] { R4908 += 1, R4864 += 1 };
  s12 -> s19 [70, 70] { R4908 += 1, R4864 += 1, R4574 += 1 };
  s12 -> s12 [71, 65535] { R4908 += 1, R4864 += 1, R4574 += 1 };
  s12 -> s13 [71, 65535] { R4908 += 1, R4864 += 1 };
  s13 -> s13 [0, 69] { R4908 += 1, R4864 += 1 };
  s13 -> s20 [0, 65535];
  s13 -> s13 [0, 65535] { R4908 += 1 };
  s13 -> s14 [70, 70] { R4908 += 1, R4864 += 1 };
  s13 -> s17 [70, 70] { R4908 += 1, R4864 += 1 };
  s13 -> s13 [71, 65535] { R4908 += 1, R4864 += 1 };
  s14 -> s14 [0, 65535] { R4908 += 1, R4864 += 1 };
  s14 -> s20 [0, 65535];
  s14 -> s21 [0, 65535] { R4908 += 1 };
  s17 -> s17 [0, 65535] { R4908 += 1 };
  s17 -> s20 [0, 65535];
  s18 -> s14 [0, 65535] { R4908 += 1, R4864 += 1 };
  s18 -> s18 [0, 65535] { R4908 += 1, R4864 += 1, R4574 += 1, R4576 += 1 };
  s18 -> s19 [0, 65535] { R4908 += 1, R4864 += 1, R4574 += 1 };
  s19 -> s14 [0, 65535] { R4908 += 1, R4864 += 1 };
  s19 -> s19 [0, 65535] { R4908 += 1, R4864 += 1, R4574 += 1 };
  s20 -> s20 [0, 65535];
  s21 -> s20 [0, 65535];
  s21 -> s21 [0, 65535] { R4908 += 1 };
  accepting s17, s13, s14, s21, s20;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R4910 += 1, R4866 += 1, R4801 += 1, R4802 += 1 };
  s0 -> s2 [0, 65535] { R4910 += 1, R4865 += 1, R4866 += 1 };
  s0 -> s0 [0, 65535] { R4909 += 1, R4910 += 1 };
  s0 -> s3 [70, 70] { R4910 += 1, R4866 += 1, R4801 += 1, R4802 += 1 };
  s0 -> s4 [70, 70] { R4910 += 1, R4866 += 1, R4801 += 1, R4802 += 1 };
  s0 -> s1 [71, 65535] { R4910 += 1, R4866 += 1, R4801 += 1, R4802 += 1 };
  s1 -> s1 [0, 69] { R4910 += 1, R4866 += 1, R4801 += 1, R4802 += 1 };
  s1 -> s1 [0, 65535] { R4910 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R4910 += 1, R4866 += 1, R4801 += 1, R4802 += 1 };
  s1 -> s4 [70, 70] { R4910 += 1, R4866 += 1, R4801 += 1, R4802 += 1 };
  s1 -> s1 [71, 65535] { R4910 += 1, R4866 += 1, R4801 += 1, R4802 += 1 };
  s2 -> s1 [0, 69] { R4910 += 1, R4866 += 1, R4801 += 1, R4802 += 1 };
  s2 -> s2 [0, 65535] { R4910 += 1, R4865 += 1, R4866 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R4910 += 1, R4866 += 1, R4801 += 1, R4802 += 1 };
  s2 -> s4 [70, 70] { R4910 += 1, R4866 += 1, R4801 += 1, R4802 += 1 };
  s2 -> s1 [71, 65535] { R4910 += 1, R4866 += 1, R4801 += 1, R4802 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4910 += 1, R4866 += 1, R4801 += 1, R4802 += 1 };
  s3 -> s6 [0, 65535] { R4910 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4910 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4910 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R4910 && R23 - R4910 = -1 && R24 = R4910 && R25 - R4910 = -1 && R26 = R4910 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R4578 + -1*R4574 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R4578 + -1*R4574 - R66 = 0 && R55 + R96 + R93 + -1*R4580 + -1*R4576 - R68 = 0 && R65 + R4577 + R4573 = 0 && R67 + R4579 + R4575 = 0 && R4851 = 0 && R4852 = 0 && R4857 = 0 && R4858 = 0 && R4861 = 0 && R4862 = 0 && R4863 = 0 && R4864 = 0 && R4867 = 0 && R4868 = R4910 && R4869 = 0 && R4870 = R4910 && R4871 = 0 && R4872 = R4910 && R4873 = 0 && R4874 = R4910 && R4875 = 0 && R4876 = R4910 && R4877 = 0 && R4878 = R4910 && R4879 = 0 && R4880 = R4910 && R4881 = 0 && R4882 = R4910 && R4883 = 0 && R4884 = R4910 && R4885 = 0 && R4886 = R4910 && R4887 = 0 && R4888 = R4910 && R4889 = 0 && R4890 = R4910 && R4891 = 0 && R4892 = R4910 && R4893 = 0 && R4894 = R4910 && R4895 = 0 && R4896 = R4910 && R4897 = 0 && R4898 = R4910 && R4899 = 0 && R4900 = R4910 && R4901 = 0 && R4902 = R4910 && R4903 = 0 && R4904 = R4910 && R4905 = 0 && R4906 = R4910 && R4907 = 0 && R4908 = R4910 && R4909 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R3456 + R3453 < 1 && -1*R4578 + -1*R4574 - R66 < 1 && -1*R4580 + -1*R4576 - R68 < 1 && 0 < R4910 && (R2 != 0 || R20 = 0 || (R4811 = 0 && R4812 = 0)) && (R2 != 0 || R20 = 0 || (R4813 = 0 && R4814 = 0)) && (R2 != 0 || R20 = 0 || (R4815 = 0 && R4816 = 0)) && (R2 != 0 || R20 = 0 || (R4817 = 0 && R4818 = 0)) && (R2 != 0 || R20 = 0 || (R4819 = 0 && R4820 = 0)) && (R2 != 0 || R20 = 0 || (R4821 = 0 && R4822 = 0)) && (R2 != 0 || R20 = 0 || (R4823 = 0 && R4824 = 0)) && (R2 != 0 || R20 = 0 || (R4825 = 0 && R4826 = 0)) && (R2 != 0 || R20 = 0 || (R4827 = 0 && R4828 = 0)) && (R2 != 0 || R20 = 0 || (R4829 = 0 && R4830 = 0)) && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R4578 + -1*R4574 - R66 = 0 || R66 + R4578 + R4574 < 1) && (R59 + R3454 + R3451 != 0 || R60 + R3455 + R3452 + -1*R4578 + -1*R4574 - R66 = 0 || R66 + R4578 + R4574 < 1) && (R66 + R4578 + R4574 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R4580 + R4576 < 1) && (R53 + R94 + R91 = 0 || R68 + R4580 + R4576 < 1))) && (R66 + R4578 + R4574 != 0 || ((R59 + R3454 + R3451 != 0 || R60 + R3455 + R3452 = 0 || R68 + R4580 + R4576 < 1) && (R59 + R3454 + R3451 = 0 || R68 + R4580 + R4576 < 1))) && (R66 + R4578 + R4574 != 0 || ((R73 + R4806 + R4801 != 0 || R74 + R4807 + R4802 = 0 || R68 + R4580 + R4576 < 1) && (R73 + R4806 + R4801 = 0 || R68 + R4580 + R4576 < 1))) && (R68 + R4580 + R4576 != 0 || R77 + R4810 + R4805 = 0 || (R75 + R4808 + R4803 = 0 && R76 + R4809 + R4804 = 0)) && (R73 + R4806 + R4801 != 0 || R66 + R4578 + R4574 + -1*R4807 + -1*R4802 - R74 = 0 || R66 + R4578 + R4574 < 1) && (R75 + R4808 + R4803 != 0 || R68 + R4580 + R4576 + -1*R4809 + -1*R4804 - R76 = 0 || R68 + R4580 + R4576 < 1) && (R4811 != 0 || R2 = R4812 || R2 < 1) && (R4813 != 0 || R2 = R4814 || R2 < 1) && (R4815 != 0 || R2 = R4816 || R2 < 1) && (R4817 != 0 || R2 = R4818 || R2 < 1) && (R4819 != 0 || R2 = R4820 || R2 < 1) && (R4821 != 0 || R2 = R4822 || R2 < 1) && (R4823 != 0 || R2 = R4824 || R2 < 1) && (R4825 != 0 || R2 = R4826 || R2 < 1) && (R4827 != 0 || R2 = R4828 || R2 < 1) && (R4829 != 0 || R2 = R4830 || R2 < 1) && (R21 = 0 || (R4849 = 0 && R4850 = 0)) && (R21 = 0 || (R4853 = 0 && R4854 = 0)) && (R21 = 0 || (R4855 = 0 && R4856 = 0)) && (R21 = 0 || (R4859 = 0 && R4860 = 0)) && (R21 = 0 || (R4865 = 0 && R4866 = 0)) && (R22 = 0 || (R4831 = 0 && R4832 = 0)) && (R22 = 0 || (R4833 = 0 && R4834 = 0)) && (R22 = 0 || (R4835 = 0 && R4836 = 0)) && (R22 = 0 || (R4837 = 0 && R4838 = 0)) && (R22 = 0 || (R4839 = 0 && R4840 = 0)) && (R22 = 0 || (R4841 = 0 && R4842 = 0)) && (R22 = 0 || (R4843 = 0 && R4844 = 0)) && (R22 = 0 || (R4845 = 0 && R4846 = 0)) && (R22 = 0 || (R4847 = 0 && R4848 = 0)) && (R53 + R94 + R91 = 0 || R66 + R4578 + R4574 < 1) && (R59 + R3454 + R3451 = 0 || R66 + R4578 + R4574 < 1) && (R73 + R4806 + R4801 = 0 || R66 + R4578 + R4574 < 1) && (R75 + R4808 + R4803 = 0 || R68 + R4580 + R4576 < 1) && (R4811 = 0 || R2 < 1) && (R4813 = 0 || R2 < 1) && (R4815 = 0 || R2 < 1) && (R4817 = 0 || R2 < 1) && (R4819 = 0 || R2 < 1) && (R4821 = 0 || R2 < 1) && (R4823 = 0 || R2 < 1) && (R4825 = 0 || R2 < 1) && (R4827 = 0 || R2 < 1) && (R4829 = 0 || R2 < 1);
// End of Parikh automata intersection problem
