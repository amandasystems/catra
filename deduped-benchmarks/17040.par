// Parikh automata intersection problem, generated by OSTRICH+
counter int R12, R13513, R13514, R13515, R13516, R13517, R13518, R13519, R13520, R13521, R13522, R13523, R13524, R13525, R13526, R13527, R13528, R13529, R13530, R13531, R13532, R13643, R13644, R13645, R13646, R13647, R13648, R13649, R13650, R13651, R13652, R13653, R13654, R13655, R13656, R13657, R13658, R13659, R13660, R13661, R13662, R13663, R13664, R13665, R13666, R13667, R13668, R13669, R13670, R13671, R13672, R13673, R13674, R13675, R13676, R13677, R13678, R13679, R13680, R13681, R13682, R13683, R13684, R13685, R13686, R13687, R13688, R13689, R13690, R13691, R13692, R13693, R13694, R13695, R13696, R13697, R13698, R13699, R13700, R13701, R13702, R13703, R13704, R13705, R13706, R13707, R13708, R13709, R13710, R13711, R13712, R13713, R13714, R13715, R13716, R13717, R13718, R13719, R13720, R13721, R13722, R13723, R13724, R13725, R13726, R13727, R13728, R13729, R13730, R13731, R13732, R13733, R13734, R13735, R13736, R13737, R13738, R13739, R13740, R13741, R13742, R13743, R13744, R13745, R13746, R13747, R13748, R13749, R13750, R13751, R13752, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R4, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R13673 += 1, R13674 += 1 };
  s0 -> s1 [0, 65535] { R13674 += 1, R22 += 1 };
  s1 -> s1 [0, 65535] { R13674 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R13676 += 1 };
  s0 -> s0 [0, 65535] { R13675 += 1, R13676 += 1 };
  s0 -> s2 [70, 70] { R13676 += 1 };
  s0 -> s3 [70, 70] { R13676 += 1 };
  s0 -> s1 [76, 65535] { R13676 += 1 };
  s1 -> s1 [0, 69] { R13676 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13676 += 1 };
  s1 -> s3 [70, 70] { R13676 += 1 };
  s1 -> s1 [76, 65535] { R13676 += 1 };
  s2 -> s2 [0, 70] { R13676 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R13676 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R13678 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R13677 += 1, R13678 += 1 };
  s0 -> s2 [70, 70] { R13678 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R13678 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R13678 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R13678 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13678 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R13678 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R13678 += 1, R45 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13678 += 1, R45 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R13680 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R13679 += 1, R13680 += 1 };
  s0 -> s2 [70, 70] { R13680 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R13680 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R13680 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R13680 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13680 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R13680 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R13680 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R13680 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R13682 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R13681 += 1, R13682 += 1 };
  s0 -> s2 [70, 70] { R13682 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R13682 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R13682 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R13682 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13682 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R13682 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R13682 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535] { R13682 += 1, R49 += 1, R50 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R13684 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R13683 += 1, R13684 += 1 };
  s0 -> s2 [70, 70] { R13684 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R13684 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R13684 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R13684 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13684 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R13684 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R13684 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13684 += 1, R53 += 1, R54 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R13686 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R13685 += 1, R13686 += 1 };
  s0 -> s2 [70, 70] { R13686 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R13686 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R13686 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R13686 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13686 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R13686 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R13686 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13686 += 1, R59 += 1, R60 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R13688 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R13687 += 1, R13688 += 1 };
  s0 -> s2 [70, 70] { R13688 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R13688 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R13688 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R13688 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13688 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R13688 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R13688 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R13688 += 1, R65 += 1, R66 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R13690 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R13689 += 1, R13690 += 1 };
  s0 -> s2 [70, 70] { R13690 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R13690 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R13690 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R13690 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13690 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R13690 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R13690 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13690 += 1, R73 += 1, R74 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R13710 += 1 };
  s0 -> s0 [0, 65535] { R13709 += 1, R13710 += 1 };
  s0 -> s2 [70, 70] { R13710 += 1 };
  s0 -> s1 [71, 65535] { R13710 += 1 };
  s1 -> s1 [0, 69] { R13710 += 1 };
  s1 -> s2 [70, 70] { R13710 += 1 };
  s1 -> s1 [71, 65535] { R13710 += 1 };
  s2 -> s2 [0, 65535] { R13710 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R13711 += 1, R13712 += 1 };
  s0 -> s1 [0, 65535] { R13712 += 1, R2 += 1 };
  s1 -> s1 [0, 65535] { R13712 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R13714 += 1 };
  s0 -> s2 [0, 65535] { R13714 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R13713 += 1, R13714 += 1 };
  s0 -> s3 [70, 70] { R13714 += 1 };
  s0 -> s1 [71, 65535] { R13714 += 1 };
  s1 -> s1 [0, 69] { R13714 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R13714 += 1 };
  s1 -> s1 [71, 65535] { R13714 += 1 };
  s2 -> s1 [0, 69] { R13714 += 1 };
  s2 -> s2 [0, 65535] { R13714 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R13714 += 1 };
  s2 -> s1 [71, 65535] { R13714 += 1 };
  s3 -> s3 [0, 65535] { R13714 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R13716 += 1, R13654 += 1 };
  s0 -> s2 [0, 65535] { R13716 += 1, R13653 += 1, R13654 += 1 };
  s0 -> s0 [0, 65535] { R13715 += 1, R13716 += 1 };
  s0 -> s1 [71, 65535] { R13716 += 1, R13654 += 1 };
  s1 -> s1 [0, 69] { R13716 += 1, R13654 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R13716 += 1 };
  s1 -> s1 [71, 65535] { R13716 += 1, R13654 += 1 };
  s2 -> s1 [0, 69] { R13716 += 1, R13654 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13716 += 1, R13653 += 1, R13654 += 1 };
  s2 -> s1 [71, 65535] { R13716 += 1, R13654 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R13718 += 1, R13655 += 1, R13656 += 1 };
  s0 -> s0 [0, 65535] { R13717 += 1, R13718 += 1 };
  s0 -> s2 [0, 65535] { R13718 += 1, R13656 += 1, R20 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R13718 += 1, R13655 += 1, R13656 += 1 };
  s1 -> s2 [0, 65535] { R13718 += 1, R13656 += 1, R20 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R13718 += 1 };
  s2 -> s2 [0, 65535] { R13718 += 1, R13656 += 1, R20 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13718 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R13720 += 1, R13658 += 1 };
  s0 -> s0 [0, 65535] { R13719 += 1, R13720 += 1 };
  s0 -> s2 [0, 65535] { R13720 += 1, R13657 += 1, R13658 += 1 };
  s0 -> s1 [75, 65535] { R13720 += 1, R13658 += 1 };
  s1 -> s1 [0, 70] { R13720 += 1, R13658 += 1 };
  s1 -> s1 [0, 65535] { R13720 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R13720 += 1, R13658 += 1 };
  s2 -> s1 [0, 70] { R13720 += 1, R13658 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13720 += 1, R13657 += 1, R13658 += 1 };
  s2 -> s1 [75, 65535] { R13720 += 1, R13658 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R13722 += 1, R13660 += 1, R84 += 1 };
  s0 -> s2 [0, 65535] { R13722 += 1, R13659 += 1, R13660 += 1 };
  s0 -> s0 [0, 65535] { R13721 += 1, R13722 += 1 };
  s1 -> s4 [0, 65535] { R13722 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R13722 += 1, R13660 += 1, R84 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R13722 += 1, R13660 += 1, R84 += 1 };
  s2 -> s2 [0, 65535] { R13722 += 1, R13659 += 1, R13660 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13722 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R13724 += 1, R13662 += 1 };
  s0 -> s2 [0, 65535] { R13724 += 1, R13661 += 1, R13662 += 1 };
  s0 -> s3 [0, 65535] { R13724 += 1, R13662 += 1, R86 += 1 };
  s0 -> s0 [0, 65535] { R13723 += 1, R13724 += 1 };
  s0 -> s1 [76, 65535] { R13724 += 1, R13662 += 1 };
  s1 -> s1 [0, 74] { R13724 += 1, R13662 += 1 };
  s1 -> s1 [0, 65535] { R13724 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R13724 += 1, R13662 += 1 };
  s2 -> s1 [0, 74] { R13724 += 1, R13662 += 1 };
  s2 -> s2 [0, 65535] { R13724 += 1, R13661 += 1, R13662 += 1 };
  s2 -> s3 [0, 65535] { R13724 += 1, R13662 += 1, R86 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [76, 65535] { R13724 += 1, R13662 += 1 };
  s3 -> s1 [0, 74] { R13724 += 1, R13662 += 1 };
  s3 -> s3 [0, 65535] { R13724 += 1, R13662 += 1, R86 += 1 };
  s3 -> s4 [0, 65535] { R13724 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [76, 65535] { R13724 += 1, R13662 += 1 };
  s4 -> s4 [0, 65535] { R13724 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R13726 += 1, R13663 += 1, R13664 += 1 };
  s0 -> s2 [0, 65535] { R13726 += 1, R13664 += 1, R90 += 1 };
  s0 -> s3 [0, 65535] { R13726 += 1, R13664 += 1 };
  s0 -> s0 [0, 65535] { R13725 += 1, R13726 += 1 };
  s1 -> s1 [0, 65535] { R13726 += 1, R13663 += 1, R13664 += 1 };
  s1 -> s2 [0, 65535] { R13726 += 1, R13664 += 1, R90 += 1 };
  s1 -> s3 [0, 65535] { R13726 += 1, R13664 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13726 += 1, R13664 += 1, R90 += 1 };
  s2 -> s4 [0, 65535] { R13726 += 1 };
  s2 -> s3 [0, 65535] { R13726 += 1, R13664 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R13726 += 1 };
  s3 -> s3 [0, 65535] { R13726 += 1, R13664 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13726 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R13727 += 1, R13728 += 1 };
  s0 -> s1 [0, 65535] { R13728 += 1, R13666 += 1 };
  s0 -> s2 [0, 65535] { R13728 += 1, R13665 += 1, R13666 += 1 };
  s0 -> s3 [0, 65535] { R13728 += 1, R13666 += 1, R13517 += 1, R13518 += 1 };
  s1 -> s4 [0, 65535] { R13728 += 1 };
  s1 -> s1 [0, 65535] { R13728 += 1, R13666 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R13728 += 1, R13666 += 1 };
  s2 -> s2 [0, 65535] { R13728 += 1, R13665 += 1, R13666 += 1 };
  s2 -> s3 [0, 65535] { R13728 += 1, R13666 += 1, R13517 += 1, R13518 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R13728 += 1 };
  s3 -> s1 [0, 65535] { R13728 += 1, R13666 += 1 };
  s3 -> s3 [0, 65535] { R13728 += 1, R13666 += 1, R13517 += 1, R13518 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13728 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R13730 += 1, R13668 += 1, R13523 += 1 };
  s0 -> s0 [0, 65535] { R13729 += 1, R13730 += 1 };
  s0 -> s2 [0, 65535] { R13730 += 1, R13668 += 1, R13522 += 1, R13523 += 1 };
  s0 -> s3 [0, 65535] { R13730 += 1, R13668 += 1, R13523 += 1, R13524 += 1 };
  s0 -> s4 [0, 65535] { R13730 += 1, R13667 += 1, R13668 += 1 };
  s0 -> s1 [76, 65535] { R13730 += 1, R13668 += 1, R13523 += 1 };
  s1 -> s1 [0, 74] { R13730 += 1, R13668 += 1, R13523 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13730 += 1, R13668 += 1 };
  s1 -> s7 [0, 65535] { R13730 += 1 };
  s1 -> s1 [76, 65535] { R13730 += 1, R13668 += 1, R13523 += 1 };
  s2 -> s1 [0, 74] { R13730 += 1, R13668 += 1, R13523 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13730 += 1, R13668 += 1, R13522 += 1, R13523 += 1 };
  s2 -> s3 [0, 65535] { R13730 += 1, R13668 += 1, R13523 += 1, R13524 += 1 };
  s2 -> s7 [0, 65535] { R13730 += 1 };
  s2 -> s1 [76, 65535] { R13730 += 1, R13668 += 1, R13523 += 1 };
  s3 -> s1 [0, 74] { R13730 += 1, R13668 += 1, R13523 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R13730 += 1, R13668 += 1, R13523 += 1, R13524 += 1 };
  s3 -> s6 [0, 65535] { R13730 += 1, R13668 += 1 };
  s3 -> s7 [0, 65535] { R13730 += 1 };
  s3 -> s1 [76, 65535] { R13730 += 1, R13668 += 1, R13523 += 1 };
  s4 -> s1 [0, 74] { R13730 += 1, R13668 += 1, R13523 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R13730 += 1, R13668 += 1, R13522 += 1, R13523 += 1 };
  s4 -> s3 [0, 65535] { R13730 += 1, R13668 += 1, R13523 += 1, R13524 += 1 };
  s4 -> s4 [0, 65535] { R13730 += 1, R13667 += 1, R13668 += 1 };
  s4 -> s1 [76, 65535] { R13730 += 1, R13668 += 1, R13523 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13730 += 1, R13668 += 1 };
  s6 -> s7 [0, 65535] { R13730 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R13730 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R13732 += 1, R13670 += 1 };
  s0 -> s2 [0, 65535] { R13732 += 1, R13670 += 1, R13530 += 1, R13532 += 1 };
  s0 -> s3 [0, 65535] { R13732 += 1, R13669 += 1, R13670 += 1 };
  s0 -> s4 [0, 65535] { R13732 += 1, R13670 += 1, R13530 += 1 };
  s0 -> s0 [0, 65535] { R13731 += 1, R13732 += 1 };
  s1 -> s1 [0, 65535] { R13732 += 1, R13670 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R13732 += 1 };
  s2 -> s1 [0, 65535] { R13732 += 1, R13670 += 1 };
  s2 -> s2 [0, 65535] { R13732 += 1, R13670 += 1, R13530 += 1, R13532 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R13732 += 1 };
  s2 -> s4 [0, 65535] { R13732 += 1, R13670 += 1, R13530 += 1 };
  s3 -> s1 [0, 65535] { R13732 += 1, R13670 += 1 };
  s3 -> s2 [0, 65535] { R13732 += 1, R13670 += 1, R13530 += 1, R13532 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R13732 += 1, R13669 += 1, R13670 += 1 };
  s3 -> s4 [0, 65535] { R13732 += 1, R13670 += 1, R13530 += 1 };
  s4 -> s1 [0, 65535] { R13732 += 1, R13670 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R13732 += 1 };
  s4 -> s4 [0, 65535] { R13732 += 1, R13670 += 1, R13530 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13732 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R13734 += 1, R13672 += 1 };
  s0 -> s0 [0, 65535] { R13733 += 1, R13734 += 1 };
  s0 -> s2 [0, 65535] { R13734 += 1, R13671 += 1, R13672 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R13734 += 1, R13672 += 1 };
  s1 -> s4 [0, 65535] { R13734 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R13734 += 1, R13672 += 1 };
  s2 -> s2 [0, 65535] { R13734 += 1, R13671 += 1, R13672 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13734 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R13736 += 1, R13692 += 1, R21 += 1 };
  s0 -> s2 [0, 65535] { R13736 += 1, R13691 += 1, R13692 += 1 };
  s0 -> s0 [0, 65535] { R13735 += 1, R13736 += 1 };
  s1 -> s1 [0, 65535] { R13736 += 1, R13692 += 1, R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R13736 += 1 };
  s2 -> s1 [0, 65535] { R13736 += 1, R13692 += 1, R21 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13736 += 1, R13691 += 1, R13692 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13736 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R13738 += 1, R13694 += 1 };
  s0 -> s0 [0, 65535] { R13737 += 1, R13738 += 1 };
  s0 -> s2 [0, 65535] { R13738 += 1, R13693 += 1, R13694 += 1 };
  s0 -> s3 [70, 70] { R13738 += 1, R13694 += 1 };
  s0 -> s4 [70, 70] { R13738 += 1, R13694 += 1 };
  s0 -> s5 [75, 75] { R13738 += 1, R13694 += 1 };
  s0 -> s1 [76, 65535] { R13738 += 1, R13694 += 1 };
  s1 -> s1 [0, 69] { R13738 += 1, R13694 += 1 };
  s1 -> s3 [70, 70] { R13738 += 1, R13694 += 1 };
  s1 -> s4 [70, 70] { R13738 += 1, R13694 += 1 };
  s1 -> s5 [75, 75] { R13738 += 1, R13694 += 1 };
  s1 -> s1 [76, 65535] { R13738 += 1, R13694 += 1 };
  s2 -> s1 [0, 69] { R13738 += 1, R13694 += 1 };
  s2 -> s2 [0, 65535] { R13738 += 1, R13693 += 1, R13694 += 1 };
  s2 -> s3 [70, 70] { R13738 += 1, R13694 += 1 };
  s2 -> s4 [70, 70] { R13738 += 1, R13694 += 1 };
  s2 -> s5 [75, 75] { R13738 += 1, R13694 += 1 };
  s2 -> s1 [76, 65535] { R13738 += 1, R13694 += 1 };
  s4 -> s4 [0, 70] { R13738 += 1, R13694 += 1 };
  s4 -> s7 [75, 75] { R13738 += 1, R13694 += 1 };
  s4 -> s4 [76, 65535] { R13738 += 1, R13694 += 1 };
  s5 -> s5 [0, 69] { R13738 += 1, R13694 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R13738 += 1 };
  s5 -> s7 [70, 70] { R13738 += 1, R13694 += 1 };
  s5 -> s8 [70, 70] { R13738 += 1, R13694 += 1 };
  s5 -> s5 [75, 65535] { R13738 += 1, R13694 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R13738 += 1, R13694 += 1 };
  s7 -> s7 [0, 65535] { R13738 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R13738 += 1, R13694 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R13738 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R13740 += 1, R13696 += 1, R83 += 1 };
  s0 -> s0 [0, 65535] { R13739 += 1, R13740 += 1 };
  s0 -> s2 [0, 65535] { R13740 += 1, R13695 += 1, R13696 += 1 };
  s0 -> s3 [70, 70] { R13740 += 1, R13696 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R13740 += 1, R13696 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R13740 += 1, R13696 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R13740 += 1, R13696 += 1, R83 += 1 };
  s1 -> s1 [0, 65535] { R13740 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R13740 += 1, R13696 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R13740 += 1, R13696 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R13740 += 1, R13696 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R13740 += 1, R13696 += 1, R83 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R13740 += 1, R13695 += 1, R13696 += 1 };
  s2 -> s3 [70, 70] { R13740 += 1, R13696 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R13740 += 1, R13696 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R13740 += 1, R13696 += 1, R83 += 1 };
  s3 -> s3 [0, 65535] { R13740 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R13740 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R13740 += 1, R13696 += 1, R83 += 1 };
  s5 -> s5 [0, 65535] { R13740 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R13742 += 1, R13698 += 1, R85 += 1 };
  s0 -> s0 [0, 65535] { R13741 += 1, R13742 += 1 };
  s0 -> s2 [0, 65535] { R13742 += 1, R13697 += 1, R13698 += 1 };
  s0 -> s3 [70, 70] { R13742 += 1, R13698 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R13742 += 1, R13698 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R13742 += 1, R13698 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R13742 += 1, R13698 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R13742 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R13742 += 1, R13698 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R13742 += 1, R13698 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R13742 += 1, R13698 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R13742 += 1, R13698 += 1, R85 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R13742 += 1, R13697 += 1, R13698 += 1 };
  s2 -> s3 [70, 70] { R13742 += 1, R13698 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R13742 += 1, R13698 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R13742 += 1, R13698 += 1, R85 += 1 };
  s3 -> s3 [0, 65535] { R13742 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R13742 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R13742 += 1, R13698 += 1, R85 += 1 };
  s5 -> s5 [0, 65535] { R13742 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R13744 += 1, R13700 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R13744 += 1, R13700 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R13743 += 1, R13744 += 1 };
  s0 -> s3 [0, 65535] { R13744 += 1, R13699 += 1, R13700 += 1 };
  s0 -> s4 [70, 70] { R13744 += 1, R13700 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R13744 += 1, R13700 += 1, R87 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R13744 += 1, R13700 += 1, R87 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R13744 += 1, R13700 += 1, R88 += 1 };
  s0 -> s2 [71, 74] { R13744 += 1, R13700 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R13744 += 1, R13700 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R13744 += 1, R13700 += 1, R88 += 1 };
  s0 -> s2 [76, 65535] { R13744 += 1, R13700 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R13744 += 1, R13700 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [0, 69] { R13744 += 1, R13700 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R13744 += 1, R13700 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R13744 += 1, R13700 += 1, R87 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R13744 += 1, R13700 += 1, R87 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R13744 += 1, R13700 += 1, R88 += 1 };
  s1 -> s2 [71, 74] { R13744 += 1, R13700 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R13744 += 1, R13700 += 1, R87 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R13744 += 1, R13700 += 1, R88 += 1 };
  s1 -> s2 [76, 65535] { R13744 += 1, R13700 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R13744 += 1, R13700 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R13744 += 1, R13700 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R13744 += 1, R13700 += 1, R88 += 1 };
  s2 -> s2 [71, 74] { R13744 += 1, R13700 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R13744 += 1, R13700 += 1, R88 += 1 };
  s2 -> s2 [76, 65535] { R13744 += 1, R13700 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R13744 += 1, R13700 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R13744 += 1, R13700 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R13744 += 1, R13699 += 1, R13700 += 1 };
  s3 -> s4 [70, 70] { R13744 += 1, R13700 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R13744 += 1, R13700 += 1, R87 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R13744 += 1, R13700 += 1, R87 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R13744 += 1, R13700 += 1, R88 += 1 };
  s3 -> s2 [71, 74] { R13744 += 1, R13700 += 1, R88 += 1 };
  s3 -> s1 [71, 65535] { R13744 += 1, R13700 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R13744 += 1, R13700 += 1, R88 += 1 };
  s3 -> s2 [76, 65535] { R13744 += 1, R13700 += 1, R88 += 1 };
  s4 -> s4 [0, 74] { R13744 += 1, R13700 += 1, R88 += 1 };
  s4 -> s11 [75, 75] { R13744 += 1, R13700 += 1, R88 += 1 };
  s4 -> s4 [76, 65535] { R13744 += 1, R13700 += 1, R88 += 1 };
  s5 -> s4 [0, 74] { R13744 += 1, R13700 += 1, R88 += 1 };
  s5 -> s5 [0, 65535] { R13744 += 1, R13700 += 1, R87 += 1, R88 += 1 };
  s5 -> s11 [75, 75] { R13744 += 1, R13700 += 1, R88 += 1 };
  s5 -> s4 [76, 65535] { R13744 += 1, R13700 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R13744 += 1, R13700 += 1, R88 += 1 };
  s8 -> s8 [0, 65535] { R13744 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R13744 += 1, R13700 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R13744 += 1, R13700 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R13744 += 1, R13700 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R13744 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R13744 += 1 };
  s11 -> s11 [0, 65535] { R13744 += 1, R13700 += 1, R88 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R13744 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R13746 += 1, R13702 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s2 [0, 69] { R13746 += 1, R13702 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s0 [0, 65535] { R13745 += 1, R13746 += 1 };
  s0 -> s3 [0, 65535] { R13746 += 1, R13701 += 1, R13702 += 1 };
  s0 -> s4 [70, 70] { R13746 += 1, R13702 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s5 [70, 70] { R13746 += 1, R13702 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s6 [70, 70] { R13746 += 1, R13702 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s7 [70, 70] { R13746 += 1, R13702 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s1 [71, 65535] { R13746 += 1, R13702 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s2 [71, 65535] { R13746 += 1, R13702 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s1 [0, 69] { R13746 += 1, R13702 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s2 [0, 69] { R13746 += 1, R13702 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s4 [70, 70] { R13746 += 1, R13702 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s5 [70, 70] { R13746 += 1, R13702 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s6 [70, 70] { R13746 += 1, R13702 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s7 [70, 70] { R13746 += 1, R13702 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s1 [71, 65535] { R13746 += 1, R13702 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s2 [71, 65535] { R13746 += 1, R13702 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [0, 69] { R13746 += 1, R13702 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R13746 += 1 };
  s2 -> s5 [70, 70] { R13746 += 1, R13702 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s6 [70, 70] { R13746 += 1, R13702 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [71, 65535] { R13746 += 1, R13702 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s1 [0, 69] { R13746 += 1, R13702 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s2 [0, 69] { R13746 += 1, R13702 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s3 [0, 65535] { R13746 += 1, R13701 += 1, R13702 += 1 };
  s3 -> s4 [70, 70] { R13746 += 1, R13702 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s5 [70, 70] { R13746 += 1, R13702 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s6 [70, 70] { R13746 += 1, R13702 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s7 [70, 70] { R13746 += 1, R13702 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s1 [71, 65535] { R13746 += 1, R13702 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s2 [71, 65535] { R13746 += 1, R13702 += 1, R13514 += 1, R13515 += 1 };
  s4 -> s4 [0, 65535] { R13746 += 1, R13702 += 1, R13513 += 1, R13514 += 1 };
  s4 -> s5 [0, 65535] { R13746 += 1, R13702 += 1, R13514 += 1, R13515 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R13746 += 1, R13702 += 1, R13514 += 1, R13515 += 1 };
  s5 -> s9 [0, 65535] { R13746 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R13746 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R13746 += 1 };
  accepting s8, s5, s2, s9, s6;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R13748 += 1, R13704 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s0 [0, 65535] { R13747 += 1, R13748 += 1 };
  s0 -> s2 [0, 65535] { R13748 += 1, R13703 += 1, R13704 += 1 };
  s0 -> s3 [70, 70] { R13748 += 1, R13704 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s4 [70, 70] { R13748 += 1, R13704 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s1 [71, 65535] { R13748 += 1, R13704 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [0, 69] { R13748 += 1, R13704 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13748 += 1 };
  s1 -> s3 [70, 70] { R13748 += 1, R13704 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s4 [70, 70] { R13748 += 1, R13704 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [71, 65535] { R13748 += 1, R13704 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s1 [0, 69] { R13748 += 1, R13704 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13748 += 1, R13703 += 1, R13704 += 1 };
  s2 -> s3 [70, 70] { R13748 += 1, R13704 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s4 [70, 70] { R13748 += 1, R13704 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s1 [71, 65535] { R13748 += 1, R13704 += 1, R13519 += 1, R13520 += 1 };
  s3 -> s3 [0, 65535] { R13748 += 1, R13704 += 1, R13519 += 1, R13520 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R13748 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13748 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13748 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s0 -> s2 [0, 69] { R13750 += 1, R13706 += 1, R13525 += 1, R13526 += 1 };
  s0 -> s3 [0, 69] { R13750 += 1, R13706 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s0 -> s0 [0, 65535] { R13749 += 1, R13750 += 1 };
  s0 -> s4 [0, 65535] { R13750 += 1, R13705 += 1, R13706 += 1 };
  s0 -> s5 [70, 70] { R13750 += 1, R13706 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s0 -> s6 [70, 70] { R13750 += 1, R13706 += 1, R13525 += 1, R13526 += 1 };
  s0 -> s7 [70, 70] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s0 -> s8 [70, 70] { R13750 += 1, R13706 += 1, R13525 += 1, R13526 += 1 };
  s0 -> s9 [70, 70] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s0 -> s10 [70, 70] { R13750 += 1, R13706 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s0 -> s1 [71, 74] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s0 -> s2 [71, 65535] { R13750 += 1, R13706 += 1, R13525 += 1, R13526 += 1 };
  s0 -> s3 [71, 65535] { R13750 += 1, R13706 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s0 -> s11 [75, 75] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s0 -> s1 [76, 65535] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s1 -> s1 [0, 69] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s1 -> s7 [70, 70] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s1 -> s9 [70, 70] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s1 -> s1 [71, 74] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s1 -> s11 [75, 75] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s1 -> s1 [76, 65535] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s2 -> s1 [0, 69] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s2 -> s2 [0, 69] { R13750 += 1, R13706 += 1, R13525 += 1, R13526 += 1 };
  s2 -> s3 [0, 69] { R13750 += 1, R13706 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s2 -> s5 [70, 70] { R13750 += 1, R13706 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s2 -> s6 [70, 70] { R13750 += 1, R13706 += 1, R13525 += 1, R13526 += 1 };
  s2 -> s7 [70, 70] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s2 -> s8 [70, 70] { R13750 += 1, R13706 += 1, R13525 += 1, R13526 += 1 };
  s2 -> s9 [70, 70] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s2 -> s10 [70, 70] { R13750 += 1, R13706 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s2 -> s1 [71, 74] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s2 -> s2 [71, 65535] { R13750 += 1, R13706 += 1, R13525 += 1, R13526 += 1 };
  s2 -> s3 [71, 65535] { R13750 += 1, R13706 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s2 -> s11 [75, 75] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s2 -> s1 [76, 65535] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s3 -> s1 [0, 69] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s3 -> s3 [0, 69] { R13750 += 1, R13706 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s3 -> s5 [70, 70] { R13750 += 1, R13706 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s3 -> s7 [70, 70] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s3 -> s9 [70, 70] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s3 -> s10 [70, 70] { R13750 += 1, R13706 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s3 -> s1 [71, 74] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s3 -> s3 [71, 65535] { R13750 += 1, R13706 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s3 -> s11 [75, 75] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s3 -> s1 [76, 65535] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s4 -> s1 [0, 69] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s4 -> s2 [0, 69] { R13750 += 1, R13706 += 1, R13525 += 1, R13526 += 1 };
  s4 -> s3 [0, 69] { R13750 += 1, R13706 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s4 -> s4 [0, 65535] { R13750 += 1, R13705 += 1, R13706 += 1 };
  s4 -> s5 [70, 70] { R13750 += 1, R13706 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s4 -> s6 [70, 70] { R13750 += 1, R13706 += 1, R13525 += 1, R13526 += 1 };
  s4 -> s7 [70, 70] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s4 -> s8 [70, 70] { R13750 += 1, R13706 += 1, R13525 += 1, R13526 += 1 };
  s4 -> s9 [70, 70] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s4 -> s10 [70, 70] { R13750 += 1, R13706 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s4 -> s1 [71, 74] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s4 -> s2 [71, 65535] { R13750 += 1, R13706 += 1, R13525 += 1, R13526 += 1 };
  s4 -> s3 [71, 65535] { R13750 += 1, R13706 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s4 -> s11 [75, 75] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s4 -> s1 [76, 65535] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s5 -> s9 [0, 74] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s5 -> s5 [0, 65535] { R13750 += 1, R13706 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s5 -> s14 [75, 75] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s5 -> s9 [76, 65535] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s6 -> s9 [0, 74] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s6 -> s5 [0, 65535] { R13750 += 1, R13706 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s6 -> s6 [0, 65535] { R13750 += 1, R13706 += 1, R13525 += 1, R13526 += 1 };
  s6 -> s14 [75, 75] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s6 -> s9 [76, 65535] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s9 -> s9 [0, 74] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s9 -> s14 [75, 75] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s9 -> s9 [76, 65535] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s11 -> s11 [0, 69] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s11 [0, 65535] { R13750 += 1 };
  s11 -> s13 [70, 70] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s11 -> s14 [70, 70] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s11 -> s11 [71, 65535] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R13750 += 1 };
  s14 -> s15 [0, 65535] { R13750 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R13750 += 1, R13706 += 1, R13526 += 1, R13528 += 1 };
  s15 -> s15 [0, 65535] { R13750 += 1 };
  s15 -> s12 [0, 65535];
  accepting s12, s13, s14, s15, s11;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R13752 += 1, R13708 += 1, R13643 += 1, R13644 += 1 };
  s0 -> s2 [0, 69] { R13752 += 1, R13708 += 1, R13644 += 1, R13645 += 1, R13646 += 1 };
  s0 -> s3 [0, 69] { R13752 += 1, R13708 += 1, R13644 += 1, R13646 += 1, R13647 += 1 };
  s0 -> s4 [0, 65535] { R13752 += 1, R13707 += 1, R13708 += 1 };
  s0 -> s0 [0, 65535] { R13751 += 1, R13752 += 1 };
  s0 -> s5 [70, 70] { R13752 += 1, R13708 += 1, R13644 += 1, R13646 += 1, R13647 += 1 };
  s0 -> s6 [70, 70] { R13752 += 1, R13708 += 1, R13644 += 1, R13645 += 1, R13646 += 1 };
  s0 -> s7 [70, 70] { R13752 += 1, R13708 += 1, R13643 += 1, R13644 += 1 };
  s0 -> s8 [70, 70] { R13752 += 1, R13708 += 1, R13644 += 1, R13645 += 1, R13646 += 1 };
  s0 -> s9 [70, 70] { R13752 += 1, R13708 += 1, R13643 += 1, R13644 += 1 };
  s0 -> s10 [70, 70] { R13752 += 1, R13708 += 1, R13644 += 1, R13646 += 1, R13647 += 1 };
  s0 -> s1 [71, 65535] { R13752 += 1, R13708 += 1, R13643 += 1, R13644 += 1 };
  s0 -> s2 [71, 65535] { R13752 += 1, R13708 += 1, R13644 += 1, R13645 += 1, R13646 += 1 };
  s0 -> s3 [71, 65535] { R13752 += 1, R13708 += 1, R13644 += 1, R13646 += 1, R13647 += 1 };
  s1 -> s1 [0, 69] { R13752 += 1, R13708 += 1, R13643 += 1, R13644 += 1 };
  s1 -> s2 [0, 69] { R13752 += 1, R13708 += 1, R13644 += 1, R13645 += 1, R13646 += 1 };
  s1 -> s3 [0, 69] { R13752 += 1, R13708 += 1, R13644 += 1, R13646 += 1, R13647 += 1 };
  s1 -> s5 [70, 70] { R13752 += 1, R13708 += 1, R13644 += 1, R13646 += 1, R13647 += 1 };
  s1 -> s6 [70, 70] { R13752 += 1, R13708 += 1, R13644 += 1, R13645 += 1, R13646 += 1 };
  s1 -> s7 [70, 70] { R13752 += 1, R13708 += 1, R13643 += 1, R13644 += 1 };
  s1 -> s8 [70, 70] { R13752 += 1, R13708 += 1, R13644 += 1, R13645 += 1, R13646 += 1 };
  s1 -> s9 [70, 70] { R13752 += 1, R13708 += 1, R13643 += 1, R13644 += 1 };
  s1 -> s10 [70, 70] { R13752 += 1, R13708 += 1, R13644 += 1, R13646 += 1, R13647 += 1 };
  s1 -> s1 [71, 65535] { R13752 += 1, R13708 += 1, R13643 += 1, R13644 += 1 };
  s1 -> s2 [71, 65535] { R13752 += 1, R13708 += 1, R13644 += 1, R13645 += 1, R13646 += 1 };
  s1 -> s3 [71, 65535] { R13752 += 1, R13708 += 1, R13644 += 1, R13646 += 1, R13647 += 1 };
  s2 -> s2 [0, 69] { R13752 += 1, R13708 += 1, R13644 += 1, R13645 += 1, R13646 += 1 };
  s2 -> s3 [0, 69] { R13752 += 1, R13708 += 1, R13644 += 1, R13646 += 1, R13647 += 1 };
  s2 -> s16 [0, 69] { R13752 += 1, R13708 += 1 };
  s2 -> s5 [70, 70] { R13752 += 1, R13708 += 1, R13644 += 1, R13646 += 1, R13647 += 1 };
  s2 -> s17 [70, 70] { R13752 += 1, R13708 += 1 };
  s2 -> s6 [70, 70] { R13752 += 1, R13708 += 1, R13644 += 1, R13645 += 1, R13646 += 1 };
  s2 -> s8 [70, 70] { R13752 += 1, R13708 += 1, R13644 += 1, R13645 += 1, R13646 += 1 };
  s2 -> s12 [70, 70] { R13752 += 1, R13708 += 1 };
  s2 -> s10 [70, 70] { R13752 += 1, R13708 += 1, R13644 += 1, R13646 += 1, R13647 += 1 };
  s2 -> s2 [71, 65535] { R13752 += 1, R13708 += 1, R13644 += 1, R13645 += 1, R13646 += 1 };
  s2 -> s3 [71, 65535] { R13752 += 1, R13708 += 1, R13644 += 1, R13646 += 1, R13647 += 1 };
  s2 -> s16 [71, 65535] { R13752 += 1, R13708 += 1 };
  s3 -> s15 [0, 69] { R13752 += 1, R13708 += 1, R13644 += 1 };
  s3 -> s3 [0, 69] { R13752 += 1, R13708 += 1, R13644 += 1, R13646 += 1, R13647 += 1 };
  s3 -> s16 [0, 69] { R13752 += 1, R13708 += 1 };
  s3 -> s5 [70, 70] { R13752 += 1, R13708 += 1, R13644 += 1, R13646 += 1, R13647 += 1 };
  s3 -> s17 [70, 70] { R13752 += 1, R13708 += 1 };
  s3 -> s18 [70, 70] { R13752 += 1, R13708 += 1, R13644 += 1 };
  s3 -> s11 [70, 70] { R13752 += 1, R13708 += 1, R13644 += 1 };
  s3 -> s12 [70, 70] { R13752 += 1, R13708 += 1 };
  s3 -> s10 [70, 70] { R13752 += 1, R13708 += 1, R13644 += 1, R13646 += 1, R13647 += 1 };
  s3 -> s15 [71, 65535] { R13752 += 1, R13708 += 1, R13644 += 1 };
  s3 -> s3 [71, 65535] { R13752 += 1, R13708 += 1, R13644 += 1, R13646 += 1, R13647 += 1 };
  s3 -> s16 [71, 65535] { R13752 += 1, R13708 += 1 };
  s4 -> s1 [0, 69] { R13752 += 1, R13708 += 1, R13643 += 1, R13644 += 1 };
  s4 -> s2 [0, 69] { R13752 += 1, R13708 += 1, R13644 += 1, R13645 += 1, R13646 += 1 };
  s4 -> s3 [0, 69] { R13752 += 1, R13708 += 1, R13644 += 1, R13646 += 1, R13647 += 1 };
  s4 -> s4 [0, 65535] { R13752 += 1, R13707 += 1, R13708 += 1 };
  s4 -> s5 [70, 70] { R13752 += 1, R13708 += 1, R13644 += 1, R13646 += 1, R13647 += 1 };
  s4 -> s6 [70, 70] { R13752 += 1, R13708 += 1, R13644 += 1, R13645 += 1, R13646 += 1 };
  s4 -> s7 [70, 70] { R13752 += 1, R13708 += 1, R13643 += 1, R13644 += 1 };
  s4 -> s8 [70, 70] { R13752 += 1, R13708 += 1, R13644 += 1, R13645 += 1, R13646 += 1 };
  s4 -> s9 [70, 70] { R13752 += 1, R13708 += 1, R13643 += 1, R13644 += 1 };
  s4 -> s10 [70, 70] { R13752 += 1, R13708 += 1, R13644 += 1, R13646 += 1, R13647 += 1 };
  s4 -> s1 [71, 65535] { R13752 += 1, R13708 += 1, R13643 += 1, R13644 += 1 };
  s4 -> s2 [71, 65535] { R13752 += 1, R13708 += 1, R13644 += 1, R13645 += 1, R13646 += 1 };
  s4 -> s3 [71, 65535] { R13752 += 1, R13708 += 1, R13644 += 1, R13646 += 1, R13647 += 1 };
  s6 -> s6 [0, 65535] { R13752 += 1, R13708 += 1, R13644 += 1, R13645 += 1, R13646 += 1 };
  s6 -> s12 [0, 65535] { R13752 += 1, R13708 += 1 };
  s6 -> s10 [0, 65535] { R13752 += 1, R13708 += 1, R13644 += 1, R13646 += 1, R13647 += 1 };
  s9 -> s6 [0, 65535] { R13752 += 1, R13708 += 1, R13644 += 1, R13645 += 1, R13646 += 1 };
  s9 -> s9 [0, 65535] { R13752 += 1, R13708 += 1, R13643 += 1, R13644 += 1 };
  s9 -> s10 [0, 65535] { R13752 += 1, R13708 += 1, R13644 += 1, R13646 += 1, R13647 += 1 };
  s10 -> s11 [0, 65535] { R13752 += 1, R13708 += 1, R13644 += 1 };
  s10 -> s12 [0, 65535] { R13752 += 1, R13708 += 1 };
  s10 -> s10 [0, 65535] { R13752 += 1, R13708 += 1, R13644 += 1, R13646 += 1, R13647 += 1 };
  s11 -> s11 [0, 65535] { R13752 += 1, R13708 += 1, R13644 += 1 };
  s11 -> s12 [0, 65535] { R13752 += 1, R13708 += 1 };
  s12 -> s13 [0, 65535] { R13752 += 1 };
  s12 -> s14 [0, 65535];
  s12 -> s12 [0, 65535] { R13752 += 1, R13708 += 1 };
  s13 -> s13 [0, 65535] { R13752 += 1 };
  s13 -> s14 [0, 65535];
  s14 -> s14 [0, 65535];
  s15 -> s15 [0, 69] { R13752 += 1, R13708 += 1, R13644 += 1 };
  s15 -> s16 [0, 69] { R13752 += 1, R13708 += 1 };
  s15 -> s17 [70, 70] { R13752 += 1, R13708 += 1 };
  s15 -> s18 [70, 70] { R13752 += 1, R13708 += 1, R13644 += 1 };
  s15 -> s11 [70, 70] { R13752 += 1, R13708 += 1, R13644 += 1 };
  s15 -> s12 [70, 70] { R13752 += 1, R13708 += 1 };
  s15 -> s15 [71, 65535] { R13752 += 1, R13708 += 1, R13644 += 1 };
  s15 -> s16 [71, 65535] { R13752 += 1, R13708 += 1 };
  s16 -> s16 [0, 69] { R13752 += 1, R13708 += 1 };
  s16 -> s14 [0, 65535];
  s16 -> s16 [0, 65535] { R13752 += 1 };
  s16 -> s17 [70, 70] { R13752 += 1, R13708 += 1 };
  s16 -> s12 [70, 70] { R13752 += 1, R13708 += 1 };
  s16 -> s16 [71, 65535] { R13752 += 1, R13708 += 1 };
  s17 -> s14 [0, 65535];
  s17 -> s17 [0, 65535] { R13752 += 1 };
  accepting s17, s16, s12, s13, s14;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R13752 && R23 - R13752 = -1 && R24 = R13752 && R25 - R13752 = -1 && R26 = R13752 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R13530 + -1*R13526 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R13530 + -1*R13526 - R66 = 0 && R55 + R13518 + R13515 + -1*R13532 + -1*R13528 - R68 = 0 && R65 + R13529 + R13525 = 0 && R67 + R13531 + R13527 = 0 && R13693 = 0 && R13694 = 0 && R13699 = 0 && R13700 = 0 && R13701 = 0 && R13702 = 0 && R13705 = 0 && R13706 = 0 && R13707 = 0 && R13708 = 0 && R13709 = 0 && R13710 = R13752 && R13711 = 0 && R13712 = R13752 && R13713 = 0 && R13714 = R13752 && R13715 = 0 && R13716 = R13752 && R13717 = 0 && R13718 = R13752 && R13719 = 0 && R13720 = R13752 && R13721 = 0 && R13722 = R13752 && R13723 = 0 && R13724 = R13752 && R13725 = 0 && R13726 = R13752 && R13727 = 0 && R13728 = R13752 && R13729 = 0 && R13730 = R13752 && R13731 = 0 && R13732 = R13752 && R13733 = 0 && R13734 = R13752 && R13735 = 0 && R13736 = R13752 && R13737 = 0 && R13738 = R13752 && R13739 = 0 && R13740 = R13752 && R13741 = 0 && R13742 = R13752 && R13743 = 0 && R13744 = R13752 && R13745 = 0 && R13746 = R13752 && R13747 = 0 && R13748 = R13752 && R13749 = 0 && R13750 = R13752 && R13751 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R13524 + R13521 < 1 && -1*R13530 + -1*R13526 - R66 < 1 && -1*R13532 + -1*R13528 - R68 < 1 && 0 < R13752 && (R2 != 0 || R20 = 0 || (R13653 = 0 && R13654 = 0)) && (R2 != 0 || R20 = 0 || (R13655 = 0 && R13656 = 0)) && (R2 != 0 || R20 = 0 || (R13657 = 0 && R13658 = 0)) && (R2 != 0 || R20 = 0 || (R13659 = 0 && R13660 = 0)) && (R2 != 0 || R20 = 0 || (R13661 = 0 && R13662 = 0)) && (R2 != 0 || R20 = 0 || (R13663 = 0 && R13664 = 0)) && (R2 != 0 || R20 = 0 || (R13665 = 0 && R13666 = 0)) && (R2 != 0 || R20 = 0 || (R13667 = 0 && R13668 = 0)) && (R2 != 0 || R20 = 0 || (R13669 = 0 && R13670 = 0)) && (R2 != 0 || R20 = 0 || (R13671 = 0 && R13672 = 0)) && (R53 + R13516 + R13513 != 0 || R54 + R13517 + R13514 + -1*R13530 + -1*R13526 - R66 = 0 || R66 + R13530 + R13526 < 1) && (R59 + R13522 + R13519 != 0 || R60 + R13523 + R13520 + -1*R13530 + -1*R13526 - R66 = 0 || R66 + R13530 + R13526 < 1) && (R66 + R13530 + R13526 != 0 || ((R53 + R13516 + R13513 != 0 || R54 + R13517 + R13514 = 0 || R68 + R13532 + R13528 < 1) && (R53 + R13516 + R13513 = 0 || R68 + R13532 + R13528 < 1))) && (R66 + R13530 + R13526 != 0 || ((R59 + R13522 + R13519 != 0 || R60 + R13523 + R13520 = 0 || R68 + R13532 + R13528 < 1) && (R59 + R13522 + R13519 = 0 || R68 + R13532 + R13528 < 1))) && (R66 + R13530 + R13526 != 0 || ((R73 + R13648 + R13643 != 0 || R74 + R13649 + R13644 = 0 || R68 + R13532 + R13528 < 1) && (R73 + R13648 + R13643 = 0 || R68 + R13532 + R13528 < 1))) && (R68 + R13532 + R13528 != 0 || R77 + R13652 + R13647 = 0 || (R75 + R13650 + R13645 = 0 && R76 + R13651 + R13646 = 0)) && (R73 + R13648 + R13643 != 0 || R66 + R13530 + R13526 + -1*R13649 + -1*R13644 - R74 = 0 || R66 + R13530 + R13526 < 1) && (R75 + R13650 + R13645 != 0 || R68 + R13532 + R13528 + -1*R13651 + -1*R13646 - R76 = 0 || R68 + R13532 + R13528 < 1) && (R13653 != 0 || R2 = R13654 || R2 < 1) && (R13655 != 0 || R2 = R13656 || R2 < 1) && (R13657 != 0 || R2 = R13658 || R2 < 1) && (R13659 != 0 || R2 = R13660 || R2 < 1) && (R13661 != 0 || R2 = R13662 || R2 < 1) && (R13663 != 0 || R2 = R13664 || R2 < 1) && (R13665 != 0 || R2 = R13666 || R2 < 1) && (R13667 != 0 || R2 = R13668 || R2 < 1) && (R13669 != 0 || R2 = R13670 || R2 < 1) && (R13671 != 0 || R2 = R13672 || R2 < 1) && (R21 = 0 || (R13691 = 0 && R13692 = 0)) && (R21 = 0 || (R13695 = 0 && R13696 = 0)) && (R21 = 0 || (R13697 = 0 && R13698 = 0)) && (R21 = 0 || (R13703 = 0 && R13704 = 0)) && (R22 = 0 || (R13673 = 0 && R13674 = 0)) && (R22 = 0 || (R13675 = 0 && R13676 = 0)) && (R22 = 0 || (R13677 = 0 && R13678 = 0)) && (R22 = 0 || (R13679 = 0 && R13680 = 0)) && (R22 = 0 || (R13681 = 0 && R13682 = 0)) && (R22 = 0 || (R13683 = 0 && R13684 = 0)) && (R22 = 0 || (R13685 = 0 && R13686 = 0)) && (R22 = 0 || (R13687 = 0 && R13688 = 0)) && (R22 = 0 || (R13689 = 0 && R13690 = 0)) && (R53 + R13516 + R13513 = 0 || R66 + R13530 + R13526 < 1) && (R59 + R13522 + R13519 = 0 || R66 + R13530 + R13526 < 1) && (R73 + R13648 + R13643 = 0 || R66 + R13530 + R13526 < 1) && (R75 + R13650 + R13645 = 0 || R68 + R13532 + R13528 < 1) && (R13653 = 0 || R2 < 1) && (R13655 = 0 || R2 < 1) && (R13657 = 0 || R2 < 1) && (R13659 = 0 || R2 < 1) && (R13661 = 0 || R2 < 1) && (R13663 = 0 || R2 < 1) && (R13665 = 0 || R2 < 1) && (R13667 = 0 || R2 < 1) && (R13669 = 0 || R2 < 1) && (R13671 = 0 || R2 < 1);
// End of Parikh automata intersection problem
