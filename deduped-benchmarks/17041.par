// Parikh automata intersection problem, generated by OSTRICH+
counter int R12, R13513, R13514, R13515, R13516, R13517, R13518, R13519, R13520, R13521, R13522, R13523, R13524, R15, R15199, R15200, R15201, R15202, R15203, R15204, R15205, R15206, R15207, R15208, R15209, R15210, R15211, R15212, R15213, R15214, R15215, R15216, R15217, R15218, R15219, R15220, R15221, R15222, R15223, R15224, R15225, R15226, R15227, R15228, R15229, R15230, R15231, R15232, R15233, R15234, R15235, R15236, R15237, R15238, R15239, R15240, R15241, R15242, R15243, R15244, R15245, R15246, R15247, R15248, R15249, R15250, R15251, R15252, R15253, R15254, R15255, R15256, R15257, R15258, R15259, R15260, R15261, R15262, R15263, R15264, R15265, R15266, R15267, R15268, R15269, R15270, R15271, R15272, R15273, R15274, R15275, R15276, R15277, R15278, R15279, R15280, R15281, R15282, R15283, R15284, R15285, R15286, R15287, R15288, R15289, R15290, R15291, R15292, R15293, R15294, R15295, R15296, R15297, R15298, R15299, R15300, R15301, R15302, R15303, R15304, R15305, R15306, R15307, R15308, R15309, R15310, R15311, R15312, R15313, R15314, R15315, R15316, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R4, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R15238 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R15237 += 1, R15238 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R15238 += 1, R22 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R15240 += 1 };
  s0 -> s0 [0, 65535] { R15239 += 1, R15240 += 1 };
  s0 -> s2 [70, 70] { R15240 += 1 };
  s0 -> s3 [70, 70] { R15240 += 1 };
  s0 -> s1 [76, 65535] { R15240 += 1 };
  s1 -> s1 [0, 69] { R15240 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15240 += 1 };
  s1 -> s3 [70, 70] { R15240 += 1 };
  s1 -> s1 [76, 65535] { R15240 += 1 };
  s2 -> s2 [0, 70] { R15240 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R15240 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R15242 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R15241 += 1, R15242 += 1 };
  s0 -> s2 [70, 70] { R15242 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R15242 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R15242 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R15242 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15242 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R15242 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R15242 += 1, R45 += 1 };
  s2 -> s2 [0, 65535] { R15242 += 1, R45 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R15244 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R15243 += 1, R15244 += 1 };
  s0 -> s2 [70, 70] { R15244 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R15244 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R15244 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R15244 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15244 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R15244 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R15244 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R15244 += 1, R47 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R15246 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R15245 += 1, R15246 += 1 };
  s0 -> s2 [70, 70] { R15246 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R15246 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R15246 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R15246 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15246 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R15246 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R15246 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535] { R15246 += 1, R49 += 1, R50 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R15248 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R15247 += 1, R15248 += 1 };
  s0 -> s2 [70, 70] { R15248 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R15248 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R15248 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R15248 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15248 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R15248 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R15248 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R15248 += 1, R53 += 1, R54 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R15250 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R15249 += 1, R15250 += 1 };
  s0 -> s2 [70, 70] { R15250 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R15250 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R15250 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R15250 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15250 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R15250 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R15250 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R15250 += 1, R59 += 1, R60 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R15252 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R15251 += 1, R15252 += 1 };
  s0 -> s2 [70, 70] { R15252 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R15252 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R15252 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R15252 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15252 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R15252 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R15252 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R15252 += 1, R65 += 1, R66 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R15254 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R15253 += 1, R15254 += 1 };
  s0 -> s2 [70, 70] { R15254 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R15254 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R15254 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R15254 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15254 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R15254 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R15254 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R15254 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R15274 += 1 };
  s0 -> s0 [0, 65535] { R15273 += 1, R15274 += 1 };
  s0 -> s2 [70, 70] { R15274 += 1 };
  s0 -> s1 [71, 65535] { R15274 += 1 };
  s1 -> s1 [0, 69] { R15274 += 1 };
  s1 -> s2 [70, 70] { R15274 += 1 };
  s1 -> s1 [71, 65535] { R15274 += 1 };
  s2 -> s2 [0, 65535] { R15274 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R15275 += 1, R15276 += 1 };
  s0 -> s1 [0, 65535] { R15276 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R15276 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R15278 += 1 };
  s0 -> s2 [0, 65535] { R15278 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R15277 += 1, R15278 += 1 };
  s0 -> s3 [70, 70] { R15278 += 1 };
  s0 -> s1 [71, 65535] { R15278 += 1 };
  s1 -> s1 [0, 69] { R15278 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R15278 += 1 };
  s1 -> s1 [71, 65535] { R15278 += 1 };
  s2 -> s1 [0, 69] { R15278 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R15278 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R15278 += 1 };
  s2 -> s1 [71, 65535] { R15278 += 1 };
  s3 -> s3 [0, 65535] { R15278 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R15280 += 1, R15218 += 1 };
  s0 -> s0 [0, 65535] { R15279 += 1, R15280 += 1 };
  s0 -> s2 [0, 65535] { R15280 += 1, R15217 += 1, R15218 += 1 };
  s0 -> s1 [71, 65535] { R15280 += 1, R15218 += 1 };
  s1 -> s1 [0, 69] { R15280 += 1, R15218 += 1 };
  s1 -> s1 [0, 65535] { R15280 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R15280 += 1, R15218 += 1 };
  s2 -> s1 [0, 69] { R15280 += 1, R15218 += 1 };
  s2 -> s2 [0, 65535] { R15280 += 1, R15217 += 1, R15218 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R15280 += 1, R15218 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R15282 += 1, R15219 += 1, R15220 += 1 };
  s0 -> s2 [0, 65535] { R15282 += 1, R15220 += 1, R20 += 1 };
  s0 -> s0 [0, 65535] { R15281 += 1, R15282 += 1 };
  s1 -> s1 [0, 65535] { R15282 += 1, R15219 += 1, R15220 += 1 };
  s1 -> s2 [0, 65535] { R15282 += 1, R15220 += 1, R20 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R15282 += 1, R15220 += 1, R20 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R15282 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R15282 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R15284 += 1, R15222 += 1 };
  s0 -> s0 [0, 65535] { R15283 += 1, R15284 += 1 };
  s0 -> s2 [0, 65535] { R15284 += 1, R15221 += 1, R15222 += 1 };
  s0 -> s1 [75, 65535] { R15284 += 1, R15222 += 1 };
  s1 -> s1 [0, 70] { R15284 += 1, R15222 += 1 };
  s1 -> s1 [0, 65535] { R15284 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R15284 += 1, R15222 += 1 };
  s2 -> s1 [0, 70] { R15284 += 1, R15222 += 1 };
  s2 -> s2 [0, 65535] { R15284 += 1, R15221 += 1, R15222 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R15284 += 1, R15222 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R15285 += 1, R15286 += 1 };
  s0 -> s1 [0, 65535] { R15286 += 1, R15224 += 1, R84 += 1 };
  s0 -> s2 [0, 65535] { R15286 += 1, R15223 += 1, R15224 += 1 };
  s1 -> s1 [0, 65535] { R15286 += 1, R15224 += 1, R84 += 1 };
  s1 -> s4 [0, 65535] { R15286 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R15286 += 1, R15224 += 1, R84 += 1 };
  s2 -> s2 [0, 65535] { R15286 += 1, R15223 += 1, R15224 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R15286 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R15288 += 1, R15226 += 1 };
  s0 -> s2 [0, 65535] { R15288 += 1, R15225 += 1, R15226 += 1 };
  s0 -> s3 [0, 65535] { R15288 += 1, R15226 += 1, R86 += 1 };
  s0 -> s0 [0, 65535] { R15287 += 1, R15288 += 1 };
  s0 -> s1 [76, 65535] { R15288 += 1, R15226 += 1 };
  s1 -> s1 [0, 74] { R15288 += 1, R15226 += 1 };
  s1 -> s1 [0, 65535] { R15288 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R15288 += 1, R15226 += 1 };
  s2 -> s1 [0, 74] { R15288 += 1, R15226 += 1 };
  s2 -> s2 [0, 65535] { R15288 += 1, R15225 += 1, R15226 += 1 };
  s2 -> s3 [0, 65535] { R15288 += 1, R15226 += 1, R86 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [76, 65535] { R15288 += 1, R15226 += 1 };
  s3 -> s1 [0, 74] { R15288 += 1, R15226 += 1 };
  s3 -> s4 [0, 65535] { R15288 += 1 };
  s3 -> s3 [0, 65535] { R15288 += 1, R15226 += 1, R86 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [76, 65535] { R15288 += 1, R15226 += 1 };
  s4 -> s4 [0, 65535] { R15288 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R15290 += 1, R15228 += 1, R90 += 1 };
  s0 -> s2 [0, 65535] { R15290 += 1, R15228 += 1 };
  s0 -> s3 [0, 65535] { R15290 += 1, R15227 += 1, R15228 += 1 };
  s0 -> s0 [0, 65535] { R15289 += 1, R15290 += 1 };
  s1 -> s1 [0, 65535] { R15290 += 1, R15228 += 1, R90 += 1 };
  s1 -> s2 [0, 65535] { R15290 += 1, R15228 += 1 };
  s1 -> s5 [0, 65535] { R15290 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R15290 += 1, R15228 += 1 };
  s2 -> s5 [0, 65535] { R15290 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R15290 += 1, R15228 += 1, R90 += 1 };
  s3 -> s2 [0, 65535] { R15290 += 1, R15228 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R15290 += 1, R15227 += 1, R15228 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R15290 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R15292 += 1, R15230 += 1, R13517 += 1, R13518 += 1 };
  s0 -> s0 [0, 65535] { R15291 += 1, R15292 += 1 };
  s0 -> s2 [0, 65535] { R15292 += 1, R15230 += 1 };
  s0 -> s3 [0, 65535] { R15292 += 1, R15229 += 1, R15230 += 1 };
  s1 -> s1 [0, 65535] { R15292 += 1, R15230 += 1, R13517 += 1, R13518 += 1 };
  s1 -> s5 [0, 65535] { R15292 += 1 };
  s1 -> s2 [0, 65535] { R15292 += 1, R15230 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R15292 += 1 };
  s2 -> s2 [0, 65535] { R15292 += 1, R15230 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R15292 += 1, R15230 += 1, R13517 += 1, R13518 += 1 };
  s3 -> s2 [0, 65535] { R15292 += 1, R15230 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R15292 += 1, R15229 += 1, R15230 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R15292 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R15294 += 1, R15232 += 1, R13523 += 1 };
  s0 -> s2 [0, 65535] { R15294 += 1, R15231 += 1, R15232 += 1 };
  s0 -> s3 [0, 65535] { R15294 += 1, R15232 += 1, R13523 += 1, R13524 += 1 };
  s0 -> s4 [0, 65535] { R15294 += 1, R15232 += 1, R13522 += 1, R13523 += 1 };
  s0 -> s0 [0, 65535] { R15293 += 1, R15294 += 1 };
  s0 -> s1 [76, 65535] { R15294 += 1, R15232 += 1, R13523 += 1 };
  s1 -> s1 [0, 74] { R15294 += 1, R15232 += 1, R13523 += 1 };
  s1 -> s5 [0, 65535] { R15294 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R15294 += 1, R15232 += 1 };
  s1 -> s1 [76, 65535] { R15294 += 1, R15232 += 1, R13523 += 1 };
  s2 -> s1 [0, 74] { R15294 += 1, R15232 += 1, R13523 += 1 };
  s2 -> s2 [0, 65535] { R15294 += 1, R15231 += 1, R15232 += 1 };
  s2 -> s3 [0, 65535] { R15294 += 1, R15232 += 1, R13523 += 1, R13524 += 1 };
  s2 -> s4 [0, 65535] { R15294 += 1, R15232 += 1, R13522 += 1, R13523 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [76, 65535] { R15294 += 1, R15232 += 1, R13523 += 1 };
  s3 -> s1 [0, 74] { R15294 += 1, R15232 += 1, R13523 += 1 };
  s3 -> s5 [0, 65535] { R15294 += 1 };
  s3 -> s3 [0, 65535] { R15294 += 1, R15232 += 1, R13523 += 1, R13524 += 1 };
  s3 -> s7 [0, 65535] { R15294 += 1, R15232 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [76, 65535] { R15294 += 1, R15232 += 1, R13523 += 1 };
  s4 -> s1 [0, 74] { R15294 += 1, R15232 += 1, R13523 += 1 };
  s4 -> s5 [0, 65535] { R15294 += 1 };
  s4 -> s3 [0, 65535] { R15294 += 1, R15232 += 1, R13523 += 1, R13524 += 1 };
  s4 -> s4 [0, 65535] { R15294 += 1, R15232 += 1, R13522 += 1, R13523 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s1 [76, 65535] { R15294 += 1, R15232 += 1, R13523 += 1 };
  s5 -> s5 [0, 65535] { R15294 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R15294 += 1 };
  s7 -> s7 [0, 65535] { R15294 += 1, R15232 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 74] { R15296 += 1, R15234 += 1, R15204 += 1, R15206 += 1 };
  s0 -> s2 [0, 65535] { R15296 += 1, R15233 += 1, R15234 += 1 };
  s0 -> s0 [0, 65535] { R15295 += 1, R15296 += 1 };
  s0 -> s3 [0, 65535] { R15296 += 1, R15234 += 1, R15204 += 1, R15205 += 1, R15206 += 1 };
  s0 -> s4 [0, 65535] { R15296 += 1, R15234 += 1, R15203 += 1, R15204 += 1 };
  s0 -> s5 [75, 75] { R15296 += 1, R15234 += 1, R15204 += 1, R15206 += 1 };
  s0 -> s1 [76, 65535] { R15296 += 1, R15234 += 1, R15204 += 1, R15206 += 1 };
  s1 -> s1 [0, 74] { R15296 += 1, R15234 += 1, R15204 += 1, R15206 += 1 };
  s1 -> s5 [75, 75] { R15296 += 1, R15234 += 1, R15204 += 1, R15206 += 1 };
  s1 -> s1 [76, 65535] { R15296 += 1, R15234 += 1, R15204 += 1, R15206 += 1 };
  s2 -> s1 [0, 74] { R15296 += 1, R15234 += 1, R15204 += 1, R15206 += 1 };
  s2 -> s2 [0, 65535] { R15296 += 1, R15233 += 1, R15234 += 1 };
  s2 -> s3 [0, 65535] { R15296 += 1, R15234 += 1, R15204 += 1, R15205 += 1, R15206 += 1 };
  s2 -> s4 [0, 65535] { R15296 += 1, R15234 += 1, R15203 += 1, R15204 += 1 };
  s2 -> s5 [75, 75] { R15296 += 1, R15234 += 1, R15204 += 1, R15206 += 1 };
  s2 -> s1 [76, 65535] { R15296 += 1, R15234 += 1, R15204 += 1, R15206 += 1 };
  s3 -> s1 [0, 74] { R15296 += 1, R15234 += 1, R15204 += 1, R15206 += 1 };
  s3 -> s3 [0, 65535] { R15296 += 1, R15234 += 1, R15204 += 1, R15205 += 1, R15206 += 1 };
  s3 -> s5 [75, 75] { R15296 += 1, R15234 += 1, R15204 += 1, R15206 += 1 };
  s3 -> s1 [76, 65535] { R15296 += 1, R15234 += 1, R15204 += 1, R15206 += 1 };
  s4 -> s1 [0, 74] { R15296 += 1, R15234 += 1, R15204 += 1, R15206 += 1 };
  s4 -> s3 [0, 65535] { R15296 += 1, R15234 += 1, R15204 += 1, R15205 += 1, R15206 += 1 };
  s4 -> s4 [0, 65535] { R15296 += 1, R15234 += 1, R15203 += 1, R15204 += 1 };
  s4 -> s5 [75, 75] { R15296 += 1, R15234 += 1, R15204 += 1, R15206 += 1 };
  s4 -> s1 [76, 65535] { R15296 += 1, R15234 += 1, R15204 += 1, R15206 += 1 };
  s5 -> s6 [0, 65535] { R15296 += 1, R15234 += 1, R15204 += 1 };
  s5 -> s7 [0, 65535] { R15296 += 1 };
  s5 -> s8 [0, 65535] { R15296 += 1, R15234 += 1 };
  s5 -> s9 [0, 65535];
  s5 -> s5 [0, 65535] { R15296 += 1, R15234 += 1, R15204 += 1, R15206 += 1 };
  s6 -> s6 [0, 65535] { R15296 += 1, R15234 += 1, R15204 += 1 };
  s6 -> s7 [0, 65535] { R15296 += 1 };
  s6 -> s8 [0, 65535] { R15296 += 1, R15234 += 1 };
  s6 -> s9 [0, 65535];
  s7 -> s7 [0, 65535] { R15296 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s7 [0, 65535] { R15296 += 1 };
  s8 -> s8 [0, 65535] { R15296 += 1, R15234 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  accepting s8, s5, s9, s6, s7;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R15298 += 1, R15236 += 1 };
  s0 -> s2 [0, 65535] { R15298 += 1, R15235 += 1, R15236 += 1 };
  s0 -> s3 [0, 65535] { R15298 += 1, R15236 += 1, R15213 += 1 };
  s0 -> s0 [0, 65535] { R15297 += 1, R15298 += 1 };
  s1 -> s1 [0, 65535] { R15298 += 1, R15236 += 1 };
  s1 -> s4 [0, 65535] { R15298 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R15298 += 1, R15236 += 1 };
  s2 -> s2 [0, 65535] { R15298 += 1, R15235 += 1, R15236 += 1 };
  s2 -> s3 [0, 65535] { R15298 += 1, R15236 += 1, R15213 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R15298 += 1, R15236 += 1 };
  s3 -> s4 [0, 65535] { R15298 += 1 };
  s3 -> s3 [0, 65535] { R15298 += 1, R15236 += 1, R15213 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R15298 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R15300 += 1, R15256 += 1, R21 += 1 };
  s0 -> s0 [0, 65535] { R15299 += 1, R15300 += 1 };
  s0 -> s2 [0, 65535] { R15300 += 1, R15255 += 1, R15256 += 1 };
  s1 -> s1 [0, 65535] { R15300 += 1, R15256 += 1, R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R15300 += 1 };
  s2 -> s1 [0, 65535] { R15300 += 1, R15256 += 1, R21 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R15300 += 1, R15255 += 1, R15256 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R15300 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R15302 += 1, R15258 += 1 };
  s0 -> s2 [0, 65535] { R15302 += 1, R15257 += 1, R15258 += 1 };
  s0 -> s0 [0, 65535] { R15301 += 1, R15302 += 1 };
  s0 -> s3 [70, 70] { R15302 += 1, R15258 += 1 };
  s0 -> s4 [70, 70] { R15302 += 1, R15258 += 1 };
  s0 -> s5 [75, 75] { R15302 += 1, R15258 += 1 };
  s0 -> s1 [76, 65535] { R15302 += 1, R15258 += 1 };
  s1 -> s1 [0, 69] { R15302 += 1, R15258 += 1 };
  s1 -> s3 [70, 70] { R15302 += 1, R15258 += 1 };
  s1 -> s4 [70, 70] { R15302 += 1, R15258 += 1 };
  s1 -> s5 [75, 75] { R15302 += 1, R15258 += 1 };
  s1 -> s1 [76, 65535] { R15302 += 1, R15258 += 1 };
  s2 -> s1 [0, 69] { R15302 += 1, R15258 += 1 };
  s2 -> s2 [0, 65535] { R15302 += 1, R15257 += 1, R15258 += 1 };
  s2 -> s3 [70, 70] { R15302 += 1, R15258 += 1 };
  s2 -> s4 [70, 70] { R15302 += 1, R15258 += 1 };
  s2 -> s5 [75, 75] { R15302 += 1, R15258 += 1 };
  s2 -> s1 [76, 65535] { R15302 += 1, R15258 += 1 };
  s3 -> s3 [0, 70] { R15302 += 1, R15258 += 1 };
  s3 -> s7 [75, 75] { R15302 += 1, R15258 += 1 };
  s3 -> s3 [76, 65535] { R15302 += 1, R15258 += 1 };
  s5 -> s5 [0, 69] { R15302 += 1, R15258 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R15302 += 1 };
  s5 -> s7 [70, 70] { R15302 += 1, R15258 += 1 };
  s5 -> s8 [70, 70] { R15302 += 1, R15258 += 1 };
  s5 -> s5 [75, 65535] { R15302 += 1, R15258 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R15302 += 1, R15258 += 1 };
  s7 -> s7 [0, 65535] { R15302 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R15302 += 1, R15258 += 1 };
  s8 -> s8 [0, 65535] { R15302 += 1 };
  s8 -> s6 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R15304 += 1, R15260 += 1, R83 += 1 };
  s0 -> s2 [0, 65535] { R15304 += 1, R15259 += 1, R15260 += 1 };
  s0 -> s0 [0, 65535] { R15303 += 1, R15304 += 1 };
  s0 -> s3 [70, 70] { R15304 += 1, R15260 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R15304 += 1, R15260 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R15304 += 1, R15260 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R15304 += 1, R15260 += 1, R83 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R15304 += 1 };
  s1 -> s3 [70, 70] { R15304 += 1, R15260 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R15304 += 1, R15260 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R15304 += 1, R15260 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R15304 += 1, R15260 += 1, R83 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R15304 += 1, R15259 += 1, R15260 += 1 };
  s2 -> s3 [70, 70] { R15304 += 1, R15260 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R15304 += 1, R15260 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R15304 += 1, R15260 += 1, R83 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R15304 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R15304 += 1 };
  s4 -> s4 [0, 65535] { R15304 += 1, R15260 += 1, R83 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15304 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R15306 += 1, R15262 += 1, R85 += 1 };
  s0 -> s0 [0, 65535] { R15305 += 1, R15306 += 1 };
  s0 -> s2 [0, 65535] { R15306 += 1, R15261 += 1, R15262 += 1 };
  s0 -> s3 [70, 70] { R15306 += 1, R15262 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R15306 += 1, R15262 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R15306 += 1, R15262 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R15306 += 1, R15262 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R15306 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R15306 += 1, R15262 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R15306 += 1, R15262 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R15306 += 1, R15262 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R15306 += 1, R15262 += 1, R85 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R15306 += 1, R15261 += 1, R15262 += 1 };
  s2 -> s3 [70, 70] { R15306 += 1, R15262 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R15306 += 1, R15262 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R15306 += 1, R15262 += 1, R85 += 1 };
  s3 -> s3 [0, 65535] { R15306 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R15306 += 1 };
  s4 -> s4 [0, 65535] { R15306 += 1, R15262 += 1, R85 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R15306 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R15308 += 1, R15264 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R15308 += 1, R15264 += 1, R88 += 1 };
  s0 -> s3 [0, 65535] { R15308 += 1, R15263 += 1, R15264 += 1 };
  s0 -> s0 [0, 65535] { R15307 += 1, R15308 += 1 };
  s0 -> s4 [70, 70] { R15308 += 1, R15264 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R15308 += 1, R15264 += 1, R87 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R15308 += 1, R15264 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R15308 += 1, R15264 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [71, 74] { R15308 += 1, R15264 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R15308 += 1, R15264 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R15308 += 1, R15264 += 1, R88 += 1 };
  s0 -> s2 [76, 65535] { R15308 += 1, R15264 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R15308 += 1, R15264 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [0, 69] { R15308 += 1, R15264 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R15308 += 1, R15264 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R15308 += 1, R15264 += 1, R87 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R15308 += 1, R15264 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R15308 += 1, R15264 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [71, 74] { R15308 += 1, R15264 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R15308 += 1, R15264 += 1, R87 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R15308 += 1, R15264 += 1, R88 += 1 };
  s1 -> s2 [76, 65535] { R15308 += 1, R15264 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R15308 += 1, R15264 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R15308 += 1, R15264 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R15308 += 1, R15264 += 1, R88 += 1 };
  s2 -> s2 [71, 74] { R15308 += 1, R15264 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R15308 += 1, R15264 += 1, R88 += 1 };
  s2 -> s2 [76, 65535] { R15308 += 1, R15264 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R15308 += 1, R15264 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R15308 += 1, R15264 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R15308 += 1, R15263 += 1, R15264 += 1 };
  s3 -> s4 [70, 70] { R15308 += 1, R15264 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R15308 += 1, R15264 += 1, R87 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R15308 += 1, R15264 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R15308 += 1, R15264 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [71, 74] { R15308 += 1, R15264 += 1, R88 += 1 };
  s3 -> s1 [71, 65535] { R15308 += 1, R15264 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R15308 += 1, R15264 += 1, R88 += 1 };
  s3 -> s2 [76, 65535] { R15308 += 1, R15264 += 1, R88 += 1 };
  s4 -> s4 [0, 74] { R15308 += 1, R15264 += 1, R88 += 1 };
  s4 -> s11 [75, 75] { R15308 += 1, R15264 += 1, R88 += 1 };
  s4 -> s4 [76, 65535] { R15308 += 1, R15264 += 1, R88 += 1 };
  s5 -> s4 [0, 74] { R15308 += 1, R15264 += 1, R88 += 1 };
  s5 -> s5 [0, 65535] { R15308 += 1, R15264 += 1, R87 += 1, R88 += 1 };
  s5 -> s11 [75, 75] { R15308 += 1, R15264 += 1, R88 += 1 };
  s5 -> s4 [76, 65535] { R15308 += 1, R15264 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R15308 += 1, R15264 += 1, R88 += 1 };
  s8 -> s8 [0, 65535] { R15308 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R15308 += 1, R15264 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R15308 += 1, R15264 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R15308 += 1, R15264 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R15308 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R15308 += 1, R15264 += 1, R88 += 1 };
  s11 -> s12 [0, 65535] { R15308 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R15308 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R15310 += 1, R15266 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s2 [0, 69] { R15310 += 1, R15266 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s3 [0, 65535] { R15310 += 1, R15265 += 1, R15266 += 1 };
  s0 -> s0 [0, 65535] { R15309 += 1, R15310 += 1 };
  s0 -> s4 [70, 70] { R15310 += 1, R15266 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s5 [70, 70] { R15310 += 1, R15266 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s6 [70, 70] { R15310 += 1, R15266 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s7 [70, 70] { R15310 += 1, R15266 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s1 [71, 65535] { R15310 += 1, R15266 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s2 [71, 65535] { R15310 += 1, R15266 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s1 [0, 69] { R15310 += 1, R15266 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s1 [0, 65535] { R15310 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [70, 70] { R15310 += 1, R15266 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s6 [70, 70] { R15310 += 1, R15266 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s1 [71, 65535] { R15310 += 1, R15266 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s1 [0, 69] { R15310 += 1, R15266 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [0, 69] { R15310 += 1, R15266 += 1, R13513 += 1, R13514 += 1 };
  s2 -> s4 [70, 70] { R15310 += 1, R15266 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s5 [70, 70] { R15310 += 1, R15266 += 1, R13513 += 1, R13514 += 1 };
  s2 -> s6 [70, 70] { R15310 += 1, R15266 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s7 [70, 70] { R15310 += 1, R15266 += 1, R13513 += 1, R13514 += 1 };
  s2 -> s1 [71, 65535] { R15310 += 1, R15266 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [71, 65535] { R15310 += 1, R15266 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s1 [0, 69] { R15310 += 1, R15266 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s2 [0, 69] { R15310 += 1, R15266 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s3 [0, 65535] { R15310 += 1, R15265 += 1, R15266 += 1 };
  s3 -> s4 [70, 70] { R15310 += 1, R15266 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s5 [70, 70] { R15310 += 1, R15266 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s6 [70, 70] { R15310 += 1, R15266 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s7 [70, 70] { R15310 += 1, R15266 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s1 [71, 65535] { R15310 += 1, R15266 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s2 [71, 65535] { R15310 += 1, R15266 += 1, R13513 += 1, R13514 += 1 };
  s4 -> s9 [0, 65535] { R15310 += 1 };
  s4 -> s4 [0, 65535] { R15310 += 1, R15266 += 1, R13514 += 1, R13515 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s4 [0, 65535] { R15310 += 1, R15266 += 1, R13514 += 1, R13515 += 1 };
  s5 -> s5 [0, 65535] { R15310 += 1, R15266 += 1, R13513 += 1, R13514 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R15310 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R15310 += 1 };
  s9 -> s8 [0, 65535];
  accepting s4, s8, s9, s6, s1;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R15312 += 1, R15268 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s0 [0, 65535] { R15311 += 1, R15312 += 1 };
  s0 -> s2 [0, 65535] { R15312 += 1, R15267 += 1, R15268 += 1 };
  s0 -> s3 [70, 70] { R15312 += 1, R15268 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s4 [70, 70] { R15312 += 1, R15268 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s1 [71, 65535] { R15312 += 1, R15268 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [0, 69] { R15312 += 1, R15268 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [0, 65535] { R15312 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R15312 += 1, R15268 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s4 [70, 70] { R15312 += 1, R15268 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [71, 65535] { R15312 += 1, R15268 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s1 [0, 69] { R15312 += 1, R15268 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s2 [0, 65535] { R15312 += 1, R15267 += 1, R15268 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R15312 += 1, R15268 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s4 [70, 70] { R15312 += 1, R15268 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s1 [71, 65535] { R15312 += 1, R15268 += 1, R13519 += 1, R13520 += 1 };
  s3 -> s3 [0, 65535] { R15312 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R15312 += 1 };
  s4 -> s4 [0, 65535] { R15312 += 1, R15268 += 1, R13519 += 1, R13520 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R15312 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R15314 += 1, R15270 += 1, R15199 += 1, R15200 += 1 };
  s0 -> s2 [0, 65535] { R15314 += 1, R15269 += 1, R15270 += 1 };
  s0 -> s0 [0, 65535] { R15313 += 1, R15314 += 1 };
  s0 -> s3 [70, 70] { R15314 += 1, R15270 += 1, R15199 += 1, R15200 += 1 };
  s0 -> s4 [70, 70] { R15314 += 1, R15270 += 1, R15199 += 1, R15200 += 1 };
  s0 -> s1 [71, 65535] { R15314 += 1, R15270 += 1, R15199 += 1, R15200 += 1 };
  s1 -> s1 [0, 69] { R15314 += 1, R15270 += 1, R15199 += 1, R15200 += 1 };
  s1 -> s1 [0, 65535] { R15314 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R15314 += 1, R15270 += 1, R15199 += 1, R15200 += 1 };
  s1 -> s4 [70, 70] { R15314 += 1, R15270 += 1, R15199 += 1, R15200 += 1 };
  s1 -> s1 [71, 65535] { R15314 += 1, R15270 += 1, R15199 += 1, R15200 += 1 };
  s2 -> s1 [0, 69] { R15314 += 1, R15270 += 1, R15199 += 1, R15200 += 1 };
  s2 -> s2 [0, 65535] { R15314 += 1, R15269 += 1, R15270 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R15314 += 1, R15270 += 1, R15199 += 1, R15200 += 1 };
  s2 -> s4 [70, 70] { R15314 += 1, R15270 += 1, R15199 += 1, R15200 += 1 };
  s2 -> s1 [71, 65535] { R15314 += 1, R15270 += 1, R15199 += 1, R15200 += 1 };
  s3 -> s3 [0, 65535] { R15314 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R15314 += 1 };
  s4 -> s4 [0, 65535] { R15314 += 1, R15270 += 1, R15199 += 1, R15200 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15314 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R15316 += 1, R15272 += 1, R15208 += 1, R15210 += 1, R15211 += 1 };
  s0 -> s2 [0, 69] { R15316 += 1, R15272 += 1, R15208 += 1, R15209 += 1, R15210 += 1 };
  s0 -> s3 [0, 69] { R15316 += 1, R15272 += 1, R15207 += 1, R15208 += 1 };
  s0 -> s4 [0, 65535] { R15316 += 1, R15271 += 1, R15272 += 1 };
  s0 -> s0 [0, 65535] { R15315 += 1, R15316 += 1 };
  s0 -> s5 [70, 70] { R15316 += 1, R15272 += 1, R15208 += 1, R15209 += 1, R15210 += 1 };
  s0 -> s6 [70, 70] { R15316 += 1, R15272 += 1, R15208 += 1, R15209 += 1, R15210 += 1 };
  s0 -> s7 [70, 70] { R15316 += 1, R15272 += 1, R15207 += 1, R15208 += 1 };
  s0 -> s8 [70, 70] { R15316 += 1, R15272 += 1, R15208 += 1, R15210 += 1, R15211 += 1 };
  s0 -> s9 [70, 70] { R15316 += 1, R15272 += 1, R15207 += 1, R15208 += 1 };
  s0 -> s10 [70, 70] { R15316 += 1, R15272 += 1, R15208 += 1, R15210 += 1, R15211 += 1 };
  s0 -> s1 [71, 65535] { R15316 += 1, R15272 += 1, R15208 += 1, R15210 += 1, R15211 += 1 };
  s0 -> s2 [71, 65535] { R15316 += 1, R15272 += 1, R15208 += 1, R15209 += 1, R15210 += 1 };
  s0 -> s3 [71, 65535] { R15316 += 1, R15272 += 1, R15207 += 1, R15208 += 1 };
  s1 -> s14 [0, 69] { R15316 += 1, R15272 += 1, R15208 += 1 };
  s1 -> s1 [0, 69] { R15316 += 1, R15272 += 1, R15208 += 1, R15210 += 1, R15211 += 1 };
  s1 -> s8 [70, 70] { R15316 += 1, R15272 += 1, R15208 += 1, R15210 += 1, R15211 += 1 };
  s1 -> s11 [70, 70] { R15316 += 1, R15272 += 1, R15208 += 1 };
  s1 -> s15 [70, 70] { R15316 += 1, R15272 += 1, R15208 += 1 };
  s1 -> s10 [70, 70] { R15316 += 1, R15272 += 1, R15208 += 1, R15210 += 1, R15211 += 1 };
  s1 -> s14 [71, 65535] { R15316 += 1, R15272 += 1, R15208 += 1 };
  s1 -> s1 [71, 65535] { R15316 += 1, R15272 += 1, R15208 += 1, R15210 += 1, R15211 += 1 };
  s2 -> s1 [0, 69] { R15316 += 1, R15272 += 1, R15208 += 1, R15210 += 1, R15211 += 1 };
  s2 -> s2 [0, 69] { R15316 += 1, R15272 += 1, R15208 += 1, R15209 += 1, R15210 += 1 };
  s2 -> s5 [70, 70] { R15316 += 1, R15272 += 1, R15208 += 1, R15209 += 1, R15210 += 1 };
  s2 -> s6 [70, 70] { R15316 += 1, R15272 += 1, R15208 += 1, R15209 += 1, R15210 += 1 };
  s2 -> s8 [70, 70] { R15316 += 1, R15272 += 1, R15208 += 1, R15210 += 1, R15211 += 1 };
  s2 -> s10 [70, 70] { R15316 += 1, R15272 += 1, R15208 += 1, R15210 += 1, R15211 += 1 };
  s2 -> s1 [71, 65535] { R15316 += 1, R15272 += 1, R15208 += 1, R15210 += 1, R15211 += 1 };
  s2 -> s2 [71, 65535] { R15316 += 1, R15272 += 1, R15208 += 1, R15209 += 1, R15210 += 1 };
  s3 -> s1 [0, 69] { R15316 += 1, R15272 += 1, R15208 += 1, R15210 += 1, R15211 += 1 };
  s3 -> s2 [0, 69] { R15316 += 1, R15272 += 1, R15208 += 1, R15209 += 1, R15210 += 1 };
  s3 -> s3 [0, 69] { R15316 += 1, R15272 += 1, R15207 += 1, R15208 += 1 };
  s3 -> s5 [70, 70] { R15316 += 1, R15272 += 1, R15208 += 1, R15209 += 1, R15210 += 1 };
  s3 -> s6 [70, 70] { R15316 += 1, R15272 += 1, R15208 += 1, R15209 += 1, R15210 += 1 };
  s3 -> s7 [70, 70] { R15316 += 1, R15272 += 1, R15207 += 1, R15208 += 1 };
  s3 -> s8 [70, 70] { R15316 += 1, R15272 += 1, R15208 += 1, R15210 += 1, R15211 += 1 };
  s3 -> s9 [70, 70] { R15316 += 1, R15272 += 1, R15207 += 1, R15208 += 1 };
  s3 -> s10 [70, 70] { R15316 += 1, R15272 += 1, R15208 += 1, R15210 += 1, R15211 += 1 };
  s3 -> s1 [71, 65535] { R15316 += 1, R15272 += 1, R15208 += 1, R15210 += 1, R15211 += 1 };
  s3 -> s2 [71, 65535] { R15316 += 1, R15272 += 1, R15208 += 1, R15209 += 1, R15210 += 1 };
  s3 -> s3 [71, 65535] { R15316 += 1, R15272 += 1, R15207 += 1, R15208 += 1 };
  s4 -> s1 [0, 69] { R15316 += 1, R15272 += 1, R15208 += 1, R15210 += 1, R15211 += 1 };
  s4 -> s2 [0, 69] { R15316 += 1, R15272 += 1, R15208 += 1, R15209 += 1, R15210 += 1 };
  s4 -> s3 [0, 69] { R15316 += 1, R15272 += 1, R15207 += 1, R15208 += 1 };
  s4 -> s4 [0, 65535] { R15316 += 1, R15271 += 1, R15272 += 1 };
  s4 -> s5 [70, 70] { R15316 += 1, R15272 += 1, R15208 += 1, R15209 += 1, R15210 += 1 };
  s4 -> s6 [70, 70] { R15316 += 1, R15272 += 1, R15208 += 1, R15209 += 1, R15210 += 1 };
  s4 -> s7 [70, 70] { R15316 += 1, R15272 += 1, R15207 += 1, R15208 += 1 };
  s4 -> s8 [70, 70] { R15316 += 1, R15272 += 1, R15208 += 1, R15210 += 1, R15211 += 1 };
  s4 -> s9 [70, 70] { R15316 += 1, R15272 += 1, R15207 += 1, R15208 += 1 };
  s4 -> s10 [70, 70] { R15316 += 1, R15272 += 1, R15208 += 1, R15210 += 1, R15211 += 1 };
  s4 -> s1 [71, 65535] { R15316 += 1, R15272 += 1, R15208 += 1, R15210 += 1, R15211 += 1 };
  s4 -> s2 [71, 65535] { R15316 += 1, R15272 += 1, R15208 += 1, R15209 += 1, R15210 += 1 };
  s4 -> s3 [71, 65535] { R15316 += 1, R15272 += 1, R15207 += 1, R15208 += 1 };
  s5 -> s5 [0, 65535] { R15316 += 1, R15272 += 1, R15208 += 1, R15209 += 1, R15210 += 1 };
  s5 -> s10 [0, 65535] { R15316 += 1, R15272 += 1, R15208 += 1, R15210 += 1, R15211 += 1 };
  s7 -> s5 [0, 65535] { R15316 += 1, R15272 += 1, R15208 += 1, R15209 += 1, R15210 += 1 };
  s7 -> s7 [0, 65535] { R15316 += 1, R15272 += 1, R15207 += 1, R15208 += 1 };
  s7 -> s10 [0, 65535] { R15316 += 1, R15272 += 1, R15208 += 1, R15210 += 1, R15211 += 1 };
  s10 -> s11 [0, 65535] { R15316 += 1, R15272 += 1, R15208 += 1 };
  s10 -> s10 [0, 65535] { R15316 += 1, R15272 += 1, R15208 += 1, R15210 += 1, R15211 += 1 };
  s11 -> s12 [0, 65535] { R15316 += 1 };
  s11 -> s11 [0, 65535] { R15316 += 1, R15272 += 1, R15208 += 1 };
  s11 -> s13 [0, 65535];
  s12 -> s12 [0, 65535] { R15316 += 1 };
  s12 -> s13 [0, 65535];
  s13 -> s13 [0, 65535];
  s14 -> s14 [0, 69] { R15316 += 1, R15272 += 1, R15208 += 1 };
  s14 -> s14 [0, 65535] { R15316 += 1 };
  s14 -> s13 [0, 65535];
  s14 -> s11 [70, 70] { R15316 += 1, R15272 += 1, R15208 += 1 };
  s14 -> s15 [70, 70] { R15316 += 1, R15272 += 1, R15208 += 1 };
  s14 -> s14 [71, 65535] { R15316 += 1, R15272 += 1, R15208 += 1 };
  s15 -> s13 [0, 65535];
  s15 -> s15 [0, 65535] { R15316 += 1 };
  accepting s12, s13, s14, s15, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R15234 && R3 = R15316 && R23 - R15316 = -1 && R24 = R15316 && R25 - R15316 = -1 && R26 = R15316 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R15204 + -1*R15200 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R15204 + -1*R15200 - R66 = 0 && R55 + R13518 + R13515 + -1*R15206 + -1*R15202 - R68 = 0 && R65 + R15203 + R15199 = 0 && R67 + R15205 + R15201 = 0 && R15233 = 0 && R15257 = 0 && R15258 = 0 && R15263 = 0 && R15264 = 0 && R15265 = 0 && R15266 = 0 && R15271 = 0 && R15272 = 0 && R15273 = 0 && R15274 = R15316 && R15275 = 0 && R15276 = R15316 && R15277 = 0 && R15278 = R15316 && R15279 = 0 && R15280 = R15316 && R15281 = 0 && R15282 = R15316 && R15283 = 0 && R15284 = R15316 && R15285 = 0 && R15286 = R15316 && R15287 = 0 && R15288 = R15316 && R15289 = 0 && R15290 = R15316 && R15291 = 0 && R15292 = R15316 && R15293 = 0 && R15294 = R15316 && R15295 = 0 && R15296 = R15316 && R15297 = 0 && R15298 = R15316 && R15299 = 0 && R15300 = R15316 && R15301 = 0 && R15302 = R15316 && R15303 = 0 && R15304 = R15316 && R15305 = 0 && R15306 = R15316 && R15307 = 0 && R15308 = R15316 && R15309 = 0 && R15310 = R15316 && R15311 = 0 && R15312 = R15316 && R15313 = 0 && R15314 = R15316 && R15315 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R13524 + R13521 < 1 && -1*R15204 + -1*R15200 - R66 < 1 && -1*R15206 + -1*R15202 - R68 < 1 && -1 < R15234 && 0 < R15316 && (R53 + R13516 + R13513 != 0 || R54 + R13517 + R13514 + -1*R15204 + -1*R15200 - R66 = 0 || R66 + R15204 + R15200 < 1) && (R59 + R13522 + R13519 != 0 || R60 + R13523 + R13520 + -1*R15204 + -1*R15200 - R66 = 0 || R66 + R15204 + R15200 < 1) && (R66 + R15204 + R15200 != 0 || ((R53 + R13516 + R13513 != 0 || R54 + R13517 + R13514 = 0 || R68 + R15206 + R15202 < 1) && (R53 + R13516 + R13513 = 0 || R68 + R15206 + R15202 < 1))) && (R66 + R15204 + R15200 != 0 || ((R59 + R13522 + R13519 != 0 || R60 + R13523 + R13520 = 0 || R68 + R15206 + R15202 < 1) && (R59 + R13522 + R13519 = 0 || R68 + R15206 + R15202 < 1))) && (R66 + R15204 + R15200 != 0 || ((R73 + R15212 + R15207 != 0 || R74 + R15213 + R15208 = 0 || R68 + R15206 + R15202 < 1) && (R73 + R15212 + R15207 = 0 || R68 + R15206 + R15202 < 1))) && (R68 + R15206 + R15202 != 0 || R77 + R15216 + R15211 = 0 || (R75 + R15214 + R15209 = 0 && R76 + R15215 + R15210 = 0)) && (R73 + R15212 + R15207 != 0 || R66 + R15204 + R15200 + -1*R15213 + -1*R15208 - R74 = 0 || R66 + R15204 + R15200 < 1) && (R75 + R15214 + R15209 != 0 || R68 + R15206 + R15202 + -1*R15215 + -1*R15210 - R76 = 0 || R68 + R15206 + R15202 < 1) && (R15217 != 0 || R15218 = R15234 || (R20 = 0 && R15234 = 0)) && (R15219 != 0 || R15220 = R15234 || (R20 = 0 && R15234 = 0)) && (R15221 != 0 || R15222 = R15234 || (R20 = 0 && R15234 = 0)) && (R15223 != 0 || R15224 = R15234 || (R20 = 0 && R15234 = 0)) && (R15225 != 0 || R15226 = R15234 || (R20 = 0 && R15234 = 0)) && (R15227 != 0 || R15228 = R15234 || (R20 = 0 && R15234 = 0)) && (R15229 != 0 || R15230 = R15234 || (R20 = 0 && R15234 = 0)) && (R15231 != 0 || R15232 = R15234 || (R20 = 0 && R15234 = 0)) && (R15235 != 0 || R15234 = R15236 || (R20 = 0 && R15234 = 0)) && (R21 = 0 || (R15255 = 0 && R15256 = 0)) && (R21 = 0 || (R15259 = 0 && R15260 = 0)) && (R21 = 0 || (R15261 = 0 && R15262 = 0)) && (R21 = 0 || (R15267 = 0 && R15268 = 0)) && (R21 = 0 || (R15269 = 0 && R15270 = 0)) && (R22 = 0 || (R15237 = 0 && R15238 = 0)) && (R22 = 0 || (R15239 = 0 && R15240 = 0)) && (R22 = 0 || (R15241 = 0 && R15242 = 0)) && (R22 = 0 || (R15243 = 0 && R15244 = 0)) && (R22 = 0 || (R15245 = 0 && R15246 = 0)) && (R22 = 0 || (R15247 = 0 && R15248 = 0)) && (R22 = 0 || (R15249 = 0 && R15250 = 0)) && (R22 = 0 || (R15251 = 0 && R15252 = 0)) && (R22 = 0 || (R15253 = 0 && R15254 = 0)) && (R53 + R13516 + R13513 = 0 || R66 + R15204 + R15200 < 1) && (R59 + R13522 + R13519 = 0 || R66 + R15204 + R15200 < 1) && (R73 + R15212 + R15207 = 0 || R66 + R15204 + R15200 < 1) && (R75 + R15214 + R15209 = 0 || R68 + R15206 + R15202 < 1) && (R15217 = 0 || (R20 = 0 && R15234 = 0)) && (R15219 = 0 || (R20 = 0 && R15234 = 0)) && (R15221 = 0 || (R20 = 0 && R15234 = 0)) && (R15223 = 0 || (R20 = 0 && R15234 = 0)) && (R15225 = 0 || (R20 = 0 && R15234 = 0)) && (R15227 = 0 || (R20 = 0 && R15234 = 0)) && (R15229 = 0 || (R20 = 0 && R15234 = 0)) && (R15231 = 0 || (R20 = 0 && R15234 = 0)) && (R15235 = 0 || (R20 = 0 && R15234 = 0));
// End of Parikh automata intersection problem
