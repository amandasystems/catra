// Parikh automata intersection problem, generated by OSTRICH+
counter int R12, R13513, R13514, R13515, R13516, R13517, R13518, R13519, R13520, R13521, R13522, R13523, R13524, R14641, R14642, R14643, R14644, R14645, R14646, R14647, R14648, R14759, R14760, R14761, R14762, R14763, R14764, R14765, R14766, R14767, R14768, R14769, R14770, R14771, R14772, R14773, R14774, R14775, R14776, R14777, R14778, R14779, R14780, R14781, R14782, R14783, R14784, R14785, R14786, R14787, R14788, R14789, R14790, R14791, R14792, R14793, R14794, R14795, R14796, R14797, R14798, R14799, R14800, R14801, R14802, R14803, R14804, R14805, R14806, R14807, R14808, R14809, R14810, R14811, R14812, R14813, R14814, R14815, R14816, R14817, R14818, R14819, R14820, R14821, R14822, R14823, R14824, R14825, R14826, R14827, R14828, R14829, R14830, R14831, R14832, R14833, R14834, R14835, R14836, R14837, R14838, R14839, R14840, R14841, R14842, R14843, R14844, R14845, R14846, R14847, R14848, R14849, R14850, R14851, R14852, R14853, R14854, R14855, R14856, R14857, R14858, R14859, R14860, R14861, R14862, R14863, R14864, R14865, R14866, R14867, R14868, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R4, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R14789 += 1, R14790 += 1 };
  s0 -> s1 [0, 65535] { R14790 += 1, R22 += 1 };
  s1 -> s1 [0, 65535] { R14790 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R14792 += 1 };
  s0 -> s0 [0, 65535] { R14791 += 1, R14792 += 1 };
  s0 -> s2 [70, 70] { R14792 += 1 };
  s0 -> s3 [70, 70] { R14792 += 1 };
  s0 -> s1 [76, 65535] { R14792 += 1 };
  s1 -> s1 [0, 69] { R14792 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14792 += 1 };
  s1 -> s3 [70, 70] { R14792 += 1 };
  s1 -> s1 [76, 65535] { R14792 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R14792 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R14792 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R14794 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R14793 += 1, R14794 += 1 };
  s0 -> s2 [70, 70] { R14794 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R14794 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R14794 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R14794 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14794 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R14794 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R14794 += 1, R45 += 1 };
  s2 -> s2 [0, 65535] { R14794 += 1, R45 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R14796 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R14795 += 1, R14796 += 1 };
  s0 -> s2 [70, 70] { R14796 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R14796 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R14796 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R14796 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14796 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R14796 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R14796 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R14796 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R14798 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R14797 += 1, R14798 += 1 };
  s0 -> s2 [70, 70] { R14798 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R14798 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R14798 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R14798 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14798 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R14798 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R14798 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535] { R14798 += 1, R49 += 1, R50 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R14800 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R14799 += 1, R14800 += 1 };
  s0 -> s2 [70, 70] { R14800 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R14800 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R14800 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R14800 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14800 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R14800 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R14800 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R14800 += 1, R53 += 1, R54 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R14802 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R14801 += 1, R14802 += 1 };
  s0 -> s2 [70, 70] { R14802 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R14802 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R14802 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R14802 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14802 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R14802 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R14802 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535] { R14802 += 1, R59 += 1, R60 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R14804 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R14803 += 1, R14804 += 1 };
  s0 -> s2 [70, 70] { R14804 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R14804 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R14804 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R14804 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14804 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R14804 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R14804 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R14804 += 1, R65 += 1, R66 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R14806 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R14805 += 1, R14806 += 1 };
  s0 -> s2 [70, 70] { R14806 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R14806 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R14806 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R14806 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14806 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R14806 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R14806 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R14806 += 1, R73 += 1, R74 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R14826 += 1 };
  s0 -> s0 [0, 65535] { R14825 += 1, R14826 += 1 };
  s0 -> s2 [70, 70] { R14826 += 1 };
  s0 -> s1 [71, 65535] { R14826 += 1 };
  s1 -> s1 [0, 69] { R14826 += 1 };
  s1 -> s2 [70, 70] { R14826 += 1 };
  s1 -> s1 [71, 65535] { R14826 += 1 };
  s2 -> s2 [0, 65535] { R14826 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R14827 += 1, R14828 += 1 };
  s0 -> s1 [0, 65535] { R14828 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R14828 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R14830 += 1 };
  s0 -> s2 [0, 65535] { R14830 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R14829 += 1, R14830 += 1 };
  s0 -> s3 [70, 70] { R14830 += 1 };
  s0 -> s1 [71, 65535] { R14830 += 1 };
  s1 -> s1 [0, 69] { R14830 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R14830 += 1 };
  s1 -> s1 [71, 65535] { R14830 += 1 };
  s2 -> s1 [0, 69] { R14830 += 1 };
  s2 -> s2 [0, 65535] { R14830 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R14830 += 1 };
  s2 -> s1 [71, 65535] { R14830 += 1 };
  s3 -> s3 [0, 65535] { R14830 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R14832 += 1, R14770 += 1 };
  s0 -> s2 [0, 65535] { R14832 += 1, R14769 += 1, R14770 += 1 };
  s0 -> s0 [0, 65535] { R14831 += 1, R14832 += 1 };
  s0 -> s1 [71, 65535] { R14832 += 1, R14770 += 1 };
  s1 -> s1 [0, 69] { R14832 += 1, R14770 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R14832 += 1 };
  s1 -> s1 [71, 65535] { R14832 += 1, R14770 += 1 };
  s2 -> s1 [0, 69] { R14832 += 1, R14770 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R14832 += 1, R14769 += 1, R14770 += 1 };
  s2 -> s1 [71, 65535] { R14832 += 1, R14770 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R14834 += 1, R14772 += 1, R20 += 1 };
  s0 -> s2 [0, 65535] { R14834 += 1, R14771 += 1, R14772 += 1 };
  s0 -> s0 [0, 65535] { R14833 += 1, R14834 += 1 };
  s1 -> s1 [0, 65535] { R14834 += 1, R14772 += 1, R20 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R14834 += 1 };
  s2 -> s1 [0, 65535] { R14834 += 1, R14772 += 1, R20 += 1 };
  s2 -> s2 [0, 65535] { R14834 += 1, R14771 += 1, R14772 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R14834 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R14836 += 1, R14774 += 1 };
  s0 -> s2 [0, 65535] { R14836 += 1, R14773 += 1, R14774 += 1 };
  s0 -> s0 [0, 65535] { R14835 += 1, R14836 += 1 };
  s0 -> s1 [75, 65535] { R14836 += 1, R14774 += 1 };
  s1 -> s1 [0, 70] { R14836 += 1, R14774 += 1 };
  s1 -> s1 [0, 65535] { R14836 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R14836 += 1, R14774 += 1 };
  s2 -> s1 [0, 70] { R14836 += 1, R14774 += 1 };
  s2 -> s2 [0, 65535] { R14836 += 1, R14773 += 1, R14774 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R14836 += 1, R14774 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R14837 += 1, R14838 += 1 };
  s0 -> s1 [0, 65535] { R14838 += 1, R14775 += 1, R14776 += 1 };
  s0 -> s2 [0, 65535] { R14838 += 1, R14776 += 1, R84 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R14838 += 1, R14775 += 1, R14776 += 1 };
  s1 -> s2 [0, 65535] { R14838 += 1, R14776 += 1, R84 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R14838 += 1, R14776 += 1, R84 += 1 };
  s2 -> s4 [0, 65535] { R14838 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R14838 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R14840 += 1, R14778 += 1 };
  s0 -> s2 [0, 65535] { R14840 += 1, R14777 += 1, R14778 += 1 };
  s0 -> s3 [0, 65535] { R14840 += 1, R14778 += 1, R86 += 1 };
  s0 -> s0 [0, 65535] { R14839 += 1, R14840 += 1 };
  s0 -> s1 [76, 65535] { R14840 += 1, R14778 += 1 };
  s1 -> s1 [0, 74] { R14840 += 1, R14778 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R14840 += 1 };
  s1 -> s1 [76, 65535] { R14840 += 1, R14778 += 1 };
  s2 -> s1 [0, 74] { R14840 += 1, R14778 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R14840 += 1, R14777 += 1, R14778 += 1 };
  s2 -> s3 [0, 65535] { R14840 += 1, R14778 += 1, R86 += 1 };
  s2 -> s1 [76, 65535] { R14840 += 1, R14778 += 1 };
  s3 -> s1 [0, 74] { R14840 += 1, R14778 += 1 };
  s3 -> s4 [0, 65535] { R14840 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R14840 += 1, R14778 += 1, R86 += 1 };
  s3 -> s1 [76, 65535] { R14840 += 1, R14778 += 1 };
  s4 -> s4 [0, 65535] { R14840 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s0 [0, 65535] { R14841 += 1, R14842 += 1 };
  s0 -> s1 [0, 65535] { R14842 += 1, R14780 += 1, R90 += 1 };
  s0 -> s2 [0, 65535] { R14842 += 1, R14780 += 1 };
  s0 -> s3 [0, 65535] { R14842 += 1, R14779 += 1, R14780 += 1 };
  s1 -> s1 [0, 65535] { R14842 += 1, R14780 += 1, R90 += 1 };
  s1 -> s2 [0, 65535] { R14842 += 1, R14780 += 1 };
  s1 -> s5 [0, 65535] { R14842 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R14842 += 1, R14780 += 1 };
  s2 -> s5 [0, 65535] { R14842 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R14842 += 1, R14780 += 1, R90 += 1 };
  s3 -> s2 [0, 65535] { R14842 += 1, R14780 += 1 };
  s3 -> s3 [0, 65535] { R14842 += 1, R14779 += 1, R14780 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R14842 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R14844 += 1, R14782 += 1, R13517 += 1, R13518 += 1 };
  s0 -> s2 [0, 65535] { R14844 += 1, R14782 += 1 };
  s0 -> s0 [0, 65535] { R14843 += 1, R14844 += 1 };
  s0 -> s3 [0, 65535] { R14844 += 1, R14781 += 1, R14782 += 1 };
  s1 -> s5 [0, 65535] { R14844 += 1 };
  s1 -> s1 [0, 65535] { R14844 += 1, R14782 += 1, R13517 += 1, R13518 += 1 };
  s1 -> s2 [0, 65535] { R14844 += 1, R14782 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R14844 += 1 };
  s2 -> s2 [0, 65535] { R14844 += 1, R14782 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R14844 += 1, R14782 += 1, R13517 += 1, R13518 += 1 };
  s3 -> s2 [0, 65535] { R14844 += 1, R14782 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R14844 += 1, R14781 += 1, R14782 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R14844 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R14846 += 1, R14784 += 1, R13523 += 1 };
  s0 -> s0 [0, 65535] { R14845 += 1, R14846 += 1 };
  s0 -> s2 [0, 65535] { R14846 += 1, R14784 += 1, R13522 += 1, R13523 += 1 };
  s0 -> s3 [0, 65535] { R14846 += 1, R14784 += 1, R13523 += 1, R13524 += 1 };
  s0 -> s4 [0, 65535] { R14846 += 1, R14783 += 1, R14784 += 1 };
  s0 -> s1 [76, 65535] { R14846 += 1, R14784 += 1, R13523 += 1 };
  s1 -> s1 [0, 74] { R14846 += 1, R14784 += 1, R13523 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R14846 += 1, R14784 += 1 };
  s1 -> s6 [0, 65535] { R14846 += 1 };
  s1 -> s1 [76, 65535] { R14846 += 1, R14784 += 1, R13523 += 1 };
  s2 -> s1 [0, 74] { R14846 += 1, R14784 += 1, R13523 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R14846 += 1 };
  s2 -> s2 [0, 65535] { R14846 += 1, R14784 += 1, R13522 += 1, R13523 += 1 };
  s2 -> s3 [0, 65535] { R14846 += 1, R14784 += 1, R13523 += 1, R13524 += 1 };
  s2 -> s1 [76, 65535] { R14846 += 1, R14784 += 1, R13523 += 1 };
  s3 -> s1 [0, 74] { R14846 += 1, R14784 += 1, R13523 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R14846 += 1 };
  s3 -> s3 [0, 65535] { R14846 += 1, R14784 += 1, R13523 += 1, R13524 += 1 };
  s3 -> s7 [0, 65535] { R14846 += 1, R14784 += 1 };
  s3 -> s1 [76, 65535] { R14846 += 1, R14784 += 1, R13523 += 1 };
  s4 -> s1 [0, 74] { R14846 += 1, R14784 += 1, R13523 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R14846 += 1, R14784 += 1, R13522 += 1, R13523 += 1 };
  s4 -> s3 [0, 65535] { R14846 += 1, R14784 += 1, R13523 += 1, R13524 += 1 };
  s4 -> s4 [0, 65535] { R14846 += 1, R14783 += 1, R14784 += 1 };
  s4 -> s1 [76, 65535] { R14846 += 1, R14784 += 1, R13523 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R14846 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R14846 += 1 };
  s7 -> s7 [0, 65535] { R14846 += 1, R14784 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R14848 += 1, R14786 += 1 };
  s0 -> s2 [0, 65535] { R14848 += 1, R14785 += 1, R14786 += 1 };
  s0 -> s0 [0, 65535] { R14847 += 1, R14848 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R14848 += 1, R14786 += 1 };
  s1 -> s4 [0, 65535] { R14848 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R14848 += 1, R14786 += 1 };
  s2 -> s2 [0, 65535] { R14848 += 1, R14785 += 1, R14786 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R14848 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R14850 += 1, R14787 += 1, R14788 += 1 };
  s0 -> s0 [0, 65535] { R14849 += 1, R14850 += 1 };
  s0 -> s2 [0, 65535] { R14850 += 1, R14788 += 1 };
  s1 -> s1 [0, 65535] { R14850 += 1, R14787 += 1, R14788 += 1 };
  s1 -> s2 [0, 65535] { R14850 += 1, R14788 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R14850 += 1, R14788 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R14850 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R14850 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R14851 += 1, R14852 += 1 };
  s0 -> s1 [0, 65535] { R14852 += 1, R14808 += 1, R21 += 1 };
  s0 -> s2 [0, 65535] { R14852 += 1, R14807 += 1, R14808 += 1 };
  s1 -> s4 [0, 65535] { R14852 += 1 };
  s1 -> s1 [0, 65535] { R14852 += 1, R14808 += 1, R21 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R14852 += 1, R14808 += 1, R21 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R14852 += 1, R14807 += 1, R14808 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R14852 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R14854 += 1, R14810 += 1 };
  s0 -> s0 [0, 65535] { R14853 += 1, R14854 += 1 };
  s0 -> s2 [0, 65535] { R14854 += 1, R14809 += 1, R14810 += 1 };
  s0 -> s3 [70, 70] { R14854 += 1, R14810 += 1 };
  s0 -> s4 [70, 70] { R14854 += 1, R14810 += 1 };
  s0 -> s5 [75, 75] { R14854 += 1, R14810 += 1 };
  s0 -> s1 [76, 65535] { R14854 += 1, R14810 += 1 };
  s1 -> s1 [0, 69] { R14854 += 1, R14810 += 1 };
  s1 -> s3 [70, 70] { R14854 += 1, R14810 += 1 };
  s1 -> s4 [70, 70] { R14854 += 1, R14810 += 1 };
  s1 -> s5 [75, 75] { R14854 += 1, R14810 += 1 };
  s1 -> s1 [76, 65535] { R14854 += 1, R14810 += 1 };
  s2 -> s1 [0, 69] { R14854 += 1, R14810 += 1 };
  s2 -> s2 [0, 65535] { R14854 += 1, R14809 += 1, R14810 += 1 };
  s2 -> s3 [70, 70] { R14854 += 1, R14810 += 1 };
  s2 -> s4 [70, 70] { R14854 += 1, R14810 += 1 };
  s2 -> s5 [75, 75] { R14854 += 1, R14810 += 1 };
  s2 -> s1 [76, 65535] { R14854 += 1, R14810 += 1 };
  s4 -> s4 [0, 70] { R14854 += 1, R14810 += 1 };
  s4 -> s7 [75, 75] { R14854 += 1, R14810 += 1 };
  s4 -> s4 [76, 65535] { R14854 += 1, R14810 += 1 };
  s5 -> s5 [0, 69] { R14854 += 1, R14810 += 1 };
  s5 -> s5 [0, 65535] { R14854 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R14854 += 1, R14810 += 1 };
  s5 -> s8 [70, 70] { R14854 += 1, R14810 += 1 };
  s5 -> s5 [75, 65535] { R14854 += 1, R14810 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R14854 += 1, R14810 += 1 };
  s7 -> s7 [0, 65535] { R14854 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R14854 += 1, R14810 += 1 };
  s8 -> s8 [0, 65535] { R14854 += 1 };
  s8 -> s6 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R14856 += 1, R14812 += 1, R83 += 1 };
  s0 -> s0 [0, 65535] { R14855 += 1, R14856 += 1 };
  s0 -> s2 [0, 65535] { R14856 += 1, R14811 += 1, R14812 += 1 };
  s0 -> s3 [70, 70] { R14856 += 1, R14812 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R14856 += 1, R14812 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R14856 += 1, R14812 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R14856 += 1, R14812 += 1, R83 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R14856 += 1 };
  s1 -> s3 [70, 70] { R14856 += 1, R14812 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R14856 += 1, R14812 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R14856 += 1, R14812 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R14856 += 1, R14812 += 1, R83 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R14856 += 1, R14811 += 1, R14812 += 1 };
  s2 -> s3 [70, 70] { R14856 += 1, R14812 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R14856 += 1, R14812 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R14856 += 1, R14812 += 1, R83 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R14856 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R14856 += 1 };
  s4 -> s4 [0, 65535] { R14856 += 1, R14812 += 1, R83 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R14856 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R14858 += 1, R14814 += 1, R85 += 1 };
  s0 -> s0 [0, 65535] { R14857 += 1, R14858 += 1 };
  s0 -> s2 [0, 65535] { R14858 += 1, R14813 += 1, R14814 += 1 };
  s0 -> s3 [70, 70] { R14858 += 1, R14814 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R14858 += 1, R14814 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R14858 += 1, R14814 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R14858 += 1, R14814 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R14858 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R14858 += 1, R14814 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R14858 += 1, R14814 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R14858 += 1, R14814 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R14858 += 1, R14814 += 1, R85 += 1 };
  s2 -> s2 [0, 65535] { R14858 += 1, R14813 += 1, R14814 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R14858 += 1, R14814 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R14858 += 1, R14814 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R14858 += 1, R14814 += 1, R85 += 1 };
  s3 -> s3 [0, 65535] { R14858 += 1, R14814 += 1, R85 += 1 };
  s3 -> s6 [0, 65535] { R14858 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R14858 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R14858 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R14860 += 1, R14816 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R14860 += 1, R14816 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R14859 += 1, R14860 += 1 };
  s0 -> s3 [0, 65535] { R14860 += 1, R14815 += 1, R14816 += 1 };
  s0 -> s4 [70, 70] { R14860 += 1, R14816 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R14860 += 1, R14816 += 1, R87 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R14860 += 1, R14816 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R14860 += 1, R14816 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 74] { R14860 += 1, R14816 += 1, R88 += 1 };
  s0 -> s2 [71, 65535] { R14860 += 1, R14816 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R14860 += 1, R14816 += 1, R88 += 1 };
  s0 -> s1 [76, 65535] { R14860 += 1, R14816 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R14860 += 1, R14816 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R14860 += 1, R14816 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R14860 += 1, R14816 += 1, R88 += 1 };
  s1 -> s1 [71, 74] { R14860 += 1, R14816 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R14860 += 1, R14816 += 1, R88 += 1 };
  s1 -> s1 [76, 65535] { R14860 += 1, R14816 += 1, R88 += 1 };
  s2 -> s1 [0, 69] { R14860 += 1, R14816 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R14860 += 1, R14816 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R14860 += 1, R14816 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R14860 += 1, R14816 += 1, R87 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R14860 += 1, R14816 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R14860 += 1, R14816 += 1, R87 += 1, R88 += 1 };
  s2 -> s1 [71, 74] { R14860 += 1, R14816 += 1, R88 += 1 };
  s2 -> s2 [71, 65535] { R14860 += 1, R14816 += 1, R87 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R14860 += 1, R14816 += 1, R88 += 1 };
  s2 -> s1 [76, 65535] { R14860 += 1, R14816 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R14860 += 1, R14816 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R14860 += 1, R14816 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R14860 += 1, R14815 += 1, R14816 += 1 };
  s3 -> s4 [70, 70] { R14860 += 1, R14816 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R14860 += 1, R14816 += 1, R87 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R14860 += 1, R14816 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R14860 += 1, R14816 += 1, R87 += 1, R88 += 1 };
  s3 -> s1 [71, 74] { R14860 += 1, R14816 += 1, R88 += 1 };
  s3 -> s2 [71, 65535] { R14860 += 1, R14816 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R14860 += 1, R14816 += 1, R88 += 1 };
  s3 -> s1 [76, 65535] { R14860 += 1, R14816 += 1, R88 += 1 };
  s4 -> s4 [0, 74] { R14860 += 1, R14816 += 1, R88 += 1 };
  s4 -> s11 [75, 75] { R14860 += 1, R14816 += 1, R88 += 1 };
  s4 -> s4 [76, 65535] { R14860 += 1, R14816 += 1, R88 += 1 };
  s7 -> s4 [0, 74] { R14860 += 1, R14816 += 1, R88 += 1 };
  s7 -> s7 [0, 65535] { R14860 += 1, R14816 += 1, R87 += 1, R88 += 1 };
  s7 -> s11 [75, 75] { R14860 += 1, R14816 += 1, R88 += 1 };
  s7 -> s4 [76, 65535] { R14860 += 1, R14816 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R14860 += 1, R14816 += 1, R88 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R14860 += 1 };
  s8 -> s10 [70, 70] { R14860 += 1, R14816 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R14860 += 1, R14816 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R14860 += 1, R14816 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R14860 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R14860 += 1 };
  s11 -> s11 [0, 65535] { R14860 += 1, R14816 += 1, R88 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R14860 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R14862 += 1, R14818 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s2 [0, 69] { R14862 += 1, R14818 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s3 [0, 65535] { R14862 += 1, R14817 += 1, R14818 += 1 };
  s0 -> s0 [0, 65535] { R14861 += 1, R14862 += 1 };
  s0 -> s4 [70, 70] { R14862 += 1, R14818 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s5 [70, 70] { R14862 += 1, R14818 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s6 [70, 70] { R14862 += 1, R14818 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s7 [70, 70] { R14862 += 1, R14818 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s1 [71, 65535] { R14862 += 1, R14818 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s2 [71, 65535] { R14862 += 1, R14818 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s1 [0, 69] { R14862 += 1, R14818 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s2 [0, 69] { R14862 += 1, R14818 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s4 [70, 70] { R14862 += 1, R14818 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s5 [70, 70] { R14862 += 1, R14818 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s6 [70, 70] { R14862 += 1, R14818 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s7 [70, 70] { R14862 += 1, R14818 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s1 [71, 65535] { R14862 += 1, R14818 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s2 [71, 65535] { R14862 += 1, R14818 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [0, 69] { R14862 += 1, R14818 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s9 [0, 65535];
  s2 -> s2 [0, 65535] { R14862 += 1 };
  s2 -> s4 [70, 70] { R14862 += 1, R14818 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s6 [70, 70] { R14862 += 1, R14818 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [71, 65535] { R14862 += 1, R14818 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s1 [0, 69] { R14862 += 1, R14818 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s2 [0, 69] { R14862 += 1, R14818 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s3 [0, 65535] { R14862 += 1, R14817 += 1, R14818 += 1 };
  s3 -> s4 [70, 70] { R14862 += 1, R14818 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s5 [70, 70] { R14862 += 1, R14818 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s6 [70, 70] { R14862 += 1, R14818 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s7 [70, 70] { R14862 += 1, R14818 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s1 [71, 65535] { R14862 += 1, R14818 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s2 [71, 65535] { R14862 += 1, R14818 += 1, R13514 += 1, R13515 += 1 };
  s4 -> s4 [0, 65535] { R14862 += 1 };
  s4 -> s9 [0, 65535];
  s5 -> s5 [0, 65535] { R14862 += 1, R14818 += 1, R13513 += 1, R13514 += 1 };
  s5 -> s6 [0, 65535] { R14862 += 1, R14818 += 1, R13514 += 1, R13515 += 1 };
  s6 -> s8 [0, 65535] { R14862 += 1 };
  s6 -> s9 [0, 65535];
  s6 -> s6 [0, 65535] { R14862 += 1, R14818 += 1, R13514 += 1, R13515 += 1 };
  s8 -> s8 [0, 65535] { R14862 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  accepting s4, s8, s2, s9, s6;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R14864 += 1, R14820 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s0 [0, 65535] { R14863 += 1, R14864 += 1 };
  s0 -> s2 [0, 65535] { R14864 += 1, R14819 += 1, R14820 += 1 };
  s0 -> s3 [70, 70] { R14864 += 1, R14820 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s4 [70, 70] { R14864 += 1, R14820 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s1 [71, 65535] { R14864 += 1, R14820 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [0, 69] { R14864 += 1, R14820 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R14864 += 1 };
  s1 -> s3 [70, 70] { R14864 += 1, R14820 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s4 [70, 70] { R14864 += 1, R14820 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [71, 65535] { R14864 += 1, R14820 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s1 [0, 69] { R14864 += 1, R14820 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s2 [0, 65535] { R14864 += 1, R14819 += 1, R14820 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R14864 += 1, R14820 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s4 [70, 70] { R14864 += 1, R14820 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s1 [71, 65535] { R14864 += 1, R14820 += 1, R13519 += 1, R13520 += 1 };
  s3 -> s3 [0, 65535] { R14864 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R14864 += 1 };
  s4 -> s4 [0, 65535] { R14864 += 1, R14820 += 1, R13519 += 1, R13520 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R14864 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s0 -> s2 [0, 69] { R14866 += 1, R14822 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s0 -> s3 [0, 69] { R14866 += 1, R14822 += 1, R14641 += 1, R14642 += 1 };
  s0 -> s4 [0, 65535] { R14866 += 1, R14821 += 1, R14822 += 1 };
  s0 -> s0 [0, 65535] { R14865 += 1, R14866 += 1 };
  s0 -> s5 [70, 70] { R14866 += 1, R14822 += 1, R14641 += 1, R14642 += 1 };
  s0 -> s6 [70, 70] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s0 -> s7 [70, 70] { R14866 += 1, R14822 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s0 -> s8 [70, 70] { R14866 += 1, R14822 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s0 -> s9 [70, 70] { R14866 += 1, R14822 += 1, R14641 += 1, R14642 += 1 };
  s0 -> s10 [70, 70] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s0 -> s1 [71, 74] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s0 -> s2 [71, 65535] { R14866 += 1, R14822 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s0 -> s3 [71, 65535] { R14866 += 1, R14822 += 1, R14641 += 1, R14642 += 1 };
  s0 -> s11 [75, 75] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s0 -> s1 [76, 65535] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s1 -> s1 [0, 69] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s1 -> s6 [70, 70] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s1 -> s10 [70, 70] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s1 -> s1 [71, 74] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s1 -> s11 [75, 75] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s1 -> s1 [76, 65535] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s2 -> s1 [0, 69] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s2 -> s2 [0, 69] { R14866 += 1, R14822 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s2 -> s6 [70, 70] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s2 -> s7 [70, 70] { R14866 += 1, R14822 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s2 -> s8 [70, 70] { R14866 += 1, R14822 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s2 -> s10 [70, 70] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s2 -> s1 [71, 74] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s2 -> s2 [71, 65535] { R14866 += 1, R14822 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s2 -> s11 [75, 75] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s2 -> s1 [76, 65535] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s3 -> s1 [0, 69] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s3 -> s2 [0, 69] { R14866 += 1, R14822 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s3 -> s3 [0, 69] { R14866 += 1, R14822 += 1, R14641 += 1, R14642 += 1 };
  s3 -> s5 [70, 70] { R14866 += 1, R14822 += 1, R14641 += 1, R14642 += 1 };
  s3 -> s6 [70, 70] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s3 -> s7 [70, 70] { R14866 += 1, R14822 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s3 -> s8 [70, 70] { R14866 += 1, R14822 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s3 -> s9 [70, 70] { R14866 += 1, R14822 += 1, R14641 += 1, R14642 += 1 };
  s3 -> s10 [70, 70] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s3 -> s1 [71, 74] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s3 -> s2 [71, 65535] { R14866 += 1, R14822 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s3 -> s3 [71, 65535] { R14866 += 1, R14822 += 1, R14641 += 1, R14642 += 1 };
  s3 -> s11 [75, 75] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s3 -> s1 [76, 65535] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s4 -> s1 [0, 69] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s4 -> s2 [0, 69] { R14866 += 1, R14822 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s4 -> s3 [0, 69] { R14866 += 1, R14822 += 1, R14641 += 1, R14642 += 1 };
  s4 -> s4 [0, 65535] { R14866 += 1, R14821 += 1, R14822 += 1 };
  s4 -> s5 [70, 70] { R14866 += 1, R14822 += 1, R14641 += 1, R14642 += 1 };
  s4 -> s6 [70, 70] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s4 -> s7 [70, 70] { R14866 += 1, R14822 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s4 -> s8 [70, 70] { R14866 += 1, R14822 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s4 -> s9 [70, 70] { R14866 += 1, R14822 += 1, R14641 += 1, R14642 += 1 };
  s4 -> s10 [70, 70] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s4 -> s1 [71, 74] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s4 -> s2 [71, 65535] { R14866 += 1, R14822 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s4 -> s3 [71, 65535] { R14866 += 1, R14822 += 1, R14641 += 1, R14642 += 1 };
  s4 -> s11 [75, 75] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s4 -> s1 [76, 65535] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s5 -> s10 [0, 74] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s5 -> s5 [0, 65535] { R14866 += 1, R14822 += 1, R14641 += 1, R14642 += 1 };
  s5 -> s7 [0, 65535] { R14866 += 1, R14822 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s5 -> s14 [75, 75] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s5 -> s10 [76, 65535] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s7 -> s10 [0, 74] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s7 -> s7 [0, 65535] { R14866 += 1, R14822 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s7 -> s14 [75, 75] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s7 -> s10 [76, 65535] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s10 -> s10 [0, 74] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s10 -> s14 [75, 75] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s10 -> s10 [76, 65535] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s11 -> s12 [0, 69] { R14866 += 1, R14822 += 1 };
  s11 -> s13 [0, 69] { R14866 += 1, R14822 += 1, R14642 += 1 };
  s11 -> s11 [0, 69] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s11 -> s14 [70, 70] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s11 -> s15 [70, 70] { R14866 += 1, R14822 += 1, R14642 += 1 };
  s11 -> s16 [70, 70] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s11 -> s17 [70, 70] { R14866 += 1, R14822 += 1, R14642 += 1 };
  s11 -> s18 [70, 70] { R14866 += 1, R14822 += 1 };
  s11 -> s19 [70, 70] { R14866 += 1, R14822 += 1 };
  s11 -> s12 [71, 65535] { R14866 += 1, R14822 += 1 };
  s11 -> s13 [71, 65535] { R14866 += 1, R14822 += 1, R14642 += 1 };
  s11 -> s11 [71, 65535] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s12 -> s12 [0, 69] { R14866 += 1, R14822 += 1 };
  s12 -> s12 [0, 65535] { R14866 += 1 };
  s12 -> s20 [0, 65535];
  s12 -> s18 [70, 70] { R14866 += 1, R14822 += 1 };
  s12 -> s19 [70, 70] { R14866 += 1, R14822 += 1 };
  s12 -> s12 [71, 65535] { R14866 += 1, R14822 += 1 };
  s13 -> s12 [0, 69] { R14866 += 1, R14822 += 1 };
  s13 -> s13 [0, 69] { R14866 += 1, R14822 += 1, R14642 += 1 };
  s13 -> s15 [70, 70] { R14866 += 1, R14822 += 1, R14642 += 1 };
  s13 -> s17 [70, 70] { R14866 += 1, R14822 += 1, R14642 += 1 };
  s13 -> s18 [70, 70] { R14866 += 1, R14822 += 1 };
  s13 -> s19 [70, 70] { R14866 += 1, R14822 += 1 };
  s13 -> s12 [71, 65535] { R14866 += 1, R14822 += 1 };
  s13 -> s13 [71, 65535] { R14866 += 1, R14822 += 1, R14642 += 1 };
  s14 -> s14 [0, 65535] { R14866 += 1, R14822 += 1, R14642 += 1, R14644 += 1 };
  s14 -> s17 [0, 65535] { R14866 += 1, R14822 += 1, R14642 += 1 };
  s14 -> s18 [0, 65535] { R14866 += 1, R14822 += 1 };
  s17 -> s17 [0, 65535] { R14866 += 1, R14822 += 1, R14642 += 1 };
  s17 -> s18 [0, 65535] { R14866 += 1, R14822 += 1 };
  s18 -> s20 [0, 65535];
  s18 -> s21 [0, 65535] { R14866 += 1 };
  s18 -> s18 [0, 65535] { R14866 += 1, R14822 += 1 };
  s19 -> s20 [0, 65535];
  s19 -> s19 [0, 65535] { R14866 += 1 };
  s20 -> s20 [0, 65535];
  s21 -> s20 [0, 65535];
  s21 -> s21 [0, 65535] { R14866 += 1 };
  accepting s19, s12, s21, s20, s18;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R14868 += 1, R14824 += 1, R14760 += 1, R14761 += 1, R14762 += 1 };
  s0 -> s2 [0, 69] { R14868 += 1, R14824 += 1, R14760 += 1, R14762 += 1, R14763 += 1 };
  s0 -> s3 [0, 69] { R14868 += 1, R14824 += 1, R14759 += 1, R14760 += 1 };
  s0 -> s0 [0, 65535] { R14867 += 1, R14868 += 1 };
  s0 -> s4 [0, 65535] { R14868 += 1, R14823 += 1, R14824 += 1 };
  s0 -> s5 [70, 70] { R14868 += 1, R14824 += 1, R14760 += 1, R14761 += 1, R14762 += 1 };
  s0 -> s6 [70, 70] { R14868 += 1, R14824 += 1, R14760 += 1, R14762 += 1, R14763 += 1 };
  s0 -> s7 [70, 70] { R14868 += 1, R14824 += 1, R14759 += 1, R14760 += 1 };
  s0 -> s8 [70, 70] { R14868 += 1, R14824 += 1, R14759 += 1, R14760 += 1 };
  s0 -> s9 [70, 70] { R14868 += 1, R14824 += 1, R14760 += 1, R14762 += 1, R14763 += 1 };
  s0 -> s10 [70, 70] { R14868 += 1, R14824 += 1, R14760 += 1, R14761 += 1, R14762 += 1 };
  s0 -> s1 [71, 65535] { R14868 += 1, R14824 += 1, R14760 += 1, R14761 += 1, R14762 += 1 };
  s0 -> s2 [71, 65535] { R14868 += 1, R14824 += 1, R14760 += 1, R14762 += 1, R14763 += 1 };
  s0 -> s3 [71, 65535] { R14868 += 1, R14824 += 1, R14759 += 1, R14760 += 1 };
  s1 -> s1 [0, 69] { R14868 += 1, R14824 += 1, R14760 += 1, R14761 += 1, R14762 += 1 };
  s1 -> s16 [0, 69] { R14868 += 1, R14824 += 1 };
  s1 -> s2 [0, 69] { R14868 += 1, R14824 += 1, R14760 += 1, R14762 += 1, R14763 += 1 };
  s1 -> s5 [70, 70] { R14868 += 1, R14824 += 1, R14760 += 1, R14761 += 1, R14762 += 1 };
  s1 -> s6 [70, 70] { R14868 += 1, R14824 += 1, R14760 += 1, R14762 += 1, R14763 += 1 };
  s1 -> s17 [70, 70] { R14868 += 1, R14824 += 1 };
  s1 -> s9 [70, 70] { R14868 += 1, R14824 += 1, R14760 += 1, R14762 += 1, R14763 += 1 };
  s1 -> s12 [70, 70] { R14868 += 1, R14824 += 1 };
  s1 -> s10 [70, 70] { R14868 += 1, R14824 += 1, R14760 += 1, R14761 += 1, R14762 += 1 };
  s1 -> s1 [71, 65535] { R14868 += 1, R14824 += 1, R14760 += 1, R14761 += 1, R14762 += 1 };
  s1 -> s16 [71, 65535] { R14868 += 1, R14824 += 1 };
  s1 -> s2 [71, 65535] { R14868 += 1, R14824 += 1, R14760 += 1, R14762 += 1, R14763 += 1 };
  s2 -> s15 [0, 69] { R14868 += 1, R14824 += 1, R14760 += 1 };
  s2 -> s16 [0, 69] { R14868 += 1, R14824 += 1 };
  s2 -> s2 [0, 69] { R14868 += 1, R14824 += 1, R14760 += 1, R14762 += 1, R14763 += 1 };
  s2 -> s11 [70, 70] { R14868 += 1, R14824 += 1, R14760 += 1 };
  s2 -> s6 [70, 70] { R14868 += 1, R14824 += 1, R14760 += 1, R14762 += 1, R14763 += 1 };
  s2 -> s17 [70, 70] { R14868 += 1, R14824 += 1 };
  s2 -> s9 [70, 70] { R14868 += 1, R14824 += 1, R14760 += 1, R14762 += 1, R14763 += 1 };
  s2 -> s18 [70, 70] { R14868 += 1, R14824 += 1, R14760 += 1 };
  s2 -> s12 [70, 70] { R14868 += 1, R14824 += 1 };
  s2 -> s15 [71, 65535] { R14868 += 1, R14824 += 1, R14760 += 1 };
  s2 -> s16 [71, 65535] { R14868 += 1, R14824 += 1 };
  s2 -> s2 [71, 65535] { R14868 += 1, R14824 += 1, R14760 += 1, R14762 += 1, R14763 += 1 };
  s3 -> s1 [0, 69] { R14868 += 1, R14824 += 1, R14760 += 1, R14761 += 1, R14762 += 1 };
  s3 -> s2 [0, 69] { R14868 += 1, R14824 += 1, R14760 += 1, R14762 += 1, R14763 += 1 };
  s3 -> s3 [0, 69] { R14868 += 1, R14824 += 1, R14759 += 1, R14760 += 1 };
  s3 -> s5 [70, 70] { R14868 += 1, R14824 += 1, R14760 += 1, R14761 += 1, R14762 += 1 };
  s3 -> s6 [70, 70] { R14868 += 1, R14824 += 1, R14760 += 1, R14762 += 1, R14763 += 1 };
  s3 -> s7 [70, 70] { R14868 += 1, R14824 += 1, R14759 += 1, R14760 += 1 };
  s3 -> s8 [70, 70] { R14868 += 1, R14824 += 1, R14759 += 1, R14760 += 1 };
  s3 -> s9 [70, 70] { R14868 += 1, R14824 += 1, R14760 += 1, R14762 += 1, R14763 += 1 };
  s3 -> s10 [70, 70] { R14868 += 1, R14824 += 1, R14760 += 1, R14761 += 1, R14762 += 1 };
  s3 -> s1 [71, 65535] { R14868 += 1, R14824 += 1, R14760 += 1, R14761 += 1, R14762 += 1 };
  s3 -> s2 [71, 65535] { R14868 += 1, R14824 += 1, R14760 += 1, R14762 += 1, R14763 += 1 };
  s3 -> s3 [71, 65535] { R14868 += 1, R14824 += 1, R14759 += 1, R14760 += 1 };
  s4 -> s1 [0, 69] { R14868 += 1, R14824 += 1, R14760 += 1, R14761 += 1, R14762 += 1 };
  s4 -> s2 [0, 69] { R14868 += 1, R14824 += 1, R14760 += 1, R14762 += 1, R14763 += 1 };
  s4 -> s3 [0, 69] { R14868 += 1, R14824 += 1, R14759 += 1, R14760 += 1 };
  s4 -> s4 [0, 65535] { R14868 += 1, R14823 += 1, R14824 += 1 };
  s4 -> s5 [70, 70] { R14868 += 1, R14824 += 1, R14760 += 1, R14761 += 1, R14762 += 1 };
  s4 -> s6 [70, 70] { R14868 += 1, R14824 += 1, R14760 += 1, R14762 += 1, R14763 += 1 };
  s4 -> s7 [70, 70] { R14868 += 1, R14824 += 1, R14759 += 1, R14760 += 1 };
  s4 -> s8 [70, 70] { R14868 += 1, R14824 += 1, R14759 += 1, R14760 += 1 };
  s4 -> s9 [70, 70] { R14868 += 1, R14824 += 1, R14760 += 1, R14762 += 1, R14763 += 1 };
  s4 -> s10 [70, 70] { R14868 += 1, R14824 += 1, R14760 += 1, R14761 += 1, R14762 += 1 };
  s4 -> s1 [71, 65535] { R14868 += 1, R14824 += 1, R14760 += 1, R14761 += 1, R14762 += 1 };
  s4 -> s2 [71, 65535] { R14868 += 1, R14824 += 1, R14760 += 1, R14762 += 1, R14763 += 1 };
  s4 -> s3 [71, 65535] { R14868 += 1, R14824 += 1, R14759 += 1, R14760 += 1 };
  s5 -> s5 [0, 65535] { R14868 += 1, R14824 += 1, R14760 += 1, R14761 += 1, R14762 += 1 };
  s5 -> s9 [0, 65535] { R14868 += 1, R14824 += 1, R14760 += 1, R14762 += 1, R14763 += 1 };
  s5 -> s12 [0, 65535] { R14868 += 1, R14824 += 1 };
  s7 -> s5 [0, 65535] { R14868 += 1, R14824 += 1, R14760 += 1, R14761 += 1, R14762 += 1 };
  s7 -> s7 [0, 65535] { R14868 += 1, R14824 += 1, R14759 += 1, R14760 += 1 };
  s7 -> s9 [0, 65535] { R14868 += 1, R14824 += 1, R14760 += 1, R14762 += 1, R14763 += 1 };
  s9 -> s11 [0, 65535] { R14868 += 1, R14824 += 1, R14760 += 1 };
  s9 -> s9 [0, 65535] { R14868 += 1, R14824 += 1, R14760 += 1, R14762 += 1, R14763 += 1 };
  s9 -> s12 [0, 65535] { R14868 += 1, R14824 += 1 };
  s11 -> s11 [0, 65535] { R14868 += 1, R14824 += 1, R14760 += 1 };
  s11 -> s12 [0, 65535] { R14868 += 1, R14824 += 1 };
  s12 -> s12 [0, 65535] { R14868 += 1, R14824 += 1 };
  s12 -> s13 [0, 65535] { R14868 += 1 };
  s12 -> s14 [0, 65535];
  s13 -> s14 [0, 65535];
  s13 -> s13 [0, 65535] { R14868 += 1 };
  s14 -> s14 [0, 65535];
  s15 -> s15 [0, 69] { R14868 += 1, R14824 += 1, R14760 += 1 };
  s15 -> s16 [0, 69] { R14868 += 1, R14824 += 1 };
  s15 -> s11 [70, 70] { R14868 += 1, R14824 += 1, R14760 += 1 };
  s15 -> s17 [70, 70] { R14868 += 1, R14824 += 1 };
  s15 -> s18 [70, 70] { R14868 += 1, R14824 += 1, R14760 += 1 };
  s15 -> s12 [70, 70] { R14868 += 1, R14824 += 1 };
  s15 -> s15 [71, 65535] { R14868 += 1, R14824 += 1, R14760 += 1 };
  s15 -> s16 [71, 65535] { R14868 += 1, R14824 += 1 };
  s16 -> s16 [0, 69] { R14868 += 1, R14824 += 1 };
  s16 -> s16 [0, 65535] { R14868 += 1 };
  s16 -> s14 [0, 65535];
  s16 -> s17 [70, 70] { R14868 += 1, R14824 += 1 };
  s16 -> s12 [70, 70] { R14868 += 1, R14824 += 1 };
  s16 -> s16 [71, 65535] { R14868 += 1, R14824 += 1 };
  s17 -> s17 [0, 65535] { R14868 += 1 };
  s17 -> s14 [0, 65535];
  accepting s17, s16, s12, s13, s14;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R14868 && R23 - R14868 = -1 && R24 = R14868 && R25 - R14868 = -1 && R26 = R14868 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R14646 + -1*R14642 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R14646 + -1*R14642 - R66 = 0 && R55 + R13518 + R13515 + -1*R14648 + -1*R14644 - R68 = 0 && R65 + R14645 + R14641 = 0 && R67 + R14647 + R14643 = 0 && R14809 = 0 && R14810 = 0 && R14815 = 0 && R14816 = 0 && R14817 = 0 && R14818 = 0 && R14821 = 0 && R14822 = 0 && R14823 = 0 && R14824 = 0 && R14825 = 0 && R14826 = R14868 && R14827 = 0 && R14828 = R14868 && R14829 = 0 && R14830 = R14868 && R14831 = 0 && R14832 = R14868 && R14833 = 0 && R14834 = R14868 && R14835 = 0 && R14836 = R14868 && R14837 = 0 && R14838 = R14868 && R14839 = 0 && R14840 = R14868 && R14841 = 0 && R14842 = R14868 && R14843 = 0 && R14844 = R14868 && R14845 = 0 && R14846 = R14868 && R14847 = 0 && R14848 = R14868 && R14849 = 0 && R14850 = R14868 && R14851 = 0 && R14852 = R14868 && R14853 = 0 && R14854 = R14868 && R14855 = 0 && R14856 = R14868 && R14857 = 0 && R14858 = R14868 && R14859 = 0 && R14860 = R14868 && R14861 = 0 && R14862 = R14868 && R14863 = 0 && R14864 = R14868 && R14865 = 0 && R14866 = R14868 && R14867 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R13524 + R13521 < 1 && -1*R14646 + -1*R14642 - R66 < 1 && -1*R14648 + -1*R14644 - R68 < 1 && 0 < R14868 && (R2 != 0 || R20 = 0 || (R14769 = 0 && R14770 = 0)) && (R2 != 0 || R20 = 0 || (R14771 = 0 && R14772 = 0)) && (R2 != 0 || R20 = 0 || (R14773 = 0 && R14774 = 0)) && (R2 != 0 || R20 = 0 || (R14775 = 0 && R14776 = 0)) && (R2 != 0 || R20 = 0 || (R14777 = 0 && R14778 = 0)) && (R2 != 0 || R20 = 0 || (R14779 = 0 && R14780 = 0)) && (R2 != 0 || R20 = 0 || (R14781 = 0 && R14782 = 0)) && (R2 != 0 || R20 = 0 || (R14783 = 0 && R14784 = 0)) && (R2 != 0 || R20 = 0 || (R14785 = 0 && R14786 = 0)) && (R2 != 0 || R20 = 0 || (R14787 = 0 && R14788 = 0)) && (R53 + R13516 + R13513 != 0 || R54 + R13517 + R13514 + -1*R14646 + -1*R14642 - R66 = 0 || R66 + R14646 + R14642 < 1) && (R59 + R13522 + R13519 != 0 || R60 + R13523 + R13520 + -1*R14646 + -1*R14642 - R66 = 0 || R66 + R14646 + R14642 < 1) && (R66 + R14646 + R14642 != 0 || ((R53 + R13516 + R13513 != 0 || R54 + R13517 + R13514 = 0 || R68 + R14648 + R14644 < 1) && (R53 + R13516 + R13513 = 0 || R68 + R14648 + R14644 < 1))) && (R66 + R14646 + R14642 != 0 || ((R59 + R13522 + R13519 != 0 || R60 + R13523 + R13520 = 0 || R68 + R14648 + R14644 < 1) && (R59 + R13522 + R13519 = 0 || R68 + R14648 + R14644 < 1))) && (R66 + R14646 + R14642 != 0 || ((R73 + R14764 + R14759 != 0 || R74 + R14765 + R14760 = 0 || R68 + R14648 + R14644 < 1) && (R73 + R14764 + R14759 = 0 || R68 + R14648 + R14644 < 1))) && (R68 + R14648 + R14644 != 0 || R77 + R14768 + R14763 = 0 || (R75 + R14766 + R14761 = 0 && R76 + R14767 + R14762 = 0)) && (R73 + R14764 + R14759 != 0 || R66 + R14646 + R14642 + -1*R14765 + -1*R14760 - R74 = 0 || R66 + R14646 + R14642 < 1) && (R75 + R14766 + R14761 != 0 || R68 + R14648 + R14644 + -1*R14767 + -1*R14762 - R76 = 0 || R68 + R14648 + R14644 < 1) && (R14769 != 0 || R2 = R14770 || R2 < 1) && (R14771 != 0 || R2 = R14772 || R2 < 1) && (R14773 != 0 || R2 = R14774 || R2 < 1) && (R14775 != 0 || R2 = R14776 || R2 < 1) && (R14777 != 0 || R2 = R14778 || R2 < 1) && (R14779 != 0 || R2 = R14780 || R2 < 1) && (R14781 != 0 || R2 = R14782 || R2 < 1) && (R14783 != 0 || R2 = R14784 || R2 < 1) && (R14785 != 0 || R2 = R14786 || R2 < 1) && (R14787 != 0 || R2 = R14788 || R2 < 1) && (R21 = 0 || (R14807 = 0 && R14808 = 0)) && (R21 = 0 || (R14811 = 0 && R14812 = 0)) && (R21 = 0 || (R14813 = 0 && R14814 = 0)) && (R21 = 0 || (R14819 = 0 && R14820 = 0)) && (R22 = 0 || (R14789 = 0 && R14790 = 0)) && (R22 = 0 || (R14791 = 0 && R14792 = 0)) && (R22 = 0 || (R14793 = 0 && R14794 = 0)) && (R22 = 0 || (R14795 = 0 && R14796 = 0)) && (R22 = 0 || (R14797 = 0 && R14798 = 0)) && (R22 = 0 || (R14799 = 0 && R14800 = 0)) && (R22 = 0 || (R14801 = 0 && R14802 = 0)) && (R22 = 0 || (R14803 = 0 && R14804 = 0)) && (R22 = 0 || (R14805 = 0 && R14806 = 0)) && (R53 + R13516 + R13513 = 0 || R66 + R14646 + R14642 < 1) && (R59 + R13522 + R13519 = 0 || R66 + R14646 + R14642 < 1) && (R73 + R14764 + R14759 = 0 || R66 + R14646 + R14642 < 1) && (R75 + R14766 + R14761 = 0 || R68 + R14648 + R14644 < 1) && (R14769 = 0 || R2 < 1) && (R14771 = 0 || R2 < 1) && (R14773 = 0 || R2 < 1) && (R14775 = 0 || R2 < 1) && (R14777 = 0 || R2 < 1) && (R14779 = 0 || R2 < 1) && (R14781 = 0 || R2 < 1) && (R14783 = 0 || R2 < 1) && (R14785 = 0 || R2 < 1) && (R14787 = 0 || R2 < 1);
// End of Parikh automata intersection problem
