// Parikh automata intersection problem, generated by OSTRICH+
counter int R10159, R10160, R10161, R10162, R10163, R10164, R12, R12955, R12956, R12957, R12958, R12959, R12960, R12961, R12962, R13403, R13404, R13405, R13406, R13407, R13408, R13409, R13410, R13411, R13412, R13413, R13414, R13415, R13416, R13417, R13418, R13419, R13420, R13421, R13422, R13423, R13424, R13425, R13426, R13427, R13428, R13429, R13430, R13431, R13432, R13433, R13434, R13435, R13436, R13437, R13438, R13439, R13440, R13441, R13442, R13443, R13444, R13445, R13446, R13447, R13448, R13449, R13450, R13451, R13452, R13453, R13454, R13455, R13456, R13457, R13458, R13459, R13460, R13461, R13462, R13463, R13464, R13465, R13466, R13467, R13468, R13469, R13470, R13471, R13472, R13473, R13474, R13475, R13476, R13477, R13478, R13479, R13480, R13481, R13482, R13483, R13484, R13485, R13486, R13487, R13488, R13489, R13490, R13491, R13492, R13493, R13494, R13495, R13496, R13497, R13498, R13499, R13500, R13501, R13502, R13503, R13504, R13505, R13506, R13507, R13508, R13509, R13510, R13511, R13512, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R4, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R13434 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R13433 += 1, R13434 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R13434 += 1, R22 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R13436 += 1 };
  s0 -> s0 [0, 65535] { R13435 += 1, R13436 += 1 };
  s0 -> s2 [70, 70] { R13436 += 1 };
  s0 -> s3 [70, 70] { R13436 += 1 };
  s0 -> s1 [76, 65535] { R13436 += 1 };
  s1 -> s1 [0, 69] { R13436 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13436 += 1 };
  s1 -> s3 [70, 70] { R13436 += 1 };
  s1 -> s1 [76, 65535] { R13436 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R13436 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R13436 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R13438 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R13437 += 1, R13438 += 1 };
  s0 -> s2 [70, 70] { R13438 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R13438 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R13438 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R13438 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13438 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R13438 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R13438 += 1, R45 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13438 += 1, R45 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R13440 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R13439 += 1, R13440 += 1 };
  s0 -> s2 [70, 70] { R13440 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R13440 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R13440 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R13440 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13440 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R13440 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R13440 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R13440 += 1, R47 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R13442 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R13441 += 1, R13442 += 1 };
  s0 -> s2 [70, 70] { R13442 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R13442 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R13442 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R13442 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13442 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R13442 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R13442 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13442 += 1, R49 += 1, R50 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R13444 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R13443 += 1, R13444 += 1 };
  s0 -> s2 [70, 70] { R13444 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R13444 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R13444 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R13444 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13444 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R13444 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R13444 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R13444 += 1, R53 += 1, R54 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R13446 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R13445 += 1, R13446 += 1 };
  s0 -> s2 [70, 70] { R13446 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R13446 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R13446 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R13446 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13446 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R13446 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R13446 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R13446 += 1, R59 += 1, R60 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R13448 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R13447 += 1, R13448 += 1 };
  s0 -> s2 [70, 70] { R13448 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R13448 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R13448 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R13448 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13448 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R13448 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R13448 += 1, R65 += 1, R66 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13448 += 1, R65 += 1, R66 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R13450 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R13449 += 1, R13450 += 1 };
  s0 -> s2 [70, 70] { R13450 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R13450 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R13450 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R13450 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13450 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R13450 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R13450 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13450 += 1, R73 += 1, R74 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R13470 += 1 };
  s0 -> s0 [0, 65535] { R13469 += 1, R13470 += 1 };
  s0 -> s2 [70, 70] { R13470 += 1 };
  s0 -> s1 [71, 65535] { R13470 += 1 };
  s1 -> s1 [0, 69] { R13470 += 1 };
  s1 -> s2 [70, 70] { R13470 += 1 };
  s1 -> s1 [71, 65535] { R13470 += 1 };
  s2 -> s2 [0, 65535] { R13470 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R13471 += 1, R13472 += 1 };
  s0 -> s1 [0, 65535] { R13472 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R13472 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R13474 += 1 };
  s0 -> s0 [0, 65535] { R13473 += 1, R13474 += 1 };
  s0 -> s2 [0, 65535] { R13474 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R13474 += 1 };
  s0 -> s1 [71, 65535] { R13474 += 1 };
  s1 -> s1 [0, 69] { R13474 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R13474 += 1 };
  s1 -> s1 [71, 65535] { R13474 += 1 };
  s2 -> s1 [0, 69] { R13474 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13474 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R13474 += 1 };
  s2 -> s1 [71, 65535] { R13474 += 1 };
  s3 -> s3 [0, 65535] { R13474 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R13476 += 1, R13414 += 1 };
  s0 -> s2 [0, 65535] { R13476 += 1, R13413 += 1, R13414 += 1 };
  s0 -> s0 [0, 65535] { R13475 += 1, R13476 += 1 };
  s0 -> s1 [71, 65535] { R13476 += 1, R13414 += 1 };
  s1 -> s1 [0, 69] { R13476 += 1, R13414 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R13476 += 1 };
  s1 -> s1 [71, 65535] { R13476 += 1, R13414 += 1 };
  s2 -> s1 [0, 69] { R13476 += 1, R13414 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13476 += 1, R13413 += 1, R13414 += 1 };
  s2 -> s1 [71, 65535] { R13476 += 1, R13414 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R13478 += 1, R13415 += 1, R13416 += 1 };
  s0 -> s2 [0, 65535] { R13478 += 1, R13416 += 1, R20 += 1 };
  s0 -> s0 [0, 65535] { R13477 += 1, R13478 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R13478 += 1, R13415 += 1, R13416 += 1 };
  s1 -> s2 [0, 65535] { R13478 += 1, R13416 += 1, R20 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R13478 += 1 };
  s2 -> s2 [0, 65535] { R13478 += 1, R13416 += 1, R20 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13478 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R13480 += 1, R13418 += 1 };
  s0 -> s0 [0, 65535] { R13479 += 1, R13480 += 1 };
  s0 -> s2 [0, 65535] { R13480 += 1, R13417 += 1, R13418 += 1 };
  s0 -> s1 [75, 65535] { R13480 += 1, R13418 += 1 };
  s1 -> s1 [0, 70] { R13480 += 1, R13418 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R13480 += 1 };
  s1 -> s1 [75, 65535] { R13480 += 1, R13418 += 1 };
  s2 -> s1 [0, 70] { R13480 += 1, R13418 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13480 += 1, R13417 += 1, R13418 += 1 };
  s2 -> s1 [75, 65535] { R13480 += 1, R13418 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R13482 += 1, R13420 += 1, R84 += 1 };
  s0 -> s2 [0, 65535] { R13482 += 1, R13419 += 1, R13420 += 1 };
  s0 -> s0 [0, 65535] { R13481 += 1, R13482 += 1 };
  s1 -> s1 [0, 65535] { R13482 += 1, R13420 += 1, R84 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R13482 += 1 };
  s2 -> s1 [0, 65535] { R13482 += 1, R13420 += 1, R84 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13482 += 1, R13419 += 1, R13420 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13482 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R13484 += 1, R13422 += 1 };
  s0 -> s2 [0, 65535] { R13484 += 1, R13421 += 1, R13422 += 1 };
  s0 -> s0 [0, 65535] { R13483 += 1, R13484 += 1 };
  s0 -> s3 [0, 65535] { R13484 += 1, R13422 += 1, R86 += 1 };
  s0 -> s1 [76, 65535] { R13484 += 1, R13422 += 1 };
  s1 -> s1 [0, 74] { R13484 += 1, R13422 += 1 };
  s1 -> s1 [0, 65535] { R13484 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [76, 65535] { R13484 += 1, R13422 += 1 };
  s2 -> s1 [0, 74] { R13484 += 1, R13422 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13484 += 1, R13421 += 1, R13422 += 1 };
  s2 -> s3 [0, 65535] { R13484 += 1, R13422 += 1, R86 += 1 };
  s2 -> s1 [76, 65535] { R13484 += 1, R13422 += 1 };
  s3 -> s1 [0, 74] { R13484 += 1, R13422 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13484 += 1, R13422 += 1, R86 += 1 };
  s3 -> s5 [0, 65535] { R13484 += 1 };
  s3 -> s1 [76, 65535] { R13484 += 1, R13422 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13484 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s0 [0, 65535] { R13485 += 1, R13486 += 1 };
  s0 -> s1 [0, 65535] { R13486 += 1, R13423 += 1, R13424 += 1 };
  s0 -> s2 [0, 65535] { R13486 += 1, R13424 += 1, R90 += 1 };
  s0 -> s3 [0, 65535] { R13486 += 1, R13424 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R13486 += 1, R13423 += 1, R13424 += 1 };
  s1 -> s2 [0, 65535] { R13486 += 1, R13424 += 1, R90 += 1 };
  s1 -> s3 [0, 65535] { R13486 += 1, R13424 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13486 += 1, R13424 += 1, R90 += 1 };
  s2 -> s3 [0, 65535] { R13486 += 1, R13424 += 1 };
  s2 -> s5 [0, 65535] { R13486 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13486 += 1, R13424 += 1 };
  s3 -> s5 [0, 65535] { R13486 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13486 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R13488 += 1, R13425 += 1, R13426 += 1 };
  s0 -> s0 [0, 65535] { R13487 += 1, R13488 += 1 };
  s0 -> s2 [0, 65535] { R13488 += 1, R13426 += 1, R94 += 1, R95 += 1 };
  s0 -> s3 [0, 65535] { R13488 += 1, R13426 += 1, R95 += 1, R96 += 1 };
  s1 -> s1 [0, 65535] { R13488 += 1, R13425 += 1, R13426 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R13488 += 1, R13426 += 1, R94 += 1, R95 += 1 };
  s1 -> s3 [0, 65535] { R13488 += 1, R13426 += 1, R95 += 1, R96 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R13488 += 1 };
  s2 -> s2 [0, 65535] { R13488 += 1, R13426 += 1, R94 += 1, R95 += 1 };
  s2 -> s3 [0, 65535] { R13488 += 1, R13426 += 1, R95 += 1, R96 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R13488 += 1 };
  s3 -> s6 [0, 65535] { R13488 += 1, R13426 += 1 };
  s3 -> s3 [0, 65535] { R13488 += 1, R13426 += 1, R95 += 1, R96 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13488 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R13488 += 1 };
  s6 -> s6 [0, 65535] { R13488 += 1, R13426 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 65535] { R13490 += 1, R13428 += 1 };
  s0 -> s0 [0, 65535] { R13489 += 1, R13490 += 1 };
  s0 -> s2 [0, 65535] { R13490 += 1, R13427 += 1, R13428 += 1 };
  s1 -> s1 [0, 65535] { R13490 += 1, R13428 += 1 };
  s1 -> s4 [0, 65535] { R13490 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R13490 += 1, R13428 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13490 += 1, R13427 += 1, R13428 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13490 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 74] { R13492 += 1, R13430 += 1, R12960 += 1, R12962 += 1 };
  s0 -> s2 [0, 65535] { R13492 += 1, R13430 += 1, R12960 += 1, R12961 += 1, R12962 += 1 };
  s0 -> s3 [0, 65535] { R13492 += 1, R13429 += 1, R13430 += 1 };
  s0 -> s0 [0, 65535] { R13491 += 1, R13492 += 1 };
  s0 -> s4 [75, 75] { R13492 += 1, R13430 += 1, R12960 += 1, R12962 += 1 };
  s0 -> s1 [76, 65535] { R13492 += 1, R13430 += 1, R12960 += 1, R12962 += 1 };
  s1 -> s1 [0, 74] { R13492 += 1, R13430 += 1, R12960 += 1, R12962 += 1 };
  s1 -> s4 [75, 75] { R13492 += 1, R13430 += 1, R12960 += 1, R12962 += 1 };
  s1 -> s1 [76, 65535] { R13492 += 1, R13430 += 1, R12960 += 1, R12962 += 1 };
  s2 -> s1 [0, 74] { R13492 += 1, R13430 += 1, R12960 += 1, R12962 += 1 };
  s2 -> s2 [0, 65535] { R13492 += 1, R13430 += 1, R12960 += 1, R12961 += 1, R12962 += 1 };
  s2 -> s4 [75, 75] { R13492 += 1, R13430 += 1, R12960 += 1, R12962 += 1 };
  s2 -> s1 [76, 65535] { R13492 += 1, R13430 += 1, R12960 += 1, R12962 += 1 };
  s3 -> s1 [0, 74] { R13492 += 1, R13430 += 1, R12960 += 1, R12962 += 1 };
  s3 -> s2 [0, 65535] { R13492 += 1, R13430 += 1, R12960 += 1, R12961 += 1, R12962 += 1 };
  s3 -> s3 [0, 65535] { R13492 += 1, R13429 += 1, R13430 += 1 };
  s3 -> s4 [75, 75] { R13492 += 1, R13430 += 1, R12960 += 1, R12962 += 1 };
  s3 -> s1 [76, 65535] { R13492 += 1, R13430 += 1, R12960 += 1, R12962 += 1 };
  s4 -> s5 [0, 65535] { R13492 += 1, R13430 += 1, R12960 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R13492 += 1, R13430 += 1, R12960 += 1, R12962 += 1 };
  s4 -> s7 [0, 65535] { R13492 += 1, R13430 += 1 };
  s4 -> s8 [0, 65535] { R13492 += 1 };
  s5 -> s5 [0, 65535] { R13492 += 1, R13430 += 1, R12960 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R13492 += 1, R13430 += 1 };
  s5 -> s8 [0, 65535] { R13492 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R13492 += 1, R13430 += 1 };
  s7 -> s8 [0, 65535] { R13492 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R13492 += 1 };
  accepting s4, s8, s5, s6, s7;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R13494 += 1, R13432 += 1, R13409 += 1, R13410 += 1, R13411 += 1 };
  s0 -> s2 [0, 65535] { R13494 += 1, R13432 += 1, R13409 += 1, R13411 += 1, R13412 += 1 };
  s0 -> s3 [0, 65535] { R13494 += 1, R13431 += 1, R13432 += 1 };
  s0 -> s0 [0, 65535] { R13493 += 1, R13494 += 1 };
  s0 -> s4 [0, 65535] { R13494 += 1, R13432 += 1 };
  s1 -> s5 [0, 65535] { R13494 += 1 };
  s1 -> s1 [0, 65535] { R13494 += 1, R13432 += 1, R13409 += 1, R13410 += 1, R13411 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s2 [0, 65535] { R13494 += 1, R13432 += 1, R13409 += 1, R13411 += 1, R13412 += 1 };
  s1 -> s4 [0, 65535] { R13494 += 1, R13432 += 1 };
  s2 -> s5 [0, 65535] { R13494 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R13494 += 1, R13432 += 1, R13409 += 1, R13411 += 1, R13412 += 1 };
  s2 -> s7 [0, 65535] { R13494 += 1, R13432 += 1, R13409 += 1 };
  s2 -> s4 [0, 65535] { R13494 += 1, R13432 += 1 };
  s3 -> s1 [0, 65535] { R13494 += 1, R13432 += 1, R13409 += 1, R13410 += 1, R13411 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R13494 += 1, R13432 += 1, R13409 += 1, R13411 += 1, R13412 += 1 };
  s3 -> s3 [0, 65535] { R13494 += 1, R13431 += 1, R13432 += 1 };
  s3 -> s4 [0, 65535] { R13494 += 1, R13432 += 1 };
  s4 -> s5 [0, 65535] { R13494 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R13494 += 1, R13432 += 1 };
  s5 -> s5 [0, 65535] { R13494 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R13494 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R13494 += 1, R13432 += 1, R13409 += 1 };
  s7 -> s4 [0, 65535] { R13494 += 1, R13432 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R13496 += 1, R13452 += 1, R21 += 1 };
  s0 -> s0 [0, 65535] { R13495 += 1, R13496 += 1 };
  s0 -> s2 [0, 65535] { R13496 += 1, R13451 += 1, R13452 += 1 };
  s1 -> s4 [0, 65535] { R13496 += 1 };
  s1 -> s1 [0, 65535] { R13496 += 1, R13452 += 1, R21 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R13496 += 1, R13452 += 1, R21 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13496 += 1, R13451 += 1, R13452 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13496 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R13498 += 1, R13454 += 1 };
  s0 -> s0 [0, 65535] { R13497 += 1, R13498 += 1 };
  s0 -> s2 [0, 65535] { R13498 += 1, R13453 += 1, R13454 += 1 };
  s0 -> s3 [70, 70] { R13498 += 1, R13454 += 1 };
  s0 -> s4 [70, 70] { R13498 += 1, R13454 += 1 };
  s0 -> s5 [75, 75] { R13498 += 1, R13454 += 1 };
  s0 -> s1 [76, 65535] { R13498 += 1, R13454 += 1 };
  s1 -> s1 [0, 69] { R13498 += 1, R13454 += 1 };
  s1 -> s3 [70, 70] { R13498 += 1, R13454 += 1 };
  s1 -> s4 [70, 70] { R13498 += 1, R13454 += 1 };
  s1 -> s5 [75, 75] { R13498 += 1, R13454 += 1 };
  s1 -> s1 [76, 65535] { R13498 += 1, R13454 += 1 };
  s2 -> s1 [0, 69] { R13498 += 1, R13454 += 1 };
  s2 -> s2 [0, 65535] { R13498 += 1, R13453 += 1, R13454 += 1 };
  s2 -> s3 [70, 70] { R13498 += 1, R13454 += 1 };
  s2 -> s4 [70, 70] { R13498 += 1, R13454 += 1 };
  s2 -> s5 [75, 75] { R13498 += 1, R13454 += 1 };
  s2 -> s1 [76, 65535] { R13498 += 1, R13454 += 1 };
  s3 -> s3 [0, 70] { R13498 += 1, R13454 += 1 };
  s3 -> s7 [75, 75] { R13498 += 1, R13454 += 1 };
  s3 -> s3 [76, 65535] { R13498 += 1, R13454 += 1 };
  s5 -> s5 [0, 69] { R13498 += 1, R13454 += 1 };
  s5 -> s5 [0, 65535] { R13498 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R13498 += 1, R13454 += 1 };
  s5 -> s8 [70, 70] { R13498 += 1, R13454 += 1 };
  s5 -> s5 [75, 65535] { R13498 += 1, R13454 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R13498 += 1, R13454 += 1 };
  s7 -> s7 [0, 65535] { R13498 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R13498 += 1, R13454 += 1 };
  s8 -> s8 [0, 65535] { R13498 += 1 };
  s8 -> s6 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R13500 += 1, R13456 += 1, R83 += 1 };
  s0 -> s0 [0, 65535] { R13499 += 1, R13500 += 1 };
  s0 -> s2 [0, 65535] { R13500 += 1, R13455 += 1, R13456 += 1 };
  s0 -> s3 [70, 70] { R13500 += 1, R13456 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R13500 += 1, R13456 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R13500 += 1, R13456 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R13500 += 1, R13456 += 1, R83 += 1 };
  s1 -> s1 [0, 65535] { R13500 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R13500 += 1, R13456 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R13500 += 1, R13456 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R13500 += 1, R13456 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R13500 += 1, R13456 += 1, R83 += 1 };
  s2 -> s2 [0, 65535] { R13500 += 1, R13455 += 1, R13456 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R13500 += 1, R13456 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R13500 += 1, R13456 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R13500 += 1, R13456 += 1, R83 += 1 };
  s3 -> s3 [0, 65535] { R13500 += 1, R13456 += 1, R83 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R13500 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13500 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13500 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R13502 += 1, R13458 += 1, R85 += 1 };
  s0 -> s2 [0, 65535] { R13502 += 1, R13457 += 1, R13458 += 1 };
  s0 -> s0 [0, 65535] { R13501 += 1, R13502 += 1 };
  s0 -> s3 [70, 70] { R13502 += 1, R13458 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R13502 += 1, R13458 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R13502 += 1, R13458 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R13502 += 1, R13458 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R13502 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R13502 += 1, R13458 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R13502 += 1, R13458 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R13502 += 1, R13458 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R13502 += 1, R13458 += 1, R85 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R13502 += 1, R13457 += 1, R13458 += 1 };
  s2 -> s3 [70, 70] { R13502 += 1, R13458 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R13502 += 1, R13458 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R13502 += 1, R13458 += 1, R85 += 1 };
  s3 -> s3 [0, 65535] { R13502 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R13502 += 1 };
  s4 -> s4 [0, 65535] { R13502 += 1, R13458 += 1, R85 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R13502 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R13504 += 1, R13460 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R13504 += 1, R13460 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [0, 65535] { R13504 += 1, R13459 += 1, R13460 += 1 };
  s0 -> s0 [0, 65535] { R13503 += 1, R13504 += 1 };
  s0 -> s4 [70, 70] { R13504 += 1, R13460 += 1, R87 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R13504 += 1, R13460 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R13504 += 1, R13460 += 1, R87 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R13504 += 1, R13460 += 1, R88 += 1 };
  s0 -> s1 [71, 74] { R13504 += 1, R13460 += 1, R88 += 1 };
  s0 -> s2 [71, 65535] { R13504 += 1, R13460 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R13504 += 1, R13460 += 1, R88 += 1 };
  s0 -> s1 [76, 65535] { R13504 += 1, R13460 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R13504 += 1, R13460 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R13504 += 1, R13460 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R13504 += 1, R13460 += 1, R88 += 1 };
  s1 -> s1 [71, 74] { R13504 += 1, R13460 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R13504 += 1, R13460 += 1, R88 += 1 };
  s1 -> s1 [76, 65535] { R13504 += 1, R13460 += 1, R88 += 1 };
  s2 -> s1 [0, 69] { R13504 += 1, R13460 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R13504 += 1, R13460 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R13504 += 1, R13460 += 1, R87 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R13504 += 1, R13460 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R13504 += 1, R13460 += 1, R87 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R13504 += 1, R13460 += 1, R88 += 1 };
  s2 -> s1 [71, 74] { R13504 += 1, R13460 += 1, R88 += 1 };
  s2 -> s2 [71, 65535] { R13504 += 1, R13460 += 1, R87 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R13504 += 1, R13460 += 1, R88 += 1 };
  s2 -> s1 [76, 65535] { R13504 += 1, R13460 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R13504 += 1, R13460 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R13504 += 1, R13460 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R13504 += 1, R13459 += 1, R13460 += 1 };
  s3 -> s4 [70, 70] { R13504 += 1, R13460 += 1, R87 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R13504 += 1, R13460 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R13504 += 1, R13460 += 1, R87 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R13504 += 1, R13460 += 1, R88 += 1 };
  s3 -> s1 [71, 74] { R13504 += 1, R13460 += 1, R88 += 1 };
  s3 -> s2 [71, 65535] { R13504 += 1, R13460 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R13504 += 1, R13460 += 1, R88 += 1 };
  s3 -> s1 [76, 65535] { R13504 += 1, R13460 += 1, R88 += 1 };
  s6 -> s7 [0, 74] { R13504 += 1, R13460 += 1, R88 += 1 };
  s6 -> s6 [0, 65535] { R13504 += 1, R13460 += 1, R87 += 1, R88 += 1 };
  s6 -> s11 [75, 75] { R13504 += 1, R13460 += 1, R88 += 1 };
  s6 -> s7 [76, 65535] { R13504 += 1, R13460 += 1, R88 += 1 };
  s7 -> s7 [0, 74] { R13504 += 1, R13460 += 1, R88 += 1 };
  s7 -> s11 [75, 75] { R13504 += 1, R13460 += 1, R88 += 1 };
  s7 -> s7 [76, 65535] { R13504 += 1, R13460 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R13504 += 1, R13460 += 1, R88 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R13504 += 1 };
  s8 -> s10 [70, 70] { R13504 += 1, R13460 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R13504 += 1, R13460 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R13504 += 1, R13460 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R13504 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R13504 += 1, R13460 += 1, R88 += 1 };
  s11 -> s12 [0, 65535] { R13504 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R13504 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R13506 += 1, R13462 += 1, R91 += 1, R92 += 1 };
  s0 -> s2 [0, 65535] { R13506 += 1, R13461 += 1, R13462 += 1 };
  s0 -> s0 [0, 65535] { R13505 += 1, R13506 += 1 };
  s0 -> s3 [70, 70] { R13506 += 1, R13462 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R13506 += 1, R13462 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R13506 += 1, R13462 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R13506 += 1, R13462 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 65535] { R13506 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R13506 += 1, R13462 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R13506 += 1, R13462 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R13506 += 1, R13462 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R13506 += 1, R13462 += 1, R91 += 1, R92 += 1 };
  s2 -> s2 [0, 65535] { R13506 += 1, R13461 += 1, R13462 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R13506 += 1, R13462 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R13506 += 1, R13462 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R13506 += 1, R13462 += 1, R91 += 1, R92 += 1 };
  s3 -> s3 [0, 65535] { R13506 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13506 += 1, R13462 += 1, R91 += 1, R92 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R13506 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13506 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R13508 += 1, R13464 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s2 [0, 69] { R13508 += 1, R13464 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s3 [0, 65535] { R13508 += 1, R13463 += 1, R13464 += 1 };
  s0 -> s0 [0, 65535] { R13507 += 1, R13508 += 1 };
  s0 -> s4 [70, 70] { R13508 += 1, R13464 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s5 [70, 70] { R13508 += 1, R13464 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s6 [70, 70] { R13508 += 1, R13464 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s7 [70, 70] { R13508 += 1, R13464 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s1 [71, 65535] { R13508 += 1, R13464 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s2 [71, 65535] { R13508 += 1, R13464 += 1, R10159 += 1, R10160 += 1 };
  s1 -> s1 [0, 69] { R13508 += 1, R13464 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s11 [0, 69] { R13508 += 1, R13464 += 1 };
  s1 -> s5 [70, 70] { R13508 += 1, R13464 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s12 [70, 70] { R13508 += 1, R13464 += 1 };
  s1 -> s8 [70, 70] { R13508 += 1, R13464 += 1 };
  s1 -> s7 [70, 70] { R13508 += 1, R13464 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s1 [71, 65535] { R13508 += 1, R13464 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s11 [71, 65535] { R13508 += 1, R13464 += 1 };
  s2 -> s1 [0, 69] { R13508 += 1, R13464 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s2 [0, 69] { R13508 += 1, R13464 += 1, R10159 += 1, R10160 += 1 };
  s2 -> s4 [70, 70] { R13508 += 1, R13464 += 1, R10159 += 1, R10160 += 1 };
  s2 -> s5 [70, 70] { R13508 += 1, R13464 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s6 [70, 70] { R13508 += 1, R13464 += 1, R10159 += 1, R10160 += 1 };
  s2 -> s7 [70, 70] { R13508 += 1, R13464 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s1 [71, 65535] { R13508 += 1, R13464 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s2 [71, 65535] { R13508 += 1, R13464 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s1 [0, 69] { R13508 += 1, R13464 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s2 [0, 69] { R13508 += 1, R13464 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s3 [0, 65535] { R13508 += 1, R13463 += 1, R13464 += 1 };
  s3 -> s4 [70, 70] { R13508 += 1, R13464 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s5 [70, 70] { R13508 += 1, R13464 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s6 [70, 70] { R13508 += 1, R13464 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s7 [70, 70] { R13508 += 1, R13464 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s1 [71, 65535] { R13508 += 1, R13464 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s2 [71, 65535] { R13508 += 1, R13464 += 1, R10159 += 1, R10160 += 1 };
  s4 -> s4 [0, 65535] { R13508 += 1, R13464 += 1, R10159 += 1, R10160 += 1 };
  s4 -> s5 [0, 65535] { R13508 += 1, R13464 += 1, R10160 += 1, R10161 += 1 };
  s5 -> s5 [0, 65535] { R13508 += 1, R13464 += 1, R10160 += 1, R10161 += 1 };
  s5 -> s8 [0, 65535] { R13508 += 1, R13464 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R13508 += 1, R13464 += 1 };
  s8 -> s10 [0, 65535] { R13508 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R13508 += 1 };
  s11 -> s11 [0, 69] { R13508 += 1, R13464 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R13508 += 1 };
  s11 -> s12 [70, 70] { R13508 += 1, R13464 += 1 };
  s11 -> s8 [70, 70] { R13508 += 1, R13464 += 1 };
  s11 -> s11 [71, 65535] { R13508 += 1, R13464 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R13508 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R13510 += 1, R13466 += 1, R12955 += 1, R12956 += 1 };
  s0 -> s2 [0, 69] { R13510 += 1, R13466 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s0 -> s0 [0, 65535] { R13509 += 1, R13510 += 1 };
  s0 -> s3 [0, 65535] { R13510 += 1, R13465 += 1, R13466 += 1 };
  s0 -> s4 [70, 70] { R13510 += 1, R13466 += 1, R12955 += 1, R12956 += 1 };
  s0 -> s5 [70, 70] { R13510 += 1, R13466 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s0 -> s6 [70, 70] { R13510 += 1, R13466 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s0 -> s7 [70, 70] { R13510 += 1, R13466 += 1, R12955 += 1, R12956 += 1 };
  s0 -> s1 [71, 65535] { R13510 += 1, R13466 += 1, R12955 += 1, R12956 += 1 };
  s0 -> s2 [71, 65535] { R13510 += 1, R13466 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s1 -> s1 [0, 69] { R13510 += 1, R13466 += 1, R12955 += 1, R12956 += 1 };
  s1 -> s2 [0, 69] { R13510 += 1, R13466 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s1 -> s4 [70, 70] { R13510 += 1, R13466 += 1, R12955 += 1, R12956 += 1 };
  s1 -> s5 [70, 70] { R13510 += 1, R13466 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s1 -> s6 [70, 70] { R13510 += 1, R13466 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s1 -> s7 [70, 70] { R13510 += 1, R13466 += 1, R12955 += 1, R12956 += 1 };
  s1 -> s1 [71, 65535] { R13510 += 1, R13466 += 1, R12955 += 1, R12956 += 1 };
  s1 -> s2 [71, 65535] { R13510 += 1, R13466 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s2 -> s2 [0, 69] { R13510 += 1, R13466 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R13510 += 1 };
  s2 -> s5 [70, 70] { R13510 += 1, R13466 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s2 -> s6 [70, 70] { R13510 += 1, R13466 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s2 -> s2 [71, 65535] { R13510 += 1, R13466 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s3 -> s1 [0, 69] { R13510 += 1, R13466 += 1, R12955 += 1, R12956 += 1 };
  s3 -> s2 [0, 69] { R13510 += 1, R13466 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s3 -> s3 [0, 65535] { R13510 += 1, R13465 += 1, R13466 += 1 };
  s3 -> s4 [70, 70] { R13510 += 1, R13466 += 1, R12955 += 1, R12956 += 1 };
  s3 -> s5 [70, 70] { R13510 += 1, R13466 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s3 -> s6 [70, 70] { R13510 += 1, R13466 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s3 -> s7 [70, 70] { R13510 += 1, R13466 += 1, R12955 += 1, R12956 += 1 };
  s3 -> s1 [71, 65535] { R13510 += 1, R13466 += 1, R12955 += 1, R12956 += 1 };
  s3 -> s2 [71, 65535] { R13510 += 1, R13466 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R13510 += 1, R13466 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s5 -> s9 [0, 65535] { R13510 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R13510 += 1 };
  s7 -> s5 [0, 65535] { R13510 += 1, R13466 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s7 -> s7 [0, 65535] { R13510 += 1, R13466 += 1, R12955 += 1, R12956 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R13510 += 1 };
  accepting s8, s5, s2, s9, s6;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R13512 += 1, R13468 += 1, R13404 += 1, R13405 += 1, R13406 += 1 };
  s0 -> s2 [0, 69] { R13512 += 1, R13468 += 1, R13403 += 1, R13404 += 1 };
  s0 -> s0 [0, 65535] { R13511 += 1, R13512 += 1 };
  s0 -> s3 [0, 65535] { R13512 += 1, R13467 += 1, R13468 += 1 };
  s0 -> s4 [70, 70] { R13512 += 1, R13468 += 1, R13404 += 1, R13405 += 1, R13406 += 1 };
  s0 -> s5 [70, 70] { R13512 += 1, R13468 += 1, R13404 += 1, R13405 += 1, R13406 += 1 };
  s0 -> s6 [70, 70] { R13512 += 1, R13468 += 1, R13403 += 1, R13404 += 1 };
  s0 -> s7 [70, 70] { R13512 += 1, R13468 += 1, R13403 += 1, R13404 += 1 };
  s0 -> s1 [71, 65535] { R13512 += 1, R13468 += 1, R13404 += 1, R13405 += 1, R13406 += 1 };
  s0 -> s2 [71, 65535] { R13512 += 1, R13468 += 1, R13403 += 1, R13404 += 1 };
  s1 -> s1 [0, 69] { R13512 += 1, R13468 += 1, R13404 += 1, R13405 += 1, R13406 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s1 [0, 65535] { R13512 += 1 };
  s1 -> s4 [70, 70] { R13512 += 1, R13468 += 1, R13404 += 1, R13405 += 1, R13406 += 1 };
  s1 -> s5 [70, 70] { R13512 += 1, R13468 += 1, R13404 += 1, R13405 += 1, R13406 += 1 };
  s1 -> s1 [71, 65535] { R13512 += 1, R13468 += 1, R13404 += 1, R13405 += 1, R13406 += 1 };
  s2 -> s1 [0, 69] { R13512 += 1, R13468 += 1, R13404 += 1, R13405 += 1, R13406 += 1 };
  s2 -> s2 [0, 69] { R13512 += 1, R13468 += 1, R13403 += 1, R13404 += 1 };
  s2 -> s4 [70, 70] { R13512 += 1, R13468 += 1, R13404 += 1, R13405 += 1, R13406 += 1 };
  s2 -> s5 [70, 70] { R13512 += 1, R13468 += 1, R13404 += 1, R13405 += 1, R13406 += 1 };
  s2 -> s6 [70, 70] { R13512 += 1, R13468 += 1, R13403 += 1, R13404 += 1 };
  s2 -> s7 [70, 70] { R13512 += 1, R13468 += 1, R13403 += 1, R13404 += 1 };
  s2 -> s1 [71, 65535] { R13512 += 1, R13468 += 1, R13404 += 1, R13405 += 1, R13406 += 1 };
  s2 -> s2 [71, 65535] { R13512 += 1, R13468 += 1, R13403 += 1, R13404 += 1 };
  s3 -> s1 [0, 69] { R13512 += 1, R13468 += 1, R13404 += 1, R13405 += 1, R13406 += 1 };
  s3 -> s2 [0, 69] { R13512 += 1, R13468 += 1, R13403 += 1, R13404 += 1 };
  s3 -> s3 [0, 65535] { R13512 += 1, R13467 += 1, R13468 += 1 };
  s3 -> s4 [70, 70] { R13512 += 1, R13468 += 1, R13404 += 1, R13405 += 1, R13406 += 1 };
  s3 -> s5 [70, 70] { R13512 += 1, R13468 += 1, R13404 += 1, R13405 += 1, R13406 += 1 };
  s3 -> s6 [70, 70] { R13512 += 1, R13468 += 1, R13403 += 1, R13404 += 1 };
  s3 -> s7 [70, 70] { R13512 += 1, R13468 += 1, R13403 += 1, R13404 += 1 };
  s3 -> s1 [71, 65535] { R13512 += 1, R13468 += 1, R13404 += 1, R13405 += 1, R13406 += 1 };
  s3 -> s2 [71, 65535] { R13512 += 1, R13468 += 1, R13403 += 1, R13404 += 1 };
  s4 -> s9 [0, 65535] { R13512 += 1 };
  s4 -> s4 [0, 65535] { R13512 += 1, R13468 += 1, R13404 += 1, R13405 += 1, R13406 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R13512 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s4 [0, 65535] { R13512 += 1, R13468 += 1, R13404 += 1, R13405 += 1, R13406 += 1 };
  s6 -> s6 [0, 65535] { R13512 += 1, R13468 += 1, R13403 += 1, R13404 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R13512 += 1 };
  s9 -> s8 [0, 65535];
  accepting s4, s8, s5, s9, s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R13430 && R3 = R13512 && R23 - R13512 = -1 && R24 = R13512 && R25 - R13512 = -1 && R26 = R13512 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R12960 + -1*R12956 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R12960 + -1*R12956 - R66 = 0 && R55 + R96 + R93 + -1*R12962 + -1*R12958 - R68 = 0 && R65 + R12959 + R12955 = 0 && R67 + R12961 + R12957 = 0 && R13429 = 0 && R13453 = 0 && R13454 = 0 && R13459 = 0 && R13460 = 0 && R13463 = 0 && R13464 = 0 && R13465 = 0 && R13466 = 0 && R13467 = 0 && R13468 = 0 && R13469 = 0 && R13470 = R13512 && R13471 = 0 && R13472 = R13512 && R13473 = 0 && R13474 = R13512 && R13475 = 0 && R13476 = R13512 && R13477 = 0 && R13478 = R13512 && R13479 = 0 && R13480 = R13512 && R13481 = 0 && R13482 = R13512 && R13483 = 0 && R13484 = R13512 && R13485 = 0 && R13486 = R13512 && R13487 = 0 && R13488 = R13512 && R13489 = 0 && R13490 = R13512 && R13491 = 0 && R13492 = R13512 && R13493 = 0 && R13494 = R13512 && R13495 = 0 && R13496 = R13512 && R13497 = 0 && R13498 = R13512 && R13499 = 0 && R13500 = R13512 && R13501 = 0 && R13502 = R13512 && R13503 = 0 && R13504 = R13512 && R13505 = 0 && R13506 = R13512 && R13507 = 0 && R13508 = R13512 && R13509 = 0 && R13510 = R13512 && R13511 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R10164 + R10161 < 1 && -1*R12960 + -1*R12956 - R66 < 1 && -1*R12962 + -1*R12958 - R68 < 1 && -1 < R13430 && 0 < R13512 && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R12960 + -1*R12956 - R66 = 0 || R66 + R12960 + R12956 < 1) && (R59 + R10162 + R10159 != 0 || R60 + R10163 + R10160 + -1*R12960 + -1*R12956 - R66 = 0 || R66 + R12960 + R12956 < 1) && (R66 + R12960 + R12956 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R12962 + R12958 < 1) && (R53 + R94 + R91 = 0 || R68 + R12962 + R12958 < 1))) && (R66 + R12960 + R12956 != 0 || ((R59 + R10162 + R10159 != 0 || R60 + R10163 + R10160 = 0 || R68 + R12962 + R12958 < 1) && (R59 + R10162 + R10159 = 0 || R68 + R12962 + R12958 < 1))) && (R66 + R12960 + R12956 != 0 || ((R73 + R13408 + R13403 != 0 || R74 + R13409 + R13404 = 0 || R68 + R12962 + R12958 < 1) && (R73 + R13408 + R13403 = 0 || R68 + R12962 + R12958 < 1))) && (R68 + R12962 + R12958 != 0 || R77 + R13412 + R13407 = 0 || (R75 + R13410 + R13405 = 0 && R76 + R13411 + R13406 = 0)) && (R73 + R13408 + R13403 != 0 || R66 + R12960 + R12956 + -1*R13409 + -1*R13404 - R74 = 0 || R66 + R12960 + R12956 < 1) && (R75 + R13410 + R13405 != 0 || R68 + R12962 + R12958 + -1*R13411 + -1*R13406 - R76 = 0 || R68 + R12962 + R12958 < 1) && (R13413 != 0 || R13414 = R13430 || (R20 = 0 && R13430 = 0)) && (R13415 != 0 || R13416 = R13430 || (R20 = 0 && R13430 = 0)) && (R13417 != 0 || R13418 = R13430 || (R20 = 0 && R13430 = 0)) && (R13419 != 0 || R13420 = R13430 || (R20 = 0 && R13430 = 0)) && (R13421 != 0 || R13422 = R13430 || (R20 = 0 && R13430 = 0)) && (R13423 != 0 || R13424 = R13430 || (R20 = 0 && R13430 = 0)) && (R13425 != 0 || R13426 = R13430 || (R20 = 0 && R13430 = 0)) && (R13427 != 0 || R13428 = R13430 || (R20 = 0 && R13430 = 0)) && (R13431 != 0 || R13430 = R13432 || (R20 = 0 && R13430 = 0)) && (R21 = 0 || (R13451 = 0 && R13452 = 0)) && (R21 = 0 || (R13455 = 0 && R13456 = 0)) && (R21 = 0 || (R13457 = 0 && R13458 = 0)) && (R21 = 0 || (R13461 = 0 && R13462 = 0)) && (R22 = 0 || (R13433 = 0 && R13434 = 0)) && (R22 = 0 || (R13435 = 0 && R13436 = 0)) && (R22 = 0 || (R13437 = 0 && R13438 = 0)) && (R22 = 0 || (R13439 = 0 && R13440 = 0)) && (R22 = 0 || (R13441 = 0 && R13442 = 0)) && (R22 = 0 || (R13443 = 0 && R13444 = 0)) && (R22 = 0 || (R13445 = 0 && R13446 = 0)) && (R22 = 0 || (R13447 = 0 && R13448 = 0)) && (R22 = 0 || (R13449 = 0 && R13450 = 0)) && (R53 + R94 + R91 = 0 || R66 + R12960 + R12956 < 1) && (R59 + R10162 + R10159 = 0 || R66 + R12960 + R12956 < 1) && (R73 + R13408 + R13403 = 0 || R66 + R12960 + R12956 < 1) && (R75 + R13410 + R13405 = 0 || R68 + R12962 + R12958 < 1) && (R13413 = 0 || (R20 = 0 && R13430 = 0)) && (R13415 = 0 || (R20 = 0 && R13430 = 0)) && (R13417 = 0 || (R20 = 0 && R13430 = 0)) && (R13419 = 0 || (R20 = 0 && R13430 = 0)) && (R13421 = 0 || (R20 = 0 && R13430 = 0)) && (R13423 = 0 || (R20 = 0 && R13430 = 0)) && (R13425 = 0 || (R20 = 0 && R13430 = 0)) && (R13427 = 0 || (R20 = 0 && R13430 = 0)) && (R13431 = 0 || (R20 = 0 && R13430 = 0));
// End of Parikh automata intersection problem
