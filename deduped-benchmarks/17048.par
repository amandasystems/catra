// Parikh automata intersection problem, generated by OSTRICH+
counter int R12, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R3451, R3452, R3453, R3454, R3455, R3456, R4, R45, R47, R49, R5, R50, R53, R54, R55, R5689, R5690, R5691, R5692, R5693, R5694, R5695, R5696, R59, R60, R6027, R6028, R6029, R6030, R6031, R6032, R6033, R6034, R6035, R6036, R6037, R6038, R6039, R6040, R6041, R6042, R6043, R6044, R6045, R6046, R6047, R6048, R6049, R6050, R6051, R6052, R6053, R6054, R6055, R6056, R6057, R6058, R6059, R6060, R6061, R6062, R6063, R6064, R6065, R6066, R6067, R6068, R6069, R6070, R6071, R6072, R6073, R6074, R6075, R6076, R6077, R6078, R6079, R6080, R6081, R6082, R6083, R6084, R6085, R6086, R6087, R6088, R6089, R6090, R6091, R6092, R6093, R6094, R6095, R6096, R6097, R6098, R6099, R61, R6100, R6101, R6102, R6103, R6104, R6105, R6106, R6107, R6108, R6109, R6110, R6111, R6112, R6113, R6114, R6115, R6116, R6117, R6118, R6119, R6120, R6121, R6122, R6123, R6124, R6125, R6126, R6127, R6128, R6129, R6130, R6131, R6132, R6133, R6134, R6135, R6136, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R6057 += 1, R6058 += 1 };
  s0 -> s1 [0, 65535] { R6058 += 1, R22 += 1 };
  s1 -> s1 [0, 65535] { R6058 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R6060 += 1 };
  s0 -> s0 [0, 65535] { R6059 += 1, R6060 += 1 };
  s0 -> s2 [70, 70] { R6060 += 1 };
  s0 -> s3 [70, 70] { R6060 += 1 };
  s0 -> s1 [76, 65535] { R6060 += 1 };
  s1 -> s1 [0, 69] { R6060 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6060 += 1 };
  s1 -> s3 [70, 70] { R6060 += 1 };
  s1 -> s1 [76, 65535] { R6060 += 1 };
  s2 -> s2 [0, 70] { R6060 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R6060 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R6062 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R6061 += 1, R6062 += 1 };
  s0 -> s2 [70, 70] { R6062 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R6062 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R6062 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R6062 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6062 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R6062 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R6062 += 1, R45 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R6062 += 1, R45 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R6064 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R6063 += 1, R6064 += 1 };
  s0 -> s2 [70, 70] { R6064 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R6064 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R6064 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R6064 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6064 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R6064 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R6064 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R6064 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R6066 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R6065 += 1, R6066 += 1 };
  s0 -> s2 [70, 70] { R6066 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R6066 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R6066 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R6066 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6066 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R6066 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R6066 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535] { R6066 += 1, R49 += 1, R50 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R6068 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R6067 += 1, R6068 += 1 };
  s0 -> s2 [70, 70] { R6068 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R6068 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R6068 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R6068 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6068 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R6068 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R6068 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535] { R6068 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R6070 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R6069 += 1, R6070 += 1 };
  s0 -> s2 [70, 70] { R6070 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R6070 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R6070 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R6070 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6070 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R6070 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R6070 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R6070 += 1, R59 += 1, R60 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R6072 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R6071 += 1, R6072 += 1 };
  s0 -> s2 [70, 70] { R6072 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R6072 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R6072 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R6072 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6072 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R6072 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R6072 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R6072 += 1, R65 += 1, R66 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R6074 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R6073 += 1, R6074 += 1 };
  s0 -> s2 [70, 70] { R6074 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R6074 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R6074 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R6074 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6074 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R6074 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R6074 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R6074 += 1, R73 += 1, R74 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R6094 += 1 };
  s0 -> s0 [0, 65535] { R6093 += 1, R6094 += 1 };
  s0 -> s2 [70, 70] { R6094 += 1 };
  s0 -> s1 [71, 65535] { R6094 += 1 };
  s1 -> s1 [0, 69] { R6094 += 1 };
  s1 -> s2 [70, 70] { R6094 += 1 };
  s1 -> s1 [71, 65535] { R6094 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R6094 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R6095 += 1, R6096 += 1 };
  s0 -> s1 [0, 65535] { R6096 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R6096 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R6098 += 1 };
  s0 -> s0 [0, 65535] { R6097 += 1, R6098 += 1 };
  s0 -> s2 [0, 65535] { R6098 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R6098 += 1 };
  s0 -> s1 [71, 65535] { R6098 += 1 };
  s1 -> s1 [0, 69] { R6098 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R6098 += 1 };
  s1 -> s1 [71, 65535] { R6098 += 1 };
  s2 -> s1 [0, 69] { R6098 += 1 };
  s2 -> s2 [0, 65535] { R6098 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R6098 += 1 };
  s2 -> s1 [71, 65535] { R6098 += 1 };
  s3 -> s3 [0, 65535] { R6098 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R6100 += 1, R6038 += 1 };
  s0 -> s0 [0, 65535] { R6099 += 1, R6100 += 1 };
  s0 -> s2 [0, 65535] { R6100 += 1, R6037 += 1, R6038 += 1 };
  s0 -> s1 [71, 65535] { R6100 += 1, R6038 += 1 };
  s1 -> s1 [0, 69] { R6100 += 1, R6038 += 1 };
  s1 -> s1 [0, 65535] { R6100 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R6100 += 1, R6038 += 1 };
  s2 -> s1 [0, 69] { R6100 += 1, R6038 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R6100 += 1, R6037 += 1, R6038 += 1 };
  s2 -> s1 [71, 65535] { R6100 += 1, R6038 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R6102 += 1, R6039 += 1, R6040 += 1 };
  s0 -> s0 [0, 65535] { R6101 += 1, R6102 += 1 };
  s0 -> s2 [0, 65535] { R6102 += 1, R6040 += 1, R20 += 1 };
  s1 -> s1 [0, 65535] { R6102 += 1, R6039 += 1, R6040 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R6102 += 1, R6040 += 1, R20 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R6102 += 1 };
  s2 -> s2 [0, 65535] { R6102 += 1, R6040 += 1, R20 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R6102 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R6104 += 1, R6042 += 1 };
  s0 -> s2 [0, 65535] { R6104 += 1, R6041 += 1, R6042 += 1 };
  s0 -> s0 [0, 65535] { R6103 += 1, R6104 += 1 };
  s0 -> s1 [75, 65535] { R6104 += 1, R6042 += 1 };
  s1 -> s1 [0, 70] { R6104 += 1, R6042 += 1 };
  s1 -> s1 [0, 65535] { R6104 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R6104 += 1, R6042 += 1 };
  s2 -> s1 [0, 70] { R6104 += 1, R6042 += 1 };
  s2 -> s2 [0, 65535] { R6104 += 1, R6041 += 1, R6042 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R6104 += 1, R6042 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R6106 += 1, R6044 += 1, R84 += 1 };
  s0 -> s2 [0, 65535] { R6106 += 1, R6043 += 1, R6044 += 1 };
  s0 -> s0 [0, 65535] { R6105 += 1, R6106 += 1 };
  s1 -> s4 [0, 65535] { R6106 += 1 };
  s1 -> s1 [0, 65535] { R6106 += 1, R6044 += 1, R84 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R6106 += 1, R6044 += 1, R84 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R6106 += 1, R6043 += 1, R6044 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R6106 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R6108 += 1, R6046 += 1 };
  s0 -> s2 [0, 65535] { R6108 += 1, R6045 += 1, R6046 += 1 };
  s0 -> s3 [0, 65535] { R6108 += 1, R6046 += 1, R86 += 1 };
  s0 -> s0 [0, 65535] { R6107 += 1, R6108 += 1 };
  s0 -> s1 [76, 65535] { R6108 += 1, R6046 += 1 };
  s1 -> s1 [0, 74] { R6108 += 1, R6046 += 1 };
  s1 -> s1 [0, 65535] { R6108 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R6108 += 1, R6046 += 1 };
  s2 -> s1 [0, 74] { R6108 += 1, R6046 += 1 };
  s2 -> s2 [0, 65535] { R6108 += 1, R6045 += 1, R6046 += 1 };
  s2 -> s3 [0, 65535] { R6108 += 1, R6046 += 1, R86 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [76, 65535] { R6108 += 1, R6046 += 1 };
  s3 -> s1 [0, 74] { R6108 += 1, R6046 += 1 };
  s3 -> s4 [0, 65535] { R6108 += 1 };
  s3 -> s3 [0, 65535] { R6108 += 1, R6046 += 1, R86 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [76, 65535] { R6108 += 1, R6046 += 1 };
  s4 -> s4 [0, 65535] { R6108 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R6110 += 1, R6047 += 1, R6048 += 1 };
  s0 -> s2 [0, 65535] { R6110 += 1, R6048 += 1 };
  s0 -> s0 [0, 65535] { R6109 += 1, R6110 += 1 };
  s0 -> s3 [0, 65535] { R6110 += 1, R6048 += 1, R90 += 1 };
  s1 -> s1 [0, 65535] { R6110 += 1, R6047 += 1, R6048 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R6110 += 1, R6048 += 1 };
  s1 -> s3 [0, 65535] { R6110 += 1, R6048 += 1, R90 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R6110 += 1, R6048 += 1 };
  s2 -> s5 [0, 65535] { R6110 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R6110 += 1, R6048 += 1 };
  s3 -> s5 [0, 65535] { R6110 += 1 };
  s3 -> s3 [0, 65535] { R6110 += 1, R6048 += 1, R90 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R6110 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R6111 += 1, R6112 += 1 };
  s0 -> s1 [0, 65535] { R6112 += 1, R6050 += 1, R94 += 1, R95 += 1 };
  s0 -> s2 [0, 65535] { R6112 += 1, R6050 += 1, R95 += 1, R96 += 1 };
  s0 -> s3 [0, 65535] { R6112 += 1, R6049 += 1, R6050 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R6112 += 1, R6050 += 1, R94 += 1, R95 += 1 };
  s1 -> s2 [0, 65535] { R6112 += 1, R6050 += 1, R95 += 1, R96 += 1 };
  s1 -> s5 [0, 65535] { R6112 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R6112 += 1, R6050 += 1, R95 += 1, R96 += 1 };
  s2 -> s5 [0, 65535] { R6112 += 1 };
  s2 -> s6 [0, 65535] { R6112 += 1, R6050 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R6112 += 1, R6050 += 1, R94 += 1, R95 += 1 };
  s3 -> s2 [0, 65535] { R6112 += 1, R6050 += 1, R95 += 1, R96 += 1 };
  s3 -> s3 [0, 65535] { R6112 += 1, R6049 += 1, R6050 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R6112 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R6112 += 1 };
  s6 -> s6 [0, 65535] { R6112 += 1, R6050 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R6114 += 1, R6052 += 1, R3455 += 1 };
  s0 -> s2 [0, 65535] { R6114 += 1, R6051 += 1, R6052 += 1 };
  s0 -> s0 [0, 65535] { R6113 += 1, R6114 += 1 };
  s0 -> s1 [0, 65535] { R6114 += 1, R6052 += 1 };
  s0 -> s1 [76, 65535] { R6114 += 1, R6052 += 1, R3455 += 1 };
  s1 -> s1 [0, 74] { R6114 += 1, R6052 += 1, R3455 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R6114 += 1, R6052 += 1 };
  s1 -> s4 [0, 65535] { R6114 += 1 };
  s1 -> s1 [76, 65535] { R6114 += 1, R6052 += 1, R3455 += 1 };
  s2 -> s1 [0, 74] { R6114 += 1, R6052 += 1, R3455 += 1 };
  s2 -> s2 [0, 65535] { R6114 += 1, R6051 += 1, R6052 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R6114 += 1, R6052 += 1 };
  s2 -> s1 [76, 65535] { R6114 += 1, R6052 += 1, R3455 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R6114 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 74] { R6116 += 1, R6054 += 1, R5694 += 1, R5696 += 1 };
  s0 -> s2 [0, 65535] { R6116 += 1, R6053 += 1, R6054 += 1 };
  s0 -> s0 [0, 65535] { R6115 += 1, R6116 += 1 };
  s0 -> s3 [75, 75] { R6116 += 1, R6054 += 1, R5694 += 1, R5696 += 1 };
  s0 -> s1 [76, 65535] { R6116 += 1, R6054 += 1, R5694 += 1, R5696 += 1 };
  s1 -> s1 [0, 74] { R6116 += 1, R6054 += 1, R5694 += 1, R5696 += 1 };
  s1 -> s3 [75, 75] { R6116 += 1, R6054 += 1, R5694 += 1, R5696 += 1 };
  s1 -> s1 [76, 65535] { R6116 += 1, R6054 += 1, R5694 += 1, R5696 += 1 };
  s2 -> s1 [0, 74] { R6116 += 1, R6054 += 1, R5694 += 1, R5696 += 1 };
  s2 -> s2 [0, 65535] { R6116 += 1, R6053 += 1, R6054 += 1 };
  s2 -> s3 [75, 75] { R6116 += 1, R6054 += 1, R5694 += 1, R5696 += 1 };
  s2 -> s1 [76, 65535] { R6116 += 1, R6054 += 1, R5694 += 1, R5696 += 1 };
  s3 -> s4 [0, 65535] { R6116 += 1, R6054 += 1, R5694 += 1 };
  s3 -> s5 [0, 65535] { R6116 += 1, R6054 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R6116 += 1 };
  s3 -> s3 [0, 65535] { R6116 += 1, R6054 += 1, R5694 += 1, R5696 += 1 };
  s4 -> s4 [0, 65535] { R6116 += 1, R6054 += 1, R5694 += 1 };
  s4 -> s5 [0, 65535] { R6116 += 1, R6054 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R6116 += 1 };
  s5 -> s5 [0, 65535] { R6116 += 1, R6054 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R6116 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R6116 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R6118 += 1, R6056 += 1, R6033 += 1 };
  s0 -> s2 [0, 65535] { R6118 += 1, R6056 += 1 };
  s0 -> s3 [0, 65535] { R6118 += 1, R6055 += 1, R6056 += 1 };
  s0 -> s0 [0, 65535] { R6117 += 1, R6118 += 1 };
  s0 -> s4 [0, 65535] { R6118 += 1, R6056 += 1, R6033 += 1, R6035 += 1, R6036 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R6118 += 1, R6056 += 1, R6033 += 1 };
  s1 -> s2 [0, 65535] { R6118 += 1, R6056 += 1 };
  s1 -> s6 [0, 65535] { R6118 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R6118 += 1, R6056 += 1 };
  s2 -> s6 [0, 65535] { R6118 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R6118 += 1, R6056 += 1, R6033 += 1 };
  s3 -> s2 [0, 65535] { R6118 += 1, R6056 += 1 };
  s3 -> s3 [0, 65535] { R6118 += 1, R6055 += 1, R6056 += 1 };
  s3 -> s4 [0, 65535] { R6118 += 1, R6056 += 1, R6033 += 1, R6035 += 1, R6036 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R6118 += 1, R6056 += 1, R6033 += 1 };
  s4 -> s2 [0, 65535] { R6118 += 1, R6056 += 1 };
  s4 -> s6 [0, 65535] { R6118 += 1 };
  s4 -> s4 [0, 65535] { R6118 += 1, R6056 += 1, R6033 += 1, R6035 += 1, R6036 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6118 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R6120 += 1, R6076 += 1, R21 += 1 };
  s0 -> s2 [0, 65535] { R6120 += 1, R6075 += 1, R6076 += 1 };
  s0 -> s0 [0, 65535] { R6119 += 1, R6120 += 1 };
  s1 -> s4 [0, 65535] { R6120 += 1 };
  s1 -> s1 [0, 65535] { R6120 += 1, R6076 += 1, R21 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R6120 += 1, R6076 += 1, R21 += 1 };
  s2 -> s2 [0, 65535] { R6120 += 1, R6075 += 1, R6076 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R6120 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R6122 += 1, R6078 += 1 };
  s0 -> s2 [0, 65535] { R6122 += 1, R6077 += 1, R6078 += 1 };
  s0 -> s0 [0, 65535] { R6121 += 1, R6122 += 1 };
  s0 -> s3 [70, 70] { R6122 += 1, R6078 += 1 };
  s0 -> s4 [70, 70] { R6122 += 1, R6078 += 1 };
  s0 -> s5 [75, 75] { R6122 += 1, R6078 += 1 };
  s0 -> s1 [76, 65535] { R6122 += 1, R6078 += 1 };
  s1 -> s1 [0, 69] { R6122 += 1, R6078 += 1 };
  s1 -> s3 [70, 70] { R6122 += 1, R6078 += 1 };
  s1 -> s4 [70, 70] { R6122 += 1, R6078 += 1 };
  s1 -> s5 [75, 75] { R6122 += 1, R6078 += 1 };
  s1 -> s1 [76, 65535] { R6122 += 1, R6078 += 1 };
  s2 -> s1 [0, 69] { R6122 += 1, R6078 += 1 };
  s2 -> s2 [0, 65535] { R6122 += 1, R6077 += 1, R6078 += 1 };
  s2 -> s3 [70, 70] { R6122 += 1, R6078 += 1 };
  s2 -> s4 [70, 70] { R6122 += 1, R6078 += 1 };
  s2 -> s5 [75, 75] { R6122 += 1, R6078 += 1 };
  s2 -> s1 [76, 65535] { R6122 += 1, R6078 += 1 };
  s3 -> s3 [0, 70] { R6122 += 1, R6078 += 1 };
  s3 -> s8 [75, 75] { R6122 += 1, R6078 += 1 };
  s3 -> s3 [76, 65535] { R6122 += 1, R6078 += 1 };
  s5 -> s5 [0, 69] { R6122 += 1, R6078 += 1 };
  s5 -> s5 [0, 65535] { R6122 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R6122 += 1, R6078 += 1 };
  s5 -> s8 [70, 70] { R6122 += 1, R6078 += 1 };
  s5 -> s5 [75, 65535] { R6122 += 1, R6078 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R6122 += 1 };
  s8 -> s8 [0, 70] { R6122 += 1, R6078 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R6122 += 1 };
  s8 -> s8 [75, 65535] { R6122 += 1, R6078 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R6124 += 1, R6080 += 1, R83 += 1 };
  s0 -> s2 [0, 65535] { R6124 += 1, R6079 += 1, R6080 += 1 };
  s0 -> s0 [0, 65535] { R6123 += 1, R6124 += 1 };
  s0 -> s3 [70, 70] { R6124 += 1, R6080 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R6124 += 1, R6080 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R6124 += 1, R6080 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R6124 += 1, R6080 += 1, R83 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R6124 += 1 };
  s1 -> s3 [70, 70] { R6124 += 1, R6080 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R6124 += 1, R6080 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R6124 += 1, R6080 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R6124 += 1, R6080 += 1, R83 += 1 };
  s2 -> s2 [0, 65535] { R6124 += 1, R6079 += 1, R6080 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R6124 += 1, R6080 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R6124 += 1, R6080 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R6124 += 1, R6080 += 1, R83 += 1 };
  s3 -> s3 [0, 65535] { R6124 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R6124 += 1, R6080 += 1, R83 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R6124 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6124 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R6126 += 1, R6082 += 1, R85 += 1 };
  s0 -> s2 [0, 65535] { R6126 += 1, R6081 += 1, R6082 += 1 };
  s0 -> s0 [0, 65535] { R6125 += 1, R6126 += 1 };
  s0 -> s3 [70, 70] { R6126 += 1, R6082 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R6126 += 1, R6082 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R6126 += 1, R6082 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R6126 += 1, R6082 += 1, R85 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R6126 += 1 };
  s1 -> s3 [70, 70] { R6126 += 1, R6082 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R6126 += 1, R6082 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R6126 += 1, R6082 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R6126 += 1, R6082 += 1, R85 += 1 };
  s2 -> s2 [0, 65535] { R6126 += 1, R6081 += 1, R6082 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R6126 += 1, R6082 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R6126 += 1, R6082 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R6126 += 1, R6082 += 1, R85 += 1 };
  s3 -> s6 [0, 65535] { R6126 += 1 };
  s3 -> s3 [0, 65535] { R6126 += 1, R6082 += 1, R85 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R6126 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6126 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R6128 += 1, R6084 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R6128 += 1, R6084 += 1, R88 += 1 };
  s0 -> s3 [0, 65535] { R6128 += 1, R6083 += 1, R6084 += 1 };
  s0 -> s0 [0, 65535] { R6127 += 1, R6128 += 1 };
  s0 -> s4 [70, 70] { R6128 += 1, R6084 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R6128 += 1, R6084 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R6128 += 1, R6084 += 1, R87 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R6128 += 1, R6084 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [71, 74] { R6128 += 1, R6084 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R6128 += 1, R6084 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R6128 += 1, R6084 += 1, R88 += 1 };
  s0 -> s2 [76, 65535] { R6128 += 1, R6084 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R6128 += 1, R6084 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [0, 69] { R6128 += 1, R6084 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R6128 += 1, R6084 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R6128 += 1, R6084 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R6128 += 1, R6084 += 1, R87 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R6128 += 1, R6084 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [71, 74] { R6128 += 1, R6084 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R6128 += 1, R6084 += 1, R87 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R6128 += 1, R6084 += 1, R88 += 1 };
  s1 -> s2 [76, 65535] { R6128 += 1, R6084 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R6128 += 1, R6084 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R6128 += 1, R6084 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R6128 += 1, R6084 += 1, R88 += 1 };
  s2 -> s2 [71, 74] { R6128 += 1, R6084 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R6128 += 1, R6084 += 1, R88 += 1 };
  s2 -> s2 [76, 65535] { R6128 += 1, R6084 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R6128 += 1, R6084 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R6128 += 1, R6084 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R6128 += 1, R6083 += 1, R6084 += 1 };
  s3 -> s4 [70, 70] { R6128 += 1, R6084 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R6128 += 1, R6084 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R6128 += 1, R6084 += 1, R87 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R6128 += 1, R6084 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [71, 74] { R6128 += 1, R6084 += 1, R88 += 1 };
  s3 -> s1 [71, 65535] { R6128 += 1, R6084 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R6128 += 1, R6084 += 1, R88 += 1 };
  s3 -> s2 [76, 65535] { R6128 += 1, R6084 += 1, R88 += 1 };
  s4 -> s4 [0, 74] { R6128 += 1, R6084 += 1, R88 += 1 };
  s4 -> s10 [75, 75] { R6128 += 1, R6084 += 1, R88 += 1 };
  s4 -> s4 [76, 65535] { R6128 += 1, R6084 += 1, R88 += 1 };
  s6 -> s4 [0, 74] { R6128 += 1, R6084 += 1, R88 += 1 };
  s6 -> s6 [0, 65535] { R6128 += 1, R6084 += 1, R87 += 1, R88 += 1 };
  s6 -> s10 [75, 75] { R6128 += 1, R6084 += 1, R88 += 1 };
  s6 -> s4 [76, 65535] { R6128 += 1, R6084 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R6128 += 1, R6084 += 1, R88 += 1 };
  s8 -> s8 [0, 65535] { R6128 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R6128 += 1, R6084 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R6128 += 1, R6084 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R6128 += 1, R6084 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R6128 += 1, R6084 += 1, R88 += 1 };
  s10 -> s12 [0, 65535] { R6128 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R6128 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R6128 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R6130 += 1, R6086 += 1, R91 += 1, R92 += 1 };
  s0 -> s2 [0, 65535] { R6130 += 1, R6085 += 1, R6086 += 1 };
  s0 -> s0 [0, 65535] { R6129 += 1, R6130 += 1 };
  s0 -> s3 [70, 70] { R6130 += 1, R6086 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R6130 += 1, R6086 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R6130 += 1, R6086 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R6130 += 1, R6086 += 1, R91 += 1, R92 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R6130 += 1 };
  s1 -> s3 [70, 70] { R6130 += 1, R6086 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R6130 += 1, R6086 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R6130 += 1, R6086 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R6130 += 1, R6086 += 1, R91 += 1, R92 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R6130 += 1, R6085 += 1, R6086 += 1 };
  s2 -> s3 [70, 70] { R6130 += 1, R6086 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R6130 += 1, R6086 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R6130 += 1, R6086 += 1, R91 += 1, R92 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R6130 += 1, R6086 += 1, R91 += 1, R92 += 1 };
  s3 -> s6 [0, 65535] { R6130 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R6130 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6130 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R6132 += 1, R6088 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s2 [0, 69] { R6132 += 1, R6088 += 1, R3452 += 1 };
  s0 -> s3 [0, 69] { R6132 += 1, R6088 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s4 [0, 65535] { R6132 += 1, R6087 += 1, R6088 += 1 };
  s0 -> s0 [0, 65535] { R6131 += 1, R6132 += 1 };
  s0 -> s5 [70, 70] { R6132 += 1, R6088 += 1, R3452 += 1 };
  s0 -> s6 [70, 70] { R6132 += 1, R6088 += 1, R3452 += 1 };
  s0 -> s7 [70, 70] { R6132 += 1, R6088 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s8 [70, 70] { R6132 += 1, R6088 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s9 [70, 70] { R6132 += 1, R6088 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s10 [70, 70] { R6132 += 1, R6088 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s2 [71, 74] { R6132 += 1, R6088 += 1, R3452 += 1 };
  s0 -> s1 [71, 65535] { R6132 += 1, R6088 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s3 [71, 65535] { R6132 += 1, R6088 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s2 [76, 65535] { R6132 += 1, R6088 += 1, R3452 += 1 };
  s1 -> s1 [0, 69] { R6132 += 1, R6088 += 1, R3452 += 1, R3453 += 1 };
  s1 -> s2 [0, 69] { R6132 += 1, R6088 += 1, R3452 += 1 };
  s1 -> s5 [70, 70] { R6132 += 1, R6088 += 1, R3452 += 1 };
  s1 -> s6 [70, 70] { R6132 += 1, R6088 += 1, R3452 += 1 };
  s1 -> s7 [70, 70] { R6132 += 1, R6088 += 1, R3452 += 1, R3453 += 1 };
  s1 -> s9 [70, 70] { R6132 += 1, R6088 += 1, R3452 += 1, R3453 += 1 };
  s1 -> s2 [71, 74] { R6132 += 1, R6088 += 1, R3452 += 1 };
  s1 -> s1 [71, 65535] { R6132 += 1, R6088 += 1, R3452 += 1, R3453 += 1 };
  s1 -> s2 [76, 65535] { R6132 += 1, R6088 += 1, R3452 += 1 };
  s2 -> s2 [0, 69] { R6132 += 1, R6088 += 1, R3452 += 1 };
  s2 -> s2 [0, 65535] { R6132 += 1 };
  s2 -> s11 [0, 65535];
  s2 -> s5 [70, 70] { R6132 += 1, R6088 += 1 };
  s2 -> s6 [70, 70] { R6132 += 1, R6088 += 1 };
  s2 -> s2 [71, 74] { R6132 += 1, R6088 += 1, R3452 += 1 };
  s2 -> s2 [71, 65535] { R6132 += 1, R6088 += 1 };
  s2 -> s2 [76, 65535] { R6132 += 1, R6088 += 1, R3452 += 1 };
  s3 -> s1 [0, 69] { R6132 += 1, R6088 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s2 [0, 69] { R6132 += 1, R6088 += 1, R3452 += 1 };
  s3 -> s3 [0, 69] { R6132 += 1, R6088 += 1, R3451 += 1, R3452 += 1 };
  s3 -> s5 [70, 70] { R6132 += 1, R6088 += 1, R3452 += 1 };
  s3 -> s6 [70, 70] { R6132 += 1, R6088 += 1, R3452 += 1 };
  s3 -> s7 [70, 70] { R6132 += 1, R6088 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s8 [70, 70] { R6132 += 1, R6088 += 1, R3451 += 1, R3452 += 1 };
  s3 -> s9 [70, 70] { R6132 += 1, R6088 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s10 [70, 70] { R6132 += 1, R6088 += 1, R3451 += 1, R3452 += 1 };
  s3 -> s2 [71, 74] { R6132 += 1, R6088 += 1, R3452 += 1 };
  s3 -> s1 [71, 65535] { R6132 += 1, R6088 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s3 [71, 65535] { R6132 += 1, R6088 += 1, R3451 += 1, R3452 += 1 };
  s3 -> s2 [76, 65535] { R6132 += 1, R6088 += 1, R3452 += 1 };
  s4 -> s1 [0, 69] { R6132 += 1, R6088 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s2 [0, 69] { R6132 += 1, R6088 += 1, R3452 += 1 };
  s4 -> s3 [0, 69] { R6132 += 1, R6088 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s4 [0, 65535] { R6132 += 1, R6087 += 1, R6088 += 1 };
  s4 -> s5 [70, 70] { R6132 += 1, R6088 += 1, R3452 += 1 };
  s4 -> s6 [70, 70] { R6132 += 1, R6088 += 1, R3452 += 1 };
  s4 -> s7 [70, 70] { R6132 += 1, R6088 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s8 [70, 70] { R6132 += 1, R6088 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s9 [70, 70] { R6132 += 1, R6088 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s10 [70, 70] { R6132 += 1, R6088 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s2 [71, 74] { R6132 += 1, R6088 += 1, R3452 += 1 };
  s4 -> s1 [71, 65535] { R6132 += 1, R6088 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s3 [71, 65535] { R6132 += 1, R6088 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s2 [76, 65535] { R6132 += 1, R6088 += 1, R3452 += 1 };
  s5 -> s5 [0, 74] { R6132 += 1, R6088 += 1, R3452 += 1 };
  s5 -> s5 [0, 65535] { R6132 += 1, R6088 += 1 };
  s5 -> s11 [0, 65535];
  s5 -> s12 [0, 65535] { R6132 += 1 };
  s5 -> s5 [76, 65535] { R6132 += 1, R6088 += 1, R3452 += 1 };
  s6 -> s6 [0, 65535] { R6132 += 1 };
  s6 -> s11 [0, 65535];
  s7 -> s5 [0, 74] { R6132 += 1, R6088 += 1, R3452 += 1 };
  s7 -> s7 [0, 65535] { R6132 += 1, R6088 += 1, R3452 += 1, R3453 += 1 };
  s7 -> s5 [76, 65535] { R6132 += 1, R6088 += 1, R3452 += 1 };
  s8 -> s5 [0, 74] { R6132 += 1, R6088 += 1, R3452 += 1 };
  s8 -> s7 [0, 65535] { R6132 += 1, R6088 += 1, R3452 += 1, R3453 += 1 };
  s8 -> s8 [0, 65535] { R6132 += 1, R6088 += 1, R3451 += 1, R3452 += 1 };
  s8 -> s5 [76, 65535] { R6132 += 1, R6088 += 1, R3452 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R6132 += 1 };
  accepting s12, s5, s2, s6, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R6134 += 1, R6090 += 1, R5690 += 1, R5692 += 1 };
  s0 -> s2 [0, 69] { R6134 += 1, R6090 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s0 -> s3 [0, 69] { R6134 += 1, R6090 += 1, R5689 += 1, R5690 += 1 };
  s0 -> s0 [0, 65535] { R6133 += 1, R6134 += 1 };
  s0 -> s4 [0, 65535] { R6134 += 1, R6089 += 1, R6090 += 1 };
  s0 -> s5 [70, 70] { R6134 += 1, R6090 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s0 -> s6 [70, 70] { R6134 += 1, R6090 += 1, R5689 += 1, R5690 += 1 };
  s0 -> s7 [70, 70] { R6134 += 1, R6090 += 1, R5689 += 1, R5690 += 1 };
  s0 -> s8 [70, 70] { R6134 += 1, R6090 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s0 -> s9 [70, 70] { R6134 += 1, R6090 += 1, R5690 += 1, R5692 += 1 };
  s0 -> s10 [70, 70] { R6134 += 1, R6090 += 1, R5690 += 1, R5692 += 1 };
  s0 -> s1 [71, 74] { R6134 += 1, R6090 += 1, R5690 += 1, R5692 += 1 };
  s0 -> s2 [71, 65535] { R6134 += 1, R6090 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s0 -> s3 [71, 65535] { R6134 += 1, R6090 += 1, R5689 += 1, R5690 += 1 };
  s0 -> s1 [76, 65535] { R6134 += 1, R6090 += 1, R5690 += 1, R5692 += 1 };
  s1 -> s1 [0, 69] { R6134 += 1, R6090 += 1, R5690 += 1, R5692 += 1 };
  s1 -> s1 [0, 65535] { R6134 += 1 };
  s1 -> s11 [0, 65535];
  s1 -> s9 [70, 70] { R6134 += 1, R6090 += 1, R5690 += 1, R5692 += 1 };
  s1 -> s10 [70, 70] { R6134 += 1, R6090 += 1, R5690 += 1, R5692 += 1 };
  s1 -> s1 [71, 74] { R6134 += 1, R6090 += 1, R5690 += 1, R5692 += 1 };
  s1 -> s1 [76, 65535] { R6134 += 1, R6090 += 1, R5690 += 1, R5692 += 1 };
  s2 -> s1 [0, 69] { R6134 += 1, R6090 += 1, R5690 += 1, R5692 += 1 };
  s2 -> s2 [0, 69] { R6134 += 1, R6090 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s2 -> s5 [70, 70] { R6134 += 1, R6090 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s2 -> s8 [70, 70] { R6134 += 1, R6090 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s2 -> s9 [70, 70] { R6134 += 1, R6090 += 1, R5690 += 1, R5692 += 1 };
  s2 -> s10 [70, 70] { R6134 += 1, R6090 += 1, R5690 += 1, R5692 += 1 };
  s2 -> s1 [71, 74] { R6134 += 1, R6090 += 1, R5690 += 1, R5692 += 1 };
  s2 -> s2 [71, 65535] { R6134 += 1, R6090 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s2 -> s1 [76, 65535] { R6134 += 1, R6090 += 1, R5690 += 1, R5692 += 1 };
  s3 -> s1 [0, 69] { R6134 += 1, R6090 += 1, R5690 += 1, R5692 += 1 };
  s3 -> s2 [0, 69] { R6134 += 1, R6090 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s3 -> s3 [0, 69] { R6134 += 1, R6090 += 1, R5689 += 1, R5690 += 1 };
  s3 -> s5 [70, 70] { R6134 += 1, R6090 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s3 -> s6 [70, 70] { R6134 += 1, R6090 += 1, R5689 += 1, R5690 += 1 };
  s3 -> s7 [70, 70] { R6134 += 1, R6090 += 1, R5689 += 1, R5690 += 1 };
  s3 -> s8 [70, 70] { R6134 += 1, R6090 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s3 -> s9 [70, 70] { R6134 += 1, R6090 += 1, R5690 += 1, R5692 += 1 };
  s3 -> s10 [70, 70] { R6134 += 1, R6090 += 1, R5690 += 1, R5692 += 1 };
  s3 -> s1 [71, 74] { R6134 += 1, R6090 += 1, R5690 += 1, R5692 += 1 };
  s3 -> s2 [71, 65535] { R6134 += 1, R6090 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s3 -> s3 [71, 65535] { R6134 += 1, R6090 += 1, R5689 += 1, R5690 += 1 };
  s3 -> s1 [76, 65535] { R6134 += 1, R6090 += 1, R5690 += 1, R5692 += 1 };
  s4 -> s1 [0, 69] { R6134 += 1, R6090 += 1, R5690 += 1, R5692 += 1 };
  s4 -> s2 [0, 69] { R6134 += 1, R6090 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s4 -> s3 [0, 69] { R6134 += 1, R6090 += 1, R5689 += 1, R5690 += 1 };
  s4 -> s4 [0, 65535] { R6134 += 1, R6089 += 1, R6090 += 1 };
  s4 -> s5 [70, 70] { R6134 += 1, R6090 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s4 -> s6 [70, 70] { R6134 += 1, R6090 += 1, R5689 += 1, R5690 += 1 };
  s4 -> s7 [70, 70] { R6134 += 1, R6090 += 1, R5689 += 1, R5690 += 1 };
  s4 -> s8 [70, 70] { R6134 += 1, R6090 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s4 -> s9 [70, 70] { R6134 += 1, R6090 += 1, R5690 += 1, R5692 += 1 };
  s4 -> s10 [70, 70] { R6134 += 1, R6090 += 1, R5690 += 1, R5692 += 1 };
  s4 -> s1 [71, 74] { R6134 += 1, R6090 += 1, R5690 += 1, R5692 += 1 };
  s4 -> s2 [71, 65535] { R6134 += 1, R6090 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s4 -> s3 [71, 65535] { R6134 += 1, R6090 += 1, R5689 += 1, R5690 += 1 };
  s4 -> s1 [76, 65535] { R6134 += 1, R6090 += 1, R5690 += 1, R5692 += 1 };
  s7 -> s10 [0, 74] { R6134 += 1, R6090 += 1, R5690 += 1, R5692 += 1 };
  s7 -> s7 [0, 65535] { R6134 += 1, R6090 += 1, R5689 += 1, R5690 += 1 };
  s7 -> s8 [0, 65535] { R6134 += 1, R6090 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s7 -> s10 [76, 65535] { R6134 += 1, R6090 += 1, R5690 += 1, R5692 += 1 };
  s8 -> s10 [0, 74] { R6134 += 1, R6090 += 1, R5690 += 1, R5692 += 1 };
  s8 -> s8 [0, 65535] { R6134 += 1, R6090 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s8 -> s10 [76, 65535] { R6134 += 1, R6090 += 1, R5690 += 1, R5692 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s9 [0, 65535] { R6134 += 1 };
  s10 -> s10 [0, 74] { R6134 += 1, R6090 += 1, R5690 += 1, R5692 += 1 };
  s10 -> s11 [0, 65535];
  s10 -> s10 [0, 65535] { R6134 += 1 };
  s10 -> s10 [76, 65535] { R6134 += 1, R6090 += 1, R5690 += 1, R5692 += 1 };
  s11 -> s11 [0, 65535];
  accepting s1, s9, s10, s11;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R6136 += 1, R6092 += 1, R6027 += 1, R6028 += 1 };
  s0 -> s2 [0, 69] { R6136 += 1, R6092 += 1, R6028 += 1, R6029 += 1, R6030 += 1 };
  s0 -> s3 [0, 69] { R6136 += 1, R6092 += 1, R6028 += 1, R6030 += 1, R6031 += 1 };
  s0 -> s0 [0, 65535] { R6135 += 1, R6136 += 1 };
  s0 -> s4 [0, 65535] { R6136 += 1, R6091 += 1, R6092 += 1 };
  s0 -> s5 [70, 70] { R6136 += 1, R6092 += 1, R6028 += 1, R6029 += 1, R6030 += 1 };
  s0 -> s6 [70, 70] { R6136 += 1, R6092 += 1, R6027 += 1, R6028 += 1 };
  s0 -> s7 [70, 70] { R6136 += 1, R6092 += 1, R6028 += 1, R6030 += 1, R6031 += 1 };
  s0 -> s8 [70, 70] { R6136 += 1, R6092 += 1, R6027 += 1, R6028 += 1 };
  s0 -> s9 [70, 70] { R6136 += 1, R6092 += 1, R6028 += 1, R6029 += 1, R6030 += 1 };
  s0 -> s10 [70, 70] { R6136 += 1, R6092 += 1, R6028 += 1, R6030 += 1, R6031 += 1 };
  s0 -> s1 [71, 65535] { R6136 += 1, R6092 += 1, R6027 += 1, R6028 += 1 };
  s0 -> s2 [71, 65535] { R6136 += 1, R6092 += 1, R6028 += 1, R6029 += 1, R6030 += 1 };
  s0 -> s3 [71, 65535] { R6136 += 1, R6092 += 1, R6028 += 1, R6030 += 1, R6031 += 1 };
  s1 -> s1 [0, 69] { R6136 += 1, R6092 += 1, R6027 += 1, R6028 += 1 };
  s1 -> s2 [0, 69] { R6136 += 1, R6092 += 1, R6028 += 1, R6029 += 1, R6030 += 1 };
  s1 -> s3 [0, 69] { R6136 += 1, R6092 += 1, R6028 += 1, R6030 += 1, R6031 += 1 };
  s1 -> s5 [70, 70] { R6136 += 1, R6092 += 1, R6028 += 1, R6029 += 1, R6030 += 1 };
  s1 -> s6 [70, 70] { R6136 += 1, R6092 += 1, R6027 += 1, R6028 += 1 };
  s1 -> s7 [70, 70] { R6136 += 1, R6092 += 1, R6028 += 1, R6030 += 1, R6031 += 1 };
  s1 -> s8 [70, 70] { R6136 += 1, R6092 += 1, R6027 += 1, R6028 += 1 };
  s1 -> s9 [70, 70] { R6136 += 1, R6092 += 1, R6028 += 1, R6029 += 1, R6030 += 1 };
  s1 -> s10 [70, 70] { R6136 += 1, R6092 += 1, R6028 += 1, R6030 += 1, R6031 += 1 };
  s1 -> s1 [71, 65535] { R6136 += 1, R6092 += 1, R6027 += 1, R6028 += 1 };
  s1 -> s2 [71, 65535] { R6136 += 1, R6092 += 1, R6028 += 1, R6029 += 1, R6030 += 1 };
  s1 -> s3 [71, 65535] { R6136 += 1, R6092 += 1, R6028 += 1, R6030 += 1, R6031 += 1 };
  s2 -> s2 [0, 69] { R6136 += 1, R6092 += 1, R6028 += 1, R6029 += 1, R6030 += 1 };
  s2 -> s3 [0, 69] { R6136 += 1, R6092 += 1, R6028 += 1, R6030 += 1, R6031 += 1 };
  s2 -> s5 [70, 70] { R6136 += 1, R6092 += 1, R6028 += 1, R6029 += 1, R6030 += 1 };
  s2 -> s7 [70, 70] { R6136 += 1, R6092 += 1, R6028 += 1, R6030 += 1, R6031 += 1 };
  s2 -> s9 [70, 70] { R6136 += 1, R6092 += 1, R6028 += 1, R6029 += 1, R6030 += 1 };
  s2 -> s10 [70, 70] { R6136 += 1, R6092 += 1, R6028 += 1, R6030 += 1, R6031 += 1 };
  s2 -> s2 [71, 65535] { R6136 += 1, R6092 += 1, R6028 += 1, R6029 += 1, R6030 += 1 };
  s2 -> s3 [71, 65535] { R6136 += 1, R6092 += 1, R6028 += 1, R6030 += 1, R6031 += 1 };
  s3 -> s3 [0, 69] { R6136 += 1, R6092 += 1, R6028 += 1, R6030 += 1, R6031 += 1 };
  s3 -> s3 [0, 65535] { R6136 += 1 };
  s3 -> s12 [0, 65535];
  s3 -> s7 [70, 70] { R6136 += 1, R6092 += 1, R6028 += 1, R6030 += 1, R6031 += 1 };
  s3 -> s10 [70, 70] { R6136 += 1, R6092 += 1, R6028 += 1, R6030 += 1, R6031 += 1 };
  s3 -> s3 [71, 65535] { R6136 += 1, R6092 += 1, R6028 += 1, R6030 += 1, R6031 += 1 };
  s4 -> s1 [0, 69] { R6136 += 1, R6092 += 1, R6027 += 1, R6028 += 1 };
  s4 -> s2 [0, 69] { R6136 += 1, R6092 += 1, R6028 += 1, R6029 += 1, R6030 += 1 };
  s4 -> s3 [0, 69] { R6136 += 1, R6092 += 1, R6028 += 1, R6030 += 1, R6031 += 1 };
  s4 -> s4 [0, 65535] { R6136 += 1, R6091 += 1, R6092 += 1 };
  s4 -> s5 [70, 70] { R6136 += 1, R6092 += 1, R6028 += 1, R6029 += 1, R6030 += 1 };
  s4 -> s6 [70, 70] { R6136 += 1, R6092 += 1, R6027 += 1, R6028 += 1 };
  s4 -> s7 [70, 70] { R6136 += 1, R6092 += 1, R6028 += 1, R6030 += 1, R6031 += 1 };
  s4 -> s8 [70, 70] { R6136 += 1, R6092 += 1, R6027 += 1, R6028 += 1 };
  s4 -> s9 [70, 70] { R6136 += 1, R6092 += 1, R6028 += 1, R6029 += 1, R6030 += 1 };
  s4 -> s10 [70, 70] { R6136 += 1, R6092 += 1, R6028 += 1, R6030 += 1, R6031 += 1 };
  s4 -> s1 [71, 65535] { R6136 += 1, R6092 += 1, R6027 += 1, R6028 += 1 };
  s4 -> s2 [71, 65535] { R6136 += 1, R6092 += 1, R6028 += 1, R6029 += 1, R6030 += 1 };
  s4 -> s3 [71, 65535] { R6136 += 1, R6092 += 1, R6028 += 1, R6030 += 1, R6031 += 1 };
  s5 -> s5 [0, 65535] { R6136 += 1, R6092 += 1, R6028 += 1, R6029 += 1, R6030 += 1 };
  s5 -> s10 [0, 65535] { R6136 += 1, R6092 += 1, R6028 += 1, R6030 += 1, R6031 += 1 };
  s7 -> s7 [0, 65535] { R6136 += 1 };
  s7 -> s12 [0, 65535];
  s8 -> s5 [0, 65535] { R6136 += 1, R6092 += 1, R6028 += 1, R6029 += 1, R6030 += 1 };
  s8 -> s8 [0, 65535] { R6136 += 1, R6092 += 1, R6027 += 1, R6028 += 1 };
  s8 -> s10 [0, 65535] { R6136 += 1, R6092 += 1, R6028 += 1, R6030 += 1, R6031 += 1 };
  s10 -> s11 [0, 65535] { R6136 += 1 };
  s10 -> s10 [0, 65535] { R6136 += 1, R6092 += 1, R6028 += 1, R6030 += 1, R6031 += 1 };
  s10 -> s12 [0, 65535];
  s11 -> s11 [0, 65535] { R6136 += 1 };
  s11 -> s12 [0, 65535];
  s12 -> s12 [0, 65535];
  accepting s3, s12, s7, s10, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R6054 && R3 = R6136 && R23 - R6136 = -1 && R24 = R6136 && R25 - R6136 = -1 && R26 = R6136 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R5694 + -1*R5690 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R5694 + -1*R5690 - R66 = 0 && R55 + R96 + R93 + -1*R5696 + -1*R5692 - R68 = 0 && R65 + R5693 + R5689 = 0 && R67 + R5695 + R5691 = 0 && R6053 = 0 && R6077 = 0 && R6078 = 0 && R6083 = 0 && R6084 = 0 && R6087 = 0 && R6088 = 0 && R6089 = 0 && R6090 = 0 && R6091 = 0 && R6092 = 0 && R6093 = 0 && R6094 = R6136 && R6095 = 0 && R6096 = R6136 && R6097 = 0 && R6098 = R6136 && R6099 = 0 && R6100 = R6136 && R6101 = 0 && R6102 = R6136 && R6103 = 0 && R6104 = R6136 && R6105 = 0 && R6106 = R6136 && R6107 = 0 && R6108 = R6136 && R6109 = 0 && R6110 = R6136 && R6111 = 0 && R6112 = R6136 && R6113 = 0 && R6114 = R6136 && R6115 = 0 && R6116 = R6136 && R6117 = 0 && R6118 = R6136 && R6119 = 0 && R6120 = R6136 && R6121 = 0 && R6122 = R6136 && R6123 = 0 && R6124 = R6136 && R6125 = 0 && R6126 = R6136 && R6127 = 0 && R6128 = R6136 && R6129 = 0 && R6130 = R6136 && R6131 = 0 && R6132 = R6136 && R6133 = 0 && R6134 = R6136 && R6135 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R3456 + R3453 < 1 && -1*R5694 + -1*R5690 - R66 < 1 && -1*R5696 + -1*R5692 - R68 < 1 && -1 < R6054 && 0 < R6136 && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R5694 + -1*R5690 - R66 = 0 || R66 + R5694 + R5690 < 1) && (R59 + R3454 + R3451 != 0 || R60 + R3455 + R3452 + -1*R5694 + -1*R5690 - R66 = 0 || R66 + R5694 + R5690 < 1) && (R66 + R5694 + R5690 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R5696 + R5692 < 1) && (R53 + R94 + R91 = 0 || R68 + R5696 + R5692 < 1))) && (R66 + R5694 + R5690 != 0 || ((R59 + R3454 + R3451 != 0 || R60 + R3455 + R3452 = 0 || R68 + R5696 + R5692 < 1) && (R59 + R3454 + R3451 = 0 || R68 + R5696 + R5692 < 1))) && (R66 + R5694 + R5690 != 0 || ((R73 + R6032 + R6027 != 0 || R74 + R6033 + R6028 = 0 || R68 + R5696 + R5692 < 1) && (R73 + R6032 + R6027 = 0 || R68 + R5696 + R5692 < 1))) && (R68 + R5696 + R5692 != 0 || R77 + R6036 + R6031 = 0 || (R75 + R6034 + R6029 = 0 && R76 + R6035 + R6030 = 0)) && (R73 + R6032 + R6027 != 0 || R66 + R5694 + R5690 + -1*R6033 + -1*R6028 - R74 = 0 || R66 + R5694 + R5690 < 1) && (R75 + R6034 + R6029 != 0 || R68 + R5696 + R5692 + -1*R6035 + -1*R6030 - R76 = 0 || R68 + R5696 + R5692 < 1) && (R6037 != 0 || R6038 = R6054 || (R20 = 0 && R6054 = 0)) && (R6039 != 0 || R6040 = R6054 || (R20 = 0 && R6054 = 0)) && (R6041 != 0 || R6042 = R6054 || (R20 = 0 && R6054 = 0)) && (R6043 != 0 || R6044 = R6054 || (R20 = 0 && R6054 = 0)) && (R6045 != 0 || R6046 = R6054 || (R20 = 0 && R6054 = 0)) && (R6047 != 0 || R6048 = R6054 || (R20 = 0 && R6054 = 0)) && (R6049 != 0 || R6050 = R6054 || (R20 = 0 && R6054 = 0)) && (R6051 != 0 || R6052 = R6054 || (R20 = 0 && R6054 = 0)) && (R6055 != 0 || R6054 = R6056 || (R20 = 0 && R6054 = 0)) && (R21 = 0 || (R6075 = 0 && R6076 = 0)) && (R21 = 0 || (R6079 = 0 && R6080 = 0)) && (R21 = 0 || (R6081 = 0 && R6082 = 0)) && (R21 = 0 || (R6085 = 0 && R6086 = 0)) && (R22 = 0 || (R6057 = 0 && R6058 = 0)) && (R22 = 0 || (R6059 = 0 && R6060 = 0)) && (R22 = 0 || (R6061 = 0 && R6062 = 0)) && (R22 = 0 || (R6063 = 0 && R6064 = 0)) && (R22 = 0 || (R6065 = 0 && R6066 = 0)) && (R22 = 0 || (R6067 = 0 && R6068 = 0)) && (R22 = 0 || (R6069 = 0 && R6070 = 0)) && (R22 = 0 || (R6071 = 0 && R6072 = 0)) && (R22 = 0 || (R6073 = 0 && R6074 = 0)) && (R53 + R94 + R91 = 0 || R66 + R5694 + R5690 < 1) && (R59 + R3454 + R3451 = 0 || R66 + R5694 + R5690 < 1) && (R73 + R6032 + R6027 = 0 || R66 + R5694 + R5690 < 1) && (R75 + R6034 + R6029 = 0 || R68 + R5696 + R5692 < 1) && (R6037 = 0 || (R20 = 0 && R6054 = 0)) && (R6039 = 0 || (R20 = 0 && R6054 = 0)) && (R6041 = 0 || (R20 = 0 && R6054 = 0)) && (R6043 = 0 || (R20 = 0 && R6054 = 0)) && (R6045 = 0 || (R20 = 0 && R6054 = 0)) && (R6047 = 0 || (R20 = 0 && R6054 = 0)) && (R6049 = 0 || (R20 = 0 && R6054 = 0)) && (R6051 = 0 || (R20 = 0 && R6054 = 0)) && (R6055 = 0 || (R20 = 0 && R6054 = 0));
// End of Parikh automata intersection problem
