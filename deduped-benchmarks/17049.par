// Parikh automata intersection problem, generated by OSTRICH+
counter int R12, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R3451, R3452, R3453, R3454, R3455, R3456, R4, R45, R47, R49, R5, R50, R5131, R5132, R5133, R5134, R5135, R5136, R5137, R5138, R53, R5359, R5360, R5361, R5362, R5363, R5364, R5365, R5366, R5367, R5368, R5369, R5370, R5371, R5372, R5373, R5374, R5375, R5376, R5377, R5378, R5379, R5380, R5381, R5382, R5383, R5384, R5385, R5386, R5387, R5388, R5389, R5390, R5391, R5392, R5393, R5394, R5395, R5396, R5397, R5398, R5399, R54, R5400, R5401, R5402, R5403, R5404, R5405, R5406, R5407, R5408, R5409, R5410, R5411, R5412, R5413, R5414, R5415, R5416, R5417, R5418, R5419, R5420, R5421, R5422, R5423, R5424, R5425, R5426, R5427, R5428, R5429, R5430, R5431, R5432, R5433, R5434, R5435, R5436, R5437, R5438, R5439, R5440, R5441, R5442, R5443, R5444, R5445, R5446, R5447, R5448, R5449, R5450, R5451, R5452, R5453, R5454, R5455, R5456, R5457, R5458, R5459, R5460, R5461, R5462, R5463, R5464, R5465, R5466, R5467, R5468, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R5390 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R5389 += 1, R5390 += 1 };
  s1 -> s1 [0, 65535] { R5390 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R5392 += 1 };
  s0 -> s0 [0, 65535] { R5391 += 1, R5392 += 1 };
  s0 -> s2 [70, 70] { R5392 += 1 };
  s0 -> s3 [70, 70] { R5392 += 1 };
  s0 -> s1 [76, 65535] { R5392 += 1 };
  s1 -> s1 [0, 69] { R5392 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5392 += 1 };
  s1 -> s3 [70, 70] { R5392 += 1 };
  s1 -> s1 [76, 65535] { R5392 += 1 };
  s2 -> s2 [0, 70] { R5392 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R5392 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R5394 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R5393 += 1, R5394 += 1 };
  s0 -> s2 [70, 70] { R5394 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R5394 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R5394 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R5394 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5394 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R5394 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R5394 += 1, R45 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5394 += 1, R45 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R5396 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R5395 += 1, R5396 += 1 };
  s0 -> s2 [70, 70] { R5396 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R5396 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R5396 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R5396 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5396 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R5396 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R5396 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R5396 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R5398 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R5397 += 1, R5398 += 1 };
  s0 -> s2 [70, 70] { R5398 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R5398 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R5398 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R5398 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5398 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R5398 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R5398 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5398 += 1, R49 += 1, R50 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R5400 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R5399 += 1, R5400 += 1 };
  s0 -> s2 [70, 70] { R5400 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R5400 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R5400 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R5400 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5400 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R5400 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R5400 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5400 += 1, R53 += 1, R54 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R5402 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R5401 += 1, R5402 += 1 };
  s0 -> s2 [70, 70] { R5402 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R5402 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R5402 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R5402 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5402 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R5402 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R5402 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535] { R5402 += 1, R59 += 1, R60 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R5404 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R5403 += 1, R5404 += 1 };
  s0 -> s2 [70, 70] { R5404 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R5404 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R5404 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R5404 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5404 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R5404 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R5404 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5404 += 1, R65 += 1, R66 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R5406 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R5405 += 1, R5406 += 1 };
  s0 -> s2 [70, 70] { R5406 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R5406 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R5406 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R5406 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5406 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R5406 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R5406 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5406 += 1, R73 += 1, R74 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R5426 += 1 };
  s0 -> s0 [0, 65535] { R5425 += 1, R5426 += 1 };
  s0 -> s2 [70, 70] { R5426 += 1 };
  s0 -> s1 [71, 65535] { R5426 += 1 };
  s1 -> s1 [0, 69] { R5426 += 1 };
  s1 -> s2 [70, 70] { R5426 += 1 };
  s1 -> s1 [71, 65535] { R5426 += 1 };
  s2 -> s2 [0, 65535] { R5426 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R5427 += 1, R5428 += 1 };
  s0 -> s1 [0, 65535] { R5428 += 1, R2 += 1 };
  s1 -> s1 [0, 65535] { R5428 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R5430 += 1 };
  s0 -> s0 [0, 65535] { R5429 += 1, R5430 += 1 };
  s0 -> s2 [0, 65535] { R5430 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R5430 += 1 };
  s0 -> s1 [71, 65535] { R5430 += 1 };
  s1 -> s1 [0, 69] { R5430 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R5430 += 1 };
  s1 -> s1 [71, 65535] { R5430 += 1 };
  s2 -> s1 [0, 69] { R5430 += 1 };
  s2 -> s2 [0, 65535] { R5430 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R5430 += 1 };
  s2 -> s1 [71, 65535] { R5430 += 1 };
  s3 -> s3 [0, 65535] { R5430 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R5432 += 1, R5370 += 1 };
  s0 -> s0 [0, 65535] { R5431 += 1, R5432 += 1 };
  s0 -> s2 [0, 65535] { R5432 += 1, R5369 += 1, R5370 += 1 };
  s0 -> s1 [71, 65535] { R5432 += 1, R5370 += 1 };
  s1 -> s1 [0, 69] { R5432 += 1, R5370 += 1 };
  s1 -> s1 [0, 65535] { R5432 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R5432 += 1, R5370 += 1 };
  s2 -> s1 [0, 69] { R5432 += 1, R5370 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5432 += 1, R5369 += 1, R5370 += 1 };
  s2 -> s1 [71, 65535] { R5432 += 1, R5370 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s0 [0, 65535] { R5433 += 1, R5434 += 1 };
  s0 -> s1 [0, 65535] { R5434 += 1, R5371 += 1, R5372 += 1 };
  s0 -> s2 [0, 65535] { R5434 += 1, R5372 += 1, R20 += 1 };
  s1 -> s1 [0, 65535] { R5434 += 1, R5371 += 1, R5372 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R5434 += 1, R5372 += 1, R20 += 1 };
  s2 -> s3 [0, 65535] { R5434 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R5434 += 1, R5372 += 1, R20 += 1 };
  s3 -> s3 [0, 65535] { R5434 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R5436 += 1, R5374 += 1 };
  s0 -> s2 [0, 65535] { R5436 += 1, R5373 += 1, R5374 += 1 };
  s0 -> s0 [0, 65535] { R5435 += 1, R5436 += 1 };
  s0 -> s1 [75, 65535] { R5436 += 1, R5374 += 1 };
  s1 -> s1 [0, 70] { R5436 += 1, R5374 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R5436 += 1 };
  s1 -> s1 [75, 65535] { R5436 += 1, R5374 += 1 };
  s2 -> s1 [0, 70] { R5436 += 1, R5374 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5436 += 1, R5373 += 1, R5374 += 1 };
  s2 -> s1 [75, 65535] { R5436 += 1, R5374 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R5437 += 1, R5438 += 1 };
  s0 -> s1 [0, 65535] { R5438 += 1, R5375 += 1, R5376 += 1 };
  s0 -> s2 [0, 65535] { R5438 += 1, R5376 += 1, R84 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R5438 += 1, R5375 += 1, R5376 += 1 };
  s1 -> s2 [0, 65535] { R5438 += 1, R5376 += 1, R84 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R5438 += 1 };
  s2 -> s2 [0, 65535] { R5438 += 1, R5376 += 1, R84 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5438 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R5440 += 1, R5378 += 1 };
  s0 -> s2 [0, 65535] { R5440 += 1, R5378 += 1, R86 += 1 };
  s0 -> s3 [0, 65535] { R5440 += 1, R5377 += 1, R5378 += 1 };
  s0 -> s0 [0, 65535] { R5439 += 1, R5440 += 1 };
  s0 -> s1 [76, 65535] { R5440 += 1, R5378 += 1 };
  s1 -> s1 [0, 74] { R5440 += 1, R5378 += 1 };
  s1 -> s1 [0, 65535] { R5440 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [76, 65535] { R5440 += 1, R5378 += 1 };
  s2 -> s1 [0, 74] { R5440 += 1, R5378 += 1 };
  s2 -> s2 [0, 65535] { R5440 += 1, R5378 += 1, R86 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R5440 += 1 };
  s2 -> s1 [76, 65535] { R5440 += 1, R5378 += 1 };
  s3 -> s1 [0, 74] { R5440 += 1, R5378 += 1 };
  s3 -> s2 [0, 65535] { R5440 += 1, R5378 += 1, R86 += 1 };
  s3 -> s3 [0, 65535] { R5440 += 1, R5377 += 1, R5378 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [76, 65535] { R5440 += 1, R5378 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5440 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R5442 += 1, R5379 += 1, R5380 += 1 };
  s0 -> s0 [0, 65535] { R5441 += 1, R5442 += 1 };
  s0 -> s2 [0, 65535] { R5442 += 1, R5380 += 1 };
  s0 -> s3 [0, 65535] { R5442 += 1, R5380 += 1, R90 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R5442 += 1, R5379 += 1, R5380 += 1 };
  s1 -> s2 [0, 65535] { R5442 += 1, R5380 += 1 };
  s1 -> s3 [0, 65535] { R5442 += 1, R5380 += 1, R90 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R5442 += 1, R5380 += 1 };
  s2 -> s5 [0, 65535] { R5442 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R5442 += 1, R5380 += 1 };
  s3 -> s3 [0, 65535] { R5442 += 1, R5380 += 1, R90 += 1 };
  s3 -> s5 [0, 65535] { R5442 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5442 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R5444 += 1, R5382 += 1, R94 += 1, R95 += 1 };
  s0 -> s2 [0, 65535] { R5444 += 1, R5381 += 1, R5382 += 1 };
  s0 -> s0 [0, 65535] { R5443 += 1, R5444 += 1 };
  s0 -> s3 [0, 65535] { R5444 += 1, R5382 += 1, R95 += 1, R96 += 1 };
  s1 -> s1 [0, 65535] { R5444 += 1, R5382 += 1, R94 += 1, R95 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R5444 += 1 };
  s1 -> s3 [0, 65535] { R5444 += 1, R5382 += 1, R95 += 1, R96 += 1 };
  s2 -> s1 [0, 65535] { R5444 += 1, R5382 += 1, R94 += 1, R95 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5444 += 1, R5381 += 1, R5382 += 1 };
  s2 -> s3 [0, 65535] { R5444 += 1, R5382 += 1, R95 += 1, R96 += 1 };
  s3 -> s4 [0, 65535] { R5444 += 1, R5382 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R5444 += 1 };
  s3 -> s3 [0, 65535] { R5444 += 1, R5382 += 1, R95 += 1, R96 += 1 };
  s4 -> s4 [0, 65535] { R5444 += 1, R5382 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5444 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5444 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R5446 += 1, R5384 += 1, R3455 += 1 };
  s0 -> s0 [0, 65535] { R5445 += 1, R5446 += 1 };
  s0 -> s2 [0, 65535] { R5446 += 1, R5383 += 1, R5384 += 1 };
  s0 -> s1 [0, 65535] { R5446 += 1, R5384 += 1 };
  s0 -> s1 [76, 65535] { R5446 += 1, R5384 += 1, R3455 += 1 };
  s1 -> s1 [0, 74] { R5446 += 1, R5384 += 1, R3455 += 1 };
  s1 -> s4 [0, 65535] { R5446 += 1 };
  s1 -> s1 [0, 65535] { R5446 += 1, R5384 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [76, 65535] { R5446 += 1, R5384 += 1, R3455 += 1 };
  s2 -> s1 [0, 74] { R5446 += 1, R5384 += 1, R3455 += 1 };
  s2 -> s2 [0, 65535] { R5446 += 1, R5383 += 1, R5384 += 1 };
  s2 -> s1 [0, 65535] { R5446 += 1, R5384 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [76, 65535] { R5446 += 1, R5384 += 1, R3455 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5446 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 74] { R5448 += 1, R5386 += 1, R5136 += 1, R5138 += 1 };
  s0 -> s2 [0, 65535] { R5448 += 1, R5386 += 1, R5135 += 1, R5136 += 1 };
  s0 -> s3 [0, 65535] { R5448 += 1, R5385 += 1, R5386 += 1 };
  s0 -> s4 [0, 65535] { R5448 += 1, R5386 += 1, R5136 += 1, R5137 += 1, R5138 += 1 };
  s0 -> s0 [0, 65535] { R5447 += 1, R5448 += 1 };
  s0 -> s5 [75, 75] { R5448 += 1, R5386 += 1, R5136 += 1, R5138 += 1 };
  s0 -> s1 [76, 65535] { R5448 += 1, R5386 += 1, R5136 += 1, R5138 += 1 };
  s1 -> s1 [0, 74] { R5448 += 1, R5386 += 1, R5136 += 1, R5138 += 1 };
  s1 -> s5 [75, 75] { R5448 += 1, R5386 += 1, R5136 += 1, R5138 += 1 };
  s1 -> s1 [76, 65535] { R5448 += 1, R5386 += 1, R5136 += 1, R5138 += 1 };
  s2 -> s1 [0, 74] { R5448 += 1, R5386 += 1, R5136 += 1, R5138 += 1 };
  s2 -> s2 [0, 65535] { R5448 += 1, R5386 += 1, R5135 += 1, R5136 += 1 };
  s2 -> s4 [0, 65535] { R5448 += 1, R5386 += 1, R5136 += 1, R5137 += 1, R5138 += 1 };
  s2 -> s5 [75, 75] { R5448 += 1, R5386 += 1, R5136 += 1, R5138 += 1 };
  s2 -> s1 [76, 65535] { R5448 += 1, R5386 += 1, R5136 += 1, R5138 += 1 };
  s3 -> s1 [0, 74] { R5448 += 1, R5386 += 1, R5136 += 1, R5138 += 1 };
  s3 -> s2 [0, 65535] { R5448 += 1, R5386 += 1, R5135 += 1, R5136 += 1 };
  s3 -> s3 [0, 65535] { R5448 += 1, R5385 += 1, R5386 += 1 };
  s3 -> s4 [0, 65535] { R5448 += 1, R5386 += 1, R5136 += 1, R5137 += 1, R5138 += 1 };
  s3 -> s5 [75, 75] { R5448 += 1, R5386 += 1, R5136 += 1, R5138 += 1 };
  s3 -> s1 [76, 65535] { R5448 += 1, R5386 += 1, R5136 += 1, R5138 += 1 };
  s4 -> s1 [0, 74] { R5448 += 1, R5386 += 1, R5136 += 1, R5138 += 1 };
  s4 -> s4 [0, 65535] { R5448 += 1, R5386 += 1, R5136 += 1, R5137 += 1, R5138 += 1 };
  s4 -> s5 [75, 75] { R5448 += 1, R5386 += 1, R5136 += 1, R5138 += 1 };
  s4 -> s1 [76, 65535] { R5448 += 1, R5386 += 1, R5136 += 1, R5138 += 1 };
  s5 -> s6 [0, 65535] { R5448 += 1, R5386 += 1 };
  s5 -> s7 [0, 65535] { R5448 += 1 };
  s5 -> s5 [0, 65535] { R5448 += 1, R5386 += 1, R5136 += 1, R5138 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s9 [0, 65535] { R5448 += 1, R5386 += 1, R5136 += 1 };
  s6 -> s6 [0, 65535] { R5448 += 1, R5386 += 1 };
  s6 -> s7 [0, 65535] { R5448 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R5448 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s6 [0, 65535] { R5448 += 1, R5386 += 1 };
  s9 -> s7 [0, 65535] { R5448 += 1 };
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R5448 += 1, R5386 += 1, R5136 += 1 };
  accepting s8, s5, s9, s6, s7;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R5450 += 1, R5387 += 1, R5388 += 1 };
  s0 -> s2 [0, 65535] { R5450 += 1, R5388 += 1, R5365 += 1, R5366 += 1, R5367 += 1 };
  s0 -> s3 [0, 65535] { R5450 += 1, R5388 += 1, R5365 += 1, R5367 += 1, R5368 += 1 };
  s0 -> s4 [0, 65535] { R5450 += 1, R5388 += 1, R5364 += 1, R5365 += 1 };
  s0 -> s0 [0, 65535] { R5449 += 1, R5450 += 1 };
  s1 -> s1 [0, 65535] { R5450 += 1, R5387 += 1, R5388 += 1 };
  s1 -> s2 [0, 65535] { R5450 += 1, R5388 += 1, R5365 += 1, R5366 += 1, R5367 += 1 };
  s1 -> s3 [0, 65535] { R5450 += 1, R5388 += 1, R5365 += 1, R5367 += 1, R5368 += 1 };
  s1 -> s4 [0, 65535] { R5450 += 1, R5388 += 1, R5364 += 1, R5365 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5450 += 1, R5388 += 1, R5365 += 1, R5366 += 1, R5367 += 1 };
  s2 -> s7 [0, 65535] { R5450 += 1, R5388 += 1 };
  s2 -> s3 [0, 65535] { R5450 += 1, R5388 += 1, R5365 += 1, R5367 += 1, R5368 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R5450 += 1 };
  s3 -> s7 [0, 65535] { R5450 += 1, R5388 += 1 };
  s3 -> s3 [0, 65535] { R5450 += 1, R5388 += 1, R5365 += 1, R5367 += 1, R5368 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s8 [0, 65535] { R5450 += 1, R5388 += 1, R5365 += 1 };
  s3 -> s6 [0, 65535] { R5450 += 1 };
  s4 -> s2 [0, 65535] { R5450 += 1, R5388 += 1, R5365 += 1, R5366 += 1, R5367 += 1 };
  s4 -> s3 [0, 65535] { R5450 += 1, R5388 += 1, R5365 += 1, R5367 += 1, R5368 += 1 };
  s4 -> s4 [0, 65535] { R5450 += 1, R5388 += 1, R5364 += 1, R5365 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5450 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5450 += 1 };
  s7 -> s7 [0, 65535] { R5450 += 1, R5388 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R5450 += 1 };
  s8 -> s7 [0, 65535] { R5450 += 1, R5388 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s8 [0, 65535] { R5450 += 1, R5388 += 1, R5365 += 1 };
  s8 -> s6 [0, 65535] { R5450 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R5452 += 1, R5408 += 1, R21 += 1 };
  s0 -> s2 [0, 65535] { R5452 += 1, R5407 += 1, R5408 += 1 };
  s0 -> s0 [0, 65535] { R5451 += 1, R5452 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R5452 += 1, R5408 += 1, R21 += 1 };
  s1 -> s4 [0, 65535] { R5452 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R5452 += 1, R5408 += 1, R21 += 1 };
  s2 -> s2 [0, 65535] { R5452 += 1, R5407 += 1, R5408 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5452 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R5454 += 1, R5410 += 1 };
  s0 -> s0 [0, 65535] { R5453 += 1, R5454 += 1 };
  s0 -> s2 [0, 65535] { R5454 += 1, R5409 += 1, R5410 += 1 };
  s0 -> s3 [70, 70] { R5454 += 1, R5410 += 1 };
  s0 -> s4 [70, 70] { R5454 += 1, R5410 += 1 };
  s0 -> s5 [75, 75] { R5454 += 1, R5410 += 1 };
  s0 -> s1 [76, 65535] { R5454 += 1, R5410 += 1 };
  s1 -> s1 [0, 69] { R5454 += 1, R5410 += 1 };
  s1 -> s3 [70, 70] { R5454 += 1, R5410 += 1 };
  s1 -> s4 [70, 70] { R5454 += 1, R5410 += 1 };
  s1 -> s5 [75, 75] { R5454 += 1, R5410 += 1 };
  s1 -> s1 [76, 65535] { R5454 += 1, R5410 += 1 };
  s2 -> s1 [0, 69] { R5454 += 1, R5410 += 1 };
  s2 -> s2 [0, 65535] { R5454 += 1, R5409 += 1, R5410 += 1 };
  s2 -> s3 [70, 70] { R5454 += 1, R5410 += 1 };
  s2 -> s4 [70, 70] { R5454 += 1, R5410 += 1 };
  s2 -> s5 [75, 75] { R5454 += 1, R5410 += 1 };
  s2 -> s1 [76, 65535] { R5454 += 1, R5410 += 1 };
  s4 -> s4 [0, 70] { R5454 += 1, R5410 += 1 };
  s4 -> s7 [75, 75] { R5454 += 1, R5410 += 1 };
  s4 -> s4 [76, 65535] { R5454 += 1, R5410 += 1 };
  s5 -> s5 [0, 69] { R5454 += 1, R5410 += 1 };
  s5 -> s5 [0, 65535] { R5454 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R5454 += 1, R5410 += 1 };
  s5 -> s8 [70, 70] { R5454 += 1, R5410 += 1 };
  s5 -> s5 [75, 65535] { R5454 += 1, R5410 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R5454 += 1, R5410 += 1 };
  s7 -> s7 [0, 65535] { R5454 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R5454 += 1, R5410 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R5454 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R5456 += 1, R5412 += 1, R83 += 1 };
  s0 -> s0 [0, 65535] { R5455 += 1, R5456 += 1 };
  s0 -> s2 [0, 65535] { R5456 += 1, R5411 += 1, R5412 += 1 };
  s0 -> s3 [70, 70] { R5456 += 1, R5412 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R5456 += 1, R5412 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R5456 += 1, R5412 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R5456 += 1, R5412 += 1, R83 += 1 };
  s1 -> s1 [0, 65535] { R5456 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R5456 += 1, R5412 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R5456 += 1, R5412 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R5456 += 1, R5412 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R5456 += 1, R5412 += 1, R83 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5456 += 1, R5411 += 1, R5412 += 1 };
  s2 -> s3 [70, 70] { R5456 += 1, R5412 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R5456 += 1, R5412 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R5456 += 1, R5412 += 1, R83 += 1 };
  s3 -> s3 [0, 65535] { R5456 += 1, R5412 += 1, R83 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R5456 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5456 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5456 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R5458 += 1, R5414 += 1, R85 += 1 };
  s0 -> s2 [0, 65535] { R5458 += 1, R5413 += 1, R5414 += 1 };
  s0 -> s0 [0, 65535] { R5457 += 1, R5458 += 1 };
  s0 -> s3 [70, 70] { R5458 += 1, R5414 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R5458 += 1, R5414 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R5458 += 1, R5414 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R5458 += 1, R5414 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R5458 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R5458 += 1, R5414 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R5458 += 1, R5414 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R5458 += 1, R5414 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R5458 += 1, R5414 += 1, R85 += 1 };
  s2 -> s2 [0, 65535] { R5458 += 1, R5413 += 1, R5414 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R5458 += 1, R5414 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R5458 += 1, R5414 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R5458 += 1, R5414 += 1, R85 += 1 };
  s3 -> s3 [0, 65535] { R5458 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5458 += 1, R5414 += 1, R85 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5458 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5458 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R5460 += 1, R5416 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R5460 += 1, R5416 += 1, R88 += 1 };
  s0 -> s3 [0, 65535] { R5460 += 1, R5415 += 1, R5416 += 1 };
  s0 -> s0 [0, 65535] { R5459 += 1, R5460 += 1 };
  s0 -> s4 [70, 70] { R5460 += 1, R5416 += 1, R87 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R5460 += 1, R5416 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R5460 += 1, R5416 += 1, R87 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R5460 += 1, R5416 += 1, R88 += 1 };
  s0 -> s2 [71, 74] { R5460 += 1, R5416 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R5460 += 1, R5416 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R5460 += 1, R5416 += 1, R88 += 1 };
  s0 -> s2 [76, 65535] { R5460 += 1, R5416 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R5460 += 1, R5416 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [0, 69] { R5460 += 1, R5416 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R5460 += 1, R5416 += 1, R87 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R5460 += 1, R5416 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R5460 += 1, R5416 += 1, R87 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R5460 += 1, R5416 += 1, R88 += 1 };
  s1 -> s2 [71, 74] { R5460 += 1, R5416 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R5460 += 1, R5416 += 1, R87 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R5460 += 1, R5416 += 1, R88 += 1 };
  s1 -> s2 [76, 65535] { R5460 += 1, R5416 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R5460 += 1, R5416 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R5460 += 1, R5416 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R5460 += 1, R5416 += 1, R88 += 1 };
  s2 -> s2 [71, 74] { R5460 += 1, R5416 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R5460 += 1, R5416 += 1, R88 += 1 };
  s2 -> s2 [76, 65535] { R5460 += 1, R5416 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R5460 += 1, R5416 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R5460 += 1, R5416 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R5460 += 1, R5415 += 1, R5416 += 1 };
  s3 -> s4 [70, 70] { R5460 += 1, R5416 += 1, R87 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R5460 += 1, R5416 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R5460 += 1, R5416 += 1, R87 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R5460 += 1, R5416 += 1, R88 += 1 };
  s3 -> s2 [71, 74] { R5460 += 1, R5416 += 1, R88 += 1 };
  s3 -> s1 [71, 65535] { R5460 += 1, R5416 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R5460 += 1, R5416 += 1, R88 += 1 };
  s3 -> s2 [76, 65535] { R5460 += 1, R5416 += 1, R88 += 1 };
  s4 -> s7 [0, 74] { R5460 += 1, R5416 += 1, R88 += 1 };
  s4 -> s4 [0, 65535] { R5460 += 1, R5416 += 1, R87 += 1, R88 += 1 };
  s4 -> s11 [75, 75] { R5460 += 1, R5416 += 1, R88 += 1 };
  s4 -> s7 [76, 65535] { R5460 += 1, R5416 += 1, R88 += 1 };
  s7 -> s7 [0, 74] { R5460 += 1, R5416 += 1, R88 += 1 };
  s7 -> s11 [75, 75] { R5460 += 1, R5416 += 1, R88 += 1 };
  s7 -> s7 [76, 65535] { R5460 += 1, R5416 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R5460 += 1, R5416 += 1, R88 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R5460 += 1 };
  s8 -> s10 [70, 70] { R5460 += 1, R5416 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R5460 += 1, R5416 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R5460 += 1, R5416 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R5460 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R5460 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R5460 += 1, R5416 += 1, R88 += 1 };
  s12 -> s12 [0, 65535] { R5460 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R5462 += 1, R5418 += 1, R91 += 1, R92 += 1 };
  s0 -> s2 [0, 65535] { R5462 += 1, R5417 += 1, R5418 += 1 };
  s0 -> s0 [0, 65535] { R5461 += 1, R5462 += 1 };
  s0 -> s3 [70, 70] { R5462 += 1, R5418 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R5462 += 1, R5418 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R5462 += 1, R5418 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R5462 += 1, R5418 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 65535] { R5462 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R5462 += 1, R5418 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R5462 += 1, R5418 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R5462 += 1, R5418 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R5462 += 1, R5418 += 1, R91 += 1, R92 += 1 };
  s2 -> s2 [0, 65535] { R5462 += 1, R5417 += 1, R5418 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R5462 += 1, R5418 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R5462 += 1, R5418 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R5462 += 1, R5418 += 1, R91 += 1, R92 += 1 };
  s3 -> s3 [0, 65535] { R5462 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R5462 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R5462 += 1, R5418 += 1, R91 += 1, R92 += 1 };
  s5 -> s5 [0, 65535] { R5462 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R5464 += 1, R5420 += 1, R3452 += 1 };
  s0 -> s2 [0, 69] { R5464 += 1, R5420 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s3 [0, 69] { R5464 += 1, R5420 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s4 [0, 65535] { R5464 += 1, R5419 += 1, R5420 += 1 };
  s0 -> s0 [0, 65535] { R5463 += 1, R5464 += 1 };
  s0 -> s5 [70, 70] { R5464 += 1, R5420 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s6 [70, 70] { R5464 += 1, R5420 += 1, R3452 += 1 };
  s0 -> s7 [70, 70] { R5464 += 1, R5420 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s8 [70, 70] { R5464 += 1, R5420 += 1, R3452 += 1 };
  s0 -> s9 [70, 70] { R5464 += 1, R5420 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s10 [70, 70] { R5464 += 1, R5420 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s1 [71, 74] { R5464 += 1, R5420 += 1, R3452 += 1 };
  s0 -> s2 [71, 65535] { R5464 += 1, R5420 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s3 [71, 65535] { R5464 += 1, R5420 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s1 [76, 65535] { R5464 += 1, R5420 += 1, R3452 += 1 };
  s1 -> s1 [0, 69] { R5464 += 1, R5420 += 1, R3452 += 1 };
  s1 -> s1 [0, 65535] { R5464 += 1 };
  s1 -> s12 [0, 65535];
  s1 -> s6 [70, 70] { R5464 += 1, R5420 += 1 };
  s1 -> s8 [70, 70] { R5464 += 1, R5420 += 1 };
  s1 -> s1 [71, 74] { R5464 += 1, R5420 += 1, R3452 += 1 };
  s1 -> s1 [71, 65535] { R5464 += 1, R5420 += 1 };
  s1 -> s1 [76, 65535] { R5464 += 1, R5420 += 1, R3452 += 1 };
  s2 -> s1 [0, 69] { R5464 += 1, R5420 += 1, R3452 += 1 };
  s2 -> s2 [0, 69] { R5464 += 1, R5420 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s5 [70, 70] { R5464 += 1, R5420 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s6 [70, 70] { R5464 += 1, R5420 += 1, R3452 += 1 };
  s2 -> s7 [70, 70] { R5464 += 1, R5420 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s8 [70, 70] { R5464 += 1, R5420 += 1, R3452 += 1 };
  s2 -> s1 [71, 74] { R5464 += 1, R5420 += 1, R3452 += 1 };
  s2 -> s2 [71, 65535] { R5464 += 1, R5420 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s1 [76, 65535] { R5464 += 1, R5420 += 1, R3452 += 1 };
  s3 -> s1 [0, 69] { R5464 += 1, R5420 += 1, R3452 += 1 };
  s3 -> s2 [0, 69] { R5464 += 1, R5420 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s3 [0, 69] { R5464 += 1, R5420 += 1, R3451 += 1, R3452 += 1 };
  s3 -> s5 [70, 70] { R5464 += 1, R5420 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s6 [70, 70] { R5464 += 1, R5420 += 1, R3452 += 1 };
  s3 -> s7 [70, 70] { R5464 += 1, R5420 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s8 [70, 70] { R5464 += 1, R5420 += 1, R3452 += 1 };
  s3 -> s9 [70, 70] { R5464 += 1, R5420 += 1, R3451 += 1, R3452 += 1 };
  s3 -> s10 [70, 70] { R5464 += 1, R5420 += 1, R3451 += 1, R3452 += 1 };
  s3 -> s1 [71, 74] { R5464 += 1, R5420 += 1, R3452 += 1 };
  s3 -> s2 [71, 65535] { R5464 += 1, R5420 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s3 [71, 65535] { R5464 += 1, R5420 += 1, R3451 += 1, R3452 += 1 };
  s3 -> s1 [76, 65535] { R5464 += 1, R5420 += 1, R3452 += 1 };
  s4 -> s1 [0, 69] { R5464 += 1, R5420 += 1, R3452 += 1 };
  s4 -> s2 [0, 69] { R5464 += 1, R5420 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s3 [0, 69] { R5464 += 1, R5420 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s4 [0, 65535] { R5464 += 1, R5419 += 1, R5420 += 1 };
  s4 -> s5 [70, 70] { R5464 += 1, R5420 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s6 [70, 70] { R5464 += 1, R5420 += 1, R3452 += 1 };
  s4 -> s7 [70, 70] { R5464 += 1, R5420 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s8 [70, 70] { R5464 += 1, R5420 += 1, R3452 += 1 };
  s4 -> s9 [70, 70] { R5464 += 1, R5420 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s10 [70, 70] { R5464 += 1, R5420 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s1 [71, 74] { R5464 += 1, R5420 += 1, R3452 += 1 };
  s4 -> s2 [71, 65535] { R5464 += 1, R5420 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s3 [71, 65535] { R5464 += 1, R5420 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s1 [76, 65535] { R5464 += 1, R5420 += 1, R3452 += 1 };
  s5 -> s8 [0, 74] { R5464 += 1, R5420 += 1, R3452 += 1 };
  s5 -> s5 [0, 65535] { R5464 += 1, R5420 += 1, R3452 += 1, R3453 += 1 };
  s5 -> s8 [76, 65535] { R5464 += 1, R5420 += 1, R3452 += 1 };
  s6 -> s6 [0, 65535] { R5464 += 1 };
  s6 -> s12 [0, 65535];
  s8 -> s8 [0, 74] { R5464 += 1, R5420 += 1, R3452 += 1 };
  s8 -> s11 [0, 65535] { R5464 += 1 };
  s8 -> s12 [0, 65535];
  s8 -> s8 [0, 65535] { R5464 += 1, R5420 += 1 };
  s8 -> s8 [76, 65535] { R5464 += 1, R5420 += 1, R3452 += 1 };
  s9 -> s8 [0, 74] { R5464 += 1, R5420 += 1, R3452 += 1 };
  s9 -> s5 [0, 65535] { R5464 += 1, R5420 += 1, R3452 += 1, R3453 += 1 };
  s9 -> s9 [0, 65535] { R5464 += 1, R5420 += 1, R3451 += 1, R3452 += 1 };
  s9 -> s8 [76, 65535] { R5464 += 1, R5420 += 1, R3452 += 1 };
  s11 -> s11 [0, 65535] { R5464 += 1 };
  s11 -> s12 [0, 65535];
  s12 -> s12 [0, 65535];
  accepting s12, s8, s6, s1, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R5466 += 1, R5422 += 1, R5131 += 1, R5132 += 1 };
  s0 -> s2 [0, 65535] { R5466 += 1, R5421 += 1, R5422 += 1 };
  s0 -> s0 [0, 65535] { R5465 += 1, R5466 += 1 };
  s0 -> s3 [70, 70] { R5466 += 1, R5422 += 1, R5131 += 1, R5132 += 1 };
  s0 -> s4 [70, 70] { R5466 += 1, R5422 += 1, R5131 += 1, R5132 += 1 };
  s0 -> s1 [71, 65535] { R5466 += 1, R5422 += 1, R5131 += 1, R5132 += 1 };
  s1 -> s1 [0, 69] { R5466 += 1, R5422 += 1, R5131 += 1, R5132 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5466 += 1 };
  s1 -> s3 [70, 70] { R5466 += 1, R5422 += 1, R5131 += 1, R5132 += 1 };
  s1 -> s4 [70, 70] { R5466 += 1, R5422 += 1, R5131 += 1, R5132 += 1 };
  s1 -> s1 [71, 65535] { R5466 += 1, R5422 += 1, R5131 += 1, R5132 += 1 };
  s2 -> s1 [0, 69] { R5466 += 1, R5422 += 1, R5131 += 1, R5132 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5466 += 1, R5421 += 1, R5422 += 1 };
  s2 -> s3 [70, 70] { R5466 += 1, R5422 += 1, R5131 += 1, R5132 += 1 };
  s2 -> s4 [70, 70] { R5466 += 1, R5422 += 1, R5131 += 1, R5132 += 1 };
  s2 -> s1 [71, 65535] { R5466 += 1, R5422 += 1, R5131 += 1, R5132 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R5466 += 1 };
  s3 -> s3 [0, 65535] { R5466 += 1, R5422 += 1, R5131 += 1, R5132 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5466 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5466 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R5468 += 1, R5424 += 1, R5359 += 1, R5360 += 1 };
  s0 -> s2 [0, 65535] { R5468 += 1, R5423 += 1, R5424 += 1 };
  s0 -> s0 [0, 65535] { R5467 += 1, R5468 += 1 };
  s0 -> s3 [70, 70] { R5468 += 1, R5424 += 1, R5359 += 1, R5360 += 1 };
  s0 -> s4 [70, 70] { R5468 += 1, R5424 += 1, R5359 += 1, R5360 += 1 };
  s0 -> s1 [71, 65535] { R5468 += 1, R5424 += 1, R5359 += 1, R5360 += 1 };
  s1 -> s1 [0, 69] { R5468 += 1, R5424 += 1, R5359 += 1, R5360 += 1 };
  s1 -> s1 [0, 65535] { R5468 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R5468 += 1, R5424 += 1, R5359 += 1, R5360 += 1 };
  s1 -> s4 [70, 70] { R5468 += 1, R5424 += 1, R5359 += 1, R5360 += 1 };
  s1 -> s1 [71, 65535] { R5468 += 1, R5424 += 1, R5359 += 1, R5360 += 1 };
  s2 -> s1 [0, 69] { R5468 += 1, R5424 += 1, R5359 += 1, R5360 += 1 };
  s2 -> s2 [0, 65535] { R5468 += 1, R5423 += 1, R5424 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R5468 += 1, R5424 += 1, R5359 += 1, R5360 += 1 };
  s2 -> s4 [70, 70] { R5468 += 1, R5424 += 1, R5359 += 1, R5360 += 1 };
  s2 -> s1 [71, 65535] { R5468 += 1, R5424 += 1, R5359 += 1, R5360 += 1 };
  s3 -> s3 [0, 65535] { R5468 += 1, R5424 += 1, R5359 += 1, R5360 += 1 };
  s3 -> s6 [0, 65535] { R5468 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5468 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5468 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R5386 && R3 = R5468 && R23 - R5468 = -1 && R24 = R5468 && R25 - R5468 = -1 && R26 = R5468 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R5136 + -1*R5132 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R5136 + -1*R5132 - R66 = 0 && R55 + R96 + R93 + -1*R5138 + -1*R5134 - R68 = 0 && R65 + R5135 + R5131 = 0 && R67 + R5137 + R5133 = 0 && R5385 = 0 && R5409 = 0 && R5410 = 0 && R5415 = 0 && R5416 = 0 && R5419 = 0 && R5420 = 0 && R5425 = 0 && R5426 = R5468 && R5427 = 0 && R5428 = R5468 && R5429 = 0 && R5430 = R5468 && R5431 = 0 && R5432 = R5468 && R5433 = 0 && R5434 = R5468 && R5435 = 0 && R5436 = R5468 && R5437 = 0 && R5438 = R5468 && R5439 = 0 && R5440 = R5468 && R5441 = 0 && R5442 = R5468 && R5443 = 0 && R5444 = R5468 && R5445 = 0 && R5446 = R5468 && R5447 = 0 && R5448 = R5468 && R5449 = 0 && R5450 = R5468 && R5451 = 0 && R5452 = R5468 && R5453 = 0 && R5454 = R5468 && R5455 = 0 && R5456 = R5468 && R5457 = 0 && R5458 = R5468 && R5459 = 0 && R5460 = R5468 && R5461 = 0 && R5462 = R5468 && R5463 = 0 && R5464 = R5468 && R5465 = 0 && R5466 = R5468 && R5467 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R3456 + R3453 < 1 && -1*R5136 + -1*R5132 - R66 < 1 && -1*R5138 + -1*R5134 - R68 < 1 && -1 < R5386 && 0 < R5468 && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R5136 + -1*R5132 - R66 = 0 || R66 + R5136 + R5132 < 1) && (R59 + R3454 + R3451 != 0 || R60 + R3455 + R3452 + -1*R5136 + -1*R5132 - R66 = 0 || R66 + R5136 + R5132 < 1) && (R66 + R5136 + R5132 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R5138 + R5134 < 1) && (R53 + R94 + R91 = 0 || R68 + R5138 + R5134 < 1))) && (R66 + R5136 + R5132 != 0 || ((R59 + R3454 + R3451 != 0 || R60 + R3455 + R3452 = 0 || R68 + R5138 + R5134 < 1) && (R59 + R3454 + R3451 = 0 || R68 + R5138 + R5134 < 1))) && (R66 + R5136 + R5132 != 0 || ((R73 + R5364 + R5359 != 0 || R74 + R5365 + R5360 = 0 || R68 + R5138 + R5134 < 1) && (R73 + R5364 + R5359 = 0 || R68 + R5138 + R5134 < 1))) && (R68 + R5138 + R5134 != 0 || R77 + R5368 + R5363 = 0 || (R75 + R5366 + R5361 = 0 && R76 + R5367 + R5362 = 0)) && (R73 + R5364 + R5359 != 0 || R66 + R5136 + R5132 + -1*R5365 + -1*R5360 - R74 = 0 || R66 + R5136 + R5132 < 1) && (R75 + R5366 + R5361 != 0 || R68 + R5138 + R5134 + -1*R5367 + -1*R5362 - R76 = 0 || R68 + R5138 + R5134 < 1) && (R5369 != 0 || R5370 = R5386 || (R20 = 0 && R5386 = 0)) && (R5371 != 0 || R5372 = R5386 || (R20 = 0 && R5386 = 0)) && (R5373 != 0 || R5374 = R5386 || (R20 = 0 && R5386 = 0)) && (R5375 != 0 || R5376 = R5386 || (R20 = 0 && R5386 = 0)) && (R5377 != 0 || R5378 = R5386 || (R20 = 0 && R5386 = 0)) && (R5379 != 0 || R5380 = R5386 || (R20 = 0 && R5386 = 0)) && (R5381 != 0 || R5382 = R5386 || (R20 = 0 && R5386 = 0)) && (R5383 != 0 || R5384 = R5386 || (R20 = 0 && R5386 = 0)) && (R5387 != 0 || R5386 = R5388 || (R20 = 0 && R5386 = 0)) && (R21 = 0 || (R5407 = 0 && R5408 = 0)) && (R21 = 0 || (R5411 = 0 && R5412 = 0)) && (R21 = 0 || (R5413 = 0 && R5414 = 0)) && (R21 = 0 || (R5417 = 0 && R5418 = 0)) && (R21 = 0 || (R5421 = 0 && R5422 = 0)) && (R21 = 0 || (R5423 = 0 && R5424 = 0)) && (R22 = 0 || (R5389 = 0 && R5390 = 0)) && (R22 = 0 || (R5391 = 0 && R5392 = 0)) && (R22 = 0 || (R5393 = 0 && R5394 = 0)) && (R22 = 0 || (R5395 = 0 && R5396 = 0)) && (R22 = 0 || (R5397 = 0 && R5398 = 0)) && (R22 = 0 || (R5399 = 0 && R5400 = 0)) && (R22 = 0 || (R5401 = 0 && R5402 = 0)) && (R22 = 0 || (R5403 = 0 && R5404 = 0)) && (R22 = 0 || (R5405 = 0 && R5406 = 0)) && (R53 + R94 + R91 = 0 || R66 + R5136 + R5132 < 1) && (R59 + R3454 + R3451 = 0 || R66 + R5136 + R5132 < 1) && (R73 + R5364 + R5359 = 0 || R66 + R5136 + R5132 < 1) && (R75 + R5366 + R5361 = 0 || R68 + R5138 + R5134 < 1) && (R5369 = 0 || (R20 = 0 && R5386 = 0)) && (R5371 = 0 || (R20 = 0 && R5386 = 0)) && (R5373 = 0 || (R20 = 0 && R5386 = 0)) && (R5375 = 0 || (R20 = 0 && R5386 = 0)) && (R5377 = 0 || (R20 = 0 && R5386 = 0)) && (R5379 = 0 || (R20 = 0 && R5386 = 0)) && (R5381 = 0 || (R20 = 0 && R5386 = 0)) && (R5383 = 0 || (R20 = 0 && R5386 = 0)) && (R5387 = 0 || (R20 = 0 && R5386 = 0));
// End of Parikh automata intersection problem
