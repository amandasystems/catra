// Parikh automata intersection problem, generated by OSTRICH+
counter int R12, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R3451, R3452, R3453, R3454, R3455, R3456, R4, R45, R47, R49, R5, R50, R5131, R5132, R5133, R5134, R5135, R5136, R5137, R5138, R5249, R5250, R5251, R5252, R5253, R5254, R5255, R5256, R5257, R5258, R5259, R5260, R5261, R5262, R5263, R5264, R5265, R5266, R5267, R5268, R5269, R5270, R5271, R5272, R5273, R5274, R5275, R5276, R5277, R5278, R5279, R5280, R5281, R5282, R5283, R5284, R5285, R5286, R5287, R5288, R5289, R5290, R5291, R5292, R5293, R5294, R5295, R5296, R5297, R5298, R5299, R53, R5300, R5301, R5302, R5303, R5304, R5305, R5306, R5307, R5308, R5309, R5310, R5311, R5312, R5313, R5314, R5315, R5316, R5317, R5318, R5319, R5320, R5321, R5322, R5323, R5324, R5325, R5326, R5327, R5328, R5329, R5330, R5331, R5332, R5333, R5334, R5335, R5336, R5337, R5338, R5339, R5340, R5341, R5342, R5343, R5344, R5345, R5346, R5347, R5348, R5349, R5350, R5351, R5352, R5353, R5354, R5355, R5356, R5357, R5358, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R5280 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R5279 += 1, R5280 += 1 };
  s1 -> s1 [0, 65535] { R5280 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R5282 += 1 };
  s0 -> s0 [0, 65535] { R5281 += 1, R5282 += 1 };
  s0 -> s2 [70, 70] { R5282 += 1 };
  s0 -> s3 [70, 70] { R5282 += 1 };
  s0 -> s1 [76, 65535] { R5282 += 1 };
  s1 -> s1 [0, 69] { R5282 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5282 += 1 };
  s1 -> s3 [70, 70] { R5282 += 1 };
  s1 -> s1 [76, 65535] { R5282 += 1 };
  s2 -> s2 [0, 70] { R5282 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R5282 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R5284 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R5283 += 1, R5284 += 1 };
  s0 -> s2 [70, 70] { R5284 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R5284 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R5284 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R5284 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5284 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R5284 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R5284 += 1, R45 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5284 += 1, R45 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R5286 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R5285 += 1, R5286 += 1 };
  s0 -> s2 [70, 70] { R5286 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R5286 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R5286 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R5286 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5286 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R5286 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R5286 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5286 += 1, R47 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R5288 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R5287 += 1, R5288 += 1 };
  s0 -> s2 [70, 70] { R5288 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R5288 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R5288 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R5288 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5288 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R5288 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R5288 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5288 += 1, R49 += 1, R50 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R5290 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R5289 += 1, R5290 += 1 };
  s0 -> s2 [70, 70] { R5290 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R5290 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R5290 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R5290 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5290 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R5290 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R5290 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5290 += 1, R53 += 1, R54 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R5292 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R5291 += 1, R5292 += 1 };
  s0 -> s2 [70, 70] { R5292 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R5292 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R5292 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R5292 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5292 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R5292 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R5292 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5292 += 1, R59 += 1, R60 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R5294 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R5293 += 1, R5294 += 1 };
  s0 -> s2 [70, 70] { R5294 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R5294 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R5294 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R5294 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5294 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R5294 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R5294 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R5294 += 1, R65 += 1, R66 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R5296 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R5295 += 1, R5296 += 1 };
  s0 -> s2 [70, 70] { R5296 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R5296 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R5296 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R5296 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5296 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R5296 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R5296 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5296 += 1, R73 += 1, R74 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R5316 += 1 };
  s0 -> s0 [0, 65535] { R5315 += 1, R5316 += 1 };
  s0 -> s2 [70, 70] { R5316 += 1 };
  s0 -> s1 [71, 65535] { R5316 += 1 };
  s1 -> s1 [0, 69] { R5316 += 1 };
  s1 -> s2 [70, 70] { R5316 += 1 };
  s1 -> s1 [71, 65535] { R5316 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5316 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R5317 += 1, R5318 += 1 };
  s0 -> s1 [0, 65535] { R5318 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R5318 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R5320 += 1 };
  s0 -> s2 [0, 65535] { R5320 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R5319 += 1, R5320 += 1 };
  s0 -> s3 [70, 70] { R5320 += 1 };
  s0 -> s1 [71, 65535] { R5320 += 1 };
  s1 -> s1 [0, 69] { R5320 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R5320 += 1 };
  s1 -> s1 [71, 65535] { R5320 += 1 };
  s2 -> s1 [0, 69] { R5320 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R5320 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R5320 += 1 };
  s2 -> s1 [71, 65535] { R5320 += 1 };
  s3 -> s3 [0, 65535] { R5320 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R5322 += 1, R5260 += 1 };
  s0 -> s0 [0, 65535] { R5321 += 1, R5322 += 1 };
  s0 -> s2 [0, 65535] { R5322 += 1, R5259 += 1, R5260 += 1 };
  s0 -> s1 [71, 65535] { R5322 += 1, R5260 += 1 };
  s1 -> s1 [0, 69] { R5322 += 1, R5260 += 1 };
  s1 -> s1 [0, 65535] { R5322 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R5322 += 1, R5260 += 1 };
  s2 -> s1 [0, 69] { R5322 += 1, R5260 += 1 };
  s2 -> s2 [0, 65535] { R5322 += 1, R5259 += 1, R5260 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R5322 += 1, R5260 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R5324 += 1, R5262 += 1, R20 += 1 };
  s0 -> s2 [0, 65535] { R5324 += 1, R5261 += 1, R5262 += 1 };
  s0 -> s0 [0, 65535] { R5323 += 1, R5324 += 1 };
  s1 -> s1 [0, 65535] { R5324 += 1, R5262 += 1, R20 += 1 };
  s1 -> s4 [0, 65535] { R5324 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R5324 += 1, R5262 += 1, R20 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5324 += 1, R5261 += 1, R5262 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5324 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R5326 += 1, R5264 += 1 };
  s0 -> s2 [0, 65535] { R5326 += 1, R5263 += 1, R5264 += 1 };
  s0 -> s0 [0, 65535] { R5325 += 1, R5326 += 1 };
  s0 -> s1 [75, 65535] { R5326 += 1, R5264 += 1 };
  s1 -> s1 [0, 70] { R5326 += 1, R5264 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R5326 += 1 };
  s1 -> s1 [75, 65535] { R5326 += 1, R5264 += 1 };
  s2 -> s1 [0, 70] { R5326 += 1, R5264 += 1 };
  s2 -> s2 [0, 65535] { R5326 += 1, R5263 += 1, R5264 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R5326 += 1, R5264 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R5327 += 1, R5328 += 1 };
  s0 -> s1 [0, 65535] { R5328 += 1, R5266 += 1, R84 += 1 };
  s0 -> s2 [0, 65535] { R5328 += 1, R5265 += 1, R5266 += 1 };
  s1 -> s4 [0, 65535] { R5328 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R5328 += 1, R5266 += 1, R84 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R5328 += 1, R5266 += 1, R84 += 1 };
  s2 -> s2 [0, 65535] { R5328 += 1, R5265 += 1, R5266 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5328 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R5330 += 1, R5268 += 1 };
  s0 -> s2 [0, 65535] { R5330 += 1, R5268 += 1, R86 += 1 };
  s0 -> s3 [0, 65535] { R5330 += 1, R5267 += 1, R5268 += 1 };
  s0 -> s0 [0, 65535] { R5329 += 1, R5330 += 1 };
  s0 -> s1 [76, 65535] { R5330 += 1, R5268 += 1 };
  s1 -> s1 [0, 74] { R5330 += 1, R5268 += 1 };
  s1 -> s1 [0, 65535] { R5330 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [76, 65535] { R5330 += 1, R5268 += 1 };
  s2 -> s1 [0, 74] { R5330 += 1, R5268 += 1 };
  s2 -> s2 [0, 65535] { R5330 += 1, R5268 += 1, R86 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R5330 += 1 };
  s2 -> s1 [76, 65535] { R5330 += 1, R5268 += 1 };
  s3 -> s1 [0, 74] { R5330 += 1, R5268 += 1 };
  s3 -> s2 [0, 65535] { R5330 += 1, R5268 += 1, R86 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5330 += 1, R5267 += 1, R5268 += 1 };
  s3 -> s1 [76, 65535] { R5330 += 1, R5268 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5330 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s0 [0, 65535] { R5331 += 1, R5332 += 1 };
  s0 -> s1 [0, 65535] { R5332 += 1, R5270 += 1, R90 += 1 };
  s0 -> s2 [0, 65535] { R5332 += 1, R5269 += 1, R5270 += 1 };
  s0 -> s3 [0, 65535] { R5332 += 1, R5270 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R5332 += 1 };
  s1 -> s1 [0, 65535] { R5332 += 1, R5270 += 1, R90 += 1 };
  s1 -> s3 [0, 65535] { R5332 += 1, R5270 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R5332 += 1, R5270 += 1, R90 += 1 };
  s2 -> s2 [0, 65535] { R5332 += 1, R5269 += 1, R5270 += 1 };
  s2 -> s3 [0, 65535] { R5332 += 1, R5270 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R5332 += 1 };
  s3 -> s3 [0, 65535] { R5332 += 1, R5270 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5332 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R5334 += 1, R5272 += 1, R94 += 1, R95 += 1 };
  s0 -> s2 [0, 65535] { R5334 += 1, R5271 += 1, R5272 += 1 };
  s0 -> s3 [0, 65535] { R5334 += 1, R5272 += 1, R95 += 1, R96 += 1 };
  s0 -> s0 [0, 65535] { R5333 += 1, R5334 += 1 };
  s1 -> s1 [0, 65535] { R5334 += 1, R5272 += 1, R94 += 1, R95 += 1 };
  s1 -> s3 [0, 65535] { R5334 += 1, R5272 += 1, R95 += 1, R96 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R5334 += 1 };
  s2 -> s1 [0, 65535] { R5334 += 1, R5272 += 1, R94 += 1, R95 += 1 };
  s2 -> s2 [0, 65535] { R5334 += 1, R5271 += 1, R5272 += 1 };
  s2 -> s3 [0, 65535] { R5334 += 1, R5272 += 1, R95 += 1, R96 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5334 += 1, R5272 += 1, R95 += 1, R96 += 1 };
  s3 -> s4 [0, 65535] { R5334 += 1, R5272 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R5334 += 1 };
  s4 -> s4 [0, 65535] { R5334 += 1, R5272 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5334 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5334 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R5336 += 1, R5274 += 1, R3455 += 1 };
  s0 -> s0 [0, 65535] { R5335 += 1, R5336 += 1 };
  s0 -> s1 [0, 65535] { R5336 += 1, R5274 += 1 };
  s0 -> s2 [0, 65535] { R5336 += 1, R5273 += 1, R5274 += 1 };
  s0 -> s1 [76, 65535] { R5336 += 1, R5274 += 1, R3455 += 1 };
  s1 -> s1 [0, 74] { R5336 += 1, R5274 += 1, R3455 += 1 };
  s1 -> s1 [0, 65535] { R5336 += 1, R5274 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R5336 += 1 };
  s1 -> s1 [76, 65535] { R5336 += 1, R5274 += 1, R3455 += 1 };
  s2 -> s1 [0, 74] { R5336 += 1, R5274 += 1, R3455 += 1 };
  s2 -> s1 [0, 65535] { R5336 += 1, R5274 += 1 };
  s2 -> s2 [0, 65535] { R5336 += 1, R5273 += 1, R5274 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [76, 65535] { R5336 += 1, R5274 += 1, R3455 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5336 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 74] { R5338 += 1, R5276 += 1, R5136 += 1, R5138 += 1 };
  s0 -> s0 [0, 65535] { R5337 += 1, R5338 += 1 };
  s0 -> s2 [0, 65535] { R5338 += 1, R5276 += 1, R5136 += 1, R5137 += 1, R5138 += 1 };
  s0 -> s3 [0, 65535] { R5338 += 1, R5276 += 1, R5135 += 1, R5136 += 1 };
  s0 -> s4 [0, 65535] { R5338 += 1, R5275 += 1, R5276 += 1 };
  s0 -> s5 [75, 75] { R5338 += 1, R5276 += 1, R5136 += 1, R5138 += 1 };
  s0 -> s1 [76, 65535] { R5338 += 1, R5276 += 1, R5136 += 1, R5138 += 1 };
  s1 -> s1 [0, 74] { R5338 += 1, R5276 += 1, R5136 += 1, R5138 += 1 };
  s1 -> s5 [75, 75] { R5338 += 1, R5276 += 1, R5136 += 1, R5138 += 1 };
  s1 -> s1 [76, 65535] { R5338 += 1, R5276 += 1, R5136 += 1, R5138 += 1 };
  s2 -> s1 [0, 74] { R5338 += 1, R5276 += 1, R5136 += 1, R5138 += 1 };
  s2 -> s2 [0, 65535] { R5338 += 1, R5276 += 1, R5136 += 1, R5137 += 1, R5138 += 1 };
  s2 -> s5 [75, 75] { R5338 += 1, R5276 += 1, R5136 += 1, R5138 += 1 };
  s2 -> s1 [76, 65535] { R5338 += 1, R5276 += 1, R5136 += 1, R5138 += 1 };
  s3 -> s1 [0, 74] { R5338 += 1, R5276 += 1, R5136 += 1, R5138 += 1 };
  s3 -> s2 [0, 65535] { R5338 += 1, R5276 += 1, R5136 += 1, R5137 += 1, R5138 += 1 };
  s3 -> s3 [0, 65535] { R5338 += 1, R5276 += 1, R5135 += 1, R5136 += 1 };
  s3 -> s5 [75, 75] { R5338 += 1, R5276 += 1, R5136 += 1, R5138 += 1 };
  s3 -> s1 [76, 65535] { R5338 += 1, R5276 += 1, R5136 += 1, R5138 += 1 };
  s4 -> s1 [0, 74] { R5338 += 1, R5276 += 1, R5136 += 1, R5138 += 1 };
  s4 -> s2 [0, 65535] { R5338 += 1, R5276 += 1, R5136 += 1, R5137 += 1, R5138 += 1 };
  s4 -> s3 [0, 65535] { R5338 += 1, R5276 += 1, R5135 += 1, R5136 += 1 };
  s4 -> s4 [0, 65535] { R5338 += 1, R5275 += 1, R5276 += 1 };
  s4 -> s5 [75, 75] { R5338 += 1, R5276 += 1, R5136 += 1, R5138 += 1 };
  s4 -> s1 [76, 65535] { R5338 += 1, R5276 += 1, R5136 += 1, R5138 += 1 };
  s5 -> s6 [0, 65535] { R5338 += 1 };
  s5 -> s7 [0, 65535] { R5338 += 1, R5276 += 1, R5136 += 1 };
  s5 -> s5 [0, 65535] { R5338 += 1, R5276 += 1, R5136 += 1, R5138 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s9 [0, 65535] { R5338 += 1, R5276 += 1 };
  s6 -> s6 [0, 65535] { R5338 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s6 [0, 65535] { R5338 += 1 };
  s7 -> s7 [0, 65535] { R5338 += 1, R5276 += 1, R5136 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R5338 += 1, R5276 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s6 [0, 65535] { R5338 += 1 };
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R5338 += 1, R5276 += 1 };
  accepting s8, s5, s9, s6, s7;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R5340 += 1, R5278 += 1 };
  s0 -> s2 [0, 65535] { R5340 += 1, R5277 += 1, R5278 += 1 };
  s0 -> s0 [0, 65535] { R5339 += 1, R5340 += 1 };
  s1 -> s4 [0, 65535] { R5340 += 1 };
  s1 -> s1 [0, 65535] { R5340 += 1, R5278 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R5340 += 1, R5278 += 1 };
  s2 -> s2 [0, 65535] { R5340 += 1, R5277 += 1, R5278 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5340 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R5342 += 1, R5297 += 1, R5298 += 1 };
  s0 -> s2 [0, 65535] { R5342 += 1, R5298 += 1, R21 += 1 };
  s0 -> s0 [0, 65535] { R5341 += 1, R5342 += 1 };
  s1 -> s1 [0, 65535] { R5342 += 1, R5297 += 1, R5298 += 1 };
  s1 -> s2 [0, 65535] { R5342 += 1, R5298 += 1, R21 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R5342 += 1 };
  s2 -> s2 [0, 65535] { R5342 += 1, R5298 += 1, R21 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5342 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R5344 += 1, R5300 += 1 };
  s0 -> s0 [0, 65535] { R5343 += 1, R5344 += 1 };
  s0 -> s2 [0, 65535] { R5344 += 1, R5299 += 1, R5300 += 1 };
  s0 -> s3 [70, 70] { R5344 += 1, R5300 += 1 };
  s0 -> s4 [70, 70] { R5344 += 1, R5300 += 1 };
  s0 -> s5 [75, 75] { R5344 += 1, R5300 += 1 };
  s0 -> s1 [76, 65535] { R5344 += 1, R5300 += 1 };
  s1 -> s1 [0, 69] { R5344 += 1, R5300 += 1 };
  s1 -> s3 [70, 70] { R5344 += 1, R5300 += 1 };
  s1 -> s4 [70, 70] { R5344 += 1, R5300 += 1 };
  s1 -> s5 [75, 75] { R5344 += 1, R5300 += 1 };
  s1 -> s1 [76, 65535] { R5344 += 1, R5300 += 1 };
  s2 -> s1 [0, 69] { R5344 += 1, R5300 += 1 };
  s2 -> s2 [0, 65535] { R5344 += 1, R5299 += 1, R5300 += 1 };
  s2 -> s3 [70, 70] { R5344 += 1, R5300 += 1 };
  s2 -> s4 [70, 70] { R5344 += 1, R5300 += 1 };
  s2 -> s5 [75, 75] { R5344 += 1, R5300 += 1 };
  s2 -> s1 [76, 65535] { R5344 += 1, R5300 += 1 };
  s3 -> s3 [0, 70] { R5344 += 1, R5300 += 1 };
  s3 -> s8 [75, 75] { R5344 += 1, R5300 += 1 };
  s3 -> s3 [76, 65535] { R5344 += 1, R5300 += 1 };
  s5 -> s5 [0, 69] { R5344 += 1, R5300 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R5344 += 1 };
  s5 -> s7 [70, 70] { R5344 += 1, R5300 += 1 };
  s5 -> s8 [70, 70] { R5344 += 1, R5300 += 1 };
  s5 -> s5 [75, 65535] { R5344 += 1, R5300 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5344 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 70] { R5344 += 1, R5300 += 1 };
  s8 -> s8 [0, 65535] { R5344 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [75, 65535] { R5344 += 1, R5300 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R5346 += 1, R5302 += 1, R83 += 1 };
  s0 -> s0 [0, 65535] { R5345 += 1, R5346 += 1 };
  s0 -> s2 [0, 65535] { R5346 += 1, R5301 += 1, R5302 += 1 };
  s0 -> s3 [70, 70] { R5346 += 1, R5302 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R5346 += 1, R5302 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R5346 += 1, R5302 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R5346 += 1, R5302 += 1, R83 += 1 };
  s1 -> s1 [0, 65535] { R5346 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R5346 += 1, R5302 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R5346 += 1, R5302 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R5346 += 1, R5302 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R5346 += 1, R5302 += 1, R83 += 1 };
  s2 -> s2 [0, 65535] { R5346 += 1, R5301 += 1, R5302 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R5346 += 1, R5302 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R5346 += 1, R5302 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R5346 += 1, R5302 += 1, R83 += 1 };
  s3 -> s6 [0, 65535] { R5346 += 1 };
  s3 -> s3 [0, 65535] { R5346 += 1, R5302 += 1, R83 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5346 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5346 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R5348 += 1, R5304 += 1, R85 += 1 };
  s0 -> s0 [0, 65535] { R5347 += 1, R5348 += 1 };
  s0 -> s2 [0, 65535] { R5348 += 1, R5303 += 1, R5304 += 1 };
  s0 -> s3 [70, 70] { R5348 += 1, R5304 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R5348 += 1, R5304 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R5348 += 1, R5304 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R5348 += 1, R5304 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R5348 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R5348 += 1, R5304 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R5348 += 1, R5304 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R5348 += 1, R5304 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R5348 += 1, R5304 += 1, R85 += 1 };
  s2 -> s2 [0, 65535] { R5348 += 1, R5303 += 1, R5304 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R5348 += 1, R5304 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R5348 += 1, R5304 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R5348 += 1, R5304 += 1, R85 += 1 };
  s3 -> s3 [0, 65535] { R5348 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R5348 += 1 };
  s4 -> s4 [0, 65535] { R5348 += 1, R5304 += 1, R85 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R5348 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R5350 += 1, R5306 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R5350 += 1, R5306 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [0, 65535] { R5350 += 1, R5305 += 1, R5306 += 1 };
  s0 -> s0 [0, 65535] { R5349 += 1, R5350 += 1 };
  s0 -> s4 [70, 70] { R5350 += 1, R5306 += 1, R87 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R5350 += 1, R5306 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R5350 += 1, R5306 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R5350 += 1, R5306 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 74] { R5350 += 1, R5306 += 1, R88 += 1 };
  s0 -> s2 [71, 65535] { R5350 += 1, R5306 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R5350 += 1, R5306 += 1, R88 += 1 };
  s0 -> s1 [76, 65535] { R5350 += 1, R5306 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R5350 += 1, R5306 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R5350 += 1, R5306 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R5350 += 1, R5306 += 1, R88 += 1 };
  s1 -> s1 [71, 74] { R5350 += 1, R5306 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R5350 += 1, R5306 += 1, R88 += 1 };
  s1 -> s1 [76, 65535] { R5350 += 1, R5306 += 1, R88 += 1 };
  s2 -> s1 [0, 69] { R5350 += 1, R5306 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R5350 += 1, R5306 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R5350 += 1, R5306 += 1, R87 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R5350 += 1, R5306 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R5350 += 1, R5306 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R5350 += 1, R5306 += 1, R87 += 1, R88 += 1 };
  s2 -> s1 [71, 74] { R5350 += 1, R5306 += 1, R88 += 1 };
  s2 -> s2 [71, 65535] { R5350 += 1, R5306 += 1, R87 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R5350 += 1, R5306 += 1, R88 += 1 };
  s2 -> s1 [76, 65535] { R5350 += 1, R5306 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R5350 += 1, R5306 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R5350 += 1, R5306 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R5350 += 1, R5305 += 1, R5306 += 1 };
  s3 -> s4 [70, 70] { R5350 += 1, R5306 += 1, R87 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R5350 += 1, R5306 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R5350 += 1, R5306 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R5350 += 1, R5306 += 1, R87 += 1, R88 += 1 };
  s3 -> s1 [71, 74] { R5350 += 1, R5306 += 1, R88 += 1 };
  s3 -> s2 [71, 65535] { R5350 += 1, R5306 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R5350 += 1, R5306 += 1, R88 += 1 };
  s3 -> s1 [76, 65535] { R5350 += 1, R5306 += 1, R88 += 1 };
  s4 -> s5 [0, 74] { R5350 += 1, R5306 += 1, R88 += 1 };
  s4 -> s4 [0, 65535] { R5350 += 1, R5306 += 1, R87 += 1, R88 += 1 };
  s4 -> s10 [75, 75] { R5350 += 1, R5306 += 1, R88 += 1 };
  s4 -> s5 [76, 65535] { R5350 += 1, R5306 += 1, R88 += 1 };
  s5 -> s5 [0, 74] { R5350 += 1, R5306 += 1, R88 += 1 };
  s5 -> s10 [75, 75] { R5350 += 1, R5306 += 1, R88 += 1 };
  s5 -> s5 [76, 65535] { R5350 += 1, R5306 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R5350 += 1, R5306 += 1, R88 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R5350 += 1 };
  s8 -> s10 [70, 70] { R5350 += 1, R5306 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R5350 += 1, R5306 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R5350 += 1, R5306 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R5350 += 1, R5306 += 1, R88 += 1 };
  s10 -> s12 [0, 65535] { R5350 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R5350 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R5350 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R5352 += 1, R5308 += 1, R91 += 1, R92 += 1 };
  s0 -> s0 [0, 65535] { R5351 += 1, R5352 += 1 };
  s0 -> s2 [0, 65535] { R5352 += 1, R5307 += 1, R5308 += 1 };
  s0 -> s3 [70, 70] { R5352 += 1, R5308 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R5352 += 1, R5308 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R5352 += 1, R5308 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R5352 += 1, R5308 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 65535] { R5352 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R5352 += 1, R5308 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R5352 += 1, R5308 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R5352 += 1, R5308 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R5352 += 1, R5308 += 1, R91 += 1, R92 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5352 += 1, R5307 += 1, R5308 += 1 };
  s2 -> s3 [70, 70] { R5352 += 1, R5308 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R5352 += 1, R5308 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R5352 += 1, R5308 += 1, R91 += 1, R92 += 1 };
  s3 -> s3 [0, 65535] { R5352 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5352 += 1, R5308 += 1, R91 += 1, R92 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5352 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5352 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R5354 += 1, R5310 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s2 [0, 69] { R5354 += 1, R5310 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s3 [0, 69] { R5354 += 1, R5310 += 1, R3452 += 1 };
  s0 -> s0 [0, 65535] { R5353 += 1, R5354 += 1 };
  s0 -> s4 [0, 65535] { R5354 += 1, R5309 += 1, R5310 += 1 };
  s0 -> s5 [70, 70] { R5354 += 1, R5310 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s6 [70, 70] { R5354 += 1, R5310 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s7 [70, 70] { R5354 += 1, R5310 += 1, R3452 += 1 };
  s0 -> s8 [70, 70] { R5354 += 1, R5310 += 1, R3452 += 1 };
  s0 -> s9 [70, 70] { R5354 += 1, R5310 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s10 [70, 70] { R5354 += 1, R5310 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s3 [71, 74] { R5354 += 1, R5310 += 1, R3452 += 1 };
  s0 -> s1 [71, 65535] { R5354 += 1, R5310 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s2 [71, 65535] { R5354 += 1, R5310 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s3 [76, 65535] { R5354 += 1, R5310 += 1, R3452 += 1 };
  s1 -> s1 [0, 69] { R5354 += 1, R5310 += 1, R3451 += 1, R3452 += 1 };
  s1 -> s2 [0, 69] { R5354 += 1, R5310 += 1, R3452 += 1, R3453 += 1 };
  s1 -> s3 [0, 69] { R5354 += 1, R5310 += 1, R3452 += 1 };
  s1 -> s5 [70, 70] { R5354 += 1, R5310 += 1, R3451 += 1, R3452 += 1 };
  s1 -> s6 [70, 70] { R5354 += 1, R5310 += 1, R3451 += 1, R3452 += 1 };
  s1 -> s7 [70, 70] { R5354 += 1, R5310 += 1, R3452 += 1 };
  s1 -> s8 [70, 70] { R5354 += 1, R5310 += 1, R3452 += 1 };
  s1 -> s9 [70, 70] { R5354 += 1, R5310 += 1, R3452 += 1, R3453 += 1 };
  s1 -> s10 [70, 70] { R5354 += 1, R5310 += 1, R3452 += 1, R3453 += 1 };
  s1 -> s3 [71, 74] { R5354 += 1, R5310 += 1, R3452 += 1 };
  s1 -> s1 [71, 65535] { R5354 += 1, R5310 += 1, R3451 += 1, R3452 += 1 };
  s1 -> s2 [71, 65535] { R5354 += 1, R5310 += 1, R3452 += 1, R3453 += 1 };
  s1 -> s3 [76, 65535] { R5354 += 1, R5310 += 1, R3452 += 1 };
  s2 -> s2 [0, 69] { R5354 += 1, R5310 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s3 [0, 69] { R5354 += 1, R5310 += 1, R3452 += 1 };
  s2 -> s7 [70, 70] { R5354 += 1, R5310 += 1, R3452 += 1 };
  s2 -> s8 [70, 70] { R5354 += 1, R5310 += 1, R3452 += 1 };
  s2 -> s9 [70, 70] { R5354 += 1, R5310 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s10 [70, 70] { R5354 += 1, R5310 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s3 [71, 74] { R5354 += 1, R5310 += 1, R3452 += 1 };
  s2 -> s2 [71, 65535] { R5354 += 1, R5310 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s3 [76, 65535] { R5354 += 1, R5310 += 1, R3452 += 1 };
  s3 -> s3 [0, 69] { R5354 += 1, R5310 += 1, R3452 += 1 };
  s3 -> s11 [0, 65535];
  s3 -> s3 [0, 65535] { R5354 += 1 };
  s3 -> s7 [70, 70] { R5354 += 1, R5310 += 1 };
  s3 -> s8 [70, 70] { R5354 += 1, R5310 += 1 };
  s3 -> s3 [71, 74] { R5354 += 1, R5310 += 1, R3452 += 1 };
  s3 -> s3 [71, 65535] { R5354 += 1, R5310 += 1 };
  s3 -> s3 [76, 65535] { R5354 += 1, R5310 += 1, R3452 += 1 };
  s4 -> s1 [0, 69] { R5354 += 1, R5310 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s2 [0, 69] { R5354 += 1, R5310 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s3 [0, 69] { R5354 += 1, R5310 += 1, R3452 += 1 };
  s4 -> s4 [0, 65535] { R5354 += 1, R5309 += 1, R5310 += 1 };
  s4 -> s5 [70, 70] { R5354 += 1, R5310 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s6 [70, 70] { R5354 += 1, R5310 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s7 [70, 70] { R5354 += 1, R5310 += 1, R3452 += 1 };
  s4 -> s8 [70, 70] { R5354 += 1, R5310 += 1, R3452 += 1 };
  s4 -> s9 [70, 70] { R5354 += 1, R5310 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s10 [70, 70] { R5354 += 1, R5310 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s3 [71, 74] { R5354 += 1, R5310 += 1, R3452 += 1 };
  s4 -> s1 [71, 65535] { R5354 += 1, R5310 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s2 [71, 65535] { R5354 += 1, R5310 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s3 [76, 65535] { R5354 += 1, R5310 += 1, R3452 += 1 };
  s6 -> s7 [0, 74] { R5354 += 1, R5310 += 1, R3452 += 1 };
  s6 -> s6 [0, 65535] { R5354 += 1, R5310 += 1, R3451 += 1, R3452 += 1 };
  s6 -> s10 [0, 65535] { R5354 += 1, R5310 += 1, R3452 += 1, R3453 += 1 };
  s6 -> s7 [76, 65535] { R5354 += 1, R5310 += 1, R3452 += 1 };
  s7 -> s7 [0, 74] { R5354 += 1, R5310 += 1, R3452 += 1 };
  s7 -> s11 [0, 65535];
  s7 -> s12 [0, 65535] { R5354 += 1 };
  s7 -> s7 [0, 65535] { R5354 += 1, R5310 += 1 };
  s7 -> s7 [76, 65535] { R5354 += 1, R5310 += 1, R3452 += 1 };
  s8 -> s11 [0, 65535];
  s8 -> s8 [0, 65535] { R5354 += 1 };
  s10 -> s7 [0, 74] { R5354 += 1, R5310 += 1, R3452 += 1 };
  s10 -> s10 [0, 65535] { R5354 += 1, R5310 += 1, R3452 += 1, R3453 += 1 };
  s10 -> s7 [76, 65535] { R5354 += 1, R5310 += 1, R3452 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R5354 += 1 };
  accepting s3, s12, s8, s7, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R5356 += 1, R5312 += 1, R5131 += 1, R5132 += 1 };
  s0 -> s2 [0, 65535] { R5356 += 1, R5311 += 1, R5312 += 1 };
  s0 -> s0 [0, 65535] { R5355 += 1, R5356 += 1 };
  s0 -> s3 [70, 70] { R5356 += 1, R5312 += 1, R5131 += 1, R5132 += 1 };
  s0 -> s4 [70, 70] { R5356 += 1, R5312 += 1, R5131 += 1, R5132 += 1 };
  s0 -> s1 [71, 65535] { R5356 += 1, R5312 += 1, R5131 += 1, R5132 += 1 };
  s1 -> s1 [0, 69] { R5356 += 1, R5312 += 1, R5131 += 1, R5132 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5356 += 1 };
  s1 -> s3 [70, 70] { R5356 += 1, R5312 += 1, R5131 += 1, R5132 += 1 };
  s1 -> s4 [70, 70] { R5356 += 1, R5312 += 1, R5131 += 1, R5132 += 1 };
  s1 -> s1 [71, 65535] { R5356 += 1, R5312 += 1, R5131 += 1, R5132 += 1 };
  s2 -> s1 [0, 69] { R5356 += 1, R5312 += 1, R5131 += 1, R5132 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5356 += 1, R5311 += 1, R5312 += 1 };
  s2 -> s3 [70, 70] { R5356 += 1, R5312 += 1, R5131 += 1, R5132 += 1 };
  s2 -> s4 [70, 70] { R5356 += 1, R5312 += 1, R5131 += 1, R5132 += 1 };
  s2 -> s1 [71, 65535] { R5356 += 1, R5312 += 1, R5131 += 1, R5132 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5356 += 1, R5312 += 1, R5131 += 1, R5132 += 1 };
  s3 -> s6 [0, 65535] { R5356 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5356 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5356 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R5358 += 1, R5314 += 1, R5249 += 1, R5250 += 1 };
  s0 -> s2 [0, 69] { R5358 += 1, R5314 += 1, R5250 += 1, R5252 += 1, R5253 += 1 };
  s0 -> s3 [0, 69] { R5358 += 1, R5314 += 1, R5250 += 1, R5251 += 1, R5252 += 1 };
  s0 -> s4 [0, 65535] { R5358 += 1, R5313 += 1, R5314 += 1 };
  s0 -> s0 [0, 65535] { R5357 += 1, R5358 += 1 };
  s0 -> s5 [70, 70] { R5358 += 1, R5314 += 1, R5249 += 1, R5250 += 1 };
  s0 -> s6 [70, 70] { R5358 += 1, R5314 += 1, R5250 += 1, R5251 += 1, R5252 += 1 };
  s0 -> s7 [70, 70] { R5358 += 1, R5314 += 1, R5249 += 1, R5250 += 1 };
  s0 -> s8 [70, 70] { R5358 += 1, R5314 += 1, R5250 += 1, R5251 += 1, R5252 += 1 };
  s0 -> s9 [70, 70] { R5358 += 1, R5314 += 1, R5250 += 1, R5252 += 1, R5253 += 1 };
  s0 -> s10 [70, 70] { R5358 += 1, R5314 += 1, R5250 += 1, R5252 += 1, R5253 += 1 };
  s0 -> s1 [71, 65535] { R5358 += 1, R5314 += 1, R5249 += 1, R5250 += 1 };
  s0 -> s2 [71, 65535] { R5358 += 1, R5314 += 1, R5250 += 1, R5252 += 1, R5253 += 1 };
  s0 -> s3 [71, 65535] { R5358 += 1, R5314 += 1, R5250 += 1, R5251 += 1, R5252 += 1 };
  s1 -> s1 [0, 69] { R5358 += 1, R5314 += 1, R5249 += 1, R5250 += 1 };
  s1 -> s2 [0, 69] { R5358 += 1, R5314 += 1, R5250 += 1, R5252 += 1, R5253 += 1 };
  s1 -> s3 [0, 69] { R5358 += 1, R5314 += 1, R5250 += 1, R5251 += 1, R5252 += 1 };
  s1 -> s5 [70, 70] { R5358 += 1, R5314 += 1, R5249 += 1, R5250 += 1 };
  s1 -> s6 [70, 70] { R5358 += 1, R5314 += 1, R5250 += 1, R5251 += 1, R5252 += 1 };
  s1 -> s7 [70, 70] { R5358 += 1, R5314 += 1, R5249 += 1, R5250 += 1 };
  s1 -> s8 [70, 70] { R5358 += 1, R5314 += 1, R5250 += 1, R5251 += 1, R5252 += 1 };
  s1 -> s9 [70, 70] { R5358 += 1, R5314 += 1, R5250 += 1, R5252 += 1, R5253 += 1 };
  s1 -> s10 [70, 70] { R5358 += 1, R5314 += 1, R5250 += 1, R5252 += 1, R5253 += 1 };
  s1 -> s1 [71, 65535] { R5358 += 1, R5314 += 1, R5249 += 1, R5250 += 1 };
  s1 -> s2 [71, 65535] { R5358 += 1, R5314 += 1, R5250 += 1, R5252 += 1, R5253 += 1 };
  s1 -> s3 [71, 65535] { R5358 += 1, R5314 += 1, R5250 += 1, R5251 += 1, R5252 += 1 };
  s2 -> s17 [0, 69] { R5358 += 1, R5314 += 1, R5250 += 1 };
  s2 -> s15 [0, 69] { R5358 += 1, R5314 += 1 };
  s2 -> s2 [0, 69] { R5358 += 1, R5314 += 1, R5250 += 1, R5252 += 1, R5253 += 1 };
  s2 -> s11 [70, 70] { R5358 += 1, R5314 += 1 };
  s2 -> s9 [70, 70] { R5358 += 1, R5314 += 1, R5250 += 1, R5252 += 1, R5253 += 1 };
  s2 -> s16 [70, 70] { R5358 += 1, R5314 += 1 };
  s2 -> s12 [70, 70] { R5358 += 1, R5314 += 1, R5250 += 1 };
  s2 -> s10 [70, 70] { R5358 += 1, R5314 += 1, R5250 += 1, R5252 += 1, R5253 += 1 };
  s2 -> s18 [70, 70] { R5358 += 1, R5314 += 1, R5250 += 1 };
  s2 -> s17 [71, 65535] { R5358 += 1, R5314 += 1, R5250 += 1 };
  s2 -> s15 [71, 65535] { R5358 += 1, R5314 += 1 };
  s2 -> s2 [71, 65535] { R5358 += 1, R5314 += 1, R5250 += 1, R5252 += 1, R5253 += 1 };
  s3 -> s15 [0, 69] { R5358 += 1, R5314 += 1 };
  s3 -> s2 [0, 69] { R5358 += 1, R5314 += 1, R5250 += 1, R5252 += 1, R5253 += 1 };
  s3 -> s3 [0, 69] { R5358 += 1, R5314 += 1, R5250 += 1, R5251 += 1, R5252 += 1 };
  s3 -> s6 [70, 70] { R5358 += 1, R5314 += 1, R5250 += 1, R5251 += 1, R5252 += 1 };
  s3 -> s8 [70, 70] { R5358 += 1, R5314 += 1, R5250 += 1, R5251 += 1, R5252 += 1 };
  s3 -> s11 [70, 70] { R5358 += 1, R5314 += 1 };
  s3 -> s9 [70, 70] { R5358 += 1, R5314 += 1, R5250 += 1, R5252 += 1, R5253 += 1 };
  s3 -> s16 [70, 70] { R5358 += 1, R5314 += 1 };
  s3 -> s10 [70, 70] { R5358 += 1, R5314 += 1, R5250 += 1, R5252 += 1, R5253 += 1 };
  s3 -> s15 [71, 65535] { R5358 += 1, R5314 += 1 };
  s3 -> s2 [71, 65535] { R5358 += 1, R5314 += 1, R5250 += 1, R5252 += 1, R5253 += 1 };
  s3 -> s3 [71, 65535] { R5358 += 1, R5314 += 1, R5250 += 1, R5251 += 1, R5252 += 1 };
  s4 -> s1 [0, 69] { R5358 += 1, R5314 += 1, R5249 += 1, R5250 += 1 };
  s4 -> s2 [0, 69] { R5358 += 1, R5314 += 1, R5250 += 1, R5252 += 1, R5253 += 1 };
  s4 -> s3 [0, 69] { R5358 += 1, R5314 += 1, R5250 += 1, R5251 += 1, R5252 += 1 };
  s4 -> s4 [0, 65535] { R5358 += 1, R5313 += 1, R5314 += 1 };
  s4 -> s5 [70, 70] { R5358 += 1, R5314 += 1, R5249 += 1, R5250 += 1 };
  s4 -> s6 [70, 70] { R5358 += 1, R5314 += 1, R5250 += 1, R5251 += 1, R5252 += 1 };
  s4 -> s7 [70, 70] { R5358 += 1, R5314 += 1, R5249 += 1, R5250 += 1 };
  s4 -> s8 [70, 70] { R5358 += 1, R5314 += 1, R5250 += 1, R5251 += 1, R5252 += 1 };
  s4 -> s9 [70, 70] { R5358 += 1, R5314 += 1, R5250 += 1, R5252 += 1, R5253 += 1 };
  s4 -> s10 [70, 70] { R5358 += 1, R5314 += 1, R5250 += 1, R5252 += 1, R5253 += 1 };
  s4 -> s1 [71, 65535] { R5358 += 1, R5314 += 1, R5249 += 1, R5250 += 1 };
  s4 -> s2 [71, 65535] { R5358 += 1, R5314 += 1, R5250 += 1, R5252 += 1, R5253 += 1 };
  s4 -> s3 [71, 65535] { R5358 += 1, R5314 += 1, R5250 += 1, R5251 += 1, R5252 += 1 };
  s5 -> s5 [0, 65535] { R5358 += 1, R5314 += 1, R5249 += 1, R5250 += 1 };
  s5 -> s6 [0, 65535] { R5358 += 1, R5314 += 1, R5250 += 1, R5251 += 1, R5252 += 1 };
  s5 -> s10 [0, 65535] { R5358 += 1, R5314 += 1, R5250 += 1, R5252 += 1, R5253 += 1 };
  s6 -> s6 [0, 65535] { R5358 += 1, R5314 += 1, R5250 += 1, R5251 += 1, R5252 += 1 };
  s6 -> s11 [0, 65535] { R5358 += 1, R5314 += 1 };
  s6 -> s10 [0, 65535] { R5358 += 1, R5314 += 1, R5250 += 1, R5252 += 1, R5253 += 1 };
  s10 -> s11 [0, 65535] { R5358 += 1, R5314 += 1 };
  s10 -> s12 [0, 65535] { R5358 += 1, R5314 += 1, R5250 += 1 };
  s10 -> s10 [0, 65535] { R5358 += 1, R5314 += 1, R5250 += 1, R5252 += 1, R5253 += 1 };
  s11 -> s13 [0, 65535];
  s11 -> s11 [0, 65535] { R5358 += 1, R5314 += 1 };
  s11 -> s14 [0, 65535] { R5358 += 1 };
  s12 -> s11 [0, 65535] { R5358 += 1, R5314 += 1 };
  s12 -> s12 [0, 65535] { R5358 += 1, R5314 += 1, R5250 += 1 };
  s13 -> s13 [0, 65535];
  s14 -> s13 [0, 65535];
  s14 -> s14 [0, 65535] { R5358 += 1 };
  s15 -> s15 [0, 69] { R5358 += 1, R5314 += 1 };
  s15 -> s13 [0, 65535];
  s15 -> s15 [0, 65535] { R5358 += 1 };
  s15 -> s11 [70, 70] { R5358 += 1, R5314 += 1 };
  s15 -> s16 [70, 70] { R5358 += 1, R5314 += 1 };
  s15 -> s15 [71, 65535] { R5358 += 1, R5314 += 1 };
  s16 -> s13 [0, 65535];
  s16 -> s16 [0, 65535] { R5358 += 1 };
  s17 -> s17 [0, 69] { R5358 += 1, R5314 += 1, R5250 += 1 };
  s17 -> s15 [0, 69] { R5358 += 1, R5314 += 1 };
  s17 -> s11 [70, 70] { R5358 += 1, R5314 += 1 };
  s17 -> s16 [70, 70] { R5358 += 1, R5314 += 1 };
  s17 -> s12 [70, 70] { R5358 += 1, R5314 += 1, R5250 += 1 };
  s17 -> s18 [70, 70] { R5358 += 1, R5314 += 1, R5250 += 1 };
  s17 -> s17 [71, 65535] { R5358 += 1, R5314 += 1, R5250 += 1 };
  s17 -> s15 [71, 65535] { R5358 += 1, R5314 += 1 };
  accepting s16, s13, s14, s15, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R5276 && R3 = R5358 && R23 - R5358 = -1 && R24 = R5358 && R25 - R5358 = -1 && R26 = R5358 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R5136 + -1*R5132 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R5136 + -1*R5132 - R66 = 0 && R55 + R96 + R93 + -1*R5138 + -1*R5134 - R68 = 0 && R65 + R5135 + R5131 = 0 && R67 + R5137 + R5133 = 0 && R5275 = 0 && R5299 = 0 && R5300 = 0 && R5305 = 0 && R5306 = 0 && R5309 = 0 && R5310 = 0 && R5313 = 0 && R5314 = 0 && R5315 = 0 && R5316 = R5358 && R5317 = 0 && R5318 = R5358 && R5319 = 0 && R5320 = R5358 && R5321 = 0 && R5322 = R5358 && R5323 = 0 && R5324 = R5358 && R5325 = 0 && R5326 = R5358 && R5327 = 0 && R5328 = R5358 && R5329 = 0 && R5330 = R5358 && R5331 = 0 && R5332 = R5358 && R5333 = 0 && R5334 = R5358 && R5335 = 0 && R5336 = R5358 && R5337 = 0 && R5338 = R5358 && R5339 = 0 && R5340 = R5358 && R5341 = 0 && R5342 = R5358 && R5343 = 0 && R5344 = R5358 && R5345 = 0 && R5346 = R5358 && R5347 = 0 && R5348 = R5358 && R5349 = 0 && R5350 = R5358 && R5351 = 0 && R5352 = R5358 && R5353 = 0 && R5354 = R5358 && R5355 = 0 && R5356 = R5358 && R5357 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R3456 + R3453 < 1 && -1*R5136 + -1*R5132 - R66 < 1 && -1*R5138 + -1*R5134 - R68 < 1 && -1 < R5276 && 0 < R5358 && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R5136 + -1*R5132 - R66 = 0 || R66 + R5136 + R5132 < 1) && (R59 + R3454 + R3451 != 0 || R60 + R3455 + R3452 + -1*R5136 + -1*R5132 - R66 = 0 || R66 + R5136 + R5132 < 1) && (R66 + R5136 + R5132 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R5138 + R5134 < 1) && (R53 + R94 + R91 = 0 || R68 + R5138 + R5134 < 1))) && (R66 + R5136 + R5132 != 0 || ((R59 + R3454 + R3451 != 0 || R60 + R3455 + R3452 = 0 || R68 + R5138 + R5134 < 1) && (R59 + R3454 + R3451 = 0 || R68 + R5138 + R5134 < 1))) && (R66 + R5136 + R5132 != 0 || ((R73 + R5254 + R5249 != 0 || R74 + R5255 + R5250 = 0 || R68 + R5138 + R5134 < 1) && (R73 + R5254 + R5249 = 0 || R68 + R5138 + R5134 < 1))) && (R68 + R5138 + R5134 != 0 || R77 + R5258 + R5253 = 0 || (R75 + R5256 + R5251 = 0 && R76 + R5257 + R5252 = 0)) && (R73 + R5254 + R5249 != 0 || R66 + R5136 + R5132 + -1*R5255 + -1*R5250 - R74 = 0 || R66 + R5136 + R5132 < 1) && (R75 + R5256 + R5251 != 0 || R68 + R5138 + R5134 + -1*R5257 + -1*R5252 - R76 = 0 || R68 + R5138 + R5134 < 1) && (R5259 != 0 || R5260 = R5276 || (R20 = 0 && R5276 = 0)) && (R5261 != 0 || R5262 = R5276 || (R20 = 0 && R5276 = 0)) && (R5263 != 0 || R5264 = R5276 || (R20 = 0 && R5276 = 0)) && (R5265 != 0 || R5266 = R5276 || (R20 = 0 && R5276 = 0)) && (R5267 != 0 || R5268 = R5276 || (R20 = 0 && R5276 = 0)) && (R5269 != 0 || R5270 = R5276 || (R20 = 0 && R5276 = 0)) && (R5271 != 0 || R5272 = R5276 || (R20 = 0 && R5276 = 0)) && (R5273 != 0 || R5274 = R5276 || (R20 = 0 && R5276 = 0)) && (R5277 != 0 || R5276 = R5278 || (R20 = 0 && R5276 = 0)) && (R21 = 0 || (R5297 = 0 && R5298 = 0)) && (R21 = 0 || (R5301 = 0 && R5302 = 0)) && (R21 = 0 || (R5303 = 0 && R5304 = 0)) && (R21 = 0 || (R5307 = 0 && R5308 = 0)) && (R21 = 0 || (R5311 = 0 && R5312 = 0)) && (R22 = 0 || (R5279 = 0 && R5280 = 0)) && (R22 = 0 || (R5281 = 0 && R5282 = 0)) && (R22 = 0 || (R5283 = 0 && R5284 = 0)) && (R22 = 0 || (R5285 = 0 && R5286 = 0)) && (R22 = 0 || (R5287 = 0 && R5288 = 0)) && (R22 = 0 || (R5289 = 0 && R5290 = 0)) && (R22 = 0 || (R5291 = 0 && R5292 = 0)) && (R22 = 0 || (R5293 = 0 && R5294 = 0)) && (R22 = 0 || (R5295 = 0 && R5296 = 0)) && (R53 + R94 + R91 = 0 || R66 + R5136 + R5132 < 1) && (R59 + R3454 + R3451 = 0 || R66 + R5136 + R5132 < 1) && (R73 + R5254 + R5249 = 0 || R66 + R5136 + R5132 < 1) && (R75 + R5256 + R5251 = 0 || R68 + R5138 + R5134 < 1) && (R5259 = 0 || (R20 = 0 && R5276 = 0)) && (R5261 = 0 || (R20 = 0 && R5276 = 0)) && (R5263 = 0 || (R20 = 0 && R5276 = 0)) && (R5265 = 0 || (R20 = 0 && R5276 = 0)) && (R5267 = 0 || (R20 = 0 && R5276 = 0)) && (R5269 = 0 || (R20 = 0 && R5276 = 0)) && (R5271 = 0 || (R20 = 0 && R5276 = 0)) && (R5273 = 0 || (R20 = 0 && R5276 = 0)) && (R5277 = 0 || (R20 = 0 && R5276 = 0));
// End of Parikh automata intersection problem
