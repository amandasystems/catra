// Parikh automata intersection problem, generated by OSTRICH+
counter int R10159, R10160, R10161, R10162, R10163, R10164, R12, R12955, R12956, R12957, R12958, R12959, R12960, R12961, R12962, R13293, R13294, R13295, R13296, R13297, R13298, R13299, R13300, R13301, R13302, R13303, R13304, R13305, R13306, R13307, R13308, R13309, R13310, R13311, R13312, R13313, R13314, R13315, R13316, R13317, R13318, R13319, R13320, R13321, R13322, R13323, R13324, R13325, R13326, R13327, R13328, R13329, R13330, R13331, R13332, R13333, R13334, R13335, R13336, R13337, R13338, R13339, R13340, R13341, R13342, R13343, R13344, R13345, R13346, R13347, R13348, R13349, R13350, R13351, R13352, R13353, R13354, R13355, R13356, R13357, R13358, R13359, R13360, R13361, R13362, R13363, R13364, R13365, R13366, R13367, R13368, R13369, R13370, R13371, R13372, R13373, R13374, R13375, R13376, R13377, R13378, R13379, R13380, R13381, R13382, R13383, R13384, R13385, R13386, R13387, R13388, R13389, R13390, R13391, R13392, R13393, R13394, R13395, R13396, R13397, R13398, R13399, R13400, R13401, R13402, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R4, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R13323 += 1, R13324 += 1 };
  s0 -> s1 [0, 65535] { R13324 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R13324 += 1, R22 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R13326 += 1 };
  s0 -> s0 [0, 65535] { R13325 += 1, R13326 += 1 };
  s0 -> s2 [70, 70] { R13326 += 1 };
  s0 -> s3 [70, 70] { R13326 += 1 };
  s0 -> s1 [76, 65535] { R13326 += 1 };
  s1 -> s1 [0, 69] { R13326 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13326 += 1 };
  s1 -> s3 [70, 70] { R13326 += 1 };
  s1 -> s1 [76, 65535] { R13326 += 1 };
  s2 -> s2 [0, 70] { R13326 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R13326 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R13328 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R13327 += 1, R13328 += 1 };
  s0 -> s2 [70, 70] { R13328 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R13328 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R13328 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R13328 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13328 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R13328 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R13328 += 1, R45 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R13328 += 1, R45 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R13330 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R13329 += 1, R13330 += 1 };
  s0 -> s2 [70, 70] { R13330 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R13330 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R13330 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R13330 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13330 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R13330 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R13330 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R13330 += 1, R47 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R13332 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R13331 += 1, R13332 += 1 };
  s0 -> s2 [70, 70] { R13332 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R13332 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R13332 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R13332 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13332 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R13332 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R13332 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13332 += 1, R49 += 1, R50 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R13334 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R13333 += 1, R13334 += 1 };
  s0 -> s2 [70, 70] { R13334 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R13334 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R13334 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R13334 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13334 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R13334 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R13334 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535] { R13334 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R13336 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R13335 += 1, R13336 += 1 };
  s0 -> s2 [70, 70] { R13336 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R13336 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R13336 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R13336 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13336 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R13336 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R13336 += 1, R59 += 1, R60 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13336 += 1, R59 += 1, R60 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R13338 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R13337 += 1, R13338 += 1 };
  s0 -> s2 [70, 70] { R13338 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R13338 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R13338 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R13338 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13338 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R13338 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R13338 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13338 += 1, R65 += 1, R66 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R13340 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R13339 += 1, R13340 += 1 };
  s0 -> s2 [70, 70] { R13340 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R13340 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R13340 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R13340 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13340 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R13340 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R13340 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R13340 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R13360 += 1 };
  s0 -> s0 [0, 65535] { R13359 += 1, R13360 += 1 };
  s0 -> s2 [70, 70] { R13360 += 1 };
  s0 -> s1 [71, 65535] { R13360 += 1 };
  s1 -> s1 [0, 69] { R13360 += 1 };
  s1 -> s2 [70, 70] { R13360 += 1 };
  s1 -> s1 [71, 65535] { R13360 += 1 };
  s2 -> s2 [0, 65535] { R13360 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R13362 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R13361 += 1, R13362 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R13362 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R13364 += 1 };
  s0 -> s0 [0, 65535] { R13363 += 1, R13364 += 1 };
  s0 -> s2 [0, 65535] { R13364 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R13364 += 1 };
  s0 -> s1 [71, 65535] { R13364 += 1 };
  s1 -> s1 [0, 69] { R13364 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R13364 += 1 };
  s1 -> s1 [71, 65535] { R13364 += 1 };
  s2 -> s1 [0, 69] { R13364 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13364 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R13364 += 1 };
  s2 -> s1 [71, 65535] { R13364 += 1 };
  s3 -> s3 [0, 65535] { R13364 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R13366 += 1, R13304 += 1 };
  s0 -> s0 [0, 65535] { R13365 += 1, R13366 += 1 };
  s0 -> s2 [0, 65535] { R13366 += 1, R13303 += 1, R13304 += 1 };
  s0 -> s1 [71, 65535] { R13366 += 1, R13304 += 1 };
  s1 -> s1 [0, 69] { R13366 += 1, R13304 += 1 };
  s1 -> s1 [0, 65535] { R13366 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R13366 += 1, R13304 += 1 };
  s2 -> s1 [0, 69] { R13366 += 1, R13304 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13366 += 1, R13303 += 1, R13304 += 1 };
  s2 -> s1 [71, 65535] { R13366 += 1, R13304 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R13368 += 1, R13306 += 1, R20 += 1 };
  s0 -> s0 [0, 65535] { R13367 += 1, R13368 += 1 };
  s0 -> s2 [0, 65535] { R13368 += 1, R13305 += 1, R13306 += 1 };
  s1 -> s4 [0, 65535] { R13368 += 1 };
  s1 -> s1 [0, 65535] { R13368 += 1, R13306 += 1, R20 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R13368 += 1, R13306 += 1, R20 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13368 += 1, R13305 += 1, R13306 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13368 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R13370 += 1, R13308 += 1 };
  s0 -> s0 [0, 65535] { R13369 += 1, R13370 += 1 };
  s0 -> s2 [0, 65535] { R13370 += 1, R13307 += 1, R13308 += 1 };
  s0 -> s1 [75, 65535] { R13370 += 1, R13308 += 1 };
  s1 -> s1 [0, 70] { R13370 += 1, R13308 += 1 };
  s1 -> s1 [0, 65535] { R13370 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R13370 += 1, R13308 += 1 };
  s2 -> s1 [0, 70] { R13370 += 1, R13308 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13370 += 1, R13307 += 1, R13308 += 1 };
  s2 -> s1 [75, 65535] { R13370 += 1, R13308 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R13371 += 1, R13372 += 1 };
  s0 -> s1 [0, 65535] { R13372 += 1, R13310 += 1, R84 += 1 };
  s0 -> s2 [0, 65535] { R13372 += 1, R13309 += 1, R13310 += 1 };
  s1 -> s1 [0, 65535] { R13372 += 1, R13310 += 1, R84 += 1 };
  s1 -> s4 [0, 65535] { R13372 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R13372 += 1, R13310 += 1, R84 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13372 += 1, R13309 += 1, R13310 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13372 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R13374 += 1, R13312 += 1 };
  s0 -> s2 [0, 65535] { R13374 += 1, R13311 += 1, R13312 += 1 };
  s0 -> s3 [0, 65535] { R13374 += 1, R13312 += 1, R86 += 1 };
  s0 -> s0 [0, 65535] { R13373 += 1, R13374 += 1 };
  s0 -> s1 [76, 65535] { R13374 += 1, R13312 += 1 };
  s1 -> s1 [0, 74] { R13374 += 1, R13312 += 1 };
  s1 -> s1 [0, 65535] { R13374 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [76, 65535] { R13374 += 1, R13312 += 1 };
  s2 -> s1 [0, 74] { R13374 += 1, R13312 += 1 };
  s2 -> s2 [0, 65535] { R13374 += 1, R13311 += 1, R13312 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R13374 += 1, R13312 += 1, R86 += 1 };
  s2 -> s1 [76, 65535] { R13374 += 1, R13312 += 1 };
  s3 -> s1 [0, 74] { R13374 += 1, R13312 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13374 += 1, R13312 += 1, R86 += 1 };
  s3 -> s5 [0, 65535] { R13374 += 1 };
  s3 -> s1 [76, 65535] { R13374 += 1, R13312 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13374 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R13376 += 1, R13314 += 1 };
  s0 -> s2 [0, 65535] { R13376 += 1, R13313 += 1, R13314 += 1 };
  s0 -> s0 [0, 65535] { R13375 += 1, R13376 += 1 };
  s0 -> s3 [0, 65535] { R13376 += 1, R13314 += 1, R90 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R13376 += 1, R13314 += 1 };
  s1 -> s5 [0, 65535] { R13376 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R13376 += 1, R13314 += 1 };
  s2 -> s2 [0, 65535] { R13376 += 1, R13313 += 1, R13314 += 1 };
  s2 -> s3 [0, 65535] { R13376 += 1, R13314 += 1, R90 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R13376 += 1, R13314 += 1 };
  s3 -> s5 [0, 65535] { R13376 += 1 };
  s3 -> s3 [0, 65535] { R13376 += 1, R13314 += 1, R90 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13376 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R13378 += 1, R13316 += 1, R94 += 1, R95 += 1 };
  s0 -> s2 [0, 65535] { R13378 += 1, R13315 += 1, R13316 += 1 };
  s0 -> s3 [0, 65535] { R13378 += 1, R13316 += 1, R95 += 1, R96 += 1 };
  s0 -> s0 [0, 65535] { R13377 += 1, R13378 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13378 += 1, R13316 += 1, R94 += 1, R95 += 1 };
  s1 -> s6 [0, 65535] { R13378 += 1 };
  s1 -> s3 [0, 65535] { R13378 += 1, R13316 += 1, R95 += 1, R96 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R13378 += 1, R13316 += 1, R94 += 1, R95 += 1 };
  s2 -> s2 [0, 65535] { R13378 += 1, R13315 += 1, R13316 += 1 };
  s2 -> s3 [0, 65535] { R13378 += 1, R13316 += 1, R95 += 1, R96 += 1 };
  s3 -> s4 [0, 65535] { R13378 += 1, R13316 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R13378 += 1 };
  s3 -> s3 [0, 65535] { R13378 += 1, R13316 += 1, R95 += 1, R96 += 1 };
  s4 -> s4 [0, 65535] { R13378 += 1, R13316 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R13378 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13378 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 65535] { R13380 += 1, R13318 += 1 };
  s0 -> s0 [0, 65535] { R13379 += 1, R13380 += 1 };
  s0 -> s2 [0, 65535] { R13380 += 1, R13317 += 1, R13318 += 1 };
  s1 -> s1 [0, 65535] { R13380 += 1, R13318 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R13380 += 1 };
  s2 -> s1 [0, 65535] { R13380 += 1, R13318 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13380 += 1, R13317 += 1, R13318 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13380 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 74] { R13382 += 1, R13320 += 1, R12960 += 1, R12962 += 1 };
  s0 -> s2 [0, 65535] { R13382 += 1, R13319 += 1, R13320 += 1 };
  s0 -> s0 [0, 65535] { R13381 += 1, R13382 += 1 };
  s0 -> s3 [0, 65535] { R13382 += 1, R13320 += 1, R12960 += 1, R12961 += 1, R12962 += 1 };
  s0 -> s4 [75, 75] { R13382 += 1, R13320 += 1, R12960 += 1, R12962 += 1 };
  s0 -> s1 [76, 65535] { R13382 += 1, R13320 += 1, R12960 += 1, R12962 += 1 };
  s1 -> s1 [0, 74] { R13382 += 1, R13320 += 1, R12960 += 1, R12962 += 1 };
  s1 -> s4 [75, 75] { R13382 += 1, R13320 += 1, R12960 += 1, R12962 += 1 };
  s1 -> s1 [76, 65535] { R13382 += 1, R13320 += 1, R12960 += 1, R12962 += 1 };
  s2 -> s1 [0, 74] { R13382 += 1, R13320 += 1, R12960 += 1, R12962 += 1 };
  s2 -> s2 [0, 65535] { R13382 += 1, R13319 += 1, R13320 += 1 };
  s2 -> s3 [0, 65535] { R13382 += 1, R13320 += 1, R12960 += 1, R12961 += 1, R12962 += 1 };
  s2 -> s4 [75, 75] { R13382 += 1, R13320 += 1, R12960 += 1, R12962 += 1 };
  s2 -> s1 [76, 65535] { R13382 += 1, R13320 += 1, R12960 += 1, R12962 += 1 };
  s3 -> s1 [0, 74] { R13382 += 1, R13320 += 1, R12960 += 1, R12962 += 1 };
  s3 -> s3 [0, 65535] { R13382 += 1, R13320 += 1, R12960 += 1, R12961 += 1, R12962 += 1 };
  s3 -> s4 [75, 75] { R13382 += 1, R13320 += 1, R12960 += 1, R12962 += 1 };
  s3 -> s1 [76, 65535] { R13382 += 1, R13320 += 1, R12960 += 1, R12962 += 1 };
  s4 -> s5 [0, 65535] { R13382 += 1, R13320 += 1, R12960 += 1 };
  s4 -> s6 [0, 65535] { R13382 += 1 };
  s4 -> s4 [0, 65535] { R13382 += 1, R13320 += 1, R12960 += 1, R12962 += 1 };
  s4 -> s7 [0, 65535] { R13382 += 1, R13320 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R13382 += 1, R13320 += 1, R12960 += 1 };
  s5 -> s6 [0, 65535] { R13382 += 1 };
  s5 -> s7 [0, 65535] { R13382 += 1, R13320 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R13382 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s6 [0, 65535] { R13382 += 1 };
  s7 -> s7 [0, 65535] { R13382 += 1, R13320 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s4, s8, s5, s6, s7;
};
automaton value2_29 {
  init s0;
  s0 -> s0 [0, 65535] { R13383 += 1, R13384 += 1 };
  s0 -> s1 [0, 65535] { R13384 += 1, R13321 += 1, R13322 += 1 };
  s0 -> s2 [0, 65535] { R13384 += 1, R13322 += 1, R13299 += 1 };
  s0 -> s3 [0, 65535] { R13384 += 1, R13322 += 1, R13299 += 1, R13301 += 1, R13302 += 1 };
  s0 -> s4 [0, 65535] { R13384 += 1, R13322 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13384 += 1, R13321 += 1, R13322 += 1 };
  s1 -> s2 [0, 65535] { R13384 += 1, R13322 += 1, R13299 += 1 };
  s1 -> s3 [0, 65535] { R13384 += 1, R13322 += 1, R13299 += 1, R13301 += 1, R13302 += 1 };
  s1 -> s4 [0, 65535] { R13384 += 1, R13322 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R13384 += 1 };
  s2 -> s2 [0, 65535] { R13384 += 1, R13322 += 1, R13299 += 1 };
  s2 -> s4 [0, 65535] { R13384 += 1, R13322 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R13384 += 1 };
  s3 -> s2 [0, 65535] { R13384 += 1, R13322 += 1, R13299 += 1 };
  s3 -> s3 [0, 65535] { R13384 += 1, R13322 += 1, R13299 += 1, R13301 += 1, R13302 += 1 };
  s3 -> s4 [0, 65535] { R13384 += 1, R13322 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R13384 += 1 };
  s4 -> s4 [0, 65535] { R13384 += 1, R13322 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13384 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R13386 += 1, R13342 += 1, R21 += 1 };
  s0 -> s0 [0, 65535] { R13385 += 1, R13386 += 1 };
  s0 -> s2 [0, 65535] { R13386 += 1, R13341 += 1, R13342 += 1 };
  s1 -> s1 [0, 65535] { R13386 += 1, R13342 += 1, R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R13386 += 1 };
  s2 -> s1 [0, 65535] { R13386 += 1, R13342 += 1, R21 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13386 += 1, R13341 += 1, R13342 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13386 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R13388 += 1, R13344 += 1 };
  s0 -> s0 [0, 65535] { R13387 += 1, R13388 += 1 };
  s0 -> s2 [0, 65535] { R13388 += 1, R13343 += 1, R13344 += 1 };
  s0 -> s3 [70, 70] { R13388 += 1, R13344 += 1 };
  s0 -> s4 [70, 70] { R13388 += 1, R13344 += 1 };
  s0 -> s5 [75, 75] { R13388 += 1, R13344 += 1 };
  s0 -> s1 [76, 65535] { R13388 += 1, R13344 += 1 };
  s1 -> s1 [0, 69] { R13388 += 1, R13344 += 1 };
  s1 -> s3 [70, 70] { R13388 += 1, R13344 += 1 };
  s1 -> s4 [70, 70] { R13388 += 1, R13344 += 1 };
  s1 -> s5 [75, 75] { R13388 += 1, R13344 += 1 };
  s1 -> s1 [76, 65535] { R13388 += 1, R13344 += 1 };
  s2 -> s1 [0, 69] { R13388 += 1, R13344 += 1 };
  s2 -> s2 [0, 65535] { R13388 += 1, R13343 += 1, R13344 += 1 };
  s2 -> s3 [70, 70] { R13388 += 1, R13344 += 1 };
  s2 -> s4 [70, 70] { R13388 += 1, R13344 += 1 };
  s2 -> s5 [75, 75] { R13388 += 1, R13344 += 1 };
  s2 -> s1 [76, 65535] { R13388 += 1, R13344 += 1 };
  s3 -> s3 [0, 70] { R13388 += 1, R13344 += 1 };
  s3 -> s8 [75, 75] { R13388 += 1, R13344 += 1 };
  s3 -> s3 [76, 65535] { R13388 += 1, R13344 += 1 };
  s5 -> s5 [0, 69] { R13388 += 1, R13344 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R13388 += 1 };
  s5 -> s7 [70, 70] { R13388 += 1, R13344 += 1 };
  s5 -> s8 [70, 70] { R13388 += 1, R13344 += 1 };
  s5 -> s5 [75, 65535] { R13388 += 1, R13344 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R13388 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 70] { R13388 += 1, R13344 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R13388 += 1 };
  s8 -> s8 [75, 65535] { R13388 += 1, R13344 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R13390 += 1, R13346 += 1, R83 += 1 };
  s0 -> s2 [0, 65535] { R13390 += 1, R13345 += 1, R13346 += 1 };
  s0 -> s0 [0, 65535] { R13389 += 1, R13390 += 1 };
  s0 -> s3 [70, 70] { R13390 += 1, R13346 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R13390 += 1, R13346 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R13390 += 1, R13346 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R13390 += 1, R13346 += 1, R83 += 1 };
  s1 -> s1 [0, 65535] { R13390 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R13390 += 1, R13346 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R13390 += 1, R13346 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R13390 += 1, R13346 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R13390 += 1, R13346 += 1, R83 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R13390 += 1, R13345 += 1, R13346 += 1 };
  s2 -> s3 [70, 70] { R13390 += 1, R13346 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R13390 += 1, R13346 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R13390 += 1, R13346 += 1, R83 += 1 };
  s3 -> s3 [0, 65535] { R13390 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R13390 += 1, R13346 += 1, R83 += 1 };
  s4 -> s5 [0, 65535] { R13390 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R13390 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R13392 += 1, R13348 += 1, R85 += 1 };
  s0 -> s2 [0, 65535] { R13392 += 1, R13347 += 1, R13348 += 1 };
  s0 -> s0 [0, 65535] { R13391 += 1, R13392 += 1 };
  s0 -> s3 [70, 70] { R13392 += 1, R13348 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R13392 += 1, R13348 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R13392 += 1, R13348 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R13392 += 1, R13348 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R13392 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R13392 += 1, R13348 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R13392 += 1, R13348 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R13392 += 1, R13348 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R13392 += 1, R13348 += 1, R85 += 1 };
  s2 -> s2 [0, 65535] { R13392 += 1, R13347 += 1, R13348 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R13392 += 1, R13348 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R13392 += 1, R13348 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R13392 += 1, R13348 += 1, R85 += 1 };
  s3 -> s3 [0, 65535] { R13392 += 1, R13348 += 1, R85 += 1 };
  s3 -> s6 [0, 65535] { R13392 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13392 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13392 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R13394 += 1, R13350 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R13394 += 1, R13350 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [0, 65535] { R13394 += 1, R13349 += 1, R13350 += 1 };
  s0 -> s0 [0, 65535] { R13393 += 1, R13394 += 1 };
  s0 -> s4 [70, 70] { R13394 += 1, R13350 += 1, R87 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R13394 += 1, R13350 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R13394 += 1, R13350 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R13394 += 1, R13350 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 74] { R13394 += 1, R13350 += 1, R88 += 1 };
  s0 -> s2 [71, 65535] { R13394 += 1, R13350 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R13394 += 1, R13350 += 1, R88 += 1 };
  s0 -> s1 [76, 65535] { R13394 += 1, R13350 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R13394 += 1, R13350 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R13394 += 1, R13350 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R13394 += 1, R13350 += 1, R88 += 1 };
  s1 -> s1 [71, 74] { R13394 += 1, R13350 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R13394 += 1, R13350 += 1, R88 += 1 };
  s1 -> s1 [76, 65535] { R13394 += 1, R13350 += 1, R88 += 1 };
  s2 -> s1 [0, 69] { R13394 += 1, R13350 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R13394 += 1, R13350 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R13394 += 1, R13350 += 1, R87 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R13394 += 1, R13350 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R13394 += 1, R13350 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R13394 += 1, R13350 += 1, R87 += 1, R88 += 1 };
  s2 -> s1 [71, 74] { R13394 += 1, R13350 += 1, R88 += 1 };
  s2 -> s2 [71, 65535] { R13394 += 1, R13350 += 1, R87 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R13394 += 1, R13350 += 1, R88 += 1 };
  s2 -> s1 [76, 65535] { R13394 += 1, R13350 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R13394 += 1, R13350 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R13394 += 1, R13350 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R13394 += 1, R13349 += 1, R13350 += 1 };
  s3 -> s4 [70, 70] { R13394 += 1, R13350 += 1, R87 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R13394 += 1, R13350 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R13394 += 1, R13350 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R13394 += 1, R13350 += 1, R87 += 1, R88 += 1 };
  s3 -> s1 [71, 74] { R13394 += 1, R13350 += 1, R88 += 1 };
  s3 -> s2 [71, 65535] { R13394 += 1, R13350 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R13394 += 1, R13350 += 1, R88 += 1 };
  s3 -> s1 [76, 65535] { R13394 += 1, R13350 += 1, R88 += 1 };
  s4 -> s6 [0, 74] { R13394 += 1, R13350 += 1, R88 += 1 };
  s4 -> s4 [0, 65535] { R13394 += 1, R13350 += 1, R87 += 1, R88 += 1 };
  s4 -> s10 [75, 75] { R13394 += 1, R13350 += 1, R88 += 1 };
  s4 -> s6 [76, 65535] { R13394 += 1, R13350 += 1, R88 += 1 };
  s6 -> s6 [0, 74] { R13394 += 1, R13350 += 1, R88 += 1 };
  s6 -> s10 [75, 75] { R13394 += 1, R13350 += 1, R88 += 1 };
  s6 -> s6 [76, 65535] { R13394 += 1, R13350 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R13394 += 1, R13350 += 1, R88 += 1 };
  s8 -> s8 [0, 65535] { R13394 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R13394 += 1, R13350 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R13394 += 1, R13350 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R13394 += 1, R13350 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s12 [0, 65535] { R13394 += 1 };
  s10 -> s10 [0, 65535] { R13394 += 1, R13350 += 1, R88 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R13394 += 1 };
  s12 -> s12 [0, 65535] { R13394 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R13396 += 1, R13352 += 1, R91 += 1, R92 += 1 };
  s0 -> s2 [0, 65535] { R13396 += 1, R13351 += 1, R13352 += 1 };
  s0 -> s0 [0, 65535] { R13395 += 1, R13396 += 1 };
  s0 -> s3 [70, 70] { R13396 += 1, R13352 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R13396 += 1, R13352 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R13396 += 1, R13352 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R13396 += 1, R13352 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 65535] { R13396 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R13396 += 1, R13352 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R13396 += 1, R13352 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R13396 += 1, R13352 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R13396 += 1, R13352 += 1, R91 += 1, R92 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R13396 += 1, R13351 += 1, R13352 += 1 };
  s2 -> s3 [70, 70] { R13396 += 1, R13352 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R13396 += 1, R13352 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R13396 += 1, R13352 += 1, R91 += 1, R92 += 1 };
  s3 -> s3 [0, 65535] { R13396 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R13396 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R13396 += 1, R13352 += 1, R91 += 1, R92 += 1 };
  s5 -> s5 [0, 65535] { R13396 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R13398 += 1, R13354 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s2 [0, 69] { R13398 += 1, R13354 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s3 [0, 65535] { R13398 += 1, R13353 += 1, R13354 += 1 };
  s0 -> s0 [0, 65535] { R13397 += 1, R13398 += 1 };
  s0 -> s4 [70, 70] { R13398 += 1, R13354 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s5 [70, 70] { R13398 += 1, R13354 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s6 [70, 70] { R13398 += 1, R13354 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s7 [70, 70] { R13398 += 1, R13354 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s1 [71, 65535] { R13398 += 1, R13354 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s2 [71, 65535] { R13398 += 1, R13354 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s1 [0, 69] { R13398 += 1, R13354 += 1, R10159 += 1, R10160 += 1 };
  s1 -> s2 [0, 69] { R13398 += 1, R13354 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s4 [70, 70] { R13398 += 1, R13354 += 1, R10159 += 1, R10160 += 1 };
  s1 -> s5 [70, 70] { R13398 += 1, R13354 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s6 [70, 70] { R13398 += 1, R13354 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s7 [70, 70] { R13398 += 1, R13354 += 1, R10159 += 1, R10160 += 1 };
  s1 -> s1 [71, 65535] { R13398 += 1, R13354 += 1, R10159 += 1, R10160 += 1 };
  s1 -> s2 [71, 65535] { R13398 += 1, R13354 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s11 [0, 69] { R13398 += 1, R13354 += 1 };
  s2 -> s2 [0, 69] { R13398 += 1, R13354 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s5 [70, 70] { R13398 += 1, R13354 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s8 [70, 70] { R13398 += 1, R13354 += 1 };
  s2 -> s6 [70, 70] { R13398 += 1, R13354 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s12 [70, 70] { R13398 += 1, R13354 += 1 };
  s2 -> s11 [71, 65535] { R13398 += 1, R13354 += 1 };
  s2 -> s2 [71, 65535] { R13398 += 1, R13354 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s1 [0, 69] { R13398 += 1, R13354 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s2 [0, 69] { R13398 += 1, R13354 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s3 [0, 65535] { R13398 += 1, R13353 += 1, R13354 += 1 };
  s3 -> s4 [70, 70] { R13398 += 1, R13354 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s5 [70, 70] { R13398 += 1, R13354 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s6 [70, 70] { R13398 += 1, R13354 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s7 [70, 70] { R13398 += 1, R13354 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s1 [71, 65535] { R13398 += 1, R13354 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s2 [71, 65535] { R13398 += 1, R13354 += 1, R10160 += 1, R10161 += 1 };
  s4 -> s4 [0, 65535] { R13398 += 1, R13354 += 1, R10159 += 1, R10160 += 1 };
  s4 -> s6 [0, 65535] { R13398 += 1, R13354 += 1, R10160 += 1, R10161 += 1 };
  s6 -> s8 [0, 65535] { R13398 += 1, R13354 += 1 };
  s6 -> s6 [0, 65535] { R13398 += 1, R13354 += 1, R10160 += 1, R10161 += 1 };
  s8 -> s8 [0, 65535] { R13398 += 1, R13354 += 1 };
  s8 -> s9 [0, 65535] { R13398 += 1 };
  s8 -> s10 [0, 65535];
  s9 -> s9 [0, 65535] { R13398 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  s11 -> s11 [0, 69] { R13398 += 1, R13354 += 1 };
  s11 -> s11 [0, 65535] { R13398 += 1 };
  s11 -> s10 [0, 65535];
  s11 -> s8 [70, 70] { R13398 += 1, R13354 += 1 };
  s11 -> s12 [70, 70] { R13398 += 1, R13354 += 1 };
  s11 -> s11 [71, 65535] { R13398 += 1, R13354 += 1 };
  s12 -> s12 [0, 65535] { R13398 += 1 };
  s12 -> s10 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R13400 += 1, R13356 += 1, R12955 += 1, R12956 += 1 };
  s0 -> s2 [0, 69] { R13400 += 1, R13356 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s0 -> s0 [0, 65535] { R13399 += 1, R13400 += 1 };
  s0 -> s3 [0, 65535] { R13400 += 1, R13355 += 1, R13356 += 1 };
  s0 -> s4 [70, 70] { R13400 += 1, R13356 += 1, R12955 += 1, R12956 += 1 };
  s0 -> s5 [70, 70] { R13400 += 1, R13356 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s0 -> s6 [70, 70] { R13400 += 1, R13356 += 1, R12955 += 1, R12956 += 1 };
  s0 -> s7 [70, 70] { R13400 += 1, R13356 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s0 -> s1 [71, 65535] { R13400 += 1, R13356 += 1, R12955 += 1, R12956 += 1 };
  s0 -> s2 [71, 65535] { R13400 += 1, R13356 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s1 -> s1 [0, 69] { R13400 += 1, R13356 += 1, R12955 += 1, R12956 += 1 };
  s1 -> s2 [0, 69] { R13400 += 1, R13356 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s1 -> s4 [70, 70] { R13400 += 1, R13356 += 1, R12955 += 1, R12956 += 1 };
  s1 -> s5 [70, 70] { R13400 += 1, R13356 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s1 -> s6 [70, 70] { R13400 += 1, R13356 += 1, R12955 += 1, R12956 += 1 };
  s1 -> s7 [70, 70] { R13400 += 1, R13356 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s1 -> s1 [71, 65535] { R13400 += 1, R13356 += 1, R12955 += 1, R12956 += 1 };
  s1 -> s2 [71, 65535] { R13400 += 1, R13356 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s2 -> s2 [0, 69] { R13400 += 1, R13356 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s2 -> s2 [0, 65535] { R13400 += 1 };
  s2 -> s9 [0, 65535];
  s2 -> s5 [70, 70] { R13400 += 1, R13356 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s2 -> s7 [70, 70] { R13400 += 1, R13356 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s2 -> s2 [71, 65535] { R13400 += 1, R13356 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s3 -> s1 [0, 69] { R13400 += 1, R13356 += 1, R12955 += 1, R12956 += 1 };
  s3 -> s2 [0, 69] { R13400 += 1, R13356 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s3 -> s3 [0, 65535] { R13400 += 1, R13355 += 1, R13356 += 1 };
  s3 -> s4 [70, 70] { R13400 += 1, R13356 += 1, R12955 += 1, R12956 += 1 };
  s3 -> s5 [70, 70] { R13400 += 1, R13356 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s3 -> s6 [70, 70] { R13400 += 1, R13356 += 1, R12955 += 1, R12956 += 1 };
  s3 -> s7 [70, 70] { R13400 += 1, R13356 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s3 -> s1 [71, 65535] { R13400 += 1, R13356 += 1, R12955 += 1, R12956 += 1 };
  s3 -> s2 [71, 65535] { R13400 += 1, R13356 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s5 -> s9 [0, 65535];
  s5 -> s5 [0, 65535] { R13400 += 1 };
  s6 -> s6 [0, 65535] { R13400 += 1, R13356 += 1, R12955 += 1, R12956 += 1 };
  s6 -> s7 [0, 65535] { R13400 += 1, R13356 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s7 -> s8 [0, 65535] { R13400 += 1 };
  s7 -> s9 [0, 65535];
  s7 -> s7 [0, 65535] { R13400 += 1, R13356 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s8 -> s8 [0, 65535] { R13400 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  accepting s8, s5, s2, s9, s7;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R13402 += 1, R13358 += 1, R13294 += 1, R13296 += 1, R13297 += 1 };
  s0 -> s2 [0, 69] { R13402 += 1, R13358 += 1, R13294 += 1, R13295 += 1, R13296 += 1 };
  s0 -> s3 [0, 69] { R13402 += 1, R13358 += 1, R13293 += 1, R13294 += 1 };
  s0 -> s4 [0, 65535] { R13402 += 1, R13357 += 1, R13358 += 1 };
  s0 -> s0 [0, 65535] { R13401 += 1, R13402 += 1 };
  s0 -> s5 [70, 70] { R13402 += 1, R13358 += 1, R13293 += 1, R13294 += 1 };
  s0 -> s6 [70, 70] { R13402 += 1, R13358 += 1, R13294 += 1, R13296 += 1, R13297 += 1 };
  s0 -> s7 [70, 70] { R13402 += 1, R13358 += 1, R13294 += 1, R13295 += 1, R13296 += 1 };
  s0 -> s8 [70, 70] { R13402 += 1, R13358 += 1, R13293 += 1, R13294 += 1 };
  s0 -> s9 [70, 70] { R13402 += 1, R13358 += 1, R13294 += 1, R13295 += 1, R13296 += 1 };
  s0 -> s10 [70, 70] { R13402 += 1, R13358 += 1, R13294 += 1, R13296 += 1, R13297 += 1 };
  s0 -> s1 [71, 65535] { R13402 += 1, R13358 += 1, R13294 += 1, R13296 += 1, R13297 += 1 };
  s0 -> s2 [71, 65535] { R13402 += 1, R13358 += 1, R13294 += 1, R13295 += 1, R13296 += 1 };
  s0 -> s3 [71, 65535] { R13402 += 1, R13358 += 1, R13293 += 1, R13294 += 1 };
  s1 -> s1 [0, 69] { R13402 += 1, R13358 += 1, R13294 += 1, R13296 += 1, R13297 += 1 };
  s1 -> s1 [0, 65535] { R13402 += 1 };
  s1 -> s12 [0, 65535];
  s1 -> s6 [70, 70] { R13402 += 1, R13358 += 1, R13294 += 1, R13296 += 1, R13297 += 1 };
  s1 -> s10 [70, 70] { R13402 += 1, R13358 += 1, R13294 += 1, R13296 += 1, R13297 += 1 };
  s1 -> s1 [71, 65535] { R13402 += 1, R13358 += 1, R13294 += 1, R13296 += 1, R13297 += 1 };
  s2 -> s1 [0, 69] { R13402 += 1, R13358 += 1, R13294 += 1, R13296 += 1, R13297 += 1 };
  s2 -> s2 [0, 69] { R13402 += 1, R13358 += 1, R13294 += 1, R13295 += 1, R13296 += 1 };
  s2 -> s6 [70, 70] { R13402 += 1, R13358 += 1, R13294 += 1, R13296 += 1, R13297 += 1 };
  s2 -> s7 [70, 70] { R13402 += 1, R13358 += 1, R13294 += 1, R13295 += 1, R13296 += 1 };
  s2 -> s9 [70, 70] { R13402 += 1, R13358 += 1, R13294 += 1, R13295 += 1, R13296 += 1 };
  s2 -> s10 [70, 70] { R13402 += 1, R13358 += 1, R13294 += 1, R13296 += 1, R13297 += 1 };
  s2 -> s1 [71, 65535] { R13402 += 1, R13358 += 1, R13294 += 1, R13296 += 1, R13297 += 1 };
  s2 -> s2 [71, 65535] { R13402 += 1, R13358 += 1, R13294 += 1, R13295 += 1, R13296 += 1 };
  s3 -> s1 [0, 69] { R13402 += 1, R13358 += 1, R13294 += 1, R13296 += 1, R13297 += 1 };
  s3 -> s2 [0, 69] { R13402 += 1, R13358 += 1, R13294 += 1, R13295 += 1, R13296 += 1 };
  s3 -> s3 [0, 69] { R13402 += 1, R13358 += 1, R13293 += 1, R13294 += 1 };
  s3 -> s5 [70, 70] { R13402 += 1, R13358 += 1, R13293 += 1, R13294 += 1 };
  s3 -> s6 [70, 70] { R13402 += 1, R13358 += 1, R13294 += 1, R13296 += 1, R13297 += 1 };
  s3 -> s7 [70, 70] { R13402 += 1, R13358 += 1, R13294 += 1, R13295 += 1, R13296 += 1 };
  s3 -> s8 [70, 70] { R13402 += 1, R13358 += 1, R13293 += 1, R13294 += 1 };
  s3 -> s9 [70, 70] { R13402 += 1, R13358 += 1, R13294 += 1, R13295 += 1, R13296 += 1 };
  s3 -> s10 [70, 70] { R13402 += 1, R13358 += 1, R13294 += 1, R13296 += 1, R13297 += 1 };
  s3 -> s1 [71, 65535] { R13402 += 1, R13358 += 1, R13294 += 1, R13296 += 1, R13297 += 1 };
  s3 -> s2 [71, 65535] { R13402 += 1, R13358 += 1, R13294 += 1, R13295 += 1, R13296 += 1 };
  s3 -> s3 [71, 65535] { R13402 += 1, R13358 += 1, R13293 += 1, R13294 += 1 };
  s4 -> s1 [0, 69] { R13402 += 1, R13358 += 1, R13294 += 1, R13296 += 1, R13297 += 1 };
  s4 -> s2 [0, 69] { R13402 += 1, R13358 += 1, R13294 += 1, R13295 += 1, R13296 += 1 };
  s4 -> s3 [0, 69] { R13402 += 1, R13358 += 1, R13293 += 1, R13294 += 1 };
  s4 -> s4 [0, 65535] { R13402 += 1, R13357 += 1, R13358 += 1 };
  s4 -> s5 [70, 70] { R13402 += 1, R13358 += 1, R13293 += 1, R13294 += 1 };
  s4 -> s6 [70, 70] { R13402 += 1, R13358 += 1, R13294 += 1, R13296 += 1, R13297 += 1 };
  s4 -> s7 [70, 70] { R13402 += 1, R13358 += 1, R13294 += 1, R13295 += 1, R13296 += 1 };
  s4 -> s8 [70, 70] { R13402 += 1, R13358 += 1, R13293 += 1, R13294 += 1 };
  s4 -> s9 [70, 70] { R13402 += 1, R13358 += 1, R13294 += 1, R13295 += 1, R13296 += 1 };
  s4 -> s10 [70, 70] { R13402 += 1, R13358 += 1, R13294 += 1, R13296 += 1, R13297 += 1 };
  s4 -> s1 [71, 65535] { R13402 += 1, R13358 += 1, R13294 += 1, R13296 += 1, R13297 += 1 };
  s4 -> s2 [71, 65535] { R13402 += 1, R13358 += 1, R13294 += 1, R13295 += 1, R13296 += 1 };
  s4 -> s3 [71, 65535] { R13402 += 1, R13358 += 1, R13293 += 1, R13294 += 1 };
  s5 -> s5 [0, 65535] { R13402 += 1, R13358 += 1, R13293 += 1, R13294 += 1 };
  s5 -> s9 [0, 65535] { R13402 += 1, R13358 += 1, R13294 += 1, R13295 += 1, R13296 += 1 };
  s5 -> s10 [0, 65535] { R13402 += 1, R13358 += 1, R13294 += 1, R13296 += 1, R13297 += 1 };
  s6 -> s6 [0, 65535] { R13402 += 1 };
  s6 -> s12 [0, 65535];
  s9 -> s9 [0, 65535] { R13402 += 1, R13358 += 1, R13294 += 1, R13295 += 1, R13296 += 1 };
  s9 -> s10 [0, 65535] { R13402 += 1, R13358 += 1, R13294 += 1, R13296 += 1, R13297 += 1 };
  s10 -> s11 [0, 65535] { R13402 += 1 };
  s10 -> s12 [0, 65535];
  s10 -> s10 [0, 65535] { R13402 += 1, R13358 += 1, R13294 += 1, R13296 += 1, R13297 += 1 };
  s11 -> s11 [0, 65535] { R13402 += 1 };
  s11 -> s12 [0, 65535];
  s12 -> s12 [0, 65535];
  accepting s12, s6, s1, s10, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R13320 && R3 = R13402 && R23 - R13402 = -1 && R24 = R13402 && R25 - R13402 = -1 && R26 = R13402 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R12960 + -1*R12956 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R12960 + -1*R12956 - R66 = 0 && R55 + R96 + R93 + -1*R12962 + -1*R12958 - R68 = 0 && R65 + R12959 + R12955 = 0 && R67 + R12961 + R12957 = 0 && R13319 = 0 && R13343 = 0 && R13344 = 0 && R13349 = 0 && R13350 = 0 && R13353 = 0 && R13354 = 0 && R13355 = 0 && R13356 = 0 && R13357 = 0 && R13358 = 0 && R13359 = 0 && R13360 = R13402 && R13361 = 0 && R13362 = R13402 && R13363 = 0 && R13364 = R13402 && R13365 = 0 && R13366 = R13402 && R13367 = 0 && R13368 = R13402 && R13369 = 0 && R13370 = R13402 && R13371 = 0 && R13372 = R13402 && R13373 = 0 && R13374 = R13402 && R13375 = 0 && R13376 = R13402 && R13377 = 0 && R13378 = R13402 && R13379 = 0 && R13380 = R13402 && R13381 = 0 && R13382 = R13402 && R13383 = 0 && R13384 = R13402 && R13385 = 0 && R13386 = R13402 && R13387 = 0 && R13388 = R13402 && R13389 = 0 && R13390 = R13402 && R13391 = 0 && R13392 = R13402 && R13393 = 0 && R13394 = R13402 && R13395 = 0 && R13396 = R13402 && R13397 = 0 && R13398 = R13402 && R13399 = 0 && R13400 = R13402 && R13401 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R10164 + R10161 < 1 && -1*R12960 + -1*R12956 - R66 < 1 && -1*R12962 + -1*R12958 - R68 < 1 && -1 < R13320 && 0 < R13402 && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R12960 + -1*R12956 - R66 = 0 || R66 + R12960 + R12956 < 1) && (R59 + R10162 + R10159 != 0 || R60 + R10163 + R10160 + -1*R12960 + -1*R12956 - R66 = 0 || R66 + R12960 + R12956 < 1) && (R66 + R12960 + R12956 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R12962 + R12958 < 1) && (R53 + R94 + R91 = 0 || R68 + R12962 + R12958 < 1))) && (R66 + R12960 + R12956 != 0 || ((R59 + R10162 + R10159 != 0 || R60 + R10163 + R10160 = 0 || R68 + R12962 + R12958 < 1) && (R59 + R10162 + R10159 = 0 || R68 + R12962 + R12958 < 1))) && (R66 + R12960 + R12956 != 0 || ((R73 + R13298 + R13293 != 0 || R74 + R13299 + R13294 = 0 || R68 + R12962 + R12958 < 1) && (R73 + R13298 + R13293 = 0 || R68 + R12962 + R12958 < 1))) && (R68 + R12962 + R12958 != 0 || R77 + R13302 + R13297 = 0 || (R75 + R13300 + R13295 = 0 && R76 + R13301 + R13296 = 0)) && (R73 + R13298 + R13293 != 0 || R66 + R12960 + R12956 + -1*R13299 + -1*R13294 - R74 = 0 || R66 + R12960 + R12956 < 1) && (R75 + R13300 + R13295 != 0 || R68 + R12962 + R12958 + -1*R13301 + -1*R13296 - R76 = 0 || R68 + R12962 + R12958 < 1) && (R13303 != 0 || R13304 = R13320 || (R20 = 0 && R13320 = 0)) && (R13305 != 0 || R13306 = R13320 || (R20 = 0 && R13320 = 0)) && (R13307 != 0 || R13308 = R13320 || (R20 = 0 && R13320 = 0)) && (R13309 != 0 || R13310 = R13320 || (R20 = 0 && R13320 = 0)) && (R13311 != 0 || R13312 = R13320 || (R20 = 0 && R13320 = 0)) && (R13313 != 0 || R13314 = R13320 || (R20 = 0 && R13320 = 0)) && (R13315 != 0 || R13316 = R13320 || (R20 = 0 && R13320 = 0)) && (R13317 != 0 || R13318 = R13320 || (R20 = 0 && R13320 = 0)) && (R13321 != 0 || R13320 = R13322 || (R20 = 0 && R13320 = 0)) && (R21 = 0 || (R13341 = 0 && R13342 = 0)) && (R21 = 0 || (R13345 = 0 && R13346 = 0)) && (R21 = 0 || (R13347 = 0 && R13348 = 0)) && (R21 = 0 || (R13351 = 0 && R13352 = 0)) && (R22 = 0 || (R13323 = 0 && R13324 = 0)) && (R22 = 0 || (R13325 = 0 && R13326 = 0)) && (R22 = 0 || (R13327 = 0 && R13328 = 0)) && (R22 = 0 || (R13329 = 0 && R13330 = 0)) && (R22 = 0 || (R13331 = 0 && R13332 = 0)) && (R22 = 0 || (R13333 = 0 && R13334 = 0)) && (R22 = 0 || (R13335 = 0 && R13336 = 0)) && (R22 = 0 || (R13337 = 0 && R13338 = 0)) && (R22 = 0 || (R13339 = 0 && R13340 = 0)) && (R53 + R94 + R91 = 0 || R66 + R12960 + R12956 < 1) && (R59 + R10162 + R10159 = 0 || R66 + R12960 + R12956 < 1) && (R73 + R13298 + R13293 = 0 || R66 + R12960 + R12956 < 1) && (R75 + R13300 + R13295 = 0 || R68 + R12962 + R12958 < 1) && (R13303 = 0 || (R20 = 0 && R13320 = 0)) && (R13305 = 0 || (R20 = 0 && R13320 = 0)) && (R13307 = 0 || (R20 = 0 && R13320 = 0)) && (R13309 = 0 || (R20 = 0 && R13320 = 0)) && (R13311 = 0 || (R20 = 0 && R13320 = 0)) && (R13313 = 0 || (R20 = 0 && R13320 = 0)) && (R13315 = 0 || (R20 = 0 && R13320 = 0)) && (R13317 = 0 || (R20 = 0 && R13320 = 0)) && (R13321 = 0 || (R20 = 0 && R13320 = 0));
// End of Parikh automata intersection problem
