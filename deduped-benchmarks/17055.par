// Parikh automata intersection problem, generated by OSTRICH+
counter int
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R14003 += 1, R14004 += 1 };
  s0 -> s1 [0, 65535] { R14004 += 1, R22 += 1 };
  s1 -> s1 [0, 65535] { R14004 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R14006 += 1 };
  s0 -> s0 [0, 65535] { R14005 += 1, R14006 += 1 };
  s0 -> s2 [70, 70] { R14006 += 1 };
  s0 -> s3 [70, 70] { R14006 += 1 };
  s0 -> s1 [76, 65535] { R14006 += 1 };
  s1 -> s1 [0, 69] { R14006 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14006 += 1 };
  s1 -> s3 [70, 70] { R14006 += 1 };
  s1 -> s1 [76, 65535] { R14006 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R14006 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R14006 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R14008 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R14007 += 1, R14008 += 1 };
  s0 -> s2 [70, 70] { R14008 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R14008 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R14008 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R14008 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14008 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R14008 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R14008 += 1, R45 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R14008 += 1, R45 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R14010 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R14009 += 1, R14010 += 1 };
  s0 -> s2 [70, 70] { R14010 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R14010 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R14010 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R14010 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14010 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R14010 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R14010 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R14010 += 1, R47 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R14012 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R14011 += 1, R14012 += 1 };
  s0 -> s2 [70, 70] { R14012 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R14012 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R14012 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R14012 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14012 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R14012 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R14012 += 1, R49 += 1, R50 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R14012 += 1, R49 += 1, R50 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R14014 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R14013 += 1, R14014 += 1 };
  s0 -> s2 [70, 70] { R14014 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R14014 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R14014 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R14014 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14014 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R14014 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R14014 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R14014 += 1, R53 += 1, R54 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R14016 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R14015 += 1, R14016 += 1 };
  s0 -> s2 [70, 70] { R14016 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R14016 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R14016 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R14016 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14016 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R14016 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R14016 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R14016 += 1, R59 += 1, R60 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R14018 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R14017 += 1, R14018 += 1 };
  s0 -> s2 [70, 70] { R14018 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R14018 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R14018 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R14018 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14018 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R14018 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R14018 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R14018 += 1, R65 += 1, R66 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R14020 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R14019 += 1, R14020 += 1 };
  s0 -> s2 [70, 70] { R14020 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R14020 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R14020 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R14020 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14020 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R14020 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R14020 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R14020 += 1, R73 += 1, R74 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R14040 += 1 };
  s0 -> s0 [0, 65535] { R14039 += 1, R14040 += 1 };
  s0 -> s2 [70, 70] { R14040 += 1 };
  s0 -> s1 [71, 65535] { R14040 += 1 };
  s1 -> s1 [0, 69] { R14040 += 1 };
  s1 -> s2 [70, 70] { R14040 += 1 };
  s1 -> s1 [71, 65535] { R14040 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R14040 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R14042 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R14041 += 1, R14042 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R14042 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R14044 += 1 };
  s0 -> s2 [0, 65535] { R14044 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R14043 += 1, R14044 += 1 };
  s0 -> s3 [70, 70] { R14044 += 1 };
  s0 -> s1 [71, 65535] { R14044 += 1 };
  s1 -> s1 [0, 69] { R14044 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R14044 += 1 };
  s1 -> s1 [71, 65535] { R14044 += 1 };
  s2 -> s1 [0, 69] { R14044 += 1 };
  s2 -> s2 [0, 65535] { R14044 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R14044 += 1 };
  s2 -> s1 [71, 65535] { R14044 += 1 };
  s3 -> s3 [0, 65535] { R14044 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R14046 += 1, R13984 += 1 };
  s0 -> s2 [0, 65535] { R14046 += 1, R13983 += 1, R13984 += 1 };
  s0 -> s0 [0, 65535] { R14045 += 1, R14046 += 1 };
  s0 -> s1 [71, 65535] { R14046 += 1, R13984 += 1 };
  s1 -> s1 [0, 69] { R14046 += 1, R13984 += 1 };
  s1 -> s1 [0, 65535] { R14046 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R14046 += 1, R13984 += 1 };
  s2 -> s1 [0, 69] { R14046 += 1, R13984 += 1 };
  s2 -> s2 [0, 65535] { R14046 += 1, R13983 += 1, R13984 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R14046 += 1, R13984 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s0 [0, 65535] { R14047 += 1, R14048 += 1 };
  s0 -> s1 [0, 65535] { R14048 += 1, R13985 += 1, R13986 += 1 };
  s0 -> s2 [0, 65535] { R14048 += 1, R13986 += 1, R20 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R14048 += 1, R13985 += 1, R13986 += 1 };
  s1 -> s2 [0, 65535] { R14048 += 1, R13986 += 1, R20 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R14048 += 1 };
  s2 -> s2 [0, 65535] { R14048 += 1, R13986 += 1, R20 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R14048 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R14050 += 1, R13988 += 1 };
  s0 -> s0 [0, 65535] { R14049 += 1, R14050 += 1 };
  s0 -> s2 [0, 65535] { R14050 += 1, R13987 += 1, R13988 += 1 };
  s0 -> s1 [75, 65535] { R14050 += 1, R13988 += 1 };
  s1 -> s1 [0, 70] { R14050 += 1, R13988 += 1 };
  s1 -> s1 [0, 65535] { R14050 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R14050 += 1, R13988 += 1 };
  s2 -> s1 [0, 70] { R14050 += 1, R13988 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R14050 += 1, R13987 += 1, R13988 += 1 };
  s2 -> s1 [75, 65535] { R14050 += 1, R13988 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R14052 += 1, R13989 += 1, R13990 += 1 };
  s0 -> s0 [0, 65535] { R14051 += 1, R14052 += 1 };
  s0 -> s2 [0, 65535] { R14052 += 1, R13990 += 1, R84 += 1 };
  s1 -> s1 [0, 65535] { R14052 += 1, R13989 += 1, R13990 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R14052 += 1, R13990 += 1, R84 += 1 };
  s2 -> s3 [0, 65535] { R14052 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R14052 += 1, R13990 += 1, R84 += 1 };
  s3 -> s3 [0, 65535] { R14052 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R14054 += 1, R13992 += 1 };
  s0 -> s2 [0, 65535] { R14054 += 1, R13991 += 1, R13992 += 1 };
  s0 -> s0 [0, 65535] { R14053 += 1, R14054 += 1 };
  s0 -> s3 [0, 65535] { R14054 += 1, R13992 += 1, R86 += 1 };
  s0 -> s1 [76, 65535] { R14054 += 1, R13992 += 1 };
  s1 -> s1 [0, 74] { R14054 += 1, R13992 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R14054 += 1 };
  s1 -> s1 [76, 65535] { R14054 += 1, R13992 += 1 };
  s2 -> s1 [0, 74] { R14054 += 1, R13992 += 1 };
  s2 -> s2 [0, 65535] { R14054 += 1, R13991 += 1, R13992 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R14054 += 1, R13992 += 1, R86 += 1 };
  s2 -> s1 [76, 65535] { R14054 += 1, R13992 += 1 };
  s3 -> s1 [0, 74] { R14054 += 1, R13992 += 1 };
  s3 -> s4 [0, 65535] { R14054 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R14054 += 1, R13992 += 1, R86 += 1 };
  s3 -> s1 [76, 65535] { R14054 += 1, R13992 += 1 };
  s4 -> s4 [0, 65535] { R14054 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s0 [0, 65535] { R14055 += 1, R14056 += 1 };
  s0 -> s1 [0, 65535] { R14056 += 1, R13994 += 1 };
  s0 -> s2 [0, 65535] { R14056 += 1, R13993 += 1, R13994 += 1 };
  s0 -> s3 [0, 65535] { R14056 += 1, R13994 += 1, R90 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R14056 += 1, R13994 += 1 };
  s1 -> s5 [0, 65535] { R14056 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R14056 += 1, R13994 += 1 };
  s2 -> s2 [0, 65535] { R14056 += 1, R13993 += 1, R13994 += 1 };
  s2 -> s3 [0, 65535] { R14056 += 1, R13994 += 1, R90 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R14056 += 1, R13994 += 1 };
  s3 -> s3 [0, 65535] { R14056 += 1, R13994 += 1, R90 += 1 };
  s3 -> s5 [0, 65535] { R14056 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R14056 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R14058 += 1, R13996 += 1 };
  s0 -> s2 [0, 65535] { R14058 += 1, R13996 += 1, R13517 += 1, R13518 += 1 };
  s0 -> s3 [0, 65535] { R14058 += 1, R13995 += 1, R13996 += 1 };
  s0 -> s0 [0, 65535] { R14057 += 1, R14058 += 1 };
  s1 -> s1 [0, 65535] { R14058 += 1, R13996 += 1 };
  s1 -> s5 [0, 65535] { R14058 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R14058 += 1, R13996 += 1 };
  s2 -> s2 [0, 65535] { R14058 += 1, R13996 += 1, R13517 += 1, R13518 += 1 };
  s2 -> s5 [0, 65535] { R14058 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R14058 += 1, R13996 += 1 };
  s3 -> s2 [0, 65535] { R14058 += 1, R13996 += 1, R13517 += 1, R13518 += 1 };
  s3 -> s3 [0, 65535] { R14058 += 1, R13995 += 1, R13996 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R14058 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R14060 += 1, R13998 += 1, R13523 += 1 };
  s0 -> s0 [0, 65535] { R14059 += 1, R14060 += 1 };
  s0 -> s2 [0, 65535] { R14060 += 1, R13998 += 1, R13522 += 1, R13523 += 1 };
  s0 -> s3 [0, 65535] { R14060 += 1, R13998 += 1, R13523 += 1, R13524 += 1 };
  s0 -> s4 [0, 65535] { R14060 += 1, R13997 += 1, R13998 += 1 };
  s0 -> s1 [76, 65535] { R14060 += 1, R13998 += 1, R13523 += 1 };
  s1 -> s1 [0, 74] { R14060 += 1, R13998 += 1, R13523 += 1 };
  s1 -> s1 [0, 65535] { R14060 += 1, R13998 += 1 };
  s1 -> s6 [0, 65535] { R14060 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R14060 += 1, R13998 += 1, R13523 += 1 };
  s2 -> s1 [0, 74] { R14060 += 1, R13998 += 1, R13523 += 1 };
  s2 -> s6 [0, 65535] { R14060 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R14060 += 1, R13998 += 1, R13522 += 1, R13523 += 1 };
  s2 -> s3 [0, 65535] { R14060 += 1, R13998 += 1, R13523 += 1, R13524 += 1 };
  s2 -> s1 [76, 65535] { R14060 += 1, R13998 += 1, R13523 += 1 };
  s3 -> s1 [0, 74] { R14060 += 1, R13998 += 1, R13523 += 1 };
  s3 -> s6 [0, 65535] { R14060 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s7 [0, 65535] { R14060 += 1, R13998 += 1 };
  s3 -> s3 [0, 65535] { R14060 += 1, R13998 += 1, R13523 += 1, R13524 += 1 };
  s3 -> s1 [76, 65535] { R14060 += 1, R13998 += 1, R13523 += 1 };
  s4 -> s1 [0, 74] { R14060 += 1, R13998 += 1, R13523 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R14060 += 1, R13998 += 1, R13522 += 1, R13523 += 1 };
  s4 -> s3 [0, 65535] { R14060 += 1, R13998 += 1, R13523 += 1, R13524 += 1 };
  s4 -> s4 [0, 65535] { R14060 += 1, R13997 += 1, R13998 += 1 };
  s4 -> s1 [76, 65535] { R14060 += 1, R13998 += 1, R13523 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R14060 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R14060 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R14060 += 1, R13998 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R14062 += 1, R14000 += 1, R13530 += 1 };
  s0 -> s2 [0, 65535] { R14062 += 1, R14000 += 1, R13530 += 1, R13532 += 1 };
  s0 -> s3 [0, 65535] { R14062 += 1, R14000 += 1 };
  s0 -> s0 [0, 65535] { R14061 += 1, R14062 += 1 };
  s0 -> s4 [0, 65535] { R14062 += 1, R13999 += 1, R14000 += 1 };
  s1 -> s6 [0, 65535] { R14062 += 1 };
  s1 -> s1 [0, 65535] { R14062 += 1, R14000 += 1, R13530 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R14062 += 1, R14000 += 1 };
  s2 -> s6 [0, 65535] { R14062 += 1 };
  s2 -> s1 [0, 65535] { R14062 += 1, R14000 += 1, R13530 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R14062 += 1, R14000 += 1, R13530 += 1, R13532 += 1 };
  s2 -> s3 [0, 65535] { R14062 += 1, R14000 += 1 };
  s3 -> s6 [0, 65535] { R14062 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R14062 += 1, R14000 += 1 };
  s4 -> s1 [0, 65535] { R14062 += 1, R14000 += 1, R13530 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R14062 += 1, R14000 += 1, R13530 += 1, R13532 += 1 };
  s4 -> s3 [0, 65535] { R14062 += 1, R14000 += 1 };
  s4 -> s4 [0, 65535] { R14062 += 1, R13999 += 1, R14000 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R14062 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R14064 += 1, R14002 += 1 };
  s0 -> s2 [0, 65535] { R14064 += 1, R14002 += 1, R13979 += 1, R13980 += 1, R13981 += 1 };
  s0 -> s0 [0, 65535] { R14063 += 1, R14064 += 1 };
  s0 -> s3 [0, 65535] { R14064 += 1, R14002 += 1, R13979 += 1, R13981 += 1, R13982 += 1 };
  s0 -> s4 [0, 65535] { R14064 += 1, R14001 += 1, R14002 += 1 };
  s1 -> s1 [0, 65535] { R14064 += 1, R14002 += 1 };
  s1 -> s6 [0, 65535] { R14064 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R14064 += 1, R14002 += 1 };
  s2 -> s2 [0, 65535] { R14064 += 1, R14002 += 1, R13979 += 1, R13980 += 1, R13981 += 1 };
  s2 -> s6 [0, 65535] { R14064 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R14064 += 1, R14002 += 1, R13979 += 1, R13981 += 1, R13982 += 1 };
  s3 -> s1 [0, 65535] { R14064 += 1, R14002 += 1 };
  s3 -> s6 [0, 65535] { R14064 += 1 };
  s3 -> s7 [0, 65535] { R14064 += 1, R14002 += 1, R13979 += 1 };
  s3 -> s3 [0, 65535] { R14064 += 1, R14002 += 1, R13979 += 1, R13981 += 1, R13982 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R14064 += 1, R14002 += 1 };
  s4 -> s2 [0, 65535] { R14064 += 1, R14002 += 1, R13979 += 1, R13980 += 1, R13981 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R14064 += 1, R14002 += 1, R13979 += 1, R13981 += 1, R13982 += 1 };
  s4 -> s4 [0, 65535] { R14064 += 1, R14001 += 1, R14002 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R14064 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s1 [0, 65535] { R14064 += 1, R14002 += 1 };
  s7 -> s6 [0, 65535] { R14064 += 1 };
  s7 -> s7 [0, 65535] { R14064 += 1, R14002 += 1, R13979 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R14066 += 1, R14022 += 1, R21 += 1 };
  s0 -> s2 [0, 65535] { R14066 += 1, R14021 += 1, R14022 += 1 };
  s0 -> s0 [0, 65535] { R14065 += 1, R14066 += 1 };
  s1 -> s4 [0, 65535] { R14066 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R14066 += 1, R14022 += 1, R21 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R14066 += 1, R14022 += 1, R21 += 1 };
  s2 -> s2 [0, 65535] { R14066 += 1, R14021 += 1, R14022 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R14066 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R14068 += 1, R14024 += 1 };
  s0 -> s2 [0, 65535] { R14068 += 1, R14023 += 1, R14024 += 1 };
  s0 -> s0 [0, 65535] { R14067 += 1, R14068 += 1 };
  s0 -> s3 [70, 70] { R14068 += 1, R14024 += 1 };
  s0 -> s4 [70, 70] { R14068 += 1, R14024 += 1 };
  s0 -> s5 [75, 75] { R14068 += 1, R14024 += 1 };
  s0 -> s1 [76, 65535] { R14068 += 1, R14024 += 1 };
  s1 -> s1 [0, 69] { R14068 += 1, R14024 += 1 };
  s1 -> s3 [70, 70] { R14068 += 1, R14024 += 1 };
  s1 -> s4 [70, 70] { R14068 += 1, R14024 += 1 };
  s1 -> s5 [75, 75] { R14068 += 1, R14024 += 1 };
  s1 -> s1 [76, 65535] { R14068 += 1, R14024 += 1 };
  s2 -> s1 [0, 69] { R14068 += 1, R14024 += 1 };
  s2 -> s2 [0, 65535] { R14068 += 1, R14023 += 1, R14024 += 1 };
  s2 -> s3 [70, 70] { R14068 += 1, R14024 += 1 };
  s2 -> s4 [70, 70] { R14068 += 1, R14024 += 1 };
  s2 -> s5 [75, 75] { R14068 += 1, R14024 += 1 };
  s2 -> s1 [76, 65535] { R14068 += 1, R14024 += 1 };
  s4 -> s4 [0, 70] { R14068 += 1, R14024 += 1 };
  s4 -> s7 [75, 75] { R14068 += 1, R14024 += 1 };
  s4 -> s4 [76, 65535] { R14068 += 1, R14024 += 1 };
  s5 -> s5 [0, 69] { R14068 += 1, R14024 += 1 };
  s5 -> s5 [0, 65535] { R14068 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R14068 += 1, R14024 += 1 };
  s5 -> s8 [70, 70] { R14068 += 1, R14024 += 1 };
  s5 -> s5 [75, 65535] { R14068 += 1, R14024 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R14068 += 1, R14024 += 1 };
  s7 -> s7 [0, 65535] { R14068 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R14068 += 1, R14024 += 1 };
  s8 -> s8 [0, 65535] { R14068 += 1 };
  s8 -> s6 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R14070 += 1, R14026 += 1, R83 += 1 };
  s0 -> s0 [0, 65535] { R14069 += 1, R14070 += 1 };
  s0 -> s2 [0, 65535] { R14070 += 1, R14025 += 1, R14026 += 1 };
  s0 -> s3 [70, 70] { R14070 += 1, R14026 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R14070 += 1, R14026 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R14070 += 1, R14026 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R14070 += 1, R14026 += 1, R83 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R14070 += 1 };
  s1 -> s3 [70, 70] { R14070 += 1, R14026 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R14070 += 1, R14026 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R14070 += 1, R14026 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R14070 += 1, R14026 += 1, R83 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R14070 += 1, R14025 += 1, R14026 += 1 };
  s2 -> s3 [70, 70] { R14070 += 1, R14026 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R14070 += 1, R14026 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R14070 += 1, R14026 += 1, R83 += 1 };
  s3 -> s3 [0, 65535] { R14070 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R14070 += 1, R14026 += 1, R83 += 1 };
  s4 -> s6 [0, 65535] { R14070 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R14070 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R14072 += 1, R14028 += 1, R85 += 1 };
  s0 -> s0 [0, 65535] { R14071 += 1, R14072 += 1 };
  s0 -> s2 [0, 65535] { R14072 += 1, R14027 += 1, R14028 += 1 };
  s0 -> s3 [70, 70] { R14072 += 1, R14028 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R14072 += 1, R14028 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R14072 += 1, R14028 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R14072 += 1, R14028 += 1, R85 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R14072 += 1 };
  s1 -> s3 [70, 70] { R14072 += 1, R14028 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R14072 += 1, R14028 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R14072 += 1, R14028 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R14072 += 1, R14028 += 1, R85 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R14072 += 1, R14027 += 1, R14028 += 1 };
  s2 -> s3 [70, 70] { R14072 += 1, R14028 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R14072 += 1, R14028 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R14072 += 1, R14028 += 1, R85 += 1 };
  s3 -> s3 [0, 65535] { R14072 += 1, R14028 += 1, R85 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R14072 += 1 };
  s4 -> s4 [0, 65535] { R14072 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R14072 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R14074 += 1, R14030 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R14074 += 1, R14030 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [0, 65535] { R14074 += 1, R14029 += 1, R14030 += 1 };
  s0 -> s0 [0, 65535] { R14073 += 1, R14074 += 1 };
  s0 -> s4 [70, 70] { R14074 += 1, R14030 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R14074 += 1, R14030 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R14074 += 1, R14030 += 1, R87 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R14074 += 1, R14030 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 74] { R14074 += 1, R14030 += 1, R88 += 1 };
  s0 -> s2 [71, 65535] { R14074 += 1, R14030 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R14074 += 1, R14030 += 1, R88 += 1 };
  s0 -> s1 [76, 65535] { R14074 += 1, R14030 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R14074 += 1, R14030 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R14074 += 1, R14030 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R14074 += 1, R14030 += 1, R88 += 1 };
  s1 -> s1 [71, 74] { R14074 += 1, R14030 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R14074 += 1, R14030 += 1, R88 += 1 };
  s1 -> s1 [76, 65535] { R14074 += 1, R14030 += 1, R88 += 1 };
  s2 -> s1 [0, 69] { R14074 += 1, R14030 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R14074 += 1, R14030 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R14074 += 1, R14030 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R14074 += 1, R14030 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R14074 += 1, R14030 += 1, R87 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R14074 += 1, R14030 += 1, R87 += 1, R88 += 1 };
  s2 -> s1 [71, 74] { R14074 += 1, R14030 += 1, R88 += 1 };
  s2 -> s2 [71, 65535] { R14074 += 1, R14030 += 1, R87 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R14074 += 1, R14030 += 1, R88 += 1 };
  s2 -> s1 [76, 65535] { R14074 += 1, R14030 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R14074 += 1, R14030 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R14074 += 1, R14030 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R14074 += 1, R14029 += 1, R14030 += 1 };
  s3 -> s4 [70, 70] { R14074 += 1, R14030 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R14074 += 1, R14030 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R14074 += 1, R14030 += 1, R87 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R14074 += 1, R14030 += 1, R87 += 1, R88 += 1 };
  s3 -> s1 [71, 74] { R14074 += 1, R14030 += 1, R88 += 1 };
  s3 -> s2 [71, 65535] { R14074 += 1, R14030 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R14074 += 1, R14030 += 1, R88 += 1 };
  s3 -> s1 [76, 65535] { R14074 += 1, R14030 += 1, R88 += 1 };
  s4 -> s4 [0, 74] { R14074 += 1, R14030 += 1, R88 += 1 };
  s4 -> s10 [75, 75] { R14074 += 1, R14030 += 1, R88 += 1 };
  s4 -> s4 [76, 65535] { R14074 += 1, R14030 += 1, R88 += 1 };
  s6 -> s4 [0, 74] { R14074 += 1, R14030 += 1, R88 += 1 };
  s6 -> s6 [0, 65535] { R14074 += 1, R14030 += 1, R87 += 1, R88 += 1 };
  s6 -> s10 [75, 75] { R14074 += 1, R14030 += 1, R88 += 1 };
  s6 -> s4 [76, 65535] { R14074 += 1, R14030 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R14074 += 1, R14030 += 1, R88 += 1 };
  s8 -> s8 [0, 65535] { R14074 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R14074 += 1, R14030 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R14074 += 1, R14030 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R14074 += 1, R14030 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R14074 += 1, R14030 += 1, R88 += 1 };
  s10 -> s12 [0, 65535] { R14074 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R14074 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R14074 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R14076 += 1, R14032 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s2 [0, 69] { R14076 += 1, R14032 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s3 [0, 65535] { R14076 += 1, R14031 += 1, R14032 += 1 };
  s0 -> s0 [0, 65535] { R14075 += 1, R14076 += 1 };
  s0 -> s4 [70, 70] { R14076 += 1, R14032 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s5 [70, 70] { R14076 += 1, R14032 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s6 [70, 70] { R14076 += 1, R14032 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s7 [70, 70] { R14076 += 1, R14032 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s1 [71, 65535] { R14076 += 1, R14032 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s2 [71, 65535] { R14076 += 1, R14032 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s1 [0, 69] { R14076 += 1, R14032 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s1 [0, 65535] { R14076 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s5 [70, 70] { R14076 += 1, R14032 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s7 [70, 70] { R14076 += 1, R14032 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s1 [71, 65535] { R14076 += 1, R14032 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s1 [0, 69] { R14076 += 1, R14032 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [0, 69] { R14076 += 1, R14032 += 1, R13513 += 1, R13514 += 1 };
  s2 -> s4 [70, 70] { R14076 += 1, R14032 += 1, R13513 += 1, R13514 += 1 };
  s2 -> s5 [70, 70] { R14076 += 1, R14032 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s6 [70, 70] { R14076 += 1, R14032 += 1, R13513 += 1, R13514 += 1 };
  s2 -> s7 [70, 70] { R14076 += 1, R14032 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s1 [71, 65535] { R14076 += 1, R14032 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [71, 65535] { R14076 += 1, R14032 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s1 [0, 69] { R14076 += 1, R14032 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s2 [0, 69] { R14076 += 1, R14032 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s3 [0, 65535] { R14076 += 1, R14031 += 1, R14032 += 1 };
  s3 -> s4 [70, 70] { R14076 += 1, R14032 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s5 [70, 70] { R14076 += 1, R14032 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s6 [70, 70] { R14076 += 1, R14032 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s7 [70, 70] { R14076 += 1, R14032 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s1 [71, 65535] { R14076 += 1, R14032 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s2 [71, 65535] { R14076 += 1, R14032 += 1, R13513 += 1, R13514 += 1 };
  s4 -> s4 [0, 65535] { R14076 += 1, R14032 += 1, R13513 += 1, R13514 += 1 };
  s4 -> s7 [0, 65535] { R14076 += 1, R14032 += 1, R13514 += 1, R13515 += 1 };
  s5 -> s5 [0, 65535] { R14076 += 1 };
  s5 -> s8 [0, 65535];
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R14076 += 1 };
  s7 -> s7 [0, 65535] { R14076 += 1, R14032 += 1, R13514 += 1, R13515 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R14076 += 1 };
  accepting s8, s5, s9, s1, s7;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R14078 += 1, R14034 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s0 [0, 65535] { R14077 += 1, R14078 += 1 };
  s0 -> s2 [0, 65535] { R14078 += 1, R14033 += 1, R14034 += 1 };
  s0 -> s3 [70, 70] { R14078 += 1, R14034 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s4 [70, 70] { R14078 += 1, R14034 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s1 [71, 65535] { R14078 += 1, R14034 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [0, 69] { R14078 += 1, R14034 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [0, 65535] { R14078 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R14078 += 1, R14034 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s4 [70, 70] { R14078 += 1, R14034 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [71, 65535] { R14078 += 1, R14034 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s1 [0, 69] { R14078 += 1, R14034 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s2 [0, 65535] { R14078 += 1, R14033 += 1, R14034 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R14078 += 1, R14034 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s4 [70, 70] { R14078 += 1, R14034 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s1 [71, 65535] { R14078 += 1, R14034 += 1, R13519 += 1, R13520 += 1 };
  s3 -> s3 [0, 65535] { R14078 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R14078 += 1, R14034 += 1, R13519 += 1, R13520 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R14078 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R14078 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s0 -> s2 [0, 69] { R14080 += 1, R14036 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s0 -> s3 [0, 69] { R14080 += 1, R14036 += 1, R13525 += 1, R13526 += 1 };
  s0 -> s4 [0, 65535] { R14080 += 1, R14035 += 1, R14036 += 1 };
  s0 -> s0 [0, 65535] { R14079 += 1, R14080 += 1 };
  s0 -> s5 [70, 70] { R14080 += 1, R14036 += 1, R13525 += 1, R13526 += 1 };
  s0 -> s6 [70, 70] { R14080 += 1, R14036 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s0 -> s7 [70, 70] { R14080 += 1, R14036 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s0 -> s8 [70, 70] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s0 -> s9 [70, 70] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s0 -> s10 [70, 70] { R14080 += 1, R14036 += 1, R13525 += 1, R13526 += 1 };
  s0 -> s1 [71, 74] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s0 -> s2 [71, 65535] { R14080 += 1, R14036 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s0 -> s3 [71, 65535] { R14080 += 1, R14036 += 1, R13525 += 1, R13526 += 1 };
  s0 -> s11 [75, 75] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s0 -> s1 [76, 65535] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s1 -> s1 [0, 69] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s1 -> s8 [70, 70] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s1 -> s9 [70, 70] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s1 -> s1 [71, 74] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s1 -> s11 [75, 75] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s1 -> s1 [76, 65535] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s2 -> s1 [0, 69] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s2 -> s2 [0, 69] { R14080 += 1, R14036 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s2 -> s6 [70, 70] { R14080 += 1, R14036 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s2 -> s7 [70, 70] { R14080 += 1, R14036 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s2 -> s8 [70, 70] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s2 -> s9 [70, 70] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s2 -> s1 [71, 74] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s2 -> s2 [71, 65535] { R14080 += 1, R14036 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s2 -> s11 [75, 75] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s2 -> s1 [76, 65535] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s3 -> s1 [0, 69] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s3 -> s2 [0, 69] { R14080 += 1, R14036 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s3 -> s3 [0, 69] { R14080 += 1, R14036 += 1, R13525 += 1, R13526 += 1 };
  s3 -> s5 [70, 70] { R14080 += 1, R14036 += 1, R13525 += 1, R13526 += 1 };
  s3 -> s6 [70, 70] { R14080 += 1, R14036 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s3 -> s7 [70, 70] { R14080 += 1, R14036 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s3 -> s8 [70, 70] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s3 -> s9 [70, 70] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s3 -> s10 [70, 70] { R14080 += 1, R14036 += 1, R13525 += 1, R13526 += 1 };
  s3 -> s1 [71, 74] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s3 -> s2 [71, 65535] { R14080 += 1, R14036 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s3 -> s3 [71, 65535] { R14080 += 1, R14036 += 1, R13525 += 1, R13526 += 1 };
  s3 -> s11 [75, 75] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s3 -> s1 [76, 65535] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s4 -> s1 [0, 69] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s4 -> s2 [0, 69] { R14080 += 1, R14036 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s4 -> s3 [0, 69] { R14080 += 1, R14036 += 1, R13525 += 1, R13526 += 1 };
  s4 -> s4 [0, 65535] { R14080 += 1, R14035 += 1, R14036 += 1 };
  s4 -> s5 [70, 70] { R14080 += 1, R14036 += 1, R13525 += 1, R13526 += 1 };
  s4 -> s6 [70, 70] { R14080 += 1, R14036 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s4 -> s7 [70, 70] { R14080 += 1, R14036 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s4 -> s8 [70, 70] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s4 -> s9 [70, 70] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s4 -> s10 [70, 70] { R14080 += 1, R14036 += 1, R13525 += 1, R13526 += 1 };
  s4 -> s1 [71, 74] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s4 -> s2 [71, 65535] { R14080 += 1, R14036 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s4 -> s3 [71, 65535] { R14080 += 1, R14036 += 1, R13525 += 1, R13526 += 1 };
  s4 -> s11 [75, 75] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s4 -> s1 [76, 65535] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s7 -> s9 [0, 74] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s7 -> s7 [0, 65535] { R14080 += 1, R14036 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s7 -> s14 [75, 75] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s7 -> s9 [76, 65535] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s9 -> s9 [0, 74] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s9 -> s14 [75, 75] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s9 -> s9 [76, 65535] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s10 -> s9 [0, 74] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s10 -> s7 [0, 65535] { R14080 += 1, R14036 += 1, R13526 += 1, R13527 += 1, R13528 += 1 };
  s10 -> s10 [0, 65535] { R14080 += 1, R14036 += 1, R13525 += 1, R13526 += 1 };
  s10 -> s14 [75, 75] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s10 -> s9 [76, 65535] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s11 -> s11 [0, 69] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s11 -> s11 [0, 65535] { R14080 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [70, 70] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s11 -> s14 [70, 70] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s11 -> s11 [71, 65535] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R14080 += 1 };
  s13 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R14080 += 1, R14036 += 1, R13526 += 1, R13528 += 1 };
  s14 -> s15 [0, 65535] { R14080 += 1 };
  s14 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R14080 += 1 };
  s15 -> s12 [0, 65535];
  accepting s12, s13, s14, s15, s11;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R14082 += 1, R14038 += 1, R13974 += 1, R13975 += 1, R13976 += 1 };
  s0 -> s2 [0, 69] { R14082 += 1, R14038 += 1, R13973 += 1, R13974 += 1 };
  s0 -> s0 [0, 65535] { R14081 += 1, R14082 += 1 };
  s0 -> s3 [0, 65535] { R14082 += 1, R14037 += 1, R14038 += 1 };
  s0 -> s4 [70, 70] { R14082 += 1, R14038 += 1, R13973 += 1, R13974 += 1 };
  s0 -> s5 [70, 70] { R14082 += 1, R14038 += 1, R13973 += 1, R13974 += 1 };
  s0 -> s6 [70, 70] { R14082 += 1, R14038 += 1, R13974 += 1, R13975 += 1, R13976 += 1 };
  s0 -> s7 [70, 70] { R14082 += 1, R14038 += 1, R13974 += 1, R13975 += 1, R13976 += 1 };
  s0 -> s1 [71, 65535] { R14082 += 1, R14038 += 1, R13974 += 1, R13975 += 1, R13976 += 1 };
  s0 -> s2 [71, 65535] { R14082 += 1, R14038 += 1, R13973 += 1, R13974 += 1 };
  s1 -> s1 [0, 69] { R14082 += 1, R14038 += 1, R13974 += 1, R13975 += 1, R13976 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s1 [0, 65535] { R14082 += 1 };
  s1 -> s6 [70, 70] { R14082 += 1, R14038 += 1, R13974 += 1, R13975 += 1, R13976 += 1 };
  s1 -> s7 [70, 70] { R14082 += 1, R14038 += 1, R13974 += 1, R13975 += 1, R13976 += 1 };
  s1 -> s1 [71, 65535] { R14082 += 1, R14038 += 1, R13974 += 1, R13975 += 1, R13976 += 1 };
  s2 -> s1 [0, 69] { R14082 += 1, R14038 += 1, R13974 += 1, R13975 += 1, R13976 += 1 };
  s2 -> s2 [0, 69] { R14082 += 1, R14038 += 1, R13973 += 1, R13974 += 1 };
  s2 -> s4 [70, 70] { R14082 += 1, R14038 += 1, R13973 += 1, R13974 += 1 };
  s2 -> s5 [70, 70] { R14082 += 1, R14038 += 1, R13973 += 1, R13974 += 1 };
  s2 -> s6 [70, 70] { R14082 += 1, R14038 += 1, R13974 += 1, R13975 += 1, R13976 += 1 };
  s2 -> s7 [70, 70] { R14082 += 1, R14038 += 1, R13974 += 1, R13975 += 1, R13976 += 1 };
  s2 -> s1 [71, 65535] { R14082 += 1, R14038 += 1, R13974 += 1, R13975 += 1, R13976 += 1 };
  s2 -> s2 [71, 65535] { R14082 += 1, R14038 += 1, R13973 += 1, R13974 += 1 };
  s3 -> s1 [0, 69] { R14082 += 1, R14038 += 1, R13974 += 1, R13975 += 1, R13976 += 1 };
  s3 -> s2 [0, 69] { R14082 += 1, R14038 += 1, R13973 += 1, R13974 += 1 };
  s3 -> s3 [0, 65535] { R14082 += 1, R14037 += 1, R14038 += 1 };
  s3 -> s4 [70, 70] { R14082 += 1, R14038 += 1, R13973 += 1, R13974 += 1 };
  s3 -> s5 [70, 70] { R14082 += 1, R14038 += 1, R13973 += 1, R13974 += 1 };
  s3 -> s6 [70, 70] { R14082 += 1, R14038 += 1, R13974 += 1, R13975 += 1, R13976 += 1 };
  s3 -> s7 [70, 70] { R14082 += 1, R14038 += 1, R13974 += 1, R13975 += 1, R13976 += 1 };
  s3 -> s1 [71, 65535] { R14082 += 1, R14038 += 1, R13974 += 1, R13975 += 1, R13976 += 1 };
  s3 -> s2 [71, 65535] { R14082 += 1, R14038 += 1, R13973 += 1, R13974 += 1 };
  s5 -> s5 [0, 65535] { R14082 += 1, R14038 += 1, R13973 += 1, R13974 += 1 };
  s5 -> s7 [0, 65535] { R14082 += 1, R14038 += 1, R13974 += 1, R13975 += 1, R13976 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R14082 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R14082 += 1 };
  s7 -> s7 [0, 65535] { R14082 += 1, R14038 += 1, R13974 += 1, R13975 += 1, R13976 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R14082 += 1 };
  accepting s8, s9, s6, s1, s7;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R14082 && R23 - R14082 = -1 && R24 = R14082 && R25 - R14082 = -1 && R26 = R14082 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R13530 + -1*R13526 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R13530 + -1*R13526 - R66 = 0 && R55 + R13518 + R13515 + -1*R13532 + -1*R13528 - R68 = 0 && R65 + R13529 + R13525 = 0 && R67 + R13531 + R13527 = 0 && R14023 = 0 && R14024 = 0 && R14029 = 0 && R14030 = 0 && R14031 = 0 && R14032 = 0 && R14035 = 0 && R14036 = 0 && R14037 = 0 && R14038 = 0 && R14039 = 0 && R14040 = R14082 && R14041 = 0 && R14042 = R14082 && R14043 = 0 && R14044 = R14082 && R14045 = 0 && R14046 = R14082 && R14047 = 0 && R14048 = R14082 && R14049 = 0 && R14050 = R14082 && R14051 = 0 && R14052 = R14082 && R14053 = 0 && R14054 = R14082 && R14055 = 0 && R14056 = R14082 && R14057 = 0 && R14058 = R14082 && R14059 = 0 && R14060 = R14082 && R14061 = 0 && R14062 = R14082 && R14063 = 0 && R14064 = R14082 && R14065 = 0 && R14066 = R14082 && R14067 = 0 && R14068 = R14082 && R14069 = 0 && R14070 = R14082 && R14071 = 0 && R14072 = R14082 && R14073 = 0 && R14074 = R14082 && R14075 = 0 && R14076 = R14082 && R14077 = 0 && R14078 = R14082 && R14079 = 0 && R14080 = R14082 && R14081 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R13524 + R13521 < 1 && -1*R13530 + -1*R13526 - R66 < 1 && -1*R13532 + -1*R13528 - R68 < 1 && 0 < R14082 && (R2 != 0 || R20 = 0 || (R13983 = 0 && R13984 = 0)) && (R2 != 0 || R20 = 0 || (R13985 = 0 && R13986 = 0)) && (R2 != 0 || R20 = 0 || (R13987 = 0 && R13988 = 0)) && (R2 != 0 || R20 = 0 || (R13989 = 0 && R13990 = 0)) && (R2 != 0 || R20 = 0 || (R13991 = 0 && R13992 = 0)) && (R2 != 0 || R20 = 0 || (R13993 = 0 && R13994 = 0)) && (R2 != 0 || R20 = 0 || (R13995 = 0 && R13996 = 0)) && (R2 != 0 || R20 = 0 || (R13997 = 0 && R13998 = 0)) && (R2 != 0 || R20 = 0 || (R13999 = 0 && R14000 = 0)) && (R2 != 0 || R20 = 0 || (R14001 = 0 && R14002 = 0)) && (R53 + R13516 + R13513 != 0 || R54 + R13517 + R13514 + -1*R13530 + -1*R13526 - R66 = 0 || R66 + R13530 + R13526 < 1) && (R59 + R13522 + R13519 != 0 || R60 + R13523 + R13520 + -1*R13530 + -1*R13526 - R66 = 0 || R66 + R13530 + R13526 < 1) && (R66 + R13530 + R13526 != 0 || ((R53 + R13516 + R13513 != 0 || R54 + R13517 + R13514 = 0 || R68 + R13532 + R13528 < 1) && (R53 + R13516 + R13513 = 0 || R68 + R13532 + R13528 < 1))) && (R66 + R13530 + R13526 != 0 || ((R59 + R13522 + R13519 != 0 || R60 + R13523 + R13520 = 0 || R68 + R13532 + R13528 < 1) && (R59 + R13522 + R13519 = 0 || R68 + R13532 + R13528 < 1))) && (R66 + R13530 + R13526 != 0 || ((R73 + R13978 + R13973 != 0 || R74 + R13979 + R13974 = 0 || R68 + R13532 + R13528 < 1) && (R73 + R13978 + R13973 = 0 || R68 + R13532 + R13528 < 1))) && (R68 + R13532 + R13528 != 0 || R77 + R13982 + R13977 = 0 || (R75 + R13980 + R13975 = 0 && R76 + R13981 + R13976 = 0)) && (R73 + R13978 + R13973 != 0 || R66 + R13530 + R13526 + -1*R13979 + -1*R13974 - R74 = 0 || R66 + R13530 + R13526 < 1) && (R75 + R13980 + R13975 != 0 || R68 + R13532 + R13528 + -1*R13981 + -1*R13976 - R76 = 0 || R68 + R13532 + R13528 < 1) && (R13983 != 0 || R2 = R13984 || R2 < 1) && (R13985 != 0 || R2 = R13986 || R2 < 1) && (R13987 != 0 || R2 = R13988 || R2 < 1) && (R13989 != 0 || R2 = R13990 || R2 < 1) && (R13991 != 0 || R2 = R13992 || R2 < 1) && (R13993 != 0 || R2 = R13994 || R2 < 1) && (R13995 != 0 || R2 = R13996 || R2 < 1) && (R13997 != 0 || R2 = R13998 || R2 < 1) && (R13999 != 0 || R2 = R14000 || R2 < 1) && (R14001 != 0 || R2 = R14002 || R2 < 1) && (R21 = 0 || (R14021 = 0 && R14022 = 0)) && (R21 = 0 || (R14025 = 0 && R14026 = 0)) && (R21 = 0 || (R14027 = 0 && R14028 = 0)) && (R21 = 0 || (R14033 = 0 && R14034 = 0)) && (R22 = 0 || (R14003 = 0 && R14004 = 0)) && (R22 = 0 || (R14005 = 0 && R14006 = 0)) && (R22 = 0 || (R14007 = 0 && R14008 = 0)) && (R22 = 0 || (R14009 = 0 && R14010 = 0)) && (R22 = 0 || (R14011 = 0 && R14012 = 0)) && (R22 = 0 || (R14013 = 0 && R14014 = 0)) && (R22 = 0 || (R14015 = 0 && R14016 = 0)) && (R22 = 0 || (R14017 = 0 && R14018 = 0)) && (R22 = 0 || (R14019 = 0 && R14020 = 0)) && (R53 + R13516 + R13513 = 0 || R66 + R13530 + R13526 < 1) && (R59 + R13522 + R13519 = 0 || R66 + R13530 + R13526 < 1) && (R73 + R13978 + R13973 = 0 || R66 + R13530 + R13526 < 1) && (R75 + R13980 + R13975 = 0 || R68 + R13532 + R13528 < 1) && (R13983 = 0 || R2 < 1) && (R13985 = 0 || R2 < 1) && (R13987 = 0 || R2 < 1) && (R13989 = 0 || R2 < 1) && (R13991 = 0 || R2 < 1) && (R13993 = 0 || R2 < 1) && (R13995 = 0 || R2 < 1) && (R13997 = 0 || R2 < 1) && (R13999 = 0 || R2 < 1) && (R14001 = 0 || R2 < 1);
// End of Parikh automata intersection problem
