// Parikh automata intersection problem, generated by OSTRICH+
counter int
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R14680 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R14679 += 1, R14680 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R14680 += 1, R22 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R14682 += 1 };
  s0 -> s0 [0, 65535] { R14681 += 1, R14682 += 1 };
  s0 -> s2 [70, 70] { R14682 += 1 };
  s0 -> s3 [70, 70] { R14682 += 1 };
  s0 -> s1 [76, 65535] { R14682 += 1 };
  s1 -> s1 [0, 69] { R14682 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14682 += 1 };
  s1 -> s3 [70, 70] { R14682 += 1 };
  s1 -> s1 [76, 65535] { R14682 += 1 };
  s2 -> s2 [0, 70] { R14682 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R14682 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R14684 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R14683 += 1, R14684 += 1 };
  s0 -> s2 [70, 70] { R14684 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R14684 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R14684 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R14684 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14684 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R14684 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R14684 += 1, R45 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R14684 += 1, R45 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R14686 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R14685 += 1, R14686 += 1 };
  s0 -> s2 [70, 70] { R14686 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R14686 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R14686 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R14686 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14686 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R14686 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R14686 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R14686 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R14688 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R14687 += 1, R14688 += 1 };
  s0 -> s2 [70, 70] { R14688 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R14688 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R14688 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R14688 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14688 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R14688 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R14688 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R14688 += 1, R49 += 1, R50 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R14690 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R14689 += 1, R14690 += 1 };
  s0 -> s2 [70, 70] { R14690 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R14690 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R14690 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R14690 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14690 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R14690 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R14690 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535] { R14690 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R14692 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R14691 += 1, R14692 += 1 };
  s0 -> s2 [70, 70] { R14692 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R14692 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R14692 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R14692 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14692 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R14692 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R14692 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535] { R14692 += 1, R59 += 1, R60 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R14694 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R14693 += 1, R14694 += 1 };
  s0 -> s2 [70, 70] { R14694 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R14694 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R14694 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R14694 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14694 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R14694 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R14694 += 1, R65 += 1, R66 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R14694 += 1, R65 += 1, R66 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R14696 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R14695 += 1, R14696 += 1 };
  s0 -> s2 [70, 70] { R14696 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R14696 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R14696 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R14696 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14696 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R14696 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R14696 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R14696 += 1, R73 += 1, R74 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R14716 += 1 };
  s0 -> s0 [0, 65535] { R14715 += 1, R14716 += 1 };
  s0 -> s2 [70, 70] { R14716 += 1 };
  s0 -> s1 [71, 65535] { R14716 += 1 };
  s1 -> s1 [0, 69] { R14716 += 1 };
  s1 -> s2 [70, 70] { R14716 += 1 };
  s1 -> s1 [71, 65535] { R14716 += 1 };
  s2 -> s2 [0, 65535] { R14716 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R14717 += 1, R14718 += 1 };
  s0 -> s1 [0, 65535] { R14718 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R14718 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R14720 += 1 };
  s0 -> s2 [0, 65535] { R14720 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R14719 += 1, R14720 += 1 };
  s0 -> s3 [70, 70] { R14720 += 1 };
  s0 -> s1 [71, 65535] { R14720 += 1 };
  s1 -> s1 [0, 69] { R14720 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R14720 += 1 };
  s1 -> s1 [71, 65535] { R14720 += 1 };
  s2 -> s1 [0, 69] { R14720 += 1 };
  s2 -> s2 [0, 65535] { R14720 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R14720 += 1 };
  s2 -> s1 [71, 65535] { R14720 += 1 };
  s3 -> s3 [0, 65535] { R14720 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R14722 += 1, R14660 += 1 };
  s0 -> s0 [0, 65535] { R14721 += 1, R14722 += 1 };
  s0 -> s2 [0, 65535] { R14722 += 1, R14659 += 1, R14660 += 1 };
  s0 -> s1 [71, 65535] { R14722 += 1, R14660 += 1 };
  s1 -> s1 [0, 69] { R14722 += 1, R14660 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R14722 += 1 };
  s1 -> s1 [71, 65535] { R14722 += 1, R14660 += 1 };
  s2 -> s1 [0, 69] { R14722 += 1, R14660 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R14722 += 1, R14659 += 1, R14660 += 1 };
  s2 -> s1 [71, 65535] { R14722 += 1, R14660 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R14724 += 1, R14661 += 1, R14662 += 1 };
  s0 -> s0 [0, 65535] { R14723 += 1, R14724 += 1 };
  s0 -> s2 [0, 65535] { R14724 += 1, R14662 += 1, R20 += 1 };
  s1 -> s1 [0, 65535] { R14724 += 1, R14661 += 1, R14662 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R14724 += 1, R14662 += 1, R20 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R14724 += 1 };
  s2 -> s2 [0, 65535] { R14724 += 1, R14662 += 1, R20 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R14724 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R14726 += 1, R14664 += 1 };
  s0 -> s0 [0, 65535] { R14725 += 1, R14726 += 1 };
  s0 -> s2 [0, 65535] { R14726 += 1, R14663 += 1, R14664 += 1 };
  s0 -> s1 [75, 65535] { R14726 += 1, R14664 += 1 };
  s1 -> s1 [0, 70] { R14726 += 1, R14664 += 1 };
  s1 -> s1 [0, 65535] { R14726 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R14726 += 1, R14664 += 1 };
  s2 -> s1 [0, 70] { R14726 += 1, R14664 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R14726 += 1, R14663 += 1, R14664 += 1 };
  s2 -> s1 [75, 65535] { R14726 += 1, R14664 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R14728 += 1, R14666 += 1, R84 += 1 };
  s0 -> s0 [0, 65535] { R14727 += 1, R14728 += 1 };
  s0 -> s2 [0, 65535] { R14728 += 1, R14665 += 1, R14666 += 1 };
  s1 -> s1 [0, 65535] { R14728 += 1, R14666 += 1, R84 += 1 };
  s1 -> s4 [0, 65535] { R14728 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R14728 += 1, R14666 += 1, R84 += 1 };
  s2 -> s2 [0, 65535] { R14728 += 1, R14665 += 1, R14666 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R14728 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R14730 += 1, R14668 += 1 };
  s0 -> s2 [0, 65535] { R14730 += 1, R14668 += 1, R86 += 1 };
  s0 -> s3 [0, 65535] { R14730 += 1, R14667 += 1, R14668 += 1 };
  s0 -> s0 [0, 65535] { R14729 += 1, R14730 += 1 };
  s0 -> s1 [76, 65535] { R14730 += 1, R14668 += 1 };
  s1 -> s1 [0, 74] { R14730 += 1, R14668 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R14730 += 1 };
  s1 -> s1 [76, 65535] { R14730 += 1, R14668 += 1 };
  s2 -> s1 [0, 74] { R14730 += 1, R14668 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R14730 += 1 };
  s2 -> s2 [0, 65535] { R14730 += 1, R14668 += 1, R86 += 1 };
  s2 -> s1 [76, 65535] { R14730 += 1, R14668 += 1 };
  s3 -> s1 [0, 74] { R14730 += 1, R14668 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R14730 += 1, R14668 += 1, R86 += 1 };
  s3 -> s3 [0, 65535] { R14730 += 1, R14667 += 1, R14668 += 1 };
  s3 -> s1 [76, 65535] { R14730 += 1, R14668 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R14730 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R14732 += 1, R14670 += 1, R90 += 1 };
  s0 -> s0 [0, 65535] { R14731 += 1, R14732 += 1 };
  s0 -> s2 [0, 65535] { R14732 += 1, R14669 += 1, R14670 += 1 };
  s0 -> s3 [0, 65535] { R14732 += 1, R14670 += 1 };
  s1 -> s1 [0, 65535] { R14732 += 1, R14670 += 1, R90 += 1 };
  s1 -> s3 [0, 65535] { R14732 += 1, R14670 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R14732 += 1 };
  s2 -> s1 [0, 65535] { R14732 += 1, R14670 += 1, R90 += 1 };
  s2 -> s2 [0, 65535] { R14732 += 1, R14669 += 1, R14670 += 1 };
  s2 -> s3 [0, 65535] { R14732 += 1, R14670 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R14732 += 1, R14670 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R14732 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R14732 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R14734 += 1, R14672 += 1 };
  s0 -> s2 [0, 65535] { R14734 += 1, R14671 += 1, R14672 += 1 };
  s0 -> s0 [0, 65535] { R14733 += 1, R14734 += 1 };
  s0 -> s3 [0, 65535] { R14734 += 1, R14672 += 1, R13517 += 1, R13518 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R14734 += 1, R14672 += 1 };
  s1 -> s5 [0, 65535] { R14734 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R14734 += 1, R14672 += 1 };
  s2 -> s2 [0, 65535] { R14734 += 1, R14671 += 1, R14672 += 1 };
  s2 -> s3 [0, 65535] { R14734 += 1, R14672 += 1, R13517 += 1, R13518 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R14734 += 1, R14672 += 1 };
  s3 -> s5 [0, 65535] { R14734 += 1 };
  s3 -> s3 [0, 65535] { R14734 += 1, R14672 += 1, R13517 += 1, R13518 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R14734 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R14736 += 1, R14674 += 1, R13523 += 1 };
  s0 -> s2 [0, 65535] { R14736 += 1, R14674 += 1, R13522 += 1, R13523 += 1 };
  s0 -> s0 [0, 65535] { R14735 += 1, R14736 += 1 };
  s0 -> s3 [0, 65535] { R14736 += 1, R14673 += 1, R14674 += 1 };
  s0 -> s4 [0, 65535] { R14736 += 1, R14674 += 1, R13523 += 1, R13524 += 1 };
  s0 -> s1 [76, 65535] { R14736 += 1, R14674 += 1, R13523 += 1 };
  s1 -> s1 [0, 74] { R14736 += 1, R14674 += 1, R13523 += 1 };
  s1 -> s1 [0, 65535] { R14736 += 1, R14674 += 1 };
  s1 -> s5 [0, 65535] { R14736 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [76, 65535] { R14736 += 1, R14674 += 1, R13523 += 1 };
  s2 -> s1 [0, 74] { R14736 += 1, R14674 += 1, R13523 += 1 };
  s2 -> s5 [0, 65535] { R14736 += 1 };
  s2 -> s2 [0, 65535] { R14736 += 1, R14674 += 1, R13522 += 1, R13523 += 1 };
  s2 -> s4 [0, 65535] { R14736 += 1, R14674 += 1, R13523 += 1, R13524 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s1 [76, 65535] { R14736 += 1, R14674 += 1, R13523 += 1 };
  s3 -> s1 [0, 74] { R14736 += 1, R14674 += 1, R13523 += 1 };
  s3 -> s2 [0, 65535] { R14736 += 1, R14674 += 1, R13522 += 1, R13523 += 1 };
  s3 -> s3 [0, 65535] { R14736 += 1, R14673 += 1, R14674 += 1 };
  s3 -> s4 [0, 65535] { R14736 += 1, R14674 += 1, R13523 += 1, R13524 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s1 [76, 65535] { R14736 += 1, R14674 += 1, R13523 += 1 };
  s4 -> s1 [0, 74] { R14736 += 1, R14674 += 1, R13523 += 1 };
  s4 -> s5 [0, 65535] { R14736 += 1 };
  s4 -> s4 [0, 65535] { R14736 += 1, R14674 += 1, R13523 += 1, R13524 += 1 };
  s4 -> s6 [0, 65535] { R14736 += 1, R14674 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s1 [76, 65535] { R14736 += 1, R14674 += 1, R13523 += 1 };
  s5 -> s5 [0, 65535] { R14736 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s5 [0, 65535] { R14736 += 1 };
  s6 -> s6 [0, 65535] { R14736 += 1, R14674 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s0 [0, 65535] { R14737 += 1, R14738 += 1 };
  s0 -> s1 [0, 65535] { R14738 += 1, R14676 += 1 };
  s0 -> s2 [0, 65535] { R14738 += 1, R14675 += 1, R14676 += 1 };
  s1 -> s4 [0, 65535] { R14738 += 1 };
  s1 -> s1 [0, 65535] { R14738 += 1, R14676 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R14738 += 1, R14676 += 1 };
  s2 -> s2 [0, 65535] { R14738 += 1, R14675 += 1, R14676 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R14738 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s0 [0, 65535] { R14739 += 1, R14740 += 1 };
  s0 -> s1 [0, 65535] { R14740 += 1, R14678 += 1 };
  s0 -> s2 [0, 65535] { R14740 += 1, R14677 += 1, R14678 += 1 };
  s0 -> s3 [0, 65535] { R14740 += 1, R14678 += 1, R14655 += 1 };
  s1 -> s4 [0, 65535] { R14740 += 1 };
  s1 -> s1 [0, 65535] { R14740 += 1, R14678 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R14740 += 1, R14678 += 1 };
  s2 -> s2 [0, 65535] { R14740 += 1, R14677 += 1, R14678 += 1 };
  s2 -> s3 [0, 65535] { R14740 += 1, R14678 += 1, R14655 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R14740 += 1 };
  s3 -> s1 [0, 65535] { R14740 += 1, R14678 += 1 };
  s3 -> s3 [0, 65535] { R14740 += 1, R14678 += 1, R14655 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R14740 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R14742 += 1, R14698 += 1, R21 += 1 };
  s0 -> s0 [0, 65535] { R14741 += 1, R14742 += 1 };
  s0 -> s2 [0, 65535] { R14742 += 1, R14697 += 1, R14698 += 1 };
  s1 -> s1 [0, 65535] { R14742 += 1, R14698 += 1, R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R14742 += 1 };
  s2 -> s1 [0, 65535] { R14742 += 1, R14698 += 1, R21 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R14742 += 1, R14697 += 1, R14698 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R14742 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R14744 += 1, R14700 += 1 };
  s0 -> s0 [0, 65535] { R14743 += 1, R14744 += 1 };
  s0 -> s2 [0, 65535] { R14744 += 1, R14699 += 1, R14700 += 1 };
  s0 -> s3 [70, 70] { R14744 += 1, R14700 += 1 };
  s0 -> s4 [70, 70] { R14744 += 1, R14700 += 1 };
  s0 -> s5 [75, 75] { R14744 += 1, R14700 += 1 };
  s0 -> s1 [76, 65535] { R14744 += 1, R14700 += 1 };
  s1 -> s1 [0, 69] { R14744 += 1, R14700 += 1 };
  s1 -> s3 [70, 70] { R14744 += 1, R14700 += 1 };
  s1 -> s4 [70, 70] { R14744 += 1, R14700 += 1 };
  s1 -> s5 [75, 75] { R14744 += 1, R14700 += 1 };
  s1 -> s1 [76, 65535] { R14744 += 1, R14700 += 1 };
  s2 -> s1 [0, 69] { R14744 += 1, R14700 += 1 };
  s2 -> s2 [0, 65535] { R14744 += 1, R14699 += 1, R14700 += 1 };
  s2 -> s3 [70, 70] { R14744 += 1, R14700 += 1 };
  s2 -> s4 [70, 70] { R14744 += 1, R14700 += 1 };
  s2 -> s5 [75, 75] { R14744 += 1, R14700 += 1 };
  s2 -> s1 [76, 65535] { R14744 += 1, R14700 += 1 };
  s3 -> s3 [0, 70] { R14744 += 1, R14700 += 1 };
  s3 -> s7 [75, 75] { R14744 += 1, R14700 += 1 };
  s3 -> s3 [76, 65535] { R14744 += 1, R14700 += 1 };
  s5 -> s5 [0, 69] { R14744 += 1, R14700 += 1 };
  s5 -> s5 [0, 65535] { R14744 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R14744 += 1, R14700 += 1 };
  s5 -> s8 [70, 70] { R14744 += 1, R14700 += 1 };
  s5 -> s5 [75, 65535] { R14744 += 1, R14700 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R14744 += 1, R14700 += 1 };
  s7 -> s7 [0, 65535] { R14744 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R14744 += 1, R14700 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R14744 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R14746 += 1, R14702 += 1, R83 += 1 };
  s0 -> s2 [0, 65535] { R14746 += 1, R14701 += 1, R14702 += 1 };
  s0 -> s0 [0, 65535] { R14745 += 1, R14746 += 1 };
  s0 -> s3 [70, 70] { R14746 += 1, R14702 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R14746 += 1, R14702 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R14746 += 1, R14702 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R14746 += 1, R14702 += 1, R83 += 1 };
  s1 -> s1 [0, 65535] { R14746 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R14746 += 1, R14702 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R14746 += 1, R14702 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R14746 += 1, R14702 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R14746 += 1, R14702 += 1, R83 += 1 };
  s2 -> s2 [0, 65535] { R14746 += 1, R14701 += 1, R14702 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R14746 += 1, R14702 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R14746 += 1, R14702 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R14746 += 1, R14702 += 1, R83 += 1 };
  s3 -> s3 [0, 65535] { R14746 += 1, R14702 += 1, R83 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R14746 += 1 };
  s4 -> s4 [0, 65535] { R14746 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R14746 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R14748 += 1, R14704 += 1, R85 += 1 };
  s0 -> s0 [0, 65535] { R14747 += 1, R14748 += 1 };
  s0 -> s2 [0, 65535] { R14748 += 1, R14703 += 1, R14704 += 1 };
  s0 -> s3 [70, 70] { R14748 += 1, R14704 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R14748 += 1, R14704 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R14748 += 1, R14704 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R14748 += 1, R14704 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R14748 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R14748 += 1, R14704 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R14748 += 1, R14704 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R14748 += 1, R14704 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R14748 += 1, R14704 += 1, R85 += 1 };
  s2 -> s2 [0, 65535] { R14748 += 1, R14703 += 1, R14704 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R14748 += 1, R14704 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R14748 += 1, R14704 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R14748 += 1, R14704 += 1, R85 += 1 };
  s3 -> s3 [0, 65535] { R14748 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R14748 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R14748 += 1, R14704 += 1, R85 += 1 };
  s5 -> s5 [0, 65535] { R14748 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R14750 += 1, R14706 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R14750 += 1, R14706 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R14749 += 1, R14750 += 1 };
  s0 -> s3 [0, 65535] { R14750 += 1, R14705 += 1, R14706 += 1 };
  s0 -> s4 [70, 70] { R14750 += 1, R14706 += 1, R87 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R14750 += 1, R14706 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R14750 += 1, R14706 += 1, R87 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R14750 += 1, R14706 += 1, R88 += 1 };
  s0 -> s2 [71, 74] { R14750 += 1, R14706 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R14750 += 1, R14706 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R14750 += 1, R14706 += 1, R88 += 1 };
  s0 -> s2 [76, 65535] { R14750 += 1, R14706 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R14750 += 1, R14706 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [0, 69] { R14750 += 1, R14706 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R14750 += 1, R14706 += 1, R87 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R14750 += 1, R14706 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R14750 += 1, R14706 += 1, R87 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R14750 += 1, R14706 += 1, R88 += 1 };
  s1 -> s2 [71, 74] { R14750 += 1, R14706 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R14750 += 1, R14706 += 1, R87 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R14750 += 1, R14706 += 1, R88 += 1 };
  s1 -> s2 [76, 65535] { R14750 += 1, R14706 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R14750 += 1, R14706 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R14750 += 1, R14706 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R14750 += 1, R14706 += 1, R88 += 1 };
  s2 -> s2 [71, 74] { R14750 += 1, R14706 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R14750 += 1, R14706 += 1, R88 += 1 };
  s2 -> s2 [76, 65535] { R14750 += 1, R14706 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R14750 += 1, R14706 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R14750 += 1, R14706 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R14750 += 1, R14705 += 1, R14706 += 1 };
  s3 -> s4 [70, 70] { R14750 += 1, R14706 += 1, R87 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R14750 += 1, R14706 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R14750 += 1, R14706 += 1, R87 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R14750 += 1, R14706 += 1, R88 += 1 };
  s3 -> s2 [71, 74] { R14750 += 1, R14706 += 1, R88 += 1 };
  s3 -> s1 [71, 65535] { R14750 += 1, R14706 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R14750 += 1, R14706 += 1, R88 += 1 };
  s3 -> s2 [76, 65535] { R14750 += 1, R14706 += 1, R88 += 1 };
  s6 -> s7 [0, 74] { R14750 += 1, R14706 += 1, R88 += 1 };
  s6 -> s6 [0, 65535] { R14750 += 1, R14706 += 1, R87 += 1, R88 += 1 };
  s6 -> s11 [75, 75] { R14750 += 1, R14706 += 1, R88 += 1 };
  s6 -> s7 [76, 65535] { R14750 += 1, R14706 += 1, R88 += 1 };
  s7 -> s7 [0, 74] { R14750 += 1, R14706 += 1, R88 += 1 };
  s7 -> s11 [75, 75] { R14750 += 1, R14706 += 1, R88 += 1 };
  s7 -> s7 [76, 65535] { R14750 += 1, R14706 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R14750 += 1, R14706 += 1, R88 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R14750 += 1 };
  s8 -> s10 [70, 70] { R14750 += 1, R14706 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R14750 += 1, R14706 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R14750 += 1, R14706 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R14750 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R14750 += 1 };
  s11 -> s11 [0, 65535] { R14750 += 1, R14706 += 1, R88 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R14750 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R14752 += 1, R14708 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s2 [0, 69] { R14752 += 1, R14708 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s0 [0, 65535] { R14751 += 1, R14752 += 1 };
  s0 -> s3 [0, 65535] { R14752 += 1, R14707 += 1, R14708 += 1 };
  s0 -> s4 [70, 70] { R14752 += 1, R14708 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s5 [70, 70] { R14752 += 1, R14708 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s6 [70, 70] { R14752 += 1, R14708 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s7 [70, 70] { R14752 += 1, R14708 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s1 [71, 65535] { R14752 += 1, R14708 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s2 [71, 65535] { R14752 += 1, R14708 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s1 [0, 69] { R14752 += 1, R14708 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s1 [0, 65535] { R14752 += 1 };
  s1 -> s5 [70, 70] { R14752 += 1, R14708 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s7 [70, 70] { R14752 += 1, R14708 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s1 [71, 65535] { R14752 += 1, R14708 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s1 [0, 69] { R14752 += 1, R14708 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [0, 69] { R14752 += 1, R14708 += 1, R13513 += 1, R13514 += 1 };
  s2 -> s4 [70, 70] { R14752 += 1, R14708 += 1, R13513 += 1, R13514 += 1 };
  s2 -> s5 [70, 70] { R14752 += 1, R14708 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s6 [70, 70] { R14752 += 1, R14708 += 1, R13513 += 1, R13514 += 1 };
  s2 -> s7 [70, 70] { R14752 += 1, R14708 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s1 [71, 65535] { R14752 += 1, R14708 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [71, 65535] { R14752 += 1, R14708 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s1 [0, 69] { R14752 += 1, R14708 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s2 [0, 69] { R14752 += 1, R14708 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s3 [0, 65535] { R14752 += 1, R14707 += 1, R14708 += 1 };
  s3 -> s4 [70, 70] { R14752 += 1, R14708 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s5 [70, 70] { R14752 += 1, R14708 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s6 [70, 70] { R14752 += 1, R14708 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s7 [70, 70] { R14752 += 1, R14708 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s1 [71, 65535] { R14752 += 1, R14708 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s2 [71, 65535] { R14752 += 1, R14708 += 1, R13513 += 1, R13514 += 1 };
  s4 -> s4 [0, 65535] { R14752 += 1, R14708 += 1, R13513 += 1, R13514 += 1 };
  s4 -> s7 [0, 65535] { R14752 += 1, R14708 += 1, R13514 += 1, R13515 += 1 };
  s5 -> s9 [0, 65535];
  s5 -> s5 [0, 65535] { R14752 += 1 };
  s7 -> s8 [0, 65535] { R14752 += 1 };
  s7 -> s9 [0, 65535];
  s7 -> s7 [0, 65535] { R14752 += 1, R14708 += 1, R13514 += 1, R13515 += 1 };
  s8 -> s8 [0, 65535] { R14752 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  accepting s8, s5, s9, s1, s7;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R14754 += 1, R14710 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s0 [0, 65535] { R14753 += 1, R14754 += 1 };
  s0 -> s2 [0, 65535] { R14754 += 1, R14709 += 1, R14710 += 1 };
  s0 -> s3 [70, 70] { R14754 += 1, R14710 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s4 [70, 70] { R14754 += 1, R14710 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s1 [71, 65535] { R14754 += 1, R14710 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [0, 69] { R14754 += 1, R14710 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R14754 += 1 };
  s1 -> s3 [70, 70] { R14754 += 1, R14710 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s4 [70, 70] { R14754 += 1, R14710 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [71, 65535] { R14754 += 1, R14710 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s1 [0, 69] { R14754 += 1, R14710 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R14754 += 1, R14709 += 1, R14710 += 1 };
  s2 -> s3 [70, 70] { R14754 += 1, R14710 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s4 [70, 70] { R14754 += 1, R14710 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s1 [71, 65535] { R14754 += 1, R14710 += 1, R13519 += 1, R13520 += 1 };
  s3 -> s3 [0, 65535] { R14754 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R14754 += 1 };
  s4 -> s4 [0, 65535] { R14754 += 1, R14710 += 1, R13519 += 1, R13520 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R14754 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R14756 += 1, R14712 += 1, R14641 += 1, R14642 += 1 };
  s0 -> s2 [0, 69] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s0 -> s3 [0, 69] { R14756 += 1, R14712 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s0 -> s4 [0, 65535] { R14756 += 1, R14711 += 1, R14712 += 1 };
  s0 -> s0 [0, 65535] { R14755 += 1, R14756 += 1 };
  s0 -> s5 [70, 70] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s0 -> s6 [70, 70] { R14756 += 1, R14712 += 1, R14641 += 1, R14642 += 1 };
  s0 -> s7 [70, 70] { R14756 += 1, R14712 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s0 -> s8 [70, 70] { R14756 += 1, R14712 += 1, R14641 += 1, R14642 += 1 };
  s0 -> s9 [70, 70] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s0 -> s10 [70, 70] { R14756 += 1, R14712 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s0 -> s2 [71, 74] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s0 -> s1 [71, 65535] { R14756 += 1, R14712 += 1, R14641 += 1, R14642 += 1 };
  s0 -> s3 [71, 65535] { R14756 += 1, R14712 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s0 -> s11 [75, 75] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s0 -> s2 [76, 65535] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s1 -> s1 [0, 69] { R14756 += 1, R14712 += 1, R14641 += 1, R14642 += 1 };
  s1 -> s2 [0, 69] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s1 -> s3 [0, 69] { R14756 += 1, R14712 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s1 -> s5 [70, 70] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s1 -> s6 [70, 70] { R14756 += 1, R14712 += 1, R14641 += 1, R14642 += 1 };
  s1 -> s7 [70, 70] { R14756 += 1, R14712 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s1 -> s8 [70, 70] { R14756 += 1, R14712 += 1, R14641 += 1, R14642 += 1 };
  s1 -> s9 [70, 70] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s1 -> s10 [70, 70] { R14756 += 1, R14712 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s1 -> s2 [71, 74] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s1 -> s1 [71, 65535] { R14756 += 1, R14712 += 1, R14641 += 1, R14642 += 1 };
  s1 -> s3 [71, 65535] { R14756 += 1, R14712 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s1 -> s11 [75, 75] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s1 -> s2 [76, 65535] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s2 -> s2 [0, 69] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s2 -> s5 [70, 70] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s2 -> s9 [70, 70] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s2 -> s2 [71, 74] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s2 -> s11 [75, 75] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s2 -> s2 [76, 65535] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s3 -> s2 [0, 69] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s3 -> s3 [0, 69] { R14756 += 1, R14712 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s3 -> s5 [70, 70] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s3 -> s7 [70, 70] { R14756 += 1, R14712 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s3 -> s9 [70, 70] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s3 -> s10 [70, 70] { R14756 += 1, R14712 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s3 -> s2 [71, 74] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s3 -> s3 [71, 65535] { R14756 += 1, R14712 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s3 -> s11 [75, 75] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s3 -> s2 [76, 65535] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s4 -> s1 [0, 69] { R14756 += 1, R14712 += 1, R14641 += 1, R14642 += 1 };
  s4 -> s2 [0, 69] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s4 -> s3 [0, 69] { R14756 += 1, R14712 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s4 -> s4 [0, 65535] { R14756 += 1, R14711 += 1, R14712 += 1 };
  s4 -> s5 [70, 70] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s4 -> s6 [70, 70] { R14756 += 1, R14712 += 1, R14641 += 1, R14642 += 1 };
  s4 -> s7 [70, 70] { R14756 += 1, R14712 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s4 -> s8 [70, 70] { R14756 += 1, R14712 += 1, R14641 += 1, R14642 += 1 };
  s4 -> s9 [70, 70] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s4 -> s10 [70, 70] { R14756 += 1, R14712 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s4 -> s2 [71, 74] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s4 -> s1 [71, 65535] { R14756 += 1, R14712 += 1, R14641 += 1, R14642 += 1 };
  s4 -> s3 [71, 65535] { R14756 += 1, R14712 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s4 -> s11 [75, 75] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s4 -> s2 [76, 65535] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s8 -> s9 [0, 74] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s8 -> s8 [0, 65535] { R14756 += 1, R14712 += 1, R14641 += 1, R14642 += 1 };
  s8 -> s10 [0, 65535] { R14756 += 1, R14712 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s8 -> s19 [75, 75] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s8 -> s9 [76, 65535] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s9 -> s9 [0, 74] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s9 -> s19 [75, 75] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s9 -> s9 [76, 65535] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s10 -> s9 [0, 74] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s10 -> s10 [0, 65535] { R14756 += 1, R14712 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s10 -> s19 [75, 75] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s10 -> s9 [76, 65535] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s11 -> s12 [0, 69] { R14756 += 1, R14712 += 1, R14642 += 1 };
  s11 -> s13 [0, 69] { R14756 += 1, R14712 += 1 };
  s11 -> s11 [0, 69] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s11 -> s14 [70, 70] { R14756 += 1, R14712 += 1, R14642 += 1 };
  s11 -> s15 [70, 70] { R14756 += 1, R14712 += 1 };
  s11 -> s16 [70, 70] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s11 -> s17 [70, 70] { R14756 += 1, R14712 += 1 };
  s11 -> s18 [70, 70] { R14756 += 1, R14712 += 1, R14642 += 1 };
  s11 -> s19 [70, 70] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s11 -> s12 [71, 65535] { R14756 += 1, R14712 += 1, R14642 += 1 };
  s11 -> s13 [71, 65535] { R14756 += 1, R14712 += 1 };
  s11 -> s11 [71, 65535] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s12 -> s12 [0, 69] { R14756 += 1, R14712 += 1, R14642 += 1 };
  s12 -> s13 [0, 69] { R14756 += 1, R14712 += 1 };
  s12 -> s14 [70, 70] { R14756 += 1, R14712 += 1, R14642 += 1 };
  s12 -> s15 [70, 70] { R14756 += 1, R14712 += 1 };
  s12 -> s17 [70, 70] { R14756 += 1, R14712 += 1 };
  s12 -> s18 [70, 70] { R14756 += 1, R14712 += 1, R14642 += 1 };
  s12 -> s12 [71, 65535] { R14756 += 1, R14712 += 1, R14642 += 1 };
  s12 -> s13 [71, 65535] { R14756 += 1, R14712 += 1 };
  s13 -> s13 [0, 69] { R14756 += 1, R14712 += 1 };
  s13 -> s21 [0, 65535];
  s13 -> s13 [0, 65535] { R14756 += 1 };
  s13 -> s15 [70, 70] { R14756 += 1, R14712 += 1 };
  s13 -> s17 [70, 70] { R14756 += 1, R14712 += 1 };
  s13 -> s13 [71, 65535] { R14756 += 1, R14712 += 1 };
  s14 -> s14 [0, 65535] { R14756 += 1, R14712 += 1, R14642 += 1 };
  s14 -> s17 [0, 65535] { R14756 += 1, R14712 += 1 };
  s15 -> s15 [0, 65535] { R14756 += 1 };
  s15 -> s21 [0, 65535];
  s17 -> s20 [0, 65535] { R14756 += 1 };
  s17 -> s21 [0, 65535];
  s17 -> s17 [0, 65535] { R14756 += 1, R14712 += 1 };
  s19 -> s14 [0, 65535] { R14756 += 1, R14712 += 1, R14642 += 1 };
  s19 -> s17 [0, 65535] { R14756 += 1, R14712 += 1 };
  s19 -> s19 [0, 65535] { R14756 += 1, R14712 += 1, R14642 += 1, R14644 += 1 };
  s20 -> s20 [0, 65535] { R14756 += 1 };
  s20 -> s21 [0, 65535];
  s21 -> s21 [0, 65535];
  accepting s17, s13, s21, s20, s15;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R14758 += 1, R14714 += 1, R14650 += 1, R14651 += 1, R14652 += 1 };
  s0 -> s2 [0, 69] { R14758 += 1, R14714 += 1, R14650 += 1, R14652 += 1, R14653 += 1 };
  s0 -> s3 [0, 69] { R14758 += 1, R14714 += 1, R14649 += 1, R14650 += 1 };
  s0 -> s4 [0, 65535] { R14758 += 1, R14713 += 1, R14714 += 1 };
  s0 -> s0 [0, 65535] { R14757 += 1, R14758 += 1 };
  s0 -> s5 [70, 70] { R14758 += 1, R14714 += 1, R14649 += 1, R14650 += 1 };
  s0 -> s6 [70, 70] { R14758 += 1, R14714 += 1, R14649 += 1, R14650 += 1 };
  s0 -> s7 [70, 70] { R14758 += 1, R14714 += 1, R14650 += 1, R14651 += 1, R14652 += 1 };
  s0 -> s8 [70, 70] { R14758 += 1, R14714 += 1, R14650 += 1, R14652 += 1, R14653 += 1 };
  s0 -> s9 [70, 70] { R14758 += 1, R14714 += 1, R14650 += 1, R14651 += 1, R14652 += 1 };
  s0 -> s10 [70, 70] { R14758 += 1, R14714 += 1, R14650 += 1, R14652 += 1, R14653 += 1 };
  s0 -> s1 [71, 65535] { R14758 += 1, R14714 += 1, R14650 += 1, R14651 += 1, R14652 += 1 };
  s0 -> s2 [71, 65535] { R14758 += 1, R14714 += 1, R14650 += 1, R14652 += 1, R14653 += 1 };
  s0 -> s3 [71, 65535] { R14758 += 1, R14714 += 1, R14649 += 1, R14650 += 1 };
  s1 -> s1 [0, 69] { R14758 += 1, R14714 += 1, R14650 += 1, R14651 += 1, R14652 += 1 };
  s1 -> s2 [0, 69] { R14758 += 1, R14714 += 1, R14650 += 1, R14652 += 1, R14653 += 1 };
  s1 -> s7 [70, 70] { R14758 += 1, R14714 += 1, R14650 += 1, R14651 += 1, R14652 += 1 };
  s1 -> s8 [70, 70] { R14758 += 1, R14714 += 1, R14650 += 1, R14652 += 1, R14653 += 1 };
  s1 -> s9 [70, 70] { R14758 += 1, R14714 += 1, R14650 += 1, R14651 += 1, R14652 += 1 };
  s1 -> s10 [70, 70] { R14758 += 1, R14714 += 1, R14650 += 1, R14652 += 1, R14653 += 1 };
  s1 -> s1 [71, 65535] { R14758 += 1, R14714 += 1, R14650 += 1, R14651 += 1, R14652 += 1 };
  s1 -> s2 [71, 65535] { R14758 += 1, R14714 += 1, R14650 += 1, R14652 += 1, R14653 += 1 };
  s2 -> s14 [0, 69] { R14758 += 1, R14714 += 1, R14650 += 1 };
  s2 -> s2 [0, 69] { R14758 += 1, R14714 += 1, R14650 += 1, R14652 += 1, R14653 += 1 };
  s2 -> s15 [70, 70] { R14758 += 1, R14714 += 1, R14650 += 1 };
  s2 -> s8 [70, 70] { R14758 += 1, R14714 += 1, R14650 += 1, R14652 += 1, R14653 += 1 };
  s2 -> s11 [70, 70] { R14758 += 1, R14714 += 1, R14650 += 1 };
  s2 -> s10 [70, 70] { R14758 += 1, R14714 += 1, R14650 += 1, R14652 += 1, R14653 += 1 };
  s2 -> s14 [71, 65535] { R14758 += 1, R14714 += 1, R14650 += 1 };
  s2 -> s2 [71, 65535] { R14758 += 1, R14714 += 1, R14650 += 1, R14652 += 1, R14653 += 1 };
  s3 -> s1 [0, 69] { R14758 += 1, R14714 += 1, R14650 += 1, R14651 += 1, R14652 += 1 };
  s3 -> s2 [0, 69] { R14758 += 1, R14714 += 1, R14650 += 1, R14652 += 1, R14653 += 1 };
  s3 -> s3 [0, 69] { R14758 += 1, R14714 += 1, R14649 += 1, R14650 += 1 };
  s3 -> s5 [70, 70] { R14758 += 1, R14714 += 1, R14649 += 1, R14650 += 1 };
  s3 -> s6 [70, 70] { R14758 += 1, R14714 += 1, R14649 += 1, R14650 += 1 };
  s3 -> s7 [70, 70] { R14758 += 1, R14714 += 1, R14650 += 1, R14651 += 1, R14652 += 1 };
  s3 -> s8 [70, 70] { R14758 += 1, R14714 += 1, R14650 += 1, R14652 += 1, R14653 += 1 };
  s3 -> s9 [70, 70] { R14758 += 1, R14714 += 1, R14650 += 1, R14651 += 1, R14652 += 1 };
  s3 -> s10 [70, 70] { R14758 += 1, R14714 += 1, R14650 += 1, R14652 += 1, R14653 += 1 };
  s3 -> s1 [71, 65535] { R14758 += 1, R14714 += 1, R14650 += 1, R14651 += 1, R14652 += 1 };
  s3 -> s2 [71, 65535] { R14758 += 1, R14714 += 1, R14650 += 1, R14652 += 1, R14653 += 1 };
  s3 -> s3 [71, 65535] { R14758 += 1, R14714 += 1, R14649 += 1, R14650 += 1 };
  s4 -> s1 [0, 69] { R14758 += 1, R14714 += 1, R14650 += 1, R14651 += 1, R14652 += 1 };
  s4 -> s2 [0, 69] { R14758 += 1, R14714 += 1, R14650 += 1, R14652 += 1, R14653 += 1 };
  s4 -> s3 [0, 69] { R14758 += 1, R14714 += 1, R14649 += 1, R14650 += 1 };
  s4 -> s4 [0, 65535] { R14758 += 1, R14713 += 1, R14714 += 1 };
  s4 -> s5 [70, 70] { R14758 += 1, R14714 += 1, R14649 += 1, R14650 += 1 };
  s4 -> s6 [70, 70] { R14758 += 1, R14714 += 1, R14649 += 1, R14650 += 1 };
  s4 -> s7 [70, 70] { R14758 += 1, R14714 += 1, R14650 += 1, R14651 += 1, R14652 += 1 };
  s4 -> s8 [70, 70] { R14758 += 1, R14714 += 1, R14650 += 1, R14652 += 1, R14653 += 1 };
  s4 -> s9 [70, 70] { R14758 += 1, R14714 += 1, R14650 += 1, R14651 += 1, R14652 += 1 };
  s4 -> s10 [70, 70] { R14758 += 1, R14714 += 1, R14650 += 1, R14652 += 1, R14653 += 1 };
  s4 -> s1 [71, 65535] { R14758 += 1, R14714 += 1, R14650 += 1, R14651 += 1, R14652 += 1 };
  s4 -> s2 [71, 65535] { R14758 += 1, R14714 += 1, R14650 += 1, R14652 += 1, R14653 += 1 };
  s4 -> s3 [71, 65535] { R14758 += 1, R14714 += 1, R14649 += 1, R14650 += 1 };
  s6 -> s6 [0, 65535] { R14758 += 1, R14714 += 1, R14649 += 1, R14650 += 1 };
  s6 -> s8 [0, 65535] { R14758 += 1, R14714 += 1, R14650 += 1, R14652 += 1, R14653 += 1 };
  s6 -> s9 [0, 65535] { R14758 += 1, R14714 += 1, R14650 += 1, R14651 += 1, R14652 += 1 };
  s8 -> s8 [0, 65535] { R14758 += 1, R14714 += 1, R14650 += 1, R14652 += 1, R14653 += 1 };
  s8 -> s11 [0, 65535] { R14758 += 1, R14714 += 1, R14650 += 1 };
  s9 -> s8 [0, 65535] { R14758 += 1, R14714 += 1, R14650 += 1, R14652 += 1, R14653 += 1 };
  s9 -> s9 [0, 65535] { R14758 += 1, R14714 += 1, R14650 += 1, R14651 += 1, R14652 += 1 };
  s11 -> s12 [0, 65535] { R14758 += 1 };
  s11 -> s13 [0, 65535];
  s11 -> s11 [0, 65535] { R14758 += 1, R14714 += 1, R14650 += 1 };
  s12 -> s12 [0, 65535] { R14758 += 1 };
  s12 -> s13 [0, 65535];
  s13 -> s13 [0, 65535];
  s14 -> s14 [0, 69] { R14758 += 1, R14714 += 1, R14650 += 1 };
  s14 -> s13 [0, 65535];
  s14 -> s14 [0, 65535] { R14758 += 1 };
  s14 -> s15 [70, 70] { R14758 += 1, R14714 += 1, R14650 += 1 };
  s14 -> s11 [70, 70] { R14758 += 1, R14714 += 1, R14650 += 1 };
  s14 -> s14 [71, 65535] { R14758 += 1, R14714 += 1, R14650 += 1 };
  s15 -> s15 [0, 65535] { R14758 += 1 };
  s15 -> s13 [0, 65535];
  accepting s12, s13, s14, s15, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R14758 && R23 - R14758 = -1 && R24 = R14758 && R25 - R14758 = -1 && R26 = R14758 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R14646 + -1*R14642 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R14646 + -1*R14642 - R66 = 0 && R55 + R13518 + R13515 + -1*R14648 + -1*R14644 - R68 = 0 && R65 + R14645 + R14641 = 0 && R67 + R14647 + R14643 = 0 && R14699 = 0 && R14700 = 0 && R14705 = 0 && R14706 = 0 && R14707 = 0 && R14708 = 0 && R14711 = 0 && R14712 = 0 && R14713 = 0 && R14714 = 0 && R14715 = 0 && R14716 = R14758 && R14717 = 0 && R14718 = R14758 && R14719 = 0 && R14720 = R14758 && R14721 = 0 && R14722 = R14758 && R14723 = 0 && R14724 = R14758 && R14725 = 0 && R14726 = R14758 && R14727 = 0 && R14728 = R14758 && R14729 = 0 && R14730 = R14758 && R14731 = 0 && R14732 = R14758 && R14733 = 0 && R14734 = R14758 && R14735 = 0 && R14736 = R14758 && R14737 = 0 && R14738 = R14758 && R14739 = 0 && R14740 = R14758 && R14741 = 0 && R14742 = R14758 && R14743 = 0 && R14744 = R14758 && R14745 = 0 && R14746 = R14758 && R14747 = 0 && R14748 = R14758 && R14749 = 0 && R14750 = R14758 && R14751 = 0 && R14752 = R14758 && R14753 = 0 && R14754 = R14758 && R14755 = 0 && R14756 = R14758 && R14757 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R13524 + R13521 < 1 && -1*R14646 + -1*R14642 - R66 < 1 && -1*R14648 + -1*R14644 - R68 < 1 && 0 < R14758 && (R2 != 0 || R20 = 0 || (R14659 = 0 && R14660 = 0)) && (R2 != 0 || R20 = 0 || (R14661 = 0 && R14662 = 0)) && (R2 != 0 || R20 = 0 || (R14663 = 0 && R14664 = 0)) && (R2 != 0 || R20 = 0 || (R14665 = 0 && R14666 = 0)) && (R2 != 0 || R20 = 0 || (R14667 = 0 && R14668 = 0)) && (R2 != 0 || R20 = 0 || (R14669 = 0 && R14670 = 0)) && (R2 != 0 || R20 = 0 || (R14671 = 0 && R14672 = 0)) && (R2 != 0 || R20 = 0 || (R14673 = 0 && R14674 = 0)) && (R2 != 0 || R20 = 0 || (R14675 = 0 && R14676 = 0)) && (R2 != 0 || R20 = 0 || (R14677 = 0 && R14678 = 0)) && (R53 + R13516 + R13513 != 0 || R54 + R13517 + R13514 + -1*R14646 + -1*R14642 - R66 = 0 || R66 + R14646 + R14642 < 1) && (R59 + R13522 + R13519 != 0 || R60 + R13523 + R13520 + -1*R14646 + -1*R14642 - R66 = 0 || R66 + R14646 + R14642 < 1) && (R66 + R14646 + R14642 != 0 || ((R53 + R13516 + R13513 != 0 || R54 + R13517 + R13514 = 0 || R68 + R14648 + R14644 < 1) && (R53 + R13516 + R13513 = 0 || R68 + R14648 + R14644 < 1))) && (R66 + R14646 + R14642 != 0 || ((R59 + R13522 + R13519 != 0 || R60 + R13523 + R13520 = 0 || R68 + R14648 + R14644 < 1) && (R59 + R13522 + R13519 = 0 || R68 + R14648 + R14644 < 1))) && (R66 + R14646 + R14642 != 0 || ((R73 + R14654 + R14649 != 0 || R74 + R14655 + R14650 = 0 || R68 + R14648 + R14644 < 1) && (R73 + R14654 + R14649 = 0 || R68 + R14648 + R14644 < 1))) && (R68 + R14648 + R14644 != 0 || R77 + R14658 + R14653 = 0 || (R75 + R14656 + R14651 = 0 && R76 + R14657 + R14652 = 0)) && (R73 + R14654 + R14649 != 0 || R66 + R14646 + R14642 + -1*R14655 + -1*R14650 - R74 = 0 || R66 + R14646 + R14642 < 1) && (R75 + R14656 + R14651 != 0 || R68 + R14648 + R14644 + -1*R14657 + -1*R14652 - R76 = 0 || R68 + R14648 + R14644 < 1) && (R14659 != 0 || R2 = R14660 || R2 < 1) && (R14661 != 0 || R2 = R14662 || R2 < 1) && (R14663 != 0 || R2 = R14664 || R2 < 1) && (R14665 != 0 || R2 = R14666 || R2 < 1) && (R14667 != 0 || R2 = R14668 || R2 < 1) && (R14669 != 0 || R2 = R14670 || R2 < 1) && (R14671 != 0 || R2 = R14672 || R2 < 1) && (R14673 != 0 || R2 = R14674 || R2 < 1) && (R14675 != 0 || R2 = R14676 || R2 < 1) && (R14677 != 0 || R2 = R14678 || R2 < 1) && (R21 = 0 || (R14697 = 0 && R14698 = 0)) && (R21 = 0 || (R14701 = 0 && R14702 = 0)) && (R21 = 0 || (R14703 = 0 && R14704 = 0)) && (R21 = 0 || (R14709 = 0 && R14710 = 0)) && (R22 = 0 || (R14679 = 0 && R14680 = 0)) && (R22 = 0 || (R14681 = 0 && R14682 = 0)) && (R22 = 0 || (R14683 = 0 && R14684 = 0)) && (R22 = 0 || (R14685 = 0 && R14686 = 0)) && (R22 = 0 || (R14687 = 0 && R14688 = 0)) && (R22 = 0 || (R14689 = 0 && R14690 = 0)) && (R22 = 0 || (R14691 = 0 && R14692 = 0)) && (R22 = 0 || (R14693 = 0 && R14694 = 0)) && (R22 = 0 || (R14695 = 0 && R14696 = 0)) && (R53 + R13516 + R13513 = 0 || R66 + R14646 + R14642 < 1) && (R59 + R13522 + R13519 = 0 || R66 + R14646 + R14642 < 1) && (R73 + R14654 + R14649 = 0 || R66 + R14646 + R14642 < 1) && (R75 + R14656 + R14651 = 0 || R68 + R14648 + R14644 < 1) && (R14659 = 0 || R2 < 1) && (R14661 = 0 || R2 < 1) && (R14663 = 0 || R2 < 1) && (R14665 = 0 || R2 < 1) && (R14667 = 0 || R2 < 1) && (R14669 = 0 || R2 < 1) && (R14671 = 0 || R2 < 1) && (R14673 = 0 || R2 < 1) && (R14675 = 0 || R2 < 1) && (R14677 = 0 || R2 < 1);
// End of Parikh automata intersection problem
