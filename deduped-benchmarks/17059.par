// Parikh automata intersection problem, generated by OSTRICH+
counter int
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R14899 += 1, R14900 += 1 };
  s0 -> s1 [0, 65535] { R14900 += 1, R22 += 1 };
  s1 -> s1 [0, 65535] { R14900 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R14902 += 1 };
  s0 -> s0 [0, 65535] { R14901 += 1, R14902 += 1 };
  s0 -> s2 [70, 70] { R14902 += 1 };
  s0 -> s3 [70, 70] { R14902 += 1 };
  s0 -> s1 [76, 65535] { R14902 += 1 };
  s1 -> s1 [0, 69] { R14902 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14902 += 1 };
  s1 -> s3 [70, 70] { R14902 += 1 };
  s1 -> s1 [76, 65535] { R14902 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R14902 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R14902 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R14904 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R14903 += 1, R14904 += 1 };
  s0 -> s2 [70, 70] { R14904 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R14904 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R14904 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R14904 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14904 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R14904 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R14904 += 1, R45 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R14904 += 1, R45 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R14906 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R14905 += 1, R14906 += 1 };
  s0 -> s2 [70, 70] { R14906 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R14906 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R14906 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R14906 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14906 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R14906 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R14906 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R14906 += 1, R47 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R14908 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R14907 += 1, R14908 += 1 };
  s0 -> s2 [70, 70] { R14908 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R14908 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R14908 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R14908 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14908 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R14908 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R14908 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R14908 += 1, R49 += 1, R50 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R14910 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R14909 += 1, R14910 += 1 };
  s0 -> s2 [70, 70] { R14910 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R14910 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R14910 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R14910 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14910 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R14910 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R14910 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535] { R14910 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R14912 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R14911 += 1, R14912 += 1 };
  s0 -> s2 [70, 70] { R14912 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R14912 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R14912 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R14912 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14912 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R14912 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R14912 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535] { R14912 += 1, R59 += 1, R60 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R14914 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R14913 += 1, R14914 += 1 };
  s0 -> s2 [70, 70] { R14914 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R14914 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R14914 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R14914 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14914 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R14914 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R14914 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R14914 += 1, R65 += 1, R66 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R14916 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R14915 += 1, R14916 += 1 };
  s0 -> s2 [70, 70] { R14916 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R14916 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R14916 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R14916 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14916 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R14916 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R14916 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R14916 += 1, R73 += 1, R74 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R14936 += 1 };
  s0 -> s0 [0, 65535] { R14935 += 1, R14936 += 1 };
  s0 -> s2 [70, 70] { R14936 += 1 };
  s0 -> s1 [71, 65535] { R14936 += 1 };
  s1 -> s1 [0, 69] { R14936 += 1 };
  s1 -> s2 [70, 70] { R14936 += 1 };
  s1 -> s1 [71, 65535] { R14936 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R14936 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R14938 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R14937 += 1, R14938 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R14938 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R14940 += 1 };
  s0 -> s2 [0, 65535] { R14940 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R14939 += 1, R14940 += 1 };
  s0 -> s3 [70, 70] { R14940 += 1 };
  s0 -> s1 [71, 65535] { R14940 += 1 };
  s1 -> s1 [0, 69] { R14940 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R14940 += 1 };
  s1 -> s1 [71, 65535] { R14940 += 1 };
  s2 -> s1 [0, 69] { R14940 += 1 };
  s2 -> s2 [0, 65535] { R14940 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R14940 += 1 };
  s2 -> s1 [71, 65535] { R14940 += 1 };
  s3 -> s3 [0, 65535] { R14940 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R14942 += 1, R14880 += 1 };
  s0 -> s2 [0, 65535] { R14942 += 1, R14879 += 1, R14880 += 1 };
  s0 -> s0 [0, 65535] { R14941 += 1, R14942 += 1 };
  s0 -> s1 [71, 65535] { R14942 += 1, R14880 += 1 };
  s1 -> s1 [0, 69] { R14942 += 1, R14880 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R14942 += 1 };
  s1 -> s1 [71, 65535] { R14942 += 1, R14880 += 1 };
  s2 -> s1 [0, 69] { R14942 += 1, R14880 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R14942 += 1, R14879 += 1, R14880 += 1 };
  s2 -> s1 [71, 65535] { R14942 += 1, R14880 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s0 [0, 65535] { R14943 += 1, R14944 += 1 };
  s0 -> s1 [0, 65535] { R14944 += 1, R14882 += 1, R20 += 1 };
  s0 -> s2 [0, 65535] { R14944 += 1, R14881 += 1, R14882 += 1 };
  s1 -> s4 [0, 65535] { R14944 += 1 };
  s1 -> s1 [0, 65535] { R14944 += 1, R14882 += 1, R20 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R14944 += 1, R14882 += 1, R20 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R14944 += 1, R14881 += 1, R14882 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R14944 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R14946 += 1, R14884 += 1 };
  s0 -> s0 [0, 65535] { R14945 += 1, R14946 += 1 };
  s0 -> s2 [0, 65535] { R14946 += 1, R14883 += 1, R14884 += 1 };
  s0 -> s1 [75, 65535] { R14946 += 1, R14884 += 1 };
  s1 -> s1 [0, 70] { R14946 += 1, R14884 += 1 };
  s1 -> s1 [0, 65535] { R14946 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R14946 += 1, R14884 += 1 };
  s2 -> s1 [0, 70] { R14946 += 1, R14884 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R14946 += 1, R14883 += 1, R14884 += 1 };
  s2 -> s1 [75, 65535] { R14946 += 1, R14884 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R14947 += 1, R14948 += 1 };
  s0 -> s1 [0, 65535] { R14948 += 1, R14885 += 1, R14886 += 1 };
  s0 -> s2 [0, 65535] { R14948 += 1, R14886 += 1, R84 += 1 };
  s1 -> s1 [0, 65535] { R14948 += 1, R14885 += 1, R14886 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R14948 += 1, R14886 += 1, R84 += 1 };
  s2 -> s3 [0, 65535] { R14948 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R14948 += 1, R14886 += 1, R84 += 1 };
  s3 -> s3 [0, 65535] { R14948 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R14950 += 1, R14888 += 1 };
  s0 -> s2 [0, 65535] { R14950 += 1, R14887 += 1, R14888 += 1 };
  s0 -> s3 [0, 65535] { R14950 += 1, R14888 += 1, R86 += 1 };
  s0 -> s0 [0, 65535] { R14949 += 1, R14950 += 1 };
  s0 -> s1 [76, 65535] { R14950 += 1, R14888 += 1 };
  s1 -> s1 [0, 74] { R14950 += 1, R14888 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R14950 += 1 };
  s1 -> s1 [76, 65535] { R14950 += 1, R14888 += 1 };
  s2 -> s1 [0, 74] { R14950 += 1, R14888 += 1 };
  s2 -> s2 [0, 65535] { R14950 += 1, R14887 += 1, R14888 += 1 };
  s2 -> s3 [0, 65535] { R14950 += 1, R14888 += 1, R86 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [76, 65535] { R14950 += 1, R14888 += 1 };
  s3 -> s1 [0, 74] { R14950 += 1, R14888 += 1 };
  s3 -> s4 [0, 65535] { R14950 += 1 };
  s3 -> s3 [0, 65535] { R14950 += 1, R14888 += 1, R86 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [76, 65535] { R14950 += 1, R14888 += 1 };
  s4 -> s4 [0, 65535] { R14950 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R14952 += 1, R14889 += 1, R14890 += 1 };
  s0 -> s0 [0, 65535] { R14951 += 1, R14952 += 1 };
  s0 -> s2 [0, 65535] { R14952 += 1, R14890 += 1 };
  s0 -> s3 [0, 65535] { R14952 += 1, R14890 += 1, R90 += 1 };
  s1 -> s1 [0, 65535] { R14952 += 1, R14889 += 1, R14890 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R14952 += 1, R14890 += 1 };
  s1 -> s3 [0, 65535] { R14952 += 1, R14890 += 1, R90 += 1 };
  s2 -> s4 [0, 65535] { R14952 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R14952 += 1, R14890 += 1 };
  s3 -> s4 [0, 65535] { R14952 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R14952 += 1, R14890 += 1 };
  s3 -> s3 [0, 65535] { R14952 += 1, R14890 += 1, R90 += 1 };
  s4 -> s4 [0, 65535] { R14952 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R14954 += 1, R14892 += 1 };
  s0 -> s2 [0, 65535] { R14954 += 1, R14891 += 1, R14892 += 1 };
  s0 -> s0 [0, 65535] { R14953 += 1, R14954 += 1 };
  s0 -> s3 [0, 65535] { R14954 += 1, R14892 += 1, R13517 += 1, R13518 += 1 };
  s1 -> s1 [0, 65535] { R14954 += 1, R14892 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R14954 += 1 };
  s2 -> s1 [0, 65535] { R14954 += 1, R14892 += 1 };
  s2 -> s2 [0, 65535] { R14954 += 1, R14891 += 1, R14892 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R14954 += 1, R14892 += 1, R13517 += 1, R13518 += 1 };
  s3 -> s1 [0, 65535] { R14954 += 1, R14892 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R14954 += 1, R14892 += 1, R13517 += 1, R13518 += 1 };
  s3 -> s5 [0, 65535] { R14954 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R14954 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R14956 += 1, R14894 += 1, R13523 += 1 };
  s0 -> s0 [0, 65535] { R14955 += 1, R14956 += 1 };
  s0 -> s2 [0, 65535] { R14956 += 1, R14893 += 1, R14894 += 1 };
  s0 -> s3 [0, 65535] { R14956 += 1, R14894 += 1, R13522 += 1, R13523 += 1 };
  s0 -> s4 [0, 65535] { R14956 += 1, R14894 += 1, R13523 += 1, R13524 += 1 };
  s0 -> s1 [76, 65535] { R14956 += 1, R14894 += 1, R13523 += 1 };
  s1 -> s1 [0, 74] { R14956 += 1, R14894 += 1, R13523 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R14956 += 1 };
  s1 -> s1 [0, 65535] { R14956 += 1, R14894 += 1 };
  s1 -> s1 [76, 65535] { R14956 += 1, R14894 += 1, R13523 += 1 };
  s2 -> s1 [0, 74] { R14956 += 1, R14894 += 1, R13523 += 1 };
  s2 -> s2 [0, 65535] { R14956 += 1, R14893 += 1, R14894 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R14956 += 1, R14894 += 1, R13522 += 1, R13523 += 1 };
  s2 -> s4 [0, 65535] { R14956 += 1, R14894 += 1, R13523 += 1, R13524 += 1 };
  s2 -> s1 [76, 65535] { R14956 += 1, R14894 += 1, R13523 += 1 };
  s3 -> s1 [0, 74] { R14956 += 1, R14894 += 1, R13523 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R14956 += 1 };
  s3 -> s3 [0, 65535] { R14956 += 1, R14894 += 1, R13522 += 1, R13523 += 1 };
  s3 -> s4 [0, 65535] { R14956 += 1, R14894 += 1, R13523 += 1, R13524 += 1 };
  s3 -> s1 [76, 65535] { R14956 += 1, R14894 += 1, R13523 += 1 };
  s4 -> s1 [0, 74] { R14956 += 1, R14894 += 1, R13523 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R14956 += 1 };
  s4 -> s7 [0, 65535] { R14956 += 1, R14894 += 1 };
  s4 -> s4 [0, 65535] { R14956 += 1, R14894 += 1, R13523 += 1, R13524 += 1 };
  s4 -> s1 [76, 65535] { R14956 += 1, R14894 += 1, R13523 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R14956 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R14956 += 1 };
  s7 -> s7 [0, 65535] { R14956 += 1, R14894 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R14958 += 1, R14895 += 1, R14896 += 1 };
  s0 -> s2 [0, 65535] { R14958 += 1, R14896 += 1 };
  s0 -> s0 [0, 65535] { R14957 += 1, R14958 += 1 };
  s1 -> s1 [0, 65535] { R14958 += 1, R14895 += 1, R14896 += 1 };
  s1 -> s2 [0, 65535] { R14958 += 1, R14896 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R14958 += 1 };
  s2 -> s2 [0, 65535] { R14958 += 1, R14896 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R14958 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R14960 += 1, R14898 += 1, R14875 += 1, R14877 += 1, R14878 += 1 };
  s0 -> s2 [0, 65535] { R14960 += 1, R14897 += 1, R14898 += 1 };
  s0 -> s3 [0, 65535] { R14960 += 1, R14898 += 1, R14875 += 1, R14876 += 1, R14877 += 1 };
  s0 -> s0 [0, 65535] { R14959 += 1, R14960 += 1 };
  s0 -> s4 [0, 65535] { R14960 += 1, R14898 += 1, R14874 += 1, R14875 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R14960 += 1, R14898 += 1, R14875 += 1, R14877 += 1, R14878 += 1 };
  s1 -> s7 [0, 65535] { R14960 += 1, R14898 += 1 };
  s1 -> s8 [0, 65535] { R14960 += 1, R14898 += 1, R14875 += 1 };
  s1 -> s6 [0, 65535] { R14960 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R14960 += 1, R14898 += 1, R14875 += 1, R14877 += 1, R14878 += 1 };
  s2 -> s2 [0, 65535] { R14960 += 1, R14897 += 1, R14898 += 1 };
  s2 -> s3 [0, 65535] { R14960 += 1, R14898 += 1, R14875 += 1, R14876 += 1, R14877 += 1 };
  s2 -> s4 [0, 65535] { R14960 += 1, R14898 += 1, R14874 += 1, R14875 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R14960 += 1, R14898 += 1, R14875 += 1, R14877 += 1, R14878 += 1 };
  s3 -> s7 [0, 65535] { R14960 += 1, R14898 += 1 };
  s3 -> s3 [0, 65535] { R14960 += 1, R14898 += 1, R14875 += 1, R14876 += 1, R14877 += 1 };
  s3 -> s6 [0, 65535] { R14960 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R14960 += 1, R14898 += 1, R14875 += 1, R14877 += 1, R14878 += 1 };
  s4 -> s3 [0, 65535] { R14960 += 1, R14898 += 1, R14875 += 1, R14876 += 1, R14877 += 1 };
  s4 -> s4 [0, 65535] { R14960 += 1, R14898 += 1, R14874 += 1, R14875 += 1 };
  s4 -> s6 [0, 65535] { R14960 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R14960 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R14960 += 1, R14898 += 1 };
  s7 -> s6 [0, 65535] { R14960 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s7 [0, 65535] { R14960 += 1, R14898 += 1 };
  s8 -> s8 [0, 65535] { R14960 += 1, R14898 += 1, R14875 += 1 };
  s8 -> s6 [0, 65535] { R14960 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R14961 += 1, R14962 += 1 };
  s0 -> s1 [0, 65535] { R14962 += 1, R14917 += 1, R14918 += 1 };
  s0 -> s2 [0, 65535] { R14962 += 1, R14918 += 1, R21 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R14962 += 1, R14917 += 1, R14918 += 1 };
  s1 -> s2 [0, 65535] { R14962 += 1, R14918 += 1, R21 += 1 };
  s2 -> s3 [0, 65535] { R14962 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R14962 += 1, R14918 += 1, R21 += 1 };
  s3 -> s3 [0, 65535] { R14962 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R14964 += 1, R14920 += 1 };
  s0 -> s2 [0, 65535] { R14964 += 1, R14919 += 1, R14920 += 1 };
  s0 -> s0 [0, 65535] { R14963 += 1, R14964 += 1 };
  s0 -> s3 [70, 70] { R14964 += 1, R14920 += 1 };
  s0 -> s4 [70, 70] { R14964 += 1, R14920 += 1 };
  s0 -> s5 [75, 75] { R14964 += 1, R14920 += 1 };
  s0 -> s1 [76, 65535] { R14964 += 1, R14920 += 1 };
  s1 -> s1 [0, 69] { R14964 += 1, R14920 += 1 };
  s1 -> s3 [70, 70] { R14964 += 1, R14920 += 1 };
  s1 -> s4 [70, 70] { R14964 += 1, R14920 += 1 };
  s1 -> s5 [75, 75] { R14964 += 1, R14920 += 1 };
  s1 -> s1 [76, 65535] { R14964 += 1, R14920 += 1 };
  s2 -> s1 [0, 69] { R14964 += 1, R14920 += 1 };
  s2 -> s2 [0, 65535] { R14964 += 1, R14919 += 1, R14920 += 1 };
  s2 -> s3 [70, 70] { R14964 += 1, R14920 += 1 };
  s2 -> s4 [70, 70] { R14964 += 1, R14920 += 1 };
  s2 -> s5 [75, 75] { R14964 += 1, R14920 += 1 };
  s2 -> s1 [76, 65535] { R14964 += 1, R14920 += 1 };
  s3 -> s3 [0, 70] { R14964 += 1, R14920 += 1 };
  s3 -> s8 [75, 75] { R14964 += 1, R14920 += 1 };
  s3 -> s3 [76, 65535] { R14964 += 1, R14920 += 1 };
  s5 -> s5 [0, 69] { R14964 += 1, R14920 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R14964 += 1 };
  s5 -> s7 [70, 70] { R14964 += 1, R14920 += 1 };
  s5 -> s8 [70, 70] { R14964 += 1, R14920 += 1 };
  s5 -> s5 [75, 65535] { R14964 += 1, R14920 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R14964 += 1 };
  s8 -> s8 [0, 70] { R14964 += 1, R14920 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R14964 += 1 };
  s8 -> s8 [75, 65535] { R14964 += 1, R14920 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R14966 += 1, R14922 += 1, R83 += 1 };
  s0 -> s0 [0, 65535] { R14965 += 1, R14966 += 1 };
  s0 -> s2 [0, 65535] { R14966 += 1, R14921 += 1, R14922 += 1 };
  s0 -> s3 [70, 70] { R14966 += 1, R14922 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R14966 += 1, R14922 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R14966 += 1, R14922 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R14966 += 1, R14922 += 1, R83 += 1 };
  s1 -> s1 [0, 65535] { R14966 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R14966 += 1, R14922 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R14966 += 1, R14922 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R14966 += 1, R14922 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R14966 += 1, R14922 += 1, R83 += 1 };
  s2 -> s2 [0, 65535] { R14966 += 1, R14921 += 1, R14922 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R14966 += 1, R14922 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R14966 += 1, R14922 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R14966 += 1, R14922 += 1, R83 += 1 };
  s3 -> s3 [0, 65535] { R14966 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R14966 += 1, R14922 += 1, R83 += 1 };
  s4 -> s5 [0, 65535] { R14966 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R14966 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R14968 += 1, R14924 += 1, R85 += 1 };
  s0 -> s0 [0, 65535] { R14967 += 1, R14968 += 1 };
  s0 -> s2 [0, 65535] { R14968 += 1, R14923 += 1, R14924 += 1 };
  s0 -> s3 [70, 70] { R14968 += 1, R14924 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R14968 += 1, R14924 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R14968 += 1, R14924 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R14968 += 1, R14924 += 1, R85 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R14968 += 1 };
  s1 -> s3 [70, 70] { R14968 += 1, R14924 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R14968 += 1, R14924 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R14968 += 1, R14924 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R14968 += 1, R14924 += 1, R85 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R14968 += 1, R14923 += 1, R14924 += 1 };
  s2 -> s3 [70, 70] { R14968 += 1, R14924 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R14968 += 1, R14924 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R14968 += 1, R14924 += 1, R85 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R14968 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R14968 += 1 };
  s4 -> s4 [0, 65535] { R14968 += 1, R14924 += 1, R85 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R14968 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R14970 += 1, R14926 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R14970 += 1, R14926 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R14969 += 1, R14970 += 1 };
  s0 -> s3 [0, 65535] { R14970 += 1, R14925 += 1, R14926 += 1 };
  s0 -> s4 [70, 70] { R14970 += 1, R14926 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R14970 += 1, R14926 += 1, R87 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R14970 += 1, R14926 += 1, R87 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R14970 += 1, R14926 += 1, R88 += 1 };
  s0 -> s1 [71, 74] { R14970 += 1, R14926 += 1, R88 += 1 };
  s0 -> s2 [71, 65535] { R14970 += 1, R14926 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R14970 += 1, R14926 += 1, R88 += 1 };
  s0 -> s1 [76, 65535] { R14970 += 1, R14926 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R14970 += 1, R14926 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R14970 += 1, R14926 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R14970 += 1, R14926 += 1, R88 += 1 };
  s1 -> s1 [71, 74] { R14970 += 1, R14926 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R14970 += 1, R14926 += 1, R88 += 1 };
  s1 -> s1 [76, 65535] { R14970 += 1, R14926 += 1, R88 += 1 };
  s2 -> s1 [0, 69] { R14970 += 1, R14926 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R14970 += 1, R14926 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R14970 += 1, R14926 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R14970 += 1, R14926 += 1, R87 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R14970 += 1, R14926 += 1, R87 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R14970 += 1, R14926 += 1, R88 += 1 };
  s2 -> s1 [71, 74] { R14970 += 1, R14926 += 1, R88 += 1 };
  s2 -> s2 [71, 65535] { R14970 += 1, R14926 += 1, R87 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R14970 += 1, R14926 += 1, R88 += 1 };
  s2 -> s1 [76, 65535] { R14970 += 1, R14926 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R14970 += 1, R14926 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R14970 += 1, R14926 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R14970 += 1, R14925 += 1, R14926 += 1 };
  s3 -> s4 [70, 70] { R14970 += 1, R14926 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R14970 += 1, R14926 += 1, R87 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R14970 += 1, R14926 += 1, R87 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R14970 += 1, R14926 += 1, R88 += 1 };
  s3 -> s1 [71, 74] { R14970 += 1, R14926 += 1, R88 += 1 };
  s3 -> s2 [71, 65535] { R14970 += 1, R14926 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R14970 += 1, R14926 += 1, R88 += 1 };
  s3 -> s1 [76, 65535] { R14970 += 1, R14926 += 1, R88 += 1 };
  s5 -> s7 [0, 74] { R14970 += 1, R14926 += 1, R88 += 1 };
  s5 -> s5 [0, 65535] { R14970 += 1, R14926 += 1, R87 += 1, R88 += 1 };
  s5 -> s11 [75, 75] { R14970 += 1, R14926 += 1, R88 += 1 };
  s5 -> s7 [76, 65535] { R14970 += 1, R14926 += 1, R88 += 1 };
  s7 -> s7 [0, 74] { R14970 += 1, R14926 += 1, R88 += 1 };
  s7 -> s11 [75, 75] { R14970 += 1, R14926 += 1, R88 += 1 };
  s7 -> s7 [76, 65535] { R14970 += 1, R14926 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R14970 += 1, R14926 += 1, R88 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R14970 += 1 };
  s8 -> s10 [70, 70] { R14970 += 1, R14926 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R14970 += 1, R14926 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R14970 += 1, R14926 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R14970 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R14970 += 1 };
  s11 -> s11 [0, 65535] { R14970 += 1, R14926 += 1, R88 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R14970 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R14972 += 1, R14928 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s2 [0, 69] { R14972 += 1, R14928 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s0 [0, 65535] { R14971 += 1, R14972 += 1 };
  s0 -> s3 [0, 65535] { R14972 += 1, R14927 += 1, R14928 += 1 };
  s0 -> s4 [70, 70] { R14972 += 1, R14928 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s5 [70, 70] { R14972 += 1, R14928 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s6 [70, 70] { R14972 += 1, R14928 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s7 [70, 70] { R14972 += 1, R14928 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s1 [71, 65535] { R14972 += 1, R14928 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s2 [71, 65535] { R14972 += 1, R14928 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s1 [0, 69] { R14972 += 1, R14928 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s2 [0, 69] { R14972 += 1, R14928 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s4 [70, 70] { R14972 += 1, R14928 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s5 [70, 70] { R14972 += 1, R14928 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s6 [70, 70] { R14972 += 1, R14928 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s7 [70, 70] { R14972 += 1, R14928 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s1 [71, 65535] { R14972 += 1, R14928 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s2 [71, 65535] { R14972 += 1, R14928 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [0, 69] { R14972 += 1, R14928 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [0, 65535] { R14972 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [70, 70] { R14972 += 1, R14928 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s6 [70, 70] { R14972 += 1, R14928 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [71, 65535] { R14972 += 1, R14928 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s1 [0, 69] { R14972 += 1, R14928 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s2 [0, 69] { R14972 += 1, R14928 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s3 [0, 65535] { R14972 += 1, R14927 += 1, R14928 += 1 };
  s3 -> s4 [70, 70] { R14972 += 1, R14928 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s5 [70, 70] { R14972 += 1, R14928 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s6 [70, 70] { R14972 += 1, R14928 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s7 [70, 70] { R14972 += 1, R14928 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s1 [71, 65535] { R14972 += 1, R14928 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s2 [71, 65535] { R14972 += 1, R14928 += 1, R13514 += 1, R13515 += 1 };
  s4 -> s4 [0, 65535] { R14972 += 1, R14928 += 1, R13514 += 1, R13515 += 1 };
  s4 -> s9 [0, 65535] { R14972 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s4 [0, 65535] { R14972 += 1, R14928 += 1, R13514 += 1, R13515 += 1 };
  s5 -> s5 [0, 65535] { R14972 += 1, R14928 += 1, R13513 += 1, R13514 += 1 };
  s6 -> s6 [0, 65535] { R14972 += 1 };
  s6 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R14972 += 1 };
  s9 -> s8 [0, 65535];
  accepting s4, s8, s2, s9, s6;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R14974 += 1, R14930 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s2 [0, 65535] { R14974 += 1, R14929 += 1, R14930 += 1 };
  s0 -> s0 [0, 65535] { R14973 += 1, R14974 += 1 };
  s0 -> s3 [70, 70] { R14974 += 1, R14930 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s4 [70, 70] { R14974 += 1, R14930 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s1 [71, 65535] { R14974 += 1, R14930 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [0, 69] { R14974 += 1, R14930 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [0, 65535] { R14974 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R14974 += 1, R14930 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s4 [70, 70] { R14974 += 1, R14930 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [71, 65535] { R14974 += 1, R14930 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s1 [0, 69] { R14974 += 1, R14930 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s2 [0, 65535] { R14974 += 1, R14929 += 1, R14930 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R14974 += 1, R14930 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s4 [70, 70] { R14974 += 1, R14930 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s1 [71, 65535] { R14974 += 1, R14930 += 1, R13519 += 1, R13520 += 1 };
  s3 -> s3 [0, 65535] { R14974 += 1, R14930 += 1, R13519 += 1, R13520 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R14974 += 1 };
  s4 -> s4 [0, 65535] { R14974 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R14974 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s0 -> s2 [0, 69] { R14976 += 1, R14932 += 1, R14641 += 1, R14642 += 1 };
  s0 -> s3 [0, 69] { R14976 += 1, R14932 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s0 -> s0 [0, 65535] { R14975 += 1, R14976 += 1 };
  s0 -> s4 [0, 65535] { R14976 += 1, R14931 += 1, R14932 += 1 };
  s0 -> s5 [70, 70] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s0 -> s6 [70, 70] { R14976 += 1, R14932 += 1, R14641 += 1, R14642 += 1 };
  s0 -> s7 [70, 70] { R14976 += 1, R14932 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s0 -> s8 [70, 70] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s0 -> s9 [70, 70] { R14976 += 1, R14932 += 1, R14641 += 1, R14642 += 1 };
  s0 -> s10 [70, 70] { R14976 += 1, R14932 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s0 -> s1 [71, 74] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s0 -> s2 [71, 65535] { R14976 += 1, R14932 += 1, R14641 += 1, R14642 += 1 };
  s0 -> s3 [71, 65535] { R14976 += 1, R14932 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s0 -> s11 [75, 75] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s0 -> s1 [76, 65535] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s1 -> s1 [0, 69] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s1 -> s5 [70, 70] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s1 -> s8 [70, 70] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s1 -> s1 [71, 74] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s1 -> s11 [75, 75] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s1 -> s1 [76, 65535] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s2 -> s1 [0, 69] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s2 -> s2 [0, 69] { R14976 += 1, R14932 += 1, R14641 += 1, R14642 += 1 };
  s2 -> s3 [0, 69] { R14976 += 1, R14932 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s2 -> s5 [70, 70] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s2 -> s6 [70, 70] { R14976 += 1, R14932 += 1, R14641 += 1, R14642 += 1 };
  s2 -> s7 [70, 70] { R14976 += 1, R14932 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s2 -> s8 [70, 70] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s2 -> s9 [70, 70] { R14976 += 1, R14932 += 1, R14641 += 1, R14642 += 1 };
  s2 -> s10 [70, 70] { R14976 += 1, R14932 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s2 -> s1 [71, 74] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s2 -> s2 [71, 65535] { R14976 += 1, R14932 += 1, R14641 += 1, R14642 += 1 };
  s2 -> s3 [71, 65535] { R14976 += 1, R14932 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s2 -> s11 [75, 75] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s2 -> s1 [76, 65535] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s3 -> s1 [0, 69] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s3 -> s3 [0, 69] { R14976 += 1, R14932 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s3 -> s5 [70, 70] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s3 -> s7 [70, 70] { R14976 += 1, R14932 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s3 -> s8 [70, 70] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s3 -> s10 [70, 70] { R14976 += 1, R14932 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s3 -> s1 [71, 74] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s3 -> s3 [71, 65535] { R14976 += 1, R14932 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s3 -> s11 [75, 75] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s3 -> s1 [76, 65535] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s4 -> s1 [0, 69] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s4 -> s2 [0, 69] { R14976 += 1, R14932 += 1, R14641 += 1, R14642 += 1 };
  s4 -> s3 [0, 69] { R14976 += 1, R14932 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s4 -> s4 [0, 65535] { R14976 += 1, R14931 += 1, R14932 += 1 };
  s4 -> s5 [70, 70] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s4 -> s6 [70, 70] { R14976 += 1, R14932 += 1, R14641 += 1, R14642 += 1 };
  s4 -> s7 [70, 70] { R14976 += 1, R14932 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s4 -> s8 [70, 70] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s4 -> s9 [70, 70] { R14976 += 1, R14932 += 1, R14641 += 1, R14642 += 1 };
  s4 -> s10 [70, 70] { R14976 += 1, R14932 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s4 -> s1 [71, 74] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s4 -> s2 [71, 65535] { R14976 += 1, R14932 += 1, R14641 += 1, R14642 += 1 };
  s4 -> s3 [71, 65535] { R14976 += 1, R14932 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s4 -> s11 [75, 75] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s4 -> s1 [76, 65535] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s5 -> s5 [0, 74] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s5 -> s17 [75, 75] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s5 -> s5 [76, 65535] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s6 -> s5 [0, 74] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s6 -> s6 [0, 65535] { R14976 += 1, R14932 += 1, R14641 += 1, R14642 += 1 };
  s6 -> s7 [0, 65535] { R14976 += 1, R14932 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s6 -> s17 [75, 75] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s6 -> s5 [76, 65535] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s7 -> s5 [0, 74] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s7 -> s7 [0, 65535] { R14976 += 1, R14932 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s7 -> s17 [75, 75] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s7 -> s5 [76, 65535] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s11 -> s12 [0, 69] { R14976 += 1, R14932 += 1, R14642 += 1 };
  s11 -> s13 [0, 69] { R14976 += 1, R14932 += 1 };
  s11 -> s11 [0, 69] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s11 -> s14 [70, 70] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s11 -> s15 [70, 70] { R14976 += 1, R14932 += 1 };
  s11 -> s16 [70, 70] { R14976 += 1, R14932 += 1, R14642 += 1 };
  s11 -> s17 [70, 70] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s11 -> s18 [70, 70] { R14976 += 1, R14932 += 1 };
  s11 -> s19 [70, 70] { R14976 += 1, R14932 += 1, R14642 += 1 };
  s11 -> s12 [71, 65535] { R14976 += 1, R14932 += 1, R14642 += 1 };
  s11 -> s13 [71, 65535] { R14976 += 1, R14932 += 1 };
  s11 -> s11 [71, 65535] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s12 -> s12 [0, 69] { R14976 += 1, R14932 += 1, R14642 += 1 };
  s12 -> s13 [0, 69] { R14976 += 1, R14932 += 1 };
  s12 -> s15 [70, 70] { R14976 += 1, R14932 += 1 };
  s12 -> s16 [70, 70] { R14976 += 1, R14932 += 1, R14642 += 1 };
  s12 -> s18 [70, 70] { R14976 += 1, R14932 += 1 };
  s12 -> s19 [70, 70] { R14976 += 1, R14932 += 1, R14642 += 1 };
  s12 -> s12 [71, 65535] { R14976 += 1, R14932 += 1, R14642 += 1 };
  s12 -> s13 [71, 65535] { R14976 += 1, R14932 += 1 };
  s13 -> s13 [0, 69] { R14976 += 1, R14932 += 1 };
  s13 -> s13 [0, 65535] { R14976 += 1 };
  s13 -> s21 [0, 65535];
  s13 -> s15 [70, 70] { R14976 += 1, R14932 += 1 };
  s13 -> s18 [70, 70] { R14976 += 1, R14932 += 1 };
  s13 -> s13 [71, 65535] { R14976 += 1, R14932 += 1 };
  s15 -> s15 [0, 65535] { R14976 += 1 };
  s15 -> s21 [0, 65535];
  s17 -> s17 [0, 65535] { R14976 += 1, R14932 += 1, R14642 += 1, R14644 += 1 };
  s17 -> s18 [0, 65535] { R14976 += 1, R14932 += 1 };
  s17 -> s19 [0, 65535] { R14976 += 1, R14932 += 1, R14642 += 1 };
  s18 -> s20 [0, 65535] { R14976 += 1 };
  s18 -> s18 [0, 65535] { R14976 += 1, R14932 += 1 };
  s18 -> s21 [0, 65535];
  s19 -> s18 [0, 65535] { R14976 += 1, R14932 += 1 };
  s19 -> s19 [0, 65535] { R14976 += 1, R14932 += 1, R14642 += 1 };
  s20 -> s20 [0, 65535] { R14976 += 1 };
  s20 -> s21 [0, 65535];
  s21 -> s21 [0, 65535];
  accepting s13, s21, s20, s18, s15;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R14978 += 1, R14934 += 1, R14869 += 1, R14870 += 1 };
  s0 -> s0 [0, 65535] { R14977 += 1, R14978 += 1 };
  s0 -> s2 [0, 65535] { R14978 += 1, R14933 += 1, R14934 += 1 };
  s0 -> s3 [70, 70] { R14978 += 1, R14934 += 1, R14869 += 1, R14870 += 1 };
  s0 -> s4 [70, 70] { R14978 += 1, R14934 += 1, R14869 += 1, R14870 += 1 };
  s0 -> s1 [71, 65535] { R14978 += 1, R14934 += 1, R14869 += 1, R14870 += 1 };
  s1 -> s1 [0, 69] { R14978 += 1, R14934 += 1, R14869 += 1, R14870 += 1 };
  s1 -> s1 [0, 65535] { R14978 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R14978 += 1, R14934 += 1, R14869 += 1, R14870 += 1 };
  s1 -> s4 [70, 70] { R14978 += 1, R14934 += 1, R14869 += 1, R14870 += 1 };
  s1 -> s1 [71, 65535] { R14978 += 1, R14934 += 1, R14869 += 1, R14870 += 1 };
  s2 -> s1 [0, 69] { R14978 += 1, R14934 += 1, R14869 += 1, R14870 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R14978 += 1, R14933 += 1, R14934 += 1 };
  s2 -> s3 [70, 70] { R14978 += 1, R14934 += 1, R14869 += 1, R14870 += 1 };
  s2 -> s4 [70, 70] { R14978 += 1, R14934 += 1, R14869 += 1, R14870 += 1 };
  s2 -> s1 [71, 65535] { R14978 += 1, R14934 += 1, R14869 += 1, R14870 += 1 };
  s3 -> s3 [0, 65535] { R14978 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R14978 += 1 };
  s4 -> s4 [0, 65535] { R14978 += 1, R14934 += 1, R14869 += 1, R14870 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R14978 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R14978 && R23 - R14978 = -1 && R24 = R14978 && R25 - R14978 = -1 && R26 = R14978 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R14646 + -1*R14642 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R14646 + -1*R14642 - R66 = 0 && R55 + R13518 + R13515 + -1*R14648 + -1*R14644 - R68 = 0 && R65 + R14645 + R14641 = 0 && R67 + R14647 + R14643 = 0 && R14919 = 0 && R14920 = 0 && R14925 = 0 && R14926 = 0 && R14927 = 0 && R14928 = 0 && R14931 = 0 && R14932 = 0 && R14935 = 0 && R14936 = R14978 && R14937 = 0 && R14938 = R14978 && R14939 = 0 && R14940 = R14978 && R14941 = 0 && R14942 = R14978 && R14943 = 0 && R14944 = R14978 && R14945 = 0 && R14946 = R14978 && R14947 = 0 && R14948 = R14978 && R14949 = 0 && R14950 = R14978 && R14951 = 0 && R14952 = R14978 && R14953 = 0 && R14954 = R14978 && R14955 = 0 && R14956 = R14978 && R14957 = 0 && R14958 = R14978 && R14959 = 0 && R14960 = R14978 && R14961 = 0 && R14962 = R14978 && R14963 = 0 && R14964 = R14978 && R14965 = 0 && R14966 = R14978 && R14967 = 0 && R14968 = R14978 && R14969 = 0 && R14970 = R14978 && R14971 = 0 && R14972 = R14978 && R14973 = 0 && R14974 = R14978 && R14975 = 0 && R14976 = R14978 && R14977 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R13524 + R13521 < 1 && -1*R14646 + -1*R14642 - R66 < 1 && -1*R14648 + -1*R14644 - R68 < 1 && 0 < R14978 && (R2 != 0 || R20 = 0 || (R14879 = 0 && R14880 = 0)) && (R2 != 0 || R20 = 0 || (R14881 = 0 && R14882 = 0)) && (R2 != 0 || R20 = 0 || (R14883 = 0 && R14884 = 0)) && (R2 != 0 || R20 = 0 || (R14885 = 0 && R14886 = 0)) && (R2 != 0 || R20 = 0 || (R14887 = 0 && R14888 = 0)) && (R2 != 0 || R20 = 0 || (R14889 = 0 && R14890 = 0)) && (R2 != 0 || R20 = 0 || (R14891 = 0 && R14892 = 0)) && (R2 != 0 || R20 = 0 || (R14893 = 0 && R14894 = 0)) && (R2 != 0 || R20 = 0 || (R14895 = 0 && R14896 = 0)) && (R2 != 0 || R20 = 0 || (R14897 = 0 && R14898 = 0)) && (R53 + R13516 + R13513 != 0 || R54 + R13517 + R13514 + -1*R14646 + -1*R14642 - R66 = 0 || R66 + R14646 + R14642 < 1) && (R59 + R13522 + R13519 != 0 || R60 + R13523 + R13520 + -1*R14646 + -1*R14642 - R66 = 0 || R66 + R14646 + R14642 < 1) && (R66 + R14646 + R14642 != 0 || ((R53 + R13516 + R13513 != 0 || R54 + R13517 + R13514 = 0 || R68 + R14648 + R14644 < 1) && (R53 + R13516 + R13513 = 0 || R68 + R14648 + R14644 < 1))) && (R66 + R14646 + R14642 != 0 || ((R59 + R13522 + R13519 != 0 || R60 + R13523 + R13520 = 0 || R68 + R14648 + R14644 < 1) && (R59 + R13522 + R13519 = 0 || R68 + R14648 + R14644 < 1))) && (R66 + R14646 + R14642 != 0 || ((R73 + R14874 + R14869 != 0 || R74 + R14875 + R14870 = 0 || R68 + R14648 + R14644 < 1) && (R73 + R14874 + R14869 = 0 || R68 + R14648 + R14644 < 1))) && (R68 + R14648 + R14644 != 0 || R77 + R14878 + R14873 = 0 || (R75 + R14876 + R14871 = 0 && R76 + R14877 + R14872 = 0)) && (R73 + R14874 + R14869 != 0 || R66 + R14646 + R14642 + -1*R14875 + -1*R14870 - R74 = 0 || R66 + R14646 + R14642 < 1) && (R75 + R14876 + R14871 != 0 || R68 + R14648 + R14644 + -1*R14877 + -1*R14872 - R76 = 0 || R68 + R14648 + R14644 < 1) && (R14879 != 0 || R2 = R14880 || R2 < 1) && (R14881 != 0 || R2 = R14882 || R2 < 1) && (R14883 != 0 || R2 = R14884 || R2 < 1) && (R14885 != 0 || R2 = R14886 || R2 < 1) && (R14887 != 0 || R2 = R14888 || R2 < 1) && (R14889 != 0 || R2 = R14890 || R2 < 1) && (R14891 != 0 || R2 = R14892 || R2 < 1) && (R14893 != 0 || R2 = R14894 || R2 < 1) && (R14895 != 0 || R2 = R14896 || R2 < 1) && (R14897 != 0 || R2 = R14898 || R2 < 1) && (R21 = 0 || (R14917 = 0 && R14918 = 0)) && (R21 = 0 || (R14921 = 0 && R14922 = 0)) && (R21 = 0 || (R14923 = 0 && R14924 = 0)) && (R21 = 0 || (R14929 = 0 && R14930 = 0)) && (R21 = 0 || (R14933 = 0 && R14934 = 0)) && (R22 = 0 || (R14899 = 0 && R14900 = 0)) && (R22 = 0 || (R14901 = 0 && R14902 = 0)) && (R22 = 0 || (R14903 = 0 && R14904 = 0)) && (R22 = 0 || (R14905 = 0 && R14906 = 0)) && (R22 = 0 || (R14907 = 0 && R14908 = 0)) && (R22 = 0 || (R14909 = 0 && R14910 = 0)) && (R22 = 0 || (R14911 = 0 && R14912 = 0)) && (R22 = 0 || (R14913 = 0 && R14914 = 0)) && (R22 = 0 || (R14915 = 0 && R14916 = 0)) && (R53 + R13516 + R13513 = 0 || R66 + R14646 + R14642 < 1) && (R59 + R13522 + R13519 = 0 || R66 + R14646 + R14642 < 1) && (R73 + R14874 + R14869 = 0 || R66 + R14646 + R14642 < 1) && (R75 + R14876 + R14871 = 0 || R68 + R14648 + R14644 < 1) && (R14879 = 0 || R2 < 1) && (R14881 = 0 || R2 < 1) && (R14883 = 0 || R2 < 1) && (R14885 = 0 || R2 < 1) && (R14887 = 0 || R2 < 1) && (R14889 = 0 || R2 < 1) && (R14891 = 0 || R2 < 1) && (R14893 = 0 || R2 < 1) && (R14895 = 0 || R2 < 1) && (R14897 = 0 || R2 < 1);
// End of Parikh automata intersection problem
