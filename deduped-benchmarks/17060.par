// Parikh automata intersection problem, generated by OSTRICH+
counter int R12, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R4, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R6805, R6806, R6807, R6808, R6809, R6810, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96, R9601, R9602, R9603, R9604, R9605, R9606, R9607, R9608, R9829, R9830, R9831, R9832, R9833, R9834, R9835, R9836, R9837, R9838, R9839, R9840, R9841, R9842, R9843, R9844, R9845, R9846, R9847, R9848, R9849, R9850, R9851, R9852, R9853, R9854, R9855, R9856, R9857, R9858, R9859, R9860, R9861, R9862, R9863, R9864, R9865, R9866, R9867, R9868, R9869, R9870, R9871, R9872, R9873, R9874, R9875, R9876, R9877, R9878, R9879, R9880, R9881, R9882, R9883, R9884, R9885, R9886, R9887, R9888, R9889, R9890, R9891, R9892, R9893, R9894, R9895, R9896, R9897, R9898, R9899, R9900, R9901, R9902, R9903, R9904, R9905, R9906, R9907, R9908, R9909, R9910, R9911, R9912, R9913, R9914, R9915, R9916, R9917, R9918, R9919, R9920, R9921, R9922, R9923, R9924, R9925, R9926, R9927, R9928, R9929, R9930, R9931, R9932, R9933, R9934, R9935, R9936, R9937, R9938;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R9860 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R9859 += 1, R9860 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R9860 += 1, R22 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R9862 += 1 };
  s0 -> s0 [0, 65535] { R9861 += 1, R9862 += 1 };
  s0 -> s2 [70, 70] { R9862 += 1 };
  s0 -> s3 [70, 70] { R9862 += 1 };
  s0 -> s1 [76, 65535] { R9862 += 1 };
  s1 -> s1 [0, 69] { R9862 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9862 += 1 };
  s1 -> s3 [70, 70] { R9862 += 1 };
  s1 -> s1 [76, 65535] { R9862 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R9862 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R9862 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R9864 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R9863 += 1, R9864 += 1 };
  s0 -> s2 [70, 70] { R9864 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R9864 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R9864 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R9864 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9864 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R9864 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R9864 += 1, R45 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R9864 += 1, R45 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R9866 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R9865 += 1, R9866 += 1 };
  s0 -> s2 [70, 70] { R9866 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R9866 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R9866 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R9866 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9866 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R9866 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R9866 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R9866 += 1, R47 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R9868 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R9867 += 1, R9868 += 1 };
  s0 -> s2 [70, 70] { R9868 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R9868 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R9868 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R9868 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9868 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R9868 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R9868 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R9868 += 1, R49 += 1, R50 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R9870 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R9869 += 1, R9870 += 1 };
  s0 -> s2 [70, 70] { R9870 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R9870 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R9870 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R9870 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9870 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R9870 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R9870 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535] { R9870 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R9872 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R9871 += 1, R9872 += 1 };
  s0 -> s2 [70, 70] { R9872 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R9872 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R9872 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R9872 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9872 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R9872 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R9872 += 1, R59 += 1, R60 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R9872 += 1, R59 += 1, R60 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R9874 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R9873 += 1, R9874 += 1 };
  s0 -> s2 [70, 70] { R9874 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R9874 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R9874 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R9874 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9874 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R9874 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R9874 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535] { R9874 += 1, R65 += 1, R66 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R9876 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R9875 += 1, R9876 += 1 };
  s0 -> s2 [70, 70] { R9876 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R9876 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R9876 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R9876 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9876 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R9876 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R9876 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R9876 += 1, R73 += 1, R74 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R9896 += 1 };
  s0 -> s0 [0, 65535] { R9895 += 1, R9896 += 1 };
  s0 -> s2 [70, 70] { R9896 += 1 };
  s0 -> s1 [71, 65535] { R9896 += 1 };
  s1 -> s1 [0, 69] { R9896 += 1 };
  s1 -> s2 [70, 70] { R9896 += 1 };
  s1 -> s1 [71, 65535] { R9896 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R9896 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R9898 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R9897 += 1, R9898 += 1 };
  s1 -> s1 [0, 65535] { R9898 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R9900 += 1 };
  s0 -> s0 [0, 65535] { R9899 += 1, R9900 += 1 };
  s0 -> s2 [0, 65535] { R9900 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R9900 += 1 };
  s0 -> s1 [71, 65535] { R9900 += 1 };
  s1 -> s1 [0, 69] { R9900 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R9900 += 1 };
  s1 -> s1 [71, 65535] { R9900 += 1 };
  s2 -> s1 [0, 69] { R9900 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R9900 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R9900 += 1 };
  s2 -> s1 [71, 65535] { R9900 += 1 };
  s3 -> s3 [0, 65535] { R9900 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R9902 += 1, R9840 += 1 };
  s0 -> s0 [0, 65535] { R9901 += 1, R9902 += 1 };
  s0 -> s2 [0, 65535] { R9902 += 1, R9839 += 1, R9840 += 1 };
  s0 -> s1 [71, 65535] { R9902 += 1, R9840 += 1 };
  s1 -> s1 [0, 69] { R9902 += 1, R9840 += 1 };
  s1 -> s1 [0, 65535] { R9902 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R9902 += 1, R9840 += 1 };
  s2 -> s1 [0, 69] { R9902 += 1, R9840 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R9902 += 1, R9839 += 1, R9840 += 1 };
  s2 -> s1 [71, 65535] { R9902 += 1, R9840 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R9904 += 1, R9842 += 1, R20 += 1 };
  s0 -> s2 [0, 65535] { R9904 += 1, R9841 += 1, R9842 += 1 };
  s0 -> s0 [0, 65535] { R9903 += 1, R9904 += 1 };
  s1 -> s1 [0, 65535] { R9904 += 1, R9842 += 1, R20 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R9904 += 1 };
  s2 -> s1 [0, 65535] { R9904 += 1, R9842 += 1, R20 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R9904 += 1, R9841 += 1, R9842 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R9904 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R9906 += 1, R9844 += 1 };
  s0 -> s2 [0, 65535] { R9906 += 1, R9843 += 1, R9844 += 1 };
  s0 -> s0 [0, 65535] { R9905 += 1, R9906 += 1 };
  s0 -> s1 [75, 65535] { R9906 += 1, R9844 += 1 };
  s1 -> s1 [0, 70] { R9906 += 1, R9844 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R9906 += 1 };
  s1 -> s1 [75, 65535] { R9906 += 1, R9844 += 1 };
  s2 -> s1 [0, 70] { R9906 += 1, R9844 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R9906 += 1, R9843 += 1, R9844 += 1 };
  s2 -> s1 [75, 65535] { R9906 += 1, R9844 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R9908 += 1, R9845 += 1, R9846 += 1 };
  s0 -> s0 [0, 65535] { R9907 += 1, R9908 += 1 };
  s0 -> s2 [0, 65535] { R9908 += 1, R9846 += 1, R84 += 1 };
  s1 -> s1 [0, 65535] { R9908 += 1, R9845 += 1, R9846 += 1 };
  s1 -> s2 [0, 65535] { R9908 += 1, R9846 += 1, R84 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R9908 += 1 };
  s2 -> s2 [0, 65535] { R9908 += 1, R9846 += 1, R84 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R9908 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R9910 += 1, R9848 += 1 };
  s0 -> s0 [0, 65535] { R9909 += 1, R9910 += 1 };
  s0 -> s2 [0, 65535] { R9910 += 1, R9848 += 1, R86 += 1 };
  s0 -> s3 [0, 65535] { R9910 += 1, R9847 += 1, R9848 += 1 };
  s0 -> s1 [76, 65535] { R9910 += 1, R9848 += 1 };
  s1 -> s1 [0, 74] { R9910 += 1, R9848 += 1 };
  s1 -> s1 [0, 65535] { R9910 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [76, 65535] { R9910 += 1, R9848 += 1 };
  s2 -> s1 [0, 74] { R9910 += 1, R9848 += 1 };
  s2 -> s2 [0, 65535] { R9910 += 1, R9848 += 1, R86 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R9910 += 1 };
  s2 -> s1 [76, 65535] { R9910 += 1, R9848 += 1 };
  s3 -> s1 [0, 74] { R9910 += 1, R9848 += 1 };
  s3 -> s2 [0, 65535] { R9910 += 1, R9848 += 1, R86 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R9910 += 1, R9847 += 1, R9848 += 1 };
  s3 -> s1 [76, 65535] { R9910 += 1, R9848 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R9910 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R9912 += 1, R9849 += 1, R9850 += 1 };
  s0 -> s2 [0, 65535] { R9912 += 1, R9850 += 1, R90 += 1 };
  s0 -> s3 [0, 65535] { R9912 += 1, R9850 += 1 };
  s0 -> s0 [0, 65535] { R9911 += 1, R9912 += 1 };
  s1 -> s1 [0, 65535] { R9912 += 1, R9849 += 1, R9850 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R9912 += 1, R9850 += 1, R90 += 1 };
  s1 -> s3 [0, 65535] { R9912 += 1, R9850 += 1 };
  s2 -> s4 [0, 65535] { R9912 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R9912 += 1, R9850 += 1, R90 += 1 };
  s2 -> s3 [0, 65535] { R9912 += 1, R9850 += 1 };
  s3 -> s4 [0, 65535] { R9912 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R9912 += 1, R9850 += 1 };
  s4 -> s4 [0, 65535] { R9912 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R9914 += 1, R9852 += 1, R94 += 1, R95 += 1 };
  s0 -> s0 [0, 65535] { R9913 += 1, R9914 += 1 };
  s0 -> s2 [0, 65535] { R9914 += 1, R9851 += 1, R9852 += 1 };
  s0 -> s3 [0, 65535] { R9914 += 1, R9852 += 1, R95 += 1, R96 += 1 };
  s1 -> s1 [0, 65535] { R9914 += 1, R9852 += 1, R94 += 1, R95 += 1 };
  s1 -> s5 [0, 65535] { R9914 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [0, 65535] { R9914 += 1, R9852 += 1, R95 += 1, R96 += 1 };
  s2 -> s1 [0, 65535] { R9914 += 1, R9852 += 1, R94 += 1, R95 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R9914 += 1, R9851 += 1, R9852 += 1 };
  s2 -> s3 [0, 65535] { R9914 += 1, R9852 += 1, R95 += 1, R96 += 1 };
  s3 -> s4 [0, 65535] { R9914 += 1, R9852 += 1 };
  s3 -> s5 [0, 65535] { R9914 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R9914 += 1, R9852 += 1, R95 += 1, R96 += 1 };
  s4 -> s4 [0, 65535] { R9914 += 1, R9852 += 1 };
  s4 -> s5 [0, 65535] { R9914 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R9914 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R9916 += 1, R9854 += 1, R6809 += 1 };
  s0 -> s2 [0, 65535] { R9916 += 1, R9853 += 1, R9854 += 1 };
  s0 -> s0 [0, 65535] { R9915 += 1, R9916 += 1 };
  s0 -> s3 [0, 65535] { R9916 += 1, R9854 += 1 };
  s0 -> s4 [0, 65535] { R9916 += 1, R9854 += 1, R6809 += 1, R6810 += 1 };
  s0 -> s1 [76, 65535] { R9916 += 1, R9854 += 1, R6809 += 1 };
  s1 -> s1 [0, 74] { R9916 += 1, R9854 += 1, R6809 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R9916 += 1, R9854 += 1 };
  s1 -> s6 [0, 65535] { R9916 += 1 };
  s1 -> s1 [76, 65535] { R9916 += 1, R9854 += 1, R6809 += 1 };
  s2 -> s1 [0, 74] { R9916 += 1, R9854 += 1, R6809 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R9916 += 1, R9853 += 1, R9854 += 1 };
  s2 -> s3 [0, 65535] { R9916 += 1, R9854 += 1 };
  s2 -> s4 [0, 65535] { R9916 += 1, R9854 += 1, R6809 += 1, R6810 += 1 };
  s2 -> s1 [76, 65535] { R9916 += 1, R9854 += 1, R6809 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R9916 += 1, R9854 += 1 };
  s3 -> s6 [0, 65535] { R9916 += 1 };
  s4 -> s1 [0, 74] { R9916 += 1, R9854 += 1, R6809 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R9916 += 1, R9854 += 1 };
  s4 -> s6 [0, 65535] { R9916 += 1 };
  s4 -> s4 [0, 65535] { R9916 += 1, R9854 += 1, R6809 += 1, R6810 += 1 };
  s4 -> s1 [76, 65535] { R9916 += 1, R9854 += 1, R6809 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9916 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 74] { R9918 += 1, R9856 += 1, R9606 += 1, R9608 += 1 };
  s0 -> s2 [0, 65535] { R9918 += 1, R9856 += 1, R9606 += 1, R9607 += 1, R9608 += 1 };
  s0 -> s0 [0, 65535] { R9917 += 1, R9918 += 1 };
  s0 -> s3 [0, 65535] { R9918 += 1, R9855 += 1, R9856 += 1 };
  s0 -> s4 [75, 75] { R9918 += 1, R9856 += 1, R9606 += 1, R9608 += 1 };
  s0 -> s1 [76, 65535] { R9918 += 1, R9856 += 1, R9606 += 1, R9608 += 1 };
  s1 -> s1 [0, 74] { R9918 += 1, R9856 += 1, R9606 += 1, R9608 += 1 };
  s1 -> s4 [75, 75] { R9918 += 1, R9856 += 1, R9606 += 1, R9608 += 1 };
  s1 -> s1 [76, 65535] { R9918 += 1, R9856 += 1, R9606 += 1, R9608 += 1 };
  s2 -> s1 [0, 74] { R9918 += 1, R9856 += 1, R9606 += 1, R9608 += 1 };
  s2 -> s2 [0, 65535] { R9918 += 1, R9856 += 1, R9606 += 1, R9607 += 1, R9608 += 1 };
  s2 -> s4 [75, 75] { R9918 += 1, R9856 += 1, R9606 += 1, R9608 += 1 };
  s2 -> s1 [76, 65535] { R9918 += 1, R9856 += 1, R9606 += 1, R9608 += 1 };
  s3 -> s1 [0, 74] { R9918 += 1, R9856 += 1, R9606 += 1, R9608 += 1 };
  s3 -> s2 [0, 65535] { R9918 += 1, R9856 += 1, R9606 += 1, R9607 += 1, R9608 += 1 };
  s3 -> s3 [0, 65535] { R9918 += 1, R9855 += 1, R9856 += 1 };
  s3 -> s4 [75, 75] { R9918 += 1, R9856 += 1, R9606 += 1, R9608 += 1 };
  s3 -> s1 [76, 65535] { R9918 += 1, R9856 += 1, R9606 += 1, R9608 += 1 };
  s4 -> s5 [0, 65535] { R9918 += 1, R9856 += 1 };
  s4 -> s4 [0, 65535] { R9918 += 1, R9856 += 1, R9606 += 1, R9608 += 1 };
  s4 -> s6 [0, 65535] { R9918 += 1, R9856 += 1, R9606 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R9918 += 1 };
  s5 -> s5 [0, 65535] { R9918 += 1, R9856 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R9918 += 1 };
  s6 -> s5 [0, 65535] { R9918 += 1, R9856 += 1 };
  s6 -> s6 [0, 65535] { R9918 += 1, R9856 += 1, R9606 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R9918 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R9918 += 1 };
  accepting s4, s8, s5, s6, s7;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R9920 += 1, R9858 += 1, R9834 += 1, R9835 += 1 };
  s0 -> s2 [0, 65535] { R9920 += 1, R9858 += 1, R9835 += 1, R9836 += 1, R9837 += 1 };
  s0 -> s3 [0, 65535] { R9920 += 1, R9858 += 1, R9835 += 1, R9837 += 1, R9838 += 1 };
  s0 -> s0 [0, 65535] { R9919 += 1, R9920 += 1 };
  s0 -> s4 [0, 65535] { R9920 += 1, R9857 += 1, R9858 += 1 };
  s1 -> s1 [0, 65535] { R9920 += 1, R9858 += 1, R9834 += 1, R9835 += 1 };
  s1 -> s2 [0, 65535] { R9920 += 1, R9858 += 1, R9835 += 1, R9836 += 1, R9837 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R9920 += 1 };
  s1 -> s3 [0, 65535] { R9920 += 1, R9858 += 1, R9835 += 1, R9837 += 1, R9838 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R9920 += 1, R9858 += 1, R9835 += 1, R9836 += 1, R9837 += 1 };
  s2 -> s6 [0, 65535] { R9920 += 1, R9858 += 1 };
  s2 -> s7 [0, 65535] { R9920 += 1 };
  s2 -> s3 [0, 65535] { R9920 += 1, R9858 += 1, R9835 += 1, R9837 += 1, R9838 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R9920 += 1, R9858 += 1 };
  s3 -> s7 [0, 65535] { R9920 += 1 };
  s3 -> s3 [0, 65535] { R9920 += 1, R9858 += 1, R9835 += 1, R9837 += 1, R9838 += 1 };
  s3 -> s8 [0, 65535] { R9920 += 1, R9858 += 1, R9835 += 1 };
  s4 -> s1 [0, 65535] { R9920 += 1, R9858 += 1, R9834 += 1, R9835 += 1 };
  s4 -> s2 [0, 65535] { R9920 += 1, R9858 += 1, R9835 += 1, R9836 += 1, R9837 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R9920 += 1, R9858 += 1, R9835 += 1, R9837 += 1, R9838 += 1 };
  s4 -> s4 [0, 65535] { R9920 += 1, R9857 += 1, R9858 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9920 += 1, R9858 += 1 };
  s6 -> s7 [0, 65535] { R9920 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R9920 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R9920 += 1, R9858 += 1 };
  s8 -> s7 [0, 65535] { R9920 += 1 };
  s8 -> s8 [0, 65535] { R9920 += 1, R9858 += 1, R9835 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R9922 += 1, R9877 += 1, R9878 += 1 };
  s0 -> s2 [0, 65535] { R9922 += 1, R9878 += 1, R21 += 1 };
  s0 -> s0 [0, 65535] { R9921 += 1, R9922 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R9922 += 1, R9877 += 1, R9878 += 1 };
  s1 -> s2 [0, 65535] { R9922 += 1, R9878 += 1, R21 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R9922 += 1, R9878 += 1, R21 += 1 };
  s2 -> s4 [0, 65535] { R9922 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R9922 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R9924 += 1, R9880 += 1 };
  s0 -> s0 [0, 65535] { R9923 += 1, R9924 += 1 };
  s0 -> s2 [0, 65535] { R9924 += 1, R9879 += 1, R9880 += 1 };
  s0 -> s3 [70, 70] { R9924 += 1, R9880 += 1 };
  s0 -> s4 [70, 70] { R9924 += 1, R9880 += 1 };
  s0 -> s5 [75, 75] { R9924 += 1, R9880 += 1 };
  s0 -> s1 [76, 65535] { R9924 += 1, R9880 += 1 };
  s1 -> s1 [0, 69] { R9924 += 1, R9880 += 1 };
  s1 -> s3 [70, 70] { R9924 += 1, R9880 += 1 };
  s1 -> s4 [70, 70] { R9924 += 1, R9880 += 1 };
  s1 -> s5 [75, 75] { R9924 += 1, R9880 += 1 };
  s1 -> s1 [76, 65535] { R9924 += 1, R9880 += 1 };
  s2 -> s1 [0, 69] { R9924 += 1, R9880 += 1 };
  s2 -> s2 [0, 65535] { R9924 += 1, R9879 += 1, R9880 += 1 };
  s2 -> s3 [70, 70] { R9924 += 1, R9880 += 1 };
  s2 -> s4 [70, 70] { R9924 += 1, R9880 += 1 };
  s2 -> s5 [75, 75] { R9924 += 1, R9880 += 1 };
  s2 -> s1 [76, 65535] { R9924 += 1, R9880 += 1 };
  s4 -> s4 [0, 70] { R9924 += 1, R9880 += 1 };
  s4 -> s8 [75, 75] { R9924 += 1, R9880 += 1 };
  s4 -> s4 [76, 65535] { R9924 += 1, R9880 += 1 };
  s5 -> s5 [0, 69] { R9924 += 1, R9880 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R9924 += 1 };
  s5 -> s7 [70, 70] { R9924 += 1, R9880 += 1 };
  s5 -> s8 [70, 70] { R9924 += 1, R9880 += 1 };
  s5 -> s5 [75, 65535] { R9924 += 1, R9880 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R9924 += 1 };
  s8 -> s8 [0, 70] { R9924 += 1, R9880 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R9924 += 1 };
  s8 -> s8 [75, 65535] { R9924 += 1, R9880 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R9926 += 1, R9882 += 1, R83 += 1 };
  s0 -> s0 [0, 65535] { R9925 += 1, R9926 += 1 };
  s0 -> s2 [0, 65535] { R9926 += 1, R9881 += 1, R9882 += 1 };
  s0 -> s3 [70, 70] { R9926 += 1, R9882 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R9926 += 1, R9882 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R9926 += 1, R9882 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R9926 += 1, R9882 += 1, R83 += 1 };
  s1 -> s1 [0, 65535] { R9926 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R9926 += 1, R9882 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R9926 += 1, R9882 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R9926 += 1, R9882 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R9926 += 1, R9882 += 1, R83 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R9926 += 1, R9881 += 1, R9882 += 1 };
  s2 -> s3 [70, 70] { R9926 += 1, R9882 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R9926 += 1, R9882 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R9926 += 1, R9882 += 1, R83 += 1 };
  s3 -> s3 [0, 65535] { R9926 += 1, R9882 += 1, R83 += 1 };
  s3 -> s6 [0, 65535] { R9926 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R9926 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9926 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R9928 += 1, R9884 += 1, R85 += 1 };
  s0 -> s0 [0, 65535] { R9927 += 1, R9928 += 1 };
  s0 -> s2 [0, 65535] { R9928 += 1, R9883 += 1, R9884 += 1 };
  s0 -> s3 [70, 70] { R9928 += 1, R9884 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R9928 += 1, R9884 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R9928 += 1, R9884 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R9928 += 1, R9884 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R9928 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R9928 += 1, R9884 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R9928 += 1, R9884 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R9928 += 1, R9884 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R9928 += 1, R9884 += 1, R85 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R9928 += 1, R9883 += 1, R9884 += 1 };
  s2 -> s3 [70, 70] { R9928 += 1, R9884 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R9928 += 1, R9884 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R9928 += 1, R9884 += 1, R85 += 1 };
  s3 -> s6 [0, 65535] { R9928 += 1 };
  s3 -> s3 [0, 65535] { R9928 += 1, R9884 += 1, R85 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R9928 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9928 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R9930 += 1, R9886 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R9930 += 1, R9886 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R9929 += 1, R9930 += 1 };
  s0 -> s3 [0, 65535] { R9930 += 1, R9885 += 1, R9886 += 1 };
  s0 -> s4 [70, 70] { R9930 += 1, R9886 += 1, R87 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R9930 += 1, R9886 += 1, R87 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R9930 += 1, R9886 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R9930 += 1, R9886 += 1, R88 += 1 };
  s0 -> s2 [71, 74] { R9930 += 1, R9886 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R9930 += 1, R9886 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R9930 += 1, R9886 += 1, R88 += 1 };
  s0 -> s2 [76, 65535] { R9930 += 1, R9886 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R9930 += 1, R9886 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [0, 69] { R9930 += 1, R9886 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R9930 += 1, R9886 += 1, R87 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R9930 += 1, R9886 += 1, R87 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R9930 += 1, R9886 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R9930 += 1, R9886 += 1, R88 += 1 };
  s1 -> s2 [71, 74] { R9930 += 1, R9886 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R9930 += 1, R9886 += 1, R87 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R9930 += 1, R9886 += 1, R88 += 1 };
  s1 -> s2 [76, 65535] { R9930 += 1, R9886 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R9930 += 1, R9886 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R9930 += 1, R9886 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R9930 += 1, R9886 += 1, R88 += 1 };
  s2 -> s2 [71, 74] { R9930 += 1, R9886 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R9930 += 1, R9886 += 1, R88 += 1 };
  s2 -> s2 [76, 65535] { R9930 += 1, R9886 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R9930 += 1, R9886 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R9930 += 1, R9886 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R9930 += 1, R9885 += 1, R9886 += 1 };
  s3 -> s4 [70, 70] { R9930 += 1, R9886 += 1, R87 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R9930 += 1, R9886 += 1, R87 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R9930 += 1, R9886 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R9930 += 1, R9886 += 1, R88 += 1 };
  s3 -> s2 [71, 74] { R9930 += 1, R9886 += 1, R88 += 1 };
  s3 -> s1 [71, 65535] { R9930 += 1, R9886 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R9930 += 1, R9886 += 1, R88 += 1 };
  s3 -> s2 [76, 65535] { R9930 += 1, R9886 += 1, R88 += 1 };
  s5 -> s6 [0, 74] { R9930 += 1, R9886 += 1, R88 += 1 };
  s5 -> s5 [0, 65535] { R9930 += 1, R9886 += 1, R87 += 1, R88 += 1 };
  s5 -> s10 [75, 75] { R9930 += 1, R9886 += 1, R88 += 1 };
  s5 -> s6 [76, 65535] { R9930 += 1, R9886 += 1, R88 += 1 };
  s6 -> s6 [0, 74] { R9930 += 1, R9886 += 1, R88 += 1 };
  s6 -> s10 [75, 75] { R9930 += 1, R9886 += 1, R88 += 1 };
  s6 -> s6 [76, 65535] { R9930 += 1, R9886 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R9930 += 1, R9886 += 1, R88 += 1 };
  s8 -> s8 [0, 65535] { R9930 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R9930 += 1, R9886 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R9930 += 1, R9886 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R9930 += 1, R9886 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R9930 += 1, R9886 += 1, R88 += 1 };
  s10 -> s12 [0, 65535] { R9930 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R9930 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R9930 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R9932 += 1, R9888 += 1, R91 += 1, R92 += 1 };
  s0 -> s2 [0, 65535] { R9932 += 1, R9887 += 1, R9888 += 1 };
  s0 -> s0 [0, 65535] { R9931 += 1, R9932 += 1 };
  s0 -> s3 [70, 70] { R9932 += 1, R9888 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R9932 += 1, R9888 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R9932 += 1, R9888 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R9932 += 1, R9888 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 65535] { R9932 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R9932 += 1, R9888 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R9932 += 1, R9888 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R9932 += 1, R9888 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R9932 += 1, R9888 += 1, R91 += 1, R92 += 1 };
  s2 -> s2 [0, 65535] { R9932 += 1, R9887 += 1, R9888 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R9932 += 1, R9888 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R9932 += 1, R9888 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R9932 += 1, R9888 += 1, R91 += 1, R92 += 1 };
  s3 -> s6 [0, 65535] { R9932 += 1 };
  s3 -> s3 [0, 65535] { R9932 += 1, R9888 += 1, R91 += 1, R92 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R9932 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9932 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R9934 += 1, R9890 += 1, R6805 += 1, R6806 += 1 };
  s0 -> s2 [0, 69] { R9934 += 1, R9890 += 1, R6806 += 1, R6807 += 1 };
  s0 -> s3 [0, 65535] { R9934 += 1, R9889 += 1, R9890 += 1 };
  s0 -> s0 [0, 65535] { R9933 += 1, R9934 += 1 };
  s0 -> s4 [70, 70] { R9934 += 1, R9890 += 1, R6805 += 1, R6806 += 1 };
  s0 -> s5 [70, 70] { R9934 += 1, R9890 += 1, R6805 += 1, R6806 += 1 };
  s0 -> s6 [70, 70] { R9934 += 1, R9890 += 1, R6806 += 1, R6807 += 1 };
  s0 -> s7 [70, 70] { R9934 += 1, R9890 += 1, R6806 += 1, R6807 += 1 };
  s0 -> s1 [71, 65535] { R9934 += 1, R9890 += 1, R6805 += 1, R6806 += 1 };
  s0 -> s2 [71, 65535] { R9934 += 1, R9890 += 1, R6806 += 1, R6807 += 1 };
  s1 -> s1 [0, 69] { R9934 += 1, R9890 += 1, R6805 += 1, R6806 += 1 };
  s1 -> s2 [0, 69] { R9934 += 1, R9890 += 1, R6806 += 1, R6807 += 1 };
  s1 -> s4 [70, 70] { R9934 += 1, R9890 += 1, R6805 += 1, R6806 += 1 };
  s1 -> s5 [70, 70] { R9934 += 1, R9890 += 1, R6805 += 1, R6806 += 1 };
  s1 -> s6 [70, 70] { R9934 += 1, R9890 += 1, R6806 += 1, R6807 += 1 };
  s1 -> s7 [70, 70] { R9934 += 1, R9890 += 1, R6806 += 1, R6807 += 1 };
  s1 -> s1 [71, 65535] { R9934 += 1, R9890 += 1, R6805 += 1, R6806 += 1 };
  s1 -> s2 [71, 65535] { R9934 += 1, R9890 += 1, R6806 += 1, R6807 += 1 };
  s2 -> s2 [0, 69] { R9934 += 1, R9890 += 1, R6806 += 1, R6807 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R9934 += 1 };
  s2 -> s6 [70, 70] { R9934 += 1, R9890 += 1, R6806 += 1, R6807 += 1 };
  s2 -> s7 [70, 70] { R9934 += 1, R9890 += 1, R6806 += 1, R6807 += 1 };
  s2 -> s2 [71, 65535] { R9934 += 1, R9890 += 1, R6806 += 1, R6807 += 1 };
  s3 -> s1 [0, 69] { R9934 += 1, R9890 += 1, R6805 += 1, R6806 += 1 };
  s3 -> s2 [0, 69] { R9934 += 1, R9890 += 1, R6806 += 1, R6807 += 1 };
  s3 -> s3 [0, 65535] { R9934 += 1, R9889 += 1, R9890 += 1 };
  s3 -> s4 [70, 70] { R9934 += 1, R9890 += 1, R6805 += 1, R6806 += 1 };
  s3 -> s5 [70, 70] { R9934 += 1, R9890 += 1, R6805 += 1, R6806 += 1 };
  s3 -> s6 [70, 70] { R9934 += 1, R9890 += 1, R6806 += 1, R6807 += 1 };
  s3 -> s7 [70, 70] { R9934 += 1, R9890 += 1, R6806 += 1, R6807 += 1 };
  s3 -> s1 [71, 65535] { R9934 += 1, R9890 += 1, R6805 += 1, R6806 += 1 };
  s3 -> s2 [71, 65535] { R9934 += 1, R9890 += 1, R6806 += 1, R6807 += 1 };
  s4 -> s4 [0, 65535] { R9934 += 1, R9890 += 1, R6805 += 1, R6806 += 1 };
  s4 -> s6 [0, 65535] { R9934 += 1, R9890 += 1, R6806 += 1, R6807 += 1 };
  s6 -> s6 [0, 65535] { R9934 += 1, R9890 += 1, R6806 += 1, R6807 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [0, 65535] { R9934 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R9934 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R9934 += 1 };
  accepting s8, s2, s9, s6, s7;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R9936 += 1, R9892 += 1, R9601 += 1, R9602 += 1 };
  s0 -> s2 [0, 69] { R9936 += 1, R9892 += 1, R9602 += 1, R9603 += 1, R9604 += 1 };
  s0 -> s3 [0, 65535] { R9936 += 1, R9891 += 1, R9892 += 1 };
  s0 -> s0 [0, 65535] { R9935 += 1, R9936 += 1 };
  s0 -> s4 [70, 70] { R9936 += 1, R9892 += 1, R9602 += 1, R9603 += 1, R9604 += 1 };
  s0 -> s5 [70, 70] { R9936 += 1, R9892 += 1, R9602 += 1, R9603 += 1, R9604 += 1 };
  s0 -> s6 [70, 70] { R9936 += 1, R9892 += 1, R9601 += 1, R9602 += 1 };
  s0 -> s7 [70, 70] { R9936 += 1, R9892 += 1, R9601 += 1, R9602 += 1 };
  s0 -> s1 [71, 65535] { R9936 += 1, R9892 += 1, R9601 += 1, R9602 += 1 };
  s0 -> s2 [71, 65535] { R9936 += 1, R9892 += 1, R9602 += 1, R9603 += 1, R9604 += 1 };
  s1 -> s1 [0, 69] { R9936 += 1, R9892 += 1, R9601 += 1, R9602 += 1 };
  s1 -> s2 [0, 69] { R9936 += 1, R9892 += 1, R9602 += 1, R9603 += 1, R9604 += 1 };
  s1 -> s4 [70, 70] { R9936 += 1, R9892 += 1, R9602 += 1, R9603 += 1, R9604 += 1 };
  s1 -> s5 [70, 70] { R9936 += 1, R9892 += 1, R9602 += 1, R9603 += 1, R9604 += 1 };
  s1 -> s6 [70, 70] { R9936 += 1, R9892 += 1, R9601 += 1, R9602 += 1 };
  s1 -> s7 [70, 70] { R9936 += 1, R9892 += 1, R9601 += 1, R9602 += 1 };
  s1 -> s1 [71, 65535] { R9936 += 1, R9892 += 1, R9601 += 1, R9602 += 1 };
  s1 -> s2 [71, 65535] { R9936 += 1, R9892 += 1, R9602 += 1, R9603 += 1, R9604 += 1 };
  s2 -> s2 [0, 69] { R9936 += 1, R9892 += 1, R9602 += 1, R9603 += 1, R9604 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R9936 += 1 };
  s2 -> s4 [70, 70] { R9936 += 1, R9892 += 1, R9602 += 1, R9603 += 1, R9604 += 1 };
  s2 -> s5 [70, 70] { R9936 += 1, R9892 += 1, R9602 += 1, R9603 += 1, R9604 += 1 };
  s2 -> s2 [71, 65535] { R9936 += 1, R9892 += 1, R9602 += 1, R9603 += 1, R9604 += 1 };
  s3 -> s1 [0, 69] { R9936 += 1, R9892 += 1, R9601 += 1, R9602 += 1 };
  s3 -> s2 [0, 69] { R9936 += 1, R9892 += 1, R9602 += 1, R9603 += 1, R9604 += 1 };
  s3 -> s3 [0, 65535] { R9936 += 1, R9891 += 1, R9892 += 1 };
  s3 -> s4 [70, 70] { R9936 += 1, R9892 += 1, R9602 += 1, R9603 += 1, R9604 += 1 };
  s3 -> s5 [70, 70] { R9936 += 1, R9892 += 1, R9602 += 1, R9603 += 1, R9604 += 1 };
  s3 -> s6 [70, 70] { R9936 += 1, R9892 += 1, R9601 += 1, R9602 += 1 };
  s3 -> s7 [70, 70] { R9936 += 1, R9892 += 1, R9601 += 1, R9602 += 1 };
  s3 -> s1 [71, 65535] { R9936 += 1, R9892 += 1, R9601 += 1, R9602 += 1 };
  s3 -> s2 [71, 65535] { R9936 += 1, R9892 += 1, R9602 += 1, R9603 += 1, R9604 += 1 };
  s4 -> s4 [0, 65535] { R9936 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R9936 += 1, R9892 += 1, R9602 += 1, R9603 += 1, R9604 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s9 [0, 65535] { R9936 += 1 };
  s6 -> s5 [0, 65535] { R9936 += 1, R9892 += 1, R9602 += 1, R9603 += 1, R9604 += 1 };
  s6 -> s6 [0, 65535] { R9936 += 1, R9892 += 1, R9601 += 1, R9602 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R9936 += 1 };
  accepting s4, s8, s5, s2, s9;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R9938 += 1, R9894 += 1, R9829 += 1, R9830 += 1 };
  s0 -> s2 [0, 65535] { R9938 += 1, R9893 += 1, R9894 += 1 };
  s0 -> s0 [0, 65535] { R9937 += 1, R9938 += 1 };
  s0 -> s3 [70, 70] { R9938 += 1, R9894 += 1, R9829 += 1, R9830 += 1 };
  s0 -> s4 [70, 70] { R9938 += 1, R9894 += 1, R9829 += 1, R9830 += 1 };
  s0 -> s1 [71, 65535] { R9938 += 1, R9894 += 1, R9829 += 1, R9830 += 1 };
  s1 -> s1 [0, 69] { R9938 += 1, R9894 += 1, R9829 += 1, R9830 += 1 };
  s1 -> s1 [0, 65535] { R9938 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R9938 += 1, R9894 += 1, R9829 += 1, R9830 += 1 };
  s1 -> s4 [70, 70] { R9938 += 1, R9894 += 1, R9829 += 1, R9830 += 1 };
  s1 -> s1 [71, 65535] { R9938 += 1, R9894 += 1, R9829 += 1, R9830 += 1 };
  s2 -> s1 [0, 69] { R9938 += 1, R9894 += 1, R9829 += 1, R9830 += 1 };
  s2 -> s2 [0, 65535] { R9938 += 1, R9893 += 1, R9894 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R9938 += 1, R9894 += 1, R9829 += 1, R9830 += 1 };
  s2 -> s4 [70, 70] { R9938 += 1, R9894 += 1, R9829 += 1, R9830 += 1 };
  s2 -> s1 [71, 65535] { R9938 += 1, R9894 += 1, R9829 += 1, R9830 += 1 };
  s3 -> s6 [0, 65535] { R9938 += 1 };
  s3 -> s3 [0, 65535] { R9938 += 1, R9894 += 1, R9829 += 1, R9830 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R9938 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9938 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R9856 && R3 = R9938 && R23 - R9938 = -1 && R24 = R9938 && R25 - R9938 = -1 && R26 = R9938 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R9606 + -1*R9602 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R9606 + -1*R9602 - R66 = 0 && R55 + R96 + R93 + -1*R9608 + -1*R9604 - R68 = 0 && R65 + R9605 + R9601 = 0 && R67 + R9607 + R9603 = 0 && R9855 = 0 && R9879 = 0 && R9880 = 0 && R9885 = 0 && R9886 = 0 && R9889 = 0 && R9890 = 0 && R9891 = 0 && R9892 = 0 && R9895 = 0 && R9896 = R9938 && R9897 = 0 && R9898 = R9938 && R9899 = 0 && R9900 = R9938 && R9901 = 0 && R9902 = R9938 && R9903 = 0 && R9904 = R9938 && R9905 = 0 && R9906 = R9938 && R9907 = 0 && R9908 = R9938 && R9909 = 0 && R9910 = R9938 && R9911 = 0 && R9912 = R9938 && R9913 = 0 && R9914 = R9938 && R9915 = 0 && R9916 = R9938 && R9917 = 0 && R9918 = R9938 && R9919 = 0 && R9920 = R9938 && R9921 = 0 && R9922 = R9938 && R9923 = 0 && R9924 = R9938 && R9925 = 0 && R9926 = R9938 && R9927 = 0 && R9928 = R9938 && R9929 = 0 && R9930 = R9938 && R9931 = 0 && R9932 = R9938 && R9933 = 0 && R9934 = R9938 && R9935 = 0 && R9936 = R9938 && R9937 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R6810 + R6807 < 1 && -1*R9606 + -1*R9602 - R66 < 1 && -1*R9608 + -1*R9604 - R68 < 1 && -1 < R9856 && 0 < R9938 && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R9606 + -1*R9602 - R66 = 0 || R66 + R9606 + R9602 < 1) && (R59 + R6808 + R6805 != 0 || R60 + R6809 + R6806 + -1*R9606 + -1*R9602 - R66 = 0 || R66 + R9606 + R9602 < 1) && (R66 + R9606 + R9602 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R9608 + R9604 < 1) && (R53 + R94 + R91 = 0 || R68 + R9608 + R9604 < 1))) && (R66 + R9606 + R9602 != 0 || ((R59 + R6808 + R6805 != 0 || R60 + R6809 + R6806 = 0 || R68 + R9608 + R9604 < 1) && (R59 + R6808 + R6805 = 0 || R68 + R9608 + R9604 < 1))) && (R66 + R9606 + R9602 != 0 || ((R73 + R9834 + R9829 != 0 || R74 + R9835 + R9830 = 0 || R68 + R9608 + R9604 < 1) && (R73 + R9834 + R9829 = 0 || R68 + R9608 + R9604 < 1))) && (R68 + R9608 + R9604 != 0 || R77 + R9838 + R9833 = 0 || (R75 + R9836 + R9831 = 0 && R76 + R9837 + R9832 = 0)) && (R73 + R9834 + R9829 != 0 || R66 + R9606 + R9602 + -1*R9835 + -1*R9830 - R74 = 0 || R66 + R9606 + R9602 < 1) && (R75 + R9836 + R9831 != 0 || R68 + R9608 + R9604 + -1*R9837 + -1*R9832 - R76 = 0 || R68 + R9608 + R9604 < 1) && (R9839 != 0 || R9840 = R9856 || (R20 = 0 && R9856 = 0)) && (R9841 != 0 || R9842 = R9856 || (R20 = 0 && R9856 = 0)) && (R9843 != 0 || R9844 = R9856 || (R20 = 0 && R9856 = 0)) && (R9845 != 0 || R9846 = R9856 || (R20 = 0 && R9856 = 0)) && (R9847 != 0 || R9848 = R9856 || (R20 = 0 && R9856 = 0)) && (R9849 != 0 || R9850 = R9856 || (R20 = 0 && R9856 = 0)) && (R9851 != 0 || R9852 = R9856 || (R20 = 0 && R9856 = 0)) && (R9853 != 0 || R9854 = R9856 || (R20 = 0 && R9856 = 0)) && (R9857 != 0 || R9856 = R9858 || (R20 = 0 && R9856 = 0)) && (R21 = 0 || (R9877 = 0 && R9878 = 0)) && (R21 = 0 || (R9881 = 0 && R9882 = 0)) && (R21 = 0 || (R9883 = 0 && R9884 = 0)) && (R21 = 0 || (R9887 = 0 && R9888 = 0)) && (R21 = 0 || (R9893 = 0 && R9894 = 0)) && (R22 = 0 || (R9859 = 0 && R9860 = 0)) && (R22 = 0 || (R9861 = 0 && R9862 = 0)) && (R22 = 0 || (R9863 = 0 && R9864 = 0)) && (R22 = 0 || (R9865 = 0 && R9866 = 0)) && (R22 = 0 || (R9867 = 0 && R9868 = 0)) && (R22 = 0 || (R9869 = 0 && R9870 = 0)) && (R22 = 0 || (R9871 = 0 && R9872 = 0)) && (R22 = 0 || (R9873 = 0 && R9874 = 0)) && (R22 = 0 || (R9875 = 0 && R9876 = 0)) && (R53 + R94 + R91 = 0 || R66 + R9606 + R9602 < 1) && (R59 + R6808 + R6805 = 0 || R66 + R9606 + R9602 < 1) && (R73 + R9834 + R9829 = 0 || R66 + R9606 + R9602 < 1) && (R75 + R9836 + R9831 = 0 || R68 + R9608 + R9604 < 1) && (R9839 = 0 || (R20 = 0 && R9856 = 0)) && (R9841 = 0 || (R20 = 0 && R9856 = 0)) && (R9843 = 0 || (R20 = 0 && R9856 = 0)) && (R9845 = 0 || (R20 = 0 && R9856 = 0)) && (R9847 = 0 || (R20 = 0 && R9856 = 0)) && (R9849 = 0 || (R20 = 0 && R9856 = 0)) && (R9851 = 0 || (R20 = 0 && R9856 = 0)) && (R9853 = 0 || (R20 = 0 && R9856 = 0)) && (R9857 = 0 || (R20 = 0 && R9856 = 0));
// End of Parikh automata intersection problem
