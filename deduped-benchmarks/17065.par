// Parikh automata intersection problem, generated by OSTRICH+
counter int R12, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R3451, R3452, R3453, R3454, R3455, R3456, R4, R45, R47, R49, R5, R50, R53, R54, R55, R5689, R5690, R5691, R5692, R5693, R5694, R5695, R5696, R5807, R5808, R5809, R5810, R5811, R5812, R5813, R5814, R5815, R5816, R5817, R5818, R5819, R5820, R5821, R5822, R5823, R5824, R5825, R5826, R5827, R5828, R5829, R5830, R5831, R5832, R5833, R5834, R5835, R5836, R5837, R5838, R5839, R5840, R5841, R5842, R5843, R5844, R5845, R5846, R5847, R5848, R5849, R5850, R5851, R5852, R5853, R5854, R5855, R5856, R5857, R5858, R5859, R5860, R5861, R5862, R5863, R5864, R5865, R5866, R5867, R5868, R5869, R5870, R5871, R5872, R5873, R5874, R5875, R5876, R5877, R5878, R5879, R5880, R5881, R5882, R5883, R5884, R5885, R5886, R5887, R5888, R5889, R5890, R5891, R5892, R5893, R5894, R5895, R5896, R5897, R5898, R5899, R59, R5900, R5901, R5902, R5903, R5904, R5905, R5906, R5907, R5908, R5909, R5910, R5911, R5912, R5913, R5914, R5915, R5916, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R5837 += 1, R5838 += 1 };
  s0 -> s1 [0, 65535] { R5838 += 1, R22 += 1 };
  s1 -> s1 [0, 65535] { R5838 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R5840 += 1 };
  s0 -> s0 [0, 65535] { R5839 += 1, R5840 += 1 };
  s0 -> s2 [70, 70] { R5840 += 1 };
  s0 -> s3 [70, 70] { R5840 += 1 };
  s0 -> s1 [76, 65535] { R5840 += 1 };
  s1 -> s1 [0, 69] { R5840 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5840 += 1 };
  s1 -> s3 [70, 70] { R5840 += 1 };
  s1 -> s1 [76, 65535] { R5840 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R5840 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R5840 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R5842 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R5841 += 1, R5842 += 1 };
  s0 -> s2 [70, 70] { R5842 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R5842 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R5842 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R5842 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5842 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R5842 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R5842 += 1, R45 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R5842 += 1, R45 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R5844 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R5843 += 1, R5844 += 1 };
  s0 -> s2 [70, 70] { R5844 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R5844 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R5844 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R5844 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5844 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R5844 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R5844 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R5844 += 1, R47 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R5846 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R5845 += 1, R5846 += 1 };
  s0 -> s2 [70, 70] { R5846 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R5846 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R5846 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R5846 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5846 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R5846 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R5846 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535] { R5846 += 1, R49 += 1, R50 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R5848 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R5847 += 1, R5848 += 1 };
  s0 -> s2 [70, 70] { R5848 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R5848 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R5848 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R5848 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5848 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R5848 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R5848 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5848 += 1, R53 += 1, R54 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R5850 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R5849 += 1, R5850 += 1 };
  s0 -> s2 [70, 70] { R5850 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R5850 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R5850 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R5850 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5850 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R5850 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R5850 += 1, R59 += 1, R60 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R5850 += 1, R59 += 1, R60 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R5852 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R5851 += 1, R5852 += 1 };
  s0 -> s2 [70, 70] { R5852 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R5852 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R5852 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R5852 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5852 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R5852 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R5852 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535] { R5852 += 1, R65 += 1, R66 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R5854 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R5853 += 1, R5854 += 1 };
  s0 -> s2 [70, 70] { R5854 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R5854 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R5854 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R5854 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5854 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R5854 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R5854 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R5854 += 1, R73 += 1, R74 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R5874 += 1 };
  s0 -> s0 [0, 65535] { R5873 += 1, R5874 += 1 };
  s0 -> s2 [70, 70] { R5874 += 1 };
  s0 -> s1 [71, 65535] { R5874 += 1 };
  s1 -> s1 [0, 69] { R5874 += 1 };
  s1 -> s2 [70, 70] { R5874 += 1 };
  s1 -> s1 [71, 65535] { R5874 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5874 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R5876 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R5875 += 1, R5876 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R5876 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R5878 += 1 };
  s0 -> s0 [0, 65535] { R5877 += 1, R5878 += 1 };
  s0 -> s2 [0, 65535] { R5878 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R5878 += 1 };
  s0 -> s1 [71, 65535] { R5878 += 1 };
  s1 -> s1 [0, 69] { R5878 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R5878 += 1 };
  s1 -> s1 [71, 65535] { R5878 += 1 };
  s2 -> s1 [0, 69] { R5878 += 1 };
  s2 -> s2 [0, 65535] { R5878 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R5878 += 1 };
  s2 -> s1 [71, 65535] { R5878 += 1 };
  s3 -> s3 [0, 65535] { R5878 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R5880 += 1, R5818 += 1 };
  s0 -> s2 [0, 65535] { R5880 += 1, R5817 += 1, R5818 += 1 };
  s0 -> s0 [0, 65535] { R5879 += 1, R5880 += 1 };
  s0 -> s1 [71, 65535] { R5880 += 1, R5818 += 1 };
  s1 -> s1 [0, 69] { R5880 += 1, R5818 += 1 };
  s1 -> s1 [0, 65535] { R5880 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R5880 += 1, R5818 += 1 };
  s2 -> s1 [0, 69] { R5880 += 1, R5818 += 1 };
  s2 -> s2 [0, 65535] { R5880 += 1, R5817 += 1, R5818 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R5880 += 1, R5818 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R5882 += 1, R5819 += 1, R5820 += 1 };
  s0 -> s2 [0, 65535] { R5882 += 1, R5820 += 1, R20 += 1 };
  s0 -> s0 [0, 65535] { R5881 += 1, R5882 += 1 };
  s1 -> s1 [0, 65535] { R5882 += 1, R5819 += 1, R5820 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R5882 += 1, R5820 += 1, R20 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5882 += 1, R5820 += 1, R20 += 1 };
  s2 -> s4 [0, 65535] { R5882 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5882 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R5884 += 1, R5822 += 1 };
  s0 -> s2 [0, 65535] { R5884 += 1, R5821 += 1, R5822 += 1 };
  s0 -> s0 [0, 65535] { R5883 += 1, R5884 += 1 };
  s0 -> s1 [75, 65535] { R5884 += 1, R5822 += 1 };
  s1 -> s1 [0, 70] { R5884 += 1, R5822 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R5884 += 1 };
  s1 -> s1 [75, 65535] { R5884 += 1, R5822 += 1 };
  s2 -> s1 [0, 70] { R5884 += 1, R5822 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5884 += 1, R5821 += 1, R5822 += 1 };
  s2 -> s1 [75, 65535] { R5884 += 1, R5822 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R5886 += 1, R5824 += 1, R84 += 1 };
  s0 -> s2 [0, 65535] { R5886 += 1, R5823 += 1, R5824 += 1 };
  s0 -> s0 [0, 65535] { R5885 += 1, R5886 += 1 };
  s1 -> s1 [0, 65535] { R5886 += 1, R5824 += 1, R84 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R5886 += 1 };
  s2 -> s1 [0, 65535] { R5886 += 1, R5824 += 1, R84 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5886 += 1, R5823 += 1, R5824 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5886 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R5888 += 1, R5826 += 1 };
  s0 -> s0 [0, 65535] { R5887 += 1, R5888 += 1 };
  s0 -> s2 [0, 65535] { R5888 += 1, R5825 += 1, R5826 += 1 };
  s0 -> s3 [0, 65535] { R5888 += 1, R5826 += 1, R86 += 1 };
  s0 -> s1 [76, 65535] { R5888 += 1, R5826 += 1 };
  s1 -> s1 [0, 74] { R5888 += 1, R5826 += 1 };
  s1 -> s1 [0, 65535] { R5888 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R5888 += 1, R5826 += 1 };
  s2 -> s1 [0, 74] { R5888 += 1, R5826 += 1 };
  s2 -> s2 [0, 65535] { R5888 += 1, R5825 += 1, R5826 += 1 };
  s2 -> s3 [0, 65535] { R5888 += 1, R5826 += 1, R86 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [76, 65535] { R5888 += 1, R5826 += 1 };
  s3 -> s1 [0, 74] { R5888 += 1, R5826 += 1 };
  s3 -> s4 [0, 65535] { R5888 += 1 };
  s3 -> s3 [0, 65535] { R5888 += 1, R5826 += 1, R86 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [76, 65535] { R5888 += 1, R5826 += 1 };
  s4 -> s4 [0, 65535] { R5888 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R5890 += 1, R5828 += 1, R90 += 1 };
  s0 -> s0 [0, 65535] { R5889 += 1, R5890 += 1 };
  s0 -> s2 [0, 65535] { R5890 += 1, R5828 += 1 };
  s0 -> s3 [0, 65535] { R5890 += 1, R5827 += 1, R5828 += 1 };
  s1 -> s1 [0, 65535] { R5890 += 1, R5828 += 1, R90 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R5890 += 1, R5828 += 1 };
  s1 -> s5 [0, 65535] { R5890 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R5890 += 1, R5828 += 1 };
  s2 -> s5 [0, 65535] { R5890 += 1 };
  s3 -> s1 [0, 65535] { R5890 += 1, R5828 += 1, R90 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R5890 += 1, R5828 += 1 };
  s3 -> s3 [0, 65535] { R5890 += 1, R5827 += 1, R5828 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5890 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R5892 += 1, R5830 += 1, R95 += 1, R96 += 1 };
  s0 -> s0 [0, 65535] { R5891 += 1, R5892 += 1 };
  s0 -> s2 [0, 65535] { R5892 += 1, R5830 += 1, R94 += 1, R95 += 1 };
  s0 -> s3 [0, 65535] { R5892 += 1, R5829 += 1, R5830 += 1 };
  s1 -> s1 [0, 65535] { R5892 += 1, R5830 += 1, R95 += 1, R96 += 1 };
  s1 -> s6 [0, 65535] { R5892 += 1, R5830 += 1 };
  s1 -> s5 [0, 65535] { R5892 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R5892 += 1, R5830 += 1, R95 += 1, R96 += 1 };
  s2 -> s5 [0, 65535] { R5892 += 1 };
  s2 -> s2 [0, 65535] { R5892 += 1, R5830 += 1, R94 += 1, R95 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R5892 += 1, R5830 += 1, R95 += 1, R96 += 1 };
  s3 -> s2 [0, 65535] { R5892 += 1, R5830 += 1, R94 += 1, R95 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5892 += 1, R5829 += 1, R5830 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5892 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R5892 += 1, R5830 += 1 };
  s6 -> s5 [0, 65535] { R5892 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R5894 += 1, R5832 += 1, R3455 += 1 };
  s0 -> s0 [0, 65535] { R5893 += 1, R5894 += 1 };
  s0 -> s2 [0, 65535] { R5894 += 1, R5831 += 1, R5832 += 1 };
  s0 -> s1 [0, 65535] { R5894 += 1, R5832 += 1 };
  s0 -> s1 [76, 65535] { R5894 += 1, R5832 += 1, R3455 += 1 };
  s1 -> s1 [0, 74] { R5894 += 1, R5832 += 1, R3455 += 1 };
  s1 -> s4 [0, 65535] { R5894 += 1 };
  s1 -> s1 [0, 65535] { R5894 += 1, R5832 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [76, 65535] { R5894 += 1, R5832 += 1, R3455 += 1 };
  s2 -> s1 [0, 74] { R5894 += 1, R5832 += 1, R3455 += 1 };
  s2 -> s2 [0, 65535] { R5894 += 1, R5831 += 1, R5832 += 1 };
  s2 -> s1 [0, 65535] { R5894 += 1, R5832 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [76, 65535] { R5894 += 1, R5832 += 1, R3455 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5894 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 74] { R5896 += 1, R5834 += 1, R5694 += 1, R5696 += 1 };
  s0 -> s2 [0, 65535] { R5896 += 1, R5833 += 1, R5834 += 1 };
  s0 -> s0 [0, 65535] { R5895 += 1, R5896 += 1 };
  s0 -> s3 [75, 75] { R5896 += 1, R5834 += 1, R5694 += 1, R5696 += 1 };
  s0 -> s1 [76, 65535] { R5896 += 1, R5834 += 1, R5694 += 1, R5696 += 1 };
  s1 -> s1 [0, 74] { R5896 += 1, R5834 += 1, R5694 += 1, R5696 += 1 };
  s1 -> s3 [75, 75] { R5896 += 1, R5834 += 1, R5694 += 1, R5696 += 1 };
  s1 -> s1 [76, 65535] { R5896 += 1, R5834 += 1, R5694 += 1, R5696 += 1 };
  s2 -> s1 [0, 74] { R5896 += 1, R5834 += 1, R5694 += 1, R5696 += 1 };
  s2 -> s2 [0, 65535] { R5896 += 1, R5833 += 1, R5834 += 1 };
  s2 -> s3 [75, 75] { R5896 += 1, R5834 += 1, R5694 += 1, R5696 += 1 };
  s2 -> s1 [76, 65535] { R5896 += 1, R5834 += 1, R5694 += 1, R5696 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R5896 += 1, R5834 += 1 };
  s3 -> s6 [0, 65535] { R5896 += 1, R5834 += 1, R5694 += 1 };
  s3 -> s7 [0, 65535] { R5896 += 1 };
  s3 -> s3 [0, 65535] { R5896 += 1, R5834 += 1, R5694 += 1, R5696 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5896 += 1, R5834 += 1 };
  s5 -> s7 [0, 65535] { R5896 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R5896 += 1, R5834 += 1 };
  s6 -> s6 [0, 65535] { R5896 += 1, R5834 += 1, R5694 += 1 };
  s6 -> s7 [0, 65535] { R5896 += 1 };
  s7 -> s4 [0, 65535];
  s7 -> s7 [0, 65535] { R5896 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R5898 += 1, R5835 += 1, R5836 += 1 };
  s0 -> s2 [0, 65535] { R5898 += 1, R5836 += 1 };
  s0 -> s0 [0, 65535] { R5897 += 1, R5898 += 1 };
  s1 -> s1 [0, 65535] { R5898 += 1, R5835 += 1, R5836 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R5898 += 1, R5836 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5898 += 1, R5836 += 1 };
  s2 -> s4 [0, 65535] { R5898 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5898 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R5900 += 1, R5856 += 1, R21 += 1 };
  s0 -> s0 [0, 65535] { R5899 += 1, R5900 += 1 };
  s0 -> s2 [0, 65535] { R5900 += 1, R5855 += 1, R5856 += 1 };
  s1 -> s1 [0, 65535] { R5900 += 1, R5856 += 1, R21 += 1 };
  s1 -> s4 [0, 65535] { R5900 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R5900 += 1, R5856 += 1, R21 += 1 };
  s2 -> s2 [0, 65535] { R5900 += 1, R5855 += 1, R5856 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5900 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R5902 += 1, R5858 += 1 };
  s0 -> s0 [0, 65535] { R5901 += 1, R5902 += 1 };
  s0 -> s2 [0, 65535] { R5902 += 1, R5857 += 1, R5858 += 1 };
  s0 -> s3 [70, 70] { R5902 += 1, R5858 += 1 };
  s0 -> s4 [70, 70] { R5902 += 1, R5858 += 1 };
  s0 -> s5 [75, 75] { R5902 += 1, R5858 += 1 };
  s0 -> s1 [76, 65535] { R5902 += 1, R5858 += 1 };
  s1 -> s1 [0, 69] { R5902 += 1, R5858 += 1 };
  s1 -> s3 [70, 70] { R5902 += 1, R5858 += 1 };
  s1 -> s4 [70, 70] { R5902 += 1, R5858 += 1 };
  s1 -> s5 [75, 75] { R5902 += 1, R5858 += 1 };
  s1 -> s1 [76, 65535] { R5902 += 1, R5858 += 1 };
  s2 -> s1 [0, 69] { R5902 += 1, R5858 += 1 };
  s2 -> s2 [0, 65535] { R5902 += 1, R5857 += 1, R5858 += 1 };
  s2 -> s3 [70, 70] { R5902 += 1, R5858 += 1 };
  s2 -> s4 [70, 70] { R5902 += 1, R5858 += 1 };
  s2 -> s5 [75, 75] { R5902 += 1, R5858 += 1 };
  s2 -> s1 [76, 65535] { R5902 += 1, R5858 += 1 };
  s4 -> s4 [0, 70] { R5902 += 1, R5858 += 1 };
  s4 -> s8 [75, 75] { R5902 += 1, R5858 += 1 };
  s4 -> s4 [76, 65535] { R5902 += 1, R5858 += 1 };
  s5 -> s5 [0, 69] { R5902 += 1, R5858 += 1 };
  s5 -> s5 [0, 65535] { R5902 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R5902 += 1, R5858 += 1 };
  s5 -> s8 [70, 70] { R5902 += 1, R5858 += 1 };
  s5 -> s5 [75, 65535] { R5902 += 1, R5858 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5902 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 70] { R5902 += 1, R5858 += 1 };
  s8 -> s8 [0, 65535] { R5902 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [75, 65535] { R5902 += 1, R5858 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R5904 += 1, R5860 += 1, R83 += 1 };
  s0 -> s2 [0, 65535] { R5904 += 1, R5859 += 1, R5860 += 1 };
  s0 -> s0 [0, 65535] { R5903 += 1, R5904 += 1 };
  s0 -> s3 [70, 70] { R5904 += 1, R5860 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R5904 += 1, R5860 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R5904 += 1, R5860 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R5904 += 1, R5860 += 1, R83 += 1 };
  s1 -> s1 [0, 65535] { R5904 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R5904 += 1, R5860 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R5904 += 1, R5860 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R5904 += 1, R5860 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R5904 += 1, R5860 += 1, R83 += 1 };
  s2 -> s2 [0, 65535] { R5904 += 1, R5859 += 1, R5860 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R5904 += 1, R5860 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R5904 += 1, R5860 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R5904 += 1, R5860 += 1, R83 += 1 };
  s3 -> s3 [0, 65535] { R5904 += 1, R5860 += 1, R83 += 1 };
  s3 -> s6 [0, 65535] { R5904 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5904 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5904 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R5906 += 1, R5862 += 1, R85 += 1 };
  s0 -> s2 [0, 65535] { R5906 += 1, R5861 += 1, R5862 += 1 };
  s0 -> s0 [0, 65535] { R5905 += 1, R5906 += 1 };
  s0 -> s3 [70, 70] { R5906 += 1, R5862 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R5906 += 1, R5862 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R5906 += 1, R5862 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R5906 += 1, R5862 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R5906 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R5906 += 1, R5862 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R5906 += 1, R5862 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R5906 += 1, R5862 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R5906 += 1, R5862 += 1, R85 += 1 };
  s2 -> s2 [0, 65535] { R5906 += 1, R5861 += 1, R5862 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R5906 += 1, R5862 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R5906 += 1, R5862 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R5906 += 1, R5862 += 1, R85 += 1 };
  s3 -> s3 [0, 65535] { R5906 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R5906 += 1, R5862 += 1, R85 += 1 };
  s4 -> s5 [0, 65535] { R5906 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R5906 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R5908 += 1, R5864 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R5908 += 1, R5864 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R5907 += 1, R5908 += 1 };
  s0 -> s3 [0, 65535] { R5908 += 1, R5863 += 1, R5864 += 1 };
  s0 -> s4 [70, 70] { R5908 += 1, R5864 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R5908 += 1, R5864 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R5908 += 1, R5864 += 1, R87 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R5908 += 1, R5864 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [71, 74] { R5908 += 1, R5864 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R5908 += 1, R5864 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R5908 += 1, R5864 += 1, R88 += 1 };
  s0 -> s2 [76, 65535] { R5908 += 1, R5864 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R5908 += 1, R5864 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [0, 69] { R5908 += 1, R5864 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R5908 += 1, R5864 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R5908 += 1, R5864 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R5908 += 1, R5864 += 1, R87 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R5908 += 1, R5864 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [71, 74] { R5908 += 1, R5864 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R5908 += 1, R5864 += 1, R87 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R5908 += 1, R5864 += 1, R88 += 1 };
  s1 -> s2 [76, 65535] { R5908 += 1, R5864 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R5908 += 1, R5864 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R5908 += 1, R5864 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R5908 += 1, R5864 += 1, R88 += 1 };
  s2 -> s2 [71, 74] { R5908 += 1, R5864 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R5908 += 1, R5864 += 1, R88 += 1 };
  s2 -> s2 [76, 65535] { R5908 += 1, R5864 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R5908 += 1, R5864 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R5908 += 1, R5864 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R5908 += 1, R5863 += 1, R5864 += 1 };
  s3 -> s4 [70, 70] { R5908 += 1, R5864 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R5908 += 1, R5864 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R5908 += 1, R5864 += 1, R87 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R5908 += 1, R5864 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [71, 74] { R5908 += 1, R5864 += 1, R88 += 1 };
  s3 -> s1 [71, 65535] { R5908 += 1, R5864 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R5908 += 1, R5864 += 1, R88 += 1 };
  s3 -> s2 [76, 65535] { R5908 += 1, R5864 += 1, R88 += 1 };
  s4 -> s4 [0, 74] { R5908 += 1, R5864 += 1, R88 += 1 };
  s4 -> s10 [75, 75] { R5908 += 1, R5864 += 1, R88 += 1 };
  s4 -> s4 [76, 65535] { R5908 += 1, R5864 += 1, R88 += 1 };
  s6 -> s4 [0, 74] { R5908 += 1, R5864 += 1, R88 += 1 };
  s6 -> s6 [0, 65535] { R5908 += 1, R5864 += 1, R87 += 1, R88 += 1 };
  s6 -> s10 [75, 75] { R5908 += 1, R5864 += 1, R88 += 1 };
  s6 -> s4 [76, 65535] { R5908 += 1, R5864 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R5908 += 1, R5864 += 1, R88 += 1 };
  s8 -> s8 [0, 65535] { R5908 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R5908 += 1, R5864 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R5908 += 1, R5864 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R5908 += 1, R5864 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s12 [0, 65535] { R5908 += 1 };
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R5908 += 1, R5864 += 1, R88 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R5908 += 1 };
  s12 -> s12 [0, 65535] { R5908 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R5910 += 1, R5866 += 1, R91 += 1, R92 += 1 };
  s0 -> s0 [0, 65535] { R5909 += 1, R5910 += 1 };
  s0 -> s2 [0, 65535] { R5910 += 1, R5865 += 1, R5866 += 1 };
  s0 -> s3 [70, 70] { R5910 += 1, R5866 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R5910 += 1, R5866 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R5910 += 1, R5866 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R5910 += 1, R5866 += 1, R91 += 1, R92 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5910 += 1 };
  s1 -> s3 [70, 70] { R5910 += 1, R5866 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R5910 += 1, R5866 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R5910 += 1, R5866 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R5910 += 1, R5866 += 1, R91 += 1, R92 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5910 += 1, R5865 += 1, R5866 += 1 };
  s2 -> s3 [70, 70] { R5910 += 1, R5866 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R5910 += 1, R5866 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R5910 += 1, R5866 += 1, R91 += 1, R92 += 1 };
  s3 -> s3 [0, 65535] { R5910 += 1, R5866 += 1, R91 += 1, R92 += 1 };
  s3 -> s6 [0, 65535] { R5910 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5910 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5910 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R5912 += 1, R5868 += 1, R3452 += 1 };
  s0 -> s2 [0, 69] { R5912 += 1, R5868 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s3 [0, 69] { R5912 += 1, R5868 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s0 [0, 65535] { R5911 += 1, R5912 += 1 };
  s0 -> s4 [0, 65535] { R5912 += 1, R5867 += 1, R5868 += 1 };
  s0 -> s5 [70, 70] { R5912 += 1, R5868 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s6 [70, 70] { R5912 += 1, R5868 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s7 [70, 70] { R5912 += 1, R5868 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s8 [70, 70] { R5912 += 1, R5868 += 1, R3452 += 1 };
  s0 -> s9 [70, 70] { R5912 += 1, R5868 += 1, R3452 += 1 };
  s0 -> s10 [70, 70] { R5912 += 1, R5868 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s1 [71, 74] { R5912 += 1, R5868 += 1, R3452 += 1 };
  s0 -> s2 [71, 65535] { R5912 += 1, R5868 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s3 [71, 65535] { R5912 += 1, R5868 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s1 [76, 65535] { R5912 += 1, R5868 += 1, R3452 += 1 };
  s1 -> s1 [0, 69] { R5912 += 1, R5868 += 1, R3452 += 1 };
  s1 -> s1 [0, 65535] { R5912 += 1 };
  s1 -> s11 [0, 65535];
  s1 -> s8 [70, 70] { R5912 += 1, R5868 += 1 };
  s1 -> s9 [70, 70] { R5912 += 1, R5868 += 1 };
  s1 -> s1 [71, 74] { R5912 += 1, R5868 += 1, R3452 += 1 };
  s1 -> s1 [71, 65535] { R5912 += 1, R5868 += 1 };
  s1 -> s1 [76, 65535] { R5912 += 1, R5868 += 1, R3452 += 1 };
  s2 -> s1 [0, 69] { R5912 += 1, R5868 += 1, R3452 += 1 };
  s2 -> s2 [0, 69] { R5912 += 1, R5868 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s5 [70, 70] { R5912 += 1, R5868 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s8 [70, 70] { R5912 += 1, R5868 += 1, R3452 += 1 };
  s2 -> s9 [70, 70] { R5912 += 1, R5868 += 1, R3452 += 1 };
  s2 -> s10 [70, 70] { R5912 += 1, R5868 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s1 [71, 74] { R5912 += 1, R5868 += 1, R3452 += 1 };
  s2 -> s2 [71, 65535] { R5912 += 1, R5868 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s1 [76, 65535] { R5912 += 1, R5868 += 1, R3452 += 1 };
  s3 -> s1 [0, 69] { R5912 += 1, R5868 += 1, R3452 += 1 };
  s3 -> s2 [0, 69] { R5912 += 1, R5868 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s3 [0, 69] { R5912 += 1, R5868 += 1, R3451 += 1, R3452 += 1 };
  s3 -> s5 [70, 70] { R5912 += 1, R5868 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s6 [70, 70] { R5912 += 1, R5868 += 1, R3451 += 1, R3452 += 1 };
  s3 -> s7 [70, 70] { R5912 += 1, R5868 += 1, R3451 += 1, R3452 += 1 };
  s3 -> s8 [70, 70] { R5912 += 1, R5868 += 1, R3452 += 1 };
  s3 -> s9 [70, 70] { R5912 += 1, R5868 += 1, R3452 += 1 };
  s3 -> s10 [70, 70] { R5912 += 1, R5868 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s1 [71, 74] { R5912 += 1, R5868 += 1, R3452 += 1 };
  s3 -> s2 [71, 65535] { R5912 += 1, R5868 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s3 [71, 65535] { R5912 += 1, R5868 += 1, R3451 += 1, R3452 += 1 };
  s3 -> s1 [76, 65535] { R5912 += 1, R5868 += 1, R3452 += 1 };
  s4 -> s1 [0, 69] { R5912 += 1, R5868 += 1, R3452 += 1 };
  s4 -> s2 [0, 69] { R5912 += 1, R5868 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s3 [0, 69] { R5912 += 1, R5868 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s4 [0, 65535] { R5912 += 1, R5867 += 1, R5868 += 1 };
  s4 -> s5 [70, 70] { R5912 += 1, R5868 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s6 [70, 70] { R5912 += 1, R5868 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s7 [70, 70] { R5912 += 1, R5868 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s8 [70, 70] { R5912 += 1, R5868 += 1, R3452 += 1 };
  s4 -> s9 [70, 70] { R5912 += 1, R5868 += 1, R3452 += 1 };
  s4 -> s10 [70, 70] { R5912 += 1, R5868 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s1 [71, 74] { R5912 += 1, R5868 += 1, R3452 += 1 };
  s4 -> s2 [71, 65535] { R5912 += 1, R5868 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s3 [71, 65535] { R5912 += 1, R5868 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s1 [76, 65535] { R5912 += 1, R5868 += 1, R3452 += 1 };
  s7 -> s9 [0, 74] { R5912 += 1, R5868 += 1, R3452 += 1 };
  s7 -> s7 [0, 65535] { R5912 += 1, R5868 += 1, R3451 += 1, R3452 += 1 };
  s7 -> s10 [0, 65535] { R5912 += 1, R5868 += 1, R3452 += 1, R3453 += 1 };
  s7 -> s9 [76, 65535] { R5912 += 1, R5868 += 1, R3452 += 1 };
  s8 -> s11 [0, 65535];
  s8 -> s8 [0, 65535] { R5912 += 1 };
  s9 -> s9 [0, 74] { R5912 += 1, R5868 += 1, R3452 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s12 [0, 65535] { R5912 += 1 };
  s9 -> s9 [0, 65535] { R5912 += 1, R5868 += 1 };
  s9 -> s9 [76, 65535] { R5912 += 1, R5868 += 1, R3452 += 1 };
  s10 -> s9 [0, 74] { R5912 += 1, R5868 += 1, R3452 += 1 };
  s10 -> s10 [0, 65535] { R5912 += 1, R5868 += 1, R3452 += 1, R3453 += 1 };
  s10 -> s9 [76, 65535] { R5912 += 1, R5868 += 1, R3452 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R5912 += 1 };
  accepting s12, s8, s9, s1, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R5914 += 1, R5870 += 1, R5690 += 1, R5692 += 1 };
  s0 -> s2 [0, 69] { R5914 += 1, R5870 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s0 -> s3 [0, 69] { R5914 += 1, R5870 += 1, R5689 += 1, R5690 += 1 };
  s0 -> s4 [0, 65535] { R5914 += 1, R5869 += 1, R5870 += 1 };
  s0 -> s0 [0, 65535] { R5913 += 1, R5914 += 1 };
  s0 -> s5 [70, 70] { R5914 += 1, R5870 += 1, R5689 += 1, R5690 += 1 };
  s0 -> s6 [70, 70] { R5914 += 1, R5870 += 1, R5690 += 1, R5692 += 1 };
  s0 -> s7 [70, 70] { R5914 += 1, R5870 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s0 -> s8 [70, 70] { R5914 += 1, R5870 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s0 -> s9 [70, 70] { R5914 += 1, R5870 += 1, R5689 += 1, R5690 += 1 };
  s0 -> s10 [70, 70] { R5914 += 1, R5870 += 1, R5690 += 1, R5692 += 1 };
  s0 -> s1 [71, 74] { R5914 += 1, R5870 += 1, R5690 += 1, R5692 += 1 };
  s0 -> s2 [71, 65535] { R5914 += 1, R5870 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s0 -> s3 [71, 65535] { R5914 += 1, R5870 += 1, R5689 += 1, R5690 += 1 };
  s0 -> s1 [76, 65535] { R5914 += 1, R5870 += 1, R5690 += 1, R5692 += 1 };
  s1 -> s1 [0, 69] { R5914 += 1, R5870 += 1, R5690 += 1, R5692 += 1 };
  s1 -> s1 [0, 65535] { R5914 += 1 };
  s1 -> s11 [0, 65535];
  s1 -> s6 [70, 70] { R5914 += 1, R5870 += 1, R5690 += 1, R5692 += 1 };
  s1 -> s10 [70, 70] { R5914 += 1, R5870 += 1, R5690 += 1, R5692 += 1 };
  s1 -> s1 [71, 74] { R5914 += 1, R5870 += 1, R5690 += 1, R5692 += 1 };
  s1 -> s1 [76, 65535] { R5914 += 1, R5870 += 1, R5690 += 1, R5692 += 1 };
  s2 -> s1 [0, 69] { R5914 += 1, R5870 += 1, R5690 += 1, R5692 += 1 };
  s2 -> s2 [0, 69] { R5914 += 1, R5870 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s2 -> s6 [70, 70] { R5914 += 1, R5870 += 1, R5690 += 1, R5692 += 1 };
  s2 -> s7 [70, 70] { R5914 += 1, R5870 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s2 -> s8 [70, 70] { R5914 += 1, R5870 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s2 -> s10 [70, 70] { R5914 += 1, R5870 += 1, R5690 += 1, R5692 += 1 };
  s2 -> s1 [71, 74] { R5914 += 1, R5870 += 1, R5690 += 1, R5692 += 1 };
  s2 -> s2 [71, 65535] { R5914 += 1, R5870 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s2 -> s1 [76, 65535] { R5914 += 1, R5870 += 1, R5690 += 1, R5692 += 1 };
  s3 -> s1 [0, 69] { R5914 += 1, R5870 += 1, R5690 += 1, R5692 += 1 };
  s3 -> s2 [0, 69] { R5914 += 1, R5870 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s3 -> s3 [0, 69] { R5914 += 1, R5870 += 1, R5689 += 1, R5690 += 1 };
  s3 -> s5 [70, 70] { R5914 += 1, R5870 += 1, R5689 += 1, R5690 += 1 };
  s3 -> s6 [70, 70] { R5914 += 1, R5870 += 1, R5690 += 1, R5692 += 1 };
  s3 -> s7 [70, 70] { R5914 += 1, R5870 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s3 -> s8 [70, 70] { R5914 += 1, R5870 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s3 -> s9 [70, 70] { R5914 += 1, R5870 += 1, R5689 += 1, R5690 += 1 };
  s3 -> s10 [70, 70] { R5914 += 1, R5870 += 1, R5690 += 1, R5692 += 1 };
  s3 -> s1 [71, 74] { R5914 += 1, R5870 += 1, R5690 += 1, R5692 += 1 };
  s3 -> s2 [71, 65535] { R5914 += 1, R5870 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s3 -> s3 [71, 65535] { R5914 += 1, R5870 += 1, R5689 += 1, R5690 += 1 };
  s3 -> s1 [76, 65535] { R5914 += 1, R5870 += 1, R5690 += 1, R5692 += 1 };
  s4 -> s1 [0, 69] { R5914 += 1, R5870 += 1, R5690 += 1, R5692 += 1 };
  s4 -> s2 [0, 69] { R5914 += 1, R5870 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s4 -> s3 [0, 69] { R5914 += 1, R5870 += 1, R5689 += 1, R5690 += 1 };
  s4 -> s4 [0, 65535] { R5914 += 1, R5869 += 1, R5870 += 1 };
  s4 -> s5 [70, 70] { R5914 += 1, R5870 += 1, R5689 += 1, R5690 += 1 };
  s4 -> s6 [70, 70] { R5914 += 1, R5870 += 1, R5690 += 1, R5692 += 1 };
  s4 -> s7 [70, 70] { R5914 += 1, R5870 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s4 -> s8 [70, 70] { R5914 += 1, R5870 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s4 -> s9 [70, 70] { R5914 += 1, R5870 += 1, R5689 += 1, R5690 += 1 };
  s4 -> s10 [70, 70] { R5914 += 1, R5870 += 1, R5690 += 1, R5692 += 1 };
  s4 -> s1 [71, 74] { R5914 += 1, R5870 += 1, R5690 += 1, R5692 += 1 };
  s4 -> s2 [71, 65535] { R5914 += 1, R5870 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s4 -> s3 [71, 65535] { R5914 += 1, R5870 += 1, R5689 += 1, R5690 += 1 };
  s4 -> s1 [76, 65535] { R5914 += 1, R5870 += 1, R5690 += 1, R5692 += 1 };
  s6 -> s6 [0, 74] { R5914 += 1, R5870 += 1, R5690 += 1, R5692 += 1 };
  s6 -> s6 [0, 65535] { R5914 += 1 };
  s6 -> s11 [0, 65535];
  s6 -> s6 [76, 65535] { R5914 += 1, R5870 += 1, R5690 += 1, R5692 += 1 };
  s7 -> s6 [0, 74] { R5914 += 1, R5870 += 1, R5690 += 1, R5692 += 1 };
  s7 -> s7 [0, 65535] { R5914 += 1, R5870 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s7 -> s6 [76, 65535] { R5914 += 1, R5870 += 1, R5690 += 1, R5692 += 1 };
  s9 -> s6 [0, 74] { R5914 += 1, R5870 += 1, R5690 += 1, R5692 += 1 };
  s9 -> s7 [0, 65535] { R5914 += 1, R5870 += 1, R5690 += 1, R5691 += 1, R5692 += 1 };
  s9 -> s9 [0, 65535] { R5914 += 1, R5870 += 1, R5689 += 1, R5690 += 1 };
  s9 -> s6 [76, 65535] { R5914 += 1, R5870 += 1, R5690 += 1, R5692 += 1 };
  s10 -> s11 [0, 65535];
  s10 -> s10 [0, 65535] { R5914 += 1 };
  s11 -> s11 [0, 65535];
  accepting s1, s6, s10, s11;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R5916 += 1, R5872 += 1, R5808 += 1, R5809 += 1, R5810 += 1 };
  s0 -> s2 [0, 69] { R5916 += 1, R5872 += 1, R5808 += 1, R5810 += 1, R5811 += 1 };
  s0 -> s3 [0, 69] { R5916 += 1, R5872 += 1, R5807 += 1, R5808 += 1 };
  s0 -> s0 [0, 65535] { R5915 += 1, R5916 += 1 };
  s0 -> s4 [0, 65535] { R5916 += 1, R5871 += 1, R5872 += 1 };
  s0 -> s5 [70, 70] { R5916 += 1, R5872 += 1, R5808 += 1, R5810 += 1, R5811 += 1 };
  s0 -> s6 [70, 70] { R5916 += 1, R5872 += 1, R5808 += 1, R5810 += 1, R5811 += 1 };
  s0 -> s7 [70, 70] { R5916 += 1, R5872 += 1, R5807 += 1, R5808 += 1 };
  s0 -> s8 [70, 70] { R5916 += 1, R5872 += 1, R5808 += 1, R5809 += 1, R5810 += 1 };
  s0 -> s9 [70, 70] { R5916 += 1, R5872 += 1, R5808 += 1, R5809 += 1, R5810 += 1 };
  s0 -> s10 [70, 70] { R5916 += 1, R5872 += 1, R5807 += 1, R5808 += 1 };
  s0 -> s1 [71, 65535] { R5916 += 1, R5872 += 1, R5808 += 1, R5809 += 1, R5810 += 1 };
  s0 -> s2 [71, 65535] { R5916 += 1, R5872 += 1, R5808 += 1, R5810 += 1, R5811 += 1 };
  s0 -> s3 [71, 65535] { R5916 += 1, R5872 += 1, R5807 += 1, R5808 += 1 };
  s1 -> s1 [0, 69] { R5916 += 1, R5872 += 1, R5808 += 1, R5809 += 1, R5810 += 1 };
  s1 -> s2 [0, 69] { R5916 += 1, R5872 += 1, R5808 += 1, R5810 += 1, R5811 += 1 };
  s1 -> s16 [0, 69] { R5916 += 1, R5872 += 1 };
  s1 -> s5 [70, 70] { R5916 += 1, R5872 += 1, R5808 += 1, R5810 += 1, R5811 += 1 };
  s1 -> s6 [70, 70] { R5916 += 1, R5872 += 1, R5808 += 1, R5810 += 1, R5811 += 1 };
  s1 -> s8 [70, 70] { R5916 += 1, R5872 += 1, R5808 += 1, R5809 += 1, R5810 += 1 };
  s1 -> s11 [70, 70] { R5916 += 1, R5872 += 1 };
  s1 -> s9 [70, 70] { R5916 += 1, R5872 += 1, R5808 += 1, R5809 += 1, R5810 += 1 };
  s1 -> s18 [70, 70] { R5916 += 1, R5872 += 1 };
  s1 -> s1 [71, 65535] { R5916 += 1, R5872 += 1, R5808 += 1, R5809 += 1, R5810 += 1 };
  s1 -> s2 [71, 65535] { R5916 += 1, R5872 += 1, R5808 += 1, R5810 += 1, R5811 += 1 };
  s1 -> s16 [71, 65535] { R5916 += 1, R5872 += 1 };
  s2 -> s15 [0, 69] { R5916 += 1, R5872 += 1, R5808 += 1 };
  s2 -> s2 [0, 69] { R5916 += 1, R5872 += 1, R5808 += 1, R5810 += 1, R5811 += 1 };
  s2 -> s16 [0, 69] { R5916 += 1, R5872 += 1 };
  s2 -> s5 [70, 70] { R5916 += 1, R5872 += 1, R5808 += 1, R5810 += 1, R5811 += 1 };
  s2 -> s6 [70, 70] { R5916 += 1, R5872 += 1, R5808 += 1, R5810 += 1, R5811 += 1 };
  s2 -> s14 [70, 70] { R5916 += 1, R5872 += 1, R5808 += 1 };
  s2 -> s11 [70, 70] { R5916 += 1, R5872 += 1 };
  s2 -> s17 [70, 70] { R5916 += 1, R5872 += 1, R5808 += 1 };
  s2 -> s18 [70, 70] { R5916 += 1, R5872 += 1 };
  s2 -> s15 [71, 65535] { R5916 += 1, R5872 += 1, R5808 += 1 };
  s2 -> s2 [71, 65535] { R5916 += 1, R5872 += 1, R5808 += 1, R5810 += 1, R5811 += 1 };
  s2 -> s16 [71, 65535] { R5916 += 1, R5872 += 1 };
  s3 -> s1 [0, 69] { R5916 += 1, R5872 += 1, R5808 += 1, R5809 += 1, R5810 += 1 };
  s3 -> s2 [0, 69] { R5916 += 1, R5872 += 1, R5808 += 1, R5810 += 1, R5811 += 1 };
  s3 -> s3 [0, 69] { R5916 += 1, R5872 += 1, R5807 += 1, R5808 += 1 };
  s3 -> s5 [70, 70] { R5916 += 1, R5872 += 1, R5808 += 1, R5810 += 1, R5811 += 1 };
  s3 -> s6 [70, 70] { R5916 += 1, R5872 += 1, R5808 += 1, R5810 += 1, R5811 += 1 };
  s3 -> s7 [70, 70] { R5916 += 1, R5872 += 1, R5807 += 1, R5808 += 1 };
  s3 -> s8 [70, 70] { R5916 += 1, R5872 += 1, R5808 += 1, R5809 += 1, R5810 += 1 };
  s3 -> s9 [70, 70] { R5916 += 1, R5872 += 1, R5808 += 1, R5809 += 1, R5810 += 1 };
  s3 -> s10 [70, 70] { R5916 += 1, R5872 += 1, R5807 += 1, R5808 += 1 };
  s3 -> s1 [71, 65535] { R5916 += 1, R5872 += 1, R5808 += 1, R5809 += 1, R5810 += 1 };
  s3 -> s2 [71, 65535] { R5916 += 1, R5872 += 1, R5808 += 1, R5810 += 1, R5811 += 1 };
  s3 -> s3 [71, 65535] { R5916 += 1, R5872 += 1, R5807 += 1, R5808 += 1 };
  s4 -> s1 [0, 69] { R5916 += 1, R5872 += 1, R5808 += 1, R5809 += 1, R5810 += 1 };
  s4 -> s2 [0, 69] { R5916 += 1, R5872 += 1, R5808 += 1, R5810 += 1, R5811 += 1 };
  s4 -> s3 [0, 69] { R5916 += 1, R5872 += 1, R5807 += 1, R5808 += 1 };
  s4 -> s4 [0, 65535] { R5916 += 1, R5871 += 1, R5872 += 1 };
  s4 -> s5 [70, 70] { R5916 += 1, R5872 += 1, R5808 += 1, R5810 += 1, R5811 += 1 };
  s4 -> s6 [70, 70] { R5916 += 1, R5872 += 1, R5808 += 1, R5810 += 1, R5811 += 1 };
  s4 -> s7 [70, 70] { R5916 += 1, R5872 += 1, R5807 += 1, R5808 += 1 };
  s4 -> s8 [70, 70] { R5916 += 1, R5872 += 1, R5808 += 1, R5809 += 1, R5810 += 1 };
  s4 -> s9 [70, 70] { R5916 += 1, R5872 += 1, R5808 += 1, R5809 += 1, R5810 += 1 };
  s4 -> s10 [70, 70] { R5916 += 1, R5872 += 1, R5807 += 1, R5808 += 1 };
  s4 -> s1 [71, 65535] { R5916 += 1, R5872 += 1, R5808 += 1, R5809 += 1, R5810 += 1 };
  s4 -> s2 [71, 65535] { R5916 += 1, R5872 += 1, R5808 += 1, R5810 += 1, R5811 += 1 };
  s4 -> s3 [71, 65535] { R5916 += 1, R5872 += 1, R5807 += 1, R5808 += 1 };
  s5 -> s5 [0, 65535] { R5916 += 1, R5872 += 1, R5808 += 1, R5810 += 1, R5811 += 1 };
  s5 -> s14 [0, 65535] { R5916 += 1, R5872 += 1, R5808 += 1 };
  s5 -> s11 [0, 65535] { R5916 += 1, R5872 += 1 };
  s8 -> s5 [0, 65535] { R5916 += 1, R5872 += 1, R5808 += 1, R5810 += 1, R5811 += 1 };
  s8 -> s8 [0, 65535] { R5916 += 1, R5872 += 1, R5808 += 1, R5809 += 1, R5810 += 1 };
  s8 -> s11 [0, 65535] { R5916 += 1, R5872 += 1 };
  s10 -> s5 [0, 65535] { R5916 += 1, R5872 += 1, R5808 += 1, R5810 += 1, R5811 += 1 };
  s10 -> s8 [0, 65535] { R5916 += 1, R5872 += 1, R5808 += 1, R5809 += 1, R5810 += 1 };
  s10 -> s10 [0, 65535] { R5916 += 1, R5872 += 1, R5807 += 1, R5808 += 1 };
  s11 -> s12 [0, 65535] { R5916 += 1 };
  s11 -> s11 [0, 65535] { R5916 += 1, R5872 += 1 };
  s11 -> s13 [0, 65535];
  s12 -> s12 [0, 65535] { R5916 += 1 };
  s12 -> s13 [0, 65535];
  s13 -> s13 [0, 65535];
  s14 -> s14 [0, 65535] { R5916 += 1, R5872 += 1, R5808 += 1 };
  s14 -> s11 [0, 65535] { R5916 += 1, R5872 += 1 };
  s15 -> s15 [0, 69] { R5916 += 1, R5872 += 1, R5808 += 1 };
  s15 -> s16 [0, 69] { R5916 += 1, R5872 += 1 };
  s15 -> s14 [70, 70] { R5916 += 1, R5872 += 1, R5808 += 1 };
  s15 -> s11 [70, 70] { R5916 += 1, R5872 += 1 };
  s15 -> s17 [70, 70] { R5916 += 1, R5872 += 1, R5808 += 1 };
  s15 -> s18 [70, 70] { R5916 += 1, R5872 += 1 };
  s15 -> s15 [71, 65535] { R5916 += 1, R5872 += 1, R5808 += 1 };
  s15 -> s16 [71, 65535] { R5916 += 1, R5872 += 1 };
  s16 -> s16 [0, 69] { R5916 += 1, R5872 += 1 };
  s16 -> s13 [0, 65535];
  s16 -> s16 [0, 65535] { R5916 += 1 };
  s16 -> s11 [70, 70] { R5916 += 1, R5872 += 1 };
  s16 -> s18 [70, 70] { R5916 += 1, R5872 += 1 };
  s16 -> s16 [71, 65535] { R5916 += 1, R5872 += 1 };
  s18 -> s13 [0, 65535];
  s18 -> s18 [0, 65535] { R5916 += 1 };
  accepting s16, s12, s13, s18, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R5834 && R3 = R5916 && R23 - R5916 = -1 && R24 = R5916 && R25 - R5916 = -1 && R26 = R5916 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R5694 + -1*R5690 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R5694 + -1*R5690 - R66 = 0 && R55 + R96 + R93 + -1*R5696 + -1*R5692 - R68 = 0 && R65 + R5693 + R5689 = 0 && R67 + R5695 + R5691 = 0 && R5833 = 0 && R5857 = 0 && R5858 = 0 && R5863 = 0 && R5864 = 0 && R5867 = 0 && R5868 = 0 && R5869 = 0 && R5870 = 0 && R5871 = 0 && R5872 = 0 && R5873 = 0 && R5874 = R5916 && R5875 = 0 && R5876 = R5916 && R5877 = 0 && R5878 = R5916 && R5879 = 0 && R5880 = R5916 && R5881 = 0 && R5882 = R5916 && R5883 = 0 && R5884 = R5916 && R5885 = 0 && R5886 = R5916 && R5887 = 0 && R5888 = R5916 && R5889 = 0 && R5890 = R5916 && R5891 = 0 && R5892 = R5916 && R5893 = 0 && R5894 = R5916 && R5895 = 0 && R5896 = R5916 && R5897 = 0 && R5898 = R5916 && R5899 = 0 && R5900 = R5916 && R5901 = 0 && R5902 = R5916 && R5903 = 0 && R5904 = R5916 && R5905 = 0 && R5906 = R5916 && R5907 = 0 && R5908 = R5916 && R5909 = 0 && R5910 = R5916 && R5911 = 0 && R5912 = R5916 && R5913 = 0 && R5914 = R5916 && R5915 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R3456 + R3453 < 1 && -1*R5694 + -1*R5690 - R66 < 1 && -1*R5696 + -1*R5692 - R68 < 1 && -1 < R5834 && 0 < R5916 && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R5694 + -1*R5690 - R66 = 0 || R66 + R5694 + R5690 < 1) && (R59 + R3454 + R3451 != 0 || R60 + R3455 + R3452 + -1*R5694 + -1*R5690 - R66 = 0 || R66 + R5694 + R5690 < 1) && (R66 + R5694 + R5690 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R5696 + R5692 < 1) && (R53 + R94 + R91 = 0 || R68 + R5696 + R5692 < 1))) && (R66 + R5694 + R5690 != 0 || ((R59 + R3454 + R3451 != 0 || R60 + R3455 + R3452 = 0 || R68 + R5696 + R5692 < 1) && (R59 + R3454 + R3451 = 0 || R68 + R5696 + R5692 < 1))) && (R66 + R5694 + R5690 != 0 || ((R73 + R5812 + R5807 != 0 || R74 + R5813 + R5808 = 0 || R68 + R5696 + R5692 < 1) && (R73 + R5812 + R5807 = 0 || R68 + R5696 + R5692 < 1))) && (R68 + R5696 + R5692 != 0 || R77 + R5816 + R5811 = 0 || (R75 + R5814 + R5809 = 0 && R76 + R5815 + R5810 = 0)) && (R73 + R5812 + R5807 != 0 || R66 + R5694 + R5690 + -1*R5813 + -1*R5808 - R74 = 0 || R66 + R5694 + R5690 < 1) && (R75 + R5814 + R5809 != 0 || R68 + R5696 + R5692 + -1*R5815 + -1*R5810 - R76 = 0 || R68 + R5696 + R5692 < 1) && (R5817 != 0 || R5818 = R5834 || (R20 = 0 && R5834 = 0)) && (R5819 != 0 || R5820 = R5834 || (R20 = 0 && R5834 = 0)) && (R5821 != 0 || R5822 = R5834 || (R20 = 0 && R5834 = 0)) && (R5823 != 0 || R5824 = R5834 || (R20 = 0 && R5834 = 0)) && (R5825 != 0 || R5826 = R5834 || (R20 = 0 && R5834 = 0)) && (R5827 != 0 || R5828 = R5834 || (R20 = 0 && R5834 = 0)) && (R5829 != 0 || R5830 = R5834 || (R20 = 0 && R5834 = 0)) && (R5831 != 0 || R5832 = R5834 || (R20 = 0 && R5834 = 0)) && (R5835 != 0 || R5834 = R5836 || (R20 = 0 && R5834 = 0)) && (R21 = 0 || (R5855 = 0 && R5856 = 0)) && (R21 = 0 || (R5859 = 0 && R5860 = 0)) && (R21 = 0 || (R5861 = 0 && R5862 = 0)) && (R21 = 0 || (R5865 = 0 && R5866 = 0)) && (R22 = 0 || (R5837 = 0 && R5838 = 0)) && (R22 = 0 || (R5839 = 0 && R5840 = 0)) && (R22 = 0 || (R5841 = 0 && R5842 = 0)) && (R22 = 0 || (R5843 = 0 && R5844 = 0)) && (R22 = 0 || (R5845 = 0 && R5846 = 0)) && (R22 = 0 || (R5847 = 0 && R5848 = 0)) && (R22 = 0 || (R5849 = 0 && R5850 = 0)) && (R22 = 0 || (R5851 = 0 && R5852 = 0)) && (R22 = 0 || (R5853 = 0 && R5854 = 0)) && (R53 + R94 + R91 = 0 || R66 + R5694 + R5690 < 1) && (R59 + R3454 + R3451 = 0 || R66 + R5694 + R5690 < 1) && (R73 + R5812 + R5807 = 0 || R66 + R5694 + R5690 < 1) && (R75 + R5814 + R5809 = 0 || R68 + R5696 + R5692 < 1) && (R5817 = 0 || (R20 = 0 && R5834 = 0)) && (R5819 = 0 || (R20 = 0 && R5834 = 0)) && (R5821 = 0 || (R20 = 0 && R5834 = 0)) && (R5823 = 0 || (R20 = 0 && R5834 = 0)) && (R5825 = 0 || (R20 = 0 && R5834 = 0)) && (R5827 = 0 || (R20 = 0 && R5834 = 0)) && (R5829 = 0 || (R20 = 0 && R5834 = 0)) && (R5831 = 0 || (R20 = 0 && R5834 = 0)) && (R5835 = 0 || (R20 = 0 && R5834 = 0));
// End of Parikh automata intersection problem
