// Parikh automata intersection problem, generated by OSTRICH+
counter int R12, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R3451, R3452, R3453, R3454, R3455, R3456, R4, R45, R47, R49, R5, R50, R5131, R5132, R5133, R5134, R5135, R5136, R5137, R5138, R5139, R5140, R5141, R5142, R5143, R5144, R5145, R5146, R5147, R5148, R5149, R5150, R5151, R5152, R5153, R5154, R5155, R5156, R5157, R5158, R5159, R5160, R5161, R5162, R5163, R5164, R5165, R5166, R5167, R5168, R5169, R5170, R5171, R5172, R5173, R5174, R5175, R5176, R5177, R5178, R5179, R5180, R5181, R5182, R5183, R5184, R5185, R5186, R5187, R5188, R5189, R5190, R5191, R5192, R5193, R5194, R5195, R5196, R5197, R5198, R5199, R5200, R5201, R5202, R5203, R5204, R5205, R5206, R5207, R5208, R5209, R5210, R5211, R5212, R5213, R5214, R5215, R5216, R5217, R5218, R5219, R5220, R5221, R5222, R5223, R5224, R5225, R5226, R5227, R5228, R5229, R5230, R5231, R5232, R5233, R5234, R5235, R5236, R5237, R5238, R5239, R5240, R5241, R5242, R5243, R5244, R5245, R5246, R5247, R5248, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R5170 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R5169 += 1, R5170 += 1 };
  s1 -> s1 [0, 65535] { R5170 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R5172 += 1 };
  s0 -> s0 [0, 65535] { R5171 += 1, R5172 += 1 };
  s0 -> s2 [70, 70] { R5172 += 1 };
  s0 -> s3 [70, 70] { R5172 += 1 };
  s0 -> s1 [76, 65535] { R5172 += 1 };
  s1 -> s1 [0, 69] { R5172 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5172 += 1 };
  s1 -> s3 [70, 70] { R5172 += 1 };
  s1 -> s1 [76, 65535] { R5172 += 1 };
  s2 -> s2 [0, 70] { R5172 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R5172 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R5174 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R5173 += 1, R5174 += 1 };
  s0 -> s2 [70, 70] { R5174 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R5174 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R5174 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R5174 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5174 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R5174 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R5174 += 1, R45 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5174 += 1, R45 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R5176 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R5175 += 1, R5176 += 1 };
  s0 -> s2 [70, 70] { R5176 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R5176 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R5176 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R5176 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5176 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R5176 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R5176 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R5176 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R5178 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R5177 += 1, R5178 += 1 };
  s0 -> s2 [70, 70] { R5178 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R5178 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R5178 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R5178 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5178 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R5178 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R5178 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535] { R5178 += 1, R49 += 1, R50 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R5180 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R5179 += 1, R5180 += 1 };
  s0 -> s2 [70, 70] { R5180 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R5180 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R5180 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R5180 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5180 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R5180 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R5180 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R5180 += 1, R53 += 1, R54 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R5182 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R5181 += 1, R5182 += 1 };
  s0 -> s2 [70, 70] { R5182 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R5182 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R5182 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R5182 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5182 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R5182 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R5182 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535] { R5182 += 1, R59 += 1, R60 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R5184 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R5183 += 1, R5184 += 1 };
  s0 -> s2 [70, 70] { R5184 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R5184 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R5184 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R5184 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5184 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R5184 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R5184 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535] { R5184 += 1, R65 += 1, R66 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R5186 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R5185 += 1, R5186 += 1 };
  s0 -> s2 [70, 70] { R5186 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R5186 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R5186 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R5186 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5186 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R5186 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R5186 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5186 += 1, R73 += 1, R74 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R5206 += 1 };
  s0 -> s0 [0, 65535] { R5205 += 1, R5206 += 1 };
  s0 -> s2 [70, 70] { R5206 += 1 };
  s0 -> s1 [71, 65535] { R5206 += 1 };
  s1 -> s1 [0, 69] { R5206 += 1 };
  s1 -> s2 [70, 70] { R5206 += 1 };
  s1 -> s1 [71, 65535] { R5206 += 1 };
  s2 -> s2 [0, 65535] { R5206 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R5207 += 1, R5208 += 1 };
  s0 -> s1 [0, 65535] { R5208 += 1, R2 += 1 };
  s1 -> s1 [0, 65535] { R5208 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R5210 += 1 };
  s0 -> s0 [0, 65535] { R5209 += 1, R5210 += 1 };
  s0 -> s2 [0, 65535] { R5210 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R5210 += 1 };
  s0 -> s1 [71, 65535] { R5210 += 1 };
  s1 -> s1 [0, 69] { R5210 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R5210 += 1 };
  s1 -> s1 [71, 65535] { R5210 += 1 };
  s2 -> s1 [0, 69] { R5210 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R5210 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R5210 += 1 };
  s2 -> s1 [71, 65535] { R5210 += 1 };
  s3 -> s3 [0, 65535] { R5210 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R5212 += 1, R5150 += 1 };
  s0 -> s2 [0, 65535] { R5212 += 1, R5149 += 1, R5150 += 1 };
  s0 -> s0 [0, 65535] { R5211 += 1, R5212 += 1 };
  s0 -> s1 [71, 65535] { R5212 += 1, R5150 += 1 };
  s1 -> s1 [0, 69] { R5212 += 1, R5150 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R5212 += 1 };
  s1 -> s1 [71, 65535] { R5212 += 1, R5150 += 1 };
  s2 -> s1 [0, 69] { R5212 += 1, R5150 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5212 += 1, R5149 += 1, R5150 += 1 };
  s2 -> s1 [71, 65535] { R5212 += 1, R5150 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R5214 += 1, R5151 += 1, R5152 += 1 };
  s0 -> s2 [0, 65535] { R5214 += 1, R5152 += 1, R20 += 1 };
  s0 -> s0 [0, 65535] { R5213 += 1, R5214 += 1 };
  s1 -> s1 [0, 65535] { R5214 += 1, R5151 += 1, R5152 += 1 };
  s1 -> s2 [0, 65535] { R5214 += 1, R5152 += 1, R20 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R5214 += 1, R5152 += 1, R20 += 1 };
  s2 -> s3 [0, 65535] { R5214 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5214 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R5216 += 1, R5154 += 1 };
  s0 -> s0 [0, 65535] { R5215 += 1, R5216 += 1 };
  s0 -> s2 [0, 65535] { R5216 += 1, R5153 += 1, R5154 += 1 };
  s0 -> s1 [75, 65535] { R5216 += 1, R5154 += 1 };
  s1 -> s1 [0, 70] { R5216 += 1, R5154 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R5216 += 1 };
  s1 -> s1 [75, 65535] { R5216 += 1, R5154 += 1 };
  s2 -> s1 [0, 70] { R5216 += 1, R5154 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5216 += 1, R5153 += 1, R5154 += 1 };
  s2 -> s1 [75, 65535] { R5216 += 1, R5154 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R5218 += 1, R5156 += 1, R84 += 1 };
  s0 -> s0 [0, 65535] { R5217 += 1, R5218 += 1 };
  s0 -> s2 [0, 65535] { R5218 += 1, R5155 += 1, R5156 += 1 };
  s1 -> s1 [0, 65535] { R5218 += 1, R5156 += 1, R84 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R5218 += 1 };
  s2 -> s1 [0, 65535] { R5218 += 1, R5156 += 1, R84 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5218 += 1, R5155 += 1, R5156 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5218 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R5220 += 1, R5158 += 1 };
  s0 -> s0 [0, 65535] { R5219 += 1, R5220 += 1 };
  s0 -> s2 [0, 65535] { R5220 += 1, R5157 += 1, R5158 += 1 };
  s0 -> s3 [0, 65535] { R5220 += 1, R5158 += 1, R86 += 1 };
  s0 -> s1 [76, 65535] { R5220 += 1, R5158 += 1 };
  s1 -> s1 [0, 74] { R5220 += 1, R5158 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5220 += 1 };
  s1 -> s1 [76, 65535] { R5220 += 1, R5158 += 1 };
  s2 -> s1 [0, 74] { R5220 += 1, R5158 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5220 += 1, R5157 += 1, R5158 += 1 };
  s2 -> s3 [0, 65535] { R5220 += 1, R5158 += 1, R86 += 1 };
  s2 -> s1 [76, 65535] { R5220 += 1, R5158 += 1 };
  s3 -> s1 [0, 74] { R5220 += 1, R5158 += 1 };
  s3 -> s4 [0, 65535] { R5220 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5220 += 1, R5158 += 1, R86 += 1 };
  s3 -> s1 [76, 65535] { R5220 += 1, R5158 += 1 };
  s4 -> s4 [0, 65535] { R5220 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R5222 += 1, R5159 += 1, R5160 += 1 };
  s0 -> s2 [0, 65535] { R5222 += 1, R5160 += 1, R90 += 1 };
  s0 -> s0 [0, 65535] { R5221 += 1, R5222 += 1 };
  s0 -> s3 [0, 65535] { R5222 += 1, R5160 += 1 };
  s1 -> s1 [0, 65535] { R5222 += 1, R5159 += 1, R5160 += 1 };
  s1 -> s2 [0, 65535] { R5222 += 1, R5160 += 1, R90 += 1 };
  s1 -> s3 [0, 65535] { R5222 += 1, R5160 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s4 [0, 65535] { R5222 += 1 };
  s2 -> s2 [0, 65535] { R5222 += 1, R5160 += 1, R90 += 1 };
  s2 -> s3 [0, 65535] { R5222 += 1, R5160 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R5222 += 1 };
  s3 -> s3 [0, 65535] { R5222 += 1, R5160 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5222 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R5223 += 1, R5224 += 1 };
  s0 -> s1 [0, 65535] { R5224 += 1, R5162 += 1, R95 += 1, R96 += 1 };
  s0 -> s2 [0, 65535] { R5224 += 1, R5162 += 1, R94 += 1, R95 += 1 };
  s0 -> s3 [0, 65535] { R5224 += 1, R5161 += 1, R5162 += 1 };
  s1 -> s1 [0, 65535] { R5224 += 1, R5162 += 1, R95 += 1, R96 += 1 };
  s1 -> s5 [0, 65535] { R5224 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R5224 += 1, R5162 += 1 };
  s2 -> s1 [0, 65535] { R5224 += 1, R5162 += 1, R95 += 1, R96 += 1 };
  s2 -> s5 [0, 65535] { R5224 += 1 };
  s2 -> s2 [0, 65535] { R5224 += 1, R5162 += 1, R94 += 1, R95 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R5224 += 1, R5162 += 1, R95 += 1, R96 += 1 };
  s3 -> s2 [0, 65535] { R5224 += 1, R5162 += 1, R94 += 1, R95 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5224 += 1, R5161 += 1, R5162 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5224 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R5224 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R5224 += 1, R5162 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R5226 += 1, R5164 += 1, R3455 += 1 };
  s0 -> s0 [0, 65535] { R5225 += 1, R5226 += 1 };
  s0 -> s2 [0, 65535] { R5226 += 1, R5163 += 1, R5164 += 1 };
  s0 -> s1 [0, 65535] { R5226 += 1, R5164 += 1 };
  s0 -> s1 [76, 65535] { R5226 += 1, R5164 += 1, R3455 += 1 };
  s1 -> s1 [0, 74] { R5226 += 1, R5164 += 1, R3455 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R5226 += 1 };
  s1 -> s1 [0, 65535] { R5226 += 1, R5164 += 1 };
  s1 -> s1 [76, 65535] { R5226 += 1, R5164 += 1, R3455 += 1 };
  s2 -> s1 [0, 74] { R5226 += 1, R5164 += 1, R3455 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5226 += 1, R5163 += 1, R5164 += 1 };
  s2 -> s1 [0, 65535] { R5226 += 1, R5164 += 1 };
  s2 -> s1 [76, 65535] { R5226 += 1, R5164 += 1, R3455 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5226 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 74] { R5228 += 1, R5166 += 1, R5136 += 1, R5138 += 1 };
  s0 -> s0 [0, 65535] { R5227 += 1, R5228 += 1 };
  s0 -> s2 [0, 65535] { R5228 += 1, R5166 += 1, R5135 += 1, R5136 += 1 };
  s0 -> s3 [0, 65535] { R5228 += 1, R5166 += 1, R5136 += 1, R5137 += 1, R5138 += 1 };
  s0 -> s4 [0, 65535] { R5228 += 1, R5165 += 1, R5166 += 1 };
  s0 -> s5 [75, 75] { R5228 += 1, R5166 += 1, R5136 += 1, R5138 += 1 };
  s0 -> s1 [76, 65535] { R5228 += 1, R5166 += 1, R5136 += 1, R5138 += 1 };
  s1 -> s1 [0, 74] { R5228 += 1, R5166 += 1, R5136 += 1, R5138 += 1 };
  s1 -> s5 [75, 75] { R5228 += 1, R5166 += 1, R5136 += 1, R5138 += 1 };
  s1 -> s1 [76, 65535] { R5228 += 1, R5166 += 1, R5136 += 1, R5138 += 1 };
  s2 -> s1 [0, 74] { R5228 += 1, R5166 += 1, R5136 += 1, R5138 += 1 };
  s2 -> s2 [0, 65535] { R5228 += 1, R5166 += 1, R5135 += 1, R5136 += 1 };
  s2 -> s3 [0, 65535] { R5228 += 1, R5166 += 1, R5136 += 1, R5137 += 1, R5138 += 1 };
  s2 -> s5 [75, 75] { R5228 += 1, R5166 += 1, R5136 += 1, R5138 += 1 };
  s2 -> s1 [76, 65535] { R5228 += 1, R5166 += 1, R5136 += 1, R5138 += 1 };
  s3 -> s1 [0, 74] { R5228 += 1, R5166 += 1, R5136 += 1, R5138 += 1 };
  s3 -> s3 [0, 65535] { R5228 += 1, R5166 += 1, R5136 += 1, R5137 += 1, R5138 += 1 };
  s3 -> s5 [75, 75] { R5228 += 1, R5166 += 1, R5136 += 1, R5138 += 1 };
  s3 -> s1 [76, 65535] { R5228 += 1, R5166 += 1, R5136 += 1, R5138 += 1 };
  s4 -> s1 [0, 74] { R5228 += 1, R5166 += 1, R5136 += 1, R5138 += 1 };
  s4 -> s2 [0, 65535] { R5228 += 1, R5166 += 1, R5135 += 1, R5136 += 1 };
  s4 -> s3 [0, 65535] { R5228 += 1, R5166 += 1, R5136 += 1, R5137 += 1, R5138 += 1 };
  s4 -> s4 [0, 65535] { R5228 += 1, R5165 += 1, R5166 += 1 };
  s4 -> s5 [75, 75] { R5228 += 1, R5166 += 1, R5136 += 1, R5138 += 1 };
  s4 -> s1 [76, 65535] { R5228 += 1, R5166 += 1, R5136 += 1, R5138 += 1 };
  s5 -> s5 [0, 65535] { R5228 += 1, R5166 += 1, R5136 += 1, R5138 += 1 };
  s5 -> s6 [0, 65535] { R5228 += 1, R5166 += 1 };
  s5 -> s7 [0, 65535] { R5228 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s9 [0, 65535] { R5228 += 1, R5166 += 1, R5136 += 1 };
  s6 -> s6 [0, 65535] { R5228 += 1, R5166 += 1 };
  s6 -> s7 [0, 65535] { R5228 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R5228 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s6 [0, 65535] { R5228 += 1, R5166 += 1 };
  s9 -> s7 [0, 65535] { R5228 += 1 };
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R5228 += 1, R5166 += 1, R5136 += 1 };
  accepting s8, s5, s9, s6, s7;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R5230 += 1, R5167 += 1, R5168 += 1 };
  s0 -> s0 [0, 65535] { R5229 += 1, R5230 += 1 };
  s0 -> s2 [0, 65535] { R5230 += 1, R5168 += 1 };
  s0 -> s3 [0, 65535] { R5230 += 1, R5168 += 1, R5145 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5230 += 1, R5167 += 1, R5168 += 1 };
  s1 -> s2 [0, 65535] { R5230 += 1, R5168 += 1 };
  s1 -> s3 [0, 65535] { R5230 += 1, R5168 += 1, R5145 += 1 };
  s2 -> s4 [0, 65535] { R5230 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5230 += 1, R5168 += 1 };
  s3 -> s4 [0, 65535] { R5230 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R5230 += 1, R5168 += 1 };
  s3 -> s3 [0, 65535] { R5230 += 1, R5168 += 1, R5145 += 1 };
  s4 -> s4 [0, 65535] { R5230 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R5232 += 1, R5188 += 1, R21 += 1 };
  s0 -> s2 [0, 65535] { R5232 += 1, R5187 += 1, R5188 += 1 };
  s0 -> s0 [0, 65535] { R5231 += 1, R5232 += 1 };
  s1 -> s1 [0, 65535] { R5232 += 1, R5188 += 1, R21 += 1 };
  s1 -> s4 [0, 65535] { R5232 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R5232 += 1, R5188 += 1, R21 += 1 };
  s2 -> s2 [0, 65535] { R5232 += 1, R5187 += 1, R5188 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5232 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R5234 += 1, R5190 += 1 };
  s0 -> s0 [0, 65535] { R5233 += 1, R5234 += 1 };
  s0 -> s2 [0, 65535] { R5234 += 1, R5189 += 1, R5190 += 1 };
  s0 -> s3 [70, 70] { R5234 += 1, R5190 += 1 };
  s0 -> s4 [70, 70] { R5234 += 1, R5190 += 1 };
  s0 -> s5 [75, 75] { R5234 += 1, R5190 += 1 };
  s0 -> s1 [76, 65535] { R5234 += 1, R5190 += 1 };
  s1 -> s1 [0, 69] { R5234 += 1, R5190 += 1 };
  s1 -> s3 [70, 70] { R5234 += 1, R5190 += 1 };
  s1 -> s4 [70, 70] { R5234 += 1, R5190 += 1 };
  s1 -> s5 [75, 75] { R5234 += 1, R5190 += 1 };
  s1 -> s1 [76, 65535] { R5234 += 1, R5190 += 1 };
  s2 -> s1 [0, 69] { R5234 += 1, R5190 += 1 };
  s2 -> s2 [0, 65535] { R5234 += 1, R5189 += 1, R5190 += 1 };
  s2 -> s3 [70, 70] { R5234 += 1, R5190 += 1 };
  s2 -> s4 [70, 70] { R5234 += 1, R5190 += 1 };
  s2 -> s5 [75, 75] { R5234 += 1, R5190 += 1 };
  s2 -> s1 [76, 65535] { R5234 += 1, R5190 += 1 };
  s4 -> s4 [0, 70] { R5234 += 1, R5190 += 1 };
  s4 -> s7 [75, 75] { R5234 += 1, R5190 += 1 };
  s4 -> s4 [76, 65535] { R5234 += 1, R5190 += 1 };
  s5 -> s5 [0, 69] { R5234 += 1, R5190 += 1 };
  s5 -> s5 [0, 65535] { R5234 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R5234 += 1, R5190 += 1 };
  s5 -> s8 [70, 70] { R5234 += 1, R5190 += 1 };
  s5 -> s5 [75, 65535] { R5234 += 1, R5190 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R5234 += 1, R5190 += 1 };
  s7 -> s7 [0, 65535] { R5234 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R5234 += 1, R5190 += 1 };
  s8 -> s8 [0, 65535] { R5234 += 1 };
  s8 -> s6 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R5236 += 1, R5192 += 1, R83 += 1 };
  s0 -> s2 [0, 65535] { R5236 += 1, R5191 += 1, R5192 += 1 };
  s0 -> s0 [0, 65535] { R5235 += 1, R5236 += 1 };
  s0 -> s3 [70, 70] { R5236 += 1, R5192 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R5236 += 1, R5192 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R5236 += 1, R5192 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R5236 += 1, R5192 += 1, R83 += 1 };
  s1 -> s1 [0, 65535] { R5236 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R5236 += 1, R5192 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R5236 += 1, R5192 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R5236 += 1, R5192 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R5236 += 1, R5192 += 1, R83 += 1 };
  s2 -> s2 [0, 65535] { R5236 += 1, R5191 += 1, R5192 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R5236 += 1, R5192 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R5236 += 1, R5192 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R5236 += 1, R5192 += 1, R83 += 1 };
  s3 -> s3 [0, 65535] { R5236 += 1, R5192 += 1, R83 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R5236 += 1 };
  s4 -> s4 [0, 65535] { R5236 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5236 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R5238 += 1, R5194 += 1, R85 += 1 };
  s0 -> s2 [0, 65535] { R5238 += 1, R5193 += 1, R5194 += 1 };
  s0 -> s0 [0, 65535] { R5237 += 1, R5238 += 1 };
  s0 -> s3 [70, 70] { R5238 += 1, R5194 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R5238 += 1, R5194 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R5238 += 1, R5194 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R5238 += 1, R5194 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R5238 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R5238 += 1, R5194 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R5238 += 1, R5194 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R5238 += 1, R5194 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R5238 += 1, R5194 += 1, R85 += 1 };
  s2 -> s2 [0, 65535] { R5238 += 1, R5193 += 1, R5194 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R5238 += 1, R5194 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R5238 += 1, R5194 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R5238 += 1, R5194 += 1, R85 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R5238 += 1 };
  s4 -> s5 [0, 65535] { R5238 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R5238 += 1, R5194 += 1, R85 += 1 };
  s5 -> s5 [0, 65535] { R5238 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R5240 += 1, R5196 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R5240 += 1, R5196 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R5239 += 1, R5240 += 1 };
  s0 -> s3 [0, 65535] { R5240 += 1, R5195 += 1, R5196 += 1 };
  s0 -> s4 [70, 70] { R5240 += 1, R5196 += 1, R87 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R5240 += 1, R5196 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R5240 += 1, R5196 += 1, R87 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R5240 += 1, R5196 += 1, R88 += 1 };
  s0 -> s1 [71, 74] { R5240 += 1, R5196 += 1, R88 += 1 };
  s0 -> s2 [71, 65535] { R5240 += 1, R5196 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R5240 += 1, R5196 += 1, R88 += 1 };
  s0 -> s1 [76, 65535] { R5240 += 1, R5196 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R5240 += 1, R5196 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R5240 += 1, R5196 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R5240 += 1, R5196 += 1, R88 += 1 };
  s1 -> s1 [71, 74] { R5240 += 1, R5196 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R5240 += 1, R5196 += 1, R88 += 1 };
  s1 -> s1 [76, 65535] { R5240 += 1, R5196 += 1, R88 += 1 };
  s2 -> s1 [0, 69] { R5240 += 1, R5196 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R5240 += 1, R5196 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R5240 += 1, R5196 += 1, R87 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R5240 += 1, R5196 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R5240 += 1, R5196 += 1, R87 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R5240 += 1, R5196 += 1, R88 += 1 };
  s2 -> s1 [71, 74] { R5240 += 1, R5196 += 1, R88 += 1 };
  s2 -> s2 [71, 65535] { R5240 += 1, R5196 += 1, R87 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R5240 += 1, R5196 += 1, R88 += 1 };
  s2 -> s1 [76, 65535] { R5240 += 1, R5196 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R5240 += 1, R5196 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R5240 += 1, R5196 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R5240 += 1, R5195 += 1, R5196 += 1 };
  s3 -> s4 [70, 70] { R5240 += 1, R5196 += 1, R87 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R5240 += 1, R5196 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R5240 += 1, R5196 += 1, R87 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R5240 += 1, R5196 += 1, R88 += 1 };
  s3 -> s1 [71, 74] { R5240 += 1, R5196 += 1, R88 += 1 };
  s3 -> s2 [71, 65535] { R5240 += 1, R5196 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R5240 += 1, R5196 += 1, R88 += 1 };
  s3 -> s1 [76, 65535] { R5240 += 1, R5196 += 1, R88 += 1 };
  s4 -> s7 [0, 74] { R5240 += 1, R5196 += 1, R88 += 1 };
  s4 -> s4 [0, 65535] { R5240 += 1, R5196 += 1, R87 += 1, R88 += 1 };
  s4 -> s11 [75, 75] { R5240 += 1, R5196 += 1, R88 += 1 };
  s4 -> s7 [76, 65535] { R5240 += 1, R5196 += 1, R88 += 1 };
  s7 -> s7 [0, 74] { R5240 += 1, R5196 += 1, R88 += 1 };
  s7 -> s11 [75, 75] { R5240 += 1, R5196 += 1, R88 += 1 };
  s7 -> s7 [76, 65535] { R5240 += 1, R5196 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R5240 += 1, R5196 += 1, R88 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R5240 += 1 };
  s8 -> s10 [70, 70] { R5240 += 1, R5196 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R5240 += 1, R5196 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R5240 += 1, R5196 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R5240 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R5240 += 1, R5196 += 1, R88 += 1 };
  s11 -> s12 [0, 65535] { R5240 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R5240 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R5242 += 1, R5198 += 1, R91 += 1, R92 += 1 };
  s0 -> s2 [0, 65535] { R5242 += 1, R5197 += 1, R5198 += 1 };
  s0 -> s0 [0, 65535] { R5241 += 1, R5242 += 1 };
  s0 -> s3 [70, 70] { R5242 += 1, R5198 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R5242 += 1, R5198 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R5242 += 1, R5198 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R5242 += 1, R5198 += 1, R91 += 1, R92 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5242 += 1 };
  s1 -> s3 [70, 70] { R5242 += 1, R5198 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R5242 += 1, R5198 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R5242 += 1, R5198 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R5242 += 1, R5198 += 1, R91 += 1, R92 += 1 };
  s2 -> s2 [0, 65535] { R5242 += 1, R5197 += 1, R5198 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R5242 += 1, R5198 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R5242 += 1, R5198 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R5242 += 1, R5198 += 1, R91 += 1, R92 += 1 };
  s3 -> s3 [0, 65535] { R5242 += 1, R5198 += 1, R91 += 1, R92 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R5242 += 1 };
  s4 -> s4 [0, 65535] { R5242 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5242 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R5244 += 1, R5200 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s2 [0, 69] { R5244 += 1, R5200 += 1, R3452 += 1 };
  s0 -> s3 [0, 69] { R5244 += 1, R5200 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s0 [0, 65535] { R5243 += 1, R5244 += 1 };
  s0 -> s4 [0, 65535] { R5244 += 1, R5199 += 1, R5200 += 1 };
  s0 -> s5 [70, 70] { R5244 += 1, R5200 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s6 [70, 70] { R5244 += 1, R5200 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s7 [70, 70] { R5244 += 1, R5200 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s8 [70, 70] { R5244 += 1, R5200 += 1, R3452 += 1 };
  s0 -> s9 [70, 70] { R5244 += 1, R5200 += 1, R3452 += 1 };
  s0 -> s10 [70, 70] { R5244 += 1, R5200 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s2 [71, 74] { R5244 += 1, R5200 += 1, R3452 += 1 };
  s0 -> s1 [71, 65535] { R5244 += 1, R5200 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s3 [71, 65535] { R5244 += 1, R5200 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s2 [76, 65535] { R5244 += 1, R5200 += 1, R3452 += 1 };
  s1 -> s1 [0, 69] { R5244 += 1, R5200 += 1, R3452 += 1, R3453 += 1 };
  s1 -> s2 [0, 69] { R5244 += 1, R5200 += 1, R3452 += 1 };
  s1 -> s6 [70, 70] { R5244 += 1, R5200 += 1, R3452 += 1, R3453 += 1 };
  s1 -> s7 [70, 70] { R5244 += 1, R5200 += 1, R3452 += 1, R3453 += 1 };
  s1 -> s8 [70, 70] { R5244 += 1, R5200 += 1, R3452 += 1 };
  s1 -> s9 [70, 70] { R5244 += 1, R5200 += 1, R3452 += 1 };
  s1 -> s2 [71, 74] { R5244 += 1, R5200 += 1, R3452 += 1 };
  s1 -> s1 [71, 65535] { R5244 += 1, R5200 += 1, R3452 += 1, R3453 += 1 };
  s1 -> s2 [76, 65535] { R5244 += 1, R5200 += 1, R3452 += 1 };
  s2 -> s2 [0, 69] { R5244 += 1, R5200 += 1, R3452 += 1 };
  s2 -> s2 [0, 65535] { R5244 += 1 };
  s2 -> s11 [0, 65535];
  s2 -> s8 [70, 70] { R5244 += 1, R5200 += 1 };
  s2 -> s9 [70, 70] { R5244 += 1, R5200 += 1 };
  s2 -> s2 [71, 74] { R5244 += 1, R5200 += 1, R3452 += 1 };
  s2 -> s2 [71, 65535] { R5244 += 1, R5200 += 1 };
  s2 -> s2 [76, 65535] { R5244 += 1, R5200 += 1, R3452 += 1 };
  s3 -> s1 [0, 69] { R5244 += 1, R5200 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s2 [0, 69] { R5244 += 1, R5200 += 1, R3452 += 1 };
  s3 -> s3 [0, 69] { R5244 += 1, R5200 += 1, R3451 += 1, R3452 += 1 };
  s3 -> s5 [70, 70] { R5244 += 1, R5200 += 1, R3451 += 1, R3452 += 1 };
  s3 -> s6 [70, 70] { R5244 += 1, R5200 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s7 [70, 70] { R5244 += 1, R5200 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s8 [70, 70] { R5244 += 1, R5200 += 1, R3452 += 1 };
  s3 -> s9 [70, 70] { R5244 += 1, R5200 += 1, R3452 += 1 };
  s3 -> s10 [70, 70] { R5244 += 1, R5200 += 1, R3451 += 1, R3452 += 1 };
  s3 -> s2 [71, 74] { R5244 += 1, R5200 += 1, R3452 += 1 };
  s3 -> s1 [71, 65535] { R5244 += 1, R5200 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s3 [71, 65535] { R5244 += 1, R5200 += 1, R3451 += 1, R3452 += 1 };
  s3 -> s2 [76, 65535] { R5244 += 1, R5200 += 1, R3452 += 1 };
  s4 -> s1 [0, 69] { R5244 += 1, R5200 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s2 [0, 69] { R5244 += 1, R5200 += 1, R3452 += 1 };
  s4 -> s3 [0, 69] { R5244 += 1, R5200 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s4 [0, 65535] { R5244 += 1, R5199 += 1, R5200 += 1 };
  s4 -> s5 [70, 70] { R5244 += 1, R5200 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s6 [70, 70] { R5244 += 1, R5200 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s7 [70, 70] { R5244 += 1, R5200 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s8 [70, 70] { R5244 += 1, R5200 += 1, R3452 += 1 };
  s4 -> s9 [70, 70] { R5244 += 1, R5200 += 1, R3452 += 1 };
  s4 -> s10 [70, 70] { R5244 += 1, R5200 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s2 [71, 74] { R5244 += 1, R5200 += 1, R3452 += 1 };
  s4 -> s1 [71, 65535] { R5244 += 1, R5200 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s3 [71, 65535] { R5244 += 1, R5200 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s2 [76, 65535] { R5244 += 1, R5200 += 1, R3452 += 1 };
  s7 -> s8 [0, 74] { R5244 += 1, R5200 += 1, R3452 += 1 };
  s7 -> s7 [0, 65535] { R5244 += 1, R5200 += 1, R3452 += 1, R3453 += 1 };
  s7 -> s8 [76, 65535] { R5244 += 1, R5200 += 1, R3452 += 1 };
  s8 -> s8 [0, 74] { R5244 += 1, R5200 += 1, R3452 += 1 };
  s8 -> s11 [0, 65535];
  s8 -> s8 [0, 65535] { R5244 += 1, R5200 += 1 };
  s8 -> s12 [0, 65535] { R5244 += 1 };
  s8 -> s8 [76, 65535] { R5244 += 1, R5200 += 1, R3452 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s9 [0, 65535] { R5244 += 1 };
  s10 -> s8 [0, 74] { R5244 += 1, R5200 += 1, R3452 += 1 };
  s10 -> s7 [0, 65535] { R5244 += 1, R5200 += 1, R3452 += 1, R3453 += 1 };
  s10 -> s10 [0, 65535] { R5244 += 1, R5200 += 1, R3451 += 1, R3452 += 1 };
  s10 -> s8 [76, 65535] { R5244 += 1, R5200 += 1, R3452 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R5244 += 1 };
  accepting s12, s8, s2, s9, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R5246 += 1, R5202 += 1, R5131 += 1, R5132 += 1 };
  s0 -> s0 [0, 65535] { R5245 += 1, R5246 += 1 };
  s0 -> s2 [0, 65535] { R5246 += 1, R5201 += 1, R5202 += 1 };
  s0 -> s3 [70, 70] { R5246 += 1, R5202 += 1, R5131 += 1, R5132 += 1 };
  s0 -> s4 [70, 70] { R5246 += 1, R5202 += 1, R5131 += 1, R5132 += 1 };
  s0 -> s1 [71, 65535] { R5246 += 1, R5202 += 1, R5131 += 1, R5132 += 1 };
  s1 -> s1 [0, 69] { R5246 += 1, R5202 += 1, R5131 += 1, R5132 += 1 };
  s1 -> s1 [0, 65535] { R5246 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R5246 += 1, R5202 += 1, R5131 += 1, R5132 += 1 };
  s1 -> s4 [70, 70] { R5246 += 1, R5202 += 1, R5131 += 1, R5132 += 1 };
  s1 -> s1 [71, 65535] { R5246 += 1, R5202 += 1, R5131 += 1, R5132 += 1 };
  s2 -> s1 [0, 69] { R5246 += 1, R5202 += 1, R5131 += 1, R5132 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5246 += 1, R5201 += 1, R5202 += 1 };
  s2 -> s3 [70, 70] { R5246 += 1, R5202 += 1, R5131 += 1, R5132 += 1 };
  s2 -> s4 [70, 70] { R5246 += 1, R5202 += 1, R5131 += 1, R5132 += 1 };
  s2 -> s1 [71, 65535] { R5246 += 1, R5202 += 1, R5131 += 1, R5132 += 1 };
  s3 -> s3 [0, 65535] { R5246 += 1, R5202 += 1, R5131 += 1, R5132 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R5246 += 1 };
  s4 -> s4 [0, 65535] { R5246 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5246 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R5248 += 1, R5204 += 1, R5139 += 1, R5140 += 1 };
  s0 -> s2 [0, 69] { R5248 += 1, R5204 += 1, R5140 += 1, R5141 += 1, R5142 += 1 };
  s0 -> s3 [0, 69] { R5248 += 1, R5204 += 1, R5140 += 1, R5142 += 1, R5143 += 1 };
  s0 -> s4 [0, 65535] { R5248 += 1, R5203 += 1, R5204 += 1 };
  s0 -> s0 [0, 65535] { R5247 += 1, R5248 += 1 };
  s0 -> s5 [70, 70] { R5248 += 1, R5204 += 1, R5140 += 1, R5141 += 1, R5142 += 1 };
  s0 -> s6 [70, 70] { R5248 += 1, R5204 += 1, R5140 += 1, R5142 += 1, R5143 += 1 };
  s0 -> s7 [70, 70] { R5248 += 1, R5204 += 1, R5139 += 1, R5140 += 1 };
  s0 -> s8 [70, 70] { R5248 += 1, R5204 += 1, R5140 += 1, R5141 += 1, R5142 += 1 };
  s0 -> s9 [70, 70] { R5248 += 1, R5204 += 1, R5140 += 1, R5142 += 1, R5143 += 1 };
  s0 -> s10 [70, 70] { R5248 += 1, R5204 += 1, R5139 += 1, R5140 += 1 };
  s0 -> s1 [71, 65535] { R5248 += 1, R5204 += 1, R5139 += 1, R5140 += 1 };
  s0 -> s2 [71, 65535] { R5248 += 1, R5204 += 1, R5140 += 1, R5141 += 1, R5142 += 1 };
  s0 -> s3 [71, 65535] { R5248 += 1, R5204 += 1, R5140 += 1, R5142 += 1, R5143 += 1 };
  s1 -> s1 [0, 69] { R5248 += 1, R5204 += 1, R5139 += 1, R5140 += 1 };
  s1 -> s2 [0, 69] { R5248 += 1, R5204 += 1, R5140 += 1, R5141 += 1, R5142 += 1 };
  s1 -> s3 [0, 69] { R5248 += 1, R5204 += 1, R5140 += 1, R5142 += 1, R5143 += 1 };
  s1 -> s5 [70, 70] { R5248 += 1, R5204 += 1, R5140 += 1, R5141 += 1, R5142 += 1 };
  s1 -> s6 [70, 70] { R5248 += 1, R5204 += 1, R5140 += 1, R5142 += 1, R5143 += 1 };
  s1 -> s7 [70, 70] { R5248 += 1, R5204 += 1, R5139 += 1, R5140 += 1 };
  s1 -> s8 [70, 70] { R5248 += 1, R5204 += 1, R5140 += 1, R5141 += 1, R5142 += 1 };
  s1 -> s9 [70, 70] { R5248 += 1, R5204 += 1, R5140 += 1, R5142 += 1, R5143 += 1 };
  s1 -> s10 [70, 70] { R5248 += 1, R5204 += 1, R5139 += 1, R5140 += 1 };
  s1 -> s1 [71, 65535] { R5248 += 1, R5204 += 1, R5139 += 1, R5140 += 1 };
  s1 -> s2 [71, 65535] { R5248 += 1, R5204 += 1, R5140 += 1, R5141 += 1, R5142 += 1 };
  s1 -> s3 [71, 65535] { R5248 += 1, R5204 += 1, R5140 += 1, R5142 += 1, R5143 += 1 };
  s2 -> s2 [0, 69] { R5248 += 1, R5204 += 1, R5140 += 1, R5141 += 1, R5142 += 1 };
  s2 -> s3 [0, 69] { R5248 += 1, R5204 += 1, R5140 += 1, R5142 += 1, R5143 += 1 };
  s2 -> s5 [70, 70] { R5248 += 1, R5204 += 1, R5140 += 1, R5141 += 1, R5142 += 1 };
  s2 -> s6 [70, 70] { R5248 += 1, R5204 += 1, R5140 += 1, R5142 += 1, R5143 += 1 };
  s2 -> s8 [70, 70] { R5248 += 1, R5204 += 1, R5140 += 1, R5141 += 1, R5142 += 1 };
  s2 -> s9 [70, 70] { R5248 += 1, R5204 += 1, R5140 += 1, R5142 += 1, R5143 += 1 };
  s2 -> s2 [71, 65535] { R5248 += 1, R5204 += 1, R5140 += 1, R5141 += 1, R5142 += 1 };
  s2 -> s3 [71, 65535] { R5248 += 1, R5204 += 1, R5140 += 1, R5142 += 1, R5143 += 1 };
  s3 -> s14 [0, 69] { R5248 += 1, R5204 += 1, R5140 += 1 };
  s3 -> s3 [0, 69] { R5248 += 1, R5204 += 1, R5140 += 1, R5142 += 1, R5143 += 1 };
  s3 -> s11 [70, 70] { R5248 += 1, R5204 += 1, R5140 += 1 };
  s3 -> s6 [70, 70] { R5248 += 1, R5204 += 1, R5140 += 1, R5142 += 1, R5143 += 1 };
  s3 -> s9 [70, 70] { R5248 += 1, R5204 += 1, R5140 += 1, R5142 += 1, R5143 += 1 };
  s3 -> s15 [70, 70] { R5248 += 1, R5204 += 1, R5140 += 1 };
  s3 -> s14 [71, 65535] { R5248 += 1, R5204 += 1, R5140 += 1 };
  s3 -> s3 [71, 65535] { R5248 += 1, R5204 += 1, R5140 += 1, R5142 += 1, R5143 += 1 };
  s4 -> s1 [0, 69] { R5248 += 1, R5204 += 1, R5139 += 1, R5140 += 1 };
  s4 -> s2 [0, 69] { R5248 += 1, R5204 += 1, R5140 += 1, R5141 += 1, R5142 += 1 };
  s4 -> s3 [0, 69] { R5248 += 1, R5204 += 1, R5140 += 1, R5142 += 1, R5143 += 1 };
  s4 -> s4 [0, 65535] { R5248 += 1, R5203 += 1, R5204 += 1 };
  s4 -> s5 [70, 70] { R5248 += 1, R5204 += 1, R5140 += 1, R5141 += 1, R5142 += 1 };
  s4 -> s6 [70, 70] { R5248 += 1, R5204 += 1, R5140 += 1, R5142 += 1, R5143 += 1 };
  s4 -> s7 [70, 70] { R5248 += 1, R5204 += 1, R5139 += 1, R5140 += 1 };
  s4 -> s8 [70, 70] { R5248 += 1, R5204 += 1, R5140 += 1, R5141 += 1, R5142 += 1 };
  s4 -> s9 [70, 70] { R5248 += 1, R5204 += 1, R5140 += 1, R5142 += 1, R5143 += 1 };
  s4 -> s10 [70, 70] { R5248 += 1, R5204 += 1, R5139 += 1, R5140 += 1 };
  s4 -> s1 [71, 65535] { R5248 += 1, R5204 += 1, R5139 += 1, R5140 += 1 };
  s4 -> s2 [71, 65535] { R5248 += 1, R5204 += 1, R5140 += 1, R5141 += 1, R5142 += 1 };
  s4 -> s3 [71, 65535] { R5248 += 1, R5204 += 1, R5140 += 1, R5142 += 1, R5143 += 1 };
  s5 -> s5 [0, 65535] { R5248 += 1, R5204 += 1, R5140 += 1, R5141 += 1, R5142 += 1 };
  s5 -> s9 [0, 65535] { R5248 += 1, R5204 += 1, R5140 += 1, R5142 += 1, R5143 += 1 };
  s7 -> s5 [0, 65535] { R5248 += 1, R5204 += 1, R5140 += 1, R5141 += 1, R5142 += 1 };
  s7 -> s7 [0, 65535] { R5248 += 1, R5204 += 1, R5139 += 1, R5140 += 1 };
  s7 -> s9 [0, 65535] { R5248 += 1, R5204 += 1, R5140 += 1, R5142 += 1, R5143 += 1 };
  s9 -> s11 [0, 65535] { R5248 += 1, R5204 += 1, R5140 += 1 };
  s9 -> s9 [0, 65535] { R5248 += 1, R5204 += 1, R5140 += 1, R5142 += 1, R5143 += 1 };
  s11 -> s11 [0, 65535] { R5248 += 1, R5204 += 1, R5140 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [0, 65535] { R5248 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R5248 += 1 };
  s14 -> s14 [0, 69] { R5248 += 1, R5204 += 1, R5140 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R5248 += 1 };
  s14 -> s11 [70, 70] { R5248 += 1, R5204 += 1, R5140 += 1 };
  s14 -> s15 [70, 70] { R5248 += 1, R5204 += 1, R5140 += 1 };
  s14 -> s14 [71, 65535] { R5248 += 1, R5204 += 1, R5140 += 1 };
  s15 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R5248 += 1 };
  accepting s12, s13, s14, s15, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R5166 && R3 = R5248 && R23 - R5248 = -1 && R24 = R5248 && R25 - R5248 = -1 && R26 = R5248 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R5136 + -1*R5132 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R5136 + -1*R5132 - R66 = 0 && R55 + R96 + R93 + -1*R5138 + -1*R5134 - R68 = 0 && R65 + R5135 + R5131 = 0 && R67 + R5137 + R5133 = 0 && R5165 = 0 && R5189 = 0 && R5190 = 0 && R5195 = 0 && R5196 = 0 && R5199 = 0 && R5200 = 0 && R5203 = 0 && R5204 = 0 && R5205 = 0 && R5206 = R5248 && R5207 = 0 && R5208 = R5248 && R5209 = 0 && R5210 = R5248 && R5211 = 0 && R5212 = R5248 && R5213 = 0 && R5214 = R5248 && R5215 = 0 && R5216 = R5248 && R5217 = 0 && R5218 = R5248 && R5219 = 0 && R5220 = R5248 && R5221 = 0 && R5222 = R5248 && R5223 = 0 && R5224 = R5248 && R5225 = 0 && R5226 = R5248 && R5227 = 0 && R5228 = R5248 && R5229 = 0 && R5230 = R5248 && R5231 = 0 && R5232 = R5248 && R5233 = 0 && R5234 = R5248 && R5235 = 0 && R5236 = R5248 && R5237 = 0 && R5238 = R5248 && R5239 = 0 && R5240 = R5248 && R5241 = 0 && R5242 = R5248 && R5243 = 0 && R5244 = R5248 && R5245 = 0 && R5246 = R5248 && R5247 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R3456 + R3453 < 1 && -1*R5136 + -1*R5132 - R66 < 1 && -1*R5138 + -1*R5134 - R68 < 1 && -1 < R5166 && 0 < R5248 && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R5136 + -1*R5132 - R66 = 0 || R66 + R5136 + R5132 < 1) && (R59 + R3454 + R3451 != 0 || R60 + R3455 + R3452 + -1*R5136 + -1*R5132 - R66 = 0 || R66 + R5136 + R5132 < 1) && (R66 + R5136 + R5132 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R5138 + R5134 < 1) && (R53 + R94 + R91 = 0 || R68 + R5138 + R5134 < 1))) && (R66 + R5136 + R5132 != 0 || ((R59 + R3454 + R3451 != 0 || R60 + R3455 + R3452 = 0 || R68 + R5138 + R5134 < 1) && (R59 + R3454 + R3451 = 0 || R68 + R5138 + R5134 < 1))) && (R66 + R5136 + R5132 != 0 || ((R73 + R5144 + R5139 != 0 || R74 + R5145 + R5140 = 0 || R68 + R5138 + R5134 < 1) && (R73 + R5144 + R5139 = 0 || R68 + R5138 + R5134 < 1))) && (R68 + R5138 + R5134 != 0 || R77 + R5148 + R5143 = 0 || (R75 + R5146 + R5141 = 0 && R76 + R5147 + R5142 = 0)) && (R73 + R5144 + R5139 != 0 || R66 + R5136 + R5132 + -1*R5145 + -1*R5140 - R74 = 0 || R66 + R5136 + R5132 < 1) && (R75 + R5146 + R5141 != 0 || R68 + R5138 + R5134 + -1*R5147 + -1*R5142 - R76 = 0 || R68 + R5138 + R5134 < 1) && (R5149 != 0 || R5150 = R5166 || (R20 = 0 && R5166 = 0)) && (R5151 != 0 || R5152 = R5166 || (R20 = 0 && R5166 = 0)) && (R5153 != 0 || R5154 = R5166 || (R20 = 0 && R5166 = 0)) && (R5155 != 0 || R5156 = R5166 || (R20 = 0 && R5166 = 0)) && (R5157 != 0 || R5158 = R5166 || (R20 = 0 && R5166 = 0)) && (R5159 != 0 || R5160 = R5166 || (R20 = 0 && R5166 = 0)) && (R5161 != 0 || R5162 = R5166 || (R20 = 0 && R5166 = 0)) && (R5163 != 0 || R5164 = R5166 || (R20 = 0 && R5166 = 0)) && (R5167 != 0 || R5166 = R5168 || (R20 = 0 && R5166 = 0)) && (R21 = 0 || (R5187 = 0 && R5188 = 0)) && (R21 = 0 || (R5191 = 0 && R5192 = 0)) && (R21 = 0 || (R5193 = 0 && R5194 = 0)) && (R21 = 0 || (R5197 = 0 && R5198 = 0)) && (R21 = 0 || (R5201 = 0 && R5202 = 0)) && (R22 = 0 || (R5169 = 0 && R5170 = 0)) && (R22 = 0 || (R5171 = 0 && R5172 = 0)) && (R22 = 0 || (R5173 = 0 && R5174 = 0)) && (R22 = 0 || (R5175 = 0 && R5176 = 0)) && (R22 = 0 || (R5177 = 0 && R5178 = 0)) && (R22 = 0 || (R5179 = 0 && R5180 = 0)) && (R22 = 0 || (R5181 = 0 && R5182 = 0)) && (R22 = 0 || (R5183 = 0 && R5184 = 0)) && (R22 = 0 || (R5185 = 0 && R5186 = 0)) && (R53 + R94 + R91 = 0 || R66 + R5136 + R5132 < 1) && (R59 + R3454 + R3451 = 0 || R66 + R5136 + R5132 < 1) && (R73 + R5144 + R5139 = 0 || R66 + R5136 + R5132 < 1) && (R75 + R5146 + R5141 = 0 || R68 + R5138 + R5134 < 1) && (R5149 = 0 || (R20 = 0 && R5166 = 0)) && (R5151 = 0 || (R20 = 0 && R5166 = 0)) && (R5153 = 0 || (R20 = 0 && R5166 = 0)) && (R5155 = 0 || (R20 = 0 && R5166 = 0)) && (R5157 = 0 || (R20 = 0 && R5166 = 0)) && (R5159 = 0 || (R20 = 0 && R5166 = 0)) && (R5161 = 0 || (R20 = 0 && R5166 = 0)) && (R5163 = 0 || (R20 = 0 && R5166 = 0)) && (R5167 = 0 || (R20 = 0 && R5166 = 0));
// End of Parikh automata intersection problem
