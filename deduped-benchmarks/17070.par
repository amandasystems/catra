// Parikh automata intersection problem, generated by OSTRICH+
counter int
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R15010 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R15009 += 1, R15010 += 1 };
  s1 -> s1 [0, 65535] { R15010 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R15012 += 1 };
  s0 -> s0 [0, 65535] { R15011 += 1, R15012 += 1 };
  s0 -> s2 [70, 70] { R15012 += 1 };
  s0 -> s3 [70, 70] { R15012 += 1 };
  s0 -> s1 [76, 65535] { R15012 += 1 };
  s1 -> s1 [0, 69] { R15012 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15012 += 1 };
  s1 -> s3 [70, 70] { R15012 += 1 };
  s1 -> s1 [76, 65535] { R15012 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R15012 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R15012 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R15014 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R15013 += 1, R15014 += 1 };
  s0 -> s2 [70, 70] { R15014 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R15014 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R15014 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R15014 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15014 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R15014 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R15014 += 1, R45 += 1 };
  s2 -> s2 [0, 65535] { R15014 += 1, R45 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R15016 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R15015 += 1, R15016 += 1 };
  s0 -> s2 [70, 70] { R15016 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R15016 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R15016 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R15016 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15016 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R15016 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R15016 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R15016 += 1, R47 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R15018 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R15017 += 1, R15018 += 1 };
  s0 -> s2 [70, 70] { R15018 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R15018 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R15018 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R15018 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15018 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R15018 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R15018 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535] { R15018 += 1, R49 += 1, R50 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R15020 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R15019 += 1, R15020 += 1 };
  s0 -> s2 [70, 70] { R15020 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R15020 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R15020 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R15020 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15020 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R15020 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R15020 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R15020 += 1, R53 += 1, R54 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R15022 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R15021 += 1, R15022 += 1 };
  s0 -> s2 [70, 70] { R15022 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R15022 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R15022 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R15022 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15022 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R15022 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R15022 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R15022 += 1, R59 += 1, R60 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R15024 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R15023 += 1, R15024 += 1 };
  s0 -> s2 [70, 70] { R15024 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R15024 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R15024 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R15024 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15024 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R15024 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R15024 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535] { R15024 += 1, R65 += 1, R66 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R15026 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R15025 += 1, R15026 += 1 };
  s0 -> s2 [70, 70] { R15026 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R15026 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R15026 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R15026 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R15026 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R15026 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R15026 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R15026 += 1, R73 += 1, R74 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R15046 += 1 };
  s0 -> s0 [0, 65535] { R15045 += 1, R15046 += 1 };
  s0 -> s2 [70, 70] { R15046 += 1 };
  s0 -> s1 [71, 65535] { R15046 += 1 };
  s1 -> s1 [0, 69] { R15046 += 1 };
  s1 -> s2 [70, 70] { R15046 += 1 };
  s1 -> s1 [71, 65535] { R15046 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R15046 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R15047 += 1, R15048 += 1 };
  s0 -> s1 [0, 65535] { R15048 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R15048 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R15050 += 1 };
  s0 -> s0 [0, 65535] { R15049 += 1, R15050 += 1 };
  s0 -> s2 [0, 65535] { R15050 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R15050 += 1 };
  s0 -> s1 [71, 65535] { R15050 += 1 };
  s1 -> s1 [0, 69] { R15050 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R15050 += 1 };
  s1 -> s1 [71, 65535] { R15050 += 1 };
  s2 -> s1 [0, 69] { R15050 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R15050 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R15050 += 1 };
  s2 -> s1 [71, 65535] { R15050 += 1 };
  s3 -> s3 [0, 65535] { R15050 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R15052 += 1, R14990 += 1 };
  s0 -> s0 [0, 65535] { R15051 += 1, R15052 += 1 };
  s0 -> s2 [0, 65535] { R15052 += 1, R14989 += 1, R14990 += 1 };
  s0 -> s1 [71, 65535] { R15052 += 1, R14990 += 1 };
  s1 -> s1 [0, 69] { R15052 += 1, R14990 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R15052 += 1 };
  s1 -> s1 [71, 65535] { R15052 += 1, R14990 += 1 };
  s2 -> s1 [0, 69] { R15052 += 1, R14990 += 1 };
  s2 -> s2 [0, 65535] { R15052 += 1, R14989 += 1, R14990 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R15052 += 1, R14990 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R15054 += 1, R14991 += 1, R14992 += 1 };
  s0 -> s2 [0, 65535] { R15054 += 1, R14992 += 1, R20 += 1 };
  s0 -> s0 [0, 65535] { R15053 += 1, R15054 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R15054 += 1, R14991 += 1, R14992 += 1 };
  s1 -> s2 [0, 65535] { R15054 += 1, R14992 += 1, R20 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R15054 += 1, R14992 += 1, R20 += 1 };
  s2 -> s4 [0, 65535] { R15054 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R15054 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R15056 += 1, R14994 += 1 };
  s0 -> s2 [0, 65535] { R15056 += 1, R14993 += 1, R14994 += 1 };
  s0 -> s0 [0, 65535] { R15055 += 1, R15056 += 1 };
  s0 -> s1 [75, 65535] { R15056 += 1, R14994 += 1 };
  s1 -> s1 [0, 70] { R15056 += 1, R14994 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R15056 += 1 };
  s1 -> s1 [75, 65535] { R15056 += 1, R14994 += 1 };
  s2 -> s1 [0, 70] { R15056 += 1, R14994 += 1 };
  s2 -> s2 [0, 65535] { R15056 += 1, R14993 += 1, R14994 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R15056 += 1, R14994 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R15058 += 1, R14996 += 1, R84 += 1 };
  s0 -> s0 [0, 65535] { R15057 += 1, R15058 += 1 };
  s0 -> s2 [0, 65535] { R15058 += 1, R14995 += 1, R14996 += 1 };
  s1 -> s1 [0, 65535] { R15058 += 1, R14996 += 1, R84 += 1 };
  s1 -> s4 [0, 65535] { R15058 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R15058 += 1, R14996 += 1, R84 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R15058 += 1, R14995 += 1, R14996 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R15058 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R15060 += 1, R14998 += 1 };
  s0 -> s2 [0, 65535] { R15060 += 1, R14998 += 1, R86 += 1 };
  s0 -> s3 [0, 65535] { R15060 += 1, R14997 += 1, R14998 += 1 };
  s0 -> s0 [0, 65535] { R15059 += 1, R15060 += 1 };
  s0 -> s1 [76, 65535] { R15060 += 1, R14998 += 1 };
  s1 -> s1 [0, 74] { R15060 += 1, R14998 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R15060 += 1 };
  s1 -> s1 [76, 65535] { R15060 += 1, R14998 += 1 };
  s2 -> s1 [0, 74] { R15060 += 1, R14998 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R15060 += 1, R14998 += 1, R86 += 1 };
  s2 -> s5 [0, 65535] { R15060 += 1 };
  s2 -> s1 [76, 65535] { R15060 += 1, R14998 += 1 };
  s3 -> s1 [0, 74] { R15060 += 1, R14998 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R15060 += 1, R14998 += 1, R86 += 1 };
  s3 -> s3 [0, 65535] { R15060 += 1, R14997 += 1, R14998 += 1 };
  s3 -> s1 [76, 65535] { R15060 += 1, R14998 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R15060 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s0 [0, 65535] { R15061 += 1, R15062 += 1 };
  s0 -> s1 [0, 65535] { R15062 += 1, R15000 += 1, R90 += 1 };
  s0 -> s2 [0, 65535] { R15062 += 1, R14999 += 1, R15000 += 1 };
  s0 -> s3 [0, 65535] { R15062 += 1, R15000 += 1 };
  s1 -> s1 [0, 65535] { R15062 += 1, R15000 += 1, R90 += 1 };
  s1 -> s4 [0, 65535] { R15062 += 1 };
  s1 -> s3 [0, 65535] { R15062 += 1, R15000 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R15062 += 1, R15000 += 1, R90 += 1 };
  s2 -> s2 [0, 65535] { R15062 += 1, R14999 += 1, R15000 += 1 };
  s2 -> s3 [0, 65535] { R15062 += 1, R15000 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R15062 += 1 };
  s3 -> s3 [0, 65535] { R15062 += 1, R15000 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R15062 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R15064 += 1, R15001 += 1, R15002 += 1 };
  s0 -> s0 [0, 65535] { R15063 += 1, R15064 += 1 };
  s0 -> s2 [0, 65535] { R15064 += 1, R15002 += 1, R13517 += 1, R13518 += 1 };
  s0 -> s3 [0, 65535] { R15064 += 1, R15002 += 1 };
  s1 -> s1 [0, 65535] { R15064 += 1, R15001 += 1, R15002 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R15064 += 1, R15002 += 1, R13517 += 1, R13518 += 1 };
  s1 -> s3 [0, 65535] { R15064 += 1, R15002 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R15064 += 1 };
  s2 -> s2 [0, 65535] { R15064 += 1, R15002 += 1, R13517 += 1, R13518 += 1 };
  s2 -> s3 [0, 65535] { R15064 += 1, R15002 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R15064 += 1 };
  s3 -> s3 [0, 65535] { R15064 += 1, R15002 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R15064 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R15066 += 1, R15004 += 1, R13523 += 1 };
  s0 -> s2 [0, 65535] { R15066 += 1, R15004 += 1, R13522 += 1, R13523 += 1 };
  s0 -> s3 [0, 65535] { R15066 += 1, R15004 += 1, R13523 += 1, R13524 += 1 };
  s0 -> s0 [0, 65535] { R15065 += 1, R15066 += 1 };
  s0 -> s4 [0, 65535] { R15066 += 1, R15003 += 1, R15004 += 1 };
  s0 -> s1 [76, 65535] { R15066 += 1, R15004 += 1, R13523 += 1 };
  s1 -> s1 [0, 74] { R15066 += 1, R15004 += 1, R13523 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R15066 += 1 };
  s1 -> s1 [0, 65535] { R15066 += 1, R15004 += 1 };
  s1 -> s1 [76, 65535] { R15066 += 1, R15004 += 1, R13523 += 1 };
  s2 -> s1 [0, 74] { R15066 += 1, R15004 += 1, R13523 += 1 };
  s2 -> s2 [0, 65535] { R15066 += 1, R15004 += 1, R13522 += 1, R13523 += 1 };
  s2 -> s3 [0, 65535] { R15066 += 1, R15004 += 1, R13523 += 1, R13524 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R15066 += 1 };
  s2 -> s1 [76, 65535] { R15066 += 1, R15004 += 1, R13523 += 1 };
  s3 -> s1 [0, 74] { R15066 += 1, R15004 += 1, R13523 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R15066 += 1, R15004 += 1, R13523 += 1, R13524 += 1 };
  s3 -> s6 [0, 65535] { R15066 += 1 };
  s3 -> s7 [0, 65535] { R15066 += 1, R15004 += 1 };
  s3 -> s1 [76, 65535] { R15066 += 1, R15004 += 1, R13523 += 1 };
  s4 -> s1 [0, 74] { R15066 += 1, R15004 += 1, R13523 += 1 };
  s4 -> s2 [0, 65535] { R15066 += 1, R15004 += 1, R13522 += 1, R13523 += 1 };
  s4 -> s3 [0, 65535] { R15066 += 1, R15004 += 1, R13523 += 1, R13524 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R15066 += 1, R15003 += 1, R15004 += 1 };
  s4 -> s1 [76, 65535] { R15066 += 1, R15004 += 1, R13523 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15066 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R15066 += 1 };
  s7 -> s7 [0, 65535] { R15066 += 1, R15004 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R15068 += 1, R15006 += 1 };
  s0 -> s2 [0, 65535] { R15068 += 1, R15005 += 1, R15006 += 1 };
  s0 -> s0 [0, 65535] { R15067 += 1, R15068 += 1 };
  s1 -> s1 [0, 65535] { R15068 += 1, R15006 += 1 };
  s1 -> s4 [0, 65535] { R15068 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R15068 += 1, R15006 += 1 };
  s2 -> s2 [0, 65535] { R15068 += 1, R15005 += 1, R15006 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R15068 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s0 [0, 65535] { R15069 += 1, R15070 += 1 };
  s0 -> s1 [0, 65535] { R15070 += 1, R15008 += 1 };
  s0 -> s2 [0, 65535] { R15070 += 1, R15007 += 1, R15008 += 1 };
  s0 -> s3 [0, 65535] { R15070 += 1, R15008 += 1, R14985 += 1, R14987 += 1, R14988 += 1 };
  s0 -> s4 [0, 65535] { R15070 += 1, R15008 += 1, R14985 += 1 };
  s1 -> s1 [0, 65535] { R15070 += 1, R15008 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R15070 += 1 };
  s2 -> s1 [0, 65535] { R15070 += 1, R15008 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R15070 += 1, R15007 += 1, R15008 += 1 };
  s2 -> s3 [0, 65535] { R15070 += 1, R15008 += 1, R14985 += 1, R14987 += 1, R14988 += 1 };
  s2 -> s4 [0, 65535] { R15070 += 1, R15008 += 1, R14985 += 1 };
  s3 -> s1 [0, 65535] { R15070 += 1, R15008 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R15070 += 1 };
  s3 -> s3 [0, 65535] { R15070 += 1, R15008 += 1, R14985 += 1, R14987 += 1, R14988 += 1 };
  s3 -> s4 [0, 65535] { R15070 += 1, R15008 += 1, R14985 += 1 };
  s4 -> s1 [0, 65535] { R15070 += 1, R15008 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R15070 += 1 };
  s4 -> s4 [0, 65535] { R15070 += 1, R15008 += 1, R14985 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15070 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R15072 += 1, R15027 += 1, R15028 += 1 };
  s0 -> s2 [0, 65535] { R15072 += 1, R15028 += 1, R21 += 1 };
  s0 -> s0 [0, 65535] { R15071 += 1, R15072 += 1 };
  s1 -> s1 [0, 65535] { R15072 += 1, R15027 += 1, R15028 += 1 };
  s1 -> s2 [0, 65535] { R15072 += 1, R15028 += 1, R21 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R15072 += 1, R15028 += 1, R21 += 1 };
  s2 -> s3 [0, 65535] { R15072 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R15072 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R15074 += 1, R15030 += 1 };
  s0 -> s2 [0, 65535] { R15074 += 1, R15029 += 1, R15030 += 1 };
  s0 -> s0 [0, 65535] { R15073 += 1, R15074 += 1 };
  s0 -> s3 [70, 70] { R15074 += 1, R15030 += 1 };
  s0 -> s4 [70, 70] { R15074 += 1, R15030 += 1 };
  s0 -> s5 [75, 75] { R15074 += 1, R15030 += 1 };
  s0 -> s1 [76, 65535] { R15074 += 1, R15030 += 1 };
  s1 -> s1 [0, 69] { R15074 += 1, R15030 += 1 };
  s1 -> s3 [70, 70] { R15074 += 1, R15030 += 1 };
  s1 -> s4 [70, 70] { R15074 += 1, R15030 += 1 };
  s1 -> s5 [75, 75] { R15074 += 1, R15030 += 1 };
  s1 -> s1 [76, 65535] { R15074 += 1, R15030 += 1 };
  s2 -> s1 [0, 69] { R15074 += 1, R15030 += 1 };
  s2 -> s2 [0, 65535] { R15074 += 1, R15029 += 1, R15030 += 1 };
  s2 -> s3 [70, 70] { R15074 += 1, R15030 += 1 };
  s2 -> s4 [70, 70] { R15074 += 1, R15030 += 1 };
  s2 -> s5 [75, 75] { R15074 += 1, R15030 += 1 };
  s2 -> s1 [76, 65535] { R15074 += 1, R15030 += 1 };
  s4 -> s4 [0, 70] { R15074 += 1, R15030 += 1 };
  s4 -> s8 [75, 75] { R15074 += 1, R15030 += 1 };
  s4 -> s4 [76, 65535] { R15074 += 1, R15030 += 1 };
  s5 -> s5 [0, 69] { R15074 += 1, R15030 += 1 };
  s5 -> s5 [0, 65535] { R15074 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R15074 += 1, R15030 += 1 };
  s5 -> s8 [70, 70] { R15074 += 1, R15030 += 1 };
  s5 -> s5 [75, 65535] { R15074 += 1, R15030 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R15074 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 70] { R15074 += 1, R15030 += 1 };
  s8 -> s8 [0, 65535] { R15074 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [75, 65535] { R15074 += 1, R15030 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R15076 += 1, R15032 += 1, R83 += 1 };
  s0 -> s0 [0, 65535] { R15075 += 1, R15076 += 1 };
  s0 -> s2 [0, 65535] { R15076 += 1, R15031 += 1, R15032 += 1 };
  s0 -> s3 [70, 70] { R15076 += 1, R15032 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R15076 += 1, R15032 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R15076 += 1, R15032 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R15076 += 1, R15032 += 1, R83 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R15076 += 1 };
  s1 -> s3 [70, 70] { R15076 += 1, R15032 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R15076 += 1, R15032 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R15076 += 1, R15032 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R15076 += 1, R15032 += 1, R83 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R15076 += 1, R15031 += 1, R15032 += 1 };
  s2 -> s3 [70, 70] { R15076 += 1, R15032 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R15076 += 1, R15032 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R15076 += 1, R15032 += 1, R83 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R15076 += 1 };
  s3 -> s3 [0, 65535] { R15076 += 1, R15032 += 1, R83 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R15076 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15076 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R15078 += 1, R15034 += 1, R85 += 1 };
  s0 -> s2 [0, 65535] { R15078 += 1, R15033 += 1, R15034 += 1 };
  s0 -> s0 [0, 65535] { R15077 += 1, R15078 += 1 };
  s0 -> s3 [70, 70] { R15078 += 1, R15034 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R15078 += 1, R15034 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R15078 += 1, R15034 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R15078 += 1, R15034 += 1, R85 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R15078 += 1 };
  s1 -> s3 [70, 70] { R15078 += 1, R15034 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R15078 += 1, R15034 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R15078 += 1, R15034 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R15078 += 1, R15034 += 1, R85 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R15078 += 1, R15033 += 1, R15034 += 1 };
  s2 -> s3 [70, 70] { R15078 += 1, R15034 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R15078 += 1, R15034 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R15078 += 1, R15034 += 1, R85 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R15078 += 1, R15034 += 1, R85 += 1 };
  s3 -> s6 [0, 65535] { R15078 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R15078 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15078 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R15080 += 1, R15036 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R15080 += 1, R15036 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R15079 += 1, R15080 += 1 };
  s0 -> s3 [0, 65535] { R15080 += 1, R15035 += 1, R15036 += 1 };
  s0 -> s4 [70, 70] { R15080 += 1, R15036 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R15080 += 1, R15036 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R15080 += 1, R15036 += 1, R87 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R15080 += 1, R15036 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 74] { R15080 += 1, R15036 += 1, R88 += 1 };
  s0 -> s2 [71, 65535] { R15080 += 1, R15036 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R15080 += 1, R15036 += 1, R88 += 1 };
  s0 -> s1 [76, 65535] { R15080 += 1, R15036 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R15080 += 1, R15036 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R15080 += 1, R15036 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R15080 += 1, R15036 += 1, R88 += 1 };
  s1 -> s1 [71, 74] { R15080 += 1, R15036 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R15080 += 1, R15036 += 1, R88 += 1 };
  s1 -> s1 [76, 65535] { R15080 += 1, R15036 += 1, R88 += 1 };
  s2 -> s1 [0, 69] { R15080 += 1, R15036 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R15080 += 1, R15036 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R15080 += 1, R15036 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R15080 += 1, R15036 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R15080 += 1, R15036 += 1, R87 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R15080 += 1, R15036 += 1, R87 += 1, R88 += 1 };
  s2 -> s1 [71, 74] { R15080 += 1, R15036 += 1, R88 += 1 };
  s2 -> s2 [71, 65535] { R15080 += 1, R15036 += 1, R87 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R15080 += 1, R15036 += 1, R88 += 1 };
  s2 -> s1 [76, 65535] { R15080 += 1, R15036 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R15080 += 1, R15036 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R15080 += 1, R15036 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R15080 += 1, R15035 += 1, R15036 += 1 };
  s3 -> s4 [70, 70] { R15080 += 1, R15036 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R15080 += 1, R15036 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R15080 += 1, R15036 += 1, R87 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R15080 += 1, R15036 += 1, R87 += 1, R88 += 1 };
  s3 -> s1 [71, 74] { R15080 += 1, R15036 += 1, R88 += 1 };
  s3 -> s2 [71, 65535] { R15080 += 1, R15036 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R15080 += 1, R15036 += 1, R88 += 1 };
  s3 -> s1 [76, 65535] { R15080 += 1, R15036 += 1, R88 += 1 };
  s5 -> s5 [0, 74] { R15080 += 1, R15036 += 1, R88 += 1 };
  s5 -> s10 [75, 75] { R15080 += 1, R15036 += 1, R88 += 1 };
  s5 -> s5 [76, 65535] { R15080 += 1, R15036 += 1, R88 += 1 };
  s7 -> s5 [0, 74] { R15080 += 1, R15036 += 1, R88 += 1 };
  s7 -> s7 [0, 65535] { R15080 += 1, R15036 += 1, R87 += 1, R88 += 1 };
  s7 -> s10 [75, 75] { R15080 += 1, R15036 += 1, R88 += 1 };
  s7 -> s5 [76, 65535] { R15080 += 1, R15036 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R15080 += 1, R15036 += 1, R88 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R15080 += 1 };
  s8 -> s10 [70, 70] { R15080 += 1, R15036 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R15080 += 1, R15036 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R15080 += 1, R15036 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s12 [0, 65535] { R15080 += 1 };
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R15080 += 1, R15036 += 1, R88 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R15080 += 1 };
  s12 -> s12 [0, 65535] { R15080 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R15082 += 1, R15038 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s2 [0, 69] { R15082 += 1, R15038 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s0 [0, 65535] { R15081 += 1, R15082 += 1 };
  s0 -> s3 [0, 65535] { R15082 += 1, R15037 += 1, R15038 += 1 };
  s0 -> s4 [70, 70] { R15082 += 1, R15038 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s5 [70, 70] { R15082 += 1, R15038 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s6 [70, 70] { R15082 += 1, R15038 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s7 [70, 70] { R15082 += 1, R15038 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s1 [71, 65535] { R15082 += 1, R15038 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s2 [71, 65535] { R15082 += 1, R15038 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s1 [0, 69] { R15082 += 1, R15038 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s2 [0, 69] { R15082 += 1, R15038 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s4 [70, 70] { R15082 += 1, R15038 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s5 [70, 70] { R15082 += 1, R15038 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s6 [70, 70] { R15082 += 1, R15038 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s7 [70, 70] { R15082 += 1, R15038 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s1 [71, 65535] { R15082 += 1, R15038 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s2 [71, 65535] { R15082 += 1, R15038 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [0, 69] { R15082 += 1, R15038 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R15082 += 1 };
  s2 -> s6 [70, 70] { R15082 += 1, R15038 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s7 [70, 70] { R15082 += 1, R15038 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [71, 65535] { R15082 += 1, R15038 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s1 [0, 69] { R15082 += 1, R15038 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s2 [0, 69] { R15082 += 1, R15038 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s3 [0, 65535] { R15082 += 1, R15037 += 1, R15038 += 1 };
  s3 -> s4 [70, 70] { R15082 += 1, R15038 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s5 [70, 70] { R15082 += 1, R15038 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s6 [70, 70] { R15082 += 1, R15038 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s7 [70, 70] { R15082 += 1, R15038 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s1 [71, 65535] { R15082 += 1, R15038 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s2 [71, 65535] { R15082 += 1, R15038 += 1, R13514 += 1, R13515 += 1 };
  s5 -> s5 [0, 65535] { R15082 += 1, R15038 += 1, R13513 += 1, R13514 += 1 };
  s5 -> s7 [0, 65535] { R15082 += 1, R15038 += 1, R13514 += 1, R13515 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R15082 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R15082 += 1, R15038 += 1, R13514 += 1, R13515 += 1 };
  s7 -> s9 [0, 65535] { R15082 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R15082 += 1 };
  accepting s8, s2, s9, s6, s7;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R15084 += 1, R15040 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s0 [0, 65535] { R15083 += 1, R15084 += 1 };
  s0 -> s2 [0, 65535] { R15084 += 1, R15039 += 1, R15040 += 1 };
  s0 -> s3 [70, 70] { R15084 += 1, R15040 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s4 [70, 70] { R15084 += 1, R15040 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s1 [71, 65535] { R15084 += 1, R15040 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [0, 69] { R15084 += 1, R15040 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R15084 += 1 };
  s1 -> s3 [70, 70] { R15084 += 1, R15040 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s4 [70, 70] { R15084 += 1, R15040 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [71, 65535] { R15084 += 1, R15040 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s1 [0, 69] { R15084 += 1, R15040 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R15084 += 1, R15039 += 1, R15040 += 1 };
  s2 -> s3 [70, 70] { R15084 += 1, R15040 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s4 [70, 70] { R15084 += 1, R15040 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s1 [71, 65535] { R15084 += 1, R15040 += 1, R13519 += 1, R13520 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R15084 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R15084 += 1 };
  s4 -> s4 [0, 65535] { R15084 += 1, R15040 += 1, R13519 += 1, R13520 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15084 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R15086 += 1, R15042 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s0 -> s2 [0, 69] { R15086 += 1, R15042 += 1, R14641 += 1, R14642 += 1 };
  s0 -> s3 [0, 69] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s0 -> s0 [0, 65535] { R15085 += 1, R15086 += 1 };
  s0 -> s4 [0, 65535] { R15086 += 1, R15041 += 1, R15042 += 1 };
  s0 -> s5 [70, 70] { R15086 += 1, R15042 += 1, R14641 += 1, R14642 += 1 };
  s0 -> s6 [70, 70] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s0 -> s7 [70, 70] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s0 -> s8 [70, 70] { R15086 += 1, R15042 += 1, R14641 += 1, R14642 += 1 };
  s0 -> s9 [70, 70] { R15086 += 1, R15042 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s0 -> s10 [70, 70] { R15086 += 1, R15042 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s0 -> s3 [71, 74] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s0 -> s1 [71, 65535] { R15086 += 1, R15042 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s0 -> s2 [71, 65535] { R15086 += 1, R15042 += 1, R14641 += 1, R14642 += 1 };
  s0 -> s11 [75, 75] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s0 -> s3 [76, 65535] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s1 -> s1 [0, 69] { R15086 += 1, R15042 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s1 -> s3 [0, 69] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s1 -> s6 [70, 70] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s1 -> s7 [70, 70] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s1 -> s9 [70, 70] { R15086 += 1, R15042 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s1 -> s10 [70, 70] { R15086 += 1, R15042 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s1 -> s3 [71, 74] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s1 -> s1 [71, 65535] { R15086 += 1, R15042 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s1 -> s11 [75, 75] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s1 -> s3 [76, 65535] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s2 -> s1 [0, 69] { R15086 += 1, R15042 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s2 -> s2 [0, 69] { R15086 += 1, R15042 += 1, R14641 += 1, R14642 += 1 };
  s2 -> s3 [0, 69] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s2 -> s5 [70, 70] { R15086 += 1, R15042 += 1, R14641 += 1, R14642 += 1 };
  s2 -> s6 [70, 70] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s2 -> s7 [70, 70] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s2 -> s8 [70, 70] { R15086 += 1, R15042 += 1, R14641 += 1, R14642 += 1 };
  s2 -> s9 [70, 70] { R15086 += 1, R15042 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s2 -> s10 [70, 70] { R15086 += 1, R15042 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s2 -> s3 [71, 74] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s2 -> s1 [71, 65535] { R15086 += 1, R15042 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s2 -> s2 [71, 65535] { R15086 += 1, R15042 += 1, R14641 += 1, R14642 += 1 };
  s2 -> s11 [75, 75] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s2 -> s3 [76, 65535] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s3 -> s3 [0, 69] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s3 -> s6 [70, 70] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s3 -> s7 [70, 70] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s3 -> s3 [71, 74] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s3 -> s11 [75, 75] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s3 -> s3 [76, 65535] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s4 -> s1 [0, 69] { R15086 += 1, R15042 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s4 -> s2 [0, 69] { R15086 += 1, R15042 += 1, R14641 += 1, R14642 += 1 };
  s4 -> s3 [0, 69] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s4 -> s4 [0, 65535] { R15086 += 1, R15041 += 1, R15042 += 1 };
  s4 -> s5 [70, 70] { R15086 += 1, R15042 += 1, R14641 += 1, R14642 += 1 };
  s4 -> s6 [70, 70] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s4 -> s7 [70, 70] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s4 -> s8 [70, 70] { R15086 += 1, R15042 += 1, R14641 += 1, R14642 += 1 };
  s4 -> s9 [70, 70] { R15086 += 1, R15042 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s4 -> s10 [70, 70] { R15086 += 1, R15042 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s4 -> s3 [71, 74] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s4 -> s1 [71, 65535] { R15086 += 1, R15042 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s4 -> s2 [71, 65535] { R15086 += 1, R15042 += 1, R14641 += 1, R14642 += 1 };
  s4 -> s11 [75, 75] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s4 -> s3 [76, 65535] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s5 -> s6 [0, 74] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s5 -> s5 [0, 65535] { R15086 += 1, R15042 += 1, R14641 += 1, R14642 += 1 };
  s5 -> s10 [0, 65535] { R15086 += 1, R15042 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s5 -> s14 [75, 75] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s5 -> s6 [76, 65535] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s6 -> s6 [0, 74] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s6 -> s14 [75, 75] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s6 -> s6 [76, 65535] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s10 -> s6 [0, 74] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s10 -> s10 [0, 65535] { R15086 += 1, R15042 += 1, R14642 += 1, R14643 += 1, R14644 += 1 };
  s10 -> s14 [75, 75] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s10 -> s6 [76, 65535] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s11 -> s12 [0, 69] { R15086 += 1, R15042 += 1, R14642 += 1 };
  s11 -> s11 [0, 69] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s11 -> s13 [0, 69] { R15086 += 1, R15042 += 1 };
  s11 -> s14 [70, 70] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s11 -> s15 [70, 70] { R15086 += 1, R15042 += 1 };
  s11 -> s16 [70, 70] { R15086 += 1, R15042 += 1, R14642 += 1 };
  s11 -> s17 [70, 70] { R15086 += 1, R15042 += 1 };
  s11 -> s18 [70, 70] { R15086 += 1, R15042 += 1, R14642 += 1 };
  s11 -> s19 [70, 70] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s11 -> s12 [71, 65535] { R15086 += 1, R15042 += 1, R14642 += 1 };
  s11 -> s11 [71, 65535] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s11 -> s13 [71, 65535] { R15086 += 1, R15042 += 1 };
  s12 -> s12 [0, 69] { R15086 += 1, R15042 += 1, R14642 += 1 };
  s12 -> s13 [0, 69] { R15086 += 1, R15042 += 1 };
  s12 -> s15 [70, 70] { R15086 += 1, R15042 += 1 };
  s12 -> s16 [70, 70] { R15086 += 1, R15042 += 1, R14642 += 1 };
  s12 -> s17 [70, 70] { R15086 += 1, R15042 += 1 };
  s12 -> s18 [70, 70] { R15086 += 1, R15042 += 1, R14642 += 1 };
  s12 -> s12 [71, 65535] { R15086 += 1, R15042 += 1, R14642 += 1 };
  s12 -> s13 [71, 65535] { R15086 += 1, R15042 += 1 };
  s13 -> s13 [0, 69] { R15086 += 1, R15042 += 1 };
  s13 -> s20 [0, 65535];
  s13 -> s13 [0, 65535] { R15086 += 1 };
  s13 -> s15 [70, 70] { R15086 += 1, R15042 += 1 };
  s13 -> s17 [70, 70] { R15086 += 1, R15042 += 1 };
  s13 -> s13 [71, 65535] { R15086 += 1, R15042 += 1 };
  s14 -> s14 [0, 65535] { R15086 += 1, R15042 += 1, R14642 += 1, R14644 += 1 };
  s14 -> s15 [0, 65535] { R15086 += 1, R15042 += 1 };
  s14 -> s18 [0, 65535] { R15086 += 1, R15042 += 1, R14642 += 1 };
  s15 -> s15 [0, 65535] { R15086 += 1, R15042 += 1 };
  s15 -> s21 [0, 65535] { R15086 += 1 };
  s15 -> s20 [0, 65535];
  s17 -> s17 [0, 65535] { R15086 += 1 };
  s17 -> s20 [0, 65535];
  s18 -> s15 [0, 65535] { R15086 += 1, R15042 += 1 };
  s18 -> s18 [0, 65535] { R15086 += 1, R15042 += 1, R14642 += 1 };
  s20 -> s20 [0, 65535];
  s21 -> s21 [0, 65535] { R15086 += 1 };
  s21 -> s20 [0, 65535];
  accepting s17, s13, s21, s20, s15;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R15088 += 1, R15044 += 1, R14980 += 1, R14982 += 1, R14983 += 1 };
  s0 -> s2 [0, 69] { R15088 += 1, R15044 += 1, R14979 += 1, R14980 += 1 };
  s0 -> s3 [0, 69] { R15088 += 1, R15044 += 1, R14980 += 1, R14981 += 1, R14982 += 1 };
  s0 -> s4 [0, 65535] { R15088 += 1, R15043 += 1, R15044 += 1 };
  s0 -> s0 [0, 65535] { R15087 += 1, R15088 += 1 };
  s0 -> s5 [70, 70] { R15088 += 1, R15044 += 1, R14980 += 1, R14982 += 1, R14983 += 1 };
  s0 -> s6 [70, 70] { R15088 += 1, R15044 += 1, R14980 += 1, R14981 += 1, R14982 += 1 };
  s0 -> s7 [70, 70] { R15088 += 1, R15044 += 1, R14980 += 1, R14982 += 1, R14983 += 1 };
  s0 -> s8 [70, 70] { R15088 += 1, R15044 += 1, R14979 += 1, R14980 += 1 };
  s0 -> s9 [70, 70] { R15088 += 1, R15044 += 1, R14979 += 1, R14980 += 1 };
  s0 -> s10 [70, 70] { R15088 += 1, R15044 += 1, R14980 += 1, R14981 += 1, R14982 += 1 };
  s0 -> s1 [71, 65535] { R15088 += 1, R15044 += 1, R14980 += 1, R14982 += 1, R14983 += 1 };
  s0 -> s2 [71, 65535] { R15088 += 1, R15044 += 1, R14979 += 1, R14980 += 1 };
  s0 -> s3 [71, 65535] { R15088 += 1, R15044 += 1, R14980 += 1, R14981 += 1, R14982 += 1 };
  s1 -> s1 [0, 69] { R15088 += 1, R15044 += 1, R14980 += 1, R14982 += 1, R14983 += 1 };
  s1 -> s1 [0, 65535] { R15088 += 1 };
  s1 -> s11 [0, 65535];
  s1 -> s5 [70, 70] { R15088 += 1, R15044 += 1, R14980 += 1, R14982 += 1, R14983 += 1 };
  s1 -> s7 [70, 70] { R15088 += 1, R15044 += 1, R14980 += 1, R14982 += 1, R14983 += 1 };
  s1 -> s1 [71, 65535] { R15088 += 1, R15044 += 1, R14980 += 1, R14982 += 1, R14983 += 1 };
  s2 -> s1 [0, 69] { R15088 += 1, R15044 += 1, R14980 += 1, R14982 += 1, R14983 += 1 };
  s2 -> s2 [0, 69] { R15088 += 1, R15044 += 1, R14979 += 1, R14980 += 1 };
  s2 -> s3 [0, 69] { R15088 += 1, R15044 += 1, R14980 += 1, R14981 += 1, R14982 += 1 };
  s2 -> s5 [70, 70] { R15088 += 1, R15044 += 1, R14980 += 1, R14982 += 1, R14983 += 1 };
  s2 -> s6 [70, 70] { R15088 += 1, R15044 += 1, R14980 += 1, R14981 += 1, R14982 += 1 };
  s2 -> s7 [70, 70] { R15088 += 1, R15044 += 1, R14980 += 1, R14982 += 1, R14983 += 1 };
  s2 -> s8 [70, 70] { R15088 += 1, R15044 += 1, R14979 += 1, R14980 += 1 };
  s2 -> s9 [70, 70] { R15088 += 1, R15044 += 1, R14979 += 1, R14980 += 1 };
  s2 -> s10 [70, 70] { R15088 += 1, R15044 += 1, R14980 += 1, R14981 += 1, R14982 += 1 };
  s2 -> s1 [71, 65535] { R15088 += 1, R15044 += 1, R14980 += 1, R14982 += 1, R14983 += 1 };
  s2 -> s2 [71, 65535] { R15088 += 1, R15044 += 1, R14979 += 1, R14980 += 1 };
  s2 -> s3 [71, 65535] { R15088 += 1, R15044 += 1, R14980 += 1, R14981 += 1, R14982 += 1 };
  s3 -> s1 [0, 69] { R15088 += 1, R15044 += 1, R14980 += 1, R14982 += 1, R14983 += 1 };
  s3 -> s3 [0, 69] { R15088 += 1, R15044 += 1, R14980 += 1, R14981 += 1, R14982 += 1 };
  s3 -> s5 [70, 70] { R15088 += 1, R15044 += 1, R14980 += 1, R14982 += 1, R14983 += 1 };
  s3 -> s6 [70, 70] { R15088 += 1, R15044 += 1, R14980 += 1, R14981 += 1, R14982 += 1 };
  s3 -> s7 [70, 70] { R15088 += 1, R15044 += 1, R14980 += 1, R14982 += 1, R14983 += 1 };
  s3 -> s10 [70, 70] { R15088 += 1, R15044 += 1, R14980 += 1, R14981 += 1, R14982 += 1 };
  s3 -> s1 [71, 65535] { R15088 += 1, R15044 += 1, R14980 += 1, R14982 += 1, R14983 += 1 };
  s3 -> s3 [71, 65535] { R15088 += 1, R15044 += 1, R14980 += 1, R14981 += 1, R14982 += 1 };
  s4 -> s1 [0, 69] { R15088 += 1, R15044 += 1, R14980 += 1, R14982 += 1, R14983 += 1 };
  s4 -> s2 [0, 69] { R15088 += 1, R15044 += 1, R14979 += 1, R14980 += 1 };
  s4 -> s3 [0, 69] { R15088 += 1, R15044 += 1, R14980 += 1, R14981 += 1, R14982 += 1 };
  s4 -> s4 [0, 65535] { R15088 += 1, R15043 += 1, R15044 += 1 };
  s4 -> s5 [70, 70] { R15088 += 1, R15044 += 1, R14980 += 1, R14982 += 1, R14983 += 1 };
  s4 -> s6 [70, 70] { R15088 += 1, R15044 += 1, R14980 += 1, R14981 += 1, R14982 += 1 };
  s4 -> s7 [70, 70] { R15088 += 1, R15044 += 1, R14980 += 1, R14982 += 1, R14983 += 1 };
  s4 -> s8 [70, 70] { R15088 += 1, R15044 += 1, R14979 += 1, R14980 += 1 };
  s4 -> s9 [70, 70] { R15088 += 1, R15044 += 1, R14979 += 1, R14980 += 1 };
  s4 -> s10 [70, 70] { R15088 += 1, R15044 += 1, R14980 += 1, R14981 += 1, R14982 += 1 };
  s4 -> s1 [71, 65535] { R15088 += 1, R15044 += 1, R14980 += 1, R14982 += 1, R14983 += 1 };
  s4 -> s2 [71, 65535] { R15088 += 1, R15044 += 1, R14979 += 1, R14980 += 1 };
  s4 -> s3 [71, 65535] { R15088 += 1, R15044 += 1, R14980 += 1, R14981 += 1, R14982 += 1 };
  s5 -> s5 [0, 65535] { R15088 += 1 };
  s5 -> s11 [0, 65535];
  s6 -> s6 [0, 65535] { R15088 += 1, R15044 += 1, R14980 += 1, R14981 += 1, R14982 += 1 };
  s6 -> s7 [0, 65535] { R15088 += 1, R15044 += 1, R14980 += 1, R14982 += 1, R14983 += 1 };
  s7 -> s7 [0, 65535] { R15088 += 1, R15044 += 1, R14980 += 1, R14982 += 1, R14983 += 1 };
  s7 -> s11 [0, 65535];
  s7 -> s12 [0, 65535] { R15088 += 1 };
  s9 -> s6 [0, 65535] { R15088 += 1, R15044 += 1, R14980 += 1, R14981 += 1, R14982 += 1 };
  s9 -> s7 [0, 65535] { R15088 += 1, R15044 += 1, R14980 += 1, R14982 += 1, R14983 += 1 };
  s9 -> s9 [0, 65535] { R15088 += 1, R15044 += 1, R14979 += 1, R14980 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R15088 += 1 };
  accepting s12, s5, s1, s7, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R15088 && R23 - R15088 = -1 && R24 = R15088 && R25 - R15088 = -1 && R26 = R15088 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R14646 + -1*R14642 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R14646 + -1*R14642 - R66 = 0 && R55 + R13518 + R13515 + -1*R14648 + -1*R14644 - R68 = 0 && R65 + R14645 + R14641 = 0 && R67 + R14647 + R14643 = 0 && R15029 = 0 && R15030 = 0 && R15035 = 0 && R15036 = 0 && R15037 = 0 && R15038 = 0 && R15041 = 0 && R15042 = 0 && R15043 = 0 && R15044 = 0 && R15045 = 0 && R15046 = R15088 && R15047 = 0 && R15048 = R15088 && R15049 = 0 && R15050 = R15088 && R15051 = 0 && R15052 = R15088 && R15053 = 0 && R15054 = R15088 && R15055 = 0 && R15056 = R15088 && R15057 = 0 && R15058 = R15088 && R15059 = 0 && R15060 = R15088 && R15061 = 0 && R15062 = R15088 && R15063 = 0 && R15064 = R15088 && R15065 = 0 && R15066 = R15088 && R15067 = 0 && R15068 = R15088 && R15069 = 0 && R15070 = R15088 && R15071 = 0 && R15072 = R15088 && R15073 = 0 && R15074 = R15088 && R15075 = 0 && R15076 = R15088 && R15077 = 0 && R15078 = R15088 && R15079 = 0 && R15080 = R15088 && R15081 = 0 && R15082 = R15088 && R15083 = 0 && R15084 = R15088 && R15085 = 0 && R15086 = R15088 && R15087 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R13524 + R13521 < 1 && -1*R14646 + -1*R14642 - R66 < 1 && -1*R14648 + -1*R14644 - R68 < 1 && 0 < R15088 && (R2 != 0 || R20 = 0 || (R14989 = 0 && R14990 = 0)) && (R2 != 0 || R20 = 0 || (R14991 = 0 && R14992 = 0)) && (R2 != 0 || R20 = 0 || (R14993 = 0 && R14994 = 0)) && (R2 != 0 || R20 = 0 || (R14995 = 0 && R14996 = 0)) && (R2 != 0 || R20 = 0 || (R14997 = 0 && R14998 = 0)) && (R2 != 0 || R20 = 0 || (R14999 = 0 && R15000 = 0)) && (R2 != 0 || R20 = 0 || (R15001 = 0 && R15002 = 0)) && (R2 != 0 || R20 = 0 || (R15003 = 0 && R15004 = 0)) && (R2 != 0 || R20 = 0 || (R15005 = 0 && R15006 = 0)) && (R2 != 0 || R20 = 0 || (R15007 = 0 && R15008 = 0)) && (R53 + R13516 + R13513 != 0 || R54 + R13517 + R13514 + -1*R14646 + -1*R14642 - R66 = 0 || R66 + R14646 + R14642 < 1) && (R59 + R13522 + R13519 != 0 || R60 + R13523 + R13520 + -1*R14646 + -1*R14642 - R66 = 0 || R66 + R14646 + R14642 < 1) && (R66 + R14646 + R14642 != 0 || ((R53 + R13516 + R13513 != 0 || R54 + R13517 + R13514 = 0 || R68 + R14648 + R14644 < 1) && (R53 + R13516 + R13513 = 0 || R68 + R14648 + R14644 < 1))) && (R66 + R14646 + R14642 != 0 || ((R59 + R13522 + R13519 != 0 || R60 + R13523 + R13520 = 0 || R68 + R14648 + R14644 < 1) && (R59 + R13522 + R13519 = 0 || R68 + R14648 + R14644 < 1))) && (R66 + R14646 + R14642 != 0 || ((R73 + R14984 + R14979 != 0 || R74 + R14985 + R14980 = 0 || R68 + R14648 + R14644 < 1) && (R73 + R14984 + R14979 = 0 || R68 + R14648 + R14644 < 1))) && (R68 + R14648 + R14644 != 0 || R77 + R14988 + R14983 = 0 || (R75 + R14986 + R14981 = 0 && R76 + R14987 + R14982 = 0)) && (R73 + R14984 + R14979 != 0 || R66 + R14646 + R14642 + -1*R14985 + -1*R14980 - R74 = 0 || R66 + R14646 + R14642 < 1) && (R75 + R14986 + R14981 != 0 || R68 + R14648 + R14644 + -1*R14987 + -1*R14982 - R76 = 0 || R68 + R14648 + R14644 < 1) && (R14989 != 0 || R2 = R14990 || R2 < 1) && (R14991 != 0 || R2 = R14992 || R2 < 1) && (R14993 != 0 || R2 = R14994 || R2 < 1) && (R14995 != 0 || R2 = R14996 || R2 < 1) && (R14997 != 0 || R2 = R14998 || R2 < 1) && (R14999 != 0 || R2 = R15000 || R2 < 1) && (R15001 != 0 || R2 = R15002 || R2 < 1) && (R15003 != 0 || R2 = R15004 || R2 < 1) && (R15005 != 0 || R2 = R15006 || R2 < 1) && (R15007 != 0 || R2 = R15008 || R2 < 1) && (R21 = 0 || (R15027 = 0 && R15028 = 0)) && (R21 = 0 || (R15031 = 0 && R15032 = 0)) && (R21 = 0 || (R15033 = 0 && R15034 = 0)) && (R21 = 0 || (R15039 = 0 && R15040 = 0)) && (R22 = 0 || (R15009 = 0 && R15010 = 0)) && (R22 = 0 || (R15011 = 0 && R15012 = 0)) && (R22 = 0 || (R15013 = 0 && R15014 = 0)) && (R22 = 0 || (R15015 = 0 && R15016 = 0)) && (R22 = 0 || (R15017 = 0 && R15018 = 0)) && (R22 = 0 || (R15019 = 0 && R15020 = 0)) && (R22 = 0 || (R15021 = 0 && R15022 = 0)) && (R22 = 0 || (R15023 = 0 && R15024 = 0)) && (R22 = 0 || (R15025 = 0 && R15026 = 0)) && (R53 + R13516 + R13513 = 0 || R66 + R14646 + R14642 < 1) && (R59 + R13522 + R13519 = 0 || R66 + R14646 + R14642 < 1) && (R73 + R14984 + R14979 = 0 || R66 + R14646 + R14642 < 1) && (R75 + R14986 + R14981 = 0 || R68 + R14648 + R14644 < 1) && (R14989 = 0 || R2 < 1) && (R14991 = 0 || R2 < 1) && (R14993 = 0 || R2 < 1) && (R14995 = 0 || R2 < 1) && (R14997 = 0 || R2 < 1) && (R14999 = 0 || R2 < 1) && (R15001 = 0 || R2 < 1) && (R15003 = 0 || R2 < 1) && (R15005 = 0 || R2 < 1) && (R15007 = 0 || R2 < 1);
// End of Parikh automata intersection problem
