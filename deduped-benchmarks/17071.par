// Parikh automata intersection problem, generated by OSTRICH+
counter int R12, R13513, R13514, R13515, R13516, R13517, R13518, R13519, R13520, R13521, R13522, R13523, R13524, R14083, R14084, R14085, R14086, R14087, R14088, R14089, R14090, R14311, R14312, R14313, R14314, R14315, R14316, R14317, R14318, R14319, R14320, R14321, R14322, R14323, R14324, R14325, R14326, R14327, R14328, R14329, R14330, R14331, R14332, R14333, R14334, R14335, R14336, R14337, R14338, R14339, R14340, R14341, R14342, R14343, R14344, R14345, R14346, R14347, R14348, R14349, R14350, R14351, R14352, R14353, R14354, R14355, R14356, R14357, R14358, R14359, R14360, R14361, R14362, R14363, R14364, R14365, R14366, R14367, R14368, R14369, R14370, R14371, R14372, R14373, R14374, R14375, R14376, R14377, R14378, R14379, R14380, R14381, R14382, R14383, R14384, R14385, R14386, R14387, R14388, R14389, R14390, R14391, R14392, R14393, R14394, R14395, R14396, R14397, R14398, R14399, R14400, R14401, R14402, R14403, R14404, R14405, R14406, R14407, R14408, R14409, R14410, R14411, R14412, R14413, R14414, R14415, R14416, R14417, R14418, R14419, R14420, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R4, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R14342 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R14341 += 1, R14342 += 1 };
  s1 -> s1 [0, 65535] { R14342 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R14344 += 1 };
  s0 -> s0 [0, 65535] { R14343 += 1, R14344 += 1 };
  s0 -> s2 [70, 70] { R14344 += 1 };
  s0 -> s3 [70, 70] { R14344 += 1 };
  s0 -> s1 [76, 65535] { R14344 += 1 };
  s1 -> s1 [0, 69] { R14344 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14344 += 1 };
  s1 -> s3 [70, 70] { R14344 += 1 };
  s1 -> s1 [76, 65535] { R14344 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R14344 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R14344 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R14346 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R14345 += 1, R14346 += 1 };
  s0 -> s2 [70, 70] { R14346 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R14346 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R14346 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R14346 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14346 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R14346 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R14346 += 1, R45 += 1 };
  s2 -> s2 [0, 65535] { R14346 += 1, R45 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R14348 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R14347 += 1, R14348 += 1 };
  s0 -> s2 [70, 70] { R14348 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R14348 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R14348 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R14348 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14348 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R14348 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R14348 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R14348 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R14350 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R14349 += 1, R14350 += 1 };
  s0 -> s2 [70, 70] { R14350 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R14350 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R14350 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R14350 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14350 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R14350 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R14350 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535] { R14350 += 1, R49 += 1, R50 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R14352 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R14351 += 1, R14352 += 1 };
  s0 -> s2 [70, 70] { R14352 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R14352 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R14352 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R14352 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14352 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R14352 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R14352 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535] { R14352 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R14354 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R14353 += 1, R14354 += 1 };
  s0 -> s2 [70, 70] { R14354 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R14354 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R14354 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R14354 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14354 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R14354 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R14354 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R14354 += 1, R59 += 1, R60 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R14356 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R14355 += 1, R14356 += 1 };
  s0 -> s2 [70, 70] { R14356 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R14356 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R14356 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R14356 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14356 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R14356 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R14356 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R14356 += 1, R65 += 1, R66 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R14358 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R14357 += 1, R14358 += 1 };
  s0 -> s2 [70, 70] { R14358 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R14358 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R14358 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R14358 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14358 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R14358 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R14358 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R14358 += 1, R73 += 1, R74 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R14378 += 1 };
  s0 -> s0 [0, 65535] { R14377 += 1, R14378 += 1 };
  s0 -> s2 [70, 70] { R14378 += 1 };
  s0 -> s1 [71, 65535] { R14378 += 1 };
  s1 -> s1 [0, 69] { R14378 += 1 };
  s1 -> s2 [70, 70] { R14378 += 1 };
  s1 -> s1 [71, 65535] { R14378 += 1 };
  s2 -> s2 [0, 65535] { R14378 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R14380 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R14379 += 1, R14380 += 1 };
  s1 -> s1 [0, 65535] { R14380 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R14382 += 1 };
  s0 -> s0 [0, 65535] { R14381 += 1, R14382 += 1 };
  s0 -> s2 [0, 65535] { R14382 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R14382 += 1 };
  s0 -> s1 [71, 65535] { R14382 += 1 };
  s1 -> s1 [0, 69] { R14382 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R14382 += 1 };
  s1 -> s1 [71, 65535] { R14382 += 1 };
  s2 -> s1 [0, 69] { R14382 += 1 };
  s2 -> s2 [0, 65535] { R14382 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R14382 += 1 };
  s2 -> s1 [71, 65535] { R14382 += 1 };
  s3 -> s3 [0, 65535] { R14382 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R14384 += 1, R14322 += 1 };
  s0 -> s2 [0, 65535] { R14384 += 1, R14321 += 1, R14322 += 1 };
  s0 -> s0 [0, 65535] { R14383 += 1, R14384 += 1 };
  s0 -> s1 [71, 65535] { R14384 += 1, R14322 += 1 };
  s1 -> s1 [0, 69] { R14384 += 1, R14322 += 1 };
  s1 -> s1 [0, 65535] { R14384 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R14384 += 1, R14322 += 1 };
  s2 -> s1 [0, 69] { R14384 += 1, R14322 += 1 };
  s2 -> s2 [0, 65535] { R14384 += 1, R14321 += 1, R14322 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R14384 += 1, R14322 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s0 [0, 65535] { R14385 += 1, R14386 += 1 };
  s0 -> s1 [0, 65535] { R14386 += 1, R14324 += 1, R20 += 1 };
  s0 -> s2 [0, 65535] { R14386 += 1, R14323 += 1, R14324 += 1 };
  s1 -> s4 [0, 65535] { R14386 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R14386 += 1, R14324 += 1, R20 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R14386 += 1, R14324 += 1, R20 += 1 };
  s2 -> s2 [0, 65535] { R14386 += 1, R14323 += 1, R14324 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R14386 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R14388 += 1, R14326 += 1 };
  s0 -> s0 [0, 65535] { R14387 += 1, R14388 += 1 };
  s0 -> s2 [0, 65535] { R14388 += 1, R14325 += 1, R14326 += 1 };
  s0 -> s1 [75, 65535] { R14388 += 1, R14326 += 1 };
  s1 -> s1 [0, 70] { R14388 += 1, R14326 += 1 };
  s1 -> s1 [0, 65535] { R14388 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R14388 += 1, R14326 += 1 };
  s2 -> s1 [0, 70] { R14388 += 1, R14326 += 1 };
  s2 -> s2 [0, 65535] { R14388 += 1, R14325 += 1, R14326 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R14388 += 1, R14326 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R14389 += 1, R14390 += 1 };
  s0 -> s1 [0, 65535] { R14390 += 1, R14327 += 1, R14328 += 1 };
  s0 -> s2 [0, 65535] { R14390 += 1, R14328 += 1, R84 += 1 };
  s1 -> s1 [0, 65535] { R14390 += 1, R14327 += 1, R14328 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R14390 += 1, R14328 += 1, R84 += 1 };
  s2 -> s3 [0, 65535] { R14390 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R14390 += 1, R14328 += 1, R84 += 1 };
  s3 -> s3 [0, 65535] { R14390 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R14392 += 1, R14330 += 1 };
  s0 -> s0 [0, 65535] { R14391 += 1, R14392 += 1 };
  s0 -> s2 [0, 65535] { R14392 += 1, R14329 += 1, R14330 += 1 };
  s0 -> s3 [0, 65535] { R14392 += 1, R14330 += 1, R86 += 1 };
  s0 -> s1 [76, 65535] { R14392 += 1, R14330 += 1 };
  s1 -> s1 [0, 74] { R14392 += 1, R14330 += 1 };
  s1 -> s1 [0, 65535] { R14392 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R14392 += 1, R14330 += 1 };
  s2 -> s1 [0, 74] { R14392 += 1, R14330 += 1 };
  s2 -> s2 [0, 65535] { R14392 += 1, R14329 += 1, R14330 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R14392 += 1, R14330 += 1, R86 += 1 };
  s2 -> s1 [76, 65535] { R14392 += 1, R14330 += 1 };
  s3 -> s1 [0, 74] { R14392 += 1, R14330 += 1 };
  s3 -> s4 [0, 65535] { R14392 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R14392 += 1, R14330 += 1, R86 += 1 };
  s3 -> s1 [76, 65535] { R14392 += 1, R14330 += 1 };
  s4 -> s4 [0, 65535] { R14392 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R14394 += 1, R14332 += 1 };
  s0 -> s0 [0, 65535] { R14393 += 1, R14394 += 1 };
  s0 -> s2 [0, 65535] { R14394 += 1, R14332 += 1, R90 += 1 };
  s0 -> s3 [0, 65535] { R14394 += 1, R14331 += 1, R14332 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R14394 += 1, R14332 += 1 };
  s1 -> s5 [0, 65535] { R14394 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R14394 += 1, R14332 += 1 };
  s2 -> s5 [0, 65535] { R14394 += 1 };
  s2 -> s2 [0, 65535] { R14394 += 1, R14332 += 1, R90 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R14394 += 1, R14332 += 1 };
  s3 -> s2 [0, 65535] { R14394 += 1, R14332 += 1, R90 += 1 };
  s3 -> s3 [0, 65535] { R14394 += 1, R14331 += 1, R14332 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R14394 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R14396 += 1, R14334 += 1 };
  s0 -> s2 [0, 65535] { R14396 += 1, R14333 += 1, R14334 += 1 };
  s0 -> s0 [0, 65535] { R14395 += 1, R14396 += 1 };
  s0 -> s3 [0, 65535] { R14396 += 1, R14334 += 1, R13517 += 1, R13518 += 1 };
  s1 -> s1 [0, 65535] { R14396 += 1, R14334 += 1 };
  s1 -> s4 [0, 65535] { R14396 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R14396 += 1, R14334 += 1 };
  s2 -> s2 [0, 65535] { R14396 += 1, R14333 += 1, R14334 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R14396 += 1, R14334 += 1, R13517 += 1, R13518 += 1 };
  s3 -> s1 [0, 65535] { R14396 += 1, R14334 += 1 };
  s3 -> s4 [0, 65535] { R14396 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R14396 += 1, R14334 += 1, R13517 += 1, R13518 += 1 };
  s4 -> s4 [0, 65535] { R14396 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R14398 += 1, R14336 += 1, R13523 += 1 };
  s0 -> s0 [0, 65535] { R14397 += 1, R14398 += 1 };
  s0 -> s2 [0, 65535] { R14398 += 1, R14336 += 1, R13522 += 1, R13523 += 1 };
  s0 -> s3 [0, 65535] { R14398 += 1, R14336 += 1, R13523 += 1, R13524 += 1 };
  s0 -> s4 [0, 65535] { R14398 += 1, R14335 += 1, R14336 += 1 };
  s0 -> s1 [76, 65535] { R14398 += 1, R14336 += 1, R13523 += 1 };
  s1 -> s1 [0, 74] { R14398 += 1, R14336 += 1, R13523 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R14398 += 1, R14336 += 1 };
  s1 -> s7 [0, 65535] { R14398 += 1 };
  s1 -> s1 [76, 65535] { R14398 += 1, R14336 += 1, R13523 += 1 };
  s2 -> s1 [0, 74] { R14398 += 1, R14336 += 1, R13523 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R14398 += 1 };
  s2 -> s2 [0, 65535] { R14398 += 1, R14336 += 1, R13522 += 1, R13523 += 1 };
  s2 -> s3 [0, 65535] { R14398 += 1, R14336 += 1, R13523 += 1, R13524 += 1 };
  s2 -> s1 [76, 65535] { R14398 += 1, R14336 += 1, R13523 += 1 };
  s3 -> s1 [0, 74] { R14398 += 1, R14336 += 1, R13523 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R14398 += 1, R14336 += 1 };
  s3 -> s7 [0, 65535] { R14398 += 1 };
  s3 -> s3 [0, 65535] { R14398 += 1, R14336 += 1, R13523 += 1, R13524 += 1 };
  s3 -> s1 [76, 65535] { R14398 += 1, R14336 += 1, R13523 += 1 };
  s4 -> s1 [0, 74] { R14398 += 1, R14336 += 1, R13523 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R14398 += 1, R14336 += 1, R13522 += 1, R13523 += 1 };
  s4 -> s3 [0, 65535] { R14398 += 1, R14336 += 1, R13523 += 1, R13524 += 1 };
  s4 -> s4 [0, 65535] { R14398 += 1, R14335 += 1, R14336 += 1 };
  s4 -> s1 [76, 65535] { R14398 += 1, R14336 += 1, R13523 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R14398 += 1, R14336 += 1 };
  s6 -> s7 [0, 65535] { R14398 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R14398 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R14400 += 1, R14338 += 1, R14088 += 1 };
  s0 -> s2 [0, 65535] { R14400 += 1, R14338 += 1 };
  s0 -> s0 [0, 65535] { R14399 += 1, R14400 += 1 };
  s0 -> s3 [0, 65535] { R14400 += 1, R14337 += 1, R14338 += 1 };
  s1 -> s1 [0, 65535] { R14400 += 1, R14338 += 1, R14088 += 1 };
  s1 -> s2 [0, 65535] { R14400 += 1, R14338 += 1 };
  s1 -> s5 [0, 65535] { R14400 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R14400 += 1 };
  s2 -> s2 [0, 65535] { R14400 += 1, R14338 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R14400 += 1, R14338 += 1, R14088 += 1 };
  s3 -> s2 [0, 65535] { R14400 += 1, R14338 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R14400 += 1, R14337 += 1, R14338 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R14400 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s0 [0, 65535] { R14401 += 1, R14402 += 1 };
  s0 -> s1 [0, 65535] { R14402 += 1, R14340 += 1, R14317 += 1, R14319 += 1, R14320 += 1 };
  s0 -> s2 [0, 65535] { R14402 += 1, R14340 += 1, R14317 += 1, R14318 += 1, R14319 += 1 };
  s0 -> s3 [0, 65535] { R14402 += 1, R14340 += 1, R14316 += 1, R14317 += 1 };
  s0 -> s4 [0, 65535] { R14402 += 1, R14339 += 1, R14340 += 1 };
  s1 -> s1 [0, 65535] { R14402 += 1, R14340 += 1, R14317 += 1, R14319 += 1, R14320 += 1 };
  s1 -> s8 [0, 65535] { R14402 += 1, R14340 += 1, R14317 += 1 };
  s1 -> s7 [0, 65535] { R14402 += 1, R14340 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R14402 += 1 };
  s2 -> s1 [0, 65535] { R14402 += 1, R14340 += 1, R14317 += 1, R14319 += 1, R14320 += 1 };
  s2 -> s2 [0, 65535] { R14402 += 1, R14340 += 1, R14317 += 1, R14318 += 1, R14319 += 1 };
  s2 -> s7 [0, 65535] { R14402 += 1, R14340 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R14402 += 1 };
  s3 -> s1 [0, 65535] { R14402 += 1, R14340 += 1, R14317 += 1, R14319 += 1, R14320 += 1 };
  s3 -> s2 [0, 65535] { R14402 += 1, R14340 += 1, R14317 += 1, R14318 += 1, R14319 += 1 };
  s3 -> s3 [0, 65535] { R14402 += 1, R14340 += 1, R14316 += 1, R14317 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R14402 += 1 };
  s4 -> s1 [0, 65535] { R14402 += 1, R14340 += 1, R14317 += 1, R14319 += 1, R14320 += 1 };
  s4 -> s2 [0, 65535] { R14402 += 1, R14340 += 1, R14317 += 1, R14318 += 1, R14319 += 1 };
  s4 -> s3 [0, 65535] { R14402 += 1, R14340 += 1, R14316 += 1, R14317 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R14402 += 1, R14339 += 1, R14340 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R14402 += 1 };
  s7 -> s7 [0, 65535] { R14402 += 1, R14340 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R14402 += 1 };
  s8 -> s8 [0, 65535] { R14402 += 1, R14340 += 1, R14317 += 1 };
  s8 -> s7 [0, 65535] { R14402 += 1, R14340 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R14402 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R14403 += 1, R14404 += 1 };
  s0 -> s1 [0, 65535] { R14404 += 1, R14359 += 1, R14360 += 1 };
  s0 -> s2 [0, 65535] { R14404 += 1, R14360 += 1, R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R14404 += 1, R14359 += 1, R14360 += 1 };
  s1 -> s2 [0, 65535] { R14404 += 1, R14360 += 1, R21 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R14404 += 1 };
  s2 -> s2 [0, 65535] { R14404 += 1, R14360 += 1, R21 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R14404 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R14406 += 1, R14362 += 1 };
  s0 -> s2 [0, 65535] { R14406 += 1, R14361 += 1, R14362 += 1 };
  s0 -> s0 [0, 65535] { R14405 += 1, R14406 += 1 };
  s0 -> s3 [70, 70] { R14406 += 1, R14362 += 1 };
  s0 -> s4 [70, 70] { R14406 += 1, R14362 += 1 };
  s0 -> s5 [75, 75] { R14406 += 1, R14362 += 1 };
  s0 -> s1 [76, 65535] { R14406 += 1, R14362 += 1 };
  s1 -> s1 [0, 69] { R14406 += 1, R14362 += 1 };
  s1 -> s3 [70, 70] { R14406 += 1, R14362 += 1 };
  s1 -> s4 [70, 70] { R14406 += 1, R14362 += 1 };
  s1 -> s5 [75, 75] { R14406 += 1, R14362 += 1 };
  s1 -> s1 [76, 65535] { R14406 += 1, R14362 += 1 };
  s2 -> s1 [0, 69] { R14406 += 1, R14362 += 1 };
  s2 -> s2 [0, 65535] { R14406 += 1, R14361 += 1, R14362 += 1 };
  s2 -> s3 [70, 70] { R14406 += 1, R14362 += 1 };
  s2 -> s4 [70, 70] { R14406 += 1, R14362 += 1 };
  s2 -> s5 [75, 75] { R14406 += 1, R14362 += 1 };
  s2 -> s1 [76, 65535] { R14406 += 1, R14362 += 1 };
  s4 -> s4 [0, 70] { R14406 += 1, R14362 += 1 };
  s4 -> s8 [75, 75] { R14406 += 1, R14362 += 1 };
  s4 -> s4 [76, 65535] { R14406 += 1, R14362 += 1 };
  s5 -> s5 [0, 69] { R14406 += 1, R14362 += 1 };
  s5 -> s5 [0, 65535] { R14406 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R14406 += 1, R14362 += 1 };
  s5 -> s8 [70, 70] { R14406 += 1, R14362 += 1 };
  s5 -> s5 [75, 65535] { R14406 += 1, R14362 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R14406 += 1 };
  s8 -> s8 [0, 70] { R14406 += 1, R14362 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R14406 += 1 };
  s8 -> s8 [75, 65535] { R14406 += 1, R14362 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R14408 += 1, R14364 += 1, R83 += 1 };
  s0 -> s0 [0, 65535] { R14407 += 1, R14408 += 1 };
  s0 -> s2 [0, 65535] { R14408 += 1, R14363 += 1, R14364 += 1 };
  s0 -> s3 [70, 70] { R14408 += 1, R14364 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R14408 += 1, R14364 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R14408 += 1, R14364 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R14408 += 1, R14364 += 1, R83 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R14408 += 1 };
  s1 -> s3 [70, 70] { R14408 += 1, R14364 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R14408 += 1, R14364 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R14408 += 1, R14364 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R14408 += 1, R14364 += 1, R83 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R14408 += 1, R14363 += 1, R14364 += 1 };
  s2 -> s3 [70, 70] { R14408 += 1, R14364 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R14408 += 1, R14364 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R14408 += 1, R14364 += 1, R83 += 1 };
  s3 -> s3 [0, 65535] { R14408 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R14408 += 1, R14364 += 1, R83 += 1 };
  s4 -> s6 [0, 65535] { R14408 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R14408 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R14410 += 1, R14366 += 1, R85 += 1 };
  s0 -> s2 [0, 65535] { R14410 += 1, R14365 += 1, R14366 += 1 };
  s0 -> s0 [0, 65535] { R14409 += 1, R14410 += 1 };
  s0 -> s3 [70, 70] { R14410 += 1, R14366 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R14410 += 1, R14366 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R14410 += 1, R14366 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R14410 += 1, R14366 += 1, R85 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R14410 += 1 };
  s1 -> s3 [70, 70] { R14410 += 1, R14366 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R14410 += 1, R14366 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R14410 += 1, R14366 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R14410 += 1, R14366 += 1, R85 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R14410 += 1, R14365 += 1, R14366 += 1 };
  s2 -> s3 [70, 70] { R14410 += 1, R14366 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R14410 += 1, R14366 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R14410 += 1, R14366 += 1, R85 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R14410 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R14410 += 1 };
  s4 -> s4 [0, 65535] { R14410 += 1, R14366 += 1, R85 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R14410 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R14412 += 1, R14368 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R14412 += 1, R14368 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R14411 += 1, R14412 += 1 };
  s0 -> s3 [0, 65535] { R14412 += 1, R14367 += 1, R14368 += 1 };
  s0 -> s4 [70, 70] { R14412 += 1, R14368 += 1, R87 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R14412 += 1, R14368 += 1, R87 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R14412 += 1, R14368 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R14412 += 1, R14368 += 1, R88 += 1 };
  s0 -> s1 [71, 74] { R14412 += 1, R14368 += 1, R88 += 1 };
  s0 -> s2 [71, 65535] { R14412 += 1, R14368 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R14412 += 1, R14368 += 1, R88 += 1 };
  s0 -> s1 [76, 65535] { R14412 += 1, R14368 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R14412 += 1, R14368 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R14412 += 1, R14368 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R14412 += 1, R14368 += 1, R88 += 1 };
  s1 -> s1 [71, 74] { R14412 += 1, R14368 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R14412 += 1, R14368 += 1, R88 += 1 };
  s1 -> s1 [76, 65535] { R14412 += 1, R14368 += 1, R88 += 1 };
  s2 -> s1 [0, 69] { R14412 += 1, R14368 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R14412 += 1, R14368 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R14412 += 1, R14368 += 1, R87 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R14412 += 1, R14368 += 1, R87 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R14412 += 1, R14368 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R14412 += 1, R14368 += 1, R88 += 1 };
  s2 -> s1 [71, 74] { R14412 += 1, R14368 += 1, R88 += 1 };
  s2 -> s2 [71, 65535] { R14412 += 1, R14368 += 1, R87 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R14412 += 1, R14368 += 1, R88 += 1 };
  s2 -> s1 [76, 65535] { R14412 += 1, R14368 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R14412 += 1, R14368 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R14412 += 1, R14368 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R14412 += 1, R14367 += 1, R14368 += 1 };
  s3 -> s4 [70, 70] { R14412 += 1, R14368 += 1, R87 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R14412 += 1, R14368 += 1, R87 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R14412 += 1, R14368 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R14412 += 1, R14368 += 1, R88 += 1 };
  s3 -> s1 [71, 74] { R14412 += 1, R14368 += 1, R88 += 1 };
  s3 -> s2 [71, 65535] { R14412 += 1, R14368 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R14412 += 1, R14368 += 1, R88 += 1 };
  s3 -> s1 [76, 65535] { R14412 += 1, R14368 += 1, R88 += 1 };
  s4 -> s6 [0, 74] { R14412 += 1, R14368 += 1, R88 += 1 };
  s4 -> s4 [0, 65535] { R14412 += 1, R14368 += 1, R87 += 1, R88 += 1 };
  s4 -> s10 [75, 75] { R14412 += 1, R14368 += 1, R88 += 1 };
  s4 -> s6 [76, 65535] { R14412 += 1, R14368 += 1, R88 += 1 };
  s6 -> s6 [0, 74] { R14412 += 1, R14368 += 1, R88 += 1 };
  s6 -> s10 [75, 75] { R14412 += 1, R14368 += 1, R88 += 1 };
  s6 -> s6 [76, 65535] { R14412 += 1, R14368 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R14412 += 1, R14368 += 1, R88 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R14412 += 1 };
  s8 -> s10 [70, 70] { R14412 += 1, R14368 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R14412 += 1, R14368 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R14412 += 1, R14368 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R14412 += 1, R14368 += 1, R88 += 1 };
  s10 -> s12 [0, 65535] { R14412 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R14412 += 1 };
  s12 -> s12 [0, 65535] { R14412 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R14414 += 1, R14370 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s2 [0, 69] { R14414 += 1, R14370 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s3 [0, 65535] { R14414 += 1, R14369 += 1, R14370 += 1 };
  s0 -> s0 [0, 65535] { R14413 += 1, R14414 += 1 };
  s0 -> s4 [70, 70] { R14414 += 1, R14370 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s5 [70, 70] { R14414 += 1, R14370 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s6 [70, 70] { R14414 += 1, R14370 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s7 [70, 70] { R14414 += 1, R14370 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s1 [71, 65535] { R14414 += 1, R14370 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s2 [71, 65535] { R14414 += 1, R14370 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s1 [0, 69] { R14414 += 1, R14370 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s1 [0, 65535] { R14414 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s5 [70, 70] { R14414 += 1, R14370 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s7 [70, 70] { R14414 += 1, R14370 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s1 [71, 65535] { R14414 += 1, R14370 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s1 [0, 69] { R14414 += 1, R14370 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [0, 69] { R14414 += 1, R14370 += 1, R13513 += 1, R13514 += 1 };
  s2 -> s4 [70, 70] { R14414 += 1, R14370 += 1, R13513 += 1, R13514 += 1 };
  s2 -> s5 [70, 70] { R14414 += 1, R14370 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s6 [70, 70] { R14414 += 1, R14370 += 1, R13513 += 1, R13514 += 1 };
  s2 -> s7 [70, 70] { R14414 += 1, R14370 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s1 [71, 65535] { R14414 += 1, R14370 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [71, 65535] { R14414 += 1, R14370 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s1 [0, 69] { R14414 += 1, R14370 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s2 [0, 69] { R14414 += 1, R14370 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s3 [0, 65535] { R14414 += 1, R14369 += 1, R14370 += 1 };
  s3 -> s4 [70, 70] { R14414 += 1, R14370 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s5 [70, 70] { R14414 += 1, R14370 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s6 [70, 70] { R14414 += 1, R14370 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s7 [70, 70] { R14414 += 1, R14370 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s1 [71, 65535] { R14414 += 1, R14370 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s2 [71, 65535] { R14414 += 1, R14370 += 1, R13513 += 1, R13514 += 1 };
  s4 -> s4 [0, 65535] { R14414 += 1, R14370 += 1, R13513 += 1, R13514 += 1 };
  s4 -> s7 [0, 65535] { R14414 += 1, R14370 += 1, R13514 += 1, R13515 += 1 };
  s5 -> s5 [0, 65535] { R14414 += 1 };
  s5 -> s9 [0, 65535];
  s7 -> s8 [0, 65535] { R14414 += 1 };
  s7 -> s7 [0, 65535] { R14414 += 1, R14370 += 1, R13514 += 1, R13515 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R14414 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  accepting s8, s5, s9, s1, s7;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R14416 += 1, R14372 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s2 [0, 65535] { R14416 += 1, R14371 += 1, R14372 += 1 };
  s0 -> s0 [0, 65535] { R14415 += 1, R14416 += 1 };
  s0 -> s3 [70, 70] { R14416 += 1, R14372 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s4 [70, 70] { R14416 += 1, R14372 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s1 [71, 65535] { R14416 += 1, R14372 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [0, 69] { R14416 += 1, R14372 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [0, 65535] { R14416 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R14416 += 1, R14372 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s4 [70, 70] { R14416 += 1, R14372 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [71, 65535] { R14416 += 1, R14372 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s1 [0, 69] { R14416 += 1, R14372 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s2 [0, 65535] { R14416 += 1, R14371 += 1, R14372 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R14416 += 1, R14372 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s4 [70, 70] { R14416 += 1, R14372 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s1 [71, 65535] { R14416 += 1, R14372 += 1, R13519 += 1, R13520 += 1 };
  s3 -> s3 [0, 65535] { R14416 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R14416 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R14416 += 1, R14372 += 1, R13519 += 1, R13520 += 1 };
  s5 -> s5 [0, 65535] { R14416 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s0 -> s2 [0, 69] { R14418 += 1, R14374 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s0 -> s3 [0, 69] { R14418 += 1, R14374 += 1, R14083 += 1, R14084 += 1 };
  s0 -> s0 [0, 65535] { R14417 += 1, R14418 += 1 };
  s0 -> s4 [0, 65535] { R14418 += 1, R14373 += 1, R14374 += 1 };
  s0 -> s5 [70, 70] { R14418 += 1, R14374 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s0 -> s6 [70, 70] { R14418 += 1, R14374 += 1, R14083 += 1, R14084 += 1 };
  s0 -> s7 [70, 70] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s0 -> s8 [70, 70] { R14418 += 1, R14374 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s0 -> s9 [70, 70] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s0 -> s10 [70, 70] { R14418 += 1, R14374 += 1, R14083 += 1, R14084 += 1 };
  s0 -> s1 [71, 74] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s0 -> s2 [71, 65535] { R14418 += 1, R14374 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s0 -> s3 [71, 65535] { R14418 += 1, R14374 += 1, R14083 += 1, R14084 += 1 };
  s0 -> s11 [75, 75] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s0 -> s1 [76, 65535] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s1 -> s1 [0, 69] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s1 -> s7 [70, 70] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s1 -> s9 [70, 70] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s1 -> s1 [71, 74] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s1 -> s11 [75, 75] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s1 -> s1 [76, 65535] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s2 -> s1 [0, 69] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s2 -> s2 [0, 69] { R14418 += 1, R14374 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s2 -> s5 [70, 70] { R14418 += 1, R14374 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s2 -> s7 [70, 70] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s2 -> s8 [70, 70] { R14418 += 1, R14374 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s2 -> s9 [70, 70] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s2 -> s1 [71, 74] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s2 -> s2 [71, 65535] { R14418 += 1, R14374 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s2 -> s11 [75, 75] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s2 -> s1 [76, 65535] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s3 -> s1 [0, 69] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s3 -> s2 [0, 69] { R14418 += 1, R14374 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s3 -> s3 [0, 69] { R14418 += 1, R14374 += 1, R14083 += 1, R14084 += 1 };
  s3 -> s5 [70, 70] { R14418 += 1, R14374 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s3 -> s6 [70, 70] { R14418 += 1, R14374 += 1, R14083 += 1, R14084 += 1 };
  s3 -> s7 [70, 70] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s3 -> s8 [70, 70] { R14418 += 1, R14374 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s3 -> s9 [70, 70] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s3 -> s10 [70, 70] { R14418 += 1, R14374 += 1, R14083 += 1, R14084 += 1 };
  s3 -> s1 [71, 74] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s3 -> s2 [71, 65535] { R14418 += 1, R14374 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s3 -> s3 [71, 65535] { R14418 += 1, R14374 += 1, R14083 += 1, R14084 += 1 };
  s3 -> s11 [75, 75] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s3 -> s1 [76, 65535] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s4 -> s1 [0, 69] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s4 -> s2 [0, 69] { R14418 += 1, R14374 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s4 -> s3 [0, 69] { R14418 += 1, R14374 += 1, R14083 += 1, R14084 += 1 };
  s4 -> s4 [0, 65535] { R14418 += 1, R14373 += 1, R14374 += 1 };
  s4 -> s5 [70, 70] { R14418 += 1, R14374 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s4 -> s6 [70, 70] { R14418 += 1, R14374 += 1, R14083 += 1, R14084 += 1 };
  s4 -> s7 [70, 70] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s4 -> s8 [70, 70] { R14418 += 1, R14374 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s4 -> s9 [70, 70] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s4 -> s10 [70, 70] { R14418 += 1, R14374 += 1, R14083 += 1, R14084 += 1 };
  s4 -> s1 [71, 74] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s4 -> s2 [71, 65535] { R14418 += 1, R14374 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s4 -> s3 [71, 65535] { R14418 += 1, R14374 += 1, R14083 += 1, R14084 += 1 };
  s4 -> s11 [75, 75] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s4 -> s1 [76, 65535] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s6 -> s9 [0, 74] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s6 -> s6 [0, 65535] { R14418 += 1, R14374 += 1, R14083 += 1, R14084 += 1 };
  s6 -> s8 [0, 65535] { R14418 += 1, R14374 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s6 -> s13 [75, 75] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s6 -> s9 [76, 65535] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s8 -> s9 [0, 74] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s8 -> s8 [0, 65535] { R14418 += 1, R14374 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s8 -> s13 [75, 75] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s8 -> s9 [76, 65535] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s9 -> s9 [0, 74] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s9 -> s13 [75, 75] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s9 -> s9 [76, 65535] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s11 -> s11 [0, 69] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s11 -> s12 [0, 69] { R14418 += 1, R14374 += 1, R14084 += 1 };
  s11 -> s13 [70, 70] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s11 -> s14 [70, 70] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s11 -> s15 [70, 70] { R14418 += 1, R14374 += 1, R14084 += 1 };
  s11 -> s16 [70, 70] { R14418 += 1, R14374 += 1, R14084 += 1 };
  s11 -> s11 [71, 65535] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s11 -> s12 [71, 65535] { R14418 += 1, R14374 += 1, R14084 += 1 };
  s12 -> s12 [0, 69] { R14418 += 1, R14374 += 1, R14084 += 1 };
  s12 -> s12 [0, 65535] { R14418 += 1 };
  s12 -> s17 [0, 65535];
  s12 -> s15 [70, 70] { R14418 += 1, R14374 += 1, R14084 += 1 };
  s12 -> s16 [70, 70] { R14418 += 1, R14374 += 1, R14084 += 1 };
  s12 -> s12 [71, 65535] { R14418 += 1, R14374 += 1, R14084 += 1 };
  s13 -> s13 [0, 65535] { R14418 += 1, R14374 += 1, R14084 += 1, R14086 += 1 };
  s13 -> s15 [0, 65535] { R14418 += 1, R14374 += 1, R14084 += 1 };
  s15 -> s15 [0, 65535] { R14418 += 1, R14374 += 1, R14084 += 1 };
  s15 -> s18 [0, 65535] { R14418 += 1 };
  s15 -> s17 [0, 65535];
  s16 -> s16 [0, 65535] { R14418 += 1 };
  s16 -> s17 [0, 65535];
  s17 -> s17 [0, 65535];
  s18 -> s18 [0, 65535] { R14418 += 1 };
  s18 -> s17 [0, 65535];
  accepting s17, s16, s12, s18, s15;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R14420 += 1, R14376 += 1, R14311 += 1, R14312 += 1 };
  s0 -> s0 [0, 65535] { R14419 += 1, R14420 += 1 };
  s0 -> s2 [0, 65535] { R14420 += 1, R14375 += 1, R14376 += 1 };
  s0 -> s3 [70, 70] { R14420 += 1, R14376 += 1, R14311 += 1, R14312 += 1 };
  s0 -> s4 [70, 70] { R14420 += 1, R14376 += 1, R14311 += 1, R14312 += 1 };
  s0 -> s1 [71, 65535] { R14420 += 1, R14376 += 1, R14311 += 1, R14312 += 1 };
  s1 -> s1 [0, 69] { R14420 += 1, R14376 += 1, R14311 += 1, R14312 += 1 };
  s1 -> s1 [0, 65535] { R14420 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R14420 += 1, R14376 += 1, R14311 += 1, R14312 += 1 };
  s1 -> s4 [70, 70] { R14420 += 1, R14376 += 1, R14311 += 1, R14312 += 1 };
  s1 -> s1 [71, 65535] { R14420 += 1, R14376 += 1, R14311 += 1, R14312 += 1 };
  s2 -> s1 [0, 69] { R14420 += 1, R14376 += 1, R14311 += 1, R14312 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R14420 += 1, R14375 += 1, R14376 += 1 };
  s2 -> s3 [70, 70] { R14420 += 1, R14376 += 1, R14311 += 1, R14312 += 1 };
  s2 -> s4 [70, 70] { R14420 += 1, R14376 += 1, R14311 += 1, R14312 += 1 };
  s2 -> s1 [71, 65535] { R14420 += 1, R14376 += 1, R14311 += 1, R14312 += 1 };
  s3 -> s3 [0, 65535] { R14420 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R14420 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R14420 += 1, R14376 += 1, R14311 += 1, R14312 += 1 };
  s5 -> s5 [0, 65535] { R14420 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R14420 && R23 - R14420 = -1 && R24 = R14420 && R25 - R14420 = -1 && R26 = R14420 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R14088 + -1*R14084 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R14088 + -1*R14084 - R66 = 0 && R55 + R13518 + R13515 + -1*R14090 + -1*R14086 - R68 = 0 && R65 + R14087 + R14083 = 0 && R67 + R14089 + R14085 = 0 && R14361 = 0 && R14362 = 0 && R14367 = 0 && R14368 = 0 && R14369 = 0 && R14370 = 0 && R14373 = 0 && R14374 = 0 && R14377 = 0 && R14378 = R14420 && R14379 = 0 && R14380 = R14420 && R14381 = 0 && R14382 = R14420 && R14383 = 0 && R14384 = R14420 && R14385 = 0 && R14386 = R14420 && R14387 = 0 && R14388 = R14420 && R14389 = 0 && R14390 = R14420 && R14391 = 0 && R14392 = R14420 && R14393 = 0 && R14394 = R14420 && R14395 = 0 && R14396 = R14420 && R14397 = 0 && R14398 = R14420 && R14399 = 0 && R14400 = R14420 && R14401 = 0 && R14402 = R14420 && R14403 = 0 && R14404 = R14420 && R14405 = 0 && R14406 = R14420 && R14407 = 0 && R14408 = R14420 && R14409 = 0 && R14410 = R14420 && R14411 = 0 && R14412 = R14420 && R14413 = 0 && R14414 = R14420 && R14415 = 0 && R14416 = R14420 && R14417 = 0 && R14418 = R14420 && R14419 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R13524 + R13521 < 1 && -1*R14088 + -1*R14084 - R66 < 1 && -1*R14090 + -1*R14086 - R68 < 1 && 0 < R14420 && (R2 != 0 || R20 = 0 || (R14321 = 0 && R14322 = 0)) && (R2 != 0 || R20 = 0 || (R14323 = 0 && R14324 = 0)) && (R2 != 0 || R20 = 0 || (R14325 = 0 && R14326 = 0)) && (R2 != 0 || R20 = 0 || (R14327 = 0 && R14328 = 0)) && (R2 != 0 || R20 = 0 || (R14329 = 0 && R14330 = 0)) && (R2 != 0 || R20 = 0 || (R14331 = 0 && R14332 = 0)) && (R2 != 0 || R20 = 0 || (R14333 = 0 && R14334 = 0)) && (R2 != 0 || R20 = 0 || (R14335 = 0 && R14336 = 0)) && (R2 != 0 || R20 = 0 || (R14337 = 0 && R14338 = 0)) && (R2 != 0 || R20 = 0 || (R14339 = 0 && R14340 = 0)) && (R53 + R13516 + R13513 != 0 || R54 + R13517 + R13514 + -1*R14088 + -1*R14084 - R66 = 0 || R66 + R14088 + R14084 < 1) && (R59 + R13522 + R13519 != 0 || R60 + R13523 + R13520 + -1*R14088 + -1*R14084 - R66 = 0 || R66 + R14088 + R14084 < 1) && (R66 + R14088 + R14084 != 0 || ((R53 + R13516 + R13513 != 0 || R54 + R13517 + R13514 = 0 || R68 + R14090 + R14086 < 1) && (R53 + R13516 + R13513 = 0 || R68 + R14090 + R14086 < 1))) && (R66 + R14088 + R14084 != 0 || ((R59 + R13522 + R13519 != 0 || R60 + R13523 + R13520 = 0 || R68 + R14090 + R14086 < 1) && (R59 + R13522 + R13519 = 0 || R68 + R14090 + R14086 < 1))) && (R66 + R14088 + R14084 != 0 || ((R73 + R14316 + R14311 != 0 || R74 + R14317 + R14312 = 0 || R68 + R14090 + R14086 < 1) && (R73 + R14316 + R14311 = 0 || R68 + R14090 + R14086 < 1))) && (R68 + R14090 + R14086 != 0 || R77 + R14320 + R14315 = 0 || (R75 + R14318 + R14313 = 0 && R76 + R14319 + R14314 = 0)) && (R73 + R14316 + R14311 != 0 || R66 + R14088 + R14084 + -1*R14317 + -1*R14312 - R74 = 0 || R66 + R14088 + R14084 < 1) && (R75 + R14318 + R14313 != 0 || R68 + R14090 + R14086 + -1*R14319 + -1*R14314 - R76 = 0 || R68 + R14090 + R14086 < 1) && (R14321 != 0 || R2 = R14322 || R2 < 1) && (R14323 != 0 || R2 = R14324 || R2 < 1) && (R14325 != 0 || R2 = R14326 || R2 < 1) && (R14327 != 0 || R2 = R14328 || R2 < 1) && (R14329 != 0 || R2 = R14330 || R2 < 1) && (R14331 != 0 || R2 = R14332 || R2 < 1) && (R14333 != 0 || R2 = R14334 || R2 < 1) && (R14335 != 0 || R2 = R14336 || R2 < 1) && (R14337 != 0 || R2 = R14338 || R2 < 1) && (R14339 != 0 || R2 = R14340 || R2 < 1) && (R21 = 0 || (R14359 = 0 && R14360 = 0)) && (R21 = 0 || (R14363 = 0 && R14364 = 0)) && (R21 = 0 || (R14365 = 0 && R14366 = 0)) && (R21 = 0 || (R14371 = 0 && R14372 = 0)) && (R21 = 0 || (R14375 = 0 && R14376 = 0)) && (R22 = 0 || (R14341 = 0 && R14342 = 0)) && (R22 = 0 || (R14343 = 0 && R14344 = 0)) && (R22 = 0 || (R14345 = 0 && R14346 = 0)) && (R22 = 0 || (R14347 = 0 && R14348 = 0)) && (R22 = 0 || (R14349 = 0 && R14350 = 0)) && (R22 = 0 || (R14351 = 0 && R14352 = 0)) && (R22 = 0 || (R14353 = 0 && R14354 = 0)) && (R22 = 0 || (R14355 = 0 && R14356 = 0)) && (R22 = 0 || (R14357 = 0 && R14358 = 0)) && (R53 + R13516 + R13513 = 0 || R66 + R14088 + R14084 < 1) && (R59 + R13522 + R13519 = 0 || R66 + R14088 + R14084 < 1) && (R73 + R14316 + R14311 = 0 || R66 + R14088 + R14084 < 1) && (R75 + R14318 + R14313 = 0 || R68 + R14090 + R14086 < 1) && (R14321 = 0 || R2 < 1) && (R14323 = 0 || R2 < 1) && (R14325 = 0 || R2 < 1) && (R14327 = 0 || R2 < 1) && (R14329 = 0 || R2 < 1) && (R14331 = 0 || R2 < 1) && (R14333 = 0 || R2 < 1) && (R14335 = 0 || R2 < 1) && (R14337 = 0 || R2 < 1) && (R14339 = 0 || R2 < 1);
// End of Parikh automata intersection problem
