// Parikh automata intersection problem, generated by OSTRICH+
counter int R12, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R3451, R3452, R3453, R3454, R3455, R3456, R4, R4015, R4016, R4017, R4018, R4019, R4020, R4021, R4022, R4133, R4134, R4135, R4136, R4137, R4138, R4139, R4140, R4141, R4142, R4143, R4144, R4145, R4146, R4147, R4148, R4149, R4150, R4151, R4152, R4153, R4154, R4155, R4156, R4157, R4158, R4159, R4160, R4161, R4162, R4163, R4164, R4165, R4166, R4167, R4168, R4169, R4170, R4171, R4172, R4173, R4174, R4175, R4176, R4177, R4178, R4179, R4180, R4181, R4182, R4183, R4184, R4185, R4186, R4187, R4188, R4189, R4190, R4191, R4192, R4193, R4194, R4195, R4196, R4197, R4198, R4199, R4200, R4201, R4202, R4203, R4204, R4205, R4206, R4207, R4208, R4209, R4210, R4211, R4212, R4213, R4214, R4215, R4216, R4217, R4218, R4219, R4220, R4221, R4222, R4223, R4224, R4225, R4226, R4227, R4228, R4229, R4230, R4231, R4232, R4233, R4234, R4235, R4236, R4237, R4238, R4239, R4240, R4241, R4242, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R4163 += 1, R4164 += 1 };
  s0 -> s1 [0, 65535] { R4164 += 1, R22 += 1 };
  s1 -> s1 [0, 65535] { R4164 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R4166 += 1 };
  s0 -> s0 [0, 65535] { R4165 += 1, R4166 += 1 };
  s0 -> s2 [70, 70] { R4166 += 1 };
  s0 -> s3 [70, 70] { R4166 += 1 };
  s0 -> s1 [76, 65535] { R4166 += 1 };
  s1 -> s1 [0, 69] { R4166 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4166 += 1 };
  s1 -> s3 [70, 70] { R4166 += 1 };
  s1 -> s1 [76, 65535] { R4166 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R4166 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R4166 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R4168 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R4167 += 1, R4168 += 1 };
  s0 -> s2 [70, 70] { R4168 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R4168 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R4168 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R4168 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4168 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R4168 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R4168 += 1, R45 += 1 };
  s2 -> s2 [0, 65535] { R4168 += 1, R45 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R4170 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R4169 += 1, R4170 += 1 };
  s0 -> s2 [70, 70] { R4170 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R4170 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R4170 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R4170 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4170 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R4170 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R4170 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4170 += 1, R47 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R4172 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R4171 += 1, R4172 += 1 };
  s0 -> s2 [70, 70] { R4172 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R4172 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R4172 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R4172 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4172 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R4172 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R4172 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R4172 += 1, R49 += 1, R50 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R4174 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R4173 += 1, R4174 += 1 };
  s0 -> s2 [70, 70] { R4174 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R4174 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R4174 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R4174 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4174 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R4174 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R4174 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4174 += 1, R53 += 1, R54 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R4176 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R4175 += 1, R4176 += 1 };
  s0 -> s2 [70, 70] { R4176 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R4176 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R4176 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R4176 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4176 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R4176 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R4176 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4176 += 1, R59 += 1, R60 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R4178 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R4177 += 1, R4178 += 1 };
  s0 -> s2 [70, 70] { R4178 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R4178 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R4178 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R4178 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4178 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R4178 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R4178 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535] { R4178 += 1, R65 += 1, R66 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R4180 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R4179 += 1, R4180 += 1 };
  s0 -> s2 [70, 70] { R4180 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R4180 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R4180 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R4180 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4180 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R4180 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R4180 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R4180 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R4200 += 1 };
  s0 -> s0 [0, 65535] { R4199 += 1, R4200 += 1 };
  s0 -> s2 [70, 70] { R4200 += 1 };
  s0 -> s1 [71, 65535] { R4200 += 1 };
  s1 -> s1 [0, 69] { R4200 += 1 };
  s1 -> s2 [70, 70] { R4200 += 1 };
  s1 -> s1 [71, 65535] { R4200 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4200 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R4202 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R4201 += 1, R4202 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R4202 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R4204 += 1 };
  s0 -> s2 [0, 65535] { R4204 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R4203 += 1, R4204 += 1 };
  s0 -> s3 [70, 70] { R4204 += 1 };
  s0 -> s1 [71, 65535] { R4204 += 1 };
  s1 -> s1 [0, 69] { R4204 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R4204 += 1 };
  s1 -> s1 [71, 65535] { R4204 += 1 };
  s2 -> s1 [0, 69] { R4204 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4204 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R4204 += 1 };
  s2 -> s1 [71, 65535] { R4204 += 1 };
  s3 -> s3 [0, 65535] { R4204 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R4206 += 1, R4144 += 1 };
  s0 -> s2 [0, 65535] { R4206 += 1, R4143 += 1, R4144 += 1 };
  s0 -> s0 [0, 65535] { R4205 += 1, R4206 += 1 };
  s0 -> s1 [71, 65535] { R4206 += 1, R4144 += 1 };
  s1 -> s1 [0, 69] { R4206 += 1, R4144 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4206 += 1 };
  s1 -> s1 [71, 65535] { R4206 += 1, R4144 += 1 };
  s2 -> s1 [0, 69] { R4206 += 1, R4144 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4206 += 1, R4143 += 1, R4144 += 1 };
  s2 -> s1 [71, 65535] { R4206 += 1, R4144 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R4208 += 1, R4145 += 1, R4146 += 1 };
  s0 -> s0 [0, 65535] { R4207 += 1, R4208 += 1 };
  s0 -> s2 [0, 65535] { R4208 += 1, R4146 += 1, R20 += 1 };
  s1 -> s1 [0, 65535] { R4208 += 1, R4145 += 1, R4146 += 1 };
  s1 -> s2 [0, 65535] { R4208 += 1, R4146 += 1, R20 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4208 += 1, R4146 += 1, R20 += 1 };
  s2 -> s3 [0, 65535] { R4208 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4208 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R4210 += 1, R4148 += 1 };
  s0 -> s2 [0, 65535] { R4210 += 1, R4147 += 1, R4148 += 1 };
  s0 -> s0 [0, 65535] { R4209 += 1, R4210 += 1 };
  s0 -> s1 [75, 65535] { R4210 += 1, R4148 += 1 };
  s1 -> s1 [0, 70] { R4210 += 1, R4148 += 1 };
  s1 -> s1 [0, 65535] { R4210 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R4210 += 1, R4148 += 1 };
  s2 -> s1 [0, 70] { R4210 += 1, R4148 += 1 };
  s2 -> s2 [0, 65535] { R4210 += 1, R4147 += 1, R4148 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R4210 += 1, R4148 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R4211 += 1, R4212 += 1 };
  s0 -> s1 [0, 65535] { R4212 += 1, R4149 += 1, R4150 += 1 };
  s0 -> s2 [0, 65535] { R4212 += 1, R4150 += 1, R84 += 1 };
  s1 -> s1 [0, 65535] { R4212 += 1, R4149 += 1, R4150 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R4212 += 1, R4150 += 1, R84 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R4212 += 1 };
  s2 -> s2 [0, 65535] { R4212 += 1, R4150 += 1, R84 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4212 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R4214 += 1, R4152 += 1 };
  s0 -> s0 [0, 65535] { R4213 += 1, R4214 += 1 };
  s0 -> s2 [0, 65535] { R4214 += 1, R4152 += 1, R86 += 1 };
  s0 -> s3 [0, 65535] { R4214 += 1, R4151 += 1, R4152 += 1 };
  s0 -> s1 [76, 65535] { R4214 += 1, R4152 += 1 };
  s1 -> s1 [0, 74] { R4214 += 1, R4152 += 1 };
  s1 -> s1 [0, 65535] { R4214 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [76, 65535] { R4214 += 1, R4152 += 1 };
  s2 -> s1 [0, 74] { R4214 += 1, R4152 += 1 };
  s2 -> s2 [0, 65535] { R4214 += 1, R4152 += 1, R86 += 1 };
  s2 -> s5 [0, 65535] { R4214 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [76, 65535] { R4214 += 1, R4152 += 1 };
  s3 -> s1 [0, 74] { R4214 += 1, R4152 += 1 };
  s3 -> s2 [0, 65535] { R4214 += 1, R4152 += 1, R86 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4214 += 1, R4151 += 1, R4152 += 1 };
  s3 -> s1 [76, 65535] { R4214 += 1, R4152 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4214 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R4216 += 1, R4154 += 1 };
  s0 -> s2 [0, 65535] { R4216 += 1, R4153 += 1, R4154 += 1 };
  s0 -> s3 [0, 65535] { R4216 += 1, R4154 += 1, R90 += 1 };
  s0 -> s0 [0, 65535] { R4215 += 1, R4216 += 1 };
  s1 -> s1 [0, 65535] { R4216 += 1, R4154 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R4216 += 1 };
  s2 -> s1 [0, 65535] { R4216 += 1, R4154 += 1 };
  s2 -> s2 [0, 65535] { R4216 += 1, R4153 += 1, R4154 += 1 };
  s2 -> s3 [0, 65535] { R4216 += 1, R4154 += 1, R90 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R4216 += 1, R4154 += 1 };
  s3 -> s3 [0, 65535] { R4216 += 1, R4154 += 1, R90 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R4216 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4216 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R4218 += 1, R4155 += 1, R4156 += 1 };
  s0 -> s2 [0, 65535] { R4218 += 1, R4156 += 1, R95 += 1, R96 += 1 };
  s0 -> s3 [0, 65535] { R4218 += 1, R4156 += 1, R94 += 1, R95 += 1 };
  s0 -> s0 [0, 65535] { R4217 += 1, R4218 += 1 };
  s1 -> s1 [0, 65535] { R4218 += 1, R4155 += 1, R4156 += 1 };
  s1 -> s2 [0, 65535] { R4218 += 1, R4156 += 1, R95 += 1, R96 += 1 };
  s1 -> s3 [0, 65535] { R4218 += 1, R4156 += 1, R94 += 1, R95 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4218 += 1, R4156 += 1, R95 += 1, R96 += 1 };
  s2 -> s6 [0, 65535] { R4218 += 1, R4156 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R4218 += 1 };
  s3 -> s2 [0, 65535] { R4218 += 1, R4156 += 1, R95 += 1, R96 += 1 };
  s3 -> s3 [0, 65535] { R4218 += 1, R4156 += 1, R94 += 1, R95 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R4218 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4218 += 1 };
  s6 -> s6 [0, 65535] { R4218 += 1, R4156 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R4218 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R4220 += 1, R4158 += 1, R3455 += 1 };
  s0 -> s2 [0, 65535] { R4220 += 1, R4157 += 1, R4158 += 1 };
  s0 -> s0 [0, 65535] { R4219 += 1, R4220 += 1 };
  s0 -> s1 [0, 65535] { R4220 += 1, R4158 += 1 };
  s0 -> s1 [76, 65535] { R4220 += 1, R4158 += 1, R3455 += 1 };
  s1 -> s1 [0, 74] { R4220 += 1, R4158 += 1, R3455 += 1 };
  s1 -> s4 [0, 65535] { R4220 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4220 += 1, R4158 += 1 };
  s1 -> s1 [76, 65535] { R4220 += 1, R4158 += 1, R3455 += 1 };
  s2 -> s1 [0, 74] { R4220 += 1, R4158 += 1, R3455 += 1 };
  s2 -> s2 [0, 65535] { R4220 += 1, R4157 += 1, R4158 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4220 += 1, R4158 += 1 };
  s2 -> s1 [76, 65535] { R4220 += 1, R4158 += 1, R3455 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4220 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s0 [0, 65535] { R4221 += 1, R4222 += 1 };
  s0 -> s1 [0, 65535] { R4222 += 1, R4159 += 1, R4160 += 1 };
  s0 -> s2 [0, 65535] { R4222 += 1, R4160 += 1, R4020 += 1 };
  s0 -> s3 [0, 65535] { R4222 += 1, R4160 += 1 };
  s1 -> s1 [0, 65535] { R4222 += 1, R4159 += 1, R4160 += 1 };
  s1 -> s2 [0, 65535] { R4222 += 1, R4160 += 1, R4020 += 1 };
  s1 -> s3 [0, 65535] { R4222 += 1, R4160 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s4 [0, 65535] { R4222 += 1 };
  s2 -> s2 [0, 65535] { R4222 += 1, R4160 += 1, R4020 += 1 };
  s2 -> s3 [0, 65535] { R4222 += 1, R4160 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R4222 += 1 };
  s3 -> s3 [0, 65535] { R4222 += 1, R4160 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4222 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R4224 += 1, R4161 += 1, R4162 += 1 };
  s0 -> s2 [0, 65535] { R4224 += 1, R4162 += 1 };
  s0 -> s0 [0, 65535] { R4223 += 1, R4224 += 1 };
  s1 -> s1 [0, 65535] { R4224 += 1, R4161 += 1, R4162 += 1 };
  s1 -> s2 [0, 65535] { R4224 += 1, R4162 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R4224 += 1 };
  s2 -> s2 [0, 65535] { R4224 += 1, R4162 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4224 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R4225 += 1, R4226 += 1 };
  s0 -> s1 [0, 65535] { R4226 += 1, R4182 += 1, R21 += 1 };
  s0 -> s2 [0, 65535] { R4226 += 1, R4181 += 1, R4182 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4226 += 1, R4182 += 1, R21 += 1 };
  s1 -> s4 [0, 65535] { R4226 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4226 += 1, R4182 += 1, R21 += 1 };
  s2 -> s2 [0, 65535] { R4226 += 1, R4181 += 1, R4182 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4226 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R4228 += 1, R4184 += 1 };
  s0 -> s0 [0, 65535] { R4227 += 1, R4228 += 1 };
  s0 -> s2 [0, 65535] { R4228 += 1, R4183 += 1, R4184 += 1 };
  s0 -> s3 [70, 70] { R4228 += 1, R4184 += 1 };
  s0 -> s4 [70, 70] { R4228 += 1, R4184 += 1 };
  s0 -> s5 [75, 75] { R4228 += 1, R4184 += 1 };
  s0 -> s1 [76, 65535] { R4228 += 1, R4184 += 1 };
  s1 -> s1 [0, 69] { R4228 += 1, R4184 += 1 };
  s1 -> s3 [70, 70] { R4228 += 1, R4184 += 1 };
  s1 -> s4 [70, 70] { R4228 += 1, R4184 += 1 };
  s1 -> s5 [75, 75] { R4228 += 1, R4184 += 1 };
  s1 -> s1 [76, 65535] { R4228 += 1, R4184 += 1 };
  s2 -> s1 [0, 69] { R4228 += 1, R4184 += 1 };
  s2 -> s2 [0, 65535] { R4228 += 1, R4183 += 1, R4184 += 1 };
  s2 -> s3 [70, 70] { R4228 += 1, R4184 += 1 };
  s2 -> s4 [70, 70] { R4228 += 1, R4184 += 1 };
  s2 -> s5 [75, 75] { R4228 += 1, R4184 += 1 };
  s2 -> s1 [76, 65535] { R4228 += 1, R4184 += 1 };
  s3 -> s3 [0, 70] { R4228 += 1, R4184 += 1 };
  s3 -> s8 [75, 75] { R4228 += 1, R4184 += 1 };
  s3 -> s3 [76, 65535] { R4228 += 1, R4184 += 1 };
  s5 -> s5 [0, 69] { R4228 += 1, R4184 += 1 };
  s5 -> s5 [0, 65535] { R4228 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R4228 += 1, R4184 += 1 };
  s5 -> s8 [70, 70] { R4228 += 1, R4184 += 1 };
  s5 -> s5 [75, 65535] { R4228 += 1, R4184 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4228 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 70] { R4228 += 1, R4184 += 1 };
  s8 -> s8 [0, 65535] { R4228 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [75, 65535] { R4228 += 1, R4184 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R4230 += 1, R4186 += 1, R83 += 1 };
  s0 -> s2 [0, 65535] { R4230 += 1, R4185 += 1, R4186 += 1 };
  s0 -> s0 [0, 65535] { R4229 += 1, R4230 += 1 };
  s0 -> s3 [70, 70] { R4230 += 1, R4186 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R4230 += 1, R4186 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R4230 += 1, R4186 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R4230 += 1, R4186 += 1, R83 += 1 };
  s1 -> s1 [0, 65535] { R4230 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R4230 += 1, R4186 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R4230 += 1, R4186 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R4230 += 1, R4186 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R4230 += 1, R4186 += 1, R83 += 1 };
  s2 -> s2 [0, 65535] { R4230 += 1, R4185 += 1, R4186 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R4230 += 1, R4186 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R4230 += 1, R4186 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R4230 += 1, R4186 += 1, R83 += 1 };
  s3 -> s6 [0, 65535] { R4230 += 1 };
  s3 -> s3 [0, 65535] { R4230 += 1, R4186 += 1, R83 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4230 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4230 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R4232 += 1, R4188 += 1, R85 += 1 };
  s0 -> s0 [0, 65535] { R4231 += 1, R4232 += 1 };
  s0 -> s2 [0, 65535] { R4232 += 1, R4187 += 1, R4188 += 1 };
  s0 -> s3 [70, 70] { R4232 += 1, R4188 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R4232 += 1, R4188 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R4232 += 1, R4188 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R4232 += 1, R4188 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R4232 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R4232 += 1, R4188 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R4232 += 1, R4188 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R4232 += 1, R4188 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R4232 += 1, R4188 += 1, R85 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4232 += 1, R4187 += 1, R4188 += 1 };
  s2 -> s3 [70, 70] { R4232 += 1, R4188 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R4232 += 1, R4188 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R4232 += 1, R4188 += 1, R85 += 1 };
  s3 -> s3 [0, 65535] { R4232 += 1, R4188 += 1, R85 += 1 };
  s3 -> s6 [0, 65535] { R4232 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4232 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4232 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R4234 += 1, R4190 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R4234 += 1, R4190 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [0, 65535] { R4234 += 1, R4189 += 1, R4190 += 1 };
  s0 -> s0 [0, 65535] { R4233 += 1, R4234 += 1 };
  s0 -> s4 [70, 70] { R4234 += 1, R4190 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R4234 += 1, R4190 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R4234 += 1, R4190 += 1, R87 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R4234 += 1, R4190 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 74] { R4234 += 1, R4190 += 1, R88 += 1 };
  s0 -> s2 [71, 65535] { R4234 += 1, R4190 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R4234 += 1, R4190 += 1, R88 += 1 };
  s0 -> s1 [76, 65535] { R4234 += 1, R4190 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R4234 += 1, R4190 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R4234 += 1, R4190 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R4234 += 1, R4190 += 1, R88 += 1 };
  s1 -> s1 [71, 74] { R4234 += 1, R4190 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R4234 += 1, R4190 += 1, R88 += 1 };
  s1 -> s1 [76, 65535] { R4234 += 1, R4190 += 1, R88 += 1 };
  s2 -> s1 [0, 69] { R4234 += 1, R4190 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R4234 += 1, R4190 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R4234 += 1, R4190 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R4234 += 1, R4190 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R4234 += 1, R4190 += 1, R87 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R4234 += 1, R4190 += 1, R87 += 1, R88 += 1 };
  s2 -> s1 [71, 74] { R4234 += 1, R4190 += 1, R88 += 1 };
  s2 -> s2 [71, 65535] { R4234 += 1, R4190 += 1, R87 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R4234 += 1, R4190 += 1, R88 += 1 };
  s2 -> s1 [76, 65535] { R4234 += 1, R4190 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R4234 += 1, R4190 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R4234 += 1, R4190 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R4234 += 1, R4189 += 1, R4190 += 1 };
  s3 -> s4 [70, 70] { R4234 += 1, R4190 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R4234 += 1, R4190 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R4234 += 1, R4190 += 1, R87 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R4234 += 1, R4190 += 1, R87 += 1, R88 += 1 };
  s3 -> s1 [71, 74] { R4234 += 1, R4190 += 1, R88 += 1 };
  s3 -> s2 [71, 65535] { R4234 += 1, R4190 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R4234 += 1, R4190 += 1, R88 += 1 };
  s3 -> s1 [76, 65535] { R4234 += 1, R4190 += 1, R88 += 1 };
  s5 -> s5 [0, 74] { R4234 += 1, R4190 += 1, R88 += 1 };
  s5 -> s11 [75, 75] { R4234 += 1, R4190 += 1, R88 += 1 };
  s5 -> s5 [76, 65535] { R4234 += 1, R4190 += 1, R88 += 1 };
  s7 -> s5 [0, 74] { R4234 += 1, R4190 += 1, R88 += 1 };
  s7 -> s7 [0, 65535] { R4234 += 1, R4190 += 1, R87 += 1, R88 += 1 };
  s7 -> s11 [75, 75] { R4234 += 1, R4190 += 1, R88 += 1 };
  s7 -> s5 [76, 65535] { R4234 += 1, R4190 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R4234 += 1, R4190 += 1, R88 += 1 };
  s8 -> s8 [0, 65535] { R4234 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R4234 += 1, R4190 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R4234 += 1, R4190 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R4234 += 1, R4190 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R4234 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R4234 += 1, R4190 += 1, R88 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R4234 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R4234 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R4236 += 1, R4192 += 1, R91 += 1, R92 += 1 };
  s0 -> s0 [0, 65535] { R4235 += 1, R4236 += 1 };
  s0 -> s2 [0, 65535] { R4236 += 1, R4191 += 1, R4192 += 1 };
  s0 -> s3 [70, 70] { R4236 += 1, R4192 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R4236 += 1, R4192 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R4236 += 1, R4192 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R4236 += 1, R4192 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 65535] { R4236 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R4236 += 1, R4192 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R4236 += 1, R4192 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R4236 += 1, R4192 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R4236 += 1, R4192 += 1, R91 += 1, R92 += 1 };
  s2 -> s2 [0, 65535] { R4236 += 1, R4191 += 1, R4192 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R4236 += 1, R4192 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R4236 += 1, R4192 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R4236 += 1, R4192 += 1, R91 += 1, R92 += 1 };
  s3 -> s3 [0, 65535] { R4236 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4236 += 1, R4192 += 1, R91 += 1, R92 += 1 };
  s4 -> s5 [0, 65535] { R4236 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4236 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R4238 += 1, R4194 += 1, R3452 += 1 };
  s0 -> s2 [0, 69] { R4238 += 1, R4194 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s3 [0, 69] { R4238 += 1, R4194 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s4 [0, 65535] { R4238 += 1, R4193 += 1, R4194 += 1 };
  s0 -> s0 [0, 65535] { R4237 += 1, R4238 += 1 };
  s0 -> s5 [70, 70] { R4238 += 1, R4194 += 1, R3452 += 1 };
  s0 -> s6 [70, 70] { R4238 += 1, R4194 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s7 [70, 70] { R4238 += 1, R4194 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s8 [70, 70] { R4238 += 1, R4194 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s9 [70, 70] { R4238 += 1, R4194 += 1, R3452 += 1 };
  s0 -> s10 [70, 70] { R4238 += 1, R4194 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s1 [71, 74] { R4238 += 1, R4194 += 1, R3452 += 1 };
  s0 -> s2 [71, 65535] { R4238 += 1, R4194 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s3 [71, 65535] { R4238 += 1, R4194 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s1 [76, 65535] { R4238 += 1, R4194 += 1, R3452 += 1 };
  s1 -> s1 [0, 69] { R4238 += 1, R4194 += 1, R3452 += 1 };
  s1 -> s11 [0, 65535];
  s1 -> s1 [0, 65535] { R4238 += 1 };
  s1 -> s5 [70, 70] { R4238 += 1, R4194 += 1 };
  s1 -> s9 [70, 70] { R4238 += 1, R4194 += 1 };
  s1 -> s1 [71, 74] { R4238 += 1, R4194 += 1, R3452 += 1 };
  s1 -> s1 [71, 65535] { R4238 += 1, R4194 += 1 };
  s1 -> s1 [76, 65535] { R4238 += 1, R4194 += 1, R3452 += 1 };
  s2 -> s1 [0, 69] { R4238 += 1, R4194 += 1, R3452 += 1 };
  s2 -> s2 [0, 69] { R4238 += 1, R4194 += 1, R3451 += 1, R3452 += 1 };
  s2 -> s3 [0, 69] { R4238 += 1, R4194 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s5 [70, 70] { R4238 += 1, R4194 += 1, R3452 += 1 };
  s2 -> s6 [70, 70] { R4238 += 1, R4194 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s7 [70, 70] { R4238 += 1, R4194 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s8 [70, 70] { R4238 += 1, R4194 += 1, R3451 += 1, R3452 += 1 };
  s2 -> s9 [70, 70] { R4238 += 1, R4194 += 1, R3452 += 1 };
  s2 -> s10 [70, 70] { R4238 += 1, R4194 += 1, R3451 += 1, R3452 += 1 };
  s2 -> s1 [71, 74] { R4238 += 1, R4194 += 1, R3452 += 1 };
  s2 -> s2 [71, 65535] { R4238 += 1, R4194 += 1, R3451 += 1, R3452 += 1 };
  s2 -> s3 [71, 65535] { R4238 += 1, R4194 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s1 [76, 65535] { R4238 += 1, R4194 += 1, R3452 += 1 };
  s3 -> s1 [0, 69] { R4238 += 1, R4194 += 1, R3452 += 1 };
  s3 -> s3 [0, 69] { R4238 += 1, R4194 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s5 [70, 70] { R4238 += 1, R4194 += 1, R3452 += 1 };
  s3 -> s6 [70, 70] { R4238 += 1, R4194 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s7 [70, 70] { R4238 += 1, R4194 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s9 [70, 70] { R4238 += 1, R4194 += 1, R3452 += 1 };
  s3 -> s1 [71, 74] { R4238 += 1, R4194 += 1, R3452 += 1 };
  s3 -> s3 [71, 65535] { R4238 += 1, R4194 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s1 [76, 65535] { R4238 += 1, R4194 += 1, R3452 += 1 };
  s4 -> s1 [0, 69] { R4238 += 1, R4194 += 1, R3452 += 1 };
  s4 -> s2 [0, 69] { R4238 += 1, R4194 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s3 [0, 69] { R4238 += 1, R4194 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s4 [0, 65535] { R4238 += 1, R4193 += 1, R4194 += 1 };
  s4 -> s5 [70, 70] { R4238 += 1, R4194 += 1, R3452 += 1 };
  s4 -> s6 [70, 70] { R4238 += 1, R4194 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s7 [70, 70] { R4238 += 1, R4194 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s8 [70, 70] { R4238 += 1, R4194 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s9 [70, 70] { R4238 += 1, R4194 += 1, R3452 += 1 };
  s4 -> s10 [70, 70] { R4238 += 1, R4194 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s1 [71, 74] { R4238 += 1, R4194 += 1, R3452 += 1 };
  s4 -> s2 [71, 65535] { R4238 += 1, R4194 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s3 [71, 65535] { R4238 += 1, R4194 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s1 [76, 65535] { R4238 += 1, R4194 += 1, R3452 += 1 };
  s5 -> s5 [0, 65535] { R4238 += 1 };
  s5 -> s11 [0, 65535];
  s7 -> s9 [0, 74] { R4238 += 1, R4194 += 1, R3452 += 1 };
  s7 -> s7 [0, 65535] { R4238 += 1, R4194 += 1, R3452 += 1, R3453 += 1 };
  s7 -> s9 [76, 65535] { R4238 += 1, R4194 += 1, R3452 += 1 };
  s9 -> s9 [0, 74] { R4238 += 1, R4194 += 1, R3452 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s12 [0, 65535] { R4238 += 1 };
  s9 -> s9 [0, 65535] { R4238 += 1, R4194 += 1 };
  s9 -> s9 [76, 65535] { R4238 += 1, R4194 += 1, R3452 += 1 };
  s10 -> s9 [0, 74] { R4238 += 1, R4194 += 1, R3452 += 1 };
  s10 -> s7 [0, 65535] { R4238 += 1, R4194 += 1, R3452 += 1, R3453 += 1 };
  s10 -> s10 [0, 65535] { R4238 += 1, R4194 += 1, R3451 += 1, R3452 += 1 };
  s10 -> s9 [76, 65535] { R4238 += 1, R4194 += 1, R3452 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R4238 += 1 };
  accepting s12, s5, s9, s1, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R4240 += 1, R4196 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s0 -> s2 [0, 69] { R4240 += 1, R4196 += 1, R4015 += 1, R4016 += 1 };
  s0 -> s3 [0, 69] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s0 -> s4 [0, 65535] { R4240 += 1, R4195 += 1, R4196 += 1 };
  s0 -> s0 [0, 65535] { R4239 += 1, R4240 += 1 };
  s0 -> s5 [70, 70] { R4240 += 1, R4196 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s0 -> s6 [70, 70] { R4240 += 1, R4196 += 1, R4015 += 1, R4016 += 1 };
  s0 -> s7 [70, 70] { R4240 += 1, R4196 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s0 -> s8 [70, 70] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s0 -> s9 [70, 70] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s0 -> s10 [70, 70] { R4240 += 1, R4196 += 1, R4015 += 1, R4016 += 1 };
  s0 -> s3 [71, 74] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s0 -> s1 [71, 65535] { R4240 += 1, R4196 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s0 -> s2 [71, 65535] { R4240 += 1, R4196 += 1, R4015 += 1, R4016 += 1 };
  s0 -> s11 [75, 75] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s0 -> s3 [76, 65535] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s1 -> s1 [0, 69] { R4240 += 1, R4196 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s1 -> s3 [0, 69] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s1 -> s5 [70, 70] { R4240 += 1, R4196 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s1 -> s7 [70, 70] { R4240 += 1, R4196 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s1 -> s8 [70, 70] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s1 -> s9 [70, 70] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s1 -> s3 [71, 74] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s1 -> s1 [71, 65535] { R4240 += 1, R4196 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s1 -> s11 [75, 75] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s1 -> s3 [76, 65535] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s2 -> s1 [0, 69] { R4240 += 1, R4196 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s2 -> s2 [0, 69] { R4240 += 1, R4196 += 1, R4015 += 1, R4016 += 1 };
  s2 -> s3 [0, 69] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s2 -> s5 [70, 70] { R4240 += 1, R4196 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s2 -> s6 [70, 70] { R4240 += 1, R4196 += 1, R4015 += 1, R4016 += 1 };
  s2 -> s7 [70, 70] { R4240 += 1, R4196 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s2 -> s8 [70, 70] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s2 -> s9 [70, 70] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s2 -> s10 [70, 70] { R4240 += 1, R4196 += 1, R4015 += 1, R4016 += 1 };
  s2 -> s3 [71, 74] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s2 -> s1 [71, 65535] { R4240 += 1, R4196 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s2 -> s2 [71, 65535] { R4240 += 1, R4196 += 1, R4015 += 1, R4016 += 1 };
  s2 -> s11 [75, 75] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s2 -> s3 [76, 65535] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s3 -> s3 [0, 69] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s3 -> s8 [70, 70] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s3 -> s9 [70, 70] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s3 -> s3 [71, 74] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s3 -> s11 [75, 75] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s3 -> s3 [76, 65535] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s4 -> s1 [0, 69] { R4240 += 1, R4196 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s4 -> s2 [0, 69] { R4240 += 1, R4196 += 1, R4015 += 1, R4016 += 1 };
  s4 -> s3 [0, 69] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s4 -> s4 [0, 65535] { R4240 += 1, R4195 += 1, R4196 += 1 };
  s4 -> s5 [70, 70] { R4240 += 1, R4196 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s4 -> s6 [70, 70] { R4240 += 1, R4196 += 1, R4015 += 1, R4016 += 1 };
  s4 -> s7 [70, 70] { R4240 += 1, R4196 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s4 -> s8 [70, 70] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s4 -> s9 [70, 70] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s4 -> s10 [70, 70] { R4240 += 1, R4196 += 1, R4015 += 1, R4016 += 1 };
  s4 -> s3 [71, 74] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s4 -> s1 [71, 65535] { R4240 += 1, R4196 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s4 -> s2 [71, 65535] { R4240 += 1, R4196 += 1, R4015 += 1, R4016 += 1 };
  s4 -> s11 [75, 75] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s4 -> s3 [76, 65535] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s5 -> s8 [0, 74] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s5 -> s5 [0, 65535] { R4240 += 1, R4196 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s5 -> s16 [75, 75] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s5 -> s8 [76, 65535] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s6 -> s8 [0, 74] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s6 -> s5 [0, 65535] { R4240 += 1, R4196 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s6 -> s6 [0, 65535] { R4240 += 1, R4196 += 1, R4015 += 1, R4016 += 1 };
  s6 -> s16 [75, 75] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s6 -> s8 [76, 65535] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s8 -> s8 [0, 74] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s8 -> s16 [75, 75] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s8 -> s8 [76, 65535] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s11 -> s12 [0, 69] { R4240 += 1, R4196 += 1, R4016 += 1 };
  s11 -> s11 [0, 69] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s11 -> s13 [70, 70] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s11 -> s14 [70, 70] { R4240 += 1, R4196 += 1, R4016 += 1 };
  s11 -> s15 [70, 70] { R4240 += 1, R4196 += 1, R4016 += 1 };
  s11 -> s16 [70, 70] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s11 -> s12 [71, 65535] { R4240 += 1, R4196 += 1, R4016 += 1 };
  s11 -> s11 [71, 65535] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s12 -> s12 [0, 69] { R4240 += 1, R4196 += 1, R4016 += 1 };
  s12 -> s12 [0, 65535] { R4240 += 1 };
  s12 -> s17 [0, 65535];
  s12 -> s14 [70, 70] { R4240 += 1, R4196 += 1, R4016 += 1 };
  s12 -> s15 [70, 70] { R4240 += 1, R4196 += 1, R4016 += 1 };
  s12 -> s12 [71, 65535] { R4240 += 1, R4196 += 1, R4016 += 1 };
  s14 -> s17 [0, 65535];
  s14 -> s14 [0, 65535] { R4240 += 1 };
  s15 -> s17 [0, 65535];
  s15 -> s15 [0, 65535] { R4240 += 1, R4196 += 1, R4016 += 1 };
  s15 -> s18 [0, 65535] { R4240 += 1 };
  s16 -> s15 [0, 65535] { R4240 += 1, R4196 += 1, R4016 += 1 };
  s16 -> s16 [0, 65535] { R4240 += 1, R4196 += 1, R4016 += 1, R4018 += 1 };
  s17 -> s17 [0, 65535];
  s18 -> s17 [0, 65535];
  s18 -> s18 [0, 65535] { R4240 += 1 };
  accepting s17, s12, s14, s18, s15;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R4242 += 1, R4198 += 1, R4134 += 1, R4136 += 1, R4137 += 1 };
  s0 -> s2 [0, 69] { R4242 += 1, R4198 += 1, R4134 += 1, R4135 += 1, R4136 += 1 };
  s0 -> s3 [0, 69] { R4242 += 1, R4198 += 1, R4133 += 1, R4134 += 1 };
  s0 -> s4 [0, 65535] { R4242 += 1, R4197 += 1, R4198 += 1 };
  s0 -> s0 [0, 65535] { R4241 += 1, R4242 += 1 };
  s0 -> s5 [70, 70] { R4242 += 1, R4198 += 1, R4133 += 1, R4134 += 1 };
  s0 -> s6 [70, 70] { R4242 += 1, R4198 += 1, R4134 += 1, R4136 += 1, R4137 += 1 };
  s0 -> s7 [70, 70] { R4242 += 1, R4198 += 1, R4133 += 1, R4134 += 1 };
  s0 -> s8 [70, 70] { R4242 += 1, R4198 += 1, R4134 += 1, R4135 += 1, R4136 += 1 };
  s0 -> s9 [70, 70] { R4242 += 1, R4198 += 1, R4134 += 1, R4136 += 1, R4137 += 1 };
  s0 -> s10 [70, 70] { R4242 += 1, R4198 += 1, R4134 += 1, R4135 += 1, R4136 += 1 };
  s0 -> s1 [71, 65535] { R4242 += 1, R4198 += 1, R4134 += 1, R4136 += 1, R4137 += 1 };
  s0 -> s2 [71, 65535] { R4242 += 1, R4198 += 1, R4134 += 1, R4135 += 1, R4136 += 1 };
  s0 -> s3 [71, 65535] { R4242 += 1, R4198 += 1, R4133 += 1, R4134 += 1 };
  s1 -> s17 [0, 69] { R4242 += 1, R4198 += 1, R4134 += 1 };
  s1 -> s1 [0, 69] { R4242 += 1, R4198 += 1, R4134 += 1, R4136 += 1, R4137 += 1 };
  s1 -> s15 [0, 69] { R4242 += 1, R4198 += 1 };
  s1 -> s6 [70, 70] { R4242 += 1, R4198 += 1, R4134 += 1, R4136 += 1, R4137 += 1 };
  s1 -> s11 [70, 70] { R4242 += 1, R4198 += 1, R4134 += 1 };
  s1 -> s18 [70, 70] { R4242 += 1, R4198 += 1, R4134 += 1 };
  s1 -> s9 [70, 70] { R4242 += 1, R4198 += 1, R4134 += 1, R4136 += 1, R4137 += 1 };
  s1 -> s16 [70, 70] { R4242 += 1, R4198 += 1 };
  s1 -> s12 [70, 70] { R4242 += 1, R4198 += 1 };
  s1 -> s17 [71, 65535] { R4242 += 1, R4198 += 1, R4134 += 1 };
  s1 -> s1 [71, 65535] { R4242 += 1, R4198 += 1, R4134 += 1, R4136 += 1, R4137 += 1 };
  s1 -> s15 [71, 65535] { R4242 += 1, R4198 += 1 };
  s2 -> s1 [0, 69] { R4242 += 1, R4198 += 1, R4134 += 1, R4136 += 1, R4137 += 1 };
  s2 -> s2 [0, 69] { R4242 += 1, R4198 += 1, R4134 += 1, R4135 += 1, R4136 += 1 };
  s2 -> s15 [0, 69] { R4242 += 1, R4198 += 1 };
  s2 -> s6 [70, 70] { R4242 += 1, R4198 += 1, R4134 += 1, R4136 += 1, R4137 += 1 };
  s2 -> s8 [70, 70] { R4242 += 1, R4198 += 1, R4134 += 1, R4135 += 1, R4136 += 1 };
  s2 -> s9 [70, 70] { R4242 += 1, R4198 += 1, R4134 += 1, R4136 += 1, R4137 += 1 };
  s2 -> s10 [70, 70] { R4242 += 1, R4198 += 1, R4134 += 1, R4135 += 1, R4136 += 1 };
  s2 -> s16 [70, 70] { R4242 += 1, R4198 += 1 };
  s2 -> s12 [70, 70] { R4242 += 1, R4198 += 1 };
  s2 -> s1 [71, 65535] { R4242 += 1, R4198 += 1, R4134 += 1, R4136 += 1, R4137 += 1 };
  s2 -> s2 [71, 65535] { R4242 += 1, R4198 += 1, R4134 += 1, R4135 += 1, R4136 += 1 };
  s2 -> s15 [71, 65535] { R4242 += 1, R4198 += 1 };
  s3 -> s1 [0, 69] { R4242 += 1, R4198 += 1, R4134 += 1, R4136 += 1, R4137 += 1 };
  s3 -> s2 [0, 69] { R4242 += 1, R4198 += 1, R4134 += 1, R4135 += 1, R4136 += 1 };
  s3 -> s3 [0, 69] { R4242 += 1, R4198 += 1, R4133 += 1, R4134 += 1 };
  s3 -> s5 [70, 70] { R4242 += 1, R4198 += 1, R4133 += 1, R4134 += 1 };
  s3 -> s6 [70, 70] { R4242 += 1, R4198 += 1, R4134 += 1, R4136 += 1, R4137 += 1 };
  s3 -> s7 [70, 70] { R4242 += 1, R4198 += 1, R4133 += 1, R4134 += 1 };
  s3 -> s8 [70, 70] { R4242 += 1, R4198 += 1, R4134 += 1, R4135 += 1, R4136 += 1 };
  s3 -> s9 [70, 70] { R4242 += 1, R4198 += 1, R4134 += 1, R4136 += 1, R4137 += 1 };
  s3 -> s10 [70, 70] { R4242 += 1, R4198 += 1, R4134 += 1, R4135 += 1, R4136 += 1 };
  s3 -> s1 [71, 65535] { R4242 += 1, R4198 += 1, R4134 += 1, R4136 += 1, R4137 += 1 };
  s3 -> s2 [71, 65535] { R4242 += 1, R4198 += 1, R4134 += 1, R4135 += 1, R4136 += 1 };
  s3 -> s3 [71, 65535] { R4242 += 1, R4198 += 1, R4133 += 1, R4134 += 1 };
  s4 -> s1 [0, 69] { R4242 += 1, R4198 += 1, R4134 += 1, R4136 += 1, R4137 += 1 };
  s4 -> s2 [0, 69] { R4242 += 1, R4198 += 1, R4134 += 1, R4135 += 1, R4136 += 1 };
  s4 -> s3 [0, 69] { R4242 += 1, R4198 += 1, R4133 += 1, R4134 += 1 };
  s4 -> s4 [0, 65535] { R4242 += 1, R4197 += 1, R4198 += 1 };
  s4 -> s5 [70, 70] { R4242 += 1, R4198 += 1, R4133 += 1, R4134 += 1 };
  s4 -> s6 [70, 70] { R4242 += 1, R4198 += 1, R4134 += 1, R4136 += 1, R4137 += 1 };
  s4 -> s7 [70, 70] { R4242 += 1, R4198 += 1, R4133 += 1, R4134 += 1 };
  s4 -> s8 [70, 70] { R4242 += 1, R4198 += 1, R4134 += 1, R4135 += 1, R4136 += 1 };
  s4 -> s9 [70, 70] { R4242 += 1, R4198 += 1, R4134 += 1, R4136 += 1, R4137 += 1 };
  s4 -> s10 [70, 70] { R4242 += 1, R4198 += 1, R4134 += 1, R4135 += 1, R4136 += 1 };
  s4 -> s1 [71, 65535] { R4242 += 1, R4198 += 1, R4134 += 1, R4136 += 1, R4137 += 1 };
  s4 -> s2 [71, 65535] { R4242 += 1, R4198 += 1, R4134 += 1, R4135 += 1, R4136 += 1 };
  s4 -> s3 [71, 65535] { R4242 += 1, R4198 += 1, R4133 += 1, R4134 += 1 };
  s7 -> s7 [0, 65535] { R4242 += 1, R4198 += 1, R4133 += 1, R4134 += 1 };
  s7 -> s8 [0, 65535] { R4242 += 1, R4198 += 1, R4134 += 1, R4135 += 1, R4136 += 1 };
  s7 -> s9 [0, 65535] { R4242 += 1, R4198 += 1, R4134 += 1, R4136 += 1, R4137 += 1 };
  s8 -> s8 [0, 65535] { R4242 += 1, R4198 += 1, R4134 += 1, R4135 += 1, R4136 += 1 };
  s8 -> s9 [0, 65535] { R4242 += 1, R4198 += 1, R4134 += 1, R4136 += 1, R4137 += 1 };
  s8 -> s12 [0, 65535] { R4242 += 1, R4198 += 1 };
  s9 -> s11 [0, 65535] { R4242 += 1, R4198 += 1, R4134 += 1 };
  s9 -> s9 [0, 65535] { R4242 += 1, R4198 += 1, R4134 += 1, R4136 += 1, R4137 += 1 };
  s9 -> s12 [0, 65535] { R4242 += 1, R4198 += 1 };
  s11 -> s11 [0, 65535] { R4242 += 1, R4198 += 1, R4134 += 1 };
  s11 -> s12 [0, 65535] { R4242 += 1, R4198 += 1 };
  s12 -> s13 [0, 65535] { R4242 += 1 };
  s12 -> s12 [0, 65535] { R4242 += 1, R4198 += 1 };
  s12 -> s14 [0, 65535];
  s13 -> s13 [0, 65535] { R4242 += 1 };
  s13 -> s14 [0, 65535];
  s14 -> s14 [0, 65535];
  s15 -> s15 [0, 69] { R4242 += 1, R4198 += 1 };
  s15 -> s14 [0, 65535];
  s15 -> s15 [0, 65535] { R4242 += 1 };
  s15 -> s16 [70, 70] { R4242 += 1, R4198 += 1 };
  s15 -> s12 [70, 70] { R4242 += 1, R4198 += 1 };
  s15 -> s15 [71, 65535] { R4242 += 1, R4198 += 1 };
  s16 -> s16 [0, 65535] { R4242 += 1 };
  s16 -> s14 [0, 65535];
  s17 -> s17 [0, 69] { R4242 += 1, R4198 += 1, R4134 += 1 };
  s17 -> s15 [0, 69] { R4242 += 1, R4198 += 1 };
  s17 -> s11 [70, 70] { R4242 += 1, R4198 += 1, R4134 += 1 };
  s17 -> s18 [70, 70] { R4242 += 1, R4198 += 1, R4134 += 1 };
  s17 -> s16 [70, 70] { R4242 += 1, R4198 += 1 };
  s17 -> s12 [70, 70] { R4242 += 1, R4198 += 1 };
  s17 -> s17 [71, 65535] { R4242 += 1, R4198 += 1, R4134 += 1 };
  s17 -> s15 [71, 65535] { R4242 += 1, R4198 += 1 };
  accepting s16, s12, s13, s14, s15;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R4242 && R23 - R4242 = -1 && R24 = R4242 && R25 - R4242 = -1 && R26 = R4242 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R4020 + -1*R4016 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R4020 + -1*R4016 - R66 = 0 && R55 + R96 + R93 + -1*R4022 + -1*R4018 - R68 = 0 && R65 + R4019 + R4015 = 0 && R67 + R4021 + R4017 = 0 && R4183 = 0 && R4184 = 0 && R4189 = 0 && R4190 = 0 && R4193 = 0 && R4194 = 0 && R4195 = 0 && R4196 = 0 && R4197 = 0 && R4198 = 0 && R4199 = 0 && R4200 = R4242 && R4201 = 0 && R4202 = R4242 && R4203 = 0 && R4204 = R4242 && R4205 = 0 && R4206 = R4242 && R4207 = 0 && R4208 = R4242 && R4209 = 0 && R4210 = R4242 && R4211 = 0 && R4212 = R4242 && R4213 = 0 && R4214 = R4242 && R4215 = 0 && R4216 = R4242 && R4217 = 0 && R4218 = R4242 && R4219 = 0 && R4220 = R4242 && R4221 = 0 && R4222 = R4242 && R4223 = 0 && R4224 = R4242 && R4225 = 0 && R4226 = R4242 && R4227 = 0 && R4228 = R4242 && R4229 = 0 && R4230 = R4242 && R4231 = 0 && R4232 = R4242 && R4233 = 0 && R4234 = R4242 && R4235 = 0 && R4236 = R4242 && R4237 = 0 && R4238 = R4242 && R4239 = 0 && R4240 = R4242 && R4241 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R3456 + R3453 < 1 && -1*R4020 + -1*R4016 - R66 < 1 && -1*R4022 + -1*R4018 - R68 < 1 && 0 < R4242 && (R2 != 0 || R20 = 0 || (R4143 = 0 && R4144 = 0)) && (R2 != 0 || R20 = 0 || (R4145 = 0 && R4146 = 0)) && (R2 != 0 || R20 = 0 || (R4147 = 0 && R4148 = 0)) && (R2 != 0 || R20 = 0 || (R4149 = 0 && R4150 = 0)) && (R2 != 0 || R20 = 0 || (R4151 = 0 && R4152 = 0)) && (R2 != 0 || R20 = 0 || (R4153 = 0 && R4154 = 0)) && (R2 != 0 || R20 = 0 || (R4155 = 0 && R4156 = 0)) && (R2 != 0 || R20 = 0 || (R4157 = 0 && R4158 = 0)) && (R2 != 0 || R20 = 0 || (R4159 = 0 && R4160 = 0)) && (R2 != 0 || R20 = 0 || (R4161 = 0 && R4162 = 0)) && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R4020 + -1*R4016 - R66 = 0 || R66 + R4020 + R4016 < 1) && (R59 + R3454 + R3451 != 0 || R60 + R3455 + R3452 + -1*R4020 + -1*R4016 - R66 = 0 || R66 + R4020 + R4016 < 1) && (R66 + R4020 + R4016 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R4022 + R4018 < 1) && (R53 + R94 + R91 = 0 || R68 + R4022 + R4018 < 1))) && (R66 + R4020 + R4016 != 0 || ((R59 + R3454 + R3451 != 0 || R60 + R3455 + R3452 = 0 || R68 + R4022 + R4018 < 1) && (R59 + R3454 + R3451 = 0 || R68 + R4022 + R4018 < 1))) && (R66 + R4020 + R4016 != 0 || ((R73 + R4138 + R4133 != 0 || R74 + R4139 + R4134 = 0 || R68 + R4022 + R4018 < 1) && (R73 + R4138 + R4133 = 0 || R68 + R4022 + R4018 < 1))) && (R68 + R4022 + R4018 != 0 || R77 + R4142 + R4137 = 0 || (R75 + R4140 + R4135 = 0 && R76 + R4141 + R4136 = 0)) && (R73 + R4138 + R4133 != 0 || R66 + R4020 + R4016 + -1*R4139 + -1*R4134 - R74 = 0 || R66 + R4020 + R4016 < 1) && (R75 + R4140 + R4135 != 0 || R68 + R4022 + R4018 + -1*R4141 + -1*R4136 - R76 = 0 || R68 + R4022 + R4018 < 1) && (R4143 != 0 || R2 = R4144 || R2 < 1) && (R4145 != 0 || R2 = R4146 || R2 < 1) && (R4147 != 0 || R2 = R4148 || R2 < 1) && (R4149 != 0 || R2 = R4150 || R2 < 1) && (R4151 != 0 || R2 = R4152 || R2 < 1) && (R4153 != 0 || R2 = R4154 || R2 < 1) && (R4155 != 0 || R2 = R4156 || R2 < 1) && (R4157 != 0 || R2 = R4158 || R2 < 1) && (R4159 != 0 || R2 = R4160 || R2 < 1) && (R4161 != 0 || R2 = R4162 || R2 < 1) && (R21 = 0 || (R4181 = 0 && R4182 = 0)) && (R21 = 0 || (R4185 = 0 && R4186 = 0)) && (R21 = 0 || (R4187 = 0 && R4188 = 0)) && (R21 = 0 || (R4191 = 0 && R4192 = 0)) && (R22 = 0 || (R4163 = 0 && R4164 = 0)) && (R22 = 0 || (R4165 = 0 && R4166 = 0)) && (R22 = 0 || (R4167 = 0 && R4168 = 0)) && (R22 = 0 || (R4169 = 0 && R4170 = 0)) && (R22 = 0 || (R4171 = 0 && R4172 = 0)) && (R22 = 0 || (R4173 = 0 && R4174 = 0)) && (R22 = 0 || (R4175 = 0 && R4176 = 0)) && (R22 = 0 || (R4177 = 0 && R4178 = 0)) && (R22 = 0 || (R4179 = 0 && R4180 = 0)) && (R53 + R94 + R91 = 0 || R66 + R4020 + R4016 < 1) && (R59 + R3454 + R3451 = 0 || R66 + R4020 + R4016 < 1) && (R73 + R4138 + R4133 = 0 || R66 + R4020 + R4016 < 1) && (R75 + R4140 + R4135 = 0 || R68 + R4022 + R4018 < 1) && (R4143 = 0 || R2 < 1) && (R4145 = 0 || R2 < 1) && (R4147 = 0 || R2 < 1) && (R4149 = 0 || R2 < 1) && (R4151 = 0 || R2 < 1) && (R4153 = 0 || R2 < 1) && (R4155 = 0 || R2 < 1) && (R4157 = 0 || R2 < 1) && (R4159 = 0 || R2 < 1) && (R4161 = 0 || R2 < 1);
// End of Parikh automata intersection problem
