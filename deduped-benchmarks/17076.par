// Parikh automata intersection problem, generated by OSTRICH+
counter int R100, R101, R102, R12, R15, R16, R2, R20, R21, R22, R23, R2335, R2336, R2337, R2338, R2339, R2340, R2341, R2342, R24, R25, R26, R2673, R2674, R2675, R2676, R2677, R2678, R2679, R2680, R2681, R2682, R2683, R2684, R2685, R2686, R2687, R2688, R2689, R2690, R2691, R2692, R2693, R2694, R2695, R2696, R2697, R2698, R2699, R27, R2700, R2701, R2702, R2703, R2704, R2705, R2706, R2707, R2708, R2709, R2710, R2711, R2712, R2713, R2714, R2715, R2716, R2717, R2718, R2719, R2720, R2721, R2722, R2723, R2724, R2725, R2726, R2727, R2728, R2729, R2730, R2731, R2732, R2733, R2734, R2735, R2736, R2737, R2738, R2739, R2740, R2741, R2742, R2743, R2744, R2745, R2746, R2747, R2748, R2749, R2750, R2751, R2752, R2753, R2754, R2755, R2756, R2757, R2758, R2759, R2760, R2761, R2762, R2763, R2764, R2765, R2766, R2767, R2768, R2769, R2770, R2771, R2772, R2773, R2774, R2775, R2776, R2777, R2778, R2779, R2780, R2781, R2782, R28, R29, R3, R30, R4, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96, R97, R98, R99;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R2703 += 1, R2704 += 1 };
  s0 -> s1 [0, 65535] { R2704 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R2704 += 1, R22 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R2706 += 1 };
  s0 -> s0 [0, 65535] { R2705 += 1, R2706 += 1 };
  s0 -> s2 [70, 70] { R2706 += 1 };
  s0 -> s3 [70, 70] { R2706 += 1 };
  s0 -> s1 [76, 65535] { R2706 += 1 };
  s1 -> s1 [0, 69] { R2706 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2706 += 1 };
  s1 -> s3 [70, 70] { R2706 += 1 };
  s1 -> s1 [76, 65535] { R2706 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R2706 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R2706 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R2708 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R2707 += 1, R2708 += 1 };
  s0 -> s2 [70, 70] { R2708 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R2708 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R2708 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R2708 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2708 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R2708 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R2708 += 1, R45 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2708 += 1, R45 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R2710 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R2709 += 1, R2710 += 1 };
  s0 -> s2 [70, 70] { R2710 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R2710 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R2710 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R2710 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2710 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R2710 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R2710 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R2710 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R2712 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R2711 += 1, R2712 += 1 };
  s0 -> s2 [70, 70] { R2712 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R2712 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R2712 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R2712 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2712 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R2712 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R2712 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R2712 += 1, R49 += 1, R50 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R2714 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R2713 += 1, R2714 += 1 };
  s0 -> s2 [70, 70] { R2714 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R2714 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R2714 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R2714 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2714 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R2714 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R2714 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2714 += 1, R53 += 1, R54 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R2716 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R2715 += 1, R2716 += 1 };
  s0 -> s2 [70, 70] { R2716 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R2716 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R2716 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R2716 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2716 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R2716 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R2716 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535] { R2716 += 1, R59 += 1, R60 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R2718 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R2717 += 1, R2718 += 1 };
  s0 -> s2 [70, 70] { R2718 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R2718 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R2718 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R2718 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2718 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R2718 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R2718 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R2718 += 1, R65 += 1, R66 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R2720 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R2719 += 1, R2720 += 1 };
  s0 -> s2 [70, 70] { R2720 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R2720 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R2720 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R2720 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2720 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R2720 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R2720 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2720 += 1, R73 += 1, R74 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R2740 += 1 };
  s0 -> s0 [0, 65535] { R2739 += 1, R2740 += 1 };
  s0 -> s2 [70, 70] { R2740 += 1 };
  s0 -> s1 [71, 65535] { R2740 += 1 };
  s1 -> s1 [0, 69] { R2740 += 1 };
  s1 -> s2 [70, 70] { R2740 += 1 };
  s1 -> s1 [71, 65535] { R2740 += 1 };
  s2 -> s2 [0, 65535] { R2740 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R2742 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R2741 += 1, R2742 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R2742 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R2744 += 1 };
  s0 -> s2 [0, 65535] { R2744 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R2743 += 1, R2744 += 1 };
  s0 -> s3 [70, 70] { R2744 += 1 };
  s0 -> s1 [71, 65535] { R2744 += 1 };
  s1 -> s1 [0, 69] { R2744 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R2744 += 1 };
  s1 -> s1 [71, 65535] { R2744 += 1 };
  s2 -> s1 [0, 69] { R2744 += 1 };
  s2 -> s2 [0, 65535] { R2744 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R2744 += 1 };
  s2 -> s1 [71, 65535] { R2744 += 1 };
  s3 -> s3 [0, 65535] { R2744 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R2746 += 1, R2684 += 1 };
  s0 -> s2 [0, 65535] { R2746 += 1, R2683 += 1, R2684 += 1 };
  s0 -> s0 [0, 65535] { R2745 += 1, R2746 += 1 };
  s0 -> s1 [71, 65535] { R2746 += 1, R2684 += 1 };
  s1 -> s1 [0, 69] { R2746 += 1, R2684 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2746 += 1 };
  s1 -> s1 [71, 65535] { R2746 += 1, R2684 += 1 };
  s2 -> s1 [0, 69] { R2746 += 1, R2684 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2746 += 1, R2683 += 1, R2684 += 1 };
  s2 -> s1 [71, 65535] { R2746 += 1, R2684 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R2748 += 1, R2686 += 1, R20 += 1 };
  s0 -> s2 [0, 65535] { R2748 += 1, R2685 += 1, R2686 += 1 };
  s0 -> s0 [0, 65535] { R2747 += 1, R2748 += 1 };
  s1 -> s4 [0, 65535] { R2748 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2748 += 1, R2686 += 1, R20 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R2748 += 1, R2686 += 1, R20 += 1 };
  s2 -> s2 [0, 65535] { R2748 += 1, R2685 += 1, R2686 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2748 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R2750 += 1, R2688 += 1 };
  s0 -> s2 [0, 65535] { R2750 += 1, R2687 += 1, R2688 += 1 };
  s0 -> s0 [0, 65535] { R2749 += 1, R2750 += 1 };
  s0 -> s1 [75, 65535] { R2750 += 1, R2688 += 1 };
  s1 -> s1 [0, 70] { R2750 += 1, R2688 += 1 };
  s1 -> s1 [0, 65535] { R2750 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R2750 += 1, R2688 += 1 };
  s2 -> s1 [0, 70] { R2750 += 1, R2688 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2750 += 1, R2687 += 1, R2688 += 1 };
  s2 -> s1 [75, 65535] { R2750 += 1, R2688 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R2751 += 1, R2752 += 1 };
  s0 -> s1 [0, 65535] { R2752 += 1, R2690 += 1, R84 += 1 };
  s0 -> s2 [0, 65535] { R2752 += 1, R2689 += 1, R2690 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R2752 += 1 };
  s1 -> s1 [0, 65535] { R2752 += 1, R2690 += 1, R84 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R2752 += 1, R2690 += 1, R84 += 1 };
  s2 -> s2 [0, 65535] { R2752 += 1, R2689 += 1, R2690 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2752 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R2754 += 1, R2692 += 1 };
  s0 -> s2 [0, 65535] { R2754 += 1, R2691 += 1, R2692 += 1 };
  s0 -> s3 [0, 65535] { R2754 += 1, R2692 += 1, R86 += 1 };
  s0 -> s0 [0, 65535] { R2753 += 1, R2754 += 1 };
  s0 -> s1 [76, 65535] { R2754 += 1, R2692 += 1 };
  s1 -> s1 [0, 74] { R2754 += 1, R2692 += 1 };
  s1 -> s1 [0, 65535] { R2754 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R2754 += 1, R2692 += 1 };
  s2 -> s1 [0, 74] { R2754 += 1, R2692 += 1 };
  s2 -> s2 [0, 65535] { R2754 += 1, R2691 += 1, R2692 += 1 };
  s2 -> s3 [0, 65535] { R2754 += 1, R2692 += 1, R86 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [76, 65535] { R2754 += 1, R2692 += 1 };
  s3 -> s1 [0, 74] { R2754 += 1, R2692 += 1 };
  s3 -> s3 [0, 65535] { R2754 += 1, R2692 += 1, R86 += 1 };
  s3 -> s4 [0, 65535] { R2754 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [76, 65535] { R2754 += 1, R2692 += 1 };
  s4 -> s4 [0, 65535] { R2754 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R2756 += 1, R2694 += 1, R90 += 1 };
  s0 -> s2 [0, 65535] { R2756 += 1, R2694 += 1 };
  s0 -> s0 [0, 65535] { R2755 += 1, R2756 += 1 };
  s0 -> s3 [0, 65535] { R2756 += 1, R2693 += 1, R2694 += 1 };
  s1 -> s5 [0, 65535] { R2756 += 1 };
  s1 -> s1 [0, 65535] { R2756 += 1, R2694 += 1, R90 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R2756 += 1, R2694 += 1 };
  s2 -> s5 [0, 65535] { R2756 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2756 += 1, R2694 += 1 };
  s3 -> s1 [0, 65535] { R2756 += 1, R2694 += 1, R90 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R2756 += 1, R2694 += 1 };
  s3 -> s3 [0, 65535] { R2756 += 1, R2693 += 1, R2694 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2756 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R2758 += 1, R2696 += 1, R94 += 1, R95 += 1 };
  s0 -> s2 [0, 65535] { R2758 += 1, R2696 += 1, R95 += 1, R96 += 1 };
  s0 -> s3 [0, 65535] { R2758 += 1, R2695 += 1, R2696 += 1 };
  s0 -> s0 [0, 65535] { R2757 += 1, R2758 += 1 };
  s1 -> s1 [0, 65535] { R2758 += 1, R2696 += 1, R94 += 1, R95 += 1 };
  s1 -> s6 [0, 65535] { R2758 += 1 };
  s1 -> s2 [0, 65535] { R2758 += 1, R2696 += 1, R95 += 1, R96 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R2758 += 1, R2696 += 1 };
  s2 -> s6 [0, 65535] { R2758 += 1 };
  s2 -> s2 [0, 65535] { R2758 += 1, R2696 += 1, R95 += 1, R96 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R2758 += 1, R2696 += 1, R94 += 1, R95 += 1 };
  s3 -> s2 [0, 65535] { R2758 += 1, R2696 += 1, R95 += 1, R96 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2758 += 1, R2695 += 1, R2696 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2758 += 1, R2696 += 1 };
  s5 -> s6 [0, 65535] { R2758 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R2758 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R2760 += 1, R2698 += 1, R101 += 1 };
  s0 -> s2 [0, 65535] { R2760 += 1, R2698 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [0, 65535] { R2760 += 1, R2698 += 1, R100 += 1, R101 += 1 };
  s0 -> s4 [0, 65535] { R2760 += 1, R2697 += 1, R2698 += 1 };
  s0 -> s0 [0, 65535] { R2759 += 1, R2760 += 1 };
  s0 -> s1 [76, 65535] { R2760 += 1, R2698 += 1, R101 += 1 };
  s1 -> s1 [0, 74] { R2760 += 1, R2698 += 1, R101 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2760 += 1, R2698 += 1 };
  s1 -> s6 [0, 65535] { R2760 += 1 };
  s1 -> s1 [76, 65535] { R2760 += 1, R2698 += 1, R101 += 1 };
  s2 -> s1 [0, 74] { R2760 += 1, R2698 += 1, R101 += 1 };
  s2 -> s7 [0, 65535] { R2760 += 1, R2698 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2760 += 1, R2698 += 1, R101 += 1, R102 += 1 };
  s2 -> s6 [0, 65535] { R2760 += 1 };
  s2 -> s1 [76, 65535] { R2760 += 1, R2698 += 1, R101 += 1 };
  s3 -> s1 [0, 74] { R2760 += 1, R2698 += 1, R101 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R2760 += 1, R2698 += 1, R101 += 1, R102 += 1 };
  s3 -> s3 [0, 65535] { R2760 += 1, R2698 += 1, R100 += 1, R101 += 1 };
  s3 -> s6 [0, 65535] { R2760 += 1 };
  s3 -> s1 [76, 65535] { R2760 += 1, R2698 += 1, R101 += 1 };
  s4 -> s1 [0, 74] { R2760 += 1, R2698 += 1, R101 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R2760 += 1, R2698 += 1, R101 += 1, R102 += 1 };
  s4 -> s3 [0, 65535] { R2760 += 1, R2698 += 1, R100 += 1, R101 += 1 };
  s4 -> s4 [0, 65535] { R2760 += 1, R2697 += 1, R2698 += 1 };
  s4 -> s1 [76, 65535] { R2760 += 1, R2698 += 1, R101 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2760 += 1 };
  s7 -> s7 [0, 65535] { R2760 += 1, R2698 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R2760 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 74] { R2762 += 1, R2700 += 1, R2340 += 1, R2342 += 1 };
  s0 -> s0 [0, 65535] { R2761 += 1, R2762 += 1 };
  s0 -> s2 [0, 65535] { R2762 += 1, R2699 += 1, R2700 += 1 };
  s0 -> s3 [75, 75] { R2762 += 1, R2700 += 1, R2340 += 1, R2342 += 1 };
  s0 -> s1 [76, 65535] { R2762 += 1, R2700 += 1, R2340 += 1, R2342 += 1 };
  s1 -> s1 [0, 74] { R2762 += 1, R2700 += 1, R2340 += 1, R2342 += 1 };
  s1 -> s3 [75, 75] { R2762 += 1, R2700 += 1, R2340 += 1, R2342 += 1 };
  s1 -> s1 [76, 65535] { R2762 += 1, R2700 += 1, R2340 += 1, R2342 += 1 };
  s2 -> s1 [0, 74] { R2762 += 1, R2700 += 1, R2340 += 1, R2342 += 1 };
  s2 -> s2 [0, 65535] { R2762 += 1, R2699 += 1, R2700 += 1 };
  s2 -> s3 [75, 75] { R2762 += 1, R2700 += 1, R2340 += 1, R2342 += 1 };
  s2 -> s1 [76, 65535] { R2762 += 1, R2700 += 1, R2340 += 1, R2342 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R2762 += 1 };
  s3 -> s6 [0, 65535] { R2762 += 1, R2700 += 1 };
  s3 -> s3 [0, 65535] { R2762 += 1, R2700 += 1, R2340 += 1, R2342 += 1 };
  s3 -> s7 [0, 65535] { R2762 += 1, R2700 += 1, R2340 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2762 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R2762 += 1 };
  s6 -> s6 [0, 65535] { R2762 += 1, R2700 += 1 };
  s7 -> s4 [0, 65535];
  s7 -> s5 [0, 65535] { R2762 += 1 };
  s7 -> s6 [0, 65535] { R2762 += 1, R2700 += 1 };
  s7 -> s7 [0, 65535] { R2762 += 1, R2700 += 1, R2340 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton value2_29 {
  init s0;
  s0 -> s0 [0, 65535] { R2763 += 1, R2764 += 1 };
  s0 -> s1 [0, 65535] { R2764 += 1, R2701 += 1, R2702 += 1 };
  s0 -> s2 [0, 65535] { R2764 += 1, R2702 += 1, R2679 += 1, R2681 += 1, R2682 += 1 };
  s0 -> s3 [0, 65535] { R2764 += 1, R2702 += 1 };
  s0 -> s4 [0, 65535] { R2764 += 1, R2702 += 1, R2679 += 1 };
  s1 -> s1 [0, 65535] { R2764 += 1, R2701 += 1, R2702 += 1 };
  s1 -> s2 [0, 65535] { R2764 += 1, R2702 += 1, R2679 += 1, R2681 += 1, R2682 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R2764 += 1, R2702 += 1 };
  s1 -> s4 [0, 65535] { R2764 += 1, R2702 += 1, R2679 += 1 };
  s2 -> s2 [0, 65535] { R2764 += 1, R2702 += 1, R2679 += 1, R2681 += 1, R2682 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R2764 += 1, R2702 += 1 };
  s2 -> s6 [0, 65535] { R2764 += 1 };
  s2 -> s4 [0, 65535] { R2764 += 1, R2702 += 1, R2679 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2764 += 1, R2702 += 1 };
  s3 -> s6 [0, 65535] { R2764 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R2764 += 1, R2702 += 1 };
  s4 -> s6 [0, 65535] { R2764 += 1 };
  s4 -> s4 [0, 65535] { R2764 += 1, R2702 += 1, R2679 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2764 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R2766 += 1, R2721 += 1, R2722 += 1 };
  s0 -> s0 [0, 65535] { R2765 += 1, R2766 += 1 };
  s0 -> s2 [0, 65535] { R2766 += 1, R2722 += 1, R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2766 += 1, R2721 += 1, R2722 += 1 };
  s1 -> s2 [0, 65535] { R2766 += 1, R2722 += 1, R21 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R2766 += 1 };
  s2 -> s2 [0, 65535] { R2766 += 1, R2722 += 1, R21 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2766 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R2768 += 1, R2724 += 1 };
  s0 -> s0 [0, 65535] { R2767 += 1, R2768 += 1 };
  s0 -> s2 [0, 65535] { R2768 += 1, R2723 += 1, R2724 += 1 };
  s0 -> s3 [70, 70] { R2768 += 1, R2724 += 1 };
  s0 -> s4 [70, 70] { R2768 += 1, R2724 += 1 };
  s0 -> s5 [75, 75] { R2768 += 1, R2724 += 1 };
  s0 -> s1 [76, 65535] { R2768 += 1, R2724 += 1 };
  s1 -> s1 [0, 69] { R2768 += 1, R2724 += 1 };
  s1 -> s3 [70, 70] { R2768 += 1, R2724 += 1 };
  s1 -> s4 [70, 70] { R2768 += 1, R2724 += 1 };
  s1 -> s5 [75, 75] { R2768 += 1, R2724 += 1 };
  s1 -> s1 [76, 65535] { R2768 += 1, R2724 += 1 };
  s2 -> s1 [0, 69] { R2768 += 1, R2724 += 1 };
  s2 -> s2 [0, 65535] { R2768 += 1, R2723 += 1, R2724 += 1 };
  s2 -> s3 [70, 70] { R2768 += 1, R2724 += 1 };
  s2 -> s4 [70, 70] { R2768 += 1, R2724 += 1 };
  s2 -> s5 [75, 75] { R2768 += 1, R2724 += 1 };
  s2 -> s1 [76, 65535] { R2768 += 1, R2724 += 1 };
  s3 -> s3 [0, 70] { R2768 += 1, R2724 += 1 };
  s3 -> s8 [75, 75] { R2768 += 1, R2724 += 1 };
  s3 -> s3 [76, 65535] { R2768 += 1, R2724 += 1 };
  s5 -> s5 [0, 69] { R2768 += 1, R2724 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R2768 += 1 };
  s5 -> s7 [70, 70] { R2768 += 1, R2724 += 1 };
  s5 -> s8 [70, 70] { R2768 += 1, R2724 += 1 };
  s5 -> s5 [75, 65535] { R2768 += 1, R2724 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2768 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 70] { R2768 += 1, R2724 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R2768 += 1 };
  s8 -> s8 [75, 65535] { R2768 += 1, R2724 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R2770 += 1, R2726 += 1, R83 += 1 };
  s0 -> s2 [0, 65535] { R2770 += 1, R2725 += 1, R2726 += 1 };
  s0 -> s0 [0, 65535] { R2769 += 1, R2770 += 1 };
  s0 -> s3 [70, 70] { R2770 += 1, R2726 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R2770 += 1, R2726 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R2770 += 1, R2726 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R2770 += 1, R2726 += 1, R83 += 1 };
  s1 -> s1 [0, 65535] { R2770 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R2770 += 1, R2726 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R2770 += 1, R2726 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R2770 += 1, R2726 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R2770 += 1, R2726 += 1, R83 += 1 };
  s2 -> s2 [0, 65535] { R2770 += 1, R2725 += 1, R2726 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R2770 += 1, R2726 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R2770 += 1, R2726 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R2770 += 1, R2726 += 1, R83 += 1 };
  s3 -> s3 [0, 65535] { R2770 += 1, R2726 += 1, R83 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R2770 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2770 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2770 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R2772 += 1, R2728 += 1, R85 += 1 };
  s0 -> s2 [0, 65535] { R2772 += 1, R2727 += 1, R2728 += 1 };
  s0 -> s0 [0, 65535] { R2771 += 1, R2772 += 1 };
  s0 -> s3 [70, 70] { R2772 += 1, R2728 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R2772 += 1, R2728 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R2772 += 1, R2728 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R2772 += 1, R2728 += 1, R85 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2772 += 1 };
  s1 -> s3 [70, 70] { R2772 += 1, R2728 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R2772 += 1, R2728 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R2772 += 1, R2728 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R2772 += 1, R2728 += 1, R85 += 1 };
  s2 -> s2 [0, 65535] { R2772 += 1, R2727 += 1, R2728 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R2772 += 1, R2728 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R2772 += 1, R2728 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R2772 += 1, R2728 += 1, R85 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R2772 += 1 };
  s3 -> s3 [0, 65535] { R2772 += 1, R2728 += 1, R85 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2772 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2772 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R2774 += 1, R2730 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R2774 += 1, R2730 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R2773 += 1, R2774 += 1 };
  s0 -> s3 [0, 65535] { R2774 += 1, R2729 += 1, R2730 += 1 };
  s0 -> s4 [70, 70] { R2774 += 1, R2730 += 1, R87 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R2774 += 1, R2730 += 1, R87 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R2774 += 1, R2730 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R2774 += 1, R2730 += 1, R88 += 1 };
  s0 -> s1 [71, 74] { R2774 += 1, R2730 += 1, R88 += 1 };
  s0 -> s2 [71, 65535] { R2774 += 1, R2730 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R2774 += 1, R2730 += 1, R88 += 1 };
  s0 -> s1 [76, 65535] { R2774 += 1, R2730 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R2774 += 1, R2730 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R2774 += 1, R2730 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R2774 += 1, R2730 += 1, R88 += 1 };
  s1 -> s1 [71, 74] { R2774 += 1, R2730 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R2774 += 1, R2730 += 1, R88 += 1 };
  s1 -> s1 [76, 65535] { R2774 += 1, R2730 += 1, R88 += 1 };
  s2 -> s1 [0, 69] { R2774 += 1, R2730 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R2774 += 1, R2730 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R2774 += 1, R2730 += 1, R87 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R2774 += 1, R2730 += 1, R87 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R2774 += 1, R2730 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R2774 += 1, R2730 += 1, R88 += 1 };
  s2 -> s1 [71, 74] { R2774 += 1, R2730 += 1, R88 += 1 };
  s2 -> s2 [71, 65535] { R2774 += 1, R2730 += 1, R87 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R2774 += 1, R2730 += 1, R88 += 1 };
  s2 -> s1 [76, 65535] { R2774 += 1, R2730 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R2774 += 1, R2730 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R2774 += 1, R2730 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R2774 += 1, R2729 += 1, R2730 += 1 };
  s3 -> s4 [70, 70] { R2774 += 1, R2730 += 1, R87 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R2774 += 1, R2730 += 1, R87 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R2774 += 1, R2730 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R2774 += 1, R2730 += 1, R88 += 1 };
  s3 -> s1 [71, 74] { R2774 += 1, R2730 += 1, R88 += 1 };
  s3 -> s2 [71, 65535] { R2774 += 1, R2730 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R2774 += 1, R2730 += 1, R88 += 1 };
  s3 -> s1 [76, 65535] { R2774 += 1, R2730 += 1, R88 += 1 };
  s4 -> s7 [0, 74] { R2774 += 1, R2730 += 1, R88 += 1 };
  s4 -> s4 [0, 65535] { R2774 += 1, R2730 += 1, R87 += 1, R88 += 1 };
  s4 -> s11 [75, 75] { R2774 += 1, R2730 += 1, R88 += 1 };
  s4 -> s7 [76, 65535] { R2774 += 1, R2730 += 1, R88 += 1 };
  s7 -> s7 [0, 74] { R2774 += 1, R2730 += 1, R88 += 1 };
  s7 -> s11 [75, 75] { R2774 += 1, R2730 += 1, R88 += 1 };
  s7 -> s7 [76, 65535] { R2774 += 1, R2730 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R2774 += 1, R2730 += 1, R88 += 1 };
  s8 -> s8 [0, 65535] { R2774 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R2774 += 1, R2730 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R2774 += 1, R2730 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R2774 += 1, R2730 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R2774 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R2774 += 1, R2730 += 1, R88 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R2774 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R2774 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R2776 += 1, R2732 += 1, R91 += 1, R92 += 1 };
  s0 -> s0 [0, 65535] { R2775 += 1, R2776 += 1 };
  s0 -> s2 [0, 65535] { R2776 += 1, R2731 += 1, R2732 += 1 };
  s0 -> s3 [70, 70] { R2776 += 1, R2732 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R2776 += 1, R2732 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R2776 += 1, R2732 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R2776 += 1, R2732 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 65535] { R2776 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R2776 += 1, R2732 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R2776 += 1, R2732 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R2776 += 1, R2732 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R2776 += 1, R2732 += 1, R91 += 1, R92 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2776 += 1, R2731 += 1, R2732 += 1 };
  s2 -> s3 [70, 70] { R2776 += 1, R2732 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R2776 += 1, R2732 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R2776 += 1, R2732 += 1, R91 += 1, R92 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R2776 += 1 };
  s3 -> s3 [0, 65535] { R2776 += 1, R2732 += 1, R91 += 1, R92 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2776 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2776 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R2778 += 1, R2734 += 1, R97 += 1, R98 += 1 };
  s0 -> s0 [0, 65535] { R2777 += 1, R2778 += 1 };
  s0 -> s2 [0, 65535] { R2778 += 1, R2733 += 1, R2734 += 1 };
  s0 -> s3 [70, 70] { R2778 += 1, R2734 += 1, R97 += 1, R98 += 1 };
  s0 -> s4 [70, 70] { R2778 += 1, R2734 += 1, R97 += 1, R98 += 1 };
  s0 -> s1 [71, 65535] { R2778 += 1, R2734 += 1, R97 += 1, R98 += 1 };
  s1 -> s1 [0, 69] { R2778 += 1, R2734 += 1, R97 += 1, R98 += 1 };
  s1 -> s1 [0, 65535] { R2778 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R2778 += 1, R2734 += 1, R97 += 1, R98 += 1 };
  s1 -> s4 [70, 70] { R2778 += 1, R2734 += 1, R97 += 1, R98 += 1 };
  s1 -> s1 [71, 65535] { R2778 += 1, R2734 += 1, R97 += 1, R98 += 1 };
  s2 -> s1 [0, 69] { R2778 += 1, R2734 += 1, R97 += 1, R98 += 1 };
  s2 -> s2 [0, 65535] { R2778 += 1, R2733 += 1, R2734 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R2778 += 1, R2734 += 1, R97 += 1, R98 += 1 };
  s2 -> s4 [70, 70] { R2778 += 1, R2734 += 1, R97 += 1, R98 += 1 };
  s2 -> s1 [71, 65535] { R2778 += 1, R2734 += 1, R97 += 1, R98 += 1 };
  s3 -> s3 [0, 65535] { R2778 += 1, R2734 += 1, R97 += 1, R98 += 1 };
  s3 -> s6 [0, 65535] { R2778 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2778 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2778 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R2780 += 1, R2736 += 1, R2336 += 1, R2337 += 1, R2338 += 1 };
  s0 -> s2 [0, 69] { R2780 += 1, R2736 += 1, R2335 += 1, R2336 += 1 };
  s0 -> s3 [0, 69] { R2780 += 1, R2736 += 1, R2336 += 1, R2338 += 1 };
  s0 -> s0 [0, 65535] { R2779 += 1, R2780 += 1 };
  s0 -> s4 [0, 65535] { R2780 += 1, R2735 += 1, R2736 += 1 };
  s0 -> s5 [70, 70] { R2780 += 1, R2736 += 1, R2335 += 1, R2336 += 1 };
  s0 -> s6 [70, 70] { R2780 += 1, R2736 += 1, R2335 += 1, R2336 += 1 };
  s0 -> s7 [70, 70] { R2780 += 1, R2736 += 1, R2336 += 1, R2338 += 1 };
  s0 -> s8 [70, 70] { R2780 += 1, R2736 += 1, R2336 += 1, R2337 += 1, R2338 += 1 };
  s0 -> s9 [70, 70] { R2780 += 1, R2736 += 1, R2336 += 1, R2338 += 1 };
  s0 -> s10 [70, 70] { R2780 += 1, R2736 += 1, R2336 += 1, R2337 += 1, R2338 += 1 };
  s0 -> s3 [71, 74] { R2780 += 1, R2736 += 1, R2336 += 1, R2338 += 1 };
  s0 -> s1 [71, 65535] { R2780 += 1, R2736 += 1, R2336 += 1, R2337 += 1, R2338 += 1 };
  s0 -> s2 [71, 65535] { R2780 += 1, R2736 += 1, R2335 += 1, R2336 += 1 };
  s0 -> s3 [76, 65535] { R2780 += 1, R2736 += 1, R2336 += 1, R2338 += 1 };
  s1 -> s1 [0, 69] { R2780 += 1, R2736 += 1, R2336 += 1, R2337 += 1, R2338 += 1 };
  s1 -> s3 [0, 69] { R2780 += 1, R2736 += 1, R2336 += 1, R2338 += 1 };
  s1 -> s7 [70, 70] { R2780 += 1, R2736 += 1, R2336 += 1, R2338 += 1 };
  s1 -> s8 [70, 70] { R2780 += 1, R2736 += 1, R2336 += 1, R2337 += 1, R2338 += 1 };
  s1 -> s9 [70, 70] { R2780 += 1, R2736 += 1, R2336 += 1, R2338 += 1 };
  s1 -> s10 [70, 70] { R2780 += 1, R2736 += 1, R2336 += 1, R2337 += 1, R2338 += 1 };
  s1 -> s3 [71, 74] { R2780 += 1, R2736 += 1, R2336 += 1, R2338 += 1 };
  s1 -> s1 [71, 65535] { R2780 += 1, R2736 += 1, R2336 += 1, R2337 += 1, R2338 += 1 };
  s1 -> s3 [76, 65535] { R2780 += 1, R2736 += 1, R2336 += 1, R2338 += 1 };
  s2 -> s1 [0, 69] { R2780 += 1, R2736 += 1, R2336 += 1, R2337 += 1, R2338 += 1 };
  s2 -> s2 [0, 69] { R2780 += 1, R2736 += 1, R2335 += 1, R2336 += 1 };
  s2 -> s3 [0, 69] { R2780 += 1, R2736 += 1, R2336 += 1, R2338 += 1 };
  s2 -> s5 [70, 70] { R2780 += 1, R2736 += 1, R2335 += 1, R2336 += 1 };
  s2 -> s6 [70, 70] { R2780 += 1, R2736 += 1, R2335 += 1, R2336 += 1 };
  s2 -> s7 [70, 70] { R2780 += 1, R2736 += 1, R2336 += 1, R2338 += 1 };
  s2 -> s8 [70, 70] { R2780 += 1, R2736 += 1, R2336 += 1, R2337 += 1, R2338 += 1 };
  s2 -> s9 [70, 70] { R2780 += 1, R2736 += 1, R2336 += 1, R2338 += 1 };
  s2 -> s10 [70, 70] { R2780 += 1, R2736 += 1, R2336 += 1, R2337 += 1, R2338 += 1 };
  s2 -> s3 [71, 74] { R2780 += 1, R2736 += 1, R2336 += 1, R2338 += 1 };
  s2 -> s1 [71, 65535] { R2780 += 1, R2736 += 1, R2336 += 1, R2337 += 1, R2338 += 1 };
  s2 -> s2 [71, 65535] { R2780 += 1, R2736 += 1, R2335 += 1, R2336 += 1 };
  s2 -> s3 [76, 65535] { R2780 += 1, R2736 += 1, R2336 += 1, R2338 += 1 };
  s3 -> s3 [0, 69] { R2780 += 1, R2736 += 1, R2336 += 1, R2338 += 1 };
  s3 -> s3 [0, 65535] { R2780 += 1 };
  s3 -> s11 [0, 65535];
  s3 -> s7 [70, 70] { R2780 += 1, R2736 += 1, R2336 += 1, R2338 += 1 };
  s3 -> s9 [70, 70] { R2780 += 1, R2736 += 1, R2336 += 1, R2338 += 1 };
  s3 -> s3 [71, 74] { R2780 += 1, R2736 += 1, R2336 += 1, R2338 += 1 };
  s3 -> s3 [76, 65535] { R2780 += 1, R2736 += 1, R2336 += 1, R2338 += 1 };
  s4 -> s1 [0, 69] { R2780 += 1, R2736 += 1, R2336 += 1, R2337 += 1, R2338 += 1 };
  s4 -> s2 [0, 69] { R2780 += 1, R2736 += 1, R2335 += 1, R2336 += 1 };
  s4 -> s3 [0, 69] { R2780 += 1, R2736 += 1, R2336 += 1, R2338 += 1 };
  s4 -> s4 [0, 65535] { R2780 += 1, R2735 += 1, R2736 += 1 };
  s4 -> s5 [70, 70] { R2780 += 1, R2736 += 1, R2335 += 1, R2336 += 1 };
  s4 -> s6 [70, 70] { R2780 += 1, R2736 += 1, R2335 += 1, R2336 += 1 };
  s4 -> s7 [70, 70] { R2780 += 1, R2736 += 1, R2336 += 1, R2338 += 1 };
  s4 -> s8 [70, 70] { R2780 += 1, R2736 += 1, R2336 += 1, R2337 += 1, R2338 += 1 };
  s4 -> s9 [70, 70] { R2780 += 1, R2736 += 1, R2336 += 1, R2338 += 1 };
  s4 -> s10 [70, 70] { R2780 += 1, R2736 += 1, R2336 += 1, R2337 += 1, R2338 += 1 };
  s4 -> s3 [71, 74] { R2780 += 1, R2736 += 1, R2336 += 1, R2338 += 1 };
  s4 -> s1 [71, 65535] { R2780 += 1, R2736 += 1, R2336 += 1, R2337 += 1, R2338 += 1 };
  s4 -> s2 [71, 65535] { R2780 += 1, R2736 += 1, R2335 += 1, R2336 += 1 };
  s4 -> s3 [76, 65535] { R2780 += 1, R2736 += 1, R2336 += 1, R2338 += 1 };
  s5 -> s9 [0, 74] { R2780 += 1, R2736 += 1, R2336 += 1, R2338 += 1 };
  s5 -> s5 [0, 65535] { R2780 += 1, R2736 += 1, R2335 += 1, R2336 += 1 };
  s5 -> s8 [0, 65535] { R2780 += 1, R2736 += 1, R2336 += 1, R2337 += 1, R2338 += 1 };
  s5 -> s9 [76, 65535] { R2780 += 1, R2736 += 1, R2336 += 1, R2338 += 1 };
  s7 -> s7 [0, 65535] { R2780 += 1 };
  s7 -> s11 [0, 65535];
  s8 -> s9 [0, 74] { R2780 += 1, R2736 += 1, R2336 += 1, R2338 += 1 };
  s8 -> s8 [0, 65535] { R2780 += 1, R2736 += 1, R2336 += 1, R2337 += 1, R2338 += 1 };
  s8 -> s9 [76, 65535] { R2780 += 1, R2736 += 1, R2336 += 1, R2338 += 1 };
  s9 -> s9 [0, 74] { R2780 += 1, R2736 += 1, R2336 += 1, R2338 += 1 };
  s9 -> s9 [0, 65535] { R2780 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s9 [76, 65535] { R2780 += 1, R2736 += 1, R2336 += 1, R2338 += 1 };
  s11 -> s11 [0, 65535];
  accepting s3, s7, s9, s11;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R2782 += 1, R2738 += 1, R2674 += 1, R2676 += 1, R2677 += 1 };
  s0 -> s2 [0, 69] { R2782 += 1, R2738 += 1, R2673 += 1, R2674 += 1 };
  s0 -> s3 [0, 69] { R2782 += 1, R2738 += 1, R2674 += 1, R2675 += 1, R2676 += 1 };
  s0 -> s4 [0, 65535] { R2782 += 1, R2737 += 1, R2738 += 1 };
  s0 -> s0 [0, 65535] { R2781 += 1, R2782 += 1 };
  s0 -> s5 [70, 70] { R2782 += 1, R2738 += 1, R2674 += 1, R2675 += 1, R2676 += 1 };
  s0 -> s6 [70, 70] { R2782 += 1, R2738 += 1, R2674 += 1, R2676 += 1, R2677 += 1 };
  s0 -> s7 [70, 70] { R2782 += 1, R2738 += 1, R2674 += 1, R2676 += 1, R2677 += 1 };
  s0 -> s8 [70, 70] { R2782 += 1, R2738 += 1, R2673 += 1, R2674 += 1 };
  s0 -> s9 [70, 70] { R2782 += 1, R2738 += 1, R2673 += 1, R2674 += 1 };
  s0 -> s10 [70, 70] { R2782 += 1, R2738 += 1, R2674 += 1, R2675 += 1, R2676 += 1 };
  s0 -> s1 [71, 65535] { R2782 += 1, R2738 += 1, R2674 += 1, R2676 += 1, R2677 += 1 };
  s0 -> s2 [71, 65535] { R2782 += 1, R2738 += 1, R2673 += 1, R2674 += 1 };
  s0 -> s3 [71, 65535] { R2782 += 1, R2738 += 1, R2674 += 1, R2675 += 1, R2676 += 1 };
  s1 -> s1 [0, 69] { R2782 += 1, R2738 += 1, R2674 += 1, R2676 += 1, R2677 += 1 };
  s1 -> s1 [0, 65535] { R2782 += 1 };
  s1 -> s11 [0, 65535];
  s1 -> s6 [70, 70] { R2782 += 1, R2738 += 1, R2674 += 1, R2676 += 1, R2677 += 1 };
  s1 -> s7 [70, 70] { R2782 += 1, R2738 += 1, R2674 += 1, R2676 += 1, R2677 += 1 };
  s1 -> s1 [71, 65535] { R2782 += 1, R2738 += 1, R2674 += 1, R2676 += 1, R2677 += 1 };
  s2 -> s1 [0, 69] { R2782 += 1, R2738 += 1, R2674 += 1, R2676 += 1, R2677 += 1 };
  s2 -> s2 [0, 69] { R2782 += 1, R2738 += 1, R2673 += 1, R2674 += 1 };
  s2 -> s3 [0, 69] { R2782 += 1, R2738 += 1, R2674 += 1, R2675 += 1, R2676 += 1 };
  s2 -> s5 [70, 70] { R2782 += 1, R2738 += 1, R2674 += 1, R2675 += 1, R2676 += 1 };
  s2 -> s6 [70, 70] { R2782 += 1, R2738 += 1, R2674 += 1, R2676 += 1, R2677 += 1 };
  s2 -> s7 [70, 70] { R2782 += 1, R2738 += 1, R2674 += 1, R2676 += 1, R2677 += 1 };
  s2 -> s8 [70, 70] { R2782 += 1, R2738 += 1, R2673 += 1, R2674 += 1 };
  s2 -> s9 [70, 70] { R2782 += 1, R2738 += 1, R2673 += 1, R2674 += 1 };
  s2 -> s10 [70, 70] { R2782 += 1, R2738 += 1, R2674 += 1, R2675 += 1, R2676 += 1 };
  s2 -> s1 [71, 65535] { R2782 += 1, R2738 += 1, R2674 += 1, R2676 += 1, R2677 += 1 };
  s2 -> s2 [71, 65535] { R2782 += 1, R2738 += 1, R2673 += 1, R2674 += 1 };
  s2 -> s3 [71, 65535] { R2782 += 1, R2738 += 1, R2674 += 1, R2675 += 1, R2676 += 1 };
  s3 -> s1 [0, 69] { R2782 += 1, R2738 += 1, R2674 += 1, R2676 += 1, R2677 += 1 };
  s3 -> s3 [0, 69] { R2782 += 1, R2738 += 1, R2674 += 1, R2675 += 1, R2676 += 1 };
  s3 -> s5 [70, 70] { R2782 += 1, R2738 += 1, R2674 += 1, R2675 += 1, R2676 += 1 };
  s3 -> s6 [70, 70] { R2782 += 1, R2738 += 1, R2674 += 1, R2676 += 1, R2677 += 1 };
  s3 -> s7 [70, 70] { R2782 += 1, R2738 += 1, R2674 += 1, R2676 += 1, R2677 += 1 };
  s3 -> s10 [70, 70] { R2782 += 1, R2738 += 1, R2674 += 1, R2675 += 1, R2676 += 1 };
  s3 -> s1 [71, 65535] { R2782 += 1, R2738 += 1, R2674 += 1, R2676 += 1, R2677 += 1 };
  s3 -> s3 [71, 65535] { R2782 += 1, R2738 += 1, R2674 += 1, R2675 += 1, R2676 += 1 };
  s4 -> s1 [0, 69] { R2782 += 1, R2738 += 1, R2674 += 1, R2676 += 1, R2677 += 1 };
  s4 -> s2 [0, 69] { R2782 += 1, R2738 += 1, R2673 += 1, R2674 += 1 };
  s4 -> s3 [0, 69] { R2782 += 1, R2738 += 1, R2674 += 1, R2675 += 1, R2676 += 1 };
  s4 -> s4 [0, 65535] { R2782 += 1, R2737 += 1, R2738 += 1 };
  s4 -> s5 [70, 70] { R2782 += 1, R2738 += 1, R2674 += 1, R2675 += 1, R2676 += 1 };
  s4 -> s6 [70, 70] { R2782 += 1, R2738 += 1, R2674 += 1, R2676 += 1, R2677 += 1 };
  s4 -> s7 [70, 70] { R2782 += 1, R2738 += 1, R2674 += 1, R2676 += 1, R2677 += 1 };
  s4 -> s8 [70, 70] { R2782 += 1, R2738 += 1, R2673 += 1, R2674 += 1 };
  s4 -> s9 [70, 70] { R2782 += 1, R2738 += 1, R2673 += 1, R2674 += 1 };
  s4 -> s10 [70, 70] { R2782 += 1, R2738 += 1, R2674 += 1, R2675 += 1, R2676 += 1 };
  s4 -> s1 [71, 65535] { R2782 += 1, R2738 += 1, R2674 += 1, R2676 += 1, R2677 += 1 };
  s4 -> s2 [71, 65535] { R2782 += 1, R2738 += 1, R2673 += 1, R2674 += 1 };
  s4 -> s3 [71, 65535] { R2782 += 1, R2738 += 1, R2674 += 1, R2675 += 1, R2676 += 1 };
  s6 -> s6 [0, 65535] { R2782 += 1, R2738 += 1, R2674 += 1, R2676 += 1, R2677 += 1 };
  s6 -> s11 [0, 65535];
  s6 -> s12 [0, 65535] { R2782 += 1 };
  s7 -> s7 [0, 65535] { R2782 += 1 };
  s7 -> s11 [0, 65535];
  s9 -> s6 [0, 65535] { R2782 += 1, R2738 += 1, R2674 += 1, R2676 += 1, R2677 += 1 };
  s9 -> s9 [0, 65535] { R2782 += 1, R2738 += 1, R2673 += 1, R2674 += 1 };
  s9 -> s10 [0, 65535] { R2782 += 1, R2738 += 1, R2674 += 1, R2675 += 1, R2676 += 1 };
  s10 -> s6 [0, 65535] { R2782 += 1, R2738 += 1, R2674 += 1, R2676 += 1, R2677 += 1 };
  s10 -> s10 [0, 65535] { R2782 += 1, R2738 += 1, R2674 += 1, R2675 += 1, R2676 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R2782 += 1 };
  accepting s12, s6, s1, s7, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R2700 && R3 = R2782 && R23 - R2782 = -1 && R24 = R2782 && R25 - R2782 = -1 && R26 = R2782 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R2340 + -1*R2336 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R2340 + -1*R2336 - R66 = 0 && R55 + R96 + R93 + -1*R2342 + -1*R2338 - R68 = 0 && R65 + R2339 + R2335 = 0 && R67 + R2341 + R2337 = 0 && R2699 = 0 && R2723 = 0 && R2724 = 0 && R2729 = 0 && R2730 = 0 && R2735 = 0 && R2736 = 0 && R2737 = 0 && R2738 = 0 && R2739 = 0 && R2740 = R2782 && R2741 = 0 && R2742 = R2782 && R2743 = 0 && R2744 = R2782 && R2745 = 0 && R2746 = R2782 && R2747 = 0 && R2748 = R2782 && R2749 = 0 && R2750 = R2782 && R2751 = 0 && R2752 = R2782 && R2753 = 0 && R2754 = R2782 && R2755 = 0 && R2756 = R2782 && R2757 = 0 && R2758 = R2782 && R2759 = 0 && R2760 = R2782 && R2761 = 0 && R2762 = R2782 && R2763 = 0 && R2764 = R2782 && R2765 = 0 && R2766 = R2782 && R2767 = 0 && R2768 = R2782 && R2769 = 0 && R2770 = R2782 && R2771 = 0 && R2772 = R2782 && R2773 = 0 && R2774 = R2782 && R2775 = 0 && R2776 = R2782 && R2777 = 0 && R2778 = R2782 && R2779 = 0 && R2780 = R2782 && R2781 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R102 + R99 < 1 && -1*R2340 + -1*R2336 - R66 < 1 && -1*R2342 + -1*R2338 - R68 < 1 && -1 < R2700 && 0 < R2782 && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R2340 + -1*R2336 - R66 = 0 || R66 + R2340 + R2336 < 1) && (R59 + R100 + R97 != 0 || R60 + R101 + R98 + -1*R2340 + -1*R2336 - R66 = 0 || R66 + R2340 + R2336 < 1) && (R66 + R2340 + R2336 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R2342 + R2338 < 1) && (R53 + R94 + R91 = 0 || R68 + R2342 + R2338 < 1))) && (R66 + R2340 + R2336 != 0 || ((R59 + R100 + R97 != 0 || R60 + R101 + R98 = 0 || R68 + R2342 + R2338 < 1) && (R59 + R100 + R97 = 0 || R68 + R2342 + R2338 < 1))) && (R66 + R2340 + R2336 != 0 || ((R73 + R2678 + R2673 != 0 || R74 + R2679 + R2674 = 0 || R68 + R2342 + R2338 < 1) && (R73 + R2678 + R2673 = 0 || R68 + R2342 + R2338 < 1))) && (R68 + R2342 + R2338 != 0 || R77 + R2682 + R2677 = 0 || (R75 + R2680 + R2675 = 0 && R76 + R2681 + R2676 = 0)) && (R73 + R2678 + R2673 != 0 || R66 + R2340 + R2336 + -1*R2679 + -1*R2674 - R74 = 0 || R66 + R2340 + R2336 < 1) && (R75 + R2680 + R2675 != 0 || R68 + R2342 + R2338 + -1*R2681 + -1*R2676 - R76 = 0 || R68 + R2342 + R2338 < 1) && (R2683 != 0 || R2684 = R2700 || (R20 = 0 && R2700 = 0)) && (R2685 != 0 || R2686 = R2700 || (R20 = 0 && R2700 = 0)) && (R2687 != 0 || R2688 = R2700 || (R20 = 0 && R2700 = 0)) && (R2689 != 0 || R2690 = R2700 || (R20 = 0 && R2700 = 0)) && (R2691 != 0 || R2692 = R2700 || (R20 = 0 && R2700 = 0)) && (R2693 != 0 || R2694 = R2700 || (R20 = 0 && R2700 = 0)) && (R2695 != 0 || R2696 = R2700 || (R20 = 0 && R2700 = 0)) && (R2697 != 0 || R2698 = R2700 || (R20 = 0 && R2700 = 0)) && (R2701 != 0 || R2700 = R2702 || (R20 = 0 && R2700 = 0)) && (R21 = 0 || (R2721 = 0 && R2722 = 0)) && (R21 = 0 || (R2725 = 0 && R2726 = 0)) && (R21 = 0 || (R2727 = 0 && R2728 = 0)) && (R21 = 0 || (R2731 = 0 && R2732 = 0)) && (R21 = 0 || (R2733 = 0 && R2734 = 0)) && (R22 = 0 || (R2703 = 0 && R2704 = 0)) && (R22 = 0 || (R2705 = 0 && R2706 = 0)) && (R22 = 0 || (R2707 = 0 && R2708 = 0)) && (R22 = 0 || (R2709 = 0 && R2710 = 0)) && (R22 = 0 || (R2711 = 0 && R2712 = 0)) && (R22 = 0 || (R2713 = 0 && R2714 = 0)) && (R22 = 0 || (R2715 = 0 && R2716 = 0)) && (R22 = 0 || (R2717 = 0 && R2718 = 0)) && (R22 = 0 || (R2719 = 0 && R2720 = 0)) && (R53 + R94 + R91 = 0 || R66 + R2340 + R2336 < 1) && (R59 + R100 + R97 = 0 || R66 + R2340 + R2336 < 1) && (R73 + R2678 + R2673 = 0 || R66 + R2340 + R2336 < 1) && (R75 + R2680 + R2675 = 0 || R68 + R2342 + R2338 < 1) && (R2683 = 0 || (R20 = 0 && R2700 = 0)) && (R2685 = 0 || (R20 = 0 && R2700 = 0)) && (R2687 = 0 || (R20 = 0 && R2700 = 0)) && (R2689 = 0 || (R20 = 0 && R2700 = 0)) && (R2691 = 0 || (R20 = 0 && R2700 = 0)) && (R2693 = 0 || (R20 = 0 && R2700 = 0)) && (R2695 = 0 || (R20 = 0 && R2700 = 0)) && (R2697 = 0 || (R20 = 0 && R2700 = 0)) && (R2701 = 0 || (R20 = 0 && R2700 = 0));
// End of Parikh automata intersection problem
