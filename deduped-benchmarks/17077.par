// Parikh automata intersection problem, generated by OSTRICH+
counter int R12, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R3451, R3452, R3453, R3454, R3455, R3456, R4, R4015, R4016, R4017, R4018, R4019, R4020, R4021, R4022, R4023, R4024, R4025, R4026, R4027, R4028, R4029, R4030, R4031, R4032, R4033, R4034, R4035, R4036, R4037, R4038, R4039, R4040, R4041, R4042, R4043, R4044, R4045, R4046, R4047, R4048, R4049, R4050, R4051, R4052, R4053, R4054, R4055, R4056, R4057, R4058, R4059, R4060, R4061, R4062, R4063, R4064, R4065, R4066, R4067, R4068, R4069, R4070, R4071, R4072, R4073, R4074, R4075, R4076, R4077, R4078, R4079, R4080, R4081, R4082, R4083, R4084, R4085, R4086, R4087, R4088, R4089, R4090, R4091, R4092, R4093, R4094, R4095, R4096, R4097, R4098, R4099, R4100, R4101, R4102, R4103, R4104, R4105, R4106, R4107, R4108, R4109, R4110, R4111, R4112, R4113, R4114, R4115, R4116, R4117, R4118, R4119, R4120, R4121, R4122, R4123, R4124, R4125, R4126, R4127, R4128, R4129, R4130, R4131, R4132, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R4054 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R4053 += 1, R4054 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R4054 += 1, R22 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R4056 += 1 };
  s0 -> s0 [0, 65535] { R4055 += 1, R4056 += 1 };
  s0 -> s2 [70, 70] { R4056 += 1 };
  s0 -> s3 [70, 70] { R4056 += 1 };
  s0 -> s1 [76, 65535] { R4056 += 1 };
  s1 -> s1 [0, 69] { R4056 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4056 += 1 };
  s1 -> s3 [70, 70] { R4056 += 1 };
  s1 -> s1 [76, 65535] { R4056 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R4056 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R4056 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R4058 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R4057 += 1, R4058 += 1 };
  s0 -> s2 [70, 70] { R4058 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R4058 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R4058 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R4058 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4058 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R4058 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R4058 += 1, R45 += 1 };
  s2 -> s2 [0, 65535] { R4058 += 1, R45 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R4060 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R4059 += 1, R4060 += 1 };
  s0 -> s2 [70, 70] { R4060 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R4060 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R4060 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R4060 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4060 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R4060 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R4060 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R4060 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R4062 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R4061 += 1, R4062 += 1 };
  s0 -> s2 [70, 70] { R4062 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R4062 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R4062 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R4062 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4062 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R4062 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R4062 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4062 += 1, R49 += 1, R50 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R4064 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R4063 += 1, R4064 += 1 };
  s0 -> s2 [70, 70] { R4064 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R4064 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R4064 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R4064 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4064 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R4064 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R4064 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535] { R4064 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R4066 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R4065 += 1, R4066 += 1 };
  s0 -> s2 [70, 70] { R4066 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R4066 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R4066 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R4066 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4066 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R4066 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R4066 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535] { R4066 += 1, R59 += 1, R60 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R4068 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R4067 += 1, R4068 += 1 };
  s0 -> s2 [70, 70] { R4068 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R4068 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R4068 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R4068 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4068 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R4068 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R4068 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535] { R4068 += 1, R65 += 1, R66 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R4070 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R4069 += 1, R4070 += 1 };
  s0 -> s2 [70, 70] { R4070 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R4070 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R4070 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R4070 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4070 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R4070 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R4070 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R4070 += 1, R73 += 1, R74 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R4090 += 1 };
  s0 -> s0 [0, 65535] { R4089 += 1, R4090 += 1 };
  s0 -> s2 [70, 70] { R4090 += 1 };
  s0 -> s1 [71, 65535] { R4090 += 1 };
  s1 -> s1 [0, 69] { R4090 += 1 };
  s1 -> s2 [70, 70] { R4090 += 1 };
  s1 -> s1 [71, 65535] { R4090 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4090 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R4091 += 1, R4092 += 1 };
  s0 -> s1 [0, 65535] { R4092 += 1, R2 += 1 };
  s1 -> s1 [0, 65535] { R4092 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R4094 += 1 };
  s0 -> s0 [0, 65535] { R4093 += 1, R4094 += 1 };
  s0 -> s2 [0, 65535] { R4094 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R4094 += 1 };
  s0 -> s1 [71, 65535] { R4094 += 1 };
  s1 -> s1 [0, 69] { R4094 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R4094 += 1 };
  s1 -> s1 [71, 65535] { R4094 += 1 };
  s2 -> s1 [0, 69] { R4094 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4094 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R4094 += 1 };
  s2 -> s1 [71, 65535] { R4094 += 1 };
  s3 -> s3 [0, 65535] { R4094 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R4096 += 1, R4034 += 1 };
  s0 -> s0 [0, 65535] { R4095 += 1, R4096 += 1 };
  s0 -> s2 [0, 65535] { R4096 += 1, R4033 += 1, R4034 += 1 };
  s0 -> s1 [71, 65535] { R4096 += 1, R4034 += 1 };
  s1 -> s1 [0, 69] { R4096 += 1, R4034 += 1 };
  s1 -> s1 [0, 65535] { R4096 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R4096 += 1, R4034 += 1 };
  s2 -> s1 [0, 69] { R4096 += 1, R4034 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4096 += 1, R4033 += 1, R4034 += 1 };
  s2 -> s1 [71, 65535] { R4096 += 1, R4034 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R4098 += 1, R4035 += 1, R4036 += 1 };
  s0 -> s2 [0, 65535] { R4098 += 1, R4036 += 1, R20 += 1 };
  s0 -> s0 [0, 65535] { R4097 += 1, R4098 += 1 };
  s1 -> s1 [0, 65535] { R4098 += 1, R4035 += 1, R4036 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R4098 += 1, R4036 += 1, R20 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4098 += 1, R4036 += 1, R20 += 1 };
  s2 -> s4 [0, 65535] { R4098 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4098 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R4100 += 1, R4038 += 1 };
  s0 -> s2 [0, 65535] { R4100 += 1, R4037 += 1, R4038 += 1 };
  s0 -> s0 [0, 65535] { R4099 += 1, R4100 += 1 };
  s0 -> s1 [75, 65535] { R4100 += 1, R4038 += 1 };
  s1 -> s1 [0, 70] { R4100 += 1, R4038 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4100 += 1 };
  s1 -> s1 [75, 65535] { R4100 += 1, R4038 += 1 };
  s2 -> s1 [0, 70] { R4100 += 1, R4038 += 1 };
  s2 -> s2 [0, 65535] { R4100 += 1, R4037 += 1, R4038 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R4100 += 1, R4038 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R4101 += 1, R4102 += 1 };
  s0 -> s1 [0, 65535] { R4102 += 1, R4040 += 1, R84 += 1 };
  s0 -> s2 [0, 65535] { R4102 += 1, R4039 += 1, R4040 += 1 };
  s1 -> s1 [0, 65535] { R4102 += 1, R4040 += 1, R84 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R4102 += 1 };
  s2 -> s1 [0, 65535] { R4102 += 1, R4040 += 1, R84 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4102 += 1, R4039 += 1, R4040 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4102 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R4104 += 1, R4042 += 1 };
  s0 -> s2 [0, 65535] { R4104 += 1, R4042 += 1, R86 += 1 };
  s0 -> s0 [0, 65535] { R4103 += 1, R4104 += 1 };
  s0 -> s3 [0, 65535] { R4104 += 1, R4041 += 1, R4042 += 1 };
  s0 -> s1 [76, 65535] { R4104 += 1, R4042 += 1 };
  s1 -> s1 [0, 74] { R4104 += 1, R4042 += 1 };
  s1 -> s1 [0, 65535] { R4104 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [76, 65535] { R4104 += 1, R4042 += 1 };
  s2 -> s1 [0, 74] { R4104 += 1, R4042 += 1 };
  s2 -> s2 [0, 65535] { R4104 += 1, R4042 += 1, R86 += 1 };
  s2 -> s5 [0, 65535] { R4104 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [76, 65535] { R4104 += 1, R4042 += 1 };
  s3 -> s1 [0, 74] { R4104 += 1, R4042 += 1 };
  s3 -> s2 [0, 65535] { R4104 += 1, R4042 += 1, R86 += 1 };
  s3 -> s3 [0, 65535] { R4104 += 1, R4041 += 1, R4042 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [76, 65535] { R4104 += 1, R4042 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4104 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R4106 += 1, R4044 += 1 };
  s0 -> s2 [0, 65535] { R4106 += 1, R4044 += 1, R90 += 1 };
  s0 -> s0 [0, 65535] { R4105 += 1, R4106 += 1 };
  s0 -> s3 [0, 65535] { R4106 += 1, R4043 += 1, R4044 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R4106 += 1, R4044 += 1 };
  s1 -> s5 [0, 65535] { R4106 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R4106 += 1, R4044 += 1 };
  s2 -> s5 [0, 65535] { R4106 += 1 };
  s2 -> s2 [0, 65535] { R4106 += 1, R4044 += 1, R90 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R4106 += 1, R4044 += 1 };
  s3 -> s2 [0, 65535] { R4106 += 1, R4044 += 1, R90 += 1 };
  s3 -> s3 [0, 65535] { R4106 += 1, R4043 += 1, R4044 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4106 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R4108 += 1, R4045 += 1, R4046 += 1 };
  s0 -> s2 [0, 65535] { R4108 += 1, R4046 += 1, R95 += 1, R96 += 1 };
  s0 -> s3 [0, 65535] { R4108 += 1, R4046 += 1, R94 += 1, R95 += 1 };
  s0 -> s0 [0, 65535] { R4107 += 1, R4108 += 1 };
  s1 -> s1 [0, 65535] { R4108 += 1, R4045 += 1, R4046 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R4108 += 1, R4046 += 1, R95 += 1, R96 += 1 };
  s1 -> s3 [0, 65535] { R4108 += 1, R4046 += 1, R94 += 1, R95 += 1 };
  s2 -> s4 [0, 65535] { R4108 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4108 += 1, R4046 += 1, R95 += 1, R96 += 1 };
  s2 -> s6 [0, 65535] { R4108 += 1, R4046 += 1 };
  s3 -> s4 [0, 65535] { R4108 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R4108 += 1, R4046 += 1, R95 += 1, R96 += 1 };
  s3 -> s3 [0, 65535] { R4108 += 1, R4046 += 1, R94 += 1, R95 += 1 };
  s4 -> s4 [0, 65535] { R4108 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R4108 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4108 += 1, R4046 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R4110 += 1, R4048 += 1, R3455 += 1 };
  s0 -> s0 [0, 65535] { R4109 += 1, R4110 += 1 };
  s0 -> s1 [0, 65535] { R4110 += 1, R4048 += 1 };
  s0 -> s2 [0, 65535] { R4110 += 1, R4047 += 1, R4048 += 1 };
  s0 -> s1 [76, 65535] { R4110 += 1, R4048 += 1, R3455 += 1 };
  s1 -> s1 [0, 74] { R4110 += 1, R4048 += 1, R3455 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R4110 += 1 };
  s1 -> s1 [0, 65535] { R4110 += 1, R4048 += 1 };
  s1 -> s1 [76, 65535] { R4110 += 1, R4048 += 1, R3455 += 1 };
  s2 -> s1 [0, 74] { R4110 += 1, R4048 += 1, R3455 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4110 += 1, R4048 += 1 };
  s2 -> s2 [0, 65535] { R4110 += 1, R4047 += 1, R4048 += 1 };
  s2 -> s1 [76, 65535] { R4110 += 1, R4048 += 1, R3455 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4110 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R4112 += 1, R4050 += 1 };
  s0 -> s0 [0, 65535] { R4111 += 1, R4112 += 1 };
  s0 -> s2 [0, 65535] { R4112 += 1, R4050 += 1, R4020 += 1 };
  s0 -> s3 [0, 65535] { R4112 += 1, R4049 += 1, R4050 += 1 };
  s1 -> s1 [0, 65535] { R4112 += 1, R4050 += 1 };
  s1 -> s5 [0, 65535] { R4112 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R4112 += 1, R4050 += 1 };
  s2 -> s5 [0, 65535] { R4112 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4112 += 1, R4050 += 1, R4020 += 1 };
  s3 -> s1 [0, 65535] { R4112 += 1, R4050 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R4112 += 1, R4050 += 1, R4020 += 1 };
  s3 -> s3 [0, 65535] { R4112 += 1, R4049 += 1, R4050 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4112 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R4114 += 1, R4051 += 1, R4052 += 1 };
  s0 -> s2 [0, 65535] { R4114 += 1, R4052 += 1 };
  s0 -> s0 [0, 65535] { R4113 += 1, R4114 += 1 };
  s0 -> s3 [0, 65535] { R4114 += 1, R4052 += 1, R4029 += 1 };
  s1 -> s1 [0, 65535] { R4114 += 1, R4051 += 1, R4052 += 1 };
  s1 -> s2 [0, 65535] { R4114 += 1, R4052 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R4114 += 1, R4052 += 1, R4029 += 1 };
  s2 -> s2 [0, 65535] { R4114 += 1, R4052 += 1 };
  s2 -> s4 [0, 65535] { R4114 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R4114 += 1, R4052 += 1 };
  s3 -> s4 [0, 65535] { R4114 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4114 += 1, R4052 += 1, R4029 += 1 };
  s4 -> s4 [0, 65535] { R4114 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R4115 += 1, R4116 += 1 };
  s0 -> s1 [0, 65535] { R4116 += 1, R4071 += 1, R4072 += 1 };
  s0 -> s2 [0, 65535] { R4116 += 1, R4072 += 1, R21 += 1 };
  s1 -> s1 [0, 65535] { R4116 += 1, R4071 += 1, R4072 += 1 };
  s1 -> s2 [0, 65535] { R4116 += 1, R4072 += 1, R21 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4116 += 1, R4072 += 1, R21 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R4116 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4116 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R4118 += 1, R4074 += 1 };
  s0 -> s0 [0, 65535] { R4117 += 1, R4118 += 1 };
  s0 -> s2 [0, 65535] { R4118 += 1, R4073 += 1, R4074 += 1 };
  s0 -> s3 [70, 70] { R4118 += 1, R4074 += 1 };
  s0 -> s4 [70, 70] { R4118 += 1, R4074 += 1 };
  s0 -> s5 [75, 75] { R4118 += 1, R4074 += 1 };
  s0 -> s1 [76, 65535] { R4118 += 1, R4074 += 1 };
  s1 -> s1 [0, 69] { R4118 += 1, R4074 += 1 };
  s1 -> s3 [70, 70] { R4118 += 1, R4074 += 1 };
  s1 -> s4 [70, 70] { R4118 += 1, R4074 += 1 };
  s1 -> s5 [75, 75] { R4118 += 1, R4074 += 1 };
  s1 -> s1 [76, 65535] { R4118 += 1, R4074 += 1 };
  s2 -> s1 [0, 69] { R4118 += 1, R4074 += 1 };
  s2 -> s2 [0, 65535] { R4118 += 1, R4073 += 1, R4074 += 1 };
  s2 -> s3 [70, 70] { R4118 += 1, R4074 += 1 };
  s2 -> s4 [70, 70] { R4118 += 1, R4074 += 1 };
  s2 -> s5 [75, 75] { R4118 += 1, R4074 += 1 };
  s2 -> s1 [76, 65535] { R4118 += 1, R4074 += 1 };
  s3 -> s3 [0, 70] { R4118 += 1, R4074 += 1 };
  s3 -> s8 [75, 75] { R4118 += 1, R4074 += 1 };
  s3 -> s3 [76, 65535] { R4118 += 1, R4074 += 1 };
  s5 -> s5 [0, 69] { R4118 += 1, R4074 += 1 };
  s5 -> s5 [0, 65535] { R4118 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R4118 += 1, R4074 += 1 };
  s5 -> s8 [70, 70] { R4118 += 1, R4074 += 1 };
  s5 -> s5 [75, 65535] { R4118 += 1, R4074 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4118 += 1 };
  s8 -> s8 [0, 70] { R4118 += 1, R4074 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R4118 += 1 };
  s8 -> s8 [75, 65535] { R4118 += 1, R4074 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R4120 += 1, R4076 += 1, R83 += 1 };
  s0 -> s0 [0, 65535] { R4119 += 1, R4120 += 1 };
  s0 -> s2 [0, 65535] { R4120 += 1, R4075 += 1, R4076 += 1 };
  s0 -> s3 [70, 70] { R4120 += 1, R4076 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R4120 += 1, R4076 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R4120 += 1, R4076 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R4120 += 1, R4076 += 1, R83 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R4120 += 1 };
  s1 -> s3 [70, 70] { R4120 += 1, R4076 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R4120 += 1, R4076 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R4120 += 1, R4076 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R4120 += 1, R4076 += 1, R83 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R4120 += 1, R4075 += 1, R4076 += 1 };
  s2 -> s3 [70, 70] { R4120 += 1, R4076 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R4120 += 1, R4076 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R4120 += 1, R4076 += 1, R83 += 1 };
  s3 -> s3 [0, 65535] { R4120 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R4120 += 1 };
  s4 -> s4 [0, 65535] { R4120 += 1, R4076 += 1, R83 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4120 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R4122 += 1, R4078 += 1, R85 += 1 };
  s0 -> s0 [0, 65535] { R4121 += 1, R4122 += 1 };
  s0 -> s2 [0, 65535] { R4122 += 1, R4077 += 1, R4078 += 1 };
  s0 -> s3 [70, 70] { R4122 += 1, R4078 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R4122 += 1, R4078 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R4122 += 1, R4078 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R4122 += 1, R4078 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R4122 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R4122 += 1, R4078 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R4122 += 1, R4078 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R4122 += 1, R4078 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R4122 += 1, R4078 += 1, R85 += 1 };
  s2 -> s2 [0, 65535] { R4122 += 1, R4077 += 1, R4078 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R4122 += 1, R4078 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R4122 += 1, R4078 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R4122 += 1, R4078 += 1, R85 += 1 };
  s3 -> s3 [0, 65535] { R4122 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4122 += 1, R4078 += 1, R85 += 1 };
  s4 -> s5 [0, 65535] { R4122 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4122 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R4124 += 1, R4080 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R4124 += 1, R4080 += 1, R88 += 1 };
  s0 -> s3 [0, 65535] { R4124 += 1, R4079 += 1, R4080 += 1 };
  s0 -> s0 [0, 65535] { R4123 += 1, R4124 += 1 };
  s0 -> s4 [70, 70] { R4124 += 1, R4080 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R4124 += 1, R4080 += 1, R87 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R4124 += 1, R4080 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R4124 += 1, R4080 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [71, 74] { R4124 += 1, R4080 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R4124 += 1, R4080 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R4124 += 1, R4080 += 1, R88 += 1 };
  s0 -> s2 [76, 65535] { R4124 += 1, R4080 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R4124 += 1, R4080 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [0, 69] { R4124 += 1, R4080 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R4124 += 1, R4080 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R4124 += 1, R4080 += 1, R87 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R4124 += 1, R4080 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R4124 += 1, R4080 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [71, 74] { R4124 += 1, R4080 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R4124 += 1, R4080 += 1, R87 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R4124 += 1, R4080 += 1, R88 += 1 };
  s1 -> s2 [76, 65535] { R4124 += 1, R4080 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R4124 += 1, R4080 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R4124 += 1, R4080 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R4124 += 1, R4080 += 1, R88 += 1 };
  s2 -> s2 [71, 74] { R4124 += 1, R4080 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R4124 += 1, R4080 += 1, R88 += 1 };
  s2 -> s2 [76, 65535] { R4124 += 1, R4080 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R4124 += 1, R4080 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R4124 += 1, R4080 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R4124 += 1, R4079 += 1, R4080 += 1 };
  s3 -> s4 [70, 70] { R4124 += 1, R4080 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R4124 += 1, R4080 += 1, R87 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R4124 += 1, R4080 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R4124 += 1, R4080 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [71, 74] { R4124 += 1, R4080 += 1, R88 += 1 };
  s3 -> s1 [71, 65535] { R4124 += 1, R4080 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R4124 += 1, R4080 += 1, R88 += 1 };
  s3 -> s2 [76, 65535] { R4124 += 1, R4080 += 1, R88 += 1 };
  s5 -> s6 [0, 74] { R4124 += 1, R4080 += 1, R88 += 1 };
  s5 -> s5 [0, 65535] { R4124 += 1, R4080 += 1, R87 += 1, R88 += 1 };
  s5 -> s10 [75, 75] { R4124 += 1, R4080 += 1, R88 += 1 };
  s5 -> s6 [76, 65535] { R4124 += 1, R4080 += 1, R88 += 1 };
  s6 -> s6 [0, 74] { R4124 += 1, R4080 += 1, R88 += 1 };
  s6 -> s10 [75, 75] { R4124 += 1, R4080 += 1, R88 += 1 };
  s6 -> s6 [76, 65535] { R4124 += 1, R4080 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R4124 += 1, R4080 += 1, R88 += 1 };
  s8 -> s8 [0, 65535] { R4124 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R4124 += 1, R4080 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R4124 += 1, R4080 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R4124 += 1, R4080 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R4124 += 1, R4080 += 1, R88 += 1 };
  s10 -> s12 [0, 65535] { R4124 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R4124 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R4124 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R4126 += 1, R4082 += 1, R91 += 1, R92 += 1 };
  s0 -> s2 [0, 65535] { R4126 += 1, R4081 += 1, R4082 += 1 };
  s0 -> s0 [0, 65535] { R4125 += 1, R4126 += 1 };
  s0 -> s3 [70, 70] { R4126 += 1, R4082 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R4126 += 1, R4082 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R4126 += 1, R4082 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R4126 += 1, R4082 += 1, R91 += 1, R92 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4126 += 1 };
  s1 -> s3 [70, 70] { R4126 += 1, R4082 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R4126 += 1, R4082 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R4126 += 1, R4082 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R4126 += 1, R4082 += 1, R91 += 1, R92 += 1 };
  s2 -> s2 [0, 65535] { R4126 += 1, R4081 += 1, R4082 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R4126 += 1, R4082 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R4126 += 1, R4082 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R4126 += 1, R4082 += 1, R91 += 1, R92 += 1 };
  s3 -> s3 [0, 65535] { R4126 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4126 += 1, R4082 += 1, R91 += 1, R92 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4126 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4126 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R4128 += 1, R4084 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s2 [0, 69] { R4128 += 1, R4084 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s3 [0, 69] { R4128 += 1, R4084 += 1, R3452 += 1 };
  s0 -> s4 [0, 65535] { R4128 += 1, R4083 += 1, R4084 += 1 };
  s0 -> s0 [0, 65535] { R4127 += 1, R4128 += 1 };
  s0 -> s5 [70, 70] { R4128 += 1, R4084 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s6 [70, 70] { R4128 += 1, R4084 += 1, R3452 += 1 };
  s0 -> s7 [70, 70] { R4128 += 1, R4084 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s8 [70, 70] { R4128 += 1, R4084 += 1, R3452 += 1 };
  s0 -> s9 [70, 70] { R4128 += 1, R4084 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s10 [70, 70] { R4128 += 1, R4084 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s3 [71, 74] { R4128 += 1, R4084 += 1, R3452 += 1 };
  s0 -> s1 [71, 65535] { R4128 += 1, R4084 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s2 [71, 65535] { R4128 += 1, R4084 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s3 [76, 65535] { R4128 += 1, R4084 += 1, R3452 += 1 };
  s1 -> s1 [0, 69] { R4128 += 1, R4084 += 1, R3452 += 1, R3453 += 1 };
  s1 -> s3 [0, 69] { R4128 += 1, R4084 += 1, R3452 += 1 };
  s1 -> s6 [70, 70] { R4128 += 1, R4084 += 1, R3452 += 1 };
  s1 -> s8 [70, 70] { R4128 += 1, R4084 += 1, R3452 += 1 };
  s1 -> s9 [70, 70] { R4128 += 1, R4084 += 1, R3452 += 1, R3453 += 1 };
  s1 -> s10 [70, 70] { R4128 += 1, R4084 += 1, R3452 += 1, R3453 += 1 };
  s1 -> s3 [71, 74] { R4128 += 1, R4084 += 1, R3452 += 1 };
  s1 -> s1 [71, 65535] { R4128 += 1, R4084 += 1, R3452 += 1, R3453 += 1 };
  s1 -> s3 [76, 65535] { R4128 += 1, R4084 += 1, R3452 += 1 };
  s2 -> s1 [0, 69] { R4128 += 1, R4084 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s2 [0, 69] { R4128 += 1, R4084 += 1, R3451 += 1, R3452 += 1 };
  s2 -> s3 [0, 69] { R4128 += 1, R4084 += 1, R3452 += 1 };
  s2 -> s5 [70, 70] { R4128 += 1, R4084 += 1, R3451 += 1, R3452 += 1 };
  s2 -> s6 [70, 70] { R4128 += 1, R4084 += 1, R3452 += 1 };
  s2 -> s7 [70, 70] { R4128 += 1, R4084 += 1, R3451 += 1, R3452 += 1 };
  s2 -> s8 [70, 70] { R4128 += 1, R4084 += 1, R3452 += 1 };
  s2 -> s9 [70, 70] { R4128 += 1, R4084 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s10 [70, 70] { R4128 += 1, R4084 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s3 [71, 74] { R4128 += 1, R4084 += 1, R3452 += 1 };
  s2 -> s1 [71, 65535] { R4128 += 1, R4084 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s2 [71, 65535] { R4128 += 1, R4084 += 1, R3451 += 1, R3452 += 1 };
  s2 -> s3 [76, 65535] { R4128 += 1, R4084 += 1, R3452 += 1 };
  s3 -> s3 [0, 69] { R4128 += 1, R4084 += 1, R3452 += 1 };
  s3 -> s11 [0, 65535];
  s3 -> s3 [0, 65535] { R4128 += 1 };
  s3 -> s6 [70, 70] { R4128 += 1, R4084 += 1 };
  s3 -> s8 [70, 70] { R4128 += 1, R4084 += 1 };
  s3 -> s3 [71, 74] { R4128 += 1, R4084 += 1, R3452 += 1 };
  s3 -> s3 [71, 65535] { R4128 += 1, R4084 += 1 };
  s3 -> s3 [76, 65535] { R4128 += 1, R4084 += 1, R3452 += 1 };
  s4 -> s1 [0, 69] { R4128 += 1, R4084 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s2 [0, 69] { R4128 += 1, R4084 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s3 [0, 69] { R4128 += 1, R4084 += 1, R3452 += 1 };
  s4 -> s4 [0, 65535] { R4128 += 1, R4083 += 1, R4084 += 1 };
  s4 -> s5 [70, 70] { R4128 += 1, R4084 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s6 [70, 70] { R4128 += 1, R4084 += 1, R3452 += 1 };
  s4 -> s7 [70, 70] { R4128 += 1, R4084 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s8 [70, 70] { R4128 += 1, R4084 += 1, R3452 += 1 };
  s4 -> s9 [70, 70] { R4128 += 1, R4084 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s10 [70, 70] { R4128 += 1, R4084 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s3 [71, 74] { R4128 += 1, R4084 += 1, R3452 += 1 };
  s4 -> s1 [71, 65535] { R4128 += 1, R4084 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s2 [71, 65535] { R4128 += 1, R4084 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s3 [76, 65535] { R4128 += 1, R4084 += 1, R3452 += 1 };
  s6 -> s6 [0, 74] { R4128 += 1, R4084 += 1, R3452 += 1 };
  s6 -> s6 [0, 65535] { R4128 += 1, R4084 += 1 };
  s6 -> s11 [0, 65535];
  s6 -> s12 [0, 65535] { R4128 += 1 };
  s6 -> s6 [76, 65535] { R4128 += 1, R4084 += 1, R3452 += 1 };
  s7 -> s6 [0, 74] { R4128 += 1, R4084 += 1, R3452 += 1 };
  s7 -> s7 [0, 65535] { R4128 += 1, R4084 += 1, R3451 += 1, R3452 += 1 };
  s7 -> s10 [0, 65535] { R4128 += 1, R4084 += 1, R3452 += 1, R3453 += 1 };
  s7 -> s6 [76, 65535] { R4128 += 1, R4084 += 1, R3452 += 1 };
  s8 -> s11 [0, 65535];
  s8 -> s8 [0, 65535] { R4128 += 1 };
  s10 -> s6 [0, 74] { R4128 += 1, R4084 += 1, R3452 += 1 };
  s10 -> s10 [0, 65535] { R4128 += 1, R4084 += 1, R3452 += 1, R3453 += 1 };
  s10 -> s6 [76, 65535] { R4128 += 1, R4084 += 1, R3452 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R4128 += 1 };
  accepting s3, s12, s8, s6, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R4130 += 1, R4086 += 1, R4015 += 1, R4016 += 1 };
  s0 -> s2 [0, 69] { R4130 += 1, R4086 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s0 -> s3 [0, 69] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s0 -> s4 [0, 65535] { R4130 += 1, R4085 += 1, R4086 += 1 };
  s0 -> s0 [0, 65535] { R4129 += 1, R4130 += 1 };
  s0 -> s5 [70, 70] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s0 -> s6 [70, 70] { R4130 += 1, R4086 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s0 -> s7 [70, 70] { R4130 += 1, R4086 += 1, R4015 += 1, R4016 += 1 };
  s0 -> s8 [70, 70] { R4130 += 1, R4086 += 1, R4015 += 1, R4016 += 1 };
  s0 -> s9 [70, 70] { R4130 += 1, R4086 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s0 -> s10 [70, 70] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s0 -> s3 [71, 74] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s0 -> s1 [71, 65535] { R4130 += 1, R4086 += 1, R4015 += 1, R4016 += 1 };
  s0 -> s2 [71, 65535] { R4130 += 1, R4086 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s0 -> s11 [75, 75] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s0 -> s3 [76, 65535] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s1 -> s1 [0, 69] { R4130 += 1, R4086 += 1, R4015 += 1, R4016 += 1 };
  s1 -> s2 [0, 69] { R4130 += 1, R4086 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s1 -> s3 [0, 69] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s1 -> s5 [70, 70] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s1 -> s6 [70, 70] { R4130 += 1, R4086 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s1 -> s7 [70, 70] { R4130 += 1, R4086 += 1, R4015 += 1, R4016 += 1 };
  s1 -> s8 [70, 70] { R4130 += 1, R4086 += 1, R4015 += 1, R4016 += 1 };
  s1 -> s9 [70, 70] { R4130 += 1, R4086 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s1 -> s10 [70, 70] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s1 -> s3 [71, 74] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s1 -> s1 [71, 65535] { R4130 += 1, R4086 += 1, R4015 += 1, R4016 += 1 };
  s1 -> s2 [71, 65535] { R4130 += 1, R4086 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s1 -> s11 [75, 75] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s1 -> s3 [76, 65535] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s2 -> s2 [0, 69] { R4130 += 1, R4086 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s2 -> s3 [0, 69] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s2 -> s5 [70, 70] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s2 -> s6 [70, 70] { R4130 += 1, R4086 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s2 -> s9 [70, 70] { R4130 += 1, R4086 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s2 -> s10 [70, 70] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s2 -> s3 [71, 74] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s2 -> s2 [71, 65535] { R4130 += 1, R4086 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s2 -> s11 [75, 75] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s2 -> s3 [76, 65535] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s3 -> s3 [0, 69] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s3 -> s5 [70, 70] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s3 -> s10 [70, 70] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s3 -> s3 [71, 74] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s3 -> s11 [75, 75] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s3 -> s3 [76, 65535] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s4 -> s1 [0, 69] { R4130 += 1, R4086 += 1, R4015 += 1, R4016 += 1 };
  s4 -> s2 [0, 69] { R4130 += 1, R4086 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s4 -> s3 [0, 69] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s4 -> s4 [0, 65535] { R4130 += 1, R4085 += 1, R4086 += 1 };
  s4 -> s5 [70, 70] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s4 -> s6 [70, 70] { R4130 += 1, R4086 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s4 -> s7 [70, 70] { R4130 += 1, R4086 += 1, R4015 += 1, R4016 += 1 };
  s4 -> s8 [70, 70] { R4130 += 1, R4086 += 1, R4015 += 1, R4016 += 1 };
  s4 -> s9 [70, 70] { R4130 += 1, R4086 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s4 -> s10 [70, 70] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s4 -> s3 [71, 74] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s4 -> s1 [71, 65535] { R4130 += 1, R4086 += 1, R4015 += 1, R4016 += 1 };
  s4 -> s2 [71, 65535] { R4130 += 1, R4086 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s4 -> s11 [75, 75] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s4 -> s3 [76, 65535] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s5 -> s5 [0, 74] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s5 -> s14 [75, 75] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s5 -> s5 [76, 65535] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s6 -> s5 [0, 74] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s6 -> s6 [0, 65535] { R4130 += 1, R4086 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s6 -> s14 [75, 75] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s6 -> s5 [76, 65535] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s8 -> s5 [0, 74] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s8 -> s6 [0, 65535] { R4130 += 1, R4086 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s8 -> s8 [0, 65535] { R4130 += 1, R4086 += 1, R4015 += 1, R4016 += 1 };
  s8 -> s14 [75, 75] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s8 -> s5 [76, 65535] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s11 -> s12 [0, 69] { R4130 += 1, R4086 += 1, R4016 += 1 };
  s11 -> s11 [0, 69] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s11 -> s13 [70, 70] { R4130 += 1, R4086 += 1, R4016 += 1 };
  s11 -> s14 [70, 70] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s11 -> s15 [70, 70] { R4130 += 1, R4086 += 1, R4016 += 1 };
  s11 -> s16 [70, 70] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s11 -> s12 [71, 65535] { R4130 += 1, R4086 += 1, R4016 += 1 };
  s11 -> s11 [71, 65535] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s12 -> s12 [0, 69] { R4130 += 1, R4086 += 1, R4016 += 1 };
  s12 -> s12 [0, 65535] { R4130 += 1 };
  s12 -> s17 [0, 65535];
  s12 -> s15 [70, 70] { R4130 += 1, R4086 += 1, R4016 += 1 };
  s12 -> s13 [70, 70] { R4130 += 1, R4086 += 1, R4016 += 1 };
  s12 -> s12 [71, 65535] { R4130 += 1, R4086 += 1, R4016 += 1 };
  s13 -> s17 [0, 65535];
  s13 -> s13 [0, 65535] { R4130 += 1 };
  s14 -> s14 [0, 65535] { R4130 += 1, R4086 += 1, R4016 += 1, R4018 += 1 };
  s14 -> s15 [0, 65535] { R4130 += 1, R4086 += 1, R4016 += 1 };
  s15 -> s17 [0, 65535];
  s15 -> s15 [0, 65535] { R4130 += 1, R4086 += 1, R4016 += 1 };
  s15 -> s18 [0, 65535] { R4130 += 1 };
  s17 -> s17 [0, 65535];
  s18 -> s17 [0, 65535];
  s18 -> s18 [0, 65535] { R4130 += 1 };
  accepting s17, s12, s13, s18, s15;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R4132 += 1, R4088 += 1, R4023 += 1, R4024 += 1 };
  s0 -> s2 [0, 69] { R4132 += 1, R4088 += 1, R4024 += 1, R4026 += 1, R4027 += 1 };
  s0 -> s3 [0, 69] { R4132 += 1, R4088 += 1, R4024 += 1, R4025 += 1, R4026 += 1 };
  s0 -> s0 [0, 65535] { R4131 += 1, R4132 += 1 };
  s0 -> s4 [0, 65535] { R4132 += 1, R4087 += 1, R4088 += 1 };
  s0 -> s5 [70, 70] { R4132 += 1, R4088 += 1, R4023 += 1, R4024 += 1 };
  s0 -> s6 [70, 70] { R4132 += 1, R4088 += 1, R4024 += 1, R4026 += 1, R4027 += 1 };
  s0 -> s7 [70, 70] { R4132 += 1, R4088 += 1, R4024 += 1, R4026 += 1, R4027 += 1 };
  s0 -> s8 [70, 70] { R4132 += 1, R4088 += 1, R4024 += 1, R4025 += 1, R4026 += 1 };
  s0 -> s9 [70, 70] { R4132 += 1, R4088 += 1, R4024 += 1, R4025 += 1, R4026 += 1 };
  s0 -> s10 [70, 70] { R4132 += 1, R4088 += 1, R4023 += 1, R4024 += 1 };
  s0 -> s1 [71, 65535] { R4132 += 1, R4088 += 1, R4023 += 1, R4024 += 1 };
  s0 -> s2 [71, 65535] { R4132 += 1, R4088 += 1, R4024 += 1, R4026 += 1, R4027 += 1 };
  s0 -> s3 [71, 65535] { R4132 += 1, R4088 += 1, R4024 += 1, R4025 += 1, R4026 += 1 };
  s1 -> s1 [0, 69] { R4132 += 1, R4088 += 1, R4023 += 1, R4024 += 1 };
  s1 -> s2 [0, 69] { R4132 += 1, R4088 += 1, R4024 += 1, R4026 += 1, R4027 += 1 };
  s1 -> s3 [0, 69] { R4132 += 1, R4088 += 1, R4024 += 1, R4025 += 1, R4026 += 1 };
  s1 -> s5 [70, 70] { R4132 += 1, R4088 += 1, R4023 += 1, R4024 += 1 };
  s1 -> s6 [70, 70] { R4132 += 1, R4088 += 1, R4024 += 1, R4026 += 1, R4027 += 1 };
  s1 -> s7 [70, 70] { R4132 += 1, R4088 += 1, R4024 += 1, R4026 += 1, R4027 += 1 };
  s1 -> s8 [70, 70] { R4132 += 1, R4088 += 1, R4024 += 1, R4025 += 1, R4026 += 1 };
  s1 -> s9 [70, 70] { R4132 += 1, R4088 += 1, R4024 += 1, R4025 += 1, R4026 += 1 };
  s1 -> s10 [70, 70] { R4132 += 1, R4088 += 1, R4023 += 1, R4024 += 1 };
  s1 -> s1 [71, 65535] { R4132 += 1, R4088 += 1, R4023 += 1, R4024 += 1 };
  s1 -> s2 [71, 65535] { R4132 += 1, R4088 += 1, R4024 += 1, R4026 += 1, R4027 += 1 };
  s1 -> s3 [71, 65535] { R4132 += 1, R4088 += 1, R4024 += 1, R4025 += 1, R4026 += 1 };
  s2 -> s2 [0, 69] { R4132 += 1, R4088 += 1, R4024 += 1, R4026 += 1, R4027 += 1 };
  s2 -> s14 [0, 69] { R4132 += 1, R4088 += 1, R4024 += 1 };
  s2 -> s15 [70, 70] { R4132 += 1, R4088 += 1, R4024 += 1 };
  s2 -> s6 [70, 70] { R4132 += 1, R4088 += 1, R4024 += 1, R4026 += 1, R4027 += 1 };
  s2 -> s11 [70, 70] { R4132 += 1, R4088 += 1, R4024 += 1 };
  s2 -> s7 [70, 70] { R4132 += 1, R4088 += 1, R4024 += 1, R4026 += 1, R4027 += 1 };
  s2 -> s2 [71, 65535] { R4132 += 1, R4088 += 1, R4024 += 1, R4026 += 1, R4027 += 1 };
  s2 -> s14 [71, 65535] { R4132 += 1, R4088 += 1, R4024 += 1 };
  s3 -> s2 [0, 69] { R4132 += 1, R4088 += 1, R4024 += 1, R4026 += 1, R4027 += 1 };
  s3 -> s3 [0, 69] { R4132 += 1, R4088 += 1, R4024 += 1, R4025 += 1, R4026 += 1 };
  s3 -> s6 [70, 70] { R4132 += 1, R4088 += 1, R4024 += 1, R4026 += 1, R4027 += 1 };
  s3 -> s7 [70, 70] { R4132 += 1, R4088 += 1, R4024 += 1, R4026 += 1, R4027 += 1 };
  s3 -> s8 [70, 70] { R4132 += 1, R4088 += 1, R4024 += 1, R4025 += 1, R4026 += 1 };
  s3 -> s9 [70, 70] { R4132 += 1, R4088 += 1, R4024 += 1, R4025 += 1, R4026 += 1 };
  s3 -> s2 [71, 65535] { R4132 += 1, R4088 += 1, R4024 += 1, R4026 += 1, R4027 += 1 };
  s3 -> s3 [71, 65535] { R4132 += 1, R4088 += 1, R4024 += 1, R4025 += 1, R4026 += 1 };
  s4 -> s1 [0, 69] { R4132 += 1, R4088 += 1, R4023 += 1, R4024 += 1 };
  s4 -> s2 [0, 69] { R4132 += 1, R4088 += 1, R4024 += 1, R4026 += 1, R4027 += 1 };
  s4 -> s3 [0, 69] { R4132 += 1, R4088 += 1, R4024 += 1, R4025 += 1, R4026 += 1 };
  s4 -> s4 [0, 65535] { R4132 += 1, R4087 += 1, R4088 += 1 };
  s4 -> s5 [70, 70] { R4132 += 1, R4088 += 1, R4023 += 1, R4024 += 1 };
  s4 -> s6 [70, 70] { R4132 += 1, R4088 += 1, R4024 += 1, R4026 += 1, R4027 += 1 };
  s4 -> s7 [70, 70] { R4132 += 1, R4088 += 1, R4024 += 1, R4026 += 1, R4027 += 1 };
  s4 -> s8 [70, 70] { R4132 += 1, R4088 += 1, R4024 += 1, R4025 += 1, R4026 += 1 };
  s4 -> s9 [70, 70] { R4132 += 1, R4088 += 1, R4024 += 1, R4025 += 1, R4026 += 1 };
  s4 -> s10 [70, 70] { R4132 += 1, R4088 += 1, R4023 += 1, R4024 += 1 };
  s4 -> s1 [71, 65535] { R4132 += 1, R4088 += 1, R4023 += 1, R4024 += 1 };
  s4 -> s2 [71, 65535] { R4132 += 1, R4088 += 1, R4024 += 1, R4026 += 1, R4027 += 1 };
  s4 -> s3 [71, 65535] { R4132 += 1, R4088 += 1, R4024 += 1, R4025 += 1, R4026 += 1 };
  s6 -> s11 [0, 65535] { R4132 += 1, R4088 += 1, R4024 += 1 };
  s6 -> s6 [0, 65535] { R4132 += 1, R4088 += 1, R4024 += 1, R4026 += 1, R4027 += 1 };
  s8 -> s6 [0, 65535] { R4132 += 1, R4088 += 1, R4024 += 1, R4026 += 1, R4027 += 1 };
  s8 -> s8 [0, 65535] { R4132 += 1, R4088 += 1, R4024 += 1, R4025 += 1, R4026 += 1 };
  s10 -> s6 [0, 65535] { R4132 += 1, R4088 += 1, R4024 += 1, R4026 += 1, R4027 += 1 };
  s10 -> s8 [0, 65535] { R4132 += 1, R4088 += 1, R4024 += 1, R4025 += 1, R4026 += 1 };
  s10 -> s10 [0, 65535] { R4132 += 1, R4088 += 1, R4023 += 1, R4024 += 1 };
  s11 -> s11 [0, 65535] { R4132 += 1, R4088 += 1, R4024 += 1 };
  s11 -> s12 [0, 65535] { R4132 += 1 };
  s11 -> s13 [0, 65535];
  s12 -> s12 [0, 65535] { R4132 += 1 };
  s12 -> s13 [0, 65535];
  s13 -> s13 [0, 65535];
  s14 -> s14 [0, 69] { R4132 += 1, R4088 += 1, R4024 += 1 };
  s14 -> s13 [0, 65535];
  s14 -> s14 [0, 65535] { R4132 += 1 };
  s14 -> s15 [70, 70] { R4132 += 1, R4088 += 1, R4024 += 1 };
  s14 -> s11 [70, 70] { R4132 += 1, R4088 += 1, R4024 += 1 };
  s14 -> s14 [71, 65535] { R4132 += 1, R4088 += 1, R4024 += 1 };
  s15 -> s15 [0, 65535] { R4132 += 1 };
  s15 -> s13 [0, 65535];
  accepting s12, s13, s14, s15, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R4132 && R23 - R4132 = -1 && R24 = R4132 && R25 - R4132 = -1 && R26 = R4132 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R4020 + -1*R4016 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R4020 + -1*R4016 - R66 = 0 && R55 + R96 + R93 + -1*R4022 + -1*R4018 - R68 = 0 && R65 + R4019 + R4015 = 0 && R67 + R4021 + R4017 = 0 && R4073 = 0 && R4074 = 0 && R4079 = 0 && R4080 = 0 && R4083 = 0 && R4084 = 0 && R4085 = 0 && R4086 = 0 && R4087 = 0 && R4088 = 0 && R4089 = 0 && R4090 = R4132 && R4091 = 0 && R4092 = R4132 && R4093 = 0 && R4094 = R4132 && R4095 = 0 && R4096 = R4132 && R4097 = 0 && R4098 = R4132 && R4099 = 0 && R4100 = R4132 && R4101 = 0 && R4102 = R4132 && R4103 = 0 && R4104 = R4132 && R4105 = 0 && R4106 = R4132 && R4107 = 0 && R4108 = R4132 && R4109 = 0 && R4110 = R4132 && R4111 = 0 && R4112 = R4132 && R4113 = 0 && R4114 = R4132 && R4115 = 0 && R4116 = R4132 && R4117 = 0 && R4118 = R4132 && R4119 = 0 && R4120 = R4132 && R4121 = 0 && R4122 = R4132 && R4123 = 0 && R4124 = R4132 && R4125 = 0 && R4126 = R4132 && R4127 = 0 && R4128 = R4132 && R4129 = 0 && R4130 = R4132 && R4131 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R3456 + R3453 < 1 && -1*R4020 + -1*R4016 - R66 < 1 && -1*R4022 + -1*R4018 - R68 < 1 && 0 < R4132 && (R2 != 0 || R20 = 0 || (R4033 = 0 && R4034 = 0)) && (R2 != 0 || R20 = 0 || (R4035 = 0 && R4036 = 0)) && (R2 != 0 || R20 = 0 || (R4037 = 0 && R4038 = 0)) && (R2 != 0 || R20 = 0 || (R4039 = 0 && R4040 = 0)) && (R2 != 0 || R20 = 0 || (R4041 = 0 && R4042 = 0)) && (R2 != 0 || R20 = 0 || (R4043 = 0 && R4044 = 0)) && (R2 != 0 || R20 = 0 || (R4045 = 0 && R4046 = 0)) && (R2 != 0 || R20 = 0 || (R4047 = 0 && R4048 = 0)) && (R2 != 0 || R20 = 0 || (R4049 = 0 && R4050 = 0)) && (R2 != 0 || R20 = 0 || (R4051 = 0 && R4052 = 0)) && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R4020 + -1*R4016 - R66 = 0 || R66 + R4020 + R4016 < 1) && (R59 + R3454 + R3451 != 0 || R60 + R3455 + R3452 + -1*R4020 + -1*R4016 - R66 = 0 || R66 + R4020 + R4016 < 1) && (R66 + R4020 + R4016 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R4022 + R4018 < 1) && (R53 + R94 + R91 = 0 || R68 + R4022 + R4018 < 1))) && (R66 + R4020 + R4016 != 0 || ((R59 + R3454 + R3451 != 0 || R60 + R3455 + R3452 = 0 || R68 + R4022 + R4018 < 1) && (R59 + R3454 + R3451 = 0 || R68 + R4022 + R4018 < 1))) && (R66 + R4020 + R4016 != 0 || ((R73 + R4028 + R4023 != 0 || R74 + R4029 + R4024 = 0 || R68 + R4022 + R4018 < 1) && (R73 + R4028 + R4023 = 0 || R68 + R4022 + R4018 < 1))) && (R68 + R4022 + R4018 != 0 || R77 + R4032 + R4027 = 0 || (R75 + R4030 + R4025 = 0 && R76 + R4031 + R4026 = 0)) && (R73 + R4028 + R4023 != 0 || R66 + R4020 + R4016 + -1*R4029 + -1*R4024 - R74 = 0 || R66 + R4020 + R4016 < 1) && (R75 + R4030 + R4025 != 0 || R68 + R4022 + R4018 + -1*R4031 + -1*R4026 - R76 = 0 || R68 + R4022 + R4018 < 1) && (R4033 != 0 || R2 = R4034 || R2 < 1) && (R4035 != 0 || R2 = R4036 || R2 < 1) && (R4037 != 0 || R2 = R4038 || R2 < 1) && (R4039 != 0 || R2 = R4040 || R2 < 1) && (R4041 != 0 || R2 = R4042 || R2 < 1) && (R4043 != 0 || R2 = R4044 || R2 < 1) && (R4045 != 0 || R2 = R4046 || R2 < 1) && (R4047 != 0 || R2 = R4048 || R2 < 1) && (R4049 != 0 || R2 = R4050 || R2 < 1) && (R4051 != 0 || R2 = R4052 || R2 < 1) && (R21 = 0 || (R4071 = 0 && R4072 = 0)) && (R21 = 0 || (R4075 = 0 && R4076 = 0)) && (R21 = 0 || (R4077 = 0 && R4078 = 0)) && (R21 = 0 || (R4081 = 0 && R4082 = 0)) && (R22 = 0 || (R4053 = 0 && R4054 = 0)) && (R22 = 0 || (R4055 = 0 && R4056 = 0)) && (R22 = 0 || (R4057 = 0 && R4058 = 0)) && (R22 = 0 || (R4059 = 0 && R4060 = 0)) && (R22 = 0 || (R4061 = 0 && R4062 = 0)) && (R22 = 0 || (R4063 = 0 && R4064 = 0)) && (R22 = 0 || (R4065 = 0 && R4066 = 0)) && (R22 = 0 || (R4067 = 0 && R4068 = 0)) && (R22 = 0 || (R4069 = 0 && R4070 = 0)) && (R53 + R94 + R91 = 0 || R66 + R4020 + R4016 < 1) && (R59 + R3454 + R3451 = 0 || R66 + R4020 + R4016 < 1) && (R73 + R4028 + R4023 = 0 || R66 + R4020 + R4016 < 1) && (R75 + R4030 + R4025 = 0 || R68 + R4022 + R4018 < 1) && (R4033 = 0 || R2 < 1) && (R4035 = 0 || R2 < 1) && (R4037 = 0 || R2 < 1) && (R4039 = 0 || R2 < 1) && (R4041 = 0 || R2 < 1) && (R4043 = 0 || R2 < 1) && (R4045 = 0 || R2 < 1) && (R4047 = 0 || R2 < 1) && (R4049 = 0 || R2 < 1) && (R4051 = 0 || R2 < 1);
// End of Parikh automata intersection problem
