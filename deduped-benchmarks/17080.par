// Parikh automata intersection problem, generated by OSTRICH+
counter int R12, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R3451, R3452, R3453, R3454, R3455, R3456, R3457, R3458, R3459, R3460, R3461, R3462, R3463, R3464, R3905, R3906, R3907, R3908, R3909, R3910, R3911, R3912, R3913, R3914, R3915, R3916, R3917, R3918, R3919, R3920, R3921, R3922, R3923, R3924, R3925, R3926, R3927, R3928, R3929, R3930, R3931, R3932, R3933, R3934, R3935, R3936, R3937, R3938, R3939, R3940, R3941, R3942, R3943, R3944, R3945, R3946, R3947, R3948, R3949, R3950, R3951, R3952, R3953, R3954, R3955, R3956, R3957, R3958, R3959, R3960, R3961, R3962, R3963, R3964, R3965, R3966, R3967, R3968, R3969, R3970, R3971, R3972, R3973, R3974, R3975, R3976, R3977, R3978, R3979, R3980, R3981, R3982, R3983, R3984, R3985, R3986, R3987, R3988, R3989, R3990, R3991, R3992, R3993, R3994, R3995, R3996, R3997, R3998, R3999, R4, R4000, R4001, R4002, R4003, R4004, R4005, R4006, R4007, R4008, R4009, R4010, R4011, R4012, R4013, R4014, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R3935 += 1, R3936 += 1 };
  s0 -> s1 [0, 65535] { R3936 += 1, R22 += 1 };
  s1 -> s1 [0, 65535] { R3936 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R3938 += 1 };
  s0 -> s0 [0, 65535] { R3937 += 1, R3938 += 1 };
  s0 -> s2 [70, 70] { R3938 += 1 };
  s0 -> s3 [70, 70] { R3938 += 1 };
  s0 -> s1 [76, 65535] { R3938 += 1 };
  s1 -> s1 [0, 69] { R3938 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3938 += 1 };
  s1 -> s3 [70, 70] { R3938 += 1 };
  s1 -> s1 [76, 65535] { R3938 += 1 };
  s2 -> s2 [0, 70] { R3938 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R3938 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R3940 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R3939 += 1, R3940 += 1 };
  s0 -> s2 [70, 70] { R3940 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R3940 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R3940 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R3940 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3940 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R3940 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R3940 += 1, R45 += 1 };
  s2 -> s2 [0, 65535] { R3940 += 1, R45 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R3942 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R3941 += 1, R3942 += 1 };
  s0 -> s2 [70, 70] { R3942 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R3942 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R3942 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R3942 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3942 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R3942 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R3942 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R3942 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R3944 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R3943 += 1, R3944 += 1 };
  s0 -> s2 [70, 70] { R3944 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R3944 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R3944 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R3944 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3944 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R3944 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R3944 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3944 += 1, R49 += 1, R50 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R3946 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R3945 += 1, R3946 += 1 };
  s0 -> s2 [70, 70] { R3946 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R3946 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R3946 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R3946 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3946 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R3946 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R3946 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535] { R3946 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R3948 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R3947 += 1, R3948 += 1 };
  s0 -> s2 [70, 70] { R3948 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R3948 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R3948 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R3948 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3948 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R3948 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R3948 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535] { R3948 += 1, R59 += 1, R60 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R3950 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R3949 += 1, R3950 += 1 };
  s0 -> s2 [70, 70] { R3950 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R3950 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R3950 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R3950 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3950 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R3950 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R3950 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R3950 += 1, R65 += 1, R66 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R3952 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R3951 += 1, R3952 += 1 };
  s0 -> s2 [70, 70] { R3952 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R3952 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R3952 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R3952 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3952 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R3952 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R3952 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R3952 += 1, R73 += 1, R74 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R3972 += 1 };
  s0 -> s0 [0, 65535] { R3971 += 1, R3972 += 1 };
  s0 -> s2 [70, 70] { R3972 += 1 };
  s0 -> s1 [71, 65535] { R3972 += 1 };
  s1 -> s1 [0, 69] { R3972 += 1 };
  s1 -> s2 [70, 70] { R3972 += 1 };
  s1 -> s1 [71, 65535] { R3972 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R3972 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R3973 += 1, R3974 += 1 };
  s0 -> s1 [0, 65535] { R3974 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R3974 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R3976 += 1 };
  s0 -> s2 [0, 65535] { R3976 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R3975 += 1, R3976 += 1 };
  s0 -> s3 [70, 70] { R3976 += 1 };
  s0 -> s1 [71, 65535] { R3976 += 1 };
  s1 -> s1 [0, 69] { R3976 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R3976 += 1 };
  s1 -> s1 [71, 65535] { R3976 += 1 };
  s2 -> s1 [0, 69] { R3976 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3976 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R3976 += 1 };
  s2 -> s1 [71, 65535] { R3976 += 1 };
  s3 -> s3 [0, 65535] { R3976 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R3978 += 1, R3916 += 1 };
  s0 -> s0 [0, 65535] { R3977 += 1, R3978 += 1 };
  s0 -> s2 [0, 65535] { R3978 += 1, R3915 += 1, R3916 += 1 };
  s0 -> s1 [71, 65535] { R3978 += 1, R3916 += 1 };
  s1 -> s1 [0, 69] { R3978 += 1, R3916 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3978 += 1 };
  s1 -> s1 [71, 65535] { R3978 += 1, R3916 += 1 };
  s2 -> s1 [0, 69] { R3978 += 1, R3916 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R3978 += 1, R3915 += 1, R3916 += 1 };
  s2 -> s1 [71, 65535] { R3978 += 1, R3916 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s0 [0, 65535] { R3979 += 1, R3980 += 1 };
  s0 -> s1 [0, 65535] { R3980 += 1, R3918 += 1, R20 += 1 };
  s0 -> s2 [0, 65535] { R3980 += 1, R3917 += 1, R3918 += 1 };
  s1 -> s4 [0, 65535] { R3980 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3980 += 1, R3918 += 1, R20 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R3980 += 1, R3918 += 1, R20 += 1 };
  s2 -> s2 [0, 65535] { R3980 += 1, R3917 += 1, R3918 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3980 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R3982 += 1, R3920 += 1 };
  s0 -> s2 [0, 65535] { R3982 += 1, R3919 += 1, R3920 += 1 };
  s0 -> s0 [0, 65535] { R3981 += 1, R3982 += 1 };
  s0 -> s1 [75, 65535] { R3982 += 1, R3920 += 1 };
  s1 -> s1 [0, 70] { R3982 += 1, R3920 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3982 += 1 };
  s1 -> s1 [75, 65535] { R3982 += 1, R3920 += 1 };
  s2 -> s1 [0, 70] { R3982 += 1, R3920 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R3982 += 1, R3919 += 1, R3920 += 1 };
  s2 -> s1 [75, 65535] { R3982 += 1, R3920 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R3983 += 1, R3984 += 1 };
  s0 -> s1 [0, 65535] { R3984 += 1, R3921 += 1, R3922 += 1 };
  s0 -> s2 [0, 65535] { R3984 += 1, R3922 += 1, R84 += 1 };
  s1 -> s1 [0, 65535] { R3984 += 1, R3921 += 1, R3922 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R3984 += 1, R3922 += 1, R84 += 1 };
  s2 -> s3 [0, 65535] { R3984 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3984 += 1, R3922 += 1, R84 += 1 };
  s3 -> s3 [0, 65535] { R3984 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R3986 += 1, R3924 += 1 };
  s0 -> s2 [0, 65535] { R3986 += 1, R3923 += 1, R3924 += 1 };
  s0 -> s0 [0, 65535] { R3985 += 1, R3986 += 1 };
  s0 -> s3 [0, 65535] { R3986 += 1, R3924 += 1, R86 += 1 };
  s0 -> s1 [76, 65535] { R3986 += 1, R3924 += 1 };
  s1 -> s1 [0, 74] { R3986 += 1, R3924 += 1 };
  s1 -> s1 [0, 65535] { R3986 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R3986 += 1, R3924 += 1 };
  s2 -> s1 [0, 74] { R3986 += 1, R3924 += 1 };
  s2 -> s2 [0, 65535] { R3986 += 1, R3923 += 1, R3924 += 1 };
  s2 -> s3 [0, 65535] { R3986 += 1, R3924 += 1, R86 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [76, 65535] { R3986 += 1, R3924 += 1 };
  s3 -> s1 [0, 74] { R3986 += 1, R3924 += 1 };
  s3 -> s3 [0, 65535] { R3986 += 1, R3924 += 1, R86 += 1 };
  s3 -> s4 [0, 65535] { R3986 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [76, 65535] { R3986 += 1, R3924 += 1 };
  s4 -> s4 [0, 65535] { R3986 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R3988 += 1, R3926 += 1, R90 += 1 };
  s0 -> s0 [0, 65535] { R3987 += 1, R3988 += 1 };
  s0 -> s2 [0, 65535] { R3988 += 1, R3925 += 1, R3926 += 1 };
  s0 -> s3 [0, 65535] { R3988 += 1, R3926 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R3988 += 1, R3926 += 1, R90 += 1 };
  s1 -> s3 [0, 65535] { R3988 += 1, R3926 += 1 };
  s1 -> s5 [0, 65535] { R3988 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R3988 += 1, R3926 += 1, R90 += 1 };
  s2 -> s2 [0, 65535] { R3988 += 1, R3925 += 1, R3926 += 1 };
  s2 -> s3 [0, 65535] { R3988 += 1, R3926 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3988 += 1, R3926 += 1 };
  s3 -> s5 [0, 65535] { R3988 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3988 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R3989 += 1, R3990 += 1 };
  s0 -> s1 [0, 65535] { R3990 += 1, R3927 += 1, R3928 += 1 };
  s0 -> s2 [0, 65535] { R3990 += 1, R3928 += 1, R94 += 1, R95 += 1 };
  s0 -> s3 [0, 65535] { R3990 += 1, R3928 += 1, R95 += 1, R96 += 1 };
  s1 -> s1 [0, 65535] { R3990 += 1, R3927 += 1, R3928 += 1 };
  s1 -> s2 [0, 65535] { R3990 += 1, R3928 += 1, R94 += 1, R95 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [0, 65535] { R3990 += 1, R3928 += 1, R95 += 1, R96 += 1 };
  s2 -> s4 [0, 65535] { R3990 += 1 };
  s2 -> s2 [0, 65535] { R3990 += 1, R3928 += 1, R94 += 1, R95 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R3990 += 1, R3928 += 1, R95 += 1, R96 += 1 };
  s3 -> s4 [0, 65535] { R3990 += 1 };
  s3 -> s5 [0, 65535] { R3990 += 1, R3928 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R3990 += 1, R3928 += 1, R95 += 1, R96 += 1 };
  s4 -> s4 [0, 65535] { R3990 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s4 [0, 65535] { R3990 += 1 };
  s5 -> s5 [0, 65535] { R3990 += 1, R3928 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R3992 += 1, R3930 += 1, R3455 += 1 };
  s0 -> s1 [0, 65535] { R3992 += 1, R3930 += 1 };
  s0 -> s2 [0, 65535] { R3992 += 1, R3929 += 1, R3930 += 1 };
  s0 -> s0 [0, 65535] { R3991 += 1, R3992 += 1 };
  s0 -> s1 [76, 65535] { R3992 += 1, R3930 += 1, R3455 += 1 };
  s1 -> s1 [0, 74] { R3992 += 1, R3930 += 1, R3455 += 1 };
  s1 -> s1 [0, 65535] { R3992 += 1, R3930 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R3992 += 1 };
  s1 -> s1 [76, 65535] { R3992 += 1, R3930 += 1, R3455 += 1 };
  s2 -> s1 [0, 74] { R3992 += 1, R3930 += 1, R3455 += 1 };
  s2 -> s1 [0, 65535] { R3992 += 1, R3930 += 1 };
  s2 -> s2 [0, 65535] { R3992 += 1, R3929 += 1, R3930 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [76, 65535] { R3992 += 1, R3930 += 1, R3455 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3992 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R3994 += 1, R3931 += 1, R3932 += 1 };
  s0 -> s2 [0, 65535] { R3994 += 1, R3932 += 1 };
  s0 -> s3 [0, 65535] { R3994 += 1, R3932 += 1, R3462 += 1 };
  s0 -> s0 [0, 65535] { R3993 += 1, R3994 += 1 };
  s0 -> s4 [0, 65535] { R3994 += 1, R3932 += 1, R3462 += 1, R3464 += 1 };
  s1 -> s1 [0, 65535] { R3994 += 1, R3931 += 1, R3932 += 1 };
  s1 -> s2 [0, 65535] { R3994 += 1, R3932 += 1 };
  s1 -> s3 [0, 65535] { R3994 += 1, R3932 += 1, R3462 += 1 };
  s1 -> s4 [0, 65535] { R3994 += 1, R3932 += 1, R3462 += 1, R3464 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R3994 += 1, R3932 += 1 };
  s2 -> s5 [0, 65535] { R3994 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R3994 += 1, R3932 += 1 };
  s3 -> s3 [0, 65535] { R3994 += 1, R3932 += 1, R3462 += 1 };
  s3 -> s5 [0, 65535] { R3994 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s2 [0, 65535] { R3994 += 1, R3932 += 1 };
  s4 -> s3 [0, 65535] { R3994 += 1, R3932 += 1, R3462 += 1 };
  s4 -> s5 [0, 65535] { R3994 += 1 };
  s4 -> s4 [0, 65535] { R3994 += 1, R3932 += 1, R3462 += 1, R3464 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3994 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R3996 += 1, R3934 += 1, R3911 += 1, R3912 += 1, R3913 += 1 };
  s0 -> s0 [0, 65535] { R3995 += 1, R3996 += 1 };
  s0 -> s2 [0, 65535] { R3996 += 1, R3934 += 1 };
  s0 -> s3 [0, 65535] { R3996 += 1, R3933 += 1, R3934 += 1 };
  s0 -> s4 [0, 65535] { R3996 += 1, R3934 += 1, R3911 += 1, R3913 += 1, R3914 += 1 };
  s1 -> s1 [0, 65535] { R3996 += 1, R3934 += 1, R3911 += 1, R3912 += 1, R3913 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s2 [0, 65535] { R3996 += 1, R3934 += 1 };
  s1 -> s7 [0, 65535] { R3996 += 1 };
  s1 -> s4 [0, 65535] { R3996 += 1, R3934 += 1, R3911 += 1, R3913 += 1, R3914 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R3996 += 1, R3934 += 1 };
  s2 -> s7 [0, 65535] { R3996 += 1 };
  s3 -> s1 [0, 65535] { R3996 += 1, R3934 += 1, R3911 += 1, R3912 += 1, R3913 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R3996 += 1, R3934 += 1 };
  s3 -> s3 [0, 65535] { R3996 += 1, R3933 += 1, R3934 += 1 };
  s3 -> s4 [0, 65535] { R3996 += 1, R3934 += 1, R3911 += 1, R3913 += 1, R3914 += 1 };
  s4 -> s5 [0, 65535] { R3996 += 1, R3934 += 1, R3911 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s2 [0, 65535] { R3996 += 1, R3934 += 1 };
  s4 -> s7 [0, 65535] { R3996 += 1 };
  s4 -> s4 [0, 65535] { R3996 += 1, R3934 += 1, R3911 += 1, R3913 += 1, R3914 += 1 };
  s5 -> s5 [0, 65535] { R3996 += 1, R3934 += 1, R3911 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s2 [0, 65535] { R3996 += 1, R3934 += 1 };
  s5 -> s7 [0, 65535] { R3996 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3996 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R3998 += 1, R3954 += 1, R21 += 1 };
  s0 -> s0 [0, 65535] { R3997 += 1, R3998 += 1 };
  s0 -> s2 [0, 65535] { R3998 += 1, R3953 += 1, R3954 += 1 };
  s1 -> s1 [0, 65535] { R3998 += 1, R3954 += 1, R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R3998 += 1 };
  s2 -> s1 [0, 65535] { R3998 += 1, R3954 += 1, R21 += 1 };
  s2 -> s2 [0, 65535] { R3998 += 1, R3953 += 1, R3954 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3998 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R4000 += 1, R3956 += 1 };
  s0 -> s2 [0, 65535] { R4000 += 1, R3955 += 1, R3956 += 1 };
  s0 -> s0 [0, 65535] { R3999 += 1, R4000 += 1 };
  s0 -> s3 [70, 70] { R4000 += 1, R3956 += 1 };
  s0 -> s4 [70, 70] { R4000 += 1, R3956 += 1 };
  s0 -> s5 [75, 75] { R4000 += 1, R3956 += 1 };
  s0 -> s1 [76, 65535] { R4000 += 1, R3956 += 1 };
  s1 -> s1 [0, 69] { R4000 += 1, R3956 += 1 };
  s1 -> s3 [70, 70] { R4000 += 1, R3956 += 1 };
  s1 -> s4 [70, 70] { R4000 += 1, R3956 += 1 };
  s1 -> s5 [75, 75] { R4000 += 1, R3956 += 1 };
  s1 -> s1 [76, 65535] { R4000 += 1, R3956 += 1 };
  s2 -> s1 [0, 69] { R4000 += 1, R3956 += 1 };
  s2 -> s2 [0, 65535] { R4000 += 1, R3955 += 1, R3956 += 1 };
  s2 -> s3 [70, 70] { R4000 += 1, R3956 += 1 };
  s2 -> s4 [70, 70] { R4000 += 1, R3956 += 1 };
  s2 -> s5 [75, 75] { R4000 += 1, R3956 += 1 };
  s2 -> s1 [76, 65535] { R4000 += 1, R3956 += 1 };
  s4 -> s4 [0, 70] { R4000 += 1, R3956 += 1 };
  s4 -> s7 [75, 75] { R4000 += 1, R3956 += 1 };
  s4 -> s4 [76, 65535] { R4000 += 1, R3956 += 1 };
  s5 -> s5 [0, 69] { R4000 += 1, R3956 += 1 };
  s5 -> s5 [0, 65535] { R4000 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R4000 += 1, R3956 += 1 };
  s5 -> s8 [70, 70] { R4000 += 1, R3956 += 1 };
  s5 -> s5 [75, 65535] { R4000 += 1, R3956 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R4000 += 1, R3956 += 1 };
  s7 -> s7 [0, 65535] { R4000 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R4000 += 1, R3956 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R4000 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R4002 += 1, R3958 += 1, R83 += 1 };
  s0 -> s0 [0, 65535] { R4001 += 1, R4002 += 1 };
  s0 -> s2 [0, 65535] { R4002 += 1, R3957 += 1, R3958 += 1 };
  s0 -> s3 [70, 70] { R4002 += 1, R3958 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R4002 += 1, R3958 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R4002 += 1, R3958 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R4002 += 1, R3958 += 1, R83 += 1 };
  s1 -> s1 [0, 65535] { R4002 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R4002 += 1, R3958 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R4002 += 1, R3958 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R4002 += 1, R3958 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R4002 += 1, R3958 += 1, R83 += 1 };
  s2 -> s2 [0, 65535] { R4002 += 1, R3957 += 1, R3958 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R4002 += 1, R3958 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R4002 += 1, R3958 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R4002 += 1, R3958 += 1, R83 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R4002 += 1 };
  s4 -> s5 [0, 65535] { R4002 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4002 += 1, R3958 += 1, R83 += 1 };
  s5 -> s5 [0, 65535] { R4002 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R4004 += 1, R3960 += 1, R85 += 1 };
  s0 -> s0 [0, 65535] { R4003 += 1, R4004 += 1 };
  s0 -> s2 [0, 65535] { R4004 += 1, R3959 += 1, R3960 += 1 };
  s0 -> s3 [70, 70] { R4004 += 1, R3960 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R4004 += 1, R3960 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R4004 += 1, R3960 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R4004 += 1, R3960 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R4004 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R4004 += 1, R3960 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R4004 += 1, R3960 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R4004 += 1, R3960 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R4004 += 1, R3960 += 1, R85 += 1 };
  s2 -> s2 [0, 65535] { R4004 += 1, R3959 += 1, R3960 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R4004 += 1, R3960 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R4004 += 1, R3960 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R4004 += 1, R3960 += 1, R85 += 1 };
  s3 -> s3 [0, 65535] { R4004 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4004 += 1, R3960 += 1, R85 += 1 };
  s4 -> s5 [0, 65535] { R4004 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4004 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R4006 += 1, R3962 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R4006 += 1, R3962 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R4005 += 1, R4006 += 1 };
  s0 -> s3 [0, 65535] { R4006 += 1, R3961 += 1, R3962 += 1 };
  s0 -> s4 [70, 70] { R4006 += 1, R3962 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R4006 += 1, R3962 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R4006 += 1, R3962 += 1, R87 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R4006 += 1, R3962 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 74] { R4006 += 1, R3962 += 1, R88 += 1 };
  s0 -> s2 [71, 65535] { R4006 += 1, R3962 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R4006 += 1, R3962 += 1, R88 += 1 };
  s0 -> s1 [76, 65535] { R4006 += 1, R3962 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R4006 += 1, R3962 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R4006 += 1, R3962 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R4006 += 1, R3962 += 1, R88 += 1 };
  s1 -> s1 [71, 74] { R4006 += 1, R3962 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R4006 += 1, R3962 += 1, R88 += 1 };
  s1 -> s1 [76, 65535] { R4006 += 1, R3962 += 1, R88 += 1 };
  s2 -> s1 [0, 69] { R4006 += 1, R3962 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R4006 += 1, R3962 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R4006 += 1, R3962 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R4006 += 1, R3962 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R4006 += 1, R3962 += 1, R87 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R4006 += 1, R3962 += 1, R87 += 1, R88 += 1 };
  s2 -> s1 [71, 74] { R4006 += 1, R3962 += 1, R88 += 1 };
  s2 -> s2 [71, 65535] { R4006 += 1, R3962 += 1, R87 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R4006 += 1, R3962 += 1, R88 += 1 };
  s2 -> s1 [76, 65535] { R4006 += 1, R3962 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R4006 += 1, R3962 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R4006 += 1, R3962 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R4006 += 1, R3961 += 1, R3962 += 1 };
  s3 -> s4 [70, 70] { R4006 += 1, R3962 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R4006 += 1, R3962 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R4006 += 1, R3962 += 1, R87 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R4006 += 1, R3962 += 1, R87 += 1, R88 += 1 };
  s3 -> s1 [71, 74] { R4006 += 1, R3962 += 1, R88 += 1 };
  s3 -> s2 [71, 65535] { R4006 += 1, R3962 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R4006 += 1, R3962 += 1, R88 += 1 };
  s3 -> s1 [76, 65535] { R4006 += 1, R3962 += 1, R88 += 1 };
  s5 -> s5 [0, 74] { R4006 += 1, R3962 += 1, R88 += 1 };
  s5 -> s11 [75, 75] { R4006 += 1, R3962 += 1, R88 += 1 };
  s5 -> s5 [76, 65535] { R4006 += 1, R3962 += 1, R88 += 1 };
  s6 -> s5 [0, 74] { R4006 += 1, R3962 += 1, R88 += 1 };
  s6 -> s6 [0, 65535] { R4006 += 1, R3962 += 1, R87 += 1, R88 += 1 };
  s6 -> s11 [75, 75] { R4006 += 1, R3962 += 1, R88 += 1 };
  s6 -> s5 [76, 65535] { R4006 += 1, R3962 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R4006 += 1, R3962 += 1, R88 += 1 };
  s8 -> s8 [0, 65535] { R4006 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R4006 += 1, R3962 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R4006 += 1, R3962 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R4006 += 1, R3962 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R4006 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R4006 += 1, R3962 += 1, R88 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R4006 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R4006 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R4008 += 1, R3964 += 1, R91 += 1, R92 += 1 };
  s0 -> s2 [0, 65535] { R4008 += 1, R3963 += 1, R3964 += 1 };
  s0 -> s0 [0, 65535] { R4007 += 1, R4008 += 1 };
  s0 -> s3 [70, 70] { R4008 += 1, R3964 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R4008 += 1, R3964 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R4008 += 1, R3964 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R4008 += 1, R3964 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 65535] { R4008 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R4008 += 1, R3964 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R4008 += 1, R3964 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R4008 += 1, R3964 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R4008 += 1, R3964 += 1, R91 += 1, R92 += 1 };
  s2 -> s2 [0, 65535] { R4008 += 1, R3963 += 1, R3964 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R4008 += 1, R3964 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R4008 += 1, R3964 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R4008 += 1, R3964 += 1, R91 += 1, R92 += 1 };
  s3 -> s6 [0, 65535] { R4008 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4008 += 1, R3964 += 1, R91 += 1, R92 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4008 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4008 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R4010 += 1, R3966 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s2 [0, 69] { R4010 += 1, R3966 += 1, R3452 += 1 };
  s0 -> s3 [0, 69] { R4010 += 1, R3966 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s0 [0, 65535] { R4009 += 1, R4010 += 1 };
  s0 -> s4 [0, 65535] { R4010 += 1, R3965 += 1, R3966 += 1 };
  s0 -> s5 [70, 70] { R4010 += 1, R3966 += 1, R3452 += 1 };
  s0 -> s6 [70, 70] { R4010 += 1, R3966 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s7 [70, 70] { R4010 += 1, R3966 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s8 [70, 70] { R4010 += 1, R3966 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s9 [70, 70] { R4010 += 1, R3966 += 1, R3452 += 1 };
  s0 -> s10 [70, 70] { R4010 += 1, R3966 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s2 [71, 74] { R4010 += 1, R3966 += 1, R3452 += 1 };
  s0 -> s1 [71, 65535] { R4010 += 1, R3966 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s3 [71, 65535] { R4010 += 1, R3966 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s2 [76, 65535] { R4010 += 1, R3966 += 1, R3452 += 1 };
  s1 -> s1 [0, 69] { R4010 += 1, R3966 += 1, R3452 += 1, R3453 += 1 };
  s1 -> s2 [0, 69] { R4010 += 1, R3966 += 1, R3452 += 1 };
  s1 -> s5 [70, 70] { R4010 += 1, R3966 += 1, R3452 += 1 };
  s1 -> s7 [70, 70] { R4010 += 1, R3966 += 1, R3452 += 1, R3453 += 1 };
  s1 -> s8 [70, 70] { R4010 += 1, R3966 += 1, R3452 += 1, R3453 += 1 };
  s1 -> s9 [70, 70] { R4010 += 1, R3966 += 1, R3452 += 1 };
  s1 -> s2 [71, 74] { R4010 += 1, R3966 += 1, R3452 += 1 };
  s1 -> s1 [71, 65535] { R4010 += 1, R3966 += 1, R3452 += 1, R3453 += 1 };
  s1 -> s2 [76, 65535] { R4010 += 1, R3966 += 1, R3452 += 1 };
  s2 -> s2 [0, 69] { R4010 += 1, R3966 += 1, R3452 += 1 };
  s2 -> s2 [0, 65535] { R4010 += 1 };
  s2 -> s11 [0, 65535];
  s2 -> s5 [70, 70] { R4010 += 1, R3966 += 1 };
  s2 -> s9 [70, 70] { R4010 += 1, R3966 += 1 };
  s2 -> s2 [71, 74] { R4010 += 1, R3966 += 1, R3452 += 1 };
  s2 -> s2 [71, 65535] { R4010 += 1, R3966 += 1 };
  s2 -> s2 [76, 65535] { R4010 += 1, R3966 += 1, R3452 += 1 };
  s3 -> s1 [0, 69] { R4010 += 1, R3966 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s2 [0, 69] { R4010 += 1, R3966 += 1, R3452 += 1 };
  s3 -> s3 [0, 69] { R4010 += 1, R3966 += 1, R3451 += 1, R3452 += 1 };
  s3 -> s5 [70, 70] { R4010 += 1, R3966 += 1, R3452 += 1 };
  s3 -> s6 [70, 70] { R4010 += 1, R3966 += 1, R3451 += 1, R3452 += 1 };
  s3 -> s7 [70, 70] { R4010 += 1, R3966 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s8 [70, 70] { R4010 += 1, R3966 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s9 [70, 70] { R4010 += 1, R3966 += 1, R3452 += 1 };
  s3 -> s10 [70, 70] { R4010 += 1, R3966 += 1, R3451 += 1, R3452 += 1 };
  s3 -> s2 [71, 74] { R4010 += 1, R3966 += 1, R3452 += 1 };
  s3 -> s1 [71, 65535] { R4010 += 1, R3966 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s3 [71, 65535] { R4010 += 1, R3966 += 1, R3451 += 1, R3452 += 1 };
  s3 -> s2 [76, 65535] { R4010 += 1, R3966 += 1, R3452 += 1 };
  s4 -> s1 [0, 69] { R4010 += 1, R3966 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s2 [0, 69] { R4010 += 1, R3966 += 1, R3452 += 1 };
  s4 -> s3 [0, 69] { R4010 += 1, R3966 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s4 [0, 65535] { R4010 += 1, R3965 += 1, R3966 += 1 };
  s4 -> s5 [70, 70] { R4010 += 1, R3966 += 1, R3452 += 1 };
  s4 -> s6 [70, 70] { R4010 += 1, R3966 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s7 [70, 70] { R4010 += 1, R3966 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s8 [70, 70] { R4010 += 1, R3966 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s9 [70, 70] { R4010 += 1, R3966 += 1, R3452 += 1 };
  s4 -> s10 [70, 70] { R4010 += 1, R3966 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s2 [71, 74] { R4010 += 1, R3966 += 1, R3452 += 1 };
  s4 -> s1 [71, 65535] { R4010 += 1, R3966 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s3 [71, 65535] { R4010 += 1, R3966 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s2 [76, 65535] { R4010 += 1, R3966 += 1, R3452 += 1 };
  s5 -> s5 [0, 65535] { R4010 += 1 };
  s5 -> s11 [0, 65535];
  s6 -> s9 [0, 74] { R4010 += 1, R3966 += 1, R3452 += 1 };
  s6 -> s6 [0, 65535] { R4010 += 1, R3966 += 1, R3451 += 1, R3452 += 1 };
  s6 -> s7 [0, 65535] { R4010 += 1, R3966 += 1, R3452 += 1, R3453 += 1 };
  s6 -> s9 [76, 65535] { R4010 += 1, R3966 += 1, R3452 += 1 };
  s7 -> s9 [0, 74] { R4010 += 1, R3966 += 1, R3452 += 1 };
  s7 -> s7 [0, 65535] { R4010 += 1, R3966 += 1, R3452 += 1, R3453 += 1 };
  s7 -> s9 [76, 65535] { R4010 += 1, R3966 += 1, R3452 += 1 };
  s9 -> s9 [0, 74] { R4010 += 1, R3966 += 1, R3452 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s9 [0, 65535] { R4010 += 1, R3966 += 1 };
  s9 -> s12 [0, 65535] { R4010 += 1 };
  s9 -> s9 [76, 65535] { R4010 += 1, R3966 += 1, R3452 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R4010 += 1 };
  accepting s12, s5, s2, s9, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R4012 += 1, R3968 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s0 -> s2 [0, 69] { R4012 += 1, R3968 += 1, R3457 += 1, R3458 += 1 };
  s0 -> s3 [0, 69] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s0 -> s4 [0, 65535] { R4012 += 1, R3967 += 1, R3968 += 1 };
  s0 -> s0 [0, 65535] { R4011 += 1, R4012 += 1 };
  s0 -> s5 [70, 70] { R4012 += 1, R3968 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s0 -> s6 [70, 70] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s0 -> s7 [70, 70] { R4012 += 1, R3968 += 1, R3457 += 1, R3458 += 1 };
  s0 -> s8 [70, 70] { R4012 += 1, R3968 += 1, R3457 += 1, R3458 += 1 };
  s0 -> s9 [70, 70] { R4012 += 1, R3968 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s0 -> s10 [70, 70] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s0 -> s3 [71, 74] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s0 -> s1 [71, 65535] { R4012 += 1, R3968 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s0 -> s2 [71, 65535] { R4012 += 1, R3968 += 1, R3457 += 1, R3458 += 1 };
  s0 -> s11 [75, 75] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s0 -> s3 [76, 65535] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s1 -> s1 [0, 69] { R4012 += 1, R3968 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s1 -> s3 [0, 69] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s1 -> s5 [70, 70] { R4012 += 1, R3968 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s1 -> s6 [70, 70] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s1 -> s9 [70, 70] { R4012 += 1, R3968 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s1 -> s10 [70, 70] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s1 -> s3 [71, 74] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s1 -> s1 [71, 65535] { R4012 += 1, R3968 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s1 -> s11 [75, 75] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s1 -> s3 [76, 65535] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s2 -> s1 [0, 69] { R4012 += 1, R3968 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s2 -> s2 [0, 69] { R4012 += 1, R3968 += 1, R3457 += 1, R3458 += 1 };
  s2 -> s3 [0, 69] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s2 -> s5 [70, 70] { R4012 += 1, R3968 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s2 -> s6 [70, 70] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s2 -> s7 [70, 70] { R4012 += 1, R3968 += 1, R3457 += 1, R3458 += 1 };
  s2 -> s8 [70, 70] { R4012 += 1, R3968 += 1, R3457 += 1, R3458 += 1 };
  s2 -> s9 [70, 70] { R4012 += 1, R3968 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s2 -> s10 [70, 70] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s2 -> s3 [71, 74] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s2 -> s1 [71, 65535] { R4012 += 1, R3968 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s2 -> s2 [71, 65535] { R4012 += 1, R3968 += 1, R3457 += 1, R3458 += 1 };
  s2 -> s11 [75, 75] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s2 -> s3 [76, 65535] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s3 -> s3 [0, 69] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s3 -> s6 [70, 70] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s3 -> s10 [70, 70] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s3 -> s3 [71, 74] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s3 -> s11 [75, 75] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s3 -> s3 [76, 65535] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s4 -> s1 [0, 69] { R4012 += 1, R3968 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s4 -> s2 [0, 69] { R4012 += 1, R3968 += 1, R3457 += 1, R3458 += 1 };
  s4 -> s3 [0, 69] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s4 -> s4 [0, 65535] { R4012 += 1, R3967 += 1, R3968 += 1 };
  s4 -> s5 [70, 70] { R4012 += 1, R3968 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s4 -> s6 [70, 70] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s4 -> s7 [70, 70] { R4012 += 1, R3968 += 1, R3457 += 1, R3458 += 1 };
  s4 -> s8 [70, 70] { R4012 += 1, R3968 += 1, R3457 += 1, R3458 += 1 };
  s4 -> s9 [70, 70] { R4012 += 1, R3968 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s4 -> s10 [70, 70] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s4 -> s3 [71, 74] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s4 -> s1 [71, 65535] { R4012 += 1, R3968 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s4 -> s2 [71, 65535] { R4012 += 1, R3968 += 1, R3457 += 1, R3458 += 1 };
  s4 -> s11 [75, 75] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s4 -> s3 [76, 65535] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s8 -> s10 [0, 74] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s8 -> s8 [0, 65535] { R4012 += 1, R3968 += 1, R3457 += 1, R3458 += 1 };
  s8 -> s9 [0, 65535] { R4012 += 1, R3968 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s8 -> s14 [75, 75] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s8 -> s10 [76, 65535] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s9 -> s10 [0, 74] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s9 -> s9 [0, 65535] { R4012 += 1, R3968 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s9 -> s14 [75, 75] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s9 -> s10 [76, 65535] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s10 -> s10 [0, 74] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s10 -> s14 [75, 75] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s10 -> s10 [76, 65535] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s11 -> s11 [0, 69] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s11 [0, 65535] { R4012 += 1 };
  s11 -> s13 [70, 70] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s11 -> s14 [70, 70] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s11 -> s11 [71, 65535] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R4012 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s15 [0, 65535] { R4012 += 1 };
  s14 -> s14 [0, 65535] { R4012 += 1, R3968 += 1, R3458 += 1, R3460 += 1 };
  s15 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R4012 += 1 };
  accepting s12, s13, s14, s15, s11;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R4014 += 1, R3970 += 1, R3906 += 1, R3907 += 1, R3908 += 1 };
  s0 -> s2 [0, 69] { R4014 += 1, R3970 += 1, R3905 += 1, R3906 += 1 };
  s0 -> s3 [0, 65535] { R4014 += 1, R3969 += 1, R3970 += 1 };
  s0 -> s0 [0, 65535] { R4013 += 1, R4014 += 1 };
  s0 -> s4 [70, 70] { R4014 += 1, R3970 += 1, R3906 += 1, R3907 += 1, R3908 += 1 };
  s0 -> s5 [70, 70] { R4014 += 1, R3970 += 1, R3905 += 1, R3906 += 1 };
  s0 -> s6 [70, 70] { R4014 += 1, R3970 += 1, R3906 += 1, R3907 += 1, R3908 += 1 };
  s0 -> s7 [70, 70] { R4014 += 1, R3970 += 1, R3905 += 1, R3906 += 1 };
  s0 -> s1 [71, 65535] { R4014 += 1, R3970 += 1, R3906 += 1, R3907 += 1, R3908 += 1 };
  s0 -> s2 [71, 65535] { R4014 += 1, R3970 += 1, R3905 += 1, R3906 += 1 };
  s1 -> s1 [0, 69] { R4014 += 1, R3970 += 1, R3906 += 1, R3907 += 1, R3908 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s1 [0, 65535] { R4014 += 1 };
  s1 -> s4 [70, 70] { R4014 += 1, R3970 += 1, R3906 += 1, R3907 += 1, R3908 += 1 };
  s1 -> s6 [70, 70] { R4014 += 1, R3970 += 1, R3906 += 1, R3907 += 1, R3908 += 1 };
  s1 -> s1 [71, 65535] { R4014 += 1, R3970 += 1, R3906 += 1, R3907 += 1, R3908 += 1 };
  s2 -> s1 [0, 69] { R4014 += 1, R3970 += 1, R3906 += 1, R3907 += 1, R3908 += 1 };
  s2 -> s2 [0, 69] { R4014 += 1, R3970 += 1, R3905 += 1, R3906 += 1 };
  s2 -> s4 [70, 70] { R4014 += 1, R3970 += 1, R3906 += 1, R3907 += 1, R3908 += 1 };
  s2 -> s5 [70, 70] { R4014 += 1, R3970 += 1, R3905 += 1, R3906 += 1 };
  s2 -> s6 [70, 70] { R4014 += 1, R3970 += 1, R3906 += 1, R3907 += 1, R3908 += 1 };
  s2 -> s7 [70, 70] { R4014 += 1, R3970 += 1, R3905 += 1, R3906 += 1 };
  s2 -> s1 [71, 65535] { R4014 += 1, R3970 += 1, R3906 += 1, R3907 += 1, R3908 += 1 };
  s2 -> s2 [71, 65535] { R4014 += 1, R3970 += 1, R3905 += 1, R3906 += 1 };
  s3 -> s1 [0, 69] { R4014 += 1, R3970 += 1, R3906 += 1, R3907 += 1, R3908 += 1 };
  s3 -> s2 [0, 69] { R4014 += 1, R3970 += 1, R3905 += 1, R3906 += 1 };
  s3 -> s3 [0, 65535] { R4014 += 1, R3969 += 1, R3970 += 1 };
  s3 -> s4 [70, 70] { R4014 += 1, R3970 += 1, R3906 += 1, R3907 += 1, R3908 += 1 };
  s3 -> s5 [70, 70] { R4014 += 1, R3970 += 1, R3905 += 1, R3906 += 1 };
  s3 -> s6 [70, 70] { R4014 += 1, R3970 += 1, R3906 += 1, R3907 += 1, R3908 += 1 };
  s3 -> s7 [70, 70] { R4014 += 1, R3970 += 1, R3905 += 1, R3906 += 1 };
  s3 -> s1 [71, 65535] { R4014 += 1, R3970 += 1, R3906 += 1, R3907 += 1, R3908 += 1 };
  s3 -> s2 [71, 65535] { R4014 += 1, R3970 += 1, R3905 += 1, R3906 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [0, 65535] { R4014 += 1 };
  s5 -> s5 [0, 65535] { R4014 += 1, R3970 += 1, R3905 += 1, R3906 += 1 };
  s5 -> s6 [0, 65535] { R4014 += 1, R3970 += 1, R3906 += 1, R3907 += 1, R3908 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R4014 += 1, R3970 += 1, R3906 += 1, R3907 += 1, R3908 += 1 };
  s6 -> s9 [0, 65535] { R4014 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R4014 += 1 };
  accepting s4, s8, s9, s6, s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R4014 && R23 - R4014 = -1 && R24 = R4014 && R25 - R4014 = -1 && R26 = R4014 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R3462 + -1*R3458 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R3462 + -1*R3458 - R66 = 0 && R55 + R96 + R93 + -1*R3464 + -1*R3460 - R68 = 0 && R65 + R3461 + R3457 = 0 && R67 + R3463 + R3459 = 0 && R3955 = 0 && R3956 = 0 && R3961 = 0 && R3962 = 0 && R3965 = 0 && R3966 = 0 && R3967 = 0 && R3968 = 0 && R3969 = 0 && R3970 = 0 && R3971 = 0 && R3972 = R4014 && R3973 = 0 && R3974 = R4014 && R3975 = 0 && R3976 = R4014 && R3977 = 0 && R3978 = R4014 && R3979 = 0 && R3980 = R4014 && R3981 = 0 && R3982 = R4014 && R3983 = 0 && R3984 = R4014 && R3985 = 0 && R3986 = R4014 && R3987 = 0 && R3988 = R4014 && R3989 = 0 && R3990 = R4014 && R3991 = 0 && R3992 = R4014 && R3993 = 0 && R3994 = R4014 && R3995 = 0 && R3996 = R4014 && R3997 = 0 && R3998 = R4014 && R3999 = 0 && R4000 = R4014 && R4001 = 0 && R4002 = R4014 && R4003 = 0 && R4004 = R4014 && R4005 = 0 && R4006 = R4014 && R4007 = 0 && R4008 = R4014 && R4009 = 0 && R4010 = R4014 && R4011 = 0 && R4012 = R4014 && R4013 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R3456 + R3453 < 1 && -1*R3462 + -1*R3458 - R66 < 1 && -1*R3464 + -1*R3460 - R68 < 1 && 0 < R4014 && (R2 != 0 || R20 = 0 || (R3915 = 0 && R3916 = 0)) && (R2 != 0 || R20 = 0 || (R3917 = 0 && R3918 = 0)) && (R2 != 0 || R20 = 0 || (R3919 = 0 && R3920 = 0)) && (R2 != 0 || R20 = 0 || (R3921 = 0 && R3922 = 0)) && (R2 != 0 || R20 = 0 || (R3923 = 0 && R3924 = 0)) && (R2 != 0 || R20 = 0 || (R3925 = 0 && R3926 = 0)) && (R2 != 0 || R20 = 0 || (R3927 = 0 && R3928 = 0)) && (R2 != 0 || R20 = 0 || (R3929 = 0 && R3930 = 0)) && (R2 != 0 || R20 = 0 || (R3931 = 0 && R3932 = 0)) && (R2 != 0 || R20 = 0 || (R3933 = 0 && R3934 = 0)) && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R3462 + -1*R3458 - R66 = 0 || R66 + R3462 + R3458 < 1) && (R59 + R3454 + R3451 != 0 || R60 + R3455 + R3452 + -1*R3462 + -1*R3458 - R66 = 0 || R66 + R3462 + R3458 < 1) && (R66 + R3462 + R3458 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R3464 + R3460 < 1) && (R53 + R94 + R91 = 0 || R68 + R3464 + R3460 < 1))) && (R66 + R3462 + R3458 != 0 || ((R59 + R3454 + R3451 != 0 || R60 + R3455 + R3452 = 0 || R68 + R3464 + R3460 < 1) && (R59 + R3454 + R3451 = 0 || R68 + R3464 + R3460 < 1))) && (R66 + R3462 + R3458 != 0 || ((R73 + R3910 + R3905 != 0 || R74 + R3911 + R3906 = 0 || R68 + R3464 + R3460 < 1) && (R73 + R3910 + R3905 = 0 || R68 + R3464 + R3460 < 1))) && (R68 + R3464 + R3460 != 0 || R77 + R3914 + R3909 = 0 || (R75 + R3912 + R3907 = 0 && R76 + R3913 + R3908 = 0)) && (R73 + R3910 + R3905 != 0 || R66 + R3462 + R3458 + -1*R3911 + -1*R3906 - R74 = 0 || R66 + R3462 + R3458 < 1) && (R75 + R3912 + R3907 != 0 || R68 + R3464 + R3460 + -1*R3913 + -1*R3908 - R76 = 0 || R68 + R3464 + R3460 < 1) && (R3915 != 0 || R2 = R3916 || R2 < 1) && (R3917 != 0 || R2 = R3918 || R2 < 1) && (R3919 != 0 || R2 = R3920 || R2 < 1) && (R3921 != 0 || R2 = R3922 || R2 < 1) && (R3923 != 0 || R2 = R3924 || R2 < 1) && (R3925 != 0 || R2 = R3926 || R2 < 1) && (R3927 != 0 || R2 = R3928 || R2 < 1) && (R3929 != 0 || R2 = R3930 || R2 < 1) && (R3931 != 0 || R2 = R3932 || R2 < 1) && (R3933 != 0 || R2 = R3934 || R2 < 1) && (R21 = 0 || (R3953 = 0 && R3954 = 0)) && (R21 = 0 || (R3957 = 0 && R3958 = 0)) && (R21 = 0 || (R3959 = 0 && R3960 = 0)) && (R21 = 0 || (R3963 = 0 && R3964 = 0)) && (R22 = 0 || (R3935 = 0 && R3936 = 0)) && (R22 = 0 || (R3937 = 0 && R3938 = 0)) && (R22 = 0 || (R3939 = 0 && R3940 = 0)) && (R22 = 0 || (R3941 = 0 && R3942 = 0)) && (R22 = 0 || (R3943 = 0 && R3944 = 0)) && (R22 = 0 || (R3945 = 0 && R3946 = 0)) && (R22 = 0 || (R3947 = 0 && R3948 = 0)) && (R22 = 0 || (R3949 = 0 && R3950 = 0)) && (R22 = 0 || (R3951 = 0 && R3952 = 0)) && (R53 + R94 + R91 = 0 || R66 + R3462 + R3458 < 1) && (R59 + R3454 + R3451 = 0 || R66 + R3462 + R3458 < 1) && (R73 + R3910 + R3905 = 0 || R66 + R3462 + R3458 < 1) && (R75 + R3912 + R3907 = 0 || R68 + R3464 + R3460 < 1) && (R3915 = 0 || R2 < 1) && (R3917 = 0 || R2 < 1) && (R3919 = 0 || R2 < 1) && (R3921 = 0 || R2 < 1) && (R3923 = 0 || R2 < 1) && (R3925 = 0 || R2 < 1) && (R3927 = 0 || R2 < 1) && (R3929 = 0 || R2 < 1) && (R3931 = 0 || R2 < 1) && (R3933 = 0 || R2 < 1);
// End of Parikh automata intersection problem
