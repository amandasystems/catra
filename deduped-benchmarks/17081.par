// Parikh automata intersection problem, generated by OSTRICH+
counter int R100, R101, R102, R12, R15, R16, R1777, R1778, R1779, R1780, R1781, R1782, R1783, R1784, R2, R20, R21, R2115, R2116, R2117, R2118, R2119, R2120, R2121, R2122, R2123, R2124, R2125, R2126, R2127, R2128, R2129, R2130, R2131, R2132, R2133, R2134, R2135, R2136, R2137, R2138, R2139, R2140, R2141, R2142, R2143, R2144, R2145, R2146, R2147, R2148, R2149, R2150, R2151, R2152, R2153, R2154, R2155, R2156, R2157, R2158, R2159, R2160, R2161, R2162, R2163, R2164, R2165, R2166, R2167, R2168, R2169, R2170, R2171, R2172, R2173, R2174, R2175, R2176, R2177, R2178, R2179, R2180, R2181, R2182, R2183, R2184, R2185, R2186, R2187, R2188, R2189, R2190, R2191, R2192, R2193, R2194, R2195, R2196, R2197, R2198, R2199, R22, R2200, R2201, R2202, R2203, R2204, R2205, R2206, R2207, R2208, R2209, R2210, R2211, R2212, R2213, R2214, R2215, R2216, R2217, R2218, R2219, R2220, R2221, R2222, R2223, R2224, R23, R24, R25, R26, R27, R28, R29, R3, R30, R4, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96, R97, R98, R99;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R2146 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R2145 += 1, R2146 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R2146 += 1, R22 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R2148 += 1 };
  s0 -> s0 [0, 65535] { R2147 += 1, R2148 += 1 };
  s0 -> s2 [70, 70] { R2148 += 1 };
  s0 -> s3 [70, 70] { R2148 += 1 };
  s0 -> s1 [76, 65535] { R2148 += 1 };
  s1 -> s1 [0, 69] { R2148 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2148 += 1 };
  s1 -> s3 [70, 70] { R2148 += 1 };
  s1 -> s1 [76, 65535] { R2148 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R2148 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R2148 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R2150 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R2149 += 1, R2150 += 1 };
  s0 -> s2 [70, 70] { R2150 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R2150 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R2150 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R2150 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2150 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R2150 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R2150 += 1, R45 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2150 += 1, R45 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R2152 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R2151 += 1, R2152 += 1 };
  s0 -> s2 [70, 70] { R2152 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R2152 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R2152 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R2152 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2152 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R2152 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R2152 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R2152 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R2154 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R2153 += 1, R2154 += 1 };
  s0 -> s2 [70, 70] { R2154 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R2154 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R2154 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R2154 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2154 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R2154 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R2154 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2154 += 1, R49 += 1, R50 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R2156 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R2155 += 1, R2156 += 1 };
  s0 -> s2 [70, 70] { R2156 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R2156 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R2156 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R2156 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2156 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R2156 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R2156 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2156 += 1, R53 += 1, R54 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R2158 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R2157 += 1, R2158 += 1 };
  s0 -> s2 [70, 70] { R2158 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R2158 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R2158 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R2158 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2158 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R2158 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R2158 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535] { R2158 += 1, R59 += 1, R60 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R2160 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R2159 += 1, R2160 += 1 };
  s0 -> s2 [70, 70] { R2160 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R2160 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R2160 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R2160 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2160 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R2160 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R2160 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2160 += 1, R65 += 1, R66 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R2162 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R2161 += 1, R2162 += 1 };
  s0 -> s2 [70, 70] { R2162 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R2162 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R2162 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R2162 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2162 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R2162 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R2162 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R2162 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R2182 += 1 };
  s0 -> s0 [0, 65535] { R2181 += 1, R2182 += 1 };
  s0 -> s2 [70, 70] { R2182 += 1 };
  s0 -> s1 [71, 65535] { R2182 += 1 };
  s1 -> s1 [0, 69] { R2182 += 1 };
  s1 -> s2 [70, 70] { R2182 += 1 };
  s1 -> s1 [71, 65535] { R2182 += 1 };
  s2 -> s2 [0, 65535] { R2182 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R2183 += 1, R2184 += 1 };
  s0 -> s1 [0, 65535] { R2184 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R2184 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R2186 += 1 };
  s0 -> s0 [0, 65535] { R2185 += 1, R2186 += 1 };
  s0 -> s2 [0, 65535] { R2186 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R2186 += 1 };
  s0 -> s1 [71, 65535] { R2186 += 1 };
  s1 -> s1 [0, 69] { R2186 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R2186 += 1 };
  s1 -> s1 [71, 65535] { R2186 += 1 };
  s2 -> s1 [0, 69] { R2186 += 1 };
  s2 -> s2 [0, 65535] { R2186 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R2186 += 1 };
  s2 -> s1 [71, 65535] { R2186 += 1 };
  s3 -> s3 [0, 65535] { R2186 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R2188 += 1, R2126 += 1 };
  s0 -> s0 [0, 65535] { R2187 += 1, R2188 += 1 };
  s0 -> s2 [0, 65535] { R2188 += 1, R2125 += 1, R2126 += 1 };
  s0 -> s1 [71, 65535] { R2188 += 1, R2126 += 1 };
  s1 -> s1 [0, 69] { R2188 += 1, R2126 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2188 += 1 };
  s1 -> s1 [71, 65535] { R2188 += 1, R2126 += 1 };
  s2 -> s1 [0, 69] { R2188 += 1, R2126 += 1 };
  s2 -> s2 [0, 65535] { R2188 += 1, R2125 += 1, R2126 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R2188 += 1, R2126 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R2190 += 1, R2127 += 1, R2128 += 1 };
  s0 -> s0 [0, 65535] { R2189 += 1, R2190 += 1 };
  s0 -> s2 [0, 65535] { R2190 += 1, R2128 += 1, R20 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2190 += 1, R2127 += 1, R2128 += 1 };
  s1 -> s2 [0, 65535] { R2190 += 1, R2128 += 1, R20 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R2190 += 1 };
  s2 -> s2 [0, 65535] { R2190 += 1, R2128 += 1, R20 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2190 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R2192 += 1, R2130 += 1 };
  s0 -> s2 [0, 65535] { R2192 += 1, R2129 += 1, R2130 += 1 };
  s0 -> s0 [0, 65535] { R2191 += 1, R2192 += 1 };
  s0 -> s1 [75, 65535] { R2192 += 1, R2130 += 1 };
  s1 -> s1 [0, 70] { R2192 += 1, R2130 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2192 += 1 };
  s1 -> s1 [75, 65535] { R2192 += 1, R2130 += 1 };
  s2 -> s1 [0, 70] { R2192 += 1, R2130 += 1 };
  s2 -> s2 [0, 65535] { R2192 += 1, R2129 += 1, R2130 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R2192 += 1, R2130 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R2194 += 1, R2132 += 1, R84 += 1 };
  s0 -> s2 [0, 65535] { R2194 += 1, R2131 += 1, R2132 += 1 };
  s0 -> s0 [0, 65535] { R2193 += 1, R2194 += 1 };
  s1 -> s1 [0, 65535] { R2194 += 1, R2132 += 1, R84 += 1 };
  s1 -> s4 [0, 65535] { R2194 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R2194 += 1, R2132 += 1, R84 += 1 };
  s2 -> s2 [0, 65535] { R2194 += 1, R2131 += 1, R2132 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2194 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R2196 += 1, R2134 += 1 };
  s0 -> s2 [0, 65535] { R2196 += 1, R2133 += 1, R2134 += 1 };
  s0 -> s0 [0, 65535] { R2195 += 1, R2196 += 1 };
  s0 -> s3 [0, 65535] { R2196 += 1, R2134 += 1, R86 += 1 };
  s0 -> s1 [76, 65535] { R2196 += 1, R2134 += 1 };
  s1 -> s1 [0, 74] { R2196 += 1, R2134 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R2196 += 1 };
  s1 -> s1 [76, 65535] { R2196 += 1, R2134 += 1 };
  s2 -> s1 [0, 74] { R2196 += 1, R2134 += 1 };
  s2 -> s2 [0, 65535] { R2196 += 1, R2133 += 1, R2134 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R2196 += 1, R2134 += 1, R86 += 1 };
  s2 -> s1 [76, 65535] { R2196 += 1, R2134 += 1 };
  s3 -> s1 [0, 74] { R2196 += 1, R2134 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2196 += 1, R2134 += 1, R86 += 1 };
  s3 -> s5 [0, 65535] { R2196 += 1 };
  s3 -> s1 [76, 65535] { R2196 += 1, R2134 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2196 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R2198 += 1, R2136 += 1, R90 += 1 };
  s0 -> s0 [0, 65535] { R2197 += 1, R2198 += 1 };
  s0 -> s2 [0, 65535] { R2198 += 1, R2136 += 1 };
  s0 -> s3 [0, 65535] { R2198 += 1, R2135 += 1, R2136 += 1 };
  s1 -> s1 [0, 65535] { R2198 += 1, R2136 += 1, R90 += 1 };
  s1 -> s5 [0, 65535] { R2198 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R2198 += 1, R2136 += 1 };
  s2 -> s5 [0, 65535] { R2198 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2198 += 1, R2136 += 1 };
  s3 -> s1 [0, 65535] { R2198 += 1, R2136 += 1, R90 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R2198 += 1, R2136 += 1 };
  s3 -> s3 [0, 65535] { R2198 += 1, R2135 += 1, R2136 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2198 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R2200 += 1, R2137 += 1, R2138 += 1 };
  s0 -> s2 [0, 65535] { R2200 += 1, R2138 += 1, R95 += 1, R96 += 1 };
  s0 -> s0 [0, 65535] { R2199 += 1, R2200 += 1 };
  s0 -> s3 [0, 65535] { R2200 += 1, R2138 += 1, R94 += 1, R95 += 1 };
  s1 -> s1 [0, 65535] { R2200 += 1, R2137 += 1, R2138 += 1 };
  s1 -> s2 [0, 65535] { R2200 += 1, R2138 += 1, R95 += 1, R96 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R2200 += 1, R2138 += 1, R94 += 1, R95 += 1 };
  s2 -> s4 [0, 65535] { R2200 += 1 };
  s2 -> s2 [0, 65535] { R2200 += 1, R2138 += 1, R95 += 1, R96 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R2200 += 1, R2138 += 1 };
  s3 -> s4 [0, 65535] { R2200 += 1 };
  s3 -> s2 [0, 65535] { R2200 += 1, R2138 += 1, R95 += 1, R96 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2200 += 1, R2138 += 1, R94 += 1, R95 += 1 };
  s4 -> s4 [0, 65535] { R2200 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R2200 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2200 += 1, R2138 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R2202 += 1, R2140 += 1, R101 += 1 };
  s0 -> s2 [0, 65535] { R2202 += 1, R2140 += 1, R100 += 1, R101 += 1 };
  s0 -> s3 [0, 65535] { R2202 += 1, R2139 += 1, R2140 += 1 };
  s0 -> s0 [0, 65535] { R2201 += 1, R2202 += 1 };
  s0 -> s4 [0, 65535] { R2202 += 1, R2140 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [76, 65535] { R2202 += 1, R2140 += 1, R101 += 1 };
  s1 -> s1 [0, 74] { R2202 += 1, R2140 += 1, R101 += 1 };
  s1 -> s5 [0, 65535] { R2202 += 1 };
  s1 -> s1 [0, 65535] { R2202 += 1, R2140 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [76, 65535] { R2202 += 1, R2140 += 1, R101 += 1 };
  s2 -> s1 [0, 74] { R2202 += 1, R2140 += 1, R101 += 1 };
  s2 -> s2 [0, 65535] { R2202 += 1, R2140 += 1, R100 += 1, R101 += 1 };
  s2 -> s5 [0, 65535] { R2202 += 1 };
  s2 -> s4 [0, 65535] { R2202 += 1, R2140 += 1, R101 += 1, R102 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [76, 65535] { R2202 += 1, R2140 += 1, R101 += 1 };
  s3 -> s1 [0, 74] { R2202 += 1, R2140 += 1, R101 += 1 };
  s3 -> s2 [0, 65535] { R2202 += 1, R2140 += 1, R100 += 1, R101 += 1 };
  s3 -> s3 [0, 65535] { R2202 += 1, R2139 += 1, R2140 += 1 };
  s3 -> s4 [0, 65535] { R2202 += 1, R2140 += 1, R101 += 1, R102 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [76, 65535] { R2202 += 1, R2140 += 1, R101 += 1 };
  s4 -> s1 [0, 74] { R2202 += 1, R2140 += 1, R101 += 1 };
  s4 -> s5 [0, 65535] { R2202 += 1 };
  s4 -> s4 [0, 65535] { R2202 += 1, R2140 += 1, R101 += 1, R102 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R2202 += 1, R2140 += 1 };
  s4 -> s1 [76, 65535] { R2202 += 1, R2140 += 1, R101 += 1 };
  s5 -> s5 [0, 65535] { R2202 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R2202 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2202 += 1, R2140 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 74] { R2204 += 1, R2142 += 1, R1782 += 1, R1784 += 1 };
  s0 -> s2 [0, 65535] { R2204 += 1, R2142 += 1, R1782 += 1, R1783 += 1, R1784 += 1 };
  s0 -> s3 [0, 65535] { R2204 += 1, R2141 += 1, R2142 += 1 };
  s0 -> s4 [0, 65535] { R2204 += 1, R2142 += 1, R1781 += 1, R1782 += 1 };
  s0 -> s0 [0, 65535] { R2203 += 1, R2204 += 1 };
  s0 -> s5 [75, 75] { R2204 += 1, R2142 += 1, R1782 += 1, R1784 += 1 };
  s0 -> s1 [76, 65535] { R2204 += 1, R2142 += 1, R1782 += 1, R1784 += 1 };
  s1 -> s1 [0, 74] { R2204 += 1, R2142 += 1, R1782 += 1, R1784 += 1 };
  s1 -> s5 [75, 75] { R2204 += 1, R2142 += 1, R1782 += 1, R1784 += 1 };
  s1 -> s1 [76, 65535] { R2204 += 1, R2142 += 1, R1782 += 1, R1784 += 1 };
  s2 -> s1 [0, 74] { R2204 += 1, R2142 += 1, R1782 += 1, R1784 += 1 };
  s2 -> s2 [0, 65535] { R2204 += 1, R2142 += 1, R1782 += 1, R1783 += 1, R1784 += 1 };
  s2 -> s5 [75, 75] { R2204 += 1, R2142 += 1, R1782 += 1, R1784 += 1 };
  s2 -> s1 [76, 65535] { R2204 += 1, R2142 += 1, R1782 += 1, R1784 += 1 };
  s3 -> s1 [0, 74] { R2204 += 1, R2142 += 1, R1782 += 1, R1784 += 1 };
  s3 -> s2 [0, 65535] { R2204 += 1, R2142 += 1, R1782 += 1, R1783 += 1, R1784 += 1 };
  s3 -> s3 [0, 65535] { R2204 += 1, R2141 += 1, R2142 += 1 };
  s3 -> s4 [0, 65535] { R2204 += 1, R2142 += 1, R1781 += 1, R1782 += 1 };
  s3 -> s5 [75, 75] { R2204 += 1, R2142 += 1, R1782 += 1, R1784 += 1 };
  s3 -> s1 [76, 65535] { R2204 += 1, R2142 += 1, R1782 += 1, R1784 += 1 };
  s4 -> s1 [0, 74] { R2204 += 1, R2142 += 1, R1782 += 1, R1784 += 1 };
  s4 -> s2 [0, 65535] { R2204 += 1, R2142 += 1, R1782 += 1, R1783 += 1, R1784 += 1 };
  s4 -> s4 [0, 65535] { R2204 += 1, R2142 += 1, R1781 += 1, R1782 += 1 };
  s4 -> s5 [75, 75] { R2204 += 1, R2142 += 1, R1782 += 1, R1784 += 1 };
  s4 -> s1 [76, 65535] { R2204 += 1, R2142 += 1, R1782 += 1, R1784 += 1 };
  s5 -> s6 [0, 65535] { R2204 += 1, R2142 += 1, R1782 += 1 };
  s5 -> s7 [0, 65535] { R2204 += 1, R2142 += 1 };
  s5 -> s8 [0, 65535] { R2204 += 1 };
  s5 -> s9 [0, 65535];
  s5 -> s5 [0, 65535] { R2204 += 1, R2142 += 1, R1782 += 1, R1784 += 1 };
  s6 -> s6 [0, 65535] { R2204 += 1, R2142 += 1, R1782 += 1 };
  s6 -> s7 [0, 65535] { R2204 += 1, R2142 += 1 };
  s6 -> s8 [0, 65535] { R2204 += 1 };
  s6 -> s9 [0, 65535];
  s7 -> s7 [0, 65535] { R2204 += 1, R2142 += 1 };
  s7 -> s8 [0, 65535] { R2204 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R2204 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  accepting s8, s5, s9, s6, s7;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R2206 += 1, R2144 += 1, R2121 += 1, R2123 += 1, R2124 += 1 };
  s0 -> s2 [0, 65535] { R2206 += 1, R2144 += 1 };
  s0 -> s3 [0, 65535] { R2206 += 1, R2143 += 1, R2144 += 1 };
  s0 -> s0 [0, 65535] { R2205 += 1, R2206 += 1 };
  s0 -> s4 [0, 65535] { R2206 += 1, R2144 += 1, R2121 += 1 };
  s1 -> s1 [0, 65535] { R2206 += 1, R2144 += 1, R2121 += 1, R2123 += 1, R2124 += 1 };
  s1 -> s2 [0, 65535] { R2206 += 1, R2144 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R2206 += 1 };
  s1 -> s4 [0, 65535] { R2206 += 1, R2144 += 1, R2121 += 1 };
  s2 -> s2 [0, 65535] { R2206 += 1, R2144 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R2206 += 1 };
  s3 -> s1 [0, 65535] { R2206 += 1, R2144 += 1, R2121 += 1, R2123 += 1, R2124 += 1 };
  s3 -> s2 [0, 65535] { R2206 += 1, R2144 += 1 };
  s3 -> s3 [0, 65535] { R2206 += 1, R2143 += 1, R2144 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R2206 += 1, R2144 += 1, R2121 += 1 };
  s4 -> s2 [0, 65535] { R2206 += 1, R2144 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R2206 += 1 };
  s4 -> s4 [0, 65535] { R2206 += 1, R2144 += 1, R2121 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2206 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R2207 += 1, R2208 += 1 };
  s0 -> s1 [0, 65535] { R2208 += 1, R2164 += 1, R21 += 1 };
  s0 -> s2 [0, 65535] { R2208 += 1, R2163 += 1, R2164 += 1 };
  s1 -> s1 [0, 65535] { R2208 += 1, R2164 += 1, R21 += 1 };
  s1 -> s4 [0, 65535] { R2208 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R2208 += 1, R2164 += 1, R21 += 1 };
  s2 -> s2 [0, 65535] { R2208 += 1, R2163 += 1, R2164 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2208 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R2210 += 1, R2166 += 1 };
  s0 -> s2 [0, 65535] { R2210 += 1, R2165 += 1, R2166 += 1 };
  s0 -> s0 [0, 65535] { R2209 += 1, R2210 += 1 };
  s0 -> s3 [70, 70] { R2210 += 1, R2166 += 1 };
  s0 -> s4 [70, 70] { R2210 += 1, R2166 += 1 };
  s0 -> s5 [75, 75] { R2210 += 1, R2166 += 1 };
  s0 -> s1 [76, 65535] { R2210 += 1, R2166 += 1 };
  s1 -> s1 [0, 69] { R2210 += 1, R2166 += 1 };
  s1 -> s3 [70, 70] { R2210 += 1, R2166 += 1 };
  s1 -> s4 [70, 70] { R2210 += 1, R2166 += 1 };
  s1 -> s5 [75, 75] { R2210 += 1, R2166 += 1 };
  s1 -> s1 [76, 65535] { R2210 += 1, R2166 += 1 };
  s2 -> s1 [0, 69] { R2210 += 1, R2166 += 1 };
  s2 -> s2 [0, 65535] { R2210 += 1, R2165 += 1, R2166 += 1 };
  s2 -> s3 [70, 70] { R2210 += 1, R2166 += 1 };
  s2 -> s4 [70, 70] { R2210 += 1, R2166 += 1 };
  s2 -> s5 [75, 75] { R2210 += 1, R2166 += 1 };
  s2 -> s1 [76, 65535] { R2210 += 1, R2166 += 1 };
  s4 -> s4 [0, 70] { R2210 += 1, R2166 += 1 };
  s4 -> s7 [75, 75] { R2210 += 1, R2166 += 1 };
  s4 -> s4 [76, 65535] { R2210 += 1, R2166 += 1 };
  s5 -> s5 [0, 69] { R2210 += 1, R2166 += 1 };
  s5 -> s5 [0, 65535] { R2210 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R2210 += 1, R2166 += 1 };
  s5 -> s8 [70, 70] { R2210 += 1, R2166 += 1 };
  s5 -> s5 [75, 65535] { R2210 += 1, R2166 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R2210 += 1, R2166 += 1 };
  s7 -> s7 [0, 65535] { R2210 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R2210 += 1, R2166 += 1 };
  s8 -> s8 [0, 65535] { R2210 += 1 };
  s8 -> s6 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R2212 += 1, R2168 += 1, R83 += 1 };
  s0 -> s0 [0, 65535] { R2211 += 1, R2212 += 1 };
  s0 -> s2 [0, 65535] { R2212 += 1, R2167 += 1, R2168 += 1 };
  s0 -> s3 [70, 70] { R2212 += 1, R2168 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R2212 += 1, R2168 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R2212 += 1, R2168 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R2212 += 1, R2168 += 1, R83 += 1 };
  s1 -> s1 [0, 65535] { R2212 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R2212 += 1, R2168 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R2212 += 1, R2168 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R2212 += 1, R2168 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R2212 += 1, R2168 += 1, R83 += 1 };
  s2 -> s2 [0, 65535] { R2212 += 1, R2167 += 1, R2168 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R2212 += 1, R2168 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R2212 += 1, R2168 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R2212 += 1, R2168 += 1, R83 += 1 };
  s3 -> s3 [0, 65535] { R2212 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2212 += 1, R2168 += 1, R83 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R2212 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2212 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R2214 += 1, R2170 += 1, R85 += 1 };
  s0 -> s0 [0, 65535] { R2213 += 1, R2214 += 1 };
  s0 -> s2 [0, 65535] { R2214 += 1, R2169 += 1, R2170 += 1 };
  s0 -> s3 [70, 70] { R2214 += 1, R2170 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R2214 += 1, R2170 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R2214 += 1, R2170 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R2214 += 1, R2170 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R2214 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R2214 += 1, R2170 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R2214 += 1, R2170 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R2214 += 1, R2170 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R2214 += 1, R2170 += 1, R85 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2214 += 1, R2169 += 1, R2170 += 1 };
  s2 -> s3 [70, 70] { R2214 += 1, R2170 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R2214 += 1, R2170 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R2214 += 1, R2170 += 1, R85 += 1 };
  s3 -> s3 [0, 65535] { R2214 += 1, R2170 += 1, R85 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R2214 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2214 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2214 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R2216 += 1, R2172 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R2216 += 1, R2172 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R2215 += 1, R2216 += 1 };
  s0 -> s3 [0, 65535] { R2216 += 1, R2171 += 1, R2172 += 1 };
  s0 -> s4 [70, 70] { R2216 += 1, R2172 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R2216 += 1, R2172 += 1, R87 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R2216 += 1, R2172 += 1, R87 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R2216 += 1, R2172 += 1, R88 += 1 };
  s0 -> s1 [71, 74] { R2216 += 1, R2172 += 1, R88 += 1 };
  s0 -> s2 [71, 65535] { R2216 += 1, R2172 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R2216 += 1, R2172 += 1, R88 += 1 };
  s0 -> s1 [76, 65535] { R2216 += 1, R2172 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R2216 += 1, R2172 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R2216 += 1, R2172 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R2216 += 1, R2172 += 1, R88 += 1 };
  s1 -> s1 [71, 74] { R2216 += 1, R2172 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R2216 += 1, R2172 += 1, R88 += 1 };
  s1 -> s1 [76, 65535] { R2216 += 1, R2172 += 1, R88 += 1 };
  s2 -> s1 [0, 69] { R2216 += 1, R2172 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R2216 += 1, R2172 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R2216 += 1, R2172 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R2216 += 1, R2172 += 1, R87 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R2216 += 1, R2172 += 1, R87 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R2216 += 1, R2172 += 1, R88 += 1 };
  s2 -> s1 [71, 74] { R2216 += 1, R2172 += 1, R88 += 1 };
  s2 -> s2 [71, 65535] { R2216 += 1, R2172 += 1, R87 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R2216 += 1, R2172 += 1, R88 += 1 };
  s2 -> s1 [76, 65535] { R2216 += 1, R2172 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R2216 += 1, R2172 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R2216 += 1, R2172 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R2216 += 1, R2171 += 1, R2172 += 1 };
  s3 -> s4 [70, 70] { R2216 += 1, R2172 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R2216 += 1, R2172 += 1, R87 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R2216 += 1, R2172 += 1, R87 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R2216 += 1, R2172 += 1, R88 += 1 };
  s3 -> s1 [71, 74] { R2216 += 1, R2172 += 1, R88 += 1 };
  s3 -> s2 [71, 65535] { R2216 += 1, R2172 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R2216 += 1, R2172 += 1, R88 += 1 };
  s3 -> s1 [76, 65535] { R2216 += 1, R2172 += 1, R88 += 1 };
  s4 -> s4 [0, 74] { R2216 += 1, R2172 += 1, R88 += 1 };
  s4 -> s11 [75, 75] { R2216 += 1, R2172 += 1, R88 += 1 };
  s4 -> s4 [76, 65535] { R2216 += 1, R2172 += 1, R88 += 1 };
  s6 -> s4 [0, 74] { R2216 += 1, R2172 += 1, R88 += 1 };
  s6 -> s6 [0, 65535] { R2216 += 1, R2172 += 1, R87 += 1, R88 += 1 };
  s6 -> s11 [75, 75] { R2216 += 1, R2172 += 1, R88 += 1 };
  s6 -> s4 [76, 65535] { R2216 += 1, R2172 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R2216 += 1, R2172 += 1, R88 += 1 };
  s8 -> s8 [0, 65535] { R2216 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R2216 += 1, R2172 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R2216 += 1, R2172 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R2216 += 1, R2172 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R2216 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R2216 += 1, R2172 += 1, R88 += 1 };
  s11 -> s12 [0, 65535] { R2216 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R2216 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R2218 += 1, R2174 += 1, R91 += 1, R92 += 1 };
  s0 -> s2 [0, 65535] { R2218 += 1, R2173 += 1, R2174 += 1 };
  s0 -> s0 [0, 65535] { R2217 += 1, R2218 += 1 };
  s0 -> s3 [70, 70] { R2218 += 1, R2174 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R2218 += 1, R2174 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R2218 += 1, R2174 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R2218 += 1, R2174 += 1, R91 += 1, R92 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2218 += 1 };
  s1 -> s3 [70, 70] { R2218 += 1, R2174 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R2218 += 1, R2174 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R2218 += 1, R2174 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R2218 += 1, R2174 += 1, R91 += 1, R92 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2218 += 1, R2173 += 1, R2174 += 1 };
  s2 -> s3 [70, 70] { R2218 += 1, R2174 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R2218 += 1, R2174 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R2218 += 1, R2174 += 1, R91 += 1, R92 += 1 };
  s3 -> s6 [0, 65535] { R2218 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2218 += 1, R2174 += 1, R91 += 1, R92 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2218 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2218 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R2220 += 1, R2176 += 1, R97 += 1, R98 += 1 };
  s0 -> s0 [0, 65535] { R2219 += 1, R2220 += 1 };
  s0 -> s2 [0, 65535] { R2220 += 1, R2175 += 1, R2176 += 1 };
  s0 -> s3 [70, 70] { R2220 += 1, R2176 += 1, R97 += 1, R98 += 1 };
  s0 -> s4 [70, 70] { R2220 += 1, R2176 += 1, R97 += 1, R98 += 1 };
  s0 -> s1 [71, 65535] { R2220 += 1, R2176 += 1, R97 += 1, R98 += 1 };
  s1 -> s1 [0, 69] { R2220 += 1, R2176 += 1, R97 += 1, R98 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R2220 += 1 };
  s1 -> s3 [70, 70] { R2220 += 1, R2176 += 1, R97 += 1, R98 += 1 };
  s1 -> s4 [70, 70] { R2220 += 1, R2176 += 1, R97 += 1, R98 += 1 };
  s1 -> s1 [71, 65535] { R2220 += 1, R2176 += 1, R97 += 1, R98 += 1 };
  s2 -> s1 [0, 69] { R2220 += 1, R2176 += 1, R97 += 1, R98 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R2220 += 1, R2175 += 1, R2176 += 1 };
  s2 -> s3 [70, 70] { R2220 += 1, R2176 += 1, R97 += 1, R98 += 1 };
  s2 -> s4 [70, 70] { R2220 += 1, R2176 += 1, R97 += 1, R98 += 1 };
  s2 -> s1 [71, 65535] { R2220 += 1, R2176 += 1, R97 += 1, R98 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R2220 += 1 };
  s4 -> s5 [0, 65535] { R2220 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2220 += 1, R2176 += 1, R97 += 1, R98 += 1 };
  s5 -> s5 [0, 65535] { R2220 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R2222 += 1, R2178 += 1, R1777 += 1, R1778 += 1 };
  s0 -> s2 [0, 65535] { R2222 += 1, R2177 += 1, R2178 += 1 };
  s0 -> s0 [0, 65535] { R2221 += 1, R2222 += 1 };
  s0 -> s3 [70, 70] { R2222 += 1, R2178 += 1, R1777 += 1, R1778 += 1 };
  s0 -> s4 [70, 70] { R2222 += 1, R2178 += 1, R1777 += 1, R1778 += 1 };
  s0 -> s1 [71, 65535] { R2222 += 1, R2178 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s1 [0, 69] { R2222 += 1, R2178 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2222 += 1 };
  s1 -> s3 [70, 70] { R2222 += 1, R2178 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s4 [70, 70] { R2222 += 1, R2178 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s1 [71, 65535] { R2222 += 1, R2178 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s1 [0, 69] { R2222 += 1, R2178 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s2 [0, 65535] { R2222 += 1, R2177 += 1, R2178 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R2222 += 1, R2178 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s4 [70, 70] { R2222 += 1, R2178 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s1 [71, 65535] { R2222 += 1, R2178 += 1, R1777 += 1, R1778 += 1 };
  s3 -> s3 [0, 65535] { R2222 += 1, R2178 += 1, R1777 += 1, R1778 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R2222 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2222 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2222 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R2224 += 1, R2180 += 1, R2116 += 1, R2118 += 1, R2119 += 1 };
  s0 -> s2 [0, 69] { R2224 += 1, R2180 += 1, R2116 += 1, R2117 += 1, R2118 += 1 };
  s0 -> s3 [0, 69] { R2224 += 1, R2180 += 1, R2115 += 1, R2116 += 1 };
  s0 -> s0 [0, 65535] { R2223 += 1, R2224 += 1 };
  s0 -> s4 [0, 65535] { R2224 += 1, R2179 += 1, R2180 += 1 };
  s0 -> s5 [70, 70] { R2224 += 1, R2180 += 1, R2116 += 1, R2118 += 1, R2119 += 1 };
  s0 -> s6 [70, 70] { R2224 += 1, R2180 += 1, R2116 += 1, R2117 += 1, R2118 += 1 };
  s0 -> s7 [70, 70] { R2224 += 1, R2180 += 1, R2116 += 1, R2118 += 1, R2119 += 1 };
  s0 -> s8 [70, 70] { R2224 += 1, R2180 += 1, R2115 += 1, R2116 += 1 };
  s0 -> s9 [70, 70] { R2224 += 1, R2180 += 1, R2116 += 1, R2117 += 1, R2118 += 1 };
  s0 -> s10 [70, 70] { R2224 += 1, R2180 += 1, R2115 += 1, R2116 += 1 };
  s0 -> s1 [71, 65535] { R2224 += 1, R2180 += 1, R2116 += 1, R2118 += 1, R2119 += 1 };
  s0 -> s2 [71, 65535] { R2224 += 1, R2180 += 1, R2116 += 1, R2117 += 1, R2118 += 1 };
  s0 -> s3 [71, 65535] { R2224 += 1, R2180 += 1, R2115 += 1, R2116 += 1 };
  s1 -> s1 [0, 69] { R2224 += 1, R2180 += 1, R2116 += 1, R2118 += 1, R2119 += 1 };
  s1 -> s1 [0, 65535] { R2224 += 1 };
  s1 -> s11 [0, 65535];
  s1 -> s5 [70, 70] { R2224 += 1, R2180 += 1, R2116 += 1, R2118 += 1, R2119 += 1 };
  s1 -> s7 [70, 70] { R2224 += 1, R2180 += 1, R2116 += 1, R2118 += 1, R2119 += 1 };
  s1 -> s1 [71, 65535] { R2224 += 1, R2180 += 1, R2116 += 1, R2118 += 1, R2119 += 1 };
  s2 -> s1 [0, 69] { R2224 += 1, R2180 += 1, R2116 += 1, R2118 += 1, R2119 += 1 };
  s2 -> s2 [0, 69] { R2224 += 1, R2180 += 1, R2116 += 1, R2117 += 1, R2118 += 1 };
  s2 -> s5 [70, 70] { R2224 += 1, R2180 += 1, R2116 += 1, R2118 += 1, R2119 += 1 };
  s2 -> s6 [70, 70] { R2224 += 1, R2180 += 1, R2116 += 1, R2117 += 1, R2118 += 1 };
  s2 -> s7 [70, 70] { R2224 += 1, R2180 += 1, R2116 += 1, R2118 += 1, R2119 += 1 };
  s2 -> s9 [70, 70] { R2224 += 1, R2180 += 1, R2116 += 1, R2117 += 1, R2118 += 1 };
  s2 -> s1 [71, 65535] { R2224 += 1, R2180 += 1, R2116 += 1, R2118 += 1, R2119 += 1 };
  s2 -> s2 [71, 65535] { R2224 += 1, R2180 += 1, R2116 += 1, R2117 += 1, R2118 += 1 };
  s3 -> s1 [0, 69] { R2224 += 1, R2180 += 1, R2116 += 1, R2118 += 1, R2119 += 1 };
  s3 -> s2 [0, 69] { R2224 += 1, R2180 += 1, R2116 += 1, R2117 += 1, R2118 += 1 };
  s3 -> s3 [0, 69] { R2224 += 1, R2180 += 1, R2115 += 1, R2116 += 1 };
  s3 -> s5 [70, 70] { R2224 += 1, R2180 += 1, R2116 += 1, R2118 += 1, R2119 += 1 };
  s3 -> s6 [70, 70] { R2224 += 1, R2180 += 1, R2116 += 1, R2117 += 1, R2118 += 1 };
  s3 -> s7 [70, 70] { R2224 += 1, R2180 += 1, R2116 += 1, R2118 += 1, R2119 += 1 };
  s3 -> s8 [70, 70] { R2224 += 1, R2180 += 1, R2115 += 1, R2116 += 1 };
  s3 -> s9 [70, 70] { R2224 += 1, R2180 += 1, R2116 += 1, R2117 += 1, R2118 += 1 };
  s3 -> s10 [70, 70] { R2224 += 1, R2180 += 1, R2115 += 1, R2116 += 1 };
  s3 -> s1 [71, 65535] { R2224 += 1, R2180 += 1, R2116 += 1, R2118 += 1, R2119 += 1 };
  s3 -> s2 [71, 65535] { R2224 += 1, R2180 += 1, R2116 += 1, R2117 += 1, R2118 += 1 };
  s3 -> s3 [71, 65535] { R2224 += 1, R2180 += 1, R2115 += 1, R2116 += 1 };
  s4 -> s1 [0, 69] { R2224 += 1, R2180 += 1, R2116 += 1, R2118 += 1, R2119 += 1 };
  s4 -> s2 [0, 69] { R2224 += 1, R2180 += 1, R2116 += 1, R2117 += 1, R2118 += 1 };
  s4 -> s3 [0, 69] { R2224 += 1, R2180 += 1, R2115 += 1, R2116 += 1 };
  s4 -> s4 [0, 65535] { R2224 += 1, R2179 += 1, R2180 += 1 };
  s4 -> s5 [70, 70] { R2224 += 1, R2180 += 1, R2116 += 1, R2118 += 1, R2119 += 1 };
  s4 -> s6 [70, 70] { R2224 += 1, R2180 += 1, R2116 += 1, R2117 += 1, R2118 += 1 };
  s4 -> s7 [70, 70] { R2224 += 1, R2180 += 1, R2116 += 1, R2118 += 1, R2119 += 1 };
  s4 -> s8 [70, 70] { R2224 += 1, R2180 += 1, R2115 += 1, R2116 += 1 };
  s4 -> s9 [70, 70] { R2224 += 1, R2180 += 1, R2116 += 1, R2117 += 1, R2118 += 1 };
  s4 -> s10 [70, 70] { R2224 += 1, R2180 += 1, R2115 += 1, R2116 += 1 };
  s4 -> s1 [71, 65535] { R2224 += 1, R2180 += 1, R2116 += 1, R2118 += 1, R2119 += 1 };
  s4 -> s2 [71, 65535] { R2224 += 1, R2180 += 1, R2116 += 1, R2117 += 1, R2118 += 1 };
  s4 -> s3 [71, 65535] { R2224 += 1, R2180 += 1, R2115 += 1, R2116 += 1 };
  s5 -> s12 [0, 65535] { R2224 += 1 };
  s5 -> s5 [0, 65535] { R2224 += 1, R2180 += 1, R2116 += 1, R2118 += 1, R2119 += 1 };
  s5 -> s11 [0, 65535];
  s6 -> s5 [0, 65535] { R2224 += 1, R2180 += 1, R2116 += 1, R2118 += 1, R2119 += 1 };
  s6 -> s6 [0, 65535] { R2224 += 1, R2180 += 1, R2116 += 1, R2117 += 1, R2118 += 1 };
  s7 -> s7 [0, 65535] { R2224 += 1 };
  s7 -> s11 [0, 65535];
  s10 -> s5 [0, 65535] { R2224 += 1, R2180 += 1, R2116 += 1, R2118 += 1, R2119 += 1 };
  s10 -> s6 [0, 65535] { R2224 += 1, R2180 += 1, R2116 += 1, R2117 += 1, R2118 += 1 };
  s10 -> s10 [0, 65535] { R2224 += 1, R2180 += 1, R2115 += 1, R2116 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R2224 += 1 };
  s12 -> s11 [0, 65535];
  accepting s12, s5, s1, s7, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R2142 && R3 = R2224 && R23 - R2224 = -1 && R24 = R2224 && R25 - R2224 = -1 && R26 = R2224 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R1782 + -1*R1778 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R1782 + -1*R1778 - R66 = 0 && R55 + R96 + R93 + -1*R1784 + -1*R1780 - R68 = 0 && R65 + R1781 + R1777 = 0 && R67 + R1783 + R1779 = 0 && R2141 = 0 && R2165 = 0 && R2166 = 0 && R2171 = 0 && R2172 = 0 && R2179 = 0 && R2180 = 0 && R2181 = 0 && R2182 = R2224 && R2183 = 0 && R2184 = R2224 && R2185 = 0 && R2186 = R2224 && R2187 = 0 && R2188 = R2224 && R2189 = 0 && R2190 = R2224 && R2191 = 0 && R2192 = R2224 && R2193 = 0 && R2194 = R2224 && R2195 = 0 && R2196 = R2224 && R2197 = 0 && R2198 = R2224 && R2199 = 0 && R2200 = R2224 && R2201 = 0 && R2202 = R2224 && R2203 = 0 && R2204 = R2224 && R2205 = 0 && R2206 = R2224 && R2207 = 0 && R2208 = R2224 && R2209 = 0 && R2210 = R2224 && R2211 = 0 && R2212 = R2224 && R2213 = 0 && R2214 = R2224 && R2215 = 0 && R2216 = R2224 && R2217 = 0 && R2218 = R2224 && R2219 = 0 && R2220 = R2224 && R2221 = 0 && R2222 = R2224 && R2223 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R102 + R99 < 1 && -1*R1782 + -1*R1778 - R66 < 1 && -1*R1784 + -1*R1780 - R68 < 1 && -1 < R2142 && 0 < R2224 && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R1782 + -1*R1778 - R66 = 0 || R66 + R1782 + R1778 < 1) && (R59 + R100 + R97 != 0 || R60 + R101 + R98 + -1*R1782 + -1*R1778 - R66 = 0 || R66 + R1782 + R1778 < 1) && (R66 + R1782 + R1778 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R1784 + R1780 < 1) && (R53 + R94 + R91 = 0 || R68 + R1784 + R1780 < 1))) && (R66 + R1782 + R1778 != 0 || ((R59 + R100 + R97 != 0 || R60 + R101 + R98 = 0 || R68 + R1784 + R1780 < 1) && (R59 + R100 + R97 = 0 || R68 + R1784 + R1780 < 1))) && (R66 + R1782 + R1778 != 0 || ((R73 + R2120 + R2115 != 0 || R74 + R2121 + R2116 = 0 || R68 + R1784 + R1780 < 1) && (R73 + R2120 + R2115 = 0 || R68 + R1784 + R1780 < 1))) && (R68 + R1784 + R1780 != 0 || R77 + R2124 + R2119 = 0 || (R75 + R2122 + R2117 = 0 && R76 + R2123 + R2118 = 0)) && (R73 + R2120 + R2115 != 0 || R66 + R1782 + R1778 + -1*R2121 + -1*R2116 - R74 = 0 || R66 + R1782 + R1778 < 1) && (R75 + R2122 + R2117 != 0 || R68 + R1784 + R1780 + -1*R2123 + -1*R2118 - R76 = 0 || R68 + R1784 + R1780 < 1) && (R2125 != 0 || R2126 = R2142 || (R20 = 0 && R2142 = 0)) && (R2127 != 0 || R2128 = R2142 || (R20 = 0 && R2142 = 0)) && (R2129 != 0 || R2130 = R2142 || (R20 = 0 && R2142 = 0)) && (R2131 != 0 || R2132 = R2142 || (R20 = 0 && R2142 = 0)) && (R2133 != 0 || R2134 = R2142 || (R20 = 0 && R2142 = 0)) && (R2135 != 0 || R2136 = R2142 || (R20 = 0 && R2142 = 0)) && (R2137 != 0 || R2138 = R2142 || (R20 = 0 && R2142 = 0)) && (R2139 != 0 || R2140 = R2142 || (R20 = 0 && R2142 = 0)) && (R2143 != 0 || R2142 = R2144 || (R20 = 0 && R2142 = 0)) && (R21 = 0 || (R2163 = 0 && R2164 = 0)) && (R21 = 0 || (R2167 = 0 && R2168 = 0)) && (R21 = 0 || (R2169 = 0 && R2170 = 0)) && (R21 = 0 || (R2173 = 0 && R2174 = 0)) && (R21 = 0 || (R2175 = 0 && R2176 = 0)) && (R21 = 0 || (R2177 = 0 && R2178 = 0)) && (R22 = 0 || (R2145 = 0 && R2146 = 0)) && (R22 = 0 || (R2147 = 0 && R2148 = 0)) && (R22 = 0 || (R2149 = 0 && R2150 = 0)) && (R22 = 0 || (R2151 = 0 && R2152 = 0)) && (R22 = 0 || (R2153 = 0 && R2154 = 0)) && (R22 = 0 || (R2155 = 0 && R2156 = 0)) && (R22 = 0 || (R2157 = 0 && R2158 = 0)) && (R22 = 0 || (R2159 = 0 && R2160 = 0)) && (R22 = 0 || (R2161 = 0 && R2162 = 0)) && (R53 + R94 + R91 = 0 || R66 + R1782 + R1778 < 1) && (R59 + R100 + R97 = 0 || R66 + R1782 + R1778 < 1) && (R73 + R2120 + R2115 = 0 || R66 + R1782 + R1778 < 1) && (R75 + R2122 + R2117 = 0 || R68 + R1784 + R1780 < 1) && (R2125 = 0 || (R20 = 0 && R2142 = 0)) && (R2127 = 0 || (R20 = 0 && R2142 = 0)) && (R2129 = 0 || (R20 = 0 && R2142 = 0)) && (R2131 = 0 || (R20 = 0 && R2142 = 0)) && (R2133 = 0 || (R20 = 0 && R2142 = 0)) && (R2135 = 0 || (R20 = 0 && R2142 = 0)) && (R2137 = 0 || (R20 = 0 && R2142 = 0)) && (R2139 = 0 || (R20 = 0 && R2142 = 0)) && (R2143 = 0 || (R20 = 0 && R2142 = 0));
// End of Parikh automata intersection problem
