// Parikh automata intersection problem, generated by OSTRICH+
counter int R12, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R3451, R3452, R3453, R3454, R3455, R3456, R3457, R3458, R3459, R3460, R3461, R3462, R3463, R3464, R3465, R3466, R3467, R3468, R3469, R3470, R3471, R3472, R3473, R3474, R3475, R3476, R3477, R3478, R3479, R3480, R3481, R3482, R3483, R3484, R3485, R3486, R3487, R3488, R3489, R3490, R3491, R3492, R3493, R3494, R3495, R3496, R3497, R3498, R3499, R3500, R3501, R3502, R3503, R3504, R3505, R3506, R3507, R3508, R3509, R3510, R3511, R3512, R3513, R3514, R3515, R3516, R3517, R3518, R3519, R3520, R3521, R3522, R3523, R3524, R3525, R3526, R3527, R3528, R3529, R3530, R3531, R3532, R3533, R3534, R3535, R3536, R3537, R3538, R3539, R3540, R3541, R3542, R3543, R3544, R3545, R3546, R3547, R3548, R3549, R3550, R3551, R3552, R3553, R3554, R3555, R3556, R3557, R3558, R3559, R3560, R3561, R3562, R3563, R3564, R3565, R3566, R3567, R3568, R3569, R3570, R3571, R3572, R3573, R3574, R4, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R3495 += 1, R3496 += 1 };
  s0 -> s1 [0, 65535] { R3496 += 1, R22 += 1 };
  s1 -> s1 [0, 65535] { R3496 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R3498 += 1 };
  s0 -> s0 [0, 65535] { R3497 += 1, R3498 += 1 };
  s0 -> s2 [70, 70] { R3498 += 1 };
  s0 -> s3 [70, 70] { R3498 += 1 };
  s0 -> s1 [76, 65535] { R3498 += 1 };
  s1 -> s1 [0, 69] { R3498 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3498 += 1 };
  s1 -> s3 [70, 70] { R3498 += 1 };
  s1 -> s1 [76, 65535] { R3498 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R3498 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R3498 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R3500 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R3499 += 1, R3500 += 1 };
  s0 -> s2 [70, 70] { R3500 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R3500 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R3500 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R3500 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3500 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R3500 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R3500 += 1, R45 += 1 };
  s2 -> s2 [0, 65535] { R3500 += 1, R45 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R3502 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R3501 += 1, R3502 += 1 };
  s0 -> s2 [70, 70] { R3502 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R3502 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R3502 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R3502 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3502 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R3502 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R3502 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R3502 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R3504 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R3503 += 1, R3504 += 1 };
  s0 -> s2 [70, 70] { R3504 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R3504 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R3504 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R3504 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3504 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R3504 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R3504 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535] { R3504 += 1, R49 += 1, R50 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R3506 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R3505 += 1, R3506 += 1 };
  s0 -> s2 [70, 70] { R3506 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R3506 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R3506 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R3506 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3506 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R3506 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R3506 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R3506 += 1, R53 += 1, R54 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R3508 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R3507 += 1, R3508 += 1 };
  s0 -> s2 [70, 70] { R3508 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R3508 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R3508 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R3508 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3508 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R3508 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R3508 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535] { R3508 += 1, R59 += 1, R60 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R3510 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R3509 += 1, R3510 += 1 };
  s0 -> s2 [70, 70] { R3510 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R3510 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R3510 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R3510 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3510 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R3510 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R3510 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R3510 += 1, R65 += 1, R66 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R3512 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R3511 += 1, R3512 += 1 };
  s0 -> s2 [70, 70] { R3512 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R3512 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R3512 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R3512 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3512 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R3512 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R3512 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3512 += 1, R73 += 1, R74 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R3532 += 1 };
  s0 -> s0 [0, 65535] { R3531 += 1, R3532 += 1 };
  s0 -> s2 [70, 70] { R3532 += 1 };
  s0 -> s1 [71, 65535] { R3532 += 1 };
  s1 -> s1 [0, 69] { R3532 += 1 };
  s1 -> s2 [70, 70] { R3532 += 1 };
  s1 -> s1 [71, 65535] { R3532 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R3532 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R3534 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R3533 += 1, R3534 += 1 };
  s1 -> s1 [0, 65535] { R3534 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R3536 += 1 };
  s0 -> s2 [0, 65535] { R3536 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R3535 += 1, R3536 += 1 };
  s0 -> s3 [70, 70] { R3536 += 1 };
  s0 -> s1 [71, 65535] { R3536 += 1 };
  s1 -> s1 [0, 69] { R3536 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R3536 += 1 };
  s1 -> s1 [71, 65535] { R3536 += 1 };
  s2 -> s1 [0, 69] { R3536 += 1 };
  s2 -> s2 [0, 65535] { R3536 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R3536 += 1 };
  s2 -> s1 [71, 65535] { R3536 += 1 };
  s3 -> s3 [0, 65535] { R3536 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R3538 += 1, R3476 += 1 };
  s0 -> s0 [0, 65535] { R3537 += 1, R3538 += 1 };
  s0 -> s2 [0, 65535] { R3538 += 1, R3475 += 1, R3476 += 1 };
  s0 -> s1 [71, 65535] { R3538 += 1, R3476 += 1 };
  s1 -> s1 [0, 69] { R3538 += 1, R3476 += 1 };
  s1 -> s1 [0, 65535] { R3538 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R3538 += 1, R3476 += 1 };
  s2 -> s1 [0, 69] { R3538 += 1, R3476 += 1 };
  s2 -> s2 [0, 65535] { R3538 += 1, R3475 += 1, R3476 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R3538 += 1, R3476 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R3540 += 1, R3477 += 1, R3478 += 1 };
  s0 -> s0 [0, 65535] { R3539 += 1, R3540 += 1 };
  s0 -> s2 [0, 65535] { R3540 += 1, R3478 += 1, R20 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3540 += 1, R3477 += 1, R3478 += 1 };
  s1 -> s2 [0, 65535] { R3540 += 1, R3478 += 1, R20 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R3540 += 1, R3478 += 1, R20 += 1 };
  s2 -> s4 [0, 65535] { R3540 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3540 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R3542 += 1, R3480 += 1 };
  s0 -> s0 [0, 65535] { R3541 += 1, R3542 += 1 };
  s0 -> s2 [0, 65535] { R3542 += 1, R3479 += 1, R3480 += 1 };
  s0 -> s1 [75, 65535] { R3542 += 1, R3480 += 1 };
  s1 -> s1 [0, 70] { R3542 += 1, R3480 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3542 += 1 };
  s1 -> s1 [75, 65535] { R3542 += 1, R3480 += 1 };
  s2 -> s1 [0, 70] { R3542 += 1, R3480 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R3542 += 1, R3479 += 1, R3480 += 1 };
  s2 -> s1 [75, 65535] { R3542 += 1, R3480 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R3544 += 1, R3482 += 1, R84 += 1 };
  s0 -> s0 [0, 65535] { R3543 += 1, R3544 += 1 };
  s0 -> s2 [0, 65535] { R3544 += 1, R3481 += 1, R3482 += 1 };
  s1 -> s1 [0, 65535] { R3544 += 1, R3482 += 1, R84 += 1 };
  s1 -> s4 [0, 65535] { R3544 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R3544 += 1, R3482 += 1, R84 += 1 };
  s2 -> s2 [0, 65535] { R3544 += 1, R3481 += 1, R3482 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3544 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R3546 += 1, R3484 += 1 };
  s0 -> s2 [0, 65535] { R3546 += 1, R3483 += 1, R3484 += 1 };
  s0 -> s0 [0, 65535] { R3545 += 1, R3546 += 1 };
  s0 -> s3 [0, 65535] { R3546 += 1, R3484 += 1, R86 += 1 };
  s0 -> s1 [76, 65535] { R3546 += 1, R3484 += 1 };
  s1 -> s1 [0, 74] { R3546 += 1, R3484 += 1 };
  s1 -> s1 [0, 65535] { R3546 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [76, 65535] { R3546 += 1, R3484 += 1 };
  s2 -> s1 [0, 74] { R3546 += 1, R3484 += 1 };
  s2 -> s2 [0, 65535] { R3546 += 1, R3483 += 1, R3484 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R3546 += 1, R3484 += 1, R86 += 1 };
  s2 -> s1 [76, 65535] { R3546 += 1, R3484 += 1 };
  s3 -> s1 [0, 74] { R3546 += 1, R3484 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R3546 += 1 };
  s3 -> s3 [0, 65535] { R3546 += 1, R3484 += 1, R86 += 1 };
  s3 -> s1 [76, 65535] { R3546 += 1, R3484 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3546 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s0 [0, 65535] { R3547 += 1, R3548 += 1 };
  s0 -> s1 [0, 65535] { R3548 += 1, R3486 += 1 };
  s0 -> s2 [0, 65535] { R3548 += 1, R3485 += 1, R3486 += 1 };
  s0 -> s3 [0, 65535] { R3548 += 1, R3486 += 1, R90 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R3548 += 1 };
  s1 -> s1 [0, 65535] { R3548 += 1, R3486 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R3548 += 1, R3486 += 1 };
  s2 -> s2 [0, 65535] { R3548 += 1, R3485 += 1, R3486 += 1 };
  s2 -> s3 [0, 65535] { R3548 += 1, R3486 += 1, R90 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R3548 += 1 };
  s3 -> s1 [0, 65535] { R3548 += 1, R3486 += 1 };
  s3 -> s3 [0, 65535] { R3548 += 1, R3486 += 1, R90 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3548 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R3550 += 1, R3488 += 1, R94 += 1, R95 += 1 };
  s0 -> s0 [0, 65535] { R3549 += 1, R3550 += 1 };
  s0 -> s2 [0, 65535] { R3550 += 1, R3488 += 1, R95 += 1, R96 += 1 };
  s0 -> s3 [0, 65535] { R3550 += 1, R3487 += 1, R3488 += 1 };
  s1 -> s1 [0, 65535] { R3550 += 1, R3488 += 1, R94 += 1, R95 += 1 };
  s1 -> s2 [0, 65535] { R3550 += 1, R3488 += 1, R95 += 1, R96 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R3550 += 1 };
  s2 -> s5 [0, 65535] { R3550 += 1, R3488 += 1 };
  s2 -> s2 [0, 65535] { R3550 += 1, R3488 += 1, R95 += 1, R96 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s6 [0, 65535] { R3550 += 1 };
  s3 -> s1 [0, 65535] { R3550 += 1, R3488 += 1, R94 += 1, R95 += 1 };
  s3 -> s2 [0, 65535] { R3550 += 1, R3488 += 1, R95 += 1, R96 += 1 };
  s3 -> s3 [0, 65535] { R3550 += 1, R3487 += 1, R3488 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3550 += 1, R3488 += 1 };
  s5 -> s4 [0, 65535];
  s5 -> s6 [0, 65535] { R3550 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R3550 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R3552 += 1, R3490 += 1, R3455 += 1 };
  s0 -> s2 [0, 65535] { R3552 += 1, R3489 += 1, R3490 += 1 };
  s0 -> s1 [0, 65535] { R3552 += 1, R3490 += 1 };
  s0 -> s0 [0, 65535] { R3551 += 1, R3552 += 1 };
  s0 -> s1 [76, 65535] { R3552 += 1, R3490 += 1, R3455 += 1 };
  s1 -> s1 [0, 74] { R3552 += 1, R3490 += 1, R3455 += 1 };
  s1 -> s1 [0, 65535] { R3552 += 1, R3490 += 1 };
  s1 -> s4 [0, 65535] { R3552 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [76, 65535] { R3552 += 1, R3490 += 1, R3455 += 1 };
  s2 -> s1 [0, 74] { R3552 += 1, R3490 += 1, R3455 += 1 };
  s2 -> s2 [0, 65535] { R3552 += 1, R3489 += 1, R3490 += 1 };
  s2 -> s1 [0, 65535] { R3552 += 1, R3490 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [76, 65535] { R3552 += 1, R3490 += 1, R3455 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3552 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R3554 += 1, R3492 += 1 };
  s0 -> s2 [0, 65535] { R3554 += 1, R3491 += 1, R3492 += 1 };
  s0 -> s3 [0, 65535] { R3554 += 1, R3492 += 1, R3462 += 1, R3464 += 1 };
  s0 -> s0 [0, 65535] { R3553 += 1, R3554 += 1 };
  s0 -> s4 [0, 65535] { R3554 += 1, R3492 += 1, R3462 += 1 };
  s1 -> s1 [0, 65535] { R3554 += 1, R3492 += 1 };
  s1 -> s5 [0, 65535] { R3554 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s1 [0, 65535] { R3554 += 1, R3492 += 1 };
  s2 -> s2 [0, 65535] { R3554 += 1, R3491 += 1, R3492 += 1 };
  s2 -> s3 [0, 65535] { R3554 += 1, R3492 += 1, R3462 += 1, R3464 += 1 };
  s2 -> s4 [0, 65535] { R3554 += 1, R3492 += 1, R3462 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s1 [0, 65535] { R3554 += 1, R3492 += 1 };
  s3 -> s3 [0, 65535] { R3554 += 1, R3492 += 1, R3462 += 1, R3464 += 1 };
  s3 -> s4 [0, 65535] { R3554 += 1, R3492 += 1, R3462 += 1 };
  s3 -> s5 [0, 65535] { R3554 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s1 [0, 65535] { R3554 += 1, R3492 += 1 };
  s4 -> s4 [0, 65535] { R3554 += 1, R3492 += 1, R3462 += 1 };
  s4 -> s5 [0, 65535] { R3554 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3554 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R3556 += 1, R3493 += 1, R3494 += 1 };
  s0 -> s2 [0, 65535] { R3556 += 1, R3494 += 1, R3471 += 1 };
  s0 -> s0 [0, 65535] { R3555 += 1, R3556 += 1 };
  s0 -> s3 [0, 65535] { R3556 += 1, R3494 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3556 += 1, R3493 += 1, R3494 += 1 };
  s1 -> s2 [0, 65535] { R3556 += 1, R3494 += 1, R3471 += 1 };
  s1 -> s3 [0, 65535] { R3556 += 1, R3494 += 1 };
  s2 -> s4 [0, 65535] { R3556 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3556 += 1, R3494 += 1, R3471 += 1 };
  s2 -> s3 [0, 65535] { R3556 += 1, R3494 += 1 };
  s3 -> s4 [0, 65535] { R3556 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3556 += 1, R3494 += 1 };
  s4 -> s4 [0, 65535] { R3556 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R3558 += 1, R3513 += 1, R3514 += 1 };
  s0 -> s0 [0, 65535] { R3557 += 1, R3558 += 1 };
  s0 -> s2 [0, 65535] { R3558 += 1, R3514 += 1, R21 += 1 };
  s1 -> s1 [0, 65535] { R3558 += 1, R3513 += 1, R3514 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R3558 += 1, R3514 += 1, R21 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R3558 += 1 };
  s2 -> s2 [0, 65535] { R3558 += 1, R3514 += 1, R21 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3558 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R3560 += 1, R3516 += 1 };
  s0 -> s2 [0, 65535] { R3560 += 1, R3515 += 1, R3516 += 1 };
  s0 -> s0 [0, 65535] { R3559 += 1, R3560 += 1 };
  s0 -> s3 [70, 70] { R3560 += 1, R3516 += 1 };
  s0 -> s4 [70, 70] { R3560 += 1, R3516 += 1 };
  s0 -> s5 [75, 75] { R3560 += 1, R3516 += 1 };
  s0 -> s1 [76, 65535] { R3560 += 1, R3516 += 1 };
  s1 -> s1 [0, 69] { R3560 += 1, R3516 += 1 };
  s1 -> s3 [70, 70] { R3560 += 1, R3516 += 1 };
  s1 -> s4 [70, 70] { R3560 += 1, R3516 += 1 };
  s1 -> s5 [75, 75] { R3560 += 1, R3516 += 1 };
  s1 -> s1 [76, 65535] { R3560 += 1, R3516 += 1 };
  s2 -> s1 [0, 69] { R3560 += 1, R3516 += 1 };
  s2 -> s2 [0, 65535] { R3560 += 1, R3515 += 1, R3516 += 1 };
  s2 -> s3 [70, 70] { R3560 += 1, R3516 += 1 };
  s2 -> s4 [70, 70] { R3560 += 1, R3516 += 1 };
  s2 -> s5 [75, 75] { R3560 += 1, R3516 += 1 };
  s2 -> s1 [76, 65535] { R3560 += 1, R3516 += 1 };
  s4 -> s4 [0, 70] { R3560 += 1, R3516 += 1 };
  s4 -> s7 [75, 75] { R3560 += 1, R3516 += 1 };
  s4 -> s4 [76, 65535] { R3560 += 1, R3516 += 1 };
  s5 -> s5 [0, 69] { R3560 += 1, R3516 += 1 };
  s5 -> s5 [0, 65535] { R3560 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R3560 += 1, R3516 += 1 };
  s5 -> s8 [70, 70] { R3560 += 1, R3516 += 1 };
  s5 -> s5 [75, 65535] { R3560 += 1, R3516 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R3560 += 1, R3516 += 1 };
  s7 -> s7 [0, 65535] { R3560 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R3560 += 1, R3516 += 1 };
  s8 -> s8 [0, 65535] { R3560 += 1 };
  s8 -> s6 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R3562 += 1, R3518 += 1, R83 += 1 };
  s0 -> s2 [0, 65535] { R3562 += 1, R3517 += 1, R3518 += 1 };
  s0 -> s0 [0, 65535] { R3561 += 1, R3562 += 1 };
  s0 -> s3 [70, 70] { R3562 += 1, R3518 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R3562 += 1, R3518 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R3562 += 1, R3518 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R3562 += 1, R3518 += 1, R83 += 1 };
  s1 -> s1 [0, 65535] { R3562 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R3562 += 1, R3518 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R3562 += 1, R3518 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R3562 += 1, R3518 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R3562 += 1, R3518 += 1, R83 += 1 };
  s2 -> s2 [0, 65535] { R3562 += 1, R3517 += 1, R3518 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R3562 += 1, R3518 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R3562 += 1, R3518 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R3562 += 1, R3518 += 1, R83 += 1 };
  s3 -> s3 [0, 65535] { R3562 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3562 += 1, R3518 += 1, R83 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3562 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3562 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R3564 += 1, R3520 += 1, R85 += 1 };
  s0 -> s0 [0, 65535] { R3563 += 1, R3564 += 1 };
  s0 -> s2 [0, 65535] { R3564 += 1, R3519 += 1, R3520 += 1 };
  s0 -> s3 [70, 70] { R3564 += 1, R3520 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R3564 += 1, R3520 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R3564 += 1, R3520 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R3564 += 1, R3520 += 1, R85 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R3564 += 1 };
  s1 -> s3 [70, 70] { R3564 += 1, R3520 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R3564 += 1, R3520 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R3564 += 1, R3520 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R3564 += 1, R3520 += 1, R85 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R3564 += 1, R3519 += 1, R3520 += 1 };
  s2 -> s3 [70, 70] { R3564 += 1, R3520 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R3564 += 1, R3520 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R3564 += 1, R3520 += 1, R85 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R3564 += 1 };
  s4 -> s5 [0, 65535] { R3564 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3564 += 1, R3520 += 1, R85 += 1 };
  s5 -> s5 [0, 65535] { R3564 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R3566 += 1, R3522 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R3566 += 1, R3522 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R3565 += 1, R3566 += 1 };
  s0 -> s3 [0, 65535] { R3566 += 1, R3521 += 1, R3522 += 1 };
  s0 -> s4 [70, 70] { R3566 += 1, R3522 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R3566 += 1, R3522 += 1, R87 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R3566 += 1, R3522 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R3566 += 1, R3522 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [71, 74] { R3566 += 1, R3522 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R3566 += 1, R3522 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R3566 += 1, R3522 += 1, R88 += 1 };
  s0 -> s2 [76, 65535] { R3566 += 1, R3522 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R3566 += 1, R3522 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [0, 69] { R3566 += 1, R3522 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R3566 += 1, R3522 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R3566 += 1, R3522 += 1, R87 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R3566 += 1, R3522 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R3566 += 1, R3522 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [71, 74] { R3566 += 1, R3522 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R3566 += 1, R3522 += 1, R87 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R3566 += 1, R3522 += 1, R88 += 1 };
  s1 -> s2 [76, 65535] { R3566 += 1, R3522 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R3566 += 1, R3522 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R3566 += 1, R3522 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R3566 += 1, R3522 += 1, R88 += 1 };
  s2 -> s2 [71, 74] { R3566 += 1, R3522 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R3566 += 1, R3522 += 1, R88 += 1 };
  s2 -> s2 [76, 65535] { R3566 += 1, R3522 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R3566 += 1, R3522 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R3566 += 1, R3522 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R3566 += 1, R3521 += 1, R3522 += 1 };
  s3 -> s4 [70, 70] { R3566 += 1, R3522 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R3566 += 1, R3522 += 1, R87 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R3566 += 1, R3522 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R3566 += 1, R3522 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [71, 74] { R3566 += 1, R3522 += 1, R88 += 1 };
  s3 -> s1 [71, 65535] { R3566 += 1, R3522 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R3566 += 1, R3522 += 1, R88 += 1 };
  s3 -> s2 [76, 65535] { R3566 += 1, R3522 += 1, R88 += 1 };
  s5 -> s6 [0, 74] { R3566 += 1, R3522 += 1, R88 += 1 };
  s5 -> s5 [0, 65535] { R3566 += 1, R3522 += 1, R87 += 1, R88 += 1 };
  s5 -> s10 [75, 75] { R3566 += 1, R3522 += 1, R88 += 1 };
  s5 -> s6 [76, 65535] { R3566 += 1, R3522 += 1, R88 += 1 };
  s6 -> s6 [0, 74] { R3566 += 1, R3522 += 1, R88 += 1 };
  s6 -> s10 [75, 75] { R3566 += 1, R3522 += 1, R88 += 1 };
  s6 -> s6 [76, 65535] { R3566 += 1, R3522 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R3566 += 1, R3522 += 1, R88 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R3566 += 1 };
  s8 -> s10 [70, 70] { R3566 += 1, R3522 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R3566 += 1, R3522 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R3566 += 1, R3522 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s12 [0, 65535] { R3566 += 1 };
  s10 -> s10 [0, 65535] { R3566 += 1, R3522 += 1, R88 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R3566 += 1 };
  s12 -> s12 [0, 65535] { R3566 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R3568 += 1, R3524 += 1, R91 += 1, R92 += 1 };
  s0 -> s2 [0, 65535] { R3568 += 1, R3523 += 1, R3524 += 1 };
  s0 -> s0 [0, 65535] { R3567 += 1, R3568 += 1 };
  s0 -> s3 [70, 70] { R3568 += 1, R3524 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R3568 += 1, R3524 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R3568 += 1, R3524 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R3568 += 1, R3524 += 1, R91 += 1, R92 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3568 += 1 };
  s1 -> s3 [70, 70] { R3568 += 1, R3524 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R3568 += 1, R3524 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R3568 += 1, R3524 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R3568 += 1, R3524 += 1, R91 += 1, R92 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3568 += 1, R3523 += 1, R3524 += 1 };
  s2 -> s3 [70, 70] { R3568 += 1, R3524 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R3568 += 1, R3524 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R3568 += 1, R3524 += 1, R91 += 1, R92 += 1 };
  s3 -> s6 [0, 65535] { R3568 += 1 };
  s3 -> s3 [0, 65535] { R3568 += 1, R3524 += 1, R91 += 1, R92 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3568 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3568 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R3570 += 1, R3526 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s2 [0, 69] { R3570 += 1, R3526 += 1, R3452 += 1 };
  s0 -> s3 [0, 69] { R3570 += 1, R3526 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s4 [0, 65535] { R3570 += 1, R3525 += 1, R3526 += 1 };
  s0 -> s0 [0, 65535] { R3569 += 1, R3570 += 1 };
  s0 -> s5 [70, 70] { R3570 += 1, R3526 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s6 [70, 70] { R3570 += 1, R3526 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s7 [70, 70] { R3570 += 1, R3526 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s8 [70, 70] { R3570 += 1, R3526 += 1, R3452 += 1 };
  s0 -> s9 [70, 70] { R3570 += 1, R3526 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s10 [70, 70] { R3570 += 1, R3526 += 1, R3452 += 1 };
  s0 -> s2 [71, 74] { R3570 += 1, R3526 += 1, R3452 += 1 };
  s0 -> s1 [71, 65535] { R3570 += 1, R3526 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s3 [71, 65535] { R3570 += 1, R3526 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s2 [76, 65535] { R3570 += 1, R3526 += 1, R3452 += 1 };
  s1 -> s1 [0, 69] { R3570 += 1, R3526 += 1, R3451 += 1, R3452 += 1 };
  s1 -> s2 [0, 69] { R3570 += 1, R3526 += 1, R3452 += 1 };
  s1 -> s3 [0, 69] { R3570 += 1, R3526 += 1, R3452 += 1, R3453 += 1 };
  s1 -> s5 [70, 70] { R3570 += 1, R3526 += 1, R3452 += 1, R3453 += 1 };
  s1 -> s6 [70, 70] { R3570 += 1, R3526 += 1, R3452 += 1, R3453 += 1 };
  s1 -> s7 [70, 70] { R3570 += 1, R3526 += 1, R3451 += 1, R3452 += 1 };
  s1 -> s8 [70, 70] { R3570 += 1, R3526 += 1, R3452 += 1 };
  s1 -> s9 [70, 70] { R3570 += 1, R3526 += 1, R3451 += 1, R3452 += 1 };
  s1 -> s10 [70, 70] { R3570 += 1, R3526 += 1, R3452 += 1 };
  s1 -> s2 [71, 74] { R3570 += 1, R3526 += 1, R3452 += 1 };
  s1 -> s1 [71, 65535] { R3570 += 1, R3526 += 1, R3451 += 1, R3452 += 1 };
  s1 -> s3 [71, 65535] { R3570 += 1, R3526 += 1, R3452 += 1, R3453 += 1 };
  s1 -> s2 [76, 65535] { R3570 += 1, R3526 += 1, R3452 += 1 };
  s2 -> s2 [0, 69] { R3570 += 1, R3526 += 1, R3452 += 1 };
  s2 -> s2 [0, 65535] { R3570 += 1 };
  s2 -> s11 [0, 65535];
  s2 -> s8 [70, 70] { R3570 += 1, R3526 += 1 };
  s2 -> s10 [70, 70] { R3570 += 1, R3526 += 1 };
  s2 -> s2 [71, 74] { R3570 += 1, R3526 += 1, R3452 += 1 };
  s2 -> s2 [71, 65535] { R3570 += 1, R3526 += 1 };
  s2 -> s2 [76, 65535] { R3570 += 1, R3526 += 1, R3452 += 1 };
  s3 -> s2 [0, 69] { R3570 += 1, R3526 += 1, R3452 += 1 };
  s3 -> s3 [0, 69] { R3570 += 1, R3526 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s5 [70, 70] { R3570 += 1, R3526 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s6 [70, 70] { R3570 += 1, R3526 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s8 [70, 70] { R3570 += 1, R3526 += 1, R3452 += 1 };
  s3 -> s10 [70, 70] { R3570 += 1, R3526 += 1, R3452 += 1 };
  s3 -> s2 [71, 74] { R3570 += 1, R3526 += 1, R3452 += 1 };
  s3 -> s3 [71, 65535] { R3570 += 1, R3526 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s2 [76, 65535] { R3570 += 1, R3526 += 1, R3452 += 1 };
  s4 -> s1 [0, 69] { R3570 += 1, R3526 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s2 [0, 69] { R3570 += 1, R3526 += 1, R3452 += 1 };
  s4 -> s3 [0, 69] { R3570 += 1, R3526 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s4 [0, 65535] { R3570 += 1, R3525 += 1, R3526 += 1 };
  s4 -> s5 [70, 70] { R3570 += 1, R3526 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s6 [70, 70] { R3570 += 1, R3526 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s7 [70, 70] { R3570 += 1, R3526 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s8 [70, 70] { R3570 += 1, R3526 += 1, R3452 += 1 };
  s4 -> s9 [70, 70] { R3570 += 1, R3526 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s10 [70, 70] { R3570 += 1, R3526 += 1, R3452 += 1 };
  s4 -> s2 [71, 74] { R3570 += 1, R3526 += 1, R3452 += 1 };
  s4 -> s1 [71, 65535] { R3570 += 1, R3526 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s3 [71, 65535] { R3570 += 1, R3526 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s2 [76, 65535] { R3570 += 1, R3526 += 1, R3452 += 1 };
  s6 -> s8 [0, 74] { R3570 += 1, R3526 += 1, R3452 += 1 };
  s6 -> s6 [0, 65535] { R3570 += 1, R3526 += 1, R3452 += 1, R3453 += 1 };
  s6 -> s8 [76, 65535] { R3570 += 1, R3526 += 1, R3452 += 1 };
  s8 -> s8 [0, 74] { R3570 += 1, R3526 += 1, R3452 += 1 };
  s8 -> s8 [0, 65535] { R3570 += 1, R3526 += 1 };
  s8 -> s11 [0, 65535];
  s8 -> s12 [0, 65535] { R3570 += 1 };
  s8 -> s8 [76, 65535] { R3570 += 1, R3526 += 1, R3452 += 1 };
  s9 -> s8 [0, 74] { R3570 += 1, R3526 += 1, R3452 += 1 };
  s9 -> s6 [0, 65535] { R3570 += 1, R3526 += 1, R3452 += 1, R3453 += 1 };
  s9 -> s9 [0, 65535] { R3570 += 1, R3526 += 1, R3451 += 1, R3452 += 1 };
  s9 -> s8 [76, 65535] { R3570 += 1, R3526 += 1, R3452 += 1 };
  s10 -> s10 [0, 65535] { R3570 += 1 };
  s10 -> s11 [0, 65535];
  s11 -> s11 [0, 65535];
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R3570 += 1 };
  accepting s12, s8, s2, s10, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s0 -> s2 [0, 69] { R3572 += 1, R3528 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s0 -> s3 [0, 69] { R3572 += 1, R3528 += 1, R3457 += 1, R3458 += 1 };
  s0 -> s0 [0, 65535] { R3571 += 1, R3572 += 1 };
  s0 -> s4 [0, 65535] { R3572 += 1, R3527 += 1, R3528 += 1 };
  s0 -> s5 [70, 70] { R3572 += 1, R3528 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s0 -> s6 [70, 70] { R3572 += 1, R3528 += 1, R3457 += 1, R3458 += 1 };
  s0 -> s7 [70, 70] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s0 -> s8 [70, 70] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s0 -> s9 [70, 70] { R3572 += 1, R3528 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s0 -> s10 [70, 70] { R3572 += 1, R3528 += 1, R3457 += 1, R3458 += 1 };
  s0 -> s1 [71, 74] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s0 -> s2 [71, 65535] { R3572 += 1, R3528 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s0 -> s3 [71, 65535] { R3572 += 1, R3528 += 1, R3457 += 1, R3458 += 1 };
  s0 -> s11 [75, 75] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s0 -> s1 [76, 65535] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s1 -> s1 [0, 69] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s1 -> s7 [70, 70] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s1 -> s8 [70, 70] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s1 -> s1 [71, 74] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s1 -> s11 [75, 75] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s1 -> s1 [76, 65535] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s2 -> s1 [0, 69] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s2 -> s2 [0, 69] { R3572 += 1, R3528 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s2 -> s5 [70, 70] { R3572 += 1, R3528 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s2 -> s7 [70, 70] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s2 -> s8 [70, 70] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s2 -> s9 [70, 70] { R3572 += 1, R3528 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s2 -> s1 [71, 74] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s2 -> s2 [71, 65535] { R3572 += 1, R3528 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s2 -> s11 [75, 75] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s2 -> s1 [76, 65535] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s3 -> s1 [0, 69] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s3 -> s2 [0, 69] { R3572 += 1, R3528 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s3 -> s3 [0, 69] { R3572 += 1, R3528 += 1, R3457 += 1, R3458 += 1 };
  s3 -> s5 [70, 70] { R3572 += 1, R3528 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s3 -> s6 [70, 70] { R3572 += 1, R3528 += 1, R3457 += 1, R3458 += 1 };
  s3 -> s7 [70, 70] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s3 -> s8 [70, 70] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s3 -> s9 [70, 70] { R3572 += 1, R3528 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s3 -> s10 [70, 70] { R3572 += 1, R3528 += 1, R3457 += 1, R3458 += 1 };
  s3 -> s1 [71, 74] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s3 -> s2 [71, 65535] { R3572 += 1, R3528 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s3 -> s3 [71, 65535] { R3572 += 1, R3528 += 1, R3457 += 1, R3458 += 1 };
  s3 -> s11 [75, 75] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s3 -> s1 [76, 65535] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s4 -> s1 [0, 69] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s4 -> s2 [0, 69] { R3572 += 1, R3528 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s4 -> s3 [0, 69] { R3572 += 1, R3528 += 1, R3457 += 1, R3458 += 1 };
  s4 -> s4 [0, 65535] { R3572 += 1, R3527 += 1, R3528 += 1 };
  s4 -> s5 [70, 70] { R3572 += 1, R3528 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s4 -> s6 [70, 70] { R3572 += 1, R3528 += 1, R3457 += 1, R3458 += 1 };
  s4 -> s7 [70, 70] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s4 -> s8 [70, 70] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s4 -> s9 [70, 70] { R3572 += 1, R3528 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s4 -> s10 [70, 70] { R3572 += 1, R3528 += 1, R3457 += 1, R3458 += 1 };
  s4 -> s1 [71, 74] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s4 -> s2 [71, 65535] { R3572 += 1, R3528 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s4 -> s3 [71, 65535] { R3572 += 1, R3528 += 1, R3457 += 1, R3458 += 1 };
  s4 -> s11 [75, 75] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s4 -> s1 [76, 65535] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s5 -> s8 [0, 74] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s5 -> s5 [0, 65535] { R3572 += 1, R3528 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s5 -> s13 [75, 75] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s5 -> s8 [76, 65535] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s6 -> s8 [0, 74] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s6 -> s5 [0, 65535] { R3572 += 1, R3528 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s6 -> s6 [0, 65535] { R3572 += 1, R3528 += 1, R3457 += 1, R3458 += 1 };
  s6 -> s13 [75, 75] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s6 -> s8 [76, 65535] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s8 -> s8 [0, 74] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s8 -> s13 [75, 75] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s8 -> s8 [76, 65535] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s11 -> s11 [0, 69] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s11 [0, 65535] { R3572 += 1 };
  s11 -> s13 [70, 70] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s11 -> s14 [70, 70] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s11 -> s11 [71, 65535] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s15 [0, 65535] { R3572 += 1 };
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R3572 += 1, R3528 += 1, R3458 += 1, R3460 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R3572 += 1 };
  s15 -> s15 [0, 65535] { R3572 += 1 };
  s15 -> s12 [0, 65535];
  accepting s12, s13, s14, s15, s11;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R3574 += 1, R3530 += 1, R3466 += 1, R3468 += 1, R3469 += 1 };
  s0 -> s2 [0, 69] { R3574 += 1, R3530 += 1, R3465 += 1, R3466 += 1 };
  s0 -> s3 [0, 69] { R3574 += 1, R3530 += 1, R3466 += 1, R3467 += 1, R3468 += 1 };
  s0 -> s0 [0, 65535] { R3573 += 1, R3574 += 1 };
  s0 -> s4 [0, 65535] { R3574 += 1, R3529 += 1, R3530 += 1 };
  s0 -> s5 [70, 70] { R3574 += 1, R3530 += 1, R3465 += 1, R3466 += 1 };
  s0 -> s6 [70, 70] { R3574 += 1, R3530 += 1, R3465 += 1, R3466 += 1 };
  s0 -> s7 [70, 70] { R3574 += 1, R3530 += 1, R3466 += 1, R3468 += 1, R3469 += 1 };
  s0 -> s8 [70, 70] { R3574 += 1, R3530 += 1, R3466 += 1, R3468 += 1, R3469 += 1 };
  s0 -> s9 [70, 70] { R3574 += 1, R3530 += 1, R3466 += 1, R3467 += 1, R3468 += 1 };
  s0 -> s10 [70, 70] { R3574 += 1, R3530 += 1, R3466 += 1, R3467 += 1, R3468 += 1 };
  s0 -> s1 [71, 65535] { R3574 += 1, R3530 += 1, R3466 += 1, R3468 += 1, R3469 += 1 };
  s0 -> s2 [71, 65535] { R3574 += 1, R3530 += 1, R3465 += 1, R3466 += 1 };
  s0 -> s3 [71, 65535] { R3574 += 1, R3530 += 1, R3466 += 1, R3467 += 1, R3468 += 1 };
  s1 -> s1 [0, 69] { R3574 += 1, R3530 += 1, R3466 += 1, R3468 += 1, R3469 += 1 };
  s1 -> s14 [0, 69] { R3574 += 1, R3530 += 1, R3466 += 1 };
  s1 -> s7 [70, 70] { R3574 += 1, R3530 += 1, R3466 += 1, R3468 += 1, R3469 += 1 };
  s1 -> s8 [70, 70] { R3574 += 1, R3530 += 1, R3466 += 1, R3468 += 1, R3469 += 1 };
  s1 -> s15 [70, 70] { R3574 += 1, R3530 += 1, R3466 += 1 };
  s1 -> s11 [70, 70] { R3574 += 1, R3530 += 1, R3466 += 1 };
  s1 -> s1 [71, 65535] { R3574 += 1, R3530 += 1, R3466 += 1, R3468 += 1, R3469 += 1 };
  s1 -> s14 [71, 65535] { R3574 += 1, R3530 += 1, R3466 += 1 };
  s2 -> s1 [0, 69] { R3574 += 1, R3530 += 1, R3466 += 1, R3468 += 1, R3469 += 1 };
  s2 -> s2 [0, 69] { R3574 += 1, R3530 += 1, R3465 += 1, R3466 += 1 };
  s2 -> s3 [0, 69] { R3574 += 1, R3530 += 1, R3466 += 1, R3467 += 1, R3468 += 1 };
  s2 -> s5 [70, 70] { R3574 += 1, R3530 += 1, R3465 += 1, R3466 += 1 };
  s2 -> s6 [70, 70] { R3574 += 1, R3530 += 1, R3465 += 1, R3466 += 1 };
  s2 -> s7 [70, 70] { R3574 += 1, R3530 += 1, R3466 += 1, R3468 += 1, R3469 += 1 };
  s2 -> s8 [70, 70] { R3574 += 1, R3530 += 1, R3466 += 1, R3468 += 1, R3469 += 1 };
  s2 -> s9 [70, 70] { R3574 += 1, R3530 += 1, R3466 += 1, R3467 += 1, R3468 += 1 };
  s2 -> s10 [70, 70] { R3574 += 1, R3530 += 1, R3466 += 1, R3467 += 1, R3468 += 1 };
  s2 -> s1 [71, 65535] { R3574 += 1, R3530 += 1, R3466 += 1, R3468 += 1, R3469 += 1 };
  s2 -> s2 [71, 65535] { R3574 += 1, R3530 += 1, R3465 += 1, R3466 += 1 };
  s2 -> s3 [71, 65535] { R3574 += 1, R3530 += 1, R3466 += 1, R3467 += 1, R3468 += 1 };
  s3 -> s1 [0, 69] { R3574 += 1, R3530 += 1, R3466 += 1, R3468 += 1, R3469 += 1 };
  s3 -> s3 [0, 69] { R3574 += 1, R3530 += 1, R3466 += 1, R3467 += 1, R3468 += 1 };
  s3 -> s7 [70, 70] { R3574 += 1, R3530 += 1, R3466 += 1, R3468 += 1, R3469 += 1 };
  s3 -> s8 [70, 70] { R3574 += 1, R3530 += 1, R3466 += 1, R3468 += 1, R3469 += 1 };
  s3 -> s9 [70, 70] { R3574 += 1, R3530 += 1, R3466 += 1, R3467 += 1, R3468 += 1 };
  s3 -> s10 [70, 70] { R3574 += 1, R3530 += 1, R3466 += 1, R3467 += 1, R3468 += 1 };
  s3 -> s1 [71, 65535] { R3574 += 1, R3530 += 1, R3466 += 1, R3468 += 1, R3469 += 1 };
  s3 -> s3 [71, 65535] { R3574 += 1, R3530 += 1, R3466 += 1, R3467 += 1, R3468 += 1 };
  s4 -> s1 [0, 69] { R3574 += 1, R3530 += 1, R3466 += 1, R3468 += 1, R3469 += 1 };
  s4 -> s2 [0, 69] { R3574 += 1, R3530 += 1, R3465 += 1, R3466 += 1 };
  s4 -> s3 [0, 69] { R3574 += 1, R3530 += 1, R3466 += 1, R3467 += 1, R3468 += 1 };
  s4 -> s4 [0, 65535] { R3574 += 1, R3529 += 1, R3530 += 1 };
  s4 -> s5 [70, 70] { R3574 += 1, R3530 += 1, R3465 += 1, R3466 += 1 };
  s4 -> s6 [70, 70] { R3574 += 1, R3530 += 1, R3465 += 1, R3466 += 1 };
  s4 -> s7 [70, 70] { R3574 += 1, R3530 += 1, R3466 += 1, R3468 += 1, R3469 += 1 };
  s4 -> s8 [70, 70] { R3574 += 1, R3530 += 1, R3466 += 1, R3468 += 1, R3469 += 1 };
  s4 -> s9 [70, 70] { R3574 += 1, R3530 += 1, R3466 += 1, R3467 += 1, R3468 += 1 };
  s4 -> s10 [70, 70] { R3574 += 1, R3530 += 1, R3466 += 1, R3467 += 1, R3468 += 1 };
  s4 -> s1 [71, 65535] { R3574 += 1, R3530 += 1, R3466 += 1, R3468 += 1, R3469 += 1 };
  s4 -> s2 [71, 65535] { R3574 += 1, R3530 += 1, R3465 += 1, R3466 += 1 };
  s4 -> s3 [71, 65535] { R3574 += 1, R3530 += 1, R3466 += 1, R3467 += 1, R3468 += 1 };
  s5 -> s5 [0, 65535] { R3574 += 1, R3530 += 1, R3465 += 1, R3466 += 1 };
  s5 -> s7 [0, 65535] { R3574 += 1, R3530 += 1, R3466 += 1, R3468 += 1, R3469 += 1 };
  s5 -> s9 [0, 65535] { R3574 += 1, R3530 += 1, R3466 += 1, R3467 += 1, R3468 += 1 };
  s7 -> s7 [0, 65535] { R3574 += 1, R3530 += 1, R3466 += 1, R3468 += 1, R3469 += 1 };
  s7 -> s11 [0, 65535] { R3574 += 1, R3530 += 1, R3466 += 1 };
  s9 -> s7 [0, 65535] { R3574 += 1, R3530 += 1, R3466 += 1, R3468 += 1, R3469 += 1 };
  s9 -> s9 [0, 65535] { R3574 += 1, R3530 += 1, R3466 += 1, R3467 += 1, R3468 += 1 };
  s11 -> s12 [0, 65535] { R3574 += 1 };
  s11 -> s13 [0, 65535];
  s11 -> s11 [0, 65535] { R3574 += 1, R3530 += 1, R3466 += 1 };
  s12 -> s12 [0, 65535] { R3574 += 1 };
  s12 -> s13 [0, 65535];
  s13 -> s13 [0, 65535];
  s14 -> s14 [0, 69] { R3574 += 1, R3530 += 1, R3466 += 1 };
  s14 -> s14 [0, 65535] { R3574 += 1 };
  s14 -> s13 [0, 65535];
  s14 -> s15 [70, 70] { R3574 += 1, R3530 += 1, R3466 += 1 };
  s14 -> s11 [70, 70] { R3574 += 1, R3530 += 1, R3466 += 1 };
  s14 -> s14 [71, 65535] { R3574 += 1, R3530 += 1, R3466 += 1 };
  s15 -> s13 [0, 65535];
  s15 -> s15 [0, 65535] { R3574 += 1 };
  accepting s12, s13, s14, s15, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R3574 && R23 - R3574 = -1 && R24 = R3574 && R25 - R3574 = -1 && R26 = R3574 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R3462 + -1*R3458 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R3462 + -1*R3458 - R66 = 0 && R55 + R96 + R93 + -1*R3464 + -1*R3460 - R68 = 0 && R65 + R3461 + R3457 = 0 && R67 + R3463 + R3459 = 0 && R3515 = 0 && R3516 = 0 && R3521 = 0 && R3522 = 0 && R3525 = 0 && R3526 = 0 && R3527 = 0 && R3528 = 0 && R3529 = 0 && R3530 = 0 && R3531 = 0 && R3532 = R3574 && R3533 = 0 && R3534 = R3574 && R3535 = 0 && R3536 = R3574 && R3537 = 0 && R3538 = R3574 && R3539 = 0 && R3540 = R3574 && R3541 = 0 && R3542 = R3574 && R3543 = 0 && R3544 = R3574 && R3545 = 0 && R3546 = R3574 && R3547 = 0 && R3548 = R3574 && R3549 = 0 && R3550 = R3574 && R3551 = 0 && R3552 = R3574 && R3553 = 0 && R3554 = R3574 && R3555 = 0 && R3556 = R3574 && R3557 = 0 && R3558 = R3574 && R3559 = 0 && R3560 = R3574 && R3561 = 0 && R3562 = R3574 && R3563 = 0 && R3564 = R3574 && R3565 = 0 && R3566 = R3574 && R3567 = 0 && R3568 = R3574 && R3569 = 0 && R3570 = R3574 && R3571 = 0 && R3572 = R3574 && R3573 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R3456 + R3453 < 1 && -1*R3462 + -1*R3458 - R66 < 1 && -1*R3464 + -1*R3460 - R68 < 1 && 0 < R3574 && (R2 != 0 || R20 = 0 || (R3475 = 0 && R3476 = 0)) && (R2 != 0 || R20 = 0 || (R3477 = 0 && R3478 = 0)) && (R2 != 0 || R20 = 0 || (R3479 = 0 && R3480 = 0)) && (R2 != 0 || R20 = 0 || (R3481 = 0 && R3482 = 0)) && (R2 != 0 || R20 = 0 || (R3483 = 0 && R3484 = 0)) && (R2 != 0 || R20 = 0 || (R3485 = 0 && R3486 = 0)) && (R2 != 0 || R20 = 0 || (R3487 = 0 && R3488 = 0)) && (R2 != 0 || R20 = 0 || (R3489 = 0 && R3490 = 0)) && (R2 != 0 || R20 = 0 || (R3491 = 0 && R3492 = 0)) && (R2 != 0 || R20 = 0 || (R3493 = 0 && R3494 = 0)) && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R3462 + -1*R3458 - R66 = 0 || R66 + R3462 + R3458 < 1) && (R59 + R3454 + R3451 != 0 || R60 + R3455 + R3452 + -1*R3462 + -1*R3458 - R66 = 0 || R66 + R3462 + R3458 < 1) && (R66 + R3462 + R3458 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R3464 + R3460 < 1) && (R53 + R94 + R91 = 0 || R68 + R3464 + R3460 < 1))) && (R66 + R3462 + R3458 != 0 || ((R59 + R3454 + R3451 != 0 || R60 + R3455 + R3452 = 0 || R68 + R3464 + R3460 < 1) && (R59 + R3454 + R3451 = 0 || R68 + R3464 + R3460 < 1))) && (R66 + R3462 + R3458 != 0 || ((R73 + R3470 + R3465 != 0 || R74 + R3471 + R3466 = 0 || R68 + R3464 + R3460 < 1) && (R73 + R3470 + R3465 = 0 || R68 + R3464 + R3460 < 1))) && (R68 + R3464 + R3460 != 0 || R77 + R3474 + R3469 = 0 || (R75 + R3472 + R3467 = 0 && R76 + R3473 + R3468 = 0)) && (R73 + R3470 + R3465 != 0 || R66 + R3462 + R3458 + -1*R3471 + -1*R3466 - R74 = 0 || R66 + R3462 + R3458 < 1) && (R75 + R3472 + R3467 != 0 || R68 + R3464 + R3460 + -1*R3473 + -1*R3468 - R76 = 0 || R68 + R3464 + R3460 < 1) && (R3475 != 0 || R2 = R3476 || R2 < 1) && (R3477 != 0 || R2 = R3478 || R2 < 1) && (R3479 != 0 || R2 = R3480 || R2 < 1) && (R3481 != 0 || R2 = R3482 || R2 < 1) && (R3483 != 0 || R2 = R3484 || R2 < 1) && (R3485 != 0 || R2 = R3486 || R2 < 1) && (R3487 != 0 || R2 = R3488 || R2 < 1) && (R3489 != 0 || R2 = R3490 || R2 < 1) && (R3491 != 0 || R2 = R3492 || R2 < 1) && (R3493 != 0 || R2 = R3494 || R2 < 1) && (R21 = 0 || (R3513 = 0 && R3514 = 0)) && (R21 = 0 || (R3517 = 0 && R3518 = 0)) && (R21 = 0 || (R3519 = 0 && R3520 = 0)) && (R21 = 0 || (R3523 = 0 && R3524 = 0)) && (R22 = 0 || (R3495 = 0 && R3496 = 0)) && (R22 = 0 || (R3497 = 0 && R3498 = 0)) && (R22 = 0 || (R3499 = 0 && R3500 = 0)) && (R22 = 0 || (R3501 = 0 && R3502 = 0)) && (R22 = 0 || (R3503 = 0 && R3504 = 0)) && (R22 = 0 || (R3505 = 0 && R3506 = 0)) && (R22 = 0 || (R3507 = 0 && R3508 = 0)) && (R22 = 0 || (R3509 = 0 && R3510 = 0)) && (R22 = 0 || (R3511 = 0 && R3512 = 0)) && (R53 + R94 + R91 = 0 || R66 + R3462 + R3458 < 1) && (R59 + R3454 + R3451 = 0 || R66 + R3462 + R3458 < 1) && (R73 + R3470 + R3465 = 0 || R66 + R3462 + R3458 < 1) && (R75 + R3472 + R3467 = 0 || R68 + R3464 + R3460 < 1) && (R3475 = 0 || R2 < 1) && (R3477 = 0 || R2 < 1) && (R3479 = 0 || R2 < 1) && (R3481 = 0 || R2 < 1) && (R3483 = 0 || R2 < 1) && (R3485 = 0 || R2 < 1) && (R3487 = 0 || R2 < 1) && (R3489 = 0 || R2 < 1) && (R3491 = 0 || R2 < 1) && (R3493 = 0 || R2 < 1);
// End of Parikh automata intersection problem
