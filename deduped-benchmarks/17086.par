// Parikh automata intersection problem, generated by OSTRICH+
counter int R100, R101, R102, R12, R15, R16, R1777, R1778, R1779, R1780, R1781, R1782, R1783, R1784, R2, R20, R21, R22, R2225, R2226, R2227, R2228, R2229, R2230, R2231, R2232, R2233, R2234, R2235, R2236, R2237, R2238, R2239, R2240, R2241, R2242, R2243, R2244, R2245, R2246, R2247, R2248, R2249, R2250, R2251, R2252, R2253, R2254, R2255, R2256, R2257, R2258, R2259, R2260, R2261, R2262, R2263, R2264, R2265, R2266, R2267, R2268, R2269, R2270, R2271, R2272, R2273, R2274, R2275, R2276, R2277, R2278, R2279, R2280, R2281, R2282, R2283, R2284, R2285, R2286, R2287, R2288, R2289, R2290, R2291, R2292, R2293, R2294, R2295, R2296, R2297, R2298, R2299, R23, R2300, R2301, R2302, R2303, R2304, R2305, R2306, R2307, R2308, R2309, R2310, R2311, R2312, R2313, R2314, R2315, R2316, R2317, R2318, R2319, R2320, R2321, R2322, R2323, R2324, R2325, R2326, R2327, R2328, R2329, R2330, R2331, R2332, R2333, R2334, R24, R25, R26, R27, R28, R29, R3, R30, R4, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96, R97, R98, R99;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R2256 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R2255 += 1, R2256 += 1 };
  s1 -> s1 [0, 65535] { R2256 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R2258 += 1 };
  s0 -> s0 [0, 65535] { R2257 += 1, R2258 += 1 };
  s0 -> s2 [70, 70] { R2258 += 1 };
  s0 -> s3 [70, 70] { R2258 += 1 };
  s0 -> s1 [76, 65535] { R2258 += 1 };
  s1 -> s1 [0, 69] { R2258 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2258 += 1 };
  s1 -> s3 [70, 70] { R2258 += 1 };
  s1 -> s1 [76, 65535] { R2258 += 1 };
  s2 -> s2 [0, 70] { R2258 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R2258 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R2260 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R2259 += 1, R2260 += 1 };
  s0 -> s2 [70, 70] { R2260 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R2260 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R2260 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R2260 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2260 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R2260 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R2260 += 1, R45 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2260 += 1, R45 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R2262 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R2261 += 1, R2262 += 1 };
  s0 -> s2 [70, 70] { R2262 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R2262 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R2262 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R2262 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2262 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R2262 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R2262 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2262 += 1, R47 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R2264 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R2263 += 1, R2264 += 1 };
  s0 -> s2 [70, 70] { R2264 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R2264 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R2264 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R2264 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2264 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R2264 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R2264 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2264 += 1, R49 += 1, R50 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R2266 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R2265 += 1, R2266 += 1 };
  s0 -> s2 [70, 70] { R2266 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R2266 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R2266 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R2266 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2266 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R2266 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R2266 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R2266 += 1, R53 += 1, R54 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R2268 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R2267 += 1, R2268 += 1 };
  s0 -> s2 [70, 70] { R2268 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R2268 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R2268 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R2268 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2268 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R2268 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R2268 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R2268 += 1, R59 += 1, R60 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R2270 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R2269 += 1, R2270 += 1 };
  s0 -> s2 [70, 70] { R2270 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R2270 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R2270 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R2270 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2270 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R2270 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R2270 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R2270 += 1, R65 += 1, R66 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R2272 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R2271 += 1, R2272 += 1 };
  s0 -> s2 [70, 70] { R2272 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R2272 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R2272 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R2272 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2272 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R2272 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R2272 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R2272 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R2292 += 1 };
  s0 -> s0 [0, 65535] { R2291 += 1, R2292 += 1 };
  s0 -> s2 [70, 70] { R2292 += 1 };
  s0 -> s1 [71, 65535] { R2292 += 1 };
  s1 -> s1 [0, 69] { R2292 += 1 };
  s1 -> s2 [70, 70] { R2292 += 1 };
  s1 -> s1 [71, 65535] { R2292 += 1 };
  s2 -> s2 [0, 65535] { R2292 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R2294 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R2293 += 1, R2294 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R2294 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R2296 += 1 };
  s0 -> s2 [0, 65535] { R2296 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R2295 += 1, R2296 += 1 };
  s0 -> s3 [70, 70] { R2296 += 1 };
  s0 -> s1 [71, 65535] { R2296 += 1 };
  s1 -> s1 [0, 69] { R2296 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R2296 += 1 };
  s1 -> s1 [71, 65535] { R2296 += 1 };
  s2 -> s1 [0, 69] { R2296 += 1 };
  s2 -> s2 [0, 65535] { R2296 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R2296 += 1 };
  s2 -> s1 [71, 65535] { R2296 += 1 };
  s3 -> s3 [0, 65535] { R2296 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R2298 += 1, R2236 += 1 };
  s0 -> s2 [0, 65535] { R2298 += 1, R2235 += 1, R2236 += 1 };
  s0 -> s0 [0, 65535] { R2297 += 1, R2298 += 1 };
  s0 -> s1 [71, 65535] { R2298 += 1, R2236 += 1 };
  s1 -> s1 [0, 69] { R2298 += 1, R2236 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2298 += 1 };
  s1 -> s1 [71, 65535] { R2298 += 1, R2236 += 1 };
  s2 -> s1 [0, 69] { R2298 += 1, R2236 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2298 += 1, R2235 += 1, R2236 += 1 };
  s2 -> s1 [71, 65535] { R2298 += 1, R2236 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s0 [0, 65535] { R2299 += 1, R2300 += 1 };
  s0 -> s1 [0, 65535] { R2300 += 1, R2237 += 1, R2238 += 1 };
  s0 -> s2 [0, 65535] { R2300 += 1, R2238 += 1, R20 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2300 += 1, R2237 += 1, R2238 += 1 };
  s1 -> s2 [0, 65535] { R2300 += 1, R2238 += 1, R20 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2300 += 1, R2238 += 1, R20 += 1 };
  s2 -> s4 [0, 65535] { R2300 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2300 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R2302 += 1, R2240 += 1 };
  s0 -> s0 [0, 65535] { R2301 += 1, R2302 += 1 };
  s0 -> s2 [0, 65535] { R2302 += 1, R2239 += 1, R2240 += 1 };
  s0 -> s1 [75, 65535] { R2302 += 1, R2240 += 1 };
  s1 -> s1 [0, 70] { R2302 += 1, R2240 += 1 };
  s1 -> s1 [0, 65535] { R2302 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R2302 += 1, R2240 += 1 };
  s2 -> s1 [0, 70] { R2302 += 1, R2240 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2302 += 1, R2239 += 1, R2240 += 1 };
  s2 -> s1 [75, 65535] { R2302 += 1, R2240 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R2303 += 1, R2304 += 1 };
  s0 -> s1 [0, 65535] { R2304 += 1, R2242 += 1, R84 += 1 };
  s0 -> s2 [0, 65535] { R2304 += 1, R2241 += 1, R2242 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R2304 += 1 };
  s1 -> s1 [0, 65535] { R2304 += 1, R2242 += 1, R84 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R2304 += 1, R2242 += 1, R84 += 1 };
  s2 -> s2 [0, 65535] { R2304 += 1, R2241 += 1, R2242 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2304 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R2306 += 1, R2244 += 1 };
  s0 -> s2 [0, 65535] { R2306 += 1, R2244 += 1, R86 += 1 };
  s0 -> s3 [0, 65535] { R2306 += 1, R2243 += 1, R2244 += 1 };
  s0 -> s0 [0, 65535] { R2305 += 1, R2306 += 1 };
  s0 -> s1 [76, 65535] { R2306 += 1, R2244 += 1 };
  s1 -> s1 [0, 74] { R2306 += 1, R2244 += 1 };
  s1 -> s1 [0, 65535] { R2306 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [76, 65535] { R2306 += 1, R2244 += 1 };
  s2 -> s1 [0, 74] { R2306 += 1, R2244 += 1 };
  s2 -> s2 [0, 65535] { R2306 += 1, R2244 += 1, R86 += 1 };
  s2 -> s5 [0, 65535] { R2306 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [76, 65535] { R2306 += 1, R2244 += 1 };
  s3 -> s1 [0, 74] { R2306 += 1, R2244 += 1 };
  s3 -> s2 [0, 65535] { R2306 += 1, R2244 += 1, R86 += 1 };
  s3 -> s3 [0, 65535] { R2306 += 1, R2243 += 1, R2244 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [76, 65535] { R2306 += 1, R2244 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2306 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R2308 += 1, R2246 += 1, R90 += 1 };
  s0 -> s2 [0, 65535] { R2308 += 1, R2246 += 1 };
  s0 -> s3 [0, 65535] { R2308 += 1, R2245 += 1, R2246 += 1 };
  s0 -> s0 [0, 65535] { R2307 += 1, R2308 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R2308 += 1, R2246 += 1, R90 += 1 };
  s1 -> s2 [0, 65535] { R2308 += 1, R2246 += 1 };
  s1 -> s5 [0, 65535] { R2308 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2308 += 1, R2246 += 1 };
  s2 -> s5 [0, 65535] { R2308 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R2308 += 1, R2246 += 1, R90 += 1 };
  s3 -> s2 [0, 65535] { R2308 += 1, R2246 += 1 };
  s3 -> s3 [0, 65535] { R2308 += 1, R2245 += 1, R2246 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2308 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R2309 += 1, R2310 += 1 };
  s0 -> s1 [0, 65535] { R2310 += 1, R2248 += 1, R95 += 1, R96 += 1 };
  s0 -> s2 [0, 65535] { R2310 += 1, R2247 += 1, R2248 += 1 };
  s0 -> s3 [0, 65535] { R2310 += 1, R2248 += 1, R94 += 1, R95 += 1 };
  s1 -> s1 [0, 65535] { R2310 += 1, R2248 += 1, R95 += 1, R96 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R2310 += 1 };
  s1 -> s6 [0, 65535] { R2310 += 1, R2248 += 1 };
  s2 -> s1 [0, 65535] { R2310 += 1, R2248 += 1, R95 += 1, R96 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2310 += 1, R2247 += 1, R2248 += 1 };
  s2 -> s3 [0, 65535] { R2310 += 1, R2248 += 1, R94 += 1, R95 += 1 };
  s3 -> s1 [0, 65535] { R2310 += 1, R2248 += 1, R95 += 1, R96 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R2310 += 1 };
  s3 -> s3 [0, 65535] { R2310 += 1, R2248 += 1, R94 += 1, R95 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2310 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R2310 += 1 };
  s6 -> s6 [0, 65535] { R2310 += 1, R2248 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R2312 += 1, R2250 += 1, R101 += 1 };
  s0 -> s2 [0, 65535] { R2312 += 1, R2250 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [0, 65535] { R2312 += 1, R2250 += 1, R100 += 1, R101 += 1 };
  s0 -> s0 [0, 65535] { R2311 += 1, R2312 += 1 };
  s0 -> s4 [0, 65535] { R2312 += 1, R2249 += 1, R2250 += 1 };
  s0 -> s1 [76, 65535] { R2312 += 1, R2250 += 1, R101 += 1 };
  s1 -> s1 [0, 74] { R2312 += 1, R2250 += 1, R101 += 1 };
  s1 -> s1 [0, 65535] { R2312 += 1, R2250 += 1 };
  s1 -> s6 [0, 65535] { R2312 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R2312 += 1, R2250 += 1, R101 += 1 };
  s2 -> s1 [0, 74] { R2312 += 1, R2250 += 1, R101 += 1 };
  s2 -> s2 [0, 65535] { R2312 += 1, R2250 += 1, R101 += 1, R102 += 1 };
  s2 -> s6 [0, 65535] { R2312 += 1 };
  s2 -> s7 [0, 65535] { R2312 += 1, R2250 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [76, 65535] { R2312 += 1, R2250 += 1, R101 += 1 };
  s3 -> s1 [0, 74] { R2312 += 1, R2250 += 1, R101 += 1 };
  s3 -> s2 [0, 65535] { R2312 += 1, R2250 += 1, R101 += 1, R102 += 1 };
  s3 -> s3 [0, 65535] { R2312 += 1, R2250 += 1, R100 += 1, R101 += 1 };
  s3 -> s6 [0, 65535] { R2312 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [76, 65535] { R2312 += 1, R2250 += 1, R101 += 1 };
  s4 -> s1 [0, 74] { R2312 += 1, R2250 += 1, R101 += 1 };
  s4 -> s2 [0, 65535] { R2312 += 1, R2250 += 1, R101 += 1, R102 += 1 };
  s4 -> s3 [0, 65535] { R2312 += 1, R2250 += 1, R100 += 1, R101 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2312 += 1, R2249 += 1, R2250 += 1 };
  s4 -> s1 [76, 65535] { R2312 += 1, R2250 += 1, R101 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2312 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R2312 += 1 };
  s7 -> s7 [0, 65535] { R2312 += 1, R2250 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 74] { R2314 += 1, R2252 += 1, R1782 += 1, R1784 += 1 };
  s0 -> s2 [0, 65535] { R2314 += 1, R2252 += 1, R1782 += 1, R1783 += 1, R1784 += 1 };
  s0 -> s3 [0, 65535] { R2314 += 1, R2252 += 1, R1781 += 1, R1782 += 1 };
  s0 -> s4 [0, 65535] { R2314 += 1, R2251 += 1, R2252 += 1 };
  s0 -> s0 [0, 65535] { R2313 += 1, R2314 += 1 };
  s0 -> s5 [75, 75] { R2314 += 1, R2252 += 1, R1782 += 1, R1784 += 1 };
  s0 -> s1 [76, 65535] { R2314 += 1, R2252 += 1, R1782 += 1, R1784 += 1 };
  s1 -> s1 [0, 74] { R2314 += 1, R2252 += 1, R1782 += 1, R1784 += 1 };
  s1 -> s5 [75, 75] { R2314 += 1, R2252 += 1, R1782 += 1, R1784 += 1 };
  s1 -> s1 [76, 65535] { R2314 += 1, R2252 += 1, R1782 += 1, R1784 += 1 };
  s2 -> s1 [0, 74] { R2314 += 1, R2252 += 1, R1782 += 1, R1784 += 1 };
  s2 -> s2 [0, 65535] { R2314 += 1, R2252 += 1, R1782 += 1, R1783 += 1, R1784 += 1 };
  s2 -> s5 [75, 75] { R2314 += 1, R2252 += 1, R1782 += 1, R1784 += 1 };
  s2 -> s1 [76, 65535] { R2314 += 1, R2252 += 1, R1782 += 1, R1784 += 1 };
  s3 -> s1 [0, 74] { R2314 += 1, R2252 += 1, R1782 += 1, R1784 += 1 };
  s3 -> s2 [0, 65535] { R2314 += 1, R2252 += 1, R1782 += 1, R1783 += 1, R1784 += 1 };
  s3 -> s3 [0, 65535] { R2314 += 1, R2252 += 1, R1781 += 1, R1782 += 1 };
  s3 -> s5 [75, 75] { R2314 += 1, R2252 += 1, R1782 += 1, R1784 += 1 };
  s3 -> s1 [76, 65535] { R2314 += 1, R2252 += 1, R1782 += 1, R1784 += 1 };
  s4 -> s1 [0, 74] { R2314 += 1, R2252 += 1, R1782 += 1, R1784 += 1 };
  s4 -> s2 [0, 65535] { R2314 += 1, R2252 += 1, R1782 += 1, R1783 += 1, R1784 += 1 };
  s4 -> s3 [0, 65535] { R2314 += 1, R2252 += 1, R1781 += 1, R1782 += 1 };
  s4 -> s4 [0, 65535] { R2314 += 1, R2251 += 1, R2252 += 1 };
  s4 -> s5 [75, 75] { R2314 += 1, R2252 += 1, R1782 += 1, R1784 += 1 };
  s4 -> s1 [76, 65535] { R2314 += 1, R2252 += 1, R1782 += 1, R1784 += 1 };
  s5 -> s6 [0, 65535] { R2314 += 1, R2252 += 1 };
  s5 -> s7 [0, 65535] { R2314 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R2314 += 1, R2252 += 1, R1782 += 1, R1784 += 1 };
  s5 -> s9 [0, 65535] { R2314 += 1, R2252 += 1, R1782 += 1 };
  s6 -> s6 [0, 65535] { R2314 += 1, R2252 += 1 };
  s6 -> s7 [0, 65535] { R2314 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R2314 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s6 [0, 65535] { R2314 += 1, R2252 += 1 };
  s9 -> s7 [0, 65535] { R2314 += 1 };
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R2314 += 1, R2252 += 1, R1782 += 1 };
  accepting s8, s5, s9, s6, s7;
};
automaton value2_29 {
  init s0;
  s0 -> s0 [0, 65535] { R2315 += 1, R2316 += 1 };
  s0 -> s1 [0, 65535] { R2316 += 1, R2254 += 1, R2231 += 1, R2233 += 1, R2234 += 1 };
  s0 -> s2 [0, 65535] { R2316 += 1, R2254 += 1, R2231 += 1, R2232 += 1, R2233 += 1 };
  s0 -> s3 [0, 65535] { R2316 += 1, R2254 += 1 };
  s0 -> s4 [0, 65535] { R2316 += 1, R2253 += 1, R2254 += 1 };
  s1 -> s6 [0, 65535] { R2316 += 1 };
  s1 -> s1 [0, 65535] { R2316 += 1, R2254 += 1, R2231 += 1, R2233 += 1, R2234 += 1 };
  s1 -> s7 [0, 65535] { R2316 += 1, R2254 += 1, R2231 += 1 };
  s1 -> s3 [0, 65535] { R2316 += 1, R2254 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R2316 += 1 };
  s2 -> s1 [0, 65535] { R2316 += 1, R2254 += 1, R2231 += 1, R2233 += 1, R2234 += 1 };
  s2 -> s2 [0, 65535] { R2316 += 1, R2254 += 1, R2231 += 1, R2232 += 1, R2233 += 1 };
  s2 -> s3 [0, 65535] { R2316 += 1, R2254 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R2316 += 1 };
  s3 -> s3 [0, 65535] { R2316 += 1, R2254 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R2316 += 1, R2254 += 1, R2231 += 1, R2233 += 1, R2234 += 1 };
  s4 -> s2 [0, 65535] { R2316 += 1, R2254 += 1, R2231 += 1, R2232 += 1, R2233 += 1 };
  s4 -> s3 [0, 65535] { R2316 += 1, R2254 += 1 };
  s4 -> s4 [0, 65535] { R2316 += 1, R2253 += 1, R2254 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2316 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R2316 += 1 };
  s7 -> s7 [0, 65535] { R2316 += 1, R2254 += 1, R2231 += 1 };
  s7 -> s3 [0, 65535] { R2316 += 1, R2254 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R2318 += 1, R2274 += 1, R21 += 1 };
  s0 -> s2 [0, 65535] { R2318 += 1, R2273 += 1, R2274 += 1 };
  s0 -> s0 [0, 65535] { R2317 += 1, R2318 += 1 };
  s1 -> s1 [0, 65535] { R2318 += 1, R2274 += 1, R21 += 1 };
  s1 -> s4 [0, 65535] { R2318 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R2318 += 1, R2274 += 1, R21 += 1 };
  s2 -> s2 [0, 65535] { R2318 += 1, R2273 += 1, R2274 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2318 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R2320 += 1, R2276 += 1 };
  s0 -> s2 [0, 65535] { R2320 += 1, R2275 += 1, R2276 += 1 };
  s0 -> s0 [0, 65535] { R2319 += 1, R2320 += 1 };
  s0 -> s3 [70, 70] { R2320 += 1, R2276 += 1 };
  s0 -> s4 [70, 70] { R2320 += 1, R2276 += 1 };
  s0 -> s5 [75, 75] { R2320 += 1, R2276 += 1 };
  s0 -> s1 [76, 65535] { R2320 += 1, R2276 += 1 };
  s1 -> s1 [0, 69] { R2320 += 1, R2276 += 1 };
  s1 -> s3 [70, 70] { R2320 += 1, R2276 += 1 };
  s1 -> s4 [70, 70] { R2320 += 1, R2276 += 1 };
  s1 -> s5 [75, 75] { R2320 += 1, R2276 += 1 };
  s1 -> s1 [76, 65535] { R2320 += 1, R2276 += 1 };
  s2 -> s1 [0, 69] { R2320 += 1, R2276 += 1 };
  s2 -> s2 [0, 65535] { R2320 += 1, R2275 += 1, R2276 += 1 };
  s2 -> s3 [70, 70] { R2320 += 1, R2276 += 1 };
  s2 -> s4 [70, 70] { R2320 += 1, R2276 += 1 };
  s2 -> s5 [75, 75] { R2320 += 1, R2276 += 1 };
  s2 -> s1 [76, 65535] { R2320 += 1, R2276 += 1 };
  s4 -> s4 [0, 70] { R2320 += 1, R2276 += 1 };
  s4 -> s7 [75, 75] { R2320 += 1, R2276 += 1 };
  s4 -> s4 [76, 65535] { R2320 += 1, R2276 += 1 };
  s5 -> s5 [0, 69] { R2320 += 1, R2276 += 1 };
  s5 -> s5 [0, 65535] { R2320 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R2320 += 1, R2276 += 1 };
  s5 -> s8 [70, 70] { R2320 += 1, R2276 += 1 };
  s5 -> s5 [75, 65535] { R2320 += 1, R2276 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R2320 += 1, R2276 += 1 };
  s7 -> s7 [0, 65535] { R2320 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R2320 += 1, R2276 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R2320 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R2322 += 1, R2278 += 1, R83 += 1 };
  s0 -> s0 [0, 65535] { R2321 += 1, R2322 += 1 };
  s0 -> s2 [0, 65535] { R2322 += 1, R2277 += 1, R2278 += 1 };
  s0 -> s3 [70, 70] { R2322 += 1, R2278 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R2322 += 1, R2278 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R2322 += 1, R2278 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R2322 += 1, R2278 += 1, R83 += 1 };
  s1 -> s1 [0, 65535] { R2322 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R2322 += 1, R2278 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R2322 += 1, R2278 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R2322 += 1, R2278 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R2322 += 1, R2278 += 1, R83 += 1 };
  s2 -> s2 [0, 65535] { R2322 += 1, R2277 += 1, R2278 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R2322 += 1, R2278 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R2322 += 1, R2278 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R2322 += 1, R2278 += 1, R83 += 1 };
  s3 -> s3 [0, 65535] { R2322 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R2322 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2322 += 1, R2278 += 1, R83 += 1 };
  s5 -> s5 [0, 65535] { R2322 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R2324 += 1, R2280 += 1, R85 += 1 };
  s0 -> s0 [0, 65535] { R2323 += 1, R2324 += 1 };
  s0 -> s2 [0, 65535] { R2324 += 1, R2279 += 1, R2280 += 1 };
  s0 -> s3 [70, 70] { R2324 += 1, R2280 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R2324 += 1, R2280 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R2324 += 1, R2280 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R2324 += 1, R2280 += 1, R85 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2324 += 1 };
  s1 -> s3 [70, 70] { R2324 += 1, R2280 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R2324 += 1, R2280 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R2324 += 1, R2280 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R2324 += 1, R2280 += 1, R85 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2324 += 1, R2279 += 1, R2280 += 1 };
  s2 -> s3 [70, 70] { R2324 += 1, R2280 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R2324 += 1, R2280 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R2324 += 1, R2280 += 1, R85 += 1 };
  s3 -> s6 [0, 65535] { R2324 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2324 += 1, R2280 += 1, R85 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2324 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2324 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R2326 += 1, R2282 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R2326 += 1, R2282 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R2325 += 1, R2326 += 1 };
  s0 -> s3 [0, 65535] { R2326 += 1, R2281 += 1, R2282 += 1 };
  s0 -> s4 [70, 70] { R2326 += 1, R2282 += 1, R87 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R2326 += 1, R2282 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R2326 += 1, R2282 += 1, R87 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R2326 += 1, R2282 += 1, R88 += 1 };
  s0 -> s1 [71, 74] { R2326 += 1, R2282 += 1, R88 += 1 };
  s0 -> s2 [71, 65535] { R2326 += 1, R2282 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R2326 += 1, R2282 += 1, R88 += 1 };
  s0 -> s1 [76, 65535] { R2326 += 1, R2282 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R2326 += 1, R2282 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R2326 += 1, R2282 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R2326 += 1, R2282 += 1, R88 += 1 };
  s1 -> s1 [71, 74] { R2326 += 1, R2282 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R2326 += 1, R2282 += 1, R88 += 1 };
  s1 -> s1 [76, 65535] { R2326 += 1, R2282 += 1, R88 += 1 };
  s2 -> s1 [0, 69] { R2326 += 1, R2282 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R2326 += 1, R2282 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R2326 += 1, R2282 += 1, R87 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R2326 += 1, R2282 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R2326 += 1, R2282 += 1, R87 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R2326 += 1, R2282 += 1, R88 += 1 };
  s2 -> s1 [71, 74] { R2326 += 1, R2282 += 1, R88 += 1 };
  s2 -> s2 [71, 65535] { R2326 += 1, R2282 += 1, R87 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R2326 += 1, R2282 += 1, R88 += 1 };
  s2 -> s1 [76, 65535] { R2326 += 1, R2282 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R2326 += 1, R2282 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R2326 += 1, R2282 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R2326 += 1, R2281 += 1, R2282 += 1 };
  s3 -> s4 [70, 70] { R2326 += 1, R2282 += 1, R87 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R2326 += 1, R2282 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R2326 += 1, R2282 += 1, R87 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R2326 += 1, R2282 += 1, R88 += 1 };
  s3 -> s1 [71, 74] { R2326 += 1, R2282 += 1, R88 += 1 };
  s3 -> s2 [71, 65535] { R2326 += 1, R2282 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R2326 += 1, R2282 += 1, R88 += 1 };
  s3 -> s1 [76, 65535] { R2326 += 1, R2282 += 1, R88 += 1 };
  s4 -> s5 [0, 74] { R2326 += 1, R2282 += 1, R88 += 1 };
  s4 -> s4 [0, 65535] { R2326 += 1, R2282 += 1, R87 += 1, R88 += 1 };
  s4 -> s11 [75, 75] { R2326 += 1, R2282 += 1, R88 += 1 };
  s4 -> s5 [76, 65535] { R2326 += 1, R2282 += 1, R88 += 1 };
  s5 -> s5 [0, 74] { R2326 += 1, R2282 += 1, R88 += 1 };
  s5 -> s11 [75, 75] { R2326 += 1, R2282 += 1, R88 += 1 };
  s5 -> s5 [76, 65535] { R2326 += 1, R2282 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R2326 += 1, R2282 += 1, R88 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R2326 += 1 };
  s8 -> s10 [70, 70] { R2326 += 1, R2282 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R2326 += 1, R2282 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R2326 += 1, R2282 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R2326 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R2326 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R2326 += 1, R2282 += 1, R88 += 1 };
  s12 -> s12 [0, 65535] { R2326 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R2328 += 1, R2284 += 1, R91 += 1, R92 += 1 };
  s0 -> s0 [0, 65535] { R2327 += 1, R2328 += 1 };
  s0 -> s2 [0, 65535] { R2328 += 1, R2283 += 1, R2284 += 1 };
  s0 -> s3 [70, 70] { R2328 += 1, R2284 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R2328 += 1, R2284 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R2328 += 1, R2284 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R2328 += 1, R2284 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 65535] { R2328 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R2328 += 1, R2284 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R2328 += 1, R2284 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R2328 += 1, R2284 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R2328 += 1, R2284 += 1, R91 += 1, R92 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2328 += 1, R2283 += 1, R2284 += 1 };
  s2 -> s3 [70, 70] { R2328 += 1, R2284 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R2328 += 1, R2284 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R2328 += 1, R2284 += 1, R91 += 1, R92 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2328 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R2328 += 1 };
  s4 -> s4 [0, 65535] { R2328 += 1, R2284 += 1, R91 += 1, R92 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2328 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R2330 += 1, R2286 += 1, R97 += 1, R98 += 1 };
  s0 -> s0 [0, 65535] { R2329 += 1, R2330 += 1 };
  s0 -> s2 [0, 65535] { R2330 += 1, R2285 += 1, R2286 += 1 };
  s0 -> s3 [70, 70] { R2330 += 1, R2286 += 1, R97 += 1, R98 += 1 };
  s0 -> s4 [70, 70] { R2330 += 1, R2286 += 1, R97 += 1, R98 += 1 };
  s0 -> s1 [71, 65535] { R2330 += 1, R2286 += 1, R97 += 1, R98 += 1 };
  s1 -> s1 [0, 69] { R2330 += 1, R2286 += 1, R97 += 1, R98 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2330 += 1 };
  s1 -> s3 [70, 70] { R2330 += 1, R2286 += 1, R97 += 1, R98 += 1 };
  s1 -> s4 [70, 70] { R2330 += 1, R2286 += 1, R97 += 1, R98 += 1 };
  s1 -> s1 [71, 65535] { R2330 += 1, R2286 += 1, R97 += 1, R98 += 1 };
  s2 -> s1 [0, 69] { R2330 += 1, R2286 += 1, R97 += 1, R98 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2330 += 1, R2285 += 1, R2286 += 1 };
  s2 -> s3 [70, 70] { R2330 += 1, R2286 += 1, R97 += 1, R98 += 1 };
  s2 -> s4 [70, 70] { R2330 += 1, R2286 += 1, R97 += 1, R98 += 1 };
  s2 -> s1 [71, 65535] { R2330 += 1, R2286 += 1, R97 += 1, R98 += 1 };
  s3 -> s3 [0, 65535] { R2330 += 1, R2286 += 1, R97 += 1, R98 += 1 };
  s3 -> s6 [0, 65535] { R2330 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2330 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2330 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R2332 += 1, R2288 += 1, R1777 += 1, R1778 += 1 };
  s0 -> s0 [0, 65535] { R2331 += 1, R2332 += 1 };
  s0 -> s2 [0, 65535] { R2332 += 1, R2287 += 1, R2288 += 1 };
  s0 -> s3 [70, 70] { R2332 += 1, R2288 += 1, R1777 += 1, R1778 += 1 };
  s0 -> s4 [70, 70] { R2332 += 1, R2288 += 1, R1777 += 1, R1778 += 1 };
  s0 -> s1 [71, 65535] { R2332 += 1, R2288 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s1 [0, 69] { R2332 += 1, R2288 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s1 [0, 65535] { R2332 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R2332 += 1, R2288 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s4 [70, 70] { R2332 += 1, R2288 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s1 [71, 65535] { R2332 += 1, R2288 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s1 [0, 69] { R2332 += 1, R2288 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2332 += 1, R2287 += 1, R2288 += 1 };
  s2 -> s3 [70, 70] { R2332 += 1, R2288 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s4 [70, 70] { R2332 += 1, R2288 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s1 [71, 65535] { R2332 += 1, R2288 += 1, R1777 += 1, R1778 += 1 };
  s3 -> s3 [0, 65535] { R2332 += 1, R2288 += 1, R1777 += 1, R1778 += 1 };
  s3 -> s6 [0, 65535] { R2332 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2332 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2332 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R2334 += 1, R2290 += 1, R2226 += 1, R2227 += 1, R2228 += 1 };
  s0 -> s2 [0, 69] { R2334 += 1, R2290 += 1, R2225 += 1, R2226 += 1 };
  s0 -> s3 [0, 65535] { R2334 += 1, R2289 += 1, R2290 += 1 };
  s0 -> s0 [0, 65535] { R2333 += 1, R2334 += 1 };
  s0 -> s4 [70, 70] { R2334 += 1, R2290 += 1, R2225 += 1, R2226 += 1 };
  s0 -> s5 [70, 70] { R2334 += 1, R2290 += 1, R2225 += 1, R2226 += 1 };
  s0 -> s6 [70, 70] { R2334 += 1, R2290 += 1, R2226 += 1, R2227 += 1, R2228 += 1 };
  s0 -> s7 [70, 70] { R2334 += 1, R2290 += 1, R2226 += 1, R2227 += 1, R2228 += 1 };
  s0 -> s1 [71, 65535] { R2334 += 1, R2290 += 1, R2226 += 1, R2227 += 1, R2228 += 1 };
  s0 -> s2 [71, 65535] { R2334 += 1, R2290 += 1, R2225 += 1, R2226 += 1 };
  s1 -> s1 [0, 69] { R2334 += 1, R2290 += 1, R2226 += 1, R2227 += 1, R2228 += 1 };
  s1 -> s1 [0, 65535] { R2334 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s6 [70, 70] { R2334 += 1, R2290 += 1, R2226 += 1, R2227 += 1, R2228 += 1 };
  s1 -> s7 [70, 70] { R2334 += 1, R2290 += 1, R2226 += 1, R2227 += 1, R2228 += 1 };
  s1 -> s1 [71, 65535] { R2334 += 1, R2290 += 1, R2226 += 1, R2227 += 1, R2228 += 1 };
  s2 -> s1 [0, 69] { R2334 += 1, R2290 += 1, R2226 += 1, R2227 += 1, R2228 += 1 };
  s2 -> s2 [0, 69] { R2334 += 1, R2290 += 1, R2225 += 1, R2226 += 1 };
  s2 -> s4 [70, 70] { R2334 += 1, R2290 += 1, R2225 += 1, R2226 += 1 };
  s2 -> s5 [70, 70] { R2334 += 1, R2290 += 1, R2225 += 1, R2226 += 1 };
  s2 -> s6 [70, 70] { R2334 += 1, R2290 += 1, R2226 += 1, R2227 += 1, R2228 += 1 };
  s2 -> s7 [70, 70] { R2334 += 1, R2290 += 1, R2226 += 1, R2227 += 1, R2228 += 1 };
  s2 -> s1 [71, 65535] { R2334 += 1, R2290 += 1, R2226 += 1, R2227 += 1, R2228 += 1 };
  s2 -> s2 [71, 65535] { R2334 += 1, R2290 += 1, R2225 += 1, R2226 += 1 };
  s3 -> s1 [0, 69] { R2334 += 1, R2290 += 1, R2226 += 1, R2227 += 1, R2228 += 1 };
  s3 -> s2 [0, 69] { R2334 += 1, R2290 += 1, R2225 += 1, R2226 += 1 };
  s3 -> s3 [0, 65535] { R2334 += 1, R2289 += 1, R2290 += 1 };
  s3 -> s4 [70, 70] { R2334 += 1, R2290 += 1, R2225 += 1, R2226 += 1 };
  s3 -> s5 [70, 70] { R2334 += 1, R2290 += 1, R2225 += 1, R2226 += 1 };
  s3 -> s6 [70, 70] { R2334 += 1, R2290 += 1, R2226 += 1, R2227 += 1, R2228 += 1 };
  s3 -> s7 [70, 70] { R2334 += 1, R2290 += 1, R2226 += 1, R2227 += 1, R2228 += 1 };
  s3 -> s1 [71, 65535] { R2334 += 1, R2290 += 1, R2226 += 1, R2227 += 1, R2228 += 1 };
  s3 -> s2 [71, 65535] { R2334 += 1, R2290 += 1, R2225 += 1, R2226 += 1 };
  s5 -> s5 [0, 65535] { R2334 += 1, R2290 += 1, R2225 += 1, R2226 += 1 };
  s5 -> s7 [0, 65535] { R2334 += 1, R2290 += 1, R2226 += 1, R2227 += 1, R2228 += 1 };
  s6 -> s6 [0, 65535] { R2334 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R2334 += 1 };
  s7 -> s7 [0, 65535] { R2334 += 1, R2290 += 1, R2226 += 1, R2227 += 1, R2228 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R2334 += 1 };
  accepting s8, s9, s6, s1, s7;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R2252 && R3 = R2334 && R23 - R2334 = -1 && R24 = R2334 && R25 - R2334 = -1 && R26 = R2334 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R1782 + -1*R1778 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R1782 + -1*R1778 - R66 = 0 && R55 + R96 + R93 + -1*R1784 + -1*R1780 - R68 = 0 && R65 + R1781 + R1777 = 0 && R67 + R1783 + R1779 = 0 && R2251 = 0 && R2275 = 0 && R2276 = 0 && R2281 = 0 && R2282 = 0 && R2289 = 0 && R2290 = 0 && R2291 = 0 && R2292 = R2334 && R2293 = 0 && R2294 = R2334 && R2295 = 0 && R2296 = R2334 && R2297 = 0 && R2298 = R2334 && R2299 = 0 && R2300 = R2334 && R2301 = 0 && R2302 = R2334 && R2303 = 0 && R2304 = R2334 && R2305 = 0 && R2306 = R2334 && R2307 = 0 && R2308 = R2334 && R2309 = 0 && R2310 = R2334 && R2311 = 0 && R2312 = R2334 && R2313 = 0 && R2314 = R2334 && R2315 = 0 && R2316 = R2334 && R2317 = 0 && R2318 = R2334 && R2319 = 0 && R2320 = R2334 && R2321 = 0 && R2322 = R2334 && R2323 = 0 && R2324 = R2334 && R2325 = 0 && R2326 = R2334 && R2327 = 0 && R2328 = R2334 && R2329 = 0 && R2330 = R2334 && R2331 = 0 && R2332 = R2334 && R2333 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R102 + R99 < 1 && -1*R1782 + -1*R1778 - R66 < 1 && -1*R1784 + -1*R1780 - R68 < 1 && -1 < R2252 && 0 < R2334 && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R1782 + -1*R1778 - R66 = 0 || R66 + R1782 + R1778 < 1) && (R59 + R100 + R97 != 0 || R60 + R101 + R98 + -1*R1782 + -1*R1778 - R66 = 0 || R66 + R1782 + R1778 < 1) && (R66 + R1782 + R1778 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R1784 + R1780 < 1) && (R53 + R94 + R91 = 0 || R68 + R1784 + R1780 < 1))) && (R66 + R1782 + R1778 != 0 || ((R59 + R100 + R97 != 0 || R60 + R101 + R98 = 0 || R68 + R1784 + R1780 < 1) && (R59 + R100 + R97 = 0 || R68 + R1784 + R1780 < 1))) && (R66 + R1782 + R1778 != 0 || ((R73 + R2230 + R2225 != 0 || R74 + R2231 + R2226 = 0 || R68 + R1784 + R1780 < 1) && (R73 + R2230 + R2225 = 0 || R68 + R1784 + R1780 < 1))) && (R68 + R1784 + R1780 != 0 || R77 + R2234 + R2229 = 0 || (R75 + R2232 + R2227 = 0 && R76 + R2233 + R2228 = 0)) && (R73 + R2230 + R2225 != 0 || R66 + R1782 + R1778 + -1*R2231 + -1*R2226 - R74 = 0 || R66 + R1782 + R1778 < 1) && (R75 + R2232 + R2227 != 0 || R68 + R1784 + R1780 + -1*R2233 + -1*R2228 - R76 = 0 || R68 + R1784 + R1780 < 1) && (R2235 != 0 || R2236 = R2252 || (R20 = 0 && R2252 = 0)) && (R2237 != 0 || R2238 = R2252 || (R20 = 0 && R2252 = 0)) && (R2239 != 0 || R2240 = R2252 || (R20 = 0 && R2252 = 0)) && (R2241 != 0 || R2242 = R2252 || (R20 = 0 && R2252 = 0)) && (R2243 != 0 || R2244 = R2252 || (R20 = 0 && R2252 = 0)) && (R2245 != 0 || R2246 = R2252 || (R20 = 0 && R2252 = 0)) && (R2247 != 0 || R2248 = R2252 || (R20 = 0 && R2252 = 0)) && (R2249 != 0 || R2250 = R2252 || (R20 = 0 && R2252 = 0)) && (R2253 != 0 || R2252 = R2254 || (R20 = 0 && R2252 = 0)) && (R21 = 0 || (R2273 = 0 && R2274 = 0)) && (R21 = 0 || (R2277 = 0 && R2278 = 0)) && (R21 = 0 || (R2279 = 0 && R2280 = 0)) && (R21 = 0 || (R2283 = 0 && R2284 = 0)) && (R21 = 0 || (R2285 = 0 && R2286 = 0)) && (R21 = 0 || (R2287 = 0 && R2288 = 0)) && (R22 = 0 || (R2255 = 0 && R2256 = 0)) && (R22 = 0 || (R2257 = 0 && R2258 = 0)) && (R22 = 0 || (R2259 = 0 && R2260 = 0)) && (R22 = 0 || (R2261 = 0 && R2262 = 0)) && (R22 = 0 || (R2263 = 0 && R2264 = 0)) && (R22 = 0 || (R2265 = 0 && R2266 = 0)) && (R22 = 0 || (R2267 = 0 && R2268 = 0)) && (R22 = 0 || (R2269 = 0 && R2270 = 0)) && (R22 = 0 || (R2271 = 0 && R2272 = 0)) && (R53 + R94 + R91 = 0 || R66 + R1782 + R1778 < 1) && (R59 + R100 + R97 = 0 || R66 + R1782 + R1778 < 1) && (R73 + R2230 + R2225 = 0 || R66 + R1782 + R1778 < 1) && (R75 + R2232 + R2227 = 0 || R68 + R1784 + R1780 < 1) && (R2235 = 0 || (R20 = 0 && R2252 = 0)) && (R2237 = 0 || (R20 = 0 && R2252 = 0)) && (R2239 = 0 || (R20 = 0 && R2252 = 0)) && (R2241 = 0 || (R20 = 0 && R2252 = 0)) && (R2243 = 0 || (R20 = 0 && R2252 = 0)) && (R2245 = 0 || (R20 = 0 && R2252 = 0)) && (R2247 = 0 || (R20 = 0 && R2252 = 0)) && (R2249 = 0 || (R20 = 0 && R2252 = 0)) && (R2253 = 0 || (R20 = 0 && R2252 = 0));
// End of Parikh automata intersection problem
