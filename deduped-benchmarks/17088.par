// Parikh automata intersection problem, generated by OSTRICH+
counter int R12, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R3451, R3452, R3453, R3454, R3455, R3456, R3457, R3458, R3459, R3460, R3461, R3462, R3463, R3464, R3795, R3796, R3797, R3798, R3799, R3800, R3801, R3802, R3803, R3804, R3805, R3806, R3807, R3808, R3809, R3810, R3811, R3812, R3813, R3814, R3815, R3816, R3817, R3818, R3819, R3820, R3821, R3822, R3823, R3824, R3825, R3826, R3827, R3828, R3829, R3830, R3831, R3832, R3833, R3834, R3835, R3836, R3837, R3838, R3839, R3840, R3841, R3842, R3843, R3844, R3845, R3846, R3847, R3848, R3849, R3850, R3851, R3852, R3853, R3854, R3855, R3856, R3857, R3858, R3859, R3860, R3861, R3862, R3863, R3864, R3865, R3866, R3867, R3868, R3869, R3870, R3871, R3872, R3873, R3874, R3875, R3876, R3877, R3878, R3879, R3880, R3881, R3882, R3883, R3884, R3885, R3886, R3887, R3888, R3889, R3890, R3891, R3892, R3893, R3894, R3895, R3896, R3897, R3898, R3899, R3900, R3901, R3902, R3903, R3904, R4, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R3825 += 1, R3826 += 1 };
  s0 -> s1 [0, 65535] { R3826 += 1, R22 += 1 };
  s1 -> s1 [0, 65535] { R3826 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R3828 += 1 };
  s0 -> s0 [0, 65535] { R3827 += 1, R3828 += 1 };
  s0 -> s2 [70, 70] { R3828 += 1 };
  s0 -> s3 [70, 70] { R3828 += 1 };
  s0 -> s1 [76, 65535] { R3828 += 1 };
  s1 -> s1 [0, 69] { R3828 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3828 += 1 };
  s1 -> s3 [70, 70] { R3828 += 1 };
  s1 -> s1 [76, 65535] { R3828 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R3828 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R3828 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R3830 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R3829 += 1, R3830 += 1 };
  s0 -> s2 [70, 70] { R3830 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R3830 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R3830 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R3830 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3830 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R3830 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R3830 += 1, R45 += 1 };
  s2 -> s2 [0, 65535] { R3830 += 1, R45 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R3832 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R3831 += 1, R3832 += 1 };
  s0 -> s2 [70, 70] { R3832 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R3832 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R3832 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R3832 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3832 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R3832 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R3832 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R3832 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R3834 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R3833 += 1, R3834 += 1 };
  s0 -> s2 [70, 70] { R3834 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R3834 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R3834 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R3834 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3834 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R3834 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R3834 += 1, R49 += 1, R50 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3834 += 1, R49 += 1, R50 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R3836 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R3835 += 1, R3836 += 1 };
  s0 -> s2 [70, 70] { R3836 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R3836 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R3836 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R3836 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3836 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R3836 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R3836 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3836 += 1, R53 += 1, R54 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R3838 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R3837 += 1, R3838 += 1 };
  s0 -> s2 [70, 70] { R3838 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R3838 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R3838 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R3838 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3838 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R3838 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R3838 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3838 += 1, R59 += 1, R60 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R3840 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R3839 += 1, R3840 += 1 };
  s0 -> s2 [70, 70] { R3840 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R3840 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R3840 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R3840 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3840 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R3840 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R3840 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535] { R3840 += 1, R65 += 1, R66 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R3842 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R3841 += 1, R3842 += 1 };
  s0 -> s2 [70, 70] { R3842 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R3842 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R3842 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R3842 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3842 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R3842 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R3842 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R3842 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R3862 += 1 };
  s0 -> s0 [0, 65535] { R3861 += 1, R3862 += 1 };
  s0 -> s2 [70, 70] { R3862 += 1 };
  s0 -> s1 [71, 65535] { R3862 += 1 };
  s1 -> s1 [0, 69] { R3862 += 1 };
  s1 -> s2 [70, 70] { R3862 += 1 };
  s1 -> s1 [71, 65535] { R3862 += 1 };
  s2 -> s2 [0, 65535] { R3862 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R3864 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R3863 += 1, R3864 += 1 };
  s1 -> s1 [0, 65535] { R3864 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R3866 += 1 };
  s0 -> s0 [0, 65535] { R3865 += 1, R3866 += 1 };
  s0 -> s2 [0, 65535] { R3866 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R3866 += 1 };
  s0 -> s1 [71, 65535] { R3866 += 1 };
  s1 -> s1 [0, 69] { R3866 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R3866 += 1 };
  s1 -> s1 [71, 65535] { R3866 += 1 };
  s2 -> s1 [0, 69] { R3866 += 1 };
  s2 -> s2 [0, 65535] { R3866 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R3866 += 1 };
  s2 -> s1 [71, 65535] { R3866 += 1 };
  s3 -> s3 [0, 65535] { R3866 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R3868 += 1, R3806 += 1 };
  s0 -> s2 [0, 65535] { R3868 += 1, R3805 += 1, R3806 += 1 };
  s0 -> s0 [0, 65535] { R3867 += 1, R3868 += 1 };
  s0 -> s1 [71, 65535] { R3868 += 1, R3806 += 1 };
  s1 -> s1 [0, 69] { R3868 += 1, R3806 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3868 += 1 };
  s1 -> s1 [71, 65535] { R3868 += 1, R3806 += 1 };
  s2 -> s1 [0, 69] { R3868 += 1, R3806 += 1 };
  s2 -> s2 [0, 65535] { R3868 += 1, R3805 += 1, R3806 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R3868 += 1, R3806 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s0 [0, 65535] { R3869 += 1, R3870 += 1 };
  s0 -> s1 [0, 65535] { R3870 += 1, R3808 += 1, R20 += 1 };
  s0 -> s2 [0, 65535] { R3870 += 1, R3807 += 1, R3808 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R3870 += 1 };
  s1 -> s1 [0, 65535] { R3870 += 1, R3808 += 1, R20 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R3870 += 1, R3808 += 1, R20 += 1 };
  s2 -> s2 [0, 65535] { R3870 += 1, R3807 += 1, R3808 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3870 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R3872 += 1, R3810 += 1 };
  s0 -> s2 [0, 65535] { R3872 += 1, R3809 += 1, R3810 += 1 };
  s0 -> s0 [0, 65535] { R3871 += 1, R3872 += 1 };
  s0 -> s1 [75, 65535] { R3872 += 1, R3810 += 1 };
  s1 -> s1 [0, 70] { R3872 += 1, R3810 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3872 += 1 };
  s1 -> s1 [75, 65535] { R3872 += 1, R3810 += 1 };
  s2 -> s1 [0, 70] { R3872 += 1, R3810 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R3872 += 1, R3809 += 1, R3810 += 1 };
  s2 -> s1 [75, 65535] { R3872 += 1, R3810 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R3874 += 1, R3811 += 1, R3812 += 1 };
  s0 -> s0 [0, 65535] { R3873 += 1, R3874 += 1 };
  s0 -> s2 [0, 65535] { R3874 += 1, R3812 += 1, R84 += 1 };
  s1 -> s1 [0, 65535] { R3874 += 1, R3811 += 1, R3812 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R3874 += 1, R3812 += 1, R84 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R3874 += 1, R3812 += 1, R84 += 1 };
  s2 -> s4 [0, 65535] { R3874 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3874 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R3876 += 1, R3814 += 1 };
  s0 -> s2 [0, 65535] { R3876 += 1, R3814 += 1, R86 += 1 };
  s0 -> s0 [0, 65535] { R3875 += 1, R3876 += 1 };
  s0 -> s3 [0, 65535] { R3876 += 1, R3813 += 1, R3814 += 1 };
  s0 -> s1 [76, 65535] { R3876 += 1, R3814 += 1 };
  s1 -> s1 [0, 74] { R3876 += 1, R3814 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R3876 += 1 };
  s1 -> s1 [76, 65535] { R3876 += 1, R3814 += 1 };
  s2 -> s1 [0, 74] { R3876 += 1, R3814 += 1 };
  s2 -> s5 [0, 65535] { R3876 += 1 };
  s2 -> s2 [0, 65535] { R3876 += 1, R3814 += 1, R86 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [76, 65535] { R3876 += 1, R3814 += 1 };
  s3 -> s1 [0, 74] { R3876 += 1, R3814 += 1 };
  s3 -> s2 [0, 65535] { R3876 += 1, R3814 += 1, R86 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3876 += 1, R3813 += 1, R3814 += 1 };
  s3 -> s1 [76, 65535] { R3876 += 1, R3814 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3876 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R3878 += 1, R3815 += 1, R3816 += 1 };
  s0 -> s2 [0, 65535] { R3878 += 1, R3816 += 1, R90 += 1 };
  s0 -> s0 [0, 65535] { R3877 += 1, R3878 += 1 };
  s0 -> s3 [0, 65535] { R3878 += 1, R3816 += 1 };
  s1 -> s1 [0, 65535] { R3878 += 1, R3815 += 1, R3816 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R3878 += 1, R3816 += 1, R90 += 1 };
  s1 -> s3 [0, 65535] { R3878 += 1, R3816 += 1 };
  s2 -> s4 [0, 65535] { R3878 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3878 += 1, R3816 += 1, R90 += 1 };
  s2 -> s3 [0, 65535] { R3878 += 1, R3816 += 1 };
  s3 -> s4 [0, 65535] { R3878 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3878 += 1, R3816 += 1 };
  s4 -> s4 [0, 65535] { R3878 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R3879 += 1, R3880 += 1 };
  s0 -> s1 [0, 65535] { R3880 += 1, R3818 += 1, R95 += 1, R96 += 1 };
  s0 -> s2 [0, 65535] { R3880 += 1, R3818 += 1, R94 += 1, R95 += 1 };
  s0 -> s3 [0, 65535] { R3880 += 1, R3817 += 1, R3818 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R3880 += 1, R3818 += 1, R95 += 1, R96 += 1 };
  s1 -> s6 [0, 65535] { R3880 += 1, R3818 += 1 };
  s1 -> s5 [0, 65535] { R3880 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R3880 += 1, R3818 += 1, R95 += 1, R96 += 1 };
  s2 -> s2 [0, 65535] { R3880 += 1, R3818 += 1, R94 += 1, R95 += 1 };
  s2 -> s5 [0, 65535] { R3880 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R3880 += 1, R3818 += 1, R95 += 1, R96 += 1 };
  s3 -> s2 [0, 65535] { R3880 += 1, R3818 += 1, R94 += 1, R95 += 1 };
  s3 -> s3 [0, 65535] { R3880 += 1, R3817 += 1, R3818 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3880 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R3880 += 1, R3818 += 1 };
  s6 -> s5 [0, 65535] { R3880 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R3882 += 1, R3820 += 1, R3455 += 1 };
  s0 -> s0 [0, 65535] { R3881 += 1, R3882 += 1 };
  s0 -> s2 [0, 65535] { R3882 += 1, R3819 += 1, R3820 += 1 };
  s0 -> s1 [0, 65535] { R3882 += 1, R3820 += 1 };
  s0 -> s1 [76, 65535] { R3882 += 1, R3820 += 1, R3455 += 1 };
  s1 -> s1 [0, 74] { R3882 += 1, R3820 += 1, R3455 += 1 };
  s1 -> s4 [0, 65535] { R3882 += 1 };
  s1 -> s1 [0, 65535] { R3882 += 1, R3820 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [76, 65535] { R3882 += 1, R3820 += 1, R3455 += 1 };
  s2 -> s1 [0, 74] { R3882 += 1, R3820 += 1, R3455 += 1 };
  s2 -> s2 [0, 65535] { R3882 += 1, R3819 += 1, R3820 += 1 };
  s2 -> s1 [0, 65535] { R3882 += 1, R3820 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [76, 65535] { R3882 += 1, R3820 += 1, R3455 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3882 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R3884 += 1, R3822 += 1 };
  s0 -> s2 [0, 65535] { R3884 += 1, R3822 += 1, R3462 += 1, R3464 += 1 };
  s0 -> s3 [0, 65535] { R3884 += 1, R3822 += 1, R3462 += 1 };
  s0 -> s0 [0, 65535] { R3883 += 1, R3884 += 1 };
  s0 -> s4 [0, 65535] { R3884 += 1, R3821 += 1, R3822 += 1 };
  s1 -> s6 [0, 65535] { R3884 += 1 };
  s1 -> s1 [0, 65535] { R3884 += 1, R3822 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R3884 += 1 };
  s2 -> s1 [0, 65535] { R3884 += 1, R3822 += 1 };
  s2 -> s2 [0, 65535] { R3884 += 1, R3822 += 1, R3462 += 1, R3464 += 1 };
  s2 -> s3 [0, 65535] { R3884 += 1, R3822 += 1, R3462 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3884 += 1 };
  s3 -> s1 [0, 65535] { R3884 += 1, R3822 += 1 };
  s3 -> s3 [0, 65535] { R3884 += 1, R3822 += 1, R3462 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R3884 += 1, R3822 += 1 };
  s4 -> s2 [0, 65535] { R3884 += 1, R3822 += 1, R3462 += 1, R3464 += 1 };
  s4 -> s3 [0, 65535] { R3884 += 1, R3822 += 1, R3462 += 1 };
  s4 -> s4 [0, 65535] { R3884 += 1, R3821 += 1, R3822 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3884 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s0 [0, 65535] { R3885 += 1, R3886 += 1 };
  s0 -> s1 [0, 65535] { R3886 += 1, R3823 += 1, R3824 += 1 };
  s0 -> s2 [0, 65535] { R3886 += 1, R3824 += 1 };
  s0 -> s3 [0, 65535] { R3886 += 1, R3824 += 1, R3801 += 1 };
  s0 -> s4 [0, 65535] { R3886 += 1, R3824 += 1, R3801 += 1, R3803 += 1, R3804 += 1 };
  s1 -> s1 [0, 65535] { R3886 += 1, R3823 += 1, R3824 += 1 };
  s1 -> s2 [0, 65535] { R3886 += 1, R3824 += 1 };
  s1 -> s3 [0, 65535] { R3886 += 1, R3824 += 1, R3801 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s4 [0, 65535] { R3886 += 1, R3824 += 1, R3801 += 1, R3803 += 1, R3804 += 1 };
  s2 -> s2 [0, 65535] { R3886 += 1, R3824 += 1 };
  s2 -> s5 [0, 65535] { R3886 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R3886 += 1, R3824 += 1 };
  s3 -> s3 [0, 65535] { R3886 += 1, R3824 += 1, R3801 += 1 };
  s3 -> s5 [0, 65535] { R3886 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s2 [0, 65535] { R3886 += 1, R3824 += 1 };
  s4 -> s3 [0, 65535] { R3886 += 1, R3824 += 1, R3801 += 1 };
  s4 -> s5 [0, 65535] { R3886 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3886 += 1, R3824 += 1, R3801 += 1, R3803 += 1, R3804 += 1 };
  s5 -> s5 [0, 65535] { R3886 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R3888 += 1, R3843 += 1, R3844 += 1 };
  s0 -> s2 [0, 65535] { R3888 += 1, R3844 += 1, R21 += 1 };
  s0 -> s0 [0, 65535] { R3887 += 1, R3888 += 1 };
  s1 -> s1 [0, 65535] { R3888 += 1, R3843 += 1, R3844 += 1 };
  s1 -> s2 [0, 65535] { R3888 += 1, R3844 += 1, R21 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3888 += 1, R3844 += 1, R21 += 1 };
  s2 -> s3 [0, 65535] { R3888 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3888 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R3890 += 1, R3846 += 1 };
  s0 -> s2 [0, 65535] { R3890 += 1, R3845 += 1, R3846 += 1 };
  s0 -> s0 [0, 65535] { R3889 += 1, R3890 += 1 };
  s0 -> s3 [70, 70] { R3890 += 1, R3846 += 1 };
  s0 -> s4 [70, 70] { R3890 += 1, R3846 += 1 };
  s0 -> s5 [75, 75] { R3890 += 1, R3846 += 1 };
  s0 -> s1 [76, 65535] { R3890 += 1, R3846 += 1 };
  s1 -> s1 [0, 69] { R3890 += 1, R3846 += 1 };
  s1 -> s3 [70, 70] { R3890 += 1, R3846 += 1 };
  s1 -> s4 [70, 70] { R3890 += 1, R3846 += 1 };
  s1 -> s5 [75, 75] { R3890 += 1, R3846 += 1 };
  s1 -> s1 [76, 65535] { R3890 += 1, R3846 += 1 };
  s2 -> s1 [0, 69] { R3890 += 1, R3846 += 1 };
  s2 -> s2 [0, 65535] { R3890 += 1, R3845 += 1, R3846 += 1 };
  s2 -> s3 [70, 70] { R3890 += 1, R3846 += 1 };
  s2 -> s4 [70, 70] { R3890 += 1, R3846 += 1 };
  s2 -> s5 [75, 75] { R3890 += 1, R3846 += 1 };
  s2 -> s1 [76, 65535] { R3890 += 1, R3846 += 1 };
  s4 -> s4 [0, 70] { R3890 += 1, R3846 += 1 };
  s4 -> s8 [75, 75] { R3890 += 1, R3846 += 1 };
  s4 -> s4 [76, 65535] { R3890 += 1, R3846 += 1 };
  s5 -> s5 [0, 69] { R3890 += 1, R3846 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3890 += 1 };
  s5 -> s7 [70, 70] { R3890 += 1, R3846 += 1 };
  s5 -> s8 [70, 70] { R3890 += 1, R3846 += 1 };
  s5 -> s5 [75, 65535] { R3890 += 1, R3846 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3890 += 1 };
  s8 -> s8 [0, 70] { R3890 += 1, R3846 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R3890 += 1 };
  s8 -> s8 [75, 65535] { R3890 += 1, R3846 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R3892 += 1, R3848 += 1, R83 += 1 };
  s0 -> s2 [0, 65535] { R3892 += 1, R3847 += 1, R3848 += 1 };
  s0 -> s0 [0, 65535] { R3891 += 1, R3892 += 1 };
  s0 -> s3 [70, 70] { R3892 += 1, R3848 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R3892 += 1, R3848 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R3892 += 1, R3848 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R3892 += 1, R3848 += 1, R83 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3892 += 1 };
  s1 -> s3 [70, 70] { R3892 += 1, R3848 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R3892 += 1, R3848 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R3892 += 1, R3848 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R3892 += 1, R3848 += 1, R83 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3892 += 1, R3847 += 1, R3848 += 1 };
  s2 -> s3 [70, 70] { R3892 += 1, R3848 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R3892 += 1, R3848 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R3892 += 1, R3848 += 1, R83 += 1 };
  s3 -> s6 [0, 65535] { R3892 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3892 += 1, R3848 += 1, R83 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3892 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3892 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R3894 += 1, R3850 += 1, R85 += 1 };
  s0 -> s0 [0, 65535] { R3893 += 1, R3894 += 1 };
  s0 -> s2 [0, 65535] { R3894 += 1, R3849 += 1, R3850 += 1 };
  s0 -> s3 [70, 70] { R3894 += 1, R3850 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R3894 += 1, R3850 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R3894 += 1, R3850 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R3894 += 1, R3850 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R3894 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R3894 += 1, R3850 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R3894 += 1, R3850 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R3894 += 1, R3850 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R3894 += 1, R3850 += 1, R85 += 1 };
  s2 -> s2 [0, 65535] { R3894 += 1, R3849 += 1, R3850 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R3894 += 1, R3850 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R3894 += 1, R3850 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R3894 += 1, R3850 += 1, R85 += 1 };
  s3 -> s3 [0, 65535] { R3894 += 1, R3850 += 1, R85 += 1 };
  s3 -> s6 [0, 65535] { R3894 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3894 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3894 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R3896 += 1, R3852 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R3896 += 1, R3852 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R3895 += 1, R3896 += 1 };
  s0 -> s3 [0, 65535] { R3896 += 1, R3851 += 1, R3852 += 1 };
  s0 -> s4 [70, 70] { R3896 += 1, R3852 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R3896 += 1, R3852 += 1, R87 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R3896 += 1, R3852 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R3896 += 1, R3852 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [71, 74] { R3896 += 1, R3852 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R3896 += 1, R3852 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R3896 += 1, R3852 += 1, R88 += 1 };
  s0 -> s2 [76, 65535] { R3896 += 1, R3852 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R3896 += 1, R3852 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [0, 69] { R3896 += 1, R3852 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R3896 += 1, R3852 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R3896 += 1, R3852 += 1, R87 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R3896 += 1, R3852 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R3896 += 1, R3852 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [71, 74] { R3896 += 1, R3852 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R3896 += 1, R3852 += 1, R87 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R3896 += 1, R3852 += 1, R88 += 1 };
  s1 -> s2 [76, 65535] { R3896 += 1, R3852 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R3896 += 1, R3852 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R3896 += 1, R3852 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R3896 += 1, R3852 += 1, R88 += 1 };
  s2 -> s2 [71, 74] { R3896 += 1, R3852 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R3896 += 1, R3852 += 1, R88 += 1 };
  s2 -> s2 [76, 65535] { R3896 += 1, R3852 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R3896 += 1, R3852 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R3896 += 1, R3852 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R3896 += 1, R3851 += 1, R3852 += 1 };
  s3 -> s4 [70, 70] { R3896 += 1, R3852 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R3896 += 1, R3852 += 1, R87 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R3896 += 1, R3852 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R3896 += 1, R3852 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [71, 74] { R3896 += 1, R3852 += 1, R88 += 1 };
  s3 -> s1 [71, 65535] { R3896 += 1, R3852 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R3896 += 1, R3852 += 1, R88 += 1 };
  s3 -> s2 [76, 65535] { R3896 += 1, R3852 += 1, R88 += 1 };
  s4 -> s4 [0, 74] { R3896 += 1, R3852 += 1, R88 += 1 };
  s4 -> s10 [75, 75] { R3896 += 1, R3852 += 1, R88 += 1 };
  s4 -> s4 [76, 65535] { R3896 += 1, R3852 += 1, R88 += 1 };
  s7 -> s4 [0, 74] { R3896 += 1, R3852 += 1, R88 += 1 };
  s7 -> s7 [0, 65535] { R3896 += 1, R3852 += 1, R87 += 1, R88 += 1 };
  s7 -> s10 [75, 75] { R3896 += 1, R3852 += 1, R88 += 1 };
  s7 -> s4 [76, 65535] { R3896 += 1, R3852 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R3896 += 1, R3852 += 1, R88 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R3896 += 1 };
  s8 -> s10 [70, 70] { R3896 += 1, R3852 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R3896 += 1, R3852 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R3896 += 1, R3852 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s12 [0, 65535] { R3896 += 1 };
  s10 -> s10 [0, 65535] { R3896 += 1, R3852 += 1, R88 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R3896 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R3896 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R3898 += 1, R3854 += 1, R91 += 1, R92 += 1 };
  s0 -> s2 [0, 65535] { R3898 += 1, R3853 += 1, R3854 += 1 };
  s0 -> s0 [0, 65535] { R3897 += 1, R3898 += 1 };
  s0 -> s3 [70, 70] { R3898 += 1, R3854 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R3898 += 1, R3854 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R3898 += 1, R3854 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R3898 += 1, R3854 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 65535] { R3898 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R3898 += 1, R3854 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R3898 += 1, R3854 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R3898 += 1, R3854 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R3898 += 1, R3854 += 1, R91 += 1, R92 += 1 };
  s2 -> s2 [0, 65535] { R3898 += 1, R3853 += 1, R3854 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R3898 += 1, R3854 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R3898 += 1, R3854 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R3898 += 1, R3854 += 1, R91 += 1, R92 += 1 };
  s3 -> s3 [0, 65535] { R3898 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3898 += 1, R3854 += 1, R91 += 1, R92 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3898 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3898 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R3900 += 1, R3856 += 1, R3452 += 1 };
  s0 -> s2 [0, 69] { R3900 += 1, R3856 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s3 [0, 69] { R3900 += 1, R3856 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s4 [0, 65535] { R3900 += 1, R3855 += 1, R3856 += 1 };
  s0 -> s0 [0, 65535] { R3899 += 1, R3900 += 1 };
  s0 -> s5 [70, 70] { R3900 += 1, R3856 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s6 [70, 70] { R3900 += 1, R3856 += 1, R3452 += 1 };
  s0 -> s7 [70, 70] { R3900 += 1, R3856 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s8 [70, 70] { R3900 += 1, R3856 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s9 [70, 70] { R3900 += 1, R3856 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s10 [70, 70] { R3900 += 1, R3856 += 1, R3452 += 1 };
  s0 -> s1 [71, 74] { R3900 += 1, R3856 += 1, R3452 += 1 };
  s0 -> s2 [71, 65535] { R3900 += 1, R3856 += 1, R3452 += 1, R3453 += 1 };
  s0 -> s3 [71, 65535] { R3900 += 1, R3856 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s1 [76, 65535] { R3900 += 1, R3856 += 1, R3452 += 1 };
  s1 -> s1 [0, 69] { R3900 += 1, R3856 += 1, R3452 += 1 };
  s1 -> s1 [0, 65535] { R3900 += 1 };
  s1 -> s11 [0, 65535];
  s1 -> s6 [70, 70] { R3900 += 1, R3856 += 1 };
  s1 -> s10 [70, 70] { R3900 += 1, R3856 += 1 };
  s1 -> s1 [71, 74] { R3900 += 1, R3856 += 1, R3452 += 1 };
  s1 -> s1 [71, 65535] { R3900 += 1, R3856 += 1 };
  s1 -> s1 [76, 65535] { R3900 += 1, R3856 += 1, R3452 += 1 };
  s2 -> s1 [0, 69] { R3900 += 1, R3856 += 1, R3452 += 1 };
  s2 -> s2 [0, 69] { R3900 += 1, R3856 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s5 [70, 70] { R3900 += 1, R3856 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s6 [70, 70] { R3900 += 1, R3856 += 1, R3452 += 1 };
  s2 -> s9 [70, 70] { R3900 += 1, R3856 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s10 [70, 70] { R3900 += 1, R3856 += 1, R3452 += 1 };
  s2 -> s1 [71, 74] { R3900 += 1, R3856 += 1, R3452 += 1 };
  s2 -> s2 [71, 65535] { R3900 += 1, R3856 += 1, R3452 += 1, R3453 += 1 };
  s2 -> s1 [76, 65535] { R3900 += 1, R3856 += 1, R3452 += 1 };
  s3 -> s1 [0, 69] { R3900 += 1, R3856 += 1, R3452 += 1 };
  s3 -> s2 [0, 69] { R3900 += 1, R3856 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s3 [0, 69] { R3900 += 1, R3856 += 1, R3451 += 1, R3452 += 1 };
  s3 -> s5 [70, 70] { R3900 += 1, R3856 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s6 [70, 70] { R3900 += 1, R3856 += 1, R3452 += 1 };
  s3 -> s7 [70, 70] { R3900 += 1, R3856 += 1, R3451 += 1, R3452 += 1 };
  s3 -> s8 [70, 70] { R3900 += 1, R3856 += 1, R3451 += 1, R3452 += 1 };
  s3 -> s9 [70, 70] { R3900 += 1, R3856 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s10 [70, 70] { R3900 += 1, R3856 += 1, R3452 += 1 };
  s3 -> s1 [71, 74] { R3900 += 1, R3856 += 1, R3452 += 1 };
  s3 -> s2 [71, 65535] { R3900 += 1, R3856 += 1, R3452 += 1, R3453 += 1 };
  s3 -> s3 [71, 65535] { R3900 += 1, R3856 += 1, R3451 += 1, R3452 += 1 };
  s3 -> s1 [76, 65535] { R3900 += 1, R3856 += 1, R3452 += 1 };
  s4 -> s1 [0, 69] { R3900 += 1, R3856 += 1, R3452 += 1 };
  s4 -> s2 [0, 69] { R3900 += 1, R3856 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s3 [0, 69] { R3900 += 1, R3856 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s4 [0, 65535] { R3900 += 1, R3855 += 1, R3856 += 1 };
  s4 -> s5 [70, 70] { R3900 += 1, R3856 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s6 [70, 70] { R3900 += 1, R3856 += 1, R3452 += 1 };
  s4 -> s7 [70, 70] { R3900 += 1, R3856 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s8 [70, 70] { R3900 += 1, R3856 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s9 [70, 70] { R3900 += 1, R3856 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s10 [70, 70] { R3900 += 1, R3856 += 1, R3452 += 1 };
  s4 -> s1 [71, 74] { R3900 += 1, R3856 += 1, R3452 += 1 };
  s4 -> s2 [71, 65535] { R3900 += 1, R3856 += 1, R3452 += 1, R3453 += 1 };
  s4 -> s3 [71, 65535] { R3900 += 1, R3856 += 1, R3451 += 1, R3452 += 1 };
  s4 -> s1 [76, 65535] { R3900 += 1, R3856 += 1, R3452 += 1 };
  s5 -> s6 [0, 74] { R3900 += 1, R3856 += 1, R3452 += 1 };
  s5 -> s5 [0, 65535] { R3900 += 1, R3856 += 1, R3452 += 1, R3453 += 1 };
  s5 -> s6 [76, 65535] { R3900 += 1, R3856 += 1, R3452 += 1 };
  s6 -> s6 [0, 74] { R3900 += 1, R3856 += 1, R3452 += 1 };
  s6 -> s6 [0, 65535] { R3900 += 1, R3856 += 1 };
  s6 -> s11 [0, 65535];
  s6 -> s12 [0, 65535] { R3900 += 1 };
  s6 -> s6 [76, 65535] { R3900 += 1, R3856 += 1, R3452 += 1 };
  s8 -> s6 [0, 74] { R3900 += 1, R3856 += 1, R3452 += 1 };
  s8 -> s5 [0, 65535] { R3900 += 1, R3856 += 1, R3452 += 1, R3453 += 1 };
  s8 -> s8 [0, 65535] { R3900 += 1, R3856 += 1, R3451 += 1, R3452 += 1 };
  s8 -> s6 [76, 65535] { R3900 += 1, R3856 += 1, R3452 += 1 };
  s10 -> s11 [0, 65535];
  s10 -> s10 [0, 65535] { R3900 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R3900 += 1 };
  accepting s12, s6, s1, s10, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R3902 += 1, R3858 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s0 -> s2 [0, 69] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s0 -> s3 [0, 69] { R3902 += 1, R3858 += 1, R3457 += 1, R3458 += 1 };
  s0 -> s4 [0, 65535] { R3902 += 1, R3857 += 1, R3858 += 1 };
  s0 -> s0 [0, 65535] { R3901 += 1, R3902 += 1 };
  s0 -> s5 [70, 70] { R3902 += 1, R3858 += 1, R3457 += 1, R3458 += 1 };
  s0 -> s6 [70, 70] { R3902 += 1, R3858 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s0 -> s7 [70, 70] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s0 -> s8 [70, 70] { R3902 += 1, R3858 += 1, R3457 += 1, R3458 += 1 };
  s0 -> s9 [70, 70] { R3902 += 1, R3858 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s0 -> s10 [70, 70] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s0 -> s2 [71, 74] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s0 -> s1 [71, 65535] { R3902 += 1, R3858 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s0 -> s3 [71, 65535] { R3902 += 1, R3858 += 1, R3457 += 1, R3458 += 1 };
  s0 -> s11 [75, 75] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s0 -> s2 [76, 65535] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s1 -> s1 [0, 69] { R3902 += 1, R3858 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s1 -> s2 [0, 69] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s1 -> s6 [70, 70] { R3902 += 1, R3858 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s1 -> s7 [70, 70] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s1 -> s9 [70, 70] { R3902 += 1, R3858 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s1 -> s10 [70, 70] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s1 -> s2 [71, 74] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s1 -> s1 [71, 65535] { R3902 += 1, R3858 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s1 -> s11 [75, 75] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s1 -> s2 [76, 65535] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s2 -> s2 [0, 69] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s2 -> s7 [70, 70] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s2 -> s10 [70, 70] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s2 -> s2 [71, 74] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s2 -> s11 [75, 75] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s2 -> s2 [76, 65535] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s3 -> s1 [0, 69] { R3902 += 1, R3858 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s3 -> s2 [0, 69] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s3 -> s3 [0, 69] { R3902 += 1, R3858 += 1, R3457 += 1, R3458 += 1 };
  s3 -> s5 [70, 70] { R3902 += 1, R3858 += 1, R3457 += 1, R3458 += 1 };
  s3 -> s6 [70, 70] { R3902 += 1, R3858 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s3 -> s7 [70, 70] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s3 -> s8 [70, 70] { R3902 += 1, R3858 += 1, R3457 += 1, R3458 += 1 };
  s3 -> s9 [70, 70] { R3902 += 1, R3858 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s3 -> s10 [70, 70] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s3 -> s2 [71, 74] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s3 -> s1 [71, 65535] { R3902 += 1, R3858 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s3 -> s3 [71, 65535] { R3902 += 1, R3858 += 1, R3457 += 1, R3458 += 1 };
  s3 -> s11 [75, 75] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s3 -> s2 [76, 65535] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s4 -> s1 [0, 69] { R3902 += 1, R3858 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s4 -> s2 [0, 69] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s4 -> s3 [0, 69] { R3902 += 1, R3858 += 1, R3457 += 1, R3458 += 1 };
  s4 -> s4 [0, 65535] { R3902 += 1, R3857 += 1, R3858 += 1 };
  s4 -> s5 [70, 70] { R3902 += 1, R3858 += 1, R3457 += 1, R3458 += 1 };
  s4 -> s6 [70, 70] { R3902 += 1, R3858 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s4 -> s7 [70, 70] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s4 -> s8 [70, 70] { R3902 += 1, R3858 += 1, R3457 += 1, R3458 += 1 };
  s4 -> s9 [70, 70] { R3902 += 1, R3858 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s4 -> s10 [70, 70] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s4 -> s2 [71, 74] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s4 -> s1 [71, 65535] { R3902 += 1, R3858 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s4 -> s3 [71, 65535] { R3902 += 1, R3858 += 1, R3457 += 1, R3458 += 1 };
  s4 -> s11 [75, 75] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s4 -> s2 [76, 65535] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s5 -> s10 [0, 74] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s5 -> s5 [0, 65535] { R3902 += 1, R3858 += 1, R3457 += 1, R3458 += 1 };
  s5 -> s6 [0, 65535] { R3902 += 1, R3858 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s5 -> s13 [75, 75] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s5 -> s10 [76, 65535] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s6 -> s10 [0, 74] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s6 -> s6 [0, 65535] { R3902 += 1, R3858 += 1, R3458 += 1, R3459 += 1, R3460 += 1 };
  s6 -> s13 [75, 75] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s6 -> s10 [76, 65535] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s10 -> s10 [0, 74] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s10 -> s13 [75, 75] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s10 -> s10 [76, 65535] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s11 -> s11 [0, 69] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s11 -> s11 [0, 65535] { R3902 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [70, 70] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s11 -> s14 [70, 70] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s11 -> s11 [71, 65535] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R3902 += 1, R3858 += 1, R3458 += 1, R3460 += 1 };
  s13 -> s15 [0, 65535] { R3902 += 1 };
  s13 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R3902 += 1 };
  s14 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R3902 += 1 };
  s15 -> s12 [0, 65535];
  accepting s12, s13, s14, s15, s11;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R3904 += 1, R3860 += 1, R3795 += 1, R3796 += 1 };
  s0 -> s2 [0, 69] { R3904 += 1, R3860 += 1, R3796 += 1, R3798 += 1, R3799 += 1 };
  s0 -> s3 [0, 69] { R3904 += 1, R3860 += 1, R3796 += 1, R3797 += 1, R3798 += 1 };
  s0 -> s0 [0, 65535] { R3903 += 1, R3904 += 1 };
  s0 -> s4 [0, 65535] { R3904 += 1, R3859 += 1, R3860 += 1 };
  s0 -> s5 [70, 70] { R3904 += 1, R3860 += 1, R3795 += 1, R3796 += 1 };
  s0 -> s6 [70, 70] { R3904 += 1, R3860 += 1, R3796 += 1, R3798 += 1, R3799 += 1 };
  s0 -> s7 [70, 70] { R3904 += 1, R3860 += 1, R3796 += 1, R3797 += 1, R3798 += 1 };
  s0 -> s8 [70, 70] { R3904 += 1, R3860 += 1, R3796 += 1, R3798 += 1, R3799 += 1 };
  s0 -> s9 [70, 70] { R3904 += 1, R3860 += 1, R3795 += 1, R3796 += 1 };
  s0 -> s10 [70, 70] { R3904 += 1, R3860 += 1, R3796 += 1, R3797 += 1, R3798 += 1 };
  s0 -> s1 [71, 65535] { R3904 += 1, R3860 += 1, R3795 += 1, R3796 += 1 };
  s0 -> s2 [71, 65535] { R3904 += 1, R3860 += 1, R3796 += 1, R3798 += 1, R3799 += 1 };
  s0 -> s3 [71, 65535] { R3904 += 1, R3860 += 1, R3796 += 1, R3797 += 1, R3798 += 1 };
  s1 -> s1 [0, 69] { R3904 += 1, R3860 += 1, R3795 += 1, R3796 += 1 };
  s1 -> s2 [0, 69] { R3904 += 1, R3860 += 1, R3796 += 1, R3798 += 1, R3799 += 1 };
  s1 -> s3 [0, 69] { R3904 += 1, R3860 += 1, R3796 += 1, R3797 += 1, R3798 += 1 };
  s1 -> s5 [70, 70] { R3904 += 1, R3860 += 1, R3795 += 1, R3796 += 1 };
  s1 -> s6 [70, 70] { R3904 += 1, R3860 += 1, R3796 += 1, R3798 += 1, R3799 += 1 };
  s1 -> s7 [70, 70] { R3904 += 1, R3860 += 1, R3796 += 1, R3797 += 1, R3798 += 1 };
  s1 -> s8 [70, 70] { R3904 += 1, R3860 += 1, R3796 += 1, R3798 += 1, R3799 += 1 };
  s1 -> s9 [70, 70] { R3904 += 1, R3860 += 1, R3795 += 1, R3796 += 1 };
  s1 -> s10 [70, 70] { R3904 += 1, R3860 += 1, R3796 += 1, R3797 += 1, R3798 += 1 };
  s1 -> s1 [71, 65535] { R3904 += 1, R3860 += 1, R3795 += 1, R3796 += 1 };
  s1 -> s2 [71, 65535] { R3904 += 1, R3860 += 1, R3796 += 1, R3798 += 1, R3799 += 1 };
  s1 -> s3 [71, 65535] { R3904 += 1, R3860 += 1, R3796 += 1, R3797 += 1, R3798 += 1 };
  s2 -> s2 [0, 69] { R3904 += 1, R3860 += 1, R3796 += 1, R3798 += 1, R3799 += 1 };
  s2 -> s2 [0, 65535] { R3904 += 1 };
  s2 -> s12 [0, 65535];
  s2 -> s6 [70, 70] { R3904 += 1, R3860 += 1, R3796 += 1, R3798 += 1, R3799 += 1 };
  s2 -> s8 [70, 70] { R3904 += 1, R3860 += 1, R3796 += 1, R3798 += 1, R3799 += 1 };
  s2 -> s2 [71, 65535] { R3904 += 1, R3860 += 1, R3796 += 1, R3798 += 1, R3799 += 1 };
  s3 -> s2 [0, 69] { R3904 += 1, R3860 += 1, R3796 += 1, R3798 += 1, R3799 += 1 };
  s3 -> s3 [0, 69] { R3904 += 1, R3860 += 1, R3796 += 1, R3797 += 1, R3798 += 1 };
  s3 -> s6 [70, 70] { R3904 += 1, R3860 += 1, R3796 += 1, R3798 += 1, R3799 += 1 };
  s3 -> s7 [70, 70] { R3904 += 1, R3860 += 1, R3796 += 1, R3797 += 1, R3798 += 1 };
  s3 -> s8 [70, 70] { R3904 += 1, R3860 += 1, R3796 += 1, R3798 += 1, R3799 += 1 };
  s3 -> s10 [70, 70] { R3904 += 1, R3860 += 1, R3796 += 1, R3797 += 1, R3798 += 1 };
  s3 -> s2 [71, 65535] { R3904 += 1, R3860 += 1, R3796 += 1, R3798 += 1, R3799 += 1 };
  s3 -> s3 [71, 65535] { R3904 += 1, R3860 += 1, R3796 += 1, R3797 += 1, R3798 += 1 };
  s4 -> s1 [0, 69] { R3904 += 1, R3860 += 1, R3795 += 1, R3796 += 1 };
  s4 -> s2 [0, 69] { R3904 += 1, R3860 += 1, R3796 += 1, R3798 += 1, R3799 += 1 };
  s4 -> s3 [0, 69] { R3904 += 1, R3860 += 1, R3796 += 1, R3797 += 1, R3798 += 1 };
  s4 -> s4 [0, 65535] { R3904 += 1, R3859 += 1, R3860 += 1 };
  s4 -> s5 [70, 70] { R3904 += 1, R3860 += 1, R3795 += 1, R3796 += 1 };
  s4 -> s6 [70, 70] { R3904 += 1, R3860 += 1, R3796 += 1, R3798 += 1, R3799 += 1 };
  s4 -> s7 [70, 70] { R3904 += 1, R3860 += 1, R3796 += 1, R3797 += 1, R3798 += 1 };
  s4 -> s8 [70, 70] { R3904 += 1, R3860 += 1, R3796 += 1, R3798 += 1, R3799 += 1 };
  s4 -> s9 [70, 70] { R3904 += 1, R3860 += 1, R3795 += 1, R3796 += 1 };
  s4 -> s10 [70, 70] { R3904 += 1, R3860 += 1, R3796 += 1, R3797 += 1, R3798 += 1 };
  s4 -> s1 [71, 65535] { R3904 += 1, R3860 += 1, R3795 += 1, R3796 += 1 };
  s4 -> s2 [71, 65535] { R3904 += 1, R3860 += 1, R3796 += 1, R3798 += 1, R3799 += 1 };
  s4 -> s3 [71, 65535] { R3904 += 1, R3860 += 1, R3796 += 1, R3797 += 1, R3798 += 1 };
  s5 -> s5 [0, 65535] { R3904 += 1, R3860 += 1, R3795 += 1, R3796 += 1 };
  s5 -> s7 [0, 65535] { R3904 += 1, R3860 += 1, R3796 += 1, R3797 += 1, R3798 += 1 };
  s5 -> s8 [0, 65535] { R3904 += 1, R3860 += 1, R3796 += 1, R3798 += 1, R3799 += 1 };
  s6 -> s6 [0, 65535] { R3904 += 1 };
  s6 -> s12 [0, 65535];
  s7 -> s7 [0, 65535] { R3904 += 1, R3860 += 1, R3796 += 1, R3797 += 1, R3798 += 1 };
  s7 -> s8 [0, 65535] { R3904 += 1, R3860 += 1, R3796 += 1, R3798 += 1, R3799 += 1 };
  s8 -> s11 [0, 65535] { R3904 += 1 };
  s8 -> s8 [0, 65535] { R3904 += 1, R3860 += 1, R3796 += 1, R3798 += 1, R3799 += 1 };
  s8 -> s12 [0, 65535];
  s11 -> s11 [0, 65535] { R3904 += 1 };
  s11 -> s12 [0, 65535];
  s12 -> s12 [0, 65535];
  accepting s12, s8, s2, s6, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R3904 && R23 - R3904 = -1 && R24 = R3904 && R25 - R3904 = -1 && R26 = R3904 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R3462 + -1*R3458 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R3462 + -1*R3458 - R66 = 0 && R55 + R96 + R93 + -1*R3464 + -1*R3460 - R68 = 0 && R65 + R3461 + R3457 = 0 && R67 + R3463 + R3459 = 0 && R3845 = 0 && R3846 = 0 && R3851 = 0 && R3852 = 0 && R3855 = 0 && R3856 = 0 && R3857 = 0 && R3858 = 0 && R3859 = 0 && R3860 = 0 && R3861 = 0 && R3862 = R3904 && R3863 = 0 && R3864 = R3904 && R3865 = 0 && R3866 = R3904 && R3867 = 0 && R3868 = R3904 && R3869 = 0 && R3870 = R3904 && R3871 = 0 && R3872 = R3904 && R3873 = 0 && R3874 = R3904 && R3875 = 0 && R3876 = R3904 && R3877 = 0 && R3878 = R3904 && R3879 = 0 && R3880 = R3904 && R3881 = 0 && R3882 = R3904 && R3883 = 0 && R3884 = R3904 && R3885 = 0 && R3886 = R3904 && R3887 = 0 && R3888 = R3904 && R3889 = 0 && R3890 = R3904 && R3891 = 0 && R3892 = R3904 && R3893 = 0 && R3894 = R3904 && R3895 = 0 && R3896 = R3904 && R3897 = 0 && R3898 = R3904 && R3899 = 0 && R3900 = R3904 && R3901 = 0 && R3902 = R3904 && R3903 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R3456 + R3453 < 1 && -1*R3462 + -1*R3458 - R66 < 1 && -1*R3464 + -1*R3460 - R68 < 1 && 0 < R3904 && (R2 != 0 || R20 = 0 || (R3805 = 0 && R3806 = 0)) && (R2 != 0 || R20 = 0 || (R3807 = 0 && R3808 = 0)) && (R2 != 0 || R20 = 0 || (R3809 = 0 && R3810 = 0)) && (R2 != 0 || R20 = 0 || (R3811 = 0 && R3812 = 0)) && (R2 != 0 || R20 = 0 || (R3813 = 0 && R3814 = 0)) && (R2 != 0 || R20 = 0 || (R3815 = 0 && R3816 = 0)) && (R2 != 0 || R20 = 0 || (R3817 = 0 && R3818 = 0)) && (R2 != 0 || R20 = 0 || (R3819 = 0 && R3820 = 0)) && (R2 != 0 || R20 = 0 || (R3821 = 0 && R3822 = 0)) && (R2 != 0 || R20 = 0 || (R3823 = 0 && R3824 = 0)) && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R3462 + -1*R3458 - R66 = 0 || R66 + R3462 + R3458 < 1) && (R59 + R3454 + R3451 != 0 || R60 + R3455 + R3452 + -1*R3462 + -1*R3458 - R66 = 0 || R66 + R3462 + R3458 < 1) && (R66 + R3462 + R3458 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R3464 + R3460 < 1) && (R53 + R94 + R91 = 0 || R68 + R3464 + R3460 < 1))) && (R66 + R3462 + R3458 != 0 || ((R59 + R3454 + R3451 != 0 || R60 + R3455 + R3452 = 0 || R68 + R3464 + R3460 < 1) && (R59 + R3454 + R3451 = 0 || R68 + R3464 + R3460 < 1))) && (R66 + R3462 + R3458 != 0 || ((R73 + R3800 + R3795 != 0 || R74 + R3801 + R3796 = 0 || R68 + R3464 + R3460 < 1) && (R73 + R3800 + R3795 = 0 || R68 + R3464 + R3460 < 1))) && (R68 + R3464 + R3460 != 0 || R77 + R3804 + R3799 = 0 || (R75 + R3802 + R3797 = 0 && R76 + R3803 + R3798 = 0)) && (R73 + R3800 + R3795 != 0 || R66 + R3462 + R3458 + -1*R3801 + -1*R3796 - R74 = 0 || R66 + R3462 + R3458 < 1) && (R75 + R3802 + R3797 != 0 || R68 + R3464 + R3460 + -1*R3803 + -1*R3798 - R76 = 0 || R68 + R3464 + R3460 < 1) && (R3805 != 0 || R2 = R3806 || R2 < 1) && (R3807 != 0 || R2 = R3808 || R2 < 1) && (R3809 != 0 || R2 = R3810 || R2 < 1) && (R3811 != 0 || R2 = R3812 || R2 < 1) && (R3813 != 0 || R2 = R3814 || R2 < 1) && (R3815 != 0 || R2 = R3816 || R2 < 1) && (R3817 != 0 || R2 = R3818 || R2 < 1) && (R3819 != 0 || R2 = R3820 || R2 < 1) && (R3821 != 0 || R2 = R3822 || R2 < 1) && (R3823 != 0 || R2 = R3824 || R2 < 1) && (R21 = 0 || (R3843 = 0 && R3844 = 0)) && (R21 = 0 || (R3847 = 0 && R3848 = 0)) && (R21 = 0 || (R3849 = 0 && R3850 = 0)) && (R21 = 0 || (R3853 = 0 && R3854 = 0)) && (R22 = 0 || (R3825 = 0 && R3826 = 0)) && (R22 = 0 || (R3827 = 0 && R3828 = 0)) && (R22 = 0 || (R3829 = 0 && R3830 = 0)) && (R22 = 0 || (R3831 = 0 && R3832 = 0)) && (R22 = 0 || (R3833 = 0 && R3834 = 0)) && (R22 = 0 || (R3835 = 0 && R3836 = 0)) && (R22 = 0 || (R3837 = 0 && R3838 = 0)) && (R22 = 0 || (R3839 = 0 && R3840 = 0)) && (R22 = 0 || (R3841 = 0 && R3842 = 0)) && (R53 + R94 + R91 = 0 || R66 + R3462 + R3458 < 1) && (R59 + R3454 + R3451 = 0 || R66 + R3462 + R3458 < 1) && (R73 + R3800 + R3795 = 0 || R66 + R3462 + R3458 < 1) && (R75 + R3802 + R3797 = 0 || R68 + R3464 + R3460 < 1) && (R3805 = 0 || R2 < 1) && (R3807 = 0 || R2 < 1) && (R3809 = 0 || R2 < 1) && (R3811 = 0 || R2 < 1) && (R3813 = 0 || R2 < 1) && (R3815 = 0 || R2 < 1) && (R3817 = 0 || R2 < 1) && (R3819 = 0 || R2 < 1) && (R3821 = 0 || R2 < 1) && (R3823 = 0 || R2 < 1);
// End of Parikh automata intersection problem
