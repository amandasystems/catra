// Parikh automata intersection problem, generated by OSTRICH+
counter int R100, R101, R102, R12, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R2893, R2894, R2895, R2896, R2897, R2898, R2899, R29, R2900, R3, R30, R3011, R3012, R3013, R3014, R3015, R3016, R3017, R3018, R3019, R3020, R3021, R3022, R3023, R3024, R3025, R3026, R3027, R3028, R3029, R3030, R3031, R3032, R3033, R3034, R3035, R3036, R3037, R3038, R3039, R3040, R3041, R3042, R3043, R3044, R3045, R3046, R3047, R3048, R3049, R3050, R3051, R3052, R3053, R3054, R3055, R3056, R3057, R3058, R3059, R3060, R3061, R3062, R3063, R3064, R3065, R3066, R3067, R3068, R3069, R3070, R3071, R3072, R3073, R3074, R3075, R3076, R3077, R3078, R3079, R3080, R3081, R3082, R3083, R3084, R3085, R3086, R3087, R3088, R3089, R3090, R3091, R3092, R3093, R3094, R3095, R3096, R3097, R3098, R3099, R3100, R3101, R3102, R3103, R3104, R3105, R3106, R3107, R3108, R3109, R3110, R3111, R3112, R3113, R3114, R3115, R3116, R3117, R3118, R3119, R3120, R4, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96, R97, R98, R99;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R3041 += 1, R3042 += 1 };
  s0 -> s1 [0, 65535] { R3042 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R3042 += 1, R22 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R3044 += 1 };
  s0 -> s0 [0, 65535] { R3043 += 1, R3044 += 1 };
  s0 -> s2 [70, 70] { R3044 += 1 };
  s0 -> s3 [70, 70] { R3044 += 1 };
  s0 -> s1 [76, 65535] { R3044 += 1 };
  s1 -> s1 [0, 69] { R3044 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3044 += 1 };
  s1 -> s3 [70, 70] { R3044 += 1 };
  s1 -> s1 [76, 65535] { R3044 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R3044 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R3044 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R3046 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R3045 += 1, R3046 += 1 };
  s0 -> s2 [70, 70] { R3046 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R3046 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R3046 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R3046 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3046 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R3046 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R3046 += 1, R45 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3046 += 1, R45 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R3048 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R3047 += 1, R3048 += 1 };
  s0 -> s2 [70, 70] { R3048 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R3048 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R3048 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R3048 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3048 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R3048 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R3048 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3048 += 1, R47 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R3050 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R3049 += 1, R3050 += 1 };
  s0 -> s2 [70, 70] { R3050 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R3050 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R3050 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R3050 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3050 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R3050 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R3050 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3050 += 1, R49 += 1, R50 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R3052 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R3051 += 1, R3052 += 1 };
  s0 -> s2 [70, 70] { R3052 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R3052 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R3052 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R3052 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3052 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R3052 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R3052 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3052 += 1, R53 += 1, R54 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R3054 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R3053 += 1, R3054 += 1 };
  s0 -> s2 [70, 70] { R3054 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R3054 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R3054 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R3054 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3054 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R3054 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R3054 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3054 += 1, R59 += 1, R60 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R3056 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R3055 += 1, R3056 += 1 };
  s0 -> s2 [70, 70] { R3056 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R3056 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R3056 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R3056 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3056 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R3056 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R3056 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535] { R3056 += 1, R65 += 1, R66 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R3058 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R3057 += 1, R3058 += 1 };
  s0 -> s2 [70, 70] { R3058 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R3058 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R3058 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R3058 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3058 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R3058 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R3058 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3058 += 1, R73 += 1, R74 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R3078 += 1 };
  s0 -> s0 [0, 65535] { R3077 += 1, R3078 += 1 };
  s0 -> s2 [70, 70] { R3078 += 1 };
  s0 -> s1 [71, 65535] { R3078 += 1 };
  s1 -> s1 [0, 69] { R3078 += 1 };
  s1 -> s2 [70, 70] { R3078 += 1 };
  s1 -> s1 [71, 65535] { R3078 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R3078 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R3079 += 1, R3080 += 1 };
  s0 -> s1 [0, 65535] { R3080 += 1, R2 += 1 };
  s1 -> s1 [0, 65535] { R3080 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R3082 += 1 };
  s0 -> s2 [0, 65535] { R3082 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R3081 += 1, R3082 += 1 };
  s0 -> s3 [70, 70] { R3082 += 1 };
  s0 -> s1 [71, 65535] { R3082 += 1 };
  s1 -> s1 [0, 69] { R3082 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R3082 += 1 };
  s1 -> s1 [71, 65535] { R3082 += 1 };
  s2 -> s1 [0, 69] { R3082 += 1 };
  s2 -> s2 [0, 65535] { R3082 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R3082 += 1 };
  s2 -> s1 [71, 65535] { R3082 += 1 };
  s3 -> s3 [0, 65535] { R3082 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R3084 += 1, R3022 += 1 };
  s0 -> s2 [0, 65535] { R3084 += 1, R3021 += 1, R3022 += 1 };
  s0 -> s0 [0, 65535] { R3083 += 1, R3084 += 1 };
  s0 -> s1 [71, 65535] { R3084 += 1, R3022 += 1 };
  s1 -> s1 [0, 69] { R3084 += 1, R3022 += 1 };
  s1 -> s1 [0, 65535] { R3084 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R3084 += 1, R3022 += 1 };
  s2 -> s1 [0, 69] { R3084 += 1, R3022 += 1 };
  s2 -> s2 [0, 65535] { R3084 += 1, R3021 += 1, R3022 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R3084 += 1, R3022 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R3086 += 1, R3024 += 1, R20 += 1 };
  s0 -> s2 [0, 65535] { R3086 += 1, R3023 += 1, R3024 += 1 };
  s0 -> s0 [0, 65535] { R3085 += 1, R3086 += 1 };
  s1 -> s4 [0, 65535] { R3086 += 1 };
  s1 -> s1 [0, 65535] { R3086 += 1, R3024 += 1, R20 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R3086 += 1, R3024 += 1, R20 += 1 };
  s2 -> s2 [0, 65535] { R3086 += 1, R3023 += 1, R3024 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3086 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R3088 += 1, R3026 += 1 };
  s0 -> s0 [0, 65535] { R3087 += 1, R3088 += 1 };
  s0 -> s2 [0, 65535] { R3088 += 1, R3025 += 1, R3026 += 1 };
  s0 -> s1 [75, 65535] { R3088 += 1, R3026 += 1 };
  s1 -> s1 [0, 70] { R3088 += 1, R3026 += 1 };
  s1 -> s1 [0, 65535] { R3088 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R3088 += 1, R3026 += 1 };
  s2 -> s1 [0, 70] { R3088 += 1, R3026 += 1 };
  s2 -> s2 [0, 65535] { R3088 += 1, R3025 += 1, R3026 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R3088 += 1, R3026 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R3090 += 1, R3028 += 1, R84 += 1 };
  s0 -> s2 [0, 65535] { R3090 += 1, R3027 += 1, R3028 += 1 };
  s0 -> s0 [0, 65535] { R3089 += 1, R3090 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R3090 += 1 };
  s1 -> s1 [0, 65535] { R3090 += 1, R3028 += 1, R84 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R3090 += 1, R3028 += 1, R84 += 1 };
  s2 -> s2 [0, 65535] { R3090 += 1, R3027 += 1, R3028 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3090 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R3092 += 1, R3030 += 1 };
  s0 -> s2 [0, 65535] { R3092 += 1, R3030 += 1, R86 += 1 };
  s0 -> s3 [0, 65535] { R3092 += 1, R3029 += 1, R3030 += 1 };
  s0 -> s0 [0, 65535] { R3091 += 1, R3092 += 1 };
  s0 -> s1 [76, 65535] { R3092 += 1, R3030 += 1 };
  s1 -> s1 [0, 74] { R3092 += 1, R3030 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R3092 += 1 };
  s1 -> s1 [76, 65535] { R3092 += 1, R3030 += 1 };
  s2 -> s1 [0, 74] { R3092 += 1, R3030 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3092 += 1, R3030 += 1, R86 += 1 };
  s2 -> s5 [0, 65535] { R3092 += 1 };
  s2 -> s1 [76, 65535] { R3092 += 1, R3030 += 1 };
  s3 -> s1 [0, 74] { R3092 += 1, R3030 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R3092 += 1, R3030 += 1, R86 += 1 };
  s3 -> s3 [0, 65535] { R3092 += 1, R3029 += 1, R3030 += 1 };
  s3 -> s1 [76, 65535] { R3092 += 1, R3030 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3092 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R3094 += 1, R3032 += 1, R90 += 1 };
  s0 -> s2 [0, 65535] { R3094 += 1, R3031 += 1, R3032 += 1 };
  s0 -> s0 [0, 65535] { R3093 += 1, R3094 += 1 };
  s0 -> s3 [0, 65535] { R3094 += 1, R3032 += 1 };
  s1 -> s1 [0, 65535] { R3094 += 1, R3032 += 1, R90 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R3094 += 1 };
  s1 -> s3 [0, 65535] { R3094 += 1, R3032 += 1 };
  s2 -> s1 [0, 65535] { R3094 += 1, R3032 += 1, R90 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3094 += 1, R3031 += 1, R3032 += 1 };
  s2 -> s3 [0, 65535] { R3094 += 1, R3032 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R3094 += 1 };
  s3 -> s3 [0, 65535] { R3094 += 1, R3032 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3094 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R3096 += 1, R3034 += 1, R94 += 1, R95 += 1 };
  s0 -> s2 [0, 65535] { R3096 += 1, R3034 += 1, R95 += 1, R96 += 1 };
  s0 -> s0 [0, 65535] { R3095 += 1, R3096 += 1 };
  s0 -> s3 [0, 65535] { R3096 += 1, R3033 += 1, R3034 += 1 };
  s1 -> s1 [0, 65535] { R3096 += 1, R3034 += 1, R94 += 1, R95 += 1 };
  s1 -> s5 [0, 65535] { R3096 += 1 };
  s1 -> s2 [0, 65535] { R3096 += 1, R3034 += 1, R95 += 1, R96 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R3096 += 1 };
  s2 -> s2 [0, 65535] { R3096 += 1, R3034 += 1, R95 += 1, R96 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s6 [0, 65535] { R3096 += 1, R3034 += 1 };
  s3 -> s1 [0, 65535] { R3096 += 1, R3034 += 1, R94 += 1, R95 += 1 };
  s3 -> s2 [0, 65535] { R3096 += 1, R3034 += 1, R95 += 1, R96 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3096 += 1, R3033 += 1, R3034 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3096 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R3096 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R3096 += 1, R3034 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R3098 += 1, R3036 += 1, R101 += 1 };
  s0 -> s2 [0, 65535] { R3098 += 1, R3036 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [0, 65535] { R3098 += 1, R3035 += 1, R3036 += 1 };
  s0 -> s4 [0, 65535] { R3098 += 1, R3036 += 1, R100 += 1, R101 += 1 };
  s0 -> s0 [0, 65535] { R3097 += 1, R3098 += 1 };
  s0 -> s1 [76, 65535] { R3098 += 1, R3036 += 1, R101 += 1 };
  s1 -> s1 [0, 74] { R3098 += 1, R3036 += 1, R101 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R3098 += 1 };
  s1 -> s1 [0, 65535] { R3098 += 1, R3036 += 1 };
  s1 -> s1 [76, 65535] { R3098 += 1, R3036 += 1, R101 += 1 };
  s2 -> s1 [0, 74] { R3098 += 1, R3036 += 1, R101 += 1 };
  s2 -> s2 [0, 65535] { R3098 += 1, R3036 += 1, R101 += 1, R102 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R3098 += 1 };
  s2 -> s7 [0, 65535] { R3098 += 1, R3036 += 1 };
  s2 -> s1 [76, 65535] { R3098 += 1, R3036 += 1, R101 += 1 };
  s3 -> s1 [0, 74] { R3098 += 1, R3036 += 1, R101 += 1 };
  s3 -> s2 [0, 65535] { R3098 += 1, R3036 += 1, R101 += 1, R102 += 1 };
  s3 -> s3 [0, 65535] { R3098 += 1, R3035 += 1, R3036 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R3098 += 1, R3036 += 1, R100 += 1, R101 += 1 };
  s3 -> s1 [76, 65535] { R3098 += 1, R3036 += 1, R101 += 1 };
  s4 -> s1 [0, 74] { R3098 += 1, R3036 += 1, R101 += 1 };
  s4 -> s2 [0, 65535] { R3098 += 1, R3036 += 1, R101 += 1, R102 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3098 += 1, R3036 += 1, R100 += 1, R101 += 1 };
  s4 -> s6 [0, 65535] { R3098 += 1 };
  s4 -> s1 [76, 65535] { R3098 += 1, R3036 += 1, R101 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3098 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R3098 += 1 };
  s7 -> s7 [0, 65535] { R3098 += 1, R3036 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 74] { R3100 += 1, R3038 += 1, R2898 += 1, R2900 += 1 };
  s0 -> s2 [0, 65535] { R3100 += 1, R3037 += 1, R3038 += 1 };
  s0 -> s3 [0, 65535] { R3100 += 1, R3038 += 1, R2898 += 1, R2899 += 1, R2900 += 1 };
  s0 -> s0 [0, 65535] { R3099 += 1, R3100 += 1 };
  s0 -> s4 [75, 75] { R3100 += 1, R3038 += 1, R2898 += 1, R2900 += 1 };
  s0 -> s1 [76, 65535] { R3100 += 1, R3038 += 1, R2898 += 1, R2900 += 1 };
  s1 -> s1 [0, 74] { R3100 += 1, R3038 += 1, R2898 += 1, R2900 += 1 };
  s1 -> s4 [75, 75] { R3100 += 1, R3038 += 1, R2898 += 1, R2900 += 1 };
  s1 -> s1 [76, 65535] { R3100 += 1, R3038 += 1, R2898 += 1, R2900 += 1 };
  s2 -> s1 [0, 74] { R3100 += 1, R3038 += 1, R2898 += 1, R2900 += 1 };
  s2 -> s2 [0, 65535] { R3100 += 1, R3037 += 1, R3038 += 1 };
  s2 -> s3 [0, 65535] { R3100 += 1, R3038 += 1, R2898 += 1, R2899 += 1, R2900 += 1 };
  s2 -> s4 [75, 75] { R3100 += 1, R3038 += 1, R2898 += 1, R2900 += 1 };
  s2 -> s1 [76, 65535] { R3100 += 1, R3038 += 1, R2898 += 1, R2900 += 1 };
  s3 -> s1 [0, 74] { R3100 += 1, R3038 += 1, R2898 += 1, R2900 += 1 };
  s3 -> s3 [0, 65535] { R3100 += 1, R3038 += 1, R2898 += 1, R2899 += 1, R2900 += 1 };
  s3 -> s4 [75, 75] { R3100 += 1, R3038 += 1, R2898 += 1, R2900 += 1 };
  s3 -> s1 [76, 65535] { R3100 += 1, R3038 += 1, R2898 += 1, R2900 += 1 };
  s4 -> s5 [0, 65535] { R3100 += 1 };
  s4 -> s6 [0, 65535] { R3100 += 1, R3038 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R3100 += 1, R3038 += 1, R2898 += 1, R2900 += 1 };
  s4 -> s8 [0, 65535] { R3100 += 1, R3038 += 1, R2898 += 1 };
  s5 -> s5 [0, 65535] { R3100 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s5 [0, 65535] { R3100 += 1 };
  s6 -> s6 [0, 65535] { R3100 += 1, R3038 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s5 [0, 65535] { R3100 += 1 };
  s8 -> s6 [0, 65535] { R3100 += 1, R3038 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R3100 += 1, R3038 += 1, R2898 += 1 };
  accepting s4, s8, s5, s6, s7;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R3102 += 1, R3040 += 1 };
  s0 -> s2 [0, 65535] { R3102 += 1, R3039 += 1, R3040 += 1 };
  s0 -> s0 [0, 65535] { R3101 += 1, R3102 += 1 };
  s1 -> s1 [0, 65535] { R3102 += 1, R3040 += 1 };
  s1 -> s4 [0, 65535] { R3102 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R3102 += 1, R3040 += 1 };
  s2 -> s2 [0, 65535] { R3102 += 1, R3039 += 1, R3040 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3102 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R3104 += 1, R3060 += 1, R21 += 1 };
  s0 -> s0 [0, 65535] { R3103 += 1, R3104 += 1 };
  s0 -> s2 [0, 65535] { R3104 += 1, R3059 += 1, R3060 += 1 };
  s1 -> s1 [0, 65535] { R3104 += 1, R3060 += 1, R21 += 1 };
  s1 -> s4 [0, 65535] { R3104 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R3104 += 1, R3060 += 1, R21 += 1 };
  s2 -> s2 [0, 65535] { R3104 += 1, R3059 += 1, R3060 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3104 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R3106 += 1, R3062 += 1 };
  s0 -> s2 [0, 65535] { R3106 += 1, R3061 += 1, R3062 += 1 };
  s0 -> s0 [0, 65535] { R3105 += 1, R3106 += 1 };
  s0 -> s3 [70, 70] { R3106 += 1, R3062 += 1 };
  s0 -> s4 [70, 70] { R3106 += 1, R3062 += 1 };
  s0 -> s5 [75, 75] { R3106 += 1, R3062 += 1 };
  s0 -> s1 [76, 65535] { R3106 += 1, R3062 += 1 };
  s1 -> s1 [0, 69] { R3106 += 1, R3062 += 1 };
  s1 -> s3 [70, 70] { R3106 += 1, R3062 += 1 };
  s1 -> s4 [70, 70] { R3106 += 1, R3062 += 1 };
  s1 -> s5 [75, 75] { R3106 += 1, R3062 += 1 };
  s1 -> s1 [76, 65535] { R3106 += 1, R3062 += 1 };
  s2 -> s1 [0, 69] { R3106 += 1, R3062 += 1 };
  s2 -> s2 [0, 65535] { R3106 += 1, R3061 += 1, R3062 += 1 };
  s2 -> s3 [70, 70] { R3106 += 1, R3062 += 1 };
  s2 -> s4 [70, 70] { R3106 += 1, R3062 += 1 };
  s2 -> s5 [75, 75] { R3106 += 1, R3062 += 1 };
  s2 -> s1 [76, 65535] { R3106 += 1, R3062 += 1 };
  s4 -> s4 [0, 70] { R3106 += 1, R3062 += 1 };
  s4 -> s7 [75, 75] { R3106 += 1, R3062 += 1 };
  s4 -> s4 [76, 65535] { R3106 += 1, R3062 += 1 };
  s5 -> s5 [0, 69] { R3106 += 1, R3062 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3106 += 1 };
  s5 -> s7 [70, 70] { R3106 += 1, R3062 += 1 };
  s5 -> s8 [70, 70] { R3106 += 1, R3062 += 1 };
  s5 -> s5 [75, 65535] { R3106 += 1, R3062 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R3106 += 1, R3062 += 1 };
  s7 -> s7 [0, 65535] { R3106 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R3106 += 1, R3062 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R3106 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R3108 += 1, R3064 += 1, R83 += 1 };
  s0 -> s2 [0, 65535] { R3108 += 1, R3063 += 1, R3064 += 1 };
  s0 -> s0 [0, 65535] { R3107 += 1, R3108 += 1 };
  s0 -> s3 [70, 70] { R3108 += 1, R3064 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R3108 += 1, R3064 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R3108 += 1, R3064 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R3108 += 1, R3064 += 1, R83 += 1 };
  s1 -> s1 [0, 65535] { R3108 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R3108 += 1, R3064 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R3108 += 1, R3064 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R3108 += 1, R3064 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R3108 += 1, R3064 += 1, R83 += 1 };
  s2 -> s2 [0, 65535] { R3108 += 1, R3063 += 1, R3064 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R3108 += 1, R3064 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R3108 += 1, R3064 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R3108 += 1, R3064 += 1, R83 += 1 };
  s3 -> s3 [0, 65535] { R3108 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3108 += 1 };
  s4 -> s4 [0, 65535] { R3108 += 1, R3064 += 1, R83 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3108 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R3110 += 1, R3066 += 1, R85 += 1 };
  s0 -> s0 [0, 65535] { R3109 += 1, R3110 += 1 };
  s0 -> s2 [0, 65535] { R3110 += 1, R3065 += 1, R3066 += 1 };
  s0 -> s3 [70, 70] { R3110 += 1, R3066 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R3110 += 1, R3066 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R3110 += 1, R3066 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R3110 += 1, R3066 += 1, R85 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R3110 += 1 };
  s1 -> s3 [70, 70] { R3110 += 1, R3066 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R3110 += 1, R3066 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R3110 += 1, R3066 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R3110 += 1, R3066 += 1, R85 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R3110 += 1, R3065 += 1, R3066 += 1 };
  s2 -> s3 [70, 70] { R3110 += 1, R3066 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R3110 += 1, R3066 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R3110 += 1, R3066 += 1, R85 += 1 };
  s3 -> s3 [0, 65535] { R3110 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3110 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3110 += 1, R3066 += 1, R85 += 1 };
  s5 -> s5 [0, 65535] { R3110 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R3112 += 1, R3068 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R3112 += 1, R3068 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R3111 += 1, R3112 += 1 };
  s0 -> s3 [0, 65535] { R3112 += 1, R3067 += 1, R3068 += 1 };
  s0 -> s4 [70, 70] { R3112 += 1, R3068 += 1, R87 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R3112 += 1, R3068 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R3112 += 1, R3068 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R3112 += 1, R3068 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 74] { R3112 += 1, R3068 += 1, R88 += 1 };
  s0 -> s2 [71, 65535] { R3112 += 1, R3068 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R3112 += 1, R3068 += 1, R88 += 1 };
  s0 -> s1 [76, 65535] { R3112 += 1, R3068 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R3112 += 1, R3068 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R3112 += 1, R3068 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R3112 += 1, R3068 += 1, R88 += 1 };
  s1 -> s1 [71, 74] { R3112 += 1, R3068 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R3112 += 1, R3068 += 1, R88 += 1 };
  s1 -> s1 [76, 65535] { R3112 += 1, R3068 += 1, R88 += 1 };
  s2 -> s1 [0, 69] { R3112 += 1, R3068 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R3112 += 1, R3068 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R3112 += 1, R3068 += 1, R87 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R3112 += 1, R3068 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R3112 += 1, R3068 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R3112 += 1, R3068 += 1, R87 += 1, R88 += 1 };
  s2 -> s1 [71, 74] { R3112 += 1, R3068 += 1, R88 += 1 };
  s2 -> s2 [71, 65535] { R3112 += 1, R3068 += 1, R87 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R3112 += 1, R3068 += 1, R88 += 1 };
  s2 -> s1 [76, 65535] { R3112 += 1, R3068 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R3112 += 1, R3068 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R3112 += 1, R3068 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R3112 += 1, R3067 += 1, R3068 += 1 };
  s3 -> s4 [70, 70] { R3112 += 1, R3068 += 1, R87 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R3112 += 1, R3068 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R3112 += 1, R3068 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R3112 += 1, R3068 += 1, R87 += 1, R88 += 1 };
  s3 -> s1 [71, 74] { R3112 += 1, R3068 += 1, R88 += 1 };
  s3 -> s2 [71, 65535] { R3112 += 1, R3068 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R3112 += 1, R3068 += 1, R88 += 1 };
  s3 -> s1 [76, 65535] { R3112 += 1, R3068 += 1, R88 += 1 };
  s4 -> s5 [0, 74] { R3112 += 1, R3068 += 1, R88 += 1 };
  s4 -> s4 [0, 65535] { R3112 += 1, R3068 += 1, R87 += 1, R88 += 1 };
  s4 -> s11 [75, 75] { R3112 += 1, R3068 += 1, R88 += 1 };
  s4 -> s5 [76, 65535] { R3112 += 1, R3068 += 1, R88 += 1 };
  s5 -> s5 [0, 74] { R3112 += 1, R3068 += 1, R88 += 1 };
  s5 -> s11 [75, 75] { R3112 += 1, R3068 += 1, R88 += 1 };
  s5 -> s5 [76, 65535] { R3112 += 1, R3068 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R3112 += 1, R3068 += 1, R88 += 1 };
  s8 -> s8 [0, 65535] { R3112 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R3112 += 1, R3068 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R3112 += 1, R3068 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R3112 += 1, R3068 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R3112 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R3112 += 1, R3068 += 1, R88 += 1 };
  s11 -> s12 [0, 65535] { R3112 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R3112 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R3114 += 1, R3070 += 1, R91 += 1, R92 += 1 };
  s0 -> s2 [0, 65535] { R3114 += 1, R3069 += 1, R3070 += 1 };
  s0 -> s0 [0, 65535] { R3113 += 1, R3114 += 1 };
  s0 -> s3 [70, 70] { R3114 += 1, R3070 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R3114 += 1, R3070 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R3114 += 1, R3070 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R3114 += 1, R3070 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 65535] { R3114 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R3114 += 1, R3070 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R3114 += 1, R3070 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R3114 += 1, R3070 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R3114 += 1, R3070 += 1, R91 += 1, R92 += 1 };
  s2 -> s2 [0, 65535] { R3114 += 1, R3069 += 1, R3070 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R3114 += 1, R3070 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R3114 += 1, R3070 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R3114 += 1, R3070 += 1, R91 += 1, R92 += 1 };
  s3 -> s3 [0, 65535] { R3114 += 1, R3070 += 1, R91 += 1, R92 += 1 };
  s3 -> s6 [0, 65535] { R3114 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3114 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3114 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R3116 += 1, R3072 += 1, R97 += 1, R98 += 1 };
  s0 -> s2 [0, 65535] { R3116 += 1, R3071 += 1, R3072 += 1 };
  s0 -> s0 [0, 65535] { R3115 += 1, R3116 += 1 };
  s0 -> s3 [70, 70] { R3116 += 1, R3072 += 1, R97 += 1, R98 += 1 };
  s0 -> s4 [70, 70] { R3116 += 1, R3072 += 1, R97 += 1, R98 += 1 };
  s0 -> s1 [71, 65535] { R3116 += 1, R3072 += 1, R97 += 1, R98 += 1 };
  s1 -> s1 [0, 69] { R3116 += 1, R3072 += 1, R97 += 1, R98 += 1 };
  s1 -> s1 [0, 65535] { R3116 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R3116 += 1, R3072 += 1, R97 += 1, R98 += 1 };
  s1 -> s4 [70, 70] { R3116 += 1, R3072 += 1, R97 += 1, R98 += 1 };
  s1 -> s1 [71, 65535] { R3116 += 1, R3072 += 1, R97 += 1, R98 += 1 };
  s2 -> s1 [0, 69] { R3116 += 1, R3072 += 1, R97 += 1, R98 += 1 };
  s2 -> s2 [0, 65535] { R3116 += 1, R3071 += 1, R3072 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R3116 += 1, R3072 += 1, R97 += 1, R98 += 1 };
  s2 -> s4 [70, 70] { R3116 += 1, R3072 += 1, R97 += 1, R98 += 1 };
  s2 -> s1 [71, 65535] { R3116 += 1, R3072 += 1, R97 += 1, R98 += 1 };
  s3 -> s3 [0, 65535] { R3116 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3116 += 1 };
  s4 -> s4 [0, 65535] { R3116 += 1, R3072 += 1, R97 += 1, R98 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3116 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R3118 += 1, R3074 += 1, R2893 += 1, R2894 += 1 };
  s0 -> s2 [0, 69] { R3118 += 1, R3074 += 1, R2894 += 1, R2895 += 1, R2896 += 1 };
  s0 -> s0 [0, 65535] { R3117 += 1, R3118 += 1 };
  s0 -> s3 [0, 65535] { R3118 += 1, R3073 += 1, R3074 += 1 };
  s0 -> s4 [70, 70] { R3118 += 1, R3074 += 1, R2893 += 1, R2894 += 1 };
  s0 -> s5 [70, 70] { R3118 += 1, R3074 += 1, R2894 += 1, R2895 += 1, R2896 += 1 };
  s0 -> s6 [70, 70] { R3118 += 1, R3074 += 1, R2893 += 1, R2894 += 1 };
  s0 -> s7 [70, 70] { R3118 += 1, R3074 += 1, R2894 += 1, R2895 += 1, R2896 += 1 };
  s0 -> s1 [71, 65535] { R3118 += 1, R3074 += 1, R2893 += 1, R2894 += 1 };
  s0 -> s2 [71, 65535] { R3118 += 1, R3074 += 1, R2894 += 1, R2895 += 1, R2896 += 1 };
  s1 -> s1 [0, 69] { R3118 += 1, R3074 += 1, R2893 += 1, R2894 += 1 };
  s1 -> s2 [0, 69] { R3118 += 1, R3074 += 1, R2894 += 1, R2895 += 1, R2896 += 1 };
  s1 -> s4 [70, 70] { R3118 += 1, R3074 += 1, R2893 += 1, R2894 += 1 };
  s1 -> s5 [70, 70] { R3118 += 1, R3074 += 1, R2894 += 1, R2895 += 1, R2896 += 1 };
  s1 -> s6 [70, 70] { R3118 += 1, R3074 += 1, R2893 += 1, R2894 += 1 };
  s1 -> s7 [70, 70] { R3118 += 1, R3074 += 1, R2894 += 1, R2895 += 1, R2896 += 1 };
  s1 -> s1 [71, 65535] { R3118 += 1, R3074 += 1, R2893 += 1, R2894 += 1 };
  s1 -> s2 [71, 65535] { R3118 += 1, R3074 += 1, R2894 += 1, R2895 += 1, R2896 += 1 };
  s2 -> s2 [0, 69] { R3118 += 1, R3074 += 1, R2894 += 1, R2895 += 1, R2896 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R3118 += 1 };
  s2 -> s5 [70, 70] { R3118 += 1, R3074 += 1, R2894 += 1, R2895 += 1, R2896 += 1 };
  s2 -> s7 [70, 70] { R3118 += 1, R3074 += 1, R2894 += 1, R2895 += 1, R2896 += 1 };
  s2 -> s2 [71, 65535] { R3118 += 1, R3074 += 1, R2894 += 1, R2895 += 1, R2896 += 1 };
  s3 -> s1 [0, 69] { R3118 += 1, R3074 += 1, R2893 += 1, R2894 += 1 };
  s3 -> s2 [0, 69] { R3118 += 1, R3074 += 1, R2894 += 1, R2895 += 1, R2896 += 1 };
  s3 -> s3 [0, 65535] { R3118 += 1, R3073 += 1, R3074 += 1 };
  s3 -> s4 [70, 70] { R3118 += 1, R3074 += 1, R2893 += 1, R2894 += 1 };
  s3 -> s5 [70, 70] { R3118 += 1, R3074 += 1, R2894 += 1, R2895 += 1, R2896 += 1 };
  s3 -> s6 [70, 70] { R3118 += 1, R3074 += 1, R2893 += 1, R2894 += 1 };
  s3 -> s7 [70, 70] { R3118 += 1, R3074 += 1, R2894 += 1, R2895 += 1, R2896 += 1 };
  s3 -> s1 [71, 65535] { R3118 += 1, R3074 += 1, R2893 += 1, R2894 += 1 };
  s3 -> s2 [71, 65535] { R3118 += 1, R3074 += 1, R2894 += 1, R2895 += 1, R2896 += 1 };
  s5 -> s5 [0, 65535] { R3118 += 1, R3074 += 1, R2894 += 1, R2895 += 1, R2896 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s9 [0, 65535] { R3118 += 1 };
  s6 -> s5 [0, 65535] { R3118 += 1, R3074 += 1, R2894 += 1, R2895 += 1, R2896 += 1 };
  s6 -> s6 [0, 65535] { R3118 += 1, R3074 += 1, R2893 += 1, R2894 += 1 };
  s7 -> s7 [0, 65535] { R3118 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R3118 += 1 };
  accepting s8, s5, s2, s9, s7;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R3120 += 1, R3076 += 1, R3012 += 1, R3013 += 1, R3014 += 1 };
  s0 -> s2 [0, 69] { R3120 += 1, R3076 += 1, R3012 += 1, R3014 += 1, R3015 += 1 };
  s0 -> s3 [0, 69] { R3120 += 1, R3076 += 1, R3011 += 1, R3012 += 1 };
  s0 -> s4 [0, 65535] { R3120 += 1, R3075 += 1, R3076 += 1 };
  s0 -> s0 [0, 65535] { R3119 += 1, R3120 += 1 };
  s0 -> s5 [70, 70] { R3120 += 1, R3076 += 1, R3012 += 1, R3014 += 1, R3015 += 1 };
  s0 -> s6 [70, 70] { R3120 += 1, R3076 += 1, R3012 += 1, R3013 += 1, R3014 += 1 };
  s0 -> s7 [70, 70] { R3120 += 1, R3076 += 1, R3012 += 1, R3014 += 1, R3015 += 1 };
  s0 -> s8 [70, 70] { R3120 += 1, R3076 += 1, R3011 += 1, R3012 += 1 };
  s0 -> s9 [70, 70] { R3120 += 1, R3076 += 1, R3011 += 1, R3012 += 1 };
  s0 -> s10 [70, 70] { R3120 += 1, R3076 += 1, R3012 += 1, R3013 += 1, R3014 += 1 };
  s0 -> s1 [71, 65535] { R3120 += 1, R3076 += 1, R3012 += 1, R3013 += 1, R3014 += 1 };
  s0 -> s2 [71, 65535] { R3120 += 1, R3076 += 1, R3012 += 1, R3014 += 1, R3015 += 1 };
  s0 -> s3 [71, 65535] { R3120 += 1, R3076 += 1, R3011 += 1, R3012 += 1 };
  s1 -> s16 [0, 69] { R3120 += 1, R3076 += 1 };
  s1 -> s1 [0, 69] { R3120 += 1, R3076 += 1, R3012 += 1, R3013 += 1, R3014 += 1 };
  s1 -> s2 [0, 69] { R3120 += 1, R3076 += 1, R3012 += 1, R3014 += 1, R3015 += 1 };
  s1 -> s5 [70, 70] { R3120 += 1, R3076 += 1, R3012 += 1, R3014 += 1, R3015 += 1 };
  s1 -> s6 [70, 70] { R3120 += 1, R3076 += 1, R3012 += 1, R3013 += 1, R3014 += 1 };
  s1 -> s11 [70, 70] { R3120 += 1, R3076 += 1 };
  s1 -> s7 [70, 70] { R3120 += 1, R3076 += 1, R3012 += 1, R3014 += 1, R3015 += 1 };
  s1 -> s17 [70, 70] { R3120 += 1, R3076 += 1 };
  s1 -> s10 [70, 70] { R3120 += 1, R3076 += 1, R3012 += 1, R3013 += 1, R3014 += 1 };
  s1 -> s16 [71, 65535] { R3120 += 1, R3076 += 1 };
  s1 -> s1 [71, 65535] { R3120 += 1, R3076 += 1, R3012 += 1, R3013 += 1, R3014 += 1 };
  s1 -> s2 [71, 65535] { R3120 += 1, R3076 += 1, R3012 += 1, R3014 += 1, R3015 += 1 };
  s2 -> s15 [0, 69] { R3120 += 1, R3076 += 1, R3012 += 1 };
  s2 -> s16 [0, 69] { R3120 += 1, R3076 += 1 };
  s2 -> s2 [0, 69] { R3120 += 1, R3076 += 1, R3012 += 1, R3014 += 1, R3015 += 1 };
  s2 -> s5 [70, 70] { R3120 += 1, R3076 += 1, R3012 += 1, R3014 += 1, R3015 += 1 };
  s2 -> s11 [70, 70] { R3120 += 1, R3076 += 1 };
  s2 -> s17 [70, 70] { R3120 += 1, R3076 += 1 };
  s2 -> s7 [70, 70] { R3120 += 1, R3076 += 1, R3012 += 1, R3014 += 1, R3015 += 1 };
  s2 -> s14 [70, 70] { R3120 += 1, R3076 += 1, R3012 += 1 };
  s2 -> s18 [70, 70] { R3120 += 1, R3076 += 1, R3012 += 1 };
  s2 -> s15 [71, 65535] { R3120 += 1, R3076 += 1, R3012 += 1 };
  s2 -> s16 [71, 65535] { R3120 += 1, R3076 += 1 };
  s2 -> s2 [71, 65535] { R3120 += 1, R3076 += 1, R3012 += 1, R3014 += 1, R3015 += 1 };
  s3 -> s1 [0, 69] { R3120 += 1, R3076 += 1, R3012 += 1, R3013 += 1, R3014 += 1 };
  s3 -> s2 [0, 69] { R3120 += 1, R3076 += 1, R3012 += 1, R3014 += 1, R3015 += 1 };
  s3 -> s3 [0, 69] { R3120 += 1, R3076 += 1, R3011 += 1, R3012 += 1 };
  s3 -> s5 [70, 70] { R3120 += 1, R3076 += 1, R3012 += 1, R3014 += 1, R3015 += 1 };
  s3 -> s6 [70, 70] { R3120 += 1, R3076 += 1, R3012 += 1, R3013 += 1, R3014 += 1 };
  s3 -> s7 [70, 70] { R3120 += 1, R3076 += 1, R3012 += 1, R3014 += 1, R3015 += 1 };
  s3 -> s8 [70, 70] { R3120 += 1, R3076 += 1, R3011 += 1, R3012 += 1 };
  s3 -> s9 [70, 70] { R3120 += 1, R3076 += 1, R3011 += 1, R3012 += 1 };
  s3 -> s10 [70, 70] { R3120 += 1, R3076 += 1, R3012 += 1, R3013 += 1, R3014 += 1 };
  s3 -> s1 [71, 65535] { R3120 += 1, R3076 += 1, R3012 += 1, R3013 += 1, R3014 += 1 };
  s3 -> s2 [71, 65535] { R3120 += 1, R3076 += 1, R3012 += 1, R3014 += 1, R3015 += 1 };
  s3 -> s3 [71, 65535] { R3120 += 1, R3076 += 1, R3011 += 1, R3012 += 1 };
  s4 -> s1 [0, 69] { R3120 += 1, R3076 += 1, R3012 += 1, R3013 += 1, R3014 += 1 };
  s4 -> s2 [0, 69] { R3120 += 1, R3076 += 1, R3012 += 1, R3014 += 1, R3015 += 1 };
  s4 -> s3 [0, 69] { R3120 += 1, R3076 += 1, R3011 += 1, R3012 += 1 };
  s4 -> s4 [0, 65535] { R3120 += 1, R3075 += 1, R3076 += 1 };
  s4 -> s5 [70, 70] { R3120 += 1, R3076 += 1, R3012 += 1, R3014 += 1, R3015 += 1 };
  s4 -> s6 [70, 70] { R3120 += 1, R3076 += 1, R3012 += 1, R3013 += 1, R3014 += 1 };
  s4 -> s7 [70, 70] { R3120 += 1, R3076 += 1, R3012 += 1, R3014 += 1, R3015 += 1 };
  s4 -> s8 [70, 70] { R3120 += 1, R3076 += 1, R3011 += 1, R3012 += 1 };
  s4 -> s9 [70, 70] { R3120 += 1, R3076 += 1, R3011 += 1, R3012 += 1 };
  s4 -> s10 [70, 70] { R3120 += 1, R3076 += 1, R3012 += 1, R3013 += 1, R3014 += 1 };
  s4 -> s1 [71, 65535] { R3120 += 1, R3076 += 1, R3012 += 1, R3013 += 1, R3014 += 1 };
  s4 -> s2 [71, 65535] { R3120 += 1, R3076 += 1, R3012 += 1, R3014 += 1, R3015 += 1 };
  s4 -> s3 [71, 65535] { R3120 += 1, R3076 += 1, R3011 += 1, R3012 += 1 };
  s5 -> s5 [0, 65535] { R3120 += 1, R3076 += 1, R3012 += 1, R3014 += 1, R3015 += 1 };
  s5 -> s11 [0, 65535] { R3120 += 1, R3076 += 1 };
  s5 -> s14 [0, 65535] { R3120 += 1, R3076 += 1, R3012 += 1 };
  s6 -> s5 [0, 65535] { R3120 += 1, R3076 += 1, R3012 += 1, R3014 += 1, R3015 += 1 };
  s6 -> s6 [0, 65535] { R3120 += 1, R3076 += 1, R3012 += 1, R3013 += 1, R3014 += 1 };
  s6 -> s11 [0, 65535] { R3120 += 1, R3076 += 1 };
  s8 -> s5 [0, 65535] { R3120 += 1, R3076 += 1, R3012 += 1, R3014 += 1, R3015 += 1 };
  s8 -> s6 [0, 65535] { R3120 += 1, R3076 += 1, R3012 += 1, R3013 += 1, R3014 += 1 };
  s8 -> s8 [0, 65535] { R3120 += 1, R3076 += 1, R3011 += 1, R3012 += 1 };
  s11 -> s11 [0, 65535] { R3120 += 1, R3076 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [0, 65535] { R3120 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R3120 += 1 };
  s14 -> s11 [0, 65535] { R3120 += 1, R3076 += 1 };
  s14 -> s14 [0, 65535] { R3120 += 1, R3076 += 1, R3012 += 1 };
  s15 -> s15 [0, 69] { R3120 += 1, R3076 += 1, R3012 += 1 };
  s15 -> s16 [0, 69] { R3120 += 1, R3076 += 1 };
  s15 -> s11 [70, 70] { R3120 += 1, R3076 += 1 };
  s15 -> s17 [70, 70] { R3120 += 1, R3076 += 1 };
  s15 -> s14 [70, 70] { R3120 += 1, R3076 += 1, R3012 += 1 };
  s15 -> s18 [70, 70] { R3120 += 1, R3076 += 1, R3012 += 1 };
  s15 -> s15 [71, 65535] { R3120 += 1, R3076 += 1, R3012 += 1 };
  s15 -> s16 [71, 65535] { R3120 += 1, R3076 += 1 };
  s16 -> s16 [0, 69] { R3120 += 1, R3076 += 1 };
  s16 -> s16 [0, 65535] { R3120 += 1 };
  s16 -> s12 [0, 65535];
  s16 -> s11 [70, 70] { R3120 += 1, R3076 += 1 };
  s16 -> s17 [70, 70] { R3120 += 1, R3076 += 1 };
  s16 -> s16 [71, 65535] { R3120 += 1, R3076 += 1 };
  s17 -> s17 [0, 65535] { R3120 += 1 };
  s17 -> s12 [0, 65535];
  accepting s17, s16, s12, s13, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R3038 && R3 = R3120 && R23 - R3120 = -1 && R24 = R3120 && R25 - R3120 = -1 && R26 = R3120 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R2898 + -1*R2894 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R2898 + -1*R2894 - R66 = 0 && R55 + R96 + R93 + -1*R2900 + -1*R2896 - R68 = 0 && R65 + R2897 + R2893 = 0 && R67 + R2899 + R2895 = 0 && R3037 = 0 && R3061 = 0 && R3062 = 0 && R3067 = 0 && R3068 = 0 && R3073 = 0 && R3074 = 0 && R3075 = 0 && R3076 = 0 && R3077 = 0 && R3078 = R3120 && R3079 = 0 && R3080 = R3120 && R3081 = 0 && R3082 = R3120 && R3083 = 0 && R3084 = R3120 && R3085 = 0 && R3086 = R3120 && R3087 = 0 && R3088 = R3120 && R3089 = 0 && R3090 = R3120 && R3091 = 0 && R3092 = R3120 && R3093 = 0 && R3094 = R3120 && R3095 = 0 && R3096 = R3120 && R3097 = 0 && R3098 = R3120 && R3099 = 0 && R3100 = R3120 && R3101 = 0 && R3102 = R3120 && R3103 = 0 && R3104 = R3120 && R3105 = 0 && R3106 = R3120 && R3107 = 0 && R3108 = R3120 && R3109 = 0 && R3110 = R3120 && R3111 = 0 && R3112 = R3120 && R3113 = 0 && R3114 = R3120 && R3115 = 0 && R3116 = R3120 && R3117 = 0 && R3118 = R3120 && R3119 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R102 + R99 < 1 && -1*R2898 + -1*R2894 - R66 < 1 && -1*R2900 + -1*R2896 - R68 < 1 && -1 < R3038 && 0 < R3120 && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R2898 + -1*R2894 - R66 = 0 || R66 + R2898 + R2894 < 1) && (R59 + R100 + R97 != 0 || R60 + R101 + R98 + -1*R2898 + -1*R2894 - R66 = 0 || R66 + R2898 + R2894 < 1) && (R66 + R2898 + R2894 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R2900 + R2896 < 1) && (R53 + R94 + R91 = 0 || R68 + R2900 + R2896 < 1))) && (R66 + R2898 + R2894 != 0 || ((R59 + R100 + R97 != 0 || R60 + R101 + R98 = 0 || R68 + R2900 + R2896 < 1) && (R59 + R100 + R97 = 0 || R68 + R2900 + R2896 < 1))) && (R66 + R2898 + R2894 != 0 || ((R73 + R3016 + R3011 != 0 || R74 + R3017 + R3012 = 0 || R68 + R2900 + R2896 < 1) && (R73 + R3016 + R3011 = 0 || R68 + R2900 + R2896 < 1))) && (R68 + R2900 + R2896 != 0 || R77 + R3020 + R3015 = 0 || (R75 + R3018 + R3013 = 0 && R76 + R3019 + R3014 = 0)) && (R73 + R3016 + R3011 != 0 || R66 + R2898 + R2894 + -1*R3017 + -1*R3012 - R74 = 0 || R66 + R2898 + R2894 < 1) && (R75 + R3018 + R3013 != 0 || R68 + R2900 + R2896 + -1*R3019 + -1*R3014 - R76 = 0 || R68 + R2900 + R2896 < 1) && (R3021 != 0 || R3022 = R3038 || (R20 = 0 && R3038 = 0)) && (R3023 != 0 || R3024 = R3038 || (R20 = 0 && R3038 = 0)) && (R3025 != 0 || R3026 = R3038 || (R20 = 0 && R3038 = 0)) && (R3027 != 0 || R3028 = R3038 || (R20 = 0 && R3038 = 0)) && (R3029 != 0 || R3030 = R3038 || (R20 = 0 && R3038 = 0)) && (R3031 != 0 || R3032 = R3038 || (R20 = 0 && R3038 = 0)) && (R3033 != 0 || R3034 = R3038 || (R20 = 0 && R3038 = 0)) && (R3035 != 0 || R3036 = R3038 || (R20 = 0 && R3038 = 0)) && (R3039 != 0 || R3038 = R3040 || (R20 = 0 && R3038 = 0)) && (R21 = 0 || (R3059 = 0 && R3060 = 0)) && (R21 = 0 || (R3063 = 0 && R3064 = 0)) && (R21 = 0 || (R3065 = 0 && R3066 = 0)) && (R21 = 0 || (R3069 = 0 && R3070 = 0)) && (R21 = 0 || (R3071 = 0 && R3072 = 0)) && (R22 = 0 || (R3041 = 0 && R3042 = 0)) && (R22 = 0 || (R3043 = 0 && R3044 = 0)) && (R22 = 0 || (R3045 = 0 && R3046 = 0)) && (R22 = 0 || (R3047 = 0 && R3048 = 0)) && (R22 = 0 || (R3049 = 0 && R3050 = 0)) && (R22 = 0 || (R3051 = 0 && R3052 = 0)) && (R22 = 0 || (R3053 = 0 && R3054 = 0)) && (R22 = 0 || (R3055 = 0 && R3056 = 0)) && (R22 = 0 || (R3057 = 0 && R3058 = 0)) && (R53 + R94 + R91 = 0 || R66 + R2898 + R2894 < 1) && (R59 + R100 + R97 = 0 || R66 + R2898 + R2894 < 1) && (R73 + R3016 + R3011 = 0 || R66 + R2898 + R2894 < 1) && (R75 + R3018 + R3013 = 0 || R68 + R2900 + R2896 < 1) && (R3021 = 0 || (R20 = 0 && R3038 = 0)) && (R3023 = 0 || (R20 = 0 && R3038 = 0)) && (R3025 = 0 || (R20 = 0 && R3038 = 0)) && (R3027 = 0 || (R20 = 0 && R3038 = 0)) && (R3029 = 0 || (R20 = 0 && R3038 = 0)) && (R3031 = 0 || (R20 = 0 && R3038 = 0)) && (R3033 = 0 || (R20 = 0 && R3038 = 0)) && (R3035 = 0 || (R20 = 0 && R3038 = 0)) && (R3039 = 0 || (R20 = 0 && R3038 = 0));
// End of Parikh automata intersection problem
