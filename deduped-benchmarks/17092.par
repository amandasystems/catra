// Parikh automata intersection problem, generated by OSTRICH+
counter int R100, R101, R102, R12, R15, R16, R1777, R1778, R1779, R1780, R1781, R1782, R1783, R1784, R1895, R1896, R1897, R1898, R1899, R1900, R1901, R1902, R1903, R1904, R1905, R1906, R1907, R1908, R1909, R1910, R1911, R1912, R1913, R1914, R1915, R1916, R1917, R1918, R1919, R1920, R1921, R1922, R1923, R1924, R1925, R1926, R1927, R1928, R1929, R1930, R1931, R1932, R1933, R1934, R1935, R1936, R1937, R1938, R1939, R1940, R1941, R1942, R1943, R1944, R1945, R1946, R1947, R1948, R1949, R1950, R1951, R1952, R1953, R1954, R1955, R1956, R1957, R1958, R1959, R1960, R1961, R1962, R1963, R1964, R1965, R1966, R1967, R1968, R1969, R1970, R1971, R1972, R1973, R1974, R1975, R1976, R1977, R1978, R1979, R1980, R1981, R1982, R1983, R1984, R1985, R1986, R1987, R1988, R1989, R1990, R1991, R1992, R1993, R1994, R1995, R1996, R1997, R1998, R1999, R2, R20, R2000, R2001, R2002, R2003, R2004, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R4, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96, R97, R98, R99;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R1926 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R1925 += 1, R1926 += 1 };
  s1 -> s1 [0, 65535] { R1926 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R1928 += 1 };
  s0 -> s0 [0, 65535] { R1927 += 1, R1928 += 1 };
  s0 -> s2 [70, 70] { R1928 += 1 };
  s0 -> s3 [70, 70] { R1928 += 1 };
  s0 -> s1 [76, 65535] { R1928 += 1 };
  s1 -> s1 [0, 69] { R1928 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1928 += 1 };
  s1 -> s3 [70, 70] { R1928 += 1 };
  s1 -> s1 [76, 65535] { R1928 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R1928 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R1928 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R1930 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R1929 += 1, R1930 += 1 };
  s0 -> s2 [70, 70] { R1930 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R1930 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R1930 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R1930 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1930 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R1930 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R1930 += 1, R45 += 1 };
  s2 -> s2 [0, 65535] { R1930 += 1, R45 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R1932 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R1931 += 1, R1932 += 1 };
  s0 -> s2 [70, 70] { R1932 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R1932 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R1932 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R1932 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1932 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R1932 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R1932 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R1932 += 1, R47 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R1934 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R1933 += 1, R1934 += 1 };
  s0 -> s2 [70, 70] { R1934 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R1934 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R1934 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R1934 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1934 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R1934 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R1934 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1934 += 1, R49 += 1, R50 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R1936 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R1935 += 1, R1936 += 1 };
  s0 -> s2 [70, 70] { R1936 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R1936 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R1936 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R1936 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1936 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R1936 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R1936 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1936 += 1, R53 += 1, R54 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R1938 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R1937 += 1, R1938 += 1 };
  s0 -> s2 [70, 70] { R1938 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R1938 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R1938 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R1938 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1938 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R1938 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R1938 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1938 += 1, R59 += 1, R60 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R1940 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R1939 += 1, R1940 += 1 };
  s0 -> s2 [70, 70] { R1940 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R1940 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R1940 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R1940 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1940 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R1940 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R1940 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1940 += 1, R65 += 1, R66 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R1942 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R1941 += 1, R1942 += 1 };
  s0 -> s2 [70, 70] { R1942 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R1942 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R1942 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R1942 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1942 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R1942 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R1942 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1942 += 1, R73 += 1, R74 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R1962 += 1 };
  s0 -> s0 [0, 65535] { R1961 += 1, R1962 += 1 };
  s0 -> s2 [70, 70] { R1962 += 1 };
  s0 -> s1 [71, 65535] { R1962 += 1 };
  s1 -> s1 [0, 69] { R1962 += 1 };
  s1 -> s2 [70, 70] { R1962 += 1 };
  s1 -> s1 [71, 65535] { R1962 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1962 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R1964 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R1963 += 1, R1964 += 1 };
  s1 -> s1 [0, 65535] { R1964 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R1966 += 1 };
  s0 -> s2 [0, 65535] { R1966 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R1965 += 1, R1966 += 1 };
  s0 -> s3 [70, 70] { R1966 += 1 };
  s0 -> s1 [71, 65535] { R1966 += 1 };
  s1 -> s1 [0, 69] { R1966 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R1966 += 1 };
  s1 -> s1 [71, 65535] { R1966 += 1 };
  s2 -> s1 [0, 69] { R1966 += 1 };
  s2 -> s2 [0, 65535] { R1966 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R1966 += 1 };
  s2 -> s1 [71, 65535] { R1966 += 1 };
  s3 -> s3 [0, 65535] { R1966 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R1968 += 1, R1906 += 1 };
  s0 -> s2 [0, 65535] { R1968 += 1, R1905 += 1, R1906 += 1 };
  s0 -> s0 [0, 65535] { R1967 += 1, R1968 += 1 };
  s0 -> s1 [71, 65535] { R1968 += 1, R1906 += 1 };
  s1 -> s1 [0, 69] { R1968 += 1, R1906 += 1 };
  s1 -> s1 [0, 65535] { R1968 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R1968 += 1, R1906 += 1 };
  s2 -> s1 [0, 69] { R1968 += 1, R1906 += 1 };
  s2 -> s2 [0, 65535] { R1968 += 1, R1905 += 1, R1906 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R1968 += 1, R1906 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R1970 += 1, R1908 += 1, R20 += 1 };
  s0 -> s0 [0, 65535] { R1969 += 1, R1970 += 1 };
  s0 -> s2 [0, 65535] { R1970 += 1, R1907 += 1, R1908 += 1 };
  s1 -> s1 [0, 65535] { R1970 += 1, R1908 += 1, R20 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R1970 += 1 };
  s2 -> s1 [0, 65535] { R1970 += 1, R1908 += 1, R20 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1970 += 1, R1907 += 1, R1908 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1970 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R1972 += 1, R1910 += 1 };
  s0 -> s2 [0, 65535] { R1972 += 1, R1909 += 1, R1910 += 1 };
  s0 -> s0 [0, 65535] { R1971 += 1, R1972 += 1 };
  s0 -> s1 [75, 65535] { R1972 += 1, R1910 += 1 };
  s1 -> s1 [0, 70] { R1972 += 1, R1910 += 1 };
  s1 -> s1 [0, 65535] { R1972 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R1972 += 1, R1910 += 1 };
  s2 -> s1 [0, 70] { R1972 += 1, R1910 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1972 += 1, R1909 += 1, R1910 += 1 };
  s2 -> s1 [75, 65535] { R1972 += 1, R1910 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R1974 += 1, R1911 += 1, R1912 += 1 };
  s0 -> s2 [0, 65535] { R1974 += 1, R1912 += 1, R84 += 1 };
  s0 -> s0 [0, 65535] { R1973 += 1, R1974 += 1 };
  s1 -> s1 [0, 65535] { R1974 += 1, R1911 += 1, R1912 += 1 };
  s1 -> s2 [0, 65535] { R1974 += 1, R1912 += 1, R84 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R1974 += 1 };
  s2 -> s2 [0, 65535] { R1974 += 1, R1912 += 1, R84 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1974 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R1976 += 1, R1914 += 1 };
  s0 -> s2 [0, 65535] { R1976 += 1, R1913 += 1, R1914 += 1 };
  s0 -> s0 [0, 65535] { R1975 += 1, R1976 += 1 };
  s0 -> s3 [0, 65535] { R1976 += 1, R1914 += 1, R86 += 1 };
  s0 -> s1 [76, 65535] { R1976 += 1, R1914 += 1 };
  s1 -> s1 [0, 74] { R1976 += 1, R1914 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R1976 += 1 };
  s1 -> s1 [76, 65535] { R1976 += 1, R1914 += 1 };
  s2 -> s1 [0, 74] { R1976 += 1, R1914 += 1 };
  s2 -> s2 [0, 65535] { R1976 += 1, R1913 += 1, R1914 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R1976 += 1, R1914 += 1, R86 += 1 };
  s2 -> s1 [76, 65535] { R1976 += 1, R1914 += 1 };
  s3 -> s1 [0, 74] { R1976 += 1, R1914 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1976 += 1, R1914 += 1, R86 += 1 };
  s3 -> s5 [0, 65535] { R1976 += 1 };
  s3 -> s1 [76, 65535] { R1976 += 1, R1914 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1976 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R1978 += 1, R1916 += 1 };
  s0 -> s2 [0, 65535] { R1978 += 1, R1915 += 1, R1916 += 1 };
  s0 -> s3 [0, 65535] { R1978 += 1, R1916 += 1, R90 += 1 };
  s0 -> s0 [0, 65535] { R1977 += 1, R1978 += 1 };
  s1 -> s1 [0, 65535] { R1978 += 1, R1916 += 1 };
  s1 -> s4 [0, 65535] { R1978 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R1978 += 1, R1916 += 1 };
  s2 -> s2 [0, 65535] { R1978 += 1, R1915 += 1, R1916 += 1 };
  s2 -> s3 [0, 65535] { R1978 += 1, R1916 += 1, R90 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R1978 += 1, R1916 += 1 };
  s3 -> s3 [0, 65535] { R1978 += 1, R1916 += 1, R90 += 1 };
  s3 -> s4 [0, 65535] { R1978 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1978 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R1980 += 1, R1918 += 1, R95 += 1, R96 += 1 };
  s0 -> s0 [0, 65535] { R1979 += 1, R1980 += 1 };
  s0 -> s2 [0, 65535] { R1980 += 1, R1917 += 1, R1918 += 1 };
  s0 -> s3 [0, 65535] { R1980 += 1, R1918 += 1, R94 += 1, R95 += 1 };
  s1 -> s1 [0, 65535] { R1980 += 1, R1918 += 1, R95 += 1, R96 += 1 };
  s1 -> s6 [0, 65535] { R1980 += 1, R1918 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R1980 += 1 };
  s2 -> s1 [0, 65535] { R1980 += 1, R1918 += 1, R95 += 1, R96 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1980 += 1, R1917 += 1, R1918 += 1 };
  s2 -> s3 [0, 65535] { R1980 += 1, R1918 += 1, R94 += 1, R95 += 1 };
  s3 -> s1 [0, 65535] { R1980 += 1, R1918 += 1, R95 += 1, R96 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R1980 += 1 };
  s3 -> s3 [0, 65535] { R1980 += 1, R1918 += 1, R94 += 1, R95 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1980 += 1 };
  s6 -> s6 [0, 65535] { R1980 += 1, R1918 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R1980 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R1982 += 1, R1920 += 1, R101 += 1 };
  s0 -> s0 [0, 65535] { R1981 += 1, R1982 += 1 };
  s0 -> s2 [0, 65535] { R1982 += 1, R1920 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [0, 65535] { R1982 += 1, R1920 += 1, R100 += 1, R101 += 1 };
  s0 -> s4 [0, 65535] { R1982 += 1, R1919 += 1, R1920 += 1 };
  s0 -> s1 [76, 65535] { R1982 += 1, R1920 += 1, R101 += 1 };
  s1 -> s1 [0, 74] { R1982 += 1, R1920 += 1, R101 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R1982 += 1 };
  s1 -> s1 [0, 65535] { R1982 += 1, R1920 += 1 };
  s1 -> s1 [76, 65535] { R1982 += 1, R1920 += 1, R101 += 1 };
  s2 -> s1 [0, 74] { R1982 += 1, R1920 += 1, R101 += 1 };
  s2 -> s7 [0, 65535] { R1982 += 1, R1920 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R1982 += 1 };
  s2 -> s2 [0, 65535] { R1982 += 1, R1920 += 1, R101 += 1, R102 += 1 };
  s2 -> s1 [76, 65535] { R1982 += 1, R1920 += 1, R101 += 1 };
  s3 -> s1 [0, 74] { R1982 += 1, R1920 += 1, R101 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R1982 += 1 };
  s3 -> s2 [0, 65535] { R1982 += 1, R1920 += 1, R101 += 1, R102 += 1 };
  s3 -> s3 [0, 65535] { R1982 += 1, R1920 += 1, R100 += 1, R101 += 1 };
  s3 -> s1 [76, 65535] { R1982 += 1, R1920 += 1, R101 += 1 };
  s4 -> s1 [0, 74] { R1982 += 1, R1920 += 1, R101 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R1982 += 1, R1920 += 1, R101 += 1, R102 += 1 };
  s4 -> s3 [0, 65535] { R1982 += 1, R1920 += 1, R100 += 1, R101 += 1 };
  s4 -> s4 [0, 65535] { R1982 += 1, R1919 += 1, R1920 += 1 };
  s4 -> s1 [76, 65535] { R1982 += 1, R1920 += 1, R101 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1982 += 1 };
  s7 -> s7 [0, 65535] { R1982 += 1, R1920 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R1982 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 74] { R1984 += 1, R1922 += 1, R1782 += 1, R1784 += 1 };
  s0 -> s0 [0, 65535] { R1983 += 1, R1984 += 1 };
  s0 -> s2 [0, 65535] { R1984 += 1, R1922 += 1, R1781 += 1, R1782 += 1 };
  s0 -> s3 [0, 65535] { R1984 += 1, R1921 += 1, R1922 += 1 };
  s0 -> s4 [0, 65535] { R1984 += 1, R1922 += 1, R1782 += 1, R1783 += 1, R1784 += 1 };
  s0 -> s5 [75, 75] { R1984 += 1, R1922 += 1, R1782 += 1, R1784 += 1 };
  s0 -> s1 [76, 65535] { R1984 += 1, R1922 += 1, R1782 += 1, R1784 += 1 };
  s1 -> s1 [0, 74] { R1984 += 1, R1922 += 1, R1782 += 1, R1784 += 1 };
  s1 -> s5 [75, 75] { R1984 += 1, R1922 += 1, R1782 += 1, R1784 += 1 };
  s1 -> s1 [76, 65535] { R1984 += 1, R1922 += 1, R1782 += 1, R1784 += 1 };
  s2 -> s1 [0, 74] { R1984 += 1, R1922 += 1, R1782 += 1, R1784 += 1 };
  s2 -> s2 [0, 65535] { R1984 += 1, R1922 += 1, R1781 += 1, R1782 += 1 };
  s2 -> s4 [0, 65535] { R1984 += 1, R1922 += 1, R1782 += 1, R1783 += 1, R1784 += 1 };
  s2 -> s5 [75, 75] { R1984 += 1, R1922 += 1, R1782 += 1, R1784 += 1 };
  s2 -> s1 [76, 65535] { R1984 += 1, R1922 += 1, R1782 += 1, R1784 += 1 };
  s3 -> s1 [0, 74] { R1984 += 1, R1922 += 1, R1782 += 1, R1784 += 1 };
  s3 -> s2 [0, 65535] { R1984 += 1, R1922 += 1, R1781 += 1, R1782 += 1 };
  s3 -> s3 [0, 65535] { R1984 += 1, R1921 += 1, R1922 += 1 };
  s3 -> s4 [0, 65535] { R1984 += 1, R1922 += 1, R1782 += 1, R1783 += 1, R1784 += 1 };
  s3 -> s5 [75, 75] { R1984 += 1, R1922 += 1, R1782 += 1, R1784 += 1 };
  s3 -> s1 [76, 65535] { R1984 += 1, R1922 += 1, R1782 += 1, R1784 += 1 };
  s4 -> s1 [0, 74] { R1984 += 1, R1922 += 1, R1782 += 1, R1784 += 1 };
  s4 -> s4 [0, 65535] { R1984 += 1, R1922 += 1, R1782 += 1, R1783 += 1, R1784 += 1 };
  s4 -> s5 [75, 75] { R1984 += 1, R1922 += 1, R1782 += 1, R1784 += 1 };
  s4 -> s1 [76, 65535] { R1984 += 1, R1922 += 1, R1782 += 1, R1784 += 1 };
  s5 -> s6 [0, 65535] { R1984 += 1, R1922 += 1, R1782 += 1 };
  s5 -> s5 [0, 65535] { R1984 += 1, R1922 += 1, R1782 += 1, R1784 += 1 };
  s5 -> s7 [0, 65535] { R1984 += 1, R1922 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s9 [0, 65535] { R1984 += 1 };
  s6 -> s6 [0, 65535] { R1984 += 1, R1922 += 1, R1782 += 1 };
  s6 -> s7 [0, 65535] { R1984 += 1, R1922 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [0, 65535] { R1984 += 1 };
  s7 -> s7 [0, 65535] { R1984 += 1, R1922 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R1984 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R1984 += 1 };
  accepting s8, s5, s9, s6, s7;
};
automaton value2_29 {
  init s0;
  s0 -> s0 [0, 65535] { R1985 += 1, R1986 += 1 };
  s0 -> s1 [0, 65535] { R1986 += 1, R1923 += 1, R1924 += 1 };
  s0 -> s2 [0, 65535] { R1986 += 1, R1924 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R1986 += 1, R1923 += 1, R1924 += 1 };
  s1 -> s2 [0, 65535] { R1986 += 1, R1924 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R1986 += 1 };
  s2 -> s2 [0, 65535] { R1986 += 1, R1924 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1986 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R1988 += 1, R1943 += 1, R1944 += 1 };
  s0 -> s0 [0, 65535] { R1987 += 1, R1988 += 1 };
  s0 -> s2 [0, 65535] { R1988 += 1, R1944 += 1, R21 += 1 };
  s1 -> s1 [0, 65535] { R1988 += 1, R1943 += 1, R1944 += 1 };
  s1 -> s2 [0, 65535] { R1988 += 1, R1944 += 1, R21 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1988 += 1, R1944 += 1, R21 += 1 };
  s2 -> s3 [0, 65535] { R1988 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1988 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R1990 += 1, R1946 += 1 };
  s0 -> s2 [0, 65535] { R1990 += 1, R1945 += 1, R1946 += 1 };
  s0 -> s0 [0, 65535] { R1989 += 1, R1990 += 1 };
  s0 -> s3 [70, 70] { R1990 += 1, R1946 += 1 };
  s0 -> s4 [70, 70] { R1990 += 1, R1946 += 1 };
  s0 -> s5 [75, 75] { R1990 += 1, R1946 += 1 };
  s0 -> s1 [76, 65535] { R1990 += 1, R1946 += 1 };
  s1 -> s1 [0, 69] { R1990 += 1, R1946 += 1 };
  s1 -> s3 [70, 70] { R1990 += 1, R1946 += 1 };
  s1 -> s4 [70, 70] { R1990 += 1, R1946 += 1 };
  s1 -> s5 [75, 75] { R1990 += 1, R1946 += 1 };
  s1 -> s1 [76, 65535] { R1990 += 1, R1946 += 1 };
  s2 -> s1 [0, 69] { R1990 += 1, R1946 += 1 };
  s2 -> s2 [0, 65535] { R1990 += 1, R1945 += 1, R1946 += 1 };
  s2 -> s3 [70, 70] { R1990 += 1, R1946 += 1 };
  s2 -> s4 [70, 70] { R1990 += 1, R1946 += 1 };
  s2 -> s5 [75, 75] { R1990 += 1, R1946 += 1 };
  s2 -> s1 [76, 65535] { R1990 += 1, R1946 += 1 };
  s3 -> s3 [0, 70] { R1990 += 1, R1946 += 1 };
  s3 -> s8 [75, 75] { R1990 += 1, R1946 += 1 };
  s3 -> s3 [76, 65535] { R1990 += 1, R1946 += 1 };
  s5 -> s5 [0, 69] { R1990 += 1, R1946 += 1 };
  s5 -> s5 [0, 65535] { R1990 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R1990 += 1, R1946 += 1 };
  s5 -> s8 [70, 70] { R1990 += 1, R1946 += 1 };
  s5 -> s5 [75, 65535] { R1990 += 1, R1946 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R1990 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 70] { R1990 += 1, R1946 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R1990 += 1 };
  s8 -> s8 [75, 65535] { R1990 += 1, R1946 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R1992 += 1, R1948 += 1, R83 += 1 };
  s0 -> s0 [0, 65535] { R1991 += 1, R1992 += 1 };
  s0 -> s2 [0, 65535] { R1992 += 1, R1947 += 1, R1948 += 1 };
  s0 -> s3 [70, 70] { R1992 += 1, R1948 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R1992 += 1, R1948 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R1992 += 1, R1948 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R1992 += 1, R1948 += 1, R83 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1992 += 1 };
  s1 -> s3 [70, 70] { R1992 += 1, R1948 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R1992 += 1, R1948 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R1992 += 1, R1948 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R1992 += 1, R1948 += 1, R83 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1992 += 1, R1947 += 1, R1948 += 1 };
  s2 -> s3 [70, 70] { R1992 += 1, R1948 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R1992 += 1, R1948 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R1992 += 1, R1948 += 1, R83 += 1 };
  s3 -> s3 [0, 65535] { R1992 += 1, R1948 += 1, R83 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R1992 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1992 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1992 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R1994 += 1, R1950 += 1, R85 += 1 };
  s0 -> s2 [0, 65535] { R1994 += 1, R1949 += 1, R1950 += 1 };
  s0 -> s0 [0, 65535] { R1993 += 1, R1994 += 1 };
  s0 -> s3 [70, 70] { R1994 += 1, R1950 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R1994 += 1, R1950 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R1994 += 1, R1950 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R1994 += 1, R1950 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R1994 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R1994 += 1, R1950 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R1994 += 1, R1950 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R1994 += 1, R1950 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R1994 += 1, R1950 += 1, R85 += 1 };
  s2 -> s2 [0, 65535] { R1994 += 1, R1949 += 1, R1950 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R1994 += 1, R1950 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R1994 += 1, R1950 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R1994 += 1, R1950 += 1, R85 += 1 };
  s3 -> s3 [0, 65535] { R1994 += 1, R1950 += 1, R85 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R1994 += 1 };
  s4 -> s4 [0, 65535] { R1994 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1994 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R1996 += 1, R1952 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R1996 += 1, R1952 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [0, 65535] { R1996 += 1, R1951 += 1, R1952 += 1 };
  s0 -> s0 [0, 65535] { R1995 += 1, R1996 += 1 };
  s0 -> s4 [70, 70] { R1996 += 1, R1952 += 1, R87 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R1996 += 1, R1952 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R1996 += 1, R1952 += 1, R87 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R1996 += 1, R1952 += 1, R88 += 1 };
  s0 -> s1 [71, 74] { R1996 += 1, R1952 += 1, R88 += 1 };
  s0 -> s2 [71, 65535] { R1996 += 1, R1952 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R1996 += 1, R1952 += 1, R88 += 1 };
  s0 -> s1 [76, 65535] { R1996 += 1, R1952 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R1996 += 1, R1952 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R1996 += 1, R1952 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R1996 += 1, R1952 += 1, R88 += 1 };
  s1 -> s1 [71, 74] { R1996 += 1, R1952 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R1996 += 1, R1952 += 1, R88 += 1 };
  s1 -> s1 [76, 65535] { R1996 += 1, R1952 += 1, R88 += 1 };
  s2 -> s1 [0, 69] { R1996 += 1, R1952 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R1996 += 1, R1952 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R1996 += 1, R1952 += 1, R87 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R1996 += 1, R1952 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R1996 += 1, R1952 += 1, R87 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R1996 += 1, R1952 += 1, R88 += 1 };
  s2 -> s1 [71, 74] { R1996 += 1, R1952 += 1, R88 += 1 };
  s2 -> s2 [71, 65535] { R1996 += 1, R1952 += 1, R87 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R1996 += 1, R1952 += 1, R88 += 1 };
  s2 -> s1 [76, 65535] { R1996 += 1, R1952 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R1996 += 1, R1952 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R1996 += 1, R1952 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R1996 += 1, R1951 += 1, R1952 += 1 };
  s3 -> s4 [70, 70] { R1996 += 1, R1952 += 1, R87 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R1996 += 1, R1952 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R1996 += 1, R1952 += 1, R87 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R1996 += 1, R1952 += 1, R88 += 1 };
  s3 -> s1 [71, 74] { R1996 += 1, R1952 += 1, R88 += 1 };
  s3 -> s2 [71, 65535] { R1996 += 1, R1952 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R1996 += 1, R1952 += 1, R88 += 1 };
  s3 -> s1 [76, 65535] { R1996 += 1, R1952 += 1, R88 += 1 };
  s6 -> s7 [0, 74] { R1996 += 1, R1952 += 1, R88 += 1 };
  s6 -> s6 [0, 65535] { R1996 += 1, R1952 += 1, R87 += 1, R88 += 1 };
  s6 -> s11 [75, 75] { R1996 += 1, R1952 += 1, R88 += 1 };
  s6 -> s7 [76, 65535] { R1996 += 1, R1952 += 1, R88 += 1 };
  s7 -> s7 [0, 74] { R1996 += 1, R1952 += 1, R88 += 1 };
  s7 -> s11 [75, 75] { R1996 += 1, R1952 += 1, R88 += 1 };
  s7 -> s7 [76, 65535] { R1996 += 1, R1952 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R1996 += 1, R1952 += 1, R88 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R1996 += 1 };
  s8 -> s10 [70, 70] { R1996 += 1, R1952 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R1996 += 1, R1952 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R1996 += 1, R1952 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R1996 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R1996 += 1 };
  s11 -> s11 [0, 65535] { R1996 += 1, R1952 += 1, R88 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R1996 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R1998 += 1, R1954 += 1, R91 += 1, R92 += 1 };
  s0 -> s0 [0, 65535] { R1997 += 1, R1998 += 1 };
  s0 -> s2 [0, 65535] { R1998 += 1, R1953 += 1, R1954 += 1 };
  s0 -> s3 [70, 70] { R1998 += 1, R1954 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R1998 += 1, R1954 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R1998 += 1, R1954 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R1998 += 1, R1954 += 1, R91 += 1, R92 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1998 += 1 };
  s1 -> s3 [70, 70] { R1998 += 1, R1954 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R1998 += 1, R1954 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R1998 += 1, R1954 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R1998 += 1, R1954 += 1, R91 += 1, R92 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1998 += 1, R1953 += 1, R1954 += 1 };
  s2 -> s3 [70, 70] { R1998 += 1, R1954 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R1998 += 1, R1954 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R1998 += 1, R1954 += 1, R91 += 1, R92 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1998 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1998 += 1, R1954 += 1, R91 += 1, R92 += 1 };
  s4 -> s6 [0, 65535] { R1998 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1998 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R2000 += 1, R1956 += 1, R97 += 1, R98 += 1 };
  s0 -> s0 [0, 65535] { R1999 += 1, R2000 += 1 };
  s0 -> s2 [0, 65535] { R2000 += 1, R1955 += 1, R1956 += 1 };
  s0 -> s3 [70, 70] { R2000 += 1, R1956 += 1, R97 += 1, R98 += 1 };
  s0 -> s4 [70, 70] { R2000 += 1, R1956 += 1, R97 += 1, R98 += 1 };
  s0 -> s1 [71, 65535] { R2000 += 1, R1956 += 1, R97 += 1, R98 += 1 };
  s1 -> s1 [0, 69] { R2000 += 1, R1956 += 1, R97 += 1, R98 += 1 };
  s1 -> s1 [0, 65535] { R2000 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R2000 += 1, R1956 += 1, R97 += 1, R98 += 1 };
  s1 -> s4 [70, 70] { R2000 += 1, R1956 += 1, R97 += 1, R98 += 1 };
  s1 -> s1 [71, 65535] { R2000 += 1, R1956 += 1, R97 += 1, R98 += 1 };
  s2 -> s1 [0, 69] { R2000 += 1, R1956 += 1, R97 += 1, R98 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2000 += 1, R1955 += 1, R1956 += 1 };
  s2 -> s3 [70, 70] { R2000 += 1, R1956 += 1, R97 += 1, R98 += 1 };
  s2 -> s4 [70, 70] { R2000 += 1, R1956 += 1, R97 += 1, R98 += 1 };
  s2 -> s1 [71, 65535] { R2000 += 1, R1956 += 1, R97 += 1, R98 += 1 };
  s3 -> s3 [0, 65535] { R2000 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R2000 += 1 };
  s4 -> s4 [0, 65535] { R2000 += 1, R1956 += 1, R97 += 1, R98 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2000 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R2002 += 1, R1958 += 1, R1777 += 1, R1778 += 1 };
  s0 -> s2 [0, 65535] { R2002 += 1, R1957 += 1, R1958 += 1 };
  s0 -> s0 [0, 65535] { R2001 += 1, R2002 += 1 };
  s0 -> s3 [70, 70] { R2002 += 1, R1958 += 1, R1777 += 1, R1778 += 1 };
  s0 -> s4 [70, 70] { R2002 += 1, R1958 += 1, R1777 += 1, R1778 += 1 };
  s0 -> s1 [71, 65535] { R2002 += 1, R1958 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s1 [0, 69] { R2002 += 1, R1958 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s1 [0, 65535] { R2002 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R2002 += 1, R1958 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s4 [70, 70] { R2002 += 1, R1958 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s1 [71, 65535] { R2002 += 1, R1958 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s1 [0, 69] { R2002 += 1, R1958 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s2 [0, 65535] { R2002 += 1, R1957 += 1, R1958 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R2002 += 1, R1958 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s4 [70, 70] { R2002 += 1, R1958 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s1 [71, 65535] { R2002 += 1, R1958 += 1, R1777 += 1, R1778 += 1 };
  s3 -> s3 [0, 65535] { R2002 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R2002 += 1 };
  s4 -> s4 [0, 65535] { R2002 += 1, R1958 += 1, R1777 += 1, R1778 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R2002 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R2004 += 1, R1960 += 1, R1895 += 1, R1896 += 1 };
  s0 -> s2 [0, 69] { R2004 += 1, R1960 += 1, R1896 += 1, R1897 += 1, R1898 += 1 };
  s0 -> s3 [0, 69] { R2004 += 1, R1960 += 1, R1896 += 1, R1898 += 1, R1899 += 1 };
  s0 -> s0 [0, 65535] { R2003 += 1, R2004 += 1 };
  s0 -> s4 [0, 65535] { R2004 += 1, R1959 += 1, R1960 += 1 };
  s0 -> s5 [70, 70] { R2004 += 1, R1960 += 1, R1896 += 1, R1897 += 1, R1898 += 1 };
  s0 -> s6 [70, 70] { R2004 += 1, R1960 += 1, R1895 += 1, R1896 += 1 };
  s0 -> s7 [70, 70] { R2004 += 1, R1960 += 1, R1896 += 1, R1898 += 1, R1899 += 1 };
  s0 -> s8 [70, 70] { R2004 += 1, R1960 += 1, R1895 += 1, R1896 += 1 };
  s0 -> s9 [70, 70] { R2004 += 1, R1960 += 1, R1896 += 1, R1898 += 1, R1899 += 1 };
  s0 -> s10 [70, 70] { R2004 += 1, R1960 += 1, R1896 += 1, R1897 += 1, R1898 += 1 };
  s0 -> s1 [71, 65535] { R2004 += 1, R1960 += 1, R1895 += 1, R1896 += 1 };
  s0 -> s2 [71, 65535] { R2004 += 1, R1960 += 1, R1896 += 1, R1897 += 1, R1898 += 1 };
  s0 -> s3 [71, 65535] { R2004 += 1, R1960 += 1, R1896 += 1, R1898 += 1, R1899 += 1 };
  s1 -> s1 [0, 69] { R2004 += 1, R1960 += 1, R1895 += 1, R1896 += 1 };
  s1 -> s2 [0, 69] { R2004 += 1, R1960 += 1, R1896 += 1, R1897 += 1, R1898 += 1 };
  s1 -> s3 [0, 69] { R2004 += 1, R1960 += 1, R1896 += 1, R1898 += 1, R1899 += 1 };
  s1 -> s5 [70, 70] { R2004 += 1, R1960 += 1, R1896 += 1, R1897 += 1, R1898 += 1 };
  s1 -> s6 [70, 70] { R2004 += 1, R1960 += 1, R1895 += 1, R1896 += 1 };
  s1 -> s7 [70, 70] { R2004 += 1, R1960 += 1, R1896 += 1, R1898 += 1, R1899 += 1 };
  s1 -> s8 [70, 70] { R2004 += 1, R1960 += 1, R1895 += 1, R1896 += 1 };
  s1 -> s9 [70, 70] { R2004 += 1, R1960 += 1, R1896 += 1, R1898 += 1, R1899 += 1 };
  s1 -> s10 [70, 70] { R2004 += 1, R1960 += 1, R1896 += 1, R1897 += 1, R1898 += 1 };
  s1 -> s1 [71, 65535] { R2004 += 1, R1960 += 1, R1895 += 1, R1896 += 1 };
  s1 -> s2 [71, 65535] { R2004 += 1, R1960 += 1, R1896 += 1, R1897 += 1, R1898 += 1 };
  s1 -> s3 [71, 65535] { R2004 += 1, R1960 += 1, R1896 += 1, R1898 += 1, R1899 += 1 };
  s2 -> s2 [0, 69] { R2004 += 1, R1960 += 1, R1896 += 1, R1897 += 1, R1898 += 1 };
  s2 -> s3 [0, 69] { R2004 += 1, R1960 += 1, R1896 += 1, R1898 += 1, R1899 += 1 };
  s2 -> s15 [0, 69] { R2004 += 1, R1960 += 1 };
  s2 -> s5 [70, 70] { R2004 += 1, R1960 += 1, R1896 += 1, R1897 += 1, R1898 += 1 };
  s2 -> s17 [70, 70] { R2004 += 1, R1960 += 1 };
  s2 -> s7 [70, 70] { R2004 += 1, R1960 += 1, R1896 += 1, R1898 += 1, R1899 += 1 };
  s2 -> s11 [70, 70] { R2004 += 1, R1960 += 1 };
  s2 -> s9 [70, 70] { R2004 += 1, R1960 += 1, R1896 += 1, R1898 += 1, R1899 += 1 };
  s2 -> s10 [70, 70] { R2004 += 1, R1960 += 1, R1896 += 1, R1897 += 1, R1898 += 1 };
  s2 -> s2 [71, 65535] { R2004 += 1, R1960 += 1, R1896 += 1, R1897 += 1, R1898 += 1 };
  s2 -> s3 [71, 65535] { R2004 += 1, R1960 += 1, R1896 += 1, R1898 += 1, R1899 += 1 };
  s2 -> s15 [71, 65535] { R2004 += 1, R1960 += 1 };
  s3 -> s3 [0, 69] { R2004 += 1, R1960 += 1, R1896 += 1, R1898 += 1, R1899 += 1 };
  s3 -> s15 [0, 69] { R2004 += 1, R1960 += 1 };
  s3 -> s16 [0, 69] { R2004 += 1, R1960 += 1, R1896 += 1 };
  s3 -> s17 [70, 70] { R2004 += 1, R1960 += 1 };
  s3 -> s7 [70, 70] { R2004 += 1, R1960 += 1, R1896 += 1, R1898 += 1, R1899 += 1 };
  s3 -> s14 [70, 70] { R2004 += 1, R1960 += 1, R1896 += 1 };
  s3 -> s18 [70, 70] { R2004 += 1, R1960 += 1, R1896 += 1 };
  s3 -> s11 [70, 70] { R2004 += 1, R1960 += 1 };
  s3 -> s9 [70, 70] { R2004 += 1, R1960 += 1, R1896 += 1, R1898 += 1, R1899 += 1 };
  s3 -> s3 [71, 65535] { R2004 += 1, R1960 += 1, R1896 += 1, R1898 += 1, R1899 += 1 };
  s3 -> s15 [71, 65535] { R2004 += 1, R1960 += 1 };
  s3 -> s16 [71, 65535] { R2004 += 1, R1960 += 1, R1896 += 1 };
  s4 -> s1 [0, 69] { R2004 += 1, R1960 += 1, R1895 += 1, R1896 += 1 };
  s4 -> s2 [0, 69] { R2004 += 1, R1960 += 1, R1896 += 1, R1897 += 1, R1898 += 1 };
  s4 -> s3 [0, 69] { R2004 += 1, R1960 += 1, R1896 += 1, R1898 += 1, R1899 += 1 };
  s4 -> s4 [0, 65535] { R2004 += 1, R1959 += 1, R1960 += 1 };
  s4 -> s5 [70, 70] { R2004 += 1, R1960 += 1, R1896 += 1, R1897 += 1, R1898 += 1 };
  s4 -> s6 [70, 70] { R2004 += 1, R1960 += 1, R1895 += 1, R1896 += 1 };
  s4 -> s7 [70, 70] { R2004 += 1, R1960 += 1, R1896 += 1, R1898 += 1, R1899 += 1 };
  s4 -> s8 [70, 70] { R2004 += 1, R1960 += 1, R1895 += 1, R1896 += 1 };
  s4 -> s9 [70, 70] { R2004 += 1, R1960 += 1, R1896 += 1, R1898 += 1, R1899 += 1 };
  s4 -> s10 [70, 70] { R2004 += 1, R1960 += 1, R1896 += 1, R1897 += 1, R1898 += 1 };
  s4 -> s1 [71, 65535] { R2004 += 1, R1960 += 1, R1895 += 1, R1896 += 1 };
  s4 -> s2 [71, 65535] { R2004 += 1, R1960 += 1, R1896 += 1, R1897 += 1, R1898 += 1 };
  s4 -> s3 [71, 65535] { R2004 += 1, R1960 += 1, R1896 += 1, R1898 += 1, R1899 += 1 };
  s6 -> s6 [0, 65535] { R2004 += 1, R1960 += 1, R1895 += 1, R1896 += 1 };
  s6 -> s7 [0, 65535] { R2004 += 1, R1960 += 1, R1896 += 1, R1898 += 1, R1899 += 1 };
  s6 -> s10 [0, 65535] { R2004 += 1, R1960 += 1, R1896 += 1, R1897 += 1, R1898 += 1 };
  s7 -> s7 [0, 65535] { R2004 += 1, R1960 += 1, R1896 += 1, R1898 += 1, R1899 += 1 };
  s7 -> s14 [0, 65535] { R2004 += 1, R1960 += 1, R1896 += 1 };
  s7 -> s11 [0, 65535] { R2004 += 1, R1960 += 1 };
  s10 -> s7 [0, 65535] { R2004 += 1, R1960 += 1, R1896 += 1, R1898 += 1, R1899 += 1 };
  s10 -> s11 [0, 65535] { R2004 += 1, R1960 += 1 };
  s10 -> s10 [0, 65535] { R2004 += 1, R1960 += 1, R1896 += 1, R1897 += 1, R1898 += 1 };
  s11 -> s11 [0, 65535] { R2004 += 1, R1960 += 1 };
  s11 -> s12 [0, 65535] { R2004 += 1 };
  s11 -> s13 [0, 65535];
  s12 -> s12 [0, 65535] { R2004 += 1 };
  s12 -> s13 [0, 65535];
  s13 -> s13 [0, 65535];
  s14 -> s14 [0, 65535] { R2004 += 1, R1960 += 1, R1896 += 1 };
  s14 -> s11 [0, 65535] { R2004 += 1, R1960 += 1 };
  s15 -> s15 [0, 69] { R2004 += 1, R1960 += 1 };
  s15 -> s15 [0, 65535] { R2004 += 1 };
  s15 -> s13 [0, 65535];
  s15 -> s17 [70, 70] { R2004 += 1, R1960 += 1 };
  s15 -> s11 [70, 70] { R2004 += 1, R1960 += 1 };
  s15 -> s15 [71, 65535] { R2004 += 1, R1960 += 1 };
  s16 -> s15 [0, 69] { R2004 += 1, R1960 += 1 };
  s16 -> s16 [0, 69] { R2004 += 1, R1960 += 1, R1896 += 1 };
  s16 -> s17 [70, 70] { R2004 += 1, R1960 += 1 };
  s16 -> s14 [70, 70] { R2004 += 1, R1960 += 1, R1896 += 1 };
  s16 -> s18 [70, 70] { R2004 += 1, R1960 += 1, R1896 += 1 };
  s16 -> s11 [70, 70] { R2004 += 1, R1960 += 1 };
  s16 -> s15 [71, 65535] { R2004 += 1, R1960 += 1 };
  s16 -> s16 [71, 65535] { R2004 += 1, R1960 += 1, R1896 += 1 };
  s17 -> s17 [0, 65535] { R2004 += 1 };
  s17 -> s13 [0, 65535];
  accepting s17, s12, s13, s15, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R1922 && R3 = R2004 && R23 - R2004 = -1 && R24 = R2004 && R25 - R2004 = -1 && R26 = R2004 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R1782 + -1*R1778 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R1782 + -1*R1778 - R66 = 0 && R55 + R96 + R93 + -1*R1784 + -1*R1780 - R68 = 0 && R65 + R1781 + R1777 = 0 && R67 + R1783 + R1779 = 0 && R1921 = 0 && R1945 = 0 && R1946 = 0 && R1951 = 0 && R1952 = 0 && R1959 = 0 && R1960 = 0 && R1961 = 0 && R1962 = R2004 && R1963 = 0 && R1964 = R2004 && R1965 = 0 && R1966 = R2004 && R1967 = 0 && R1968 = R2004 && R1969 = 0 && R1970 = R2004 && R1971 = 0 && R1972 = R2004 && R1973 = 0 && R1974 = R2004 && R1975 = 0 && R1976 = R2004 && R1977 = 0 && R1978 = R2004 && R1979 = 0 && R1980 = R2004 && R1981 = 0 && R1982 = R2004 && R1983 = 0 && R1984 = R2004 && R1985 = 0 && R1986 = R2004 && R1987 = 0 && R1988 = R2004 && R1989 = 0 && R1990 = R2004 && R1991 = 0 && R1992 = R2004 && R1993 = 0 && R1994 = R2004 && R1995 = 0 && R1996 = R2004 && R1997 = 0 && R1998 = R2004 && R1999 = 0 && R2000 = R2004 && R2001 = 0 && R2002 = R2004 && R2003 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R102 + R99 < 1 && -1*R1782 + -1*R1778 - R66 < 1 && -1*R1784 + -1*R1780 - R68 < 1 && -1 < R1922 && 0 < R2004 && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R1782 + -1*R1778 - R66 = 0 || R66 + R1782 + R1778 < 1) && (R59 + R100 + R97 != 0 || R60 + R101 + R98 + -1*R1782 + -1*R1778 - R66 = 0 || R66 + R1782 + R1778 < 1) && (R66 + R1782 + R1778 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R1784 + R1780 < 1) && (R53 + R94 + R91 = 0 || R68 + R1784 + R1780 < 1))) && (R66 + R1782 + R1778 != 0 || ((R59 + R100 + R97 != 0 || R60 + R101 + R98 = 0 || R68 + R1784 + R1780 < 1) && (R59 + R100 + R97 = 0 || R68 + R1784 + R1780 < 1))) && (R66 + R1782 + R1778 != 0 || ((R73 + R1900 + R1895 != 0 || R74 + R1901 + R1896 = 0 || R68 + R1784 + R1780 < 1) && (R73 + R1900 + R1895 = 0 || R68 + R1784 + R1780 < 1))) && (R68 + R1784 + R1780 != 0 || R77 + R1904 + R1899 = 0 || (R75 + R1902 + R1897 = 0 && R76 + R1903 + R1898 = 0)) && (R73 + R1900 + R1895 != 0 || R66 + R1782 + R1778 + -1*R1901 + -1*R1896 - R74 = 0 || R66 + R1782 + R1778 < 1) && (R75 + R1902 + R1897 != 0 || R68 + R1784 + R1780 + -1*R1903 + -1*R1898 - R76 = 0 || R68 + R1784 + R1780 < 1) && (R1905 != 0 || R1906 = R1922 || (R20 = 0 && R1922 = 0)) && (R1907 != 0 || R1908 = R1922 || (R20 = 0 && R1922 = 0)) && (R1909 != 0 || R1910 = R1922 || (R20 = 0 && R1922 = 0)) && (R1911 != 0 || R1912 = R1922 || (R20 = 0 && R1922 = 0)) && (R1913 != 0 || R1914 = R1922 || (R20 = 0 && R1922 = 0)) && (R1915 != 0 || R1916 = R1922 || (R20 = 0 && R1922 = 0)) && (R1917 != 0 || R1918 = R1922 || (R20 = 0 && R1922 = 0)) && (R1919 != 0 || R1920 = R1922 || (R20 = 0 && R1922 = 0)) && (R1923 != 0 || R1922 = R1924 || (R20 = 0 && R1922 = 0)) && (R21 = 0 || (R1943 = 0 && R1944 = 0)) && (R21 = 0 || (R1947 = 0 && R1948 = 0)) && (R21 = 0 || (R1949 = 0 && R1950 = 0)) && (R21 = 0 || (R1953 = 0 && R1954 = 0)) && (R21 = 0 || (R1955 = 0 && R1956 = 0)) && (R21 = 0 || (R1957 = 0 && R1958 = 0)) && (R22 = 0 || (R1925 = 0 && R1926 = 0)) && (R22 = 0 || (R1927 = 0 && R1928 = 0)) && (R22 = 0 || (R1929 = 0 && R1930 = 0)) && (R22 = 0 || (R1931 = 0 && R1932 = 0)) && (R22 = 0 || (R1933 = 0 && R1934 = 0)) && (R22 = 0 || (R1935 = 0 && R1936 = 0)) && (R22 = 0 || (R1937 = 0 && R1938 = 0)) && (R22 = 0 || (R1939 = 0 && R1940 = 0)) && (R22 = 0 || (R1941 = 0 && R1942 = 0)) && (R53 + R94 + R91 = 0 || R66 + R1782 + R1778 < 1) && (R59 + R100 + R97 = 0 || R66 + R1782 + R1778 < 1) && (R73 + R1900 + R1895 = 0 || R66 + R1782 + R1778 < 1) && (R75 + R1902 + R1897 = 0 || R68 + R1784 + R1780 < 1) && (R1905 = 0 || (R20 = 0 && R1922 = 0)) && (R1907 = 0 || (R20 = 0 && R1922 = 0)) && (R1909 = 0 || (R20 = 0 && R1922 = 0)) && (R1911 = 0 || (R20 = 0 && R1922 = 0)) && (R1913 = 0 || (R20 = 0 && R1922 = 0)) && (R1915 = 0 || (R20 = 0 && R1922 = 0)) && (R1917 = 0 || (R20 = 0 && R1922 = 0)) && (R1919 = 0 || (R20 = 0 && R1922 = 0)) && (R1923 = 0 || (R20 = 0 && R1922 = 0));
// End of Parikh automata intersection problem
