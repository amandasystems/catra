// Parikh automata intersection problem, generated by OSTRICH+
counter int R100, R101, R102, R12, R1219, R1220, R1221, R1222, R1223, R1224, R1225, R1226, R1227, R1228, R1229, R1230, R1231, R1232, R1233, R1234, R1235, R1236, R1237, R1238, R1239, R1240, R1241, R1242, R1243, R1244, R1245, R1246, R1247, R1248, R1249, R1250, R1251, R1252, R1253, R1254, R1255, R1256, R1257, R1258, R1259, R1260, R1261, R1262, R1263, R1264, R1265, R1266, R1267, R1268, R1269, R1270, R1271, R1272, R1273, R1274, R1275, R1276, R1277, R1278, R1279, R1280, R1281, R1282, R1283, R1284, R1285, R1286, R1287, R1288, R1289, R1290, R1291, R1292, R1293, R1294, R1295, R1296, R1297, R1298, R1299, R1300, R1301, R1302, R1303, R1304, R1305, R1306, R1307, R1308, R1309, R1310, R1311, R1312, R1313, R1314, R1315, R1316, R1317, R1318, R1319, R1320, R1321, R1322, R1323, R1324, R1325, R1326, R1327, R1328, R1329, R1330, R1331, R1332, R1333, R1334, R1335, R1336, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R4, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96, R97, R98, R99;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R1258 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R1257 += 1, R1258 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R1258 += 1, R22 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R1260 += 1 };
  s0 -> s0 [0, 65535] { R1259 += 1, R1260 += 1 };
  s0 -> s2 [70, 70] { R1260 += 1 };
  s0 -> s3 [70, 70] { R1260 += 1 };
  s0 -> s1 [76, 65535] { R1260 += 1 };
  s1 -> s1 [0, 69] { R1260 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1260 += 1 };
  s1 -> s3 [70, 70] { R1260 += 1 };
  s1 -> s1 [76, 65535] { R1260 += 1 };
  s2 -> s2 [0, 70] { R1260 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R1260 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R1262 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R1261 += 1, R1262 += 1 };
  s0 -> s2 [70, 70] { R1262 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R1262 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R1262 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R1262 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1262 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R1262 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R1262 += 1, R45 += 1 };
  s2 -> s2 [0, 65535] { R1262 += 1, R45 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R1264 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R1263 += 1, R1264 += 1 };
  s0 -> s2 [70, 70] { R1264 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R1264 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R1264 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R1264 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1264 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R1264 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R1264 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R1264 += 1, R47 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R1266 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R1265 += 1, R1266 += 1 };
  s0 -> s2 [70, 70] { R1266 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R1266 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R1266 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R1266 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1266 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R1266 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R1266 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535] { R1266 += 1, R49 += 1, R50 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R1268 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R1267 += 1, R1268 += 1 };
  s0 -> s2 [70, 70] { R1268 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R1268 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R1268 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R1268 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1268 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R1268 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R1268 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1268 += 1, R53 += 1, R54 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R1270 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R1269 += 1, R1270 += 1 };
  s0 -> s2 [70, 70] { R1270 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R1270 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R1270 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R1270 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1270 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R1270 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R1270 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R1270 += 1, R59 += 1, R60 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R1272 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R1271 += 1, R1272 += 1 };
  s0 -> s2 [70, 70] { R1272 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R1272 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R1272 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R1272 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1272 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R1272 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R1272 += 1, R65 += 1, R66 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1272 += 1, R65 += 1, R66 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R1274 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R1273 += 1, R1274 += 1 };
  s0 -> s2 [70, 70] { R1274 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R1274 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R1274 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R1274 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1274 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R1274 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R1274 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R1274 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R1294 += 1 };
  s0 -> s0 [0, 65535] { R1293 += 1, R1294 += 1 };
  s0 -> s2 [70, 70] { R1294 += 1 };
  s0 -> s1 [71, 65535] { R1294 += 1 };
  s1 -> s1 [0, 69] { R1294 += 1 };
  s1 -> s2 [70, 70] { R1294 += 1 };
  s1 -> s1 [71, 65535] { R1294 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1294 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R1295 += 1, R1296 += 1 };
  s0 -> s1 [0, 65535] { R1296 += 1, R2 += 1 };
  s1 -> s1 [0, 65535] { R1296 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R1298 += 1 };
  s0 -> s0 [0, 65535] { R1297 += 1, R1298 += 1 };
  s0 -> s2 [0, 65535] { R1298 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R1298 += 1 };
  s0 -> s1 [71, 65535] { R1298 += 1 };
  s1 -> s1 [0, 69] { R1298 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R1298 += 1 };
  s1 -> s1 [71, 65535] { R1298 += 1 };
  s2 -> s1 [0, 69] { R1298 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1298 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R1298 += 1 };
  s2 -> s1 [71, 65535] { R1298 += 1 };
  s3 -> s3 [0, 65535] { R1298 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R1300 += 1, R1238 += 1 };
  s0 -> s0 [0, 65535] { R1299 += 1, R1300 += 1 };
  s0 -> s2 [0, 65535] { R1300 += 1, R1237 += 1, R1238 += 1 };
  s0 -> s1 [71, 65535] { R1300 += 1, R1238 += 1 };
  s1 -> s1 [0, 69] { R1300 += 1, R1238 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R1300 += 1 };
  s1 -> s1 [71, 65535] { R1300 += 1, R1238 += 1 };
  s2 -> s1 [0, 69] { R1300 += 1, R1238 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1300 += 1, R1237 += 1, R1238 += 1 };
  s2 -> s1 [71, 65535] { R1300 += 1, R1238 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R1302 += 1, R1240 += 1, R20 += 1 };
  s0 -> s0 [0, 65535] { R1301 += 1, R1302 += 1 };
  s0 -> s2 [0, 65535] { R1302 += 1, R1239 += 1, R1240 += 1 };
  s1 -> s1 [0, 65535] { R1302 += 1, R1240 += 1, R20 += 1 };
  s1 -> s4 [0, 65535] { R1302 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R1302 += 1, R1240 += 1, R20 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1302 += 1, R1239 += 1, R1240 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1302 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R1304 += 1, R1242 += 1 };
  s0 -> s2 [0, 65535] { R1304 += 1, R1241 += 1, R1242 += 1 };
  s0 -> s0 [0, 65535] { R1303 += 1, R1304 += 1 };
  s0 -> s1 [75, 65535] { R1304 += 1, R1242 += 1 };
  s1 -> s1 [0, 70] { R1304 += 1, R1242 += 1 };
  s1 -> s1 [0, 65535] { R1304 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R1304 += 1, R1242 += 1 };
  s2 -> s1 [0, 70] { R1304 += 1, R1242 += 1 };
  s2 -> s2 [0, 65535] { R1304 += 1, R1241 += 1, R1242 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R1304 += 1, R1242 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R1305 += 1, R1306 += 1 };
  s0 -> s1 [0, 65535] { R1306 += 1, R1243 += 1, R1244 += 1 };
  s0 -> s2 [0, 65535] { R1306 += 1, R1244 += 1, R84 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R1306 += 1, R1243 += 1, R1244 += 1 };
  s1 -> s2 [0, 65535] { R1306 += 1, R1244 += 1, R84 += 1 };
  s2 -> s3 [0, 65535] { R1306 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1306 += 1, R1244 += 1, R84 += 1 };
  s3 -> s3 [0, 65535] { R1306 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R1308 += 1, R1246 += 1 };
  s0 -> s2 [0, 65535] { R1308 += 1, R1246 += 1, R86 += 1 };
  s0 -> s0 [0, 65535] { R1307 += 1, R1308 += 1 };
  s0 -> s3 [0, 65535] { R1308 += 1, R1245 += 1, R1246 += 1 };
  s0 -> s1 [76, 65535] { R1308 += 1, R1246 += 1 };
  s1 -> s1 [0, 74] { R1308 += 1, R1246 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R1308 += 1 };
  s1 -> s1 [76, 65535] { R1308 += 1, R1246 += 1 };
  s2 -> s1 [0, 74] { R1308 += 1, R1246 += 1 };
  s2 -> s5 [0, 65535] { R1308 += 1 };
  s2 -> s2 [0, 65535] { R1308 += 1, R1246 += 1, R86 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [76, 65535] { R1308 += 1, R1246 += 1 };
  s3 -> s1 [0, 74] { R1308 += 1, R1246 += 1 };
  s3 -> s2 [0, 65535] { R1308 += 1, R1246 += 1, R86 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1308 += 1, R1245 += 1, R1246 += 1 };
  s3 -> s1 [76, 65535] { R1308 += 1, R1246 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1308 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R1310 += 1, R1248 += 1, R90 += 1 };
  s0 -> s0 [0, 65535] { R1309 += 1, R1310 += 1 };
  s0 -> s2 [0, 65535] { R1310 += 1, R1248 += 1 };
  s0 -> s3 [0, 65535] { R1310 += 1, R1247 += 1, R1248 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R1310 += 1, R1248 += 1, R90 += 1 };
  s1 -> s5 [0, 65535] { R1310 += 1 };
  s1 -> s2 [0, 65535] { R1310 += 1, R1248 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R1310 += 1 };
  s2 -> s2 [0, 65535] { R1310 += 1, R1248 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R1310 += 1, R1248 += 1, R90 += 1 };
  s3 -> s2 [0, 65535] { R1310 += 1, R1248 += 1 };
  s3 -> s3 [0, 65535] { R1310 += 1, R1247 += 1, R1248 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1310 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R1311 += 1, R1312 += 1 };
  s0 -> s1 [0, 65535] { R1312 += 1, R1250 += 1, R95 += 1, R96 += 1 };
  s0 -> s2 [0, 65535] { R1312 += 1, R1250 += 1, R94 += 1, R95 += 1 };
  s0 -> s3 [0, 65535] { R1312 += 1, R1249 += 1, R1250 += 1 };
  s1 -> s6 [0, 65535] { R1312 += 1, R1250 += 1 };
  s1 -> s1 [0, 65535] { R1312 += 1, R1250 += 1, R95 += 1, R96 += 1 };
  s1 -> s5 [0, 65535] { R1312 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R1312 += 1, R1250 += 1, R95 += 1, R96 += 1 };
  s2 -> s5 [0, 65535] { R1312 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1312 += 1, R1250 += 1, R94 += 1, R95 += 1 };
  s3 -> s1 [0, 65535] { R1312 += 1, R1250 += 1, R95 += 1, R96 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R1312 += 1, R1250 += 1, R94 += 1, R95 += 1 };
  s3 -> s3 [0, 65535] { R1312 += 1, R1249 += 1, R1250 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1312 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R1312 += 1, R1250 += 1 };
  s6 -> s5 [0, 65535] { R1312 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R1314 += 1, R1252 += 1, R101 += 1 };
  s0 -> s2 [0, 65535] { R1314 += 1, R1252 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R1313 += 1, R1314 += 1 };
  s0 -> s3 [0, 65535] { R1314 += 1, R1251 += 1, R1252 += 1 };
  s0 -> s4 [0, 65535] { R1314 += 1, R1252 += 1, R100 += 1, R101 += 1 };
  s0 -> s1 [76, 65535] { R1314 += 1, R1252 += 1, R101 += 1 };
  s1 -> s1 [0, 74] { R1314 += 1, R1252 += 1, R101 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1314 += 1, R1252 += 1 };
  s1 -> s6 [0, 65535] { R1314 += 1 };
  s1 -> s1 [76, 65535] { R1314 += 1, R1252 += 1, R101 += 1 };
  s2 -> s1 [0, 74] { R1314 += 1, R1252 += 1, R101 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R1314 += 1, R1252 += 1 };
  s2 -> s6 [0, 65535] { R1314 += 1 };
  s2 -> s2 [0, 65535] { R1314 += 1, R1252 += 1, R101 += 1, R102 += 1 };
  s2 -> s1 [76, 65535] { R1314 += 1, R1252 += 1, R101 += 1 };
  s3 -> s1 [0, 74] { R1314 += 1, R1252 += 1, R101 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R1314 += 1, R1252 += 1, R101 += 1, R102 += 1 };
  s3 -> s3 [0, 65535] { R1314 += 1, R1251 += 1, R1252 += 1 };
  s3 -> s4 [0, 65535] { R1314 += 1, R1252 += 1, R100 += 1, R101 += 1 };
  s3 -> s1 [76, 65535] { R1314 += 1, R1252 += 1, R101 += 1 };
  s4 -> s1 [0, 74] { R1314 += 1, R1252 += 1, R101 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1314 += 1 };
  s4 -> s2 [0, 65535] { R1314 += 1, R1252 += 1, R101 += 1, R102 += 1 };
  s4 -> s4 [0, 65535] { R1314 += 1, R1252 += 1, R100 += 1, R101 += 1 };
  s4 -> s1 [76, 65535] { R1314 += 1, R1252 += 1, R101 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1314 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R1314 += 1, R1252 += 1 };
  s7 -> s6 [0, 65535] { R1314 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R1316 += 1, R1254 += 1 };
  s0 -> s0 [0, 65535] { R1315 += 1, R1316 += 1 };
  s0 -> s2 [0, 65535] { R1316 += 1, R1253 += 1, R1254 += 1 };
  s1 -> s1 [0, 65535] { R1316 += 1, R1254 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R1316 += 1 };
  s2 -> s1 [0, 65535] { R1316 += 1, R1254 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1316 += 1, R1253 += 1, R1254 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1316 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s0 [0, 65535] { R1317 += 1, R1318 += 1 };
  s0 -> s1 [0, 65535] { R1318 += 1, R1256 += 1, R1233 += 1 };
  s0 -> s2 [0, 65535] { R1318 += 1, R1255 += 1, R1256 += 1 };
  s0 -> s3 [0, 65535] { R1318 += 1, R1256 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R1318 += 1, R1256 += 1, R1233 += 1 };
  s1 -> s3 [0, 65535] { R1318 += 1, R1256 += 1 };
  s1 -> s5 [0, 65535] { R1318 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R1318 += 1, R1256 += 1, R1233 += 1 };
  s2 -> s2 [0, 65535] { R1318 += 1, R1255 += 1, R1256 += 1 };
  s2 -> s3 [0, 65535] { R1318 += 1, R1256 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1318 += 1, R1256 += 1 };
  s3 -> s5 [0, 65535] { R1318 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1318 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R1320 += 1, R1275 += 1, R1276 += 1 };
  s0 -> s0 [0, 65535] { R1319 += 1, R1320 += 1 };
  s0 -> s2 [0, 65535] { R1320 += 1, R1276 += 1, R21 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R1320 += 1, R1275 += 1, R1276 += 1 };
  s1 -> s2 [0, 65535] { R1320 += 1, R1276 += 1, R21 += 1 };
  s2 -> s3 [0, 65535] { R1320 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1320 += 1, R1276 += 1, R21 += 1 };
  s3 -> s3 [0, 65535] { R1320 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R1322 += 1, R1278 += 1 };
  s0 -> s0 [0, 65535] { R1321 += 1, R1322 += 1 };
  s0 -> s2 [0, 65535] { R1322 += 1, R1277 += 1, R1278 += 1 };
  s0 -> s3 [70, 70] { R1322 += 1, R1278 += 1 };
  s0 -> s4 [70, 70] { R1322 += 1, R1278 += 1 };
  s0 -> s5 [75, 75] { R1322 += 1, R1278 += 1 };
  s0 -> s1 [76, 65535] { R1322 += 1, R1278 += 1 };
  s1 -> s1 [0, 69] { R1322 += 1, R1278 += 1 };
  s1 -> s3 [70, 70] { R1322 += 1, R1278 += 1 };
  s1 -> s4 [70, 70] { R1322 += 1, R1278 += 1 };
  s1 -> s5 [75, 75] { R1322 += 1, R1278 += 1 };
  s1 -> s1 [76, 65535] { R1322 += 1, R1278 += 1 };
  s2 -> s1 [0, 69] { R1322 += 1, R1278 += 1 };
  s2 -> s2 [0, 65535] { R1322 += 1, R1277 += 1, R1278 += 1 };
  s2 -> s3 [70, 70] { R1322 += 1, R1278 += 1 };
  s2 -> s4 [70, 70] { R1322 += 1, R1278 += 1 };
  s2 -> s5 [75, 75] { R1322 += 1, R1278 += 1 };
  s2 -> s1 [76, 65535] { R1322 += 1, R1278 += 1 };
  s3 -> s3 [0, 70] { R1322 += 1, R1278 += 1 };
  s3 -> s7 [75, 75] { R1322 += 1, R1278 += 1 };
  s3 -> s3 [76, 65535] { R1322 += 1, R1278 += 1 };
  s5 -> s5 [0, 69] { R1322 += 1, R1278 += 1 };
  s5 -> s5 [0, 65535] { R1322 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R1322 += 1, R1278 += 1 };
  s5 -> s8 [70, 70] { R1322 += 1, R1278 += 1 };
  s5 -> s5 [75, 65535] { R1322 += 1, R1278 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R1322 += 1, R1278 += 1 };
  s7 -> s7 [0, 65535] { R1322 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R1322 += 1, R1278 += 1 };
  s8 -> s8 [0, 65535] { R1322 += 1 };
  s8 -> s6 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R1324 += 1, R1280 += 1, R83 += 1 };
  s0 -> s0 [0, 65535] { R1323 += 1, R1324 += 1 };
  s0 -> s2 [0, 65535] { R1324 += 1, R1279 += 1, R1280 += 1 };
  s0 -> s3 [70, 70] { R1324 += 1, R1280 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R1324 += 1, R1280 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R1324 += 1, R1280 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R1324 += 1, R1280 += 1, R83 += 1 };
  s1 -> s1 [0, 65535] { R1324 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R1324 += 1, R1280 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R1324 += 1, R1280 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R1324 += 1, R1280 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R1324 += 1, R1280 += 1, R83 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1324 += 1, R1279 += 1, R1280 += 1 };
  s2 -> s3 [70, 70] { R1324 += 1, R1280 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R1324 += 1, R1280 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R1324 += 1, R1280 += 1, R83 += 1 };
  s3 -> s3 [0, 65535] { R1324 += 1, R1280 += 1, R83 += 1 };
  s3 -> s6 [0, 65535] { R1324 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1324 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1324 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R1326 += 1, R1282 += 1, R85 += 1 };
  s0 -> s0 [0, 65535] { R1325 += 1, R1326 += 1 };
  s0 -> s2 [0, 65535] { R1326 += 1, R1281 += 1, R1282 += 1 };
  s0 -> s3 [70, 70] { R1326 += 1, R1282 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R1326 += 1, R1282 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R1326 += 1, R1282 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R1326 += 1, R1282 += 1, R85 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1326 += 1 };
  s1 -> s3 [70, 70] { R1326 += 1, R1282 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R1326 += 1, R1282 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R1326 += 1, R1282 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R1326 += 1, R1282 += 1, R85 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1326 += 1, R1281 += 1, R1282 += 1 };
  s2 -> s3 [70, 70] { R1326 += 1, R1282 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R1326 += 1, R1282 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R1326 += 1, R1282 += 1, R85 += 1 };
  s3 -> s6 [0, 65535] { R1326 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1326 += 1, R1282 += 1, R85 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1326 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1326 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R1328 += 1, R1284 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R1328 += 1, R1284 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [0, 65535] { R1328 += 1, R1283 += 1, R1284 += 1 };
  s0 -> s0 [0, 65535] { R1327 += 1, R1328 += 1 };
  s0 -> s4 [70, 70] { R1328 += 1, R1284 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R1328 += 1, R1284 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R1328 += 1, R1284 += 1, R87 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R1328 += 1, R1284 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 74] { R1328 += 1, R1284 += 1, R88 += 1 };
  s0 -> s2 [71, 65535] { R1328 += 1, R1284 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R1328 += 1, R1284 += 1, R88 += 1 };
  s0 -> s1 [76, 65535] { R1328 += 1, R1284 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R1328 += 1, R1284 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R1328 += 1, R1284 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R1328 += 1, R1284 += 1, R88 += 1 };
  s1 -> s1 [71, 74] { R1328 += 1, R1284 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R1328 += 1, R1284 += 1, R88 += 1 };
  s1 -> s1 [76, 65535] { R1328 += 1, R1284 += 1, R88 += 1 };
  s2 -> s1 [0, 69] { R1328 += 1, R1284 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R1328 += 1, R1284 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R1328 += 1, R1284 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R1328 += 1, R1284 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R1328 += 1, R1284 += 1, R87 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R1328 += 1, R1284 += 1, R87 += 1, R88 += 1 };
  s2 -> s1 [71, 74] { R1328 += 1, R1284 += 1, R88 += 1 };
  s2 -> s2 [71, 65535] { R1328 += 1, R1284 += 1, R87 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R1328 += 1, R1284 += 1, R88 += 1 };
  s2 -> s1 [76, 65535] { R1328 += 1, R1284 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R1328 += 1, R1284 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R1328 += 1, R1284 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R1328 += 1, R1283 += 1, R1284 += 1 };
  s3 -> s4 [70, 70] { R1328 += 1, R1284 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R1328 += 1, R1284 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R1328 += 1, R1284 += 1, R87 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R1328 += 1, R1284 += 1, R87 += 1, R88 += 1 };
  s3 -> s1 [71, 74] { R1328 += 1, R1284 += 1, R88 += 1 };
  s3 -> s2 [71, 65535] { R1328 += 1, R1284 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R1328 += 1, R1284 += 1, R88 += 1 };
  s3 -> s1 [76, 65535] { R1328 += 1, R1284 += 1, R88 += 1 };
  s5 -> s5 [0, 74] { R1328 += 1, R1284 += 1, R88 += 1 };
  s5 -> s11 [75, 75] { R1328 += 1, R1284 += 1, R88 += 1 };
  s5 -> s5 [76, 65535] { R1328 += 1, R1284 += 1, R88 += 1 };
  s6 -> s5 [0, 74] { R1328 += 1, R1284 += 1, R88 += 1 };
  s6 -> s6 [0, 65535] { R1328 += 1, R1284 += 1, R87 += 1, R88 += 1 };
  s6 -> s11 [75, 75] { R1328 += 1, R1284 += 1, R88 += 1 };
  s6 -> s5 [76, 65535] { R1328 += 1, R1284 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R1328 += 1, R1284 += 1, R88 += 1 };
  s8 -> s8 [0, 65535] { R1328 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R1328 += 1, R1284 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R1328 += 1, R1284 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R1328 += 1, R1284 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R1328 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R1328 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R1328 += 1, R1284 += 1, R88 += 1 };
  s12 -> s12 [0, 65535] { R1328 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R1330 += 1, R1286 += 1, R91 += 1, R92 += 1 };
  s0 -> s2 [0, 65535] { R1330 += 1, R1285 += 1, R1286 += 1 };
  s0 -> s0 [0, 65535] { R1329 += 1, R1330 += 1 };
  s0 -> s3 [70, 70] { R1330 += 1, R1286 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R1330 += 1, R1286 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R1330 += 1, R1286 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R1330 += 1, R1286 += 1, R91 += 1, R92 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R1330 += 1 };
  s1 -> s3 [70, 70] { R1330 += 1, R1286 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R1330 += 1, R1286 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R1330 += 1, R1286 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R1330 += 1, R1286 += 1, R91 += 1, R92 += 1 };
  s2 -> s2 [0, 65535] { R1330 += 1, R1285 += 1, R1286 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R1330 += 1, R1286 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R1330 += 1, R1286 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R1330 += 1, R1286 += 1, R91 += 1, R92 += 1 };
  s3 -> s3 [0, 65535] { R1330 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R1330 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R1330 += 1, R1286 += 1, R91 += 1, R92 += 1 };
  s5 -> s5 [0, 65535] { R1330 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R1332 += 1, R1288 += 1, R97 += 1, R98 += 1 };
  s0 -> s2 [0, 65535] { R1332 += 1, R1287 += 1, R1288 += 1 };
  s0 -> s0 [0, 65535] { R1331 += 1, R1332 += 1 };
  s0 -> s3 [70, 70] { R1332 += 1, R1288 += 1, R97 += 1, R98 += 1 };
  s0 -> s4 [70, 70] { R1332 += 1, R1288 += 1, R97 += 1, R98 += 1 };
  s0 -> s1 [71, 65535] { R1332 += 1, R1288 += 1, R97 += 1, R98 += 1 };
  s1 -> s1 [0, 69] { R1332 += 1, R1288 += 1, R97 += 1, R98 += 1 };
  s1 -> s1 [0, 65535] { R1332 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R1332 += 1, R1288 += 1, R97 += 1, R98 += 1 };
  s1 -> s4 [70, 70] { R1332 += 1, R1288 += 1, R97 += 1, R98 += 1 };
  s1 -> s1 [71, 65535] { R1332 += 1, R1288 += 1, R97 += 1, R98 += 1 };
  s2 -> s1 [0, 69] { R1332 += 1, R1288 += 1, R97 += 1, R98 += 1 };
  s2 -> s2 [0, 65535] { R1332 += 1, R1287 += 1, R1288 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R1332 += 1, R1288 += 1, R97 += 1, R98 += 1 };
  s2 -> s4 [70, 70] { R1332 += 1, R1288 += 1, R97 += 1, R98 += 1 };
  s2 -> s1 [71, 65535] { R1332 += 1, R1288 += 1, R97 += 1, R98 += 1 };
  s3 -> s3 [0, 65535] { R1332 += 1, R1288 += 1, R97 += 1, R98 += 1 };
  s3 -> s6 [0, 65535] { R1332 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1332 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1332 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R1334 += 1, R1290 += 1, R1220 += 1, R1221 += 1, R1222 += 1 };
  s0 -> s2 [0, 69] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s0 -> s3 [0, 69] { R1334 += 1, R1290 += 1, R1219 += 1, R1220 += 1 };
  s0 -> s4 [0, 65535] { R1334 += 1, R1289 += 1, R1290 += 1 };
  s0 -> s0 [0, 65535] { R1333 += 1, R1334 += 1 };
  s0 -> s5 [70, 70] { R1334 += 1, R1290 += 1, R1220 += 1, R1221 += 1, R1222 += 1 };
  s0 -> s6 [70, 70] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s0 -> s7 [70, 70] { R1334 += 1, R1290 += 1, R1220 += 1, R1221 += 1, R1222 += 1 };
  s0 -> s8 [70, 70] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s0 -> s9 [70, 70] { R1334 += 1, R1290 += 1, R1219 += 1, R1220 += 1 };
  s0 -> s10 [70, 70] { R1334 += 1, R1290 += 1, R1219 += 1, R1220 += 1 };
  s0 -> s2 [71, 74] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s0 -> s1 [71, 65535] { R1334 += 1, R1290 += 1, R1220 += 1, R1221 += 1, R1222 += 1 };
  s0 -> s3 [71, 65535] { R1334 += 1, R1290 += 1, R1219 += 1, R1220 += 1 };
  s0 -> s11 [75, 75] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s0 -> s2 [76, 65535] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s1 -> s1 [0, 69] { R1334 += 1, R1290 += 1, R1220 += 1, R1221 += 1, R1222 += 1 };
  s1 -> s2 [0, 69] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s1 -> s5 [70, 70] { R1334 += 1, R1290 += 1, R1220 += 1, R1221 += 1, R1222 += 1 };
  s1 -> s6 [70, 70] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s1 -> s7 [70, 70] { R1334 += 1, R1290 += 1, R1220 += 1, R1221 += 1, R1222 += 1 };
  s1 -> s8 [70, 70] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s1 -> s2 [71, 74] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s1 -> s1 [71, 65535] { R1334 += 1, R1290 += 1, R1220 += 1, R1221 += 1, R1222 += 1 };
  s1 -> s11 [75, 75] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s1 -> s2 [76, 65535] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s2 -> s2 [0, 69] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s2 -> s6 [70, 70] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s2 -> s8 [70, 70] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s2 -> s2 [71, 74] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s2 -> s11 [75, 75] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s2 -> s2 [76, 65535] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s3 -> s1 [0, 69] { R1334 += 1, R1290 += 1, R1220 += 1, R1221 += 1, R1222 += 1 };
  s3 -> s2 [0, 69] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s3 -> s3 [0, 69] { R1334 += 1, R1290 += 1, R1219 += 1, R1220 += 1 };
  s3 -> s5 [70, 70] { R1334 += 1, R1290 += 1, R1220 += 1, R1221 += 1, R1222 += 1 };
  s3 -> s6 [70, 70] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s3 -> s7 [70, 70] { R1334 += 1, R1290 += 1, R1220 += 1, R1221 += 1, R1222 += 1 };
  s3 -> s8 [70, 70] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s3 -> s9 [70, 70] { R1334 += 1, R1290 += 1, R1219 += 1, R1220 += 1 };
  s3 -> s10 [70, 70] { R1334 += 1, R1290 += 1, R1219 += 1, R1220 += 1 };
  s3 -> s2 [71, 74] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s3 -> s1 [71, 65535] { R1334 += 1, R1290 += 1, R1220 += 1, R1221 += 1, R1222 += 1 };
  s3 -> s3 [71, 65535] { R1334 += 1, R1290 += 1, R1219 += 1, R1220 += 1 };
  s3 -> s11 [75, 75] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s3 -> s2 [76, 65535] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s4 -> s1 [0, 69] { R1334 += 1, R1290 += 1, R1220 += 1, R1221 += 1, R1222 += 1 };
  s4 -> s2 [0, 69] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s4 -> s3 [0, 69] { R1334 += 1, R1290 += 1, R1219 += 1, R1220 += 1 };
  s4 -> s4 [0, 65535] { R1334 += 1, R1289 += 1, R1290 += 1 };
  s4 -> s5 [70, 70] { R1334 += 1, R1290 += 1, R1220 += 1, R1221 += 1, R1222 += 1 };
  s4 -> s6 [70, 70] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s4 -> s7 [70, 70] { R1334 += 1, R1290 += 1, R1220 += 1, R1221 += 1, R1222 += 1 };
  s4 -> s8 [70, 70] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s4 -> s9 [70, 70] { R1334 += 1, R1290 += 1, R1219 += 1, R1220 += 1 };
  s4 -> s10 [70, 70] { R1334 += 1, R1290 += 1, R1219 += 1, R1220 += 1 };
  s4 -> s2 [71, 74] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s4 -> s1 [71, 65535] { R1334 += 1, R1290 += 1, R1220 += 1, R1221 += 1, R1222 += 1 };
  s4 -> s3 [71, 65535] { R1334 += 1, R1290 += 1, R1219 += 1, R1220 += 1 };
  s4 -> s11 [75, 75] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s4 -> s2 [76, 65535] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s6 -> s6 [0, 74] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s6 -> s19 [75, 75] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s6 -> s6 [76, 65535] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s7 -> s6 [0, 74] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s7 -> s7 [0, 65535] { R1334 += 1, R1290 += 1, R1220 += 1, R1221 += 1, R1222 += 1 };
  s7 -> s19 [75, 75] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s7 -> s6 [76, 65535] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s9 -> s6 [0, 74] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s9 -> s7 [0, 65535] { R1334 += 1, R1290 += 1, R1220 += 1, R1221 += 1, R1222 += 1 };
  s9 -> s9 [0, 65535] { R1334 += 1, R1290 += 1, R1219 += 1, R1220 += 1 };
  s9 -> s19 [75, 75] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s9 -> s6 [76, 65535] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s11 -> s12 [0, 69] { R1334 += 1, R1290 += 1, R1220 += 1 };
  s11 -> s11 [0, 69] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s11 -> s13 [0, 69] { R1334 += 1, R1290 += 1 };
  s11 -> s14 [70, 70] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s11 -> s15 [70, 70] { R1334 += 1, R1290 += 1 };
  s11 -> s16 [70, 70] { R1334 += 1, R1290 += 1 };
  s11 -> s17 [70, 70] { R1334 += 1, R1290 += 1, R1220 += 1 };
  s11 -> s18 [70, 70] { R1334 += 1, R1290 += 1, R1220 += 1 };
  s11 -> s19 [70, 70] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s11 -> s12 [71, 65535] { R1334 += 1, R1290 += 1, R1220 += 1 };
  s11 -> s11 [71, 65535] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s11 -> s13 [71, 65535] { R1334 += 1, R1290 += 1 };
  s12 -> s12 [0, 69] { R1334 += 1, R1290 += 1, R1220 += 1 };
  s12 -> s13 [0, 69] { R1334 += 1, R1290 += 1 };
  s12 -> s15 [70, 70] { R1334 += 1, R1290 += 1 };
  s12 -> s16 [70, 70] { R1334 += 1, R1290 += 1 };
  s12 -> s17 [70, 70] { R1334 += 1, R1290 += 1, R1220 += 1 };
  s12 -> s18 [70, 70] { R1334 += 1, R1290 += 1, R1220 += 1 };
  s12 -> s12 [71, 65535] { R1334 += 1, R1290 += 1, R1220 += 1 };
  s12 -> s13 [71, 65535] { R1334 += 1, R1290 += 1 };
  s13 -> s13 [0, 69] { R1334 += 1, R1290 += 1 };
  s13 -> s20 [0, 65535];
  s13 -> s13 [0, 65535] { R1334 += 1 };
  s13 -> s15 [70, 70] { R1334 += 1, R1290 += 1 };
  s13 -> s16 [70, 70] { R1334 += 1, R1290 += 1 };
  s13 -> s13 [71, 65535] { R1334 += 1, R1290 += 1 };
  s15 -> s20 [0, 65535];
  s15 -> s15 [0, 65535] { R1334 += 1 };
  s16 -> s20 [0, 65535];
  s16 -> s16 [0, 65535] { R1334 += 1, R1290 += 1 };
  s16 -> s21 [0, 65535] { R1334 += 1 };
  s17 -> s16 [0, 65535] { R1334 += 1, R1290 += 1 };
  s17 -> s17 [0, 65535] { R1334 += 1, R1290 += 1, R1220 += 1 };
  s19 -> s16 [0, 65535] { R1334 += 1, R1290 += 1 };
  s19 -> s17 [0, 65535] { R1334 += 1, R1290 += 1, R1220 += 1 };
  s19 -> s19 [0, 65535] { R1334 += 1, R1290 += 1, R1220 += 1, R1222 += 1 };
  s20 -> s20 [0, 65535];
  s21 -> s20 [0, 65535];
  s21 -> s21 [0, 65535] { R1334 += 1 };
  accepting s16, s13, s21, s20, s15;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R1336 += 1, R1292 += 1, R1227 += 1, R1228 += 1 };
  s0 -> s2 [0, 69] { R1336 += 1, R1292 += 1, R1228 += 1, R1229 += 1, R1230 += 1 };
  s0 -> s3 [0, 69] { R1336 += 1, R1292 += 1, R1228 += 1, R1230 += 1, R1231 += 1 };
  s0 -> s4 [0, 65535] { R1336 += 1, R1291 += 1, R1292 += 1 };
  s0 -> s0 [0, 65535] { R1335 += 1, R1336 += 1 };
  s0 -> s5 [70, 70] { R1336 += 1, R1292 += 1, R1228 += 1, R1229 += 1, R1230 += 1 };
  s0 -> s6 [70, 70] { R1336 += 1, R1292 += 1, R1228 += 1, R1229 += 1, R1230 += 1 };
  s0 -> s7 [70, 70] { R1336 += 1, R1292 += 1, R1228 += 1, R1230 += 1, R1231 += 1 };
  s0 -> s8 [70, 70] { R1336 += 1, R1292 += 1, R1227 += 1, R1228 += 1 };
  s0 -> s9 [70, 70] { R1336 += 1, R1292 += 1, R1227 += 1, R1228 += 1 };
  s0 -> s10 [70, 70] { R1336 += 1, R1292 += 1, R1228 += 1, R1230 += 1, R1231 += 1 };
  s0 -> s1 [71, 65535] { R1336 += 1, R1292 += 1, R1227 += 1, R1228 += 1 };
  s0 -> s2 [71, 65535] { R1336 += 1, R1292 += 1, R1228 += 1, R1229 += 1, R1230 += 1 };
  s0 -> s3 [71, 65535] { R1336 += 1, R1292 += 1, R1228 += 1, R1230 += 1, R1231 += 1 };
  s1 -> s1 [0, 69] { R1336 += 1, R1292 += 1, R1227 += 1, R1228 += 1 };
  s1 -> s2 [0, 69] { R1336 += 1, R1292 += 1, R1228 += 1, R1229 += 1, R1230 += 1 };
  s1 -> s3 [0, 69] { R1336 += 1, R1292 += 1, R1228 += 1, R1230 += 1, R1231 += 1 };
  s1 -> s5 [70, 70] { R1336 += 1, R1292 += 1, R1228 += 1, R1229 += 1, R1230 += 1 };
  s1 -> s6 [70, 70] { R1336 += 1, R1292 += 1, R1228 += 1, R1229 += 1, R1230 += 1 };
  s1 -> s7 [70, 70] { R1336 += 1, R1292 += 1, R1228 += 1, R1230 += 1, R1231 += 1 };
  s1 -> s8 [70, 70] { R1336 += 1, R1292 += 1, R1227 += 1, R1228 += 1 };
  s1 -> s9 [70, 70] { R1336 += 1, R1292 += 1, R1227 += 1, R1228 += 1 };
  s1 -> s10 [70, 70] { R1336 += 1, R1292 += 1, R1228 += 1, R1230 += 1, R1231 += 1 };
  s1 -> s1 [71, 65535] { R1336 += 1, R1292 += 1, R1227 += 1, R1228 += 1 };
  s1 -> s2 [71, 65535] { R1336 += 1, R1292 += 1, R1228 += 1, R1229 += 1, R1230 += 1 };
  s1 -> s3 [71, 65535] { R1336 += 1, R1292 += 1, R1228 += 1, R1230 += 1, R1231 += 1 };
  s2 -> s2 [0, 69] { R1336 += 1, R1292 += 1, R1228 += 1, R1229 += 1, R1230 += 1 };
  s2 -> s3 [0, 69] { R1336 += 1, R1292 += 1, R1228 += 1, R1230 += 1, R1231 += 1 };
  s2 -> s5 [70, 70] { R1336 += 1, R1292 += 1, R1228 += 1, R1229 += 1, R1230 += 1 };
  s2 -> s6 [70, 70] { R1336 += 1, R1292 += 1, R1228 += 1, R1229 += 1, R1230 += 1 };
  s2 -> s7 [70, 70] { R1336 += 1, R1292 += 1, R1228 += 1, R1230 += 1, R1231 += 1 };
  s2 -> s10 [70, 70] { R1336 += 1, R1292 += 1, R1228 += 1, R1230 += 1, R1231 += 1 };
  s2 -> s2 [71, 65535] { R1336 += 1, R1292 += 1, R1228 += 1, R1229 += 1, R1230 += 1 };
  s2 -> s3 [71, 65535] { R1336 += 1, R1292 += 1, R1228 += 1, R1230 += 1, R1231 += 1 };
  s3 -> s14 [0, 69] { R1336 += 1, R1292 += 1, R1228 += 1 };
  s3 -> s3 [0, 69] { R1336 += 1, R1292 += 1, R1228 += 1, R1230 += 1, R1231 += 1 };
  s3 -> s15 [70, 70] { R1336 += 1, R1292 += 1, R1228 += 1 };
  s3 -> s7 [70, 70] { R1336 += 1, R1292 += 1, R1228 += 1, R1230 += 1, R1231 += 1 };
  s3 -> s11 [70, 70] { R1336 += 1, R1292 += 1, R1228 += 1 };
  s3 -> s10 [70, 70] { R1336 += 1, R1292 += 1, R1228 += 1, R1230 += 1, R1231 += 1 };
  s3 -> s14 [71, 65535] { R1336 += 1, R1292 += 1, R1228 += 1 };
  s3 -> s3 [71, 65535] { R1336 += 1, R1292 += 1, R1228 += 1, R1230 += 1, R1231 += 1 };
  s4 -> s1 [0, 69] { R1336 += 1, R1292 += 1, R1227 += 1, R1228 += 1 };
  s4 -> s2 [0, 69] { R1336 += 1, R1292 += 1, R1228 += 1, R1229 += 1, R1230 += 1 };
  s4 -> s3 [0, 69] { R1336 += 1, R1292 += 1, R1228 += 1, R1230 += 1, R1231 += 1 };
  s4 -> s4 [0, 65535] { R1336 += 1, R1291 += 1, R1292 += 1 };
  s4 -> s5 [70, 70] { R1336 += 1, R1292 += 1, R1228 += 1, R1229 += 1, R1230 += 1 };
  s4 -> s6 [70, 70] { R1336 += 1, R1292 += 1, R1228 += 1, R1229 += 1, R1230 += 1 };
  s4 -> s7 [70, 70] { R1336 += 1, R1292 += 1, R1228 += 1, R1230 += 1, R1231 += 1 };
  s4 -> s8 [70, 70] { R1336 += 1, R1292 += 1, R1227 += 1, R1228 += 1 };
  s4 -> s9 [70, 70] { R1336 += 1, R1292 += 1, R1227 += 1, R1228 += 1 };
  s4 -> s10 [70, 70] { R1336 += 1, R1292 += 1, R1228 += 1, R1230 += 1, R1231 += 1 };
  s4 -> s1 [71, 65535] { R1336 += 1, R1292 += 1, R1227 += 1, R1228 += 1 };
  s4 -> s2 [71, 65535] { R1336 += 1, R1292 += 1, R1228 += 1, R1229 += 1, R1230 += 1 };
  s4 -> s3 [71, 65535] { R1336 += 1, R1292 += 1, R1228 += 1, R1230 += 1, R1231 += 1 };
  s6 -> s6 [0, 65535] { R1336 += 1, R1292 += 1, R1228 += 1, R1229 += 1, R1230 += 1 };
  s6 -> s10 [0, 65535] { R1336 += 1, R1292 += 1, R1228 += 1, R1230 += 1, R1231 += 1 };
  s9 -> s6 [0, 65535] { R1336 += 1, R1292 += 1, R1228 += 1, R1229 += 1, R1230 += 1 };
  s9 -> s9 [0, 65535] { R1336 += 1, R1292 += 1, R1227 += 1, R1228 += 1 };
  s9 -> s10 [0, 65535] { R1336 += 1, R1292 += 1, R1228 += 1, R1230 += 1, R1231 += 1 };
  s10 -> s11 [0, 65535] { R1336 += 1, R1292 += 1, R1228 += 1 };
  s10 -> s10 [0, 65535] { R1336 += 1, R1292 += 1, R1228 += 1, R1230 += 1, R1231 += 1 };
  s11 -> s12 [0, 65535] { R1336 += 1 };
  s11 -> s13 [0, 65535];
  s11 -> s11 [0, 65535] { R1336 += 1, R1292 += 1, R1228 += 1 };
  s12 -> s12 [0, 65535] { R1336 += 1 };
  s12 -> s13 [0, 65535];
  s13 -> s13 [0, 65535];
  s14 -> s14 [0, 69] { R1336 += 1, R1292 += 1, R1228 += 1 };
  s14 -> s14 [0, 65535] { R1336 += 1 };
  s14 -> s13 [0, 65535];
  s14 -> s15 [70, 70] { R1336 += 1, R1292 += 1, R1228 += 1 };
  s14 -> s11 [70, 70] { R1336 += 1, R1292 += 1, R1228 += 1 };
  s14 -> s14 [71, 65535] { R1336 += 1, R1292 += 1, R1228 += 1 };
  s15 -> s15 [0, 65535] { R1336 += 1 };
  s15 -> s13 [0, 65535];
  accepting s12, s13, s14, s15, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R1336 && R23 - R1336 = -1 && R24 = R1336 && R25 - R1336 = -1 && R26 = R1336 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R1224 + -1*R1220 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R1224 + -1*R1220 - R66 = 0 && R55 + R96 + R93 + -1*R1226 + -1*R1222 - R68 = 0 && R65 + R1223 + R1219 = 0 && R67 + R1225 + R1221 = 0 && R1277 = 0 && R1278 = 0 && R1283 = 0 && R1284 = 0 && R1289 = 0 && R1290 = 0 && R1291 = 0 && R1292 = 0 && R1293 = 0 && R1294 = R1336 && R1295 = 0 && R1296 = R1336 && R1297 = 0 && R1298 = R1336 && R1299 = 0 && R1300 = R1336 && R1301 = 0 && R1302 = R1336 && R1303 = 0 && R1304 = R1336 && R1305 = 0 && R1306 = R1336 && R1307 = 0 && R1308 = R1336 && R1309 = 0 && R1310 = R1336 && R1311 = 0 && R1312 = R1336 && R1313 = 0 && R1314 = R1336 && R1315 = 0 && R1316 = R1336 && R1317 = 0 && R1318 = R1336 && R1319 = 0 && R1320 = R1336 && R1321 = 0 && R1322 = R1336 && R1323 = 0 && R1324 = R1336 && R1325 = 0 && R1326 = R1336 && R1327 = 0 && R1328 = R1336 && R1329 = 0 && R1330 = R1336 && R1331 = 0 && R1332 = R1336 && R1333 = 0 && R1334 = R1336 && R1335 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R102 + R99 < 1 && -1*R1224 + -1*R1220 - R66 < 1 && -1*R1226 + -1*R1222 - R68 < 1 && 0 < R1336 && (R2 != 0 || R20 = 0 || (R1237 = 0 && R1238 = 0)) && (R2 != 0 || R20 = 0 || (R1239 = 0 && R1240 = 0)) && (R2 != 0 || R20 = 0 || (R1241 = 0 && R1242 = 0)) && (R2 != 0 || R20 = 0 || (R1243 = 0 && R1244 = 0)) && (R2 != 0 || R20 = 0 || (R1245 = 0 && R1246 = 0)) && (R2 != 0 || R20 = 0 || (R1247 = 0 && R1248 = 0)) && (R2 != 0 || R20 = 0 || (R1249 = 0 && R1250 = 0)) && (R2 != 0 || R20 = 0 || (R1251 = 0 && R1252 = 0)) && (R2 != 0 || R20 = 0 || (R1253 = 0 && R1254 = 0)) && (R2 != 0 || R20 = 0 || (R1255 = 0 && R1256 = 0)) && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R1224 + -1*R1220 - R66 = 0 || R66 + R1224 + R1220 < 1) && (R59 + R100 + R97 != 0 || R60 + R101 + R98 + -1*R1224 + -1*R1220 - R66 = 0 || R66 + R1224 + R1220 < 1) && (R66 + R1224 + R1220 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R1226 + R1222 < 1) && (R53 + R94 + R91 = 0 || R68 + R1226 + R1222 < 1))) && (R66 + R1224 + R1220 != 0 || ((R59 + R100 + R97 != 0 || R60 + R101 + R98 = 0 || R68 + R1226 + R1222 < 1) && (R59 + R100 + R97 = 0 || R68 + R1226 + R1222 < 1))) && (R66 + R1224 + R1220 != 0 || ((R73 + R1232 + R1227 != 0 || R74 + R1233 + R1228 = 0 || R68 + R1226 + R1222 < 1) && (R73 + R1232 + R1227 = 0 || R68 + R1226 + R1222 < 1))) && (R68 + R1226 + R1222 != 0 || R77 + R1236 + R1231 = 0 || (R75 + R1234 + R1229 = 0 && R76 + R1235 + R1230 = 0)) && (R73 + R1232 + R1227 != 0 || R66 + R1224 + R1220 + -1*R1233 + -1*R1228 - R74 = 0 || R66 + R1224 + R1220 < 1) && (R75 + R1234 + R1229 != 0 || R68 + R1226 + R1222 + -1*R1235 + -1*R1230 - R76 = 0 || R68 + R1226 + R1222 < 1) && (R1237 != 0 || R2 = R1238 || R2 < 1) && (R1239 != 0 || R2 = R1240 || R2 < 1) && (R1241 != 0 || R2 = R1242 || R2 < 1) && (R1243 != 0 || R2 = R1244 || R2 < 1) && (R1245 != 0 || R2 = R1246 || R2 < 1) && (R1247 != 0 || R2 = R1248 || R2 < 1) && (R1249 != 0 || R2 = R1250 || R2 < 1) && (R1251 != 0 || R2 = R1252 || R2 < 1) && (R1253 != 0 || R2 = R1254 || R2 < 1) && (R1255 != 0 || R2 = R1256 || R2 < 1) && (R21 = 0 || (R1275 = 0 && R1276 = 0)) && (R21 = 0 || (R1279 = 0 && R1280 = 0)) && (R21 = 0 || (R1281 = 0 && R1282 = 0)) && (R21 = 0 || (R1285 = 0 && R1286 = 0)) && (R21 = 0 || (R1287 = 0 && R1288 = 0)) && (R22 = 0 || (R1257 = 0 && R1258 = 0)) && (R22 = 0 || (R1259 = 0 && R1260 = 0)) && (R22 = 0 || (R1261 = 0 && R1262 = 0)) && (R22 = 0 || (R1263 = 0 && R1264 = 0)) && (R22 = 0 || (R1265 = 0 && R1266 = 0)) && (R22 = 0 || (R1267 = 0 && R1268 = 0)) && (R22 = 0 || (R1269 = 0 && R1270 = 0)) && (R22 = 0 || (R1271 = 0 && R1272 = 0)) && (R22 = 0 || (R1273 = 0 && R1274 = 0)) && (R53 + R94 + R91 = 0 || R66 + R1224 + R1220 < 1) && (R59 + R100 + R97 = 0 || R66 + R1224 + R1220 < 1) && (R73 + R1232 + R1227 = 0 || R66 + R1224 + R1220 < 1) && (R75 + R1234 + R1229 = 0 || R68 + R1226 + R1222 < 1) && (R1237 = 0 || R2 < 1) && (R1239 = 0 || R2 < 1) && (R1241 = 0 || R2 < 1) && (R1243 = 0 || R2 < 1) && (R1245 = 0 || R2 < 1) && (R1247 = 0 || R2 < 1) && (R1249 = 0 || R2 < 1) && (R1251 = 0 || R2 < 1) && (R1253 = 0 || R2 < 1) && (R1255 = 0 || R2 < 1);
// End of Parikh automata intersection problem
