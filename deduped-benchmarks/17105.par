// Parikh automata intersection problem, generated by OSTRICH+
counter int R10159, R10160, R10161, R10162, R10163, R10164, R12, R12955, R12956, R12957, R12958, R12959, R12960, R12961, R12962, R13073, R13074, R13075, R13076, R13077, R13078, R13079, R13080, R13081, R13082, R13083, R13084, R13085, R13086, R13087, R13088, R13089, R13090, R13091, R13092, R13093, R13094, R13095, R13096, R13097, R13098, R13099, R13100, R13101, R13102, R13103, R13104, R13105, R13106, R13107, R13108, R13109, R13110, R13111, R13112, R13113, R13114, R13115, R13116, R13117, R13118, R13119, R13120, R13121, R13122, R13123, R13124, R13125, R13126, R13127, R13128, R13129, R13130, R13131, R13132, R13133, R13134, R13135, R13136, R13137, R13138, R13139, R13140, R13141, R13142, R13143, R13144, R13145, R13146, R13147, R13148, R13149, R13150, R13151, R13152, R13153, R13154, R13155, R13156, R13157, R13158, R13159, R13160, R13161, R13162, R13163, R13164, R13165, R13166, R13167, R13168, R13169, R13170, R13171, R13172, R13173, R13174, R13175, R13176, R13177, R13178, R13179, R13180, R13181, R13182, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R4, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R13103 += 1, R13104 += 1 };
  s0 -> s1 [0, 65535] { R13104 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R13104 += 1, R22 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R13106 += 1 };
  s0 -> s0 [0, 65535] { R13105 += 1, R13106 += 1 };
  s0 -> s2 [70, 70] { R13106 += 1 };
  s0 -> s3 [70, 70] { R13106 += 1 };
  s0 -> s1 [76, 65535] { R13106 += 1 };
  s1 -> s1 [0, 69] { R13106 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13106 += 1 };
  s1 -> s3 [70, 70] { R13106 += 1 };
  s1 -> s1 [76, 65535] { R13106 += 1 };
  s2 -> s2 [0, 70] { R13106 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R13106 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R13108 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R13107 += 1, R13108 += 1 };
  s0 -> s2 [70, 70] { R13108 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R13108 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R13108 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R13108 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13108 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R13108 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R13108 += 1, R45 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13108 += 1, R45 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R13110 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R13109 += 1, R13110 += 1 };
  s0 -> s2 [70, 70] { R13110 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R13110 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R13110 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R13110 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13110 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R13110 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R13110 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R13110 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R13112 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R13111 += 1, R13112 += 1 };
  s0 -> s2 [70, 70] { R13112 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R13112 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R13112 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R13112 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13112 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R13112 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R13112 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R13112 += 1, R49 += 1, R50 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R13114 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R13113 += 1, R13114 += 1 };
  s0 -> s2 [70, 70] { R13114 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R13114 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R13114 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R13114 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13114 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R13114 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R13114 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13114 += 1, R53 += 1, R54 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R13116 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R13115 += 1, R13116 += 1 };
  s0 -> s2 [70, 70] { R13116 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R13116 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R13116 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R13116 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13116 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R13116 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R13116 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13116 += 1, R59 += 1, R60 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R13118 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R13117 += 1, R13118 += 1 };
  s0 -> s2 [70, 70] { R13118 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R13118 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R13118 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R13118 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13118 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R13118 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R13118 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R13118 += 1, R65 += 1, R66 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R13120 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R13119 += 1, R13120 += 1 };
  s0 -> s2 [70, 70] { R13120 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R13120 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R13120 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R13120 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13120 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R13120 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R13120 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R13120 += 1, R73 += 1, R74 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R13140 += 1 };
  s0 -> s0 [0, 65535] { R13139 += 1, R13140 += 1 };
  s0 -> s2 [70, 70] { R13140 += 1 };
  s0 -> s1 [71, 65535] { R13140 += 1 };
  s1 -> s1 [0, 69] { R13140 += 1 };
  s1 -> s2 [70, 70] { R13140 += 1 };
  s1 -> s1 [71, 65535] { R13140 += 1 };
  s2 -> s2 [0, 65535] { R13140 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R13142 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R13141 += 1, R13142 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R13142 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R13144 += 1 };
  s0 -> s0 [0, 65535] { R13143 += 1, R13144 += 1 };
  s0 -> s2 [0, 65535] { R13144 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R13144 += 1 };
  s0 -> s1 [71, 65535] { R13144 += 1 };
  s1 -> s1 [0, 69] { R13144 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R13144 += 1 };
  s1 -> s1 [71, 65535] { R13144 += 1 };
  s2 -> s1 [0, 69] { R13144 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13144 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R13144 += 1 };
  s2 -> s1 [71, 65535] { R13144 += 1 };
  s3 -> s3 [0, 65535] { R13144 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R13146 += 1, R13084 += 1 };
  s0 -> s0 [0, 65535] { R13145 += 1, R13146 += 1 };
  s0 -> s2 [0, 65535] { R13146 += 1, R13083 += 1, R13084 += 1 };
  s0 -> s1 [71, 65535] { R13146 += 1, R13084 += 1 };
  s1 -> s1 [0, 69] { R13146 += 1, R13084 += 1 };
  s1 -> s1 [0, 65535] { R13146 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R13146 += 1, R13084 += 1 };
  s2 -> s1 [0, 69] { R13146 += 1, R13084 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13146 += 1, R13083 += 1, R13084 += 1 };
  s2 -> s1 [71, 65535] { R13146 += 1, R13084 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R13148 += 1, R13086 += 1, R20 += 1 };
  s0 -> s2 [0, 65535] { R13148 += 1, R13085 += 1, R13086 += 1 };
  s0 -> s0 [0, 65535] { R13147 += 1, R13148 += 1 };
  s1 -> s4 [0, 65535] { R13148 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R13148 += 1, R13086 += 1, R20 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R13148 += 1, R13086 += 1, R20 += 1 };
  s2 -> s2 [0, 65535] { R13148 += 1, R13085 += 1, R13086 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13148 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R13150 += 1, R13088 += 1 };
  s0 -> s2 [0, 65535] { R13150 += 1, R13087 += 1, R13088 += 1 };
  s0 -> s0 [0, 65535] { R13149 += 1, R13150 += 1 };
  s0 -> s1 [75, 65535] { R13150 += 1, R13088 += 1 };
  s1 -> s1 [0, 70] { R13150 += 1, R13088 += 1 };
  s1 -> s1 [0, 65535] { R13150 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R13150 += 1, R13088 += 1 };
  s2 -> s1 [0, 70] { R13150 += 1, R13088 += 1 };
  s2 -> s2 [0, 65535] { R13150 += 1, R13087 += 1, R13088 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R13150 += 1, R13088 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R13151 += 1, R13152 += 1 };
  s0 -> s1 [0, 65535] { R13152 += 1, R13090 += 1, R84 += 1 };
  s0 -> s2 [0, 65535] { R13152 += 1, R13089 += 1, R13090 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R13152 += 1, R13090 += 1, R84 += 1 };
  s1 -> s4 [0, 65535] { R13152 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R13152 += 1, R13090 += 1, R84 += 1 };
  s2 -> s2 [0, 65535] { R13152 += 1, R13089 += 1, R13090 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13152 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R13154 += 1, R13092 += 1 };
  s0 -> s2 [0, 65535] { R13154 += 1, R13092 += 1, R86 += 1 };
  s0 -> s3 [0, 65535] { R13154 += 1, R13091 += 1, R13092 += 1 };
  s0 -> s0 [0, 65535] { R13153 += 1, R13154 += 1 };
  s0 -> s1 [76, 65535] { R13154 += 1, R13092 += 1 };
  s1 -> s1 [0, 74] { R13154 += 1, R13092 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R13154 += 1 };
  s1 -> s1 [76, 65535] { R13154 += 1, R13092 += 1 };
  s2 -> s1 [0, 74] { R13154 += 1, R13092 += 1 };
  s2 -> s2 [0, 65535] { R13154 += 1, R13092 += 1, R86 += 1 };
  s2 -> s5 [0, 65535] { R13154 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [76, 65535] { R13154 += 1, R13092 += 1 };
  s3 -> s1 [0, 74] { R13154 += 1, R13092 += 1 };
  s3 -> s2 [0, 65535] { R13154 += 1, R13092 += 1, R86 += 1 };
  s3 -> s3 [0, 65535] { R13154 += 1, R13091 += 1, R13092 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [76, 65535] { R13154 += 1, R13092 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13154 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R13156 += 1, R13094 += 1 };
  s0 -> s0 [0, 65535] { R13155 += 1, R13156 += 1 };
  s0 -> s2 [0, 65535] { R13156 += 1, R13094 += 1, R90 += 1 };
  s0 -> s3 [0, 65535] { R13156 += 1, R13093 += 1, R13094 += 1 };
  s1 -> s1 [0, 65535] { R13156 += 1, R13094 += 1 };
  s1 -> s5 [0, 65535] { R13156 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R13156 += 1, R13094 += 1 };
  s2 -> s5 [0, 65535] { R13156 += 1 };
  s2 -> s2 [0, 65535] { R13156 += 1, R13094 += 1, R90 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R13156 += 1, R13094 += 1 };
  s3 -> s2 [0, 65535] { R13156 += 1, R13094 += 1, R90 += 1 };
  s3 -> s3 [0, 65535] { R13156 += 1, R13093 += 1, R13094 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13156 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R13158 += 1, R13096 += 1, R94 += 1, R95 += 1 };
  s0 -> s2 [0, 65535] { R13158 += 1, R13095 += 1, R13096 += 1 };
  s0 -> s0 [0, 65535] { R13157 += 1, R13158 += 1 };
  s0 -> s3 [0, 65535] { R13158 += 1, R13096 += 1, R95 += 1, R96 += 1 };
  s1 -> s1 [0, 65535] { R13158 += 1, R13096 += 1, R94 += 1, R95 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R13158 += 1 };
  s1 -> s3 [0, 65535] { R13158 += 1, R13096 += 1, R95 += 1, R96 += 1 };
  s2 -> s1 [0, 65535] { R13158 += 1, R13096 += 1, R94 += 1, R95 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13158 += 1, R13095 += 1, R13096 += 1 };
  s2 -> s3 [0, 65535] { R13158 += 1, R13096 += 1, R95 += 1, R96 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R13158 += 1 };
  s3 -> s6 [0, 65535] { R13158 += 1, R13096 += 1 };
  s3 -> s3 [0, 65535] { R13158 += 1, R13096 += 1, R95 += 1, R96 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13158 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R13158 += 1 };
  s6 -> s6 [0, 65535] { R13158 += 1, R13096 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s0 [0, 65535] { R13159 += 1, R13160 += 1 };
  s0 -> s1 [0, 65535] { R13160 += 1, R13097 += 1, R13098 += 1 };
  s0 -> s2 [0, 65535] { R13160 += 1, R13098 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R13160 += 1, R13097 += 1, R13098 += 1 };
  s1 -> s2 [0, 65535] { R13160 += 1, R13098 += 1 };
  s2 -> s3 [0, 65535] { R13160 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13160 += 1, R13098 += 1 };
  s3 -> s3 [0, 65535] { R13160 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 74] { R13162 += 1, R13100 += 1, R12960 += 1, R12962 += 1 };
  s0 -> s2 [0, 65535] { R13162 += 1, R13099 += 1, R13100 += 1 };
  s0 -> s3 [0, 65535] { R13162 += 1, R13100 += 1, R12960 += 1, R12961 += 1, R12962 += 1 };
  s0 -> s0 [0, 65535] { R13161 += 1, R13162 += 1 };
  s0 -> s4 [75, 75] { R13162 += 1, R13100 += 1, R12960 += 1, R12962 += 1 };
  s0 -> s1 [76, 65535] { R13162 += 1, R13100 += 1, R12960 += 1, R12962 += 1 };
  s1 -> s1 [0, 74] { R13162 += 1, R13100 += 1, R12960 += 1, R12962 += 1 };
  s1 -> s4 [75, 75] { R13162 += 1, R13100 += 1, R12960 += 1, R12962 += 1 };
  s1 -> s1 [76, 65535] { R13162 += 1, R13100 += 1, R12960 += 1, R12962 += 1 };
  s2 -> s1 [0, 74] { R13162 += 1, R13100 += 1, R12960 += 1, R12962 += 1 };
  s2 -> s2 [0, 65535] { R13162 += 1, R13099 += 1, R13100 += 1 };
  s2 -> s3 [0, 65535] { R13162 += 1, R13100 += 1, R12960 += 1, R12961 += 1, R12962 += 1 };
  s2 -> s4 [75, 75] { R13162 += 1, R13100 += 1, R12960 += 1, R12962 += 1 };
  s2 -> s1 [76, 65535] { R13162 += 1, R13100 += 1, R12960 += 1, R12962 += 1 };
  s3 -> s1 [0, 74] { R13162 += 1, R13100 += 1, R12960 += 1, R12962 += 1 };
  s3 -> s3 [0, 65535] { R13162 += 1, R13100 += 1, R12960 += 1, R12961 += 1, R12962 += 1 };
  s3 -> s4 [75, 75] { R13162 += 1, R13100 += 1, R12960 += 1, R12962 += 1 };
  s3 -> s1 [76, 65535] { R13162 += 1, R13100 += 1, R12960 += 1, R12962 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R13162 += 1, R13100 += 1, R12960 += 1 };
  s4 -> s7 [0, 65535] { R13162 += 1, R13100 += 1 };
  s4 -> s8 [0, 65535] { R13162 += 1 };
  s4 -> s4 [0, 65535] { R13162 += 1, R13100 += 1, R12960 += 1, R12962 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13162 += 1, R13100 += 1, R12960 += 1 };
  s6 -> s7 [0, 65535] { R13162 += 1, R13100 += 1 };
  s6 -> s8 [0, 65535] { R13162 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R13162 += 1, R13100 += 1 };
  s7 -> s8 [0, 65535] { R13162 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s8 [0, 65535] { R13162 += 1 };
  accepting s4, s8, s5, s6, s7;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R13164 += 1, R13101 += 1, R13102 += 1 };
  s0 -> s0 [0, 65535] { R13163 += 1, R13164 += 1 };
  s0 -> s2 [0, 65535] { R13164 += 1, R13102 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R13164 += 1, R13101 += 1, R13102 += 1 };
  s1 -> s2 [0, 65535] { R13164 += 1, R13102 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R13164 += 1 };
  s2 -> s2 [0, 65535] { R13164 += 1, R13102 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13164 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R13165 += 1, R13166 += 1 };
  s0 -> s1 [0, 65535] { R13166 += 1, R13121 += 1, R13122 += 1 };
  s0 -> s2 [0, 65535] { R13166 += 1, R13122 += 1, R21 += 1 };
  s1 -> s1 [0, 65535] { R13166 += 1, R13121 += 1, R13122 += 1 };
  s1 -> s2 [0, 65535] { R13166 += 1, R13122 += 1, R21 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13166 += 1, R13122 += 1, R21 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R13166 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13166 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R13168 += 1, R13124 += 1 };
  s0 -> s2 [0, 65535] { R13168 += 1, R13123 += 1, R13124 += 1 };
  s0 -> s0 [0, 65535] { R13167 += 1, R13168 += 1 };
  s0 -> s3 [70, 70] { R13168 += 1, R13124 += 1 };
  s0 -> s4 [70, 70] { R13168 += 1, R13124 += 1 };
  s0 -> s5 [75, 75] { R13168 += 1, R13124 += 1 };
  s0 -> s1 [76, 65535] { R13168 += 1, R13124 += 1 };
  s1 -> s1 [0, 69] { R13168 += 1, R13124 += 1 };
  s1 -> s3 [70, 70] { R13168 += 1, R13124 += 1 };
  s1 -> s4 [70, 70] { R13168 += 1, R13124 += 1 };
  s1 -> s5 [75, 75] { R13168 += 1, R13124 += 1 };
  s1 -> s1 [76, 65535] { R13168 += 1, R13124 += 1 };
  s2 -> s1 [0, 69] { R13168 += 1, R13124 += 1 };
  s2 -> s2 [0, 65535] { R13168 += 1, R13123 += 1, R13124 += 1 };
  s2 -> s3 [70, 70] { R13168 += 1, R13124 += 1 };
  s2 -> s4 [70, 70] { R13168 += 1, R13124 += 1 };
  s2 -> s5 [75, 75] { R13168 += 1, R13124 += 1 };
  s2 -> s1 [76, 65535] { R13168 += 1, R13124 += 1 };
  s4 -> s4 [0, 70] { R13168 += 1, R13124 += 1 };
  s4 -> s7 [75, 75] { R13168 += 1, R13124 += 1 };
  s4 -> s4 [76, 65535] { R13168 += 1, R13124 += 1 };
  s5 -> s5 [0, 69] { R13168 += 1, R13124 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R13168 += 1 };
  s5 -> s7 [70, 70] { R13168 += 1, R13124 += 1 };
  s5 -> s8 [70, 70] { R13168 += 1, R13124 += 1 };
  s5 -> s5 [75, 65535] { R13168 += 1, R13124 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R13168 += 1, R13124 += 1 };
  s7 -> s7 [0, 65535] { R13168 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R13168 += 1, R13124 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R13168 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R13170 += 1, R13126 += 1, R83 += 1 };
  s0 -> s2 [0, 65535] { R13170 += 1, R13125 += 1, R13126 += 1 };
  s0 -> s0 [0, 65535] { R13169 += 1, R13170 += 1 };
  s0 -> s3 [70, 70] { R13170 += 1, R13126 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R13170 += 1, R13126 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R13170 += 1, R13126 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R13170 += 1, R13126 += 1, R83 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13170 += 1 };
  s1 -> s3 [70, 70] { R13170 += 1, R13126 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R13170 += 1, R13126 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R13170 += 1, R13126 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R13170 += 1, R13126 += 1, R83 += 1 };
  s2 -> s2 [0, 65535] { R13170 += 1, R13125 += 1, R13126 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R13170 += 1, R13126 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R13170 += 1, R13126 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R13170 += 1, R13126 += 1, R83 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R13170 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R13170 += 1 };
  s4 -> s4 [0, 65535] { R13170 += 1, R13126 += 1, R83 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13170 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R13172 += 1, R13128 += 1, R85 += 1 };
  s0 -> s0 [0, 65535] { R13171 += 1, R13172 += 1 };
  s0 -> s2 [0, 65535] { R13172 += 1, R13127 += 1, R13128 += 1 };
  s0 -> s3 [70, 70] { R13172 += 1, R13128 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R13172 += 1, R13128 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R13172 += 1, R13128 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R13172 += 1, R13128 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R13172 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R13172 += 1, R13128 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R13172 += 1, R13128 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R13172 += 1, R13128 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R13172 += 1, R13128 += 1, R85 += 1 };
  s2 -> s2 [0, 65535] { R13172 += 1, R13127 += 1, R13128 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R13172 += 1, R13128 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R13172 += 1, R13128 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R13172 += 1, R13128 += 1, R85 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R13172 += 1, R13128 += 1, R85 += 1 };
  s3 -> s6 [0, 65535] { R13172 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13172 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13172 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R13174 += 1, R13130 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R13174 += 1, R13130 += 1, R88 += 1 };
  s0 -> s3 [0, 65535] { R13174 += 1, R13129 += 1, R13130 += 1 };
  s0 -> s0 [0, 65535] { R13173 += 1, R13174 += 1 };
  s0 -> s4 [70, 70] { R13174 += 1, R13130 += 1, R87 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R13174 += 1, R13130 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R13174 += 1, R13130 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R13174 += 1, R13130 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [71, 74] { R13174 += 1, R13130 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R13174 += 1, R13130 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R13174 += 1, R13130 += 1, R88 += 1 };
  s0 -> s2 [76, 65535] { R13174 += 1, R13130 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R13174 += 1, R13130 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [0, 69] { R13174 += 1, R13130 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R13174 += 1, R13130 += 1, R87 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R13174 += 1, R13130 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R13174 += 1, R13130 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R13174 += 1, R13130 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [71, 74] { R13174 += 1, R13130 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R13174 += 1, R13130 += 1, R87 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R13174 += 1, R13130 += 1, R88 += 1 };
  s1 -> s2 [76, 65535] { R13174 += 1, R13130 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R13174 += 1, R13130 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R13174 += 1, R13130 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R13174 += 1, R13130 += 1, R88 += 1 };
  s2 -> s2 [71, 74] { R13174 += 1, R13130 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R13174 += 1, R13130 += 1, R88 += 1 };
  s2 -> s2 [76, 65535] { R13174 += 1, R13130 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R13174 += 1, R13130 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R13174 += 1, R13130 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R13174 += 1, R13129 += 1, R13130 += 1 };
  s3 -> s4 [70, 70] { R13174 += 1, R13130 += 1, R87 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R13174 += 1, R13130 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R13174 += 1, R13130 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R13174 += 1, R13130 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [71, 74] { R13174 += 1, R13130 += 1, R88 += 1 };
  s3 -> s1 [71, 65535] { R13174 += 1, R13130 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R13174 += 1, R13130 += 1, R88 += 1 };
  s3 -> s2 [76, 65535] { R13174 += 1, R13130 += 1, R88 += 1 };
  s5 -> s5 [0, 74] { R13174 += 1, R13130 += 1, R88 += 1 };
  s5 -> s10 [75, 75] { R13174 += 1, R13130 += 1, R88 += 1 };
  s5 -> s5 [76, 65535] { R13174 += 1, R13130 += 1, R88 += 1 };
  s7 -> s5 [0, 74] { R13174 += 1, R13130 += 1, R88 += 1 };
  s7 -> s7 [0, 65535] { R13174 += 1, R13130 += 1, R87 += 1, R88 += 1 };
  s7 -> s10 [75, 75] { R13174 += 1, R13130 += 1, R88 += 1 };
  s7 -> s5 [76, 65535] { R13174 += 1, R13130 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R13174 += 1, R13130 += 1, R88 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R13174 += 1 };
  s8 -> s10 [70, 70] { R13174 += 1, R13130 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R13174 += 1, R13130 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R13174 += 1, R13130 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s12 [0, 65535] { R13174 += 1 };
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R13174 += 1, R13130 += 1, R88 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R13174 += 1 };
  s12 -> s12 [0, 65535] { R13174 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R13176 += 1, R13132 += 1, R91 += 1, R92 += 1 };
  s0 -> s2 [0, 65535] { R13176 += 1, R13131 += 1, R13132 += 1 };
  s0 -> s0 [0, 65535] { R13175 += 1, R13176 += 1 };
  s0 -> s3 [70, 70] { R13176 += 1, R13132 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R13176 += 1, R13132 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R13176 += 1, R13132 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R13176 += 1, R13132 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 65535] { R13176 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R13176 += 1, R13132 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R13176 += 1, R13132 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R13176 += 1, R13132 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R13176 += 1, R13132 += 1, R91 += 1, R92 += 1 };
  s2 -> s2 [0, 65535] { R13176 += 1, R13131 += 1, R13132 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R13176 += 1, R13132 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R13176 += 1, R13132 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R13176 += 1, R13132 += 1, R91 += 1, R92 += 1 };
  s3 -> s6 [0, 65535] { R13176 += 1 };
  s3 -> s3 [0, 65535] { R13176 += 1, R13132 += 1, R91 += 1, R92 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13176 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13176 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R13178 += 1, R13134 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s2 [0, 69] { R13178 += 1, R13134 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s0 [0, 65535] { R13177 += 1, R13178 += 1 };
  s0 -> s3 [0, 65535] { R13178 += 1, R13133 += 1, R13134 += 1 };
  s0 -> s4 [70, 70] { R13178 += 1, R13134 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s5 [70, 70] { R13178 += 1, R13134 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s6 [70, 70] { R13178 += 1, R13134 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s7 [70, 70] { R13178 += 1, R13134 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s1 [71, 65535] { R13178 += 1, R13134 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s2 [71, 65535] { R13178 += 1, R13134 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s1 [0, 69] { R13178 += 1, R13134 += 1, R10159 += 1, R10160 += 1 };
  s1 -> s2 [0, 69] { R13178 += 1, R13134 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s4 [70, 70] { R13178 += 1, R13134 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s5 [70, 70] { R13178 += 1, R13134 += 1, R10159 += 1, R10160 += 1 };
  s1 -> s6 [70, 70] { R13178 += 1, R13134 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s7 [70, 70] { R13178 += 1, R13134 += 1, R10159 += 1, R10160 += 1 };
  s1 -> s1 [71, 65535] { R13178 += 1, R13134 += 1, R10159 += 1, R10160 += 1 };
  s1 -> s2 [71, 65535] { R13178 += 1, R13134 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s11 [0, 69] { R13178 += 1, R13134 += 1 };
  s2 -> s2 [0, 69] { R13178 += 1, R13134 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s4 [70, 70] { R13178 += 1, R13134 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s12 [70, 70] { R13178 += 1, R13134 += 1 };
  s2 -> s6 [70, 70] { R13178 += 1, R13134 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s8 [70, 70] { R13178 += 1, R13134 += 1 };
  s2 -> s11 [71, 65535] { R13178 += 1, R13134 += 1 };
  s2 -> s2 [71, 65535] { R13178 += 1, R13134 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s1 [0, 69] { R13178 += 1, R13134 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s2 [0, 69] { R13178 += 1, R13134 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s3 [0, 65535] { R13178 += 1, R13133 += 1, R13134 += 1 };
  s3 -> s4 [70, 70] { R13178 += 1, R13134 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s5 [70, 70] { R13178 += 1, R13134 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s6 [70, 70] { R13178 += 1, R13134 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s7 [70, 70] { R13178 += 1, R13134 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s1 [71, 65535] { R13178 += 1, R13134 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s2 [71, 65535] { R13178 += 1, R13134 += 1, R10160 += 1, R10161 += 1 };
  s5 -> s5 [0, 65535] { R13178 += 1, R13134 += 1, R10159 += 1, R10160 += 1 };
  s5 -> s6 [0, 65535] { R13178 += 1, R13134 += 1, R10160 += 1, R10161 += 1 };
  s6 -> s6 [0, 65535] { R13178 += 1, R13134 += 1, R10160 += 1, R10161 += 1 };
  s6 -> s8 [0, 65535] { R13178 += 1, R13134 += 1 };
  s8 -> s9 [0, 65535] { R13178 += 1 };
  s8 -> s10 [0, 65535];
  s8 -> s8 [0, 65535] { R13178 += 1, R13134 += 1 };
  s9 -> s9 [0, 65535] { R13178 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  s11 -> s11 [0, 69] { R13178 += 1, R13134 += 1 };
  s11 -> s11 [0, 65535] { R13178 += 1 };
  s11 -> s10 [0, 65535];
  s11 -> s12 [70, 70] { R13178 += 1, R13134 += 1 };
  s11 -> s8 [70, 70] { R13178 += 1, R13134 += 1 };
  s11 -> s11 [71, 65535] { R13178 += 1, R13134 += 1 };
  s12 -> s12 [0, 65535] { R13178 += 1 };
  s12 -> s10 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R13180 += 1, R13136 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s0 -> s2 [0, 69] { R13180 += 1, R13136 += 1, R12955 += 1, R12956 += 1 };
  s0 -> s0 [0, 65535] { R13179 += 1, R13180 += 1 };
  s0 -> s3 [0, 65535] { R13180 += 1, R13135 += 1, R13136 += 1 };
  s0 -> s4 [70, 70] { R13180 += 1, R13136 += 1, R12955 += 1, R12956 += 1 };
  s0 -> s5 [70, 70] { R13180 += 1, R13136 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s0 -> s6 [70, 70] { R13180 += 1, R13136 += 1, R12955 += 1, R12956 += 1 };
  s0 -> s7 [70, 70] { R13180 += 1, R13136 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s0 -> s1 [71, 65535] { R13180 += 1, R13136 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s0 -> s2 [71, 65535] { R13180 += 1, R13136 += 1, R12955 += 1, R12956 += 1 };
  s1 -> s1 [0, 69] { R13180 += 1, R13136 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s1 [0, 65535] { R13180 += 1 };
  s1 -> s5 [70, 70] { R13180 += 1, R13136 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s1 -> s7 [70, 70] { R13180 += 1, R13136 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s1 -> s1 [71, 65535] { R13180 += 1, R13136 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s2 -> s1 [0, 69] { R13180 += 1, R13136 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s2 -> s2 [0, 69] { R13180 += 1, R13136 += 1, R12955 += 1, R12956 += 1 };
  s2 -> s4 [70, 70] { R13180 += 1, R13136 += 1, R12955 += 1, R12956 += 1 };
  s2 -> s5 [70, 70] { R13180 += 1, R13136 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s2 -> s6 [70, 70] { R13180 += 1, R13136 += 1, R12955 += 1, R12956 += 1 };
  s2 -> s7 [70, 70] { R13180 += 1, R13136 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s2 -> s1 [71, 65535] { R13180 += 1, R13136 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s2 -> s2 [71, 65535] { R13180 += 1, R13136 += 1, R12955 += 1, R12956 += 1 };
  s3 -> s1 [0, 69] { R13180 += 1, R13136 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s3 -> s2 [0, 69] { R13180 += 1, R13136 += 1, R12955 += 1, R12956 += 1 };
  s3 -> s3 [0, 65535] { R13180 += 1, R13135 += 1, R13136 += 1 };
  s3 -> s4 [70, 70] { R13180 += 1, R13136 += 1, R12955 += 1, R12956 += 1 };
  s3 -> s5 [70, 70] { R13180 += 1, R13136 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s3 -> s6 [70, 70] { R13180 += 1, R13136 += 1, R12955 += 1, R12956 += 1 };
  s3 -> s7 [70, 70] { R13180 += 1, R13136 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s3 -> s1 [71, 65535] { R13180 += 1, R13136 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s3 -> s2 [71, 65535] { R13180 += 1, R13136 += 1, R12955 += 1, R12956 += 1 };
  s4 -> s4 [0, 65535] { R13180 += 1, R13136 += 1, R12955 += 1, R12956 += 1 };
  s4 -> s5 [0, 65535] { R13180 += 1, R13136 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s9 [0, 65535] { R13180 += 1 };
  s5 -> s5 [0, 65535] { R13180 += 1, R13136 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R13180 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R13180 += 1 };
  accepting s8, s5, s9, s1, s7;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R13182 += 1, R13138 += 1, R13073 += 1, R13074 += 1 };
  s0 -> s2 [0, 69] { R13182 += 1, R13138 += 1, R13074 += 1, R13076 += 1, R13077 += 1 };
  s0 -> s3 [0, 69] { R13182 += 1, R13138 += 1, R13074 += 1, R13075 += 1, R13076 += 1 };
  s0 -> s4 [0, 65535] { R13182 += 1, R13137 += 1, R13138 += 1 };
  s0 -> s0 [0, 65535] { R13181 += 1, R13182 += 1 };
  s0 -> s5 [70, 70] { R13182 += 1, R13138 += 1, R13074 += 1, R13076 += 1, R13077 += 1 };
  s0 -> s6 [70, 70] { R13182 += 1, R13138 += 1, R13074 += 1, R13075 += 1, R13076 += 1 };
  s0 -> s7 [70, 70] { R13182 += 1, R13138 += 1, R13074 += 1, R13076 += 1, R13077 += 1 };
  s0 -> s8 [70, 70] { R13182 += 1, R13138 += 1, R13073 += 1, R13074 += 1 };
  s0 -> s9 [70, 70] { R13182 += 1, R13138 += 1, R13073 += 1, R13074 += 1 };
  s0 -> s10 [70, 70] { R13182 += 1, R13138 += 1, R13074 += 1, R13075 += 1, R13076 += 1 };
  s0 -> s1 [71, 65535] { R13182 += 1, R13138 += 1, R13073 += 1, R13074 += 1 };
  s0 -> s2 [71, 65535] { R13182 += 1, R13138 += 1, R13074 += 1, R13076 += 1, R13077 += 1 };
  s0 -> s3 [71, 65535] { R13182 += 1, R13138 += 1, R13074 += 1, R13075 += 1, R13076 += 1 };
  s1 -> s1 [0, 69] { R13182 += 1, R13138 += 1, R13073 += 1, R13074 += 1 };
  s1 -> s2 [0, 69] { R13182 += 1, R13138 += 1, R13074 += 1, R13076 += 1, R13077 += 1 };
  s1 -> s3 [0, 69] { R13182 += 1, R13138 += 1, R13074 += 1, R13075 += 1, R13076 += 1 };
  s1 -> s5 [70, 70] { R13182 += 1, R13138 += 1, R13074 += 1, R13076 += 1, R13077 += 1 };
  s1 -> s6 [70, 70] { R13182 += 1, R13138 += 1, R13074 += 1, R13075 += 1, R13076 += 1 };
  s1 -> s7 [70, 70] { R13182 += 1, R13138 += 1, R13074 += 1, R13076 += 1, R13077 += 1 };
  s1 -> s8 [70, 70] { R13182 += 1, R13138 += 1, R13073 += 1, R13074 += 1 };
  s1 -> s9 [70, 70] { R13182 += 1, R13138 += 1, R13073 += 1, R13074 += 1 };
  s1 -> s10 [70, 70] { R13182 += 1, R13138 += 1, R13074 += 1, R13075 += 1, R13076 += 1 };
  s1 -> s1 [71, 65535] { R13182 += 1, R13138 += 1, R13073 += 1, R13074 += 1 };
  s1 -> s2 [71, 65535] { R13182 += 1, R13138 += 1, R13074 += 1, R13076 += 1, R13077 += 1 };
  s1 -> s3 [71, 65535] { R13182 += 1, R13138 += 1, R13074 += 1, R13075 += 1, R13076 += 1 };
  s2 -> s15 [0, 69] { R13182 += 1, R13138 += 1 };
  s2 -> s17 [0, 69] { R13182 += 1, R13138 += 1, R13074 += 1 };
  s2 -> s2 [0, 69] { R13182 += 1, R13138 += 1, R13074 += 1, R13076 += 1, R13077 += 1 };
  s2 -> s5 [70, 70] { R13182 += 1, R13138 += 1, R13074 += 1, R13076 += 1, R13077 += 1 };
  s2 -> s14 [70, 70] { R13182 += 1, R13138 += 1, R13074 += 1 };
  s2 -> s16 [70, 70] { R13182 += 1, R13138 += 1 };
  s2 -> s11 [70, 70] { R13182 += 1, R13138 += 1 };
  s2 -> s7 [70, 70] { R13182 += 1, R13138 += 1, R13074 += 1, R13076 += 1, R13077 += 1 };
  s2 -> s18 [70, 70] { R13182 += 1, R13138 += 1, R13074 += 1 };
  s2 -> s15 [71, 65535] { R13182 += 1, R13138 += 1 };
  s2 -> s17 [71, 65535] { R13182 += 1, R13138 += 1, R13074 += 1 };
  s2 -> s2 [71, 65535] { R13182 += 1, R13138 += 1, R13074 += 1, R13076 += 1, R13077 += 1 };
  s3 -> s15 [0, 69] { R13182 += 1, R13138 += 1 };
  s3 -> s2 [0, 69] { R13182 += 1, R13138 += 1, R13074 += 1, R13076 += 1, R13077 += 1 };
  s3 -> s3 [0, 69] { R13182 += 1, R13138 += 1, R13074 += 1, R13075 += 1, R13076 += 1 };
  s3 -> s5 [70, 70] { R13182 += 1, R13138 += 1, R13074 += 1, R13076 += 1, R13077 += 1 };
  s3 -> s16 [70, 70] { R13182 += 1, R13138 += 1 };
  s3 -> s6 [70, 70] { R13182 += 1, R13138 += 1, R13074 += 1, R13075 += 1, R13076 += 1 };
  s3 -> s11 [70, 70] { R13182 += 1, R13138 += 1 };
  s3 -> s7 [70, 70] { R13182 += 1, R13138 += 1, R13074 += 1, R13076 += 1, R13077 += 1 };
  s3 -> s10 [70, 70] { R13182 += 1, R13138 += 1, R13074 += 1, R13075 += 1, R13076 += 1 };
  s3 -> s15 [71, 65535] { R13182 += 1, R13138 += 1 };
  s3 -> s2 [71, 65535] { R13182 += 1, R13138 += 1, R13074 += 1, R13076 += 1, R13077 += 1 };
  s3 -> s3 [71, 65535] { R13182 += 1, R13138 += 1, R13074 += 1, R13075 += 1, R13076 += 1 };
  s4 -> s1 [0, 69] { R13182 += 1, R13138 += 1, R13073 += 1, R13074 += 1 };
  s4 -> s2 [0, 69] { R13182 += 1, R13138 += 1, R13074 += 1, R13076 += 1, R13077 += 1 };
  s4 -> s3 [0, 69] { R13182 += 1, R13138 += 1, R13074 += 1, R13075 += 1, R13076 += 1 };
  s4 -> s4 [0, 65535] { R13182 += 1, R13137 += 1, R13138 += 1 };
  s4 -> s5 [70, 70] { R13182 += 1, R13138 += 1, R13074 += 1, R13076 += 1, R13077 += 1 };
  s4 -> s6 [70, 70] { R13182 += 1, R13138 += 1, R13074 += 1, R13075 += 1, R13076 += 1 };
  s4 -> s7 [70, 70] { R13182 += 1, R13138 += 1, R13074 += 1, R13076 += 1, R13077 += 1 };
  s4 -> s8 [70, 70] { R13182 += 1, R13138 += 1, R13073 += 1, R13074 += 1 };
  s4 -> s9 [70, 70] { R13182 += 1, R13138 += 1, R13073 += 1, R13074 += 1 };
  s4 -> s10 [70, 70] { R13182 += 1, R13138 += 1, R13074 += 1, R13075 += 1, R13076 += 1 };
  s4 -> s1 [71, 65535] { R13182 += 1, R13138 += 1, R13073 += 1, R13074 += 1 };
  s4 -> s2 [71, 65535] { R13182 += 1, R13138 += 1, R13074 += 1, R13076 += 1, R13077 += 1 };
  s4 -> s3 [71, 65535] { R13182 += 1, R13138 += 1, R13074 += 1, R13075 += 1, R13076 += 1 };
  s5 -> s5 [0, 65535] { R13182 += 1, R13138 += 1, R13074 += 1, R13076 += 1, R13077 += 1 };
  s5 -> s14 [0, 65535] { R13182 += 1, R13138 += 1, R13074 += 1 };
  s5 -> s11 [0, 65535] { R13182 += 1, R13138 += 1 };
  s8 -> s5 [0, 65535] { R13182 += 1, R13138 += 1, R13074 += 1, R13076 += 1, R13077 += 1 };
  s8 -> s8 [0, 65535] { R13182 += 1, R13138 += 1, R13073 += 1, R13074 += 1 };
  s8 -> s10 [0, 65535] { R13182 += 1, R13138 += 1, R13074 += 1, R13075 += 1, R13076 += 1 };
  s10 -> s5 [0, 65535] { R13182 += 1, R13138 += 1, R13074 += 1, R13076 += 1, R13077 += 1 };
  s10 -> s11 [0, 65535] { R13182 += 1, R13138 += 1 };
  s10 -> s10 [0, 65535] { R13182 += 1, R13138 += 1, R13074 += 1, R13075 += 1, R13076 += 1 };
  s11 -> s12 [0, 65535] { R13182 += 1 };
  s11 -> s11 [0, 65535] { R13182 += 1, R13138 += 1 };
  s11 -> s13 [0, 65535];
  s12 -> s12 [0, 65535] { R13182 += 1 };
  s12 -> s13 [0, 65535];
  s13 -> s13 [0, 65535];
  s14 -> s14 [0, 65535] { R13182 += 1, R13138 += 1, R13074 += 1 };
  s14 -> s11 [0, 65535] { R13182 += 1, R13138 += 1 };
  s15 -> s15 [0, 69] { R13182 += 1, R13138 += 1 };
  s15 -> s15 [0, 65535] { R13182 += 1 };
  s15 -> s13 [0, 65535];
  s15 -> s16 [70, 70] { R13182 += 1, R13138 += 1 };
  s15 -> s11 [70, 70] { R13182 += 1, R13138 += 1 };
  s15 -> s15 [71, 65535] { R13182 += 1, R13138 += 1 };
  s16 -> s16 [0, 65535] { R13182 += 1 };
  s16 -> s13 [0, 65535];
  s17 -> s15 [0, 69] { R13182 += 1, R13138 += 1 };
  s17 -> s17 [0, 69] { R13182 += 1, R13138 += 1, R13074 += 1 };
  s17 -> s14 [70, 70] { R13182 += 1, R13138 += 1, R13074 += 1 };
  s17 -> s16 [70, 70] { R13182 += 1, R13138 += 1 };
  s17 -> s11 [70, 70] { R13182 += 1, R13138 += 1 };
  s17 -> s18 [70, 70] { R13182 += 1, R13138 += 1, R13074 += 1 };
  s17 -> s15 [71, 65535] { R13182 += 1, R13138 += 1 };
  s17 -> s17 [71, 65535] { R13182 += 1, R13138 += 1, R13074 += 1 };
  accepting s16, s12, s13, s15, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R13100 && R3 = R13182 && R23 - R13182 = -1 && R24 = R13182 && R25 - R13182 = -1 && R26 = R13182 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R12960 + -1*R12956 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R12960 + -1*R12956 - R66 = 0 && R55 + R96 + R93 + -1*R12962 + -1*R12958 - R68 = 0 && R65 + R12959 + R12955 = 0 && R67 + R12961 + R12957 = 0 && R13099 = 0 && R13123 = 0 && R13124 = 0 && R13129 = 0 && R13130 = 0 && R13133 = 0 && R13134 = 0 && R13135 = 0 && R13136 = 0 && R13137 = 0 && R13138 = 0 && R13139 = 0 && R13140 = R13182 && R13141 = 0 && R13142 = R13182 && R13143 = 0 && R13144 = R13182 && R13145 = 0 && R13146 = R13182 && R13147 = 0 && R13148 = R13182 && R13149 = 0 && R13150 = R13182 && R13151 = 0 && R13152 = R13182 && R13153 = 0 && R13154 = R13182 && R13155 = 0 && R13156 = R13182 && R13157 = 0 && R13158 = R13182 && R13159 = 0 && R13160 = R13182 && R13161 = 0 && R13162 = R13182 && R13163 = 0 && R13164 = R13182 && R13165 = 0 && R13166 = R13182 && R13167 = 0 && R13168 = R13182 && R13169 = 0 && R13170 = R13182 && R13171 = 0 && R13172 = R13182 && R13173 = 0 && R13174 = R13182 && R13175 = 0 && R13176 = R13182 && R13177 = 0 && R13178 = R13182 && R13179 = 0 && R13180 = R13182 && R13181 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R10164 + R10161 < 1 && -1*R12960 + -1*R12956 - R66 < 1 && -1*R12962 + -1*R12958 - R68 < 1 && -1 < R13100 && 0 < R13182 && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R12960 + -1*R12956 - R66 = 0 || R66 + R12960 + R12956 < 1) && (R59 + R10162 + R10159 != 0 || R60 + R10163 + R10160 + -1*R12960 + -1*R12956 - R66 = 0 || R66 + R12960 + R12956 < 1) && (R66 + R12960 + R12956 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R12962 + R12958 < 1) && (R53 + R94 + R91 = 0 || R68 + R12962 + R12958 < 1))) && (R66 + R12960 + R12956 != 0 || ((R59 + R10162 + R10159 != 0 || R60 + R10163 + R10160 = 0 || R68 + R12962 + R12958 < 1) && (R59 + R10162 + R10159 = 0 || R68 + R12962 + R12958 < 1))) && (R66 + R12960 + R12956 != 0 || ((R73 + R13078 + R13073 != 0 || R74 + R13079 + R13074 = 0 || R68 + R12962 + R12958 < 1) && (R73 + R13078 + R13073 = 0 || R68 + R12962 + R12958 < 1))) && (R68 + R12962 + R12958 != 0 || R77 + R13082 + R13077 = 0 || (R75 + R13080 + R13075 = 0 && R76 + R13081 + R13076 = 0)) && (R73 + R13078 + R13073 != 0 || R66 + R12960 + R12956 + -1*R13079 + -1*R13074 - R74 = 0 || R66 + R12960 + R12956 < 1) && (R75 + R13080 + R13075 != 0 || R68 + R12962 + R12958 + -1*R13081 + -1*R13076 - R76 = 0 || R68 + R12962 + R12958 < 1) && (R13083 != 0 || R13084 = R13100 || (R20 = 0 && R13100 = 0)) && (R13085 != 0 || R13086 = R13100 || (R20 = 0 && R13100 = 0)) && (R13087 != 0 || R13088 = R13100 || (R20 = 0 && R13100 = 0)) && (R13089 != 0 || R13090 = R13100 || (R20 = 0 && R13100 = 0)) && (R13091 != 0 || R13092 = R13100 || (R20 = 0 && R13100 = 0)) && (R13093 != 0 || R13094 = R13100 || (R20 = 0 && R13100 = 0)) && (R13095 != 0 || R13096 = R13100 || (R20 = 0 && R13100 = 0)) && (R13097 != 0 || R13098 = R13100 || (R20 = 0 && R13100 = 0)) && (R13101 != 0 || R13100 = R13102 || (R20 = 0 && R13100 = 0)) && (R21 = 0 || (R13121 = 0 && R13122 = 0)) && (R21 = 0 || (R13125 = 0 && R13126 = 0)) && (R21 = 0 || (R13127 = 0 && R13128 = 0)) && (R21 = 0 || (R13131 = 0 && R13132 = 0)) && (R22 = 0 || (R13103 = 0 && R13104 = 0)) && (R22 = 0 || (R13105 = 0 && R13106 = 0)) && (R22 = 0 || (R13107 = 0 && R13108 = 0)) && (R22 = 0 || (R13109 = 0 && R13110 = 0)) && (R22 = 0 || (R13111 = 0 && R13112 = 0)) && (R22 = 0 || (R13113 = 0 && R13114 = 0)) && (R22 = 0 || (R13115 = 0 && R13116 = 0)) && (R22 = 0 || (R13117 = 0 && R13118 = 0)) && (R22 = 0 || (R13119 = 0 && R13120 = 0)) && (R53 + R94 + R91 = 0 || R66 + R12960 + R12956 < 1) && (R59 + R10162 + R10159 = 0 || R66 + R12960 + R12956 < 1) && (R73 + R13078 + R13073 = 0 || R66 + R12960 + R12956 < 1) && (R75 + R13080 + R13075 = 0 || R68 + R12962 + R12958 < 1) && (R13083 = 0 || (R20 = 0 && R13100 = 0)) && (R13085 = 0 || (R20 = 0 && R13100 = 0)) && (R13087 = 0 || (R20 = 0 && R13100 = 0)) && (R13089 = 0 || (R20 = 0 && R13100 = 0)) && (R13091 = 0 || (R20 = 0 && R13100 = 0)) && (R13093 = 0 || (R20 = 0 && R13100 = 0)) && (R13095 = 0 || (R20 = 0 && R13100 = 0)) && (R13097 = 0 || (R20 = 0 && R13100 = 0)) && (R13101 = 0 || (R20 = 0 && R13100 = 0));
// End of Parikh automata intersection problem
