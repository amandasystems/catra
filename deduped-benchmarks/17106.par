// Parikh automata intersection problem, generated by OSTRICH+
counter int R12, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R4, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R6805, R6806, R6807, R6808, R6809, R6810, R6811, R6812, R6813, R6814, R6815, R6816, R6817, R6818, R6819, R6820, R6821, R6822, R6823, R6824, R6825, R6826, R6827, R6828, R6829, R6830, R6831, R6832, R6833, R6834, R6835, R6836, R6837, R6838, R6839, R6840, R6841, R6842, R6843, R6844, R6845, R6846, R6847, R6848, R6849, R6850, R6851, R6852, R6853, R6854, R6855, R6856, R6857, R6858, R6859, R6860, R6861, R6862, R6863, R6864, R6865, R6866, R6867, R6868, R6869, R6870, R6871, R6872, R6873, R6874, R6875, R6876, R6877, R6878, R6879, R6880, R6881, R6882, R6883, R6884, R6885, R6886, R6887, R6888, R6889, R6890, R6891, R6892, R6893, R6894, R6895, R6896, R6897, R6898, R6899, R6900, R6901, R6902, R6903, R6904, R6905, R6906, R6907, R6908, R6909, R6910, R6911, R6912, R6913, R6914, R6915, R6916, R6917, R6918, R6919, R6920, R6921, R6922, R6923, R6924, R6925, R6926, R6927, R6928, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R6850 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R6849 += 1, R6850 += 1 };
  s1 -> s1 [0, 65535] { R6850 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R6852 += 1 };
  s0 -> s0 [0, 65535] { R6851 += 1, R6852 += 1 };
  s0 -> s2 [70, 70] { R6852 += 1 };
  s0 -> s3 [70, 70] { R6852 += 1 };
  s0 -> s1 [76, 65535] { R6852 += 1 };
  s1 -> s1 [0, 69] { R6852 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6852 += 1 };
  s1 -> s3 [70, 70] { R6852 += 1 };
  s1 -> s1 [76, 65535] { R6852 += 1 };
  s2 -> s2 [0, 70] { R6852 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R6852 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R6854 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R6853 += 1, R6854 += 1 };
  s0 -> s2 [70, 70] { R6854 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R6854 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R6854 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R6854 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6854 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R6854 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R6854 += 1, R45 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R6854 += 1, R45 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R6856 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R6855 += 1, R6856 += 1 };
  s0 -> s2 [70, 70] { R6856 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R6856 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R6856 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R6856 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6856 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R6856 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R6856 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R6856 += 1, R47 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R6858 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R6857 += 1, R6858 += 1 };
  s0 -> s2 [70, 70] { R6858 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R6858 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R6858 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R6858 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6858 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R6858 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R6858 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535] { R6858 += 1, R49 += 1, R50 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R6860 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R6859 += 1, R6860 += 1 };
  s0 -> s2 [70, 70] { R6860 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R6860 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R6860 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R6860 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6860 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R6860 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R6860 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535] { R6860 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R6862 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R6861 += 1, R6862 += 1 };
  s0 -> s2 [70, 70] { R6862 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R6862 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R6862 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R6862 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6862 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R6862 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R6862 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R6862 += 1, R59 += 1, R60 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R6864 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R6863 += 1, R6864 += 1 };
  s0 -> s2 [70, 70] { R6864 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R6864 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R6864 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R6864 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6864 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R6864 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R6864 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R6864 += 1, R65 += 1, R66 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R6866 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R6865 += 1, R6866 += 1 };
  s0 -> s2 [70, 70] { R6866 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R6866 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R6866 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R6866 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6866 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R6866 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R6866 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R6866 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R6886 += 1 };
  s0 -> s0 [0, 65535] { R6885 += 1, R6886 += 1 };
  s0 -> s2 [70, 70] { R6886 += 1 };
  s0 -> s1 [71, 65535] { R6886 += 1 };
  s1 -> s1 [0, 69] { R6886 += 1 };
  s1 -> s2 [70, 70] { R6886 += 1 };
  s1 -> s1 [71, 65535] { R6886 += 1 };
  s2 -> s2 [0, 65535] { R6886 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R6887 += 1, R6888 += 1 };
  s0 -> s1 [0, 65535] { R6888 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R6888 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R6890 += 1 };
  s0 -> s0 [0, 65535] { R6889 += 1, R6890 += 1 };
  s0 -> s2 [0, 65535] { R6890 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R6890 += 1 };
  s0 -> s1 [71, 65535] { R6890 += 1 };
  s1 -> s1 [0, 69] { R6890 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R6890 += 1 };
  s1 -> s1 [71, 65535] { R6890 += 1 };
  s2 -> s1 [0, 69] { R6890 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R6890 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R6890 += 1 };
  s2 -> s1 [71, 65535] { R6890 += 1 };
  s3 -> s3 [0, 65535] { R6890 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R6892 += 1, R6830 += 1 };
  s0 -> s0 [0, 65535] { R6891 += 1, R6892 += 1 };
  s0 -> s2 [0, 65535] { R6892 += 1, R6829 += 1, R6830 += 1 };
  s0 -> s1 [71, 65535] { R6892 += 1, R6830 += 1 };
  s1 -> s1 [0, 69] { R6892 += 1, R6830 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R6892 += 1 };
  s1 -> s1 [71, 65535] { R6892 += 1, R6830 += 1 };
  s2 -> s1 [0, 69] { R6892 += 1, R6830 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R6892 += 1, R6829 += 1, R6830 += 1 };
  s2 -> s1 [71, 65535] { R6892 += 1, R6830 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s0 [0, 65535] { R6893 += 1, R6894 += 1 };
  s0 -> s1 [0, 65535] { R6894 += 1, R6831 += 1, R6832 += 1 };
  s0 -> s2 [0, 65535] { R6894 += 1, R6832 += 1, R20 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R6894 += 1, R6831 += 1, R6832 += 1 };
  s1 -> s2 [0, 65535] { R6894 += 1, R6832 += 1, R20 += 1 };
  s2 -> s3 [0, 65535] { R6894 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R6894 += 1, R6832 += 1, R20 += 1 };
  s3 -> s3 [0, 65535] { R6894 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R6896 += 1, R6834 += 1 };
  s0 -> s2 [0, 65535] { R6896 += 1, R6833 += 1, R6834 += 1 };
  s0 -> s0 [0, 65535] { R6895 += 1, R6896 += 1 };
  s0 -> s1 [75, 65535] { R6896 += 1, R6834 += 1 };
  s1 -> s1 [0, 70] { R6896 += 1, R6834 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R6896 += 1 };
  s1 -> s1 [75, 65535] { R6896 += 1, R6834 += 1 };
  s2 -> s1 [0, 70] { R6896 += 1, R6834 += 1 };
  s2 -> s2 [0, 65535] { R6896 += 1, R6833 += 1, R6834 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R6896 += 1, R6834 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R6898 += 1, R6836 += 1, R84 += 1 };
  s0 -> s0 [0, 65535] { R6897 += 1, R6898 += 1 };
  s0 -> s2 [0, 65535] { R6898 += 1, R6835 += 1, R6836 += 1 };
  s1 -> s1 [0, 65535] { R6898 += 1, R6836 += 1, R84 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R6898 += 1 };
  s2 -> s1 [0, 65535] { R6898 += 1, R6836 += 1, R84 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R6898 += 1, R6835 += 1, R6836 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R6898 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R6900 += 1, R6838 += 1 };
  s0 -> s0 [0, 65535] { R6899 += 1, R6900 += 1 };
  s0 -> s2 [0, 65535] { R6900 += 1, R6838 += 1, R86 += 1 };
  s0 -> s3 [0, 65535] { R6900 += 1, R6837 += 1, R6838 += 1 };
  s0 -> s1 [76, 65535] { R6900 += 1, R6838 += 1 };
  s1 -> s1 [0, 74] { R6900 += 1, R6838 += 1 };
  s1 -> s1 [0, 65535] { R6900 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [76, 65535] { R6900 += 1, R6838 += 1 };
  s2 -> s1 [0, 74] { R6900 += 1, R6838 += 1 };
  s2 -> s5 [0, 65535] { R6900 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R6900 += 1, R6838 += 1, R86 += 1 };
  s2 -> s1 [76, 65535] { R6900 += 1, R6838 += 1 };
  s3 -> s1 [0, 74] { R6900 += 1, R6838 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R6900 += 1, R6838 += 1, R86 += 1 };
  s3 -> s3 [0, 65535] { R6900 += 1, R6837 += 1, R6838 += 1 };
  s3 -> s1 [76, 65535] { R6900 += 1, R6838 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R6900 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s0 [0, 65535] { R6901 += 1, R6902 += 1 };
  s0 -> s1 [0, 65535] { R6902 += 1, R6840 += 1 };
  s0 -> s2 [0, 65535] { R6902 += 1, R6839 += 1, R6840 += 1 };
  s0 -> s3 [0, 65535] { R6902 += 1, R6840 += 1, R90 += 1 };
  s1 -> s4 [0, 65535] { R6902 += 1 };
  s1 -> s1 [0, 65535] { R6902 += 1, R6840 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R6902 += 1, R6840 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R6902 += 1, R6839 += 1, R6840 += 1 };
  s2 -> s3 [0, 65535] { R6902 += 1, R6840 += 1, R90 += 1 };
  s3 -> s4 [0, 65535] { R6902 += 1 };
  s3 -> s1 [0, 65535] { R6902 += 1, R6840 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R6902 += 1, R6840 += 1, R90 += 1 };
  s4 -> s4 [0, 65535] { R6902 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R6903 += 1, R6904 += 1 };
  s0 -> s1 [0, 65535] { R6904 += 1, R6842 += 1, R94 += 1, R95 += 1 };
  s0 -> s2 [0, 65535] { R6904 += 1, R6841 += 1, R6842 += 1 };
  s0 -> s3 [0, 65535] { R6904 += 1, R6842 += 1, R95 += 1, R96 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R6904 += 1 };
  s1 -> s1 [0, 65535] { R6904 += 1, R6842 += 1, R94 += 1, R95 += 1 };
  s1 -> s3 [0, 65535] { R6904 += 1, R6842 += 1, R95 += 1, R96 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R6904 += 1, R6842 += 1, R94 += 1, R95 += 1 };
  s2 -> s2 [0, 65535] { R6904 += 1, R6841 += 1, R6842 += 1 };
  s2 -> s3 [0, 65535] { R6904 += 1, R6842 += 1, R95 += 1, R96 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R6904 += 1 };
  s3 -> s3 [0, 65535] { R6904 += 1, R6842 += 1, R95 += 1, R96 += 1 };
  s3 -> s6 [0, 65535] { R6904 += 1, R6842 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R6904 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R6904 += 1 };
  s6 -> s6 [0, 65535] { R6904 += 1, R6842 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R6906 += 1, R6844 += 1, R6809 += 1 };
  s0 -> s0 [0, 65535] { R6905 += 1, R6906 += 1 };
  s0 -> s2 [0, 65535] { R6906 += 1, R6844 += 1, R6809 += 1, R6810 += 1 };
  s0 -> s3 [0, 65535] { R6906 += 1, R6844 += 1 };
  s0 -> s4 [0, 65535] { R6906 += 1, R6843 += 1, R6844 += 1 };
  s0 -> s1 [76, 65535] { R6906 += 1, R6844 += 1, R6809 += 1 };
  s1 -> s1 [0, 74] { R6906 += 1, R6844 += 1, R6809 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R6906 += 1, R6844 += 1 };
  s1 -> s6 [0, 65535] { R6906 += 1 };
  s1 -> s1 [76, 65535] { R6906 += 1, R6844 += 1, R6809 += 1 };
  s2 -> s1 [0, 74] { R6906 += 1, R6844 += 1, R6809 += 1 };
  s2 -> s2 [0, 65535] { R6906 += 1, R6844 += 1, R6809 += 1, R6810 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R6906 += 1, R6844 += 1 };
  s2 -> s6 [0, 65535] { R6906 += 1 };
  s2 -> s1 [76, 65535] { R6906 += 1, R6844 += 1, R6809 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R6906 += 1, R6844 += 1 };
  s3 -> s6 [0, 65535] { R6906 += 1 };
  s4 -> s1 [0, 74] { R6906 += 1, R6844 += 1, R6809 += 1 };
  s4 -> s2 [0, 65535] { R6906 += 1, R6844 += 1, R6809 += 1, R6810 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R6906 += 1, R6844 += 1 };
  s4 -> s4 [0, 65535] { R6906 += 1, R6843 += 1, R6844 += 1 };
  s4 -> s1 [76, 65535] { R6906 += 1, R6844 += 1, R6809 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6906 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s0 [0, 65535] { R6907 += 1, R6908 += 1 };
  s0 -> s1 [0, 65535] { R6908 += 1, R6846 += 1, R6816 += 1 };
  s0 -> s2 [0, 65535] { R6908 += 1, R6846 += 1, R6816 += 1, R6818 += 1 };
  s0 -> s3 [0, 65535] { R6908 += 1, R6845 += 1, R6846 += 1 };
  s0 -> s4 [0, 65535] { R6908 += 1, R6846 += 1 };
  s1 -> s1 [0, 65535] { R6908 += 1, R6846 += 1, R6816 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R6908 += 1 };
  s1 -> s4 [0, 65535] { R6908 += 1, R6846 += 1 };
  s2 -> s1 [0, 65535] { R6908 += 1, R6846 += 1, R6816 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R6908 += 1, R6846 += 1, R6816 += 1, R6818 += 1 };
  s2 -> s6 [0, 65535] { R6908 += 1 };
  s2 -> s4 [0, 65535] { R6908 += 1, R6846 += 1 };
  s3 -> s1 [0, 65535] { R6908 += 1, R6846 += 1, R6816 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R6908 += 1, R6846 += 1, R6816 += 1, R6818 += 1 };
  s3 -> s3 [0, 65535] { R6908 += 1, R6845 += 1, R6846 += 1 };
  s3 -> s4 [0, 65535] { R6908 += 1, R6846 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R6908 += 1 };
  s4 -> s4 [0, 65535] { R6908 += 1, R6846 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6908 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R6910 += 1, R6847 += 1, R6848 += 1 };
  s0 -> s2 [0, 65535] { R6910 += 1, R6848 += 1 };
  s0 -> s3 [0, 65535] { R6910 += 1, R6848 += 1, R6825 += 1 };
  s0 -> s0 [0, 65535] { R6909 += 1, R6910 += 1 };
  s1 -> s1 [0, 65535] { R6910 += 1, R6847 += 1, R6848 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R6910 += 1, R6848 += 1 };
  s1 -> s3 [0, 65535] { R6910 += 1, R6848 += 1, R6825 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R6910 += 1, R6848 += 1 };
  s2 -> s5 [0, 65535] { R6910 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R6910 += 1, R6848 += 1 };
  s3 -> s5 [0, 65535] { R6910 += 1 };
  s3 -> s3 [0, 65535] { R6910 += 1, R6848 += 1, R6825 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R6910 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R6912 += 1, R6868 += 1, R21 += 1 };
  s0 -> s2 [0, 65535] { R6912 += 1, R6867 += 1, R6868 += 1 };
  s0 -> s0 [0, 65535] { R6911 += 1, R6912 += 1 };
  s1 -> s1 [0, 65535] { R6912 += 1, R6868 += 1, R21 += 1 };
  s1 -> s4 [0, 65535] { R6912 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R6912 += 1, R6868 += 1, R21 += 1 };
  s2 -> s2 [0, 65535] { R6912 += 1, R6867 += 1, R6868 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R6912 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R6914 += 1, R6870 += 1 };
  s0 -> s0 [0, 65535] { R6913 += 1, R6914 += 1 };
  s0 -> s2 [0, 65535] { R6914 += 1, R6869 += 1, R6870 += 1 };
  s0 -> s3 [70, 70] { R6914 += 1, R6870 += 1 };
  s0 -> s4 [70, 70] { R6914 += 1, R6870 += 1 };
  s0 -> s5 [75, 75] { R6914 += 1, R6870 += 1 };
  s0 -> s1 [76, 65535] { R6914 += 1, R6870 += 1 };
  s1 -> s1 [0, 69] { R6914 += 1, R6870 += 1 };
  s1 -> s3 [70, 70] { R6914 += 1, R6870 += 1 };
  s1 -> s4 [70, 70] { R6914 += 1, R6870 += 1 };
  s1 -> s5 [75, 75] { R6914 += 1, R6870 += 1 };
  s1 -> s1 [76, 65535] { R6914 += 1, R6870 += 1 };
  s2 -> s1 [0, 69] { R6914 += 1, R6870 += 1 };
  s2 -> s2 [0, 65535] { R6914 += 1, R6869 += 1, R6870 += 1 };
  s2 -> s3 [70, 70] { R6914 += 1, R6870 += 1 };
  s2 -> s4 [70, 70] { R6914 += 1, R6870 += 1 };
  s2 -> s5 [75, 75] { R6914 += 1, R6870 += 1 };
  s2 -> s1 [76, 65535] { R6914 += 1, R6870 += 1 };
  s3 -> s3 [0, 70] { R6914 += 1, R6870 += 1 };
  s3 -> s8 [75, 75] { R6914 += 1, R6870 += 1 };
  s3 -> s3 [76, 65535] { R6914 += 1, R6870 += 1 };
  s5 -> s5 [0, 69] { R6914 += 1, R6870 += 1 };
  s5 -> s5 [0, 65535] { R6914 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R6914 += 1, R6870 += 1 };
  s5 -> s8 [70, 70] { R6914 += 1, R6870 += 1 };
  s5 -> s5 [75, 65535] { R6914 += 1, R6870 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R6914 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 70] { R6914 += 1, R6870 += 1 };
  s8 -> s8 [0, 65535] { R6914 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [75, 65535] { R6914 += 1, R6870 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R6916 += 1, R6872 += 1, R83 += 1 };
  s0 -> s0 [0, 65535] { R6915 += 1, R6916 += 1 };
  s0 -> s2 [0, 65535] { R6916 += 1, R6871 += 1, R6872 += 1 };
  s0 -> s3 [70, 70] { R6916 += 1, R6872 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R6916 += 1, R6872 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R6916 += 1, R6872 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R6916 += 1, R6872 += 1, R83 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R6916 += 1 };
  s1 -> s3 [70, 70] { R6916 += 1, R6872 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R6916 += 1, R6872 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R6916 += 1, R6872 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R6916 += 1, R6872 += 1, R83 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R6916 += 1, R6871 += 1, R6872 += 1 };
  s2 -> s3 [70, 70] { R6916 += 1, R6872 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R6916 += 1, R6872 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R6916 += 1, R6872 += 1, R83 += 1 };
  s3 -> s3 [0, 65535] { R6916 += 1, R6872 += 1, R83 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R6916 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R6916 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6916 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R6918 += 1, R6874 += 1, R85 += 1 };
  s0 -> s0 [0, 65535] { R6917 += 1, R6918 += 1 };
  s0 -> s2 [0, 65535] { R6918 += 1, R6873 += 1, R6874 += 1 };
  s0 -> s3 [70, 70] { R6918 += 1, R6874 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R6918 += 1, R6874 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R6918 += 1, R6874 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R6918 += 1, R6874 += 1, R85 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R6918 += 1 };
  s1 -> s3 [70, 70] { R6918 += 1, R6874 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R6918 += 1, R6874 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R6918 += 1, R6874 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R6918 += 1, R6874 += 1, R85 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R6918 += 1, R6873 += 1, R6874 += 1 };
  s2 -> s3 [70, 70] { R6918 += 1, R6874 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R6918 += 1, R6874 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R6918 += 1, R6874 += 1, R85 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R6918 += 1 };
  s3 -> s3 [0, 65535] { R6918 += 1, R6874 += 1, R85 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R6918 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6918 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R6920 += 1, R6876 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R6920 += 1, R6876 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R6919 += 1, R6920 += 1 };
  s0 -> s3 [0, 65535] { R6920 += 1, R6875 += 1, R6876 += 1 };
  s0 -> s4 [70, 70] { R6920 += 1, R6876 += 1, R87 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R6920 += 1, R6876 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R6920 += 1, R6876 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R6920 += 1, R6876 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 74] { R6920 += 1, R6876 += 1, R88 += 1 };
  s0 -> s2 [71, 65535] { R6920 += 1, R6876 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R6920 += 1, R6876 += 1, R88 += 1 };
  s0 -> s1 [76, 65535] { R6920 += 1, R6876 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R6920 += 1, R6876 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R6920 += 1, R6876 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R6920 += 1, R6876 += 1, R88 += 1 };
  s1 -> s1 [71, 74] { R6920 += 1, R6876 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R6920 += 1, R6876 += 1, R88 += 1 };
  s1 -> s1 [76, 65535] { R6920 += 1, R6876 += 1, R88 += 1 };
  s2 -> s1 [0, 69] { R6920 += 1, R6876 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R6920 += 1, R6876 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R6920 += 1, R6876 += 1, R87 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R6920 += 1, R6876 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R6920 += 1, R6876 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R6920 += 1, R6876 += 1, R87 += 1, R88 += 1 };
  s2 -> s1 [71, 74] { R6920 += 1, R6876 += 1, R88 += 1 };
  s2 -> s2 [71, 65535] { R6920 += 1, R6876 += 1, R87 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R6920 += 1, R6876 += 1, R88 += 1 };
  s2 -> s1 [76, 65535] { R6920 += 1, R6876 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R6920 += 1, R6876 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R6920 += 1, R6876 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R6920 += 1, R6875 += 1, R6876 += 1 };
  s3 -> s4 [70, 70] { R6920 += 1, R6876 += 1, R87 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R6920 += 1, R6876 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R6920 += 1, R6876 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R6920 += 1, R6876 += 1, R87 += 1, R88 += 1 };
  s3 -> s1 [71, 74] { R6920 += 1, R6876 += 1, R88 += 1 };
  s3 -> s2 [71, 65535] { R6920 += 1, R6876 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R6920 += 1, R6876 += 1, R88 += 1 };
  s3 -> s1 [76, 65535] { R6920 += 1, R6876 += 1, R88 += 1 };
  s4 -> s5 [0, 74] { R6920 += 1, R6876 += 1, R88 += 1 };
  s4 -> s4 [0, 65535] { R6920 += 1, R6876 += 1, R87 += 1, R88 += 1 };
  s4 -> s10 [75, 75] { R6920 += 1, R6876 += 1, R88 += 1 };
  s4 -> s5 [76, 65535] { R6920 += 1, R6876 += 1, R88 += 1 };
  s5 -> s5 [0, 74] { R6920 += 1, R6876 += 1, R88 += 1 };
  s5 -> s10 [75, 75] { R6920 += 1, R6876 += 1, R88 += 1 };
  s5 -> s5 [76, 65535] { R6920 += 1, R6876 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R6920 += 1, R6876 += 1, R88 += 1 };
  s8 -> s8 [0, 65535] { R6920 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R6920 += 1, R6876 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R6920 += 1, R6876 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R6920 += 1, R6876 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R6920 += 1, R6876 += 1, R88 += 1 };
  s10 -> s12 [0, 65535] { R6920 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R6920 += 1 };
  s12 -> s12 [0, 65535] { R6920 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R6922 += 1, R6878 += 1, R91 += 1, R92 += 1 };
  s0 -> s2 [0, 65535] { R6922 += 1, R6877 += 1, R6878 += 1 };
  s0 -> s0 [0, 65535] { R6921 += 1, R6922 += 1 };
  s0 -> s3 [70, 70] { R6922 += 1, R6878 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R6922 += 1, R6878 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R6922 += 1, R6878 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R6922 += 1, R6878 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 65535] { R6922 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R6922 += 1, R6878 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R6922 += 1, R6878 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R6922 += 1, R6878 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R6922 += 1, R6878 += 1, R91 += 1, R92 += 1 };
  s2 -> s2 [0, 65535] { R6922 += 1, R6877 += 1, R6878 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R6922 += 1, R6878 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R6922 += 1, R6878 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R6922 += 1, R6878 += 1, R91 += 1, R92 += 1 };
  s3 -> s3 [0, 65535] { R6922 += 1, R6878 += 1, R91 += 1, R92 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R6922 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R6922 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6922 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R6924 += 1, R6880 += 1, R6805 += 1, R6806 += 1 };
  s0 -> s2 [0, 69] { R6924 += 1, R6880 += 1, R6806 += 1, R6807 += 1 };
  s0 -> s3 [0, 65535] { R6924 += 1, R6879 += 1, R6880 += 1 };
  s0 -> s0 [0, 65535] { R6923 += 1, R6924 += 1 };
  s0 -> s4 [70, 70] { R6924 += 1, R6880 += 1, R6806 += 1, R6807 += 1 };
  s0 -> s5 [70, 70] { R6924 += 1, R6880 += 1, R6805 += 1, R6806 += 1 };
  s0 -> s6 [70, 70] { R6924 += 1, R6880 += 1, R6806 += 1, R6807 += 1 };
  s0 -> s7 [70, 70] { R6924 += 1, R6880 += 1, R6805 += 1, R6806 += 1 };
  s0 -> s1 [71, 65535] { R6924 += 1, R6880 += 1, R6805 += 1, R6806 += 1 };
  s0 -> s2 [71, 65535] { R6924 += 1, R6880 += 1, R6806 += 1, R6807 += 1 };
  s1 -> s1 [0, 69] { R6924 += 1, R6880 += 1, R6805 += 1, R6806 += 1 };
  s1 -> s2 [0, 69] { R6924 += 1, R6880 += 1, R6806 += 1, R6807 += 1 };
  s1 -> s4 [70, 70] { R6924 += 1, R6880 += 1, R6806 += 1, R6807 += 1 };
  s1 -> s5 [70, 70] { R6924 += 1, R6880 += 1, R6805 += 1, R6806 += 1 };
  s1 -> s6 [70, 70] { R6924 += 1, R6880 += 1, R6806 += 1, R6807 += 1 };
  s1 -> s7 [70, 70] { R6924 += 1, R6880 += 1, R6805 += 1, R6806 += 1 };
  s1 -> s1 [71, 65535] { R6924 += 1, R6880 += 1, R6805 += 1, R6806 += 1 };
  s1 -> s2 [71, 65535] { R6924 += 1, R6880 += 1, R6806 += 1, R6807 += 1 };
  s2 -> s2 [0, 69] { R6924 += 1, R6880 += 1, R6806 += 1, R6807 += 1 };
  s2 -> s2 [0, 65535] { R6924 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [70, 70] { R6924 += 1, R6880 += 1, R6806 += 1, R6807 += 1 };
  s2 -> s6 [70, 70] { R6924 += 1, R6880 += 1, R6806 += 1, R6807 += 1 };
  s2 -> s2 [71, 65535] { R6924 += 1, R6880 += 1, R6806 += 1, R6807 += 1 };
  s3 -> s1 [0, 69] { R6924 += 1, R6880 += 1, R6805 += 1, R6806 += 1 };
  s3 -> s2 [0, 69] { R6924 += 1, R6880 += 1, R6806 += 1, R6807 += 1 };
  s3 -> s3 [0, 65535] { R6924 += 1, R6879 += 1, R6880 += 1 };
  s3 -> s4 [70, 70] { R6924 += 1, R6880 += 1, R6806 += 1, R6807 += 1 };
  s3 -> s5 [70, 70] { R6924 += 1, R6880 += 1, R6805 += 1, R6806 += 1 };
  s3 -> s6 [70, 70] { R6924 += 1, R6880 += 1, R6806 += 1, R6807 += 1 };
  s3 -> s7 [70, 70] { R6924 += 1, R6880 += 1, R6805 += 1, R6806 += 1 };
  s3 -> s1 [71, 65535] { R6924 += 1, R6880 += 1, R6805 += 1, R6806 += 1 };
  s3 -> s2 [71, 65535] { R6924 += 1, R6880 += 1, R6806 += 1, R6807 += 1 };
  s4 -> s4 [0, 65535] { R6924 += 1, R6880 += 1, R6806 += 1, R6807 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s9 [0, 65535] { R6924 += 1 };
  s5 -> s4 [0, 65535] { R6924 += 1, R6880 += 1, R6806 += 1, R6807 += 1 };
  s5 -> s5 [0, 65535] { R6924 += 1, R6880 += 1, R6805 += 1, R6806 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R6924 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R6924 += 1 };
  accepting s4, s8, s2, s9, s6;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s0 -> s2 [0, 69] { R6926 += 1, R6882 += 1, R6812 += 1, R6813 += 1, R6814 += 1 };
  s0 -> s3 [0, 69] { R6926 += 1, R6882 += 1, R6811 += 1, R6812 += 1 };
  s0 -> s4 [0, 65535] { R6926 += 1, R6881 += 1, R6882 += 1 };
  s0 -> s0 [0, 65535] { R6925 += 1, R6926 += 1 };
  s0 -> s5 [70, 70] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s0 -> s6 [70, 70] { R6926 += 1, R6882 += 1, R6811 += 1, R6812 += 1 };
  s0 -> s7 [70, 70] { R6926 += 1, R6882 += 1, R6811 += 1, R6812 += 1 };
  s0 -> s8 [70, 70] { R6926 += 1, R6882 += 1, R6812 += 1, R6813 += 1, R6814 += 1 };
  s0 -> s9 [70, 70] { R6926 += 1, R6882 += 1, R6812 += 1, R6813 += 1, R6814 += 1 };
  s0 -> s10 [70, 70] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s0 -> s1 [71, 74] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s0 -> s2 [71, 65535] { R6926 += 1, R6882 += 1, R6812 += 1, R6813 += 1, R6814 += 1 };
  s0 -> s3 [71, 65535] { R6926 += 1, R6882 += 1, R6811 += 1, R6812 += 1 };
  s0 -> s11 [75, 75] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s0 -> s1 [76, 65535] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s1 -> s1 [0, 69] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s1 -> s5 [70, 70] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s1 -> s10 [70, 70] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s1 -> s1 [71, 74] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s1 -> s11 [75, 75] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s1 -> s1 [76, 65535] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s2 -> s1 [0, 69] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s2 -> s2 [0, 69] { R6926 += 1, R6882 += 1, R6812 += 1, R6813 += 1, R6814 += 1 };
  s2 -> s5 [70, 70] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s2 -> s8 [70, 70] { R6926 += 1, R6882 += 1, R6812 += 1, R6813 += 1, R6814 += 1 };
  s2 -> s9 [70, 70] { R6926 += 1, R6882 += 1, R6812 += 1, R6813 += 1, R6814 += 1 };
  s2 -> s10 [70, 70] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s2 -> s1 [71, 74] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s2 -> s2 [71, 65535] { R6926 += 1, R6882 += 1, R6812 += 1, R6813 += 1, R6814 += 1 };
  s2 -> s11 [75, 75] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s2 -> s1 [76, 65535] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s3 -> s1 [0, 69] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s3 -> s2 [0, 69] { R6926 += 1, R6882 += 1, R6812 += 1, R6813 += 1, R6814 += 1 };
  s3 -> s3 [0, 69] { R6926 += 1, R6882 += 1, R6811 += 1, R6812 += 1 };
  s3 -> s5 [70, 70] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s3 -> s6 [70, 70] { R6926 += 1, R6882 += 1, R6811 += 1, R6812 += 1 };
  s3 -> s7 [70, 70] { R6926 += 1, R6882 += 1, R6811 += 1, R6812 += 1 };
  s3 -> s8 [70, 70] { R6926 += 1, R6882 += 1, R6812 += 1, R6813 += 1, R6814 += 1 };
  s3 -> s9 [70, 70] { R6926 += 1, R6882 += 1, R6812 += 1, R6813 += 1, R6814 += 1 };
  s3 -> s10 [70, 70] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s3 -> s1 [71, 74] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s3 -> s2 [71, 65535] { R6926 += 1, R6882 += 1, R6812 += 1, R6813 += 1, R6814 += 1 };
  s3 -> s3 [71, 65535] { R6926 += 1, R6882 += 1, R6811 += 1, R6812 += 1 };
  s3 -> s11 [75, 75] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s3 -> s1 [76, 65535] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s4 -> s1 [0, 69] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s4 -> s2 [0, 69] { R6926 += 1, R6882 += 1, R6812 += 1, R6813 += 1, R6814 += 1 };
  s4 -> s3 [0, 69] { R6926 += 1, R6882 += 1, R6811 += 1, R6812 += 1 };
  s4 -> s4 [0, 65535] { R6926 += 1, R6881 += 1, R6882 += 1 };
  s4 -> s5 [70, 70] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s4 -> s6 [70, 70] { R6926 += 1, R6882 += 1, R6811 += 1, R6812 += 1 };
  s4 -> s7 [70, 70] { R6926 += 1, R6882 += 1, R6811 += 1, R6812 += 1 };
  s4 -> s8 [70, 70] { R6926 += 1, R6882 += 1, R6812 += 1, R6813 += 1, R6814 += 1 };
  s4 -> s9 [70, 70] { R6926 += 1, R6882 += 1, R6812 += 1, R6813 += 1, R6814 += 1 };
  s4 -> s10 [70, 70] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s4 -> s1 [71, 74] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s4 -> s2 [71, 65535] { R6926 += 1, R6882 += 1, R6812 += 1, R6813 += 1, R6814 += 1 };
  s4 -> s3 [71, 65535] { R6926 += 1, R6882 += 1, R6811 += 1, R6812 += 1 };
  s4 -> s11 [75, 75] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s4 -> s1 [76, 65535] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s5 -> s5 [0, 74] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s5 -> s13 [75, 75] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s5 -> s5 [76, 65535] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s7 -> s5 [0, 74] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s7 -> s7 [0, 65535] { R6926 += 1, R6882 += 1, R6811 += 1, R6812 += 1 };
  s7 -> s9 [0, 65535] { R6926 += 1, R6882 += 1, R6812 += 1, R6813 += 1, R6814 += 1 };
  s7 -> s13 [75, 75] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s7 -> s5 [76, 65535] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s9 -> s5 [0, 74] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s9 -> s9 [0, 65535] { R6926 += 1, R6882 += 1, R6812 += 1, R6813 += 1, R6814 += 1 };
  s9 -> s13 [75, 75] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s9 -> s5 [76, 65535] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s11 -> s11 [0, 69] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s11 -> s11 [0, 65535] { R6926 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [70, 70] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s11 -> s14 [70, 70] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s11 -> s11 [71, 65535] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R6926 += 1, R6882 += 1, R6812 += 1, R6814 += 1 };
  s13 -> s15 [0, 65535] { R6926 += 1 };
  s13 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R6926 += 1 };
  s14 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R6926 += 1 };
  s15 -> s12 [0, 65535];
  accepting s12, s13, s14, s15, s11;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R6928 += 1, R6884 += 1, R6820 += 1, R6822 += 1, R6823 += 1 };
  s0 -> s2 [0, 69] { R6928 += 1, R6884 += 1, R6820 += 1, R6821 += 1, R6822 += 1 };
  s0 -> s3 [0, 69] { R6928 += 1, R6884 += 1, R6819 += 1, R6820 += 1 };
  s0 -> s4 [0, 65535] { R6928 += 1, R6883 += 1, R6884 += 1 };
  s0 -> s0 [0, 65535] { R6927 += 1, R6928 += 1 };
  s0 -> s5 [70, 70] { R6928 += 1, R6884 += 1, R6820 += 1, R6822 += 1, R6823 += 1 };
  s0 -> s6 [70, 70] { R6928 += 1, R6884 += 1, R6820 += 1, R6822 += 1, R6823 += 1 };
  s0 -> s7 [70, 70] { R6928 += 1, R6884 += 1, R6820 += 1, R6821 += 1, R6822 += 1 };
  s0 -> s8 [70, 70] { R6928 += 1, R6884 += 1, R6819 += 1, R6820 += 1 };
  s0 -> s9 [70, 70] { R6928 += 1, R6884 += 1, R6820 += 1, R6821 += 1, R6822 += 1 };
  s0 -> s10 [70, 70] { R6928 += 1, R6884 += 1, R6819 += 1, R6820 += 1 };
  s0 -> s1 [71, 65535] { R6928 += 1, R6884 += 1, R6820 += 1, R6822 += 1, R6823 += 1 };
  s0 -> s2 [71, 65535] { R6928 += 1, R6884 += 1, R6820 += 1, R6821 += 1, R6822 += 1 };
  s0 -> s3 [71, 65535] { R6928 += 1, R6884 += 1, R6819 += 1, R6820 += 1 };
  s1 -> s1 [0, 69] { R6928 += 1, R6884 += 1, R6820 += 1, R6822 += 1, R6823 += 1 };
  s1 -> s14 [0, 69] { R6928 += 1, R6884 += 1, R6820 += 1 };
  s1 -> s5 [70, 70] { R6928 += 1, R6884 += 1, R6820 += 1, R6822 += 1, R6823 += 1 };
  s1 -> s11 [70, 70] { R6928 += 1, R6884 += 1, R6820 += 1 };
  s1 -> s6 [70, 70] { R6928 += 1, R6884 += 1, R6820 += 1, R6822 += 1, R6823 += 1 };
  s1 -> s15 [70, 70] { R6928 += 1, R6884 += 1, R6820 += 1 };
  s1 -> s1 [71, 65535] { R6928 += 1, R6884 += 1, R6820 += 1, R6822 += 1, R6823 += 1 };
  s1 -> s14 [71, 65535] { R6928 += 1, R6884 += 1, R6820 += 1 };
  s2 -> s1 [0, 69] { R6928 += 1, R6884 += 1, R6820 += 1, R6822 += 1, R6823 += 1 };
  s2 -> s2 [0, 69] { R6928 += 1, R6884 += 1, R6820 += 1, R6821 += 1, R6822 += 1 };
  s2 -> s5 [70, 70] { R6928 += 1, R6884 += 1, R6820 += 1, R6822 += 1, R6823 += 1 };
  s2 -> s6 [70, 70] { R6928 += 1, R6884 += 1, R6820 += 1, R6822 += 1, R6823 += 1 };
  s2 -> s7 [70, 70] { R6928 += 1, R6884 += 1, R6820 += 1, R6821 += 1, R6822 += 1 };
  s2 -> s9 [70, 70] { R6928 += 1, R6884 += 1, R6820 += 1, R6821 += 1, R6822 += 1 };
  s2 -> s1 [71, 65535] { R6928 += 1, R6884 += 1, R6820 += 1, R6822 += 1, R6823 += 1 };
  s2 -> s2 [71, 65535] { R6928 += 1, R6884 += 1, R6820 += 1, R6821 += 1, R6822 += 1 };
  s3 -> s1 [0, 69] { R6928 += 1, R6884 += 1, R6820 += 1, R6822 += 1, R6823 += 1 };
  s3 -> s2 [0, 69] { R6928 += 1, R6884 += 1, R6820 += 1, R6821 += 1, R6822 += 1 };
  s3 -> s3 [0, 69] { R6928 += 1, R6884 += 1, R6819 += 1, R6820 += 1 };
  s3 -> s5 [70, 70] { R6928 += 1, R6884 += 1, R6820 += 1, R6822 += 1, R6823 += 1 };
  s3 -> s6 [70, 70] { R6928 += 1, R6884 += 1, R6820 += 1, R6822 += 1, R6823 += 1 };
  s3 -> s7 [70, 70] { R6928 += 1, R6884 += 1, R6820 += 1, R6821 += 1, R6822 += 1 };
  s3 -> s8 [70, 70] { R6928 += 1, R6884 += 1, R6819 += 1, R6820 += 1 };
  s3 -> s9 [70, 70] { R6928 += 1, R6884 += 1, R6820 += 1, R6821 += 1, R6822 += 1 };
  s3 -> s10 [70, 70] { R6928 += 1, R6884 += 1, R6819 += 1, R6820 += 1 };
  s3 -> s1 [71, 65535] { R6928 += 1, R6884 += 1, R6820 += 1, R6822 += 1, R6823 += 1 };
  s3 -> s2 [71, 65535] { R6928 += 1, R6884 += 1, R6820 += 1, R6821 += 1, R6822 += 1 };
  s3 -> s3 [71, 65535] { R6928 += 1, R6884 += 1, R6819 += 1, R6820 += 1 };
  s4 -> s1 [0, 69] { R6928 += 1, R6884 += 1, R6820 += 1, R6822 += 1, R6823 += 1 };
  s4 -> s2 [0, 69] { R6928 += 1, R6884 += 1, R6820 += 1, R6821 += 1, R6822 += 1 };
  s4 -> s3 [0, 69] { R6928 += 1, R6884 += 1, R6819 += 1, R6820 += 1 };
  s4 -> s4 [0, 65535] { R6928 += 1, R6883 += 1, R6884 += 1 };
  s4 -> s5 [70, 70] { R6928 += 1, R6884 += 1, R6820 += 1, R6822 += 1, R6823 += 1 };
  s4 -> s6 [70, 70] { R6928 += 1, R6884 += 1, R6820 += 1, R6822 += 1, R6823 += 1 };
  s4 -> s7 [70, 70] { R6928 += 1, R6884 += 1, R6820 += 1, R6821 += 1, R6822 += 1 };
  s4 -> s8 [70, 70] { R6928 += 1, R6884 += 1, R6819 += 1, R6820 += 1 };
  s4 -> s9 [70, 70] { R6928 += 1, R6884 += 1, R6820 += 1, R6821 += 1, R6822 += 1 };
  s4 -> s10 [70, 70] { R6928 += 1, R6884 += 1, R6819 += 1, R6820 += 1 };
  s4 -> s1 [71, 65535] { R6928 += 1, R6884 += 1, R6820 += 1, R6822 += 1, R6823 += 1 };
  s4 -> s2 [71, 65535] { R6928 += 1, R6884 += 1, R6820 += 1, R6821 += 1, R6822 += 1 };
  s4 -> s3 [71, 65535] { R6928 += 1, R6884 += 1, R6819 += 1, R6820 += 1 };
  s6 -> s11 [0, 65535] { R6928 += 1, R6884 += 1, R6820 += 1 };
  s6 -> s6 [0, 65535] { R6928 += 1, R6884 += 1, R6820 += 1, R6822 += 1, R6823 += 1 };
  s7 -> s6 [0, 65535] { R6928 += 1, R6884 += 1, R6820 += 1, R6822 += 1, R6823 += 1 };
  s7 -> s7 [0, 65535] { R6928 += 1, R6884 += 1, R6820 += 1, R6821 += 1, R6822 += 1 };
  s8 -> s6 [0, 65535] { R6928 += 1, R6884 += 1, R6820 += 1, R6822 += 1, R6823 += 1 };
  s8 -> s7 [0, 65535] { R6928 += 1, R6884 += 1, R6820 += 1, R6821 += 1, R6822 += 1 };
  s8 -> s8 [0, 65535] { R6928 += 1, R6884 += 1, R6819 += 1, R6820 += 1 };
  s11 -> s11 [0, 65535] { R6928 += 1, R6884 += 1, R6820 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [0, 65535] { R6928 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R6928 += 1 };
  s14 -> s14 [0, 69] { R6928 += 1, R6884 += 1, R6820 += 1 };
  s14 -> s14 [0, 65535] { R6928 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s11 [70, 70] { R6928 += 1, R6884 += 1, R6820 += 1 };
  s14 -> s15 [70, 70] { R6928 += 1, R6884 += 1, R6820 += 1 };
  s14 -> s14 [71, 65535] { R6928 += 1, R6884 += 1, R6820 += 1 };
  s15 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R6928 += 1 };
  accepting s12, s13, s14, s15, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R6928 && R23 - R6928 = -1 && R24 = R6928 && R25 - R6928 = -1 && R26 = R6928 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R6816 + -1*R6812 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R6816 + -1*R6812 - R66 = 0 && R55 + R96 + R93 + -1*R6818 + -1*R6814 - R68 = 0 && R65 + R6815 + R6811 = 0 && R67 + R6817 + R6813 = 0 && R6869 = 0 && R6870 = 0 && R6875 = 0 && R6876 = 0 && R6879 = 0 && R6880 = 0 && R6881 = 0 && R6882 = 0 && R6883 = 0 && R6884 = 0 && R6885 = 0 && R6886 = R6928 && R6887 = 0 && R6888 = R6928 && R6889 = 0 && R6890 = R6928 && R6891 = 0 && R6892 = R6928 && R6893 = 0 && R6894 = R6928 && R6895 = 0 && R6896 = R6928 && R6897 = 0 && R6898 = R6928 && R6899 = 0 && R6900 = R6928 && R6901 = 0 && R6902 = R6928 && R6903 = 0 && R6904 = R6928 && R6905 = 0 && R6906 = R6928 && R6907 = 0 && R6908 = R6928 && R6909 = 0 && R6910 = R6928 && R6911 = 0 && R6912 = R6928 && R6913 = 0 && R6914 = R6928 && R6915 = 0 && R6916 = R6928 && R6917 = 0 && R6918 = R6928 && R6919 = 0 && R6920 = R6928 && R6921 = 0 && R6922 = R6928 && R6923 = 0 && R6924 = R6928 && R6925 = 0 && R6926 = R6928 && R6927 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R6810 + R6807 < 1 && -1*R6816 + -1*R6812 - R66 < 1 && -1*R6818 + -1*R6814 - R68 < 1 && 0 < R6928 && (R2 != 0 || R20 = 0 || (R6829 = 0 && R6830 = 0)) && (R2 != 0 || R20 = 0 || (R6831 = 0 && R6832 = 0)) && (R2 != 0 || R20 = 0 || (R6833 = 0 && R6834 = 0)) && (R2 != 0 || R20 = 0 || (R6835 = 0 && R6836 = 0)) && (R2 != 0 || R20 = 0 || (R6837 = 0 && R6838 = 0)) && (R2 != 0 || R20 = 0 || (R6839 = 0 && R6840 = 0)) && (R2 != 0 || R20 = 0 || (R6841 = 0 && R6842 = 0)) && (R2 != 0 || R20 = 0 || (R6843 = 0 && R6844 = 0)) && (R2 != 0 || R20 = 0 || (R6845 = 0 && R6846 = 0)) && (R2 != 0 || R20 = 0 || (R6847 = 0 && R6848 = 0)) && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R6816 + -1*R6812 - R66 = 0 || R66 + R6816 + R6812 < 1) && (R59 + R6808 + R6805 != 0 || R60 + R6809 + R6806 + -1*R6816 + -1*R6812 - R66 = 0 || R66 + R6816 + R6812 < 1) && (R66 + R6816 + R6812 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R6818 + R6814 < 1) && (R53 + R94 + R91 = 0 || R68 + R6818 + R6814 < 1))) && (R66 + R6816 + R6812 != 0 || ((R59 + R6808 + R6805 != 0 || R60 + R6809 + R6806 = 0 || R68 + R6818 + R6814 < 1) && (R59 + R6808 + R6805 = 0 || R68 + R6818 + R6814 < 1))) && (R66 + R6816 + R6812 != 0 || ((R73 + R6824 + R6819 != 0 || R74 + R6825 + R6820 = 0 || R68 + R6818 + R6814 < 1) && (R73 + R6824 + R6819 = 0 || R68 + R6818 + R6814 < 1))) && (R68 + R6818 + R6814 != 0 || R77 + R6828 + R6823 = 0 || (R75 + R6826 + R6821 = 0 && R76 + R6827 + R6822 = 0)) && (R73 + R6824 + R6819 != 0 || R66 + R6816 + R6812 + -1*R6825 + -1*R6820 - R74 = 0 || R66 + R6816 + R6812 < 1) && (R75 + R6826 + R6821 != 0 || R68 + R6818 + R6814 + -1*R6827 + -1*R6822 - R76 = 0 || R68 + R6818 + R6814 < 1) && (R6829 != 0 || R2 = R6830 || R2 < 1) && (R6831 != 0 || R2 = R6832 || R2 < 1) && (R6833 != 0 || R2 = R6834 || R2 < 1) && (R6835 != 0 || R2 = R6836 || R2 < 1) && (R6837 != 0 || R2 = R6838 || R2 < 1) && (R6839 != 0 || R2 = R6840 || R2 < 1) && (R6841 != 0 || R2 = R6842 || R2 < 1) && (R6843 != 0 || R2 = R6844 || R2 < 1) && (R6845 != 0 || R2 = R6846 || R2 < 1) && (R6847 != 0 || R2 = R6848 || R2 < 1) && (R21 = 0 || (R6867 = 0 && R6868 = 0)) && (R21 = 0 || (R6871 = 0 && R6872 = 0)) && (R21 = 0 || (R6873 = 0 && R6874 = 0)) && (R21 = 0 || (R6877 = 0 && R6878 = 0)) && (R22 = 0 || (R6849 = 0 && R6850 = 0)) && (R22 = 0 || (R6851 = 0 && R6852 = 0)) && (R22 = 0 || (R6853 = 0 && R6854 = 0)) && (R22 = 0 || (R6855 = 0 && R6856 = 0)) && (R22 = 0 || (R6857 = 0 && R6858 = 0)) && (R22 = 0 || (R6859 = 0 && R6860 = 0)) && (R22 = 0 || (R6861 = 0 && R6862 = 0)) && (R22 = 0 || (R6863 = 0 && R6864 = 0)) && (R22 = 0 || (R6865 = 0 && R6866 = 0)) && (R53 + R94 + R91 = 0 || R66 + R6816 + R6812 < 1) && (R59 + R6808 + R6805 = 0 || R66 + R6816 + R6812 < 1) && (R73 + R6824 + R6819 = 0 || R66 + R6816 + R6812 < 1) && (R75 + R6826 + R6821 = 0 || R68 + R6818 + R6814 < 1) && (R6829 = 0 || R2 < 1) && (R6831 = 0 || R2 < 1) && (R6833 = 0 || R2 < 1) && (R6835 = 0 || R2 < 1) && (R6837 = 0 || R2 < 1) && (R6839 = 0 || R2 < 1) && (R6841 = 0 || R2 < 1) && (R6843 = 0 || R2 < 1) && (R6845 = 0 || R2 < 1) && (R6847 = 0 || R2 < 1);
// End of Parikh automata intersection problem
