// Parikh automata intersection problem, generated by OSTRICH+
counter int R10159, R10160, R10161, R10162, R10163, R10164, R11281, R11282, R11283, R11284, R11285, R11286, R11287, R11288, R11619, R11620, R11621, R11622, R11623, R11624, R11625, R11626, R11627, R11628, R11629, R11630, R11631, R11632, R11633, R11634, R11635, R11636, R11637, R11638, R11639, R11640, R11641, R11642, R11643, R11644, R11645, R11646, R11647, R11648, R11649, R11650, R11651, R11652, R11653, R11654, R11655, R11656, R11657, R11658, R11659, R11660, R11661, R11662, R11663, R11664, R11665, R11666, R11667, R11668, R11669, R11670, R11671, R11672, R11673, R11674, R11675, R11676, R11677, R11678, R11679, R11680, R11681, R11682, R11683, R11684, R11685, R11686, R11687, R11688, R11689, R11690, R11691, R11692, R11693, R11694, R11695, R11696, R11697, R11698, R11699, R11700, R11701, R11702, R11703, R11704, R11705, R11706, R11707, R11708, R11709, R11710, R11711, R11712, R11713, R11714, R11715, R11716, R11717, R11718, R11719, R11720, R11721, R11722, R11723, R11724, R11725, R11726, R11727, R11728, R12, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R4, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R11650 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R11649 += 1, R11650 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R11650 += 1, R22 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R11652 += 1 };
  s0 -> s0 [0, 65535] { R11651 += 1, R11652 += 1 };
  s0 -> s2 [70, 70] { R11652 += 1 };
  s0 -> s3 [70, 70] { R11652 += 1 };
  s0 -> s1 [76, 65535] { R11652 += 1 };
  s1 -> s1 [0, 69] { R11652 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11652 += 1 };
  s1 -> s3 [70, 70] { R11652 += 1 };
  s1 -> s1 [76, 65535] { R11652 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R11652 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R11652 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R11654 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R11653 += 1, R11654 += 1 };
  s0 -> s2 [70, 70] { R11654 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R11654 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R11654 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R11654 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11654 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R11654 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R11654 += 1, R45 += 1 };
  s2 -> s2 [0, 65535] { R11654 += 1, R45 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R11656 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R11655 += 1, R11656 += 1 };
  s0 -> s2 [70, 70] { R11656 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R11656 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R11656 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R11656 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11656 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R11656 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R11656 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R11656 += 1, R47 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R11658 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R11657 += 1, R11658 += 1 };
  s0 -> s2 [70, 70] { R11658 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R11658 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R11658 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R11658 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11658 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R11658 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R11658 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535] { R11658 += 1, R49 += 1, R50 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R11660 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R11659 += 1, R11660 += 1 };
  s0 -> s2 [70, 70] { R11660 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R11660 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R11660 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R11660 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11660 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R11660 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R11660 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R11660 += 1, R53 += 1, R54 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R11662 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R11661 += 1, R11662 += 1 };
  s0 -> s2 [70, 70] { R11662 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R11662 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R11662 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R11662 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11662 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R11662 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R11662 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R11662 += 1, R59 += 1, R60 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R11664 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R11663 += 1, R11664 += 1 };
  s0 -> s2 [70, 70] { R11664 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R11664 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R11664 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R11664 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11664 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R11664 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R11664 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R11664 += 1, R65 += 1, R66 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R11666 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R11665 += 1, R11666 += 1 };
  s0 -> s2 [70, 70] { R11666 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R11666 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R11666 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R11666 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11666 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R11666 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R11666 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R11666 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R11686 += 1 };
  s0 -> s0 [0, 65535] { R11685 += 1, R11686 += 1 };
  s0 -> s2 [70, 70] { R11686 += 1 };
  s0 -> s1 [71, 65535] { R11686 += 1 };
  s1 -> s1 [0, 69] { R11686 += 1 };
  s1 -> s2 [70, 70] { R11686 += 1 };
  s1 -> s1 [71, 65535] { R11686 += 1 };
  s2 -> s2 [0, 65535] { R11686 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R11688 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R11687 += 1, R11688 += 1 };
  s1 -> s1 [0, 65535] { R11688 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R11690 += 1 };
  s0 -> s0 [0, 65535] { R11689 += 1, R11690 += 1 };
  s0 -> s2 [0, 65535] { R11690 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R11690 += 1 };
  s0 -> s1 [71, 65535] { R11690 += 1 };
  s1 -> s1 [0, 69] { R11690 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R11690 += 1 };
  s1 -> s1 [71, 65535] { R11690 += 1 };
  s2 -> s1 [0, 69] { R11690 += 1 };
  s2 -> s2 [0, 65535] { R11690 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R11690 += 1 };
  s2 -> s1 [71, 65535] { R11690 += 1 };
  s3 -> s3 [0, 65535] { R11690 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R11692 += 1, R11630 += 1 };
  s0 -> s2 [0, 65535] { R11692 += 1, R11629 += 1, R11630 += 1 };
  s0 -> s0 [0, 65535] { R11691 += 1, R11692 += 1 };
  s0 -> s1 [71, 65535] { R11692 += 1, R11630 += 1 };
  s1 -> s1 [0, 69] { R11692 += 1, R11630 += 1 };
  s1 -> s1 [0, 65535] { R11692 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R11692 += 1, R11630 += 1 };
  s2 -> s1 [0, 69] { R11692 += 1, R11630 += 1 };
  s2 -> s2 [0, 65535] { R11692 += 1, R11629 += 1, R11630 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R11692 += 1, R11630 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R11694 += 1, R11631 += 1, R11632 += 1 };
  s0 -> s0 [0, 65535] { R11693 += 1, R11694 += 1 };
  s0 -> s2 [0, 65535] { R11694 += 1, R11632 += 1, R20 += 1 };
  s1 -> s1 [0, 65535] { R11694 += 1, R11631 += 1, R11632 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R11694 += 1, R11632 += 1, R20 += 1 };
  s2 -> s3 [0, 65535] { R11694 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R11694 += 1, R11632 += 1, R20 += 1 };
  s3 -> s3 [0, 65535] { R11694 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R11696 += 1, R11634 += 1 };
  s0 -> s2 [0, 65535] { R11696 += 1, R11633 += 1, R11634 += 1 };
  s0 -> s0 [0, 65535] { R11695 += 1, R11696 += 1 };
  s0 -> s1 [75, 65535] { R11696 += 1, R11634 += 1 };
  s1 -> s1 [0, 70] { R11696 += 1, R11634 += 1 };
  s1 -> s1 [0, 65535] { R11696 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R11696 += 1, R11634 += 1 };
  s2 -> s1 [0, 70] { R11696 += 1, R11634 += 1 };
  s2 -> s2 [0, 65535] { R11696 += 1, R11633 += 1, R11634 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R11696 += 1, R11634 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R11698 += 1, R11635 += 1, R11636 += 1 };
  s0 -> s0 [0, 65535] { R11697 += 1, R11698 += 1 };
  s0 -> s2 [0, 65535] { R11698 += 1, R11636 += 1, R84 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R11698 += 1, R11635 += 1, R11636 += 1 };
  s1 -> s2 [0, 65535] { R11698 += 1, R11636 += 1, R84 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R11698 += 1 };
  s2 -> s2 [0, 65535] { R11698 += 1, R11636 += 1, R84 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R11698 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R11700 += 1, R11638 += 1 };
  s0 -> s2 [0, 65535] { R11700 += 1, R11638 += 1, R86 += 1 };
  s0 -> s3 [0, 65535] { R11700 += 1, R11637 += 1, R11638 += 1 };
  s0 -> s0 [0, 65535] { R11699 += 1, R11700 += 1 };
  s0 -> s1 [76, 65535] { R11700 += 1, R11638 += 1 };
  s1 -> s1 [0, 74] { R11700 += 1, R11638 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R11700 += 1 };
  s1 -> s1 [76, 65535] { R11700 += 1, R11638 += 1 };
  s2 -> s1 [0, 74] { R11700 += 1, R11638 += 1 };
  s2 -> s2 [0, 65535] { R11700 += 1, R11638 += 1, R86 += 1 };
  s2 -> s5 [0, 65535] { R11700 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [76, 65535] { R11700 += 1, R11638 += 1 };
  s3 -> s1 [0, 74] { R11700 += 1, R11638 += 1 };
  s3 -> s2 [0, 65535] { R11700 += 1, R11638 += 1, R86 += 1 };
  s3 -> s3 [0, 65535] { R11700 += 1, R11637 += 1, R11638 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [76, 65535] { R11700 += 1, R11638 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R11700 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R11702 += 1, R11640 += 1 };
  s0 -> s2 [0, 65535] { R11702 += 1, R11640 += 1, R90 += 1 };
  s0 -> s0 [0, 65535] { R11701 += 1, R11702 += 1 };
  s0 -> s3 [0, 65535] { R11702 += 1, R11639 += 1, R11640 += 1 };
  s1 -> s1 [0, 65535] { R11702 += 1, R11640 += 1 };
  s1 -> s5 [0, 65535] { R11702 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R11702 += 1, R11640 += 1 };
  s2 -> s2 [0, 65535] { R11702 += 1, R11640 += 1, R90 += 1 };
  s2 -> s5 [0, 65535] { R11702 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R11702 += 1, R11640 += 1 };
  s3 -> s2 [0, 65535] { R11702 += 1, R11640 += 1, R90 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R11702 += 1, R11639 += 1, R11640 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R11702 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R11703 += 1, R11704 += 1 };
  s0 -> s1 [0, 65535] { R11704 += 1, R11642 += 1, R95 += 1, R96 += 1 };
  s0 -> s2 [0, 65535] { R11704 += 1, R11642 += 1, R94 += 1, R95 += 1 };
  s0 -> s3 [0, 65535] { R11704 += 1, R11641 += 1, R11642 += 1 };
  s1 -> s6 [0, 65535] { R11704 += 1, R11642 += 1 };
  s1 -> s5 [0, 65535] { R11704 += 1 };
  s1 -> s1 [0, 65535] { R11704 += 1, R11642 += 1, R95 += 1, R96 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R11704 += 1 };
  s2 -> s1 [0, 65535] { R11704 += 1, R11642 += 1, R95 += 1, R96 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R11704 += 1, R11642 += 1, R94 += 1, R95 += 1 };
  s3 -> s1 [0, 65535] { R11704 += 1, R11642 += 1, R95 += 1, R96 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R11704 += 1, R11642 += 1, R94 += 1, R95 += 1 };
  s3 -> s3 [0, 65535] { R11704 += 1, R11641 += 1, R11642 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R11704 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R11704 += 1, R11642 += 1 };
  s6 -> s5 [0, 65535] { R11704 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s0 [0, 65535] { R11705 += 1, R11706 += 1 };
  s0 -> s1 [0, 65535] { R11706 += 1, R11643 += 1, R11644 += 1 };
  s0 -> s2 [0, 65535] { R11706 += 1, R11644 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R11706 += 1, R11643 += 1, R11644 += 1 };
  s1 -> s2 [0, 65535] { R11706 += 1, R11644 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R11706 += 1 };
  s2 -> s2 [0, 65535] { R11706 += 1, R11644 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R11706 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R11708 += 1, R11645 += 1, R11646 += 1 };
  s0 -> s0 [0, 65535] { R11707 += 1, R11708 += 1 };
  s0 -> s2 [0, 65535] { R11708 += 1, R11646 += 1 };
  s1 -> s1 [0, 65535] { R11708 += 1, R11645 += 1, R11646 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R11708 += 1, R11646 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R11708 += 1, R11646 += 1 };
  s2 -> s4 [0, 65535] { R11708 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R11708 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R11710 += 1, R11647 += 1, R11648 += 1 };
  s0 -> s2 [0, 65535] { R11710 += 1, R11648 += 1, R11625 += 1, R11627 += 1, R11628 += 1 };
  s0 -> s3 [0, 65535] { R11710 += 1, R11648 += 1 };
  s0 -> s4 [0, 65535] { R11710 += 1, R11648 += 1, R11625 += 1 };
  s0 -> s0 [0, 65535] { R11709 += 1, R11710 += 1 };
  s1 -> s1 [0, 65535] { R11710 += 1, R11647 += 1, R11648 += 1 };
  s1 -> s2 [0, 65535] { R11710 += 1, R11648 += 1, R11625 += 1, R11627 += 1, R11628 += 1 };
  s1 -> s3 [0, 65535] { R11710 += 1, R11648 += 1 };
  s1 -> s4 [0, 65535] { R11710 += 1, R11648 += 1, R11625 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R11710 += 1, R11648 += 1, R11625 += 1, R11627 += 1, R11628 += 1 };
  s2 -> s5 [0, 65535] { R11710 += 1 };
  s2 -> s3 [0, 65535] { R11710 += 1, R11648 += 1 };
  s2 -> s4 [0, 65535] { R11710 += 1, R11648 += 1, R11625 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s5 [0, 65535] { R11710 += 1 };
  s3 -> s3 [0, 65535] { R11710 += 1, R11648 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R11710 += 1 };
  s4 -> s3 [0, 65535] { R11710 += 1, R11648 += 1 };
  s4 -> s4 [0, 65535] { R11710 += 1, R11648 += 1, R11625 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R11710 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R11712 += 1, R11667 += 1, R11668 += 1 };
  s0 -> s0 [0, 65535] { R11711 += 1, R11712 += 1 };
  s0 -> s2 [0, 65535] { R11712 += 1, R11668 += 1, R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R11712 += 1, R11667 += 1, R11668 += 1 };
  s1 -> s2 [0, 65535] { R11712 += 1, R11668 += 1, R21 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R11712 += 1 };
  s2 -> s2 [0, 65535] { R11712 += 1, R11668 += 1, R21 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R11712 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R11714 += 1, R11670 += 1 };
  s0 -> s2 [0, 65535] { R11714 += 1, R11669 += 1, R11670 += 1 };
  s0 -> s0 [0, 65535] { R11713 += 1, R11714 += 1 };
  s0 -> s3 [70, 70] { R11714 += 1, R11670 += 1 };
  s0 -> s4 [70, 70] { R11714 += 1, R11670 += 1 };
  s0 -> s5 [75, 75] { R11714 += 1, R11670 += 1 };
  s0 -> s1 [76, 65535] { R11714 += 1, R11670 += 1 };
  s1 -> s1 [0, 69] { R11714 += 1, R11670 += 1 };
  s1 -> s3 [70, 70] { R11714 += 1, R11670 += 1 };
  s1 -> s4 [70, 70] { R11714 += 1, R11670 += 1 };
  s1 -> s5 [75, 75] { R11714 += 1, R11670 += 1 };
  s1 -> s1 [76, 65535] { R11714 += 1, R11670 += 1 };
  s2 -> s1 [0, 69] { R11714 += 1, R11670 += 1 };
  s2 -> s2 [0, 65535] { R11714 += 1, R11669 += 1, R11670 += 1 };
  s2 -> s3 [70, 70] { R11714 += 1, R11670 += 1 };
  s2 -> s4 [70, 70] { R11714 += 1, R11670 += 1 };
  s2 -> s5 [75, 75] { R11714 += 1, R11670 += 1 };
  s2 -> s1 [76, 65535] { R11714 += 1, R11670 += 1 };
  s4 -> s4 [0, 70] { R11714 += 1, R11670 += 1 };
  s4 -> s8 [75, 75] { R11714 += 1, R11670 += 1 };
  s4 -> s4 [76, 65535] { R11714 += 1, R11670 += 1 };
  s5 -> s5 [0, 69] { R11714 += 1, R11670 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R11714 += 1 };
  s5 -> s7 [70, 70] { R11714 += 1, R11670 += 1 };
  s5 -> s8 [70, 70] { R11714 += 1, R11670 += 1 };
  s5 -> s5 [75, 65535] { R11714 += 1, R11670 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R11714 += 1 };
  s8 -> s8 [0, 70] { R11714 += 1, R11670 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R11714 += 1 };
  s8 -> s8 [75, 65535] { R11714 += 1, R11670 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R11716 += 1, R11672 += 1, R83 += 1 };
  s0 -> s2 [0, 65535] { R11716 += 1, R11671 += 1, R11672 += 1 };
  s0 -> s0 [0, 65535] { R11715 += 1, R11716 += 1 };
  s0 -> s3 [70, 70] { R11716 += 1, R11672 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R11716 += 1, R11672 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R11716 += 1, R11672 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R11716 += 1, R11672 += 1, R83 += 1 };
  s1 -> s1 [0, 65535] { R11716 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R11716 += 1, R11672 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R11716 += 1, R11672 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R11716 += 1, R11672 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R11716 += 1, R11672 += 1, R83 += 1 };
  s2 -> s2 [0, 65535] { R11716 += 1, R11671 += 1, R11672 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R11716 += 1, R11672 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R11716 += 1, R11672 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R11716 += 1, R11672 += 1, R83 += 1 };
  s3 -> s3 [0, 65535] { R11716 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R11716 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R11716 += 1, R11672 += 1, R83 += 1 };
  s5 -> s5 [0, 65535] { R11716 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R11718 += 1, R11674 += 1, R85 += 1 };
  s0 -> s2 [0, 65535] { R11718 += 1, R11673 += 1, R11674 += 1 };
  s0 -> s0 [0, 65535] { R11717 += 1, R11718 += 1 };
  s0 -> s3 [70, 70] { R11718 += 1, R11674 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R11718 += 1, R11674 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R11718 += 1, R11674 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R11718 += 1, R11674 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R11718 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R11718 += 1, R11674 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R11718 += 1, R11674 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R11718 += 1, R11674 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R11718 += 1, R11674 += 1, R85 += 1 };
  s2 -> s2 [0, 65535] { R11718 += 1, R11673 += 1, R11674 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R11718 += 1, R11674 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R11718 += 1, R11674 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R11718 += 1, R11674 += 1, R85 += 1 };
  s3 -> s3 [0, 65535] { R11718 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R11718 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R11718 += 1, R11674 += 1, R85 += 1 };
  s5 -> s5 [0, 65535] { R11718 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R11720 += 1, R11676 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R11720 += 1, R11676 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [0, 65535] { R11720 += 1, R11675 += 1, R11676 += 1 };
  s0 -> s0 [0, 65535] { R11719 += 1, R11720 += 1 };
  s0 -> s4 [70, 70] { R11720 += 1, R11676 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R11720 += 1, R11676 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R11720 += 1, R11676 += 1, R87 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R11720 += 1, R11676 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 74] { R11720 += 1, R11676 += 1, R88 += 1 };
  s0 -> s2 [71, 65535] { R11720 += 1, R11676 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R11720 += 1, R11676 += 1, R88 += 1 };
  s0 -> s1 [76, 65535] { R11720 += 1, R11676 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R11720 += 1, R11676 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R11720 += 1, R11676 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R11720 += 1, R11676 += 1, R88 += 1 };
  s1 -> s1 [71, 74] { R11720 += 1, R11676 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R11720 += 1, R11676 += 1, R88 += 1 };
  s1 -> s1 [76, 65535] { R11720 += 1, R11676 += 1, R88 += 1 };
  s2 -> s1 [0, 69] { R11720 += 1, R11676 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R11720 += 1, R11676 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R11720 += 1, R11676 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R11720 += 1, R11676 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R11720 += 1, R11676 += 1, R87 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R11720 += 1, R11676 += 1, R87 += 1, R88 += 1 };
  s2 -> s1 [71, 74] { R11720 += 1, R11676 += 1, R88 += 1 };
  s2 -> s2 [71, 65535] { R11720 += 1, R11676 += 1, R87 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R11720 += 1, R11676 += 1, R88 += 1 };
  s2 -> s1 [76, 65535] { R11720 += 1, R11676 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R11720 += 1, R11676 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R11720 += 1, R11676 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R11720 += 1, R11675 += 1, R11676 += 1 };
  s3 -> s4 [70, 70] { R11720 += 1, R11676 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R11720 += 1, R11676 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R11720 += 1, R11676 += 1, R87 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R11720 += 1, R11676 += 1, R87 += 1, R88 += 1 };
  s3 -> s1 [71, 74] { R11720 += 1, R11676 += 1, R88 += 1 };
  s3 -> s2 [71, 65535] { R11720 += 1, R11676 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R11720 += 1, R11676 += 1, R88 += 1 };
  s3 -> s1 [76, 65535] { R11720 += 1, R11676 += 1, R88 += 1 };
  s4 -> s4 [0, 74] { R11720 += 1, R11676 += 1, R88 += 1 };
  s4 -> s10 [75, 75] { R11720 += 1, R11676 += 1, R88 += 1 };
  s4 -> s4 [76, 65535] { R11720 += 1, R11676 += 1, R88 += 1 };
  s7 -> s4 [0, 74] { R11720 += 1, R11676 += 1, R88 += 1 };
  s7 -> s7 [0, 65535] { R11720 += 1, R11676 += 1, R87 += 1, R88 += 1 };
  s7 -> s10 [75, 75] { R11720 += 1, R11676 += 1, R88 += 1 };
  s7 -> s4 [76, 65535] { R11720 += 1, R11676 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R11720 += 1, R11676 += 1, R88 += 1 };
  s8 -> s8 [0, 65535] { R11720 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R11720 += 1, R11676 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R11720 += 1, R11676 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R11720 += 1, R11676 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s12 [0, 65535] { R11720 += 1 };
  s10 -> s10 [0, 65535] { R11720 += 1, R11676 += 1, R88 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R11720 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R11720 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R11722 += 1, R11678 += 1, R91 += 1, R92 += 1 };
  s0 -> s0 [0, 65535] { R11721 += 1, R11722 += 1 };
  s0 -> s2 [0, 65535] { R11722 += 1, R11677 += 1, R11678 += 1 };
  s0 -> s3 [70, 70] { R11722 += 1, R11678 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R11722 += 1, R11678 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R11722 += 1, R11678 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R11722 += 1, R11678 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 65535] { R11722 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R11722 += 1, R11678 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R11722 += 1, R11678 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R11722 += 1, R11678 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R11722 += 1, R11678 += 1, R91 += 1, R92 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R11722 += 1, R11677 += 1, R11678 += 1 };
  s2 -> s3 [70, 70] { R11722 += 1, R11678 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R11722 += 1, R11678 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R11722 += 1, R11678 += 1, R91 += 1, R92 += 1 };
  s3 -> s3 [0, 65535] { R11722 += 1, R11678 += 1, R91 += 1, R92 += 1 };
  s3 -> s6 [0, 65535] { R11722 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R11722 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11722 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R11724 += 1, R11680 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s2 [0, 69] { R11724 += 1, R11680 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s0 [0, 65535] { R11723 += 1, R11724 += 1 };
  s0 -> s3 [0, 65535] { R11724 += 1, R11679 += 1, R11680 += 1 };
  s0 -> s4 [70, 70] { R11724 += 1, R11680 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s5 [70, 70] { R11724 += 1, R11680 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s6 [70, 70] { R11724 += 1, R11680 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s7 [70, 70] { R11724 += 1, R11680 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s1 [71, 65535] { R11724 += 1, R11680 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s2 [71, 65535] { R11724 += 1, R11680 += 1, R10159 += 1, R10160 += 1 };
  s1 -> s1 [0, 69] { R11724 += 1, R11680 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s11 [0, 69] { R11724 += 1, R11680 += 1 };
  s1 -> s12 [70, 70] { R11724 += 1, R11680 += 1 };
  s1 -> s4 [70, 70] { R11724 += 1, R11680 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s5 [70, 70] { R11724 += 1, R11680 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s8 [70, 70] { R11724 += 1, R11680 += 1 };
  s1 -> s1 [71, 65535] { R11724 += 1, R11680 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s11 [71, 65535] { R11724 += 1, R11680 += 1 };
  s2 -> s1 [0, 69] { R11724 += 1, R11680 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s2 [0, 69] { R11724 += 1, R11680 += 1, R10159 += 1, R10160 += 1 };
  s2 -> s4 [70, 70] { R11724 += 1, R11680 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s5 [70, 70] { R11724 += 1, R11680 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s6 [70, 70] { R11724 += 1, R11680 += 1, R10159 += 1, R10160 += 1 };
  s2 -> s7 [70, 70] { R11724 += 1, R11680 += 1, R10159 += 1, R10160 += 1 };
  s2 -> s1 [71, 65535] { R11724 += 1, R11680 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s2 [71, 65535] { R11724 += 1, R11680 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s1 [0, 69] { R11724 += 1, R11680 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s2 [0, 69] { R11724 += 1, R11680 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s3 [0, 65535] { R11724 += 1, R11679 += 1, R11680 += 1 };
  s3 -> s4 [70, 70] { R11724 += 1, R11680 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s5 [70, 70] { R11724 += 1, R11680 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s6 [70, 70] { R11724 += 1, R11680 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s7 [70, 70] { R11724 += 1, R11680 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s1 [71, 65535] { R11724 += 1, R11680 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s2 [71, 65535] { R11724 += 1, R11680 += 1, R10159 += 1, R10160 += 1 };
  s4 -> s4 [0, 65535] { R11724 += 1, R11680 += 1, R10160 += 1, R10161 += 1 };
  s4 -> s8 [0, 65535] { R11724 += 1, R11680 += 1 };
  s7 -> s4 [0, 65535] { R11724 += 1, R11680 += 1, R10160 += 1, R10161 += 1 };
  s7 -> s7 [0, 65535] { R11724 += 1, R11680 += 1, R10159 += 1, R10160 += 1 };
  s8 -> s8 [0, 65535] { R11724 += 1, R11680 += 1 };
  s8 -> s9 [0, 65535] { R11724 += 1 };
  s8 -> s10 [0, 65535];
  s9 -> s9 [0, 65535] { R11724 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  s11 -> s11 [0, 69] { R11724 += 1, R11680 += 1 };
  s11 -> s11 [0, 65535] { R11724 += 1 };
  s11 -> s10 [0, 65535];
  s11 -> s12 [70, 70] { R11724 += 1, R11680 += 1 };
  s11 -> s8 [70, 70] { R11724 += 1, R11680 += 1 };
  s11 -> s11 [71, 65535] { R11724 += 1, R11680 += 1 };
  s12 -> s12 [0, 65535] { R11724 += 1 };
  s12 -> s10 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R11726 += 1, R11682 += 1, R11281 += 1, R11282 += 1 };
  s0 -> s2 [0, 69] { R11726 += 1, R11682 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s0 -> s3 [0, 69] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s0 -> s4 [0, 65535] { R11726 += 1, R11681 += 1, R11682 += 1 };
  s0 -> s0 [0, 65535] { R11725 += 1, R11726 += 1 };
  s0 -> s5 [70, 70] { R11726 += 1, R11682 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s0 -> s6 [70, 70] { R11726 += 1, R11682 += 1, R11281 += 1, R11282 += 1 };
  s0 -> s7 [70, 70] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s0 -> s8 [70, 70] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s0 -> s9 [70, 70] { R11726 += 1, R11682 += 1, R11281 += 1, R11282 += 1 };
  s0 -> s10 [70, 70] { R11726 += 1, R11682 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s0 -> s3 [71, 74] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s0 -> s1 [71, 65535] { R11726 += 1, R11682 += 1, R11281 += 1, R11282 += 1 };
  s0 -> s2 [71, 65535] { R11726 += 1, R11682 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s0 -> s11 [75, 75] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s0 -> s3 [76, 65535] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s1 -> s1 [0, 69] { R11726 += 1, R11682 += 1, R11281 += 1, R11282 += 1 };
  s1 -> s2 [0, 69] { R11726 += 1, R11682 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s1 -> s3 [0, 69] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s1 -> s5 [70, 70] { R11726 += 1, R11682 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s1 -> s6 [70, 70] { R11726 += 1, R11682 += 1, R11281 += 1, R11282 += 1 };
  s1 -> s7 [70, 70] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s1 -> s8 [70, 70] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s1 -> s9 [70, 70] { R11726 += 1, R11682 += 1, R11281 += 1, R11282 += 1 };
  s1 -> s10 [70, 70] { R11726 += 1, R11682 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s1 -> s3 [71, 74] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s1 -> s1 [71, 65535] { R11726 += 1, R11682 += 1, R11281 += 1, R11282 += 1 };
  s1 -> s2 [71, 65535] { R11726 += 1, R11682 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s1 -> s11 [75, 75] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s1 -> s3 [76, 65535] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s2 -> s2 [0, 69] { R11726 += 1, R11682 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s2 -> s3 [0, 69] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s2 -> s5 [70, 70] { R11726 += 1, R11682 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s2 -> s7 [70, 70] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s2 -> s8 [70, 70] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s2 -> s10 [70, 70] { R11726 += 1, R11682 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s2 -> s3 [71, 74] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s2 -> s2 [71, 65535] { R11726 += 1, R11682 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s2 -> s11 [75, 75] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s2 -> s3 [76, 65535] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s3 -> s3 [0, 69] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s3 -> s7 [70, 70] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s3 -> s8 [70, 70] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s3 -> s3 [71, 74] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s3 -> s11 [75, 75] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s3 -> s3 [76, 65535] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s4 -> s1 [0, 69] { R11726 += 1, R11682 += 1, R11281 += 1, R11282 += 1 };
  s4 -> s2 [0, 69] { R11726 += 1, R11682 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s4 -> s3 [0, 69] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s4 -> s4 [0, 65535] { R11726 += 1, R11681 += 1, R11682 += 1 };
  s4 -> s5 [70, 70] { R11726 += 1, R11682 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s4 -> s6 [70, 70] { R11726 += 1, R11682 += 1, R11281 += 1, R11282 += 1 };
  s4 -> s7 [70, 70] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s4 -> s8 [70, 70] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s4 -> s9 [70, 70] { R11726 += 1, R11682 += 1, R11281 += 1, R11282 += 1 };
  s4 -> s10 [70, 70] { R11726 += 1, R11682 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s4 -> s3 [71, 74] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s4 -> s1 [71, 65535] { R11726 += 1, R11682 += 1, R11281 += 1, R11282 += 1 };
  s4 -> s2 [71, 65535] { R11726 += 1, R11682 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s4 -> s11 [75, 75] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s4 -> s3 [76, 65535] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s5 -> s8 [0, 74] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s5 -> s5 [0, 65535] { R11726 += 1, R11682 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s5 -> s16 [75, 75] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s5 -> s8 [76, 65535] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s6 -> s8 [0, 74] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s6 -> s5 [0, 65535] { R11726 += 1, R11682 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s6 -> s6 [0, 65535] { R11726 += 1, R11682 += 1, R11281 += 1, R11282 += 1 };
  s6 -> s16 [75, 75] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s6 -> s8 [76, 65535] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s8 -> s8 [0, 74] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s8 -> s16 [75, 75] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s8 -> s8 [76, 65535] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s11 -> s12 [0, 69] { R11726 += 1, R11682 += 1 };
  s11 -> s13 [0, 69] { R11726 += 1, R11682 += 1, R11282 += 1 };
  s11 -> s11 [0, 69] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s11 -> s14 [70, 70] { R11726 += 1, R11682 += 1, R11282 += 1 };
  s11 -> s15 [70, 70] { R11726 += 1, R11682 += 1, R11282 += 1 };
  s11 -> s16 [70, 70] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s11 -> s17 [70, 70] { R11726 += 1, R11682 += 1 };
  s11 -> s18 [70, 70] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s11 -> s19 [70, 70] { R11726 += 1, R11682 += 1 };
  s11 -> s12 [71, 65535] { R11726 += 1, R11682 += 1 };
  s11 -> s13 [71, 65535] { R11726 += 1, R11682 += 1, R11282 += 1 };
  s11 -> s11 [71, 65535] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s12 -> s12 [0, 69] { R11726 += 1, R11682 += 1 };
  s12 -> s12 [0, 65535] { R11726 += 1 };
  s12 -> s20 [0, 65535];
  s12 -> s17 [70, 70] { R11726 += 1, R11682 += 1 };
  s12 -> s19 [70, 70] { R11726 += 1, R11682 += 1 };
  s12 -> s12 [71, 65535] { R11726 += 1, R11682 += 1 };
  s13 -> s12 [0, 69] { R11726 += 1, R11682 += 1 };
  s13 -> s13 [0, 69] { R11726 += 1, R11682 += 1, R11282 += 1 };
  s13 -> s14 [70, 70] { R11726 += 1, R11682 += 1, R11282 += 1 };
  s13 -> s15 [70, 70] { R11726 += 1, R11682 += 1, R11282 += 1 };
  s13 -> s17 [70, 70] { R11726 += 1, R11682 += 1 };
  s13 -> s19 [70, 70] { R11726 += 1, R11682 += 1 };
  s13 -> s12 [71, 65535] { R11726 += 1, R11682 += 1 };
  s13 -> s13 [71, 65535] { R11726 += 1, R11682 += 1, R11282 += 1 };
  s15 -> s15 [0, 65535] { R11726 += 1, R11682 += 1, R11282 += 1 };
  s15 -> s17 [0, 65535] { R11726 += 1, R11682 += 1 };
  s16 -> s15 [0, 65535] { R11726 += 1, R11682 += 1, R11282 += 1 };
  s16 -> s16 [0, 65535] { R11726 += 1, R11682 += 1, R11282 += 1, R11284 += 1 };
  s16 -> s17 [0, 65535] { R11726 += 1, R11682 += 1 };
  s17 -> s17 [0, 65535] { R11726 += 1, R11682 += 1 };
  s17 -> s20 [0, 65535];
  s17 -> s21 [0, 65535] { R11726 += 1 };
  s19 -> s20 [0, 65535];
  s19 -> s19 [0, 65535] { R11726 += 1 };
  s20 -> s20 [0, 65535];
  s21 -> s20 [0, 65535];
  s21 -> s21 [0, 65535] { R11726 += 1 };
  accepting s17, s19, s12, s21, s20;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R11728 += 1, R11684 += 1, R11619 += 1, R11620 += 1 };
  s0 -> s2 [0, 69] { R11728 += 1, R11684 += 1, R11620 += 1, R11622 += 1, R11623 += 1 };
  s0 -> s3 [0, 69] { R11728 += 1, R11684 += 1, R11620 += 1, R11621 += 1, R11622 += 1 };
  s0 -> s4 [0, 65535] { R11728 += 1, R11683 += 1, R11684 += 1 };
  s0 -> s0 [0, 65535] { R11727 += 1, R11728 += 1 };
  s0 -> s5 [70, 70] { R11728 += 1, R11684 += 1, R11620 += 1, R11621 += 1, R11622 += 1 };
  s0 -> s6 [70, 70] { R11728 += 1, R11684 += 1, R11619 += 1, R11620 += 1 };
  s0 -> s7 [70, 70] { R11728 += 1, R11684 += 1, R11619 += 1, R11620 += 1 };
  s0 -> s8 [70, 70] { R11728 += 1, R11684 += 1, R11620 += 1, R11621 += 1, R11622 += 1 };
  s0 -> s9 [70, 70] { R11728 += 1, R11684 += 1, R11620 += 1, R11622 += 1, R11623 += 1 };
  s0 -> s10 [70, 70] { R11728 += 1, R11684 += 1, R11620 += 1, R11622 += 1, R11623 += 1 };
  s0 -> s1 [71, 65535] { R11728 += 1, R11684 += 1, R11619 += 1, R11620 += 1 };
  s0 -> s2 [71, 65535] { R11728 += 1, R11684 += 1, R11620 += 1, R11622 += 1, R11623 += 1 };
  s0 -> s3 [71, 65535] { R11728 += 1, R11684 += 1, R11620 += 1, R11621 += 1, R11622 += 1 };
  s1 -> s1 [0, 69] { R11728 += 1, R11684 += 1, R11619 += 1, R11620 += 1 };
  s1 -> s2 [0, 69] { R11728 += 1, R11684 += 1, R11620 += 1, R11622 += 1, R11623 += 1 };
  s1 -> s3 [0, 69] { R11728 += 1, R11684 += 1, R11620 += 1, R11621 += 1, R11622 += 1 };
  s1 -> s5 [70, 70] { R11728 += 1, R11684 += 1, R11620 += 1, R11621 += 1, R11622 += 1 };
  s1 -> s6 [70, 70] { R11728 += 1, R11684 += 1, R11619 += 1, R11620 += 1 };
  s1 -> s7 [70, 70] { R11728 += 1, R11684 += 1, R11619 += 1, R11620 += 1 };
  s1 -> s8 [70, 70] { R11728 += 1, R11684 += 1, R11620 += 1, R11621 += 1, R11622 += 1 };
  s1 -> s9 [70, 70] { R11728 += 1, R11684 += 1, R11620 += 1, R11622 += 1, R11623 += 1 };
  s1 -> s10 [70, 70] { R11728 += 1, R11684 += 1, R11620 += 1, R11622 += 1, R11623 += 1 };
  s1 -> s1 [71, 65535] { R11728 += 1, R11684 += 1, R11619 += 1, R11620 += 1 };
  s1 -> s2 [71, 65535] { R11728 += 1, R11684 += 1, R11620 += 1, R11622 += 1, R11623 += 1 };
  s1 -> s3 [71, 65535] { R11728 += 1, R11684 += 1, R11620 += 1, R11621 += 1, R11622 += 1 };
  s2 -> s2 [0, 69] { R11728 += 1, R11684 += 1, R11620 += 1, R11622 += 1, R11623 += 1 };
  s2 -> s2 [0, 65535] { R11728 += 1 };
  s2 -> s11 [0, 65535];
  s2 -> s9 [70, 70] { R11728 += 1, R11684 += 1, R11620 += 1, R11622 += 1, R11623 += 1 };
  s2 -> s10 [70, 70] { R11728 += 1, R11684 += 1, R11620 += 1, R11622 += 1, R11623 += 1 };
  s2 -> s2 [71, 65535] { R11728 += 1, R11684 += 1, R11620 += 1, R11622 += 1, R11623 += 1 };
  s3 -> s2 [0, 69] { R11728 += 1, R11684 += 1, R11620 += 1, R11622 += 1, R11623 += 1 };
  s3 -> s3 [0, 69] { R11728 += 1, R11684 += 1, R11620 += 1, R11621 += 1, R11622 += 1 };
  s3 -> s5 [70, 70] { R11728 += 1, R11684 += 1, R11620 += 1, R11621 += 1, R11622 += 1 };
  s3 -> s8 [70, 70] { R11728 += 1, R11684 += 1, R11620 += 1, R11621 += 1, R11622 += 1 };
  s3 -> s9 [70, 70] { R11728 += 1, R11684 += 1, R11620 += 1, R11622 += 1, R11623 += 1 };
  s3 -> s10 [70, 70] { R11728 += 1, R11684 += 1, R11620 += 1, R11622 += 1, R11623 += 1 };
  s3 -> s2 [71, 65535] { R11728 += 1, R11684 += 1, R11620 += 1, R11622 += 1, R11623 += 1 };
  s3 -> s3 [71, 65535] { R11728 += 1, R11684 += 1, R11620 += 1, R11621 += 1, R11622 += 1 };
  s4 -> s1 [0, 69] { R11728 += 1, R11684 += 1, R11619 += 1, R11620 += 1 };
  s4 -> s2 [0, 69] { R11728 += 1, R11684 += 1, R11620 += 1, R11622 += 1, R11623 += 1 };
  s4 -> s3 [0, 69] { R11728 += 1, R11684 += 1, R11620 += 1, R11621 += 1, R11622 += 1 };
  s4 -> s4 [0, 65535] { R11728 += 1, R11683 += 1, R11684 += 1 };
  s4 -> s5 [70, 70] { R11728 += 1, R11684 += 1, R11620 += 1, R11621 += 1, R11622 += 1 };
  s4 -> s6 [70, 70] { R11728 += 1, R11684 += 1, R11619 += 1, R11620 += 1 };
  s4 -> s7 [70, 70] { R11728 += 1, R11684 += 1, R11619 += 1, R11620 += 1 };
  s4 -> s8 [70, 70] { R11728 += 1, R11684 += 1, R11620 += 1, R11621 += 1, R11622 += 1 };
  s4 -> s9 [70, 70] { R11728 += 1, R11684 += 1, R11620 += 1, R11622 += 1, R11623 += 1 };
  s4 -> s10 [70, 70] { R11728 += 1, R11684 += 1, R11620 += 1, R11622 += 1, R11623 += 1 };
  s4 -> s1 [71, 65535] { R11728 += 1, R11684 += 1, R11619 += 1, R11620 += 1 };
  s4 -> s2 [71, 65535] { R11728 += 1, R11684 += 1, R11620 += 1, R11622 += 1, R11623 += 1 };
  s4 -> s3 [71, 65535] { R11728 += 1, R11684 += 1, R11620 += 1, R11621 += 1, R11622 += 1 };
  s6 -> s6 [0, 65535] { R11728 += 1, R11684 += 1, R11619 += 1, R11620 += 1 };
  s6 -> s8 [0, 65535] { R11728 += 1, R11684 += 1, R11620 += 1, R11621 += 1, R11622 += 1 };
  s6 -> s9 [0, 65535] { R11728 += 1, R11684 += 1, R11620 += 1, R11622 += 1, R11623 += 1 };
  s8 -> s8 [0, 65535] { R11728 += 1, R11684 += 1, R11620 += 1, R11621 += 1, R11622 += 1 };
  s8 -> s9 [0, 65535] { R11728 += 1, R11684 += 1, R11620 += 1, R11622 += 1, R11623 += 1 };
  s9 -> s12 [0, 65535] { R11728 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s9 [0, 65535] { R11728 += 1, R11684 += 1, R11620 += 1, R11622 += 1, R11623 += 1 };
  s10 -> s11 [0, 65535];
  s10 -> s10 [0, 65535] { R11728 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R11728 += 1 };
  s12 -> s11 [0, 65535];
  accepting s12, s2, s9, s10, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R11728 && R23 - R11728 = -1 && R24 = R11728 && R25 - R11728 = -1 && R26 = R11728 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R11286 + -1*R11282 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R11286 + -1*R11282 - R66 = 0 && R55 + R96 + R93 + -1*R11288 + -1*R11284 - R68 = 0 && R65 + R11285 + R11281 = 0 && R67 + R11287 + R11283 = 0 && R11669 = 0 && R11670 = 0 && R11675 = 0 && R11676 = 0 && R11679 = 0 && R11680 = 0 && R11681 = 0 && R11682 = 0 && R11683 = 0 && R11684 = 0 && R11685 = 0 && R11686 = R11728 && R11687 = 0 && R11688 = R11728 && R11689 = 0 && R11690 = R11728 && R11691 = 0 && R11692 = R11728 && R11693 = 0 && R11694 = R11728 && R11695 = 0 && R11696 = R11728 && R11697 = 0 && R11698 = R11728 && R11699 = 0 && R11700 = R11728 && R11701 = 0 && R11702 = R11728 && R11703 = 0 && R11704 = R11728 && R11705 = 0 && R11706 = R11728 && R11707 = 0 && R11708 = R11728 && R11709 = 0 && R11710 = R11728 && R11711 = 0 && R11712 = R11728 && R11713 = 0 && R11714 = R11728 && R11715 = 0 && R11716 = R11728 && R11717 = 0 && R11718 = R11728 && R11719 = 0 && R11720 = R11728 && R11721 = 0 && R11722 = R11728 && R11723 = 0 && R11724 = R11728 && R11725 = 0 && R11726 = R11728 && R11727 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R10164 + R10161 < 1 && -1*R11286 + -1*R11282 - R66 < 1 && -1*R11288 + -1*R11284 - R68 < 1 && 0 < R11728 && (R2 != 0 || R20 = 0 || (R11629 = 0 && R11630 = 0)) && (R2 != 0 || R20 = 0 || (R11631 = 0 && R11632 = 0)) && (R2 != 0 || R20 = 0 || (R11633 = 0 && R11634 = 0)) && (R2 != 0 || R20 = 0 || (R11635 = 0 && R11636 = 0)) && (R2 != 0 || R20 = 0 || (R11637 = 0 && R11638 = 0)) && (R2 != 0 || R20 = 0 || (R11639 = 0 && R11640 = 0)) && (R2 != 0 || R20 = 0 || (R11641 = 0 && R11642 = 0)) && (R2 != 0 || R20 = 0 || (R11643 = 0 && R11644 = 0)) && (R2 != 0 || R20 = 0 || (R11645 = 0 && R11646 = 0)) && (R2 != 0 || R20 = 0 || (R11647 = 0 && R11648 = 0)) && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R11286 + -1*R11282 - R66 = 0 || R66 + R11286 + R11282 < 1) && (R59 + R10162 + R10159 != 0 || R60 + R10163 + R10160 + -1*R11286 + -1*R11282 - R66 = 0 || R66 + R11286 + R11282 < 1) && (R66 + R11286 + R11282 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R11288 + R11284 < 1) && (R53 + R94 + R91 = 0 || R68 + R11288 + R11284 < 1))) && (R66 + R11286 + R11282 != 0 || ((R59 + R10162 + R10159 != 0 || R60 + R10163 + R10160 = 0 || R68 + R11288 + R11284 < 1) && (R59 + R10162 + R10159 = 0 || R68 + R11288 + R11284 < 1))) && (R66 + R11286 + R11282 != 0 || ((R73 + R11624 + R11619 != 0 || R74 + R11625 + R11620 = 0 || R68 + R11288 + R11284 < 1) && (R73 + R11624 + R11619 = 0 || R68 + R11288 + R11284 < 1))) && (R68 + R11288 + R11284 != 0 || R77 + R11628 + R11623 = 0 || (R75 + R11626 + R11621 = 0 && R76 + R11627 + R11622 = 0)) && (R73 + R11624 + R11619 != 0 || R66 + R11286 + R11282 + -1*R11625 + -1*R11620 - R74 = 0 || R66 + R11286 + R11282 < 1) && (R75 + R11626 + R11621 != 0 || R68 + R11288 + R11284 + -1*R11627 + -1*R11622 - R76 = 0 || R68 + R11288 + R11284 < 1) && (R11629 != 0 || R2 = R11630 || R2 < 1) && (R11631 != 0 || R2 = R11632 || R2 < 1) && (R11633 != 0 || R2 = R11634 || R2 < 1) && (R11635 != 0 || R2 = R11636 || R2 < 1) && (R11637 != 0 || R2 = R11638 || R2 < 1) && (R11639 != 0 || R2 = R11640 || R2 < 1) && (R11641 != 0 || R2 = R11642 || R2 < 1) && (R11643 != 0 || R2 = R11644 || R2 < 1) && (R11645 != 0 || R2 = R11646 || R2 < 1) && (R11647 != 0 || R2 = R11648 || R2 < 1) && (R21 = 0 || (R11667 = 0 && R11668 = 0)) && (R21 = 0 || (R11671 = 0 && R11672 = 0)) && (R21 = 0 || (R11673 = 0 && R11674 = 0)) && (R21 = 0 || (R11677 = 0 && R11678 = 0)) && (R22 = 0 || (R11649 = 0 && R11650 = 0)) && (R22 = 0 || (R11651 = 0 && R11652 = 0)) && (R22 = 0 || (R11653 = 0 && R11654 = 0)) && (R22 = 0 || (R11655 = 0 && R11656 = 0)) && (R22 = 0 || (R11657 = 0 && R11658 = 0)) && (R22 = 0 || (R11659 = 0 && R11660 = 0)) && (R22 = 0 || (R11661 = 0 && R11662 = 0)) && (R22 = 0 || (R11663 = 0 && R11664 = 0)) && (R22 = 0 || (R11665 = 0 && R11666 = 0)) && (R53 + R94 + R91 = 0 || R66 + R11286 + R11282 < 1) && (R59 + R10162 + R10159 = 0 || R66 + R11286 + R11282 < 1) && (R73 + R11624 + R11619 = 0 || R66 + R11286 + R11282 < 1) && (R75 + R11626 + R11621 = 0 || R68 + R11288 + R11284 < 1) && (R11629 = 0 || R2 < 1) && (R11631 = 0 || R2 < 1) && (R11633 = 0 || R2 < 1) && (R11635 = 0 || R2 < 1) && (R11637 = 0 || R2 < 1) && (R11639 = 0 || R2 < 1) && (R11641 = 0 || R2 < 1) && (R11643 = 0 || R2 < 1) && (R11645 = 0 || R2 < 1) && (R11647 = 0 || R2 < 1);
// End of Parikh automata intersection problem
