// Parikh automata intersection problem, generated by OSTRICH+
counter int R12, R13513, R13514, R13515, R13516, R13517, R13518, R13519, R13520, R13521, R13522, R13523, R13524, R14083, R14084, R14085, R14086, R14087, R14088, R14089, R14090, R14531, R14532, R14533, R14534, R14535, R14536, R14537, R14538, R14539, R14540, R14541, R14542, R14543, R14544, R14545, R14546, R14547, R14548, R14549, R14550, R14551, R14552, R14553, R14554, R14555, R14556, R14557, R14558, R14559, R14560, R14561, R14562, R14563, R14564, R14565, R14566, R14567, R14568, R14569, R14570, R14571, R14572, R14573, R14574, R14575, R14576, R14577, R14578, R14579, R14580, R14581, R14582, R14583, R14584, R14585, R14586, R14587, R14588, R14589, R14590, R14591, R14592, R14593, R14594, R14595, R14596, R14597, R14598, R14599, R14600, R14601, R14602, R14603, R14604, R14605, R14606, R14607, R14608, R14609, R14610, R14611, R14612, R14613, R14614, R14615, R14616, R14617, R14618, R14619, R14620, R14621, R14622, R14623, R14624, R14625, R14626, R14627, R14628, R14629, R14630, R14631, R14632, R14633, R14634, R14635, R14636, R14637, R14638, R14639, R14640, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R4, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R14561 += 1, R14562 += 1 };
  s0 -> s1 [0, 65535] { R14562 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R14562 += 1, R22 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R14564 += 1 };
  s0 -> s0 [0, 65535] { R14563 += 1, R14564 += 1 };
  s0 -> s2 [70, 70] { R14564 += 1 };
  s0 -> s3 [70, 70] { R14564 += 1 };
  s0 -> s1 [76, 65535] { R14564 += 1 };
  s1 -> s1 [0, 69] { R14564 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14564 += 1 };
  s1 -> s3 [70, 70] { R14564 += 1 };
  s1 -> s1 [76, 65535] { R14564 += 1 };
  s2 -> s2 [0, 70] { R14564 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R14564 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R14566 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R14565 += 1, R14566 += 1 };
  s0 -> s2 [70, 70] { R14566 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R14566 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R14566 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R14566 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14566 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R14566 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R14566 += 1, R45 += 1 };
  s2 -> s2 [0, 65535] { R14566 += 1, R45 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R14568 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R14567 += 1, R14568 += 1 };
  s0 -> s2 [70, 70] { R14568 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R14568 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R14568 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R14568 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14568 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R14568 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R14568 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R14568 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R14570 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R14569 += 1, R14570 += 1 };
  s0 -> s2 [70, 70] { R14570 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R14570 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R14570 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R14570 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14570 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R14570 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R14570 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R14570 += 1, R49 += 1, R50 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R14572 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R14571 += 1, R14572 += 1 };
  s0 -> s2 [70, 70] { R14572 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R14572 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R14572 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R14572 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14572 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R14572 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R14572 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535] { R14572 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R14574 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R14573 += 1, R14574 += 1 };
  s0 -> s2 [70, 70] { R14574 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R14574 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R14574 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R14574 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14574 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R14574 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R14574 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R14574 += 1, R59 += 1, R60 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R14576 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R14575 += 1, R14576 += 1 };
  s0 -> s2 [70, 70] { R14576 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R14576 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R14576 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R14576 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14576 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R14576 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R14576 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R14576 += 1, R65 += 1, R66 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R14578 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R14577 += 1, R14578 += 1 };
  s0 -> s2 [70, 70] { R14578 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R14578 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R14578 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R14578 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14578 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R14578 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R14578 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R14578 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R14598 += 1 };
  s0 -> s0 [0, 65535] { R14597 += 1, R14598 += 1 };
  s0 -> s2 [70, 70] { R14598 += 1 };
  s0 -> s1 [71, 65535] { R14598 += 1 };
  s1 -> s1 [0, 69] { R14598 += 1 };
  s1 -> s2 [70, 70] { R14598 += 1 };
  s1 -> s1 [71, 65535] { R14598 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R14598 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R14599 += 1, R14600 += 1 };
  s0 -> s1 [0, 65535] { R14600 += 1, R2 += 1 };
  s1 -> s1 [0, 65535] { R14600 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R14602 += 1 };
  s0 -> s0 [0, 65535] { R14601 += 1, R14602 += 1 };
  s0 -> s2 [0, 65535] { R14602 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R14602 += 1 };
  s0 -> s1 [71, 65535] { R14602 += 1 };
  s1 -> s1 [0, 69] { R14602 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R14602 += 1 };
  s1 -> s1 [71, 65535] { R14602 += 1 };
  s2 -> s1 [0, 69] { R14602 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R14602 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R14602 += 1 };
  s2 -> s1 [71, 65535] { R14602 += 1 };
  s3 -> s3 [0, 65535] { R14602 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R14604 += 1, R14542 += 1 };
  s0 -> s2 [0, 65535] { R14604 += 1, R14541 += 1, R14542 += 1 };
  s0 -> s0 [0, 65535] { R14603 += 1, R14604 += 1 };
  s0 -> s1 [71, 65535] { R14604 += 1, R14542 += 1 };
  s1 -> s1 [0, 69] { R14604 += 1, R14542 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R14604 += 1 };
  s1 -> s1 [71, 65535] { R14604 += 1, R14542 += 1 };
  s2 -> s1 [0, 69] { R14604 += 1, R14542 += 1 };
  s2 -> s2 [0, 65535] { R14604 += 1, R14541 += 1, R14542 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R14604 += 1, R14542 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R14606 += 1, R14543 += 1, R14544 += 1 };
  s0 -> s0 [0, 65535] { R14605 += 1, R14606 += 1 };
  s0 -> s2 [0, 65535] { R14606 += 1, R14544 += 1, R20 += 1 };
  s1 -> s1 [0, 65535] { R14606 += 1, R14543 += 1, R14544 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R14606 += 1, R14544 += 1, R20 += 1 };
  s2 -> s3 [0, 65535] { R14606 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R14606 += 1, R14544 += 1, R20 += 1 };
  s3 -> s3 [0, 65535] { R14606 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R14608 += 1, R14546 += 1 };
  s0 -> s0 [0, 65535] { R14607 += 1, R14608 += 1 };
  s0 -> s2 [0, 65535] { R14608 += 1, R14545 += 1, R14546 += 1 };
  s0 -> s1 [75, 65535] { R14608 += 1, R14546 += 1 };
  s1 -> s1 [0, 70] { R14608 += 1, R14546 += 1 };
  s1 -> s1 [0, 65535] { R14608 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R14608 += 1, R14546 += 1 };
  s2 -> s1 [0, 70] { R14608 += 1, R14546 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R14608 += 1, R14545 += 1, R14546 += 1 };
  s2 -> s1 [75, 65535] { R14608 += 1, R14546 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R14609 += 1, R14610 += 1 };
  s0 -> s1 [0, 65535] { R14610 += 1, R14548 += 1, R84 += 1 };
  s0 -> s2 [0, 65535] { R14610 += 1, R14547 += 1, R14548 += 1 };
  s1 -> s4 [0, 65535] { R14610 += 1 };
  s1 -> s1 [0, 65535] { R14610 += 1, R14548 += 1, R84 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R14610 += 1, R14548 += 1, R84 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R14610 += 1, R14547 += 1, R14548 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R14610 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R14612 += 1, R14550 += 1 };
  s0 -> s2 [0, 65535] { R14612 += 1, R14550 += 1, R86 += 1 };
  s0 -> s3 [0, 65535] { R14612 += 1, R14549 += 1, R14550 += 1 };
  s0 -> s0 [0, 65535] { R14611 += 1, R14612 += 1 };
  s0 -> s1 [76, 65535] { R14612 += 1, R14550 += 1 };
  s1 -> s1 [0, 74] { R14612 += 1, R14550 += 1 };
  s1 -> s1 [0, 65535] { R14612 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [76, 65535] { R14612 += 1, R14550 += 1 };
  s2 -> s1 [0, 74] { R14612 += 1, R14550 += 1 };
  s2 -> s2 [0, 65535] { R14612 += 1, R14550 += 1, R86 += 1 };
  s2 -> s5 [0, 65535] { R14612 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [76, 65535] { R14612 += 1, R14550 += 1 };
  s3 -> s1 [0, 74] { R14612 += 1, R14550 += 1 };
  s3 -> s2 [0, 65535] { R14612 += 1, R14550 += 1, R86 += 1 };
  s3 -> s3 [0, 65535] { R14612 += 1, R14549 += 1, R14550 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [76, 65535] { R14612 += 1, R14550 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R14612 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s0 [0, 65535] { R14613 += 1, R14614 += 1 };
  s0 -> s1 [0, 65535] { R14614 += 1, R14552 += 1 };
  s0 -> s2 [0, 65535] { R14614 += 1, R14552 += 1, R90 += 1 };
  s0 -> s3 [0, 65535] { R14614 += 1, R14551 += 1, R14552 += 1 };
  s1 -> s5 [0, 65535] { R14614 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R14614 += 1, R14552 += 1 };
  s2 -> s5 [0, 65535] { R14614 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R14614 += 1, R14552 += 1 };
  s2 -> s2 [0, 65535] { R14614 += 1, R14552 += 1, R90 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R14614 += 1, R14552 += 1 };
  s3 -> s2 [0, 65535] { R14614 += 1, R14552 += 1, R90 += 1 };
  s3 -> s3 [0, 65535] { R14614 += 1, R14551 += 1, R14552 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R14614 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R14616 += 1, R14553 += 1, R14554 += 1 };
  s0 -> s2 [0, 65535] { R14616 += 1, R14554 += 1, R13517 += 1, R13518 += 1 };
  s0 -> s3 [0, 65535] { R14616 += 1, R14554 += 1 };
  s0 -> s0 [0, 65535] { R14615 += 1, R14616 += 1 };
  s1 -> s1 [0, 65535] { R14616 += 1, R14553 += 1, R14554 += 1 };
  s1 -> s2 [0, 65535] { R14616 += 1, R14554 += 1, R13517 += 1, R13518 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s3 [0, 65535] { R14616 += 1, R14554 += 1 };
  s2 -> s2 [0, 65535] { R14616 += 1, R14554 += 1, R13517 += 1, R13518 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R14616 += 1, R14554 += 1 };
  s2 -> s5 [0, 65535] { R14616 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R14616 += 1, R14554 += 1 };
  s3 -> s5 [0, 65535] { R14616 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R14616 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R14618 += 1, R14556 += 1, R13523 += 1 };
  s0 -> s0 [0, 65535] { R14617 += 1, R14618 += 1 };
  s0 -> s2 [0, 65535] { R14618 += 1, R14555 += 1, R14556 += 1 };
  s0 -> s3 [0, 65535] { R14618 += 1, R14556 += 1, R13523 += 1, R13524 += 1 };
  s0 -> s4 [0, 65535] { R14618 += 1, R14556 += 1, R13522 += 1, R13523 += 1 };
  s0 -> s1 [76, 65535] { R14618 += 1, R14556 += 1, R13523 += 1 };
  s1 -> s1 [0, 74] { R14618 += 1, R14556 += 1, R13523 += 1 };
  s1 -> s5 [0, 65535] { R14618 += 1 };
  s1 -> s1 [0, 65535] { R14618 += 1, R14556 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [76, 65535] { R14618 += 1, R14556 += 1, R13523 += 1 };
  s2 -> s1 [0, 74] { R14618 += 1, R14556 += 1, R13523 += 1 };
  s2 -> s2 [0, 65535] { R14618 += 1, R14555 += 1, R14556 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R14618 += 1, R14556 += 1, R13523 += 1, R13524 += 1 };
  s2 -> s4 [0, 65535] { R14618 += 1, R14556 += 1, R13522 += 1, R13523 += 1 };
  s2 -> s1 [76, 65535] { R14618 += 1, R14556 += 1, R13523 += 1 };
  s3 -> s1 [0, 74] { R14618 += 1, R14556 += 1, R13523 += 1 };
  s3 -> s5 [0, 65535] { R14618 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R14618 += 1, R14556 += 1 };
  s3 -> s3 [0, 65535] { R14618 += 1, R14556 += 1, R13523 += 1, R13524 += 1 };
  s3 -> s1 [76, 65535] { R14618 += 1, R14556 += 1, R13523 += 1 };
  s4 -> s1 [0, 74] { R14618 += 1, R14556 += 1, R13523 += 1 };
  s4 -> s5 [0, 65535] { R14618 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s3 [0, 65535] { R14618 += 1, R14556 += 1, R13523 += 1, R13524 += 1 };
  s4 -> s4 [0, 65535] { R14618 += 1, R14556 += 1, R13522 += 1, R13523 += 1 };
  s4 -> s1 [76, 65535] { R14618 += 1, R14556 += 1, R13523 += 1 };
  s5 -> s5 [0, 65535] { R14618 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R14618 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R14618 += 1, R14556 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R14620 += 1, R14558 += 1, R14088 += 1 };
  s0 -> s0 [0, 65535] { R14619 += 1, R14620 += 1 };
  s0 -> s2 [0, 65535] { R14620 += 1, R14557 += 1, R14558 += 1 };
  s0 -> s3 [0, 65535] { R14620 += 1, R14558 += 1 };
  s1 -> s1 [0, 65535] { R14620 += 1, R14558 += 1, R14088 += 1 };
  s1 -> s4 [0, 65535] { R14620 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R14620 += 1, R14558 += 1 };
  s2 -> s1 [0, 65535] { R14620 += 1, R14558 += 1, R14088 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R14620 += 1, R14557 += 1, R14558 += 1 };
  s2 -> s3 [0, 65535] { R14620 += 1, R14558 += 1 };
  s3 -> s4 [0, 65535] { R14620 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R14620 += 1, R14558 += 1 };
  s4 -> s4 [0, 65535] { R14620 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R14622 += 1, R14560 += 1 };
  s0 -> s0 [0, 65535] { R14621 += 1, R14622 += 1 };
  s0 -> s2 [0, 65535] { R14622 += 1, R14560 += 1, R14537 += 1, R14539 += 1, R14540 += 1 };
  s0 -> s3 [0, 65535] { R14622 += 1, R14560 += 1, R14537 += 1, R14538 += 1, R14539 += 1 };
  s0 -> s4 [0, 65535] { R14622 += 1, R14559 += 1, R14560 += 1 };
  s1 -> s1 [0, 65535] { R14622 += 1, R14560 += 1 };
  s1 -> s6 [0, 65535] { R14622 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R14622 += 1, R14560 += 1, R14537 += 1 };
  s2 -> s1 [0, 65535] { R14622 += 1, R14560 += 1 };
  s2 -> s2 [0, 65535] { R14622 += 1, R14560 += 1, R14537 += 1, R14539 += 1, R14540 += 1 };
  s2 -> s6 [0, 65535] { R14622 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R14622 += 1, R14560 += 1 };
  s3 -> s2 [0, 65535] { R14622 += 1, R14560 += 1, R14537 += 1, R14539 += 1, R14540 += 1 };
  s3 -> s6 [0, 65535] { R14622 += 1 };
  s3 -> s3 [0, 65535] { R14622 += 1, R14560 += 1, R14537 += 1, R14538 += 1, R14539 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R14622 += 1, R14560 += 1 };
  s4 -> s2 [0, 65535] { R14622 += 1, R14560 += 1, R14537 += 1, R14539 += 1, R14540 += 1 };
  s4 -> s3 [0, 65535] { R14622 += 1, R14560 += 1, R14537 += 1, R14538 += 1, R14539 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R14622 += 1, R14559 += 1, R14560 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R14622 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R14622 += 1, R14560 += 1, R14537 += 1 };
  s7 -> s1 [0, 65535] { R14622 += 1, R14560 += 1 };
  s7 -> s6 [0, 65535] { R14622 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R14624 += 1, R14579 += 1, R14580 += 1 };
  s0 -> s2 [0, 65535] { R14624 += 1, R14580 += 1, R21 += 1 };
  s0 -> s0 [0, 65535] { R14623 += 1, R14624 += 1 };
  s1 -> s1 [0, 65535] { R14624 += 1, R14579 += 1, R14580 += 1 };
  s1 -> s2 [0, 65535] { R14624 += 1, R14580 += 1, R21 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R14624 += 1, R14580 += 1, R21 += 1 };
  s2 -> s3 [0, 65535] { R14624 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R14624 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R14626 += 1, R14582 += 1 };
  s0 -> s2 [0, 65535] { R14626 += 1, R14581 += 1, R14582 += 1 };
  s0 -> s0 [0, 65535] { R14625 += 1, R14626 += 1 };
  s0 -> s3 [70, 70] { R14626 += 1, R14582 += 1 };
  s0 -> s4 [70, 70] { R14626 += 1, R14582 += 1 };
  s0 -> s5 [75, 75] { R14626 += 1, R14582 += 1 };
  s0 -> s1 [76, 65535] { R14626 += 1, R14582 += 1 };
  s1 -> s1 [0, 69] { R14626 += 1, R14582 += 1 };
  s1 -> s3 [70, 70] { R14626 += 1, R14582 += 1 };
  s1 -> s4 [70, 70] { R14626 += 1, R14582 += 1 };
  s1 -> s5 [75, 75] { R14626 += 1, R14582 += 1 };
  s1 -> s1 [76, 65535] { R14626 += 1, R14582 += 1 };
  s2 -> s1 [0, 69] { R14626 += 1, R14582 += 1 };
  s2 -> s2 [0, 65535] { R14626 += 1, R14581 += 1, R14582 += 1 };
  s2 -> s3 [70, 70] { R14626 += 1, R14582 += 1 };
  s2 -> s4 [70, 70] { R14626 += 1, R14582 += 1 };
  s2 -> s5 [75, 75] { R14626 += 1, R14582 += 1 };
  s2 -> s1 [76, 65535] { R14626 += 1, R14582 += 1 };
  s3 -> s3 [0, 70] { R14626 += 1, R14582 += 1 };
  s3 -> s7 [75, 75] { R14626 += 1, R14582 += 1 };
  s3 -> s3 [76, 65535] { R14626 += 1, R14582 += 1 };
  s5 -> s5 [0, 69] { R14626 += 1, R14582 += 1 };
  s5 -> s5 [0, 65535] { R14626 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R14626 += 1, R14582 += 1 };
  s5 -> s8 [70, 70] { R14626 += 1, R14582 += 1 };
  s5 -> s5 [75, 65535] { R14626 += 1, R14582 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R14626 += 1, R14582 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R14626 += 1 };
  s7 -> s7 [75, 65535] { R14626 += 1, R14582 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R14626 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R14628 += 1, R14584 += 1, R83 += 1 };
  s0 -> s2 [0, 65535] { R14628 += 1, R14583 += 1, R14584 += 1 };
  s0 -> s0 [0, 65535] { R14627 += 1, R14628 += 1 };
  s0 -> s3 [70, 70] { R14628 += 1, R14584 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R14628 += 1, R14584 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R14628 += 1, R14584 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R14628 += 1, R14584 += 1, R83 += 1 };
  s1 -> s1 [0, 65535] { R14628 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R14628 += 1, R14584 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R14628 += 1, R14584 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R14628 += 1, R14584 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R14628 += 1, R14584 += 1, R83 += 1 };
  s2 -> s2 [0, 65535] { R14628 += 1, R14583 += 1, R14584 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R14628 += 1, R14584 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R14628 += 1, R14584 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R14628 += 1, R14584 += 1, R83 += 1 };
  s3 -> s6 [0, 65535] { R14628 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R14628 += 1, R14584 += 1, R83 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R14628 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R14628 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R14630 += 1, R14586 += 1, R85 += 1 };
  s0 -> s2 [0, 65535] { R14630 += 1, R14585 += 1, R14586 += 1 };
  s0 -> s0 [0, 65535] { R14629 += 1, R14630 += 1 };
  s0 -> s3 [70, 70] { R14630 += 1, R14586 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R14630 += 1, R14586 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R14630 += 1, R14586 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R14630 += 1, R14586 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R14630 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R14630 += 1, R14586 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R14630 += 1, R14586 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R14630 += 1, R14586 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R14630 += 1, R14586 += 1, R85 += 1 };
  s2 -> s2 [0, 65535] { R14630 += 1, R14585 += 1, R14586 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R14630 += 1, R14586 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R14630 += 1, R14586 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R14630 += 1, R14586 += 1, R85 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R14630 += 1 };
  s4 -> s5 [0, 65535] { R14630 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R14630 += 1, R14586 += 1, R85 += 1 };
  s5 -> s5 [0, 65535] { R14630 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R14632 += 1, R14588 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R14632 += 1, R14588 += 1, R88 += 1 };
  s0 -> s3 [0, 65535] { R14632 += 1, R14587 += 1, R14588 += 1 };
  s0 -> s0 [0, 65535] { R14631 += 1, R14632 += 1 };
  s0 -> s4 [70, 70] { R14632 += 1, R14588 += 1, R87 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R14632 += 1, R14588 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R14632 += 1, R14588 += 1, R87 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R14632 += 1, R14588 += 1, R88 += 1 };
  s0 -> s2 [71, 74] { R14632 += 1, R14588 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R14632 += 1, R14588 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R14632 += 1, R14588 += 1, R88 += 1 };
  s0 -> s2 [76, 65535] { R14632 += 1, R14588 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R14632 += 1, R14588 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [0, 69] { R14632 += 1, R14588 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R14632 += 1, R14588 += 1, R87 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R14632 += 1, R14588 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R14632 += 1, R14588 += 1, R87 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R14632 += 1, R14588 += 1, R88 += 1 };
  s1 -> s2 [71, 74] { R14632 += 1, R14588 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R14632 += 1, R14588 += 1, R87 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R14632 += 1, R14588 += 1, R88 += 1 };
  s1 -> s2 [76, 65535] { R14632 += 1, R14588 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R14632 += 1, R14588 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R14632 += 1, R14588 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R14632 += 1, R14588 += 1, R88 += 1 };
  s2 -> s2 [71, 74] { R14632 += 1, R14588 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R14632 += 1, R14588 += 1, R88 += 1 };
  s2 -> s2 [76, 65535] { R14632 += 1, R14588 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R14632 += 1, R14588 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R14632 += 1, R14588 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R14632 += 1, R14587 += 1, R14588 += 1 };
  s3 -> s4 [70, 70] { R14632 += 1, R14588 += 1, R87 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R14632 += 1, R14588 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R14632 += 1, R14588 += 1, R87 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R14632 += 1, R14588 += 1, R88 += 1 };
  s3 -> s2 [71, 74] { R14632 += 1, R14588 += 1, R88 += 1 };
  s3 -> s1 [71, 65535] { R14632 += 1, R14588 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R14632 += 1, R14588 += 1, R88 += 1 };
  s3 -> s2 [76, 65535] { R14632 += 1, R14588 += 1, R88 += 1 };
  s4 -> s7 [0, 74] { R14632 += 1, R14588 += 1, R88 += 1 };
  s4 -> s4 [0, 65535] { R14632 += 1, R14588 += 1, R87 += 1, R88 += 1 };
  s4 -> s10 [75, 75] { R14632 += 1, R14588 += 1, R88 += 1 };
  s4 -> s7 [76, 65535] { R14632 += 1, R14588 += 1, R88 += 1 };
  s7 -> s7 [0, 74] { R14632 += 1, R14588 += 1, R88 += 1 };
  s7 -> s10 [75, 75] { R14632 += 1, R14588 += 1, R88 += 1 };
  s7 -> s7 [76, 65535] { R14632 += 1, R14588 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R14632 += 1, R14588 += 1, R88 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R14632 += 1 };
  s8 -> s10 [70, 70] { R14632 += 1, R14588 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R14632 += 1, R14588 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R14632 += 1, R14588 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R14632 += 1, R14588 += 1, R88 += 1 };
  s10 -> s9 [0, 65535];
  s10 -> s12 [0, 65535] { R14632 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R14632 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R14632 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R14634 += 1, R14590 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s2 [0, 69] { R14634 += 1, R14590 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s0 [0, 65535] { R14633 += 1, R14634 += 1 };
  s0 -> s3 [0, 65535] { R14634 += 1, R14589 += 1, R14590 += 1 };
  s0 -> s4 [70, 70] { R14634 += 1, R14590 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s5 [70, 70] { R14634 += 1, R14590 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s6 [70, 70] { R14634 += 1, R14590 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s7 [70, 70] { R14634 += 1, R14590 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s1 [71, 65535] { R14634 += 1, R14590 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s2 [71, 65535] { R14634 += 1, R14590 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s1 [0, 69] { R14634 += 1, R14590 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s1 [0, 65535] { R14634 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s5 [70, 70] { R14634 += 1, R14590 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s7 [70, 70] { R14634 += 1, R14590 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s1 [71, 65535] { R14634 += 1, R14590 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s1 [0, 69] { R14634 += 1, R14590 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [0, 69] { R14634 += 1, R14590 += 1, R13513 += 1, R13514 += 1 };
  s2 -> s4 [70, 70] { R14634 += 1, R14590 += 1, R13513 += 1, R13514 += 1 };
  s2 -> s5 [70, 70] { R14634 += 1, R14590 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s6 [70, 70] { R14634 += 1, R14590 += 1, R13513 += 1, R13514 += 1 };
  s2 -> s7 [70, 70] { R14634 += 1, R14590 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s1 [71, 65535] { R14634 += 1, R14590 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [71, 65535] { R14634 += 1, R14590 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s1 [0, 69] { R14634 += 1, R14590 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s2 [0, 69] { R14634 += 1, R14590 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s3 [0, 65535] { R14634 += 1, R14589 += 1, R14590 += 1 };
  s3 -> s4 [70, 70] { R14634 += 1, R14590 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s5 [70, 70] { R14634 += 1, R14590 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s6 [70, 70] { R14634 += 1, R14590 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s7 [70, 70] { R14634 += 1, R14590 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s1 [71, 65535] { R14634 += 1, R14590 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s2 [71, 65535] { R14634 += 1, R14590 += 1, R13513 += 1, R13514 += 1 };
  s4 -> s4 [0, 65535] { R14634 += 1, R14590 += 1, R13513 += 1, R13514 += 1 };
  s4 -> s7 [0, 65535] { R14634 += 1, R14590 += 1, R13514 += 1, R13515 += 1 };
  s5 -> s5 [0, 65535] { R14634 += 1 };
  s5 -> s9 [0, 65535];
  s7 -> s8 [0, 65535] { R14634 += 1 };
  s7 -> s9 [0, 65535];
  s7 -> s7 [0, 65535] { R14634 += 1, R14590 += 1, R13514 += 1, R13515 += 1 };
  s8 -> s8 [0, 65535] { R14634 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  accepting s8, s5, s9, s1, s7;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R14636 += 1, R14592 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s2 [0, 65535] { R14636 += 1, R14591 += 1, R14592 += 1 };
  s0 -> s0 [0, 65535] { R14635 += 1, R14636 += 1 };
  s0 -> s3 [70, 70] { R14636 += 1, R14592 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s4 [70, 70] { R14636 += 1, R14592 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s1 [71, 65535] { R14636 += 1, R14592 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [0, 69] { R14636 += 1, R14592 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R14636 += 1 };
  s1 -> s3 [70, 70] { R14636 += 1, R14592 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s4 [70, 70] { R14636 += 1, R14592 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [71, 65535] { R14636 += 1, R14592 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s1 [0, 69] { R14636 += 1, R14592 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R14636 += 1, R14591 += 1, R14592 += 1 };
  s2 -> s3 [70, 70] { R14636 += 1, R14592 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s4 [70, 70] { R14636 += 1, R14592 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s1 [71, 65535] { R14636 += 1, R14592 += 1, R13519 += 1, R13520 += 1 };
  s3 -> s3 [0, 65535] { R14636 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R14636 += 1, R14592 += 1, R13519 += 1, R13520 += 1 };
  s4 -> s6 [0, 65535] { R14636 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R14636 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s0 -> s2 [0, 69] { R14638 += 1, R14594 += 1, R14083 += 1, R14084 += 1 };
  s0 -> s3 [0, 69] { R14638 += 1, R14594 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s0 -> s0 [0, 65535] { R14637 += 1, R14638 += 1 };
  s0 -> s4 [0, 65535] { R14638 += 1, R14593 += 1, R14594 += 1 };
  s0 -> s5 [70, 70] { R14638 += 1, R14594 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s0 -> s6 [70, 70] { R14638 += 1, R14594 += 1, R14083 += 1, R14084 += 1 };
  s0 -> s7 [70, 70] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s0 -> s8 [70, 70] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s0 -> s9 [70, 70] { R14638 += 1, R14594 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s0 -> s10 [70, 70] { R14638 += 1, R14594 += 1, R14083 += 1, R14084 += 1 };
  s0 -> s1 [71, 74] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s0 -> s2 [71, 65535] { R14638 += 1, R14594 += 1, R14083 += 1, R14084 += 1 };
  s0 -> s3 [71, 65535] { R14638 += 1, R14594 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s0 -> s11 [75, 75] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s0 -> s1 [76, 65535] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s1 -> s1 [0, 69] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s1 -> s7 [70, 70] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s1 -> s8 [70, 70] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s1 -> s1 [71, 74] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s1 -> s11 [75, 75] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s1 -> s1 [76, 65535] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s2 -> s1 [0, 69] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s2 -> s2 [0, 69] { R14638 += 1, R14594 += 1, R14083 += 1, R14084 += 1 };
  s2 -> s3 [0, 69] { R14638 += 1, R14594 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s2 -> s5 [70, 70] { R14638 += 1, R14594 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s2 -> s6 [70, 70] { R14638 += 1, R14594 += 1, R14083 += 1, R14084 += 1 };
  s2 -> s7 [70, 70] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s2 -> s8 [70, 70] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s2 -> s9 [70, 70] { R14638 += 1, R14594 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s2 -> s10 [70, 70] { R14638 += 1, R14594 += 1, R14083 += 1, R14084 += 1 };
  s2 -> s1 [71, 74] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s2 -> s2 [71, 65535] { R14638 += 1, R14594 += 1, R14083 += 1, R14084 += 1 };
  s2 -> s3 [71, 65535] { R14638 += 1, R14594 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s2 -> s11 [75, 75] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s2 -> s1 [76, 65535] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s3 -> s1 [0, 69] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s3 -> s3 [0, 69] { R14638 += 1, R14594 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s3 -> s5 [70, 70] { R14638 += 1, R14594 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s3 -> s7 [70, 70] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s3 -> s8 [70, 70] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s3 -> s9 [70, 70] { R14638 += 1, R14594 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s3 -> s1 [71, 74] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s3 -> s3 [71, 65535] { R14638 += 1, R14594 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s3 -> s11 [75, 75] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s3 -> s1 [76, 65535] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s4 -> s1 [0, 69] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s4 -> s2 [0, 69] { R14638 += 1, R14594 += 1, R14083 += 1, R14084 += 1 };
  s4 -> s3 [0, 69] { R14638 += 1, R14594 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s4 -> s4 [0, 65535] { R14638 += 1, R14593 += 1, R14594 += 1 };
  s4 -> s5 [70, 70] { R14638 += 1, R14594 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s4 -> s6 [70, 70] { R14638 += 1, R14594 += 1, R14083 += 1, R14084 += 1 };
  s4 -> s7 [70, 70] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s4 -> s8 [70, 70] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s4 -> s9 [70, 70] { R14638 += 1, R14594 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s4 -> s10 [70, 70] { R14638 += 1, R14594 += 1, R14083 += 1, R14084 += 1 };
  s4 -> s1 [71, 74] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s4 -> s2 [71, 65535] { R14638 += 1, R14594 += 1, R14083 += 1, R14084 += 1 };
  s4 -> s3 [71, 65535] { R14638 += 1, R14594 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s4 -> s11 [75, 75] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s4 -> s1 [76, 65535] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s6 -> s8 [0, 74] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s6 -> s6 [0, 65535] { R14638 += 1, R14594 += 1, R14083 += 1, R14084 += 1 };
  s6 -> s9 [0, 65535] { R14638 += 1, R14594 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s6 -> s16 [75, 75] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s6 -> s8 [76, 65535] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s8 -> s8 [0, 74] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s8 -> s16 [75, 75] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s8 -> s8 [76, 65535] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s9 -> s8 [0, 74] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s9 -> s9 [0, 65535] { R14638 += 1, R14594 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s9 -> s16 [75, 75] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s9 -> s8 [76, 65535] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s11 -> s11 [0, 69] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s11 -> s12 [0, 69] { R14638 += 1, R14594 += 1, R14084 += 1 };
  s11 -> s13 [70, 70] { R14638 += 1, R14594 += 1, R14084 += 1 };
  s11 -> s14 [70, 70] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s11 -> s15 [70, 70] { R14638 += 1, R14594 += 1, R14084 += 1 };
  s11 -> s16 [70, 70] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s11 -> s11 [71, 65535] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s11 -> s12 [71, 65535] { R14638 += 1, R14594 += 1, R14084 += 1 };
  s12 -> s12 [0, 69] { R14638 += 1, R14594 += 1, R14084 += 1 };
  s12 -> s12 [0, 65535] { R14638 += 1 };
  s12 -> s17 [0, 65535];
  s12 -> s13 [70, 70] { R14638 += 1, R14594 += 1, R14084 += 1 };
  s12 -> s15 [70, 70] { R14638 += 1, R14594 += 1, R14084 += 1 };
  s12 -> s12 [71, 65535] { R14638 += 1, R14594 += 1, R14084 += 1 };
  s13 -> s13 [0, 65535] { R14638 += 1, R14594 += 1, R14084 += 1 };
  s13 -> s18 [0, 65535] { R14638 += 1 };
  s13 -> s17 [0, 65535];
  s15 -> s15 [0, 65535] { R14638 += 1 };
  s15 -> s17 [0, 65535];
  s16 -> s13 [0, 65535] { R14638 += 1, R14594 += 1, R14084 += 1 };
  s16 -> s16 [0, 65535] { R14638 += 1, R14594 += 1, R14084 += 1, R14086 += 1 };
  s17 -> s17 [0, 65535];
  s18 -> s18 [0, 65535] { R14638 += 1 };
  s18 -> s17 [0, 65535];
  accepting s17, s12, s13, s18, s15;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R14640 += 1, R14596 += 1, R14531 += 1, R14532 += 1 };
  s0 -> s2 [0, 69] { R14640 += 1, R14596 += 1, R14532 += 1, R14533 += 1, R14534 += 1 };
  s0 -> s3 [0, 65535] { R14640 += 1, R14595 += 1, R14596 += 1 };
  s0 -> s0 [0, 65535] { R14639 += 1, R14640 += 1 };
  s0 -> s4 [70, 70] { R14640 += 1, R14596 += 1, R14532 += 1, R14533 += 1, R14534 += 1 };
  s0 -> s5 [70, 70] { R14640 += 1, R14596 += 1, R14531 += 1, R14532 += 1 };
  s0 -> s6 [70, 70] { R14640 += 1, R14596 += 1, R14532 += 1, R14533 += 1, R14534 += 1 };
  s0 -> s7 [70, 70] { R14640 += 1, R14596 += 1, R14531 += 1, R14532 += 1 };
  s0 -> s1 [71, 65535] { R14640 += 1, R14596 += 1, R14531 += 1, R14532 += 1 };
  s0 -> s2 [71, 65535] { R14640 += 1, R14596 += 1, R14532 += 1, R14533 += 1, R14534 += 1 };
  s1 -> s1 [0, 69] { R14640 += 1, R14596 += 1, R14531 += 1, R14532 += 1 };
  s1 -> s2 [0, 69] { R14640 += 1, R14596 += 1, R14532 += 1, R14533 += 1, R14534 += 1 };
  s1 -> s4 [70, 70] { R14640 += 1, R14596 += 1, R14532 += 1, R14533 += 1, R14534 += 1 };
  s1 -> s5 [70, 70] { R14640 += 1, R14596 += 1, R14531 += 1, R14532 += 1 };
  s1 -> s6 [70, 70] { R14640 += 1, R14596 += 1, R14532 += 1, R14533 += 1, R14534 += 1 };
  s1 -> s7 [70, 70] { R14640 += 1, R14596 += 1, R14531 += 1, R14532 += 1 };
  s1 -> s1 [71, 65535] { R14640 += 1, R14596 += 1, R14531 += 1, R14532 += 1 };
  s1 -> s2 [71, 65535] { R14640 += 1, R14596 += 1, R14532 += 1, R14533 += 1, R14534 += 1 };
  s2 -> s2 [0, 69] { R14640 += 1, R14596 += 1, R14532 += 1, R14533 += 1, R14534 += 1 };
  s2 -> s2 [0, 65535] { R14640 += 1 };
  s2 -> s9 [0, 65535];
  s2 -> s4 [70, 70] { R14640 += 1, R14596 += 1, R14532 += 1, R14533 += 1, R14534 += 1 };
  s2 -> s6 [70, 70] { R14640 += 1, R14596 += 1, R14532 += 1, R14533 += 1, R14534 += 1 };
  s2 -> s2 [71, 65535] { R14640 += 1, R14596 += 1, R14532 += 1, R14533 += 1, R14534 += 1 };
  s3 -> s1 [0, 69] { R14640 += 1, R14596 += 1, R14531 += 1, R14532 += 1 };
  s3 -> s2 [0, 69] { R14640 += 1, R14596 += 1, R14532 += 1, R14533 += 1, R14534 += 1 };
  s3 -> s3 [0, 65535] { R14640 += 1, R14595 += 1, R14596 += 1 };
  s3 -> s4 [70, 70] { R14640 += 1, R14596 += 1, R14532 += 1, R14533 += 1, R14534 += 1 };
  s3 -> s5 [70, 70] { R14640 += 1, R14596 += 1, R14531 += 1, R14532 += 1 };
  s3 -> s6 [70, 70] { R14640 += 1, R14596 += 1, R14532 += 1, R14533 += 1, R14534 += 1 };
  s3 -> s7 [70, 70] { R14640 += 1, R14596 += 1, R14531 += 1, R14532 += 1 };
  s3 -> s1 [71, 65535] { R14640 += 1, R14596 += 1, R14531 += 1, R14532 += 1 };
  s3 -> s2 [71, 65535] { R14640 += 1, R14596 += 1, R14532 += 1, R14533 += 1, R14534 += 1 };
  s4 -> s4 [0, 65535] { R14640 += 1 };
  s4 -> s9 [0, 65535];
  s5 -> s5 [0, 65535] { R14640 += 1, R14596 += 1, R14531 += 1, R14532 += 1 };
  s5 -> s6 [0, 65535] { R14640 += 1, R14596 += 1, R14532 += 1, R14533 += 1, R14534 += 1 };
  s6 -> s8 [0, 65535] { R14640 += 1 };
  s6 -> s6 [0, 65535] { R14640 += 1, R14596 += 1, R14532 += 1, R14533 += 1, R14534 += 1 };
  s6 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R14640 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  accepting s4, s8, s2, s9, s6;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R14640 && R23 - R14640 = -1 && R24 = R14640 && R25 - R14640 = -1 && R26 = R14640 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R14088 + -1*R14084 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R14088 + -1*R14084 - R66 = 0 && R55 + R13518 + R13515 + -1*R14090 + -1*R14086 - R68 = 0 && R65 + R14087 + R14083 = 0 && R67 + R14089 + R14085 = 0 && R14581 = 0 && R14582 = 0 && R14587 = 0 && R14588 = 0 && R14589 = 0 && R14590 = 0 && R14593 = 0 && R14594 = 0 && R14595 = 0 && R14596 = 0 && R14597 = 0 && R14598 = R14640 && R14599 = 0 && R14600 = R14640 && R14601 = 0 && R14602 = R14640 && R14603 = 0 && R14604 = R14640 && R14605 = 0 && R14606 = R14640 && R14607 = 0 && R14608 = R14640 && R14609 = 0 && R14610 = R14640 && R14611 = 0 && R14612 = R14640 && R14613 = 0 && R14614 = R14640 && R14615 = 0 && R14616 = R14640 && R14617 = 0 && R14618 = R14640 && R14619 = 0 && R14620 = R14640 && R14621 = 0 && R14622 = R14640 && R14623 = 0 && R14624 = R14640 && R14625 = 0 && R14626 = R14640 && R14627 = 0 && R14628 = R14640 && R14629 = 0 && R14630 = R14640 && R14631 = 0 && R14632 = R14640 && R14633 = 0 && R14634 = R14640 && R14635 = 0 && R14636 = R14640 && R14637 = 0 && R14638 = R14640 && R14639 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R13524 + R13521 < 1 && -1*R14088 + -1*R14084 - R66 < 1 && -1*R14090 + -1*R14086 - R68 < 1 && 0 < R14640 && (R2 != 0 || R20 = 0 || (R14541 = 0 && R14542 = 0)) && (R2 != 0 || R20 = 0 || (R14543 = 0 && R14544 = 0)) && (R2 != 0 || R20 = 0 || (R14545 = 0 && R14546 = 0)) && (R2 != 0 || R20 = 0 || (R14547 = 0 && R14548 = 0)) && (R2 != 0 || R20 = 0 || (R14549 = 0 && R14550 = 0)) && (R2 != 0 || R20 = 0 || (R14551 = 0 && R14552 = 0)) && (R2 != 0 || R20 = 0 || (R14553 = 0 && R14554 = 0)) && (R2 != 0 || R20 = 0 || (R14555 = 0 && R14556 = 0)) && (R2 != 0 || R20 = 0 || (R14557 = 0 && R14558 = 0)) && (R2 != 0 || R20 = 0 || (R14559 = 0 && R14560 = 0)) && (R53 + R13516 + R13513 != 0 || R54 + R13517 + R13514 + -1*R14088 + -1*R14084 - R66 = 0 || R66 + R14088 + R14084 < 1) && (R59 + R13522 + R13519 != 0 || R60 + R13523 + R13520 + -1*R14088 + -1*R14084 - R66 = 0 || R66 + R14088 + R14084 < 1) && (R66 + R14088 + R14084 != 0 || ((R53 + R13516 + R13513 != 0 || R54 + R13517 + R13514 = 0 || R68 + R14090 + R14086 < 1) && (R53 + R13516 + R13513 = 0 || R68 + R14090 + R14086 < 1))) && (R66 + R14088 + R14084 != 0 || ((R59 + R13522 + R13519 != 0 || R60 + R13523 + R13520 = 0 || R68 + R14090 + R14086 < 1) && (R59 + R13522 + R13519 = 0 || R68 + R14090 + R14086 < 1))) && (R66 + R14088 + R14084 != 0 || ((R73 + R14536 + R14531 != 0 || R74 + R14537 + R14532 = 0 || R68 + R14090 + R14086 < 1) && (R73 + R14536 + R14531 = 0 || R68 + R14090 + R14086 < 1))) && (R68 + R14090 + R14086 != 0 || R77 + R14540 + R14535 = 0 || (R75 + R14538 + R14533 = 0 && R76 + R14539 + R14534 = 0)) && (R73 + R14536 + R14531 != 0 || R66 + R14088 + R14084 + -1*R14537 + -1*R14532 - R74 = 0 || R66 + R14088 + R14084 < 1) && (R75 + R14538 + R14533 != 0 || R68 + R14090 + R14086 + -1*R14539 + -1*R14534 - R76 = 0 || R68 + R14090 + R14086 < 1) && (R14541 != 0 || R2 = R14542 || R2 < 1) && (R14543 != 0 || R2 = R14544 || R2 < 1) && (R14545 != 0 || R2 = R14546 || R2 < 1) && (R14547 != 0 || R2 = R14548 || R2 < 1) && (R14549 != 0 || R2 = R14550 || R2 < 1) && (R14551 != 0 || R2 = R14552 || R2 < 1) && (R14553 != 0 || R2 = R14554 || R2 < 1) && (R14555 != 0 || R2 = R14556 || R2 < 1) && (R14557 != 0 || R2 = R14558 || R2 < 1) && (R14559 != 0 || R2 = R14560 || R2 < 1) && (R21 = 0 || (R14579 = 0 && R14580 = 0)) && (R21 = 0 || (R14583 = 0 && R14584 = 0)) && (R21 = 0 || (R14585 = 0 && R14586 = 0)) && (R21 = 0 || (R14591 = 0 && R14592 = 0)) && (R22 = 0 || (R14561 = 0 && R14562 = 0)) && (R22 = 0 || (R14563 = 0 && R14564 = 0)) && (R22 = 0 || (R14565 = 0 && R14566 = 0)) && (R22 = 0 || (R14567 = 0 && R14568 = 0)) && (R22 = 0 || (R14569 = 0 && R14570 = 0)) && (R22 = 0 || (R14571 = 0 && R14572 = 0)) && (R22 = 0 || (R14573 = 0 && R14574 = 0)) && (R22 = 0 || (R14575 = 0 && R14576 = 0)) && (R22 = 0 || (R14577 = 0 && R14578 = 0)) && (R53 + R13516 + R13513 = 0 || R66 + R14088 + R14084 < 1) && (R59 + R13522 + R13519 = 0 || R66 + R14088 + R14084 < 1) && (R73 + R14536 + R14531 = 0 || R66 + R14088 + R14084 < 1) && (R75 + R14538 + R14533 = 0 || R68 + R14090 + R14086 < 1) && (R14541 = 0 || R2 < 1) && (R14543 = 0 || R2 < 1) && (R14545 = 0 || R2 < 1) && (R14547 = 0 || R2 < 1) && (R14549 = 0 || R2 < 1) && (R14551 = 0 || R2 < 1) && (R14553 = 0 || R2 < 1) && (R14555 = 0 || R2 < 1) && (R14557 = 0 || R2 < 1) && (R14559 = 0 || R2 < 1);
// End of Parikh automata intersection problem
