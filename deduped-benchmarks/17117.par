// Parikh automata intersection problem, generated by OSTRICH+
counter int R10159, R10160, R10161, R10162, R10163, R10164, R12, R12955, R12956, R12957, R12958, R12959, R12960, R12961, R12962, R12963, R12964, R12965, R12966, R12967, R12968, R12969, R12970, R12971, R12972, R12973, R12974, R12975, R12976, R12977, R12978, R12979, R12980, R12981, R12982, R12983, R12984, R12985, R12986, R12987, R12988, R12989, R12990, R12991, R12992, R12993, R12994, R12995, R12996, R12997, R12998, R12999, R13000, R13001, R13002, R13003, R13004, R13005, R13006, R13007, R13008, R13009, R13010, R13011, R13012, R13013, R13014, R13015, R13016, R13017, R13018, R13019, R13020, R13021, R13022, R13023, R13024, R13025, R13026, R13027, R13028, R13029, R13030, R13031, R13032, R13033, R13034, R13035, R13036, R13037, R13038, R13039, R13040, R13041, R13042, R13043, R13044, R13045, R13046, R13047, R13048, R13049, R13050, R13051, R13052, R13053, R13054, R13055, R13056, R13057, R13058, R13059, R13060, R13061, R13062, R13063, R13064, R13065, R13066, R13067, R13068, R13069, R13070, R13071, R13072, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R4, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R12993 += 1, R12994 += 1 };
  s0 -> s1 [0, 65535] { R12994 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R12994 += 1, R22 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R12996 += 1 };
  s0 -> s0 [0, 65535] { R12995 += 1, R12996 += 1 };
  s0 -> s2 [70, 70] { R12996 += 1 };
  s0 -> s3 [70, 70] { R12996 += 1 };
  s0 -> s1 [76, 65535] { R12996 += 1 };
  s1 -> s1 [0, 69] { R12996 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R12996 += 1 };
  s1 -> s3 [70, 70] { R12996 += 1 };
  s1 -> s1 [76, 65535] { R12996 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R12996 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R12996 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R12998 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R12997 += 1, R12998 += 1 };
  s0 -> s2 [70, 70] { R12998 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R12998 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R12998 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R12998 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R12998 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R12998 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R12998 += 1, R45 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R12998 += 1, R45 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R13000 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R12999 += 1, R13000 += 1 };
  s0 -> s2 [70, 70] { R13000 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R13000 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R13000 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R13000 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13000 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R13000 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R13000 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R13000 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R13002 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R13001 += 1, R13002 += 1 };
  s0 -> s2 [70, 70] { R13002 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R13002 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R13002 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R13002 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13002 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R13002 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R13002 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R13002 += 1, R49 += 1, R50 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R13004 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R13003 += 1, R13004 += 1 };
  s0 -> s2 [70, 70] { R13004 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R13004 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R13004 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R13004 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13004 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R13004 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R13004 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13004 += 1, R53 += 1, R54 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R13006 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R13005 += 1, R13006 += 1 };
  s0 -> s2 [70, 70] { R13006 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R13006 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R13006 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R13006 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13006 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R13006 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R13006 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13006 += 1, R59 += 1, R60 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R13008 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R13007 += 1, R13008 += 1 };
  s0 -> s2 [70, 70] { R13008 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R13008 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R13008 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R13008 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13008 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R13008 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R13008 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13008 += 1, R65 += 1, R66 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R13010 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R13009 += 1, R13010 += 1 };
  s0 -> s2 [70, 70] { R13010 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R13010 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R13010 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R13010 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R13010 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R13010 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R13010 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13010 += 1, R73 += 1, R74 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R13030 += 1 };
  s0 -> s0 [0, 65535] { R13029 += 1, R13030 += 1 };
  s0 -> s2 [70, 70] { R13030 += 1 };
  s0 -> s1 [71, 65535] { R13030 += 1 };
  s1 -> s1 [0, 69] { R13030 += 1 };
  s1 -> s2 [70, 70] { R13030 += 1 };
  s1 -> s1 [71, 65535] { R13030 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13030 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R13032 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R13031 += 1, R13032 += 1 };
  s1 -> s1 [0, 65535] { R13032 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R13034 += 1 };
  s0 -> s0 [0, 65535] { R13033 += 1, R13034 += 1 };
  s0 -> s2 [0, 65535] { R13034 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R13034 += 1 };
  s0 -> s1 [71, 65535] { R13034 += 1 };
  s1 -> s1 [0, 69] { R13034 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R13034 += 1 };
  s1 -> s1 [71, 65535] { R13034 += 1 };
  s2 -> s1 [0, 69] { R13034 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13034 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R13034 += 1 };
  s2 -> s1 [71, 65535] { R13034 += 1 };
  s3 -> s3 [0, 65535] { R13034 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R13036 += 1, R12974 += 1 };
  s0 -> s0 [0, 65535] { R13035 += 1, R13036 += 1 };
  s0 -> s2 [0, 65535] { R13036 += 1, R12973 += 1, R12974 += 1 };
  s0 -> s1 [71, 65535] { R13036 += 1, R12974 += 1 };
  s1 -> s1 [0, 69] { R13036 += 1, R12974 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R13036 += 1 };
  s1 -> s1 [71, 65535] { R13036 += 1, R12974 += 1 };
  s2 -> s1 [0, 69] { R13036 += 1, R12974 += 1 };
  s2 -> s2 [0, 65535] { R13036 += 1, R12973 += 1, R12974 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R13036 += 1, R12974 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R13038 += 1, R12976 += 1, R20 += 1 };
  s0 -> s2 [0, 65535] { R13038 += 1, R12975 += 1, R12976 += 1 };
  s0 -> s0 [0, 65535] { R13037 += 1, R13038 += 1 };
  s1 -> s1 [0, 65535] { R13038 += 1, R12976 += 1, R20 += 1 };
  s1 -> s4 [0, 65535] { R13038 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R13038 += 1, R12976 += 1, R20 += 1 };
  s2 -> s2 [0, 65535] { R13038 += 1, R12975 += 1, R12976 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13038 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R13040 += 1, R12978 += 1 };
  s0 -> s2 [0, 65535] { R13040 += 1, R12977 += 1, R12978 += 1 };
  s0 -> s0 [0, 65535] { R13039 += 1, R13040 += 1 };
  s0 -> s1 [75, 65535] { R13040 += 1, R12978 += 1 };
  s1 -> s1 [0, 70] { R13040 += 1, R12978 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R13040 += 1 };
  s1 -> s1 [75, 65535] { R13040 += 1, R12978 += 1 };
  s2 -> s1 [0, 70] { R13040 += 1, R12978 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13040 += 1, R12977 += 1, R12978 += 1 };
  s2 -> s1 [75, 65535] { R13040 += 1, R12978 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R13042 += 1, R12979 += 1, R12980 += 1 };
  s0 -> s0 [0, 65535] { R13041 += 1, R13042 += 1 };
  s0 -> s2 [0, 65535] { R13042 += 1, R12980 += 1, R84 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R13042 += 1, R12979 += 1, R12980 += 1 };
  s1 -> s2 [0, 65535] { R13042 += 1, R12980 += 1, R84 += 1 };
  s2 -> s3 [0, 65535] { R13042 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13042 += 1, R12980 += 1, R84 += 1 };
  s3 -> s3 [0, 65535] { R13042 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R13044 += 1, R12982 += 1 };
  s0 -> s2 [0, 65535] { R13044 += 1, R12982 += 1, R86 += 1 };
  s0 -> s0 [0, 65535] { R13043 += 1, R13044 += 1 };
  s0 -> s3 [0, 65535] { R13044 += 1, R12981 += 1, R12982 += 1 };
  s0 -> s1 [76, 65535] { R13044 += 1, R12982 += 1 };
  s1 -> s1 [0, 74] { R13044 += 1, R12982 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R13044 += 1 };
  s1 -> s1 [76, 65535] { R13044 += 1, R12982 += 1 };
  s2 -> s1 [0, 74] { R13044 += 1, R12982 += 1 };
  s2 -> s2 [0, 65535] { R13044 += 1, R12982 += 1, R86 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R13044 += 1 };
  s2 -> s1 [76, 65535] { R13044 += 1, R12982 += 1 };
  s3 -> s1 [0, 74] { R13044 += 1, R12982 += 1 };
  s3 -> s2 [0, 65535] { R13044 += 1, R12982 += 1, R86 += 1 };
  s3 -> s3 [0, 65535] { R13044 += 1, R12981 += 1, R12982 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [76, 65535] { R13044 += 1, R12982 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13044 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R13046 += 1, R12983 += 1, R12984 += 1 };
  s0 -> s2 [0, 65535] { R13046 += 1, R12984 += 1, R90 += 1 };
  s0 -> s0 [0, 65535] { R13045 += 1, R13046 += 1 };
  s0 -> s3 [0, 65535] { R13046 += 1, R12984 += 1 };
  s1 -> s1 [0, 65535] { R13046 += 1, R12983 += 1, R12984 += 1 };
  s1 -> s2 [0, 65535] { R13046 += 1, R12984 += 1, R90 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R13046 += 1, R12984 += 1 };
  s2 -> s2 [0, 65535] { R13046 += 1, R12984 += 1, R90 += 1 };
  s2 -> s4 [0, 65535] { R13046 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R13046 += 1, R12984 += 1 };
  s3 -> s4 [0, 65535] { R13046 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R13046 += 1, R12984 += 1 };
  s4 -> s4 [0, 65535] { R13046 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R13048 += 1, R12986 += 1, R94 += 1, R95 += 1 };
  s0 -> s2 [0, 65535] { R13048 += 1, R12986 += 1, R95 += 1, R96 += 1 };
  s0 -> s3 [0, 65535] { R13048 += 1, R12985 += 1, R12986 += 1 };
  s0 -> s0 [0, 65535] { R13047 += 1, R13048 += 1 };
  s1 -> s6 [0, 65535] { R13048 += 1 };
  s1 -> s1 [0, 65535] { R13048 += 1, R12986 += 1, R94 += 1, R95 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R13048 += 1, R12986 += 1, R95 += 1, R96 += 1 };
  s2 -> s5 [0, 65535] { R13048 += 1, R12986 += 1 };
  s2 -> s6 [0, 65535] { R13048 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13048 += 1, R12986 += 1, R95 += 1, R96 += 1 };
  s3 -> s1 [0, 65535] { R13048 += 1, R12986 += 1, R94 += 1, R95 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R13048 += 1, R12986 += 1, R95 += 1, R96 += 1 };
  s3 -> s3 [0, 65535] { R13048 += 1, R12985 += 1, R12986 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13048 += 1, R12986 += 1 };
  s5 -> s6 [0, 65535] { R13048 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R13048 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s0 [0, 65535] { R13049 += 1, R13050 += 1 };
  s0 -> s1 [0, 65535] { R13050 += 1, R12988 += 1 };
  s0 -> s2 [0, 65535] { R13050 += 1, R12987 += 1, R12988 += 1 };
  s1 -> s4 [0, 65535] { R13050 += 1 };
  s1 -> s1 [0, 65535] { R13050 += 1, R12988 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R13050 += 1, R12988 += 1 };
  s2 -> s2 [0, 65535] { R13050 += 1, R12987 += 1, R12988 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13050 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 74] { R13052 += 1, R12990 += 1, R12960 += 1, R12962 += 1 };
  s0 -> s0 [0, 65535] { R13051 += 1, R13052 += 1 };
  s0 -> s2 [0, 65535] { R13052 += 1, R12989 += 1, R12990 += 1 };
  s0 -> s3 [0, 65535] { R13052 += 1, R12990 += 1, R12960 += 1, R12961 += 1, R12962 += 1 };
  s0 -> s4 [75, 75] { R13052 += 1, R12990 += 1, R12960 += 1, R12962 += 1 };
  s0 -> s1 [76, 65535] { R13052 += 1, R12990 += 1, R12960 += 1, R12962 += 1 };
  s1 -> s1 [0, 74] { R13052 += 1, R12990 += 1, R12960 += 1, R12962 += 1 };
  s1 -> s4 [75, 75] { R13052 += 1, R12990 += 1, R12960 += 1, R12962 += 1 };
  s1 -> s1 [76, 65535] { R13052 += 1, R12990 += 1, R12960 += 1, R12962 += 1 };
  s2 -> s1 [0, 74] { R13052 += 1, R12990 += 1, R12960 += 1, R12962 += 1 };
  s2 -> s2 [0, 65535] { R13052 += 1, R12989 += 1, R12990 += 1 };
  s2 -> s3 [0, 65535] { R13052 += 1, R12990 += 1, R12960 += 1, R12961 += 1, R12962 += 1 };
  s2 -> s4 [75, 75] { R13052 += 1, R12990 += 1, R12960 += 1, R12962 += 1 };
  s2 -> s1 [76, 65535] { R13052 += 1, R12990 += 1, R12960 += 1, R12962 += 1 };
  s3 -> s1 [0, 74] { R13052 += 1, R12990 += 1, R12960 += 1, R12962 += 1 };
  s3 -> s3 [0, 65535] { R13052 += 1, R12990 += 1, R12960 += 1, R12961 += 1, R12962 += 1 };
  s3 -> s4 [75, 75] { R13052 += 1, R12990 += 1, R12960 += 1, R12962 += 1 };
  s3 -> s1 [76, 65535] { R13052 += 1, R12990 += 1, R12960 += 1, R12962 += 1 };
  s4 -> s5 [0, 65535] { R13052 += 1, R12990 += 1 };
  s4 -> s6 [0, 65535] { R13052 += 1, R12990 += 1, R12960 += 1 };
  s4 -> s4 [0, 65535] { R13052 += 1, R12990 += 1, R12960 += 1, R12962 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R13052 += 1 };
  s5 -> s5 [0, 65535] { R13052 += 1, R12990 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R13052 += 1 };
  s6 -> s5 [0, 65535] { R13052 += 1, R12990 += 1 };
  s6 -> s6 [0, 65535] { R13052 += 1, R12990 += 1, R12960 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R13052 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R13052 += 1 };
  accepting s4, s8, s5, s6, s7;
};
automaton value2_29 {
  init s0;
  s0 -> s0 [0, 65535] { R13053 += 1, R13054 += 1 };
  s0 -> s1 [0, 65535] { R13054 += 1, R12992 += 1 };
  s0 -> s2 [0, 65535] { R13054 += 1, R12992 += 1, R12969 += 1 };
  s0 -> s3 [0, 65535] { R13054 += 1, R12991 += 1, R12992 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R13054 += 1, R12992 += 1 };
  s1 -> s5 [0, 65535] { R13054 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R13054 += 1, R12992 += 1 };
  s2 -> s5 [0, 65535] { R13054 += 1 };
  s2 -> s2 [0, 65535] { R13054 += 1, R12992 += 1, R12969 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R13054 += 1, R12992 += 1 };
  s3 -> s2 [0, 65535] { R13054 += 1, R12992 += 1, R12969 += 1 };
  s3 -> s3 [0, 65535] { R13054 += 1, R12991 += 1, R12992 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13054 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R13055 += 1, R13056 += 1 };
  s0 -> s1 [0, 65535] { R13056 += 1, R13012 += 1, R21 += 1 };
  s0 -> s2 [0, 65535] { R13056 += 1, R13011 += 1, R13012 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R13056 += 1 };
  s1 -> s1 [0, 65535] { R13056 += 1, R13012 += 1, R21 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R13056 += 1, R13012 += 1, R21 += 1 };
  s2 -> s2 [0, 65535] { R13056 += 1, R13011 += 1, R13012 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13056 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R13058 += 1, R13014 += 1 };
  s0 -> s2 [0, 65535] { R13058 += 1, R13013 += 1, R13014 += 1 };
  s0 -> s0 [0, 65535] { R13057 += 1, R13058 += 1 };
  s0 -> s3 [70, 70] { R13058 += 1, R13014 += 1 };
  s0 -> s4 [70, 70] { R13058 += 1, R13014 += 1 };
  s0 -> s5 [75, 75] { R13058 += 1, R13014 += 1 };
  s0 -> s1 [76, 65535] { R13058 += 1, R13014 += 1 };
  s1 -> s1 [0, 69] { R13058 += 1, R13014 += 1 };
  s1 -> s3 [70, 70] { R13058 += 1, R13014 += 1 };
  s1 -> s4 [70, 70] { R13058 += 1, R13014 += 1 };
  s1 -> s5 [75, 75] { R13058 += 1, R13014 += 1 };
  s1 -> s1 [76, 65535] { R13058 += 1, R13014 += 1 };
  s2 -> s1 [0, 69] { R13058 += 1, R13014 += 1 };
  s2 -> s2 [0, 65535] { R13058 += 1, R13013 += 1, R13014 += 1 };
  s2 -> s3 [70, 70] { R13058 += 1, R13014 += 1 };
  s2 -> s4 [70, 70] { R13058 += 1, R13014 += 1 };
  s2 -> s5 [75, 75] { R13058 += 1, R13014 += 1 };
  s2 -> s1 [76, 65535] { R13058 += 1, R13014 += 1 };
  s3 -> s3 [0, 70] { R13058 += 1, R13014 += 1 };
  s3 -> s8 [75, 75] { R13058 += 1, R13014 += 1 };
  s3 -> s3 [76, 65535] { R13058 += 1, R13014 += 1 };
  s5 -> s5 [0, 69] { R13058 += 1, R13014 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R13058 += 1 };
  s5 -> s7 [70, 70] { R13058 += 1, R13014 += 1 };
  s5 -> s8 [70, 70] { R13058 += 1, R13014 += 1 };
  s5 -> s5 [75, 65535] { R13058 += 1, R13014 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R13058 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 70] { R13058 += 1, R13014 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R13058 += 1 };
  s8 -> s8 [75, 65535] { R13058 += 1, R13014 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R13060 += 1, R13016 += 1, R83 += 1 };
  s0 -> s0 [0, 65535] { R13059 += 1, R13060 += 1 };
  s0 -> s2 [0, 65535] { R13060 += 1, R13015 += 1, R13016 += 1 };
  s0 -> s3 [70, 70] { R13060 += 1, R13016 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R13060 += 1, R13016 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R13060 += 1, R13016 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R13060 += 1, R13016 += 1, R83 += 1 };
  s1 -> s1 [0, 65535] { R13060 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R13060 += 1, R13016 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R13060 += 1, R13016 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R13060 += 1, R13016 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R13060 += 1, R13016 += 1, R83 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R13060 += 1, R13015 += 1, R13016 += 1 };
  s2 -> s3 [70, 70] { R13060 += 1, R13016 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R13060 += 1, R13016 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R13060 += 1, R13016 += 1, R83 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R13060 += 1 };
  s4 -> s5 [0, 65535] { R13060 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R13060 += 1, R13016 += 1, R83 += 1 };
  s5 -> s5 [0, 65535] { R13060 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R13062 += 1, R13018 += 1, R85 += 1 };
  s0 -> s0 [0, 65535] { R13061 += 1, R13062 += 1 };
  s0 -> s2 [0, 65535] { R13062 += 1, R13017 += 1, R13018 += 1 };
  s0 -> s3 [70, 70] { R13062 += 1, R13018 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R13062 += 1, R13018 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R13062 += 1, R13018 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R13062 += 1, R13018 += 1, R85 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R13062 += 1 };
  s1 -> s3 [70, 70] { R13062 += 1, R13018 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R13062 += 1, R13018 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R13062 += 1, R13018 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R13062 += 1, R13018 += 1, R85 += 1 };
  s2 -> s2 [0, 65535] { R13062 += 1, R13017 += 1, R13018 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R13062 += 1, R13018 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R13062 += 1, R13018 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R13062 += 1, R13018 += 1, R85 += 1 };
  s3 -> s3 [0, 65535] { R13062 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R13062 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R13062 += 1, R13018 += 1, R85 += 1 };
  s5 -> s5 [0, 65535] { R13062 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R13064 += 1, R13020 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R13064 += 1, R13020 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [0, 65535] { R13064 += 1, R13019 += 1, R13020 += 1 };
  s0 -> s0 [0, 65535] { R13063 += 1, R13064 += 1 };
  s0 -> s4 [70, 70] { R13064 += 1, R13020 += 1, R87 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R13064 += 1, R13020 += 1, R87 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R13064 += 1, R13020 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R13064 += 1, R13020 += 1, R88 += 1 };
  s0 -> s1 [71, 74] { R13064 += 1, R13020 += 1, R88 += 1 };
  s0 -> s2 [71, 65535] { R13064 += 1, R13020 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R13064 += 1, R13020 += 1, R88 += 1 };
  s0 -> s1 [76, 65535] { R13064 += 1, R13020 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R13064 += 1, R13020 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R13064 += 1, R13020 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R13064 += 1, R13020 += 1, R88 += 1 };
  s1 -> s1 [71, 74] { R13064 += 1, R13020 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R13064 += 1, R13020 += 1, R88 += 1 };
  s1 -> s1 [76, 65535] { R13064 += 1, R13020 += 1, R88 += 1 };
  s2 -> s1 [0, 69] { R13064 += 1, R13020 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R13064 += 1, R13020 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R13064 += 1, R13020 += 1, R87 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R13064 += 1, R13020 += 1, R87 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R13064 += 1, R13020 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R13064 += 1, R13020 += 1, R88 += 1 };
  s2 -> s1 [71, 74] { R13064 += 1, R13020 += 1, R88 += 1 };
  s2 -> s2 [71, 65535] { R13064 += 1, R13020 += 1, R87 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R13064 += 1, R13020 += 1, R88 += 1 };
  s2 -> s1 [76, 65535] { R13064 += 1, R13020 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R13064 += 1, R13020 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R13064 += 1, R13020 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R13064 += 1, R13019 += 1, R13020 += 1 };
  s3 -> s4 [70, 70] { R13064 += 1, R13020 += 1, R87 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R13064 += 1, R13020 += 1, R87 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R13064 += 1, R13020 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R13064 += 1, R13020 += 1, R88 += 1 };
  s3 -> s1 [71, 74] { R13064 += 1, R13020 += 1, R88 += 1 };
  s3 -> s2 [71, 65535] { R13064 += 1, R13020 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R13064 += 1, R13020 += 1, R88 += 1 };
  s3 -> s1 [76, 65535] { R13064 += 1, R13020 += 1, R88 += 1 };
  s4 -> s6 [0, 74] { R13064 += 1, R13020 += 1, R88 += 1 };
  s4 -> s4 [0, 65535] { R13064 += 1, R13020 += 1, R87 += 1, R88 += 1 };
  s4 -> s11 [75, 75] { R13064 += 1, R13020 += 1, R88 += 1 };
  s4 -> s6 [76, 65535] { R13064 += 1, R13020 += 1, R88 += 1 };
  s6 -> s6 [0, 74] { R13064 += 1, R13020 += 1, R88 += 1 };
  s6 -> s11 [75, 75] { R13064 += 1, R13020 += 1, R88 += 1 };
  s6 -> s6 [76, 65535] { R13064 += 1, R13020 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R13064 += 1, R13020 += 1, R88 += 1 };
  s8 -> s8 [0, 65535] { R13064 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R13064 += 1, R13020 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R13064 += 1, R13020 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R13064 += 1, R13020 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R13064 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R13064 += 1, R13020 += 1, R88 += 1 };
  s11 -> s12 [0, 65535] { R13064 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R13064 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R13066 += 1, R13022 += 1, R91 += 1, R92 += 1 };
  s0 -> s0 [0, 65535] { R13065 += 1, R13066 += 1 };
  s0 -> s2 [0, 65535] { R13066 += 1, R13021 += 1, R13022 += 1 };
  s0 -> s3 [70, 70] { R13066 += 1, R13022 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R13066 += 1, R13022 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R13066 += 1, R13022 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R13066 += 1, R13022 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 65535] { R13066 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R13066 += 1, R13022 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R13066 += 1, R13022 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R13066 += 1, R13022 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R13066 += 1, R13022 += 1, R91 += 1, R92 += 1 };
  s2 -> s2 [0, 65535] { R13066 += 1, R13021 += 1, R13022 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R13066 += 1, R13022 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R13066 += 1, R13022 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R13066 += 1, R13022 += 1, R91 += 1, R92 += 1 };
  s3 -> s3 [0, 65535] { R13066 += 1, R13022 += 1, R91 += 1, R92 += 1 };
  s3 -> s6 [0, 65535] { R13066 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13066 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13066 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R13068 += 1, R13024 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s2 [0, 69] { R13068 += 1, R13024 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s0 [0, 65535] { R13067 += 1, R13068 += 1 };
  s0 -> s3 [0, 65535] { R13068 += 1, R13023 += 1, R13024 += 1 };
  s0 -> s4 [70, 70] { R13068 += 1, R13024 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s5 [70, 70] { R13068 += 1, R13024 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s6 [70, 70] { R13068 += 1, R13024 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s7 [70, 70] { R13068 += 1, R13024 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s1 [71, 65535] { R13068 += 1, R13024 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s2 [71, 65535] { R13068 += 1, R13024 += 1, R10159 += 1, R10160 += 1 };
  s1 -> s1 [0, 69] { R13068 += 1, R13024 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s11 [0, 69] { R13068 += 1, R13024 += 1 };
  s1 -> s5 [70, 70] { R13068 += 1, R13024 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s8 [70, 70] { R13068 += 1, R13024 += 1 };
  s1 -> s12 [70, 70] { R13068 += 1, R13024 += 1 };
  s1 -> s7 [70, 70] { R13068 += 1, R13024 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s1 [71, 65535] { R13068 += 1, R13024 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s11 [71, 65535] { R13068 += 1, R13024 += 1 };
  s2 -> s1 [0, 69] { R13068 += 1, R13024 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s2 [0, 69] { R13068 += 1, R13024 += 1, R10159 += 1, R10160 += 1 };
  s2 -> s4 [70, 70] { R13068 += 1, R13024 += 1, R10159 += 1, R10160 += 1 };
  s2 -> s5 [70, 70] { R13068 += 1, R13024 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s6 [70, 70] { R13068 += 1, R13024 += 1, R10159 += 1, R10160 += 1 };
  s2 -> s7 [70, 70] { R13068 += 1, R13024 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s1 [71, 65535] { R13068 += 1, R13024 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s2 [71, 65535] { R13068 += 1, R13024 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s1 [0, 69] { R13068 += 1, R13024 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s2 [0, 69] { R13068 += 1, R13024 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s3 [0, 65535] { R13068 += 1, R13023 += 1, R13024 += 1 };
  s3 -> s4 [70, 70] { R13068 += 1, R13024 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s5 [70, 70] { R13068 += 1, R13024 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s6 [70, 70] { R13068 += 1, R13024 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s7 [70, 70] { R13068 += 1, R13024 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s1 [71, 65535] { R13068 += 1, R13024 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s2 [71, 65535] { R13068 += 1, R13024 += 1, R10159 += 1, R10160 += 1 };
  s4 -> s4 [0, 65535] { R13068 += 1, R13024 += 1, R10159 += 1, R10160 += 1 };
  s4 -> s5 [0, 65535] { R13068 += 1, R13024 += 1, R10160 += 1, R10161 += 1 };
  s5 -> s5 [0, 65535] { R13068 += 1, R13024 += 1, R10160 += 1, R10161 += 1 };
  s5 -> s8 [0, 65535] { R13068 += 1, R13024 += 1 };
  s8 -> s9 [0, 65535] { R13068 += 1 };
  s8 -> s8 [0, 65535] { R13068 += 1, R13024 += 1 };
  s8 -> s10 [0, 65535];
  s9 -> s9 [0, 65535] { R13068 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  s11 -> s11 [0, 69] { R13068 += 1, R13024 += 1 };
  s11 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R13068 += 1 };
  s11 -> s8 [70, 70] { R13068 += 1, R13024 += 1 };
  s11 -> s12 [70, 70] { R13068 += 1, R13024 += 1 };
  s11 -> s11 [71, 65535] { R13068 += 1, R13024 += 1 };
  s12 -> s10 [0, 65535];
  s12 -> s12 [0, 65535] { R13068 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R13070 += 1, R13026 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s0 -> s2 [0, 69] { R13070 += 1, R13026 += 1, R12955 += 1, R12956 += 1 };
  s0 -> s3 [0, 65535] { R13070 += 1, R13025 += 1, R13026 += 1 };
  s0 -> s0 [0, 65535] { R13069 += 1, R13070 += 1 };
  s0 -> s4 [70, 70] { R13070 += 1, R13026 += 1, R12955 += 1, R12956 += 1 };
  s0 -> s5 [70, 70] { R13070 += 1, R13026 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s0 -> s6 [70, 70] { R13070 += 1, R13026 += 1, R12955 += 1, R12956 += 1 };
  s0 -> s7 [70, 70] { R13070 += 1, R13026 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s0 -> s1 [71, 65535] { R13070 += 1, R13026 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s0 -> s2 [71, 65535] { R13070 += 1, R13026 += 1, R12955 += 1, R12956 += 1 };
  s1 -> s1 [0, 69] { R13070 += 1, R13026 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s1 -> s1 [0, 65535] { R13070 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s5 [70, 70] { R13070 += 1, R13026 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s1 -> s7 [70, 70] { R13070 += 1, R13026 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s1 -> s1 [71, 65535] { R13070 += 1, R13026 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s2 -> s1 [0, 69] { R13070 += 1, R13026 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s2 -> s2 [0, 69] { R13070 += 1, R13026 += 1, R12955 += 1, R12956 += 1 };
  s2 -> s4 [70, 70] { R13070 += 1, R13026 += 1, R12955 += 1, R12956 += 1 };
  s2 -> s5 [70, 70] { R13070 += 1, R13026 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s2 -> s6 [70, 70] { R13070 += 1, R13026 += 1, R12955 += 1, R12956 += 1 };
  s2 -> s7 [70, 70] { R13070 += 1, R13026 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s2 -> s1 [71, 65535] { R13070 += 1, R13026 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s2 -> s2 [71, 65535] { R13070 += 1, R13026 += 1, R12955 += 1, R12956 += 1 };
  s3 -> s1 [0, 69] { R13070 += 1, R13026 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s3 -> s2 [0, 69] { R13070 += 1, R13026 += 1, R12955 += 1, R12956 += 1 };
  s3 -> s3 [0, 65535] { R13070 += 1, R13025 += 1, R13026 += 1 };
  s3 -> s4 [70, 70] { R13070 += 1, R13026 += 1, R12955 += 1, R12956 += 1 };
  s3 -> s5 [70, 70] { R13070 += 1, R13026 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s3 -> s6 [70, 70] { R13070 += 1, R13026 += 1, R12955 += 1, R12956 += 1 };
  s3 -> s7 [70, 70] { R13070 += 1, R13026 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s3 -> s1 [71, 65535] { R13070 += 1, R13026 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s3 -> s2 [71, 65535] { R13070 += 1, R13026 += 1, R12955 += 1, R12956 += 1 };
  s4 -> s4 [0, 65535] { R13070 += 1, R13026 += 1, R12955 += 1, R12956 += 1 };
  s4 -> s5 [0, 65535] { R13070 += 1, R13026 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s5 -> s5 [0, 65535] { R13070 += 1, R13026 += 1, R12956 += 1, R12957 += 1, R12958 += 1 };
  s5 -> s9 [0, 65535] { R13070 += 1 };
  s5 -> s8 [0, 65535];
  s7 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R13070 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R13070 += 1 };
  s9 -> s8 [0, 65535];
  accepting s8, s5, s9, s1, s7;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R13072 += 1, R13028 += 1, R12964 += 1, R12966 += 1, R12967 += 1 };
  s0 -> s2 [0, 69] { R13072 += 1, R13028 += 1, R12963 += 1, R12964 += 1 };
  s0 -> s3 [0, 69] { R13072 += 1, R13028 += 1, R12964 += 1, R12965 += 1, R12966 += 1 };
  s0 -> s4 [0, 65535] { R13072 += 1, R13027 += 1, R13028 += 1 };
  s0 -> s0 [0, 65535] { R13071 += 1, R13072 += 1 };
  s0 -> s5 [70, 70] { R13072 += 1, R13028 += 1, R12963 += 1, R12964 += 1 };
  s0 -> s6 [70, 70] { R13072 += 1, R13028 += 1, R12964 += 1, R12966 += 1, R12967 += 1 };
  s0 -> s7 [70, 70] { R13072 += 1, R13028 += 1, R12963 += 1, R12964 += 1 };
  s0 -> s8 [70, 70] { R13072 += 1, R13028 += 1, R12964 += 1, R12965 += 1, R12966 += 1 };
  s0 -> s9 [70, 70] { R13072 += 1, R13028 += 1, R12964 += 1, R12966 += 1, R12967 += 1 };
  s0 -> s10 [70, 70] { R13072 += 1, R13028 += 1, R12964 += 1, R12965 += 1, R12966 += 1 };
  s0 -> s1 [71, 65535] { R13072 += 1, R13028 += 1, R12964 += 1, R12966 += 1, R12967 += 1 };
  s0 -> s2 [71, 65535] { R13072 += 1, R13028 += 1, R12963 += 1, R12964 += 1 };
  s0 -> s3 [71, 65535] { R13072 += 1, R13028 += 1, R12964 += 1, R12965 += 1, R12966 += 1 };
  s1 -> s1 [0, 69] { R13072 += 1, R13028 += 1, R12964 += 1, R12966 += 1, R12967 += 1 };
  s1 -> s14 [0, 69] { R13072 += 1, R13028 += 1, R12964 += 1 };
  s1 -> s15 [70, 70] { R13072 += 1, R13028 += 1, R12964 += 1 };
  s1 -> s6 [70, 70] { R13072 += 1, R13028 += 1, R12964 += 1, R12966 += 1, R12967 += 1 };
  s1 -> s11 [70, 70] { R13072 += 1, R13028 += 1, R12964 += 1 };
  s1 -> s9 [70, 70] { R13072 += 1, R13028 += 1, R12964 += 1, R12966 += 1, R12967 += 1 };
  s1 -> s1 [71, 65535] { R13072 += 1, R13028 += 1, R12964 += 1, R12966 += 1, R12967 += 1 };
  s1 -> s14 [71, 65535] { R13072 += 1, R13028 += 1, R12964 += 1 };
  s2 -> s1 [0, 69] { R13072 += 1, R13028 += 1, R12964 += 1, R12966 += 1, R12967 += 1 };
  s2 -> s2 [0, 69] { R13072 += 1, R13028 += 1, R12963 += 1, R12964 += 1 };
  s2 -> s3 [0, 69] { R13072 += 1, R13028 += 1, R12964 += 1, R12965 += 1, R12966 += 1 };
  s2 -> s5 [70, 70] { R13072 += 1, R13028 += 1, R12963 += 1, R12964 += 1 };
  s2 -> s6 [70, 70] { R13072 += 1, R13028 += 1, R12964 += 1, R12966 += 1, R12967 += 1 };
  s2 -> s7 [70, 70] { R13072 += 1, R13028 += 1, R12963 += 1, R12964 += 1 };
  s2 -> s8 [70, 70] { R13072 += 1, R13028 += 1, R12964 += 1, R12965 += 1, R12966 += 1 };
  s2 -> s9 [70, 70] { R13072 += 1, R13028 += 1, R12964 += 1, R12966 += 1, R12967 += 1 };
  s2 -> s10 [70, 70] { R13072 += 1, R13028 += 1, R12964 += 1, R12965 += 1, R12966 += 1 };
  s2 -> s1 [71, 65535] { R13072 += 1, R13028 += 1, R12964 += 1, R12966 += 1, R12967 += 1 };
  s2 -> s2 [71, 65535] { R13072 += 1, R13028 += 1, R12963 += 1, R12964 += 1 };
  s2 -> s3 [71, 65535] { R13072 += 1, R13028 += 1, R12964 += 1, R12965 += 1, R12966 += 1 };
  s3 -> s1 [0, 69] { R13072 += 1, R13028 += 1, R12964 += 1, R12966 += 1, R12967 += 1 };
  s3 -> s3 [0, 69] { R13072 += 1, R13028 += 1, R12964 += 1, R12965 += 1, R12966 += 1 };
  s3 -> s6 [70, 70] { R13072 += 1, R13028 += 1, R12964 += 1, R12966 += 1, R12967 += 1 };
  s3 -> s8 [70, 70] { R13072 += 1, R13028 += 1, R12964 += 1, R12965 += 1, R12966 += 1 };
  s3 -> s9 [70, 70] { R13072 += 1, R13028 += 1, R12964 += 1, R12966 += 1, R12967 += 1 };
  s3 -> s10 [70, 70] { R13072 += 1, R13028 += 1, R12964 += 1, R12965 += 1, R12966 += 1 };
  s3 -> s1 [71, 65535] { R13072 += 1, R13028 += 1, R12964 += 1, R12966 += 1, R12967 += 1 };
  s3 -> s3 [71, 65535] { R13072 += 1, R13028 += 1, R12964 += 1, R12965 += 1, R12966 += 1 };
  s4 -> s1 [0, 69] { R13072 += 1, R13028 += 1, R12964 += 1, R12966 += 1, R12967 += 1 };
  s4 -> s2 [0, 69] { R13072 += 1, R13028 += 1, R12963 += 1, R12964 += 1 };
  s4 -> s3 [0, 69] { R13072 += 1, R13028 += 1, R12964 += 1, R12965 += 1, R12966 += 1 };
  s4 -> s4 [0, 65535] { R13072 += 1, R13027 += 1, R13028 += 1 };
  s4 -> s5 [70, 70] { R13072 += 1, R13028 += 1, R12963 += 1, R12964 += 1 };
  s4 -> s6 [70, 70] { R13072 += 1, R13028 += 1, R12964 += 1, R12966 += 1, R12967 += 1 };
  s4 -> s7 [70, 70] { R13072 += 1, R13028 += 1, R12963 += 1, R12964 += 1 };
  s4 -> s8 [70, 70] { R13072 += 1, R13028 += 1, R12964 += 1, R12965 += 1, R12966 += 1 };
  s4 -> s9 [70, 70] { R13072 += 1, R13028 += 1, R12964 += 1, R12966 += 1, R12967 += 1 };
  s4 -> s10 [70, 70] { R13072 += 1, R13028 += 1, R12964 += 1, R12965 += 1, R12966 += 1 };
  s4 -> s1 [71, 65535] { R13072 += 1, R13028 += 1, R12964 += 1, R12966 += 1, R12967 += 1 };
  s4 -> s2 [71, 65535] { R13072 += 1, R13028 += 1, R12963 += 1, R12964 += 1 };
  s4 -> s3 [71, 65535] { R13072 += 1, R13028 += 1, R12964 += 1, R12965 += 1, R12966 += 1 };
  s5 -> s5 [0, 65535] { R13072 += 1, R13028 += 1, R12963 += 1, R12964 += 1 };
  s5 -> s9 [0, 65535] { R13072 += 1, R13028 += 1, R12964 += 1, R12966 += 1, R12967 += 1 };
  s5 -> s10 [0, 65535] { R13072 += 1, R13028 += 1, R12964 += 1, R12965 += 1, R12966 += 1 };
  s9 -> s11 [0, 65535] { R13072 += 1, R13028 += 1, R12964 += 1 };
  s9 -> s9 [0, 65535] { R13072 += 1, R13028 += 1, R12964 += 1, R12966 += 1, R12967 += 1 };
  s10 -> s9 [0, 65535] { R13072 += 1, R13028 += 1, R12964 += 1, R12966 += 1, R12967 += 1 };
  s10 -> s10 [0, 65535] { R13072 += 1, R13028 += 1, R12964 += 1, R12965 += 1, R12966 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [0, 65535] { R13072 += 1 };
  s11 -> s11 [0, 65535] { R13072 += 1, R13028 += 1, R12964 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R13072 += 1 };
  s14 -> s14 [0, 69] { R13072 += 1, R13028 += 1, R12964 += 1 };
  s14 -> s14 [0, 65535] { R13072 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s15 [70, 70] { R13072 += 1, R13028 += 1, R12964 += 1 };
  s14 -> s11 [70, 70] { R13072 += 1, R13028 += 1, R12964 += 1 };
  s14 -> s14 [71, 65535] { R13072 += 1, R13028 += 1, R12964 += 1 };
  s15 -> s15 [0, 65535] { R13072 += 1 };
  s15 -> s12 [0, 65535];
  accepting s12, s13, s14, s15, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R12990 && R3 = R13072 && R23 - R13072 = -1 && R24 = R13072 && R25 - R13072 = -1 && R26 = R13072 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R12960 + -1*R12956 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R12960 + -1*R12956 - R66 = 0 && R55 + R96 + R93 + -1*R12962 + -1*R12958 - R68 = 0 && R65 + R12959 + R12955 = 0 && R67 + R12961 + R12957 = 0 && R12989 = 0 && R13013 = 0 && R13014 = 0 && R13019 = 0 && R13020 = 0 && R13023 = 0 && R13024 = 0 && R13025 = 0 && R13026 = 0 && R13027 = 0 && R13028 = 0 && R13029 = 0 && R13030 = R13072 && R13031 = 0 && R13032 = R13072 && R13033 = 0 && R13034 = R13072 && R13035 = 0 && R13036 = R13072 && R13037 = 0 && R13038 = R13072 && R13039 = 0 && R13040 = R13072 && R13041 = 0 && R13042 = R13072 && R13043 = 0 && R13044 = R13072 && R13045 = 0 && R13046 = R13072 && R13047 = 0 && R13048 = R13072 && R13049 = 0 && R13050 = R13072 && R13051 = 0 && R13052 = R13072 && R13053 = 0 && R13054 = R13072 && R13055 = 0 && R13056 = R13072 && R13057 = 0 && R13058 = R13072 && R13059 = 0 && R13060 = R13072 && R13061 = 0 && R13062 = R13072 && R13063 = 0 && R13064 = R13072 && R13065 = 0 && R13066 = R13072 && R13067 = 0 && R13068 = R13072 && R13069 = 0 && R13070 = R13072 && R13071 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R10164 + R10161 < 1 && -1*R12960 + -1*R12956 - R66 < 1 && -1*R12962 + -1*R12958 - R68 < 1 && -1 < R12990 && 0 < R13072 && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R12960 + -1*R12956 - R66 = 0 || R66 + R12960 + R12956 < 1) && (R59 + R10162 + R10159 != 0 || R60 + R10163 + R10160 + -1*R12960 + -1*R12956 - R66 = 0 || R66 + R12960 + R12956 < 1) && (R66 + R12960 + R12956 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R12962 + R12958 < 1) && (R53 + R94 + R91 = 0 || R68 + R12962 + R12958 < 1))) && (R66 + R12960 + R12956 != 0 || ((R59 + R10162 + R10159 != 0 || R60 + R10163 + R10160 = 0 || R68 + R12962 + R12958 < 1) && (R59 + R10162 + R10159 = 0 || R68 + R12962 + R12958 < 1))) && (R66 + R12960 + R12956 != 0 || ((R73 + R12968 + R12963 != 0 || R74 + R12969 + R12964 = 0 || R68 + R12962 + R12958 < 1) && (R73 + R12968 + R12963 = 0 || R68 + R12962 + R12958 < 1))) && (R68 + R12962 + R12958 != 0 || R77 + R12972 + R12967 = 0 || (R75 + R12970 + R12965 = 0 && R76 + R12971 + R12966 = 0)) && (R73 + R12968 + R12963 != 0 || R66 + R12960 + R12956 + -1*R12969 + -1*R12964 - R74 = 0 || R66 + R12960 + R12956 < 1) && (R75 + R12970 + R12965 != 0 || R68 + R12962 + R12958 + -1*R12971 + -1*R12966 - R76 = 0 || R68 + R12962 + R12958 < 1) && (R12973 != 0 || R12974 = R12990 || (R20 = 0 && R12990 = 0)) && (R12975 != 0 || R12976 = R12990 || (R20 = 0 && R12990 = 0)) && (R12977 != 0 || R12978 = R12990 || (R20 = 0 && R12990 = 0)) && (R12979 != 0 || R12980 = R12990 || (R20 = 0 && R12990 = 0)) && (R12981 != 0 || R12982 = R12990 || (R20 = 0 && R12990 = 0)) && (R12983 != 0 || R12984 = R12990 || (R20 = 0 && R12990 = 0)) && (R12985 != 0 || R12986 = R12990 || (R20 = 0 && R12990 = 0)) && (R12987 != 0 || R12988 = R12990 || (R20 = 0 && R12990 = 0)) && (R12991 != 0 || R12990 = R12992 || (R20 = 0 && R12990 = 0)) && (R21 = 0 || (R13011 = 0 && R13012 = 0)) && (R21 = 0 || (R13015 = 0 && R13016 = 0)) && (R21 = 0 || (R13017 = 0 && R13018 = 0)) && (R21 = 0 || (R13021 = 0 && R13022 = 0)) && (R22 = 0 || (R12993 = 0 && R12994 = 0)) && (R22 = 0 || (R12995 = 0 && R12996 = 0)) && (R22 = 0 || (R12997 = 0 && R12998 = 0)) && (R22 = 0 || (R12999 = 0 && R13000 = 0)) && (R22 = 0 || (R13001 = 0 && R13002 = 0)) && (R22 = 0 || (R13003 = 0 && R13004 = 0)) && (R22 = 0 || (R13005 = 0 && R13006 = 0)) && (R22 = 0 || (R13007 = 0 && R13008 = 0)) && (R22 = 0 || (R13009 = 0 && R13010 = 0)) && (R53 + R94 + R91 = 0 || R66 + R12960 + R12956 < 1) && (R59 + R10162 + R10159 = 0 || R66 + R12960 + R12956 < 1) && (R73 + R12968 + R12963 = 0 || R66 + R12960 + R12956 < 1) && (R75 + R12970 + R12965 = 0 || R68 + R12962 + R12958 < 1) && (R12973 = 0 || (R20 = 0 && R12990 = 0)) && (R12975 = 0 || (R20 = 0 && R12990 = 0)) && (R12977 = 0 || (R20 = 0 && R12990 = 0)) && (R12979 = 0 || (R20 = 0 && R12990 = 0)) && (R12981 = 0 || (R20 = 0 && R12990 = 0)) && (R12983 = 0 || (R20 = 0 && R12990 = 0)) && (R12985 = 0 || (R20 = 0 && R12990 = 0)) && (R12987 = 0 || (R20 = 0 && R12990 = 0)) && (R12991 = 0 || (R20 = 0 && R12990 = 0));
// End of Parikh automata intersection problem
