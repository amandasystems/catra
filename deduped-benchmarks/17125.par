// Parikh automata intersection problem, generated by OSTRICH+
counter int R10159, R10160, R10161, R10162, R10163, R10164, R11281, R11282, R11283, R11284, R11285, R11286, R11287, R11288, R11289, R11290, R11291, R11292, R11293, R11294, R11295, R11296, R11297, R11298, R11299, R11300, R11301, R11302, R11303, R11304, R11305, R11306, R11307, R11308, R11309, R11310, R11311, R11312, R11313, R11314, R11315, R11316, R11317, R11318, R11319, R11320, R11321, R11322, R11323, R11324, R11325, R11326, R11327, R11328, R11329, R11330, R11331, R11332, R11333, R11334, R11335, R11336, R11337, R11338, R11339, R11340, R11341, R11342, R11343, R11344, R11345, R11346, R11347, R11348, R11349, R11350, R11351, R11352, R11353, R11354, R11355, R11356, R11357, R11358, R11359, R11360, R11361, R11362, R11363, R11364, R11365, R11366, R11367, R11368, R11369, R11370, R11371, R11372, R11373, R11374, R11375, R11376, R11377, R11378, R11379, R11380, R11381, R11382, R11383, R11384, R11385, R11386, R11387, R11388, R11389, R11390, R11391, R11392, R11393, R11394, R11395, R11396, R11397, R11398, R12, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R4, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R11320 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R11319 += 1, R11320 += 1 };
  s1 -> s1 [0, 65535] { R11320 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R11322 += 1 };
  s0 -> s0 [0, 65535] { R11321 += 1, R11322 += 1 };
  s0 -> s2 [70, 70] { R11322 += 1 };
  s0 -> s3 [70, 70] { R11322 += 1 };
  s0 -> s1 [76, 65535] { R11322 += 1 };
  s1 -> s1 [0, 69] { R11322 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11322 += 1 };
  s1 -> s3 [70, 70] { R11322 += 1 };
  s1 -> s1 [76, 65535] { R11322 += 1 };
  s2 -> s2 [0, 70] { R11322 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R11322 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R11324 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R11323 += 1, R11324 += 1 };
  s0 -> s2 [70, 70] { R11324 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R11324 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R11324 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R11324 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11324 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R11324 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R11324 += 1, R45 += 1 };
  s2 -> s2 [0, 65535] { R11324 += 1, R45 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R11326 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R11325 += 1, R11326 += 1 };
  s0 -> s2 [70, 70] { R11326 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R11326 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R11326 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R11326 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11326 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R11326 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R11326 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R11326 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R11328 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R11327 += 1, R11328 += 1 };
  s0 -> s2 [70, 70] { R11328 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R11328 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R11328 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R11328 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11328 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R11328 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R11328 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R11328 += 1, R49 += 1, R50 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R11330 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R11329 += 1, R11330 += 1 };
  s0 -> s2 [70, 70] { R11330 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R11330 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R11330 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R11330 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11330 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R11330 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R11330 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535] { R11330 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R11332 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R11331 += 1, R11332 += 1 };
  s0 -> s2 [70, 70] { R11332 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R11332 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R11332 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R11332 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11332 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R11332 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R11332 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535] { R11332 += 1, R59 += 1, R60 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R11334 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R11333 += 1, R11334 += 1 };
  s0 -> s2 [70, 70] { R11334 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R11334 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R11334 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R11334 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11334 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R11334 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R11334 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R11334 += 1, R65 += 1, R66 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R11336 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R11335 += 1, R11336 += 1 };
  s0 -> s2 [70, 70] { R11336 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R11336 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R11336 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R11336 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11336 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R11336 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R11336 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R11336 += 1, R73 += 1, R74 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R11356 += 1 };
  s0 -> s0 [0, 65535] { R11355 += 1, R11356 += 1 };
  s0 -> s2 [70, 70] { R11356 += 1 };
  s0 -> s1 [71, 65535] { R11356 += 1 };
  s1 -> s1 [0, 69] { R11356 += 1 };
  s1 -> s2 [70, 70] { R11356 += 1 };
  s1 -> s1 [71, 65535] { R11356 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R11356 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R11358 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R11357 += 1, R11358 += 1 };
  s1 -> s1 [0, 65535] { R11358 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R11360 += 1 };
  s0 -> s2 [0, 65535] { R11360 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R11359 += 1, R11360 += 1 };
  s0 -> s3 [70, 70] { R11360 += 1 };
  s0 -> s1 [71, 65535] { R11360 += 1 };
  s1 -> s1 [0, 69] { R11360 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R11360 += 1 };
  s1 -> s1 [71, 65535] { R11360 += 1 };
  s2 -> s1 [0, 69] { R11360 += 1 };
  s2 -> s2 [0, 65535] { R11360 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R11360 += 1 };
  s2 -> s1 [71, 65535] { R11360 += 1 };
  s3 -> s3 [0, 65535] { R11360 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R11362 += 1, R11300 += 1 };
  s0 -> s0 [0, 65535] { R11361 += 1, R11362 += 1 };
  s0 -> s2 [0, 65535] { R11362 += 1, R11299 += 1, R11300 += 1 };
  s0 -> s1 [71, 65535] { R11362 += 1, R11300 += 1 };
  s1 -> s1 [0, 69] { R11362 += 1, R11300 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R11362 += 1 };
  s1 -> s1 [71, 65535] { R11362 += 1, R11300 += 1 };
  s2 -> s1 [0, 69] { R11362 += 1, R11300 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R11362 += 1, R11299 += 1, R11300 += 1 };
  s2 -> s1 [71, 65535] { R11362 += 1, R11300 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s0 [0, 65535] { R11363 += 1, R11364 += 1 };
  s0 -> s1 [0, 65535] { R11364 += 1, R11302 += 1, R20 += 1 };
  s0 -> s2 [0, 65535] { R11364 += 1, R11301 += 1, R11302 += 1 };
  s1 -> s4 [0, 65535] { R11364 += 1 };
  s1 -> s1 [0, 65535] { R11364 += 1, R11302 += 1, R20 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R11364 += 1, R11302 += 1, R20 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R11364 += 1, R11301 += 1, R11302 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R11364 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R11366 += 1, R11304 += 1 };
  s0 -> s2 [0, 65535] { R11366 += 1, R11303 += 1, R11304 += 1 };
  s0 -> s0 [0, 65535] { R11365 += 1, R11366 += 1 };
  s0 -> s1 [75, 65535] { R11366 += 1, R11304 += 1 };
  s1 -> s1 [0, 70] { R11366 += 1, R11304 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R11366 += 1 };
  s1 -> s1 [75, 65535] { R11366 += 1, R11304 += 1 };
  s2 -> s1 [0, 70] { R11366 += 1, R11304 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R11366 += 1, R11303 += 1, R11304 += 1 };
  s2 -> s1 [75, 65535] { R11366 += 1, R11304 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R11368 += 1, R11305 += 1, R11306 += 1 };
  s0 -> s0 [0, 65535] { R11367 += 1, R11368 += 1 };
  s0 -> s2 [0, 65535] { R11368 += 1, R11306 += 1, R84 += 1 };
  s1 -> s1 [0, 65535] { R11368 += 1, R11305 += 1, R11306 += 1 };
  s1 -> s2 [0, 65535] { R11368 += 1, R11306 += 1, R84 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R11368 += 1 };
  s2 -> s2 [0, 65535] { R11368 += 1, R11306 += 1, R84 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R11368 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R11370 += 1, R11308 += 1 };
  s0 -> s0 [0, 65535] { R11369 += 1, R11370 += 1 };
  s0 -> s2 [0, 65535] { R11370 += 1, R11307 += 1, R11308 += 1 };
  s0 -> s3 [0, 65535] { R11370 += 1, R11308 += 1, R86 += 1 };
  s0 -> s1 [76, 65535] { R11370 += 1, R11308 += 1 };
  s1 -> s1 [0, 74] { R11370 += 1, R11308 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R11370 += 1 };
  s1 -> s1 [76, 65535] { R11370 += 1, R11308 += 1 };
  s2 -> s1 [0, 74] { R11370 += 1, R11308 += 1 };
  s2 -> s2 [0, 65535] { R11370 += 1, R11307 += 1, R11308 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R11370 += 1, R11308 += 1, R86 += 1 };
  s2 -> s1 [76, 65535] { R11370 += 1, R11308 += 1 };
  s3 -> s1 [0, 74] { R11370 += 1, R11308 += 1 };
  s3 -> s4 [0, 65535] { R11370 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R11370 += 1, R11308 += 1, R86 += 1 };
  s3 -> s1 [76, 65535] { R11370 += 1, R11308 += 1 };
  s4 -> s4 [0, 65535] { R11370 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R11372 += 1, R11310 += 1 };
  s0 -> s2 [0, 65535] { R11372 += 1, R11310 += 1, R90 += 1 };
  s0 -> s0 [0, 65535] { R11371 += 1, R11372 += 1 };
  s0 -> s3 [0, 65535] { R11372 += 1, R11309 += 1, R11310 += 1 };
  s1 -> s1 [0, 65535] { R11372 += 1, R11310 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R11372 += 1 };
  s2 -> s1 [0, 65535] { R11372 += 1, R11310 += 1 };
  s2 -> s2 [0, 65535] { R11372 += 1, R11310 += 1, R90 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R11372 += 1 };
  s3 -> s1 [0, 65535] { R11372 += 1, R11310 += 1 };
  s3 -> s2 [0, 65535] { R11372 += 1, R11310 += 1, R90 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R11372 += 1, R11309 += 1, R11310 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R11372 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R11374 += 1, R11312 += 1, R95 += 1, R96 += 1 };
  s0 -> s2 [0, 65535] { R11374 += 1, R11311 += 1, R11312 += 1 };
  s0 -> s3 [0, 65535] { R11374 += 1, R11312 += 1, R94 += 1, R95 += 1 };
  s0 -> s0 [0, 65535] { R11373 += 1, R11374 += 1 };
  s1 -> s4 [0, 65535] { R11374 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R11374 += 1, R11312 += 1, R95 += 1, R96 += 1 };
  s1 -> s6 [0, 65535] { R11374 += 1, R11312 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R11374 += 1, R11312 += 1, R95 += 1, R96 += 1 };
  s2 -> s2 [0, 65535] { R11374 += 1, R11311 += 1, R11312 += 1 };
  s2 -> s3 [0, 65535] { R11374 += 1, R11312 += 1, R94 += 1, R95 += 1 };
  s3 -> s4 [0, 65535] { R11374 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R11374 += 1, R11312 += 1, R95 += 1, R96 += 1 };
  s3 -> s3 [0, 65535] { R11374 += 1, R11312 += 1, R94 += 1, R95 += 1 };
  s4 -> s4 [0, 65535] { R11374 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R11374 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11374 += 1, R11312 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s0 [0, 65535] { R11375 += 1, R11376 += 1 };
  s0 -> s1 [0, 65535] { R11376 += 1, R11313 += 1, R11314 += 1 };
  s0 -> s2 [0, 65535] { R11376 += 1, R11314 += 1 };
  s1 -> s1 [0, 65535] { R11376 += 1, R11313 += 1, R11314 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R11376 += 1, R11314 += 1 };
  s2 -> s3 [0, 65535] { R11376 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R11376 += 1, R11314 += 1 };
  s3 -> s3 [0, 65535] { R11376 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R11378 += 1, R11316 += 1 };
  s0 -> s0 [0, 65535] { R11377 += 1, R11378 += 1 };
  s0 -> s2 [0, 65535] { R11378 += 1, R11315 += 1, R11316 += 1 };
  s1 -> s4 [0, 65535] { R11378 += 1 };
  s1 -> s1 [0, 65535] { R11378 += 1, R11316 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R11378 += 1, R11316 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R11378 += 1, R11315 += 1, R11316 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R11378 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R11380 += 1, R11317 += 1, R11318 += 1 };
  s0 -> s2 [0, 65535] { R11380 += 1, R11318 += 1 };
  s0 -> s0 [0, 65535] { R11379 += 1, R11380 += 1 };
  s0 -> s3 [0, 65535] { R11380 += 1, R11318 += 1, R11295 += 1 };
  s1 -> s1 [0, 65535] { R11380 += 1, R11317 += 1, R11318 += 1 };
  s1 -> s2 [0, 65535] { R11380 += 1, R11318 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R11380 += 1, R11318 += 1, R11295 += 1 };
  s2 -> s4 [0, 65535] { R11380 += 1 };
  s2 -> s2 [0, 65535] { R11380 += 1, R11318 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R11380 += 1 };
  s3 -> s2 [0, 65535] { R11380 += 1, R11318 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R11380 += 1, R11318 += 1, R11295 += 1 };
  s4 -> s4 [0, 65535] { R11380 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R11382 += 1, R11338 += 1, R21 += 1 };
  s0 -> s0 [0, 65535] { R11381 += 1, R11382 += 1 };
  s0 -> s2 [0, 65535] { R11382 += 1, R11337 += 1, R11338 += 1 };
  s1 -> s4 [0, 65535] { R11382 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R11382 += 1, R11338 += 1, R21 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R11382 += 1, R11338 += 1, R21 += 1 };
  s2 -> s2 [0, 65535] { R11382 += 1, R11337 += 1, R11338 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R11382 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R11384 += 1, R11340 += 1 };
  s0 -> s0 [0, 65535] { R11383 += 1, R11384 += 1 };
  s0 -> s2 [0, 65535] { R11384 += 1, R11339 += 1, R11340 += 1 };
  s0 -> s3 [70, 70] { R11384 += 1, R11340 += 1 };
  s0 -> s4 [70, 70] { R11384 += 1, R11340 += 1 };
  s0 -> s5 [75, 75] { R11384 += 1, R11340 += 1 };
  s0 -> s1 [76, 65535] { R11384 += 1, R11340 += 1 };
  s1 -> s1 [0, 69] { R11384 += 1, R11340 += 1 };
  s1 -> s3 [70, 70] { R11384 += 1, R11340 += 1 };
  s1 -> s4 [70, 70] { R11384 += 1, R11340 += 1 };
  s1 -> s5 [75, 75] { R11384 += 1, R11340 += 1 };
  s1 -> s1 [76, 65535] { R11384 += 1, R11340 += 1 };
  s2 -> s1 [0, 69] { R11384 += 1, R11340 += 1 };
  s2 -> s2 [0, 65535] { R11384 += 1, R11339 += 1, R11340 += 1 };
  s2 -> s3 [70, 70] { R11384 += 1, R11340 += 1 };
  s2 -> s4 [70, 70] { R11384 += 1, R11340 += 1 };
  s2 -> s5 [75, 75] { R11384 += 1, R11340 += 1 };
  s2 -> s1 [76, 65535] { R11384 += 1, R11340 += 1 };
  s4 -> s4 [0, 70] { R11384 += 1, R11340 += 1 };
  s4 -> s7 [75, 75] { R11384 += 1, R11340 += 1 };
  s4 -> s4 [76, 65535] { R11384 += 1, R11340 += 1 };
  s5 -> s5 [0, 69] { R11384 += 1, R11340 += 1 };
  s5 -> s5 [0, 65535] { R11384 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R11384 += 1, R11340 += 1 };
  s5 -> s8 [70, 70] { R11384 += 1, R11340 += 1 };
  s5 -> s5 [75, 65535] { R11384 += 1, R11340 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R11384 += 1, R11340 += 1 };
  s7 -> s7 [0, 65535] { R11384 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R11384 += 1, R11340 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R11384 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R11386 += 1, R11342 += 1, R83 += 1 };
  s0 -> s0 [0, 65535] { R11385 += 1, R11386 += 1 };
  s0 -> s2 [0, 65535] { R11386 += 1, R11341 += 1, R11342 += 1 };
  s0 -> s3 [70, 70] { R11386 += 1, R11342 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R11386 += 1, R11342 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R11386 += 1, R11342 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R11386 += 1, R11342 += 1, R83 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R11386 += 1 };
  s1 -> s3 [70, 70] { R11386 += 1, R11342 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R11386 += 1, R11342 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R11386 += 1, R11342 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R11386 += 1, R11342 += 1, R83 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R11386 += 1, R11341 += 1, R11342 += 1 };
  s2 -> s3 [70, 70] { R11386 += 1, R11342 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R11386 += 1, R11342 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R11386 += 1, R11342 += 1, R83 += 1 };
  s3 -> s3 [0, 65535] { R11386 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R11386 += 1, R11342 += 1, R83 += 1 };
  s4 -> s6 [0, 65535] { R11386 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11386 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R11388 += 1, R11344 += 1, R85 += 1 };
  s0 -> s0 [0, 65535] { R11387 += 1, R11388 += 1 };
  s0 -> s2 [0, 65535] { R11388 += 1, R11343 += 1, R11344 += 1 };
  s0 -> s3 [70, 70] { R11388 += 1, R11344 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R11388 += 1, R11344 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R11388 += 1, R11344 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R11388 += 1, R11344 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R11388 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R11388 += 1, R11344 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R11388 += 1, R11344 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R11388 += 1, R11344 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R11388 += 1, R11344 += 1, R85 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R11388 += 1, R11343 += 1, R11344 += 1 };
  s2 -> s3 [70, 70] { R11388 += 1, R11344 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R11388 += 1, R11344 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R11388 += 1, R11344 += 1, R85 += 1 };
  s3 -> s6 [0, 65535] { R11388 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R11388 += 1, R11344 += 1, R85 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R11388 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11388 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R11390 += 1, R11346 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R11390 += 1, R11346 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [0, 65535] { R11390 += 1, R11345 += 1, R11346 += 1 };
  s0 -> s0 [0, 65535] { R11389 += 1, R11390 += 1 };
  s0 -> s4 [70, 70] { R11390 += 1, R11346 += 1, R87 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R11390 += 1, R11346 += 1, R87 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R11390 += 1, R11346 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R11390 += 1, R11346 += 1, R88 += 1 };
  s0 -> s1 [71, 74] { R11390 += 1, R11346 += 1, R88 += 1 };
  s0 -> s2 [71, 65535] { R11390 += 1, R11346 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R11390 += 1, R11346 += 1, R88 += 1 };
  s0 -> s1 [76, 65535] { R11390 += 1, R11346 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R11390 += 1, R11346 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R11390 += 1, R11346 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R11390 += 1, R11346 += 1, R88 += 1 };
  s1 -> s1 [71, 74] { R11390 += 1, R11346 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R11390 += 1, R11346 += 1, R88 += 1 };
  s1 -> s1 [76, 65535] { R11390 += 1, R11346 += 1, R88 += 1 };
  s2 -> s1 [0, 69] { R11390 += 1, R11346 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R11390 += 1, R11346 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R11390 += 1, R11346 += 1, R87 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R11390 += 1, R11346 += 1, R87 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R11390 += 1, R11346 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R11390 += 1, R11346 += 1, R88 += 1 };
  s2 -> s1 [71, 74] { R11390 += 1, R11346 += 1, R88 += 1 };
  s2 -> s2 [71, 65535] { R11390 += 1, R11346 += 1, R87 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R11390 += 1, R11346 += 1, R88 += 1 };
  s2 -> s1 [76, 65535] { R11390 += 1, R11346 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R11390 += 1, R11346 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R11390 += 1, R11346 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R11390 += 1, R11345 += 1, R11346 += 1 };
  s3 -> s4 [70, 70] { R11390 += 1, R11346 += 1, R87 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R11390 += 1, R11346 += 1, R87 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R11390 += 1, R11346 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R11390 += 1, R11346 += 1, R88 += 1 };
  s3 -> s1 [71, 74] { R11390 += 1, R11346 += 1, R88 += 1 };
  s3 -> s2 [71, 65535] { R11390 += 1, R11346 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R11390 += 1, R11346 += 1, R88 += 1 };
  s3 -> s1 [76, 65535] { R11390 += 1, R11346 += 1, R88 += 1 };
  s5 -> s7 [0, 74] { R11390 += 1, R11346 += 1, R88 += 1 };
  s5 -> s5 [0, 65535] { R11390 += 1, R11346 += 1, R87 += 1, R88 += 1 };
  s5 -> s11 [75, 75] { R11390 += 1, R11346 += 1, R88 += 1 };
  s5 -> s7 [76, 65535] { R11390 += 1, R11346 += 1, R88 += 1 };
  s7 -> s7 [0, 74] { R11390 += 1, R11346 += 1, R88 += 1 };
  s7 -> s11 [75, 75] { R11390 += 1, R11346 += 1, R88 += 1 };
  s7 -> s7 [76, 65535] { R11390 += 1, R11346 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R11390 += 1, R11346 += 1, R88 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R11390 += 1 };
  s8 -> s10 [70, 70] { R11390 += 1, R11346 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R11390 += 1, R11346 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R11390 += 1, R11346 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R11390 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R11390 += 1, R11346 += 1, R88 += 1 };
  s11 -> s12 [0, 65535] { R11390 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R11390 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R11392 += 1, R11348 += 1, R91 += 1, R92 += 1 };
  s0 -> s2 [0, 65535] { R11392 += 1, R11347 += 1, R11348 += 1 };
  s0 -> s0 [0, 65535] { R11391 += 1, R11392 += 1 };
  s0 -> s3 [70, 70] { R11392 += 1, R11348 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R11392 += 1, R11348 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R11392 += 1, R11348 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R11392 += 1, R11348 += 1, R91 += 1, R92 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R11392 += 1 };
  s1 -> s3 [70, 70] { R11392 += 1, R11348 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R11392 += 1, R11348 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R11392 += 1, R11348 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R11392 += 1, R11348 += 1, R91 += 1, R92 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R11392 += 1, R11347 += 1, R11348 += 1 };
  s2 -> s3 [70, 70] { R11392 += 1, R11348 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R11392 += 1, R11348 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R11392 += 1, R11348 += 1, R91 += 1, R92 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R11392 += 1, R11348 += 1, R91 += 1, R92 += 1 };
  s3 -> s6 [0, 65535] { R11392 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R11392 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11392 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R11394 += 1, R11350 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s2 [0, 69] { R11394 += 1, R11350 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s0 [0, 65535] { R11393 += 1, R11394 += 1 };
  s0 -> s3 [0, 65535] { R11394 += 1, R11349 += 1, R11350 += 1 };
  s0 -> s4 [70, 70] { R11394 += 1, R11350 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s5 [70, 70] { R11394 += 1, R11350 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s6 [70, 70] { R11394 += 1, R11350 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s7 [70, 70] { R11394 += 1, R11350 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s1 [71, 65535] { R11394 += 1, R11350 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s2 [71, 65535] { R11394 += 1, R11350 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s1 [0, 69] { R11394 += 1, R11350 += 1, R10159 += 1, R10160 += 1 };
  s1 -> s2 [0, 69] { R11394 += 1, R11350 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s4 [70, 70] { R11394 += 1, R11350 += 1, R10159 += 1, R10160 += 1 };
  s1 -> s5 [70, 70] { R11394 += 1, R11350 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s6 [70, 70] { R11394 += 1, R11350 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s7 [70, 70] { R11394 += 1, R11350 += 1, R10159 += 1, R10160 += 1 };
  s1 -> s1 [71, 65535] { R11394 += 1, R11350 += 1, R10159 += 1, R10160 += 1 };
  s1 -> s2 [71, 65535] { R11394 += 1, R11350 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s11 [0, 69] { R11394 += 1, R11350 += 1 };
  s2 -> s2 [0, 69] { R11394 += 1, R11350 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s5 [70, 70] { R11394 += 1, R11350 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s6 [70, 70] { R11394 += 1, R11350 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s12 [70, 70] { R11394 += 1, R11350 += 1 };
  s2 -> s8 [70, 70] { R11394 += 1, R11350 += 1 };
  s2 -> s11 [71, 65535] { R11394 += 1, R11350 += 1 };
  s2 -> s2 [71, 65535] { R11394 += 1, R11350 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s1 [0, 69] { R11394 += 1, R11350 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s2 [0, 69] { R11394 += 1, R11350 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s3 [0, 65535] { R11394 += 1, R11349 += 1, R11350 += 1 };
  s3 -> s4 [70, 70] { R11394 += 1, R11350 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s5 [70, 70] { R11394 += 1, R11350 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s6 [70, 70] { R11394 += 1, R11350 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s7 [70, 70] { R11394 += 1, R11350 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s1 [71, 65535] { R11394 += 1, R11350 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s2 [71, 65535] { R11394 += 1, R11350 += 1, R10160 += 1, R10161 += 1 };
  s4 -> s4 [0, 65535] { R11394 += 1, R11350 += 1, R10159 += 1, R10160 += 1 };
  s4 -> s6 [0, 65535] { R11394 += 1, R11350 += 1, R10160 += 1, R10161 += 1 };
  s6 -> s6 [0, 65535] { R11394 += 1, R11350 += 1, R10160 += 1, R10161 += 1 };
  s6 -> s8 [0, 65535] { R11394 += 1, R11350 += 1 };
  s8 -> s9 [0, 65535] { R11394 += 1 };
  s8 -> s10 [0, 65535];
  s8 -> s8 [0, 65535] { R11394 += 1, R11350 += 1 };
  s9 -> s9 [0, 65535] { R11394 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  s11 -> s11 [0, 69] { R11394 += 1, R11350 += 1 };
  s11 -> s11 [0, 65535] { R11394 += 1 };
  s11 -> s10 [0, 65535];
  s11 -> s12 [70, 70] { R11394 += 1, R11350 += 1 };
  s11 -> s8 [70, 70] { R11394 += 1, R11350 += 1 };
  s11 -> s11 [71, 65535] { R11394 += 1, R11350 += 1 };
  s12 -> s10 [0, 65535];
  s12 -> s12 [0, 65535] { R11394 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R11396 += 1, R11352 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s0 -> s2 [0, 69] { R11396 += 1, R11352 += 1, R11281 += 1, R11282 += 1 };
  s0 -> s3 [0, 69] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s0 -> s0 [0, 65535] { R11395 += 1, R11396 += 1 };
  s0 -> s4 [0, 65535] { R11396 += 1, R11351 += 1, R11352 += 1 };
  s0 -> s5 [70, 70] { R11396 += 1, R11352 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s0 -> s6 [70, 70] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s0 -> s7 [70, 70] { R11396 += 1, R11352 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s0 -> s8 [70, 70] { R11396 += 1, R11352 += 1, R11281 += 1, R11282 += 1 };
  s0 -> s9 [70, 70] { R11396 += 1, R11352 += 1, R11281 += 1, R11282 += 1 };
  s0 -> s10 [70, 70] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s0 -> s3 [71, 74] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s0 -> s1 [71, 65535] { R11396 += 1, R11352 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s0 -> s2 [71, 65535] { R11396 += 1, R11352 += 1, R11281 += 1, R11282 += 1 };
  s0 -> s11 [75, 75] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s0 -> s3 [76, 65535] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s1 -> s1 [0, 69] { R11396 += 1, R11352 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s1 -> s3 [0, 69] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s1 -> s5 [70, 70] { R11396 += 1, R11352 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s1 -> s6 [70, 70] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s1 -> s7 [70, 70] { R11396 += 1, R11352 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s1 -> s10 [70, 70] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s1 -> s3 [71, 74] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s1 -> s1 [71, 65535] { R11396 += 1, R11352 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s1 -> s11 [75, 75] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s1 -> s3 [76, 65535] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s2 -> s1 [0, 69] { R11396 += 1, R11352 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s2 -> s2 [0, 69] { R11396 += 1, R11352 += 1, R11281 += 1, R11282 += 1 };
  s2 -> s3 [0, 69] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s2 -> s5 [70, 70] { R11396 += 1, R11352 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s2 -> s6 [70, 70] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s2 -> s7 [70, 70] { R11396 += 1, R11352 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s2 -> s8 [70, 70] { R11396 += 1, R11352 += 1, R11281 += 1, R11282 += 1 };
  s2 -> s9 [70, 70] { R11396 += 1, R11352 += 1, R11281 += 1, R11282 += 1 };
  s2 -> s10 [70, 70] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s2 -> s3 [71, 74] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s2 -> s1 [71, 65535] { R11396 += 1, R11352 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s2 -> s2 [71, 65535] { R11396 += 1, R11352 += 1, R11281 += 1, R11282 += 1 };
  s2 -> s11 [75, 75] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s2 -> s3 [76, 65535] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s3 -> s3 [0, 69] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s3 -> s6 [70, 70] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s3 -> s10 [70, 70] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s3 -> s3 [71, 74] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s3 -> s11 [75, 75] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s3 -> s3 [76, 65535] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s4 -> s1 [0, 69] { R11396 += 1, R11352 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s4 -> s2 [0, 69] { R11396 += 1, R11352 += 1, R11281 += 1, R11282 += 1 };
  s4 -> s3 [0, 69] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s4 -> s4 [0, 65535] { R11396 += 1, R11351 += 1, R11352 += 1 };
  s4 -> s5 [70, 70] { R11396 += 1, R11352 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s4 -> s6 [70, 70] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s4 -> s7 [70, 70] { R11396 += 1, R11352 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s4 -> s8 [70, 70] { R11396 += 1, R11352 += 1, R11281 += 1, R11282 += 1 };
  s4 -> s9 [70, 70] { R11396 += 1, R11352 += 1, R11281 += 1, R11282 += 1 };
  s4 -> s10 [70, 70] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s4 -> s3 [71, 74] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s4 -> s1 [71, 65535] { R11396 += 1, R11352 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s4 -> s2 [71, 65535] { R11396 += 1, R11352 += 1, R11281 += 1, R11282 += 1 };
  s4 -> s11 [75, 75] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s4 -> s3 [76, 65535] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s6 -> s6 [0, 74] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s6 -> s14 [75, 75] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s6 -> s6 [76, 65535] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s7 -> s6 [0, 74] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s7 -> s7 [0, 65535] { R11396 += 1, R11352 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s7 -> s14 [75, 75] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s7 -> s6 [76, 65535] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s9 -> s6 [0, 74] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s9 -> s7 [0, 65535] { R11396 += 1, R11352 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s9 -> s9 [0, 65535] { R11396 += 1, R11352 += 1, R11281 += 1, R11282 += 1 };
  s9 -> s14 [75, 75] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s9 -> s6 [76, 65535] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s11 -> s11 [0, 69] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s11 -> s12 [0, 69] { R11396 += 1, R11352 += 1 };
  s11 -> s13 [0, 69] { R11396 += 1, R11352 += 1, R11282 += 1 };
  s11 -> s14 [70, 70] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s11 -> s15 [70, 70] { R11396 += 1, R11352 += 1, R11282 += 1 };
  s11 -> s16 [70, 70] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s11 -> s17 [70, 70] { R11396 += 1, R11352 += 1 };
  s11 -> s18 [70, 70] { R11396 += 1, R11352 += 1 };
  s11 -> s19 [70, 70] { R11396 += 1, R11352 += 1, R11282 += 1 };
  s11 -> s11 [71, 65535] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s11 -> s12 [71, 65535] { R11396 += 1, R11352 += 1 };
  s11 -> s13 [71, 65535] { R11396 += 1, R11352 += 1, R11282 += 1 };
  s12 -> s12 [0, 69] { R11396 += 1, R11352 += 1 };
  s12 -> s20 [0, 65535];
  s12 -> s12 [0, 65535] { R11396 += 1 };
  s12 -> s17 [70, 70] { R11396 += 1, R11352 += 1 };
  s12 -> s18 [70, 70] { R11396 += 1, R11352 += 1 };
  s12 -> s12 [71, 65535] { R11396 += 1, R11352 += 1 };
  s13 -> s12 [0, 69] { R11396 += 1, R11352 += 1 };
  s13 -> s13 [0, 69] { R11396 += 1, R11352 += 1, R11282 += 1 };
  s13 -> s15 [70, 70] { R11396 += 1, R11352 += 1, R11282 += 1 };
  s13 -> s17 [70, 70] { R11396 += 1, R11352 += 1 };
  s13 -> s18 [70, 70] { R11396 += 1, R11352 += 1 };
  s13 -> s19 [70, 70] { R11396 += 1, R11352 += 1, R11282 += 1 };
  s13 -> s12 [71, 65535] { R11396 += 1, R11352 += 1 };
  s13 -> s13 [71, 65535] { R11396 += 1, R11352 += 1, R11282 += 1 };
  s14 -> s14 [0, 65535] { R11396 += 1, R11352 += 1, R11282 += 1, R11284 += 1 };
  s14 -> s15 [0, 65535] { R11396 += 1, R11352 += 1, R11282 += 1 };
  s14 -> s17 [0, 65535] { R11396 += 1, R11352 += 1 };
  s15 -> s15 [0, 65535] { R11396 += 1, R11352 += 1, R11282 += 1 };
  s15 -> s17 [0, 65535] { R11396 += 1, R11352 += 1 };
  s17 -> s21 [0, 65535] { R11396 += 1 };
  s17 -> s17 [0, 65535] { R11396 += 1, R11352 += 1 };
  s17 -> s20 [0, 65535];
  s18 -> s20 [0, 65535];
  s18 -> s18 [0, 65535] { R11396 += 1 };
  s20 -> s20 [0, 65535];
  s21 -> s21 [0, 65535] { R11396 += 1 };
  s21 -> s20 [0, 65535];
  accepting s17, s12, s21, s20, s18;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R11398 += 1, R11354 += 1, R11289 += 1, R11290 += 1 };
  s0 -> s2 [0, 69] { R11398 += 1, R11354 += 1, R11290 += 1, R11292 += 1, R11293 += 1 };
  s0 -> s3 [0, 69] { R11398 += 1, R11354 += 1, R11290 += 1, R11291 += 1, R11292 += 1 };
  s0 -> s4 [0, 65535] { R11398 += 1, R11353 += 1, R11354 += 1 };
  s0 -> s0 [0, 65535] { R11397 += 1, R11398 += 1 };
  s0 -> s5 [70, 70] { R11398 += 1, R11354 += 1, R11290 += 1, R11292 += 1, R11293 += 1 };
  s0 -> s6 [70, 70] { R11398 += 1, R11354 += 1, R11289 += 1, R11290 += 1 };
  s0 -> s7 [70, 70] { R11398 += 1, R11354 += 1, R11289 += 1, R11290 += 1 };
  s0 -> s8 [70, 70] { R11398 += 1, R11354 += 1, R11290 += 1, R11291 += 1, R11292 += 1 };
  s0 -> s9 [70, 70] { R11398 += 1, R11354 += 1, R11290 += 1, R11292 += 1, R11293 += 1 };
  s0 -> s10 [70, 70] { R11398 += 1, R11354 += 1, R11290 += 1, R11291 += 1, R11292 += 1 };
  s0 -> s1 [71, 65535] { R11398 += 1, R11354 += 1, R11289 += 1, R11290 += 1 };
  s0 -> s2 [71, 65535] { R11398 += 1, R11354 += 1, R11290 += 1, R11292 += 1, R11293 += 1 };
  s0 -> s3 [71, 65535] { R11398 += 1, R11354 += 1, R11290 += 1, R11291 += 1, R11292 += 1 };
  s1 -> s1 [0, 69] { R11398 += 1, R11354 += 1, R11289 += 1, R11290 += 1 };
  s1 -> s2 [0, 69] { R11398 += 1, R11354 += 1, R11290 += 1, R11292 += 1, R11293 += 1 };
  s1 -> s3 [0, 69] { R11398 += 1, R11354 += 1, R11290 += 1, R11291 += 1, R11292 += 1 };
  s1 -> s5 [70, 70] { R11398 += 1, R11354 += 1, R11290 += 1, R11292 += 1, R11293 += 1 };
  s1 -> s6 [70, 70] { R11398 += 1, R11354 += 1, R11289 += 1, R11290 += 1 };
  s1 -> s7 [70, 70] { R11398 += 1, R11354 += 1, R11289 += 1, R11290 += 1 };
  s1 -> s8 [70, 70] { R11398 += 1, R11354 += 1, R11290 += 1, R11291 += 1, R11292 += 1 };
  s1 -> s9 [70, 70] { R11398 += 1, R11354 += 1, R11290 += 1, R11292 += 1, R11293 += 1 };
  s1 -> s10 [70, 70] { R11398 += 1, R11354 += 1, R11290 += 1, R11291 += 1, R11292 += 1 };
  s1 -> s1 [71, 65535] { R11398 += 1, R11354 += 1, R11289 += 1, R11290 += 1 };
  s1 -> s2 [71, 65535] { R11398 += 1, R11354 += 1, R11290 += 1, R11292 += 1, R11293 += 1 };
  s1 -> s3 [71, 65535] { R11398 += 1, R11354 += 1, R11290 += 1, R11291 += 1, R11292 += 1 };
  s2 -> s14 [0, 69] { R11398 += 1, R11354 += 1, R11290 += 1 };
  s2 -> s2 [0, 69] { R11398 += 1, R11354 += 1, R11290 += 1, R11292 += 1, R11293 += 1 };
  s2 -> s11 [70, 70] { R11398 += 1, R11354 += 1, R11290 += 1 };
  s2 -> s5 [70, 70] { R11398 += 1, R11354 += 1, R11290 += 1, R11292 += 1, R11293 += 1 };
  s2 -> s15 [70, 70] { R11398 += 1, R11354 += 1, R11290 += 1 };
  s2 -> s9 [70, 70] { R11398 += 1, R11354 += 1, R11290 += 1, R11292 += 1, R11293 += 1 };
  s2 -> s14 [71, 65535] { R11398 += 1, R11354 += 1, R11290 += 1 };
  s2 -> s2 [71, 65535] { R11398 += 1, R11354 += 1, R11290 += 1, R11292 += 1, R11293 += 1 };
  s3 -> s2 [0, 69] { R11398 += 1, R11354 += 1, R11290 += 1, R11292 += 1, R11293 += 1 };
  s3 -> s3 [0, 69] { R11398 += 1, R11354 += 1, R11290 += 1, R11291 += 1, R11292 += 1 };
  s3 -> s5 [70, 70] { R11398 += 1, R11354 += 1, R11290 += 1, R11292 += 1, R11293 += 1 };
  s3 -> s8 [70, 70] { R11398 += 1, R11354 += 1, R11290 += 1, R11291 += 1, R11292 += 1 };
  s3 -> s9 [70, 70] { R11398 += 1, R11354 += 1, R11290 += 1, R11292 += 1, R11293 += 1 };
  s3 -> s10 [70, 70] { R11398 += 1, R11354 += 1, R11290 += 1, R11291 += 1, R11292 += 1 };
  s3 -> s2 [71, 65535] { R11398 += 1, R11354 += 1, R11290 += 1, R11292 += 1, R11293 += 1 };
  s3 -> s3 [71, 65535] { R11398 += 1, R11354 += 1, R11290 += 1, R11291 += 1, R11292 += 1 };
  s4 -> s1 [0, 69] { R11398 += 1, R11354 += 1, R11289 += 1, R11290 += 1 };
  s4 -> s2 [0, 69] { R11398 += 1, R11354 += 1, R11290 += 1, R11292 += 1, R11293 += 1 };
  s4 -> s3 [0, 69] { R11398 += 1, R11354 += 1, R11290 += 1, R11291 += 1, R11292 += 1 };
  s4 -> s4 [0, 65535] { R11398 += 1, R11353 += 1, R11354 += 1 };
  s4 -> s5 [70, 70] { R11398 += 1, R11354 += 1, R11290 += 1, R11292 += 1, R11293 += 1 };
  s4 -> s6 [70, 70] { R11398 += 1, R11354 += 1, R11289 += 1, R11290 += 1 };
  s4 -> s7 [70, 70] { R11398 += 1, R11354 += 1, R11289 += 1, R11290 += 1 };
  s4 -> s8 [70, 70] { R11398 += 1, R11354 += 1, R11290 += 1, R11291 += 1, R11292 += 1 };
  s4 -> s9 [70, 70] { R11398 += 1, R11354 += 1, R11290 += 1, R11292 += 1, R11293 += 1 };
  s4 -> s10 [70, 70] { R11398 += 1, R11354 += 1, R11290 += 1, R11291 += 1, R11292 += 1 };
  s4 -> s1 [71, 65535] { R11398 += 1, R11354 += 1, R11289 += 1, R11290 += 1 };
  s4 -> s2 [71, 65535] { R11398 += 1, R11354 += 1, R11290 += 1, R11292 += 1, R11293 += 1 };
  s4 -> s3 [71, 65535] { R11398 += 1, R11354 += 1, R11290 += 1, R11291 += 1, R11292 += 1 };
  s5 -> s11 [0, 65535] { R11398 += 1, R11354 += 1, R11290 += 1 };
  s5 -> s5 [0, 65535] { R11398 += 1, R11354 += 1, R11290 += 1, R11292 += 1, R11293 += 1 };
  s7 -> s5 [0, 65535] { R11398 += 1, R11354 += 1, R11290 += 1, R11292 += 1, R11293 += 1 };
  s7 -> s7 [0, 65535] { R11398 += 1, R11354 += 1, R11289 += 1, R11290 += 1 };
  s7 -> s8 [0, 65535] { R11398 += 1, R11354 += 1, R11290 += 1, R11291 += 1, R11292 += 1 };
  s8 -> s5 [0, 65535] { R11398 += 1, R11354 += 1, R11290 += 1, R11292 += 1, R11293 += 1 };
  s8 -> s8 [0, 65535] { R11398 += 1, R11354 += 1, R11290 += 1, R11291 += 1, R11292 += 1 };
  s11 -> s11 [0, 65535] { R11398 += 1, R11354 += 1, R11290 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [0, 65535] { R11398 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R11398 += 1 };
  s14 -> s14 [0, 69] { R11398 += 1, R11354 += 1, R11290 += 1 };
  s14 -> s14 [0, 65535] { R11398 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s11 [70, 70] { R11398 += 1, R11354 += 1, R11290 += 1 };
  s14 -> s15 [70, 70] { R11398 += 1, R11354 += 1, R11290 += 1 };
  s14 -> s14 [71, 65535] { R11398 += 1, R11354 += 1, R11290 += 1 };
  s15 -> s15 [0, 65535] { R11398 += 1 };
  s15 -> s12 [0, 65535];
  accepting s12, s13, s14, s15, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R11398 && R23 - R11398 = -1 && R24 = R11398 && R25 - R11398 = -1 && R26 = R11398 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R11286 + -1*R11282 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R11286 + -1*R11282 - R66 = 0 && R55 + R96 + R93 + -1*R11288 + -1*R11284 - R68 = 0 && R65 + R11285 + R11281 = 0 && R67 + R11287 + R11283 = 0 && R11339 = 0 && R11340 = 0 && R11345 = 0 && R11346 = 0 && R11349 = 0 && R11350 = 0 && R11351 = 0 && R11352 = 0 && R11353 = 0 && R11354 = 0 && R11355 = 0 && R11356 = R11398 && R11357 = 0 && R11358 = R11398 && R11359 = 0 && R11360 = R11398 && R11361 = 0 && R11362 = R11398 && R11363 = 0 && R11364 = R11398 && R11365 = 0 && R11366 = R11398 && R11367 = 0 && R11368 = R11398 && R11369 = 0 && R11370 = R11398 && R11371 = 0 && R11372 = R11398 && R11373 = 0 && R11374 = R11398 && R11375 = 0 && R11376 = R11398 && R11377 = 0 && R11378 = R11398 && R11379 = 0 && R11380 = R11398 && R11381 = 0 && R11382 = R11398 && R11383 = 0 && R11384 = R11398 && R11385 = 0 && R11386 = R11398 && R11387 = 0 && R11388 = R11398 && R11389 = 0 && R11390 = R11398 && R11391 = 0 && R11392 = R11398 && R11393 = 0 && R11394 = R11398 && R11395 = 0 && R11396 = R11398 && R11397 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R10164 + R10161 < 1 && -1*R11286 + -1*R11282 - R66 < 1 && -1*R11288 + -1*R11284 - R68 < 1 && 0 < R11398 && (R2 != 0 || R20 = 0 || (R11299 = 0 && R11300 = 0)) && (R2 != 0 || R20 = 0 || (R11301 = 0 && R11302 = 0)) && (R2 != 0 || R20 = 0 || (R11303 = 0 && R11304 = 0)) && (R2 != 0 || R20 = 0 || (R11305 = 0 && R11306 = 0)) && (R2 != 0 || R20 = 0 || (R11307 = 0 && R11308 = 0)) && (R2 != 0 || R20 = 0 || (R11309 = 0 && R11310 = 0)) && (R2 != 0 || R20 = 0 || (R11311 = 0 && R11312 = 0)) && (R2 != 0 || R20 = 0 || (R11313 = 0 && R11314 = 0)) && (R2 != 0 || R20 = 0 || (R11315 = 0 && R11316 = 0)) && (R2 != 0 || R20 = 0 || (R11317 = 0 && R11318 = 0)) && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R11286 + -1*R11282 - R66 = 0 || R66 + R11286 + R11282 < 1) && (R59 + R10162 + R10159 != 0 || R60 + R10163 + R10160 + -1*R11286 + -1*R11282 - R66 = 0 || R66 + R11286 + R11282 < 1) && (R66 + R11286 + R11282 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R11288 + R11284 < 1) && (R53 + R94 + R91 = 0 || R68 + R11288 + R11284 < 1))) && (R66 + R11286 + R11282 != 0 || ((R59 + R10162 + R10159 != 0 || R60 + R10163 + R10160 = 0 || R68 + R11288 + R11284 < 1) && (R59 + R10162 + R10159 = 0 || R68 + R11288 + R11284 < 1))) && (R66 + R11286 + R11282 != 0 || ((R73 + R11294 + R11289 != 0 || R74 + R11295 + R11290 = 0 || R68 + R11288 + R11284 < 1) && (R73 + R11294 + R11289 = 0 || R68 + R11288 + R11284 < 1))) && (R68 + R11288 + R11284 != 0 || R77 + R11298 + R11293 = 0 || (R75 + R11296 + R11291 = 0 && R76 + R11297 + R11292 = 0)) && (R73 + R11294 + R11289 != 0 || R66 + R11286 + R11282 + -1*R11295 + -1*R11290 - R74 = 0 || R66 + R11286 + R11282 < 1) && (R75 + R11296 + R11291 != 0 || R68 + R11288 + R11284 + -1*R11297 + -1*R11292 - R76 = 0 || R68 + R11288 + R11284 < 1) && (R11299 != 0 || R2 = R11300 || R2 < 1) && (R11301 != 0 || R2 = R11302 || R2 < 1) && (R11303 != 0 || R2 = R11304 || R2 < 1) && (R11305 != 0 || R2 = R11306 || R2 < 1) && (R11307 != 0 || R2 = R11308 || R2 < 1) && (R11309 != 0 || R2 = R11310 || R2 < 1) && (R11311 != 0 || R2 = R11312 || R2 < 1) && (R11313 != 0 || R2 = R11314 || R2 < 1) && (R11315 != 0 || R2 = R11316 || R2 < 1) && (R11317 != 0 || R2 = R11318 || R2 < 1) && (R21 = 0 || (R11337 = 0 && R11338 = 0)) && (R21 = 0 || (R11341 = 0 && R11342 = 0)) && (R21 = 0 || (R11343 = 0 && R11344 = 0)) && (R21 = 0 || (R11347 = 0 && R11348 = 0)) && (R22 = 0 || (R11319 = 0 && R11320 = 0)) && (R22 = 0 || (R11321 = 0 && R11322 = 0)) && (R22 = 0 || (R11323 = 0 && R11324 = 0)) && (R22 = 0 || (R11325 = 0 && R11326 = 0)) && (R22 = 0 || (R11327 = 0 && R11328 = 0)) && (R22 = 0 || (R11329 = 0 && R11330 = 0)) && (R22 = 0 || (R11331 = 0 && R11332 = 0)) && (R22 = 0 || (R11333 = 0 && R11334 = 0)) && (R22 = 0 || (R11335 = 0 && R11336 = 0)) && (R53 + R94 + R91 = 0 || R66 + R11286 + R11282 < 1) && (R59 + R10162 + R10159 = 0 || R66 + R11286 + R11282 < 1) && (R73 + R11294 + R11289 = 0 || R66 + R11286 + R11282 < 1) && (R75 + R11296 + R11291 = 0 || R68 + R11288 + R11284 < 1) && (R11299 = 0 || R2 < 1) && (R11301 = 0 || R2 < 1) && (R11303 = 0 || R2 < 1) && (R11305 = 0 || R2 < 1) && (R11307 = 0 || R2 < 1) && (R11309 = 0 || R2 < 1) && (R11311 = 0 || R2 < 1) && (R11313 = 0 || R2 < 1) && (R11315 = 0 || R2 < 1) && (R11317 = 0 || R2 < 1);
// End of Parikh automata intersection problem
