// Parikh automata intersection problem, generated by OSTRICH+
counter int
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R14451 += 1, R14452 += 1 };
  s0 -> s1 [0, 65535] { R14452 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R14452 += 1, R22 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R14454 += 1 };
  s0 -> s0 [0, 65535] { R14453 += 1, R14454 += 1 };
  s0 -> s2 [70, 70] { R14454 += 1 };
  s0 -> s3 [70, 70] { R14454 += 1 };
  s0 -> s1 [76, 65535] { R14454 += 1 };
  s1 -> s1 [0, 69] { R14454 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14454 += 1 };
  s1 -> s3 [70, 70] { R14454 += 1 };
  s1 -> s1 [76, 65535] { R14454 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R14454 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R14454 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R14456 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R14455 += 1, R14456 += 1 };
  s0 -> s2 [70, 70] { R14456 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R14456 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R14456 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R14456 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14456 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R14456 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R14456 += 1, R45 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R14456 += 1, R45 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R14458 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R14457 += 1, R14458 += 1 };
  s0 -> s2 [70, 70] { R14458 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R14458 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R14458 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R14458 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14458 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R14458 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R14458 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R14458 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R14460 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R14459 += 1, R14460 += 1 };
  s0 -> s2 [70, 70] { R14460 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R14460 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R14460 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R14460 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14460 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R14460 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R14460 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535] { R14460 += 1, R49 += 1, R50 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R14462 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R14461 += 1, R14462 += 1 };
  s0 -> s2 [70, 70] { R14462 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R14462 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R14462 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R14462 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14462 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R14462 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R14462 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R14462 += 1, R53 += 1, R54 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R14464 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R14463 += 1, R14464 += 1 };
  s0 -> s2 [70, 70] { R14464 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R14464 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R14464 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R14464 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14464 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R14464 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R14464 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R14464 += 1, R59 += 1, R60 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R14466 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R14465 += 1, R14466 += 1 };
  s0 -> s2 [70, 70] { R14466 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R14466 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R14466 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R14466 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14466 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R14466 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R14466 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535] { R14466 += 1, R65 += 1, R66 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R14468 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R14467 += 1, R14468 += 1 };
  s0 -> s2 [70, 70] { R14468 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R14468 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R14468 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R14468 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R14468 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R14468 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R14468 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R14468 += 1, R73 += 1, R74 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R14488 += 1 };
  s0 -> s0 [0, 65535] { R14487 += 1, R14488 += 1 };
  s0 -> s2 [70, 70] { R14488 += 1 };
  s0 -> s1 [71, 65535] { R14488 += 1 };
  s1 -> s1 [0, 69] { R14488 += 1 };
  s1 -> s2 [70, 70] { R14488 += 1 };
  s1 -> s1 [71, 65535] { R14488 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R14488 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R14489 += 1, R14490 += 1 };
  s0 -> s1 [0, 65535] { R14490 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R14490 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R14492 += 1 };
  s0 -> s0 [0, 65535] { R14491 += 1, R14492 += 1 };
  s0 -> s2 [0, 65535] { R14492 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R14492 += 1 };
  s0 -> s1 [71, 65535] { R14492 += 1 };
  s1 -> s1 [0, 69] { R14492 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R14492 += 1 };
  s1 -> s1 [71, 65535] { R14492 += 1 };
  s2 -> s1 [0, 69] { R14492 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R14492 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R14492 += 1 };
  s2 -> s1 [71, 65535] { R14492 += 1 };
  s3 -> s3 [0, 65535] { R14492 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R14494 += 1, R14432 += 1 };
  s0 -> s2 [0, 65535] { R14494 += 1, R14431 += 1, R14432 += 1 };
  s0 -> s0 [0, 65535] { R14493 += 1, R14494 += 1 };
  s0 -> s1 [71, 65535] { R14494 += 1, R14432 += 1 };
  s1 -> s1 [0, 69] { R14494 += 1, R14432 += 1 };
  s1 -> s1 [0, 65535] { R14494 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R14494 += 1, R14432 += 1 };
  s2 -> s1 [0, 69] { R14494 += 1, R14432 += 1 };
  s2 -> s2 [0, 65535] { R14494 += 1, R14431 += 1, R14432 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R14494 += 1, R14432 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R14496 += 1, R14434 += 1, R20 += 1 };
  s0 -> s0 [0, 65535] { R14495 += 1, R14496 += 1 };
  s0 -> s2 [0, 65535] { R14496 += 1, R14433 += 1, R14434 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R14496 += 1, R14434 += 1, R20 += 1 };
  s1 -> s4 [0, 65535] { R14496 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R14496 += 1, R14434 += 1, R20 += 1 };
  s2 -> s2 [0, 65535] { R14496 += 1, R14433 += 1, R14434 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R14496 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R14498 += 1, R14436 += 1 };
  s0 -> s0 [0, 65535] { R14497 += 1, R14498 += 1 };
  s0 -> s2 [0, 65535] { R14498 += 1, R14435 += 1, R14436 += 1 };
  s0 -> s1 [75, 65535] { R14498 += 1, R14436 += 1 };
  s1 -> s1 [0, 70] { R14498 += 1, R14436 += 1 };
  s1 -> s1 [0, 65535] { R14498 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R14498 += 1, R14436 += 1 };
  s2 -> s1 [0, 70] { R14498 += 1, R14436 += 1 };
  s2 -> s2 [0, 65535] { R14498 += 1, R14435 += 1, R14436 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R14498 += 1, R14436 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R14500 += 1, R14438 += 1, R84 += 1 };
  s0 -> s0 [0, 65535] { R14499 += 1, R14500 += 1 };
  s0 -> s2 [0, 65535] { R14500 += 1, R14437 += 1, R14438 += 1 };
  s1 -> s1 [0, 65535] { R14500 += 1, R14438 += 1, R84 += 1 };
  s1 -> s4 [0, 65535] { R14500 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R14500 += 1, R14438 += 1, R84 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R14500 += 1, R14437 += 1, R14438 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R14500 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R14502 += 1, R14440 += 1 };
  s0 -> s2 [0, 65535] { R14502 += 1, R14439 += 1, R14440 += 1 };
  s0 -> s0 [0, 65535] { R14501 += 1, R14502 += 1 };
  s0 -> s3 [0, 65535] { R14502 += 1, R14440 += 1, R86 += 1 };
  s0 -> s1 [76, 65535] { R14502 += 1, R14440 += 1 };
  s1 -> s1 [0, 74] { R14502 += 1, R14440 += 1 };
  s1 -> s1 [0, 65535] { R14502 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [76, 65535] { R14502 += 1, R14440 += 1 };
  s2 -> s1 [0, 74] { R14502 += 1, R14440 += 1 };
  s2 -> s2 [0, 65535] { R14502 += 1, R14439 += 1, R14440 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R14502 += 1, R14440 += 1, R86 += 1 };
  s2 -> s1 [76, 65535] { R14502 += 1, R14440 += 1 };
  s3 -> s1 [0, 74] { R14502 += 1, R14440 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R14502 += 1, R14440 += 1, R86 += 1 };
  s3 -> s5 [0, 65535] { R14502 += 1 };
  s3 -> s1 [76, 65535] { R14502 += 1, R14440 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R14502 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R14504 += 1, R14442 += 1 };
  s0 -> s2 [0, 65535] { R14504 += 1, R14441 += 1, R14442 += 1 };
  s0 -> s3 [0, 65535] { R14504 += 1, R14442 += 1, R90 += 1 };
  s0 -> s0 [0, 65535] { R14503 += 1, R14504 += 1 };
  s1 -> s1 [0, 65535] { R14504 += 1, R14442 += 1 };
  s1 -> s4 [0, 65535] { R14504 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R14504 += 1, R14442 += 1 };
  s2 -> s2 [0, 65535] { R14504 += 1, R14441 += 1, R14442 += 1 };
  s2 -> s3 [0, 65535] { R14504 += 1, R14442 += 1, R90 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R14504 += 1, R14442 += 1 };
  s3 -> s4 [0, 65535] { R14504 += 1 };
  s3 -> s3 [0, 65535] { R14504 += 1, R14442 += 1, R90 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R14504 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R14505 += 1, R14506 += 1 };
  s0 -> s1 [0, 65535] { R14506 += 1, R14443 += 1, R14444 += 1 };
  s0 -> s2 [0, 65535] { R14506 += 1, R14444 += 1, R13517 += 1, R13518 += 1 };
  s0 -> s3 [0, 65535] { R14506 += 1, R14444 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R14506 += 1, R14443 += 1, R14444 += 1 };
  s1 -> s2 [0, 65535] { R14506 += 1, R14444 += 1, R13517 += 1, R13518 += 1 };
  s1 -> s3 [0, 65535] { R14506 += 1, R14444 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R14506 += 1, R14444 += 1, R13517 += 1, R13518 += 1 };
  s2 -> s3 [0, 65535] { R14506 += 1, R14444 += 1 };
  s2 -> s5 [0, 65535] { R14506 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R14506 += 1, R14444 += 1 };
  s3 -> s5 [0, 65535] { R14506 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R14506 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R14508 += 1, R14446 += 1, R13523 += 1 };
  s0 -> s2 [0, 65535] { R14508 += 1, R14446 += 1, R13522 += 1, R13523 += 1 };
  s0 -> s0 [0, 65535] { R14507 += 1, R14508 += 1 };
  s0 -> s3 [0, 65535] { R14508 += 1, R14446 += 1, R13523 += 1, R13524 += 1 };
  s0 -> s4 [0, 65535] { R14508 += 1, R14445 += 1, R14446 += 1 };
  s0 -> s1 [76, 65535] { R14508 += 1, R14446 += 1, R13523 += 1 };
  s1 -> s1 [0, 74] { R14508 += 1, R14446 += 1, R13523 += 1 };
  s1 -> s1 [0, 65535] { R14508 += 1, R14446 += 1 };
  s1 -> s6 [0, 65535] { R14508 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R14508 += 1, R14446 += 1, R13523 += 1 };
  s2 -> s1 [0, 74] { R14508 += 1, R14446 += 1, R13523 += 1 };
  s2 -> s2 [0, 65535] { R14508 += 1, R14446 += 1, R13522 += 1, R13523 += 1 };
  s2 -> s6 [0, 65535] { R14508 += 1 };
  s2 -> s3 [0, 65535] { R14508 += 1, R14446 += 1, R13523 += 1, R13524 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [76, 65535] { R14508 += 1, R14446 += 1, R13523 += 1 };
  s3 -> s1 [0, 74] { R14508 += 1, R14446 += 1, R13523 += 1 };
  s3 -> s6 [0, 65535] { R14508 += 1 };
  s3 -> s3 [0, 65535] { R14508 += 1, R14446 += 1, R13523 += 1, R13524 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s7 [0, 65535] { R14508 += 1, R14446 += 1 };
  s3 -> s1 [76, 65535] { R14508 += 1, R14446 += 1, R13523 += 1 };
  s4 -> s1 [0, 74] { R14508 += 1, R14446 += 1, R13523 += 1 };
  s4 -> s2 [0, 65535] { R14508 += 1, R14446 += 1, R13522 += 1, R13523 += 1 };
  s4 -> s3 [0, 65535] { R14508 += 1, R14446 += 1, R13523 += 1, R13524 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R14508 += 1, R14445 += 1, R14446 += 1 };
  s4 -> s1 [76, 65535] { R14508 += 1, R14446 += 1, R13523 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R14508 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R14508 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R14508 += 1, R14446 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s0 [0, 65535] { R14509 += 1, R14510 += 1 };
  s0 -> s1 [0, 65535] { R14510 += 1, R14447 += 1, R14448 += 1 };
  s0 -> s2 [0, 65535] { R14510 += 1, R14448 += 1 };
  s0 -> s3 [0, 65535] { R14510 += 1, R14448 += 1, R14088 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R14510 += 1, R14447 += 1, R14448 += 1 };
  s1 -> s2 [0, 65535] { R14510 += 1, R14448 += 1 };
  s1 -> s3 [0, 65535] { R14510 += 1, R14448 += 1, R14088 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R14510 += 1 };
  s2 -> s2 [0, 65535] { R14510 += 1, R14448 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R14510 += 1 };
  s3 -> s2 [0, 65535] { R14510 += 1, R14448 += 1 };
  s3 -> s3 [0, 65535] { R14510 += 1, R14448 += 1, R14088 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R14510 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R14512 += 1, R14449 += 1, R14450 += 1 };
  s0 -> s2 [0, 65535] { R14512 += 1, R14450 += 1, R14427 += 1 };
  s0 -> s3 [0, 65535] { R14512 += 1, R14450 += 1 };
  s0 -> s4 [0, 65535] { R14512 += 1, R14450 += 1, R14427 += 1, R14429 += 1, R14430 += 1 };
  s0 -> s0 [0, 65535] { R14511 += 1, R14512 += 1 };
  s1 -> s1 [0, 65535] { R14512 += 1, R14449 += 1, R14450 += 1 };
  s1 -> s2 [0, 65535] { R14512 += 1, R14450 += 1, R14427 += 1 };
  s1 -> s3 [0, 65535] { R14512 += 1, R14450 += 1 };
  s1 -> s4 [0, 65535] { R14512 += 1, R14450 += 1, R14427 += 1, R14429 += 1, R14430 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R14512 += 1, R14450 += 1, R14427 += 1 };
  s2 -> s3 [0, 65535] { R14512 += 1, R14450 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R14512 += 1 };
  s3 -> s3 [0, 65535] { R14512 += 1, R14450 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R14512 += 1 };
  s4 -> s2 [0, 65535] { R14512 += 1, R14450 += 1, R14427 += 1 };
  s4 -> s3 [0, 65535] { R14512 += 1, R14450 += 1 };
  s4 -> s4 [0, 65535] { R14512 += 1, R14450 += 1, R14427 += 1, R14429 += 1, R14430 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R14512 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R14512 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R14514 += 1, R14469 += 1, R14470 += 1 };
  s0 -> s0 [0, 65535] { R14513 += 1, R14514 += 1 };
  s0 -> s2 [0, 65535] { R14514 += 1, R14470 += 1, R21 += 1 };
  s1 -> s1 [0, 65535] { R14514 += 1, R14469 += 1, R14470 += 1 };
  s1 -> s2 [0, 65535] { R14514 += 1, R14470 += 1, R21 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R14514 += 1, R14470 += 1, R21 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R14514 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R14514 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R14516 += 1, R14472 += 1 };
  s0 -> s0 [0, 65535] { R14515 += 1, R14516 += 1 };
  s0 -> s2 [0, 65535] { R14516 += 1, R14471 += 1, R14472 += 1 };
  s0 -> s3 [70, 70] { R14516 += 1, R14472 += 1 };
  s0 -> s4 [70, 70] { R14516 += 1, R14472 += 1 };
  s0 -> s5 [75, 75] { R14516 += 1, R14472 += 1 };
  s0 -> s1 [76, 65535] { R14516 += 1, R14472 += 1 };
  s1 -> s1 [0, 69] { R14516 += 1, R14472 += 1 };
  s1 -> s3 [70, 70] { R14516 += 1, R14472 += 1 };
  s1 -> s4 [70, 70] { R14516 += 1, R14472 += 1 };
  s1 -> s5 [75, 75] { R14516 += 1, R14472 += 1 };
  s1 -> s1 [76, 65535] { R14516 += 1, R14472 += 1 };
  s2 -> s1 [0, 69] { R14516 += 1, R14472 += 1 };
  s2 -> s2 [0, 65535] { R14516 += 1, R14471 += 1, R14472 += 1 };
  s2 -> s3 [70, 70] { R14516 += 1, R14472 += 1 };
  s2 -> s4 [70, 70] { R14516 += 1, R14472 += 1 };
  s2 -> s5 [75, 75] { R14516 += 1, R14472 += 1 };
  s2 -> s1 [76, 65535] { R14516 += 1, R14472 += 1 };
  s4 -> s4 [0, 70] { R14516 += 1, R14472 += 1 };
  s4 -> s8 [75, 75] { R14516 += 1, R14472 += 1 };
  s4 -> s4 [76, 65535] { R14516 += 1, R14472 += 1 };
  s5 -> s5 [0, 69] { R14516 += 1, R14472 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R14516 += 1 };
  s5 -> s7 [70, 70] { R14516 += 1, R14472 += 1 };
  s5 -> s8 [70, 70] { R14516 += 1, R14472 += 1 };
  s5 -> s5 [75, 65535] { R14516 += 1, R14472 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R14516 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 70] { R14516 += 1, R14472 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R14516 += 1 };
  s8 -> s8 [75, 65535] { R14516 += 1, R14472 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R14518 += 1, R14474 += 1, R83 += 1 };
  s0 -> s2 [0, 65535] { R14518 += 1, R14473 += 1, R14474 += 1 };
  s0 -> s0 [0, 65535] { R14517 += 1, R14518 += 1 };
  s0 -> s3 [70, 70] { R14518 += 1, R14474 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R14518 += 1, R14474 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R14518 += 1, R14474 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R14518 += 1, R14474 += 1, R83 += 1 };
  s1 -> s1 [0, 65535] { R14518 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R14518 += 1, R14474 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R14518 += 1, R14474 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R14518 += 1, R14474 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R14518 += 1, R14474 += 1, R83 += 1 };
  s2 -> s2 [0, 65535] { R14518 += 1, R14473 += 1, R14474 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R14518 += 1, R14474 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R14518 += 1, R14474 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R14518 += 1, R14474 += 1, R83 += 1 };
  s3 -> s3 [0, 65535] { R14518 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R14518 += 1 };
  s4 -> s4 [0, 65535] { R14518 += 1, R14474 += 1, R83 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R14518 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R14520 += 1, R14476 += 1, R85 += 1 };
  s0 -> s0 [0, 65535] { R14519 += 1, R14520 += 1 };
  s0 -> s2 [0, 65535] { R14520 += 1, R14475 += 1, R14476 += 1 };
  s0 -> s3 [70, 70] { R14520 += 1, R14476 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R14520 += 1, R14476 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R14520 += 1, R14476 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R14520 += 1, R14476 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R14520 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R14520 += 1, R14476 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R14520 += 1, R14476 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R14520 += 1, R14476 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R14520 += 1, R14476 += 1, R85 += 1 };
  s2 -> s2 [0, 65535] { R14520 += 1, R14475 += 1, R14476 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R14520 += 1, R14476 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R14520 += 1, R14476 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R14520 += 1, R14476 += 1, R85 += 1 };
  s3 -> s3 [0, 65535] { R14520 += 1, R14476 += 1, R85 += 1 };
  s3 -> s6 [0, 65535] { R14520 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R14520 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R14520 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R14522 += 1, R14478 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R14522 += 1, R14478 += 1, R88 += 1 };
  s0 -> s3 [0, 65535] { R14522 += 1, R14477 += 1, R14478 += 1 };
  s0 -> s0 [0, 65535] { R14521 += 1, R14522 += 1 };
  s0 -> s4 [70, 70] { R14522 += 1, R14478 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R14522 += 1, R14478 += 1, R87 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R14522 += 1, R14478 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R14522 += 1, R14478 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [71, 74] { R14522 += 1, R14478 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R14522 += 1, R14478 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R14522 += 1, R14478 += 1, R88 += 1 };
  s0 -> s2 [76, 65535] { R14522 += 1, R14478 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R14522 += 1, R14478 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [0, 69] { R14522 += 1, R14478 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R14522 += 1, R14478 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R14522 += 1, R14478 += 1, R87 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R14522 += 1, R14478 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R14522 += 1, R14478 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [71, 74] { R14522 += 1, R14478 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R14522 += 1, R14478 += 1, R87 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R14522 += 1, R14478 += 1, R88 += 1 };
  s1 -> s2 [76, 65535] { R14522 += 1, R14478 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R14522 += 1, R14478 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R14522 += 1, R14478 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R14522 += 1, R14478 += 1, R88 += 1 };
  s2 -> s2 [71, 74] { R14522 += 1, R14478 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R14522 += 1, R14478 += 1, R88 += 1 };
  s2 -> s2 [76, 65535] { R14522 += 1, R14478 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R14522 += 1, R14478 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R14522 += 1, R14478 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R14522 += 1, R14477 += 1, R14478 += 1 };
  s3 -> s4 [70, 70] { R14522 += 1, R14478 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R14522 += 1, R14478 += 1, R87 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R14522 += 1, R14478 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R14522 += 1, R14478 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [71, 74] { R14522 += 1, R14478 += 1, R88 += 1 };
  s3 -> s1 [71, 65535] { R14522 += 1, R14478 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R14522 += 1, R14478 += 1, R88 += 1 };
  s3 -> s2 [76, 65535] { R14522 += 1, R14478 += 1, R88 += 1 };
  s4 -> s4 [0, 74] { R14522 += 1, R14478 += 1, R88 += 1 };
  s4 -> s11 [75, 75] { R14522 += 1, R14478 += 1, R88 += 1 };
  s4 -> s4 [76, 65535] { R14522 += 1, R14478 += 1, R88 += 1 };
  s7 -> s4 [0, 74] { R14522 += 1, R14478 += 1, R88 += 1 };
  s7 -> s7 [0, 65535] { R14522 += 1, R14478 += 1, R87 += 1, R88 += 1 };
  s7 -> s11 [75, 75] { R14522 += 1, R14478 += 1, R88 += 1 };
  s7 -> s4 [76, 65535] { R14522 += 1, R14478 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R14522 += 1, R14478 += 1, R88 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R14522 += 1 };
  s8 -> s10 [70, 70] { R14522 += 1, R14478 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R14522 += 1, R14478 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R14522 += 1, R14478 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R14522 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R14522 += 1, R14478 += 1, R88 += 1 };
  s11 -> s12 [0, 65535] { R14522 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R14522 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R14524 += 1, R14480 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s2 [0, 69] { R14524 += 1, R14480 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s0 [0, 65535] { R14523 += 1, R14524 += 1 };
  s0 -> s3 [0, 65535] { R14524 += 1, R14479 += 1, R14480 += 1 };
  s0 -> s4 [70, 70] { R14524 += 1, R14480 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s5 [70, 70] { R14524 += 1, R14480 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s6 [70, 70] { R14524 += 1, R14480 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s7 [70, 70] { R14524 += 1, R14480 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s1 [71, 65535] { R14524 += 1, R14480 += 1, R13513 += 1, R13514 += 1 };
  s0 -> s2 [71, 65535] { R14524 += 1, R14480 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s1 [0, 69] { R14524 += 1, R14480 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s2 [0, 69] { R14524 += 1, R14480 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s4 [70, 70] { R14524 += 1, R14480 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s5 [70, 70] { R14524 += 1, R14480 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s6 [70, 70] { R14524 += 1, R14480 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s7 [70, 70] { R14524 += 1, R14480 += 1, R13514 += 1, R13515 += 1 };
  s1 -> s1 [71, 65535] { R14524 += 1, R14480 += 1, R13513 += 1, R13514 += 1 };
  s1 -> s2 [71, 65535] { R14524 += 1, R14480 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [0, 69] { R14524 += 1, R14480 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R14524 += 1 };
  s2 -> s4 [70, 70] { R14524 += 1, R14480 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s7 [70, 70] { R14524 += 1, R14480 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s2 [71, 65535] { R14524 += 1, R14480 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s1 [0, 69] { R14524 += 1, R14480 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s2 [0, 69] { R14524 += 1, R14480 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s3 [0, 65535] { R14524 += 1, R14479 += 1, R14480 += 1 };
  s3 -> s4 [70, 70] { R14524 += 1, R14480 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s5 [70, 70] { R14524 += 1, R14480 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s6 [70, 70] { R14524 += 1, R14480 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s7 [70, 70] { R14524 += 1, R14480 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s1 [71, 65535] { R14524 += 1, R14480 += 1, R13513 += 1, R13514 += 1 };
  s3 -> s2 [71, 65535] { R14524 += 1, R14480 += 1, R13514 += 1, R13515 += 1 };
  s4 -> s4 [0, 65535] { R14524 += 1, R14480 += 1, R13514 += 1, R13515 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s9 [0, 65535] { R14524 += 1 };
  s5 -> s4 [0, 65535] { R14524 += 1, R14480 += 1, R13514 += 1, R13515 += 1 };
  s5 -> s5 [0, 65535] { R14524 += 1, R14480 += 1, R13513 += 1, R13514 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R14524 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R14524 += 1 };
  accepting s4, s8, s2, s9, s7;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R14526 += 1, R14482 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s0 [0, 65535] { R14525 += 1, R14526 += 1 };
  s0 -> s2 [0, 65535] { R14526 += 1, R14481 += 1, R14482 += 1 };
  s0 -> s3 [70, 70] { R14526 += 1, R14482 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s4 [70, 70] { R14526 += 1, R14482 += 1, R13519 += 1, R13520 += 1 };
  s0 -> s1 [71, 65535] { R14526 += 1, R14482 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [0, 69] { R14526 += 1, R14482 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [0, 65535] { R14526 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R14526 += 1, R14482 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s4 [70, 70] { R14526 += 1, R14482 += 1, R13519 += 1, R13520 += 1 };
  s1 -> s1 [71, 65535] { R14526 += 1, R14482 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s1 [0, 69] { R14526 += 1, R14482 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s2 [0, 65535] { R14526 += 1, R14481 += 1, R14482 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R14526 += 1, R14482 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s4 [70, 70] { R14526 += 1, R14482 += 1, R13519 += 1, R13520 += 1 };
  s2 -> s1 [71, 65535] { R14526 += 1, R14482 += 1, R13519 += 1, R13520 += 1 };
  s3 -> s3 [0, 65535] { R14526 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R14526 += 1 };
  s4 -> s4 [0, 65535] { R14526 += 1, R14482 += 1, R13519 += 1, R13520 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R14526 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s0 -> s2 [0, 69] { R14528 += 1, R14484 += 1, R14083 += 1, R14084 += 1 };
  s0 -> s3 [0, 69] { R14528 += 1, R14484 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s0 -> s0 [0, 65535] { R14527 += 1, R14528 += 1 };
  s0 -> s4 [0, 65535] { R14528 += 1, R14483 += 1, R14484 += 1 };
  s0 -> s5 [70, 70] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s0 -> s6 [70, 70] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s0 -> s7 [70, 70] { R14528 += 1, R14484 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s0 -> s8 [70, 70] { R14528 += 1, R14484 += 1, R14083 += 1, R14084 += 1 };
  s0 -> s9 [70, 70] { R14528 += 1, R14484 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s0 -> s10 [70, 70] { R14528 += 1, R14484 += 1, R14083 += 1, R14084 += 1 };
  s0 -> s1 [71, 74] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s0 -> s2 [71, 65535] { R14528 += 1, R14484 += 1, R14083 += 1, R14084 += 1 };
  s0 -> s3 [71, 65535] { R14528 += 1, R14484 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s0 -> s11 [75, 75] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s0 -> s1 [76, 65535] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s1 -> s1 [0, 69] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s1 -> s5 [70, 70] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s1 -> s6 [70, 70] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s1 -> s1 [71, 74] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s1 -> s11 [75, 75] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s1 -> s1 [76, 65535] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s2 -> s1 [0, 69] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s2 -> s2 [0, 69] { R14528 += 1, R14484 += 1, R14083 += 1, R14084 += 1 };
  s2 -> s3 [0, 69] { R14528 += 1, R14484 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s2 -> s5 [70, 70] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s2 -> s6 [70, 70] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s2 -> s7 [70, 70] { R14528 += 1, R14484 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s2 -> s8 [70, 70] { R14528 += 1, R14484 += 1, R14083 += 1, R14084 += 1 };
  s2 -> s9 [70, 70] { R14528 += 1, R14484 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s2 -> s10 [70, 70] { R14528 += 1, R14484 += 1, R14083 += 1, R14084 += 1 };
  s2 -> s1 [71, 74] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s2 -> s2 [71, 65535] { R14528 += 1, R14484 += 1, R14083 += 1, R14084 += 1 };
  s2 -> s3 [71, 65535] { R14528 += 1, R14484 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s2 -> s11 [75, 75] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s2 -> s1 [76, 65535] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s3 -> s1 [0, 69] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s3 -> s3 [0, 69] { R14528 += 1, R14484 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s3 -> s5 [70, 70] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s3 -> s6 [70, 70] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s3 -> s7 [70, 70] { R14528 += 1, R14484 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s3 -> s9 [70, 70] { R14528 += 1, R14484 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s3 -> s1 [71, 74] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s3 -> s3 [71, 65535] { R14528 += 1, R14484 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s3 -> s11 [75, 75] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s3 -> s1 [76, 65535] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s4 -> s1 [0, 69] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s4 -> s2 [0, 69] { R14528 += 1, R14484 += 1, R14083 += 1, R14084 += 1 };
  s4 -> s3 [0, 69] { R14528 += 1, R14484 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s4 -> s4 [0, 65535] { R14528 += 1, R14483 += 1, R14484 += 1 };
  s4 -> s5 [70, 70] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s4 -> s6 [70, 70] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s4 -> s7 [70, 70] { R14528 += 1, R14484 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s4 -> s8 [70, 70] { R14528 += 1, R14484 += 1, R14083 += 1, R14084 += 1 };
  s4 -> s9 [70, 70] { R14528 += 1, R14484 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s4 -> s10 [70, 70] { R14528 += 1, R14484 += 1, R14083 += 1, R14084 += 1 };
  s4 -> s1 [71, 74] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s4 -> s2 [71, 65535] { R14528 += 1, R14484 += 1, R14083 += 1, R14084 += 1 };
  s4 -> s3 [71, 65535] { R14528 += 1, R14484 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s4 -> s11 [75, 75] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s4 -> s1 [76, 65535] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s5 -> s5 [0, 74] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s5 -> s14 [75, 75] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s5 -> s5 [76, 65535] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s7 -> s5 [0, 74] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s7 -> s7 [0, 65535] { R14528 += 1, R14484 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s7 -> s14 [75, 75] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s7 -> s5 [76, 65535] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s10 -> s5 [0, 74] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s10 -> s7 [0, 65535] { R14528 += 1, R14484 += 1, R14084 += 1, R14085 += 1, R14086 += 1 };
  s10 -> s10 [0, 65535] { R14528 += 1, R14484 += 1, R14083 += 1, R14084 += 1 };
  s10 -> s14 [75, 75] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s10 -> s5 [76, 65535] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s11 -> s12 [0, 69] { R14528 += 1, R14484 += 1, R14084 += 1 };
  s11 -> s11 [0, 69] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s11 -> s13 [70, 70] { R14528 += 1, R14484 += 1, R14084 += 1 };
  s11 -> s14 [70, 70] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s11 -> s15 [70, 70] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s11 -> s16 [70, 70] { R14528 += 1, R14484 += 1, R14084 += 1 };
  s11 -> s12 [71, 65535] { R14528 += 1, R14484 += 1, R14084 += 1 };
  s11 -> s11 [71, 65535] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s12 -> s12 [0, 69] { R14528 += 1, R14484 += 1, R14084 += 1 };
  s12 -> s17 [0, 65535];
  s12 -> s12 [0, 65535] { R14528 += 1 };
  s12 -> s13 [70, 70] { R14528 += 1, R14484 += 1, R14084 += 1 };
  s12 -> s16 [70, 70] { R14528 += 1, R14484 += 1, R14084 += 1 };
  s12 -> s12 [71, 65535] { R14528 += 1, R14484 += 1, R14084 += 1 };
  s13 -> s13 [0, 65535] { R14528 += 1, R14484 += 1, R14084 += 1 };
  s13 -> s17 [0, 65535];
  s13 -> s18 [0, 65535] { R14528 += 1 };
  s14 -> s13 [0, 65535] { R14528 += 1, R14484 += 1, R14084 += 1 };
  s14 -> s14 [0, 65535] { R14528 += 1, R14484 += 1, R14084 += 1, R14086 += 1 };
  s16 -> s17 [0, 65535];
  s16 -> s16 [0, 65535] { R14528 += 1 };
  s17 -> s17 [0, 65535];
  s18 -> s17 [0, 65535];
  s18 -> s18 [0, 65535] { R14528 += 1 };
  accepting s17, s16, s12, s13, s18;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R14530 += 1, R14486 += 1, R14422 += 1, R14423 += 1, R14424 += 1 };
  s0 -> s2 [0, 69] { R14530 += 1, R14486 += 1, R14422 += 1, R14424 += 1, R14425 += 1 };
  s0 -> s3 [0, 69] { R14530 += 1, R14486 += 1, R14421 += 1, R14422 += 1 };
  s0 -> s4 [0, 65535] { R14530 += 1, R14485 += 1, R14486 += 1 };
  s0 -> s0 [0, 65535] { R14529 += 1, R14530 += 1 };
  s0 -> s5 [70, 70] { R14530 += 1, R14486 += 1, R14422 += 1, R14423 += 1, R14424 += 1 };
  s0 -> s6 [70, 70] { R14530 += 1, R14486 += 1, R14422 += 1, R14424 += 1, R14425 += 1 };
  s0 -> s7 [70, 70] { R14530 += 1, R14486 += 1, R14421 += 1, R14422 += 1 };
  s0 -> s8 [70, 70] { R14530 += 1, R14486 += 1, R14422 += 1, R14424 += 1, R14425 += 1 };
  s0 -> s9 [70, 70] { R14530 += 1, R14486 += 1, R14421 += 1, R14422 += 1 };
  s0 -> s10 [70, 70] { R14530 += 1, R14486 += 1, R14422 += 1, R14423 += 1, R14424 += 1 };
  s0 -> s1 [71, 65535] { R14530 += 1, R14486 += 1, R14422 += 1, R14423 += 1, R14424 += 1 };
  s0 -> s2 [71, 65535] { R14530 += 1, R14486 += 1, R14422 += 1, R14424 += 1, R14425 += 1 };
  s0 -> s3 [71, 65535] { R14530 += 1, R14486 += 1, R14421 += 1, R14422 += 1 };
  s1 -> s1 [0, 69] { R14530 += 1, R14486 += 1, R14422 += 1, R14423 += 1, R14424 += 1 };
  s1 -> s2 [0, 69] { R14530 += 1, R14486 += 1, R14422 += 1, R14424 += 1, R14425 += 1 };
  s1 -> s5 [70, 70] { R14530 += 1, R14486 += 1, R14422 += 1, R14423 += 1, R14424 += 1 };
  s1 -> s6 [70, 70] { R14530 += 1, R14486 += 1, R14422 += 1, R14424 += 1, R14425 += 1 };
  s1 -> s8 [70, 70] { R14530 += 1, R14486 += 1, R14422 += 1, R14424 += 1, R14425 += 1 };
  s1 -> s10 [70, 70] { R14530 += 1, R14486 += 1, R14422 += 1, R14423 += 1, R14424 += 1 };
  s1 -> s1 [71, 65535] { R14530 += 1, R14486 += 1, R14422 += 1, R14423 += 1, R14424 += 1 };
  s1 -> s2 [71, 65535] { R14530 += 1, R14486 += 1, R14422 += 1, R14424 += 1, R14425 += 1 };
  s2 -> s2 [0, 69] { R14530 += 1, R14486 += 1, R14422 += 1, R14424 += 1, R14425 += 1 };
  s2 -> s2 [0, 65535] { R14530 += 1 };
  s2 -> s11 [0, 65535];
  s2 -> s6 [70, 70] { R14530 += 1, R14486 += 1, R14422 += 1, R14424 += 1, R14425 += 1 };
  s2 -> s8 [70, 70] { R14530 += 1, R14486 += 1, R14422 += 1, R14424 += 1, R14425 += 1 };
  s2 -> s2 [71, 65535] { R14530 += 1, R14486 += 1, R14422 += 1, R14424 += 1, R14425 += 1 };
  s3 -> s1 [0, 69] { R14530 += 1, R14486 += 1, R14422 += 1, R14423 += 1, R14424 += 1 };
  s3 -> s2 [0, 69] { R14530 += 1, R14486 += 1, R14422 += 1, R14424 += 1, R14425 += 1 };
  s3 -> s3 [0, 69] { R14530 += 1, R14486 += 1, R14421 += 1, R14422 += 1 };
  s3 -> s5 [70, 70] { R14530 += 1, R14486 += 1, R14422 += 1, R14423 += 1, R14424 += 1 };
  s3 -> s6 [70, 70] { R14530 += 1, R14486 += 1, R14422 += 1, R14424 += 1, R14425 += 1 };
  s3 -> s7 [70, 70] { R14530 += 1, R14486 += 1, R14421 += 1, R14422 += 1 };
  s3 -> s8 [70, 70] { R14530 += 1, R14486 += 1, R14422 += 1, R14424 += 1, R14425 += 1 };
  s3 -> s9 [70, 70] { R14530 += 1, R14486 += 1, R14421 += 1, R14422 += 1 };
  s3 -> s10 [70, 70] { R14530 += 1, R14486 += 1, R14422 += 1, R14423 += 1, R14424 += 1 };
  s3 -> s1 [71, 65535] { R14530 += 1, R14486 += 1, R14422 += 1, R14423 += 1, R14424 += 1 };
  s3 -> s2 [71, 65535] { R14530 += 1, R14486 += 1, R14422 += 1, R14424 += 1, R14425 += 1 };
  s3 -> s3 [71, 65535] { R14530 += 1, R14486 += 1, R14421 += 1, R14422 += 1 };
  s4 -> s1 [0, 69] { R14530 += 1, R14486 += 1, R14422 += 1, R14423 += 1, R14424 += 1 };
  s4 -> s2 [0, 69] { R14530 += 1, R14486 += 1, R14422 += 1, R14424 += 1, R14425 += 1 };
  s4 -> s3 [0, 69] { R14530 += 1, R14486 += 1, R14421 += 1, R14422 += 1 };
  s4 -> s4 [0, 65535] { R14530 += 1, R14485 += 1, R14486 += 1 };
  s4 -> s5 [70, 70] { R14530 += 1, R14486 += 1, R14422 += 1, R14423 += 1, R14424 += 1 };
  s4 -> s6 [70, 70] { R14530 += 1, R14486 += 1, R14422 += 1, R14424 += 1, R14425 += 1 };
  s4 -> s7 [70, 70] { R14530 += 1, R14486 += 1, R14421 += 1, R14422 += 1 };
  s4 -> s8 [70, 70] { R14530 += 1, R14486 += 1, R14422 += 1, R14424 += 1, R14425 += 1 };
  s4 -> s9 [70, 70] { R14530 += 1, R14486 += 1, R14421 += 1, R14422 += 1 };
  s4 -> s10 [70, 70] { R14530 += 1, R14486 += 1, R14422 += 1, R14423 += 1, R14424 += 1 };
  s4 -> s1 [71, 65535] { R14530 += 1, R14486 += 1, R14422 += 1, R14423 += 1, R14424 += 1 };
  s4 -> s2 [71, 65535] { R14530 += 1, R14486 += 1, R14422 += 1, R14424 += 1, R14425 += 1 };
  s4 -> s3 [71, 65535] { R14530 += 1, R14486 += 1, R14421 += 1, R14422 += 1 };
  s5 -> s5 [0, 65535] { R14530 += 1, R14486 += 1, R14422 += 1, R14423 += 1, R14424 += 1 };
  s5 -> s6 [0, 65535] { R14530 += 1, R14486 += 1, R14422 += 1, R14424 += 1, R14425 += 1 };
  s6 -> s6 [0, 65535] { R14530 += 1, R14486 += 1, R14422 += 1, R14424 += 1, R14425 += 1 };
  s6 -> s12 [0, 65535] { R14530 += 1 };
  s6 -> s11 [0, 65535];
  s7 -> s5 [0, 65535] { R14530 += 1, R14486 += 1, R14422 += 1, R14423 += 1, R14424 += 1 };
  s7 -> s6 [0, 65535] { R14530 += 1, R14486 += 1, R14422 += 1, R14424 += 1, R14425 += 1 };
  s7 -> s7 [0, 65535] { R14530 += 1, R14486 += 1, R14421 += 1, R14422 += 1 };
  s8 -> s8 [0, 65535] { R14530 += 1 };
  s8 -> s11 [0, 65535];
  s11 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R14530 += 1 };
  s12 -> s11 [0, 65535];
  accepting s12, s8, s2, s6, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R14530 && R23 - R14530 = -1 && R24 = R14530 && R25 - R14530 = -1 && R26 = R14530 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R14088 + -1*R14084 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R14088 + -1*R14084 - R66 = 0 && R55 + R13518 + R13515 + -1*R14090 + -1*R14086 - R68 = 0 && R65 + R14087 + R14083 = 0 && R67 + R14089 + R14085 = 0 && R14471 = 0 && R14472 = 0 && R14477 = 0 && R14478 = 0 && R14479 = 0 && R14480 = 0 && R14483 = 0 && R14484 = 0 && R14485 = 0 && R14486 = 0 && R14487 = 0 && R14488 = R14530 && R14489 = 0 && R14490 = R14530 && R14491 = 0 && R14492 = R14530 && R14493 = 0 && R14494 = R14530 && R14495 = 0 && R14496 = R14530 && R14497 = 0 && R14498 = R14530 && R14499 = 0 && R14500 = R14530 && R14501 = 0 && R14502 = R14530 && R14503 = 0 && R14504 = R14530 && R14505 = 0 && R14506 = R14530 && R14507 = 0 && R14508 = R14530 && R14509 = 0 && R14510 = R14530 && R14511 = 0 && R14512 = R14530 && R14513 = 0 && R14514 = R14530 && R14515 = 0 && R14516 = R14530 && R14517 = 0 && R14518 = R14530 && R14519 = 0 && R14520 = R14530 && R14521 = 0 && R14522 = R14530 && R14523 = 0 && R14524 = R14530 && R14525 = 0 && R14526 = R14530 && R14527 = 0 && R14528 = R14530 && R14529 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R13524 + R13521 < 1 && -1*R14088 + -1*R14084 - R66 < 1 && -1*R14090 + -1*R14086 - R68 < 1 && 0 < R14530 && (R2 != 0 || R20 = 0 || (R14431 = 0 && R14432 = 0)) && (R2 != 0 || R20 = 0 || (R14433 = 0 && R14434 = 0)) && (R2 != 0 || R20 = 0 || (R14435 = 0 && R14436 = 0)) && (R2 != 0 || R20 = 0 || (R14437 = 0 && R14438 = 0)) && (R2 != 0 || R20 = 0 || (R14439 = 0 && R14440 = 0)) && (R2 != 0 || R20 = 0 || (R14441 = 0 && R14442 = 0)) && (R2 != 0 || R20 = 0 || (R14443 = 0 && R14444 = 0)) && (R2 != 0 || R20 = 0 || (R14445 = 0 && R14446 = 0)) && (R2 != 0 || R20 = 0 || (R14447 = 0 && R14448 = 0)) && (R2 != 0 || R20 = 0 || (R14449 = 0 && R14450 = 0)) && (R53 + R13516 + R13513 != 0 || R54 + R13517 + R13514 + -1*R14088 + -1*R14084 - R66 = 0 || R66 + R14088 + R14084 < 1) && (R59 + R13522 + R13519 != 0 || R60 + R13523 + R13520 + -1*R14088 + -1*R14084 - R66 = 0 || R66 + R14088 + R14084 < 1) && (R66 + R14088 + R14084 != 0 || ((R53 + R13516 + R13513 != 0 || R54 + R13517 + R13514 = 0 || R68 + R14090 + R14086 < 1) && (R53 + R13516 + R13513 = 0 || R68 + R14090 + R14086 < 1))) && (R66 + R14088 + R14084 != 0 || ((R59 + R13522 + R13519 != 0 || R60 + R13523 + R13520 = 0 || R68 + R14090 + R14086 < 1) && (R59 + R13522 + R13519 = 0 || R68 + R14090 + R14086 < 1))) && (R66 + R14088 + R14084 != 0 || ((R73 + R14426 + R14421 != 0 || R74 + R14427 + R14422 = 0 || R68 + R14090 + R14086 < 1) && (R73 + R14426 + R14421 = 0 || R68 + R14090 + R14086 < 1))) && (R68 + R14090 + R14086 != 0 || R77 + R14430 + R14425 = 0 || (R75 + R14428 + R14423 = 0 && R76 + R14429 + R14424 = 0)) && (R73 + R14426 + R14421 != 0 || R66 + R14088 + R14084 + -1*R14427 + -1*R14422 - R74 = 0 || R66 + R14088 + R14084 < 1) && (R75 + R14428 + R14423 != 0 || R68 + R14090 + R14086 + -1*R14429 + -1*R14424 - R76 = 0 || R68 + R14090 + R14086 < 1) && (R14431 != 0 || R2 = R14432 || R2 < 1) && (R14433 != 0 || R2 = R14434 || R2 < 1) && (R14435 != 0 || R2 = R14436 || R2 < 1) && (R14437 != 0 || R2 = R14438 || R2 < 1) && (R14439 != 0 || R2 = R14440 || R2 < 1) && (R14441 != 0 || R2 = R14442 || R2 < 1) && (R14443 != 0 || R2 = R14444 || R2 < 1) && (R14445 != 0 || R2 = R14446 || R2 < 1) && (R14447 != 0 || R2 = R14448 || R2 < 1) && (R14449 != 0 || R2 = R14450 || R2 < 1) && (R21 = 0 || (R14469 = 0 && R14470 = 0)) && (R21 = 0 || (R14473 = 0 && R14474 = 0)) && (R21 = 0 || (R14475 = 0 && R14476 = 0)) && (R21 = 0 || (R14481 = 0 && R14482 = 0)) && (R22 = 0 || (R14451 = 0 && R14452 = 0)) && (R22 = 0 || (R14453 = 0 && R14454 = 0)) && (R22 = 0 || (R14455 = 0 && R14456 = 0)) && (R22 = 0 || (R14457 = 0 && R14458 = 0)) && (R22 = 0 || (R14459 = 0 && R14460 = 0)) && (R22 = 0 || (R14461 = 0 && R14462 = 0)) && (R22 = 0 || (R14463 = 0 && R14464 = 0)) && (R22 = 0 || (R14465 = 0 && R14466 = 0)) && (R22 = 0 || (R14467 = 0 && R14468 = 0)) && (R53 + R13516 + R13513 = 0 || R66 + R14088 + R14084 < 1) && (R59 + R13522 + R13519 = 0 || R66 + R14088 + R14084 < 1) && (R73 + R14426 + R14421 = 0 || R66 + R14088 + R14084 < 1) && (R75 + R14428 + R14423 = 0 || R68 + R14090 + R14086 < 1) && (R14431 = 0 || R2 < 1) && (R14433 = 0 || R2 < 1) && (R14435 = 0 || R2 < 1) && (R14437 = 0 || R2 < 1) && (R14439 = 0 || R2 < 1) && (R14441 = 0 || R2 < 1) && (R14443 = 0 || R2 < 1) && (R14445 = 0 || R2 < 1) && (R14447 = 0 || R2 < 1) && (R14449 = 0 || R2 < 1);
// End of Parikh automata intersection problem
