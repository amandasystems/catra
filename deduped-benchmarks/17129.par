// Parikh automata intersection problem, generated by OSTRICH+
counter int R100, R101, R102, R103, R104, R105, R106, R107, R108, R109, R110, R12, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R331, R332, R333, R334, R335, R336, R337, R338, R339, R340, R341, R342, R343, R344, R345, R346, R347, R348, R349, R350, R351, R352, R353, R354, R355, R356, R357, R358, R359, R360, R361, R362, R363, R364, R365, R366, R367, R368, R369, R370, R371, R372, R373, R374, R375, R376, R377, R378, R379, R380, R381, R382, R383, R384, R385, R386, R387, R388, R389, R390, R391, R392, R393, R394, R395, R396, R397, R398, R399, R4, R400, R401, R402, R403, R404, R405, R406, R407, R408, R409, R410, R411, R412, R413, R414, R415, R416, R417, R418, R419, R420, R421, R422, R423, R424, R425, R426, R427, R428, R429, R430, R431, R432, R433, R434, R435, R436, R437, R438, R439, R440, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96, R97, R98, R99;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R361 += 1, R362 += 1 };
  s0 -> s1 [0, 65535] { R362 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R362 += 1, R22 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R364 += 1 };
  s0 -> s0 [0, 65535] { R363 += 1, R364 += 1 };
  s0 -> s2 [70, 70] { R364 += 1 };
  s0 -> s3 [70, 70] { R364 += 1 };
  s0 -> s1 [76, 65535] { R364 += 1 };
  s1 -> s1 [0, 69] { R364 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R364 += 1 };
  s1 -> s3 [70, 70] { R364 += 1 };
  s1 -> s1 [76, 65535] { R364 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R364 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R364 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R366 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R365 += 1, R366 += 1 };
  s0 -> s2 [70, 70] { R366 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R366 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R366 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R366 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R366 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R366 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R366 += 1, R45 += 1 };
  s2 -> s2 [0, 65535] { R366 += 1, R45 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R368 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R367 += 1, R368 += 1 };
  s0 -> s2 [70, 70] { R368 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R368 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R368 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R368 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R368 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R368 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R368 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R368 += 1, R47 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R370 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R369 += 1, R370 += 1 };
  s0 -> s2 [70, 70] { R370 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R370 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R370 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R370 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R370 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R370 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R370 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R370 += 1, R49 += 1, R50 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R372 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R371 += 1, R372 += 1 };
  s0 -> s2 [70, 70] { R372 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R372 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R372 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R372 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R372 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R372 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R372 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R372 += 1, R53 += 1, R54 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R374 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R373 += 1, R374 += 1 };
  s0 -> s2 [70, 70] { R374 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R374 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R374 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R374 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R374 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R374 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R374 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R374 += 1, R59 += 1, R60 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R376 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R375 += 1, R376 += 1 };
  s0 -> s2 [70, 70] { R376 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R376 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R376 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R376 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R376 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R376 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R376 += 1, R65 += 1, R66 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R376 += 1, R65 += 1, R66 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R378 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R377 += 1, R378 += 1 };
  s0 -> s2 [70, 70] { R378 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R378 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R378 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R378 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R378 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R378 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R378 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R378 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R398 += 1 };
  s0 -> s0 [0, 65535] { R397 += 1, R398 += 1 };
  s0 -> s2 [70, 70] { R398 += 1 };
  s0 -> s1 [71, 65535] { R398 += 1 };
  s1 -> s1 [0, 69] { R398 += 1 };
  s1 -> s2 [70, 70] { R398 += 1 };
  s1 -> s1 [71, 65535] { R398 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R398 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R399 += 1, R400 += 1 };
  s0 -> s1 [0, 65535] { R400 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R400 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R402 += 1 };
  s0 -> s2 [0, 65535] { R402 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R401 += 1, R402 += 1 };
  s0 -> s3 [70, 70] { R402 += 1 };
  s0 -> s1 [71, 65535] { R402 += 1 };
  s1 -> s1 [0, 69] { R402 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R402 += 1 };
  s1 -> s1 [71, 65535] { R402 += 1 };
  s2 -> s1 [0, 69] { R402 += 1 };
  s2 -> s2 [0, 65535] { R402 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R402 += 1 };
  s2 -> s1 [71, 65535] { R402 += 1 };
  s3 -> s3 [0, 65535] { R402 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R404 += 1, R342 += 1 };
  s0 -> s0 [0, 65535] { R403 += 1, R404 += 1 };
  s0 -> s2 [0, 65535] { R404 += 1, R341 += 1, R342 += 1 };
  s0 -> s1 [71, 65535] { R404 += 1, R342 += 1 };
  s1 -> s1 [0, 69] { R404 += 1, R342 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R404 += 1 };
  s1 -> s1 [71, 65535] { R404 += 1, R342 += 1 };
  s2 -> s1 [0, 69] { R404 += 1, R342 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R404 += 1, R341 += 1, R342 += 1 };
  s2 -> s1 [71, 65535] { R404 += 1, R342 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R406 += 1, R343 += 1, R344 += 1 };
  s0 -> s0 [0, 65535] { R405 += 1, R406 += 1 };
  s0 -> s2 [0, 65535] { R406 += 1, R344 += 1, R20 += 1 };
  s1 -> s1 [0, 65535] { R406 += 1, R343 += 1, R344 += 1 };
  s1 -> s2 [0, 65535] { R406 += 1, R344 += 1, R20 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R406 += 1 };
  s2 -> s2 [0, 65535] { R406 += 1, R344 += 1, R20 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R406 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R408 += 1, R346 += 1 };
  s0 -> s2 [0, 65535] { R408 += 1, R345 += 1, R346 += 1 };
  s0 -> s0 [0, 65535] { R407 += 1, R408 += 1 };
  s0 -> s1 [75, 65535] { R408 += 1, R346 += 1 };
  s1 -> s1 [0, 70] { R408 += 1, R346 += 1 };
  s1 -> s1 [0, 65535] { R408 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R408 += 1, R346 += 1 };
  s2 -> s1 [0, 70] { R408 += 1, R346 += 1 };
  s2 -> s2 [0, 65535] { R408 += 1, R345 += 1, R346 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R408 += 1, R346 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R410 += 1, R347 += 1, R348 += 1 };
  s0 -> s2 [0, 65535] { R410 += 1, R348 += 1, R84 += 1 };
  s0 -> s0 [0, 65535] { R409 += 1, R410 += 1 };
  s1 -> s1 [0, 65535] { R410 += 1, R347 += 1, R348 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R410 += 1, R348 += 1, R84 += 1 };
  s2 -> s3 [0, 65535] { R410 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R410 += 1, R348 += 1, R84 += 1 };
  s3 -> s3 [0, 65535] { R410 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R412 += 1, R350 += 1 };
  s0 -> s0 [0, 65535] { R411 += 1, R412 += 1 };
  s0 -> s2 [0, 65535] { R412 += 1, R349 += 1, R350 += 1 };
  s0 -> s3 [0, 65535] { R412 += 1, R350 += 1, R86 += 1 };
  s0 -> s1 [76, 65535] { R412 += 1, R350 += 1 };
  s1 -> s1 [0, 74] { R412 += 1, R350 += 1 };
  s1 -> s1 [0, 65535] { R412 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R412 += 1, R350 += 1 };
  s2 -> s1 [0, 74] { R412 += 1, R350 += 1 };
  s2 -> s2 [0, 65535] { R412 += 1, R349 += 1, R350 += 1 };
  s2 -> s3 [0, 65535] { R412 += 1, R350 += 1, R86 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [76, 65535] { R412 += 1, R350 += 1 };
  s3 -> s1 [0, 74] { R412 += 1, R350 += 1 };
  s3 -> s4 [0, 65535] { R412 += 1 };
  s3 -> s3 [0, 65535] { R412 += 1, R350 += 1, R86 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [76, 65535] { R412 += 1, R350 += 1 };
  s4 -> s4 [0, 65535] { R412 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s0 [0, 65535] { R413 += 1, R414 += 1 };
  s0 -> s1 [0, 65535] { R414 += 1, R352 += 1 };
  s0 -> s2 [0, 65535] { R414 += 1, R351 += 1, R352 += 1 };
  s0 -> s3 [0, 65535] { R414 += 1, R352 += 1, R90 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R414 += 1 };
  s1 -> s1 [0, 65535] { R414 += 1, R352 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R414 += 1, R352 += 1 };
  s2 -> s2 [0, 65535] { R414 += 1, R351 += 1, R352 += 1 };
  s2 -> s3 [0, 65535] { R414 += 1, R352 += 1, R90 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R414 += 1 };
  s3 -> s1 [0, 65535] { R414 += 1, R352 += 1 };
  s3 -> s3 [0, 65535] { R414 += 1, R352 += 1, R90 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R414 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R416 += 1, R354 += 1, R94 += 1, R95 += 1 };
  s0 -> s0 [0, 65535] { R415 += 1, R416 += 1 };
  s0 -> s2 [0, 65535] { R416 += 1, R354 += 1, R95 += 1, R96 += 1 };
  s0 -> s3 [0, 65535] { R416 += 1, R353 += 1, R354 += 1 };
  s1 -> s5 [0, 65535] { R416 += 1 };
  s1 -> s1 [0, 65535] { R416 += 1, R354 += 1, R94 += 1, R95 += 1 };
  s1 -> s2 [0, 65535] { R416 += 1, R354 += 1, R95 += 1, R96 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R416 += 1 };
  s2 -> s6 [0, 65535] { R416 += 1, R354 += 1 };
  s2 -> s2 [0, 65535] { R416 += 1, R354 += 1, R95 += 1, R96 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R416 += 1, R354 += 1, R94 += 1, R95 += 1 };
  s3 -> s2 [0, 65535] { R416 += 1, R354 += 1, R95 += 1, R96 += 1 };
  s3 -> s3 [0, 65535] { R416 += 1, R353 += 1, R354 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R416 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R416 += 1 };
  s6 -> s6 [0, 65535] { R416 += 1, R354 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R418 += 1, R356 += 1, R101 += 1 };
  s0 -> s2 [0, 65535] { R418 += 1, R356 += 1, R100 += 1, R101 += 1 };
  s0 -> s3 [0, 65535] { R418 += 1, R355 += 1, R356 += 1 };
  s0 -> s0 [0, 65535] { R417 += 1, R418 += 1 };
  s0 -> s4 [0, 65535] { R418 += 1, R356 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [76, 65535] { R418 += 1, R356 += 1, R101 += 1 };
  s1 -> s1 [0, 74] { R418 += 1, R356 += 1, R101 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R418 += 1, R356 += 1 };
  s1 -> s7 [0, 65535] { R418 += 1 };
  s1 -> s1 [76, 65535] { R418 += 1, R356 += 1, R101 += 1 };
  s2 -> s1 [0, 74] { R418 += 1, R356 += 1, R101 += 1 };
  s2 -> s2 [0, 65535] { R418 += 1, R356 += 1, R100 += 1, R101 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R418 += 1 };
  s2 -> s4 [0, 65535] { R418 += 1, R356 += 1, R101 += 1, R102 += 1 };
  s2 -> s1 [76, 65535] { R418 += 1, R356 += 1, R101 += 1 };
  s3 -> s1 [0, 74] { R418 += 1, R356 += 1, R101 += 1 };
  s3 -> s2 [0, 65535] { R418 += 1, R356 += 1, R100 += 1, R101 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R418 += 1, R355 += 1, R356 += 1 };
  s3 -> s4 [0, 65535] { R418 += 1, R356 += 1, R101 += 1, R102 += 1 };
  s3 -> s1 [76, 65535] { R418 += 1, R356 += 1, R101 += 1 };
  s4 -> s1 [0, 74] { R418 += 1, R356 += 1, R101 += 1 };
  s4 -> s5 [0, 65535] { R418 += 1, R356 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R418 += 1 };
  s4 -> s4 [0, 65535] { R418 += 1, R356 += 1, R101 += 1, R102 += 1 };
  s4 -> s1 [76, 65535] { R418 += 1, R356 += 1, R101 += 1 };
  s5 -> s5 [0, 65535] { R418 += 1, R356 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R418 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R418 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R420 += 1, R358 += 1, R108 += 1 };
  s0 -> s2 [0, 65535] { R420 += 1, R358 += 1, R108 += 1, R110 += 1 };
  s0 -> s0 [0, 65535] { R419 += 1, R420 += 1 };
  s0 -> s3 [0, 65535] { R420 += 1, R358 += 1 };
  s0 -> s4 [0, 65535] { R420 += 1, R357 += 1, R358 += 1 };
  s1 -> s1 [0, 65535] { R420 += 1, R358 += 1, R108 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R420 += 1 };
  s1 -> s3 [0, 65535] { R420 += 1, R358 += 1 };
  s2 -> s1 [0, 65535] { R420 += 1, R358 += 1, R108 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R420 += 1, R358 += 1, R108 += 1, R110 += 1 };
  s2 -> s6 [0, 65535] { R420 += 1 };
  s2 -> s3 [0, 65535] { R420 += 1, R358 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R420 += 1 };
  s3 -> s3 [0, 65535] { R420 += 1, R358 += 1 };
  s4 -> s1 [0, 65535] { R420 += 1, R358 += 1, R108 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R420 += 1, R358 += 1, R108 += 1, R110 += 1 };
  s4 -> s3 [0, 65535] { R420 += 1, R358 += 1 };
  s4 -> s4 [0, 65535] { R420 += 1, R357 += 1, R358 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R420 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s0 [0, 65535] { R421 += 1, R422 += 1 };
  s0 -> s1 [0, 65535] { R422 += 1, R360 += 1, R337 += 1, R338 += 1, R339 += 1 };
  s0 -> s2 [0, 65535] { R422 += 1, R360 += 1, R337 += 1, R339 += 1, R340 += 1 };
  s0 -> s3 [0, 65535] { R422 += 1, R360 += 1, R336 += 1, R337 += 1 };
  s0 -> s4 [0, 65535] { R422 += 1, R359 += 1, R360 += 1 };
  s1 -> s1 [0, 65535] { R422 += 1, R360 += 1, R337 += 1, R338 += 1, R339 += 1 };
  s1 -> s2 [0, 65535] { R422 += 1, R360 += 1, R337 += 1, R339 += 1, R340 += 1 };
  s1 -> s8 [0, 65535] { R422 += 1, R360 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R422 += 1 };
  s2 -> s2 [0, 65535] { R422 += 1, R360 += 1, R337 += 1, R339 += 1, R340 += 1 };
  s2 -> s7 [0, 65535] { R422 += 1, R360 += 1, R337 += 1 };
  s2 -> s8 [0, 65535] { R422 += 1, R360 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R422 += 1 };
  s3 -> s1 [0, 65535] { R422 += 1, R360 += 1, R337 += 1, R338 += 1, R339 += 1 };
  s3 -> s2 [0, 65535] { R422 += 1, R360 += 1, R337 += 1, R339 += 1, R340 += 1 };
  s3 -> s3 [0, 65535] { R422 += 1, R360 += 1, R336 += 1, R337 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R422 += 1 };
  s4 -> s1 [0, 65535] { R422 += 1, R360 += 1, R337 += 1, R338 += 1, R339 += 1 };
  s4 -> s2 [0, 65535] { R422 += 1, R360 += 1, R337 += 1, R339 += 1, R340 += 1 };
  s4 -> s3 [0, 65535] { R422 += 1, R360 += 1, R336 += 1, R337 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R422 += 1, R359 += 1, R360 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R422 += 1 };
  s7 -> s7 [0, 65535] { R422 += 1, R360 += 1, R337 += 1 };
  s7 -> s8 [0, 65535] { R422 += 1, R360 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R422 += 1 };
  s8 -> s8 [0, 65535] { R422 += 1, R360 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R422 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R424 += 1, R380 += 1, R21 += 1 };
  s0 -> s0 [0, 65535] { R423 += 1, R424 += 1 };
  s0 -> s2 [0, 65535] { R424 += 1, R379 += 1, R380 += 1 };
  s1 -> s1 [0, 65535] { R424 += 1, R380 += 1, R21 += 1 };
  s1 -> s4 [0, 65535] { R424 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R424 += 1, R380 += 1, R21 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R424 += 1, R379 += 1, R380 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R424 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R426 += 1, R382 += 1 };
  s0 -> s0 [0, 65535] { R425 += 1, R426 += 1 };
  s0 -> s2 [0, 65535] { R426 += 1, R381 += 1, R382 += 1 };
  s0 -> s3 [70, 70] { R426 += 1, R382 += 1 };
  s0 -> s4 [70, 70] { R426 += 1, R382 += 1 };
  s0 -> s5 [75, 75] { R426 += 1, R382 += 1 };
  s0 -> s1 [76, 65535] { R426 += 1, R382 += 1 };
  s1 -> s1 [0, 69] { R426 += 1, R382 += 1 };
  s1 -> s3 [70, 70] { R426 += 1, R382 += 1 };
  s1 -> s4 [70, 70] { R426 += 1, R382 += 1 };
  s1 -> s5 [75, 75] { R426 += 1, R382 += 1 };
  s1 -> s1 [76, 65535] { R426 += 1, R382 += 1 };
  s2 -> s1 [0, 69] { R426 += 1, R382 += 1 };
  s2 -> s2 [0, 65535] { R426 += 1, R381 += 1, R382 += 1 };
  s2 -> s3 [70, 70] { R426 += 1, R382 += 1 };
  s2 -> s4 [70, 70] { R426 += 1, R382 += 1 };
  s2 -> s5 [75, 75] { R426 += 1, R382 += 1 };
  s2 -> s1 [76, 65535] { R426 += 1, R382 += 1 };
  s3 -> s3 [0, 70] { R426 += 1, R382 += 1 };
  s3 -> s7 [75, 75] { R426 += 1, R382 += 1 };
  s3 -> s3 [76, 65535] { R426 += 1, R382 += 1 };
  s5 -> s5 [0, 69] { R426 += 1, R382 += 1 };
  s5 -> s5 [0, 65535] { R426 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R426 += 1, R382 += 1 };
  s5 -> s8 [70, 70] { R426 += 1, R382 += 1 };
  s5 -> s5 [75, 65535] { R426 += 1, R382 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R426 += 1, R382 += 1 };
  s7 -> s7 [0, 65535] { R426 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R426 += 1, R382 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R426 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R428 += 1, R384 += 1, R83 += 1 };
  s0 -> s0 [0, 65535] { R427 += 1, R428 += 1 };
  s0 -> s2 [0, 65535] { R428 += 1, R383 += 1, R384 += 1 };
  s0 -> s3 [70, 70] { R428 += 1, R384 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R428 += 1, R384 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R428 += 1, R384 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R428 += 1, R384 += 1, R83 += 1 };
  s1 -> s1 [0, 65535] { R428 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R428 += 1, R384 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R428 += 1, R384 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R428 += 1, R384 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R428 += 1, R384 += 1, R83 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R428 += 1, R383 += 1, R384 += 1 };
  s2 -> s3 [70, 70] { R428 += 1, R384 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R428 += 1, R384 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R428 += 1, R384 += 1, R83 += 1 };
  s3 -> s6 [0, 65535] { R428 += 1 };
  s3 -> s3 [0, 65535] { R428 += 1, R384 += 1, R83 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R428 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R428 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R430 += 1, R386 += 1, R85 += 1 };
  s0 -> s0 [0, 65535] { R429 += 1, R430 += 1 };
  s0 -> s2 [0, 65535] { R430 += 1, R385 += 1, R386 += 1 };
  s0 -> s3 [70, 70] { R430 += 1, R386 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R430 += 1, R386 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R430 += 1, R386 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R430 += 1, R386 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R430 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R430 += 1, R386 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R430 += 1, R386 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R430 += 1, R386 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R430 += 1, R386 += 1, R85 += 1 };
  s2 -> s2 [0, 65535] { R430 += 1, R385 += 1, R386 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R430 += 1, R386 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R430 += 1, R386 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R430 += 1, R386 += 1, R85 += 1 };
  s3 -> s3 [0, 65535] { R430 += 1, R386 += 1, R85 += 1 };
  s3 -> s6 [0, 65535] { R430 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R430 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R430 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R432 += 1, R388 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R432 += 1, R388 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [0, 65535] { R432 += 1, R387 += 1, R388 += 1 };
  s0 -> s0 [0, 65535] { R431 += 1, R432 += 1 };
  s0 -> s4 [70, 70] { R432 += 1, R388 += 1, R87 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R432 += 1, R388 += 1, R87 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R432 += 1, R388 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R432 += 1, R388 += 1, R88 += 1 };
  s0 -> s1 [71, 74] { R432 += 1, R388 += 1, R88 += 1 };
  s0 -> s2 [71, 65535] { R432 += 1, R388 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R432 += 1, R388 += 1, R88 += 1 };
  s0 -> s1 [76, 65535] { R432 += 1, R388 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R432 += 1, R388 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R432 += 1, R388 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R432 += 1, R388 += 1, R88 += 1 };
  s1 -> s1 [71, 74] { R432 += 1, R388 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R432 += 1, R388 += 1, R88 += 1 };
  s1 -> s1 [76, 65535] { R432 += 1, R388 += 1, R88 += 1 };
  s2 -> s1 [0, 69] { R432 += 1, R388 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R432 += 1, R388 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R432 += 1, R388 += 1, R87 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R432 += 1, R388 += 1, R87 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R432 += 1, R388 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R432 += 1, R388 += 1, R88 += 1 };
  s2 -> s1 [71, 74] { R432 += 1, R388 += 1, R88 += 1 };
  s2 -> s2 [71, 65535] { R432 += 1, R388 += 1, R87 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R432 += 1, R388 += 1, R88 += 1 };
  s2 -> s1 [76, 65535] { R432 += 1, R388 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R432 += 1, R388 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R432 += 1, R388 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R432 += 1, R387 += 1, R388 += 1 };
  s3 -> s4 [70, 70] { R432 += 1, R388 += 1, R87 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R432 += 1, R388 += 1, R87 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R432 += 1, R388 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R432 += 1, R388 += 1, R88 += 1 };
  s3 -> s1 [71, 74] { R432 += 1, R388 += 1, R88 += 1 };
  s3 -> s2 [71, 65535] { R432 += 1, R388 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R432 += 1, R388 += 1, R88 += 1 };
  s3 -> s1 [76, 65535] { R432 += 1, R388 += 1, R88 += 1 };
  s5 -> s6 [0, 74] { R432 += 1, R388 += 1, R88 += 1 };
  s5 -> s5 [0, 65535] { R432 += 1, R388 += 1, R87 += 1, R88 += 1 };
  s5 -> s11 [75, 75] { R432 += 1, R388 += 1, R88 += 1 };
  s5 -> s6 [76, 65535] { R432 += 1, R388 += 1, R88 += 1 };
  s6 -> s6 [0, 74] { R432 += 1, R388 += 1, R88 += 1 };
  s6 -> s11 [75, 75] { R432 += 1, R388 += 1, R88 += 1 };
  s6 -> s6 [76, 65535] { R432 += 1, R388 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R432 += 1, R388 += 1, R88 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R432 += 1 };
  s8 -> s10 [70, 70] { R432 += 1, R388 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R432 += 1, R388 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R432 += 1, R388 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R432 += 1 };
  s11 -> s12 [0, 65535] { R432 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R432 += 1, R388 += 1, R88 += 1 };
  s12 -> s12 [0, 65535] { R432 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R434 += 1, R390 += 1, R91 += 1, R92 += 1 };
  s0 -> s2 [0, 65535] { R434 += 1, R389 += 1, R390 += 1 };
  s0 -> s0 [0, 65535] { R433 += 1, R434 += 1 };
  s0 -> s3 [70, 70] { R434 += 1, R390 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R434 += 1, R390 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R434 += 1, R390 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R434 += 1, R390 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 65535] { R434 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R434 += 1, R390 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R434 += 1, R390 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R434 += 1, R390 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R434 += 1, R390 += 1, R91 += 1, R92 += 1 };
  s2 -> s2 [0, 65535] { R434 += 1, R389 += 1, R390 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R434 += 1, R390 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R434 += 1, R390 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R434 += 1, R390 += 1, R91 += 1, R92 += 1 };
  s3 -> s3 [0, 65535] { R434 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R434 += 1, R390 += 1, R91 += 1, R92 += 1 };
  s4 -> s6 [0, 65535] { R434 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R434 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R436 += 1, R392 += 1, R97 += 1, R98 += 1 };
  s0 -> s0 [0, 65535] { R435 += 1, R436 += 1 };
  s0 -> s2 [0, 65535] { R436 += 1, R391 += 1, R392 += 1 };
  s0 -> s3 [70, 70] { R436 += 1, R392 += 1, R97 += 1, R98 += 1 };
  s0 -> s4 [70, 70] { R436 += 1, R392 += 1, R97 += 1, R98 += 1 };
  s0 -> s1 [71, 65535] { R436 += 1, R392 += 1, R97 += 1, R98 += 1 };
  s1 -> s1 [0, 69] { R436 += 1, R392 += 1, R97 += 1, R98 += 1 };
  s1 -> s1 [0, 65535] { R436 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R436 += 1, R392 += 1, R97 += 1, R98 += 1 };
  s1 -> s4 [70, 70] { R436 += 1, R392 += 1, R97 += 1, R98 += 1 };
  s1 -> s1 [71, 65535] { R436 += 1, R392 += 1, R97 += 1, R98 += 1 };
  s2 -> s1 [0, 69] { R436 += 1, R392 += 1, R97 += 1, R98 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R436 += 1, R391 += 1, R392 += 1 };
  s2 -> s3 [70, 70] { R436 += 1, R392 += 1, R97 += 1, R98 += 1 };
  s2 -> s4 [70, 70] { R436 += 1, R392 += 1, R97 += 1, R98 += 1 };
  s2 -> s1 [71, 65535] { R436 += 1, R392 += 1, R97 += 1, R98 += 1 };
  s3 -> s3 [0, 65535] { R436 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R436 += 1 };
  s4 -> s4 [0, 65535] { R436 += 1, R392 += 1, R97 += 1, R98 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R436 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R438 += 1, R394 += 1, R103 += 1, R104 += 1 };
  s0 -> s2 [0, 69] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s0 -> s3 [0, 69] { R438 += 1, R394 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s0 -> s0 [0, 65535] { R437 += 1, R438 += 1 };
  s0 -> s4 [0, 65535] { R438 += 1, R393 += 1, R394 += 1 };
  s0 -> s5 [70, 70] { R438 += 1, R394 += 1, R103 += 1, R104 += 1 };
  s0 -> s6 [70, 70] { R438 += 1, R394 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s0 -> s7 [70, 70] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s0 -> s8 [70, 70] { R438 += 1, R394 += 1, R103 += 1, R104 += 1 };
  s0 -> s9 [70, 70] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s0 -> s10 [70, 70] { R438 += 1, R394 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s0 -> s2 [71, 74] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s0 -> s1 [71, 65535] { R438 += 1, R394 += 1, R103 += 1, R104 += 1 };
  s0 -> s3 [71, 65535] { R438 += 1, R394 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s0 -> s11 [75, 75] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s0 -> s2 [76, 65535] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s1 -> s1 [0, 69] { R438 += 1, R394 += 1, R103 += 1, R104 += 1 };
  s1 -> s2 [0, 69] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s1 -> s3 [0, 69] { R438 += 1, R394 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s1 -> s5 [70, 70] { R438 += 1, R394 += 1, R103 += 1, R104 += 1 };
  s1 -> s6 [70, 70] { R438 += 1, R394 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s1 -> s7 [70, 70] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s1 -> s8 [70, 70] { R438 += 1, R394 += 1, R103 += 1, R104 += 1 };
  s1 -> s9 [70, 70] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s1 -> s10 [70, 70] { R438 += 1, R394 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s1 -> s2 [71, 74] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s1 -> s1 [71, 65535] { R438 += 1, R394 += 1, R103 += 1, R104 += 1 };
  s1 -> s3 [71, 65535] { R438 += 1, R394 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s1 -> s11 [75, 75] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s1 -> s2 [76, 65535] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s2 -> s2 [0, 69] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s2 -> s7 [70, 70] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s2 -> s9 [70, 70] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s2 -> s2 [71, 74] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s2 -> s11 [75, 75] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s2 -> s2 [76, 65535] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s3 -> s2 [0, 69] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s3 -> s3 [0, 69] { R438 += 1, R394 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s3 -> s6 [70, 70] { R438 += 1, R394 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s3 -> s7 [70, 70] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s3 -> s9 [70, 70] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s3 -> s10 [70, 70] { R438 += 1, R394 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s3 -> s2 [71, 74] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s3 -> s3 [71, 65535] { R438 += 1, R394 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s3 -> s11 [75, 75] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s3 -> s2 [76, 65535] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s4 -> s1 [0, 69] { R438 += 1, R394 += 1, R103 += 1, R104 += 1 };
  s4 -> s2 [0, 69] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s4 -> s3 [0, 69] { R438 += 1, R394 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s4 -> s4 [0, 65535] { R438 += 1, R393 += 1, R394 += 1 };
  s4 -> s5 [70, 70] { R438 += 1, R394 += 1, R103 += 1, R104 += 1 };
  s4 -> s6 [70, 70] { R438 += 1, R394 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s4 -> s7 [70, 70] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s4 -> s8 [70, 70] { R438 += 1, R394 += 1, R103 += 1, R104 += 1 };
  s4 -> s9 [70, 70] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s4 -> s10 [70, 70] { R438 += 1, R394 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s4 -> s2 [71, 74] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s4 -> s1 [71, 65535] { R438 += 1, R394 += 1, R103 += 1, R104 += 1 };
  s4 -> s3 [71, 65535] { R438 += 1, R394 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s4 -> s11 [75, 75] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s4 -> s2 [76, 65535] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s7 -> s7 [0, 74] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s7 -> s14 [75, 75] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s7 -> s7 [76, 65535] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s8 -> s7 [0, 74] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s8 -> s8 [0, 65535] { R438 += 1, R394 += 1, R103 += 1, R104 += 1 };
  s8 -> s10 [0, 65535] { R438 += 1, R394 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s8 -> s14 [75, 75] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s8 -> s7 [76, 65535] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s10 -> s7 [0, 74] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s10 -> s10 [0, 65535] { R438 += 1, R394 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s10 -> s14 [75, 75] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s10 -> s7 [76, 65535] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s11 -> s11 [0, 69] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s11 -> s11 [0, 65535] { R438 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [70, 70] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s11 -> s14 [70, 70] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s11 -> s11 [71, 65535] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R438 += 1 };
  s13 -> s12 [0, 65535];
  s14 -> s15 [0, 65535] { R438 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R438 += 1, R394 += 1, R104 += 1, R106 += 1 };
  s15 -> s15 [0, 65535] { R438 += 1 };
  s15 -> s12 [0, 65535];
  accepting s12, s13, s14, s15, s11;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R440 += 1, R396 += 1, R331 += 1, R332 += 1 };
  s0 -> s0 [0, 65535] { R439 += 1, R440 += 1 };
  s0 -> s2 [0, 65535] { R440 += 1, R395 += 1, R396 += 1 };
  s0 -> s3 [70, 70] { R440 += 1, R396 += 1, R331 += 1, R332 += 1 };
  s0 -> s4 [70, 70] { R440 += 1, R396 += 1, R331 += 1, R332 += 1 };
  s0 -> s1 [71, 65535] { R440 += 1, R396 += 1, R331 += 1, R332 += 1 };
  s1 -> s1 [0, 69] { R440 += 1, R396 += 1, R331 += 1, R332 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R440 += 1 };
  s1 -> s3 [70, 70] { R440 += 1, R396 += 1, R331 += 1, R332 += 1 };
  s1 -> s4 [70, 70] { R440 += 1, R396 += 1, R331 += 1, R332 += 1 };
  s1 -> s1 [71, 65535] { R440 += 1, R396 += 1, R331 += 1, R332 += 1 };
  s2 -> s1 [0, 69] { R440 += 1, R396 += 1, R331 += 1, R332 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R440 += 1, R395 += 1, R396 += 1 };
  s2 -> s3 [70, 70] { R440 += 1, R396 += 1, R331 += 1, R332 += 1 };
  s2 -> s4 [70, 70] { R440 += 1, R396 += 1, R331 += 1, R332 += 1 };
  s2 -> s1 [71, 65535] { R440 += 1, R396 += 1, R331 += 1, R332 += 1 };
  s3 -> s3 [0, 65535] { R440 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R440 += 1, R396 += 1, R331 += 1, R332 += 1 };
  s4 -> s6 [0, 65535] { R440 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R440 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R440 && R23 - R440 = -1 && R24 = R440 && R25 - R440 = -1 && R26 = R440 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R108 + -1*R104 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R108 + -1*R104 - R66 = 0 && R55 + R96 + R93 + -1*R110 + -1*R106 - R68 = 0 && R65 + R107 + R103 = 0 && R67 + R109 + R105 = 0 && R381 = 0 && R382 = 0 && R387 = 0 && R388 = 0 && R393 = 0 && R394 = 0 && R397 = 0 && R398 = R440 && R399 = 0 && R400 = R440 && R401 = 0 && R402 = R440 && R403 = 0 && R404 = R440 && R405 = 0 && R406 = R440 && R407 = 0 && R408 = R440 && R409 = 0 && R410 = R440 && R411 = 0 && R412 = R440 && R413 = 0 && R414 = R440 && R415 = 0 && R416 = R440 && R417 = 0 && R418 = R440 && R419 = 0 && R420 = R440 && R421 = 0 && R422 = R440 && R423 = 0 && R424 = R440 && R425 = 0 && R426 = R440 && R427 = 0 && R428 = R440 && R429 = 0 && R430 = R440 && R431 = 0 && R432 = R440 && R433 = 0 && R434 = R440 && R435 = 0 && R436 = R440 && R437 = 0 && R438 = R440 && R439 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R102 + R99 < 1 && -1*R108 + -1*R104 - R66 < 1 && -1*R110 + -1*R106 - R68 < 1 && 0 < R440 && (R2 != 0 || R20 = 0 || (R341 = 0 && R342 = 0)) && (R2 != 0 || R20 = 0 || (R343 = 0 && R344 = 0)) && (R2 != 0 || R20 = 0 || (R345 = 0 && R346 = 0)) && (R2 != 0 || R20 = 0 || (R347 = 0 && R348 = 0)) && (R2 != 0 || R20 = 0 || (R349 = 0 && R350 = 0)) && (R2 != 0 || R20 = 0 || (R351 = 0 && R352 = 0)) && (R2 != 0 || R20 = 0 || (R353 = 0 && R354 = 0)) && (R2 != 0 || R20 = 0 || (R355 = 0 && R356 = 0)) && (R2 != 0 || R20 = 0 || (R357 = 0 && R358 = 0)) && (R2 != 0 || R20 = 0 || (R359 = 0 && R360 = 0)) && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R108 + -1*R104 - R66 = 0 || R66 + R108 + R104 < 1) && (R59 + R100 + R97 != 0 || R60 + R101 + R98 + -1*R108 + -1*R104 - R66 = 0 || R66 + R108 + R104 < 1) && (R66 + R108 + R104 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R110 + R106 < 1) && (R53 + R94 + R91 = 0 || R68 + R110 + R106 < 1))) && (R66 + R108 + R104 != 0 || ((R59 + R100 + R97 != 0 || R60 + R101 + R98 = 0 || R68 + R110 + R106 < 1) && (R59 + R100 + R97 = 0 || R68 + R110 + R106 < 1))) && (R66 + R108 + R104 != 0 || ((R73 + R336 + R331 != 0 || R74 + R337 + R332 = 0 || R68 + R110 + R106 < 1) && (R73 + R336 + R331 = 0 || R68 + R110 + R106 < 1))) && (R68 + R110 + R106 != 0 || R77 + R340 + R335 = 0 || (R75 + R338 + R333 = 0 && R76 + R339 + R334 = 0)) && (R73 + R336 + R331 != 0 || R66 + R108 + R104 + -1*R337 + -1*R332 - R74 = 0 || R66 + R108 + R104 < 1) && (R75 + R338 + R333 != 0 || R68 + R110 + R106 + -1*R339 + -1*R334 - R76 = 0 || R68 + R110 + R106 < 1) && (R341 != 0 || R2 = R342 || R2 < 1) && (R343 != 0 || R2 = R344 || R2 < 1) && (R345 != 0 || R2 = R346 || R2 < 1) && (R347 != 0 || R2 = R348 || R2 < 1) && (R349 != 0 || R2 = R350 || R2 < 1) && (R351 != 0 || R2 = R352 || R2 < 1) && (R353 != 0 || R2 = R354 || R2 < 1) && (R355 != 0 || R2 = R356 || R2 < 1) && (R357 != 0 || R2 = R358 || R2 < 1) && (R359 != 0 || R2 = R360 || R2 < 1) && (R21 = 0 || (R379 = 0 && R380 = 0)) && (R21 = 0 || (R383 = 0 && R384 = 0)) && (R21 = 0 || (R385 = 0 && R386 = 0)) && (R21 = 0 || (R389 = 0 && R390 = 0)) && (R21 = 0 || (R391 = 0 && R392 = 0)) && (R21 = 0 || (R395 = 0 && R396 = 0)) && (R22 = 0 || (R361 = 0 && R362 = 0)) && (R22 = 0 || (R363 = 0 && R364 = 0)) && (R22 = 0 || (R365 = 0 && R366 = 0)) && (R22 = 0 || (R367 = 0 && R368 = 0)) && (R22 = 0 || (R369 = 0 && R370 = 0)) && (R22 = 0 || (R371 = 0 && R372 = 0)) && (R22 = 0 || (R373 = 0 && R374 = 0)) && (R22 = 0 || (R375 = 0 && R376 = 0)) && (R22 = 0 || (R377 = 0 && R378 = 0)) && (R53 + R94 + R91 = 0 || R66 + R108 + R104 < 1) && (R59 + R100 + R97 = 0 || R66 + R108 + R104 < 1) && (R73 + R336 + R331 = 0 || R66 + R108 + R104 < 1) && (R75 + R338 + R333 = 0 || R68 + R110 + R106 < 1) && (R341 = 0 || R2 < 1) && (R343 = 0 || R2 < 1) && (R345 = 0 || R2 < 1) && (R347 = 0 || R2 < 1) && (R349 = 0 || R2 < 1) && (R351 = 0 || R2 < 1) && (R353 = 0 || R2 < 1) && (R355 = 0 || R2 < 1) && (R357 = 0 || R2 < 1) && (R359 = 0 || R2 < 1);
// End of Parikh automata intersection problem
