// Parikh automata intersection problem, generated by OSTRICH+
counter int R10159, R10160, R10161, R10162, R10163, R10164, R11281, R11282, R11283, R11284, R11285, R11286, R11287, R11288, R11729, R11730, R11731, R11732, R11733, R11734, R11735, R11736, R11737, R11738, R11739, R11740, R11741, R11742, R11743, R11744, R11745, R11746, R11747, R11748, R11749, R11750, R11751, R11752, R11753, R11754, R11755, R11756, R11757, R11758, R11759, R11760, R11761, R11762, R11763, R11764, R11765, R11766, R11767, R11768, R11769, R11770, R11771, R11772, R11773, R11774, R11775, R11776, R11777, R11778, R11779, R11780, R11781, R11782, R11783, R11784, R11785, R11786, R11787, R11788, R11789, R11790, R11791, R11792, R11793, R11794, R11795, R11796, R11797, R11798, R11799, R11800, R11801, R11802, R11803, R11804, R11805, R11806, R11807, R11808, R11809, R11810, R11811, R11812, R11813, R11814, R11815, R11816, R11817, R11818, R11819, R11820, R11821, R11822, R11823, R11824, R11825, R11826, R11827, R11828, R11829, R11830, R11831, R11832, R11833, R11834, R11835, R11836, R11837, R11838, R12, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R4, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R11759 += 1, R11760 += 1 };
  s0 -> s1 [0, 65535] { R11760 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R11760 += 1, R22 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R11762 += 1 };
  s0 -> s0 [0, 65535] { R11761 += 1, R11762 += 1 };
  s0 -> s2 [70, 70] { R11762 += 1 };
  s0 -> s3 [70, 70] { R11762 += 1 };
  s0 -> s1 [76, 65535] { R11762 += 1 };
  s1 -> s1 [0, 69] { R11762 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11762 += 1 };
  s1 -> s3 [70, 70] { R11762 += 1 };
  s1 -> s1 [76, 65535] { R11762 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R11762 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R11762 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R11764 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R11763 += 1, R11764 += 1 };
  s0 -> s2 [70, 70] { R11764 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R11764 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R11764 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R11764 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11764 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R11764 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R11764 += 1, R45 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R11764 += 1, R45 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R11766 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R11765 += 1, R11766 += 1 };
  s0 -> s2 [70, 70] { R11766 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R11766 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R11766 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R11766 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11766 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R11766 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R11766 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R11766 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R11768 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R11767 += 1, R11768 += 1 };
  s0 -> s2 [70, 70] { R11768 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R11768 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R11768 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R11768 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11768 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R11768 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R11768 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R11768 += 1, R49 += 1, R50 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R11770 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R11769 += 1, R11770 += 1 };
  s0 -> s2 [70, 70] { R11770 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R11770 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R11770 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R11770 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11770 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R11770 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R11770 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R11770 += 1, R53 += 1, R54 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R11772 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R11771 += 1, R11772 += 1 };
  s0 -> s2 [70, 70] { R11772 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R11772 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R11772 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R11772 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11772 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R11772 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R11772 += 1, R59 += 1, R60 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R11772 += 1, R59 += 1, R60 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R11774 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R11773 += 1, R11774 += 1 };
  s0 -> s2 [70, 70] { R11774 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R11774 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R11774 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R11774 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11774 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R11774 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R11774 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535] { R11774 += 1, R65 += 1, R66 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R11776 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R11775 += 1, R11776 += 1 };
  s0 -> s2 [70, 70] { R11776 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R11776 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R11776 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R11776 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11776 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R11776 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R11776 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R11776 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R11796 += 1 };
  s0 -> s0 [0, 65535] { R11795 += 1, R11796 += 1 };
  s0 -> s2 [70, 70] { R11796 += 1 };
  s0 -> s1 [71, 65535] { R11796 += 1 };
  s1 -> s1 [0, 69] { R11796 += 1 };
  s1 -> s2 [70, 70] { R11796 += 1 };
  s1 -> s1 [71, 65535] { R11796 += 1 };
  s2 -> s2 [0, 65535] { R11796 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R11798 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R11797 += 1, R11798 += 1 };
  s1 -> s1 [0, 65535] { R11798 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R11800 += 1 };
  s0 -> s0 [0, 65535] { R11799 += 1, R11800 += 1 };
  s0 -> s2 [0, 65535] { R11800 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R11800 += 1 };
  s0 -> s1 [71, 65535] { R11800 += 1 };
  s1 -> s1 [0, 69] { R11800 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R11800 += 1 };
  s1 -> s1 [71, 65535] { R11800 += 1 };
  s2 -> s1 [0, 69] { R11800 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R11800 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R11800 += 1 };
  s2 -> s1 [71, 65535] { R11800 += 1 };
  s3 -> s3 [0, 65535] { R11800 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R11802 += 1, R11740 += 1 };
  s0 -> s2 [0, 65535] { R11802 += 1, R11739 += 1, R11740 += 1 };
  s0 -> s0 [0, 65535] { R11801 += 1, R11802 += 1 };
  s0 -> s1 [71, 65535] { R11802 += 1, R11740 += 1 };
  s1 -> s1 [0, 69] { R11802 += 1, R11740 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R11802 += 1 };
  s1 -> s1 [71, 65535] { R11802 += 1, R11740 += 1 };
  s2 -> s1 [0, 69] { R11802 += 1, R11740 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R11802 += 1, R11739 += 1, R11740 += 1 };
  s2 -> s1 [71, 65535] { R11802 += 1, R11740 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R11804 += 1, R11741 += 1, R11742 += 1 };
  s0 -> s2 [0, 65535] { R11804 += 1, R11742 += 1, R20 += 1 };
  s0 -> s0 [0, 65535] { R11803 += 1, R11804 += 1 };
  s1 -> s1 [0, 65535] { R11804 += 1, R11741 += 1, R11742 += 1 };
  s1 -> s2 [0, 65535] { R11804 += 1, R11742 += 1, R20 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R11804 += 1, R11742 += 1, R20 += 1 };
  s2 -> s3 [0, 65535] { R11804 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R11804 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R11806 += 1, R11744 += 1 };
  s0 -> s0 [0, 65535] { R11805 += 1, R11806 += 1 };
  s0 -> s2 [0, 65535] { R11806 += 1, R11743 += 1, R11744 += 1 };
  s0 -> s1 [75, 65535] { R11806 += 1, R11744 += 1 };
  s1 -> s1 [0, 70] { R11806 += 1, R11744 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R11806 += 1 };
  s1 -> s1 [75, 65535] { R11806 += 1, R11744 += 1 };
  s2 -> s1 [0, 70] { R11806 += 1, R11744 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R11806 += 1, R11743 += 1, R11744 += 1 };
  s2 -> s1 [75, 65535] { R11806 += 1, R11744 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R11808 += 1, R11746 += 1, R84 += 1 };
  s0 -> s0 [0, 65535] { R11807 += 1, R11808 += 1 };
  s0 -> s2 [0, 65535] { R11808 += 1, R11745 += 1, R11746 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R11808 += 1, R11746 += 1, R84 += 1 };
  s1 -> s4 [0, 65535] { R11808 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R11808 += 1, R11746 += 1, R84 += 1 };
  s2 -> s2 [0, 65535] { R11808 += 1, R11745 += 1, R11746 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R11808 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R11810 += 1, R11748 += 1 };
  s0 -> s0 [0, 65535] { R11809 += 1, R11810 += 1 };
  s0 -> s2 [0, 65535] { R11810 += 1, R11748 += 1, R86 += 1 };
  s0 -> s3 [0, 65535] { R11810 += 1, R11747 += 1, R11748 += 1 };
  s0 -> s1 [76, 65535] { R11810 += 1, R11748 += 1 };
  s1 -> s1 [0, 74] { R11810 += 1, R11748 += 1 };
  s1 -> s1 [0, 65535] { R11810 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [76, 65535] { R11810 += 1, R11748 += 1 };
  s2 -> s1 [0, 74] { R11810 += 1, R11748 += 1 };
  s2 -> s5 [0, 65535] { R11810 += 1 };
  s2 -> s2 [0, 65535] { R11810 += 1, R11748 += 1, R86 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [76, 65535] { R11810 += 1, R11748 += 1 };
  s3 -> s1 [0, 74] { R11810 += 1, R11748 += 1 };
  s3 -> s2 [0, 65535] { R11810 += 1, R11748 += 1, R86 += 1 };
  s3 -> s3 [0, 65535] { R11810 += 1, R11747 += 1, R11748 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [76, 65535] { R11810 += 1, R11748 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R11810 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R11812 += 1, R11750 += 1 };
  s0 -> s0 [0, 65535] { R11811 += 1, R11812 += 1 };
  s0 -> s2 [0, 65535] { R11812 += 1, R11749 += 1, R11750 += 1 };
  s0 -> s3 [0, 65535] { R11812 += 1, R11750 += 1, R90 += 1 };
  s1 -> s1 [0, 65535] { R11812 += 1, R11750 += 1 };
  s1 -> s4 [0, 65535] { R11812 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R11812 += 1, R11750 += 1 };
  s2 -> s2 [0, 65535] { R11812 += 1, R11749 += 1, R11750 += 1 };
  s2 -> s3 [0, 65535] { R11812 += 1, R11750 += 1, R90 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R11812 += 1, R11750 += 1 };
  s3 -> s3 [0, 65535] { R11812 += 1, R11750 += 1, R90 += 1 };
  s3 -> s4 [0, 65535] { R11812 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R11812 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R11814 += 1, R11751 += 1, R11752 += 1 };
  s0 -> s2 [0, 65535] { R11814 += 1, R11752 += 1, R95 += 1, R96 += 1 };
  s0 -> s0 [0, 65535] { R11813 += 1, R11814 += 1 };
  s0 -> s3 [0, 65535] { R11814 += 1, R11752 += 1, R94 += 1, R95 += 1 };
  s1 -> s1 [0, 65535] { R11814 += 1, R11751 += 1, R11752 += 1 };
  s1 -> s2 [0, 65535] { R11814 += 1, R11752 += 1, R95 += 1, R96 += 1 };
  s1 -> s3 [0, 65535] { R11814 += 1, R11752 += 1, R94 += 1, R95 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R11814 += 1, R11752 += 1 };
  s2 -> s2 [0, 65535] { R11814 += 1, R11752 += 1, R95 += 1, R96 += 1 };
  s2 -> s4 [0, 65535] { R11814 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R11814 += 1, R11752 += 1, R95 += 1, R96 += 1 };
  s3 -> s4 [0, 65535] { R11814 += 1 };
  s3 -> s3 [0, 65535] { R11814 += 1, R11752 += 1, R94 += 1, R95 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R11814 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11814 += 1, R11752 += 1 };
  s6 -> s4 [0, 65535] { R11814 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 65535] { R11816 += 1, R11754 += 1 };
  s0 -> s0 [0, 65535] { R11815 += 1, R11816 += 1 };
  s0 -> s2 [0, 65535] { R11816 += 1, R11753 += 1, R11754 += 1 };
  s1 -> s1 [0, 65535] { R11816 += 1, R11754 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R11816 += 1 };
  s2 -> s1 [0, 65535] { R11816 += 1, R11754 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R11816 += 1, R11753 += 1, R11754 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R11816 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R11818 += 1, R11755 += 1, R11756 += 1 };
  s0 -> s0 [0, 65535] { R11817 += 1, R11818 += 1 };
  s0 -> s2 [0, 65535] { R11818 += 1, R11756 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R11818 += 1, R11755 += 1, R11756 += 1 };
  s1 -> s2 [0, 65535] { R11818 += 1, R11756 += 1 };
  s2 -> s3 [0, 65535] { R11818 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R11818 += 1, R11756 += 1 };
  s3 -> s3 [0, 65535] { R11818 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R11820 += 1, R11758 += 1, R11735 += 1, R11736 += 1, R11737 += 1 };
  s0 -> s2 [0, 65535] { R11820 += 1, R11758 += 1, R11735 += 1, R11737 += 1, R11738 += 1 };
  s0 -> s0 [0, 65535] { R11819 += 1, R11820 += 1 };
  s0 -> s3 [0, 65535] { R11820 += 1, R11758 += 1 };
  s0 -> s4 [0, 65535] { R11820 += 1, R11757 += 1, R11758 += 1 };
  s1 -> s1 [0, 65535] { R11820 += 1, R11758 += 1, R11735 += 1, R11736 += 1, R11737 += 1 };
  s1 -> s2 [0, 65535] { R11820 += 1, R11758 += 1, R11735 += 1, R11737 += 1, R11738 += 1 };
  s1 -> s6 [0, 65535] { R11820 += 1 };
  s1 -> s3 [0, 65535] { R11820 += 1, R11758 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R11820 += 1, R11758 += 1, R11735 += 1, R11737 += 1, R11738 += 1 };
  s2 -> s6 [0, 65535] { R11820 += 1 };
  s2 -> s3 [0, 65535] { R11820 += 1, R11758 += 1 };
  s2 -> s7 [0, 65535] { R11820 += 1, R11758 += 1, R11735 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R11820 += 1 };
  s3 -> s3 [0, 65535] { R11820 += 1, R11758 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R11820 += 1, R11758 += 1, R11735 += 1, R11736 += 1, R11737 += 1 };
  s4 -> s2 [0, 65535] { R11820 += 1, R11758 += 1, R11735 += 1, R11737 += 1, R11738 += 1 };
  s4 -> s3 [0, 65535] { R11820 += 1, R11758 += 1 };
  s4 -> s4 [0, 65535] { R11820 += 1, R11757 += 1, R11758 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11820 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R11820 += 1 };
  s7 -> s3 [0, 65535] { R11820 += 1, R11758 += 1 };
  s7 -> s7 [0, 65535] { R11820 += 1, R11758 += 1, R11735 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R11821 += 1, R11822 += 1 };
  s0 -> s1 [0, 65535] { R11822 += 1, R11778 += 1, R21 += 1 };
  s0 -> s2 [0, 65535] { R11822 += 1, R11777 += 1, R11778 += 1 };
  s1 -> s1 [0, 65535] { R11822 += 1, R11778 += 1, R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R11822 += 1 };
  s2 -> s1 [0, 65535] { R11822 += 1, R11778 += 1, R21 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R11822 += 1, R11777 += 1, R11778 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R11822 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R11824 += 1, R11780 += 1 };
  s0 -> s0 [0, 65535] { R11823 += 1, R11824 += 1 };
  s0 -> s2 [0, 65535] { R11824 += 1, R11779 += 1, R11780 += 1 };
  s0 -> s3 [70, 70] { R11824 += 1, R11780 += 1 };
  s0 -> s4 [70, 70] { R11824 += 1, R11780 += 1 };
  s0 -> s5 [75, 75] { R11824 += 1, R11780 += 1 };
  s0 -> s1 [76, 65535] { R11824 += 1, R11780 += 1 };
  s1 -> s1 [0, 69] { R11824 += 1, R11780 += 1 };
  s1 -> s3 [70, 70] { R11824 += 1, R11780 += 1 };
  s1 -> s4 [70, 70] { R11824 += 1, R11780 += 1 };
  s1 -> s5 [75, 75] { R11824 += 1, R11780 += 1 };
  s1 -> s1 [76, 65535] { R11824 += 1, R11780 += 1 };
  s2 -> s1 [0, 69] { R11824 += 1, R11780 += 1 };
  s2 -> s2 [0, 65535] { R11824 += 1, R11779 += 1, R11780 += 1 };
  s2 -> s3 [70, 70] { R11824 += 1, R11780 += 1 };
  s2 -> s4 [70, 70] { R11824 += 1, R11780 += 1 };
  s2 -> s5 [75, 75] { R11824 += 1, R11780 += 1 };
  s2 -> s1 [76, 65535] { R11824 += 1, R11780 += 1 };
  s3 -> s3 [0, 70] { R11824 += 1, R11780 += 1 };
  s3 -> s8 [75, 75] { R11824 += 1, R11780 += 1 };
  s3 -> s3 [76, 65535] { R11824 += 1, R11780 += 1 };
  s5 -> s5 [0, 69] { R11824 += 1, R11780 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R11824 += 1 };
  s5 -> s7 [70, 70] { R11824 += 1, R11780 += 1 };
  s5 -> s8 [70, 70] { R11824 += 1, R11780 += 1 };
  s5 -> s5 [75, 65535] { R11824 += 1, R11780 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R11824 += 1 };
  s8 -> s8 [0, 70] { R11824 += 1, R11780 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R11824 += 1 };
  s8 -> s8 [75, 65535] { R11824 += 1, R11780 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R11826 += 1, R11782 += 1, R83 += 1 };
  s0 -> s2 [0, 65535] { R11826 += 1, R11781 += 1, R11782 += 1 };
  s0 -> s0 [0, 65535] { R11825 += 1, R11826 += 1 };
  s0 -> s3 [70, 70] { R11826 += 1, R11782 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R11826 += 1, R11782 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R11826 += 1, R11782 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R11826 += 1, R11782 += 1, R83 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R11826 += 1 };
  s1 -> s3 [70, 70] { R11826 += 1, R11782 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R11826 += 1, R11782 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R11826 += 1, R11782 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R11826 += 1, R11782 += 1, R83 += 1 };
  s2 -> s2 [0, 65535] { R11826 += 1, R11781 += 1, R11782 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R11826 += 1, R11782 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R11826 += 1, R11782 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R11826 += 1, R11782 += 1, R83 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R11826 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R11826 += 1 };
  s4 -> s4 [0, 65535] { R11826 += 1, R11782 += 1, R83 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11826 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R11828 += 1, R11784 += 1, R85 += 1 };
  s0 -> s2 [0, 65535] { R11828 += 1, R11783 += 1, R11784 += 1 };
  s0 -> s0 [0, 65535] { R11827 += 1, R11828 += 1 };
  s0 -> s3 [70, 70] { R11828 += 1, R11784 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R11828 += 1, R11784 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R11828 += 1, R11784 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R11828 += 1, R11784 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R11828 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R11828 += 1, R11784 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R11828 += 1, R11784 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R11828 += 1, R11784 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R11828 += 1, R11784 += 1, R85 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R11828 += 1, R11783 += 1, R11784 += 1 };
  s2 -> s3 [70, 70] { R11828 += 1, R11784 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R11828 += 1, R11784 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R11828 += 1, R11784 += 1, R85 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R11828 += 1, R11784 += 1, R85 += 1 };
  s3 -> s6 [0, 65535] { R11828 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R11828 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11828 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R11830 += 1, R11786 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R11830 += 1, R11786 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [0, 65535] { R11830 += 1, R11785 += 1, R11786 += 1 };
  s0 -> s0 [0, 65535] { R11829 += 1, R11830 += 1 };
  s0 -> s4 [70, 70] { R11830 += 1, R11786 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R11830 += 1, R11786 += 1, R87 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R11830 += 1, R11786 += 1, R87 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R11830 += 1, R11786 += 1, R88 += 1 };
  s0 -> s1 [71, 74] { R11830 += 1, R11786 += 1, R88 += 1 };
  s0 -> s2 [71, 65535] { R11830 += 1, R11786 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R11830 += 1, R11786 += 1, R88 += 1 };
  s0 -> s1 [76, 65535] { R11830 += 1, R11786 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R11830 += 1, R11786 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R11830 += 1, R11786 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R11830 += 1, R11786 += 1, R88 += 1 };
  s1 -> s1 [71, 74] { R11830 += 1, R11786 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R11830 += 1, R11786 += 1, R88 += 1 };
  s1 -> s1 [76, 65535] { R11830 += 1, R11786 += 1, R88 += 1 };
  s2 -> s1 [0, 69] { R11830 += 1, R11786 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R11830 += 1, R11786 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R11830 += 1, R11786 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R11830 += 1, R11786 += 1, R87 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R11830 += 1, R11786 += 1, R87 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R11830 += 1, R11786 += 1, R88 += 1 };
  s2 -> s1 [71, 74] { R11830 += 1, R11786 += 1, R88 += 1 };
  s2 -> s2 [71, 65535] { R11830 += 1, R11786 += 1, R87 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R11830 += 1, R11786 += 1, R88 += 1 };
  s2 -> s1 [76, 65535] { R11830 += 1, R11786 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R11830 += 1, R11786 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R11830 += 1, R11786 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R11830 += 1, R11785 += 1, R11786 += 1 };
  s3 -> s4 [70, 70] { R11830 += 1, R11786 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R11830 += 1, R11786 += 1, R87 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R11830 += 1, R11786 += 1, R87 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R11830 += 1, R11786 += 1, R88 += 1 };
  s3 -> s1 [71, 74] { R11830 += 1, R11786 += 1, R88 += 1 };
  s3 -> s2 [71, 65535] { R11830 += 1, R11786 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R11830 += 1, R11786 += 1, R88 += 1 };
  s3 -> s1 [76, 65535] { R11830 += 1, R11786 += 1, R88 += 1 };
  s4 -> s4 [0, 74] { R11830 += 1, R11786 += 1, R88 += 1 };
  s4 -> s10 [75, 75] { R11830 += 1, R11786 += 1, R88 += 1 };
  s4 -> s4 [76, 65535] { R11830 += 1, R11786 += 1, R88 += 1 };
  s5 -> s4 [0, 74] { R11830 += 1, R11786 += 1, R88 += 1 };
  s5 -> s5 [0, 65535] { R11830 += 1, R11786 += 1, R87 += 1, R88 += 1 };
  s5 -> s10 [75, 75] { R11830 += 1, R11786 += 1, R88 += 1 };
  s5 -> s4 [76, 65535] { R11830 += 1, R11786 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R11830 += 1, R11786 += 1, R88 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R11830 += 1 };
  s8 -> s10 [70, 70] { R11830 += 1, R11786 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R11830 += 1, R11786 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R11830 += 1, R11786 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s12 [0, 65535] { R11830 += 1 };
  s10 -> s10 [0, 65535] { R11830 += 1, R11786 += 1, R88 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R11830 += 1 };
  s12 -> s12 [0, 65535] { R11830 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R11832 += 1, R11788 += 1, R91 += 1, R92 += 1 };
  s0 -> s2 [0, 65535] { R11832 += 1, R11787 += 1, R11788 += 1 };
  s0 -> s0 [0, 65535] { R11831 += 1, R11832 += 1 };
  s0 -> s3 [70, 70] { R11832 += 1, R11788 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R11832 += 1, R11788 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R11832 += 1, R11788 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R11832 += 1, R11788 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 65535] { R11832 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R11832 += 1, R11788 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R11832 += 1, R11788 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R11832 += 1, R11788 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R11832 += 1, R11788 += 1, R91 += 1, R92 += 1 };
  s2 -> s2 [0, 65535] { R11832 += 1, R11787 += 1, R11788 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R11832 += 1, R11788 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R11832 += 1, R11788 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R11832 += 1, R11788 += 1, R91 += 1, R92 += 1 };
  s3 -> s3 [0, 65535] { R11832 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R11832 += 1 };
  s4 -> s4 [0, 65535] { R11832 += 1, R11788 += 1, R91 += 1, R92 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R11832 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R11834 += 1, R11790 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s2 [0, 69] { R11834 += 1, R11790 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s0 [0, 65535] { R11833 += 1, R11834 += 1 };
  s0 -> s3 [0, 65535] { R11834 += 1, R11789 += 1, R11790 += 1 };
  s0 -> s4 [70, 70] { R11834 += 1, R11790 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s5 [70, 70] { R11834 += 1, R11790 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s6 [70, 70] { R11834 += 1, R11790 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s7 [70, 70] { R11834 += 1, R11790 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s1 [71, 65535] { R11834 += 1, R11790 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s2 [71, 65535] { R11834 += 1, R11790 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s1 [0, 69] { R11834 += 1, R11790 += 1, R10159 += 1, R10160 += 1 };
  s1 -> s2 [0, 69] { R11834 += 1, R11790 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s4 [70, 70] { R11834 += 1, R11790 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s5 [70, 70] { R11834 += 1, R11790 += 1, R10159 += 1, R10160 += 1 };
  s1 -> s6 [70, 70] { R11834 += 1, R11790 += 1, R10159 += 1, R10160 += 1 };
  s1 -> s7 [70, 70] { R11834 += 1, R11790 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s1 [71, 65535] { R11834 += 1, R11790 += 1, R10159 += 1, R10160 += 1 };
  s1 -> s2 [71, 65535] { R11834 += 1, R11790 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s11 [0, 69] { R11834 += 1, R11790 += 1 };
  s2 -> s2 [0, 69] { R11834 += 1, R11790 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s12 [70, 70] { R11834 += 1, R11790 += 1 };
  s2 -> s4 [70, 70] { R11834 += 1, R11790 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s8 [70, 70] { R11834 += 1, R11790 += 1 };
  s2 -> s7 [70, 70] { R11834 += 1, R11790 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s11 [71, 65535] { R11834 += 1, R11790 += 1 };
  s2 -> s2 [71, 65535] { R11834 += 1, R11790 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s1 [0, 69] { R11834 += 1, R11790 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s2 [0, 69] { R11834 += 1, R11790 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s3 [0, 65535] { R11834 += 1, R11789 += 1, R11790 += 1 };
  s3 -> s4 [70, 70] { R11834 += 1, R11790 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s5 [70, 70] { R11834 += 1, R11790 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s6 [70, 70] { R11834 += 1, R11790 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s7 [70, 70] { R11834 += 1, R11790 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s1 [71, 65535] { R11834 += 1, R11790 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s2 [71, 65535] { R11834 += 1, R11790 += 1, R10160 += 1, R10161 += 1 };
  s5 -> s5 [0, 65535] { R11834 += 1, R11790 += 1, R10159 += 1, R10160 += 1 };
  s5 -> s7 [0, 65535] { R11834 += 1, R11790 += 1, R10160 += 1, R10161 += 1 };
  s7 -> s8 [0, 65535] { R11834 += 1, R11790 += 1 };
  s7 -> s7 [0, 65535] { R11834 += 1, R11790 += 1, R10160 += 1, R10161 += 1 };
  s8 -> s9 [0, 65535] { R11834 += 1 };
  s8 -> s8 [0, 65535] { R11834 += 1, R11790 += 1 };
  s8 -> s10 [0, 65535];
  s9 -> s9 [0, 65535] { R11834 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  s11 -> s11 [0, 69] { R11834 += 1, R11790 += 1 };
  s11 -> s11 [0, 65535] { R11834 += 1 };
  s11 -> s10 [0, 65535];
  s11 -> s12 [70, 70] { R11834 += 1, R11790 += 1 };
  s11 -> s8 [70, 70] { R11834 += 1, R11790 += 1 };
  s11 -> s11 [71, 65535] { R11834 += 1, R11790 += 1 };
  s12 -> s12 [0, 65535] { R11834 += 1 };
  s12 -> s10 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R11836 += 1, R11792 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s0 -> s2 [0, 69] { R11836 += 1, R11792 += 1, R11281 += 1, R11282 += 1 };
  s0 -> s3 [0, 69] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s0 -> s4 [0, 65535] { R11836 += 1, R11791 += 1, R11792 += 1 };
  s0 -> s0 [0, 65535] { R11835 += 1, R11836 += 1 };
  s0 -> s5 [70, 70] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s0 -> s6 [70, 70] { R11836 += 1, R11792 += 1, R11281 += 1, R11282 += 1 };
  s0 -> s7 [70, 70] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s0 -> s8 [70, 70] { R11836 += 1, R11792 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s0 -> s9 [70, 70] { R11836 += 1, R11792 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s0 -> s10 [70, 70] { R11836 += 1, R11792 += 1, R11281 += 1, R11282 += 1 };
  s0 -> s3 [71, 74] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s0 -> s1 [71, 65535] { R11836 += 1, R11792 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s0 -> s2 [71, 65535] { R11836 += 1, R11792 += 1, R11281 += 1, R11282 += 1 };
  s0 -> s11 [75, 75] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s0 -> s3 [76, 65535] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s1 -> s1 [0, 69] { R11836 += 1, R11792 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s1 -> s3 [0, 69] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s1 -> s5 [70, 70] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s1 -> s7 [70, 70] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s1 -> s8 [70, 70] { R11836 += 1, R11792 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s1 -> s9 [70, 70] { R11836 += 1, R11792 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s1 -> s3 [71, 74] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s1 -> s1 [71, 65535] { R11836 += 1, R11792 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s1 -> s11 [75, 75] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s1 -> s3 [76, 65535] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s2 -> s1 [0, 69] { R11836 += 1, R11792 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s2 -> s2 [0, 69] { R11836 += 1, R11792 += 1, R11281 += 1, R11282 += 1 };
  s2 -> s3 [0, 69] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s2 -> s5 [70, 70] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s2 -> s6 [70, 70] { R11836 += 1, R11792 += 1, R11281 += 1, R11282 += 1 };
  s2 -> s7 [70, 70] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s2 -> s8 [70, 70] { R11836 += 1, R11792 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s2 -> s9 [70, 70] { R11836 += 1, R11792 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s2 -> s10 [70, 70] { R11836 += 1, R11792 += 1, R11281 += 1, R11282 += 1 };
  s2 -> s3 [71, 74] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s2 -> s1 [71, 65535] { R11836 += 1, R11792 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s2 -> s2 [71, 65535] { R11836 += 1, R11792 += 1, R11281 += 1, R11282 += 1 };
  s2 -> s11 [75, 75] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s2 -> s3 [76, 65535] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s3 -> s3 [0, 69] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s3 -> s5 [70, 70] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s3 -> s7 [70, 70] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s3 -> s3 [71, 74] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s3 -> s11 [75, 75] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s3 -> s3 [76, 65535] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s4 -> s1 [0, 69] { R11836 += 1, R11792 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s4 -> s2 [0, 69] { R11836 += 1, R11792 += 1, R11281 += 1, R11282 += 1 };
  s4 -> s3 [0, 69] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s4 -> s4 [0, 65535] { R11836 += 1, R11791 += 1, R11792 += 1 };
  s4 -> s5 [70, 70] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s4 -> s6 [70, 70] { R11836 += 1, R11792 += 1, R11281 += 1, R11282 += 1 };
  s4 -> s7 [70, 70] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s4 -> s8 [70, 70] { R11836 += 1, R11792 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s4 -> s9 [70, 70] { R11836 += 1, R11792 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s4 -> s10 [70, 70] { R11836 += 1, R11792 += 1, R11281 += 1, R11282 += 1 };
  s4 -> s3 [71, 74] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s4 -> s1 [71, 65535] { R11836 += 1, R11792 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s4 -> s2 [71, 65535] { R11836 += 1, R11792 += 1, R11281 += 1, R11282 += 1 };
  s4 -> s11 [75, 75] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s4 -> s3 [76, 65535] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s5 -> s5 [0, 74] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s5 -> s15 [75, 75] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s5 -> s5 [76, 65535] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s8 -> s5 [0, 74] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s8 -> s8 [0, 65535] { R11836 += 1, R11792 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s8 -> s15 [75, 75] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s8 -> s5 [76, 65535] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s10 -> s5 [0, 74] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s10 -> s8 [0, 65535] { R11836 += 1, R11792 += 1, R11282 += 1, R11283 += 1, R11284 += 1 };
  s10 -> s10 [0, 65535] { R11836 += 1, R11792 += 1, R11281 += 1, R11282 += 1 };
  s10 -> s15 [75, 75] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s10 -> s5 [76, 65535] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s11 -> s12 [0, 69] { R11836 += 1, R11792 += 1 };
  s11 -> s13 [0, 69] { R11836 += 1, R11792 += 1, R11282 += 1 };
  s11 -> s11 [0, 69] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s11 -> s14 [70, 70] { R11836 += 1, R11792 += 1, R11282 += 1 };
  s11 -> s15 [70, 70] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s11 -> s16 [70, 70] { R11836 += 1, R11792 += 1 };
  s11 -> s17 [70, 70] { R11836 += 1, R11792 += 1, R11282 += 1 };
  s11 -> s18 [70, 70] { R11836 += 1, R11792 += 1 };
  s11 -> s19 [70, 70] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s11 -> s12 [71, 65535] { R11836 += 1, R11792 += 1 };
  s11 -> s13 [71, 65535] { R11836 += 1, R11792 += 1, R11282 += 1 };
  s11 -> s11 [71, 65535] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s12 -> s12 [0, 69] { R11836 += 1, R11792 += 1 };
  s12 -> s12 [0, 65535] { R11836 += 1 };
  s12 -> s21 [0, 65535];
  s12 -> s16 [70, 70] { R11836 += 1, R11792 += 1 };
  s12 -> s18 [70, 70] { R11836 += 1, R11792 += 1 };
  s12 -> s12 [71, 65535] { R11836 += 1, R11792 += 1 };
  s13 -> s12 [0, 69] { R11836 += 1, R11792 += 1 };
  s13 -> s13 [0, 69] { R11836 += 1, R11792 += 1, R11282 += 1 };
  s13 -> s14 [70, 70] { R11836 += 1, R11792 += 1, R11282 += 1 };
  s13 -> s16 [70, 70] { R11836 += 1, R11792 += 1 };
  s13 -> s17 [70, 70] { R11836 += 1, R11792 += 1, R11282 += 1 };
  s13 -> s18 [70, 70] { R11836 += 1, R11792 += 1 };
  s13 -> s12 [71, 65535] { R11836 += 1, R11792 += 1 };
  s13 -> s13 [71, 65535] { R11836 += 1, R11792 += 1, R11282 += 1 };
  s14 -> s14 [0, 65535] { R11836 += 1, R11792 += 1, R11282 += 1 };
  s14 -> s18 [0, 65535] { R11836 += 1, R11792 += 1 };
  s15 -> s14 [0, 65535] { R11836 += 1, R11792 += 1, R11282 += 1 };
  s15 -> s15 [0, 65535] { R11836 += 1, R11792 += 1, R11282 += 1, R11284 += 1 };
  s15 -> s18 [0, 65535] { R11836 += 1, R11792 += 1 };
  s16 -> s21 [0, 65535];
  s16 -> s16 [0, 65535] { R11836 += 1 };
  s18 -> s20 [0, 65535] { R11836 += 1 };
  s18 -> s21 [0, 65535];
  s18 -> s18 [0, 65535] { R11836 += 1, R11792 += 1 };
  s20 -> s20 [0, 65535] { R11836 += 1 };
  s20 -> s21 [0, 65535];
  s21 -> s21 [0, 65535];
  accepting s16, s12, s21, s20, s18;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R11838 += 1, R11794 += 1, R11730 += 1, R11731 += 1, R11732 += 1 };
  s0 -> s2 [0, 69] { R11838 += 1, R11794 += 1, R11729 += 1, R11730 += 1 };
  s0 -> s3 [0, 65535] { R11838 += 1, R11793 += 1, R11794 += 1 };
  s0 -> s0 [0, 65535] { R11837 += 1, R11838 += 1 };
  s0 -> s4 [70, 70] { R11838 += 1, R11794 += 1, R11730 += 1, R11731 += 1, R11732 += 1 };
  s0 -> s5 [70, 70] { R11838 += 1, R11794 += 1, R11730 += 1, R11731 += 1, R11732 += 1 };
  s0 -> s6 [70, 70] { R11838 += 1, R11794 += 1, R11729 += 1, R11730 += 1 };
  s0 -> s7 [70, 70] { R11838 += 1, R11794 += 1, R11729 += 1, R11730 += 1 };
  s0 -> s1 [71, 65535] { R11838 += 1, R11794 += 1, R11730 += 1, R11731 += 1, R11732 += 1 };
  s0 -> s2 [71, 65535] { R11838 += 1, R11794 += 1, R11729 += 1, R11730 += 1 };
  s1 -> s1 [0, 69] { R11838 += 1, R11794 += 1, R11730 += 1, R11731 += 1, R11732 += 1 };
  s1 -> s1 [0, 65535] { R11838 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [70, 70] { R11838 += 1, R11794 += 1, R11730 += 1, R11731 += 1, R11732 += 1 };
  s1 -> s5 [70, 70] { R11838 += 1, R11794 += 1, R11730 += 1, R11731 += 1, R11732 += 1 };
  s1 -> s1 [71, 65535] { R11838 += 1, R11794 += 1, R11730 += 1, R11731 += 1, R11732 += 1 };
  s2 -> s1 [0, 69] { R11838 += 1, R11794 += 1, R11730 += 1, R11731 += 1, R11732 += 1 };
  s2 -> s2 [0, 69] { R11838 += 1, R11794 += 1, R11729 += 1, R11730 += 1 };
  s2 -> s4 [70, 70] { R11838 += 1, R11794 += 1, R11730 += 1, R11731 += 1, R11732 += 1 };
  s2 -> s5 [70, 70] { R11838 += 1, R11794 += 1, R11730 += 1, R11731 += 1, R11732 += 1 };
  s2 -> s6 [70, 70] { R11838 += 1, R11794 += 1, R11729 += 1, R11730 += 1 };
  s2 -> s7 [70, 70] { R11838 += 1, R11794 += 1, R11729 += 1, R11730 += 1 };
  s2 -> s1 [71, 65535] { R11838 += 1, R11794 += 1, R11730 += 1, R11731 += 1, R11732 += 1 };
  s2 -> s2 [71, 65535] { R11838 += 1, R11794 += 1, R11729 += 1, R11730 += 1 };
  s3 -> s1 [0, 69] { R11838 += 1, R11794 += 1, R11730 += 1, R11731 += 1, R11732 += 1 };
  s3 -> s2 [0, 69] { R11838 += 1, R11794 += 1, R11729 += 1, R11730 += 1 };
  s3 -> s3 [0, 65535] { R11838 += 1, R11793 += 1, R11794 += 1 };
  s3 -> s4 [70, 70] { R11838 += 1, R11794 += 1, R11730 += 1, R11731 += 1, R11732 += 1 };
  s3 -> s5 [70, 70] { R11838 += 1, R11794 += 1, R11730 += 1, R11731 += 1, R11732 += 1 };
  s3 -> s6 [70, 70] { R11838 += 1, R11794 += 1, R11729 += 1, R11730 += 1 };
  s3 -> s7 [70, 70] { R11838 += 1, R11794 += 1, R11729 += 1, R11730 += 1 };
  s3 -> s1 [71, 65535] { R11838 += 1, R11794 += 1, R11730 += 1, R11731 += 1, R11732 += 1 };
  s3 -> s2 [71, 65535] { R11838 += 1, R11794 += 1, R11729 += 1, R11730 += 1 };
  s4 -> s4 [0, 65535] { R11838 += 1, R11794 += 1, R11730 += 1, R11731 += 1, R11732 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s9 [0, 65535] { R11838 += 1 };
  s5 -> s5 [0, 65535] { R11838 += 1 };
  s5 -> s8 [0, 65535];
  s7 -> s4 [0, 65535] { R11838 += 1, R11794 += 1, R11730 += 1, R11731 += 1, R11732 += 1 };
  s7 -> s7 [0, 65535] { R11838 += 1, R11794 += 1, R11729 += 1, R11730 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R11838 += 1 };
  accepting s4, s8, s5, s9, s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R11838 && R23 - R11838 = -1 && R24 = R11838 && R25 - R11838 = -1 && R26 = R11838 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R11286 + -1*R11282 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R11286 + -1*R11282 - R66 = 0 && R55 + R96 + R93 + -1*R11288 + -1*R11284 - R68 = 0 && R65 + R11285 + R11281 = 0 && R67 + R11287 + R11283 = 0 && R11779 = 0 && R11780 = 0 && R11785 = 0 && R11786 = 0 && R11789 = 0 && R11790 = 0 && R11791 = 0 && R11792 = 0 && R11793 = 0 && R11794 = 0 && R11795 = 0 && R11796 = R11838 && R11797 = 0 && R11798 = R11838 && R11799 = 0 && R11800 = R11838 && R11801 = 0 && R11802 = R11838 && R11803 = 0 && R11804 = R11838 && R11805 = 0 && R11806 = R11838 && R11807 = 0 && R11808 = R11838 && R11809 = 0 && R11810 = R11838 && R11811 = 0 && R11812 = R11838 && R11813 = 0 && R11814 = R11838 && R11815 = 0 && R11816 = R11838 && R11817 = 0 && R11818 = R11838 && R11819 = 0 && R11820 = R11838 && R11821 = 0 && R11822 = R11838 && R11823 = 0 && R11824 = R11838 && R11825 = 0 && R11826 = R11838 && R11827 = 0 && R11828 = R11838 && R11829 = 0 && R11830 = R11838 && R11831 = 0 && R11832 = R11838 && R11833 = 0 && R11834 = R11838 && R11835 = 0 && R11836 = R11838 && R11837 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R10164 + R10161 < 1 && -1*R11286 + -1*R11282 - R66 < 1 && -1*R11288 + -1*R11284 - R68 < 1 && 0 < R11838 && (R2 != 0 || R20 = 0 || (R11739 = 0 && R11740 = 0)) && (R2 != 0 || R20 = 0 || (R11741 = 0 && R11742 = 0)) && (R2 != 0 || R20 = 0 || (R11743 = 0 && R11744 = 0)) && (R2 != 0 || R20 = 0 || (R11745 = 0 && R11746 = 0)) && (R2 != 0 || R20 = 0 || (R11747 = 0 && R11748 = 0)) && (R2 != 0 || R20 = 0 || (R11749 = 0 && R11750 = 0)) && (R2 != 0 || R20 = 0 || (R11751 = 0 && R11752 = 0)) && (R2 != 0 || R20 = 0 || (R11753 = 0 && R11754 = 0)) && (R2 != 0 || R20 = 0 || (R11755 = 0 && R11756 = 0)) && (R2 != 0 || R20 = 0 || (R11757 = 0 && R11758 = 0)) && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R11286 + -1*R11282 - R66 = 0 || R66 + R11286 + R11282 < 1) && (R59 + R10162 + R10159 != 0 || R60 + R10163 + R10160 + -1*R11286 + -1*R11282 - R66 = 0 || R66 + R11286 + R11282 < 1) && (R66 + R11286 + R11282 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R11288 + R11284 < 1) && (R53 + R94 + R91 = 0 || R68 + R11288 + R11284 < 1))) && (R66 + R11286 + R11282 != 0 || ((R59 + R10162 + R10159 != 0 || R60 + R10163 + R10160 = 0 || R68 + R11288 + R11284 < 1) && (R59 + R10162 + R10159 = 0 || R68 + R11288 + R11284 < 1))) && (R66 + R11286 + R11282 != 0 || ((R73 + R11734 + R11729 != 0 || R74 + R11735 + R11730 = 0 || R68 + R11288 + R11284 < 1) && (R73 + R11734 + R11729 = 0 || R68 + R11288 + R11284 < 1))) && (R68 + R11288 + R11284 != 0 || R77 + R11738 + R11733 = 0 || (R75 + R11736 + R11731 = 0 && R76 + R11737 + R11732 = 0)) && (R73 + R11734 + R11729 != 0 || R66 + R11286 + R11282 + -1*R11735 + -1*R11730 - R74 = 0 || R66 + R11286 + R11282 < 1) && (R75 + R11736 + R11731 != 0 || R68 + R11288 + R11284 + -1*R11737 + -1*R11732 - R76 = 0 || R68 + R11288 + R11284 < 1) && (R11739 != 0 || R2 = R11740 || R2 < 1) && (R11741 != 0 || R2 = R11742 || R2 < 1) && (R11743 != 0 || R2 = R11744 || R2 < 1) && (R11745 != 0 || R2 = R11746 || R2 < 1) && (R11747 != 0 || R2 = R11748 || R2 < 1) && (R11749 != 0 || R2 = R11750 || R2 < 1) && (R11751 != 0 || R2 = R11752 || R2 < 1) && (R11753 != 0 || R2 = R11754 || R2 < 1) && (R11755 != 0 || R2 = R11756 || R2 < 1) && (R11757 != 0 || R2 = R11758 || R2 < 1) && (R21 = 0 || (R11777 = 0 && R11778 = 0)) && (R21 = 0 || (R11781 = 0 && R11782 = 0)) && (R21 = 0 || (R11783 = 0 && R11784 = 0)) && (R21 = 0 || (R11787 = 0 && R11788 = 0)) && (R22 = 0 || (R11759 = 0 && R11760 = 0)) && (R22 = 0 || (R11761 = 0 && R11762 = 0)) && (R22 = 0 || (R11763 = 0 && R11764 = 0)) && (R22 = 0 || (R11765 = 0 && R11766 = 0)) && (R22 = 0 || (R11767 = 0 && R11768 = 0)) && (R22 = 0 || (R11769 = 0 && R11770 = 0)) && (R22 = 0 || (R11771 = 0 && R11772 = 0)) && (R22 = 0 || (R11773 = 0 && R11774 = 0)) && (R22 = 0 || (R11775 = 0 && R11776 = 0)) && (R53 + R94 + R91 = 0 || R66 + R11286 + R11282 < 1) && (R59 + R10162 + R10159 = 0 || R66 + R11286 + R11282 < 1) && (R73 + R11734 + R11729 = 0 || R66 + R11286 + R11282 < 1) && (R75 + R11736 + R11731 = 0 || R68 + R11288 + R11284 < 1) && (R11739 = 0 || R2 < 1) && (R11741 = 0 || R2 < 1) && (R11743 = 0 || R2 < 1) && (R11745 = 0 || R2 < 1) && (R11747 = 0 || R2 < 1) && (R11749 = 0 || R2 < 1) && (R11751 = 0 || R2 < 1) && (R11753 = 0 || R2 < 1) && (R11755 = 0 || R2 < 1) && (R11757 = 0 || R2 < 1);
// End of Parikh automata intersection problem
