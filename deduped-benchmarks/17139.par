// Parikh automata intersection problem, generated by OSTRICH+
counter int R10159, R10160, R10161, R10162, R10163, R10164, R11839, R11840, R11841, R11842, R11843, R11844, R11845, R11846, R11847, R11848, R11849, R11850, R11851, R11852, R11853, R11854, R11855, R11856, R11857, R11858, R11859, R11860, R11861, R11862, R11863, R11864, R11865, R11866, R11867, R11868, R11869, R11870, R11871, R11872, R11873, R11874, R11875, R11876, R11877, R11878, R11879, R11880, R11881, R11882, R11883, R11884, R11885, R11886, R11887, R11888, R11889, R11890, R11891, R11892, R11893, R11894, R11895, R11896, R11897, R11898, R11899, R11900, R11901, R11902, R11903, R11904, R11905, R11906, R11907, R11908, R11909, R11910, R11911, R11912, R11913, R11914, R11915, R11916, R11917, R11918, R11919, R11920, R11921, R11922, R11923, R11924, R11925, R11926, R11927, R11928, R11929, R11930, R11931, R11932, R11933, R11934, R11935, R11936, R11937, R11938, R11939, R11940, R11941, R11942, R11943, R11944, R11945, R11946, R11947, R11948, R11949, R11950, R11951, R11952, R11953, R11954, R11955, R11956, R12, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R4, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R11878 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R11877 += 1, R11878 += 1 };
  s1 -> s1 [0, 65535] { R11878 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R11880 += 1 };
  s0 -> s0 [0, 65535] { R11879 += 1, R11880 += 1 };
  s0 -> s2 [70, 70] { R11880 += 1 };
  s0 -> s3 [70, 70] { R11880 += 1 };
  s0 -> s1 [76, 65535] { R11880 += 1 };
  s1 -> s1 [0, 69] { R11880 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11880 += 1 };
  s1 -> s3 [70, 70] { R11880 += 1 };
  s1 -> s1 [76, 65535] { R11880 += 1 };
  s2 -> s2 [0, 70] { R11880 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R11880 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R11882 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R11881 += 1, R11882 += 1 };
  s0 -> s2 [70, 70] { R11882 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R11882 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R11882 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R11882 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11882 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R11882 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R11882 += 1, R45 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R11882 += 1, R45 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R11884 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R11883 += 1, R11884 += 1 };
  s0 -> s2 [70, 70] { R11884 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R11884 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R11884 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R11884 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11884 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R11884 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R11884 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R11884 += 1, R47 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R11886 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R11885 += 1, R11886 += 1 };
  s0 -> s2 [70, 70] { R11886 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R11886 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R11886 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R11886 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11886 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R11886 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R11886 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R11886 += 1, R49 += 1, R50 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R11888 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R11887 += 1, R11888 += 1 };
  s0 -> s2 [70, 70] { R11888 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R11888 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R11888 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R11888 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11888 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R11888 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R11888 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R11888 += 1, R53 += 1, R54 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R11890 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R11889 += 1, R11890 += 1 };
  s0 -> s2 [70, 70] { R11890 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R11890 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R11890 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R11890 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11890 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R11890 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R11890 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535] { R11890 += 1, R59 += 1, R60 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R11892 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R11891 += 1, R11892 += 1 };
  s0 -> s2 [70, 70] { R11892 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R11892 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R11892 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R11892 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11892 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R11892 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R11892 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R11892 += 1, R65 += 1, R66 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R11894 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R11893 += 1, R11894 += 1 };
  s0 -> s2 [70, 70] { R11894 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R11894 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R11894 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R11894 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11894 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R11894 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R11894 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R11894 += 1, R73 += 1, R74 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R11914 += 1 };
  s0 -> s0 [0, 65535] { R11913 += 1, R11914 += 1 };
  s0 -> s2 [70, 70] { R11914 += 1 };
  s0 -> s1 [71, 65535] { R11914 += 1 };
  s1 -> s1 [0, 69] { R11914 += 1 };
  s1 -> s2 [70, 70] { R11914 += 1 };
  s1 -> s1 [71, 65535] { R11914 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R11914 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R11916 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R11915 += 1, R11916 += 1 };
  s1 -> s1 [0, 65535] { R11916 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R11918 += 1 };
  s0 -> s0 [0, 65535] { R11917 += 1, R11918 += 1 };
  s0 -> s2 [0, 65535] { R11918 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R11918 += 1 };
  s0 -> s1 [71, 65535] { R11918 += 1 };
  s1 -> s1 [0, 69] { R11918 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R11918 += 1 };
  s1 -> s1 [71, 65535] { R11918 += 1 };
  s2 -> s1 [0, 69] { R11918 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R11918 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R11918 += 1 };
  s2 -> s1 [71, 65535] { R11918 += 1 };
  s3 -> s3 [0, 65535] { R11918 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R11920 += 1, R11858 += 1 };
  s0 -> s2 [0, 65535] { R11920 += 1, R11857 += 1, R11858 += 1 };
  s0 -> s0 [0, 65535] { R11919 += 1, R11920 += 1 };
  s0 -> s1 [71, 65535] { R11920 += 1, R11858 += 1 };
  s1 -> s1 [0, 69] { R11920 += 1, R11858 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R11920 += 1 };
  s1 -> s1 [71, 65535] { R11920 += 1, R11858 += 1 };
  s2 -> s1 [0, 69] { R11920 += 1, R11858 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R11920 += 1, R11857 += 1, R11858 += 1 };
  s2 -> s1 [71, 65535] { R11920 += 1, R11858 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R11922 += 1, R11860 += 1, R20 += 1 };
  s0 -> s0 [0, 65535] { R11921 += 1, R11922 += 1 };
  s0 -> s2 [0, 65535] { R11922 += 1, R11859 += 1, R11860 += 1 };
  s1 -> s1 [0, 65535] { R11922 += 1, R11860 += 1, R20 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R11922 += 1 };
  s2 -> s1 [0, 65535] { R11922 += 1, R11860 += 1, R20 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R11922 += 1, R11859 += 1, R11860 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R11922 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R11924 += 1, R11862 += 1 };
  s0 -> s2 [0, 65535] { R11924 += 1, R11861 += 1, R11862 += 1 };
  s0 -> s0 [0, 65535] { R11923 += 1, R11924 += 1 };
  s0 -> s1 [75, 65535] { R11924 += 1, R11862 += 1 };
  s1 -> s1 [0, 70] { R11924 += 1, R11862 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R11924 += 1 };
  s1 -> s1 [75, 65535] { R11924 += 1, R11862 += 1 };
  s2 -> s1 [0, 70] { R11924 += 1, R11862 += 1 };
  s2 -> s2 [0, 65535] { R11924 += 1, R11861 += 1, R11862 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R11924 += 1, R11862 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R11926 += 1, R11864 += 1, R84 += 1 };
  s0 -> s2 [0, 65535] { R11926 += 1, R11863 += 1, R11864 += 1 };
  s0 -> s0 [0, 65535] { R11925 += 1, R11926 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R11926 += 1, R11864 += 1, R84 += 1 };
  s1 -> s4 [0, 65535] { R11926 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R11926 += 1, R11864 += 1, R84 += 1 };
  s2 -> s2 [0, 65535] { R11926 += 1, R11863 += 1, R11864 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R11926 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R11928 += 1, R11866 += 1 };
  s0 -> s2 [0, 65535] { R11928 += 1, R11865 += 1, R11866 += 1 };
  s0 -> s3 [0, 65535] { R11928 += 1, R11866 += 1, R86 += 1 };
  s0 -> s0 [0, 65535] { R11927 += 1, R11928 += 1 };
  s0 -> s1 [76, 65535] { R11928 += 1, R11866 += 1 };
  s1 -> s1 [0, 74] { R11928 += 1, R11866 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R11928 += 1 };
  s1 -> s1 [76, 65535] { R11928 += 1, R11866 += 1 };
  s2 -> s1 [0, 74] { R11928 += 1, R11866 += 1 };
  s2 -> s2 [0, 65535] { R11928 += 1, R11865 += 1, R11866 += 1 };
  s2 -> s3 [0, 65535] { R11928 += 1, R11866 += 1, R86 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [76, 65535] { R11928 += 1, R11866 += 1 };
  s3 -> s1 [0, 74] { R11928 += 1, R11866 += 1 };
  s3 -> s3 [0, 65535] { R11928 += 1, R11866 += 1, R86 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R11928 += 1 };
  s3 -> s1 [76, 65535] { R11928 += 1, R11866 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R11928 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R11930 += 1, R11868 += 1, R90 += 1 };
  s0 -> s2 [0, 65535] { R11930 += 1, R11867 += 1, R11868 += 1 };
  s0 -> s3 [0, 65535] { R11930 += 1, R11868 += 1 };
  s0 -> s0 [0, 65535] { R11929 += 1, R11930 += 1 };
  s1 -> s1 [0, 65535] { R11930 += 1, R11868 += 1, R90 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R11930 += 1 };
  s1 -> s3 [0, 65535] { R11930 += 1, R11868 += 1 };
  s2 -> s1 [0, 65535] { R11930 += 1, R11868 += 1, R90 += 1 };
  s2 -> s2 [0, 65535] { R11930 += 1, R11867 += 1, R11868 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R11930 += 1, R11868 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R11930 += 1 };
  s3 -> s3 [0, 65535] { R11930 += 1, R11868 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R11930 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R11931 += 1, R11932 += 1 };
  s0 -> s1 [0, 65535] { R11932 += 1, R11870 += 1, R94 += 1, R95 += 1 };
  s0 -> s2 [0, 65535] { R11932 += 1, R11870 += 1, R95 += 1, R96 += 1 };
  s0 -> s3 [0, 65535] { R11932 += 1, R11869 += 1, R11870 += 1 };
  s1 -> s1 [0, 65535] { R11932 += 1, R11870 += 1, R94 += 1, R95 += 1 };
  s1 -> s5 [0, 65535] { R11932 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R11932 += 1, R11870 += 1, R95 += 1, R96 += 1 };
  s2 -> s5 [0, 65535] { R11932 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R11932 += 1, R11870 += 1, R95 += 1, R96 += 1 };
  s2 -> s6 [0, 65535] { R11932 += 1, R11870 += 1 };
  s3 -> s1 [0, 65535] { R11932 += 1, R11870 += 1, R94 += 1, R95 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R11932 += 1, R11870 += 1, R95 += 1, R96 += 1 };
  s3 -> s3 [0, 65535] { R11932 += 1, R11869 += 1, R11870 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R11932 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R11932 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R11932 += 1, R11870 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 65535] { R11934 += 1, R11872 += 1 };
  s0 -> s2 [0, 65535] { R11934 += 1, R11871 += 1, R11872 += 1 };
  s0 -> s0 [0, 65535] { R11933 += 1, R11934 += 1 };
  s1 -> s1 [0, 65535] { R11934 += 1, R11872 += 1 };
  s1 -> s4 [0, 65535] { R11934 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R11934 += 1, R11872 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R11934 += 1, R11871 += 1, R11872 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R11934 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 74] { R11936 += 1, R11874 += 1, R11844 += 1, R11846 += 1 };
  s0 -> s2 [0, 65535] { R11936 += 1, R11874 += 1, R11843 += 1, R11844 += 1 };
  s0 -> s0 [0, 65535] { R11935 += 1, R11936 += 1 };
  s0 -> s3 [0, 65535] { R11936 += 1, R11873 += 1, R11874 += 1 };
  s0 -> s4 [0, 65535] { R11936 += 1, R11874 += 1, R11844 += 1, R11845 += 1, R11846 += 1 };
  s0 -> s5 [75, 75] { R11936 += 1, R11874 += 1, R11844 += 1, R11846 += 1 };
  s0 -> s1 [76, 65535] { R11936 += 1, R11874 += 1, R11844 += 1, R11846 += 1 };
  s1 -> s1 [0, 74] { R11936 += 1, R11874 += 1, R11844 += 1, R11846 += 1 };
  s1 -> s5 [75, 75] { R11936 += 1, R11874 += 1, R11844 += 1, R11846 += 1 };
  s1 -> s1 [76, 65535] { R11936 += 1, R11874 += 1, R11844 += 1, R11846 += 1 };
  s2 -> s1 [0, 74] { R11936 += 1, R11874 += 1, R11844 += 1, R11846 += 1 };
  s2 -> s2 [0, 65535] { R11936 += 1, R11874 += 1, R11843 += 1, R11844 += 1 };
  s2 -> s4 [0, 65535] { R11936 += 1, R11874 += 1, R11844 += 1, R11845 += 1, R11846 += 1 };
  s2 -> s5 [75, 75] { R11936 += 1, R11874 += 1, R11844 += 1, R11846 += 1 };
  s2 -> s1 [76, 65535] { R11936 += 1, R11874 += 1, R11844 += 1, R11846 += 1 };
  s3 -> s1 [0, 74] { R11936 += 1, R11874 += 1, R11844 += 1, R11846 += 1 };
  s3 -> s2 [0, 65535] { R11936 += 1, R11874 += 1, R11843 += 1, R11844 += 1 };
  s3 -> s3 [0, 65535] { R11936 += 1, R11873 += 1, R11874 += 1 };
  s3 -> s4 [0, 65535] { R11936 += 1, R11874 += 1, R11844 += 1, R11845 += 1, R11846 += 1 };
  s3 -> s5 [75, 75] { R11936 += 1, R11874 += 1, R11844 += 1, R11846 += 1 };
  s3 -> s1 [76, 65535] { R11936 += 1, R11874 += 1, R11844 += 1, R11846 += 1 };
  s4 -> s1 [0, 74] { R11936 += 1, R11874 += 1, R11844 += 1, R11846 += 1 };
  s4 -> s4 [0, 65535] { R11936 += 1, R11874 += 1, R11844 += 1, R11845 += 1, R11846 += 1 };
  s4 -> s5 [75, 75] { R11936 += 1, R11874 += 1, R11844 += 1, R11846 += 1 };
  s4 -> s1 [76, 65535] { R11936 += 1, R11874 += 1, R11844 += 1, R11846 += 1 };
  s5 -> s6 [0, 65535] { R11936 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R11936 += 1, R11874 += 1 };
  s5 -> s5 [0, 65535] { R11936 += 1, R11874 += 1, R11844 += 1, R11846 += 1 };
  s5 -> s9 [0, 65535] { R11936 += 1, R11874 += 1, R11844 += 1 };
  s6 -> s6 [0, 65535] { R11936 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R11936 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R11936 += 1, R11874 += 1 };
  s9 -> s6 [0, 65535] { R11936 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s8 [0, 65535] { R11936 += 1, R11874 += 1 };
  s9 -> s9 [0, 65535] { R11936 += 1, R11874 += 1, R11844 += 1 };
  accepting s8, s5, s9, s6, s7;
};
automaton value2_29 {
  init s0;
  s0 -> s0 [0, 65535] { R11937 += 1, R11938 += 1 };
  s0 -> s1 [0, 65535] { R11938 += 1, R11875 += 1, R11876 += 1 };
  s0 -> s2 [0, 65535] { R11938 += 1, R11876 += 1 };
  s0 -> s3 [0, 65535] { R11938 += 1, R11876 += 1, R11853 += 1 };
  s1 -> s1 [0, 65535] { R11938 += 1, R11875 += 1, R11876 += 1 };
  s1 -> s2 [0, 65535] { R11938 += 1, R11876 += 1 };
  s1 -> s3 [0, 65535] { R11938 += 1, R11876 += 1, R11853 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s4 [0, 65535] { R11938 += 1 };
  s2 -> s2 [0, 65535] { R11938 += 1, R11876 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R11938 += 1 };
  s3 -> s2 [0, 65535] { R11938 += 1, R11876 += 1 };
  s3 -> s3 [0, 65535] { R11938 += 1, R11876 += 1, R11853 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R11938 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R11940 += 1, R11896 += 1, R21 += 1 };
  s0 -> s2 [0, 65535] { R11940 += 1, R11895 += 1, R11896 += 1 };
  s0 -> s0 [0, 65535] { R11939 += 1, R11940 += 1 };
  s1 -> s1 [0, 65535] { R11940 += 1, R11896 += 1, R21 += 1 };
  s1 -> s4 [0, 65535] { R11940 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R11940 += 1, R11896 += 1, R21 += 1 };
  s2 -> s2 [0, 65535] { R11940 += 1, R11895 += 1, R11896 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R11940 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R11942 += 1, R11898 += 1 };
  s0 -> s0 [0, 65535] { R11941 += 1, R11942 += 1 };
  s0 -> s2 [0, 65535] { R11942 += 1, R11897 += 1, R11898 += 1 };
  s0 -> s3 [70, 70] { R11942 += 1, R11898 += 1 };
  s0 -> s4 [70, 70] { R11942 += 1, R11898 += 1 };
  s0 -> s5 [75, 75] { R11942 += 1, R11898 += 1 };
  s0 -> s1 [76, 65535] { R11942 += 1, R11898 += 1 };
  s1 -> s1 [0, 69] { R11942 += 1, R11898 += 1 };
  s1 -> s3 [70, 70] { R11942 += 1, R11898 += 1 };
  s1 -> s4 [70, 70] { R11942 += 1, R11898 += 1 };
  s1 -> s5 [75, 75] { R11942 += 1, R11898 += 1 };
  s1 -> s1 [76, 65535] { R11942 += 1, R11898 += 1 };
  s2 -> s1 [0, 69] { R11942 += 1, R11898 += 1 };
  s2 -> s2 [0, 65535] { R11942 += 1, R11897 += 1, R11898 += 1 };
  s2 -> s3 [70, 70] { R11942 += 1, R11898 += 1 };
  s2 -> s4 [70, 70] { R11942 += 1, R11898 += 1 };
  s2 -> s5 [75, 75] { R11942 += 1, R11898 += 1 };
  s2 -> s1 [76, 65535] { R11942 += 1, R11898 += 1 };
  s4 -> s4 [0, 70] { R11942 += 1, R11898 += 1 };
  s4 -> s7 [75, 75] { R11942 += 1, R11898 += 1 };
  s4 -> s4 [76, 65535] { R11942 += 1, R11898 += 1 };
  s5 -> s5 [0, 69] { R11942 += 1, R11898 += 1 };
  s5 -> s5 [0, 65535] { R11942 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R11942 += 1, R11898 += 1 };
  s5 -> s8 [70, 70] { R11942 += 1, R11898 += 1 };
  s5 -> s5 [75, 65535] { R11942 += 1, R11898 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R11942 += 1, R11898 += 1 };
  s7 -> s7 [0, 65535] { R11942 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R11942 += 1, R11898 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R11942 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R11944 += 1, R11900 += 1, R83 += 1 };
  s0 -> s2 [0, 65535] { R11944 += 1, R11899 += 1, R11900 += 1 };
  s0 -> s0 [0, 65535] { R11943 += 1, R11944 += 1 };
  s0 -> s3 [70, 70] { R11944 += 1, R11900 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R11944 += 1, R11900 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R11944 += 1, R11900 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R11944 += 1, R11900 += 1, R83 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R11944 += 1 };
  s1 -> s3 [70, 70] { R11944 += 1, R11900 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R11944 += 1, R11900 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R11944 += 1, R11900 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R11944 += 1, R11900 += 1, R83 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R11944 += 1, R11899 += 1, R11900 += 1 };
  s2 -> s3 [70, 70] { R11944 += 1, R11900 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R11944 += 1, R11900 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R11944 += 1, R11900 += 1, R83 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R11944 += 1 };
  s4 -> s5 [0, 65535] { R11944 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R11944 += 1, R11900 += 1, R83 += 1 };
  s5 -> s5 [0, 65535] { R11944 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R11946 += 1, R11902 += 1, R85 += 1 };
  s0 -> s0 [0, 65535] { R11945 += 1, R11946 += 1 };
  s0 -> s2 [0, 65535] { R11946 += 1, R11901 += 1, R11902 += 1 };
  s0 -> s3 [70, 70] { R11946 += 1, R11902 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R11946 += 1, R11902 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R11946 += 1, R11902 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R11946 += 1, R11902 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R11946 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R11946 += 1, R11902 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R11946 += 1, R11902 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R11946 += 1, R11902 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R11946 += 1, R11902 += 1, R85 += 1 };
  s2 -> s2 [0, 65535] { R11946 += 1, R11901 += 1, R11902 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R11946 += 1, R11902 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R11946 += 1, R11902 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R11946 += 1, R11902 += 1, R85 += 1 };
  s3 -> s3 [0, 65535] { R11946 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R11946 += 1 };
  s4 -> s4 [0, 65535] { R11946 += 1, R11902 += 1, R85 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R11946 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R11948 += 1, R11904 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R11948 += 1, R11904 += 1, R88 += 1 };
  s0 -> s3 [0, 65535] { R11948 += 1, R11903 += 1, R11904 += 1 };
  s0 -> s0 [0, 65535] { R11947 += 1, R11948 += 1 };
  s0 -> s4 [70, 70] { R11948 += 1, R11904 += 1, R87 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R11948 += 1, R11904 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R11948 += 1, R11904 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R11948 += 1, R11904 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [71, 74] { R11948 += 1, R11904 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R11948 += 1, R11904 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R11948 += 1, R11904 += 1, R88 += 1 };
  s0 -> s2 [76, 65535] { R11948 += 1, R11904 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R11948 += 1, R11904 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [0, 69] { R11948 += 1, R11904 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R11948 += 1, R11904 += 1, R87 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R11948 += 1, R11904 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R11948 += 1, R11904 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R11948 += 1, R11904 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [71, 74] { R11948 += 1, R11904 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R11948 += 1, R11904 += 1, R87 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R11948 += 1, R11904 += 1, R88 += 1 };
  s1 -> s2 [76, 65535] { R11948 += 1, R11904 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R11948 += 1, R11904 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R11948 += 1, R11904 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R11948 += 1, R11904 += 1, R88 += 1 };
  s2 -> s2 [71, 74] { R11948 += 1, R11904 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R11948 += 1, R11904 += 1, R88 += 1 };
  s2 -> s2 [76, 65535] { R11948 += 1, R11904 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R11948 += 1, R11904 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R11948 += 1, R11904 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R11948 += 1, R11903 += 1, R11904 += 1 };
  s3 -> s4 [70, 70] { R11948 += 1, R11904 += 1, R87 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R11948 += 1, R11904 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R11948 += 1, R11904 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R11948 += 1, R11904 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [71, 74] { R11948 += 1, R11904 += 1, R88 += 1 };
  s3 -> s1 [71, 65535] { R11948 += 1, R11904 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R11948 += 1, R11904 += 1, R88 += 1 };
  s3 -> s2 [76, 65535] { R11948 += 1, R11904 += 1, R88 += 1 };
  s4 -> s6 [0, 74] { R11948 += 1, R11904 += 1, R88 += 1 };
  s4 -> s4 [0, 65535] { R11948 += 1, R11904 += 1, R87 += 1, R88 += 1 };
  s4 -> s11 [75, 75] { R11948 += 1, R11904 += 1, R88 += 1 };
  s4 -> s6 [76, 65535] { R11948 += 1, R11904 += 1, R88 += 1 };
  s6 -> s6 [0, 74] { R11948 += 1, R11904 += 1, R88 += 1 };
  s6 -> s11 [75, 75] { R11948 += 1, R11904 += 1, R88 += 1 };
  s6 -> s6 [76, 65535] { R11948 += 1, R11904 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R11948 += 1, R11904 += 1, R88 += 1 };
  s8 -> s8 [0, 65535] { R11948 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R11948 += 1, R11904 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R11948 += 1, R11904 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R11948 += 1, R11904 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R11948 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R11948 += 1 };
  s11 -> s11 [0, 65535] { R11948 += 1, R11904 += 1, R88 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R11948 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R11950 += 1, R11906 += 1, R91 += 1, R92 += 1 };
  s0 -> s0 [0, 65535] { R11949 += 1, R11950 += 1 };
  s0 -> s2 [0, 65535] { R11950 += 1, R11905 += 1, R11906 += 1 };
  s0 -> s3 [70, 70] { R11950 += 1, R11906 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R11950 += 1, R11906 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R11950 += 1, R11906 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R11950 += 1, R11906 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 65535] { R11950 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R11950 += 1, R11906 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R11950 += 1, R11906 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R11950 += 1, R11906 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R11950 += 1, R11906 += 1, R91 += 1, R92 += 1 };
  s2 -> s2 [0, 65535] { R11950 += 1, R11905 += 1, R11906 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R11950 += 1, R11906 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R11950 += 1, R11906 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R11950 += 1, R11906 += 1, R91 += 1, R92 += 1 };
  s3 -> s3 [0, 65535] { R11950 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R11950 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R11950 += 1, R11906 += 1, R91 += 1, R92 += 1 };
  s5 -> s5 [0, 65535] { R11950 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R11952 += 1, R11908 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s2 [0, 69] { R11952 += 1, R11908 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s3 [0, 65535] { R11952 += 1, R11907 += 1, R11908 += 1 };
  s0 -> s0 [0, 65535] { R11951 += 1, R11952 += 1 };
  s0 -> s4 [70, 70] { R11952 += 1, R11908 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s5 [70, 70] { R11952 += 1, R11908 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s6 [70, 70] { R11952 += 1, R11908 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s7 [70, 70] { R11952 += 1, R11908 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s1 [71, 65535] { R11952 += 1, R11908 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s2 [71, 65535] { R11952 += 1, R11908 += 1, R10159 += 1, R10160 += 1 };
  s1 -> s1 [0, 69] { R11952 += 1, R11908 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s11 [0, 69] { R11952 += 1, R11908 += 1 };
  s1 -> s12 [70, 70] { R11952 += 1, R11908 += 1 };
  s1 -> s4 [70, 70] { R11952 += 1, R11908 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s8 [70, 70] { R11952 += 1, R11908 += 1 };
  s1 -> s7 [70, 70] { R11952 += 1, R11908 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s1 [71, 65535] { R11952 += 1, R11908 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s11 [71, 65535] { R11952 += 1, R11908 += 1 };
  s2 -> s1 [0, 69] { R11952 += 1, R11908 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s2 [0, 69] { R11952 += 1, R11908 += 1, R10159 += 1, R10160 += 1 };
  s2 -> s4 [70, 70] { R11952 += 1, R11908 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s5 [70, 70] { R11952 += 1, R11908 += 1, R10159 += 1, R10160 += 1 };
  s2 -> s6 [70, 70] { R11952 += 1, R11908 += 1, R10159 += 1, R10160 += 1 };
  s2 -> s7 [70, 70] { R11952 += 1, R11908 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s1 [71, 65535] { R11952 += 1, R11908 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s2 [71, 65535] { R11952 += 1, R11908 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s1 [0, 69] { R11952 += 1, R11908 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s2 [0, 69] { R11952 += 1, R11908 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s3 [0, 65535] { R11952 += 1, R11907 += 1, R11908 += 1 };
  s3 -> s4 [70, 70] { R11952 += 1, R11908 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s5 [70, 70] { R11952 += 1, R11908 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s6 [70, 70] { R11952 += 1, R11908 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s7 [70, 70] { R11952 += 1, R11908 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s1 [71, 65535] { R11952 += 1, R11908 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s2 [71, 65535] { R11952 += 1, R11908 += 1, R10159 += 1, R10160 += 1 };
  s6 -> s6 [0, 65535] { R11952 += 1, R11908 += 1, R10159 += 1, R10160 += 1 };
  s6 -> s7 [0, 65535] { R11952 += 1, R11908 += 1, R10160 += 1, R10161 += 1 };
  s7 -> s8 [0, 65535] { R11952 += 1, R11908 += 1 };
  s7 -> s7 [0, 65535] { R11952 += 1, R11908 += 1, R10160 += 1, R10161 += 1 };
  s8 -> s9 [0, 65535] { R11952 += 1 };
  s8 -> s10 [0, 65535];
  s8 -> s8 [0, 65535] { R11952 += 1, R11908 += 1 };
  s9 -> s9 [0, 65535] { R11952 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  s11 -> s11 [0, 69] { R11952 += 1, R11908 += 1 };
  s11 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R11952 += 1 };
  s11 -> s12 [70, 70] { R11952 += 1, R11908 += 1 };
  s11 -> s8 [70, 70] { R11952 += 1, R11908 += 1 };
  s11 -> s11 [71, 65535] { R11952 += 1, R11908 += 1 };
  s12 -> s12 [0, 65535] { R11952 += 1 };
  s12 -> s10 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R11954 += 1, R11910 += 1, R11839 += 1, R11840 += 1 };
  s0 -> s0 [0, 65535] { R11953 += 1, R11954 += 1 };
  s0 -> s2 [0, 65535] { R11954 += 1, R11909 += 1, R11910 += 1 };
  s0 -> s3 [70, 70] { R11954 += 1, R11910 += 1, R11839 += 1, R11840 += 1 };
  s0 -> s4 [70, 70] { R11954 += 1, R11910 += 1, R11839 += 1, R11840 += 1 };
  s0 -> s1 [71, 65535] { R11954 += 1, R11910 += 1, R11839 += 1, R11840 += 1 };
  s1 -> s1 [0, 69] { R11954 += 1, R11910 += 1, R11839 += 1, R11840 += 1 };
  s1 -> s1 [0, 65535] { R11954 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R11954 += 1, R11910 += 1, R11839 += 1, R11840 += 1 };
  s1 -> s4 [70, 70] { R11954 += 1, R11910 += 1, R11839 += 1, R11840 += 1 };
  s1 -> s1 [71, 65535] { R11954 += 1, R11910 += 1, R11839 += 1, R11840 += 1 };
  s2 -> s1 [0, 69] { R11954 += 1, R11910 += 1, R11839 += 1, R11840 += 1 };
  s2 -> s2 [0, 65535] { R11954 += 1, R11909 += 1, R11910 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R11954 += 1, R11910 += 1, R11839 += 1, R11840 += 1 };
  s2 -> s4 [70, 70] { R11954 += 1, R11910 += 1, R11839 += 1, R11840 += 1 };
  s2 -> s1 [71, 65535] { R11954 += 1, R11910 += 1, R11839 += 1, R11840 += 1 };
  s3 -> s3 [0, 65535] { R11954 += 1, R11910 += 1, R11839 += 1, R11840 += 1 };
  s3 -> s6 [0, 65535] { R11954 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R11954 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11954 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R11956 += 1, R11912 += 1, R11847 += 1, R11848 += 1 };
  s0 -> s2 [0, 69] { R11956 += 1, R11912 += 1, R11848 += 1, R11850 += 1, R11851 += 1 };
  s0 -> s3 [0, 69] { R11956 += 1, R11912 += 1, R11848 += 1, R11849 += 1, R11850 += 1 };
  s0 -> s0 [0, 65535] { R11955 += 1, R11956 += 1 };
  s0 -> s4 [0, 65535] { R11956 += 1, R11911 += 1, R11912 += 1 };
  s0 -> s5 [70, 70] { R11956 += 1, R11912 += 1, R11848 += 1, R11849 += 1, R11850 += 1 };
  s0 -> s6 [70, 70] { R11956 += 1, R11912 += 1, R11847 += 1, R11848 += 1 };
  s0 -> s7 [70, 70] { R11956 += 1, R11912 += 1, R11848 += 1, R11850 += 1, R11851 += 1 };
  s0 -> s8 [70, 70] { R11956 += 1, R11912 += 1, R11848 += 1, R11849 += 1, R11850 += 1 };
  s0 -> s9 [70, 70] { R11956 += 1, R11912 += 1, R11847 += 1, R11848 += 1 };
  s0 -> s10 [70, 70] { R11956 += 1, R11912 += 1, R11848 += 1, R11850 += 1, R11851 += 1 };
  s0 -> s1 [71, 65535] { R11956 += 1, R11912 += 1, R11847 += 1, R11848 += 1 };
  s0 -> s2 [71, 65535] { R11956 += 1, R11912 += 1, R11848 += 1, R11850 += 1, R11851 += 1 };
  s0 -> s3 [71, 65535] { R11956 += 1, R11912 += 1, R11848 += 1, R11849 += 1, R11850 += 1 };
  s1 -> s1 [0, 69] { R11956 += 1, R11912 += 1, R11847 += 1, R11848 += 1 };
  s1 -> s2 [0, 69] { R11956 += 1, R11912 += 1, R11848 += 1, R11850 += 1, R11851 += 1 };
  s1 -> s3 [0, 69] { R11956 += 1, R11912 += 1, R11848 += 1, R11849 += 1, R11850 += 1 };
  s1 -> s5 [70, 70] { R11956 += 1, R11912 += 1, R11848 += 1, R11849 += 1, R11850 += 1 };
  s1 -> s6 [70, 70] { R11956 += 1, R11912 += 1, R11847 += 1, R11848 += 1 };
  s1 -> s7 [70, 70] { R11956 += 1, R11912 += 1, R11848 += 1, R11850 += 1, R11851 += 1 };
  s1 -> s8 [70, 70] { R11956 += 1, R11912 += 1, R11848 += 1, R11849 += 1, R11850 += 1 };
  s1 -> s9 [70, 70] { R11956 += 1, R11912 += 1, R11847 += 1, R11848 += 1 };
  s1 -> s10 [70, 70] { R11956 += 1, R11912 += 1, R11848 += 1, R11850 += 1, R11851 += 1 };
  s1 -> s1 [71, 65535] { R11956 += 1, R11912 += 1, R11847 += 1, R11848 += 1 };
  s1 -> s2 [71, 65535] { R11956 += 1, R11912 += 1, R11848 += 1, R11850 += 1, R11851 += 1 };
  s1 -> s3 [71, 65535] { R11956 += 1, R11912 += 1, R11848 += 1, R11849 += 1, R11850 += 1 };
  s2 -> s2 [0, 69] { R11956 += 1, R11912 += 1, R11848 += 1, R11850 += 1, R11851 += 1 };
  s2 -> s14 [0, 69] { R11956 += 1, R11912 += 1, R11848 += 1 };
  s2 -> s7 [70, 70] { R11956 += 1, R11912 += 1, R11848 += 1, R11850 += 1, R11851 += 1 };
  s2 -> s11 [70, 70] { R11956 += 1, R11912 += 1, R11848 += 1 };
  s2 -> s10 [70, 70] { R11956 += 1, R11912 += 1, R11848 += 1, R11850 += 1, R11851 += 1 };
  s2 -> s15 [70, 70] { R11956 += 1, R11912 += 1, R11848 += 1 };
  s2 -> s2 [71, 65535] { R11956 += 1, R11912 += 1, R11848 += 1, R11850 += 1, R11851 += 1 };
  s2 -> s14 [71, 65535] { R11956 += 1, R11912 += 1, R11848 += 1 };
  s3 -> s2 [0, 69] { R11956 += 1, R11912 += 1, R11848 += 1, R11850 += 1, R11851 += 1 };
  s3 -> s3 [0, 69] { R11956 += 1, R11912 += 1, R11848 += 1, R11849 += 1, R11850 += 1 };
  s3 -> s5 [70, 70] { R11956 += 1, R11912 += 1, R11848 += 1, R11849 += 1, R11850 += 1 };
  s3 -> s7 [70, 70] { R11956 += 1, R11912 += 1, R11848 += 1, R11850 += 1, R11851 += 1 };
  s3 -> s8 [70, 70] { R11956 += 1, R11912 += 1, R11848 += 1, R11849 += 1, R11850 += 1 };
  s3 -> s10 [70, 70] { R11956 += 1, R11912 += 1, R11848 += 1, R11850 += 1, R11851 += 1 };
  s3 -> s2 [71, 65535] { R11956 += 1, R11912 += 1, R11848 += 1, R11850 += 1, R11851 += 1 };
  s3 -> s3 [71, 65535] { R11956 += 1, R11912 += 1, R11848 += 1, R11849 += 1, R11850 += 1 };
  s4 -> s1 [0, 69] { R11956 += 1, R11912 += 1, R11847 += 1, R11848 += 1 };
  s4 -> s2 [0, 69] { R11956 += 1, R11912 += 1, R11848 += 1, R11850 += 1, R11851 += 1 };
  s4 -> s3 [0, 69] { R11956 += 1, R11912 += 1, R11848 += 1, R11849 += 1, R11850 += 1 };
  s4 -> s4 [0, 65535] { R11956 += 1, R11911 += 1, R11912 += 1 };
  s4 -> s5 [70, 70] { R11956 += 1, R11912 += 1, R11848 += 1, R11849 += 1, R11850 += 1 };
  s4 -> s6 [70, 70] { R11956 += 1, R11912 += 1, R11847 += 1, R11848 += 1 };
  s4 -> s7 [70, 70] { R11956 += 1, R11912 += 1, R11848 += 1, R11850 += 1, R11851 += 1 };
  s4 -> s8 [70, 70] { R11956 += 1, R11912 += 1, R11848 += 1, R11849 += 1, R11850 += 1 };
  s4 -> s9 [70, 70] { R11956 += 1, R11912 += 1, R11847 += 1, R11848 += 1 };
  s4 -> s10 [70, 70] { R11956 += 1, R11912 += 1, R11848 += 1, R11850 += 1, R11851 += 1 };
  s4 -> s1 [71, 65535] { R11956 += 1, R11912 += 1, R11847 += 1, R11848 += 1 };
  s4 -> s2 [71, 65535] { R11956 += 1, R11912 += 1, R11848 += 1, R11850 += 1, R11851 += 1 };
  s4 -> s3 [71, 65535] { R11956 += 1, R11912 += 1, R11848 += 1, R11849 += 1, R11850 += 1 };
  s5 -> s5 [0, 65535] { R11956 += 1, R11912 += 1, R11848 += 1, R11849 += 1, R11850 += 1 };
  s5 -> s7 [0, 65535] { R11956 += 1, R11912 += 1, R11848 += 1, R11850 += 1, R11851 += 1 };
  s7 -> s7 [0, 65535] { R11956 += 1, R11912 += 1, R11848 += 1, R11850 += 1, R11851 += 1 };
  s7 -> s11 [0, 65535] { R11956 += 1, R11912 += 1, R11848 += 1 };
  s9 -> s5 [0, 65535] { R11956 += 1, R11912 += 1, R11848 += 1, R11849 += 1, R11850 += 1 };
  s9 -> s7 [0, 65535] { R11956 += 1, R11912 += 1, R11848 += 1, R11850 += 1, R11851 += 1 };
  s9 -> s9 [0, 65535] { R11956 += 1, R11912 += 1, R11847 += 1, R11848 += 1 };
  s11 -> s12 [0, 65535] { R11956 += 1 };
  s11 -> s13 [0, 65535];
  s11 -> s11 [0, 65535] { R11956 += 1, R11912 += 1, R11848 += 1 };
  s12 -> s12 [0, 65535] { R11956 += 1 };
  s12 -> s13 [0, 65535];
  s13 -> s13 [0, 65535];
  s14 -> s14 [0, 69] { R11956 += 1, R11912 += 1, R11848 += 1 };
  s14 -> s13 [0, 65535];
  s14 -> s14 [0, 65535] { R11956 += 1 };
  s14 -> s11 [70, 70] { R11956 += 1, R11912 += 1, R11848 += 1 };
  s14 -> s15 [70, 70] { R11956 += 1, R11912 += 1, R11848 += 1 };
  s14 -> s14 [71, 65535] { R11956 += 1, R11912 += 1, R11848 += 1 };
  s15 -> s13 [0, 65535];
  s15 -> s15 [0, 65535] { R11956 += 1 };
  accepting s12, s13, s14, s15, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R11874 && R3 = R11956 && R23 - R11956 = -1 && R24 = R11956 && R25 - R11956 = -1 && R26 = R11956 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R11844 + -1*R11840 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R11844 + -1*R11840 - R66 = 0 && R55 + R96 + R93 + -1*R11846 + -1*R11842 - R68 = 0 && R65 + R11843 + R11839 = 0 && R67 + R11845 + R11841 = 0 && R11873 = 0 && R11897 = 0 && R11898 = 0 && R11903 = 0 && R11904 = 0 && R11907 = 0 && R11908 = 0 && R11911 = 0 && R11912 = 0 && R11913 = 0 && R11914 = R11956 && R11915 = 0 && R11916 = R11956 && R11917 = 0 && R11918 = R11956 && R11919 = 0 && R11920 = R11956 && R11921 = 0 && R11922 = R11956 && R11923 = 0 && R11924 = R11956 && R11925 = 0 && R11926 = R11956 && R11927 = 0 && R11928 = R11956 && R11929 = 0 && R11930 = R11956 && R11931 = 0 && R11932 = R11956 && R11933 = 0 && R11934 = R11956 && R11935 = 0 && R11936 = R11956 && R11937 = 0 && R11938 = R11956 && R11939 = 0 && R11940 = R11956 && R11941 = 0 && R11942 = R11956 && R11943 = 0 && R11944 = R11956 && R11945 = 0 && R11946 = R11956 && R11947 = 0 && R11948 = R11956 && R11949 = 0 && R11950 = R11956 && R11951 = 0 && R11952 = R11956 && R11953 = 0 && R11954 = R11956 && R11955 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R10164 + R10161 < 1 && -1*R11844 + -1*R11840 - R66 < 1 && -1*R11846 + -1*R11842 - R68 < 1 && -1 < R11874 && 0 < R11956 && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R11844 + -1*R11840 - R66 = 0 || R66 + R11844 + R11840 < 1) && (R59 + R10162 + R10159 != 0 || R60 + R10163 + R10160 + -1*R11844 + -1*R11840 - R66 = 0 || R66 + R11844 + R11840 < 1) && (R66 + R11844 + R11840 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R11846 + R11842 < 1) && (R53 + R94 + R91 = 0 || R68 + R11846 + R11842 < 1))) && (R66 + R11844 + R11840 != 0 || ((R59 + R10162 + R10159 != 0 || R60 + R10163 + R10160 = 0 || R68 + R11846 + R11842 < 1) && (R59 + R10162 + R10159 = 0 || R68 + R11846 + R11842 < 1))) && (R66 + R11844 + R11840 != 0 || ((R73 + R11852 + R11847 != 0 || R74 + R11853 + R11848 = 0 || R68 + R11846 + R11842 < 1) && (R73 + R11852 + R11847 = 0 || R68 + R11846 + R11842 < 1))) && (R68 + R11846 + R11842 != 0 || R77 + R11856 + R11851 = 0 || (R75 + R11854 + R11849 = 0 && R76 + R11855 + R11850 = 0)) && (R73 + R11852 + R11847 != 0 || R66 + R11844 + R11840 + -1*R11853 + -1*R11848 - R74 = 0 || R66 + R11844 + R11840 < 1) && (R75 + R11854 + R11849 != 0 || R68 + R11846 + R11842 + -1*R11855 + -1*R11850 - R76 = 0 || R68 + R11846 + R11842 < 1) && (R11857 != 0 || R11858 = R11874 || (R20 = 0 && R11874 = 0)) && (R11859 != 0 || R11860 = R11874 || (R20 = 0 && R11874 = 0)) && (R11861 != 0 || R11862 = R11874 || (R20 = 0 && R11874 = 0)) && (R11863 != 0 || R11864 = R11874 || (R20 = 0 && R11874 = 0)) && (R11865 != 0 || R11866 = R11874 || (R20 = 0 && R11874 = 0)) && (R11867 != 0 || R11868 = R11874 || (R20 = 0 && R11874 = 0)) && (R11869 != 0 || R11870 = R11874 || (R20 = 0 && R11874 = 0)) && (R11871 != 0 || R11872 = R11874 || (R20 = 0 && R11874 = 0)) && (R11875 != 0 || R11874 = R11876 || (R20 = 0 && R11874 = 0)) && (R21 = 0 || (R11895 = 0 && R11896 = 0)) && (R21 = 0 || (R11899 = 0 && R11900 = 0)) && (R21 = 0 || (R11901 = 0 && R11902 = 0)) && (R21 = 0 || (R11905 = 0 && R11906 = 0)) && (R21 = 0 || (R11909 = 0 && R11910 = 0)) && (R22 = 0 || (R11877 = 0 && R11878 = 0)) && (R22 = 0 || (R11879 = 0 && R11880 = 0)) && (R22 = 0 || (R11881 = 0 && R11882 = 0)) && (R22 = 0 || (R11883 = 0 && R11884 = 0)) && (R22 = 0 || (R11885 = 0 && R11886 = 0)) && (R22 = 0 || (R11887 = 0 && R11888 = 0)) && (R22 = 0 || (R11889 = 0 && R11890 = 0)) && (R22 = 0 || (R11891 = 0 && R11892 = 0)) && (R22 = 0 || (R11893 = 0 && R11894 = 0)) && (R53 + R94 + R91 = 0 || R66 + R11844 + R11840 < 1) && (R59 + R10162 + R10159 = 0 || R66 + R11844 + R11840 < 1) && (R73 + R11852 + R11847 = 0 || R66 + R11844 + R11840 < 1) && (R75 + R11854 + R11849 = 0 || R68 + R11846 + R11842 < 1) && (R11857 = 0 || (R20 = 0 && R11874 = 0)) && (R11859 = 0 || (R20 = 0 && R11874 = 0)) && (R11861 = 0 || (R20 = 0 && R11874 = 0)) && (R11863 = 0 || (R20 = 0 && R11874 = 0)) && (R11865 = 0 || (R20 = 0 && R11874 = 0)) && (R11867 = 0 || (R20 = 0 && R11874 = 0)) && (R11869 = 0 || (R20 = 0 && R11874 = 0)) && (R11871 = 0 || (R20 = 0 && R11874 = 0)) && (R11875 = 0 || (R20 = 0 && R11874 = 0));
// End of Parikh automata intersection problem
