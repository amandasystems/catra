// Parikh automata intersection problem, generated by OSTRICH+
counter int R10159, R10160, R10161, R10162, R10163, R10164, R12, R12397, R12398, R12399, R12400, R12401, R12402, R12403, R12404, R12515, R12516, R12517, R12518, R12519, R12520, R12521, R12522, R12523, R12524, R12525, R12526, R12527, R12528, R12529, R12530, R12531, R12532, R12533, R12534, R12535, R12536, R12537, R12538, R12539, R12540, R12541, R12542, R12543, R12544, R12545, R12546, R12547, R12548, R12549, R12550, R12551, R12552, R12553, R12554, R12555, R12556, R12557, R12558, R12559, R12560, R12561, R12562, R12563, R12564, R12565, R12566, R12567, R12568, R12569, R12570, R12571, R12572, R12573, R12574, R12575, R12576, R12577, R12578, R12579, R12580, R12581, R12582, R12583, R12584, R12585, R12586, R12587, R12588, R12589, R12590, R12591, R12592, R12593, R12594, R12595, R12596, R12597, R12598, R12599, R12600, R12601, R12602, R12603, R12604, R12605, R12606, R12607, R12608, R12609, R12610, R12611, R12612, R12613, R12614, R12615, R12616, R12617, R12618, R12619, R12620, R12621, R12622, R12623, R12624, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R4, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R12546 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R12545 += 1, R12546 += 1 };
  s1 -> s1 [0, 65535] { R12546 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R12548 += 1 };
  s0 -> s0 [0, 65535] { R12547 += 1, R12548 += 1 };
  s0 -> s2 [70, 70] { R12548 += 1 };
  s0 -> s3 [70, 70] { R12548 += 1 };
  s0 -> s1 [76, 65535] { R12548 += 1 };
  s1 -> s1 [0, 69] { R12548 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R12548 += 1 };
  s1 -> s3 [70, 70] { R12548 += 1 };
  s1 -> s1 [76, 65535] { R12548 += 1 };
  s2 -> s2 [0, 70] { R12548 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R12548 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R12550 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R12549 += 1, R12550 += 1 };
  s0 -> s2 [70, 70] { R12550 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R12550 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R12550 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R12550 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R12550 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R12550 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R12550 += 1, R45 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R12550 += 1, R45 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R12552 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R12551 += 1, R12552 += 1 };
  s0 -> s2 [70, 70] { R12552 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R12552 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R12552 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R12552 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R12552 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R12552 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R12552 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R12552 += 1, R47 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R12554 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R12553 += 1, R12554 += 1 };
  s0 -> s2 [70, 70] { R12554 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R12554 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R12554 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R12554 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R12554 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R12554 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R12554 += 1, R49 += 1, R50 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R12554 += 1, R49 += 1, R50 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R12556 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R12555 += 1, R12556 += 1 };
  s0 -> s2 [70, 70] { R12556 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R12556 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R12556 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R12556 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R12556 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R12556 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R12556 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R12556 += 1, R53 += 1, R54 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R12558 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R12557 += 1, R12558 += 1 };
  s0 -> s2 [70, 70] { R12558 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R12558 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R12558 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R12558 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R12558 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R12558 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R12558 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R12558 += 1, R59 += 1, R60 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R12560 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R12559 += 1, R12560 += 1 };
  s0 -> s2 [70, 70] { R12560 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R12560 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R12560 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R12560 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R12560 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R12560 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R12560 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535] { R12560 += 1, R65 += 1, R66 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R12562 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R12561 += 1, R12562 += 1 };
  s0 -> s2 [70, 70] { R12562 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R12562 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R12562 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R12562 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R12562 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R12562 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R12562 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R12562 += 1, R73 += 1, R74 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R12582 += 1 };
  s0 -> s0 [0, 65535] { R12581 += 1, R12582 += 1 };
  s0 -> s2 [70, 70] { R12582 += 1 };
  s0 -> s1 [71, 65535] { R12582 += 1 };
  s1 -> s1 [0, 69] { R12582 += 1 };
  s1 -> s2 [70, 70] { R12582 += 1 };
  s1 -> s1 [71, 65535] { R12582 += 1 };
  s2 -> s2 [0, 65535] { R12582 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R12584 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R12583 += 1, R12584 += 1 };
  s1 -> s1 [0, 65535] { R12584 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R12586 += 1 };
  s0 -> s2 [0, 65535] { R12586 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R12585 += 1, R12586 += 1 };
  s0 -> s3 [70, 70] { R12586 += 1 };
  s0 -> s1 [71, 65535] { R12586 += 1 };
  s1 -> s1 [0, 69] { R12586 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R12586 += 1 };
  s1 -> s1 [71, 65535] { R12586 += 1 };
  s2 -> s1 [0, 69] { R12586 += 1 };
  s2 -> s2 [0, 65535] { R12586 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R12586 += 1 };
  s2 -> s1 [71, 65535] { R12586 += 1 };
  s3 -> s3 [0, 65535] { R12586 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R12588 += 1, R12526 += 1 };
  s0 -> s0 [0, 65535] { R12587 += 1, R12588 += 1 };
  s0 -> s2 [0, 65535] { R12588 += 1, R12525 += 1, R12526 += 1 };
  s0 -> s1 [71, 65535] { R12588 += 1, R12526 += 1 };
  s1 -> s1 [0, 69] { R12588 += 1, R12526 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R12588 += 1 };
  s1 -> s1 [71, 65535] { R12588 += 1, R12526 += 1 };
  s2 -> s1 [0, 69] { R12588 += 1, R12526 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R12588 += 1, R12525 += 1, R12526 += 1 };
  s2 -> s1 [71, 65535] { R12588 += 1, R12526 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R12590 += 1, R12527 += 1, R12528 += 1 };
  s0 -> s2 [0, 65535] { R12590 += 1, R12528 += 1, R20 += 1 };
  s0 -> s0 [0, 65535] { R12589 += 1, R12590 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R12590 += 1, R12527 += 1, R12528 += 1 };
  s1 -> s2 [0, 65535] { R12590 += 1, R12528 += 1, R20 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R12590 += 1 };
  s2 -> s2 [0, 65535] { R12590 += 1, R12528 += 1, R20 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R12590 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R12592 += 1, R12530 += 1 };
  s0 -> s2 [0, 65535] { R12592 += 1, R12529 += 1, R12530 += 1 };
  s0 -> s0 [0, 65535] { R12591 += 1, R12592 += 1 };
  s0 -> s1 [75, 65535] { R12592 += 1, R12530 += 1 };
  s1 -> s1 [0, 70] { R12592 += 1, R12530 += 1 };
  s1 -> s1 [0, 65535] { R12592 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R12592 += 1, R12530 += 1 };
  s2 -> s1 [0, 70] { R12592 += 1, R12530 += 1 };
  s2 -> s2 [0, 65535] { R12592 += 1, R12529 += 1, R12530 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R12592 += 1, R12530 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R12594 += 1, R12532 += 1, R84 += 1 };
  s0 -> s0 [0, 65535] { R12593 += 1, R12594 += 1 };
  s0 -> s2 [0, 65535] { R12594 += 1, R12531 += 1, R12532 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R12594 += 1, R12532 += 1, R84 += 1 };
  s1 -> s4 [0, 65535] { R12594 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R12594 += 1, R12532 += 1, R84 += 1 };
  s2 -> s2 [0, 65535] { R12594 += 1, R12531 += 1, R12532 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R12594 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R12596 += 1, R12534 += 1 };
  s0 -> s0 [0, 65535] { R12595 += 1, R12596 += 1 };
  s0 -> s2 [0, 65535] { R12596 += 1, R12534 += 1, R86 += 1 };
  s0 -> s3 [0, 65535] { R12596 += 1, R12533 += 1, R12534 += 1 };
  s0 -> s1 [76, 65535] { R12596 += 1, R12534 += 1 };
  s1 -> s1 [0, 74] { R12596 += 1, R12534 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R12596 += 1 };
  s1 -> s1 [76, 65535] { R12596 += 1, R12534 += 1 };
  s2 -> s1 [0, 74] { R12596 += 1, R12534 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R12596 += 1, R12534 += 1, R86 += 1 };
  s2 -> s5 [0, 65535] { R12596 += 1 };
  s2 -> s1 [76, 65535] { R12596 += 1, R12534 += 1 };
  s3 -> s1 [0, 74] { R12596 += 1, R12534 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R12596 += 1, R12534 += 1, R86 += 1 };
  s3 -> s3 [0, 65535] { R12596 += 1, R12533 += 1, R12534 += 1 };
  s3 -> s1 [76, 65535] { R12596 += 1, R12534 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R12596 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R12598 += 1, R12536 += 1 };
  s0 -> s0 [0, 65535] { R12597 += 1, R12598 += 1 };
  s0 -> s2 [0, 65535] { R12598 += 1, R12536 += 1, R90 += 1 };
  s0 -> s3 [0, 65535] { R12598 += 1, R12535 += 1, R12536 += 1 };
  s1 -> s1 [0, 65535] { R12598 += 1, R12536 += 1 };
  s1 -> s5 [0, 65535] { R12598 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R12598 += 1, R12536 += 1 };
  s2 -> s5 [0, 65535] { R12598 += 1 };
  s2 -> s2 [0, 65535] { R12598 += 1, R12536 += 1, R90 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R12598 += 1, R12536 += 1 };
  s3 -> s2 [0, 65535] { R12598 += 1, R12536 += 1, R90 += 1 };
  s3 -> s3 [0, 65535] { R12598 += 1, R12535 += 1, R12536 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R12598 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R12600 += 1, R12538 += 1, R94 += 1, R95 += 1 };
  s0 -> s2 [0, 65535] { R12600 += 1, R12538 += 1, R95 += 1, R96 += 1 };
  s0 -> s0 [0, 65535] { R12599 += 1, R12600 += 1 };
  s0 -> s3 [0, 65535] { R12600 += 1, R12537 += 1, R12538 += 1 };
  s1 -> s1 [0, 65535] { R12600 += 1, R12538 += 1, R94 += 1, R95 += 1 };
  s1 -> s2 [0, 65535] { R12600 += 1, R12538 += 1, R95 += 1, R96 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R12600 += 1 };
  s2 -> s2 [0, 65535] { R12600 += 1, R12538 += 1, R95 += 1, R96 += 1 };
  s2 -> s5 [0, 65535] { R12600 += 1, R12538 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s6 [0, 65535] { R12600 += 1 };
  s3 -> s1 [0, 65535] { R12600 += 1, R12538 += 1, R94 += 1, R95 += 1 };
  s3 -> s2 [0, 65535] { R12600 += 1, R12538 += 1, R95 += 1, R96 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R12600 += 1, R12537 += 1, R12538 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R12600 += 1, R12538 += 1 };
  s5 -> s4 [0, 65535];
  s5 -> s6 [0, 65535] { R12600 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R12600 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 65535] { R12602 += 1, R12539 += 1, R12540 += 1 };
  s0 -> s0 [0, 65535] { R12601 += 1, R12602 += 1 };
  s0 -> s2 [0, 65535] { R12602 += 1, R12540 += 1 };
  s1 -> s1 [0, 65535] { R12602 += 1, R12539 += 1, R12540 += 1 };
  s1 -> s2 [0, 65535] { R12602 += 1, R12540 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R12602 += 1, R12540 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R12602 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R12602 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 74] { R12604 += 1, R12542 += 1, R12402 += 1, R12404 += 1 };
  s0 -> s0 [0, 65535] { R12603 += 1, R12604 += 1 };
  s0 -> s2 [0, 65535] { R12604 += 1, R12541 += 1, R12542 += 1 };
  s0 -> s3 [75, 75] { R12604 += 1, R12542 += 1, R12402 += 1, R12404 += 1 };
  s0 -> s1 [76, 65535] { R12604 += 1, R12542 += 1, R12402 += 1, R12404 += 1 };
  s1 -> s1 [0, 74] { R12604 += 1, R12542 += 1, R12402 += 1, R12404 += 1 };
  s1 -> s3 [75, 75] { R12604 += 1, R12542 += 1, R12402 += 1, R12404 += 1 };
  s1 -> s1 [76, 65535] { R12604 += 1, R12542 += 1, R12402 += 1, R12404 += 1 };
  s2 -> s1 [0, 74] { R12604 += 1, R12542 += 1, R12402 += 1, R12404 += 1 };
  s2 -> s2 [0, 65535] { R12604 += 1, R12541 += 1, R12542 += 1 };
  s2 -> s3 [75, 75] { R12604 += 1, R12542 += 1, R12402 += 1, R12404 += 1 };
  s2 -> s1 [76, 65535] { R12604 += 1, R12542 += 1, R12402 += 1, R12404 += 1 };
  s3 -> s4 [0, 65535] { R12604 += 1, R12542 += 1 };
  s3 -> s3 [0, 65535] { R12604 += 1, R12542 += 1, R12402 += 1, R12404 += 1 };
  s3 -> s5 [0, 65535] { R12604 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R12604 += 1, R12542 += 1, R12402 += 1 };
  s4 -> s4 [0, 65535] { R12604 += 1, R12542 += 1 };
  s4 -> s5 [0, 65535] { R12604 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R12604 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s4 [0, 65535] { R12604 += 1, R12542 += 1 };
  s7 -> s5 [0, 65535] { R12604 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R12604 += 1, R12542 += 1, R12402 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R12606 += 1, R12544 += 1 };
  s0 -> s2 [0, 65535] { R12606 += 1, R12543 += 1, R12544 += 1 };
  s0 -> s0 [0, 65535] { R12605 += 1, R12606 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R12606 += 1, R12544 += 1 };
  s1 -> s4 [0, 65535] { R12606 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R12606 += 1, R12544 += 1 };
  s2 -> s2 [0, 65535] { R12606 += 1, R12543 += 1, R12544 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R12606 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R12607 += 1, R12608 += 1 };
  s0 -> s1 [0, 65535] { R12608 += 1, R12563 += 1, R12564 += 1 };
  s0 -> s2 [0, 65535] { R12608 += 1, R12564 += 1, R21 += 1 };
  s1 -> s1 [0, 65535] { R12608 += 1, R12563 += 1, R12564 += 1 };
  s1 -> s2 [0, 65535] { R12608 += 1, R12564 += 1, R21 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R12608 += 1 };
  s2 -> s2 [0, 65535] { R12608 += 1, R12564 += 1, R21 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R12608 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R12610 += 1, R12566 += 1 };
  s0 -> s2 [0, 65535] { R12610 += 1, R12565 += 1, R12566 += 1 };
  s0 -> s0 [0, 65535] { R12609 += 1, R12610 += 1 };
  s0 -> s3 [70, 70] { R12610 += 1, R12566 += 1 };
  s0 -> s4 [70, 70] { R12610 += 1, R12566 += 1 };
  s0 -> s5 [75, 75] { R12610 += 1, R12566 += 1 };
  s0 -> s1 [76, 65535] { R12610 += 1, R12566 += 1 };
  s1 -> s1 [0, 69] { R12610 += 1, R12566 += 1 };
  s1 -> s3 [70, 70] { R12610 += 1, R12566 += 1 };
  s1 -> s4 [70, 70] { R12610 += 1, R12566 += 1 };
  s1 -> s5 [75, 75] { R12610 += 1, R12566 += 1 };
  s1 -> s1 [76, 65535] { R12610 += 1, R12566 += 1 };
  s2 -> s1 [0, 69] { R12610 += 1, R12566 += 1 };
  s2 -> s2 [0, 65535] { R12610 += 1, R12565 += 1, R12566 += 1 };
  s2 -> s3 [70, 70] { R12610 += 1, R12566 += 1 };
  s2 -> s4 [70, 70] { R12610 += 1, R12566 += 1 };
  s2 -> s5 [75, 75] { R12610 += 1, R12566 += 1 };
  s2 -> s1 [76, 65535] { R12610 += 1, R12566 += 1 };
  s3 -> s3 [0, 70] { R12610 += 1, R12566 += 1 };
  s3 -> s8 [75, 75] { R12610 += 1, R12566 += 1 };
  s3 -> s3 [76, 65535] { R12610 += 1, R12566 += 1 };
  s5 -> s5 [0, 69] { R12610 += 1, R12566 += 1 };
  s5 -> s5 [0, 65535] { R12610 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R12610 += 1, R12566 += 1 };
  s5 -> s8 [70, 70] { R12610 += 1, R12566 += 1 };
  s5 -> s5 [75, 65535] { R12610 += 1, R12566 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R12610 += 1 };
  s8 -> s8 [0, 70] { R12610 += 1, R12566 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R12610 += 1 };
  s8 -> s8 [75, 65535] { R12610 += 1, R12566 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R12612 += 1, R12568 += 1, R83 += 1 };
  s0 -> s2 [0, 65535] { R12612 += 1, R12567 += 1, R12568 += 1 };
  s0 -> s0 [0, 65535] { R12611 += 1, R12612 += 1 };
  s0 -> s3 [70, 70] { R12612 += 1, R12568 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R12612 += 1, R12568 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R12612 += 1, R12568 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R12612 += 1, R12568 += 1, R83 += 1 };
  s1 -> s1 [0, 65535] { R12612 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R12612 += 1, R12568 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R12612 += 1, R12568 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R12612 += 1, R12568 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R12612 += 1, R12568 += 1, R83 += 1 };
  s2 -> s2 [0, 65535] { R12612 += 1, R12567 += 1, R12568 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R12612 += 1, R12568 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R12612 += 1, R12568 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R12612 += 1, R12568 += 1, R83 += 1 };
  s3 -> s3 [0, 65535] { R12612 += 1, R12568 += 1, R83 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R12612 += 1 };
  s4 -> s4 [0, 65535] { R12612 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12612 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R12614 += 1, R12570 += 1, R85 += 1 };
  s0 -> s2 [0, 65535] { R12614 += 1, R12569 += 1, R12570 += 1 };
  s0 -> s0 [0, 65535] { R12613 += 1, R12614 += 1 };
  s0 -> s3 [70, 70] { R12614 += 1, R12570 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R12614 += 1, R12570 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R12614 += 1, R12570 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R12614 += 1, R12570 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R12614 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R12614 += 1, R12570 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R12614 += 1, R12570 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R12614 += 1, R12570 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R12614 += 1, R12570 += 1, R85 += 1 };
  s2 -> s2 [0, 65535] { R12614 += 1, R12569 += 1, R12570 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R12614 += 1, R12570 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R12614 += 1, R12570 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R12614 += 1, R12570 += 1, R85 += 1 };
  s3 -> s6 [0, 65535] { R12614 += 1 };
  s3 -> s3 [0, 65535] { R12614 += 1, R12570 += 1, R85 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R12614 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12614 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R12616 += 1, R12572 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R12616 += 1, R12572 += 1, R88 += 1 };
  s0 -> s3 [0, 65535] { R12616 += 1, R12571 += 1, R12572 += 1 };
  s0 -> s0 [0, 65535] { R12615 += 1, R12616 += 1 };
  s0 -> s4 [70, 70] { R12616 += 1, R12572 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R12616 += 1, R12572 += 1, R87 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R12616 += 1, R12572 += 1, R87 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R12616 += 1, R12572 += 1, R88 += 1 };
  s0 -> s2 [71, 74] { R12616 += 1, R12572 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R12616 += 1, R12572 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R12616 += 1, R12572 += 1, R88 += 1 };
  s0 -> s2 [76, 65535] { R12616 += 1, R12572 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R12616 += 1, R12572 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [0, 69] { R12616 += 1, R12572 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R12616 += 1, R12572 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R12616 += 1, R12572 += 1, R87 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R12616 += 1, R12572 += 1, R87 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R12616 += 1, R12572 += 1, R88 += 1 };
  s1 -> s2 [71, 74] { R12616 += 1, R12572 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R12616 += 1, R12572 += 1, R87 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R12616 += 1, R12572 += 1, R88 += 1 };
  s1 -> s2 [76, 65535] { R12616 += 1, R12572 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R12616 += 1, R12572 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R12616 += 1, R12572 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R12616 += 1, R12572 += 1, R88 += 1 };
  s2 -> s2 [71, 74] { R12616 += 1, R12572 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R12616 += 1, R12572 += 1, R88 += 1 };
  s2 -> s2 [76, 65535] { R12616 += 1, R12572 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R12616 += 1, R12572 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R12616 += 1, R12572 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R12616 += 1, R12571 += 1, R12572 += 1 };
  s3 -> s4 [70, 70] { R12616 += 1, R12572 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R12616 += 1, R12572 += 1, R87 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R12616 += 1, R12572 += 1, R87 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R12616 += 1, R12572 += 1, R88 += 1 };
  s3 -> s2 [71, 74] { R12616 += 1, R12572 += 1, R88 += 1 };
  s3 -> s1 [71, 65535] { R12616 += 1, R12572 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R12616 += 1, R12572 += 1, R88 += 1 };
  s3 -> s2 [76, 65535] { R12616 += 1, R12572 += 1, R88 += 1 };
  s6 -> s7 [0, 74] { R12616 += 1, R12572 += 1, R88 += 1 };
  s6 -> s6 [0, 65535] { R12616 += 1, R12572 += 1, R87 += 1, R88 += 1 };
  s6 -> s11 [75, 75] { R12616 += 1, R12572 += 1, R88 += 1 };
  s6 -> s7 [76, 65535] { R12616 += 1, R12572 += 1, R88 += 1 };
  s7 -> s7 [0, 74] { R12616 += 1, R12572 += 1, R88 += 1 };
  s7 -> s11 [75, 75] { R12616 += 1, R12572 += 1, R88 += 1 };
  s7 -> s7 [76, 65535] { R12616 += 1, R12572 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R12616 += 1, R12572 += 1, R88 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R12616 += 1 };
  s8 -> s10 [70, 70] { R12616 += 1, R12572 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R12616 += 1, R12572 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R12616 += 1, R12572 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R12616 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R12616 += 1 };
  s11 -> s11 [0, 65535] { R12616 += 1, R12572 += 1, R88 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R12616 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R12618 += 1, R12574 += 1, R91 += 1, R92 += 1 };
  s0 -> s0 [0, 65535] { R12617 += 1, R12618 += 1 };
  s0 -> s2 [0, 65535] { R12618 += 1, R12573 += 1, R12574 += 1 };
  s0 -> s3 [70, 70] { R12618 += 1, R12574 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R12618 += 1, R12574 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R12618 += 1, R12574 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R12618 += 1, R12574 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 65535] { R12618 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R12618 += 1, R12574 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R12618 += 1, R12574 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R12618 += 1, R12574 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R12618 += 1, R12574 += 1, R91 += 1, R92 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R12618 += 1, R12573 += 1, R12574 += 1 };
  s2 -> s3 [70, 70] { R12618 += 1, R12574 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R12618 += 1, R12574 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R12618 += 1, R12574 += 1, R91 += 1, R92 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R12618 += 1 };
  s4 -> s5 [0, 65535] { R12618 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R12618 += 1, R12574 += 1, R91 += 1, R92 += 1 };
  s5 -> s5 [0, 65535] { R12618 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R12620 += 1, R12576 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s2 [0, 69] { R12620 += 1, R12576 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s3 [0, 65535] { R12620 += 1, R12575 += 1, R12576 += 1 };
  s0 -> s0 [0, 65535] { R12619 += 1, R12620 += 1 };
  s0 -> s4 [70, 70] { R12620 += 1, R12576 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s5 [70, 70] { R12620 += 1, R12576 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s6 [70, 70] { R12620 += 1, R12576 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s7 [70, 70] { R12620 += 1, R12576 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s1 [71, 65535] { R12620 += 1, R12576 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s2 [71, 65535] { R12620 += 1, R12576 += 1, R10159 += 1, R10160 += 1 };
  s1 -> s11 [0, 69] { R12620 += 1, R12576 += 1 };
  s1 -> s1 [0, 69] { R12620 += 1, R12576 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s12 [70, 70] { R12620 += 1, R12576 += 1 };
  s1 -> s8 [70, 70] { R12620 += 1, R12576 += 1 };
  s1 -> s6 [70, 70] { R12620 += 1, R12576 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s7 [70, 70] { R12620 += 1, R12576 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s11 [71, 65535] { R12620 += 1, R12576 += 1 };
  s1 -> s1 [71, 65535] { R12620 += 1, R12576 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s1 [0, 69] { R12620 += 1, R12576 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s2 [0, 69] { R12620 += 1, R12576 += 1, R10159 += 1, R10160 += 1 };
  s2 -> s4 [70, 70] { R12620 += 1, R12576 += 1, R10159 += 1, R10160 += 1 };
  s2 -> s5 [70, 70] { R12620 += 1, R12576 += 1, R10159 += 1, R10160 += 1 };
  s2 -> s6 [70, 70] { R12620 += 1, R12576 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s7 [70, 70] { R12620 += 1, R12576 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s1 [71, 65535] { R12620 += 1, R12576 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s2 [71, 65535] { R12620 += 1, R12576 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s1 [0, 69] { R12620 += 1, R12576 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s2 [0, 69] { R12620 += 1, R12576 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s3 [0, 65535] { R12620 += 1, R12575 += 1, R12576 += 1 };
  s3 -> s4 [70, 70] { R12620 += 1, R12576 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s5 [70, 70] { R12620 += 1, R12576 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s6 [70, 70] { R12620 += 1, R12576 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s7 [70, 70] { R12620 += 1, R12576 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s1 [71, 65535] { R12620 += 1, R12576 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s2 [71, 65535] { R12620 += 1, R12576 += 1, R10159 += 1, R10160 += 1 };
  s4 -> s4 [0, 65535] { R12620 += 1, R12576 += 1, R10159 += 1, R10160 += 1 };
  s4 -> s7 [0, 65535] { R12620 += 1, R12576 += 1, R10160 += 1, R10161 += 1 };
  s7 -> s8 [0, 65535] { R12620 += 1, R12576 += 1 };
  s7 -> s7 [0, 65535] { R12620 += 1, R12576 += 1, R10160 += 1, R10161 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [0, 65535] { R12620 += 1 };
  s8 -> s8 [0, 65535] { R12620 += 1, R12576 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R12620 += 1 };
  s11 -> s11 [0, 69] { R12620 += 1, R12576 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R12620 += 1 };
  s11 -> s12 [70, 70] { R12620 += 1, R12576 += 1 };
  s11 -> s8 [70, 70] { R12620 += 1, R12576 += 1 };
  s11 -> s11 [71, 65535] { R12620 += 1, R12576 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R12620 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R12622 += 1, R12578 += 1, R12397 += 1, R12398 += 1 };
  s0 -> s2 [0, 69] { R12622 += 1, R12578 += 1, R12398 += 1, R12400 += 1 };
  s0 -> s3 [0, 69] { R12622 += 1, R12578 += 1, R12398 += 1, R12399 += 1, R12400 += 1 };
  s0 -> s4 [0, 65535] { R12622 += 1, R12577 += 1, R12578 += 1 };
  s0 -> s0 [0, 65535] { R12621 += 1, R12622 += 1 };
  s0 -> s5 [70, 70] { R12622 += 1, R12578 += 1, R12398 += 1, R12400 += 1 };
  s0 -> s6 [70, 70] { R12622 += 1, R12578 += 1, R12398 += 1, R12399 += 1, R12400 += 1 };
  s0 -> s7 [70, 70] { R12622 += 1, R12578 += 1, R12398 += 1, R12400 += 1 };
  s0 -> s8 [70, 70] { R12622 += 1, R12578 += 1, R12398 += 1, R12399 += 1, R12400 += 1 };
  s0 -> s9 [70, 70] { R12622 += 1, R12578 += 1, R12397 += 1, R12398 += 1 };
  s0 -> s10 [70, 70] { R12622 += 1, R12578 += 1, R12397 += 1, R12398 += 1 };
  s0 -> s2 [71, 74] { R12622 += 1, R12578 += 1, R12398 += 1, R12400 += 1 };
  s0 -> s1 [71, 65535] { R12622 += 1, R12578 += 1, R12397 += 1, R12398 += 1 };
  s0 -> s3 [71, 65535] { R12622 += 1, R12578 += 1, R12398 += 1, R12399 += 1, R12400 += 1 };
  s0 -> s2 [76, 65535] { R12622 += 1, R12578 += 1, R12398 += 1, R12400 += 1 };
  s1 -> s1 [0, 69] { R12622 += 1, R12578 += 1, R12397 += 1, R12398 += 1 };
  s1 -> s2 [0, 69] { R12622 += 1, R12578 += 1, R12398 += 1, R12400 += 1 };
  s1 -> s3 [0, 69] { R12622 += 1, R12578 += 1, R12398 += 1, R12399 += 1, R12400 += 1 };
  s1 -> s5 [70, 70] { R12622 += 1, R12578 += 1, R12398 += 1, R12400 += 1 };
  s1 -> s6 [70, 70] { R12622 += 1, R12578 += 1, R12398 += 1, R12399 += 1, R12400 += 1 };
  s1 -> s7 [70, 70] { R12622 += 1, R12578 += 1, R12398 += 1, R12400 += 1 };
  s1 -> s8 [70, 70] { R12622 += 1, R12578 += 1, R12398 += 1, R12399 += 1, R12400 += 1 };
  s1 -> s9 [70, 70] { R12622 += 1, R12578 += 1, R12397 += 1, R12398 += 1 };
  s1 -> s10 [70, 70] { R12622 += 1, R12578 += 1, R12397 += 1, R12398 += 1 };
  s1 -> s2 [71, 74] { R12622 += 1, R12578 += 1, R12398 += 1, R12400 += 1 };
  s1 -> s1 [71, 65535] { R12622 += 1, R12578 += 1, R12397 += 1, R12398 += 1 };
  s1 -> s3 [71, 65535] { R12622 += 1, R12578 += 1, R12398 += 1, R12399 += 1, R12400 += 1 };
  s1 -> s2 [76, 65535] { R12622 += 1, R12578 += 1, R12398 += 1, R12400 += 1 };
  s2 -> s2 [0, 69] { R12622 += 1, R12578 += 1, R12398 += 1, R12400 += 1 };
  s2 -> s11 [0, 65535];
  s2 -> s2 [0, 65535] { R12622 += 1 };
  s2 -> s5 [70, 70] { R12622 += 1, R12578 += 1, R12398 += 1, R12400 += 1 };
  s2 -> s7 [70, 70] { R12622 += 1, R12578 += 1, R12398 += 1, R12400 += 1 };
  s2 -> s2 [71, 74] { R12622 += 1, R12578 += 1, R12398 += 1, R12400 += 1 };
  s2 -> s2 [76, 65535] { R12622 += 1, R12578 += 1, R12398 += 1, R12400 += 1 };
  s3 -> s2 [0, 69] { R12622 += 1, R12578 += 1, R12398 += 1, R12400 += 1 };
  s3 -> s3 [0, 69] { R12622 += 1, R12578 += 1, R12398 += 1, R12399 += 1, R12400 += 1 };
  s3 -> s5 [70, 70] { R12622 += 1, R12578 += 1, R12398 += 1, R12400 += 1 };
  s3 -> s6 [70, 70] { R12622 += 1, R12578 += 1, R12398 += 1, R12399 += 1, R12400 += 1 };
  s3 -> s7 [70, 70] { R12622 += 1, R12578 += 1, R12398 += 1, R12400 += 1 };
  s3 -> s8 [70, 70] { R12622 += 1, R12578 += 1, R12398 += 1, R12399 += 1, R12400 += 1 };
  s3 -> s2 [71, 74] { R12622 += 1, R12578 += 1, R12398 += 1, R12400 += 1 };
  s3 -> s3 [71, 65535] { R12622 += 1, R12578 += 1, R12398 += 1, R12399 += 1, R12400 += 1 };
  s3 -> s2 [76, 65535] { R12622 += 1, R12578 += 1, R12398 += 1, R12400 += 1 };
  s4 -> s1 [0, 69] { R12622 += 1, R12578 += 1, R12397 += 1, R12398 += 1 };
  s4 -> s2 [0, 69] { R12622 += 1, R12578 += 1, R12398 += 1, R12400 += 1 };
  s4 -> s3 [0, 69] { R12622 += 1, R12578 += 1, R12398 += 1, R12399 += 1, R12400 += 1 };
  s4 -> s4 [0, 65535] { R12622 += 1, R12577 += 1, R12578 += 1 };
  s4 -> s5 [70, 70] { R12622 += 1, R12578 += 1, R12398 += 1, R12400 += 1 };
  s4 -> s6 [70, 70] { R12622 += 1, R12578 += 1, R12398 += 1, R12399 += 1, R12400 += 1 };
  s4 -> s7 [70, 70] { R12622 += 1, R12578 += 1, R12398 += 1, R12400 += 1 };
  s4 -> s8 [70, 70] { R12622 += 1, R12578 += 1, R12398 += 1, R12399 += 1, R12400 += 1 };
  s4 -> s9 [70, 70] { R12622 += 1, R12578 += 1, R12397 += 1, R12398 += 1 };
  s4 -> s10 [70, 70] { R12622 += 1, R12578 += 1, R12397 += 1, R12398 += 1 };
  s4 -> s2 [71, 74] { R12622 += 1, R12578 += 1, R12398 += 1, R12400 += 1 };
  s4 -> s1 [71, 65535] { R12622 += 1, R12578 += 1, R12397 += 1, R12398 += 1 };
  s4 -> s3 [71, 65535] { R12622 += 1, R12578 += 1, R12398 += 1, R12399 += 1, R12400 += 1 };
  s4 -> s2 [76, 65535] { R12622 += 1, R12578 += 1, R12398 += 1, R12400 += 1 };
  s5 -> s5 [0, 65535] { R12622 += 1 };
  s5 -> s11 [0, 65535];
  s7 -> s7 [0, 74] { R12622 += 1, R12578 += 1, R12398 += 1, R12400 += 1 };
  s7 -> s7 [0, 65535] { R12622 += 1 };
  s7 -> s11 [0, 65535];
  s7 -> s7 [76, 65535] { R12622 += 1, R12578 += 1, R12398 += 1, R12400 += 1 };
  s8 -> s7 [0, 74] { R12622 += 1, R12578 += 1, R12398 += 1, R12400 += 1 };
  s8 -> s8 [0, 65535] { R12622 += 1, R12578 += 1, R12398 += 1, R12399 += 1, R12400 += 1 };
  s8 -> s7 [76, 65535] { R12622 += 1, R12578 += 1, R12398 += 1, R12400 += 1 };
  s10 -> s7 [0, 74] { R12622 += 1, R12578 += 1, R12398 += 1, R12400 += 1 };
  s10 -> s8 [0, 65535] { R12622 += 1, R12578 += 1, R12398 += 1, R12399 += 1, R12400 += 1 };
  s10 -> s10 [0, 65535] { R12622 += 1, R12578 += 1, R12397 += 1, R12398 += 1 };
  s10 -> s7 [76, 65535] { R12622 += 1, R12578 += 1, R12398 += 1, R12400 += 1 };
  s11 -> s11 [0, 65535];
  accepting s2, s5, s7, s11;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R12624 += 1, R12580 += 1, R12516 += 1, R12517 += 1, R12518 += 1 };
  s0 -> s2 [0, 69] { R12624 += 1, R12580 += 1, R12515 += 1, R12516 += 1 };
  s0 -> s3 [0, 69] { R12624 += 1, R12580 += 1, R12516 += 1, R12518 += 1, R12519 += 1 };
  s0 -> s4 [0, 65535] { R12624 += 1, R12579 += 1, R12580 += 1 };
  s0 -> s0 [0, 65535] { R12623 += 1, R12624 += 1 };
  s0 -> s5 [70, 70] { R12624 += 1, R12580 += 1, R12515 += 1, R12516 += 1 };
  s0 -> s6 [70, 70] { R12624 += 1, R12580 += 1, R12516 += 1, R12517 += 1, R12518 += 1 };
  s0 -> s7 [70, 70] { R12624 += 1, R12580 += 1, R12516 += 1, R12518 += 1, R12519 += 1 };
  s0 -> s8 [70, 70] { R12624 += 1, R12580 += 1, R12516 += 1, R12518 += 1, R12519 += 1 };
  s0 -> s9 [70, 70] { R12624 += 1, R12580 += 1, R12515 += 1, R12516 += 1 };
  s0 -> s10 [70, 70] { R12624 += 1, R12580 += 1, R12516 += 1, R12517 += 1, R12518 += 1 };
  s0 -> s1 [71, 65535] { R12624 += 1, R12580 += 1, R12516 += 1, R12517 += 1, R12518 += 1 };
  s0 -> s2 [71, 65535] { R12624 += 1, R12580 += 1, R12515 += 1, R12516 += 1 };
  s0 -> s3 [71, 65535] { R12624 += 1, R12580 += 1, R12516 += 1, R12518 += 1, R12519 += 1 };
  s1 -> s15 [0, 69] { R12624 += 1, R12580 += 1 };
  s1 -> s1 [0, 69] { R12624 += 1, R12580 += 1, R12516 += 1, R12517 += 1, R12518 += 1 };
  s1 -> s3 [0, 69] { R12624 += 1, R12580 += 1, R12516 += 1, R12518 += 1, R12519 += 1 };
  s1 -> s6 [70, 70] { R12624 += 1, R12580 += 1, R12516 += 1, R12517 += 1, R12518 += 1 };
  s1 -> s7 [70, 70] { R12624 += 1, R12580 += 1, R12516 += 1, R12518 += 1, R12519 += 1 };
  s1 -> s8 [70, 70] { R12624 += 1, R12580 += 1, R12516 += 1, R12518 += 1, R12519 += 1 };
  s1 -> s18 [70, 70] { R12624 += 1, R12580 += 1 };
  s1 -> s10 [70, 70] { R12624 += 1, R12580 += 1, R12516 += 1, R12517 += 1, R12518 += 1 };
  s1 -> s12 [70, 70] { R12624 += 1, R12580 += 1 };
  s1 -> s15 [71, 65535] { R12624 += 1, R12580 += 1 };
  s1 -> s1 [71, 65535] { R12624 += 1, R12580 += 1, R12516 += 1, R12517 += 1, R12518 += 1 };
  s1 -> s3 [71, 65535] { R12624 += 1, R12580 += 1, R12516 += 1, R12518 += 1, R12519 += 1 };
  s2 -> s1 [0, 69] { R12624 += 1, R12580 += 1, R12516 += 1, R12517 += 1, R12518 += 1 };
  s2 -> s2 [0, 69] { R12624 += 1, R12580 += 1, R12515 += 1, R12516 += 1 };
  s2 -> s3 [0, 69] { R12624 += 1, R12580 += 1, R12516 += 1, R12518 += 1, R12519 += 1 };
  s2 -> s5 [70, 70] { R12624 += 1, R12580 += 1, R12515 += 1, R12516 += 1 };
  s2 -> s6 [70, 70] { R12624 += 1, R12580 += 1, R12516 += 1, R12517 += 1, R12518 += 1 };
  s2 -> s7 [70, 70] { R12624 += 1, R12580 += 1, R12516 += 1, R12518 += 1, R12519 += 1 };
  s2 -> s8 [70, 70] { R12624 += 1, R12580 += 1, R12516 += 1, R12518 += 1, R12519 += 1 };
  s2 -> s9 [70, 70] { R12624 += 1, R12580 += 1, R12515 += 1, R12516 += 1 };
  s2 -> s10 [70, 70] { R12624 += 1, R12580 += 1, R12516 += 1, R12517 += 1, R12518 += 1 };
  s2 -> s1 [71, 65535] { R12624 += 1, R12580 += 1, R12516 += 1, R12517 += 1, R12518 += 1 };
  s2 -> s2 [71, 65535] { R12624 += 1, R12580 += 1, R12515 += 1, R12516 += 1 };
  s2 -> s3 [71, 65535] { R12624 += 1, R12580 += 1, R12516 += 1, R12518 += 1, R12519 += 1 };
  s3 -> s15 [0, 69] { R12624 += 1, R12580 += 1 };
  s3 -> s16 [0, 69] { R12624 += 1, R12580 += 1, R12516 += 1 };
  s3 -> s3 [0, 69] { R12624 += 1, R12580 += 1, R12516 += 1, R12518 += 1, R12519 += 1 };
  s3 -> s11 [70, 70] { R12624 += 1, R12580 += 1, R12516 += 1 };
  s3 -> s17 [70, 70] { R12624 += 1, R12580 += 1, R12516 += 1 };
  s3 -> s7 [70, 70] { R12624 += 1, R12580 += 1, R12516 += 1, R12518 += 1, R12519 += 1 };
  s3 -> s8 [70, 70] { R12624 += 1, R12580 += 1, R12516 += 1, R12518 += 1, R12519 += 1 };
  s3 -> s18 [70, 70] { R12624 += 1, R12580 += 1 };
  s3 -> s12 [70, 70] { R12624 += 1, R12580 += 1 };
  s3 -> s15 [71, 65535] { R12624 += 1, R12580 += 1 };
  s3 -> s16 [71, 65535] { R12624 += 1, R12580 += 1, R12516 += 1 };
  s3 -> s3 [71, 65535] { R12624 += 1, R12580 += 1, R12516 += 1, R12518 += 1, R12519 += 1 };
  s4 -> s1 [0, 69] { R12624 += 1, R12580 += 1, R12516 += 1, R12517 += 1, R12518 += 1 };
  s4 -> s2 [0, 69] { R12624 += 1, R12580 += 1, R12515 += 1, R12516 += 1 };
  s4 -> s3 [0, 69] { R12624 += 1, R12580 += 1, R12516 += 1, R12518 += 1, R12519 += 1 };
  s4 -> s4 [0, 65535] { R12624 += 1, R12579 += 1, R12580 += 1 };
  s4 -> s5 [70, 70] { R12624 += 1, R12580 += 1, R12515 += 1, R12516 += 1 };
  s4 -> s6 [70, 70] { R12624 += 1, R12580 += 1, R12516 += 1, R12517 += 1, R12518 += 1 };
  s4 -> s7 [70, 70] { R12624 += 1, R12580 += 1, R12516 += 1, R12518 += 1, R12519 += 1 };
  s4 -> s8 [70, 70] { R12624 += 1, R12580 += 1, R12516 += 1, R12518 += 1, R12519 += 1 };
  s4 -> s9 [70, 70] { R12624 += 1, R12580 += 1, R12515 += 1, R12516 += 1 };
  s4 -> s10 [70, 70] { R12624 += 1, R12580 += 1, R12516 += 1, R12517 += 1, R12518 += 1 };
  s4 -> s1 [71, 65535] { R12624 += 1, R12580 += 1, R12516 += 1, R12517 += 1, R12518 += 1 };
  s4 -> s2 [71, 65535] { R12624 += 1, R12580 += 1, R12515 += 1, R12516 += 1 };
  s4 -> s3 [71, 65535] { R12624 += 1, R12580 += 1, R12516 += 1, R12518 += 1, R12519 += 1 };
  s6 -> s6 [0, 65535] { R12624 += 1, R12580 += 1, R12516 += 1, R12517 += 1, R12518 += 1 };
  s6 -> s8 [0, 65535] { R12624 += 1, R12580 += 1, R12516 += 1, R12518 += 1, R12519 += 1 };
  s6 -> s12 [0, 65535] { R12624 += 1, R12580 += 1 };
  s8 -> s11 [0, 65535] { R12624 += 1, R12580 += 1, R12516 += 1 };
  s8 -> s8 [0, 65535] { R12624 += 1, R12580 += 1, R12516 += 1, R12518 += 1, R12519 += 1 };
  s8 -> s12 [0, 65535] { R12624 += 1, R12580 += 1 };
  s9 -> s6 [0, 65535] { R12624 += 1, R12580 += 1, R12516 += 1, R12517 += 1, R12518 += 1 };
  s9 -> s8 [0, 65535] { R12624 += 1, R12580 += 1, R12516 += 1, R12518 += 1, R12519 += 1 };
  s9 -> s9 [0, 65535] { R12624 += 1, R12580 += 1, R12515 += 1, R12516 += 1 };
  s11 -> s11 [0, 65535] { R12624 += 1, R12580 += 1, R12516 += 1 };
  s11 -> s12 [0, 65535] { R12624 += 1, R12580 += 1 };
  s12 -> s13 [0, 65535];
  s12 -> s14 [0, 65535] { R12624 += 1 };
  s12 -> s12 [0, 65535] { R12624 += 1, R12580 += 1 };
  s13 -> s13 [0, 65535];
  s14 -> s13 [0, 65535];
  s14 -> s14 [0, 65535] { R12624 += 1 };
  s15 -> s15 [0, 69] { R12624 += 1, R12580 += 1 };
  s15 -> s15 [0, 65535] { R12624 += 1 };
  s15 -> s13 [0, 65535];
  s15 -> s18 [70, 70] { R12624 += 1, R12580 += 1 };
  s15 -> s12 [70, 70] { R12624 += 1, R12580 += 1 };
  s15 -> s15 [71, 65535] { R12624 += 1, R12580 += 1 };
  s16 -> s15 [0, 69] { R12624 += 1, R12580 += 1 };
  s16 -> s16 [0, 69] { R12624 += 1, R12580 += 1, R12516 += 1 };
  s16 -> s11 [70, 70] { R12624 += 1, R12580 += 1, R12516 += 1 };
  s16 -> s17 [70, 70] { R12624 += 1, R12580 += 1, R12516 += 1 };
  s16 -> s18 [70, 70] { R12624 += 1, R12580 += 1 };
  s16 -> s12 [70, 70] { R12624 += 1, R12580 += 1 };
  s16 -> s15 [71, 65535] { R12624 += 1, R12580 += 1 };
  s16 -> s16 [71, 65535] { R12624 += 1, R12580 += 1, R12516 += 1 };
  s18 -> s13 [0, 65535];
  s18 -> s18 [0, 65535] { R12624 += 1 };
  accepting s12, s13, s14, s18, s15;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R12542 && R3 = R12624 && R23 - R12624 = -1 && R24 = R12624 && R25 - R12624 = -1 && R26 = R12624 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R12402 + -1*R12398 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R12402 + -1*R12398 - R66 = 0 && R55 + R96 + R93 + -1*R12404 + -1*R12400 - R68 = 0 && R65 + R12401 + R12397 = 0 && R67 + R12403 + R12399 = 0 && R12541 = 0 && R12565 = 0 && R12566 = 0 && R12571 = 0 && R12572 = 0 && R12575 = 0 && R12576 = 0 && R12577 = 0 && R12578 = 0 && R12579 = 0 && R12580 = 0 && R12581 = 0 && R12582 = R12624 && R12583 = 0 && R12584 = R12624 && R12585 = 0 && R12586 = R12624 && R12587 = 0 && R12588 = R12624 && R12589 = 0 && R12590 = R12624 && R12591 = 0 && R12592 = R12624 && R12593 = 0 && R12594 = R12624 && R12595 = 0 && R12596 = R12624 && R12597 = 0 && R12598 = R12624 && R12599 = 0 && R12600 = R12624 && R12601 = 0 && R12602 = R12624 && R12603 = 0 && R12604 = R12624 && R12605 = 0 && R12606 = R12624 && R12607 = 0 && R12608 = R12624 && R12609 = 0 && R12610 = R12624 && R12611 = 0 && R12612 = R12624 && R12613 = 0 && R12614 = R12624 && R12615 = 0 && R12616 = R12624 && R12617 = 0 && R12618 = R12624 && R12619 = 0 && R12620 = R12624 && R12621 = 0 && R12622 = R12624 && R12623 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R10164 + R10161 < 1 && -1*R12402 + -1*R12398 - R66 < 1 && -1*R12404 + -1*R12400 - R68 < 1 && -1 < R12542 && 0 < R12624 && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R12402 + -1*R12398 - R66 = 0 || R66 + R12402 + R12398 < 1) && (R59 + R10162 + R10159 != 0 || R60 + R10163 + R10160 + -1*R12402 + -1*R12398 - R66 = 0 || R66 + R12402 + R12398 < 1) && (R66 + R12402 + R12398 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R12404 + R12400 < 1) && (R53 + R94 + R91 = 0 || R68 + R12404 + R12400 < 1))) && (R66 + R12402 + R12398 != 0 || ((R59 + R10162 + R10159 != 0 || R60 + R10163 + R10160 = 0 || R68 + R12404 + R12400 < 1) && (R59 + R10162 + R10159 = 0 || R68 + R12404 + R12400 < 1))) && (R66 + R12402 + R12398 != 0 || ((R73 + R12520 + R12515 != 0 || R74 + R12521 + R12516 = 0 || R68 + R12404 + R12400 < 1) && (R73 + R12520 + R12515 = 0 || R68 + R12404 + R12400 < 1))) && (R68 + R12404 + R12400 != 0 || R77 + R12524 + R12519 = 0 || (R75 + R12522 + R12517 = 0 && R76 + R12523 + R12518 = 0)) && (R73 + R12520 + R12515 != 0 || R66 + R12402 + R12398 + -1*R12521 + -1*R12516 - R74 = 0 || R66 + R12402 + R12398 < 1) && (R75 + R12522 + R12517 != 0 || R68 + R12404 + R12400 + -1*R12523 + -1*R12518 - R76 = 0 || R68 + R12404 + R12400 < 1) && (R12525 != 0 || R12526 = R12542 || (R20 = 0 && R12542 = 0)) && (R12527 != 0 || R12528 = R12542 || (R20 = 0 && R12542 = 0)) && (R12529 != 0 || R12530 = R12542 || (R20 = 0 && R12542 = 0)) && (R12531 != 0 || R12532 = R12542 || (R20 = 0 && R12542 = 0)) && (R12533 != 0 || R12534 = R12542 || (R20 = 0 && R12542 = 0)) && (R12535 != 0 || R12536 = R12542 || (R20 = 0 && R12542 = 0)) && (R12537 != 0 || R12538 = R12542 || (R20 = 0 && R12542 = 0)) && (R12539 != 0 || R12540 = R12542 || (R20 = 0 && R12542 = 0)) && (R12543 != 0 || R12542 = R12544 || (R20 = 0 && R12542 = 0)) && (R21 = 0 || (R12563 = 0 && R12564 = 0)) && (R21 = 0 || (R12567 = 0 && R12568 = 0)) && (R21 = 0 || (R12569 = 0 && R12570 = 0)) && (R21 = 0 || (R12573 = 0 && R12574 = 0)) && (R22 = 0 || (R12545 = 0 && R12546 = 0)) && (R22 = 0 || (R12547 = 0 && R12548 = 0)) && (R22 = 0 || (R12549 = 0 && R12550 = 0)) && (R22 = 0 || (R12551 = 0 && R12552 = 0)) && (R22 = 0 || (R12553 = 0 && R12554 = 0)) && (R22 = 0 || (R12555 = 0 && R12556 = 0)) && (R22 = 0 || (R12557 = 0 && R12558 = 0)) && (R22 = 0 || (R12559 = 0 && R12560 = 0)) && (R22 = 0 || (R12561 = 0 && R12562 = 0)) && (R53 + R94 + R91 = 0 || R66 + R12402 + R12398 < 1) && (R59 + R10162 + R10159 = 0 || R66 + R12402 + R12398 < 1) && (R73 + R12520 + R12515 = 0 || R66 + R12402 + R12398 < 1) && (R75 + R12522 + R12517 = 0 || R68 + R12404 + R12400 < 1) && (R12525 = 0 || (R20 = 0 && R12542 = 0)) && (R12527 = 0 || (R20 = 0 && R12542 = 0)) && (R12529 = 0 || (R20 = 0 && R12542 = 0)) && (R12531 = 0 || (R20 = 0 && R12542 = 0)) && (R12533 = 0 || (R20 = 0 && R12542 = 0)) && (R12535 = 0 || (R20 = 0 && R12542 = 0)) && (R12537 = 0 || (R20 = 0 && R12542 = 0)) && (R12539 = 0 || (R20 = 0 && R12542 = 0)) && (R12543 = 0 || (R20 = 0 && R12542 = 0));
// End of Parikh automata intersection problem
