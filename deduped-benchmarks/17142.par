// Parikh automata intersection problem, generated by OSTRICH+
counter int R100, R101, R102, R103, R104, R105, R106, R107, R108, R109, R110, R12, R15, R16, R2, R20, R21, R22, R221, R222, R223, R224, R225, R226, R227, R228, R229, R23, R230, R231, R232, R233, R234, R235, R236, R237, R238, R239, R24, R240, R241, R242, R243, R244, R245, R246, R247, R248, R249, R25, R250, R251, R252, R253, R254, R255, R256, R257, R258, R259, R26, R260, R261, R262, R263, R264, R265, R266, R267, R268, R269, R27, R270, R271, R272, R273, R274, R275, R276, R277, R278, R279, R28, R280, R281, R282, R283, R284, R285, R286, R287, R288, R289, R29, R290, R291, R292, R293, R294, R295, R296, R297, R298, R299, R3, R30, R300, R301, R302, R303, R304, R305, R306, R307, R308, R309, R310, R311, R312, R313, R314, R315, R316, R317, R318, R319, R320, R321, R322, R323, R324, R325, R326, R327, R328, R329, R330, R4, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96, R97, R98, R99;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R251 += 1, R252 += 1 };
  s0 -> s1 [0, 65535] { R252 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R252 += 1, R22 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R254 += 1 };
  s0 -> s0 [0, 65535] { R253 += 1, R254 += 1 };
  s0 -> s2 [70, 70] { R254 += 1 };
  s0 -> s3 [70, 70] { R254 += 1 };
  s0 -> s1 [76, 65535] { R254 += 1 };
  s1 -> s1 [0, 69] { R254 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R254 += 1 };
  s1 -> s3 [70, 70] { R254 += 1 };
  s1 -> s1 [76, 65535] { R254 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R254 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R254 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R256 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R255 += 1, R256 += 1 };
  s0 -> s2 [70, 70] { R256 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R256 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R256 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R256 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R256 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R256 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R256 += 1, R45 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R256 += 1, R45 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R258 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R257 += 1, R258 += 1 };
  s0 -> s2 [70, 70] { R258 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R258 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R258 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R258 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R258 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R258 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R258 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R258 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R260 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R259 += 1, R260 += 1 };
  s0 -> s2 [70, 70] { R260 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R260 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R260 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R260 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R260 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R260 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R260 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R260 += 1, R49 += 1, R50 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R262 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R261 += 1, R262 += 1 };
  s0 -> s2 [70, 70] { R262 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R262 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R262 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R262 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R262 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R262 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R262 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R262 += 1, R53 += 1, R54 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R264 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R263 += 1, R264 += 1 };
  s0 -> s2 [70, 70] { R264 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R264 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R264 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R264 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R264 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R264 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R264 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535] { R264 += 1, R59 += 1, R60 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R266 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R265 += 1, R266 += 1 };
  s0 -> s2 [70, 70] { R266 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R266 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R266 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R266 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R266 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R266 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R266 += 1, R65 += 1, R66 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R266 += 1, R65 += 1, R66 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R268 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R267 += 1, R268 += 1 };
  s0 -> s2 [70, 70] { R268 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R268 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R268 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R268 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R268 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R268 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R268 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R268 += 1, R73 += 1, R74 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R288 += 1 };
  s0 -> s0 [0, 65535] { R287 += 1, R288 += 1 };
  s0 -> s2 [70, 70] { R288 += 1 };
  s0 -> s1 [71, 65535] { R288 += 1 };
  s1 -> s1 [0, 69] { R288 += 1 };
  s1 -> s2 [70, 70] { R288 += 1 };
  s1 -> s1 [71, 65535] { R288 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R288 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R289 += 1, R290 += 1 };
  s0 -> s1 [0, 65535] { R290 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R290 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R292 += 1 };
  s0 -> s2 [0, 65535] { R292 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R291 += 1, R292 += 1 };
  s0 -> s3 [70, 70] { R292 += 1 };
  s0 -> s1 [71, 65535] { R292 += 1 };
  s1 -> s1 [0, 69] { R292 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R292 += 1 };
  s1 -> s1 [71, 65535] { R292 += 1 };
  s2 -> s1 [0, 69] { R292 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R292 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R292 += 1 };
  s2 -> s1 [71, 65535] { R292 += 1 };
  s3 -> s3 [0, 65535] { R292 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R294 += 1, R232 += 1 };
  s0 -> s2 [0, 65535] { R294 += 1, R231 += 1, R232 += 1 };
  s0 -> s0 [0, 65535] { R293 += 1, R294 += 1 };
  s0 -> s1 [71, 65535] { R294 += 1, R232 += 1 };
  s1 -> s1 [0, 69] { R294 += 1, R232 += 1 };
  s1 -> s1 [0, 65535] { R294 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R294 += 1, R232 += 1 };
  s2 -> s1 [0, 69] { R294 += 1, R232 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R294 += 1, R231 += 1, R232 += 1 };
  s2 -> s1 [71, 65535] { R294 += 1, R232 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R296 += 1, R233 += 1, R234 += 1 };
  s0 -> s2 [0, 65535] { R296 += 1, R234 += 1, R20 += 1 };
  s0 -> s0 [0, 65535] { R295 += 1, R296 += 1 };
  s1 -> s1 [0, 65535] { R296 += 1, R233 += 1, R234 += 1 };
  s1 -> s2 [0, 65535] { R296 += 1, R234 += 1, R20 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R296 += 1, R234 += 1, R20 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R296 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R296 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R298 += 1, R236 += 1 };
  s0 -> s2 [0, 65535] { R298 += 1, R235 += 1, R236 += 1 };
  s0 -> s0 [0, 65535] { R297 += 1, R298 += 1 };
  s0 -> s1 [75, 65535] { R298 += 1, R236 += 1 };
  s1 -> s1 [0, 70] { R298 += 1, R236 += 1 };
  s1 -> s1 [0, 65535] { R298 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R298 += 1, R236 += 1 };
  s2 -> s1 [0, 70] { R298 += 1, R236 += 1 };
  s2 -> s2 [0, 65535] { R298 += 1, R235 += 1, R236 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R298 += 1, R236 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R300 += 1, R238 += 1, R84 += 1 };
  s0 -> s0 [0, 65535] { R299 += 1, R300 += 1 };
  s0 -> s2 [0, 65535] { R300 += 1, R237 += 1, R238 += 1 };
  s1 -> s1 [0, 65535] { R300 += 1, R238 += 1, R84 += 1 };
  s1 -> s4 [0, 65535] { R300 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R300 += 1, R238 += 1, R84 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R300 += 1, R237 += 1, R238 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R300 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R302 += 1, R240 += 1 };
  s0 -> s2 [0, 65535] { R302 += 1, R239 += 1, R240 += 1 };
  s0 -> s3 [0, 65535] { R302 += 1, R240 += 1, R86 += 1 };
  s0 -> s0 [0, 65535] { R301 += 1, R302 += 1 };
  s0 -> s1 [76, 65535] { R302 += 1, R240 += 1 };
  s1 -> s1 [0, 74] { R302 += 1, R240 += 1 };
  s1 -> s1 [0, 65535] { R302 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [76, 65535] { R302 += 1, R240 += 1 };
  s2 -> s1 [0, 74] { R302 += 1, R240 += 1 };
  s2 -> s2 [0, 65535] { R302 += 1, R239 += 1, R240 += 1 };
  s2 -> s3 [0, 65535] { R302 += 1, R240 += 1, R86 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [76, 65535] { R302 += 1, R240 += 1 };
  s3 -> s1 [0, 74] { R302 += 1, R240 += 1 };
  s3 -> s3 [0, 65535] { R302 += 1, R240 += 1, R86 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R302 += 1 };
  s3 -> s1 [76, 65535] { R302 += 1, R240 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R302 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R304 += 1, R241 += 1, R242 += 1 };
  s0 -> s2 [0, 65535] { R304 += 1, R242 += 1, R90 += 1 };
  s0 -> s0 [0, 65535] { R303 += 1, R304 += 1 };
  s0 -> s3 [0, 65535] { R304 += 1, R242 += 1 };
  s1 -> s1 [0, 65535] { R304 += 1, R241 += 1, R242 += 1 };
  s1 -> s2 [0, 65535] { R304 += 1, R242 += 1, R90 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s3 [0, 65535] { R304 += 1, R242 += 1 };
  s2 -> s2 [0, 65535] { R304 += 1, R242 += 1, R90 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R304 += 1, R242 += 1 };
  s2 -> s5 [0, 65535] { R304 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R304 += 1, R242 += 1 };
  s3 -> s5 [0, 65535] { R304 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R304 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R306 += 1, R244 += 1, R94 += 1, R95 += 1 };
  s0 -> s2 [0, 65535] { R306 += 1, R243 += 1, R244 += 1 };
  s0 -> s3 [0, 65535] { R306 += 1, R244 += 1, R95 += 1, R96 += 1 };
  s0 -> s0 [0, 65535] { R305 += 1, R306 += 1 };
  s1 -> s4 [0, 65535] { R306 += 1 };
  s1 -> s1 [0, 65535] { R306 += 1, R244 += 1, R94 += 1, R95 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R306 += 1, R244 += 1, R95 += 1, R96 += 1 };
  s2 -> s1 [0, 65535] { R306 += 1, R244 += 1, R94 += 1, R95 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R306 += 1, R243 += 1, R244 += 1 };
  s2 -> s3 [0, 65535] { R306 += 1, R244 += 1, R95 += 1, R96 += 1 };
  s3 -> s4 [0, 65535] { R306 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R306 += 1, R244 += 1 };
  s3 -> s3 [0, 65535] { R306 += 1, R244 += 1, R95 += 1, R96 += 1 };
  s4 -> s4 [0, 65535] { R306 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R306 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R306 += 1, R244 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R308 += 1, R246 += 1, R101 += 1 };
  s0 -> s2 [0, 65535] { R308 += 1, R245 += 1, R246 += 1 };
  s0 -> s3 [0, 65535] { R308 += 1, R246 += 1, R100 += 1, R101 += 1 };
  s0 -> s4 [0, 65535] { R308 += 1, R246 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R307 += 1, R308 += 1 };
  s0 -> s1 [76, 65535] { R308 += 1, R246 += 1, R101 += 1 };
  s1 -> s1 [0, 74] { R308 += 1, R246 += 1, R101 += 1 };
  s1 -> s1 [0, 65535] { R308 += 1, R246 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R308 += 1 };
  s1 -> s1 [76, 65535] { R308 += 1, R246 += 1, R101 += 1 };
  s2 -> s1 [0, 74] { R308 += 1, R246 += 1, R101 += 1 };
  s2 -> s2 [0, 65535] { R308 += 1, R245 += 1, R246 += 1 };
  s2 -> s3 [0, 65535] { R308 += 1, R246 += 1, R100 += 1, R101 += 1 };
  s2 -> s4 [0, 65535] { R308 += 1, R246 += 1, R101 += 1, R102 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [76, 65535] { R308 += 1, R246 += 1, R101 += 1 };
  s3 -> s1 [0, 74] { R308 += 1, R246 += 1, R101 += 1 };
  s3 -> s3 [0, 65535] { R308 += 1, R246 += 1, R100 += 1, R101 += 1 };
  s3 -> s4 [0, 65535] { R308 += 1, R246 += 1, R101 += 1, R102 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R308 += 1 };
  s3 -> s1 [76, 65535] { R308 += 1, R246 += 1, R101 += 1 };
  s4 -> s1 [0, 74] { R308 += 1, R246 += 1, R101 += 1 };
  s4 -> s4 [0, 65535] { R308 += 1, R246 += 1, R101 += 1, R102 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R308 += 1 };
  s4 -> s7 [0, 65535] { R308 += 1, R246 += 1 };
  s4 -> s1 [76, 65535] { R308 += 1, R246 += 1, R101 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R308 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R308 += 1 };
  s7 -> s7 [0, 65535] { R308 += 1, R246 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R310 += 1, R248 += 1, R108 += 1, R110 += 1 };
  s0 -> s0 [0, 65535] { R309 += 1, R310 += 1 };
  s0 -> s2 [0, 65535] { R310 += 1, R247 += 1, R248 += 1 };
  s0 -> s3 [0, 65535] { R310 += 1, R248 += 1, R108 += 1 };
  s0 -> s4 [0, 65535] { R310 += 1, R248 += 1 };
  s1 -> s1 [0, 65535] { R310 += 1, R248 += 1, R108 += 1, R110 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R310 += 1, R248 += 1, R108 += 1 };
  s1 -> s4 [0, 65535] { R310 += 1, R248 += 1 };
  s1 -> s6 [0, 65535] { R310 += 1 };
  s2 -> s1 [0, 65535] { R310 += 1, R248 += 1, R108 += 1, R110 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R310 += 1, R247 += 1, R248 += 1 };
  s2 -> s3 [0, 65535] { R310 += 1, R248 += 1, R108 += 1 };
  s2 -> s4 [0, 65535] { R310 += 1, R248 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R310 += 1, R248 += 1, R108 += 1 };
  s3 -> s4 [0, 65535] { R310 += 1, R248 += 1 };
  s3 -> s6 [0, 65535] { R310 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R310 += 1, R248 += 1 };
  s4 -> s6 [0, 65535] { R310 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R310 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s0 [0, 65535] { R311 += 1, R312 += 1 };
  s0 -> s1 [0, 65535] { R312 += 1, R250 += 1 };
  s0 -> s2 [0, 65535] { R312 += 1, R249 += 1, R250 += 1 };
  s1 -> s4 [0, 65535] { R312 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R312 += 1, R250 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R312 += 1, R250 += 1 };
  s2 -> s2 [0, 65535] { R312 += 1, R249 += 1, R250 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R312 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R313 += 1, R314 += 1 };
  s0 -> s1 [0, 65535] { R314 += 1, R269 += 1, R270 += 1 };
  s0 -> s2 [0, 65535] { R314 += 1, R270 += 1, R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R314 += 1, R269 += 1, R270 += 1 };
  s1 -> s2 [0, 65535] { R314 += 1, R270 += 1, R21 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R314 += 1 };
  s2 -> s2 [0, 65535] { R314 += 1, R270 += 1, R21 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R314 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R316 += 1, R272 += 1 };
  s0 -> s0 [0, 65535] { R315 += 1, R316 += 1 };
  s0 -> s2 [0, 65535] { R316 += 1, R271 += 1, R272 += 1 };
  s0 -> s3 [70, 70] { R316 += 1, R272 += 1 };
  s0 -> s4 [70, 70] { R316 += 1, R272 += 1 };
  s0 -> s5 [75, 75] { R316 += 1, R272 += 1 };
  s0 -> s1 [76, 65535] { R316 += 1, R272 += 1 };
  s1 -> s1 [0, 69] { R316 += 1, R272 += 1 };
  s1 -> s3 [70, 70] { R316 += 1, R272 += 1 };
  s1 -> s4 [70, 70] { R316 += 1, R272 += 1 };
  s1 -> s5 [75, 75] { R316 += 1, R272 += 1 };
  s1 -> s1 [76, 65535] { R316 += 1, R272 += 1 };
  s2 -> s1 [0, 69] { R316 += 1, R272 += 1 };
  s2 -> s2 [0, 65535] { R316 += 1, R271 += 1, R272 += 1 };
  s2 -> s3 [70, 70] { R316 += 1, R272 += 1 };
  s2 -> s4 [70, 70] { R316 += 1, R272 += 1 };
  s2 -> s5 [75, 75] { R316 += 1, R272 += 1 };
  s2 -> s1 [76, 65535] { R316 += 1, R272 += 1 };
  s4 -> s4 [0, 70] { R316 += 1, R272 += 1 };
  s4 -> s7 [75, 75] { R316 += 1, R272 += 1 };
  s4 -> s4 [76, 65535] { R316 += 1, R272 += 1 };
  s5 -> s5 [0, 69] { R316 += 1, R272 += 1 };
  s5 -> s5 [0, 65535] { R316 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R316 += 1, R272 += 1 };
  s5 -> s8 [70, 70] { R316 += 1, R272 += 1 };
  s5 -> s5 [75, 65535] { R316 += 1, R272 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R316 += 1, R272 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R316 += 1 };
  s7 -> s7 [75, 65535] { R316 += 1, R272 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R316 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R318 += 1, R274 += 1, R83 += 1 };
  s0 -> s2 [0, 65535] { R318 += 1, R273 += 1, R274 += 1 };
  s0 -> s0 [0, 65535] { R317 += 1, R318 += 1 };
  s0 -> s3 [70, 70] { R318 += 1, R274 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R318 += 1, R274 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R318 += 1, R274 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R318 += 1, R274 += 1, R83 += 1 };
  s1 -> s1 [0, 65535] { R318 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R318 += 1, R274 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R318 += 1, R274 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R318 += 1, R274 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R318 += 1, R274 += 1, R83 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R318 += 1, R273 += 1, R274 += 1 };
  s2 -> s3 [70, 70] { R318 += 1, R274 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R318 += 1, R274 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R318 += 1, R274 += 1, R83 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R318 += 1, R274 += 1, R83 += 1 };
  s3 -> s6 [0, 65535] { R318 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R318 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R318 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R320 += 1, R276 += 1, R85 += 1 };
  s0 -> s2 [0, 65535] { R320 += 1, R275 += 1, R276 += 1 };
  s0 -> s0 [0, 65535] { R319 += 1, R320 += 1 };
  s0 -> s3 [70, 70] { R320 += 1, R276 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R320 += 1, R276 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R320 += 1, R276 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R320 += 1, R276 += 1, R85 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R320 += 1 };
  s1 -> s3 [70, 70] { R320 += 1, R276 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R320 += 1, R276 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R320 += 1, R276 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R320 += 1, R276 += 1, R85 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R320 += 1, R275 += 1, R276 += 1 };
  s2 -> s3 [70, 70] { R320 += 1, R276 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R320 += 1, R276 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R320 += 1, R276 += 1, R85 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R320 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R320 += 1 };
  s4 -> s4 [0, 65535] { R320 += 1, R276 += 1, R85 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R320 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R322 += 1, R278 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R322 += 1, R278 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R321 += 1, R322 += 1 };
  s0 -> s3 [0, 65535] { R322 += 1, R277 += 1, R278 += 1 };
  s0 -> s4 [70, 70] { R322 += 1, R278 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R322 += 1, R278 += 1, R87 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R322 += 1, R278 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R322 += 1, R278 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 74] { R322 += 1, R278 += 1, R88 += 1 };
  s0 -> s2 [71, 65535] { R322 += 1, R278 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R322 += 1, R278 += 1, R88 += 1 };
  s0 -> s1 [76, 65535] { R322 += 1, R278 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R322 += 1, R278 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R322 += 1, R278 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R322 += 1, R278 += 1, R88 += 1 };
  s1 -> s1 [71, 74] { R322 += 1, R278 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R322 += 1, R278 += 1, R88 += 1 };
  s1 -> s1 [76, 65535] { R322 += 1, R278 += 1, R88 += 1 };
  s2 -> s1 [0, 69] { R322 += 1, R278 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R322 += 1, R278 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R322 += 1, R278 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R322 += 1, R278 += 1, R87 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R322 += 1, R278 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R322 += 1, R278 += 1, R87 += 1, R88 += 1 };
  s2 -> s1 [71, 74] { R322 += 1, R278 += 1, R88 += 1 };
  s2 -> s2 [71, 65535] { R322 += 1, R278 += 1, R87 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R322 += 1, R278 += 1, R88 += 1 };
  s2 -> s1 [76, 65535] { R322 += 1, R278 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R322 += 1, R278 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R322 += 1, R278 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R322 += 1, R277 += 1, R278 += 1 };
  s3 -> s4 [70, 70] { R322 += 1, R278 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R322 += 1, R278 += 1, R87 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R322 += 1, R278 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R322 += 1, R278 += 1, R87 += 1, R88 += 1 };
  s3 -> s1 [71, 74] { R322 += 1, R278 += 1, R88 += 1 };
  s3 -> s2 [71, 65535] { R322 += 1, R278 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R322 += 1, R278 += 1, R88 += 1 };
  s3 -> s1 [76, 65535] { R322 += 1, R278 += 1, R88 += 1 };
  s6 -> s6 [0, 74] { R322 += 1, R278 += 1, R88 += 1 };
  s6 -> s10 [75, 75] { R322 += 1, R278 += 1, R88 += 1 };
  s6 -> s6 [76, 65535] { R322 += 1, R278 += 1, R88 += 1 };
  s7 -> s6 [0, 74] { R322 += 1, R278 += 1, R88 += 1 };
  s7 -> s7 [0, 65535] { R322 += 1, R278 += 1, R87 += 1, R88 += 1 };
  s7 -> s10 [75, 75] { R322 += 1, R278 += 1, R88 += 1 };
  s7 -> s6 [76, 65535] { R322 += 1, R278 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R322 += 1, R278 += 1, R88 += 1 };
  s8 -> s8 [0, 65535] { R322 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R322 += 1, R278 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R322 += 1, R278 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R322 += 1, R278 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R322 += 1, R278 += 1, R88 += 1 };
  s10 -> s12 [0, 65535] { R322 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R322 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R322 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R324 += 1, R280 += 1, R91 += 1, R92 += 1 };
  s0 -> s2 [0, 65535] { R324 += 1, R279 += 1, R280 += 1 };
  s0 -> s0 [0, 65535] { R323 += 1, R324 += 1 };
  s0 -> s3 [70, 70] { R324 += 1, R280 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R324 += 1, R280 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R324 += 1, R280 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R324 += 1, R280 += 1, R91 += 1, R92 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R324 += 1 };
  s1 -> s3 [70, 70] { R324 += 1, R280 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R324 += 1, R280 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R324 += 1, R280 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R324 += 1, R280 += 1, R91 += 1, R92 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R324 += 1, R279 += 1, R280 += 1 };
  s2 -> s3 [70, 70] { R324 += 1, R280 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R324 += 1, R280 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R324 += 1, R280 += 1, R91 += 1, R92 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R324 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R324 += 1 };
  s4 -> s4 [0, 65535] { R324 += 1, R280 += 1, R91 += 1, R92 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R324 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R326 += 1, R282 += 1, R97 += 1, R98 += 1 };
  s0 -> s2 [0, 65535] { R326 += 1, R281 += 1, R282 += 1 };
  s0 -> s0 [0, 65535] { R325 += 1, R326 += 1 };
  s0 -> s3 [70, 70] { R326 += 1, R282 += 1, R97 += 1, R98 += 1 };
  s0 -> s4 [70, 70] { R326 += 1, R282 += 1, R97 += 1, R98 += 1 };
  s0 -> s1 [71, 65535] { R326 += 1, R282 += 1, R97 += 1, R98 += 1 };
  s1 -> s1 [0, 69] { R326 += 1, R282 += 1, R97 += 1, R98 += 1 };
  s1 -> s1 [0, 65535] { R326 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R326 += 1, R282 += 1, R97 += 1, R98 += 1 };
  s1 -> s4 [70, 70] { R326 += 1, R282 += 1, R97 += 1, R98 += 1 };
  s1 -> s1 [71, 65535] { R326 += 1, R282 += 1, R97 += 1, R98 += 1 };
  s2 -> s1 [0, 69] { R326 += 1, R282 += 1, R97 += 1, R98 += 1 };
  s2 -> s2 [0, 65535] { R326 += 1, R281 += 1, R282 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R326 += 1, R282 += 1, R97 += 1, R98 += 1 };
  s2 -> s4 [70, 70] { R326 += 1, R282 += 1, R97 += 1, R98 += 1 };
  s2 -> s1 [71, 65535] { R326 += 1, R282 += 1, R97 += 1, R98 += 1 };
  s3 -> s3 [0, 65535] { R326 += 1, R282 += 1, R97 += 1, R98 += 1 };
  s3 -> s6 [0, 65535] { R326 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R326 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R326 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R328 += 1, R284 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s0 -> s2 [0, 69] { R328 += 1, R284 += 1, R103 += 1, R104 += 1 };
  s0 -> s3 [0, 69] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s0 -> s0 [0, 65535] { R327 += 1, R328 += 1 };
  s0 -> s4 [0, 65535] { R328 += 1, R283 += 1, R284 += 1 };
  s0 -> s5 [70, 70] { R328 += 1, R284 += 1, R103 += 1, R104 += 1 };
  s0 -> s6 [70, 70] { R328 += 1, R284 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s0 -> s7 [70, 70] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s0 -> s8 [70, 70] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s0 -> s9 [70, 70] { R328 += 1, R284 += 1, R103 += 1, R104 += 1 };
  s0 -> s10 [70, 70] { R328 += 1, R284 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s0 -> s3 [71, 74] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s0 -> s1 [71, 65535] { R328 += 1, R284 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s0 -> s2 [71, 65535] { R328 += 1, R284 += 1, R103 += 1, R104 += 1 };
  s0 -> s11 [75, 75] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s0 -> s3 [76, 65535] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s1 -> s1 [0, 69] { R328 += 1, R284 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s1 -> s3 [0, 69] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s1 -> s6 [70, 70] { R328 += 1, R284 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s1 -> s7 [70, 70] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s1 -> s8 [70, 70] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s1 -> s10 [70, 70] { R328 += 1, R284 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s1 -> s3 [71, 74] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s1 -> s1 [71, 65535] { R328 += 1, R284 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s1 -> s11 [75, 75] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s1 -> s3 [76, 65535] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s2 -> s1 [0, 69] { R328 += 1, R284 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s2 -> s2 [0, 69] { R328 += 1, R284 += 1, R103 += 1, R104 += 1 };
  s2 -> s3 [0, 69] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s2 -> s5 [70, 70] { R328 += 1, R284 += 1, R103 += 1, R104 += 1 };
  s2 -> s6 [70, 70] { R328 += 1, R284 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s2 -> s7 [70, 70] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s2 -> s8 [70, 70] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s2 -> s9 [70, 70] { R328 += 1, R284 += 1, R103 += 1, R104 += 1 };
  s2 -> s10 [70, 70] { R328 += 1, R284 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s2 -> s3 [71, 74] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s2 -> s1 [71, 65535] { R328 += 1, R284 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s2 -> s2 [71, 65535] { R328 += 1, R284 += 1, R103 += 1, R104 += 1 };
  s2 -> s11 [75, 75] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s2 -> s3 [76, 65535] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s3 -> s3 [0, 69] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s3 -> s7 [70, 70] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s3 -> s8 [70, 70] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s3 -> s3 [71, 74] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s3 -> s11 [75, 75] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s3 -> s3 [76, 65535] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s4 -> s1 [0, 69] { R328 += 1, R284 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s4 -> s2 [0, 69] { R328 += 1, R284 += 1, R103 += 1, R104 += 1 };
  s4 -> s3 [0, 69] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s4 -> s4 [0, 65535] { R328 += 1, R283 += 1, R284 += 1 };
  s4 -> s5 [70, 70] { R328 += 1, R284 += 1, R103 += 1, R104 += 1 };
  s4 -> s6 [70, 70] { R328 += 1, R284 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s4 -> s7 [70, 70] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s4 -> s8 [70, 70] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s4 -> s9 [70, 70] { R328 += 1, R284 += 1, R103 += 1, R104 += 1 };
  s4 -> s10 [70, 70] { R328 += 1, R284 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s4 -> s3 [71, 74] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s4 -> s1 [71, 65535] { R328 += 1, R284 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s4 -> s2 [71, 65535] { R328 += 1, R284 += 1, R103 += 1, R104 += 1 };
  s4 -> s11 [75, 75] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s4 -> s3 [76, 65535] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s5 -> s8 [0, 74] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s5 -> s5 [0, 65535] { R328 += 1, R284 += 1, R103 += 1, R104 += 1 };
  s5 -> s10 [0, 65535] { R328 += 1, R284 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s5 -> s13 [75, 75] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s5 -> s8 [76, 65535] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s8 -> s8 [0, 74] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s8 -> s13 [75, 75] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s8 -> s8 [76, 65535] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s10 -> s8 [0, 74] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s10 -> s10 [0, 65535] { R328 += 1, R284 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s10 -> s13 [75, 75] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s10 -> s8 [76, 65535] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s11 -> s11 [0, 69] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s11 [0, 65535] { R328 += 1 };
  s11 -> s13 [70, 70] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s11 -> s14 [70, 70] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s11 -> s11 [71, 65535] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s15 [0, 65535] { R328 += 1 };
  s13 -> s13 [0, 65535] { R328 += 1, R284 += 1, R104 += 1, R106 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R328 += 1 };
  s15 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R328 += 1 };
  accepting s12, s13, s14, s15, s11;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R330 += 1, R286 += 1, R221 += 1, R222 += 1 };
  s0 -> s2 [0, 69] { R330 += 1, R286 += 1, R222 += 1, R224 += 1, R225 += 1 };
  s0 -> s3 [0, 69] { R330 += 1, R286 += 1, R222 += 1, R223 += 1, R224 += 1 };
  s0 -> s0 [0, 65535] { R329 += 1, R330 += 1 };
  s0 -> s4 [0, 65535] { R330 += 1, R285 += 1, R286 += 1 };
  s0 -> s5 [70, 70] { R330 += 1, R286 += 1, R222 += 1, R224 += 1, R225 += 1 };
  s0 -> s6 [70, 70] { R330 += 1, R286 += 1, R221 += 1, R222 += 1 };
  s0 -> s7 [70, 70] { R330 += 1, R286 += 1, R222 += 1, R223 += 1, R224 += 1 };
  s0 -> s8 [70, 70] { R330 += 1, R286 += 1, R222 += 1, R224 += 1, R225 += 1 };
  s0 -> s9 [70, 70] { R330 += 1, R286 += 1, R222 += 1, R223 += 1, R224 += 1 };
  s0 -> s10 [70, 70] { R330 += 1, R286 += 1, R221 += 1, R222 += 1 };
  s0 -> s1 [71, 65535] { R330 += 1, R286 += 1, R221 += 1, R222 += 1 };
  s0 -> s2 [71, 65535] { R330 += 1, R286 += 1, R222 += 1, R224 += 1, R225 += 1 };
  s0 -> s3 [71, 65535] { R330 += 1, R286 += 1, R222 += 1, R223 += 1, R224 += 1 };
  s1 -> s1 [0, 69] { R330 += 1, R286 += 1, R221 += 1, R222 += 1 };
  s1 -> s2 [0, 69] { R330 += 1, R286 += 1, R222 += 1, R224 += 1, R225 += 1 };
  s1 -> s3 [0, 69] { R330 += 1, R286 += 1, R222 += 1, R223 += 1, R224 += 1 };
  s1 -> s5 [70, 70] { R330 += 1, R286 += 1, R222 += 1, R224 += 1, R225 += 1 };
  s1 -> s6 [70, 70] { R330 += 1, R286 += 1, R221 += 1, R222 += 1 };
  s1 -> s7 [70, 70] { R330 += 1, R286 += 1, R222 += 1, R223 += 1, R224 += 1 };
  s1 -> s8 [70, 70] { R330 += 1, R286 += 1, R222 += 1, R224 += 1, R225 += 1 };
  s1 -> s9 [70, 70] { R330 += 1, R286 += 1, R222 += 1, R223 += 1, R224 += 1 };
  s1 -> s10 [70, 70] { R330 += 1, R286 += 1, R221 += 1, R222 += 1 };
  s1 -> s1 [71, 65535] { R330 += 1, R286 += 1, R221 += 1, R222 += 1 };
  s1 -> s2 [71, 65535] { R330 += 1, R286 += 1, R222 += 1, R224 += 1, R225 += 1 };
  s1 -> s3 [71, 65535] { R330 += 1, R286 += 1, R222 += 1, R223 += 1, R224 += 1 };
  s2 -> s2 [0, 69] { R330 += 1, R286 += 1, R222 += 1, R224 += 1, R225 += 1 };
  s2 -> s15 [0, 69] { R330 += 1, R286 += 1 };
  s2 -> s17 [0, 69] { R330 += 1, R286 += 1, R222 += 1 };
  s2 -> s16 [70, 70] { R330 += 1, R286 += 1 };
  s2 -> s5 [70, 70] { R330 += 1, R286 += 1, R222 += 1, R224 += 1, R225 += 1 };
  s2 -> s14 [70, 70] { R330 += 1, R286 += 1, R222 += 1 };
  s2 -> s18 [70, 70] { R330 += 1, R286 += 1, R222 += 1 };
  s2 -> s8 [70, 70] { R330 += 1, R286 += 1, R222 += 1, R224 += 1, R225 += 1 };
  s2 -> s11 [70, 70] { R330 += 1, R286 += 1 };
  s2 -> s2 [71, 65535] { R330 += 1, R286 += 1, R222 += 1, R224 += 1, R225 += 1 };
  s2 -> s15 [71, 65535] { R330 += 1, R286 += 1 };
  s2 -> s17 [71, 65535] { R330 += 1, R286 += 1, R222 += 1 };
  s3 -> s2 [0, 69] { R330 += 1, R286 += 1, R222 += 1, R224 += 1, R225 += 1 };
  s3 -> s15 [0, 69] { R330 += 1, R286 += 1 };
  s3 -> s3 [0, 69] { R330 += 1, R286 += 1, R222 += 1, R223 += 1, R224 += 1 };
  s3 -> s16 [70, 70] { R330 += 1, R286 += 1 };
  s3 -> s5 [70, 70] { R330 += 1, R286 += 1, R222 += 1, R224 += 1, R225 += 1 };
  s3 -> s7 [70, 70] { R330 += 1, R286 += 1, R222 += 1, R223 += 1, R224 += 1 };
  s3 -> s8 [70, 70] { R330 += 1, R286 += 1, R222 += 1, R224 += 1, R225 += 1 };
  s3 -> s9 [70, 70] { R330 += 1, R286 += 1, R222 += 1, R223 += 1, R224 += 1 };
  s3 -> s11 [70, 70] { R330 += 1, R286 += 1 };
  s3 -> s2 [71, 65535] { R330 += 1, R286 += 1, R222 += 1, R224 += 1, R225 += 1 };
  s3 -> s15 [71, 65535] { R330 += 1, R286 += 1 };
  s3 -> s3 [71, 65535] { R330 += 1, R286 += 1, R222 += 1, R223 += 1, R224 += 1 };
  s4 -> s1 [0, 69] { R330 += 1, R286 += 1, R221 += 1, R222 += 1 };
  s4 -> s2 [0, 69] { R330 += 1, R286 += 1, R222 += 1, R224 += 1, R225 += 1 };
  s4 -> s3 [0, 69] { R330 += 1, R286 += 1, R222 += 1, R223 += 1, R224 += 1 };
  s4 -> s4 [0, 65535] { R330 += 1, R285 += 1, R286 += 1 };
  s4 -> s5 [70, 70] { R330 += 1, R286 += 1, R222 += 1, R224 += 1, R225 += 1 };
  s4 -> s6 [70, 70] { R330 += 1, R286 += 1, R221 += 1, R222 += 1 };
  s4 -> s7 [70, 70] { R330 += 1, R286 += 1, R222 += 1, R223 += 1, R224 += 1 };
  s4 -> s8 [70, 70] { R330 += 1, R286 += 1, R222 += 1, R224 += 1, R225 += 1 };
  s4 -> s9 [70, 70] { R330 += 1, R286 += 1, R222 += 1, R223 += 1, R224 += 1 };
  s4 -> s10 [70, 70] { R330 += 1, R286 += 1, R221 += 1, R222 += 1 };
  s4 -> s1 [71, 65535] { R330 += 1, R286 += 1, R221 += 1, R222 += 1 };
  s4 -> s2 [71, 65535] { R330 += 1, R286 += 1, R222 += 1, R224 += 1, R225 += 1 };
  s4 -> s3 [71, 65535] { R330 += 1, R286 += 1, R222 += 1, R223 += 1, R224 += 1 };
  s8 -> s14 [0, 65535] { R330 += 1, R286 += 1, R222 += 1 };
  s8 -> s8 [0, 65535] { R330 += 1, R286 += 1, R222 += 1, R224 += 1, R225 += 1 };
  s8 -> s11 [0, 65535] { R330 += 1, R286 += 1 };
  s9 -> s8 [0, 65535] { R330 += 1, R286 += 1, R222 += 1, R224 += 1, R225 += 1 };
  s9 -> s9 [0, 65535] { R330 += 1, R286 += 1, R222 += 1, R223 += 1, R224 += 1 };
  s9 -> s11 [0, 65535] { R330 += 1, R286 += 1 };
  s10 -> s8 [0, 65535] { R330 += 1, R286 += 1, R222 += 1, R224 += 1, R225 += 1 };
  s10 -> s9 [0, 65535] { R330 += 1, R286 += 1, R222 += 1, R223 += 1, R224 += 1 };
  s10 -> s10 [0, 65535] { R330 += 1, R286 += 1, R221 += 1, R222 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [0, 65535] { R330 += 1 };
  s11 -> s11 [0, 65535] { R330 += 1, R286 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R330 += 1 };
  s14 -> s14 [0, 65535] { R330 += 1, R286 += 1, R222 += 1 };
  s14 -> s11 [0, 65535] { R330 += 1, R286 += 1 };
  s15 -> s15 [0, 69] { R330 += 1, R286 += 1 };
  s15 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R330 += 1 };
  s15 -> s16 [70, 70] { R330 += 1, R286 += 1 };
  s15 -> s11 [70, 70] { R330 += 1, R286 += 1 };
  s15 -> s15 [71, 65535] { R330 += 1, R286 += 1 };
  s16 -> s12 [0, 65535];
  s16 -> s16 [0, 65535] { R330 += 1 };
  s17 -> s15 [0, 69] { R330 += 1, R286 += 1 };
  s17 -> s17 [0, 69] { R330 += 1, R286 += 1, R222 += 1 };
  s17 -> s16 [70, 70] { R330 += 1, R286 += 1 };
  s17 -> s14 [70, 70] { R330 += 1, R286 += 1, R222 += 1 };
  s17 -> s18 [70, 70] { R330 += 1, R286 += 1, R222 += 1 };
  s17 -> s11 [70, 70] { R330 += 1, R286 += 1 };
  s17 -> s15 [71, 65535] { R330 += 1, R286 += 1 };
  s17 -> s17 [71, 65535] { R330 += 1, R286 += 1, R222 += 1 };
  accepting s16, s12, s13, s15, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R330 && R23 - R330 = -1 && R24 = R330 && R25 - R330 = -1 && R26 = R330 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R108 + -1*R104 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R108 + -1*R104 - R66 = 0 && R55 + R96 + R93 + -1*R110 + -1*R106 - R68 = 0 && R65 + R107 + R103 = 0 && R67 + R109 + R105 = 0 && R271 = 0 && R272 = 0 && R277 = 0 && R278 = 0 && R283 = 0 && R284 = 0 && R285 = 0 && R286 = 0 && R287 = 0 && R288 = R330 && R289 = 0 && R290 = R330 && R291 = 0 && R292 = R330 && R293 = 0 && R294 = R330 && R295 = 0 && R296 = R330 && R297 = 0 && R298 = R330 && R299 = 0 && R300 = R330 && R301 = 0 && R302 = R330 && R303 = 0 && R304 = R330 && R305 = 0 && R306 = R330 && R307 = 0 && R308 = R330 && R309 = 0 && R310 = R330 && R311 = 0 && R312 = R330 && R313 = 0 && R314 = R330 && R315 = 0 && R316 = R330 && R317 = 0 && R318 = R330 && R319 = 0 && R320 = R330 && R321 = 0 && R322 = R330 && R323 = 0 && R324 = R330 && R325 = 0 && R326 = R330 && R327 = 0 && R328 = R330 && R329 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R102 + R99 < 1 && -1*R108 + -1*R104 - R66 < 1 && -1*R110 + -1*R106 - R68 < 1 && 0 < R330 && (R2 != 0 || R20 = 0 || (R231 = 0 && R232 = 0)) && (R2 != 0 || R20 = 0 || (R233 = 0 && R234 = 0)) && (R2 != 0 || R20 = 0 || (R235 = 0 && R236 = 0)) && (R2 != 0 || R20 = 0 || (R237 = 0 && R238 = 0)) && (R2 != 0 || R20 = 0 || (R239 = 0 && R240 = 0)) && (R2 != 0 || R20 = 0 || (R241 = 0 && R242 = 0)) && (R2 != 0 || R20 = 0 || (R243 = 0 && R244 = 0)) && (R2 != 0 || R20 = 0 || (R245 = 0 && R246 = 0)) && (R2 != 0 || R20 = 0 || (R247 = 0 && R248 = 0)) && (R2 != 0 || R20 = 0 || (R249 = 0 && R250 = 0)) && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R108 + -1*R104 - R66 = 0 || R66 + R108 + R104 < 1) && (R59 + R100 + R97 != 0 || R60 + R101 + R98 + -1*R108 + -1*R104 - R66 = 0 || R66 + R108 + R104 < 1) && (R66 + R108 + R104 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R110 + R106 < 1) && (R53 + R94 + R91 = 0 || R68 + R110 + R106 < 1))) && (R66 + R108 + R104 != 0 || ((R59 + R100 + R97 != 0 || R60 + R101 + R98 = 0 || R68 + R110 + R106 < 1) && (R59 + R100 + R97 = 0 || R68 + R110 + R106 < 1))) && (R66 + R108 + R104 != 0 || ((R73 + R226 + R221 != 0 || R74 + R227 + R222 = 0 || R68 + R110 + R106 < 1) && (R73 + R226 + R221 = 0 || R68 + R110 + R106 < 1))) && (R68 + R110 + R106 != 0 || R77 + R230 + R225 = 0 || (R75 + R228 + R223 = 0 && R76 + R229 + R224 = 0)) && (R73 + R226 + R221 != 0 || R66 + R108 + R104 + -1*R227 + -1*R222 - R74 = 0 || R66 + R108 + R104 < 1) && (R75 + R228 + R223 != 0 || R68 + R110 + R106 + -1*R229 + -1*R224 - R76 = 0 || R68 + R110 + R106 < 1) && (R231 != 0 || R2 = R232 || R2 < 1) && (R233 != 0 || R2 = R234 || R2 < 1) && (R235 != 0 || R2 = R236 || R2 < 1) && (R237 != 0 || R2 = R238 || R2 < 1) && (R239 != 0 || R2 = R240 || R2 < 1) && (R241 != 0 || R2 = R242 || R2 < 1) && (R243 != 0 || R2 = R244 || R2 < 1) && (R245 != 0 || R2 = R246 || R2 < 1) && (R247 != 0 || R2 = R248 || R2 < 1) && (R249 != 0 || R2 = R250 || R2 < 1) && (R21 = 0 || (R269 = 0 && R270 = 0)) && (R21 = 0 || (R273 = 0 && R274 = 0)) && (R21 = 0 || (R275 = 0 && R276 = 0)) && (R21 = 0 || (R279 = 0 && R280 = 0)) && (R21 = 0 || (R281 = 0 && R282 = 0)) && (R22 = 0 || (R251 = 0 && R252 = 0)) && (R22 = 0 || (R253 = 0 && R254 = 0)) && (R22 = 0 || (R255 = 0 && R256 = 0)) && (R22 = 0 || (R257 = 0 && R258 = 0)) && (R22 = 0 || (R259 = 0 && R260 = 0)) && (R22 = 0 || (R261 = 0 && R262 = 0)) && (R22 = 0 || (R263 = 0 && R264 = 0)) && (R22 = 0 || (R265 = 0 && R266 = 0)) && (R22 = 0 || (R267 = 0 && R268 = 0)) && (R53 + R94 + R91 = 0 || R66 + R108 + R104 < 1) && (R59 + R100 + R97 = 0 || R66 + R108 + R104 < 1) && (R73 + R226 + R221 = 0 || R66 + R108 + R104 < 1) && (R75 + R228 + R223 = 0 || R68 + R110 + R106 < 1) && (R231 = 0 || R2 < 1) && (R233 = 0 || R2 < 1) && (R235 = 0 || R2 < 1) && (R237 = 0 || R2 < 1) && (R239 = 0 || R2 < 1) && (R241 = 0 || R2 < 1) && (R243 = 0 || R2 < 1) && (R245 = 0 || R2 < 1) && (R247 = 0 || R2 < 1) && (R249 = 0 || R2 < 1);
// End of Parikh automata intersection problem
