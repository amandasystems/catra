// Parikh automata intersection problem, generated by OSTRICH+
counter int R10159, R10160, R10161, R10162, R10163, R10164, R11839, R11840, R11841, R11842, R11843, R11844, R11845, R11846, R11957, R11958, R11959, R11960, R11961, R11962, R11963, R11964, R11965, R11966, R11967, R11968, R11969, R11970, R11971, R11972, R11973, R11974, R11975, R11976, R11977, R11978, R11979, R11980, R11981, R11982, R11983, R11984, R11985, R11986, R11987, R11988, R11989, R11990, R11991, R11992, R11993, R11994, R11995, R11996, R11997, R11998, R11999, R12, R12000, R12001, R12002, R12003, R12004, R12005, R12006, R12007, R12008, R12009, R12010, R12011, R12012, R12013, R12014, R12015, R12016, R12017, R12018, R12019, R12020, R12021, R12022, R12023, R12024, R12025, R12026, R12027, R12028, R12029, R12030, R12031, R12032, R12033, R12034, R12035, R12036, R12037, R12038, R12039, R12040, R12041, R12042, R12043, R12044, R12045, R12046, R12047, R12048, R12049, R12050, R12051, R12052, R12053, R12054, R12055, R12056, R12057, R12058, R12059, R12060, R12061, R12062, R12063, R12064, R12065, R12066, R15, R16, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R4, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R11987 += 1, R11988 += 1 };
  s0 -> s1 [0, 65535] { R11988 += 1, R22 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R11988 += 1, R22 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R11990 += 1 };
  s0 -> s0 [0, 65535] { R11989 += 1, R11990 += 1 };
  s0 -> s2 [70, 70] { R11990 += 1 };
  s0 -> s3 [70, 70] { R11990 += 1 };
  s0 -> s1 [76, 65535] { R11990 += 1 };
  s1 -> s1 [0, 69] { R11990 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11990 += 1 };
  s1 -> s3 [70, 70] { R11990 += 1 };
  s1 -> s1 [76, 65535] { R11990 += 1 };
  s2 -> s2 [0, 70] { R11990 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R11990 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R11992 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R11991 += 1, R11992 += 1 };
  s0 -> s2 [70, 70] { R11992 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R11992 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R11992 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R11992 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11992 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R11992 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R11992 += 1, R45 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R11992 += 1, R45 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R11994 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R11993 += 1, R11994 += 1 };
  s0 -> s2 [70, 70] { R11994 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R11994 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R11994 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R11994 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11994 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R11994 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R11994 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R11994 += 1, R47 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R11996 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R11995 += 1, R11996 += 1 };
  s0 -> s2 [70, 70] { R11996 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R11996 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R11996 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R11996 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11996 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R11996 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R11996 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535] { R11996 += 1, R49 += 1, R50 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R11998 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R11997 += 1, R11998 += 1 };
  s0 -> s2 [70, 70] { R11998 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R11998 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R11998 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R11998 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11998 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R11998 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R11998 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535] { R11998 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R12000 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R11999 += 1, R12000 += 1 };
  s0 -> s2 [70, 70] { R12000 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R12000 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R12000 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R12000 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R12000 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R12000 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R12000 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R12000 += 1, R59 += 1, R60 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R12002 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R12001 += 1, R12002 += 1 };
  s0 -> s2 [70, 70] { R12002 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R12002 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R12002 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R12002 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R12002 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R12002 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R12002 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R12002 += 1, R65 += 1, R66 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R12004 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R12003 += 1, R12004 += 1 };
  s0 -> s2 [70, 70] { R12004 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R12004 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R12004 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R12004 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R12004 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R12004 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R12004 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R12004 += 1, R73 += 1, R74 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R12024 += 1 };
  s0 -> s0 [0, 65535] { R12023 += 1, R12024 += 1 };
  s0 -> s2 [70, 70] { R12024 += 1 };
  s0 -> s1 [71, 65535] { R12024 += 1 };
  s1 -> s1 [0, 69] { R12024 += 1 };
  s1 -> s2 [70, 70] { R12024 += 1 };
  s1 -> s1 [71, 65535] { R12024 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R12024 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R12026 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R12025 += 1, R12026 += 1 };
  s1 -> s1 [0, 65535] { R12026 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R12028 += 1 };
  s0 -> s2 [0, 65535] { R12028 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R12027 += 1, R12028 += 1 };
  s0 -> s3 [70, 70] { R12028 += 1 };
  s0 -> s1 [71, 65535] { R12028 += 1 };
  s1 -> s1 [0, 69] { R12028 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R12028 += 1 };
  s1 -> s1 [71, 65535] { R12028 += 1 };
  s2 -> s1 [0, 69] { R12028 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R12028 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R12028 += 1 };
  s2 -> s1 [71, 65535] { R12028 += 1 };
  s3 -> s3 [0, 65535] { R12028 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R12030 += 1, R11968 += 1 };
  s0 -> s2 [0, 65535] { R12030 += 1, R11967 += 1, R11968 += 1 };
  s0 -> s0 [0, 65535] { R12029 += 1, R12030 += 1 };
  s0 -> s1 [71, 65535] { R12030 += 1, R11968 += 1 };
  s1 -> s1 [0, 69] { R12030 += 1, R11968 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R12030 += 1 };
  s1 -> s1 [71, 65535] { R12030 += 1, R11968 += 1 };
  s2 -> s1 [0, 69] { R12030 += 1, R11968 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R12030 += 1, R11967 += 1, R11968 += 1 };
  s2 -> s1 [71, 65535] { R12030 += 1, R11968 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R12032 += 1, R11969 += 1, R11970 += 1 };
  s0 -> s0 [0, 65535] { R12031 += 1, R12032 += 1 };
  s0 -> s2 [0, 65535] { R12032 += 1, R11970 += 1, R20 += 1 };
  s1 -> s1 [0, 65535] { R12032 += 1, R11969 += 1, R11970 += 1 };
  s1 -> s2 [0, 65535] { R12032 += 1, R11970 += 1, R20 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R12032 += 1 };
  s2 -> s2 [0, 65535] { R12032 += 1, R11970 += 1, R20 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R12032 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R12034 += 1, R11972 += 1 };
  s0 -> s2 [0, 65535] { R12034 += 1, R11971 += 1, R11972 += 1 };
  s0 -> s0 [0, 65535] { R12033 += 1, R12034 += 1 };
  s0 -> s1 [75, 65535] { R12034 += 1, R11972 += 1 };
  s1 -> s1 [0, 70] { R12034 += 1, R11972 += 1 };
  s1 -> s1 [0, 65535] { R12034 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R12034 += 1, R11972 += 1 };
  s2 -> s1 [0, 70] { R12034 += 1, R11972 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R12034 += 1, R11971 += 1, R11972 += 1 };
  s2 -> s1 [75, 65535] { R12034 += 1, R11972 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R12036 += 1, R11973 += 1, R11974 += 1 };
  s0 -> s2 [0, 65535] { R12036 += 1, R11974 += 1, R84 += 1 };
  s0 -> s0 [0, 65535] { R12035 += 1, R12036 += 1 };
  s1 -> s1 [0, 65535] { R12036 += 1, R11973 += 1, R11974 += 1 };
  s1 -> s2 [0, 65535] { R12036 += 1, R11974 += 1, R84 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R12036 += 1, R11974 += 1, R84 += 1 };
  s2 -> s3 [0, 65535] { R12036 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R12036 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R12038 += 1, R11976 += 1 };
  s0 -> s0 [0, 65535] { R12037 += 1, R12038 += 1 };
  s0 -> s2 [0, 65535] { R12038 += 1, R11975 += 1, R11976 += 1 };
  s0 -> s3 [0, 65535] { R12038 += 1, R11976 += 1, R86 += 1 };
  s0 -> s1 [76, 65535] { R12038 += 1, R11976 += 1 };
  s1 -> s1 [0, 74] { R12038 += 1, R11976 += 1 };
  s1 -> s1 [0, 65535] { R12038 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [76, 65535] { R12038 += 1, R11976 += 1 };
  s2 -> s1 [0, 74] { R12038 += 1, R11976 += 1 };
  s2 -> s2 [0, 65535] { R12038 += 1, R11975 += 1, R11976 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R12038 += 1, R11976 += 1, R86 += 1 };
  s2 -> s1 [76, 65535] { R12038 += 1, R11976 += 1 };
  s3 -> s1 [0, 74] { R12038 += 1, R11976 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R12038 += 1, R11976 += 1, R86 += 1 };
  s3 -> s5 [0, 65535] { R12038 += 1 };
  s3 -> s1 [76, 65535] { R12038 += 1, R11976 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R12038 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R12040 += 1, R11978 += 1 };
  s0 -> s2 [0, 65535] { R12040 += 1, R11978 += 1, R90 += 1 };
  s0 -> s0 [0, 65535] { R12039 += 1, R12040 += 1 };
  s0 -> s3 [0, 65535] { R12040 += 1, R11977 += 1, R11978 += 1 };
  s1 -> s1 [0, 65535] { R12040 += 1, R11978 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R12040 += 1 };
  s2 -> s1 [0, 65535] { R12040 += 1, R11978 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R12040 += 1, R11978 += 1, R90 += 1 };
  s2 -> s5 [0, 65535] { R12040 += 1 };
  s3 -> s1 [0, 65535] { R12040 += 1, R11978 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R12040 += 1, R11978 += 1, R90 += 1 };
  s3 -> s3 [0, 65535] { R12040 += 1, R11977 += 1, R11978 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R12040 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R12042 += 1, R11979 += 1, R11980 += 1 };
  s0 -> s0 [0, 65535] { R12041 += 1, R12042 += 1 };
  s0 -> s2 [0, 65535] { R12042 += 1, R11980 += 1, R95 += 1, R96 += 1 };
  s0 -> s3 [0, 65535] { R12042 += 1, R11980 += 1, R94 += 1, R95 += 1 };
  s1 -> s1 [0, 65535] { R12042 += 1, R11979 += 1, R11980 += 1 };
  s1 -> s2 [0, 65535] { R12042 += 1, R11980 += 1, R95 += 1, R96 += 1 };
  s1 -> s3 [0, 65535] { R12042 += 1, R11980 += 1, R94 += 1, R95 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s4 [0, 65535] { R12042 += 1 };
  s2 -> s6 [0, 65535] { R12042 += 1, R11980 += 1 };
  s2 -> s2 [0, 65535] { R12042 += 1, R11980 += 1, R95 += 1, R96 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R12042 += 1 };
  s3 -> s2 [0, 65535] { R12042 += 1, R11980 += 1, R95 += 1, R96 += 1 };
  s3 -> s3 [0, 65535] { R12042 += 1, R11980 += 1, R94 += 1, R95 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R12042 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R12042 += 1 };
  s6 -> s6 [0, 65535] { R12042 += 1, R11980 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 65535] { R12044 += 1, R11982 += 1 };
  s0 -> s2 [0, 65535] { R12044 += 1, R11981 += 1, R11982 += 1 };
  s0 -> s0 [0, 65535] { R12043 += 1, R12044 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R12044 += 1, R11982 += 1 };
  s1 -> s4 [0, 65535] { R12044 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R12044 += 1, R11982 += 1 };
  s2 -> s2 [0, 65535] { R12044 += 1, R11981 += 1, R11982 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R12044 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 74] { R12046 += 1, R11984 += 1, R11844 += 1, R11846 += 1 };
  s0 -> s2 [0, 65535] { R12046 += 1, R11984 += 1, R11844 += 1, R11845 += 1, R11846 += 1 };
  s0 -> s0 [0, 65535] { R12045 += 1, R12046 += 1 };
  s0 -> s3 [0, 65535] { R12046 += 1, R11983 += 1, R11984 += 1 };
  s0 -> s4 [0, 65535] { R12046 += 1, R11984 += 1, R11843 += 1, R11844 += 1 };
  s0 -> s5 [75, 75] { R12046 += 1, R11984 += 1, R11844 += 1, R11846 += 1 };
  s0 -> s1 [76, 65535] { R12046 += 1, R11984 += 1, R11844 += 1, R11846 += 1 };
  s1 -> s1 [0, 74] { R12046 += 1, R11984 += 1, R11844 += 1, R11846 += 1 };
  s1 -> s5 [75, 75] { R12046 += 1, R11984 += 1, R11844 += 1, R11846 += 1 };
  s1 -> s1 [76, 65535] { R12046 += 1, R11984 += 1, R11844 += 1, R11846 += 1 };
  s2 -> s1 [0, 74] { R12046 += 1, R11984 += 1, R11844 += 1, R11846 += 1 };
  s2 -> s2 [0, 65535] { R12046 += 1, R11984 += 1, R11844 += 1, R11845 += 1, R11846 += 1 };
  s2 -> s5 [75, 75] { R12046 += 1, R11984 += 1, R11844 += 1, R11846 += 1 };
  s2 -> s1 [76, 65535] { R12046 += 1, R11984 += 1, R11844 += 1, R11846 += 1 };
  s3 -> s1 [0, 74] { R12046 += 1, R11984 += 1, R11844 += 1, R11846 += 1 };
  s3 -> s2 [0, 65535] { R12046 += 1, R11984 += 1, R11844 += 1, R11845 += 1, R11846 += 1 };
  s3 -> s3 [0, 65535] { R12046 += 1, R11983 += 1, R11984 += 1 };
  s3 -> s4 [0, 65535] { R12046 += 1, R11984 += 1, R11843 += 1, R11844 += 1 };
  s3 -> s5 [75, 75] { R12046 += 1, R11984 += 1, R11844 += 1, R11846 += 1 };
  s3 -> s1 [76, 65535] { R12046 += 1, R11984 += 1, R11844 += 1, R11846 += 1 };
  s4 -> s1 [0, 74] { R12046 += 1, R11984 += 1, R11844 += 1, R11846 += 1 };
  s4 -> s2 [0, 65535] { R12046 += 1, R11984 += 1, R11844 += 1, R11845 += 1, R11846 += 1 };
  s4 -> s4 [0, 65535] { R12046 += 1, R11984 += 1, R11843 += 1, R11844 += 1 };
  s4 -> s5 [75, 75] { R12046 += 1, R11984 += 1, R11844 += 1, R11846 += 1 };
  s4 -> s1 [76, 65535] { R12046 += 1, R11984 += 1, R11844 += 1, R11846 += 1 };
  s5 -> s6 [0, 65535] { R12046 += 1, R11984 += 1, R11844 += 1 };
  s5 -> s5 [0, 65535] { R12046 += 1, R11984 += 1, R11844 += 1, R11846 += 1 };
  s5 -> s7 [0, 65535] { R12046 += 1 };
  s5 -> s8 [0, 65535] { R12046 += 1, R11984 += 1 };
  s5 -> s9 [0, 65535];
  s6 -> s6 [0, 65535] { R12046 += 1, R11984 += 1, R11844 += 1 };
  s6 -> s7 [0, 65535] { R12046 += 1 };
  s6 -> s8 [0, 65535] { R12046 += 1, R11984 += 1 };
  s6 -> s9 [0, 65535];
  s7 -> s7 [0, 65535] { R12046 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s7 [0, 65535] { R12046 += 1 };
  s8 -> s8 [0, 65535] { R12046 += 1, R11984 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  accepting s8, s5, s9, s6, s7;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R12048 += 1, R11985 += 1, R11986 += 1 };
  s0 -> s0 [0, 65535] { R12047 += 1, R12048 += 1 };
  s0 -> s2 [0, 65535] { R12048 += 1, R11986 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R12048 += 1, R11985 += 1, R11986 += 1 };
  s1 -> s2 [0, 65535] { R12048 += 1, R11986 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R12048 += 1 };
  s2 -> s2 [0, 65535] { R12048 += 1, R11986 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R12048 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R12050 += 1, R12006 += 1, R21 += 1 };
  s0 -> s2 [0, 65535] { R12050 += 1, R12005 += 1, R12006 += 1 };
  s0 -> s0 [0, 65535] { R12049 += 1, R12050 += 1 };
  s1 -> s1 [0, 65535] { R12050 += 1, R12006 += 1, R21 += 1 };
  s1 -> s4 [0, 65535] { R12050 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R12050 += 1, R12006 += 1, R21 += 1 };
  s2 -> s2 [0, 65535] { R12050 += 1, R12005 += 1, R12006 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R12050 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R12052 += 1, R12008 += 1 };
  s0 -> s2 [0, 65535] { R12052 += 1, R12007 += 1, R12008 += 1 };
  s0 -> s0 [0, 65535] { R12051 += 1, R12052 += 1 };
  s0 -> s3 [70, 70] { R12052 += 1, R12008 += 1 };
  s0 -> s4 [70, 70] { R12052 += 1, R12008 += 1 };
  s0 -> s5 [75, 75] { R12052 += 1, R12008 += 1 };
  s0 -> s1 [76, 65535] { R12052 += 1, R12008 += 1 };
  s1 -> s1 [0, 69] { R12052 += 1, R12008 += 1 };
  s1 -> s3 [70, 70] { R12052 += 1, R12008 += 1 };
  s1 -> s4 [70, 70] { R12052 += 1, R12008 += 1 };
  s1 -> s5 [75, 75] { R12052 += 1, R12008 += 1 };
  s1 -> s1 [76, 65535] { R12052 += 1, R12008 += 1 };
  s2 -> s1 [0, 69] { R12052 += 1, R12008 += 1 };
  s2 -> s2 [0, 65535] { R12052 += 1, R12007 += 1, R12008 += 1 };
  s2 -> s3 [70, 70] { R12052 += 1, R12008 += 1 };
  s2 -> s4 [70, 70] { R12052 += 1, R12008 += 1 };
  s2 -> s5 [75, 75] { R12052 += 1, R12008 += 1 };
  s2 -> s1 [76, 65535] { R12052 += 1, R12008 += 1 };
  s3 -> s3 [0, 70] { R12052 += 1, R12008 += 1 };
  s3 -> s7 [75, 75] { R12052 += 1, R12008 += 1 };
  s3 -> s3 [76, 65535] { R12052 += 1, R12008 += 1 };
  s5 -> s5 [0, 69] { R12052 += 1, R12008 += 1 };
  s5 -> s5 [0, 65535] { R12052 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R12052 += 1, R12008 += 1 };
  s5 -> s8 [70, 70] { R12052 += 1, R12008 += 1 };
  s5 -> s5 [75, 65535] { R12052 += 1, R12008 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R12052 += 1, R12008 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R12052 += 1 };
  s7 -> s7 [75, 65535] { R12052 += 1, R12008 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R12052 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R12054 += 1, R12010 += 1, R83 += 1 };
  s0 -> s2 [0, 65535] { R12054 += 1, R12009 += 1, R12010 += 1 };
  s0 -> s0 [0, 65535] { R12053 += 1, R12054 += 1 };
  s0 -> s3 [70, 70] { R12054 += 1, R12010 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R12054 += 1, R12010 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R12054 += 1, R12010 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R12054 += 1, R12010 += 1, R83 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R12054 += 1 };
  s1 -> s3 [70, 70] { R12054 += 1, R12010 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R12054 += 1, R12010 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R12054 += 1, R12010 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R12054 += 1, R12010 += 1, R83 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R12054 += 1, R12009 += 1, R12010 += 1 };
  s2 -> s3 [70, 70] { R12054 += 1, R12010 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R12054 += 1, R12010 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R12054 += 1, R12010 += 1, R83 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R12054 += 1, R12010 += 1, R83 += 1 };
  s3 -> s6 [0, 65535] { R12054 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R12054 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12054 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R12056 += 1, R12012 += 1, R85 += 1 };
  s0 -> s0 [0, 65535] { R12055 += 1, R12056 += 1 };
  s0 -> s2 [0, 65535] { R12056 += 1, R12011 += 1, R12012 += 1 };
  s0 -> s3 [70, 70] { R12056 += 1, R12012 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R12056 += 1, R12012 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R12056 += 1, R12012 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R12056 += 1, R12012 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R12056 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R12056 += 1, R12012 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R12056 += 1, R12012 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R12056 += 1, R12012 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R12056 += 1, R12012 += 1, R85 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R12056 += 1, R12011 += 1, R12012 += 1 };
  s2 -> s3 [70, 70] { R12056 += 1, R12012 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R12056 += 1, R12012 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R12056 += 1, R12012 += 1, R85 += 1 };
  s3 -> s3 [0, 65535] { R12056 += 1, R12012 += 1, R85 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R12056 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R12056 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12056 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R12058 += 1, R12014 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R12058 += 1, R12014 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R12057 += 1, R12058 += 1 };
  s0 -> s3 [0, 65535] { R12058 += 1, R12013 += 1, R12014 += 1 };
  s0 -> s4 [70, 70] { R12058 += 1, R12014 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R12058 += 1, R12014 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R12058 += 1, R12014 += 1, R87 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R12058 += 1, R12014 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 74] { R12058 += 1, R12014 += 1, R88 += 1 };
  s0 -> s2 [71, 65535] { R12058 += 1, R12014 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R12058 += 1, R12014 += 1, R88 += 1 };
  s0 -> s1 [76, 65535] { R12058 += 1, R12014 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R12058 += 1, R12014 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R12058 += 1, R12014 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R12058 += 1, R12014 += 1, R88 += 1 };
  s1 -> s1 [71, 74] { R12058 += 1, R12014 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R12058 += 1, R12014 += 1, R88 += 1 };
  s1 -> s1 [76, 65535] { R12058 += 1, R12014 += 1, R88 += 1 };
  s2 -> s1 [0, 69] { R12058 += 1, R12014 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R12058 += 1, R12014 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R12058 += 1, R12014 += 1, R88 += 1 };
  s2 -> s5 [70, 70] { R12058 += 1, R12014 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R12058 += 1, R12014 += 1, R87 += 1, R88 += 1 };
  s2 -> s7 [70, 70] { R12058 += 1, R12014 += 1, R87 += 1, R88 += 1 };
  s2 -> s1 [71, 74] { R12058 += 1, R12014 += 1, R88 += 1 };
  s2 -> s2 [71, 65535] { R12058 += 1, R12014 += 1, R87 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R12058 += 1, R12014 += 1, R88 += 1 };
  s2 -> s1 [76, 65535] { R12058 += 1, R12014 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R12058 += 1, R12014 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R12058 += 1, R12014 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R12058 += 1, R12013 += 1, R12014 += 1 };
  s3 -> s4 [70, 70] { R12058 += 1, R12014 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R12058 += 1, R12014 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R12058 += 1, R12014 += 1, R87 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R12058 += 1, R12014 += 1, R87 += 1, R88 += 1 };
  s3 -> s1 [71, 74] { R12058 += 1, R12014 += 1, R88 += 1 };
  s3 -> s2 [71, 65535] { R12058 += 1, R12014 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R12058 += 1, R12014 += 1, R88 += 1 };
  s3 -> s1 [76, 65535] { R12058 += 1, R12014 += 1, R88 += 1 };
  s5 -> s5 [0, 74] { R12058 += 1, R12014 += 1, R88 += 1 };
  s5 -> s11 [75, 75] { R12058 += 1, R12014 += 1, R88 += 1 };
  s5 -> s5 [76, 65535] { R12058 += 1, R12014 += 1, R88 += 1 };
  s6 -> s5 [0, 74] { R12058 += 1, R12014 += 1, R88 += 1 };
  s6 -> s6 [0, 65535] { R12058 += 1, R12014 += 1, R87 += 1, R88 += 1 };
  s6 -> s11 [75, 75] { R12058 += 1, R12014 += 1, R88 += 1 };
  s6 -> s5 [76, 65535] { R12058 += 1, R12014 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R12058 += 1, R12014 += 1, R88 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R12058 += 1 };
  s8 -> s10 [70, 70] { R12058 += 1, R12014 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R12058 += 1, R12014 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R12058 += 1, R12014 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R12058 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R12058 += 1 };
  s11 -> s11 [0, 65535] { R12058 += 1, R12014 += 1, R88 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R12058 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R12060 += 1, R12016 += 1, R91 += 1, R92 += 1 };
  s0 -> s0 [0, 65535] { R12059 += 1, R12060 += 1 };
  s0 -> s2 [0, 65535] { R12060 += 1, R12015 += 1, R12016 += 1 };
  s0 -> s3 [70, 70] { R12060 += 1, R12016 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R12060 += 1, R12016 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R12060 += 1, R12016 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R12060 += 1, R12016 += 1, R91 += 1, R92 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R12060 += 1 };
  s1 -> s3 [70, 70] { R12060 += 1, R12016 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R12060 += 1, R12016 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R12060 += 1, R12016 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R12060 += 1, R12016 += 1, R91 += 1, R92 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R12060 += 1, R12015 += 1, R12016 += 1 };
  s2 -> s3 [70, 70] { R12060 += 1, R12016 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R12060 += 1, R12016 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R12060 += 1, R12016 += 1, R91 += 1, R92 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R12060 += 1, R12016 += 1, R91 += 1, R92 += 1 };
  s3 -> s6 [0, 65535] { R12060 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R12060 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12060 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R12062 += 1, R12018 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s2 [0, 69] { R12062 += 1, R12018 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s0 [0, 65535] { R12061 += 1, R12062 += 1 };
  s0 -> s3 [0, 65535] { R12062 += 1, R12017 += 1, R12018 += 1 };
  s0 -> s4 [70, 70] { R12062 += 1, R12018 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s5 [70, 70] { R12062 += 1, R12018 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s6 [70, 70] { R12062 += 1, R12018 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s7 [70, 70] { R12062 += 1, R12018 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s1 [71, 65535] { R12062 += 1, R12018 += 1, R10160 += 1, R10161 += 1 };
  s0 -> s2 [71, 65535] { R12062 += 1, R12018 += 1, R10159 += 1, R10160 += 1 };
  s1 -> s11 [0, 69] { R12062 += 1, R12018 += 1 };
  s1 -> s1 [0, 69] { R12062 += 1, R12018 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s12 [70, 70] { R12062 += 1, R12018 += 1 };
  s1 -> s5 [70, 70] { R12062 += 1, R12018 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s7 [70, 70] { R12062 += 1, R12018 += 1, R10160 += 1, R10161 += 1 };
  s1 -> s8 [70, 70] { R12062 += 1, R12018 += 1 };
  s1 -> s11 [71, 65535] { R12062 += 1, R12018 += 1 };
  s1 -> s1 [71, 65535] { R12062 += 1, R12018 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s1 [0, 69] { R12062 += 1, R12018 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s2 [0, 69] { R12062 += 1, R12018 += 1, R10159 += 1, R10160 += 1 };
  s2 -> s4 [70, 70] { R12062 += 1, R12018 += 1, R10159 += 1, R10160 += 1 };
  s2 -> s5 [70, 70] { R12062 += 1, R12018 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s6 [70, 70] { R12062 += 1, R12018 += 1, R10159 += 1, R10160 += 1 };
  s2 -> s7 [70, 70] { R12062 += 1, R12018 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s1 [71, 65535] { R12062 += 1, R12018 += 1, R10160 += 1, R10161 += 1 };
  s2 -> s2 [71, 65535] { R12062 += 1, R12018 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s1 [0, 69] { R12062 += 1, R12018 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s2 [0, 69] { R12062 += 1, R12018 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s3 [0, 65535] { R12062 += 1, R12017 += 1, R12018 += 1 };
  s3 -> s4 [70, 70] { R12062 += 1, R12018 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s5 [70, 70] { R12062 += 1, R12018 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s6 [70, 70] { R12062 += 1, R12018 += 1, R10159 += 1, R10160 += 1 };
  s3 -> s7 [70, 70] { R12062 += 1, R12018 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s1 [71, 65535] { R12062 += 1, R12018 += 1, R10160 += 1, R10161 += 1 };
  s3 -> s2 [71, 65535] { R12062 += 1, R12018 += 1, R10159 += 1, R10160 += 1 };
  s6 -> s6 [0, 65535] { R12062 += 1, R12018 += 1, R10159 += 1, R10160 += 1 };
  s6 -> s7 [0, 65535] { R12062 += 1, R12018 += 1, R10160 += 1, R10161 += 1 };
  s7 -> s7 [0, 65535] { R12062 += 1, R12018 += 1, R10160 += 1, R10161 += 1 };
  s7 -> s8 [0, 65535] { R12062 += 1, R12018 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [0, 65535] { R12062 += 1 };
  s8 -> s8 [0, 65535] { R12062 += 1, R12018 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R12062 += 1 };
  s11 -> s11 [0, 69] { R12062 += 1, R12018 += 1 };
  s11 -> s11 [0, 65535] { R12062 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s12 [70, 70] { R12062 += 1, R12018 += 1 };
  s11 -> s8 [70, 70] { R12062 += 1, R12018 += 1 };
  s11 -> s11 [71, 65535] { R12062 += 1, R12018 += 1 };
  s12 -> s12 [0, 65535] { R12062 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R12064 += 1, R12020 += 1, R11839 += 1, R11840 += 1 };
  s0 -> s2 [0, 65535] { R12064 += 1, R12019 += 1, R12020 += 1 };
  s0 -> s0 [0, 65535] { R12063 += 1, R12064 += 1 };
  s0 -> s3 [70, 70] { R12064 += 1, R12020 += 1, R11839 += 1, R11840 += 1 };
  s0 -> s4 [70, 70] { R12064 += 1, R12020 += 1, R11839 += 1, R11840 += 1 };
  s0 -> s1 [71, 65535] { R12064 += 1, R12020 += 1, R11839 += 1, R11840 += 1 };
  s1 -> s1 [0, 69] { R12064 += 1, R12020 += 1, R11839 += 1, R11840 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R12064 += 1 };
  s1 -> s3 [70, 70] { R12064 += 1, R12020 += 1, R11839 += 1, R11840 += 1 };
  s1 -> s4 [70, 70] { R12064 += 1, R12020 += 1, R11839 += 1, R11840 += 1 };
  s1 -> s1 [71, 65535] { R12064 += 1, R12020 += 1, R11839 += 1, R11840 += 1 };
  s2 -> s1 [0, 69] { R12064 += 1, R12020 += 1, R11839 += 1, R11840 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R12064 += 1, R12019 += 1, R12020 += 1 };
  s2 -> s3 [70, 70] { R12064 += 1, R12020 += 1, R11839 += 1, R11840 += 1 };
  s2 -> s4 [70, 70] { R12064 += 1, R12020 += 1, R11839 += 1, R11840 += 1 };
  s2 -> s1 [71, 65535] { R12064 += 1, R12020 += 1, R11839 += 1, R11840 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R12064 += 1 };
  s4 -> s5 [0, 65535] { R12064 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R12064 += 1, R12020 += 1, R11839 += 1, R11840 += 1 };
  s5 -> s5 [0, 65535] { R12064 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R12066 += 1, R12022 += 1, R11958 += 1, R11960 += 1, R11961 += 1 };
  s0 -> s2 [0, 69] { R12066 += 1, R12022 += 1, R11958 += 1, R11959 += 1, R11960 += 1 };
  s0 -> s3 [0, 69] { R12066 += 1, R12022 += 1, R11957 += 1, R11958 += 1 };
  s0 -> s4 [0, 65535] { R12066 += 1, R12021 += 1, R12022 += 1 };
  s0 -> s0 [0, 65535] { R12065 += 1, R12066 += 1 };
  s0 -> s5 [70, 70] { R12066 += 1, R12022 += 1, R11957 += 1, R11958 += 1 };
  s0 -> s6 [70, 70] { R12066 += 1, R12022 += 1, R11958 += 1, R11960 += 1, R11961 += 1 };
  s0 -> s7 [70, 70] { R12066 += 1, R12022 += 1, R11958 += 1, R11959 += 1, R11960 += 1 };
  s0 -> s8 [70, 70] { R12066 += 1, R12022 += 1, R11958 += 1, R11960 += 1, R11961 += 1 };
  s0 -> s9 [70, 70] { R12066 += 1, R12022 += 1, R11958 += 1, R11959 += 1, R11960 += 1 };
  s0 -> s10 [70, 70] { R12066 += 1, R12022 += 1, R11957 += 1, R11958 += 1 };
  s0 -> s1 [71, 65535] { R12066 += 1, R12022 += 1, R11958 += 1, R11960 += 1, R11961 += 1 };
  s0 -> s2 [71, 65535] { R12066 += 1, R12022 += 1, R11958 += 1, R11959 += 1, R11960 += 1 };
  s0 -> s3 [71, 65535] { R12066 += 1, R12022 += 1, R11957 += 1, R11958 += 1 };
  s1 -> s1 [0, 69] { R12066 += 1, R12022 += 1, R11958 += 1, R11960 += 1, R11961 += 1 };
  s1 -> s15 [0, 69] { R12066 += 1, R12022 += 1 };
  s1 -> s17 [0, 69] { R12066 += 1, R12022 += 1, R11958 += 1 };
  s1 -> s11 [70, 70] { R12066 += 1, R12022 += 1, R11958 += 1 };
  s1 -> s6 [70, 70] { R12066 += 1, R12022 += 1, R11958 += 1, R11960 += 1, R11961 += 1 };
  s1 -> s12 [70, 70] { R12066 += 1, R12022 += 1 };
  s1 -> s8 [70, 70] { R12066 += 1, R12022 += 1, R11958 += 1, R11960 += 1, R11961 += 1 };
  s1 -> s16 [70, 70] { R12066 += 1, R12022 += 1 };
  s1 -> s18 [70, 70] { R12066 += 1, R12022 += 1, R11958 += 1 };
  s1 -> s1 [71, 65535] { R12066 += 1, R12022 += 1, R11958 += 1, R11960 += 1, R11961 += 1 };
  s1 -> s15 [71, 65535] { R12066 += 1, R12022 += 1 };
  s1 -> s17 [71, 65535] { R12066 += 1, R12022 += 1, R11958 += 1 };
  s2 -> s1 [0, 69] { R12066 += 1, R12022 += 1, R11958 += 1, R11960 += 1, R11961 += 1 };
  s2 -> s15 [0, 69] { R12066 += 1, R12022 += 1 };
  s2 -> s2 [0, 69] { R12066 += 1, R12022 += 1, R11958 += 1, R11959 += 1, R11960 += 1 };
  s2 -> s6 [70, 70] { R12066 += 1, R12022 += 1, R11958 += 1, R11960 += 1, R11961 += 1 };
  s2 -> s12 [70, 70] { R12066 += 1, R12022 += 1 };
  s2 -> s7 [70, 70] { R12066 += 1, R12022 += 1, R11958 += 1, R11959 += 1, R11960 += 1 };
  s2 -> s8 [70, 70] { R12066 += 1, R12022 += 1, R11958 += 1, R11960 += 1, R11961 += 1 };
  s2 -> s9 [70, 70] { R12066 += 1, R12022 += 1, R11958 += 1, R11959 += 1, R11960 += 1 };
  s2 -> s16 [70, 70] { R12066 += 1, R12022 += 1 };
  s2 -> s1 [71, 65535] { R12066 += 1, R12022 += 1, R11958 += 1, R11960 += 1, R11961 += 1 };
  s2 -> s15 [71, 65535] { R12066 += 1, R12022 += 1 };
  s2 -> s2 [71, 65535] { R12066 += 1, R12022 += 1, R11958 += 1, R11959 += 1, R11960 += 1 };
  s3 -> s1 [0, 69] { R12066 += 1, R12022 += 1, R11958 += 1, R11960 += 1, R11961 += 1 };
  s3 -> s2 [0, 69] { R12066 += 1, R12022 += 1, R11958 += 1, R11959 += 1, R11960 += 1 };
  s3 -> s3 [0, 69] { R12066 += 1, R12022 += 1, R11957 += 1, R11958 += 1 };
  s3 -> s5 [70, 70] { R12066 += 1, R12022 += 1, R11957 += 1, R11958 += 1 };
  s3 -> s6 [70, 70] { R12066 += 1, R12022 += 1, R11958 += 1, R11960 += 1, R11961 += 1 };
  s3 -> s7 [70, 70] { R12066 += 1, R12022 += 1, R11958 += 1, R11959 += 1, R11960 += 1 };
  s3 -> s8 [70, 70] { R12066 += 1, R12022 += 1, R11958 += 1, R11960 += 1, R11961 += 1 };
  s3 -> s9 [70, 70] { R12066 += 1, R12022 += 1, R11958 += 1, R11959 += 1, R11960 += 1 };
  s3 -> s10 [70, 70] { R12066 += 1, R12022 += 1, R11957 += 1, R11958 += 1 };
  s3 -> s1 [71, 65535] { R12066 += 1, R12022 += 1, R11958 += 1, R11960 += 1, R11961 += 1 };
  s3 -> s2 [71, 65535] { R12066 += 1, R12022 += 1, R11958 += 1, R11959 += 1, R11960 += 1 };
  s3 -> s3 [71, 65535] { R12066 += 1, R12022 += 1, R11957 += 1, R11958 += 1 };
  s4 -> s1 [0, 69] { R12066 += 1, R12022 += 1, R11958 += 1, R11960 += 1, R11961 += 1 };
  s4 -> s2 [0, 69] { R12066 += 1, R12022 += 1, R11958 += 1, R11959 += 1, R11960 += 1 };
  s4 -> s3 [0, 69] { R12066 += 1, R12022 += 1, R11957 += 1, R11958 += 1 };
  s4 -> s4 [0, 65535] { R12066 += 1, R12021 += 1, R12022 += 1 };
  s4 -> s5 [70, 70] { R12066 += 1, R12022 += 1, R11957 += 1, R11958 += 1 };
  s4 -> s6 [70, 70] { R12066 += 1, R12022 += 1, R11958 += 1, R11960 += 1, R11961 += 1 };
  s4 -> s7 [70, 70] { R12066 += 1, R12022 += 1, R11958 += 1, R11959 += 1, R11960 += 1 };
  s4 -> s8 [70, 70] { R12066 += 1, R12022 += 1, R11958 += 1, R11960 += 1, R11961 += 1 };
  s4 -> s9 [70, 70] { R12066 += 1, R12022 += 1, R11958 += 1, R11959 += 1, R11960 += 1 };
  s4 -> s10 [70, 70] { R12066 += 1, R12022 += 1, R11957 += 1, R11958 += 1 };
  s4 -> s1 [71, 65535] { R12066 += 1, R12022 += 1, R11958 += 1, R11960 += 1, R11961 += 1 };
  s4 -> s2 [71, 65535] { R12066 += 1, R12022 += 1, R11958 += 1, R11959 += 1, R11960 += 1 };
  s4 -> s3 [71, 65535] { R12066 += 1, R12022 += 1, R11957 += 1, R11958 += 1 };
  s5 -> s5 [0, 65535] { R12066 += 1, R12022 += 1, R11957 += 1, R11958 += 1 };
  s5 -> s7 [0, 65535] { R12066 += 1, R12022 += 1, R11958 += 1, R11959 += 1, R11960 += 1 };
  s5 -> s8 [0, 65535] { R12066 += 1, R12022 += 1, R11958 += 1, R11960 += 1, R11961 += 1 };
  s7 -> s12 [0, 65535] { R12066 += 1, R12022 += 1 };
  s7 -> s7 [0, 65535] { R12066 += 1, R12022 += 1, R11958 += 1, R11959 += 1, R11960 += 1 };
  s7 -> s8 [0, 65535] { R12066 += 1, R12022 += 1, R11958 += 1, R11960 += 1, R11961 += 1 };
  s8 -> s11 [0, 65535] { R12066 += 1, R12022 += 1, R11958 += 1 };
  s8 -> s12 [0, 65535] { R12066 += 1, R12022 += 1 };
  s8 -> s8 [0, 65535] { R12066 += 1, R12022 += 1, R11958 += 1, R11960 += 1, R11961 += 1 };
  s11 -> s11 [0, 65535] { R12066 += 1, R12022 += 1, R11958 += 1 };
  s11 -> s12 [0, 65535] { R12066 += 1, R12022 += 1 };
  s12 -> s13 [0, 65535] { R12066 += 1 };
  s12 -> s12 [0, 65535] { R12066 += 1, R12022 += 1 };
  s12 -> s14 [0, 65535];
  s13 -> s13 [0, 65535] { R12066 += 1 };
  s13 -> s14 [0, 65535];
  s14 -> s14 [0, 65535];
  s15 -> s15 [0, 69] { R12066 += 1, R12022 += 1 };
  s15 -> s15 [0, 65535] { R12066 += 1 };
  s15 -> s14 [0, 65535];
  s15 -> s12 [70, 70] { R12066 += 1, R12022 += 1 };
  s15 -> s16 [70, 70] { R12066 += 1, R12022 += 1 };
  s15 -> s15 [71, 65535] { R12066 += 1, R12022 += 1 };
  s16 -> s14 [0, 65535];
  s16 -> s16 [0, 65535] { R12066 += 1 };
  s17 -> s15 [0, 69] { R12066 += 1, R12022 += 1 };
  s17 -> s17 [0, 69] { R12066 += 1, R12022 += 1, R11958 += 1 };
  s17 -> s11 [70, 70] { R12066 += 1, R12022 += 1, R11958 += 1 };
  s17 -> s12 [70, 70] { R12066 += 1, R12022 += 1 };
  s17 -> s16 [70, 70] { R12066 += 1, R12022 += 1 };
  s17 -> s18 [70, 70] { R12066 += 1, R12022 += 1, R11958 += 1 };
  s17 -> s15 [71, 65535] { R12066 += 1, R12022 += 1 };
  s17 -> s17 [71, 65535] { R12066 += 1, R12022 += 1, R11958 += 1 };
  accepting s16, s12, s13, s14, s15;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R11984 && R3 = R12066 && R23 - R12066 = -1 && R24 = R12066 && R25 - R12066 = -1 && R26 = R12066 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R11844 + -1*R11840 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R11844 + -1*R11840 - R66 = 0 && R55 + R96 + R93 + -1*R11846 + -1*R11842 - R68 = 0 && R65 + R11843 + R11839 = 0 && R67 + R11845 + R11841 = 0 && R11983 = 0 && R12007 = 0 && R12008 = 0 && R12013 = 0 && R12014 = 0 && R12017 = 0 && R12018 = 0 && R12021 = 0 && R12022 = 0 && R12023 = 0 && R12024 = R12066 && R12025 = 0 && R12026 = R12066 && R12027 = 0 && R12028 = R12066 && R12029 = 0 && R12030 = R12066 && R12031 = 0 && R12032 = R12066 && R12033 = 0 && R12034 = R12066 && R12035 = 0 && R12036 = R12066 && R12037 = 0 && R12038 = R12066 && R12039 = 0 && R12040 = R12066 && R12041 = 0 && R12042 = R12066 && R12043 = 0 && R12044 = R12066 && R12045 = 0 && R12046 = R12066 && R12047 = 0 && R12048 = R12066 && R12049 = 0 && R12050 = R12066 && R12051 = 0 && R12052 = R12066 && R12053 = 0 && R12054 = R12066 && R12055 = 0 && R12056 = R12066 && R12057 = 0 && R12058 = R12066 && R12059 = 0 && R12060 = R12066 && R12061 = 0 && R12062 = R12066 && R12063 = 0 && R12064 = R12066 && R12065 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R10164 + R10161 < 1 && -1*R11844 + -1*R11840 - R66 < 1 && -1*R11846 + -1*R11842 - R68 < 1 && -1 < R11984 && 0 < R12066 && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R11844 + -1*R11840 - R66 = 0 || R66 + R11844 + R11840 < 1) && (R59 + R10162 + R10159 != 0 || R60 + R10163 + R10160 + -1*R11844 + -1*R11840 - R66 = 0 || R66 + R11844 + R11840 < 1) && (R66 + R11844 + R11840 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R11846 + R11842 < 1) && (R53 + R94 + R91 = 0 || R68 + R11846 + R11842 < 1))) && (R66 + R11844 + R11840 != 0 || ((R59 + R10162 + R10159 != 0 || R60 + R10163 + R10160 = 0 || R68 + R11846 + R11842 < 1) && (R59 + R10162 + R10159 = 0 || R68 + R11846 + R11842 < 1))) && (R66 + R11844 + R11840 != 0 || ((R73 + R11962 + R11957 != 0 || R74 + R11963 + R11958 = 0 || R68 + R11846 + R11842 < 1) && (R73 + R11962 + R11957 = 0 || R68 + R11846 + R11842 < 1))) && (R68 + R11846 + R11842 != 0 || R77 + R11966 + R11961 = 0 || (R75 + R11964 + R11959 = 0 && R76 + R11965 + R11960 = 0)) && (R73 + R11962 + R11957 != 0 || R66 + R11844 + R11840 + -1*R11963 + -1*R11958 - R74 = 0 || R66 + R11844 + R11840 < 1) && (R75 + R11964 + R11959 != 0 || R68 + R11846 + R11842 + -1*R11965 + -1*R11960 - R76 = 0 || R68 + R11846 + R11842 < 1) && (R11967 != 0 || R11968 = R11984 || (R20 = 0 && R11984 = 0)) && (R11969 != 0 || R11970 = R11984 || (R20 = 0 && R11984 = 0)) && (R11971 != 0 || R11972 = R11984 || (R20 = 0 && R11984 = 0)) && (R11973 != 0 || R11974 = R11984 || (R20 = 0 && R11984 = 0)) && (R11975 != 0 || R11976 = R11984 || (R20 = 0 && R11984 = 0)) && (R11977 != 0 || R11978 = R11984 || (R20 = 0 && R11984 = 0)) && (R11979 != 0 || R11980 = R11984 || (R20 = 0 && R11984 = 0)) && (R11981 != 0 || R11982 = R11984 || (R20 = 0 && R11984 = 0)) && (R11985 != 0 || R11984 = R11986 || (R20 = 0 && R11984 = 0)) && (R21 = 0 || (R12005 = 0 && R12006 = 0)) && (R21 = 0 || (R12009 = 0 && R12010 = 0)) && (R21 = 0 || (R12011 = 0 && R12012 = 0)) && (R21 = 0 || (R12015 = 0 && R12016 = 0)) && (R21 = 0 || (R12019 = 0 && R12020 = 0)) && (R22 = 0 || (R11987 = 0 && R11988 = 0)) && (R22 = 0 || (R11989 = 0 && R11990 = 0)) && (R22 = 0 || (R11991 = 0 && R11992 = 0)) && (R22 = 0 || (R11993 = 0 && R11994 = 0)) && (R22 = 0 || (R11995 = 0 && R11996 = 0)) && (R22 = 0 || (R11997 = 0 && R11998 = 0)) && (R22 = 0 || (R11999 = 0 && R12000 = 0)) && (R22 = 0 || (R12001 = 0 && R12002 = 0)) && (R22 = 0 || (R12003 = 0 && R12004 = 0)) && (R53 + R94 + R91 = 0 || R66 + R11844 + R11840 < 1) && (R59 + R10162 + R10159 = 0 || R66 + R11844 + R11840 < 1) && (R73 + R11962 + R11957 = 0 || R66 + R11844 + R11840 < 1) && (R75 + R11964 + R11959 = 0 || R68 + R11846 + R11842 < 1) && (R11967 = 0 || (R20 = 0 && R11984 = 0)) && (R11969 = 0 || (R20 = 0 && R11984 = 0)) && (R11971 = 0 || (R20 = 0 && R11984 = 0)) && (R11973 = 0 || (R20 = 0 && R11984 = 0)) && (R11975 = 0 || (R20 = 0 && R11984 = 0)) && (R11977 = 0 || (R20 = 0 && R11984 = 0)) && (R11979 = 0 || (R20 = 0 && R11984 = 0)) && (R11981 = 0 || (R20 = 0 && R11984 = 0)) && (R11985 = 0 || (R20 = 0 && R11984 = 0));
// End of Parikh automata intersection problem
