// Parikh automata intersection problem, generated by OSTRICH+
counter int R100, R101, R102, R103, R104, R105, R106, R107, R108, R109, R110, R111, R112, R113, R114, R115, R116, R117, R118, R119, R12, R120, R121, R122, R123, R124, R125, R126, R127, R128, R129, R130, R131, R132, R133, R134, R135, R136, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R193, R194, R195, R196, R197, R198, R199, R2, R20, R200, R201, R202, R203, R204, R205, R206, R207, R208, R209, R21, R210, R211, R212, R213, R214, R215, R216, R217, R218, R219, R22, R220, R23, R24, R25, R26, R27, R28, R29, R3, R30, R4, R45, R47, R49, R5, R50, R53, R54, R55, R59, R60, R61, R65, R66, R67, R68, R73, R74, R75, R76, R77, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96, R97, R98, R99;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R24 += 1 };
  s0 -> s0 [0, 65535] { R23 += 1, R24 += 1 };
  s0 -> s2 [9, 13] { R24 += 1 };
  s0 -> s1 [14, 31] { R24 += 1 };
  s0 -> s2 [32, 32] { R24 += 1 };
  s0 -> s1 [33, 65535] { R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R24 += 1 };
  s2 -> s1 [0, 65535] { R24 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R28 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s2 [9, 13] { R28 += 1 };
  s0 -> s1 [14, 31] { R28 += 1 };
  s0 -> s2 [32, 32] { R28 += 1 };
  s0 -> s1 [33, 65535] { R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1 };
  s2 -> s1 [0, 65535] { R28 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R142 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R141 += 1, R142 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R142 += 1, R22 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R144 += 1 };
  s0 -> s0 [0, 65535] { R143 += 1, R144 += 1 };
  s0 -> s2 [70, 70] { R144 += 1 };
  s0 -> s3 [70, 70] { R144 += 1 };
  s0 -> s1 [76, 65535] { R144 += 1 };
  s1 -> s1 [0, 69] { R144 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R144 += 1 };
  s1 -> s3 [70, 70] { R144 += 1 };
  s1 -> s1 [76, 65535] { R144 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R144 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R144 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R146 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R145 += 1, R146 += 1 };
  s0 -> s2 [70, 70] { R146 += 1, R45 += 1 };
  s0 -> s3 [70, 70] { R146 += 1, R45 += 1 };
  s0 -> s1 [71, 65535] { R146 += 1, R45 += 1 };
  s1 -> s1 [0, 69] { R146 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R146 += 1, R45 += 1 };
  s1 -> s3 [70, 70] { R146 += 1, R45 += 1 };
  s1 -> s1 [71, 65535] { R146 += 1, R45 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R146 += 1, R45 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R148 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R147 += 1, R148 += 1 };
  s0 -> s2 [70, 70] { R148 += 1, R47 += 1 };
  s0 -> s3 [70, 70] { R148 += 1, R47 += 1 };
  s0 -> s1 [71, 65535] { R148 += 1, R47 += 1 };
  s1 -> s1 [0, 69] { R148 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R148 += 1, R47 += 1 };
  s1 -> s3 [70, 70] { R148 += 1, R47 += 1 };
  s1 -> s1 [71, 65535] { R148 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R148 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R150 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R149 += 1, R150 += 1 };
  s0 -> s2 [70, 70] { R150 += 1, R49 += 1, R50 += 1 };
  s0 -> s3 [70, 70] { R150 += 1, R49 += 1, R50 += 1 };
  s0 -> s1 [71, 65535] { R150 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 69] { R150 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R150 += 1, R49 += 1, R50 += 1 };
  s1 -> s3 [70, 70] { R150 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [71, 65535] { R150 += 1, R49 += 1, R50 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R150 += 1, R49 += 1, R50 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R152 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R151 += 1, R152 += 1 };
  s0 -> s2 [70, 70] { R152 += 1, R53 += 1, R54 += 1 };
  s0 -> s3 [70, 70] { R152 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [71, 65535] { R152 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 69] { R152 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R152 += 1, R53 += 1, R54 += 1 };
  s1 -> s3 [70, 70] { R152 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [71, 65535] { R152 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R152 += 1, R53 += 1, R54 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R154 += 1, R59 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R153 += 1, R154 += 1 };
  s0 -> s2 [70, 70] { R154 += 1, R59 += 1, R60 += 1 };
  s0 -> s3 [70, 70] { R154 += 1, R59 += 1, R60 += 1 };
  s0 -> s1 [71, 65535] { R154 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 69] { R154 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R154 += 1, R59 += 1, R60 += 1 };
  s1 -> s3 [70, 70] { R154 += 1, R59 += 1, R60 += 1 };
  s1 -> s1 [71, 65535] { R154 += 1, R59 += 1, R60 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R154 += 1, R59 += 1, R60 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R156 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R155 += 1, R156 += 1 };
  s0 -> s2 [70, 70] { R156 += 1, R65 += 1, R66 += 1 };
  s0 -> s3 [70, 70] { R156 += 1, R65 += 1, R66 += 1 };
  s0 -> s1 [71, 65535] { R156 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 69] { R156 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R156 += 1, R65 += 1, R66 += 1 };
  s1 -> s3 [70, 70] { R156 += 1, R65 += 1, R66 += 1 };
  s1 -> s1 [71, 65535] { R156 += 1, R65 += 1, R66 += 1 };
  s2 -> s2 [0, 65535] { R156 += 1, R65 += 1, R66 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R158 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R157 += 1, R158 += 1 };
  s0 -> s2 [70, 70] { R158 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R158 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R158 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R158 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R158 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R158 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R158 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R158 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R178 += 1 };
  s0 -> s0 [0, 65535] { R177 += 1, R178 += 1 };
  s0 -> s2 [70, 70] { R178 += 1 };
  s0 -> s1 [71, 65535] { R178 += 1 };
  s1 -> s1 [0, 69] { R178 += 1 };
  s1 -> s2 [70, 70] { R178 += 1 };
  s1 -> s1 [71, 65535] { R178 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R178 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R180 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R179 += 1, R180 += 1 };
  s1 -> s1 [0, 65535] { R180 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R182 += 1 };
  s0 -> s2 [0, 65535] { R182 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R181 += 1, R182 += 1 };
  s0 -> s3 [70, 70] { R182 += 1 };
  s0 -> s1 [71, 65535] { R182 += 1 };
  s1 -> s1 [0, 69] { R182 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R182 += 1 };
  s1 -> s1 [71, 65535] { R182 += 1 };
  s2 -> s1 [0, 69] { R182 += 1 };
  s2 -> s2 [0, 65535] { R182 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R182 += 1 };
  s2 -> s1 [71, 65535] { R182 += 1 };
  s3 -> s3 [0, 65535] { R182 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R184 += 1, R122 += 1 };
  s0 -> s2 [0, 65535] { R184 += 1, R121 += 1, R122 += 1 };
  s0 -> s0 [0, 65535] { R183 += 1, R184 += 1 };
  s0 -> s1 [71, 65535] { R184 += 1, R122 += 1 };
  s1 -> s1 [0, 69] { R184 += 1, R122 += 1 };
  s1 -> s1 [0, 65535] { R184 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R184 += 1, R122 += 1 };
  s2 -> s1 [0, 69] { R184 += 1, R122 += 1 };
  s2 -> s2 [0, 65535] { R184 += 1, R121 += 1, R122 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R184 += 1, R122 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s0 [0, 65535] { R185 += 1, R186 += 1 };
  s0 -> s1 [0, 65535] { R186 += 1, R123 += 1, R124 += 1 };
  s0 -> s2 [0, 65535] { R186 += 1, R124 += 1, R20 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R186 += 1, R123 += 1, R124 += 1 };
  s1 -> s2 [0, 65535] { R186 += 1, R124 += 1, R20 += 1 };
  s2 -> s3 [0, 65535] { R186 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R186 += 1, R124 += 1, R20 += 1 };
  s3 -> s3 [0, 65535] { R186 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R188 += 1, R126 += 1 };
  s0 -> s0 [0, 65535] { R187 += 1, R188 += 1 };
  s0 -> s2 [0, 65535] { R188 += 1, R125 += 1, R126 += 1 };
  s0 -> s1 [75, 65535] { R188 += 1, R126 += 1 };
  s1 -> s1 [0, 70] { R188 += 1, R126 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R188 += 1 };
  s1 -> s1 [75, 65535] { R188 += 1, R126 += 1 };
  s2 -> s1 [0, 70] { R188 += 1, R126 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R188 += 1, R125 += 1, R126 += 1 };
  s2 -> s1 [75, 65535] { R188 += 1, R126 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R189 += 1, R190 += 1 };
  s0 -> s1 [0, 65535] { R190 += 1, R127 += 1, R128 += 1 };
  s0 -> s2 [0, 65535] { R190 += 1, R128 += 1, R84 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R190 += 1, R127 += 1, R128 += 1 };
  s1 -> s2 [0, 65535] { R190 += 1, R128 += 1, R84 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R190 += 1, R128 += 1, R84 += 1 };
  s2 -> s4 [0, 65535] { R190 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R190 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 74] { R192 += 1, R130 += 1 };
  s0 -> s2 [0, 65535] { R192 += 1, R130 += 1, R86 += 1 };
  s0 -> s0 [0, 65535] { R191 += 1, R192 += 1 };
  s0 -> s3 [0, 65535] { R192 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [76, 65535] { R192 += 1, R130 += 1 };
  s1 -> s1 [0, 74] { R192 += 1, R130 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R192 += 1 };
  s1 -> s1 [76, 65535] { R192 += 1, R130 += 1 };
  s2 -> s1 [0, 74] { R192 += 1, R130 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R192 += 1 };
  s2 -> s2 [0, 65535] { R192 += 1, R130 += 1, R86 += 1 };
  s2 -> s1 [76, 65535] { R192 += 1, R130 += 1 };
  s3 -> s1 [0, 74] { R192 += 1, R130 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R192 += 1, R130 += 1, R86 += 1 };
  s3 -> s3 [0, 65535] { R192 += 1, R129 += 1, R130 += 1 };
  s3 -> s1 [76, 65535] { R192 += 1, R130 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R192 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R194 += 1, R131 += 1, R132 += 1 };
  s0 -> s2 [0, 65535] { R194 += 1, R132 += 1, R90 += 1 };
  s0 -> s0 [0, 65535] { R193 += 1, R194 += 1 };
  s0 -> s3 [0, 65535] { R194 += 1, R132 += 1 };
  s1 -> s1 [0, 65535] { R194 += 1, R131 += 1, R132 += 1 };
  s1 -> s2 [0, 65535] { R194 += 1, R132 += 1, R90 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s3 [0, 65535] { R194 += 1, R132 += 1 };
  s2 -> s2 [0, 65535] { R194 += 1, R132 += 1, R90 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R194 += 1, R132 += 1 };
  s2 -> s5 [0, 65535] { R194 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R194 += 1, R132 += 1 };
  s3 -> s5 [0, 65535] { R194 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R194 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R195 += 1, R196 += 1 };
  s0 -> s1 [0, 65535] { R196 += 1, R134 += 1, R95 += 1, R96 += 1 };
  s0 -> s2 [0, 65535] { R196 += 1, R133 += 1, R134 += 1 };
  s0 -> s3 [0, 65535] { R196 += 1, R134 += 1, R94 += 1, R95 += 1 };
  s1 -> s6 [0, 65535] { R196 += 1, R134 += 1 };
  s1 -> s1 [0, 65535] { R196 += 1, R134 += 1, R95 += 1, R96 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R196 += 1 };
  s2 -> s1 [0, 65535] { R196 += 1, R134 += 1, R95 += 1, R96 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R196 += 1, R133 += 1, R134 += 1 };
  s2 -> s3 [0, 65535] { R196 += 1, R134 += 1, R94 += 1, R95 += 1 };
  s3 -> s1 [0, 65535] { R196 += 1, R134 += 1, R95 += 1, R96 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R196 += 1 };
  s3 -> s3 [0, 65535] { R196 += 1, R134 += 1, R94 += 1, R95 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R196 += 1 };
  s6 -> s6 [0, 65535] { R196 += 1, R134 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R196 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 74] { R198 += 1, R136 += 1, R101 += 1 };
  s0 -> s2 [0, 65535] { R198 += 1, R136 += 1, R100 += 1, R101 += 1 };
  s0 -> s3 [0, 65535] { R198 += 1, R135 += 1, R136 += 1 };
  s0 -> s4 [0, 65535] { R198 += 1, R136 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R197 += 1, R198 += 1 };
  s0 -> s1 [76, 65535] { R198 += 1, R136 += 1, R101 += 1 };
  s1 -> s1 [0, 74] { R198 += 1, R136 += 1, R101 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R198 += 1 };
  s1 -> s1 [0, 65535] { R198 += 1, R136 += 1 };
  s1 -> s1 [76, 65535] { R198 += 1, R136 += 1, R101 += 1 };
  s2 -> s1 [0, 74] { R198 += 1, R136 += 1, R101 += 1 };
  s2 -> s2 [0, 65535] { R198 += 1, R136 += 1, R100 += 1, R101 += 1 };
  s2 -> s4 [0, 65535] { R198 += 1, R136 += 1, R101 += 1, R102 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R198 += 1 };
  s2 -> s1 [76, 65535] { R198 += 1, R136 += 1, R101 += 1 };
  s3 -> s1 [0, 74] { R198 += 1, R136 += 1, R101 += 1 };
  s3 -> s2 [0, 65535] { R198 += 1, R136 += 1, R100 += 1, R101 += 1 };
  s3 -> s3 [0, 65535] { R198 += 1, R135 += 1, R136 += 1 };
  s3 -> s4 [0, 65535] { R198 += 1, R136 += 1, R101 += 1, R102 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [76, 65535] { R198 += 1, R136 += 1, R101 += 1 };
  s4 -> s1 [0, 74] { R198 += 1, R136 += 1, R101 += 1 };
  s4 -> s4 [0, 65535] { R198 += 1, R136 += 1, R101 += 1, R102 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R198 += 1 };
  s4 -> s7 [0, 65535] { R198 += 1, R136 += 1 };
  s4 -> s1 [76, 65535] { R198 += 1, R136 += 1, R101 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R198 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R198 += 1 };
  s7 -> s7 [0, 65535] { R198 += 1, R136 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R200 += 1, R138 += 1 };
  s0 -> s2 [0, 65535] { R200 += 1, R137 += 1, R138 += 1 };
  s0 -> s0 [0, 65535] { R199 += 1, R200 += 1 };
  s0 -> s3 [0, 65535] { R200 += 1, R138 += 1, R108 += 1, R110 += 1 };
  s0 -> s4 [0, 65535] { R200 += 1, R138 += 1, R108 += 1 };
  s1 -> s6 [0, 65535] { R200 += 1 };
  s1 -> s1 [0, 65535] { R200 += 1, R138 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R200 += 1, R138 += 1 };
  s2 -> s2 [0, 65535] { R200 += 1, R137 += 1, R138 += 1 };
  s2 -> s3 [0, 65535] { R200 += 1, R138 += 1, R108 += 1, R110 += 1 };
  s2 -> s4 [0, 65535] { R200 += 1, R138 += 1, R108 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R200 += 1 };
  s3 -> s1 [0, 65535] { R200 += 1, R138 += 1 };
  s3 -> s3 [0, 65535] { R200 += 1, R138 += 1, R108 += 1, R110 += 1 };
  s3 -> s4 [0, 65535] { R200 += 1, R138 += 1, R108 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R200 += 1 };
  s4 -> s1 [0, 65535] { R200 += 1, R138 += 1 };
  s4 -> s4 [0, 65535] { R200 += 1, R138 += 1, R108 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R200 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R202 += 1, R139 += 1, R140 += 1 };
  s0 -> s0 [0, 65535] { R201 += 1, R202 += 1 };
  s0 -> s2 [0, 65535] { R202 += 1, R140 += 1 };
  s0 -> s3 [0, 65535] { R202 += 1, R140 += 1, R117 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R202 += 1, R139 += 1, R140 += 1 };
  s1 -> s2 [0, 65535] { R202 += 1, R140 += 1 };
  s1 -> s3 [0, 65535] { R202 += 1, R140 += 1, R117 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R202 += 1, R140 += 1 };
  s2 -> s5 [0, 65535] { R202 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R202 += 1, R140 += 1 };
  s3 -> s3 [0, 65535] { R202 += 1, R140 += 1, R117 += 1 };
  s3 -> s5 [0, 65535] { R202 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R202 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R204 += 1, R160 += 1, R21 += 1 };
  s0 -> s2 [0, 65535] { R204 += 1, R159 += 1, R160 += 1 };
  s0 -> s0 [0, 65535] { R203 += 1, R204 += 1 };
  s1 -> s1 [0, 65535] { R204 += 1, R160 += 1, R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R204 += 1 };
  s2 -> s1 [0, 65535] { R204 += 1, R160 += 1, R21 += 1 };
  s2 -> s2 [0, 65535] { R204 += 1, R159 += 1, R160 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R204 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R206 += 1, R162 += 1 };
  s0 -> s2 [0, 65535] { R206 += 1, R161 += 1, R162 += 1 };
  s0 -> s0 [0, 65535] { R205 += 1, R206 += 1 };
  s0 -> s3 [70, 70] { R206 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R206 += 1, R162 += 1 };
  s0 -> s5 [75, 75] { R206 += 1, R162 += 1 };
  s0 -> s1 [76, 65535] { R206 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R206 += 1, R162 += 1 };
  s1 -> s3 [70, 70] { R206 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R206 += 1, R162 += 1 };
  s1 -> s5 [75, 75] { R206 += 1, R162 += 1 };
  s1 -> s1 [76, 65535] { R206 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R206 += 1, R162 += 1 };
  s2 -> s2 [0, 65535] { R206 += 1, R161 += 1, R162 += 1 };
  s2 -> s3 [70, 70] { R206 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R206 += 1, R162 += 1 };
  s2 -> s5 [75, 75] { R206 += 1, R162 += 1 };
  s2 -> s1 [76, 65535] { R206 += 1, R162 += 1 };
  s3 -> s3 [0, 70] { R206 += 1, R162 += 1 };
  s3 -> s8 [75, 75] { R206 += 1, R162 += 1 };
  s3 -> s3 [76, 65535] { R206 += 1, R162 += 1 };
  s5 -> s5 [0, 69] { R206 += 1, R162 += 1 };
  s5 -> s5 [0, 65535] { R206 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R206 += 1, R162 += 1 };
  s5 -> s8 [70, 70] { R206 += 1, R162 += 1 };
  s5 -> s5 [75, 65535] { R206 += 1, R162 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R206 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 70] { R206 += 1, R162 += 1 };
  s8 -> s8 [0, 65535] { R206 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [75, 65535] { R206 += 1, R162 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 69] { R208 += 1, R164 += 1, R83 += 1 };
  s0 -> s0 [0, 65535] { R207 += 1, R208 += 1 };
  s0 -> s2 [0, 65535] { R208 += 1, R163 += 1, R164 += 1 };
  s0 -> s3 [70, 70] { R208 += 1, R164 += 1, R83 += 1 };
  s0 -> s4 [70, 70] { R208 += 1, R164 += 1, R83 += 1 };
  s0 -> s1 [71, 65535] { R208 += 1, R164 += 1, R83 += 1 };
  s1 -> s1 [0, 69] { R208 += 1, R164 += 1, R83 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R208 += 1 };
  s1 -> s3 [70, 70] { R208 += 1, R164 += 1, R83 += 1 };
  s1 -> s4 [70, 70] { R208 += 1, R164 += 1, R83 += 1 };
  s1 -> s1 [71, 65535] { R208 += 1, R164 += 1, R83 += 1 };
  s2 -> s1 [0, 69] { R208 += 1, R164 += 1, R83 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R208 += 1, R163 += 1, R164 += 1 };
  s2 -> s3 [70, 70] { R208 += 1, R164 += 1, R83 += 1 };
  s2 -> s4 [70, 70] { R208 += 1, R164 += 1, R83 += 1 };
  s2 -> s1 [71, 65535] { R208 += 1, R164 += 1, R83 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R208 += 1 };
  s4 -> s5 [0, 65535] { R208 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R208 += 1, R164 += 1, R83 += 1 };
  s5 -> s5 [0, 65535] { R208 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 69] { R210 += 1, R166 += 1, R85 += 1 };
  s0 -> s0 [0, 65535] { R209 += 1, R210 += 1 };
  s0 -> s2 [0, 65535] { R210 += 1, R165 += 1, R166 += 1 };
  s0 -> s3 [70, 70] { R210 += 1, R166 += 1, R85 += 1 };
  s0 -> s4 [70, 70] { R210 += 1, R166 += 1, R85 += 1 };
  s0 -> s1 [71, 65535] { R210 += 1, R166 += 1, R85 += 1 };
  s1 -> s1 [0, 69] { R210 += 1, R166 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R210 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R210 += 1, R166 += 1, R85 += 1 };
  s1 -> s4 [70, 70] { R210 += 1, R166 += 1, R85 += 1 };
  s1 -> s1 [71, 65535] { R210 += 1, R166 += 1, R85 += 1 };
  s2 -> s1 [0, 69] { R210 += 1, R166 += 1, R85 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R210 += 1, R165 += 1, R166 += 1 };
  s2 -> s3 [70, 70] { R210 += 1, R166 += 1, R85 += 1 };
  s2 -> s4 [70, 70] { R210 += 1, R166 += 1, R85 += 1 };
  s2 -> s1 [71, 65535] { R210 += 1, R166 += 1, R85 += 1 };
  s3 -> s3 [0, 65535] { R210 += 1, R166 += 1, R85 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R210 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R210 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R210 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R212 += 1, R168 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [0, 69] { R212 += 1, R168 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R211 += 1, R212 += 1 };
  s0 -> s3 [0, 65535] { R212 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R212 += 1, R168 += 1, R88 += 1 };
  s0 -> s5 [70, 70] { R212 += 1, R168 += 1, R87 += 1, R88 += 1 };
  s0 -> s6 [70, 70] { R212 += 1, R168 += 1, R88 += 1 };
  s0 -> s7 [70, 70] { R212 += 1, R168 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [71, 74] { R212 += 1, R168 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R212 += 1, R168 += 1, R87 += 1, R88 += 1 };
  s0 -> s8 [75, 75] { R212 += 1, R168 += 1, R88 += 1 };
  s0 -> s2 [76, 65535] { R212 += 1, R168 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R212 += 1, R168 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [0, 69] { R212 += 1, R168 += 1, R88 += 1 };
  s1 -> s4 [70, 70] { R212 += 1, R168 += 1, R88 += 1 };
  s1 -> s5 [70, 70] { R212 += 1, R168 += 1, R87 += 1, R88 += 1 };
  s1 -> s6 [70, 70] { R212 += 1, R168 += 1, R88 += 1 };
  s1 -> s7 [70, 70] { R212 += 1, R168 += 1, R87 += 1, R88 += 1 };
  s1 -> s2 [71, 74] { R212 += 1, R168 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R212 += 1, R168 += 1, R87 += 1, R88 += 1 };
  s1 -> s8 [75, 75] { R212 += 1, R168 += 1, R88 += 1 };
  s1 -> s2 [76, 65535] { R212 += 1, R168 += 1, R88 += 1 };
  s2 -> s2 [0, 69] { R212 += 1, R168 += 1, R88 += 1 };
  s2 -> s4 [70, 70] { R212 += 1, R168 += 1, R88 += 1 };
  s2 -> s6 [70, 70] { R212 += 1, R168 += 1, R88 += 1 };
  s2 -> s2 [71, 74] { R212 += 1, R168 += 1, R88 += 1 };
  s2 -> s8 [75, 75] { R212 += 1, R168 += 1, R88 += 1 };
  s2 -> s2 [76, 65535] { R212 += 1, R168 += 1, R88 += 1 };
  s3 -> s1 [0, 69] { R212 += 1, R168 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [0, 69] { R212 += 1, R168 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R212 += 1, R167 += 1, R168 += 1 };
  s3 -> s4 [70, 70] { R212 += 1, R168 += 1, R88 += 1 };
  s3 -> s5 [70, 70] { R212 += 1, R168 += 1, R87 += 1, R88 += 1 };
  s3 -> s6 [70, 70] { R212 += 1, R168 += 1, R88 += 1 };
  s3 -> s7 [70, 70] { R212 += 1, R168 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [71, 74] { R212 += 1, R168 += 1, R88 += 1 };
  s3 -> s1 [71, 65535] { R212 += 1, R168 += 1, R87 += 1, R88 += 1 };
  s3 -> s8 [75, 75] { R212 += 1, R168 += 1, R88 += 1 };
  s3 -> s2 [76, 65535] { R212 += 1, R168 += 1, R88 += 1 };
  s6 -> s6 [0, 74] { R212 += 1, R168 += 1, R88 += 1 };
  s6 -> s10 [75, 75] { R212 += 1, R168 += 1, R88 += 1 };
  s6 -> s6 [76, 65535] { R212 += 1, R168 += 1, R88 += 1 };
  s7 -> s6 [0, 74] { R212 += 1, R168 += 1, R88 += 1 };
  s7 -> s7 [0, 65535] { R212 += 1, R168 += 1, R87 += 1, R88 += 1 };
  s7 -> s10 [75, 75] { R212 += 1, R168 += 1, R88 += 1 };
  s7 -> s6 [76, 65535] { R212 += 1, R168 += 1, R88 += 1 };
  s8 -> s8 [0, 69] { R212 += 1, R168 += 1, R88 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R212 += 1 };
  s8 -> s10 [70, 70] { R212 += 1, R168 += 1, R88 += 1 };
  s8 -> s11 [70, 70] { R212 += 1, R168 += 1, R88 += 1 };
  s8 -> s8 [71, 65535] { R212 += 1, R168 += 1, R88 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s12 [0, 65535] { R212 += 1 };
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R212 += 1, R168 += 1, R88 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R212 += 1 };
  s12 -> s12 [0, 65535] { R212 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R214 += 1, R170 += 1, R91 += 1, R92 += 1 };
  s0 -> s2 [0, 65535] { R214 += 1, R169 += 1, R170 += 1 };
  s0 -> s0 [0, 65535] { R213 += 1, R214 += 1 };
  s0 -> s3 [70, 70] { R214 += 1, R170 += 1, R91 += 1, R92 += 1 };
  s0 -> s4 [70, 70] { R214 += 1, R170 += 1, R91 += 1, R92 += 1 };
  s0 -> s1 [71, 65535] { R214 += 1, R170 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [0, 69] { R214 += 1, R170 += 1, R91 += 1, R92 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R214 += 1 };
  s1 -> s3 [70, 70] { R214 += 1, R170 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [70, 70] { R214 += 1, R170 += 1, R91 += 1, R92 += 1 };
  s1 -> s1 [71, 65535] { R214 += 1, R170 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [0, 69] { R214 += 1, R170 += 1, R91 += 1, R92 += 1 };
  s2 -> s2 [0, 65535] { R214 += 1, R169 += 1, R170 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R214 += 1, R170 += 1, R91 += 1, R92 += 1 };
  s2 -> s4 [70, 70] { R214 += 1, R170 += 1, R91 += 1, R92 += 1 };
  s2 -> s1 [71, 65535] { R214 += 1, R170 += 1, R91 += 1, R92 += 1 };
  s3 -> s3 [0, 65535] { R214 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R214 += 1, R170 += 1, R91 += 1, R92 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R214 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R214 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R216 += 1, R172 += 1, R97 += 1, R98 += 1 };
  s0 -> s0 [0, 65535] { R215 += 1, R216 += 1 };
  s0 -> s2 [0, 65535] { R216 += 1, R171 += 1, R172 += 1 };
  s0 -> s3 [70, 70] { R216 += 1, R172 += 1, R97 += 1, R98 += 1 };
  s0 -> s4 [70, 70] { R216 += 1, R172 += 1, R97 += 1, R98 += 1 };
  s0 -> s1 [71, 65535] { R216 += 1, R172 += 1, R97 += 1, R98 += 1 };
  s1 -> s1 [0, 69] { R216 += 1, R172 += 1, R97 += 1, R98 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R216 += 1 };
  s1 -> s3 [70, 70] { R216 += 1, R172 += 1, R97 += 1, R98 += 1 };
  s1 -> s4 [70, 70] { R216 += 1, R172 += 1, R97 += 1, R98 += 1 };
  s1 -> s1 [71, 65535] { R216 += 1, R172 += 1, R97 += 1, R98 += 1 };
  s2 -> s1 [0, 69] { R216 += 1, R172 += 1, R97 += 1, R98 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R216 += 1, R171 += 1, R172 += 1 };
  s2 -> s3 [70, 70] { R216 += 1, R172 += 1, R97 += 1, R98 += 1 };
  s2 -> s4 [70, 70] { R216 += 1, R172 += 1, R97 += 1, R98 += 1 };
  s2 -> s1 [71, 65535] { R216 += 1, R172 += 1, R97 += 1, R98 += 1 };
  s3 -> s3 [0, 65535] { R216 += 1, R172 += 1, R97 += 1, R98 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R216 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R216 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R216 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R218 += 1, R174 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s0 -> s2 [0, 69] { R218 += 1, R174 += 1, R103 += 1, R104 += 1 };
  s0 -> s3 [0, 69] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s0 -> s4 [0, 65535] { R218 += 1, R173 += 1, R174 += 1 };
  s0 -> s0 [0, 65535] { R217 += 1, R218 += 1 };
  s0 -> s5 [70, 70] { R218 += 1, R174 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s0 -> s6 [70, 70] { R218 += 1, R174 += 1, R103 += 1, R104 += 1 };
  s0 -> s7 [70, 70] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s0 -> s8 [70, 70] { R218 += 1, R174 += 1, R103 += 1, R104 += 1 };
  s0 -> s9 [70, 70] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s0 -> s10 [70, 70] { R218 += 1, R174 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s0 -> s3 [71, 74] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s0 -> s1 [71, 65535] { R218 += 1, R174 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s0 -> s2 [71, 65535] { R218 += 1, R174 += 1, R103 += 1, R104 += 1 };
  s0 -> s11 [75, 75] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s0 -> s3 [76, 65535] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s1 -> s1 [0, 69] { R218 += 1, R174 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s1 -> s3 [0, 69] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s1 -> s5 [70, 70] { R218 += 1, R174 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s1 -> s7 [70, 70] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s1 -> s9 [70, 70] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s1 -> s10 [70, 70] { R218 += 1, R174 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s1 -> s3 [71, 74] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s1 -> s1 [71, 65535] { R218 += 1, R174 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s1 -> s11 [75, 75] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s1 -> s3 [76, 65535] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s2 -> s1 [0, 69] { R218 += 1, R174 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s2 -> s2 [0, 69] { R218 += 1, R174 += 1, R103 += 1, R104 += 1 };
  s2 -> s3 [0, 69] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s2 -> s5 [70, 70] { R218 += 1, R174 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s2 -> s6 [70, 70] { R218 += 1, R174 += 1, R103 += 1, R104 += 1 };
  s2 -> s7 [70, 70] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s2 -> s8 [70, 70] { R218 += 1, R174 += 1, R103 += 1, R104 += 1 };
  s2 -> s9 [70, 70] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s2 -> s10 [70, 70] { R218 += 1, R174 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s2 -> s3 [71, 74] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s2 -> s1 [71, 65535] { R218 += 1, R174 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s2 -> s2 [71, 65535] { R218 += 1, R174 += 1, R103 += 1, R104 += 1 };
  s2 -> s11 [75, 75] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s2 -> s3 [76, 65535] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s3 -> s3 [0, 69] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s3 -> s7 [70, 70] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s3 -> s9 [70, 70] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s3 -> s3 [71, 74] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s3 -> s11 [75, 75] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s3 -> s3 [76, 65535] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s4 -> s1 [0, 69] { R218 += 1, R174 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s4 -> s2 [0, 69] { R218 += 1, R174 += 1, R103 += 1, R104 += 1 };
  s4 -> s3 [0, 69] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s4 -> s4 [0, 65535] { R218 += 1, R173 += 1, R174 += 1 };
  s4 -> s5 [70, 70] { R218 += 1, R174 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s4 -> s6 [70, 70] { R218 += 1, R174 += 1, R103 += 1, R104 += 1 };
  s4 -> s7 [70, 70] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s4 -> s8 [70, 70] { R218 += 1, R174 += 1, R103 += 1, R104 += 1 };
  s4 -> s9 [70, 70] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s4 -> s10 [70, 70] { R218 += 1, R174 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s4 -> s3 [71, 74] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s4 -> s1 [71, 65535] { R218 += 1, R174 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s4 -> s2 [71, 65535] { R218 += 1, R174 += 1, R103 += 1, R104 += 1 };
  s4 -> s11 [75, 75] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s4 -> s3 [76, 65535] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s5 -> s7 [0, 74] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s5 -> s5 [0, 65535] { R218 += 1, R174 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s5 -> s14 [75, 75] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s5 -> s7 [76, 65535] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s6 -> s7 [0, 74] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s6 -> s5 [0, 65535] { R218 += 1, R174 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s6 -> s6 [0, 65535] { R218 += 1, R174 += 1, R103 += 1, R104 += 1 };
  s6 -> s14 [75, 75] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s6 -> s7 [76, 65535] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s7 -> s7 [0, 74] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s7 -> s14 [75, 75] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s7 -> s7 [76, 65535] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s11 -> s11 [0, 69] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s11 [0, 65535] { R218 += 1 };
  s11 -> s13 [70, 70] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s11 -> s14 [70, 70] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s11 -> s11 [71, 65535] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R218 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s15 [0, 65535] { R218 += 1 };
  s14 -> s14 [0, 65535] { R218 += 1, R174 += 1, R104 += 1, R106 += 1 };
  s15 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R218 += 1 };
  accepting s12, s13, s14, s15, s11;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R220 += 1, R176 += 1, R112 += 1, R113 += 1, R114 += 1 };
  s0 -> s2 [0, 69] { R220 += 1, R176 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [0, 69] { R220 += 1, R176 += 1, R112 += 1, R114 += 1, R115 += 1 };
  s0 -> s0 [0, 65535] { R219 += 1, R220 += 1 };
  s0 -> s4 [0, 65535] { R220 += 1, R175 += 1, R176 += 1 };
  s0 -> s5 [70, 70] { R220 += 1, R176 += 1, R112 += 1, R114 += 1, R115 += 1 };
  s0 -> s6 [70, 70] { R220 += 1, R176 += 1, R112 += 1, R113 += 1, R114 += 1 };
  s0 -> s7 [70, 70] { R220 += 1, R176 += 1, R111 += 1, R112 += 1 };
  s0 -> s8 [70, 70] { R220 += 1, R176 += 1, R111 += 1, R112 += 1 };
  s0 -> s9 [70, 70] { R220 += 1, R176 += 1, R112 += 1, R113 += 1, R114 += 1 };
  s0 -> s10 [70, 70] { R220 += 1, R176 += 1, R112 += 1, R114 += 1, R115 += 1 };
  s0 -> s1 [71, 65535] { R220 += 1, R176 += 1, R112 += 1, R113 += 1, R114 += 1 };
  s0 -> s2 [71, 65535] { R220 += 1, R176 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [71, 65535] { R220 += 1, R176 += 1, R112 += 1, R114 += 1, R115 += 1 };
  s1 -> s1 [0, 69] { R220 += 1, R176 += 1, R112 += 1, R113 += 1, R114 += 1 };
  s1 -> s3 [0, 69] { R220 += 1, R176 += 1, R112 += 1, R114 += 1, R115 += 1 };
  s1 -> s5 [70, 70] { R220 += 1, R176 += 1, R112 += 1, R114 += 1, R115 += 1 };
  s1 -> s6 [70, 70] { R220 += 1, R176 += 1, R112 += 1, R113 += 1, R114 += 1 };
  s1 -> s9 [70, 70] { R220 += 1, R176 += 1, R112 += 1, R113 += 1, R114 += 1 };
  s1 -> s10 [70, 70] { R220 += 1, R176 += 1, R112 += 1, R114 += 1, R115 += 1 };
  s1 -> s1 [71, 65535] { R220 += 1, R176 += 1, R112 += 1, R113 += 1, R114 += 1 };
  s1 -> s3 [71, 65535] { R220 += 1, R176 += 1, R112 += 1, R114 += 1, R115 += 1 };
  s2 -> s1 [0, 69] { R220 += 1, R176 += 1, R112 += 1, R113 += 1, R114 += 1 };
  s2 -> s2 [0, 69] { R220 += 1, R176 += 1, R111 += 1, R112 += 1 };
  s2 -> s3 [0, 69] { R220 += 1, R176 += 1, R112 += 1, R114 += 1, R115 += 1 };
  s2 -> s5 [70, 70] { R220 += 1, R176 += 1, R112 += 1, R114 += 1, R115 += 1 };
  s2 -> s6 [70, 70] { R220 += 1, R176 += 1, R112 += 1, R113 += 1, R114 += 1 };
  s2 -> s7 [70, 70] { R220 += 1, R176 += 1, R111 += 1, R112 += 1 };
  s2 -> s8 [70, 70] { R220 += 1, R176 += 1, R111 += 1, R112 += 1 };
  s2 -> s9 [70, 70] { R220 += 1, R176 += 1, R112 += 1, R113 += 1, R114 += 1 };
  s2 -> s10 [70, 70] { R220 += 1, R176 += 1, R112 += 1, R114 += 1, R115 += 1 };
  s2 -> s1 [71, 65535] { R220 += 1, R176 += 1, R112 += 1, R113 += 1, R114 += 1 };
  s2 -> s2 [71, 65535] { R220 += 1, R176 += 1, R111 += 1, R112 += 1 };
  s2 -> s3 [71, 65535] { R220 += 1, R176 += 1, R112 += 1, R114 += 1, R115 += 1 };
  s3 -> s3 [0, 69] { R220 += 1, R176 += 1, R112 += 1, R114 += 1, R115 += 1 };
  s3 -> s14 [0, 69] { R220 += 1, R176 += 1, R112 += 1 };
  s3 -> s11 [70, 70] { R220 += 1, R176 += 1, R112 += 1 };
  s3 -> s5 [70, 70] { R220 += 1, R176 += 1, R112 += 1, R114 += 1, R115 += 1 };
  s3 -> s10 [70, 70] { R220 += 1, R176 += 1, R112 += 1, R114 += 1, R115 += 1 };
  s3 -> s15 [70, 70] { R220 += 1, R176 += 1, R112 += 1 };
  s3 -> s3 [71, 65535] { R220 += 1, R176 += 1, R112 += 1, R114 += 1, R115 += 1 };
  s3 -> s14 [71, 65535] { R220 += 1, R176 += 1, R112 += 1 };
  s4 -> s1 [0, 69] { R220 += 1, R176 += 1, R112 += 1, R113 += 1, R114 += 1 };
  s4 -> s2 [0, 69] { R220 += 1, R176 += 1, R111 += 1, R112 += 1 };
  s4 -> s3 [0, 69] { R220 += 1, R176 += 1, R112 += 1, R114 += 1, R115 += 1 };
  s4 -> s4 [0, 65535] { R220 += 1, R175 += 1, R176 += 1 };
  s4 -> s5 [70, 70] { R220 += 1, R176 += 1, R112 += 1, R114 += 1, R115 += 1 };
  s4 -> s6 [70, 70] { R220 += 1, R176 += 1, R112 += 1, R113 += 1, R114 += 1 };
  s4 -> s7 [70, 70] { R220 += 1, R176 += 1, R111 += 1, R112 += 1 };
  s4 -> s8 [70, 70] { R220 += 1, R176 += 1, R111 += 1, R112 += 1 };
  s4 -> s9 [70, 70] { R220 += 1, R176 += 1, R112 += 1, R113 += 1, R114 += 1 };
  s4 -> s10 [70, 70] { R220 += 1, R176 += 1, R112 += 1, R114 += 1, R115 += 1 };
  s4 -> s1 [71, 65535] { R220 += 1, R176 += 1, R112 += 1, R113 += 1, R114 += 1 };
  s4 -> s2 [71, 65535] { R220 += 1, R176 += 1, R111 += 1, R112 += 1 };
  s4 -> s3 [71, 65535] { R220 += 1, R176 += 1, R112 += 1, R114 += 1, R115 += 1 };
  s5 -> s11 [0, 65535] { R220 += 1, R176 += 1, R112 += 1 };
  s5 -> s5 [0, 65535] { R220 += 1, R176 += 1, R112 += 1, R114 += 1, R115 += 1 };
  s8 -> s5 [0, 65535] { R220 += 1, R176 += 1, R112 += 1, R114 += 1, R115 += 1 };
  s8 -> s8 [0, 65535] { R220 += 1, R176 += 1, R111 += 1, R112 += 1 };
  s8 -> s9 [0, 65535] { R220 += 1, R176 += 1, R112 += 1, R113 += 1, R114 += 1 };
  s9 -> s5 [0, 65535] { R220 += 1, R176 += 1, R112 += 1, R114 += 1, R115 += 1 };
  s9 -> s9 [0, 65535] { R220 += 1, R176 += 1, R112 += 1, R113 += 1, R114 += 1 };
  s11 -> s11 [0, 65535] { R220 += 1, R176 += 1, R112 += 1 };
  s11 -> s12 [0, 65535] { R220 += 1 };
  s11 -> s13 [0, 65535];
  s12 -> s12 [0, 65535] { R220 += 1 };
  s12 -> s13 [0, 65535];
  s13 -> s13 [0, 65535];
  s14 -> s14 [0, 69] { R220 += 1, R176 += 1, R112 += 1 };
  s14 -> s14 [0, 65535] { R220 += 1 };
  s14 -> s13 [0, 65535];
  s14 -> s11 [70, 70] { R220 += 1, R176 += 1, R112 += 1 };
  s14 -> s15 [70, 70] { R220 += 1, R176 += 1, R112 += 1 };
  s14 -> s14 [71, 65535] { R220 += 1, R176 += 1, R112 += 1 };
  s15 -> s15 [0, 65535] { R220 += 1 };
  s15 -> s13 [0, 65535];
  accepting s12, s13, s14, s15, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R220 && R23 - R220 = -1 && R24 = R220 && R25 - R220 = -1 && R26 = R220 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R45 + R84 + R83 + -1*R108 + -1*R104 - R66 = 0 && R49 + R89 + R87 = 0 && R50 + R90 + R88 + -1*R108 + -1*R104 - R66 = 0 && R55 + R96 + R93 + -1*R110 + -1*R106 - R68 = 0 && R65 + R107 + R103 = 0 && R67 + R109 + R105 = 0 && R161 = 0 && R162 = 0 && R167 = 0 && R168 = 0 && R173 = 0 && R174 = 0 && R175 = 0 && R176 = 0 && R177 = 0 && R178 = R220 && R179 = 0 && R180 = R220 && R181 = 0 && R182 = R220 && R183 = 0 && R184 = R220 && R185 = 0 && R186 = R220 && R187 = 0 && R188 = R220 && R189 = 0 && R190 = R220 && R191 = 0 && R192 = R220 && R193 = 0 && R194 = R220 && R195 = 0 && R196 = R220 && R197 = 0 && R198 = R220 && R199 = 0 && R200 = R220 && R201 = 0 && R202 = R220 && R203 = 0 && R204 = R220 && R205 = 0 && R206 = R220 && R207 = 0 && R208 = R220 && R209 = 0 && R210 = R220 && R211 = 0 && R212 = R220 && R213 = 0 && R214 = R220 && R215 = 0 && R216 = R220 && R217 = 0 && R218 = R220 && R219 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R47 + R86 + R85 < 1 && R61 + R102 + R99 < 1 && -1*R108 + -1*R104 - R66 < 1 && -1*R110 + -1*R106 - R68 < 1 && 0 < R220 && (R2 != 0 || R20 = 0 || (R121 = 0 && R122 = 0)) && (R2 != 0 || R20 = 0 || (R123 = 0 && R124 = 0)) && (R2 != 0 || R20 = 0 || (R125 = 0 && R126 = 0)) && (R2 != 0 || R20 = 0 || (R127 = 0 && R128 = 0)) && (R2 != 0 || R20 = 0 || (R129 = 0 && R130 = 0)) && (R2 != 0 || R20 = 0 || (R131 = 0 && R132 = 0)) && (R2 != 0 || R20 = 0 || (R133 = 0 && R134 = 0)) && (R2 != 0 || R20 = 0 || (R135 = 0 && R136 = 0)) && (R2 != 0 || R20 = 0 || (R137 = 0 && R138 = 0)) && (R2 != 0 || R20 = 0 || (R139 = 0 && R140 = 0)) && (R53 + R94 + R91 != 0 || R54 + R95 + R92 + -1*R108 + -1*R104 - R66 = 0 || R66 + R108 + R104 < 1) && (R59 + R100 + R97 != 0 || R60 + R101 + R98 + -1*R108 + -1*R104 - R66 = 0 || R66 + R108 + R104 < 1) && (R66 + R108 + R104 != 0 || ((R53 + R94 + R91 != 0 || R54 + R95 + R92 = 0 || R68 + R110 + R106 < 1) && (R53 + R94 + R91 = 0 || R68 + R110 + R106 < 1))) && (R66 + R108 + R104 != 0 || ((R59 + R100 + R97 != 0 || R60 + R101 + R98 = 0 || R68 + R110 + R106 < 1) && (R59 + R100 + R97 = 0 || R68 + R110 + R106 < 1))) && (R66 + R108 + R104 != 0 || ((R73 + R116 + R111 != 0 || R74 + R117 + R112 = 0 || R68 + R110 + R106 < 1) && (R73 + R116 + R111 = 0 || R68 + R110 + R106 < 1))) && (R68 + R110 + R106 != 0 || R77 + R120 + R115 = 0 || (R75 + R118 + R113 = 0 && R76 + R119 + R114 = 0)) && (R73 + R116 + R111 != 0 || R66 + R108 + R104 + -1*R117 + -1*R112 - R74 = 0 || R66 + R108 + R104 < 1) && (R75 + R118 + R113 != 0 || R68 + R110 + R106 + -1*R119 + -1*R114 - R76 = 0 || R68 + R110 + R106 < 1) && (R121 != 0 || R2 = R122 || R2 < 1) && (R123 != 0 || R2 = R124 || R2 < 1) && (R125 != 0 || R2 = R126 || R2 < 1) && (R127 != 0 || R2 = R128 || R2 < 1) && (R129 != 0 || R2 = R130 || R2 < 1) && (R131 != 0 || R2 = R132 || R2 < 1) && (R133 != 0 || R2 = R134 || R2 < 1) && (R135 != 0 || R2 = R136 || R2 < 1) && (R137 != 0 || R2 = R138 || R2 < 1) && (R139 != 0 || R2 = R140 || R2 < 1) && (R21 = 0 || (R159 = 0 && R160 = 0)) && (R21 = 0 || (R163 = 0 && R164 = 0)) && (R21 = 0 || (R165 = 0 && R166 = 0)) && (R21 = 0 || (R169 = 0 && R170 = 0)) && (R21 = 0 || (R171 = 0 && R172 = 0)) && (R22 = 0 || (R141 = 0 && R142 = 0)) && (R22 = 0 || (R143 = 0 && R144 = 0)) && (R22 = 0 || (R145 = 0 && R146 = 0)) && (R22 = 0 || (R147 = 0 && R148 = 0)) && (R22 = 0 || (R149 = 0 && R150 = 0)) && (R22 = 0 || (R151 = 0 && R152 = 0)) && (R22 = 0 || (R153 = 0 && R154 = 0)) && (R22 = 0 || (R155 = 0 && R156 = 0)) && (R22 = 0 || (R157 = 0 && R158 = 0)) && (R53 + R94 + R91 = 0 || R66 + R108 + R104 < 1) && (R59 + R100 + R97 = 0 || R66 + R108 + R104 < 1) && (R73 + R116 + R111 = 0 || R66 + R108 + R104 < 1) && (R75 + R118 + R113 = 0 || R68 + R110 + R106 < 1) && (R121 = 0 || R2 < 1) && (R123 = 0 || R2 < 1) && (R125 = 0 || R2 < 1) && (R127 = 0 || R2 < 1) && (R129 = 0 || R2 < 1) && (R131 = 0 || R2 < 1) && (R133 = 0 || R2 < 1) && (R135 = 0 || R2 < 1) && (R137 = 0 || R2 < 1) && (R139 = 0 || R2 < 1);
// End of Parikh automata intersection problem
