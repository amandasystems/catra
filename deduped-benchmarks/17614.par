// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R1467, R1468, R1469, R147, R1470, R1471, R1472, R1473, R1474, R1475, R1476, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R1635, R1636, R1637, R1638, R1639, R164, R1640, R1641, R1642, R1643, R1644, R1645, R1646, R1647, R1648, R1649, R165, R1650, R1651, R1652, R1653, R1654, R1655, R1656, R1657, R1658, R1659, R166, R1660, R1661, R1662, R1663, R1664, R1665, R1666, R1667, R1668, R1669, R167, R1670, R1671, R1672, R1673, R1674, R1675, R1676, R1677, R1678, R1679, R168, R1680, R1681, R1682, R1683, R1684, R1685, R1686, R1687, R1688, R1689, R169, R1690, R1691, R1692, R1693, R1694, R1695, R1696, R1697, R1698, R1699, R170, R1700, R1701, R1702, R1703, R1704, R1705, R1706, R1707, R1708, R1709, R171, R1710, R1711, R1712, R1713, R1714, R1715, R1716, R1717, R1718, R1719, R172, R1720, R1721, R1722, R1723, R1724, R1725, R1726, R1727, R1728, R1729, R173, R1730, R1731, R1732, R1733, R1734, R1735, R1736, R1737, R1738, R1739, R174, R1740, R1741, R1742, R1743, R1744, R1745, R1746, R1747, R1748, R1749, R175, R1750, R1751, R1752, R1753, R1754, R1755, R1756, R1757, R1758, R1759, R176, R1760, R1761, R1762, R1763, R1764, R1765, R1766, R1767, R1768, R1769, R177, R1770, R1771, R1772, R1773, R1774, R1775, R1776, R1777, R1778, R1779, R178, R1780, R1781, R1782, R1783, R1784, R1785, R1786, R1787, R1788, R1789, R179, R1790, R1791, R1792, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R2, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R5, R63, R65, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R26 += 1 };
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R30 += 1 };
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R1674 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R1673 += 1, R1674 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R1674 += 1, R24 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R1676 += 1 };
  s0 -> s0 [0, 65535] { R1675 += 1, R1676 += 1 };
  s0 -> s2 [70, 70] { R1676 += 1 };
  s0 -> s3 [70, 70] { R1676 += 1 };
  s0 -> s1 [76, 65535] { R1676 += 1 };
  s1 -> s1 [0, 69] { R1676 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1676 += 1 };
  s1 -> s3 [70, 70] { R1676 += 1 };
  s1 -> s1 [76, 65535] { R1676 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R1676 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R1676 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R1678 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R1677 += 1, R1678 += 1 };
  s0 -> s2 [70, 70] { R1678 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R1678 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R1678 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R1678 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1678 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R1678 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R1678 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1678 += 1, R63 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R1680 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R1679 += 1, R1680 += 1 };
  s0 -> s2 [70, 70] { R1680 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R1680 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R1680 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R1680 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1680 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R1680 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R1680 += 1, R65 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R1680 += 1, R65 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R1682 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R1681 += 1, R1682 += 1 };
  s0 -> s2 [70, 70] { R1682 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R1682 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R1682 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R1682 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1682 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R1682 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R1682 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1682 += 1, R67 += 1, R68 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R1684 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R1683 += 1, R1684 += 1 };
  s0 -> s2 [70, 70] { R1684 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R1684 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R1684 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R1684 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1684 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R1684 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R1684 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1684 += 1, R73 += 1, R74 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R1686 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R1685 += 1, R1686 += 1 };
  s0 -> s2 [70, 70] { R1686 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R1686 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R1686 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R1686 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1686 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R1686 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R1686 += 1, R77 += 1, R78 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1686 += 1, R77 += 1, R78 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R1688 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R1687 += 1, R1688 += 1 };
  s0 -> s2 [70, 70] { R1688 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R1688 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R1688 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R1688 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1688 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R1688 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R1688 += 1, R81 += 1, R82 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1688 += 1, R81 += 1, R82 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R1690 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R1689 += 1, R1690 += 1 };
  s0 -> s2 [70, 70] { R1690 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R1690 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R1690 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R1690 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1690 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R1690 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R1690 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1690 += 1, R87 += 1, R88 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R1692 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R1691 += 1, R1692 += 1 };
  s0 -> s2 [70, 70] { R1692 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R1692 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R1692 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R1692 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1692 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R1692 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R1692 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R1692 += 1, R93 += 1, R94 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R1694 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R1693 += 1, R1694 += 1 };
  s0 -> s2 [70, 70] { R1694 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R1694 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R1694 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R1694 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1694 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R1694 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R1694 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535] { R1694 += 1, R101 += 1, R102 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R1696 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R1695 += 1, R1696 += 1 };
  s0 -> s2 [70, 70] { R1696 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R1696 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R1696 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R1696 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1696 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R1696 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R1696 += 1, R111 += 1, R112 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1696 += 1, R111 += 1, R112 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R1698 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R1697 += 1, R1698 += 1 };
  s0 -> s2 [70, 70] { R1698 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R1698 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R1698 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R1698 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1698 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R1698 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R1698 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535] { R1698 += 1, R119 += 1, R120 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R1700 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R1699 += 1, R1700 += 1 };
  s0 -> s2 [70, 70] { R1700 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R1700 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R1700 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R1700 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1700 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R1700 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R1700 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1700 += 1, R129 += 1, R130 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R1730 += 1 };
  s0 -> s0 [0, 65535] { R1729 += 1, R1730 += 1 };
  s0 -> s2 [70, 70] { R1730 += 1 };
  s0 -> s1 [71, 65535] { R1730 += 1 };
  s1 -> s1 [0, 69] { R1730 += 1 };
  s1 -> s2 [70, 70] { R1730 += 1 };
  s1 -> s1 [71, 65535] { R1730 += 1 };
  s2 -> s2 [0, 65535] { R1730 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R1732 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R1731 += 1, R1732 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R1732 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R1734 += 1 };
  s0 -> s2 [0, 65535] { R1734 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R1733 += 1, R1734 += 1 };
  s0 -> s3 [70, 70] { R1734 += 1 };
  s0 -> s1 [71, 65535] { R1734 += 1 };
  s1 -> s1 [0, 69] { R1734 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R1734 += 1 };
  s1 -> s1 [71, 65535] { R1734 += 1 };
  s2 -> s1 [0, 69] { R1734 += 1 };
  s2 -> s2 [0, 65535] { R1734 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R1734 += 1 };
  s2 -> s1 [71, 65535] { R1734 += 1 };
  s3 -> s3 [0, 65535] { R1734 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R1736 += 1, R1644 += 1 };
  s0 -> s0 [0, 65535] { R1735 += 1, R1736 += 1 };
  s0 -> s2 [0, 65535] { R1736 += 1, R1643 += 1, R1644 += 1 };
  s0 -> s1 [71, 65535] { R1736 += 1, R1644 += 1 };
  s1 -> s1 [0, 69] { R1736 += 1, R1644 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R1736 += 1 };
  s1 -> s1 [71, 65535] { R1736 += 1, R1644 += 1 };
  s2 -> s1 [0, 69] { R1736 += 1, R1644 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1736 += 1, R1643 += 1, R1644 += 1 };
  s2 -> s1 [71, 65535] { R1736 += 1, R1644 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R1737 += 1, R1738 += 1 };
  s0 -> s1 [0, 65535] { R1738 += 1, R1646 += 1, R22 += 1 };
  s0 -> s2 [0, 65535] { R1738 += 1, R1645 += 1, R1646 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R1738 += 1, R1646 += 1, R22 += 1 };
  s1 -> s4 [0, 65535] { R1738 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R1738 += 1, R1646 += 1, R22 += 1 };
  s2 -> s2 [0, 65535] { R1738 += 1, R1645 += 1, R1646 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1738 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R1740 += 1, R1648 += 1 };
  s0 -> s2 [0, 65535] { R1740 += 1, R1647 += 1, R1648 += 1 };
  s0 -> s0 [0, 65535] { R1739 += 1, R1740 += 1 };
  s0 -> s1 [75, 65535] { R1740 += 1, R1648 += 1 };
  s1 -> s1 [0, 70] { R1740 += 1, R1648 += 1 };
  s1 -> s1 [0, 65535] { R1740 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R1740 += 1, R1648 += 1 };
  s2 -> s1 [0, 70] { R1740 += 1, R1648 += 1 };
  s2 -> s2 [0, 65535] { R1740 += 1, R1647 += 1, R1648 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R1740 += 1, R1648 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R1742 += 1, R1649 += 1, R1650 += 1 };
  s0 -> s0 [0, 65535] { R1741 += 1, R1742 += 1 };
  s0 -> s2 [0, 65535] { R1742 += 1, R1650 += 1, R138 += 1 };
  s1 -> s1 [0, 65535] { R1742 += 1, R1649 += 1, R1650 += 1 };
  s1 -> s2 [0, 65535] { R1742 += 1, R1650 += 1, R138 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1742 += 1, R1650 += 1, R138 += 1 };
  s2 -> s3 [0, 65535] { R1742 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1742 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R1744 += 1, R1652 += 1 };
  s0 -> s2 [0, 65535] { R1744 += 1, R1652 += 1, R140 += 1 };
  s0 -> s3 [0, 65535] { R1744 += 1, R1651 += 1, R1652 += 1 };
  s0 -> s0 [0, 65535] { R1743 += 1, R1744 += 1 };
  s0 -> s1 [76, 65535] { R1744 += 1, R1652 += 1 };
  s1 -> s1 [0, 74] { R1744 += 1, R1652 += 1 };
  s1 -> s1 [0, 65535] { R1744 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [76, 65535] { R1744 += 1, R1652 += 1 };
  s2 -> s1 [0, 74] { R1744 += 1, R1652 += 1 };
  s2 -> s2 [0, 65535] { R1744 += 1, R1652 += 1, R140 += 1 };
  s2 -> s5 [0, 65535] { R1744 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [76, 65535] { R1744 += 1, R1652 += 1 };
  s3 -> s1 [0, 74] { R1744 += 1, R1652 += 1 };
  s3 -> s2 [0, 65535] { R1744 += 1, R1652 += 1, R140 += 1 };
  s3 -> s3 [0, 65535] { R1744 += 1, R1651 += 1, R1652 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [76, 65535] { R1744 += 1, R1652 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1744 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R1746 += 1, R1653 += 1, R1654 += 1 };
  s0 -> s2 [0, 65535] { R1746 += 1, R1654 += 1, R144 += 1, R145 += 1 };
  s0 -> s3 [0, 65535] { R1746 += 1, R1654 += 1, R145 += 1, R146 += 1 };
  s0 -> s0 [0, 65535] { R1745 += 1, R1746 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1746 += 1, R1653 += 1, R1654 += 1 };
  s1 -> s2 [0, 65535] { R1746 += 1, R1654 += 1, R144 += 1, R145 += 1 };
  s1 -> s3 [0, 65535] { R1746 += 1, R1654 += 1, R145 += 1, R146 += 1 };
  s2 -> s4 [0, 65535] { R1746 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1746 += 1, R1654 += 1, R144 += 1, R145 += 1 };
  s2 -> s3 [0, 65535] { R1746 += 1, R1654 += 1, R145 += 1, R146 += 1 };
  s3 -> s4 [0, 65535] { R1746 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R1746 += 1, R1654 += 1 };
  s3 -> s3 [0, 65535] { R1746 += 1, R1654 += 1, R145 += 1, R146 += 1 };
  s4 -> s4 [0, 65535] { R1746 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R1746 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1746 += 1, R1654 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R1748 += 1, R1656 += 1, R150 += 1 };
  s0 -> s0 [0, 65535] { R1747 += 1, R1748 += 1 };
  s0 -> s2 [0, 65535] { R1748 += 1, R1655 += 1, R1656 += 1 };
  s0 -> s3 [0, 65535] { R1748 += 1, R1656 += 1, R149 += 1, R150 += 1 };
  s0 -> s4 [75, 75] { R1748 += 1, R1656 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R1748 += 1, R1656 += 1, R150 += 1 };
  s0 -> s1 [83, 65535] { R1748 += 1, R1656 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R1748 += 1, R1656 += 1, R150 += 1 };
  s1 -> s6 [0, 65535] { R1748 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R1748 += 1, R1656 += 1 };
  s1 -> s4 [75, 75] { R1748 += 1, R1656 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R1748 += 1, R1656 += 1, R150 += 1 };
  s1 -> s1 [83, 65535] { R1748 += 1, R1656 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R1748 += 1, R1656 += 1, R150 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s2 [0, 65535] { R1748 += 1, R1655 += 1, R1656 += 1 };
  s2 -> s3 [0, 65535] { R1748 += 1, R1656 += 1, R149 += 1, R150 += 1 };
  s2 -> s4 [75, 75] { R1748 += 1, R1656 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R1748 += 1, R1656 += 1, R150 += 1 };
  s2 -> s1 [83, 65535] { R1748 += 1, R1656 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R1748 += 1, R1656 += 1, R150 += 1 };
  s3 -> s6 [0, 65535] { R1748 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R1748 += 1, R1656 += 1, R149 += 1, R150 += 1 };
  s3 -> s4 [75, 75] { R1748 += 1, R1656 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R1748 += 1, R1656 += 1, R150 += 1 };
  s3 -> s1 [83, 65535] { R1748 += 1, R1656 += 1, R150 += 1 };
  s4 -> s4 [0, 75] { R1748 += 1, R1656 += 1, R150 += 1 };
  s4 -> s6 [0, 65535] { R1748 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R1748 += 1, R1656 += 1 };
  s4 -> s4 [83, 65535] { R1748 += 1, R1656 += 1, R150 += 1 };
  s5 -> s6 [0, 65535] { R1748 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R1748 += 1, R1656 += 1 };
  s6 -> s6 [0, 65535] { R1748 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R1750 += 1, R1658 += 1, R154 += 1 };
  s0 -> s0 [0, 65535] { R1749 += 1, R1750 += 1 };
  s0 -> s2 [0, 65535] { R1750 += 1, R1657 += 1, R1658 += 1 };
  s0 -> s3 [0, 65535] { R1750 += 1, R1658 += 1 };
  s1 -> s4 [0, 65535] { R1750 += 1 };
  s1 -> s1 [0, 65535] { R1750 += 1, R1658 += 1, R154 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R1750 += 1, R1658 += 1 };
  s2 -> s1 [0, 65535] { R1750 += 1, R1658 += 1, R154 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1750 += 1, R1657 += 1, R1658 += 1 };
  s2 -> s3 [0, 65535] { R1750 += 1, R1658 += 1 };
  s3 -> s4 [0, 65535] { R1750 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1750 += 1, R1658 += 1 };
  s4 -> s4 [0, 65535] { R1750 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R1752 += 1, R1659 += 1, R1660 += 1 };
  s0 -> s0 [0, 65535] { R1751 += 1, R1752 += 1 };
  s0 -> s2 [0, 65535] { R1752 += 1, R1660 += 1, R159 += 1, R160 += 1 };
  s0 -> s3 [0, 65535] { R1752 += 1, R1660 += 1, R158 += 1, R159 += 1 };
  s1 -> s1 [0, 65535] { R1752 += 1, R1659 += 1, R1660 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R1752 += 1, R1660 += 1, R159 += 1, R160 += 1 };
  s1 -> s3 [0, 65535] { R1752 += 1, R1660 += 1, R158 += 1, R159 += 1 };
  s2 -> s6 [0, 65535] { R1752 += 1, R1660 += 1 };
  s2 -> s4 [0, 65535] { R1752 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1752 += 1, R1660 += 1, R159 += 1, R160 += 1 };
  s3 -> s4 [0, 65535] { R1752 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R1752 += 1, R1660 += 1, R159 += 1, R160 += 1 };
  s3 -> s3 [0, 65535] { R1752 += 1, R1660 += 1, R158 += 1, R159 += 1 };
  s4 -> s4 [0, 65535] { R1752 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1752 += 1, R1660 += 1 };
  s6 -> s4 [0, 65535] { R1752 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R1754 += 1, R1662 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R1754 += 1, R1662 += 1, R164 += 1, R165 += 1 };
  s0 -> s0 [0, 65535] { R1753 += 1, R1754 += 1 };
  s0 -> s3 [0, 65535] { R1754 += 1, R1662 += 1, R165 += 1, R166 += 1 };
  s0 -> s4 [0, 65535] { R1754 += 1, R1661 += 1, R1662 += 1 };
  s0 -> s1 [76, 65535] { R1754 += 1, R1662 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R1754 += 1, R1662 += 1, R165 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1754 += 1, R1662 += 1 };
  s1 -> s6 [0, 65535] { R1754 += 1 };
  s1 -> s1 [76, 65535] { R1754 += 1, R1662 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R1754 += 1, R1662 += 1, R165 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1754 += 1, R1662 += 1, R164 += 1, R165 += 1 };
  s2 -> s3 [0, 65535] { R1754 += 1, R1662 += 1, R165 += 1, R166 += 1 };
  s2 -> s6 [0, 65535] { R1754 += 1 };
  s2 -> s1 [76, 65535] { R1754 += 1, R1662 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R1754 += 1, R1662 += 1, R165 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1754 += 1, R1662 += 1, R165 += 1, R166 += 1 };
  s3 -> s6 [0, 65535] { R1754 += 1 };
  s3 -> s7 [0, 65535] { R1754 += 1, R1662 += 1 };
  s3 -> s1 [76, 65535] { R1754 += 1, R1662 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R1754 += 1, R1662 += 1, R165 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R1754 += 1, R1662 += 1, R164 += 1, R165 += 1 };
  s4 -> s3 [0, 65535] { R1754 += 1, R1662 += 1, R165 += 1, R166 += 1 };
  s4 -> s4 [0, 65535] { R1754 += 1, R1661 += 1, R1662 += 1 };
  s4 -> s1 [76, 65535] { R1754 += 1, R1662 += 1, R165 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1754 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R1754 += 1 };
  s7 -> s7 [0, 65535] { R1754 += 1, R1662 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R1756 += 1, R1664 += 1, R172 += 1, R174 += 1 };
  s0 -> s0 [0, 65535] { R1755 += 1, R1756 += 1 };
  s0 -> s2 [0, 65535] { R1756 += 1, R1664 += 1, R171 += 1, R172 += 1 };
  s0 -> s3 [0, 65535] { R1756 += 1, R1663 += 1, R1664 += 1 };
  s0 -> s4 [0, 65535] { R1756 += 1, R1664 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s1 [76, 65535] { R1756 += 1, R1664 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R1756 += 1, R1664 += 1, R172 += 1, R174 += 1 };
  s1 -> s5 [0, 65535] { R1756 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R1756 += 1, R1664 += 1 };
  s1 -> s1 [0, 65535] { R1756 += 1, R1664 += 1, R172 += 1 };
  s1 -> s1 [76, 65535] { R1756 += 1, R1664 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R1756 += 1, R1664 += 1, R172 += 1, R174 += 1 };
  s2 -> s5 [0, 65535] { R1756 += 1 };
  s2 -> s2 [0, 65535] { R1756 += 1, R1664 += 1, R171 += 1, R172 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [0, 65535] { R1756 += 1, R1664 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s1 [76, 65535] { R1756 += 1, R1664 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R1756 += 1, R1664 += 1, R172 += 1, R174 += 1 };
  s3 -> s2 [0, 65535] { R1756 += 1, R1664 += 1, R171 += 1, R172 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R1756 += 1, R1663 += 1, R1664 += 1 };
  s3 -> s4 [0, 65535] { R1756 += 1, R1664 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s1 [76, 65535] { R1756 += 1, R1664 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R1756 += 1, R1664 += 1, R172 += 1, R174 += 1 };
  s4 -> s5 [0, 65535] { R1756 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R1756 += 1, R1664 += 1 };
  s4 -> s4 [0, 65535] { R1756 += 1, R1664 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s1 [76, 65535] { R1756 += 1, R1664 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535] { R1756 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R1756 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R1756 += 1, R1664 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R1758 += 1, R1666 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s0 -> s2 [0, 65535] { R1758 += 1, R1666 += 1 };
  s0 -> s3 [0, 65535] { R1758 += 1, R1666 += 1, R181 += 1 };
  s0 -> s4 [0, 65535] { R1758 += 1, R1665 += 1, R1666 += 1 };
  s0 -> s0 [0, 65535] { R1757 += 1, R1758 += 1 };
  s1 -> s1 [0, 65535] { R1758 += 1, R1666 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R1758 += 1, R1666 += 1 };
  s1 -> s3 [0, 65535] { R1758 += 1, R1666 += 1, R181 += 1 };
  s1 -> s6 [0, 65535] { R1758 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1758 += 1, R1666 += 1 };
  s2 -> s6 [0, 65535] { R1758 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R1758 += 1, R1666 += 1 };
  s3 -> s3 [0, 65535] { R1758 += 1, R1666 += 1, R181 += 1 };
  s3 -> s6 [0, 65535] { R1758 += 1 };
  s4 -> s1 [0, 65535] { R1758 += 1, R1666 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R1758 += 1, R1666 += 1 };
  s4 -> s3 [0, 65535] { R1758 += 1, R1666 += 1, R181 += 1 };
  s4 -> s4 [0, 65535] { R1758 += 1, R1665 += 1, R1666 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1758 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R1760 += 1, R1668 += 1, R190 += 1, R192 += 1 };
  s0 -> s0 [0, 65535] { R1759 += 1, R1760 += 1 };
  s0 -> s2 [0, 65535] { R1760 += 1, R1668 += 1, R189 += 1, R190 += 1 };
  s0 -> s3 [0, 65535] { R1760 += 1, R1667 += 1, R1668 += 1 };
  s0 -> s4 [0, 65535] { R1760 += 1, R1668 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s0 -> s1 [82, 65535] { R1760 += 1, R1668 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 75] { R1760 += 1, R1668 += 1, R190 += 1, R192 += 1 };
  s1 -> s5 [0, 65535] { R1760 += 1, R1668 += 1 };
  s1 -> s6 [0, 65535] { R1760 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R1760 += 1, R1668 += 1, R190 += 1 };
  s1 -> s1 [82, 65535] { R1760 += 1, R1668 += 1, R190 += 1, R192 += 1 };
  s2 -> s1 [0, 75] { R1760 += 1, R1668 += 1, R190 += 1, R192 += 1 };
  s2 -> s2 [0, 65535] { R1760 += 1, R1668 += 1, R189 += 1, R190 += 1 };
  s2 -> s6 [0, 65535] { R1760 += 1 };
  s2 -> s4 [0, 65535] { R1760 += 1, R1668 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s1 [82, 65535] { R1760 += 1, R1668 += 1, R190 += 1, R192 += 1 };
  s3 -> s1 [0, 75] { R1760 += 1, R1668 += 1, R190 += 1, R192 += 1 };
  s3 -> s2 [0, 65535] { R1760 += 1, R1668 += 1, R189 += 1, R190 += 1 };
  s3 -> s3 [0, 65535] { R1760 += 1, R1667 += 1, R1668 += 1 };
  s3 -> s4 [0, 65535] { R1760 += 1, R1668 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s1 [82, 65535] { R1760 += 1, R1668 += 1, R190 += 1, R192 += 1 };
  s4 -> s1 [0, 75] { R1760 += 1, R1668 += 1, R190 += 1, R192 += 1 };
  s4 -> s5 [0, 65535] { R1760 += 1, R1668 += 1 };
  s4 -> s6 [0, 65535] { R1760 += 1 };
  s4 -> s4 [0, 65535] { R1760 += 1, R1668 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s1 [82, 65535] { R1760 += 1, R1668 += 1, R190 += 1, R192 += 1 };
  s5 -> s5 [0, 65535] { R1760 += 1, R1668 += 1 };
  s5 -> s6 [0, 65535] { R1760 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R1760 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s0 [0, 65535] { R1761 += 1, R1762 += 1 };
  s0 -> s1 [0, 65535] { R1762 += 1, R1670 += 1 };
  s0 -> s2 [0, 65535] { R1762 += 1, R1669 += 1, R1670 += 1 };
  s1 -> s1 [0, 65535] { R1762 += 1, R1670 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R1762 += 1 };
  s2 -> s1 [0, 65535] { R1762 += 1, R1670 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1762 += 1, R1669 += 1, R1670 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1762 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s0 [0, 65535] { R1763 += 1, R1764 += 1 };
  s0 -> s1 [0, 65535] { R1764 += 1, R1672 += 1 };
  s0 -> s2 [0, 65535] { R1764 += 1, R1671 += 1, R1672 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R1764 += 1, R1672 += 1 };
  s1 -> s4 [0, 65535] { R1764 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R1764 += 1, R1672 += 1 };
  s2 -> s2 [0, 65535] { R1764 += 1, R1671 += 1, R1672 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1764 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65535] { R1766 += 1, R1701 += 1, R1702 += 1 };
  s0 -> s0 [0, 65535] { R1765 += 1, R1766 += 1 };
  s0 -> s2 [0, 65535] { R1766 += 1, R1702 += 1, R23 += 1 };
  s1 -> s1 [0, 65535] { R1766 += 1, R1701 += 1, R1702 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R1766 += 1, R1702 += 1, R23 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R1766 += 1 };
  s2 -> s2 [0, 65535] { R1766 += 1, R1702 += 1, R23 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1766 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R1768 += 1, R1704 += 1 };
  s0 -> s0 [0, 65535] { R1767 += 1, R1768 += 1 };
  s0 -> s2 [0, 65535] { R1768 += 1, R1703 += 1, R1704 += 1 };
  s0 -> s3 [70, 70] { R1768 += 1, R1704 += 1 };
  s0 -> s4 [70, 70] { R1768 += 1, R1704 += 1 };
  s0 -> s5 [75, 75] { R1768 += 1, R1704 += 1 };
  s0 -> s1 [76, 65535] { R1768 += 1, R1704 += 1 };
  s1 -> s1 [0, 69] { R1768 += 1, R1704 += 1 };
  s1 -> s3 [70, 70] { R1768 += 1, R1704 += 1 };
  s1 -> s4 [70, 70] { R1768 += 1, R1704 += 1 };
  s1 -> s5 [75, 75] { R1768 += 1, R1704 += 1 };
  s1 -> s1 [76, 65535] { R1768 += 1, R1704 += 1 };
  s2 -> s1 [0, 69] { R1768 += 1, R1704 += 1 };
  s2 -> s2 [0, 65535] { R1768 += 1, R1703 += 1, R1704 += 1 };
  s2 -> s3 [70, 70] { R1768 += 1, R1704 += 1 };
  s2 -> s4 [70, 70] { R1768 += 1, R1704 += 1 };
  s2 -> s5 [75, 75] { R1768 += 1, R1704 += 1 };
  s2 -> s1 [76, 65535] { R1768 += 1, R1704 += 1 };
  s4 -> s4 [0, 70] { R1768 += 1, R1704 += 1 };
  s4 -> s7 [75, 75] { R1768 += 1, R1704 += 1 };
  s4 -> s4 [76, 65535] { R1768 += 1, R1704 += 1 };
  s5 -> s5 [0, 69] { R1768 += 1, R1704 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R1768 += 1 };
  s5 -> s7 [70, 70] { R1768 += 1, R1704 += 1 };
  s5 -> s8 [70, 70] { R1768 += 1, R1704 += 1 };
  s5 -> s5 [75, 65535] { R1768 += 1, R1704 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R1768 += 1, R1704 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R1768 += 1 };
  s7 -> s7 [75, 65535] { R1768 += 1, R1704 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R1768 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R1770 += 1, R1706 += 1, R137 += 1 };
  s0 -> s2 [0, 65535] { R1770 += 1, R1705 += 1, R1706 += 1 };
  s0 -> s0 [0, 65535] { R1769 += 1, R1770 += 1 };
  s0 -> s3 [70, 70] { R1770 += 1, R1706 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R1770 += 1, R1706 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R1770 += 1, R1706 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R1770 += 1, R1706 += 1, R137 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1770 += 1 };
  s1 -> s3 [70, 70] { R1770 += 1, R1706 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R1770 += 1, R1706 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R1770 += 1, R1706 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R1770 += 1, R1706 += 1, R137 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1770 += 1, R1705 += 1, R1706 += 1 };
  s2 -> s3 [70, 70] { R1770 += 1, R1706 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R1770 += 1, R1706 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R1770 += 1, R1706 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R1770 += 1, R1706 += 1, R137 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R1770 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1770 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1770 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R1772 += 1, R1708 += 1, R139 += 1 };
  s0 -> s2 [0, 65535] { R1772 += 1, R1707 += 1, R1708 += 1 };
  s0 -> s0 [0, 65535] { R1771 += 1, R1772 += 1 };
  s0 -> s3 [70, 70] { R1772 += 1, R1708 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R1772 += 1, R1708 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R1772 += 1, R1708 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R1772 += 1, R1708 += 1, R139 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1772 += 1 };
  s1 -> s3 [70, 70] { R1772 += 1, R1708 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R1772 += 1, R1708 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R1772 += 1, R1708 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R1772 += 1, R1708 += 1, R139 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1772 += 1, R1707 += 1, R1708 += 1 };
  s2 -> s3 [70, 70] { R1772 += 1, R1708 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R1772 += 1, R1708 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R1772 += 1, R1708 += 1, R139 += 1 };
  s3 -> s3 [0, 65535] { R1772 += 1, R1708 += 1, R139 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R1772 += 1 };
  s4 -> s4 [0, 65535] { R1772 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1772 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R1774 += 1, R1710 += 1, R141 += 1, R142 += 1 };
  s0 -> s0 [0, 65535] { R1773 += 1, R1774 += 1 };
  s0 -> s2 [0, 65535] { R1774 += 1, R1709 += 1, R1710 += 1 };
  s0 -> s3 [70, 70] { R1774 += 1, R1710 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R1774 += 1, R1710 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R1774 += 1, R1710 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R1774 += 1, R1710 += 1, R141 += 1, R142 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1774 += 1 };
  s1 -> s3 [70, 70] { R1774 += 1, R1710 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R1774 += 1, R1710 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R1774 += 1, R1710 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R1774 += 1, R1710 += 1, R141 += 1, R142 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1774 += 1, R1709 += 1, R1710 += 1 };
  s2 -> s3 [70, 70] { R1774 += 1, R1710 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R1774 += 1, R1710 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R1774 += 1, R1710 += 1, R141 += 1, R142 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1774 += 1, R1710 += 1, R141 += 1, R142 += 1 };
  s3 -> s6 [0, 65535] { R1774 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1774 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1774 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R1776 += 1, R1712 += 1, R147 += 1, R148 += 1 };
  s0 -> s0 [0, 65535] { R1775 += 1, R1776 += 1 };
  s0 -> s2 [0, 65535] { R1776 += 1, R1711 += 1, R1712 += 1 };
  s0 -> s3 [70, 70] { R1776 += 1, R1712 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R1776 += 1, R1712 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R1776 += 1, R1712 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R1776 += 1, R1712 += 1, R147 += 1, R148 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1776 += 1 };
  s1 -> s3 [70, 70] { R1776 += 1, R1712 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R1776 += 1, R1712 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R1776 += 1, R1712 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R1776 += 1, R1712 += 1, R147 += 1, R148 += 1 };
  s2 -> s2 [0, 65535] { R1776 += 1, R1711 += 1, R1712 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R1776 += 1, R1712 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R1776 += 1, R1712 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R1776 += 1, R1712 += 1, R147 += 1, R148 += 1 };
  s3 -> s6 [0, 65535] { R1776 += 1 };
  s3 -> s3 [0, 65535] { R1776 += 1, R1712 += 1, R147 += 1, R148 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1776 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1776 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R1778 += 1, R1714 += 1, R151 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R1778 += 1, R1714 += 1, R152 += 1 };
  s0 -> s0 [0, 65535] { R1777 += 1, R1778 += 1 };
  s0 -> s3 [0, 65535] { R1778 += 1, R1713 += 1, R1714 += 1 };
  s0 -> s4 [70, 70] { R1778 += 1, R1714 += 1, R151 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R1778 += 1, R1714 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R1778 += 1, R1714 += 1, R151 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R1778 += 1, R1714 += 1, R152 += 1 };
  s0 -> s2 [71, 74] { R1778 += 1, R1714 += 1, R152 += 1 };
  s0 -> s1 [71, 65535] { R1778 += 1, R1714 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R1778 += 1, R1714 += 1, R152 += 1 };
  s0 -> s2 [76, 65535] { R1778 += 1, R1714 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R1778 += 1, R1714 += 1, R151 += 1, R152 += 1 };
  s1 -> s2 [0, 69] { R1778 += 1, R1714 += 1, R152 += 1 };
  s1 -> s4 [70, 70] { R1778 += 1, R1714 += 1, R151 += 1, R152 += 1 };
  s1 -> s5 [70, 70] { R1778 += 1, R1714 += 1, R152 += 1 };
  s1 -> s6 [70, 70] { R1778 += 1, R1714 += 1, R151 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R1778 += 1, R1714 += 1, R152 += 1 };
  s1 -> s2 [71, 74] { R1778 += 1, R1714 += 1, R152 += 1 };
  s1 -> s1 [71, 65535] { R1778 += 1, R1714 += 1, R151 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R1778 += 1, R1714 += 1, R152 += 1 };
  s1 -> s2 [76, 65535] { R1778 += 1, R1714 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R1778 += 1, R1714 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R1778 += 1, R1714 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R1778 += 1, R1714 += 1, R152 += 1 };
  s2 -> s2 [71, 74] { R1778 += 1, R1714 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R1778 += 1, R1714 += 1, R152 += 1 };
  s2 -> s2 [76, 65535] { R1778 += 1, R1714 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R1778 += 1, R1714 += 1, R151 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R1778 += 1, R1714 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R1778 += 1, R1713 += 1, R1714 += 1 };
  s3 -> s4 [70, 70] { R1778 += 1, R1714 += 1, R151 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R1778 += 1, R1714 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R1778 += 1, R1714 += 1, R151 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R1778 += 1, R1714 += 1, R152 += 1 };
  s3 -> s2 [71, 74] { R1778 += 1, R1714 += 1, R152 += 1 };
  s3 -> s1 [71, 65535] { R1778 += 1, R1714 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R1778 += 1, R1714 += 1, R152 += 1 };
  s3 -> s2 [76, 65535] { R1778 += 1, R1714 += 1, R152 += 1 };
  s4 -> s5 [0, 74] { R1778 += 1, R1714 += 1, R152 += 1 };
  s4 -> s4 [0, 65535] { R1778 += 1, R1714 += 1, R151 += 1, R152 += 1 };
  s4 -> s11 [75, 75] { R1778 += 1, R1714 += 1, R152 += 1 };
  s4 -> s5 [76, 65535] { R1778 += 1, R1714 += 1, R152 += 1 };
  s5 -> s5 [0, 74] { R1778 += 1, R1714 += 1, R152 += 1 };
  s5 -> s11 [75, 75] { R1778 += 1, R1714 += 1, R152 += 1 };
  s5 -> s5 [76, 65535] { R1778 += 1, R1714 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R1778 += 1, R1714 += 1, R152 += 1 };
  s8 -> s8 [0, 65535] { R1778 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R1778 += 1, R1714 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R1778 += 1, R1714 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R1778 += 1, R1714 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R1778 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R1778 += 1, R1714 += 1, R152 += 1 };
  s11 -> s12 [0, 65535] { R1778 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R1778 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R1780 += 1, R1716 += 1, R155 += 1, R156 += 1 };
  s0 -> s0 [0, 65535] { R1779 += 1, R1780 += 1 };
  s0 -> s2 [0, 65535] { R1780 += 1, R1715 += 1, R1716 += 1 };
  s0 -> s3 [70, 70] { R1780 += 1, R1716 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R1780 += 1, R1716 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R1780 += 1, R1716 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R1780 += 1, R1716 += 1, R155 += 1, R156 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1780 += 1 };
  s1 -> s3 [70, 70] { R1780 += 1, R1716 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R1780 += 1, R1716 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R1780 += 1, R1716 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R1780 += 1, R1716 += 1, R155 += 1, R156 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1780 += 1, R1715 += 1, R1716 += 1 };
  s2 -> s3 [70, 70] { R1780 += 1, R1716 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R1780 += 1, R1716 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R1780 += 1, R1716 += 1, R155 += 1, R156 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1780 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1780 += 1 };
  s4 -> s4 [0, 65535] { R1780 += 1, R1716 += 1, R155 += 1, R156 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1780 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R1782 += 1, R1718 += 1, R161 += 1, R162 += 1 };
  s0 -> s2 [0, 65535] { R1782 += 1, R1717 += 1, R1718 += 1 };
  s0 -> s0 [0, 65535] { R1781 += 1, R1782 += 1 };
  s0 -> s3 [70, 70] { R1782 += 1, R1718 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R1782 += 1, R1718 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R1782 += 1, R1718 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R1782 += 1, R1718 += 1, R161 += 1, R162 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1782 += 1 };
  s1 -> s3 [70, 70] { R1782 += 1, R1718 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R1782 += 1, R1718 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R1782 += 1, R1718 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R1782 += 1, R1718 += 1, R161 += 1, R162 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1782 += 1, R1717 += 1, R1718 += 1 };
  s2 -> s3 [70, 70] { R1782 += 1, R1718 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R1782 += 1, R1718 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R1782 += 1, R1718 += 1, R161 += 1, R162 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1782 += 1, R1718 += 1, R161 += 1, R162 += 1 };
  s3 -> s6 [0, 65535] { R1782 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1782 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1782 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R1784 += 1, R1720 += 1, R167 += 1, R168 += 1 };
  s0 -> s2 [0, 65535] { R1784 += 1, R1719 += 1, R1720 += 1 };
  s0 -> s0 [0, 65535] { R1783 += 1, R1784 += 1 };
  s0 -> s3 [70, 70] { R1784 += 1, R1720 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R1784 += 1, R1720 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R1784 += 1, R1720 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R1784 += 1, R1720 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 65535] { R1784 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R1784 += 1, R1720 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R1784 += 1, R1720 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R1784 += 1, R1720 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R1784 += 1, R1720 += 1, R167 += 1, R168 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1784 += 1, R1719 += 1, R1720 += 1 };
  s2 -> s3 [70, 70] { R1784 += 1, R1720 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R1784 += 1, R1720 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R1784 += 1, R1720 += 1, R167 += 1, R168 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1784 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1784 += 1, R1720 += 1, R167 += 1, R168 += 1 };
  s4 -> s6 [0, 65535] { R1784 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1784 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R1786 += 1, R1722 += 1, R175 += 1, R176 += 1 };
  s0 -> s2 [0, 69] { R1786 += 1, R1722 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s3 [0, 69] { R1786 += 1, R1722 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s4 [0, 65535] { R1786 += 1, R1721 += 1, R1722 += 1 };
  s0 -> s0 [0, 65535] { R1785 += 1, R1786 += 1 };
  s0 -> s5 [70, 70] { R1786 += 1, R1722 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s6 [70, 70] { R1786 += 1, R1722 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s7 [70, 70] { R1786 += 1, R1722 += 1, R175 += 1, R176 += 1 };
  s0 -> s8 [70, 70] { R1786 += 1, R1722 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s9 [70, 70] { R1786 += 1, R1722 += 1, R175 += 1, R176 += 1 };
  s0 -> s10 [70, 70] { R1786 += 1, R1722 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s1 [71, 65535] { R1786 += 1, R1722 += 1, R175 += 1, R176 += 1 };
  s0 -> s2 [71, 65535] { R1786 += 1, R1722 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s3 [71, 65535] { R1786 += 1, R1722 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s1 [0, 69] { R1786 += 1, R1722 += 1, R175 += 1, R176 += 1 };
  s1 -> s2 [0, 69] { R1786 += 1, R1722 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s3 [0, 69] { R1786 += 1, R1722 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s5 [70, 70] { R1786 += 1, R1722 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s6 [70, 70] { R1786 += 1, R1722 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s7 [70, 70] { R1786 += 1, R1722 += 1, R175 += 1, R176 += 1 };
  s1 -> s8 [70, 70] { R1786 += 1, R1722 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s9 [70, 70] { R1786 += 1, R1722 += 1, R175 += 1, R176 += 1 };
  s1 -> s10 [70, 70] { R1786 += 1, R1722 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s1 [71, 65535] { R1786 += 1, R1722 += 1, R175 += 1, R176 += 1 };
  s1 -> s2 [71, 65535] { R1786 += 1, R1722 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s3 [71, 65535] { R1786 += 1, R1722 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s2 [0, 69] { R1786 += 1, R1722 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [0, 65535] { R1786 += 1 };
  s2 -> s11 [0, 65535];
  s2 -> s5 [70, 70] { R1786 += 1, R1722 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s10 [70, 70] { R1786 += 1, R1722 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [71, 65535] { R1786 += 1, R1722 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s2 [0, 69] { R1786 += 1, R1722 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [0, 69] { R1786 += 1, R1722 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s5 [70, 70] { R1786 += 1, R1722 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s6 [70, 70] { R1786 += 1, R1722 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s8 [70, 70] { R1786 += 1, R1722 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s10 [70, 70] { R1786 += 1, R1722 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s2 [71, 65535] { R1786 += 1, R1722 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [71, 65535] { R1786 += 1, R1722 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s1 [0, 69] { R1786 += 1, R1722 += 1, R175 += 1, R176 += 1 };
  s4 -> s2 [0, 69] { R1786 += 1, R1722 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s3 [0, 69] { R1786 += 1, R1722 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s4 [0, 65535] { R1786 += 1, R1721 += 1, R1722 += 1 };
  s4 -> s5 [70, 70] { R1786 += 1, R1722 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s6 [70, 70] { R1786 += 1, R1722 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s7 [70, 70] { R1786 += 1, R1722 += 1, R175 += 1, R176 += 1 };
  s4 -> s8 [70, 70] { R1786 += 1, R1722 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s9 [70, 70] { R1786 += 1, R1722 += 1, R175 += 1, R176 += 1 };
  s4 -> s10 [70, 70] { R1786 += 1, R1722 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s1 [71, 65535] { R1786 += 1, R1722 += 1, R175 += 1, R176 += 1 };
  s4 -> s2 [71, 65535] { R1786 += 1, R1722 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s3 [71, 65535] { R1786 += 1, R1722 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s5 -> s5 [0, 65535] { R1786 += 1 };
  s5 -> s11 [0, 65535];
  s6 -> s6 [0, 65535] { R1786 += 1, R1722 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s6 -> s10 [0, 65535] { R1786 += 1, R1722 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s9 -> s6 [0, 65535] { R1786 += 1, R1722 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s9 -> s9 [0, 65535] { R1786 += 1, R1722 += 1, R175 += 1, R176 += 1 };
  s9 -> s10 [0, 65535] { R1786 += 1, R1722 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s10 -> s11 [0, 65535];
  s10 -> s10 [0, 65535] { R1786 += 1, R1722 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s10 -> s12 [0, 65535] { R1786 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R1786 += 1 };
  accepting s12, s5, s2, s10, s11;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R1788 += 1, R1724 += 1, R185 += 1, R186 += 1 };
  s0 -> s0 [0, 65535] { R1787 += 1, R1788 += 1 };
  s0 -> s2 [0, 65535] { R1788 += 1, R1723 += 1, R1724 += 1 };
  s0 -> s3 [70, 70] { R1788 += 1, R1724 += 1, R185 += 1, R186 += 1 };
  s0 -> s4 [70, 70] { R1788 += 1, R1724 += 1, R185 += 1, R186 += 1 };
  s0 -> s1 [71, 65535] { R1788 += 1, R1724 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 69] { R1788 += 1, R1724 += 1, R185 += 1, R186 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1788 += 1 };
  s1 -> s3 [70, 70] { R1788 += 1, R1724 += 1, R185 += 1, R186 += 1 };
  s1 -> s4 [70, 70] { R1788 += 1, R1724 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [71, 65535] { R1788 += 1, R1724 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [0, 69] { R1788 += 1, R1724 += 1, R185 += 1, R186 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1788 += 1, R1723 += 1, R1724 += 1 };
  s2 -> s3 [70, 70] { R1788 += 1, R1724 += 1, R185 += 1, R186 += 1 };
  s2 -> s4 [70, 70] { R1788 += 1, R1724 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [71, 65535] { R1788 += 1, R1724 += 1, R185 += 1, R186 += 1 };
  s3 -> s3 [0, 65535] { R1788 += 1, R1724 += 1, R185 += 1, R186 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R1788 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1788 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1788 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R1790 += 1, R1726 += 1, R1467 += 1, R1468 += 1 };
  s0 -> s2 [0, 69] { R1790 += 1, R1726 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s0 -> s3 [0, 69] { R1790 += 1, R1726 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s0 -> s4 [0, 65535] { R1790 += 1, R1725 += 1, R1726 += 1 };
  s0 -> s0 [0, 65535] { R1789 += 1, R1790 += 1 };
  s0 -> s5 [70, 70] { R1790 += 1, R1726 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s0 -> s6 [70, 70] { R1790 += 1, R1726 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s0 -> s7 [70, 70] { R1790 += 1, R1726 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s0 -> s8 [70, 70] { R1790 += 1, R1726 += 1, R1467 += 1, R1468 += 1 };
  s0 -> s9 [70, 70] { R1790 += 1, R1726 += 1, R1467 += 1, R1468 += 1 };
  s0 -> s10 [70, 70] { R1790 += 1, R1726 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s0 -> s1 [71, 65535] { R1790 += 1, R1726 += 1, R1467 += 1, R1468 += 1 };
  s0 -> s2 [71, 65535] { R1790 += 1, R1726 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s0 -> s3 [71, 65535] { R1790 += 1, R1726 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s1 -> s1 [0, 69] { R1790 += 1, R1726 += 1, R1467 += 1, R1468 += 1 };
  s1 -> s2 [0, 69] { R1790 += 1, R1726 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s1 -> s3 [0, 69] { R1790 += 1, R1726 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s1 -> s5 [70, 70] { R1790 += 1, R1726 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s1 -> s6 [70, 70] { R1790 += 1, R1726 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s1 -> s7 [70, 70] { R1790 += 1, R1726 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s1 -> s8 [70, 70] { R1790 += 1, R1726 += 1, R1467 += 1, R1468 += 1 };
  s1 -> s9 [70, 70] { R1790 += 1, R1726 += 1, R1467 += 1, R1468 += 1 };
  s1 -> s10 [70, 70] { R1790 += 1, R1726 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s1 -> s1 [71, 65535] { R1790 += 1, R1726 += 1, R1467 += 1, R1468 += 1 };
  s1 -> s2 [71, 65535] { R1790 += 1, R1726 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s1 -> s3 [71, 65535] { R1790 += 1, R1726 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s2 -> s17 [0, 69] { R1790 += 1, R1726 += 1, R1468 += 1 };
  s2 -> s15 [0, 69] { R1790 += 1, R1726 += 1 };
  s2 -> s2 [0, 69] { R1790 += 1, R1726 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s2 -> s5 [70, 70] { R1790 += 1, R1726 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s2 -> s18 [70, 70] { R1790 += 1, R1726 += 1, R1468 += 1 };
  s2 -> s14 [70, 70] { R1790 += 1, R1726 += 1, R1468 += 1 };
  s2 -> s11 [70, 70] { R1790 += 1, R1726 += 1 };
  s2 -> s16 [70, 70] { R1790 += 1, R1726 += 1 };
  s2 -> s10 [70, 70] { R1790 += 1, R1726 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s2 -> s17 [71, 65535] { R1790 += 1, R1726 += 1, R1468 += 1 };
  s2 -> s15 [71, 65535] { R1790 += 1, R1726 += 1 };
  s2 -> s2 [71, 65535] { R1790 += 1, R1726 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s3 -> s15 [0, 69] { R1790 += 1, R1726 += 1 };
  s3 -> s2 [0, 69] { R1790 += 1, R1726 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s3 -> s3 [0, 69] { R1790 += 1, R1726 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s3 -> s5 [70, 70] { R1790 += 1, R1726 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s3 -> s6 [70, 70] { R1790 += 1, R1726 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s3 -> s11 [70, 70] { R1790 += 1, R1726 += 1 };
  s3 -> s16 [70, 70] { R1790 += 1, R1726 += 1 };
  s3 -> s7 [70, 70] { R1790 += 1, R1726 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s3 -> s10 [70, 70] { R1790 += 1, R1726 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s3 -> s15 [71, 65535] { R1790 += 1, R1726 += 1 };
  s3 -> s2 [71, 65535] { R1790 += 1, R1726 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s3 -> s3 [71, 65535] { R1790 += 1, R1726 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s4 -> s1 [0, 69] { R1790 += 1, R1726 += 1, R1467 += 1, R1468 += 1 };
  s4 -> s2 [0, 69] { R1790 += 1, R1726 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s4 -> s3 [0, 69] { R1790 += 1, R1726 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s4 -> s4 [0, 65535] { R1790 += 1, R1725 += 1, R1726 += 1 };
  s4 -> s5 [70, 70] { R1790 += 1, R1726 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s4 -> s6 [70, 70] { R1790 += 1, R1726 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s4 -> s7 [70, 70] { R1790 += 1, R1726 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s4 -> s8 [70, 70] { R1790 += 1, R1726 += 1, R1467 += 1, R1468 += 1 };
  s4 -> s9 [70, 70] { R1790 += 1, R1726 += 1, R1467 += 1, R1468 += 1 };
  s4 -> s10 [70, 70] { R1790 += 1, R1726 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s4 -> s1 [71, 65535] { R1790 += 1, R1726 += 1, R1467 += 1, R1468 += 1 };
  s4 -> s2 [71, 65535] { R1790 += 1, R1726 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s4 -> s3 [71, 65535] { R1790 += 1, R1726 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s5 -> s5 [0, 65535] { R1790 += 1, R1726 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s5 -> s14 [0, 65535] { R1790 += 1, R1726 += 1, R1468 += 1 };
  s5 -> s11 [0, 65535] { R1790 += 1, R1726 += 1 };
  s7 -> s5 [0, 65535] { R1790 += 1, R1726 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s7 -> s11 [0, 65535] { R1790 += 1, R1726 += 1 };
  s7 -> s7 [0, 65535] { R1790 += 1, R1726 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s8 -> s5 [0, 65535] { R1790 += 1, R1726 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s8 -> s7 [0, 65535] { R1790 += 1, R1726 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s8 -> s8 [0, 65535] { R1790 += 1, R1726 += 1, R1467 += 1, R1468 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s11 [0, 65535] { R1790 += 1, R1726 += 1 };
  s11 -> s13 [0, 65535] { R1790 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R1790 += 1 };
  s14 -> s14 [0, 65535] { R1790 += 1, R1726 += 1, R1468 += 1 };
  s14 -> s11 [0, 65535] { R1790 += 1, R1726 += 1 };
  s15 -> s15 [0, 69] { R1790 += 1, R1726 += 1 };
  s15 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R1790 += 1 };
  s15 -> s11 [70, 70] { R1790 += 1, R1726 += 1 };
  s15 -> s16 [70, 70] { R1790 += 1, R1726 += 1 };
  s15 -> s15 [71, 65535] { R1790 += 1, R1726 += 1 };
  s16 -> s12 [0, 65535];
  s16 -> s16 [0, 65535] { R1790 += 1 };
  s17 -> s17 [0, 69] { R1790 += 1, R1726 += 1, R1468 += 1 };
  s17 -> s15 [0, 69] { R1790 += 1, R1726 += 1 };
  s17 -> s18 [70, 70] { R1790 += 1, R1726 += 1, R1468 += 1 };
  s17 -> s14 [70, 70] { R1790 += 1, R1726 += 1, R1468 += 1 };
  s17 -> s11 [70, 70] { R1790 += 1, R1726 += 1 };
  s17 -> s16 [70, 70] { R1790 += 1, R1726 += 1 };
  s17 -> s17 [71, 65535] { R1790 += 1, R1726 += 1, R1468 += 1 };
  s17 -> s15 [71, 65535] { R1790 += 1, R1726 += 1 };
  accepting s16, s12, s13, s15, s11;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R1792 += 1, R1728 += 1, R1635 += 1, R1636 += 1 };
  s0 -> s2 [0, 69] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s0 -> s3 [0, 69] { R1792 += 1, R1728 += 1, R1636 += 1, R1637 += 1, R1638 += 1 };
  s0 -> s4 [0, 65535] { R1792 += 1, R1727 += 1, R1728 += 1 };
  s0 -> s0 [0, 65535] { R1791 += 1, R1792 += 1 };
  s0 -> s5 [70, 70] { R1792 += 1, R1728 += 1, R1635 += 1, R1636 += 1 };
  s0 -> s6 [70, 70] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s0 -> s7 [70, 70] { R1792 += 1, R1728 += 1, R1635 += 1, R1636 += 1 };
  s0 -> s8 [70, 70] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s0 -> s9 [70, 70] { R1792 += 1, R1728 += 1, R1636 += 1, R1637 += 1, R1638 += 1 };
  s0 -> s10 [70, 70] { R1792 += 1, R1728 += 1, R1636 += 1, R1637 += 1, R1638 += 1 };
  s0 -> s2 [71, 74] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s0 -> s1 [71, 65535] { R1792 += 1, R1728 += 1, R1635 += 1, R1636 += 1 };
  s0 -> s3 [71, 65535] { R1792 += 1, R1728 += 1, R1636 += 1, R1637 += 1, R1638 += 1 };
  s0 -> s11 [75, 75] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s0 -> s12 [82, 82] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s0 -> s2 [83, 65535] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s1 -> s1 [0, 69] { R1792 += 1, R1728 += 1, R1635 += 1, R1636 += 1 };
  s1 -> s2 [0, 69] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s1 -> s3 [0, 69] { R1792 += 1, R1728 += 1, R1636 += 1, R1637 += 1, R1638 += 1 };
  s1 -> s5 [70, 70] { R1792 += 1, R1728 += 1, R1635 += 1, R1636 += 1 };
  s1 -> s6 [70, 70] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s1 -> s7 [70, 70] { R1792 += 1, R1728 += 1, R1635 += 1, R1636 += 1 };
  s1 -> s8 [70, 70] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s1 -> s9 [70, 70] { R1792 += 1, R1728 += 1, R1636 += 1, R1637 += 1, R1638 += 1 };
  s1 -> s10 [70, 70] { R1792 += 1, R1728 += 1, R1636 += 1, R1637 += 1, R1638 += 1 };
  s1 -> s2 [71, 74] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s1 -> s1 [71, 65535] { R1792 += 1, R1728 += 1, R1635 += 1, R1636 += 1 };
  s1 -> s3 [71, 65535] { R1792 += 1, R1728 += 1, R1636 += 1, R1637 += 1, R1638 += 1 };
  s1 -> s11 [75, 75] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s1 -> s12 [82, 82] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s1 -> s2 [83, 65535] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s2 -> s2 [0, 69] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s2 -> s6 [70, 70] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s2 -> s8 [70, 70] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s2 -> s2 [71, 74] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s2 -> s11 [75, 75] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s2 -> s12 [82, 82] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s2 -> s2 [83, 65535] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s3 -> s2 [0, 69] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s3 -> s3 [0, 69] { R1792 += 1, R1728 += 1, R1636 += 1, R1637 += 1, R1638 += 1 };
  s3 -> s6 [70, 70] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s3 -> s8 [70, 70] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s3 -> s9 [70, 70] { R1792 += 1, R1728 += 1, R1636 += 1, R1637 += 1, R1638 += 1 };
  s3 -> s10 [70, 70] { R1792 += 1, R1728 += 1, R1636 += 1, R1637 += 1, R1638 += 1 };
  s3 -> s2 [71, 74] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s3 -> s3 [71, 65535] { R1792 += 1, R1728 += 1, R1636 += 1, R1637 += 1, R1638 += 1 };
  s3 -> s11 [75, 75] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s3 -> s12 [82, 82] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s3 -> s2 [83, 65535] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s4 -> s1 [0, 69] { R1792 += 1, R1728 += 1, R1635 += 1, R1636 += 1 };
  s4 -> s2 [0, 69] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s4 -> s3 [0, 69] { R1792 += 1, R1728 += 1, R1636 += 1, R1637 += 1, R1638 += 1 };
  s4 -> s4 [0, 65535] { R1792 += 1, R1727 += 1, R1728 += 1 };
  s4 -> s5 [70, 70] { R1792 += 1, R1728 += 1, R1635 += 1, R1636 += 1 };
  s4 -> s6 [70, 70] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s4 -> s7 [70, 70] { R1792 += 1, R1728 += 1, R1635 += 1, R1636 += 1 };
  s4 -> s8 [70, 70] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s4 -> s9 [70, 70] { R1792 += 1, R1728 += 1, R1636 += 1, R1637 += 1, R1638 += 1 };
  s4 -> s10 [70, 70] { R1792 += 1, R1728 += 1, R1636 += 1, R1637 += 1, R1638 += 1 };
  s4 -> s2 [71, 74] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s4 -> s1 [71, 65535] { R1792 += 1, R1728 += 1, R1635 += 1, R1636 += 1 };
  s4 -> s3 [71, 65535] { R1792 += 1, R1728 += 1, R1636 += 1, R1637 += 1, R1638 += 1 };
  s4 -> s11 [75, 75] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s4 -> s12 [82, 82] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s4 -> s2 [83, 65535] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s7 -> s8 [0, 74] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s7 -> s7 [0, 65535] { R1792 += 1, R1728 += 1, R1635 += 1, R1636 += 1 };
  s7 -> s10 [0, 65535] { R1792 += 1, R1728 += 1, R1636 += 1, R1637 += 1, R1638 += 1 };
  s7 -> s26 [75, 75] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s7 -> s14 [82, 82] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s7 -> s8 [83, 65535] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s8 -> s8 [0, 74] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s8 -> s26 [75, 75] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s8 -> s14 [82, 82] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s8 -> s8 [83, 65535] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s10 -> s8 [0, 74] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s10 -> s10 [0, 65535] { R1792 += 1, R1728 += 1, R1636 += 1, R1637 += 1, R1638 += 1 };
  s10 -> s26 [75, 75] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s10 -> s14 [82, 82] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s10 -> s8 [83, 65535] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s11 -> s11 [0, 69] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s11 -> s26 [70, 70] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s11 -> s27 [70, 70] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s11 -> s11 [71, 75] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s11 -> s18 [82, 82] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s11 -> s11 [83, 65535] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s12 -> s12 [0, 69] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s12 -> s13 [0, 69] { R1792 += 1, R1728 += 1 };
  s12 -> s14 [70, 70] { R1792 += 1, R1728 += 1, R1636 += 1 };
  s12 -> s15 [70, 70] { R1792 += 1, R1728 += 1 };
  s12 -> s16 [70, 70] { R1792 += 1, R1728 += 1 };
  s12 -> s17 [70, 70] { R1792 += 1, R1728 += 1, R1636 += 1 };
  s12 -> s12 [71, 74] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s12 -> s12 [71, 65535] { R1792 += 1, R1728 += 1, R1636 += 1 };
  s12 -> s13 [71, 65535] { R1792 += 1, R1728 += 1 };
  s12 -> s18 [75, 75] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s12 -> s19 [75, 75] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s12 -> s12 [82, 65535] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s13 -> s13 [0, 69] { R1792 += 1, R1728 += 1 };
  s13 -> s13 [0, 65535] { R1792 += 1 };
  s13 -> s24 [0, 65535];
  s13 -> s15 [70, 70] { R1792 += 1, R1728 += 1 };
  s13 -> s16 [70, 70] { R1792 += 1, R1728 += 1 };
  s13 -> s13 [71, 65535] { R1792 += 1, R1728 += 1 };
  s14 -> s14 [0, 74] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s14 -> s14 [0, 65535] { R1792 += 1, R1728 += 1, R1636 += 1 };
  s14 -> s16 [0, 65535] { R1792 += 1, R1728 += 1 };
  s14 -> s22 [75, 75] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s14 -> s20 [75, 75] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s14 -> s14 [82, 65535] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s15 -> s24 [0, 65535];
  s15 -> s15 [0, 65535] { R1792 += 1 };
  s16 -> s24 [0, 65535];
  s16 -> s25 [0, 65535] { R1792 += 1 };
  s16 -> s16 [0, 65535] { R1792 += 1, R1728 += 1 };
  s18 -> s13 [0, 69] { R1792 += 1, R1728 += 1 };
  s18 -> s18 [0, 69] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s18 -> s22 [70, 70] { R1792 += 1, R1728 += 1, R1636 += 1 };
  s18 -> s15 [70, 70] { R1792 += 1, R1728 += 1 };
  s18 -> s23 [70, 70] { R1792 += 1, R1728 += 1, R1636 += 1 };
  s18 -> s16 [70, 70] { R1792 += 1, R1728 += 1 };
  s18 -> s18 [71, 75] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s18 -> s13 [71, 65535] { R1792 += 1, R1728 += 1 };
  s18 -> s18 [71, 65535] { R1792 += 1, R1728 += 1, R1636 += 1 };
  s18 -> s18 [82, 65535] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s19 -> s13 [0, 69] { R1792 += 1, R1728 += 1 };
  s19 -> s19 [0, 69] { R1792 += 1, R1728 += 1, R1636 += 1 };
  s19 -> s20 [70, 70] { R1792 += 1, R1728 += 1, R1636 += 1 };
  s19 -> s15 [70, 70] { R1792 += 1, R1728 += 1 };
  s19 -> s16 [70, 70] { R1792 += 1, R1728 += 1 };
  s19 -> s21 [70, 70] { R1792 += 1, R1728 += 1, R1636 += 1 };
  s19 -> s13 [71, 65535] { R1792 += 1, R1728 += 1 };
  s19 -> s19 [71, 65535] { R1792 += 1, R1728 += 1, R1636 += 1 };
  s20 -> s20 [0, 65535] { R1792 += 1, R1728 += 1, R1636 += 1 };
  s20 -> s16 [0, 65535] { R1792 += 1, R1728 += 1 };
  s22 -> s22 [0, 75] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s22 -> s22 [0, 65535] { R1792 += 1, R1728 += 1, R1636 += 1 };
  s22 -> s16 [0, 65535] { R1792 += 1, R1728 += 1 };
  s22 -> s22 [82, 65535] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s24 -> s24 [0, 65535];
  s25 -> s24 [0, 65535];
  s25 -> s25 [0, 65535] { R1792 += 1 };
  s26 -> s26 [0, 75] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s26 -> s22 [82, 82] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  s26 -> s26 [83, 65535] { R1792 += 1, R1728 += 1, R1636 += 1, R1638 += 1 };
  accepting s16, s24, s13, s15, s25;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
constraint R3 = R1792 && R25 - R1792 = -1 && R26 = R1792 && R27 - R1792 = -1 && R28 = R1792 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R1640 + -1*R1636 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R1640 + -1*R1636 - R130 = 0 && R129 + R1639 + R1635 = 0 && R131 + R1641 + R1637 = 0 && R132 + R1642 + R1638 = 0 && R1703 = 0 && R1704 = 0 && R1713 = 0 && R1714 = 0 && R1721 = 0 && R1722 = 0 && R1725 = 0 && R1726 = 0 && R1727 = 0 && R1728 = 0 && R1729 = 0 && R1730 = R1792 && R1731 = 0 && R1732 = R1792 && R1733 = 0 && R1734 = R1792 && R1735 = 0 && R1736 = R1792 && R1737 = 0 && R1738 = R1792 && R1739 = 0 && R1740 = R1792 && R1741 = 0 && R1742 = R1792 && R1743 = 0 && R1744 = R1792 && R1745 = 0 && R1746 = R1792 && R1747 = 0 && R1748 = R1792 && R1749 = 0 && R1750 = R1792 && R1751 = 0 && R1752 = R1792 && R1753 = 0 && R1754 = R1792 && R1755 = 0 && R1756 = R1792 && R1757 = 0 && R1758 = R1792 && R1759 = 0 && R1760 = R1792 && R1761 = 0 && R1762 = R1792 && R1763 = 0 && R1764 = R1792 && R1765 = 0 && R1766 = R1792 && R1767 = 0 && R1768 = R1792 && R1769 = 0 && R1770 = R1792 && R1771 = 0 && R1772 = R1792 && R1773 = 0 && R1774 = R1792 && R1775 = 0 && R1776 = R1792 && R1777 = 0 && R1778 = R1792 && R1779 = 0 && R1780 = R1792 && R1781 = 0 && R1782 = R1792 && R1783 = 0 && R1784 = R1792 && R1785 = 0 && R1786 = R1792 && R1787 = 0 && R1788 = R1792 && R1789 = 0 && R1790 = R1792 && R1791 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R1640 + -1*R1636 - R130 < 1 && 0 < R1792 && (R2 != 0 || R22 = 0 || (R1643 = 0 && R1644 = 0)) && (R2 != 0 || R22 = 0 || (R1645 = 0 && R1646 = 0)) && (R2 != 0 || R22 = 0 || (R1647 = 0 && R1648 = 0)) && (R2 != 0 || R22 = 0 || (R1649 = 0 && R1650 = 0)) && (R2 != 0 || R22 = 0 || (R1651 = 0 && R1652 = 0)) && (R2 != 0 || R22 = 0 || (R1653 = 0 && R1654 = 0)) && (R2 != 0 || R22 = 0 || (R1655 = 0 && R1656 = 0)) && (R2 != 0 || R22 = 0 || (R1657 = 0 && R1658 = 0)) && (R2 != 0 || R22 = 0 || (R1659 = 0 && R1660 = 0)) && (R2 != 0 || R22 = 0 || (R1661 = 0 && R1662 = 0)) && (R2 != 0 || R22 = 0 || (R1663 = 0 && R1664 = 0)) && (R2 != 0 || R22 = 0 || (R1665 = 0 && R1666 = 0)) && (R2 != 0 || R22 = 0 || (R1667 = 0 && R1668 = 0)) && (R2 != 0 || R22 = 0 || (R1669 = 0 && R1670 = 0)) && (R2 != 0 || R22 = 0 || (R1671 = 0 && R1672 = 0)) && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R1640 + -1*R1636 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R191 + R187 = 0 && R114 + R192 + R188 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R1640 + -1*R1636 - R130 = 0 || R130 + R1640 + R1636 < 1) && (R81 + R158 + R155 = 0 || R130 + R1640 + R1636 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R1640 + -1*R1636 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R1640 + R1636 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R1640 + -1*R1636 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R1640 + R1636 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R1640 + -1*R1636 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R1640 + R1636 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 != 0 || R112 + R190 + R186 + -1*R1640 + -1*R1636 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R1640 + R1636 = 0)) && (R113 + R191 + R187 != 0 || R83 + R160 + R157 + -1*R192 + -1*R188 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R1472 + R1467 != 0 || R120 + R1473 + R1468 + -1*R1640 + -1*R1636 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R1640 + R1636 = 0)) && (R1643 != 0 || R2 = R1644 || R2 < 1) && (R1645 != 0 || R2 = R1646 || R2 < 1) && (R1647 != 0 || R2 = R1648 || R2 < 1) && (R1649 != 0 || R2 = R1650 || R2 < 1) && (R1651 != 0 || R2 = R1652 || R2 < 1) && (R1653 != 0 || R2 = R1654 || R2 < 1) && (R1655 != 0 || R2 = R1656 || R2 < 1) && (R1657 != 0 || R2 = R1658 || R2 < 1) && (R1659 != 0 || R2 = R1660 || R2 < 1) && (R1661 != 0 || R2 = R1662 || R2 < 1) && (R1663 != 0 || R2 = R1664 || R2 < 1) && (R1665 != 0 || R2 = R1666 || R2 < 1) && (R1667 != 0 || R2 = R1668 || R2 < 1) && (R1669 != 0 || R2 = R1670 || R2 < 1) && (R1671 != 0 || R2 = R1672 || R2 < 1) && (R23 = 0 || (R1701 = 0 && R1702 = 0)) && (R23 = 0 || (R1705 = 0 && R1706 = 0)) && (R23 = 0 || (R1707 = 0 && R1708 = 0)) && (R23 = 0 || (R1709 = 0 && R1710 = 0)) && (R23 = 0 || (R1711 = 0 && R1712 = 0)) && (R23 = 0 || (R1715 = 0 && R1716 = 0)) && (R23 = 0 || (R1717 = 0 && R1718 = 0)) && (R23 = 0 || (R1719 = 0 && R1720 = 0)) && (R23 = 0 || (R1723 = 0 && R1724 = 0)) && (R24 = 0 || (R1673 = 0 && R1674 = 0)) && (R24 = 0 || (R1675 = 0 && R1676 = 0)) && (R24 = 0 || (R1677 = 0 && R1678 = 0)) && (R24 = 0 || (R1679 = 0 && R1680 = 0)) && (R24 = 0 || (R1681 = 0 && R1682 = 0)) && (R24 = 0 || (R1683 = 0 && R1684 = 0)) && (R24 = 0 || (R1685 = 0 && R1686 = 0)) && (R24 = 0 || (R1687 = 0 && R1688 = 0)) && (R24 = 0 || (R1689 = 0 && R1690 = 0)) && (R24 = 0 || (R1691 = 0 && R1692 = 0)) && (R24 = 0 || (R1693 = 0 && R1694 = 0)) && (R24 = 0 || (R1695 = 0 && R1696 = 0)) && (R24 = 0 || (R1697 = 0 && R1698 = 0)) && (R24 = 0 || (R1699 = 0 && R1700 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R1640 + R1636 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R1640 + R1636 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R1640 + R1636 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 = 0 || (R83 + R160 + R157 = 0 && R130 + R1640 + R1636 = 0)) && (R113 + R191 + R187 = 0 || R83 + R160 + R157 < 1) && (R119 + R1472 + R1467 = 0 || (R83 + R160 + R157 = 0 && R130 + R1640 + R1636 = 0)) && (R123 + R1476 + R1471 = 0 || (R121 + R1474 + R1469 = 0 && R122 + R1475 + R1470 = 0)) && (R1643 = 0 || R2 < 1) && (R1645 = 0 || R2 < 1) && (R1647 = 0 || R2 < 1) && (R1649 = 0 || R2 < 1) && (R1651 = 0 || R2 < 1) && (R1653 = 0 || R2 < 1) && (R1655 = 0 || R2 < 1) && (R1657 = 0 || R2 < 1) && (R1659 = 0 || R2 < 1) && (R1661 = 0 || R2 < 1) && (R1663 = 0 || R2 < 1) && (R1665 = 0 || R2 < 1) && (R1667 = 0 || R2 < 1) && (R1669 = 0 || R2 < 1) && (R1671 = 0 || R2 < 1);
// End of Parikh automata intersection problem
