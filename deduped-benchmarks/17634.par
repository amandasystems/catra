// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R2, R22, R23, R24, R25, R26, R27, R2741, R2742, R2743, R2744, R2745, R2746, R2747, R2748, R2749, R2750, R2751, R2752, R2753, R2754, R2755, R2756, R2757, R2758, R2759, R2760, R2761, R2762, R2763, R2764, R2765, R2766, R2767, R2768, R2769, R2770, R2771, R2772, R2773, R2774, R2775, R2776, R2777, R2778, R2779, R2780, R2781, R2782, R2783, R2784, R2785, R2786, R2787, R2788, R2789, R2790, R2791, R2792, R2793, R2794, R2795, R2796, R2797, R2798, R2799, R28, R2800, R2801, R2802, R2803, R2804, R2805, R2806, R2807, R2808, R2809, R2810, R2811, R2812, R2813, R2814, R2815, R2816, R2817, R2818, R2819, R2820, R2821, R2822, R2823, R2824, R2825, R2826, R2827, R2828, R2829, R2830, R2831, R2832, R2833, R2834, R2835, R2836, R2837, R2838, R2839, R2840, R2841, R2842, R2843, R2844, R2845, R2846, R2847, R2848, R2849, R2850, R2851, R2852, R2853, R2854, R2855, R2856, R2857, R2858, R2859, R2860, R2861, R2862, R2863, R2864, R2865, R2866, R2867, R2868, R2869, R2870, R2871, R2872, R2873, R2874, R2875, R2876, R2877, R2878, R2879, R2880, R2881, R2882, R2883, R2884, R2885, R2886, R2887, R2888, R2889, R2890, R2891, R2892, R2893, R2894, R2895, R2896, R2897, R2898, R2899, R29, R2900, R2901, R2902, R2903, R2904, R2905, R2906, R2907, R2908, R3, R30, R31, R32, R4, R5, R63, R65, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R26 += 1 };
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R30 += 1 };
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R2789 += 1, R2790 += 1 };
  s0 -> s1 [0, 65535] { R2790 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R2790 += 1, R24 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R2792 += 1 };
  s0 -> s0 [0, 65535] { R2791 += 1, R2792 += 1 };
  s0 -> s2 [70, 70] { R2792 += 1 };
  s0 -> s3 [70, 70] { R2792 += 1 };
  s0 -> s1 [76, 65535] { R2792 += 1 };
  s1 -> s1 [0, 69] { R2792 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2792 += 1 };
  s1 -> s3 [70, 70] { R2792 += 1 };
  s1 -> s1 [76, 65535] { R2792 += 1 };
  s2 -> s2 [0, 70] { R2792 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R2792 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R2794 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R2793 += 1, R2794 += 1 };
  s0 -> s2 [70, 70] { R2794 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R2794 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R2794 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R2794 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2794 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R2794 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R2794 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2794 += 1, R63 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R2796 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R2795 += 1, R2796 += 1 };
  s0 -> s2 [70, 70] { R2796 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R2796 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R2796 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R2796 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2796 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R2796 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R2796 += 1, R65 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2796 += 1, R65 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R2798 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R2797 += 1, R2798 += 1 };
  s0 -> s2 [70, 70] { R2798 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R2798 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R2798 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R2798 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2798 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R2798 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R2798 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2798 += 1, R67 += 1, R68 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R2800 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R2799 += 1, R2800 += 1 };
  s0 -> s2 [70, 70] { R2800 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R2800 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R2800 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R2800 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2800 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R2800 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R2800 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R2800 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R2802 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R2801 += 1, R2802 += 1 };
  s0 -> s2 [70, 70] { R2802 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R2802 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R2802 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R2802 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2802 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R2802 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R2802 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R2802 += 1, R77 += 1, R78 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R2804 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R2803 += 1, R2804 += 1 };
  s0 -> s2 [70, 70] { R2804 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R2804 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R2804 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R2804 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2804 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R2804 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R2804 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535] { R2804 += 1, R81 += 1, R82 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R2806 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R2805 += 1, R2806 += 1 };
  s0 -> s2 [70, 70] { R2806 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R2806 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R2806 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R2806 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2806 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R2806 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R2806 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535] { R2806 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R2808 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R2807 += 1, R2808 += 1 };
  s0 -> s2 [70, 70] { R2808 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R2808 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R2808 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R2808 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2808 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R2808 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R2808 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535] { R2808 += 1, R93 += 1, R94 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R2810 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R2809 += 1, R2810 += 1 };
  s0 -> s2 [70, 70] { R2810 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R2810 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R2810 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R2810 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2810 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R2810 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R2810 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2810 += 1, R101 += 1, R102 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R2812 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R2811 += 1, R2812 += 1 };
  s0 -> s2 [70, 70] { R2812 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R2812 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R2812 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R2812 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2812 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R2812 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R2812 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2812 += 1, R111 += 1, R112 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R2814 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R2813 += 1, R2814 += 1 };
  s0 -> s2 [70, 70] { R2814 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R2814 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R2814 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R2814 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2814 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R2814 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R2814 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535] { R2814 += 1, R119 += 1, R120 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R2816 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R2815 += 1, R2816 += 1 };
  s0 -> s2 [70, 70] { R2816 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R2816 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R2816 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R2816 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2816 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R2816 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R2816 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535] { R2816 += 1, R129 += 1, R130 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R2846 += 1 };
  s0 -> s0 [0, 65535] { R2845 += 1, R2846 += 1 };
  s0 -> s2 [70, 70] { R2846 += 1 };
  s0 -> s1 [71, 65535] { R2846 += 1 };
  s1 -> s1 [0, 69] { R2846 += 1 };
  s1 -> s2 [70, 70] { R2846 += 1 };
  s1 -> s1 [71, 65535] { R2846 += 1 };
  s2 -> s2 [0, 65535] { R2846 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R2847 += 1, R2848 += 1 };
  s0 -> s1 [0, 65535] { R2848 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R2848 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R2850 += 1 };
  s0 -> s2 [0, 65535] { R2850 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R2849 += 1, R2850 += 1 };
  s0 -> s3 [70, 70] { R2850 += 1 };
  s0 -> s1 [71, 65535] { R2850 += 1 };
  s1 -> s1 [0, 69] { R2850 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R2850 += 1 };
  s1 -> s1 [71, 65535] { R2850 += 1 };
  s2 -> s1 [0, 69] { R2850 += 1 };
  s2 -> s2 [0, 65535] { R2850 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R2850 += 1 };
  s2 -> s1 [71, 65535] { R2850 += 1 };
  s3 -> s3 [0, 65535] { R2850 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R2852 += 1, R2760 += 1 };
  s0 -> s0 [0, 65535] { R2851 += 1, R2852 += 1 };
  s0 -> s2 [0, 65535] { R2852 += 1, R2759 += 1, R2760 += 1 };
  s0 -> s1 [71, 65535] { R2852 += 1, R2760 += 1 };
  s1 -> s1 [0, 69] { R2852 += 1, R2760 += 1 };
  s1 -> s1 [0, 65535] { R2852 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R2852 += 1, R2760 += 1 };
  s2 -> s1 [0, 69] { R2852 += 1, R2760 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2852 += 1, R2759 += 1, R2760 += 1 };
  s2 -> s1 [71, 65535] { R2852 += 1, R2760 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R2854 += 1, R2762 += 1, R22 += 1 };
  s0 -> s2 [0, 65535] { R2854 += 1, R2761 += 1, R2762 += 1 };
  s0 -> s0 [0, 65535] { R2853 += 1, R2854 += 1 };
  s1 -> s1 [0, 65535] { R2854 += 1, R2762 += 1, R22 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R2854 += 1 };
  s2 -> s1 [0, 65535] { R2854 += 1, R2762 += 1, R22 += 1 };
  s2 -> s2 [0, 65535] { R2854 += 1, R2761 += 1, R2762 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2854 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R2856 += 1, R2764 += 1 };
  s0 -> s2 [0, 65535] { R2856 += 1, R2763 += 1, R2764 += 1 };
  s0 -> s0 [0, 65535] { R2855 += 1, R2856 += 1 };
  s0 -> s1 [75, 65535] { R2856 += 1, R2764 += 1 };
  s1 -> s1 [0, 70] { R2856 += 1, R2764 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2856 += 1 };
  s1 -> s1 [75, 65535] { R2856 += 1, R2764 += 1 };
  s2 -> s1 [0, 70] { R2856 += 1, R2764 += 1 };
  s2 -> s2 [0, 65535] { R2856 += 1, R2763 += 1, R2764 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R2856 += 1, R2764 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R2858 += 1, R2765 += 1, R2766 += 1 };
  s0 -> s2 [0, 65535] { R2858 += 1, R2766 += 1, R138 += 1 };
  s0 -> s0 [0, 65535] { R2857 += 1, R2858 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2858 += 1, R2765 += 1, R2766 += 1 };
  s1 -> s2 [0, 65535] { R2858 += 1, R2766 += 1, R138 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2858 += 1, R2766 += 1, R138 += 1 };
  s2 -> s4 [0, 65535] { R2858 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2858 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R2860 += 1, R2768 += 1 };
  s0 -> s2 [0, 65535] { R2860 += 1, R2768 += 1, R140 += 1 };
  s0 -> s0 [0, 65535] { R2859 += 1, R2860 += 1 };
  s0 -> s3 [0, 65535] { R2860 += 1, R2767 += 1, R2768 += 1 };
  s0 -> s1 [76, 65535] { R2860 += 1, R2768 += 1 };
  s1 -> s1 [0, 74] { R2860 += 1, R2768 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R2860 += 1 };
  s1 -> s1 [76, 65535] { R2860 += 1, R2768 += 1 };
  s2 -> s1 [0, 74] { R2860 += 1, R2768 += 1 };
  s2 -> s2 [0, 65535] { R2860 += 1, R2768 += 1, R140 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R2860 += 1 };
  s2 -> s1 [76, 65535] { R2860 += 1, R2768 += 1 };
  s3 -> s1 [0, 74] { R2860 += 1, R2768 += 1 };
  s3 -> s2 [0, 65535] { R2860 += 1, R2768 += 1, R140 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2860 += 1, R2767 += 1, R2768 += 1 };
  s3 -> s1 [76, 65535] { R2860 += 1, R2768 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2860 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R2862 += 1, R2770 += 1, R144 += 1, R145 += 1 };
  s0 -> s2 [0, 65535] { R2862 += 1, R2770 += 1, R145 += 1, R146 += 1 };
  s0 -> s3 [0, 65535] { R2862 += 1, R2769 += 1, R2770 += 1 };
  s0 -> s0 [0, 65535] { R2861 += 1, R2862 += 1 };
  s1 -> s5 [0, 65535] { R2862 += 1 };
  s1 -> s1 [0, 65535] { R2862 += 1, R2770 += 1, R144 += 1, R145 += 1 };
  s1 -> s2 [0, 65535] { R2862 += 1, R2770 += 1, R145 += 1, R146 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R2862 += 1 };
  s2 -> s2 [0, 65535] { R2862 += 1, R2770 += 1, R145 += 1, R146 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s6 [0, 65535] { R2862 += 1, R2770 += 1 };
  s3 -> s1 [0, 65535] { R2862 += 1, R2770 += 1, R144 += 1, R145 += 1 };
  s3 -> s2 [0, 65535] { R2862 += 1, R2770 += 1, R145 += 1, R146 += 1 };
  s3 -> s3 [0, 65535] { R2862 += 1, R2769 += 1, R2770 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2862 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R2862 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R2862 += 1, R2770 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R2864 += 1, R2772 += 1, R150 += 1 };
  s0 -> s2 [0, 65535] { R2864 += 1, R2771 += 1, R2772 += 1 };
  s0 -> s0 [0, 65535] { R2863 += 1, R2864 += 1 };
  s0 -> s3 [0, 65535] { R2864 += 1, R2772 += 1, R149 += 1, R150 += 1 };
  s0 -> s4 [75, 75] { R2864 += 1, R2772 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R2864 += 1, R2772 += 1, R150 += 1 };
  s0 -> s1 [83, 65535] { R2864 += 1, R2772 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R2864 += 1, R2772 += 1, R150 += 1 };
  s1 -> s6 [0, 65535] { R2864 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R2864 += 1, R2772 += 1 };
  s1 -> s4 [75, 75] { R2864 += 1, R2772 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R2864 += 1, R2772 += 1, R150 += 1 };
  s1 -> s1 [83, 65535] { R2864 += 1, R2772 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R2864 += 1, R2772 += 1, R150 += 1 };
  s2 -> s2 [0, 65535] { R2864 += 1, R2771 += 1, R2772 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s3 [0, 65535] { R2864 += 1, R2772 += 1, R149 += 1, R150 += 1 };
  s2 -> s4 [75, 75] { R2864 += 1, R2772 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R2864 += 1, R2772 += 1, R150 += 1 };
  s2 -> s1 [83, 65535] { R2864 += 1, R2772 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R2864 += 1, R2772 += 1, R150 += 1 };
  s3 -> s6 [0, 65535] { R2864 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R2864 += 1, R2772 += 1, R149 += 1, R150 += 1 };
  s3 -> s4 [75, 75] { R2864 += 1, R2772 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R2864 += 1, R2772 += 1, R150 += 1 };
  s3 -> s1 [83, 65535] { R2864 += 1, R2772 += 1, R150 += 1 };
  s4 -> s4 [0, 75] { R2864 += 1, R2772 += 1, R150 += 1 };
  s4 -> s6 [0, 65535] { R2864 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R2864 += 1, R2772 += 1 };
  s4 -> s4 [83, 65535] { R2864 += 1, R2772 += 1, R150 += 1 };
  s5 -> s6 [0, 65535] { R2864 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R2864 += 1, R2772 += 1 };
  s6 -> s6 [0, 65535] { R2864 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R2866 += 1, R2773 += 1, R2774 += 1 };
  s0 -> s0 [0, 65535] { R2865 += 1, R2866 += 1 };
  s0 -> s2 [0, 65535] { R2866 += 1, R2774 += 1, R154 += 1 };
  s0 -> s3 [0, 65535] { R2866 += 1, R2774 += 1 };
  s1 -> s1 [0, 65535] { R2866 += 1, R2773 += 1, R2774 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R2866 += 1, R2774 += 1, R154 += 1 };
  s1 -> s3 [0, 65535] { R2866 += 1, R2774 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R2866 += 1 };
  s2 -> s2 [0, 65535] { R2866 += 1, R2774 += 1, R154 += 1 };
  s2 -> s3 [0, 65535] { R2866 += 1, R2774 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R2866 += 1 };
  s3 -> s3 [0, 65535] { R2866 += 1, R2774 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2866 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R2868 += 1, R2776 += 1, R158 += 1, R159 += 1 };
  s0 -> s2 [0, 65535] { R2868 += 1, R2776 += 1, R159 += 1, R160 += 1 };
  s0 -> s3 [0, 65535] { R2868 += 1, R2775 += 1, R2776 += 1 };
  s0 -> s0 [0, 65535] { R2867 += 1, R2868 += 1 };
  s1 -> s1 [0, 65535] { R2868 += 1, R2776 += 1, R158 += 1, R159 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R2868 += 1, R2776 += 1, R159 += 1, R160 += 1 };
  s1 -> s5 [0, 65535] { R2868 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2868 += 1, R2776 += 1, R159 += 1, R160 += 1 };
  s2 -> s5 [0, 65535] { R2868 += 1 };
  s2 -> s6 [0, 65535] { R2868 += 1, R2776 += 1 };
  s3 -> s1 [0, 65535] { R2868 += 1, R2776 += 1, R158 += 1, R159 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R2868 += 1, R2776 += 1, R159 += 1, R160 += 1 };
  s3 -> s3 [0, 65535] { R2868 += 1, R2775 += 1, R2776 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2868 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R2868 += 1 };
  s6 -> s6 [0, 65535] { R2868 += 1, R2776 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R2870 += 1, R2778 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R2870 += 1, R2777 += 1, R2778 += 1 };
  s0 -> s3 [0, 65535] { R2870 += 1, R2778 += 1, R164 += 1, R165 += 1 };
  s0 -> s0 [0, 65535] { R2869 += 1, R2870 += 1 };
  s0 -> s4 [0, 65535] { R2870 += 1, R2778 += 1, R165 += 1, R166 += 1 };
  s0 -> s1 [76, 65535] { R2870 += 1, R2778 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R2870 += 1, R2778 += 1, R165 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R2870 += 1 };
  s1 -> s1 [0, 65535] { R2870 += 1, R2778 += 1 };
  s1 -> s1 [76, 65535] { R2870 += 1, R2778 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R2870 += 1, R2778 += 1, R165 += 1 };
  s2 -> s2 [0, 65535] { R2870 += 1, R2777 += 1, R2778 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R2870 += 1, R2778 += 1, R164 += 1, R165 += 1 };
  s2 -> s4 [0, 65535] { R2870 += 1, R2778 += 1, R165 += 1, R166 += 1 };
  s2 -> s1 [76, 65535] { R2870 += 1, R2778 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R2870 += 1, R2778 += 1, R165 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R2870 += 1, R2778 += 1, R164 += 1, R165 += 1 };
  s3 -> s7 [0, 65535] { R2870 += 1 };
  s3 -> s4 [0, 65535] { R2870 += 1, R2778 += 1, R165 += 1, R166 += 1 };
  s3 -> s1 [76, 65535] { R2870 += 1, R2778 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R2870 += 1, R2778 += 1, R165 += 1 };
  s4 -> s5 [0, 65535] { R2870 += 1, R2778 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R2870 += 1 };
  s4 -> s4 [0, 65535] { R2870 += 1, R2778 += 1, R165 += 1, R166 += 1 };
  s4 -> s1 [76, 65535] { R2870 += 1, R2778 += 1, R165 += 1 };
  s5 -> s5 [0, 65535] { R2870 += 1, R2778 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R2870 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2870 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R2872 += 1, R2780 += 1, R172 += 1, R174 += 1 };
  s0 -> s2 [0, 65535] { R2872 += 1, R2780 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s3 [0, 65535] { R2872 += 1, R2779 += 1, R2780 += 1 };
  s0 -> s4 [0, 65535] { R2872 += 1, R2780 += 1, R171 += 1, R172 += 1 };
  s0 -> s0 [0, 65535] { R2871 += 1, R2872 += 1 };
  s0 -> s1 [76, 65535] { R2872 += 1, R2780 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R2872 += 1, R2780 += 1, R172 += 1, R174 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R2872 += 1 };
  s1 -> s1 [0, 65535] { R2872 += 1, R2780 += 1, R172 += 1 };
  s1 -> s7 [0, 65535] { R2872 += 1, R2780 += 1 };
  s1 -> s1 [76, 65535] { R2872 += 1, R2780 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R2872 += 1, R2780 += 1, R172 += 1, R174 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2872 += 1, R2780 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s6 [0, 65535] { R2872 += 1 };
  s2 -> s7 [0, 65535] { R2872 += 1, R2780 += 1 };
  s2 -> s1 [76, 65535] { R2872 += 1, R2780 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R2872 += 1, R2780 += 1, R172 += 1, R174 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R2872 += 1, R2780 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s3 [0, 65535] { R2872 += 1, R2779 += 1, R2780 += 1 };
  s3 -> s4 [0, 65535] { R2872 += 1, R2780 += 1, R171 += 1, R172 += 1 };
  s3 -> s1 [76, 65535] { R2872 += 1, R2780 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R2872 += 1, R2780 += 1, R172 += 1, R174 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R2872 += 1, R2780 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s6 [0, 65535] { R2872 += 1 };
  s4 -> s4 [0, 65535] { R2872 += 1, R2780 += 1, R171 += 1, R172 += 1 };
  s4 -> s1 [76, 65535] { R2872 += 1, R2780 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2872 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R2872 += 1 };
  s7 -> s7 [0, 65535] { R2872 += 1, R2780 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R2874 += 1, R2781 += 1, R2782 += 1 };
  s0 -> s2 [0, 65535] { R2874 += 1, R2782 += 1, R181 += 1 };
  s0 -> s3 [0, 65535] { R2874 += 1, R2782 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s0 -> s4 [0, 65535] { R2874 += 1, R2782 += 1 };
  s0 -> s0 [0, 65535] { R2873 += 1, R2874 += 1 };
  s1 -> s1 [0, 65535] { R2874 += 1, R2781 += 1, R2782 += 1 };
  s1 -> s2 [0, 65535] { R2874 += 1, R2782 += 1, R181 += 1 };
  s1 -> s3 [0, 65535] { R2874 += 1, R2782 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s1 -> s4 [0, 65535] { R2874 += 1, R2782 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s5 [0, 65535] { R2874 += 1 };
  s2 -> s2 [0, 65535] { R2874 += 1, R2782 += 1, R181 += 1 };
  s2 -> s4 [0, 65535] { R2874 += 1, R2782 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s5 [0, 65535] { R2874 += 1 };
  s3 -> s2 [0, 65535] { R2874 += 1, R2782 += 1, R181 += 1 };
  s3 -> s3 [0, 65535] { R2874 += 1, R2782 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s3 -> s4 [0, 65535] { R2874 += 1, R2782 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R2874 += 1 };
  s4 -> s4 [0, 65535] { R2874 += 1, R2782 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R2874 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R2876 += 1, R2784 += 1, R190 += 1, R192 += 1 };
  s0 -> s2 [0, 65535] { R2876 += 1, R2783 += 1, R2784 += 1 };
  s0 -> s0 [0, 65535] { R2875 += 1, R2876 += 1 };
  s0 -> s3 [0, 65535] { R2876 += 1, R2784 += 1, R189 += 1, R190 += 1 };
  s0 -> s4 [0, 65535] { R2876 += 1, R2784 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s0 -> s1 [82, 65535] { R2876 += 1, R2784 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 75] { R2876 += 1, R2784 += 1, R190 += 1, R192 += 1 };
  s1 -> s5 [0, 65535] { R2876 += 1, R2784 += 1 };
  s1 -> s1 [0, 65535] { R2876 += 1, R2784 += 1, R190 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R2876 += 1 };
  s1 -> s1 [82, 65535] { R2876 += 1, R2784 += 1, R190 += 1, R192 += 1 };
  s2 -> s1 [0, 75] { R2876 += 1, R2784 += 1, R190 += 1, R192 += 1 };
  s2 -> s2 [0, 65535] { R2876 += 1, R2783 += 1, R2784 += 1 };
  s2 -> s3 [0, 65535] { R2876 += 1, R2784 += 1, R189 += 1, R190 += 1 };
  s2 -> s4 [0, 65535] { R2876 += 1, R2784 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [82, 65535] { R2876 += 1, R2784 += 1, R190 += 1, R192 += 1 };
  s3 -> s1 [0, 75] { R2876 += 1, R2784 += 1, R190 += 1, R192 += 1 };
  s3 -> s3 [0, 65535] { R2876 += 1, R2784 += 1, R189 += 1, R190 += 1 };
  s3 -> s4 [0, 65535] { R2876 += 1, R2784 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R2876 += 1 };
  s3 -> s1 [82, 65535] { R2876 += 1, R2784 += 1, R190 += 1, R192 += 1 };
  s4 -> s1 [0, 75] { R2876 += 1, R2784 += 1, R190 += 1, R192 += 1 };
  s4 -> s5 [0, 65535] { R2876 += 1, R2784 += 1 };
  s4 -> s4 [0, 65535] { R2876 += 1, R2784 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R2876 += 1 };
  s4 -> s1 [82, 65535] { R2876 += 1, R2784 += 1, R190 += 1, R192 += 1 };
  s5 -> s5 [0, 65535] { R2876 += 1, R2784 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R2876 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2876 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R2878 += 1, R2786 += 1, R2747 += 1, R2748 += 1, R2749 += 1 };
  s0 -> s2 [0, 65535] { R2878 += 1, R2786 += 1 };
  s0 -> s3 [0, 65535] { R2878 += 1, R2785 += 1, R2786 += 1 };
  s0 -> s4 [0, 65535] { R2878 += 1, R2786 += 1, R2747 += 1, R2749 += 1, R2750 += 1 };
  s0 -> s0 [0, 65535] { R2877 += 1, R2878 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R2878 += 1 };
  s1 -> s1 [0, 65535] { R2878 += 1, R2786 += 1, R2747 += 1, R2748 += 1, R2749 += 1 };
  s1 -> s2 [0, 65535] { R2878 += 1, R2786 += 1 };
  s1 -> s4 [0, 65535] { R2878 += 1, R2786 += 1, R2747 += 1, R2749 += 1, R2750 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R2878 += 1 };
  s2 -> s2 [0, 65535] { R2878 += 1, R2786 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R2878 += 1, R2786 += 1, R2747 += 1, R2748 += 1, R2749 += 1 };
  s3 -> s2 [0, 65535] { R2878 += 1, R2786 += 1 };
  s3 -> s3 [0, 65535] { R2878 += 1, R2785 += 1, R2786 += 1 };
  s3 -> s4 [0, 65535] { R2878 += 1, R2786 += 1, R2747 += 1, R2749 += 1, R2750 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R2878 += 1, R2786 += 1, R2747 += 1 };
  s4 -> s7 [0, 65535] { R2878 += 1 };
  s4 -> s2 [0, 65535] { R2878 += 1, R2786 += 1 };
  s4 -> s4 [0, 65535] { R2878 += 1, R2786 += 1, R2747 += 1, R2749 += 1, R2750 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2878 += 1, R2786 += 1, R2747 += 1 };
  s6 -> s7 [0, 65535] { R2878 += 1 };
  s6 -> s2 [0, 65535] { R2878 += 1, R2786 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R2878 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 74] { R2880 += 1, R2788 += 1, R2756 += 1, R2758 += 1 };
  s0 -> s2 [0, 65535] { R2880 += 1, R2787 += 1, R2788 += 1 };
  s0 -> s0 [0, 65535] { R2879 += 1, R2880 += 1 };
  s0 -> s3 [0, 65535] { R2880 += 1, R2788 += 1 };
  s0 -> s1 [0, 65535] { R2880 += 1, R2788 += 1, R2756 += 1 };
  s0 -> s4 [75, 75] { R2880 += 1, R2788 += 1, R2756 += 1, R2758 += 1 };
  s0 -> s5 [75, 75] { R2880 += 1, R2788 += 1, R2756 += 1, R2758 += 1 };
  s0 -> s1 [82, 65535] { R2880 += 1, R2788 += 1, R2756 += 1, R2758 += 1 };
  s1 -> s1 [0, 74] { R2880 += 1, R2788 += 1, R2756 += 1, R2758 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [0, 65535] { R2880 += 1, R2788 += 1 };
  s1 -> s7 [0, 65535] { R2880 += 1 };
  s1 -> s1 [0, 65535] { R2880 += 1, R2788 += 1, R2756 += 1 };
  s1 -> s4 [75, 75] { R2880 += 1, R2788 += 1, R2756 += 1, R2758 += 1 };
  s1 -> s5 [75, 75] { R2880 += 1, R2788 += 1, R2756 += 1, R2758 += 1 };
  s1 -> s1 [82, 65535] { R2880 += 1, R2788 += 1, R2756 += 1, R2758 += 1 };
  s2 -> s1 [0, 74] { R2880 += 1, R2788 += 1, R2756 += 1, R2758 += 1 };
  s2 -> s2 [0, 65535] { R2880 += 1, R2787 += 1, R2788 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R2880 += 1, R2788 += 1 };
  s2 -> s1 [0, 65535] { R2880 += 1, R2788 += 1, R2756 += 1 };
  s2 -> s4 [75, 75] { R2880 += 1, R2788 += 1, R2756 += 1, R2758 += 1 };
  s2 -> s5 [75, 75] { R2880 += 1, R2788 += 1, R2756 += 1, R2758 += 1 };
  s2 -> s1 [82, 65535] { R2880 += 1, R2788 += 1, R2756 += 1, R2758 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R2880 += 1, R2788 += 1 };
  s3 -> s7 [0, 65535] { R2880 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2880 += 1, R2788 += 1, R2756 += 1 };
  s4 -> s3 [0, 65535] { R2880 += 1, R2788 += 1 };
  s4 -> s7 [0, 65535] { R2880 += 1 };
  s5 -> s5 [0, 75] { R2880 += 1, R2788 += 1, R2756 += 1, R2758 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s3 [0, 65535] { R2880 += 1, R2788 += 1 };
  s5 -> s7 [0, 65535] { R2880 += 1 };
  s5 -> s5 [0, 65535] { R2880 += 1, R2788 += 1, R2756 += 1 };
  s5 -> s5 [82, 65535] { R2880 += 1, R2788 += 1, R2756 += 1, R2758 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2880 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65535] { R2882 += 1, R2817 += 1, R2818 += 1 };
  s0 -> s0 [0, 65535] { R2881 += 1, R2882 += 1 };
  s0 -> s2 [0, 65535] { R2882 += 1, R2818 += 1, R23 += 1 };
  s1 -> s1 [0, 65535] { R2882 += 1, R2817 += 1, R2818 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R2882 += 1, R2818 += 1, R23 += 1 };
  s2 -> s3 [0, 65535] { R2882 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2882 += 1, R2818 += 1, R23 += 1 };
  s3 -> s3 [0, 65535] { R2882 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R2884 += 1, R2820 += 1 };
  s0 -> s2 [0, 65535] { R2884 += 1, R2819 += 1, R2820 += 1 };
  s0 -> s0 [0, 65535] { R2883 += 1, R2884 += 1 };
  s0 -> s3 [70, 70] { R2884 += 1, R2820 += 1 };
  s0 -> s4 [70, 70] { R2884 += 1, R2820 += 1 };
  s0 -> s5 [75, 75] { R2884 += 1, R2820 += 1 };
  s0 -> s1 [76, 65535] { R2884 += 1, R2820 += 1 };
  s1 -> s1 [0, 69] { R2884 += 1, R2820 += 1 };
  s1 -> s3 [70, 70] { R2884 += 1, R2820 += 1 };
  s1 -> s4 [70, 70] { R2884 += 1, R2820 += 1 };
  s1 -> s5 [75, 75] { R2884 += 1, R2820 += 1 };
  s1 -> s1 [76, 65535] { R2884 += 1, R2820 += 1 };
  s2 -> s1 [0, 69] { R2884 += 1, R2820 += 1 };
  s2 -> s2 [0, 65535] { R2884 += 1, R2819 += 1, R2820 += 1 };
  s2 -> s3 [70, 70] { R2884 += 1, R2820 += 1 };
  s2 -> s4 [70, 70] { R2884 += 1, R2820 += 1 };
  s2 -> s5 [75, 75] { R2884 += 1, R2820 += 1 };
  s2 -> s1 [76, 65535] { R2884 += 1, R2820 += 1 };
  s4 -> s4 [0, 70] { R2884 += 1, R2820 += 1 };
  s4 -> s7 [75, 75] { R2884 += 1, R2820 += 1 };
  s4 -> s4 [76, 65535] { R2884 += 1, R2820 += 1 };
  s5 -> s5 [0, 69] { R2884 += 1, R2820 += 1 };
  s5 -> s5 [0, 65535] { R2884 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R2884 += 1, R2820 += 1 };
  s5 -> s8 [70, 70] { R2884 += 1, R2820 += 1 };
  s5 -> s5 [75, 65535] { R2884 += 1, R2820 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R2884 += 1, R2820 += 1 };
  s7 -> s7 [0, 65535] { R2884 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R2884 += 1, R2820 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R2884 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R2886 += 1, R2822 += 1, R137 += 1 };
  s0 -> s2 [0, 65535] { R2886 += 1, R2821 += 1, R2822 += 1 };
  s0 -> s0 [0, 65535] { R2885 += 1, R2886 += 1 };
  s0 -> s3 [70, 70] { R2886 += 1, R2822 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R2886 += 1, R2822 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R2886 += 1, R2822 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R2886 += 1, R2822 += 1, R137 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2886 += 1 };
  s1 -> s3 [70, 70] { R2886 += 1, R2822 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R2886 += 1, R2822 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R2886 += 1, R2822 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R2886 += 1, R2822 += 1, R137 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2886 += 1, R2821 += 1, R2822 += 1 };
  s2 -> s3 [70, 70] { R2886 += 1, R2822 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R2886 += 1, R2822 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R2886 += 1, R2822 += 1, R137 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2886 += 1, R2822 += 1, R137 += 1 };
  s3 -> s6 [0, 65535] { R2886 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2886 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2886 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R2888 += 1, R2824 += 1, R139 += 1 };
  s0 -> s2 [0, 65535] { R2888 += 1, R2823 += 1, R2824 += 1 };
  s0 -> s0 [0, 65535] { R2887 += 1, R2888 += 1 };
  s0 -> s3 [70, 70] { R2888 += 1, R2824 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R2888 += 1, R2824 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R2888 += 1, R2824 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R2888 += 1, R2824 += 1, R139 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2888 += 1 };
  s1 -> s3 [70, 70] { R2888 += 1, R2824 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R2888 += 1, R2824 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R2888 += 1, R2824 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R2888 += 1, R2824 += 1, R139 += 1 };
  s2 -> s2 [0, 65535] { R2888 += 1, R2823 += 1, R2824 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R2888 += 1, R2824 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R2888 += 1, R2824 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R2888 += 1, R2824 += 1, R139 += 1 };
  s3 -> s6 [0, 65535] { R2888 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2888 += 1, R2824 += 1, R139 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2888 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2888 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R2890 += 1, R2826 += 1, R141 += 1, R142 += 1 };
  s0 -> s0 [0, 65535] { R2889 += 1, R2890 += 1 };
  s0 -> s2 [0, 65535] { R2890 += 1, R2825 += 1, R2826 += 1 };
  s0 -> s3 [70, 70] { R2890 += 1, R2826 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R2890 += 1, R2826 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R2890 += 1, R2826 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R2890 += 1, R2826 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 65535] { R2890 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R2890 += 1, R2826 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R2890 += 1, R2826 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R2890 += 1, R2826 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R2890 += 1, R2826 += 1, R141 += 1, R142 += 1 };
  s2 -> s2 [0, 65535] { R2890 += 1, R2825 += 1, R2826 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R2890 += 1, R2826 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R2890 += 1, R2826 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R2890 += 1, R2826 += 1, R141 += 1, R142 += 1 };
  s3 -> s3 [0, 65535] { R2890 += 1, R2826 += 1, R141 += 1, R142 += 1 };
  s3 -> s6 [0, 65535] { R2890 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2890 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2890 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R2892 += 1, R2828 += 1, R147 += 1, R148 += 1 };
  s0 -> s2 [0, 65535] { R2892 += 1, R2827 += 1, R2828 += 1 };
  s0 -> s0 [0, 65535] { R2891 += 1, R2892 += 1 };
  s0 -> s3 [70, 70] { R2892 += 1, R2828 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R2892 += 1, R2828 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R2892 += 1, R2828 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R2892 += 1, R2828 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 65535] { R2892 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R2892 += 1, R2828 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R2892 += 1, R2828 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R2892 += 1, R2828 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R2892 += 1, R2828 += 1, R147 += 1, R148 += 1 };
  s2 -> s2 [0, 65535] { R2892 += 1, R2827 += 1, R2828 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R2892 += 1, R2828 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R2892 += 1, R2828 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R2892 += 1, R2828 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R2892 += 1, R2828 += 1, R147 += 1, R148 += 1 };
  s3 -> s6 [0, 65535] { R2892 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2892 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2892 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R2894 += 1, R2830 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R2894 += 1, R2830 += 1, R151 += 1, R152 += 1 };
  s0 -> s0 [0, 65535] { R2893 += 1, R2894 += 1 };
  s0 -> s3 [0, 65535] { R2894 += 1, R2829 += 1, R2830 += 1 };
  s0 -> s4 [70, 70] { R2894 += 1, R2830 += 1, R151 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R2894 += 1, R2830 += 1, R151 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R2894 += 1, R2830 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R2894 += 1, R2830 += 1, R152 += 1 };
  s0 -> s1 [71, 74] { R2894 += 1, R2830 += 1, R152 += 1 };
  s0 -> s2 [71, 65535] { R2894 += 1, R2830 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R2894 += 1, R2830 += 1, R152 += 1 };
  s0 -> s1 [76, 65535] { R2894 += 1, R2830 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R2894 += 1, R2830 += 1, R152 += 1 };
  s1 -> s6 [70, 70] { R2894 += 1, R2830 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R2894 += 1, R2830 += 1, R152 += 1 };
  s1 -> s1 [71, 74] { R2894 += 1, R2830 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R2894 += 1, R2830 += 1, R152 += 1 };
  s1 -> s1 [76, 65535] { R2894 += 1, R2830 += 1, R152 += 1 };
  s2 -> s1 [0, 69] { R2894 += 1, R2830 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R2894 += 1, R2830 += 1, R151 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R2894 += 1, R2830 += 1, R151 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R2894 += 1, R2830 += 1, R151 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R2894 += 1, R2830 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R2894 += 1, R2830 += 1, R152 += 1 };
  s2 -> s1 [71, 74] { R2894 += 1, R2830 += 1, R152 += 1 };
  s2 -> s2 [71, 65535] { R2894 += 1, R2830 += 1, R151 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R2894 += 1, R2830 += 1, R152 += 1 };
  s2 -> s1 [76, 65535] { R2894 += 1, R2830 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R2894 += 1, R2830 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R2894 += 1, R2830 += 1, R151 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R2894 += 1, R2829 += 1, R2830 += 1 };
  s3 -> s4 [70, 70] { R2894 += 1, R2830 += 1, R151 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R2894 += 1, R2830 += 1, R151 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R2894 += 1, R2830 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R2894 += 1, R2830 += 1, R152 += 1 };
  s3 -> s1 [71, 74] { R2894 += 1, R2830 += 1, R152 += 1 };
  s3 -> s2 [71, 65535] { R2894 += 1, R2830 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R2894 += 1, R2830 += 1, R152 += 1 };
  s3 -> s1 [76, 65535] { R2894 += 1, R2830 += 1, R152 += 1 };
  s4 -> s6 [0, 74] { R2894 += 1, R2830 += 1, R152 += 1 };
  s4 -> s4 [0, 65535] { R2894 += 1, R2830 += 1, R151 += 1, R152 += 1 };
  s4 -> s11 [75, 75] { R2894 += 1, R2830 += 1, R152 += 1 };
  s4 -> s6 [76, 65535] { R2894 += 1, R2830 += 1, R152 += 1 };
  s6 -> s6 [0, 74] { R2894 += 1, R2830 += 1, R152 += 1 };
  s6 -> s11 [75, 75] { R2894 += 1, R2830 += 1, R152 += 1 };
  s6 -> s6 [76, 65535] { R2894 += 1, R2830 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R2894 += 1, R2830 += 1, R152 += 1 };
  s8 -> s8 [0, 65535] { R2894 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R2894 += 1, R2830 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R2894 += 1, R2830 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R2894 += 1, R2830 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R2894 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R2894 += 1, R2830 += 1, R152 += 1 };
  s11 -> s12 [0, 65535] { R2894 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R2894 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R2896 += 1, R2832 += 1, R155 += 1, R156 += 1 };
  s0 -> s2 [0, 65535] { R2896 += 1, R2831 += 1, R2832 += 1 };
  s0 -> s0 [0, 65535] { R2895 += 1, R2896 += 1 };
  s0 -> s3 [70, 70] { R2896 += 1, R2832 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R2896 += 1, R2832 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R2896 += 1, R2832 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R2896 += 1, R2832 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 65535] { R2896 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R2896 += 1, R2832 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R2896 += 1, R2832 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R2896 += 1, R2832 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R2896 += 1, R2832 += 1, R155 += 1, R156 += 1 };
  s2 -> s2 [0, 65535] { R2896 += 1, R2831 += 1, R2832 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R2896 += 1, R2832 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R2896 += 1, R2832 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R2896 += 1, R2832 += 1, R155 += 1, R156 += 1 };
  s3 -> s3 [0, 65535] { R2896 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R2896 += 1 };
  s4 -> s4 [0, 65535] { R2896 += 1, R2832 += 1, R155 += 1, R156 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R2896 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R2898 += 1, R2834 += 1, R161 += 1, R162 += 1 };
  s0 -> s0 [0, 65535] { R2897 += 1, R2898 += 1 };
  s0 -> s2 [0, 65535] { R2898 += 1, R2833 += 1, R2834 += 1 };
  s0 -> s3 [70, 70] { R2898 += 1, R2834 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R2898 += 1, R2834 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R2898 += 1, R2834 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R2898 += 1, R2834 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535] { R2898 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R2898 += 1, R2834 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R2898 += 1, R2834 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R2898 += 1, R2834 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R2898 += 1, R2834 += 1, R161 += 1, R162 += 1 };
  s2 -> s2 [0, 65535] { R2898 += 1, R2833 += 1, R2834 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R2898 += 1, R2834 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R2898 += 1, R2834 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R2898 += 1, R2834 += 1, R161 += 1, R162 += 1 };
  s3 -> s3 [0, 65535] { R2898 += 1, R2834 += 1, R161 += 1, R162 += 1 };
  s3 -> s6 [0, 65535] { R2898 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2898 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2898 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R2900 += 1, R2836 += 1, R167 += 1, R168 += 1 };
  s0 -> s2 [0, 65535] { R2900 += 1, R2835 += 1, R2836 += 1 };
  s0 -> s0 [0, 65535] { R2899 += 1, R2900 += 1 };
  s0 -> s3 [70, 70] { R2900 += 1, R2836 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R2900 += 1, R2836 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R2900 += 1, R2836 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R2900 += 1, R2836 += 1, R167 += 1, R168 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2900 += 1 };
  s1 -> s3 [70, 70] { R2900 += 1, R2836 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R2900 += 1, R2836 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R2900 += 1, R2836 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R2900 += 1, R2836 += 1, R167 += 1, R168 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2900 += 1, R2835 += 1, R2836 += 1 };
  s2 -> s3 [70, 70] { R2900 += 1, R2836 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R2900 += 1, R2836 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R2900 += 1, R2836 += 1, R167 += 1, R168 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2900 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2900 += 1, R2836 += 1, R167 += 1, R168 += 1 };
  s4 -> s6 [0, 65535] { R2900 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2900 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R2902 += 1, R2838 += 1, R175 += 1, R176 += 1 };
  s0 -> s2 [0, 69] { R2902 += 1, R2838 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s3 [0, 69] { R2902 += 1, R2838 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s0 [0, 65535] { R2901 += 1, R2902 += 1 };
  s0 -> s4 [0, 65535] { R2902 += 1, R2837 += 1, R2838 += 1 };
  s0 -> s5 [70, 70] { R2902 += 1, R2838 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s6 [70, 70] { R2902 += 1, R2838 += 1, R175 += 1, R176 += 1 };
  s0 -> s7 [70, 70] { R2902 += 1, R2838 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s8 [70, 70] { R2902 += 1, R2838 += 1, R175 += 1, R176 += 1 };
  s0 -> s9 [70, 70] { R2902 += 1, R2838 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s10 [70, 70] { R2902 += 1, R2838 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s1 [71, 65535] { R2902 += 1, R2838 += 1, R175 += 1, R176 += 1 };
  s0 -> s2 [71, 65535] { R2902 += 1, R2838 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s3 [71, 65535] { R2902 += 1, R2838 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s1 [0, 69] { R2902 += 1, R2838 += 1, R175 += 1, R176 += 1 };
  s1 -> s2 [0, 69] { R2902 += 1, R2838 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s3 [0, 69] { R2902 += 1, R2838 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s5 [70, 70] { R2902 += 1, R2838 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s6 [70, 70] { R2902 += 1, R2838 += 1, R175 += 1, R176 += 1 };
  s1 -> s7 [70, 70] { R2902 += 1, R2838 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s8 [70, 70] { R2902 += 1, R2838 += 1, R175 += 1, R176 += 1 };
  s1 -> s9 [70, 70] { R2902 += 1, R2838 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s10 [70, 70] { R2902 += 1, R2838 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s1 [71, 65535] { R2902 += 1, R2838 += 1, R175 += 1, R176 += 1 };
  s1 -> s2 [71, 65535] { R2902 += 1, R2838 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s3 [71, 65535] { R2902 += 1, R2838 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [0, 69] { R2902 += 1, R2838 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s3 [0, 69] { R2902 += 1, R2838 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s5 [70, 70] { R2902 += 1, R2838 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s7 [70, 70] { R2902 += 1, R2838 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s9 [70, 70] { R2902 += 1, R2838 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s10 [70, 70] { R2902 += 1, R2838 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [71, 65535] { R2902 += 1, R2838 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s3 [71, 65535] { R2902 += 1, R2838 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [0, 69] { R2902 += 1, R2838 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s11 [0, 65535];
  s3 -> s3 [0, 65535] { R2902 += 1 };
  s3 -> s7 [70, 70] { R2902 += 1, R2838 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s10 [70, 70] { R2902 += 1, R2838 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [71, 65535] { R2902 += 1, R2838 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s1 [0, 69] { R2902 += 1, R2838 += 1, R175 += 1, R176 += 1 };
  s4 -> s2 [0, 69] { R2902 += 1, R2838 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s3 [0, 69] { R2902 += 1, R2838 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s4 [0, 65535] { R2902 += 1, R2837 += 1, R2838 += 1 };
  s4 -> s5 [70, 70] { R2902 += 1, R2838 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s6 [70, 70] { R2902 += 1, R2838 += 1, R175 += 1, R176 += 1 };
  s4 -> s7 [70, 70] { R2902 += 1, R2838 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s8 [70, 70] { R2902 += 1, R2838 += 1, R175 += 1, R176 += 1 };
  s4 -> s9 [70, 70] { R2902 += 1, R2838 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s10 [70, 70] { R2902 += 1, R2838 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s1 [71, 65535] { R2902 += 1, R2838 += 1, R175 += 1, R176 += 1 };
  s4 -> s2 [71, 65535] { R2902 += 1, R2838 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s3 [71, 65535] { R2902 += 1, R2838 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s6 -> s6 [0, 65535] { R2902 += 1, R2838 += 1, R175 += 1, R176 += 1 };
  s6 -> s7 [0, 65535] { R2902 += 1, R2838 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s6 -> s9 [0, 65535] { R2902 += 1, R2838 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s7 -> s12 [0, 65535] { R2902 += 1 };
  s7 -> s7 [0, 65535] { R2902 += 1, R2838 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s7 -> s11 [0, 65535];
  s9 -> s7 [0, 65535] { R2902 += 1, R2838 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s9 -> s9 [0, 65535] { R2902 += 1, R2838 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s10 -> s11 [0, 65535];
  s10 -> s10 [0, 65535] { R2902 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R2902 += 1 };
  s12 -> s11 [0, 65535];
  accepting s3, s12, s7, s10, s11;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R2904 += 1, R2840 += 1, R185 += 1, R186 += 1 };
  s0 -> s2 [0, 65535] { R2904 += 1, R2839 += 1, R2840 += 1 };
  s0 -> s0 [0, 65535] { R2903 += 1, R2904 += 1 };
  s0 -> s3 [70, 70] { R2904 += 1, R2840 += 1, R185 += 1, R186 += 1 };
  s0 -> s4 [70, 70] { R2904 += 1, R2840 += 1, R185 += 1, R186 += 1 };
  s0 -> s1 [71, 65535] { R2904 += 1, R2840 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 69] { R2904 += 1, R2840 += 1, R185 += 1, R186 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2904 += 1 };
  s1 -> s3 [70, 70] { R2904 += 1, R2840 += 1, R185 += 1, R186 += 1 };
  s1 -> s4 [70, 70] { R2904 += 1, R2840 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [71, 65535] { R2904 += 1, R2840 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [0, 69] { R2904 += 1, R2840 += 1, R185 += 1, R186 += 1 };
  s2 -> s2 [0, 65535] { R2904 += 1, R2839 += 1, R2840 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R2904 += 1, R2840 += 1, R185 += 1, R186 += 1 };
  s2 -> s4 [70, 70] { R2904 += 1, R2840 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [71, 65535] { R2904 += 1, R2840 += 1, R185 += 1, R186 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2904 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R2904 += 1 };
  s4 -> s4 [0, 65535] { R2904 += 1, R2840 += 1, R185 += 1, R186 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2904 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R2906 += 1, R2842 += 1, R2741 += 1, R2742 += 1 };
  s0 -> s2 [0, 69] { R2906 += 1, R2842 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s0 -> s3 [0, 65535] { R2906 += 1, R2841 += 1, R2842 += 1 };
  s0 -> s0 [0, 65535] { R2905 += 1, R2906 += 1 };
  s0 -> s4 [70, 70] { R2906 += 1, R2842 += 1, R2741 += 1, R2742 += 1 };
  s0 -> s5 [70, 70] { R2906 += 1, R2842 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s0 -> s6 [70, 70] { R2906 += 1, R2842 += 1, R2741 += 1, R2742 += 1 };
  s0 -> s7 [70, 70] { R2906 += 1, R2842 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s0 -> s1 [71, 65535] { R2906 += 1, R2842 += 1, R2741 += 1, R2742 += 1 };
  s0 -> s2 [71, 65535] { R2906 += 1, R2842 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s1 -> s1 [0, 69] { R2906 += 1, R2842 += 1, R2741 += 1, R2742 += 1 };
  s1 -> s2 [0, 69] { R2906 += 1, R2842 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s1 -> s4 [70, 70] { R2906 += 1, R2842 += 1, R2741 += 1, R2742 += 1 };
  s1 -> s5 [70, 70] { R2906 += 1, R2842 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s1 -> s6 [70, 70] { R2906 += 1, R2842 += 1, R2741 += 1, R2742 += 1 };
  s1 -> s7 [70, 70] { R2906 += 1, R2842 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s1 -> s1 [71, 65535] { R2906 += 1, R2842 += 1, R2741 += 1, R2742 += 1 };
  s1 -> s2 [71, 65535] { R2906 += 1, R2842 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s2 -> s2 [0, 69] { R2906 += 1, R2842 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s2 -> s2 [0, 65535] { R2906 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s5 [70, 70] { R2906 += 1, R2842 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s2 -> s7 [70, 70] { R2906 += 1, R2842 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s2 -> s2 [71, 65535] { R2906 += 1, R2842 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s3 -> s1 [0, 69] { R2906 += 1, R2842 += 1, R2741 += 1, R2742 += 1 };
  s3 -> s2 [0, 69] { R2906 += 1, R2842 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s3 -> s3 [0, 65535] { R2906 += 1, R2841 += 1, R2842 += 1 };
  s3 -> s4 [70, 70] { R2906 += 1, R2842 += 1, R2741 += 1, R2742 += 1 };
  s3 -> s5 [70, 70] { R2906 += 1, R2842 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s3 -> s6 [70, 70] { R2906 += 1, R2842 += 1, R2741 += 1, R2742 += 1 };
  s3 -> s7 [70, 70] { R2906 += 1, R2842 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s3 -> s1 [71, 65535] { R2906 += 1, R2842 += 1, R2741 += 1, R2742 += 1 };
  s3 -> s2 [71, 65535] { R2906 += 1, R2842 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s5 -> s5 [0, 65535] { R2906 += 1, R2842 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s9 [0, 65535] { R2906 += 1 };
  s6 -> s5 [0, 65535] { R2906 += 1, R2842 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s6 -> s6 [0, 65535] { R2906 += 1, R2842 += 1, R2741 += 1, R2742 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R2906 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R2906 += 1 };
  accepting s8, s5, s2, s9, s7;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R2908 += 1, R2844 += 1, R2752 += 1, R2753 += 1, R2754 += 1 };
  s0 -> s2 [0, 69] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s0 -> s3 [0, 69] { R2908 += 1, R2844 += 1, R2751 += 1, R2752 += 1 };
  s0 -> s4 [0, 65535] { R2908 += 1, R2843 += 1, R2844 += 1 };
  s0 -> s0 [0, 65535] { R2907 += 1, R2908 += 1 };
  s0 -> s5 [70, 70] { R2908 += 1, R2844 += 1, R2752 += 1, R2753 += 1, R2754 += 1 };
  s0 -> s6 [70, 70] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s0 -> s7 [70, 70] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s0 -> s8 [70, 70] { R2908 += 1, R2844 += 1, R2751 += 1, R2752 += 1 };
  s0 -> s9 [70, 70] { R2908 += 1, R2844 += 1, R2751 += 1, R2752 += 1 };
  s0 -> s10 [70, 70] { R2908 += 1, R2844 += 1, R2752 += 1, R2753 += 1, R2754 += 1 };
  s0 -> s2 [71, 74] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s0 -> s1 [71, 65535] { R2908 += 1, R2844 += 1, R2752 += 1, R2753 += 1, R2754 += 1 };
  s0 -> s3 [71, 65535] { R2908 += 1, R2844 += 1, R2751 += 1, R2752 += 1 };
  s0 -> s11 [82, 82] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s0 -> s2 [83, 65535] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s1 -> s1 [0, 69] { R2908 += 1, R2844 += 1, R2752 += 1, R2753 += 1, R2754 += 1 };
  s1 -> s2 [0, 69] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s1 -> s5 [70, 70] { R2908 += 1, R2844 += 1, R2752 += 1, R2753 += 1, R2754 += 1 };
  s1 -> s6 [70, 70] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s1 -> s7 [70, 70] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s1 -> s10 [70, 70] { R2908 += 1, R2844 += 1, R2752 += 1, R2753 += 1, R2754 += 1 };
  s1 -> s2 [71, 74] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s1 -> s1 [71, 65535] { R2908 += 1, R2844 += 1, R2752 += 1, R2753 += 1, R2754 += 1 };
  s1 -> s11 [82, 82] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s1 -> s2 [83, 65535] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s2 -> s2 [0, 69] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s2 -> s6 [70, 70] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s2 -> s7 [70, 70] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s2 -> s2 [71, 74] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s2 -> s11 [82, 82] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s2 -> s2 [83, 65535] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s3 -> s1 [0, 69] { R2908 += 1, R2844 += 1, R2752 += 1, R2753 += 1, R2754 += 1 };
  s3 -> s2 [0, 69] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s3 -> s3 [0, 69] { R2908 += 1, R2844 += 1, R2751 += 1, R2752 += 1 };
  s3 -> s5 [70, 70] { R2908 += 1, R2844 += 1, R2752 += 1, R2753 += 1, R2754 += 1 };
  s3 -> s6 [70, 70] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s3 -> s7 [70, 70] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s3 -> s8 [70, 70] { R2908 += 1, R2844 += 1, R2751 += 1, R2752 += 1 };
  s3 -> s9 [70, 70] { R2908 += 1, R2844 += 1, R2751 += 1, R2752 += 1 };
  s3 -> s10 [70, 70] { R2908 += 1, R2844 += 1, R2752 += 1, R2753 += 1, R2754 += 1 };
  s3 -> s2 [71, 74] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s3 -> s1 [71, 65535] { R2908 += 1, R2844 += 1, R2752 += 1, R2753 += 1, R2754 += 1 };
  s3 -> s3 [71, 65535] { R2908 += 1, R2844 += 1, R2751 += 1, R2752 += 1 };
  s3 -> s11 [82, 82] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s3 -> s2 [83, 65535] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s4 -> s1 [0, 69] { R2908 += 1, R2844 += 1, R2752 += 1, R2753 += 1, R2754 += 1 };
  s4 -> s2 [0, 69] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s4 -> s3 [0, 69] { R2908 += 1, R2844 += 1, R2751 += 1, R2752 += 1 };
  s4 -> s4 [0, 65535] { R2908 += 1, R2843 += 1, R2844 += 1 };
  s4 -> s5 [70, 70] { R2908 += 1, R2844 += 1, R2752 += 1, R2753 += 1, R2754 += 1 };
  s4 -> s6 [70, 70] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s4 -> s7 [70, 70] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s4 -> s8 [70, 70] { R2908 += 1, R2844 += 1, R2751 += 1, R2752 += 1 };
  s4 -> s9 [70, 70] { R2908 += 1, R2844 += 1, R2751 += 1, R2752 += 1 };
  s4 -> s10 [70, 70] { R2908 += 1, R2844 += 1, R2752 += 1, R2753 += 1, R2754 += 1 };
  s4 -> s2 [71, 74] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s4 -> s1 [71, 65535] { R2908 += 1, R2844 += 1, R2752 += 1, R2753 += 1, R2754 += 1 };
  s4 -> s3 [71, 65535] { R2908 += 1, R2844 += 1, R2751 += 1, R2752 += 1 };
  s4 -> s11 [82, 82] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s4 -> s2 [83, 65535] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s5 -> s7 [0, 74] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s5 -> s5 [0, 65535] { R2908 += 1, R2844 += 1, R2752 += 1, R2753 += 1, R2754 += 1 };
  s5 -> s13 [82, 82] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s5 -> s7 [83, 65535] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s7 -> s7 [0, 74] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s7 -> s13 [82, 82] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s7 -> s7 [83, 65535] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s9 -> s7 [0, 74] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s9 -> s5 [0, 65535] { R2908 += 1, R2844 += 1, R2752 += 1, R2753 += 1, R2754 += 1 };
  s9 -> s9 [0, 65535] { R2908 += 1, R2844 += 1, R2751 += 1, R2752 += 1 };
  s9 -> s13 [82, 82] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s9 -> s7 [83, 65535] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s11 -> s11 [0, 69] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s11 [0, 65535] { R2908 += 1 };
  s11 -> s13 [70, 70] { R2908 += 1, R2844 += 1, R2752 += 1 };
  s11 -> s14 [70, 70] { R2908 += 1, R2844 += 1, R2752 += 1 };
  s11 -> s11 [71, 74] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s11 -> s11 [71, 65535] { R2908 += 1, R2844 += 1, R2752 += 1 };
  s11 -> s11 [82, 65535] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s13 [0, 74] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s13 -> s13 [0, 65535] { R2908 += 1, R2844 += 1, R2752 += 1 };
  s13 -> s12 [0, 65535];
  s13 -> s15 [0, 65535] { R2908 += 1 };
  s13 -> s13 [82, 65535] { R2908 += 1, R2844 += 1, R2752 += 1, R2754 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R2908 += 1 };
  s15 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R2908 += 1 };
  accepting s12, s13, s14, s15, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
constraint R3 = R2908 && R25 - R2908 = -1 && R26 = R2908 && R27 - R2908 = -1 && R28 = R2908 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R2756 + -1*R2752 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R2756 + -1*R2752 - R130 = 0 && R129 + R2755 + R2751 = 0 && R131 + R2757 + R2753 = 0 && R132 + R2758 + R2754 = 0 && R2819 = 0 && R2820 = 0 && R2829 = 0 && R2830 = 0 && R2837 = 0 && R2838 = 0 && R2841 = 0 && R2842 = 0 && R2843 = 0 && R2844 = 0 && R2845 = 0 && R2846 = R2908 && R2847 = 0 && R2848 = R2908 && R2849 = 0 && R2850 = R2908 && R2851 = 0 && R2852 = R2908 && R2853 = 0 && R2854 = R2908 && R2855 = 0 && R2856 = R2908 && R2857 = 0 && R2858 = R2908 && R2859 = 0 && R2860 = R2908 && R2861 = 0 && R2862 = R2908 && R2863 = 0 && R2864 = R2908 && R2865 = 0 && R2866 = R2908 && R2867 = 0 && R2868 = R2908 && R2869 = 0 && R2870 = R2908 && R2871 = 0 && R2872 = R2908 && R2873 = 0 && R2874 = R2908 && R2875 = 0 && R2876 = R2908 && R2877 = 0 && R2878 = R2908 && R2879 = 0 && R2880 = R2908 && R2881 = 0 && R2882 = R2908 && R2883 = 0 && R2884 = R2908 && R2885 = 0 && R2886 = R2908 && R2887 = 0 && R2888 = R2908 && R2889 = 0 && R2890 = R2908 && R2891 = 0 && R2892 = R2908 && R2893 = 0 && R2894 = R2908 && R2895 = 0 && R2896 = R2908 && R2897 = 0 && R2898 = R2908 && R2899 = 0 && R2900 = R2908 && R2901 = 0 && R2902 = R2908 && R2903 = 0 && R2904 = R2908 && R2905 = 0 && R2906 = R2908 && R2907 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R2756 + -1*R2752 - R130 < 1 && 0 < R2908 && (R2 != 0 || R22 = 0 || (R2759 = 0 && R2760 = 0)) && (R2 != 0 || R22 = 0 || (R2761 = 0 && R2762 = 0)) && (R2 != 0 || R22 = 0 || (R2763 = 0 && R2764 = 0)) && (R2 != 0 || R22 = 0 || (R2765 = 0 && R2766 = 0)) && (R2 != 0 || R22 = 0 || (R2767 = 0 && R2768 = 0)) && (R2 != 0 || R22 = 0 || (R2769 = 0 && R2770 = 0)) && (R2 != 0 || R22 = 0 || (R2771 = 0 && R2772 = 0)) && (R2 != 0 || R22 = 0 || (R2773 = 0 && R2774 = 0)) && (R2 != 0 || R22 = 0 || (R2775 = 0 && R2776 = 0)) && (R2 != 0 || R22 = 0 || (R2777 = 0 && R2778 = 0)) && (R2 != 0 || R22 = 0 || (R2779 = 0 && R2780 = 0)) && (R2 != 0 || R22 = 0 || (R2781 = 0 && R2782 = 0)) && (R2 != 0 || R22 = 0 || (R2783 = 0 && R2784 = 0)) && (R2 != 0 || R22 = 0 || (R2785 = 0 && R2786 = 0)) && (R2 != 0 || R22 = 0 || (R2787 = 0 && R2788 = 0)) && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R2756 + -1*R2752 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R191 + R187 = 0 && R114 + R192 + R188 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R2756 + -1*R2752 - R130 = 0 || R130 + R2756 + R2752 < 1) && (R81 + R158 + R155 = 0 || R130 + R2756 + R2752 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R2756 + -1*R2752 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R2756 + R2752 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R2756 + -1*R2752 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R2756 + R2752 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R2756 + -1*R2752 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R2756 + R2752 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 != 0 || R112 + R190 + R186 + -1*R2756 + -1*R2752 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R2756 + R2752 = 0)) && (R113 + R191 + R187 != 0 || R83 + R160 + R157 + -1*R192 + -1*R188 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R2746 + R2741 != 0 || R120 + R2747 + R2742 + -1*R2756 + -1*R2752 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R2756 + R2752 = 0)) && (R2759 != 0 || R2 = R2760 || R2 < 1) && (R2761 != 0 || R2 = R2762 || R2 < 1) && (R2763 != 0 || R2 = R2764 || R2 < 1) && (R2765 != 0 || R2 = R2766 || R2 < 1) && (R2767 != 0 || R2 = R2768 || R2 < 1) && (R2769 != 0 || R2 = R2770 || R2 < 1) && (R2771 != 0 || R2 = R2772 || R2 < 1) && (R2773 != 0 || R2 = R2774 || R2 < 1) && (R2775 != 0 || R2 = R2776 || R2 < 1) && (R2777 != 0 || R2 = R2778 || R2 < 1) && (R2779 != 0 || R2 = R2780 || R2 < 1) && (R2781 != 0 || R2 = R2782 || R2 < 1) && (R2783 != 0 || R2 = R2784 || R2 < 1) && (R2785 != 0 || R2 = R2786 || R2 < 1) && (R2787 != 0 || R2 = R2788 || R2 < 1) && (R23 = 0 || (R2817 = 0 && R2818 = 0)) && (R23 = 0 || (R2821 = 0 && R2822 = 0)) && (R23 = 0 || (R2823 = 0 && R2824 = 0)) && (R23 = 0 || (R2825 = 0 && R2826 = 0)) && (R23 = 0 || (R2827 = 0 && R2828 = 0)) && (R23 = 0 || (R2831 = 0 && R2832 = 0)) && (R23 = 0 || (R2833 = 0 && R2834 = 0)) && (R23 = 0 || (R2835 = 0 && R2836 = 0)) && (R23 = 0 || (R2839 = 0 && R2840 = 0)) && (R24 = 0 || (R2789 = 0 && R2790 = 0)) && (R24 = 0 || (R2791 = 0 && R2792 = 0)) && (R24 = 0 || (R2793 = 0 && R2794 = 0)) && (R24 = 0 || (R2795 = 0 && R2796 = 0)) && (R24 = 0 || (R2797 = 0 && R2798 = 0)) && (R24 = 0 || (R2799 = 0 && R2800 = 0)) && (R24 = 0 || (R2801 = 0 && R2802 = 0)) && (R24 = 0 || (R2803 = 0 && R2804 = 0)) && (R24 = 0 || (R2805 = 0 && R2806 = 0)) && (R24 = 0 || (R2807 = 0 && R2808 = 0)) && (R24 = 0 || (R2809 = 0 && R2810 = 0)) && (R24 = 0 || (R2811 = 0 && R2812 = 0)) && (R24 = 0 || (R2813 = 0 && R2814 = 0)) && (R24 = 0 || (R2815 = 0 && R2816 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R2756 + R2752 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R2756 + R2752 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R2756 + R2752 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 = 0 || (R83 + R160 + R157 = 0 && R130 + R2756 + R2752 = 0)) && (R113 + R191 + R187 = 0 || R83 + R160 + R157 < 1) && (R119 + R2746 + R2741 = 0 || (R83 + R160 + R157 = 0 && R130 + R2756 + R2752 = 0)) && (R123 + R2750 + R2745 = 0 || (R121 + R2748 + R2743 = 0 && R122 + R2749 + R2744 = 0)) && (R2759 = 0 || R2 < 1) && (R2761 = 0 || R2 < 1) && (R2763 = 0 || R2 < 1) && (R2765 = 0 || R2 < 1) && (R2767 = 0 || R2 < 1) && (R2769 = 0 || R2 < 1) && (R2771 = 0 || R2 < 1) && (R2773 = 0 || R2 < 1) && (R2775 = 0 || R2 < 1) && (R2777 = 0 || R2 < 1) && (R2779 = 0 || R2 < 1) && (R2781 = 0 || R2 < 1) && (R2783 = 0 || R2 < 1) && (R2785 = 0 || R2 < 1) && (R2787 = 0 || R2 < 1);
// End of Parikh automata intersection problem
