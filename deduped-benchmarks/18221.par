// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R12, R1350, R1351, R1352, R1353, R17, R1776, R1777, R1778, R1779, R1780, R1781, R18, R1886, R1887, R1888, R1889, R1890, R1891, R1892, R1893, R1894, R1895, R1896, R1897, R1898, R1899, R19, R1900, R1901, R1902, R1903, R1904, R1905, R1906, R1907, R1908, R1909, R1910, R1911, R1912, R1913, R1914, R1915, R1916, R1917, R1918, R1919, R1920, R1921, R1922, R1923, R1924, R1925, R1926, R1927, R1928, R1929, R1930, R1931, R1932, R1933, R1934, R1935, R1936, R1937, R1938, R1939, R1940, R1941, R1942, R1943, R1944, R1945, R1946, R1947, R1948, R1949, R1950, R1951, R1952, R1953, R1954, R1955, R1956, R1957, R1958, R1959, R1960, R1961, R1962, R1963, R1964, R1965, R1966, R1967, R1968, R1969, R1970, R1971, R1972, R1973, R1974, R1975, R1976, R1977, R1978, R1979, R1980, R1981, R1982, R1983, R1984, R1985, R1986, R1987, R1988, R1989, R2, R20, R21, R22, R23, R24, R25, R26, R27, R3, R38, R4, R40, R42, R43, R46, R47, R48, R52, R53, R56, R57, R58, R62, R63, R66, R67, R68, R69, R70, R71, R72, R73, R74, R75, R76, R77, R78, R79, R8;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [73, 73];
  s0 -> s0 [74, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [73, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R2 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R11 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 72];
  s0 -> s0 [0, 65535] { R12 += 1 };
  s0 -> s2 [73, 73];
  s0 -> s1 [74, 65535];
  s1 -> s1 [0, 72];
  s1 -> s2 [73, 73];
  s1 -> s1 [74, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R21 += 1 };
  s0 -> s0 [0, 65535] { R20 += 1, R21 += 1 };
  s0 -> s2 [9, 13] { R21 += 1 };
  s0 -> s1 [14, 31] { R21 += 1 };
  s0 -> s2 [32, 32] { R21 += 1 };
  s0 -> s1 [33, 65535] { R21 += 1 };
  s1 -> s1 [0, 65535] { R21 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R21 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R22 += 1, R23 += 1 };
  s1 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R25 += 1 };
  s0 -> s0 [0, 65535] { R24 += 1, R25 += 1 };
  s0 -> s2 [9, 13] { R25 += 1 };
  s0 -> s1 [14, 31] { R25 += 1 };
  s0 -> s2 [32, 32] { R25 += 1 };
  s0 -> s1 [33, 65535] { R25 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R25 += 1 };
  s2 -> s1 [0, 65535] { R25 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R26 += 1, R27 += 1 };
  s0 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R1910 += 1, R1911 += 1 };
  s0 -> s1 [0, 65535] { R1911 += 1, R19 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R1911 += 1, R19 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 72] { R1913 += 1 };
  s0 -> s0 [0, 65535] { R1912 += 1, R1913 += 1 };
  s0 -> s2 [73, 73] { R1913 += 1 };
  s0 -> s3 [73, 73] { R1913 += 1 };
  s0 -> s1 [78, 65535] { R1913 += 1 };
  s1 -> s1 [0, 72] { R1913 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R1913 += 1 };
  s1 -> s3 [73, 73] { R1913 += 1 };
  s1 -> s1 [78, 65535] { R1913 += 1 };
  s2 -> s2 [0, 73] { R1913 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [78, 65535] { R1913 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 72] { R1915 += 1, R38 += 1 };
  s0 -> s0 [0, 65535] { R1914 += 1, R1915 += 1 };
  s0 -> s2 [73, 73] { R1915 += 1, R38 += 1 };
  s0 -> s3 [73, 73] { R1915 += 1, R38 += 1 };
  s0 -> s1 [74, 65535] { R1915 += 1, R38 += 1 };
  s1 -> s1 [0, 72] { R1915 += 1, R38 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R1915 += 1, R38 += 1 };
  s1 -> s3 [73, 73] { R1915 += 1, R38 += 1 };
  s1 -> s1 [74, 65535] { R1915 += 1, R38 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1915 += 1, R38 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 72] { R1917 += 1, R40 += 1 };
  s0 -> s0 [0, 65535] { R1916 += 1, R1917 += 1 };
  s0 -> s2 [73, 73] { R1917 += 1, R40 += 1 };
  s0 -> s3 [73, 73] { R1917 += 1, R40 += 1 };
  s0 -> s1 [74, 65535] { R1917 += 1, R40 += 1 };
  s1 -> s1 [0, 72] { R1917 += 1, R40 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R1917 += 1, R40 += 1 };
  s1 -> s3 [73, 73] { R1917 += 1, R40 += 1 };
  s1 -> s1 [74, 65535] { R1917 += 1, R40 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R1917 += 1, R40 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 72] { R1919 += 1, R42 += 1, R43 += 1 };
  s0 -> s0 [0, 65535] { R1918 += 1, R1919 += 1 };
  s0 -> s2 [73, 73] { R1919 += 1, R42 += 1, R43 += 1 };
  s0 -> s3 [73, 73] { R1919 += 1, R42 += 1, R43 += 1 };
  s0 -> s1 [74, 65535] { R1919 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 72] { R1919 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R1919 += 1, R42 += 1, R43 += 1 };
  s1 -> s3 [73, 73] { R1919 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [74, 65535] { R1919 += 1, R42 += 1, R43 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1919 += 1, R42 += 1, R43 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 72] { R1921 += 1, R46 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R1920 += 1, R1921 += 1 };
  s0 -> s2 [73, 73] { R1921 += 1, R46 += 1, R47 += 1 };
  s0 -> s3 [73, 73] { R1921 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [74, 65535] { R1921 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 72] { R1921 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R1921 += 1, R46 += 1, R47 += 1 };
  s1 -> s3 [73, 73] { R1921 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [74, 65535] { R1921 += 1, R46 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1921 += 1, R46 += 1, R47 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 72] { R1923 += 1, R52 += 1, R53 += 1 };
  s0 -> s0 [0, 65535] { R1922 += 1, R1923 += 1 };
  s0 -> s2 [73, 73] { R1923 += 1, R52 += 1, R53 += 1 };
  s0 -> s3 [73, 73] { R1923 += 1, R52 += 1, R53 += 1 };
  s0 -> s1 [74, 65535] { R1923 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 72] { R1923 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R1923 += 1, R52 += 1, R53 += 1 };
  s1 -> s3 [73, 73] { R1923 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [74, 65535] { R1923 += 1, R52 += 1, R53 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R1923 += 1, R52 += 1, R53 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 72] { R1925 += 1, R56 += 1, R57 += 1 };
  s0 -> s0 [0, 65535] { R1924 += 1, R1925 += 1 };
  s0 -> s2 [73, 73] { R1925 += 1, R56 += 1, R57 += 1 };
  s0 -> s3 [73, 73] { R1925 += 1, R56 += 1, R57 += 1 };
  s0 -> s1 [74, 65535] { R1925 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 72] { R1925 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R1925 += 1, R56 += 1, R57 += 1 };
  s1 -> s3 [73, 73] { R1925 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [74, 65535] { R1925 += 1, R56 += 1, R57 += 1 };
  s2 -> s2 [0, 65535] { R1925 += 1, R56 += 1, R57 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 72] { R1927 += 1, R62 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R1926 += 1, R1927 += 1 };
  s0 -> s2 [73, 73] { R1927 += 1, R62 += 1, R63 += 1 };
  s0 -> s3 [73, 73] { R1927 += 1, R62 += 1, R63 += 1 };
  s0 -> s1 [74, 65535] { R1927 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 72] { R1927 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R1927 += 1, R62 += 1, R63 += 1 };
  s1 -> s3 [73, 73] { R1927 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [74, 65535] { R1927 += 1, R62 += 1, R63 += 1 };
  s2 -> s2 [0, 65535] { R1927 += 1, R62 += 1, R63 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 72] { R1947 += 1 };
  s0 -> s0 [0, 65535] { R1946 += 1, R1947 += 1 };
  s0 -> s2 [73, 73] { R1947 += 1 };
  s0 -> s1 [74, 65535] { R1947 += 1 };
  s1 -> s1 [0, 72] { R1947 += 1 };
  s1 -> s2 [73, 73] { R1947 += 1 };
  s1 -> s1 [74, 65535] { R1947 += 1 };
  s2 -> s2 [0, 65535] { R1947 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R1949 += 1, R1 += 1 };
  s0 -> s0 [0, 65535] { R1948 += 1, R1949 += 1 };
  s1 -> s1 [0, 65535] { R1949 += 1, R1 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 72] { R1951 += 1 };
  s0 -> s0 [0, 65535] { R1950 += 1, R1951 += 1 };
  s0 -> s2 [0, 65535] { R1951 += 1, R8 += 1 };
  s0 -> s3 [73, 73] { R1951 += 1 };
  s0 -> s1 [74, 65535] { R1951 += 1 };
  s1 -> s1 [0, 72] { R1951 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [73, 73] { R1951 += 1 };
  s1 -> s1 [74, 65535] { R1951 += 1 };
  s2 -> s1 [0, 72] { R1951 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1951 += 1, R8 += 1 };
  s2 -> s3 [73, 73] { R1951 += 1 };
  s2 -> s1 [74, 65535] { R1951 += 1 };
  s3 -> s3 [0, 65535] { R1951 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 72] { R1953 += 1, R1891 += 1 };
  s0 -> s2 [0, 65535] { R1953 += 1, R1890 += 1, R1891 += 1 };
  s0 -> s0 [0, 65535] { R1952 += 1, R1953 += 1 };
  s0 -> s1 [74, 65535] { R1953 += 1, R1891 += 1 };
  s1 -> s1 [0, 72] { R1953 += 1, R1891 += 1 };
  s1 -> s1 [0, 65535] { R1953 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [74, 65535] { R1953 += 1, R1891 += 1 };
  s2 -> s1 [0, 72] { R1953 += 1, R1891 += 1 };
  s2 -> s2 [0, 65535] { R1953 += 1, R1890 += 1, R1891 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [74, 65535] { R1953 += 1, R1891 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s0 [0, 65535] { R1954 += 1, R1955 += 1 };
  s0 -> s1 [0, 65535] { R1955 += 1, R1893 += 1, R17 += 1 };
  s0 -> s2 [0, 65535] { R1955 += 1, R1892 += 1, R1893 += 1 };
  s1 -> s4 [0, 65535] { R1955 += 1 };
  s1 -> s1 [0, 65535] { R1955 += 1, R1893 += 1, R17 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R1955 += 1, R1893 += 1, R17 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1955 += 1, R1892 += 1, R1893 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1955 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 73] { R1957 += 1, R1895 += 1 };
  s0 -> s2 [0, 65535] { R1957 += 1, R1894 += 1, R1895 += 1 };
  s0 -> s0 [0, 65535] { R1956 += 1, R1957 += 1 };
  s0 -> s1 [77, 65535] { R1957 += 1, R1895 += 1 };
  s1 -> s1 [0, 73] { R1957 += 1, R1895 += 1 };
  s1 -> s1 [0, 65535] { R1957 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [77, 65535] { R1957 += 1, R1895 += 1 };
  s2 -> s1 [0, 73] { R1957 += 1, R1895 += 1 };
  s2 -> s2 [0, 65535] { R1957 += 1, R1894 += 1, R1895 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [77, 65535] { R1957 += 1, R1895 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R1958 += 1, R1959 += 1 };
  s0 -> s1 [0, 65535] { R1959 += 1, R1896 += 1, R1897 += 1 };
  s0 -> s2 [0, 65535] { R1959 += 1, R1897 += 1, R67 += 1 };
  s1 -> s1 [0, 65535] { R1959 += 1, R1896 += 1, R1897 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R1959 += 1, R1897 += 1, R67 += 1 };
  s2 -> s3 [0, 65535] { R1959 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1959 += 1, R1897 += 1, R67 += 1 };
  s3 -> s3 [0, 65535] { R1959 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 76] { R1961 += 1, R1899 += 1 };
  s0 -> s2 [0, 65535] { R1961 += 1, R1898 += 1, R1899 += 1 };
  s0 -> s3 [0, 65535] { R1961 += 1, R1899 += 1, R69 += 1 };
  s0 -> s0 [0, 65535] { R1960 += 1, R1961 += 1 };
  s0 -> s1 [78, 65535] { R1961 += 1, R1899 += 1 };
  s1 -> s1 [0, 76] { R1961 += 1, R1899 += 1 };
  s1 -> s1 [0, 65535] { R1961 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [78, 65535] { R1961 += 1, R1899 += 1 };
  s2 -> s1 [0, 76] { R1961 += 1, R1899 += 1 };
  s2 -> s2 [0, 65535] { R1961 += 1, R1898 += 1, R1899 += 1 };
  s2 -> s3 [0, 65535] { R1961 += 1, R1899 += 1, R69 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [78, 65535] { R1961 += 1, R1899 += 1 };
  s3 -> s1 [0, 76] { R1961 += 1, R1899 += 1 };
  s3 -> s4 [0, 65535] { R1961 += 1 };
  s3 -> s3 [0, 65535] { R1961 += 1, R1899 += 1, R69 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [78, 65535] { R1961 += 1, R1899 += 1 };
  s4 -> s4 [0, 65535] { R1961 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 76] { R1963 += 1, R1901 += 1, R73 += 1 };
  s0 -> s0 [0, 65535] { R1962 += 1, R1963 += 1 };
  s0 -> s2 [0, 65535] { R1963 += 1, R1900 += 1, R1901 += 1 };
  s0 -> s3 [0, 65535] { R1963 += 1, R1901 += 1, R72 += 1, R73 += 1 };
  s0 -> s1 [78, 65535] { R1963 += 1, R1901 += 1, R73 += 1 };
  s1 -> s1 [0, 76] { R1963 += 1, R1901 += 1, R73 += 1 };
  s1 -> s4 [0, 65535] { R1963 += 1 };
  s1 -> s1 [0, 65535] { R1963 += 1, R1901 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [78, 65535] { R1963 += 1, R1901 += 1, R73 += 1 };
  s2 -> s1 [0, 76] { R1963 += 1, R1901 += 1, R73 += 1 };
  s2 -> s2 [0, 65535] { R1963 += 1, R1900 += 1, R1901 += 1 };
  s2 -> s3 [0, 65535] { R1963 += 1, R1901 += 1, R72 += 1, R73 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [78, 65535] { R1963 += 1, R1901 += 1, R73 += 1 };
  s3 -> s1 [0, 76] { R1963 += 1, R1901 += 1, R73 += 1 };
  s3 -> s4 [0, 65535] { R1963 += 1 };
  s3 -> s3 [0, 65535] { R1963 += 1, R1901 += 1, R72 += 1, R73 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [78, 65535] { R1963 += 1, R1901 += 1, R73 += 1 };
  s4 -> s4 [0, 65535] { R1963 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R1965 += 1, R1903 += 1, R78 += 1, R79 += 1 };
  s0 -> s2 [0, 65535] { R1965 += 1, R1903 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [0, 65535] { R1965 += 1, R1902 += 1, R1903 += 1 };
  s0 -> s0 [0, 65535] { R1964 += 1, R1965 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R1965 += 1, R1903 += 1 };
  s1 -> s1 [0, 65535] { R1965 += 1, R1903 += 1, R78 += 1, R79 += 1 };
  s1 -> s5 [0, 65535] { R1965 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R1965 += 1, R1903 += 1, R78 += 1, R79 += 1 };
  s2 -> s2 [0, 65535] { R1965 += 1, R1903 += 1, R77 += 1, R78 += 1 };
  s2 -> s5 [0, 65535] { R1965 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R1965 += 1, R1903 += 1, R78 += 1, R79 += 1 };
  s3 -> s2 [0, 65535] { R1965 += 1, R1903 += 1, R77 += 1, R78 += 1 };
  s3 -> s3 [0, 65535] { R1965 += 1, R1902 += 1, R1903 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1965 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R1965 += 1, R1903 += 1 };
  s6 -> s5 [0, 65535] { R1965 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 77] { R1967 += 1, R1905 += 1, R1353 += 1 };
  s0 -> s2 [0, 65535] { R1967 += 1, R1904 += 1, R1905 += 1 };
  s0 -> s0 [0, 65535] { R1966 += 1, R1967 += 1 };
  s0 -> s3 [0, 65535] { R1967 += 1, R1905 += 1, R1352 += 1, R1353 += 1 };
  s0 -> s4 [88, 88] { R1967 += 1, R1905 += 1, R1353 += 1 };
  s0 -> s1 [89, 65535] { R1967 += 1, R1905 += 1, R1353 += 1 };
  s1 -> s1 [0, 77] { R1967 += 1, R1905 += 1, R1353 += 1 };
  s1 -> s4 [88, 88] { R1967 += 1, R1905 += 1, R1353 += 1 };
  s1 -> s1 [89, 65535] { R1967 += 1, R1905 += 1, R1353 += 1 };
  s2 -> s1 [0, 77] { R1967 += 1, R1905 += 1, R1353 += 1 };
  s2 -> s2 [0, 65535] { R1967 += 1, R1904 += 1, R1905 += 1 };
  s2 -> s3 [0, 65535] { R1967 += 1, R1905 += 1, R1352 += 1, R1353 += 1 };
  s2 -> s4 [88, 88] { R1967 += 1, R1905 += 1, R1353 += 1 };
  s2 -> s1 [89, 65535] { R1967 += 1, R1905 += 1, R1353 += 1 };
  s3 -> s1 [0, 77] { R1967 += 1, R1905 += 1, R1353 += 1 };
  s3 -> s3 [0, 65535] { R1967 += 1, R1905 += 1, R1352 += 1, R1353 += 1 };
  s3 -> s4 [88, 88] { R1967 += 1, R1905 += 1, R1353 += 1 };
  s3 -> s1 [89, 65535] { R1967 += 1, R1905 += 1, R1353 += 1 };
  s4 -> s4 [0, 77] { R1967 += 1, R1905 += 1, R1353 += 1 };
  s4 -> s5 [0, 65535] { R1967 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R1967 += 1, R1905 += 1 };
  s4 -> s4 [88, 65535] { R1967 += 1, R1905 += 1, R1353 += 1 };
  s5 -> s5 [0, 65535] { R1967 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s4, s5, s6;
};
automaton value2_28 {
  init s0;
  s0 -> s0 [0, 65535] { R1968 += 1, R1969 += 1 };
  s0 -> s1 [0, 65535] { R1969 += 1, R1907 += 1, R1780 += 1, R1781 += 1 };
  s0 -> s2 [0, 65535] { R1969 += 1, R1906 += 1, R1907 += 1 };
  s0 -> s3 [0, 65535] { R1969 += 1, R1907 += 1 };
  s1 -> s4 [0, 65535] { R1969 += 1 };
  s1 -> s1 [0, 65535] { R1969 += 1, R1907 += 1, R1780 += 1, R1781 += 1 };
  s1 -> s3 [0, 65535] { R1969 += 1, R1907 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R1969 += 1, R1907 += 1, R1780 += 1, R1781 += 1 };
  s2 -> s2 [0, 65535] { R1969 += 1, R1906 += 1, R1907 += 1 };
  s2 -> s3 [0, 65535] { R1969 += 1, R1907 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R1969 += 1 };
  s3 -> s3 [0, 65535] { R1969 += 1, R1907 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1969 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 76] { R1971 += 1, R1909 += 1, R1889 += 1 };
  s0 -> s0 [0, 65535] { R1970 += 1, R1971 += 1 };
  s0 -> s2 [0, 65535] { R1971 += 1, R1908 += 1, R1909 += 1 };
  s0 -> s1 [0, 65535] { R1971 += 1, R1909 += 1 };
  s0 -> s3 [77, 77] { R1971 += 1, R1909 += 1, R1889 += 1 };
  s0 -> s4 [77, 77] { R1971 += 1, R1909 += 1, R1889 += 1 };
  s0 -> s1 [89, 65535] { R1971 += 1, R1909 += 1, R1889 += 1 };
  s1 -> s1 [0, 76] { R1971 += 1, R1909 += 1, R1889 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R1971 += 1 };
  s1 -> s1 [0, 65535] { R1971 += 1, R1909 += 1 };
  s1 -> s3 [77, 77] { R1971 += 1, R1909 += 1, R1889 += 1 };
  s1 -> s4 [77, 77] { R1971 += 1, R1909 += 1, R1889 += 1 };
  s1 -> s1 [89, 65535] { R1971 += 1, R1909 += 1, R1889 += 1 };
  s2 -> s1 [0, 76] { R1971 += 1, R1909 += 1, R1889 += 1 };
  s2 -> s2 [0, 65535] { R1971 += 1, R1908 += 1, R1909 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R1971 += 1, R1909 += 1 };
  s2 -> s3 [77, 77] { R1971 += 1, R1909 += 1, R1889 += 1 };
  s2 -> s4 [77, 77] { R1971 += 1, R1909 += 1, R1889 += 1 };
  s2 -> s1 [89, 65535] { R1971 += 1, R1909 += 1, R1889 += 1 };
  s3 -> s3 [0, 77] { R1971 += 1, R1909 += 1, R1889 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1971 += 1, R1909 += 1 };
  s3 -> s6 [0, 65535] { R1971 += 1 };
  s3 -> s3 [89, 65535] { R1971 += 1, R1909 += 1, R1889 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1971 += 1 };
  s4 -> s4 [0, 65535] { R1971 += 1, R1909 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1971 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R1973 += 1, R1929 += 1, R18 += 1 };
  s0 -> s2 [0, 65535] { R1973 += 1, R1928 += 1, R1929 += 1 };
  s0 -> s0 [0, 65535] { R1972 += 1, R1973 += 1 };
  s1 -> s4 [0, 65535] { R1973 += 1 };
  s1 -> s1 [0, 65535] { R1973 += 1, R1929 += 1, R18 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R1973 += 1, R1929 += 1, R18 += 1 };
  s2 -> s2 [0, 65535] { R1973 += 1, R1928 += 1, R1929 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1973 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 72] { R1975 += 1, R1931 += 1 };
  s0 -> s0 [0, 65535] { R1974 += 1, R1975 += 1 };
  s0 -> s2 [0, 65535] { R1975 += 1, R1930 += 1, R1931 += 1 };
  s0 -> s3 [73, 73] { R1975 += 1, R1931 += 1 };
  s0 -> s4 [73, 73] { R1975 += 1, R1931 += 1 };
  s0 -> s5 [77, 77] { R1975 += 1, R1931 += 1 };
  s0 -> s1 [78, 65535] { R1975 += 1, R1931 += 1 };
  s1 -> s1 [0, 72] { R1975 += 1, R1931 += 1 };
  s1 -> s3 [73, 73] { R1975 += 1, R1931 += 1 };
  s1 -> s4 [73, 73] { R1975 += 1, R1931 += 1 };
  s1 -> s5 [77, 77] { R1975 += 1, R1931 += 1 };
  s1 -> s1 [78, 65535] { R1975 += 1, R1931 += 1 };
  s2 -> s1 [0, 72] { R1975 += 1, R1931 += 1 };
  s2 -> s2 [0, 65535] { R1975 += 1, R1930 += 1, R1931 += 1 };
  s2 -> s3 [73, 73] { R1975 += 1, R1931 += 1 };
  s2 -> s4 [73, 73] { R1975 += 1, R1931 += 1 };
  s2 -> s5 [77, 77] { R1975 += 1, R1931 += 1 };
  s2 -> s1 [78, 65535] { R1975 += 1, R1931 += 1 };
  s4 -> s4 [0, 73] { R1975 += 1, R1931 += 1 };
  s4 -> s8 [77, 77] { R1975 += 1, R1931 += 1 };
  s4 -> s4 [78, 65535] { R1975 += 1, R1931 += 1 };
  s5 -> s5 [0, 72] { R1975 += 1, R1931 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R1975 += 1 };
  s5 -> s7 [73, 73] { R1975 += 1, R1931 += 1 };
  s5 -> s8 [73, 73] { R1975 += 1, R1931 += 1 };
  s5 -> s5 [77, 65535] { R1975 += 1, R1931 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R1975 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 73] { R1975 += 1, R1931 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R1975 += 1 };
  s8 -> s8 [77, 65535] { R1975 += 1, R1931 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 72] { R1977 += 1, R1933 += 1, R66 += 1 };
  s0 -> s2 [0, 65535] { R1977 += 1, R1932 += 1, R1933 += 1 };
  s0 -> s0 [0, 65535] { R1976 += 1, R1977 += 1 };
  s0 -> s3 [73, 73] { R1977 += 1, R1933 += 1, R66 += 1 };
  s0 -> s4 [73, 73] { R1977 += 1, R1933 += 1, R66 += 1 };
  s0 -> s1 [74, 65535] { R1977 += 1, R1933 += 1, R66 += 1 };
  s1 -> s1 [0, 72] { R1977 += 1, R1933 += 1, R66 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1977 += 1 };
  s1 -> s3 [73, 73] { R1977 += 1, R1933 += 1, R66 += 1 };
  s1 -> s4 [73, 73] { R1977 += 1, R1933 += 1, R66 += 1 };
  s1 -> s1 [74, 65535] { R1977 += 1, R1933 += 1, R66 += 1 };
  s2 -> s1 [0, 72] { R1977 += 1, R1933 += 1, R66 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1977 += 1, R1932 += 1, R1933 += 1 };
  s2 -> s3 [73, 73] { R1977 += 1, R1933 += 1, R66 += 1 };
  s2 -> s4 [73, 73] { R1977 += 1, R1933 += 1, R66 += 1 };
  s2 -> s1 [74, 65535] { R1977 += 1, R1933 += 1, R66 += 1 };
  s3 -> s3 [0, 65535] { R1977 += 1, R1933 += 1, R66 += 1 };
  s3 -> s6 [0, 65535] { R1977 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1977 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1977 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 72] { R1979 += 1, R1935 += 1, R68 += 1 };
  s0 -> s2 [0, 65535] { R1979 += 1, R1934 += 1, R1935 += 1 };
  s0 -> s0 [0, 65535] { R1978 += 1, R1979 += 1 };
  s0 -> s3 [73, 73] { R1979 += 1, R1935 += 1, R68 += 1 };
  s0 -> s4 [73, 73] { R1979 += 1, R1935 += 1, R68 += 1 };
  s0 -> s1 [74, 65535] { R1979 += 1, R1935 += 1, R68 += 1 };
  s1 -> s1 [0, 72] { R1979 += 1, R1935 += 1, R68 += 1 };
  s1 -> s1 [0, 65535] { R1979 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [73, 73] { R1979 += 1, R1935 += 1, R68 += 1 };
  s1 -> s4 [73, 73] { R1979 += 1, R1935 += 1, R68 += 1 };
  s1 -> s1 [74, 65535] { R1979 += 1, R1935 += 1, R68 += 1 };
  s2 -> s1 [0, 72] { R1979 += 1, R1935 += 1, R68 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1979 += 1, R1934 += 1, R1935 += 1 };
  s2 -> s3 [73, 73] { R1979 += 1, R1935 += 1, R68 += 1 };
  s2 -> s4 [73, 73] { R1979 += 1, R1935 += 1, R68 += 1 };
  s2 -> s1 [74, 65535] { R1979 += 1, R1935 += 1, R68 += 1 };
  s3 -> s6 [0, 65535] { R1979 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1979 += 1, R1935 += 1, R68 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1979 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1979 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 72] { R1981 += 1, R1937 += 1, R70 += 1, R71 += 1 };
  s0 -> s0 [0, 65535] { R1980 += 1, R1981 += 1 };
  s0 -> s2 [0, 65535] { R1981 += 1, R1936 += 1, R1937 += 1 };
  s0 -> s3 [73, 73] { R1981 += 1, R1937 += 1, R70 += 1, R71 += 1 };
  s0 -> s4 [73, 73] { R1981 += 1, R1937 += 1, R70 += 1, R71 += 1 };
  s0 -> s1 [74, 65535] { R1981 += 1, R1937 += 1, R70 += 1, R71 += 1 };
  s1 -> s1 [0, 72] { R1981 += 1, R1937 += 1, R70 += 1, R71 += 1 };
  s1 -> s1 [0, 65535] { R1981 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [73, 73] { R1981 += 1, R1937 += 1, R70 += 1, R71 += 1 };
  s1 -> s4 [73, 73] { R1981 += 1, R1937 += 1, R70 += 1, R71 += 1 };
  s1 -> s1 [74, 65535] { R1981 += 1, R1937 += 1, R70 += 1, R71 += 1 };
  s2 -> s1 [0, 72] { R1981 += 1, R1937 += 1, R70 += 1, R71 += 1 };
  s2 -> s2 [0, 65535] { R1981 += 1, R1936 += 1, R1937 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [73, 73] { R1981 += 1, R1937 += 1, R70 += 1, R71 += 1 };
  s2 -> s4 [73, 73] { R1981 += 1, R1937 += 1, R70 += 1, R71 += 1 };
  s2 -> s1 [74, 65535] { R1981 += 1, R1937 += 1, R70 += 1, R71 += 1 };
  s3 -> s3 [0, 65535] { R1981 += 1, R1937 += 1, R70 += 1, R71 += 1 };
  s3 -> s6 [0, 65535] { R1981 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1981 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1981 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 72] { R1983 += 1, R1939 += 1, R74 += 1, R75 += 1 };
  s0 -> s2 [0, 65535] { R1983 += 1, R1938 += 1, R1939 += 1 };
  s0 -> s0 [0, 65535] { R1982 += 1, R1983 += 1 };
  s0 -> s3 [73, 73] { R1983 += 1, R1939 += 1, R74 += 1, R75 += 1 };
  s0 -> s4 [73, 73] { R1983 += 1, R1939 += 1, R74 += 1, R75 += 1 };
  s0 -> s1 [74, 65535] { R1983 += 1, R1939 += 1, R74 += 1, R75 += 1 };
  s1 -> s1 [0, 72] { R1983 += 1, R1939 += 1, R74 += 1, R75 += 1 };
  s1 -> s1 [0, 65535] { R1983 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [73, 73] { R1983 += 1, R1939 += 1, R74 += 1, R75 += 1 };
  s1 -> s4 [73, 73] { R1983 += 1, R1939 += 1, R74 += 1, R75 += 1 };
  s1 -> s1 [74, 65535] { R1983 += 1, R1939 += 1, R74 += 1, R75 += 1 };
  s2 -> s1 [0, 72] { R1983 += 1, R1939 += 1, R74 += 1, R75 += 1 };
  s2 -> s2 [0, 65535] { R1983 += 1, R1938 += 1, R1939 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [73, 73] { R1983 += 1, R1939 += 1, R74 += 1, R75 += 1 };
  s2 -> s4 [73, 73] { R1983 += 1, R1939 += 1, R74 += 1, R75 += 1 };
  s2 -> s1 [74, 65535] { R1983 += 1, R1939 += 1, R74 += 1, R75 += 1 };
  s3 -> s3 [0, 65535] { R1983 += 1, R1939 += 1, R74 += 1, R75 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R1983 += 1 };
  s4 -> s4 [0, 65535] { R1983 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1983 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 72] { R1985 += 1, R1941 += 1, R1350 += 1, R1351 += 1 };
  s0 -> s2 [0, 65535] { R1985 += 1, R1940 += 1, R1941 += 1 };
  s0 -> s0 [0, 65535] { R1984 += 1, R1985 += 1 };
  s0 -> s3 [73, 73] { R1985 += 1, R1941 += 1, R1350 += 1, R1351 += 1 };
  s0 -> s4 [73, 73] { R1985 += 1, R1941 += 1, R1350 += 1, R1351 += 1 };
  s0 -> s1 [74, 65535] { R1985 += 1, R1941 += 1, R1350 += 1, R1351 += 1 };
  s1 -> s1 [0, 72] { R1985 += 1, R1941 += 1, R1350 += 1, R1351 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1985 += 1 };
  s1 -> s3 [73, 73] { R1985 += 1, R1941 += 1, R1350 += 1, R1351 += 1 };
  s1 -> s4 [73, 73] { R1985 += 1, R1941 += 1, R1350 += 1, R1351 += 1 };
  s1 -> s1 [74, 65535] { R1985 += 1, R1941 += 1, R1350 += 1, R1351 += 1 };
  s2 -> s1 [0, 72] { R1985 += 1, R1941 += 1, R1350 += 1, R1351 += 1 };
  s2 -> s2 [0, 65535] { R1985 += 1, R1940 += 1, R1941 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [73, 73] { R1985 += 1, R1941 += 1, R1350 += 1, R1351 += 1 };
  s2 -> s4 [73, 73] { R1985 += 1, R1941 += 1, R1350 += 1, R1351 += 1 };
  s2 -> s1 [74, 65535] { R1985 += 1, R1941 += 1, R1350 += 1, R1351 += 1 };
  s3 -> s3 [0, 65535] { R1985 += 1, R1941 += 1, R1350 += 1, R1351 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R1985 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1985 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1985 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 72] { R1987 += 1, R1943 += 1, R1777 += 1, R1778 += 1 };
  s0 -> s2 [0, 72] { R1987 += 1, R1943 += 1, R1776 += 1, R1777 += 1 };
  s0 -> s0 [0, 65535] { R1986 += 1, R1987 += 1 };
  s0 -> s3 [0, 65535] { R1987 += 1, R1942 += 1, R1943 += 1 };
  s0 -> s4 [73, 73] { R1987 += 1, R1943 += 1, R1777 += 1, R1778 += 1 };
  s0 -> s5 [73, 73] { R1987 += 1, R1943 += 1, R1777 += 1, R1778 += 1 };
  s0 -> s6 [73, 73] { R1987 += 1, R1943 += 1, R1776 += 1, R1777 += 1 };
  s0 -> s7 [73, 73] { R1987 += 1, R1943 += 1, R1776 += 1, R1777 += 1 };
  s0 -> s1 [74, 65535] { R1987 += 1, R1943 += 1, R1777 += 1, R1778 += 1 };
  s0 -> s2 [74, 65535] { R1987 += 1, R1943 += 1, R1776 += 1, R1777 += 1 };
  s1 -> s1 [0, 72] { R1987 += 1, R1943 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s1 [0, 65535] { R1987 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [73, 73] { R1987 += 1, R1943 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s5 [73, 73] { R1987 += 1, R1943 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s1 [74, 65535] { R1987 += 1, R1943 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s1 [0, 72] { R1987 += 1, R1943 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s2 [0, 72] { R1987 += 1, R1943 += 1, R1776 += 1, R1777 += 1 };
  s2 -> s4 [73, 73] { R1987 += 1, R1943 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s5 [73, 73] { R1987 += 1, R1943 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s6 [73, 73] { R1987 += 1, R1943 += 1, R1776 += 1, R1777 += 1 };
  s2 -> s7 [73, 73] { R1987 += 1, R1943 += 1, R1776 += 1, R1777 += 1 };
  s2 -> s1 [74, 65535] { R1987 += 1, R1943 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s2 [74, 65535] { R1987 += 1, R1943 += 1, R1776 += 1, R1777 += 1 };
  s3 -> s1 [0, 72] { R1987 += 1, R1943 += 1, R1777 += 1, R1778 += 1 };
  s3 -> s2 [0, 72] { R1987 += 1, R1943 += 1, R1776 += 1, R1777 += 1 };
  s3 -> s3 [0, 65535] { R1987 += 1, R1942 += 1, R1943 += 1 };
  s3 -> s4 [73, 73] { R1987 += 1, R1943 += 1, R1777 += 1, R1778 += 1 };
  s3 -> s5 [73, 73] { R1987 += 1, R1943 += 1, R1777 += 1, R1778 += 1 };
  s3 -> s6 [73, 73] { R1987 += 1, R1943 += 1, R1776 += 1, R1777 += 1 };
  s3 -> s7 [73, 73] { R1987 += 1, R1943 += 1, R1776 += 1, R1777 += 1 };
  s3 -> s1 [74, 65535] { R1987 += 1, R1943 += 1, R1777 += 1, R1778 += 1 };
  s3 -> s2 [74, 65535] { R1987 += 1, R1943 += 1, R1776 += 1, R1777 += 1 };
  s4 -> s4 [0, 65535] { R1987 += 1, R1943 += 1, R1777 += 1, R1778 += 1 };
  s4 -> s9 [0, 65535] { R1987 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R1987 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s4 [0, 65535] { R1987 += 1, R1943 += 1, R1777 += 1, R1778 += 1 };
  s6 -> s6 [0, 65535] { R1987 += 1, R1943 += 1, R1776 += 1, R1777 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R1987 += 1 };
  s9 -> s8 [0, 65535];
  accepting s4, s8, s5, s9, s1;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 72] { R1989 += 1, R1945 += 1, R1886 += 1, R1887 += 1 };
  s0 -> s2 [0, 72] { R1989 += 1, R1945 += 1, R1887 += 1 };
  s0 -> s0 [0, 65535] { R1988 += 1, R1989 += 1 };
  s0 -> s3 [0, 65535] { R1989 += 1, R1944 += 1, R1945 += 1 };
  s0 -> s4 [73, 73] { R1989 += 1, R1945 += 1, R1887 += 1 };
  s0 -> s5 [73, 73] { R1989 += 1, R1945 += 1, R1886 += 1, R1887 += 1 };
  s0 -> s6 [73, 73] { R1989 += 1, R1945 += 1, R1886 += 1, R1887 += 1 };
  s0 -> s7 [73, 73] { R1989 += 1, R1945 += 1, R1887 += 1 };
  s0 -> s2 [74, 76] { R1989 += 1, R1945 += 1, R1887 += 1 };
  s0 -> s1 [74, 65535] { R1989 += 1, R1945 += 1, R1886 += 1, R1887 += 1 };
  s0 -> s2 [89, 65535] { R1989 += 1, R1945 += 1, R1887 += 1 };
  s1 -> s1 [0, 72] { R1989 += 1, R1945 += 1, R1886 += 1, R1887 += 1 };
  s1 -> s2 [0, 72] { R1989 += 1, R1945 += 1, R1887 += 1 };
  s1 -> s4 [73, 73] { R1989 += 1, R1945 += 1, R1887 += 1 };
  s1 -> s5 [73, 73] { R1989 += 1, R1945 += 1, R1886 += 1, R1887 += 1 };
  s1 -> s6 [73, 73] { R1989 += 1, R1945 += 1, R1886 += 1, R1887 += 1 };
  s1 -> s7 [73, 73] { R1989 += 1, R1945 += 1, R1887 += 1 };
  s1 -> s2 [74, 76] { R1989 += 1, R1945 += 1, R1887 += 1 };
  s1 -> s1 [74, 65535] { R1989 += 1, R1945 += 1, R1886 += 1, R1887 += 1 };
  s1 -> s2 [89, 65535] { R1989 += 1, R1945 += 1, R1887 += 1 };
  s2 -> s2 [0, 72] { R1989 += 1, R1945 += 1, R1887 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R1989 += 1 };
  s2 -> s4 [73, 73] { R1989 += 1, R1945 += 1 };
  s2 -> s7 [73, 73] { R1989 += 1, R1945 += 1 };
  s2 -> s2 [74, 76] { R1989 += 1, R1945 += 1, R1887 += 1 };
  s2 -> s2 [74, 65535] { R1989 += 1, R1945 += 1 };
  s2 -> s2 [89, 65535] { R1989 += 1, R1945 += 1, R1887 += 1 };
  s3 -> s1 [0, 72] { R1989 += 1, R1945 += 1, R1886 += 1, R1887 += 1 };
  s3 -> s2 [0, 72] { R1989 += 1, R1945 += 1, R1887 += 1 };
  s3 -> s3 [0, 65535] { R1989 += 1, R1944 += 1, R1945 += 1 };
  s3 -> s4 [73, 73] { R1989 += 1, R1945 += 1, R1887 += 1 };
  s3 -> s5 [73, 73] { R1989 += 1, R1945 += 1, R1886 += 1, R1887 += 1 };
  s3 -> s6 [73, 73] { R1989 += 1, R1945 += 1, R1886 += 1, R1887 += 1 };
  s3 -> s7 [73, 73] { R1989 += 1, R1945 += 1, R1887 += 1 };
  s3 -> s2 [74, 76] { R1989 += 1, R1945 += 1, R1887 += 1 };
  s3 -> s1 [74, 65535] { R1989 += 1, R1945 += 1, R1886 += 1, R1887 += 1 };
  s3 -> s2 [89, 65535] { R1989 += 1, R1945 += 1, R1887 += 1 };
  s4 -> s4 [0, 65535] { R1989 += 1 };
  s4 -> s8 [0, 65535];
  s6 -> s7 [0, 76] { R1989 += 1, R1945 += 1, R1887 += 1 };
  s6 -> s6 [0, 65535] { R1989 += 1, R1945 += 1, R1886 += 1, R1887 += 1 };
  s6 -> s7 [89, 65535] { R1989 += 1, R1945 += 1, R1887 += 1 };
  s7 -> s7 [0, 76] { R1989 += 1, R1945 += 1, R1887 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R1989 += 1, R1945 += 1 };
  s7 -> s9 [0, 65535] { R1989 += 1 };
  s7 -> s7 [89, 65535] { R1989 += 1, R1945 += 1, R1887 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R1989 += 1 };
  accepting s4, s8, s2, s9, s7;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [105, 105];
  accepting s1;
};
};
synchronised {  // Automata constraining P54
automaton P54_0 {
  init s0;
  s0 -> s1 [109, 109];
  accepting s1;
};
};
constraint R1 = R1905 && R2 = R1989 && R20 - R1989 = -1 && R21 = R1989 && R22 - R1989 = -1 && R23 = R1989 && R24 = 0 && R25 = 1 && R26 = 0 && R27 = 1 && R38 + R67 + R66 + -1*R1353 + -1*R1351 - R53 = 0 && R52 + R1352 + R1350 = 0 && R1904 = 0 && R1930 = 0 && R1931 = 0 && R1942 = 0 && R1943 = 0 && R1944 = 0 && R1945 = 0 && R1946 = 0 && R1947 = R1989 && R1948 = 0 && R1949 = R1989 && R1950 = 0 && R1951 = R1989 && R1952 = 0 && R1953 = R1989 && R1954 = 0 && R1955 = R1989 && R1956 = 0 && R1957 = R1989 && R1958 = 0 && R1959 = R1989 && R1960 = 0 && R1961 = R1989 && R1962 = 0 && R1963 = R1989 && R1964 = 0 && R1965 = R1989 && R1966 = 0 && R1967 = R1989 && R1968 = 0 && R1969 = R1989 && R1970 = 0 && R1971 = R1989 && R1972 = 0 && R1973 = R1989 && R1974 = 0 && R1975 = R1989 && R1976 = 0 && R1977 = R1989 && R1978 = 0 && R1979 = R1989 && R1980 = 0 && R1981 = R1989 && R1982 = 0 && R1983 = R1989 && R1984 = 0 && R1985 = R1989 && R1986 = 0 && R1987 = R1989 && R1988 = 0 && R8 < 1 && R11 < 1 && R12 < 1 && R40 + R69 + R68 < 1 && -1*R1353 + -1*R1351 - R53 < 1 && -1 < R1905 && 0 < R1989 && (R48 + R79 + R76 != 0 || ((R42 + R72 + R70 != 0 || R43 + R73 + R71 + -1*R1353 + -1*R1351 - R53 = 0 || R53 + R1353 + R1351 < 1) && (R42 + R72 + R70 = 0 || R53 + R1353 + R1351 < 1))) && (R48 + R79 + R76 != 0 || ((R46 + R77 + R74 != 0 || R47 + R78 + R75 + -1*R1353 + -1*R1351 - R53 = 0 || R53 + R1353 + R1351 < 1) && (R46 + R77 + R74 = 0 || R53 + R1353 + R1351 < 1))) && (R1890 != 0 || R1891 = R1905 || (R17 = 0 && R1905 = 0)) && (R1892 != 0 || R1893 = R1905 || (R17 = 0 && R1905 = 0)) && (R1894 != 0 || R1895 = R1905 || (R17 = 0 && R1905 = 0)) && (R1896 != 0 || R1897 = R1905 || (R17 = 0 && R1905 = 0)) && (R1898 != 0 || R1899 = R1905 || (R17 = 0 && R1905 = 0)) && (R1900 != 0 || R1901 = R1905 || (R17 = 0 && R1905 = 0)) && (R1902 != 0 || R1903 = R1905 || (R17 = 0 && R1905 = 0)) && (R1906 != 0 || R1905 = R1907 || (R17 = 0 && R1905 = 0)) && (R1908 != 0 || R1905 = R1909 || (R17 = 0 && R1905 = 0)) && (R18 = 0 || (R1928 = 0 && R1929 = 0)) && (R18 = 0 || (R1932 = 0 && R1933 = 0)) && (R18 = 0 || (R1934 = 0 && R1935 = 0)) && (R18 = 0 || (R1936 = 0 && R1937 = 0)) && (R18 = 0 || (R1938 = 0 && R1939 = 0)) && (R18 = 0 || (R1940 = 0 && R1941 = 0)) && (R19 = 0 || (R1910 = 0 && R1911 = 0)) && (R19 = 0 || (R1912 = 0 && R1913 = 0)) && (R19 = 0 || (R1914 = 0 && R1915 = 0)) && (R19 = 0 || (R1916 = 0 && R1917 = 0)) && (R19 = 0 || (R1918 = 0 && R1919 = 0)) && (R19 = 0 || (R1920 = 0 && R1921 = 0)) && (R19 = 0 || (R1922 = 0 && R1923 = 0)) && (R19 = 0 || (R1924 = 0 && R1925 = 0)) && (R19 = 0 || (R1926 = 0 && R1927 = 0)) && (R48 + R79 + R76 = 0 || (R42 + R72 + R70 = 0 && R43 + R73 + R71 + -1*R1353 + -1*R1351 - R53 = 0)) && (R48 + R79 + R76 = 0 || (R46 + R77 + R74 = 0 && R47 + R78 + R75 + -1*R1353 + -1*R1351 - R53 = 0)) && (R58 + R1781 + R1778 = 0 || (R56 + R1779 + R1776 = 0 && R57 + R1780 + R1777 = 0)) && (R58 + R1781 + R1778 = 0 || (R62 + R1888 + R1886 = 0 && R63 + R1889 + R1887 = 0)) && (R1890 = 0 || (R17 = 0 && R1905 = 0)) && (R1892 = 0 || (R17 = 0 && R1905 = 0)) && (R1894 = 0 || (R17 = 0 && R1905 = 0)) && (R1896 = 0 || (R17 = 0 && R1905 = 0)) && (R1898 = 0 || (R17 = 0 && R1905 = 0)) && (R1900 = 0 || (R17 = 0 && R1905 = 0)) && (R1902 = 0 || (R17 = 0 && R1905 = 0)) && (R1906 = 0 || (R17 = 0 && R1905 = 0)) && (R1908 = 0 || (R17 = 0 && R1905 = 0));
// End of Parikh automata intersection problem
