// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R2, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R5, R5289, R5290, R5291, R5292, R5293, R5294, R5295, R5296, R5297, R5298, R6089, R6090, R6091, R6092, R6093, R6094, R6095, R6096, R6097, R6098, R6099, R6100, R6101, R6102, R6103, R6104, R6105, R6106, R6107, R6108, R6109, R6110, R6111, R6112, R6113, R6114, R6115, R6116, R6117, R6118, R6119, R6120, R6121, R6122, R6123, R6124, R6125, R6126, R6127, R6128, R6129, R6130, R6131, R6132, R6133, R6134, R6135, R6136, R6137, R6138, R6139, R6140, R6141, R6142, R6143, R6144, R6145, R6146, R6147, R6148, R6149, R6150, R6151, R6152, R6153, R6154, R6155, R6156, R6157, R6158, R6159, R6160, R6161, R6162, R6163, R6164, R6165, R6166, R6167, R6168, R6169, R6170, R6171, R6172, R6173, R6174, R6175, R6176, R6177, R6178, R6179, R6180, R6181, R6182, R6183, R6184, R6185, R6186, R6187, R6188, R6189, R6190, R6191, R6192, R6193, R6194, R6195, R6196, R6197, R6198, R6199, R6200, R6201, R6202, R6203, R6204, R6205, R6206, R6207, R6208, R6209, R6210, R6211, R6212, R6213, R6214, R6215, R6216, R6217, R6218, R6219, R6220, R6221, R6222, R6223, R6224, R6225, R6226, R6227, R6228, R6229, R6230, R6231, R6232, R6233, R6234, R6235, R6236, R6237, R6238, R6239, R6240, R6241, R6242, R6243, R6244, R6245, R6246, R63, R65, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R26 += 1 };
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R6128 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R6127 += 1, R6128 += 1 };
  s1 -> s1 [0, 65535] { R6128 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R6130 += 1 };
  s0 -> s0 [0, 65535] { R6129 += 1, R6130 += 1 };
  s0 -> s2 [70, 70] { R6130 += 1 };
  s0 -> s3 [70, 70] { R6130 += 1 };
  s0 -> s1 [76, 65535] { R6130 += 1 };
  s1 -> s1 [0, 69] { R6130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6130 += 1 };
  s1 -> s3 [70, 70] { R6130 += 1 };
  s1 -> s1 [76, 65535] { R6130 += 1 };
  s2 -> s2 [0, 70] { R6130 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R6130 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R6132 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R6131 += 1, R6132 += 1 };
  s0 -> s2 [70, 70] { R6132 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R6132 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R6132 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R6132 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6132 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R6132 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R6132 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R6132 += 1, R63 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R6134 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R6133 += 1, R6134 += 1 };
  s0 -> s2 [70, 70] { R6134 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R6134 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R6134 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R6134 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6134 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R6134 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R6134 += 1, R65 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R6134 += 1, R65 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R6136 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R6135 += 1, R6136 += 1 };
  s0 -> s2 [70, 70] { R6136 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R6136 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R6136 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R6136 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6136 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R6136 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R6136 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535] { R6136 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R6138 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R6137 += 1, R6138 += 1 };
  s0 -> s2 [70, 70] { R6138 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R6138 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R6138 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R6138 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6138 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R6138 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R6138 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R6138 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R6140 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R6139 += 1, R6140 += 1 };
  s0 -> s2 [70, 70] { R6140 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R6140 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R6140 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R6140 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6140 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R6140 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R6140 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535] { R6140 += 1, R77 += 1, R78 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R6142 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R6141 += 1, R6142 += 1 };
  s0 -> s2 [70, 70] { R6142 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R6142 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R6142 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R6142 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6142 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R6142 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R6142 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R6142 += 1, R81 += 1, R82 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R6144 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R6143 += 1, R6144 += 1 };
  s0 -> s2 [70, 70] { R6144 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R6144 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R6144 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R6144 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6144 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R6144 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R6144 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R6144 += 1, R87 += 1, R88 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R6146 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R6145 += 1, R6146 += 1 };
  s0 -> s2 [70, 70] { R6146 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R6146 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R6146 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R6146 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6146 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R6146 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R6146 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R6146 += 1, R93 += 1, R94 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R6148 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R6147 += 1, R6148 += 1 };
  s0 -> s2 [70, 70] { R6148 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R6148 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R6148 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R6148 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6148 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R6148 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R6148 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R6148 += 1, R101 += 1, R102 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R6150 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R6149 += 1, R6150 += 1 };
  s0 -> s2 [70, 70] { R6150 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R6150 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R6150 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R6150 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6150 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R6150 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R6150 += 1, R111 += 1, R112 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R6150 += 1, R111 += 1, R112 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R6152 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R6151 += 1, R6152 += 1 };
  s0 -> s2 [70, 70] { R6152 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R6152 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R6152 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R6152 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6152 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R6152 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R6152 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R6152 += 1, R119 += 1, R120 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R6154 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R6153 += 1, R6154 += 1 };
  s0 -> s2 [70, 70] { R6154 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R6154 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R6154 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R6154 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6154 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R6154 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R6154 += 1, R129 += 1, R130 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R6154 += 1, R129 += 1, R130 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R6184 += 1 };
  s0 -> s0 [0, 65535] { R6183 += 1, R6184 += 1 };
  s0 -> s2 [70, 70] { R6184 += 1 };
  s0 -> s1 [71, 65535] { R6184 += 1 };
  s1 -> s1 [0, 69] { R6184 += 1 };
  s1 -> s2 [70, 70] { R6184 += 1 };
  s1 -> s1 [71, 65535] { R6184 += 1 };
  s2 -> s2 [0, 65535] { R6184 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R6186 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R6185 += 1, R6186 += 1 };
  s1 -> s1 [0, 65535] { R6186 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R6188 += 1 };
  s0 -> s2 [0, 65535] { R6188 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R6187 += 1, R6188 += 1 };
  s0 -> s3 [70, 70] { R6188 += 1 };
  s0 -> s1 [71, 65535] { R6188 += 1 };
  s1 -> s1 [0, 69] { R6188 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R6188 += 1 };
  s1 -> s1 [71, 65535] { R6188 += 1 };
  s2 -> s1 [0, 69] { R6188 += 1 };
  s2 -> s2 [0, 65535] { R6188 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R6188 += 1 };
  s2 -> s1 [71, 65535] { R6188 += 1 };
  s3 -> s3 [0, 65535] { R6188 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R6190 += 1, R6098 += 1 };
  s0 -> s0 [0, 65535] { R6189 += 1, R6190 += 1 };
  s0 -> s2 [0, 65535] { R6190 += 1, R6097 += 1, R6098 += 1 };
  s0 -> s1 [71, 65535] { R6190 += 1, R6098 += 1 };
  s1 -> s1 [0, 69] { R6190 += 1, R6098 += 1 };
  s1 -> s1 [0, 65535] { R6190 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R6190 += 1, R6098 += 1 };
  s2 -> s1 [0, 69] { R6190 += 1, R6098 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R6190 += 1, R6097 += 1, R6098 += 1 };
  s2 -> s1 [71, 65535] { R6190 += 1, R6098 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R6192 += 1, R6099 += 1, R6100 += 1 };
  s0 -> s2 [0, 65535] { R6192 += 1, R6100 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R6191 += 1, R6192 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R6192 += 1, R6099 += 1, R6100 += 1 };
  s1 -> s2 [0, 65535] { R6192 += 1, R6100 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R6192 += 1 };
  s2 -> s2 [0, 65535] { R6192 += 1, R6100 += 1, R22 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R6192 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R6194 += 1, R6102 += 1 };
  s0 -> s0 [0, 65535] { R6193 += 1, R6194 += 1 };
  s0 -> s2 [0, 65535] { R6194 += 1, R6101 += 1, R6102 += 1 };
  s0 -> s1 [75, 65535] { R6194 += 1, R6102 += 1 };
  s1 -> s1 [0, 70] { R6194 += 1, R6102 += 1 };
  s1 -> s1 [0, 65535] { R6194 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R6194 += 1, R6102 += 1 };
  s2 -> s1 [0, 70] { R6194 += 1, R6102 += 1 };
  s2 -> s2 [0, 65535] { R6194 += 1, R6101 += 1, R6102 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R6194 += 1, R6102 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R6196 += 1, R6103 += 1, R6104 += 1 };
  s0 -> s0 [0, 65535] { R6195 += 1, R6196 += 1 };
  s0 -> s2 [0, 65535] { R6196 += 1, R6104 += 1, R138 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R6196 += 1, R6103 += 1, R6104 += 1 };
  s1 -> s2 [0, 65535] { R6196 += 1, R6104 += 1, R138 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R6196 += 1 };
  s2 -> s2 [0, 65535] { R6196 += 1, R6104 += 1, R138 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R6196 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R6198 += 1, R6106 += 1 };
  s0 -> s2 [0, 65535] { R6198 += 1, R6106 += 1, R140 += 1 };
  s0 -> s0 [0, 65535] { R6197 += 1, R6198 += 1 };
  s0 -> s3 [0, 65535] { R6198 += 1, R6105 += 1, R6106 += 1 };
  s0 -> s1 [76, 65535] { R6198 += 1, R6106 += 1 };
  s1 -> s1 [0, 74] { R6198 += 1, R6106 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R6198 += 1 };
  s1 -> s1 [76, 65535] { R6198 += 1, R6106 += 1 };
  s2 -> s1 [0, 74] { R6198 += 1, R6106 += 1 };
  s2 -> s2 [0, 65535] { R6198 += 1, R6106 += 1, R140 += 1 };
  s2 -> s5 [0, 65535] { R6198 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [76, 65535] { R6198 += 1, R6106 += 1 };
  s3 -> s1 [0, 74] { R6198 += 1, R6106 += 1 };
  s3 -> s2 [0, 65535] { R6198 += 1, R6106 += 1, R140 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R6198 += 1, R6105 += 1, R6106 += 1 };
  s3 -> s1 [76, 65535] { R6198 += 1, R6106 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R6198 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R6199 += 1, R6200 += 1 };
  s0 -> s1 [0, 65535] { R6200 += 1, R6108 += 1, R144 += 1, R145 += 1 };
  s0 -> s2 [0, 65535] { R6200 += 1, R6108 += 1, R145 += 1, R146 += 1 };
  s0 -> s3 [0, 65535] { R6200 += 1, R6107 += 1, R6108 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R6200 += 1 };
  s1 -> s1 [0, 65535] { R6200 += 1, R6108 += 1, R144 += 1, R145 += 1 };
  s1 -> s2 [0, 65535] { R6200 += 1, R6108 += 1, R145 += 1, R146 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R6200 += 1, R6108 += 1 };
  s2 -> s6 [0, 65535] { R6200 += 1 };
  s2 -> s2 [0, 65535] { R6200 += 1, R6108 += 1, R145 += 1, R146 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R6200 += 1, R6108 += 1, R144 += 1, R145 += 1 };
  s3 -> s2 [0, 65535] { R6200 += 1, R6108 += 1, R145 += 1, R146 += 1 };
  s3 -> s3 [0, 65535] { R6200 += 1, R6107 += 1, R6108 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R6200 += 1, R6108 += 1 };
  s5 -> s6 [0, 65535] { R6200 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R6200 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R6202 += 1, R6110 += 1, R150 += 1 };
  s0 -> s2 [0, 65535] { R6202 += 1, R6109 += 1, R6110 += 1 };
  s0 -> s3 [0, 65535] { R6202 += 1, R6110 += 1, R149 += 1, R150 += 1 };
  s0 -> s0 [0, 65535] { R6201 += 1, R6202 += 1 };
  s0 -> s4 [75, 75] { R6202 += 1, R6110 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R6202 += 1, R6110 += 1, R150 += 1 };
  s0 -> s1 [86, 65535] { R6202 += 1, R6110 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R6202 += 1, R6110 += 1, R150 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R6202 += 1 };
  s1 -> s1 [0, 65535] { R6202 += 1, R6110 += 1 };
  s1 -> s4 [75, 75] { R6202 += 1, R6110 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R6202 += 1, R6110 += 1, R150 += 1 };
  s1 -> s1 [86, 65535] { R6202 += 1, R6110 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R6202 += 1, R6110 += 1, R150 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R6202 += 1, R6109 += 1, R6110 += 1 };
  s2 -> s3 [0, 65535] { R6202 += 1, R6110 += 1, R149 += 1, R150 += 1 };
  s2 -> s4 [75, 75] { R6202 += 1, R6110 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R6202 += 1, R6110 += 1, R150 += 1 };
  s2 -> s1 [86, 65535] { R6202 += 1, R6110 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R6202 += 1, R6110 += 1, R150 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R6202 += 1, R6110 += 1, R149 += 1, R150 += 1 };
  s3 -> s7 [0, 65535] { R6202 += 1 };
  s3 -> s4 [75, 75] { R6202 += 1, R6110 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R6202 += 1, R6110 += 1, R150 += 1 };
  s3 -> s1 [86, 65535] { R6202 += 1, R6110 += 1, R150 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R6202 += 1, R6110 += 1 };
  s4 -> s7 [0, 65535] { R6202 += 1 };
  s5 -> s5 [0, 75] { R6202 += 1, R6110 += 1, R150 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R6202 += 1 };
  s5 -> s5 [0, 65535] { R6202 += 1, R6110 += 1 };
  s5 -> s5 [86, 65535] { R6202 += 1, R6110 += 1, R150 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R6202 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R6204 += 1, R6112 += 1, R154 += 1 };
  s0 -> s2 [0, 65535] { R6204 += 1, R6112 += 1 };
  s0 -> s0 [0, 65535] { R6203 += 1, R6204 += 1 };
  s0 -> s3 [0, 65535] { R6204 += 1, R6111 += 1, R6112 += 1 };
  s1 -> s5 [0, 65535] { R6204 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R6204 += 1, R6112 += 1, R154 += 1 };
  s1 -> s2 [0, 65535] { R6204 += 1, R6112 += 1 };
  s2 -> s5 [0, 65535] { R6204 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R6204 += 1, R6112 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R6204 += 1, R6112 += 1, R154 += 1 };
  s3 -> s2 [0, 65535] { R6204 += 1, R6112 += 1 };
  s3 -> s3 [0, 65535] { R6204 += 1, R6111 += 1, R6112 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R6204 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R6206 += 1, R6114 += 1, R158 += 1, R159 += 1 };
  s0 -> s2 [0, 65535] { R6206 += 1, R6114 += 1, R159 += 1, R160 += 1 };
  s0 -> s3 [0, 65535] { R6206 += 1, R6113 += 1, R6114 += 1 };
  s0 -> s0 [0, 65535] { R6205 += 1, R6206 += 1 };
  s1 -> s1 [0, 65535] { R6206 += 1, R6114 += 1, R158 += 1, R159 += 1 };
  s1 -> s5 [0, 65535] { R6206 += 1 };
  s1 -> s2 [0, 65535] { R6206 += 1, R6114 += 1, R159 += 1, R160 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R6206 += 1 };
  s2 -> s6 [0, 65535] { R6206 += 1, R6114 += 1 };
  s2 -> s2 [0, 65535] { R6206 += 1, R6114 += 1, R159 += 1, R160 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R6206 += 1, R6114 += 1, R158 += 1, R159 += 1 };
  s3 -> s2 [0, 65535] { R6206 += 1, R6114 += 1, R159 += 1, R160 += 1 };
  s3 -> s3 [0, 65535] { R6206 += 1, R6113 += 1, R6114 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R6206 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R6206 += 1 };
  s6 -> s6 [0, 65535] { R6206 += 1, R6114 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R6208 += 1, R6116 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R6208 += 1, R6116 += 1, R165 += 1, R166 += 1 };
  s0 -> s0 [0, 65535] { R6207 += 1, R6208 += 1 };
  s0 -> s3 [0, 65535] { R6208 += 1, R6116 += 1, R164 += 1, R165 += 1 };
  s0 -> s4 [0, 65535] { R6208 += 1, R6115 += 1, R6116 += 1 };
  s0 -> s1 [76, 65535] { R6208 += 1, R6116 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R6208 += 1, R6116 += 1, R165 += 1 };
  s1 -> s6 [0, 65535] { R6208 += 1 };
  s1 -> s1 [0, 65535] { R6208 += 1, R6116 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R6208 += 1, R6116 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R6208 += 1, R6116 += 1, R165 += 1 };
  s2 -> s6 [0, 65535] { R6208 += 1 };
  s2 -> s2 [0, 65535] { R6208 += 1, R6116 += 1, R165 += 1, R166 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R6208 += 1, R6116 += 1 };
  s2 -> s1 [76, 65535] { R6208 += 1, R6116 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R6208 += 1, R6116 += 1, R165 += 1 };
  s3 -> s6 [0, 65535] { R6208 += 1 };
  s3 -> s2 [0, 65535] { R6208 += 1, R6116 += 1, R165 += 1, R166 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R6208 += 1, R6116 += 1, R164 += 1, R165 += 1 };
  s3 -> s1 [76, 65535] { R6208 += 1, R6116 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R6208 += 1, R6116 += 1, R165 += 1 };
  s4 -> s2 [0, 65535] { R6208 += 1, R6116 += 1, R165 += 1, R166 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R6208 += 1, R6116 += 1, R164 += 1, R165 += 1 };
  s4 -> s4 [0, 65535] { R6208 += 1, R6115 += 1, R6116 += 1 };
  s4 -> s1 [76, 65535] { R6208 += 1, R6116 += 1, R165 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6208 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R6208 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R6208 += 1, R6116 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R6210 += 1, R6118 += 1, R172 += 1, R174 += 1 };
  s0 -> s2 [0, 65535] { R6210 += 1, R6118 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s3 [0, 65535] { R6210 += 1, R6117 += 1, R6118 += 1 };
  s0 -> s0 [0, 65535] { R6209 += 1, R6210 += 1 };
  s0 -> s4 [0, 65535] { R6210 += 1, R6118 += 1, R171 += 1, R172 += 1 };
  s0 -> s1 [76, 65535] { R6210 += 1, R6118 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R6210 += 1, R6118 += 1, R172 += 1, R174 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R6210 += 1, R6118 += 1, R172 += 1 };
  s1 -> s7 [0, 65535] { R6210 += 1, R6118 += 1 };
  s1 -> s6 [0, 65535] { R6210 += 1 };
  s1 -> s1 [76, 65535] { R6210 += 1, R6118 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R6210 += 1, R6118 += 1, R172 += 1, R174 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R6210 += 1, R6118 += 1 };
  s2 -> s6 [0, 65535] { R6210 += 1 };
  s2 -> s2 [0, 65535] { R6210 += 1, R6118 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s1 [76, 65535] { R6210 += 1, R6118 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R6210 += 1, R6118 += 1, R172 += 1, R174 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R6210 += 1, R6118 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s3 [0, 65535] { R6210 += 1, R6117 += 1, R6118 += 1 };
  s3 -> s4 [0, 65535] { R6210 += 1, R6118 += 1, R171 += 1, R172 += 1 };
  s3 -> s1 [76, 65535] { R6210 += 1, R6118 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R6210 += 1, R6118 += 1, R172 += 1, R174 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R6210 += 1 };
  s4 -> s2 [0, 65535] { R6210 += 1, R6118 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s4 [0, 65535] { R6210 += 1, R6118 += 1, R171 += 1, R172 += 1 };
  s4 -> s1 [76, 65535] { R6210 += 1, R6118 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6210 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R6210 += 1, R6118 += 1 };
  s7 -> s6 [0, 65535] { R6210 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s0 [0, 65535] { R6211 += 1, R6212 += 1 };
  s0 -> s1 [0, 65535] { R6212 += 1, R6120 += 1, R181 += 1 };
  s0 -> s2 [0, 65535] { R6212 += 1, R6119 += 1, R6120 += 1 };
  s0 -> s3 [0, 65535] { R6212 += 1, R6120 += 1 };
  s1 -> s1 [0, 65535] { R6212 += 1, R6120 += 1, R181 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s3 [0, 65535] { R6212 += 1, R6120 += 1 };
  s1 -> s5 [0, 65535] { R6212 += 1 };
  s2 -> s1 [0, 65535] { R6212 += 1, R6120 += 1, R181 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R6212 += 1, R6119 += 1, R6120 += 1 };
  s2 -> s3 [0, 65535] { R6212 += 1, R6120 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R6212 += 1, R6120 += 1 };
  s3 -> s5 [0, 65535] { R6212 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R6212 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R6214 += 1, R6122 += 1, R190 += 1, R192 += 1 };
  s0 -> s2 [0, 65535] { R6214 += 1, R6122 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s0 -> s3 [0, 65535] { R6214 += 1, R6121 += 1, R6122 += 1 };
  s0 -> s4 [0, 65535] { R6214 += 1, R6122 += 1, R189 += 1, R190 += 1 };
  s0 -> s0 [0, 65535] { R6213 += 1, R6214 += 1 };
  s0 -> s1 [85, 65535] { R6214 += 1, R6122 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 75] { R6214 += 1, R6122 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 65535] { R6214 += 1, R6122 += 1, R190 += 1 };
  s1 -> s7 [0, 65535] { R6214 += 1, R6122 += 1 };
  s1 -> s5 [0, 65535] { R6214 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [85, 65535] { R6214 += 1, R6122 += 1, R190 += 1, R192 += 1 };
  s2 -> s1 [0, 75] { R6214 += 1, R6122 += 1, R190 += 1, R192 += 1 };
  s2 -> s2 [0, 65535] { R6214 += 1, R6122 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s2 -> s7 [0, 65535] { R6214 += 1, R6122 += 1 };
  s2 -> s5 [0, 65535] { R6214 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [85, 65535] { R6214 += 1, R6122 += 1, R190 += 1, R192 += 1 };
  s3 -> s1 [0, 75] { R6214 += 1, R6122 += 1, R190 += 1, R192 += 1 };
  s3 -> s2 [0, 65535] { R6214 += 1, R6122 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s3 -> s3 [0, 65535] { R6214 += 1, R6121 += 1, R6122 += 1 };
  s3 -> s4 [0, 65535] { R6214 += 1, R6122 += 1, R189 += 1, R190 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [85, 65535] { R6214 += 1, R6122 += 1, R190 += 1, R192 += 1 };
  s4 -> s1 [0, 75] { R6214 += 1, R6122 += 1, R190 += 1, R192 += 1 };
  s4 -> s2 [0, 65535] { R6214 += 1, R6122 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s4 -> s4 [0, 65535] { R6214 += 1, R6122 += 1, R189 += 1, R190 += 1 };
  s4 -> s5 [0, 65535] { R6214 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s1 [85, 65535] { R6214 += 1, R6122 += 1, R190 += 1, R192 += 1 };
  s5 -> s5 [0, 65535] { R6214 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R6214 += 1, R6122 += 1 };
  s7 -> s5 [0, 65535] { R6214 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R6216 += 1, R6123 += 1, R6124 += 1 };
  s0 -> s2 [0, 65535] { R6216 += 1, R6124 += 1 };
  s0 -> s0 [0, 65535] { R6215 += 1, R6216 += 1 };
  s1 -> s1 [0, 65535] { R6216 += 1, R6123 += 1, R6124 += 1 };
  s1 -> s2 [0, 65535] { R6216 += 1, R6124 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R6216 += 1, R6124 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R6216 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R6216 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 74] { R6218 += 1, R6126 += 1, R6094 += 1, R6096 += 1 };
  s0 -> s2 [0, 65535] { R6218 += 1, R6126 += 1, R6094 += 1, R6095 += 1, R6096 += 1 };
  s0 -> s0 [0, 65535] { R6217 += 1, R6218 += 1 };
  s0 -> s3 [0, 65535] { R6218 += 1, R6125 += 1, R6126 += 1 };
  s0 -> s4 [75, 75] { R6218 += 1, R6126 += 1, R6094 += 1, R6096 += 1 };
  s0 -> s5 [85, 85] { R6218 += 1, R6126 += 1, R6094 += 1, R6096 += 1 };
  s0 -> s1 [86, 65535] { R6218 += 1, R6126 += 1, R6094 += 1, R6096 += 1 };
  s1 -> s1 [0, 74] { R6218 += 1, R6126 += 1, R6094 += 1, R6096 += 1 };
  s1 -> s4 [75, 75] { R6218 += 1, R6126 += 1, R6094 += 1, R6096 += 1 };
  s1 -> s5 [85, 85] { R6218 += 1, R6126 += 1, R6094 += 1, R6096 += 1 };
  s1 -> s1 [86, 65535] { R6218 += 1, R6126 += 1, R6094 += 1, R6096 += 1 };
  s2 -> s1 [0, 74] { R6218 += 1, R6126 += 1, R6094 += 1, R6096 += 1 };
  s2 -> s2 [0, 65535] { R6218 += 1, R6126 += 1, R6094 += 1, R6095 += 1, R6096 += 1 };
  s2 -> s4 [75, 75] { R6218 += 1, R6126 += 1, R6094 += 1, R6096 += 1 };
  s2 -> s5 [85, 85] { R6218 += 1, R6126 += 1, R6094 += 1, R6096 += 1 };
  s2 -> s1 [86, 65535] { R6218 += 1, R6126 += 1, R6094 += 1, R6096 += 1 };
  s3 -> s1 [0, 74] { R6218 += 1, R6126 += 1, R6094 += 1, R6096 += 1 };
  s3 -> s2 [0, 65535] { R6218 += 1, R6126 += 1, R6094 += 1, R6095 += 1, R6096 += 1 };
  s3 -> s3 [0, 65535] { R6218 += 1, R6125 += 1, R6126 += 1 };
  s3 -> s4 [75, 75] { R6218 += 1, R6126 += 1, R6094 += 1, R6096 += 1 };
  s3 -> s5 [85, 85] { R6218 += 1, R6126 += 1, R6094 += 1, R6096 += 1 };
  s3 -> s1 [86, 65535] { R6218 += 1, R6126 += 1, R6094 += 1, R6096 += 1 };
  s4 -> s4 [0, 75] { R6218 += 1, R6126 += 1, R6094 += 1, R6096 += 1 };
  s4 -> s9 [85, 85] { R6218 += 1, R6126 += 1, R6094 += 1, R6096 += 1 };
  s4 -> s4 [86, 65535] { R6218 += 1, R6126 += 1, R6094 += 1, R6096 += 1 };
  s5 -> s5 [0, 74] { R6218 += 1, R6126 += 1, R6094 += 1, R6096 += 1 };
  s5 -> s5 [0, 65535] { R6218 += 1, R6126 += 1, R6094 += 1 };
  s5 -> s6 [0, 65535] { R6218 += 1, R6126 += 1 };
  s5 -> s7 [0, 65535] { R6218 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s9 [75, 75] { R6218 += 1, R6126 += 1, R6094 += 1, R6096 += 1 };
  s5 -> s10 [75, 75] { R6218 += 1, R6126 += 1, R6094 += 1, R6096 += 1 };
  s5 -> s5 [85, 65535] { R6218 += 1, R6126 += 1, R6094 += 1, R6096 += 1 };
  s6 -> s6 [0, 65535] { R6218 += 1, R6126 += 1 };
  s6 -> s7 [0, 65535] { R6218 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R6218 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 75] { R6218 += 1, R6126 += 1, R6094 += 1, R6096 += 1 };
  s9 -> s6 [0, 65535] { R6218 += 1, R6126 += 1 };
  s9 -> s7 [0, 65535] { R6218 += 1 };
  s9 -> s9 [0, 65535] { R6218 += 1, R6126 += 1, R6094 += 1 };
  s9 -> s8 [0, 65535];
  s9 -> s9 [85, 65535] { R6218 += 1, R6126 += 1, R6094 += 1, R6096 += 1 };
  s10 -> s6 [0, 65535] { R6218 += 1, R6126 += 1 };
  s10 -> s7 [0, 65535] { R6218 += 1 };
  s10 -> s10 [0, 65535] { R6218 += 1, R6126 += 1, R6094 += 1 };
  s10 -> s8 [0, 65535];
  accepting s8, s5, s9, s6, s7, s10;
};
automaton value2_40 {
  init s0;
  s0 -> s0 [0, 65535] { R6219 += 1, R6220 += 1 };
  s0 -> s1 [0, 65535] { R6220 += 1, R6155 += 1, R6156 += 1 };
  s0 -> s2 [0, 65535] { R6220 += 1, R6156 += 1, R23 += 1 };
  s1 -> s1 [0, 65535] { R6220 += 1, R6155 += 1, R6156 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R6220 += 1, R6156 += 1, R23 += 1 };
  s2 -> s3 [0, 65535] { R6220 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R6220 += 1, R6156 += 1, R23 += 1 };
  s3 -> s3 [0, 65535] { R6220 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R6222 += 1, R6158 += 1 };
  s0 -> s2 [0, 65535] { R6222 += 1, R6157 += 1, R6158 += 1 };
  s0 -> s0 [0, 65535] { R6221 += 1, R6222 += 1 };
  s0 -> s3 [70, 70] { R6222 += 1, R6158 += 1 };
  s0 -> s4 [70, 70] { R6222 += 1, R6158 += 1 };
  s0 -> s5 [75, 75] { R6222 += 1, R6158 += 1 };
  s0 -> s1 [76, 65535] { R6222 += 1, R6158 += 1 };
  s1 -> s1 [0, 69] { R6222 += 1, R6158 += 1 };
  s1 -> s3 [70, 70] { R6222 += 1, R6158 += 1 };
  s1 -> s4 [70, 70] { R6222 += 1, R6158 += 1 };
  s1 -> s5 [75, 75] { R6222 += 1, R6158 += 1 };
  s1 -> s1 [76, 65535] { R6222 += 1, R6158 += 1 };
  s2 -> s1 [0, 69] { R6222 += 1, R6158 += 1 };
  s2 -> s2 [0, 65535] { R6222 += 1, R6157 += 1, R6158 += 1 };
  s2 -> s3 [70, 70] { R6222 += 1, R6158 += 1 };
  s2 -> s4 [70, 70] { R6222 += 1, R6158 += 1 };
  s2 -> s5 [75, 75] { R6222 += 1, R6158 += 1 };
  s2 -> s1 [76, 65535] { R6222 += 1, R6158 += 1 };
  s4 -> s4 [0, 70] { R6222 += 1, R6158 += 1 };
  s4 -> s7 [75, 75] { R6222 += 1, R6158 += 1 };
  s4 -> s4 [76, 65535] { R6222 += 1, R6158 += 1 };
  s5 -> s5 [0, 69] { R6222 += 1, R6158 += 1 };
  s5 -> s5 [0, 65535] { R6222 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R6222 += 1, R6158 += 1 };
  s5 -> s8 [70, 70] { R6222 += 1, R6158 += 1 };
  s5 -> s5 [75, 65535] { R6222 += 1, R6158 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R6222 += 1, R6158 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R6222 += 1 };
  s7 -> s7 [75, 65535] { R6222 += 1, R6158 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R6222 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R6224 += 1, R6160 += 1, R137 += 1 };
  s0 -> s2 [0, 65535] { R6224 += 1, R6159 += 1, R6160 += 1 };
  s0 -> s0 [0, 65535] { R6223 += 1, R6224 += 1 };
  s0 -> s3 [70, 70] { R6224 += 1, R6160 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R6224 += 1, R6160 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R6224 += 1, R6160 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R6224 += 1, R6160 += 1, R137 += 1 };
  s1 -> s1 [0, 65535] { R6224 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R6224 += 1, R6160 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R6224 += 1, R6160 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R6224 += 1, R6160 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R6224 += 1, R6160 += 1, R137 += 1 };
  s2 -> s2 [0, 65535] { R6224 += 1, R6159 += 1, R6160 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R6224 += 1, R6160 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R6224 += 1, R6160 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R6224 += 1, R6160 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R6224 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R6224 += 1, R6160 += 1, R137 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R6224 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6224 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R6226 += 1, R6162 += 1, R139 += 1 };
  s0 -> s2 [0, 65535] { R6226 += 1, R6161 += 1, R6162 += 1 };
  s0 -> s0 [0, 65535] { R6225 += 1, R6226 += 1 };
  s0 -> s3 [70, 70] { R6226 += 1, R6162 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R6226 += 1, R6162 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R6226 += 1, R6162 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R6226 += 1, R6162 += 1, R139 += 1 };
  s1 -> s1 [0, 65535] { R6226 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R6226 += 1, R6162 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R6226 += 1, R6162 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R6226 += 1, R6162 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R6226 += 1, R6162 += 1, R139 += 1 };
  s2 -> s2 [0, 65535] { R6226 += 1, R6161 += 1, R6162 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R6226 += 1, R6162 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R6226 += 1, R6162 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R6226 += 1, R6162 += 1, R139 += 1 };
  s3 -> s3 [0, 65535] { R6226 += 1, R6162 += 1, R139 += 1 };
  s3 -> s6 [0, 65535] { R6226 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R6226 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6226 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R6228 += 1, R6164 += 1, R141 += 1, R142 += 1 };
  s0 -> s2 [0, 65535] { R6228 += 1, R6163 += 1, R6164 += 1 };
  s0 -> s0 [0, 65535] { R6227 += 1, R6228 += 1 };
  s0 -> s3 [70, 70] { R6228 += 1, R6164 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R6228 += 1, R6164 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R6228 += 1, R6164 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R6228 += 1, R6164 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 65535] { R6228 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R6228 += 1, R6164 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R6228 += 1, R6164 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R6228 += 1, R6164 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R6228 += 1, R6164 += 1, R141 += 1, R142 += 1 };
  s2 -> s2 [0, 65535] { R6228 += 1, R6163 += 1, R6164 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R6228 += 1, R6164 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R6228 += 1, R6164 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R6228 += 1, R6164 += 1, R141 += 1, R142 += 1 };
  s3 -> s3 [0, 65535] { R6228 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R6228 += 1, R6164 += 1, R141 += 1, R142 += 1 };
  s4 -> s6 [0, 65535] { R6228 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6228 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R6230 += 1, R6166 += 1, R147 += 1, R148 += 1 };
  s0 -> s0 [0, 65535] { R6229 += 1, R6230 += 1 };
  s0 -> s2 [0, 65535] { R6230 += 1, R6165 += 1, R6166 += 1 };
  s0 -> s3 [70, 70] { R6230 += 1, R6166 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R6230 += 1, R6166 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R6230 += 1, R6166 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R6230 += 1, R6166 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 65535] { R6230 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R6230 += 1, R6166 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R6230 += 1, R6166 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R6230 += 1, R6166 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R6230 += 1, R6166 += 1, R147 += 1, R148 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R6230 += 1, R6165 += 1, R6166 += 1 };
  s2 -> s3 [70, 70] { R6230 += 1, R6166 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R6230 += 1, R6166 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R6230 += 1, R6166 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R6230 += 1, R6166 += 1, R147 += 1, R148 += 1 };
  s3 -> s6 [0, 65535] { R6230 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R6230 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6230 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R6232 += 1, R6168 += 1, R151 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R6232 += 1, R6168 += 1, R152 += 1 };
  s0 -> s3 [0, 65535] { R6232 += 1, R6167 += 1, R6168 += 1 };
  s0 -> s0 [0, 65535] { R6231 += 1, R6232 += 1 };
  s0 -> s4 [70, 70] { R6232 += 1, R6168 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R6232 += 1, R6168 += 1, R151 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R6232 += 1, R6168 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R6232 += 1, R6168 += 1, R151 += 1, R152 += 1 };
  s0 -> s2 [71, 74] { R6232 += 1, R6168 += 1, R152 += 1 };
  s0 -> s1 [71, 65535] { R6232 += 1, R6168 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R6232 += 1, R6168 += 1, R152 += 1 };
  s0 -> s2 [76, 65535] { R6232 += 1, R6168 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R6232 += 1, R6168 += 1, R151 += 1, R152 += 1 };
  s1 -> s2 [0, 69] { R6232 += 1, R6168 += 1, R152 += 1 };
  s1 -> s4 [70, 70] { R6232 += 1, R6168 += 1, R152 += 1 };
  s1 -> s5 [70, 70] { R6232 += 1, R6168 += 1, R151 += 1, R152 += 1 };
  s1 -> s6 [70, 70] { R6232 += 1, R6168 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R6232 += 1, R6168 += 1, R151 += 1, R152 += 1 };
  s1 -> s2 [71, 74] { R6232 += 1, R6168 += 1, R152 += 1 };
  s1 -> s1 [71, 65535] { R6232 += 1, R6168 += 1, R151 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R6232 += 1, R6168 += 1, R152 += 1 };
  s1 -> s2 [76, 65535] { R6232 += 1, R6168 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R6232 += 1, R6168 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R6232 += 1, R6168 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R6232 += 1, R6168 += 1, R152 += 1 };
  s2 -> s2 [71, 74] { R6232 += 1, R6168 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R6232 += 1, R6168 += 1, R152 += 1 };
  s2 -> s2 [76, 65535] { R6232 += 1, R6168 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R6232 += 1, R6168 += 1, R151 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R6232 += 1, R6168 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R6232 += 1, R6167 += 1, R6168 += 1 };
  s3 -> s4 [70, 70] { R6232 += 1, R6168 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R6232 += 1, R6168 += 1, R151 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R6232 += 1, R6168 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R6232 += 1, R6168 += 1, R151 += 1, R152 += 1 };
  s3 -> s2 [71, 74] { R6232 += 1, R6168 += 1, R152 += 1 };
  s3 -> s1 [71, 65535] { R6232 += 1, R6168 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R6232 += 1, R6168 += 1, R152 += 1 };
  s3 -> s2 [76, 65535] { R6232 += 1, R6168 += 1, R152 += 1 };
  s4 -> s4 [0, 74] { R6232 += 1, R6168 += 1, R152 += 1 };
  s4 -> s11 [75, 75] { R6232 += 1, R6168 += 1, R152 += 1 };
  s4 -> s4 [76, 65535] { R6232 += 1, R6168 += 1, R152 += 1 };
  s7 -> s4 [0, 74] { R6232 += 1, R6168 += 1, R152 += 1 };
  s7 -> s7 [0, 65535] { R6232 += 1, R6168 += 1, R151 += 1, R152 += 1 };
  s7 -> s11 [75, 75] { R6232 += 1, R6168 += 1, R152 += 1 };
  s7 -> s4 [76, 65535] { R6232 += 1, R6168 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R6232 += 1, R6168 += 1, R152 += 1 };
  s8 -> s8 [0, 65535] { R6232 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R6232 += 1, R6168 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R6232 += 1, R6168 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R6232 += 1, R6168 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R6232 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R6232 += 1 };
  s11 -> s11 [0, 65535] { R6232 += 1, R6168 += 1, R152 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R6232 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R6234 += 1, R6170 += 1, R155 += 1, R156 += 1 };
  s0 -> s0 [0, 65535] { R6233 += 1, R6234 += 1 };
  s0 -> s2 [0, 65535] { R6234 += 1, R6169 += 1, R6170 += 1 };
  s0 -> s3 [70, 70] { R6234 += 1, R6170 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R6234 += 1, R6170 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R6234 += 1, R6170 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R6234 += 1, R6170 += 1, R155 += 1, R156 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R6234 += 1 };
  s1 -> s3 [70, 70] { R6234 += 1, R6170 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R6234 += 1, R6170 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R6234 += 1, R6170 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R6234 += 1, R6170 += 1, R155 += 1, R156 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R6234 += 1, R6169 += 1, R6170 += 1 };
  s2 -> s3 [70, 70] { R6234 += 1, R6170 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R6234 += 1, R6170 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R6234 += 1, R6170 += 1, R155 += 1, R156 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R6234 += 1 };
  s4 -> s5 [0, 65535] { R6234 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R6234 += 1, R6170 += 1, R155 += 1, R156 += 1 };
  s5 -> s5 [0, 65535] { R6234 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R6236 += 1, R6172 += 1, R161 += 1, R162 += 1 };
  s0 -> s0 [0, 65535] { R6235 += 1, R6236 += 1 };
  s0 -> s2 [0, 65535] { R6236 += 1, R6171 += 1, R6172 += 1 };
  s0 -> s3 [70, 70] { R6236 += 1, R6172 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R6236 += 1, R6172 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R6236 += 1, R6172 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R6236 += 1, R6172 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535] { R6236 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R6236 += 1, R6172 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R6236 += 1, R6172 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R6236 += 1, R6172 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R6236 += 1, R6172 += 1, R161 += 1, R162 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R6236 += 1, R6171 += 1, R6172 += 1 };
  s2 -> s3 [70, 70] { R6236 += 1, R6172 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R6236 += 1, R6172 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R6236 += 1, R6172 += 1, R161 += 1, R162 += 1 };
  s3 -> s3 [0, 65535] { R6236 += 1, R6172 += 1, R161 += 1, R162 += 1 };
  s3 -> s6 [0, 65535] { R6236 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R6236 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6236 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R6238 += 1, R6174 += 1, R167 += 1, R168 += 1 };
  s0 -> s0 [0, 65535] { R6237 += 1, R6238 += 1 };
  s0 -> s2 [0, 65535] { R6238 += 1, R6173 += 1, R6174 += 1 };
  s0 -> s3 [70, 70] { R6238 += 1, R6174 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R6238 += 1, R6174 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R6238 += 1, R6174 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R6238 += 1, R6174 += 1, R167 += 1, R168 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R6238 += 1 };
  s1 -> s3 [70, 70] { R6238 += 1, R6174 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R6238 += 1, R6174 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R6238 += 1, R6174 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R6238 += 1, R6174 += 1, R167 += 1, R168 += 1 };
  s2 -> s2 [0, 65535] { R6238 += 1, R6173 += 1, R6174 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R6238 += 1, R6174 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R6238 += 1, R6174 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R6238 += 1, R6174 += 1, R167 += 1, R168 += 1 };
  s3 -> s3 [0, 65535] { R6238 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R6238 += 1 };
  s4 -> s4 [0, 65535] { R6238 += 1, R6174 += 1, R167 += 1, R168 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R6238 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R6240 += 1, R6176 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s2 [0, 69] { R6240 += 1, R6176 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s3 [0, 69] { R6240 += 1, R6176 += 1, R175 += 1, R176 += 1 };
  s0 -> s4 [0, 65535] { R6240 += 1, R6175 += 1, R6176 += 1 };
  s0 -> s0 [0, 65535] { R6239 += 1, R6240 += 1 };
  s0 -> s5 [70, 70] { R6240 += 1, R6176 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s6 [70, 70] { R6240 += 1, R6176 += 1, R175 += 1, R176 += 1 };
  s0 -> s7 [70, 70] { R6240 += 1, R6176 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s8 [70, 70] { R6240 += 1, R6176 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s9 [70, 70] { R6240 += 1, R6176 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s10 [70, 70] { R6240 += 1, R6176 += 1, R175 += 1, R176 += 1 };
  s0 -> s1 [71, 65535] { R6240 += 1, R6176 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s2 [71, 65535] { R6240 += 1, R6176 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s3 [71, 65535] { R6240 += 1, R6176 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [0, 69] { R6240 += 1, R6176 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s14 [0, 69] { R6240 += 1, R6176 += 1, R176 += 1 };
  s1 -> s5 [70, 70] { R6240 += 1, R6176 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s11 [70, 70] { R6240 += 1, R6176 += 1, R176 += 1 };
  s1 -> s7 [70, 70] { R6240 += 1, R6176 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s15 [70, 70] { R6240 += 1, R6176 += 1, R176 += 1 };
  s1 -> s1 [71, 65535] { R6240 += 1, R6176 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s14 [71, 65535] { R6240 += 1, R6176 += 1, R176 += 1 };
  s2 -> s1 [0, 69] { R6240 += 1, R6176 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [0, 69] { R6240 += 1, R6176 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s5 [70, 70] { R6240 += 1, R6176 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s7 [70, 70] { R6240 += 1, R6176 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s8 [70, 70] { R6240 += 1, R6176 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s9 [70, 70] { R6240 += 1, R6176 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s1 [71, 65535] { R6240 += 1, R6176 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [71, 65535] { R6240 += 1, R6176 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s1 [0, 69] { R6240 += 1, R6176 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s2 [0, 69] { R6240 += 1, R6176 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s3 [0, 69] { R6240 += 1, R6176 += 1, R175 += 1, R176 += 1 };
  s3 -> s5 [70, 70] { R6240 += 1, R6176 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s6 [70, 70] { R6240 += 1, R6176 += 1, R175 += 1, R176 += 1 };
  s3 -> s7 [70, 70] { R6240 += 1, R6176 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s8 [70, 70] { R6240 += 1, R6176 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s9 [70, 70] { R6240 += 1, R6176 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s10 [70, 70] { R6240 += 1, R6176 += 1, R175 += 1, R176 += 1 };
  s3 -> s1 [71, 65535] { R6240 += 1, R6176 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s2 [71, 65535] { R6240 += 1, R6176 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s3 [71, 65535] { R6240 += 1, R6176 += 1, R175 += 1, R176 += 1 };
  s4 -> s1 [0, 69] { R6240 += 1, R6176 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s2 [0, 69] { R6240 += 1, R6176 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s3 [0, 69] { R6240 += 1, R6176 += 1, R175 += 1, R176 += 1 };
  s4 -> s4 [0, 65535] { R6240 += 1, R6175 += 1, R6176 += 1 };
  s4 -> s5 [70, 70] { R6240 += 1, R6176 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s6 [70, 70] { R6240 += 1, R6176 += 1, R175 += 1, R176 += 1 };
  s4 -> s7 [70, 70] { R6240 += 1, R6176 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s8 [70, 70] { R6240 += 1, R6176 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s9 [70, 70] { R6240 += 1, R6176 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s10 [70, 70] { R6240 += 1, R6176 += 1, R175 += 1, R176 += 1 };
  s4 -> s1 [71, 65535] { R6240 += 1, R6176 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s2 [71, 65535] { R6240 += 1, R6176 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s3 [71, 65535] { R6240 += 1, R6176 += 1, R175 += 1, R176 += 1 };
  s7 -> s11 [0, 65535] { R6240 += 1, R6176 += 1, R176 += 1 };
  s7 -> s7 [0, 65535] { R6240 += 1, R6176 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s8 -> s7 [0, 65535] { R6240 += 1, R6176 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s8 -> s8 [0, 65535] { R6240 += 1, R6176 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s10 -> s7 [0, 65535] { R6240 += 1, R6176 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s10 -> s8 [0, 65535] { R6240 += 1, R6176 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s10 -> s10 [0, 65535] { R6240 += 1, R6176 += 1, R175 += 1, R176 += 1 };
  s11 -> s11 [0, 65535] { R6240 += 1, R6176 += 1, R176 += 1 };
  s11 -> s12 [0, 65535] { R6240 += 1 };
  s11 -> s13 [0, 65535];
  s12 -> s12 [0, 65535] { R6240 += 1 };
  s12 -> s13 [0, 65535];
  s13 -> s13 [0, 65535];
  s14 -> s14 [0, 69] { R6240 += 1, R6176 += 1, R176 += 1 };
  s14 -> s14 [0, 65535] { R6240 += 1 };
  s14 -> s13 [0, 65535];
  s14 -> s11 [70, 70] { R6240 += 1, R6176 += 1, R176 += 1 };
  s14 -> s15 [70, 70] { R6240 += 1, R6176 += 1, R176 += 1 };
  s14 -> s14 [71, 65535] { R6240 += 1, R6176 += 1, R176 += 1 };
  s15 -> s13 [0, 65535];
  s15 -> s15 [0, 65535] { R6240 += 1 };
  accepting s12, s13, s14, s15, s11;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R6242 += 1, R6178 += 1, R185 += 1, R186 += 1 };
  s0 -> s0 [0, 65535] { R6241 += 1, R6242 += 1 };
  s0 -> s2 [0, 65535] { R6242 += 1, R6177 += 1, R6178 += 1 };
  s0 -> s3 [70, 70] { R6242 += 1, R6178 += 1, R185 += 1, R186 += 1 };
  s0 -> s4 [70, 70] { R6242 += 1, R6178 += 1, R185 += 1, R186 += 1 };
  s0 -> s1 [71, 65535] { R6242 += 1, R6178 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 69] { R6242 += 1, R6178 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 65535] { R6242 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R6242 += 1, R6178 += 1, R185 += 1, R186 += 1 };
  s1 -> s4 [70, 70] { R6242 += 1, R6178 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [71, 65535] { R6242 += 1, R6178 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [0, 69] { R6242 += 1, R6178 += 1, R185 += 1, R186 += 1 };
  s2 -> s2 [0, 65535] { R6242 += 1, R6177 += 1, R6178 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R6242 += 1, R6178 += 1, R185 += 1, R186 += 1 };
  s2 -> s4 [70, 70] { R6242 += 1, R6178 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [71, 65535] { R6242 += 1, R6178 += 1, R185 += 1, R186 += 1 };
  s3 -> s3 [0, 65535] { R6242 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R6242 += 1 };
  s4 -> s4 [0, 65535] { R6242 += 1, R6178 += 1, R185 += 1, R186 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R6242 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R6244 += 1, R6180 += 1, R5289 += 1, R5290 += 1 };
  s0 -> s2 [0, 69] { R6244 += 1, R6180 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s0 -> s3 [0, 69] { R6244 += 1, R6180 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s0 -> s4 [0, 65535] { R6244 += 1, R6179 += 1, R6180 += 1 };
  s0 -> s0 [0, 65535] { R6243 += 1, R6244 += 1 };
  s0 -> s5 [70, 70] { R6244 += 1, R6180 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s0 -> s6 [70, 70] { R6244 += 1, R6180 += 1, R5289 += 1, R5290 += 1 };
  s0 -> s7 [70, 70] { R6244 += 1, R6180 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s0 -> s8 [70, 70] { R6244 += 1, R6180 += 1, R5289 += 1, R5290 += 1 };
  s0 -> s9 [70, 70] { R6244 += 1, R6180 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s0 -> s10 [70, 70] { R6244 += 1, R6180 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s0 -> s1 [71, 65535] { R6244 += 1, R6180 += 1, R5289 += 1, R5290 += 1 };
  s0 -> s2 [71, 65535] { R6244 += 1, R6180 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s0 -> s3 [71, 65535] { R6244 += 1, R6180 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s1 -> s1 [0, 69] { R6244 += 1, R6180 += 1, R5289 += 1, R5290 += 1 };
  s1 -> s2 [0, 69] { R6244 += 1, R6180 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s1 -> s3 [0, 69] { R6244 += 1, R6180 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s1 -> s5 [70, 70] { R6244 += 1, R6180 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s1 -> s6 [70, 70] { R6244 += 1, R6180 += 1, R5289 += 1, R5290 += 1 };
  s1 -> s7 [70, 70] { R6244 += 1, R6180 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s1 -> s8 [70, 70] { R6244 += 1, R6180 += 1, R5289 += 1, R5290 += 1 };
  s1 -> s9 [70, 70] { R6244 += 1, R6180 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s1 -> s10 [70, 70] { R6244 += 1, R6180 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s1 -> s1 [71, 65535] { R6244 += 1, R6180 += 1, R5289 += 1, R5290 += 1 };
  s1 -> s2 [71, 65535] { R6244 += 1, R6180 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s1 -> s3 [71, 65535] { R6244 += 1, R6180 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s2 -> s15 [0, 69] { R6244 += 1, R6180 += 1 };
  s2 -> s2 [0, 69] { R6244 += 1, R6180 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s2 -> s3 [0, 69] { R6244 += 1, R6180 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s2 -> s11 [70, 70] { R6244 += 1, R6180 += 1 };
  s2 -> s18 [70, 70] { R6244 += 1, R6180 += 1 };
  s2 -> s5 [70, 70] { R6244 += 1, R6180 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s2 -> s7 [70, 70] { R6244 += 1, R6180 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s2 -> s9 [70, 70] { R6244 += 1, R6180 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s2 -> s10 [70, 70] { R6244 += 1, R6180 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s2 -> s15 [71, 65535] { R6244 += 1, R6180 += 1 };
  s2 -> s2 [71, 65535] { R6244 += 1, R6180 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s2 -> s3 [71, 65535] { R6244 += 1, R6180 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s3 -> s15 [0, 69] { R6244 += 1, R6180 += 1 };
  s3 -> s16 [0, 69] { R6244 += 1, R6180 += 1, R5290 += 1 };
  s3 -> s3 [0, 69] { R6244 += 1, R6180 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s3 -> s17 [70, 70] { R6244 += 1, R6180 += 1, R5290 += 1 };
  s3 -> s11 [70, 70] { R6244 += 1, R6180 += 1 };
  s3 -> s18 [70, 70] { R6244 += 1, R6180 += 1 };
  s3 -> s7 [70, 70] { R6244 += 1, R6180 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s3 -> s10 [70, 70] { R6244 += 1, R6180 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s3 -> s12 [70, 70] { R6244 += 1, R6180 += 1, R5290 += 1 };
  s3 -> s15 [71, 65535] { R6244 += 1, R6180 += 1 };
  s3 -> s16 [71, 65535] { R6244 += 1, R6180 += 1, R5290 += 1 };
  s3 -> s3 [71, 65535] { R6244 += 1, R6180 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s4 -> s1 [0, 69] { R6244 += 1, R6180 += 1, R5289 += 1, R5290 += 1 };
  s4 -> s2 [0, 69] { R6244 += 1, R6180 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s4 -> s3 [0, 69] { R6244 += 1, R6180 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s4 -> s4 [0, 65535] { R6244 += 1, R6179 += 1, R6180 += 1 };
  s4 -> s5 [70, 70] { R6244 += 1, R6180 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s4 -> s6 [70, 70] { R6244 += 1, R6180 += 1, R5289 += 1, R5290 += 1 };
  s4 -> s7 [70, 70] { R6244 += 1, R6180 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s4 -> s8 [70, 70] { R6244 += 1, R6180 += 1, R5289 += 1, R5290 += 1 };
  s4 -> s9 [70, 70] { R6244 += 1, R6180 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s4 -> s10 [70, 70] { R6244 += 1, R6180 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s4 -> s1 [71, 65535] { R6244 += 1, R6180 += 1, R5289 += 1, R5290 += 1 };
  s4 -> s2 [71, 65535] { R6244 += 1, R6180 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s4 -> s3 [71, 65535] { R6244 += 1, R6180 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s5 -> s11 [0, 65535] { R6244 += 1, R6180 += 1 };
  s5 -> s5 [0, 65535] { R6244 += 1, R6180 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s5 -> s10 [0, 65535] { R6244 += 1, R6180 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s6 -> s5 [0, 65535] { R6244 += 1, R6180 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s6 -> s6 [0, 65535] { R6244 += 1, R6180 += 1, R5289 += 1, R5290 += 1 };
  s6 -> s10 [0, 65535] { R6244 += 1, R6180 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s10 -> s11 [0, 65535] { R6244 += 1, R6180 += 1 };
  s10 -> s10 [0, 65535] { R6244 += 1, R6180 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s10 -> s12 [0, 65535] { R6244 += 1, R6180 += 1, R5290 += 1 };
  s11 -> s11 [0, 65535] { R6244 += 1, R6180 += 1 };
  s11 -> s13 [0, 65535];
  s11 -> s14 [0, 65535] { R6244 += 1 };
  s12 -> s11 [0, 65535] { R6244 += 1, R6180 += 1 };
  s12 -> s12 [0, 65535] { R6244 += 1, R6180 += 1, R5290 += 1 };
  s13 -> s13 [0, 65535];
  s14 -> s13 [0, 65535];
  s14 -> s14 [0, 65535] { R6244 += 1 };
  s15 -> s15 [0, 69] { R6244 += 1, R6180 += 1 };
  s15 -> s13 [0, 65535];
  s15 -> s15 [0, 65535] { R6244 += 1 };
  s15 -> s11 [70, 70] { R6244 += 1, R6180 += 1 };
  s15 -> s18 [70, 70] { R6244 += 1, R6180 += 1 };
  s15 -> s15 [71, 65535] { R6244 += 1, R6180 += 1 };
  s16 -> s15 [0, 69] { R6244 += 1, R6180 += 1 };
  s16 -> s16 [0, 69] { R6244 += 1, R6180 += 1, R5290 += 1 };
  s16 -> s17 [70, 70] { R6244 += 1, R6180 += 1, R5290 += 1 };
  s16 -> s11 [70, 70] { R6244 += 1, R6180 += 1 };
  s16 -> s18 [70, 70] { R6244 += 1, R6180 += 1 };
  s16 -> s12 [70, 70] { R6244 += 1, R6180 += 1, R5290 += 1 };
  s16 -> s15 [71, 65535] { R6244 += 1, R6180 += 1 };
  s16 -> s16 [71, 65535] { R6244 += 1, R6180 += 1, R5290 += 1 };
  s18 -> s18 [0, 65535] { R6244 += 1 };
  s18 -> s13 [0, 65535];
  accepting s13, s14, s18, s15, s11;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R6246 += 1, R6182 += 1, R6090 += 1, R6091 += 1, R6092 += 1 };
  s0 -> s2 [0, 69] { R6246 += 1, R6182 += 1, R6089 += 1, R6090 += 1 };
  s0 -> s0 [0, 65535] { R6245 += 1, R6246 += 1 };
  s0 -> s3 [0, 65535] { R6246 += 1, R6181 += 1, R6182 += 1 };
  s0 -> s4 [70, 70] { R6246 += 1, R6182 += 1, R6089 += 1, R6090 += 1 };
  s0 -> s5 [70, 70] { R6246 += 1, R6182 += 1, R6089 += 1, R6090 += 1 };
  s0 -> s6 [70, 70] { R6246 += 1, R6182 += 1, R6090 += 1, R6091 += 1, R6092 += 1 };
  s0 -> s7 [70, 70] { R6246 += 1, R6182 += 1, R6090 += 1, R6091 += 1, R6092 += 1 };
  s0 -> s1 [71, 65535] { R6246 += 1, R6182 += 1, R6090 += 1, R6091 += 1, R6092 += 1 };
  s0 -> s2 [71, 65535] { R6246 += 1, R6182 += 1, R6089 += 1, R6090 += 1 };
  s1 -> s1 [0, 69] { R6246 += 1, R6182 += 1, R6090 += 1, R6091 += 1, R6092 += 1 };
  s1 -> s1 [0, 65535] { R6246 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s6 [70, 70] { R6246 += 1, R6182 += 1, R6090 += 1, R6091 += 1, R6092 += 1 };
  s1 -> s7 [70, 70] { R6246 += 1, R6182 += 1, R6090 += 1, R6091 += 1, R6092 += 1 };
  s1 -> s1 [71, 65535] { R6246 += 1, R6182 += 1, R6090 += 1, R6091 += 1, R6092 += 1 };
  s2 -> s1 [0, 69] { R6246 += 1, R6182 += 1, R6090 += 1, R6091 += 1, R6092 += 1 };
  s2 -> s2 [0, 69] { R6246 += 1, R6182 += 1, R6089 += 1, R6090 += 1 };
  s2 -> s4 [70, 70] { R6246 += 1, R6182 += 1, R6089 += 1, R6090 += 1 };
  s2 -> s5 [70, 70] { R6246 += 1, R6182 += 1, R6089 += 1, R6090 += 1 };
  s2 -> s6 [70, 70] { R6246 += 1, R6182 += 1, R6090 += 1, R6091 += 1, R6092 += 1 };
  s2 -> s7 [70, 70] { R6246 += 1, R6182 += 1, R6090 += 1, R6091 += 1, R6092 += 1 };
  s2 -> s1 [71, 65535] { R6246 += 1, R6182 += 1, R6090 += 1, R6091 += 1, R6092 += 1 };
  s2 -> s2 [71, 65535] { R6246 += 1, R6182 += 1, R6089 += 1, R6090 += 1 };
  s3 -> s1 [0, 69] { R6246 += 1, R6182 += 1, R6090 += 1, R6091 += 1, R6092 += 1 };
  s3 -> s2 [0, 69] { R6246 += 1, R6182 += 1, R6089 += 1, R6090 += 1 };
  s3 -> s3 [0, 65535] { R6246 += 1, R6181 += 1, R6182 += 1 };
  s3 -> s4 [70, 70] { R6246 += 1, R6182 += 1, R6089 += 1, R6090 += 1 };
  s3 -> s5 [70, 70] { R6246 += 1, R6182 += 1, R6089 += 1, R6090 += 1 };
  s3 -> s6 [70, 70] { R6246 += 1, R6182 += 1, R6090 += 1, R6091 += 1, R6092 += 1 };
  s3 -> s7 [70, 70] { R6246 += 1, R6182 += 1, R6090 += 1, R6091 += 1, R6092 += 1 };
  s3 -> s1 [71, 65535] { R6246 += 1, R6182 += 1, R6090 += 1, R6091 += 1, R6092 += 1 };
  s3 -> s2 [71, 65535] { R6246 += 1, R6182 += 1, R6089 += 1, R6090 += 1 };
  s5 -> s5 [0, 65535] { R6246 += 1, R6182 += 1, R6089 += 1, R6090 += 1 };
  s5 -> s7 [0, 65535] { R6246 += 1, R6182 += 1, R6090 += 1, R6091 += 1, R6092 += 1 };
  s6 -> s6 [0, 65535] { R6246 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R6246 += 1, R6182 += 1, R6090 += 1, R6091 += 1, R6092 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R6246 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R6246 += 1 };
  accepting s8, s9, s6, s1, s7;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
constraint R2 = R6126 && R3 = R6246 && R25 - R6246 = -1 && R26 = R6246 && R27 - R6246 = -1 && R28 = R6246 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R6094 + -1*R6090 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R6094 + -1*R6090 - R130 = 0 && R129 + R6093 + R6089 = 0 && R131 + R6095 + R6091 = 0 && R132 + R6096 + R6092 = 0 && R6125 = 0 && R6157 = 0 && R6158 = 0 && R6167 = 0 && R6168 = 0 && R6175 = 0 && R6176 = 0 && R6179 = 0 && R6180 = 0 && R6181 = 0 && R6182 = 0 && R6183 = 0 && R6184 = R6246 && R6185 = 0 && R6186 = R6246 && R6187 = 0 && R6188 = R6246 && R6189 = 0 && R6190 = R6246 && R6191 = 0 && R6192 = R6246 && R6193 = 0 && R6194 = R6246 && R6195 = 0 && R6196 = R6246 && R6197 = 0 && R6198 = R6246 && R6199 = 0 && R6200 = R6246 && R6201 = 0 && R6202 = R6246 && R6203 = 0 && R6204 = R6246 && R6205 = 0 && R6206 = R6246 && R6207 = 0 && R6208 = R6246 && R6209 = 0 && R6210 = R6246 && R6211 = 0 && R6212 = R6246 && R6213 = 0 && R6214 = R6246 && R6215 = 0 && R6216 = R6246 && R6217 = 0 && R6218 = R6246 && R6219 = 0 && R6220 = R6246 && R6221 = 0 && R6222 = R6246 && R6223 = 0 && R6224 = R6246 && R6225 = 0 && R6226 = R6246 && R6227 = 0 && R6228 = R6246 && R6229 = 0 && R6230 = R6246 && R6231 = 0 && R6232 = R6246 && R6233 = 0 && R6234 = R6246 && R6235 = 0 && R6236 = R6246 && R6237 = 0 && R6238 = R6246 && R6239 = 0 && R6240 = R6246 && R6241 = 0 && R6242 = R6246 && R6243 = 0 && R6244 = R6246 && R6245 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R6094 + -1*R6090 - R130 < 1 && -1 < R6126 && 0 < R6246 && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R6094 + -1*R6090 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R191 + R187 = 0 && R114 + R192 + R188 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R6094 + -1*R6090 - R130 = 0 || R130 + R6094 + R6090 < 1) && (R81 + R158 + R155 = 0 || R130 + R6094 + R6090 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R6094 + -1*R6090 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R6094 + R6090 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R6094 + -1*R6090 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R6094 + R6090 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R6094 + -1*R6090 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R6094 + R6090 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 != 0 || R112 + R190 + R186 + -1*R6094 + -1*R6090 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R6094 + R6090 = 0)) && (R113 + R191 + R187 != 0 || R83 + R160 + R157 + -1*R192 + -1*R188 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R5294 + R5289 != 0 || R120 + R5295 + R5290 + -1*R6094 + -1*R6090 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R6094 + R6090 = 0)) && (R6097 != 0 || R6098 = R6126 || (R22 = 0 && R6126 = 0)) && (R6099 != 0 || R6100 = R6126 || (R22 = 0 && R6126 = 0)) && (R6101 != 0 || R6102 = R6126 || (R22 = 0 && R6126 = 0)) && (R6103 != 0 || R6104 = R6126 || (R22 = 0 && R6126 = 0)) && (R6105 != 0 || R6106 = R6126 || (R22 = 0 && R6126 = 0)) && (R6107 != 0 || R6108 = R6126 || (R22 = 0 && R6126 = 0)) && (R6109 != 0 || R6110 = R6126 || (R22 = 0 && R6126 = 0)) && (R6111 != 0 || R6112 = R6126 || (R22 = 0 && R6126 = 0)) && (R6113 != 0 || R6114 = R6126 || (R22 = 0 && R6126 = 0)) && (R6115 != 0 || R6116 = R6126 || (R22 = 0 && R6126 = 0)) && (R6117 != 0 || R6118 = R6126 || (R22 = 0 && R6126 = 0)) && (R6119 != 0 || R6120 = R6126 || (R22 = 0 && R6126 = 0)) && (R6121 != 0 || R6122 = R6126 || (R22 = 0 && R6126 = 0)) && (R6123 != 0 || R6124 = R6126 || (R22 = 0 && R6126 = 0)) && (R23 = 0 || (R6155 = 0 && R6156 = 0)) && (R23 = 0 || (R6159 = 0 && R6160 = 0)) && (R23 = 0 || (R6161 = 0 && R6162 = 0)) && (R23 = 0 || (R6163 = 0 && R6164 = 0)) && (R23 = 0 || (R6165 = 0 && R6166 = 0)) && (R23 = 0 || (R6169 = 0 && R6170 = 0)) && (R23 = 0 || (R6171 = 0 && R6172 = 0)) && (R23 = 0 || (R6173 = 0 && R6174 = 0)) && (R23 = 0 || (R6177 = 0 && R6178 = 0)) && (R24 = 0 || (R6127 = 0 && R6128 = 0)) && (R24 = 0 || (R6129 = 0 && R6130 = 0)) && (R24 = 0 || (R6131 = 0 && R6132 = 0)) && (R24 = 0 || (R6133 = 0 && R6134 = 0)) && (R24 = 0 || (R6135 = 0 && R6136 = 0)) && (R24 = 0 || (R6137 = 0 && R6138 = 0)) && (R24 = 0 || (R6139 = 0 && R6140 = 0)) && (R24 = 0 || (R6141 = 0 && R6142 = 0)) && (R24 = 0 || (R6143 = 0 && R6144 = 0)) && (R24 = 0 || (R6145 = 0 && R6146 = 0)) && (R24 = 0 || (R6147 = 0 && R6148 = 0)) && (R24 = 0 || (R6149 = 0 && R6150 = 0)) && (R24 = 0 || (R6151 = 0 && R6152 = 0)) && (R24 = 0 || (R6153 = 0 && R6154 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R6094 + R6090 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R6094 + R6090 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R6094 + R6090 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 = 0 || (R83 + R160 + R157 = 0 && R130 + R6094 + R6090 = 0)) && (R113 + R191 + R187 = 0 || R83 + R160 + R157 < 1) && (R119 + R5294 + R5289 = 0 || (R83 + R160 + R157 = 0 && R130 + R6094 + R6090 = 0)) && (R123 + R5298 + R5293 = 0 || (R121 + R5296 + R5291 = 0 && R122 + R5297 + R5292 = 0)) && (R6097 = 0 || (R22 = 0 && R6126 = 0)) && (R6099 = 0 || (R22 = 0 && R6126 = 0)) && (R6101 = 0 || (R22 = 0 && R6126 = 0)) && (R6103 = 0 || (R22 = 0 && R6126 = 0)) && (R6105 = 0 || (R22 = 0 && R6126 = 0)) && (R6107 = 0 || (R22 = 0 && R6126 = 0)) && (R6109 = 0 || (R22 = 0 && R6126 = 0)) && (R6111 = 0 || (R22 = 0 && R6126 = 0)) && (R6113 = 0 || (R22 = 0 && R6126 = 0)) && (R6115 = 0 || (R22 = 0 && R6126 = 0)) && (R6117 = 0 || (R22 = 0 && R6126 = 0)) && (R6119 = 0 || (R22 = 0 && R6126 = 0)) && (R6121 = 0 || (R22 = 0 && R6126 = 0)) && (R6123 = 0 || (R22 = 0 && R6126 = 0));
// End of Parikh automata intersection problem
