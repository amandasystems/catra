// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R2, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R5, R5289, R5290, R5291, R5292, R5293, R5294, R5295, R5296, R5297, R5298, R6247, R6248, R6249, R6250, R6251, R6252, R6253, R6254, R6255, R6256, R6257, R6258, R6259, R6260, R6261, R6262, R6263, R6264, R6265, R6266, R6267, R6268, R6269, R6270, R6271, R6272, R6273, R6274, R6275, R6276, R6277, R6278, R6279, R6280, R6281, R6282, R6283, R6284, R6285, R6286, R6287, R6288, R6289, R6290, R6291, R6292, R6293, R6294, R6295, R6296, R6297, R6298, R6299, R63, R6300, R6301, R6302, R6303, R6304, R6305, R6306, R6307, R6308, R6309, R6310, R6311, R6312, R6313, R6314, R6315, R6316, R6317, R6318, R6319, R6320, R6321, R6322, R6323, R6324, R6325, R6326, R6327, R6328, R6329, R6330, R6331, R6332, R6333, R6334, R6335, R6336, R6337, R6338, R6339, R6340, R6341, R6342, R6343, R6344, R6345, R6346, R6347, R6348, R6349, R6350, R6351, R6352, R6353, R6354, R6355, R6356, R6357, R6358, R6359, R6360, R6361, R6362, R6363, R6364, R6365, R6366, R6367, R6368, R6369, R6370, R6371, R6372, R6373, R6374, R6375, R6376, R6377, R6378, R6379, R6380, R6381, R6382, R6383, R6384, R6385, R6386, R6387, R6388, R6389, R6390, R6391, R6392, R6393, R6394, R6395, R6396, R6397, R6398, R6399, R6400, R6401, R6402, R6403, R6404, R65, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R26 += 1 };
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R6285 += 1, R6286 += 1 };
  s0 -> s1 [0, 65535] { R6286 += 1, R24 += 1 };
  s1 -> s1 [0, 65535] { R6286 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R6288 += 1 };
  s0 -> s0 [0, 65535] { R6287 += 1, R6288 += 1 };
  s0 -> s2 [70, 70] { R6288 += 1 };
  s0 -> s3 [70, 70] { R6288 += 1 };
  s0 -> s1 [76, 65535] { R6288 += 1 };
  s1 -> s1 [0, 69] { R6288 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6288 += 1 };
  s1 -> s3 [70, 70] { R6288 += 1 };
  s1 -> s1 [76, 65535] { R6288 += 1 };
  s2 -> s2 [0, 70] { R6288 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R6288 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R6290 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R6289 += 1, R6290 += 1 };
  s0 -> s2 [70, 70] { R6290 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R6290 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R6290 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R6290 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6290 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R6290 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R6290 += 1, R63 += 1 };
  s2 -> s2 [0, 65535] { R6290 += 1, R63 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R6292 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R6291 += 1, R6292 += 1 };
  s0 -> s2 [70, 70] { R6292 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R6292 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R6292 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R6292 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6292 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R6292 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R6292 += 1, R65 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R6292 += 1, R65 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R6294 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R6293 += 1, R6294 += 1 };
  s0 -> s2 [70, 70] { R6294 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R6294 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R6294 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R6294 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6294 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R6294 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R6294 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R6294 += 1, R67 += 1, R68 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R6296 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R6295 += 1, R6296 += 1 };
  s0 -> s2 [70, 70] { R6296 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R6296 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R6296 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R6296 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6296 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R6296 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R6296 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R6296 += 1, R73 += 1, R74 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R6298 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R6297 += 1, R6298 += 1 };
  s0 -> s2 [70, 70] { R6298 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R6298 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R6298 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R6298 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6298 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R6298 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R6298 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535] { R6298 += 1, R77 += 1, R78 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R6300 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R6299 += 1, R6300 += 1 };
  s0 -> s2 [70, 70] { R6300 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R6300 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R6300 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R6300 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6300 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R6300 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R6300 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535] { R6300 += 1, R81 += 1, R82 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R6302 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R6301 += 1, R6302 += 1 };
  s0 -> s2 [70, 70] { R6302 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R6302 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R6302 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R6302 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6302 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R6302 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R6302 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R6302 += 1, R87 += 1, R88 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R6304 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R6303 += 1, R6304 += 1 };
  s0 -> s2 [70, 70] { R6304 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R6304 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R6304 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R6304 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6304 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R6304 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R6304 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R6304 += 1, R93 += 1, R94 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R6306 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R6305 += 1, R6306 += 1 };
  s0 -> s2 [70, 70] { R6306 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R6306 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R6306 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R6306 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6306 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R6306 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R6306 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R6306 += 1, R101 += 1, R102 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R6308 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R6307 += 1, R6308 += 1 };
  s0 -> s2 [70, 70] { R6308 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R6308 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R6308 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R6308 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6308 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R6308 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R6308 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535] { R6308 += 1, R111 += 1, R112 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R6310 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R6309 += 1, R6310 += 1 };
  s0 -> s2 [70, 70] { R6310 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R6310 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R6310 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R6310 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6310 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R6310 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R6310 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R6310 += 1, R119 += 1, R120 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R6312 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R6311 += 1, R6312 += 1 };
  s0 -> s2 [70, 70] { R6312 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R6312 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R6312 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R6312 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6312 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R6312 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R6312 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535] { R6312 += 1, R129 += 1, R130 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R6342 += 1 };
  s0 -> s0 [0, 65535] { R6341 += 1, R6342 += 1 };
  s0 -> s2 [70, 70] { R6342 += 1 };
  s0 -> s1 [71, 65535] { R6342 += 1 };
  s1 -> s1 [0, 69] { R6342 += 1 };
  s1 -> s2 [70, 70] { R6342 += 1 };
  s1 -> s1 [71, 65535] { R6342 += 1 };
  s2 -> s2 [0, 65535] { R6342 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R6344 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R6343 += 1, R6344 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R6344 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R6346 += 1 };
  s0 -> s0 [0, 65535] { R6345 += 1, R6346 += 1 };
  s0 -> s2 [0, 65535] { R6346 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R6346 += 1 };
  s0 -> s1 [71, 65535] { R6346 += 1 };
  s1 -> s1 [0, 69] { R6346 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R6346 += 1 };
  s1 -> s1 [71, 65535] { R6346 += 1 };
  s2 -> s1 [0, 69] { R6346 += 1 };
  s2 -> s2 [0, 65535] { R6346 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R6346 += 1 };
  s2 -> s1 [71, 65535] { R6346 += 1 };
  s3 -> s3 [0, 65535] { R6346 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R6348 += 1, R6256 += 1 };
  s0 -> s2 [0, 65535] { R6348 += 1, R6255 += 1, R6256 += 1 };
  s0 -> s0 [0, 65535] { R6347 += 1, R6348 += 1 };
  s0 -> s1 [71, 65535] { R6348 += 1, R6256 += 1 };
  s1 -> s1 [0, 69] { R6348 += 1, R6256 += 1 };
  s1 -> s1 [0, 65535] { R6348 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R6348 += 1, R6256 += 1 };
  s2 -> s1 [0, 69] { R6348 += 1, R6256 += 1 };
  s2 -> s2 [0, 65535] { R6348 += 1, R6255 += 1, R6256 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R6348 += 1, R6256 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R6350 += 1, R6258 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R6349 += 1, R6350 += 1 };
  s0 -> s2 [0, 65535] { R6350 += 1, R6257 += 1, R6258 += 1 };
  s1 -> s1 [0, 65535] { R6350 += 1, R6258 += 1, R22 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R6350 += 1 };
  s2 -> s1 [0, 65535] { R6350 += 1, R6258 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R6350 += 1, R6257 += 1, R6258 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R6350 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R6352 += 1, R6260 += 1 };
  s0 -> s2 [0, 65535] { R6352 += 1, R6259 += 1, R6260 += 1 };
  s0 -> s0 [0, 65535] { R6351 += 1, R6352 += 1 };
  s0 -> s1 [75, 65535] { R6352 += 1, R6260 += 1 };
  s1 -> s1 [0, 70] { R6352 += 1, R6260 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R6352 += 1 };
  s1 -> s1 [75, 65535] { R6352 += 1, R6260 += 1 };
  s2 -> s1 [0, 70] { R6352 += 1, R6260 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R6352 += 1, R6259 += 1, R6260 += 1 };
  s2 -> s1 [75, 65535] { R6352 += 1, R6260 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R6354 += 1, R6261 += 1, R6262 += 1 };
  s0 -> s2 [0, 65535] { R6354 += 1, R6262 += 1, R138 += 1 };
  s0 -> s0 [0, 65535] { R6353 += 1, R6354 += 1 };
  s1 -> s1 [0, 65535] { R6354 += 1, R6261 += 1, R6262 += 1 };
  s1 -> s2 [0, 65535] { R6354 += 1, R6262 += 1, R138 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R6354 += 1, R6262 += 1, R138 += 1 };
  s2 -> s3 [0, 65535] { R6354 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R6354 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R6356 += 1, R6264 += 1 };
  s0 -> s2 [0, 65535] { R6356 += 1, R6264 += 1, R140 += 1 };
  s0 -> s0 [0, 65535] { R6355 += 1, R6356 += 1 };
  s0 -> s3 [0, 65535] { R6356 += 1, R6263 += 1, R6264 += 1 };
  s0 -> s1 [76, 65535] { R6356 += 1, R6264 += 1 };
  s1 -> s1 [0, 74] { R6356 += 1, R6264 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R6356 += 1 };
  s1 -> s1 [76, 65535] { R6356 += 1, R6264 += 1 };
  s2 -> s1 [0, 74] { R6356 += 1, R6264 += 1 };
  s2 -> s5 [0, 65535] { R6356 += 1 };
  s2 -> s2 [0, 65535] { R6356 += 1, R6264 += 1, R140 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [76, 65535] { R6356 += 1, R6264 += 1 };
  s3 -> s1 [0, 74] { R6356 += 1, R6264 += 1 };
  s3 -> s2 [0, 65535] { R6356 += 1, R6264 += 1, R140 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R6356 += 1, R6263 += 1, R6264 += 1 };
  s3 -> s1 [76, 65535] { R6356 += 1, R6264 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R6356 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R6358 += 1, R6266 += 1, R144 += 1, R145 += 1 };
  s0 -> s0 [0, 65535] { R6357 += 1, R6358 += 1 };
  s0 -> s2 [0, 65535] { R6358 += 1, R6265 += 1, R6266 += 1 };
  s0 -> s3 [0, 65535] { R6358 += 1, R6266 += 1, R145 += 1, R146 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R6358 += 1, R6266 += 1, R144 += 1, R145 += 1 };
  s1 -> s6 [0, 65535] { R6358 += 1 };
  s1 -> s3 [0, 65535] { R6358 += 1, R6266 += 1, R145 += 1, R146 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R6358 += 1, R6266 += 1, R144 += 1, R145 += 1 };
  s2 -> s2 [0, 65535] { R6358 += 1, R6265 += 1, R6266 += 1 };
  s2 -> s3 [0, 65535] { R6358 += 1, R6266 += 1, R145 += 1, R146 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R6358 += 1, R6266 += 1 };
  s3 -> s6 [0, 65535] { R6358 += 1 };
  s3 -> s3 [0, 65535] { R6358 += 1, R6266 += 1, R145 += 1, R146 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R6358 += 1, R6266 += 1 };
  s5 -> s6 [0, 65535] { R6358 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R6358 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R6360 += 1, R6268 += 1, R150 += 1 };
  s0 -> s0 [0, 65535] { R6359 += 1, R6360 += 1 };
  s0 -> s2 [0, 65535] { R6360 += 1, R6268 += 1, R149 += 1, R150 += 1 };
  s0 -> s3 [0, 65535] { R6360 += 1, R6267 += 1, R6268 += 1 };
  s0 -> s4 [75, 75] { R6360 += 1, R6268 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R6360 += 1, R6268 += 1, R150 += 1 };
  s0 -> s1 [86, 65535] { R6360 += 1, R6268 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R6360 += 1, R6268 += 1, R150 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R6360 += 1 };
  s1 -> s1 [0, 65535] { R6360 += 1, R6268 += 1 };
  s1 -> s4 [75, 75] { R6360 += 1, R6268 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R6360 += 1, R6268 += 1, R150 += 1 };
  s1 -> s1 [86, 65535] { R6360 += 1, R6268 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R6360 += 1, R6268 += 1, R150 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R6360 += 1, R6268 += 1, R149 += 1, R150 += 1 };
  s2 -> s7 [0, 65535] { R6360 += 1 };
  s2 -> s4 [75, 75] { R6360 += 1, R6268 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R6360 += 1, R6268 += 1, R150 += 1 };
  s2 -> s1 [86, 65535] { R6360 += 1, R6268 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R6360 += 1, R6268 += 1, R150 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R6360 += 1, R6268 += 1, R149 += 1, R150 += 1 };
  s3 -> s3 [0, 65535] { R6360 += 1, R6267 += 1, R6268 += 1 };
  s3 -> s4 [75, 75] { R6360 += 1, R6268 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R6360 += 1, R6268 += 1, R150 += 1 };
  s3 -> s1 [86, 65535] { R6360 += 1, R6268 += 1, R150 += 1 };
  s4 -> s4 [0, 75] { R6360 += 1, R6268 += 1, R150 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R6360 += 1, R6268 += 1 };
  s4 -> s7 [0, 65535] { R6360 += 1 };
  s4 -> s4 [86, 65535] { R6360 += 1, R6268 += 1, R150 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R6360 += 1, R6268 += 1 };
  s5 -> s7 [0, 65535] { R6360 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R6360 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R6362 += 1, R6270 += 1 };
  s0 -> s0 [0, 65535] { R6361 += 1, R6362 += 1 };
  s0 -> s2 [0, 65535] { R6362 += 1, R6270 += 1, R154 += 1 };
  s0 -> s3 [0, 65535] { R6362 += 1, R6269 += 1, R6270 += 1 };
  s1 -> s1 [0, 65535] { R6362 += 1, R6270 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R6362 += 1 };
  s2 -> s1 [0, 65535] { R6362 += 1, R6270 += 1 };
  s2 -> s2 [0, 65535] { R6362 += 1, R6270 += 1, R154 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R6362 += 1 };
  s3 -> s1 [0, 65535] { R6362 += 1, R6270 += 1 };
  s3 -> s2 [0, 65535] { R6362 += 1, R6270 += 1, R154 += 1 };
  s3 -> s3 [0, 65535] { R6362 += 1, R6269 += 1, R6270 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R6362 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s0 [0, 65535] { R6363 += 1, R6364 += 1 };
  s0 -> s1 [0, 65535] { R6364 += 1, R6271 += 1, R6272 += 1 };
  s0 -> s2 [0, 65535] { R6364 += 1, R6272 += 1, R158 += 1, R159 += 1 };
  s0 -> s3 [0, 65535] { R6364 += 1, R6272 += 1, R159 += 1, R160 += 1 };
  s1 -> s1 [0, 65535] { R6364 += 1, R6271 += 1, R6272 += 1 };
  s1 -> s2 [0, 65535] { R6364 += 1, R6272 += 1, R158 += 1, R159 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R6364 += 1, R6272 += 1, R159 += 1, R160 += 1 };
  s2 -> s4 [0, 65535] { R6364 += 1 };
  s2 -> s2 [0, 65535] { R6364 += 1, R6272 += 1, R158 += 1, R159 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R6364 += 1, R6272 += 1, R159 += 1, R160 += 1 };
  s3 -> s4 [0, 65535] { R6364 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R6364 += 1, R6272 += 1, R159 += 1, R160 += 1 };
  s3 -> s6 [0, 65535] { R6364 += 1, R6272 += 1 };
  s4 -> s4 [0, 65535] { R6364 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R6364 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6364 += 1, R6272 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R6366 += 1, R6274 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R6366 += 1, R6273 += 1, R6274 += 1 };
  s0 -> s0 [0, 65535] { R6365 += 1, R6366 += 1 };
  s0 -> s3 [0, 65535] { R6366 += 1, R6274 += 1, R164 += 1, R165 += 1 };
  s0 -> s4 [0, 65535] { R6366 += 1, R6274 += 1, R165 += 1, R166 += 1 };
  s0 -> s1 [76, 65535] { R6366 += 1, R6274 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R6366 += 1, R6274 += 1, R165 += 1 };
  s1 -> s1 [0, 65535] { R6366 += 1, R6274 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s5 [0, 65535] { R6366 += 1 };
  s1 -> s1 [76, 65535] { R6366 += 1, R6274 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R6366 += 1, R6274 += 1, R165 += 1 };
  s2 -> s2 [0, 65535] { R6366 += 1, R6273 += 1, R6274 += 1 };
  s2 -> s3 [0, 65535] { R6366 += 1, R6274 += 1, R164 += 1, R165 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [0, 65535] { R6366 += 1, R6274 += 1, R165 += 1, R166 += 1 };
  s2 -> s1 [76, 65535] { R6366 += 1, R6274 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R6366 += 1, R6274 += 1, R165 += 1 };
  s3 -> s5 [0, 65535] { R6366 += 1 };
  s3 -> s3 [0, 65535] { R6366 += 1, R6274 += 1, R164 += 1, R165 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [0, 65535] { R6366 += 1, R6274 += 1, R165 += 1, R166 += 1 };
  s3 -> s1 [76, 65535] { R6366 += 1, R6274 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R6366 += 1, R6274 += 1, R165 += 1 };
  s4 -> s5 [0, 65535] { R6366 += 1 };
  s4 -> s6 [0, 65535] { R6366 += 1, R6274 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R6366 += 1, R6274 += 1, R165 += 1, R166 += 1 };
  s4 -> s1 [76, 65535] { R6366 += 1, R6274 += 1, R165 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R6366 += 1 };
  s6 -> s6 [0, 65535] { R6366 += 1, R6274 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s5 [0, 65535] { R6366 += 1 };
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R6368 += 1, R6276 += 1, R172 += 1, R174 += 1 };
  s0 -> s2 [0, 65535] { R6368 += 1, R6276 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s0 [0, 65535] { R6367 += 1, R6368 += 1 };
  s0 -> s3 [0, 65535] { R6368 += 1, R6276 += 1, R171 += 1, R172 += 1 };
  s0 -> s4 [0, 65535] { R6368 += 1, R6275 += 1, R6276 += 1 };
  s0 -> s1 [76, 65535] { R6368 += 1, R6276 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R6368 += 1, R6276 += 1, R172 += 1, R174 += 1 };
  s1 -> s7 [0, 65535] { R6368 += 1, R6276 += 1 };
  s1 -> s6 [0, 65535] { R6368 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R6368 += 1, R6276 += 1, R172 += 1 };
  s1 -> s1 [76, 65535] { R6368 += 1, R6276 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R6368 += 1, R6276 += 1, R172 += 1, R174 += 1 };
  s2 -> s7 [0, 65535] { R6368 += 1, R6276 += 1 };
  s2 -> s6 [0, 65535] { R6368 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R6368 += 1, R6276 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s1 [76, 65535] { R6368 += 1, R6276 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R6368 += 1, R6276 += 1, R172 += 1, R174 += 1 };
  s3 -> s6 [0, 65535] { R6368 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R6368 += 1, R6276 += 1, R171 += 1, R172 += 1 };
  s3 -> s2 [0, 65535] { R6368 += 1, R6276 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s1 [76, 65535] { R6368 += 1, R6276 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R6368 += 1, R6276 += 1, R172 += 1, R174 += 1 };
  s4 -> s2 [0, 65535] { R6368 += 1, R6276 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R6368 += 1, R6276 += 1, R171 += 1, R172 += 1 };
  s4 -> s4 [0, 65535] { R6368 += 1, R6275 += 1, R6276 += 1 };
  s4 -> s1 [76, 65535] { R6368 += 1, R6276 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6368 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R6368 += 1, R6276 += 1 };
  s7 -> s6 [0, 65535] { R6368 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R6370 += 1, R6277 += 1, R6278 += 1 };
  s0 -> s0 [0, 65535] { R6369 += 1, R6370 += 1 };
  s0 -> s2 [0, 65535] { R6370 += 1, R6278 += 1 };
  s0 -> s3 [0, 65535] { R6370 += 1, R6278 += 1, R181 += 1 };
  s1 -> s1 [0, 65535] { R6370 += 1, R6277 += 1, R6278 += 1 };
  s1 -> s2 [0, 65535] { R6370 += 1, R6278 += 1 };
  s1 -> s3 [0, 65535] { R6370 += 1, R6278 += 1, R181 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R6370 += 1, R6278 += 1 };
  s2 -> s4 [0, 65535] { R6370 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R6370 += 1, R6278 += 1 };
  s3 -> s3 [0, 65535] { R6370 += 1, R6278 += 1, R181 += 1 };
  s3 -> s4 [0, 65535] { R6370 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R6370 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R6372 += 1, R6280 += 1, R190 += 1, R192 += 1 };
  s0 -> s2 [0, 65535] { R6372 += 1, R6280 += 1, R189 += 1, R190 += 1 };
  s0 -> s3 [0, 65535] { R6372 += 1, R6280 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s0 -> s4 [0, 65535] { R6372 += 1, R6279 += 1, R6280 += 1 };
  s0 -> s0 [0, 65535] { R6371 += 1, R6372 += 1 };
  s0 -> s1 [85, 65535] { R6372 += 1, R6280 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 75] { R6372 += 1, R6280 += 1, R190 += 1, R192 += 1 };
  s1 -> s6 [0, 65535] { R6372 += 1, R6280 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R6372 += 1, R6280 += 1, R190 += 1 };
  s1 -> s7 [0, 65535] { R6372 += 1 };
  s1 -> s1 [85, 65535] { R6372 += 1, R6280 += 1, R190 += 1, R192 += 1 };
  s2 -> s1 [0, 75] { R6372 += 1, R6280 += 1, R190 += 1, R192 += 1 };
  s2 -> s2 [0, 65535] { R6372 += 1, R6280 += 1, R189 += 1, R190 += 1 };
  s2 -> s3 [0, 65535] { R6372 += 1, R6280 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R6372 += 1 };
  s2 -> s1 [85, 65535] { R6372 += 1, R6280 += 1, R190 += 1, R192 += 1 };
  s3 -> s1 [0, 75] { R6372 += 1, R6280 += 1, R190 += 1, R192 += 1 };
  s3 -> s6 [0, 65535] { R6372 += 1, R6280 += 1 };
  s3 -> s3 [0, 65535] { R6372 += 1, R6280 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s7 [0, 65535] { R6372 += 1 };
  s3 -> s1 [85, 65535] { R6372 += 1, R6280 += 1, R190 += 1, R192 += 1 };
  s4 -> s1 [0, 75] { R6372 += 1, R6280 += 1, R190 += 1, R192 += 1 };
  s4 -> s2 [0, 65535] { R6372 += 1, R6280 += 1, R189 += 1, R190 += 1 };
  s4 -> s3 [0, 65535] { R6372 += 1, R6280 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s4 -> s4 [0, 65535] { R6372 += 1, R6279 += 1, R6280 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s1 [85, 65535] { R6372 += 1, R6280 += 1, R190 += 1, R192 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6372 += 1, R6280 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s7 [0, 65535] { R6372 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R6372 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s0 [0, 65535] { R6373 += 1, R6374 += 1 };
  s0 -> s1 [0, 65535] { R6374 += 1, R6282 += 1 };
  s0 -> s2 [0, 65535] { R6374 += 1, R6281 += 1, R6282 += 1 };
  s1 -> s4 [0, 65535] { R6374 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R6374 += 1, R6282 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R6374 += 1, R6282 += 1 };
  s2 -> s2 [0, 65535] { R6374 += 1, R6281 += 1, R6282 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R6374 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 74] { R6376 += 1, R6284 += 1, R6252 += 1, R6254 += 1 };
  s0 -> s2 [0, 65535] { R6376 += 1, R6283 += 1, R6284 += 1 };
  s0 -> s0 [0, 65535] { R6375 += 1, R6376 += 1 };
  s0 -> s3 [75, 75] { R6376 += 1, R6284 += 1, R6252 += 1, R6254 += 1 };
  s0 -> s4 [85, 85] { R6376 += 1, R6284 += 1, R6252 += 1, R6254 += 1 };
  s0 -> s1 [86, 65535] { R6376 += 1, R6284 += 1, R6252 += 1, R6254 += 1 };
  s1 -> s1 [0, 74] { R6376 += 1, R6284 += 1, R6252 += 1, R6254 += 1 };
  s1 -> s3 [75, 75] { R6376 += 1, R6284 += 1, R6252 += 1, R6254 += 1 };
  s1 -> s4 [85, 85] { R6376 += 1, R6284 += 1, R6252 += 1, R6254 += 1 };
  s1 -> s1 [86, 65535] { R6376 += 1, R6284 += 1, R6252 += 1, R6254 += 1 };
  s2 -> s1 [0, 74] { R6376 += 1, R6284 += 1, R6252 += 1, R6254 += 1 };
  s2 -> s2 [0, 65535] { R6376 += 1, R6283 += 1, R6284 += 1 };
  s2 -> s3 [75, 75] { R6376 += 1, R6284 += 1, R6252 += 1, R6254 += 1 };
  s2 -> s4 [85, 85] { R6376 += 1, R6284 += 1, R6252 += 1, R6254 += 1 };
  s2 -> s1 [86, 65535] { R6376 += 1, R6284 += 1, R6252 += 1, R6254 += 1 };
  s3 -> s3 [0, 75] { R6376 += 1, R6284 += 1, R6252 += 1, R6254 += 1 };
  s3 -> s8 [85, 85] { R6376 += 1, R6284 += 1, R6252 += 1, R6254 += 1 };
  s3 -> s3 [86, 65535] { R6376 += 1, R6284 += 1, R6252 += 1, R6254 += 1 };
  s4 -> s4 [0, 74] { R6376 += 1, R6284 += 1, R6252 += 1, R6254 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R6376 += 1, R6284 += 1, R6252 += 1 };
  s4 -> s6 [0, 65535] { R6376 += 1, R6284 += 1 };
  s4 -> s7 [0, 65535] { R6376 += 1 };
  s4 -> s8 [75, 75] { R6376 += 1, R6284 += 1, R6252 += 1, R6254 += 1 };
  s4 -> s9 [75, 75] { R6376 += 1, R6284 += 1, R6252 += 1, R6254 += 1 };
  s4 -> s4 [85, 65535] { R6376 += 1, R6284 += 1, R6252 += 1, R6254 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6376 += 1, R6284 += 1 };
  s6 -> s7 [0, 65535] { R6376 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R6376 += 1 };
  s8 -> s8 [0, 75] { R6376 += 1, R6284 += 1, R6252 += 1, R6254 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s8 [0, 65535] { R6376 += 1, R6284 += 1, R6252 += 1 };
  s8 -> s6 [0, 65535] { R6376 += 1, R6284 += 1 };
  s8 -> s7 [0, 65535] { R6376 += 1 };
  s8 -> s8 [85, 65535] { R6376 += 1, R6284 += 1, R6252 += 1, R6254 += 1 };
  s9 -> s5 [0, 65535];
  s9 -> s9 [0, 65535] { R6376 += 1, R6284 += 1, R6252 += 1 };
  s9 -> s6 [0, 65535] { R6376 += 1, R6284 += 1 };
  s9 -> s7 [0, 65535] { R6376 += 1 };
  accepting s4, s8, s5, s9, s6, s7;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65535] { R6378 += 1, R6313 += 1, R6314 += 1 };
  s0 -> s2 [0, 65535] { R6378 += 1, R6314 += 1, R23 += 1 };
  s0 -> s0 [0, 65535] { R6377 += 1, R6378 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R6378 += 1, R6313 += 1, R6314 += 1 };
  s1 -> s2 [0, 65535] { R6378 += 1, R6314 += 1, R23 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R6378 += 1 };
  s2 -> s2 [0, 65535] { R6378 += 1, R6314 += 1, R23 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R6378 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R6380 += 1, R6316 += 1 };
  s0 -> s2 [0, 65535] { R6380 += 1, R6315 += 1, R6316 += 1 };
  s0 -> s0 [0, 65535] { R6379 += 1, R6380 += 1 };
  s0 -> s3 [70, 70] { R6380 += 1, R6316 += 1 };
  s0 -> s4 [70, 70] { R6380 += 1, R6316 += 1 };
  s0 -> s5 [75, 75] { R6380 += 1, R6316 += 1 };
  s0 -> s1 [76, 65535] { R6380 += 1, R6316 += 1 };
  s1 -> s1 [0, 69] { R6380 += 1, R6316 += 1 };
  s1 -> s3 [70, 70] { R6380 += 1, R6316 += 1 };
  s1 -> s4 [70, 70] { R6380 += 1, R6316 += 1 };
  s1 -> s5 [75, 75] { R6380 += 1, R6316 += 1 };
  s1 -> s1 [76, 65535] { R6380 += 1, R6316 += 1 };
  s2 -> s1 [0, 69] { R6380 += 1, R6316 += 1 };
  s2 -> s2 [0, 65535] { R6380 += 1, R6315 += 1, R6316 += 1 };
  s2 -> s3 [70, 70] { R6380 += 1, R6316 += 1 };
  s2 -> s4 [70, 70] { R6380 += 1, R6316 += 1 };
  s2 -> s5 [75, 75] { R6380 += 1, R6316 += 1 };
  s2 -> s1 [76, 65535] { R6380 += 1, R6316 += 1 };
  s3 -> s3 [0, 70] { R6380 += 1, R6316 += 1 };
  s3 -> s8 [75, 75] { R6380 += 1, R6316 += 1 };
  s3 -> s3 [76, 65535] { R6380 += 1, R6316 += 1 };
  s5 -> s5 [0, 69] { R6380 += 1, R6316 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R6380 += 1 };
  s5 -> s7 [70, 70] { R6380 += 1, R6316 += 1 };
  s5 -> s8 [70, 70] { R6380 += 1, R6316 += 1 };
  s5 -> s5 [75, 65535] { R6380 += 1, R6316 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R6380 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 70] { R6380 += 1, R6316 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R6380 += 1 };
  s8 -> s8 [75, 65535] { R6380 += 1, R6316 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R6382 += 1, R6318 += 1, R137 += 1 };
  s0 -> s2 [0, 65535] { R6382 += 1, R6317 += 1, R6318 += 1 };
  s0 -> s0 [0, 65535] { R6381 += 1, R6382 += 1 };
  s0 -> s3 [70, 70] { R6382 += 1, R6318 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R6382 += 1, R6318 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R6382 += 1, R6318 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R6382 += 1, R6318 += 1, R137 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R6382 += 1 };
  s1 -> s3 [70, 70] { R6382 += 1, R6318 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R6382 += 1, R6318 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R6382 += 1, R6318 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R6382 += 1, R6318 += 1, R137 += 1 };
  s2 -> s2 [0, 65535] { R6382 += 1, R6317 += 1, R6318 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R6382 += 1, R6318 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R6382 += 1, R6318 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R6382 += 1, R6318 += 1, R137 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R6382 += 1 };
  s3 -> s3 [0, 65535] { R6382 += 1, R6318 += 1, R137 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R6382 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6382 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R6384 += 1, R6320 += 1, R139 += 1 };
  s0 -> s0 [0, 65535] { R6383 += 1, R6384 += 1 };
  s0 -> s2 [0, 65535] { R6384 += 1, R6319 += 1, R6320 += 1 };
  s0 -> s3 [70, 70] { R6384 += 1, R6320 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R6384 += 1, R6320 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R6384 += 1, R6320 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R6384 += 1, R6320 += 1, R139 += 1 };
  s1 -> s1 [0, 65535] { R6384 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R6384 += 1, R6320 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R6384 += 1, R6320 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R6384 += 1, R6320 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R6384 += 1, R6320 += 1, R139 += 1 };
  s2 -> s2 [0, 65535] { R6384 += 1, R6319 += 1, R6320 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R6384 += 1, R6320 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R6384 += 1, R6320 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R6384 += 1, R6320 += 1, R139 += 1 };
  s3 -> s3 [0, 65535] { R6384 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R6384 += 1, R6320 += 1, R139 += 1 };
  s4 -> s5 [0, 65535] { R6384 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R6384 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R6386 += 1, R6322 += 1, R141 += 1, R142 += 1 };
  s0 -> s2 [0, 65535] { R6386 += 1, R6321 += 1, R6322 += 1 };
  s0 -> s0 [0, 65535] { R6385 += 1, R6386 += 1 };
  s0 -> s3 [70, 70] { R6386 += 1, R6322 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R6386 += 1, R6322 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R6386 += 1, R6322 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R6386 += 1, R6322 += 1, R141 += 1, R142 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R6386 += 1 };
  s1 -> s3 [70, 70] { R6386 += 1, R6322 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R6386 += 1, R6322 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R6386 += 1, R6322 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R6386 += 1, R6322 += 1, R141 += 1, R142 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R6386 += 1, R6321 += 1, R6322 += 1 };
  s2 -> s3 [70, 70] { R6386 += 1, R6322 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R6386 += 1, R6322 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R6386 += 1, R6322 += 1, R141 += 1, R142 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R6386 += 1, R6322 += 1, R141 += 1, R142 += 1 };
  s3 -> s6 [0, 65535] { R6386 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R6386 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6386 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R6388 += 1, R6324 += 1, R147 += 1, R148 += 1 };
  s0 -> s0 [0, 65535] { R6387 += 1, R6388 += 1 };
  s0 -> s2 [0, 65535] { R6388 += 1, R6323 += 1, R6324 += 1 };
  s0 -> s3 [70, 70] { R6388 += 1, R6324 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R6388 += 1, R6324 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R6388 += 1, R6324 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R6388 += 1, R6324 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 65535] { R6388 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R6388 += 1, R6324 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R6388 += 1, R6324 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R6388 += 1, R6324 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R6388 += 1, R6324 += 1, R147 += 1, R148 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R6388 += 1, R6323 += 1, R6324 += 1 };
  s2 -> s3 [70, 70] { R6388 += 1, R6324 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R6388 += 1, R6324 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R6388 += 1, R6324 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R6388 += 1, R6324 += 1, R147 += 1, R148 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R6388 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R6388 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6388 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R6390 += 1, R6326 += 1, R151 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R6390 += 1, R6326 += 1, R152 += 1 };
  s0 -> s0 [0, 65535] { R6389 += 1, R6390 += 1 };
  s0 -> s3 [0, 65535] { R6390 += 1, R6325 += 1, R6326 += 1 };
  s0 -> s4 [70, 70] { R6390 += 1, R6326 += 1, R151 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R6390 += 1, R6326 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R6390 += 1, R6326 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R6390 += 1, R6326 += 1, R151 += 1, R152 += 1 };
  s0 -> s2 [71, 74] { R6390 += 1, R6326 += 1, R152 += 1 };
  s0 -> s1 [71, 65535] { R6390 += 1, R6326 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R6390 += 1, R6326 += 1, R152 += 1 };
  s0 -> s2 [76, 65535] { R6390 += 1, R6326 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R6390 += 1, R6326 += 1, R151 += 1, R152 += 1 };
  s1 -> s2 [0, 69] { R6390 += 1, R6326 += 1, R152 += 1 };
  s1 -> s4 [70, 70] { R6390 += 1, R6326 += 1, R151 += 1, R152 += 1 };
  s1 -> s5 [70, 70] { R6390 += 1, R6326 += 1, R152 += 1 };
  s1 -> s6 [70, 70] { R6390 += 1, R6326 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R6390 += 1, R6326 += 1, R151 += 1, R152 += 1 };
  s1 -> s2 [71, 74] { R6390 += 1, R6326 += 1, R152 += 1 };
  s1 -> s1 [71, 65535] { R6390 += 1, R6326 += 1, R151 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R6390 += 1, R6326 += 1, R152 += 1 };
  s1 -> s2 [76, 65535] { R6390 += 1, R6326 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R6390 += 1, R6326 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R6390 += 1, R6326 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R6390 += 1, R6326 += 1, R152 += 1 };
  s2 -> s2 [71, 74] { R6390 += 1, R6326 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R6390 += 1, R6326 += 1, R152 += 1 };
  s2 -> s2 [76, 65535] { R6390 += 1, R6326 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R6390 += 1, R6326 += 1, R151 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R6390 += 1, R6326 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R6390 += 1, R6325 += 1, R6326 += 1 };
  s3 -> s4 [70, 70] { R6390 += 1, R6326 += 1, R151 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R6390 += 1, R6326 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R6390 += 1, R6326 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R6390 += 1, R6326 += 1, R151 += 1, R152 += 1 };
  s3 -> s2 [71, 74] { R6390 += 1, R6326 += 1, R152 += 1 };
  s3 -> s1 [71, 65535] { R6390 += 1, R6326 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R6390 += 1, R6326 += 1, R152 += 1 };
  s3 -> s2 [76, 65535] { R6390 += 1, R6326 += 1, R152 += 1 };
  s6 -> s6 [0, 74] { R6390 += 1, R6326 += 1, R152 += 1 };
  s6 -> s10 [75, 75] { R6390 += 1, R6326 += 1, R152 += 1 };
  s6 -> s6 [76, 65535] { R6390 += 1, R6326 += 1, R152 += 1 };
  s7 -> s6 [0, 74] { R6390 += 1, R6326 += 1, R152 += 1 };
  s7 -> s7 [0, 65535] { R6390 += 1, R6326 += 1, R151 += 1, R152 += 1 };
  s7 -> s10 [75, 75] { R6390 += 1, R6326 += 1, R152 += 1 };
  s7 -> s6 [76, 65535] { R6390 += 1, R6326 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R6390 += 1, R6326 += 1, R152 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R6390 += 1 };
  s8 -> s10 [70, 70] { R6390 += 1, R6326 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R6390 += 1, R6326 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R6390 += 1, R6326 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s12 [0, 65535] { R6390 += 1 };
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R6390 += 1, R6326 += 1, R152 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R6390 += 1 };
  s12 -> s12 [0, 65535] { R6390 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R6392 += 1, R6328 += 1, R155 += 1, R156 += 1 };
  s0 -> s0 [0, 65535] { R6391 += 1, R6392 += 1 };
  s0 -> s2 [0, 65535] { R6392 += 1, R6327 += 1, R6328 += 1 };
  s0 -> s3 [70, 70] { R6392 += 1, R6328 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R6392 += 1, R6328 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R6392 += 1, R6328 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R6392 += 1, R6328 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 65535] { R6392 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R6392 += 1, R6328 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R6392 += 1, R6328 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R6392 += 1, R6328 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R6392 += 1, R6328 += 1, R155 += 1, R156 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R6392 += 1, R6327 += 1, R6328 += 1 };
  s2 -> s3 [70, 70] { R6392 += 1, R6328 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R6392 += 1, R6328 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R6392 += 1, R6328 += 1, R155 += 1, R156 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R6392 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R6392 += 1 };
  s4 -> s4 [0, 65535] { R6392 += 1, R6328 += 1, R155 += 1, R156 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6392 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R6394 += 1, R6330 += 1, R161 += 1, R162 += 1 };
  s0 -> s0 [0, 65535] { R6393 += 1, R6394 += 1 };
  s0 -> s2 [0, 65535] { R6394 += 1, R6329 += 1, R6330 += 1 };
  s0 -> s3 [70, 70] { R6394 += 1, R6330 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R6394 += 1, R6330 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R6394 += 1, R6330 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R6394 += 1, R6330 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535] { R6394 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R6394 += 1, R6330 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R6394 += 1, R6330 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R6394 += 1, R6330 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R6394 += 1, R6330 += 1, R161 += 1, R162 += 1 };
  s2 -> s2 [0, 65535] { R6394 += 1, R6329 += 1, R6330 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R6394 += 1, R6330 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R6394 += 1, R6330 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R6394 += 1, R6330 += 1, R161 += 1, R162 += 1 };
  s3 -> s3 [0, 65535] { R6394 += 1, R6330 += 1, R161 += 1, R162 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R6394 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R6394 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6394 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R6396 += 1, R6332 += 1, R167 += 1, R168 += 1 };
  s0 -> s0 [0, 65535] { R6395 += 1, R6396 += 1 };
  s0 -> s2 [0, 65535] { R6396 += 1, R6331 += 1, R6332 += 1 };
  s0 -> s3 [70, 70] { R6396 += 1, R6332 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R6396 += 1, R6332 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R6396 += 1, R6332 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R6396 += 1, R6332 += 1, R167 += 1, R168 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R6396 += 1 };
  s1 -> s3 [70, 70] { R6396 += 1, R6332 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R6396 += 1, R6332 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R6396 += 1, R6332 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R6396 += 1, R6332 += 1, R167 += 1, R168 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R6396 += 1, R6331 += 1, R6332 += 1 };
  s2 -> s3 [70, 70] { R6396 += 1, R6332 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R6396 += 1, R6332 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R6396 += 1, R6332 += 1, R167 += 1, R168 += 1 };
  s3 -> s3 [0, 65535] { R6396 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R6396 += 1 };
  s4 -> s4 [0, 65535] { R6396 += 1, R6332 += 1, R167 += 1, R168 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R6396 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R6398 += 1, R6334 += 1, R175 += 1, R176 += 1 };
  s0 -> s2 [0, 69] { R6398 += 1, R6334 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s3 [0, 69] { R6398 += 1, R6334 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s0 [0, 65535] { R6397 += 1, R6398 += 1 };
  s0 -> s4 [0, 65535] { R6398 += 1, R6333 += 1, R6334 += 1 };
  s0 -> s5 [70, 70] { R6398 += 1, R6334 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s6 [70, 70] { R6398 += 1, R6334 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s7 [70, 70] { R6398 += 1, R6334 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s8 [70, 70] { R6398 += 1, R6334 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s9 [70, 70] { R6398 += 1, R6334 += 1, R175 += 1, R176 += 1 };
  s0 -> s10 [70, 70] { R6398 += 1, R6334 += 1, R175 += 1, R176 += 1 };
  s0 -> s1 [71, 65535] { R6398 += 1, R6334 += 1, R175 += 1, R176 += 1 };
  s0 -> s2 [71, 65535] { R6398 += 1, R6334 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s3 [71, 65535] { R6398 += 1, R6334 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s1 [0, 69] { R6398 += 1, R6334 += 1, R175 += 1, R176 += 1 };
  s1 -> s2 [0, 69] { R6398 += 1, R6334 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s3 [0, 69] { R6398 += 1, R6334 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s5 [70, 70] { R6398 += 1, R6334 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s6 [70, 70] { R6398 += 1, R6334 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s7 [70, 70] { R6398 += 1, R6334 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s8 [70, 70] { R6398 += 1, R6334 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s9 [70, 70] { R6398 += 1, R6334 += 1, R175 += 1, R176 += 1 };
  s1 -> s10 [70, 70] { R6398 += 1, R6334 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [71, 65535] { R6398 += 1, R6334 += 1, R175 += 1, R176 += 1 };
  s1 -> s2 [71, 65535] { R6398 += 1, R6334 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s3 [71, 65535] { R6398 += 1, R6334 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [0, 69] { R6398 += 1, R6334 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s3 [0, 69] { R6398 += 1, R6334 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s5 [70, 70] { R6398 += 1, R6334 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s6 [70, 70] { R6398 += 1, R6334 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s7 [70, 70] { R6398 += 1, R6334 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s8 [70, 70] { R6398 += 1, R6334 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s2 [71, 65535] { R6398 += 1, R6334 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s3 [71, 65535] { R6398 += 1, R6334 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [0, 69] { R6398 += 1, R6334 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s14 [0, 69] { R6398 += 1, R6334 += 1, R176 += 1 };
  s3 -> s11 [70, 70] { R6398 += 1, R6334 += 1, R176 += 1 };
  s3 -> s6 [70, 70] { R6398 += 1, R6334 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s15 [70, 70] { R6398 += 1, R6334 += 1, R176 += 1 };
  s3 -> s7 [70, 70] { R6398 += 1, R6334 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [71, 65535] { R6398 += 1, R6334 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s14 [71, 65535] { R6398 += 1, R6334 += 1, R176 += 1 };
  s4 -> s1 [0, 69] { R6398 += 1, R6334 += 1, R175 += 1, R176 += 1 };
  s4 -> s2 [0, 69] { R6398 += 1, R6334 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s3 [0, 69] { R6398 += 1, R6334 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s4 [0, 65535] { R6398 += 1, R6333 += 1, R6334 += 1 };
  s4 -> s5 [70, 70] { R6398 += 1, R6334 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s6 [70, 70] { R6398 += 1, R6334 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s7 [70, 70] { R6398 += 1, R6334 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s8 [70, 70] { R6398 += 1, R6334 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s9 [70, 70] { R6398 += 1, R6334 += 1, R175 += 1, R176 += 1 };
  s4 -> s10 [70, 70] { R6398 += 1, R6334 += 1, R175 += 1, R176 += 1 };
  s4 -> s1 [71, 65535] { R6398 += 1, R6334 += 1, R175 += 1, R176 += 1 };
  s4 -> s2 [71, 65535] { R6398 += 1, R6334 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s3 [71, 65535] { R6398 += 1, R6334 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s7 -> s11 [0, 65535] { R6398 += 1, R6334 += 1, R176 += 1 };
  s7 -> s7 [0, 65535] { R6398 += 1, R6334 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s8 -> s7 [0, 65535] { R6398 += 1, R6334 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s8 -> s8 [0, 65535] { R6398 += 1, R6334 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s10 -> s7 [0, 65535] { R6398 += 1, R6334 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s10 -> s8 [0, 65535] { R6398 += 1, R6334 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s10 -> s10 [0, 65535] { R6398 += 1, R6334 += 1, R175 += 1, R176 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s11 [0, 65535] { R6398 += 1, R6334 += 1, R176 += 1 };
  s11 -> s13 [0, 65535] { R6398 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R6398 += 1 };
  s14 -> s14 [0, 69] { R6398 += 1, R6334 += 1, R176 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R6398 += 1 };
  s14 -> s11 [70, 70] { R6398 += 1, R6334 += 1, R176 += 1 };
  s14 -> s15 [70, 70] { R6398 += 1, R6334 += 1, R176 += 1 };
  s14 -> s14 [71, 65535] { R6398 += 1, R6334 += 1, R176 += 1 };
  s15 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R6398 += 1 };
  accepting s12, s13, s14, s15, s11;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R6400 += 1, R6336 += 1, R185 += 1, R186 += 1 };
  s0 -> s0 [0, 65535] { R6399 += 1, R6400 += 1 };
  s0 -> s2 [0, 65535] { R6400 += 1, R6335 += 1, R6336 += 1 };
  s0 -> s3 [70, 70] { R6400 += 1, R6336 += 1, R185 += 1, R186 += 1 };
  s0 -> s4 [70, 70] { R6400 += 1, R6336 += 1, R185 += 1, R186 += 1 };
  s0 -> s1 [71, 65535] { R6400 += 1, R6336 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 69] { R6400 += 1, R6336 += 1, R185 += 1, R186 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R6400 += 1 };
  s1 -> s3 [70, 70] { R6400 += 1, R6336 += 1, R185 += 1, R186 += 1 };
  s1 -> s4 [70, 70] { R6400 += 1, R6336 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [71, 65535] { R6400 += 1, R6336 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [0, 69] { R6400 += 1, R6336 += 1, R185 += 1, R186 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R6400 += 1, R6335 += 1, R6336 += 1 };
  s2 -> s3 [70, 70] { R6400 += 1, R6336 += 1, R185 += 1, R186 += 1 };
  s2 -> s4 [70, 70] { R6400 += 1, R6336 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [71, 65535] { R6400 += 1, R6336 += 1, R185 += 1, R186 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R6400 += 1, R6336 += 1, R185 += 1, R186 += 1 };
  s3 -> s6 [0, 65535] { R6400 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R6400 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6400 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R6402 += 1, R6338 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s0 -> s2 [0, 69] { R6402 += 1, R6338 += 1, R5289 += 1, R5290 += 1 };
  s0 -> s3 [0, 69] { R6402 += 1, R6338 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s0 -> s0 [0, 65535] { R6401 += 1, R6402 += 1 };
  s0 -> s4 [0, 65535] { R6402 += 1, R6337 += 1, R6338 += 1 };
  s0 -> s5 [70, 70] { R6402 += 1, R6338 += 1, R5289 += 1, R5290 += 1 };
  s0 -> s6 [70, 70] { R6402 += 1, R6338 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s0 -> s7 [70, 70] { R6402 += 1, R6338 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s0 -> s8 [70, 70] { R6402 += 1, R6338 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s0 -> s9 [70, 70] { R6402 += 1, R6338 += 1, R5289 += 1, R5290 += 1 };
  s0 -> s10 [70, 70] { R6402 += 1, R6338 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s0 -> s1 [71, 65535] { R6402 += 1, R6338 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s0 -> s2 [71, 65535] { R6402 += 1, R6338 += 1, R5289 += 1, R5290 += 1 };
  s0 -> s3 [71, 65535] { R6402 += 1, R6338 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s1 -> s1 [0, 69] { R6402 += 1, R6338 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s1 -> s16 [0, 69] { R6402 += 1, R6338 += 1 };
  s1 -> s3 [0, 69] { R6402 += 1, R6338 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s1 -> s6 [70, 70] { R6402 += 1, R6338 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s1 -> s7 [70, 70] { R6402 += 1, R6338 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s1 -> s8 [70, 70] { R6402 += 1, R6338 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s1 -> s12 [70, 70] { R6402 += 1, R6338 += 1 };
  s1 -> s10 [70, 70] { R6402 += 1, R6338 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s1 -> s18 [70, 70] { R6402 += 1, R6338 += 1 };
  s1 -> s1 [71, 65535] { R6402 += 1, R6338 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s1 -> s16 [71, 65535] { R6402 += 1, R6338 += 1 };
  s1 -> s3 [71, 65535] { R6402 += 1, R6338 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s2 -> s1 [0, 69] { R6402 += 1, R6338 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s2 -> s2 [0, 69] { R6402 += 1, R6338 += 1, R5289 += 1, R5290 += 1 };
  s2 -> s3 [0, 69] { R6402 += 1, R6338 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s2 -> s5 [70, 70] { R6402 += 1, R6338 += 1, R5289 += 1, R5290 += 1 };
  s2 -> s6 [70, 70] { R6402 += 1, R6338 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s2 -> s7 [70, 70] { R6402 += 1, R6338 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s2 -> s8 [70, 70] { R6402 += 1, R6338 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s2 -> s9 [70, 70] { R6402 += 1, R6338 += 1, R5289 += 1, R5290 += 1 };
  s2 -> s10 [70, 70] { R6402 += 1, R6338 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s2 -> s1 [71, 65535] { R6402 += 1, R6338 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s2 -> s2 [71, 65535] { R6402 += 1, R6338 += 1, R5289 += 1, R5290 += 1 };
  s2 -> s3 [71, 65535] { R6402 += 1, R6338 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s3 -> s15 [0, 69] { R6402 += 1, R6338 += 1, R5290 += 1 };
  s3 -> s16 [0, 69] { R6402 += 1, R6338 += 1 };
  s3 -> s3 [0, 69] { R6402 += 1, R6338 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s3 -> s6 [70, 70] { R6402 += 1, R6338 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s3 -> s17 [70, 70] { R6402 += 1, R6338 += 1, R5290 += 1 };
  s3 -> s11 [70, 70] { R6402 += 1, R6338 += 1, R5290 += 1 };
  s3 -> s12 [70, 70] { R6402 += 1, R6338 += 1 };
  s3 -> s10 [70, 70] { R6402 += 1, R6338 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s3 -> s18 [70, 70] { R6402 += 1, R6338 += 1 };
  s3 -> s15 [71, 65535] { R6402 += 1, R6338 += 1, R5290 += 1 };
  s3 -> s16 [71, 65535] { R6402 += 1, R6338 += 1 };
  s3 -> s3 [71, 65535] { R6402 += 1, R6338 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s4 -> s1 [0, 69] { R6402 += 1, R6338 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s4 -> s2 [0, 69] { R6402 += 1, R6338 += 1, R5289 += 1, R5290 += 1 };
  s4 -> s3 [0, 69] { R6402 += 1, R6338 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s4 -> s4 [0, 65535] { R6402 += 1, R6337 += 1, R6338 += 1 };
  s4 -> s5 [70, 70] { R6402 += 1, R6338 += 1, R5289 += 1, R5290 += 1 };
  s4 -> s6 [70, 70] { R6402 += 1, R6338 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s4 -> s7 [70, 70] { R6402 += 1, R6338 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s4 -> s8 [70, 70] { R6402 += 1, R6338 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s4 -> s9 [70, 70] { R6402 += 1, R6338 += 1, R5289 += 1, R5290 += 1 };
  s4 -> s10 [70, 70] { R6402 += 1, R6338 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s4 -> s1 [71, 65535] { R6402 += 1, R6338 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s4 -> s2 [71, 65535] { R6402 += 1, R6338 += 1, R5289 += 1, R5290 += 1 };
  s4 -> s3 [71, 65535] { R6402 += 1, R6338 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s8 -> s8 [0, 65535] { R6402 += 1, R6338 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s8 -> s12 [0, 65535] { R6402 += 1, R6338 += 1 };
  s8 -> s10 [0, 65535] { R6402 += 1, R6338 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s9 -> s8 [0, 65535] { R6402 += 1, R6338 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s9 -> s9 [0, 65535] { R6402 += 1, R6338 += 1, R5289 += 1, R5290 += 1 };
  s9 -> s10 [0, 65535] { R6402 += 1, R6338 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s10 -> s11 [0, 65535] { R6402 += 1, R6338 += 1, R5290 += 1 };
  s10 -> s12 [0, 65535] { R6402 += 1, R6338 += 1 };
  s10 -> s10 [0, 65535] { R6402 += 1, R6338 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s11 -> s11 [0, 65535] { R6402 += 1, R6338 += 1, R5290 += 1 };
  s11 -> s12 [0, 65535] { R6402 += 1, R6338 += 1 };
  s12 -> s13 [0, 65535];
  s12 -> s12 [0, 65535] { R6402 += 1, R6338 += 1 };
  s12 -> s14 [0, 65535] { R6402 += 1 };
  s13 -> s13 [0, 65535];
  s14 -> s13 [0, 65535];
  s14 -> s14 [0, 65535] { R6402 += 1 };
  s15 -> s15 [0, 69] { R6402 += 1, R6338 += 1, R5290 += 1 };
  s15 -> s16 [0, 69] { R6402 += 1, R6338 += 1 };
  s15 -> s17 [70, 70] { R6402 += 1, R6338 += 1, R5290 += 1 };
  s15 -> s11 [70, 70] { R6402 += 1, R6338 += 1, R5290 += 1 };
  s15 -> s12 [70, 70] { R6402 += 1, R6338 += 1 };
  s15 -> s18 [70, 70] { R6402 += 1, R6338 += 1 };
  s15 -> s15 [71, 65535] { R6402 += 1, R6338 += 1, R5290 += 1 };
  s15 -> s16 [71, 65535] { R6402 += 1, R6338 += 1 };
  s16 -> s16 [0, 69] { R6402 += 1, R6338 += 1 };
  s16 -> s13 [0, 65535];
  s16 -> s16 [0, 65535] { R6402 += 1 };
  s16 -> s12 [70, 70] { R6402 += 1, R6338 += 1 };
  s16 -> s18 [70, 70] { R6402 += 1, R6338 += 1 };
  s16 -> s16 [71, 65535] { R6402 += 1, R6338 += 1 };
  s18 -> s13 [0, 65535];
  s18 -> s18 [0, 65535] { R6402 += 1 };
  accepting s16, s12, s13, s14, s18;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R6404 += 1, R6340 += 1, R6247 += 1, R6248 += 1 };
  s0 -> s2 [0, 69] { R6404 += 1, R6340 += 1, R6248 += 1, R6249 += 1, R6250 += 1 };
  s0 -> s3 [0, 69] { R6404 += 1, R6340 += 1, R6248 += 1, R6250 += 1 };
  s0 -> s0 [0, 65535] { R6403 += 1, R6404 += 1 };
  s0 -> s4 [0, 65535] { R6404 += 1, R6339 += 1, R6340 += 1 };
  s0 -> s5 [70, 70] { R6404 += 1, R6340 += 1, R6248 += 1, R6249 += 1, R6250 += 1 };
  s0 -> s6 [70, 70] { R6404 += 1, R6340 += 1, R6248 += 1, R6250 += 1 };
  s0 -> s7 [70, 70] { R6404 += 1, R6340 += 1, R6247 += 1, R6248 += 1 };
  s0 -> s8 [70, 70] { R6404 += 1, R6340 += 1, R6248 += 1, R6250 += 1 };
  s0 -> s9 [70, 70] { R6404 += 1, R6340 += 1, R6247 += 1, R6248 += 1 };
  s0 -> s10 [70, 70] { R6404 += 1, R6340 += 1, R6248 += 1, R6249 += 1, R6250 += 1 };
  s0 -> s3 [71, 74] { R6404 += 1, R6340 += 1, R6248 += 1, R6250 += 1 };
  s0 -> s1 [71, 65535] { R6404 += 1, R6340 += 1, R6247 += 1, R6248 += 1 };
  s0 -> s2 [71, 65535] { R6404 += 1, R6340 += 1, R6248 += 1, R6249 += 1, R6250 += 1 };
  s0 -> s3 [86, 65535] { R6404 += 1, R6340 += 1, R6248 += 1, R6250 += 1 };
  s1 -> s1 [0, 69] { R6404 += 1, R6340 += 1, R6247 += 1, R6248 += 1 };
  s1 -> s2 [0, 69] { R6404 += 1, R6340 += 1, R6248 += 1, R6249 += 1, R6250 += 1 };
  s1 -> s3 [0, 69] { R6404 += 1, R6340 += 1, R6248 += 1, R6250 += 1 };
  s1 -> s5 [70, 70] { R6404 += 1, R6340 += 1, R6248 += 1, R6249 += 1, R6250 += 1 };
  s1 -> s6 [70, 70] { R6404 += 1, R6340 += 1, R6248 += 1, R6250 += 1 };
  s1 -> s7 [70, 70] { R6404 += 1, R6340 += 1, R6247 += 1, R6248 += 1 };
  s1 -> s8 [70, 70] { R6404 += 1, R6340 += 1, R6248 += 1, R6250 += 1 };
  s1 -> s9 [70, 70] { R6404 += 1, R6340 += 1, R6247 += 1, R6248 += 1 };
  s1 -> s10 [70, 70] { R6404 += 1, R6340 += 1, R6248 += 1, R6249 += 1, R6250 += 1 };
  s1 -> s3 [71, 74] { R6404 += 1, R6340 += 1, R6248 += 1, R6250 += 1 };
  s1 -> s1 [71, 65535] { R6404 += 1, R6340 += 1, R6247 += 1, R6248 += 1 };
  s1 -> s2 [71, 65535] { R6404 += 1, R6340 += 1, R6248 += 1, R6249 += 1, R6250 += 1 };
  s1 -> s3 [86, 65535] { R6404 += 1, R6340 += 1, R6248 += 1, R6250 += 1 };
  s2 -> s2 [0, 69] { R6404 += 1, R6340 += 1, R6248 += 1, R6249 += 1, R6250 += 1 };
  s2 -> s3 [0, 69] { R6404 += 1, R6340 += 1, R6248 += 1, R6250 += 1 };
  s2 -> s5 [70, 70] { R6404 += 1, R6340 += 1, R6248 += 1, R6249 += 1, R6250 += 1 };
  s2 -> s6 [70, 70] { R6404 += 1, R6340 += 1, R6248 += 1, R6250 += 1 };
  s2 -> s8 [70, 70] { R6404 += 1, R6340 += 1, R6248 += 1, R6250 += 1 };
  s2 -> s10 [70, 70] { R6404 += 1, R6340 += 1, R6248 += 1, R6249 += 1, R6250 += 1 };
  s2 -> s3 [71, 74] { R6404 += 1, R6340 += 1, R6248 += 1, R6250 += 1 };
  s2 -> s2 [71, 65535] { R6404 += 1, R6340 += 1, R6248 += 1, R6249 += 1, R6250 += 1 };
  s2 -> s3 [86, 65535] { R6404 += 1, R6340 += 1, R6248 += 1, R6250 += 1 };
  s3 -> s3 [0, 69] { R6404 += 1, R6340 += 1, R6248 += 1, R6250 += 1 };
  s3 -> s11 [0, 65535];
  s3 -> s3 [0, 65535] { R6404 += 1 };
  s3 -> s6 [70, 70] { R6404 += 1, R6340 += 1, R6248 += 1, R6250 += 1 };
  s3 -> s8 [70, 70] { R6404 += 1, R6340 += 1, R6248 += 1, R6250 += 1 };
  s3 -> s3 [71, 74] { R6404 += 1, R6340 += 1, R6248 += 1, R6250 += 1 };
  s3 -> s3 [86, 65535] { R6404 += 1, R6340 += 1, R6248 += 1, R6250 += 1 };
  s4 -> s1 [0, 69] { R6404 += 1, R6340 += 1, R6247 += 1, R6248 += 1 };
  s4 -> s2 [0, 69] { R6404 += 1, R6340 += 1, R6248 += 1, R6249 += 1, R6250 += 1 };
  s4 -> s3 [0, 69] { R6404 += 1, R6340 += 1, R6248 += 1, R6250 += 1 };
  s4 -> s4 [0, 65535] { R6404 += 1, R6339 += 1, R6340 += 1 };
  s4 -> s5 [70, 70] { R6404 += 1, R6340 += 1, R6248 += 1, R6249 += 1, R6250 += 1 };
  s4 -> s6 [70, 70] { R6404 += 1, R6340 += 1, R6248 += 1, R6250 += 1 };
  s4 -> s7 [70, 70] { R6404 += 1, R6340 += 1, R6247 += 1, R6248 += 1 };
  s4 -> s8 [70, 70] { R6404 += 1, R6340 += 1, R6248 += 1, R6250 += 1 };
  s4 -> s9 [70, 70] { R6404 += 1, R6340 += 1, R6247 += 1, R6248 += 1 };
  s4 -> s10 [70, 70] { R6404 += 1, R6340 += 1, R6248 += 1, R6249 += 1, R6250 += 1 };
  s4 -> s3 [71, 74] { R6404 += 1, R6340 += 1, R6248 += 1, R6250 += 1 };
  s4 -> s1 [71, 65535] { R6404 += 1, R6340 += 1, R6247 += 1, R6248 += 1 };
  s4 -> s2 [71, 65535] { R6404 += 1, R6340 += 1, R6248 += 1, R6249 += 1, R6250 += 1 };
  s4 -> s3 [86, 65535] { R6404 += 1, R6340 += 1, R6248 += 1, R6250 += 1 };
  s5 -> s6 [0, 74] { R6404 += 1, R6340 += 1, R6248 += 1, R6250 += 1 };
  s5 -> s5 [0, 65535] { R6404 += 1, R6340 += 1, R6248 += 1, R6249 += 1, R6250 += 1 };
  s5 -> s6 [86, 65535] { R6404 += 1, R6340 += 1, R6248 += 1, R6250 += 1 };
  s6 -> s6 [0, 74] { R6404 += 1, R6340 += 1, R6248 += 1, R6250 += 1 };
  s6 -> s11 [0, 65535];
  s6 -> s6 [0, 65535] { R6404 += 1 };
  s6 -> s6 [86, 65535] { R6404 += 1, R6340 += 1, R6248 += 1, R6250 += 1 };
  s7 -> s6 [0, 74] { R6404 += 1, R6340 += 1, R6248 += 1, R6250 += 1 };
  s7 -> s5 [0, 65535] { R6404 += 1, R6340 += 1, R6248 += 1, R6249 += 1, R6250 += 1 };
  s7 -> s7 [0, 65535] { R6404 += 1, R6340 += 1, R6247 += 1, R6248 += 1 };
  s7 -> s6 [86, 65535] { R6404 += 1, R6340 += 1, R6248 += 1, R6250 += 1 };
  s8 -> s11 [0, 65535];
  s8 -> s8 [0, 65535] { R6404 += 1 };
  s11 -> s11 [0, 65535];
  accepting s3, s6, s8, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
constraint R2 = R6284 && R3 = R6404 && R25 - R6404 = -1 && R26 = R6404 && R27 - R6404 = -1 && R28 = R6404 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R6252 + -1*R6248 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R6252 + -1*R6248 - R130 = 0 && R129 + R6251 + R6247 = 0 && R131 + R6253 + R6249 = 0 && R132 + R6254 + R6250 = 0 && R6283 = 0 && R6315 = 0 && R6316 = 0 && R6325 = 0 && R6326 = 0 && R6333 = 0 && R6334 = 0 && R6337 = 0 && R6338 = 0 && R6339 = 0 && R6340 = 0 && R6341 = 0 && R6342 = R6404 && R6343 = 0 && R6344 = R6404 && R6345 = 0 && R6346 = R6404 && R6347 = 0 && R6348 = R6404 && R6349 = 0 && R6350 = R6404 && R6351 = 0 && R6352 = R6404 && R6353 = 0 && R6354 = R6404 && R6355 = 0 && R6356 = R6404 && R6357 = 0 && R6358 = R6404 && R6359 = 0 && R6360 = R6404 && R6361 = 0 && R6362 = R6404 && R6363 = 0 && R6364 = R6404 && R6365 = 0 && R6366 = R6404 && R6367 = 0 && R6368 = R6404 && R6369 = 0 && R6370 = R6404 && R6371 = 0 && R6372 = R6404 && R6373 = 0 && R6374 = R6404 && R6375 = 0 && R6376 = R6404 && R6377 = 0 && R6378 = R6404 && R6379 = 0 && R6380 = R6404 && R6381 = 0 && R6382 = R6404 && R6383 = 0 && R6384 = R6404 && R6385 = 0 && R6386 = R6404 && R6387 = 0 && R6388 = R6404 && R6389 = 0 && R6390 = R6404 && R6391 = 0 && R6392 = R6404 && R6393 = 0 && R6394 = R6404 && R6395 = 0 && R6396 = R6404 && R6397 = 0 && R6398 = R6404 && R6399 = 0 && R6400 = R6404 && R6401 = 0 && R6402 = R6404 && R6403 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R6252 + -1*R6248 - R130 < 1 && -1 < R6284 && 0 < R6404 && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R6252 + -1*R6248 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R191 + R187 = 0 && R114 + R192 + R188 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R6252 + -1*R6248 - R130 = 0 || R130 + R6252 + R6248 < 1) && (R81 + R158 + R155 = 0 || R130 + R6252 + R6248 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R6252 + -1*R6248 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R6252 + R6248 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R6252 + -1*R6248 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R6252 + R6248 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R6252 + -1*R6248 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R6252 + R6248 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 != 0 || R112 + R190 + R186 + -1*R6252 + -1*R6248 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R6252 + R6248 = 0)) && (R113 + R191 + R187 != 0 || R83 + R160 + R157 + -1*R192 + -1*R188 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R5294 + R5289 != 0 || R120 + R5295 + R5290 + -1*R6252 + -1*R6248 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R6252 + R6248 = 0)) && (R6255 != 0 || R6256 = R6284 || (R22 = 0 && R6284 = 0)) && (R6257 != 0 || R6258 = R6284 || (R22 = 0 && R6284 = 0)) && (R6259 != 0 || R6260 = R6284 || (R22 = 0 && R6284 = 0)) && (R6261 != 0 || R6262 = R6284 || (R22 = 0 && R6284 = 0)) && (R6263 != 0 || R6264 = R6284 || (R22 = 0 && R6284 = 0)) && (R6265 != 0 || R6266 = R6284 || (R22 = 0 && R6284 = 0)) && (R6267 != 0 || R6268 = R6284 || (R22 = 0 && R6284 = 0)) && (R6269 != 0 || R6270 = R6284 || (R22 = 0 && R6284 = 0)) && (R6271 != 0 || R6272 = R6284 || (R22 = 0 && R6284 = 0)) && (R6273 != 0 || R6274 = R6284 || (R22 = 0 && R6284 = 0)) && (R6275 != 0 || R6276 = R6284 || (R22 = 0 && R6284 = 0)) && (R6277 != 0 || R6278 = R6284 || (R22 = 0 && R6284 = 0)) && (R6279 != 0 || R6280 = R6284 || (R22 = 0 && R6284 = 0)) && (R6281 != 0 || R6282 = R6284 || (R22 = 0 && R6284 = 0)) && (R23 = 0 || (R6313 = 0 && R6314 = 0)) && (R23 = 0 || (R6317 = 0 && R6318 = 0)) && (R23 = 0 || (R6319 = 0 && R6320 = 0)) && (R23 = 0 || (R6321 = 0 && R6322 = 0)) && (R23 = 0 || (R6323 = 0 && R6324 = 0)) && (R23 = 0 || (R6327 = 0 && R6328 = 0)) && (R23 = 0 || (R6329 = 0 && R6330 = 0)) && (R23 = 0 || (R6331 = 0 && R6332 = 0)) && (R23 = 0 || (R6335 = 0 && R6336 = 0)) && (R24 = 0 || (R6285 = 0 && R6286 = 0)) && (R24 = 0 || (R6287 = 0 && R6288 = 0)) && (R24 = 0 || (R6289 = 0 && R6290 = 0)) && (R24 = 0 || (R6291 = 0 && R6292 = 0)) && (R24 = 0 || (R6293 = 0 && R6294 = 0)) && (R24 = 0 || (R6295 = 0 && R6296 = 0)) && (R24 = 0 || (R6297 = 0 && R6298 = 0)) && (R24 = 0 || (R6299 = 0 && R6300 = 0)) && (R24 = 0 || (R6301 = 0 && R6302 = 0)) && (R24 = 0 || (R6303 = 0 && R6304 = 0)) && (R24 = 0 || (R6305 = 0 && R6306 = 0)) && (R24 = 0 || (R6307 = 0 && R6308 = 0)) && (R24 = 0 || (R6309 = 0 && R6310 = 0)) && (R24 = 0 || (R6311 = 0 && R6312 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R6252 + R6248 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R6252 + R6248 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R6252 + R6248 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 = 0 || (R83 + R160 + R157 = 0 && R130 + R6252 + R6248 = 0)) && (R113 + R191 + R187 = 0 || R83 + R160 + R157 < 1) && (R119 + R5294 + R5289 = 0 || (R83 + R160 + R157 = 0 && R130 + R6252 + R6248 = 0)) && (R123 + R5298 + R5293 = 0 || (R121 + R5296 + R5291 = 0 && R122 + R5297 + R5292 = 0)) && (R6255 = 0 || (R22 = 0 && R6284 = 0)) && (R6257 = 0 || (R22 = 0 && R6284 = 0)) && (R6259 = 0 || (R22 = 0 && R6284 = 0)) && (R6261 = 0 || (R22 = 0 && R6284 = 0)) && (R6263 = 0 || (R22 = 0 && R6284 = 0)) && (R6265 = 0 || (R22 = 0 && R6284 = 0)) && (R6267 = 0 || (R22 = 0 && R6284 = 0)) && (R6269 = 0 || (R22 = 0 && R6284 = 0)) && (R6271 = 0 || (R22 = 0 && R6284 = 0)) && (R6273 = 0 || (R22 = 0 && R6284 = 0)) && (R6275 = 0 || (R22 = 0 && R6284 = 0)) && (R6277 = 0 || (R22 = 0 && R6284 = 0)) && (R6279 = 0 || (R22 = 0 && R6284 = 0)) && (R6281 = 0 || (R22 = 0 && R6284 = 0));
// End of Parikh automata intersection problem
