// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R1309, R131, R1310, R1311, R1312, R1313, R1314, R1315, R1316, R1317, R1318, R1319, R132, R1320, R1321, R1322, R1323, R1324, R1325, R1326, R1327, R1328, R1329, R1330, R1331, R1332, R1333, R1334, R1335, R1336, R1337, R1338, R1339, R1340, R1341, R1342, R1343, R1344, R1345, R1346, R1347, R1348, R1349, R1350, R1351, R1352, R1353, R1354, R1355, R1356, R1357, R1358, R1359, R1360, R1361, R1362, R1363, R1364, R1365, R1366, R1367, R1368, R1369, R137, R1370, R1371, R1372, R1373, R1374, R1375, R1376, R1377, R1378, R1379, R138, R1380, R1381, R1382, R1383, R1384, R1385, R1386, R1387, R1388, R1389, R139, R1390, R1391, R1392, R1393, R1394, R1395, R1396, R1397, R1398, R1399, R140, R1400, R1401, R1402, R1403, R1404, R1405, R1406, R1407, R1408, R1409, R141, R1410, R1411, R1412, R1413, R1414, R1415, R1416, R1417, R1418, R1419, R142, R1420, R1421, R1422, R1423, R1424, R1425, R1426, R1427, R1428, R1429, R143, R1430, R1431, R1432, R1433, R1434, R1435, R1436, R1437, R1438, R1439, R144, R1440, R1441, R1442, R1443, R1444, R1445, R1446, R1447, R1448, R1449, R145, R1450, R1451, R1452, R1453, R1454, R1455, R1456, R1457, R1458, R1459, R146, R1460, R1461, R1462, R1463, R1464, R1465, R1466, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R193, R194, R195, R196, R197, R198, R199, R2, R200, R201, R202, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R5, R63, R65, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R26 += 1 };
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R1348 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R1347 += 1, R1348 += 1 };
  s1 -> s1 [0, 65535] { R1348 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R1350 += 1 };
  s0 -> s0 [0, 65535] { R1349 += 1, R1350 += 1 };
  s0 -> s2 [70, 70] { R1350 += 1 };
  s0 -> s3 [70, 70] { R1350 += 1 };
  s0 -> s1 [76, 65535] { R1350 += 1 };
  s1 -> s1 [0, 69] { R1350 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1350 += 1 };
  s1 -> s3 [70, 70] { R1350 += 1 };
  s1 -> s1 [76, 65535] { R1350 += 1 };
  s2 -> s2 [0, 70] { R1350 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R1350 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R1352 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R1351 += 1, R1352 += 1 };
  s0 -> s2 [70, 70] { R1352 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R1352 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R1352 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R1352 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1352 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R1352 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R1352 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R1352 += 1, R63 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R1354 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R1353 += 1, R1354 += 1 };
  s0 -> s2 [70, 70] { R1354 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R1354 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R1354 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R1354 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1354 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R1354 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R1354 += 1, R65 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1354 += 1, R65 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R1356 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R1355 += 1, R1356 += 1 };
  s0 -> s2 [70, 70] { R1356 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R1356 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R1356 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R1356 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1356 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R1356 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R1356 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1356 += 1, R67 += 1, R68 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R1358 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R1357 += 1, R1358 += 1 };
  s0 -> s2 [70, 70] { R1358 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R1358 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R1358 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R1358 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1358 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R1358 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R1358 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R1358 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R1360 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R1359 += 1, R1360 += 1 };
  s0 -> s2 [70, 70] { R1360 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R1360 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R1360 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R1360 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1360 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R1360 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R1360 += 1, R77 += 1, R78 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1360 += 1, R77 += 1, R78 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R1362 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R1361 += 1, R1362 += 1 };
  s0 -> s2 [70, 70] { R1362 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R1362 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R1362 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R1362 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1362 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R1362 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R1362 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535] { R1362 += 1, R81 += 1, R82 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R1364 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R1363 += 1, R1364 += 1 };
  s0 -> s2 [70, 70] { R1364 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R1364 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R1364 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R1364 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1364 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R1364 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R1364 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535] { R1364 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R1366 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R1365 += 1, R1366 += 1 };
  s0 -> s2 [70, 70] { R1366 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R1366 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R1366 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R1366 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1366 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R1366 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R1366 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1366 += 1, R93 += 1, R94 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R1368 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R1367 += 1, R1368 += 1 };
  s0 -> s2 [70, 70] { R1368 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R1368 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R1368 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R1368 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1368 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R1368 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R1368 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535] { R1368 += 1, R101 += 1, R102 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R1370 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R1369 += 1, R1370 += 1 };
  s0 -> s2 [70, 70] { R1370 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R1370 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R1370 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R1370 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1370 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R1370 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R1370 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1370 += 1, R111 += 1, R112 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R1372 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R1371 += 1, R1372 += 1 };
  s0 -> s2 [70, 70] { R1372 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R1372 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R1372 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R1372 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1372 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R1372 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R1372 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1372 += 1, R119 += 1, R120 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R1374 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R1373 += 1, R1374 += 1 };
  s0 -> s2 [70, 70] { R1374 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R1374 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R1374 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R1374 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1374 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R1374 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R1374 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1374 += 1, R129 += 1, R130 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R1404 += 1 };
  s0 -> s0 [0, 65535] { R1403 += 1, R1404 += 1 };
  s0 -> s2 [70, 70] { R1404 += 1 };
  s0 -> s1 [71, 65535] { R1404 += 1 };
  s1 -> s1 [0, 69] { R1404 += 1 };
  s1 -> s2 [70, 70] { R1404 += 1 };
  s1 -> s1 [71, 65535] { R1404 += 1 };
  s2 -> s2 [0, 65535] { R1404 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R1405 += 1, R1406 += 1 };
  s0 -> s1 [0, 65535] { R1406 += 1, R2 += 1 };
  s1 -> s1 [0, 65535] { R1406 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R1408 += 1 };
  s0 -> s2 [0, 65535] { R1408 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R1407 += 1, R1408 += 1 };
  s0 -> s3 [70, 70] { R1408 += 1 };
  s0 -> s1 [71, 65535] { R1408 += 1 };
  s1 -> s1 [0, 69] { R1408 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R1408 += 1 };
  s1 -> s1 [71, 65535] { R1408 += 1 };
  s2 -> s1 [0, 69] { R1408 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1408 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R1408 += 1 };
  s2 -> s1 [71, 65535] { R1408 += 1 };
  s3 -> s3 [0, 65535] { R1408 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R1410 += 1, R1318 += 1 };
  s0 -> s0 [0, 65535] { R1409 += 1, R1410 += 1 };
  s0 -> s2 [0, 65535] { R1410 += 1, R1317 += 1, R1318 += 1 };
  s0 -> s1 [71, 65535] { R1410 += 1, R1318 += 1 };
  s1 -> s1 [0, 69] { R1410 += 1, R1318 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R1410 += 1 };
  s1 -> s1 [71, 65535] { R1410 += 1, R1318 += 1 };
  s2 -> s1 [0, 69] { R1410 += 1, R1318 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1410 += 1, R1317 += 1, R1318 += 1 };
  s2 -> s1 [71, 65535] { R1410 += 1, R1318 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R1412 += 1, R1320 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R1411 += 1, R1412 += 1 };
  s0 -> s2 [0, 65535] { R1412 += 1, R1319 += 1, R1320 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R1412 += 1, R1320 += 1, R22 += 1 };
  s1 -> s4 [0, 65535] { R1412 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R1412 += 1, R1320 += 1, R22 += 1 };
  s2 -> s2 [0, 65535] { R1412 += 1, R1319 += 1, R1320 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1412 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R1414 += 1, R1322 += 1 };
  s0 -> s2 [0, 65535] { R1414 += 1, R1321 += 1, R1322 += 1 };
  s0 -> s0 [0, 65535] { R1413 += 1, R1414 += 1 };
  s0 -> s1 [75, 65535] { R1414 += 1, R1322 += 1 };
  s1 -> s1 [0, 70] { R1414 += 1, R1322 += 1 };
  s1 -> s1 [0, 65535] { R1414 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R1414 += 1, R1322 += 1 };
  s2 -> s1 [0, 70] { R1414 += 1, R1322 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1414 += 1, R1321 += 1, R1322 += 1 };
  s2 -> s1 [75, 65535] { R1414 += 1, R1322 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R1416 += 1, R1324 += 1, R138 += 1 };
  s0 -> s2 [0, 65535] { R1416 += 1, R1323 += 1, R1324 += 1 };
  s0 -> s0 [0, 65535] { R1415 += 1, R1416 += 1 };
  s1 -> s4 [0, 65535] { R1416 += 1 };
  s1 -> s1 [0, 65535] { R1416 += 1, R1324 += 1, R138 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R1416 += 1, R1324 += 1, R138 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1416 += 1, R1323 += 1, R1324 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1416 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R1418 += 1, R1326 += 1 };
  s0 -> s2 [0, 65535] { R1418 += 1, R1326 += 1, R140 += 1 };
  s0 -> s3 [0, 65535] { R1418 += 1, R1325 += 1, R1326 += 1 };
  s0 -> s0 [0, 65535] { R1417 += 1, R1418 += 1 };
  s0 -> s1 [76, 65535] { R1418 += 1, R1326 += 1 };
  s1 -> s1 [0, 74] { R1418 += 1, R1326 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R1418 += 1 };
  s1 -> s1 [76, 65535] { R1418 += 1, R1326 += 1 };
  s2 -> s1 [0, 74] { R1418 += 1, R1326 += 1 };
  s2 -> s5 [0, 65535] { R1418 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1418 += 1, R1326 += 1, R140 += 1 };
  s2 -> s1 [76, 65535] { R1418 += 1, R1326 += 1 };
  s3 -> s1 [0, 74] { R1418 += 1, R1326 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R1418 += 1, R1326 += 1, R140 += 1 };
  s3 -> s3 [0, 65535] { R1418 += 1, R1325 += 1, R1326 += 1 };
  s3 -> s1 [76, 65535] { R1418 += 1, R1326 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1418 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R1419 += 1, R1420 += 1 };
  s0 -> s1 [0, 65535] { R1420 += 1, R1328 += 1, R145 += 1, R146 += 1 };
  s0 -> s2 [0, 65535] { R1420 += 1, R1327 += 1, R1328 += 1 };
  s0 -> s3 [0, 65535] { R1420 += 1, R1328 += 1, R144 += 1, R145 += 1 };
  s1 -> s4 [0, 65535] { R1420 += 1 };
  s1 -> s6 [0, 65535] { R1420 += 1, R1328 += 1 };
  s1 -> s1 [0, 65535] { R1420 += 1, R1328 += 1, R145 += 1, R146 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R1420 += 1, R1328 += 1, R145 += 1, R146 += 1 };
  s2 -> s2 [0, 65535] { R1420 += 1, R1327 += 1, R1328 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R1420 += 1, R1328 += 1, R144 += 1, R145 += 1 };
  s3 -> s4 [0, 65535] { R1420 += 1 };
  s3 -> s1 [0, 65535] { R1420 += 1, R1328 += 1, R145 += 1, R146 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1420 += 1, R1328 += 1, R144 += 1, R145 += 1 };
  s4 -> s4 [0, 65535] { R1420 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R1420 += 1 };
  s6 -> s6 [0, 65535] { R1420 += 1, R1328 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R1422 += 1, R1330 += 1, R150 += 1 };
  s0 -> s0 [0, 65535] { R1421 += 1, R1422 += 1 };
  s0 -> s2 [0, 65535] { R1422 += 1, R1329 += 1, R1330 += 1 };
  s0 -> s3 [0, 65535] { R1422 += 1, R1330 += 1, R149 += 1, R150 += 1 };
  s0 -> s4 [75, 75] { R1422 += 1, R1330 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R1422 += 1, R1330 += 1, R150 += 1 };
  s0 -> s1 [86, 65535] { R1422 += 1, R1330 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R1422 += 1, R1330 += 1, R150 += 1 };
  s1 -> s6 [0, 65535] { R1422 += 1 };
  s1 -> s1 [0, 65535] { R1422 += 1, R1330 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [75, 75] { R1422 += 1, R1330 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R1422 += 1, R1330 += 1, R150 += 1 };
  s1 -> s1 [86, 65535] { R1422 += 1, R1330 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R1422 += 1, R1330 += 1, R150 += 1 };
  s2 -> s2 [0, 65535] { R1422 += 1, R1329 += 1, R1330 += 1 };
  s2 -> s3 [0, 65535] { R1422 += 1, R1330 += 1, R149 += 1, R150 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [75, 75] { R1422 += 1, R1330 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R1422 += 1, R1330 += 1, R150 += 1 };
  s2 -> s1 [86, 65535] { R1422 += 1, R1330 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R1422 += 1, R1330 += 1, R150 += 1 };
  s3 -> s6 [0, 65535] { R1422 += 1 };
  s3 -> s3 [0, 65535] { R1422 += 1, R1330 += 1, R149 += 1, R150 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [75, 75] { R1422 += 1, R1330 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R1422 += 1, R1330 += 1, R150 += 1 };
  s3 -> s1 [86, 65535] { R1422 += 1, R1330 += 1, R150 += 1 };
  s4 -> s4 [0, 75] { R1422 += 1, R1330 += 1, R150 += 1 };
  s4 -> s4 [0, 65535] { R1422 += 1, R1330 += 1 };
  s4 -> s6 [0, 65535] { R1422 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [86, 65535] { R1422 += 1, R1330 += 1, R150 += 1 };
  s5 -> s6 [0, 65535] { R1422 += 1 };
  s5 -> s5 [0, 65535] { R1422 += 1, R1330 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R1422 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R1424 += 1, R1331 += 1, R1332 += 1 };
  s0 -> s2 [0, 65535] { R1424 += 1, R1332 += 1 };
  s0 -> s3 [0, 65535] { R1424 += 1, R1332 += 1, R154 += 1 };
  s0 -> s0 [0, 65535] { R1423 += 1, R1424 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R1424 += 1, R1331 += 1, R1332 += 1 };
  s1 -> s2 [0, 65535] { R1424 += 1, R1332 += 1 };
  s1 -> s3 [0, 65535] { R1424 += 1, R1332 += 1, R154 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1424 += 1, R1332 += 1 };
  s2 -> s5 [0, 65535] { R1424 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R1424 += 1, R1332 += 1 };
  s3 -> s3 [0, 65535] { R1424 += 1, R1332 += 1, R154 += 1 };
  s3 -> s5 [0, 65535] { R1424 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1424 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R1426 += 1, R1334 += 1, R158 += 1, R159 += 1 };
  s0 -> s2 [0, 65535] { R1426 += 1, R1333 += 1, R1334 += 1 };
  s0 -> s3 [0, 65535] { R1426 += 1, R1334 += 1, R159 += 1, R160 += 1 };
  s0 -> s0 [0, 65535] { R1425 += 1, R1426 += 1 };
  s1 -> s4 [0, 65535] { R1426 += 1 };
  s1 -> s1 [0, 65535] { R1426 += 1, R1334 += 1, R158 += 1, R159 += 1 };
  s1 -> s3 [0, 65535] { R1426 += 1, R1334 += 1, R159 += 1, R160 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s1 [0, 65535] { R1426 += 1, R1334 += 1, R158 += 1, R159 += 1 };
  s2 -> s2 [0, 65535] { R1426 += 1, R1333 += 1, R1334 += 1 };
  s2 -> s3 [0, 65535] { R1426 += 1, R1334 += 1, R159 += 1, R160 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R1426 += 1 };
  s3 -> s3 [0, 65535] { R1426 += 1, R1334 += 1, R159 += 1, R160 += 1 };
  s3 -> s5 [0, 65535] { R1426 += 1, R1334 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R1426 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s4 [0, 65535] { R1426 += 1 };
  s5 -> s5 [0, 65535] { R1426 += 1, R1334 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R1428 += 1, R1336 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R1428 += 1, R1336 += 1, R164 += 1, R165 += 1 };
  s0 -> s3 [0, 65535] { R1428 += 1, R1336 += 1, R165 += 1, R166 += 1 };
  s0 -> s4 [0, 65535] { R1428 += 1, R1335 += 1, R1336 += 1 };
  s0 -> s0 [0, 65535] { R1427 += 1, R1428 += 1 };
  s0 -> s1 [76, 65535] { R1428 += 1, R1336 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R1428 += 1, R1336 += 1, R165 += 1 };
  s1 -> s6 [0, 65535] { R1428 += 1 };
  s1 -> s1 [0, 65535] { R1428 += 1, R1336 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R1428 += 1, R1336 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R1428 += 1, R1336 += 1, R165 += 1 };
  s2 -> s2 [0, 65535] { R1428 += 1, R1336 += 1, R164 += 1, R165 += 1 };
  s2 -> s6 [0, 65535] { R1428 += 1 };
  s2 -> s3 [0, 65535] { R1428 += 1, R1336 += 1, R165 += 1, R166 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [76, 65535] { R1428 += 1, R1336 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R1428 += 1, R1336 += 1, R165 += 1 };
  s3 -> s6 [0, 65535] { R1428 += 1 };
  s3 -> s3 [0, 65535] { R1428 += 1, R1336 += 1, R165 += 1, R166 += 1 };
  s3 -> s7 [0, 65535] { R1428 += 1, R1336 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [76, 65535] { R1428 += 1, R1336 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R1428 += 1, R1336 += 1, R165 += 1 };
  s4 -> s2 [0, 65535] { R1428 += 1, R1336 += 1, R164 += 1, R165 += 1 };
  s4 -> s3 [0, 65535] { R1428 += 1, R1336 += 1, R165 += 1, R166 += 1 };
  s4 -> s4 [0, 65535] { R1428 += 1, R1335 += 1, R1336 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s1 [76, 65535] { R1428 += 1, R1336 += 1, R165 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1428 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R1428 += 1 };
  s7 -> s7 [0, 65535] { R1428 += 1, R1336 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R1430 += 1, R1338 += 1, R172 += 1, R174 += 1 };
  s0 -> s2 [0, 65535] { R1430 += 1, R1338 += 1, R171 += 1, R172 += 1 };
  s0 -> s0 [0, 65535] { R1429 += 1, R1430 += 1 };
  s0 -> s3 [0, 65535] { R1430 += 1, R1337 += 1, R1338 += 1 };
  s0 -> s4 [0, 65535] { R1430 += 1, R1338 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s1 [76, 65535] { R1430 += 1, R1338 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R1430 += 1, R1338 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 65535] { R1430 += 1, R1338 += 1, R172 += 1 };
  s1 -> s5 [0, 65535] { R1430 += 1, R1338 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R1430 += 1 };
  s1 -> s1 [76, 65535] { R1430 += 1, R1338 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R1430 += 1, R1338 += 1, R172 += 1, R174 += 1 };
  s2 -> s2 [0, 65535] { R1430 += 1, R1338 += 1, R171 += 1, R172 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [0, 65535] { R1430 += 1, R1338 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s7 [0, 65535] { R1430 += 1 };
  s2 -> s1 [76, 65535] { R1430 += 1, R1338 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R1430 += 1, R1338 += 1, R172 += 1, R174 += 1 };
  s3 -> s2 [0, 65535] { R1430 += 1, R1338 += 1, R171 += 1, R172 += 1 };
  s3 -> s3 [0, 65535] { R1430 += 1, R1337 += 1, R1338 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R1430 += 1, R1338 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s1 [76, 65535] { R1430 += 1, R1338 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R1430 += 1, R1338 += 1, R172 += 1, R174 += 1 };
  s4 -> s5 [0, 65535] { R1430 += 1, R1338 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R1430 += 1, R1338 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s7 [0, 65535] { R1430 += 1 };
  s4 -> s1 [76, 65535] { R1430 += 1, R1338 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535] { R1430 += 1, R1338 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R1430 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R1430 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s0 [0, 65535] { R1431 += 1, R1432 += 1 };
  s0 -> s1 [0, 65535] { R1432 += 1, R1340 += 1 };
  s0 -> s2 [0, 65535] { R1432 += 1, R1339 += 1, R1340 += 1 };
  s0 -> s3 [0, 65535] { R1432 += 1, R1340 += 1, R181 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R1432 += 1 };
  s1 -> s1 [0, 65535] { R1432 += 1, R1340 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R1432 += 1, R1340 += 1 };
  s2 -> s2 [0, 65535] { R1432 += 1, R1339 += 1, R1340 += 1 };
  s2 -> s3 [0, 65535] { R1432 += 1, R1340 += 1, R181 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R1432 += 1 };
  s3 -> s1 [0, 65535] { R1432 += 1, R1340 += 1 };
  s3 -> s3 [0, 65535] { R1432 += 1, R1340 += 1, R181 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1432 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R1434 += 1, R1342 += 1, R190 += 1, R192 += 1 };
  s0 -> s2 [0, 65535] { R1434 += 1, R1342 += 1, R189 += 1, R190 += 1 };
  s0 -> s0 [0, 65535] { R1433 += 1, R1434 += 1 };
  s0 -> s3 [0, 65535] { R1434 += 1, R1342 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s0 -> s4 [0, 65535] { R1434 += 1, R1341 += 1, R1342 += 1 };
  s0 -> s1 [85, 65535] { R1434 += 1, R1342 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 75] { R1434 += 1, R1342 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 65535] { R1434 += 1, R1342 += 1, R190 += 1 };
  s1 -> s6 [0, 65535] { R1434 += 1 };
  s1 -> s7 [0, 65535] { R1434 += 1, R1342 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [85, 65535] { R1434 += 1, R1342 += 1, R190 += 1, R192 += 1 };
  s2 -> s1 [0, 75] { R1434 += 1, R1342 += 1, R190 += 1, R192 += 1 };
  s2 -> s2 [0, 65535] { R1434 += 1, R1342 += 1, R189 += 1, R190 += 1 };
  s2 -> s3 [0, 65535] { R1434 += 1, R1342 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s2 -> s6 [0, 65535] { R1434 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [85, 65535] { R1434 += 1, R1342 += 1, R190 += 1, R192 += 1 };
  s3 -> s1 [0, 75] { R1434 += 1, R1342 += 1, R190 += 1, R192 += 1 };
  s3 -> s3 [0, 65535] { R1434 += 1, R1342 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s3 -> s6 [0, 65535] { R1434 += 1 };
  s3 -> s7 [0, 65535] { R1434 += 1, R1342 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [85, 65535] { R1434 += 1, R1342 += 1, R190 += 1, R192 += 1 };
  s4 -> s1 [0, 75] { R1434 += 1, R1342 += 1, R190 += 1, R192 += 1 };
  s4 -> s2 [0, 65535] { R1434 += 1, R1342 += 1, R189 += 1, R190 += 1 };
  s4 -> s3 [0, 65535] { R1434 += 1, R1342 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s4 -> s4 [0, 65535] { R1434 += 1, R1341 += 1, R1342 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s1 [85, 65535] { R1434 += 1, R1342 += 1, R190 += 1, R192 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1434 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R1434 += 1 };
  s7 -> s7 [0, 65535] { R1434 += 1, R1342 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R1436 += 1, R1344 += 1, R198 += 1, R199 += 1 };
  s0 -> s2 [0, 65535] { R1436 += 1, R1344 += 1, R199 += 1, R200 += 1, R201 += 1 };
  s0 -> s0 [0, 65535] { R1435 += 1, R1436 += 1 };
  s0 -> s3 [0, 65535] { R1436 += 1, R1344 += 1, R199 += 1, R201 += 1, R202 += 1 };
  s0 -> s4 [0, 65535] { R1436 += 1, R1343 += 1, R1344 += 1 };
  s1 -> s1 [0, 65535] { R1436 += 1, R1344 += 1, R198 += 1, R199 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R1436 += 1, R1344 += 1, R199 += 1, R200 += 1, R201 += 1 };
  s1 -> s3 [0, 65535] { R1436 += 1, R1344 += 1, R199 += 1, R201 += 1, R202 += 1 };
  s1 -> s8 [0, 65535] { R1436 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1436 += 1, R1344 += 1, R199 += 1, R200 += 1, R201 += 1 };
  s2 -> s7 [0, 65535] { R1436 += 1, R1344 += 1 };
  s2 -> s3 [0, 65535] { R1436 += 1, R1344 += 1, R199 += 1, R201 += 1, R202 += 1 };
  s2 -> s8 [0, 65535] { R1436 += 1 };
  s3 -> s6 [0, 65535] { R1436 += 1, R1344 += 1, R199 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s7 [0, 65535] { R1436 += 1, R1344 += 1 };
  s3 -> s3 [0, 65535] { R1436 += 1, R1344 += 1, R199 += 1, R201 += 1, R202 += 1 };
  s3 -> s8 [0, 65535] { R1436 += 1 };
  s4 -> s1 [0, 65535] { R1436 += 1, R1344 += 1, R198 += 1, R199 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R1436 += 1, R1344 += 1, R199 += 1, R200 += 1, R201 += 1 };
  s4 -> s3 [0, 65535] { R1436 += 1, R1344 += 1, R199 += 1, R201 += 1, R202 += 1 };
  s4 -> s4 [0, 65535] { R1436 += 1, R1343 += 1, R1344 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1436 += 1, R1344 += 1, R199 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s7 [0, 65535] { R1436 += 1, R1344 += 1 };
  s6 -> s8 [0, 65535] { R1436 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R1436 += 1, R1344 += 1 };
  s7 -> s8 [0, 65535] { R1436 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s8 [0, 65535] { R1436 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 74] { R1438 += 1, R1346 += 1, R1314 += 1, R1316 += 1 };
  s0 -> s2 [0, 65535] { R1438 += 1, R1345 += 1, R1346 += 1 };
  s0 -> s0 [0, 65535] { R1437 += 1, R1438 += 1 };
  s0 -> s3 [0, 65535] { R1438 += 1, R1346 += 1, R1313 += 1, R1314 += 1 };
  s0 -> s4 [0, 65535] { R1438 += 1, R1346 += 1, R1314 += 1, R1315 += 1, R1316 += 1 };
  s0 -> s5 [75, 75] { R1438 += 1, R1346 += 1, R1314 += 1, R1316 += 1 };
  s0 -> s6 [85, 85] { R1438 += 1, R1346 += 1, R1314 += 1, R1316 += 1 };
  s0 -> s1 [86, 65535] { R1438 += 1, R1346 += 1, R1314 += 1, R1316 += 1 };
  s1 -> s1 [0, 74] { R1438 += 1, R1346 += 1, R1314 += 1, R1316 += 1 };
  s1 -> s5 [75, 75] { R1438 += 1, R1346 += 1, R1314 += 1, R1316 += 1 };
  s1 -> s6 [85, 85] { R1438 += 1, R1346 += 1, R1314 += 1, R1316 += 1 };
  s1 -> s1 [86, 65535] { R1438 += 1, R1346 += 1, R1314 += 1, R1316 += 1 };
  s2 -> s1 [0, 74] { R1438 += 1, R1346 += 1, R1314 += 1, R1316 += 1 };
  s2 -> s2 [0, 65535] { R1438 += 1, R1345 += 1, R1346 += 1 };
  s2 -> s3 [0, 65535] { R1438 += 1, R1346 += 1, R1313 += 1, R1314 += 1 };
  s2 -> s4 [0, 65535] { R1438 += 1, R1346 += 1, R1314 += 1, R1315 += 1, R1316 += 1 };
  s2 -> s5 [75, 75] { R1438 += 1, R1346 += 1, R1314 += 1, R1316 += 1 };
  s2 -> s6 [85, 85] { R1438 += 1, R1346 += 1, R1314 += 1, R1316 += 1 };
  s2 -> s1 [86, 65535] { R1438 += 1, R1346 += 1, R1314 += 1, R1316 += 1 };
  s3 -> s1 [0, 74] { R1438 += 1, R1346 += 1, R1314 += 1, R1316 += 1 };
  s3 -> s3 [0, 65535] { R1438 += 1, R1346 += 1, R1313 += 1, R1314 += 1 };
  s3 -> s4 [0, 65535] { R1438 += 1, R1346 += 1, R1314 += 1, R1315 += 1, R1316 += 1 };
  s3 -> s5 [75, 75] { R1438 += 1, R1346 += 1, R1314 += 1, R1316 += 1 };
  s3 -> s6 [85, 85] { R1438 += 1, R1346 += 1, R1314 += 1, R1316 += 1 };
  s3 -> s1 [86, 65535] { R1438 += 1, R1346 += 1, R1314 += 1, R1316 += 1 };
  s4 -> s1 [0, 74] { R1438 += 1, R1346 += 1, R1314 += 1, R1316 += 1 };
  s4 -> s4 [0, 65535] { R1438 += 1, R1346 += 1, R1314 += 1, R1315 += 1, R1316 += 1 };
  s4 -> s5 [75, 75] { R1438 += 1, R1346 += 1, R1314 += 1, R1316 += 1 };
  s4 -> s6 [85, 85] { R1438 += 1, R1346 += 1, R1314 += 1, R1316 += 1 };
  s4 -> s1 [86, 65535] { R1438 += 1, R1346 += 1, R1314 += 1, R1316 += 1 };
  s5 -> s5 [0, 75] { R1438 += 1, R1346 += 1, R1314 += 1, R1316 += 1 };
  s5 -> s10 [85, 85] { R1438 += 1, R1346 += 1, R1314 += 1, R1316 += 1 };
  s5 -> s5 [86, 65535] { R1438 += 1, R1346 += 1, R1314 += 1, R1316 += 1 };
  s6 -> s6 [0, 74] { R1438 += 1, R1346 += 1, R1314 += 1, R1316 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R1438 += 1, R1346 += 1 };
  s6 -> s6 [0, 65535] { R1438 += 1, R1346 += 1, R1314 += 1 };
  s6 -> s9 [0, 65535] { R1438 += 1 };
  s6 -> s10 [75, 75] { R1438 += 1, R1346 += 1, R1314 += 1, R1316 += 1 };
  s6 -> s11 [75, 75] { R1438 += 1, R1346 += 1, R1314 += 1, R1316 += 1 };
  s6 -> s6 [85, 65535] { R1438 += 1, R1346 += 1, R1314 += 1, R1316 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R1438 += 1, R1346 += 1 };
  s8 -> s9 [0, 65535] { R1438 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s9 [0, 65535] { R1438 += 1 };
  s10 -> s10 [0, 75] { R1438 += 1, R1346 += 1, R1314 += 1, R1316 += 1 };
  s10 -> s10 [0, 65535] { R1438 += 1, R1346 += 1, R1314 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s8 [0, 65535] { R1438 += 1, R1346 += 1 };
  s10 -> s9 [0, 65535] { R1438 += 1 };
  s10 -> s10 [85, 65535] { R1438 += 1, R1346 += 1, R1314 += 1, R1316 += 1 };
  s11 -> s11 [0, 65535] { R1438 += 1, R1346 += 1, R1314 += 1 };
  s11 -> s7 [0, 65535];
  s11 -> s8 [0, 65535] { R1438 += 1, R1346 += 1 };
  s11 -> s9 [0, 65535] { R1438 += 1 };
  accepting s8, s9, s6, s7, s10, s11;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65535] { R1440 += 1, R1375 += 1, R1376 += 1 };
  s0 -> s0 [0, 65535] { R1439 += 1, R1440 += 1 };
  s0 -> s2 [0, 65535] { R1440 += 1, R1376 += 1, R23 += 1 };
  s1 -> s1 [0, 65535] { R1440 += 1, R1375 += 1, R1376 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R1440 += 1, R1376 += 1, R23 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R1440 += 1 };
  s2 -> s2 [0, 65535] { R1440 += 1, R1376 += 1, R23 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1440 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R1442 += 1, R1378 += 1 };
  s0 -> s0 [0, 65535] { R1441 += 1, R1442 += 1 };
  s0 -> s2 [0, 65535] { R1442 += 1, R1377 += 1, R1378 += 1 };
  s0 -> s3 [70, 70] { R1442 += 1, R1378 += 1 };
  s0 -> s4 [70, 70] { R1442 += 1, R1378 += 1 };
  s0 -> s5 [75, 75] { R1442 += 1, R1378 += 1 };
  s0 -> s1 [76, 65535] { R1442 += 1, R1378 += 1 };
  s1 -> s1 [0, 69] { R1442 += 1, R1378 += 1 };
  s1 -> s3 [70, 70] { R1442 += 1, R1378 += 1 };
  s1 -> s4 [70, 70] { R1442 += 1, R1378 += 1 };
  s1 -> s5 [75, 75] { R1442 += 1, R1378 += 1 };
  s1 -> s1 [76, 65535] { R1442 += 1, R1378 += 1 };
  s2 -> s1 [0, 69] { R1442 += 1, R1378 += 1 };
  s2 -> s2 [0, 65535] { R1442 += 1, R1377 += 1, R1378 += 1 };
  s2 -> s3 [70, 70] { R1442 += 1, R1378 += 1 };
  s2 -> s4 [70, 70] { R1442 += 1, R1378 += 1 };
  s2 -> s5 [75, 75] { R1442 += 1, R1378 += 1 };
  s2 -> s1 [76, 65535] { R1442 += 1, R1378 += 1 };
  s3 -> s3 [0, 70] { R1442 += 1, R1378 += 1 };
  s3 -> s7 [75, 75] { R1442 += 1, R1378 += 1 };
  s3 -> s3 [76, 65535] { R1442 += 1, R1378 += 1 };
  s5 -> s5 [0, 69] { R1442 += 1, R1378 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R1442 += 1 };
  s5 -> s7 [70, 70] { R1442 += 1, R1378 += 1 };
  s5 -> s8 [70, 70] { R1442 += 1, R1378 += 1 };
  s5 -> s5 [75, 65535] { R1442 += 1, R1378 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R1442 += 1, R1378 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R1442 += 1 };
  s7 -> s7 [75, 65535] { R1442 += 1, R1378 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R1442 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R1444 += 1, R1380 += 1, R137 += 1 };
  s0 -> s0 [0, 65535] { R1443 += 1, R1444 += 1 };
  s0 -> s2 [0, 65535] { R1444 += 1, R1379 += 1, R1380 += 1 };
  s0 -> s3 [70, 70] { R1444 += 1, R1380 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R1444 += 1, R1380 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R1444 += 1, R1380 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R1444 += 1, R1380 += 1, R137 += 1 };
  s1 -> s1 [0, 65535] { R1444 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R1444 += 1, R1380 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R1444 += 1, R1380 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R1444 += 1, R1380 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R1444 += 1, R1380 += 1, R137 += 1 };
  s2 -> s2 [0, 65535] { R1444 += 1, R1379 += 1, R1380 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R1444 += 1, R1380 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R1444 += 1, R1380 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R1444 += 1, R1380 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R1444 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R1444 += 1, R1380 += 1, R137 += 1 };
  s4 -> s5 [0, 65535] { R1444 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R1444 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R1446 += 1, R1382 += 1, R139 += 1 };
  s0 -> s2 [0, 65535] { R1446 += 1, R1381 += 1, R1382 += 1 };
  s0 -> s0 [0, 65535] { R1445 += 1, R1446 += 1 };
  s0 -> s3 [70, 70] { R1446 += 1, R1382 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R1446 += 1, R1382 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R1446 += 1, R1382 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R1446 += 1, R1382 += 1, R139 += 1 };
  s1 -> s1 [0, 65535] { R1446 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R1446 += 1, R1382 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R1446 += 1, R1382 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R1446 += 1, R1382 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R1446 += 1, R1382 += 1, R139 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1446 += 1, R1381 += 1, R1382 += 1 };
  s2 -> s3 [70, 70] { R1446 += 1, R1382 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R1446 += 1, R1382 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R1446 += 1, R1382 += 1, R139 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1446 += 1, R1382 += 1, R139 += 1 };
  s3 -> s6 [0, 65535] { R1446 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1446 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1446 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R1448 += 1, R1384 += 1, R141 += 1, R142 += 1 };
  s0 -> s2 [0, 65535] { R1448 += 1, R1383 += 1, R1384 += 1 };
  s0 -> s0 [0, 65535] { R1447 += 1, R1448 += 1 };
  s0 -> s3 [70, 70] { R1448 += 1, R1384 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R1448 += 1, R1384 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R1448 += 1, R1384 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R1448 += 1, R1384 += 1, R141 += 1, R142 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R1448 += 1 };
  s1 -> s3 [70, 70] { R1448 += 1, R1384 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R1448 += 1, R1384 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R1448 += 1, R1384 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R1448 += 1, R1384 += 1, R141 += 1, R142 += 1 };
  s2 -> s2 [0, 65535] { R1448 += 1, R1383 += 1, R1384 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R1448 += 1, R1384 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R1448 += 1, R1384 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R1448 += 1, R1384 += 1, R141 += 1, R142 += 1 };
  s3 -> s3 [0, 65535] { R1448 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R1448 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R1448 += 1, R1384 += 1, R141 += 1, R142 += 1 };
  s5 -> s5 [0, 65535] { R1448 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R1450 += 1, R1386 += 1, R147 += 1, R148 += 1 };
  s0 -> s2 [0, 65535] { R1450 += 1, R1385 += 1, R1386 += 1 };
  s0 -> s0 [0, 65535] { R1449 += 1, R1450 += 1 };
  s0 -> s3 [70, 70] { R1450 += 1, R1386 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R1450 += 1, R1386 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R1450 += 1, R1386 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R1450 += 1, R1386 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 65535] { R1450 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R1450 += 1, R1386 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R1450 += 1, R1386 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R1450 += 1, R1386 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R1450 += 1, R1386 += 1, R147 += 1, R148 += 1 };
  s2 -> s2 [0, 65535] { R1450 += 1, R1385 += 1, R1386 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R1450 += 1, R1386 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R1450 += 1, R1386 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R1450 += 1, R1386 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R1450 += 1, R1386 += 1, R147 += 1, R148 += 1 };
  s3 -> s6 [0, 65535] { R1450 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1450 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1450 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R1452 += 1, R1388 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R1452 += 1, R1388 += 1, R151 += 1, R152 += 1 };
  s0 -> s0 [0, 65535] { R1451 += 1, R1452 += 1 };
  s0 -> s3 [0, 65535] { R1452 += 1, R1387 += 1, R1388 += 1 };
  s0 -> s4 [70, 70] { R1452 += 1, R1388 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R1452 += 1, R1388 += 1, R151 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R1452 += 1, R1388 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R1452 += 1, R1388 += 1, R151 += 1, R152 += 1 };
  s0 -> s1 [71, 74] { R1452 += 1, R1388 += 1, R152 += 1 };
  s0 -> s2 [71, 65535] { R1452 += 1, R1388 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R1452 += 1, R1388 += 1, R152 += 1 };
  s0 -> s1 [76, 65535] { R1452 += 1, R1388 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R1452 += 1, R1388 += 1, R152 += 1 };
  s1 -> s4 [70, 70] { R1452 += 1, R1388 += 1, R152 += 1 };
  s1 -> s6 [70, 70] { R1452 += 1, R1388 += 1, R152 += 1 };
  s1 -> s1 [71, 74] { R1452 += 1, R1388 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R1452 += 1, R1388 += 1, R152 += 1 };
  s1 -> s1 [76, 65535] { R1452 += 1, R1388 += 1, R152 += 1 };
  s2 -> s1 [0, 69] { R1452 += 1, R1388 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R1452 += 1, R1388 += 1, R151 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R1452 += 1, R1388 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R1452 += 1, R1388 += 1, R151 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R1452 += 1, R1388 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R1452 += 1, R1388 += 1, R151 += 1, R152 += 1 };
  s2 -> s1 [71, 74] { R1452 += 1, R1388 += 1, R152 += 1 };
  s2 -> s2 [71, 65535] { R1452 += 1, R1388 += 1, R151 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R1452 += 1, R1388 += 1, R152 += 1 };
  s2 -> s1 [76, 65535] { R1452 += 1, R1388 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R1452 += 1, R1388 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R1452 += 1, R1388 += 1, R151 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R1452 += 1, R1387 += 1, R1388 += 1 };
  s3 -> s4 [70, 70] { R1452 += 1, R1388 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R1452 += 1, R1388 += 1, R151 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R1452 += 1, R1388 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R1452 += 1, R1388 += 1, R151 += 1, R152 += 1 };
  s3 -> s1 [71, 74] { R1452 += 1, R1388 += 1, R152 += 1 };
  s3 -> s2 [71, 65535] { R1452 += 1, R1388 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R1452 += 1, R1388 += 1, R152 += 1 };
  s3 -> s1 [76, 65535] { R1452 += 1, R1388 += 1, R152 += 1 };
  s5 -> s6 [0, 74] { R1452 += 1, R1388 += 1, R152 += 1 };
  s5 -> s5 [0, 65535] { R1452 += 1, R1388 += 1, R151 += 1, R152 += 1 };
  s5 -> s11 [75, 75] { R1452 += 1, R1388 += 1, R152 += 1 };
  s5 -> s6 [76, 65535] { R1452 += 1, R1388 += 1, R152 += 1 };
  s6 -> s6 [0, 74] { R1452 += 1, R1388 += 1, R152 += 1 };
  s6 -> s11 [75, 75] { R1452 += 1, R1388 += 1, R152 += 1 };
  s6 -> s6 [76, 65535] { R1452 += 1, R1388 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R1452 += 1, R1388 += 1, R152 += 1 };
  s8 -> s8 [0, 65535] { R1452 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R1452 += 1, R1388 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R1452 += 1, R1388 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R1452 += 1, R1388 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R1452 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R1452 += 1, R1388 += 1, R152 += 1 };
  s11 -> s12 [0, 65535] { R1452 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R1452 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R1454 += 1, R1390 += 1, R155 += 1, R156 += 1 };
  s0 -> s2 [0, 65535] { R1454 += 1, R1389 += 1, R1390 += 1 };
  s0 -> s0 [0, 65535] { R1453 += 1, R1454 += 1 };
  s0 -> s3 [70, 70] { R1454 += 1, R1390 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R1454 += 1, R1390 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R1454 += 1, R1390 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R1454 += 1, R1390 += 1, R155 += 1, R156 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1454 += 1 };
  s1 -> s3 [70, 70] { R1454 += 1, R1390 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R1454 += 1, R1390 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R1454 += 1, R1390 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R1454 += 1, R1390 += 1, R155 += 1, R156 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1454 += 1, R1389 += 1, R1390 += 1 };
  s2 -> s3 [70, 70] { R1454 += 1, R1390 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R1454 += 1, R1390 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R1454 += 1, R1390 += 1, R155 += 1, R156 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1454 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1454 += 1 };
  s4 -> s4 [0, 65535] { R1454 += 1, R1390 += 1, R155 += 1, R156 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1454 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R1456 += 1, R1392 += 1, R161 += 1, R162 += 1 };
  s0 -> s2 [0, 65535] { R1456 += 1, R1391 += 1, R1392 += 1 };
  s0 -> s0 [0, 65535] { R1455 += 1, R1456 += 1 };
  s0 -> s3 [70, 70] { R1456 += 1, R1392 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R1456 += 1, R1392 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R1456 += 1, R1392 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R1456 += 1, R1392 += 1, R161 += 1, R162 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1456 += 1 };
  s1 -> s3 [70, 70] { R1456 += 1, R1392 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R1456 += 1, R1392 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R1456 += 1, R1392 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R1456 += 1, R1392 += 1, R161 += 1, R162 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1456 += 1, R1391 += 1, R1392 += 1 };
  s2 -> s3 [70, 70] { R1456 += 1, R1392 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R1456 += 1, R1392 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R1456 += 1, R1392 += 1, R161 += 1, R162 += 1 };
  s3 -> s3 [0, 65535] { R1456 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1456 += 1 };
  s4 -> s4 [0, 65535] { R1456 += 1, R1392 += 1, R161 += 1, R162 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1456 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R1458 += 1, R1394 += 1, R167 += 1, R168 += 1 };
  s0 -> s2 [0, 65535] { R1458 += 1, R1393 += 1, R1394 += 1 };
  s0 -> s0 [0, 65535] { R1457 += 1, R1458 += 1 };
  s0 -> s3 [70, 70] { R1458 += 1, R1394 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R1458 += 1, R1394 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R1458 += 1, R1394 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R1458 += 1, R1394 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 65535] { R1458 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R1458 += 1, R1394 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R1458 += 1, R1394 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R1458 += 1, R1394 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R1458 += 1, R1394 += 1, R167 += 1, R168 += 1 };
  s2 -> s2 [0, 65535] { R1458 += 1, R1393 += 1, R1394 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R1458 += 1, R1394 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R1458 += 1, R1394 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R1458 += 1, R1394 += 1, R167 += 1, R168 += 1 };
  s3 -> s3 [0, 65535] { R1458 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R1458 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R1458 += 1, R1394 += 1, R167 += 1, R168 += 1 };
  s5 -> s5 [0, 65535] { R1458 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R1460 += 1, R1396 += 1, R175 += 1, R176 += 1 };
  s0 -> s2 [0, 69] { R1460 += 1, R1396 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s3 [0, 69] { R1460 += 1, R1396 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s4 [0, 65535] { R1460 += 1, R1395 += 1, R1396 += 1 };
  s0 -> s0 [0, 65535] { R1459 += 1, R1460 += 1 };
  s0 -> s5 [70, 70] { R1460 += 1, R1396 += 1, R175 += 1, R176 += 1 };
  s0 -> s6 [70, 70] { R1460 += 1, R1396 += 1, R175 += 1, R176 += 1 };
  s0 -> s7 [70, 70] { R1460 += 1, R1396 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s8 [70, 70] { R1460 += 1, R1396 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s9 [70, 70] { R1460 += 1, R1396 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s10 [70, 70] { R1460 += 1, R1396 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s1 [71, 65535] { R1460 += 1, R1396 += 1, R175 += 1, R176 += 1 };
  s0 -> s2 [71, 65535] { R1460 += 1, R1396 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s3 [71, 65535] { R1460 += 1, R1396 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s1 [0, 69] { R1460 += 1, R1396 += 1, R175 += 1, R176 += 1 };
  s1 -> s2 [0, 69] { R1460 += 1, R1396 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s3 [0, 69] { R1460 += 1, R1396 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s5 [70, 70] { R1460 += 1, R1396 += 1, R175 += 1, R176 += 1 };
  s1 -> s6 [70, 70] { R1460 += 1, R1396 += 1, R175 += 1, R176 += 1 };
  s1 -> s7 [70, 70] { R1460 += 1, R1396 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s8 [70, 70] { R1460 += 1, R1396 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s9 [70, 70] { R1460 += 1, R1396 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s10 [70, 70] { R1460 += 1, R1396 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s1 [71, 65535] { R1460 += 1, R1396 += 1, R175 += 1, R176 += 1 };
  s1 -> s2 [71, 65535] { R1460 += 1, R1396 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s3 [71, 65535] { R1460 += 1, R1396 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [0, 69] { R1460 += 1, R1396 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s3 [0, 69] { R1460 += 1, R1396 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s7 [70, 70] { R1460 += 1, R1396 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s8 [70, 70] { R1460 += 1, R1396 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s9 [70, 70] { R1460 += 1, R1396 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s10 [70, 70] { R1460 += 1, R1396 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [71, 65535] { R1460 += 1, R1396 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s3 [71, 65535] { R1460 += 1, R1396 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [0, 69] { R1460 += 1, R1396 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s14 [0, 69] { R1460 += 1, R1396 += 1, R176 += 1 };
  s3 -> s15 [70, 70] { R1460 += 1, R1396 += 1, R176 += 1 };
  s3 -> s11 [70, 70] { R1460 += 1, R1396 += 1, R176 += 1 };
  s3 -> s9 [70, 70] { R1460 += 1, R1396 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s10 [70, 70] { R1460 += 1, R1396 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [71, 65535] { R1460 += 1, R1396 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s14 [71, 65535] { R1460 += 1, R1396 += 1, R176 += 1 };
  s4 -> s1 [0, 69] { R1460 += 1, R1396 += 1, R175 += 1, R176 += 1 };
  s4 -> s2 [0, 69] { R1460 += 1, R1396 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s3 [0, 69] { R1460 += 1, R1396 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s4 [0, 65535] { R1460 += 1, R1395 += 1, R1396 += 1 };
  s4 -> s5 [70, 70] { R1460 += 1, R1396 += 1, R175 += 1, R176 += 1 };
  s4 -> s6 [70, 70] { R1460 += 1, R1396 += 1, R175 += 1, R176 += 1 };
  s4 -> s7 [70, 70] { R1460 += 1, R1396 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s8 [70, 70] { R1460 += 1, R1396 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s9 [70, 70] { R1460 += 1, R1396 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s10 [70, 70] { R1460 += 1, R1396 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s1 [71, 65535] { R1460 += 1, R1396 += 1, R175 += 1, R176 += 1 };
  s4 -> s2 [71, 65535] { R1460 += 1, R1396 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s3 [71, 65535] { R1460 += 1, R1396 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s5 -> s5 [0, 65535] { R1460 += 1, R1396 += 1, R175 += 1, R176 += 1 };
  s5 -> s8 [0, 65535] { R1460 += 1, R1396 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s5 -> s10 [0, 65535] { R1460 += 1, R1396 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s8 -> s8 [0, 65535] { R1460 += 1, R1396 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s8 -> s10 [0, 65535] { R1460 += 1, R1396 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s10 -> s11 [0, 65535] { R1460 += 1, R1396 += 1, R176 += 1 };
  s10 -> s10 [0, 65535] { R1460 += 1, R1396 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [0, 65535] { R1460 += 1 };
  s11 -> s11 [0, 65535] { R1460 += 1, R1396 += 1, R176 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R1460 += 1 };
  s14 -> s14 [0, 69] { R1460 += 1, R1396 += 1, R176 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R1460 += 1 };
  s14 -> s15 [70, 70] { R1460 += 1, R1396 += 1, R176 += 1 };
  s14 -> s11 [70, 70] { R1460 += 1, R1396 += 1, R176 += 1 };
  s14 -> s14 [71, 65535] { R1460 += 1, R1396 += 1, R176 += 1 };
  s15 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R1460 += 1 };
  accepting s12, s13, s14, s15, s11;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R1462 += 1, R1398 += 1, R185 += 1, R186 += 1 };
  s0 -> s2 [0, 65535] { R1462 += 1, R1397 += 1, R1398 += 1 };
  s0 -> s0 [0, 65535] { R1461 += 1, R1462 += 1 };
  s0 -> s3 [70, 70] { R1462 += 1, R1398 += 1, R185 += 1, R186 += 1 };
  s0 -> s4 [70, 70] { R1462 += 1, R1398 += 1, R185 += 1, R186 += 1 };
  s0 -> s1 [71, 65535] { R1462 += 1, R1398 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 69] { R1462 += 1, R1398 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 65535] { R1462 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R1462 += 1, R1398 += 1, R185 += 1, R186 += 1 };
  s1 -> s4 [70, 70] { R1462 += 1, R1398 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [71, 65535] { R1462 += 1, R1398 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [0, 69] { R1462 += 1, R1398 += 1, R185 += 1, R186 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1462 += 1, R1397 += 1, R1398 += 1 };
  s2 -> s3 [70, 70] { R1462 += 1, R1398 += 1, R185 += 1, R186 += 1 };
  s2 -> s4 [70, 70] { R1462 += 1, R1398 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [71, 65535] { R1462 += 1, R1398 += 1, R185 += 1, R186 += 1 };
  s3 -> s3 [0, 65535] { R1462 += 1, R1398 += 1, R185 += 1, R186 += 1 };
  s3 -> s6 [0, 65535] { R1462 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1462 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1462 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R1464 += 1, R1400 += 1, R193 += 1, R194 += 1 };
  s0 -> s0 [0, 65535] { R1463 += 1, R1464 += 1 };
  s0 -> s2 [0, 65535] { R1464 += 1, R1399 += 1, R1400 += 1 };
  s0 -> s3 [70, 70] { R1464 += 1, R1400 += 1, R193 += 1, R194 += 1 };
  s0 -> s4 [70, 70] { R1464 += 1, R1400 += 1, R193 += 1, R194 += 1 };
  s0 -> s1 [71, 65535] { R1464 += 1, R1400 += 1, R193 += 1, R194 += 1 };
  s1 -> s1 [0, 69] { R1464 += 1, R1400 += 1, R193 += 1, R194 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R1464 += 1 };
  s1 -> s3 [70, 70] { R1464 += 1, R1400 += 1, R193 += 1, R194 += 1 };
  s1 -> s4 [70, 70] { R1464 += 1, R1400 += 1, R193 += 1, R194 += 1 };
  s1 -> s1 [71, 65535] { R1464 += 1, R1400 += 1, R193 += 1, R194 += 1 };
  s2 -> s1 [0, 69] { R1464 += 1, R1400 += 1, R193 += 1, R194 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R1464 += 1, R1399 += 1, R1400 += 1 };
  s2 -> s3 [70, 70] { R1464 += 1, R1400 += 1, R193 += 1, R194 += 1 };
  s2 -> s4 [70, 70] { R1464 += 1, R1400 += 1, R193 += 1, R194 += 1 };
  s2 -> s1 [71, 65535] { R1464 += 1, R1400 += 1, R193 += 1, R194 += 1 };
  s3 -> s3 [0, 65535] { R1464 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R1464 += 1 };
  s4 -> s4 [0, 65535] { R1464 += 1, R1400 += 1, R193 += 1, R194 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R1464 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R1466 += 1, R1402 += 1, R1309 += 1, R1310 += 1 };
  s0 -> s2 [0, 65535] { R1466 += 1, R1401 += 1, R1402 += 1 };
  s0 -> s0 [0, 65535] { R1465 += 1, R1466 += 1 };
  s0 -> s3 [70, 70] { R1466 += 1, R1402 += 1, R1309 += 1, R1310 += 1 };
  s0 -> s4 [70, 70] { R1466 += 1, R1402 += 1, R1309 += 1, R1310 += 1 };
  s0 -> s1 [71, 65535] { R1466 += 1, R1402 += 1, R1309 += 1, R1310 += 1 };
  s1 -> s1 [0, 69] { R1466 += 1, R1402 += 1, R1309 += 1, R1310 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1466 += 1 };
  s1 -> s3 [70, 70] { R1466 += 1, R1402 += 1, R1309 += 1, R1310 += 1 };
  s1 -> s4 [70, 70] { R1466 += 1, R1402 += 1, R1309 += 1, R1310 += 1 };
  s1 -> s1 [71, 65535] { R1466 += 1, R1402 += 1, R1309 += 1, R1310 += 1 };
  s2 -> s1 [0, 69] { R1466 += 1, R1402 += 1, R1309 += 1, R1310 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1466 += 1, R1401 += 1, R1402 += 1 };
  s2 -> s3 [70, 70] { R1466 += 1, R1402 += 1, R1309 += 1, R1310 += 1 };
  s2 -> s4 [70, 70] { R1466 += 1, R1402 += 1, R1309 += 1, R1310 += 1 };
  s2 -> s1 [71, 65535] { R1466 += 1, R1402 += 1, R1309 += 1, R1310 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1466 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1466 += 1 };
  s4 -> s4 [0, 65535] { R1466 += 1, R1402 += 1, R1309 += 1, R1310 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1466 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
constraint R2 = R1346 && R3 = R1466 && R25 - R1466 = -1 && R26 = R1466 && R27 - R1466 = -1 && R28 = R1466 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R1314 + -1*R1310 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R1314 + -1*R1310 - R130 = 0 && R129 + R1313 + R1309 = 0 && R131 + R1315 + R1311 = 0 && R132 + R1316 + R1312 = 0 && R1345 = 0 && R1377 = 0 && R1378 = 0 && R1387 = 0 && R1388 = 0 && R1395 = 0 && R1396 = 0 && R1403 = 0 && R1404 = R1466 && R1405 = 0 && R1406 = R1466 && R1407 = 0 && R1408 = R1466 && R1409 = 0 && R1410 = R1466 && R1411 = 0 && R1412 = R1466 && R1413 = 0 && R1414 = R1466 && R1415 = 0 && R1416 = R1466 && R1417 = 0 && R1418 = R1466 && R1419 = 0 && R1420 = R1466 && R1421 = 0 && R1422 = R1466 && R1423 = 0 && R1424 = R1466 && R1425 = 0 && R1426 = R1466 && R1427 = 0 && R1428 = R1466 && R1429 = 0 && R1430 = R1466 && R1431 = 0 && R1432 = R1466 && R1433 = 0 && R1434 = R1466 && R1435 = 0 && R1436 = R1466 && R1437 = 0 && R1438 = R1466 && R1439 = 0 && R1440 = R1466 && R1441 = 0 && R1442 = R1466 && R1443 = 0 && R1444 = R1466 && R1445 = 0 && R1446 = R1466 && R1447 = 0 && R1448 = R1466 && R1449 = 0 && R1450 = R1466 && R1451 = 0 && R1452 = R1466 && R1453 = 0 && R1454 = R1466 && R1455 = 0 && R1456 = R1466 && R1457 = 0 && R1458 = R1466 && R1459 = 0 && R1460 = R1466 && R1461 = 0 && R1462 = R1466 && R1463 = 0 && R1464 = R1466 && R1465 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R1314 + -1*R1310 - R130 < 1 && -1 < R1346 && 0 < R1466 && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R1314 + -1*R1310 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R191 + R187 = 0 && R114 + R192 + R188 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R1314 + -1*R1310 - R130 = 0 || R130 + R1314 + R1310 < 1) && (R81 + R158 + R155 = 0 || R130 + R1314 + R1310 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R1314 + -1*R1310 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R1314 + R1310 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R1314 + -1*R1310 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R1314 + R1310 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R1314 + -1*R1310 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R1314 + R1310 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 != 0 || R112 + R190 + R186 + -1*R1314 + -1*R1310 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R1314 + R1310 = 0)) && (R113 + R191 + R187 != 0 || R83 + R160 + R157 + -1*R192 + -1*R188 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R198 + R193 != 0 || R120 + R199 + R194 + -1*R1314 + -1*R1310 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R1314 + R1310 = 0)) && (R1317 != 0 || R1318 = R1346 || (R22 = 0 && R1346 = 0)) && (R1319 != 0 || R1320 = R1346 || (R22 = 0 && R1346 = 0)) && (R1321 != 0 || R1322 = R1346 || (R22 = 0 && R1346 = 0)) && (R1323 != 0 || R1324 = R1346 || (R22 = 0 && R1346 = 0)) && (R1325 != 0 || R1326 = R1346 || (R22 = 0 && R1346 = 0)) && (R1327 != 0 || R1328 = R1346 || (R22 = 0 && R1346 = 0)) && (R1329 != 0 || R1330 = R1346 || (R22 = 0 && R1346 = 0)) && (R1331 != 0 || R1332 = R1346 || (R22 = 0 && R1346 = 0)) && (R1333 != 0 || R1334 = R1346 || (R22 = 0 && R1346 = 0)) && (R1335 != 0 || R1336 = R1346 || (R22 = 0 && R1346 = 0)) && (R1337 != 0 || R1338 = R1346 || (R22 = 0 && R1346 = 0)) && (R1339 != 0 || R1340 = R1346 || (R22 = 0 && R1346 = 0)) && (R1341 != 0 || R1342 = R1346 || (R22 = 0 && R1346 = 0)) && (R1343 != 0 || R1344 = R1346 || (R22 = 0 && R1346 = 0)) && (R23 = 0 || (R1375 = 0 && R1376 = 0)) && (R23 = 0 || (R1379 = 0 && R1380 = 0)) && (R23 = 0 || (R1381 = 0 && R1382 = 0)) && (R23 = 0 || (R1383 = 0 && R1384 = 0)) && (R23 = 0 || (R1385 = 0 && R1386 = 0)) && (R23 = 0 || (R1389 = 0 && R1390 = 0)) && (R23 = 0 || (R1391 = 0 && R1392 = 0)) && (R23 = 0 || (R1393 = 0 && R1394 = 0)) && (R23 = 0 || (R1397 = 0 && R1398 = 0)) && (R23 = 0 || (R1399 = 0 && R1400 = 0)) && (R23 = 0 || (R1401 = 0 && R1402 = 0)) && (R24 = 0 || (R1347 = 0 && R1348 = 0)) && (R24 = 0 || (R1349 = 0 && R1350 = 0)) && (R24 = 0 || (R1351 = 0 && R1352 = 0)) && (R24 = 0 || (R1353 = 0 && R1354 = 0)) && (R24 = 0 || (R1355 = 0 && R1356 = 0)) && (R24 = 0 || (R1357 = 0 && R1358 = 0)) && (R24 = 0 || (R1359 = 0 && R1360 = 0)) && (R24 = 0 || (R1361 = 0 && R1362 = 0)) && (R24 = 0 || (R1363 = 0 && R1364 = 0)) && (R24 = 0 || (R1365 = 0 && R1366 = 0)) && (R24 = 0 || (R1367 = 0 && R1368 = 0)) && (R24 = 0 || (R1369 = 0 && R1370 = 0)) && (R24 = 0 || (R1371 = 0 && R1372 = 0)) && (R24 = 0 || (R1373 = 0 && R1374 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R1314 + R1310 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R1314 + R1310 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R1314 + R1310 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 = 0 || (R83 + R160 + R157 = 0 && R130 + R1314 + R1310 = 0)) && (R113 + R191 + R187 = 0 || R83 + R160 + R157 < 1) && (R119 + R198 + R193 = 0 || (R83 + R160 + R157 = 0 && R130 + R1314 + R1310 = 0)) && (R123 + R202 + R197 = 0 || (R121 + R200 + R195 = 0 && R122 + R201 + R196 = 0)) && (R1317 = 0 || (R22 = 0 && R1346 = 0)) && (R1319 = 0 || (R22 = 0 && R1346 = 0)) && (R1321 = 0 || (R22 = 0 && R1346 = 0)) && (R1323 = 0 || (R22 = 0 && R1346 = 0)) && (R1325 = 0 || (R22 = 0 && R1346 = 0)) && (R1327 = 0 || (R22 = 0 && R1346 = 0)) && (R1329 = 0 || (R22 = 0 && R1346 = 0)) && (R1331 = 0 || (R22 = 0 && R1346 = 0)) && (R1333 = 0 || (R22 = 0 && R1346 = 0)) && (R1335 = 0 || (R22 = 0 && R1346 = 0)) && (R1337 = 0 || (R22 = 0 && R1346 = 0)) && (R1339 = 0 || (R22 = 0 && R1346 = 0)) && (R1341 = 0 || (R22 = 0 && R1346 = 0)) && (R1343 = 0 || (R22 = 0 && R1346 = 0));
// End of Parikh automata intersection problem
