// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R11522, R11523, R11524, R11525, R12, R15342, R15343, R15344, R15345, R15346, R15347, R16618, R16619, R16620, R16621, R17, R17044, R17045, R17046, R17047, R17048, R17049, R17154, R17155, R17156, R17157, R17158, R17159, R17160, R17161, R17162, R17163, R17164, R17165, R17166, R17167, R17168, R17169, R17170, R17171, R17172, R17173, R17174, R17175, R17176, R17177, R17178, R17179, R17180, R17181, R17182, R17183, R17184, R17185, R17186, R17187, R17188, R17189, R17190, R17191, R17192, R17193, R17194, R17195, R17196, R17197, R17198, R17199, R17200, R17201, R17202, R17203, R17204, R17205, R17206, R17207, R17208, R17209, R17210, R17211, R17212, R17213, R17214, R17215, R17216, R17217, R17218, R17219, R17220, R17221, R17222, R17223, R17224, R17225, R17226, R17227, R17228, R17229, R17230, R17231, R17232, R17233, R17234, R17235, R17236, R17237, R17238, R17239, R17240, R17241, R17242, R17243, R17244, R17245, R17246, R17247, R17248, R17249, R17250, R17251, R17252, R17253, R17254, R17255, R17256, R17257, R18, R19, R2, R20, R21, R22, R23, R24, R25, R26, R27, R3, R38, R4, R40, R42, R43, R46, R47, R48, R52, R53, R56, R57, R58, R62, R63, R66, R67, R68, R69, R8;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [84, 84];
  s0 -> s0 [85, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [84, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R2 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R11 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 83];
  s0 -> s0 [0, 65535] { R12 += 1 };
  s0 -> s2 [84, 84];
  s0 -> s1 [85, 65535];
  s1 -> s1 [0, 83];
  s1 -> s2 [84, 84];
  s1 -> s1 [85, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R21 += 1 };
  s0 -> s0 [0, 65535] { R20 += 1, R21 += 1 };
  s0 -> s2 [9, 13] { R21 += 1 };
  s0 -> s1 [14, 31] { R21 += 1 };
  s0 -> s2 [32, 32] { R21 += 1 };
  s0 -> s1 [33, 65535] { R21 += 1 };
  s1 -> s1 [0, 65535] { R21 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R21 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s0 [0, 65535] { R22 += 1, R23 += 1 };
  s0 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s1 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R25 += 1 };
  s0 -> s0 [0, 65535] { R24 += 1, R25 += 1 };
  s0 -> s2 [9, 13] { R25 += 1 };
  s0 -> s1 [14, 31] { R25 += 1 };
  s0 -> s2 [32, 32] { R25 += 1 };
  s0 -> s1 [33, 65535] { R25 += 1 };
  s1 -> s1 [0, 65535] { R25 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R25 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R26 += 1, R27 += 1 };
  s0 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s1 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R17178 += 1, R17179 += 1 };
  s0 -> s1 [0, 65535] { R17179 += 1, R19 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R17179 += 1, R19 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 83] { R17181 += 1 };
  s0 -> s0 [0, 65535] { R17180 += 1, R17181 += 1 };
  s0 -> s2 [84, 84] { R17181 += 1 };
  s0 -> s3 [84, 84] { R17181 += 1 };
  s0 -> s1 [86, 65535] { R17181 += 1 };
  s1 -> s1 [0, 83] { R17181 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R17181 += 1 };
  s1 -> s3 [84, 84] { R17181 += 1 };
  s1 -> s1 [86, 65535] { R17181 += 1 };
  s2 -> s2 [0, 84] { R17181 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [86, 65535] { R17181 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 83] { R17183 += 1, R38 += 1 };
  s0 -> s0 [0, 65535] { R17182 += 1, R17183 += 1 };
  s0 -> s2 [84, 84] { R17183 += 1, R38 += 1 };
  s0 -> s3 [84, 84] { R17183 += 1, R38 += 1 };
  s0 -> s1 [85, 65535] { R17183 += 1, R38 += 1 };
  s1 -> s1 [0, 83] { R17183 += 1, R38 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R17183 += 1, R38 += 1 };
  s1 -> s3 [84, 84] { R17183 += 1, R38 += 1 };
  s1 -> s1 [85, 65535] { R17183 += 1, R38 += 1 };
  s2 -> s2 [0, 65535] { R17183 += 1, R38 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 83] { R17185 += 1, R40 += 1 };
  s0 -> s0 [0, 65535] { R17184 += 1, R17185 += 1 };
  s0 -> s2 [84, 84] { R17185 += 1, R40 += 1 };
  s0 -> s3 [84, 84] { R17185 += 1, R40 += 1 };
  s0 -> s1 [85, 65535] { R17185 += 1, R40 += 1 };
  s1 -> s1 [0, 83] { R17185 += 1, R40 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R17185 += 1, R40 += 1 };
  s1 -> s3 [84, 84] { R17185 += 1, R40 += 1 };
  s1 -> s1 [85, 65535] { R17185 += 1, R40 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R17185 += 1, R40 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 83] { R17187 += 1, R42 += 1, R43 += 1 };
  s0 -> s0 [0, 65535] { R17186 += 1, R17187 += 1 };
  s0 -> s2 [84, 84] { R17187 += 1, R42 += 1, R43 += 1 };
  s0 -> s3 [84, 84] { R17187 += 1, R42 += 1, R43 += 1 };
  s0 -> s1 [85, 65535] { R17187 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 83] { R17187 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R17187 += 1, R42 += 1, R43 += 1 };
  s1 -> s3 [84, 84] { R17187 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [85, 65535] { R17187 += 1, R42 += 1, R43 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R17187 += 1, R42 += 1, R43 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 83] { R17189 += 1, R46 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R17188 += 1, R17189 += 1 };
  s0 -> s2 [84, 84] { R17189 += 1, R46 += 1, R47 += 1 };
  s0 -> s3 [84, 84] { R17189 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [85, 65535] { R17189 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 83] { R17189 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R17189 += 1, R46 += 1, R47 += 1 };
  s1 -> s3 [84, 84] { R17189 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [85, 65535] { R17189 += 1, R46 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R17189 += 1, R46 += 1, R47 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 83] { R17191 += 1, R52 += 1, R53 += 1 };
  s0 -> s0 [0, 65535] { R17190 += 1, R17191 += 1 };
  s0 -> s2 [84, 84] { R17191 += 1, R52 += 1, R53 += 1 };
  s0 -> s3 [84, 84] { R17191 += 1, R52 += 1, R53 += 1 };
  s0 -> s1 [85, 65535] { R17191 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 83] { R17191 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R17191 += 1, R52 += 1, R53 += 1 };
  s1 -> s3 [84, 84] { R17191 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [85, 65535] { R17191 += 1, R52 += 1, R53 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R17191 += 1, R52 += 1, R53 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 83] { R17193 += 1, R56 += 1, R57 += 1 };
  s0 -> s0 [0, 65535] { R17192 += 1, R17193 += 1 };
  s0 -> s2 [84, 84] { R17193 += 1, R56 += 1, R57 += 1 };
  s0 -> s3 [84, 84] { R17193 += 1, R56 += 1, R57 += 1 };
  s0 -> s1 [85, 65535] { R17193 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 83] { R17193 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R17193 += 1, R56 += 1, R57 += 1 };
  s1 -> s3 [84, 84] { R17193 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [85, 65535] { R17193 += 1, R56 += 1, R57 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R17193 += 1, R56 += 1, R57 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 83] { R17195 += 1, R62 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R17194 += 1, R17195 += 1 };
  s0 -> s2 [84, 84] { R17195 += 1, R62 += 1, R63 += 1 };
  s0 -> s3 [84, 84] { R17195 += 1, R62 += 1, R63 += 1 };
  s0 -> s1 [85, 65535] { R17195 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 83] { R17195 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R17195 += 1, R62 += 1, R63 += 1 };
  s1 -> s3 [84, 84] { R17195 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [85, 65535] { R17195 += 1, R62 += 1, R63 += 1 };
  s2 -> s2 [0, 65535] { R17195 += 1, R62 += 1, R63 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 83] { R17215 += 1 };
  s0 -> s0 [0, 65535] { R17214 += 1, R17215 += 1 };
  s0 -> s2 [84, 84] { R17215 += 1 };
  s0 -> s1 [85, 65535] { R17215 += 1 };
  s1 -> s1 [0, 83] { R17215 += 1 };
  s1 -> s2 [84, 84] { R17215 += 1 };
  s1 -> s1 [85, 65535] { R17215 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R17215 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R17217 += 1, R1 += 1 };
  s0 -> s0 [0, 65535] { R17216 += 1, R17217 += 1 };
  s1 -> s1 [0, 65535] { R17217 += 1, R1 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 83] { R17219 += 1 };
  s0 -> s2 [0, 65535] { R17219 += 1, R8 += 1 };
  s0 -> s0 [0, 65535] { R17218 += 1, R17219 += 1 };
  s0 -> s3 [84, 84] { R17219 += 1 };
  s0 -> s1 [85, 65535] { R17219 += 1 };
  s1 -> s1 [0, 83] { R17219 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [84, 84] { R17219 += 1 };
  s1 -> s1 [85, 65535] { R17219 += 1 };
  s2 -> s1 [0, 83] { R17219 += 1 };
  s2 -> s2 [0, 65535] { R17219 += 1, R8 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [84, 84] { R17219 += 1 };
  s2 -> s1 [85, 65535] { R17219 += 1 };
  s3 -> s3 [0, 65535] { R17219 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 83] { R17221 += 1, R17159 += 1 };
  s0 -> s2 [0, 65535] { R17221 += 1, R17158 += 1, R17159 += 1 };
  s0 -> s0 [0, 65535] { R17220 += 1, R17221 += 1 };
  s0 -> s1 [85, 65535] { R17221 += 1, R17159 += 1 };
  s1 -> s1 [0, 83] { R17221 += 1, R17159 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R17221 += 1 };
  s1 -> s1 [85, 65535] { R17221 += 1, R17159 += 1 };
  s2 -> s1 [0, 83] { R17221 += 1, R17159 += 1 };
  s2 -> s2 [0, 65535] { R17221 += 1, R17158 += 1, R17159 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [85, 65535] { R17221 += 1, R17159 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R17223 += 1, R17161 += 1, R17 += 1 };
  s0 -> s2 [0, 65535] { R17223 += 1, R17160 += 1, R17161 += 1 };
  s0 -> s0 [0, 65535] { R17222 += 1, R17223 += 1 };
  s1 -> s1 [0, 65535] { R17223 += 1, R17161 += 1, R17 += 1 };
  s1 -> s4 [0, 65535] { R17223 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R17223 += 1, R17161 += 1, R17 += 1 };
  s2 -> s2 [0, 65535] { R17223 += 1, R17160 += 1, R17161 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R17223 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 65535] { R17225 += 1, R17162 += 1, R17163 += 1 };
  s0 -> s0 [0, 65535] { R17224 += 1, R17225 += 1 };
  s0 -> s2 [0, 65535] { R17225 += 1, R17163 += 1 };
  s1 -> s1 [0, 65535] { R17225 += 1, R17162 += 1, R17163 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R17225 += 1, R17163 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R17225 += 1 };
  s2 -> s2 [0, 65535] { R17225 += 1, R17163 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R17225 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R17227 += 1, R17165 += 1, R67 += 1 };
  s0 -> s0 [0, 65535] { R17226 += 1, R17227 += 1 };
  s0 -> s2 [0, 65535] { R17227 += 1, R17164 += 1, R17165 += 1 };
  s1 -> s1 [0, 65535] { R17227 += 1, R17165 += 1, R67 += 1 };
  s1 -> s4 [0, 65535] { R17227 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R17227 += 1, R17165 += 1, R67 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R17227 += 1, R17164 += 1, R17165 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R17227 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 84] { R17229 += 1, R17167 += 1 };
  s0 -> s2 [0, 65535] { R17229 += 1, R17166 += 1, R17167 += 1 };
  s0 -> s0 [0, 65535] { R17228 += 1, R17229 += 1 };
  s0 -> s3 [0, 65535] { R17229 += 1, R17167 += 1, R69 += 1 };
  s0 -> s1 [86, 65535] { R17229 += 1, R17167 += 1 };
  s1 -> s1 [0, 84] { R17229 += 1, R17167 += 1 };
  s1 -> s1 [0, 65535] { R17229 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [86, 65535] { R17229 += 1, R17167 += 1 };
  s2 -> s1 [0, 84] { R17229 += 1, R17167 += 1 };
  s2 -> s2 [0, 65535] { R17229 += 1, R17166 += 1, R17167 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R17229 += 1, R17167 += 1, R69 += 1 };
  s2 -> s1 [86, 65535] { R17229 += 1, R17167 += 1 };
  s3 -> s1 [0, 84] { R17229 += 1, R17167 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R17229 += 1 };
  s3 -> s3 [0, 65535] { R17229 += 1, R17167 += 1, R69 += 1 };
  s3 -> s1 [86, 65535] { R17229 += 1, R17167 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R17229 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 84] { R17231 += 1, R17169 += 1, R11525 += 1 };
  s0 -> s2 [0, 65535] { R17231 += 1, R17168 += 1, R17169 += 1 };
  s0 -> s0 [0, 65535] { R17230 += 1, R17231 += 1 };
  s0 -> s1 [0, 65535] { R17231 += 1, R17169 += 1 };
  s0 -> s1 [86, 65535] { R17231 += 1, R17169 += 1, R11525 += 1 };
  s1 -> s1 [0, 84] { R17231 += 1, R17169 += 1, R11525 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R17231 += 1, R17169 += 1 };
  s1 -> s4 [0, 65535] { R17231 += 1 };
  s1 -> s1 [86, 65535] { R17231 += 1, R17169 += 1, R11525 += 1 };
  s2 -> s1 [0, 84] { R17231 += 1, R17169 += 1, R11525 += 1 };
  s2 -> s2 [0, 65535] { R17231 += 1, R17168 += 1, R17169 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R17231 += 1, R17169 += 1 };
  s2 -> s1 [86, 65535] { R17231 += 1, R17169 += 1, R11525 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R17231 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R17233 += 1, R17171 += 1 };
  s0 -> s2 [0, 65535] { R17233 += 1, R17170 += 1, R17171 += 1 };
  s0 -> s3 [0, 65535] { R17233 += 1, R17171 += 1, R15346 += 1, R15347 += 1 };
  s0 -> s0 [0, 65535] { R17232 += 1, R17233 += 1 };
  s1 -> s1 [0, 65535] { R17233 += 1, R17171 += 1 };
  s1 -> s4 [0, 65535] { R17233 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R17233 += 1, R17171 += 1 };
  s2 -> s2 [0, 65535] { R17233 += 1, R17170 += 1, R17171 += 1 };
  s2 -> s3 [0, 65535] { R17233 += 1, R17171 += 1, R15346 += 1, R15347 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R17233 += 1, R17171 += 1 };
  s3 -> s3 [0, 65535] { R17233 += 1, R17171 += 1, R15346 += 1, R15347 += 1 };
  s3 -> s4 [0, 65535] { R17233 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R17233 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 85] { R17235 += 1, R17173 += 1, R16621 += 1 };
  s0 -> s0 [0, 65535] { R17234 += 1, R17235 += 1 };
  s0 -> s2 [0, 65535] { R17235 += 1, R17173 += 1, R16620 += 1, R16621 += 1 };
  s0 -> s3 [0, 65535] { R17235 += 1, R17172 += 1, R17173 += 1 };
  s0 -> s4 [90, 90] { R17235 += 1, R17173 += 1, R16621 += 1 };
  s0 -> s1 [91, 65535] { R17235 += 1, R17173 += 1, R16621 += 1 };
  s1 -> s1 [0, 85] { R17235 += 1, R17173 += 1, R16621 += 1 };
  s1 -> s4 [90, 90] { R17235 += 1, R17173 += 1, R16621 += 1 };
  s1 -> s1 [91, 65535] { R17235 += 1, R17173 += 1, R16621 += 1 };
  s2 -> s1 [0, 85] { R17235 += 1, R17173 += 1, R16621 += 1 };
  s2 -> s2 [0, 65535] { R17235 += 1, R17173 += 1, R16620 += 1, R16621 += 1 };
  s2 -> s4 [90, 90] { R17235 += 1, R17173 += 1, R16621 += 1 };
  s2 -> s1 [91, 65535] { R17235 += 1, R17173 += 1, R16621 += 1 };
  s3 -> s1 [0, 85] { R17235 += 1, R17173 += 1, R16621 += 1 };
  s3 -> s2 [0, 65535] { R17235 += 1, R17173 += 1, R16620 += 1, R16621 += 1 };
  s3 -> s3 [0, 65535] { R17235 += 1, R17172 += 1, R17173 += 1 };
  s3 -> s4 [90, 90] { R17235 += 1, R17173 += 1, R16621 += 1 };
  s3 -> s1 [91, 65535] { R17235 += 1, R17173 += 1, R16621 += 1 };
  s4 -> s4 [0, 85] { R17235 += 1, R17173 += 1, R16621 += 1 };
  s4 -> s5 [0, 65535] { R17235 += 1 };
  s4 -> s4 [0, 65535] { R17235 += 1, R17173 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [90, 65535] { R17235 += 1, R17173 += 1, R16621 += 1 };
  s5 -> s5 [0, 65535] { R17235 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s4, s5, s6;
};
automaton value2_28 {
  init s0;
  s0 -> s0 [0, 65535] { R17236 += 1, R17237 += 1 };
  s0 -> s1 [0, 65535] { R17237 += 1, R17175 += 1 };
  s0 -> s2 [0, 65535] { R17237 += 1, R17175 += 1, R17048 += 1, R17049 += 1 };
  s0 -> s3 [0, 65535] { R17237 += 1, R17174 += 1, R17175 += 1 };
  s1 -> s1 [0, 65535] { R17237 += 1, R17175 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R17237 += 1 };
  s2 -> s1 [0, 65535] { R17237 += 1, R17175 += 1 };
  s2 -> s2 [0, 65535] { R17237 += 1, R17175 += 1, R17048 += 1, R17049 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R17237 += 1 };
  s3 -> s1 [0, 65535] { R17237 += 1, R17175 += 1 };
  s3 -> s2 [0, 65535] { R17237 += 1, R17175 += 1, R17048 += 1, R17049 += 1 };
  s3 -> s3 [0, 65535] { R17237 += 1, R17174 += 1, R17175 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R17237 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 84] { R17239 += 1, R17177 += 1, R17157 += 1 };
  s0 -> s0 [0, 65535] { R17238 += 1, R17239 += 1 };
  s0 -> s2 [0, 65535] { R17239 += 1, R17176 += 1, R17177 += 1 };
  s0 -> s1 [0, 65535] { R17239 += 1, R17177 += 1 };
  s0 -> s3 [85, 85] { R17239 += 1, R17177 += 1, R17157 += 1 };
  s0 -> s4 [85, 85] { R17239 += 1, R17177 += 1, R17157 += 1 };
  s0 -> s1 [91, 65535] { R17239 += 1, R17177 += 1, R17157 += 1 };
  s1 -> s1 [0, 84] { R17239 += 1, R17177 += 1, R17157 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R17239 += 1, R17177 += 1 };
  s1 -> s6 [0, 65535] { R17239 += 1 };
  s1 -> s3 [85, 85] { R17239 += 1, R17177 += 1, R17157 += 1 };
  s1 -> s4 [85, 85] { R17239 += 1, R17177 += 1, R17157 += 1 };
  s1 -> s1 [91, 65535] { R17239 += 1, R17177 += 1, R17157 += 1 };
  s2 -> s1 [0, 84] { R17239 += 1, R17177 += 1, R17157 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R17239 += 1, R17176 += 1, R17177 += 1 };
  s2 -> s1 [0, 65535] { R17239 += 1, R17177 += 1 };
  s2 -> s3 [85, 85] { R17239 += 1, R17177 += 1, R17157 += 1 };
  s2 -> s4 [85, 85] { R17239 += 1, R17177 += 1, R17157 += 1 };
  s2 -> s1 [91, 65535] { R17239 += 1, R17177 += 1, R17157 += 1 };
  s3 -> s3 [0, 65535] { R17239 += 1, R17177 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R17239 += 1 };
  s4 -> s4 [0, 85] { R17239 += 1, R17177 += 1, R17157 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R17239 += 1 };
  s4 -> s4 [0, 65535] { R17239 += 1, R17177 += 1 };
  s4 -> s4 [91, 65535] { R17239 += 1, R17177 += 1, R17157 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R17239 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R17241 += 1, R17196 += 1, R17197 += 1 };
  s0 -> s0 [0, 65535] { R17240 += 1, R17241 += 1 };
  s0 -> s2 [0, 65535] { R17241 += 1, R17197 += 1, R18 += 1 };
  s1 -> s1 [0, 65535] { R17241 += 1, R17196 += 1, R17197 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R17241 += 1, R17197 += 1, R18 += 1 };
  s2 -> s3 [0, 65535] { R17241 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R17241 += 1, R17197 += 1, R18 += 1 };
  s3 -> s3 [0, 65535] { R17241 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 83] { R17243 += 1, R17199 += 1 };
  s0 -> s0 [0, 65535] { R17242 += 1, R17243 += 1 };
  s0 -> s2 [0, 65535] { R17243 += 1, R17198 += 1, R17199 += 1 };
  s0 -> s3 [84, 84] { R17243 += 1, R17199 += 1 };
  s0 -> s4 [84, 84] { R17243 += 1, R17199 += 1 };
  s0 -> s5 [85, 85] { R17243 += 1, R17199 += 1 };
  s0 -> s1 [86, 65535] { R17243 += 1, R17199 += 1 };
  s1 -> s1 [0, 83] { R17243 += 1, R17199 += 1 };
  s1 -> s3 [84, 84] { R17243 += 1, R17199 += 1 };
  s1 -> s4 [84, 84] { R17243 += 1, R17199 += 1 };
  s1 -> s5 [85, 85] { R17243 += 1, R17199 += 1 };
  s1 -> s1 [86, 65535] { R17243 += 1, R17199 += 1 };
  s2 -> s1 [0, 83] { R17243 += 1, R17199 += 1 };
  s2 -> s2 [0, 65535] { R17243 += 1, R17198 += 1, R17199 += 1 };
  s2 -> s3 [84, 84] { R17243 += 1, R17199 += 1 };
  s2 -> s4 [84, 84] { R17243 += 1, R17199 += 1 };
  s2 -> s5 [85, 85] { R17243 += 1, R17199 += 1 };
  s2 -> s1 [86, 65535] { R17243 += 1, R17199 += 1 };
  s4 -> s4 [0, 84] { R17243 += 1, R17199 += 1 };
  s4 -> s7 [85, 85] { R17243 += 1, R17199 += 1 };
  s4 -> s4 [86, 65535] { R17243 += 1, R17199 += 1 };
  s5 -> s5 [0, 83] { R17243 += 1, R17199 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R17243 += 1 };
  s5 -> s7 [84, 84] { R17243 += 1, R17199 += 1 };
  s5 -> s8 [84, 84] { R17243 += 1, R17199 += 1 };
  s5 -> s5 [85, 65535] { R17243 += 1, R17199 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R17243 += 1, R17199 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s9 [0, 65535] { R17243 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R17243 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s9 [0, 65535] { R17243 += 1 };
  accepting s8, s5, s9, s6, s7;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 83] { R17245 += 1, R17201 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R17244 += 1, R17245 += 1 };
  s0 -> s2 [0, 65535] { R17245 += 1, R17200 += 1, R17201 += 1 };
  s0 -> s3 [84, 84] { R17245 += 1, R17201 += 1, R66 += 1 };
  s0 -> s4 [84, 84] { R17245 += 1, R17201 += 1, R66 += 1 };
  s0 -> s1 [85, 65535] { R17245 += 1, R17201 += 1, R66 += 1 };
  s1 -> s1 [0, 83] { R17245 += 1, R17201 += 1, R66 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R17245 += 1 };
  s1 -> s3 [84, 84] { R17245 += 1, R17201 += 1, R66 += 1 };
  s1 -> s4 [84, 84] { R17245 += 1, R17201 += 1, R66 += 1 };
  s1 -> s1 [85, 65535] { R17245 += 1, R17201 += 1, R66 += 1 };
  s2 -> s1 [0, 83] { R17245 += 1, R17201 += 1, R66 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R17245 += 1, R17200 += 1, R17201 += 1 };
  s2 -> s3 [84, 84] { R17245 += 1, R17201 += 1, R66 += 1 };
  s2 -> s4 [84, 84] { R17245 += 1, R17201 += 1, R66 += 1 };
  s2 -> s1 [85, 65535] { R17245 += 1, R17201 += 1, R66 += 1 };
  s3 -> s3 [0, 65535] { R17245 += 1, R17201 += 1, R66 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R17245 += 1 };
  s4 -> s4 [0, 65535] { R17245 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R17245 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 83] { R17247 += 1, R17203 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R17246 += 1, R17247 += 1 };
  s0 -> s2 [0, 65535] { R17247 += 1, R17202 += 1, R17203 += 1 };
  s0 -> s3 [84, 84] { R17247 += 1, R17203 += 1, R68 += 1 };
  s0 -> s4 [84, 84] { R17247 += 1, R17203 += 1, R68 += 1 };
  s0 -> s1 [85, 65535] { R17247 += 1, R17203 += 1, R68 += 1 };
  s1 -> s1 [0, 83] { R17247 += 1, R17203 += 1, R68 += 1 };
  s1 -> s1 [0, 65535] { R17247 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [84, 84] { R17247 += 1, R17203 += 1, R68 += 1 };
  s1 -> s4 [84, 84] { R17247 += 1, R17203 += 1, R68 += 1 };
  s1 -> s1 [85, 65535] { R17247 += 1, R17203 += 1, R68 += 1 };
  s2 -> s1 [0, 83] { R17247 += 1, R17203 += 1, R68 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R17247 += 1, R17202 += 1, R17203 += 1 };
  s2 -> s3 [84, 84] { R17247 += 1, R17203 += 1, R68 += 1 };
  s2 -> s4 [84, 84] { R17247 += 1, R17203 += 1, R68 += 1 };
  s2 -> s1 [85, 65535] { R17247 += 1, R17203 += 1, R68 += 1 };
  s3 -> s3 [0, 65535] { R17247 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R17247 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R17247 += 1, R17203 += 1, R68 += 1 };
  s5 -> s5 [0, 65535] { R17247 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 83] { R17249 += 1, R17205 += 1, R11523 += 1 };
  s0 -> s2 [0, 83] { R17249 += 1, R17205 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s3 [0, 65535] { R17249 += 1, R17204 += 1, R17205 += 1 };
  s0 -> s0 [0, 65535] { R17248 += 1, R17249 += 1 };
  s0 -> s4 [84, 84] { R17249 += 1, R17205 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s5 [84, 84] { R17249 += 1, R17205 += 1, R11523 += 1 };
  s0 -> s6 [84, 84] { R17249 += 1, R17205 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s7 [84, 84] { R17249 += 1, R17205 += 1, R11523 += 1 };
  s0 -> s2 [85, 65535] { R17249 += 1, R17205 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s1 [86, 65535] { R17249 += 1, R17205 += 1, R11523 += 1 };
  s1 -> s1 [0, 83] { R17249 += 1, R17205 += 1, R11523 += 1 };
  s1 -> s1 [0, 65535] { R17249 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s5 [84, 84] { R17249 += 1, R17205 += 1 };
  s1 -> s7 [84, 84] { R17249 += 1, R17205 += 1 };
  s1 -> s1 [85, 65535] { R17249 += 1, R17205 += 1 };
  s1 -> s1 [86, 65535] { R17249 += 1, R17205 += 1, R11523 += 1 };
  s2 -> s1 [0, 83] { R17249 += 1, R17205 += 1, R11523 += 1 };
  s2 -> s2 [0, 83] { R17249 += 1, R17205 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s4 [84, 84] { R17249 += 1, R17205 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s5 [84, 84] { R17249 += 1, R17205 += 1, R11523 += 1 };
  s2 -> s6 [84, 84] { R17249 += 1, R17205 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s7 [84, 84] { R17249 += 1, R17205 += 1, R11523 += 1 };
  s2 -> s2 [85, 65535] { R17249 += 1, R17205 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s1 [86, 65535] { R17249 += 1, R17205 += 1, R11523 += 1 };
  s3 -> s1 [0, 83] { R17249 += 1, R17205 += 1, R11523 += 1 };
  s3 -> s2 [0, 83] { R17249 += 1, R17205 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s3 [0, 65535] { R17249 += 1, R17204 += 1, R17205 += 1 };
  s3 -> s4 [84, 84] { R17249 += 1, R17205 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s5 [84, 84] { R17249 += 1, R17205 += 1, R11523 += 1 };
  s3 -> s6 [84, 84] { R17249 += 1, R17205 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s7 [84, 84] { R17249 += 1, R17205 += 1, R11523 += 1 };
  s3 -> s2 [85, 65535] { R17249 += 1, R17205 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s1 [86, 65535] { R17249 += 1, R17205 += 1, R11523 += 1 };
  s5 -> s5 [0, 65535] { R17249 += 1 };
  s5 -> s9 [0, 65535];
  s6 -> s7 [0, 84] { R17249 += 1, R17205 += 1, R11523 += 1 };
  s6 -> s6 [0, 65535] { R17249 += 1, R17205 += 1, R11522 += 1, R11523 += 1 };
  s6 -> s7 [86, 65535] { R17249 += 1, R17205 += 1, R11523 += 1 };
  s7 -> s7 [0, 84] { R17249 += 1, R17205 += 1, R11523 += 1 };
  s7 -> s8 [0, 65535] { R17249 += 1 };
  s7 -> s9 [0, 65535];
  s7 -> s7 [0, 65535] { R17249 += 1, R17205 += 1 };
  s7 -> s7 [86, 65535] { R17249 += 1, R17205 += 1, R11523 += 1 };
  s8 -> s8 [0, 65535] { R17249 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  accepting s8, s5, s9, s1, s7;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 83] { R17251 += 1, R17207 += 1, R15343 += 1, R15344 += 1 };
  s0 -> s2 [0, 83] { R17251 += 1, R17207 += 1, R15342 += 1, R15343 += 1 };
  s0 -> s3 [0, 65535] { R17251 += 1, R17206 += 1, R17207 += 1 };
  s0 -> s0 [0, 65535] { R17250 += 1, R17251 += 1 };
  s0 -> s4 [84, 84] { R17251 += 1, R17207 += 1, R15342 += 1, R15343 += 1 };
  s0 -> s5 [84, 84] { R17251 += 1, R17207 += 1, R15343 += 1, R15344 += 1 };
  s0 -> s6 [84, 84] { R17251 += 1, R17207 += 1, R15343 += 1, R15344 += 1 };
  s0 -> s7 [84, 84] { R17251 += 1, R17207 += 1, R15342 += 1, R15343 += 1 };
  s0 -> s1 [85, 65535] { R17251 += 1, R17207 += 1, R15343 += 1, R15344 += 1 };
  s0 -> s2 [85, 65535] { R17251 += 1, R17207 += 1, R15342 += 1, R15343 += 1 };
  s1 -> s1 [0, 83] { R17251 += 1, R17207 += 1, R15343 += 1, R15344 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s1 [0, 65535] { R17251 += 1 };
  s1 -> s5 [84, 84] { R17251 += 1, R17207 += 1, R15343 += 1, R15344 += 1 };
  s1 -> s6 [84, 84] { R17251 += 1, R17207 += 1, R15343 += 1, R15344 += 1 };
  s1 -> s1 [85, 65535] { R17251 += 1, R17207 += 1, R15343 += 1, R15344 += 1 };
  s2 -> s1 [0, 83] { R17251 += 1, R17207 += 1, R15343 += 1, R15344 += 1 };
  s2 -> s2 [0, 83] { R17251 += 1, R17207 += 1, R15342 += 1, R15343 += 1 };
  s2 -> s4 [84, 84] { R17251 += 1, R17207 += 1, R15342 += 1, R15343 += 1 };
  s2 -> s5 [84, 84] { R17251 += 1, R17207 += 1, R15343 += 1, R15344 += 1 };
  s2 -> s6 [84, 84] { R17251 += 1, R17207 += 1, R15343 += 1, R15344 += 1 };
  s2 -> s7 [84, 84] { R17251 += 1, R17207 += 1, R15342 += 1, R15343 += 1 };
  s2 -> s1 [85, 65535] { R17251 += 1, R17207 += 1, R15343 += 1, R15344 += 1 };
  s2 -> s2 [85, 65535] { R17251 += 1, R17207 += 1, R15342 += 1, R15343 += 1 };
  s3 -> s1 [0, 83] { R17251 += 1, R17207 += 1, R15343 += 1, R15344 += 1 };
  s3 -> s2 [0, 83] { R17251 += 1, R17207 += 1, R15342 += 1, R15343 += 1 };
  s3 -> s3 [0, 65535] { R17251 += 1, R17206 += 1, R17207 += 1 };
  s3 -> s4 [84, 84] { R17251 += 1, R17207 += 1, R15342 += 1, R15343 += 1 };
  s3 -> s5 [84, 84] { R17251 += 1, R17207 += 1, R15343 += 1, R15344 += 1 };
  s3 -> s6 [84, 84] { R17251 += 1, R17207 += 1, R15343 += 1, R15344 += 1 };
  s3 -> s7 [84, 84] { R17251 += 1, R17207 += 1, R15342 += 1, R15343 += 1 };
  s3 -> s1 [85, 65535] { R17251 += 1, R17207 += 1, R15343 += 1, R15344 += 1 };
  s3 -> s2 [85, 65535] { R17251 += 1, R17207 += 1, R15342 += 1, R15343 += 1 };
  s4 -> s4 [0, 65535] { R17251 += 1, R17207 += 1, R15342 += 1, R15343 += 1 };
  s4 -> s6 [0, 65535] { R17251 += 1, R17207 += 1, R15343 += 1, R15344 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R17251 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R17251 += 1, R17207 += 1, R15343 += 1, R15344 += 1 };
  s6 -> s9 [0, 65535] { R17251 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R17251 += 1 };
  accepting s8, s5, s9, s6, s1;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 83] { R17253 += 1, R17209 += 1, R16618 += 1, R16619 += 1 };
  s0 -> s2 [0, 65535] { R17253 += 1, R17208 += 1, R17209 += 1 };
  s0 -> s0 [0, 65535] { R17252 += 1, R17253 += 1 };
  s0 -> s3 [84, 84] { R17253 += 1, R17209 += 1, R16618 += 1, R16619 += 1 };
  s0 -> s4 [84, 84] { R17253 += 1, R17209 += 1, R16618 += 1, R16619 += 1 };
  s0 -> s1 [85, 65535] { R17253 += 1, R17209 += 1, R16618 += 1, R16619 += 1 };
  s1 -> s1 [0, 83] { R17253 += 1, R17209 += 1, R16618 += 1, R16619 += 1 };
  s1 -> s1 [0, 65535] { R17253 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [84, 84] { R17253 += 1, R17209 += 1, R16618 += 1, R16619 += 1 };
  s1 -> s4 [84, 84] { R17253 += 1, R17209 += 1, R16618 += 1, R16619 += 1 };
  s1 -> s1 [85, 65535] { R17253 += 1, R17209 += 1, R16618 += 1, R16619 += 1 };
  s2 -> s1 [0, 83] { R17253 += 1, R17209 += 1, R16618 += 1, R16619 += 1 };
  s2 -> s2 [0, 65535] { R17253 += 1, R17208 += 1, R17209 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [84, 84] { R17253 += 1, R17209 += 1, R16618 += 1, R16619 += 1 };
  s2 -> s4 [84, 84] { R17253 += 1, R17209 += 1, R16618 += 1, R16619 += 1 };
  s2 -> s1 [85, 65535] { R17253 += 1, R17209 += 1, R16618 += 1, R16619 += 1 };
  s3 -> s3 [0, 65535] { R17253 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R17253 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R17253 += 1, R17209 += 1, R16618 += 1, R16619 += 1 };
  s5 -> s5 [0, 65535] { R17253 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 83] { R17255 += 1, R17211 += 1, R17044 += 1, R17045 += 1 };
  s0 -> s2 [0, 83] { R17255 += 1, R17211 += 1, R17045 += 1, R17046 += 1 };
  s0 -> s0 [0, 65535] { R17254 += 1, R17255 += 1 };
  s0 -> s3 [0, 65535] { R17255 += 1, R17210 += 1, R17211 += 1 };
  s0 -> s4 [84, 84] { R17255 += 1, R17211 += 1, R17045 += 1, R17046 += 1 };
  s0 -> s5 [84, 84] { R17255 += 1, R17211 += 1, R17045 += 1, R17046 += 1 };
  s0 -> s6 [84, 84] { R17255 += 1, R17211 += 1, R17044 += 1, R17045 += 1 };
  s0 -> s7 [84, 84] { R17255 += 1, R17211 += 1, R17044 += 1, R17045 += 1 };
  s0 -> s1 [85, 65535] { R17255 += 1, R17211 += 1, R17044 += 1, R17045 += 1 };
  s0 -> s2 [85, 65535] { R17255 += 1, R17211 += 1, R17045 += 1, R17046 += 1 };
  s1 -> s1 [0, 83] { R17255 += 1, R17211 += 1, R17044 += 1, R17045 += 1 };
  s1 -> s2 [0, 83] { R17255 += 1, R17211 += 1, R17045 += 1, R17046 += 1 };
  s1 -> s4 [84, 84] { R17255 += 1, R17211 += 1, R17045 += 1, R17046 += 1 };
  s1 -> s5 [84, 84] { R17255 += 1, R17211 += 1, R17045 += 1, R17046 += 1 };
  s1 -> s6 [84, 84] { R17255 += 1, R17211 += 1, R17044 += 1, R17045 += 1 };
  s1 -> s7 [84, 84] { R17255 += 1, R17211 += 1, R17044 += 1, R17045 += 1 };
  s1 -> s1 [85, 65535] { R17255 += 1, R17211 += 1, R17044 += 1, R17045 += 1 };
  s1 -> s2 [85, 65535] { R17255 += 1, R17211 += 1, R17045 += 1, R17046 += 1 };
  s2 -> s2 [0, 83] { R17255 += 1, R17211 += 1, R17045 += 1, R17046 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R17255 += 1 };
  s2 -> s4 [84, 84] { R17255 += 1, R17211 += 1, R17045 += 1, R17046 += 1 };
  s2 -> s5 [84, 84] { R17255 += 1, R17211 += 1, R17045 += 1, R17046 += 1 };
  s2 -> s2 [85, 65535] { R17255 += 1, R17211 += 1, R17045 += 1, R17046 += 1 };
  s3 -> s1 [0, 83] { R17255 += 1, R17211 += 1, R17044 += 1, R17045 += 1 };
  s3 -> s2 [0, 83] { R17255 += 1, R17211 += 1, R17045 += 1, R17046 += 1 };
  s3 -> s3 [0, 65535] { R17255 += 1, R17210 += 1, R17211 += 1 };
  s3 -> s4 [84, 84] { R17255 += 1, R17211 += 1, R17045 += 1, R17046 += 1 };
  s3 -> s5 [84, 84] { R17255 += 1, R17211 += 1, R17045 += 1, R17046 += 1 };
  s3 -> s6 [84, 84] { R17255 += 1, R17211 += 1, R17044 += 1, R17045 += 1 };
  s3 -> s7 [84, 84] { R17255 += 1, R17211 += 1, R17044 += 1, R17045 += 1 };
  s3 -> s1 [85, 65535] { R17255 += 1, R17211 += 1, R17044 += 1, R17045 += 1 };
  s3 -> s2 [85, 65535] { R17255 += 1, R17211 += 1, R17045 += 1, R17046 += 1 };
  s4 -> s4 [0, 65535] { R17255 += 1, R17211 += 1, R17045 += 1, R17046 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s9 [0, 65535] { R17255 += 1 };
  s5 -> s5 [0, 65535] { R17255 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s4 [0, 65535] { R17255 += 1, R17211 += 1, R17045 += 1, R17046 += 1 };
  s6 -> s6 [0, 65535] { R17255 += 1, R17211 += 1, R17044 += 1, R17045 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R17255 += 1 };
  accepting s4, s8, s5, s2, s9;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 83] { R17257 += 1, R17213 += 1, R17155 += 1 };
  s0 -> s2 [0, 83] { R17257 += 1, R17213 += 1, R17154 += 1, R17155 += 1 };
  s0 -> s3 [0, 65535] { R17257 += 1, R17212 += 1, R17213 += 1 };
  s0 -> s0 [0, 65535] { R17256 += 1, R17257 += 1 };
  s0 -> s4 [84, 84] { R17257 += 1, R17213 += 1, R17155 += 1 };
  s0 -> s5 [84, 84] { R17257 += 1, R17213 += 1, R17154 += 1, R17155 += 1 };
  s0 -> s6 [84, 84] { R17257 += 1, R17213 += 1, R17155 += 1 };
  s0 -> s7 [84, 84] { R17257 += 1, R17213 += 1, R17154 += 1, R17155 += 1 };
  s0 -> s2 [85, 65535] { R17257 += 1, R17213 += 1, R17154 += 1, R17155 += 1 };
  s0 -> s1 [91, 65535] { R17257 += 1, R17213 += 1, R17155 += 1 };
  s1 -> s1 [0, 83] { R17257 += 1, R17213 += 1, R17155 += 1 };
  s1 -> s1 [0, 65535] { R17257 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [84, 84] { R17257 += 1, R17213 += 1 };
  s1 -> s6 [84, 84] { R17257 += 1, R17213 += 1 };
  s1 -> s1 [85, 65535] { R17257 += 1, R17213 += 1 };
  s1 -> s1 [91, 65535] { R17257 += 1, R17213 += 1, R17155 += 1 };
  s2 -> s1 [0, 83] { R17257 += 1, R17213 += 1, R17155 += 1 };
  s2 -> s2 [0, 83] { R17257 += 1, R17213 += 1, R17154 += 1, R17155 += 1 };
  s2 -> s4 [84, 84] { R17257 += 1, R17213 += 1, R17155 += 1 };
  s2 -> s5 [84, 84] { R17257 += 1, R17213 += 1, R17154 += 1, R17155 += 1 };
  s2 -> s6 [84, 84] { R17257 += 1, R17213 += 1, R17155 += 1 };
  s2 -> s7 [84, 84] { R17257 += 1, R17213 += 1, R17154 += 1, R17155 += 1 };
  s2 -> s2 [85, 65535] { R17257 += 1, R17213 += 1, R17154 += 1, R17155 += 1 };
  s2 -> s1 [91, 65535] { R17257 += 1, R17213 += 1, R17155 += 1 };
  s3 -> s1 [0, 83] { R17257 += 1, R17213 += 1, R17155 += 1 };
  s3 -> s2 [0, 83] { R17257 += 1, R17213 += 1, R17154 += 1, R17155 += 1 };
  s3 -> s3 [0, 65535] { R17257 += 1, R17212 += 1, R17213 += 1 };
  s3 -> s4 [84, 84] { R17257 += 1, R17213 += 1, R17155 += 1 };
  s3 -> s5 [84, 84] { R17257 += 1, R17213 += 1, R17154 += 1, R17155 += 1 };
  s3 -> s6 [84, 84] { R17257 += 1, R17213 += 1, R17155 += 1 };
  s3 -> s7 [84, 84] { R17257 += 1, R17213 += 1, R17154 += 1, R17155 += 1 };
  s3 -> s2 [85, 65535] { R17257 += 1, R17213 += 1, R17154 += 1, R17155 += 1 };
  s3 -> s1 [91, 65535] { R17257 += 1, R17213 += 1, R17155 += 1 };
  s4 -> s4 [0, 84] { R17257 += 1, R17213 += 1, R17155 += 1 };
  s4 -> s4 [0, 65535] { R17257 += 1, R17213 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s9 [0, 65535] { R17257 += 1 };
  s4 -> s4 [91, 65535] { R17257 += 1, R17213 += 1, R17155 += 1 };
  s5 -> s4 [0, 84] { R17257 += 1, R17213 += 1, R17155 += 1 };
  s5 -> s5 [0, 65535] { R17257 += 1, R17213 += 1, R17154 += 1, R17155 += 1 };
  s5 -> s4 [91, 65535] { R17257 += 1, R17213 += 1, R17155 += 1 };
  s6 -> s6 [0, 65535] { R17257 += 1 };
  s6 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R17257 += 1 };
  accepting s4, s8, s9, s6, s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [116, 116];
  accepting s1;
};
};
synchronised {  // Automata constraining P62
automaton P62_0 {
  init s0;
  s0 -> s1 [117, 117];
  accepting s1;
};
};
constraint R1 = R17173 && R2 = R17257 && R20 - R17257 = -1 && R21 = R17257 && R22 - R17257 = -1 && R23 = R17257 && R24 = 0 && R25 = 1 && R26 = 0 && R27 = 1 && R38 + R67 + R66 + -1*R16621 + -1*R16619 - R53 = 0 && R52 + R16620 + R16618 = 0 && R17172 = 0 && R17198 = 0 && R17199 = 0 && R17204 = 0 && R17205 = 0 && R17206 = 0 && R17207 = 0 && R17210 = 0 && R17211 = 0 && R17212 = 0 && R17213 = 0 && R17214 = 0 && R17215 = R17257 && R17216 = 0 && R17217 = R17257 && R17218 = 0 && R17219 = R17257 && R17220 = 0 && R17221 = R17257 && R17222 = 0 && R17223 = R17257 && R17224 = 0 && R17225 = R17257 && R17226 = 0 && R17227 = R17257 && R17228 = 0 && R17229 = R17257 && R17230 = 0 && R17231 = R17257 && R17232 = 0 && R17233 = R17257 && R17234 = 0 && R17235 = R17257 && R17236 = 0 && R17237 = R17257 && R17238 = 0 && R17239 = R17257 && R17240 = 0 && R17241 = R17257 && R17242 = 0 && R17243 = R17257 && R17244 = 0 && R17245 = R17257 && R17246 = 0 && R17247 = R17257 && R17248 = 0 && R17249 = R17257 && R17250 = 0 && R17251 = R17257 && R17252 = 0 && R17253 = R17257 && R17254 = 0 && R17255 = R17257 && R17256 = 0 && R8 < 1 && R11 < 1 && R12 < 1 && R40 + R69 + R68 < 1 && -1*R16621 + -1*R16619 - R53 < 1 && -1 < R17173 && 0 < R17257 && (R48 + R15347 + R15344 != 0 || ((R42 + R11524 + R11522 != 0 || R43 + R11525 + R11523 + -1*R16621 + -1*R16619 - R53 = 0 || R53 + R16621 + R16619 < 1) && (R42 + R11524 + R11522 = 0 || R53 + R16621 + R16619 < 1))) && (R48 + R15347 + R15344 != 0 || ((R46 + R15345 + R15342 != 0 || R47 + R15346 + R15343 + -1*R16621 + -1*R16619 - R53 = 0 || R53 + R16621 + R16619 < 1) && (R46 + R15345 + R15342 = 0 || R53 + R16621 + R16619 < 1))) && (R17158 != 0 || R17159 = R17173 || (R17 = 0 && R17173 = 0)) && (R17160 != 0 || R17161 = R17173 || (R17 = 0 && R17173 = 0)) && (R17162 != 0 || R17163 = R17173 || (R17 = 0 && R17173 = 0)) && (R17164 != 0 || R17165 = R17173 || (R17 = 0 && R17173 = 0)) && (R17166 != 0 || R17167 = R17173 || (R17 = 0 && R17173 = 0)) && (R17168 != 0 || R17169 = R17173 || (R17 = 0 && R17173 = 0)) && (R17170 != 0 || R17171 = R17173 || (R17 = 0 && R17173 = 0)) && (R17174 != 0 || R17173 = R17175 || (R17 = 0 && R17173 = 0)) && (R17176 != 0 || R17173 = R17177 || (R17 = 0 && R17173 = 0)) && (R18 = 0 || (R17196 = 0 && R17197 = 0)) && (R18 = 0 || (R17200 = 0 && R17201 = 0)) && (R18 = 0 || (R17202 = 0 && R17203 = 0)) && (R18 = 0 || (R17208 = 0 && R17209 = 0)) && (R19 = 0 || (R17178 = 0 && R17179 = 0)) && (R19 = 0 || (R17180 = 0 && R17181 = 0)) && (R19 = 0 || (R17182 = 0 && R17183 = 0)) && (R19 = 0 || (R17184 = 0 && R17185 = 0)) && (R19 = 0 || (R17186 = 0 && R17187 = 0)) && (R19 = 0 || (R17188 = 0 && R17189 = 0)) && (R19 = 0 || (R17190 = 0 && R17191 = 0)) && (R19 = 0 || (R17192 = 0 && R17193 = 0)) && (R19 = 0 || (R17194 = 0 && R17195 = 0)) && (R48 + R15347 + R15344 = 0 || (R42 + R11524 + R11522 = 0 && R43 + R11525 + R11523 + -1*R16621 + -1*R16619 - R53 = 0)) && (R48 + R15347 + R15344 = 0 || (R46 + R15345 + R15342 = 0 && R47 + R15346 + R15343 + -1*R16621 + -1*R16619 - R53 = 0)) && (R58 + R17049 + R17046 = 0 || (R56 + R17047 + R17044 = 0 && R57 + R17048 + R17045 = 0)) && (R58 + R17049 + R17046 = 0 || (R62 + R17156 + R17154 = 0 && R63 + R17157 + R17155 = 0)) && (R17158 = 0 || (R17 = 0 && R17173 = 0)) && (R17160 = 0 || (R17 = 0 && R17173 = 0)) && (R17162 = 0 || (R17 = 0 && R17173 = 0)) && (R17164 = 0 || (R17 = 0 && R17173 = 0)) && (R17166 = 0 || (R17 = 0 && R17173 = 0)) && (R17168 = 0 || (R17 = 0 && R17173 = 0)) && (R17170 = 0 || (R17 = 0 && R17173 = 0)) && (R17174 = 0 || (R17 = 0 && R17173 = 0)) && (R17176 = 0 || (R17 = 0 && R17173 = 0));
// End of Parikh automata intersection problem
