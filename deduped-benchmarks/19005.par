// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R2, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R4015, R4016, R4017, R4018, R4019, R4020, R4021, R4022, R4023, R4024, R4815, R4816, R4817, R4818, R4819, R4820, R4821, R4822, R4823, R4824, R4825, R4826, R4827, R4828, R4829, R4830, R4831, R4832, R4833, R4834, R4835, R4836, R4837, R4838, R4839, R4840, R4841, R4842, R4843, R4844, R4845, R4846, R4847, R4848, R4849, R4850, R4851, R4852, R4853, R4854, R4855, R4856, R4857, R4858, R4859, R4860, R4861, R4862, R4863, R4864, R4865, R4866, R4867, R4868, R4869, R4870, R4871, R4872, R4873, R4874, R4875, R4876, R4877, R4878, R4879, R4880, R4881, R4882, R4883, R4884, R4885, R4886, R4887, R4888, R4889, R4890, R4891, R4892, R4893, R4894, R4895, R4896, R4897, R4898, R4899, R4900, R4901, R4902, R4903, R4904, R4905, R4906, R4907, R4908, R4909, R4910, R4911, R4912, R4913, R4914, R4915, R4916, R4917, R4918, R4919, R4920, R4921, R4922, R4923, R4924, R4925, R4926, R4927, R4928, R4929, R4930, R4931, R4932, R4933, R4934, R4935, R4936, R4937, R4938, R4939, R4940, R4941, R4942, R4943, R4944, R4945, R4946, R4947, R4948, R4949, R4950, R4951, R4952, R4953, R4954, R4955, R4956, R4957, R4958, R4959, R4960, R4961, R4962, R4963, R4964, R4965, R4966, R4967, R4968, R4969, R4970, R4971, R4972, R5, R63, R65, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R26 += 1 };
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R4853 += 1, R4854 += 1 };
  s0 -> s1 [0, 65535] { R4854 += 1, R24 += 1 };
  s1 -> s1 [0, 65535] { R4854 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R4856 += 1 };
  s0 -> s0 [0, 65535] { R4855 += 1, R4856 += 1 };
  s0 -> s2 [70, 70] { R4856 += 1 };
  s0 -> s3 [70, 70] { R4856 += 1 };
  s0 -> s1 [76, 65535] { R4856 += 1 };
  s1 -> s1 [0, 69] { R4856 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4856 += 1 };
  s1 -> s3 [70, 70] { R4856 += 1 };
  s1 -> s1 [76, 65535] { R4856 += 1 };
  s2 -> s2 [0, 70] { R4856 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R4856 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R4858 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R4857 += 1, R4858 += 1 };
  s0 -> s2 [70, 70] { R4858 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R4858 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R4858 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R4858 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4858 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R4858 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R4858 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R4858 += 1, R63 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R4860 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R4859 += 1, R4860 += 1 };
  s0 -> s2 [70, 70] { R4860 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R4860 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R4860 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R4860 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4860 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R4860 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R4860 += 1, R65 += 1 };
  s2 -> s2 [0, 65535] { R4860 += 1, R65 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R4862 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R4861 += 1, R4862 += 1 };
  s0 -> s2 [70, 70] { R4862 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R4862 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R4862 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R4862 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4862 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R4862 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R4862 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4862 += 1, R67 += 1, R68 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R4864 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R4863 += 1, R4864 += 1 };
  s0 -> s2 [70, 70] { R4864 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R4864 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R4864 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R4864 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4864 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R4864 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R4864 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4864 += 1, R73 += 1, R74 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R4866 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R4865 += 1, R4866 += 1 };
  s0 -> s2 [70, 70] { R4866 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R4866 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R4866 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R4866 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4866 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R4866 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R4866 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R4866 += 1, R77 += 1, R78 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R4868 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R4867 += 1, R4868 += 1 };
  s0 -> s2 [70, 70] { R4868 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R4868 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R4868 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R4868 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4868 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R4868 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R4868 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535] { R4868 += 1, R81 += 1, R82 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R4870 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R4869 += 1, R4870 += 1 };
  s0 -> s2 [70, 70] { R4870 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R4870 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R4870 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R4870 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4870 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R4870 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R4870 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535] { R4870 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R4872 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R4871 += 1, R4872 += 1 };
  s0 -> s2 [70, 70] { R4872 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R4872 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R4872 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R4872 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4872 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R4872 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R4872 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R4872 += 1, R93 += 1, R94 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R4874 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R4873 += 1, R4874 += 1 };
  s0 -> s2 [70, 70] { R4874 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R4874 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R4874 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R4874 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4874 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R4874 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R4874 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535] { R4874 += 1, R101 += 1, R102 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R4876 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R4875 += 1, R4876 += 1 };
  s0 -> s2 [70, 70] { R4876 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R4876 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R4876 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R4876 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4876 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R4876 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R4876 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535] { R4876 += 1, R111 += 1, R112 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R4878 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R4877 += 1, R4878 += 1 };
  s0 -> s2 [70, 70] { R4878 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R4878 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R4878 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R4878 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4878 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R4878 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R4878 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535] { R4878 += 1, R119 += 1, R120 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R4880 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R4879 += 1, R4880 += 1 };
  s0 -> s2 [70, 70] { R4880 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R4880 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R4880 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R4880 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4880 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R4880 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R4880 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R4880 += 1, R129 += 1, R130 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R4910 += 1 };
  s0 -> s0 [0, 65535] { R4909 += 1, R4910 += 1 };
  s0 -> s2 [70, 70] { R4910 += 1 };
  s0 -> s1 [71, 65535] { R4910 += 1 };
  s1 -> s1 [0, 69] { R4910 += 1 };
  s1 -> s2 [70, 70] { R4910 += 1 };
  s1 -> s1 [71, 65535] { R4910 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4910 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R4912 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R4911 += 1, R4912 += 1 };
  s1 -> s1 [0, 65535] { R4912 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R4914 += 1 };
  s0 -> s2 [0, 65535] { R4914 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R4913 += 1, R4914 += 1 };
  s0 -> s3 [70, 70] { R4914 += 1 };
  s0 -> s1 [71, 65535] { R4914 += 1 };
  s1 -> s1 [0, 69] { R4914 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R4914 += 1 };
  s1 -> s1 [71, 65535] { R4914 += 1 };
  s2 -> s1 [0, 69] { R4914 += 1 };
  s2 -> s2 [0, 65535] { R4914 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R4914 += 1 };
  s2 -> s1 [71, 65535] { R4914 += 1 };
  s3 -> s3 [0, 65535] { R4914 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R4916 += 1, R4824 += 1 };
  s0 -> s2 [0, 65535] { R4916 += 1, R4823 += 1, R4824 += 1 };
  s0 -> s0 [0, 65535] { R4915 += 1, R4916 += 1 };
  s0 -> s1 [71, 65535] { R4916 += 1, R4824 += 1 };
  s1 -> s1 [0, 69] { R4916 += 1, R4824 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4916 += 1 };
  s1 -> s1 [71, 65535] { R4916 += 1, R4824 += 1 };
  s2 -> s1 [0, 69] { R4916 += 1, R4824 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4916 += 1, R4823 += 1, R4824 += 1 };
  s2 -> s1 [71, 65535] { R4916 += 1, R4824 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R4918 += 1, R4825 += 1, R4826 += 1 };
  s0 -> s0 [0, 65535] { R4917 += 1, R4918 += 1 };
  s0 -> s2 [0, 65535] { R4918 += 1, R4826 += 1, R22 += 1 };
  s1 -> s1 [0, 65535] { R4918 += 1, R4825 += 1, R4826 += 1 };
  s1 -> s2 [0, 65535] { R4918 += 1, R4826 += 1, R22 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4918 += 1, R4826 += 1, R22 += 1 };
  s2 -> s3 [0, 65535] { R4918 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4918 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R4920 += 1, R4828 += 1 };
  s0 -> s0 [0, 65535] { R4919 += 1, R4920 += 1 };
  s0 -> s2 [0, 65535] { R4920 += 1, R4827 += 1, R4828 += 1 };
  s0 -> s1 [75, 65535] { R4920 += 1, R4828 += 1 };
  s1 -> s1 [0, 70] { R4920 += 1, R4828 += 1 };
  s1 -> s1 [0, 65535] { R4920 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R4920 += 1, R4828 += 1 };
  s2 -> s1 [0, 70] { R4920 += 1, R4828 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4920 += 1, R4827 += 1, R4828 += 1 };
  s2 -> s1 [75, 65535] { R4920 += 1, R4828 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R4922 += 1, R4830 += 1, R138 += 1 };
  s0 -> s2 [0, 65535] { R4922 += 1, R4829 += 1, R4830 += 1 };
  s0 -> s0 [0, 65535] { R4921 += 1, R4922 += 1 };
  s1 -> s1 [0, 65535] { R4922 += 1, R4830 += 1, R138 += 1 };
  s1 -> s4 [0, 65535] { R4922 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4922 += 1, R4830 += 1, R138 += 1 };
  s2 -> s2 [0, 65535] { R4922 += 1, R4829 += 1, R4830 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4922 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R4924 += 1, R4832 += 1 };
  s0 -> s2 [0, 65535] { R4924 += 1, R4832 += 1, R140 += 1 };
  s0 -> s3 [0, 65535] { R4924 += 1, R4831 += 1, R4832 += 1 };
  s0 -> s0 [0, 65535] { R4923 += 1, R4924 += 1 };
  s0 -> s1 [76, 65535] { R4924 += 1, R4832 += 1 };
  s1 -> s1 [0, 74] { R4924 += 1, R4832 += 1 };
  s1 -> s1 [0, 65535] { R4924 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [76, 65535] { R4924 += 1, R4832 += 1 };
  s2 -> s1 [0, 74] { R4924 += 1, R4832 += 1 };
  s2 -> s5 [0, 65535] { R4924 += 1 };
  s2 -> s2 [0, 65535] { R4924 += 1, R4832 += 1, R140 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [76, 65535] { R4924 += 1, R4832 += 1 };
  s3 -> s1 [0, 74] { R4924 += 1, R4832 += 1 };
  s3 -> s2 [0, 65535] { R4924 += 1, R4832 += 1, R140 += 1 };
  s3 -> s3 [0, 65535] { R4924 += 1, R4831 += 1, R4832 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [76, 65535] { R4924 += 1, R4832 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4924 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R4925 += 1, R4926 += 1 };
  s0 -> s1 [0, 65535] { R4926 += 1, R4833 += 1, R4834 += 1 };
  s0 -> s2 [0, 65535] { R4926 += 1, R4834 += 1, R144 += 1, R145 += 1 };
  s0 -> s3 [0, 65535] { R4926 += 1, R4834 += 1, R145 += 1, R146 += 1 };
  s1 -> s1 [0, 65535] { R4926 += 1, R4833 += 1, R4834 += 1 };
  s1 -> s2 [0, 65535] { R4926 += 1, R4834 += 1, R144 += 1, R145 += 1 };
  s1 -> s3 [0, 65535] { R4926 += 1, R4834 += 1, R145 += 1, R146 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s5 [0, 65535] { R4926 += 1 };
  s2 -> s2 [0, 65535] { R4926 += 1, R4834 += 1, R144 += 1, R145 += 1 };
  s2 -> s3 [0, 65535] { R4926 += 1, R4834 += 1, R145 += 1, R146 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R4926 += 1, R4834 += 1 };
  s3 -> s5 [0, 65535] { R4926 += 1 };
  s3 -> s3 [0, 65535] { R4926 += 1, R4834 += 1, R145 += 1, R146 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4926 += 1, R4834 += 1 };
  s4 -> s5 [0, 65535] { R4926 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4926 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R4928 += 1, R4836 += 1, R150 += 1 };
  s0 -> s0 [0, 65535] { R4927 += 1, R4928 += 1 };
  s0 -> s2 [0, 65535] { R4928 += 1, R4836 += 1, R149 += 1, R150 += 1 };
  s0 -> s3 [0, 65535] { R4928 += 1, R4835 += 1, R4836 += 1 };
  s0 -> s4 [75, 75] { R4928 += 1, R4836 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R4928 += 1, R4836 += 1, R150 += 1 };
  s0 -> s1 [80, 65535] { R4928 += 1, R4836 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R4928 += 1, R4836 += 1, R150 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R4928 += 1 };
  s1 -> s1 [0, 65535] { R4928 += 1, R4836 += 1 };
  s1 -> s4 [75, 75] { R4928 += 1, R4836 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R4928 += 1, R4836 += 1, R150 += 1 };
  s1 -> s1 [80, 65535] { R4928 += 1, R4836 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R4928 += 1, R4836 += 1, R150 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R4928 += 1, R4836 += 1, R149 += 1, R150 += 1 };
  s2 -> s7 [0, 65535] { R4928 += 1 };
  s2 -> s4 [75, 75] { R4928 += 1, R4836 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R4928 += 1, R4836 += 1, R150 += 1 };
  s2 -> s1 [80, 65535] { R4928 += 1, R4836 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R4928 += 1, R4836 += 1, R150 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R4928 += 1, R4836 += 1, R149 += 1, R150 += 1 };
  s3 -> s3 [0, 65535] { R4928 += 1, R4835 += 1, R4836 += 1 };
  s3 -> s4 [75, 75] { R4928 += 1, R4836 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R4928 += 1, R4836 += 1, R150 += 1 };
  s3 -> s1 [80, 65535] { R4928 += 1, R4836 += 1, R150 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4928 += 1, R4836 += 1 };
  s4 -> s7 [0, 65535] { R4928 += 1 };
  s5 -> s5 [0, 75] { R4928 += 1, R4836 += 1, R150 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4928 += 1, R4836 += 1 };
  s5 -> s7 [0, 65535] { R4928 += 1 };
  s5 -> s5 [80, 65535] { R4928 += 1, R4836 += 1, R150 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4928 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R4930 += 1, R4838 += 1, R154 += 1 };
  s0 -> s2 [0, 65535] { R4930 += 1, R4838 += 1 };
  s0 -> s3 [0, 65535] { R4930 += 1, R4837 += 1, R4838 += 1 };
  s0 -> s0 [0, 65535] { R4929 += 1, R4930 += 1 };
  s1 -> s5 [0, 65535] { R4930 += 1 };
  s1 -> s1 [0, 65535] { R4930 += 1, R4838 += 1, R154 += 1 };
  s1 -> s2 [0, 65535] { R4930 += 1, R4838 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R4930 += 1 };
  s2 -> s2 [0, 65535] { R4930 += 1, R4838 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R4930 += 1, R4838 += 1, R154 += 1 };
  s3 -> s2 [0, 65535] { R4930 += 1, R4838 += 1 };
  s3 -> s3 [0, 65535] { R4930 += 1, R4837 += 1, R4838 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4930 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R4932 += 1, R4840 += 1, R158 += 1, R159 += 1 };
  s0 -> s2 [0, 65535] { R4932 += 1, R4839 += 1, R4840 += 1 };
  s0 -> s0 [0, 65535] { R4931 += 1, R4932 += 1 };
  s0 -> s3 [0, 65535] { R4932 += 1, R4840 += 1, R159 += 1, R160 += 1 };
  s1 -> s1 [0, 65535] { R4932 += 1, R4840 += 1, R158 += 1, R159 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R4932 += 1 };
  s1 -> s3 [0, 65535] { R4932 += 1, R4840 += 1, R159 += 1, R160 += 1 };
  s2 -> s1 [0, 65535] { R4932 += 1, R4840 += 1, R158 += 1, R159 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4932 += 1, R4839 += 1, R4840 += 1 };
  s2 -> s3 [0, 65535] { R4932 += 1, R4840 += 1, R159 += 1, R160 += 1 };
  s3 -> s4 [0, 65535] { R4932 += 1, R4840 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R4932 += 1 };
  s3 -> s3 [0, 65535] { R4932 += 1, R4840 += 1, R159 += 1, R160 += 1 };
  s4 -> s4 [0, 65535] { R4932 += 1, R4840 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4932 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4932 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R4934 += 1, R4842 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R4934 += 1, R4842 += 1, R165 += 1, R166 += 1 };
  s0 -> s3 [0, 65535] { R4934 += 1, R4841 += 1, R4842 += 1 };
  s0 -> s0 [0, 65535] { R4933 += 1, R4934 += 1 };
  s0 -> s4 [0, 65535] { R4934 += 1, R4842 += 1, R164 += 1, R165 += 1 };
  s0 -> s1 [76, 65535] { R4934 += 1, R4842 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R4934 += 1, R4842 += 1, R165 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R4934 += 1 };
  s1 -> s1 [0, 65535] { R4934 += 1, R4842 += 1 };
  s1 -> s1 [76, 65535] { R4934 += 1, R4842 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R4934 += 1, R4842 += 1, R165 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4934 += 1, R4842 += 1, R165 += 1, R166 += 1 };
  s2 -> s6 [0, 65535] { R4934 += 1 };
  s2 -> s7 [0, 65535] { R4934 += 1, R4842 += 1 };
  s2 -> s1 [76, 65535] { R4934 += 1, R4842 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R4934 += 1, R4842 += 1, R165 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R4934 += 1, R4842 += 1, R165 += 1, R166 += 1 };
  s3 -> s3 [0, 65535] { R4934 += 1, R4841 += 1, R4842 += 1 };
  s3 -> s4 [0, 65535] { R4934 += 1, R4842 += 1, R164 += 1, R165 += 1 };
  s3 -> s1 [76, 65535] { R4934 += 1, R4842 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R4934 += 1, R4842 += 1, R165 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R4934 += 1, R4842 += 1, R165 += 1, R166 += 1 };
  s4 -> s6 [0, 65535] { R4934 += 1 };
  s4 -> s4 [0, 65535] { R4934 += 1, R4842 += 1, R164 += 1, R165 += 1 };
  s4 -> s1 [76, 65535] { R4934 += 1, R4842 += 1, R165 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4934 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R4934 += 1 };
  s7 -> s7 [0, 65535] { R4934 += 1, R4842 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R4936 += 1, R4844 += 1, R172 += 1, R174 += 1 };
  s0 -> s0 [0, 65535] { R4935 += 1, R4936 += 1 };
  s0 -> s2 [0, 65535] { R4936 += 1, R4844 += 1, R171 += 1, R172 += 1 };
  s0 -> s3 [0, 65535] { R4936 += 1, R4844 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s4 [0, 65535] { R4936 += 1, R4843 += 1, R4844 += 1 };
  s0 -> s1 [76, 65535] { R4936 += 1, R4844 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R4936 += 1, R4844 += 1, R172 += 1, R174 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4936 += 1, R4844 += 1, R172 += 1 };
  s1 -> s6 [0, 65535] { R4936 += 1 };
  s1 -> s7 [0, 65535] { R4936 += 1, R4844 += 1 };
  s1 -> s1 [76, 65535] { R4936 += 1, R4844 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R4936 += 1, R4844 += 1, R172 += 1, R174 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4936 += 1, R4844 += 1, R171 += 1, R172 += 1 };
  s2 -> s6 [0, 65535] { R4936 += 1 };
  s2 -> s3 [0, 65535] { R4936 += 1, R4844 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s1 [76, 65535] { R4936 += 1, R4844 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R4936 += 1, R4844 += 1, R172 += 1, R174 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R4936 += 1 };
  s3 -> s7 [0, 65535] { R4936 += 1, R4844 += 1 };
  s3 -> s3 [0, 65535] { R4936 += 1, R4844 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s1 [76, 65535] { R4936 += 1, R4844 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R4936 += 1, R4844 += 1, R172 += 1, R174 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R4936 += 1, R4844 += 1, R171 += 1, R172 += 1 };
  s4 -> s3 [0, 65535] { R4936 += 1, R4844 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s4 [0, 65535] { R4936 += 1, R4843 += 1, R4844 += 1 };
  s4 -> s1 [76, 65535] { R4936 += 1, R4844 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4936 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R4936 += 1 };
  s7 -> s7 [0, 65535] { R4936 += 1, R4844 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R4938 += 1, R4846 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s0 -> s2 [0, 65535] { R4938 += 1, R4845 += 1, R4846 += 1 };
  s0 -> s3 [0, 65535] { R4938 += 1, R4846 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s0 -> s0 [0, 65535] { R4937 += 1, R4938 += 1 };
  s0 -> s4 [0, 65535] { R4938 += 1, R4846 += 1, R180 += 1, R181 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R4938 += 1, R4846 += 1 };
  s1 -> s1 [0, 65535] { R4938 += 1, R4846 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s1 -> s6 [0, 65535] { R4938 += 1 };
  s1 -> s8 [0, 65535] { R4938 += 1, R4846 += 1, R181 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R4938 += 1, R4846 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s2 -> s2 [0, 65535] { R4938 += 1, R4845 += 1, R4846 += 1 };
  s2 -> s3 [0, 65535] { R4938 += 1, R4846 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s2 -> s4 [0, 65535] { R4938 += 1, R4846 += 1, R180 += 1, R181 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s7 [0, 65535] { R4938 += 1, R4846 += 1 };
  s3 -> s1 [0, 65535] { R4938 += 1, R4846 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s3 -> s6 [0, 65535] { R4938 += 1 };
  s3 -> s3 [0, 65535] { R4938 += 1, R4846 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R4938 += 1, R4846 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s4 -> s6 [0, 65535] { R4938 += 1 };
  s4 -> s3 [0, 65535] { R4938 += 1, R4846 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s4 -> s4 [0, 65535] { R4938 += 1, R4846 += 1, R180 += 1, R181 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4938 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R4938 += 1, R4846 += 1 };
  s7 -> s6 [0, 65535] { R4938 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s7 [0, 65535] { R4938 += 1, R4846 += 1 };
  s8 -> s6 [0, 65535] { R4938 += 1 };
  s8 -> s8 [0, 65535] { R4938 += 1, R4846 += 1, R181 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R4940 += 1, R4848 += 1, R190 += 1, R192 += 1 };
  s0 -> s2 [0, 65535] { R4940 += 1, R4848 += 1, R189 += 1, R190 += 1 };
  s0 -> s3 [0, 65535] { R4940 += 1, R4847 += 1, R4848 += 1 };
  s0 -> s4 [0, 65535] { R4940 += 1, R4848 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s0 -> s0 [0, 65535] { R4939 += 1, R4940 += 1 };
  s0 -> s1 [79, 65535] { R4940 += 1, R4848 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 75] { R4940 += 1, R4848 += 1, R190 += 1, R192 += 1 };
  s1 -> s5 [0, 65535] { R4940 += 1 };
  s1 -> s6 [0, 65535] { R4940 += 1, R4848 += 1 };
  s1 -> s1 [0, 65535] { R4940 += 1, R4848 += 1, R190 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [79, 65535] { R4940 += 1, R4848 += 1, R190 += 1, R192 += 1 };
  s2 -> s1 [0, 75] { R4940 += 1, R4848 += 1, R190 += 1, R192 += 1 };
  s2 -> s5 [0, 65535] { R4940 += 1 };
  s2 -> s2 [0, 65535] { R4940 += 1, R4848 += 1, R189 += 1, R190 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [0, 65535] { R4940 += 1, R4848 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s2 -> s1 [79, 65535] { R4940 += 1, R4848 += 1, R190 += 1, R192 += 1 };
  s3 -> s1 [0, 75] { R4940 += 1, R4848 += 1, R190 += 1, R192 += 1 };
  s3 -> s2 [0, 65535] { R4940 += 1, R4848 += 1, R189 += 1, R190 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R4940 += 1, R4847 += 1, R4848 += 1 };
  s3 -> s4 [0, 65535] { R4940 += 1, R4848 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s3 -> s1 [79, 65535] { R4940 += 1, R4848 += 1, R190 += 1, R192 += 1 };
  s4 -> s1 [0, 75] { R4940 += 1, R4848 += 1, R190 += 1, R192 += 1 };
  s4 -> s5 [0, 65535] { R4940 += 1 };
  s4 -> s6 [0, 65535] { R4940 += 1, R4848 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R4940 += 1, R4848 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s4 -> s1 [79, 65535] { R4940 += 1, R4848 += 1, R190 += 1, R192 += 1 };
  s5 -> s5 [0, 65535] { R4940 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s5 [0, 65535] { R4940 += 1 };
  s6 -> s6 [0, 65535] { R4940 += 1, R4848 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s0 [0, 65535] { R4941 += 1, R4942 += 1 };
  s0 -> s1 [0, 65535] { R4942 += 1, R4850 += 1, R4021 += 1, R4023 += 1, R4024 += 1 };
  s0 -> s2 [0, 65535] { R4942 += 1, R4850 += 1, R4021 += 1 };
  s0 -> s3 [0, 65535] { R4942 += 1, R4850 += 1 };
  s0 -> s4 [0, 65535] { R4942 += 1, R4849 += 1, R4850 += 1 };
  s1 -> s1 [0, 65535] { R4942 += 1, R4850 += 1, R4021 += 1, R4023 += 1, R4024 += 1 };
  s1 -> s2 [0, 65535] { R4942 += 1, R4850 += 1, R4021 += 1 };
  s1 -> s3 [0, 65535] { R4942 += 1, R4850 += 1 };
  s1 -> s6 [0, 65535] { R4942 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4942 += 1, R4850 += 1, R4021 += 1 };
  s2 -> s3 [0, 65535] { R4942 += 1, R4850 += 1 };
  s2 -> s6 [0, 65535] { R4942 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4942 += 1, R4850 += 1 };
  s3 -> s6 [0, 65535] { R4942 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R4942 += 1, R4850 += 1, R4021 += 1, R4023 += 1, R4024 += 1 };
  s4 -> s2 [0, 65535] { R4942 += 1, R4850 += 1, R4021 += 1 };
  s4 -> s3 [0, 65535] { R4942 += 1, R4850 += 1 };
  s4 -> s4 [0, 65535] { R4942 += 1, R4849 += 1, R4850 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4942 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 74] { R4944 += 1, R4852 += 1, R4820 += 1, R4822 += 1 };
  s0 -> s0 [0, 65535] { R4943 += 1, R4944 += 1 };
  s0 -> s2 [0, 65535] { R4944 += 1, R4851 += 1, R4852 += 1 };
  s0 -> s3 [0, 65535] { R4944 += 1, R4852 += 1, R4820 += 1, R4821 += 1, R4822 += 1 };
  s0 -> s4 [0, 65535] { R4944 += 1, R4852 += 1, R4819 += 1, R4820 += 1 };
  s0 -> s5 [75, 75] { R4944 += 1, R4852 += 1, R4820 += 1, R4822 += 1 };
  s0 -> s6 [79, 79] { R4944 += 1, R4852 += 1, R4820 += 1, R4822 += 1 };
  s0 -> s1 [80, 65535] { R4944 += 1, R4852 += 1, R4820 += 1, R4822 += 1 };
  s1 -> s1 [0, 74] { R4944 += 1, R4852 += 1, R4820 += 1, R4822 += 1 };
  s1 -> s5 [75, 75] { R4944 += 1, R4852 += 1, R4820 += 1, R4822 += 1 };
  s1 -> s6 [79, 79] { R4944 += 1, R4852 += 1, R4820 += 1, R4822 += 1 };
  s1 -> s1 [80, 65535] { R4944 += 1, R4852 += 1, R4820 += 1, R4822 += 1 };
  s2 -> s1 [0, 74] { R4944 += 1, R4852 += 1, R4820 += 1, R4822 += 1 };
  s2 -> s2 [0, 65535] { R4944 += 1, R4851 += 1, R4852 += 1 };
  s2 -> s3 [0, 65535] { R4944 += 1, R4852 += 1, R4820 += 1, R4821 += 1, R4822 += 1 };
  s2 -> s4 [0, 65535] { R4944 += 1, R4852 += 1, R4819 += 1, R4820 += 1 };
  s2 -> s5 [75, 75] { R4944 += 1, R4852 += 1, R4820 += 1, R4822 += 1 };
  s2 -> s6 [79, 79] { R4944 += 1, R4852 += 1, R4820 += 1, R4822 += 1 };
  s2 -> s1 [80, 65535] { R4944 += 1, R4852 += 1, R4820 += 1, R4822 += 1 };
  s3 -> s1 [0, 74] { R4944 += 1, R4852 += 1, R4820 += 1, R4822 += 1 };
  s3 -> s3 [0, 65535] { R4944 += 1, R4852 += 1, R4820 += 1, R4821 += 1, R4822 += 1 };
  s3 -> s5 [75, 75] { R4944 += 1, R4852 += 1, R4820 += 1, R4822 += 1 };
  s3 -> s6 [79, 79] { R4944 += 1, R4852 += 1, R4820 += 1, R4822 += 1 };
  s3 -> s1 [80, 65535] { R4944 += 1, R4852 += 1, R4820 += 1, R4822 += 1 };
  s4 -> s1 [0, 74] { R4944 += 1, R4852 += 1, R4820 += 1, R4822 += 1 };
  s4 -> s3 [0, 65535] { R4944 += 1, R4852 += 1, R4820 += 1, R4821 += 1, R4822 += 1 };
  s4 -> s4 [0, 65535] { R4944 += 1, R4852 += 1, R4819 += 1, R4820 += 1 };
  s4 -> s5 [75, 75] { R4944 += 1, R4852 += 1, R4820 += 1, R4822 += 1 };
  s4 -> s6 [79, 79] { R4944 += 1, R4852 += 1, R4820 += 1, R4822 += 1 };
  s4 -> s1 [80, 65535] { R4944 += 1, R4852 += 1, R4820 += 1, R4822 += 1 };
  s5 -> s5 [0, 75] { R4944 += 1, R4852 += 1, R4820 += 1, R4822 += 1 };
  s5 -> s11 [79, 79] { R4944 += 1, R4852 += 1, R4820 += 1, R4822 += 1 };
  s5 -> s5 [80, 65535] { R4944 += 1, R4852 += 1, R4820 += 1, R4822 += 1 };
  s6 -> s6 [0, 74] { R4944 += 1, R4852 += 1, R4820 += 1, R4822 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R4944 += 1, R4852 += 1 };
  s6 -> s6 [0, 65535] { R4944 += 1, R4852 += 1, R4820 += 1 };
  s6 -> s9 [0, 65535] { R4944 += 1 };
  s6 -> s10 [75, 75] { R4944 += 1, R4852 += 1, R4820 += 1, R4822 += 1 };
  s6 -> s11 [75, 75] { R4944 += 1, R4852 += 1, R4820 += 1, R4822 += 1 };
  s6 -> s6 [79, 65535] { R4944 += 1, R4852 += 1, R4820 += 1, R4822 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R4944 += 1, R4852 += 1 };
  s8 -> s9 [0, 65535] { R4944 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s9 [0, 65535] { R4944 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s8 [0, 65535] { R4944 += 1, R4852 += 1 };
  s10 -> s9 [0, 65535] { R4944 += 1 };
  s10 -> s10 [0, 65535] { R4944 += 1, R4852 += 1, R4820 += 1 };
  s11 -> s11 [0, 75] { R4944 += 1, R4852 += 1, R4820 += 1, R4822 += 1 };
  s11 -> s7 [0, 65535];
  s11 -> s8 [0, 65535] { R4944 += 1, R4852 += 1 };
  s11 -> s9 [0, 65535] { R4944 += 1 };
  s11 -> s11 [0, 65535] { R4944 += 1, R4852 += 1, R4820 += 1 };
  s11 -> s11 [79, 65535] { R4944 += 1, R4852 += 1, R4820 += 1, R4822 += 1 };
  accepting s8, s9, s6, s7, s10, s11;
};
automaton value2_40 {
  init s0;
  s0 -> s0 [0, 65535] { R4945 += 1, R4946 += 1 };
  s0 -> s1 [0, 65535] { R4946 += 1, R4881 += 1, R4882 += 1 };
  s0 -> s2 [0, 65535] { R4946 += 1, R4882 += 1, R23 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4946 += 1, R4881 += 1, R4882 += 1 };
  s1 -> s2 [0, 65535] { R4946 += 1, R4882 += 1, R23 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4946 += 1, R4882 += 1, R23 += 1 };
  s2 -> s4 [0, 65535] { R4946 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4946 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R4948 += 1, R4884 += 1 };
  s0 -> s0 [0, 65535] { R4947 += 1, R4948 += 1 };
  s0 -> s2 [0, 65535] { R4948 += 1, R4883 += 1, R4884 += 1 };
  s0 -> s3 [70, 70] { R4948 += 1, R4884 += 1 };
  s0 -> s4 [70, 70] { R4948 += 1, R4884 += 1 };
  s0 -> s5 [75, 75] { R4948 += 1, R4884 += 1 };
  s0 -> s1 [76, 65535] { R4948 += 1, R4884 += 1 };
  s1 -> s1 [0, 69] { R4948 += 1, R4884 += 1 };
  s1 -> s3 [70, 70] { R4948 += 1, R4884 += 1 };
  s1 -> s4 [70, 70] { R4948 += 1, R4884 += 1 };
  s1 -> s5 [75, 75] { R4948 += 1, R4884 += 1 };
  s1 -> s1 [76, 65535] { R4948 += 1, R4884 += 1 };
  s2 -> s1 [0, 69] { R4948 += 1, R4884 += 1 };
  s2 -> s2 [0, 65535] { R4948 += 1, R4883 += 1, R4884 += 1 };
  s2 -> s3 [70, 70] { R4948 += 1, R4884 += 1 };
  s2 -> s4 [70, 70] { R4948 += 1, R4884 += 1 };
  s2 -> s5 [75, 75] { R4948 += 1, R4884 += 1 };
  s2 -> s1 [76, 65535] { R4948 += 1, R4884 += 1 };
  s3 -> s3 [0, 70] { R4948 += 1, R4884 += 1 };
  s3 -> s7 [75, 75] { R4948 += 1, R4884 += 1 };
  s3 -> s3 [76, 65535] { R4948 += 1, R4884 += 1 };
  s5 -> s5 [0, 69] { R4948 += 1, R4884 += 1 };
  s5 -> s5 [0, 65535] { R4948 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R4948 += 1, R4884 += 1 };
  s5 -> s8 [70, 70] { R4948 += 1, R4884 += 1 };
  s5 -> s5 [75, 65535] { R4948 += 1, R4884 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R4948 += 1, R4884 += 1 };
  s7 -> s7 [0, 65535] { R4948 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R4948 += 1, R4884 += 1 };
  s8 -> s8 [0, 65535] { R4948 += 1 };
  s8 -> s6 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R4950 += 1, R4886 += 1, R137 += 1 };
  s0 -> s2 [0, 65535] { R4950 += 1, R4885 += 1, R4886 += 1 };
  s0 -> s0 [0, 65535] { R4949 += 1, R4950 += 1 };
  s0 -> s3 [70, 70] { R4950 += 1, R4886 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R4950 += 1, R4886 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R4950 += 1, R4886 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R4950 += 1, R4886 += 1, R137 += 1 };
  s1 -> s1 [0, 65535] { R4950 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R4950 += 1, R4886 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R4950 += 1, R4886 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R4950 += 1, R4886 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R4950 += 1, R4886 += 1, R137 += 1 };
  s2 -> s2 [0, 65535] { R4950 += 1, R4885 += 1, R4886 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R4950 += 1, R4886 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R4950 += 1, R4886 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R4950 += 1, R4886 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R4950 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4950 += 1 };
  s4 -> s4 [0, 65535] { R4950 += 1, R4886 += 1, R137 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4950 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R4952 += 1, R4888 += 1, R139 += 1 };
  s0 -> s0 [0, 65535] { R4951 += 1, R4952 += 1 };
  s0 -> s2 [0, 65535] { R4952 += 1, R4887 += 1, R4888 += 1 };
  s0 -> s3 [70, 70] { R4952 += 1, R4888 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R4952 += 1, R4888 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R4952 += 1, R4888 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R4952 += 1, R4888 += 1, R139 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R4952 += 1 };
  s1 -> s3 [70, 70] { R4952 += 1, R4888 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R4952 += 1, R4888 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R4952 += 1, R4888 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R4952 += 1, R4888 += 1, R139 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R4952 += 1, R4887 += 1, R4888 += 1 };
  s2 -> s3 [70, 70] { R4952 += 1, R4888 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R4952 += 1, R4888 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R4952 += 1, R4888 += 1, R139 += 1 };
  s3 -> s3 [0, 65535] { R4952 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R4952 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4952 += 1, R4888 += 1, R139 += 1 };
  s5 -> s5 [0, 65535] { R4952 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R4954 += 1, R4890 += 1, R141 += 1, R142 += 1 };
  s0 -> s2 [0, 65535] { R4954 += 1, R4889 += 1, R4890 += 1 };
  s0 -> s0 [0, 65535] { R4953 += 1, R4954 += 1 };
  s0 -> s3 [70, 70] { R4954 += 1, R4890 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R4954 += 1, R4890 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R4954 += 1, R4890 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R4954 += 1, R4890 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 65535] { R4954 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R4954 += 1, R4890 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R4954 += 1, R4890 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R4954 += 1, R4890 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R4954 += 1, R4890 += 1, R141 += 1, R142 += 1 };
  s2 -> s2 [0, 65535] { R4954 += 1, R4889 += 1, R4890 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R4954 += 1, R4890 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R4954 += 1, R4890 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R4954 += 1, R4890 += 1, R141 += 1, R142 += 1 };
  s3 -> s3 [0, 65535] { R4954 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4954 += 1 };
  s4 -> s4 [0, 65535] { R4954 += 1, R4890 += 1, R141 += 1, R142 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4954 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R4956 += 1, R4892 += 1, R147 += 1, R148 += 1 };
  s0 -> s2 [0, 65535] { R4956 += 1, R4891 += 1, R4892 += 1 };
  s0 -> s0 [0, 65535] { R4955 += 1, R4956 += 1 };
  s0 -> s3 [70, 70] { R4956 += 1, R4892 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R4956 += 1, R4892 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R4956 += 1, R4892 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R4956 += 1, R4892 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 65535] { R4956 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R4956 += 1, R4892 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R4956 += 1, R4892 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R4956 += 1, R4892 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R4956 += 1, R4892 += 1, R147 += 1, R148 += 1 };
  s2 -> s2 [0, 65535] { R4956 += 1, R4891 += 1, R4892 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R4956 += 1, R4892 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R4956 += 1, R4892 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R4956 += 1, R4892 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R4956 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4956 += 1, R4892 += 1, R147 += 1, R148 += 1 };
  s4 -> s5 [0, 65535] { R4956 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4956 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R4958 += 1, R4894 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R4958 += 1, R4894 += 1, R151 += 1, R152 += 1 };
  s0 -> s0 [0, 65535] { R4957 += 1, R4958 += 1 };
  s0 -> s3 [0, 65535] { R4958 += 1, R4893 += 1, R4894 += 1 };
  s0 -> s4 [70, 70] { R4958 += 1, R4894 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R4958 += 1, R4894 += 1, R151 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R4958 += 1, R4894 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R4958 += 1, R4894 += 1, R151 += 1, R152 += 1 };
  s0 -> s1 [71, 74] { R4958 += 1, R4894 += 1, R152 += 1 };
  s0 -> s2 [71, 65535] { R4958 += 1, R4894 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R4958 += 1, R4894 += 1, R152 += 1 };
  s0 -> s1 [76, 65535] { R4958 += 1, R4894 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R4958 += 1, R4894 += 1, R152 += 1 };
  s1 -> s4 [70, 70] { R4958 += 1, R4894 += 1, R152 += 1 };
  s1 -> s6 [70, 70] { R4958 += 1, R4894 += 1, R152 += 1 };
  s1 -> s1 [71, 74] { R4958 += 1, R4894 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R4958 += 1, R4894 += 1, R152 += 1 };
  s1 -> s1 [76, 65535] { R4958 += 1, R4894 += 1, R152 += 1 };
  s2 -> s1 [0, 69] { R4958 += 1, R4894 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R4958 += 1, R4894 += 1, R151 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R4958 += 1, R4894 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R4958 += 1, R4894 += 1, R151 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R4958 += 1, R4894 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R4958 += 1, R4894 += 1, R151 += 1, R152 += 1 };
  s2 -> s1 [71, 74] { R4958 += 1, R4894 += 1, R152 += 1 };
  s2 -> s2 [71, 65535] { R4958 += 1, R4894 += 1, R151 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R4958 += 1, R4894 += 1, R152 += 1 };
  s2 -> s1 [76, 65535] { R4958 += 1, R4894 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R4958 += 1, R4894 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R4958 += 1, R4894 += 1, R151 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R4958 += 1, R4893 += 1, R4894 += 1 };
  s3 -> s4 [70, 70] { R4958 += 1, R4894 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R4958 += 1, R4894 += 1, R151 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R4958 += 1, R4894 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R4958 += 1, R4894 += 1, R151 += 1, R152 += 1 };
  s3 -> s1 [71, 74] { R4958 += 1, R4894 += 1, R152 += 1 };
  s3 -> s2 [71, 65535] { R4958 += 1, R4894 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R4958 += 1, R4894 += 1, R152 += 1 };
  s3 -> s1 [76, 65535] { R4958 += 1, R4894 += 1, R152 += 1 };
  s5 -> s6 [0, 74] { R4958 += 1, R4894 += 1, R152 += 1 };
  s5 -> s5 [0, 65535] { R4958 += 1, R4894 += 1, R151 += 1, R152 += 1 };
  s5 -> s10 [75, 75] { R4958 += 1, R4894 += 1, R152 += 1 };
  s5 -> s6 [76, 65535] { R4958 += 1, R4894 += 1, R152 += 1 };
  s6 -> s6 [0, 74] { R4958 += 1, R4894 += 1, R152 += 1 };
  s6 -> s10 [75, 75] { R4958 += 1, R4894 += 1, R152 += 1 };
  s6 -> s6 [76, 65535] { R4958 += 1, R4894 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R4958 += 1, R4894 += 1, R152 += 1 };
  s8 -> s8 [0, 65535] { R4958 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R4958 += 1, R4894 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R4958 += 1, R4894 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R4958 += 1, R4894 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R4958 += 1, R4894 += 1, R152 += 1 };
  s10 -> s12 [0, 65535] { R4958 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R4958 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R4958 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R4960 += 1, R4896 += 1, R155 += 1, R156 += 1 };
  s0 -> s0 [0, 65535] { R4959 += 1, R4960 += 1 };
  s0 -> s2 [0, 65535] { R4960 += 1, R4895 += 1, R4896 += 1 };
  s0 -> s3 [70, 70] { R4960 += 1, R4896 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R4960 += 1, R4896 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R4960 += 1, R4896 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R4960 += 1, R4896 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 65535] { R4960 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R4960 += 1, R4896 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R4960 += 1, R4896 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R4960 += 1, R4896 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R4960 += 1, R4896 += 1, R155 += 1, R156 += 1 };
  s2 -> s2 [0, 65535] { R4960 += 1, R4895 += 1, R4896 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R4960 += 1, R4896 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R4960 += 1, R4896 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R4960 += 1, R4896 += 1, R155 += 1, R156 += 1 };
  s3 -> s3 [0, 65535] { R4960 += 1, R4896 += 1, R155 += 1, R156 += 1 };
  s3 -> s6 [0, 65535] { R4960 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4960 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4960 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R4962 += 1, R4898 += 1, R161 += 1, R162 += 1 };
  s0 -> s2 [0, 65535] { R4962 += 1, R4897 += 1, R4898 += 1 };
  s0 -> s0 [0, 65535] { R4961 += 1, R4962 += 1 };
  s0 -> s3 [70, 70] { R4962 += 1, R4898 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R4962 += 1, R4898 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R4962 += 1, R4898 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R4962 += 1, R4898 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535] { R4962 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R4962 += 1, R4898 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R4962 += 1, R4898 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R4962 += 1, R4898 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R4962 += 1, R4898 += 1, R161 += 1, R162 += 1 };
  s2 -> s2 [0, 65535] { R4962 += 1, R4897 += 1, R4898 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R4962 += 1, R4898 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R4962 += 1, R4898 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R4962 += 1, R4898 += 1, R161 += 1, R162 += 1 };
  s3 -> s3 [0, 65535] { R4962 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4962 += 1, R4898 += 1, R161 += 1, R162 += 1 };
  s4 -> s6 [0, 65535] { R4962 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4962 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R4964 += 1, R4900 += 1, R167 += 1, R168 += 1 };
  s0 -> s0 [0, 65535] { R4963 += 1, R4964 += 1 };
  s0 -> s2 [0, 65535] { R4964 += 1, R4899 += 1, R4900 += 1 };
  s0 -> s3 [70, 70] { R4964 += 1, R4900 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R4964 += 1, R4900 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R4964 += 1, R4900 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R4964 += 1, R4900 += 1, R167 += 1, R168 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4964 += 1 };
  s1 -> s3 [70, 70] { R4964 += 1, R4900 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R4964 += 1, R4900 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R4964 += 1, R4900 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R4964 += 1, R4900 += 1, R167 += 1, R168 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4964 += 1, R4899 += 1, R4900 += 1 };
  s2 -> s3 [70, 70] { R4964 += 1, R4900 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R4964 += 1, R4900 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R4964 += 1, R4900 += 1, R167 += 1, R168 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4964 += 1, R4900 += 1, R167 += 1, R168 += 1 };
  s3 -> s6 [0, 65535] { R4964 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4964 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4964 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R4966 += 1, R4902 += 1, R175 += 1, R176 += 1 };
  s0 -> s0 [0, 65535] { R4965 += 1, R4966 += 1 };
  s0 -> s2 [0, 65535] { R4966 += 1, R4901 += 1, R4902 += 1 };
  s0 -> s3 [70, 70] { R4966 += 1, R4902 += 1, R175 += 1, R176 += 1 };
  s0 -> s4 [70, 70] { R4966 += 1, R4902 += 1, R175 += 1, R176 += 1 };
  s0 -> s1 [71, 65535] { R4966 += 1, R4902 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [0, 69] { R4966 += 1, R4902 += 1, R175 += 1, R176 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4966 += 1 };
  s1 -> s3 [70, 70] { R4966 += 1, R4902 += 1, R175 += 1, R176 += 1 };
  s1 -> s4 [70, 70] { R4966 += 1, R4902 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [71, 65535] { R4966 += 1, R4902 += 1, R175 += 1, R176 += 1 };
  s2 -> s1 [0, 69] { R4966 += 1, R4902 += 1, R175 += 1, R176 += 1 };
  s2 -> s2 [0, 65535] { R4966 += 1, R4901 += 1, R4902 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R4966 += 1, R4902 += 1, R175 += 1, R176 += 1 };
  s2 -> s4 [70, 70] { R4966 += 1, R4902 += 1, R175 += 1, R176 += 1 };
  s2 -> s1 [71, 65535] { R4966 += 1, R4902 += 1, R175 += 1, R176 += 1 };
  s3 -> s6 [0, 65535] { R4966 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4966 += 1, R4902 += 1, R175 += 1, R176 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4966 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4966 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R4968 += 1, R4904 += 1, R185 += 1, R186 += 1 };
  s0 -> s0 [0, 65535] { R4967 += 1, R4968 += 1 };
  s0 -> s2 [0, 65535] { R4968 += 1, R4903 += 1, R4904 += 1 };
  s0 -> s3 [70, 70] { R4968 += 1, R4904 += 1, R185 += 1, R186 += 1 };
  s0 -> s4 [70, 70] { R4968 += 1, R4904 += 1, R185 += 1, R186 += 1 };
  s0 -> s1 [71, 65535] { R4968 += 1, R4904 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 69] { R4968 += 1, R4904 += 1, R185 += 1, R186 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4968 += 1 };
  s1 -> s3 [70, 70] { R4968 += 1, R4904 += 1, R185 += 1, R186 += 1 };
  s1 -> s4 [70, 70] { R4968 += 1, R4904 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [71, 65535] { R4968 += 1, R4904 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [0, 69] { R4968 += 1, R4904 += 1, R185 += 1, R186 += 1 };
  s2 -> s2 [0, 65535] { R4968 += 1, R4903 += 1, R4904 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R4968 += 1, R4904 += 1, R185 += 1, R186 += 1 };
  s2 -> s4 [70, 70] { R4968 += 1, R4904 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [71, 65535] { R4968 += 1, R4904 += 1, R185 += 1, R186 += 1 };
  s3 -> s3 [0, 65535] { R4968 += 1, R4904 += 1, R185 += 1, R186 += 1 };
  s3 -> s6 [0, 65535] { R4968 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4968 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4968 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R4970 += 1, R4906 += 1, R4015 += 1, R4016 += 1 };
  s0 -> s2 [0, 69] { R4970 += 1, R4906 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s0 -> s3 [0, 69] { R4970 += 1, R4906 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s0 -> s4 [0, 65535] { R4970 += 1, R4905 += 1, R4906 += 1 };
  s0 -> s0 [0, 65535] { R4969 += 1, R4970 += 1 };
  s0 -> s5 [70, 70] { R4970 += 1, R4906 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s0 -> s6 [70, 70] { R4970 += 1, R4906 += 1, R4015 += 1, R4016 += 1 };
  s0 -> s7 [70, 70] { R4970 += 1, R4906 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s0 -> s8 [70, 70] { R4970 += 1, R4906 += 1, R4015 += 1, R4016 += 1 };
  s0 -> s9 [70, 70] { R4970 += 1, R4906 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s0 -> s10 [70, 70] { R4970 += 1, R4906 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s0 -> s1 [71, 65535] { R4970 += 1, R4906 += 1, R4015 += 1, R4016 += 1 };
  s0 -> s2 [71, 65535] { R4970 += 1, R4906 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s0 -> s3 [71, 65535] { R4970 += 1, R4906 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s1 -> s1 [0, 69] { R4970 += 1, R4906 += 1, R4015 += 1, R4016 += 1 };
  s1 -> s2 [0, 69] { R4970 += 1, R4906 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s1 -> s3 [0, 69] { R4970 += 1, R4906 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s1 -> s5 [70, 70] { R4970 += 1, R4906 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s1 -> s6 [70, 70] { R4970 += 1, R4906 += 1, R4015 += 1, R4016 += 1 };
  s1 -> s7 [70, 70] { R4970 += 1, R4906 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s1 -> s8 [70, 70] { R4970 += 1, R4906 += 1, R4015 += 1, R4016 += 1 };
  s1 -> s9 [70, 70] { R4970 += 1, R4906 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s1 -> s10 [70, 70] { R4970 += 1, R4906 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s1 -> s1 [71, 65535] { R4970 += 1, R4906 += 1, R4015 += 1, R4016 += 1 };
  s1 -> s2 [71, 65535] { R4970 += 1, R4906 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s1 -> s3 [71, 65535] { R4970 += 1, R4906 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s2 -> s2 [0, 69] { R4970 += 1, R4906 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s2 -> s3 [0, 69] { R4970 += 1, R4906 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s2 -> s5 [70, 70] { R4970 += 1, R4906 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s2 -> s7 [70, 70] { R4970 += 1, R4906 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s2 -> s9 [70, 70] { R4970 += 1, R4906 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s2 -> s10 [70, 70] { R4970 += 1, R4906 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s2 -> s2 [71, 65535] { R4970 += 1, R4906 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s2 -> s3 [71, 65535] { R4970 += 1, R4906 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s3 -> s3 [0, 69] { R4970 += 1, R4906 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s3 -> s11 [0, 65535];
  s3 -> s3 [0, 65535] { R4970 += 1 };
  s3 -> s7 [70, 70] { R4970 += 1, R4906 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s3 -> s10 [70, 70] { R4970 += 1, R4906 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s3 -> s3 [71, 65535] { R4970 += 1, R4906 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s4 -> s1 [0, 69] { R4970 += 1, R4906 += 1, R4015 += 1, R4016 += 1 };
  s4 -> s2 [0, 69] { R4970 += 1, R4906 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s4 -> s3 [0, 69] { R4970 += 1, R4906 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s4 -> s4 [0, 65535] { R4970 += 1, R4905 += 1, R4906 += 1 };
  s4 -> s5 [70, 70] { R4970 += 1, R4906 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s4 -> s6 [70, 70] { R4970 += 1, R4906 += 1, R4015 += 1, R4016 += 1 };
  s4 -> s7 [70, 70] { R4970 += 1, R4906 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s4 -> s8 [70, 70] { R4970 += 1, R4906 += 1, R4015 += 1, R4016 += 1 };
  s4 -> s9 [70, 70] { R4970 += 1, R4906 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s4 -> s10 [70, 70] { R4970 += 1, R4906 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s4 -> s1 [71, 65535] { R4970 += 1, R4906 += 1, R4015 += 1, R4016 += 1 };
  s4 -> s2 [71, 65535] { R4970 += 1, R4906 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s4 -> s3 [71, 65535] { R4970 += 1, R4906 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s5 -> s5 [0, 65535] { R4970 += 1, R4906 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s5 -> s7 [0, 65535] { R4970 += 1, R4906 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s7 -> s12 [0, 65535] { R4970 += 1 };
  s7 -> s11 [0, 65535];
  s7 -> s7 [0, 65535] { R4970 += 1, R4906 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s8 -> s5 [0, 65535] { R4970 += 1, R4906 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s8 -> s7 [0, 65535] { R4970 += 1, R4906 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s8 -> s8 [0, 65535] { R4970 += 1, R4906 += 1, R4015 += 1, R4016 += 1 };
  s10 -> s11 [0, 65535];
  s10 -> s10 [0, 65535] { R4970 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R4970 += 1 };
  s12 -> s11 [0, 65535];
  accepting s3, s12, s7, s10, s11;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R4972 += 1, R4908 += 1, R4815 += 1, R4816 += 1 };
  s0 -> s2 [0, 65535] { R4972 += 1, R4907 += 1, R4908 += 1 };
  s0 -> s0 [0, 65535] { R4971 += 1, R4972 += 1 };
  s0 -> s3 [70, 70] { R4972 += 1, R4908 += 1, R4815 += 1, R4816 += 1 };
  s0 -> s4 [70, 70] { R4972 += 1, R4908 += 1, R4815 += 1, R4816 += 1 };
  s0 -> s1 [71, 65535] { R4972 += 1, R4908 += 1, R4815 += 1, R4816 += 1 };
  s1 -> s1 [0, 69] { R4972 += 1, R4908 += 1, R4815 += 1, R4816 += 1 };
  s1 -> s1 [0, 65535] { R4972 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R4972 += 1, R4908 += 1, R4815 += 1, R4816 += 1 };
  s1 -> s4 [70, 70] { R4972 += 1, R4908 += 1, R4815 += 1, R4816 += 1 };
  s1 -> s1 [71, 65535] { R4972 += 1, R4908 += 1, R4815 += 1, R4816 += 1 };
  s2 -> s1 [0, 69] { R4972 += 1, R4908 += 1, R4815 += 1, R4816 += 1 };
  s2 -> s2 [0, 65535] { R4972 += 1, R4907 += 1, R4908 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R4972 += 1, R4908 += 1, R4815 += 1, R4816 += 1 };
  s2 -> s4 [70, 70] { R4972 += 1, R4908 += 1, R4815 += 1, R4816 += 1 };
  s2 -> s1 [71, 65535] { R4972 += 1, R4908 += 1, R4815 += 1, R4816 += 1 };
  s3 -> s6 [0, 65535] { R4972 += 1 };
  s3 -> s3 [0, 65535] { R4972 += 1, R4908 += 1, R4815 += 1, R4816 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4972 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4972 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R4852 && R3 = R4972 && R25 - R4972 = -1 && R26 = R4972 && R27 - R4972 = -1 && R28 = R4972 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R4820 + -1*R4816 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R4820 + -1*R4816 - R130 = 0 && R129 + R4819 + R4815 = 0 && R131 + R4821 + R4817 = 0 && R132 + R4822 + R4818 = 0 && R4851 = 0 && R4883 = 0 && R4884 = 0 && R4893 = 0 && R4894 = 0 && R4905 = 0 && R4906 = 0 && R4909 = 0 && R4910 = R4972 && R4911 = 0 && R4912 = R4972 && R4913 = 0 && R4914 = R4972 && R4915 = 0 && R4916 = R4972 && R4917 = 0 && R4918 = R4972 && R4919 = 0 && R4920 = R4972 && R4921 = 0 && R4922 = R4972 && R4923 = 0 && R4924 = R4972 && R4925 = 0 && R4926 = R4972 && R4927 = 0 && R4928 = R4972 && R4929 = 0 && R4930 = R4972 && R4931 = 0 && R4932 = R4972 && R4933 = 0 && R4934 = R4972 && R4935 = 0 && R4936 = R4972 && R4937 = 0 && R4938 = R4972 && R4939 = 0 && R4940 = R4972 && R4941 = 0 && R4942 = R4972 && R4943 = 0 && R4944 = R4972 && R4945 = 0 && R4946 = R4972 && R4947 = 0 && R4948 = R4972 && R4949 = 0 && R4950 = R4972 && R4951 = 0 && R4952 = R4972 && R4953 = 0 && R4954 = R4972 && R4955 = 0 && R4956 = R4972 && R4957 = 0 && R4958 = R4972 && R4959 = 0 && R4960 = R4972 && R4961 = 0 && R4962 = R4972 && R4963 = 0 && R4964 = R4972 && R4965 = 0 && R4966 = R4972 && R4967 = 0 && R4968 = R4972 && R4969 = 0 && R4970 = R4972 && R4971 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R4820 + -1*R4816 - R130 < 1 && -1 < R4852 && 0 < R4972 && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R4820 + -1*R4816 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R191 + R187 = 0 && R114 + R192 + R188 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R4820 + -1*R4816 - R130 = 0 || R130 + R4820 + R4816 < 1) && (R81 + R158 + R155 = 0 || R130 + R4820 + R4816 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R4820 + -1*R4816 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R4820 + R4816 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R4820 + -1*R4816 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R4820 + R4816 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R4820 + -1*R4816 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R4820 + R4816 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 != 0 || R112 + R190 + R186 + -1*R4820 + -1*R4816 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R4820 + R4816 = 0)) && (R113 + R191 + R187 != 0 || R83 + R160 + R157 + -1*R192 + -1*R188 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R4020 + R4015 != 0 || R120 + R4021 + R4016 + -1*R4820 + -1*R4816 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R4820 + R4816 = 0)) && (R4823 != 0 || R4824 = R4852 || (R22 = 0 && R4852 = 0)) && (R4825 != 0 || R4826 = R4852 || (R22 = 0 && R4852 = 0)) && (R4827 != 0 || R4828 = R4852 || (R22 = 0 && R4852 = 0)) && (R4829 != 0 || R4830 = R4852 || (R22 = 0 && R4852 = 0)) && (R4831 != 0 || R4832 = R4852 || (R22 = 0 && R4852 = 0)) && (R4833 != 0 || R4834 = R4852 || (R22 = 0 && R4852 = 0)) && (R4835 != 0 || R4836 = R4852 || (R22 = 0 && R4852 = 0)) && (R4837 != 0 || R4838 = R4852 || (R22 = 0 && R4852 = 0)) && (R4839 != 0 || R4840 = R4852 || (R22 = 0 && R4852 = 0)) && (R4841 != 0 || R4842 = R4852 || (R22 = 0 && R4852 = 0)) && (R4843 != 0 || R4844 = R4852 || (R22 = 0 && R4852 = 0)) && (R4845 != 0 || R4846 = R4852 || (R22 = 0 && R4852 = 0)) && (R4847 != 0 || R4848 = R4852 || (R22 = 0 && R4852 = 0)) && (R4849 != 0 || R4850 = R4852 || (R22 = 0 && R4852 = 0)) && (R23 = 0 || (R4881 = 0 && R4882 = 0)) && (R23 = 0 || (R4885 = 0 && R4886 = 0)) && (R23 = 0 || (R4887 = 0 && R4888 = 0)) && (R23 = 0 || (R4889 = 0 && R4890 = 0)) && (R23 = 0 || (R4891 = 0 && R4892 = 0)) && (R23 = 0 || (R4895 = 0 && R4896 = 0)) && (R23 = 0 || (R4897 = 0 && R4898 = 0)) && (R23 = 0 || (R4899 = 0 && R4900 = 0)) && (R23 = 0 || (R4901 = 0 && R4902 = 0)) && (R23 = 0 || (R4903 = 0 && R4904 = 0)) && (R23 = 0 || (R4907 = 0 && R4908 = 0)) && (R24 = 0 || (R4853 = 0 && R4854 = 0)) && (R24 = 0 || (R4855 = 0 && R4856 = 0)) && (R24 = 0 || (R4857 = 0 && R4858 = 0)) && (R24 = 0 || (R4859 = 0 && R4860 = 0)) && (R24 = 0 || (R4861 = 0 && R4862 = 0)) && (R24 = 0 || (R4863 = 0 && R4864 = 0)) && (R24 = 0 || (R4865 = 0 && R4866 = 0)) && (R24 = 0 || (R4867 = 0 && R4868 = 0)) && (R24 = 0 || (R4869 = 0 && R4870 = 0)) && (R24 = 0 || (R4871 = 0 && R4872 = 0)) && (R24 = 0 || (R4873 = 0 && R4874 = 0)) && (R24 = 0 || (R4875 = 0 && R4876 = 0)) && (R24 = 0 || (R4877 = 0 && R4878 = 0)) && (R24 = 0 || (R4879 = 0 && R4880 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R4820 + R4816 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R4820 + R4816 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R4820 + R4816 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 = 0 || (R83 + R160 + R157 = 0 && R130 + R4820 + R4816 = 0)) && (R113 + R191 + R187 = 0 || R83 + R160 + R157 < 1) && (R119 + R4020 + R4015 = 0 || (R83 + R160 + R157 = 0 && R130 + R4820 + R4816 = 0)) && (R123 + R4024 + R4019 = 0 || (R121 + R4022 + R4017 = 0 && R122 + R4023 + R4018 = 0)) && (R4823 = 0 || (R22 = 0 && R4852 = 0)) && (R4825 = 0 || (R22 = 0 && R4852 = 0)) && (R4827 = 0 || (R22 = 0 && R4852 = 0)) && (R4829 = 0 || (R22 = 0 && R4852 = 0)) && (R4831 = 0 || (R22 = 0 && R4852 = 0)) && (R4833 = 0 || (R22 = 0 && R4852 = 0)) && (R4835 = 0 || (R22 = 0 && R4852 = 0)) && (R4837 = 0 || (R22 = 0 && R4852 = 0)) && (R4839 = 0 || (R22 = 0 && R4852 = 0)) && (R4841 = 0 || (R22 = 0 && R4852 = 0)) && (R4843 = 0 || (R22 = 0 && R4852 = 0)) && (R4845 = 0 || (R22 = 0 && R4852 = 0)) && (R4847 = 0 || (R22 = 0 && R4852 = 0)) && (R4849 = 0 || (R22 = 0 && R4852 = 0));
// End of Parikh automata intersection problem
