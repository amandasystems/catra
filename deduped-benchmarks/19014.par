// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R2, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R5, R63, R65, R6563, R6564, R6565, R6566, R6567, R6568, R6569, R6570, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R9119, R9120, R9121, R9122, R9123, R9124, R9125, R9126, R9127, R9128, R93, R94, R95, R96, R9761, R9762, R9763, R9764, R9765, R9766, R9767, R9768, R9769, R9770, R9771, R9772, R9773, R9774, R9775, R9776, R9777, R9778, R9779, R9780, R9781, R9782, R9783, R9784, R9785, R9786, R9787, R9788, R9789, R9790, R9791, R9792, R9793, R9794, R9795, R9796, R9797, R9798, R9799, R9800, R9801, R9802, R9803, R9804, R9805, R9806, R9807, R9808, R9809, R9810, R9811, R9812, R9813, R9814, R9815, R9816, R9817, R9818, R9819, R9820, R9821, R9822, R9823, R9824, R9825, R9826, R9827, R9828, R9829, R9830, R9831, R9832, R9833, R9834, R9835, R9836, R9837, R9838, R9839, R9840, R9841, R9842, R9843, R9844, R9845, R9846, R9847, R9848, R9849, R9850, R9851, R9852, R9853, R9854, R9855, R9856, R9857, R9858, R9859, R9860, R9861, R9862, R9863, R9864, R9865, R9866, R9867, R9868, R9869, R9870, R9871, R9872, R9873, R9874, R9875, R9876, R9877, R9878, R9879, R9880, R9881, R9882, R9883, R9884, R9885, R9886, R9887, R9888, R9889, R9890, R9891, R9892, R9893, R9894, R9895, R9896, R9897, R9898, R9899, R9900, R9901, R9902, R9903, R9904, R9905, R9906, R9907, R9908, R9909, R9910, R9911, R9912, R9913, R9914, R9915, R9916, R9917, R9918;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R26 += 1 };
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R9799 += 1, R9800 += 1 };
  s0 -> s1 [0, 65535] { R9800 += 1, R24 += 1 };
  s1 -> s1 [0, 65535] { R9800 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R9802 += 1 };
  s0 -> s0 [0, 65535] { R9801 += 1, R9802 += 1 };
  s0 -> s2 [70, 70] { R9802 += 1 };
  s0 -> s3 [70, 70] { R9802 += 1 };
  s0 -> s1 [76, 65535] { R9802 += 1 };
  s1 -> s1 [0, 69] { R9802 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9802 += 1 };
  s1 -> s3 [70, 70] { R9802 += 1 };
  s1 -> s1 [76, 65535] { R9802 += 1 };
  s2 -> s2 [0, 70] { R9802 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R9802 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R9804 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R9803 += 1, R9804 += 1 };
  s0 -> s2 [70, 70] { R9804 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R9804 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R9804 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R9804 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9804 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R9804 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R9804 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R9804 += 1, R63 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R9806 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R9805 += 1, R9806 += 1 };
  s0 -> s2 [70, 70] { R9806 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R9806 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R9806 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R9806 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9806 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R9806 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R9806 += 1, R65 += 1 };
  s2 -> s2 [0, 65535] { R9806 += 1, R65 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R9808 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R9807 += 1, R9808 += 1 };
  s0 -> s2 [70, 70] { R9808 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R9808 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R9808 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R9808 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9808 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R9808 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R9808 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R9808 += 1, R67 += 1, R68 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R9810 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R9809 += 1, R9810 += 1 };
  s0 -> s2 [70, 70] { R9810 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R9810 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R9810 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R9810 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9810 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R9810 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R9810 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R9810 += 1, R73 += 1, R74 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R9812 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R9811 += 1, R9812 += 1 };
  s0 -> s2 [70, 70] { R9812 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R9812 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R9812 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R9812 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9812 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R9812 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R9812 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535] { R9812 += 1, R77 += 1, R78 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R9814 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R9813 += 1, R9814 += 1 };
  s0 -> s2 [70, 70] { R9814 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R9814 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R9814 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R9814 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9814 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R9814 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R9814 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R9814 += 1, R81 += 1, R82 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R9816 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R9815 += 1, R9816 += 1 };
  s0 -> s2 [70, 70] { R9816 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R9816 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R9816 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R9816 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9816 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R9816 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R9816 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R9816 += 1, R87 += 1, R88 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R9818 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R9817 += 1, R9818 += 1 };
  s0 -> s2 [70, 70] { R9818 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R9818 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R9818 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R9818 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9818 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R9818 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R9818 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R9818 += 1, R93 += 1, R94 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R9820 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R9819 += 1, R9820 += 1 };
  s0 -> s2 [70, 70] { R9820 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R9820 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R9820 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R9820 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9820 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R9820 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R9820 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535] { R9820 += 1, R101 += 1, R102 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R9822 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R9821 += 1, R9822 += 1 };
  s0 -> s2 [70, 70] { R9822 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R9822 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R9822 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R9822 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9822 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R9822 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R9822 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535] { R9822 += 1, R111 += 1, R112 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R9824 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R9823 += 1, R9824 += 1 };
  s0 -> s2 [70, 70] { R9824 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R9824 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R9824 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R9824 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9824 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R9824 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R9824 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R9824 += 1, R119 += 1, R120 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R9826 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R9825 += 1, R9826 += 1 };
  s0 -> s2 [70, 70] { R9826 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R9826 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R9826 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R9826 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9826 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R9826 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R9826 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R9826 += 1, R129 += 1, R130 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R9856 += 1 };
  s0 -> s0 [0, 65535] { R9855 += 1, R9856 += 1 };
  s0 -> s2 [70, 70] { R9856 += 1 };
  s0 -> s1 [71, 65535] { R9856 += 1 };
  s1 -> s1 [0, 69] { R9856 += 1 };
  s1 -> s2 [70, 70] { R9856 += 1 };
  s1 -> s1 [71, 65535] { R9856 += 1 };
  s2 -> s2 [0, 65535] { R9856 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R9858 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R9857 += 1, R9858 += 1 };
  s1 -> s1 [0, 65535] { R9858 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R9860 += 1 };
  s0 -> s0 [0, 65535] { R9859 += 1, R9860 += 1 };
  s0 -> s2 [0, 65535] { R9860 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R9860 += 1 };
  s0 -> s1 [71, 65535] { R9860 += 1 };
  s1 -> s1 [0, 69] { R9860 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R9860 += 1 };
  s1 -> s1 [71, 65535] { R9860 += 1 };
  s2 -> s1 [0, 69] { R9860 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R9860 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R9860 += 1 };
  s2 -> s1 [71, 65535] { R9860 += 1 };
  s3 -> s3 [0, 65535] { R9860 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R9862 += 1, R9770 += 1 };
  s0 -> s0 [0, 65535] { R9861 += 1, R9862 += 1 };
  s0 -> s2 [0, 65535] { R9862 += 1, R9769 += 1, R9770 += 1 };
  s0 -> s1 [71, 65535] { R9862 += 1, R9770 += 1 };
  s1 -> s1 [0, 69] { R9862 += 1, R9770 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R9862 += 1 };
  s1 -> s1 [71, 65535] { R9862 += 1, R9770 += 1 };
  s2 -> s1 [0, 69] { R9862 += 1, R9770 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R9862 += 1, R9769 += 1, R9770 += 1 };
  s2 -> s1 [71, 65535] { R9862 += 1, R9770 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R9864 += 1, R9771 += 1, R9772 += 1 };
  s0 -> s0 [0, 65535] { R9863 += 1, R9864 += 1 };
  s0 -> s2 [0, 65535] { R9864 += 1, R9772 += 1, R22 += 1 };
  s1 -> s1 [0, 65535] { R9864 += 1, R9771 += 1, R9772 += 1 };
  s1 -> s2 [0, 65535] { R9864 += 1, R9772 += 1, R22 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R9864 += 1, R9772 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R9864 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R9864 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R9866 += 1, R9774 += 1 };
  s0 -> s2 [0, 65535] { R9866 += 1, R9773 += 1, R9774 += 1 };
  s0 -> s0 [0, 65535] { R9865 += 1, R9866 += 1 };
  s0 -> s1 [75, 65535] { R9866 += 1, R9774 += 1 };
  s1 -> s1 [0, 70] { R9866 += 1, R9774 += 1 };
  s1 -> s1 [0, 65535] { R9866 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R9866 += 1, R9774 += 1 };
  s2 -> s1 [0, 70] { R9866 += 1, R9774 += 1 };
  s2 -> s2 [0, 65535] { R9866 += 1, R9773 += 1, R9774 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R9866 += 1, R9774 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s0 [0, 65535] { R9867 += 1, R9868 += 1 };
  s0 -> s1 [0, 65535] { R9868 += 1, R9775 += 1, R9776 += 1 };
  s0 -> s2 [0, 65535] { R9868 += 1, R9776 += 1, R138 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R9868 += 1, R9775 += 1, R9776 += 1 };
  s1 -> s2 [0, 65535] { R9868 += 1, R9776 += 1, R138 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R9868 += 1 };
  s2 -> s2 [0, 65535] { R9868 += 1, R9776 += 1, R138 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R9868 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R9870 += 1, R9778 += 1 };
  s0 -> s2 [0, 65535] { R9870 += 1, R9777 += 1, R9778 += 1 };
  s0 -> s0 [0, 65535] { R9869 += 1, R9870 += 1 };
  s0 -> s3 [0, 65535] { R9870 += 1, R9778 += 1, R140 += 1 };
  s0 -> s1 [76, 65535] { R9870 += 1, R9778 += 1 };
  s1 -> s1 [0, 74] { R9870 += 1, R9778 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R9870 += 1 };
  s1 -> s1 [76, 65535] { R9870 += 1, R9778 += 1 };
  s2 -> s1 [0, 74] { R9870 += 1, R9778 += 1 };
  s2 -> s2 [0, 65535] { R9870 += 1, R9777 += 1, R9778 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R9870 += 1, R9778 += 1, R140 += 1 };
  s2 -> s1 [76, 65535] { R9870 += 1, R9778 += 1 };
  s3 -> s1 [0, 74] { R9870 += 1, R9778 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R9870 += 1, R9778 += 1, R140 += 1 };
  s3 -> s5 [0, 65535] { R9870 += 1 };
  s3 -> s1 [76, 65535] { R9870 += 1, R9778 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R9870 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R9871 += 1, R9872 += 1 };
  s0 -> s1 [0, 65535] { R9872 += 1, R9779 += 1, R9780 += 1 };
  s0 -> s2 [0, 65535] { R9872 += 1, R9780 += 1, R145 += 1, R146 += 1 };
  s0 -> s3 [0, 65535] { R9872 += 1, R9780 += 1, R144 += 1, R145 += 1 };
  s1 -> s1 [0, 65535] { R9872 += 1, R9779 += 1, R9780 += 1 };
  s1 -> s2 [0, 65535] { R9872 += 1, R9780 += 1, R145 += 1, R146 += 1 };
  s1 -> s3 [0, 65535] { R9872 += 1, R9780 += 1, R144 += 1, R145 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s6 [0, 65535] { R9872 += 1, R9780 += 1 };
  s2 -> s2 [0, 65535] { R9872 += 1, R9780 += 1, R145 += 1, R146 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R9872 += 1 };
  s3 -> s2 [0, 65535] { R9872 += 1, R9780 += 1, R145 += 1, R146 += 1 };
  s3 -> s3 [0, 65535] { R9872 += 1, R9780 += 1, R144 += 1, R145 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R9872 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R9872 += 1 };
  s6 -> s6 [0, 65535] { R9872 += 1, R9780 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R9872 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R9874 += 1, R9782 += 1, R150 += 1 };
  s0 -> s2 [0, 65535] { R9874 += 1, R9782 += 1, R149 += 1, R150 += 1 };
  s0 -> s3 [0, 65535] { R9874 += 1, R9781 += 1, R9782 += 1 };
  s0 -> s0 [0, 65535] { R9873 += 1, R9874 += 1 };
  s0 -> s4 [75, 75] { R9874 += 1, R9782 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R9874 += 1, R9782 += 1, R150 += 1 };
  s0 -> s1 [80, 65535] { R9874 += 1, R9782 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R9874 += 1, R9782 += 1, R150 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R9874 += 1 };
  s1 -> s1 [0, 65535] { R9874 += 1, R9782 += 1 };
  s1 -> s4 [75, 75] { R9874 += 1, R9782 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R9874 += 1, R9782 += 1, R150 += 1 };
  s1 -> s1 [80, 65535] { R9874 += 1, R9782 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R9874 += 1, R9782 += 1, R150 += 1 };
  s2 -> s2 [0, 65535] { R9874 += 1, R9782 += 1, R149 += 1, R150 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R9874 += 1 };
  s2 -> s4 [75, 75] { R9874 += 1, R9782 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R9874 += 1, R9782 += 1, R150 += 1 };
  s2 -> s1 [80, 65535] { R9874 += 1, R9782 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R9874 += 1, R9782 += 1, R150 += 1 };
  s3 -> s2 [0, 65535] { R9874 += 1, R9782 += 1, R149 += 1, R150 += 1 };
  s3 -> s3 [0, 65535] { R9874 += 1, R9781 += 1, R9782 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s4 [75, 75] { R9874 += 1, R9782 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R9874 += 1, R9782 += 1, R150 += 1 };
  s3 -> s1 [80, 65535] { R9874 += 1, R9782 += 1, R150 += 1 };
  s4 -> s4 [0, 75] { R9874 += 1, R9782 += 1, R150 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R9874 += 1 };
  s4 -> s4 [0, 65535] { R9874 += 1, R9782 += 1 };
  s4 -> s4 [80, 65535] { R9874 += 1, R9782 += 1, R150 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R9874 += 1 };
  s5 -> s5 [0, 65535] { R9874 += 1, R9782 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R9874 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s0 [0, 65535] { R9875 += 1, R9876 += 1 };
  s0 -> s1 [0, 65535] { R9876 += 1, R9784 += 1 };
  s0 -> s2 [0, 65535] { R9876 += 1, R9783 += 1, R9784 += 1 };
  s0 -> s3 [0, 65535] { R9876 += 1, R9784 += 1, R154 += 1 };
  s1 -> s1 [0, 65535] { R9876 += 1, R9784 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R9876 += 1 };
  s2 -> s1 [0, 65535] { R9876 += 1, R9784 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R9876 += 1, R9783 += 1, R9784 += 1 };
  s2 -> s3 [0, 65535] { R9876 += 1, R9784 += 1, R154 += 1 };
  s3 -> s1 [0, 65535] { R9876 += 1, R9784 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R9876 += 1 };
  s3 -> s3 [0, 65535] { R9876 += 1, R9784 += 1, R154 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R9876 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R9878 += 1, R9786 += 1, R158 += 1, R159 += 1 };
  s0 -> s2 [0, 65535] { R9878 += 1, R9785 += 1, R9786 += 1 };
  s0 -> s3 [0, 65535] { R9878 += 1, R9786 += 1, R159 += 1, R160 += 1 };
  s0 -> s0 [0, 65535] { R9877 += 1, R9878 += 1 };
  s1 -> s1 [0, 65535] { R9878 += 1, R9786 += 1, R158 += 1, R159 += 1 };
  s1 -> s3 [0, 65535] { R9878 += 1, R9786 += 1, R159 += 1, R160 += 1 };
  s1 -> s5 [0, 65535] { R9878 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s1 [0, 65535] { R9878 += 1, R9786 += 1, R158 += 1, R159 += 1 };
  s2 -> s2 [0, 65535] { R9878 += 1, R9785 += 1, R9786 += 1 };
  s2 -> s3 [0, 65535] { R9878 += 1, R9786 += 1, R159 += 1, R160 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R9878 += 1, R9786 += 1 };
  s3 -> s3 [0, 65535] { R9878 += 1, R9786 += 1, R159 += 1, R160 += 1 };
  s3 -> s5 [0, 65535] { R9878 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R9878 += 1, R9786 += 1 };
  s4 -> s5 [0, 65535] { R9878 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R9878 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R9880 += 1, R9788 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R9880 += 1, R9788 += 1, R164 += 1, R165 += 1 };
  s0 -> s3 [0, 65535] { R9880 += 1, R9788 += 1, R165 += 1, R166 += 1 };
  s0 -> s4 [0, 65535] { R9880 += 1, R9787 += 1, R9788 += 1 };
  s0 -> s0 [0, 65535] { R9879 += 1, R9880 += 1 };
  s0 -> s1 [76, 65535] { R9880 += 1, R9788 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R9880 += 1, R9788 += 1, R165 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R9880 += 1, R9788 += 1 };
  s1 -> s7 [0, 65535] { R9880 += 1 };
  s1 -> s1 [76, 65535] { R9880 += 1, R9788 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R9880 += 1, R9788 += 1, R165 += 1 };
  s2 -> s2 [0, 65535] { R9880 += 1, R9788 += 1, R164 += 1, R165 += 1 };
  s2 -> s3 [0, 65535] { R9880 += 1, R9788 += 1, R165 += 1, R166 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R9880 += 1 };
  s2 -> s1 [76, 65535] { R9880 += 1, R9788 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R9880 += 1, R9788 += 1, R165 += 1 };
  s3 -> s6 [0, 65535] { R9880 += 1, R9788 += 1 };
  s3 -> s3 [0, 65535] { R9880 += 1, R9788 += 1, R165 += 1, R166 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s7 [0, 65535] { R9880 += 1 };
  s3 -> s1 [76, 65535] { R9880 += 1, R9788 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R9880 += 1, R9788 += 1, R165 += 1 };
  s4 -> s2 [0, 65535] { R9880 += 1, R9788 += 1, R164 += 1, R165 += 1 };
  s4 -> s3 [0, 65535] { R9880 += 1, R9788 += 1, R165 += 1, R166 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R9880 += 1, R9787 += 1, R9788 += 1 };
  s4 -> s1 [76, 65535] { R9880 += 1, R9788 += 1, R165 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9880 += 1, R9788 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s7 [0, 65535] { R9880 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R9880 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R9882 += 1, R9790 += 1, R172 += 1, R174 += 1 };
  s0 -> s2 [0, 65535] { R9882 += 1, R9789 += 1, R9790 += 1 };
  s0 -> s3 [0, 65535] { R9882 += 1, R9790 += 1, R171 += 1, R172 += 1 };
  s0 -> s0 [0, 65535] { R9881 += 1, R9882 += 1 };
  s0 -> s4 [0, 65535] { R9882 += 1, R9790 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s1 [76, 65535] { R9882 += 1, R9790 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R9882 += 1, R9790 += 1, R172 += 1, R174 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R9882 += 1, R9790 += 1 };
  s1 -> s1 [0, 65535] { R9882 += 1, R9790 += 1, R172 += 1 };
  s1 -> s7 [0, 65535] { R9882 += 1 };
  s1 -> s1 [76, 65535] { R9882 += 1, R9790 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R9882 += 1, R9790 += 1, R172 += 1, R174 += 1 };
  s2 -> s2 [0, 65535] { R9882 += 1, R9789 += 1, R9790 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R9882 += 1, R9790 += 1, R171 += 1, R172 += 1 };
  s2 -> s4 [0, 65535] { R9882 += 1, R9790 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s1 [76, 65535] { R9882 += 1, R9790 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R9882 += 1, R9790 += 1, R172 += 1, R174 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R9882 += 1, R9790 += 1, R171 += 1, R172 += 1 };
  s3 -> s7 [0, 65535] { R9882 += 1 };
  s3 -> s4 [0, 65535] { R9882 += 1, R9790 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s1 [76, 65535] { R9882 += 1, R9790 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R9882 += 1, R9790 += 1, R172 += 1, R174 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R9882 += 1, R9790 += 1 };
  s4 -> s7 [0, 65535] { R9882 += 1 };
  s4 -> s4 [0, 65535] { R9882 += 1, R9790 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s1 [76, 65535] { R9882 += 1, R9790 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9882 += 1, R9790 += 1 };
  s6 -> s7 [0, 65535] { R9882 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R9882 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R9884 += 1, R9791 += 1, R9792 += 1 };
  s0 -> s2 [0, 65535] { R9884 += 1, R9792 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s0 -> s0 [0, 65535] { R9883 += 1, R9884 += 1 };
  s0 -> s3 [0, 65535] { R9884 += 1, R9792 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s0 -> s4 [0, 65535] { R9884 += 1, R9792 += 1, R180 += 1, R181 += 1 };
  s1 -> s1 [0, 65535] { R9884 += 1, R9791 += 1, R9792 += 1 };
  s1 -> s2 [0, 65535] { R9884 += 1, R9792 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [0, 65535] { R9884 += 1, R9792 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s1 -> s4 [0, 65535] { R9884 += 1, R9792 += 1, R180 += 1, R181 += 1 };
  s2 -> s7 [0, 65535] { R9884 += 1, R9792 += 1 };
  s2 -> s8 [0, 65535] { R9884 += 1, R9792 += 1, R181 += 1 };
  s2 -> s2 [0, 65535] { R9884 += 1, R9792 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s2 -> s5 [0, 65535] { R9884 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R9884 += 1, R9792 += 1 };
  s3 -> s2 [0, 65535] { R9884 += 1, R9792 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s3 -> s5 [0, 65535] { R9884 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R9884 += 1, R9792 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s4 -> s2 [0, 65535] { R9884 += 1, R9792 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s4 -> s5 [0, 65535] { R9884 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s3 [0, 65535] { R9884 += 1, R9792 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s4 -> s4 [0, 65535] { R9884 += 1, R9792 += 1, R180 += 1, R181 += 1 };
  s5 -> s5 [0, 65535] { R9884 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R9884 += 1, R9792 += 1 };
  s7 -> s5 [0, 65535] { R9884 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R9884 += 1, R9792 += 1 };
  s8 -> s8 [0, 65535] { R9884 += 1, R9792 += 1, R181 += 1 };
  s8 -> s5 [0, 65535] { R9884 += 1 };
  s8 -> s6 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R9886 += 1, R9794 += 1, R6568 += 1, R6570 += 1 };
  s0 -> s1 [0, 65535] { R9886 += 1, R9794 += 1, R6568 += 1 };
  s0 -> s2 [0, 65535] { R9886 += 1, R9793 += 1, R9794 += 1 };
  s0 -> s0 [0, 65535] { R9885 += 1, R9886 += 1 };
  s0 -> s3 [0, 65535] { R9886 += 1, R9794 += 1 };
  s0 -> s1 [79, 65535] { R9886 += 1, R9794 += 1, R6568 += 1, R6570 += 1 };
  s1 -> s1 [0, 75] { R9886 += 1, R9794 += 1, R6568 += 1, R6570 += 1 };
  s1 -> s4 [0, 65535] { R9886 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R9886 += 1, R9794 += 1, R6568 += 1 };
  s1 -> s3 [0, 65535] { R9886 += 1, R9794 += 1 };
  s1 -> s1 [79, 65535] { R9886 += 1, R9794 += 1, R6568 += 1, R6570 += 1 };
  s2 -> s1 [0, 75] { R9886 += 1, R9794 += 1, R6568 += 1, R6570 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R9886 += 1, R9794 += 1, R6568 += 1 };
  s2 -> s2 [0, 65535] { R9886 += 1, R9793 += 1, R9794 += 1 };
  s2 -> s3 [0, 65535] { R9886 += 1, R9794 += 1 };
  s2 -> s1 [79, 65535] { R9886 += 1, R9794 += 1, R6568 += 1, R6570 += 1 };
  s3 -> s4 [0, 65535] { R9886 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R9886 += 1, R9794 += 1 };
  s4 -> s4 [0, 65535] { R9886 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s0 [0, 65535] { R9887 += 1, R9888 += 1 };
  s0 -> s1 [0, 65535] { R9888 += 1, R9796 += 1 };
  s0 -> s2 [0, 65535] { R9888 += 1, R9795 += 1, R9796 += 1 };
  s1 -> s1 [0, 65535] { R9888 += 1, R9796 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R9888 += 1 };
  s2 -> s1 [0, 65535] { R9888 += 1, R9796 += 1 };
  s2 -> s2 [0, 65535] { R9888 += 1, R9795 += 1, R9796 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R9888 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 75] { R9890 += 1, R9798 += 1, R9766 += 1, R9768 += 1 };
  s0 -> s2 [0, 65535] { R9890 += 1, R9797 += 1, R9798 += 1 };
  s0 -> s0 [0, 65535] { R9889 += 1, R9890 += 1 };
  s0 -> s3 [79, 79] { R9890 += 1, R9798 += 1, R9766 += 1, R9768 += 1 };
  s0 -> s1 [80, 65535] { R9890 += 1, R9798 += 1, R9766 += 1, R9768 += 1 };
  s1 -> s1 [0, 75] { R9890 += 1, R9798 += 1, R9766 += 1, R9768 += 1 };
  s1 -> s3 [79, 79] { R9890 += 1, R9798 += 1, R9766 += 1, R9768 += 1 };
  s1 -> s1 [80, 65535] { R9890 += 1, R9798 += 1, R9766 += 1, R9768 += 1 };
  s2 -> s1 [0, 75] { R9890 += 1, R9798 += 1, R9766 += 1, R9768 += 1 };
  s2 -> s2 [0, 65535] { R9890 += 1, R9797 += 1, R9798 += 1 };
  s2 -> s3 [79, 79] { R9890 += 1, R9798 += 1, R9766 += 1, R9768 += 1 };
  s2 -> s1 [80, 65535] { R9890 += 1, R9798 += 1, R9766 += 1, R9768 += 1 };
  s3 -> s3 [0, 75] { R9890 += 1, R9798 += 1, R9766 += 1, R9768 += 1 };
  s3 -> s3 [0, 65535] { R9890 += 1, R9798 += 1, R9766 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R9890 += 1, R9798 += 1 };
  s3 -> s6 [0, 65535] { R9890 += 1 };
  s3 -> s3 [79, 65535] { R9890 += 1, R9798 += 1, R9766 += 1, R9768 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R9890 += 1, R9798 += 1 };
  s5 -> s6 [0, 65535] { R9890 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R9890 += 1 };
  accepting s3, s4, s5, s6;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65535] { R9892 += 1, R9828 += 1, R23 += 1 };
  s0 -> s2 [0, 65535] { R9892 += 1, R9827 += 1, R9828 += 1 };
  s0 -> s0 [0, 65535] { R9891 += 1, R9892 += 1 };
  s1 -> s4 [0, 65535] { R9892 += 1 };
  s1 -> s1 [0, 65535] { R9892 += 1, R9828 += 1, R23 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R9892 += 1, R9828 += 1, R23 += 1 };
  s2 -> s2 [0, 65535] { R9892 += 1, R9827 += 1, R9828 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R9892 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R9894 += 1, R9830 += 1 };
  s0 -> s0 [0, 65535] { R9893 += 1, R9894 += 1 };
  s0 -> s2 [0, 65535] { R9894 += 1, R9829 += 1, R9830 += 1 };
  s0 -> s3 [70, 70] { R9894 += 1, R9830 += 1 };
  s0 -> s4 [70, 70] { R9894 += 1, R9830 += 1 };
  s0 -> s5 [75, 75] { R9894 += 1, R9830 += 1 };
  s0 -> s1 [76, 65535] { R9894 += 1, R9830 += 1 };
  s1 -> s1 [0, 69] { R9894 += 1, R9830 += 1 };
  s1 -> s3 [70, 70] { R9894 += 1, R9830 += 1 };
  s1 -> s4 [70, 70] { R9894 += 1, R9830 += 1 };
  s1 -> s5 [75, 75] { R9894 += 1, R9830 += 1 };
  s1 -> s1 [76, 65535] { R9894 += 1, R9830 += 1 };
  s2 -> s1 [0, 69] { R9894 += 1, R9830 += 1 };
  s2 -> s2 [0, 65535] { R9894 += 1, R9829 += 1, R9830 += 1 };
  s2 -> s3 [70, 70] { R9894 += 1, R9830 += 1 };
  s2 -> s4 [70, 70] { R9894 += 1, R9830 += 1 };
  s2 -> s5 [75, 75] { R9894 += 1, R9830 += 1 };
  s2 -> s1 [76, 65535] { R9894 += 1, R9830 += 1 };
  s3 -> s3 [0, 70] { R9894 += 1, R9830 += 1 };
  s3 -> s8 [75, 75] { R9894 += 1, R9830 += 1 };
  s3 -> s3 [76, 65535] { R9894 += 1, R9830 += 1 };
  s5 -> s5 [0, 69] { R9894 += 1, R9830 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R9894 += 1 };
  s5 -> s7 [70, 70] { R9894 += 1, R9830 += 1 };
  s5 -> s8 [70, 70] { R9894 += 1, R9830 += 1 };
  s5 -> s5 [75, 65535] { R9894 += 1, R9830 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R9894 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 70] { R9894 += 1, R9830 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R9894 += 1 };
  s8 -> s8 [75, 65535] { R9894 += 1, R9830 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R9896 += 1, R9832 += 1, R137 += 1 };
  s0 -> s0 [0, 65535] { R9895 += 1, R9896 += 1 };
  s0 -> s2 [0, 65535] { R9896 += 1, R9831 += 1, R9832 += 1 };
  s0 -> s3 [70, 70] { R9896 += 1, R9832 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R9896 += 1, R9832 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R9896 += 1, R9832 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R9896 += 1, R9832 += 1, R137 += 1 };
  s1 -> s1 [0, 65535] { R9896 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R9896 += 1, R9832 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R9896 += 1, R9832 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R9896 += 1, R9832 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R9896 += 1, R9832 += 1, R137 += 1 };
  s2 -> s2 [0, 65535] { R9896 += 1, R9831 += 1, R9832 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R9896 += 1, R9832 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R9896 += 1, R9832 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R9896 += 1, R9832 += 1, R137 += 1 };
  s3 -> s6 [0, 65535] { R9896 += 1 };
  s3 -> s3 [0, 65535] { R9896 += 1, R9832 += 1, R137 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R9896 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9896 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R9898 += 1, R9834 += 1, R139 += 1 };
  s0 -> s0 [0, 65535] { R9897 += 1, R9898 += 1 };
  s0 -> s2 [0, 65535] { R9898 += 1, R9833 += 1, R9834 += 1 };
  s0 -> s3 [70, 70] { R9898 += 1, R9834 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R9898 += 1, R9834 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R9898 += 1, R9834 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R9898 += 1, R9834 += 1, R139 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R9898 += 1 };
  s1 -> s3 [70, 70] { R9898 += 1, R9834 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R9898 += 1, R9834 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R9898 += 1, R9834 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R9898 += 1, R9834 += 1, R139 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R9898 += 1, R9833 += 1, R9834 += 1 };
  s2 -> s3 [70, 70] { R9898 += 1, R9834 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R9898 += 1, R9834 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R9898 += 1, R9834 += 1, R139 += 1 };
  s3 -> s3 [0, 65535] { R9898 += 1, R9834 += 1, R139 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R9898 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R9898 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9898 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R9900 += 1, R9836 += 1, R141 += 1, R142 += 1 };
  s0 -> s2 [0, 65535] { R9900 += 1, R9835 += 1, R9836 += 1 };
  s0 -> s0 [0, 65535] { R9899 += 1, R9900 += 1 };
  s0 -> s3 [70, 70] { R9900 += 1, R9836 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R9900 += 1, R9836 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R9900 += 1, R9836 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R9900 += 1, R9836 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 65535] { R9900 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R9900 += 1, R9836 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R9900 += 1, R9836 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R9900 += 1, R9836 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R9900 += 1, R9836 += 1, R141 += 1, R142 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R9900 += 1, R9835 += 1, R9836 += 1 };
  s2 -> s3 [70, 70] { R9900 += 1, R9836 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R9900 += 1, R9836 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R9900 += 1, R9836 += 1, R141 += 1, R142 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R9900 += 1, R9836 += 1, R141 += 1, R142 += 1 };
  s3 -> s6 [0, 65535] { R9900 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R9900 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9900 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R9902 += 1, R9838 += 1, R147 += 1, R148 += 1 };
  s0 -> s0 [0, 65535] { R9901 += 1, R9902 += 1 };
  s0 -> s2 [0, 65535] { R9902 += 1, R9837 += 1, R9838 += 1 };
  s0 -> s3 [70, 70] { R9902 += 1, R9838 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R9902 += 1, R9838 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R9902 += 1, R9838 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R9902 += 1, R9838 += 1, R147 += 1, R148 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R9902 += 1 };
  s1 -> s3 [70, 70] { R9902 += 1, R9838 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R9902 += 1, R9838 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R9902 += 1, R9838 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R9902 += 1, R9838 += 1, R147 += 1, R148 += 1 };
  s2 -> s2 [0, 65535] { R9902 += 1, R9837 += 1, R9838 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R9902 += 1, R9838 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R9902 += 1, R9838 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R9902 += 1, R9838 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R9902 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R9902 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R9902 += 1, R9838 += 1, R147 += 1, R148 += 1 };
  s5 -> s5 [0, 65535] { R9902 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R9904 += 1, R9840 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R9904 += 1, R9840 += 1, R151 += 1, R152 += 1 };
  s0 -> s0 [0, 65535] { R9903 += 1, R9904 += 1 };
  s0 -> s3 [0, 65535] { R9904 += 1, R9839 += 1, R9840 += 1 };
  s0 -> s4 [70, 70] { R9904 += 1, R9840 += 1, R151 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R9904 += 1, R9840 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R9904 += 1, R9840 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R9904 += 1, R9840 += 1, R151 += 1, R152 += 1 };
  s0 -> s1 [71, 74] { R9904 += 1, R9840 += 1, R152 += 1 };
  s0 -> s2 [71, 65535] { R9904 += 1, R9840 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R9904 += 1, R9840 += 1, R152 += 1 };
  s0 -> s1 [76, 65535] { R9904 += 1, R9840 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R9904 += 1, R9840 += 1, R152 += 1 };
  s1 -> s5 [70, 70] { R9904 += 1, R9840 += 1, R152 += 1 };
  s1 -> s6 [70, 70] { R9904 += 1, R9840 += 1, R152 += 1 };
  s1 -> s1 [71, 74] { R9904 += 1, R9840 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R9904 += 1, R9840 += 1, R152 += 1 };
  s1 -> s1 [76, 65535] { R9904 += 1, R9840 += 1, R152 += 1 };
  s2 -> s1 [0, 69] { R9904 += 1, R9840 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R9904 += 1, R9840 += 1, R151 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R9904 += 1, R9840 += 1, R151 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R9904 += 1, R9840 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R9904 += 1, R9840 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R9904 += 1, R9840 += 1, R151 += 1, R152 += 1 };
  s2 -> s1 [71, 74] { R9904 += 1, R9840 += 1, R152 += 1 };
  s2 -> s2 [71, 65535] { R9904 += 1, R9840 += 1, R151 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R9904 += 1, R9840 += 1, R152 += 1 };
  s2 -> s1 [76, 65535] { R9904 += 1, R9840 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R9904 += 1, R9840 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R9904 += 1, R9840 += 1, R151 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R9904 += 1, R9839 += 1, R9840 += 1 };
  s3 -> s4 [70, 70] { R9904 += 1, R9840 += 1, R151 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R9904 += 1, R9840 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R9904 += 1, R9840 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R9904 += 1, R9840 += 1, R151 += 1, R152 += 1 };
  s3 -> s1 [71, 74] { R9904 += 1, R9840 += 1, R152 += 1 };
  s3 -> s2 [71, 65535] { R9904 += 1, R9840 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R9904 += 1, R9840 += 1, R152 += 1 };
  s3 -> s1 [76, 65535] { R9904 += 1, R9840 += 1, R152 += 1 };
  s4 -> s5 [0, 74] { R9904 += 1, R9840 += 1, R152 += 1 };
  s4 -> s4 [0, 65535] { R9904 += 1, R9840 += 1, R151 += 1, R152 += 1 };
  s4 -> s10 [75, 75] { R9904 += 1, R9840 += 1, R152 += 1 };
  s4 -> s5 [76, 65535] { R9904 += 1, R9840 += 1, R152 += 1 };
  s5 -> s5 [0, 74] { R9904 += 1, R9840 += 1, R152 += 1 };
  s5 -> s10 [75, 75] { R9904 += 1, R9840 += 1, R152 += 1 };
  s5 -> s5 [76, 65535] { R9904 += 1, R9840 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R9904 += 1, R9840 += 1, R152 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R9904 += 1 };
  s8 -> s10 [70, 70] { R9904 += 1, R9840 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R9904 += 1, R9840 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R9904 += 1, R9840 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R9904 += 1, R9840 += 1, R152 += 1 };
  s10 -> s12 [0, 65535] { R9904 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R9904 += 1 };
  s12 -> s12 [0, 65535] { R9904 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R9906 += 1, R9842 += 1, R155 += 1, R156 += 1 };
  s0 -> s2 [0, 65535] { R9906 += 1, R9841 += 1, R9842 += 1 };
  s0 -> s0 [0, 65535] { R9905 += 1, R9906 += 1 };
  s0 -> s3 [70, 70] { R9906 += 1, R9842 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R9906 += 1, R9842 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R9906 += 1, R9842 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R9906 += 1, R9842 += 1, R155 += 1, R156 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R9906 += 1 };
  s1 -> s3 [70, 70] { R9906 += 1, R9842 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R9906 += 1, R9842 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R9906 += 1, R9842 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R9906 += 1, R9842 += 1, R155 += 1, R156 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R9906 += 1, R9841 += 1, R9842 += 1 };
  s2 -> s3 [70, 70] { R9906 += 1, R9842 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R9906 += 1, R9842 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R9906 += 1, R9842 += 1, R155 += 1, R156 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R9906 += 1 };
  s4 -> s5 [0, 65535] { R9906 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R9906 += 1, R9842 += 1, R155 += 1, R156 += 1 };
  s5 -> s5 [0, 65535] { R9906 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R9908 += 1, R9844 += 1, R161 += 1, R162 += 1 };
  s0 -> s0 [0, 65535] { R9907 += 1, R9908 += 1 };
  s0 -> s2 [0, 65535] { R9908 += 1, R9843 += 1, R9844 += 1 };
  s0 -> s3 [70, 70] { R9908 += 1, R9844 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R9908 += 1, R9844 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R9908 += 1, R9844 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R9908 += 1, R9844 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535] { R9908 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R9908 += 1, R9844 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R9908 += 1, R9844 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R9908 += 1, R9844 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R9908 += 1, R9844 += 1, R161 += 1, R162 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R9908 += 1, R9843 += 1, R9844 += 1 };
  s2 -> s3 [70, 70] { R9908 += 1, R9844 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R9908 += 1, R9844 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R9908 += 1, R9844 += 1, R161 += 1, R162 += 1 };
  s3 -> s3 [0, 65535] { R9908 += 1, R9844 += 1, R161 += 1, R162 += 1 };
  s3 -> s6 [0, 65535] { R9908 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R9908 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9908 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R9910 += 1, R9846 += 1, R167 += 1, R168 += 1 };
  s0 -> s2 [0, 65535] { R9910 += 1, R9845 += 1, R9846 += 1 };
  s0 -> s0 [0, 65535] { R9909 += 1, R9910 += 1 };
  s0 -> s3 [70, 70] { R9910 += 1, R9846 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R9910 += 1, R9846 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R9910 += 1, R9846 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R9910 += 1, R9846 += 1, R167 += 1, R168 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R9910 += 1 };
  s1 -> s3 [70, 70] { R9910 += 1, R9846 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R9910 += 1, R9846 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R9910 += 1, R9846 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R9910 += 1, R9846 += 1, R167 += 1, R168 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R9910 += 1, R9845 += 1, R9846 += 1 };
  s2 -> s3 [70, 70] { R9910 += 1, R9846 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R9910 += 1, R9846 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R9910 += 1, R9846 += 1, R167 += 1, R168 += 1 };
  s3 -> s6 [0, 65535] { R9910 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R9910 += 1, R9846 += 1, R167 += 1, R168 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R9910 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9910 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R9912 += 1, R9848 += 1, R175 += 1, R176 += 1 };
  s0 -> s2 [0, 65535] { R9912 += 1, R9847 += 1, R9848 += 1 };
  s0 -> s0 [0, 65535] { R9911 += 1, R9912 += 1 };
  s0 -> s3 [70, 70] { R9912 += 1, R9848 += 1, R175 += 1, R176 += 1 };
  s0 -> s4 [70, 70] { R9912 += 1, R9848 += 1, R175 += 1, R176 += 1 };
  s0 -> s1 [71, 65535] { R9912 += 1, R9848 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [0, 69] { R9912 += 1, R9848 += 1, R175 += 1, R176 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R9912 += 1 };
  s1 -> s3 [70, 70] { R9912 += 1, R9848 += 1, R175 += 1, R176 += 1 };
  s1 -> s4 [70, 70] { R9912 += 1, R9848 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [71, 65535] { R9912 += 1, R9848 += 1, R175 += 1, R176 += 1 };
  s2 -> s1 [0, 69] { R9912 += 1, R9848 += 1, R175 += 1, R176 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R9912 += 1, R9847 += 1, R9848 += 1 };
  s2 -> s3 [70, 70] { R9912 += 1, R9848 += 1, R175 += 1, R176 += 1 };
  s2 -> s4 [70, 70] { R9912 += 1, R9848 += 1, R175 += 1, R176 += 1 };
  s2 -> s1 [71, 65535] { R9912 += 1, R9848 += 1, R175 += 1, R176 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R9912 += 1 };
  s4 -> s5 [0, 65535] { R9912 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R9912 += 1, R9848 += 1, R175 += 1, R176 += 1 };
  s5 -> s5 [0, 65535] { R9912 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R9914 += 1, R9850 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s2 [0, 69] { R9914 += 1, R9850 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s3 [0, 69] { R9914 += 1, R9850 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s4 [0, 65535] { R9914 += 1, R9849 += 1, R9850 += 1 };
  s0 -> s0 [0, 65535] { R9913 += 1, R9914 += 1 };
  s0 -> s5 [70, 70] { R9914 += 1, R9850 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s6 [70, 70] { R9914 += 1, R9850 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s7 [70, 70] { R9914 += 1, R9850 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s8 [70, 70] { R9914 += 1, R9850 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s9 [70, 70] { R9914 += 1, R9850 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s10 [70, 70] { R9914 += 1, R9850 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s3 [71, 75] { R9914 += 1, R9850 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s1 [71, 65535] { R9914 += 1, R9850 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s2 [71, 65535] { R9914 += 1, R9850 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s3 [79, 65535] { R9914 += 1, R9850 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s1 [0, 69] { R9914 += 1, R9850 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s1 -> s3 [0, 69] { R9914 += 1, R9850 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s5 [70, 70] { R9914 += 1, R9850 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s1 -> s6 [70, 70] { R9914 += 1, R9850 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s8 [70, 70] { R9914 += 1, R9850 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s9 [70, 70] { R9914 += 1, R9850 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s1 -> s3 [71, 75] { R9914 += 1, R9850 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s1 [71, 65535] { R9914 += 1, R9850 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s1 -> s3 [79, 65535] { R9914 += 1, R9850 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s1 [0, 69] { R9914 += 1, R9850 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s2 [0, 69] { R9914 += 1, R9850 += 1, R6563 += 1, R6564 += 1 };
  s2 -> s3 [0, 69] { R9914 += 1, R9850 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s5 [70, 70] { R9914 += 1, R9850 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s6 [70, 70] { R9914 += 1, R9850 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s7 [70, 70] { R9914 += 1, R9850 += 1, R6563 += 1, R6564 += 1 };
  s2 -> s8 [70, 70] { R9914 += 1, R9850 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s9 [70, 70] { R9914 += 1, R9850 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s10 [70, 70] { R9914 += 1, R9850 += 1, R6563 += 1, R6564 += 1 };
  s2 -> s3 [71, 75] { R9914 += 1, R9850 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s1 [71, 65535] { R9914 += 1, R9850 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s2 [71, 65535] { R9914 += 1, R9850 += 1, R6563 += 1, R6564 += 1 };
  s2 -> s3 [79, 65535] { R9914 += 1, R9850 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s3 [0, 69] { R9914 += 1, R9850 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s11 [0, 65535];
  s3 -> s3 [0, 65535] { R9914 += 1 };
  s3 -> s6 [70, 70] { R9914 += 1, R9850 += 1, R6564 += 1 };
  s3 -> s8 [70, 70] { R9914 += 1, R9850 += 1, R6564 += 1 };
  s3 -> s3 [71, 75] { R9914 += 1, R9850 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s3 [71, 65535] { R9914 += 1, R9850 += 1, R6564 += 1 };
  s3 -> s3 [79, 65535] { R9914 += 1, R9850 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s1 [0, 69] { R9914 += 1, R9850 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s2 [0, 69] { R9914 += 1, R9850 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s3 [0, 69] { R9914 += 1, R9850 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s4 [0, 65535] { R9914 += 1, R9849 += 1, R9850 += 1 };
  s4 -> s5 [70, 70] { R9914 += 1, R9850 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s6 [70, 70] { R9914 += 1, R9850 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s7 [70, 70] { R9914 += 1, R9850 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s8 [70, 70] { R9914 += 1, R9850 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s9 [70, 70] { R9914 += 1, R9850 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s10 [70, 70] { R9914 += 1, R9850 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s3 [71, 75] { R9914 += 1, R9850 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s1 [71, 65535] { R9914 += 1, R9850 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s2 [71, 65535] { R9914 += 1, R9850 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s3 [79, 65535] { R9914 += 1, R9850 += 1, R6564 += 1, R6566 += 1 };
  s6 -> s6 [0, 75] { R9914 += 1, R9850 += 1, R6564 += 1, R6566 += 1 };
  s6 -> s6 [0, 65535] { R9914 += 1, R9850 += 1, R6564 += 1 };
  s6 -> s12 [0, 65535] { R9914 += 1 };
  s6 -> s11 [0, 65535];
  s6 -> s6 [79, 65535] { R9914 += 1, R9850 += 1, R6564 += 1, R6566 += 1 };
  s7 -> s6 [0, 75] { R9914 += 1, R9850 += 1, R6564 += 1, R6566 += 1 };
  s7 -> s7 [0, 65535] { R9914 += 1, R9850 += 1, R6563 += 1, R6564 += 1 };
  s7 -> s9 [0, 65535] { R9914 += 1, R9850 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s7 -> s6 [79, 65535] { R9914 += 1, R9850 += 1, R6564 += 1, R6566 += 1 };
  s8 -> s8 [0, 65535] { R9914 += 1 };
  s8 -> s11 [0, 65535];
  s9 -> s6 [0, 75] { R9914 += 1, R9850 += 1, R6564 += 1, R6566 += 1 };
  s9 -> s9 [0, 65535] { R9914 += 1, R9850 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s9 -> s6 [79, 65535] { R9914 += 1, R9850 += 1, R6564 += 1, R6566 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R9914 += 1 };
  s12 -> s11 [0, 65535];
  accepting s3, s12, s8, s6, s11;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R9916 += 1, R9852 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s0 -> s2 [0, 69] { R9916 += 1, R9852 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s0 -> s3 [0, 69] { R9916 += 1, R9852 += 1, R9119 += 1, R9120 += 1 };
  s0 -> s4 [0, 65535] { R9916 += 1, R9851 += 1, R9852 += 1 };
  s0 -> s0 [0, 65535] { R9915 += 1, R9916 += 1 };
  s0 -> s5 [70, 70] { R9916 += 1, R9852 += 1, R9119 += 1, R9120 += 1 };
  s0 -> s6 [70, 70] { R9916 += 1, R9852 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s0 -> s7 [70, 70] { R9916 += 1, R9852 += 1, R9119 += 1, R9120 += 1 };
  s0 -> s8 [70, 70] { R9916 += 1, R9852 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s0 -> s9 [70, 70] { R9916 += 1, R9852 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s0 -> s10 [70, 70] { R9916 += 1, R9852 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s0 -> s1 [71, 65535] { R9916 += 1, R9852 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s0 -> s2 [71, 65535] { R9916 += 1, R9852 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s0 -> s3 [71, 65535] { R9916 += 1, R9852 += 1, R9119 += 1, R9120 += 1 };
  s1 -> s17 [0, 69] { R9916 += 1, R9852 += 1, R9120 += 1 };
  s1 -> s1 [0, 69] { R9916 += 1, R9852 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s1 -> s15 [0, 69] { R9916 += 1, R9852 += 1 };
  s1 -> s14 [70, 70] { R9916 += 1, R9852 += 1, R9120 += 1 };
  s1 -> s6 [70, 70] { R9916 += 1, R9852 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s1 -> s16 [70, 70] { R9916 += 1, R9852 += 1 };
  s1 -> s11 [70, 70] { R9916 += 1, R9852 += 1 };
  s1 -> s18 [70, 70] { R9916 += 1, R9852 += 1, R9120 += 1 };
  s1 -> s9 [70, 70] { R9916 += 1, R9852 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s1 -> s17 [71, 65535] { R9916 += 1, R9852 += 1, R9120 += 1 };
  s1 -> s1 [71, 65535] { R9916 += 1, R9852 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s1 -> s15 [71, 65535] { R9916 += 1, R9852 += 1 };
  s2 -> s1 [0, 69] { R9916 += 1, R9852 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s2 -> s15 [0, 69] { R9916 += 1, R9852 += 1 };
  s2 -> s2 [0, 69] { R9916 += 1, R9852 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s2 -> s6 [70, 70] { R9916 += 1, R9852 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s2 -> s16 [70, 70] { R9916 += 1, R9852 += 1 };
  s2 -> s11 [70, 70] { R9916 += 1, R9852 += 1 };
  s2 -> s8 [70, 70] { R9916 += 1, R9852 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s2 -> s9 [70, 70] { R9916 += 1, R9852 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s2 -> s10 [70, 70] { R9916 += 1, R9852 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s2 -> s1 [71, 65535] { R9916 += 1, R9852 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s2 -> s15 [71, 65535] { R9916 += 1, R9852 += 1 };
  s2 -> s2 [71, 65535] { R9916 += 1, R9852 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s3 -> s1 [0, 69] { R9916 += 1, R9852 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s3 -> s2 [0, 69] { R9916 += 1, R9852 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s3 -> s3 [0, 69] { R9916 += 1, R9852 += 1, R9119 += 1, R9120 += 1 };
  s3 -> s5 [70, 70] { R9916 += 1, R9852 += 1, R9119 += 1, R9120 += 1 };
  s3 -> s6 [70, 70] { R9916 += 1, R9852 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s3 -> s7 [70, 70] { R9916 += 1, R9852 += 1, R9119 += 1, R9120 += 1 };
  s3 -> s8 [70, 70] { R9916 += 1, R9852 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s3 -> s9 [70, 70] { R9916 += 1, R9852 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s3 -> s10 [70, 70] { R9916 += 1, R9852 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s3 -> s1 [71, 65535] { R9916 += 1, R9852 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s3 -> s2 [71, 65535] { R9916 += 1, R9852 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s3 -> s3 [71, 65535] { R9916 += 1, R9852 += 1, R9119 += 1, R9120 += 1 };
  s4 -> s1 [0, 69] { R9916 += 1, R9852 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s4 -> s2 [0, 69] { R9916 += 1, R9852 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s4 -> s3 [0, 69] { R9916 += 1, R9852 += 1, R9119 += 1, R9120 += 1 };
  s4 -> s4 [0, 65535] { R9916 += 1, R9851 += 1, R9852 += 1 };
  s4 -> s5 [70, 70] { R9916 += 1, R9852 += 1, R9119 += 1, R9120 += 1 };
  s4 -> s6 [70, 70] { R9916 += 1, R9852 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s4 -> s7 [70, 70] { R9916 += 1, R9852 += 1, R9119 += 1, R9120 += 1 };
  s4 -> s8 [70, 70] { R9916 += 1, R9852 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s4 -> s9 [70, 70] { R9916 += 1, R9852 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s4 -> s10 [70, 70] { R9916 += 1, R9852 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s4 -> s1 [71, 65535] { R9916 += 1, R9852 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s4 -> s2 [71, 65535] { R9916 += 1, R9852 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s4 -> s3 [71, 65535] { R9916 += 1, R9852 += 1, R9119 += 1, R9120 += 1 };
  s6 -> s14 [0, 65535] { R9916 += 1, R9852 += 1, R9120 += 1 };
  s6 -> s6 [0, 65535] { R9916 += 1, R9852 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s6 -> s11 [0, 65535] { R9916 += 1, R9852 += 1 };
  s7 -> s6 [0, 65535] { R9916 += 1, R9852 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s7 -> s7 [0, 65535] { R9916 += 1, R9852 += 1, R9119 += 1, R9120 += 1 };
  s7 -> s8 [0, 65535] { R9916 += 1, R9852 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s8 -> s6 [0, 65535] { R9916 += 1, R9852 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s8 -> s11 [0, 65535] { R9916 += 1, R9852 += 1 };
  s8 -> s8 [0, 65535] { R9916 += 1, R9852 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s11 -> s12 [0, 65535] { R9916 += 1 };
  s11 -> s11 [0, 65535] { R9916 += 1, R9852 += 1 };
  s11 -> s13 [0, 65535];
  s12 -> s12 [0, 65535] { R9916 += 1 };
  s12 -> s13 [0, 65535];
  s13 -> s13 [0, 65535];
  s14 -> s14 [0, 65535] { R9916 += 1, R9852 += 1, R9120 += 1 };
  s14 -> s11 [0, 65535] { R9916 += 1, R9852 += 1 };
  s15 -> s15 [0, 69] { R9916 += 1, R9852 += 1 };
  s15 -> s15 [0, 65535] { R9916 += 1 };
  s15 -> s13 [0, 65535];
  s15 -> s16 [70, 70] { R9916 += 1, R9852 += 1 };
  s15 -> s11 [70, 70] { R9916 += 1, R9852 += 1 };
  s15 -> s15 [71, 65535] { R9916 += 1, R9852 += 1 };
  s16 -> s16 [0, 65535] { R9916 += 1 };
  s16 -> s13 [0, 65535];
  s17 -> s17 [0, 69] { R9916 += 1, R9852 += 1, R9120 += 1 };
  s17 -> s15 [0, 69] { R9916 += 1, R9852 += 1 };
  s17 -> s14 [70, 70] { R9916 += 1, R9852 += 1, R9120 += 1 };
  s17 -> s16 [70, 70] { R9916 += 1, R9852 += 1 };
  s17 -> s11 [70, 70] { R9916 += 1, R9852 += 1 };
  s17 -> s18 [70, 70] { R9916 += 1, R9852 += 1, R9120 += 1 };
  s17 -> s17 [71, 65535] { R9916 += 1, R9852 += 1, R9120 += 1 };
  s17 -> s15 [71, 65535] { R9916 += 1, R9852 += 1 };
  accepting s16, s12, s13, s15, s11;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s0 -> s2 [0, 69] { R9918 += 1, R9854 += 1, R9761 += 1, R9762 += 1 };
  s0 -> s3 [0, 69] { R9918 += 1, R9854 += 1, R9762 += 1, R9763 += 1, R9764 += 1 };
  s0 -> s0 [0, 65535] { R9917 += 1, R9918 += 1 };
  s0 -> s4 [0, 65535] { R9918 += 1, R9853 += 1, R9854 += 1 };
  s0 -> s5 [70, 70] { R9918 += 1, R9854 += 1, R9762 += 1, R9763 += 1, R9764 += 1 };
  s0 -> s6 [70, 70] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s0 -> s7 [70, 70] { R9918 += 1, R9854 += 1, R9761 += 1, R9762 += 1 };
  s0 -> s8 [70, 70] { R9918 += 1, R9854 += 1, R9762 += 1, R9763 += 1, R9764 += 1 };
  s0 -> s9 [70, 70] { R9918 += 1, R9854 += 1, R9761 += 1, R9762 += 1 };
  s0 -> s10 [70, 70] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s0 -> s1 [71, 74] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s0 -> s2 [71, 65535] { R9918 += 1, R9854 += 1, R9761 += 1, R9762 += 1 };
  s0 -> s3 [71, 65535] { R9918 += 1, R9854 += 1, R9762 += 1, R9763 += 1, R9764 += 1 };
  s0 -> s11 [75, 75] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s0 -> s1 [80, 65535] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s1 -> s1 [0, 69] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s1 -> s6 [70, 70] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s1 -> s10 [70, 70] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s1 -> s1 [71, 74] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s1 -> s11 [75, 75] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s1 -> s1 [80, 65535] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s2 -> s1 [0, 69] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s2 -> s2 [0, 69] { R9918 += 1, R9854 += 1, R9761 += 1, R9762 += 1 };
  s2 -> s3 [0, 69] { R9918 += 1, R9854 += 1, R9762 += 1, R9763 += 1, R9764 += 1 };
  s2 -> s5 [70, 70] { R9918 += 1, R9854 += 1, R9762 += 1, R9763 += 1, R9764 += 1 };
  s2 -> s6 [70, 70] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s2 -> s7 [70, 70] { R9918 += 1, R9854 += 1, R9761 += 1, R9762 += 1 };
  s2 -> s8 [70, 70] { R9918 += 1, R9854 += 1, R9762 += 1, R9763 += 1, R9764 += 1 };
  s2 -> s9 [70, 70] { R9918 += 1, R9854 += 1, R9761 += 1, R9762 += 1 };
  s2 -> s10 [70, 70] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s2 -> s1 [71, 74] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s2 -> s2 [71, 65535] { R9918 += 1, R9854 += 1, R9761 += 1, R9762 += 1 };
  s2 -> s3 [71, 65535] { R9918 += 1, R9854 += 1, R9762 += 1, R9763 += 1, R9764 += 1 };
  s2 -> s11 [75, 75] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s2 -> s1 [80, 65535] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s3 -> s1 [0, 69] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s3 -> s3 [0, 69] { R9918 += 1, R9854 += 1, R9762 += 1, R9763 += 1, R9764 += 1 };
  s3 -> s5 [70, 70] { R9918 += 1, R9854 += 1, R9762 += 1, R9763 += 1, R9764 += 1 };
  s3 -> s6 [70, 70] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s3 -> s8 [70, 70] { R9918 += 1, R9854 += 1, R9762 += 1, R9763 += 1, R9764 += 1 };
  s3 -> s10 [70, 70] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s3 -> s1 [71, 74] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s3 -> s3 [71, 65535] { R9918 += 1, R9854 += 1, R9762 += 1, R9763 += 1, R9764 += 1 };
  s3 -> s11 [75, 75] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s3 -> s1 [80, 65535] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s4 -> s1 [0, 69] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s4 -> s2 [0, 69] { R9918 += 1, R9854 += 1, R9761 += 1, R9762 += 1 };
  s4 -> s3 [0, 69] { R9918 += 1, R9854 += 1, R9762 += 1, R9763 += 1, R9764 += 1 };
  s4 -> s4 [0, 65535] { R9918 += 1, R9853 += 1, R9854 += 1 };
  s4 -> s5 [70, 70] { R9918 += 1, R9854 += 1, R9762 += 1, R9763 += 1, R9764 += 1 };
  s4 -> s6 [70, 70] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s4 -> s7 [70, 70] { R9918 += 1, R9854 += 1, R9761 += 1, R9762 += 1 };
  s4 -> s8 [70, 70] { R9918 += 1, R9854 += 1, R9762 += 1, R9763 += 1, R9764 += 1 };
  s4 -> s9 [70, 70] { R9918 += 1, R9854 += 1, R9761 += 1, R9762 += 1 };
  s4 -> s10 [70, 70] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s4 -> s1 [71, 74] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s4 -> s2 [71, 65535] { R9918 += 1, R9854 += 1, R9761 += 1, R9762 += 1 };
  s4 -> s3 [71, 65535] { R9918 += 1, R9854 += 1, R9762 += 1, R9763 += 1, R9764 += 1 };
  s4 -> s11 [75, 75] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s4 -> s1 [80, 65535] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s6 -> s6 [0, 74] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s6 -> s13 [75, 75] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s6 -> s6 [80, 65535] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s7 -> s6 [0, 74] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s7 -> s7 [0, 65535] { R9918 += 1, R9854 += 1, R9761 += 1, R9762 += 1 };
  s7 -> s8 [0, 65535] { R9918 += 1, R9854 += 1, R9762 += 1, R9763 += 1, R9764 += 1 };
  s7 -> s13 [75, 75] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s7 -> s6 [80, 65535] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s8 -> s6 [0, 74] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s8 -> s8 [0, 65535] { R9918 += 1, R9854 += 1, R9762 += 1, R9763 += 1, R9764 += 1 };
  s8 -> s13 [75, 75] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s8 -> s6 [80, 65535] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s11 -> s11 [0, 69] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s11 -> s11 [0, 65535] { R9918 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [70, 70] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s11 -> s14 [70, 70] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s11 -> s11 [71, 75] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s11 -> s11 [80, 65535] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s13 [0, 75] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s13 -> s13 [0, 65535] { R9918 += 1 };
  s13 -> s12 [0, 65535];
  s13 -> s13 [80, 65535] { R9918 += 1, R9854 += 1, R9762 += 1, R9764 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R9918 += 1 };
  accepting s11, s12, s13, s14;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R9798 && R3 = R9918 && R25 - R9918 = -1 && R26 = R9918 && R27 - R9918 = -1 && R28 = R9918 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R9766 + -1*R9762 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R9766 + -1*R9762 - R130 = 0 && R129 + R9765 + R9761 = 0 && R131 + R9767 + R9763 = 0 && R132 + R9768 + R9764 = 0 && R9797 = 0 && R9829 = 0 && R9830 = 0 && R9839 = 0 && R9840 = 0 && R9849 = 0 && R9850 = 0 && R9851 = 0 && R9852 = 0 && R9853 = 0 && R9854 = 0 && R9855 = 0 && R9856 = R9918 && R9857 = 0 && R9858 = R9918 && R9859 = 0 && R9860 = R9918 && R9861 = 0 && R9862 = R9918 && R9863 = 0 && R9864 = R9918 && R9865 = 0 && R9866 = R9918 && R9867 = 0 && R9868 = R9918 && R9869 = 0 && R9870 = R9918 && R9871 = 0 && R9872 = R9918 && R9873 = 0 && R9874 = R9918 && R9875 = 0 && R9876 = R9918 && R9877 = 0 && R9878 = R9918 && R9879 = 0 && R9880 = R9918 && R9881 = 0 && R9882 = R9918 && R9883 = 0 && R9884 = R9918 && R9885 = 0 && R9886 = R9918 && R9887 = 0 && R9888 = R9918 && R9889 = 0 && R9890 = R9918 && R9891 = 0 && R9892 = R9918 && R9893 = 0 && R9894 = R9918 && R9895 = 0 && R9896 = R9918 && R9897 = 0 && R9898 = R9918 && R9899 = 0 && R9900 = R9918 && R9901 = 0 && R9902 = R9918 && R9903 = 0 && R9904 = R9918 && R9905 = 0 && R9906 = R9918 && R9907 = 0 && R9908 = R9918 && R9909 = 0 && R9910 = R9918 && R9911 = 0 && R9912 = R9918 && R9913 = 0 && R9914 = R9918 && R9915 = 0 && R9916 = R9918 && R9917 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R9766 + -1*R9762 - R130 < 1 && -1 < R9798 && 0 < R9918 && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R9766 + -1*R9762 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R6569 + R6565 = 0 && R114 + R6570 + R6566 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R9766 + -1*R9762 - R130 = 0 || R130 + R9766 + R9762 < 1) && (R81 + R158 + R155 = 0 || R130 + R9766 + R9762 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R9766 + -1*R9762 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R9766 + R9762 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R9766 + -1*R9762 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R9766 + R9762 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R9766 + -1*R9762 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R9766 + R9762 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R6567 + R6563 != 0 || R112 + R6568 + R6564 + -1*R9766 + -1*R9762 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R9766 + R9762 = 0)) && (R113 + R6569 + R6565 != 0 || R83 + R160 + R157 + -1*R6570 + -1*R6566 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R9124 + R9119 != 0 || R120 + R9125 + R9120 + -1*R9766 + -1*R9762 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R9766 + R9762 = 0)) && (R9769 != 0 || R9770 = R9798 || (R22 = 0 && R9798 = 0)) && (R9771 != 0 || R9772 = R9798 || (R22 = 0 && R9798 = 0)) && (R9773 != 0 || R9774 = R9798 || (R22 = 0 && R9798 = 0)) && (R9775 != 0 || R9776 = R9798 || (R22 = 0 && R9798 = 0)) && (R9777 != 0 || R9778 = R9798 || (R22 = 0 && R9798 = 0)) && (R9779 != 0 || R9780 = R9798 || (R22 = 0 && R9798 = 0)) && (R9781 != 0 || R9782 = R9798 || (R22 = 0 && R9798 = 0)) && (R9783 != 0 || R9784 = R9798 || (R22 = 0 && R9798 = 0)) && (R9785 != 0 || R9786 = R9798 || (R22 = 0 && R9798 = 0)) && (R9787 != 0 || R9788 = R9798 || (R22 = 0 && R9798 = 0)) && (R9789 != 0 || R9790 = R9798 || (R22 = 0 && R9798 = 0)) && (R9791 != 0 || R9792 = R9798 || (R22 = 0 && R9798 = 0)) && (R9793 != 0 || R9794 = R9798 || (R22 = 0 && R9798 = 0)) && (R9795 != 0 || R9796 = R9798 || (R22 = 0 && R9798 = 0)) && (R23 = 0 || (R9827 = 0 && R9828 = 0)) && (R23 = 0 || (R9831 = 0 && R9832 = 0)) && (R23 = 0 || (R9833 = 0 && R9834 = 0)) && (R23 = 0 || (R9835 = 0 && R9836 = 0)) && (R23 = 0 || (R9837 = 0 && R9838 = 0)) && (R23 = 0 || (R9841 = 0 && R9842 = 0)) && (R23 = 0 || (R9843 = 0 && R9844 = 0)) && (R23 = 0 || (R9845 = 0 && R9846 = 0)) && (R23 = 0 || (R9847 = 0 && R9848 = 0)) && (R24 = 0 || (R9799 = 0 && R9800 = 0)) && (R24 = 0 || (R9801 = 0 && R9802 = 0)) && (R24 = 0 || (R9803 = 0 && R9804 = 0)) && (R24 = 0 || (R9805 = 0 && R9806 = 0)) && (R24 = 0 || (R9807 = 0 && R9808 = 0)) && (R24 = 0 || (R9809 = 0 && R9810 = 0)) && (R24 = 0 || (R9811 = 0 && R9812 = 0)) && (R24 = 0 || (R9813 = 0 && R9814 = 0)) && (R24 = 0 || (R9815 = 0 && R9816 = 0)) && (R24 = 0 || (R9817 = 0 && R9818 = 0)) && (R24 = 0 || (R9819 = 0 && R9820 = 0)) && (R24 = 0 || (R9821 = 0 && R9822 = 0)) && (R24 = 0 || (R9823 = 0 && R9824 = 0)) && (R24 = 0 || (R9825 = 0 && R9826 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R9766 + R9762 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R9766 + R9762 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R9766 + R9762 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R6567 + R6563 = 0 || (R83 + R160 + R157 = 0 && R130 + R9766 + R9762 = 0)) && (R113 + R6569 + R6565 = 0 || R83 + R160 + R157 < 1) && (R119 + R9124 + R9119 = 0 || (R83 + R160 + R157 = 0 && R130 + R9766 + R9762 = 0)) && (R123 + R9128 + R9123 = 0 || (R121 + R9126 + R9121 = 0 && R122 + R9127 + R9122 = 0)) && (R9769 = 0 || (R22 = 0 && R9798 = 0)) && (R9771 = 0 || (R22 = 0 && R9798 = 0)) && (R9773 = 0 || (R22 = 0 && R9798 = 0)) && (R9775 = 0 || (R22 = 0 && R9798 = 0)) && (R9777 = 0 || (R22 = 0 && R9798 = 0)) && (R9779 = 0 || (R22 = 0 && R9798 = 0)) && (R9781 = 0 || (R22 = 0 && R9798 = 0)) && (R9783 = 0 || (R22 = 0 && R9798 = 0)) && (R9785 = 0 || (R22 = 0 && R9798 = 0)) && (R9787 = 0 || (R22 = 0 && R9798 = 0)) && (R9789 = 0 || (R22 = 0 && R9798 = 0)) && (R9791 = 0 || (R22 = 0 && R9798 = 0)) && (R9793 = 0 || (R22 = 0 && R9798 = 0)) && (R9795 = 0 || (R22 = 0 && R9798 = 0));
// End of Parikh automata intersection problem
