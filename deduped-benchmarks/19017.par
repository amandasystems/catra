// Parikh automata intersection problem, generated by OSTRICH+
counter int R10000, R10001, R10002, R10003, R10004, R10005, R10006, R10007, R10008, R10009, R10010, R10011, R10012, R10013, R10014, R10015, R10016, R10017, R10018, R10019, R10020, R10021, R10022, R10023, R10024, R10025, R10026, R10027, R10028, R10029, R10030, R10031, R10032, R10033, R10034, R10035, R10036, R10037, R10038, R10039, R10040, R10041, R10042, R10043, R10044, R10045, R10046, R10047, R10048, R10049, R10050, R10051, R10052, R10053, R10054, R10055, R10056, R10057, R10058, R10059, R10060, R10061, R10062, R10063, R10064, R10065, R10066, R10067, R10068, R10069, R10070, R10071, R10072, R10073, R10074, R10075, R10076, R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R2, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R5, R63, R65, R6563, R6564, R6565, R6566, R6567, R6568, R6569, R6570, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R9119, R9120, R9121, R9122, R9123, R9124, R9125, R9126, R9127, R9128, R93, R94, R95, R96, R9919, R9920, R9921, R9922, R9923, R9924, R9925, R9926, R9927, R9928, R9929, R9930, R9931, R9932, R9933, R9934, R9935, R9936, R9937, R9938, R9939, R9940, R9941, R9942, R9943, R9944, R9945, R9946, R9947, R9948, R9949, R9950, R9951, R9952, R9953, R9954, R9955, R9956, R9957, R9958, R9959, R9960, R9961, R9962, R9963, R9964, R9965, R9966, R9967, R9968, R9969, R9970, R9971, R9972, R9973, R9974, R9975, R9976, R9977, R9978, R9979, R9980, R9981, R9982, R9983, R9984, R9985, R9986, R9987, R9988, R9989, R9990, R9991, R9992, R9993, R9994, R9995, R9996, R9997, R9998, R9999;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R26 += 1 };
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R9957 += 1, R9958 += 1 };
  s0 -> s1 [0, 65535] { R9958 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R9958 += 1, R24 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R9960 += 1 };
  s0 -> s0 [0, 65535] { R9959 += 1, R9960 += 1 };
  s0 -> s2 [70, 70] { R9960 += 1 };
  s0 -> s3 [70, 70] { R9960 += 1 };
  s0 -> s1 [76, 65535] { R9960 += 1 };
  s1 -> s1 [0, 69] { R9960 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9960 += 1 };
  s1 -> s3 [70, 70] { R9960 += 1 };
  s1 -> s1 [76, 65535] { R9960 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R9960 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R9960 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R9962 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R9961 += 1, R9962 += 1 };
  s0 -> s2 [70, 70] { R9962 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R9962 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R9962 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R9962 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9962 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R9962 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R9962 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R9962 += 1, R63 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R9964 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R9963 += 1, R9964 += 1 };
  s0 -> s2 [70, 70] { R9964 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R9964 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R9964 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R9964 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9964 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R9964 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R9964 += 1, R65 += 1 };
  s2 -> s2 [0, 65535] { R9964 += 1, R65 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R9966 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R9965 += 1, R9966 += 1 };
  s0 -> s2 [70, 70] { R9966 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R9966 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R9966 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R9966 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9966 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R9966 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R9966 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R9966 += 1, R67 += 1, R68 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R9968 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R9967 += 1, R9968 += 1 };
  s0 -> s2 [70, 70] { R9968 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R9968 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R9968 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R9968 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9968 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R9968 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R9968 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R9968 += 1, R73 += 1, R74 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R9970 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R9969 += 1, R9970 += 1 };
  s0 -> s2 [70, 70] { R9970 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R9970 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R9970 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R9970 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9970 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R9970 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R9970 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R9970 += 1, R77 += 1, R78 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R9972 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R9971 += 1, R9972 += 1 };
  s0 -> s2 [70, 70] { R9972 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R9972 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R9972 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R9972 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9972 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R9972 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R9972 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535] { R9972 += 1, R81 += 1, R82 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R9974 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R9973 += 1, R9974 += 1 };
  s0 -> s2 [70, 70] { R9974 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R9974 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R9974 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R9974 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9974 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R9974 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R9974 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R9974 += 1, R87 += 1, R88 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R9976 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R9975 += 1, R9976 += 1 };
  s0 -> s2 [70, 70] { R9976 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R9976 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R9976 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R9976 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9976 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R9976 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R9976 += 1, R93 += 1, R94 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R9976 += 1, R93 += 1, R94 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R9978 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R9977 += 1, R9978 += 1 };
  s0 -> s2 [70, 70] { R9978 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R9978 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R9978 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R9978 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9978 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R9978 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R9978 += 1, R101 += 1, R102 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R9978 += 1, R101 += 1, R102 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R9980 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R9979 += 1, R9980 += 1 };
  s0 -> s2 [70, 70] { R9980 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R9980 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R9980 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R9980 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9980 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R9980 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R9980 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R9980 += 1, R111 += 1, R112 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R9982 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R9981 += 1, R9982 += 1 };
  s0 -> s2 [70, 70] { R9982 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R9982 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R9982 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R9982 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9982 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R9982 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R9982 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535] { R9982 += 1, R119 += 1, R120 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R9984 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R9983 += 1, R9984 += 1 };
  s0 -> s2 [70, 70] { R9984 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R9984 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R9984 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R9984 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9984 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R9984 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R9984 += 1, R129 += 1, R130 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R9984 += 1, R129 += 1, R130 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R10014 += 1 };
  s0 -> s0 [0, 65535] { R10013 += 1, R10014 += 1 };
  s0 -> s2 [70, 70] { R10014 += 1 };
  s0 -> s1 [71, 65535] { R10014 += 1 };
  s1 -> s1 [0, 69] { R10014 += 1 };
  s1 -> s2 [70, 70] { R10014 += 1 };
  s1 -> s1 [71, 65535] { R10014 += 1 };
  s2 -> s2 [0, 65535] { R10014 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R10015 += 1, R10016 += 1 };
  s0 -> s1 [0, 65535] { R10016 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R10016 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R10018 += 1 };
  s0 -> s2 [0, 65535] { R10018 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R10017 += 1, R10018 += 1 };
  s0 -> s3 [70, 70] { R10018 += 1 };
  s0 -> s1 [71, 65535] { R10018 += 1 };
  s1 -> s1 [0, 69] { R10018 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R10018 += 1 };
  s1 -> s1 [71, 65535] { R10018 += 1 };
  s2 -> s1 [0, 69] { R10018 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R10018 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R10018 += 1 };
  s2 -> s1 [71, 65535] { R10018 += 1 };
  s3 -> s3 [0, 65535] { R10018 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R10020 += 1, R9928 += 1 };
  s0 -> s0 [0, 65535] { R10019 += 1, R10020 += 1 };
  s0 -> s2 [0, 65535] { R10020 += 1, R9927 += 1, R9928 += 1 };
  s0 -> s1 [71, 65535] { R10020 += 1, R9928 += 1 };
  s1 -> s1 [0, 69] { R10020 += 1, R9928 += 1 };
  s1 -> s1 [0, 65535] { R10020 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R10020 += 1, R9928 += 1 };
  s2 -> s1 [0, 69] { R10020 += 1, R9928 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R10020 += 1, R9927 += 1, R9928 += 1 };
  s2 -> s1 [71, 65535] { R10020 += 1, R9928 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R10021 += 1, R10022 += 1 };
  s0 -> s1 [0, 65535] { R10022 += 1, R9930 += 1, R22 += 1 };
  s0 -> s2 [0, 65535] { R10022 += 1, R9929 += 1, R9930 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R10022 += 1, R9930 += 1, R22 += 1 };
  s1 -> s4 [0, 65535] { R10022 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R10022 += 1, R9930 += 1, R22 += 1 };
  s2 -> s2 [0, 65535] { R10022 += 1, R9929 += 1, R9930 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R10022 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R10024 += 1, R9932 += 1 };
  s0 -> s0 [0, 65535] { R10023 += 1, R10024 += 1 };
  s0 -> s2 [0, 65535] { R10024 += 1, R9931 += 1, R9932 += 1 };
  s0 -> s1 [75, 65535] { R10024 += 1, R9932 += 1 };
  s1 -> s1 [0, 70] { R10024 += 1, R9932 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R10024 += 1 };
  s1 -> s1 [75, 65535] { R10024 += 1, R9932 += 1 };
  s2 -> s1 [0, 70] { R10024 += 1, R9932 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R10024 += 1, R9931 += 1, R9932 += 1 };
  s2 -> s1 [75, 65535] { R10024 += 1, R9932 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R10026 += 1, R9933 += 1, R9934 += 1 };
  s0 -> s0 [0, 65535] { R10025 += 1, R10026 += 1 };
  s0 -> s2 [0, 65535] { R10026 += 1, R9934 += 1, R138 += 1 };
  s1 -> s1 [0, 65535] { R10026 += 1, R9933 += 1, R9934 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R10026 += 1, R9934 += 1, R138 += 1 };
  s2 -> s3 [0, 65535] { R10026 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R10026 += 1, R9934 += 1, R138 += 1 };
  s3 -> s3 [0, 65535] { R10026 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R10028 += 1, R9936 += 1 };
  s0 -> s0 [0, 65535] { R10027 += 1, R10028 += 1 };
  s0 -> s2 [0, 65535] { R10028 += 1, R9936 += 1, R140 += 1 };
  s0 -> s3 [0, 65535] { R10028 += 1, R9935 += 1, R9936 += 1 };
  s0 -> s1 [76, 65535] { R10028 += 1, R9936 += 1 };
  s1 -> s1 [0, 74] { R10028 += 1, R9936 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R10028 += 1 };
  s1 -> s1 [76, 65535] { R10028 += 1, R9936 += 1 };
  s2 -> s1 [0, 74] { R10028 += 1, R9936 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R10028 += 1 };
  s2 -> s2 [0, 65535] { R10028 += 1, R9936 += 1, R140 += 1 };
  s2 -> s1 [76, 65535] { R10028 += 1, R9936 += 1 };
  s3 -> s1 [0, 74] { R10028 += 1, R9936 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R10028 += 1, R9936 += 1, R140 += 1 };
  s3 -> s3 [0, 65535] { R10028 += 1, R9935 += 1, R9936 += 1 };
  s3 -> s1 [76, 65535] { R10028 += 1, R9936 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R10028 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R10029 += 1, R10030 += 1 };
  s0 -> s1 [0, 65535] { R10030 += 1, R9938 += 1, R145 += 1, R146 += 1 };
  s0 -> s2 [0, 65535] { R10030 += 1, R9937 += 1, R9938 += 1 };
  s0 -> s3 [0, 65535] { R10030 += 1, R9938 += 1, R144 += 1, R145 += 1 };
  s1 -> s4 [0, 65535] { R10030 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R10030 += 1, R9938 += 1, R145 += 1, R146 += 1 };
  s1 -> s6 [0, 65535] { R10030 += 1, R9938 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R10030 += 1, R9938 += 1, R145 += 1, R146 += 1 };
  s2 -> s2 [0, 65535] { R10030 += 1, R9937 += 1, R9938 += 1 };
  s2 -> s3 [0, 65535] { R10030 += 1, R9938 += 1, R144 += 1, R145 += 1 };
  s3 -> s4 [0, 65535] { R10030 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R10030 += 1, R9938 += 1, R145 += 1, R146 += 1 };
  s3 -> s3 [0, 65535] { R10030 += 1, R9938 += 1, R144 += 1, R145 += 1 };
  s4 -> s4 [0, 65535] { R10030 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R10030 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10030 += 1, R9938 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R10032 += 1, R9940 += 1, R150 += 1 };
  s0 -> s2 [0, 65535] { R10032 += 1, R9939 += 1, R9940 += 1 };
  s0 -> s0 [0, 65535] { R10031 += 1, R10032 += 1 };
  s0 -> s3 [0, 65535] { R10032 += 1, R9940 += 1, R149 += 1, R150 += 1 };
  s0 -> s4 [75, 75] { R10032 += 1, R9940 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R10032 += 1, R9940 += 1, R150 += 1 };
  s0 -> s1 [80, 65535] { R10032 += 1, R9940 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R10032 += 1, R9940 += 1, R150 += 1 };
  s1 -> s1 [0, 65535] { R10032 += 1, R9940 += 1 };
  s1 -> s6 [0, 65535] { R10032 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [75, 75] { R10032 += 1, R9940 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R10032 += 1, R9940 += 1, R150 += 1 };
  s1 -> s1 [80, 65535] { R10032 += 1, R9940 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R10032 += 1, R9940 += 1, R150 += 1 };
  s2 -> s2 [0, 65535] { R10032 += 1, R9939 += 1, R9940 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s3 [0, 65535] { R10032 += 1, R9940 += 1, R149 += 1, R150 += 1 };
  s2 -> s4 [75, 75] { R10032 += 1, R9940 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R10032 += 1, R9940 += 1, R150 += 1 };
  s2 -> s1 [80, 65535] { R10032 += 1, R9940 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R10032 += 1, R9940 += 1, R150 += 1 };
  s3 -> s6 [0, 65535] { R10032 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R10032 += 1, R9940 += 1, R149 += 1, R150 += 1 };
  s3 -> s4 [75, 75] { R10032 += 1, R9940 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R10032 += 1, R9940 += 1, R150 += 1 };
  s3 -> s1 [80, 65535] { R10032 += 1, R9940 += 1, R150 += 1 };
  s4 -> s4 [0, 75] { R10032 += 1, R9940 += 1, R150 += 1 };
  s4 -> s4 [0, 65535] { R10032 += 1, R9940 += 1 };
  s4 -> s6 [0, 65535] { R10032 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [80, 65535] { R10032 += 1, R9940 += 1, R150 += 1 };
  s5 -> s6 [0, 65535] { R10032 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R10032 += 1, R9940 += 1 };
  s6 -> s6 [0, 65535] { R10032 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s0 [0, 65535] { R10033 += 1, R10034 += 1 };
  s0 -> s1 [0, 65535] { R10034 += 1, R9942 += 1 };
  s0 -> s2 [0, 65535] { R10034 += 1, R9941 += 1, R9942 += 1 };
  s0 -> s3 [0, 65535] { R10034 += 1, R9942 += 1, R154 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R10034 += 1, R9942 += 1 };
  s1 -> s5 [0, 65535] { R10034 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R10034 += 1, R9942 += 1 };
  s2 -> s2 [0, 65535] { R10034 += 1, R9941 += 1, R9942 += 1 };
  s2 -> s3 [0, 65535] { R10034 += 1, R9942 += 1, R154 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R10034 += 1, R9942 += 1 };
  s3 -> s5 [0, 65535] { R10034 += 1 };
  s3 -> s3 [0, 65535] { R10034 += 1, R9942 += 1, R154 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R10034 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s0 [0, 65535] { R10035 += 1, R10036 += 1 };
  s0 -> s1 [0, 65535] { R10036 += 1, R9944 += 1, R159 += 1, R160 += 1 };
  s0 -> s2 [0, 65535] { R10036 += 1, R9943 += 1, R9944 += 1 };
  s0 -> s3 [0, 65535] { R10036 += 1, R9944 += 1, R158 += 1, R159 += 1 };
  s1 -> s6 [0, 65535] { R10036 += 1, R9944 += 1 };
  s1 -> s4 [0, 65535] { R10036 += 1 };
  s1 -> s1 [0, 65535] { R10036 += 1, R9944 += 1, R159 += 1, R160 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R10036 += 1, R9944 += 1, R159 += 1, R160 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10036 += 1, R9943 += 1, R9944 += 1 };
  s2 -> s3 [0, 65535] { R10036 += 1, R9944 += 1, R158 += 1, R159 += 1 };
  s3 -> s4 [0, 65535] { R10036 += 1 };
  s3 -> s1 [0, 65535] { R10036 += 1, R9944 += 1, R159 += 1, R160 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R10036 += 1, R9944 += 1, R158 += 1, R159 += 1 };
  s4 -> s4 [0, 65535] { R10036 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10036 += 1, R9944 += 1 };
  s6 -> s4 [0, 65535] { R10036 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R10038 += 1, R9946 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R10038 += 1, R9945 += 1, R9946 += 1 };
  s0 -> s3 [0, 65535] { R10038 += 1, R9946 += 1, R165 += 1, R166 += 1 };
  s0 -> s0 [0, 65535] { R10037 += 1, R10038 += 1 };
  s0 -> s4 [0, 65535] { R10038 += 1, R9946 += 1, R164 += 1, R165 += 1 };
  s0 -> s1 [76, 65535] { R10038 += 1, R9946 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R10038 += 1, R9946 += 1, R165 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R10038 += 1 };
  s1 -> s1 [0, 65535] { R10038 += 1, R9946 += 1 };
  s1 -> s1 [76, 65535] { R10038 += 1, R9946 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R10038 += 1, R9946 += 1, R165 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10038 += 1, R9945 += 1, R9946 += 1 };
  s2 -> s3 [0, 65535] { R10038 += 1, R9946 += 1, R165 += 1, R166 += 1 };
  s2 -> s4 [0, 65535] { R10038 += 1, R9946 += 1, R164 += 1, R165 += 1 };
  s2 -> s1 [76, 65535] { R10038 += 1, R9946 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R10038 += 1, R9946 += 1, R165 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R10038 += 1 };
  s3 -> s7 [0, 65535] { R10038 += 1, R9946 += 1 };
  s3 -> s3 [0, 65535] { R10038 += 1, R9946 += 1, R165 += 1, R166 += 1 };
  s3 -> s1 [76, 65535] { R10038 += 1, R9946 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R10038 += 1, R9946 += 1, R165 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R10038 += 1 };
  s4 -> s3 [0, 65535] { R10038 += 1, R9946 += 1, R165 += 1, R166 += 1 };
  s4 -> s4 [0, 65535] { R10038 += 1, R9946 += 1, R164 += 1, R165 += 1 };
  s4 -> s1 [76, 65535] { R10038 += 1, R9946 += 1, R165 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10038 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R10038 += 1 };
  s7 -> s7 [0, 65535] { R10038 += 1, R9946 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R10040 += 1, R9948 += 1, R172 += 1, R174 += 1 };
  s0 -> s2 [0, 65535] { R10040 += 1, R9948 += 1, R171 += 1, R172 += 1 };
  s0 -> s0 [0, 65535] { R10039 += 1, R10040 += 1 };
  s0 -> s3 [0, 65535] { R10040 += 1, R9948 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s4 [0, 65535] { R10040 += 1, R9947 += 1, R9948 += 1 };
  s0 -> s1 [76, 65535] { R10040 += 1, R9948 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R10040 += 1, R9948 += 1, R172 += 1, R174 += 1 };
  s1 -> s6 [0, 65535] { R10040 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R10040 += 1, R9948 += 1 };
  s1 -> s1 [0, 65535] { R10040 += 1, R9948 += 1, R172 += 1 };
  s1 -> s1 [76, 65535] { R10040 += 1, R9948 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R10040 += 1, R9948 += 1, R172 += 1, R174 += 1 };
  s2 -> s6 [0, 65535] { R10040 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10040 += 1, R9948 += 1, R171 += 1, R172 += 1 };
  s2 -> s3 [0, 65535] { R10040 += 1, R9948 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s1 [76, 65535] { R10040 += 1, R9948 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R10040 += 1, R9948 += 1, R172 += 1, R174 += 1 };
  s3 -> s6 [0, 65535] { R10040 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s7 [0, 65535] { R10040 += 1, R9948 += 1 };
  s3 -> s3 [0, 65535] { R10040 += 1, R9948 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s1 [76, 65535] { R10040 += 1, R9948 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R10040 += 1, R9948 += 1, R172 += 1, R174 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R10040 += 1, R9948 += 1, R171 += 1, R172 += 1 };
  s4 -> s3 [0, 65535] { R10040 += 1, R9948 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s4 [0, 65535] { R10040 += 1, R9947 += 1, R9948 += 1 };
  s4 -> s1 [76, 65535] { R10040 += 1, R9948 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10040 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R10040 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R10040 += 1, R9948 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R10042 += 1, R9949 += 1, R9950 += 1 };
  s0 -> s0 [0, 65535] { R10041 += 1, R10042 += 1 };
  s0 -> s2 [0, 65535] { R10042 += 1, R9950 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s0 -> s3 [0, 65535] { R10042 += 1, R9950 += 1, R180 += 1, R181 += 1 };
  s0 -> s4 [0, 65535] { R10042 += 1, R9950 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s1 -> s1 [0, 65535] { R10042 += 1, R9949 += 1, R9950 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R10042 += 1, R9950 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s1 -> s3 [0, 65535] { R10042 += 1, R9950 += 1, R180 += 1, R181 += 1 };
  s1 -> s4 [0, 65535] { R10042 += 1, R9950 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R10042 += 1 };
  s2 -> s2 [0, 65535] { R10042 += 1, R9950 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s2 -> s8 [0, 65535] { R10042 += 1, R9950 += 1, R181 += 1 };
  s2 -> s7 [0, 65535] { R10042 += 1, R9950 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R10042 += 1 };
  s3 -> s2 [0, 65535] { R10042 += 1, R9950 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s3 -> s3 [0, 65535] { R10042 += 1, R9950 += 1, R180 += 1, R181 += 1 };
  s3 -> s4 [0, 65535] { R10042 += 1, R9950 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R10042 += 1 };
  s4 -> s2 [0, 65535] { R10042 += 1, R9950 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s4 -> s7 [0, 65535] { R10042 += 1, R9950 += 1 };
  s4 -> s4 [0, 65535] { R10042 += 1, R9950 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10042 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R10042 += 1 };
  s7 -> s7 [0, 65535] { R10042 += 1, R9950 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R10042 += 1 };
  s8 -> s8 [0, 65535] { R10042 += 1, R9950 += 1, R181 += 1 };
  s8 -> s7 [0, 65535] { R10042 += 1, R9950 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R10044 += 1, R9952 += 1, R6568 += 1, R6570 += 1 };
  s0 -> s0 [0, 65535] { R10043 += 1, R10044 += 1 };
  s0 -> s1 [0, 65535] { R10044 += 1, R9952 += 1, R6568 += 1 };
  s0 -> s2 [0, 65535] { R10044 += 1, R9952 += 1 };
  s0 -> s3 [0, 65535] { R10044 += 1, R9951 += 1, R9952 += 1 };
  s0 -> s1 [79, 65535] { R10044 += 1, R9952 += 1, R6568 += 1, R6570 += 1 };
  s1 -> s1 [0, 75] { R10044 += 1, R9952 += 1, R6568 += 1, R6570 += 1 };
  s1 -> s1 [0, 65535] { R10044 += 1, R9952 += 1, R6568 += 1 };
  s1 -> s2 [0, 65535] { R10044 += 1, R9952 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R10044 += 1 };
  s1 -> s1 [79, 65535] { R10044 += 1, R9952 += 1, R6568 += 1, R6570 += 1 };
  s2 -> s2 [0, 65535] { R10044 += 1, R9952 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R10044 += 1 };
  s3 -> s1 [0, 75] { R10044 += 1, R9952 += 1, R6568 += 1, R6570 += 1 };
  s3 -> s1 [0, 65535] { R10044 += 1, R9952 += 1, R6568 += 1 };
  s3 -> s2 [0, 65535] { R10044 += 1, R9952 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R10044 += 1, R9951 += 1, R9952 += 1 };
  s3 -> s1 [79, 65535] { R10044 += 1, R9952 += 1, R6568 += 1, R6570 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R10044 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R10046 += 1, R9953 += 1, R9954 += 1 };
  s0 -> s2 [0, 65535] { R10046 += 1, R9954 += 1 };
  s0 -> s0 [0, 65535] { R10045 += 1, R10046 += 1 };
  s1 -> s1 [0, 65535] { R10046 += 1, R9953 += 1, R9954 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R10046 += 1, R9954 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R10046 += 1 };
  s2 -> s2 [0, 65535] { R10046 += 1, R9954 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R10046 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 74] { R10048 += 1, R9956 += 1, R9924 += 1, R9926 += 1 };
  s0 -> s2 [0, 65535] { R10048 += 1, R9956 += 1, R9923 += 1, R9924 += 1 };
  s0 -> s0 [0, 65535] { R10047 += 1, R10048 += 1 };
  s0 -> s3 [0, 65535] { R10048 += 1, R9955 += 1, R9956 += 1 };
  s0 -> s4 [0, 65535] { R10048 += 1, R9956 += 1, R9924 += 1, R9925 += 1, R9926 += 1 };
  s0 -> s5 [75, 75] { R10048 += 1, R9956 += 1, R9924 += 1, R9926 += 1 };
  s0 -> s6 [79, 79] { R10048 += 1, R9956 += 1, R9924 += 1, R9926 += 1 };
  s0 -> s1 [80, 65535] { R10048 += 1, R9956 += 1, R9924 += 1, R9926 += 1 };
  s1 -> s1 [0, 74] { R10048 += 1, R9956 += 1, R9924 += 1, R9926 += 1 };
  s1 -> s5 [75, 75] { R10048 += 1, R9956 += 1, R9924 += 1, R9926 += 1 };
  s1 -> s6 [79, 79] { R10048 += 1, R9956 += 1, R9924 += 1, R9926 += 1 };
  s1 -> s1 [80, 65535] { R10048 += 1, R9956 += 1, R9924 += 1, R9926 += 1 };
  s2 -> s1 [0, 74] { R10048 += 1, R9956 += 1, R9924 += 1, R9926 += 1 };
  s2 -> s2 [0, 65535] { R10048 += 1, R9956 += 1, R9923 += 1, R9924 += 1 };
  s2 -> s4 [0, 65535] { R10048 += 1, R9956 += 1, R9924 += 1, R9925 += 1, R9926 += 1 };
  s2 -> s5 [75, 75] { R10048 += 1, R9956 += 1, R9924 += 1, R9926 += 1 };
  s2 -> s6 [79, 79] { R10048 += 1, R9956 += 1, R9924 += 1, R9926 += 1 };
  s2 -> s1 [80, 65535] { R10048 += 1, R9956 += 1, R9924 += 1, R9926 += 1 };
  s3 -> s1 [0, 74] { R10048 += 1, R9956 += 1, R9924 += 1, R9926 += 1 };
  s3 -> s2 [0, 65535] { R10048 += 1, R9956 += 1, R9923 += 1, R9924 += 1 };
  s3 -> s3 [0, 65535] { R10048 += 1, R9955 += 1, R9956 += 1 };
  s3 -> s4 [0, 65535] { R10048 += 1, R9956 += 1, R9924 += 1, R9925 += 1, R9926 += 1 };
  s3 -> s5 [75, 75] { R10048 += 1, R9956 += 1, R9924 += 1, R9926 += 1 };
  s3 -> s6 [79, 79] { R10048 += 1, R9956 += 1, R9924 += 1, R9926 += 1 };
  s3 -> s1 [80, 65535] { R10048 += 1, R9956 += 1, R9924 += 1, R9926 += 1 };
  s4 -> s1 [0, 74] { R10048 += 1, R9956 += 1, R9924 += 1, R9926 += 1 };
  s4 -> s4 [0, 65535] { R10048 += 1, R9956 += 1, R9924 += 1, R9925 += 1, R9926 += 1 };
  s4 -> s5 [75, 75] { R10048 += 1, R9956 += 1, R9924 += 1, R9926 += 1 };
  s4 -> s6 [79, 79] { R10048 += 1, R9956 += 1, R9924 += 1, R9926 += 1 };
  s4 -> s1 [80, 65535] { R10048 += 1, R9956 += 1, R9924 += 1, R9926 += 1 };
  s5 -> s5 [0, 75] { R10048 += 1, R9956 += 1, R9924 += 1, R9926 += 1 };
  s5 -> s11 [79, 79] { R10048 += 1, R9956 += 1, R9924 += 1, R9926 += 1 };
  s5 -> s5 [80, 65535] { R10048 += 1, R9956 += 1, R9924 += 1, R9926 += 1 };
  s6 -> s6 [0, 74] { R10048 += 1, R9956 += 1, R9924 += 1, R9926 += 1 };
  s6 -> s6 [0, 65535] { R10048 += 1, R9956 += 1, R9924 += 1 };
  s6 -> s7 [0, 65535] { R10048 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [0, 65535] { R10048 += 1, R9956 += 1 };
  s6 -> s10 [75, 75] { R10048 += 1, R9956 += 1, R9924 += 1, R9926 += 1 };
  s6 -> s11 [75, 75] { R10048 += 1, R9956 += 1, R9924 += 1, R9926 += 1 };
  s6 -> s6 [79, 65535] { R10048 += 1, R9956 += 1, R9924 += 1, R9926 += 1 };
  s7 -> s7 [0, 65535] { R10048 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s7 [0, 65535] { R10048 += 1 };
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R10048 += 1, R9956 += 1 };
  s10 -> s10 [0, 65535] { R10048 += 1, R9956 += 1, R9924 += 1 };
  s10 -> s7 [0, 65535] { R10048 += 1 };
  s10 -> s8 [0, 65535];
  s10 -> s9 [0, 65535] { R10048 += 1, R9956 += 1 };
  s11 -> s11 [0, 75] { R10048 += 1, R9956 += 1, R9924 += 1, R9926 += 1 };
  s11 -> s11 [0, 65535] { R10048 += 1, R9956 += 1, R9924 += 1 };
  s11 -> s7 [0, 65535] { R10048 += 1 };
  s11 -> s8 [0, 65535];
  s11 -> s9 [0, 65535] { R10048 += 1, R9956 += 1 };
  s11 -> s11 [79, 65535] { R10048 += 1, R9956 += 1, R9924 += 1, R9926 += 1 };
  accepting s8, s9, s6, s7, s10, s11;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65535] { R10050 += 1, R9986 += 1, R23 += 1 };
  s0 -> s2 [0, 65535] { R10050 += 1, R9985 += 1, R9986 += 1 };
  s0 -> s0 [0, 65535] { R10049 += 1, R10050 += 1 };
  s1 -> s1 [0, 65535] { R10050 += 1, R9986 += 1, R23 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R10050 += 1 };
  s2 -> s1 [0, 65535] { R10050 += 1, R9986 += 1, R23 += 1 };
  s2 -> s2 [0, 65535] { R10050 += 1, R9985 += 1, R9986 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R10050 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R10052 += 1, R9988 += 1 };
  s0 -> s0 [0, 65535] { R10051 += 1, R10052 += 1 };
  s0 -> s2 [0, 65535] { R10052 += 1, R9987 += 1, R9988 += 1 };
  s0 -> s3 [70, 70] { R10052 += 1, R9988 += 1 };
  s0 -> s4 [70, 70] { R10052 += 1, R9988 += 1 };
  s0 -> s5 [75, 75] { R10052 += 1, R9988 += 1 };
  s0 -> s1 [76, 65535] { R10052 += 1, R9988 += 1 };
  s1 -> s1 [0, 69] { R10052 += 1, R9988 += 1 };
  s1 -> s3 [70, 70] { R10052 += 1, R9988 += 1 };
  s1 -> s4 [70, 70] { R10052 += 1, R9988 += 1 };
  s1 -> s5 [75, 75] { R10052 += 1, R9988 += 1 };
  s1 -> s1 [76, 65535] { R10052 += 1, R9988 += 1 };
  s2 -> s1 [0, 69] { R10052 += 1, R9988 += 1 };
  s2 -> s2 [0, 65535] { R10052 += 1, R9987 += 1, R9988 += 1 };
  s2 -> s3 [70, 70] { R10052 += 1, R9988 += 1 };
  s2 -> s4 [70, 70] { R10052 += 1, R9988 += 1 };
  s2 -> s5 [75, 75] { R10052 += 1, R9988 += 1 };
  s2 -> s1 [76, 65535] { R10052 += 1, R9988 += 1 };
  s3 -> s3 [0, 70] { R10052 += 1, R9988 += 1 };
  s3 -> s7 [75, 75] { R10052 += 1, R9988 += 1 };
  s3 -> s3 [76, 65535] { R10052 += 1, R9988 += 1 };
  s5 -> s5 [0, 69] { R10052 += 1, R9988 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R10052 += 1 };
  s5 -> s7 [70, 70] { R10052 += 1, R9988 += 1 };
  s5 -> s8 [70, 70] { R10052 += 1, R9988 += 1 };
  s5 -> s5 [75, 65535] { R10052 += 1, R9988 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R10052 += 1, R9988 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R10052 += 1 };
  s7 -> s7 [75, 65535] { R10052 += 1, R9988 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R10052 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R10054 += 1, R9990 += 1, R137 += 1 };
  s0 -> s2 [0, 65535] { R10054 += 1, R9989 += 1, R9990 += 1 };
  s0 -> s0 [0, 65535] { R10053 += 1, R10054 += 1 };
  s0 -> s3 [70, 70] { R10054 += 1, R9990 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R10054 += 1, R9990 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R10054 += 1, R9990 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R10054 += 1, R9990 += 1, R137 += 1 };
  s1 -> s1 [0, 65535] { R10054 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R10054 += 1, R9990 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R10054 += 1, R9990 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R10054 += 1, R9990 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R10054 += 1, R9990 += 1, R137 += 1 };
  s2 -> s2 [0, 65535] { R10054 += 1, R9989 += 1, R9990 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R10054 += 1, R9990 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R10054 += 1, R9990 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R10054 += 1, R9990 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R10054 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10054 += 1, R9990 += 1, R137 += 1 };
  s4 -> s6 [0, 65535] { R10054 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10054 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R10056 += 1, R9992 += 1, R139 += 1 };
  s0 -> s0 [0, 65535] { R10055 += 1, R10056 += 1 };
  s0 -> s2 [0, 65535] { R10056 += 1, R9991 += 1, R9992 += 1 };
  s0 -> s3 [70, 70] { R10056 += 1, R9992 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R10056 += 1, R9992 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R10056 += 1, R9992 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R10056 += 1, R9992 += 1, R139 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R10056 += 1 };
  s1 -> s3 [70, 70] { R10056 += 1, R9992 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R10056 += 1, R9992 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R10056 += 1, R9992 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R10056 += 1, R9992 += 1, R139 += 1 };
  s2 -> s2 [0, 65535] { R10056 += 1, R9991 += 1, R9992 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R10056 += 1, R9992 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R10056 += 1, R9992 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R10056 += 1, R9992 += 1, R139 += 1 };
  s3 -> s3 [0, 65535] { R10056 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R10056 += 1 };
  s4 -> s4 [0, 65535] { R10056 += 1, R9992 += 1, R139 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10056 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R10058 += 1, R9994 += 1, R141 += 1, R142 += 1 };
  s0 -> s2 [0, 65535] { R10058 += 1, R9993 += 1, R9994 += 1 };
  s0 -> s0 [0, 65535] { R10057 += 1, R10058 += 1 };
  s0 -> s3 [70, 70] { R10058 += 1, R9994 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R10058 += 1, R9994 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R10058 += 1, R9994 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R10058 += 1, R9994 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 65535] { R10058 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R10058 += 1, R9994 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R10058 += 1, R9994 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R10058 += 1, R9994 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R10058 += 1, R9994 += 1, R141 += 1, R142 += 1 };
  s2 -> s2 [0, 65535] { R10058 += 1, R9993 += 1, R9994 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R10058 += 1, R9994 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R10058 += 1, R9994 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R10058 += 1, R9994 += 1, R141 += 1, R142 += 1 };
  s3 -> s3 [0, 65535] { R10058 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R10058 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R10058 += 1, R9994 += 1, R141 += 1, R142 += 1 };
  s5 -> s5 [0, 65535] { R10058 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R10060 += 1, R9996 += 1, R147 += 1, R148 += 1 };
  s0 -> s0 [0, 65535] { R10059 += 1, R10060 += 1 };
  s0 -> s2 [0, 65535] { R10060 += 1, R9995 += 1, R9996 += 1 };
  s0 -> s3 [70, 70] { R10060 += 1, R9996 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R10060 += 1, R9996 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R10060 += 1, R9996 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R10060 += 1, R9996 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 65535] { R10060 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R10060 += 1, R9996 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R10060 += 1, R9996 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R10060 += 1, R9996 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R10060 += 1, R9996 += 1, R147 += 1, R148 += 1 };
  s2 -> s2 [0, 65535] { R10060 += 1, R9995 += 1, R9996 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R10060 += 1, R9996 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R10060 += 1, R9996 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R10060 += 1, R9996 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R10060 += 1, R9996 += 1, R147 += 1, R148 += 1 };
  s3 -> s6 [0, 65535] { R10060 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10060 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10060 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R10062 += 1, R9998 += 1, R151 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R10062 += 1, R9998 += 1, R152 += 1 };
  s0 -> s0 [0, 65535] { R10061 += 1, R10062 += 1 };
  s0 -> s3 [0, 65535] { R10062 += 1, R9997 += 1, R9998 += 1 };
  s0 -> s4 [70, 70] { R10062 += 1, R9998 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R10062 += 1, R9998 += 1, R151 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R10062 += 1, R9998 += 1, R151 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R10062 += 1, R9998 += 1, R152 += 1 };
  s0 -> s2 [71, 74] { R10062 += 1, R9998 += 1, R152 += 1 };
  s0 -> s1 [71, 65535] { R10062 += 1, R9998 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R10062 += 1, R9998 += 1, R152 += 1 };
  s0 -> s2 [76, 65535] { R10062 += 1, R9998 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R10062 += 1, R9998 += 1, R151 += 1, R152 += 1 };
  s1 -> s2 [0, 69] { R10062 += 1, R9998 += 1, R152 += 1 };
  s1 -> s4 [70, 70] { R10062 += 1, R9998 += 1, R152 += 1 };
  s1 -> s5 [70, 70] { R10062 += 1, R9998 += 1, R151 += 1, R152 += 1 };
  s1 -> s6 [70, 70] { R10062 += 1, R9998 += 1, R151 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R10062 += 1, R9998 += 1, R152 += 1 };
  s1 -> s2 [71, 74] { R10062 += 1, R9998 += 1, R152 += 1 };
  s1 -> s1 [71, 65535] { R10062 += 1, R9998 += 1, R151 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R10062 += 1, R9998 += 1, R152 += 1 };
  s1 -> s2 [76, 65535] { R10062 += 1, R9998 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R10062 += 1, R9998 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R10062 += 1, R9998 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R10062 += 1, R9998 += 1, R152 += 1 };
  s2 -> s2 [71, 74] { R10062 += 1, R9998 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R10062 += 1, R9998 += 1, R152 += 1 };
  s2 -> s2 [76, 65535] { R10062 += 1, R9998 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R10062 += 1, R9998 += 1, R151 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R10062 += 1, R9998 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R10062 += 1, R9997 += 1, R9998 += 1 };
  s3 -> s4 [70, 70] { R10062 += 1, R9998 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R10062 += 1, R9998 += 1, R151 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R10062 += 1, R9998 += 1, R151 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R10062 += 1, R9998 += 1, R152 += 1 };
  s3 -> s2 [71, 74] { R10062 += 1, R9998 += 1, R152 += 1 };
  s3 -> s1 [71, 65535] { R10062 += 1, R9998 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R10062 += 1, R9998 += 1, R152 += 1 };
  s3 -> s2 [76, 65535] { R10062 += 1, R9998 += 1, R152 += 1 };
  s6 -> s7 [0, 74] { R10062 += 1, R9998 += 1, R152 += 1 };
  s6 -> s6 [0, 65535] { R10062 += 1, R9998 += 1, R151 += 1, R152 += 1 };
  s6 -> s11 [75, 75] { R10062 += 1, R9998 += 1, R152 += 1 };
  s6 -> s7 [76, 65535] { R10062 += 1, R9998 += 1, R152 += 1 };
  s7 -> s7 [0, 74] { R10062 += 1, R9998 += 1, R152 += 1 };
  s7 -> s11 [75, 75] { R10062 += 1, R9998 += 1, R152 += 1 };
  s7 -> s7 [76, 65535] { R10062 += 1, R9998 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R10062 += 1, R9998 += 1, R152 += 1 };
  s8 -> s8 [0, 65535] { R10062 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R10062 += 1, R9998 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R10062 += 1, R9998 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R10062 += 1, R9998 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R10062 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R10062 += 1 };
  s11 -> s11 [0, 65535] { R10062 += 1, R9998 += 1, R152 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R10062 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R10064 += 1, R10000 += 1, R155 += 1, R156 += 1 };
  s0 -> s2 [0, 65535] { R10064 += 1, R9999 += 1, R10000 += 1 };
  s0 -> s0 [0, 65535] { R10063 += 1, R10064 += 1 };
  s0 -> s3 [70, 70] { R10064 += 1, R10000 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R10064 += 1, R10000 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R10064 += 1, R10000 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R10064 += 1, R10000 += 1, R155 += 1, R156 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R10064 += 1 };
  s1 -> s3 [70, 70] { R10064 += 1, R10000 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R10064 += 1, R10000 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R10064 += 1, R10000 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R10064 += 1, R10000 += 1, R155 += 1, R156 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10064 += 1, R9999 += 1, R10000 += 1 };
  s2 -> s3 [70, 70] { R10064 += 1, R10000 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R10064 += 1, R10000 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R10064 += 1, R10000 += 1, R155 += 1, R156 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R10064 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R10064 += 1 };
  s4 -> s4 [0, 65535] { R10064 += 1, R10000 += 1, R155 += 1, R156 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10064 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R10066 += 1, R10002 += 1, R161 += 1, R162 += 1 };
  s0 -> s0 [0, 65535] { R10065 += 1, R10066 += 1 };
  s0 -> s2 [0, 65535] { R10066 += 1, R10001 += 1, R10002 += 1 };
  s0 -> s3 [70, 70] { R10066 += 1, R10002 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R10066 += 1, R10002 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R10066 += 1, R10002 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R10066 += 1, R10002 += 1, R161 += 1, R162 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R10066 += 1 };
  s1 -> s3 [70, 70] { R10066 += 1, R10002 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R10066 += 1, R10002 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R10066 += 1, R10002 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R10066 += 1, R10002 += 1, R161 += 1, R162 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10066 += 1, R10001 += 1, R10002 += 1 };
  s2 -> s3 [70, 70] { R10066 += 1, R10002 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R10066 += 1, R10002 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R10066 += 1, R10002 += 1, R161 += 1, R162 += 1 };
  s3 -> s3 [0, 65535] { R10066 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10066 += 1, R10002 += 1, R161 += 1, R162 += 1 };
  s4 -> s6 [0, 65535] { R10066 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10066 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R10068 += 1, R10004 += 1, R167 += 1, R168 += 1 };
  s0 -> s2 [0, 65535] { R10068 += 1, R10003 += 1, R10004 += 1 };
  s0 -> s0 [0, 65535] { R10067 += 1, R10068 += 1 };
  s0 -> s3 [70, 70] { R10068 += 1, R10004 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R10068 += 1, R10004 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R10068 += 1, R10004 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R10068 += 1, R10004 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 65535] { R10068 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R10068 += 1, R10004 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R10068 += 1, R10004 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R10068 += 1, R10004 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R10068 += 1, R10004 += 1, R167 += 1, R168 += 1 };
  s2 -> s2 [0, 65535] { R10068 += 1, R10003 += 1, R10004 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R10068 += 1, R10004 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R10068 += 1, R10004 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R10068 += 1, R10004 += 1, R167 += 1, R168 += 1 };
  s3 -> s3 [0, 65535] { R10068 += 1, R10004 += 1, R167 += 1, R168 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R10068 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10068 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10068 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R10070 += 1, R10006 += 1, R175 += 1, R176 += 1 };
  s0 -> s0 [0, 65535] { R10069 += 1, R10070 += 1 };
  s0 -> s2 [0, 65535] { R10070 += 1, R10005 += 1, R10006 += 1 };
  s0 -> s3 [70, 70] { R10070 += 1, R10006 += 1, R175 += 1, R176 += 1 };
  s0 -> s4 [70, 70] { R10070 += 1, R10006 += 1, R175 += 1, R176 += 1 };
  s0 -> s1 [71, 65535] { R10070 += 1, R10006 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [0, 69] { R10070 += 1, R10006 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [0, 65535] { R10070 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R10070 += 1, R10006 += 1, R175 += 1, R176 += 1 };
  s1 -> s4 [70, 70] { R10070 += 1, R10006 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [71, 65535] { R10070 += 1, R10006 += 1, R175 += 1, R176 += 1 };
  s2 -> s1 [0, 69] { R10070 += 1, R10006 += 1, R175 += 1, R176 += 1 };
  s2 -> s2 [0, 65535] { R10070 += 1, R10005 += 1, R10006 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R10070 += 1, R10006 += 1, R175 += 1, R176 += 1 };
  s2 -> s4 [70, 70] { R10070 += 1, R10006 += 1, R175 += 1, R176 += 1 };
  s2 -> s1 [71, 65535] { R10070 += 1, R10006 += 1, R175 += 1, R176 += 1 };
  s3 -> s3 [0, 65535] { R10070 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R10070 += 1 };
  s4 -> s4 [0, 65535] { R10070 += 1, R10006 += 1, R175 += 1, R176 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R10070 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R10072 += 1, R10008 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s2 [0, 69] { R10072 += 1, R10008 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s3 [0, 69] { R10072 += 1, R10008 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s4 [0, 65535] { R10072 += 1, R10007 += 1, R10008 += 1 };
  s0 -> s0 [0, 65535] { R10071 += 1, R10072 += 1 };
  s0 -> s5 [70, 70] { R10072 += 1, R10008 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s6 [70, 70] { R10072 += 1, R10008 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s7 [70, 70] { R10072 += 1, R10008 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s8 [70, 70] { R10072 += 1, R10008 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s9 [70, 70] { R10072 += 1, R10008 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s10 [70, 70] { R10072 += 1, R10008 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s3 [71, 75] { R10072 += 1, R10008 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s1 [71, 65535] { R10072 += 1, R10008 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s2 [71, 65535] { R10072 += 1, R10008 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s3 [79, 65535] { R10072 += 1, R10008 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s1 [0, 69] { R10072 += 1, R10008 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s1 -> s3 [0, 69] { R10072 += 1, R10008 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s5 [70, 70] { R10072 += 1, R10008 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s1 -> s7 [70, 70] { R10072 += 1, R10008 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s9 [70, 70] { R10072 += 1, R10008 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s10 [70, 70] { R10072 += 1, R10008 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s1 -> s3 [71, 75] { R10072 += 1, R10008 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s1 [71, 65535] { R10072 += 1, R10008 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s1 -> s3 [79, 65535] { R10072 += 1, R10008 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s1 [0, 69] { R10072 += 1, R10008 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s2 [0, 69] { R10072 += 1, R10008 += 1, R6563 += 1, R6564 += 1 };
  s2 -> s3 [0, 69] { R10072 += 1, R10008 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s5 [70, 70] { R10072 += 1, R10008 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s6 [70, 70] { R10072 += 1, R10008 += 1, R6563 += 1, R6564 += 1 };
  s2 -> s7 [70, 70] { R10072 += 1, R10008 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s8 [70, 70] { R10072 += 1, R10008 += 1, R6563 += 1, R6564 += 1 };
  s2 -> s9 [70, 70] { R10072 += 1, R10008 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s10 [70, 70] { R10072 += 1, R10008 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s3 [71, 75] { R10072 += 1, R10008 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s1 [71, 65535] { R10072 += 1, R10008 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s2 [71, 65535] { R10072 += 1, R10008 += 1, R6563 += 1, R6564 += 1 };
  s2 -> s3 [79, 65535] { R10072 += 1, R10008 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s3 [0, 69] { R10072 += 1, R10008 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s3 [0, 65535] { R10072 += 1 };
  s3 -> s12 [0, 65535];
  s3 -> s7 [70, 70] { R10072 += 1, R10008 += 1, R6564 += 1 };
  s3 -> s9 [70, 70] { R10072 += 1, R10008 += 1, R6564 += 1 };
  s3 -> s3 [71, 75] { R10072 += 1, R10008 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s3 [71, 65535] { R10072 += 1, R10008 += 1, R6564 += 1 };
  s3 -> s3 [79, 65535] { R10072 += 1, R10008 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s1 [0, 69] { R10072 += 1, R10008 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s2 [0, 69] { R10072 += 1, R10008 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s3 [0, 69] { R10072 += 1, R10008 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s4 [0, 65535] { R10072 += 1, R10007 += 1, R10008 += 1 };
  s4 -> s5 [70, 70] { R10072 += 1, R10008 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s6 [70, 70] { R10072 += 1, R10008 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s7 [70, 70] { R10072 += 1, R10008 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s8 [70, 70] { R10072 += 1, R10008 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s9 [70, 70] { R10072 += 1, R10008 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s10 [70, 70] { R10072 += 1, R10008 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s3 [71, 75] { R10072 += 1, R10008 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s1 [71, 65535] { R10072 += 1, R10008 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s2 [71, 65535] { R10072 += 1, R10008 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s3 [79, 65535] { R10072 += 1, R10008 += 1, R6564 += 1, R6566 += 1 };
  s5 -> s9 [0, 75] { R10072 += 1, R10008 += 1, R6564 += 1, R6566 += 1 };
  s5 -> s5 [0, 65535] { R10072 += 1, R10008 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s5 -> s9 [79, 65535] { R10072 += 1, R10008 += 1, R6564 += 1, R6566 += 1 };
  s6 -> s9 [0, 75] { R10072 += 1, R10008 += 1, R6564 += 1, R6566 += 1 };
  s6 -> s5 [0, 65535] { R10072 += 1, R10008 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s6 -> s6 [0, 65535] { R10072 += 1, R10008 += 1, R6563 += 1, R6564 += 1 };
  s6 -> s9 [79, 65535] { R10072 += 1, R10008 += 1, R6564 += 1, R6566 += 1 };
  s7 -> s7 [0, 65535] { R10072 += 1 };
  s7 -> s12 [0, 65535];
  s9 -> s9 [0, 75] { R10072 += 1, R10008 += 1, R6564 += 1, R6566 += 1 };
  s9 -> s11 [0, 65535] { R10072 += 1 };
  s9 -> s9 [0, 65535] { R10072 += 1, R10008 += 1, R6564 += 1 };
  s9 -> s12 [0, 65535];
  s9 -> s9 [79, 65535] { R10072 += 1, R10008 += 1, R6564 += 1, R6566 += 1 };
  s11 -> s11 [0, 65535] { R10072 += 1 };
  s11 -> s12 [0, 65535];
  s12 -> s12 [0, 65535];
  accepting s3, s12, s9, s7, s11;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R10074 += 1, R10010 += 1, R9119 += 1, R9120 += 1 };
  s0 -> s2 [0, 69] { R10074 += 1, R10010 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s0 -> s3 [0, 69] { R10074 += 1, R10010 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s0 -> s0 [0, 65535] { R10073 += 1, R10074 += 1 };
  s0 -> s4 [0, 65535] { R10074 += 1, R10009 += 1, R10010 += 1 };
  s0 -> s5 [70, 70] { R10074 += 1, R10010 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s0 -> s6 [70, 70] { R10074 += 1, R10010 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s0 -> s7 [70, 70] { R10074 += 1, R10010 += 1, R9119 += 1, R9120 += 1 };
  s0 -> s8 [70, 70] { R10074 += 1, R10010 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s0 -> s9 [70, 70] { R10074 += 1, R10010 += 1, R9119 += 1, R9120 += 1 };
  s0 -> s10 [70, 70] { R10074 += 1, R10010 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s0 -> s1 [71, 65535] { R10074 += 1, R10010 += 1, R9119 += 1, R9120 += 1 };
  s0 -> s2 [71, 65535] { R10074 += 1, R10010 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s0 -> s3 [71, 65535] { R10074 += 1, R10010 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s1 -> s1 [0, 69] { R10074 += 1, R10010 += 1, R9119 += 1, R9120 += 1 };
  s1 -> s2 [0, 69] { R10074 += 1, R10010 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s1 -> s3 [0, 69] { R10074 += 1, R10010 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s1 -> s5 [70, 70] { R10074 += 1, R10010 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s1 -> s6 [70, 70] { R10074 += 1, R10010 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s1 -> s7 [70, 70] { R10074 += 1, R10010 += 1, R9119 += 1, R9120 += 1 };
  s1 -> s8 [70, 70] { R10074 += 1, R10010 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s1 -> s9 [70, 70] { R10074 += 1, R10010 += 1, R9119 += 1, R9120 += 1 };
  s1 -> s10 [70, 70] { R10074 += 1, R10010 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s1 -> s1 [71, 65535] { R10074 += 1, R10010 += 1, R9119 += 1, R9120 += 1 };
  s1 -> s2 [71, 65535] { R10074 += 1, R10010 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s1 -> s3 [71, 65535] { R10074 += 1, R10010 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s2 -> s16 [0, 69] { R10074 += 1, R10010 += 1 };
  s2 -> s2 [0, 69] { R10074 += 1, R10010 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s2 -> s3 [0, 69] { R10074 += 1, R10010 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s2 -> s5 [70, 70] { R10074 += 1, R10010 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s2 -> s6 [70, 70] { R10074 += 1, R10010 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s2 -> s17 [70, 70] { R10074 += 1, R10010 += 1 };
  s2 -> s12 [70, 70] { R10074 += 1, R10010 += 1 };
  s2 -> s8 [70, 70] { R10074 += 1, R10010 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s2 -> s10 [70, 70] { R10074 += 1, R10010 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s2 -> s16 [71, 65535] { R10074 += 1, R10010 += 1 };
  s2 -> s2 [71, 65535] { R10074 += 1, R10010 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s2 -> s3 [71, 65535] { R10074 += 1, R10010 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s3 -> s15 [0, 69] { R10074 += 1, R10010 += 1, R9120 += 1 };
  s3 -> s16 [0, 69] { R10074 += 1, R10010 += 1 };
  s3 -> s3 [0, 69] { R10074 += 1, R10010 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s3 -> s6 [70, 70] { R10074 += 1, R10010 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s3 -> s17 [70, 70] { R10074 += 1, R10010 += 1 };
  s3 -> s18 [70, 70] { R10074 += 1, R10010 += 1, R9120 += 1 };
  s3 -> s11 [70, 70] { R10074 += 1, R10010 += 1, R9120 += 1 };
  s3 -> s12 [70, 70] { R10074 += 1, R10010 += 1 };
  s3 -> s8 [70, 70] { R10074 += 1, R10010 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s3 -> s15 [71, 65535] { R10074 += 1, R10010 += 1, R9120 += 1 };
  s3 -> s16 [71, 65535] { R10074 += 1, R10010 += 1 };
  s3 -> s3 [71, 65535] { R10074 += 1, R10010 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s4 -> s1 [0, 69] { R10074 += 1, R10010 += 1, R9119 += 1, R9120 += 1 };
  s4 -> s2 [0, 69] { R10074 += 1, R10010 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s4 -> s3 [0, 69] { R10074 += 1, R10010 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s4 -> s4 [0, 65535] { R10074 += 1, R10009 += 1, R10010 += 1 };
  s4 -> s5 [70, 70] { R10074 += 1, R10010 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s4 -> s6 [70, 70] { R10074 += 1, R10010 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s4 -> s7 [70, 70] { R10074 += 1, R10010 += 1, R9119 += 1, R9120 += 1 };
  s4 -> s8 [70, 70] { R10074 += 1, R10010 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s4 -> s9 [70, 70] { R10074 += 1, R10010 += 1, R9119 += 1, R9120 += 1 };
  s4 -> s10 [70, 70] { R10074 += 1, R10010 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s4 -> s1 [71, 65535] { R10074 += 1, R10010 += 1, R9119 += 1, R9120 += 1 };
  s4 -> s2 [71, 65535] { R10074 += 1, R10010 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s4 -> s3 [71, 65535] { R10074 += 1, R10010 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s5 -> s5 [0, 65535] { R10074 += 1, R10010 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s5 -> s6 [0, 65535] { R10074 += 1, R10010 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s5 -> s12 [0, 65535] { R10074 += 1, R10010 += 1 };
  s6 -> s6 [0, 65535] { R10074 += 1, R10010 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s6 -> s11 [0, 65535] { R10074 += 1, R10010 += 1, R9120 += 1 };
  s6 -> s12 [0, 65535] { R10074 += 1, R10010 += 1 };
  s7 -> s5 [0, 65535] { R10074 += 1, R10010 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s7 -> s6 [0, 65535] { R10074 += 1, R10010 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s7 -> s7 [0, 65535] { R10074 += 1, R10010 += 1, R9119 += 1, R9120 += 1 };
  s11 -> s11 [0, 65535] { R10074 += 1, R10010 += 1, R9120 += 1 };
  s11 -> s12 [0, 65535] { R10074 += 1, R10010 += 1 };
  s12 -> s12 [0, 65535] { R10074 += 1, R10010 += 1 };
  s12 -> s13 [0, 65535];
  s12 -> s14 [0, 65535] { R10074 += 1 };
  s13 -> s13 [0, 65535];
  s14 -> s13 [0, 65535];
  s14 -> s14 [0, 65535] { R10074 += 1 };
  s15 -> s15 [0, 69] { R10074 += 1, R10010 += 1, R9120 += 1 };
  s15 -> s16 [0, 69] { R10074 += 1, R10010 += 1 };
  s15 -> s17 [70, 70] { R10074 += 1, R10010 += 1 };
  s15 -> s18 [70, 70] { R10074 += 1, R10010 += 1, R9120 += 1 };
  s15 -> s11 [70, 70] { R10074 += 1, R10010 += 1, R9120 += 1 };
  s15 -> s12 [70, 70] { R10074 += 1, R10010 += 1 };
  s15 -> s15 [71, 65535] { R10074 += 1, R10010 += 1, R9120 += 1 };
  s15 -> s16 [71, 65535] { R10074 += 1, R10010 += 1 };
  s16 -> s16 [0, 69] { R10074 += 1, R10010 += 1 };
  s16 -> s16 [0, 65535] { R10074 += 1 };
  s16 -> s13 [0, 65535];
  s16 -> s17 [70, 70] { R10074 += 1, R10010 += 1 };
  s16 -> s12 [70, 70] { R10074 += 1, R10010 += 1 };
  s16 -> s16 [71, 65535] { R10074 += 1, R10010 += 1 };
  s17 -> s17 [0, 65535] { R10074 += 1 };
  s17 -> s13 [0, 65535];
  accepting s17, s16, s12, s13, s14;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R10076 += 1, R10012 += 1, R9919 += 1, R9920 += 1 };
  s0 -> s2 [0, 65535] { R10076 += 1, R10011 += 1, R10012 += 1 };
  s0 -> s0 [0, 65535] { R10075 += 1, R10076 += 1 };
  s0 -> s3 [70, 70] { R10076 += 1, R10012 += 1, R9919 += 1, R9920 += 1 };
  s0 -> s4 [70, 70] { R10076 += 1, R10012 += 1, R9919 += 1, R9920 += 1 };
  s0 -> s1 [71, 65535] { R10076 += 1, R10012 += 1, R9919 += 1, R9920 += 1 };
  s1 -> s1 [0, 69] { R10076 += 1, R10012 += 1, R9919 += 1, R9920 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R10076 += 1 };
  s1 -> s3 [70, 70] { R10076 += 1, R10012 += 1, R9919 += 1, R9920 += 1 };
  s1 -> s4 [70, 70] { R10076 += 1, R10012 += 1, R9919 += 1, R9920 += 1 };
  s1 -> s1 [71, 65535] { R10076 += 1, R10012 += 1, R9919 += 1, R9920 += 1 };
  s2 -> s1 [0, 69] { R10076 += 1, R10012 += 1, R9919 += 1, R9920 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R10076 += 1, R10011 += 1, R10012 += 1 };
  s2 -> s3 [70, 70] { R10076 += 1, R10012 += 1, R9919 += 1, R9920 += 1 };
  s2 -> s4 [70, 70] { R10076 += 1, R10012 += 1, R9919 += 1, R9920 += 1 };
  s2 -> s1 [71, 65535] { R10076 += 1, R10012 += 1, R9919 += 1, R9920 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R10076 += 1 };
  s4 -> s5 [0, 65535] { R10076 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R10076 += 1, R10012 += 1, R9919 += 1, R9920 += 1 };
  s5 -> s5 [0, 65535] { R10076 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R9956 && R3 = R10076 && R25 - R10076 = -1 && R26 = R10076 && R27 - R10076 = -1 && R28 = R10076 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R9924 + -1*R9920 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R9924 + -1*R9920 - R130 = 0 && R129 + R9923 + R9919 = 0 && R131 + R9925 + R9921 = 0 && R132 + R9926 + R9922 = 0 && R9955 = 0 && R9987 = 0 && R9988 = 0 && R9997 = 0 && R9998 = 0 && R10007 = 0 && R10008 = 0 && R10009 = 0 && R10010 = 0 && R10013 = 0 && R10014 = R10076 && R10015 = 0 && R10016 = R10076 && R10017 = 0 && R10018 = R10076 && R10019 = 0 && R10020 = R10076 && R10021 = 0 && R10022 = R10076 && R10023 = 0 && R10024 = R10076 && R10025 = 0 && R10026 = R10076 && R10027 = 0 && R10028 = R10076 && R10029 = 0 && R10030 = R10076 && R10031 = 0 && R10032 = R10076 && R10033 = 0 && R10034 = R10076 && R10035 = 0 && R10036 = R10076 && R10037 = 0 && R10038 = R10076 && R10039 = 0 && R10040 = R10076 && R10041 = 0 && R10042 = R10076 && R10043 = 0 && R10044 = R10076 && R10045 = 0 && R10046 = R10076 && R10047 = 0 && R10048 = R10076 && R10049 = 0 && R10050 = R10076 && R10051 = 0 && R10052 = R10076 && R10053 = 0 && R10054 = R10076 && R10055 = 0 && R10056 = R10076 && R10057 = 0 && R10058 = R10076 && R10059 = 0 && R10060 = R10076 && R10061 = 0 && R10062 = R10076 && R10063 = 0 && R10064 = R10076 && R10065 = 0 && R10066 = R10076 && R10067 = 0 && R10068 = R10076 && R10069 = 0 && R10070 = R10076 && R10071 = 0 && R10072 = R10076 && R10073 = 0 && R10074 = R10076 && R10075 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R9924 + -1*R9920 - R130 < 1 && -1 < R9956 && 0 < R10076 && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R9924 + -1*R9920 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R6569 + R6565 = 0 && R114 + R6570 + R6566 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R9924 + -1*R9920 - R130 = 0 || R130 + R9924 + R9920 < 1) && (R81 + R158 + R155 = 0 || R130 + R9924 + R9920 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R9924 + -1*R9920 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R9924 + R9920 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R9924 + -1*R9920 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R9924 + R9920 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R9924 + -1*R9920 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R9924 + R9920 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R6567 + R6563 != 0 || R112 + R6568 + R6564 + -1*R9924 + -1*R9920 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R9924 + R9920 = 0)) && (R113 + R6569 + R6565 != 0 || R83 + R160 + R157 + -1*R6570 + -1*R6566 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R9124 + R9119 != 0 || R120 + R9125 + R9120 + -1*R9924 + -1*R9920 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R9924 + R9920 = 0)) && (R9927 != 0 || R9928 = R9956 || (R22 = 0 && R9956 = 0)) && (R9929 != 0 || R9930 = R9956 || (R22 = 0 && R9956 = 0)) && (R9931 != 0 || R9932 = R9956 || (R22 = 0 && R9956 = 0)) && (R9933 != 0 || R9934 = R9956 || (R22 = 0 && R9956 = 0)) && (R9935 != 0 || R9936 = R9956 || (R22 = 0 && R9956 = 0)) && (R9937 != 0 || R9938 = R9956 || (R22 = 0 && R9956 = 0)) && (R9939 != 0 || R9940 = R9956 || (R22 = 0 && R9956 = 0)) && (R9941 != 0 || R9942 = R9956 || (R22 = 0 && R9956 = 0)) && (R9943 != 0 || R9944 = R9956 || (R22 = 0 && R9956 = 0)) && (R9945 != 0 || R9946 = R9956 || (R22 = 0 && R9956 = 0)) && (R9947 != 0 || R9948 = R9956 || (R22 = 0 && R9956 = 0)) && (R9949 != 0 || R9950 = R9956 || (R22 = 0 && R9956 = 0)) && (R9951 != 0 || R9952 = R9956 || (R22 = 0 && R9956 = 0)) && (R9953 != 0 || R9954 = R9956 || (R22 = 0 && R9956 = 0)) && (R23 = 0 || (R9985 = 0 && R9986 = 0)) && (R23 = 0 || (R9989 = 0 && R9990 = 0)) && (R23 = 0 || (R9991 = 0 && R9992 = 0)) && (R23 = 0 || (R9993 = 0 && R9994 = 0)) && (R23 = 0 || (R9995 = 0 && R9996 = 0)) && (R23 = 0 || (R9999 = 0 && R10000 = 0)) && (R23 = 0 || (R10001 = 0 && R10002 = 0)) && (R23 = 0 || (R10003 = 0 && R10004 = 0)) && (R23 = 0 || (R10005 = 0 && R10006 = 0)) && (R23 = 0 || (R10011 = 0 && R10012 = 0)) && (R24 = 0 || (R9957 = 0 && R9958 = 0)) && (R24 = 0 || (R9959 = 0 && R9960 = 0)) && (R24 = 0 || (R9961 = 0 && R9962 = 0)) && (R24 = 0 || (R9963 = 0 && R9964 = 0)) && (R24 = 0 || (R9965 = 0 && R9966 = 0)) && (R24 = 0 || (R9967 = 0 && R9968 = 0)) && (R24 = 0 || (R9969 = 0 && R9970 = 0)) && (R24 = 0 || (R9971 = 0 && R9972 = 0)) && (R24 = 0 || (R9973 = 0 && R9974 = 0)) && (R24 = 0 || (R9975 = 0 && R9976 = 0)) && (R24 = 0 || (R9977 = 0 && R9978 = 0)) && (R24 = 0 || (R9979 = 0 && R9980 = 0)) && (R24 = 0 || (R9981 = 0 && R9982 = 0)) && (R24 = 0 || (R9983 = 0 && R9984 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R9924 + R9920 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R9924 + R9920 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R9924 + R9920 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R6567 + R6563 = 0 || (R83 + R160 + R157 = 0 && R130 + R9924 + R9920 = 0)) && (R113 + R6569 + R6565 = 0 || R83 + R160 + R157 < 1) && (R119 + R9124 + R9119 = 0 || (R83 + R160 + R157 = 0 && R130 + R9924 + R9920 = 0)) && (R123 + R9128 + R9123 = 0 || (R121 + R9126 + R9121 = 0 && R122 + R9127 + R9122 = 0)) && (R9927 = 0 || (R22 = 0 && R9956 = 0)) && (R9929 = 0 || (R22 = 0 && R9956 = 0)) && (R9931 = 0 || (R22 = 0 && R9956 = 0)) && (R9933 = 0 || (R22 = 0 && R9956 = 0)) && (R9935 = 0 || (R22 = 0 && R9956 = 0)) && (R9937 = 0 || (R22 = 0 && R9956 = 0)) && (R9939 = 0 || (R22 = 0 && R9956 = 0)) && (R9941 = 0 || (R22 = 0 && R9956 = 0)) && (R9943 = 0 || (R22 = 0 && R9956 = 0)) && (R9945 = 0 || (R22 = 0 && R9956 = 0)) && (R9947 = 0 || (R22 = 0 && R9956 = 0)) && (R9949 = 0 || (R22 = 0 && R9956 = 0)) && (R9951 = 0 || (R22 = 0 && R9956 = 0)) && (R9953 = 0 || (R22 = 0 && R9956 = 0));
// End of Parikh automata intersection problem
