// Parikh automata intersection problem, generated by OSTRICH+
counter int R14, R17, R1897, R1898, R1899, R1900, R1901, R1902, R1903, R1904, R1905, R1906, R1907, R1908, R1909, R1910, R1911, R1912, R1913, R1914, R1915, R1916, R1917, R1918, R1919, R1920, R1921, R1922, R1923, R1924, R1925, R1926, R1927, R1928, R1929, R1930, R1931, R1932, R1933, R1934, R1935, R1936, R1937, R1938, R1939, R1940, R1941, R1942, R1943, R1944, R1945, R1946, R1947, R1948, R1949, R1950, R1951, R1952, R1953, R1954, R1955, R1956, R1957, R1958, R1959, R1960, R1961, R1962, R1963, R1964, R1965, R1966, R1967, R1968, R1969, R1970, R1971, R1972, R1973, R1974, R1975, R1976, R1977, R1978, R1979, R1980, R1981, R1982, R1983, R1984, R1985, R1986, R1987, R1988, R1989, R1990, R1991, R1992, R1993, R1994, R1995, R1996, R1997, R1998, R1999, R2, R2000, R2001, R2002, R2003, R2004, R2005, R2006, R2007, R2008, R2009, R2010, R2011, R2012, R2013, R2014, R2015, R2016, R2017, R2018, R2019, R2020, R2021, R2022, R2023, R2024, R2025, R2026, R2027, R2028, R2029, R2030, R2031, R2032, R2033, R2034, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R33, R34, R35, R36, R37, R38, R4, R5, R6, R7, R857, R858, R859, R860, R861, R862, R863, R864, R865, R866, R867, R868, R869, R870, R871, R872, R873, R874, R875, R876, R877, R878, R879, R880, R881, R882, R883, R884, R885, R886, R887, R888, R889, R890, R891, R892, R893, R894, R895, R896, R897, R898, R899, R900, R901, R902, R903, R904, R905, R906, R907, R908, R909, R910, R911, R912, R913, R914, R915, R916, R917, R918, R919, R920, R921, R922;
synchronised {  // Automata constraining P6
automaton P6_0 {
  init s0;
  s0 -> s1 [100, 100];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R17 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [12, 12] { R32 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s0 [0, 65535] { R33 += 1, R34 += 1 };
  s0 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s1 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R36 += 1 };
  s0 -> s0 [0, 65535] { R35 += 1, R36 += 1 };
  s0 -> s2 [9, 13] { R36 += 1 };
  s0 -> s1 [14, 31] { R36 += 1 };
  s0 -> s2 [32, 32] { R36 += 1 };
  s0 -> s1 [33, 65535] { R36 += 1 };
  s1 -> s1 [0, 65535] { R36 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R36 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R37 += 1, R38 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R1964 += 1 };
  s0 -> s0 [0, 65535] { R1963 += 1, R1964 += 1 };
  s0 -> s2 [68, 68] { R1964 += 1 };
  s0 -> s1 [69, 65535] { R1964 += 1 };
  s1 -> s1 [0, 64] { R1964 += 1 };
  s1 -> s2 [68, 68] { R1964 += 1 };
  s1 -> s1 [69, 65535] { R1964 += 1 };
  s2 -> s2 [0, 64] { R1964 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [68, 65535] { R1964 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R1966 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R1965 += 1, R1966 += 1 };
  s1 -> s1 [0, 65535] { R1966 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 67] { R1968 += 1 };
  s0 -> s2 [0, 65535] { R1968 += 1, R14 += 1 };
  s0 -> s0 [0, 65535] { R1967 += 1, R1968 += 1 };
  s0 -> s3 [68, 68] { R1968 += 1 };
  s0 -> s1 [69, 65535] { R1968 += 1 };
  s1 -> s1 [0, 67] { R1968 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [68, 68] { R1968 += 1 };
  s1 -> s1 [69, 65535] { R1968 += 1 };
  s2 -> s1 [0, 67] { R1968 += 1 };
  s2 -> s2 [0, 65535] { R1968 += 1, R14 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [68, 68] { R1968 += 1 };
  s2 -> s1 [69, 65535] { R1968 += 1 };
  s3 -> s3 [0, 65535] { R1968 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R1970 += 1, R24 += 1 };
  s0 -> s2 [0, 65535] { R1970 += 1, R23 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R1969 += 1, R1970 += 1 };
  s0 -> s3 [9, 13] { R1970 += 1, R24 += 1 };
  s0 -> s1 [14, 31] { R1970 += 1, R24 += 1 };
  s0 -> s3 [32, 32] { R1970 += 1, R24 += 1 };
  s0 -> s1 [33, 65535] { R1970 += 1, R24 += 1 };
  s1 -> s5 [0, 65535] { R1970 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R1970 += 1, R24 += 1 };
  s2 -> s1 [0, 8] { R1970 += 1, R24 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1970 += 1, R23 += 1, R24 += 1 };
  s2 -> s3 [9, 13] { R1970 += 1, R24 += 1 };
  s2 -> s1 [14, 31] { R1970 += 1, R24 += 1 };
  s2 -> s3 [32, 32] { R1970 += 1, R24 += 1 };
  s2 -> s1 [33, 65535] { R1970 += 1, R24 += 1 };
  s3 -> s1 [0, 65535] { R1970 += 1, R24 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1970 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 65535] { R1972 += 1, R26 += 1, R4 += 1 };
  s0 -> s2 [0, 65535] { R1972 += 1, R25 += 1, R26 += 1 };
  s0 -> s0 [0, 65535] { R1971 += 1, R1972 += 1 };
  s1 -> s4 [0, 65535] { R1972 += 1 };
  s1 -> s1 [0, 65535] { R1972 += 1, R26 += 1, R4 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R1972 += 1, R26 += 1, R4 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1972 += 1, R25 += 1, R26 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1972 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R1974 += 1, R28 += 1 };
  s0 -> s0 [0, 65535] { R1973 += 1, R1974 += 1 };
  s0 -> s2 [0, 65535] { R1974 += 1, R27 += 1, R28 += 1 };
  s0 -> s3 [9, 13] { R1974 += 1, R28 += 1 };
  s0 -> s1 [14, 31] { R1974 += 1, R28 += 1 };
  s0 -> s3 [32, 32] { R1974 += 1, R28 += 1 };
  s0 -> s1 [33, 65535] { R1974 += 1, R28 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R1974 += 1, R28 += 1 };
  s1 -> s5 [0, 65535] { R1974 += 1 };
  s2 -> s1 [0, 8] { R1974 += 1, R28 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1974 += 1, R27 += 1, R28 += 1 };
  s2 -> s3 [9, 13] { R1974 += 1, R28 += 1 };
  s2 -> s1 [14, 31] { R1974 += 1, R28 += 1 };
  s2 -> s3 [32, 32] { R1974 += 1, R28 += 1 };
  s2 -> s1 [33, 65535] { R1974 += 1, R28 += 1 };
  s3 -> s1 [0, 65535] { R1974 += 1, R28 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1974 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 65535] { R1976 += 1, R30 += 1, R5 += 1 };
  s0 -> s2 [0, 65535] { R1976 += 1, R29 += 1, R30 += 1 };
  s0 -> s0 [0, 65535] { R1975 += 1, R1976 += 1 };
  s1 -> s1 [0, 65535] { R1976 += 1, R30 += 1, R5 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R1976 += 1 };
  s2 -> s1 [0, 65535] { R1976 += 1, R30 += 1, R5 += 1 };
  s2 -> s2 [0, 65535] { R1976 += 1, R29 += 1, R30 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1976 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 67] { R1978 += 1, R1906 += 1 };
  s0 -> s0 [0, 65535] { R1977 += 1, R1978 += 1 };
  s0 -> s2 [0, 65535] { R1978 += 1, R1905 += 1, R1906 += 1 };
  s0 -> s1 [69, 65535] { R1978 += 1, R1906 += 1 };
  s1 -> s1 [0, 67] { R1978 += 1, R1906 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R1978 += 1 };
  s1 -> s1 [69, 65535] { R1978 += 1, R1906 += 1 };
  s2 -> s1 [0, 67] { R1978 += 1, R1906 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1978 += 1, R1905 += 1, R1906 += 1 };
  s2 -> s1 [69, 65535] { R1978 += 1, R1906 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 65535] { R1980 += 1, R1908 += 1, R21 += 1 };
  s0 -> s0 [0, 65535] { R1979 += 1, R1980 += 1 };
  s0 -> s2 [0, 65535] { R1980 += 1, R1907 += 1, R1908 += 1 };
  s1 -> s1 [0, 65535] { R1980 += 1, R1908 += 1, R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R1980 += 1 };
  s2 -> s1 [0, 65535] { R1980 += 1, R1908 += 1, R21 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1980 += 1, R1907 += 1, R1908 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1980 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 68] { R1982 += 1, R1910 += 1 };
  s0 -> s0 [0, 65535] { R1981 += 1, R1982 += 1 };
  s0 -> s2 [0, 65535] { R1982 += 1, R1909 += 1, R1910 += 1 };
  s0 -> s1 [85, 65535] { R1982 += 1, R1910 += 1 };
  s1 -> s1 [0, 68] { R1982 += 1, R1910 += 1 };
  s1 -> s1 [0, 65535] { R1982 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [85, 65535] { R1982 += 1, R1910 += 1 };
  s2 -> s1 [0, 68] { R1982 += 1, R1910 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1982 += 1, R1909 += 1, R1910 += 1 };
  s2 -> s1 [85, 65535] { R1982 += 1, R1910 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 65535] { R1984 += 1, R1911 += 1, R1912 += 1 };
  s0 -> s0 [0, 65535] { R1983 += 1, R1984 += 1 };
  s0 -> s2 [0, 65535] { R1984 += 1, R1912 += 1, R858 += 1 };
  s1 -> s1 [0, 65535] { R1984 += 1, R1911 += 1, R1912 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R1984 += 1, R1912 += 1, R858 += 1 };
  s2 -> s3 [0, 65535] { R1984 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1984 += 1, R1912 += 1, R858 += 1 };
  s3 -> s3 [0, 65535] { R1984 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 84] { R1986 += 1, R1914 += 1 };
  s0 -> s0 [0, 65535] { R1985 += 1, R1986 += 1 };
  s0 -> s2 [0, 65535] { R1986 += 1, R1913 += 1, R1914 += 1 };
  s0 -> s3 [0, 65535] { R1986 += 1, R1914 += 1, R860 += 1 };
  s0 -> s1 [86, 65535] { R1986 += 1, R1914 += 1 };
  s1 -> s1 [0, 84] { R1986 += 1, R1914 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R1986 += 1 };
  s1 -> s1 [86, 65535] { R1986 += 1, R1914 += 1 };
  s2 -> s1 [0, 84] { R1986 += 1, R1914 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1986 += 1, R1913 += 1, R1914 += 1 };
  s2 -> s3 [0, 65535] { R1986 += 1, R1914 += 1, R860 += 1 };
  s2 -> s1 [86, 65535] { R1986 += 1, R1914 += 1 };
  s3 -> s1 [0, 84] { R1986 += 1, R1914 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R1986 += 1 };
  s3 -> s3 [0, 65535] { R1986 += 1, R1914 += 1, R860 += 1 };
  s3 -> s1 [86, 65535] { R1986 += 1, R1914 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1986 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 65535] { R1988 += 1, R1915 += 1, R1916 += 1 };
  s0 -> s2 [0, 65535] { R1988 += 1, R1916 += 1, R865 += 1, R866 += 1 };
  s0 -> s3 [0, 65535] { R1988 += 1, R1916 += 1, R864 += 1, R865 += 1 };
  s0 -> s0 [0, 65535] { R1987 += 1, R1988 += 1 };
  s1 -> s1 [0, 65535] { R1988 += 1, R1915 += 1, R1916 += 1 };
  s1 -> s2 [0, 65535] { R1988 += 1, R1916 += 1, R865 += 1, R866 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R1988 += 1, R1916 += 1, R864 += 1, R865 += 1 };
  s2 -> s4 [0, 65535] { R1988 += 1 };
  s2 -> s6 [0, 65535] { R1988 += 1, R1916 += 1 };
  s2 -> s2 [0, 65535] { R1988 += 1, R1916 += 1, R865 += 1, R866 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R1988 += 1 };
  s3 -> s2 [0, 65535] { R1988 += 1, R1916 += 1, R865 += 1, R866 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1988 += 1, R1916 += 1, R864 += 1, R865 += 1 };
  s4 -> s4 [0, 65535] { R1988 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R1988 += 1 };
  s6 -> s6 [0, 65535] { R1988 += 1, R1916 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 84] { R1990 += 1, R1918 += 1, R870 += 1 };
  s0 -> s0 [0, 65535] { R1989 += 1, R1990 += 1 };
  s0 -> s2 [0, 65535] { R1990 += 1, R1917 += 1, R1918 += 1 };
  s0 -> s3 [0, 65535] { R1990 += 1, R1918 += 1, R869 += 1, R870 += 1 };
  s0 -> s4 [85, 85] { R1990 += 1, R1918 += 1, R870 += 1 };
  s0 -> s5 [85, 85] { R1990 += 1, R1918 += 1, R870 += 1 };
  s0 -> s1 [91, 65535] { R1990 += 1, R1918 += 1, R870 += 1 };
  s1 -> s1 [0, 84] { R1990 += 1, R1918 += 1, R870 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R1990 += 1, R1918 += 1 };
  s1 -> s7 [0, 65535] { R1990 += 1 };
  s1 -> s4 [85, 85] { R1990 += 1, R1918 += 1, R870 += 1 };
  s1 -> s5 [85, 85] { R1990 += 1, R1918 += 1, R870 += 1 };
  s1 -> s1 [91, 65535] { R1990 += 1, R1918 += 1, R870 += 1 };
  s2 -> s1 [0, 84] { R1990 += 1, R1918 += 1, R870 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R1990 += 1, R1917 += 1, R1918 += 1 };
  s2 -> s3 [0, 65535] { R1990 += 1, R1918 += 1, R869 += 1, R870 += 1 };
  s2 -> s4 [85, 85] { R1990 += 1, R1918 += 1, R870 += 1 };
  s2 -> s5 [85, 85] { R1990 += 1, R1918 += 1, R870 += 1 };
  s2 -> s1 [91, 65535] { R1990 += 1, R1918 += 1, R870 += 1 };
  s3 -> s1 [0, 84] { R1990 += 1, R1918 += 1, R870 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R1990 += 1 };
  s3 -> s3 [0, 65535] { R1990 += 1, R1918 += 1, R869 += 1, R870 += 1 };
  s3 -> s4 [85, 85] { R1990 += 1, R1918 += 1, R870 += 1 };
  s3 -> s5 [85, 85] { R1990 += 1, R1918 += 1, R870 += 1 };
  s3 -> s1 [91, 65535] { R1990 += 1, R1918 += 1, R870 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R1990 += 1, R1918 += 1 };
  s4 -> s7 [0, 65535] { R1990 += 1 };
  s5 -> s5 [0, 85] { R1990 += 1, R1918 += 1, R870 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R1990 += 1, R1918 += 1 };
  s5 -> s7 [0, 65535] { R1990 += 1 };
  s5 -> s5 [91, 65535] { R1990 += 1, R1918 += 1, R870 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R1990 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 84] { R1992 += 1, R1920 += 1, R874 += 1 };
  s0 -> s0 [0, 65535] { R1991 += 1, R1992 += 1 };
  s0 -> s2 [0, 65535] { R1992 += 1, R1920 += 1, R873 += 1, R874 += 1 };
  s0 -> s3 [0, 65535] { R1992 += 1, R1919 += 1, R1920 += 1 };
  s0 -> s4 [85, 85] { R1992 += 1, R1920 += 1, R874 += 1 };
  s0 -> s1 [86, 65535] { R1992 += 1, R1920 += 1, R874 += 1 };
  s1 -> s1 [0, 84] { R1992 += 1, R1920 += 1, R874 += 1 };
  s1 -> s4 [85, 85] { R1992 += 1, R1920 += 1, R874 += 1 };
  s1 -> s1 [86, 65535] { R1992 += 1, R1920 += 1, R874 += 1 };
  s2 -> s1 [0, 84] { R1992 += 1, R1920 += 1, R874 += 1 };
  s2 -> s2 [0, 65535] { R1992 += 1, R1920 += 1, R873 += 1, R874 += 1 };
  s2 -> s4 [85, 85] { R1992 += 1, R1920 += 1, R874 += 1 };
  s2 -> s1 [86, 65535] { R1992 += 1, R1920 += 1, R874 += 1 };
  s3 -> s1 [0, 84] { R1992 += 1, R1920 += 1, R874 += 1 };
  s3 -> s2 [0, 65535] { R1992 += 1, R1920 += 1, R873 += 1, R874 += 1 };
  s3 -> s3 [0, 65535] { R1992 += 1, R1919 += 1, R1920 += 1 };
  s3 -> s4 [85, 85] { R1992 += 1, R1920 += 1, R874 += 1 };
  s3 -> s1 [86, 65535] { R1992 += 1, R1920 += 1, R874 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1992 += 1, R1920 += 1 };
  s4 -> s4 [0, 65535] { R1992 += 1, R1920 += 1, R874 += 1 };
  s4 -> s7 [0, 65535] { R1992 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1992 += 1, R1920 += 1 };
  s6 -> s7 [0, 65535] { R1992 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R1992 += 1 };
  accepting s4, s5, s6, s7;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 65535] { R1994 += 1, R1922 += 1, R878 += 1, R879 += 1 };
  s0 -> s2 [0, 65535] { R1994 += 1, R1922 += 1, R879 += 1, R880 += 1 };
  s0 -> s3 [0, 65535] { R1994 += 1, R1921 += 1, R1922 += 1 };
  s0 -> s0 [0, 65535] { R1993 += 1, R1994 += 1 };
  s1 -> s1 [0, 65535] { R1994 += 1, R1922 += 1, R878 += 1, R879 += 1 };
  s1 -> s2 [0, 65535] { R1994 += 1, R1922 += 1, R879 += 1, R880 += 1 };
  s1 -> s6 [0, 65535] { R1994 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R1994 += 1, R1922 += 1 };
  s2 -> s2 [0, 65535] { R1994 += 1, R1922 += 1, R879 += 1, R880 += 1 };
  s2 -> s6 [0, 65535] { R1994 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R1994 += 1, R1922 += 1, R878 += 1, R879 += 1 };
  s3 -> s2 [0, 65535] { R1994 += 1, R1922 += 1, R879 += 1, R880 += 1 };
  s3 -> s3 [0, 65535] { R1994 += 1, R1921 += 1, R1922 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1994 += 1, R1922 += 1 };
  s5 -> s6 [0, 65535] { R1994 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R1994 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 84] { R1996 += 1, R1924 += 1, R885 += 1 };
  s0 -> s2 [0, 65535] { R1996 += 1, R1923 += 1, R1924 += 1 };
  s0 -> s3 [0, 65535] { R1996 += 1, R1924 += 1, R884 += 1, R885 += 1 };
  s0 -> s4 [0, 65535] { R1996 += 1, R1924 += 1, R885 += 1, R886 += 1 };
  s0 -> s0 [0, 65535] { R1995 += 1, R1996 += 1 };
  s0 -> s1 [86, 65535] { R1996 += 1, R1924 += 1, R885 += 1 };
  s1 -> s1 [0, 84] { R1996 += 1, R1924 += 1, R885 += 1 };
  s1 -> s5 [0, 65535] { R1996 += 1 };
  s1 -> s1 [0, 65535] { R1996 += 1, R1924 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [86, 65535] { R1996 += 1, R1924 += 1, R885 += 1 };
  s2 -> s1 [0, 84] { R1996 += 1, R1924 += 1, R885 += 1 };
  s2 -> s2 [0, 65535] { R1996 += 1, R1923 += 1, R1924 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R1996 += 1, R1924 += 1, R884 += 1, R885 += 1 };
  s2 -> s4 [0, 65535] { R1996 += 1, R1924 += 1, R885 += 1, R886 += 1 };
  s2 -> s1 [86, 65535] { R1996 += 1, R1924 += 1, R885 += 1 };
  s3 -> s1 [0, 84] { R1996 += 1, R1924 += 1, R885 += 1 };
  s3 -> s5 [0, 65535] { R1996 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R1996 += 1, R1924 += 1, R884 += 1, R885 += 1 };
  s3 -> s4 [0, 65535] { R1996 += 1, R1924 += 1, R885 += 1, R886 += 1 };
  s3 -> s1 [86, 65535] { R1996 += 1, R1924 += 1, R885 += 1 };
  s4 -> s1 [0, 84] { R1996 += 1, R1924 += 1, R885 += 1 };
  s4 -> s5 [0, 65535] { R1996 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R1996 += 1, R1924 += 1, R885 += 1, R886 += 1 };
  s4 -> s7 [0, 65535] { R1996 += 1, R1924 += 1 };
  s4 -> s1 [86, 65535] { R1996 += 1, R1924 += 1, R885 += 1 };
  s5 -> s5 [0, 65535] { R1996 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R1996 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R1996 += 1, R1924 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 84] { R1998 += 1, R1926 += 1, R892 += 1, R894 += 1 };
  s0 -> s2 [0, 65535] { R1998 += 1, R1925 += 1, R1926 += 1 };
  s0 -> s3 [0, 65535] { R1998 += 1, R1926 += 1, R891 += 1, R892 += 1 };
  s0 -> s4 [0, 65535] { R1998 += 1, R1926 += 1, R892 += 1, R893 += 1, R894 += 1 };
  s0 -> s0 [0, 65535] { R1997 += 1, R1998 += 1 };
  s0 -> s1 [86, 65535] { R1998 += 1, R1926 += 1, R892 += 1, R894 += 1 };
  s1 -> s1 [0, 84] { R1998 += 1, R1926 += 1, R892 += 1, R894 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R1998 += 1, R1926 += 1 };
  s1 -> s1 [0, 65535] { R1998 += 1, R1926 += 1, R892 += 1 };
  s1 -> s7 [0, 65535] { R1998 += 1 };
  s1 -> s1 [86, 65535] { R1998 += 1, R1926 += 1, R892 += 1, R894 += 1 };
  s2 -> s1 [0, 84] { R1998 += 1, R1926 += 1, R892 += 1, R894 += 1 };
  s2 -> s2 [0, 65535] { R1998 += 1, R1925 += 1, R1926 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R1998 += 1, R1926 += 1, R891 += 1, R892 += 1 };
  s2 -> s4 [0, 65535] { R1998 += 1, R1926 += 1, R892 += 1, R893 += 1, R894 += 1 };
  s2 -> s1 [86, 65535] { R1998 += 1, R1926 += 1, R892 += 1, R894 += 1 };
  s3 -> s1 [0, 84] { R1998 += 1, R1926 += 1, R892 += 1, R894 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1998 += 1, R1926 += 1, R891 += 1, R892 += 1 };
  s3 -> s4 [0, 65535] { R1998 += 1, R1926 += 1, R892 += 1, R893 += 1, R894 += 1 };
  s3 -> s7 [0, 65535] { R1998 += 1 };
  s3 -> s1 [86, 65535] { R1998 += 1, R1926 += 1, R892 += 1, R894 += 1 };
  s4 -> s1 [0, 84] { R1998 += 1, R1926 += 1, R892 += 1, R894 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1998 += 1, R1926 += 1 };
  s4 -> s7 [0, 65535] { R1998 += 1 };
  s4 -> s4 [0, 65535] { R1998 += 1, R1926 += 1, R892 += 1, R893 += 1, R894 += 1 };
  s4 -> s1 [86, 65535] { R1998 += 1, R1926 += 1, R892 += 1, R894 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1998 += 1, R1926 += 1 };
  s6 -> s7 [0, 65535] { R1998 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R1998 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R2000 += 1, R1928 += 1, R901 += 1, R903 += 1, R904 += 1 };
  s0 -> s0 [0, 65535] { R1999 += 1, R2000 += 1 };
  s0 -> s2 [0, 65535] { R2000 += 1, R1928 += 1, R901 += 1, R902 += 1, R903 += 1 };
  s0 -> s3 [0, 65535] { R2000 += 1, R1927 += 1, R1928 += 1 };
  s0 -> s4 [0, 65535] { R2000 += 1, R1928 += 1, R900 += 1, R901 += 1 };
  s1 -> s8 [0, 65535] { R2000 += 1, R1928 += 1, R901 += 1 };
  s1 -> s7 [0, 65535] { R2000 += 1, R1928 += 1 };
  s1 -> s1 [0, 65535] { R2000 += 1, R1928 += 1, R901 += 1, R903 += 1, R904 += 1 };
  s1 -> s5 [0, 65535] { R2000 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R2000 += 1, R1928 += 1 };
  s2 -> s1 [0, 65535] { R2000 += 1, R1928 += 1, R901 += 1, R903 += 1, R904 += 1 };
  s2 -> s2 [0, 65535] { R2000 += 1, R1928 += 1, R901 += 1, R902 += 1, R903 += 1 };
  s2 -> s5 [0, 65535] { R2000 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s1 [0, 65535] { R2000 += 1, R1928 += 1, R901 += 1, R903 += 1, R904 += 1 };
  s3 -> s2 [0, 65535] { R2000 += 1, R1928 += 1, R901 += 1, R902 += 1, R903 += 1 };
  s3 -> s3 [0, 65535] { R2000 += 1, R1927 += 1, R1928 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R2000 += 1, R1928 += 1, R900 += 1, R901 += 1 };
  s4 -> s1 [0, 65535] { R2000 += 1, R1928 += 1, R901 += 1, R903 += 1, R904 += 1 };
  s4 -> s2 [0, 65535] { R2000 += 1, R1928 += 1, R901 += 1, R902 += 1, R903 += 1 };
  s4 -> s5 [0, 65535] { R2000 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2000 += 1, R1928 += 1, R900 += 1, R901 += 1 };
  s5 -> s5 [0, 65535] { R2000 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2000 += 1, R1928 += 1 };
  s7 -> s5 [0, 65535] { R2000 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R2000 += 1, R1928 += 1, R901 += 1 };
  s8 -> s7 [0, 65535] { R2000 += 1, R1928 += 1 };
  s8 -> s5 [0, 65535] { R2000 += 1 };
  s8 -> s6 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 85] { R2002 += 1, R1930 += 1, R910 += 1, R912 += 1 };
  s0 -> s0 [0, 65535] { R2001 += 1, R2002 += 1 };
  s0 -> s2 [0, 65535] { R2002 += 1, R1930 += 1, R910 += 1, R911 += 1, R912 += 1 };
  s0 -> s3 [0, 65535] { R2002 += 1, R1930 += 1, R909 += 1, R910 += 1 };
  s0 -> s4 [0, 65535] { R2002 += 1, R1929 += 1, R1930 += 1 };
  s0 -> s1 [90, 65535] { R2002 += 1, R1930 += 1, R910 += 1, R912 += 1 };
  s1 -> s1 [0, 85] { R2002 += 1, R1930 += 1, R910 += 1, R912 += 1 };
  s1 -> s7 [0, 65535] { R2002 += 1, R1930 += 1 };
  s1 -> s1 [0, 65535] { R2002 += 1, R1930 += 1, R910 += 1 };
  s1 -> s6 [0, 65535] { R2002 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [90, 65535] { R2002 += 1, R1930 += 1, R910 += 1, R912 += 1 };
  s2 -> s1 [0, 85] { R2002 += 1, R1930 += 1, R910 += 1, R912 += 1 };
  s2 -> s7 [0, 65535] { R2002 += 1, R1930 += 1 };
  s2 -> s2 [0, 65535] { R2002 += 1, R1930 += 1, R910 += 1, R911 += 1, R912 += 1 };
  s2 -> s6 [0, 65535] { R2002 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [90, 65535] { R2002 += 1, R1930 += 1, R910 += 1, R912 += 1 };
  s3 -> s1 [0, 85] { R2002 += 1, R1930 += 1, R910 += 1, R912 += 1 };
  s3 -> s2 [0, 65535] { R2002 += 1, R1930 += 1, R910 += 1, R911 += 1, R912 += 1 };
  s3 -> s3 [0, 65535] { R2002 += 1, R1930 += 1, R909 += 1, R910 += 1 };
  s3 -> s6 [0, 65535] { R2002 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [90, 65535] { R2002 += 1, R1930 += 1, R910 += 1, R912 += 1 };
  s4 -> s1 [0, 85] { R2002 += 1, R1930 += 1, R910 += 1, R912 += 1 };
  s4 -> s2 [0, 65535] { R2002 += 1, R1930 += 1, R910 += 1, R911 += 1, R912 += 1 };
  s4 -> s3 [0, 65535] { R2002 += 1, R1930 += 1, R909 += 1, R910 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2002 += 1, R1929 += 1, R1930 += 1 };
  s4 -> s1 [90, 65535] { R2002 += 1, R1930 += 1, R910 += 1, R912 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2002 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R2002 += 1, R1930 += 1 };
  s7 -> s6 [0, 65535] { R2002 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 65535] { R2004 += 1, R1931 += 1, R1932 += 1 };
  s0 -> s2 [0, 65535] { R2004 += 1, R1932 += 1, R919 += 1, R921 += 1, R922 += 1 };
  s0 -> s3 [0, 65535] { R2004 += 1, R1932 += 1, R919 += 1, R920 += 1, R921 += 1 };
  s0 -> s4 [0, 65535] { R2004 += 1, R1932 += 1, R918 += 1, R919 += 1 };
  s0 -> s0 [0, 65535] { R2003 += 1, R2004 += 1 };
  s1 -> s1 [0, 65535] { R2004 += 1, R1931 += 1, R1932 += 1 };
  s1 -> s2 [0, 65535] { R2004 += 1, R1932 += 1, R919 += 1, R921 += 1, R922 += 1 };
  s1 -> s3 [0, 65535] { R2004 += 1, R1932 += 1, R919 += 1, R920 += 1, R921 += 1 };
  s1 -> s4 [0, 65535] { R2004 += 1, R1932 += 1, R918 += 1, R919 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s8 [0, 65535] { R2004 += 1, R1932 += 1, R919 += 1 };
  s2 -> s2 [0, 65535] { R2004 += 1, R1932 += 1, R919 += 1, R921 += 1, R922 += 1 };
  s2 -> s5 [0, 65535] { R2004 += 1 };
  s2 -> s7 [0, 65535] { R2004 += 1, R1932 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R2004 += 1, R1932 += 1, R919 += 1, R921 += 1, R922 += 1 };
  s3 -> s5 [0, 65535] { R2004 += 1 };
  s3 -> s7 [0, 65535] { R2004 += 1, R1932 += 1 };
  s3 -> s3 [0, 65535] { R2004 += 1, R1932 += 1, R919 += 1, R920 += 1, R921 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s2 [0, 65535] { R2004 += 1, R1932 += 1, R919 += 1, R921 += 1, R922 += 1 };
  s4 -> s5 [0, 65535] { R2004 += 1 };
  s4 -> s3 [0, 65535] { R2004 += 1, R1932 += 1, R919 += 1, R920 += 1, R921 += 1 };
  s4 -> s4 [0, 65535] { R2004 += 1, R1932 += 1, R918 += 1, R919 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R2004 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R2004 += 1 };
  s7 -> s7 [0, 65535] { R2004 += 1, R1932 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R2004 += 1, R1932 += 1, R919 += 1 };
  s8 -> s5 [0, 65535] { R2004 += 1 };
  s8 -> s7 [0, 65535] { R2004 += 1, R1932 += 1 };
  s8 -> s6 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R2006 += 1, R1934 += 1 };
  s0 -> s2 [0, 65535] { R2006 += 1, R1933 += 1, R1934 += 1 };
  s0 -> s0 [0, 65535] { R2005 += 1, R2006 += 1 };
  s0 -> s3 [0, 65535] { R2006 += 1, R1934 += 1, R1902 += 1 };
  s1 -> s1 [0, 65535] { R2006 += 1, R1934 += 1 };
  s1 -> s4 [0, 65535] { R2006 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R2006 += 1, R1934 += 1 };
  s2 -> s2 [0, 65535] { R2006 += 1, R1933 += 1, R1934 += 1 };
  s2 -> s3 [0, 65535] { R2006 += 1, R1934 += 1, R1902 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R2006 += 1, R1934 += 1 };
  s3 -> s4 [0, 65535] { R2006 += 1 };
  s3 -> s3 [0, 65535] { R2006 += 1, R1934 += 1, R1902 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2006 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s0 [0, 65535] { R2007 += 1, R2008 += 1 };
  s0 -> s1 [0, 65535] { R2008 += 1, R1935 += 1, R1936 += 1 };
  s0 -> s2 [0, 65535] { R2008 += 1, R1936 += 1, R22 += 1 };
  s1 -> s1 [0, 65535] { R2008 += 1, R1935 += 1, R1936 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R2008 += 1, R1936 += 1, R22 += 1 };
  s2 -> s3 [0, 65535] { R2008 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2008 += 1, R1936 += 1, R22 += 1 };
  s3 -> s3 [0, 65535] { R2008 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 67] { R2010 += 1, R1938 += 1 };
  s0 -> s2 [0, 65535] { R2010 += 1, R1937 += 1, R1938 += 1 };
  s0 -> s0 [0, 65535] { R2009 += 1, R2010 += 1 };
  s0 -> s3 [68, 68] { R2010 += 1, R1938 += 1 };
  s0 -> s4 [68, 68] { R2010 += 1, R1938 += 1 };
  s0 -> s5 [85, 85] { R2010 += 1, R1938 += 1 };
  s0 -> s1 [86, 65535] { R2010 += 1, R1938 += 1 };
  s1 -> s1 [0, 67] { R2010 += 1, R1938 += 1 };
  s1 -> s3 [68, 68] { R2010 += 1, R1938 += 1 };
  s1 -> s4 [68, 68] { R2010 += 1, R1938 += 1 };
  s1 -> s5 [85, 85] { R2010 += 1, R1938 += 1 };
  s1 -> s1 [86, 65535] { R2010 += 1, R1938 += 1 };
  s2 -> s1 [0, 67] { R2010 += 1, R1938 += 1 };
  s2 -> s2 [0, 65535] { R2010 += 1, R1937 += 1, R1938 += 1 };
  s2 -> s3 [68, 68] { R2010 += 1, R1938 += 1 };
  s2 -> s4 [68, 68] { R2010 += 1, R1938 += 1 };
  s2 -> s5 [85, 85] { R2010 += 1, R1938 += 1 };
  s2 -> s1 [86, 65535] { R2010 += 1, R1938 += 1 };
  s4 -> s4 [0, 68] { R2010 += 1, R1938 += 1 };
  s4 -> s8 [85, 85] { R2010 += 1, R1938 += 1 };
  s4 -> s4 [86, 65535] { R2010 += 1, R1938 += 1 };
  s5 -> s5 [0, 67] { R2010 += 1, R1938 += 1 };
  s5 -> s5 [0, 65535] { R2010 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [68, 68] { R2010 += 1, R1938 += 1 };
  s5 -> s8 [68, 68] { R2010 += 1, R1938 += 1 };
  s5 -> s5 [85, 65535] { R2010 += 1, R1938 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2010 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 68] { R2010 += 1, R1938 += 1 };
  s8 -> s8 [0, 65535] { R2010 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [85, 65535] { R2010 += 1, R1938 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 67] { R2012 += 1, R1940 += 1, R857 += 1 };
  s0 -> s2 [0, 65535] { R2012 += 1, R1939 += 1, R1940 += 1 };
  s0 -> s0 [0, 65535] { R2011 += 1, R2012 += 1 };
  s0 -> s3 [68, 68] { R2012 += 1, R1940 += 1, R857 += 1 };
  s0 -> s4 [68, 68] { R2012 += 1, R1940 += 1, R857 += 1 };
  s0 -> s1 [69, 65535] { R2012 += 1, R1940 += 1, R857 += 1 };
  s1 -> s1 [0, 67] { R2012 += 1, R1940 += 1, R857 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2012 += 1 };
  s1 -> s3 [68, 68] { R2012 += 1, R1940 += 1, R857 += 1 };
  s1 -> s4 [68, 68] { R2012 += 1, R1940 += 1, R857 += 1 };
  s1 -> s1 [69, 65535] { R2012 += 1, R1940 += 1, R857 += 1 };
  s2 -> s1 [0, 67] { R2012 += 1, R1940 += 1, R857 += 1 };
  s2 -> s2 [0, 65535] { R2012 += 1, R1939 += 1, R1940 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [68, 68] { R2012 += 1, R1940 += 1, R857 += 1 };
  s2 -> s4 [68, 68] { R2012 += 1, R1940 += 1, R857 += 1 };
  s2 -> s1 [69, 65535] { R2012 += 1, R1940 += 1, R857 += 1 };
  s3 -> s3 [0, 65535] { R2012 += 1, R1940 += 1, R857 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R2012 += 1 };
  s4 -> s4 [0, 65535] { R2012 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2012 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 67] { R2014 += 1, R1942 += 1, R859 += 1 };
  s0 -> s0 [0, 65535] { R2013 += 1, R2014 += 1 };
  s0 -> s2 [0, 65535] { R2014 += 1, R1941 += 1, R1942 += 1 };
  s0 -> s3 [68, 68] { R2014 += 1, R1942 += 1, R859 += 1 };
  s0 -> s4 [68, 68] { R2014 += 1, R1942 += 1, R859 += 1 };
  s0 -> s1 [69, 65535] { R2014 += 1, R1942 += 1, R859 += 1 };
  s1 -> s1 [0, 67] { R2014 += 1, R1942 += 1, R859 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2014 += 1 };
  s1 -> s3 [68, 68] { R2014 += 1, R1942 += 1, R859 += 1 };
  s1 -> s4 [68, 68] { R2014 += 1, R1942 += 1, R859 += 1 };
  s1 -> s1 [69, 65535] { R2014 += 1, R1942 += 1, R859 += 1 };
  s2 -> s1 [0, 67] { R2014 += 1, R1942 += 1, R859 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2014 += 1, R1941 += 1, R1942 += 1 };
  s2 -> s3 [68, 68] { R2014 += 1, R1942 += 1, R859 += 1 };
  s2 -> s4 [68, 68] { R2014 += 1, R1942 += 1, R859 += 1 };
  s2 -> s1 [69, 65535] { R2014 += 1, R1942 += 1, R859 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2014 += 1, R1942 += 1, R859 += 1 };
  s3 -> s6 [0, 65535] { R2014 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2014 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2014 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 67] { R2016 += 1, R1944 += 1, R861 += 1, R862 += 1 };
  s0 -> s2 [0, 65535] { R2016 += 1, R1943 += 1, R1944 += 1 };
  s0 -> s0 [0, 65535] { R2015 += 1, R2016 += 1 };
  s0 -> s3 [68, 68] { R2016 += 1, R1944 += 1, R861 += 1, R862 += 1 };
  s0 -> s4 [68, 68] { R2016 += 1, R1944 += 1, R861 += 1, R862 += 1 };
  s0 -> s1 [69, 65535] { R2016 += 1, R1944 += 1, R861 += 1, R862 += 1 };
  s1 -> s1 [0, 67] { R2016 += 1, R1944 += 1, R861 += 1, R862 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2016 += 1 };
  s1 -> s3 [68, 68] { R2016 += 1, R1944 += 1, R861 += 1, R862 += 1 };
  s1 -> s4 [68, 68] { R2016 += 1, R1944 += 1, R861 += 1, R862 += 1 };
  s1 -> s1 [69, 65535] { R2016 += 1, R1944 += 1, R861 += 1, R862 += 1 };
  s2 -> s1 [0, 67] { R2016 += 1, R1944 += 1, R861 += 1, R862 += 1 };
  s2 -> s2 [0, 65535] { R2016 += 1, R1943 += 1, R1944 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [68, 68] { R2016 += 1, R1944 += 1, R861 += 1, R862 += 1 };
  s2 -> s4 [68, 68] { R2016 += 1, R1944 += 1, R861 += 1, R862 += 1 };
  s2 -> s1 [69, 65535] { R2016 += 1, R1944 += 1, R861 += 1, R862 += 1 };
  s3 -> s3 [0, 65535] { R2016 += 1, R1944 += 1, R861 += 1, R862 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R2016 += 1 };
  s4 -> s4 [0, 65535] { R2016 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2016 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 67] { R2018 += 1, R1946 += 1, R867 += 1, R868 += 1 };
  s0 -> s0 [0, 65535] { R2017 += 1, R2018 += 1 };
  s0 -> s2 [0, 65535] { R2018 += 1, R1945 += 1, R1946 += 1 };
  s0 -> s3 [68, 68] { R2018 += 1, R1946 += 1, R867 += 1, R868 += 1 };
  s0 -> s4 [68, 68] { R2018 += 1, R1946 += 1, R867 += 1, R868 += 1 };
  s0 -> s1 [69, 65535] { R2018 += 1, R1946 += 1, R867 += 1, R868 += 1 };
  s1 -> s1 [0, 67] { R2018 += 1, R1946 += 1, R867 += 1, R868 += 1 };
  s1 -> s1 [0, 65535] { R2018 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [68, 68] { R2018 += 1, R1946 += 1, R867 += 1, R868 += 1 };
  s1 -> s4 [68, 68] { R2018 += 1, R1946 += 1, R867 += 1, R868 += 1 };
  s1 -> s1 [69, 65535] { R2018 += 1, R1946 += 1, R867 += 1, R868 += 1 };
  s2 -> s1 [0, 67] { R2018 += 1, R1946 += 1, R867 += 1, R868 += 1 };
  s2 -> s2 [0, 65535] { R2018 += 1, R1945 += 1, R1946 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [68, 68] { R2018 += 1, R1946 += 1, R867 += 1, R868 += 1 };
  s2 -> s4 [68, 68] { R2018 += 1, R1946 += 1, R867 += 1, R868 += 1 };
  s2 -> s1 [69, 65535] { R2018 += 1, R1946 += 1, R867 += 1, R868 += 1 };
  s3 -> s3 [0, 65535] { R2018 += 1, R1946 += 1, R867 += 1, R868 += 1 };
  s3 -> s6 [0, 65535] { R2018 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2018 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2018 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 67] { R2020 += 1, R1948 += 1, R871 += 1, R872 += 1 };
  s0 -> s0 [0, 65535] { R2019 += 1, R2020 += 1 };
  s0 -> s2 [0, 65535] { R2020 += 1, R1947 += 1, R1948 += 1 };
  s0 -> s3 [68, 68] { R2020 += 1, R1948 += 1, R871 += 1, R872 += 1 };
  s0 -> s4 [68, 68] { R2020 += 1, R1948 += 1, R871 += 1, R872 += 1 };
  s0 -> s1 [69, 65535] { R2020 += 1, R1948 += 1, R871 += 1, R872 += 1 };
  s1 -> s1 [0, 67] { R2020 += 1, R1948 += 1, R871 += 1, R872 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2020 += 1 };
  s1 -> s3 [68, 68] { R2020 += 1, R1948 += 1, R871 += 1, R872 += 1 };
  s1 -> s4 [68, 68] { R2020 += 1, R1948 += 1, R871 += 1, R872 += 1 };
  s1 -> s1 [69, 65535] { R2020 += 1, R1948 += 1, R871 += 1, R872 += 1 };
  s2 -> s1 [0, 67] { R2020 += 1, R1948 += 1, R871 += 1, R872 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2020 += 1, R1947 += 1, R1948 += 1 };
  s2 -> s3 [68, 68] { R2020 += 1, R1948 += 1, R871 += 1, R872 += 1 };
  s2 -> s4 [68, 68] { R2020 += 1, R1948 += 1, R871 += 1, R872 += 1 };
  s2 -> s1 [69, 65535] { R2020 += 1, R1948 += 1, R871 += 1, R872 += 1 };
  s3 -> s6 [0, 65535] { R2020 += 1 };
  s3 -> s3 [0, 65535] { R2020 += 1, R1948 += 1, R871 += 1, R872 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2020 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2020 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 67] { R2022 += 1, R1950 += 1, R875 += 1, R876 += 1 };
  s0 -> s2 [0, 65535] { R2022 += 1, R1949 += 1, R1950 += 1 };
  s0 -> s0 [0, 65535] { R2021 += 1, R2022 += 1 };
  s0 -> s3 [68, 68] { R2022 += 1, R1950 += 1, R875 += 1, R876 += 1 };
  s0 -> s4 [68, 68] { R2022 += 1, R1950 += 1, R875 += 1, R876 += 1 };
  s0 -> s1 [69, 65535] { R2022 += 1, R1950 += 1, R875 += 1, R876 += 1 };
  s1 -> s1 [0, 67] { R2022 += 1, R1950 += 1, R875 += 1, R876 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2022 += 1 };
  s1 -> s3 [68, 68] { R2022 += 1, R1950 += 1, R875 += 1, R876 += 1 };
  s1 -> s4 [68, 68] { R2022 += 1, R1950 += 1, R875 += 1, R876 += 1 };
  s1 -> s1 [69, 65535] { R2022 += 1, R1950 += 1, R875 += 1, R876 += 1 };
  s2 -> s1 [0, 67] { R2022 += 1, R1950 += 1, R875 += 1, R876 += 1 };
  s2 -> s2 [0, 65535] { R2022 += 1, R1949 += 1, R1950 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [68, 68] { R2022 += 1, R1950 += 1, R875 += 1, R876 += 1 };
  s2 -> s4 [68, 68] { R2022 += 1, R1950 += 1, R875 += 1, R876 += 1 };
  s2 -> s1 [69, 65535] { R2022 += 1, R1950 += 1, R875 += 1, R876 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2022 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R2022 += 1 };
  s4 -> s4 [0, 65535] { R2022 += 1, R1950 += 1, R875 += 1, R876 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2022 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 67] { R2024 += 1, R1952 += 1, R881 += 1, R882 += 1 };
  s0 -> s0 [0, 65535] { R2023 += 1, R2024 += 1 };
  s0 -> s2 [0, 65535] { R2024 += 1, R1951 += 1, R1952 += 1 };
  s0 -> s3 [68, 68] { R2024 += 1, R1952 += 1, R881 += 1, R882 += 1 };
  s0 -> s4 [68, 68] { R2024 += 1, R1952 += 1, R881 += 1, R882 += 1 };
  s0 -> s1 [69, 65535] { R2024 += 1, R1952 += 1, R881 += 1, R882 += 1 };
  s1 -> s1 [0, 67] { R2024 += 1, R1952 += 1, R881 += 1, R882 += 1 };
  s1 -> s1 [0, 65535] { R2024 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [68, 68] { R2024 += 1, R1952 += 1, R881 += 1, R882 += 1 };
  s1 -> s4 [68, 68] { R2024 += 1, R1952 += 1, R881 += 1, R882 += 1 };
  s1 -> s1 [69, 65535] { R2024 += 1, R1952 += 1, R881 += 1, R882 += 1 };
  s2 -> s1 [0, 67] { R2024 += 1, R1952 += 1, R881 += 1, R882 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R2024 += 1, R1951 += 1, R1952 += 1 };
  s2 -> s3 [68, 68] { R2024 += 1, R1952 += 1, R881 += 1, R882 += 1 };
  s2 -> s4 [68, 68] { R2024 += 1, R1952 += 1, R881 += 1, R882 += 1 };
  s2 -> s1 [69, 65535] { R2024 += 1, R1952 += 1, R881 += 1, R882 += 1 };
  s3 -> s3 [0, 65535] { R2024 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R2024 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2024 += 1, R1952 += 1, R881 += 1, R882 += 1 };
  s5 -> s5 [0, 65535] { R2024 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 67] { R2026 += 1, R1954 += 1, R887 += 1, R888 += 1 };
  s0 -> s2 [0, 65535] { R2026 += 1, R1953 += 1, R1954 += 1 };
  s0 -> s0 [0, 65535] { R2025 += 1, R2026 += 1 };
  s0 -> s3 [68, 68] { R2026 += 1, R1954 += 1, R887 += 1, R888 += 1 };
  s0 -> s4 [68, 68] { R2026 += 1, R1954 += 1, R887 += 1, R888 += 1 };
  s0 -> s1 [69, 65535] { R2026 += 1, R1954 += 1, R887 += 1, R888 += 1 };
  s1 -> s1 [0, 67] { R2026 += 1, R1954 += 1, R887 += 1, R888 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R2026 += 1 };
  s1 -> s3 [68, 68] { R2026 += 1, R1954 += 1, R887 += 1, R888 += 1 };
  s1 -> s4 [68, 68] { R2026 += 1, R1954 += 1, R887 += 1, R888 += 1 };
  s1 -> s1 [69, 65535] { R2026 += 1, R1954 += 1, R887 += 1, R888 += 1 };
  s2 -> s1 [0, 67] { R2026 += 1, R1954 += 1, R887 += 1, R888 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R2026 += 1, R1953 += 1, R1954 += 1 };
  s2 -> s3 [68, 68] { R2026 += 1, R1954 += 1, R887 += 1, R888 += 1 };
  s2 -> s4 [68, 68] { R2026 += 1, R1954 += 1, R887 += 1, R888 += 1 };
  s2 -> s1 [69, 65535] { R2026 += 1, R1954 += 1, R887 += 1, R888 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R2026 += 1 };
  s4 -> s5 [0, 65535] { R2026 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2026 += 1, R1954 += 1, R887 += 1, R888 += 1 };
  s5 -> s5 [0, 65535] { R2026 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 67] { R2028 += 1, R1956 += 1, R895 += 1, R896 += 1 };
  s0 -> s0 [0, 65535] { R2027 += 1, R2028 += 1 };
  s0 -> s2 [0, 65535] { R2028 += 1, R1955 += 1, R1956 += 1 };
  s0 -> s3 [68, 68] { R2028 += 1, R1956 += 1, R895 += 1, R896 += 1 };
  s0 -> s4 [68, 68] { R2028 += 1, R1956 += 1, R895 += 1, R896 += 1 };
  s0 -> s1 [69, 65535] { R2028 += 1, R1956 += 1, R895 += 1, R896 += 1 };
  s1 -> s1 [0, 67] { R2028 += 1, R1956 += 1, R895 += 1, R896 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2028 += 1 };
  s1 -> s3 [68, 68] { R2028 += 1, R1956 += 1, R895 += 1, R896 += 1 };
  s1 -> s4 [68, 68] { R2028 += 1, R1956 += 1, R895 += 1, R896 += 1 };
  s1 -> s1 [69, 65535] { R2028 += 1, R1956 += 1, R895 += 1, R896 += 1 };
  s2 -> s1 [0, 67] { R2028 += 1, R1956 += 1, R895 += 1, R896 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2028 += 1, R1955 += 1, R1956 += 1 };
  s2 -> s3 [68, 68] { R2028 += 1, R1956 += 1, R895 += 1, R896 += 1 };
  s2 -> s4 [68, 68] { R2028 += 1, R1956 += 1, R895 += 1, R896 += 1 };
  s2 -> s1 [69, 65535] { R2028 += 1, R1956 += 1, R895 += 1, R896 += 1 };
  s3 -> s3 [0, 65535] { R2028 += 1, R1956 += 1, R895 += 1, R896 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R2028 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2028 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2028 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 67] { R2030 += 1, R1958 += 1, R905 += 1, R906 += 1 };
  s0 -> s2 [0, 65535] { R2030 += 1, R1957 += 1, R1958 += 1 };
  s0 -> s0 [0, 65535] { R2029 += 1, R2030 += 1 };
  s0 -> s3 [68, 68] { R2030 += 1, R1958 += 1, R905 += 1, R906 += 1 };
  s0 -> s4 [68, 68] { R2030 += 1, R1958 += 1, R905 += 1, R906 += 1 };
  s0 -> s1 [69, 65535] { R2030 += 1, R1958 += 1, R905 += 1, R906 += 1 };
  s1 -> s1 [0, 67] { R2030 += 1, R1958 += 1, R905 += 1, R906 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2030 += 1 };
  s1 -> s3 [68, 68] { R2030 += 1, R1958 += 1, R905 += 1, R906 += 1 };
  s1 -> s4 [68, 68] { R2030 += 1, R1958 += 1, R905 += 1, R906 += 1 };
  s1 -> s1 [69, 65535] { R2030 += 1, R1958 += 1, R905 += 1, R906 += 1 };
  s2 -> s1 [0, 67] { R2030 += 1, R1958 += 1, R905 += 1, R906 += 1 };
  s2 -> s2 [0, 65535] { R2030 += 1, R1957 += 1, R1958 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [68, 68] { R2030 += 1, R1958 += 1, R905 += 1, R906 += 1 };
  s2 -> s4 [68, 68] { R2030 += 1, R1958 += 1, R905 += 1, R906 += 1 };
  s2 -> s1 [69, 65535] { R2030 += 1, R1958 += 1, R905 += 1, R906 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2030 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R2030 += 1 };
  s4 -> s4 [0, 65535] { R2030 += 1, R1958 += 1, R905 += 1, R906 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2030 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 67] { R2032 += 1, R1960 += 1, R913 += 1, R914 += 1 };
  s0 -> s2 [0, 65535] { R2032 += 1, R1959 += 1, R1960 += 1 };
  s0 -> s0 [0, 65535] { R2031 += 1, R2032 += 1 };
  s0 -> s3 [68, 68] { R2032 += 1, R1960 += 1, R913 += 1, R914 += 1 };
  s0 -> s4 [68, 68] { R2032 += 1, R1960 += 1, R913 += 1, R914 += 1 };
  s0 -> s1 [69, 65535] { R2032 += 1, R1960 += 1, R913 += 1, R914 += 1 };
  s1 -> s1 [0, 67] { R2032 += 1, R1960 += 1, R913 += 1, R914 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R2032 += 1 };
  s1 -> s3 [68, 68] { R2032 += 1, R1960 += 1, R913 += 1, R914 += 1 };
  s1 -> s4 [68, 68] { R2032 += 1, R1960 += 1, R913 += 1, R914 += 1 };
  s1 -> s1 [69, 65535] { R2032 += 1, R1960 += 1, R913 += 1, R914 += 1 };
  s2 -> s1 [0, 67] { R2032 += 1, R1960 += 1, R913 += 1, R914 += 1 };
  s2 -> s2 [0, 65535] { R2032 += 1, R1959 += 1, R1960 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [68, 68] { R2032 += 1, R1960 += 1, R913 += 1, R914 += 1 };
  s2 -> s4 [68, 68] { R2032 += 1, R1960 += 1, R913 += 1, R914 += 1 };
  s2 -> s1 [69, 65535] { R2032 += 1, R1960 += 1, R913 += 1, R914 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R2032 += 1 };
  s4 -> s5 [0, 65535] { R2032 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2032 += 1, R1960 += 1, R913 += 1, R914 += 1 };
  s5 -> s5 [0, 65535] { R2032 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 67] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s0 -> s2 [0, 67] { R2034 += 1, R1962 += 1, R1897 += 1, R1898 += 1 };
  s0 -> s3 [0, 67] { R2034 += 1, R1962 += 1, R1898 += 1, R1899 += 1, R1900 += 1 };
  s0 -> s0 [0, 65535] { R2033 += 1, R2034 += 1 };
  s0 -> s4 [0, 65535] { R2034 += 1, R1961 += 1, R1962 += 1 };
  s0 -> s5 [68, 68] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s0 -> s6 [68, 68] { R2034 += 1, R1962 += 1, R1897 += 1, R1898 += 1 };
  s0 -> s7 [68, 68] { R2034 += 1, R1962 += 1, R1898 += 1, R1899 += 1, R1900 += 1 };
  s0 -> s8 [68, 68] { R2034 += 1, R1962 += 1, R1897 += 1, R1898 += 1 };
  s0 -> s9 [68, 68] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s0 -> s10 [68, 68] { R2034 += 1, R1962 += 1, R1898 += 1, R1899 += 1, R1900 += 1 };
  s0 -> s1 [69, 84] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s0 -> s2 [69, 65535] { R2034 += 1, R1962 += 1, R1897 += 1, R1898 += 1 };
  s0 -> s3 [69, 65535] { R2034 += 1, R1962 += 1, R1898 += 1, R1899 += 1, R1900 += 1 };
  s0 -> s11 [90, 90] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s0 -> s1 [91, 65535] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s1 -> s1 [0, 67] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s1 -> s5 [68, 68] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s1 -> s9 [68, 68] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s1 -> s1 [69, 84] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s1 -> s11 [90, 90] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s1 -> s1 [91, 65535] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s2 -> s1 [0, 67] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s2 -> s2 [0, 67] { R2034 += 1, R1962 += 1, R1897 += 1, R1898 += 1 };
  s2 -> s3 [0, 67] { R2034 += 1, R1962 += 1, R1898 += 1, R1899 += 1, R1900 += 1 };
  s2 -> s5 [68, 68] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s2 -> s6 [68, 68] { R2034 += 1, R1962 += 1, R1897 += 1, R1898 += 1 };
  s2 -> s7 [68, 68] { R2034 += 1, R1962 += 1, R1898 += 1, R1899 += 1, R1900 += 1 };
  s2 -> s8 [68, 68] { R2034 += 1, R1962 += 1, R1897 += 1, R1898 += 1 };
  s2 -> s9 [68, 68] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s2 -> s10 [68, 68] { R2034 += 1, R1962 += 1, R1898 += 1, R1899 += 1, R1900 += 1 };
  s2 -> s1 [69, 84] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s2 -> s2 [69, 65535] { R2034 += 1, R1962 += 1, R1897 += 1, R1898 += 1 };
  s2 -> s3 [69, 65535] { R2034 += 1, R1962 += 1, R1898 += 1, R1899 += 1, R1900 += 1 };
  s2 -> s11 [90, 90] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s2 -> s1 [91, 65535] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s3 -> s1 [0, 67] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s3 -> s3 [0, 67] { R2034 += 1, R1962 += 1, R1898 += 1, R1899 += 1, R1900 += 1 };
  s3 -> s5 [68, 68] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s3 -> s7 [68, 68] { R2034 += 1, R1962 += 1, R1898 += 1, R1899 += 1, R1900 += 1 };
  s3 -> s9 [68, 68] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s3 -> s10 [68, 68] { R2034 += 1, R1962 += 1, R1898 += 1, R1899 += 1, R1900 += 1 };
  s3 -> s1 [69, 84] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s3 -> s3 [69, 65535] { R2034 += 1, R1962 += 1, R1898 += 1, R1899 += 1, R1900 += 1 };
  s3 -> s11 [90, 90] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s3 -> s1 [91, 65535] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s4 -> s1 [0, 67] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s4 -> s2 [0, 67] { R2034 += 1, R1962 += 1, R1897 += 1, R1898 += 1 };
  s4 -> s3 [0, 67] { R2034 += 1, R1962 += 1, R1898 += 1, R1899 += 1, R1900 += 1 };
  s4 -> s4 [0, 65535] { R2034 += 1, R1961 += 1, R1962 += 1 };
  s4 -> s5 [68, 68] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s4 -> s6 [68, 68] { R2034 += 1, R1962 += 1, R1897 += 1, R1898 += 1 };
  s4 -> s7 [68, 68] { R2034 += 1, R1962 += 1, R1898 += 1, R1899 += 1, R1900 += 1 };
  s4 -> s8 [68, 68] { R2034 += 1, R1962 += 1, R1897 += 1, R1898 += 1 };
  s4 -> s9 [68, 68] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s4 -> s10 [68, 68] { R2034 += 1, R1962 += 1, R1898 += 1, R1899 += 1, R1900 += 1 };
  s4 -> s1 [69, 84] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s4 -> s2 [69, 65535] { R2034 += 1, R1962 += 1, R1897 += 1, R1898 += 1 };
  s4 -> s3 [69, 65535] { R2034 += 1, R1962 += 1, R1898 += 1, R1899 += 1, R1900 += 1 };
  s4 -> s11 [90, 90] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s4 -> s1 [91, 65535] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s5 -> s5 [0, 84] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s5 -> s12 [90, 90] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s5 -> s5 [91, 65535] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s6 -> s5 [0, 84] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s6 -> s6 [0, 65535] { R2034 += 1, R1962 += 1, R1897 += 1, R1898 += 1 };
  s6 -> s10 [0, 65535] { R2034 += 1, R1962 += 1, R1898 += 1, R1899 += 1, R1900 += 1 };
  s6 -> s12 [90, 90] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s6 -> s5 [91, 65535] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s10 -> s5 [0, 84] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s10 -> s10 [0, 65535] { R2034 += 1, R1962 += 1, R1898 += 1, R1899 += 1, R1900 += 1 };
  s10 -> s12 [90, 90] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s10 -> s5 [91, 65535] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s11 -> s11 [0, 67] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s11 -> s12 [68, 68] { R2034 += 1, R1962 += 1, R1898 += 1 };
  s11 -> s13 [68, 68] { R2034 += 1, R1962 += 1, R1898 += 1 };
  s11 -> s11 [69, 84] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s11 -> s11 [69, 65535] { R2034 += 1, R1962 += 1, R1898 += 1 };
  s11 -> s14 [85, 85] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s11 -> s11 [90, 65535] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s12 -> s12 [0, 84] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s12 -> s12 [0, 65535] { R2034 += 1, R1962 += 1, R1898 += 1 };
  s12 -> s17 [85, 85] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s12 -> s12 [90, 65535] { R2034 += 1, R1962 += 1, R1898 += 1, R1900 += 1 };
  s14 -> s14 [0, 67] { R2034 += 1, R1962 += 1, R1898 += 1 };
  s14 -> s14 [0, 65535] { R2034 += 1 };
  s14 -> s15 [0, 65535];
  s14 -> s16 [68, 68] { R2034 += 1, R1962 += 1, R1898 += 1 };
  s14 -> s17 [68, 68] { R2034 += 1, R1962 += 1, R1898 += 1 };
  s14 -> s14 [69, 65535] { R2034 += 1, R1962 += 1, R1898 += 1 };
  s15 -> s15 [0, 65535];
  s16 -> s16 [0, 65535] { R2034 += 1 };
  s16 -> s15 [0, 65535];
  s17 -> s18 [0, 65535] { R2034 += 1 };
  s17 -> s17 [0, 65535] { R2034 += 1, R1962 += 1, R1898 += 1 };
  s17 -> s15 [0, 65535];
  s18 -> s18 [0, 65535] { R2034 += 1 };
  s18 -> s15 [0, 65535];
  accepting s17, s16, s14, s18, s15;
};
};
synchronised {  // Automata constraining P63
automaton P63_0 {
  init s0;
  s0 -> s1 [117, 117];
  accepting s1;
};
};
synchronised {  // Automata constraining P33
automaton P33_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
synchronised {  // Automata constraining P37
automaton P37_0 {
  init s0;
  s0 -> s1 [11, 11];
  accepting s1;
};
};
synchronised {  // Automata constraining P35
automaton P35_0 {
  init s0;
  s0 -> s1 [10, 10];
  accepting s1;
};
};
synchronised {  // Automata constraining P34
automaton P34_0 {
  init s0;
  s0 -> s1 [9, 9];
  accepting s1;
};
};
synchronised {  // Automata constraining P36
automaton P36_0 {
  init s0;
  s0 -> s1 [13, 13];
  accepting s1;
};
};
constraint R2 = R1934 && R3 - R2034 = 1 && R23 - R1934 = -1 && R24 = R1934 && R25 - R1934 = -1 && R26 = R1934 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R31 = R2034 && R32 - R2034 = 1 && R33 = R2034 && R34 - R2034 = 1 && R35 = 0 && R36 = 1 && R37 = 0 && R38 = 1 && R858 + R857 + -1*R1902 + -1*R1898 = 0 && R873 + R871 = 0 && R874 + R872 + -1*R1902 + -1*R1898 = 0 && R1901 + R1897 = 0 && R1903 + R1899 = 0 && R1904 + R1900 = 0 && R1905 = 0 && R1906 = R1934 && R1907 = 0 && R1908 = R1934 && R1909 = 0 && R1910 = R1934 && R1911 = 0 && R1912 = R1934 && R1913 = 0 && R1914 = R1934 && R1915 = 0 && R1916 = R1934 && R1917 = 0 && R1918 = R1934 && R1919 = 0 && R1920 = R1934 && R1921 = 0 && R1922 = R1934 && R1923 = 0 && R1924 = R1934 && R1925 = 0 && R1926 = R1934 && R1927 = 0 && R1928 = R1934 && R1929 = 0 && R1930 = R1934 && R1931 = 0 && R1932 = R1934 && R1933 = 0 && R1937 = 0 && R1938 = 0 && R1961 = 0 && R1962 = 0 && R1963 = 0 && R1964 = R2034 && R1965 = 0 && R1966 = R2034 && R1967 = 0 && R1968 = R2034 && R1969 = 0 && R1970 = R2034 && R1971 = 0 && R1972 = R2034 && R1973 = 0 && R1974 = R2034 && R1975 = 0 && R1976 = R2034 && R1977 = 0 && R1978 = R2034 && R1979 = 0 && R1980 = R2034 && R1981 = 0 && R1982 = R2034 && R1983 = 0 && R1984 = R2034 && R1985 = 0 && R1986 = R2034 && R1987 = 0 && R1988 = R2034 && R1989 = 0 && R1990 = R2034 && R1991 = 0 && R1992 = R2034 && R1993 = 0 && R1994 = R2034 && R1995 = 0 && R1996 = R2034 && R1997 = 0 && R1998 = R2034 && R1999 = 0 && R2000 = R2034 && R2001 = 0 && R2002 = R2034 && R2003 = 0 && R2004 = R2034 && R2005 = 0 && R2006 = R2034 && R2007 = 0 && R2008 = R2034 && R2009 = 0 && R2010 = R2034 && R2011 = 0 && R2012 = R2034 && R2013 = 0 && R2014 = R2034 && R2015 = 0 && R2016 = R2034 && R2017 = 0 && R2018 = R2034 && R2019 = 0 && R2020 = R2034 && R2021 = 0 && R2022 = R2034 && R2023 = 0 && R2024 = R2034 && R2025 = 0 && R2026 = R2034 && R2027 = 0 && R2028 = R2034 && R2029 = 0 && R2030 = R2034 && R2031 = 0 && R2032 = R2034 && R2033 = 0 && R14 < 1 && R17 < 1 && R860 + R859 < 1 && -1*R880 + -1*R877 < 1 && R886 + R883 < 1 && -1*R1902 + -1*R1898 < 1 && 0 < R1934 && -1 < R2034 && (R878 + R875 != 0 || R879 + R876 + -1*R1902 + -1*R1898 = 0 || R880 + R877 < 1) && (R880 + R877 != 0 || R904 + R899 = 0 || (R893 + R889 = 0 && R894 + R890 = 0)) && (R880 + R877 != 0 || R904 + R899 = 0 || (R902 + R897 = 0 && R903 + R898 = 0)) && (R880 + R877 != 0 || R904 + R899 = 0 || (R911 + R907 = 0 && R912 + R908 = 0)) && (R880 + R877 != 0 || ((R878 + R875 != 0 || R879 + R876 + -1*R1902 + -1*R1898 = 0 || R1902 + R1898 < 1) && (R878 + R875 = 0 || R1902 + R1898 < 1))) && (R884 + R881 != 0 || R885 + R882 + -1*R1902 + -1*R1898 = 0 || (R880 + R877 = 0 && R1902 + R1898 = 0)) && (R891 + R887 != 0 || R892 + R888 + -1*R1902 + -1*R1898 = 0 || (R880 + R877 = 0 && R1902 + R1898 = 0)) && (R893 + R889 != 0 || R880 + R877 + -1*R894 + -1*R890 = 0 || R880 + R877 < 1) && (R900 + R895 != 0 || R901 + R896 + -1*R1902 + -1*R1898 = 0 || (R880 + R877 = 0 && R1902 + R1898 = 0)) && (R902 + R897 != 0 || R880 + R877 + -1*R903 + -1*R898 = 0 || R880 + R877 < 1) && (R909 + R905 != 0 || R910 + R906 + -1*R1902 + -1*R1898 = 0 || (R880 + R877 = 0 && R1902 + R1898 = 0)) && (R911 + R907 != 0 || R880 + R877 + -1*R912 + -1*R908 = 0 || R880 + R877 < 1) && (R918 + R913 != 0 || R919 + R914 + -1*R1902 + -1*R1898 = 0 || (R880 + R877 = 0 && R1902 + R1898 = 0)) && (R22 = 0 || (R1935 = 0 && R1936 = 0)) && (R22 = 0 || (R1939 = 0 && R1940 = 0)) && (R22 = 0 || (R1941 = 0 && R1942 = 0)) && (R22 = 0 || (R1943 = 0 && R1944 = 0)) && (R22 = 0 || (R1945 = 0 && R1946 = 0)) && (R22 = 0 || (R1947 = 0 && R1948 = 0)) && (R22 = 0 || (R1949 = 0 && R1950 = 0)) && (R22 = 0 || (R1951 = 0 && R1952 = 0)) && (R22 = 0 || (R1953 = 0 && R1954 = 0)) && (R22 = 0 || (R1955 = 0 && R1956 = 0)) && (R22 = 0 || (R1957 = 0 && R1958 = 0)) && (R22 = 0 || (R1959 = 0 && R1960 = 0)) && (R866 + R863 = 0 || (R864 + R861 = 0 && R865 + R862 = 0)) && (R866 + R863 = 0 || (R869 + R867 = 0 && R870 + R868 = 0)) && (R878 + R875 = 0 || R880 + R877 < 1) && (R884 + R881 = 0 || (R880 + R877 = 0 && R1902 + R1898 = 0)) && (R891 + R887 = 0 || (R880 + R877 = 0 && R1902 + R1898 = 0)) && (R893 + R889 = 0 || R880 + R877 < 1) && (R900 + R895 = 0 || (R880 + R877 = 0 && R1902 + R1898 = 0)) && (R902 + R897 = 0 || R880 + R877 < 1) && (R909 + R905 = 0 || (R880 + R877 = 0 && R1902 + R1898 = 0)) && (R911 + R907 = 0 || R880 + R877 < 1) && (R918 + R913 = 0 || (R880 + R877 = 0 && R1902 + R1898 = 0)) && (R922 + R917 = 0 || (R920 + R915 = 0 && R921 + R916 = 0));
// End of Parikh automata intersection problem
