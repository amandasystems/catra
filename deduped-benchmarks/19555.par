// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R11522, R11523, R11524, R11525, R11526, R11527, R11528, R11529, R11530, R11531, R12, R14072, R14073, R14074, R14075, R14498, R14499, R14500, R14501, R14502, R14503, R14816, R14817, R14818, R14819, R14820, R14821, R14822, R14823, R14824, R14825, R14826, R14827, R14828, R14829, R14830, R14831, R14832, R14833, R14834, R14835, R14836, R14837, R14838, R14839, R14840, R14841, R14842, R14843, R14844, R14845, R14846, R14847, R14848, R14849, R14850, R14851, R14852, R14853, R14854, R14855, R14856, R14857, R14858, R14859, R14860, R14861, R14862, R14863, R14864, R14865, R14866, R14867, R14868, R14869, R14870, R14871, R14872, R14873, R14874, R14875, R14876, R14877, R14878, R14879, R14880, R14881, R14882, R14883, R14884, R14885, R14886, R14887, R14888, R14889, R14890, R14891, R14892, R14893, R14894, R14895, R14896, R14897, R14898, R14899, R14900, R14901, R14902, R14903, R14904, R14905, R14906, R14907, R14908, R14909, R14910, R14911, R14912, R14913, R14914, R14915, R14916, R14917, R14918, R14919, R17, R18, R19, R2, R20, R21, R22, R23, R24, R25, R26, R27, R3, R38, R4, R40, R42, R43, R46, R47, R48, R52, R53, R56, R57, R58, R62, R63, R66, R67, R68, R69, R8;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [73, 73];
  s0 -> s0 [74, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [73, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R2 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R11 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 72];
  s0 -> s0 [0, 65535] { R12 += 1 };
  s0 -> s2 [73, 73];
  s0 -> s1 [74, 65535];
  s1 -> s1 [0, 72];
  s1 -> s2 [73, 73];
  s1 -> s1 [74, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R21 += 1 };
  s0 -> s0 [0, 65535] { R20 += 1, R21 += 1 };
  s0 -> s2 [9, 13] { R21 += 1 };
  s0 -> s1 [14, 31] { R21 += 1 };
  s0 -> s2 [32, 32] { R21 += 1 };
  s0 -> s1 [33, 65535] { R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R21 += 1 };
  s2 -> s1 [0, 65535] { R21 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s0 [0, 65535] { R22 += 1, R23 += 1 };
  s0 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s1 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R25 += 1 };
  s0 -> s0 [0, 65535] { R24 += 1, R25 += 1 };
  s0 -> s2 [9, 13] { R25 += 1 };
  s0 -> s1 [14, 31] { R25 += 1 };
  s0 -> s2 [32, 32] { R25 += 1 };
  s0 -> s1 [33, 65535] { R25 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R25 += 1 };
  s2 -> s1 [0, 65535] { R25 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R26 += 1, R27 += 1 };
  s1 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R14840 += 1, R14841 += 1 };
  s0 -> s1 [0, 65535] { R14841 += 1, R19 += 1 };
  s1 -> s1 [0, 65535] { R14841 += 1, R19 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 72] { R14843 += 1 };
  s0 -> s0 [0, 65535] { R14842 += 1, R14843 += 1 };
  s0 -> s2 [73, 73] { R14843 += 1 };
  s0 -> s3 [73, 73] { R14843 += 1 };
  s0 -> s1 [78, 65535] { R14843 += 1 };
  s1 -> s1 [0, 72] { R14843 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R14843 += 1 };
  s1 -> s3 [73, 73] { R14843 += 1 };
  s1 -> s1 [78, 65535] { R14843 += 1 };
  s2 -> s2 [0, 73] { R14843 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [78, 65535] { R14843 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 72] { R14845 += 1, R38 += 1 };
  s0 -> s0 [0, 65535] { R14844 += 1, R14845 += 1 };
  s0 -> s2 [73, 73] { R14845 += 1, R38 += 1 };
  s0 -> s3 [73, 73] { R14845 += 1, R38 += 1 };
  s0 -> s1 [74, 65535] { R14845 += 1, R38 += 1 };
  s1 -> s1 [0, 72] { R14845 += 1, R38 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R14845 += 1, R38 += 1 };
  s1 -> s3 [73, 73] { R14845 += 1, R38 += 1 };
  s1 -> s1 [74, 65535] { R14845 += 1, R38 += 1 };
  s2 -> s2 [0, 65535] { R14845 += 1, R38 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 72] { R14847 += 1, R40 += 1 };
  s0 -> s0 [0, 65535] { R14846 += 1, R14847 += 1 };
  s0 -> s2 [73, 73] { R14847 += 1, R40 += 1 };
  s0 -> s3 [73, 73] { R14847 += 1, R40 += 1 };
  s0 -> s1 [74, 65535] { R14847 += 1, R40 += 1 };
  s1 -> s1 [0, 72] { R14847 += 1, R40 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R14847 += 1, R40 += 1 };
  s1 -> s3 [73, 73] { R14847 += 1, R40 += 1 };
  s1 -> s1 [74, 65535] { R14847 += 1, R40 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R14847 += 1, R40 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 72] { R14849 += 1, R42 += 1, R43 += 1 };
  s0 -> s0 [0, 65535] { R14848 += 1, R14849 += 1 };
  s0 -> s2 [73, 73] { R14849 += 1, R42 += 1, R43 += 1 };
  s0 -> s3 [73, 73] { R14849 += 1, R42 += 1, R43 += 1 };
  s0 -> s1 [74, 65535] { R14849 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 72] { R14849 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R14849 += 1, R42 += 1, R43 += 1 };
  s1 -> s3 [73, 73] { R14849 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [74, 65535] { R14849 += 1, R42 += 1, R43 += 1 };
  s2 -> s2 [0, 65535] { R14849 += 1, R42 += 1, R43 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 72] { R14851 += 1, R46 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R14850 += 1, R14851 += 1 };
  s0 -> s2 [73, 73] { R14851 += 1, R46 += 1, R47 += 1 };
  s0 -> s3 [73, 73] { R14851 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [74, 65535] { R14851 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 72] { R14851 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R14851 += 1, R46 += 1, R47 += 1 };
  s1 -> s3 [73, 73] { R14851 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [74, 65535] { R14851 += 1, R46 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R14851 += 1, R46 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 72] { R14853 += 1, R52 += 1, R53 += 1 };
  s0 -> s0 [0, 65535] { R14852 += 1, R14853 += 1 };
  s0 -> s2 [73, 73] { R14853 += 1, R52 += 1, R53 += 1 };
  s0 -> s3 [73, 73] { R14853 += 1, R52 += 1, R53 += 1 };
  s0 -> s1 [74, 65535] { R14853 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 72] { R14853 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R14853 += 1, R52 += 1, R53 += 1 };
  s1 -> s3 [73, 73] { R14853 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [74, 65535] { R14853 += 1, R52 += 1, R53 += 1 };
  s2 -> s2 [0, 65535] { R14853 += 1, R52 += 1, R53 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 72] { R14855 += 1, R56 += 1, R57 += 1 };
  s0 -> s0 [0, 65535] { R14854 += 1, R14855 += 1 };
  s0 -> s2 [73, 73] { R14855 += 1, R56 += 1, R57 += 1 };
  s0 -> s3 [73, 73] { R14855 += 1, R56 += 1, R57 += 1 };
  s0 -> s1 [74, 65535] { R14855 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 72] { R14855 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R14855 += 1, R56 += 1, R57 += 1 };
  s1 -> s3 [73, 73] { R14855 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [74, 65535] { R14855 += 1, R56 += 1, R57 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R14855 += 1, R56 += 1, R57 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 72] { R14857 += 1, R62 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R14856 += 1, R14857 += 1 };
  s0 -> s2 [73, 73] { R14857 += 1, R62 += 1, R63 += 1 };
  s0 -> s3 [73, 73] { R14857 += 1, R62 += 1, R63 += 1 };
  s0 -> s1 [74, 65535] { R14857 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 72] { R14857 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R14857 += 1, R62 += 1, R63 += 1 };
  s1 -> s3 [73, 73] { R14857 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [74, 65535] { R14857 += 1, R62 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R14857 += 1, R62 += 1, R63 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 72] { R14877 += 1 };
  s0 -> s0 [0, 65535] { R14876 += 1, R14877 += 1 };
  s0 -> s2 [73, 73] { R14877 += 1 };
  s0 -> s1 [74, 65535] { R14877 += 1 };
  s1 -> s1 [0, 72] { R14877 += 1 };
  s1 -> s2 [73, 73] { R14877 += 1 };
  s1 -> s1 [74, 65535] { R14877 += 1 };
  s2 -> s2 [0, 65535] { R14877 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R14878 += 1, R14879 += 1 };
  s0 -> s1 [0, 65535] { R14879 += 1, R1 += 1 };
  s1 -> s1 [0, 65535] { R14879 += 1, R1 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 72] { R14881 += 1 };
  s0 -> s0 [0, 65535] { R14880 += 1, R14881 += 1 };
  s0 -> s2 [0, 65535] { R14881 += 1, R8 += 1 };
  s0 -> s3 [73, 73] { R14881 += 1 };
  s0 -> s1 [74, 65535] { R14881 += 1 };
  s1 -> s1 [0, 72] { R14881 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [73, 73] { R14881 += 1 };
  s1 -> s1 [74, 65535] { R14881 += 1 };
  s2 -> s1 [0, 72] { R14881 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R14881 += 1, R8 += 1 };
  s2 -> s3 [73, 73] { R14881 += 1 };
  s2 -> s1 [74, 65535] { R14881 += 1 };
  s3 -> s3 [0, 65535] { R14881 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 72] { R14883 += 1, R14821 += 1 };
  s0 -> s2 [0, 65535] { R14883 += 1, R14820 += 1, R14821 += 1 };
  s0 -> s0 [0, 65535] { R14882 += 1, R14883 += 1 };
  s0 -> s1 [74, 65535] { R14883 += 1, R14821 += 1 };
  s1 -> s1 [0, 72] { R14883 += 1, R14821 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R14883 += 1 };
  s1 -> s1 [74, 65535] { R14883 += 1, R14821 += 1 };
  s2 -> s1 [0, 72] { R14883 += 1, R14821 += 1 };
  s2 -> s2 [0, 65535] { R14883 += 1, R14820 += 1, R14821 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [74, 65535] { R14883 += 1, R14821 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s0 [0, 65535] { R14884 += 1, R14885 += 1 };
  s0 -> s1 [0, 65535] { R14885 += 1, R14823 += 1, R17 += 1 };
  s0 -> s2 [0, 65535] { R14885 += 1, R14822 += 1, R14823 += 1 };
  s1 -> s4 [0, 65535] { R14885 += 1 };
  s1 -> s1 [0, 65535] { R14885 += 1, R14823 += 1, R17 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R14885 += 1, R14823 += 1, R17 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R14885 += 1, R14822 += 1, R14823 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R14885 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 73] { R14887 += 1, R14825 += 1 };
  s0 -> s2 [0, 65535] { R14887 += 1, R14824 += 1, R14825 += 1 };
  s0 -> s0 [0, 65535] { R14886 += 1, R14887 += 1 };
  s0 -> s1 [77, 65535] { R14887 += 1, R14825 += 1 };
  s1 -> s1 [0, 73] { R14887 += 1, R14825 += 1 };
  s1 -> s1 [0, 65535] { R14887 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [77, 65535] { R14887 += 1, R14825 += 1 };
  s2 -> s1 [0, 73] { R14887 += 1, R14825 += 1 };
  s2 -> s2 [0, 65535] { R14887 += 1, R14824 += 1, R14825 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [77, 65535] { R14887 += 1, R14825 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R14889 += 1, R14826 += 1, R14827 += 1 };
  s0 -> s0 [0, 65535] { R14888 += 1, R14889 += 1 };
  s0 -> s2 [0, 65535] { R14889 += 1, R14827 += 1, R67 += 1 };
  s1 -> s1 [0, 65535] { R14889 += 1, R14826 += 1, R14827 += 1 };
  s1 -> s2 [0, 65535] { R14889 += 1, R14827 += 1, R67 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R14889 += 1 };
  s2 -> s2 [0, 65535] { R14889 += 1, R14827 += 1, R67 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R14889 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 76] { R14891 += 1, R14829 += 1 };
  s0 -> s2 [0, 65535] { R14891 += 1, R14828 += 1, R14829 += 1 };
  s0 -> s3 [0, 65535] { R14891 += 1, R14829 += 1, R69 += 1 };
  s0 -> s0 [0, 65535] { R14890 += 1, R14891 += 1 };
  s0 -> s1 [78, 65535] { R14891 += 1, R14829 += 1 };
  s1 -> s1 [0, 76] { R14891 += 1, R14829 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R14891 += 1 };
  s1 -> s1 [78, 65535] { R14891 += 1, R14829 += 1 };
  s2 -> s1 [0, 76] { R14891 += 1, R14829 += 1 };
  s2 -> s2 [0, 65535] { R14891 += 1, R14828 += 1, R14829 += 1 };
  s2 -> s3 [0, 65535] { R14891 += 1, R14829 += 1, R69 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [78, 65535] { R14891 += 1, R14829 += 1 };
  s3 -> s1 [0, 76] { R14891 += 1, R14829 += 1 };
  s3 -> s3 [0, 65535] { R14891 += 1, R14829 += 1, R69 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R14891 += 1 };
  s3 -> s1 [78, 65535] { R14891 += 1, R14829 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R14891 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 76] { R14893 += 1, R14831 += 1, R11525 += 1 };
  s0 -> s2 [0, 65535] { R14893 += 1, R14830 += 1, R14831 += 1 };
  s0 -> s0 [0, 65535] { R14892 += 1, R14893 += 1 };
  s0 -> s1 [0, 65535] { R14893 += 1, R14831 += 1 };
  s0 -> s1 [78, 65535] { R14893 += 1, R14831 += 1, R11525 += 1 };
  s1 -> s1 [0, 76] { R14893 += 1, R14831 += 1, R11525 += 1 };
  s1 -> s1 [0, 65535] { R14893 += 1, R14831 += 1 };
  s1 -> s4 [0, 65535] { R14893 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [78, 65535] { R14893 += 1, R14831 += 1, R11525 += 1 };
  s2 -> s1 [0, 76] { R14893 += 1, R14831 += 1, R11525 += 1 };
  s2 -> s2 [0, 65535] { R14893 += 1, R14830 += 1, R14831 += 1 };
  s2 -> s1 [0, 65535] { R14893 += 1, R14831 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [78, 65535] { R14893 += 1, R14831 += 1, R11525 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R14893 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R14895 += 1, R14833 += 1, R11529 += 1, R11530 += 1 };
  s0 -> s2 [0, 65535] { R14895 += 1, R14833 += 1, R11530 += 1, R11531 += 1 };
  s0 -> s0 [0, 65535] { R14894 += 1, R14895 += 1 };
  s0 -> s3 [0, 65535] { R14895 += 1, R14832 += 1, R14833 += 1 };
  s1 -> s1 [0, 65535] { R14895 += 1, R14833 += 1, R11529 += 1, R11530 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R14895 += 1, R14833 += 1, R11530 += 1, R11531 += 1 };
  s1 -> s5 [0, 65535] { R14895 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R14895 += 1, R14833 += 1, R11530 += 1, R11531 += 1 };
  s2 -> s5 [0, 65535] { R14895 += 1 };
  s2 -> s6 [0, 65535] { R14895 += 1, R14833 += 1 };
  s3 -> s1 [0, 65535] { R14895 += 1, R14833 += 1, R11529 += 1, R11530 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R14895 += 1, R14833 += 1, R11530 += 1, R11531 += 1 };
  s3 -> s3 [0, 65535] { R14895 += 1, R14832 += 1, R14833 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R14895 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R14895 += 1 };
  s6 -> s6 [0, 65535] { R14895 += 1, R14833 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 77] { R14897 += 1, R14835 += 1, R14075 += 1 };
  s0 -> s2 [0, 65535] { R14897 += 1, R14834 += 1, R14835 += 1 };
  s0 -> s0 [0, 65535] { R14896 += 1, R14897 += 1 };
  s0 -> s3 [86, 86] { R14897 += 1, R14835 += 1, R14075 += 1 };
  s0 -> s1 [87, 65535] { R14897 += 1, R14835 += 1, R14075 += 1 };
  s1 -> s1 [0, 77] { R14897 += 1, R14835 += 1, R14075 += 1 };
  s1 -> s3 [86, 86] { R14897 += 1, R14835 += 1, R14075 += 1 };
  s1 -> s1 [87, 65535] { R14897 += 1, R14835 += 1, R14075 += 1 };
  s2 -> s1 [0, 77] { R14897 += 1, R14835 += 1, R14075 += 1 };
  s2 -> s2 [0, 65535] { R14897 += 1, R14834 += 1, R14835 += 1 };
  s2 -> s3 [86, 86] { R14897 += 1, R14835 += 1, R14075 += 1 };
  s2 -> s1 [87, 65535] { R14897 += 1, R14835 += 1, R14075 += 1 };
  s3 -> s3 [0, 77] { R14897 += 1, R14835 += 1, R14075 += 1 };
  s3 -> s3 [0, 65535] { R14897 += 1, R14835 += 1 };
  s3 -> s4 [0, 65535] { R14897 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [86, 65535] { R14897 += 1, R14835 += 1, R14075 += 1 };
  s4 -> s4 [0, 65535] { R14897 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R14899 += 1, R14836 += 1, R14837 += 1 };
  s0 -> s0 [0, 65535] { R14898 += 1, R14899 += 1 };
  s0 -> s2 [0, 65535] { R14899 += 1, R14837 += 1, R14502 += 1, R14503 += 1 };
  s0 -> s3 [0, 65535] { R14899 += 1, R14837 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R14899 += 1, R14836 += 1, R14837 += 1 };
  s1 -> s2 [0, 65535] { R14899 += 1, R14837 += 1, R14502 += 1, R14503 += 1 };
  s1 -> s3 [0, 65535] { R14899 += 1, R14837 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R14899 += 1 };
  s2 -> s2 [0, 65535] { R14899 += 1, R14837 += 1, R14502 += 1, R14503 += 1 };
  s2 -> s3 [0, 65535] { R14899 += 1, R14837 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R14899 += 1 };
  s3 -> s3 [0, 65535] { R14899 += 1, R14837 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R14899 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 77] { R14901 += 1, R14839 += 1, R14819 += 1 };
  s0 -> s0 [0, 65535] { R14900 += 1, R14901 += 1 };
  s0 -> s2 [0, 65535] { R14901 += 1, R14838 += 1, R14839 += 1 };
  s0 -> s1 [0, 65535] { R14901 += 1, R14839 += 1 };
  s0 -> s1 [87, 65535] { R14901 += 1, R14839 += 1, R14819 += 1 };
  s1 -> s1 [0, 77] { R14901 += 1, R14839 += 1, R14819 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R14901 += 1 };
  s1 -> s1 [0, 65535] { R14901 += 1, R14839 += 1 };
  s1 -> s1 [87, 65535] { R14901 += 1, R14839 += 1, R14819 += 1 };
  s2 -> s1 [0, 77] { R14901 += 1, R14839 += 1, R14819 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R14901 += 1, R14838 += 1, R14839 += 1 };
  s2 -> s1 [0, 65535] { R14901 += 1, R14839 += 1 };
  s2 -> s1 [87, 65535] { R14901 += 1, R14839 += 1, R14819 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R14901 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R14903 += 1, R14858 += 1, R14859 += 1 };
  s0 -> s0 [0, 65535] { R14902 += 1, R14903 += 1 };
  s0 -> s2 [0, 65535] { R14903 += 1, R14859 += 1, R18 += 1 };
  s1 -> s1 [0, 65535] { R14903 += 1, R14858 += 1, R14859 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R14903 += 1, R14859 += 1, R18 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R14903 += 1 };
  s2 -> s2 [0, 65535] { R14903 += 1, R14859 += 1, R18 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R14903 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 72] { R14905 += 1, R14861 += 1 };
  s0 -> s0 [0, 65535] { R14904 += 1, R14905 += 1 };
  s0 -> s2 [0, 65535] { R14905 += 1, R14860 += 1, R14861 += 1 };
  s0 -> s3 [73, 73] { R14905 += 1, R14861 += 1 };
  s0 -> s4 [73, 73] { R14905 += 1, R14861 += 1 };
  s0 -> s5 [77, 77] { R14905 += 1, R14861 += 1 };
  s0 -> s1 [78, 65535] { R14905 += 1, R14861 += 1 };
  s1 -> s1 [0, 72] { R14905 += 1, R14861 += 1 };
  s1 -> s3 [73, 73] { R14905 += 1, R14861 += 1 };
  s1 -> s4 [73, 73] { R14905 += 1, R14861 += 1 };
  s1 -> s5 [77, 77] { R14905 += 1, R14861 += 1 };
  s1 -> s1 [78, 65535] { R14905 += 1, R14861 += 1 };
  s2 -> s1 [0, 72] { R14905 += 1, R14861 += 1 };
  s2 -> s2 [0, 65535] { R14905 += 1, R14860 += 1, R14861 += 1 };
  s2 -> s3 [73, 73] { R14905 += 1, R14861 += 1 };
  s2 -> s4 [73, 73] { R14905 += 1, R14861 += 1 };
  s2 -> s5 [77, 77] { R14905 += 1, R14861 += 1 };
  s2 -> s1 [78, 65535] { R14905 += 1, R14861 += 1 };
  s3 -> s3 [0, 73] { R14905 += 1, R14861 += 1 };
  s3 -> s7 [77, 77] { R14905 += 1, R14861 += 1 };
  s3 -> s3 [78, 65535] { R14905 += 1, R14861 += 1 };
  s5 -> s5 [0, 72] { R14905 += 1, R14861 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R14905 += 1 };
  s5 -> s7 [73, 73] { R14905 += 1, R14861 += 1 };
  s5 -> s8 [73, 73] { R14905 += 1, R14861 += 1 };
  s5 -> s5 [77, 65535] { R14905 += 1, R14861 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 73] { R14905 += 1, R14861 += 1 };
  s7 -> s7 [0, 65535] { R14905 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [77, 65535] { R14905 += 1, R14861 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R14905 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 72] { R14907 += 1, R14863 += 1, R66 += 1 };
  s0 -> s2 [0, 65535] { R14907 += 1, R14862 += 1, R14863 += 1 };
  s0 -> s0 [0, 65535] { R14906 += 1, R14907 += 1 };
  s0 -> s3 [73, 73] { R14907 += 1, R14863 += 1, R66 += 1 };
  s0 -> s4 [73, 73] { R14907 += 1, R14863 += 1, R66 += 1 };
  s0 -> s1 [74, 65535] { R14907 += 1, R14863 += 1, R66 += 1 };
  s1 -> s1 [0, 72] { R14907 += 1, R14863 += 1, R66 += 1 };
  s1 -> s1 [0, 65535] { R14907 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [73, 73] { R14907 += 1, R14863 += 1, R66 += 1 };
  s1 -> s4 [73, 73] { R14907 += 1, R14863 += 1, R66 += 1 };
  s1 -> s1 [74, 65535] { R14907 += 1, R14863 += 1, R66 += 1 };
  s2 -> s1 [0, 72] { R14907 += 1, R14863 += 1, R66 += 1 };
  s2 -> s2 [0, 65535] { R14907 += 1, R14862 += 1, R14863 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [73, 73] { R14907 += 1, R14863 += 1, R66 += 1 };
  s2 -> s4 [73, 73] { R14907 += 1, R14863 += 1, R66 += 1 };
  s2 -> s1 [74, 65535] { R14907 += 1, R14863 += 1, R66 += 1 };
  s3 -> s3 [0, 65535] { R14907 += 1, R14863 += 1, R66 += 1 };
  s3 -> s6 [0, 65535] { R14907 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R14907 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R14907 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 72] { R14909 += 1, R14865 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R14908 += 1, R14909 += 1 };
  s0 -> s2 [0, 65535] { R14909 += 1, R14864 += 1, R14865 += 1 };
  s0 -> s3 [73, 73] { R14909 += 1, R14865 += 1, R68 += 1 };
  s0 -> s4 [73, 73] { R14909 += 1, R14865 += 1, R68 += 1 };
  s0 -> s1 [74, 65535] { R14909 += 1, R14865 += 1, R68 += 1 };
  s1 -> s1 [0, 72] { R14909 += 1, R14865 += 1, R68 += 1 };
  s1 -> s1 [0, 65535] { R14909 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [73, 73] { R14909 += 1, R14865 += 1, R68 += 1 };
  s1 -> s4 [73, 73] { R14909 += 1, R14865 += 1, R68 += 1 };
  s1 -> s1 [74, 65535] { R14909 += 1, R14865 += 1, R68 += 1 };
  s2 -> s1 [0, 72] { R14909 += 1, R14865 += 1, R68 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R14909 += 1, R14864 += 1, R14865 += 1 };
  s2 -> s3 [73, 73] { R14909 += 1, R14865 += 1, R68 += 1 };
  s2 -> s4 [73, 73] { R14909 += 1, R14865 += 1, R68 += 1 };
  s2 -> s1 [74, 65535] { R14909 += 1, R14865 += 1, R68 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R14909 += 1, R14865 += 1, R68 += 1 };
  s3 -> s6 [0, 65535] { R14909 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R14909 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R14909 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 72] { R14911 += 1, R14867 += 1, R11523 += 1 };
  s0 -> s2 [0, 72] { R14911 += 1, R14867 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s0 [0, 65535] { R14910 += 1, R14911 += 1 };
  s0 -> s3 [0, 65535] { R14911 += 1, R14866 += 1, R14867 += 1 };
  s0 -> s4 [73, 73] { R14911 += 1, R14867 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s5 [73, 73] { R14911 += 1, R14867 += 1, R11523 += 1 };
  s0 -> s6 [73, 73] { R14911 += 1, R14867 += 1, R11523 += 1 };
  s0 -> s7 [73, 73] { R14911 += 1, R14867 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s1 [74, 76] { R14911 += 1, R14867 += 1, R11523 += 1 };
  s0 -> s2 [74, 65535] { R14911 += 1, R14867 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s1 [78, 65535] { R14911 += 1, R14867 += 1, R11523 += 1 };
  s1 -> s1 [0, 72] { R14911 += 1, R14867 += 1, R11523 += 1 };
  s1 -> s1 [0, 65535] { R14911 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s5 [73, 73] { R14911 += 1, R14867 += 1 };
  s1 -> s6 [73, 73] { R14911 += 1, R14867 += 1 };
  s1 -> s1 [74, 76] { R14911 += 1, R14867 += 1, R11523 += 1 };
  s1 -> s1 [74, 65535] { R14911 += 1, R14867 += 1 };
  s1 -> s1 [78, 65535] { R14911 += 1, R14867 += 1, R11523 += 1 };
  s2 -> s1 [0, 72] { R14911 += 1, R14867 += 1, R11523 += 1 };
  s2 -> s2 [0, 72] { R14911 += 1, R14867 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s4 [73, 73] { R14911 += 1, R14867 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s5 [73, 73] { R14911 += 1, R14867 += 1, R11523 += 1 };
  s2 -> s6 [73, 73] { R14911 += 1, R14867 += 1, R11523 += 1 };
  s2 -> s7 [73, 73] { R14911 += 1, R14867 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s1 [74, 76] { R14911 += 1, R14867 += 1, R11523 += 1 };
  s2 -> s2 [74, 65535] { R14911 += 1, R14867 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s1 [78, 65535] { R14911 += 1, R14867 += 1, R11523 += 1 };
  s3 -> s1 [0, 72] { R14911 += 1, R14867 += 1, R11523 += 1 };
  s3 -> s2 [0, 72] { R14911 += 1, R14867 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s3 [0, 65535] { R14911 += 1, R14866 += 1, R14867 += 1 };
  s3 -> s4 [73, 73] { R14911 += 1, R14867 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s5 [73, 73] { R14911 += 1, R14867 += 1, R11523 += 1 };
  s3 -> s6 [73, 73] { R14911 += 1, R14867 += 1, R11523 += 1 };
  s3 -> s7 [73, 73] { R14911 += 1, R14867 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s1 [74, 76] { R14911 += 1, R14867 += 1, R11523 += 1 };
  s3 -> s2 [74, 65535] { R14911 += 1, R14867 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s1 [78, 65535] { R14911 += 1, R14867 += 1, R11523 += 1 };
  s4 -> s6 [0, 76] { R14911 += 1, R14867 += 1, R11523 += 1 };
  s4 -> s4 [0, 65535] { R14911 += 1, R14867 += 1, R11522 += 1, R11523 += 1 };
  s4 -> s6 [78, 65535] { R14911 += 1, R14867 += 1, R11523 += 1 };
  s5 -> s5 [0, 65535] { R14911 += 1 };
  s5 -> s9 [0, 65535];
  s6 -> s6 [0, 76] { R14911 += 1, R14867 += 1, R11523 += 1 };
  s6 -> s8 [0, 65535] { R14911 += 1 };
  s6 -> s6 [0, 65535] { R14911 += 1, R14867 += 1 };
  s6 -> s9 [0, 65535];
  s6 -> s6 [78, 65535] { R14911 += 1, R14867 += 1, R11523 += 1 };
  s8 -> s8 [0, 65535] { R14911 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  accepting s8, s5, s9, s6, s1;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 72] { R14913 += 1, R14869 += 1, R11526 += 1, R11527 += 1 };
  s0 -> s0 [0, 65535] { R14912 += 1, R14913 += 1 };
  s0 -> s2 [0, 65535] { R14913 += 1, R14868 += 1, R14869 += 1 };
  s0 -> s3 [73, 73] { R14913 += 1, R14869 += 1, R11526 += 1, R11527 += 1 };
  s0 -> s4 [73, 73] { R14913 += 1, R14869 += 1, R11526 += 1, R11527 += 1 };
  s0 -> s1 [74, 65535] { R14913 += 1, R14869 += 1, R11526 += 1, R11527 += 1 };
  s1 -> s1 [0, 72] { R14913 += 1, R14869 += 1, R11526 += 1, R11527 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R14913 += 1 };
  s1 -> s3 [73, 73] { R14913 += 1, R14869 += 1, R11526 += 1, R11527 += 1 };
  s1 -> s4 [73, 73] { R14913 += 1, R14869 += 1, R11526 += 1, R11527 += 1 };
  s1 -> s1 [74, 65535] { R14913 += 1, R14869 += 1, R11526 += 1, R11527 += 1 };
  s2 -> s1 [0, 72] { R14913 += 1, R14869 += 1, R11526 += 1, R11527 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R14913 += 1, R14868 += 1, R14869 += 1 };
  s2 -> s3 [73, 73] { R14913 += 1, R14869 += 1, R11526 += 1, R11527 += 1 };
  s2 -> s4 [73, 73] { R14913 += 1, R14869 += 1, R11526 += 1, R11527 += 1 };
  s2 -> s1 [74, 65535] { R14913 += 1, R14869 += 1, R11526 += 1, R11527 += 1 };
  s3 -> s3 [0, 65535] { R14913 += 1, R14869 += 1, R11526 += 1, R11527 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R14913 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R14913 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R14913 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 72] { R14915 += 1, R14871 += 1, R14072 += 1, R14073 += 1 };
  s0 -> s2 [0, 72] { R14915 += 1, R14871 += 1, R14073 += 1 };
  s0 -> s0 [0, 65535] { R14914 += 1, R14915 += 1 };
  s0 -> s3 [0, 65535] { R14915 += 1, R14870 += 1, R14871 += 1 };
  s0 -> s4 [73, 73] { R14915 += 1, R14871 += 1, R14073 += 1 };
  s0 -> s5 [73, 73] { R14915 += 1, R14871 += 1, R14072 += 1, R14073 += 1 };
  s0 -> s6 [73, 73] { R14915 += 1, R14871 += 1, R14072 += 1, R14073 += 1 };
  s0 -> s7 [73, 73] { R14915 += 1, R14871 += 1, R14073 += 1 };
  s0 -> s2 [74, 77] { R14915 += 1, R14871 += 1, R14073 += 1 };
  s0 -> s1 [74, 65535] { R14915 += 1, R14871 += 1, R14072 += 1, R14073 += 1 };
  s0 -> s2 [87, 65535] { R14915 += 1, R14871 += 1, R14073 += 1 };
  s1 -> s1 [0, 72] { R14915 += 1, R14871 += 1, R14072 += 1, R14073 += 1 };
  s1 -> s2 [0, 72] { R14915 += 1, R14871 += 1, R14073 += 1 };
  s1 -> s4 [73, 73] { R14915 += 1, R14871 += 1, R14073 += 1 };
  s1 -> s5 [73, 73] { R14915 += 1, R14871 += 1, R14072 += 1, R14073 += 1 };
  s1 -> s6 [73, 73] { R14915 += 1, R14871 += 1, R14072 += 1, R14073 += 1 };
  s1 -> s7 [73, 73] { R14915 += 1, R14871 += 1, R14073 += 1 };
  s1 -> s2 [74, 77] { R14915 += 1, R14871 += 1, R14073 += 1 };
  s1 -> s1 [74, 65535] { R14915 += 1, R14871 += 1, R14072 += 1, R14073 += 1 };
  s1 -> s2 [87, 65535] { R14915 += 1, R14871 += 1, R14073 += 1 };
  s2 -> s2 [0, 72] { R14915 += 1, R14871 += 1, R14073 += 1 };
  s2 -> s2 [0, 65535] { R14915 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [73, 73] { R14915 += 1, R14871 += 1, R14073 += 1 };
  s2 -> s7 [73, 73] { R14915 += 1, R14871 += 1, R14073 += 1 };
  s2 -> s2 [74, 77] { R14915 += 1, R14871 += 1, R14073 += 1 };
  s2 -> s2 [87, 65535] { R14915 += 1, R14871 += 1, R14073 += 1 };
  s3 -> s1 [0, 72] { R14915 += 1, R14871 += 1, R14072 += 1, R14073 += 1 };
  s3 -> s2 [0, 72] { R14915 += 1, R14871 += 1, R14073 += 1 };
  s3 -> s3 [0, 65535] { R14915 += 1, R14870 += 1, R14871 += 1 };
  s3 -> s4 [73, 73] { R14915 += 1, R14871 += 1, R14073 += 1 };
  s3 -> s5 [73, 73] { R14915 += 1, R14871 += 1, R14072 += 1, R14073 += 1 };
  s3 -> s6 [73, 73] { R14915 += 1, R14871 += 1, R14072 += 1, R14073 += 1 };
  s3 -> s7 [73, 73] { R14915 += 1, R14871 += 1, R14073 += 1 };
  s3 -> s2 [74, 77] { R14915 += 1, R14871 += 1, R14073 += 1 };
  s3 -> s1 [74, 65535] { R14915 += 1, R14871 += 1, R14072 += 1, R14073 += 1 };
  s3 -> s2 [87, 65535] { R14915 += 1, R14871 += 1, R14073 += 1 };
  s4 -> s4 [0, 65535] { R14915 += 1 };
  s4 -> s8 [0, 65535];
  s6 -> s7 [0, 77] { R14915 += 1, R14871 += 1, R14073 += 1 };
  s6 -> s6 [0, 65535] { R14915 += 1, R14871 += 1, R14072 += 1, R14073 += 1 };
  s6 -> s7 [87, 65535] { R14915 += 1, R14871 += 1, R14073 += 1 };
  s7 -> s7 [0, 77] { R14915 += 1, R14871 += 1, R14073 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R14915 += 1 };
  s7 -> s7 [87, 65535] { R14915 += 1, R14871 += 1, R14073 += 1 };
  s8 -> s8 [0, 65535];
  accepting s2, s4, s7, s8;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 72] { R14917 += 1, R14873 += 1, R14499 += 1, R14500 += 1 };
  s0 -> s2 [0, 72] { R14917 += 1, R14873 += 1, R14498 += 1, R14499 += 1 };
  s0 -> s0 [0, 65535] { R14916 += 1, R14917 += 1 };
  s0 -> s3 [0, 65535] { R14917 += 1, R14872 += 1, R14873 += 1 };
  s0 -> s4 [73, 73] { R14917 += 1, R14873 += 1, R14499 += 1, R14500 += 1 };
  s0 -> s5 [73, 73] { R14917 += 1, R14873 += 1, R14498 += 1, R14499 += 1 };
  s0 -> s6 [73, 73] { R14917 += 1, R14873 += 1, R14498 += 1, R14499 += 1 };
  s0 -> s7 [73, 73] { R14917 += 1, R14873 += 1, R14499 += 1, R14500 += 1 };
  s0 -> s1 [74, 65535] { R14917 += 1, R14873 += 1, R14499 += 1, R14500 += 1 };
  s0 -> s2 [74, 65535] { R14917 += 1, R14873 += 1, R14498 += 1, R14499 += 1 };
  s1 -> s1 [0, 72] { R14917 += 1, R14873 += 1, R14499 += 1, R14500 += 1 };
  s1 -> s1 [0, 65535] { R14917 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [73, 73] { R14917 += 1, R14873 += 1, R14499 += 1, R14500 += 1 };
  s1 -> s7 [73, 73] { R14917 += 1, R14873 += 1, R14499 += 1, R14500 += 1 };
  s1 -> s1 [74, 65535] { R14917 += 1, R14873 += 1, R14499 += 1, R14500 += 1 };
  s2 -> s1 [0, 72] { R14917 += 1, R14873 += 1, R14499 += 1, R14500 += 1 };
  s2 -> s2 [0, 72] { R14917 += 1, R14873 += 1, R14498 += 1, R14499 += 1 };
  s2 -> s4 [73, 73] { R14917 += 1, R14873 += 1, R14499 += 1, R14500 += 1 };
  s2 -> s5 [73, 73] { R14917 += 1, R14873 += 1, R14498 += 1, R14499 += 1 };
  s2 -> s6 [73, 73] { R14917 += 1, R14873 += 1, R14498 += 1, R14499 += 1 };
  s2 -> s7 [73, 73] { R14917 += 1, R14873 += 1, R14499 += 1, R14500 += 1 };
  s2 -> s1 [74, 65535] { R14917 += 1, R14873 += 1, R14499 += 1, R14500 += 1 };
  s2 -> s2 [74, 65535] { R14917 += 1, R14873 += 1, R14498 += 1, R14499 += 1 };
  s3 -> s1 [0, 72] { R14917 += 1, R14873 += 1, R14499 += 1, R14500 += 1 };
  s3 -> s2 [0, 72] { R14917 += 1, R14873 += 1, R14498 += 1, R14499 += 1 };
  s3 -> s3 [0, 65535] { R14917 += 1, R14872 += 1, R14873 += 1 };
  s3 -> s4 [73, 73] { R14917 += 1, R14873 += 1, R14499 += 1, R14500 += 1 };
  s3 -> s5 [73, 73] { R14917 += 1, R14873 += 1, R14498 += 1, R14499 += 1 };
  s3 -> s6 [73, 73] { R14917 += 1, R14873 += 1, R14498 += 1, R14499 += 1 };
  s3 -> s7 [73, 73] { R14917 += 1, R14873 += 1, R14499 += 1, R14500 += 1 };
  s3 -> s1 [74, 65535] { R14917 += 1, R14873 += 1, R14499 += 1, R14500 += 1 };
  s3 -> s2 [74, 65535] { R14917 += 1, R14873 += 1, R14498 += 1, R14499 += 1 };
  s4 -> s4 [0, 65535] { R14917 += 1, R14873 += 1, R14499 += 1, R14500 += 1 };
  s4 -> s9 [0, 65535] { R14917 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s4 [0, 65535] { R14917 += 1, R14873 += 1, R14499 += 1, R14500 += 1 };
  s5 -> s5 [0, 65535] { R14917 += 1, R14873 += 1, R14498 += 1, R14499 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R14917 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R14917 += 1 };
  s9 -> s8 [0, 65535];
  accepting s4, s8, s9, s1, s7;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 72] { R14919 += 1, R14875 += 1, R14817 += 1 };
  s0 -> s2 [0, 72] { R14919 += 1, R14875 += 1, R14816 += 1, R14817 += 1 };
  s0 -> s0 [0, 65535] { R14918 += 1, R14919 += 1 };
  s0 -> s3 [0, 65535] { R14919 += 1, R14874 += 1, R14875 += 1 };
  s0 -> s4 [73, 73] { R14919 += 1, R14875 += 1, R14816 += 1, R14817 += 1 };
  s0 -> s5 [73, 73] { R14919 += 1, R14875 += 1, R14817 += 1 };
  s0 -> s6 [73, 73] { R14919 += 1, R14875 += 1, R14817 += 1 };
  s0 -> s7 [73, 73] { R14919 += 1, R14875 += 1, R14816 += 1, R14817 += 1 };
  s0 -> s1 [74, 76] { R14919 += 1, R14875 += 1, R14817 += 1 };
  s0 -> s2 [74, 65535] { R14919 += 1, R14875 += 1, R14816 += 1, R14817 += 1 };
  s0 -> s8 [77, 77] { R14919 += 1, R14875 += 1, R14817 += 1 };
  s0 -> s1 [87, 65535] { R14919 += 1, R14875 += 1, R14817 += 1 };
  s1 -> s1 [0, 72] { R14919 += 1, R14875 += 1, R14817 += 1 };
  s1 -> s5 [73, 73] { R14919 += 1, R14875 += 1 };
  s1 -> s6 [73, 73] { R14919 += 1, R14875 += 1 };
  s1 -> s1 [74, 76] { R14919 += 1, R14875 += 1, R14817 += 1 };
  s1 -> s1 [74, 65535] { R14919 += 1, R14875 += 1 };
  s1 -> s8 [77, 77] { R14919 += 1, R14875 += 1, R14817 += 1 };
  s1 -> s1 [87, 65535] { R14919 += 1, R14875 += 1, R14817 += 1 };
  s2 -> s1 [0, 72] { R14919 += 1, R14875 += 1, R14817 += 1 };
  s2 -> s2 [0, 72] { R14919 += 1, R14875 += 1, R14816 += 1, R14817 += 1 };
  s2 -> s4 [73, 73] { R14919 += 1, R14875 += 1, R14816 += 1, R14817 += 1 };
  s2 -> s5 [73, 73] { R14919 += 1, R14875 += 1, R14817 += 1 };
  s2 -> s6 [73, 73] { R14919 += 1, R14875 += 1, R14817 += 1 };
  s2 -> s7 [73, 73] { R14919 += 1, R14875 += 1, R14816 += 1, R14817 += 1 };
  s2 -> s1 [74, 76] { R14919 += 1, R14875 += 1, R14817 += 1 };
  s2 -> s2 [74, 65535] { R14919 += 1, R14875 += 1, R14816 += 1, R14817 += 1 };
  s2 -> s8 [77, 77] { R14919 += 1, R14875 += 1, R14817 += 1 };
  s2 -> s1 [87, 65535] { R14919 += 1, R14875 += 1, R14817 += 1 };
  s3 -> s1 [0, 72] { R14919 += 1, R14875 += 1, R14817 += 1 };
  s3 -> s2 [0, 72] { R14919 += 1, R14875 += 1, R14816 += 1, R14817 += 1 };
  s3 -> s3 [0, 65535] { R14919 += 1, R14874 += 1, R14875 += 1 };
  s3 -> s4 [73, 73] { R14919 += 1, R14875 += 1, R14816 += 1, R14817 += 1 };
  s3 -> s5 [73, 73] { R14919 += 1, R14875 += 1, R14817 += 1 };
  s3 -> s6 [73, 73] { R14919 += 1, R14875 += 1, R14817 += 1 };
  s3 -> s7 [73, 73] { R14919 += 1, R14875 += 1, R14816 += 1, R14817 += 1 };
  s3 -> s1 [74, 76] { R14919 += 1, R14875 += 1, R14817 += 1 };
  s3 -> s2 [74, 65535] { R14919 += 1, R14875 += 1, R14816 += 1, R14817 += 1 };
  s3 -> s8 [77, 77] { R14919 += 1, R14875 += 1, R14817 += 1 };
  s3 -> s1 [87, 65535] { R14919 += 1, R14875 += 1, R14817 += 1 };
  s5 -> s5 [0, 76] { R14919 += 1, R14875 += 1, R14817 += 1 };
  s5 -> s5 [0, 65535] { R14919 += 1, R14875 += 1 };
  s5 -> s10 [77, 77] { R14919 += 1, R14875 += 1, R14817 += 1 };
  s5 -> s5 [87, 65535] { R14919 += 1, R14875 += 1, R14817 += 1 };
  s7 -> s5 [0, 76] { R14919 += 1, R14875 += 1, R14817 += 1 };
  s7 -> s7 [0, 65535] { R14919 += 1, R14875 += 1, R14816 += 1, R14817 += 1 };
  s7 -> s10 [77, 77] { R14919 += 1, R14875 += 1, R14817 += 1 };
  s7 -> s5 [87, 65535] { R14919 += 1, R14875 += 1, R14817 += 1 };
  s8 -> s8 [0, 72] { R14919 += 1, R14875 += 1, R14817 += 1 };
  s8 -> s8 [0, 65535] { R14919 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [73, 73] { R14919 += 1, R14875 += 1 };
  s8 -> s11 [73, 73] { R14919 += 1, R14875 += 1 };
  s8 -> s8 [74, 77] { R14919 += 1, R14875 += 1, R14817 += 1 };
  s8 -> s8 [74, 65535] { R14919 += 1, R14875 += 1 };
  s8 -> s8 [87, 65535] { R14919 += 1, R14875 += 1, R14817 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 77] { R14919 += 1, R14875 += 1, R14817 += 1 };
  s10 -> s9 [0, 65535];
  s10 -> s12 [0, 65535] { R14919 += 1 };
  s10 -> s10 [0, 65535] { R14919 += 1, R14875 += 1 };
  s10 -> s10 [87, 65535] { R14919 += 1, R14875 += 1, R14817 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R14919 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R14919 += 1 };
  accepting s12, s8, s9, s10, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [105, 105];
  accepting s1;
};
};
synchronised {  // Automata constraining P54
automaton P54_0 {
  init s0;
  s0 -> s1 [109, 109];
  accepting s1;
};
};
constraint R1 = R14835 && R2 = R14919 && R20 - R14919 = -1 && R21 = R14919 && R22 - R14919 = -1 && R23 = R14919 && R24 = 0 && R25 = 1 && R26 = 0 && R27 = 1 && R38 + R67 + R66 + -1*R14075 + -1*R14073 - R53 = 0 && R52 + R14074 + R14072 = 0 && R14834 = 0 && R14860 = 0 && R14861 = 0 && R14866 = 0 && R14867 = 0 && R14870 = 0 && R14871 = 0 && R14872 = 0 && R14873 = 0 && R14874 = 0 && R14875 = 0 && R14876 = 0 && R14877 = R14919 && R14878 = 0 && R14879 = R14919 && R14880 = 0 && R14881 = R14919 && R14882 = 0 && R14883 = R14919 && R14884 = 0 && R14885 = R14919 && R14886 = 0 && R14887 = R14919 && R14888 = 0 && R14889 = R14919 && R14890 = 0 && R14891 = R14919 && R14892 = 0 && R14893 = R14919 && R14894 = 0 && R14895 = R14919 && R14896 = 0 && R14897 = R14919 && R14898 = 0 && R14899 = R14919 && R14900 = 0 && R14901 = R14919 && R14902 = 0 && R14903 = R14919 && R14904 = 0 && R14905 = R14919 && R14906 = 0 && R14907 = R14919 && R14908 = 0 && R14909 = R14919 && R14910 = 0 && R14911 = R14919 && R14912 = 0 && R14913 = R14919 && R14914 = 0 && R14915 = R14919 && R14916 = 0 && R14917 = R14919 && R14918 = 0 && R8 < 1 && R11 < 1 && R12 < 1 && R40 + R69 + R68 < 1 && -1*R14075 + -1*R14073 - R53 < 1 && -1 < R14835 && 0 < R14919 && (R48 + R11531 + R11528 != 0 || ((R42 + R11524 + R11522 != 0 || R43 + R11525 + R11523 + -1*R14075 + -1*R14073 - R53 = 0 || R53 + R14075 + R14073 < 1) && (R42 + R11524 + R11522 = 0 || R53 + R14075 + R14073 < 1))) && (R48 + R11531 + R11528 != 0 || ((R46 + R11529 + R11526 != 0 || R47 + R11530 + R11527 + -1*R14075 + -1*R14073 - R53 = 0 || R53 + R14075 + R14073 < 1) && (R46 + R11529 + R11526 = 0 || R53 + R14075 + R14073 < 1))) && (R14820 != 0 || R14821 = R14835 || (R17 = 0 && R14835 = 0)) && (R14822 != 0 || R14823 = R14835 || (R17 = 0 && R14835 = 0)) && (R14824 != 0 || R14825 = R14835 || (R17 = 0 && R14835 = 0)) && (R14826 != 0 || R14827 = R14835 || (R17 = 0 && R14835 = 0)) && (R14828 != 0 || R14829 = R14835 || (R17 = 0 && R14835 = 0)) && (R14830 != 0 || R14831 = R14835 || (R17 = 0 && R14835 = 0)) && (R14832 != 0 || R14833 = R14835 || (R17 = 0 && R14835 = 0)) && (R14836 != 0 || R14835 = R14837 || (R17 = 0 && R14835 = 0)) && (R14838 != 0 || R14835 = R14839 || (R17 = 0 && R14835 = 0)) && (R18 = 0 || (R14858 = 0 && R14859 = 0)) && (R18 = 0 || (R14862 = 0 && R14863 = 0)) && (R18 = 0 || (R14864 = 0 && R14865 = 0)) && (R18 = 0 || (R14868 = 0 && R14869 = 0)) && (R19 = 0 || (R14840 = 0 && R14841 = 0)) && (R19 = 0 || (R14842 = 0 && R14843 = 0)) && (R19 = 0 || (R14844 = 0 && R14845 = 0)) && (R19 = 0 || (R14846 = 0 && R14847 = 0)) && (R19 = 0 || (R14848 = 0 && R14849 = 0)) && (R19 = 0 || (R14850 = 0 && R14851 = 0)) && (R19 = 0 || (R14852 = 0 && R14853 = 0)) && (R19 = 0 || (R14854 = 0 && R14855 = 0)) && (R19 = 0 || (R14856 = 0 && R14857 = 0)) && (R48 + R11531 + R11528 = 0 || (R42 + R11524 + R11522 = 0 && R43 + R11525 + R11523 + -1*R14075 + -1*R14073 - R53 = 0)) && (R48 + R11531 + R11528 = 0 || (R46 + R11529 + R11526 = 0 && R47 + R11530 + R11527 + -1*R14075 + -1*R14073 - R53 = 0)) && (R58 + R14503 + R14500 = 0 || (R56 + R14501 + R14498 = 0 && R57 + R14502 + R14499 = 0)) && (R58 + R14503 + R14500 = 0 || (R62 + R14818 + R14816 = 0 && R63 + R14819 + R14817 = 0)) && (R14820 = 0 || (R17 = 0 && R14835 = 0)) && (R14822 = 0 || (R17 = 0 && R14835 = 0)) && (R14824 = 0 || (R17 = 0 && R14835 = 0)) && (R14826 = 0 || (R17 = 0 && R14835 = 0)) && (R14828 = 0 || (R17 = 0 && R14835 = 0)) && (R14830 = 0 || (R17 = 0 && R14835 = 0)) && (R14832 = 0 || (R17 = 0 && R14835 = 0)) && (R14836 = 0 || (R17 = 0 && R14835 = 0)) && (R14838 = 0 || (R17 = 0 && R14835 = 0));
// End of Parikh automata intersection problem
