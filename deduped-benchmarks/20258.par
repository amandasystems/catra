// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R12, R17, R18, R19, R2, R20, R21, R22, R23, R24, R25, R26, R27, R3, R38, R3890, R3891, R3892, R3893, R3894, R3895, R3896, R3897, R3898, R3899, R3900, R3901, R3902, R3903, R3904, R3905, R4, R40, R4114, R4115, R4116, R4117, R4118, R4119, R4120, R4121, R4122, R4123, R4124, R4125, R4126, R4127, R4128, R4129, R4130, R4131, R4132, R4133, R4134, R4135, R4136, R4137, R4138, R4139, R4140, R4141, R4142, R4143, R4144, R4145, R4146, R4147, R4148, R4149, R4150, R4151, R4152, R4153, R4154, R4155, R4156, R4157, R4158, R4159, R4160, R4161, R4162, R4163, R4164, R4165, R4166, R4167, R4168, R4169, R4170, R4171, R4172, R4173, R4174, R4175, R4176, R4177, R4178, R4179, R4180, R4181, R4182, R4183, R4184, R4185, R4186, R4187, R4188, R4189, R4190, R4191, R4192, R4193, R4194, R4195, R4196, R4197, R4198, R4199, R42, R4200, R4201, R4202, R4203, R4204, R4205, R4206, R4207, R4208, R4209, R4210, R4211, R4212, R4213, R4214, R4215, R4216, R4217, R43, R46, R47, R48, R52, R53, R56, R57, R58, R62, R63, R66, R67, R68, R69, R70, R71, R72, R73, R8;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [81, 81];
  s0 -> s0 [82, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [81, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R2 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R11 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 80];
  s0 -> s0 [0, 65535] { R12 += 1 };
  s0 -> s2 [81, 81];
  s0 -> s1 [82, 65535];
  s1 -> s1 [0, 80];
  s1 -> s2 [81, 81];
  s1 -> s1 [82, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R21 += 1 };
  s0 -> s0 [0, 65535] { R20 += 1, R21 += 1 };
  s0 -> s2 [9, 13] { R21 += 1 };
  s0 -> s1 [14, 31] { R21 += 1 };
  s0 -> s2 [32, 32] { R21 += 1 };
  s0 -> s1 [33, 65535] { R21 += 1 };
  s1 -> s1 [0, 65535] { R21 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R21 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R22 += 1, R23 += 1 };
  s1 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R25 += 1 };
  s0 -> s0 [0, 65535] { R24 += 1, R25 += 1 };
  s0 -> s2 [9, 13] { R25 += 1 };
  s0 -> s1 [14, 31] { R25 += 1 };
  s0 -> s2 [32, 32] { R25 += 1 };
  s0 -> s1 [33, 65535] { R25 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R25 += 1 };
  s2 -> s1 [0, 65535] { R25 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R26 += 1, R27 += 1 };
  s0 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R4138 += 1, R4139 += 1 };
  s0 -> s1 [0, 65535] { R4139 += 1, R19 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R4139 += 1, R19 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 80] { R4141 += 1 };
  s0 -> s0 [0, 65535] { R4140 += 1, R4141 += 1 };
  s0 -> s2 [81, 81] { R4141 += 1 };
  s0 -> s3 [81, 81] { R4141 += 1 };
  s0 -> s1 [83, 65535] { R4141 += 1 };
  s1 -> s1 [0, 80] { R4141 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [81, 81] { R4141 += 1 };
  s1 -> s3 [81, 81] { R4141 += 1 };
  s1 -> s1 [83, 65535] { R4141 += 1 };
  s2 -> s2 [0, 81] { R4141 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [83, 65535] { R4141 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 80] { R4143 += 1, R38 += 1 };
  s0 -> s0 [0, 65535] { R4142 += 1, R4143 += 1 };
  s0 -> s2 [81, 81] { R4143 += 1, R38 += 1 };
  s0 -> s3 [81, 81] { R4143 += 1, R38 += 1 };
  s0 -> s1 [82, 65535] { R4143 += 1, R38 += 1 };
  s1 -> s1 [0, 80] { R4143 += 1, R38 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [81, 81] { R4143 += 1, R38 += 1 };
  s1 -> s3 [81, 81] { R4143 += 1, R38 += 1 };
  s1 -> s1 [82, 65535] { R4143 += 1, R38 += 1 };
  s2 -> s2 [0, 65535] { R4143 += 1, R38 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 80] { R4145 += 1, R40 += 1 };
  s0 -> s0 [0, 65535] { R4144 += 1, R4145 += 1 };
  s0 -> s2 [81, 81] { R4145 += 1, R40 += 1 };
  s0 -> s3 [81, 81] { R4145 += 1, R40 += 1 };
  s0 -> s1 [82, 65535] { R4145 += 1, R40 += 1 };
  s1 -> s1 [0, 80] { R4145 += 1, R40 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [81, 81] { R4145 += 1, R40 += 1 };
  s1 -> s3 [81, 81] { R4145 += 1, R40 += 1 };
  s1 -> s1 [82, 65535] { R4145 += 1, R40 += 1 };
  s2 -> s2 [0, 65535] { R4145 += 1, R40 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 80] { R4147 += 1, R42 += 1, R43 += 1 };
  s0 -> s0 [0, 65535] { R4146 += 1, R4147 += 1 };
  s0 -> s2 [81, 81] { R4147 += 1, R42 += 1, R43 += 1 };
  s0 -> s3 [81, 81] { R4147 += 1, R42 += 1, R43 += 1 };
  s0 -> s1 [82, 65535] { R4147 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 80] { R4147 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [81, 81] { R4147 += 1, R42 += 1, R43 += 1 };
  s1 -> s3 [81, 81] { R4147 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [82, 65535] { R4147 += 1, R42 += 1, R43 += 1 };
  s2 -> s2 [0, 65535] { R4147 += 1, R42 += 1, R43 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 80] { R4149 += 1, R46 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R4148 += 1, R4149 += 1 };
  s0 -> s2 [81, 81] { R4149 += 1, R46 += 1, R47 += 1 };
  s0 -> s3 [81, 81] { R4149 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [82, 65535] { R4149 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 80] { R4149 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [81, 81] { R4149 += 1, R46 += 1, R47 += 1 };
  s1 -> s3 [81, 81] { R4149 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [82, 65535] { R4149 += 1, R46 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R4149 += 1, R46 += 1, R47 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 80] { R4151 += 1, R52 += 1, R53 += 1 };
  s0 -> s0 [0, 65535] { R4150 += 1, R4151 += 1 };
  s0 -> s2 [81, 81] { R4151 += 1, R52 += 1, R53 += 1 };
  s0 -> s3 [81, 81] { R4151 += 1, R52 += 1, R53 += 1 };
  s0 -> s1 [82, 65535] { R4151 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 80] { R4151 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [81, 81] { R4151 += 1, R52 += 1, R53 += 1 };
  s1 -> s3 [81, 81] { R4151 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [82, 65535] { R4151 += 1, R52 += 1, R53 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4151 += 1, R52 += 1, R53 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 80] { R4153 += 1, R56 += 1, R57 += 1 };
  s0 -> s0 [0, 65535] { R4152 += 1, R4153 += 1 };
  s0 -> s2 [81, 81] { R4153 += 1, R56 += 1, R57 += 1 };
  s0 -> s3 [81, 81] { R4153 += 1, R56 += 1, R57 += 1 };
  s0 -> s1 [82, 65535] { R4153 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 80] { R4153 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [81, 81] { R4153 += 1, R56 += 1, R57 += 1 };
  s1 -> s3 [81, 81] { R4153 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [82, 65535] { R4153 += 1, R56 += 1, R57 += 1 };
  s2 -> s2 [0, 65535] { R4153 += 1, R56 += 1, R57 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 80] { R4155 += 1, R62 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R4154 += 1, R4155 += 1 };
  s0 -> s2 [81, 81] { R4155 += 1, R62 += 1, R63 += 1 };
  s0 -> s3 [81, 81] { R4155 += 1, R62 += 1, R63 += 1 };
  s0 -> s1 [82, 65535] { R4155 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 80] { R4155 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [81, 81] { R4155 += 1, R62 += 1, R63 += 1 };
  s1 -> s3 [81, 81] { R4155 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [82, 65535] { R4155 += 1, R62 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R4155 += 1, R62 += 1, R63 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 80] { R4175 += 1 };
  s0 -> s0 [0, 65535] { R4174 += 1, R4175 += 1 };
  s0 -> s2 [81, 81] { R4175 += 1 };
  s0 -> s1 [82, 65535] { R4175 += 1 };
  s1 -> s1 [0, 80] { R4175 += 1 };
  s1 -> s2 [81, 81] { R4175 += 1 };
  s1 -> s1 [82, 65535] { R4175 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4175 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R4177 += 1, R1 += 1 };
  s0 -> s0 [0, 65535] { R4176 += 1, R4177 += 1 };
  s1 -> s1 [0, 65535] { R4177 += 1, R1 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 80] { R4179 += 1 };
  s0 -> s2 [0, 65535] { R4179 += 1, R8 += 1 };
  s0 -> s0 [0, 65535] { R4178 += 1, R4179 += 1 };
  s0 -> s3 [81, 81] { R4179 += 1 };
  s0 -> s1 [82, 65535] { R4179 += 1 };
  s1 -> s1 [0, 80] { R4179 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [81, 81] { R4179 += 1 };
  s1 -> s1 [82, 65535] { R4179 += 1 };
  s2 -> s1 [0, 80] { R4179 += 1 };
  s2 -> s2 [0, 65535] { R4179 += 1, R8 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [81, 81] { R4179 += 1 };
  s2 -> s1 [82, 65535] { R4179 += 1 };
  s3 -> s3 [0, 65535] { R4179 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 80] { R4181 += 1, R4119 += 1 };
  s0 -> s0 [0, 65535] { R4180 += 1, R4181 += 1 };
  s0 -> s2 [0, 65535] { R4181 += 1, R4118 += 1, R4119 += 1 };
  s0 -> s1 [82, 65535] { R4181 += 1, R4119 += 1 };
  s1 -> s1 [0, 80] { R4181 += 1, R4119 += 1 };
  s1 -> s1 [0, 65535] { R4181 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [82, 65535] { R4181 += 1, R4119 += 1 };
  s2 -> s1 [0, 80] { R4181 += 1, R4119 += 1 };
  s2 -> s2 [0, 65535] { R4181 += 1, R4118 += 1, R4119 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [82, 65535] { R4181 += 1, R4119 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R4183 += 1, R4120 += 1, R4121 += 1 };
  s0 -> s0 [0, 65535] { R4182 += 1, R4183 += 1 };
  s0 -> s2 [0, 65535] { R4183 += 1, R4121 += 1, R17 += 1 };
  s1 -> s1 [0, 65535] { R4183 += 1, R4120 += 1, R4121 += 1 };
  s1 -> s2 [0, 65535] { R4183 += 1, R4121 += 1, R17 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R4183 += 1 };
  s2 -> s2 [0, 65535] { R4183 += 1, R4121 += 1, R17 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4183 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 65535] { R4185 += 1, R4123 += 1 };
  s0 -> s0 [0, 65535] { R4184 += 1, R4185 += 1 };
  s0 -> s2 [0, 65535] { R4185 += 1, R4122 += 1, R4123 += 1 };
  s1 -> s4 [0, 65535] { R4185 += 1 };
  s1 -> s1 [0, 65535] { R4185 += 1, R4123 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4185 += 1, R4123 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4185 += 1, R4122 += 1, R4123 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4185 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R4187 += 1, R4124 += 1, R4125 += 1 };
  s0 -> s2 [0, 65535] { R4187 += 1, R4125 += 1, R67 += 1 };
  s0 -> s0 [0, 65535] { R4186 += 1, R4187 += 1 };
  s1 -> s1 [0, 65535] { R4187 += 1, R4124 += 1, R4125 += 1 };
  s1 -> s2 [0, 65535] { R4187 += 1, R4125 += 1, R67 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4187 += 1, R4125 += 1, R67 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R4187 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4187 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 81] { R4189 += 1, R4127 += 1 };
  s0 -> s2 [0, 65535] { R4189 += 1, R4126 += 1, R4127 += 1 };
  s0 -> s0 [0, 65535] { R4188 += 1, R4189 += 1 };
  s0 -> s3 [0, 65535] { R4189 += 1, R4127 += 1, R69 += 1 };
  s0 -> s1 [83, 65535] { R4189 += 1, R4127 += 1 };
  s1 -> s1 [0, 81] { R4189 += 1, R4127 += 1 };
  s1 -> s1 [0, 65535] { R4189 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [83, 65535] { R4189 += 1, R4127 += 1 };
  s2 -> s1 [0, 81] { R4189 += 1, R4127 += 1 };
  s2 -> s2 [0, 65535] { R4189 += 1, R4126 += 1, R4127 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R4189 += 1, R4127 += 1, R69 += 1 };
  s2 -> s1 [83, 65535] { R4189 += 1, R4127 += 1 };
  s3 -> s1 [0, 81] { R4189 += 1, R4127 += 1 };
  s3 -> s4 [0, 65535] { R4189 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4189 += 1, R4127 += 1, R69 += 1 };
  s3 -> s1 [83, 65535] { R4189 += 1, R4127 += 1 };
  s4 -> s4 [0, 65535] { R4189 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 81] { R4191 += 1, R4129 += 1, R73 += 1 };
  s0 -> s2 [0, 65535] { R4191 += 1, R4129 += 1, R72 += 1, R73 += 1 };
  s0 -> s0 [0, 65535] { R4190 += 1, R4191 += 1 };
  s0 -> s3 [0, 65535] { R4191 += 1, R4128 += 1, R4129 += 1 };
  s0 -> s1 [83, 65535] { R4191 += 1, R4129 += 1, R73 += 1 };
  s1 -> s1 [0, 81] { R4191 += 1, R4129 += 1, R73 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R4191 += 1 };
  s1 -> s1 [0, 65535] { R4191 += 1, R4129 += 1 };
  s1 -> s1 [83, 65535] { R4191 += 1, R4129 += 1, R73 += 1 };
  s2 -> s1 [0, 81] { R4191 += 1, R4129 += 1, R73 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R4191 += 1 };
  s2 -> s2 [0, 65535] { R4191 += 1, R4129 += 1, R72 += 1, R73 += 1 };
  s2 -> s1 [83, 65535] { R4191 += 1, R4129 += 1, R73 += 1 };
  s3 -> s1 [0, 81] { R4191 += 1, R4129 += 1, R73 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R4191 += 1, R4129 += 1, R72 += 1, R73 += 1 };
  s3 -> s3 [0, 65535] { R4191 += 1, R4128 += 1, R4129 += 1 };
  s3 -> s1 [83, 65535] { R4191 += 1, R4129 += 1, R73 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4191 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R4192 += 1, R4193 += 1 };
  s0 -> s1 [0, 65535] { R4193 += 1, R4131 += 1, R3894 += 1, R3895 += 1 };
  s0 -> s2 [0, 65535] { R4193 += 1, R4131 += 1 };
  s0 -> s3 [0, 65535] { R4193 += 1, R4130 += 1, R4131 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R4193 += 1, R4131 += 1, R3894 += 1, R3895 += 1 };
  s1 -> s2 [0, 65535] { R4193 += 1, R4131 += 1 };
  s1 -> s5 [0, 65535] { R4193 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4193 += 1, R4131 += 1 };
  s2 -> s5 [0, 65535] { R4193 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R4193 += 1, R4131 += 1, R3894 += 1, R3895 += 1 };
  s3 -> s2 [0, 65535] { R4193 += 1, R4131 += 1 };
  s3 -> s3 [0, 65535] { R4193 += 1, R4130 += 1, R4131 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4193 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 82] { R4195 += 1, R4133 += 1, R3899 += 1 };
  s0 -> s2 [0, 65535] { R4195 += 1, R4132 += 1, R4133 += 1 };
  s0 -> s1 [0, 65535] { R4195 += 1, R4133 += 1 };
  s0 -> s0 [0, 65535] { R4194 += 1, R4195 += 1 };
  s0 -> s1 [90, 65535] { R4195 += 1, R4133 += 1, R3899 += 1 };
  s1 -> s1 [0, 82] { R4195 += 1, R4133 += 1, R3899 += 1 };
  s1 -> s4 [0, 65535] { R4195 += 1 };
  s1 -> s1 [0, 65535] { R4195 += 1, R4133 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [90, 65535] { R4195 += 1, R4133 += 1, R3899 += 1 };
  s2 -> s1 [0, 82] { R4195 += 1, R4133 += 1, R3899 += 1 };
  s2 -> s2 [0, 65535] { R4195 += 1, R4132 += 1, R4133 += 1 };
  s2 -> s1 [0, 65535] { R4195 += 1, R4133 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [90, 65535] { R4195 += 1, R4133 += 1, R3899 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4195 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s0 [0, 65535] { R4196 += 1, R4197 += 1 };
  s0 -> s1 [0, 65535] { R4197 += 1, R4135 += 1, R3904 += 1, R3905 += 1 };
  s0 -> s2 [0, 65535] { R4197 += 1, R4135 += 1, R3903 += 1, R3904 += 1 };
  s0 -> s3 [0, 65535] { R4197 += 1, R4134 += 1, R4135 += 1 };
  s1 -> s1 [0, 65535] { R4197 += 1, R4135 += 1, R3904 += 1, R3905 += 1 };
  s1 -> s6 [0, 65535] { R4197 += 1, R4135 += 1 };
  s1 -> s5 [0, 65535] { R4197 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R4197 += 1, R4135 += 1, R3904 += 1, R3905 += 1 };
  s2 -> s2 [0, 65535] { R4197 += 1, R4135 += 1, R3903 += 1, R3904 += 1 };
  s2 -> s5 [0, 65535] { R4197 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R4197 += 1, R4135 += 1, R3904 += 1, R3905 += 1 };
  s3 -> s2 [0, 65535] { R4197 += 1, R4135 += 1, R3903 += 1, R3904 += 1 };
  s3 -> s3 [0, 65535] { R4197 += 1, R4134 += 1, R4135 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4197 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R4197 += 1, R4135 += 1 };
  s6 -> s5 [0, 65535] { R4197 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 82] { R4199 += 1, R4137 += 1, R4117 += 1 };
  s0 -> s0 [0, 65535] { R4198 += 1, R4199 += 1 };
  s0 -> s1 [0, 65535] { R4199 += 1, R4137 += 1 };
  s0 -> s2 [0, 65535] { R4199 += 1, R4136 += 1, R4137 += 1 };
  s0 -> s1 [91, 65535] { R4199 += 1, R4137 += 1, R4117 += 1 };
  s1 -> s1 [0, 82] { R4199 += 1, R4137 += 1, R4117 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4199 += 1, R4137 += 1 };
  s1 -> s4 [0, 65535] { R4199 += 1 };
  s1 -> s1 [91, 65535] { R4199 += 1, R4137 += 1, R4117 += 1 };
  s2 -> s1 [0, 82] { R4199 += 1, R4137 += 1, R4117 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4199 += 1, R4137 += 1 };
  s2 -> s2 [0, 65535] { R4199 += 1, R4136 += 1, R4137 += 1 };
  s2 -> s1 [91, 65535] { R4199 += 1, R4137 += 1, R4117 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4199 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R4200 += 1, R4201 += 1 };
  s0 -> s1 [0, 65535] { R4201 += 1, R4157 += 1, R18 += 1 };
  s0 -> s2 [0, 65535] { R4201 += 1, R4156 += 1, R4157 += 1 };
  s1 -> s4 [0, 65535] { R4201 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4201 += 1, R4157 += 1, R18 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4201 += 1, R4157 += 1, R18 += 1 };
  s2 -> s2 [0, 65535] { R4201 += 1, R4156 += 1, R4157 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4201 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 80] { R4203 += 1, R4159 += 1 };
  s0 -> s0 [0, 65535] { R4202 += 1, R4203 += 1 };
  s0 -> s2 [0, 65535] { R4203 += 1, R4158 += 1, R4159 += 1 };
  s0 -> s3 [81, 81] { R4203 += 1, R4159 += 1 };
  s0 -> s4 [81, 81] { R4203 += 1, R4159 += 1 };
  s0 -> s5 [82, 82] { R4203 += 1, R4159 += 1 };
  s0 -> s1 [83, 65535] { R4203 += 1, R4159 += 1 };
  s1 -> s1 [0, 80] { R4203 += 1, R4159 += 1 };
  s1 -> s3 [81, 81] { R4203 += 1, R4159 += 1 };
  s1 -> s4 [81, 81] { R4203 += 1, R4159 += 1 };
  s1 -> s5 [82, 82] { R4203 += 1, R4159 += 1 };
  s1 -> s1 [83, 65535] { R4203 += 1, R4159 += 1 };
  s2 -> s1 [0, 80] { R4203 += 1, R4159 += 1 };
  s2 -> s2 [0, 65535] { R4203 += 1, R4158 += 1, R4159 += 1 };
  s2 -> s3 [81, 81] { R4203 += 1, R4159 += 1 };
  s2 -> s4 [81, 81] { R4203 += 1, R4159 += 1 };
  s2 -> s5 [82, 82] { R4203 += 1, R4159 += 1 };
  s2 -> s1 [83, 65535] { R4203 += 1, R4159 += 1 };
  s4 -> s4 [0, 81] { R4203 += 1, R4159 += 1 };
  s4 -> s7 [82, 82] { R4203 += 1, R4159 += 1 };
  s4 -> s4 [83, 65535] { R4203 += 1, R4159 += 1 };
  s5 -> s5 [0, 80] { R4203 += 1, R4159 += 1 };
  s5 -> s5 [0, 65535] { R4203 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [81, 81] { R4203 += 1, R4159 += 1 };
  s5 -> s8 [81, 81] { R4203 += 1, R4159 += 1 };
  s5 -> s5 [82, 65535] { R4203 += 1, R4159 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s9 [0, 65535] { R4203 += 1 };
  s7 -> s7 [0, 65535] { R4203 += 1, R4159 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R4203 += 1 };
  s9 -> s9 [0, 65535] { R4203 += 1 };
  s9 -> s6 [0, 65535];
  accepting s8, s5, s9, s6, s7;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 80] { R4205 += 1, R4161 += 1, R66 += 1 };
  s0 -> s2 [0, 65535] { R4205 += 1, R4160 += 1, R4161 += 1 };
  s0 -> s0 [0, 65535] { R4204 += 1, R4205 += 1 };
  s0 -> s3 [81, 81] { R4205 += 1, R4161 += 1, R66 += 1 };
  s0 -> s4 [81, 81] { R4205 += 1, R4161 += 1, R66 += 1 };
  s0 -> s1 [82, 65535] { R4205 += 1, R4161 += 1, R66 += 1 };
  s1 -> s1 [0, 80] { R4205 += 1, R4161 += 1, R66 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4205 += 1 };
  s1 -> s3 [81, 81] { R4205 += 1, R4161 += 1, R66 += 1 };
  s1 -> s4 [81, 81] { R4205 += 1, R4161 += 1, R66 += 1 };
  s1 -> s1 [82, 65535] { R4205 += 1, R4161 += 1, R66 += 1 };
  s2 -> s1 [0, 80] { R4205 += 1, R4161 += 1, R66 += 1 };
  s2 -> s2 [0, 65535] { R4205 += 1, R4160 += 1, R4161 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [81, 81] { R4205 += 1, R4161 += 1, R66 += 1 };
  s2 -> s4 [81, 81] { R4205 += 1, R4161 += 1, R66 += 1 };
  s2 -> s1 [82, 65535] { R4205 += 1, R4161 += 1, R66 += 1 };
  s3 -> s3 [0, 65535] { R4205 += 1, R4161 += 1, R66 += 1 };
  s3 -> s6 [0, 65535] { R4205 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4205 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4205 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 80] { R4207 += 1, R4163 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R4206 += 1, R4207 += 1 };
  s0 -> s2 [0, 65535] { R4207 += 1, R4162 += 1, R4163 += 1 };
  s0 -> s3 [81, 81] { R4207 += 1, R4163 += 1, R68 += 1 };
  s0 -> s4 [81, 81] { R4207 += 1, R4163 += 1, R68 += 1 };
  s0 -> s1 [82, 65535] { R4207 += 1, R4163 += 1, R68 += 1 };
  s1 -> s1 [0, 80] { R4207 += 1, R4163 += 1, R68 += 1 };
  s1 -> s1 [0, 65535] { R4207 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [81, 81] { R4207 += 1, R4163 += 1, R68 += 1 };
  s1 -> s4 [81, 81] { R4207 += 1, R4163 += 1, R68 += 1 };
  s1 -> s1 [82, 65535] { R4207 += 1, R4163 += 1, R68 += 1 };
  s2 -> s1 [0, 80] { R4207 += 1, R4163 += 1, R68 += 1 };
  s2 -> s2 [0, 65535] { R4207 += 1, R4162 += 1, R4163 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [81, 81] { R4207 += 1, R4163 += 1, R68 += 1 };
  s2 -> s4 [81, 81] { R4207 += 1, R4163 += 1, R68 += 1 };
  s2 -> s1 [82, 65535] { R4207 += 1, R4163 += 1, R68 += 1 };
  s3 -> s3 [0, 65535] { R4207 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4207 += 1 };
  s4 -> s4 [0, 65535] { R4207 += 1, R4163 += 1, R68 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4207 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 80] { R4209 += 1, R4165 += 1, R70 += 1, R71 += 1 };
  s0 -> s0 [0, 65535] { R4208 += 1, R4209 += 1 };
  s0 -> s2 [0, 65535] { R4209 += 1, R4164 += 1, R4165 += 1 };
  s0 -> s3 [81, 81] { R4209 += 1, R4165 += 1, R70 += 1, R71 += 1 };
  s0 -> s4 [81, 81] { R4209 += 1, R4165 += 1, R70 += 1, R71 += 1 };
  s0 -> s1 [82, 65535] { R4209 += 1, R4165 += 1, R70 += 1, R71 += 1 };
  s1 -> s1 [0, 80] { R4209 += 1, R4165 += 1, R70 += 1, R71 += 1 };
  s1 -> s1 [0, 65535] { R4209 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [81, 81] { R4209 += 1, R4165 += 1, R70 += 1, R71 += 1 };
  s1 -> s4 [81, 81] { R4209 += 1, R4165 += 1, R70 += 1, R71 += 1 };
  s1 -> s1 [82, 65535] { R4209 += 1, R4165 += 1, R70 += 1, R71 += 1 };
  s2 -> s1 [0, 80] { R4209 += 1, R4165 += 1, R70 += 1, R71 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4209 += 1, R4164 += 1, R4165 += 1 };
  s2 -> s3 [81, 81] { R4209 += 1, R4165 += 1, R70 += 1, R71 += 1 };
  s2 -> s4 [81, 81] { R4209 += 1, R4165 += 1, R70 += 1, R71 += 1 };
  s2 -> s1 [82, 65535] { R4209 += 1, R4165 += 1, R70 += 1, R71 += 1 };
  s3 -> s3 [0, 65535] { R4209 += 1, R4165 += 1, R70 += 1, R71 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R4209 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4209 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4209 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 80] { R4211 += 1, R4167 += 1, R3890 += 1, R3891 += 1 };
  s0 -> s2 [0, 80] { R4211 += 1, R4167 += 1, R3891 += 1, R3892 += 1 };
  s0 -> s3 [0, 65535] { R4211 += 1, R4166 += 1, R4167 += 1 };
  s0 -> s0 [0, 65535] { R4210 += 1, R4211 += 1 };
  s0 -> s4 [81, 81] { R4211 += 1, R4167 += 1, R3891 += 1, R3892 += 1 };
  s0 -> s5 [81, 81] { R4211 += 1, R4167 += 1, R3890 += 1, R3891 += 1 };
  s0 -> s6 [81, 81] { R4211 += 1, R4167 += 1, R3890 += 1, R3891 += 1 };
  s0 -> s7 [81, 81] { R4211 += 1, R4167 += 1, R3891 += 1, R3892 += 1 };
  s0 -> s1 [82, 65535] { R4211 += 1, R4167 += 1, R3890 += 1, R3891 += 1 };
  s0 -> s2 [82, 65535] { R4211 += 1, R4167 += 1, R3891 += 1, R3892 += 1 };
  s1 -> s1 [0, 80] { R4211 += 1, R4167 += 1, R3890 += 1, R3891 += 1 };
  s1 -> s2 [0, 80] { R4211 += 1, R4167 += 1, R3891 += 1, R3892 += 1 };
  s1 -> s4 [81, 81] { R4211 += 1, R4167 += 1, R3891 += 1, R3892 += 1 };
  s1 -> s5 [81, 81] { R4211 += 1, R4167 += 1, R3890 += 1, R3891 += 1 };
  s1 -> s6 [81, 81] { R4211 += 1, R4167 += 1, R3890 += 1, R3891 += 1 };
  s1 -> s7 [81, 81] { R4211 += 1, R4167 += 1, R3891 += 1, R3892 += 1 };
  s1 -> s1 [82, 65535] { R4211 += 1, R4167 += 1, R3890 += 1, R3891 += 1 };
  s1 -> s2 [82, 65535] { R4211 += 1, R4167 += 1, R3891 += 1, R3892 += 1 };
  s2 -> s2 [0, 80] { R4211 += 1, R4167 += 1, R3891 += 1, R3892 += 1 };
  s2 -> s9 [0, 65535];
  s2 -> s2 [0, 65535] { R4211 += 1 };
  s2 -> s4 [81, 81] { R4211 += 1, R4167 += 1, R3891 += 1, R3892 += 1 };
  s2 -> s7 [81, 81] { R4211 += 1, R4167 += 1, R3891 += 1, R3892 += 1 };
  s2 -> s2 [82, 65535] { R4211 += 1, R4167 += 1, R3891 += 1, R3892 += 1 };
  s3 -> s1 [0, 80] { R4211 += 1, R4167 += 1, R3890 += 1, R3891 += 1 };
  s3 -> s2 [0, 80] { R4211 += 1, R4167 += 1, R3891 += 1, R3892 += 1 };
  s3 -> s3 [0, 65535] { R4211 += 1, R4166 += 1, R4167 += 1 };
  s3 -> s4 [81, 81] { R4211 += 1, R4167 += 1, R3891 += 1, R3892 += 1 };
  s3 -> s5 [81, 81] { R4211 += 1, R4167 += 1, R3890 += 1, R3891 += 1 };
  s3 -> s6 [81, 81] { R4211 += 1, R4167 += 1, R3890 += 1, R3891 += 1 };
  s3 -> s7 [81, 81] { R4211 += 1, R4167 += 1, R3891 += 1, R3892 += 1 };
  s3 -> s1 [82, 65535] { R4211 += 1, R4167 += 1, R3890 += 1, R3891 += 1 };
  s3 -> s2 [82, 65535] { R4211 += 1, R4167 += 1, R3891 += 1, R3892 += 1 };
  s4 -> s4 [0, 65535] { R4211 += 1 };
  s4 -> s9 [0, 65535];
  s5 -> s5 [0, 65535] { R4211 += 1, R4167 += 1, R3890 += 1, R3891 += 1 };
  s5 -> s7 [0, 65535] { R4211 += 1, R4167 += 1, R3891 += 1, R3892 += 1 };
  s7 -> s8 [0, 65535] { R4211 += 1 };
  s7 -> s9 [0, 65535];
  s7 -> s7 [0, 65535] { R4211 += 1, R4167 += 1, R3891 += 1, R3892 += 1 };
  s8 -> s8 [0, 65535] { R4211 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  accepting s4, s8, s2, s9, s7;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 80] { R4213 += 1, R4169 += 1, R3896 += 1, R3897 += 1 };
  s0 -> s2 [0, 80] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s0 -> s3 [0, 65535] { R4213 += 1, R4168 += 1, R4169 += 1 };
  s0 -> s0 [0, 65535] { R4212 += 1, R4213 += 1 };
  s0 -> s4 [81, 81] { R4213 += 1, R4169 += 1, R3896 += 1, R3897 += 1 };
  s0 -> s5 [81, 81] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s0 -> s6 [81, 81] { R4213 += 1, R4169 += 1, R3896 += 1, R3897 += 1 };
  s0 -> s7 [81, 81] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s0 -> s2 [82, 82] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s0 -> s1 [82, 65535] { R4213 += 1, R4169 += 1, R3896 += 1, R3897 += 1 };
  s0 -> s8 [90, 90] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s0 -> s2 [91, 65535] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s1 -> s1 [0, 80] { R4213 += 1, R4169 += 1, R3896 += 1, R3897 += 1 };
  s1 -> s2 [0, 80] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s1 -> s4 [81, 81] { R4213 += 1, R4169 += 1, R3896 += 1, R3897 += 1 };
  s1 -> s5 [81, 81] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s1 -> s6 [81, 81] { R4213 += 1, R4169 += 1, R3896 += 1, R3897 += 1 };
  s1 -> s7 [81, 81] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s1 -> s2 [82, 82] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s1 -> s1 [82, 65535] { R4213 += 1, R4169 += 1, R3896 += 1, R3897 += 1 };
  s1 -> s8 [90, 90] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s1 -> s2 [91, 65535] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s2 -> s2 [0, 80] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s2 -> s5 [81, 81] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s2 -> s7 [81, 81] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s2 -> s2 [82, 82] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s2 -> s8 [90, 90] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s2 -> s2 [91, 65535] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s3 -> s1 [0, 80] { R4213 += 1, R4169 += 1, R3896 += 1, R3897 += 1 };
  s3 -> s2 [0, 80] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s3 -> s3 [0, 65535] { R4213 += 1, R4168 += 1, R4169 += 1 };
  s3 -> s4 [81, 81] { R4213 += 1, R4169 += 1, R3896 += 1, R3897 += 1 };
  s3 -> s5 [81, 81] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s3 -> s6 [81, 81] { R4213 += 1, R4169 += 1, R3896 += 1, R3897 += 1 };
  s3 -> s7 [81, 81] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s3 -> s2 [82, 82] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s3 -> s1 [82, 65535] { R4213 += 1, R4169 += 1, R3896 += 1, R3897 += 1 };
  s3 -> s8 [90, 90] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s3 -> s2 [91, 65535] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s4 -> s5 [0, 82] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s4 -> s4 [0, 65535] { R4213 += 1, R4169 += 1, R3896 += 1, R3897 += 1 };
  s4 -> s10 [90, 90] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s4 -> s5 [91, 65535] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s5 -> s5 [0, 82] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s5 -> s10 [90, 90] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s5 -> s5 [91, 65535] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s8 -> s8 [0, 80] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s8 -> s8 [0, 65535] { R4213 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [81, 81] { R4213 += 1, R4169 += 1 };
  s8 -> s11 [81, 81] { R4213 += 1, R4169 += 1 };
  s8 -> s8 [82, 82] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s8 -> s8 [82, 65535] { R4213 += 1, R4169 += 1 };
  s8 -> s8 [90, 65535] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 82] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s10 -> s10 [0, 65535] { R4213 += 1, R4169 += 1 };
  s10 -> s12 [0, 65535] { R4213 += 1 };
  s10 -> s9 [0, 65535];
  s10 -> s10 [90, 65535] { R4213 += 1, R4169 += 1, R3897 += 1 };
  s11 -> s11 [0, 65535] { R4213 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R4213 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 80] { R4215 += 1, R4171 += 1, R3900 += 1, R3901 += 1 };
  s0 -> s0 [0, 65535] { R4214 += 1, R4215 += 1 };
  s0 -> s2 [0, 65535] { R4215 += 1, R4170 += 1, R4171 += 1 };
  s0 -> s3 [81, 81] { R4215 += 1, R4171 += 1, R3900 += 1, R3901 += 1 };
  s0 -> s4 [81, 81] { R4215 += 1, R4171 += 1, R3900 += 1, R3901 += 1 };
  s0 -> s1 [82, 65535] { R4215 += 1, R4171 += 1, R3900 += 1, R3901 += 1 };
  s1 -> s1 [0, 80] { R4215 += 1, R4171 += 1, R3900 += 1, R3901 += 1 };
  s1 -> s1 [0, 65535] { R4215 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [81, 81] { R4215 += 1, R4171 += 1, R3900 += 1, R3901 += 1 };
  s1 -> s4 [81, 81] { R4215 += 1, R4171 += 1, R3900 += 1, R3901 += 1 };
  s1 -> s1 [82, 65535] { R4215 += 1, R4171 += 1, R3900 += 1, R3901 += 1 };
  s2 -> s1 [0, 80] { R4215 += 1, R4171 += 1, R3900 += 1, R3901 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4215 += 1, R4170 += 1, R4171 += 1 };
  s2 -> s3 [81, 81] { R4215 += 1, R4171 += 1, R3900 += 1, R3901 += 1 };
  s2 -> s4 [81, 81] { R4215 += 1, R4171 += 1, R3900 += 1, R3901 += 1 };
  s2 -> s1 [82, 65535] { R4215 += 1, R4171 += 1, R3900 += 1, R3901 += 1 };
  s3 -> s6 [0, 65535] { R4215 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4215 += 1, R4171 += 1, R3900 += 1, R3901 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4215 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4215 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 80] { R4217 += 1, R4173 += 1, R4114 += 1, R4115 += 1 };
  s0 -> s2 [0, 80] { R4217 += 1, R4173 += 1, R4115 += 1 };
  s0 -> s3 [0, 65535] { R4217 += 1, R4172 += 1, R4173 += 1 };
  s0 -> s0 [0, 65535] { R4216 += 1, R4217 += 1 };
  s0 -> s4 [81, 81] { R4217 += 1, R4173 += 1, R4114 += 1, R4115 += 1 };
  s0 -> s5 [81, 81] { R4217 += 1, R4173 += 1, R4115 += 1 };
  s0 -> s6 [81, 81] { R4217 += 1, R4173 += 1, R4114 += 1, R4115 += 1 };
  s0 -> s7 [81, 81] { R4217 += 1, R4173 += 1, R4115 += 1 };
  s0 -> s8 [82, 82] { R4217 += 1, R4173 += 1, R4115 += 1 };
  s0 -> s1 [82, 65535] { R4217 += 1, R4173 += 1, R4114 += 1, R4115 += 1 };
  s0 -> s2 [91, 65535] { R4217 += 1, R4173 += 1, R4115 += 1 };
  s1 -> s1 [0, 80] { R4217 += 1, R4173 += 1, R4114 += 1, R4115 += 1 };
  s1 -> s2 [0, 80] { R4217 += 1, R4173 += 1, R4115 += 1 };
  s1 -> s4 [81, 81] { R4217 += 1, R4173 += 1, R4114 += 1, R4115 += 1 };
  s1 -> s5 [81, 81] { R4217 += 1, R4173 += 1, R4115 += 1 };
  s1 -> s6 [81, 81] { R4217 += 1, R4173 += 1, R4114 += 1, R4115 += 1 };
  s1 -> s7 [81, 81] { R4217 += 1, R4173 += 1, R4115 += 1 };
  s1 -> s8 [82, 82] { R4217 += 1, R4173 += 1, R4115 += 1 };
  s1 -> s1 [82, 65535] { R4217 += 1, R4173 += 1, R4114 += 1, R4115 += 1 };
  s1 -> s2 [91, 65535] { R4217 += 1, R4173 += 1, R4115 += 1 };
  s2 -> s2 [0, 80] { R4217 += 1, R4173 += 1, R4115 += 1 };
  s2 -> s5 [81, 81] { R4217 += 1, R4173 += 1 };
  s2 -> s7 [81, 81] { R4217 += 1, R4173 += 1 };
  s2 -> s8 [82, 82] { R4217 += 1, R4173 += 1, R4115 += 1 };
  s2 -> s2 [82, 65535] { R4217 += 1, R4173 += 1 };
  s2 -> s2 [91, 65535] { R4217 += 1, R4173 += 1, R4115 += 1 };
  s3 -> s1 [0, 80] { R4217 += 1, R4173 += 1, R4114 += 1, R4115 += 1 };
  s3 -> s2 [0, 80] { R4217 += 1, R4173 += 1, R4115 += 1 };
  s3 -> s3 [0, 65535] { R4217 += 1, R4172 += 1, R4173 += 1 };
  s3 -> s4 [81, 81] { R4217 += 1, R4173 += 1, R4114 += 1, R4115 += 1 };
  s3 -> s5 [81, 81] { R4217 += 1, R4173 += 1, R4115 += 1 };
  s3 -> s6 [81, 81] { R4217 += 1, R4173 += 1, R4114 += 1, R4115 += 1 };
  s3 -> s7 [81, 81] { R4217 += 1, R4173 += 1, R4115 += 1 };
  s3 -> s8 [82, 82] { R4217 += 1, R4173 += 1, R4115 += 1 };
  s3 -> s1 [82, 65535] { R4217 += 1, R4173 += 1, R4114 += 1, R4115 += 1 };
  s3 -> s2 [91, 65535] { R4217 += 1, R4173 += 1, R4115 += 1 };
  s6 -> s7 [0, 81] { R4217 += 1, R4173 += 1, R4115 += 1 };
  s6 -> s6 [0, 65535] { R4217 += 1, R4173 += 1, R4114 += 1, R4115 += 1 };
  s6 -> s11 [82, 82] { R4217 += 1, R4173 += 1, R4115 += 1 };
  s6 -> s7 [91, 65535] { R4217 += 1, R4173 += 1, R4115 += 1 };
  s7 -> s7 [0, 81] { R4217 += 1, R4173 += 1, R4115 += 1 };
  s7 -> s7 [0, 65535] { R4217 += 1, R4173 += 1 };
  s7 -> s11 [82, 82] { R4217 += 1, R4173 += 1, R4115 += 1 };
  s7 -> s7 [91, 65535] { R4217 += 1, R4173 += 1, R4115 += 1 };
  s8 -> s8 [0, 80] { R4217 += 1, R4173 += 1, R4115 += 1 };
  s8 -> s8 [0, 65535] { R4217 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [81, 81] { R4217 += 1, R4173 += 1 };
  s8 -> s11 [81, 81] { R4217 += 1, R4173 += 1 };
  s8 -> s8 [82, 82] { R4217 += 1, R4173 += 1, R4115 += 1 };
  s8 -> s8 [82, 65535] { R4217 += 1, R4173 += 1 };
  s8 -> s8 [91, 65535] { R4217 += 1, R4173 += 1, R4115 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R4217 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 82] { R4217 += 1, R4173 += 1, R4115 += 1 };
  s11 -> s11 [0, 65535] { R4217 += 1, R4173 += 1 };
  s11 -> s12 [0, 65535] { R4217 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [91, 65535] { R4217 += 1, R4173 += 1, R4115 += 1 };
  s12 -> s12 [0, 65535] { R4217 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [113, 113];
  accepting s1;
};
};
synchronised {  // Automata constraining c1
automaton c1_0 {
  init s0;
  s0 -> s1 [114, 114];
  accepting s1;
};
};
constraint R2 = R4217 && R20 - R4217 = -1 && R21 = R4217 && R22 - R4217 = -1 && R23 = R4217 && R24 = 0 && R25 = 1 && R26 = 0 && R27 = 1 && R38 + R67 + R66 + -1*R3899 + -1*R3897 - R53 = 0 && R52 + R3898 + R3896 = 0 && R4158 = 0 && R4159 = 0 && R4166 = 0 && R4167 = 0 && R4168 = 0 && R4169 = 0 && R4172 = 0 && R4173 = 0 && R4174 = 0 && R4175 = R4217 && R4176 = 0 && R4177 = R4217 && R4178 = 0 && R4179 = R4217 && R4180 = 0 && R4181 = R4217 && R4182 = 0 && R4183 = R4217 && R4184 = 0 && R4185 = R4217 && R4186 = 0 && R4187 = R4217 && R4188 = 0 && R4189 = R4217 && R4190 = 0 && R4191 = R4217 && R4192 = 0 && R4193 = R4217 && R4194 = 0 && R4195 = R4217 && R4196 = 0 && R4197 = R4217 && R4198 = 0 && R4199 = R4217 && R4200 = 0 && R4201 = R4217 && R4202 = 0 && R4203 = R4217 && R4204 = 0 && R4205 = R4217 && R4206 = 0 && R4207 = R4217 && R4208 = 0 && R4209 = R4217 && R4210 = 0 && R4211 = R4217 && R4212 = 0 && R4213 = R4217 && R4214 = 0 && R4215 = R4217 && R4216 = 0 && -1 < R1 && R8 < 1 && R11 < 1 && R12 < 1 && R40 + R69 + R68 < 1 && -1*R3899 + -1*R3897 - R53 < 1 && 0 < R4217 && (R1 != 0 || R17 = 0 || (R4118 = 0 && R4119 = 0)) && (R1 != 0 || R17 = 0 || (R4120 = 0 && R4121 = 0)) && (R1 != 0 || R17 = 0 || (R4122 = 0 && R4123 = 0)) && (R1 != 0 || R17 = 0 || (R4124 = 0 && R4125 = 0)) && (R1 != 0 || R17 = 0 || (R4126 = 0 && R4127 = 0)) && (R1 != 0 || R17 = 0 || (R4128 = 0 && R4129 = 0)) && (R1 != 0 || R17 = 0 || (R4130 = 0 && R4131 = 0)) && (R1 != 0 || R17 = 0 || (R4132 = 0 && R4133 = 0)) && (R1 != 0 || R17 = 0 || (R4134 = 0 && R4135 = 0)) && (R1 != 0 || R17 = 0 || (R4136 = 0 && R4137 = 0)) && (R48 + R3895 + R3892 != 0 || ((R42 + R72 + R70 != 0 || R43 + R73 + R71 + -1*R3899 + -1*R3897 - R53 = 0 || R53 + R3899 + R3897 < 1) && (R42 + R72 + R70 = 0 || R53 + R3899 + R3897 < 1))) && (R48 + R3895 + R3892 != 0 || ((R46 + R3893 + R3890 != 0 || R47 + R3894 + R3891 + -1*R3899 + -1*R3897 - R53 = 0 || R53 + R3899 + R3897 < 1) && (R46 + R3893 + R3890 = 0 || R53 + R3899 + R3897 < 1))) && (R4118 != 0 || R1 = R4119 || R1 < 1) && (R4120 != 0 || R1 = R4121 || R1 < 1) && (R4122 != 0 || R1 = R4123 || R1 < 1) && (R4124 != 0 || R1 = R4125 || R1 < 1) && (R4126 != 0 || R1 = R4127 || R1 < 1) && (R4128 != 0 || R1 = R4129 || R1 < 1) && (R4130 != 0 || R1 = R4131 || R1 < 1) && (R4132 != 0 || R1 = R4133 || R1 < 1) && (R4134 != 0 || R1 = R4135 || R1 < 1) && (R4136 != 0 || R1 = R4137 || R1 < 1) && (R18 = 0 || (R4156 = 0 && R4157 = 0)) && (R18 = 0 || (R4160 = 0 && R4161 = 0)) && (R18 = 0 || (R4162 = 0 && R4163 = 0)) && (R18 = 0 || (R4164 = 0 && R4165 = 0)) && (R18 = 0 || (R4170 = 0 && R4171 = 0)) && (R19 = 0 || (R4138 = 0 && R4139 = 0)) && (R19 = 0 || (R4140 = 0 && R4141 = 0)) && (R19 = 0 || (R4142 = 0 && R4143 = 0)) && (R19 = 0 || (R4144 = 0 && R4145 = 0)) && (R19 = 0 || (R4146 = 0 && R4147 = 0)) && (R19 = 0 || (R4148 = 0 && R4149 = 0)) && (R19 = 0 || (R4150 = 0 && R4151 = 0)) && (R19 = 0 || (R4152 = 0 && R4153 = 0)) && (R19 = 0 || (R4154 = 0 && R4155 = 0)) && (R48 + R3895 + R3892 = 0 || (R42 + R72 + R70 = 0 && R43 + R73 + R71 + -1*R3899 + -1*R3897 - R53 = 0)) && (R48 + R3895 + R3892 = 0 || (R46 + R3893 + R3890 = 0 && R47 + R3894 + R3891 + -1*R3899 + -1*R3897 - R53 = 0)) && (R58 + R3905 + R3902 = 0 || (R56 + R3903 + R3900 = 0 && R57 + R3904 + R3901 = 0)) && (R58 + R3905 + R3902 = 0 || (R62 + R4116 + R4114 = 0 && R63 + R4117 + R4115 = 0)) && (R4118 = 0 || R1 < 1) && (R4120 = 0 || R1 < 1) && (R4122 = 0 || R1 < 1) && (R4124 = 0 || R1 < 1) && (R4126 = 0 || R1 < 1) && (R4128 = 0 || R1 < 1) && (R4130 = 0 || R1 < 1) && (R4132 = 0 || R1 < 1) && (R4134 = 0 || R1 < 1) && (R4136 = 0 || R1 < 1);
// End of Parikh automata intersection problem
