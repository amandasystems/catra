// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R12, R17, R18, R19, R2, R20, R21, R22, R23, R24, R25, R26, R27, R3, R38, R3890, R3891, R3892, R3893, R3894, R3895, R4, R40, R42, R43, R46, R47, R48, R5166, R5167, R5168, R5169, R5170, R5171, R5172, R5173, R5174, R5175, R52, R53, R5488, R5489, R5490, R5491, R5492, R5493, R5494, R5495, R5496, R5497, R5498, R5499, R5500, R5501, R5502, R5503, R5504, R5505, R5506, R5507, R5508, R5509, R5510, R5511, R5512, R5513, R5514, R5515, R5516, R5517, R5518, R5519, R5520, R5521, R5522, R5523, R5524, R5525, R5526, R5527, R5528, R5529, R5530, R5531, R5532, R5533, R5534, R5535, R5536, R5537, R5538, R5539, R5540, R5541, R5542, R5543, R5544, R5545, R5546, R5547, R5548, R5549, R5550, R5551, R5552, R5553, R5554, R5555, R5556, R5557, R5558, R5559, R5560, R5561, R5562, R5563, R5564, R5565, R5566, R5567, R5568, R5569, R5570, R5571, R5572, R5573, R5574, R5575, R5576, R5577, R5578, R5579, R5580, R5581, R5582, R5583, R5584, R5585, R5586, R5587, R5588, R5589, R5590, R5591, R56, R57, R58, R62, R63, R66, R67, R68, R69, R70, R71, R72, R73, R8;
synchronised {  // Automata constraining P64
automaton P64_0 {
  init s0;
  s0 -> s1 [119, 119];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [75, 75];
  s0 -> s0 [76, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [75, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R2 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R11 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 74];
  s0 -> s0 [0, 65535] { R12 += 1 };
  s0 -> s2 [75, 75];
  s0 -> s1 [76, 65535];
  s1 -> s1 [0, 74];
  s1 -> s2 [75, 75];
  s1 -> s1 [76, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R21 += 1 };
  s0 -> s0 [0, 65535] { R20 += 1, R21 += 1 };
  s0 -> s2 [9, 13] { R21 += 1 };
  s0 -> s1 [14, 31] { R21 += 1 };
  s0 -> s2 [32, 32] { R21 += 1 };
  s0 -> s1 [33, 65535] { R21 += 1 };
  s1 -> s1 [0, 65535] { R21 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R21 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R22 += 1, R23 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R25 += 1 };
  s0 -> s0 [0, 65535] { R24 += 1, R25 += 1 };
  s0 -> s2 [9, 13] { R25 += 1 };
  s0 -> s1 [14, 31] { R25 += 1 };
  s0 -> s2 [32, 32] { R25 += 1 };
  s0 -> s1 [33, 65535] { R25 += 1 };
  s1 -> s1 [0, 65535] { R25 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R25 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R26 += 1, R27 += 1 };
  s1 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R5513 += 1, R19 += 1 };
  s0 -> s0 [0, 65535] { R5512 += 1, R5513 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R5513 += 1, R19 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 74] { R5515 += 1 };
  s0 -> s0 [0, 65535] { R5514 += 1, R5515 += 1 };
  s0 -> s2 [75, 75] { R5515 += 1 };
  s0 -> s3 [75, 75] { R5515 += 1 };
  s0 -> s1 [88, 65535] { R5515 += 1 };
  s1 -> s1 [0, 74] { R5515 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R5515 += 1 };
  s1 -> s3 [75, 75] { R5515 += 1 };
  s1 -> s1 [88, 65535] { R5515 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 75] { R5515 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [88, 65535] { R5515 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 74] { R5517 += 1, R38 += 1 };
  s0 -> s0 [0, 65535] { R5516 += 1, R5517 += 1 };
  s0 -> s2 [75, 75] { R5517 += 1, R38 += 1 };
  s0 -> s3 [75, 75] { R5517 += 1, R38 += 1 };
  s0 -> s1 [76, 65535] { R5517 += 1, R38 += 1 };
  s1 -> s1 [0, 74] { R5517 += 1, R38 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R5517 += 1, R38 += 1 };
  s1 -> s3 [75, 75] { R5517 += 1, R38 += 1 };
  s1 -> s1 [76, 65535] { R5517 += 1, R38 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5517 += 1, R38 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 74] { R5519 += 1, R40 += 1 };
  s0 -> s0 [0, 65535] { R5518 += 1, R5519 += 1 };
  s0 -> s2 [75, 75] { R5519 += 1, R40 += 1 };
  s0 -> s3 [75, 75] { R5519 += 1, R40 += 1 };
  s0 -> s1 [76, 65535] { R5519 += 1, R40 += 1 };
  s1 -> s1 [0, 74] { R5519 += 1, R40 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R5519 += 1, R40 += 1 };
  s1 -> s3 [75, 75] { R5519 += 1, R40 += 1 };
  s1 -> s1 [76, 65535] { R5519 += 1, R40 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5519 += 1, R40 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 74] { R5521 += 1, R42 += 1, R43 += 1 };
  s0 -> s0 [0, 65535] { R5520 += 1, R5521 += 1 };
  s0 -> s2 [75, 75] { R5521 += 1, R42 += 1, R43 += 1 };
  s0 -> s3 [75, 75] { R5521 += 1, R42 += 1, R43 += 1 };
  s0 -> s1 [76, 65535] { R5521 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 74] { R5521 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R5521 += 1, R42 += 1, R43 += 1 };
  s1 -> s3 [75, 75] { R5521 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [76, 65535] { R5521 += 1, R42 += 1, R43 += 1 };
  s2 -> s2 [0, 65535] { R5521 += 1, R42 += 1, R43 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 74] { R5523 += 1, R46 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R5522 += 1, R5523 += 1 };
  s0 -> s2 [75, 75] { R5523 += 1, R46 += 1, R47 += 1 };
  s0 -> s3 [75, 75] { R5523 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [76, 65535] { R5523 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 74] { R5523 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R5523 += 1, R46 += 1, R47 += 1 };
  s1 -> s3 [75, 75] { R5523 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [76, 65535] { R5523 += 1, R46 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R5523 += 1, R46 += 1, R47 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 74] { R5525 += 1, R52 += 1, R53 += 1 };
  s0 -> s0 [0, 65535] { R5524 += 1, R5525 += 1 };
  s0 -> s2 [75, 75] { R5525 += 1, R52 += 1, R53 += 1 };
  s0 -> s3 [75, 75] { R5525 += 1, R52 += 1, R53 += 1 };
  s0 -> s1 [76, 65535] { R5525 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 74] { R5525 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R5525 += 1, R52 += 1, R53 += 1 };
  s1 -> s3 [75, 75] { R5525 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [76, 65535] { R5525 += 1, R52 += 1, R53 += 1 };
  s2 -> s2 [0, 65535] { R5525 += 1, R52 += 1, R53 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 74] { R5527 += 1, R56 += 1, R57 += 1 };
  s0 -> s0 [0, 65535] { R5526 += 1, R5527 += 1 };
  s0 -> s2 [75, 75] { R5527 += 1, R56 += 1, R57 += 1 };
  s0 -> s3 [75, 75] { R5527 += 1, R56 += 1, R57 += 1 };
  s0 -> s1 [76, 65535] { R5527 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 74] { R5527 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R5527 += 1, R56 += 1, R57 += 1 };
  s1 -> s3 [75, 75] { R5527 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [76, 65535] { R5527 += 1, R56 += 1, R57 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R5527 += 1, R56 += 1, R57 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 74] { R5529 += 1, R62 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R5528 += 1, R5529 += 1 };
  s0 -> s2 [75, 75] { R5529 += 1, R62 += 1, R63 += 1 };
  s0 -> s3 [75, 75] { R5529 += 1, R62 += 1, R63 += 1 };
  s0 -> s1 [76, 65535] { R5529 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 74] { R5529 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R5529 += 1, R62 += 1, R63 += 1 };
  s1 -> s3 [75, 75] { R5529 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [76, 65535] { R5529 += 1, R62 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5529 += 1, R62 += 1, R63 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 74] { R5549 += 1 };
  s0 -> s0 [0, 65535] { R5548 += 1, R5549 += 1 };
  s0 -> s2 [75, 75] { R5549 += 1 };
  s0 -> s1 [76, 65535] { R5549 += 1 };
  s1 -> s1 [0, 74] { R5549 += 1 };
  s1 -> s2 [75, 75] { R5549 += 1 };
  s1 -> s1 [76, 65535] { R5549 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5549 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R5551 += 1, R1 += 1 };
  s0 -> s0 [0, 65535] { R5550 += 1, R5551 += 1 };
  s1 -> s1 [0, 65535] { R5551 += 1, R1 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 74] { R5553 += 1 };
  s0 -> s0 [0, 65535] { R5552 += 1, R5553 += 1 };
  s0 -> s2 [0, 65535] { R5553 += 1, R8 += 1 };
  s0 -> s3 [75, 75] { R5553 += 1 };
  s0 -> s1 [76, 65535] { R5553 += 1 };
  s1 -> s1 [0, 74] { R5553 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [75, 75] { R5553 += 1 };
  s1 -> s1 [76, 65535] { R5553 += 1 };
  s2 -> s1 [0, 74] { R5553 += 1 };
  s2 -> s2 [0, 65535] { R5553 += 1, R8 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [75, 75] { R5553 += 1 };
  s2 -> s1 [76, 65535] { R5553 += 1 };
  s3 -> s3 [0, 65535] { R5553 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 74] { R5555 += 1, R5493 += 1 };
  s0 -> s0 [0, 65535] { R5554 += 1, R5555 += 1 };
  s0 -> s2 [0, 65535] { R5555 += 1, R5492 += 1, R5493 += 1 };
  s0 -> s1 [76, 65535] { R5555 += 1, R5493 += 1 };
  s1 -> s1 [0, 74] { R5555 += 1, R5493 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R5555 += 1 };
  s1 -> s1 [76, 65535] { R5555 += 1, R5493 += 1 };
  s2 -> s1 [0, 74] { R5555 += 1, R5493 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5555 += 1, R5492 += 1, R5493 += 1 };
  s2 -> s1 [76, 65535] { R5555 += 1, R5493 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R5557 += 1, R5494 += 1, R5495 += 1 };
  s0 -> s0 [0, 65535] { R5556 += 1, R5557 += 1 };
  s0 -> s2 [0, 65535] { R5557 += 1, R5495 += 1, R17 += 1 };
  s1 -> s1 [0, 65535] { R5557 += 1, R5494 += 1, R5495 += 1 };
  s1 -> s2 [0, 65535] { R5557 += 1, R5495 += 1, R17 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R5557 += 1 };
  s2 -> s2 [0, 65535] { R5557 += 1, R5495 += 1, R17 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5557 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 75] { R5559 += 1, R5497 += 1 };
  s0 -> s0 [0, 65535] { R5558 += 1, R5559 += 1 };
  s0 -> s2 [0, 65535] { R5559 += 1, R5496 += 1, R5497 += 1 };
  s0 -> s1 [87, 65535] { R5559 += 1, R5497 += 1 };
  s1 -> s1 [0, 75] { R5559 += 1, R5497 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R5559 += 1 };
  s1 -> s1 [87, 65535] { R5559 += 1, R5497 += 1 };
  s2 -> s1 [0, 75] { R5559 += 1, R5497 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5559 += 1, R5496 += 1, R5497 += 1 };
  s2 -> s1 [87, 65535] { R5559 += 1, R5497 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R5561 += 1, R5499 += 1, R67 += 1 };
  s0 -> s2 [0, 65535] { R5561 += 1, R5498 += 1, R5499 += 1 };
  s0 -> s0 [0, 65535] { R5560 += 1, R5561 += 1 };
  s1 -> s4 [0, 65535] { R5561 += 1 };
  s1 -> s1 [0, 65535] { R5561 += 1, R5499 += 1, R67 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R5561 += 1, R5499 += 1, R67 += 1 };
  s2 -> s2 [0, 65535] { R5561 += 1, R5498 += 1, R5499 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5561 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 86] { R5563 += 1, R5501 += 1 };
  s0 -> s0 [0, 65535] { R5562 += 1, R5563 += 1 };
  s0 -> s2 [0, 65535] { R5563 += 1, R5500 += 1, R5501 += 1 };
  s0 -> s3 [0, 65535] { R5563 += 1, R5501 += 1, R69 += 1 };
  s0 -> s1 [88, 65535] { R5563 += 1, R5501 += 1 };
  s1 -> s1 [0, 86] { R5563 += 1, R5501 += 1 };
  s1 -> s1 [0, 65535] { R5563 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [88, 65535] { R5563 += 1, R5501 += 1 };
  s2 -> s1 [0, 86] { R5563 += 1, R5501 += 1 };
  s2 -> s2 [0, 65535] { R5563 += 1, R5500 += 1, R5501 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R5563 += 1, R5501 += 1, R69 += 1 };
  s2 -> s1 [88, 65535] { R5563 += 1, R5501 += 1 };
  s3 -> s1 [0, 86] { R5563 += 1, R5501 += 1 };
  s3 -> s4 [0, 65535] { R5563 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5563 += 1, R5501 += 1, R69 += 1 };
  s3 -> s1 [88, 65535] { R5563 += 1, R5501 += 1 };
  s4 -> s4 [0, 65535] { R5563 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 86] { R5565 += 1, R5503 += 1, R73 += 1 };
  s0 -> s0 [0, 65535] { R5564 += 1, R5565 += 1 };
  s0 -> s2 [0, 65535] { R5565 += 1, R5502 += 1, R5503 += 1 };
  s0 -> s3 [0, 65535] { R5565 += 1, R5503 += 1, R72 += 1, R73 += 1 };
  s0 -> s1 [88, 65535] { R5565 += 1, R5503 += 1, R73 += 1 };
  s1 -> s1 [0, 86] { R5565 += 1, R5503 += 1, R73 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R5565 += 1, R5503 += 1 };
  s1 -> s5 [0, 65535] { R5565 += 1 };
  s1 -> s1 [88, 65535] { R5565 += 1, R5503 += 1, R73 += 1 };
  s2 -> s1 [0, 86] { R5565 += 1, R5503 += 1, R73 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R5565 += 1, R5502 += 1, R5503 += 1 };
  s2 -> s3 [0, 65535] { R5565 += 1, R5503 += 1, R72 += 1, R73 += 1 };
  s2 -> s1 [88, 65535] { R5565 += 1, R5503 += 1, R73 += 1 };
  s3 -> s1 [0, 86] { R5565 += 1, R5503 += 1, R73 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R5565 += 1 };
  s3 -> s3 [0, 65535] { R5565 += 1, R5503 += 1, R72 += 1, R73 += 1 };
  s3 -> s1 [88, 65535] { R5565 += 1, R5503 += 1, R73 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5565 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R5567 += 1, R5504 += 1, R5505 += 1 };
  s0 -> s2 [0, 65535] { R5567 += 1, R5505 += 1, R3894 += 1, R3895 += 1 };
  s0 -> s3 [0, 65535] { R5567 += 1, R5505 += 1 };
  s0 -> s0 [0, 65535] { R5566 += 1, R5567 += 1 };
  s1 -> s1 [0, 65535] { R5567 += 1, R5504 += 1, R5505 += 1 };
  s1 -> s2 [0, 65535] { R5567 += 1, R5505 += 1, R3894 += 1, R3895 += 1 };
  s1 -> s3 [0, 65535] { R5567 += 1, R5505 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s4 [0, 65535] { R5567 += 1 };
  s2 -> s2 [0, 65535] { R5567 += 1, R5505 += 1, R3894 += 1, R3895 += 1 };
  s2 -> s3 [0, 65535] { R5567 += 1, R5505 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R5567 += 1 };
  s3 -> s3 [0, 65535] { R5567 += 1, R5505 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5567 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 87] { R5569 += 1, R5507 += 1, R5169 += 1 };
  s0 -> s0 [0, 65535] { R5568 += 1, R5569 += 1 };
  s0 -> s2 [0, 65535] { R5569 += 1, R5506 += 1, R5507 += 1 };
  s0 -> s3 [89, 89] { R5569 += 1, R5507 += 1, R5169 += 1 };
  s0 -> s1 [90, 65535] { R5569 += 1, R5507 += 1, R5169 += 1 };
  s1 -> s1 [0, 87] { R5569 += 1, R5507 += 1, R5169 += 1 };
  s1 -> s3 [89, 89] { R5569 += 1, R5507 += 1, R5169 += 1 };
  s1 -> s1 [90, 65535] { R5569 += 1, R5507 += 1, R5169 += 1 };
  s2 -> s1 [0, 87] { R5569 += 1, R5507 += 1, R5169 += 1 };
  s2 -> s2 [0, 65535] { R5569 += 1, R5506 += 1, R5507 += 1 };
  s2 -> s3 [89, 89] { R5569 += 1, R5507 += 1, R5169 += 1 };
  s2 -> s1 [90, 65535] { R5569 += 1, R5507 += 1, R5169 += 1 };
  s3 -> s3 [0, 87] { R5569 += 1, R5507 += 1, R5169 += 1 };
  s3 -> s4 [0, 65535] { R5569 += 1 };
  s3 -> s3 [0, 65535] { R5569 += 1, R5507 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [89, 65535] { R5569 += 1, R5507 += 1, R5169 += 1 };
  s4 -> s4 [0, 65535] { R5569 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5;
};
automaton value2_28 {
  init s0;
  s0 -> s0 [0, 65535] { R5570 += 1, R5571 += 1 };
  s0 -> s1 [0, 65535] { R5571 += 1, R5508 += 1, R5509 += 1 };
  s0 -> s2 [0, 65535] { R5571 += 1, R5509 += 1, R5173 += 1, R5174 += 1 };
  s0 -> s3 [0, 65535] { R5571 += 1, R5509 += 1, R5174 += 1, R5175 += 1 };
  s1 -> s1 [0, 65535] { R5571 += 1, R5508 += 1, R5509 += 1 };
  s1 -> s2 [0, 65535] { R5571 += 1, R5509 += 1, R5173 += 1, R5174 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R5571 += 1, R5509 += 1, R5174 += 1, R5175 += 1 };
  s2 -> s2 [0, 65535] { R5571 += 1, R5509 += 1, R5173 += 1, R5174 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R5571 += 1, R5509 += 1, R5174 += 1, R5175 += 1 };
  s2 -> s6 [0, 65535] { R5571 += 1 };
  s3 -> s4 [0, 65535] { R5571 += 1, R5509 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5571 += 1, R5509 += 1, R5174 += 1, R5175 += 1 };
  s3 -> s6 [0, 65535] { R5571 += 1 };
  s4 -> s4 [0, 65535] { R5571 += 1, R5509 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5571 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5571 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R5573 += 1, R5511 += 1 };
  s0 -> s0 [0, 65535] { R5572 += 1, R5573 += 1 };
  s0 -> s2 [0, 65535] { R5573 += 1, R5510 += 1, R5511 += 1 };
  s1 -> s1 [0, 65535] { R5573 += 1, R5511 += 1 };
  s1 -> s4 [0, 65535] { R5573 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R5573 += 1, R5511 += 1 };
  s2 -> s2 [0, 65535] { R5573 += 1, R5510 += 1, R5511 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5573 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R5575 += 1, R5530 += 1, R5531 += 1 };
  s0 -> s2 [0, 65535] { R5575 += 1, R5531 += 1, R18 += 1 };
  s0 -> s0 [0, 65535] { R5574 += 1, R5575 += 1 };
  s1 -> s1 [0, 65535] { R5575 += 1, R5530 += 1, R5531 += 1 };
  s1 -> s2 [0, 65535] { R5575 += 1, R5531 += 1, R18 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R5575 += 1 };
  s2 -> s2 [0, 65535] { R5575 += 1, R5531 += 1, R18 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5575 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R5577 += 1, R5533 += 1 };
  s0 -> s0 [0, 65535] { R5576 += 1, R5577 += 1 };
  s0 -> s2 [0, 65535] { R5577 += 1, R5532 += 1, R5533 += 1 };
  s0 -> s3 [75, 75] { R5577 += 1, R5533 += 1 };
  s0 -> s4 [75, 75] { R5577 += 1, R5533 += 1 };
  s0 -> s5 [87, 87] { R5577 += 1, R5533 += 1 };
  s0 -> s1 [88, 65535] { R5577 += 1, R5533 += 1 };
  s1 -> s1 [0, 74] { R5577 += 1, R5533 += 1 };
  s1 -> s3 [75, 75] { R5577 += 1, R5533 += 1 };
  s1 -> s4 [75, 75] { R5577 += 1, R5533 += 1 };
  s1 -> s5 [87, 87] { R5577 += 1, R5533 += 1 };
  s1 -> s1 [88, 65535] { R5577 += 1, R5533 += 1 };
  s2 -> s1 [0, 74] { R5577 += 1, R5533 += 1 };
  s2 -> s2 [0, 65535] { R5577 += 1, R5532 += 1, R5533 += 1 };
  s2 -> s3 [75, 75] { R5577 += 1, R5533 += 1 };
  s2 -> s4 [75, 75] { R5577 += 1, R5533 += 1 };
  s2 -> s5 [87, 87] { R5577 += 1, R5533 += 1 };
  s2 -> s1 [88, 65535] { R5577 += 1, R5533 += 1 };
  s4 -> s4 [0, 75] { R5577 += 1, R5533 += 1 };
  s4 -> s7 [87, 87] { R5577 += 1, R5533 += 1 };
  s4 -> s4 [88, 65535] { R5577 += 1, R5533 += 1 };
  s5 -> s5 [0, 74] { R5577 += 1, R5533 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R5577 += 1 };
  s5 -> s7 [75, 75] { R5577 += 1, R5533 += 1 };
  s5 -> s8 [75, 75] { R5577 += 1, R5533 += 1 };
  s5 -> s5 [87, 65535] { R5577 += 1, R5533 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 75] { R5577 += 1, R5533 += 1 };
  s7 -> s7 [0, 65535] { R5577 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [87, 65535] { R5577 += 1, R5533 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R5577 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 74] { R5579 += 1, R5535 += 1, R66 += 1 };
  s0 -> s2 [0, 65535] { R5579 += 1, R5534 += 1, R5535 += 1 };
  s0 -> s0 [0, 65535] { R5578 += 1, R5579 += 1 };
  s0 -> s3 [75, 75] { R5579 += 1, R5535 += 1, R66 += 1 };
  s0 -> s4 [75, 75] { R5579 += 1, R5535 += 1, R66 += 1 };
  s0 -> s1 [76, 65535] { R5579 += 1, R5535 += 1, R66 += 1 };
  s1 -> s1 [0, 74] { R5579 += 1, R5535 += 1, R66 += 1 };
  s1 -> s1 [0, 65535] { R5579 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [75, 75] { R5579 += 1, R5535 += 1, R66 += 1 };
  s1 -> s4 [75, 75] { R5579 += 1, R5535 += 1, R66 += 1 };
  s1 -> s1 [76, 65535] { R5579 += 1, R5535 += 1, R66 += 1 };
  s2 -> s1 [0, 74] { R5579 += 1, R5535 += 1, R66 += 1 };
  s2 -> s2 [0, 65535] { R5579 += 1, R5534 += 1, R5535 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [75, 75] { R5579 += 1, R5535 += 1, R66 += 1 };
  s2 -> s4 [75, 75] { R5579 += 1, R5535 += 1, R66 += 1 };
  s2 -> s1 [76, 65535] { R5579 += 1, R5535 += 1, R66 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5579 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5579 += 1 };
  s4 -> s4 [0, 65535] { R5579 += 1, R5535 += 1, R66 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5579 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 74] { R5581 += 1, R5537 += 1, R68 += 1 };
  s0 -> s2 [0, 65535] { R5581 += 1, R5536 += 1, R5537 += 1 };
  s0 -> s0 [0, 65535] { R5580 += 1, R5581 += 1 };
  s0 -> s3 [75, 75] { R5581 += 1, R5537 += 1, R68 += 1 };
  s0 -> s4 [75, 75] { R5581 += 1, R5537 += 1, R68 += 1 };
  s0 -> s1 [76, 65535] { R5581 += 1, R5537 += 1, R68 += 1 };
  s1 -> s1 [0, 74] { R5581 += 1, R5537 += 1, R68 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5581 += 1 };
  s1 -> s3 [75, 75] { R5581 += 1, R5537 += 1, R68 += 1 };
  s1 -> s4 [75, 75] { R5581 += 1, R5537 += 1, R68 += 1 };
  s1 -> s1 [76, 65535] { R5581 += 1, R5537 += 1, R68 += 1 };
  s2 -> s1 [0, 74] { R5581 += 1, R5537 += 1, R68 += 1 };
  s2 -> s2 [0, 65535] { R5581 += 1, R5536 += 1, R5537 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [75, 75] { R5581 += 1, R5537 += 1, R68 += 1 };
  s2 -> s4 [75, 75] { R5581 += 1, R5537 += 1, R68 += 1 };
  s2 -> s1 [76, 65535] { R5581 += 1, R5537 += 1, R68 += 1 };
  s3 -> s3 [0, 65535] { R5581 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5581 += 1, R5537 += 1, R68 += 1 };
  s4 -> s6 [0, 65535] { R5581 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5581 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R5583 += 1, R5539 += 1, R70 += 1, R71 += 1 };
  s0 -> s0 [0, 65535] { R5582 += 1, R5583 += 1 };
  s0 -> s2 [0, 65535] { R5583 += 1, R5538 += 1, R5539 += 1 };
  s0 -> s3 [75, 75] { R5583 += 1, R5539 += 1, R70 += 1, R71 += 1 };
  s0 -> s4 [75, 75] { R5583 += 1, R5539 += 1, R70 += 1, R71 += 1 };
  s0 -> s1 [76, 65535] { R5583 += 1, R5539 += 1, R70 += 1, R71 += 1 };
  s1 -> s1 [0, 74] { R5583 += 1, R5539 += 1, R70 += 1, R71 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5583 += 1 };
  s1 -> s3 [75, 75] { R5583 += 1, R5539 += 1, R70 += 1, R71 += 1 };
  s1 -> s4 [75, 75] { R5583 += 1, R5539 += 1, R70 += 1, R71 += 1 };
  s1 -> s1 [76, 65535] { R5583 += 1, R5539 += 1, R70 += 1, R71 += 1 };
  s2 -> s1 [0, 74] { R5583 += 1, R5539 += 1, R70 += 1, R71 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5583 += 1, R5538 += 1, R5539 += 1 };
  s2 -> s3 [75, 75] { R5583 += 1, R5539 += 1, R70 += 1, R71 += 1 };
  s2 -> s4 [75, 75] { R5583 += 1, R5539 += 1, R70 += 1, R71 += 1 };
  s2 -> s1 [76, 65535] { R5583 += 1, R5539 += 1, R70 += 1, R71 += 1 };
  s3 -> s3 [0, 65535] { R5583 += 1, R5539 += 1, R70 += 1, R71 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R5583 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5583 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5583 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R5585 += 1, R5541 += 1, R3891 += 1, R3892 += 1 };
  s0 -> s2 [0, 74] { R5585 += 1, R5541 += 1, R3890 += 1, R3891 += 1 };
  s0 -> s0 [0, 65535] { R5584 += 1, R5585 += 1 };
  s0 -> s3 [0, 65535] { R5585 += 1, R5540 += 1, R5541 += 1 };
  s0 -> s4 [75, 75] { R5585 += 1, R5541 += 1, R3890 += 1, R3891 += 1 };
  s0 -> s5 [75, 75] { R5585 += 1, R5541 += 1, R3891 += 1, R3892 += 1 };
  s0 -> s6 [75, 75] { R5585 += 1, R5541 += 1, R3890 += 1, R3891 += 1 };
  s0 -> s7 [75, 75] { R5585 += 1, R5541 += 1, R3891 += 1, R3892 += 1 };
  s0 -> s1 [76, 65535] { R5585 += 1, R5541 += 1, R3891 += 1, R3892 += 1 };
  s0 -> s2 [76, 65535] { R5585 += 1, R5541 += 1, R3890 += 1, R3891 += 1 };
  s1 -> s1 [0, 74] { R5585 += 1, R5541 += 1, R3891 += 1, R3892 += 1 };
  s1 -> s1 [0, 65535] { R5585 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s5 [75, 75] { R5585 += 1, R5541 += 1, R3891 += 1, R3892 += 1 };
  s1 -> s7 [75, 75] { R5585 += 1, R5541 += 1, R3891 += 1, R3892 += 1 };
  s1 -> s1 [76, 65535] { R5585 += 1, R5541 += 1, R3891 += 1, R3892 += 1 };
  s2 -> s1 [0, 74] { R5585 += 1, R5541 += 1, R3891 += 1, R3892 += 1 };
  s2 -> s2 [0, 74] { R5585 += 1, R5541 += 1, R3890 += 1, R3891 += 1 };
  s2 -> s4 [75, 75] { R5585 += 1, R5541 += 1, R3890 += 1, R3891 += 1 };
  s2 -> s5 [75, 75] { R5585 += 1, R5541 += 1, R3891 += 1, R3892 += 1 };
  s2 -> s6 [75, 75] { R5585 += 1, R5541 += 1, R3890 += 1, R3891 += 1 };
  s2 -> s7 [75, 75] { R5585 += 1, R5541 += 1, R3891 += 1, R3892 += 1 };
  s2 -> s1 [76, 65535] { R5585 += 1, R5541 += 1, R3891 += 1, R3892 += 1 };
  s2 -> s2 [76, 65535] { R5585 += 1, R5541 += 1, R3890 += 1, R3891 += 1 };
  s3 -> s1 [0, 74] { R5585 += 1, R5541 += 1, R3891 += 1, R3892 += 1 };
  s3 -> s2 [0, 74] { R5585 += 1, R5541 += 1, R3890 += 1, R3891 += 1 };
  s3 -> s3 [0, 65535] { R5585 += 1, R5540 += 1, R5541 += 1 };
  s3 -> s4 [75, 75] { R5585 += 1, R5541 += 1, R3890 += 1, R3891 += 1 };
  s3 -> s5 [75, 75] { R5585 += 1, R5541 += 1, R3891 += 1, R3892 += 1 };
  s3 -> s6 [75, 75] { R5585 += 1, R5541 += 1, R3890 += 1, R3891 += 1 };
  s3 -> s7 [75, 75] { R5585 += 1, R5541 += 1, R3891 += 1, R3892 += 1 };
  s3 -> s1 [76, 65535] { R5585 += 1, R5541 += 1, R3891 += 1, R3892 += 1 };
  s3 -> s2 [76, 65535] { R5585 += 1, R5541 += 1, R3890 += 1, R3891 += 1 };
  s4 -> s4 [0, 65535] { R5585 += 1, R5541 += 1, R3890 += 1, R3891 += 1 };
  s4 -> s7 [0, 65535] { R5585 += 1, R5541 += 1, R3891 += 1, R3892 += 1 };
  s5 -> s9 [0, 65535];
  s5 -> s5 [0, 65535] { R5585 += 1 };
  s7 -> s8 [0, 65535] { R5585 += 1 };
  s7 -> s9 [0, 65535];
  s7 -> s7 [0, 65535] { R5585 += 1, R5541 += 1, R3891 += 1, R3892 += 1 };
  s8 -> s8 [0, 65535] { R5585 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  accepting s8, s5, s9, s1, s7;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 74] { R5587 += 1, R5543 += 1, R5166 += 1, R5167 += 1 };
  s0 -> s2 [0, 74] { R5587 += 1, R5543 += 1, R5167 += 1 };
  s0 -> s3 [0, 65535] { R5587 += 1, R5542 += 1, R5543 += 1 };
  s0 -> s0 [0, 65535] { R5586 += 1, R5587 += 1 };
  s0 -> s4 [75, 75] { R5587 += 1, R5543 += 1, R5167 += 1 };
  s0 -> s5 [75, 75] { R5587 += 1, R5543 += 1, R5167 += 1 };
  s0 -> s6 [75, 75] { R5587 += 1, R5543 += 1, R5166 += 1, R5167 += 1 };
  s0 -> s7 [75, 75] { R5587 += 1, R5543 += 1, R5166 += 1, R5167 += 1 };
  s0 -> s2 [76, 87] { R5587 += 1, R5543 += 1, R5167 += 1 };
  s0 -> s1 [76, 65535] { R5587 += 1, R5543 += 1, R5166 += 1, R5167 += 1 };
  s0 -> s2 [90, 65535] { R5587 += 1, R5543 += 1, R5167 += 1 };
  s1 -> s1 [0, 74] { R5587 += 1, R5543 += 1, R5166 += 1, R5167 += 1 };
  s1 -> s2 [0, 74] { R5587 += 1, R5543 += 1, R5167 += 1 };
  s1 -> s4 [75, 75] { R5587 += 1, R5543 += 1, R5167 += 1 };
  s1 -> s5 [75, 75] { R5587 += 1, R5543 += 1, R5167 += 1 };
  s1 -> s6 [75, 75] { R5587 += 1, R5543 += 1, R5166 += 1, R5167 += 1 };
  s1 -> s7 [75, 75] { R5587 += 1, R5543 += 1, R5166 += 1, R5167 += 1 };
  s1 -> s2 [76, 87] { R5587 += 1, R5543 += 1, R5167 += 1 };
  s1 -> s1 [76, 65535] { R5587 += 1, R5543 += 1, R5166 += 1, R5167 += 1 };
  s1 -> s2 [90, 65535] { R5587 += 1, R5543 += 1, R5167 += 1 };
  s2 -> s2 [0, 74] { R5587 += 1, R5543 += 1, R5167 += 1 };
  s2 -> s2 [0, 65535] { R5587 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [75, 75] { R5587 += 1, R5543 += 1, R5167 += 1 };
  s2 -> s5 [75, 75] { R5587 += 1, R5543 += 1, R5167 += 1 };
  s2 -> s2 [76, 87] { R5587 += 1, R5543 += 1, R5167 += 1 };
  s2 -> s2 [90, 65535] { R5587 += 1, R5543 += 1, R5167 += 1 };
  s3 -> s1 [0, 74] { R5587 += 1, R5543 += 1, R5166 += 1, R5167 += 1 };
  s3 -> s2 [0, 74] { R5587 += 1, R5543 += 1, R5167 += 1 };
  s3 -> s3 [0, 65535] { R5587 += 1, R5542 += 1, R5543 += 1 };
  s3 -> s4 [75, 75] { R5587 += 1, R5543 += 1, R5167 += 1 };
  s3 -> s5 [75, 75] { R5587 += 1, R5543 += 1, R5167 += 1 };
  s3 -> s6 [75, 75] { R5587 += 1, R5543 += 1, R5166 += 1, R5167 += 1 };
  s3 -> s7 [75, 75] { R5587 += 1, R5543 += 1, R5166 += 1, R5167 += 1 };
  s3 -> s2 [76, 87] { R5587 += 1, R5543 += 1, R5167 += 1 };
  s3 -> s1 [76, 65535] { R5587 += 1, R5543 += 1, R5166 += 1, R5167 += 1 };
  s3 -> s2 [90, 65535] { R5587 += 1, R5543 += 1, R5167 += 1 };
  s4 -> s4 [0, 87] { R5587 += 1, R5543 += 1, R5167 += 1 };
  s4 -> s4 [0, 65535] { R5587 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [90, 65535] { R5587 += 1, R5543 += 1, R5167 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R5587 += 1 };
  s7 -> s4 [0, 87] { R5587 += 1, R5543 += 1, R5167 += 1 };
  s7 -> s7 [0, 65535] { R5587 += 1, R5543 += 1, R5166 += 1, R5167 += 1 };
  s7 -> s4 [90, 65535] { R5587 += 1, R5543 += 1, R5167 += 1 };
  s8 -> s8 [0, 65535];
  accepting s2, s4, s5, s8;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 74] { R5589 += 1, R5545 += 1, R5170 += 1, R5171 += 1 };
  s0 -> s0 [0, 65535] { R5588 += 1, R5589 += 1 };
  s0 -> s2 [0, 65535] { R5589 += 1, R5544 += 1, R5545 += 1 };
  s0 -> s3 [75, 75] { R5589 += 1, R5545 += 1, R5170 += 1, R5171 += 1 };
  s0 -> s4 [75, 75] { R5589 += 1, R5545 += 1, R5170 += 1, R5171 += 1 };
  s0 -> s1 [76, 65535] { R5589 += 1, R5545 += 1, R5170 += 1, R5171 += 1 };
  s1 -> s1 [0, 74] { R5589 += 1, R5545 += 1, R5170 += 1, R5171 += 1 };
  s1 -> s1 [0, 65535] { R5589 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [75, 75] { R5589 += 1, R5545 += 1, R5170 += 1, R5171 += 1 };
  s1 -> s4 [75, 75] { R5589 += 1, R5545 += 1, R5170 += 1, R5171 += 1 };
  s1 -> s1 [76, 65535] { R5589 += 1, R5545 += 1, R5170 += 1, R5171 += 1 };
  s2 -> s1 [0, 74] { R5589 += 1, R5545 += 1, R5170 += 1, R5171 += 1 };
  s2 -> s2 [0, 65535] { R5589 += 1, R5544 += 1, R5545 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [75, 75] { R5589 += 1, R5545 += 1, R5170 += 1, R5171 += 1 };
  s2 -> s4 [75, 75] { R5589 += 1, R5545 += 1, R5170 += 1, R5171 += 1 };
  s2 -> s1 [76, 65535] { R5589 += 1, R5545 += 1, R5170 += 1, R5171 += 1 };
  s3 -> s3 [0, 65535] { R5589 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R5589 += 1 };
  s4 -> s4 [0, 65535] { R5589 += 1, R5545 += 1, R5170 += 1, R5171 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R5589 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 74] { R5591 += 1, R5547 += 1, R5488 += 1, R5489 += 1 };
  s0 -> s2 [0, 74] { R5591 += 1, R5547 += 1, R5489 += 1 };
  s0 -> s3 [0, 65535] { R5591 += 1, R5546 += 1, R5547 += 1 };
  s0 -> s0 [0, 65535] { R5590 += 1, R5591 += 1 };
  s0 -> s4 [75, 75] { R5591 += 1, R5547 += 1, R5489 += 1 };
  s0 -> s5 [75, 75] { R5591 += 1, R5547 += 1, R5488 += 1, R5489 += 1 };
  s0 -> s6 [75, 75] { R5591 += 1, R5547 += 1, R5489 += 1 };
  s0 -> s7 [75, 75] { R5591 += 1, R5547 += 1, R5488 += 1, R5489 += 1 };
  s0 -> s2 [76, 86] { R5591 += 1, R5547 += 1, R5489 += 1 };
  s0 -> s1 [76, 65535] { R5591 += 1, R5547 += 1, R5488 += 1, R5489 += 1 };
  s0 -> s8 [87, 87] { R5591 += 1, R5547 += 1, R5489 += 1 };
  s0 -> s2 [90, 65535] { R5591 += 1, R5547 += 1, R5489 += 1 };
  s1 -> s1 [0, 74] { R5591 += 1, R5547 += 1, R5488 += 1, R5489 += 1 };
  s1 -> s2 [0, 74] { R5591 += 1, R5547 += 1, R5489 += 1 };
  s1 -> s4 [75, 75] { R5591 += 1, R5547 += 1, R5489 += 1 };
  s1 -> s5 [75, 75] { R5591 += 1, R5547 += 1, R5488 += 1, R5489 += 1 };
  s1 -> s6 [75, 75] { R5591 += 1, R5547 += 1, R5489 += 1 };
  s1 -> s7 [75, 75] { R5591 += 1, R5547 += 1, R5488 += 1, R5489 += 1 };
  s1 -> s2 [76, 86] { R5591 += 1, R5547 += 1, R5489 += 1 };
  s1 -> s1 [76, 65535] { R5591 += 1, R5547 += 1, R5488 += 1, R5489 += 1 };
  s1 -> s8 [87, 87] { R5591 += 1, R5547 += 1, R5489 += 1 };
  s1 -> s2 [90, 65535] { R5591 += 1, R5547 += 1, R5489 += 1 };
  s2 -> s2 [0, 74] { R5591 += 1, R5547 += 1, R5489 += 1 };
  s2 -> s4 [75, 75] { R5591 += 1, R5547 += 1 };
  s2 -> s6 [75, 75] { R5591 += 1, R5547 += 1 };
  s2 -> s2 [76, 86] { R5591 += 1, R5547 += 1, R5489 += 1 };
  s2 -> s2 [76, 65535] { R5591 += 1, R5547 += 1 };
  s2 -> s8 [87, 87] { R5591 += 1, R5547 += 1, R5489 += 1 };
  s2 -> s2 [90, 65535] { R5591 += 1, R5547 += 1, R5489 += 1 };
  s3 -> s1 [0, 74] { R5591 += 1, R5547 += 1, R5488 += 1, R5489 += 1 };
  s3 -> s2 [0, 74] { R5591 += 1, R5547 += 1, R5489 += 1 };
  s3 -> s3 [0, 65535] { R5591 += 1, R5546 += 1, R5547 += 1 };
  s3 -> s4 [75, 75] { R5591 += 1, R5547 += 1, R5489 += 1 };
  s3 -> s5 [75, 75] { R5591 += 1, R5547 += 1, R5488 += 1, R5489 += 1 };
  s3 -> s6 [75, 75] { R5591 += 1, R5547 += 1, R5489 += 1 };
  s3 -> s7 [75, 75] { R5591 += 1, R5547 += 1, R5488 += 1, R5489 += 1 };
  s3 -> s2 [76, 86] { R5591 += 1, R5547 += 1, R5489 += 1 };
  s3 -> s1 [76, 65535] { R5591 += 1, R5547 += 1, R5488 += 1, R5489 += 1 };
  s3 -> s8 [87, 87] { R5591 += 1, R5547 += 1, R5489 += 1 };
  s3 -> s2 [90, 65535] { R5591 += 1, R5547 += 1, R5489 += 1 };
  s4 -> s4 [0, 86] { R5591 += 1, R5547 += 1, R5489 += 1 };
  s4 -> s4 [0, 65535] { R5591 += 1, R5547 += 1 };
  s4 -> s10 [87, 87] { R5591 += 1, R5547 += 1, R5489 += 1 };
  s4 -> s4 [90, 65535] { R5591 += 1, R5547 += 1, R5489 += 1 };
  s7 -> s4 [0, 86] { R5591 += 1, R5547 += 1, R5489 += 1 };
  s7 -> s7 [0, 65535] { R5591 += 1, R5547 += 1, R5488 += 1, R5489 += 1 };
  s7 -> s10 [87, 87] { R5591 += 1, R5547 += 1, R5489 += 1 };
  s7 -> s4 [90, 65535] { R5591 += 1, R5547 += 1, R5489 += 1 };
  s8 -> s8 [0, 74] { R5591 += 1, R5547 += 1 };
  s8 -> s8 [0, 65535] { R5591 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [75, 75] { R5591 += 1, R5547 += 1 };
  s8 -> s11 [75, 75] { R5591 += 1, R5547 += 1 };
  s8 -> s8 [76, 65535] { R5591 += 1, R5547 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R5591 += 1, R5547 += 1 };
  s10 -> s12 [0, 65535] { R5591 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R5591 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R5591 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
constraint R1 = R5507 && R2 = R5591 && R20 - R5591 = -1 && R21 = R5591 && R22 - R5591 = -1 && R23 = R5591 && R24 = 0 && R25 = 1 && R26 = 0 && R27 = 1 && R38 + R67 + R66 + -1*R5169 + -1*R5167 - R53 = 0 && R52 + R5168 + R5166 = 0 && R5506 = 0 && R5532 = 0 && R5533 = 0 && R5540 = 0 && R5541 = 0 && R5542 = 0 && R5543 = 0 && R5546 = 0 && R5547 = 0 && R5548 = 0 && R5549 = R5591 && R5550 = 0 && R5551 = R5591 && R5552 = 0 && R5553 = R5591 && R5554 = 0 && R5555 = R5591 && R5556 = 0 && R5557 = R5591 && R5558 = 0 && R5559 = R5591 && R5560 = 0 && R5561 = R5591 && R5562 = 0 && R5563 = R5591 && R5564 = 0 && R5565 = R5591 && R5566 = 0 && R5567 = R5591 && R5568 = 0 && R5569 = R5591 && R5570 = 0 && R5571 = R5591 && R5572 = 0 && R5573 = R5591 && R5574 = 0 && R5575 = R5591 && R5576 = 0 && R5577 = R5591 && R5578 = 0 && R5579 = R5591 && R5580 = 0 && R5581 = R5591 && R5582 = 0 && R5583 = R5591 && R5584 = 0 && R5585 = R5591 && R5586 = 0 && R5587 = R5591 && R5588 = 0 && R5589 = R5591 && R5590 = 0 && R8 < 1 && R11 < 1 && R12 < 1 && R40 + R69 + R68 < 1 && -1*R5169 + -1*R5167 - R53 < 1 && -1 < R5507 && 0 < R5591 && (R48 + R3895 + R3892 != 0 || ((R42 + R72 + R70 != 0 || R43 + R73 + R71 + -1*R5169 + -1*R5167 - R53 = 0 || R53 + R5169 + R5167 < 1) && (R42 + R72 + R70 = 0 || R53 + R5169 + R5167 < 1))) && (R48 + R3895 + R3892 != 0 || ((R46 + R3893 + R3890 != 0 || R47 + R3894 + R3891 + -1*R5169 + -1*R5167 - R53 = 0 || R53 + R5169 + R5167 < 1) && (R46 + R3893 + R3890 = 0 || R53 + R5169 + R5167 < 1))) && (R5492 != 0 || R5493 = R5507 || (R17 = 0 && R5507 = 0)) && (R5494 != 0 || R5495 = R5507 || (R17 = 0 && R5507 = 0)) && (R5496 != 0 || R5497 = R5507 || (R17 = 0 && R5507 = 0)) && (R5498 != 0 || R5499 = R5507 || (R17 = 0 && R5507 = 0)) && (R5500 != 0 || R5501 = R5507 || (R17 = 0 && R5507 = 0)) && (R5502 != 0 || R5503 = R5507 || (R17 = 0 && R5507 = 0)) && (R5504 != 0 || R5505 = R5507 || (R17 = 0 && R5507 = 0)) && (R5508 != 0 || R5507 = R5509 || (R17 = 0 && R5507 = 0)) && (R5510 != 0 || R5507 = R5511 || (R17 = 0 && R5507 = 0)) && (R18 = 0 || (R5530 = 0 && R5531 = 0)) && (R18 = 0 || (R5534 = 0 && R5535 = 0)) && (R18 = 0 || (R5536 = 0 && R5537 = 0)) && (R18 = 0 || (R5538 = 0 && R5539 = 0)) && (R18 = 0 || (R5544 = 0 && R5545 = 0)) && (R19 = 0 || (R5512 = 0 && R5513 = 0)) && (R19 = 0 || (R5514 = 0 && R5515 = 0)) && (R19 = 0 || (R5516 = 0 && R5517 = 0)) && (R19 = 0 || (R5518 = 0 && R5519 = 0)) && (R19 = 0 || (R5520 = 0 && R5521 = 0)) && (R19 = 0 || (R5522 = 0 && R5523 = 0)) && (R19 = 0 || (R5524 = 0 && R5525 = 0)) && (R19 = 0 || (R5526 = 0 && R5527 = 0)) && (R19 = 0 || (R5528 = 0 && R5529 = 0)) && (R48 + R3895 + R3892 = 0 || (R42 + R72 + R70 = 0 && R43 + R73 + R71 + -1*R5169 + -1*R5167 - R53 = 0)) && (R48 + R3895 + R3892 = 0 || (R46 + R3893 + R3890 = 0 && R47 + R3894 + R3891 + -1*R5169 + -1*R5167 - R53 = 0)) && (R58 + R5175 + R5172 = 0 || (R56 + R5173 + R5170 = 0 && R57 + R5174 + R5171 = 0)) && (R58 + R5175 + R5172 = 0 || (R62 + R5490 + R5488 = 0 && R63 + R5491 + R5489 = 0)) && (R5492 = 0 || (R17 = 0 && R5507 = 0)) && (R5494 = 0 || (R17 = 0 && R5507 = 0)) && (R5496 = 0 || (R17 = 0 && R5507 = 0)) && (R5498 = 0 || (R17 = 0 && R5507 = 0)) && (R5500 = 0 || (R17 = 0 && R5507 = 0)) && (R5502 = 0 || (R17 = 0 && R5507 = 0)) && (R5504 = 0 || (R17 = 0 && R5507 = 0)) && (R5508 = 0 || (R17 = 0 && R5507 = 0)) && (R5510 = 0 || (R17 = 0 && R5507 = 0));
// End of Parikh automata intersection problem
