// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R11522, R11523, R11524, R11525, R11526, R11527, R11528, R11529, R11530, R11531, R12, R14072, R14073, R14074, R14075, R14920, R14921, R14922, R14923, R14924, R14925, R15238, R15239, R15240, R15241, R15242, R15243, R15244, R15245, R15246, R15247, R15248, R15249, R15250, R15251, R15252, R15253, R15254, R15255, R15256, R15257, R15258, R15259, R15260, R15261, R15262, R15263, R15264, R15265, R15266, R15267, R15268, R15269, R15270, R15271, R15272, R15273, R15274, R15275, R15276, R15277, R15278, R15279, R15280, R15281, R15282, R15283, R15284, R15285, R15286, R15287, R15288, R15289, R15290, R15291, R15292, R15293, R15294, R15295, R15296, R15297, R15298, R15299, R15300, R15301, R15302, R15303, R15304, R15305, R15306, R15307, R15308, R15309, R15310, R15311, R15312, R15313, R15314, R15315, R15316, R15317, R15318, R15319, R15320, R15321, R15322, R15323, R15324, R15325, R15326, R15327, R15328, R15329, R15330, R15331, R15332, R15333, R15334, R15335, R15336, R15337, R15338, R15339, R15340, R15341, R17, R18, R19, R2, R20, R21, R22, R23, R24, R25, R26, R27, R3, R38, R4, R40, R42, R43, R46, R47, R48, R52, R53, R56, R57, R58, R62, R63, R66, R67, R68, R69, R8;
synchronised {  // Automata constraining P64
automaton P64_0 {
  init s0;
  s0 -> s1 [119, 119];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [75, 75];
  s0 -> s0 [76, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [75, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R2 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R11 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 74];
  s0 -> s0 [0, 65535] { R12 += 1 };
  s0 -> s2 [75, 75];
  s0 -> s1 [76, 65535];
  s1 -> s1 [0, 74];
  s1 -> s2 [75, 75];
  s1 -> s1 [76, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R21 += 1 };
  s0 -> s0 [0, 65535] { R20 += 1, R21 += 1 };
  s0 -> s2 [9, 13] { R21 += 1 };
  s0 -> s1 [14, 31] { R21 += 1 };
  s0 -> s2 [32, 32] { R21 += 1 };
  s0 -> s1 [33, 65535] { R21 += 1 };
  s1 -> s1 [0, 65535] { R21 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R21 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R22 += 1, R23 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R25 += 1 };
  s0 -> s0 [0, 65535] { R24 += 1, R25 += 1 };
  s0 -> s2 [9, 13] { R25 += 1 };
  s0 -> s1 [14, 31] { R25 += 1 };
  s0 -> s2 [32, 32] { R25 += 1 };
  s0 -> s1 [33, 65535] { R25 += 1 };
  s1 -> s1 [0, 65535] { R25 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R25 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R26 += 1, R27 += 1 };
  s1 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R15263 += 1, R19 += 1 };
  s0 -> s0 [0, 65535] { R15262 += 1, R15263 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R15263 += 1, R19 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 74] { R15265 += 1 };
  s0 -> s0 [0, 65535] { R15264 += 1, R15265 += 1 };
  s0 -> s2 [75, 75] { R15265 += 1 };
  s0 -> s3 [75, 75] { R15265 += 1 };
  s0 -> s1 [88, 65535] { R15265 += 1 };
  s1 -> s1 [0, 74] { R15265 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R15265 += 1 };
  s1 -> s3 [75, 75] { R15265 += 1 };
  s1 -> s1 [88, 65535] { R15265 += 1 };
  s2 -> s2 [0, 75] { R15265 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [88, 65535] { R15265 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 74] { R15267 += 1, R38 += 1 };
  s0 -> s0 [0, 65535] { R15266 += 1, R15267 += 1 };
  s0 -> s2 [75, 75] { R15267 += 1, R38 += 1 };
  s0 -> s3 [75, 75] { R15267 += 1, R38 += 1 };
  s0 -> s1 [76, 65535] { R15267 += 1, R38 += 1 };
  s1 -> s1 [0, 74] { R15267 += 1, R38 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R15267 += 1, R38 += 1 };
  s1 -> s3 [75, 75] { R15267 += 1, R38 += 1 };
  s1 -> s1 [76, 65535] { R15267 += 1, R38 += 1 };
  s2 -> s2 [0, 65535] { R15267 += 1, R38 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 74] { R15269 += 1, R40 += 1 };
  s0 -> s0 [0, 65535] { R15268 += 1, R15269 += 1 };
  s0 -> s2 [75, 75] { R15269 += 1, R40 += 1 };
  s0 -> s3 [75, 75] { R15269 += 1, R40 += 1 };
  s0 -> s1 [76, 65535] { R15269 += 1, R40 += 1 };
  s1 -> s1 [0, 74] { R15269 += 1, R40 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R15269 += 1, R40 += 1 };
  s1 -> s3 [75, 75] { R15269 += 1, R40 += 1 };
  s1 -> s1 [76, 65535] { R15269 += 1, R40 += 1 };
  s2 -> s2 [0, 65535] { R15269 += 1, R40 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 74] { R15271 += 1, R42 += 1, R43 += 1 };
  s0 -> s0 [0, 65535] { R15270 += 1, R15271 += 1 };
  s0 -> s2 [75, 75] { R15271 += 1, R42 += 1, R43 += 1 };
  s0 -> s3 [75, 75] { R15271 += 1, R42 += 1, R43 += 1 };
  s0 -> s1 [76, 65535] { R15271 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 74] { R15271 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R15271 += 1, R42 += 1, R43 += 1 };
  s1 -> s3 [75, 75] { R15271 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [76, 65535] { R15271 += 1, R42 += 1, R43 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R15271 += 1, R42 += 1, R43 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 74] { R15273 += 1, R46 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R15272 += 1, R15273 += 1 };
  s0 -> s2 [75, 75] { R15273 += 1, R46 += 1, R47 += 1 };
  s0 -> s3 [75, 75] { R15273 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [76, 65535] { R15273 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 74] { R15273 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R15273 += 1, R46 += 1, R47 += 1 };
  s1 -> s3 [75, 75] { R15273 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [76, 65535] { R15273 += 1, R46 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R15273 += 1, R46 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 74] { R15275 += 1, R52 += 1, R53 += 1 };
  s0 -> s0 [0, 65535] { R15274 += 1, R15275 += 1 };
  s0 -> s2 [75, 75] { R15275 += 1, R52 += 1, R53 += 1 };
  s0 -> s3 [75, 75] { R15275 += 1, R52 += 1, R53 += 1 };
  s0 -> s1 [76, 65535] { R15275 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 74] { R15275 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R15275 += 1, R52 += 1, R53 += 1 };
  s1 -> s3 [75, 75] { R15275 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [76, 65535] { R15275 += 1, R52 += 1, R53 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R15275 += 1, R52 += 1, R53 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 74] { R15277 += 1, R56 += 1, R57 += 1 };
  s0 -> s0 [0, 65535] { R15276 += 1, R15277 += 1 };
  s0 -> s2 [75, 75] { R15277 += 1, R56 += 1, R57 += 1 };
  s0 -> s3 [75, 75] { R15277 += 1, R56 += 1, R57 += 1 };
  s0 -> s1 [76, 65535] { R15277 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 74] { R15277 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R15277 += 1, R56 += 1, R57 += 1 };
  s1 -> s3 [75, 75] { R15277 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [76, 65535] { R15277 += 1, R56 += 1, R57 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R15277 += 1, R56 += 1, R57 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 74] { R15279 += 1, R62 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R15278 += 1, R15279 += 1 };
  s0 -> s2 [75, 75] { R15279 += 1, R62 += 1, R63 += 1 };
  s0 -> s3 [75, 75] { R15279 += 1, R62 += 1, R63 += 1 };
  s0 -> s1 [76, 65535] { R15279 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 74] { R15279 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R15279 += 1, R62 += 1, R63 += 1 };
  s1 -> s3 [75, 75] { R15279 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [76, 65535] { R15279 += 1, R62 += 1, R63 += 1 };
  s2 -> s2 [0, 65535] { R15279 += 1, R62 += 1, R63 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 74] { R15299 += 1 };
  s0 -> s0 [0, 65535] { R15298 += 1, R15299 += 1 };
  s0 -> s2 [75, 75] { R15299 += 1 };
  s0 -> s1 [76, 65535] { R15299 += 1 };
  s1 -> s1 [0, 74] { R15299 += 1 };
  s1 -> s2 [75, 75] { R15299 += 1 };
  s1 -> s1 [76, 65535] { R15299 += 1 };
  s2 -> s2 [0, 65535] { R15299 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R15300 += 1, R15301 += 1 };
  s0 -> s1 [0, 65535] { R15301 += 1, R1 += 1 };
  s1 -> s1 [0, 65535] { R15301 += 1, R1 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 74] { R15303 += 1 };
  s0 -> s2 [0, 65535] { R15303 += 1, R8 += 1 };
  s0 -> s0 [0, 65535] { R15302 += 1, R15303 += 1 };
  s0 -> s3 [75, 75] { R15303 += 1 };
  s0 -> s1 [76, 65535] { R15303 += 1 };
  s1 -> s1 [0, 74] { R15303 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [75, 75] { R15303 += 1 };
  s1 -> s1 [76, 65535] { R15303 += 1 };
  s2 -> s1 [0, 74] { R15303 += 1 };
  s2 -> s2 [0, 65535] { R15303 += 1, R8 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [75, 75] { R15303 += 1 };
  s2 -> s1 [76, 65535] { R15303 += 1 };
  s3 -> s3 [0, 65535] { R15303 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 74] { R15305 += 1, R15243 += 1 };
  s0 -> s2 [0, 65535] { R15305 += 1, R15242 += 1, R15243 += 1 };
  s0 -> s0 [0, 65535] { R15304 += 1, R15305 += 1 };
  s0 -> s1 [76, 65535] { R15305 += 1, R15243 += 1 };
  s1 -> s1 [0, 74] { R15305 += 1, R15243 += 1 };
  s1 -> s1 [0, 65535] { R15305 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [76, 65535] { R15305 += 1, R15243 += 1 };
  s2 -> s1 [0, 74] { R15305 += 1, R15243 += 1 };
  s2 -> s2 [0, 65535] { R15305 += 1, R15242 += 1, R15243 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [76, 65535] { R15305 += 1, R15243 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R15307 += 1, R15245 += 1, R17 += 1 };
  s0 -> s2 [0, 65535] { R15307 += 1, R15244 += 1, R15245 += 1 };
  s0 -> s0 [0, 65535] { R15306 += 1, R15307 += 1 };
  s1 -> s1 [0, 65535] { R15307 += 1, R15245 += 1, R17 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R15307 += 1 };
  s2 -> s1 [0, 65535] { R15307 += 1, R15245 += 1, R17 += 1 };
  s2 -> s2 [0, 65535] { R15307 += 1, R15244 += 1, R15245 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R15307 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 75] { R15309 += 1, R15247 += 1 };
  s0 -> s2 [0, 65535] { R15309 += 1, R15246 += 1, R15247 += 1 };
  s0 -> s0 [0, 65535] { R15308 += 1, R15309 += 1 };
  s0 -> s1 [87, 65535] { R15309 += 1, R15247 += 1 };
  s1 -> s1 [0, 75] { R15309 += 1, R15247 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R15309 += 1 };
  s1 -> s1 [87, 65535] { R15309 += 1, R15247 += 1 };
  s2 -> s1 [0, 75] { R15309 += 1, R15247 += 1 };
  s2 -> s2 [0, 65535] { R15309 += 1, R15246 += 1, R15247 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [87, 65535] { R15309 += 1, R15247 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R15311 += 1, R15248 += 1, R15249 += 1 };
  s0 -> s2 [0, 65535] { R15311 += 1, R15249 += 1, R67 += 1 };
  s0 -> s0 [0, 65535] { R15310 += 1, R15311 += 1 };
  s1 -> s1 [0, 65535] { R15311 += 1, R15248 += 1, R15249 += 1 };
  s1 -> s2 [0, 65535] { R15311 += 1, R15249 += 1, R67 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R15311 += 1 };
  s2 -> s2 [0, 65535] { R15311 += 1, R15249 += 1, R67 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R15311 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 86] { R15313 += 1, R15251 += 1 };
  s0 -> s0 [0, 65535] { R15312 += 1, R15313 += 1 };
  s0 -> s2 [0, 65535] { R15313 += 1, R15251 += 1, R69 += 1 };
  s0 -> s3 [0, 65535] { R15313 += 1, R15250 += 1, R15251 += 1 };
  s0 -> s1 [88, 65535] { R15313 += 1, R15251 += 1 };
  s1 -> s1 [0, 86] { R15313 += 1, R15251 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R15313 += 1 };
  s1 -> s1 [88, 65535] { R15313 += 1, R15251 += 1 };
  s2 -> s1 [0, 86] { R15313 += 1, R15251 += 1 };
  s2 -> s5 [0, 65535] { R15313 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R15313 += 1, R15251 += 1, R69 += 1 };
  s2 -> s1 [88, 65535] { R15313 += 1, R15251 += 1 };
  s3 -> s1 [0, 86] { R15313 += 1, R15251 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R15313 += 1, R15251 += 1, R69 += 1 };
  s3 -> s3 [0, 65535] { R15313 += 1, R15250 += 1, R15251 += 1 };
  s3 -> s1 [88, 65535] { R15313 += 1, R15251 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R15313 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 86] { R15315 += 1, R15253 += 1, R11525 += 1 };
  s0 -> s2 [0, 65535] { R15315 += 1, R15252 += 1, R15253 += 1 };
  s0 -> s0 [0, 65535] { R15314 += 1, R15315 += 1 };
  s0 -> s1 [0, 65535] { R15315 += 1, R15253 += 1 };
  s0 -> s1 [88, 65535] { R15315 += 1, R15253 += 1, R11525 += 1 };
  s1 -> s1 [0, 86] { R15315 += 1, R15253 += 1, R11525 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R15315 += 1 };
  s1 -> s1 [0, 65535] { R15315 += 1, R15253 += 1 };
  s1 -> s1 [88, 65535] { R15315 += 1, R15253 += 1, R11525 += 1 };
  s2 -> s1 [0, 86] { R15315 += 1, R15253 += 1, R11525 += 1 };
  s2 -> s2 [0, 65535] { R15315 += 1, R15252 += 1, R15253 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R15315 += 1, R15253 += 1 };
  s2 -> s1 [88, 65535] { R15315 += 1, R15253 += 1, R11525 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R15315 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R15316 += 1, R15317 += 1 };
  s0 -> s1 [0, 65535] { R15317 += 1, R15255 += 1, R11529 += 1, R11530 += 1 };
  s0 -> s2 [0, 65535] { R15317 += 1, R15255 += 1, R11530 += 1, R11531 += 1 };
  s0 -> s3 [0, 65535] { R15317 += 1, R15254 += 1, R15255 += 1 };
  s1 -> s6 [0, 65535] { R15317 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R15317 += 1, R15255 += 1, R11529 += 1, R11530 += 1 };
  s1 -> s2 [0, 65535] { R15317 += 1, R15255 += 1, R11530 += 1, R11531 += 1 };
  s2 -> s5 [0, 65535] { R15317 += 1, R15255 += 1 };
  s2 -> s6 [0, 65535] { R15317 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R15317 += 1, R15255 += 1, R11530 += 1, R11531 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R15317 += 1, R15255 += 1, R11529 += 1, R11530 += 1 };
  s3 -> s2 [0, 65535] { R15317 += 1, R15255 += 1, R11530 += 1, R11531 += 1 };
  s3 -> s3 [0, 65535] { R15317 += 1, R15254 += 1, R15255 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R15317 += 1, R15255 += 1 };
  s5 -> s6 [0, 65535] { R15317 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R15317 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 87] { R15319 += 1, R15257 += 1, R14075 += 1 };
  s0 -> s2 [0, 65535] { R15319 += 1, R15256 += 1, R15257 += 1 };
  s0 -> s0 [0, 65535] { R15318 += 1, R15319 += 1 };
  s0 -> s3 [0, 65535] { R15319 += 1, R15257 += 1, R14074 += 1, R14075 += 1 };
  s0 -> s4 [89, 89] { R15319 += 1, R15257 += 1, R14075 += 1 };
  s0 -> s1 [90, 65535] { R15319 += 1, R15257 += 1, R14075 += 1 };
  s1 -> s1 [0, 87] { R15319 += 1, R15257 += 1, R14075 += 1 };
  s1 -> s4 [89, 89] { R15319 += 1, R15257 += 1, R14075 += 1 };
  s1 -> s1 [90, 65535] { R15319 += 1, R15257 += 1, R14075 += 1 };
  s2 -> s1 [0, 87] { R15319 += 1, R15257 += 1, R14075 += 1 };
  s2 -> s2 [0, 65535] { R15319 += 1, R15256 += 1, R15257 += 1 };
  s2 -> s3 [0, 65535] { R15319 += 1, R15257 += 1, R14074 += 1, R14075 += 1 };
  s2 -> s4 [89, 89] { R15319 += 1, R15257 += 1, R14075 += 1 };
  s2 -> s1 [90, 65535] { R15319 += 1, R15257 += 1, R14075 += 1 };
  s3 -> s1 [0, 87] { R15319 += 1, R15257 += 1, R14075 += 1 };
  s3 -> s3 [0, 65535] { R15319 += 1, R15257 += 1, R14074 += 1, R14075 += 1 };
  s3 -> s4 [89, 89] { R15319 += 1, R15257 += 1, R14075 += 1 };
  s3 -> s1 [90, 65535] { R15319 += 1, R15257 += 1, R14075 += 1 };
  s4 -> s4 [0, 87] { R15319 += 1, R15257 += 1, R14075 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R15319 += 1 };
  s4 -> s4 [0, 65535] { R15319 += 1, R15257 += 1 };
  s4 -> s4 [89, 65535] { R15319 += 1, R15257 += 1, R14075 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15319 += 1 };
  accepting s4, s5, s6;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R15321 += 1, R15258 += 1, R15259 += 1 };
  s0 -> s0 [0, 65535] { R15320 += 1, R15321 += 1 };
  s0 -> s2 [0, 65535] { R15321 += 1, R15259 += 1 };
  s1 -> s1 [0, 65535] { R15321 += 1, R15258 += 1, R15259 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R15321 += 1, R15259 += 1 };
  s2 -> s3 [0, 65535] { R15321 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R15321 += 1, R15259 += 1 };
  s3 -> s3 [0, 65535] { R15321 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R15323 += 1, R15261 += 1 };
  s0 -> s0 [0, 65535] { R15322 += 1, R15323 += 1 };
  s0 -> s2 [0, 65535] { R15323 += 1, R15260 += 1, R15261 += 1 };
  s1 -> s1 [0, 65535] { R15323 += 1, R15261 += 1 };
  s1 -> s4 [0, 65535] { R15323 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R15323 += 1, R15261 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R15323 += 1, R15260 += 1, R15261 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R15323 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R15325 += 1, R15281 += 1, R18 += 1 };
  s0 -> s2 [0, 65535] { R15325 += 1, R15280 += 1, R15281 += 1 };
  s0 -> s0 [0, 65535] { R15324 += 1, R15325 += 1 };
  s1 -> s1 [0, 65535] { R15325 += 1, R15281 += 1, R18 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R15325 += 1 };
  s2 -> s1 [0, 65535] { R15325 += 1, R15281 += 1, R18 += 1 };
  s2 -> s2 [0, 65535] { R15325 += 1, R15280 += 1, R15281 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R15325 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R15327 += 1, R15283 += 1 };
  s0 -> s2 [0, 65535] { R15327 += 1, R15282 += 1, R15283 += 1 };
  s0 -> s0 [0, 65535] { R15326 += 1, R15327 += 1 };
  s0 -> s3 [75, 75] { R15327 += 1, R15283 += 1 };
  s0 -> s4 [75, 75] { R15327 += 1, R15283 += 1 };
  s0 -> s5 [87, 87] { R15327 += 1, R15283 += 1 };
  s0 -> s1 [88, 65535] { R15327 += 1, R15283 += 1 };
  s1 -> s1 [0, 74] { R15327 += 1, R15283 += 1 };
  s1 -> s3 [75, 75] { R15327 += 1, R15283 += 1 };
  s1 -> s4 [75, 75] { R15327 += 1, R15283 += 1 };
  s1 -> s5 [87, 87] { R15327 += 1, R15283 += 1 };
  s1 -> s1 [88, 65535] { R15327 += 1, R15283 += 1 };
  s2 -> s1 [0, 74] { R15327 += 1, R15283 += 1 };
  s2 -> s2 [0, 65535] { R15327 += 1, R15282 += 1, R15283 += 1 };
  s2 -> s3 [75, 75] { R15327 += 1, R15283 += 1 };
  s2 -> s4 [75, 75] { R15327 += 1, R15283 += 1 };
  s2 -> s5 [87, 87] { R15327 += 1, R15283 += 1 };
  s2 -> s1 [88, 65535] { R15327 += 1, R15283 += 1 };
  s4 -> s4 [0, 75] { R15327 += 1, R15283 += 1 };
  s4 -> s8 [87, 87] { R15327 += 1, R15283 += 1 };
  s4 -> s4 [88, 65535] { R15327 += 1, R15283 += 1 };
  s5 -> s5 [0, 74] { R15327 += 1, R15283 += 1 };
  s5 -> s5 [0, 65535] { R15327 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [75, 75] { R15327 += 1, R15283 += 1 };
  s5 -> s8 [75, 75] { R15327 += 1, R15283 += 1 };
  s5 -> s5 [87, 65535] { R15327 += 1, R15283 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R15327 += 1 };
  s8 -> s8 [0, 75] { R15327 += 1, R15283 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R15327 += 1 };
  s8 -> s8 [87, 65535] { R15327 += 1, R15283 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 74] { R15329 += 1, R15285 += 1, R66 += 1 };
  s0 -> s2 [0, 65535] { R15329 += 1, R15284 += 1, R15285 += 1 };
  s0 -> s0 [0, 65535] { R15328 += 1, R15329 += 1 };
  s0 -> s3 [75, 75] { R15329 += 1, R15285 += 1, R66 += 1 };
  s0 -> s4 [75, 75] { R15329 += 1, R15285 += 1, R66 += 1 };
  s0 -> s1 [76, 65535] { R15329 += 1, R15285 += 1, R66 += 1 };
  s1 -> s1 [0, 74] { R15329 += 1, R15285 += 1, R66 += 1 };
  s1 -> s1 [0, 65535] { R15329 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [75, 75] { R15329 += 1, R15285 += 1, R66 += 1 };
  s1 -> s4 [75, 75] { R15329 += 1, R15285 += 1, R66 += 1 };
  s1 -> s1 [76, 65535] { R15329 += 1, R15285 += 1, R66 += 1 };
  s2 -> s1 [0, 74] { R15329 += 1, R15285 += 1, R66 += 1 };
  s2 -> s2 [0, 65535] { R15329 += 1, R15284 += 1, R15285 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [75, 75] { R15329 += 1, R15285 += 1, R66 += 1 };
  s2 -> s4 [75, 75] { R15329 += 1, R15285 += 1, R66 += 1 };
  s2 -> s1 [76, 65535] { R15329 += 1, R15285 += 1, R66 += 1 };
  s3 -> s6 [0, 65535] { R15329 += 1 };
  s3 -> s3 [0, 65535] { R15329 += 1, R15285 += 1, R66 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R15329 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15329 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 74] { R15331 += 1, R15287 += 1, R68 += 1 };
  s0 -> s2 [0, 65535] { R15331 += 1, R15286 += 1, R15287 += 1 };
  s0 -> s0 [0, 65535] { R15330 += 1, R15331 += 1 };
  s0 -> s3 [75, 75] { R15331 += 1, R15287 += 1, R68 += 1 };
  s0 -> s4 [75, 75] { R15331 += 1, R15287 += 1, R68 += 1 };
  s0 -> s1 [76, 65535] { R15331 += 1, R15287 += 1, R68 += 1 };
  s1 -> s1 [0, 74] { R15331 += 1, R15287 += 1, R68 += 1 };
  s1 -> s1 [0, 65535] { R15331 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [75, 75] { R15331 += 1, R15287 += 1, R68 += 1 };
  s1 -> s4 [75, 75] { R15331 += 1, R15287 += 1, R68 += 1 };
  s1 -> s1 [76, 65535] { R15331 += 1, R15287 += 1, R68 += 1 };
  s2 -> s1 [0, 74] { R15331 += 1, R15287 += 1, R68 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R15331 += 1, R15286 += 1, R15287 += 1 };
  s2 -> s3 [75, 75] { R15331 += 1, R15287 += 1, R68 += 1 };
  s2 -> s4 [75, 75] { R15331 += 1, R15287 += 1, R68 += 1 };
  s2 -> s1 [76, 65535] { R15331 += 1, R15287 += 1, R68 += 1 };
  s3 -> s3 [0, 65535] { R15331 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R15331 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R15331 += 1, R15287 += 1, R68 += 1 };
  s5 -> s5 [0, 65535] { R15331 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R15333 += 1, R15289 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s2 [0, 74] { R15333 += 1, R15289 += 1, R11523 += 1 };
  s0 -> s3 [0, 65535] { R15333 += 1, R15288 += 1, R15289 += 1 };
  s0 -> s0 [0, 65535] { R15332 += 1, R15333 += 1 };
  s0 -> s4 [75, 75] { R15333 += 1, R15289 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s5 [75, 75] { R15333 += 1, R15289 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s6 [75, 75] { R15333 += 1, R15289 += 1, R11523 += 1 };
  s0 -> s7 [75, 75] { R15333 += 1, R15289 += 1, R11523 += 1 };
  s0 -> s2 [76, 86] { R15333 += 1, R15289 += 1, R11523 += 1 };
  s0 -> s1 [76, 65535] { R15333 += 1, R15289 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s2 [88, 65535] { R15333 += 1, R15289 += 1, R11523 += 1 };
  s1 -> s1 [0, 74] { R15333 += 1, R15289 += 1, R11522 += 1, R11523 += 1 };
  s1 -> s2 [0, 74] { R15333 += 1, R15289 += 1, R11523 += 1 };
  s1 -> s4 [75, 75] { R15333 += 1, R15289 += 1, R11522 += 1, R11523 += 1 };
  s1 -> s5 [75, 75] { R15333 += 1, R15289 += 1, R11522 += 1, R11523 += 1 };
  s1 -> s6 [75, 75] { R15333 += 1, R15289 += 1, R11523 += 1 };
  s1 -> s7 [75, 75] { R15333 += 1, R15289 += 1, R11523 += 1 };
  s1 -> s2 [76, 86] { R15333 += 1, R15289 += 1, R11523 += 1 };
  s1 -> s1 [76, 65535] { R15333 += 1, R15289 += 1, R11522 += 1, R11523 += 1 };
  s1 -> s2 [88, 65535] { R15333 += 1, R15289 += 1, R11523 += 1 };
  s2 -> s2 [0, 74] { R15333 += 1, R15289 += 1, R11523 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R15333 += 1 };
  s2 -> s6 [75, 75] { R15333 += 1, R15289 += 1 };
  s2 -> s7 [75, 75] { R15333 += 1, R15289 += 1 };
  s2 -> s2 [76, 86] { R15333 += 1, R15289 += 1, R11523 += 1 };
  s2 -> s2 [76, 65535] { R15333 += 1, R15289 += 1 };
  s2 -> s2 [88, 65535] { R15333 += 1, R15289 += 1, R11523 += 1 };
  s3 -> s1 [0, 74] { R15333 += 1, R15289 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s2 [0, 74] { R15333 += 1, R15289 += 1, R11523 += 1 };
  s3 -> s3 [0, 65535] { R15333 += 1, R15288 += 1, R15289 += 1 };
  s3 -> s4 [75, 75] { R15333 += 1, R15289 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s5 [75, 75] { R15333 += 1, R15289 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s6 [75, 75] { R15333 += 1, R15289 += 1, R11523 += 1 };
  s3 -> s7 [75, 75] { R15333 += 1, R15289 += 1, R11523 += 1 };
  s3 -> s2 [76, 86] { R15333 += 1, R15289 += 1, R11523 += 1 };
  s3 -> s1 [76, 65535] { R15333 += 1, R15289 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s2 [88, 65535] { R15333 += 1, R15289 += 1, R11523 += 1 };
  s5 -> s6 [0, 86] { R15333 += 1, R15289 += 1, R11523 += 1 };
  s5 -> s5 [0, 65535] { R15333 += 1, R15289 += 1, R11522 += 1, R11523 += 1 };
  s5 -> s6 [88, 65535] { R15333 += 1, R15289 += 1, R11523 += 1 };
  s6 -> s6 [0, 86] { R15333 += 1, R15289 += 1, R11523 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R15333 += 1, R15289 += 1 };
  s6 -> s9 [0, 65535] { R15333 += 1 };
  s6 -> s6 [88, 65535] { R15333 += 1, R15289 += 1, R11523 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R15333 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R15333 += 1 };
  accepting s8, s2, s9, s6, s7;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R15335 += 1, R15291 += 1, R11526 += 1, R11527 += 1 };
  s0 -> s2 [0, 65535] { R15335 += 1, R15290 += 1, R15291 += 1 };
  s0 -> s0 [0, 65535] { R15334 += 1, R15335 += 1 };
  s0 -> s3 [75, 75] { R15335 += 1, R15291 += 1, R11526 += 1, R11527 += 1 };
  s0 -> s4 [75, 75] { R15335 += 1, R15291 += 1, R11526 += 1, R11527 += 1 };
  s0 -> s1 [76, 65535] { R15335 += 1, R15291 += 1, R11526 += 1, R11527 += 1 };
  s1 -> s1 [0, 74] { R15335 += 1, R15291 += 1, R11526 += 1, R11527 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R15335 += 1 };
  s1 -> s3 [75, 75] { R15335 += 1, R15291 += 1, R11526 += 1, R11527 += 1 };
  s1 -> s4 [75, 75] { R15335 += 1, R15291 += 1, R11526 += 1, R11527 += 1 };
  s1 -> s1 [76, 65535] { R15335 += 1, R15291 += 1, R11526 += 1, R11527 += 1 };
  s2 -> s1 [0, 74] { R15335 += 1, R15291 += 1, R11526 += 1, R11527 += 1 };
  s2 -> s2 [0, 65535] { R15335 += 1, R15290 += 1, R15291 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [75, 75] { R15335 += 1, R15291 += 1, R11526 += 1, R11527 += 1 };
  s2 -> s4 [75, 75] { R15335 += 1, R15291 += 1, R11526 += 1, R11527 += 1 };
  s2 -> s1 [76, 65535] { R15335 += 1, R15291 += 1, R11526 += 1, R11527 += 1 };
  s3 -> s3 [0, 65535] { R15335 += 1, R15291 += 1, R11526 += 1, R11527 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R15335 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R15335 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15335 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 74] { R15337 += 1, R15293 += 1, R14072 += 1, R14073 += 1 };
  s0 -> s2 [0, 65535] { R15337 += 1, R15292 += 1, R15293 += 1 };
  s0 -> s0 [0, 65535] { R15336 += 1, R15337 += 1 };
  s0 -> s3 [75, 75] { R15337 += 1, R15293 += 1, R14072 += 1, R14073 += 1 };
  s0 -> s4 [75, 75] { R15337 += 1, R15293 += 1, R14072 += 1, R14073 += 1 };
  s0 -> s1 [76, 65535] { R15337 += 1, R15293 += 1, R14072 += 1, R14073 += 1 };
  s1 -> s1 [0, 74] { R15337 += 1, R15293 += 1, R14072 += 1, R14073 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R15337 += 1 };
  s1 -> s3 [75, 75] { R15337 += 1, R15293 += 1, R14072 += 1, R14073 += 1 };
  s1 -> s4 [75, 75] { R15337 += 1, R15293 += 1, R14072 += 1, R14073 += 1 };
  s1 -> s1 [76, 65535] { R15337 += 1, R15293 += 1, R14072 += 1, R14073 += 1 };
  s2 -> s1 [0, 74] { R15337 += 1, R15293 += 1, R14072 += 1, R14073 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R15337 += 1, R15292 += 1, R15293 += 1 };
  s2 -> s3 [75, 75] { R15337 += 1, R15293 += 1, R14072 += 1, R14073 += 1 };
  s2 -> s4 [75, 75] { R15337 += 1, R15293 += 1, R14072 += 1, R14073 += 1 };
  s2 -> s1 [76, 65535] { R15337 += 1, R15293 += 1, R14072 += 1, R14073 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R15337 += 1, R15293 += 1, R14072 += 1, R14073 += 1 };
  s3 -> s6 [0, 65535] { R15337 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R15337 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15337 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 74] { R15339 += 1, R15295 += 1, R14921 += 1, R14922 += 1 };
  s0 -> s2 [0, 74] { R15339 += 1, R15295 += 1, R14920 += 1, R14921 += 1 };
  s0 -> s0 [0, 65535] { R15338 += 1, R15339 += 1 };
  s0 -> s3 [0, 65535] { R15339 += 1, R15294 += 1, R15295 += 1 };
  s0 -> s4 [75, 75] { R15339 += 1, R15295 += 1, R14921 += 1, R14922 += 1 };
  s0 -> s5 [75, 75] { R15339 += 1, R15295 += 1, R14920 += 1, R14921 += 1 };
  s0 -> s6 [75, 75] { R15339 += 1, R15295 += 1, R14921 += 1, R14922 += 1 };
  s0 -> s7 [75, 75] { R15339 += 1, R15295 += 1, R14920 += 1, R14921 += 1 };
  s0 -> s1 [76, 65535] { R15339 += 1, R15295 += 1, R14921 += 1, R14922 += 1 };
  s0 -> s2 [76, 65535] { R15339 += 1, R15295 += 1, R14920 += 1, R14921 += 1 };
  s1 -> s1 [0, 74] { R15339 += 1, R15295 += 1, R14921 += 1, R14922 += 1 };
  s1 -> s11 [0, 74] { R15339 += 1, R15295 += 1 };
  s1 -> s4 [75, 75] { R15339 += 1, R15295 += 1, R14921 += 1, R14922 += 1 };
  s1 -> s12 [75, 75] { R15339 += 1, R15295 += 1 };
  s1 -> s8 [75, 75] { R15339 += 1, R15295 += 1 };
  s1 -> s6 [75, 75] { R15339 += 1, R15295 += 1, R14921 += 1, R14922 += 1 };
  s1 -> s1 [76, 65535] { R15339 += 1, R15295 += 1, R14921 += 1, R14922 += 1 };
  s1 -> s11 [76, 65535] { R15339 += 1, R15295 += 1 };
  s2 -> s1 [0, 74] { R15339 += 1, R15295 += 1, R14921 += 1, R14922 += 1 };
  s2 -> s2 [0, 74] { R15339 += 1, R15295 += 1, R14920 += 1, R14921 += 1 };
  s2 -> s4 [75, 75] { R15339 += 1, R15295 += 1, R14921 += 1, R14922 += 1 };
  s2 -> s5 [75, 75] { R15339 += 1, R15295 += 1, R14920 += 1, R14921 += 1 };
  s2 -> s6 [75, 75] { R15339 += 1, R15295 += 1, R14921 += 1, R14922 += 1 };
  s2 -> s7 [75, 75] { R15339 += 1, R15295 += 1, R14920 += 1, R14921 += 1 };
  s2 -> s1 [76, 65535] { R15339 += 1, R15295 += 1, R14921 += 1, R14922 += 1 };
  s2 -> s2 [76, 65535] { R15339 += 1, R15295 += 1, R14920 += 1, R14921 += 1 };
  s3 -> s1 [0, 74] { R15339 += 1, R15295 += 1, R14921 += 1, R14922 += 1 };
  s3 -> s2 [0, 74] { R15339 += 1, R15295 += 1, R14920 += 1, R14921 += 1 };
  s3 -> s3 [0, 65535] { R15339 += 1, R15294 += 1, R15295 += 1 };
  s3 -> s4 [75, 75] { R15339 += 1, R15295 += 1, R14921 += 1, R14922 += 1 };
  s3 -> s5 [75, 75] { R15339 += 1, R15295 += 1, R14920 += 1, R14921 += 1 };
  s3 -> s6 [75, 75] { R15339 += 1, R15295 += 1, R14921 += 1, R14922 += 1 };
  s3 -> s7 [75, 75] { R15339 += 1, R15295 += 1, R14920 += 1, R14921 += 1 };
  s3 -> s1 [76, 65535] { R15339 += 1, R15295 += 1, R14921 += 1, R14922 += 1 };
  s3 -> s2 [76, 65535] { R15339 += 1, R15295 += 1, R14920 += 1, R14921 += 1 };
  s4 -> s4 [0, 65535] { R15339 += 1, R15295 += 1, R14921 += 1, R14922 += 1 };
  s4 -> s8 [0, 65535] { R15339 += 1, R15295 += 1 };
  s7 -> s4 [0, 65535] { R15339 += 1, R15295 += 1, R14921 += 1, R14922 += 1 };
  s7 -> s7 [0, 65535] { R15339 += 1, R15295 += 1, R14920 += 1, R14921 += 1 };
  s8 -> s9 [0, 65535] { R15339 += 1 };
  s8 -> s8 [0, 65535] { R15339 += 1, R15295 += 1 };
  s8 -> s10 [0, 65535];
  s9 -> s9 [0, 65535] { R15339 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  s11 -> s11 [0, 74] { R15339 += 1, R15295 += 1 };
  s11 -> s11 [0, 65535] { R15339 += 1 };
  s11 -> s10 [0, 65535];
  s11 -> s12 [75, 75] { R15339 += 1, R15295 += 1 };
  s11 -> s8 [75, 75] { R15339 += 1, R15295 += 1 };
  s11 -> s11 [76, 65535] { R15339 += 1, R15295 += 1 };
  s12 -> s12 [0, 65535] { R15339 += 1 };
  s12 -> s10 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 74] { R15341 += 1, R15297 += 1, R15239 += 1 };
  s0 -> s2 [0, 74] { R15341 += 1, R15297 += 1, R15238 += 1, R15239 += 1 };
  s0 -> s3 [0, 65535] { R15341 += 1, R15296 += 1, R15297 += 1 };
  s0 -> s0 [0, 65535] { R15340 += 1, R15341 += 1 };
  s0 -> s4 [75, 75] { R15341 += 1, R15297 += 1, R15239 += 1 };
  s0 -> s5 [75, 75] { R15341 += 1, R15297 += 1, R15239 += 1 };
  s0 -> s6 [75, 75] { R15341 += 1, R15297 += 1, R15238 += 1, R15239 += 1 };
  s0 -> s7 [75, 75] { R15341 += 1, R15297 += 1, R15238 += 1, R15239 += 1 };
  s0 -> s1 [76, 86] { R15341 += 1, R15297 += 1, R15239 += 1 };
  s0 -> s2 [76, 65535] { R15341 += 1, R15297 += 1, R15238 += 1, R15239 += 1 };
  s0 -> s8 [87, 87] { R15341 += 1, R15297 += 1, R15239 += 1 };
  s0 -> s1 [90, 65535] { R15341 += 1, R15297 += 1, R15239 += 1 };
  s1 -> s1 [0, 74] { R15341 += 1, R15297 += 1, R15239 += 1 };
  s1 -> s4 [75, 75] { R15341 += 1, R15297 += 1 };
  s1 -> s5 [75, 75] { R15341 += 1, R15297 += 1 };
  s1 -> s1 [76, 86] { R15341 += 1, R15297 += 1, R15239 += 1 };
  s1 -> s1 [76, 65535] { R15341 += 1, R15297 += 1 };
  s1 -> s8 [87, 87] { R15341 += 1, R15297 += 1, R15239 += 1 };
  s1 -> s1 [90, 65535] { R15341 += 1, R15297 += 1, R15239 += 1 };
  s2 -> s1 [0, 74] { R15341 += 1, R15297 += 1, R15239 += 1 };
  s2 -> s2 [0, 74] { R15341 += 1, R15297 += 1, R15238 += 1, R15239 += 1 };
  s2 -> s4 [75, 75] { R15341 += 1, R15297 += 1, R15239 += 1 };
  s2 -> s5 [75, 75] { R15341 += 1, R15297 += 1, R15239 += 1 };
  s2 -> s6 [75, 75] { R15341 += 1, R15297 += 1, R15238 += 1, R15239 += 1 };
  s2 -> s7 [75, 75] { R15341 += 1, R15297 += 1, R15238 += 1, R15239 += 1 };
  s2 -> s1 [76, 86] { R15341 += 1, R15297 += 1, R15239 += 1 };
  s2 -> s2 [76, 65535] { R15341 += 1, R15297 += 1, R15238 += 1, R15239 += 1 };
  s2 -> s8 [87, 87] { R15341 += 1, R15297 += 1, R15239 += 1 };
  s2 -> s1 [90, 65535] { R15341 += 1, R15297 += 1, R15239 += 1 };
  s3 -> s1 [0, 74] { R15341 += 1, R15297 += 1, R15239 += 1 };
  s3 -> s2 [0, 74] { R15341 += 1, R15297 += 1, R15238 += 1, R15239 += 1 };
  s3 -> s3 [0, 65535] { R15341 += 1, R15296 += 1, R15297 += 1 };
  s3 -> s4 [75, 75] { R15341 += 1, R15297 += 1, R15239 += 1 };
  s3 -> s5 [75, 75] { R15341 += 1, R15297 += 1, R15239 += 1 };
  s3 -> s6 [75, 75] { R15341 += 1, R15297 += 1, R15238 += 1, R15239 += 1 };
  s3 -> s7 [75, 75] { R15341 += 1, R15297 += 1, R15238 += 1, R15239 += 1 };
  s3 -> s1 [76, 86] { R15341 += 1, R15297 += 1, R15239 += 1 };
  s3 -> s2 [76, 65535] { R15341 += 1, R15297 += 1, R15238 += 1, R15239 += 1 };
  s3 -> s8 [87, 87] { R15341 += 1, R15297 += 1, R15239 += 1 };
  s3 -> s1 [90, 65535] { R15341 += 1, R15297 += 1, R15239 += 1 };
  s5 -> s5 [0, 86] { R15341 += 1, R15297 += 1, R15239 += 1 };
  s5 -> s5 [0, 65535] { R15341 += 1, R15297 += 1 };
  s5 -> s11 [87, 87] { R15341 += 1, R15297 += 1, R15239 += 1 };
  s5 -> s5 [90, 65535] { R15341 += 1, R15297 += 1, R15239 += 1 };
  s6 -> s5 [0, 86] { R15341 += 1, R15297 += 1, R15239 += 1 };
  s6 -> s6 [0, 65535] { R15341 += 1, R15297 += 1, R15238 += 1, R15239 += 1 };
  s6 -> s11 [87, 87] { R15341 += 1, R15297 += 1, R15239 += 1 };
  s6 -> s5 [90, 65535] { R15341 += 1, R15297 += 1, R15239 += 1 };
  s8 -> s8 [0, 74] { R15341 += 1, R15297 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R15341 += 1 };
  s8 -> s10 [75, 75] { R15341 += 1, R15297 += 1 };
  s8 -> s11 [75, 75] { R15341 += 1, R15297 += 1 };
  s8 -> s8 [76, 65535] { R15341 += 1, R15297 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R15341 += 1 };
  s11 -> s12 [0, 65535] { R15341 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R15341 += 1, R15297 += 1 };
  s12 -> s12 [0, 65535] { R15341 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
constraint R1 = R15257 && R2 = R15341 && R20 - R15341 = -1 && R21 = R15341 && R22 - R15341 = -1 && R23 = R15341 && R24 = 0 && R25 = 1 && R26 = 0 && R27 = 1 && R38 + R67 + R66 + -1*R14075 + -1*R14073 - R53 = 0 && R52 + R14074 + R14072 = 0 && R15256 = 0 && R15282 = 0 && R15283 = 0 && R15288 = 0 && R15289 = 0 && R15294 = 0 && R15295 = 0 && R15296 = 0 && R15297 = 0 && R15298 = 0 && R15299 = R15341 && R15300 = 0 && R15301 = R15341 && R15302 = 0 && R15303 = R15341 && R15304 = 0 && R15305 = R15341 && R15306 = 0 && R15307 = R15341 && R15308 = 0 && R15309 = R15341 && R15310 = 0 && R15311 = R15341 && R15312 = 0 && R15313 = R15341 && R15314 = 0 && R15315 = R15341 && R15316 = 0 && R15317 = R15341 && R15318 = 0 && R15319 = R15341 && R15320 = 0 && R15321 = R15341 && R15322 = 0 && R15323 = R15341 && R15324 = 0 && R15325 = R15341 && R15326 = 0 && R15327 = R15341 && R15328 = 0 && R15329 = R15341 && R15330 = 0 && R15331 = R15341 && R15332 = 0 && R15333 = R15341 && R15334 = 0 && R15335 = R15341 && R15336 = 0 && R15337 = R15341 && R15338 = 0 && R15339 = R15341 && R15340 = 0 && R8 < 1 && R11 < 1 && R12 < 1 && R40 + R69 + R68 < 1 && -1*R14075 + -1*R14073 - R53 < 1 && -1 < R15257 && 0 < R15341 && (R48 + R11531 + R11528 != 0 || ((R42 + R11524 + R11522 != 0 || R43 + R11525 + R11523 + -1*R14075 + -1*R14073 - R53 = 0 || R53 + R14075 + R14073 < 1) && (R42 + R11524 + R11522 = 0 || R53 + R14075 + R14073 < 1))) && (R48 + R11531 + R11528 != 0 || ((R46 + R11529 + R11526 != 0 || R47 + R11530 + R11527 + -1*R14075 + -1*R14073 - R53 = 0 || R53 + R14075 + R14073 < 1) && (R46 + R11529 + R11526 = 0 || R53 + R14075 + R14073 < 1))) && (R15242 != 0 || R15243 = R15257 || (R17 = 0 && R15257 = 0)) && (R15244 != 0 || R15245 = R15257 || (R17 = 0 && R15257 = 0)) && (R15246 != 0 || R15247 = R15257 || (R17 = 0 && R15257 = 0)) && (R15248 != 0 || R15249 = R15257 || (R17 = 0 && R15257 = 0)) && (R15250 != 0 || R15251 = R15257 || (R17 = 0 && R15257 = 0)) && (R15252 != 0 || R15253 = R15257 || (R17 = 0 && R15257 = 0)) && (R15254 != 0 || R15255 = R15257 || (R17 = 0 && R15257 = 0)) && (R15258 != 0 || R15257 = R15259 || (R17 = 0 && R15257 = 0)) && (R15260 != 0 || R15257 = R15261 || (R17 = 0 && R15257 = 0)) && (R18 = 0 || (R15280 = 0 && R15281 = 0)) && (R18 = 0 || (R15284 = 0 && R15285 = 0)) && (R18 = 0 || (R15286 = 0 && R15287 = 0)) && (R18 = 0 || (R15290 = 0 && R15291 = 0)) && (R18 = 0 || (R15292 = 0 && R15293 = 0)) && (R19 = 0 || (R15262 = 0 && R15263 = 0)) && (R19 = 0 || (R15264 = 0 && R15265 = 0)) && (R19 = 0 || (R15266 = 0 && R15267 = 0)) && (R19 = 0 || (R15268 = 0 && R15269 = 0)) && (R19 = 0 || (R15270 = 0 && R15271 = 0)) && (R19 = 0 || (R15272 = 0 && R15273 = 0)) && (R19 = 0 || (R15274 = 0 && R15275 = 0)) && (R19 = 0 || (R15276 = 0 && R15277 = 0)) && (R19 = 0 || (R15278 = 0 && R15279 = 0)) && (R48 + R11531 + R11528 = 0 || (R42 + R11524 + R11522 = 0 && R43 + R11525 + R11523 + -1*R14075 + -1*R14073 - R53 = 0)) && (R48 + R11531 + R11528 = 0 || (R46 + R11529 + R11526 = 0 && R47 + R11530 + R11527 + -1*R14075 + -1*R14073 - R53 = 0)) && (R58 + R14925 + R14922 = 0 || (R56 + R14923 + R14920 = 0 && R57 + R14924 + R14921 = 0)) && (R58 + R14925 + R14922 = 0 || (R62 + R15240 + R15238 = 0 && R63 + R15241 + R15239 = 0)) && (R15242 = 0 || (R17 = 0 && R15257 = 0)) && (R15244 = 0 || (R17 = 0 && R15257 = 0)) && (R15246 = 0 || (R17 = 0 && R15257 = 0)) && (R15248 = 0 || (R17 = 0 && R15257 = 0)) && (R15250 = 0 || (R17 = 0 && R15257 = 0)) && (R15252 = 0 || (R17 = 0 && R15257 = 0)) && (R15254 = 0 || (R17 = 0 && R15257 = 0)) && (R15258 = 0 || (R17 = 0 && R15257 = 0)) && (R15260 = 0 || (R17 = 0 && R15257 = 0));
// End of Parikh automata intersection problem
