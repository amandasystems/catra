// Parikh automata intersection problem, generated by OSTRICH+
counter int R1773, R1774, R1775, R1776, R1777, R1778, R1779, R1780, R1781, R1782, R1783, R1784, R1785, R1786, R1787, R1788, R1789, R1790, R1791, R1792, R1793, R1794, R1795, R1796, R1797, R1798, R1799, R18, R1800, R1801, R1802, R1803, R1804, R1805, R1806, R1807, R1808, R1809, R1810, R1811, R1812, R1813, R1814, R1815, R1816, R1817, R1818, R1819, R1820, R1821, R1822, R1823, R1824, R1825, R1826, R1827, R1828, R1829, R1830, R1831, R1832, R1833, R1834, R1835, R1836, R1837, R1838, R1839, R1840, R1841, R1842, R1843, R1844, R1845, R1846, R1847, R1848, R1849, R1850, R1851, R1852, R1853, R1854, R1855, R1856, R1857, R1858, R1859, R1860, R1861, R1862, R1863, R1864, R1865, R1866, R1867, R1868, R1869, R1870, R1871, R1872, R1873, R1874, R1875, R1876, R1877, R1878, R1879, R1880, R1881, R1882, R1883, R1884, R1885, R1886, R1887, R1888, R1889, R1890, R1891, R1892, R1893, R1894, R1895, R1896, R1897, R1898, R1899, R1900, R1901, R1902, R1903, R1904, R1905, R1906, R1907, R1908, R1909, R1910, R1911, R1912, R1913, R1914, R1915, R1916, R1917, R1918, R1919, R1920, R1921, R1922, R1923, R1924, R1925, R1926, R1927, R1928, R1929, R1930, R1931, R1932, R1933, R1934, R1935, R1936, R1937, R1938, R1939, R1940, R1941, R1942, R1943, R1944, R1945, R1946, R1947, R1948, R1949, R1950, R1951, R1952, R1953, R1954, R1955, R1956, R1957, R1958, R1959, R1960, R1961, R1962, R1963, R1964, R1965, R1966, R1967, R1968, R1969, R1970, R1971, R1972, R1973, R1974, R1975, R1976, R1977, R1978, R1979, R1980, R1981, R1982, R1983, R1984, R1985, R1986, R1987, R1988, R1989, R1990, R1991, R1992, R1993, R1994, R1995, R1996, R1997, R1998, R1999, R2000, R2001, R2002, R2003, R2004, R2005, R2006, R2007, R2008, R2009, R2010, R2011, R2012, R2013, R2014, R2015, R2016, R2017, R2018, R2019, R2020, R2021, R2022, R2023, R2024, R2025, R2026, R2027, R2028, R2029, R2030, R2031, R2032, R2033, R2034, R2035, R2036, R2037, R2038, R2039, R2040, R2041, R2042, R2043, R2044, R2045, R2046, R2047, R2048, R2049, R2050, R2051, R2052, R2053, R2054, R2055, R2056, R2057, R2058, R21, R27, R28, R29, R3, R30, R31, R32, R33, R34, R35, R36, R3609, R3610, R3611, R3612, R3613, R3614, R3615, R3616, R3617, R3618, R3619, R3620, R3621, R3622, R3623, R3624, R3625, R3626, R3627, R3628, R3629, R3630, R3631, R3632, R3633, R3634, R3635, R3636, R3637, R3638, R3639, R3640, R3641, R3642, R3643, R3644, R3645, R3646, R3647, R3648, R3649, R3650, R3651, R3652, R3653, R3654, R3655, R3656, R3657, R3658, R3659, R3660, R3661, R3662, R3663, R3664, R3665, R3666, R3667, R3668, R3669, R3670, R3671, R3672, R3673, R3674, R3675, R3676, R3677, R3678, R3679, R3680, R3681, R3682, R3683, R3684, R3685, R3686, R3687, R3688, R3689, R3690, R3691, R3692, R3693, R3694, R3695, R3696, R3697, R3698, R3699, R37, R3700, R3701, R3702, R3703, R3704, R3705, R3706, R3707, R3708, R3709, R3710, R3711, R3712, R3713, R3714, R3715, R3716, R3717, R3718, R3719, R3720, R3721, R3722, R3723, R3724, R3725, R3726, R3727, R3728, R3729, R3730, R3731, R3732, R3733, R3734, R3735, R3736, R3737, R3738, R3739, R3740, R3741, R3742, R3743, R3744, R3745, R3746, R3747, R3748, R3749, R3750, R3751, R3752, R3753, R3754, R3755, R3756, R3757, R3758, R3759, R3760, R3761, R3762, R3763, R3764, R3765, R3766, R3767, R3768, R3769, R3770, R3771, R3772, R3773, R3774, R3775, R3776, R3777, R3778, R3779, R3780, R3781, R3782, R3783, R3784, R3785, R3786, R3787, R3788, R3789, R3790, R3791, R3792, R3793, R3794, R3795, R3796, R3797, R3798, R3799, R38, R3800, R3801, R3802, R3803, R3804, R3805, R3806, R3807, R3808, R3809, R3810, R3811, R3812, R3813, R3814, R3815, R3816, R3817, R3818, R3819, R3820, R3821, R3822, R3823, R3824, R3825, R3826, R3827, R3828, R3829, R3830, R3831, R3832, R3833, R3834, R3835, R3836, R3837, R3838, R3839, R3840, R3841, R3842, R3843, R3844, R3845, R3846, R3847, R3848, R3849, R3850, R3851, R3852, R3853, R3854, R3855, R3856, R3857, R3858, R3859, R3860, R3861, R3862, R3863, R3864, R3865, R3866, R3867, R3868, R3869, R3870, R3871, R3872, R3873, R3874, R3875, R3876, R3877, R3878, R3879, R3880, R3881, R3882, R3883, R3884, R3885, R3886, R3887, R3888, R3889, R3890, R3891, R3892, R3893, R3894, R3895, R3896, R3897, R3898, R3899, R39, R3900, R3901, R3902, R3903, R3904, R3905, R3906, R3907, R3908, R3909, R3910, R3911, R3912, R3913, R3914, R3915, R3916, R3917, R3918, R4, R40, R41, R42, R43, R44, R5, R6, R7, R8;
synchronised {  // Automata constraining P6
automaton P6_0 {
  init s0;
  s0 -> s1 [99, 99];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R4 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R21 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R37 += 1, R38 += 1 };
  s0 -> s1 [9, 9] { R38 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 65535] { R40 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R39 += 1, R40 += 1 };
  s1 -> s1 [0, 65535] { R40 += 1, R7 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R42 += 1 };
  s0 -> s0 [0, 65535] { R41 += 1, R42 += 1 };
  s0 -> s2 [9, 13] { R42 += 1 };
  s0 -> s1 [14, 31] { R42 += 1 };
  s0 -> s2 [32, 32] { R42 += 1 };
  s0 -> s1 [33, 65535] { R42 += 1 };
  s1 -> s1 [0, 65535] { R42 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R42 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 65535] { R44 += 1, R8 += 1 };
  s0 -> s0 [0, 65535] { R43 += 1, R44 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R44 += 1, R8 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R3764 += 1 };
  s0 -> s0 [0, 65535] { R3763 += 1, R3764 += 1 };
  s0 -> s2 [67, 67] { R3764 += 1 };
  s0 -> s1 [68, 65535] { R3764 += 1 };
  s1 -> s1 [0, 64] { R3764 += 1 };
  s1 -> s2 [67, 67] { R3764 += 1 };
  s1 -> s1 [68, 65535] { R3764 += 1 };
  s2 -> s2 [0, 64] { R3764 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [67, 65535] { R3764 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R3765 += 1, R3766 += 1 };
  s0 -> s1 [0, 65535] { R3766 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R3766 += 1, R3 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 66] { R3768 += 1 };
  s0 -> s2 [0, 65535] { R3768 += 1, R18 += 1 };
  s0 -> s0 [0, 65535] { R3767 += 1, R3768 += 1 };
  s0 -> s3 [67, 67] { R3768 += 1 };
  s0 -> s1 [68, 65535] { R3768 += 1 };
  s1 -> s1 [0, 66] { R3768 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [67, 67] { R3768 += 1 };
  s1 -> s1 [68, 65535] { R3768 += 1 };
  s2 -> s1 [0, 66] { R3768 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3768 += 1, R18 += 1 };
  s2 -> s3 [67, 67] { R3768 += 1 };
  s2 -> s1 [68, 65535] { R3768 += 1 };
  s3 -> s3 [0, 65535] { R3768 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R3770 += 1, R30 += 1 };
  s0 -> s0 [0, 65535] { R3769 += 1, R3770 += 1 };
  s0 -> s2 [0, 65535] { R3770 += 1, R29 += 1, R30 += 1 };
  s0 -> s3 [9, 13] { R3770 += 1, R30 += 1 };
  s0 -> s1 [14, 31] { R3770 += 1, R30 += 1 };
  s0 -> s3 [32, 32] { R3770 += 1, R30 += 1 };
  s0 -> s1 [33, 65535] { R3770 += 1, R30 += 1 };
  s1 -> s5 [0, 65535] { R3770 += 1 };
  s1 -> s1 [0, 65535] { R3770 += 1, R30 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 8] { R3770 += 1, R30 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3770 += 1, R29 += 1, R30 += 1 };
  s2 -> s3 [9, 13] { R3770 += 1, R30 += 1 };
  s2 -> s1 [14, 31] { R3770 += 1, R30 += 1 };
  s2 -> s3 [32, 32] { R3770 += 1, R30 += 1 };
  s2 -> s1 [33, 65535] { R3770 += 1, R30 += 1 };
  s3 -> s1 [0, 65535] { R3770 += 1, R30 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3770 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s0 [0, 65535] { R3771 += 1, R3772 += 1 };
  s0 -> s1 [0, 65535] { R3772 += 1, R32 += 1, R5 += 1 };
  s0 -> s2 [0, 65535] { R3772 += 1, R31 += 1, R32 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3772 += 1, R32 += 1, R5 += 1 };
  s1 -> s4 [0, 65535] { R3772 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R3772 += 1, R32 += 1, R5 += 1 };
  s2 -> s2 [0, 65535] { R3772 += 1, R31 += 1, R32 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3772 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R3774 += 1, R34 += 1 };
  s0 -> s0 [0, 65535] { R3773 += 1, R3774 += 1 };
  s0 -> s2 [0, 65535] { R3774 += 1, R33 += 1, R34 += 1 };
  s0 -> s3 [9, 13] { R3774 += 1, R34 += 1 };
  s0 -> s1 [14, 31] { R3774 += 1, R34 += 1 };
  s0 -> s3 [32, 32] { R3774 += 1, R34 += 1 };
  s0 -> s1 [33, 65535] { R3774 += 1, R34 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R3774 += 1, R34 += 1 };
  s1 -> s5 [0, 65535] { R3774 += 1 };
  s2 -> s1 [0, 8] { R3774 += 1, R34 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3774 += 1, R33 += 1, R34 += 1 };
  s2 -> s3 [9, 13] { R3774 += 1, R34 += 1 };
  s2 -> s1 [14, 31] { R3774 += 1, R34 += 1 };
  s2 -> s3 [32, 32] { R3774 += 1, R34 += 1 };
  s2 -> s1 [33, 65535] { R3774 += 1, R34 += 1 };
  s3 -> s1 [0, 65535] { R3774 += 1, R34 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3774 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s0 [0, 65535] { R3775 += 1, R3776 += 1 };
  s0 -> s1 [0, 65535] { R3776 += 1, R36 += 1, R6 += 1 };
  s0 -> s2 [0, 65535] { R3776 += 1, R35 += 1, R36 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R3776 += 1 };
  s1 -> s1 [0, 65535] { R3776 += 1, R36 += 1, R6 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R3776 += 1, R36 += 1, R6 += 1 };
  s2 -> s2 [0, 65535] { R3776 += 1, R35 += 1, R36 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3776 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 66] { R3778 += 1, R3622 += 1 };
  s0 -> s0 [0, 65535] { R3777 += 1, R3778 += 1 };
  s0 -> s2 [0, 65535] { R3778 += 1, R3621 += 1, R3622 += 1 };
  s0 -> s1 [68, 65535] { R3778 += 1, R3622 += 1 };
  s1 -> s1 [0, 66] { R3778 += 1, R3622 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3778 += 1 };
  s1 -> s1 [68, 65535] { R3778 += 1, R3622 += 1 };
  s2 -> s1 [0, 66] { R3778 += 1, R3622 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R3778 += 1, R3621 += 1, R3622 += 1 };
  s2 -> s1 [68, 65535] { R3778 += 1, R3622 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 65535] { R3780 += 1, R3623 += 1, R3624 += 1 };
  s0 -> s2 [0, 65535] { R3780 += 1, R3624 += 1, R27 += 1 };
  s0 -> s0 [0, 65535] { R3779 += 1, R3780 += 1 };
  s1 -> s1 [0, 65535] { R3780 += 1, R3623 += 1, R3624 += 1 };
  s1 -> s2 [0, 65535] { R3780 += 1, R3624 += 1, R27 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R3780 += 1, R3624 += 1, R27 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R3780 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3780 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 67] { R3782 += 1, R3626 += 1 };
  s0 -> s0 [0, 65535] { R3781 += 1, R3782 += 1 };
  s0 -> s2 [0, 65535] { R3782 += 1, R3625 += 1, R3626 += 1 };
  s0 -> s1 [70, 65535] { R3782 += 1, R3626 += 1 };
  s1 -> s1 [0, 67] { R3782 += 1, R3626 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3782 += 1 };
  s1 -> s1 [70, 65535] { R3782 += 1, R3626 += 1 };
  s2 -> s1 [0, 67] { R3782 += 1, R3626 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R3782 += 1, R3625 += 1, R3626 += 1 };
  s2 -> s1 [70, 65535] { R3782 += 1, R3626 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_17 {
  init s0;
  s0 -> s0 [0, 65535] { R3783 += 1, R3784 += 1 };
  s0 -> s1 [0, 65535] { R3784 += 1, R3627 += 1, R3628 += 1 };
  s0 -> s2 [0, 65535] { R3784 += 1, R3628 += 1, R1774 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R3784 += 1, R3627 += 1, R3628 += 1 };
  s1 -> s2 [0, 65535] { R3784 += 1, R3628 += 1, R1774 += 1 };
  s2 -> s3 [0, 65535] { R3784 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3784 += 1, R3628 += 1, R1774 += 1 };
  s3 -> s3 [0, 65535] { R3784 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R3786 += 1, R3630 += 1 };
  s0 -> s0 [0, 65535] { R3785 += 1, R3786 += 1 };
  s0 -> s2 [0, 65535] { R3786 += 1, R3629 += 1, R3630 += 1 };
  s0 -> s3 [0, 65535] { R3786 += 1, R3630 += 1, R1776 += 1 };
  s0 -> s1 [71, 65535] { R3786 += 1, R3630 += 1 };
  s1 -> s1 [0, 69] { R3786 += 1, R3630 += 1 };
  s1 -> s1 [0, 65535] { R3786 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [71, 65535] { R3786 += 1, R3630 += 1 };
  s2 -> s1 [0, 69] { R3786 += 1, R3630 += 1 };
  s2 -> s2 [0, 65535] { R3786 += 1, R3629 += 1, R3630 += 1 };
  s2 -> s3 [0, 65535] { R3786 += 1, R3630 += 1, R1776 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [71, 65535] { R3786 += 1, R3630 += 1 };
  s3 -> s1 [0, 69] { R3786 += 1, R3630 += 1 };
  s3 -> s3 [0, 65535] { R3786 += 1, R3630 += 1, R1776 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R3786 += 1 };
  s3 -> s1 [71, 65535] { R3786 += 1, R3630 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3786 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 65535] { R3788 += 1, R3632 += 1, R1780 += 1, R1781 += 1 };
  s0 -> s0 [0, 65535] { R3787 += 1, R3788 += 1 };
  s0 -> s2 [0, 65535] { R3788 += 1, R3632 += 1, R1781 += 1, R1782 += 1 };
  s0 -> s3 [0, 65535] { R3788 += 1, R3631 += 1, R3632 += 1 };
  s1 -> s1 [0, 65535] { R3788 += 1, R3632 += 1, R1780 += 1, R1781 += 1 };
  s1 -> s5 [0, 65535] { R3788 += 1 };
  s1 -> s2 [0, 65535] { R3788 += 1, R3632 += 1, R1781 += 1, R1782 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R3788 += 1 };
  s2 -> s2 [0, 65535] { R3788 += 1, R3632 += 1, R1781 += 1, R1782 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s6 [0, 65535] { R3788 += 1, R3632 += 1 };
  s3 -> s1 [0, 65535] { R3788 += 1, R3632 += 1, R1780 += 1, R1781 += 1 };
  s3 -> s2 [0, 65535] { R3788 += 1, R3632 += 1, R1781 += 1, R1782 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3788 += 1, R3631 += 1, R3632 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3788 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R3788 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R3788 += 1, R3632 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R3790 += 1, R3634 += 1, R1786 += 1 };
  s0 -> s2 [0, 65535] { R3790 += 1, R3634 += 1, R1785 += 1, R1786 += 1 };
  s0 -> s0 [0, 65535] { R3789 += 1, R3790 += 1 };
  s0 -> s3 [0, 65535] { R3790 += 1, R3633 += 1, R3634 += 1 };
  s0 -> s4 [70, 70] { R3790 += 1, R3634 += 1, R1786 += 1 };
  s0 -> s5 [70, 70] { R3790 += 1, R3634 += 1, R1786 += 1 };
  s0 -> s1 [77, 65535] { R3790 += 1, R3634 += 1, R1786 += 1 };
  s1 -> s1 [0, 69] { R3790 += 1, R3634 += 1, R1786 += 1 };
  s1 -> s6 [0, 65535] { R3790 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R3790 += 1, R3634 += 1 };
  s1 -> s4 [70, 70] { R3790 += 1, R3634 += 1, R1786 += 1 };
  s1 -> s5 [70, 70] { R3790 += 1, R3634 += 1, R1786 += 1 };
  s1 -> s1 [77, 65535] { R3790 += 1, R3634 += 1, R1786 += 1 };
  s2 -> s1 [0, 69] { R3790 += 1, R3634 += 1, R1786 += 1 };
  s2 -> s2 [0, 65535] { R3790 += 1, R3634 += 1, R1785 += 1, R1786 += 1 };
  s2 -> s6 [0, 65535] { R3790 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [70, 70] { R3790 += 1, R3634 += 1, R1786 += 1 };
  s2 -> s5 [70, 70] { R3790 += 1, R3634 += 1, R1786 += 1 };
  s2 -> s1 [77, 65535] { R3790 += 1, R3634 += 1, R1786 += 1 };
  s3 -> s1 [0, 69] { R3790 += 1, R3634 += 1, R1786 += 1 };
  s3 -> s2 [0, 65535] { R3790 += 1, R3634 += 1, R1785 += 1, R1786 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R3790 += 1, R3633 += 1, R3634 += 1 };
  s3 -> s4 [70, 70] { R3790 += 1, R3634 += 1, R1786 += 1 };
  s3 -> s5 [70, 70] { R3790 += 1, R3634 += 1, R1786 += 1 };
  s3 -> s1 [77, 65535] { R3790 += 1, R3634 += 1, R1786 += 1 };
  s4 -> s4 [0, 65535] { R3790 += 1, R3634 += 1 };
  s4 -> s6 [0, 65535] { R3790 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 70] { R3790 += 1, R3634 += 1, R1786 += 1 };
  s5 -> s6 [0, 65535] { R3790 += 1 };
  s5 -> s5 [0, 65535] { R3790 += 1, R3634 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [77, 65535] { R3790 += 1, R3634 += 1, R1786 += 1 };
  s6 -> s6 [0, 65535] { R3790 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R3792 += 1, R3636 += 1, R1791 += 1, R1792 += 1 };
  s0 -> s0 [0, 65535] { R3791 += 1, R3792 += 1 };
  s0 -> s2 [0, 65535] { R3792 += 1, R3635 += 1, R3636 += 1 };
  s0 -> s3 [0, 65535] { R3792 += 1, R3636 += 1, R1790 += 1, R1791 += 1 };
  s0 -> s4 [70, 70] { R3792 += 1, R3636 += 1, R1791 += 1, R1792 += 1 };
  s0 -> s5 [70, 70] { R3792 += 1, R3636 += 1, R1791 += 1, R1792 += 1 };
  s0 -> s1 [71, 65535] { R3792 += 1, R3636 += 1, R1791 += 1, R1792 += 1 };
  s1 -> s1 [0, 69] { R3792 += 1, R3636 += 1, R1791 += 1, R1792 += 1 };
  s1 -> s1 [0, 65535] { R3792 += 1, R3636 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s8 [0, 65535] { R3792 += 1 };
  s1 -> s4 [70, 70] { R3792 += 1, R3636 += 1, R1791 += 1, R1792 += 1 };
  s1 -> s5 [70, 70] { R3792 += 1, R3636 += 1, R1791 += 1, R1792 += 1 };
  s1 -> s1 [71, 65535] { R3792 += 1, R3636 += 1, R1791 += 1, R1792 += 1 };
  s2 -> s1 [0, 69] { R3792 += 1, R3636 += 1, R1791 += 1, R1792 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s2 [0, 65535] { R3792 += 1, R3635 += 1, R3636 += 1 };
  s2 -> s3 [0, 65535] { R3792 += 1, R3636 += 1, R1790 += 1, R1791 += 1 };
  s2 -> s4 [70, 70] { R3792 += 1, R3636 += 1, R1791 += 1, R1792 += 1 };
  s2 -> s5 [70, 70] { R3792 += 1, R3636 += 1, R1791 += 1, R1792 += 1 };
  s2 -> s1 [71, 65535] { R3792 += 1, R3636 += 1, R1791 += 1, R1792 += 1 };
  s3 -> s1 [0, 69] { R3792 += 1, R3636 += 1, R1791 += 1, R1792 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s8 [0, 65535] { R3792 += 1 };
  s3 -> s3 [0, 65535] { R3792 += 1, R3636 += 1, R1790 += 1, R1791 += 1 };
  s3 -> s4 [70, 70] { R3792 += 1, R3636 += 1, R1791 += 1, R1792 += 1 };
  s3 -> s5 [70, 70] { R3792 += 1, R3636 += 1, R1791 += 1, R1792 += 1 };
  s3 -> s1 [71, 65535] { R3792 += 1, R3636 += 1, R1791 += 1, R1792 += 1 };
  s4 -> s4 [0, 65535] { R3792 += 1, R3636 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R3792 += 1 };
  s5 -> s6 [0, 65535] { R3792 += 1, R3636 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R3792 += 1 };
  s5 -> s5 [0, 65535] { R3792 += 1, R3636 += 1, R1791 += 1, R1792 += 1 };
  s6 -> s6 [0, 65535] { R3792 += 1, R3636 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R3792 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R3792 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R3794 += 1, R3638 += 1, R1797 += 1, R1798 += 1 };
  s0 -> s0 [0, 65535] { R3793 += 1, R3794 += 1 };
  s0 -> s2 [0, 65535] { R3794 += 1, R3638 += 1, R1796 += 1, R1797 += 1 };
  s0 -> s3 [0, 65535] { R3794 += 1, R3637 += 1, R3638 += 1 };
  s0 -> s4 [70, 70] { R3794 += 1, R3638 += 1, R1797 += 1, R1798 += 1 };
  s0 -> s5 [70, 70] { R3794 += 1, R3638 += 1, R1797 += 1, R1798 += 1 };
  s0 -> s1 [71, 65535] { R3794 += 1, R3638 += 1, R1797 += 1, R1798 += 1 };
  s1 -> s1 [0, 69] { R3794 += 1, R3638 += 1, R1797 += 1, R1798 += 1 };
  s1 -> s6 [0, 65535] { R3794 += 1 };
  s1 -> s1 [0, 65535] { R3794 += 1, R3638 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [70, 70] { R3794 += 1, R3638 += 1, R1797 += 1, R1798 += 1 };
  s1 -> s5 [70, 70] { R3794 += 1, R3638 += 1, R1797 += 1, R1798 += 1 };
  s1 -> s1 [71, 65535] { R3794 += 1, R3638 += 1, R1797 += 1, R1798 += 1 };
  s2 -> s1 [0, 69] { R3794 += 1, R3638 += 1, R1797 += 1, R1798 += 1 };
  s2 -> s6 [0, 65535] { R3794 += 1 };
  s2 -> s2 [0, 65535] { R3794 += 1, R3638 += 1, R1796 += 1, R1797 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [70, 70] { R3794 += 1, R3638 += 1, R1797 += 1, R1798 += 1 };
  s2 -> s5 [70, 70] { R3794 += 1, R3638 += 1, R1797 += 1, R1798 += 1 };
  s2 -> s1 [71, 65535] { R3794 += 1, R3638 += 1, R1797 += 1, R1798 += 1 };
  s3 -> s1 [0, 69] { R3794 += 1, R3638 += 1, R1797 += 1, R1798 += 1 };
  s3 -> s2 [0, 65535] { R3794 += 1, R3638 += 1, R1796 += 1, R1797 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R3794 += 1, R3637 += 1, R3638 += 1 };
  s3 -> s4 [70, 70] { R3794 += 1, R3638 += 1, R1797 += 1, R1798 += 1 };
  s3 -> s5 [70, 70] { R3794 += 1, R3638 += 1, R1797 += 1, R1798 += 1 };
  s3 -> s1 [71, 65535] { R3794 += 1, R3638 += 1, R1797 += 1, R1798 += 1 };
  s4 -> s4 [0, 65535] { R3794 += 1, R3638 += 1 };
  s4 -> s6 [0, 65535] { R3794 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s6 [0, 65535] { R3794 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R3794 += 1, R3638 += 1, R1797 += 1, R1798 += 1 };
  s5 -> s8 [0, 65535] { R3794 += 1, R3638 += 1 };
  s6 -> s6 [0, 65535] { R3794 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R3794 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R3794 += 1, R3638 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 69] { R3796 += 1, R3640 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s0 -> s2 [0, 65535] { R3796 += 1, R3639 += 1, R3640 += 1 };
  s0 -> s0 [0, 65535] { R3795 += 1, R3796 += 1 };
  s0 -> s3 [0, 65535] { R3796 += 1, R3640 += 1, R1803 += 1, R1804 += 1 };
  s0 -> s4 [70, 70] { R3796 += 1, R3640 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s0 -> s5 [70, 70] { R3796 += 1, R3640 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s0 -> s1 [71, 65535] { R3796 += 1, R3640 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s1 -> s1 [0, 69] { R3796 += 1, R3640 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s1 -> s6 [0, 65535] { R3796 += 1 };
  s1 -> s1 [0, 65535] { R3796 += 1, R3640 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [70, 70] { R3796 += 1, R3640 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s1 -> s5 [70, 70] { R3796 += 1, R3640 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s1 -> s1 [71, 65535] { R3796 += 1, R3640 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s2 -> s1 [0, 69] { R3796 += 1, R3640 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s2 -> s2 [0, 65535] { R3796 += 1, R3639 += 1, R3640 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s3 [0, 65535] { R3796 += 1, R3640 += 1, R1803 += 1, R1804 += 1 };
  s2 -> s4 [70, 70] { R3796 += 1, R3640 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s2 -> s5 [70, 70] { R3796 += 1, R3640 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s2 -> s1 [71, 65535] { R3796 += 1, R3640 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s3 -> s1 [0, 69] { R3796 += 1, R3640 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s3 -> s6 [0, 65535] { R3796 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s3 [0, 65535] { R3796 += 1, R3640 += 1, R1803 += 1, R1804 += 1 };
  s3 -> s4 [70, 70] { R3796 += 1, R3640 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s3 -> s5 [70, 70] { R3796 += 1, R3640 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s3 -> s1 [71, 65535] { R3796 += 1, R3640 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s4 -> s6 [0, 65535] { R3796 += 1 };
  s4 -> s4 [0, 65535] { R3796 += 1, R3640 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s6 [0, 65535] { R3796 += 1 };
  s5 -> s7 [0, 65535] { R3796 += 1, R3640 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R3796 += 1, R3640 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s6 -> s6 [0, 65535] { R3796 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s6 [0, 65535] { R3796 += 1 };
  s7 -> s7 [0, 65535] { R3796 += 1, R3640 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R3798 += 1, R3642 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s0 -> s2 [0, 65535] { R3798 += 1, R3641 += 1, R3642 += 1 };
  s0 -> s0 [0, 65535] { R3797 += 1, R3798 += 1 };
  s0 -> s3 [0, 65535] { R3798 += 1, R3642 += 1, R1812 += 1, R1813 += 1 };
  s0 -> s4 [70, 70] { R3798 += 1, R3642 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s0 -> s5 [70, 70] { R3798 += 1, R3642 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s0 -> s1 [71, 65535] { R3798 += 1, R3642 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s1 -> s1 [0, 69] { R3798 += 1, R3642 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s1 -> s1 [0, 65535] { R3798 += 1, R3642 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R3798 += 1 };
  s1 -> s4 [70, 70] { R3798 += 1, R3642 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s1 -> s5 [70, 70] { R3798 += 1, R3642 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s1 -> s1 [71, 65535] { R3798 += 1, R3642 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s2 -> s1 [0, 69] { R3798 += 1, R3642 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R3798 += 1, R3641 += 1, R3642 += 1 };
  s2 -> s3 [0, 65535] { R3798 += 1, R3642 += 1, R1812 += 1, R1813 += 1 };
  s2 -> s4 [70, 70] { R3798 += 1, R3642 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s2 -> s5 [70, 70] { R3798 += 1, R3642 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s2 -> s1 [71, 65535] { R3798 += 1, R3642 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s3 -> s1 [0, 69] { R3798 += 1, R3642 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R3798 += 1 };
  s3 -> s3 [0, 65535] { R3798 += 1, R3642 += 1, R1812 += 1, R1813 += 1 };
  s3 -> s4 [70, 70] { R3798 += 1, R3642 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s3 -> s5 [70, 70] { R3798 += 1, R3642 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s3 -> s1 [71, 65535] { R3798 += 1, R3642 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s4 -> s4 [0, 65535] { R3798 += 1, R3642 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s8 [0, 65535] { R3798 += 1, R3642 += 1 };
  s4 -> s7 [0, 65535] { R3798 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R3798 += 1 };
  s5 -> s5 [0, 65535] { R3798 += 1, R3642 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3798 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R3798 += 1, R3642 += 1 };
  s8 -> s7 [0, 65535] { R3798 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R3800 += 1, R3644 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s0 -> s0 [0, 65535] { R3799 += 1, R3800 += 1 };
  s0 -> s2 [0, 65535] { R3800 += 1, R3643 += 1, R3644 += 1 };
  s0 -> s3 [0, 65535] { R3800 += 1, R3644 += 1, R1821 += 1, R1822 += 1 };
  s0 -> s4 [70, 70] { R3800 += 1, R3644 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s0 -> s5 [70, 70] { R3800 += 1, R3644 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s0 -> s1 [71, 65535] { R3800 += 1, R3644 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s1 -> s1 [0, 69] { R3800 += 1, R3644 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s1 -> s6 [0, 65535] { R3800 += 1 };
  s1 -> s1 [0, 65535] { R3800 += 1, R3644 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [70, 70] { R3800 += 1, R3644 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s1 -> s5 [70, 70] { R3800 += 1, R3644 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s1 -> s1 [71, 65535] { R3800 += 1, R3644 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s2 -> s1 [0, 69] { R3800 += 1, R3644 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s2 [0, 65535] { R3800 += 1, R3643 += 1, R3644 += 1 };
  s2 -> s3 [0, 65535] { R3800 += 1, R3644 += 1, R1821 += 1, R1822 += 1 };
  s2 -> s4 [70, 70] { R3800 += 1, R3644 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s2 -> s5 [70, 70] { R3800 += 1, R3644 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s2 -> s1 [71, 65535] { R3800 += 1, R3644 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s3 -> s1 [0, 69] { R3800 += 1, R3644 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s3 -> s6 [0, 65535] { R3800 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R3800 += 1, R3644 += 1, R1821 += 1, R1822 += 1 };
  s3 -> s4 [70, 70] { R3800 += 1, R3644 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s3 -> s5 [70, 70] { R3800 += 1, R3644 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s3 -> s1 [71, 65535] { R3800 += 1, R3644 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s4 -> s6 [0, 65535] { R3800 += 1 };
  s4 -> s4 [0, 65535] { R3800 += 1, R3644 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s4 -> s8 [0, 65535] { R3800 += 1, R3644 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s6 [0, 65535] { R3800 += 1 };
  s5 -> s5 [0, 65535] { R3800 += 1, R3644 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R3800 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R3800 += 1 };
  s8 -> s8 [0, 65535] { R3800 += 1, R3644 += 1 };
  s8 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 69] { R3802 += 1, R3646 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s0 -> s2 [0, 65535] { R3802 += 1, R3645 += 1, R3646 += 1 };
  s0 -> s3 [0, 65535] { R3802 += 1, R3646 += 1, R1830 += 1, R1831 += 1 };
  s0 -> s0 [0, 65535] { R3801 += 1, R3802 += 1 };
  s0 -> s4 [70, 70] { R3802 += 1, R3646 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s0 -> s5 [70, 70] { R3802 += 1, R3646 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s0 -> s1 [71, 65535] { R3802 += 1, R3646 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s1 -> s1 [0, 69] { R3802 += 1, R3646 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s8 [0, 65535] { R3802 += 1 };
  s1 -> s1 [0, 65535] { R3802 += 1, R3646 += 1 };
  s1 -> s4 [70, 70] { R3802 += 1, R3646 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s1 -> s5 [70, 70] { R3802 += 1, R3646 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s1 -> s1 [71, 65535] { R3802 += 1, R3646 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s2 -> s1 [0, 69] { R3802 += 1, R3646 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R3802 += 1, R3645 += 1, R3646 += 1 };
  s2 -> s3 [0, 65535] { R3802 += 1, R3646 += 1, R1830 += 1, R1831 += 1 };
  s2 -> s4 [70, 70] { R3802 += 1, R3646 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s2 -> s5 [70, 70] { R3802 += 1, R3646 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s2 -> s1 [71, 65535] { R3802 += 1, R3646 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s3 -> s1 [0, 69] { R3802 += 1, R3646 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R3802 += 1, R3646 += 1, R1830 += 1, R1831 += 1 };
  s3 -> s8 [0, 65535] { R3802 += 1 };
  s3 -> s4 [70, 70] { R3802 += 1, R3646 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s3 -> s5 [70, 70] { R3802 += 1, R3646 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s3 -> s1 [71, 65535] { R3802 += 1, R3646 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3802 += 1, R3646 += 1 };
  s4 -> s8 [0, 65535] { R3802 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3802 += 1, R3646 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s5 -> s7 [0, 65535] { R3802 += 1, R3646 += 1 };
  s5 -> s8 [0, 65535] { R3802 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3802 += 1, R3646 += 1 };
  s7 -> s8 [0, 65535] { R3802 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R3802 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 69] { R3804 += 1, R3648 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s0 -> s2 [0, 65535] { R3804 += 1, R3647 += 1, R3648 += 1 };
  s0 -> s0 [0, 65535] { R3803 += 1, R3804 += 1 };
  s0 -> s3 [0, 65535] { R3804 += 1, R3648 += 1, R1839 += 1, R1840 += 1 };
  s0 -> s4 [70, 70] { R3804 += 1, R3648 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s0 -> s5 [70, 70] { R3804 += 1, R3648 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s0 -> s1 [71, 65535] { R3804 += 1, R3648 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s1 -> s1 [0, 69] { R3804 += 1, R3648 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s1 -> s1 [0, 65535] { R3804 += 1, R3648 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s8 [0, 65535] { R3804 += 1 };
  s1 -> s4 [70, 70] { R3804 += 1, R3648 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s1 -> s5 [70, 70] { R3804 += 1, R3648 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s1 -> s1 [71, 65535] { R3804 += 1, R3648 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s2 -> s1 [0, 69] { R3804 += 1, R3648 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s2 -> s2 [0, 65535] { R3804 += 1, R3647 += 1, R3648 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R3804 += 1, R3648 += 1, R1839 += 1, R1840 += 1 };
  s2 -> s4 [70, 70] { R3804 += 1, R3648 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s2 -> s5 [70, 70] { R3804 += 1, R3648 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s2 -> s1 [71, 65535] { R3804 += 1, R3648 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s3 -> s1 [0, 69] { R3804 += 1, R3648 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R3804 += 1, R3648 += 1, R1839 += 1, R1840 += 1 };
  s3 -> s8 [0, 65535] { R3804 += 1 };
  s3 -> s4 [70, 70] { R3804 += 1, R3648 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s3 -> s5 [70, 70] { R3804 += 1, R3648 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s3 -> s1 [71, 65535] { R3804 += 1, R3648 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s4 -> s4 [0, 65535] { R3804 += 1, R3648 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s8 [0, 65535] { R3804 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3804 += 1, R3648 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s5 -> s7 [0, 65535] { R3804 += 1, R3648 += 1 };
  s5 -> s8 [0, 65535] { R3804 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3804 += 1, R3648 += 1 };
  s7 -> s8 [0, 65535] { R3804 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R3804 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 69] { R3806 += 1, R3650 += 1, R1846 += 1 };
  s0 -> s2 [0, 65535] { R3806 += 1, R3650 += 1, R1845 += 1, R1846 += 1 };
  s0 -> s0 [0, 65535] { R3805 += 1, R3806 += 1 };
  s0 -> s3 [0, 65535] { R3806 += 1, R3649 += 1, R3650 += 1 };
  s0 -> s4 [70, 70] { R3806 += 1, R3650 += 1, R1846 += 1 };
  s0 -> s1 [71, 65535] { R3806 += 1, R3650 += 1, R1846 += 1 };
  s1 -> s1 [0, 69] { R3806 += 1, R3650 += 1, R1846 += 1 };
  s1 -> s4 [70, 70] { R3806 += 1, R3650 += 1, R1846 += 1 };
  s1 -> s1 [71, 65535] { R3806 += 1, R3650 += 1, R1846 += 1 };
  s2 -> s1 [0, 69] { R3806 += 1, R3650 += 1, R1846 += 1 };
  s2 -> s2 [0, 65535] { R3806 += 1, R3650 += 1, R1845 += 1, R1846 += 1 };
  s2 -> s4 [70, 70] { R3806 += 1, R3650 += 1, R1846 += 1 };
  s2 -> s1 [71, 65535] { R3806 += 1, R3650 += 1, R1846 += 1 };
  s3 -> s1 [0, 69] { R3806 += 1, R3650 += 1, R1846 += 1 };
  s3 -> s2 [0, 65535] { R3806 += 1, R3650 += 1, R1845 += 1, R1846 += 1 };
  s3 -> s3 [0, 65535] { R3806 += 1, R3649 += 1, R3650 += 1 };
  s3 -> s4 [70, 70] { R3806 += 1, R3650 += 1, R1846 += 1 };
  s3 -> s1 [71, 65535] { R3806 += 1, R3650 += 1, R1846 += 1 };
  s4 -> s5 [0, 65535] { R3806 += 1 };
  s4 -> s4 [0, 65535] { R3806 += 1, R3650 += 1, R1846 += 1 };
  s4 -> s6 [0, 65535] { R3806 += 1, R3650 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R3806 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s5 [0, 65535] { R3806 += 1 };
  s6 -> s6 [0, 65535] { R3806 += 1, R3650 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s4, s5, s6, s7;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R3808 += 1, R3652 += 1, R1850 += 1, R1851 += 1 };
  s0 -> s2 [0, 65535] { R3808 += 1, R3652 += 1, R1851 += 1, R1852 += 1 };
  s0 -> s0 [0, 65535] { R3807 += 1, R3808 += 1 };
  s0 -> s3 [0, 65535] { R3808 += 1, R3651 += 1, R3652 += 1 };
  s1 -> s5 [0, 65535] { R3808 += 1 };
  s1 -> s1 [0, 65535] { R3808 += 1, R3652 += 1, R1850 += 1, R1851 += 1 };
  s1 -> s2 [0, 65535] { R3808 += 1, R3652 += 1, R1851 += 1, R1852 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R3808 += 1 };
  s2 -> s2 [0, 65535] { R3808 += 1, R3652 += 1, R1851 += 1, R1852 += 1 };
  s2 -> s6 [0, 65535] { R3808 += 1, R3652 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R3808 += 1, R3652 += 1, R1850 += 1, R1851 += 1 };
  s3 -> s2 [0, 65535] { R3808 += 1, R3652 += 1, R1851 += 1, R1852 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3808 += 1, R3651 += 1, R3652 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3808 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R3808 += 1 };
  s6 -> s6 [0, 65535] { R3808 += 1, R3652 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 69] { R3810 += 1, R3654 += 1, R1857 += 1 };
  s0 -> s2 [0, 65535] { R3810 += 1, R3654 += 1, R1857 += 1, R1858 += 1 };
  s0 -> s3 [0, 65535] { R3810 += 1, R3654 += 1, R1856 += 1, R1857 += 1 };
  s0 -> s4 [0, 65535] { R3810 += 1, R3653 += 1, R3654 += 1 };
  s0 -> s0 [0, 65535] { R3809 += 1, R3810 += 1 };
  s0 -> s1 [71, 65535] { R3810 += 1, R3654 += 1, R1857 += 1 };
  s1 -> s1 [0, 69] { R3810 += 1, R3654 += 1, R1857 += 1 };
  s1 -> s1 [0, 65535] { R3810 += 1, R3654 += 1 };
  s1 -> s6 [0, 65535] { R3810 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [71, 65535] { R3810 += 1, R3654 += 1, R1857 += 1 };
  s2 -> s1 [0, 69] { R3810 += 1, R3654 += 1, R1857 += 1 };
  s2 -> s7 [0, 65535] { R3810 += 1, R3654 += 1 };
  s2 -> s2 [0, 65535] { R3810 += 1, R3654 += 1, R1857 += 1, R1858 += 1 };
  s2 -> s6 [0, 65535] { R3810 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [71, 65535] { R3810 += 1, R3654 += 1, R1857 += 1 };
  s3 -> s1 [0, 69] { R3810 += 1, R3654 += 1, R1857 += 1 };
  s3 -> s2 [0, 65535] { R3810 += 1, R3654 += 1, R1857 += 1, R1858 += 1 };
  s3 -> s3 [0, 65535] { R3810 += 1, R3654 += 1, R1856 += 1, R1857 += 1 };
  s3 -> s6 [0, 65535] { R3810 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [71, 65535] { R3810 += 1, R3654 += 1, R1857 += 1 };
  s4 -> s1 [0, 69] { R3810 += 1, R3654 += 1, R1857 += 1 };
  s4 -> s2 [0, 65535] { R3810 += 1, R3654 += 1, R1857 += 1, R1858 += 1 };
  s4 -> s3 [0, 65535] { R3810 += 1, R3654 += 1, R1856 += 1, R1857 += 1 };
  s4 -> s4 [0, 65535] { R3810 += 1, R3653 += 1, R3654 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s1 [71, 65535] { R3810 += 1, R3654 += 1, R1857 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3810 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R3810 += 1, R3654 += 1 };
  s7 -> s6 [0, 65535] { R3810 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R3812 += 1, R3656 += 1, R1864 += 1, R1866 += 1 };
  s0 -> s0 [0, 65535] { R3811 += 1, R3812 += 1 };
  s0 -> s2 [0, 65535] { R3812 += 1, R3656 += 1, R1864 += 1, R1865 += 1, R1866 += 1 };
  s0 -> s3 [0, 65535] { R3812 += 1, R3656 += 1, R1863 += 1, R1864 += 1 };
  s0 -> s4 [0, 65535] { R3812 += 1, R3655 += 1, R3656 += 1 };
  s0 -> s1 [71, 65535] { R3812 += 1, R3656 += 1, R1864 += 1, R1866 += 1 };
  s1 -> s1 [0, 69] { R3812 += 1, R3656 += 1, R1864 += 1, R1866 += 1 };
  s1 -> s7 [0, 65535] { R3812 += 1, R3656 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R3812 += 1 };
  s1 -> s1 [0, 65535] { R3812 += 1, R3656 += 1, R1864 += 1 };
  s1 -> s1 [71, 65535] { R3812 += 1, R3656 += 1, R1864 += 1, R1866 += 1 };
  s2 -> s1 [0, 69] { R3812 += 1, R3656 += 1, R1864 += 1, R1866 += 1 };
  s2 -> s7 [0, 65535] { R3812 += 1, R3656 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3812 += 1, R3656 += 1, R1864 += 1, R1865 += 1, R1866 += 1 };
  s2 -> s6 [0, 65535] { R3812 += 1 };
  s2 -> s1 [71, 65535] { R3812 += 1, R3656 += 1, R1864 += 1, R1866 += 1 };
  s3 -> s1 [0, 69] { R3812 += 1, R3656 += 1, R1864 += 1, R1866 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R3812 += 1, R3656 += 1, R1864 += 1, R1865 += 1, R1866 += 1 };
  s3 -> s6 [0, 65535] { R3812 += 1 };
  s3 -> s3 [0, 65535] { R3812 += 1, R3656 += 1, R1863 += 1, R1864 += 1 };
  s3 -> s1 [71, 65535] { R3812 += 1, R3656 += 1, R1864 += 1, R1866 += 1 };
  s4 -> s1 [0, 69] { R3812 += 1, R3656 += 1, R1864 += 1, R1866 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R3812 += 1, R3656 += 1, R1864 += 1, R1865 += 1, R1866 += 1 };
  s4 -> s3 [0, 65535] { R3812 += 1, R3656 += 1, R1863 += 1, R1864 += 1 };
  s4 -> s4 [0, 65535] { R3812 += 1, R3655 += 1, R3656 += 1 };
  s4 -> s1 [71, 65535] { R3812 += 1, R3656 += 1, R1864 += 1, R1866 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3812 += 1 };
  s7 -> s7 [0, 65535] { R3812 += 1, R3656 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R3812 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R3814 += 1, R3658 += 1, R1873 += 1, R1874 += 1, R1875 += 1 };
  s0 -> s2 [0, 65535] { R3814 += 1, R3658 += 1, R1872 += 1, R1873 += 1 };
  s0 -> s3 [0, 65535] { R3814 += 1, R3657 += 1, R3658 += 1 };
  s0 -> s4 [0, 65535] { R3814 += 1, R3658 += 1, R1873 += 1, R1875 += 1, R1876 += 1 };
  s0 -> s0 [0, 65535] { R3813 += 1, R3814 += 1 };
  s1 -> s1 [0, 65535] { R3814 += 1, R3658 += 1, R1873 += 1, R1874 += 1, R1875 += 1 };
  s1 -> s5 [0, 65535] { R3814 += 1, R3658 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s4 [0, 65535] { R3814 += 1, R3658 += 1, R1873 += 1, R1875 += 1, R1876 += 1 };
  s1 -> s7 [0, 65535] { R3814 += 1 };
  s2 -> s1 [0, 65535] { R3814 += 1, R3658 += 1, R1873 += 1, R1874 += 1, R1875 += 1 };
  s2 -> s2 [0, 65535] { R3814 += 1, R3658 += 1, R1872 += 1, R1873 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [0, 65535] { R3814 += 1, R3658 += 1, R1873 += 1, R1875 += 1, R1876 += 1 };
  s2 -> s7 [0, 65535] { R3814 += 1 };
  s3 -> s1 [0, 65535] { R3814 += 1, R3658 += 1, R1873 += 1, R1874 += 1, R1875 += 1 };
  s3 -> s2 [0, 65535] { R3814 += 1, R3658 += 1, R1872 += 1, R1873 += 1 };
  s3 -> s3 [0, 65535] { R3814 += 1, R3657 += 1, R3658 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R3814 += 1, R3658 += 1, R1873 += 1, R1875 += 1, R1876 += 1 };
  s4 -> s5 [0, 65535] { R3814 += 1, R3658 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3814 += 1, R3658 += 1, R1873 += 1, R1875 += 1, R1876 += 1 };
  s4 -> s7 [0, 65535] { R3814 += 1 };
  s4 -> s8 [0, 65535] { R3814 += 1, R3658 += 1, R1873 += 1 };
  s5 -> s5 [0, 65535] { R3814 += 1, R3658 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R3814 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3814 += 1 };
  s8 -> s5 [0, 65535] { R3814 += 1, R3658 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R3814 += 1 };
  s8 -> s8 [0, 65535] { R3814 += 1, R3658 += 1, R1873 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 70] { R3816 += 1, R3660 += 1, R1882 += 1, R1884 += 1 };
  s0 -> s2 [0, 65535] { R3816 += 1, R3659 += 1, R3660 += 1 };
  s0 -> s3 [0, 65535] { R3816 += 1, R3660 += 1, R1882 += 1, R1883 += 1, R1884 += 1 };
  s0 -> s4 [0, 65535] { R3816 += 1, R3660 += 1, R1881 += 1, R1882 += 1 };
  s0 -> s0 [0, 65535] { R3815 += 1, R3816 += 1 };
  s0 -> s1 [76, 65535] { R3816 += 1, R3660 += 1, R1882 += 1, R1884 += 1 };
  s1 -> s1 [0, 70] { R3816 += 1, R3660 += 1, R1882 += 1, R1884 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R3816 += 1 };
  s1 -> s1 [0, 65535] { R3816 += 1, R3660 += 1, R1882 += 1 };
  s1 -> s7 [0, 65535] { R3816 += 1, R3660 += 1 };
  s1 -> s1 [76, 65535] { R3816 += 1, R3660 += 1, R1882 += 1, R1884 += 1 };
  s2 -> s1 [0, 70] { R3816 += 1, R3660 += 1, R1882 += 1, R1884 += 1 };
  s2 -> s2 [0, 65535] { R3816 += 1, R3659 += 1, R3660 += 1 };
  s2 -> s3 [0, 65535] { R3816 += 1, R3660 += 1, R1882 += 1, R1883 += 1, R1884 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s4 [0, 65535] { R3816 += 1, R3660 += 1, R1881 += 1, R1882 += 1 };
  s2 -> s1 [76, 65535] { R3816 += 1, R3660 += 1, R1882 += 1, R1884 += 1 };
  s3 -> s1 [0, 70] { R3816 += 1, R3660 += 1, R1882 += 1, R1884 += 1 };
  s3 -> s3 [0, 65535] { R3816 += 1, R3660 += 1, R1882 += 1, R1883 += 1, R1884 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3816 += 1 };
  s3 -> s7 [0, 65535] { R3816 += 1, R3660 += 1 };
  s3 -> s1 [76, 65535] { R3816 += 1, R3660 += 1, R1882 += 1, R1884 += 1 };
  s4 -> s1 [0, 70] { R3816 += 1, R3660 += 1, R1882 += 1, R1884 += 1 };
  s4 -> s3 [0, 65535] { R3816 += 1, R3660 += 1, R1882 += 1, R1883 += 1, R1884 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3816 += 1 };
  s4 -> s4 [0, 65535] { R3816 += 1, R3660 += 1, R1881 += 1, R1882 += 1 };
  s4 -> s1 [76, 65535] { R3816 += 1, R3660 += 1, R1882 += 1, R1884 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3816 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R3816 += 1 };
  s7 -> s7 [0, 65535] { R3816 += 1, R3660 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 65535] { R3818 += 1, R3662 += 1, R1890 += 1, R1891 += 1 };
  s0 -> s2 [0, 65535] { R3818 += 1, R3662 += 1, R1891 += 1, R1892 += 1, R1893 += 1 };
  s0 -> s3 [0, 65535] { R3818 += 1, R3661 += 1, R3662 += 1 };
  s0 -> s4 [0, 65535] { R3818 += 1, R3662 += 1, R1891 += 1, R1893 += 1, R1894 += 1 };
  s0 -> s0 [0, 65535] { R3817 += 1, R3818 += 1 };
  s1 -> s1 [0, 65535] { R3818 += 1, R3662 += 1, R1890 += 1, R1891 += 1 };
  s1 -> s2 [0, 65535] { R3818 += 1, R3662 += 1, R1891 += 1, R1892 += 1, R1893 += 1 };
  s1 -> s7 [0, 65535] { R3818 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [0, 65535] { R3818 += 1, R3662 += 1, R1891 += 1, R1893 += 1, R1894 += 1 };
  s2 -> s2 [0, 65535] { R3818 += 1, R3662 += 1, R1891 += 1, R1892 += 1, R1893 += 1 };
  s2 -> s6 [0, 65535] { R3818 += 1, R3662 += 1 };
  s2 -> s7 [0, 65535] { R3818 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [0, 65535] { R3818 += 1, R3662 += 1, R1891 += 1, R1893 += 1, R1894 += 1 };
  s3 -> s1 [0, 65535] { R3818 += 1, R3662 += 1, R1890 += 1, R1891 += 1 };
  s3 -> s2 [0, 65535] { R3818 += 1, R3662 += 1, R1891 += 1, R1892 += 1, R1893 += 1 };
  s3 -> s3 [0, 65535] { R3818 += 1, R3661 += 1, R3662 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s4 [0, 65535] { R3818 += 1, R3662 += 1, R1891 += 1, R1893 += 1, R1894 += 1 };
  s4 -> s5 [0, 65535] { R3818 += 1, R3662 += 1, R1891 += 1 };
  s4 -> s6 [0, 65535] { R3818 += 1, R3662 += 1 };
  s4 -> s7 [0, 65535] { R3818 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [0, 65535] { R3818 += 1, R3662 += 1, R1891 += 1, R1893 += 1, R1894 += 1 };
  s5 -> s5 [0, 65535] { R3818 += 1, R3662 += 1, R1891 += 1 };
  s5 -> s6 [0, 65535] { R3818 += 1, R3662 += 1 };
  s5 -> s7 [0, 65535] { R3818 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R3818 += 1, R3662 += 1 };
  s6 -> s7 [0, 65535] { R3818 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R3818 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 75] { R3820 += 1, R3664 += 1, R1901 += 1, R1903 += 1 };
  s0 -> s2 [0, 65535] { R3820 += 1, R3664 += 1, R1900 += 1, R1901 += 1 };
  s0 -> s3 [0, 65535] { R3820 += 1, R3663 += 1, R3664 += 1 };
  s0 -> s4 [0, 65535] { R3820 += 1, R3664 += 1, R1901 += 1, R1903 += 1, R1904 += 1 };
  s0 -> s5 [0, 65535] { R3820 += 1, R3664 += 1, R1901 += 1, R1902 += 1, R1903 += 1 };
  s0 -> s0 [0, 65535] { R3819 += 1, R3820 += 1 };
  s0 -> s1 [77, 65535] { R3820 += 1, R3664 += 1, R1901 += 1, R1903 += 1 };
  s1 -> s1 [0, 75] { R3820 += 1, R3664 += 1, R1901 += 1, R1903 += 1 };
  s1 -> s6 [0, 65535] { R3820 += 1, R3664 += 1 };
  s1 -> s1 [0, 65535] { R3820 += 1, R3664 += 1, R1901 += 1 };
  s1 -> s7 [0, 65535] { R3820 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s1 [77, 65535] { R3820 += 1, R3664 += 1, R1901 += 1, R1903 += 1 };
  s2 -> s1 [0, 75] { R3820 += 1, R3664 += 1, R1901 += 1, R1903 += 1 };
  s2 -> s2 [0, 65535] { R3820 += 1, R3664 += 1, R1900 += 1, R1901 += 1 };
  s2 -> s7 [0, 65535] { R3820 += 1 };
  s2 -> s4 [0, 65535] { R3820 += 1, R3664 += 1, R1901 += 1, R1903 += 1, R1904 += 1 };
  s2 -> s5 [0, 65535] { R3820 += 1, R3664 += 1, R1901 += 1, R1902 += 1, R1903 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s1 [77, 65535] { R3820 += 1, R3664 += 1, R1901 += 1, R1903 += 1 };
  s3 -> s1 [0, 75] { R3820 += 1, R3664 += 1, R1901 += 1, R1903 += 1 };
  s3 -> s2 [0, 65535] { R3820 += 1, R3664 += 1, R1900 += 1, R1901 += 1 };
  s3 -> s3 [0, 65535] { R3820 += 1, R3663 += 1, R3664 += 1 };
  s3 -> s4 [0, 65535] { R3820 += 1, R3664 += 1, R1901 += 1, R1903 += 1, R1904 += 1 };
  s3 -> s5 [0, 65535] { R3820 += 1, R3664 += 1, R1901 += 1, R1902 += 1, R1903 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s1 [77, 65535] { R3820 += 1, R3664 += 1, R1901 += 1, R1903 += 1 };
  s4 -> s1 [0, 75] { R3820 += 1, R3664 += 1, R1901 += 1, R1903 += 1 };
  s4 -> s6 [0, 65535] { R3820 += 1, R3664 += 1 };
  s4 -> s9 [0, 65535] { R3820 += 1, R3664 += 1, R1901 += 1 };
  s4 -> s7 [0, 65535] { R3820 += 1 };
  s4 -> s4 [0, 65535] { R3820 += 1, R3664 += 1, R1901 += 1, R1903 += 1, R1904 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s1 [77, 65535] { R3820 += 1, R3664 += 1, R1901 += 1, R1903 += 1 };
  s5 -> s1 [0, 75] { R3820 += 1, R3664 += 1, R1901 += 1, R1903 += 1 };
  s5 -> s6 [0, 65535] { R3820 += 1, R3664 += 1 };
  s5 -> s7 [0, 65535] { R3820 += 1 };
  s5 -> s4 [0, 65535] { R3820 += 1, R3664 += 1, R1901 += 1, R1903 += 1, R1904 += 1 };
  s5 -> s5 [0, 65535] { R3820 += 1, R3664 += 1, R1901 += 1, R1902 += 1, R1903 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s1 [77, 65535] { R3820 += 1, R3664 += 1, R1901 += 1, R1903 += 1 };
  s6 -> s6 [0, 65535] { R3820 += 1, R3664 += 1 };
  s6 -> s7 [0, 65535] { R3820 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R3820 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s6 [0, 65535] { R3820 += 1, R3664 += 1 };
  s9 -> s9 [0, 65535] { R3820 += 1, R3664 += 1, R1901 += 1 };
  s9 -> s7 [0, 65535] { R3820 += 1 };
  s9 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 75] { R3822 += 1, R3666 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s0 -> s2 [0, 65535] { R3822 += 1, R3666 += 1, R1912 += 1, R1913 += 1, R1914 += 1 };
  s0 -> s3 [0, 65535] { R3822 += 1, R3666 += 1, R1912 += 1, R1914 += 1, R1915 += 1, R1916 += 1 };
  s0 -> s4 [0, 65535] { R3822 += 1, R3665 += 1, R3666 += 1 };
  s0 -> s5 [0, 65535] { R3822 += 1, R3666 += 1, R1911 += 1, R1912 += 1 };
  s0 -> s0 [0, 65535] { R3821 += 1, R3822 += 1 };
  s0 -> s1 [77, 65535] { R3822 += 1, R3666 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s1 -> s1 [0, 75] { R3822 += 1, R3666 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s1 -> s8 [0, 65535] { R3822 += 1, R3666 += 1 };
  s1 -> s9 [0, 65535] { R3822 += 1, R3666 += 1, R1912 += 1 };
  s1 -> s6 [0, 65535] { R3822 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R3822 += 1, R3666 += 1, R1912 += 1, R1914 += 1 };
  s1 -> s1 [77, 65535] { R3822 += 1, R3666 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s2 -> s1 [0, 75] { R3822 += 1, R3666 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s2 -> s8 [0, 65535] { R3822 += 1, R3666 += 1 };
  s2 -> s2 [0, 65535] { R3822 += 1, R3666 += 1, R1912 += 1, R1913 += 1, R1914 += 1 };
  s2 -> s6 [0, 65535] { R3822 += 1 };
  s2 -> s3 [0, 65535] { R3822 += 1, R3666 += 1, R1912 += 1, R1914 += 1, R1915 += 1, R1916 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s1 [77, 65535] { R3822 += 1, R3666 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s3 -> s1 [0, 75] { R3822 += 1, R3666 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s3 -> s8 [0, 65535] { R3822 += 1, R3666 += 1 };
  s3 -> s9 [0, 65535] { R3822 += 1, R3666 += 1, R1912 += 1 };
  s3 -> s6 [0, 65535] { R3822 += 1 };
  s3 -> s3 [0, 65535] { R3822 += 1, R3666 += 1, R1912 += 1, R1914 += 1, R1915 += 1, R1916 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s1 [77, 65535] { R3822 += 1, R3666 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s4 -> s1 [0, 75] { R3822 += 1, R3666 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s4 -> s2 [0, 65535] { R3822 += 1, R3666 += 1, R1912 += 1, R1913 += 1, R1914 += 1 };
  s4 -> s3 [0, 65535] { R3822 += 1, R3666 += 1, R1912 += 1, R1914 += 1, R1915 += 1, R1916 += 1 };
  s4 -> s4 [0, 65535] { R3822 += 1, R3665 += 1, R3666 += 1 };
  s4 -> s5 [0, 65535] { R3822 += 1, R3666 += 1, R1911 += 1, R1912 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s1 [77, 65535] { R3822 += 1, R3666 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s5 -> s1 [0, 75] { R3822 += 1, R3666 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s5 -> s2 [0, 65535] { R3822 += 1, R3666 += 1, R1912 += 1, R1913 += 1, R1914 += 1 };
  s5 -> s6 [0, 65535] { R3822 += 1 };
  s5 -> s3 [0, 65535] { R3822 += 1, R3666 += 1, R1912 += 1, R1914 += 1, R1915 += 1, R1916 += 1 };
  s5 -> s5 [0, 65535] { R3822 += 1, R3666 += 1, R1911 += 1, R1912 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s1 [77, 65535] { R3822 += 1, R3666 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s6 -> s6 [0, 65535] { R3822 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R3822 += 1, R3666 += 1 };
  s8 -> s6 [0, 65535] { R3822 += 1 };
  s8 -> s7 [0, 65535];
  s9 -> s8 [0, 65535] { R3822 += 1, R3666 += 1 };
  s9 -> s9 [0, 65535] { R3822 += 1, R3666 += 1, R1912 += 1 };
  s9 -> s6 [0, 65535] { R3822 += 1 };
  s9 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s0 [0, 65535] { R3823 += 1, R3824 += 1 };
  s0 -> s1 [0, 65535] { R3824 += 1, R3668 += 1, R1925 += 1, R1927 += 1, R1928 += 1, R1929 += 1 };
  s0 -> s2 [0, 65535] { R3824 += 1, R3667 += 1, R3668 += 1 };
  s0 -> s3 [0, 65535] { R3824 += 1, R3668 += 1, R1925 += 1, R1926 += 1, R1927 += 1 };
  s0 -> s4 [0, 65535] { R3824 += 1, R3668 += 1, R1925 += 1, R1927 += 1, R1929 += 1, R1930 += 1 };
  s0 -> s5 [0, 65535] { R3824 += 1, R3668 += 1, R1924 += 1, R1925 += 1 };
  s1 -> s6 [0, 65535] { R3824 += 1 };
  s1 -> s1 [0, 65535] { R3824 += 1, R3668 += 1, R1925 += 1, R1927 += 1, R1928 += 1, R1929 += 1 };
  s1 -> s9 [0, 65535] { R3824 += 1, R3668 += 1, R1925 += 1 };
  s1 -> s4 [0, 65535] { R3824 += 1, R3668 += 1, R1925 += 1, R1927 += 1, R1929 += 1, R1930 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s10 [0, 65535] { R3824 += 1, R3668 += 1 };
  s2 -> s1 [0, 65535] { R3824 += 1, R3668 += 1, R1925 += 1, R1927 += 1, R1928 += 1, R1929 += 1 };
  s2 -> s2 [0, 65535] { R3824 += 1, R3667 += 1, R3668 += 1 };
  s2 -> s3 [0, 65535] { R3824 += 1, R3668 += 1, R1925 += 1, R1926 += 1, R1927 += 1 };
  s2 -> s4 [0, 65535] { R3824 += 1, R3668 += 1, R1925 += 1, R1927 += 1, R1929 += 1, R1930 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s5 [0, 65535] { R3824 += 1, R3668 += 1, R1924 += 1, R1925 += 1 };
  s3 -> s6 [0, 65535] { R3824 += 1 };
  s3 -> s1 [0, 65535] { R3824 += 1, R3668 += 1, R1925 += 1, R1927 += 1, R1928 += 1, R1929 += 1 };
  s3 -> s3 [0, 65535] { R3824 += 1, R3668 += 1, R1925 += 1, R1926 += 1, R1927 += 1 };
  s3 -> s4 [0, 65535] { R3824 += 1, R3668 += 1, R1925 += 1, R1927 += 1, R1929 += 1, R1930 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s10 [0, 65535] { R3824 += 1, R3668 += 1 };
  s4 -> s8 [0, 65535] { R3824 += 1, R3668 += 1, R1925 += 1, R1927 += 1 };
  s4 -> s6 [0, 65535] { R3824 += 1 };
  s4 -> s9 [0, 65535] { R3824 += 1, R3668 += 1, R1925 += 1 };
  s4 -> s4 [0, 65535] { R3824 += 1, R3668 += 1, R1925 += 1, R1927 += 1, R1929 += 1, R1930 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s10 [0, 65535] { R3824 += 1, R3668 += 1 };
  s5 -> s6 [0, 65535] { R3824 += 1 };
  s5 -> s1 [0, 65535] { R3824 += 1, R3668 += 1, R1925 += 1, R1927 += 1, R1928 += 1, R1929 += 1 };
  s5 -> s3 [0, 65535] { R3824 += 1, R3668 += 1, R1925 += 1, R1926 += 1, R1927 += 1 };
  s5 -> s4 [0, 65535] { R3824 += 1, R3668 += 1, R1925 += 1, R1927 += 1, R1929 += 1, R1930 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R3824 += 1, R3668 += 1, R1924 += 1, R1925 += 1 };
  s6 -> s6 [0, 65535] { R3824 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R3824 += 1, R3668 += 1, R1925 += 1, R1927 += 1 };
  s8 -> s6 [0, 65535] { R3824 += 1 };
  s8 -> s9 [0, 65535] { R3824 += 1, R3668 += 1, R1925 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s10 [0, 65535] { R3824 += 1, R3668 += 1 };
  s9 -> s6 [0, 65535] { R3824 += 1 };
  s9 -> s9 [0, 65535] { R3824 += 1, R3668 += 1, R1925 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s10 [0, 65535] { R3824 += 1, R3668 += 1 };
  s10 -> s6 [0, 65535] { R3824 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s10 [0, 65535] { R3824 += 1, R3668 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R3826 += 1, R3670 += 1, R1938 += 1, R1939 += 1, R1940 += 1 };
  s0 -> s2 [0, 65535] { R3826 += 1, R3669 += 1, R3670 += 1 };
  s0 -> s3 [0, 65535] { R3826 += 1, R3670 += 1, R1937 += 1, R1938 += 1 };
  s0 -> s4 [0, 65535] { R3826 += 1, R3670 += 1, R1938 += 1, R1940 += 1 };
  s0 -> s5 [0, 65535] { R3826 += 1, R3670 += 1, R1938 += 1, R1940 += 1, R1942 += 1 };
  s0 -> s0 [0, 65535] { R3825 += 1, R3826 += 1 };
  s1 -> s1 [0, 65535] { R3826 += 1, R3670 += 1, R1938 += 1, R1939 += 1, R1940 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s4 [0, 65535] { R3826 += 1, R3670 += 1, R1938 += 1, R1940 += 1 };
  s1 -> s5 [0, 65535] { R3826 += 1, R3670 += 1, R1938 += 1, R1940 += 1, R1942 += 1 };
  s1 -> s8 [0, 65535] { R3826 += 1 };
  s1 -> s9 [0, 65535] { R3826 += 1, R3670 += 1 };
  s2 -> s1 [0, 65535] { R3826 += 1, R3670 += 1, R1938 += 1, R1939 += 1, R1940 += 1 };
  s2 -> s2 [0, 65535] { R3826 += 1, R3669 += 1, R3670 += 1 };
  s2 -> s3 [0, 65535] { R3826 += 1, R3670 += 1, R1937 += 1, R1938 += 1 };
  s2 -> s4 [0, 65535] { R3826 += 1, R3670 += 1, R1938 += 1, R1940 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s5 [0, 65535] { R3826 += 1, R3670 += 1, R1938 += 1, R1940 += 1, R1942 += 1 };
  s3 -> s1 [0, 65535] { R3826 += 1, R3670 += 1, R1938 += 1, R1939 += 1, R1940 += 1 };
  s3 -> s3 [0, 65535] { R3826 += 1, R3670 += 1, R1937 += 1, R1938 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R3826 += 1, R3670 += 1, R1938 += 1, R1940 += 1 };
  s3 -> s5 [0, 65535] { R3826 += 1, R3670 += 1, R1938 += 1, R1940 += 1, R1942 += 1 };
  s3 -> s8 [0, 65535] { R3826 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3826 += 1, R3670 += 1, R1938 += 1, R1940 += 1 };
  s4 -> s7 [0, 65535] { R3826 += 1, R3670 += 1, R1938 += 1 };
  s4 -> s8 [0, 65535] { R3826 += 1 };
  s4 -> s9 [0, 65535] { R3826 += 1, R3670 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s4 [0, 65535] { R3826 += 1, R3670 += 1, R1938 += 1, R1940 += 1 };
  s5 -> s5 [0, 65535] { R3826 += 1, R3670 += 1, R1938 += 1, R1940 += 1, R1942 += 1 };
  s5 -> s7 [0, 65535] { R3826 += 1, R3670 += 1, R1938 += 1 };
  s5 -> s8 [0, 65535] { R3826 += 1 };
  s5 -> s9 [0, 65535] { R3826 += 1, R3670 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3826 += 1, R3670 += 1, R1938 += 1 };
  s7 -> s8 [0, 65535] { R3826 += 1 };
  s7 -> s9 [0, 65535] { R3826 += 1, R3670 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R3826 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s8 [0, 65535] { R3826 += 1 };
  s9 -> s9 [0, 65535] { R3826 += 1, R3670 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 65535] { R3828 += 1, R3672 += 1, R1950 += 1, R1951 += 1 };
  s0 -> s2 [0, 65535] { R3828 += 1, R3672 += 1, R1951 += 1, R1953 += 1, R1954 += 1, R1955 += 1 };
  s0 -> s3 [0, 65535] { R3828 += 1, R3672 += 1, R1951 += 1, R1953 += 1, R1955 += 1, R1956 += 1 };
  s0 -> s0 [0, 65535] { R3827 += 1, R3828 += 1 };
  s0 -> s4 [0, 65535] { R3828 += 1, R3672 += 1, R1951 += 1, R1952 += 1, R1953 += 1 };
  s0 -> s5 [0, 65535] { R3828 += 1, R3671 += 1, R3672 += 1 };
  s1 -> s1 [0, 65535] { R3828 += 1, R3672 += 1, R1950 += 1, R1951 += 1 };
  s1 -> s2 [0, 65535] { R3828 += 1, R3672 += 1, R1951 += 1, R1953 += 1, R1954 += 1, R1955 += 1 };
  s1 -> s3 [0, 65535] { R3828 += 1, R3672 += 1, R1951 += 1, R1953 += 1, R1955 += 1, R1956 += 1 };
  s1 -> s7 [0, 65535] { R3828 += 1 };
  s1 -> s4 [0, 65535] { R3828 += 1, R3672 += 1, R1951 += 1, R1952 += 1, R1953 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s9 [0, 65535] { R3828 += 1, R3672 += 1, R1951 += 1 };
  s2 -> s2 [0, 65535] { R3828 += 1, R3672 += 1, R1951 += 1, R1953 += 1, R1954 += 1, R1955 += 1 };
  s2 -> s3 [0, 65535] { R3828 += 1, R3672 += 1, R1951 += 1, R1953 += 1, R1955 += 1, R1956 += 1 };
  s2 -> s7 [0, 65535] { R3828 += 1 };
  s2 -> s8 [0, 65535] { R3828 += 1, R3672 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s9 [0, 65535] { R3828 += 1, R3672 += 1, R1951 += 1 };
  s3 -> s10 [0, 65535] { R3828 += 1, R3672 += 1, R1951 += 1, R1953 += 1 };
  s3 -> s3 [0, 65535] { R3828 += 1, R3672 += 1, R1951 += 1, R1953 += 1, R1955 += 1, R1956 += 1 };
  s3 -> s7 [0, 65535] { R3828 += 1 };
  s3 -> s8 [0, 65535] { R3828 += 1, R3672 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s2 [0, 65535] { R3828 += 1, R3672 += 1, R1951 += 1, R1953 += 1, R1954 += 1, R1955 += 1 };
  s4 -> s3 [0, 65535] { R3828 += 1, R3672 += 1, R1951 += 1, R1953 += 1, R1955 += 1, R1956 += 1 };
  s4 -> s7 [0, 65535] { R3828 += 1 };
  s4 -> s8 [0, 65535] { R3828 += 1, R3672 += 1 };
  s4 -> s4 [0, 65535] { R3828 += 1, R3672 += 1, R1951 += 1, R1952 += 1, R1953 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s1 [0, 65535] { R3828 += 1, R3672 += 1, R1950 += 1, R1951 += 1 };
  s5 -> s2 [0, 65535] { R3828 += 1, R3672 += 1, R1951 += 1, R1953 += 1, R1954 += 1, R1955 += 1 };
  s5 -> s3 [0, 65535] { R3828 += 1, R3672 += 1, R1951 += 1, R1953 += 1, R1955 += 1, R1956 += 1 };
  s5 -> s4 [0, 65535] { R3828 += 1, R3672 += 1, R1951 += 1, R1952 += 1, R1953 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3828 += 1, R3671 += 1, R3672 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3828 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R3828 += 1 };
  s8 -> s8 [0, 65535] { R3828 += 1, R3672 += 1 };
  s8 -> s6 [0, 65535];
  s9 -> s9 [0, 65535] { R3828 += 1, R3672 += 1, R1951 += 1 };
  s9 -> s7 [0, 65535] { R3828 += 1 };
  s9 -> s8 [0, 65535] { R3828 += 1, R3672 += 1 };
  s9 -> s6 [0, 65535];
  s10 -> s9 [0, 65535] { R3828 += 1, R3672 += 1, R1951 += 1 };
  s10 -> s10 [0, 65535] { R3828 += 1, R3672 += 1, R1951 += 1, R1953 += 1 };
  s10 -> s7 [0, 65535] { R3828 += 1 };
  s10 -> s8 [0, 65535] { R3828 += 1, R3672 += 1 };
  s10 -> s6 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 75] { R3830 += 1, R3674 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s0 -> s2 [0, 65535] { R3830 += 1, R3674 += 1, R1964 += 1, R1966 += 1, R1967 += 1, R1968 += 1 };
  s0 -> s3 [0, 65535] { R3830 += 1, R3673 += 1, R3674 += 1 };
  s0 -> s0 [0, 65535] { R3829 += 1, R3830 += 1 };
  s0 -> s4 [0, 65535] { R3830 += 1, R3674 += 1, R1964 += 1, R1965 += 1, R1966 += 1 };
  s0 -> s5 [0, 65535] { R3830 += 1, R3674 += 1, R1963 += 1, R1964 += 1 };
  s0 -> s6 [76, 76] { R3830 += 1, R3674 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s0 -> s7 [76, 76] { R3830 += 1, R3674 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s0 -> s1 [78, 65535] { R3830 += 1, R3674 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s1 -> s1 [0, 75] { R3830 += 1, R3674 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s1 -> s8 [0, 65535] { R3830 += 1, R3674 += 1 };
  s1 -> s9 [0, 65535] { R3830 += 1 };
  s1 -> s10 [0, 65535];
  s1 -> s11 [0, 65535] { R3830 += 1, R3674 += 1, R1964 += 1 };
  s1 -> s1 [0, 65535] { R3830 += 1, R3674 += 1, R1964 += 1, R1966 += 1 };
  s1 -> s6 [76, 76] { R3830 += 1, R3674 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s1 -> s7 [76, 76] { R3830 += 1, R3674 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s1 -> s1 [78, 65535] { R3830 += 1, R3674 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s2 -> s1 [0, 75] { R3830 += 1, R3674 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s2 -> s8 [0, 65535] { R3830 += 1, R3674 += 1 };
  s2 -> s2 [0, 65535] { R3830 += 1, R3674 += 1, R1964 += 1, R1966 += 1, R1967 += 1, R1968 += 1 };
  s2 -> s9 [0, 65535] { R3830 += 1 };
  s2 -> s10 [0, 65535];
  s2 -> s11 [0, 65535] { R3830 += 1, R3674 += 1, R1964 += 1 };
  s2 -> s6 [76, 76] { R3830 += 1, R3674 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s2 -> s7 [76, 76] { R3830 += 1, R3674 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s2 -> s1 [78, 65535] { R3830 += 1, R3674 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s3 -> s1 [0, 75] { R3830 += 1, R3674 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s3 -> s2 [0, 65535] { R3830 += 1, R3674 += 1, R1964 += 1, R1966 += 1, R1967 += 1, R1968 += 1 };
  s3 -> s3 [0, 65535] { R3830 += 1, R3673 += 1, R3674 += 1 };
  s3 -> s10 [0, 65535];
  s3 -> s4 [0, 65535] { R3830 += 1, R3674 += 1, R1964 += 1, R1965 += 1, R1966 += 1 };
  s3 -> s5 [0, 65535] { R3830 += 1, R3674 += 1, R1963 += 1, R1964 += 1 };
  s3 -> s6 [76, 76] { R3830 += 1, R3674 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s3 -> s7 [76, 76] { R3830 += 1, R3674 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s3 -> s1 [78, 65535] { R3830 += 1, R3674 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s4 -> s1 [0, 75] { R3830 += 1, R3674 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s4 -> s8 [0, 65535] { R3830 += 1, R3674 += 1 };
  s4 -> s2 [0, 65535] { R3830 += 1, R3674 += 1, R1964 += 1, R1966 += 1, R1967 += 1, R1968 += 1 };
  s4 -> s9 [0, 65535] { R3830 += 1 };
  s4 -> s10 [0, 65535];
  s4 -> s4 [0, 65535] { R3830 += 1, R3674 += 1, R1964 += 1, R1965 += 1, R1966 += 1 };
  s4 -> s6 [76, 76] { R3830 += 1, R3674 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s4 -> s7 [76, 76] { R3830 += 1, R3674 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s4 -> s1 [78, 65535] { R3830 += 1, R3674 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s5 -> s1 [0, 75] { R3830 += 1, R3674 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s5 -> s2 [0, 65535] { R3830 += 1, R3674 += 1, R1964 += 1, R1966 += 1, R1967 += 1, R1968 += 1 };
  s5 -> s9 [0, 65535] { R3830 += 1 };
  s5 -> s10 [0, 65535];
  s5 -> s4 [0, 65535] { R3830 += 1, R3674 += 1, R1964 += 1, R1965 += 1, R1966 += 1 };
  s5 -> s5 [0, 65535] { R3830 += 1, R3674 += 1, R1963 += 1, R1964 += 1 };
  s5 -> s6 [76, 76] { R3830 += 1, R3674 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s5 -> s7 [76, 76] { R3830 += 1, R3674 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s5 -> s1 [78, 65535] { R3830 += 1, R3674 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s6 -> s6 [0, 76] { R3830 += 1, R3674 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s6 -> s8 [0, 65535] { R3830 += 1, R3674 += 1 };
  s6 -> s6 [0, 65535] { R3830 += 1, R3674 += 1, R1964 += 1, R1966 += 1 };
  s6 -> s9 [0, 65535] { R3830 += 1 };
  s6 -> s10 [0, 65535];
  s6 -> s11 [0, 65535] { R3830 += 1, R3674 += 1, R1964 += 1 };
  s6 -> s6 [78, 65535] { R3830 += 1, R3674 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s7 -> s8 [0, 65535] { R3830 += 1, R3674 += 1 };
  s7 -> s9 [0, 65535] { R3830 += 1 };
  s7 -> s7 [0, 65535] { R3830 += 1, R3674 += 1, R1964 += 1, R1966 += 1 };
  s7 -> s10 [0, 65535];
  s7 -> s11 [0, 65535] { R3830 += 1, R3674 += 1, R1964 += 1 };
  s8 -> s8 [0, 65535] { R3830 += 1, R3674 += 1 };
  s8 -> s9 [0, 65535] { R3830 += 1 };
  s8 -> s10 [0, 65535];
  s9 -> s9 [0, 65535] { R3830 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  s11 -> s8 [0, 65535] { R3830 += 1, R3674 += 1 };
  s11 -> s9 [0, 65535] { R3830 += 1 };
  s11 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R3830 += 1, R3674 += 1, R1964 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10, s11;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 65535] { R3832 += 1, R3676 += 1, R1975 += 1, R1977 += 1, R1978 += 1 };
  s0 -> s2 [0, 65535] { R3832 += 1, R3676 += 1, R1975 += 1, R1976 += 1, R1977 += 1 };
  s0 -> s3 [0, 65535] { R3832 += 1, R3675 += 1, R3676 += 1 };
  s0 -> s4 [0, 65535] { R3832 += 1, R3676 += 1, R1974 += 1, R1975 += 1 };
  s0 -> s0 [0, 65535] { R3831 += 1, R3832 += 1 };
  s1 -> s1 [0, 65535] { R3832 += 1, R3676 += 1, R1975 += 1, R1977 += 1, R1978 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R3832 += 1 };
  s1 -> s7 [0, 65535] { R3832 += 1, R3676 += 1 };
  s1 -> s8 [0, 65535] { R3832 += 1, R3676 += 1, R1975 += 1 };
  s2 -> s1 [0, 65535] { R3832 += 1, R3676 += 1, R1975 += 1, R1977 += 1, R1978 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3832 += 1, R3676 += 1, R1975 += 1, R1976 += 1, R1977 += 1 };
  s2 -> s6 [0, 65535] { R3832 += 1 };
  s2 -> s7 [0, 65535] { R3832 += 1, R3676 += 1 };
  s3 -> s1 [0, 65535] { R3832 += 1, R3676 += 1, R1975 += 1, R1977 += 1, R1978 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R3832 += 1, R3676 += 1, R1975 += 1, R1976 += 1, R1977 += 1 };
  s3 -> s3 [0, 65535] { R3832 += 1, R3675 += 1, R3676 += 1 };
  s3 -> s4 [0, 65535] { R3832 += 1, R3676 += 1, R1974 += 1, R1975 += 1 };
  s4 -> s1 [0, 65535] { R3832 += 1, R3676 += 1, R1975 += 1, R1977 += 1, R1978 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R3832 += 1, R3676 += 1, R1975 += 1, R1976 += 1, R1977 += 1 };
  s4 -> s6 [0, 65535] { R3832 += 1 };
  s4 -> s4 [0, 65535] { R3832 += 1, R3676 += 1, R1974 += 1, R1975 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3832 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R3832 += 1 };
  s7 -> s7 [0, 65535] { R3832 += 1, R3676 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R3832 += 1 };
  s8 -> s7 [0, 65535] { R3832 += 1, R3676 += 1 };
  s8 -> s8 [0, 65535] { R3832 += 1, R3676 += 1, R1975 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R3834 += 1, R3678 += 1, R1984 += 1, R1986 += 1 };
  s0 -> s2 [0, 65535] { R3834 += 1, R3678 += 1, R1983 += 1, R1984 += 1 };
  s0 -> s0 [0, 65535] { R3833 += 1, R3834 += 1 };
  s0 -> s3 [0, 65535] { R3834 += 1, R3677 += 1, R3678 += 1 };
  s0 -> s4 [0, 65535] { R3834 += 1, R3678 += 1, R1984 += 1, R1985 += 1, R1986 += 1 };
  s0 -> s5 [70, 70] { R3834 += 1, R3678 += 1, R1984 += 1, R1986 += 1 };
  s0 -> s6 [76, 76] { R3834 += 1, R3678 += 1, R1984 += 1, R1986 += 1 };
  s0 -> s1 [77, 65535] { R3834 += 1, R3678 += 1, R1984 += 1, R1986 += 1 };
  s1 -> s1 [0, 69] { R3834 += 1, R3678 += 1, R1984 += 1, R1986 += 1 };
  s1 -> s5 [70, 70] { R3834 += 1, R3678 += 1, R1984 += 1, R1986 += 1 };
  s1 -> s6 [76, 76] { R3834 += 1, R3678 += 1, R1984 += 1, R1986 += 1 };
  s1 -> s1 [77, 65535] { R3834 += 1, R3678 += 1, R1984 += 1, R1986 += 1 };
  s2 -> s1 [0, 69] { R3834 += 1, R3678 += 1, R1984 += 1, R1986 += 1 };
  s2 -> s2 [0, 65535] { R3834 += 1, R3678 += 1, R1983 += 1, R1984 += 1 };
  s2 -> s4 [0, 65535] { R3834 += 1, R3678 += 1, R1984 += 1, R1985 += 1, R1986 += 1 };
  s2 -> s5 [70, 70] { R3834 += 1, R3678 += 1, R1984 += 1, R1986 += 1 };
  s2 -> s6 [76, 76] { R3834 += 1, R3678 += 1, R1984 += 1, R1986 += 1 };
  s2 -> s1 [77, 65535] { R3834 += 1, R3678 += 1, R1984 += 1, R1986 += 1 };
  s3 -> s1 [0, 69] { R3834 += 1, R3678 += 1, R1984 += 1, R1986 += 1 };
  s3 -> s2 [0, 65535] { R3834 += 1, R3678 += 1, R1983 += 1, R1984 += 1 };
  s3 -> s3 [0, 65535] { R3834 += 1, R3677 += 1, R3678 += 1 };
  s3 -> s4 [0, 65535] { R3834 += 1, R3678 += 1, R1984 += 1, R1985 += 1, R1986 += 1 };
  s3 -> s5 [70, 70] { R3834 += 1, R3678 += 1, R1984 += 1, R1986 += 1 };
  s3 -> s6 [76, 76] { R3834 += 1, R3678 += 1, R1984 += 1, R1986 += 1 };
  s3 -> s1 [77, 65535] { R3834 += 1, R3678 += 1, R1984 += 1, R1986 += 1 };
  s4 -> s1 [0, 69] { R3834 += 1, R3678 += 1, R1984 += 1, R1986 += 1 };
  s4 -> s4 [0, 65535] { R3834 += 1, R3678 += 1, R1984 += 1, R1985 += 1, R1986 += 1 };
  s4 -> s5 [70, 70] { R3834 += 1, R3678 += 1, R1984 += 1, R1986 += 1 };
  s4 -> s6 [76, 76] { R3834 += 1, R3678 += 1, R1984 += 1, R1986 += 1 };
  s4 -> s1 [77, 65535] { R3834 += 1, R3678 += 1, R1984 += 1, R1986 += 1 };
  s5 -> s5 [0, 70] { R3834 += 1, R3678 += 1, R1984 += 1, R1986 += 1 };
  s5 -> s11 [76, 76] { R3834 += 1, R3678 += 1, R1984 += 1, R1986 += 1 };
  s5 -> s5 [77, 65535] { R3834 += 1, R3678 += 1, R1984 += 1, R1986 += 1 };
  s6 -> s6 [0, 69] { R3834 += 1, R3678 += 1, R1984 += 1, R1986 += 1 };
  s6 -> s7 [0, 65535] { R3834 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [0, 65535] { R3834 += 1, R3678 += 1 };
  s6 -> s6 [0, 65535] { R3834 += 1, R3678 += 1, R1984 += 1 };
  s6 -> s10 [70, 70] { R3834 += 1, R3678 += 1, R1984 += 1, R1986 += 1 };
  s6 -> s11 [70, 70] { R3834 += 1, R3678 += 1, R1984 += 1, R1986 += 1 };
  s6 -> s6 [76, 65535] { R3834 += 1, R3678 += 1, R1984 += 1, R1986 += 1 };
  s7 -> s7 [0, 65535] { R3834 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s7 [0, 65535] { R3834 += 1 };
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R3834 += 1, R3678 += 1 };
  s10 -> s7 [0, 65535] { R3834 += 1 };
  s10 -> s10 [0, 65535] { R3834 += 1, R3678 += 1, R1984 += 1 };
  s10 -> s9 [0, 65535] { R3834 += 1, R3678 += 1 };
  s10 -> s8 [0, 65535];
  s11 -> s11 [0, 70] { R3834 += 1, R3678 += 1, R1984 += 1, R1986 += 1 };
  s11 -> s7 [0, 65535] { R3834 += 1 };
  s11 -> s8 [0, 65535];
  s11 -> s9 [0, 65535] { R3834 += 1, R3678 += 1 };
  s11 -> s11 [0, 65535] { R3834 += 1, R3678 += 1, R1984 += 1 };
  s11 -> s11 [76, 65535] { R3834 += 1, R3678 += 1, R1984 += 1, R1986 += 1 };
  accepting s8, s9, s6, s7, s10, s11;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R3836 += 1, R3680 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s0 -> s2 [0, 65535] { R3836 += 1, R3679 += 1, R3680 += 1 };
  s0 -> s3 [0, 65535] { R3836 += 1, R3680 += 1, R1993 += 1, R1994 += 1, R1995 += 1 };
  s0 -> s4 [0, 65535] { R3836 += 1, R3680 += 1, R1992 += 1, R1993 += 1 };
  s0 -> s0 [0, 65535] { R3835 += 1, R3836 += 1 };
  s0 -> s5 [70, 70] { R3836 += 1, R3680 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s0 -> s6 [70, 70] { R3836 += 1, R3680 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s0 -> s1 [71, 65535] { R3836 += 1, R3680 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s1 -> s1 [0, 69] { R3836 += 1, R3680 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s1 -> s7 [0, 65535] { R3836 += 1, R3680 += 1 };
  s1 -> s8 [0, 65535] { R3836 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s1 [0, 65535] { R3836 += 1, R3680 += 1, R1993 += 1 };
  s1 -> s5 [70, 70] { R3836 += 1, R3680 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s1 -> s6 [70, 70] { R3836 += 1, R3680 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s1 -> s1 [71, 65535] { R3836 += 1, R3680 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s2 -> s1 [0, 69] { R3836 += 1, R3680 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s2 -> s2 [0, 65535] { R3836 += 1, R3679 += 1, R3680 += 1 };
  s2 -> s3 [0, 65535] { R3836 += 1, R3680 += 1, R1993 += 1, R1994 += 1, R1995 += 1 };
  s2 -> s9 [0, 65535];
  s2 -> s4 [0, 65535] { R3836 += 1, R3680 += 1, R1992 += 1, R1993 += 1 };
  s2 -> s5 [70, 70] { R3836 += 1, R3680 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s2 -> s6 [70, 70] { R3836 += 1, R3680 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s2 -> s1 [71, 65535] { R3836 += 1, R3680 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s3 -> s1 [0, 69] { R3836 += 1, R3680 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s3 -> s3 [0, 65535] { R3836 += 1, R3680 += 1, R1993 += 1, R1994 += 1, R1995 += 1 };
  s3 -> s7 [0, 65535] { R3836 += 1, R3680 += 1 };
  s3 -> s8 [0, 65535] { R3836 += 1 };
  s3 -> s9 [0, 65535];
  s3 -> s5 [70, 70] { R3836 += 1, R3680 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s3 -> s6 [70, 70] { R3836 += 1, R3680 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s3 -> s1 [71, 65535] { R3836 += 1, R3680 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s4 -> s1 [0, 69] { R3836 += 1, R3680 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s4 -> s3 [0, 65535] { R3836 += 1, R3680 += 1, R1993 += 1, R1994 += 1, R1995 += 1 };
  s4 -> s8 [0, 65535] { R3836 += 1 };
  s4 -> s9 [0, 65535];
  s4 -> s4 [0, 65535] { R3836 += 1, R3680 += 1, R1992 += 1, R1993 += 1 };
  s4 -> s5 [70, 70] { R3836 += 1, R3680 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s4 -> s6 [70, 70] { R3836 += 1, R3680 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s4 -> s1 [71, 65535] { R3836 += 1, R3680 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s5 -> s7 [0, 65535] { R3836 += 1, R3680 += 1 };
  s5 -> s8 [0, 65535] { R3836 += 1 };
  s5 -> s10 [0, 65535] { R3836 += 1, R3680 += 1, R1993 += 1 };
  s5 -> s5 [0, 65535] { R3836 += 1, R3680 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s5 -> s9 [0, 65535];
  s6 -> s7 [0, 65535] { R3836 += 1, R3680 += 1 };
  s6 -> s8 [0, 65535] { R3836 += 1 };
  s6 -> s9 [0, 65535];
  s6 -> s6 [0, 65535] { R3836 += 1, R3680 += 1, R1993 += 1 };
  s7 -> s7 [0, 65535] { R3836 += 1, R3680 += 1 };
  s7 -> s8 [0, 65535] { R3836 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R3836 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  s10 -> s7 [0, 65535] { R3836 += 1, R3680 += 1 };
  s10 -> s8 [0, 65535] { R3836 += 1 };
  s10 -> s10 [0, 65535] { R3836 += 1, R3680 += 1, R1993 += 1 };
  s10 -> s9 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R3838 += 1, R3682 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s0 -> s2 [0, 65535] { R3838 += 1, R3682 += 1, R2002 += 1, R2003 += 1 };
  s0 -> s3 [0, 65535] { R3838 += 1, R3681 += 1, R3682 += 1 };
  s0 -> s4 [0, 65535] { R3838 += 1, R3682 += 1, R2003 += 1, R2004 += 1, R2005 += 1 };
  s0 -> s0 [0, 65535] { R3837 += 1, R3838 += 1 };
  s0 -> s5 [70, 70] { R3838 += 1, R3682 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s0 -> s6 [70, 70] { R3838 += 1, R3682 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s0 -> s1 [71, 65535] { R3838 += 1, R3682 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s1 -> s1 [0, 69] { R3838 += 1, R3682 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s8 [0, 65535] { R3838 += 1, R3682 += 1 };
  s1 -> s9 [0, 65535] { R3838 += 1 };
  s1 -> s1 [0, 65535] { R3838 += 1, R3682 += 1, R2003 += 1 };
  s1 -> s5 [70, 70] { R3838 += 1, R3682 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s1 -> s6 [70, 70] { R3838 += 1, R3682 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s1 -> s1 [71, 65535] { R3838 += 1, R3682 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s2 -> s1 [0, 69] { R3838 += 1, R3682 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s2 -> s2 [0, 65535] { R3838 += 1, R3682 += 1, R2002 += 1, R2003 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [0, 65535] { R3838 += 1, R3682 += 1, R2003 += 1, R2004 += 1, R2005 += 1 };
  s2 -> s9 [0, 65535] { R3838 += 1 };
  s2 -> s5 [70, 70] { R3838 += 1, R3682 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s2 -> s6 [70, 70] { R3838 += 1, R3682 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s2 -> s1 [71, 65535] { R3838 += 1, R3682 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s3 -> s1 [0, 69] { R3838 += 1, R3682 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s3 -> s2 [0, 65535] { R3838 += 1, R3682 += 1, R2002 += 1, R2003 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R3838 += 1, R3681 += 1, R3682 += 1 };
  s3 -> s4 [0, 65535] { R3838 += 1, R3682 += 1, R2003 += 1, R2004 += 1, R2005 += 1 };
  s3 -> s5 [70, 70] { R3838 += 1, R3682 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s3 -> s6 [70, 70] { R3838 += 1, R3682 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s3 -> s1 [71, 65535] { R3838 += 1, R3682 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s4 -> s1 [0, 69] { R3838 += 1, R3682 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R3838 += 1, R3682 += 1 };
  s4 -> s4 [0, 65535] { R3838 += 1, R3682 += 1, R2003 += 1, R2004 += 1, R2005 += 1 };
  s4 -> s9 [0, 65535] { R3838 += 1 };
  s4 -> s5 [70, 70] { R3838 += 1, R3682 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s4 -> s6 [70, 70] { R3838 += 1, R3682 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s4 -> s1 [71, 65535] { R3838 += 1, R3682 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R3838 += 1, R3682 += 1 };
  s5 -> s10 [0, 65535] { R3838 += 1, R3682 += 1, R2003 += 1 };
  s5 -> s5 [0, 65535] { R3838 += 1, R3682 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s5 -> s9 [0, 65535] { R3838 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R3838 += 1, R3682 += 1 };
  s6 -> s9 [0, 65535] { R3838 += 1 };
  s6 -> s6 [0, 65535] { R3838 += 1, R3682 += 1, R2003 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R3838 += 1, R3682 += 1 };
  s8 -> s9 [0, 65535] { R3838 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s9 [0, 65535] { R3838 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s8 [0, 65535] { R3838 += 1, R3682 += 1 };
  s10 -> s10 [0, 65535] { R3838 += 1, R3682 += 1, R2003 += 1 };
  s10 -> s9 [0, 65535] { R3838 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R3840 += 1, R3684 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s0 -> s2 [0, 65535] { R3840 += 1, R3684 += 1, R2014 += 1, R2015 += 1, R2016 += 1 };
  s0 -> s0 [0, 65535] { R3839 += 1, R3840 += 1 };
  s0 -> s3 [0, 65535] { R3840 += 1, R3684 += 1, R2013 += 1, R2014 += 1 };
  s0 -> s4 [0, 65535] { R3840 += 1, R3683 += 1, R3684 += 1 };
  s0 -> s5 [70, 70] { R3840 += 1, R3684 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s0 -> s6 [70, 70] { R3840 += 1, R3684 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s0 -> s1 [71, 65535] { R3840 += 1, R3684 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s1 -> s1 [0, 69] { R3840 += 1, R3684 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s1 -> s7 [0, 65535] { R3840 += 1 };
  s1 -> s1 [0, 65535] { R3840 += 1, R3684 += 1, R2014 += 1 };
  s1 -> s9 [0, 65535] { R3840 += 1, R3684 += 1 };
  s1 -> s10 [0, 65535];
  s1 -> s5 [70, 70] { R3840 += 1, R3684 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s1 -> s6 [70, 70] { R3840 += 1, R3684 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s1 -> s1 [71, 65535] { R3840 += 1, R3684 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s2 -> s1 [0, 69] { R3840 += 1, R3684 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s2 -> s7 [0, 65535] { R3840 += 1 };
  s2 -> s2 [0, 65535] { R3840 += 1, R3684 += 1, R2014 += 1, R2015 += 1, R2016 += 1 };
  s2 -> s9 [0, 65535] { R3840 += 1, R3684 += 1 };
  s2 -> s10 [0, 65535];
  s2 -> s5 [70, 70] { R3840 += 1, R3684 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s2 -> s6 [70, 70] { R3840 += 1, R3684 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s2 -> s1 [71, 65535] { R3840 += 1, R3684 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s3 -> s1 [0, 69] { R3840 += 1, R3684 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s3 -> s7 [0, 65535] { R3840 += 1 };
  s3 -> s2 [0, 65535] { R3840 += 1, R3684 += 1, R2014 += 1, R2015 += 1, R2016 += 1 };
  s3 -> s10 [0, 65535];
  s3 -> s3 [0, 65535] { R3840 += 1, R3684 += 1, R2013 += 1, R2014 += 1 };
  s3 -> s5 [70, 70] { R3840 += 1, R3684 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s3 -> s6 [70, 70] { R3840 += 1, R3684 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s3 -> s1 [71, 65535] { R3840 += 1, R3684 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s4 -> s1 [0, 69] { R3840 += 1, R3684 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s4 -> s2 [0, 65535] { R3840 += 1, R3684 += 1, R2014 += 1, R2015 += 1, R2016 += 1 };
  s4 -> s10 [0, 65535];
  s4 -> s3 [0, 65535] { R3840 += 1, R3684 += 1, R2013 += 1, R2014 += 1 };
  s4 -> s4 [0, 65535] { R3840 += 1, R3683 += 1, R3684 += 1 };
  s4 -> s5 [70, 70] { R3840 += 1, R3684 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s4 -> s6 [70, 70] { R3840 += 1, R3684 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s4 -> s1 [71, 65535] { R3840 += 1, R3684 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s5 -> s7 [0, 65535] { R3840 += 1 };
  s5 -> s9 [0, 65535] { R3840 += 1, R3684 += 1 };
  s5 -> s5 [0, 65535] { R3840 += 1, R3684 += 1, R2014 += 1 };
  s5 -> s10 [0, 65535];
  s6 -> s7 [0, 65535] { R3840 += 1 };
  s6 -> s8 [0, 65535] { R3840 += 1, R3684 += 1, R2014 += 1 };
  s6 -> s9 [0, 65535] { R3840 += 1, R3684 += 1 };
  s6 -> s10 [0, 65535];
  s6 -> s6 [0, 65535] { R3840 += 1, R3684 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s7 -> s7 [0, 65535] { R3840 += 1 };
  s7 -> s10 [0, 65535];
  s8 -> s7 [0, 65535] { R3840 += 1 };
  s8 -> s8 [0, 65535] { R3840 += 1, R3684 += 1, R2014 += 1 };
  s8 -> s9 [0, 65535] { R3840 += 1, R3684 += 1 };
  s8 -> s10 [0, 65535];
  s9 -> s7 [0, 65535] { R3840 += 1 };
  s9 -> s9 [0, 65535] { R3840 += 1, R3684 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R3842 += 1, R3686 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s0 -> s0 [0, 65535] { R3841 += 1, R3842 += 1 };
  s0 -> s2 [0, 65535] { R3842 += 1, R3686 += 1, R2027 += 1, R2028 += 1, R2029 += 1 };
  s0 -> s3 [0, 65535] { R3842 += 1, R3686 += 1, R2026 += 1, R2027 += 1 };
  s0 -> s4 [0, 65535] { R3842 += 1, R3685 += 1, R3686 += 1 };
  s0 -> s5 [70, 70] { R3842 += 1, R3686 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s0 -> s6 [70, 70] { R3842 += 1, R3686 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s0 -> s1 [71, 65535] { R3842 += 1, R3686 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s1 -> s1 [0, 69] { R3842 += 1, R3686 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s1 -> s7 [0, 65535] { R3842 += 1 };
  s1 -> s8 [0, 65535] { R3842 += 1, R3686 += 1 };
  s1 -> s1 [0, 65535] { R3842 += 1, R3686 += 1, R2027 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s5 [70, 70] { R3842 += 1, R3686 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s1 -> s6 [70, 70] { R3842 += 1, R3686 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s1 -> s1 [71, 65535] { R3842 += 1, R3686 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s2 -> s1 [0, 69] { R3842 += 1, R3686 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s2 -> s7 [0, 65535] { R3842 += 1 };
  s2 -> s8 [0, 65535] { R3842 += 1, R3686 += 1 };
  s2 -> s2 [0, 65535] { R3842 += 1, R3686 += 1, R2027 += 1, R2028 += 1, R2029 += 1 };
  s2 -> s9 [0, 65535];
  s2 -> s5 [70, 70] { R3842 += 1, R3686 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s2 -> s6 [70, 70] { R3842 += 1, R3686 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s2 -> s1 [71, 65535] { R3842 += 1, R3686 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s3 -> s1 [0, 69] { R3842 += 1, R3686 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s3 -> s7 [0, 65535] { R3842 += 1 };
  s3 -> s2 [0, 65535] { R3842 += 1, R3686 += 1, R2027 += 1, R2028 += 1, R2029 += 1 };
  s3 -> s3 [0, 65535] { R3842 += 1, R3686 += 1, R2026 += 1, R2027 += 1 };
  s3 -> s9 [0, 65535];
  s3 -> s5 [70, 70] { R3842 += 1, R3686 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s3 -> s6 [70, 70] { R3842 += 1, R3686 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s3 -> s1 [71, 65535] { R3842 += 1, R3686 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s4 -> s1 [0, 69] { R3842 += 1, R3686 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s4 -> s2 [0, 65535] { R3842 += 1, R3686 += 1, R2027 += 1, R2028 += 1, R2029 += 1 };
  s4 -> s3 [0, 65535] { R3842 += 1, R3686 += 1, R2026 += 1, R2027 += 1 };
  s4 -> s4 [0, 65535] { R3842 += 1, R3685 += 1, R3686 += 1 };
  s4 -> s9 [0, 65535];
  s4 -> s5 [70, 70] { R3842 += 1, R3686 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s4 -> s6 [70, 70] { R3842 += 1, R3686 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s4 -> s1 [71, 65535] { R3842 += 1, R3686 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s5 -> s7 [0, 65535] { R3842 += 1 };
  s5 -> s8 [0, 65535] { R3842 += 1, R3686 += 1 };
  s5 -> s10 [0, 65535] { R3842 += 1, R3686 += 1, R2027 += 1 };
  s5 -> s5 [0, 65535] { R3842 += 1, R3686 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s5 -> s9 [0, 65535];
  s6 -> s7 [0, 65535] { R3842 += 1 };
  s6 -> s8 [0, 65535] { R3842 += 1, R3686 += 1 };
  s6 -> s6 [0, 65535] { R3842 += 1, R3686 += 1, R2027 += 1 };
  s6 -> s9 [0, 65535];
  s7 -> s7 [0, 65535] { R3842 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s7 [0, 65535] { R3842 += 1 };
  s8 -> s8 [0, 65535] { R3842 += 1, R3686 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  s10 -> s7 [0, 65535] { R3842 += 1 };
  s10 -> s8 [0, 65535] { R3842 += 1, R3686 += 1 };
  s10 -> s10 [0, 65535] { R3842 += 1, R3686 += 1, R2027 += 1 };
  s10 -> s9 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s0 -> s2 [0, 69] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s0 -> s3 [0, 65535] { R3844 += 1, R3687 += 1, R3688 += 1 };
  s0 -> s4 [0, 65535] { R3844 += 1, R3688 += 1, R2039 += 1, R2040 += 1 };
  s0 -> s0 [0, 65535] { R3843 += 1, R3844 += 1 };
  s0 -> s5 [0, 65535] { R3844 += 1, R3688 += 1, R2040 += 1, R2041 += 1, R2042 += 1 };
  s0 -> s6 [70, 70] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s0 -> s7 [70, 70] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s0 -> s2 [71, 76] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s0 -> s1 [71, 65535] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s0 -> s8 [77, 77] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s0 -> s2 [78, 65535] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s1 -> s1 [0, 69] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s1 -> s2 [0, 69] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s1 -> s6 [70, 70] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s1 -> s7 [70, 70] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s1 -> s2 [71, 76] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s1 -> s1 [71, 65535] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s1 -> s8 [77, 77] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s1 -> s2 [78, 65535] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s2 -> s2 [0, 69] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s2 -> s6 [70, 70] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s2 -> s2 [71, 76] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s2 -> s8 [77, 77] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s2 -> s2 [78, 65535] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s3 -> s1 [0, 69] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s3 -> s2 [0, 69] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s3 -> s3 [0, 65535] { R3844 += 1, R3687 += 1, R3688 += 1 };
  s3 -> s4 [0, 65535] { R3844 += 1, R3688 += 1, R2039 += 1, R2040 += 1 };
  s3 -> s5 [0, 65535] { R3844 += 1, R3688 += 1, R2040 += 1, R2041 += 1, R2042 += 1 };
  s3 -> s6 [70, 70] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s3 -> s7 [70, 70] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s3 -> s2 [71, 76] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s3 -> s1 [71, 65535] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s3 -> s8 [77, 77] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s3 -> s2 [78, 65535] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s4 -> s1 [0, 69] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s4 -> s2 [0, 69] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s4 -> s4 [0, 65535] { R3844 += 1, R3688 += 1, R2039 += 1, R2040 += 1 };
  s4 -> s5 [0, 65535] { R3844 += 1, R3688 += 1, R2040 += 1, R2041 += 1, R2042 += 1 };
  s4 -> s6 [70, 70] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s4 -> s7 [70, 70] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s4 -> s2 [71, 76] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s4 -> s1 [71, 65535] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s4 -> s8 [77, 77] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s4 -> s2 [78, 65535] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s5 -> s1 [0, 69] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s5 -> s2 [0, 69] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s5 -> s5 [0, 65535] { R3844 += 1, R3688 += 1, R2040 += 1, R2041 += 1, R2042 += 1 };
  s5 -> s6 [70, 70] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s5 -> s7 [70, 70] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s5 -> s2 [71, 76] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s5 -> s1 [71, 65535] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s5 -> s8 [77, 77] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s5 -> s2 [78, 65535] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s6 -> s6 [0, 76] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s6 -> s12 [77, 77] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s6 -> s6 [78, 65535] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s7 -> s6 [0, 76] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s7 -> s7 [0, 65535] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s7 -> s12 [77, 77] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s7 -> s6 [78, 65535] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s8 -> s8 [0, 69] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s8 -> s9 [0, 65535] { R3844 += 1, R3688 += 1 };
  s8 -> s10 [0, 65535];
  s8 -> s11 [0, 65535] { R3844 += 1 };
  s8 -> s8 [0, 65535] { R3844 += 1, R3688 += 1, R2040 += 1 };
  s8 -> s12 [70, 70] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s8 -> s13 [70, 70] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s8 -> s8 [71, 65535] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s9 -> s9 [0, 65535] { R3844 += 1, R3688 += 1 };
  s9 -> s10 [0, 65535];
  s9 -> s11 [0, 65535] { R3844 += 1 };
  s10 -> s10 [0, 65535];
  s11 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R3844 += 1 };
  s12 -> s9 [0, 65535] { R3844 += 1, R3688 += 1 };
  s12 -> s10 [0, 65535];
  s12 -> s11 [0, 65535] { R3844 += 1 };
  s12 -> s12 [0, 65535] { R3844 += 1, R3688 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s12 -> s14 [0, 65535] { R3844 += 1, R3688 += 1, R2040 += 1 };
  s13 -> s9 [0, 65535] { R3844 += 1, R3688 += 1 };
  s13 -> s10 [0, 65535];
  s13 -> s11 [0, 65535] { R3844 += 1 };
  s13 -> s13 [0, 65535] { R3844 += 1, R3688 += 1, R2040 += 1 };
  s14 -> s9 [0, 65535] { R3844 += 1, R3688 += 1 };
  s14 -> s10 [0, 65535];
  s14 -> s11 [0, 65535] { R3844 += 1 };
  s14 -> s14 [0, 65535] { R3844 += 1, R3688 += 1, R2040 += 1 };
  accepting s12, s8, s13, s9, s14, s10, s11;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R3846 += 1, R3690 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s0 -> s2 [0, 65535] { R3846 += 1, R3690 += 1, R2052 += 1, R2053 += 1 };
  s0 -> s0 [0, 65535] { R3845 += 1, R3846 += 1 };
  s0 -> s3 [0, 65535] { R3846 += 1, R3690 += 1, R2053 += 1, R2054 += 1, R2055 += 1 };
  s0 -> s4 [0, 65535] { R3846 += 1, R3689 += 1, R3690 += 1 };
  s0 -> s5 [70, 70] { R3846 += 1, R3690 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s0 -> s6 [70, 70] { R3846 += 1, R3690 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s0 -> s1 [71, 65535] { R3846 += 1, R3690 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s1 -> s1 [0, 69] { R3846 += 1, R3690 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s1 -> s7 [0, 65535] { R3846 += 1 };
  s1 -> s8 [0, 65535] { R3846 += 1, R3690 += 1 };
  s1 -> s1 [0, 65535] { R3846 += 1, R3690 += 1, R2053 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s5 [70, 70] { R3846 += 1, R3690 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s1 -> s6 [70, 70] { R3846 += 1, R3690 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s1 -> s1 [71, 65535] { R3846 += 1, R3690 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s2 -> s1 [0, 69] { R3846 += 1, R3690 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s2 -> s2 [0, 65535] { R3846 += 1, R3690 += 1, R2052 += 1, R2053 += 1 };
  s2 -> s7 [0, 65535] { R3846 += 1 };
  s2 -> s3 [0, 65535] { R3846 += 1, R3690 += 1, R2053 += 1, R2054 += 1, R2055 += 1 };
  s2 -> s9 [0, 65535];
  s2 -> s5 [70, 70] { R3846 += 1, R3690 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s2 -> s6 [70, 70] { R3846 += 1, R3690 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s2 -> s1 [71, 65535] { R3846 += 1, R3690 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s3 -> s1 [0, 69] { R3846 += 1, R3690 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s3 -> s7 [0, 65535] { R3846 += 1 };
  s3 -> s8 [0, 65535] { R3846 += 1, R3690 += 1 };
  s3 -> s3 [0, 65535] { R3846 += 1, R3690 += 1, R2053 += 1, R2054 += 1, R2055 += 1 };
  s3 -> s9 [0, 65535];
  s3 -> s5 [70, 70] { R3846 += 1, R3690 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s3 -> s6 [70, 70] { R3846 += 1, R3690 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s3 -> s1 [71, 65535] { R3846 += 1, R3690 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s4 -> s1 [0, 69] { R3846 += 1, R3690 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s4 -> s2 [0, 65535] { R3846 += 1, R3690 += 1, R2052 += 1, R2053 += 1 };
  s4 -> s3 [0, 65535] { R3846 += 1, R3690 += 1, R2053 += 1, R2054 += 1, R2055 += 1 };
  s4 -> s4 [0, 65535] { R3846 += 1, R3689 += 1, R3690 += 1 };
  s4 -> s9 [0, 65535];
  s4 -> s5 [70, 70] { R3846 += 1, R3690 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s4 -> s6 [70, 70] { R3846 += 1, R3690 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s4 -> s1 [71, 65535] { R3846 += 1, R3690 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s5 -> s7 [0, 65535] { R3846 += 1 };
  s5 -> s10 [0, 65535] { R3846 += 1, R3690 += 1, R2053 += 1 };
  s5 -> s8 [0, 65535] { R3846 += 1, R3690 += 1 };
  s5 -> s5 [0, 65535] { R3846 += 1, R3690 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s5 -> s9 [0, 65535];
  s6 -> s7 [0, 65535] { R3846 += 1 };
  s6 -> s8 [0, 65535] { R3846 += 1, R3690 += 1 };
  s6 -> s6 [0, 65535] { R3846 += 1, R3690 += 1, R2053 += 1 };
  s6 -> s9 [0, 65535];
  s7 -> s7 [0, 65535] { R3846 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s7 [0, 65535] { R3846 += 1 };
  s8 -> s8 [0, 65535] { R3846 += 1, R3690 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  s10 -> s7 [0, 65535] { R3846 += 1 };
  s10 -> s10 [0, 65535] { R3846 += 1, R3690 += 1, R2053 += 1 };
  s10 -> s8 [0, 65535] { R3846 += 1, R3690 += 1 };
  s10 -> s9 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 65535] { R3848 += 1, R3691 += 1, R3692 += 1 };
  s0 -> s0 [0, 65535] { R3847 += 1, R3848 += 1 };
  s0 -> s2 [0, 65535] { R3848 += 1, R3692 += 1, R3616 += 1 };
  s0 -> s3 [0, 65535] { R3848 += 1, R3692 += 1 };
  s1 -> s1 [0, 65535] { R3848 += 1, R3691 += 1, R3692 += 1 };
  s1 -> s2 [0, 65535] { R3848 += 1, R3692 += 1, R3616 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s3 [0, 65535] { R3848 += 1, R3692 += 1 };
  s2 -> s2 [0, 65535] { R3848 += 1, R3692 += 1, R3616 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R3848 += 1 };
  s2 -> s3 [0, 65535] { R3848 += 1, R3692 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R3848 += 1 };
  s3 -> s3 [0, 65535] { R3848 += 1, R3692 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3848 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 65535] { R3850 += 1, R3694 += 1, R28 += 1 };
  s0 -> s2 [0, 65535] { R3850 += 1, R3693 += 1, R3694 += 1 };
  s0 -> s0 [0, 65535] { R3849 += 1, R3850 += 1 };
  s1 -> s1 [0, 65535] { R3850 += 1, R3694 += 1, R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R3850 += 1 };
  s2 -> s1 [0, 65535] { R3850 += 1, R3694 += 1, R28 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R3850 += 1, R3693 += 1, R3694 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3850 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 66] { R3852 += 1, R3696 += 1 };
  s0 -> s2 [0, 65535] { R3852 += 1, R3695 += 1, R3696 += 1 };
  s0 -> s0 [0, 65535] { R3851 += 1, R3852 += 1 };
  s0 -> s3 [67, 67] { R3852 += 1, R3696 += 1 };
  s0 -> s4 [67, 67] { R3852 += 1, R3696 += 1 };
  s0 -> s5 [70, 70] { R3852 += 1, R3696 += 1 };
  s0 -> s1 [71, 65535] { R3852 += 1, R3696 += 1 };
  s1 -> s1 [0, 66] { R3852 += 1, R3696 += 1 };
  s1 -> s3 [67, 67] { R3852 += 1, R3696 += 1 };
  s1 -> s4 [67, 67] { R3852 += 1, R3696 += 1 };
  s1 -> s5 [70, 70] { R3852 += 1, R3696 += 1 };
  s1 -> s1 [71, 65535] { R3852 += 1, R3696 += 1 };
  s2 -> s1 [0, 66] { R3852 += 1, R3696 += 1 };
  s2 -> s2 [0, 65535] { R3852 += 1, R3695 += 1, R3696 += 1 };
  s2 -> s3 [67, 67] { R3852 += 1, R3696 += 1 };
  s2 -> s4 [67, 67] { R3852 += 1, R3696 += 1 };
  s2 -> s5 [70, 70] { R3852 += 1, R3696 += 1 };
  s2 -> s1 [71, 65535] { R3852 += 1, R3696 += 1 };
  s3 -> s3 [0, 67] { R3852 += 1, R3696 += 1 };
  s3 -> s8 [70, 70] { R3852 += 1, R3696 += 1 };
  s3 -> s3 [71, 65535] { R3852 += 1, R3696 += 1 };
  s5 -> s5 [0, 66] { R3852 += 1, R3696 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3852 += 1 };
  s5 -> s7 [67, 67] { R3852 += 1, R3696 += 1 };
  s5 -> s8 [67, 67] { R3852 += 1, R3696 += 1 };
  s5 -> s5 [70, 65535] { R3852 += 1, R3696 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3852 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 67] { R3852 += 1, R3696 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R3852 += 1 };
  s8 -> s8 [70, 65535] { R3852 += 1, R3696 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 66] { R3854 += 1, R3698 += 1, R1773 += 1 };
  s0 -> s0 [0, 65535] { R3853 += 1, R3854 += 1 };
  s0 -> s2 [0, 65535] { R3854 += 1, R3697 += 1, R3698 += 1 };
  s0 -> s3 [67, 67] { R3854 += 1, R3698 += 1, R1773 += 1 };
  s0 -> s4 [67, 67] { R3854 += 1, R3698 += 1, R1773 += 1 };
  s0 -> s1 [68, 65535] { R3854 += 1, R3698 += 1, R1773 += 1 };
  s1 -> s1 [0, 66] { R3854 += 1, R3698 += 1, R1773 += 1 };
  s1 -> s1 [0, 65535] { R3854 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3854 += 1, R3698 += 1, R1773 += 1 };
  s1 -> s4 [67, 67] { R3854 += 1, R3698 += 1, R1773 += 1 };
  s1 -> s1 [68, 65535] { R3854 += 1, R3698 += 1, R1773 += 1 };
  s2 -> s1 [0, 66] { R3854 += 1, R3698 += 1, R1773 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3854 += 1, R3697 += 1, R3698 += 1 };
  s2 -> s3 [67, 67] { R3854 += 1, R3698 += 1, R1773 += 1 };
  s2 -> s4 [67, 67] { R3854 += 1, R3698 += 1, R1773 += 1 };
  s2 -> s1 [68, 65535] { R3854 += 1, R3698 += 1, R1773 += 1 };
  s3 -> s3 [0, 65535] { R3854 += 1, R3698 += 1, R1773 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3854 += 1 };
  s4 -> s4 [0, 65535] { R3854 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3854 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 66] { R3856 += 1, R3700 += 1, R1775 += 1 };
  s0 -> s0 [0, 65535] { R3855 += 1, R3856 += 1 };
  s0 -> s2 [0, 65535] { R3856 += 1, R3699 += 1, R3700 += 1 };
  s0 -> s3 [67, 67] { R3856 += 1, R3700 += 1, R1775 += 1 };
  s0 -> s4 [67, 67] { R3856 += 1, R3700 += 1, R1775 += 1 };
  s0 -> s1 [68, 65535] { R3856 += 1, R3700 += 1, R1775 += 1 };
  s1 -> s1 [0, 66] { R3856 += 1, R3700 += 1, R1775 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3856 += 1 };
  s1 -> s3 [67, 67] { R3856 += 1, R3700 += 1, R1775 += 1 };
  s1 -> s4 [67, 67] { R3856 += 1, R3700 += 1, R1775 += 1 };
  s1 -> s1 [68, 65535] { R3856 += 1, R3700 += 1, R1775 += 1 };
  s2 -> s1 [0, 66] { R3856 += 1, R3700 += 1, R1775 += 1 };
  s2 -> s2 [0, 65535] { R3856 += 1, R3699 += 1, R3700 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3856 += 1, R3700 += 1, R1775 += 1 };
  s2 -> s4 [67, 67] { R3856 += 1, R3700 += 1, R1775 += 1 };
  s2 -> s1 [68, 65535] { R3856 += 1, R3700 += 1, R1775 += 1 };
  s3 -> s3 [0, 65535] { R3856 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3856 += 1 };
  s4 -> s4 [0, 65535] { R3856 += 1, R3700 += 1, R1775 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3856 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_54 {
  init s0;
  s0 -> s1 [0, 66] { R3858 += 1, R3702 += 1, R1777 += 1, R1778 += 1 };
  s0 -> s2 [0, 65535] { R3858 += 1, R3701 += 1, R3702 += 1 };
  s0 -> s0 [0, 65535] { R3857 += 1, R3858 += 1 };
  s0 -> s3 [67, 67] { R3858 += 1, R3702 += 1, R1777 += 1, R1778 += 1 };
  s0 -> s4 [67, 67] { R3858 += 1, R3702 += 1, R1777 += 1, R1778 += 1 };
  s0 -> s1 [68, 65535] { R3858 += 1, R3702 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s1 [0, 66] { R3858 += 1, R3702 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s1 [0, 65535] { R3858 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R3858 += 1, R3702 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s4 [67, 67] { R3858 += 1, R3702 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s1 [68, 65535] { R3858 += 1, R3702 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s1 [0, 66] { R3858 += 1, R3702 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s2 [0, 65535] { R3858 += 1, R3701 += 1, R3702 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R3858 += 1, R3702 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s4 [67, 67] { R3858 += 1, R3702 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s1 [68, 65535] { R3858 += 1, R3702 += 1, R1777 += 1, R1778 += 1 };
  s3 -> s3 [0, 65535] { R3858 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3858 += 1, R3702 += 1, R1777 += 1, R1778 += 1 };
  s4 -> s5 [0, 65535] { R3858 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3858 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_55 {
  init s0;
  s0 -> s1 [0, 66] { R3860 += 1, R3704 += 1, R1783 += 1, R1784 += 1 };
  s0 -> s0 [0, 65535] { R3859 += 1, R3860 += 1 };
  s0 -> s2 [0, 65535] { R3860 += 1, R3703 += 1, R3704 += 1 };
  s0 -> s3 [67, 67] { R3860 += 1, R3704 += 1, R1783 += 1, R1784 += 1 };
  s0 -> s4 [67, 67] { R3860 += 1, R3704 += 1, R1783 += 1, R1784 += 1 };
  s0 -> s1 [68, 65535] { R3860 += 1, R3704 += 1, R1783 += 1, R1784 += 1 };
  s1 -> s1 [0, 66] { R3860 += 1, R3704 += 1, R1783 += 1, R1784 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R3860 += 1 };
  s1 -> s3 [67, 67] { R3860 += 1, R3704 += 1, R1783 += 1, R1784 += 1 };
  s1 -> s4 [67, 67] { R3860 += 1, R3704 += 1, R1783 += 1, R1784 += 1 };
  s1 -> s1 [68, 65535] { R3860 += 1, R3704 += 1, R1783 += 1, R1784 += 1 };
  s2 -> s1 [0, 66] { R3860 += 1, R3704 += 1, R1783 += 1, R1784 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R3860 += 1, R3703 += 1, R3704 += 1 };
  s2 -> s3 [67, 67] { R3860 += 1, R3704 += 1, R1783 += 1, R1784 += 1 };
  s2 -> s4 [67, 67] { R3860 += 1, R3704 += 1, R1783 += 1, R1784 += 1 };
  s2 -> s1 [68, 65535] { R3860 += 1, R3704 += 1, R1783 += 1, R1784 += 1 };
  s3 -> s3 [0, 65535] { R3860 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3860 += 1 };
  s4 -> s4 [0, 65535] { R3860 += 1, R3704 += 1, R1783 += 1, R1784 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3860 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_56 {
  init s0;
  s0 -> s1 [0, 66] { R3862 += 1, R3706 += 1, R1787 += 1, R1788 += 1 };
  s0 -> s0 [0, 65535] { R3861 += 1, R3862 += 1 };
  s0 -> s2 [0, 65535] { R3862 += 1, R3705 += 1, R3706 += 1 };
  s0 -> s3 [67, 67] { R3862 += 1, R3706 += 1, R1787 += 1, R1788 += 1 };
  s0 -> s4 [67, 67] { R3862 += 1, R3706 += 1, R1787 += 1, R1788 += 1 };
  s0 -> s1 [68, 65535] { R3862 += 1, R3706 += 1, R1787 += 1, R1788 += 1 };
  s1 -> s1 [0, 66] { R3862 += 1, R3706 += 1, R1787 += 1, R1788 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3862 += 1 };
  s1 -> s3 [67, 67] { R3862 += 1, R3706 += 1, R1787 += 1, R1788 += 1 };
  s1 -> s4 [67, 67] { R3862 += 1, R3706 += 1, R1787 += 1, R1788 += 1 };
  s1 -> s1 [68, 65535] { R3862 += 1, R3706 += 1, R1787 += 1, R1788 += 1 };
  s2 -> s1 [0, 66] { R3862 += 1, R3706 += 1, R1787 += 1, R1788 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3862 += 1, R3705 += 1, R3706 += 1 };
  s2 -> s3 [67, 67] { R3862 += 1, R3706 += 1, R1787 += 1, R1788 += 1 };
  s2 -> s4 [67, 67] { R3862 += 1, R3706 += 1, R1787 += 1, R1788 += 1 };
  s2 -> s1 [68, 65535] { R3862 += 1, R3706 += 1, R1787 += 1, R1788 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3862 += 1, R3706 += 1, R1787 += 1, R1788 += 1 };
  s3 -> s6 [0, 65535] { R3862 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3862 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3862 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_57 {
  init s0;
  s0 -> s1 [0, 66] { R3864 += 1, R3708 += 1, R1793 += 1, R1794 += 1 };
  s0 -> s2 [0, 65535] { R3864 += 1, R3707 += 1, R3708 += 1 };
  s0 -> s0 [0, 65535] { R3863 += 1, R3864 += 1 };
  s0 -> s3 [67, 67] { R3864 += 1, R3708 += 1, R1793 += 1, R1794 += 1 };
  s0 -> s4 [67, 67] { R3864 += 1, R3708 += 1, R1793 += 1, R1794 += 1 };
  s0 -> s1 [68, 65535] { R3864 += 1, R3708 += 1, R1793 += 1, R1794 += 1 };
  s1 -> s1 [0, 66] { R3864 += 1, R3708 += 1, R1793 += 1, R1794 += 1 };
  s1 -> s1 [0, 65535] { R3864 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3864 += 1, R3708 += 1, R1793 += 1, R1794 += 1 };
  s1 -> s4 [67, 67] { R3864 += 1, R3708 += 1, R1793 += 1, R1794 += 1 };
  s1 -> s1 [68, 65535] { R3864 += 1, R3708 += 1, R1793 += 1, R1794 += 1 };
  s2 -> s1 [0, 66] { R3864 += 1, R3708 += 1, R1793 += 1, R1794 += 1 };
  s2 -> s2 [0, 65535] { R3864 += 1, R3707 += 1, R3708 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3864 += 1, R3708 += 1, R1793 += 1, R1794 += 1 };
  s2 -> s4 [67, 67] { R3864 += 1, R3708 += 1, R1793 += 1, R1794 += 1 };
  s2 -> s1 [68, 65535] { R3864 += 1, R3708 += 1, R1793 += 1, R1794 += 1 };
  s3 -> s6 [0, 65535] { R3864 += 1 };
  s3 -> s3 [0, 65535] { R3864 += 1, R3708 += 1, R1793 += 1, R1794 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3864 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3864 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_58 {
  init s0;
  s0 -> s1 [0, 66] { R3866 += 1, R3710 += 1, R1799 += 1, R1800 += 1 };
  s0 -> s2 [0, 65535] { R3866 += 1, R3709 += 1, R3710 += 1 };
  s0 -> s0 [0, 65535] { R3865 += 1, R3866 += 1 };
  s0 -> s3 [67, 67] { R3866 += 1, R3710 += 1, R1799 += 1, R1800 += 1 };
  s0 -> s4 [67, 67] { R3866 += 1, R3710 += 1, R1799 += 1, R1800 += 1 };
  s0 -> s1 [68, 65535] { R3866 += 1, R3710 += 1, R1799 += 1, R1800 += 1 };
  s1 -> s1 [0, 66] { R3866 += 1, R3710 += 1, R1799 += 1, R1800 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3866 += 1 };
  s1 -> s3 [67, 67] { R3866 += 1, R3710 += 1, R1799 += 1, R1800 += 1 };
  s1 -> s4 [67, 67] { R3866 += 1, R3710 += 1, R1799 += 1, R1800 += 1 };
  s1 -> s1 [68, 65535] { R3866 += 1, R3710 += 1, R1799 += 1, R1800 += 1 };
  s2 -> s1 [0, 66] { R3866 += 1, R3710 += 1, R1799 += 1, R1800 += 1 };
  s2 -> s2 [0, 65535] { R3866 += 1, R3709 += 1, R3710 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3866 += 1, R3710 += 1, R1799 += 1, R1800 += 1 };
  s2 -> s4 [67, 67] { R3866 += 1, R3710 += 1, R1799 += 1, R1800 += 1 };
  s2 -> s1 [68, 65535] { R3866 += 1, R3710 += 1, R1799 += 1, R1800 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3866 += 1, R3710 += 1, R1799 += 1, R1800 += 1 };
  s3 -> s6 [0, 65535] { R3866 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3866 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3866 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_59 {
  init s0;
  s0 -> s1 [0, 66] { R3868 += 1, R3712 += 1, R1807 += 1, R1808 += 1 };
  s0 -> s2 [0, 65535] { R3868 += 1, R3711 += 1, R3712 += 1 };
  s0 -> s0 [0, 65535] { R3867 += 1, R3868 += 1 };
  s0 -> s3 [67, 67] { R3868 += 1, R3712 += 1, R1807 += 1, R1808 += 1 };
  s0 -> s4 [67, 67] { R3868 += 1, R3712 += 1, R1807 += 1, R1808 += 1 };
  s0 -> s1 [68, 65535] { R3868 += 1, R3712 += 1, R1807 += 1, R1808 += 1 };
  s1 -> s1 [0, 66] { R3868 += 1, R3712 += 1, R1807 += 1, R1808 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3868 += 1 };
  s1 -> s3 [67, 67] { R3868 += 1, R3712 += 1, R1807 += 1, R1808 += 1 };
  s1 -> s4 [67, 67] { R3868 += 1, R3712 += 1, R1807 += 1, R1808 += 1 };
  s1 -> s1 [68, 65535] { R3868 += 1, R3712 += 1, R1807 += 1, R1808 += 1 };
  s2 -> s1 [0, 66] { R3868 += 1, R3712 += 1, R1807 += 1, R1808 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3868 += 1, R3711 += 1, R3712 += 1 };
  s2 -> s3 [67, 67] { R3868 += 1, R3712 += 1, R1807 += 1, R1808 += 1 };
  s2 -> s4 [67, 67] { R3868 += 1, R3712 += 1, R1807 += 1, R1808 += 1 };
  s2 -> s1 [68, 65535] { R3868 += 1, R3712 += 1, R1807 += 1, R1808 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3868 += 1, R3712 += 1, R1807 += 1, R1808 += 1 };
  s3 -> s6 [0, 65535] { R3868 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3868 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3868 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_60 {
  init s0;
  s0 -> s1 [0, 66] { R3870 += 1, R3714 += 1, R1817 += 1, R1818 += 1 };
  s0 -> s2 [0, 65535] { R3870 += 1, R3713 += 1, R3714 += 1 };
  s0 -> s0 [0, 65535] { R3869 += 1, R3870 += 1 };
  s0 -> s3 [67, 67] { R3870 += 1, R3714 += 1, R1817 += 1, R1818 += 1 };
  s0 -> s4 [67, 67] { R3870 += 1, R3714 += 1, R1817 += 1, R1818 += 1 };
  s0 -> s1 [68, 65535] { R3870 += 1, R3714 += 1, R1817 += 1, R1818 += 1 };
  s1 -> s1 [0, 66] { R3870 += 1, R3714 += 1, R1817 += 1, R1818 += 1 };
  s1 -> s1 [0, 65535] { R3870 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3870 += 1, R3714 += 1, R1817 += 1, R1818 += 1 };
  s1 -> s4 [67, 67] { R3870 += 1, R3714 += 1, R1817 += 1, R1818 += 1 };
  s1 -> s1 [68, 65535] { R3870 += 1, R3714 += 1, R1817 += 1, R1818 += 1 };
  s2 -> s1 [0, 66] { R3870 += 1, R3714 += 1, R1817 += 1, R1818 += 1 };
  s2 -> s2 [0, 65535] { R3870 += 1, R3713 += 1, R3714 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3870 += 1, R3714 += 1, R1817 += 1, R1818 += 1 };
  s2 -> s4 [67, 67] { R3870 += 1, R3714 += 1, R1817 += 1, R1818 += 1 };
  s2 -> s1 [68, 65535] { R3870 += 1, R3714 += 1, R1817 += 1, R1818 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3870 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3870 += 1, R3714 += 1, R1817 += 1, R1818 += 1 };
  s4 -> s6 [0, 65535] { R3870 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3870 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_61 {
  init s0;
  s0 -> s1 [0, 66] { R3872 += 1, R3716 += 1, R1825 += 1, R1826 += 1 };
  s0 -> s2 [0, 65535] { R3872 += 1, R3715 += 1, R3716 += 1 };
  s0 -> s0 [0, 65535] { R3871 += 1, R3872 += 1 };
  s0 -> s3 [67, 67] { R3872 += 1, R3716 += 1, R1825 += 1, R1826 += 1 };
  s0 -> s4 [67, 67] { R3872 += 1, R3716 += 1, R1825 += 1, R1826 += 1 };
  s0 -> s1 [68, 65535] { R3872 += 1, R3716 += 1, R1825 += 1, R1826 += 1 };
  s1 -> s1 [0, 66] { R3872 += 1, R3716 += 1, R1825 += 1, R1826 += 1 };
  s1 -> s1 [0, 65535] { R3872 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R3872 += 1, R3716 += 1, R1825 += 1, R1826 += 1 };
  s1 -> s4 [67, 67] { R3872 += 1, R3716 += 1, R1825 += 1, R1826 += 1 };
  s1 -> s1 [68, 65535] { R3872 += 1, R3716 += 1, R1825 += 1, R1826 += 1 };
  s2 -> s1 [0, 66] { R3872 += 1, R3716 += 1, R1825 += 1, R1826 += 1 };
  s2 -> s2 [0, 65535] { R3872 += 1, R3715 += 1, R3716 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R3872 += 1, R3716 += 1, R1825 += 1, R1826 += 1 };
  s2 -> s4 [67, 67] { R3872 += 1, R3716 += 1, R1825 += 1, R1826 += 1 };
  s2 -> s1 [68, 65535] { R3872 += 1, R3716 += 1, R1825 += 1, R1826 += 1 };
  s3 -> s3 [0, 65535] { R3872 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3872 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3872 += 1, R3716 += 1, R1825 += 1, R1826 += 1 };
  s5 -> s5 [0, 65535] { R3872 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_62 {
  init s0;
  s0 -> s1 [0, 66] { R3874 += 1, R3718 += 1, R1835 += 1, R1836 += 1 };
  s0 -> s2 [0, 65535] { R3874 += 1, R3717 += 1, R3718 += 1 };
  s0 -> s0 [0, 65535] { R3873 += 1, R3874 += 1 };
  s0 -> s3 [67, 67] { R3874 += 1, R3718 += 1, R1835 += 1, R1836 += 1 };
  s0 -> s4 [67, 67] { R3874 += 1, R3718 += 1, R1835 += 1, R1836 += 1 };
  s0 -> s1 [68, 65535] { R3874 += 1, R3718 += 1, R1835 += 1, R1836 += 1 };
  s1 -> s1 [0, 66] { R3874 += 1, R3718 += 1, R1835 += 1, R1836 += 1 };
  s1 -> s1 [0, 65535] { R3874 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3874 += 1, R3718 += 1, R1835 += 1, R1836 += 1 };
  s1 -> s4 [67, 67] { R3874 += 1, R3718 += 1, R1835 += 1, R1836 += 1 };
  s1 -> s1 [68, 65535] { R3874 += 1, R3718 += 1, R1835 += 1, R1836 += 1 };
  s2 -> s1 [0, 66] { R3874 += 1, R3718 += 1, R1835 += 1, R1836 += 1 };
  s2 -> s2 [0, 65535] { R3874 += 1, R3717 += 1, R3718 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3874 += 1, R3718 += 1, R1835 += 1, R1836 += 1 };
  s2 -> s4 [67, 67] { R3874 += 1, R3718 += 1, R1835 += 1, R1836 += 1 };
  s2 -> s1 [68, 65535] { R3874 += 1, R3718 += 1, R1835 += 1, R1836 += 1 };
  s3 -> s3 [0, 65535] { R3874 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3874 += 1 };
  s4 -> s4 [0, 65535] { R3874 += 1, R3718 += 1, R1835 += 1, R1836 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3874 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_63 {
  init s0;
  s0 -> s1 [0, 66] { R3876 += 1, R3720 += 1, R1843 += 1, R1844 += 1 };
  s0 -> s0 [0, 65535] { R3875 += 1, R3876 += 1 };
  s0 -> s2 [0, 65535] { R3876 += 1, R3719 += 1, R3720 += 1 };
  s0 -> s3 [67, 67] { R3876 += 1, R3720 += 1, R1843 += 1, R1844 += 1 };
  s0 -> s4 [67, 67] { R3876 += 1, R3720 += 1, R1843 += 1, R1844 += 1 };
  s0 -> s1 [68, 65535] { R3876 += 1, R3720 += 1, R1843 += 1, R1844 += 1 };
  s1 -> s1 [0, 66] { R3876 += 1, R3720 += 1, R1843 += 1, R1844 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3876 += 1 };
  s1 -> s3 [67, 67] { R3876 += 1, R3720 += 1, R1843 += 1, R1844 += 1 };
  s1 -> s4 [67, 67] { R3876 += 1, R3720 += 1, R1843 += 1, R1844 += 1 };
  s1 -> s1 [68, 65535] { R3876 += 1, R3720 += 1, R1843 += 1, R1844 += 1 };
  s2 -> s1 [0, 66] { R3876 += 1, R3720 += 1, R1843 += 1, R1844 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3876 += 1, R3719 += 1, R3720 += 1 };
  s2 -> s3 [67, 67] { R3876 += 1, R3720 += 1, R1843 += 1, R1844 += 1 };
  s2 -> s4 [67, 67] { R3876 += 1, R3720 += 1, R1843 += 1, R1844 += 1 };
  s2 -> s1 [68, 65535] { R3876 += 1, R3720 += 1, R1843 += 1, R1844 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3876 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3876 += 1 };
  s4 -> s4 [0, 65535] { R3876 += 1, R3720 += 1, R1843 += 1, R1844 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3876 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_64 {
  init s0;
  s0 -> s1 [0, 66] { R3878 += 1, R3722 += 1, R1847 += 1, R1848 += 1 };
  s0 -> s0 [0, 65535] { R3877 += 1, R3878 += 1 };
  s0 -> s2 [0, 65535] { R3878 += 1, R3721 += 1, R3722 += 1 };
  s0 -> s3 [67, 67] { R3878 += 1, R3722 += 1, R1847 += 1, R1848 += 1 };
  s0 -> s4 [67, 67] { R3878 += 1, R3722 += 1, R1847 += 1, R1848 += 1 };
  s0 -> s1 [68, 65535] { R3878 += 1, R3722 += 1, R1847 += 1, R1848 += 1 };
  s1 -> s1 [0, 66] { R3878 += 1, R3722 += 1, R1847 += 1, R1848 += 1 };
  s1 -> s1 [0, 65535] { R3878 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3878 += 1, R3722 += 1, R1847 += 1, R1848 += 1 };
  s1 -> s4 [67, 67] { R3878 += 1, R3722 += 1, R1847 += 1, R1848 += 1 };
  s1 -> s1 [68, 65535] { R3878 += 1, R3722 += 1, R1847 += 1, R1848 += 1 };
  s2 -> s1 [0, 66] { R3878 += 1, R3722 += 1, R1847 += 1, R1848 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3878 += 1, R3721 += 1, R3722 += 1 };
  s2 -> s3 [67, 67] { R3878 += 1, R3722 += 1, R1847 += 1, R1848 += 1 };
  s2 -> s4 [67, 67] { R3878 += 1, R3722 += 1, R1847 += 1, R1848 += 1 };
  s2 -> s1 [68, 65535] { R3878 += 1, R3722 += 1, R1847 += 1, R1848 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3878 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3878 += 1, R3722 += 1, R1847 += 1, R1848 += 1 };
  s4 -> s6 [0, 65535] { R3878 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3878 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_65 {
  init s0;
  s0 -> s1 [0, 66] { R3880 += 1, R3724 += 1, R1853 += 1, R1854 += 1 };
  s0 -> s0 [0, 65535] { R3879 += 1, R3880 += 1 };
  s0 -> s2 [0, 65535] { R3880 += 1, R3723 += 1, R3724 += 1 };
  s0 -> s3 [67, 67] { R3880 += 1, R3724 += 1, R1853 += 1, R1854 += 1 };
  s0 -> s4 [67, 67] { R3880 += 1, R3724 += 1, R1853 += 1, R1854 += 1 };
  s0 -> s1 [68, 65535] { R3880 += 1, R3724 += 1, R1853 += 1, R1854 += 1 };
  s1 -> s1 [0, 66] { R3880 += 1, R3724 += 1, R1853 += 1, R1854 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R3880 += 1 };
  s1 -> s3 [67, 67] { R3880 += 1, R3724 += 1, R1853 += 1, R1854 += 1 };
  s1 -> s4 [67, 67] { R3880 += 1, R3724 += 1, R1853 += 1, R1854 += 1 };
  s1 -> s1 [68, 65535] { R3880 += 1, R3724 += 1, R1853 += 1, R1854 += 1 };
  s2 -> s1 [0, 66] { R3880 += 1, R3724 += 1, R1853 += 1, R1854 += 1 };
  s2 -> s2 [0, 65535] { R3880 += 1, R3723 += 1, R3724 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R3880 += 1, R3724 += 1, R1853 += 1, R1854 += 1 };
  s2 -> s4 [67, 67] { R3880 += 1, R3724 += 1, R1853 += 1, R1854 += 1 };
  s2 -> s1 [68, 65535] { R3880 += 1, R3724 += 1, R1853 += 1, R1854 += 1 };
  s3 -> s3 [0, 65535] { R3880 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3880 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3880 += 1, R3724 += 1, R1853 += 1, R1854 += 1 };
  s5 -> s5 [0, 65535] { R3880 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_66 {
  init s0;
  s0 -> s1 [0, 66] { R3882 += 1, R3726 += 1, R1859 += 1, R1860 += 1 };
  s0 -> s2 [0, 65535] { R3882 += 1, R3725 += 1, R3726 += 1 };
  s0 -> s0 [0, 65535] { R3881 += 1, R3882 += 1 };
  s0 -> s3 [67, 67] { R3882 += 1, R3726 += 1, R1859 += 1, R1860 += 1 };
  s0 -> s4 [67, 67] { R3882 += 1, R3726 += 1, R1859 += 1, R1860 += 1 };
  s0 -> s1 [68, 65535] { R3882 += 1, R3726 += 1, R1859 += 1, R1860 += 1 };
  s1 -> s1 [0, 66] { R3882 += 1, R3726 += 1, R1859 += 1, R1860 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3882 += 1 };
  s1 -> s3 [67, 67] { R3882 += 1, R3726 += 1, R1859 += 1, R1860 += 1 };
  s1 -> s4 [67, 67] { R3882 += 1, R3726 += 1, R1859 += 1, R1860 += 1 };
  s1 -> s1 [68, 65535] { R3882 += 1, R3726 += 1, R1859 += 1, R1860 += 1 };
  s2 -> s1 [0, 66] { R3882 += 1, R3726 += 1, R1859 += 1, R1860 += 1 };
  s2 -> s2 [0, 65535] { R3882 += 1, R3725 += 1, R3726 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3882 += 1, R3726 += 1, R1859 += 1, R1860 += 1 };
  s2 -> s4 [67, 67] { R3882 += 1, R3726 += 1, R1859 += 1, R1860 += 1 };
  s2 -> s1 [68, 65535] { R3882 += 1, R3726 += 1, R1859 += 1, R1860 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3882 += 1, R3726 += 1, R1859 += 1, R1860 += 1 };
  s3 -> s6 [0, 65535] { R3882 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3882 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3882 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_67 {
  init s0;
  s0 -> s1 [0, 66] { R3884 += 1, R3728 += 1, R1867 += 1, R1868 += 1 };
  s0 -> s0 [0, 65535] { R3883 += 1, R3884 += 1 };
  s0 -> s2 [0, 65535] { R3884 += 1, R3727 += 1, R3728 += 1 };
  s0 -> s3 [67, 67] { R3884 += 1, R3728 += 1, R1867 += 1, R1868 += 1 };
  s0 -> s4 [67, 67] { R3884 += 1, R3728 += 1, R1867 += 1, R1868 += 1 };
  s0 -> s1 [68, 65535] { R3884 += 1, R3728 += 1, R1867 += 1, R1868 += 1 };
  s1 -> s1 [0, 66] { R3884 += 1, R3728 += 1, R1867 += 1, R1868 += 1 };
  s1 -> s1 [0, 65535] { R3884 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R3884 += 1, R3728 += 1, R1867 += 1, R1868 += 1 };
  s1 -> s4 [67, 67] { R3884 += 1, R3728 += 1, R1867 += 1, R1868 += 1 };
  s1 -> s1 [68, 65535] { R3884 += 1, R3728 += 1, R1867 += 1, R1868 += 1 };
  s2 -> s1 [0, 66] { R3884 += 1, R3728 += 1, R1867 += 1, R1868 += 1 };
  s2 -> s2 [0, 65535] { R3884 += 1, R3727 += 1, R3728 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R3884 += 1, R3728 += 1, R1867 += 1, R1868 += 1 };
  s2 -> s4 [67, 67] { R3884 += 1, R3728 += 1, R1867 += 1, R1868 += 1 };
  s2 -> s1 [68, 65535] { R3884 += 1, R3728 += 1, R1867 += 1, R1868 += 1 };
  s3 -> s3 [0, 65535] { R3884 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3884 += 1, R3728 += 1, R1867 += 1, R1868 += 1 };
  s4 -> s5 [0, 65535] { R3884 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3884 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_68 {
  init s0;
  s0 -> s1 [0, 66] { R3886 += 1, R3730 += 1, R1877 += 1, R1878 += 1 };
  s0 -> s0 [0, 65535] { R3885 += 1, R3886 += 1 };
  s0 -> s2 [0, 65535] { R3886 += 1, R3729 += 1, R3730 += 1 };
  s0 -> s3 [67, 67] { R3886 += 1, R3730 += 1, R1877 += 1, R1878 += 1 };
  s0 -> s4 [67, 67] { R3886 += 1, R3730 += 1, R1877 += 1, R1878 += 1 };
  s0 -> s1 [68, 65535] { R3886 += 1, R3730 += 1, R1877 += 1, R1878 += 1 };
  s1 -> s1 [0, 66] { R3886 += 1, R3730 += 1, R1877 += 1, R1878 += 1 };
  s1 -> s1 [0, 65535] { R3886 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R3886 += 1, R3730 += 1, R1877 += 1, R1878 += 1 };
  s1 -> s4 [67, 67] { R3886 += 1, R3730 += 1, R1877 += 1, R1878 += 1 };
  s1 -> s1 [68, 65535] { R3886 += 1, R3730 += 1, R1877 += 1, R1878 += 1 };
  s2 -> s1 [0, 66] { R3886 += 1, R3730 += 1, R1877 += 1, R1878 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R3886 += 1, R3729 += 1, R3730 += 1 };
  s2 -> s3 [67, 67] { R3886 += 1, R3730 += 1, R1877 += 1, R1878 += 1 };
  s2 -> s4 [67, 67] { R3886 += 1, R3730 += 1, R1877 += 1, R1878 += 1 };
  s2 -> s1 [68, 65535] { R3886 += 1, R3730 += 1, R1877 += 1, R1878 += 1 };
  s3 -> s3 [0, 65535] { R3886 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3886 += 1 };
  s4 -> s4 [0, 65535] { R3886 += 1, R3730 += 1, R1877 += 1, R1878 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3886 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_69 {
  init s0;
  s0 -> s1 [0, 66] { R3888 += 1, R3732 += 1, R1885 += 1, R1886 += 1 };
  s0 -> s2 [0, 65535] { R3888 += 1, R3731 += 1, R3732 += 1 };
  s0 -> s0 [0, 65535] { R3887 += 1, R3888 += 1 };
  s0 -> s3 [67, 67] { R3888 += 1, R3732 += 1, R1885 += 1, R1886 += 1 };
  s0 -> s4 [67, 67] { R3888 += 1, R3732 += 1, R1885 += 1, R1886 += 1 };
  s0 -> s1 [68, 65535] { R3888 += 1, R3732 += 1, R1885 += 1, R1886 += 1 };
  s1 -> s1 [0, 66] { R3888 += 1, R3732 += 1, R1885 += 1, R1886 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3888 += 1 };
  s1 -> s3 [67, 67] { R3888 += 1, R3732 += 1, R1885 += 1, R1886 += 1 };
  s1 -> s4 [67, 67] { R3888 += 1, R3732 += 1, R1885 += 1, R1886 += 1 };
  s1 -> s1 [68, 65535] { R3888 += 1, R3732 += 1, R1885 += 1, R1886 += 1 };
  s2 -> s1 [0, 66] { R3888 += 1, R3732 += 1, R1885 += 1, R1886 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3888 += 1, R3731 += 1, R3732 += 1 };
  s2 -> s3 [67, 67] { R3888 += 1, R3732 += 1, R1885 += 1, R1886 += 1 };
  s2 -> s4 [67, 67] { R3888 += 1, R3732 += 1, R1885 += 1, R1886 += 1 };
  s2 -> s1 [68, 65535] { R3888 += 1, R3732 += 1, R1885 += 1, R1886 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3888 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3888 += 1 };
  s4 -> s4 [0, 65535] { R3888 += 1, R3732 += 1, R1885 += 1, R1886 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3888 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_70 {
  init s0;
  s0 -> s1 [0, 66] { R3890 += 1, R3734 += 1, R1895 += 1, R1896 += 1 };
  s0 -> s0 [0, 65535] { R3889 += 1, R3890 += 1 };
  s0 -> s2 [0, 65535] { R3890 += 1, R3733 += 1, R3734 += 1 };
  s0 -> s3 [67, 67] { R3890 += 1, R3734 += 1, R1895 += 1, R1896 += 1 };
  s0 -> s4 [67, 67] { R3890 += 1, R3734 += 1, R1895 += 1, R1896 += 1 };
  s0 -> s1 [68, 65535] { R3890 += 1, R3734 += 1, R1895 += 1, R1896 += 1 };
  s1 -> s1 [0, 66] { R3890 += 1, R3734 += 1, R1895 += 1, R1896 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3890 += 1 };
  s1 -> s3 [67, 67] { R3890 += 1, R3734 += 1, R1895 += 1, R1896 += 1 };
  s1 -> s4 [67, 67] { R3890 += 1, R3734 += 1, R1895 += 1, R1896 += 1 };
  s1 -> s1 [68, 65535] { R3890 += 1, R3734 += 1, R1895 += 1, R1896 += 1 };
  s2 -> s1 [0, 66] { R3890 += 1, R3734 += 1, R1895 += 1, R1896 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3890 += 1, R3733 += 1, R3734 += 1 };
  s2 -> s3 [67, 67] { R3890 += 1, R3734 += 1, R1895 += 1, R1896 += 1 };
  s2 -> s4 [67, 67] { R3890 += 1, R3734 += 1, R1895 += 1, R1896 += 1 };
  s2 -> s1 [68, 65535] { R3890 += 1, R3734 += 1, R1895 += 1, R1896 += 1 };
  s3 -> s3 [0, 65535] { R3890 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3890 += 1 };
  s4 -> s4 [0, 65535] { R3890 += 1, R3734 += 1, R1895 += 1, R1896 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3890 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_71 {
  init s0;
  s0 -> s1 [0, 66] { R3892 += 1, R3736 += 1, R1905 += 1, R1906 += 1 };
  s0 -> s0 [0, 65535] { R3891 += 1, R3892 += 1 };
  s0 -> s2 [0, 65535] { R3892 += 1, R3735 += 1, R3736 += 1 };
  s0 -> s3 [67, 67] { R3892 += 1, R3736 += 1, R1905 += 1, R1906 += 1 };
  s0 -> s4 [67, 67] { R3892 += 1, R3736 += 1, R1905 += 1, R1906 += 1 };
  s0 -> s1 [68, 65535] { R3892 += 1, R3736 += 1, R1905 += 1, R1906 += 1 };
  s1 -> s1 [0, 66] { R3892 += 1, R3736 += 1, R1905 += 1, R1906 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3892 += 1 };
  s1 -> s3 [67, 67] { R3892 += 1, R3736 += 1, R1905 += 1, R1906 += 1 };
  s1 -> s4 [67, 67] { R3892 += 1, R3736 += 1, R1905 += 1, R1906 += 1 };
  s1 -> s1 [68, 65535] { R3892 += 1, R3736 += 1, R1905 += 1, R1906 += 1 };
  s2 -> s1 [0, 66] { R3892 += 1, R3736 += 1, R1905 += 1, R1906 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3892 += 1, R3735 += 1, R3736 += 1 };
  s2 -> s3 [67, 67] { R3892 += 1, R3736 += 1, R1905 += 1, R1906 += 1 };
  s2 -> s4 [67, 67] { R3892 += 1, R3736 += 1, R1905 += 1, R1906 += 1 };
  s2 -> s1 [68, 65535] { R3892 += 1, R3736 += 1, R1905 += 1, R1906 += 1 };
  s3 -> s3 [0, 65535] { R3892 += 1, R3736 += 1, R1905 += 1, R1906 += 1 };
  s3 -> s6 [0, 65535] { R3892 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3892 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3892 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_72 {
  init s0;
  s0 -> s1 [0, 66] { R3894 += 1, R3738 += 1, R1917 += 1, R1918 += 1 };
  s0 -> s0 [0, 65535] { R3893 += 1, R3894 += 1 };
  s0 -> s2 [0, 65535] { R3894 += 1, R3737 += 1, R3738 += 1 };
  s0 -> s3 [67, 67] { R3894 += 1, R3738 += 1, R1917 += 1, R1918 += 1 };
  s0 -> s4 [67, 67] { R3894 += 1, R3738 += 1, R1917 += 1, R1918 += 1 };
  s0 -> s1 [68, 65535] { R3894 += 1, R3738 += 1, R1917 += 1, R1918 += 1 };
  s1 -> s1 [0, 66] { R3894 += 1, R3738 += 1, R1917 += 1, R1918 += 1 };
  s1 -> s1 [0, 65535] { R3894 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3894 += 1, R3738 += 1, R1917 += 1, R1918 += 1 };
  s1 -> s4 [67, 67] { R3894 += 1, R3738 += 1, R1917 += 1, R1918 += 1 };
  s1 -> s1 [68, 65535] { R3894 += 1, R3738 += 1, R1917 += 1, R1918 += 1 };
  s2 -> s1 [0, 66] { R3894 += 1, R3738 += 1, R1917 += 1, R1918 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3894 += 1, R3737 += 1, R3738 += 1 };
  s2 -> s3 [67, 67] { R3894 += 1, R3738 += 1, R1917 += 1, R1918 += 1 };
  s2 -> s4 [67, 67] { R3894 += 1, R3738 += 1, R1917 += 1, R1918 += 1 };
  s2 -> s1 [68, 65535] { R3894 += 1, R3738 += 1, R1917 += 1, R1918 += 1 };
  s3 -> s3 [0, 65535] { R3894 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3894 += 1 };
  s4 -> s4 [0, 65535] { R3894 += 1, R3738 += 1, R1917 += 1, R1918 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3894 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_73 {
  init s0;
  s0 -> s1 [0, 66] { R3896 += 1, R3740 += 1, R1931 += 1, R1932 += 1 };
  s0 -> s2 [0, 65535] { R3896 += 1, R3739 += 1, R3740 += 1 };
  s0 -> s0 [0, 65535] { R3895 += 1, R3896 += 1 };
  s0 -> s3 [67, 67] { R3896 += 1, R3740 += 1, R1931 += 1, R1932 += 1 };
  s0 -> s4 [67, 67] { R3896 += 1, R3740 += 1, R1931 += 1, R1932 += 1 };
  s0 -> s1 [68, 65535] { R3896 += 1, R3740 += 1, R1931 += 1, R1932 += 1 };
  s1 -> s1 [0, 66] { R3896 += 1, R3740 += 1, R1931 += 1, R1932 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3896 += 1 };
  s1 -> s3 [67, 67] { R3896 += 1, R3740 += 1, R1931 += 1, R1932 += 1 };
  s1 -> s4 [67, 67] { R3896 += 1, R3740 += 1, R1931 += 1, R1932 += 1 };
  s1 -> s1 [68, 65535] { R3896 += 1, R3740 += 1, R1931 += 1, R1932 += 1 };
  s2 -> s1 [0, 66] { R3896 += 1, R3740 += 1, R1931 += 1, R1932 += 1 };
  s2 -> s2 [0, 65535] { R3896 += 1, R3739 += 1, R3740 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3896 += 1, R3740 += 1, R1931 += 1, R1932 += 1 };
  s2 -> s4 [67, 67] { R3896 += 1, R3740 += 1, R1931 += 1, R1932 += 1 };
  s2 -> s1 [68, 65535] { R3896 += 1, R3740 += 1, R1931 += 1, R1932 += 1 };
  s3 -> s3 [0, 65535] { R3896 += 1, R3740 += 1, R1931 += 1, R1932 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3896 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3896 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3896 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_74 {
  init s0;
  s0 -> s1 [0, 66] { R3898 += 1, R3742 += 1, R1943 += 1, R1944 += 1 };
  s0 -> s2 [0, 65535] { R3898 += 1, R3741 += 1, R3742 += 1 };
  s0 -> s0 [0, 65535] { R3897 += 1, R3898 += 1 };
  s0 -> s3 [67, 67] { R3898 += 1, R3742 += 1, R1943 += 1, R1944 += 1 };
  s0 -> s4 [67, 67] { R3898 += 1, R3742 += 1, R1943 += 1, R1944 += 1 };
  s0 -> s1 [68, 65535] { R3898 += 1, R3742 += 1, R1943 += 1, R1944 += 1 };
  s1 -> s1 [0, 66] { R3898 += 1, R3742 += 1, R1943 += 1, R1944 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3898 += 1 };
  s1 -> s3 [67, 67] { R3898 += 1, R3742 += 1, R1943 += 1, R1944 += 1 };
  s1 -> s4 [67, 67] { R3898 += 1, R3742 += 1, R1943 += 1, R1944 += 1 };
  s1 -> s1 [68, 65535] { R3898 += 1, R3742 += 1, R1943 += 1, R1944 += 1 };
  s2 -> s1 [0, 66] { R3898 += 1, R3742 += 1, R1943 += 1, R1944 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3898 += 1, R3741 += 1, R3742 += 1 };
  s2 -> s3 [67, 67] { R3898 += 1, R3742 += 1, R1943 += 1, R1944 += 1 };
  s2 -> s4 [67, 67] { R3898 += 1, R3742 += 1, R1943 += 1, R1944 += 1 };
  s2 -> s1 [68, 65535] { R3898 += 1, R3742 += 1, R1943 += 1, R1944 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3898 += 1, R3742 += 1, R1943 += 1, R1944 += 1 };
  s3 -> s6 [0, 65535] { R3898 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3898 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3898 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_75 {
  init s0;
  s0 -> s1 [0, 66] { R3900 += 1, R3744 += 1, R1957 += 1, R1958 += 1 };
  s0 -> s2 [0, 65535] { R3900 += 1, R3743 += 1, R3744 += 1 };
  s0 -> s0 [0, 65535] { R3899 += 1, R3900 += 1 };
  s0 -> s3 [67, 67] { R3900 += 1, R3744 += 1, R1957 += 1, R1958 += 1 };
  s0 -> s4 [67, 67] { R3900 += 1, R3744 += 1, R1957 += 1, R1958 += 1 };
  s0 -> s1 [68, 65535] { R3900 += 1, R3744 += 1, R1957 += 1, R1958 += 1 };
  s1 -> s1 [0, 66] { R3900 += 1, R3744 += 1, R1957 += 1, R1958 += 1 };
  s1 -> s1 [0, 65535] { R3900 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3900 += 1, R3744 += 1, R1957 += 1, R1958 += 1 };
  s1 -> s4 [67, 67] { R3900 += 1, R3744 += 1, R1957 += 1, R1958 += 1 };
  s1 -> s1 [68, 65535] { R3900 += 1, R3744 += 1, R1957 += 1, R1958 += 1 };
  s2 -> s1 [0, 66] { R3900 += 1, R3744 += 1, R1957 += 1, R1958 += 1 };
  s2 -> s2 [0, 65535] { R3900 += 1, R3743 += 1, R3744 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3900 += 1, R3744 += 1, R1957 += 1, R1958 += 1 };
  s2 -> s4 [67, 67] { R3900 += 1, R3744 += 1, R1957 += 1, R1958 += 1 };
  s2 -> s1 [68, 65535] { R3900 += 1, R3744 += 1, R1957 += 1, R1958 += 1 };
  s3 -> s3 [0, 65535] { R3900 += 1, R3744 += 1, R1957 += 1, R1958 += 1 };
  s3 -> s6 [0, 65535] { R3900 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3900 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3900 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_76 {
  init s0;
  s0 -> s1 [0, 66] { R3902 += 1, R3746 += 1, R1969 += 1, R1970 += 1 };
  s0 -> s2 [0, 65535] { R3902 += 1, R3745 += 1, R3746 += 1 };
  s0 -> s0 [0, 65535] { R3901 += 1, R3902 += 1 };
  s0 -> s3 [67, 67] { R3902 += 1, R3746 += 1, R1969 += 1, R1970 += 1 };
  s0 -> s4 [67, 67] { R3902 += 1, R3746 += 1, R1969 += 1, R1970 += 1 };
  s0 -> s1 [68, 65535] { R3902 += 1, R3746 += 1, R1969 += 1, R1970 += 1 };
  s1 -> s1 [0, 66] { R3902 += 1, R3746 += 1, R1969 += 1, R1970 += 1 };
  s1 -> s1 [0, 65535] { R3902 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3902 += 1, R3746 += 1, R1969 += 1, R1970 += 1 };
  s1 -> s4 [67, 67] { R3902 += 1, R3746 += 1, R1969 += 1, R1970 += 1 };
  s1 -> s1 [68, 65535] { R3902 += 1, R3746 += 1, R1969 += 1, R1970 += 1 };
  s2 -> s1 [0, 66] { R3902 += 1, R3746 += 1, R1969 += 1, R1970 += 1 };
  s2 -> s2 [0, 65535] { R3902 += 1, R3745 += 1, R3746 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3902 += 1, R3746 += 1, R1969 += 1, R1970 += 1 };
  s2 -> s4 [67, 67] { R3902 += 1, R3746 += 1, R1969 += 1, R1970 += 1 };
  s2 -> s1 [68, 65535] { R3902 += 1, R3746 += 1, R1969 += 1, R1970 += 1 };
  s3 -> s3 [0, 65535] { R3902 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3902 += 1, R3746 += 1, R1969 += 1, R1970 += 1 };
  s4 -> s6 [0, 65535] { R3902 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3902 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_77 {
  init s0;
  s0 -> s1 [0, 66] { R3904 += 1, R3748 += 1, R1979 += 1, R1980 += 1 };
  s0 -> s2 [0, 65535] { R3904 += 1, R3747 += 1, R3748 += 1 };
  s0 -> s0 [0, 65535] { R3903 += 1, R3904 += 1 };
  s0 -> s3 [67, 67] { R3904 += 1, R3748 += 1, R1979 += 1, R1980 += 1 };
  s0 -> s4 [67, 67] { R3904 += 1, R3748 += 1, R1979 += 1, R1980 += 1 };
  s0 -> s1 [68, 65535] { R3904 += 1, R3748 += 1, R1979 += 1, R1980 += 1 };
  s1 -> s1 [0, 66] { R3904 += 1, R3748 += 1, R1979 += 1, R1980 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3904 += 1 };
  s1 -> s3 [67, 67] { R3904 += 1, R3748 += 1, R1979 += 1, R1980 += 1 };
  s1 -> s4 [67, 67] { R3904 += 1, R3748 += 1, R1979 += 1, R1980 += 1 };
  s1 -> s1 [68, 65535] { R3904 += 1, R3748 += 1, R1979 += 1, R1980 += 1 };
  s2 -> s1 [0, 66] { R3904 += 1, R3748 += 1, R1979 += 1, R1980 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3904 += 1, R3747 += 1, R3748 += 1 };
  s2 -> s3 [67, 67] { R3904 += 1, R3748 += 1, R1979 += 1, R1980 += 1 };
  s2 -> s4 [67, 67] { R3904 += 1, R3748 += 1, R1979 += 1, R1980 += 1 };
  s2 -> s1 [68, 65535] { R3904 += 1, R3748 += 1, R1979 += 1, R1980 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3904 += 1, R3748 += 1, R1979 += 1, R1980 += 1 };
  s3 -> s6 [0, 65535] { R3904 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3904 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3904 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_78 {
  init s0;
  s0 -> s1 [0, 66] { R3906 += 1, R3750 += 1, R1987 += 1, R1988 += 1 };
  s0 -> s2 [0, 65535] { R3906 += 1, R3749 += 1, R3750 += 1 };
  s0 -> s0 [0, 65535] { R3905 += 1, R3906 += 1 };
  s0 -> s3 [67, 67] { R3906 += 1, R3750 += 1, R1987 += 1, R1988 += 1 };
  s0 -> s4 [67, 67] { R3906 += 1, R3750 += 1, R1987 += 1, R1988 += 1 };
  s0 -> s1 [68, 65535] { R3906 += 1, R3750 += 1, R1987 += 1, R1988 += 1 };
  s1 -> s1 [0, 66] { R3906 += 1, R3750 += 1, R1987 += 1, R1988 += 1 };
  s1 -> s1 [0, 65535] { R3906 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3906 += 1, R3750 += 1, R1987 += 1, R1988 += 1 };
  s1 -> s4 [67, 67] { R3906 += 1, R3750 += 1, R1987 += 1, R1988 += 1 };
  s1 -> s1 [68, 65535] { R3906 += 1, R3750 += 1, R1987 += 1, R1988 += 1 };
  s2 -> s1 [0, 66] { R3906 += 1, R3750 += 1, R1987 += 1, R1988 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3906 += 1, R3749 += 1, R3750 += 1 };
  s2 -> s3 [67, 67] { R3906 += 1, R3750 += 1, R1987 += 1, R1988 += 1 };
  s2 -> s4 [67, 67] { R3906 += 1, R3750 += 1, R1987 += 1, R1988 += 1 };
  s2 -> s1 [68, 65535] { R3906 += 1, R3750 += 1, R1987 += 1, R1988 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3906 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3906 += 1 };
  s4 -> s4 [0, 65535] { R3906 += 1, R3750 += 1, R1987 += 1, R1988 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3906 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_79 {
  init s0;
  s0 -> s1 [0, 66] { R3908 += 1, R3752 += 1, R1997 += 1, R1998 += 1 };
  s0 -> s0 [0, 65535] { R3907 += 1, R3908 += 1 };
  s0 -> s2 [0, 65535] { R3908 += 1, R3751 += 1, R3752 += 1 };
  s0 -> s3 [67, 67] { R3908 += 1, R3752 += 1, R1997 += 1, R1998 += 1 };
  s0 -> s4 [67, 67] { R3908 += 1, R3752 += 1, R1997 += 1, R1998 += 1 };
  s0 -> s1 [68, 65535] { R3908 += 1, R3752 += 1, R1997 += 1, R1998 += 1 };
  s1 -> s1 [0, 66] { R3908 += 1, R3752 += 1, R1997 += 1, R1998 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3908 += 1 };
  s1 -> s3 [67, 67] { R3908 += 1, R3752 += 1, R1997 += 1, R1998 += 1 };
  s1 -> s4 [67, 67] { R3908 += 1, R3752 += 1, R1997 += 1, R1998 += 1 };
  s1 -> s1 [68, 65535] { R3908 += 1, R3752 += 1, R1997 += 1, R1998 += 1 };
  s2 -> s1 [0, 66] { R3908 += 1, R3752 += 1, R1997 += 1, R1998 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3908 += 1, R3751 += 1, R3752 += 1 };
  s2 -> s3 [67, 67] { R3908 += 1, R3752 += 1, R1997 += 1, R1998 += 1 };
  s2 -> s4 [67, 67] { R3908 += 1, R3752 += 1, R1997 += 1, R1998 += 1 };
  s2 -> s1 [68, 65535] { R3908 += 1, R3752 += 1, R1997 += 1, R1998 += 1 };
  s3 -> s3 [0, 65535] { R3908 += 1, R3752 += 1, R1997 += 1, R1998 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3908 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3908 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3908 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_80 {
  init s0;
  s0 -> s1 [0, 66] { R3910 += 1, R3754 += 1, R2007 += 1, R2008 += 1 };
  s0 -> s0 [0, 65535] { R3909 += 1, R3910 += 1 };
  s0 -> s2 [0, 65535] { R3910 += 1, R3753 += 1, R3754 += 1 };
  s0 -> s3 [67, 67] { R3910 += 1, R3754 += 1, R2007 += 1, R2008 += 1 };
  s0 -> s4 [67, 67] { R3910 += 1, R3754 += 1, R2007 += 1, R2008 += 1 };
  s0 -> s1 [68, 65535] { R3910 += 1, R3754 += 1, R2007 += 1, R2008 += 1 };
  s1 -> s1 [0, 66] { R3910 += 1, R3754 += 1, R2007 += 1, R2008 += 1 };
  s1 -> s1 [0, 65535] { R3910 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3910 += 1, R3754 += 1, R2007 += 1, R2008 += 1 };
  s1 -> s4 [67, 67] { R3910 += 1, R3754 += 1, R2007 += 1, R2008 += 1 };
  s1 -> s1 [68, 65535] { R3910 += 1, R3754 += 1, R2007 += 1, R2008 += 1 };
  s2 -> s1 [0, 66] { R3910 += 1, R3754 += 1, R2007 += 1, R2008 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3910 += 1, R3753 += 1, R3754 += 1 };
  s2 -> s3 [67, 67] { R3910 += 1, R3754 += 1, R2007 += 1, R2008 += 1 };
  s2 -> s4 [67, 67] { R3910 += 1, R3754 += 1, R2007 += 1, R2008 += 1 };
  s2 -> s1 [68, 65535] { R3910 += 1, R3754 += 1, R2007 += 1, R2008 += 1 };
  s3 -> s6 [0, 65535] { R3910 += 1 };
  s3 -> s3 [0, 65535] { R3910 += 1, R3754 += 1, R2007 += 1, R2008 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3910 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3910 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_81 {
  init s0;
  s0 -> s1 [0, 66] { R3912 += 1, R3756 += 1, R2019 += 1, R2020 += 1 };
  s0 -> s2 [0, 65535] { R3912 += 1, R3755 += 1, R3756 += 1 };
  s0 -> s0 [0, 65535] { R3911 += 1, R3912 += 1 };
  s0 -> s3 [67, 67] { R3912 += 1, R3756 += 1, R2019 += 1, R2020 += 1 };
  s0 -> s4 [67, 67] { R3912 += 1, R3756 += 1, R2019 += 1, R2020 += 1 };
  s0 -> s1 [68, 65535] { R3912 += 1, R3756 += 1, R2019 += 1, R2020 += 1 };
  s1 -> s1 [0, 66] { R3912 += 1, R3756 += 1, R2019 += 1, R2020 += 1 };
  s1 -> s1 [0, 65535] { R3912 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3912 += 1, R3756 += 1, R2019 += 1, R2020 += 1 };
  s1 -> s4 [67, 67] { R3912 += 1, R3756 += 1, R2019 += 1, R2020 += 1 };
  s1 -> s1 [68, 65535] { R3912 += 1, R3756 += 1, R2019 += 1, R2020 += 1 };
  s2 -> s1 [0, 66] { R3912 += 1, R3756 += 1, R2019 += 1, R2020 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3912 += 1, R3755 += 1, R3756 += 1 };
  s2 -> s3 [67, 67] { R3912 += 1, R3756 += 1, R2019 += 1, R2020 += 1 };
  s2 -> s4 [67, 67] { R3912 += 1, R3756 += 1, R2019 += 1, R2020 += 1 };
  s2 -> s1 [68, 65535] { R3912 += 1, R3756 += 1, R2019 += 1, R2020 += 1 };
  s3 -> s3 [0, 65535] { R3912 += 1, R3756 += 1, R2019 += 1, R2020 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3912 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3912 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3912 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_82 {
  init s0;
  s0 -> s1 [0, 66] { R3914 += 1, R3758 += 1, R2033 += 1, R2034 += 1 };
  s0 -> s0 [0, 65535] { R3913 += 1, R3914 += 1 };
  s0 -> s2 [0, 65535] { R3914 += 1, R3757 += 1, R3758 += 1 };
  s0 -> s3 [67, 67] { R3914 += 1, R3758 += 1, R2033 += 1, R2034 += 1 };
  s0 -> s4 [67, 67] { R3914 += 1, R3758 += 1, R2033 += 1, R2034 += 1 };
  s0 -> s1 [68, 65535] { R3914 += 1, R3758 += 1, R2033 += 1, R2034 += 1 };
  s1 -> s1 [0, 66] { R3914 += 1, R3758 += 1, R2033 += 1, R2034 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3914 += 1 };
  s1 -> s3 [67, 67] { R3914 += 1, R3758 += 1, R2033 += 1, R2034 += 1 };
  s1 -> s4 [67, 67] { R3914 += 1, R3758 += 1, R2033 += 1, R2034 += 1 };
  s1 -> s1 [68, 65535] { R3914 += 1, R3758 += 1, R2033 += 1, R2034 += 1 };
  s2 -> s1 [0, 66] { R3914 += 1, R3758 += 1, R2033 += 1, R2034 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3914 += 1, R3757 += 1, R3758 += 1 };
  s2 -> s3 [67, 67] { R3914 += 1, R3758 += 1, R2033 += 1, R2034 += 1 };
  s2 -> s4 [67, 67] { R3914 += 1, R3758 += 1, R2033 += 1, R2034 += 1 };
  s2 -> s1 [68, 65535] { R3914 += 1, R3758 += 1, R2033 += 1, R2034 += 1 };
  s3 -> s3 [0, 65535] { R3914 += 1, R3758 += 1, R2033 += 1, R2034 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3914 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3914 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3914 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_83 {
  init s0;
  s0 -> s1 [0, 66] { R3916 += 1, R3760 += 1, R2045 += 1, R2046 += 1 };
  s0 -> s2 [0, 65535] { R3916 += 1, R3759 += 1, R3760 += 1 };
  s0 -> s0 [0, 65535] { R3915 += 1, R3916 += 1 };
  s0 -> s3 [67, 67] { R3916 += 1, R3760 += 1, R2045 += 1, R2046 += 1 };
  s0 -> s4 [67, 67] { R3916 += 1, R3760 += 1, R2045 += 1, R2046 += 1 };
  s0 -> s1 [68, 65535] { R3916 += 1, R3760 += 1, R2045 += 1, R2046 += 1 };
  s1 -> s1 [0, 66] { R3916 += 1, R3760 += 1, R2045 += 1, R2046 += 1 };
  s1 -> s1 [0, 65535] { R3916 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R3916 += 1, R3760 += 1, R2045 += 1, R2046 += 1 };
  s1 -> s4 [67, 67] { R3916 += 1, R3760 += 1, R2045 += 1, R2046 += 1 };
  s1 -> s1 [68, 65535] { R3916 += 1, R3760 += 1, R2045 += 1, R2046 += 1 };
  s2 -> s1 [0, 66] { R3916 += 1, R3760 += 1, R2045 += 1, R2046 += 1 };
  s2 -> s2 [0, 65535] { R3916 += 1, R3759 += 1, R3760 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R3916 += 1, R3760 += 1, R2045 += 1, R2046 += 1 };
  s2 -> s4 [67, 67] { R3916 += 1, R3760 += 1, R2045 += 1, R2046 += 1 };
  s2 -> s1 [68, 65535] { R3916 += 1, R3760 += 1, R2045 += 1, R2046 += 1 };
  s3 -> s3 [0, 65535] { R3916 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3916 += 1 };
  s4 -> s4 [0, 65535] { R3916 += 1, R3760 += 1, R2045 += 1, R2046 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3916 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_84 {
  init s0;
  s0 -> s1 [0, 66] { R3918 += 1, R3762 += 1, R3610 += 1, R3611 += 1, R3612 += 1 };
  s0 -> s2 [0, 66] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s0 -> s3 [0, 66] { R3918 += 1, R3762 += 1, R3609 += 1, R3610 += 1 };
  s0 -> s4 [0, 65535] { R3918 += 1, R3761 += 1, R3762 += 1 };
  s0 -> s0 [0, 65535] { R3917 += 1, R3918 += 1 };
  s0 -> s5 [67, 67] { R3918 += 1, R3762 += 1, R3609 += 1, R3610 += 1 };
  s0 -> s6 [67, 67] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s0 -> s7 [67, 67] { R3918 += 1, R3762 += 1, R3610 += 1, R3611 += 1, R3612 += 1 };
  s0 -> s8 [67, 67] { R3918 += 1, R3762 += 1, R3610 += 1, R3611 += 1, R3612 += 1 };
  s0 -> s9 [67, 67] { R3918 += 1, R3762 += 1, R3609 += 1, R3610 += 1 };
  s0 -> s10 [67, 67] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s0 -> s2 [68, 69] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s0 -> s1 [68, 65535] { R3918 += 1, R3762 += 1, R3610 += 1, R3611 += 1, R3612 += 1 };
  s0 -> s3 [68, 65535] { R3918 += 1, R3762 += 1, R3609 += 1, R3610 += 1 };
  s0 -> s11 [70, 70] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s0 -> s2 [71, 65535] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s1 -> s1 [0, 66] { R3918 += 1, R3762 += 1, R3610 += 1, R3611 += 1, R3612 += 1 };
  s1 -> s2 [0, 66] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s1 -> s6 [67, 67] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s1 -> s7 [67, 67] { R3918 += 1, R3762 += 1, R3610 += 1, R3611 += 1, R3612 += 1 };
  s1 -> s8 [67, 67] { R3918 += 1, R3762 += 1, R3610 += 1, R3611 += 1, R3612 += 1 };
  s1 -> s10 [67, 67] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s1 -> s2 [68, 69] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s1 -> s1 [68, 65535] { R3918 += 1, R3762 += 1, R3610 += 1, R3611 += 1, R3612 += 1 };
  s1 -> s11 [70, 70] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s1 -> s2 [71, 65535] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s2 -> s2 [0, 66] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s2 -> s6 [67, 67] { R3918 += 1, R3762 += 1, R3610 += 1 };
  s2 -> s10 [67, 67] { R3918 += 1, R3762 += 1, R3610 += 1 };
  s2 -> s2 [68, 69] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s2 -> s2 [68, 65535] { R3918 += 1, R3762 += 1, R3610 += 1 };
  s2 -> s11 [70, 70] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s2 -> s2 [71, 65535] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s3 -> s1 [0, 66] { R3918 += 1, R3762 += 1, R3610 += 1, R3611 += 1, R3612 += 1 };
  s3 -> s2 [0, 66] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s3 -> s3 [0, 66] { R3918 += 1, R3762 += 1, R3609 += 1, R3610 += 1 };
  s3 -> s5 [67, 67] { R3918 += 1, R3762 += 1, R3609 += 1, R3610 += 1 };
  s3 -> s6 [67, 67] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s3 -> s7 [67, 67] { R3918 += 1, R3762 += 1, R3610 += 1, R3611 += 1, R3612 += 1 };
  s3 -> s8 [67, 67] { R3918 += 1, R3762 += 1, R3610 += 1, R3611 += 1, R3612 += 1 };
  s3 -> s9 [67, 67] { R3918 += 1, R3762 += 1, R3609 += 1, R3610 += 1 };
  s3 -> s10 [67, 67] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s3 -> s2 [68, 69] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s3 -> s1 [68, 65535] { R3918 += 1, R3762 += 1, R3610 += 1, R3611 += 1, R3612 += 1 };
  s3 -> s3 [68, 65535] { R3918 += 1, R3762 += 1, R3609 += 1, R3610 += 1 };
  s3 -> s11 [70, 70] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s3 -> s2 [71, 65535] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s4 -> s1 [0, 66] { R3918 += 1, R3762 += 1, R3610 += 1, R3611 += 1, R3612 += 1 };
  s4 -> s2 [0, 66] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s4 -> s3 [0, 66] { R3918 += 1, R3762 += 1, R3609 += 1, R3610 += 1 };
  s4 -> s4 [0, 65535] { R3918 += 1, R3761 += 1, R3762 += 1 };
  s4 -> s5 [67, 67] { R3918 += 1, R3762 += 1, R3609 += 1, R3610 += 1 };
  s4 -> s6 [67, 67] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s4 -> s7 [67, 67] { R3918 += 1, R3762 += 1, R3610 += 1, R3611 += 1, R3612 += 1 };
  s4 -> s8 [67, 67] { R3918 += 1, R3762 += 1, R3610 += 1, R3611 += 1, R3612 += 1 };
  s4 -> s9 [67, 67] { R3918 += 1, R3762 += 1, R3609 += 1, R3610 += 1 };
  s4 -> s10 [67, 67] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s4 -> s2 [68, 69] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s4 -> s1 [68, 65535] { R3918 += 1, R3762 += 1, R3610 += 1, R3611 += 1, R3612 += 1 };
  s4 -> s3 [68, 65535] { R3918 += 1, R3762 += 1, R3609 += 1, R3610 += 1 };
  s4 -> s11 [70, 70] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s4 -> s2 [71, 65535] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s5 -> s10 [0, 69] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s5 -> s5 [0, 65535] { R3918 += 1, R3762 += 1, R3609 += 1, R3610 += 1 };
  s5 -> s8 [0, 65535] { R3918 += 1, R3762 += 1, R3610 += 1, R3611 += 1, R3612 += 1 };
  s5 -> s15 [70, 70] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s5 -> s10 [71, 65535] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s8 -> s10 [0, 69] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s8 -> s8 [0, 65535] { R3918 += 1, R3762 += 1, R3610 += 1, R3611 += 1, R3612 += 1 };
  s8 -> s15 [70, 70] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s8 -> s10 [71, 65535] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s10 -> s10 [0, 69] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s10 -> s10 [0, 65535] { R3918 += 1, R3762 += 1, R3610 += 1 };
  s10 -> s15 [70, 70] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s10 -> s10 [71, 65535] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s11 -> s11 [0, 66] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s11 -> s12 [0, 66] { R3918 += 1, R3762 += 1, R3610 += 1 };
  s11 -> s13 [67, 67] { R3918 += 1, R3762 += 1, R3610 += 1 };
  s11 -> s14 [67, 67] { R3918 += 1, R3762 += 1, R3610 += 1 };
  s11 -> s15 [67, 67] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s11 -> s16 [67, 67] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s11 -> s11 [68, 65535] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s11 -> s12 [68, 65535] { R3918 += 1, R3762 += 1, R3610 += 1 };
  s12 -> s12 [0, 66] { R3918 += 1, R3762 += 1, R3610 += 1 };
  s12 -> s17 [0, 65535];
  s12 -> s12 [0, 65535] { R3918 += 1 };
  s12 -> s13 [67, 67] { R3918 += 1, R3762 += 1, R3610 += 1 };
  s12 -> s14 [67, 67] { R3918 += 1, R3762 += 1, R3610 += 1 };
  s12 -> s12 [68, 65535] { R3918 += 1, R3762 += 1, R3610 += 1 };
  s13 -> s13 [0, 65535] { R3918 += 1, R3762 += 1, R3610 += 1 };
  s13 -> s18 [0, 65535] { R3918 += 1 };
  s13 -> s17 [0, 65535];
  s14 -> s14 [0, 65535] { R3918 += 1 };
  s14 -> s17 [0, 65535];
  s15 -> s13 [0, 65535] { R3918 += 1, R3762 += 1, R3610 += 1 };
  s15 -> s15 [0, 65535] { R3918 += 1, R3762 += 1, R3610 += 1, R3612 += 1, R3613 += 1, R3614 += 1 };
  s17 -> s17 [0, 65535];
  s18 -> s18 [0, 65535] { R3918 += 1 };
  s18 -> s17 [0, 65535];
  accepting s17, s12, s13, s14, s18;
};
};
synchronised {  // Automata constraining P44
automaton P44_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
synchronised {  // Automata constraining P27
automaton P27_0 {
  init s0;
  s0 -> s1 [108, 108];
  accepting s1;
};
};
synchronised {  // Automata constraining P17
automaton P17_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R3692 && R4 - R3918 = 1 && R29 - R3692 = -1 && R30 = R3692 && R31 - R3692 = -1 && R32 = R3692 && R33 = 0 && R34 = 1 && R35 = 0 && R36 = 1 && R37 = R3918 && R38 - R3918 = 1 && R39 = R3918 && R40 - R3918 = 1 && R41 = 0 && R42 = 1 && R43 = 0 && R44 = 1 && R1774 + R1773 + -1*R2040 + -1*R2034 = 0 && R1792 + R1789 + R1894 + R1889 + R1996 + R1991 + -1*R2044 + -1*R2038 - R1936 - R1942 - R1820 - R1824 = 0 && R1823 + R1819 + R1941 + R1935 + R2043 + R2037 = 0 && R1845 + R1843 = 0 && R1846 + R1844 + -1*R2040 + -1*R2034 = 0 && R1983 + R1979 = 0 && R1984 + R1980 + -1*R2040 + -1*R2034 = 0 && R1985 + R1981 = 0 && R1986 + R1982 = 0 && R2039 + R2033 = 0 && R2041 + R2035 = 0 && R2042 + R2036 = 0 && R3621 = 0 && R3622 = R3692 && R3623 = 0 && R3624 = R3692 && R3625 = 0 && R3626 = R3692 && R3627 = 0 && R3628 = R3692 && R3629 = 0 && R3630 = R3692 && R3631 = 0 && R3632 = R3692 && R3633 = 0 && R3634 = R3692 && R3635 = 0 && R3636 = R3692 && R3637 = 0 && R3638 = R3692 && R3639 = 0 && R3640 = R3692 && R3641 = 0 && R3642 = R3692 && R3643 = 0 && R3644 = R3692 && R3645 = 0 && R3646 = R3692 && R3647 = 0 && R3648 = R3692 && R3649 = 0 && R3650 = R3692 && R3651 = 0 && R3652 = R3692 && R3653 = 0 && R3654 = R3692 && R3655 = 0 && R3656 = R3692 && R3657 = 0 && R3658 = R3692 && R3659 = 0 && R3660 = R3692 && R3661 = 0 && R3662 = R3692 && R3663 = 0 && R3664 = R3692 && R3665 = 0 && R3666 = R3692 && R3667 = 0 && R3668 = R3692 && R3669 = 0 && R3670 = R3692 && R3671 = 0 && R3672 = R3692 && R3673 = 0 && R3674 = R3692 && R3675 = 0 && R3676 = R3692 && R3677 = 0 && R3678 = R3692 && R3679 = 0 && R3680 = R3692 && R3681 = 0 && R3682 = R3692 && R3683 = 0 && R3684 = R3692 && R3685 = 0 && R3686 = R3692 && R3687 = 0 && R3688 = R3692 && R3689 = 0 && R3690 = R3692 && R3691 = 0 && R3695 = 0 && R3696 = 0 && R3761 = 0 && R3762 = 0 && R3763 = 0 && R3764 = R3918 && R3765 = 0 && R3766 = R3918 && R3767 = 0 && R3768 = R3918 && R3769 = 0 && R3770 = R3918 && R3771 = 0 && R3772 = R3918 && R3773 = 0 && R3774 = R3918 && R3775 = 0 && R3776 = R3918 && R3777 = 0 && R3778 = R3918 && R3779 = 0 && R3780 = R3918 && R3781 = 0 && R3782 = R3918 && R3783 = 0 && R3784 = R3918 && R3785 = 0 && R3786 = R3918 && R3787 = 0 && R3788 = R3918 && R3789 = 0 && R3790 = R3918 && R3791 = 0 && R3792 = R3918 && R3793 = 0 && R3794 = R3918 && R3795 = 0 && R3796 = R3918 && R3797 = 0 && R3798 = R3918 && R3799 = 0 && R3800 = R3918 && R3801 = 0 && R3802 = R3918 && R3803 = 0 && R3804 = R3918 && R3805 = 0 && R3806 = R3918 && R3807 = 0 && R3808 = R3918 && R3809 = 0 && R3810 = R3918 && R3811 = 0 && R3812 = R3918 && R3813 = 0 && R3814 = R3918 && R3815 = 0 && R3816 = R3918 && R3817 = 0 && R3818 = R3918 && R3819 = 0 && R3820 = R3918 && R3821 = 0 && R3822 = R3918 && R3823 = 0 && R3824 = R3918 && R3825 = 0 && R3826 = R3918 && R3827 = 0 && R3828 = R3918 && R3829 = 0 && R3830 = R3918 && R3831 = 0 && R3832 = R3918 && R3833 = 0 && R3834 = R3918 && R3835 = 0 && R3836 = R3918 && R3837 = 0 && R3838 = R3918 && R3839 = 0 && R3840 = R3918 && R3841 = 0 && R3842 = R3918 && R3843 = 0 && R3844 = R3918 && R3845 = 0 && R3846 = R3918 && R3847 = 0 && R3848 = R3918 && R3849 = 0 && R3850 = R3918 && R3851 = 0 && R3852 = R3918 && R3853 = 0 && R3854 = R3918 && R3855 = 0 && R3856 = R3918 && R3857 = 0 && R3858 = R3918 && R3859 = 0 && R3860 = R3918 && R3861 = 0 && R3862 = R3918 && R3863 = 0 && R3864 = R3918 && R3865 = 0 && R3866 = R3918 && R3867 = 0 && R3868 = R3918 && R3869 = 0 && R3870 = R3918 && R3871 = 0 && R3872 = R3918 && R3873 = 0 && R3874 = R3918 && R3875 = 0 && R3876 = R3918 && R3877 = 0 && R3878 = R3918 && R3879 = 0 && R3880 = R3918 && R3881 = 0 && R3882 = R3918 && R3883 = 0 && R3884 = R3918 && R3885 = 0 && R3886 = R3918 && R3887 = 0 && R3888 = R3918 && R3889 = 0 && R3890 = R3918 && R3891 = 0 && R3892 = R3918 && R3893 = 0 && R3894 = R3918 && R3895 = 0 && R3896 = R3918 && R3897 = 0 && R3898 = R3918 && R3899 = 0 && R3900 = R3918 && R3901 = 0 && R3902 = R3918 && R3903 = 0 && R3904 = R3918 && R3905 = 0 && R3906 = R3918 && R3907 = 0 && R3908 = R3918 && R3909 = 0 && R3910 = R3918 && R3911 = 0 && R3912 = R3918 && R3913 = 0 && R3914 = R3918 && R3915 = 0 && R3916 = R3918 && R3917 = 0 && R18 < 1 && R21 < 1 && R1776 + R1775 < 1 && R1798 + R1795 + R1904 + R1899 + R2006 + R2001 < 1 && -1*R2044 + -1*R2038 - R1936 - R1942 - R1820 - R1824 < 1 && -1*R1852 + -1*R1849 < 1 && R1858 + R1855 < 1 && -1*R2040 + -1*R2034 < 1 && 0 < R3692 && -1 < R3918 && (R1816 + R1811 + R1930 + R1923 + R2032 + R2025 != 0 || ((R1805 + R1801 + R1915 + R1909 + R2017 + R2011 != 0 || R1806 + R1802 + R1916 + R1910 + R2018 + R2012 + -1*R2044 + -1*R2038 - R1936 - R1942 - R1820 - R1824 = 0 || R1824 + R1820 + R1942 + R1936 + R2044 + R2038 < 1) && (R1805 + R1801 + R1915 + R1909 + R2017 + R2011 = 0 || R1824 + R1820 + R1942 + R1936 + R2044 + R2038 < 1))) && (R1816 + R1811 + R1930 + R1923 + R2032 + R2025 != 0 || ((R1814 + R1809 + R1928 + R1921 + R2030 + R2023 != 0 || R1815 + R1810 + R1929 + R1922 + R2031 + R2024 + -1*R2044 + -1*R2038 - R1936 - R1942 - R1820 - R1824 = 0 || R1824 + R1820 + R1942 + R1936 + R2044 + R2038 < 1) && (R1814 + R1809 + R1928 + R1921 + R2030 + R2023 = 0 || R1824 + R1820 + R1942 + R1936 + R2044 + R2038 < 1))) && (R1850 + R1847 != 0 || R1851 + R1848 + -1*R2040 + -1*R2034 = 0 || R1852 + R1849 < 1) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1865 + R1861 = 0 && R1866 + R1862 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1874 + R1869 = 0 && R1875 + R1870 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1883 + R1879 = 0 && R1884 + R1880 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1892 + R1887 = 0 && R1893 + R1888 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1902 + R1897 = 0 && R1903 + R1898 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1913 + R1907 = 0 && R1914 + R1908 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1926 + R1919 = 0 && R1927 + R1920 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1939 + R1933 = 0 && R1940 + R1934 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1952 + R1945 = 0 && R1953 + R1946 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1965 + R1959 = 0 && R1966 + R1960 = 0)) && (R1852 + R1849 != 0 || ((R1850 + R1847 != 0 || R1851 + R1848 + -1*R2040 + -1*R2034 = 0 || R2040 + R2034 < 1) && (R1850 + R1847 = 0 || R2040 + R2034 < 1))) && (R1856 + R1853 != 0 || R1857 + R1854 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1863 + R1859 != 0 || R1864 + R1860 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1865 + R1861 != 0 || R1852 + R1849 + -1*R1866 + -1*R1862 = 0 || R1852 + R1849 < 1) && (R1872 + R1867 != 0 || R1873 + R1868 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1874 + R1869 != 0 || R1852 + R1849 + -1*R1875 + -1*R1870 = 0 || R1852 + R1849 < 1) && (R1881 + R1877 != 0 || R1882 + R1878 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1883 + R1879 != 0 || R1852 + R1849 + -1*R1884 + -1*R1880 = 0 || R1852 + R1849 < 1) && (R1890 + R1885 != 0 || R1891 + R1886 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1892 + R1887 != 0 || R1852 + R1849 + -1*R1893 + -1*R1888 = 0 || R1852 + R1849 < 1) && (R1900 + R1895 != 0 || R1901 + R1896 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1902 + R1897 != 0 || R1852 + R1849 + -1*R1903 + -1*R1898 = 0 || R1852 + R1849 < 1) && (R1911 + R1905 != 0 || R1912 + R1906 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1913 + R1907 != 0 || R1852 + R1849 + -1*R1914 + -1*R1908 = 0 || R1852 + R1849 < 1) && (R1924 + R1917 != 0 || R1925 + R1918 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1926 + R1919 != 0 || R1852 + R1849 + -1*R1927 + -1*R1920 = 0 || R1852 + R1849 < 1) && (R1937 + R1931 != 0 || R1938 + R1932 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1939 + R1933 != 0 || R1852 + R1849 + -1*R1940 + -1*R1934 = 0 || R1852 + R1849 < 1) && (R1950 + R1943 != 0 || R1951 + R1944 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1952 + R1945 != 0 || R1852 + R1849 + -1*R1953 + -1*R1946 = 0 || R1852 + R1849 < 1) && (R1963 + R1957 != 0 || R1964 + R1958 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1965 + R1959 != 0 || R1852 + R1849 + -1*R1966 + -1*R1960 = 0 || R1852 + R1849 < 1) && (R1974 + R1969 != 0 || R1975 + R1970 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1992 + R1987 != 0 || R1993 + R1988 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R2002 + R1997 != 0 || R2003 + R1998 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R2013 + R2007 != 0 || R2014 + R2008 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R2026 + R2019 != 0 || R2027 + R2020 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R2052 + R2045 != 0 || R2040 + R2034 + -1*R2053 + -1*R2046 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R3615 + R3609 != 0 || R2040 + R2034 + -1*R3616 + -1*R3610 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R28 = 0 || (R3693 = 0 && R3694 = 0)) && (R28 = 0 || (R3697 = 0 && R3698 = 0)) && (R28 = 0 || (R3699 = 0 && R3700 = 0)) && (R28 = 0 || (R3701 = 0 && R3702 = 0)) && (R28 = 0 || (R3703 = 0 && R3704 = 0)) && (R28 = 0 || (R3705 = 0 && R3706 = 0)) && (R28 = 0 || (R3707 = 0 && R3708 = 0)) && (R28 = 0 || (R3709 = 0 && R3710 = 0)) && (R28 = 0 || (R3711 = 0 && R3712 = 0)) && (R28 = 0 || (R3713 = 0 && R3714 = 0)) && (R28 = 0 || (R3715 = 0 && R3716 = 0)) && (R28 = 0 || (R3717 = 0 && R3718 = 0)) && (R28 = 0 || (R3719 = 0 && R3720 = 0)) && (R28 = 0 || (R3721 = 0 && R3722 = 0)) && (R28 = 0 || (R3723 = 0 && R3724 = 0)) && (R28 = 0 || (R3725 = 0 && R3726 = 0)) && (R28 = 0 || (R3727 = 0 && R3728 = 0)) && (R28 = 0 || (R3729 = 0 && R3730 = 0)) && (R28 = 0 || (R3731 = 0 && R3732 = 0)) && (R28 = 0 || (R3733 = 0 && R3734 = 0)) && (R28 = 0 || (R3735 = 0 && R3736 = 0)) && (R28 = 0 || (R3737 = 0 && R3738 = 0)) && (R28 = 0 || (R3739 = 0 && R3740 = 0)) && (R28 = 0 || (R3741 = 0 && R3742 = 0)) && (R28 = 0 || (R3743 = 0 && R3744 = 0)) && (R28 = 0 || (R3745 = 0 && R3746 = 0)) && (R28 = 0 || (R3747 = 0 && R3748 = 0)) && (R28 = 0 || (R3749 = 0 && R3750 = 0)) && (R28 = 0 || (R3751 = 0 && R3752 = 0)) && (R28 = 0 || (R3753 = 0 && R3754 = 0)) && (R28 = 0 || (R3755 = 0 && R3756 = 0)) && (R28 = 0 || (R3757 = 0 && R3758 = 0)) && (R28 = 0 || (R3759 = 0 && R3760 = 0)) && (R1782 + R1779 = 0 || (R1780 + R1777 = 0 && R1781 + R1778 = 0)) && (R1782 + R1779 = 0 || (R1785 + R1783 = 0 && R1786 + R1784 = 0)) && (R1782 + R1779 = 0 || (R1790 + R1787 = 0 && R1791 + R1788 = 0)) && (R1782 + R1779 = 0 || (R1796 + R1793 = 0 && R1797 + R1794 = 0)) && (R1782 + R1779 = 0 || (R1803 + R1799 = 0 && R1804 + R1800 = 0)) && (R1782 + R1779 = 0 || (R1812 + R1807 = 0 && R1813 + R1808 = 0)) && (R1782 + R1779 = 0 || (R1821 + R1817 = 0 && R1822 + R1818 = 0)) && (R1782 + R1779 = 0 || (R1830 + R1825 = 0 && R1831 + R1826 = 0)) && (R1782 + R1779 = 0 || (R1839 + R1835 = 0 && R1840 + R1836 = 0)) && (R1816 + R1811 + R1930 + R1923 + R2032 + R2025 = 0 || (R1805 + R1801 + R1915 + R1909 + R2017 + R2011 = 0 && R1806 + R1802 + R1916 + R1910 + R2018 + R2012 + -1*R2044 + -1*R2038 - R1936 - R1942 - R1820 - R1824 = 0)) && (R1816 + R1811 + R1930 + R1923 + R2032 + R2025 = 0 || (R1814 + R1809 + R1928 + R1921 + R2030 + R2023 = 0 && R1815 + R1810 + R1929 + R1922 + R2031 + R2024 + -1*R2044 + -1*R2038 - R1936 - R1942 - R1820 - R1824 = 0)) && (R1834 + R1829 + R1956 + R1949 + R2058 + R2051 = 0 || (R1832 + R1827 + R1954 + R1947 + R2056 + R2049 = 0 && R1833 + R1828 + R1955 + R1948 + R2057 + R2050 = 0)) && (R1834 + R1829 + R1956 + R1949 + R2058 + R2051 = 0 || (R1841 + R1837 + R1967 + R1961 + R3619 + R3613 = 0 && R1842 + R1838 + R1968 + R1962 + R3620 + R3614 = 0)) && (R1850 + R1847 = 0 || R1852 + R1849 < 1) && (R1856 + R1853 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1863 + R1859 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1865 + R1861 = 0 || R1852 + R1849 < 1) && (R1872 + R1867 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1874 + R1869 = 0 || R1852 + R1849 < 1) && (R1881 + R1877 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1883 + R1879 = 0 || R1852 + R1849 < 1) && (R1890 + R1885 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1892 + R1887 = 0 || R1852 + R1849 < 1) && (R1900 + R1895 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1902 + R1897 = 0 || R1852 + R1849 < 1) && (R1911 + R1905 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1913 + R1907 = 0 || R1852 + R1849 < 1) && (R1924 + R1917 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1926 + R1919 = 0 || R1852 + R1849 < 1) && (R1937 + R1931 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1939 + R1933 = 0 || R1852 + R1849 < 1) && (R1950 + R1943 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1952 + R1945 = 0 || R1852 + R1849 < 1) && (R1963 + R1957 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1965 + R1959 = 0 || R1852 + R1849 < 1) && (R1974 + R1969 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1978 + R1973 = 0 || (R1976 + R1971 = 0 && R1977 + R1972 = 0)) && (R1978 + R1973 = 0 || (R1994 + R1989 = 0 && R1995 + R1990 = 0)) && (R1978 + R1973 = 0 || (R2004 + R1999 = 0 && R2005 + R2000 = 0)) && (R1978 + R1973 = 0 || (R2015 + R2009 = 0 && R2016 + R2010 = 0)) && (R1978 + R1973 = 0 || (R2028 + R2021 = 0 && R2029 + R2022 = 0)) && (R1978 + R1973 = 0 || (R2054 + R2047 = 0 && R2055 + R2048 = 0)) && (R1978 + R1973 = 0 || (R3617 + R3611 = 0 && R3618 + R3612 = 0)) && (R1992 + R1987 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R2002 + R1997 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R2013 + R2007 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R2026 + R2019 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R2052 + R2045 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R3615 + R3609 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0));
// End of Parikh automata intersection problem
