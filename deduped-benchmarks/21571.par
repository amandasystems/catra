// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R12, R15332, R15333, R15334, R15335, R15336, R15337, R15338, R15339, R15340, R15341, R17, R18, R19, R19152, R19153, R19154, R19155, R19156, R19157, R19158, R19159, R19160, R19161, R19266, R19267, R19268, R19269, R19270, R19271, R19272, R19273, R19274, R19275, R19276, R19277, R19278, R19279, R19280, R19281, R19282, R19283, R19284, R19285, R19286, R19287, R19288, R19289, R19290, R19291, R19292, R19293, R19294, R19295, R19296, R19297, R19298, R19299, R19300, R19301, R19302, R19303, R19304, R19305, R19306, R19307, R19308, R19309, R19310, R19311, R19312, R19313, R19314, R19315, R19316, R19317, R19318, R19319, R19320, R19321, R19322, R19323, R19324, R19325, R19326, R19327, R19328, R19329, R19330, R19331, R19332, R19333, R19334, R19335, R19336, R19337, R19338, R19339, R19340, R19341, R19342, R19343, R19344, R19345, R19346, R19347, R19348, R19349, R19350, R19351, R19352, R19353, R19354, R19355, R19356, R19357, R19358, R19359, R19360, R19361, R19362, R19363, R19364, R19365, R19366, R19367, R19368, R19369, R2, R20, R21, R22, R23, R24, R25, R26, R27, R3, R38, R4, R40, R42, R43, R46, R47, R48, R52, R53, R56, R57, R58, R62, R63, R66, R67, R68, R69, R8;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [73, 73];
  s0 -> s0 [74, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [73, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R2 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R11 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 72];
  s0 -> s0 [0, 65535] { R12 += 1 };
  s0 -> s2 [73, 73];
  s0 -> s1 [74, 65535];
  s1 -> s1 [0, 72];
  s1 -> s2 [73, 73];
  s1 -> s1 [74, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R21 += 1 };
  s0 -> s0 [0, 65535] { R20 += 1, R21 += 1 };
  s0 -> s2 [9, 13] { R21 += 1 };
  s0 -> s1 [14, 31] { R21 += 1 };
  s0 -> s2 [32, 32] { R21 += 1 };
  s0 -> s1 [33, 65535] { R21 += 1 };
  s1 -> s1 [0, 65535] { R21 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R21 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R22 += 1, R23 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R25 += 1 };
  s0 -> s0 [0, 65535] { R24 += 1, R25 += 1 };
  s0 -> s2 [9, 13] { R25 += 1 };
  s0 -> s1 [14, 31] { R25 += 1 };
  s0 -> s2 [32, 32] { R25 += 1 };
  s0 -> s1 [33, 65535] { R25 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R25 += 1 };
  s2 -> s1 [0, 65535] { R25 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R26 += 1, R27 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R19290 += 1, R19291 += 1 };
  s0 -> s1 [0, 65535] { R19291 += 1, R19 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R19291 += 1, R19 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 72] { R19293 += 1 };
  s0 -> s0 [0, 65535] { R19292 += 1, R19293 += 1 };
  s0 -> s2 [73, 73] { R19293 += 1 };
  s0 -> s3 [73, 73] { R19293 += 1 };
  s0 -> s1 [78, 65535] { R19293 += 1 };
  s1 -> s1 [0, 72] { R19293 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19293 += 1 };
  s1 -> s3 [73, 73] { R19293 += 1 };
  s1 -> s1 [78, 65535] { R19293 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 73] { R19293 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [78, 65535] { R19293 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 72] { R19295 += 1, R38 += 1 };
  s0 -> s0 [0, 65535] { R19294 += 1, R19295 += 1 };
  s0 -> s2 [73, 73] { R19295 += 1, R38 += 1 };
  s0 -> s3 [73, 73] { R19295 += 1, R38 += 1 };
  s0 -> s1 [74, 65535] { R19295 += 1, R38 += 1 };
  s1 -> s1 [0, 72] { R19295 += 1, R38 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19295 += 1, R38 += 1 };
  s1 -> s3 [73, 73] { R19295 += 1, R38 += 1 };
  s1 -> s1 [74, 65535] { R19295 += 1, R38 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R19295 += 1, R38 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 72] { R19297 += 1, R40 += 1 };
  s0 -> s0 [0, 65535] { R19296 += 1, R19297 += 1 };
  s0 -> s2 [73, 73] { R19297 += 1, R40 += 1 };
  s0 -> s3 [73, 73] { R19297 += 1, R40 += 1 };
  s0 -> s1 [74, 65535] { R19297 += 1, R40 += 1 };
  s1 -> s1 [0, 72] { R19297 += 1, R40 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19297 += 1, R40 += 1 };
  s1 -> s3 [73, 73] { R19297 += 1, R40 += 1 };
  s1 -> s1 [74, 65535] { R19297 += 1, R40 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R19297 += 1, R40 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 72] { R19299 += 1, R42 += 1, R43 += 1 };
  s0 -> s0 [0, 65535] { R19298 += 1, R19299 += 1 };
  s0 -> s2 [73, 73] { R19299 += 1, R42 += 1, R43 += 1 };
  s0 -> s3 [73, 73] { R19299 += 1, R42 += 1, R43 += 1 };
  s0 -> s1 [74, 65535] { R19299 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 72] { R19299 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19299 += 1, R42 += 1, R43 += 1 };
  s1 -> s3 [73, 73] { R19299 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [74, 65535] { R19299 += 1, R42 += 1, R43 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R19299 += 1, R42 += 1, R43 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 72] { R19301 += 1, R46 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R19300 += 1, R19301 += 1 };
  s0 -> s2 [73, 73] { R19301 += 1, R46 += 1, R47 += 1 };
  s0 -> s3 [73, 73] { R19301 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [74, 65535] { R19301 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 72] { R19301 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19301 += 1, R46 += 1, R47 += 1 };
  s1 -> s3 [73, 73] { R19301 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [74, 65535] { R19301 += 1, R46 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R19301 += 1, R46 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 72] { R19303 += 1, R52 += 1, R53 += 1 };
  s0 -> s0 [0, 65535] { R19302 += 1, R19303 += 1 };
  s0 -> s2 [73, 73] { R19303 += 1, R52 += 1, R53 += 1 };
  s0 -> s3 [73, 73] { R19303 += 1, R52 += 1, R53 += 1 };
  s0 -> s1 [74, 65535] { R19303 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 72] { R19303 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19303 += 1, R52 += 1, R53 += 1 };
  s1 -> s3 [73, 73] { R19303 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [74, 65535] { R19303 += 1, R52 += 1, R53 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R19303 += 1, R52 += 1, R53 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 72] { R19305 += 1, R56 += 1, R57 += 1 };
  s0 -> s0 [0, 65535] { R19304 += 1, R19305 += 1 };
  s0 -> s2 [73, 73] { R19305 += 1, R56 += 1, R57 += 1 };
  s0 -> s3 [73, 73] { R19305 += 1, R56 += 1, R57 += 1 };
  s0 -> s1 [74, 65535] { R19305 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 72] { R19305 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19305 += 1, R56 += 1, R57 += 1 };
  s1 -> s3 [73, 73] { R19305 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [74, 65535] { R19305 += 1, R56 += 1, R57 += 1 };
  s2 -> s2 [0, 65535] { R19305 += 1, R56 += 1, R57 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 72] { R19307 += 1, R62 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R19306 += 1, R19307 += 1 };
  s0 -> s2 [73, 73] { R19307 += 1, R62 += 1, R63 += 1 };
  s0 -> s3 [73, 73] { R19307 += 1, R62 += 1, R63 += 1 };
  s0 -> s1 [74, 65535] { R19307 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 72] { R19307 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19307 += 1, R62 += 1, R63 += 1 };
  s1 -> s3 [73, 73] { R19307 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [74, 65535] { R19307 += 1, R62 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R19307 += 1, R62 += 1, R63 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 72] { R19327 += 1 };
  s0 -> s0 [0, 65535] { R19326 += 1, R19327 += 1 };
  s0 -> s2 [73, 73] { R19327 += 1 };
  s0 -> s1 [74, 65535] { R19327 += 1 };
  s1 -> s1 [0, 72] { R19327 += 1 };
  s1 -> s2 [73, 73] { R19327 += 1 };
  s1 -> s1 [74, 65535] { R19327 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R19327 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R19328 += 1, R19329 += 1 };
  s0 -> s1 [0, 65535] { R19329 += 1, R1 += 1 };
  s1 -> s1 [0, 65535] { R19329 += 1, R1 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 72] { R19331 += 1 };
  s0 -> s0 [0, 65535] { R19330 += 1, R19331 += 1 };
  s0 -> s2 [0, 65535] { R19331 += 1, R8 += 1 };
  s0 -> s3 [73, 73] { R19331 += 1 };
  s0 -> s1 [74, 65535] { R19331 += 1 };
  s1 -> s1 [0, 72] { R19331 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [73, 73] { R19331 += 1 };
  s1 -> s1 [74, 65535] { R19331 += 1 };
  s2 -> s1 [0, 72] { R19331 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R19331 += 1, R8 += 1 };
  s2 -> s3 [73, 73] { R19331 += 1 };
  s2 -> s1 [74, 65535] { R19331 += 1 };
  s3 -> s3 [0, 65535] { R19331 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 72] { R19333 += 1, R19271 += 1 };
  s0 -> s0 [0, 65535] { R19332 += 1, R19333 += 1 };
  s0 -> s2 [0, 65535] { R19333 += 1, R19270 += 1, R19271 += 1 };
  s0 -> s1 [74, 65535] { R19333 += 1, R19271 += 1 };
  s1 -> s1 [0, 72] { R19333 += 1, R19271 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R19333 += 1 };
  s1 -> s1 [74, 65535] { R19333 += 1, R19271 += 1 };
  s2 -> s1 [0, 72] { R19333 += 1, R19271 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R19333 += 1, R19270 += 1, R19271 += 1 };
  s2 -> s1 [74, 65535] { R19333 += 1, R19271 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s0 [0, 65535] { R19334 += 1, R19335 += 1 };
  s0 -> s1 [0, 65535] { R19335 += 1, R19272 += 1, R19273 += 1 };
  s0 -> s2 [0, 65535] { R19335 += 1, R19273 += 1, R17 += 1 };
  s1 -> s1 [0, 65535] { R19335 += 1, R19272 += 1, R19273 += 1 };
  s1 -> s2 [0, 65535] { R19335 += 1, R19273 += 1, R17 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R19335 += 1, R19273 += 1, R17 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R19335 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19335 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 73] { R19337 += 1, R19275 += 1 };
  s0 -> s2 [0, 65535] { R19337 += 1, R19274 += 1, R19275 += 1 };
  s0 -> s0 [0, 65535] { R19336 += 1, R19337 += 1 };
  s0 -> s1 [77, 65535] { R19337 += 1, R19275 += 1 };
  s1 -> s1 [0, 73] { R19337 += 1, R19275 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R19337 += 1 };
  s1 -> s1 [77, 65535] { R19337 += 1, R19275 += 1 };
  s2 -> s1 [0, 73] { R19337 += 1, R19275 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R19337 += 1, R19274 += 1, R19275 += 1 };
  s2 -> s1 [77, 65535] { R19337 += 1, R19275 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R19339 += 1, R19276 += 1, R19277 += 1 };
  s0 -> s2 [0, 65535] { R19339 += 1, R19277 += 1, R67 += 1 };
  s0 -> s0 [0, 65535] { R19338 += 1, R19339 += 1 };
  s1 -> s1 [0, 65535] { R19339 += 1, R19276 += 1, R19277 += 1 };
  s1 -> s2 [0, 65535] { R19339 += 1, R19277 += 1, R67 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R19339 += 1 };
  s2 -> s2 [0, 65535] { R19339 += 1, R19277 += 1, R67 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R19339 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 76] { R19341 += 1, R19279 += 1 };
  s0 -> s2 [0, 65535] { R19341 += 1, R19279 += 1, R69 += 1 };
  s0 -> s3 [0, 65535] { R19341 += 1, R19278 += 1, R19279 += 1 };
  s0 -> s0 [0, 65535] { R19340 += 1, R19341 += 1 };
  s0 -> s1 [78, 65535] { R19341 += 1, R19279 += 1 };
  s1 -> s1 [0, 76] { R19341 += 1, R19279 += 1 };
  s1 -> s1 [0, 65535] { R19341 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [78, 65535] { R19341 += 1, R19279 += 1 };
  s2 -> s1 [0, 76] { R19341 += 1, R19279 += 1 };
  s2 -> s2 [0, 65535] { R19341 += 1, R19279 += 1, R69 += 1 };
  s2 -> s5 [0, 65535] { R19341 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [78, 65535] { R19341 += 1, R19279 += 1 };
  s3 -> s1 [0, 76] { R19341 += 1, R19279 += 1 };
  s3 -> s2 [0, 65535] { R19341 += 1, R19279 += 1, R69 += 1 };
  s3 -> s3 [0, 65535] { R19341 += 1, R19278 += 1, R19279 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [78, 65535] { R19341 += 1, R19279 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R19341 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 76] { R19343 += 1, R19281 += 1, R15335 += 1 };
  s0 -> s0 [0, 65535] { R19342 += 1, R19343 += 1 };
  s0 -> s1 [0, 65535] { R19343 += 1, R19281 += 1 };
  s0 -> s2 [0, 65535] { R19343 += 1, R19280 += 1, R19281 += 1 };
  s0 -> s1 [78, 65535] { R19343 += 1, R19281 += 1, R15335 += 1 };
  s1 -> s1 [0, 76] { R19343 += 1, R19281 += 1, R15335 += 1 };
  s1 -> s4 [0, 65535] { R19343 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R19343 += 1, R19281 += 1 };
  s1 -> s1 [78, 65535] { R19343 += 1, R19281 += 1, R15335 += 1 };
  s2 -> s1 [0, 76] { R19343 += 1, R19281 += 1, R15335 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R19343 += 1, R19281 += 1 };
  s2 -> s2 [0, 65535] { R19343 += 1, R19280 += 1, R19281 += 1 };
  s2 -> s1 [78, 65535] { R19343 += 1, R19281 += 1, R15335 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19343 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R19345 += 1, R19283 += 1, R15340 += 1, R15341 += 1 };
  s0 -> s2 [0, 65535] { R19345 += 1, R19282 += 1, R19283 += 1 };
  s0 -> s3 [0, 65535] { R19345 += 1, R19283 += 1, R15339 += 1, R15340 += 1 };
  s0 -> s0 [0, 65535] { R19344 += 1, R19345 += 1 };
  s1 -> s1 [0, 65535] { R19345 += 1, R19283 += 1, R15340 += 1, R15341 += 1 };
  s1 -> s4 [0, 65535] { R19345 += 1 };
  s1 -> s6 [0, 65535] { R19345 += 1, R19283 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R19345 += 1, R19283 += 1, R15340 += 1, R15341 += 1 };
  s2 -> s2 [0, 65535] { R19345 += 1, R19282 += 1, R19283 += 1 };
  s2 -> s3 [0, 65535] { R19345 += 1, R19283 += 1, R15339 += 1, R15340 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R19345 += 1, R19283 += 1, R15340 += 1, R15341 += 1 };
  s3 -> s4 [0, 65535] { R19345 += 1 };
  s3 -> s3 [0, 65535] { R19345 += 1, R19283 += 1, R15339 += 1, R15340 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R19345 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R19345 += 1 };
  s6 -> s6 [0, 65535] { R19345 += 1, R19283 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 77] { R19347 += 1, R19285 += 1, R19155 += 1 };
  s0 -> s2 [0, 65535] { R19347 += 1, R19284 += 1, R19285 += 1 };
  s0 -> s3 [0, 65535] { R19347 += 1, R19285 += 1, R19154 += 1, R19155 += 1 };
  s0 -> s0 [0, 65535] { R19346 += 1, R19347 += 1 };
  s0 -> s4 [78, 78] { R19347 += 1, R19285 += 1, R19155 += 1 };
  s0 -> s1 [79, 65535] { R19347 += 1, R19285 += 1, R19155 += 1 };
  s1 -> s1 [0, 77] { R19347 += 1, R19285 += 1, R19155 += 1 };
  s1 -> s4 [78, 78] { R19347 += 1, R19285 += 1, R19155 += 1 };
  s1 -> s1 [79, 65535] { R19347 += 1, R19285 += 1, R19155 += 1 };
  s2 -> s1 [0, 77] { R19347 += 1, R19285 += 1, R19155 += 1 };
  s2 -> s2 [0, 65535] { R19347 += 1, R19284 += 1, R19285 += 1 };
  s2 -> s3 [0, 65535] { R19347 += 1, R19285 += 1, R19154 += 1, R19155 += 1 };
  s2 -> s4 [78, 78] { R19347 += 1, R19285 += 1, R19155 += 1 };
  s2 -> s1 [79, 65535] { R19347 += 1, R19285 += 1, R19155 += 1 };
  s3 -> s1 [0, 77] { R19347 += 1, R19285 += 1, R19155 += 1 };
  s3 -> s3 [0, 65535] { R19347 += 1, R19285 += 1, R19154 += 1, R19155 += 1 };
  s3 -> s4 [78, 78] { R19347 += 1, R19285 += 1, R19155 += 1 };
  s3 -> s1 [79, 65535] { R19347 += 1, R19285 += 1, R19155 += 1 };
  s4 -> s5 [0, 65535] { R19347 += 1 };
  s4 -> s4 [0, 65535] { R19347 += 1, R19285 += 1, R19155 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R19347 += 1, R19285 += 1 };
  s5 -> s5 [0, 65535] { R19347 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R19347 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R19347 += 1, R19285 += 1 };
  accepting s4, s5, s6, s7;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R19349 += 1, R19286 += 1, R19287 += 1 };
  s0 -> s0 [0, 65535] { R19348 += 1, R19349 += 1 };
  s0 -> s2 [0, 65535] { R19349 += 1, R19287 += 1, R19159 += 1, R19160 += 1 };
  s0 -> s3 [0, 65535] { R19349 += 1, R19287 += 1, R19160 += 1, R19161 += 1 };
  s1 -> s1 [0, 65535] { R19349 += 1, R19286 += 1, R19287 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s2 [0, 65535] { R19349 += 1, R19287 += 1, R19159 += 1, R19160 += 1 };
  s1 -> s3 [0, 65535] { R19349 += 1, R19287 += 1, R19160 += 1, R19161 += 1 };
  s2 -> s4 [0, 65535] { R19349 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R19349 += 1, R19287 += 1, R19159 += 1, R19160 += 1 };
  s2 -> s3 [0, 65535] { R19349 += 1, R19287 += 1, R19160 += 1, R19161 += 1 };
  s3 -> s4 [0, 65535] { R19349 += 1 };
  s3 -> s5 [0, 65535] { R19349 += 1, R19287 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R19349 += 1, R19287 += 1, R19160 += 1, R19161 += 1 };
  s4 -> s4 [0, 65535] { R19349 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s4 [0, 65535] { R19349 += 1 };
  s5 -> s5 [0, 65535] { R19349 += 1, R19287 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 76] { R19351 += 1, R19289 += 1, R19269 += 1 };
  s0 -> s0 [0, 65535] { R19350 += 1, R19351 += 1 };
  s0 -> s1 [0, 65535] { R19351 += 1, R19289 += 1 };
  s0 -> s2 [0, 65535] { R19351 += 1, R19288 += 1, R19289 += 1 };
  s0 -> s3 [77, 77] { R19351 += 1, R19289 += 1, R19269 += 1 };
  s0 -> s4 [77, 77] { R19351 += 1, R19289 += 1, R19269 += 1 };
  s0 -> s1 [79, 65535] { R19351 += 1, R19289 += 1, R19269 += 1 };
  s1 -> s1 [0, 76] { R19351 += 1, R19289 += 1, R19269 += 1 };
  s1 -> s1 [0, 65535] { R19351 += 1, R19289 += 1 };
  s1 -> s5 [0, 65535] { R19351 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [77, 77] { R19351 += 1, R19289 += 1, R19269 += 1 };
  s1 -> s4 [77, 77] { R19351 += 1, R19289 += 1, R19269 += 1 };
  s1 -> s1 [79, 65535] { R19351 += 1, R19289 += 1, R19269 += 1 };
  s2 -> s1 [0, 76] { R19351 += 1, R19289 += 1, R19269 += 1 };
  s2 -> s1 [0, 65535] { R19351 += 1, R19289 += 1 };
  s2 -> s2 [0, 65535] { R19351 += 1, R19288 += 1, R19289 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [77, 77] { R19351 += 1, R19289 += 1, R19269 += 1 };
  s2 -> s4 [77, 77] { R19351 += 1, R19289 += 1, R19269 += 1 };
  s2 -> s1 [79, 65535] { R19351 += 1, R19289 += 1, R19269 += 1 };
  s3 -> s3 [0, 65535] { R19351 += 1, R19289 += 1 };
  s3 -> s5 [0, 65535] { R19351 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 77] { R19351 += 1, R19289 += 1, R19269 += 1 };
  s4 -> s4 [0, 65535] { R19351 += 1, R19289 += 1 };
  s4 -> s5 [0, 65535] { R19351 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [79, 65535] { R19351 += 1, R19289 += 1, R19269 += 1 };
  s5 -> s5 [0, 65535] { R19351 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R19353 += 1, R19309 += 1, R18 += 1 };
  s0 -> s2 [0, 65535] { R19353 += 1, R19308 += 1, R19309 += 1 };
  s0 -> s0 [0, 65535] { R19352 += 1, R19353 += 1 };
  s1 -> s1 [0, 65535] { R19353 += 1, R19309 += 1, R18 += 1 };
  s1 -> s4 [0, 65535] { R19353 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R19353 += 1, R19309 += 1, R18 += 1 };
  s2 -> s2 [0, 65535] { R19353 += 1, R19308 += 1, R19309 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19353 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 72] { R19355 += 1, R19311 += 1 };
  s0 -> s0 [0, 65535] { R19354 += 1, R19355 += 1 };
  s0 -> s2 [0, 65535] { R19355 += 1, R19310 += 1, R19311 += 1 };
  s0 -> s3 [73, 73] { R19355 += 1, R19311 += 1 };
  s0 -> s4 [73, 73] { R19355 += 1, R19311 += 1 };
  s0 -> s5 [77, 77] { R19355 += 1, R19311 += 1 };
  s0 -> s1 [78, 65535] { R19355 += 1, R19311 += 1 };
  s1 -> s1 [0, 72] { R19355 += 1, R19311 += 1 };
  s1 -> s3 [73, 73] { R19355 += 1, R19311 += 1 };
  s1 -> s4 [73, 73] { R19355 += 1, R19311 += 1 };
  s1 -> s5 [77, 77] { R19355 += 1, R19311 += 1 };
  s1 -> s1 [78, 65535] { R19355 += 1, R19311 += 1 };
  s2 -> s1 [0, 72] { R19355 += 1, R19311 += 1 };
  s2 -> s2 [0, 65535] { R19355 += 1, R19310 += 1, R19311 += 1 };
  s2 -> s3 [73, 73] { R19355 += 1, R19311 += 1 };
  s2 -> s4 [73, 73] { R19355 += 1, R19311 += 1 };
  s2 -> s5 [77, 77] { R19355 += 1, R19311 += 1 };
  s2 -> s1 [78, 65535] { R19355 += 1, R19311 += 1 };
  s4 -> s4 [0, 73] { R19355 += 1, R19311 += 1 };
  s4 -> s8 [77, 77] { R19355 += 1, R19311 += 1 };
  s4 -> s4 [78, 65535] { R19355 += 1, R19311 += 1 };
  s5 -> s5 [0, 72] { R19355 += 1, R19311 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R19355 += 1 };
  s5 -> s7 [73, 73] { R19355 += 1, R19311 += 1 };
  s5 -> s8 [73, 73] { R19355 += 1, R19311 += 1 };
  s5 -> s5 [77, 65535] { R19355 += 1, R19311 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R19355 += 1 };
  s8 -> s8 [0, 73] { R19355 += 1, R19311 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R19355 += 1 };
  s8 -> s8 [77, 65535] { R19355 += 1, R19311 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 72] { R19357 += 1, R19313 += 1, R66 += 1 };
  s0 -> s2 [0, 65535] { R19357 += 1, R19312 += 1, R19313 += 1 };
  s0 -> s0 [0, 65535] { R19356 += 1, R19357 += 1 };
  s0 -> s3 [73, 73] { R19357 += 1, R19313 += 1, R66 += 1 };
  s0 -> s4 [73, 73] { R19357 += 1, R19313 += 1, R66 += 1 };
  s0 -> s1 [74, 65535] { R19357 += 1, R19313 += 1, R66 += 1 };
  s1 -> s1 [0, 72] { R19357 += 1, R19313 += 1, R66 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R19357 += 1 };
  s1 -> s3 [73, 73] { R19357 += 1, R19313 += 1, R66 += 1 };
  s1 -> s4 [73, 73] { R19357 += 1, R19313 += 1, R66 += 1 };
  s1 -> s1 [74, 65535] { R19357 += 1, R19313 += 1, R66 += 1 };
  s2 -> s1 [0, 72] { R19357 += 1, R19313 += 1, R66 += 1 };
  s2 -> s2 [0, 65535] { R19357 += 1, R19312 += 1, R19313 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [73, 73] { R19357 += 1, R19313 += 1, R66 += 1 };
  s2 -> s4 [73, 73] { R19357 += 1, R19313 += 1, R66 += 1 };
  s2 -> s1 [74, 65535] { R19357 += 1, R19313 += 1, R66 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R19357 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R19357 += 1 };
  s4 -> s4 [0, 65535] { R19357 += 1, R19313 += 1, R66 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R19357 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 72] { R19359 += 1, R19315 += 1, R68 += 1 };
  s0 -> s2 [0, 65535] { R19359 += 1, R19314 += 1, R19315 += 1 };
  s0 -> s0 [0, 65535] { R19358 += 1, R19359 += 1 };
  s0 -> s3 [73, 73] { R19359 += 1, R19315 += 1, R68 += 1 };
  s0 -> s4 [73, 73] { R19359 += 1, R19315 += 1, R68 += 1 };
  s0 -> s1 [74, 65535] { R19359 += 1, R19315 += 1, R68 += 1 };
  s1 -> s1 [0, 72] { R19359 += 1, R19315 += 1, R68 += 1 };
  s1 -> s1 [0, 65535] { R19359 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [73, 73] { R19359 += 1, R19315 += 1, R68 += 1 };
  s1 -> s4 [73, 73] { R19359 += 1, R19315 += 1, R68 += 1 };
  s1 -> s1 [74, 65535] { R19359 += 1, R19315 += 1, R68 += 1 };
  s2 -> s1 [0, 72] { R19359 += 1, R19315 += 1, R68 += 1 };
  s2 -> s2 [0, 65535] { R19359 += 1, R19314 += 1, R19315 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [73, 73] { R19359 += 1, R19315 += 1, R68 += 1 };
  s2 -> s4 [73, 73] { R19359 += 1, R19315 += 1, R68 += 1 };
  s2 -> s1 [74, 65535] { R19359 += 1, R19315 += 1, R68 += 1 };
  s3 -> s3 [0, 65535] { R19359 += 1, R19315 += 1, R68 += 1 };
  s3 -> s6 [0, 65535] { R19359 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R19359 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R19359 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 72] { R19361 += 1, R19317 += 1, R15332 += 1, R15333 += 1 };
  s0 -> s2 [0, 72] { R19361 += 1, R19317 += 1, R15333 += 1 };
  s0 -> s3 [0, 65535] { R19361 += 1, R19316 += 1, R19317 += 1 };
  s0 -> s0 [0, 65535] { R19360 += 1, R19361 += 1 };
  s0 -> s4 [73, 73] { R19361 += 1, R19317 += 1, R15332 += 1, R15333 += 1 };
  s0 -> s5 [73, 73] { R19361 += 1, R19317 += 1, R15333 += 1 };
  s0 -> s6 [73, 73] { R19361 += 1, R19317 += 1, R15333 += 1 };
  s0 -> s7 [73, 73] { R19361 += 1, R19317 += 1, R15332 += 1, R15333 += 1 };
  s0 -> s2 [74, 76] { R19361 += 1, R19317 += 1, R15333 += 1 };
  s0 -> s1 [74, 65535] { R19361 += 1, R19317 += 1, R15332 += 1, R15333 += 1 };
  s0 -> s2 [78, 65535] { R19361 += 1, R19317 += 1, R15333 += 1 };
  s1 -> s1 [0, 72] { R19361 += 1, R19317 += 1, R15332 += 1, R15333 += 1 };
  s1 -> s2 [0, 72] { R19361 += 1, R19317 += 1, R15333 += 1 };
  s1 -> s4 [73, 73] { R19361 += 1, R19317 += 1, R15332 += 1, R15333 += 1 };
  s1 -> s5 [73, 73] { R19361 += 1, R19317 += 1, R15333 += 1 };
  s1 -> s6 [73, 73] { R19361 += 1, R19317 += 1, R15333 += 1 };
  s1 -> s7 [73, 73] { R19361 += 1, R19317 += 1, R15332 += 1, R15333 += 1 };
  s1 -> s2 [74, 76] { R19361 += 1, R19317 += 1, R15333 += 1 };
  s1 -> s1 [74, 65535] { R19361 += 1, R19317 += 1, R15332 += 1, R15333 += 1 };
  s1 -> s2 [78, 65535] { R19361 += 1, R19317 += 1, R15333 += 1 };
  s2 -> s2 [0, 72] { R19361 += 1, R19317 += 1, R15333 += 1 };
  s2 -> s9 [0, 65535];
  s2 -> s2 [0, 65535] { R19361 += 1 };
  s2 -> s5 [73, 73] { R19361 += 1, R19317 += 1 };
  s2 -> s6 [73, 73] { R19361 += 1, R19317 += 1 };
  s2 -> s2 [74, 76] { R19361 += 1, R19317 += 1, R15333 += 1 };
  s2 -> s2 [74, 65535] { R19361 += 1, R19317 += 1 };
  s2 -> s2 [78, 65535] { R19361 += 1, R19317 += 1, R15333 += 1 };
  s3 -> s1 [0, 72] { R19361 += 1, R19317 += 1, R15332 += 1, R15333 += 1 };
  s3 -> s2 [0, 72] { R19361 += 1, R19317 += 1, R15333 += 1 };
  s3 -> s3 [0, 65535] { R19361 += 1, R19316 += 1, R19317 += 1 };
  s3 -> s4 [73, 73] { R19361 += 1, R19317 += 1, R15332 += 1, R15333 += 1 };
  s3 -> s5 [73, 73] { R19361 += 1, R19317 += 1, R15333 += 1 };
  s3 -> s6 [73, 73] { R19361 += 1, R19317 += 1, R15333 += 1 };
  s3 -> s7 [73, 73] { R19361 += 1, R19317 += 1, R15332 += 1, R15333 += 1 };
  s3 -> s2 [74, 76] { R19361 += 1, R19317 += 1, R15333 += 1 };
  s3 -> s1 [74, 65535] { R19361 += 1, R19317 += 1, R15332 += 1, R15333 += 1 };
  s3 -> s2 [78, 65535] { R19361 += 1, R19317 += 1, R15333 += 1 };
  s5 -> s9 [0, 65535];
  s5 -> s5 [0, 65535] { R19361 += 1 };
  s6 -> s6 [0, 76] { R19361 += 1, R19317 += 1, R15333 += 1 };
  s6 -> s8 [0, 65535] { R19361 += 1 };
  s6 -> s9 [0, 65535];
  s6 -> s6 [0, 65535] { R19361 += 1, R19317 += 1 };
  s6 -> s6 [78, 65535] { R19361 += 1, R19317 += 1, R15333 += 1 };
  s7 -> s6 [0, 76] { R19361 += 1, R19317 += 1, R15333 += 1 };
  s7 -> s7 [0, 65535] { R19361 += 1, R19317 += 1, R15332 += 1, R15333 += 1 };
  s7 -> s6 [78, 65535] { R19361 += 1, R19317 += 1, R15333 += 1 };
  s8 -> s8 [0, 65535] { R19361 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  accepting s8, s5, s2, s9, s6;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 72] { R19363 += 1, R19319 += 1, R15336 += 1, R15337 += 1 };
  s0 -> s2 [0, 65535] { R19363 += 1, R19318 += 1, R19319 += 1 };
  s0 -> s0 [0, 65535] { R19362 += 1, R19363 += 1 };
  s0 -> s3 [73, 73] { R19363 += 1, R19319 += 1, R15336 += 1, R15337 += 1 };
  s0 -> s4 [73, 73] { R19363 += 1, R19319 += 1, R15336 += 1, R15337 += 1 };
  s0 -> s1 [74, 65535] { R19363 += 1, R19319 += 1, R15336 += 1, R15337 += 1 };
  s1 -> s1 [0, 72] { R19363 += 1, R19319 += 1, R15336 += 1, R15337 += 1 };
  s1 -> s1 [0, 65535] { R19363 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [73, 73] { R19363 += 1, R19319 += 1, R15336 += 1, R15337 += 1 };
  s1 -> s4 [73, 73] { R19363 += 1, R19319 += 1, R15336 += 1, R15337 += 1 };
  s1 -> s1 [74, 65535] { R19363 += 1, R19319 += 1, R15336 += 1, R15337 += 1 };
  s2 -> s1 [0, 72] { R19363 += 1, R19319 += 1, R15336 += 1, R15337 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R19363 += 1, R19318 += 1, R19319 += 1 };
  s2 -> s3 [73, 73] { R19363 += 1, R19319 += 1, R15336 += 1, R15337 += 1 };
  s2 -> s4 [73, 73] { R19363 += 1, R19319 += 1, R15336 += 1, R15337 += 1 };
  s2 -> s1 [74, 65535] { R19363 += 1, R19319 += 1, R15336 += 1, R15337 += 1 };
  s3 -> s3 [0, 65535] { R19363 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R19363 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R19363 += 1, R19319 += 1, R15336 += 1, R15337 += 1 };
  s5 -> s5 [0, 65535] { R19363 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 72] { R19365 += 1, R19321 += 1, R19152 += 1, R19153 += 1 };
  s0 -> s0 [0, 65535] { R19364 += 1, R19365 += 1 };
  s0 -> s2 [0, 65535] { R19365 += 1, R19320 += 1, R19321 += 1 };
  s0 -> s3 [73, 73] { R19365 += 1, R19321 += 1, R19152 += 1, R19153 += 1 };
  s0 -> s4 [73, 73] { R19365 += 1, R19321 += 1, R19152 += 1, R19153 += 1 };
  s0 -> s1 [74, 65535] { R19365 += 1, R19321 += 1, R19152 += 1, R19153 += 1 };
  s1 -> s1 [0, 72] { R19365 += 1, R19321 += 1, R19152 += 1, R19153 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R19365 += 1 };
  s1 -> s3 [73, 73] { R19365 += 1, R19321 += 1, R19152 += 1, R19153 += 1 };
  s1 -> s4 [73, 73] { R19365 += 1, R19321 += 1, R19152 += 1, R19153 += 1 };
  s1 -> s1 [74, 65535] { R19365 += 1, R19321 += 1, R19152 += 1, R19153 += 1 };
  s2 -> s1 [0, 72] { R19365 += 1, R19321 += 1, R19152 += 1, R19153 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R19365 += 1, R19320 += 1, R19321 += 1 };
  s2 -> s3 [73, 73] { R19365 += 1, R19321 += 1, R19152 += 1, R19153 += 1 };
  s2 -> s4 [73, 73] { R19365 += 1, R19321 += 1, R19152 += 1, R19153 += 1 };
  s2 -> s1 [74, 65535] { R19365 += 1, R19321 += 1, R19152 += 1, R19153 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R19365 += 1 };
  s3 -> s3 [0, 65535] { R19365 += 1, R19321 += 1, R19152 += 1, R19153 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R19365 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R19365 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 72] { R19367 += 1, R19323 += 1, R19156 += 1, R19157 += 1 };
  s0 -> s2 [0, 65535] { R19367 += 1, R19322 += 1, R19323 += 1 };
  s0 -> s0 [0, 65535] { R19366 += 1, R19367 += 1 };
  s0 -> s3 [73, 73] { R19367 += 1, R19323 += 1, R19156 += 1, R19157 += 1 };
  s0 -> s4 [73, 73] { R19367 += 1, R19323 += 1, R19156 += 1, R19157 += 1 };
  s0 -> s1 [74, 65535] { R19367 += 1, R19323 += 1, R19156 += 1, R19157 += 1 };
  s1 -> s1 [0, 72] { R19367 += 1, R19323 += 1, R19156 += 1, R19157 += 1 };
  s1 -> s1 [0, 65535] { R19367 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [73, 73] { R19367 += 1, R19323 += 1, R19156 += 1, R19157 += 1 };
  s1 -> s4 [73, 73] { R19367 += 1, R19323 += 1, R19156 += 1, R19157 += 1 };
  s1 -> s1 [74, 65535] { R19367 += 1, R19323 += 1, R19156 += 1, R19157 += 1 };
  s2 -> s1 [0, 72] { R19367 += 1, R19323 += 1, R19156 += 1, R19157 += 1 };
  s2 -> s2 [0, 65535] { R19367 += 1, R19322 += 1, R19323 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [73, 73] { R19367 += 1, R19323 += 1, R19156 += 1, R19157 += 1 };
  s2 -> s4 [73, 73] { R19367 += 1, R19323 += 1, R19156 += 1, R19157 += 1 };
  s2 -> s1 [74, 65535] { R19367 += 1, R19323 += 1, R19156 += 1, R19157 += 1 };
  s3 -> s3 [0, 65535] { R19367 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R19367 += 1, R19323 += 1, R19156 += 1, R19157 += 1 };
  s4 -> s5 [0, 65535] { R19367 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R19367 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 72] { R19369 += 1, R19325 += 1, R19267 += 1 };
  s0 -> s2 [0, 72] { R19369 += 1, R19325 += 1, R19266 += 1, R19267 += 1 };
  s0 -> s0 [0, 65535] { R19368 += 1, R19369 += 1 };
  s0 -> s3 [0, 65535] { R19369 += 1, R19324 += 1, R19325 += 1 };
  s0 -> s4 [73, 73] { R19369 += 1, R19325 += 1, R19266 += 1, R19267 += 1 };
  s0 -> s5 [73, 73] { R19369 += 1, R19325 += 1, R19266 += 1, R19267 += 1 };
  s0 -> s6 [73, 73] { R19369 += 1, R19325 += 1, R19267 += 1 };
  s0 -> s7 [73, 73] { R19369 += 1, R19325 += 1, R19267 += 1 };
  s0 -> s1 [74, 76] { R19369 += 1, R19325 += 1, R19267 += 1 };
  s0 -> s2 [74, 65535] { R19369 += 1, R19325 += 1, R19266 += 1, R19267 += 1 };
  s0 -> s1 [79, 65535] { R19369 += 1, R19325 += 1, R19267 += 1 };
  s1 -> s1 [0, 72] { R19369 += 1, R19325 += 1, R19267 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s1 [0, 65535] { R19369 += 1 };
  s1 -> s6 [73, 73] { R19369 += 1, R19325 += 1 };
  s1 -> s7 [73, 73] { R19369 += 1, R19325 += 1 };
  s1 -> s1 [74, 76] { R19369 += 1, R19325 += 1, R19267 += 1 };
  s1 -> s1 [74, 65535] { R19369 += 1, R19325 += 1 };
  s1 -> s1 [79, 65535] { R19369 += 1, R19325 += 1, R19267 += 1 };
  s2 -> s1 [0, 72] { R19369 += 1, R19325 += 1, R19267 += 1 };
  s2 -> s2 [0, 72] { R19369 += 1, R19325 += 1, R19266 += 1, R19267 += 1 };
  s2 -> s4 [73, 73] { R19369 += 1, R19325 += 1, R19266 += 1, R19267 += 1 };
  s2 -> s5 [73, 73] { R19369 += 1, R19325 += 1, R19266 += 1, R19267 += 1 };
  s2 -> s6 [73, 73] { R19369 += 1, R19325 += 1, R19267 += 1 };
  s2 -> s7 [73, 73] { R19369 += 1, R19325 += 1, R19267 += 1 };
  s2 -> s1 [74, 76] { R19369 += 1, R19325 += 1, R19267 += 1 };
  s2 -> s2 [74, 65535] { R19369 += 1, R19325 += 1, R19266 += 1, R19267 += 1 };
  s2 -> s1 [79, 65535] { R19369 += 1, R19325 += 1, R19267 += 1 };
  s3 -> s1 [0, 72] { R19369 += 1, R19325 += 1, R19267 += 1 };
  s3 -> s2 [0, 72] { R19369 += 1, R19325 += 1, R19266 += 1, R19267 += 1 };
  s3 -> s3 [0, 65535] { R19369 += 1, R19324 += 1, R19325 += 1 };
  s3 -> s4 [73, 73] { R19369 += 1, R19325 += 1, R19266 += 1, R19267 += 1 };
  s3 -> s5 [73, 73] { R19369 += 1, R19325 += 1, R19266 += 1, R19267 += 1 };
  s3 -> s6 [73, 73] { R19369 += 1, R19325 += 1, R19267 += 1 };
  s3 -> s7 [73, 73] { R19369 += 1, R19325 += 1, R19267 += 1 };
  s3 -> s1 [74, 76] { R19369 += 1, R19325 += 1, R19267 += 1 };
  s3 -> s2 [74, 65535] { R19369 += 1, R19325 += 1, R19266 += 1, R19267 += 1 };
  s3 -> s1 [79, 65535] { R19369 += 1, R19325 += 1, R19267 += 1 };
  s5 -> s6 [0, 76] { R19369 += 1, R19325 += 1, R19267 += 1 };
  s5 -> s5 [0, 65535] { R19369 += 1, R19325 += 1, R19266 += 1, R19267 += 1 };
  s5 -> s6 [79, 65535] { R19369 += 1, R19325 += 1, R19267 += 1 };
  s6 -> s6 [0, 76] { R19369 += 1, R19325 += 1, R19267 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R19369 += 1, R19325 += 1 };
  s6 -> s9 [0, 65535] { R19369 += 1 };
  s6 -> s6 [79, 65535] { R19369 += 1, R19325 += 1, R19267 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R19369 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R19369 += 1 };
  accepting s8, s9, s6, s1, s7;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [105, 105];
  accepting s1;
};
};
synchronised {  // Automata constraining P54
automaton P54_0 {
  init s0;
  s0 -> s1 [109, 109];
  accepting s1;
};
};
