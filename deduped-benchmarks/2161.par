// Parikh automata intersection problem, generated by OSTRICH+
counter int R1773, R1774, R1775, R1776, R1777, R1778, R1779, R1780, R1781, R1782, R1783, R1784, R1785, R1786, R1787, R1788, R1789, R1790, R1791, R1792, R1793, R1794, R1795, R1796, R1797, R1798, R1799, R18, R1800, R1801, R1802, R1803, R1804, R1805, R1806, R1807, R1808, R1809, R1810, R1811, R1812, R1813, R1814, R1815, R1816, R1817, R1818, R1819, R1820, R1821, R1822, R1823, R1824, R1825, R1826, R1827, R1828, R1829, R1830, R1831, R1832, R1833, R1834, R1835, R1836, R1837, R1838, R1839, R1840, R1841, R1842, R1843, R1844, R1845, R1846, R1847, R1848, R1849, R1850, R1851, R1852, R1853, R1854, R1855, R1856, R1857, R1858, R1859, R1860, R1861, R1862, R1863, R1864, R1865, R1866, R1867, R1868, R1869, R1870, R1871, R1872, R1873, R1874, R1875, R1876, R1877, R1878, R1879, R1880, R1881, R1882, R1883, R1884, R1885, R1886, R1887, R1888, R1889, R1890, R1891, R1892, R1893, R1894, R1895, R1896, R1897, R1898, R1899, R1900, R1901, R1902, R1903, R1904, R1905, R1906, R1907, R1908, R1909, R1910, R1911, R1912, R1913, R1914, R1915, R1916, R1917, R1918, R1919, R1920, R1921, R1922, R1923, R1924, R1925, R1926, R1927, R1928, R1929, R1930, R1931, R1932, R1933, R1934, R1935, R1936, R1937, R1938, R1939, R1940, R1941, R1942, R1943, R1944, R1945, R1946, R1947, R1948, R1949, R1950, R1951, R1952, R1953, R1954, R1955, R1956, R1957, R1958, R1959, R1960, R1961, R1962, R1963, R1964, R1965, R1966, R1967, R1968, R1969, R1970, R1971, R1972, R1973, R1974, R1975, R1976, R1977, R1978, R1979, R1980, R1981, R1982, R1983, R1984, R1985, R1986, R1987, R1988, R1989, R1990, R1991, R1992, R1993, R1994, R1995, R1996, R1997, R1998, R1999, R2000, R2001, R2002, R2003, R2004, R2005, R2006, R2007, R2008, R2009, R2010, R2011, R2012, R2013, R2014, R2015, R2016, R2017, R2018, R2019, R2020, R2021, R2022, R2023, R2024, R2025, R2026, R2027, R2028, R2029, R2030, R2031, R2032, R2033, R2034, R2035, R2036, R2037, R2038, R2039, R2040, R2041, R2042, R2043, R2044, R21, R27, R28, R29, R3, R30, R31, R32, R33, R34, R35, R36, R37, R38, R39, R4, R40, R41, R42, R4229, R4230, R4231, R4232, R4233, R4234, R4235, R4236, R4237, R4238, R4239, R4240, R4241, R4242, R43, R44, R4863, R4864, R4865, R4866, R4867, R4868, R4869, R4870, R4871, R4872, R4873, R4874, R4875, R4876, R4877, R4878, R4879, R4880, R4881, R4882, R4883, R4884, R4885, R4886, R4887, R4888, R4889, R4890, R4891, R4892, R4893, R4894, R4895, R4896, R4897, R4898, R4899, R4900, R4901, R4902, R4903, R4904, R4905, R4906, R4907, R4908, R4909, R4910, R4911, R4912, R4913, R4914, R4915, R4916, R4917, R4918, R4919, R4920, R4921, R4922, R4923, R4924, R4925, R4926, R4927, R4928, R4929, R4930, R4931, R4932, R4933, R4934, R4935, R4936, R4937, R4938, R4939, R4940, R4941, R4942, R4943, R4944, R4945, R4946, R4947, R4948, R4949, R4950, R4951, R4952, R4953, R4954, R4955, R4956, R4957, R4958, R4959, R4960, R4961, R4962, R4963, R4964, R4965, R4966, R4967, R4968, R4969, R4970, R4971, R4972, R4973, R4974, R4975, R4976, R4977, R4978, R4979, R4980, R4981, R4982, R4983, R4984, R4985, R4986, R4987, R4988, R4989, R4990, R4991, R4992, R4993, R4994, R4995, R4996, R4997, R4998, R4999, R5, R5000, R5001, R5002, R5003, R5004, R5005, R5006, R5007, R5008, R5009, R5010, R5011, R5012, R5013, R5014, R5015, R5016, R5017, R5018, R5019, R5020, R5021, R5022, R5023, R5024, R5025, R5026, R5027, R5028, R5029, R5030, R5031, R5032, R5033, R5034, R5035, R5036, R5037, R5038, R5039, R5040, R5041, R5042, R5043, R5044, R5045, R5046, R5047, R5048, R5049, R5050, R5051, R5052, R5053, R5054, R5055, R5056, R5057, R5058, R5059, R5060, R5061, R5062, R5063, R5064, R5065, R5066, R5067, R5068, R5069, R5070, R5071, R5072, R5073, R5074, R5075, R5076, R5077, R5078, R5079, R5080, R5081, R5082, R5083, R5084, R5085, R5086, R5087, R5088, R5089, R5090, R5091, R5092, R5093, R5094, R5095, R5096, R5097, R5098, R5099, R5100, R5101, R5102, R5103, R5104, R5105, R5106, R5107, R5108, R5109, R5110, R5111, R5112, R5113, R5114, R5115, R5116, R5117, R5118, R5119, R5120, R5121, R5122, R5123, R5124, R5125, R5126, R5127, R5128, R5129, R5130, R5131, R5132, R5133, R5134, R5135, R5136, R5137, R5138, R5139, R5140, R5141, R5142, R5143, R5144, R5145, R5146, R5147, R5148, R5149, R5150, R5151, R5152, R5153, R5154, R5155, R5156, R5157, R5158, R5159, R5160, R5161, R5162, R5163, R5164, R5165, R5166, R5167, R5168, R5169, R5170, R5171, R5172, R6, R7, R8;
synchronised {  // Automata constraining P6
automaton P6_0 {
  init s0;
  s0 -> s1 [99, 99];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R4 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R21 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R37 += 1, R38 += 1 };
  s0 -> s1 [9, 9] { R38 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 65535] { R40 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R39 += 1, R40 += 1 };
  s1 -> s1 [0, 65535] { R40 += 1, R7 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R42 += 1 };
  s0 -> s0 [0, 65535] { R41 += 1, R42 += 1 };
  s0 -> s2 [9, 13] { R42 += 1 };
  s0 -> s1 [14, 31] { R42 += 1 };
  s0 -> s2 [32, 32] { R42 += 1 };
  s0 -> s1 [33, 65535] { R42 += 1 };
  s1 -> s1 [0, 65535] { R42 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R42 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 65535] { R44 += 1, R8 += 1 };
  s0 -> s0 [0, 65535] { R43 += 1, R44 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R44 += 1, R8 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R5018 += 1 };
  s0 -> s0 [0, 65535] { R5017 += 1, R5018 += 1 };
  s0 -> s2 [67, 67] { R5018 += 1 };
  s0 -> s1 [68, 65535] { R5018 += 1 };
  s1 -> s1 [0, 64] { R5018 += 1 };
  s1 -> s2 [67, 67] { R5018 += 1 };
  s1 -> s1 [68, 65535] { R5018 += 1 };
  s2 -> s2 [0, 64] { R5018 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [67, 65535] { R5018 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R5020 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R5019 += 1, R5020 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R5020 += 1, R3 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 66] { R5022 += 1 };
  s0 -> s2 [0, 65535] { R5022 += 1, R18 += 1 };
  s0 -> s0 [0, 65535] { R5021 += 1, R5022 += 1 };
  s0 -> s3 [67, 67] { R5022 += 1 };
  s0 -> s1 [68, 65535] { R5022 += 1 };
  s1 -> s1 [0, 66] { R5022 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [67, 67] { R5022 += 1 };
  s1 -> s1 [68, 65535] { R5022 += 1 };
  s2 -> s1 [0, 66] { R5022 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R5022 += 1, R18 += 1 };
  s2 -> s3 [67, 67] { R5022 += 1 };
  s2 -> s1 [68, 65535] { R5022 += 1 };
  s3 -> s3 [0, 65535] { R5022 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R5024 += 1, R30 += 1 };
  s0 -> s2 [0, 65535] { R5024 += 1, R29 += 1, R30 += 1 };
  s0 -> s0 [0, 65535] { R5023 += 1, R5024 += 1 };
  s0 -> s3 [9, 13] { R5024 += 1, R30 += 1 };
  s0 -> s1 [14, 31] { R5024 += 1, R30 += 1 };
  s0 -> s3 [32, 32] { R5024 += 1, R30 += 1 };
  s0 -> s1 [33, 65535] { R5024 += 1, R30 += 1 };
  s1 -> s5 [0, 65535] { R5024 += 1 };
  s1 -> s1 [0, 65535] { R5024 += 1, R30 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 8] { R5024 += 1, R30 += 1 };
  s2 -> s2 [0, 65535] { R5024 += 1, R29 += 1, R30 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [9, 13] { R5024 += 1, R30 += 1 };
  s2 -> s1 [14, 31] { R5024 += 1, R30 += 1 };
  s2 -> s3 [32, 32] { R5024 += 1, R30 += 1 };
  s2 -> s1 [33, 65535] { R5024 += 1, R30 += 1 };
  s3 -> s1 [0, 65535] { R5024 += 1, R30 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5024 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s0 [0, 65535] { R5025 += 1, R5026 += 1 };
  s0 -> s1 [0, 65535] { R5026 += 1, R31 += 1, R32 += 1 };
  s0 -> s2 [0, 65535] { R5026 += 1, R32 += 1, R5 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R5026 += 1, R31 += 1, R32 += 1 };
  s1 -> s2 [0, 65535] { R5026 += 1, R32 += 1, R5 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R5026 += 1 };
  s2 -> s2 [0, 65535] { R5026 += 1, R32 += 1, R5 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5026 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R5028 += 1, R34 += 1 };
  s0 -> s2 [0, 65535] { R5028 += 1, R33 += 1, R34 += 1 };
  s0 -> s0 [0, 65535] { R5027 += 1, R5028 += 1 };
  s0 -> s3 [9, 13] { R5028 += 1, R34 += 1 };
  s0 -> s1 [14, 31] { R5028 += 1, R34 += 1 };
  s0 -> s3 [32, 32] { R5028 += 1, R34 += 1 };
  s0 -> s1 [33, 65535] { R5028 += 1, R34 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R5028 += 1 };
  s1 -> s1 [0, 65535] { R5028 += 1, R34 += 1 };
  s2 -> s1 [0, 8] { R5028 += 1, R34 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R5028 += 1, R33 += 1, R34 += 1 };
  s2 -> s3 [9, 13] { R5028 += 1, R34 += 1 };
  s2 -> s1 [14, 31] { R5028 += 1, R34 += 1 };
  s2 -> s3 [32, 32] { R5028 += 1, R34 += 1 };
  s2 -> s1 [33, 65535] { R5028 += 1, R34 += 1 };
  s3 -> s1 [0, 65535] { R5028 += 1, R34 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5028 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s0 [0, 65535] { R5029 += 1, R5030 += 1 };
  s0 -> s1 [0, 65535] { R5030 += 1, R35 += 1, R36 += 1 };
  s0 -> s2 [0, 65535] { R5030 += 1, R36 += 1, R6 += 1 };
  s1 -> s1 [0, 65535] { R5030 += 1, R35 += 1, R36 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R5030 += 1, R36 += 1, R6 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5030 += 1, R36 += 1, R6 += 1 };
  s2 -> s4 [0, 65535] { R5030 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5030 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 66] { R5032 += 1, R4876 += 1 };
  s0 -> s0 [0, 65535] { R5031 += 1, R5032 += 1 };
  s0 -> s2 [0, 65535] { R5032 += 1, R4875 += 1, R4876 += 1 };
  s0 -> s1 [68, 65535] { R5032 += 1, R4876 += 1 };
  s1 -> s1 [0, 66] { R5032 += 1, R4876 += 1 };
  s1 -> s1 [0, 65535] { R5032 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [68, 65535] { R5032 += 1, R4876 += 1 };
  s2 -> s1 [0, 66] { R5032 += 1, R4876 += 1 };
  s2 -> s2 [0, 65535] { R5032 += 1, R4875 += 1, R4876 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [68, 65535] { R5032 += 1, R4876 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 65535] { R5034 += 1, R4877 += 1, R4878 += 1 };
  s0 -> s2 [0, 65535] { R5034 += 1, R4878 += 1, R27 += 1 };
  s0 -> s0 [0, 65535] { R5033 += 1, R5034 += 1 };
  s1 -> s1 [0, 65535] { R5034 += 1, R4877 += 1, R4878 += 1 };
  s1 -> s2 [0, 65535] { R5034 += 1, R4878 += 1, R27 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5034 += 1, R4878 += 1, R27 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R5034 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5034 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 67] { R5036 += 1, R4880 += 1 };
  s0 -> s0 [0, 65535] { R5035 += 1, R5036 += 1 };
  s0 -> s2 [0, 65535] { R5036 += 1, R4879 += 1, R4880 += 1 };
  s0 -> s1 [70, 65535] { R5036 += 1, R4880 += 1 };
  s1 -> s1 [0, 67] { R5036 += 1, R4880 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R5036 += 1 };
  s1 -> s1 [70, 65535] { R5036 += 1, R4880 += 1 };
  s2 -> s1 [0, 67] { R5036 += 1, R4880 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5036 += 1, R4879 += 1, R4880 += 1 };
  s2 -> s1 [70, 65535] { R5036 += 1, R4880 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 65535] { R5038 += 1, R4881 += 1, R4882 += 1 };
  s0 -> s2 [0, 65535] { R5038 += 1, R4882 += 1, R1774 += 1 };
  s0 -> s0 [0, 65535] { R5037 += 1, R5038 += 1 };
  s1 -> s1 [0, 65535] { R5038 += 1, R4881 += 1, R4882 += 1 };
  s1 -> s2 [0, 65535] { R5038 += 1, R4882 += 1, R1774 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R5038 += 1 };
  s2 -> s2 [0, 65535] { R5038 += 1, R4882 += 1, R1774 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5038 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R5040 += 1, R4884 += 1 };
  s0 -> s2 [0, 65535] { R5040 += 1, R4883 += 1, R4884 += 1 };
  s0 -> s3 [0, 65535] { R5040 += 1, R4884 += 1, R1776 += 1 };
  s0 -> s0 [0, 65535] { R5039 += 1, R5040 += 1 };
  s0 -> s1 [71, 65535] { R5040 += 1, R4884 += 1 };
  s1 -> s1 [0, 69] { R5040 += 1, R4884 += 1 };
  s1 -> s1 [0, 65535] { R5040 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [71, 65535] { R5040 += 1, R4884 += 1 };
  s2 -> s1 [0, 69] { R5040 += 1, R4884 += 1 };
  s2 -> s2 [0, 65535] { R5040 += 1, R4883 += 1, R4884 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R5040 += 1, R4884 += 1, R1776 += 1 };
  s2 -> s1 [71, 65535] { R5040 += 1, R4884 += 1 };
  s3 -> s1 [0, 69] { R5040 += 1, R4884 += 1 };
  s3 -> s4 [0, 65535] { R5040 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5040 += 1, R4884 += 1, R1776 += 1 };
  s3 -> s1 [71, 65535] { R5040 += 1, R4884 += 1 };
  s4 -> s4 [0, 65535] { R5040 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 65535] { R5042 += 1, R4886 += 1, R1781 += 1, R1782 += 1 };
  s0 -> s0 [0, 65535] { R5041 += 1, R5042 += 1 };
  s0 -> s2 [0, 65535] { R5042 += 1, R4886 += 1, R1780 += 1, R1781 += 1 };
  s0 -> s3 [0, 65535] { R5042 += 1, R4885 += 1, R4886 += 1 };
  s1 -> s1 [0, 65535] { R5042 += 1, R4886 += 1, R1781 += 1, R1782 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R5042 += 1, R4886 += 1 };
  s1 -> s5 [0, 65535] { R5042 += 1 };
  s2 -> s1 [0, 65535] { R5042 += 1, R4886 += 1, R1781 += 1, R1782 += 1 };
  s2 -> s2 [0, 65535] { R5042 += 1, R4886 += 1, R1780 += 1, R1781 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R5042 += 1 };
  s3 -> s1 [0, 65535] { R5042 += 1, R4886 += 1, R1781 += 1, R1782 += 1 };
  s3 -> s2 [0, 65535] { R5042 += 1, R4886 += 1, R1780 += 1, R1781 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5042 += 1, R4885 += 1, R4886 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5042 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R5042 += 1, R4886 += 1 };
  s6 -> s5 [0, 65535] { R5042 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R5044 += 1, R4888 += 1, R1786 += 1 };
  s0 -> s2 [0, 65535] { R5044 += 1, R4888 += 1, R1785 += 1, R1786 += 1 };
  s0 -> s3 [0, 65535] { R5044 += 1, R4887 += 1, R4888 += 1 };
  s0 -> s0 [0, 65535] { R5043 += 1, R5044 += 1 };
  s0 -> s4 [70, 70] { R5044 += 1, R4888 += 1, R1786 += 1 };
  s0 -> s5 [70, 70] { R5044 += 1, R4888 += 1, R1786 += 1 };
  s0 -> s1 [77, 65535] { R5044 += 1, R4888 += 1, R1786 += 1 };
  s1 -> s1 [0, 69] { R5044 += 1, R4888 += 1, R1786 += 1 };
  s1 -> s1 [0, 65535] { R5044 += 1, R4888 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R5044 += 1 };
  s1 -> s4 [70, 70] { R5044 += 1, R4888 += 1, R1786 += 1 };
  s1 -> s5 [70, 70] { R5044 += 1, R4888 += 1, R1786 += 1 };
  s1 -> s1 [77, 65535] { R5044 += 1, R4888 += 1, R1786 += 1 };
  s2 -> s1 [0, 69] { R5044 += 1, R4888 += 1, R1786 += 1 };
  s2 -> s2 [0, 65535] { R5044 += 1, R4888 += 1, R1785 += 1, R1786 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R5044 += 1 };
  s2 -> s4 [70, 70] { R5044 += 1, R4888 += 1, R1786 += 1 };
  s2 -> s5 [70, 70] { R5044 += 1, R4888 += 1, R1786 += 1 };
  s2 -> s1 [77, 65535] { R5044 += 1, R4888 += 1, R1786 += 1 };
  s3 -> s1 [0, 69] { R5044 += 1, R4888 += 1, R1786 += 1 };
  s3 -> s2 [0, 65535] { R5044 += 1, R4888 += 1, R1785 += 1, R1786 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R5044 += 1, R4887 += 1, R4888 += 1 };
  s3 -> s4 [70, 70] { R5044 += 1, R4888 += 1, R1786 += 1 };
  s3 -> s5 [70, 70] { R5044 += 1, R4888 += 1, R1786 += 1 };
  s3 -> s1 [77, 65535] { R5044 += 1, R4888 += 1, R1786 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R5044 += 1 };
  s4 -> s4 [0, 65535] { R5044 += 1, R4888 += 1 };
  s5 -> s5 [0, 70] { R5044 += 1, R4888 += 1, R1786 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R5044 += 1 };
  s5 -> s5 [0, 65535] { R5044 += 1, R4888 += 1 };
  s5 -> s5 [77, 65535] { R5044 += 1, R4888 += 1, R1786 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5044 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R5046 += 1, R4890 += 1, R1791 += 1, R1792 += 1 };
  s0 -> s2 [0, 65535] { R5046 += 1, R4890 += 1, R1790 += 1, R1791 += 1 };
  s0 -> s0 [0, 65535] { R5045 += 1, R5046 += 1 };
  s0 -> s3 [0, 65535] { R5046 += 1, R4889 += 1, R4890 += 1 };
  s0 -> s4 [70, 70] { R5046 += 1, R4890 += 1, R1791 += 1, R1792 += 1 };
  s0 -> s5 [70, 70] { R5046 += 1, R4890 += 1, R1791 += 1, R1792 += 1 };
  s0 -> s1 [71, 65535] { R5046 += 1, R4890 += 1, R1791 += 1, R1792 += 1 };
  s1 -> s1 [0, 69] { R5046 += 1, R4890 += 1, R1791 += 1, R1792 += 1 };
  s1 -> s6 [0, 65535] { R5046 += 1 };
  s1 -> s1 [0, 65535] { R5046 += 1, R4890 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [70, 70] { R5046 += 1, R4890 += 1, R1791 += 1, R1792 += 1 };
  s1 -> s5 [70, 70] { R5046 += 1, R4890 += 1, R1791 += 1, R1792 += 1 };
  s1 -> s1 [71, 65535] { R5046 += 1, R4890 += 1, R1791 += 1, R1792 += 1 };
  s2 -> s1 [0, 69] { R5046 += 1, R4890 += 1, R1791 += 1, R1792 += 1 };
  s2 -> s2 [0, 65535] { R5046 += 1, R4890 += 1, R1790 += 1, R1791 += 1 };
  s2 -> s6 [0, 65535] { R5046 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [70, 70] { R5046 += 1, R4890 += 1, R1791 += 1, R1792 += 1 };
  s2 -> s5 [70, 70] { R5046 += 1, R4890 += 1, R1791 += 1, R1792 += 1 };
  s2 -> s1 [71, 65535] { R5046 += 1, R4890 += 1, R1791 += 1, R1792 += 1 };
  s3 -> s1 [0, 69] { R5046 += 1, R4890 += 1, R1791 += 1, R1792 += 1 };
  s3 -> s2 [0, 65535] { R5046 += 1, R4890 += 1, R1790 += 1, R1791 += 1 };
  s3 -> s3 [0, 65535] { R5046 += 1, R4889 += 1, R4890 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [70, 70] { R5046 += 1, R4890 += 1, R1791 += 1, R1792 += 1 };
  s3 -> s5 [70, 70] { R5046 += 1, R4890 += 1, R1791 += 1, R1792 += 1 };
  s3 -> s1 [71, 65535] { R5046 += 1, R4890 += 1, R1791 += 1, R1792 += 1 };
  s4 -> s6 [0, 65535] { R5046 += 1 };
  s4 -> s4 [0, 65535] { R5046 += 1, R4890 += 1, R1791 += 1, R1792 += 1 };
  s4 -> s8 [0, 65535] { R5046 += 1, R4890 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s6 [0, 65535] { R5046 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R5046 += 1, R4890 += 1 };
  s6 -> s6 [0, 65535] { R5046 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R5046 += 1 };
  s8 -> s8 [0, 65535] { R5046 += 1, R4890 += 1 };
  s8 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R5048 += 1, R4892 += 1, R1797 += 1, R1798 += 1 };
  s0 -> s2 [0, 65535] { R5048 += 1, R4892 += 1, R1796 += 1, R1797 += 1 };
  s0 -> s0 [0, 65535] { R5047 += 1, R5048 += 1 };
  s0 -> s3 [0, 65535] { R5048 += 1, R4891 += 1, R4892 += 1 };
  s0 -> s4 [70, 70] { R5048 += 1, R4892 += 1, R1797 += 1, R1798 += 1 };
  s0 -> s5 [70, 70] { R5048 += 1, R4892 += 1, R1797 += 1, R1798 += 1 };
  s0 -> s1 [71, 65535] { R5048 += 1, R4892 += 1, R1797 += 1, R1798 += 1 };
  s1 -> s1 [0, 69] { R5048 += 1, R4892 += 1, R1797 += 1, R1798 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R5048 += 1 };
  s1 -> s1 [0, 65535] { R5048 += 1, R4892 += 1 };
  s1 -> s4 [70, 70] { R5048 += 1, R4892 += 1, R1797 += 1, R1798 += 1 };
  s1 -> s5 [70, 70] { R5048 += 1, R4892 += 1, R1797 += 1, R1798 += 1 };
  s1 -> s1 [71, 65535] { R5048 += 1, R4892 += 1, R1797 += 1, R1798 += 1 };
  s2 -> s1 [0, 69] { R5048 += 1, R4892 += 1, R1797 += 1, R1798 += 1 };
  s2 -> s2 [0, 65535] { R5048 += 1, R4892 += 1, R1796 += 1, R1797 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R5048 += 1 };
  s2 -> s4 [70, 70] { R5048 += 1, R4892 += 1, R1797 += 1, R1798 += 1 };
  s2 -> s5 [70, 70] { R5048 += 1, R4892 += 1, R1797 += 1, R1798 += 1 };
  s2 -> s1 [71, 65535] { R5048 += 1, R4892 += 1, R1797 += 1, R1798 += 1 };
  s3 -> s1 [0, 69] { R5048 += 1, R4892 += 1, R1797 += 1, R1798 += 1 };
  s3 -> s2 [0, 65535] { R5048 += 1, R4892 += 1, R1796 += 1, R1797 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R5048 += 1, R4891 += 1, R4892 += 1 };
  s3 -> s4 [70, 70] { R5048 += 1, R4892 += 1, R1797 += 1, R1798 += 1 };
  s3 -> s5 [70, 70] { R5048 += 1, R4892 += 1, R1797 += 1, R1798 += 1 };
  s3 -> s1 [71, 65535] { R5048 += 1, R4892 += 1, R1797 += 1, R1798 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R5048 += 1 };
  s4 -> s4 [0, 65535] { R5048 += 1, R4892 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R5048 += 1 };
  s5 -> s5 [0, 65535] { R5048 += 1, R4892 += 1, R1797 += 1, R1798 += 1 };
  s5 -> s8 [0, 65535] { R5048 += 1, R4892 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5048 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R5048 += 1 };
  s8 -> s8 [0, 65535] { R5048 += 1, R4892 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 69] { R5050 += 1, R4894 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s0 -> s2 [0, 65535] { R5050 += 1, R4894 += 1, R1803 += 1, R1804 += 1 };
  s0 -> s0 [0, 65535] { R5049 += 1, R5050 += 1 };
  s0 -> s3 [0, 65535] { R5050 += 1, R4893 += 1, R4894 += 1 };
  s0 -> s4 [70, 70] { R5050 += 1, R4894 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s0 -> s5 [70, 70] { R5050 += 1, R4894 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s0 -> s1 [71, 65535] { R5050 += 1, R4894 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s1 -> s1 [0, 69] { R5050 += 1, R4894 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R5050 += 1, R4894 += 1 };
  s1 -> s7 [0, 65535] { R5050 += 1 };
  s1 -> s4 [70, 70] { R5050 += 1, R4894 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s1 -> s5 [70, 70] { R5050 += 1, R4894 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s1 -> s1 [71, 65535] { R5050 += 1, R4894 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s2 -> s1 [0, 69] { R5050 += 1, R4894 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R5050 += 1, R4894 += 1, R1803 += 1, R1804 += 1 };
  s2 -> s7 [0, 65535] { R5050 += 1 };
  s2 -> s4 [70, 70] { R5050 += 1, R4894 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s2 -> s5 [70, 70] { R5050 += 1, R4894 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s2 -> s1 [71, 65535] { R5050 += 1, R4894 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s3 -> s1 [0, 69] { R5050 += 1, R4894 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R5050 += 1, R4894 += 1, R1803 += 1, R1804 += 1 };
  s3 -> s3 [0, 65535] { R5050 += 1, R4893 += 1, R4894 += 1 };
  s3 -> s4 [70, 70] { R5050 += 1, R4894 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s3 -> s5 [70, 70] { R5050 += 1, R4894 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s3 -> s1 [71, 65535] { R5050 += 1, R4894 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s4 -> s4 [0, 65535] { R5050 += 1, R4894 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R5050 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R5050 += 1 };
  s5 -> s5 [0, 65535] { R5050 += 1, R4894 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s5 -> s8 [0, 65535] { R5050 += 1, R4894 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5050 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R5050 += 1 };
  s8 -> s8 [0, 65535] { R5050 += 1, R4894 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R5052 += 1, R4896 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s0 -> s2 [0, 65535] { R5052 += 1, R4895 += 1, R4896 += 1 };
  s0 -> s3 [0, 65535] { R5052 += 1, R4896 += 1, R1812 += 1, R1813 += 1 };
  s0 -> s0 [0, 65535] { R5051 += 1, R5052 += 1 };
  s0 -> s4 [70, 70] { R5052 += 1, R4896 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s0 -> s5 [70, 70] { R5052 += 1, R4896 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s0 -> s1 [71, 65535] { R5052 += 1, R4896 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s1 -> s1 [0, 69] { R5052 += 1, R4896 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s1 -> s1 [0, 65535] { R5052 += 1, R4896 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R5052 += 1 };
  s1 -> s4 [70, 70] { R5052 += 1, R4896 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s1 -> s5 [70, 70] { R5052 += 1, R4896 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s1 -> s1 [71, 65535] { R5052 += 1, R4896 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s2 -> s1 [0, 69] { R5052 += 1, R4896 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s2 -> s2 [0, 65535] { R5052 += 1, R4895 += 1, R4896 += 1 };
  s2 -> s3 [0, 65535] { R5052 += 1, R4896 += 1, R1812 += 1, R1813 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [70, 70] { R5052 += 1, R4896 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s2 -> s5 [70, 70] { R5052 += 1, R4896 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s2 -> s1 [71, 65535] { R5052 += 1, R4896 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s3 -> s1 [0, 69] { R5052 += 1, R4896 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s3 -> s3 [0, 65535] { R5052 += 1, R4896 += 1, R1812 += 1, R1813 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R5052 += 1 };
  s3 -> s4 [70, 70] { R5052 += 1, R4896 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s3 -> s5 [70, 70] { R5052 += 1, R4896 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s3 -> s1 [71, 65535] { R5052 += 1, R4896 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s4 -> s4 [0, 65535] { R5052 += 1, R4896 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s8 [0, 65535] { R5052 += 1, R4896 += 1 };
  s4 -> s7 [0, 65535] { R5052 += 1 };
  s5 -> s5 [0, 65535] { R5052 += 1, R4896 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R5052 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5052 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R5052 += 1, R4896 += 1 };
  s8 -> s7 [0, 65535] { R5052 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R5054 += 1, R4898 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s0 -> s2 [0, 65535] { R5054 += 1, R4898 += 1, R1821 += 1, R1822 += 1 };
  s0 -> s3 [0, 65535] { R5054 += 1, R4897 += 1, R4898 += 1 };
  s0 -> s0 [0, 65535] { R5053 += 1, R5054 += 1 };
  s0 -> s4 [70, 70] { R5054 += 1, R4898 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s0 -> s5 [70, 70] { R5054 += 1, R4898 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s0 -> s1 [71, 65535] { R5054 += 1, R4898 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s1 -> s1 [0, 69] { R5054 += 1, R4898 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R5054 += 1, R4898 += 1 };
  s1 -> s7 [0, 65535] { R5054 += 1 };
  s1 -> s4 [70, 70] { R5054 += 1, R4898 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s1 -> s5 [70, 70] { R5054 += 1, R4898 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s1 -> s1 [71, 65535] { R5054 += 1, R4898 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s2 -> s1 [0, 69] { R5054 += 1, R4898 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R5054 += 1, R4898 += 1, R1821 += 1, R1822 += 1 };
  s2 -> s7 [0, 65535] { R5054 += 1 };
  s2 -> s4 [70, 70] { R5054 += 1, R4898 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s2 -> s5 [70, 70] { R5054 += 1, R4898 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s2 -> s1 [71, 65535] { R5054 += 1, R4898 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s3 -> s1 [0, 69] { R5054 += 1, R4898 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R5054 += 1, R4898 += 1, R1821 += 1, R1822 += 1 };
  s3 -> s3 [0, 65535] { R5054 += 1, R4897 += 1, R4898 += 1 };
  s3 -> s4 [70, 70] { R5054 += 1, R4898 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s3 -> s5 [70, 70] { R5054 += 1, R4898 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s3 -> s1 [71, 65535] { R5054 += 1, R4898 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s8 [0, 65535] { R5054 += 1, R4898 += 1 };
  s4 -> s4 [0, 65535] { R5054 += 1, R4898 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s4 -> s7 [0, 65535] { R5054 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R5054 += 1, R4898 += 1 };
  s5 -> s7 [0, 65535] { R5054 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5054 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R5054 += 1, R4898 += 1 };
  s8 -> s7 [0, 65535] { R5054 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 69] { R5056 += 1, R4900 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s0 -> s2 [0, 65535] { R5056 += 1, R4900 += 1, R1830 += 1, R1831 += 1 };
  s0 -> s3 [0, 65535] { R5056 += 1, R4899 += 1, R4900 += 1 };
  s0 -> s0 [0, 65535] { R5055 += 1, R5056 += 1 };
  s0 -> s4 [70, 70] { R5056 += 1, R4900 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s0 -> s5 [70, 70] { R5056 += 1, R4900 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s0 -> s1 [71, 65535] { R5056 += 1, R4900 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s1 -> s1 [0, 69] { R5056 += 1, R4900 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s1 -> s1 [0, 65535] { R5056 += 1, R4900 += 1 };
  s1 -> s6 [0, 65535] { R5056 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [70, 70] { R5056 += 1, R4900 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s1 -> s5 [70, 70] { R5056 += 1, R4900 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s1 -> s1 [71, 65535] { R5056 += 1, R4900 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s2 -> s1 [0, 69] { R5056 += 1, R4900 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s2 -> s2 [0, 65535] { R5056 += 1, R4900 += 1, R1830 += 1, R1831 += 1 };
  s2 -> s6 [0, 65535] { R5056 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [70, 70] { R5056 += 1, R4900 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s2 -> s5 [70, 70] { R5056 += 1, R4900 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s2 -> s1 [71, 65535] { R5056 += 1, R4900 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s3 -> s1 [0, 69] { R5056 += 1, R4900 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s3 -> s2 [0, 65535] { R5056 += 1, R4900 += 1, R1830 += 1, R1831 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R5056 += 1, R4899 += 1, R4900 += 1 };
  s3 -> s4 [70, 70] { R5056 += 1, R4900 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s3 -> s5 [70, 70] { R5056 += 1, R4900 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s3 -> s1 [71, 65535] { R5056 += 1, R4900 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s4 -> s4 [0, 65535] { R5056 += 1, R4900 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s4 -> s8 [0, 65535] { R5056 += 1, R4900 += 1 };
  s4 -> s6 [0, 65535] { R5056 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R5056 += 1, R4900 += 1 };
  s5 -> s6 [0, 65535] { R5056 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R5056 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R5056 += 1, R4900 += 1 };
  s8 -> s6 [0, 65535] { R5056 += 1 };
  s8 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 69] { R5058 += 1, R4902 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s0 -> s0 [0, 65535] { R5057 += 1, R5058 += 1 };
  s0 -> s2 [0, 65535] { R5058 += 1, R4901 += 1, R4902 += 1 };
  s0 -> s3 [0, 65535] { R5058 += 1, R4902 += 1, R1839 += 1, R1840 += 1 };
  s0 -> s4 [70, 70] { R5058 += 1, R4902 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s0 -> s5 [70, 70] { R5058 += 1, R4902 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s0 -> s1 [71, 65535] { R5058 += 1, R4902 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s1 -> s1 [0, 69] { R5058 += 1, R4902 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R5058 += 1, R4902 += 1 };
  s1 -> s7 [0, 65535] { R5058 += 1 };
  s1 -> s4 [70, 70] { R5058 += 1, R4902 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s1 -> s5 [70, 70] { R5058 += 1, R4902 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s1 -> s1 [71, 65535] { R5058 += 1, R4902 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s2 -> s1 [0, 69] { R5058 += 1, R4902 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R5058 += 1, R4901 += 1, R4902 += 1 };
  s2 -> s3 [0, 65535] { R5058 += 1, R4902 += 1, R1839 += 1, R1840 += 1 };
  s2 -> s4 [70, 70] { R5058 += 1, R4902 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s2 -> s5 [70, 70] { R5058 += 1, R4902 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s2 -> s1 [71, 65535] { R5058 += 1, R4902 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s3 -> s1 [0, 69] { R5058 += 1, R4902 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R5058 += 1, R4902 += 1, R1839 += 1, R1840 += 1 };
  s3 -> s7 [0, 65535] { R5058 += 1 };
  s3 -> s4 [70, 70] { R5058 += 1, R4902 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s3 -> s5 [70, 70] { R5058 += 1, R4902 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s3 -> s1 [71, 65535] { R5058 += 1, R4902 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s4 -> s4 [0, 65535] { R5058 += 1, R4902 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R5058 += 1 };
  s5 -> s5 [0, 65535] { R5058 += 1, R4902 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R5058 += 1 };
  s5 -> s8 [0, 65535] { R5058 += 1, R4902 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5058 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R5058 += 1 };
  s8 -> s8 [0, 65535] { R5058 += 1, R4902 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 69] { R5060 += 1, R4904 += 1, R1846 += 1 };
  s0 -> s2 [0, 65535] { R5060 += 1, R4904 += 1, R1845 += 1, R1846 += 1 };
  s0 -> s3 [0, 65535] { R5060 += 1, R4903 += 1, R4904 += 1 };
  s0 -> s0 [0, 65535] { R5059 += 1, R5060 += 1 };
  s0 -> s4 [70, 70] { R5060 += 1, R4904 += 1, R1846 += 1 };
  s0 -> s1 [71, 65535] { R5060 += 1, R4904 += 1, R1846 += 1 };
  s1 -> s1 [0, 69] { R5060 += 1, R4904 += 1, R1846 += 1 };
  s1 -> s4 [70, 70] { R5060 += 1, R4904 += 1, R1846 += 1 };
  s1 -> s1 [71, 65535] { R5060 += 1, R4904 += 1, R1846 += 1 };
  s2 -> s1 [0, 69] { R5060 += 1, R4904 += 1, R1846 += 1 };
  s2 -> s2 [0, 65535] { R5060 += 1, R4904 += 1, R1845 += 1, R1846 += 1 };
  s2 -> s4 [70, 70] { R5060 += 1, R4904 += 1, R1846 += 1 };
  s2 -> s1 [71, 65535] { R5060 += 1, R4904 += 1, R1846 += 1 };
  s3 -> s1 [0, 69] { R5060 += 1, R4904 += 1, R1846 += 1 };
  s3 -> s2 [0, 65535] { R5060 += 1, R4904 += 1, R1845 += 1, R1846 += 1 };
  s3 -> s3 [0, 65535] { R5060 += 1, R4903 += 1, R4904 += 1 };
  s3 -> s4 [70, 70] { R5060 += 1, R4904 += 1, R1846 += 1 };
  s3 -> s1 [71, 65535] { R5060 += 1, R4904 += 1, R1846 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5060 += 1, R4904 += 1, R1846 += 1 };
  s4 -> s6 [0, 65535] { R5060 += 1 };
  s4 -> s7 [0, 65535] { R5060 += 1, R4904 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5060 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R5060 += 1 };
  s7 -> s7 [0, 65535] { R5060 += 1, R4904 += 1 };
  accepting s4, s5, s6, s7;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R5062 += 1, R4906 += 1, R1850 += 1, R1851 += 1 };
  s0 -> s2 [0, 65535] { R5062 += 1, R4905 += 1, R4906 += 1 };
  s0 -> s3 [0, 65535] { R5062 += 1, R4906 += 1, R1851 += 1, R1852 += 1 };
  s0 -> s0 [0, 65535] { R5061 += 1, R5062 += 1 };
  s1 -> s1 [0, 65535] { R5062 += 1, R4906 += 1, R1850 += 1, R1851 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R5062 += 1, R4906 += 1, R1851 += 1, R1852 += 1 };
  s1 -> s6 [0, 65535] { R5062 += 1 };
  s2 -> s1 [0, 65535] { R5062 += 1, R4906 += 1, R1850 += 1, R1851 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5062 += 1, R4905 += 1, R4906 += 1 };
  s2 -> s3 [0, 65535] { R5062 += 1, R4906 += 1, R1851 += 1, R1852 += 1 };
  s3 -> s4 [0, 65535] { R5062 += 1, R4906 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5062 += 1, R4906 += 1, R1851 += 1, R1852 += 1 };
  s3 -> s6 [0, 65535] { R5062 += 1 };
  s4 -> s4 [0, 65535] { R5062 += 1, R4906 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5062 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5062 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 69] { R5064 += 1, R4908 += 1, R1857 += 1 };
  s0 -> s2 [0, 65535] { R5064 += 1, R4908 += 1, R1857 += 1, R1858 += 1 };
  s0 -> s3 [0, 65535] { R5064 += 1, R4908 += 1, R1856 += 1, R1857 += 1 };
  s0 -> s4 [0, 65535] { R5064 += 1, R4907 += 1, R4908 += 1 };
  s0 -> s0 [0, 65535] { R5063 += 1, R5064 += 1 };
  s0 -> s1 [71, 65535] { R5064 += 1, R4908 += 1, R1857 += 1 };
  s1 -> s1 [0, 69] { R5064 += 1, R4908 += 1, R1857 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R5064 += 1 };
  s1 -> s1 [0, 65535] { R5064 += 1, R4908 += 1 };
  s1 -> s1 [71, 65535] { R5064 += 1, R4908 += 1, R1857 += 1 };
  s2 -> s1 [0, 69] { R5064 += 1, R4908 += 1, R1857 += 1 };
  s2 -> s2 [0, 65535] { R5064 += 1, R4908 += 1, R1857 += 1, R1858 += 1 };
  s2 -> s7 [0, 65535] { R5064 += 1, R4908 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R5064 += 1 };
  s2 -> s1 [71, 65535] { R5064 += 1, R4908 += 1, R1857 += 1 };
  s3 -> s1 [0, 69] { R5064 += 1, R4908 += 1, R1857 += 1 };
  s3 -> s2 [0, 65535] { R5064 += 1, R4908 += 1, R1857 += 1, R1858 += 1 };
  s3 -> s3 [0, 65535] { R5064 += 1, R4908 += 1, R1856 += 1, R1857 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R5064 += 1 };
  s3 -> s1 [71, 65535] { R5064 += 1, R4908 += 1, R1857 += 1 };
  s4 -> s1 [0, 69] { R5064 += 1, R4908 += 1, R1857 += 1 };
  s4 -> s2 [0, 65535] { R5064 += 1, R4908 += 1, R1857 += 1, R1858 += 1 };
  s4 -> s3 [0, 65535] { R5064 += 1, R4908 += 1, R1856 += 1, R1857 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5064 += 1, R4907 += 1, R4908 += 1 };
  s4 -> s1 [71, 65535] { R5064 += 1, R4908 += 1, R1857 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5064 += 1 };
  s7 -> s7 [0, 65535] { R5064 += 1, R4908 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R5064 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R5066 += 1, R4910 += 1, R1864 += 1, R1866 += 1 };
  s0 -> s2 [0, 65535] { R5066 += 1, R4909 += 1, R4910 += 1 };
  s0 -> s0 [0, 65535] { R5065 += 1, R5066 += 1 };
  s0 -> s3 [0, 65535] { R5066 += 1, R4910 += 1, R1864 += 1, R1865 += 1, R1866 += 1 };
  s0 -> s4 [0, 65535] { R5066 += 1, R4910 += 1, R1863 += 1, R1864 += 1 };
  s0 -> s1 [71, 65535] { R5066 += 1, R4910 += 1, R1864 += 1, R1866 += 1 };
  s1 -> s1 [0, 69] { R5066 += 1, R4910 += 1, R1864 += 1, R1866 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R5066 += 1 };
  s1 -> s1 [0, 65535] { R5066 += 1, R4910 += 1, R1864 += 1 };
  s1 -> s7 [0, 65535] { R5066 += 1, R4910 += 1 };
  s1 -> s1 [71, 65535] { R5066 += 1, R4910 += 1, R1864 += 1, R1866 += 1 };
  s2 -> s1 [0, 69] { R5066 += 1, R4910 += 1, R1864 += 1, R1866 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5066 += 1, R4909 += 1, R4910 += 1 };
  s2 -> s3 [0, 65535] { R5066 += 1, R4910 += 1, R1864 += 1, R1865 += 1, R1866 += 1 };
  s2 -> s4 [0, 65535] { R5066 += 1, R4910 += 1, R1863 += 1, R1864 += 1 };
  s2 -> s1 [71, 65535] { R5066 += 1, R4910 += 1, R1864 += 1, R1866 += 1 };
  s3 -> s1 [0, 69] { R5066 += 1, R4910 += 1, R1864 += 1, R1866 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R5066 += 1 };
  s3 -> s3 [0, 65535] { R5066 += 1, R4910 += 1, R1864 += 1, R1865 += 1, R1866 += 1 };
  s3 -> s7 [0, 65535] { R5066 += 1, R4910 += 1 };
  s3 -> s1 [71, 65535] { R5066 += 1, R4910 += 1, R1864 += 1, R1866 += 1 };
  s4 -> s1 [0, 69] { R5066 += 1, R4910 += 1, R1864 += 1, R1866 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5066 += 1 };
  s4 -> s3 [0, 65535] { R5066 += 1, R4910 += 1, R1864 += 1, R1865 += 1, R1866 += 1 };
  s4 -> s4 [0, 65535] { R5066 += 1, R4910 += 1, R1863 += 1, R1864 += 1 };
  s4 -> s1 [71, 65535] { R5066 += 1, R4910 += 1, R1864 += 1, R1866 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5066 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R5066 += 1 };
  s7 -> s7 [0, 65535] { R5066 += 1, R4910 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R5068 += 1, R4912 += 1, R1873 += 1, R1874 += 1, R1875 += 1 };
  s0 -> s2 [0, 65535] { R5068 += 1, R4911 += 1, R4912 += 1 };
  s0 -> s0 [0, 65535] { R5067 += 1, R5068 += 1 };
  s0 -> s3 [0, 65535] { R5068 += 1, R4912 += 1, R1873 += 1, R1875 += 1, R1876 += 1 };
  s0 -> s4 [0, 65535] { R5068 += 1, R4912 += 1, R1872 += 1, R1873 += 1 };
  s1 -> s1 [0, 65535] { R5068 += 1, R4912 += 1, R1873 += 1, R1874 += 1, R1875 += 1 };
  s1 -> s5 [0, 65535] { R5068 += 1 };
  s1 -> s7 [0, 65535] { R5068 += 1, R4912 += 1 };
  s1 -> s3 [0, 65535] { R5068 += 1, R4912 += 1, R1873 += 1, R1875 += 1, R1876 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s1 [0, 65535] { R5068 += 1, R4912 += 1, R1873 += 1, R1874 += 1, R1875 += 1 };
  s2 -> s2 [0, 65535] { R5068 += 1, R4911 += 1, R4912 += 1 };
  s2 -> s3 [0, 65535] { R5068 += 1, R4912 += 1, R1873 += 1, R1875 += 1, R1876 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [0, 65535] { R5068 += 1, R4912 += 1, R1872 += 1, R1873 += 1 };
  s3 -> s5 [0, 65535] { R5068 += 1 };
  s3 -> s7 [0, 65535] { R5068 += 1, R4912 += 1 };
  s3 -> s3 [0, 65535] { R5068 += 1, R4912 += 1, R1873 += 1, R1875 += 1, R1876 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s8 [0, 65535] { R5068 += 1, R4912 += 1, R1873 += 1 };
  s4 -> s1 [0, 65535] { R5068 += 1, R4912 += 1, R1873 += 1, R1874 += 1, R1875 += 1 };
  s4 -> s5 [0, 65535] { R5068 += 1 };
  s4 -> s3 [0, 65535] { R5068 += 1, R4912 += 1, R1873 += 1, R1875 += 1, R1876 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R5068 += 1, R4912 += 1, R1872 += 1, R1873 += 1 };
  s5 -> s5 [0, 65535] { R5068 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R5068 += 1 };
  s7 -> s7 [0, 65535] { R5068 += 1, R4912 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s5 [0, 65535] { R5068 += 1 };
  s8 -> s7 [0, 65535] { R5068 += 1, R4912 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R5068 += 1, R4912 += 1, R1873 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 70] { R5070 += 1, R4914 += 1, R1882 += 1, R1884 += 1 };
  s0 -> s0 [0, 65535] { R5069 += 1, R5070 += 1 };
  s0 -> s2 [0, 65535] { R5070 += 1, R4914 += 1, R1882 += 1, R1883 += 1, R1884 += 1 };
  s0 -> s3 [0, 65535] { R5070 += 1, R4914 += 1, R1881 += 1, R1882 += 1 };
  s0 -> s4 [0, 65535] { R5070 += 1, R4913 += 1, R4914 += 1 };
  s0 -> s1 [76, 65535] { R5070 += 1, R4914 += 1, R1882 += 1, R1884 += 1 };
  s1 -> s1 [0, 70] { R5070 += 1, R4914 += 1, R1882 += 1, R1884 += 1 };
  s1 -> s6 [0, 65535] { R5070 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5070 += 1, R4914 += 1, R1882 += 1 };
  s1 -> s7 [0, 65535] { R5070 += 1, R4914 += 1 };
  s1 -> s1 [76, 65535] { R5070 += 1, R4914 += 1, R1882 += 1, R1884 += 1 };
  s2 -> s1 [0, 70] { R5070 += 1, R4914 += 1, R1882 += 1, R1884 += 1 };
  s2 -> s6 [0, 65535] { R5070 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5070 += 1, R4914 += 1, R1882 += 1, R1883 += 1, R1884 += 1 };
  s2 -> s7 [0, 65535] { R5070 += 1, R4914 += 1 };
  s2 -> s1 [76, 65535] { R5070 += 1, R4914 += 1, R1882 += 1, R1884 += 1 };
  s3 -> s1 [0, 70] { R5070 += 1, R4914 += 1, R1882 += 1, R1884 += 1 };
  s3 -> s6 [0, 65535] { R5070 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R5070 += 1, R4914 += 1, R1882 += 1, R1883 += 1, R1884 += 1 };
  s3 -> s3 [0, 65535] { R5070 += 1, R4914 += 1, R1881 += 1, R1882 += 1 };
  s3 -> s1 [76, 65535] { R5070 += 1, R4914 += 1, R1882 += 1, R1884 += 1 };
  s4 -> s1 [0, 70] { R5070 += 1, R4914 += 1, R1882 += 1, R1884 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R5070 += 1, R4914 += 1, R1882 += 1, R1883 += 1, R1884 += 1 };
  s4 -> s3 [0, 65535] { R5070 += 1, R4914 += 1, R1881 += 1, R1882 += 1 };
  s4 -> s4 [0, 65535] { R5070 += 1, R4913 += 1, R4914 += 1 };
  s4 -> s1 [76, 65535] { R5070 += 1, R4914 += 1, R1882 += 1, R1884 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5070 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R5070 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R5070 += 1, R4914 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 65535] { R5072 += 1, R4916 += 1, R1891 += 1, R1893 += 1, R1894 += 1 };
  s0 -> s2 [0, 65535] { R5072 += 1, R4916 += 1, R1890 += 1, R1891 += 1 };
  s0 -> s0 [0, 65535] { R5071 += 1, R5072 += 1 };
  s0 -> s3 [0, 65535] { R5072 += 1, R4916 += 1, R1891 += 1, R1892 += 1, R1893 += 1 };
  s0 -> s4 [0, 65535] { R5072 += 1, R4915 += 1, R4916 += 1 };
  s1 -> s8 [0, 65535] { R5072 += 1, R4916 += 1, R1891 += 1 };
  s1 -> s1 [0, 65535] { R5072 += 1, R4916 += 1, R1891 += 1, R1893 += 1, R1894 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R5072 += 1 };
  s1 -> s7 [0, 65535] { R5072 += 1, R4916 += 1 };
  s2 -> s1 [0, 65535] { R5072 += 1, R4916 += 1, R1891 += 1, R1893 += 1, R1894 += 1 };
  s2 -> s2 [0, 65535] { R5072 += 1, R4916 += 1, R1890 += 1, R1891 += 1 };
  s2 -> s3 [0, 65535] { R5072 += 1, R4916 += 1, R1891 += 1, R1892 += 1, R1893 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R5072 += 1 };
  s3 -> s1 [0, 65535] { R5072 += 1, R4916 += 1, R1891 += 1, R1893 += 1, R1894 += 1 };
  s3 -> s3 [0, 65535] { R5072 += 1, R4916 += 1, R1891 += 1, R1892 += 1, R1893 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R5072 += 1 };
  s3 -> s7 [0, 65535] { R5072 += 1, R4916 += 1 };
  s4 -> s1 [0, 65535] { R5072 += 1, R4916 += 1, R1891 += 1, R1893 += 1, R1894 += 1 };
  s4 -> s2 [0, 65535] { R5072 += 1, R4916 += 1, R1890 += 1, R1891 += 1 };
  s4 -> s3 [0, 65535] { R5072 += 1, R4916 += 1, R1891 += 1, R1892 += 1, R1893 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5072 += 1, R4915 += 1, R4916 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5072 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R5072 += 1 };
  s7 -> s7 [0, 65535] { R5072 += 1, R4916 += 1 };
  s8 -> s8 [0, 65535] { R5072 += 1, R4916 += 1, R1891 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R5072 += 1 };
  s8 -> s7 [0, 65535] { R5072 += 1, R4916 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 75] { R5074 += 1, R4918 += 1, R1901 += 1, R1903 += 1 };
  s0 -> s0 [0, 65535] { R5073 += 1, R5074 += 1 };
  s0 -> s2 [0, 65535] { R5074 += 1, R4918 += 1, R1901 += 1, R1902 += 1, R1903 += 1 };
  s0 -> s3 [0, 65535] { R5074 += 1, R4918 += 1, R1901 += 1, R1903 += 1, R1904 += 1 };
  s0 -> s4 [0, 65535] { R5074 += 1, R4917 += 1, R4918 += 1 };
  s0 -> s5 [0, 65535] { R5074 += 1, R4918 += 1, R1900 += 1, R1901 += 1 };
  s0 -> s1 [77, 65535] { R5074 += 1, R4918 += 1, R1901 += 1, R1903 += 1 };
  s1 -> s1 [0, 75] { R5074 += 1, R4918 += 1, R1901 += 1, R1903 += 1 };
  s1 -> s9 [0, 65535] { R5074 += 1, R4918 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R5074 += 1 };
  s1 -> s1 [0, 65535] { R5074 += 1, R4918 += 1, R1901 += 1 };
  s1 -> s1 [77, 65535] { R5074 += 1, R4918 += 1, R1901 += 1, R1903 += 1 };
  s2 -> s1 [0, 75] { R5074 += 1, R4918 += 1, R1901 += 1, R1903 += 1 };
  s2 -> s2 [0, 65535] { R5074 += 1, R4918 += 1, R1901 += 1, R1902 += 1, R1903 += 1 };
  s2 -> s3 [0, 65535] { R5074 += 1, R4918 += 1, R1901 += 1, R1903 += 1, R1904 += 1 };
  s2 -> s9 [0, 65535] { R5074 += 1, R4918 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R5074 += 1 };
  s2 -> s1 [77, 65535] { R5074 += 1, R4918 += 1, R1901 += 1, R1903 += 1 };
  s3 -> s1 [0, 75] { R5074 += 1, R4918 += 1, R1901 += 1, R1903 += 1 };
  s3 -> s8 [0, 65535] { R5074 += 1, R4918 += 1, R1901 += 1 };
  s3 -> s3 [0, 65535] { R5074 += 1, R4918 += 1, R1901 += 1, R1903 += 1, R1904 += 1 };
  s3 -> s9 [0, 65535] { R5074 += 1, R4918 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R5074 += 1 };
  s3 -> s1 [77, 65535] { R5074 += 1, R4918 += 1, R1901 += 1, R1903 += 1 };
  s4 -> s1 [0, 75] { R5074 += 1, R4918 += 1, R1901 += 1, R1903 += 1 };
  s4 -> s2 [0, 65535] { R5074 += 1, R4918 += 1, R1901 += 1, R1902 += 1, R1903 += 1 };
  s4 -> s3 [0, 65535] { R5074 += 1, R4918 += 1, R1901 += 1, R1903 += 1, R1904 += 1 };
  s4 -> s4 [0, 65535] { R5074 += 1, R4917 += 1, R4918 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R5074 += 1, R4918 += 1, R1900 += 1, R1901 += 1 };
  s4 -> s1 [77, 65535] { R5074 += 1, R4918 += 1, R1901 += 1, R1903 += 1 };
  s5 -> s1 [0, 75] { R5074 += 1, R4918 += 1, R1901 += 1, R1903 += 1 };
  s5 -> s2 [0, 65535] { R5074 += 1, R4918 += 1, R1901 += 1, R1902 += 1, R1903 += 1 };
  s5 -> s3 [0, 65535] { R5074 += 1, R4918 += 1, R1901 += 1, R1903 += 1, R1904 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R5074 += 1, R4918 += 1, R1900 += 1, R1901 += 1 };
  s5 -> s7 [0, 65535] { R5074 += 1 };
  s5 -> s1 [77, 65535] { R5074 += 1, R4918 += 1, R1901 += 1, R1903 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5074 += 1 };
  s8 -> s8 [0, 65535] { R5074 += 1, R4918 += 1, R1901 += 1 };
  s8 -> s9 [0, 65535] { R5074 += 1, R4918 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R5074 += 1 };
  s9 -> s9 [0, 65535] { R5074 += 1, R4918 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s7 [0, 65535] { R5074 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 75] { R5076 += 1, R4920 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s0 -> s0 [0, 65535] { R5075 += 1, R5076 += 1 };
  s0 -> s2 [0, 65535] { R5076 += 1, R4920 += 1, R1912 += 1, R1914 += 1, R1915 += 1, R1916 += 1 };
  s0 -> s3 [0, 65535] { R5076 += 1, R4919 += 1, R4920 += 1 };
  s0 -> s4 [0, 65535] { R5076 += 1, R4920 += 1, R1912 += 1, R1913 += 1, R1914 += 1 };
  s0 -> s5 [0, 65535] { R5076 += 1, R4920 += 1, R1911 += 1, R1912 += 1 };
  s0 -> s1 [77, 65535] { R5076 += 1, R4920 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s1 -> s1 [0, 75] { R5076 += 1, R4920 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s1 -> s9 [0, 65535] { R5076 += 1, R4920 += 1, R1912 += 1 };
  s1 -> s1 [0, 65535] { R5076 += 1, R4920 += 1, R1912 += 1, R1914 += 1 };
  s1 -> s6 [0, 65535] { R5076 += 1 };
  s1 -> s8 [0, 65535] { R5076 += 1, R4920 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [77, 65535] { R5076 += 1, R4920 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s2 -> s1 [0, 75] { R5076 += 1, R4920 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s2 -> s9 [0, 65535] { R5076 += 1, R4920 += 1, R1912 += 1 };
  s2 -> s2 [0, 65535] { R5076 += 1, R4920 += 1, R1912 += 1, R1914 += 1, R1915 += 1, R1916 += 1 };
  s2 -> s6 [0, 65535] { R5076 += 1 };
  s2 -> s8 [0, 65535] { R5076 += 1, R4920 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s1 [77, 65535] { R5076 += 1, R4920 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s3 -> s1 [0, 75] { R5076 += 1, R4920 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s3 -> s2 [0, 65535] { R5076 += 1, R4920 += 1, R1912 += 1, R1914 += 1, R1915 += 1, R1916 += 1 };
  s3 -> s3 [0, 65535] { R5076 += 1, R4919 += 1, R4920 += 1 };
  s3 -> s4 [0, 65535] { R5076 += 1, R4920 += 1, R1912 += 1, R1913 += 1, R1914 += 1 };
  s3 -> s5 [0, 65535] { R5076 += 1, R4920 += 1, R1911 += 1, R1912 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s1 [77, 65535] { R5076 += 1, R4920 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s4 -> s1 [0, 75] { R5076 += 1, R4920 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s4 -> s2 [0, 65535] { R5076 += 1, R4920 += 1, R1912 += 1, R1914 += 1, R1915 += 1, R1916 += 1 };
  s4 -> s6 [0, 65535] { R5076 += 1 };
  s4 -> s4 [0, 65535] { R5076 += 1, R4920 += 1, R1912 += 1, R1913 += 1, R1914 += 1 };
  s4 -> s8 [0, 65535] { R5076 += 1, R4920 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s1 [77, 65535] { R5076 += 1, R4920 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s5 -> s1 [0, 75] { R5076 += 1, R4920 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s5 -> s2 [0, 65535] { R5076 += 1, R4920 += 1, R1912 += 1, R1914 += 1, R1915 += 1, R1916 += 1 };
  s5 -> s6 [0, 65535] { R5076 += 1 };
  s5 -> s4 [0, 65535] { R5076 += 1, R4920 += 1, R1912 += 1, R1913 += 1, R1914 += 1 };
  s5 -> s5 [0, 65535] { R5076 += 1, R4920 += 1, R1911 += 1, R1912 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s1 [77, 65535] { R5076 += 1, R4920 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s6 -> s6 [0, 65535] { R5076 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R5076 += 1 };
  s8 -> s8 [0, 65535] { R5076 += 1, R4920 += 1 };
  s8 -> s7 [0, 65535];
  s9 -> s9 [0, 65535] { R5076 += 1, R4920 += 1, R1912 += 1 };
  s9 -> s6 [0, 65535] { R5076 += 1 };
  s9 -> s8 [0, 65535] { R5076 += 1, R4920 += 1 };
  s9 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 65535] { R5078 += 1, R4921 += 1, R4922 += 1 };
  s0 -> s0 [0, 65535] { R5077 += 1, R5078 += 1 };
  s0 -> s2 [0, 65535] { R5078 += 1, R4922 += 1, R1925 += 1, R1927 += 1, R1929 += 1, R1930 += 1 };
  s0 -> s3 [0, 65535] { R5078 += 1, R4922 += 1, R1925 += 1, R1926 += 1, R1927 += 1 };
  s0 -> s4 [0, 65535] { R5078 += 1, R4922 += 1, R1924 += 1, R1925 += 1 };
  s0 -> s5 [0, 65535] { R5078 += 1, R4922 += 1, R1925 += 1, R1927 += 1, R1928 += 1, R1929 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R5078 += 1, R4921 += 1, R4922 += 1 };
  s1 -> s2 [0, 65535] { R5078 += 1, R4922 += 1, R1925 += 1, R1927 += 1, R1929 += 1, R1930 += 1 };
  s1 -> s3 [0, 65535] { R5078 += 1, R4922 += 1, R1925 += 1, R1926 += 1, R1927 += 1 };
  s1 -> s4 [0, 65535] { R5078 += 1, R4922 += 1, R1924 += 1, R1925 += 1 };
  s1 -> s5 [0, 65535] { R5078 += 1, R4922 += 1, R1925 += 1, R1927 += 1, R1928 += 1, R1929 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R5078 += 1, R4922 += 1, R1925 += 1 };
  s2 -> s8 [0, 65535] { R5078 += 1 };
  s2 -> s2 [0, 65535] { R5078 += 1, R4922 += 1, R1925 += 1, R1927 += 1, R1929 += 1, R1930 += 1 };
  s2 -> s9 [0, 65535] { R5078 += 1, R4922 += 1 };
  s2 -> s10 [0, 65535] { R5078 += 1, R4922 += 1, R1925 += 1, R1927 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s8 [0, 65535] { R5078 += 1 };
  s3 -> s2 [0, 65535] { R5078 += 1, R4922 += 1, R1925 += 1, R1927 += 1, R1929 += 1, R1930 += 1 };
  s3 -> s9 [0, 65535] { R5078 += 1, R4922 += 1 };
  s3 -> s3 [0, 65535] { R5078 += 1, R4922 += 1, R1925 += 1, R1926 += 1, R1927 += 1 };
  s3 -> s5 [0, 65535] { R5078 += 1, R4922 += 1, R1925 += 1, R1927 += 1, R1928 += 1, R1929 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s8 [0, 65535] { R5078 += 1 };
  s4 -> s2 [0, 65535] { R5078 += 1, R4922 += 1, R1925 += 1, R1927 += 1, R1929 += 1, R1930 += 1 };
  s4 -> s3 [0, 65535] { R5078 += 1, R4922 += 1, R1925 += 1, R1926 += 1, R1927 += 1 };
  s4 -> s4 [0, 65535] { R5078 += 1, R4922 += 1, R1924 += 1, R1925 += 1 };
  s4 -> s5 [0, 65535] { R5078 += 1, R4922 += 1, R1925 += 1, R1927 += 1, R1928 += 1, R1929 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R5078 += 1, R4922 += 1, R1925 += 1 };
  s5 -> s8 [0, 65535] { R5078 += 1 };
  s5 -> s2 [0, 65535] { R5078 += 1, R4922 += 1, R1925 += 1, R1927 += 1, R1929 += 1, R1930 += 1 };
  s5 -> s9 [0, 65535] { R5078 += 1, R4922 += 1 };
  s5 -> s5 [0, 65535] { R5078 += 1, R4922 += 1, R1925 += 1, R1927 += 1, R1928 += 1, R1929 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5078 += 1, R4922 += 1, R1925 += 1 };
  s7 -> s8 [0, 65535] { R5078 += 1 };
  s7 -> s9 [0, 65535] { R5078 += 1, R4922 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R5078 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s8 [0, 65535] { R5078 += 1 };
  s9 -> s9 [0, 65535] { R5078 += 1, R4922 += 1 };
  s10 -> s6 [0, 65535];
  s10 -> s7 [0, 65535] { R5078 += 1, R4922 += 1, R1925 += 1 };
  s10 -> s8 [0, 65535] { R5078 += 1 };
  s10 -> s9 [0, 65535] { R5078 += 1, R4922 += 1 };
  s10 -> s10 [0, 65535] { R5078 += 1, R4922 += 1, R1925 += 1, R1927 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R5080 += 1, R4924 += 1, R1938 += 1, R1940 += 1 };
  s0 -> s2 [0, 65535] { R5080 += 1, R4923 += 1, R4924 += 1 };
  s0 -> s3 [0, 65535] { R5080 += 1, R4924 += 1, R1938 += 1, R1939 += 1, R1940 += 1 };
  s0 -> s0 [0, 65535] { R5079 += 1, R5080 += 1 };
  s0 -> s4 [0, 65535] { R5080 += 1, R4924 += 1, R1937 += 1, R1938 += 1 };
  s0 -> s5 [0, 65535] { R5080 += 1, R4924 += 1, R1938 += 1, R1940 += 1, R1942 += 1 };
  s1 -> s6 [0, 65535] { R5080 += 1 };
  s1 -> s1 [0, 65535] { R5080 += 1, R4924 += 1, R1938 += 1, R1940 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s8 [0, 65535] { R5080 += 1, R4924 += 1 };
  s1 -> s9 [0, 65535] { R5080 += 1, R4924 += 1, R1938 += 1 };
  s2 -> s1 [0, 65535] { R5080 += 1, R4924 += 1, R1938 += 1, R1940 += 1 };
  s2 -> s2 [0, 65535] { R5080 += 1, R4923 += 1, R4924 += 1 };
  s2 -> s3 [0, 65535] { R5080 += 1, R4924 += 1, R1938 += 1, R1939 += 1, R1940 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [0, 65535] { R5080 += 1, R4924 += 1, R1937 += 1, R1938 += 1 };
  s2 -> s5 [0, 65535] { R5080 += 1, R4924 += 1, R1938 += 1, R1940 += 1, R1942 += 1 };
  s3 -> s6 [0, 65535] { R5080 += 1 };
  s3 -> s1 [0, 65535] { R5080 += 1, R4924 += 1, R1938 += 1, R1940 += 1 };
  s3 -> s3 [0, 65535] { R5080 += 1, R4924 += 1, R1938 += 1, R1939 += 1, R1940 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s8 [0, 65535] { R5080 += 1, R4924 += 1 };
  s3 -> s5 [0, 65535] { R5080 += 1, R4924 += 1, R1938 += 1, R1940 += 1, R1942 += 1 };
  s4 -> s6 [0, 65535] { R5080 += 1 };
  s4 -> s1 [0, 65535] { R5080 += 1, R4924 += 1, R1938 += 1, R1940 += 1 };
  s4 -> s3 [0, 65535] { R5080 += 1, R4924 += 1, R1938 += 1, R1939 += 1, R1940 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R5080 += 1, R4924 += 1, R1937 += 1, R1938 += 1 };
  s4 -> s5 [0, 65535] { R5080 += 1, R4924 += 1, R1938 += 1, R1940 += 1, R1942 += 1 };
  s5 -> s6 [0, 65535] { R5080 += 1 };
  s5 -> s1 [0, 65535] { R5080 += 1, R4924 += 1, R1938 += 1, R1940 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R5080 += 1, R4924 += 1 };
  s5 -> s5 [0, 65535] { R5080 += 1, R4924 += 1, R1938 += 1, R1940 += 1, R1942 += 1 };
  s5 -> s9 [0, 65535] { R5080 += 1, R4924 += 1, R1938 += 1 };
  s6 -> s6 [0, 65535] { R5080 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R5080 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R5080 += 1, R4924 += 1 };
  s9 -> s6 [0, 65535] { R5080 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s8 [0, 65535] { R5080 += 1, R4924 += 1 };
  s9 -> s9 [0, 65535] { R5080 += 1, R4924 += 1, R1938 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 65535] { R5082 += 1, R4926 += 1, R1951 += 1, R1953 += 1, R1955 += 1, R1956 += 1 };
  s0 -> s2 [0, 65535] { R5082 += 1, R4925 += 1, R4926 += 1 };
  s0 -> s0 [0, 65535] { R5081 += 1, R5082 += 1 };
  s0 -> s3 [0, 65535] { R5082 += 1, R4926 += 1, R1951 += 1, R1953 += 1, R1954 += 1, R1955 += 1 };
  s0 -> s4 [0, 65535] { R5082 += 1, R4926 += 1, R1950 += 1, R1951 += 1 };
  s0 -> s5 [0, 65535] { R5082 += 1, R4926 += 1, R1951 += 1, R1952 += 1, R1953 += 1 };
  s1 -> s9 [0, 65535] { R5082 += 1, R4926 += 1, R1951 += 1 };
  s1 -> s1 [0, 65535] { R5082 += 1, R4926 += 1, R1951 += 1, R1953 += 1, R1955 += 1, R1956 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R5082 += 1, R4926 += 1 };
  s1 -> s8 [0, 65535] { R5082 += 1 };
  s1 -> s10 [0, 65535] { R5082 += 1, R4926 += 1, R1951 += 1, R1953 += 1 };
  s2 -> s1 [0, 65535] { R5082 += 1, R4926 += 1, R1951 += 1, R1953 += 1, R1955 += 1, R1956 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R5082 += 1, R4925 += 1, R4926 += 1 };
  s2 -> s3 [0, 65535] { R5082 += 1, R4926 += 1, R1951 += 1, R1953 += 1, R1954 += 1, R1955 += 1 };
  s2 -> s4 [0, 65535] { R5082 += 1, R4926 += 1, R1950 += 1, R1951 += 1 };
  s2 -> s5 [0, 65535] { R5082 += 1, R4926 += 1, R1951 += 1, R1952 += 1, R1953 += 1 };
  s3 -> s9 [0, 65535] { R5082 += 1, R4926 += 1, R1951 += 1 };
  s3 -> s1 [0, 65535] { R5082 += 1, R4926 += 1, R1951 += 1, R1953 += 1, R1955 += 1, R1956 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R5082 += 1, R4926 += 1, R1951 += 1, R1953 += 1, R1954 += 1, R1955 += 1 };
  s3 -> s7 [0, 65535] { R5082 += 1, R4926 += 1 };
  s3 -> s8 [0, 65535] { R5082 += 1 };
  s4 -> s1 [0, 65535] { R5082 += 1, R4926 += 1, R1951 += 1, R1953 += 1, R1955 += 1, R1956 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s3 [0, 65535] { R5082 += 1, R4926 += 1, R1951 += 1, R1953 += 1, R1954 += 1, R1955 += 1 };
  s4 -> s8 [0, 65535] { R5082 += 1 };
  s4 -> s4 [0, 65535] { R5082 += 1, R4926 += 1, R1950 += 1, R1951 += 1 };
  s4 -> s5 [0, 65535] { R5082 += 1, R4926 += 1, R1951 += 1, R1952 += 1, R1953 += 1 };
  s5 -> s1 [0, 65535] { R5082 += 1, R4926 += 1, R1951 += 1, R1953 += 1, R1955 += 1, R1956 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s3 [0, 65535] { R5082 += 1, R4926 += 1, R1951 += 1, R1953 += 1, R1954 += 1, R1955 += 1 };
  s5 -> s7 [0, 65535] { R5082 += 1, R4926 += 1 };
  s5 -> s8 [0, 65535] { R5082 += 1 };
  s5 -> s5 [0, 65535] { R5082 += 1, R4926 += 1, R1951 += 1, R1952 += 1, R1953 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5082 += 1, R4926 += 1 };
  s7 -> s8 [0, 65535] { R5082 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R5082 += 1 };
  s9 -> s9 [0, 65535] { R5082 += 1, R4926 += 1, R1951 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s7 [0, 65535] { R5082 += 1, R4926 += 1 };
  s9 -> s8 [0, 65535] { R5082 += 1 };
  s10 -> s9 [0, 65535] { R5082 += 1, R4926 += 1, R1951 += 1 };
  s10 -> s6 [0, 65535];
  s10 -> s7 [0, 65535] { R5082 += 1, R4926 += 1 };
  s10 -> s8 [0, 65535] { R5082 += 1 };
  s10 -> s10 [0, 65535] { R5082 += 1, R4926 += 1, R1951 += 1, R1953 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 75] { R5084 += 1, R4928 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s0 -> s2 [0, 65535] { R5084 += 1, R4927 += 1, R4928 += 1 };
  s0 -> s3 [0, 65535] { R5084 += 1, R4928 += 1, R1964 += 1, R1965 += 1, R1966 += 1 };
  s0 -> s4 [0, 65535] { R5084 += 1, R4928 += 1, R1964 += 1, R1966 += 1, R1967 += 1, R1968 += 1 };
  s0 -> s5 [0, 65535] { R5084 += 1, R4928 += 1, R1963 += 1, R1964 += 1 };
  s0 -> s0 [0, 65535] { R5083 += 1, R5084 += 1 };
  s0 -> s6 [76, 76] { R5084 += 1, R4928 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s0 -> s7 [76, 76] { R5084 += 1, R4928 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s0 -> s1 [78, 65535] { R5084 += 1, R4928 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s1 -> s1 [0, 75] { R5084 += 1, R4928 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s9 [0, 65535] { R5084 += 1 };
  s1 -> s1 [0, 65535] { R5084 += 1, R4928 += 1, R1964 += 1, R1966 += 1 };
  s1 -> s10 [0, 65535] { R5084 += 1, R4928 += 1 };
  s1 -> s11 [0, 65535] { R5084 += 1, R4928 += 1, R1964 += 1 };
  s1 -> s6 [76, 76] { R5084 += 1, R4928 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s1 -> s7 [76, 76] { R5084 += 1, R4928 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s1 -> s1 [78, 65535] { R5084 += 1, R4928 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s2 -> s1 [0, 75] { R5084 += 1, R4928 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R5084 += 1, R4927 += 1, R4928 += 1 };
  s2 -> s3 [0, 65535] { R5084 += 1, R4928 += 1, R1964 += 1, R1965 += 1, R1966 += 1 };
  s2 -> s4 [0, 65535] { R5084 += 1, R4928 += 1, R1964 += 1, R1966 += 1, R1967 += 1, R1968 += 1 };
  s2 -> s5 [0, 65535] { R5084 += 1, R4928 += 1, R1963 += 1, R1964 += 1 };
  s2 -> s6 [76, 76] { R5084 += 1, R4928 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s2 -> s7 [76, 76] { R5084 += 1, R4928 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s2 -> s1 [78, 65535] { R5084 += 1, R4928 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s3 -> s1 [0, 75] { R5084 += 1, R4928 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s9 [0, 65535] { R5084 += 1 };
  s3 -> s10 [0, 65535] { R5084 += 1, R4928 += 1 };
  s3 -> s3 [0, 65535] { R5084 += 1, R4928 += 1, R1964 += 1, R1965 += 1, R1966 += 1 };
  s3 -> s4 [0, 65535] { R5084 += 1, R4928 += 1, R1964 += 1, R1966 += 1, R1967 += 1, R1968 += 1 };
  s3 -> s6 [76, 76] { R5084 += 1, R4928 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s3 -> s7 [76, 76] { R5084 += 1, R4928 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s3 -> s1 [78, 65535] { R5084 += 1, R4928 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s4 -> s1 [0, 75] { R5084 += 1, R4928 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s9 [0, 65535] { R5084 += 1 };
  s4 -> s10 [0, 65535] { R5084 += 1, R4928 += 1 };
  s4 -> s4 [0, 65535] { R5084 += 1, R4928 += 1, R1964 += 1, R1966 += 1, R1967 += 1, R1968 += 1 };
  s4 -> s11 [0, 65535] { R5084 += 1, R4928 += 1, R1964 += 1 };
  s4 -> s6 [76, 76] { R5084 += 1, R4928 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s4 -> s7 [76, 76] { R5084 += 1, R4928 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s4 -> s1 [78, 65535] { R5084 += 1, R4928 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s5 -> s1 [0, 75] { R5084 += 1, R4928 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s9 [0, 65535] { R5084 += 1 };
  s5 -> s3 [0, 65535] { R5084 += 1, R4928 += 1, R1964 += 1, R1965 += 1, R1966 += 1 };
  s5 -> s4 [0, 65535] { R5084 += 1, R4928 += 1, R1964 += 1, R1966 += 1, R1967 += 1, R1968 += 1 };
  s5 -> s5 [0, 65535] { R5084 += 1, R4928 += 1, R1963 += 1, R1964 += 1 };
  s5 -> s6 [76, 76] { R5084 += 1, R4928 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s5 -> s7 [76, 76] { R5084 += 1, R4928 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s5 -> s1 [78, 65535] { R5084 += 1, R4928 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s6 -> s6 [0, 76] { R5084 += 1, R4928 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s6 -> s6 [0, 65535] { R5084 += 1, R4928 += 1, R1964 += 1, R1966 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [0, 65535] { R5084 += 1 };
  s6 -> s10 [0, 65535] { R5084 += 1, R4928 += 1 };
  s6 -> s11 [0, 65535] { R5084 += 1, R4928 += 1, R1964 += 1 };
  s6 -> s6 [78, 65535] { R5084 += 1, R4928 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R5084 += 1 };
  s7 -> s7 [0, 65535] { R5084 += 1, R4928 += 1, R1964 += 1, R1966 += 1 };
  s7 -> s10 [0, 65535] { R5084 += 1, R4928 += 1 };
  s7 -> s11 [0, 65535] { R5084 += 1, R4928 += 1, R1964 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R5084 += 1 };
  s10 -> s8 [0, 65535];
  s10 -> s9 [0, 65535] { R5084 += 1 };
  s10 -> s10 [0, 65535] { R5084 += 1, R4928 += 1 };
  s11 -> s8 [0, 65535];
  s11 -> s9 [0, 65535] { R5084 += 1 };
  s11 -> s10 [0, 65535] { R5084 += 1, R4928 += 1 };
  s11 -> s11 [0, 65535] { R5084 += 1, R4928 += 1, R1964 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10, s11;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 65535] { R5086 += 1, R4930 += 1, R1975 += 1, R1976 += 1, R1977 += 1 };
  s0 -> s2 [0, 65535] { R5086 += 1, R4930 += 1, R1974 += 1, R1975 += 1 };
  s0 -> s0 [0, 65535] { R5085 += 1, R5086 += 1 };
  s0 -> s3 [0, 65535] { R5086 += 1, R4929 += 1, R4930 += 1 };
  s0 -> s4 [0, 65535] { R5086 += 1, R4930 += 1, R1975 += 1, R1977 += 1, R1978 += 1 };
  s1 -> s1 [0, 65535] { R5086 += 1, R4930 += 1, R1975 += 1, R1976 += 1, R1977 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R5086 += 1 };
  s1 -> s7 [0, 65535] { R5086 += 1, R4930 += 1 };
  s1 -> s4 [0, 65535] { R5086 += 1, R4930 += 1, R1975 += 1, R1977 += 1, R1978 += 1 };
  s2 -> s1 [0, 65535] { R5086 += 1, R4930 += 1, R1975 += 1, R1976 += 1, R1977 += 1 };
  s2 -> s2 [0, 65535] { R5086 += 1, R4930 += 1, R1974 += 1, R1975 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R5086 += 1 };
  s2 -> s4 [0, 65535] { R5086 += 1, R4930 += 1, R1975 += 1, R1977 += 1, R1978 += 1 };
  s3 -> s1 [0, 65535] { R5086 += 1, R4930 += 1, R1975 += 1, R1976 += 1, R1977 += 1 };
  s3 -> s2 [0, 65535] { R5086 += 1, R4930 += 1, R1974 += 1, R1975 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5086 += 1, R4929 += 1, R4930 += 1 };
  s3 -> s4 [0, 65535] { R5086 += 1, R4930 += 1, R1975 += 1, R1977 += 1, R1978 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5086 += 1 };
  s4 -> s7 [0, 65535] { R5086 += 1, R4930 += 1 };
  s4 -> s8 [0, 65535] { R5086 += 1, R4930 += 1, R1975 += 1 };
  s4 -> s4 [0, 65535] { R5086 += 1, R4930 += 1, R1975 += 1, R1977 += 1, R1978 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5086 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R5086 += 1 };
  s7 -> s7 [0, 65535] { R5086 += 1, R4930 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R5086 += 1 };
  s8 -> s7 [0, 65535] { R5086 += 1, R4930 += 1 };
  s8 -> s8 [0, 65535] { R5086 += 1, R4930 += 1, R1975 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R5088 += 1, R4932 += 1, R1984 += 1, R1986 += 1 };
  s0 -> s2 [0, 65535] { R5088 += 1, R4931 += 1, R4932 += 1 };
  s0 -> s0 [0, 65535] { R5087 += 1, R5088 += 1 };
  s0 -> s3 [0, 65535] { R5088 += 1, R4932 += 1, R1984 += 1, R1985 += 1, R1986 += 1 };
  s0 -> s4 [0, 65535] { R5088 += 1, R4932 += 1, R1983 += 1, R1984 += 1 };
  s0 -> s5 [70, 70] { R5088 += 1, R4932 += 1, R1984 += 1, R1986 += 1 };
  s0 -> s6 [76, 76] { R5088 += 1, R4932 += 1, R1984 += 1, R1986 += 1 };
  s0 -> s1 [77, 65535] { R5088 += 1, R4932 += 1, R1984 += 1, R1986 += 1 };
  s1 -> s1 [0, 69] { R5088 += 1, R4932 += 1, R1984 += 1, R1986 += 1 };
  s1 -> s5 [70, 70] { R5088 += 1, R4932 += 1, R1984 += 1, R1986 += 1 };
  s1 -> s6 [76, 76] { R5088 += 1, R4932 += 1, R1984 += 1, R1986 += 1 };
  s1 -> s1 [77, 65535] { R5088 += 1, R4932 += 1, R1984 += 1, R1986 += 1 };
  s2 -> s1 [0, 69] { R5088 += 1, R4932 += 1, R1984 += 1, R1986 += 1 };
  s2 -> s2 [0, 65535] { R5088 += 1, R4931 += 1, R4932 += 1 };
  s2 -> s3 [0, 65535] { R5088 += 1, R4932 += 1, R1984 += 1, R1985 += 1, R1986 += 1 };
  s2 -> s4 [0, 65535] { R5088 += 1, R4932 += 1, R1983 += 1, R1984 += 1 };
  s2 -> s5 [70, 70] { R5088 += 1, R4932 += 1, R1984 += 1, R1986 += 1 };
  s2 -> s6 [76, 76] { R5088 += 1, R4932 += 1, R1984 += 1, R1986 += 1 };
  s2 -> s1 [77, 65535] { R5088 += 1, R4932 += 1, R1984 += 1, R1986 += 1 };
  s3 -> s1 [0, 69] { R5088 += 1, R4932 += 1, R1984 += 1, R1986 += 1 };
  s3 -> s3 [0, 65535] { R5088 += 1, R4932 += 1, R1984 += 1, R1985 += 1, R1986 += 1 };
  s3 -> s5 [70, 70] { R5088 += 1, R4932 += 1, R1984 += 1, R1986 += 1 };
  s3 -> s6 [76, 76] { R5088 += 1, R4932 += 1, R1984 += 1, R1986 += 1 };
  s3 -> s1 [77, 65535] { R5088 += 1, R4932 += 1, R1984 += 1, R1986 += 1 };
  s4 -> s1 [0, 69] { R5088 += 1, R4932 += 1, R1984 += 1, R1986 += 1 };
  s4 -> s3 [0, 65535] { R5088 += 1, R4932 += 1, R1984 += 1, R1985 += 1, R1986 += 1 };
  s4 -> s4 [0, 65535] { R5088 += 1, R4932 += 1, R1983 += 1, R1984 += 1 };
  s4 -> s5 [70, 70] { R5088 += 1, R4932 += 1, R1984 += 1, R1986 += 1 };
  s4 -> s6 [76, 76] { R5088 += 1, R4932 += 1, R1984 += 1, R1986 += 1 };
  s4 -> s1 [77, 65535] { R5088 += 1, R4932 += 1, R1984 += 1, R1986 += 1 };
  s5 -> s5 [0, 70] { R5088 += 1, R4932 += 1, R1984 += 1, R1986 += 1 };
  s5 -> s11 [76, 76] { R5088 += 1, R4932 += 1, R1984 += 1, R1986 += 1 };
  s5 -> s5 [77, 65535] { R5088 += 1, R4932 += 1, R1984 += 1, R1986 += 1 };
  s6 -> s6 [0, 69] { R5088 += 1, R4932 += 1, R1984 += 1, R1986 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R5088 += 1, R4932 += 1, R1984 += 1 };
  s6 -> s8 [0, 65535] { R5088 += 1 };
  s6 -> s9 [0, 65535] { R5088 += 1, R4932 += 1 };
  s6 -> s10 [70, 70] { R5088 += 1, R4932 += 1, R1984 += 1, R1986 += 1 };
  s6 -> s11 [70, 70] { R5088 += 1, R4932 += 1, R1984 += 1, R1986 += 1 };
  s6 -> s6 [76, 65535] { R5088 += 1, R4932 += 1, R1984 += 1, R1986 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R5088 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s8 [0, 65535] { R5088 += 1 };
  s9 -> s9 [0, 65535] { R5088 += 1, R4932 += 1 };
  s10 -> s10 [0, 65535] { R5088 += 1, R4932 += 1, R1984 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s8 [0, 65535] { R5088 += 1 };
  s10 -> s9 [0, 65535] { R5088 += 1, R4932 += 1 };
  s11 -> s11 [0, 70] { R5088 += 1, R4932 += 1, R1984 += 1, R1986 += 1 };
  s11 -> s7 [0, 65535];
  s11 -> s11 [0, 65535] { R5088 += 1, R4932 += 1, R1984 += 1 };
  s11 -> s8 [0, 65535] { R5088 += 1 };
  s11 -> s9 [0, 65535] { R5088 += 1, R4932 += 1 };
  s11 -> s11 [76, 65535] { R5088 += 1, R4932 += 1, R1984 += 1, R1986 += 1 };
  accepting s8, s9, s6, s7, s10, s11;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R5090 += 1, R4934 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s0 -> s2 [0, 65535] { R5090 += 1, R4934 += 1, R1992 += 1, R1993 += 1 };
  s0 -> s3 [0, 65535] { R5090 += 1, R4933 += 1, R4934 += 1 };
  s0 -> s4 [0, 65535] { R5090 += 1, R4934 += 1, R1993 += 1, R1994 += 1, R1995 += 1 };
  s0 -> s0 [0, 65535] { R5089 += 1, R5090 += 1 };
  s0 -> s5 [70, 70] { R5090 += 1, R4934 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s0 -> s6 [70, 70] { R5090 += 1, R4934 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s0 -> s1 [71, 65535] { R5090 += 1, R4934 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s1 -> s1 [0, 69] { R5090 += 1, R4934 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s8 [0, 65535] { R5090 += 1, R4934 += 1 };
  s1 -> s9 [0, 65535] { R5090 += 1 };
  s1 -> s1 [0, 65535] { R5090 += 1, R4934 += 1, R1993 += 1 };
  s1 -> s5 [70, 70] { R5090 += 1, R4934 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s1 -> s6 [70, 70] { R5090 += 1, R4934 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s1 -> s1 [71, 65535] { R5090 += 1, R4934 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s2 -> s1 [0, 69] { R5090 += 1, R4934 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s2 [0, 65535] { R5090 += 1, R4934 += 1, R1992 += 1, R1993 += 1 };
  s2 -> s9 [0, 65535] { R5090 += 1 };
  s2 -> s4 [0, 65535] { R5090 += 1, R4934 += 1, R1993 += 1, R1994 += 1, R1995 += 1 };
  s2 -> s5 [70, 70] { R5090 += 1, R4934 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s2 -> s6 [70, 70] { R5090 += 1, R4934 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s2 -> s1 [71, 65535] { R5090 += 1, R4934 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s3 -> s1 [0, 69] { R5090 += 1, R4934 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s2 [0, 65535] { R5090 += 1, R4934 += 1, R1992 += 1, R1993 += 1 };
  s3 -> s3 [0, 65535] { R5090 += 1, R4933 += 1, R4934 += 1 };
  s3 -> s4 [0, 65535] { R5090 += 1, R4934 += 1, R1993 += 1, R1994 += 1, R1995 += 1 };
  s3 -> s5 [70, 70] { R5090 += 1, R4934 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s3 -> s6 [70, 70] { R5090 += 1, R4934 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s3 -> s1 [71, 65535] { R5090 += 1, R4934 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s4 -> s1 [0, 69] { R5090 += 1, R4934 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R5090 += 1, R4934 += 1 };
  s4 -> s9 [0, 65535] { R5090 += 1 };
  s4 -> s4 [0, 65535] { R5090 += 1, R4934 += 1, R1993 += 1, R1994 += 1, R1995 += 1 };
  s4 -> s5 [70, 70] { R5090 += 1, R4934 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s4 -> s6 [70, 70] { R5090 += 1, R4934 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s4 -> s1 [71, 65535] { R5090 += 1, R4934 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s10 [0, 65535] { R5090 += 1, R4934 += 1, R1993 += 1 };
  s5 -> s8 [0, 65535] { R5090 += 1, R4934 += 1 };
  s5 -> s9 [0, 65535] { R5090 += 1 };
  s5 -> s5 [0, 65535] { R5090 += 1, R4934 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R5090 += 1, R4934 += 1 };
  s6 -> s9 [0, 65535] { R5090 += 1 };
  s6 -> s6 [0, 65535] { R5090 += 1, R4934 += 1, R1993 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R5090 += 1, R4934 += 1 };
  s8 -> s9 [0, 65535] { R5090 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s9 [0, 65535] { R5090 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s10 [0, 65535] { R5090 += 1, R4934 += 1, R1993 += 1 };
  s10 -> s8 [0, 65535] { R5090 += 1, R4934 += 1 };
  s10 -> s9 [0, 65535] { R5090 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R5092 += 1, R4936 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s0 -> s2 [0, 65535] { R5092 += 1, R4936 += 1, R2002 += 1, R2003 += 1 };
  s0 -> s3 [0, 65535] { R5092 += 1, R4936 += 1, R2003 += 1, R2004 += 1, R2005 += 1 };
  s0 -> s0 [0, 65535] { R5091 += 1, R5092 += 1 };
  s0 -> s4 [0, 65535] { R5092 += 1, R4935 += 1, R4936 += 1 };
  s0 -> s5 [70, 70] { R5092 += 1, R4936 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s0 -> s6 [70, 70] { R5092 += 1, R4936 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s0 -> s1 [71, 65535] { R5092 += 1, R4936 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s1 -> s1 [0, 69] { R5092 += 1, R4936 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s1 -> s7 [0, 65535] { R5092 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s9 [0, 65535] { R5092 += 1, R4936 += 1 };
  s1 -> s1 [0, 65535] { R5092 += 1, R4936 += 1, R2003 += 1 };
  s1 -> s5 [70, 70] { R5092 += 1, R4936 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s1 -> s6 [70, 70] { R5092 += 1, R4936 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s1 -> s1 [71, 65535] { R5092 += 1, R4936 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s2 -> s1 [0, 69] { R5092 += 1, R4936 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s2 -> s7 [0, 65535] { R5092 += 1 };
  s2 -> s2 [0, 65535] { R5092 += 1, R4936 += 1, R2002 += 1, R2003 += 1 };
  s2 -> s3 [0, 65535] { R5092 += 1, R4936 += 1, R2003 += 1, R2004 += 1, R2005 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s5 [70, 70] { R5092 += 1, R4936 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s2 -> s6 [70, 70] { R5092 += 1, R4936 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s2 -> s1 [71, 65535] { R5092 += 1, R4936 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s3 -> s1 [0, 69] { R5092 += 1, R4936 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s3 -> s7 [0, 65535] { R5092 += 1 };
  s3 -> s3 [0, 65535] { R5092 += 1, R4936 += 1, R2003 += 1, R2004 += 1, R2005 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s9 [0, 65535] { R5092 += 1, R4936 += 1 };
  s3 -> s5 [70, 70] { R5092 += 1, R4936 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s3 -> s6 [70, 70] { R5092 += 1, R4936 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s3 -> s1 [71, 65535] { R5092 += 1, R4936 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s4 -> s1 [0, 69] { R5092 += 1, R4936 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s4 -> s2 [0, 65535] { R5092 += 1, R4936 += 1, R2002 += 1, R2003 += 1 };
  s4 -> s3 [0, 65535] { R5092 += 1, R4936 += 1, R2003 += 1, R2004 += 1, R2005 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [0, 65535] { R5092 += 1, R4935 += 1, R4936 += 1 };
  s4 -> s5 [70, 70] { R5092 += 1, R4936 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s4 -> s6 [70, 70] { R5092 += 1, R4936 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s4 -> s1 [71, 65535] { R5092 += 1, R4936 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s5 -> s7 [0, 65535] { R5092 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s10 [0, 65535] { R5092 += 1, R4936 += 1, R2003 += 1 };
  s5 -> s9 [0, 65535] { R5092 += 1, R4936 += 1 };
  s5 -> s5 [0, 65535] { R5092 += 1, R4936 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s6 -> s7 [0, 65535] { R5092 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [0, 65535] { R5092 += 1, R4936 += 1 };
  s6 -> s6 [0, 65535] { R5092 += 1, R4936 += 1, R2003 += 1 };
  s7 -> s7 [0, 65535] { R5092 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s7 [0, 65535] { R5092 += 1 };
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R5092 += 1, R4936 += 1 };
  s10 -> s7 [0, 65535] { R5092 += 1 };
  s10 -> s8 [0, 65535];
  s10 -> s10 [0, 65535] { R5092 += 1, R4936 += 1, R2003 += 1 };
  s10 -> s9 [0, 65535] { R5092 += 1, R4936 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R5094 += 1, R4938 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s0 -> s2 [0, 65535] { R5094 += 1, R4937 += 1, R4938 += 1 };
  s0 -> s3 [0, 65535] { R5094 += 1, R4938 += 1, R2014 += 1, R2015 += 1, R2016 += 1 };
  s0 -> s4 [0, 65535] { R5094 += 1, R4938 += 1, R2013 += 1, R2014 += 1 };
  s0 -> s0 [0, 65535] { R5093 += 1, R5094 += 1 };
  s0 -> s5 [70, 70] { R5094 += 1, R4938 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s0 -> s6 [70, 70] { R5094 += 1, R4938 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s0 -> s1 [71, 65535] { R5094 += 1, R4938 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s1 -> s1 [0, 69] { R5094 += 1, R4938 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s8 [0, 65535] { R5094 += 1, R4938 += 1 };
  s1 -> s1 [0, 65535] { R5094 += 1, R4938 += 1, R2014 += 1 };
  s1 -> s9 [0, 65535] { R5094 += 1 };
  s1 -> s5 [70, 70] { R5094 += 1, R4938 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s1 -> s6 [70, 70] { R5094 += 1, R4938 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s1 -> s1 [71, 65535] { R5094 += 1, R4938 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s2 -> s1 [0, 69] { R5094 += 1, R4938 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s2 -> s2 [0, 65535] { R5094 += 1, R4937 += 1, R4938 += 1 };
  s2 -> s3 [0, 65535] { R5094 += 1, R4938 += 1, R2014 += 1, R2015 += 1, R2016 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [0, 65535] { R5094 += 1, R4938 += 1, R2013 += 1, R2014 += 1 };
  s2 -> s5 [70, 70] { R5094 += 1, R4938 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s2 -> s6 [70, 70] { R5094 += 1, R4938 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s2 -> s1 [71, 65535] { R5094 += 1, R4938 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s3 -> s1 [0, 69] { R5094 += 1, R4938 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s3 -> s3 [0, 65535] { R5094 += 1, R4938 += 1, R2014 += 1, R2015 += 1, R2016 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s8 [0, 65535] { R5094 += 1, R4938 += 1 };
  s3 -> s9 [0, 65535] { R5094 += 1 };
  s3 -> s5 [70, 70] { R5094 += 1, R4938 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s3 -> s6 [70, 70] { R5094 += 1, R4938 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s3 -> s1 [71, 65535] { R5094 += 1, R4938 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s4 -> s1 [0, 69] { R5094 += 1, R4938 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s4 -> s3 [0, 65535] { R5094 += 1, R4938 += 1, R2014 += 1, R2015 += 1, R2016 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R5094 += 1, R4938 += 1, R2013 += 1, R2014 += 1 };
  s4 -> s9 [0, 65535] { R5094 += 1 };
  s4 -> s5 [70, 70] { R5094 += 1, R4938 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s4 -> s6 [70, 70] { R5094 += 1, R4938 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s4 -> s1 [71, 65535] { R5094 += 1, R4938 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R5094 += 1, R4938 += 1 };
  s5 -> s5 [0, 65535] { R5094 += 1, R4938 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s5 -> s10 [0, 65535] { R5094 += 1, R4938 += 1, R2014 += 1 };
  s5 -> s9 [0, 65535] { R5094 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R5094 += 1, R4938 += 1 };
  s6 -> s6 [0, 65535] { R5094 += 1, R4938 += 1, R2014 += 1 };
  s6 -> s9 [0, 65535] { R5094 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R5094 += 1, R4938 += 1 };
  s8 -> s9 [0, 65535] { R5094 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s9 [0, 65535] { R5094 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s8 [0, 65535] { R5094 += 1, R4938 += 1 };
  s10 -> s10 [0, 65535] { R5094 += 1, R4938 += 1, R2014 += 1 };
  s10 -> s9 [0, 65535] { R5094 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R5096 += 1, R4940 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s0 -> s2 [0, 65535] { R5096 += 1, R4939 += 1, R4940 += 1 };
  s0 -> s3 [0, 65535] { R5096 += 1, R4940 += 1, R2026 += 1, R2027 += 1 };
  s0 -> s4 [0, 65535] { R5096 += 1, R4940 += 1, R2027 += 1, R2028 += 1, R2029 += 1 };
  s0 -> s0 [0, 65535] { R5095 += 1, R5096 += 1 };
  s0 -> s5 [70, 70] { R5096 += 1, R4940 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s0 -> s6 [70, 70] { R5096 += 1, R4940 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s0 -> s1 [71, 65535] { R5096 += 1, R4940 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s1 -> s1 [0, 69] { R5096 += 1, R4940 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s1 -> s7 [0, 65535] { R5096 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s10 [0, 65535] { R5096 += 1, R4940 += 1 };
  s1 -> s1 [0, 65535] { R5096 += 1, R4940 += 1, R2027 += 1 };
  s1 -> s5 [70, 70] { R5096 += 1, R4940 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s1 -> s6 [70, 70] { R5096 += 1, R4940 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s1 -> s1 [71, 65535] { R5096 += 1, R4940 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s2 -> s1 [0, 69] { R5096 += 1, R4940 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s2 -> s2 [0, 65535] { R5096 += 1, R4939 += 1, R4940 += 1 };
  s2 -> s9 [0, 65535];
  s2 -> s3 [0, 65535] { R5096 += 1, R4940 += 1, R2026 += 1, R2027 += 1 };
  s2 -> s4 [0, 65535] { R5096 += 1, R4940 += 1, R2027 += 1, R2028 += 1, R2029 += 1 };
  s2 -> s5 [70, 70] { R5096 += 1, R4940 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s2 -> s6 [70, 70] { R5096 += 1, R4940 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s2 -> s1 [71, 65535] { R5096 += 1, R4940 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s3 -> s1 [0, 69] { R5096 += 1, R4940 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s3 -> s7 [0, 65535] { R5096 += 1 };
  s3 -> s9 [0, 65535];
  s3 -> s3 [0, 65535] { R5096 += 1, R4940 += 1, R2026 += 1, R2027 += 1 };
  s3 -> s4 [0, 65535] { R5096 += 1, R4940 += 1, R2027 += 1, R2028 += 1, R2029 += 1 };
  s3 -> s5 [70, 70] { R5096 += 1, R4940 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s3 -> s6 [70, 70] { R5096 += 1, R4940 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s3 -> s1 [71, 65535] { R5096 += 1, R4940 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s4 -> s1 [0, 69] { R5096 += 1, R4940 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s4 -> s7 [0, 65535] { R5096 += 1 };
  s4 -> s9 [0, 65535];
  s4 -> s10 [0, 65535] { R5096 += 1, R4940 += 1 };
  s4 -> s4 [0, 65535] { R5096 += 1, R4940 += 1, R2027 += 1, R2028 += 1, R2029 += 1 };
  s4 -> s5 [70, 70] { R5096 += 1, R4940 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s4 -> s6 [70, 70] { R5096 += 1, R4940 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s4 -> s1 [71, 65535] { R5096 += 1, R4940 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s5 -> s5 [0, 65535] { R5096 += 1, R4940 += 1, R2027 += 1 };
  s5 -> s7 [0, 65535] { R5096 += 1 };
  s5 -> s9 [0, 65535];
  s5 -> s10 [0, 65535] { R5096 += 1, R4940 += 1 };
  s6 -> s7 [0, 65535] { R5096 += 1 };
  s6 -> s8 [0, 65535] { R5096 += 1, R4940 += 1, R2027 += 1 };
  s6 -> s9 [0, 65535];
  s6 -> s10 [0, 65535] { R5096 += 1, R4940 += 1 };
  s6 -> s6 [0, 65535] { R5096 += 1, R4940 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s7 -> s7 [0, 65535] { R5096 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s7 [0, 65535] { R5096 += 1 };
  s8 -> s8 [0, 65535] { R5096 += 1, R4940 += 1, R2027 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [0, 65535] { R5096 += 1, R4940 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s7 [0, 65535] { R5096 += 1 };
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R5096 += 1, R4940 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s0 -> s2 [0, 69] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s0 -> s3 [0, 65535] { R5098 += 1, R4942 += 1, R2039 += 1, R2040 += 1 };
  s0 -> s4 [0, 65535] { R5098 += 1, R4941 += 1, R4942 += 1 };
  s0 -> s5 [0, 65535] { R5098 += 1, R4942 += 1, R2040 += 1, R2041 += 1, R2042 += 1 };
  s0 -> s0 [0, 65535] { R5097 += 1, R5098 += 1 };
  s0 -> s6 [70, 70] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s0 -> s7 [70, 70] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s0 -> s2 [71, 76] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s0 -> s1 [71, 65535] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s0 -> s8 [77, 77] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s0 -> s2 [78, 65535] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s1 -> s1 [0, 69] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s1 -> s2 [0, 69] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s1 -> s6 [70, 70] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s1 -> s7 [70, 70] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s1 -> s2 [71, 76] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s1 -> s1 [71, 65535] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s1 -> s8 [77, 77] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s1 -> s2 [78, 65535] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s2 -> s2 [0, 69] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s2 -> s6 [70, 70] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s2 -> s2 [71, 76] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s2 -> s8 [77, 77] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s2 -> s2 [78, 65535] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s3 -> s1 [0, 69] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s3 -> s2 [0, 69] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s3 -> s3 [0, 65535] { R5098 += 1, R4942 += 1, R2039 += 1, R2040 += 1 };
  s3 -> s5 [0, 65535] { R5098 += 1, R4942 += 1, R2040 += 1, R2041 += 1, R2042 += 1 };
  s3 -> s6 [70, 70] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s3 -> s7 [70, 70] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s3 -> s2 [71, 76] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s3 -> s1 [71, 65535] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s3 -> s8 [77, 77] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s3 -> s2 [78, 65535] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s4 -> s1 [0, 69] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s4 -> s2 [0, 69] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s4 -> s3 [0, 65535] { R5098 += 1, R4942 += 1, R2039 += 1, R2040 += 1 };
  s4 -> s4 [0, 65535] { R5098 += 1, R4941 += 1, R4942 += 1 };
  s4 -> s5 [0, 65535] { R5098 += 1, R4942 += 1, R2040 += 1, R2041 += 1, R2042 += 1 };
  s4 -> s6 [70, 70] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s4 -> s7 [70, 70] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s4 -> s2 [71, 76] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s4 -> s1 [71, 65535] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s4 -> s8 [77, 77] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s4 -> s2 [78, 65535] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s5 -> s1 [0, 69] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s5 -> s2 [0, 69] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s5 -> s5 [0, 65535] { R5098 += 1, R4942 += 1, R2040 += 1, R2041 += 1, R2042 += 1 };
  s5 -> s6 [70, 70] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s5 -> s7 [70, 70] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s5 -> s2 [71, 76] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s5 -> s1 [71, 65535] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s5 -> s8 [77, 77] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s5 -> s2 [78, 65535] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s6 -> s6 [0, 76] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s6 -> s12 [77, 77] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s6 -> s6 [78, 65535] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s7 -> s6 [0, 76] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s7 -> s7 [0, 65535] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s7 -> s12 [77, 77] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s7 -> s6 [78, 65535] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s8 -> s8 [0, 69] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s8 -> s9 [0, 65535] { R5098 += 1, R4942 += 1 };
  s8 -> s8 [0, 65535] { R5098 += 1, R4942 += 1, R2040 += 1 };
  s8 -> s10 [0, 65535];
  s8 -> s11 [0, 65535] { R5098 += 1 };
  s8 -> s12 [70, 70] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s8 -> s13 [70, 70] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s8 -> s8 [71, 65535] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s9 -> s9 [0, 65535] { R5098 += 1, R4942 += 1 };
  s9 -> s10 [0, 65535];
  s9 -> s11 [0, 65535] { R5098 += 1 };
  s10 -> s10 [0, 65535];
  s11 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R5098 += 1 };
  s12 -> s9 [0, 65535] { R5098 += 1, R4942 += 1 };
  s12 -> s10 [0, 65535];
  s12 -> s11 [0, 65535] { R5098 += 1 };
  s12 -> s14 [0, 65535] { R5098 += 1, R4942 += 1, R2040 += 1 };
  s12 -> s12 [0, 65535] { R5098 += 1, R4942 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s13 -> s9 [0, 65535] { R5098 += 1, R4942 += 1 };
  s13 -> s10 [0, 65535];
  s13 -> s11 [0, 65535] { R5098 += 1 };
  s13 -> s13 [0, 65535] { R5098 += 1, R4942 += 1, R2040 += 1 };
  s14 -> s9 [0, 65535] { R5098 += 1, R4942 += 1 };
  s14 -> s10 [0, 65535];
  s14 -> s11 [0, 65535] { R5098 += 1 };
  s14 -> s14 [0, 65535] { R5098 += 1, R4942 += 1, R2040 += 1 };
  accepting s12, s8, s13, s9, s14, s10, s11;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R5100 += 1, R4944 += 1, R4237 += 1, R4239 += 1, R4240 += 1, R4241 += 1 };
  s0 -> s2 [0, 65535] { R5100 += 1, R4944 += 1 };
  s0 -> s0 [0, 65535] { R5099 += 1, R5100 += 1 };
  s0 -> s3 [0, 65535] { R5100 += 1, R4943 += 1, R4944 += 1 };
  s0 -> s1 [0, 65535] { R5100 += 1, R4944 += 1, R4237 += 1 };
  s0 -> s4 [70, 70] { R5100 += 1, R4944 += 1, R4237 += 1, R4239 += 1, R4240 += 1, R4241 += 1 };
  s0 -> s5 [70, 70] { R5100 += 1, R4944 += 1, R4237 += 1, R4239 += 1, R4240 += 1, R4241 += 1 };
  s0 -> s1 [71, 65535] { R5100 += 1, R4944 += 1, R4237 += 1, R4239 += 1, R4240 += 1, R4241 += 1 };
  s1 -> s1 [0, 69] { R5100 += 1, R4944 += 1, R4237 += 1, R4239 += 1, R4240 += 1, R4241 += 1 };
  s1 -> s2 [0, 65535] { R5100 += 1, R4944 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R5100 += 1 };
  s1 -> s1 [0, 65535] { R5100 += 1, R4944 += 1, R4237 += 1 };
  s1 -> s4 [70, 70] { R5100 += 1, R4944 += 1, R4237 += 1, R4239 += 1, R4240 += 1, R4241 += 1 };
  s1 -> s5 [70, 70] { R5100 += 1, R4944 += 1, R4237 += 1, R4239 += 1, R4240 += 1, R4241 += 1 };
  s1 -> s1 [71, 65535] { R5100 += 1, R4944 += 1, R4237 += 1, R4239 += 1, R4240 += 1, R4241 += 1 };
  s2 -> s2 [0, 65535] { R5100 += 1, R4944 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R5100 += 1 };
  s3 -> s1 [0, 69] { R5100 += 1, R4944 += 1, R4237 += 1, R4239 += 1, R4240 += 1, R4241 += 1 };
  s3 -> s2 [0, 65535] { R5100 += 1, R4944 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R5100 += 1, R4943 += 1, R4944 += 1 };
  s3 -> s1 [0, 65535] { R5100 += 1, R4944 += 1, R4237 += 1 };
  s3 -> s4 [70, 70] { R5100 += 1, R4944 += 1, R4237 += 1, R4239 += 1, R4240 += 1, R4241 += 1 };
  s3 -> s5 [70, 70] { R5100 += 1, R4944 += 1, R4237 += 1, R4239 += 1, R4240 += 1, R4241 += 1 };
  s3 -> s1 [71, 65535] { R5100 += 1, R4944 += 1, R4237 += 1, R4239 += 1, R4240 += 1, R4241 += 1 };
  s4 -> s2 [0, 65535] { R5100 += 1, R4944 += 1 };
  s4 -> s8 [0, 65535] { R5100 += 1, R4944 += 1, R4237 += 1 };
  s4 -> s4 [0, 65535] { R5100 += 1, R4944 += 1, R4237 += 1, R4239 += 1, R4240 += 1, R4241 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R5100 += 1 };
  s5 -> s2 [0, 65535] { R5100 += 1, R4944 += 1 };
  s5 -> s5 [0, 65535] { R5100 += 1, R4944 += 1, R4237 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R5100 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5100 += 1 };
  s8 -> s2 [0, 65535] { R5100 += 1, R4944 += 1 };
  s8 -> s8 [0, 65535] { R5100 += 1, R4944 += 1, R4237 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R5100 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R5102 += 1, R4946 += 1, R4870 += 1, R4872 += 1, R4873 += 1, R4874 += 1 };
  s0 -> s2 [0, 65535] { R5102 += 1, R4945 += 1, R4946 += 1 };
  s0 -> s3 [0, 65535] { R5102 += 1, R4946 += 1 };
  s0 -> s4 [0, 65535] { R5102 += 1, R4946 += 1, R4870 += 1, R4871 += 1, R4872 += 1 };
  s0 -> s0 [0, 65535] { R5101 += 1, R5102 += 1 };
  s0 -> s5 [70, 70] { R5102 += 1, R4946 += 1, R4870 += 1, R4872 += 1, R4873 += 1, R4874 += 1 };
  s0 -> s6 [70, 70] { R5102 += 1, R4946 += 1, R4870 += 1, R4872 += 1, R4873 += 1, R4874 += 1 };
  s0 -> s1 [71, 65535] { R5102 += 1, R4946 += 1, R4870 += 1, R4872 += 1, R4873 += 1, R4874 += 1 };
  s1 -> s1 [0, 69] { R5102 += 1, R4946 += 1, R4870 += 1, R4872 += 1, R4873 += 1, R4874 += 1 };
  s1 -> s3 [0, 65535] { R5102 += 1, R4946 += 1 };
  s1 -> s1 [0, 65535] { R5102 += 1, R4946 += 1, R4870 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s8 [0, 65535] { R5102 += 1 };
  s1 -> s5 [70, 70] { R5102 += 1, R4946 += 1, R4870 += 1, R4872 += 1, R4873 += 1, R4874 += 1 };
  s1 -> s6 [70, 70] { R5102 += 1, R4946 += 1, R4870 += 1, R4872 += 1, R4873 += 1, R4874 += 1 };
  s1 -> s1 [71, 65535] { R5102 += 1, R4946 += 1, R4870 += 1, R4872 += 1, R4873 += 1, R4874 += 1 };
  s2 -> s1 [0, 69] { R5102 += 1, R4946 += 1, R4870 += 1, R4872 += 1, R4873 += 1, R4874 += 1 };
  s2 -> s2 [0, 65535] { R5102 += 1, R4945 += 1, R4946 += 1 };
  s2 -> s3 [0, 65535] { R5102 += 1, R4946 += 1 };
  s2 -> s4 [0, 65535] { R5102 += 1, R4946 += 1, R4870 += 1, R4871 += 1, R4872 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s5 [70, 70] { R5102 += 1, R4946 += 1, R4870 += 1, R4872 += 1, R4873 += 1, R4874 += 1 };
  s2 -> s6 [70, 70] { R5102 += 1, R4946 += 1, R4870 += 1, R4872 += 1, R4873 += 1, R4874 += 1 };
  s2 -> s1 [71, 65535] { R5102 += 1, R4946 += 1, R4870 += 1, R4872 += 1, R4873 += 1, R4874 += 1 };
  s3 -> s3 [0, 65535] { R5102 += 1, R4946 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s8 [0, 65535] { R5102 += 1 };
  s4 -> s1 [0, 69] { R5102 += 1, R4946 += 1, R4870 += 1, R4872 += 1, R4873 += 1, R4874 += 1 };
  s4 -> s3 [0, 65535] { R5102 += 1, R4946 += 1 };
  s4 -> s4 [0, 65535] { R5102 += 1, R4946 += 1, R4870 += 1, R4871 += 1, R4872 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R5102 += 1 };
  s4 -> s5 [70, 70] { R5102 += 1, R4946 += 1, R4870 += 1, R4872 += 1, R4873 += 1, R4874 += 1 };
  s4 -> s6 [70, 70] { R5102 += 1, R4946 += 1, R4870 += 1, R4872 += 1, R4873 += 1, R4874 += 1 };
  s4 -> s1 [71, 65535] { R5102 += 1, R4946 += 1, R4870 += 1, R4872 += 1, R4873 += 1, R4874 += 1 };
  s5 -> s5 [0, 65535] { R5102 += 1, R4946 += 1, R4870 += 1, R4872 += 1, R4873 += 1, R4874 += 1 };
  s5 -> s3 [0, 65535] { R5102 += 1, R4946 += 1 };
  s5 -> s9 [0, 65535] { R5102 += 1, R4946 += 1, R4870 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R5102 += 1 };
  s6 -> s3 [0, 65535] { R5102 += 1, R4946 += 1 };
  s6 -> s6 [0, 65535] { R5102 += 1, R4946 += 1, R4870 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R5102 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R5102 += 1 };
  s9 -> s3 [0, 65535] { R5102 += 1, R4946 += 1 };
  s9 -> s9 [0, 65535] { R5102 += 1, R4946 += 1, R4870 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s8 [0, 65535] { R5102 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 65535] { R5104 += 1, R4948 += 1, R28 += 1 };
  s0 -> s0 [0, 65535] { R5103 += 1, R5104 += 1 };
  s0 -> s2 [0, 65535] { R5104 += 1, R4947 += 1, R4948 += 1 };
  s1 -> s1 [0, 65535] { R5104 += 1, R4948 += 1, R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R5104 += 1 };
  s2 -> s1 [0, 65535] { R5104 += 1, R4948 += 1, R28 += 1 };
  s2 -> s2 [0, 65535] { R5104 += 1, R4947 += 1, R4948 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5104 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 66] { R5106 += 1, R4950 += 1 };
  s0 -> s0 [0, 65535] { R5105 += 1, R5106 += 1 };
  s0 -> s2 [0, 65535] { R5106 += 1, R4949 += 1, R4950 += 1 };
  s0 -> s3 [67, 67] { R5106 += 1, R4950 += 1 };
  s0 -> s4 [67, 67] { R5106 += 1, R4950 += 1 };
  s0 -> s5 [70, 70] { R5106 += 1, R4950 += 1 };
  s0 -> s1 [71, 65535] { R5106 += 1, R4950 += 1 };
  s1 -> s1 [0, 66] { R5106 += 1, R4950 += 1 };
  s1 -> s3 [67, 67] { R5106 += 1, R4950 += 1 };
  s1 -> s4 [67, 67] { R5106 += 1, R4950 += 1 };
  s1 -> s5 [70, 70] { R5106 += 1, R4950 += 1 };
  s1 -> s1 [71, 65535] { R5106 += 1, R4950 += 1 };
  s2 -> s1 [0, 66] { R5106 += 1, R4950 += 1 };
  s2 -> s2 [0, 65535] { R5106 += 1, R4949 += 1, R4950 += 1 };
  s2 -> s3 [67, 67] { R5106 += 1, R4950 += 1 };
  s2 -> s4 [67, 67] { R5106 += 1, R4950 += 1 };
  s2 -> s5 [70, 70] { R5106 += 1, R4950 += 1 };
  s2 -> s1 [71, 65535] { R5106 += 1, R4950 += 1 };
  s4 -> s4 [0, 67] { R5106 += 1, R4950 += 1 };
  s4 -> s8 [70, 70] { R5106 += 1, R4950 += 1 };
  s4 -> s4 [71, 65535] { R5106 += 1, R4950 += 1 };
  s5 -> s5 [0, 66] { R5106 += 1, R4950 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R5106 += 1 };
  s5 -> s7 [67, 67] { R5106 += 1, R4950 += 1 };
  s5 -> s8 [67, 67] { R5106 += 1, R4950 += 1 };
  s5 -> s5 [70, 65535] { R5106 += 1, R4950 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5106 += 1 };
  s8 -> s8 [0, 67] { R5106 += 1, R4950 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R5106 += 1 };
  s8 -> s8 [70, 65535] { R5106 += 1, R4950 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 66] { R5108 += 1, R4952 += 1, R1773 += 1 };
  s0 -> s2 [0, 65535] { R5108 += 1, R4951 += 1, R4952 += 1 };
  s0 -> s0 [0, 65535] { R5107 += 1, R5108 += 1 };
  s0 -> s3 [67, 67] { R5108 += 1, R4952 += 1, R1773 += 1 };
  s0 -> s4 [67, 67] { R5108 += 1, R4952 += 1, R1773 += 1 };
  s0 -> s1 [68, 65535] { R5108 += 1, R4952 += 1, R1773 += 1 };
  s1 -> s1 [0, 66] { R5108 += 1, R4952 += 1, R1773 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5108 += 1 };
  s1 -> s3 [67, 67] { R5108 += 1, R4952 += 1, R1773 += 1 };
  s1 -> s4 [67, 67] { R5108 += 1, R4952 += 1, R1773 += 1 };
  s1 -> s1 [68, 65535] { R5108 += 1, R4952 += 1, R1773 += 1 };
  s2 -> s1 [0, 66] { R5108 += 1, R4952 += 1, R1773 += 1 };
  s2 -> s2 [0, 65535] { R5108 += 1, R4951 += 1, R4952 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R5108 += 1, R4952 += 1, R1773 += 1 };
  s2 -> s4 [67, 67] { R5108 += 1, R4952 += 1, R1773 += 1 };
  s2 -> s1 [68, 65535] { R5108 += 1, R4952 += 1, R1773 += 1 };
  s3 -> s3 [0, 65535] { R5108 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5108 += 1, R4952 += 1, R1773 += 1 };
  s4 -> s6 [0, 65535] { R5108 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5108 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 66] { R5110 += 1, R4954 += 1, R1775 += 1 };
  s0 -> s0 [0, 65535] { R5109 += 1, R5110 += 1 };
  s0 -> s2 [0, 65535] { R5110 += 1, R4953 += 1, R4954 += 1 };
  s0 -> s3 [67, 67] { R5110 += 1, R4954 += 1, R1775 += 1 };
  s0 -> s4 [67, 67] { R5110 += 1, R4954 += 1, R1775 += 1 };
  s0 -> s1 [68, 65535] { R5110 += 1, R4954 += 1, R1775 += 1 };
  s1 -> s1 [0, 66] { R5110 += 1, R4954 += 1, R1775 += 1 };
  s1 -> s1 [0, 65535] { R5110 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R5110 += 1, R4954 += 1, R1775 += 1 };
  s1 -> s4 [67, 67] { R5110 += 1, R4954 += 1, R1775 += 1 };
  s1 -> s1 [68, 65535] { R5110 += 1, R4954 += 1, R1775 += 1 };
  s2 -> s1 [0, 66] { R5110 += 1, R4954 += 1, R1775 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R5110 += 1, R4953 += 1, R4954 += 1 };
  s2 -> s3 [67, 67] { R5110 += 1, R4954 += 1, R1775 += 1 };
  s2 -> s4 [67, 67] { R5110 += 1, R4954 += 1, R1775 += 1 };
  s2 -> s1 [68, 65535] { R5110 += 1, R4954 += 1, R1775 += 1 };
  s3 -> s3 [0, 65535] { R5110 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R5110 += 1, R4954 += 1, R1775 += 1 };
  s4 -> s5 [0, 65535] { R5110 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R5110 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_54 {
  init s0;
  s0 -> s1 [0, 66] { R5112 += 1, R4956 += 1, R1777 += 1, R1778 += 1 };
  s0 -> s0 [0, 65535] { R5111 += 1, R5112 += 1 };
  s0 -> s2 [0, 65535] { R5112 += 1, R4955 += 1, R4956 += 1 };
  s0 -> s3 [67, 67] { R5112 += 1, R4956 += 1, R1777 += 1, R1778 += 1 };
  s0 -> s4 [67, 67] { R5112 += 1, R4956 += 1, R1777 += 1, R1778 += 1 };
  s0 -> s1 [68, 65535] { R5112 += 1, R4956 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s1 [0, 66] { R5112 += 1, R4956 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5112 += 1 };
  s1 -> s3 [67, 67] { R5112 += 1, R4956 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s4 [67, 67] { R5112 += 1, R4956 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s1 [68, 65535] { R5112 += 1, R4956 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s1 [0, 66] { R5112 += 1, R4956 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5112 += 1, R4955 += 1, R4956 += 1 };
  s2 -> s3 [67, 67] { R5112 += 1, R4956 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s4 [67, 67] { R5112 += 1, R4956 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s1 [68, 65535] { R5112 += 1, R4956 += 1, R1777 += 1, R1778 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5112 += 1, R4956 += 1, R1777 += 1, R1778 += 1 };
  s3 -> s6 [0, 65535] { R5112 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5112 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5112 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_55 {
  init s0;
  s0 -> s1 [0, 66] { R5114 += 1, R4958 += 1, R1783 += 1, R1784 += 1 };
  s0 -> s0 [0, 65535] { R5113 += 1, R5114 += 1 };
  s0 -> s2 [0, 65535] { R5114 += 1, R4957 += 1, R4958 += 1 };
  s0 -> s3 [67, 67] { R5114 += 1, R4958 += 1, R1783 += 1, R1784 += 1 };
  s0 -> s4 [67, 67] { R5114 += 1, R4958 += 1, R1783 += 1, R1784 += 1 };
  s0 -> s1 [68, 65535] { R5114 += 1, R4958 += 1, R1783 += 1, R1784 += 1 };
  s1 -> s1 [0, 66] { R5114 += 1, R4958 += 1, R1783 += 1, R1784 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5114 += 1 };
  s1 -> s3 [67, 67] { R5114 += 1, R4958 += 1, R1783 += 1, R1784 += 1 };
  s1 -> s4 [67, 67] { R5114 += 1, R4958 += 1, R1783 += 1, R1784 += 1 };
  s1 -> s1 [68, 65535] { R5114 += 1, R4958 += 1, R1783 += 1, R1784 += 1 };
  s2 -> s1 [0, 66] { R5114 += 1, R4958 += 1, R1783 += 1, R1784 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5114 += 1, R4957 += 1, R4958 += 1 };
  s2 -> s3 [67, 67] { R5114 += 1, R4958 += 1, R1783 += 1, R1784 += 1 };
  s2 -> s4 [67, 67] { R5114 += 1, R4958 += 1, R1783 += 1, R1784 += 1 };
  s2 -> s1 [68, 65535] { R5114 += 1, R4958 += 1, R1783 += 1, R1784 += 1 };
  s3 -> s6 [0, 65535] { R5114 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5114 += 1, R4958 += 1, R1783 += 1, R1784 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5114 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5114 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_56 {
  init s0;
  s0 -> s1 [0, 66] { R5116 += 1, R4960 += 1, R1787 += 1, R1788 += 1 };
  s0 -> s2 [0, 65535] { R5116 += 1, R4959 += 1, R4960 += 1 };
  s0 -> s0 [0, 65535] { R5115 += 1, R5116 += 1 };
  s0 -> s3 [67, 67] { R5116 += 1, R4960 += 1, R1787 += 1, R1788 += 1 };
  s0 -> s4 [67, 67] { R5116 += 1, R4960 += 1, R1787 += 1, R1788 += 1 };
  s0 -> s1 [68, 65535] { R5116 += 1, R4960 += 1, R1787 += 1, R1788 += 1 };
  s1 -> s1 [0, 66] { R5116 += 1, R4960 += 1, R1787 += 1, R1788 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5116 += 1 };
  s1 -> s3 [67, 67] { R5116 += 1, R4960 += 1, R1787 += 1, R1788 += 1 };
  s1 -> s4 [67, 67] { R5116 += 1, R4960 += 1, R1787 += 1, R1788 += 1 };
  s1 -> s1 [68, 65535] { R5116 += 1, R4960 += 1, R1787 += 1, R1788 += 1 };
  s2 -> s1 [0, 66] { R5116 += 1, R4960 += 1, R1787 += 1, R1788 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5116 += 1, R4959 += 1, R4960 += 1 };
  s2 -> s3 [67, 67] { R5116 += 1, R4960 += 1, R1787 += 1, R1788 += 1 };
  s2 -> s4 [67, 67] { R5116 += 1, R4960 += 1, R1787 += 1, R1788 += 1 };
  s2 -> s1 [68, 65535] { R5116 += 1, R4960 += 1, R1787 += 1, R1788 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5116 += 1, R4960 += 1, R1787 += 1, R1788 += 1 };
  s3 -> s6 [0, 65535] { R5116 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5116 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5116 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_57 {
  init s0;
  s0 -> s1 [0, 66] { R5118 += 1, R4962 += 1, R1793 += 1, R1794 += 1 };
  s0 -> s2 [0, 65535] { R5118 += 1, R4961 += 1, R4962 += 1 };
  s0 -> s0 [0, 65535] { R5117 += 1, R5118 += 1 };
  s0 -> s3 [67, 67] { R5118 += 1, R4962 += 1, R1793 += 1, R1794 += 1 };
  s0 -> s4 [67, 67] { R5118 += 1, R4962 += 1, R1793 += 1, R1794 += 1 };
  s0 -> s1 [68, 65535] { R5118 += 1, R4962 += 1, R1793 += 1, R1794 += 1 };
  s1 -> s1 [0, 66] { R5118 += 1, R4962 += 1, R1793 += 1, R1794 += 1 };
  s1 -> s1 [0, 65535] { R5118 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R5118 += 1, R4962 += 1, R1793 += 1, R1794 += 1 };
  s1 -> s4 [67, 67] { R5118 += 1, R4962 += 1, R1793 += 1, R1794 += 1 };
  s1 -> s1 [68, 65535] { R5118 += 1, R4962 += 1, R1793 += 1, R1794 += 1 };
  s2 -> s1 [0, 66] { R5118 += 1, R4962 += 1, R1793 += 1, R1794 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5118 += 1, R4961 += 1, R4962 += 1 };
  s2 -> s3 [67, 67] { R5118 += 1, R4962 += 1, R1793 += 1, R1794 += 1 };
  s2 -> s4 [67, 67] { R5118 += 1, R4962 += 1, R1793 += 1, R1794 += 1 };
  s2 -> s1 [68, 65535] { R5118 += 1, R4962 += 1, R1793 += 1, R1794 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5118 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5118 += 1, R4962 += 1, R1793 += 1, R1794 += 1 };
  s4 -> s6 [0, 65535] { R5118 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5118 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_58 {
  init s0;
  s0 -> s1 [0, 66] { R5120 += 1, R4964 += 1, R1799 += 1, R1800 += 1 };
  s0 -> s2 [0, 65535] { R5120 += 1, R4963 += 1, R4964 += 1 };
  s0 -> s0 [0, 65535] { R5119 += 1, R5120 += 1 };
  s0 -> s3 [67, 67] { R5120 += 1, R4964 += 1, R1799 += 1, R1800 += 1 };
  s0 -> s4 [67, 67] { R5120 += 1, R4964 += 1, R1799 += 1, R1800 += 1 };
  s0 -> s1 [68, 65535] { R5120 += 1, R4964 += 1, R1799 += 1, R1800 += 1 };
  s1 -> s1 [0, 66] { R5120 += 1, R4964 += 1, R1799 += 1, R1800 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5120 += 1 };
  s1 -> s3 [67, 67] { R5120 += 1, R4964 += 1, R1799 += 1, R1800 += 1 };
  s1 -> s4 [67, 67] { R5120 += 1, R4964 += 1, R1799 += 1, R1800 += 1 };
  s1 -> s1 [68, 65535] { R5120 += 1, R4964 += 1, R1799 += 1, R1800 += 1 };
  s2 -> s1 [0, 66] { R5120 += 1, R4964 += 1, R1799 += 1, R1800 += 1 };
  s2 -> s2 [0, 65535] { R5120 += 1, R4963 += 1, R4964 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R5120 += 1, R4964 += 1, R1799 += 1, R1800 += 1 };
  s2 -> s4 [67, 67] { R5120 += 1, R4964 += 1, R1799 += 1, R1800 += 1 };
  s2 -> s1 [68, 65535] { R5120 += 1, R4964 += 1, R1799 += 1, R1800 += 1 };
  s3 -> s3 [0, 65535] { R5120 += 1, R4964 += 1, R1799 += 1, R1800 += 1 };
  s3 -> s6 [0, 65535] { R5120 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5120 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5120 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_59 {
  init s0;
  s0 -> s1 [0, 66] { R5122 += 1, R4966 += 1, R1807 += 1, R1808 += 1 };
  s0 -> s0 [0, 65535] { R5121 += 1, R5122 += 1 };
  s0 -> s2 [0, 65535] { R5122 += 1, R4965 += 1, R4966 += 1 };
  s0 -> s3 [67, 67] { R5122 += 1, R4966 += 1, R1807 += 1, R1808 += 1 };
  s0 -> s4 [67, 67] { R5122 += 1, R4966 += 1, R1807 += 1, R1808 += 1 };
  s0 -> s1 [68, 65535] { R5122 += 1, R4966 += 1, R1807 += 1, R1808 += 1 };
  s1 -> s1 [0, 66] { R5122 += 1, R4966 += 1, R1807 += 1, R1808 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5122 += 1 };
  s1 -> s3 [67, 67] { R5122 += 1, R4966 += 1, R1807 += 1, R1808 += 1 };
  s1 -> s4 [67, 67] { R5122 += 1, R4966 += 1, R1807 += 1, R1808 += 1 };
  s1 -> s1 [68, 65535] { R5122 += 1, R4966 += 1, R1807 += 1, R1808 += 1 };
  s2 -> s1 [0, 66] { R5122 += 1, R4966 += 1, R1807 += 1, R1808 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5122 += 1, R4965 += 1, R4966 += 1 };
  s2 -> s3 [67, 67] { R5122 += 1, R4966 += 1, R1807 += 1, R1808 += 1 };
  s2 -> s4 [67, 67] { R5122 += 1, R4966 += 1, R1807 += 1, R1808 += 1 };
  s2 -> s1 [68, 65535] { R5122 += 1, R4966 += 1, R1807 += 1, R1808 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R5122 += 1 };
  s3 -> s3 [0, 65535] { R5122 += 1, R4966 += 1, R1807 += 1, R1808 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5122 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5122 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_60 {
  init s0;
  s0 -> s1 [0, 66] { R5124 += 1, R4968 += 1, R1817 += 1, R1818 += 1 };
  s0 -> s0 [0, 65535] { R5123 += 1, R5124 += 1 };
  s0 -> s2 [0, 65535] { R5124 += 1, R4967 += 1, R4968 += 1 };
  s0 -> s3 [67, 67] { R5124 += 1, R4968 += 1, R1817 += 1, R1818 += 1 };
  s0 -> s4 [67, 67] { R5124 += 1, R4968 += 1, R1817 += 1, R1818 += 1 };
  s0 -> s1 [68, 65535] { R5124 += 1, R4968 += 1, R1817 += 1, R1818 += 1 };
  s1 -> s1 [0, 66] { R5124 += 1, R4968 += 1, R1817 += 1, R1818 += 1 };
  s1 -> s1 [0, 65535] { R5124 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R5124 += 1, R4968 += 1, R1817 += 1, R1818 += 1 };
  s1 -> s4 [67, 67] { R5124 += 1, R4968 += 1, R1817 += 1, R1818 += 1 };
  s1 -> s1 [68, 65535] { R5124 += 1, R4968 += 1, R1817 += 1, R1818 += 1 };
  s2 -> s1 [0, 66] { R5124 += 1, R4968 += 1, R1817 += 1, R1818 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5124 += 1, R4967 += 1, R4968 += 1 };
  s2 -> s3 [67, 67] { R5124 += 1, R4968 += 1, R1817 += 1, R1818 += 1 };
  s2 -> s4 [67, 67] { R5124 += 1, R4968 += 1, R1817 += 1, R1818 += 1 };
  s2 -> s1 [68, 65535] { R5124 += 1, R4968 += 1, R1817 += 1, R1818 += 1 };
  s3 -> s6 [0, 65535] { R5124 += 1 };
  s3 -> s3 [0, 65535] { R5124 += 1, R4968 += 1, R1817 += 1, R1818 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5124 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5124 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_61 {
  init s0;
  s0 -> s1 [0, 66] { R5126 += 1, R4970 += 1, R1825 += 1, R1826 += 1 };
  s0 -> s2 [0, 65535] { R5126 += 1, R4969 += 1, R4970 += 1 };
  s0 -> s0 [0, 65535] { R5125 += 1, R5126 += 1 };
  s0 -> s3 [67, 67] { R5126 += 1, R4970 += 1, R1825 += 1, R1826 += 1 };
  s0 -> s4 [67, 67] { R5126 += 1, R4970 += 1, R1825 += 1, R1826 += 1 };
  s0 -> s1 [68, 65535] { R5126 += 1, R4970 += 1, R1825 += 1, R1826 += 1 };
  s1 -> s1 [0, 66] { R5126 += 1, R4970 += 1, R1825 += 1, R1826 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5126 += 1 };
  s1 -> s3 [67, 67] { R5126 += 1, R4970 += 1, R1825 += 1, R1826 += 1 };
  s1 -> s4 [67, 67] { R5126 += 1, R4970 += 1, R1825 += 1, R1826 += 1 };
  s1 -> s1 [68, 65535] { R5126 += 1, R4970 += 1, R1825 += 1, R1826 += 1 };
  s2 -> s1 [0, 66] { R5126 += 1, R4970 += 1, R1825 += 1, R1826 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5126 += 1, R4969 += 1, R4970 += 1 };
  s2 -> s3 [67, 67] { R5126 += 1, R4970 += 1, R1825 += 1, R1826 += 1 };
  s2 -> s4 [67, 67] { R5126 += 1, R4970 += 1, R1825 += 1, R1826 += 1 };
  s2 -> s1 [68, 65535] { R5126 += 1, R4970 += 1, R1825 += 1, R1826 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5126 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5126 += 1 };
  s4 -> s4 [0, 65535] { R5126 += 1, R4970 += 1, R1825 += 1, R1826 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5126 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_62 {
  init s0;
  s0 -> s1 [0, 66] { R5128 += 1, R4972 += 1, R1835 += 1, R1836 += 1 };
  s0 -> s0 [0, 65535] { R5127 += 1, R5128 += 1 };
  s0 -> s2 [0, 65535] { R5128 += 1, R4971 += 1, R4972 += 1 };
  s0 -> s3 [67, 67] { R5128 += 1, R4972 += 1, R1835 += 1, R1836 += 1 };
  s0 -> s4 [67, 67] { R5128 += 1, R4972 += 1, R1835 += 1, R1836 += 1 };
  s0 -> s1 [68, 65535] { R5128 += 1, R4972 += 1, R1835 += 1, R1836 += 1 };
  s1 -> s1 [0, 66] { R5128 += 1, R4972 += 1, R1835 += 1, R1836 += 1 };
  s1 -> s1 [0, 65535] { R5128 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R5128 += 1, R4972 += 1, R1835 += 1, R1836 += 1 };
  s1 -> s4 [67, 67] { R5128 += 1, R4972 += 1, R1835 += 1, R1836 += 1 };
  s1 -> s1 [68, 65535] { R5128 += 1, R4972 += 1, R1835 += 1, R1836 += 1 };
  s2 -> s1 [0, 66] { R5128 += 1, R4972 += 1, R1835 += 1, R1836 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R5128 += 1, R4971 += 1, R4972 += 1 };
  s2 -> s3 [67, 67] { R5128 += 1, R4972 += 1, R1835 += 1, R1836 += 1 };
  s2 -> s4 [67, 67] { R5128 += 1, R4972 += 1, R1835 += 1, R1836 += 1 };
  s2 -> s1 [68, 65535] { R5128 += 1, R4972 += 1, R1835 += 1, R1836 += 1 };
  s3 -> s3 [0, 65535] { R5128 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R5128 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R5128 += 1, R4972 += 1, R1835 += 1, R1836 += 1 };
  s5 -> s5 [0, 65535] { R5128 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_63 {
  init s0;
  s0 -> s1 [0, 66] { R5130 += 1, R4974 += 1, R1843 += 1, R1844 += 1 };
  s0 -> s2 [0, 65535] { R5130 += 1, R4973 += 1, R4974 += 1 };
  s0 -> s0 [0, 65535] { R5129 += 1, R5130 += 1 };
  s0 -> s3 [67, 67] { R5130 += 1, R4974 += 1, R1843 += 1, R1844 += 1 };
  s0 -> s4 [67, 67] { R5130 += 1, R4974 += 1, R1843 += 1, R1844 += 1 };
  s0 -> s1 [68, 65535] { R5130 += 1, R4974 += 1, R1843 += 1, R1844 += 1 };
  s1 -> s1 [0, 66] { R5130 += 1, R4974 += 1, R1843 += 1, R1844 += 1 };
  s1 -> s1 [0, 65535] { R5130 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R5130 += 1, R4974 += 1, R1843 += 1, R1844 += 1 };
  s1 -> s4 [67, 67] { R5130 += 1, R4974 += 1, R1843 += 1, R1844 += 1 };
  s1 -> s1 [68, 65535] { R5130 += 1, R4974 += 1, R1843 += 1, R1844 += 1 };
  s2 -> s1 [0, 66] { R5130 += 1, R4974 += 1, R1843 += 1, R1844 += 1 };
  s2 -> s2 [0, 65535] { R5130 += 1, R4973 += 1, R4974 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R5130 += 1, R4974 += 1, R1843 += 1, R1844 += 1 };
  s2 -> s4 [67, 67] { R5130 += 1, R4974 += 1, R1843 += 1, R1844 += 1 };
  s2 -> s1 [68, 65535] { R5130 += 1, R4974 += 1, R1843 += 1, R1844 += 1 };
  s3 -> s3 [0, 65535] { R5130 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R5130 += 1, R4974 += 1, R1843 += 1, R1844 += 1 };
  s4 -> s5 [0, 65535] { R5130 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R5130 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_64 {
  init s0;
  s0 -> s1 [0, 66] { R5132 += 1, R4976 += 1, R1847 += 1, R1848 += 1 };
  s0 -> s0 [0, 65535] { R5131 += 1, R5132 += 1 };
  s0 -> s2 [0, 65535] { R5132 += 1, R4975 += 1, R4976 += 1 };
  s0 -> s3 [67, 67] { R5132 += 1, R4976 += 1, R1847 += 1, R1848 += 1 };
  s0 -> s4 [67, 67] { R5132 += 1, R4976 += 1, R1847 += 1, R1848 += 1 };
  s0 -> s1 [68, 65535] { R5132 += 1, R4976 += 1, R1847 += 1, R1848 += 1 };
  s1 -> s1 [0, 66] { R5132 += 1, R4976 += 1, R1847 += 1, R1848 += 1 };
  s1 -> s1 [0, 65535] { R5132 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R5132 += 1, R4976 += 1, R1847 += 1, R1848 += 1 };
  s1 -> s4 [67, 67] { R5132 += 1, R4976 += 1, R1847 += 1, R1848 += 1 };
  s1 -> s1 [68, 65535] { R5132 += 1, R4976 += 1, R1847 += 1, R1848 += 1 };
  s2 -> s1 [0, 66] { R5132 += 1, R4976 += 1, R1847 += 1, R1848 += 1 };
  s2 -> s2 [0, 65535] { R5132 += 1, R4975 += 1, R4976 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R5132 += 1, R4976 += 1, R1847 += 1, R1848 += 1 };
  s2 -> s4 [67, 67] { R5132 += 1, R4976 += 1, R1847 += 1, R1848 += 1 };
  s2 -> s1 [68, 65535] { R5132 += 1, R4976 += 1, R1847 += 1, R1848 += 1 };
  s3 -> s3 [0, 65535] { R5132 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5132 += 1 };
  s4 -> s4 [0, 65535] { R5132 += 1, R4976 += 1, R1847 += 1, R1848 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5132 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_65 {
  init s0;
  s0 -> s1 [0, 66] { R5134 += 1, R4978 += 1, R1853 += 1, R1854 += 1 };
  s0 -> s2 [0, 65535] { R5134 += 1, R4977 += 1, R4978 += 1 };
  s0 -> s0 [0, 65535] { R5133 += 1, R5134 += 1 };
  s0 -> s3 [67, 67] { R5134 += 1, R4978 += 1, R1853 += 1, R1854 += 1 };
  s0 -> s4 [67, 67] { R5134 += 1, R4978 += 1, R1853 += 1, R1854 += 1 };
  s0 -> s1 [68, 65535] { R5134 += 1, R4978 += 1, R1853 += 1, R1854 += 1 };
  s1 -> s1 [0, 66] { R5134 += 1, R4978 += 1, R1853 += 1, R1854 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5134 += 1 };
  s1 -> s3 [67, 67] { R5134 += 1, R4978 += 1, R1853 += 1, R1854 += 1 };
  s1 -> s4 [67, 67] { R5134 += 1, R4978 += 1, R1853 += 1, R1854 += 1 };
  s1 -> s1 [68, 65535] { R5134 += 1, R4978 += 1, R1853 += 1, R1854 += 1 };
  s2 -> s1 [0, 66] { R5134 += 1, R4978 += 1, R1853 += 1, R1854 += 1 };
  s2 -> s2 [0, 65535] { R5134 += 1, R4977 += 1, R4978 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R5134 += 1, R4978 += 1, R1853 += 1, R1854 += 1 };
  s2 -> s4 [67, 67] { R5134 += 1, R4978 += 1, R1853 += 1, R1854 += 1 };
  s2 -> s1 [68, 65535] { R5134 += 1, R4978 += 1, R1853 += 1, R1854 += 1 };
  s3 -> s3 [0, 65535] { R5134 += 1, R4978 += 1, R1853 += 1, R1854 += 1 };
  s3 -> s6 [0, 65535] { R5134 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5134 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5134 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_66 {
  init s0;
  s0 -> s1 [0, 66] { R5136 += 1, R4980 += 1, R1859 += 1, R1860 += 1 };
  s0 -> s2 [0, 65535] { R5136 += 1, R4979 += 1, R4980 += 1 };
  s0 -> s0 [0, 65535] { R5135 += 1, R5136 += 1 };
  s0 -> s3 [67, 67] { R5136 += 1, R4980 += 1, R1859 += 1, R1860 += 1 };
  s0 -> s4 [67, 67] { R5136 += 1, R4980 += 1, R1859 += 1, R1860 += 1 };
  s0 -> s1 [68, 65535] { R5136 += 1, R4980 += 1, R1859 += 1, R1860 += 1 };
  s1 -> s1 [0, 66] { R5136 += 1, R4980 += 1, R1859 += 1, R1860 += 1 };
  s1 -> s1 [0, 65535] { R5136 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R5136 += 1, R4980 += 1, R1859 += 1, R1860 += 1 };
  s1 -> s4 [67, 67] { R5136 += 1, R4980 += 1, R1859 += 1, R1860 += 1 };
  s1 -> s1 [68, 65535] { R5136 += 1, R4980 += 1, R1859 += 1, R1860 += 1 };
  s2 -> s1 [0, 66] { R5136 += 1, R4980 += 1, R1859 += 1, R1860 += 1 };
  s2 -> s2 [0, 65535] { R5136 += 1, R4979 += 1, R4980 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R5136 += 1, R4980 += 1, R1859 += 1, R1860 += 1 };
  s2 -> s4 [67, 67] { R5136 += 1, R4980 += 1, R1859 += 1, R1860 += 1 };
  s2 -> s1 [68, 65535] { R5136 += 1, R4980 += 1, R1859 += 1, R1860 += 1 };
  s3 -> s3 [0, 65535] { R5136 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R5136 += 1 };
  s4 -> s4 [0, 65535] { R5136 += 1, R4980 += 1, R1859 += 1, R1860 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R5136 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_67 {
  init s0;
  s0 -> s1 [0, 66] { R5138 += 1, R4982 += 1, R1867 += 1, R1868 += 1 };
  s0 -> s2 [0, 65535] { R5138 += 1, R4981 += 1, R4982 += 1 };
  s0 -> s0 [0, 65535] { R5137 += 1, R5138 += 1 };
  s0 -> s3 [67, 67] { R5138 += 1, R4982 += 1, R1867 += 1, R1868 += 1 };
  s0 -> s4 [67, 67] { R5138 += 1, R4982 += 1, R1867 += 1, R1868 += 1 };
  s0 -> s1 [68, 65535] { R5138 += 1, R4982 += 1, R1867 += 1, R1868 += 1 };
  s1 -> s1 [0, 66] { R5138 += 1, R4982 += 1, R1867 += 1, R1868 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5138 += 1 };
  s1 -> s3 [67, 67] { R5138 += 1, R4982 += 1, R1867 += 1, R1868 += 1 };
  s1 -> s4 [67, 67] { R5138 += 1, R4982 += 1, R1867 += 1, R1868 += 1 };
  s1 -> s1 [68, 65535] { R5138 += 1, R4982 += 1, R1867 += 1, R1868 += 1 };
  s2 -> s1 [0, 66] { R5138 += 1, R4982 += 1, R1867 += 1, R1868 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5138 += 1, R4981 += 1, R4982 += 1 };
  s2 -> s3 [67, 67] { R5138 += 1, R4982 += 1, R1867 += 1, R1868 += 1 };
  s2 -> s4 [67, 67] { R5138 += 1, R4982 += 1, R1867 += 1, R1868 += 1 };
  s2 -> s1 [68, 65535] { R5138 += 1, R4982 += 1, R1867 += 1, R1868 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5138 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5138 += 1 };
  s4 -> s4 [0, 65535] { R5138 += 1, R4982 += 1, R1867 += 1, R1868 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5138 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_68 {
  init s0;
  s0 -> s1 [0, 66] { R5140 += 1, R4984 += 1, R1877 += 1, R1878 += 1 };
  s0 -> s2 [0, 65535] { R5140 += 1, R4983 += 1, R4984 += 1 };
  s0 -> s0 [0, 65535] { R5139 += 1, R5140 += 1 };
  s0 -> s3 [67, 67] { R5140 += 1, R4984 += 1, R1877 += 1, R1878 += 1 };
  s0 -> s4 [67, 67] { R5140 += 1, R4984 += 1, R1877 += 1, R1878 += 1 };
  s0 -> s1 [68, 65535] { R5140 += 1, R4984 += 1, R1877 += 1, R1878 += 1 };
  s1 -> s1 [0, 66] { R5140 += 1, R4984 += 1, R1877 += 1, R1878 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5140 += 1 };
  s1 -> s3 [67, 67] { R5140 += 1, R4984 += 1, R1877 += 1, R1878 += 1 };
  s1 -> s4 [67, 67] { R5140 += 1, R4984 += 1, R1877 += 1, R1878 += 1 };
  s1 -> s1 [68, 65535] { R5140 += 1, R4984 += 1, R1877 += 1, R1878 += 1 };
  s2 -> s1 [0, 66] { R5140 += 1, R4984 += 1, R1877 += 1, R1878 += 1 };
  s2 -> s2 [0, 65535] { R5140 += 1, R4983 += 1, R4984 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R5140 += 1, R4984 += 1, R1877 += 1, R1878 += 1 };
  s2 -> s4 [67, 67] { R5140 += 1, R4984 += 1, R1877 += 1, R1878 += 1 };
  s2 -> s1 [68, 65535] { R5140 += 1, R4984 += 1, R1877 += 1, R1878 += 1 };
  s3 -> s3 [0, 65535] { R5140 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5140 += 1 };
  s4 -> s4 [0, 65535] { R5140 += 1, R4984 += 1, R1877 += 1, R1878 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5140 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_69 {
  init s0;
  s0 -> s1 [0, 66] { R5142 += 1, R4986 += 1, R1885 += 1, R1886 += 1 };
  s0 -> s0 [0, 65535] { R5141 += 1, R5142 += 1 };
  s0 -> s2 [0, 65535] { R5142 += 1, R4985 += 1, R4986 += 1 };
  s0 -> s3 [67, 67] { R5142 += 1, R4986 += 1, R1885 += 1, R1886 += 1 };
  s0 -> s4 [67, 67] { R5142 += 1, R4986 += 1, R1885 += 1, R1886 += 1 };
  s0 -> s1 [68, 65535] { R5142 += 1, R4986 += 1, R1885 += 1, R1886 += 1 };
  s1 -> s1 [0, 66] { R5142 += 1, R4986 += 1, R1885 += 1, R1886 += 1 };
  s1 -> s1 [0, 65535] { R5142 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R5142 += 1, R4986 += 1, R1885 += 1, R1886 += 1 };
  s1 -> s4 [67, 67] { R5142 += 1, R4986 += 1, R1885 += 1, R1886 += 1 };
  s1 -> s1 [68, 65535] { R5142 += 1, R4986 += 1, R1885 += 1, R1886 += 1 };
  s2 -> s1 [0, 66] { R5142 += 1, R4986 += 1, R1885 += 1, R1886 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R5142 += 1, R4985 += 1, R4986 += 1 };
  s2 -> s3 [67, 67] { R5142 += 1, R4986 += 1, R1885 += 1, R1886 += 1 };
  s2 -> s4 [67, 67] { R5142 += 1, R4986 += 1, R1885 += 1, R1886 += 1 };
  s2 -> s1 [68, 65535] { R5142 += 1, R4986 += 1, R1885 += 1, R1886 += 1 };
  s3 -> s3 [0, 65535] { R5142 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R5142 += 1, R4986 += 1, R1885 += 1, R1886 += 1 };
  s4 -> s5 [0, 65535] { R5142 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R5142 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_70 {
  init s0;
  s0 -> s1 [0, 66] { R5144 += 1, R4988 += 1, R1895 += 1, R1896 += 1 };
  s0 -> s0 [0, 65535] { R5143 += 1, R5144 += 1 };
  s0 -> s2 [0, 65535] { R5144 += 1, R4987 += 1, R4988 += 1 };
  s0 -> s3 [67, 67] { R5144 += 1, R4988 += 1, R1895 += 1, R1896 += 1 };
  s0 -> s4 [67, 67] { R5144 += 1, R4988 += 1, R1895 += 1, R1896 += 1 };
  s0 -> s1 [68, 65535] { R5144 += 1, R4988 += 1, R1895 += 1, R1896 += 1 };
  s1 -> s1 [0, 66] { R5144 += 1, R4988 += 1, R1895 += 1, R1896 += 1 };
  s1 -> s1 [0, 65535] { R5144 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R5144 += 1, R4988 += 1, R1895 += 1, R1896 += 1 };
  s1 -> s4 [67, 67] { R5144 += 1, R4988 += 1, R1895 += 1, R1896 += 1 };
  s1 -> s1 [68, 65535] { R5144 += 1, R4988 += 1, R1895 += 1, R1896 += 1 };
  s2 -> s1 [0, 66] { R5144 += 1, R4988 += 1, R1895 += 1, R1896 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R5144 += 1, R4987 += 1, R4988 += 1 };
  s2 -> s3 [67, 67] { R5144 += 1, R4988 += 1, R1895 += 1, R1896 += 1 };
  s2 -> s4 [67, 67] { R5144 += 1, R4988 += 1, R1895 += 1, R1896 += 1 };
  s2 -> s1 [68, 65535] { R5144 += 1, R4988 += 1, R1895 += 1, R1896 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R5144 += 1 };
  s4 -> s5 [0, 65535] { R5144 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R5144 += 1, R4988 += 1, R1895 += 1, R1896 += 1 };
  s5 -> s5 [0, 65535] { R5144 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_71 {
  init s0;
  s0 -> s1 [0, 66] { R5146 += 1, R4990 += 1, R1905 += 1, R1906 += 1 };
  s0 -> s2 [0, 65535] { R5146 += 1, R4989 += 1, R4990 += 1 };
  s0 -> s0 [0, 65535] { R5145 += 1, R5146 += 1 };
  s0 -> s3 [67, 67] { R5146 += 1, R4990 += 1, R1905 += 1, R1906 += 1 };
  s0 -> s4 [67, 67] { R5146 += 1, R4990 += 1, R1905 += 1, R1906 += 1 };
  s0 -> s1 [68, 65535] { R5146 += 1, R4990 += 1, R1905 += 1, R1906 += 1 };
  s1 -> s1 [0, 66] { R5146 += 1, R4990 += 1, R1905 += 1, R1906 += 1 };
  s1 -> s1 [0, 65535] { R5146 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R5146 += 1, R4990 += 1, R1905 += 1, R1906 += 1 };
  s1 -> s4 [67, 67] { R5146 += 1, R4990 += 1, R1905 += 1, R1906 += 1 };
  s1 -> s1 [68, 65535] { R5146 += 1, R4990 += 1, R1905 += 1, R1906 += 1 };
  s2 -> s1 [0, 66] { R5146 += 1, R4990 += 1, R1905 += 1, R1906 += 1 };
  s2 -> s2 [0, 65535] { R5146 += 1, R4989 += 1, R4990 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R5146 += 1, R4990 += 1, R1905 += 1, R1906 += 1 };
  s2 -> s4 [67, 67] { R5146 += 1, R4990 += 1, R1905 += 1, R1906 += 1 };
  s2 -> s1 [68, 65535] { R5146 += 1, R4990 += 1, R1905 += 1, R1906 += 1 };
  s3 -> s3 [0, 65535] { R5146 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R5146 += 1, R4990 += 1, R1905 += 1, R1906 += 1 };
  s4 -> s5 [0, 65535] { R5146 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R5146 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_72 {
  init s0;
  s0 -> s1 [0, 66] { R5148 += 1, R4992 += 1, R1917 += 1, R1918 += 1 };
  s0 -> s2 [0, 65535] { R5148 += 1, R4991 += 1, R4992 += 1 };
  s0 -> s0 [0, 65535] { R5147 += 1, R5148 += 1 };
  s0 -> s3 [67, 67] { R5148 += 1, R4992 += 1, R1917 += 1, R1918 += 1 };
  s0 -> s4 [67, 67] { R5148 += 1, R4992 += 1, R1917 += 1, R1918 += 1 };
  s0 -> s1 [68, 65535] { R5148 += 1, R4992 += 1, R1917 += 1, R1918 += 1 };
  s1 -> s1 [0, 66] { R5148 += 1, R4992 += 1, R1917 += 1, R1918 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5148 += 1 };
  s1 -> s3 [67, 67] { R5148 += 1, R4992 += 1, R1917 += 1, R1918 += 1 };
  s1 -> s4 [67, 67] { R5148 += 1, R4992 += 1, R1917 += 1, R1918 += 1 };
  s1 -> s1 [68, 65535] { R5148 += 1, R4992 += 1, R1917 += 1, R1918 += 1 };
  s2 -> s1 [0, 66] { R5148 += 1, R4992 += 1, R1917 += 1, R1918 += 1 };
  s2 -> s2 [0, 65535] { R5148 += 1, R4991 += 1, R4992 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R5148 += 1, R4992 += 1, R1917 += 1, R1918 += 1 };
  s2 -> s4 [67, 67] { R5148 += 1, R4992 += 1, R1917 += 1, R1918 += 1 };
  s2 -> s1 [68, 65535] { R5148 += 1, R4992 += 1, R1917 += 1, R1918 += 1 };
  s3 -> s3 [0, 65535] { R5148 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5148 += 1, R4992 += 1, R1917 += 1, R1918 += 1 };
  s4 -> s6 [0, 65535] { R5148 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5148 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_73 {
  init s0;
  s0 -> s1 [0, 66] { R5150 += 1, R4994 += 1, R1931 += 1, R1932 += 1 };
  s0 -> s2 [0, 65535] { R5150 += 1, R4993 += 1, R4994 += 1 };
  s0 -> s0 [0, 65535] { R5149 += 1, R5150 += 1 };
  s0 -> s3 [67, 67] { R5150 += 1, R4994 += 1, R1931 += 1, R1932 += 1 };
  s0 -> s4 [67, 67] { R5150 += 1, R4994 += 1, R1931 += 1, R1932 += 1 };
  s0 -> s1 [68, 65535] { R5150 += 1, R4994 += 1, R1931 += 1, R1932 += 1 };
  s1 -> s1 [0, 66] { R5150 += 1, R4994 += 1, R1931 += 1, R1932 += 1 };
  s1 -> s1 [0, 65535] { R5150 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R5150 += 1, R4994 += 1, R1931 += 1, R1932 += 1 };
  s1 -> s4 [67, 67] { R5150 += 1, R4994 += 1, R1931 += 1, R1932 += 1 };
  s1 -> s1 [68, 65535] { R5150 += 1, R4994 += 1, R1931 += 1, R1932 += 1 };
  s2 -> s1 [0, 66] { R5150 += 1, R4994 += 1, R1931 += 1, R1932 += 1 };
  s2 -> s2 [0, 65535] { R5150 += 1, R4993 += 1, R4994 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R5150 += 1, R4994 += 1, R1931 += 1, R1932 += 1 };
  s2 -> s4 [67, 67] { R5150 += 1, R4994 += 1, R1931 += 1, R1932 += 1 };
  s2 -> s1 [68, 65535] { R5150 += 1, R4994 += 1, R1931 += 1, R1932 += 1 };
  s3 -> s3 [0, 65535] { R5150 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R5150 += 1 };
  s4 -> s4 [0, 65535] { R5150 += 1, R4994 += 1, R1931 += 1, R1932 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R5150 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_74 {
  init s0;
  s0 -> s1 [0, 66] { R5152 += 1, R4996 += 1, R1943 += 1, R1944 += 1 };
  s0 -> s0 [0, 65535] { R5151 += 1, R5152 += 1 };
  s0 -> s2 [0, 65535] { R5152 += 1, R4995 += 1, R4996 += 1 };
  s0 -> s3 [67, 67] { R5152 += 1, R4996 += 1, R1943 += 1, R1944 += 1 };
  s0 -> s4 [67, 67] { R5152 += 1, R4996 += 1, R1943 += 1, R1944 += 1 };
  s0 -> s1 [68, 65535] { R5152 += 1, R4996 += 1, R1943 += 1, R1944 += 1 };
  s1 -> s1 [0, 66] { R5152 += 1, R4996 += 1, R1943 += 1, R1944 += 1 };
  s1 -> s1 [0, 65535] { R5152 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R5152 += 1, R4996 += 1, R1943 += 1, R1944 += 1 };
  s1 -> s4 [67, 67] { R5152 += 1, R4996 += 1, R1943 += 1, R1944 += 1 };
  s1 -> s1 [68, 65535] { R5152 += 1, R4996 += 1, R1943 += 1, R1944 += 1 };
  s2 -> s1 [0, 66] { R5152 += 1, R4996 += 1, R1943 += 1, R1944 += 1 };
  s2 -> s2 [0, 65535] { R5152 += 1, R4995 += 1, R4996 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R5152 += 1, R4996 += 1, R1943 += 1, R1944 += 1 };
  s2 -> s4 [67, 67] { R5152 += 1, R4996 += 1, R1943 += 1, R1944 += 1 };
  s2 -> s1 [68, 65535] { R5152 += 1, R4996 += 1, R1943 += 1, R1944 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5152 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5152 += 1, R4996 += 1, R1943 += 1, R1944 += 1 };
  s4 -> s6 [0, 65535] { R5152 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5152 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_75 {
  init s0;
  s0 -> s1 [0, 66] { R5154 += 1, R4998 += 1, R1957 += 1, R1958 += 1 };
  s0 -> s2 [0, 65535] { R5154 += 1, R4997 += 1, R4998 += 1 };
  s0 -> s0 [0, 65535] { R5153 += 1, R5154 += 1 };
  s0 -> s3 [67, 67] { R5154 += 1, R4998 += 1, R1957 += 1, R1958 += 1 };
  s0 -> s4 [67, 67] { R5154 += 1, R4998 += 1, R1957 += 1, R1958 += 1 };
  s0 -> s1 [68, 65535] { R5154 += 1, R4998 += 1, R1957 += 1, R1958 += 1 };
  s1 -> s1 [0, 66] { R5154 += 1, R4998 += 1, R1957 += 1, R1958 += 1 };
  s1 -> s1 [0, 65535] { R5154 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R5154 += 1, R4998 += 1, R1957 += 1, R1958 += 1 };
  s1 -> s4 [67, 67] { R5154 += 1, R4998 += 1, R1957 += 1, R1958 += 1 };
  s1 -> s1 [68, 65535] { R5154 += 1, R4998 += 1, R1957 += 1, R1958 += 1 };
  s2 -> s1 [0, 66] { R5154 += 1, R4998 += 1, R1957 += 1, R1958 += 1 };
  s2 -> s2 [0, 65535] { R5154 += 1, R4997 += 1, R4998 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R5154 += 1, R4998 += 1, R1957 += 1, R1958 += 1 };
  s2 -> s4 [67, 67] { R5154 += 1, R4998 += 1, R1957 += 1, R1958 += 1 };
  s2 -> s1 [68, 65535] { R5154 += 1, R4998 += 1, R1957 += 1, R1958 += 1 };
  s3 -> s3 [0, 65535] { R5154 += 1, R4998 += 1, R1957 += 1, R1958 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R5154 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5154 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5154 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_76 {
  init s0;
  s0 -> s1 [0, 66] { R5156 += 1, R5000 += 1, R1969 += 1, R1970 += 1 };
  s0 -> s0 [0, 65535] { R5155 += 1, R5156 += 1 };
  s0 -> s2 [0, 65535] { R5156 += 1, R4999 += 1, R5000 += 1 };
  s0 -> s3 [67, 67] { R5156 += 1, R5000 += 1, R1969 += 1, R1970 += 1 };
  s0 -> s4 [67, 67] { R5156 += 1, R5000 += 1, R1969 += 1, R1970 += 1 };
  s0 -> s1 [68, 65535] { R5156 += 1, R5000 += 1, R1969 += 1, R1970 += 1 };
  s1 -> s1 [0, 66] { R5156 += 1, R5000 += 1, R1969 += 1, R1970 += 1 };
  s1 -> s1 [0, 65535] { R5156 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R5156 += 1, R5000 += 1, R1969 += 1, R1970 += 1 };
  s1 -> s4 [67, 67] { R5156 += 1, R5000 += 1, R1969 += 1, R1970 += 1 };
  s1 -> s1 [68, 65535] { R5156 += 1, R5000 += 1, R1969 += 1, R1970 += 1 };
  s2 -> s1 [0, 66] { R5156 += 1, R5000 += 1, R1969 += 1, R1970 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5156 += 1, R4999 += 1, R5000 += 1 };
  s2 -> s3 [67, 67] { R5156 += 1, R5000 += 1, R1969 += 1, R1970 += 1 };
  s2 -> s4 [67, 67] { R5156 += 1, R5000 += 1, R1969 += 1, R1970 += 1 };
  s2 -> s1 [68, 65535] { R5156 += 1, R5000 += 1, R1969 += 1, R1970 += 1 };
  s3 -> s3 [0, 65535] { R5156 += 1, R5000 += 1, R1969 += 1, R1970 += 1 };
  s3 -> s6 [0, 65535] { R5156 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5156 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5156 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_77 {
  init s0;
  s0 -> s1 [0, 66] { R5158 += 1, R5002 += 1, R1979 += 1, R1980 += 1 };
  s0 -> s2 [0, 65535] { R5158 += 1, R5001 += 1, R5002 += 1 };
  s0 -> s0 [0, 65535] { R5157 += 1, R5158 += 1 };
  s0 -> s3 [67, 67] { R5158 += 1, R5002 += 1, R1979 += 1, R1980 += 1 };
  s0 -> s4 [67, 67] { R5158 += 1, R5002 += 1, R1979 += 1, R1980 += 1 };
  s0 -> s1 [68, 65535] { R5158 += 1, R5002 += 1, R1979 += 1, R1980 += 1 };
  s1 -> s1 [0, 66] { R5158 += 1, R5002 += 1, R1979 += 1, R1980 += 1 };
  s1 -> s1 [0, 65535] { R5158 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R5158 += 1, R5002 += 1, R1979 += 1, R1980 += 1 };
  s1 -> s4 [67, 67] { R5158 += 1, R5002 += 1, R1979 += 1, R1980 += 1 };
  s1 -> s1 [68, 65535] { R5158 += 1, R5002 += 1, R1979 += 1, R1980 += 1 };
  s2 -> s1 [0, 66] { R5158 += 1, R5002 += 1, R1979 += 1, R1980 += 1 };
  s2 -> s2 [0, 65535] { R5158 += 1, R5001 += 1, R5002 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R5158 += 1, R5002 += 1, R1979 += 1, R1980 += 1 };
  s2 -> s4 [67, 67] { R5158 += 1, R5002 += 1, R1979 += 1, R1980 += 1 };
  s2 -> s1 [68, 65535] { R5158 += 1, R5002 += 1, R1979 += 1, R1980 += 1 };
  s3 -> s3 [0, 65535] { R5158 += 1, R5002 += 1, R1979 += 1, R1980 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R5158 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5158 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5158 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_78 {
  init s0;
  s0 -> s1 [0, 66] { R5160 += 1, R5004 += 1, R1987 += 1, R1988 += 1 };
  s0 -> s0 [0, 65535] { R5159 += 1, R5160 += 1 };
  s0 -> s2 [0, 65535] { R5160 += 1, R5003 += 1, R5004 += 1 };
  s0 -> s3 [67, 67] { R5160 += 1, R5004 += 1, R1987 += 1, R1988 += 1 };
  s0 -> s4 [67, 67] { R5160 += 1, R5004 += 1, R1987 += 1, R1988 += 1 };
  s0 -> s1 [68, 65535] { R5160 += 1, R5004 += 1, R1987 += 1, R1988 += 1 };
  s1 -> s1 [0, 66] { R5160 += 1, R5004 += 1, R1987 += 1, R1988 += 1 };
  s1 -> s1 [0, 65535] { R5160 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R5160 += 1, R5004 += 1, R1987 += 1, R1988 += 1 };
  s1 -> s4 [67, 67] { R5160 += 1, R5004 += 1, R1987 += 1, R1988 += 1 };
  s1 -> s1 [68, 65535] { R5160 += 1, R5004 += 1, R1987 += 1, R1988 += 1 };
  s2 -> s1 [0, 66] { R5160 += 1, R5004 += 1, R1987 += 1, R1988 += 1 };
  s2 -> s2 [0, 65535] { R5160 += 1, R5003 += 1, R5004 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R5160 += 1, R5004 += 1, R1987 += 1, R1988 += 1 };
  s2 -> s4 [67, 67] { R5160 += 1, R5004 += 1, R1987 += 1, R1988 += 1 };
  s2 -> s1 [68, 65535] { R5160 += 1, R5004 += 1, R1987 += 1, R1988 += 1 };
  s3 -> s3 [0, 65535] { R5160 += 1, R5004 += 1, R1987 += 1, R1988 += 1 };
  s3 -> s6 [0, 65535] { R5160 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5160 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5160 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_79 {
  init s0;
  s0 -> s1 [0, 66] { R5162 += 1, R5006 += 1, R1997 += 1, R1998 += 1 };
  s0 -> s2 [0, 65535] { R5162 += 1, R5005 += 1, R5006 += 1 };
  s0 -> s0 [0, 65535] { R5161 += 1, R5162 += 1 };
  s0 -> s3 [67, 67] { R5162 += 1, R5006 += 1, R1997 += 1, R1998 += 1 };
  s0 -> s4 [67, 67] { R5162 += 1, R5006 += 1, R1997 += 1, R1998 += 1 };
  s0 -> s1 [68, 65535] { R5162 += 1, R5006 += 1, R1997 += 1, R1998 += 1 };
  s1 -> s1 [0, 66] { R5162 += 1, R5006 += 1, R1997 += 1, R1998 += 1 };
  s1 -> s1 [0, 65535] { R5162 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R5162 += 1, R5006 += 1, R1997 += 1, R1998 += 1 };
  s1 -> s4 [67, 67] { R5162 += 1, R5006 += 1, R1997 += 1, R1998 += 1 };
  s1 -> s1 [68, 65535] { R5162 += 1, R5006 += 1, R1997 += 1, R1998 += 1 };
  s2 -> s1 [0, 66] { R5162 += 1, R5006 += 1, R1997 += 1, R1998 += 1 };
  s2 -> s2 [0, 65535] { R5162 += 1, R5005 += 1, R5006 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R5162 += 1, R5006 += 1, R1997 += 1, R1998 += 1 };
  s2 -> s4 [67, 67] { R5162 += 1, R5006 += 1, R1997 += 1, R1998 += 1 };
  s2 -> s1 [68, 65535] { R5162 += 1, R5006 += 1, R1997 += 1, R1998 += 1 };
  s3 -> s3 [0, 65535] { R5162 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R5162 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R5162 += 1, R5006 += 1, R1997 += 1, R1998 += 1 };
  s5 -> s5 [0, 65535] { R5162 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_80 {
  init s0;
  s0 -> s1 [0, 66] { R5164 += 1, R5008 += 1, R2007 += 1, R2008 += 1 };
  s0 -> s2 [0, 65535] { R5164 += 1, R5007 += 1, R5008 += 1 };
  s0 -> s0 [0, 65535] { R5163 += 1, R5164 += 1 };
  s0 -> s3 [67, 67] { R5164 += 1, R5008 += 1, R2007 += 1, R2008 += 1 };
  s0 -> s4 [67, 67] { R5164 += 1, R5008 += 1, R2007 += 1, R2008 += 1 };
  s0 -> s1 [68, 65535] { R5164 += 1, R5008 += 1, R2007 += 1, R2008 += 1 };
  s1 -> s1 [0, 66] { R5164 += 1, R5008 += 1, R2007 += 1, R2008 += 1 };
  s1 -> s1 [0, 65535] { R5164 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R5164 += 1, R5008 += 1, R2007 += 1, R2008 += 1 };
  s1 -> s4 [67, 67] { R5164 += 1, R5008 += 1, R2007 += 1, R2008 += 1 };
  s1 -> s1 [68, 65535] { R5164 += 1, R5008 += 1, R2007 += 1, R2008 += 1 };
  s2 -> s1 [0, 66] { R5164 += 1, R5008 += 1, R2007 += 1, R2008 += 1 };
  s2 -> s2 [0, 65535] { R5164 += 1, R5007 += 1, R5008 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R5164 += 1, R5008 += 1, R2007 += 1, R2008 += 1 };
  s2 -> s4 [67, 67] { R5164 += 1, R5008 += 1, R2007 += 1, R2008 += 1 };
  s2 -> s1 [68, 65535] { R5164 += 1, R5008 += 1, R2007 += 1, R2008 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5164 += 1, R5008 += 1, R2007 += 1, R2008 += 1 };
  s3 -> s6 [0, 65535] { R5164 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5164 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5164 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_81 {
  init s0;
  s0 -> s1 [0, 66] { R5166 += 1, R5010 += 1, R2019 += 1, R2020 += 1 };
  s0 -> s0 [0, 65535] { R5165 += 1, R5166 += 1 };
  s0 -> s2 [0, 65535] { R5166 += 1, R5009 += 1, R5010 += 1 };
  s0 -> s3 [67, 67] { R5166 += 1, R5010 += 1, R2019 += 1, R2020 += 1 };
  s0 -> s4 [67, 67] { R5166 += 1, R5010 += 1, R2019 += 1, R2020 += 1 };
  s0 -> s1 [68, 65535] { R5166 += 1, R5010 += 1, R2019 += 1, R2020 += 1 };
  s1 -> s1 [0, 66] { R5166 += 1, R5010 += 1, R2019 += 1, R2020 += 1 };
  s1 -> s1 [0, 65535] { R5166 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R5166 += 1, R5010 += 1, R2019 += 1, R2020 += 1 };
  s1 -> s4 [67, 67] { R5166 += 1, R5010 += 1, R2019 += 1, R2020 += 1 };
  s1 -> s1 [68, 65535] { R5166 += 1, R5010 += 1, R2019 += 1, R2020 += 1 };
  s2 -> s1 [0, 66] { R5166 += 1, R5010 += 1, R2019 += 1, R2020 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5166 += 1, R5009 += 1, R5010 += 1 };
  s2 -> s3 [67, 67] { R5166 += 1, R5010 += 1, R2019 += 1, R2020 += 1 };
  s2 -> s4 [67, 67] { R5166 += 1, R5010 += 1, R2019 += 1, R2020 += 1 };
  s2 -> s1 [68, 65535] { R5166 += 1, R5010 += 1, R2019 += 1, R2020 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5166 += 1, R5010 += 1, R2019 += 1, R2020 += 1 };
  s3 -> s6 [0, 65535] { R5166 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5166 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5166 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_82 {
  init s0;
  s0 -> s1 [0, 66] { R5168 += 1, R5012 += 1, R2033 += 1, R2034 += 1 };
  s0 -> s2 [0, 65535] { R5168 += 1, R5011 += 1, R5012 += 1 };
  s0 -> s0 [0, 65535] { R5167 += 1, R5168 += 1 };
  s0 -> s3 [67, 67] { R5168 += 1, R5012 += 1, R2033 += 1, R2034 += 1 };
  s0 -> s4 [67, 67] { R5168 += 1, R5012 += 1, R2033 += 1, R2034 += 1 };
  s0 -> s1 [68, 65535] { R5168 += 1, R5012 += 1, R2033 += 1, R2034 += 1 };
  s1 -> s1 [0, 66] { R5168 += 1, R5012 += 1, R2033 += 1, R2034 += 1 };
  s1 -> s1 [0, 65535] { R5168 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R5168 += 1, R5012 += 1, R2033 += 1, R2034 += 1 };
  s1 -> s4 [67, 67] { R5168 += 1, R5012 += 1, R2033 += 1, R2034 += 1 };
  s1 -> s1 [68, 65535] { R5168 += 1, R5012 += 1, R2033 += 1, R2034 += 1 };
  s2 -> s1 [0, 66] { R5168 += 1, R5012 += 1, R2033 += 1, R2034 += 1 };
  s2 -> s2 [0, 65535] { R5168 += 1, R5011 += 1, R5012 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R5168 += 1, R5012 += 1, R2033 += 1, R2034 += 1 };
  s2 -> s4 [67, 67] { R5168 += 1, R5012 += 1, R2033 += 1, R2034 += 1 };
  s2 -> s1 [68, 65535] { R5168 += 1, R5012 += 1, R2033 += 1, R2034 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5168 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5168 += 1 };
  s4 -> s4 [0, 65535] { R5168 += 1, R5012 += 1, R2033 += 1, R2034 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5168 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_83 {
  init s0;
  s0 -> s1 [0, 66] { R5170 += 1, R5014 += 1, R4229 += 1, R4230 += 1 };
  s0 -> s2 [0, 66] { R5170 += 1, R5014 += 1, R4230 += 1, R4232 += 1, R4233 += 1, R4234 += 1 };
  s0 -> s3 [0, 66] { R5170 += 1, R5014 += 1, R4230 += 1, R4231 += 1, R4232 += 1 };
  s0 -> s0 [0, 65535] { R5169 += 1, R5170 += 1 };
  s0 -> s4 [0, 65535] { R5170 += 1, R5013 += 1, R5014 += 1 };
  s0 -> s5 [67, 67] { R5170 += 1, R5014 += 1, R4230 += 1, R4231 += 1, R4232 += 1 };
  s0 -> s6 [67, 67] { R5170 += 1, R5014 += 1, R4229 += 1, R4230 += 1 };
  s0 -> s7 [67, 67] { R5170 += 1, R5014 += 1, R4229 += 1, R4230 += 1 };
  s0 -> s8 [67, 67] { R5170 += 1, R5014 += 1, R4230 += 1, R4232 += 1, R4233 += 1, R4234 += 1 };
  s0 -> s9 [67, 67] { R5170 += 1, R5014 += 1, R4230 += 1, R4232 += 1, R4233 += 1, R4234 += 1 };
  s0 -> s10 [67, 67] { R5170 += 1, R5014 += 1, R4230 += 1, R4231 += 1, R4232 += 1 };
  s0 -> s2 [68, 69] { R5170 += 1, R5014 += 1, R4230 += 1, R4232 += 1, R4233 += 1, R4234 += 1 };
  s0 -> s1 [68, 65535] { R5170 += 1, R5014 += 1, R4229 += 1, R4230 += 1 };
  s0 -> s3 [68, 65535] { R5170 += 1, R5014 += 1, R4230 += 1, R4231 += 1, R4232 += 1 };
  s0 -> s2 [71, 65535] { R5170 += 1, R5014 += 1, R4230 += 1, R4232 += 1, R4233 += 1, R4234 += 1 };
  s1 -> s1 [0, 66] { R5170 += 1, R5014 += 1, R4229 += 1, R4230 += 1 };
  s1 -> s2 [0, 66] { R5170 += 1, R5014 += 1, R4230 += 1, R4232 += 1, R4233 += 1, R4234 += 1 };
  s1 -> s3 [0, 66] { R5170 += 1, R5014 += 1, R4230 += 1, R4231 += 1, R4232 += 1 };
  s1 -> s5 [67, 67] { R5170 += 1, R5014 += 1, R4230 += 1, R4231 += 1, R4232 += 1 };
  s1 -> s6 [67, 67] { R5170 += 1, R5014 += 1, R4229 += 1, R4230 += 1 };
  s1 -> s7 [67, 67] { R5170 += 1, R5014 += 1, R4229 += 1, R4230 += 1 };
  s1 -> s8 [67, 67] { R5170 += 1, R5014 += 1, R4230 += 1, R4232 += 1, R4233 += 1, R4234 += 1 };
  s1 -> s9 [67, 67] { R5170 += 1, R5014 += 1, R4230 += 1, R4232 += 1, R4233 += 1, R4234 += 1 };
  s1 -> s10 [67, 67] { R5170 += 1, R5014 += 1, R4230 += 1, R4231 += 1, R4232 += 1 };
  s1 -> s2 [68, 69] { R5170 += 1, R5014 += 1, R4230 += 1, R4232 += 1, R4233 += 1, R4234 += 1 };
  s1 -> s1 [68, 65535] { R5170 += 1, R5014 += 1, R4229 += 1, R4230 += 1 };
  s1 -> s3 [68, 65535] { R5170 += 1, R5014 += 1, R4230 += 1, R4231 += 1, R4232 += 1 };
  s1 -> s2 [71, 65535] { R5170 += 1, R5014 += 1, R4230 += 1, R4232 += 1, R4233 += 1, R4234 += 1 };
  s2 -> s2 [0, 66] { R5170 += 1, R5014 += 1, R4230 += 1, R4232 += 1, R4233 += 1, R4234 += 1 };
  s2 -> s11 [0, 65535];
  s2 -> s2 [0, 65535] { R5170 += 1 };
  s2 -> s8 [67, 67] { R5170 += 1, R5014 += 1, R4230 += 1 };
  s2 -> s9 [67, 67] { R5170 += 1, R5014 += 1, R4230 += 1 };
  s2 -> s2 [68, 69] { R5170 += 1, R5014 += 1, R4230 += 1, R4232 += 1, R4233 += 1, R4234 += 1 };
  s2 -> s2 [68, 65535] { R5170 += 1, R5014 += 1, R4230 += 1 };
  s2 -> s2 [71, 65535] { R5170 += 1, R5014 += 1, R4230 += 1, R4232 += 1, R4233 += 1, R4234 += 1 };
  s3 -> s2 [0, 66] { R5170 += 1, R5014 += 1, R4230 += 1, R4232 += 1, R4233 += 1, R4234 += 1 };
  s3 -> s3 [0, 66] { R5170 += 1, R5014 += 1, R4230 += 1, R4231 += 1, R4232 += 1 };
  s3 -> s5 [67, 67] { R5170 += 1, R5014 += 1, R4230 += 1, R4231 += 1, R4232 += 1 };
  s3 -> s8 [67, 67] { R5170 += 1, R5014 += 1, R4230 += 1, R4232 += 1, R4233 += 1, R4234 += 1 };
  s3 -> s9 [67, 67] { R5170 += 1, R5014 += 1, R4230 += 1, R4232 += 1, R4233 += 1, R4234 += 1 };
  s3 -> s10 [67, 67] { R5170 += 1, R5014 += 1, R4230 += 1, R4231 += 1, R4232 += 1 };
  s3 -> s2 [68, 69] { R5170 += 1, R5014 += 1, R4230 += 1, R4232 += 1, R4233 += 1, R4234 += 1 };
  s3 -> s3 [68, 65535] { R5170 += 1, R5014 += 1, R4230 += 1, R4231 += 1, R4232 += 1 };
  s3 -> s2 [71, 65535] { R5170 += 1, R5014 += 1, R4230 += 1, R4232 += 1, R4233 += 1, R4234 += 1 };
  s4 -> s1 [0, 66] { R5170 += 1, R5014 += 1, R4229 += 1, R4230 += 1 };
  s4 -> s2 [0, 66] { R5170 += 1, R5014 += 1, R4230 += 1, R4232 += 1, R4233 += 1, R4234 += 1 };
  s4 -> s3 [0, 66] { R5170 += 1, R5014 += 1, R4230 += 1, R4231 += 1, R4232 += 1 };
  s4 -> s4 [0, 65535] { R5170 += 1, R5013 += 1, R5014 += 1 };
  s4 -> s5 [67, 67] { R5170 += 1, R5014 += 1, R4230 += 1, R4231 += 1, R4232 += 1 };
  s4 -> s6 [67, 67] { R5170 += 1, R5014 += 1, R4229 += 1, R4230 += 1 };
  s4 -> s7 [67, 67] { R5170 += 1, R5014 += 1, R4229 += 1, R4230 += 1 };
  s4 -> s8 [67, 67] { R5170 += 1, R5014 += 1, R4230 += 1, R4232 += 1, R4233 += 1, R4234 += 1 };
  s4 -> s9 [67, 67] { R5170 += 1, R5014 += 1, R4230 += 1, R4232 += 1, R4233 += 1, R4234 += 1 };
  s4 -> s10 [67, 67] { R5170 += 1, R5014 += 1, R4230 += 1, R4231 += 1, R4232 += 1 };
  s4 -> s2 [68, 69] { R5170 += 1, R5014 += 1, R4230 += 1, R4232 += 1, R4233 += 1, R4234 += 1 };
  s4 -> s1 [68, 65535] { R5170 += 1, R5014 += 1, R4229 += 1, R4230 += 1 };
  s4 -> s3 [68, 65535] { R5170 += 1, R5014 += 1, R4230 += 1, R4231 += 1, R4232 += 1 };
  s4 -> s2 [71, 65535] { R5170 += 1, R5014 += 1, R4230 += 1, R4232 += 1, R4233 += 1, R4234 += 1 };
  s5 -> s9 [0, 69] { R5170 += 1, R5014 += 1, R4230 += 1, R4232 += 1, R4233 += 1, R4234 += 1 };
  s5 -> s5 [0, 65535] { R5170 += 1, R5014 += 1, R4230 += 1, R4231 += 1, R4232 += 1 };
  s5 -> s9 [71, 65535] { R5170 += 1, R5014 += 1, R4230 += 1, R4232 += 1, R4233 += 1, R4234 += 1 };
  s7 -> s9 [0, 69] { R5170 += 1, R5014 += 1, R4230 += 1, R4232 += 1, R4233 += 1, R4234 += 1 };
  s7 -> s5 [0, 65535] { R5170 += 1, R5014 += 1, R4230 += 1, R4231 += 1, R4232 += 1 };
  s7 -> s7 [0, 65535] { R5170 += 1, R5014 += 1, R4229 += 1, R4230 += 1 };
  s7 -> s9 [71, 65535] { R5170 += 1, R5014 += 1, R4230 += 1, R4232 += 1, R4233 += 1, R4234 += 1 };
  s8 -> s11 [0, 65535];
  s8 -> s8 [0, 65535] { R5170 += 1 };
  s9 -> s9 [0, 69] { R5170 += 1, R5014 += 1, R4230 += 1, R4232 += 1, R4233 += 1, R4234 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s12 [0, 65535] { R5170 += 1 };
  s9 -> s9 [0, 65535] { R5170 += 1, R5014 += 1, R4230 += 1 };
  s9 -> s9 [71, 65535] { R5170 += 1, R5014 += 1, R4230 += 1, R4232 += 1, R4233 += 1, R4234 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R5170 += 1 };
  accepting s12, s8, s2, s9, s11;
};
automaton value2_84 {
  init s0;
  s0 -> s1 [0, 66] { R5172 += 1, R5016 += 1, R4864 += 1, R4865 += 1, R4866 += 1 };
  s0 -> s2 [0, 66] { R5172 += 1, R5016 += 1, R4863 += 1, R4864 += 1 };
  s0 -> s3 [0, 65535] { R5172 += 1, R5015 += 1, R5016 += 1 };
  s0 -> s0 [0, 65535] { R5171 += 1, R5172 += 1 };
  s0 -> s4 [67, 67] { R5172 += 1, R5016 += 1, R4863 += 1, R4864 += 1 };
  s0 -> s5 [67, 67] { R5172 += 1, R5016 += 1, R4864 += 1, R4865 += 1, R4866 += 1 };
  s0 -> s6 [67, 67] { R5172 += 1, R5016 += 1, R4864 += 1, R4865 += 1, R4866 += 1 };
  s0 -> s7 [67, 67] { R5172 += 1, R5016 += 1, R4863 += 1, R4864 += 1 };
  s0 -> s1 [68, 65535] { R5172 += 1, R5016 += 1, R4864 += 1, R4865 += 1, R4866 += 1 };
  s0 -> s2 [68, 65535] { R5172 += 1, R5016 += 1, R4863 += 1, R4864 += 1 };
  s1 -> s1 [0, 66] { R5172 += 1, R5016 += 1, R4864 += 1, R4865 += 1, R4866 += 1 };
  s1 -> s1 [0, 65535] { R5172 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s5 [67, 67] { R5172 += 1, R5016 += 1, R4864 += 1, R4865 += 1, R4866 += 1 };
  s1 -> s6 [67, 67] { R5172 += 1, R5016 += 1, R4864 += 1, R4865 += 1, R4866 += 1 };
  s1 -> s1 [68, 65535] { R5172 += 1, R5016 += 1, R4864 += 1, R4865 += 1, R4866 += 1 };
  s2 -> s1 [0, 66] { R5172 += 1, R5016 += 1, R4864 += 1, R4865 += 1, R4866 += 1 };
  s2 -> s2 [0, 66] { R5172 += 1, R5016 += 1, R4863 += 1, R4864 += 1 };
  s2 -> s4 [67, 67] { R5172 += 1, R5016 += 1, R4863 += 1, R4864 += 1 };
  s2 -> s5 [67, 67] { R5172 += 1, R5016 += 1, R4864 += 1, R4865 += 1, R4866 += 1 };
  s2 -> s6 [67, 67] { R5172 += 1, R5016 += 1, R4864 += 1, R4865 += 1, R4866 += 1 };
  s2 -> s7 [67, 67] { R5172 += 1, R5016 += 1, R4863 += 1, R4864 += 1 };
  s2 -> s1 [68, 65535] { R5172 += 1, R5016 += 1, R4864 += 1, R4865 += 1, R4866 += 1 };
  s2 -> s2 [68, 65535] { R5172 += 1, R5016 += 1, R4863 += 1, R4864 += 1 };
  s3 -> s1 [0, 66] { R5172 += 1, R5016 += 1, R4864 += 1, R4865 += 1, R4866 += 1 };
  s3 -> s2 [0, 66] { R5172 += 1, R5016 += 1, R4863 += 1, R4864 += 1 };
  s3 -> s3 [0, 65535] { R5172 += 1, R5015 += 1, R5016 += 1 };
  s3 -> s4 [67, 67] { R5172 += 1, R5016 += 1, R4863 += 1, R4864 += 1 };
  s3 -> s5 [67, 67] { R5172 += 1, R5016 += 1, R4864 += 1, R4865 += 1, R4866 += 1 };
  s3 -> s6 [67, 67] { R5172 += 1, R5016 += 1, R4864 += 1, R4865 += 1, R4866 += 1 };
  s3 -> s7 [67, 67] { R5172 += 1, R5016 += 1, R4863 += 1, R4864 += 1 };
  s3 -> s1 [68, 65535] { R5172 += 1, R5016 += 1, R4864 += 1, R4865 += 1, R4866 += 1 };
  s3 -> s2 [68, 65535] { R5172 += 1, R5016 += 1, R4863 += 1, R4864 += 1 };
  s4 -> s4 [0, 65535] { R5172 += 1, R5016 += 1, R4863 += 1, R4864 += 1 };
  s4 -> s6 [0, 65535] { R5172 += 1, R5016 += 1, R4864 += 1, R4865 += 1, R4866 += 1 };
  s5 -> s5 [0, 65535] { R5172 += 1 };
  s5 -> s9 [0, 65535];
  s6 -> s8 [0, 65535] { R5172 += 1 };
  s6 -> s9 [0, 65535];
  s6 -> s6 [0, 65535] { R5172 += 1, R5016 += 1, R4864 += 1, R4865 += 1, R4866 += 1 };
  s8 -> s8 [0, 65535] { R5172 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  accepting s8, s5, s9, s6, s1;
};
};
synchronised {  // Automata constraining P44
automaton P44_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
synchronised {  // Automata constraining P27
automaton P27_0 {
  init s0;
  s0 -> s1 [108, 108];
  accepting s1;
};
};
synchronised {  // Automata constraining P17
automaton P17_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R4946 && R4 - R5172 = 1 && R29 - R4946 = -1 && R30 = R4946 && R31 - R4946 = -1 && R32 = R4946 && R33 = 0 && R34 = 1 && R35 = 0 && R36 = 1 && R37 = R5172 && R38 - R5172 = 1 && R39 = R5172 && R40 - R5172 = 1 && R41 = 0 && R42 = 1 && R43 = 0 && R44 = 1 && R1774 + R1773 + -1*R2040 + -1*R2034 = 0 && R1792 + R1789 + R1894 + R1889 + R1996 + R1991 + -1*R2044 + -1*R2038 - R1936 - R1942 - R1820 - R1824 = 0 && R1823 + R1819 + R1941 + R1935 + R2043 + R2037 = 0 && R1845 + R1843 = 0 && R1846 + R1844 + -1*R2040 + -1*R2034 = 0 && R1983 + R1979 = 0 && R1984 + R1980 + -1*R2040 + -1*R2034 = 0 && R1985 + R1981 = 0 && R1986 + R1982 = 0 && R2039 + R2033 = 0 && R2041 + R2035 = 0 && R2042 + R2036 = 0 && R4875 = 0 && R4876 = R4946 && R4877 = 0 && R4878 = R4946 && R4879 = 0 && R4880 = R4946 && R4881 = 0 && R4882 = R4946 && R4883 = 0 && R4884 = R4946 && R4885 = 0 && R4886 = R4946 && R4887 = 0 && R4888 = R4946 && R4889 = 0 && R4890 = R4946 && R4891 = 0 && R4892 = R4946 && R4893 = 0 && R4894 = R4946 && R4895 = 0 && R4896 = R4946 && R4897 = 0 && R4898 = R4946 && R4899 = 0 && R4900 = R4946 && R4901 = 0 && R4902 = R4946 && R4903 = 0 && R4904 = R4946 && R4905 = 0 && R4906 = R4946 && R4907 = 0 && R4908 = R4946 && R4909 = 0 && R4910 = R4946 && R4911 = 0 && R4912 = R4946 && R4913 = 0 && R4914 = R4946 && R4915 = 0 && R4916 = R4946 && R4917 = 0 && R4918 = R4946 && R4919 = 0 && R4920 = R4946 && R4921 = 0 && R4922 = R4946 && R4923 = 0 && R4924 = R4946 && R4925 = 0 && R4926 = R4946 && R4927 = 0 && R4928 = R4946 && R4929 = 0 && R4930 = R4946 && R4931 = 0 && R4932 = R4946 && R4933 = 0 && R4934 = R4946 && R4935 = 0 && R4936 = R4946 && R4937 = 0 && R4938 = R4946 && R4939 = 0 && R4940 = R4946 && R4941 = 0 && R4942 = R4946 && R4943 = 0 && R4944 = R4946 && R4945 = 0 && R4949 = 0 && R4950 = 0 && R5013 = 0 && R5014 = 0 && R5015 = 0 && R5016 = 0 && R5017 = 0 && R5018 = R5172 && R5019 = 0 && R5020 = R5172 && R5021 = 0 && R5022 = R5172 && R5023 = 0 && R5024 = R5172 && R5025 = 0 && R5026 = R5172 && R5027 = 0 && R5028 = R5172 && R5029 = 0 && R5030 = R5172 && R5031 = 0 && R5032 = R5172 && R5033 = 0 && R5034 = R5172 && R5035 = 0 && R5036 = R5172 && R5037 = 0 && R5038 = R5172 && R5039 = 0 && R5040 = R5172 && R5041 = 0 && R5042 = R5172 && R5043 = 0 && R5044 = R5172 && R5045 = 0 && R5046 = R5172 && R5047 = 0 && R5048 = R5172 && R5049 = 0 && R5050 = R5172 && R5051 = 0 && R5052 = R5172 && R5053 = 0 && R5054 = R5172 && R5055 = 0 && R5056 = R5172 && R5057 = 0 && R5058 = R5172 && R5059 = 0 && R5060 = R5172 && R5061 = 0 && R5062 = R5172 && R5063 = 0 && R5064 = R5172 && R5065 = 0 && R5066 = R5172 && R5067 = 0 && R5068 = R5172 && R5069 = 0 && R5070 = R5172 && R5071 = 0 && R5072 = R5172 && R5073 = 0 && R5074 = R5172 && R5075 = 0 && R5076 = R5172 && R5077 = 0 && R5078 = R5172 && R5079 = 0 && R5080 = R5172 && R5081 = 0 && R5082 = R5172 && R5083 = 0 && R5084 = R5172 && R5085 = 0 && R5086 = R5172 && R5087 = 0 && R5088 = R5172 && R5089 = 0 && R5090 = R5172 && R5091 = 0 && R5092 = R5172 && R5093 = 0 && R5094 = R5172 && R5095 = 0 && R5096 = R5172 && R5097 = 0 && R5098 = R5172 && R5099 = 0 && R5100 = R5172 && R5101 = 0 && R5102 = R5172 && R5103 = 0 && R5104 = R5172 && R5105 = 0 && R5106 = R5172 && R5107 = 0 && R5108 = R5172 && R5109 = 0 && R5110 = R5172 && R5111 = 0 && R5112 = R5172 && R5113 = 0 && R5114 = R5172 && R5115 = 0 && R5116 = R5172 && R5117 = 0 && R5118 = R5172 && R5119 = 0 && R5120 = R5172 && R5121 = 0 && R5122 = R5172 && R5123 = 0 && R5124 = R5172 && R5125 = 0 && R5126 = R5172 && R5127 = 0 && R5128 = R5172 && R5129 = 0 && R5130 = R5172 && R5131 = 0 && R5132 = R5172 && R5133 = 0 && R5134 = R5172 && R5135 = 0 && R5136 = R5172 && R5137 = 0 && R5138 = R5172 && R5139 = 0 && R5140 = R5172 && R5141 = 0 && R5142 = R5172 && R5143 = 0 && R5144 = R5172 && R5145 = 0 && R5146 = R5172 && R5147 = 0 && R5148 = R5172 && R5149 = 0 && R5150 = R5172 && R5151 = 0 && R5152 = R5172 && R5153 = 0 && R5154 = R5172 && R5155 = 0 && R5156 = R5172 && R5157 = 0 && R5158 = R5172 && R5159 = 0 && R5160 = R5172 && R5161 = 0 && R5162 = R5172 && R5163 = 0 && R5164 = R5172 && R5165 = 0 && R5166 = R5172 && R5167 = 0 && R5168 = R5172 && R5169 = 0 && R5170 = R5172 && R5171 = 0 && R18 < 1 && R21 < 1 && R1776 + R1775 < 1 && R1798 + R1795 + R1904 + R1899 + R2006 + R2001 < 1 && -1*R2044 + -1*R2038 - R1936 - R1942 - R1820 - R1824 < 1 && -1*R1852 + -1*R1849 < 1 && R1858 + R1855 < 1 && -1*R2040 + -1*R2034 < 1 && 0 < R4946 && -1 < R5172 && (R1816 + R1811 + R1930 + R1923 + R2032 + R2025 != 0 || ((R1805 + R1801 + R1915 + R1909 + R2017 + R2011 != 0 || R1806 + R1802 + R1916 + R1910 + R2018 + R2012 + -1*R2044 + -1*R2038 - R1936 - R1942 - R1820 - R1824 = 0 || R1824 + R1820 + R1942 + R1936 + R2044 + R2038 < 1) && (R1805 + R1801 + R1915 + R1909 + R2017 + R2011 = 0 || R1824 + R1820 + R1942 + R1936 + R2044 + R2038 < 1))) && (R1816 + R1811 + R1930 + R1923 + R2032 + R2025 != 0 || ((R1814 + R1809 + R1928 + R1921 + R2030 + R2023 != 0 || R1815 + R1810 + R1929 + R1922 + R2031 + R2024 + -1*R2044 + -1*R2038 - R1936 - R1942 - R1820 - R1824 = 0 || R1824 + R1820 + R1942 + R1936 + R2044 + R2038 < 1) && (R1814 + R1809 + R1928 + R1921 + R2030 + R2023 = 0 || R1824 + R1820 + R1942 + R1936 + R2044 + R2038 < 1))) && (R1850 + R1847 != 0 || R1851 + R1848 + -1*R2040 + -1*R2034 = 0 || R1852 + R1849 < 1) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1865 + R1861 = 0 && R1866 + R1862 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1874 + R1869 = 0 && R1875 + R1870 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1883 + R1879 = 0 && R1884 + R1880 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1892 + R1887 = 0 && R1893 + R1888 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1902 + R1897 = 0 && R1903 + R1898 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1913 + R1907 = 0 && R1914 + R1908 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1926 + R1919 = 0 && R1927 + R1920 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1939 + R1933 = 0 && R1940 + R1934 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1952 + R1945 = 0 && R1953 + R1946 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1965 + R1959 = 0 && R1966 + R1960 = 0)) && (R1852 + R1849 != 0 || ((R1850 + R1847 != 0 || R1851 + R1848 + -1*R2040 + -1*R2034 = 0 || R2040 + R2034 < 1) && (R1850 + R1847 = 0 || R2040 + R2034 < 1))) && (R1856 + R1853 != 0 || R1857 + R1854 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1863 + R1859 != 0 || R1864 + R1860 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1865 + R1861 != 0 || R1852 + R1849 + -1*R1866 + -1*R1862 = 0 || R1852 + R1849 < 1) && (R1872 + R1867 != 0 || R1873 + R1868 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1874 + R1869 != 0 || R1852 + R1849 + -1*R1875 + -1*R1870 = 0 || R1852 + R1849 < 1) && (R1881 + R1877 != 0 || R1882 + R1878 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1883 + R1879 != 0 || R1852 + R1849 + -1*R1884 + -1*R1880 = 0 || R1852 + R1849 < 1) && (R1890 + R1885 != 0 || R1891 + R1886 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1892 + R1887 != 0 || R1852 + R1849 + -1*R1893 + -1*R1888 = 0 || R1852 + R1849 < 1) && (R1900 + R1895 != 0 || R1901 + R1896 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1902 + R1897 != 0 || R1852 + R1849 + -1*R1903 + -1*R1898 = 0 || R1852 + R1849 < 1) && (R1911 + R1905 != 0 || R1912 + R1906 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1913 + R1907 != 0 || R1852 + R1849 + -1*R1914 + -1*R1908 = 0 || R1852 + R1849 < 1) && (R1924 + R1917 != 0 || R1925 + R1918 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1926 + R1919 != 0 || R1852 + R1849 + -1*R1927 + -1*R1920 = 0 || R1852 + R1849 < 1) && (R1937 + R1931 != 0 || R1938 + R1932 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1939 + R1933 != 0 || R1852 + R1849 + -1*R1940 + -1*R1934 = 0 || R1852 + R1849 < 1) && (R1950 + R1943 != 0 || R1951 + R1944 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1952 + R1945 != 0 || R1852 + R1849 + -1*R1953 + -1*R1946 = 0 || R1852 + R1849 < 1) && (R1963 + R1957 != 0 || R1964 + R1958 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1965 + R1959 != 0 || R1852 + R1849 + -1*R1966 + -1*R1960 = 0 || R1852 + R1849 < 1) && (R1974 + R1969 != 0 || R1975 + R1970 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1992 + R1987 != 0 || R1993 + R1988 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R2002 + R1997 != 0 || R2003 + R1998 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R2013 + R2007 != 0 || R2014 + R2008 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R2026 + R2019 != 0 || R2027 + R2020 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R4236 + R4229 != 0 || R2040 + R2034 + -1*R4237 + -1*R4230 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R4869 + R4863 != 0 || R2040 + R2034 + -1*R4870 + -1*R4864 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R28 = 0 || (R4947 = 0 && R4948 = 0)) && (R28 = 0 || (R4951 = 0 && R4952 = 0)) && (R28 = 0 || (R4953 = 0 && R4954 = 0)) && (R28 = 0 || (R4955 = 0 && R4956 = 0)) && (R28 = 0 || (R4957 = 0 && R4958 = 0)) && (R28 = 0 || (R4959 = 0 && R4960 = 0)) && (R28 = 0 || (R4961 = 0 && R4962 = 0)) && (R28 = 0 || (R4963 = 0 && R4964 = 0)) && (R28 = 0 || (R4965 = 0 && R4966 = 0)) && (R28 = 0 || (R4967 = 0 && R4968 = 0)) && (R28 = 0 || (R4969 = 0 && R4970 = 0)) && (R28 = 0 || (R4971 = 0 && R4972 = 0)) && (R28 = 0 || (R4973 = 0 && R4974 = 0)) && (R28 = 0 || (R4975 = 0 && R4976 = 0)) && (R28 = 0 || (R4977 = 0 && R4978 = 0)) && (R28 = 0 || (R4979 = 0 && R4980 = 0)) && (R28 = 0 || (R4981 = 0 && R4982 = 0)) && (R28 = 0 || (R4983 = 0 && R4984 = 0)) && (R28 = 0 || (R4985 = 0 && R4986 = 0)) && (R28 = 0 || (R4987 = 0 && R4988 = 0)) && (R28 = 0 || (R4989 = 0 && R4990 = 0)) && (R28 = 0 || (R4991 = 0 && R4992 = 0)) && (R28 = 0 || (R4993 = 0 && R4994 = 0)) && (R28 = 0 || (R4995 = 0 && R4996 = 0)) && (R28 = 0 || (R4997 = 0 && R4998 = 0)) && (R28 = 0 || (R4999 = 0 && R5000 = 0)) && (R28 = 0 || (R5001 = 0 && R5002 = 0)) && (R28 = 0 || (R5003 = 0 && R5004 = 0)) && (R28 = 0 || (R5005 = 0 && R5006 = 0)) && (R28 = 0 || (R5007 = 0 && R5008 = 0)) && (R28 = 0 || (R5009 = 0 && R5010 = 0)) && (R28 = 0 || (R5011 = 0 && R5012 = 0)) && (R1782 + R1779 = 0 || (R1780 + R1777 = 0 && R1781 + R1778 = 0)) && (R1782 + R1779 = 0 || (R1785 + R1783 = 0 && R1786 + R1784 = 0)) && (R1782 + R1779 = 0 || (R1790 + R1787 = 0 && R1791 + R1788 = 0)) && (R1782 + R1779 = 0 || (R1796 + R1793 = 0 && R1797 + R1794 = 0)) && (R1782 + R1779 = 0 || (R1803 + R1799 = 0 && R1804 + R1800 = 0)) && (R1782 + R1779 = 0 || (R1812 + R1807 = 0 && R1813 + R1808 = 0)) && (R1782 + R1779 = 0 || (R1821 + R1817 = 0 && R1822 + R1818 = 0)) && (R1782 + R1779 = 0 || (R1830 + R1825 = 0 && R1831 + R1826 = 0)) && (R1782 + R1779 = 0 || (R1839 + R1835 = 0 && R1840 + R1836 = 0)) && (R1816 + R1811 + R1930 + R1923 + R2032 + R2025 = 0 || (R1805 + R1801 + R1915 + R1909 + R2017 + R2011 = 0 && R1806 + R1802 + R1916 + R1910 + R2018 + R2012 + -1*R2044 + -1*R2038 - R1936 - R1942 - R1820 - R1824 = 0)) && (R1816 + R1811 + R1930 + R1923 + R2032 + R2025 = 0 || (R1814 + R1809 + R1928 + R1921 + R2030 + R2023 = 0 && R1815 + R1810 + R1929 + R1922 + R2031 + R2024 + -1*R2044 + -1*R2038 - R1936 - R1942 - R1820 - R1824 = 0)) && (R1834 + R1829 + R1956 + R1949 + R4242 + R4235 = 0 || (R1832 + R1827 + R1954 + R1947 + R4240 + R4233 = 0 && R1833 + R1828 + R1955 + R1948 + R4241 + R4234 = 0)) && (R1834 + R1829 + R1956 + R1949 + R4242 + R4235 = 0 || (R1841 + R1837 + R1967 + R1961 + R4873 + R4867 = 0 && R1842 + R1838 + R1968 + R1962 + R4874 + R4868 = 0)) && (R1850 + R1847 = 0 || R1852 + R1849 < 1) && (R1856 + R1853 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1863 + R1859 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1865 + R1861 = 0 || R1852 + R1849 < 1) && (R1872 + R1867 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1874 + R1869 = 0 || R1852 + R1849 < 1) && (R1881 + R1877 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1883 + R1879 = 0 || R1852 + R1849 < 1) && (R1890 + R1885 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1892 + R1887 = 0 || R1852 + R1849 < 1) && (R1900 + R1895 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1902 + R1897 = 0 || R1852 + R1849 < 1) && (R1911 + R1905 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1913 + R1907 = 0 || R1852 + R1849 < 1) && (R1924 + R1917 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1926 + R1919 = 0 || R1852 + R1849 < 1) && (R1937 + R1931 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1939 + R1933 = 0 || R1852 + R1849 < 1) && (R1950 + R1943 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1952 + R1945 = 0 || R1852 + R1849 < 1) && (R1963 + R1957 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1965 + R1959 = 0 || R1852 + R1849 < 1) && (R1974 + R1969 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1978 + R1973 = 0 || (R1976 + R1971 = 0 && R1977 + R1972 = 0)) && (R1978 + R1973 = 0 || (R1994 + R1989 = 0 && R1995 + R1990 = 0)) && (R1978 + R1973 = 0 || (R2004 + R1999 = 0 && R2005 + R2000 = 0)) && (R1978 + R1973 = 0 || (R2015 + R2009 = 0 && R2016 + R2010 = 0)) && (R1978 + R1973 = 0 || (R2028 + R2021 = 0 && R2029 + R2022 = 0)) && (R1978 + R1973 = 0 || (R4238 + R4231 = 0 && R4239 + R4232 = 0)) && (R1978 + R1973 = 0 || (R4871 + R4865 = 0 && R4872 + R4866 = 0)) && (R1992 + R1987 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R2002 + R1997 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R2013 + R2007 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R2026 + R2019 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R4236 + R4229 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R4869 + R4863 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0));
// End of Parikh automata intersection problem
