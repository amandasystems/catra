// Parikh automata intersection problem, generated by OSTRICH+
counter int R1773, R1774, R1775, R1776, R1777, R1778, R1779, R1780, R1781, R1782, R1783, R1784, R1785, R1786, R1787, R1788, R1789, R1790, R1791, R1792, R1793, R1794, R1795, R1796, R1797, R1798, R1799, R18, R1800, R1801, R1802, R1803, R1804, R1805, R1806, R1807, R1808, R1809, R1810, R1811, R1812, R1813, R1814, R1815, R1816, R1817, R1818, R1819, R1820, R1821, R1822, R1823, R1824, R1825, R1826, R1827, R1828, R1829, R1830, R1831, R1832, R1833, R1834, R1835, R1836, R1837, R1838, R1839, R1840, R1841, R1842, R1843, R1844, R1845, R1846, R1847, R1848, R1849, R1850, R1851, R1852, R1853, R1854, R1855, R1856, R1857, R1858, R1859, R1860, R1861, R1862, R1863, R1864, R1865, R1866, R1867, R1868, R1869, R1870, R1871, R1872, R1873, R1874, R1875, R1876, R1877, R1878, R1879, R1880, R1881, R1882, R1883, R1884, R1885, R1886, R1887, R1888, R1889, R1890, R1891, R1892, R1893, R1894, R1895, R1896, R1897, R1898, R1899, R1900, R1901, R1902, R1903, R1904, R1905, R1906, R1907, R1908, R1909, R1910, R1911, R1912, R1913, R1914, R1915, R1916, R1917, R1918, R1919, R1920, R1921, R1922, R1923, R1924, R1925, R1926, R1927, R1928, R1929, R1930, R1931, R1932, R1933, R1934, R1935, R1936, R1937, R1938, R1939, R1940, R1941, R1942, R1943, R1944, R1945, R1946, R1947, R1948, R1949, R1950, R1951, R1952, R1953, R1954, R1955, R1956, R1957, R1958, R1959, R1960, R1961, R1962, R1963, R1964, R1965, R1966, R1967, R1968, R1969, R1970, R1971, R1972, R1973, R1974, R1975, R1976, R1977, R1978, R1979, R1980, R1981, R1982, R1983, R1984, R1985, R1986, R1987, R1988, R1989, R1990, R1991, R1992, R1993, R1994, R1995, R1996, R1997, R1998, R1999, R2000, R2001, R2002, R2003, R2004, R2005, R2006, R2007, R2008, R2009, R2010, R2011, R2012, R2013, R2014, R2015, R2016, R2017, R2018, R2019, R2020, R2021, R2022, R2023, R2024, R2025, R2026, R2027, R2028, R2029, R2030, R2031, R2032, R2033, R2034, R2035, R2036, R2037, R2038, R2039, R2040, R2041, R2042, R2043, R2044, R2045, R2046, R2047, R2048, R2049, R2050, R2051, R2052, R2053, R2054, R2055, R2056, R2057, R2058, R21, R2679, R2680, R2681, R2682, R2683, R2684, R2685, R2686, R2687, R2688, R2689, R2690, R2691, R2692, R2693, R2694, R2695, R2696, R2697, R2698, R2699, R27, R2700, R2701, R2702, R2703, R2704, R2705, R2706, R2707, R2708, R2709, R2710, R2711, R2712, R2713, R2714, R2715, R2716, R2717, R2718, R2719, R2720, R2721, R2722, R2723, R2724, R2725, R2726, R2727, R2728, R2729, R2730, R2731, R2732, R2733, R2734, R2735, R2736, R2737, R2738, R2739, R2740, R2741, R2742, R2743, R2744, R2745, R2746, R2747, R2748, R2749, R2750, R2751, R2752, R2753, R2754, R2755, R2756, R2757, R2758, R2759, R2760, R2761, R2762, R2763, R2764, R2765, R2766, R2767, R2768, R2769, R2770, R2771, R2772, R2773, R2774, R2775, R2776, R2777, R2778, R2779, R2780, R2781, R2782, R2783, R2784, R2785, R2786, R2787, R2788, R2789, R2790, R2791, R2792, R2793, R2794, R2795, R2796, R2797, R2798, R2799, R28, R2800, R2801, R2802, R2803, R2804, R2805, R2806, R2807, R2808, R2809, R2810, R2811, R2812, R2813, R2814, R2815, R2816, R2817, R2818, R2819, R2820, R2821, R2822, R2823, R2824, R2825, R2826, R2827, R2828, R2829, R2830, R2831, R2832, R2833, R2834, R2835, R2836, R2837, R2838, R2839, R2840, R2841, R2842, R2843, R2844, R2845, R2846, R2847, R2848, R2849, R2850, R2851, R2852, R2853, R2854, R2855, R2856, R2857, R2858, R2859, R2860, R2861, R2862, R2863, R2864, R2865, R2866, R2867, R2868, R2869, R2870, R2871, R2872, R2873, R2874, R2875, R2876, R2877, R2878, R2879, R2880, R2881, R2882, R2883, R2884, R2885, R2886, R2887, R2888, R2889, R2890, R2891, R2892, R2893, R2894, R2895, R2896, R2897, R2898, R2899, R29, R2900, R2901, R2902, R2903, R2904, R2905, R2906, R2907, R2908, R2909, R2910, R2911, R2912, R2913, R2914, R2915, R2916, R2917, R2918, R2919, R2920, R2921, R2922, R2923, R2924, R2925, R2926, R2927, R2928, R2929, R2930, R2931, R2932, R2933, R2934, R2935, R2936, R2937, R2938, R2939, R2940, R2941, R2942, R2943, R2944, R2945, R2946, R2947, R2948, R2949, R2950, R2951, R2952, R2953, R2954, R2955, R2956, R2957, R2958, R2959, R2960, R2961, R2962, R2963, R2964, R2965, R2966, R2967, R2968, R2969, R2970, R2971, R2972, R2973, R2974, R2975, R2976, R2977, R2978, R2979, R2980, R2981, R2982, R2983, R2984, R2985, R2986, R2987, R2988, R3, R30, R31, R32, R33, R34, R35, R36, R37, R38, R39, R4, R40, R41, R42, R43, R44, R5, R6, R7, R8;
synchronised {  // Automata constraining P6
automaton P6_0 {
  init s0;
  s0 -> s1 [99, 99];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R4 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R21 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R37 += 1, R38 += 1 };
  s0 -> s1 [9, 9] { R38 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 65535] { R40 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R39 += 1, R40 += 1 };
  s1 -> s1 [0, 65535] { R40 += 1, R7 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R42 += 1 };
  s0 -> s0 [0, 65535] { R41 += 1, R42 += 1 };
  s0 -> s2 [9, 13] { R42 += 1 };
  s0 -> s1 [14, 31] { R42 += 1 };
  s0 -> s2 [32, 32] { R42 += 1 };
  s0 -> s1 [33, 65535] { R42 += 1 };
  s1 -> s1 [0, 65535] { R42 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R42 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 65535] { R44 += 1, R8 += 1 };
  s0 -> s0 [0, 65535] { R43 += 1, R44 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R44 += 1, R8 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R2834 += 1 };
  s0 -> s0 [0, 65535] { R2833 += 1, R2834 += 1 };
  s0 -> s2 [67, 67] { R2834 += 1 };
  s0 -> s1 [68, 65535] { R2834 += 1 };
  s1 -> s1 [0, 64] { R2834 += 1 };
  s1 -> s2 [67, 67] { R2834 += 1 };
  s1 -> s1 [68, 65535] { R2834 += 1 };
  s2 -> s2 [0, 64] { R2834 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [67, 65535] { R2834 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R2836 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R2835 += 1, R2836 += 1 };
  s1 -> s1 [0, 65535] { R2836 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 66] { R2838 += 1 };
  s0 -> s0 [0, 65535] { R2837 += 1, R2838 += 1 };
  s0 -> s2 [0, 65535] { R2838 += 1, R18 += 1 };
  s0 -> s3 [67, 67] { R2838 += 1 };
  s0 -> s1 [68, 65535] { R2838 += 1 };
  s1 -> s1 [0, 66] { R2838 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [67, 67] { R2838 += 1 };
  s1 -> s1 [68, 65535] { R2838 += 1 };
  s2 -> s1 [0, 66] { R2838 += 1 };
  s2 -> s2 [0, 65535] { R2838 += 1, R18 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [67, 67] { R2838 += 1 };
  s2 -> s1 [68, 65535] { R2838 += 1 };
  s3 -> s3 [0, 65535] { R2838 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R2840 += 1, R30 += 1 };
  s0 -> s2 [0, 65535] { R2840 += 1, R29 += 1, R30 += 1 };
  s0 -> s0 [0, 65535] { R2839 += 1, R2840 += 1 };
  s0 -> s3 [9, 13] { R2840 += 1, R30 += 1 };
  s0 -> s1 [14, 31] { R2840 += 1, R30 += 1 };
  s0 -> s3 [32, 32] { R2840 += 1, R30 += 1 };
  s0 -> s1 [33, 65535] { R2840 += 1, R30 += 1 };
  s1 -> s5 [0, 65535] { R2840 += 1 };
  s1 -> s1 [0, 65535] { R2840 += 1, R30 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 8] { R2840 += 1, R30 += 1 };
  s2 -> s2 [0, 65535] { R2840 += 1, R29 += 1, R30 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [9, 13] { R2840 += 1, R30 += 1 };
  s2 -> s1 [14, 31] { R2840 += 1, R30 += 1 };
  s2 -> s3 [32, 32] { R2840 += 1, R30 += 1 };
  s2 -> s1 [33, 65535] { R2840 += 1, R30 += 1 };
  s3 -> s1 [0, 65535] { R2840 += 1, R30 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2840 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s0 [0, 65535] { R2841 += 1, R2842 += 1 };
  s0 -> s1 [0, 65535] { R2842 += 1, R31 += 1, R32 += 1 };
  s0 -> s2 [0, 65535] { R2842 += 1, R32 += 1, R5 += 1 };
  s1 -> s1 [0, 65535] { R2842 += 1, R31 += 1, R32 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R2842 += 1, R32 += 1, R5 += 1 };
  s2 -> s3 [0, 65535] { R2842 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2842 += 1, R32 += 1, R5 += 1 };
  s3 -> s3 [0, 65535] { R2842 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R2844 += 1, R34 += 1 };
  s0 -> s0 [0, 65535] { R2843 += 1, R2844 += 1 };
  s0 -> s2 [0, 65535] { R2844 += 1, R33 += 1, R34 += 1 };
  s0 -> s3 [9, 13] { R2844 += 1, R34 += 1 };
  s0 -> s1 [14, 31] { R2844 += 1, R34 += 1 };
  s0 -> s3 [32, 32] { R2844 += 1, R34 += 1 };
  s0 -> s1 [33, 65535] { R2844 += 1, R34 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R2844 += 1, R34 += 1 };
  s1 -> s5 [0, 65535] { R2844 += 1 };
  s2 -> s1 [0, 8] { R2844 += 1, R34 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2844 += 1, R33 += 1, R34 += 1 };
  s2 -> s3 [9, 13] { R2844 += 1, R34 += 1 };
  s2 -> s1 [14, 31] { R2844 += 1, R34 += 1 };
  s2 -> s3 [32, 32] { R2844 += 1, R34 += 1 };
  s2 -> s1 [33, 65535] { R2844 += 1, R34 += 1 };
  s3 -> s1 [0, 65535] { R2844 += 1, R34 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2844 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 65535] { R2846 += 1, R36 += 1, R6 += 1 };
  s0 -> s0 [0, 65535] { R2845 += 1, R2846 += 1 };
  s0 -> s2 [0, 65535] { R2846 += 1, R35 += 1, R36 += 1 };
  s1 -> s1 [0, 65535] { R2846 += 1, R36 += 1, R6 += 1 };
  s1 -> s4 [0, 65535] { R2846 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R2846 += 1, R36 += 1, R6 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2846 += 1, R35 += 1, R36 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2846 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 66] { R2848 += 1, R2692 += 1 };
  s0 -> s2 [0, 65535] { R2848 += 1, R2691 += 1, R2692 += 1 };
  s0 -> s0 [0, 65535] { R2847 += 1, R2848 += 1 };
  s0 -> s1 [68, 65535] { R2848 += 1, R2692 += 1 };
  s1 -> s1 [0, 66] { R2848 += 1, R2692 += 1 };
  s1 -> s1 [0, 65535] { R2848 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [68, 65535] { R2848 += 1, R2692 += 1 };
  s2 -> s1 [0, 66] { R2848 += 1, R2692 += 1 };
  s2 -> s2 [0, 65535] { R2848 += 1, R2691 += 1, R2692 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [68, 65535] { R2848 += 1, R2692 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 65535] { R2850 += 1, R2694 += 1, R27 += 1 };
  s0 -> s0 [0, 65535] { R2849 += 1, R2850 += 1 };
  s0 -> s2 [0, 65535] { R2850 += 1, R2693 += 1, R2694 += 1 };
  s1 -> s4 [0, 65535] { R2850 += 1 };
  s1 -> s1 [0, 65535] { R2850 += 1, R2694 += 1, R27 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R2850 += 1, R2694 += 1, R27 += 1 };
  s2 -> s2 [0, 65535] { R2850 += 1, R2693 += 1, R2694 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2850 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 67] { R2852 += 1, R2696 += 1 };
  s0 -> s2 [0, 65535] { R2852 += 1, R2695 += 1, R2696 += 1 };
  s0 -> s0 [0, 65535] { R2851 += 1, R2852 += 1 };
  s0 -> s1 [70, 65535] { R2852 += 1, R2696 += 1 };
  s1 -> s1 [0, 67] { R2852 += 1, R2696 += 1 };
  s1 -> s1 [0, 65535] { R2852 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [70, 65535] { R2852 += 1, R2696 += 1 };
  s2 -> s1 [0, 67] { R2852 += 1, R2696 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2852 += 1, R2695 += 1, R2696 += 1 };
  s2 -> s1 [70, 65535] { R2852 += 1, R2696 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 65535] { R2854 += 1, R2698 += 1, R1774 += 1 };
  s0 -> s2 [0, 65535] { R2854 += 1, R2697 += 1, R2698 += 1 };
  s0 -> s0 [0, 65535] { R2853 += 1, R2854 += 1 };
  s1 -> s4 [0, 65535] { R2854 += 1 };
  s1 -> s1 [0, 65535] { R2854 += 1, R2698 += 1, R1774 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R2854 += 1, R2698 += 1, R1774 += 1 };
  s2 -> s2 [0, 65535] { R2854 += 1, R2697 += 1, R2698 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2854 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R2856 += 1, R2700 += 1 };
  s0 -> s0 [0, 65535] { R2855 += 1, R2856 += 1 };
  s0 -> s2 [0, 65535] { R2856 += 1, R2699 += 1, R2700 += 1 };
  s0 -> s3 [0, 65535] { R2856 += 1, R2700 += 1, R1776 += 1 };
  s0 -> s1 [71, 65535] { R2856 += 1, R2700 += 1 };
  s1 -> s1 [0, 69] { R2856 += 1, R2700 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R2856 += 1 };
  s1 -> s1 [71, 65535] { R2856 += 1, R2700 += 1 };
  s2 -> s1 [0, 69] { R2856 += 1, R2700 += 1 };
  s2 -> s2 [0, 65535] { R2856 += 1, R2699 += 1, R2700 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R2856 += 1, R2700 += 1, R1776 += 1 };
  s2 -> s1 [71, 65535] { R2856 += 1, R2700 += 1 };
  s3 -> s1 [0, 69] { R2856 += 1, R2700 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2856 += 1, R2700 += 1, R1776 += 1 };
  s3 -> s5 [0, 65535] { R2856 += 1 };
  s3 -> s1 [71, 65535] { R2856 += 1, R2700 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2856 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 65535] { R2858 += 1, R2702 += 1, R1780 += 1, R1781 += 1 };
  s0 -> s2 [0, 65535] { R2858 += 1, R2702 += 1, R1781 += 1, R1782 += 1 };
  s0 -> s3 [0, 65535] { R2858 += 1, R2701 += 1, R2702 += 1 };
  s0 -> s0 [0, 65535] { R2857 += 1, R2858 += 1 };
  s1 -> s1 [0, 65535] { R2858 += 1, R2702 += 1, R1780 += 1, R1781 += 1 };
  s1 -> s2 [0, 65535] { R2858 += 1, R2702 += 1, R1781 += 1, R1782 += 1 };
  s1 -> s5 [0, 65535] { R2858 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2858 += 1, R2702 += 1, R1781 += 1, R1782 += 1 };
  s2 -> s5 [0, 65535] { R2858 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s6 [0, 65535] { R2858 += 1, R2702 += 1 };
  s3 -> s1 [0, 65535] { R2858 += 1, R2702 += 1, R1780 += 1, R1781 += 1 };
  s3 -> s2 [0, 65535] { R2858 += 1, R2702 += 1, R1781 += 1, R1782 += 1 };
  s3 -> s3 [0, 65535] { R2858 += 1, R2701 += 1, R2702 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2858 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R2858 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R2858 += 1, R2702 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R2860 += 1, R2704 += 1, R1786 += 1 };
  s0 -> s2 [0, 65535] { R2860 += 1, R2703 += 1, R2704 += 1 };
  s0 -> s3 [0, 65535] { R2860 += 1, R2704 += 1, R1785 += 1, R1786 += 1 };
  s0 -> s0 [0, 65535] { R2859 += 1, R2860 += 1 };
  s0 -> s4 [70, 70] { R2860 += 1, R2704 += 1, R1786 += 1 };
  s0 -> s5 [70, 70] { R2860 += 1, R2704 += 1, R1786 += 1 };
  s0 -> s1 [77, 65535] { R2860 += 1, R2704 += 1, R1786 += 1 };
  s1 -> s1 [0, 69] { R2860 += 1, R2704 += 1, R1786 += 1 };
  s1 -> s1 [0, 65535] { R2860 += 1, R2704 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R2860 += 1 };
  s1 -> s4 [70, 70] { R2860 += 1, R2704 += 1, R1786 += 1 };
  s1 -> s5 [70, 70] { R2860 += 1, R2704 += 1, R1786 += 1 };
  s1 -> s1 [77, 65535] { R2860 += 1, R2704 += 1, R1786 += 1 };
  s2 -> s1 [0, 69] { R2860 += 1, R2704 += 1, R1786 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R2860 += 1, R2703 += 1, R2704 += 1 };
  s2 -> s3 [0, 65535] { R2860 += 1, R2704 += 1, R1785 += 1, R1786 += 1 };
  s2 -> s4 [70, 70] { R2860 += 1, R2704 += 1, R1786 += 1 };
  s2 -> s5 [70, 70] { R2860 += 1, R2704 += 1, R1786 += 1 };
  s2 -> s1 [77, 65535] { R2860 += 1, R2704 += 1, R1786 += 1 };
  s3 -> s1 [0, 69] { R2860 += 1, R2704 += 1, R1786 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R2860 += 1, R2704 += 1, R1785 += 1, R1786 += 1 };
  s3 -> s7 [0, 65535] { R2860 += 1 };
  s3 -> s4 [70, 70] { R2860 += 1, R2704 += 1, R1786 += 1 };
  s3 -> s5 [70, 70] { R2860 += 1, R2704 += 1, R1786 += 1 };
  s3 -> s1 [77, 65535] { R2860 += 1, R2704 += 1, R1786 += 1 };
  s4 -> s4 [0, 70] { R2860 += 1, R2704 += 1, R1786 += 1 };
  s4 -> s4 [0, 65535] { R2860 += 1, R2704 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R2860 += 1 };
  s4 -> s4 [77, 65535] { R2860 += 1, R2704 += 1, R1786 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R2860 += 1 };
  s5 -> s5 [0, 65535] { R2860 += 1, R2704 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2860 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R2862 += 1, R2706 += 1, R1791 += 1, R1792 += 1 };
  s0 -> s0 [0, 65535] { R2861 += 1, R2862 += 1 };
  s0 -> s2 [0, 65535] { R2862 += 1, R2706 += 1, R1790 += 1, R1791 += 1 };
  s0 -> s3 [0, 65535] { R2862 += 1, R2705 += 1, R2706 += 1 };
  s0 -> s4 [70, 70] { R2862 += 1, R2706 += 1, R1791 += 1, R1792 += 1 };
  s0 -> s5 [70, 70] { R2862 += 1, R2706 += 1, R1791 += 1, R1792 += 1 };
  s0 -> s1 [71, 65535] { R2862 += 1, R2706 += 1, R1791 += 1, R1792 += 1 };
  s1 -> s1 [0, 69] { R2862 += 1, R2706 += 1, R1791 += 1, R1792 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R2862 += 1, R2706 += 1 };
  s1 -> s7 [0, 65535] { R2862 += 1 };
  s1 -> s4 [70, 70] { R2862 += 1, R2706 += 1, R1791 += 1, R1792 += 1 };
  s1 -> s5 [70, 70] { R2862 += 1, R2706 += 1, R1791 += 1, R1792 += 1 };
  s1 -> s1 [71, 65535] { R2862 += 1, R2706 += 1, R1791 += 1, R1792 += 1 };
  s2 -> s1 [0, 69] { R2862 += 1, R2706 += 1, R1791 += 1, R1792 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R2862 += 1 };
  s2 -> s2 [0, 65535] { R2862 += 1, R2706 += 1, R1790 += 1, R1791 += 1 };
  s2 -> s4 [70, 70] { R2862 += 1, R2706 += 1, R1791 += 1, R1792 += 1 };
  s2 -> s5 [70, 70] { R2862 += 1, R2706 += 1, R1791 += 1, R1792 += 1 };
  s2 -> s1 [71, 65535] { R2862 += 1, R2706 += 1, R1791 += 1, R1792 += 1 };
  s3 -> s1 [0, 69] { R2862 += 1, R2706 += 1, R1791 += 1, R1792 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R2862 += 1, R2706 += 1, R1790 += 1, R1791 += 1 };
  s3 -> s3 [0, 65535] { R2862 += 1, R2705 += 1, R2706 += 1 };
  s3 -> s4 [70, 70] { R2862 += 1, R2706 += 1, R1791 += 1, R1792 += 1 };
  s3 -> s5 [70, 70] { R2862 += 1, R2706 += 1, R1791 += 1, R1792 += 1 };
  s3 -> s1 [71, 65535] { R2862 += 1, R2706 += 1, R1791 += 1, R1792 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2862 += 1, R2706 += 1, R1791 += 1, R1792 += 1 };
  s4 -> s7 [0, 65535] { R2862 += 1 };
  s4 -> s8 [0, 65535] { R2862 += 1, R2706 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R2862 += 1 };
  s5 -> s5 [0, 65535] { R2862 += 1, R2706 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2862 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R2862 += 1 };
  s8 -> s8 [0, 65535] { R2862 += 1, R2706 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R2864 += 1, R2708 += 1, R1797 += 1, R1798 += 1 };
  s0 -> s2 [0, 65535] { R2864 += 1, R2707 += 1, R2708 += 1 };
  s0 -> s3 [0, 65535] { R2864 += 1, R2708 += 1, R1796 += 1, R1797 += 1 };
  s0 -> s0 [0, 65535] { R2863 += 1, R2864 += 1 };
  s0 -> s4 [70, 70] { R2864 += 1, R2708 += 1, R1797 += 1, R1798 += 1 };
  s0 -> s5 [70, 70] { R2864 += 1, R2708 += 1, R1797 += 1, R1798 += 1 };
  s0 -> s1 [71, 65535] { R2864 += 1, R2708 += 1, R1797 += 1, R1798 += 1 };
  s1 -> s1 [0, 69] { R2864 += 1, R2708 += 1, R1797 += 1, R1798 += 1 };
  s1 -> s7 [0, 65535] { R2864 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s1 [0, 65535] { R2864 += 1, R2708 += 1 };
  s1 -> s4 [70, 70] { R2864 += 1, R2708 += 1, R1797 += 1, R1798 += 1 };
  s1 -> s5 [70, 70] { R2864 += 1, R2708 += 1, R1797 += 1, R1798 += 1 };
  s1 -> s1 [71, 65535] { R2864 += 1, R2708 += 1, R1797 += 1, R1798 += 1 };
  s2 -> s1 [0, 69] { R2864 += 1, R2708 += 1, R1797 += 1, R1798 += 1 };
  s2 -> s2 [0, 65535] { R2864 += 1, R2707 += 1, R2708 += 1 };
  s2 -> s3 [0, 65535] { R2864 += 1, R2708 += 1, R1796 += 1, R1797 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [70, 70] { R2864 += 1, R2708 += 1, R1797 += 1, R1798 += 1 };
  s2 -> s5 [70, 70] { R2864 += 1, R2708 += 1, R1797 += 1, R1798 += 1 };
  s2 -> s1 [71, 65535] { R2864 += 1, R2708 += 1, R1797 += 1, R1798 += 1 };
  s3 -> s1 [0, 69] { R2864 += 1, R2708 += 1, R1797 += 1, R1798 += 1 };
  s3 -> s3 [0, 65535] { R2864 += 1, R2708 += 1, R1796 += 1, R1797 += 1 };
  s3 -> s7 [0, 65535] { R2864 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s4 [70, 70] { R2864 += 1, R2708 += 1, R1797 += 1, R1798 += 1 };
  s3 -> s5 [70, 70] { R2864 += 1, R2708 += 1, R1797 += 1, R1798 += 1 };
  s3 -> s1 [71, 65535] { R2864 += 1, R2708 += 1, R1797 += 1, R1798 += 1 };
  s4 -> s4 [0, 65535] { R2864 += 1, R2708 += 1 };
  s4 -> s7 [0, 65535] { R2864 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s6 [0, 65535] { R2864 += 1, R2708 += 1 };
  s5 -> s7 [0, 65535] { R2864 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R2864 += 1, R2708 += 1, R1797 += 1, R1798 += 1 };
  s6 -> s6 [0, 65535] { R2864 += 1, R2708 += 1 };
  s6 -> s7 [0, 65535] { R2864 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R2864 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 69] { R2866 += 1, R2710 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s0 -> s2 [0, 65535] { R2866 += 1, R2710 += 1, R1803 += 1, R1804 += 1 };
  s0 -> s0 [0, 65535] { R2865 += 1, R2866 += 1 };
  s0 -> s3 [0, 65535] { R2866 += 1, R2709 += 1, R2710 += 1 };
  s0 -> s4 [70, 70] { R2866 += 1, R2710 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s0 -> s5 [70, 70] { R2866 += 1, R2710 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s0 -> s1 [71, 65535] { R2866 += 1, R2710 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s1 -> s1 [0, 69] { R2866 += 1, R2710 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s1 -> s1 [0, 65535] { R2866 += 1, R2710 += 1 };
  s1 -> s7 [0, 65535] { R2866 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [70, 70] { R2866 += 1, R2710 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s1 -> s5 [70, 70] { R2866 += 1, R2710 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s1 -> s1 [71, 65535] { R2866 += 1, R2710 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s2 -> s1 [0, 69] { R2866 += 1, R2710 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s2 -> s7 [0, 65535] { R2866 += 1 };
  s2 -> s2 [0, 65535] { R2866 += 1, R2710 += 1, R1803 += 1, R1804 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [70, 70] { R2866 += 1, R2710 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s2 -> s5 [70, 70] { R2866 += 1, R2710 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s2 -> s1 [71, 65535] { R2866 += 1, R2710 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s3 -> s1 [0, 69] { R2866 += 1, R2710 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s3 -> s2 [0, 65535] { R2866 += 1, R2710 += 1, R1803 += 1, R1804 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s3 [0, 65535] { R2866 += 1, R2709 += 1, R2710 += 1 };
  s3 -> s4 [70, 70] { R2866 += 1, R2710 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s3 -> s5 [70, 70] { R2866 += 1, R2710 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s3 -> s1 [71, 65535] { R2866 += 1, R2710 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s4 -> s7 [0, 65535] { R2866 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [0, 65535] { R2866 += 1, R2710 += 1 };
  s5 -> s6 [0, 65535] { R2866 += 1, R2710 += 1 };
  s5 -> s7 [0, 65535] { R2866 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R2866 += 1, R2710 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s6 -> s6 [0, 65535] { R2866 += 1, R2710 += 1 };
  s6 -> s7 [0, 65535] { R2866 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R2866 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R2868 += 1, R2712 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s0 -> s2 [0, 65535] { R2868 += 1, R2712 += 1, R1812 += 1, R1813 += 1 };
  s0 -> s0 [0, 65535] { R2867 += 1, R2868 += 1 };
  s0 -> s3 [0, 65535] { R2868 += 1, R2711 += 1, R2712 += 1 };
  s0 -> s4 [70, 70] { R2868 += 1, R2712 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s0 -> s5 [70, 70] { R2868 += 1, R2712 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s0 -> s1 [71, 65535] { R2868 += 1, R2712 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s1 -> s1 [0, 69] { R2868 += 1, R2712 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R2868 += 1 };
  s1 -> s1 [0, 65535] { R2868 += 1, R2712 += 1 };
  s1 -> s4 [70, 70] { R2868 += 1, R2712 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s1 -> s5 [70, 70] { R2868 += 1, R2712 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s1 -> s1 [71, 65535] { R2868 += 1, R2712 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s2 -> s1 [0, 69] { R2868 += 1, R2712 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R2868 += 1 };
  s2 -> s2 [0, 65535] { R2868 += 1, R2712 += 1, R1812 += 1, R1813 += 1 };
  s2 -> s4 [70, 70] { R2868 += 1, R2712 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s2 -> s5 [70, 70] { R2868 += 1, R2712 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s2 -> s1 [71, 65535] { R2868 += 1, R2712 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s3 -> s1 [0, 69] { R2868 += 1, R2712 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R2868 += 1, R2712 += 1, R1812 += 1, R1813 += 1 };
  s3 -> s3 [0, 65535] { R2868 += 1, R2711 += 1, R2712 += 1 };
  s3 -> s4 [70, 70] { R2868 += 1, R2712 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s3 -> s5 [70, 70] { R2868 += 1, R2712 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s3 -> s1 [71, 65535] { R2868 += 1, R2712 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2868 += 1, R2712 += 1 };
  s4 -> s7 [0, 65535] { R2868 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R2868 += 1 };
  s5 -> s5 [0, 65535] { R2868 += 1, R2712 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s5 -> s8 [0, 65535] { R2868 += 1, R2712 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2868 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R2868 += 1 };
  s8 -> s8 [0, 65535] { R2868 += 1, R2712 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R2870 += 1, R2714 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s0 -> s0 [0, 65535] { R2869 += 1, R2870 += 1 };
  s0 -> s2 [0, 65535] { R2870 += 1, R2713 += 1, R2714 += 1 };
  s0 -> s3 [0, 65535] { R2870 += 1, R2714 += 1, R1821 += 1, R1822 += 1 };
  s0 -> s4 [70, 70] { R2870 += 1, R2714 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s0 -> s5 [70, 70] { R2870 += 1, R2714 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s0 -> s1 [71, 65535] { R2870 += 1, R2714 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s1 -> s1 [0, 69] { R2870 += 1, R2714 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s1 -> s1 [0, 65535] { R2870 += 1, R2714 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s8 [0, 65535] { R2870 += 1 };
  s1 -> s4 [70, 70] { R2870 += 1, R2714 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s1 -> s5 [70, 70] { R2870 += 1, R2714 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s1 -> s1 [71, 65535] { R2870 += 1, R2714 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s2 -> s1 [0, 69] { R2870 += 1, R2714 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s2 -> s2 [0, 65535] { R2870 += 1, R2713 += 1, R2714 += 1 };
  s2 -> s3 [0, 65535] { R2870 += 1, R2714 += 1, R1821 += 1, R1822 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [70, 70] { R2870 += 1, R2714 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s2 -> s5 [70, 70] { R2870 += 1, R2714 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s2 -> s1 [71, 65535] { R2870 += 1, R2714 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s3 -> s1 [0, 69] { R2870 += 1, R2714 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R2870 += 1, R2714 += 1, R1821 += 1, R1822 += 1 };
  s3 -> s8 [0, 65535] { R2870 += 1 };
  s3 -> s4 [70, 70] { R2870 += 1, R2714 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s3 -> s5 [70, 70] { R2870 += 1, R2714 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s3 -> s1 [71, 65535] { R2870 += 1, R2714 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s4 -> s4 [0, 65535] { R2870 += 1, R2714 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R2870 += 1 };
  s5 -> s5 [0, 65535] { R2870 += 1, R2714 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s5 -> s6 [0, 65535] { R2870 += 1, R2714 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R2870 += 1 };
  s6 -> s6 [0, 65535] { R2870 += 1, R2714 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R2870 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R2870 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 69] { R2872 += 1, R2716 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s0 -> s2 [0, 65535] { R2872 += 1, R2715 += 1, R2716 += 1 };
  s0 -> s0 [0, 65535] { R2871 += 1, R2872 += 1 };
  s0 -> s3 [0, 65535] { R2872 += 1, R2716 += 1, R1830 += 1, R1831 += 1 };
  s0 -> s4 [70, 70] { R2872 += 1, R2716 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s0 -> s5 [70, 70] { R2872 += 1, R2716 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s0 -> s1 [71, 65535] { R2872 += 1, R2716 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s1 -> s1 [0, 69] { R2872 += 1, R2716 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s1 -> s1 [0, 65535] { R2872 += 1, R2716 += 1 };
  s1 -> s6 [0, 65535] { R2872 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [70, 70] { R2872 += 1, R2716 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s1 -> s5 [70, 70] { R2872 += 1, R2716 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s1 -> s1 [71, 65535] { R2872 += 1, R2716 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s2 -> s1 [0, 69] { R2872 += 1, R2716 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s2 [0, 65535] { R2872 += 1, R2715 += 1, R2716 += 1 };
  s2 -> s3 [0, 65535] { R2872 += 1, R2716 += 1, R1830 += 1, R1831 += 1 };
  s2 -> s4 [70, 70] { R2872 += 1, R2716 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s2 -> s5 [70, 70] { R2872 += 1, R2716 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s2 -> s1 [71, 65535] { R2872 += 1, R2716 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s3 -> s1 [0, 69] { R2872 += 1, R2716 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s3 -> s6 [0, 65535] { R2872 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R2872 += 1, R2716 += 1, R1830 += 1, R1831 += 1 };
  s3 -> s4 [70, 70] { R2872 += 1, R2716 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s3 -> s5 [70, 70] { R2872 += 1, R2716 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s3 -> s1 [71, 65535] { R2872 += 1, R2716 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s4 -> s4 [0, 65535] { R2872 += 1, R2716 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s4 -> s6 [0, 65535] { R2872 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R2872 += 1, R2716 += 1 };
  s5 -> s6 [0, 65535] { R2872 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R2872 += 1, R2716 += 1 };
  s6 -> s6 [0, 65535] { R2872 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R2872 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R2872 += 1, R2716 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 69] { R2874 += 1, R2718 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s0 -> s0 [0, 65535] { R2873 += 1, R2874 += 1 };
  s0 -> s2 [0, 65535] { R2874 += 1, R2718 += 1, R1839 += 1, R1840 += 1 };
  s0 -> s3 [0, 65535] { R2874 += 1, R2717 += 1, R2718 += 1 };
  s0 -> s4 [70, 70] { R2874 += 1, R2718 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s0 -> s5 [70, 70] { R2874 += 1, R2718 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s0 -> s1 [71, 65535] { R2874 += 1, R2718 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s1 -> s1 [0, 69] { R2874 += 1, R2718 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s1 -> s1 [0, 65535] { R2874 += 1, R2718 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R2874 += 1 };
  s1 -> s4 [70, 70] { R2874 += 1, R2718 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s1 -> s5 [70, 70] { R2874 += 1, R2718 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s1 -> s1 [71, 65535] { R2874 += 1, R2718 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s2 -> s1 [0, 69] { R2874 += 1, R2718 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R2874 += 1, R2718 += 1, R1839 += 1, R1840 += 1 };
  s2 -> s7 [0, 65535] { R2874 += 1 };
  s2 -> s4 [70, 70] { R2874 += 1, R2718 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s2 -> s5 [70, 70] { R2874 += 1, R2718 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s2 -> s1 [71, 65535] { R2874 += 1, R2718 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s3 -> s1 [0, 69] { R2874 += 1, R2718 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R2874 += 1, R2718 += 1, R1839 += 1, R1840 += 1 };
  s3 -> s3 [0, 65535] { R2874 += 1, R2717 += 1, R2718 += 1 };
  s3 -> s4 [70, 70] { R2874 += 1, R2718 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s3 -> s5 [70, 70] { R2874 += 1, R2718 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s3 -> s1 [71, 65535] { R2874 += 1, R2718 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s4 -> s8 [0, 65535] { R2874 += 1, R2718 += 1 };
  s4 -> s4 [0, 65535] { R2874 += 1, R2718 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R2874 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R2874 += 1, R2718 += 1 };
  s5 -> s7 [0, 65535] { R2874 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2874 += 1 };
  s8 -> s8 [0, 65535] { R2874 += 1, R2718 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R2874 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 69] { R2876 += 1, R2720 += 1, R1846 += 1 };
  s0 -> s2 [0, 65535] { R2876 += 1, R2720 += 1, R1845 += 1, R1846 += 1 };
  s0 -> s3 [0, 65535] { R2876 += 1, R2719 += 1, R2720 += 1 };
  s0 -> s0 [0, 65535] { R2875 += 1, R2876 += 1 };
  s0 -> s4 [70, 70] { R2876 += 1, R2720 += 1, R1846 += 1 };
  s0 -> s1 [71, 65535] { R2876 += 1, R2720 += 1, R1846 += 1 };
  s1 -> s1 [0, 69] { R2876 += 1, R2720 += 1, R1846 += 1 };
  s1 -> s4 [70, 70] { R2876 += 1, R2720 += 1, R1846 += 1 };
  s1 -> s1 [71, 65535] { R2876 += 1, R2720 += 1, R1846 += 1 };
  s2 -> s1 [0, 69] { R2876 += 1, R2720 += 1, R1846 += 1 };
  s2 -> s2 [0, 65535] { R2876 += 1, R2720 += 1, R1845 += 1, R1846 += 1 };
  s2 -> s4 [70, 70] { R2876 += 1, R2720 += 1, R1846 += 1 };
  s2 -> s1 [71, 65535] { R2876 += 1, R2720 += 1, R1846 += 1 };
  s3 -> s1 [0, 69] { R2876 += 1, R2720 += 1, R1846 += 1 };
  s3 -> s2 [0, 65535] { R2876 += 1, R2720 += 1, R1845 += 1, R1846 += 1 };
  s3 -> s3 [0, 65535] { R2876 += 1, R2719 += 1, R2720 += 1 };
  s3 -> s4 [70, 70] { R2876 += 1, R2720 += 1, R1846 += 1 };
  s3 -> s1 [71, 65535] { R2876 += 1, R2720 += 1, R1846 += 1 };
  s4 -> s5 [0, 65535] { R2876 += 1 };
  s4 -> s6 [0, 65535] { R2876 += 1, R2720 += 1 };
  s4 -> s4 [0, 65535] { R2876 += 1, R2720 += 1, R1846 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R2876 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s5 [0, 65535] { R2876 += 1 };
  s6 -> s6 [0, 65535] { R2876 += 1, R2720 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s4, s5, s6, s7;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R2878 += 1, R2722 += 1, R1851 += 1, R1852 += 1 };
  s0 -> s2 [0, 65535] { R2878 += 1, R2722 += 1, R1850 += 1, R1851 += 1 };
  s0 -> s3 [0, 65535] { R2878 += 1, R2721 += 1, R2722 += 1 };
  s0 -> s0 [0, 65535] { R2877 += 1, R2878 += 1 };
  s1 -> s1 [0, 65535] { R2878 += 1, R2722 += 1, R1851 += 1, R1852 += 1 };
  s1 -> s5 [0, 65535] { R2878 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R2878 += 1, R2722 += 1 };
  s2 -> s1 [0, 65535] { R2878 += 1, R2722 += 1, R1851 += 1, R1852 += 1 };
  s2 -> s2 [0, 65535] { R2878 += 1, R2722 += 1, R1850 += 1, R1851 += 1 };
  s2 -> s5 [0, 65535] { R2878 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R2878 += 1, R2722 += 1, R1851 += 1, R1852 += 1 };
  s3 -> s2 [0, 65535] { R2878 += 1, R2722 += 1, R1850 += 1, R1851 += 1 };
  s3 -> s3 [0, 65535] { R2878 += 1, R2721 += 1, R2722 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2878 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R2878 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R2878 += 1, R2722 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 69] { R2880 += 1, R2724 += 1, R1857 += 1 };
  s0 -> s2 [0, 65535] { R2880 += 1, R2723 += 1, R2724 += 1 };
  s0 -> s3 [0, 65535] { R2880 += 1, R2724 += 1, R1857 += 1, R1858 += 1 };
  s0 -> s0 [0, 65535] { R2879 += 1, R2880 += 1 };
  s0 -> s4 [0, 65535] { R2880 += 1, R2724 += 1, R1856 += 1, R1857 += 1 };
  s0 -> s1 [71, 65535] { R2880 += 1, R2724 += 1, R1857 += 1 };
  s1 -> s1 [0, 69] { R2880 += 1, R2724 += 1, R1857 += 1 };
  s1 -> s5 [0, 65535] { R2880 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R2880 += 1, R2724 += 1 };
  s1 -> s1 [71, 65535] { R2880 += 1, R2724 += 1, R1857 += 1 };
  s2 -> s1 [0, 69] { R2880 += 1, R2724 += 1, R1857 += 1 };
  s2 -> s2 [0, 65535] { R2880 += 1, R2723 += 1, R2724 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R2880 += 1, R2724 += 1, R1857 += 1, R1858 += 1 };
  s2 -> s4 [0, 65535] { R2880 += 1, R2724 += 1, R1856 += 1, R1857 += 1 };
  s2 -> s1 [71, 65535] { R2880 += 1, R2724 += 1, R1857 += 1 };
  s3 -> s1 [0, 69] { R2880 += 1, R2724 += 1, R1857 += 1 };
  s3 -> s5 [0, 65535] { R2880 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R2880 += 1, R2724 += 1 };
  s3 -> s3 [0, 65535] { R2880 += 1, R2724 += 1, R1857 += 1, R1858 += 1 };
  s3 -> s1 [71, 65535] { R2880 += 1, R2724 += 1, R1857 += 1 };
  s4 -> s1 [0, 69] { R2880 += 1, R2724 += 1, R1857 += 1 };
  s4 -> s5 [0, 65535] { R2880 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s3 [0, 65535] { R2880 += 1, R2724 += 1, R1857 += 1, R1858 += 1 };
  s4 -> s4 [0, 65535] { R2880 += 1, R2724 += 1, R1856 += 1, R1857 += 1 };
  s4 -> s1 [71, 65535] { R2880 += 1, R2724 += 1, R1857 += 1 };
  s5 -> s5 [0, 65535] { R2880 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R2880 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2880 += 1, R2724 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R2882 += 1, R2726 += 1, R1864 += 1, R1866 += 1 };
  s0 -> s2 [0, 65535] { R2882 += 1, R2725 += 1, R2726 += 1 };
  s0 -> s3 [0, 65535] { R2882 += 1, R2726 += 1, R1863 += 1, R1864 += 1 };
  s0 -> s4 [0, 65535] { R2882 += 1, R2726 += 1, R1864 += 1, R1865 += 1, R1866 += 1 };
  s0 -> s0 [0, 65535] { R2881 += 1, R2882 += 1 };
  s0 -> s1 [71, 65535] { R2882 += 1, R2726 += 1, R1864 += 1, R1866 += 1 };
  s1 -> s1 [0, 69] { R2882 += 1, R2726 += 1, R1864 += 1, R1866 += 1 };
  s1 -> s5 [0, 65535] { R2882 += 1 };
  s1 -> s1 [0, 65535] { R2882 += 1, R2726 += 1, R1864 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R2882 += 1, R2726 += 1 };
  s1 -> s1 [71, 65535] { R2882 += 1, R2726 += 1, R1864 += 1, R1866 += 1 };
  s2 -> s1 [0, 69] { R2882 += 1, R2726 += 1, R1864 += 1, R1866 += 1 };
  s2 -> s2 [0, 65535] { R2882 += 1, R2725 += 1, R2726 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R2882 += 1, R2726 += 1, R1863 += 1, R1864 += 1 };
  s2 -> s4 [0, 65535] { R2882 += 1, R2726 += 1, R1864 += 1, R1865 += 1, R1866 += 1 };
  s2 -> s1 [71, 65535] { R2882 += 1, R2726 += 1, R1864 += 1, R1866 += 1 };
  s3 -> s1 [0, 69] { R2882 += 1, R2726 += 1, R1864 += 1, R1866 += 1 };
  s3 -> s5 [0, 65535] { R2882 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R2882 += 1, R2726 += 1, R1863 += 1, R1864 += 1 };
  s3 -> s4 [0, 65535] { R2882 += 1, R2726 += 1, R1864 += 1, R1865 += 1, R1866 += 1 };
  s3 -> s1 [71, 65535] { R2882 += 1, R2726 += 1, R1864 += 1, R1866 += 1 };
  s4 -> s1 [0, 69] { R2882 += 1, R2726 += 1, R1864 += 1, R1866 += 1 };
  s4 -> s5 [0, 65535] { R2882 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R2882 += 1, R2726 += 1 };
  s4 -> s4 [0, 65535] { R2882 += 1, R2726 += 1, R1864 += 1, R1865 += 1, R1866 += 1 };
  s4 -> s1 [71, 65535] { R2882 += 1, R2726 += 1, R1864 += 1, R1866 += 1 };
  s5 -> s5 [0, 65535] { R2882 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R2882 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2882 += 1, R2726 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R2884 += 1, R2728 += 1, R1873 += 1, R1874 += 1, R1875 += 1 };
  s0 -> s0 [0, 65535] { R2883 += 1, R2884 += 1 };
  s0 -> s2 [0, 65535] { R2884 += 1, R2728 += 1, R1873 += 1, R1875 += 1, R1876 += 1 };
  s0 -> s3 [0, 65535] { R2884 += 1, R2727 += 1, R2728 += 1 };
  s0 -> s4 [0, 65535] { R2884 += 1, R2728 += 1, R1872 += 1, R1873 += 1 };
  s1 -> s1 [0, 65535] { R2884 += 1, R2728 += 1, R1873 += 1, R1874 += 1, R1875 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R2884 += 1, R2728 += 1 };
  s1 -> s2 [0, 65535] { R2884 += 1, R2728 += 1, R1873 += 1, R1875 += 1, R1876 += 1 };
  s1 -> s6 [0, 65535] { R2884 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R2884 += 1, R2728 += 1 };
  s2 -> s2 [0, 65535] { R2884 += 1, R2728 += 1, R1873 += 1, R1875 += 1, R1876 += 1 };
  s2 -> s6 [0, 65535] { R2884 += 1 };
  s2 -> s8 [0, 65535] { R2884 += 1, R2728 += 1, R1873 += 1 };
  s3 -> s1 [0, 65535] { R2884 += 1, R2728 += 1, R1873 += 1, R1874 += 1, R1875 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R2884 += 1, R2728 += 1, R1873 += 1, R1875 += 1, R1876 += 1 };
  s3 -> s3 [0, 65535] { R2884 += 1, R2727 += 1, R2728 += 1 };
  s3 -> s4 [0, 65535] { R2884 += 1, R2728 += 1, R1872 += 1, R1873 += 1 };
  s4 -> s1 [0, 65535] { R2884 += 1, R2728 += 1, R1873 += 1, R1874 += 1, R1875 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R2884 += 1, R2728 += 1, R1873 += 1, R1875 += 1, R1876 += 1 };
  s4 -> s6 [0, 65535] { R2884 += 1 };
  s4 -> s4 [0, 65535] { R2884 += 1, R2728 += 1, R1872 += 1, R1873 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2884 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R2884 += 1, R2728 += 1 };
  s7 -> s6 [0, 65535] { R2884 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s7 [0, 65535] { R2884 += 1, R2728 += 1 };
  s8 -> s6 [0, 65535] { R2884 += 1 };
  s8 -> s8 [0, 65535] { R2884 += 1, R2728 += 1, R1873 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 70] { R2886 += 1, R2730 += 1, R1882 += 1, R1884 += 1 };
  s0 -> s2 [0, 65535] { R2886 += 1, R2729 += 1, R2730 += 1 };
  s0 -> s3 [0, 65535] { R2886 += 1, R2730 += 1, R1882 += 1, R1883 += 1, R1884 += 1 };
  s0 -> s4 [0, 65535] { R2886 += 1, R2730 += 1, R1881 += 1, R1882 += 1 };
  s0 -> s0 [0, 65535] { R2885 += 1, R2886 += 1 };
  s0 -> s1 [76, 65535] { R2886 += 1, R2730 += 1, R1882 += 1, R1884 += 1 };
  s1 -> s1 [0, 70] { R2886 += 1, R2730 += 1, R1882 += 1, R1884 += 1 };
  s1 -> s5 [0, 65535] { R2886 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R2886 += 1, R2730 += 1 };
  s1 -> s1 [0, 65535] { R2886 += 1, R2730 += 1, R1882 += 1 };
  s1 -> s1 [76, 65535] { R2886 += 1, R2730 += 1, R1882 += 1, R1884 += 1 };
  s2 -> s1 [0, 70] { R2886 += 1, R2730 += 1, R1882 += 1, R1884 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R2886 += 1, R2729 += 1, R2730 += 1 };
  s2 -> s3 [0, 65535] { R2886 += 1, R2730 += 1, R1882 += 1, R1883 += 1, R1884 += 1 };
  s2 -> s4 [0, 65535] { R2886 += 1, R2730 += 1, R1881 += 1, R1882 += 1 };
  s2 -> s1 [76, 65535] { R2886 += 1, R2730 += 1, R1882 += 1, R1884 += 1 };
  s3 -> s1 [0, 70] { R2886 += 1, R2730 += 1, R1882 += 1, R1884 += 1 };
  s3 -> s5 [0, 65535] { R2886 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R2886 += 1, R2730 += 1 };
  s3 -> s3 [0, 65535] { R2886 += 1, R2730 += 1, R1882 += 1, R1883 += 1, R1884 += 1 };
  s3 -> s1 [76, 65535] { R2886 += 1, R2730 += 1, R1882 += 1, R1884 += 1 };
  s4 -> s1 [0, 70] { R2886 += 1, R2730 += 1, R1882 += 1, R1884 += 1 };
  s4 -> s5 [0, 65535] { R2886 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s3 [0, 65535] { R2886 += 1, R2730 += 1, R1882 += 1, R1883 += 1, R1884 += 1 };
  s4 -> s4 [0, 65535] { R2886 += 1, R2730 += 1, R1881 += 1, R1882 += 1 };
  s4 -> s1 [76, 65535] { R2886 += 1, R2730 += 1, R1882 += 1, R1884 += 1 };
  s5 -> s5 [0, 65535] { R2886 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R2886 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2886 += 1, R2730 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 65535] { R2888 += 1, R2732 += 1, R1891 += 1, R1892 += 1, R1893 += 1 };
  s0 -> s2 [0, 65535] { R2888 += 1, R2731 += 1, R2732 += 1 };
  s0 -> s3 [0, 65535] { R2888 += 1, R2732 += 1, R1890 += 1, R1891 += 1 };
  s0 -> s0 [0, 65535] { R2887 += 1, R2888 += 1 };
  s0 -> s4 [0, 65535] { R2888 += 1, R2732 += 1, R1891 += 1, R1893 += 1, R1894 += 1 };
  s1 -> s5 [0, 65535] { R2888 += 1, R2732 += 1 };
  s1 -> s1 [0, 65535] { R2888 += 1, R2732 += 1, R1891 += 1, R1892 += 1, R1893 += 1 };
  s1 -> s6 [0, 65535] { R2888 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [0, 65535] { R2888 += 1, R2732 += 1, R1891 += 1, R1893 += 1, R1894 += 1 };
  s2 -> s1 [0, 65535] { R2888 += 1, R2732 += 1, R1891 += 1, R1892 += 1, R1893 += 1 };
  s2 -> s2 [0, 65535] { R2888 += 1, R2731 += 1, R2732 += 1 };
  s2 -> s3 [0, 65535] { R2888 += 1, R2732 += 1, R1890 += 1, R1891 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [0, 65535] { R2888 += 1, R2732 += 1, R1891 += 1, R1893 += 1, R1894 += 1 };
  s3 -> s1 [0, 65535] { R2888 += 1, R2732 += 1, R1891 += 1, R1892 += 1, R1893 += 1 };
  s3 -> s6 [0, 65535] { R2888 += 1 };
  s3 -> s3 [0, 65535] { R2888 += 1, R2732 += 1, R1890 += 1, R1891 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [0, 65535] { R2888 += 1, R2732 += 1, R1891 += 1, R1893 += 1, R1894 += 1 };
  s4 -> s5 [0, 65535] { R2888 += 1, R2732 += 1 };
  s4 -> s6 [0, 65535] { R2888 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R2888 += 1, R2732 += 1, R1891 += 1 };
  s4 -> s4 [0, 65535] { R2888 += 1, R2732 += 1, R1891 += 1, R1893 += 1, R1894 += 1 };
  s5 -> s5 [0, 65535] { R2888 += 1, R2732 += 1 };
  s5 -> s6 [0, 65535] { R2888 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R2888 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s5 [0, 65535] { R2888 += 1, R2732 += 1 };
  s8 -> s6 [0, 65535] { R2888 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R2888 += 1, R2732 += 1, R1891 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 75] { R2890 += 1, R2734 += 1, R1901 += 1, R1903 += 1 };
  s0 -> s2 [0, 65535] { R2890 += 1, R2734 += 1, R1900 += 1, R1901 += 1 };
  s0 -> s3 [0, 65535] { R2890 += 1, R2733 += 1, R2734 += 1 };
  s0 -> s4 [0, 65535] { R2890 += 1, R2734 += 1, R1901 += 1, R1903 += 1, R1904 += 1 };
  s0 -> s0 [0, 65535] { R2889 += 1, R2890 += 1 };
  s0 -> s5 [0, 65535] { R2890 += 1, R2734 += 1, R1901 += 1, R1902 += 1, R1903 += 1 };
  s0 -> s1 [77, 65535] { R2890 += 1, R2734 += 1, R1901 += 1, R1903 += 1 };
  s1 -> s1 [0, 75] { R2890 += 1, R2734 += 1, R1901 += 1, R1903 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R2890 += 1, R2734 += 1, R1901 += 1 };
  s1 -> s7 [0, 65535] { R2890 += 1 };
  s1 -> s8 [0, 65535] { R2890 += 1, R2734 += 1 };
  s1 -> s1 [77, 65535] { R2890 += 1, R2734 += 1, R1901 += 1, R1903 += 1 };
  s2 -> s1 [0, 75] { R2890 += 1, R2734 += 1, R1901 += 1, R1903 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R2890 += 1, R2734 += 1, R1900 += 1, R1901 += 1 };
  s2 -> s4 [0, 65535] { R2890 += 1, R2734 += 1, R1901 += 1, R1903 += 1, R1904 += 1 };
  s2 -> s7 [0, 65535] { R2890 += 1 };
  s2 -> s5 [0, 65535] { R2890 += 1, R2734 += 1, R1901 += 1, R1902 += 1, R1903 += 1 };
  s2 -> s1 [77, 65535] { R2890 += 1, R2734 += 1, R1901 += 1, R1903 += 1 };
  s3 -> s1 [0, 75] { R2890 += 1, R2734 += 1, R1901 += 1, R1903 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R2890 += 1, R2734 += 1, R1900 += 1, R1901 += 1 };
  s3 -> s3 [0, 65535] { R2890 += 1, R2733 += 1, R2734 += 1 };
  s3 -> s4 [0, 65535] { R2890 += 1, R2734 += 1, R1901 += 1, R1903 += 1, R1904 += 1 };
  s3 -> s5 [0, 65535] { R2890 += 1, R2734 += 1, R1901 += 1, R1902 += 1, R1903 += 1 };
  s3 -> s1 [77, 65535] { R2890 += 1, R2734 += 1, R1901 += 1, R1903 += 1 };
  s4 -> s1 [0, 75] { R2890 += 1, R2734 += 1, R1901 += 1, R1903 += 1 };
  s4 -> s9 [0, 65535] { R2890 += 1, R2734 += 1, R1901 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2890 += 1, R2734 += 1, R1901 += 1, R1903 += 1, R1904 += 1 };
  s4 -> s7 [0, 65535] { R2890 += 1 };
  s4 -> s8 [0, 65535] { R2890 += 1, R2734 += 1 };
  s4 -> s1 [77, 65535] { R2890 += 1, R2734 += 1, R1901 += 1, R1903 += 1 };
  s5 -> s1 [0, 75] { R2890 += 1, R2734 += 1, R1901 += 1, R1903 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s4 [0, 65535] { R2890 += 1, R2734 += 1, R1901 += 1, R1903 += 1, R1904 += 1 };
  s5 -> s7 [0, 65535] { R2890 += 1 };
  s5 -> s8 [0, 65535] { R2890 += 1, R2734 += 1 };
  s5 -> s5 [0, 65535] { R2890 += 1, R2734 += 1, R1901 += 1, R1902 += 1, R1903 += 1 };
  s5 -> s1 [77, 65535] { R2890 += 1, R2734 += 1, R1901 += 1, R1903 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2890 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R2890 += 1 };
  s8 -> s8 [0, 65535] { R2890 += 1, R2734 += 1 };
  s9 -> s9 [0, 65535] { R2890 += 1, R2734 += 1, R1901 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s7 [0, 65535] { R2890 += 1 };
  s9 -> s8 [0, 65535] { R2890 += 1, R2734 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 75] { R2892 += 1, R2736 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s0 -> s0 [0, 65535] { R2891 += 1, R2892 += 1 };
  s0 -> s2 [0, 65535] { R2892 += 1, R2736 += 1, R1911 += 1, R1912 += 1 };
  s0 -> s3 [0, 65535] { R2892 += 1, R2736 += 1, R1912 += 1, R1913 += 1, R1914 += 1 };
  s0 -> s4 [0, 65535] { R2892 += 1, R2735 += 1, R2736 += 1 };
  s0 -> s5 [0, 65535] { R2892 += 1, R2736 += 1, R1912 += 1, R1914 += 1, R1915 += 1, R1916 += 1 };
  s0 -> s1 [77, 65535] { R2892 += 1, R2736 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s1 -> s1 [0, 75] { R2892 += 1, R2736 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R2892 += 1, R2736 += 1, R1912 += 1 };
  s1 -> s1 [0, 65535] { R2892 += 1, R2736 += 1, R1912 += 1, R1914 += 1 };
  s1 -> s8 [0, 65535] { R2892 += 1 };
  s1 -> s9 [0, 65535] { R2892 += 1, R2736 += 1 };
  s1 -> s1 [77, 65535] { R2892 += 1, R2736 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s2 -> s1 [0, 75] { R2892 += 1, R2736 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R2892 += 1, R2736 += 1, R1911 += 1, R1912 += 1 };
  s2 -> s8 [0, 65535] { R2892 += 1 };
  s2 -> s3 [0, 65535] { R2892 += 1, R2736 += 1, R1912 += 1, R1913 += 1, R1914 += 1 };
  s2 -> s5 [0, 65535] { R2892 += 1, R2736 += 1, R1912 += 1, R1914 += 1, R1915 += 1, R1916 += 1 };
  s2 -> s1 [77, 65535] { R2892 += 1, R2736 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s3 -> s1 [0, 75] { R2892 += 1, R2736 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s8 [0, 65535] { R2892 += 1 };
  s3 -> s9 [0, 65535] { R2892 += 1, R2736 += 1 };
  s3 -> s3 [0, 65535] { R2892 += 1, R2736 += 1, R1912 += 1, R1913 += 1, R1914 += 1 };
  s3 -> s5 [0, 65535] { R2892 += 1, R2736 += 1, R1912 += 1, R1914 += 1, R1915 += 1, R1916 += 1 };
  s3 -> s1 [77, 65535] { R2892 += 1, R2736 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s4 -> s1 [0, 75] { R2892 += 1, R2736 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s2 [0, 65535] { R2892 += 1, R2736 += 1, R1911 += 1, R1912 += 1 };
  s4 -> s3 [0, 65535] { R2892 += 1, R2736 += 1, R1912 += 1, R1913 += 1, R1914 += 1 };
  s4 -> s4 [0, 65535] { R2892 += 1, R2735 += 1, R2736 += 1 };
  s4 -> s5 [0, 65535] { R2892 += 1, R2736 += 1, R1912 += 1, R1914 += 1, R1915 += 1, R1916 += 1 };
  s4 -> s1 [77, 65535] { R2892 += 1, R2736 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s5 -> s1 [0, 75] { R2892 += 1, R2736 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R2892 += 1, R2736 += 1, R1912 += 1 };
  s5 -> s8 [0, 65535] { R2892 += 1 };
  s5 -> s9 [0, 65535] { R2892 += 1, R2736 += 1 };
  s5 -> s5 [0, 65535] { R2892 += 1, R2736 += 1, R1912 += 1, R1914 += 1, R1915 += 1, R1916 += 1 };
  s5 -> s1 [77, 65535] { R2892 += 1, R2736 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2892 += 1, R2736 += 1, R1912 += 1 };
  s7 -> s8 [0, 65535] { R2892 += 1 };
  s7 -> s9 [0, 65535] { R2892 += 1, R2736 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R2892 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s8 [0, 65535] { R2892 += 1 };
  s9 -> s9 [0, 65535] { R2892 += 1, R2736 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 65535] { R2894 += 1, R2738 += 1, R1925 += 1, R1927 += 1, R1929 += 1, R1930 += 1 };
  s0 -> s0 [0, 65535] { R2893 += 1, R2894 += 1 };
  s0 -> s2 [0, 65535] { R2894 += 1, R2738 += 1, R1925 += 1, R1927 += 1, R1928 += 1, R1929 += 1 };
  s0 -> s3 [0, 65535] { R2894 += 1, R2738 += 1, R1925 += 1, R1926 += 1, R1927 += 1 };
  s0 -> s4 [0, 65535] { R2894 += 1, R2738 += 1, R1924 += 1, R1925 += 1 };
  s0 -> s5 [0, 65535] { R2894 += 1, R2737 += 1, R2738 += 1 };
  s1 -> s1 [0, 65535] { R2894 += 1, R2738 += 1, R1925 += 1, R1927 += 1, R1929 += 1, R1930 += 1 };
  s1 -> s9 [0, 65535] { R2894 += 1, R2738 += 1, R1925 += 1 };
  s1 -> s8 [0, 65535] { R2894 += 1, R2738 += 1 };
  s1 -> s10 [0, 65535] { R2894 += 1, R2738 += 1, R1925 += 1, R1927 += 1 };
  s1 -> s7 [0, 65535] { R2894 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s1 [0, 65535] { R2894 += 1, R2738 += 1, R1925 += 1, R1927 += 1, R1929 += 1, R1930 += 1 };
  s2 -> s9 [0, 65535] { R2894 += 1, R2738 += 1, R1925 += 1 };
  s2 -> s2 [0, 65535] { R2894 += 1, R2738 += 1, R1925 += 1, R1927 += 1, R1928 += 1, R1929 += 1 };
  s2 -> s8 [0, 65535] { R2894 += 1, R2738 += 1 };
  s2 -> s7 [0, 65535] { R2894 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s1 [0, 65535] { R2894 += 1, R2738 += 1, R1925 += 1, R1927 += 1, R1929 += 1, R1930 += 1 };
  s3 -> s2 [0, 65535] { R2894 += 1, R2738 += 1, R1925 += 1, R1927 += 1, R1928 += 1, R1929 += 1 };
  s3 -> s8 [0, 65535] { R2894 += 1, R2738 += 1 };
  s3 -> s3 [0, 65535] { R2894 += 1, R2738 += 1, R1925 += 1, R1926 += 1, R1927 += 1 };
  s3 -> s7 [0, 65535] { R2894 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s1 [0, 65535] { R2894 += 1, R2738 += 1, R1925 += 1, R1927 += 1, R1929 += 1, R1930 += 1 };
  s4 -> s2 [0, 65535] { R2894 += 1, R2738 += 1, R1925 += 1, R1927 += 1, R1928 += 1, R1929 += 1 };
  s4 -> s3 [0, 65535] { R2894 += 1, R2738 += 1, R1925 += 1, R1926 += 1, R1927 += 1 };
  s4 -> s4 [0, 65535] { R2894 += 1, R2738 += 1, R1924 += 1, R1925 += 1 };
  s4 -> s7 [0, 65535] { R2894 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s1 [0, 65535] { R2894 += 1, R2738 += 1, R1925 += 1, R1927 += 1, R1929 += 1, R1930 += 1 };
  s5 -> s2 [0, 65535] { R2894 += 1, R2738 += 1, R1925 += 1, R1927 += 1, R1928 += 1, R1929 += 1 };
  s5 -> s3 [0, 65535] { R2894 += 1, R2738 += 1, R1925 += 1, R1926 += 1, R1927 += 1 };
  s5 -> s4 [0, 65535] { R2894 += 1, R2738 += 1, R1924 += 1, R1925 += 1 };
  s5 -> s5 [0, 65535] { R2894 += 1, R2737 += 1, R2738 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2894 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R2894 += 1, R2738 += 1 };
  s8 -> s7 [0, 65535] { R2894 += 1 };
  s8 -> s6 [0, 65535];
  s9 -> s9 [0, 65535] { R2894 += 1, R2738 += 1, R1925 += 1 };
  s9 -> s8 [0, 65535] { R2894 += 1, R2738 += 1 };
  s9 -> s7 [0, 65535] { R2894 += 1 };
  s9 -> s6 [0, 65535];
  s10 -> s9 [0, 65535] { R2894 += 1, R2738 += 1, R1925 += 1 };
  s10 -> s8 [0, 65535] { R2894 += 1, R2738 += 1 };
  s10 -> s10 [0, 65535] { R2894 += 1, R2738 += 1, R1925 += 1, R1927 += 1 };
  s10 -> s7 [0, 65535] { R2894 += 1 };
  s10 -> s6 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R2896 += 1, R2740 += 1, R1938 += 1, R1939 += 1, R1940 += 1 };
  s0 -> s2 [0, 65535] { R2896 += 1, R2740 += 1, R1938 += 1, R1940 += 1 };
  s0 -> s3 [0, 65535] { R2896 += 1, R2740 += 1, R1937 += 1, R1938 += 1 };
  s0 -> s0 [0, 65535] { R2895 += 1, R2896 += 1 };
  s0 -> s4 [0, 65535] { R2896 += 1, R2739 += 1, R2740 += 1 };
  s0 -> s5 [0, 65535] { R2896 += 1, R2740 += 1, R1938 += 1, R1940 += 1, R1942 += 1 };
  s1 -> s1 [0, 65535] { R2896 += 1, R2740 += 1, R1938 += 1, R1939 += 1, R1940 += 1 };
  s1 -> s2 [0, 65535] { R2896 += 1, R2740 += 1, R1938 += 1, R1940 += 1 };
  s1 -> s6 [0, 65535] { R2896 += 1, R2740 += 1 };
  s1 -> s5 [0, 65535] { R2896 += 1, R2740 += 1, R1938 += 1, R1940 += 1, R1942 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s9 [0, 65535] { R2896 += 1 };
  s2 -> s2 [0, 65535] { R2896 += 1, R2740 += 1, R1938 += 1, R1940 += 1 };
  s2 -> s6 [0, 65535] { R2896 += 1, R2740 += 1 };
  s2 -> s7 [0, 65535] { R2896 += 1, R2740 += 1, R1938 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s9 [0, 65535] { R2896 += 1 };
  s3 -> s1 [0, 65535] { R2896 += 1, R2740 += 1, R1938 += 1, R1939 += 1, R1940 += 1 };
  s3 -> s2 [0, 65535] { R2896 += 1, R2740 += 1, R1938 += 1, R1940 += 1 };
  s3 -> s3 [0, 65535] { R2896 += 1, R2740 += 1, R1937 += 1, R1938 += 1 };
  s3 -> s5 [0, 65535] { R2896 += 1, R2740 += 1, R1938 += 1, R1940 += 1, R1942 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s9 [0, 65535] { R2896 += 1 };
  s4 -> s1 [0, 65535] { R2896 += 1, R2740 += 1, R1938 += 1, R1939 += 1, R1940 += 1 };
  s4 -> s2 [0, 65535] { R2896 += 1, R2740 += 1, R1938 += 1, R1940 += 1 };
  s4 -> s3 [0, 65535] { R2896 += 1, R2740 += 1, R1937 += 1, R1938 += 1 };
  s4 -> s4 [0, 65535] { R2896 += 1, R2739 += 1, R2740 += 1 };
  s4 -> s5 [0, 65535] { R2896 += 1, R2740 += 1, R1938 += 1, R1940 += 1, R1942 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s2 [0, 65535] { R2896 += 1, R2740 += 1, R1938 += 1, R1940 += 1 };
  s5 -> s6 [0, 65535] { R2896 += 1, R2740 += 1 };
  s5 -> s7 [0, 65535] { R2896 += 1, R2740 += 1, R1938 += 1 };
  s5 -> s5 [0, 65535] { R2896 += 1, R2740 += 1, R1938 += 1, R1940 += 1, R1942 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s9 [0, 65535] { R2896 += 1 };
  s6 -> s6 [0, 65535] { R2896 += 1, R2740 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [0, 65535] { R2896 += 1 };
  s7 -> s6 [0, 65535] { R2896 += 1, R2740 += 1 };
  s7 -> s7 [0, 65535] { R2896 += 1, R2740 += 1, R1938 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R2896 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R2896 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 65535] { R2898 += 1, R2742 += 1, R1951 += 1, R1952 += 1, R1953 += 1 };
  s0 -> s2 [0, 65535] { R2898 += 1, R2742 += 1, R1951 += 1, R1953 += 1, R1955 += 1, R1956 += 1 };
  s0 -> s3 [0, 65535] { R2898 += 1, R2741 += 1, R2742 += 1 };
  s0 -> s4 [0, 65535] { R2898 += 1, R2742 += 1, R1950 += 1, R1951 += 1 };
  s0 -> s0 [0, 65535] { R2897 += 1, R2898 += 1 };
  s0 -> s5 [0, 65535] { R2898 += 1, R2742 += 1, R1951 += 1, R1953 += 1, R1954 += 1, R1955 += 1 };
  s1 -> s1 [0, 65535] { R2898 += 1, R2742 += 1, R1951 += 1, R1952 += 1, R1953 += 1 };
  s1 -> s6 [0, 65535] { R2898 += 1, R2742 += 1 };
  s1 -> s2 [0, 65535] { R2898 += 1, R2742 += 1, R1951 += 1, R1953 += 1, R1955 += 1, R1956 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s9 [0, 65535] { R2898 += 1 };
  s1 -> s5 [0, 65535] { R2898 += 1, R2742 += 1, R1951 += 1, R1953 += 1, R1954 += 1, R1955 += 1 };
  s2 -> s6 [0, 65535] { R2898 += 1, R2742 += 1 };
  s2 -> s2 [0, 65535] { R2898 += 1, R2742 += 1, R1951 += 1, R1953 += 1, R1955 += 1, R1956 += 1 };
  s2 -> s7 [0, 65535] { R2898 += 1, R2742 += 1, R1951 += 1 };
  s2 -> s10 [0, 65535] { R2898 += 1, R2742 += 1, R1951 += 1, R1953 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s9 [0, 65535] { R2898 += 1 };
  s3 -> s1 [0, 65535] { R2898 += 1, R2742 += 1, R1951 += 1, R1952 += 1, R1953 += 1 };
  s3 -> s2 [0, 65535] { R2898 += 1, R2742 += 1, R1951 += 1, R1953 += 1, R1955 += 1, R1956 += 1 };
  s3 -> s3 [0, 65535] { R2898 += 1, R2741 += 1, R2742 += 1 };
  s3 -> s4 [0, 65535] { R2898 += 1, R2742 += 1, R1950 += 1, R1951 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s5 [0, 65535] { R2898 += 1, R2742 += 1, R1951 += 1, R1953 += 1, R1954 += 1, R1955 += 1 };
  s4 -> s1 [0, 65535] { R2898 += 1, R2742 += 1, R1951 += 1, R1952 += 1, R1953 += 1 };
  s4 -> s2 [0, 65535] { R2898 += 1, R2742 += 1, R1951 += 1, R1953 += 1, R1955 += 1, R1956 += 1 };
  s4 -> s4 [0, 65535] { R2898 += 1, R2742 += 1, R1950 += 1, R1951 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s9 [0, 65535] { R2898 += 1 };
  s4 -> s5 [0, 65535] { R2898 += 1, R2742 += 1, R1951 += 1, R1953 += 1, R1954 += 1, R1955 += 1 };
  s5 -> s6 [0, 65535] { R2898 += 1, R2742 += 1 };
  s5 -> s2 [0, 65535] { R2898 += 1, R2742 += 1, R1951 += 1, R1953 += 1, R1955 += 1, R1956 += 1 };
  s5 -> s7 [0, 65535] { R2898 += 1, R2742 += 1, R1951 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s9 [0, 65535] { R2898 += 1 };
  s5 -> s5 [0, 65535] { R2898 += 1, R2742 += 1, R1951 += 1, R1953 += 1, R1954 += 1, R1955 += 1 };
  s6 -> s6 [0, 65535] { R2898 += 1, R2742 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [0, 65535] { R2898 += 1 };
  s7 -> s6 [0, 65535] { R2898 += 1, R2742 += 1 };
  s7 -> s7 [0, 65535] { R2898 += 1, R2742 += 1, R1951 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R2898 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R2898 += 1 };
  s10 -> s6 [0, 65535] { R2898 += 1, R2742 += 1 };
  s10 -> s7 [0, 65535] { R2898 += 1, R2742 += 1, R1951 += 1 };
  s10 -> s10 [0, 65535] { R2898 += 1, R2742 += 1, R1951 += 1, R1953 += 1 };
  s10 -> s8 [0, 65535];
  s10 -> s9 [0, 65535] { R2898 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 75] { R2900 += 1, R2744 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s0 -> s2 [0, 65535] { R2900 += 1, R2743 += 1, R2744 += 1 };
  s0 -> s3 [0, 65535] { R2900 += 1, R2744 += 1, R1964 += 1, R1965 += 1, R1966 += 1 };
  s0 -> s4 [0, 65535] { R2900 += 1, R2744 += 1, R1964 += 1, R1966 += 1, R1967 += 1, R1968 += 1 };
  s0 -> s5 [0, 65535] { R2900 += 1, R2744 += 1, R1963 += 1, R1964 += 1 };
  s0 -> s0 [0, 65535] { R2899 += 1, R2900 += 1 };
  s0 -> s6 [76, 76] { R2900 += 1, R2744 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s0 -> s7 [76, 76] { R2900 += 1, R2744 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s0 -> s1 [78, 65535] { R2900 += 1, R2744 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s1 -> s1 [0, 75] { R2900 += 1, R2744 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s1 -> s1 [0, 65535] { R2900 += 1, R2744 += 1, R1964 += 1, R1966 += 1 };
  s1 -> s8 [0, 65535] { R2900 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s10 [0, 65535] { R2900 += 1, R2744 += 1 };
  s1 -> s11 [0, 65535] { R2900 += 1, R2744 += 1, R1964 += 1 };
  s1 -> s6 [76, 76] { R2900 += 1, R2744 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s1 -> s7 [76, 76] { R2900 += 1, R2744 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s1 -> s1 [78, 65535] { R2900 += 1, R2744 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s2 -> s1 [0, 75] { R2900 += 1, R2744 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s2 -> s2 [0, 65535] { R2900 += 1, R2743 += 1, R2744 += 1 };
  s2 -> s3 [0, 65535] { R2900 += 1, R2744 += 1, R1964 += 1, R1965 += 1, R1966 += 1 };
  s2 -> s4 [0, 65535] { R2900 += 1, R2744 += 1, R1964 += 1, R1966 += 1, R1967 += 1, R1968 += 1 };
  s2 -> s9 [0, 65535];
  s2 -> s5 [0, 65535] { R2900 += 1, R2744 += 1, R1963 += 1, R1964 += 1 };
  s2 -> s6 [76, 76] { R2900 += 1, R2744 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s2 -> s7 [76, 76] { R2900 += 1, R2744 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s2 -> s1 [78, 65535] { R2900 += 1, R2744 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s3 -> s1 [0, 75] { R2900 += 1, R2744 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s3 -> s3 [0, 65535] { R2900 += 1, R2744 += 1, R1964 += 1, R1965 += 1, R1966 += 1 };
  s3 -> s4 [0, 65535] { R2900 += 1, R2744 += 1, R1964 += 1, R1966 += 1, R1967 += 1, R1968 += 1 };
  s3 -> s8 [0, 65535] { R2900 += 1 };
  s3 -> s9 [0, 65535];
  s3 -> s10 [0, 65535] { R2900 += 1, R2744 += 1 };
  s3 -> s6 [76, 76] { R2900 += 1, R2744 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s3 -> s7 [76, 76] { R2900 += 1, R2744 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s3 -> s1 [78, 65535] { R2900 += 1, R2744 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s4 -> s1 [0, 75] { R2900 += 1, R2744 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s4 -> s4 [0, 65535] { R2900 += 1, R2744 += 1, R1964 += 1, R1966 += 1, R1967 += 1, R1968 += 1 };
  s4 -> s8 [0, 65535] { R2900 += 1 };
  s4 -> s9 [0, 65535];
  s4 -> s10 [0, 65535] { R2900 += 1, R2744 += 1 };
  s4 -> s11 [0, 65535] { R2900 += 1, R2744 += 1, R1964 += 1 };
  s4 -> s6 [76, 76] { R2900 += 1, R2744 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s4 -> s7 [76, 76] { R2900 += 1, R2744 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s4 -> s1 [78, 65535] { R2900 += 1, R2744 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s5 -> s1 [0, 75] { R2900 += 1, R2744 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s5 -> s3 [0, 65535] { R2900 += 1, R2744 += 1, R1964 += 1, R1965 += 1, R1966 += 1 };
  s5 -> s8 [0, 65535] { R2900 += 1 };
  s5 -> s4 [0, 65535] { R2900 += 1, R2744 += 1, R1964 += 1, R1966 += 1, R1967 += 1, R1968 += 1 };
  s5 -> s9 [0, 65535];
  s5 -> s5 [0, 65535] { R2900 += 1, R2744 += 1, R1963 += 1, R1964 += 1 };
  s5 -> s6 [76, 76] { R2900 += 1, R2744 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s5 -> s7 [76, 76] { R2900 += 1, R2744 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s5 -> s1 [78, 65535] { R2900 += 1, R2744 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s6 -> s6 [0, 76] { R2900 += 1, R2744 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s6 -> s6 [0, 65535] { R2900 += 1, R2744 += 1, R1964 += 1, R1966 += 1 };
  s6 -> s8 [0, 65535] { R2900 += 1 };
  s6 -> s9 [0, 65535];
  s6 -> s10 [0, 65535] { R2900 += 1, R2744 += 1 };
  s6 -> s11 [0, 65535] { R2900 += 1, R2744 += 1, R1964 += 1 };
  s6 -> s6 [78, 65535] { R2900 += 1, R2744 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s7 -> s7 [0, 65535] { R2900 += 1, R2744 += 1, R1964 += 1, R1966 += 1 };
  s7 -> s8 [0, 65535] { R2900 += 1 };
  s7 -> s9 [0, 65535];
  s7 -> s10 [0, 65535] { R2900 += 1, R2744 += 1 };
  s7 -> s11 [0, 65535] { R2900 += 1, R2744 += 1, R1964 += 1 };
  s8 -> s8 [0, 65535] { R2900 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  s10 -> s8 [0, 65535] { R2900 += 1 };
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R2900 += 1, R2744 += 1 };
  s11 -> s8 [0, 65535] { R2900 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s10 [0, 65535] { R2900 += 1, R2744 += 1 };
  s11 -> s11 [0, 65535] { R2900 += 1, R2744 += 1, R1964 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10, s11;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 65535] { R2902 += 1, R2746 += 1, R1975 += 1, R1976 += 1, R1977 += 1 };
  s0 -> s2 [0, 65535] { R2902 += 1, R2746 += 1, R1974 += 1, R1975 += 1 };
  s0 -> s0 [0, 65535] { R2901 += 1, R2902 += 1 };
  s0 -> s3 [0, 65535] { R2902 += 1, R2746 += 1, R1975 += 1, R1977 += 1, R1978 += 1 };
  s0 -> s4 [0, 65535] { R2902 += 1, R2745 += 1, R2746 += 1 };
  s1 -> s6 [0, 65535] { R2902 += 1, R2746 += 1 };
  s1 -> s7 [0, 65535] { R2902 += 1 };
  s1 -> s1 [0, 65535] { R2902 += 1, R2746 += 1, R1975 += 1, R1976 += 1, R1977 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R2902 += 1, R2746 += 1, R1975 += 1, R1977 += 1, R1978 += 1 };
  s2 -> s1 [0, 65535] { R2902 += 1, R2746 += 1, R1975 += 1, R1976 += 1, R1977 += 1 };
  s2 -> s7 [0, 65535] { R2902 += 1 };
  s2 -> s2 [0, 65535] { R2902 += 1, R2746 += 1, R1974 += 1, R1975 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R2902 += 1, R2746 += 1, R1975 += 1, R1977 += 1, R1978 += 1 };
  s3 -> s6 [0, 65535] { R2902 += 1, R2746 += 1 };
  s3 -> s7 [0, 65535] { R2902 += 1 };
  s3 -> s8 [0, 65535] { R2902 += 1, R2746 += 1, R1975 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2902 += 1, R2746 += 1, R1975 += 1, R1977 += 1, R1978 += 1 };
  s4 -> s1 [0, 65535] { R2902 += 1, R2746 += 1, R1975 += 1, R1976 += 1, R1977 += 1 };
  s4 -> s2 [0, 65535] { R2902 += 1, R2746 += 1, R1974 += 1, R1975 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R2902 += 1, R2746 += 1, R1975 += 1, R1977 += 1, R1978 += 1 };
  s4 -> s4 [0, 65535] { R2902 += 1, R2745 += 1, R2746 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2902 += 1, R2746 += 1 };
  s6 -> s7 [0, 65535] { R2902 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R2902 += 1 };
  s7 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R2902 += 1, R2746 += 1 };
  s8 -> s7 [0, 65535] { R2902 += 1 };
  s8 -> s8 [0, 65535] { R2902 += 1, R2746 += 1, R1975 += 1 };
  s8 -> s5 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R2904 += 1, R2748 += 1, R1984 += 1, R1986 += 1 };
  s0 -> s2 [0, 65535] { R2904 += 1, R2747 += 1, R2748 += 1 };
  s0 -> s3 [0, 65535] { R2904 += 1, R2748 += 1, R1983 += 1, R1984 += 1 };
  s0 -> s4 [0, 65535] { R2904 += 1, R2748 += 1, R1984 += 1, R1985 += 1, R1986 += 1 };
  s0 -> s0 [0, 65535] { R2903 += 1, R2904 += 1 };
  s0 -> s5 [70, 70] { R2904 += 1, R2748 += 1, R1984 += 1, R1986 += 1 };
  s0 -> s6 [76, 76] { R2904 += 1, R2748 += 1, R1984 += 1, R1986 += 1 };
  s0 -> s1 [77, 65535] { R2904 += 1, R2748 += 1, R1984 += 1, R1986 += 1 };
  s1 -> s1 [0, 69] { R2904 += 1, R2748 += 1, R1984 += 1, R1986 += 1 };
  s1 -> s5 [70, 70] { R2904 += 1, R2748 += 1, R1984 += 1, R1986 += 1 };
  s1 -> s6 [76, 76] { R2904 += 1, R2748 += 1, R1984 += 1, R1986 += 1 };
  s1 -> s1 [77, 65535] { R2904 += 1, R2748 += 1, R1984 += 1, R1986 += 1 };
  s2 -> s1 [0, 69] { R2904 += 1, R2748 += 1, R1984 += 1, R1986 += 1 };
  s2 -> s2 [0, 65535] { R2904 += 1, R2747 += 1, R2748 += 1 };
  s2 -> s3 [0, 65535] { R2904 += 1, R2748 += 1, R1983 += 1, R1984 += 1 };
  s2 -> s4 [0, 65535] { R2904 += 1, R2748 += 1, R1984 += 1, R1985 += 1, R1986 += 1 };
  s2 -> s5 [70, 70] { R2904 += 1, R2748 += 1, R1984 += 1, R1986 += 1 };
  s2 -> s6 [76, 76] { R2904 += 1, R2748 += 1, R1984 += 1, R1986 += 1 };
  s2 -> s1 [77, 65535] { R2904 += 1, R2748 += 1, R1984 += 1, R1986 += 1 };
  s3 -> s1 [0, 69] { R2904 += 1, R2748 += 1, R1984 += 1, R1986 += 1 };
  s3 -> s3 [0, 65535] { R2904 += 1, R2748 += 1, R1983 += 1, R1984 += 1 };
  s3 -> s4 [0, 65535] { R2904 += 1, R2748 += 1, R1984 += 1, R1985 += 1, R1986 += 1 };
  s3 -> s5 [70, 70] { R2904 += 1, R2748 += 1, R1984 += 1, R1986 += 1 };
  s3 -> s6 [76, 76] { R2904 += 1, R2748 += 1, R1984 += 1, R1986 += 1 };
  s3 -> s1 [77, 65535] { R2904 += 1, R2748 += 1, R1984 += 1, R1986 += 1 };
  s4 -> s1 [0, 69] { R2904 += 1, R2748 += 1, R1984 += 1, R1986 += 1 };
  s4 -> s4 [0, 65535] { R2904 += 1, R2748 += 1, R1984 += 1, R1985 += 1, R1986 += 1 };
  s4 -> s5 [70, 70] { R2904 += 1, R2748 += 1, R1984 += 1, R1986 += 1 };
  s4 -> s6 [76, 76] { R2904 += 1, R2748 += 1, R1984 += 1, R1986 += 1 };
  s4 -> s1 [77, 65535] { R2904 += 1, R2748 += 1, R1984 += 1, R1986 += 1 };
  s5 -> s5 [0, 70] { R2904 += 1, R2748 += 1, R1984 += 1, R1986 += 1 };
  s5 -> s10 [76, 76] { R2904 += 1, R2748 += 1, R1984 += 1, R1986 += 1 };
  s5 -> s5 [77, 65535] { R2904 += 1, R2748 += 1, R1984 += 1, R1986 += 1 };
  s6 -> s6 [0, 69] { R2904 += 1, R2748 += 1, R1984 += 1, R1986 += 1 };
  s6 -> s7 [0, 65535] { R2904 += 1, R2748 += 1 };
  s6 -> s6 [0, 65535] { R2904 += 1, R2748 += 1, R1984 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [0, 65535] { R2904 += 1 };
  s6 -> s10 [70, 70] { R2904 += 1, R2748 += 1, R1984 += 1, R1986 += 1 };
  s6 -> s11 [70, 70] { R2904 += 1, R2748 += 1, R1984 += 1, R1986 += 1 };
  s6 -> s6 [76, 65535] { R2904 += 1, R2748 += 1, R1984 += 1, R1986 += 1 };
  s7 -> s7 [0, 65535] { R2904 += 1, R2748 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R2904 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R2904 += 1 };
  s10 -> s10 [0, 70] { R2904 += 1, R2748 += 1, R1984 += 1, R1986 += 1 };
  s10 -> s10 [0, 65535] { R2904 += 1, R2748 += 1, R1984 += 1 };
  s10 -> s7 [0, 65535] { R2904 += 1, R2748 += 1 };
  s10 -> s8 [0, 65535];
  s10 -> s9 [0, 65535] { R2904 += 1 };
  s10 -> s10 [76, 65535] { R2904 += 1, R2748 += 1, R1984 += 1, R1986 += 1 };
  s11 -> s11 [0, 65535] { R2904 += 1, R2748 += 1, R1984 += 1 };
  s11 -> s7 [0, 65535] { R2904 += 1, R2748 += 1 };
  s11 -> s8 [0, 65535];
  s11 -> s9 [0, 65535] { R2904 += 1 };
  accepting s8, s9, s6, s7, s10, s11;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R2906 += 1, R2750 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s0 -> s2 [0, 65535] { R2906 += 1, R2750 += 1, R1992 += 1, R1993 += 1 };
  s0 -> s0 [0, 65535] { R2905 += 1, R2906 += 1 };
  s0 -> s3 [0, 65535] { R2906 += 1, R2749 += 1, R2750 += 1 };
  s0 -> s4 [0, 65535] { R2906 += 1, R2750 += 1, R1993 += 1, R1994 += 1, R1995 += 1 };
  s0 -> s5 [70, 70] { R2906 += 1, R2750 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s0 -> s6 [70, 70] { R2906 += 1, R2750 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s0 -> s1 [71, 65535] { R2906 += 1, R2750 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s1 -> s1 [0, 69] { R2906 += 1, R2750 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s8 [0, 65535] { R2906 += 1, R2750 += 1 };
  s1 -> s9 [0, 65535] { R2906 += 1 };
  s1 -> s1 [0, 65535] { R2906 += 1, R2750 += 1, R1993 += 1 };
  s1 -> s5 [70, 70] { R2906 += 1, R2750 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s1 -> s6 [70, 70] { R2906 += 1, R2750 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s1 -> s1 [71, 65535] { R2906 += 1, R2750 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s2 -> s1 [0, 69] { R2906 += 1, R2750 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s2 -> s2 [0, 65535] { R2906 += 1, R2750 += 1, R1992 += 1, R1993 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [0, 65535] { R2906 += 1, R2750 += 1, R1993 += 1, R1994 += 1, R1995 += 1 };
  s2 -> s9 [0, 65535] { R2906 += 1 };
  s2 -> s5 [70, 70] { R2906 += 1, R2750 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s2 -> s6 [70, 70] { R2906 += 1, R2750 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s2 -> s1 [71, 65535] { R2906 += 1, R2750 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s3 -> s1 [0, 69] { R2906 += 1, R2750 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s3 -> s2 [0, 65535] { R2906 += 1, R2750 += 1, R1992 += 1, R1993 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R2906 += 1, R2749 += 1, R2750 += 1 };
  s3 -> s4 [0, 65535] { R2906 += 1, R2750 += 1, R1993 += 1, R1994 += 1, R1995 += 1 };
  s3 -> s5 [70, 70] { R2906 += 1, R2750 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s3 -> s6 [70, 70] { R2906 += 1, R2750 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s3 -> s1 [71, 65535] { R2906 += 1, R2750 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s4 -> s1 [0, 69] { R2906 += 1, R2750 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R2906 += 1, R2750 += 1, R1993 += 1, R1994 += 1, R1995 += 1 };
  s4 -> s8 [0, 65535] { R2906 += 1, R2750 += 1 };
  s4 -> s9 [0, 65535] { R2906 += 1 };
  s4 -> s5 [70, 70] { R2906 += 1, R2750 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s4 -> s6 [70, 70] { R2906 += 1, R2750 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s4 -> s1 [71, 65535] { R2906 += 1, R2750 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s5 -> s5 [0, 65535] { R2906 += 1, R2750 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s10 [0, 65535] { R2906 += 1, R2750 += 1, R1993 += 1 };
  s5 -> s8 [0, 65535] { R2906 += 1, R2750 += 1 };
  s5 -> s9 [0, 65535] { R2906 += 1 };
  s6 -> s6 [0, 65535] { R2906 += 1, R2750 += 1, R1993 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R2906 += 1, R2750 += 1 };
  s6 -> s9 [0, 65535] { R2906 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R2906 += 1, R2750 += 1 };
  s8 -> s9 [0, 65535] { R2906 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s9 [0, 65535] { R2906 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s10 [0, 65535] { R2906 += 1, R2750 += 1, R1993 += 1 };
  s10 -> s8 [0, 65535] { R2906 += 1, R2750 += 1 };
  s10 -> s9 [0, 65535] { R2906 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R2908 += 1, R2752 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s0 -> s2 [0, 65535] { R2908 += 1, R2752 += 1, R2002 += 1, R2003 += 1 };
  s0 -> s3 [0, 65535] { R2908 += 1, R2751 += 1, R2752 += 1 };
  s0 -> s0 [0, 65535] { R2907 += 1, R2908 += 1 };
  s0 -> s4 [0, 65535] { R2908 += 1, R2752 += 1, R2003 += 1, R2004 += 1, R2005 += 1 };
  s0 -> s5 [70, 70] { R2908 += 1, R2752 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s0 -> s6 [70, 70] { R2908 += 1, R2752 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s0 -> s1 [71, 65535] { R2908 += 1, R2752 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s1 -> s1 [0, 69] { R2908 += 1, R2752 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s1 -> s7 [0, 65535] { R2908 += 1, R2752 += 1 };
  s1 -> s1 [0, 65535] { R2908 += 1, R2752 += 1, R2003 += 1 };
  s1 -> s8 [0, 65535] { R2908 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s5 [70, 70] { R2908 += 1, R2752 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s1 -> s6 [70, 70] { R2908 += 1, R2752 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s1 -> s1 [71, 65535] { R2908 += 1, R2752 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s2 -> s1 [0, 69] { R2908 += 1, R2752 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s2 -> s2 [0, 65535] { R2908 += 1, R2752 += 1, R2002 += 1, R2003 += 1 };
  s2 -> s8 [0, 65535] { R2908 += 1 };
  s2 -> s9 [0, 65535];
  s2 -> s4 [0, 65535] { R2908 += 1, R2752 += 1, R2003 += 1, R2004 += 1, R2005 += 1 };
  s2 -> s5 [70, 70] { R2908 += 1, R2752 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s2 -> s6 [70, 70] { R2908 += 1, R2752 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s2 -> s1 [71, 65535] { R2908 += 1, R2752 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s3 -> s1 [0, 69] { R2908 += 1, R2752 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s3 -> s2 [0, 65535] { R2908 += 1, R2752 += 1, R2002 += 1, R2003 += 1 };
  s3 -> s3 [0, 65535] { R2908 += 1, R2751 += 1, R2752 += 1 };
  s3 -> s9 [0, 65535];
  s3 -> s4 [0, 65535] { R2908 += 1, R2752 += 1, R2003 += 1, R2004 += 1, R2005 += 1 };
  s3 -> s5 [70, 70] { R2908 += 1, R2752 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s3 -> s6 [70, 70] { R2908 += 1, R2752 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s3 -> s1 [71, 65535] { R2908 += 1, R2752 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s4 -> s1 [0, 69] { R2908 += 1, R2752 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s4 -> s7 [0, 65535] { R2908 += 1, R2752 += 1 };
  s4 -> s8 [0, 65535] { R2908 += 1 };
  s4 -> s9 [0, 65535];
  s4 -> s4 [0, 65535] { R2908 += 1, R2752 += 1, R2003 += 1, R2004 += 1, R2005 += 1 };
  s4 -> s5 [70, 70] { R2908 += 1, R2752 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s4 -> s6 [70, 70] { R2908 += 1, R2752 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s4 -> s1 [71, 65535] { R2908 += 1, R2752 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s5 -> s7 [0, 65535] { R2908 += 1, R2752 += 1 };
  s5 -> s5 [0, 65535] { R2908 += 1, R2752 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s5 -> s10 [0, 65535] { R2908 += 1, R2752 += 1, R2003 += 1 };
  s5 -> s8 [0, 65535] { R2908 += 1 };
  s5 -> s9 [0, 65535];
  s6 -> s7 [0, 65535] { R2908 += 1, R2752 += 1 };
  s6 -> s8 [0, 65535] { R2908 += 1 };
  s6 -> s6 [0, 65535] { R2908 += 1, R2752 += 1, R2003 += 1 };
  s6 -> s9 [0, 65535];
  s7 -> s7 [0, 65535] { R2908 += 1, R2752 += 1 };
  s7 -> s8 [0, 65535] { R2908 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R2908 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  s10 -> s7 [0, 65535] { R2908 += 1, R2752 += 1 };
  s10 -> s10 [0, 65535] { R2908 += 1, R2752 += 1, R2003 += 1 };
  s10 -> s8 [0, 65535] { R2908 += 1 };
  s10 -> s9 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R2910 += 1, R2754 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s0 -> s0 [0, 65535] { R2909 += 1, R2910 += 1 };
  s0 -> s2 [0, 65535] { R2910 += 1, R2754 += 1, R2014 += 1, R2015 += 1, R2016 += 1 };
  s0 -> s3 [0, 65535] { R2910 += 1, R2754 += 1, R2013 += 1, R2014 += 1 };
  s0 -> s4 [0, 65535] { R2910 += 1, R2753 += 1, R2754 += 1 };
  s0 -> s5 [70, 70] { R2910 += 1, R2754 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s0 -> s6 [70, 70] { R2910 += 1, R2754 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s0 -> s1 [71, 65535] { R2910 += 1, R2754 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s1 -> s1 [0, 69] { R2910 += 1, R2754 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s1 -> s7 [0, 65535] { R2910 += 1, R2754 += 1 };
  s1 -> s8 [0, 65535] { R2910 += 1 };
  s1 -> s1 [0, 65535] { R2910 += 1, R2754 += 1, R2014 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s5 [70, 70] { R2910 += 1, R2754 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s1 -> s6 [70, 70] { R2910 += 1, R2754 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s1 -> s1 [71, 65535] { R2910 += 1, R2754 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s2 -> s1 [0, 69] { R2910 += 1, R2754 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s2 -> s2 [0, 65535] { R2910 += 1, R2754 += 1, R2014 += 1, R2015 += 1, R2016 += 1 };
  s2 -> s7 [0, 65535] { R2910 += 1, R2754 += 1 };
  s2 -> s8 [0, 65535] { R2910 += 1 };
  s2 -> s9 [0, 65535];
  s2 -> s5 [70, 70] { R2910 += 1, R2754 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s2 -> s6 [70, 70] { R2910 += 1, R2754 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s2 -> s1 [71, 65535] { R2910 += 1, R2754 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s3 -> s1 [0, 69] { R2910 += 1, R2754 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s3 -> s2 [0, 65535] { R2910 += 1, R2754 += 1, R2014 += 1, R2015 += 1, R2016 += 1 };
  s3 -> s3 [0, 65535] { R2910 += 1, R2754 += 1, R2013 += 1, R2014 += 1 };
  s3 -> s8 [0, 65535] { R2910 += 1 };
  s3 -> s9 [0, 65535];
  s3 -> s5 [70, 70] { R2910 += 1, R2754 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s3 -> s6 [70, 70] { R2910 += 1, R2754 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s3 -> s1 [71, 65535] { R2910 += 1, R2754 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s4 -> s1 [0, 69] { R2910 += 1, R2754 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s4 -> s2 [0, 65535] { R2910 += 1, R2754 += 1, R2014 += 1, R2015 += 1, R2016 += 1 };
  s4 -> s3 [0, 65535] { R2910 += 1, R2754 += 1, R2013 += 1, R2014 += 1 };
  s4 -> s4 [0, 65535] { R2910 += 1, R2753 += 1, R2754 += 1 };
  s4 -> s9 [0, 65535];
  s4 -> s5 [70, 70] { R2910 += 1, R2754 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s4 -> s6 [70, 70] { R2910 += 1, R2754 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s4 -> s1 [71, 65535] { R2910 += 1, R2754 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s5 -> s5 [0, 65535] { R2910 += 1, R2754 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s5 -> s7 [0, 65535] { R2910 += 1, R2754 += 1 };
  s5 -> s8 [0, 65535] { R2910 += 1 };
  s5 -> s10 [0, 65535] { R2910 += 1, R2754 += 1, R2014 += 1 };
  s5 -> s9 [0, 65535];
  s6 -> s7 [0, 65535] { R2910 += 1, R2754 += 1 };
  s6 -> s6 [0, 65535] { R2910 += 1, R2754 += 1, R2014 += 1 };
  s6 -> s8 [0, 65535] { R2910 += 1 };
  s6 -> s9 [0, 65535];
  s7 -> s7 [0, 65535] { R2910 += 1, R2754 += 1 };
  s7 -> s8 [0, 65535] { R2910 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R2910 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  s10 -> s7 [0, 65535] { R2910 += 1, R2754 += 1 };
  s10 -> s8 [0, 65535] { R2910 += 1 };
  s10 -> s10 [0, 65535] { R2910 += 1, R2754 += 1, R2014 += 1 };
  s10 -> s9 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R2912 += 1, R2756 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s0 -> s2 [0, 65535] { R2912 += 1, R2755 += 1, R2756 += 1 };
  s0 -> s3 [0, 65535] { R2912 += 1, R2756 += 1, R2027 += 1, R2028 += 1, R2029 += 1 };
  s0 -> s0 [0, 65535] { R2911 += 1, R2912 += 1 };
  s0 -> s4 [0, 65535] { R2912 += 1, R2756 += 1, R2026 += 1, R2027 += 1 };
  s0 -> s5 [70, 70] { R2912 += 1, R2756 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s0 -> s6 [70, 70] { R2912 += 1, R2756 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s0 -> s1 [71, 65535] { R2912 += 1, R2756 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s1 -> s1 [0, 69] { R2912 += 1, R2756 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s1 -> s1 [0, 65535] { R2912 += 1, R2756 += 1, R2027 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s8 [0, 65535] { R2912 += 1, R2756 += 1 };
  s1 -> s9 [0, 65535] { R2912 += 1 };
  s1 -> s5 [70, 70] { R2912 += 1, R2756 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s1 -> s6 [70, 70] { R2912 += 1, R2756 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s1 -> s1 [71, 65535] { R2912 += 1, R2756 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s2 -> s1 [0, 69] { R2912 += 1, R2756 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s2 -> s2 [0, 65535] { R2912 += 1, R2755 += 1, R2756 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s3 [0, 65535] { R2912 += 1, R2756 += 1, R2027 += 1, R2028 += 1, R2029 += 1 };
  s2 -> s4 [0, 65535] { R2912 += 1, R2756 += 1, R2026 += 1, R2027 += 1 };
  s2 -> s5 [70, 70] { R2912 += 1, R2756 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s2 -> s6 [70, 70] { R2912 += 1, R2756 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s2 -> s1 [71, 65535] { R2912 += 1, R2756 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s3 -> s1 [0, 69] { R2912 += 1, R2756 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s8 [0, 65535] { R2912 += 1, R2756 += 1 };
  s3 -> s9 [0, 65535] { R2912 += 1 };
  s3 -> s3 [0, 65535] { R2912 += 1, R2756 += 1, R2027 += 1, R2028 += 1, R2029 += 1 };
  s3 -> s5 [70, 70] { R2912 += 1, R2756 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s3 -> s6 [70, 70] { R2912 += 1, R2756 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s3 -> s1 [71, 65535] { R2912 += 1, R2756 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s4 -> s1 [0, 69] { R2912 += 1, R2756 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s9 [0, 65535] { R2912 += 1 };
  s4 -> s3 [0, 65535] { R2912 += 1, R2756 += 1, R2027 += 1, R2028 += 1, R2029 += 1 };
  s4 -> s4 [0, 65535] { R2912 += 1, R2756 += 1, R2026 += 1, R2027 += 1 };
  s4 -> s5 [70, 70] { R2912 += 1, R2756 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s4 -> s6 [70, 70] { R2912 += 1, R2756 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s4 -> s1 [71, 65535] { R2912 += 1, R2756 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s5 -> s5 [0, 65535] { R2912 += 1, R2756 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R2912 += 1, R2756 += 1 };
  s5 -> s9 [0, 65535] { R2912 += 1 };
  s5 -> s10 [0, 65535] { R2912 += 1, R2756 += 1, R2027 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R2912 += 1, R2756 += 1 };
  s6 -> s9 [0, 65535] { R2912 += 1 };
  s6 -> s6 [0, 65535] { R2912 += 1, R2756 += 1, R2027 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R2912 += 1, R2756 += 1 };
  s8 -> s9 [0, 65535] { R2912 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s9 [0, 65535] { R2912 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s8 [0, 65535] { R2912 += 1, R2756 += 1 };
  s10 -> s9 [0, 65535] { R2912 += 1 };
  s10 -> s10 [0, 65535] { R2912 += 1, R2756 += 1, R2027 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s0 -> s2 [0, 69] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s0 -> s3 [0, 65535] { R2914 += 1, R2758 += 1, R2039 += 1, R2040 += 1 };
  s0 -> s0 [0, 65535] { R2913 += 1, R2914 += 1 };
  s0 -> s4 [0, 65535] { R2914 += 1, R2757 += 1, R2758 += 1 };
  s0 -> s5 [0, 65535] { R2914 += 1, R2758 += 1, R2040 += 1, R2041 += 1, R2042 += 1 };
  s0 -> s6 [70, 70] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s0 -> s7 [70, 70] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s0 -> s1 [71, 76] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s0 -> s2 [71, 65535] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s0 -> s8 [77, 77] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s0 -> s1 [78, 65535] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s1 -> s1 [0, 69] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s1 -> s7 [70, 70] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s1 -> s1 [71, 76] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s1 -> s8 [77, 77] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s1 -> s1 [78, 65535] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s2 -> s1 [0, 69] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s2 -> s2 [0, 69] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s2 -> s6 [70, 70] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s2 -> s7 [70, 70] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s2 -> s1 [71, 76] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s2 -> s2 [71, 65535] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s2 -> s8 [77, 77] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s2 -> s1 [78, 65535] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s3 -> s1 [0, 69] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s3 -> s2 [0, 69] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s3 -> s3 [0, 65535] { R2914 += 1, R2758 += 1, R2039 += 1, R2040 += 1 };
  s3 -> s5 [0, 65535] { R2914 += 1, R2758 += 1, R2040 += 1, R2041 += 1, R2042 += 1 };
  s3 -> s6 [70, 70] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s3 -> s7 [70, 70] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s3 -> s1 [71, 76] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s3 -> s2 [71, 65535] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s3 -> s8 [77, 77] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s3 -> s1 [78, 65535] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s4 -> s1 [0, 69] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s4 -> s2 [0, 69] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s4 -> s3 [0, 65535] { R2914 += 1, R2758 += 1, R2039 += 1, R2040 += 1 };
  s4 -> s4 [0, 65535] { R2914 += 1, R2757 += 1, R2758 += 1 };
  s4 -> s5 [0, 65535] { R2914 += 1, R2758 += 1, R2040 += 1, R2041 += 1, R2042 += 1 };
  s4 -> s6 [70, 70] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s4 -> s7 [70, 70] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s4 -> s1 [71, 76] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s4 -> s2 [71, 65535] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s4 -> s8 [77, 77] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s4 -> s1 [78, 65535] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s5 -> s1 [0, 69] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s5 -> s2 [0, 69] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s5 -> s5 [0, 65535] { R2914 += 1, R2758 += 1, R2040 += 1, R2041 += 1, R2042 += 1 };
  s5 -> s6 [70, 70] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s5 -> s7 [70, 70] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s5 -> s1 [71, 76] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s5 -> s2 [71, 65535] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s5 -> s8 [77, 77] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s5 -> s1 [78, 65535] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s6 -> s7 [0, 76] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s6 -> s6 [0, 65535] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s6 -> s12 [77, 77] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s6 -> s7 [78, 65535] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s7 -> s7 [0, 76] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s7 -> s12 [77, 77] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s7 -> s7 [78, 65535] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s8 -> s8 [0, 69] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s8 -> s9 [0, 65535] { R2914 += 1 };
  s8 -> s10 [0, 65535];
  s8 -> s11 [0, 65535] { R2914 += 1, R2758 += 1 };
  s8 -> s8 [0, 65535] { R2914 += 1, R2758 += 1, R2040 += 1 };
  s8 -> s12 [70, 70] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s8 -> s13 [70, 70] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s8 -> s8 [71, 65535] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s9 -> s9 [0, 65535] { R2914 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  s11 -> s9 [0, 65535] { R2914 += 1 };
  s11 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R2914 += 1, R2758 += 1 };
  s12 -> s12 [0, 65535] { R2914 += 1, R2758 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s12 -> s9 [0, 65535] { R2914 += 1 };
  s12 -> s10 [0, 65535];
  s12 -> s11 [0, 65535] { R2914 += 1, R2758 += 1 };
  s12 -> s14 [0, 65535] { R2914 += 1, R2758 += 1, R2040 += 1 };
  s13 -> s9 [0, 65535] { R2914 += 1 };
  s13 -> s10 [0, 65535];
  s13 -> s11 [0, 65535] { R2914 += 1, R2758 += 1 };
  s13 -> s13 [0, 65535] { R2914 += 1, R2758 += 1, R2040 += 1 };
  s14 -> s9 [0, 65535] { R2914 += 1 };
  s14 -> s10 [0, 65535];
  s14 -> s11 [0, 65535] { R2914 += 1, R2758 += 1 };
  s14 -> s14 [0, 65535] { R2914 += 1, R2758 += 1, R2040 += 1 };
  accepting s12, s8, s13, s9, s14, s10, s11;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R2916 += 1, R2760 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s0 -> s2 [0, 65535] { R2916 += 1, R2760 += 1, R2053 += 1, R2054 += 1, R2055 += 1 };
  s0 -> s0 [0, 65535] { R2915 += 1, R2916 += 1 };
  s0 -> s3 [0, 65535] { R2916 += 1, R2759 += 1, R2760 += 1 };
  s0 -> s4 [0, 65535] { R2916 += 1, R2760 += 1, R2052 += 1, R2053 += 1 };
  s0 -> s5 [70, 70] { R2916 += 1, R2760 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s0 -> s6 [70, 70] { R2916 += 1, R2760 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s0 -> s1 [71, 65535] { R2916 += 1, R2760 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s1 -> s1 [0, 69] { R2916 += 1, R2760 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s1 -> s8 [0, 65535] { R2916 += 1 };
  s1 -> s9 [0, 65535] { R2916 += 1, R2760 += 1 };
  s1 -> s1 [0, 65535] { R2916 += 1, R2760 += 1, R2053 += 1 };
  s1 -> s10 [0, 65535];
  s1 -> s5 [70, 70] { R2916 += 1, R2760 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s1 -> s6 [70, 70] { R2916 += 1, R2760 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s1 -> s1 [71, 65535] { R2916 += 1, R2760 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s2 -> s1 [0, 69] { R2916 += 1, R2760 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s2 -> s2 [0, 65535] { R2916 += 1, R2760 += 1, R2053 += 1, R2054 += 1, R2055 += 1 };
  s2 -> s8 [0, 65535] { R2916 += 1 };
  s2 -> s9 [0, 65535] { R2916 += 1, R2760 += 1 };
  s2 -> s10 [0, 65535];
  s2 -> s5 [70, 70] { R2916 += 1, R2760 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s2 -> s6 [70, 70] { R2916 += 1, R2760 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s2 -> s1 [71, 65535] { R2916 += 1, R2760 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s3 -> s1 [0, 69] { R2916 += 1, R2760 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s3 -> s2 [0, 65535] { R2916 += 1, R2760 += 1, R2053 += 1, R2054 += 1, R2055 += 1 };
  s3 -> s3 [0, 65535] { R2916 += 1, R2759 += 1, R2760 += 1 };
  s3 -> s4 [0, 65535] { R2916 += 1, R2760 += 1, R2052 += 1, R2053 += 1 };
  s3 -> s10 [0, 65535];
  s3 -> s5 [70, 70] { R2916 += 1, R2760 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s3 -> s6 [70, 70] { R2916 += 1, R2760 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s3 -> s1 [71, 65535] { R2916 += 1, R2760 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s4 -> s1 [0, 69] { R2916 += 1, R2760 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s4 -> s2 [0, 65535] { R2916 += 1, R2760 += 1, R2053 += 1, R2054 += 1, R2055 += 1 };
  s4 -> s4 [0, 65535] { R2916 += 1, R2760 += 1, R2052 += 1, R2053 += 1 };
  s4 -> s8 [0, 65535] { R2916 += 1 };
  s4 -> s10 [0, 65535];
  s4 -> s5 [70, 70] { R2916 += 1, R2760 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s4 -> s6 [70, 70] { R2916 += 1, R2760 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s4 -> s1 [71, 65535] { R2916 += 1, R2760 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s5 -> s5 [0, 65535] { R2916 += 1, R2760 += 1, R2053 += 1 };
  s5 -> s8 [0, 65535] { R2916 += 1 };
  s5 -> s9 [0, 65535] { R2916 += 1, R2760 += 1 };
  s5 -> s10 [0, 65535];
  s6 -> s7 [0, 65535] { R2916 += 1, R2760 += 1, R2053 += 1 };
  s6 -> s8 [0, 65535] { R2916 += 1 };
  s6 -> s6 [0, 65535] { R2916 += 1, R2760 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s6 -> s9 [0, 65535] { R2916 += 1, R2760 += 1 };
  s6 -> s10 [0, 65535];
  s7 -> s7 [0, 65535] { R2916 += 1, R2760 += 1, R2053 += 1 };
  s7 -> s8 [0, 65535] { R2916 += 1 };
  s7 -> s9 [0, 65535] { R2916 += 1, R2760 += 1 };
  s7 -> s10 [0, 65535];
  s8 -> s8 [0, 65535] { R2916 += 1 };
  s8 -> s10 [0, 65535];
  s9 -> s8 [0, 65535] { R2916 += 1 };
  s9 -> s9 [0, 65535] { R2916 += 1, R2760 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R2918 += 1, R2762 += 1, R2686 += 1, R2688 += 1, R2689 += 1, R2690 += 1 };
  s0 -> s2 [0, 65535] { R2918 += 1, R2761 += 1, R2762 += 1 };
  s0 -> s3 [0, 65535] { R2918 += 1, R2762 += 1, R2686 += 1, R2687 += 1, R2688 += 1 };
  s0 -> s0 [0, 65535] { R2917 += 1, R2918 += 1 };
  s0 -> s4 [0, 65535] { R2918 += 1, R2762 += 1 };
  s0 -> s5 [70, 70] { R2918 += 1, R2762 += 1, R2686 += 1, R2688 += 1, R2689 += 1, R2690 += 1 };
  s0 -> s6 [70, 70] { R2918 += 1, R2762 += 1, R2686 += 1, R2688 += 1, R2689 += 1, R2690 += 1 };
  s0 -> s1 [71, 65535] { R2918 += 1, R2762 += 1, R2686 += 1, R2688 += 1, R2689 += 1, R2690 += 1 };
  s1 -> s1 [0, 69] { R2918 += 1, R2762 += 1, R2686 += 1, R2688 += 1, R2689 += 1, R2690 += 1 };
  s1 -> s1 [0, 65535] { R2918 += 1, R2762 += 1, R2686 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s8 [0, 65535] { R2918 += 1 };
  s1 -> s4 [0, 65535] { R2918 += 1, R2762 += 1 };
  s1 -> s5 [70, 70] { R2918 += 1, R2762 += 1, R2686 += 1, R2688 += 1, R2689 += 1, R2690 += 1 };
  s1 -> s6 [70, 70] { R2918 += 1, R2762 += 1, R2686 += 1, R2688 += 1, R2689 += 1, R2690 += 1 };
  s1 -> s1 [71, 65535] { R2918 += 1, R2762 += 1, R2686 += 1, R2688 += 1, R2689 += 1, R2690 += 1 };
  s2 -> s1 [0, 69] { R2918 += 1, R2762 += 1, R2686 += 1, R2688 += 1, R2689 += 1, R2690 += 1 };
  s2 -> s2 [0, 65535] { R2918 += 1, R2761 += 1, R2762 += 1 };
  s2 -> s3 [0, 65535] { R2918 += 1, R2762 += 1, R2686 += 1, R2687 += 1, R2688 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [0, 65535] { R2918 += 1, R2762 += 1 };
  s2 -> s5 [70, 70] { R2918 += 1, R2762 += 1, R2686 += 1, R2688 += 1, R2689 += 1, R2690 += 1 };
  s2 -> s6 [70, 70] { R2918 += 1, R2762 += 1, R2686 += 1, R2688 += 1, R2689 += 1, R2690 += 1 };
  s2 -> s1 [71, 65535] { R2918 += 1, R2762 += 1, R2686 += 1, R2688 += 1, R2689 += 1, R2690 += 1 };
  s3 -> s1 [0, 69] { R2918 += 1, R2762 += 1, R2686 += 1, R2688 += 1, R2689 += 1, R2690 += 1 };
  s3 -> s3 [0, 65535] { R2918 += 1, R2762 += 1, R2686 += 1, R2687 += 1, R2688 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s8 [0, 65535] { R2918 += 1 };
  s3 -> s4 [0, 65535] { R2918 += 1, R2762 += 1 };
  s3 -> s5 [70, 70] { R2918 += 1, R2762 += 1, R2686 += 1, R2688 += 1, R2689 += 1, R2690 += 1 };
  s3 -> s6 [70, 70] { R2918 += 1, R2762 += 1, R2686 += 1, R2688 += 1, R2689 += 1, R2690 += 1 };
  s3 -> s1 [71, 65535] { R2918 += 1, R2762 += 1, R2686 += 1, R2688 += 1, R2689 += 1, R2690 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R2918 += 1 };
  s4 -> s4 [0, 65535] { R2918 += 1, R2762 += 1 };
  s5 -> s9 [0, 65535] { R2918 += 1, R2762 += 1, R2686 += 1 };
  s5 -> s5 [0, 65535] { R2918 += 1, R2762 += 1, R2686 += 1, R2688 += 1, R2689 += 1, R2690 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R2918 += 1 };
  s5 -> s4 [0, 65535] { R2918 += 1, R2762 += 1 };
  s6 -> s6 [0, 65535] { R2918 += 1, R2762 += 1, R2686 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R2918 += 1 };
  s6 -> s4 [0, 65535] { R2918 += 1, R2762 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R2918 += 1 };
  s9 -> s9 [0, 65535] { R2918 += 1, R2762 += 1, R2686 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s8 [0, 65535] { R2918 += 1 };
  s9 -> s4 [0, 65535] { R2918 += 1, R2762 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 65535] { R2920 += 1, R2764 += 1, R28 += 1 };
  s0 -> s2 [0, 65535] { R2920 += 1, R2763 += 1, R2764 += 1 };
  s0 -> s0 [0, 65535] { R2919 += 1, R2920 += 1 };
  s1 -> s1 [0, 65535] { R2920 += 1, R2764 += 1, R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R2920 += 1 };
  s2 -> s1 [0, 65535] { R2920 += 1, R2764 += 1, R28 += 1 };
  s2 -> s2 [0, 65535] { R2920 += 1, R2763 += 1, R2764 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2920 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 66] { R2922 += 1, R2766 += 1 };
  s0 -> s0 [0, 65535] { R2921 += 1, R2922 += 1 };
  s0 -> s2 [0, 65535] { R2922 += 1, R2765 += 1, R2766 += 1 };
  s0 -> s3 [67, 67] { R2922 += 1, R2766 += 1 };
  s0 -> s4 [67, 67] { R2922 += 1, R2766 += 1 };
  s0 -> s5 [70, 70] { R2922 += 1, R2766 += 1 };
  s0 -> s1 [71, 65535] { R2922 += 1, R2766 += 1 };
  s1 -> s1 [0, 66] { R2922 += 1, R2766 += 1 };
  s1 -> s3 [67, 67] { R2922 += 1, R2766 += 1 };
  s1 -> s4 [67, 67] { R2922 += 1, R2766 += 1 };
  s1 -> s5 [70, 70] { R2922 += 1, R2766 += 1 };
  s1 -> s1 [71, 65535] { R2922 += 1, R2766 += 1 };
  s2 -> s1 [0, 66] { R2922 += 1, R2766 += 1 };
  s2 -> s2 [0, 65535] { R2922 += 1, R2765 += 1, R2766 += 1 };
  s2 -> s3 [67, 67] { R2922 += 1, R2766 += 1 };
  s2 -> s4 [67, 67] { R2922 += 1, R2766 += 1 };
  s2 -> s5 [70, 70] { R2922 += 1, R2766 += 1 };
  s2 -> s1 [71, 65535] { R2922 += 1, R2766 += 1 };
  s3 -> s3 [0, 67] { R2922 += 1, R2766 += 1 };
  s3 -> s8 [70, 70] { R2922 += 1, R2766 += 1 };
  s3 -> s3 [71, 65535] { R2922 += 1, R2766 += 1 };
  s5 -> s5 [0, 66] { R2922 += 1, R2766 += 1 };
  s5 -> s5 [0, 65535] { R2922 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [67, 67] { R2922 += 1, R2766 += 1 };
  s5 -> s8 [67, 67] { R2922 += 1, R2766 += 1 };
  s5 -> s5 [70, 65535] { R2922 += 1, R2766 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2922 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 67] { R2922 += 1, R2766 += 1 };
  s8 -> s8 [0, 65535] { R2922 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [70, 65535] { R2922 += 1, R2766 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 66] { R2924 += 1, R2768 += 1, R1773 += 1 };
  s0 -> s2 [0, 65535] { R2924 += 1, R2767 += 1, R2768 += 1 };
  s0 -> s0 [0, 65535] { R2923 += 1, R2924 += 1 };
  s0 -> s3 [67, 67] { R2924 += 1, R2768 += 1, R1773 += 1 };
  s0 -> s4 [67, 67] { R2924 += 1, R2768 += 1, R1773 += 1 };
  s0 -> s1 [68, 65535] { R2924 += 1, R2768 += 1, R1773 += 1 };
  s1 -> s1 [0, 66] { R2924 += 1, R2768 += 1, R1773 += 1 };
  s1 -> s1 [0, 65535] { R2924 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R2924 += 1, R2768 += 1, R1773 += 1 };
  s1 -> s4 [67, 67] { R2924 += 1, R2768 += 1, R1773 += 1 };
  s1 -> s1 [68, 65535] { R2924 += 1, R2768 += 1, R1773 += 1 };
  s2 -> s1 [0, 66] { R2924 += 1, R2768 += 1, R1773 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R2924 += 1, R2767 += 1, R2768 += 1 };
  s2 -> s3 [67, 67] { R2924 += 1, R2768 += 1, R1773 += 1 };
  s2 -> s4 [67, 67] { R2924 += 1, R2768 += 1, R1773 += 1 };
  s2 -> s1 [68, 65535] { R2924 += 1, R2768 += 1, R1773 += 1 };
  s3 -> s3 [0, 65535] { R2924 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R2924 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2924 += 1, R2768 += 1, R1773 += 1 };
  s5 -> s5 [0, 65535] { R2924 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 66] { R2926 += 1, R2770 += 1, R1775 += 1 };
  s0 -> s0 [0, 65535] { R2925 += 1, R2926 += 1 };
  s0 -> s2 [0, 65535] { R2926 += 1, R2769 += 1, R2770 += 1 };
  s0 -> s3 [67, 67] { R2926 += 1, R2770 += 1, R1775 += 1 };
  s0 -> s4 [67, 67] { R2926 += 1, R2770 += 1, R1775 += 1 };
  s0 -> s1 [68, 65535] { R2926 += 1, R2770 += 1, R1775 += 1 };
  s1 -> s1 [0, 66] { R2926 += 1, R2770 += 1, R1775 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2926 += 1 };
  s1 -> s3 [67, 67] { R2926 += 1, R2770 += 1, R1775 += 1 };
  s1 -> s4 [67, 67] { R2926 += 1, R2770 += 1, R1775 += 1 };
  s1 -> s1 [68, 65535] { R2926 += 1, R2770 += 1, R1775 += 1 };
  s2 -> s1 [0, 66] { R2926 += 1, R2770 += 1, R1775 += 1 };
  s2 -> s2 [0, 65535] { R2926 += 1, R2769 += 1, R2770 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R2926 += 1, R2770 += 1, R1775 += 1 };
  s2 -> s4 [67, 67] { R2926 += 1, R2770 += 1, R1775 += 1 };
  s2 -> s1 [68, 65535] { R2926 += 1, R2770 += 1, R1775 += 1 };
  s3 -> s3 [0, 65535] { R2926 += 1, R2770 += 1, R1775 += 1 };
  s3 -> s6 [0, 65535] { R2926 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2926 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2926 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_54 {
  init s0;
  s0 -> s1 [0, 66] { R2928 += 1, R2772 += 1, R1777 += 1, R1778 += 1 };
  s0 -> s0 [0, 65535] { R2927 += 1, R2928 += 1 };
  s0 -> s2 [0, 65535] { R2928 += 1, R2771 += 1, R2772 += 1 };
  s0 -> s3 [67, 67] { R2928 += 1, R2772 += 1, R1777 += 1, R1778 += 1 };
  s0 -> s4 [67, 67] { R2928 += 1, R2772 += 1, R1777 += 1, R1778 += 1 };
  s0 -> s1 [68, 65535] { R2928 += 1, R2772 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s1 [0, 66] { R2928 += 1, R2772 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s1 [0, 65535] { R2928 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R2928 += 1, R2772 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s4 [67, 67] { R2928 += 1, R2772 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s1 [68, 65535] { R2928 += 1, R2772 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s1 [0, 66] { R2928 += 1, R2772 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2928 += 1, R2771 += 1, R2772 += 1 };
  s2 -> s3 [67, 67] { R2928 += 1, R2772 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s4 [67, 67] { R2928 += 1, R2772 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s1 [68, 65535] { R2928 += 1, R2772 += 1, R1777 += 1, R1778 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2928 += 1, R2772 += 1, R1777 += 1, R1778 += 1 };
  s3 -> s6 [0, 65535] { R2928 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2928 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2928 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_55 {
  init s0;
  s0 -> s1 [0, 66] { R2930 += 1, R2774 += 1, R1783 += 1, R1784 += 1 };
  s0 -> s2 [0, 65535] { R2930 += 1, R2773 += 1, R2774 += 1 };
  s0 -> s0 [0, 65535] { R2929 += 1, R2930 += 1 };
  s0 -> s3 [67, 67] { R2930 += 1, R2774 += 1, R1783 += 1, R1784 += 1 };
  s0 -> s4 [67, 67] { R2930 += 1, R2774 += 1, R1783 += 1, R1784 += 1 };
  s0 -> s1 [68, 65535] { R2930 += 1, R2774 += 1, R1783 += 1, R1784 += 1 };
  s1 -> s1 [0, 66] { R2930 += 1, R2774 += 1, R1783 += 1, R1784 += 1 };
  s1 -> s1 [0, 65535] { R2930 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R2930 += 1, R2774 += 1, R1783 += 1, R1784 += 1 };
  s1 -> s4 [67, 67] { R2930 += 1, R2774 += 1, R1783 += 1, R1784 += 1 };
  s1 -> s1 [68, 65535] { R2930 += 1, R2774 += 1, R1783 += 1, R1784 += 1 };
  s2 -> s1 [0, 66] { R2930 += 1, R2774 += 1, R1783 += 1, R1784 += 1 };
  s2 -> s2 [0, 65535] { R2930 += 1, R2773 += 1, R2774 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R2930 += 1, R2774 += 1, R1783 += 1, R1784 += 1 };
  s2 -> s4 [67, 67] { R2930 += 1, R2774 += 1, R1783 += 1, R1784 += 1 };
  s2 -> s1 [68, 65535] { R2930 += 1, R2774 += 1, R1783 += 1, R1784 += 1 };
  s3 -> s3 [0, 65535] { R2930 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R2930 += 1 };
  s4 -> s4 [0, 65535] { R2930 += 1, R2774 += 1, R1783 += 1, R1784 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R2930 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_56 {
  init s0;
  s0 -> s1 [0, 66] { R2932 += 1, R2776 += 1, R1787 += 1, R1788 += 1 };
  s0 -> s0 [0, 65535] { R2931 += 1, R2932 += 1 };
  s0 -> s2 [0, 65535] { R2932 += 1, R2775 += 1, R2776 += 1 };
  s0 -> s3 [67, 67] { R2932 += 1, R2776 += 1, R1787 += 1, R1788 += 1 };
  s0 -> s4 [67, 67] { R2932 += 1, R2776 += 1, R1787 += 1, R1788 += 1 };
  s0 -> s1 [68, 65535] { R2932 += 1, R2776 += 1, R1787 += 1, R1788 += 1 };
  s1 -> s1 [0, 66] { R2932 += 1, R2776 += 1, R1787 += 1, R1788 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2932 += 1 };
  s1 -> s3 [67, 67] { R2932 += 1, R2776 += 1, R1787 += 1, R1788 += 1 };
  s1 -> s4 [67, 67] { R2932 += 1, R2776 += 1, R1787 += 1, R1788 += 1 };
  s1 -> s1 [68, 65535] { R2932 += 1, R2776 += 1, R1787 += 1, R1788 += 1 };
  s2 -> s1 [0, 66] { R2932 += 1, R2776 += 1, R1787 += 1, R1788 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2932 += 1, R2775 += 1, R2776 += 1 };
  s2 -> s3 [67, 67] { R2932 += 1, R2776 += 1, R1787 += 1, R1788 += 1 };
  s2 -> s4 [67, 67] { R2932 += 1, R2776 += 1, R1787 += 1, R1788 += 1 };
  s2 -> s1 [68, 65535] { R2932 += 1, R2776 += 1, R1787 += 1, R1788 += 1 };
  s3 -> s3 [0, 65535] { R2932 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R2932 += 1 };
  s4 -> s4 [0, 65535] { R2932 += 1, R2776 += 1, R1787 += 1, R1788 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2932 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_57 {
  init s0;
  s0 -> s1 [0, 66] { R2934 += 1, R2778 += 1, R1793 += 1, R1794 += 1 };
  s0 -> s0 [0, 65535] { R2933 += 1, R2934 += 1 };
  s0 -> s2 [0, 65535] { R2934 += 1, R2777 += 1, R2778 += 1 };
  s0 -> s3 [67, 67] { R2934 += 1, R2778 += 1, R1793 += 1, R1794 += 1 };
  s0 -> s4 [67, 67] { R2934 += 1, R2778 += 1, R1793 += 1, R1794 += 1 };
  s0 -> s1 [68, 65535] { R2934 += 1, R2778 += 1, R1793 += 1, R1794 += 1 };
  s1 -> s1 [0, 66] { R2934 += 1, R2778 += 1, R1793 += 1, R1794 += 1 };
  s1 -> s1 [0, 65535] { R2934 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R2934 += 1, R2778 += 1, R1793 += 1, R1794 += 1 };
  s1 -> s4 [67, 67] { R2934 += 1, R2778 += 1, R1793 += 1, R1794 += 1 };
  s1 -> s1 [68, 65535] { R2934 += 1, R2778 += 1, R1793 += 1, R1794 += 1 };
  s2 -> s1 [0, 66] { R2934 += 1, R2778 += 1, R1793 += 1, R1794 += 1 };
  s2 -> s2 [0, 65535] { R2934 += 1, R2777 += 1, R2778 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R2934 += 1, R2778 += 1, R1793 += 1, R1794 += 1 };
  s2 -> s4 [67, 67] { R2934 += 1, R2778 += 1, R1793 += 1, R1794 += 1 };
  s2 -> s1 [68, 65535] { R2934 += 1, R2778 += 1, R1793 += 1, R1794 += 1 };
  s3 -> s3 [0, 65535] { R2934 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R2934 += 1 };
  s4 -> s4 [0, 65535] { R2934 += 1, R2778 += 1, R1793 += 1, R1794 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R2934 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_58 {
  init s0;
  s0 -> s1 [0, 66] { R2936 += 1, R2780 += 1, R1799 += 1, R1800 += 1 };
  s0 -> s0 [0, 65535] { R2935 += 1, R2936 += 1 };
  s0 -> s2 [0, 65535] { R2936 += 1, R2779 += 1, R2780 += 1 };
  s0 -> s3 [67, 67] { R2936 += 1, R2780 += 1, R1799 += 1, R1800 += 1 };
  s0 -> s4 [67, 67] { R2936 += 1, R2780 += 1, R1799 += 1, R1800 += 1 };
  s0 -> s1 [68, 65535] { R2936 += 1, R2780 += 1, R1799 += 1, R1800 += 1 };
  s1 -> s1 [0, 66] { R2936 += 1, R2780 += 1, R1799 += 1, R1800 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2936 += 1 };
  s1 -> s3 [67, 67] { R2936 += 1, R2780 += 1, R1799 += 1, R1800 += 1 };
  s1 -> s4 [67, 67] { R2936 += 1, R2780 += 1, R1799 += 1, R1800 += 1 };
  s1 -> s1 [68, 65535] { R2936 += 1, R2780 += 1, R1799 += 1, R1800 += 1 };
  s2 -> s1 [0, 66] { R2936 += 1, R2780 += 1, R1799 += 1, R1800 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2936 += 1, R2779 += 1, R2780 += 1 };
  s2 -> s3 [67, 67] { R2936 += 1, R2780 += 1, R1799 += 1, R1800 += 1 };
  s2 -> s4 [67, 67] { R2936 += 1, R2780 += 1, R1799 += 1, R1800 += 1 };
  s2 -> s1 [68, 65535] { R2936 += 1, R2780 += 1, R1799 += 1, R1800 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2936 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R2936 += 1 };
  s4 -> s4 [0, 65535] { R2936 += 1, R2780 += 1, R1799 += 1, R1800 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2936 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_59 {
  init s0;
  s0 -> s1 [0, 66] { R2938 += 1, R2782 += 1, R1807 += 1, R1808 += 1 };
  s0 -> s2 [0, 65535] { R2938 += 1, R2781 += 1, R2782 += 1 };
  s0 -> s0 [0, 65535] { R2937 += 1, R2938 += 1 };
  s0 -> s3 [67, 67] { R2938 += 1, R2782 += 1, R1807 += 1, R1808 += 1 };
  s0 -> s4 [67, 67] { R2938 += 1, R2782 += 1, R1807 += 1, R1808 += 1 };
  s0 -> s1 [68, 65535] { R2938 += 1, R2782 += 1, R1807 += 1, R1808 += 1 };
  s1 -> s1 [0, 66] { R2938 += 1, R2782 += 1, R1807 += 1, R1808 += 1 };
  s1 -> s1 [0, 65535] { R2938 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R2938 += 1, R2782 += 1, R1807 += 1, R1808 += 1 };
  s1 -> s4 [67, 67] { R2938 += 1, R2782 += 1, R1807 += 1, R1808 += 1 };
  s1 -> s1 [68, 65535] { R2938 += 1, R2782 += 1, R1807 += 1, R1808 += 1 };
  s2 -> s1 [0, 66] { R2938 += 1, R2782 += 1, R1807 += 1, R1808 += 1 };
  s2 -> s2 [0, 65535] { R2938 += 1, R2781 += 1, R2782 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R2938 += 1, R2782 += 1, R1807 += 1, R1808 += 1 };
  s2 -> s4 [67, 67] { R2938 += 1, R2782 += 1, R1807 += 1, R1808 += 1 };
  s2 -> s1 [68, 65535] { R2938 += 1, R2782 += 1, R1807 += 1, R1808 += 1 };
  s3 -> s3 [0, 65535] { R2938 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R2938 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2938 += 1, R2782 += 1, R1807 += 1, R1808 += 1 };
  s5 -> s5 [0, 65535] { R2938 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_60 {
  init s0;
  s0 -> s1 [0, 66] { R2940 += 1, R2784 += 1, R1817 += 1, R1818 += 1 };
  s0 -> s2 [0, 65535] { R2940 += 1, R2783 += 1, R2784 += 1 };
  s0 -> s0 [0, 65535] { R2939 += 1, R2940 += 1 };
  s0 -> s3 [67, 67] { R2940 += 1, R2784 += 1, R1817 += 1, R1818 += 1 };
  s0 -> s4 [67, 67] { R2940 += 1, R2784 += 1, R1817 += 1, R1818 += 1 };
  s0 -> s1 [68, 65535] { R2940 += 1, R2784 += 1, R1817 += 1, R1818 += 1 };
  s1 -> s1 [0, 66] { R2940 += 1, R2784 += 1, R1817 += 1, R1818 += 1 };
  s1 -> s1 [0, 65535] { R2940 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R2940 += 1, R2784 += 1, R1817 += 1, R1818 += 1 };
  s1 -> s4 [67, 67] { R2940 += 1, R2784 += 1, R1817 += 1, R1818 += 1 };
  s1 -> s1 [68, 65535] { R2940 += 1, R2784 += 1, R1817 += 1, R1818 += 1 };
  s2 -> s1 [0, 66] { R2940 += 1, R2784 += 1, R1817 += 1, R1818 += 1 };
  s2 -> s2 [0, 65535] { R2940 += 1, R2783 += 1, R2784 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R2940 += 1, R2784 += 1, R1817 += 1, R1818 += 1 };
  s2 -> s4 [67, 67] { R2940 += 1, R2784 += 1, R1817 += 1, R1818 += 1 };
  s2 -> s1 [68, 65535] { R2940 += 1, R2784 += 1, R1817 += 1, R1818 += 1 };
  s3 -> s3 [0, 65535] { R2940 += 1, R2784 += 1, R1817 += 1, R1818 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R2940 += 1 };
  s4 -> s4 [0, 65535] { R2940 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2940 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_61 {
  init s0;
  s0 -> s1 [0, 66] { R2942 += 1, R2786 += 1, R1825 += 1, R1826 += 1 };
  s0 -> s0 [0, 65535] { R2941 += 1, R2942 += 1 };
  s0 -> s2 [0, 65535] { R2942 += 1, R2785 += 1, R2786 += 1 };
  s0 -> s3 [67, 67] { R2942 += 1, R2786 += 1, R1825 += 1, R1826 += 1 };
  s0 -> s4 [67, 67] { R2942 += 1, R2786 += 1, R1825 += 1, R1826 += 1 };
  s0 -> s1 [68, 65535] { R2942 += 1, R2786 += 1, R1825 += 1, R1826 += 1 };
  s1 -> s1 [0, 66] { R2942 += 1, R2786 += 1, R1825 += 1, R1826 += 1 };
  s1 -> s1 [0, 65535] { R2942 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R2942 += 1, R2786 += 1, R1825 += 1, R1826 += 1 };
  s1 -> s4 [67, 67] { R2942 += 1, R2786 += 1, R1825 += 1, R1826 += 1 };
  s1 -> s1 [68, 65535] { R2942 += 1, R2786 += 1, R1825 += 1, R1826 += 1 };
  s2 -> s1 [0, 66] { R2942 += 1, R2786 += 1, R1825 += 1, R1826 += 1 };
  s2 -> s2 [0, 65535] { R2942 += 1, R2785 += 1, R2786 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R2942 += 1, R2786 += 1, R1825 += 1, R1826 += 1 };
  s2 -> s4 [67, 67] { R2942 += 1, R2786 += 1, R1825 += 1, R1826 += 1 };
  s2 -> s1 [68, 65535] { R2942 += 1, R2786 += 1, R1825 += 1, R1826 += 1 };
  s3 -> s3 [0, 65535] { R2942 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R2942 += 1 };
  s4 -> s4 [0, 65535] { R2942 += 1, R2786 += 1, R1825 += 1, R1826 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R2942 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_62 {
  init s0;
  s0 -> s1 [0, 66] { R2944 += 1, R2788 += 1, R1835 += 1, R1836 += 1 };
  s0 -> s2 [0, 65535] { R2944 += 1, R2787 += 1, R2788 += 1 };
  s0 -> s0 [0, 65535] { R2943 += 1, R2944 += 1 };
  s0 -> s3 [67, 67] { R2944 += 1, R2788 += 1, R1835 += 1, R1836 += 1 };
  s0 -> s4 [67, 67] { R2944 += 1, R2788 += 1, R1835 += 1, R1836 += 1 };
  s0 -> s1 [68, 65535] { R2944 += 1, R2788 += 1, R1835 += 1, R1836 += 1 };
  s1 -> s1 [0, 66] { R2944 += 1, R2788 += 1, R1835 += 1, R1836 += 1 };
  s1 -> s1 [0, 65535] { R2944 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R2944 += 1, R2788 += 1, R1835 += 1, R1836 += 1 };
  s1 -> s4 [67, 67] { R2944 += 1, R2788 += 1, R1835 += 1, R1836 += 1 };
  s1 -> s1 [68, 65535] { R2944 += 1, R2788 += 1, R1835 += 1, R1836 += 1 };
  s2 -> s1 [0, 66] { R2944 += 1, R2788 += 1, R1835 += 1, R1836 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R2944 += 1, R2787 += 1, R2788 += 1 };
  s2 -> s3 [67, 67] { R2944 += 1, R2788 += 1, R1835 += 1, R1836 += 1 };
  s2 -> s4 [67, 67] { R2944 += 1, R2788 += 1, R1835 += 1, R1836 += 1 };
  s2 -> s1 [68, 65535] { R2944 += 1, R2788 += 1, R1835 += 1, R1836 += 1 };
  s3 -> s3 [0, 65535] { R2944 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R2944 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2944 += 1, R2788 += 1, R1835 += 1, R1836 += 1 };
  s5 -> s5 [0, 65535] { R2944 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_63 {
  init s0;
  s0 -> s1 [0, 66] { R2946 += 1, R2790 += 1, R1843 += 1, R1844 += 1 };
  s0 -> s0 [0, 65535] { R2945 += 1, R2946 += 1 };
  s0 -> s2 [0, 65535] { R2946 += 1, R2789 += 1, R2790 += 1 };
  s0 -> s3 [67, 67] { R2946 += 1, R2790 += 1, R1843 += 1, R1844 += 1 };
  s0 -> s4 [67, 67] { R2946 += 1, R2790 += 1, R1843 += 1, R1844 += 1 };
  s0 -> s1 [68, 65535] { R2946 += 1, R2790 += 1, R1843 += 1, R1844 += 1 };
  s1 -> s1 [0, 66] { R2946 += 1, R2790 += 1, R1843 += 1, R1844 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2946 += 1 };
  s1 -> s3 [67, 67] { R2946 += 1, R2790 += 1, R1843 += 1, R1844 += 1 };
  s1 -> s4 [67, 67] { R2946 += 1, R2790 += 1, R1843 += 1, R1844 += 1 };
  s1 -> s1 [68, 65535] { R2946 += 1, R2790 += 1, R1843 += 1, R1844 += 1 };
  s2 -> s1 [0, 66] { R2946 += 1, R2790 += 1, R1843 += 1, R1844 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2946 += 1, R2789 += 1, R2790 += 1 };
  s2 -> s3 [67, 67] { R2946 += 1, R2790 += 1, R1843 += 1, R1844 += 1 };
  s2 -> s4 [67, 67] { R2946 += 1, R2790 += 1, R1843 += 1, R1844 += 1 };
  s2 -> s1 [68, 65535] { R2946 += 1, R2790 += 1, R1843 += 1, R1844 += 1 };
  s3 -> s3 [0, 65535] { R2946 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2946 += 1, R2790 += 1, R1843 += 1, R1844 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R2946 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2946 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_64 {
  init s0;
  s0 -> s1 [0, 66] { R2948 += 1, R2792 += 1, R1847 += 1, R1848 += 1 };
  s0 -> s2 [0, 65535] { R2948 += 1, R2791 += 1, R2792 += 1 };
  s0 -> s0 [0, 65535] { R2947 += 1, R2948 += 1 };
  s0 -> s3 [67, 67] { R2948 += 1, R2792 += 1, R1847 += 1, R1848 += 1 };
  s0 -> s4 [67, 67] { R2948 += 1, R2792 += 1, R1847 += 1, R1848 += 1 };
  s0 -> s1 [68, 65535] { R2948 += 1, R2792 += 1, R1847 += 1, R1848 += 1 };
  s1 -> s1 [0, 66] { R2948 += 1, R2792 += 1, R1847 += 1, R1848 += 1 };
  s1 -> s1 [0, 65535] { R2948 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R2948 += 1, R2792 += 1, R1847 += 1, R1848 += 1 };
  s1 -> s4 [67, 67] { R2948 += 1, R2792 += 1, R1847 += 1, R1848 += 1 };
  s1 -> s1 [68, 65535] { R2948 += 1, R2792 += 1, R1847 += 1, R1848 += 1 };
  s2 -> s1 [0, 66] { R2948 += 1, R2792 += 1, R1847 += 1, R1848 += 1 };
  s2 -> s2 [0, 65535] { R2948 += 1, R2791 += 1, R2792 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R2948 += 1, R2792 += 1, R1847 += 1, R1848 += 1 };
  s2 -> s4 [67, 67] { R2948 += 1, R2792 += 1, R1847 += 1, R1848 += 1 };
  s2 -> s1 [68, 65535] { R2948 += 1, R2792 += 1, R1847 += 1, R1848 += 1 };
  s3 -> s3 [0, 65535] { R2948 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R2948 += 1 };
  s4 -> s4 [0, 65535] { R2948 += 1, R2792 += 1, R1847 += 1, R1848 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R2948 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_65 {
  init s0;
  s0 -> s1 [0, 66] { R2950 += 1, R2794 += 1, R1853 += 1, R1854 += 1 };
  s0 -> s0 [0, 65535] { R2949 += 1, R2950 += 1 };
  s0 -> s2 [0, 65535] { R2950 += 1, R2793 += 1, R2794 += 1 };
  s0 -> s3 [67, 67] { R2950 += 1, R2794 += 1, R1853 += 1, R1854 += 1 };
  s0 -> s4 [67, 67] { R2950 += 1, R2794 += 1, R1853 += 1, R1854 += 1 };
  s0 -> s1 [68, 65535] { R2950 += 1, R2794 += 1, R1853 += 1, R1854 += 1 };
  s1 -> s1 [0, 66] { R2950 += 1, R2794 += 1, R1853 += 1, R1854 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2950 += 1 };
  s1 -> s3 [67, 67] { R2950 += 1, R2794 += 1, R1853 += 1, R1854 += 1 };
  s1 -> s4 [67, 67] { R2950 += 1, R2794 += 1, R1853 += 1, R1854 += 1 };
  s1 -> s1 [68, 65535] { R2950 += 1, R2794 += 1, R1853 += 1, R1854 += 1 };
  s2 -> s1 [0, 66] { R2950 += 1, R2794 += 1, R1853 += 1, R1854 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2950 += 1, R2793 += 1, R2794 += 1 };
  s2 -> s3 [67, 67] { R2950 += 1, R2794 += 1, R1853 += 1, R1854 += 1 };
  s2 -> s4 [67, 67] { R2950 += 1, R2794 += 1, R1853 += 1, R1854 += 1 };
  s2 -> s1 [68, 65535] { R2950 += 1, R2794 += 1, R1853 += 1, R1854 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2950 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R2950 += 1 };
  s4 -> s4 [0, 65535] { R2950 += 1, R2794 += 1, R1853 += 1, R1854 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2950 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_66 {
  init s0;
  s0 -> s1 [0, 66] { R2952 += 1, R2796 += 1, R1859 += 1, R1860 += 1 };
  s0 -> s0 [0, 65535] { R2951 += 1, R2952 += 1 };
  s0 -> s2 [0, 65535] { R2952 += 1, R2795 += 1, R2796 += 1 };
  s0 -> s3 [67, 67] { R2952 += 1, R2796 += 1, R1859 += 1, R1860 += 1 };
  s0 -> s4 [67, 67] { R2952 += 1, R2796 += 1, R1859 += 1, R1860 += 1 };
  s0 -> s1 [68, 65535] { R2952 += 1, R2796 += 1, R1859 += 1, R1860 += 1 };
  s1 -> s1 [0, 66] { R2952 += 1, R2796 += 1, R1859 += 1, R1860 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R2952 += 1 };
  s1 -> s3 [67, 67] { R2952 += 1, R2796 += 1, R1859 += 1, R1860 += 1 };
  s1 -> s4 [67, 67] { R2952 += 1, R2796 += 1, R1859 += 1, R1860 += 1 };
  s1 -> s1 [68, 65535] { R2952 += 1, R2796 += 1, R1859 += 1, R1860 += 1 };
  s2 -> s1 [0, 66] { R2952 += 1, R2796 += 1, R1859 += 1, R1860 += 1 };
  s2 -> s2 [0, 65535] { R2952 += 1, R2795 += 1, R2796 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R2952 += 1, R2796 += 1, R1859 += 1, R1860 += 1 };
  s2 -> s4 [67, 67] { R2952 += 1, R2796 += 1, R1859 += 1, R1860 += 1 };
  s2 -> s1 [68, 65535] { R2952 += 1, R2796 += 1, R1859 += 1, R1860 += 1 };
  s3 -> s3 [0, 65535] { R2952 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R2952 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2952 += 1, R2796 += 1, R1859 += 1, R1860 += 1 };
  s5 -> s5 [0, 65535] { R2952 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_67 {
  init s0;
  s0 -> s1 [0, 66] { R2954 += 1, R2798 += 1, R1867 += 1, R1868 += 1 };
  s0 -> s2 [0, 65535] { R2954 += 1, R2797 += 1, R2798 += 1 };
  s0 -> s0 [0, 65535] { R2953 += 1, R2954 += 1 };
  s0 -> s3 [67, 67] { R2954 += 1, R2798 += 1, R1867 += 1, R1868 += 1 };
  s0 -> s4 [67, 67] { R2954 += 1, R2798 += 1, R1867 += 1, R1868 += 1 };
  s0 -> s1 [68, 65535] { R2954 += 1, R2798 += 1, R1867 += 1, R1868 += 1 };
  s1 -> s1 [0, 66] { R2954 += 1, R2798 += 1, R1867 += 1, R1868 += 1 };
  s1 -> s1 [0, 65535] { R2954 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R2954 += 1, R2798 += 1, R1867 += 1, R1868 += 1 };
  s1 -> s4 [67, 67] { R2954 += 1, R2798 += 1, R1867 += 1, R1868 += 1 };
  s1 -> s1 [68, 65535] { R2954 += 1, R2798 += 1, R1867 += 1, R1868 += 1 };
  s2 -> s1 [0, 66] { R2954 += 1, R2798 += 1, R1867 += 1, R1868 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2954 += 1, R2797 += 1, R2798 += 1 };
  s2 -> s3 [67, 67] { R2954 += 1, R2798 += 1, R1867 += 1, R1868 += 1 };
  s2 -> s4 [67, 67] { R2954 += 1, R2798 += 1, R1867 += 1, R1868 += 1 };
  s2 -> s1 [68, 65535] { R2954 += 1, R2798 += 1, R1867 += 1, R1868 += 1 };
  s3 -> s3 [0, 65535] { R2954 += 1, R2798 += 1, R1867 += 1, R1868 += 1 };
  s3 -> s6 [0, 65535] { R2954 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2954 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2954 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_68 {
  init s0;
  s0 -> s1 [0, 66] { R2956 += 1, R2800 += 1, R1877 += 1, R1878 += 1 };
  s0 -> s2 [0, 65535] { R2956 += 1, R2799 += 1, R2800 += 1 };
  s0 -> s0 [0, 65535] { R2955 += 1, R2956 += 1 };
  s0 -> s3 [67, 67] { R2956 += 1, R2800 += 1, R1877 += 1, R1878 += 1 };
  s0 -> s4 [67, 67] { R2956 += 1, R2800 += 1, R1877 += 1, R1878 += 1 };
  s0 -> s1 [68, 65535] { R2956 += 1, R2800 += 1, R1877 += 1, R1878 += 1 };
  s1 -> s1 [0, 66] { R2956 += 1, R2800 += 1, R1877 += 1, R1878 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2956 += 1 };
  s1 -> s3 [67, 67] { R2956 += 1, R2800 += 1, R1877 += 1, R1878 += 1 };
  s1 -> s4 [67, 67] { R2956 += 1, R2800 += 1, R1877 += 1, R1878 += 1 };
  s1 -> s1 [68, 65535] { R2956 += 1, R2800 += 1, R1877 += 1, R1878 += 1 };
  s2 -> s1 [0, 66] { R2956 += 1, R2800 += 1, R1877 += 1, R1878 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2956 += 1, R2799 += 1, R2800 += 1 };
  s2 -> s3 [67, 67] { R2956 += 1, R2800 += 1, R1877 += 1, R1878 += 1 };
  s2 -> s4 [67, 67] { R2956 += 1, R2800 += 1, R1877 += 1, R1878 += 1 };
  s2 -> s1 [68, 65535] { R2956 += 1, R2800 += 1, R1877 += 1, R1878 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R2956 += 1 };
  s3 -> s3 [0, 65535] { R2956 += 1, R2800 += 1, R1877 += 1, R1878 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2956 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2956 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_69 {
  init s0;
  s0 -> s1 [0, 66] { R2958 += 1, R2802 += 1, R1885 += 1, R1886 += 1 };
  s0 -> s2 [0, 65535] { R2958 += 1, R2801 += 1, R2802 += 1 };
  s0 -> s0 [0, 65535] { R2957 += 1, R2958 += 1 };
  s0 -> s3 [67, 67] { R2958 += 1, R2802 += 1, R1885 += 1, R1886 += 1 };
  s0 -> s4 [67, 67] { R2958 += 1, R2802 += 1, R1885 += 1, R1886 += 1 };
  s0 -> s1 [68, 65535] { R2958 += 1, R2802 += 1, R1885 += 1, R1886 += 1 };
  s1 -> s1 [0, 66] { R2958 += 1, R2802 += 1, R1885 += 1, R1886 += 1 };
  s1 -> s1 [0, 65535] { R2958 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R2958 += 1, R2802 += 1, R1885 += 1, R1886 += 1 };
  s1 -> s4 [67, 67] { R2958 += 1, R2802 += 1, R1885 += 1, R1886 += 1 };
  s1 -> s1 [68, 65535] { R2958 += 1, R2802 += 1, R1885 += 1, R1886 += 1 };
  s2 -> s1 [0, 66] { R2958 += 1, R2802 += 1, R1885 += 1, R1886 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R2958 += 1, R2801 += 1, R2802 += 1 };
  s2 -> s3 [67, 67] { R2958 += 1, R2802 += 1, R1885 += 1, R1886 += 1 };
  s2 -> s4 [67, 67] { R2958 += 1, R2802 += 1, R1885 += 1, R1886 += 1 };
  s2 -> s1 [68, 65535] { R2958 += 1, R2802 += 1, R1885 += 1, R1886 += 1 };
  s3 -> s3 [0, 65535] { R2958 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R2958 += 1 };
  s4 -> s4 [0, 65535] { R2958 += 1, R2802 += 1, R1885 += 1, R1886 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R2958 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_70 {
  init s0;
  s0 -> s1 [0, 66] { R2960 += 1, R2804 += 1, R1895 += 1, R1896 += 1 };
  s0 -> s0 [0, 65535] { R2959 += 1, R2960 += 1 };
  s0 -> s2 [0, 65535] { R2960 += 1, R2803 += 1, R2804 += 1 };
  s0 -> s3 [67, 67] { R2960 += 1, R2804 += 1, R1895 += 1, R1896 += 1 };
  s0 -> s4 [67, 67] { R2960 += 1, R2804 += 1, R1895 += 1, R1896 += 1 };
  s0 -> s1 [68, 65535] { R2960 += 1, R2804 += 1, R1895 += 1, R1896 += 1 };
  s1 -> s1 [0, 66] { R2960 += 1, R2804 += 1, R1895 += 1, R1896 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2960 += 1 };
  s1 -> s3 [67, 67] { R2960 += 1, R2804 += 1, R1895 += 1, R1896 += 1 };
  s1 -> s4 [67, 67] { R2960 += 1, R2804 += 1, R1895 += 1, R1896 += 1 };
  s1 -> s1 [68, 65535] { R2960 += 1, R2804 += 1, R1895 += 1, R1896 += 1 };
  s2 -> s1 [0, 66] { R2960 += 1, R2804 += 1, R1895 += 1, R1896 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2960 += 1, R2803 += 1, R2804 += 1 };
  s2 -> s3 [67, 67] { R2960 += 1, R2804 += 1, R1895 += 1, R1896 += 1 };
  s2 -> s4 [67, 67] { R2960 += 1, R2804 += 1, R1895 += 1, R1896 += 1 };
  s2 -> s1 [68, 65535] { R2960 += 1, R2804 += 1, R1895 += 1, R1896 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2960 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R2960 += 1 };
  s4 -> s4 [0, 65535] { R2960 += 1, R2804 += 1, R1895 += 1, R1896 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2960 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_71 {
  init s0;
  s0 -> s1 [0, 66] { R2962 += 1, R2806 += 1, R1905 += 1, R1906 += 1 };
  s0 -> s2 [0, 65535] { R2962 += 1, R2805 += 1, R2806 += 1 };
  s0 -> s0 [0, 65535] { R2961 += 1, R2962 += 1 };
  s0 -> s3 [67, 67] { R2962 += 1, R2806 += 1, R1905 += 1, R1906 += 1 };
  s0 -> s4 [67, 67] { R2962 += 1, R2806 += 1, R1905 += 1, R1906 += 1 };
  s0 -> s1 [68, 65535] { R2962 += 1, R2806 += 1, R1905 += 1, R1906 += 1 };
  s1 -> s1 [0, 66] { R2962 += 1, R2806 += 1, R1905 += 1, R1906 += 1 };
  s1 -> s1 [0, 65535] { R2962 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R2962 += 1, R2806 += 1, R1905 += 1, R1906 += 1 };
  s1 -> s4 [67, 67] { R2962 += 1, R2806 += 1, R1905 += 1, R1906 += 1 };
  s1 -> s1 [68, 65535] { R2962 += 1, R2806 += 1, R1905 += 1, R1906 += 1 };
  s2 -> s1 [0, 66] { R2962 += 1, R2806 += 1, R1905 += 1, R1906 += 1 };
  s2 -> s2 [0, 65535] { R2962 += 1, R2805 += 1, R2806 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R2962 += 1, R2806 += 1, R1905 += 1, R1906 += 1 };
  s2 -> s4 [67, 67] { R2962 += 1, R2806 += 1, R1905 += 1, R1906 += 1 };
  s2 -> s1 [68, 65535] { R2962 += 1, R2806 += 1, R1905 += 1, R1906 += 1 };
  s3 -> s3 [0, 65535] { R2962 += 1, R2806 += 1, R1905 += 1, R1906 += 1 };
  s3 -> s6 [0, 65535] { R2962 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2962 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2962 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_72 {
  init s0;
  s0 -> s1 [0, 66] { R2964 += 1, R2808 += 1, R1917 += 1, R1918 += 1 };
  s0 -> s0 [0, 65535] { R2963 += 1, R2964 += 1 };
  s0 -> s2 [0, 65535] { R2964 += 1, R2807 += 1, R2808 += 1 };
  s0 -> s3 [67, 67] { R2964 += 1, R2808 += 1, R1917 += 1, R1918 += 1 };
  s0 -> s4 [67, 67] { R2964 += 1, R2808 += 1, R1917 += 1, R1918 += 1 };
  s0 -> s1 [68, 65535] { R2964 += 1, R2808 += 1, R1917 += 1, R1918 += 1 };
  s1 -> s1 [0, 66] { R2964 += 1, R2808 += 1, R1917 += 1, R1918 += 1 };
  s1 -> s1 [0, 65535] { R2964 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R2964 += 1, R2808 += 1, R1917 += 1, R1918 += 1 };
  s1 -> s4 [67, 67] { R2964 += 1, R2808 += 1, R1917 += 1, R1918 += 1 };
  s1 -> s1 [68, 65535] { R2964 += 1, R2808 += 1, R1917 += 1, R1918 += 1 };
  s2 -> s1 [0, 66] { R2964 += 1, R2808 += 1, R1917 += 1, R1918 += 1 };
  s2 -> s2 [0, 65535] { R2964 += 1, R2807 += 1, R2808 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R2964 += 1, R2808 += 1, R1917 += 1, R1918 += 1 };
  s2 -> s4 [67, 67] { R2964 += 1, R2808 += 1, R1917 += 1, R1918 += 1 };
  s2 -> s1 [68, 65535] { R2964 += 1, R2808 += 1, R1917 += 1, R1918 += 1 };
  s3 -> s3 [0, 65535] { R2964 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R2964 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2964 += 1, R2808 += 1, R1917 += 1, R1918 += 1 };
  s5 -> s5 [0, 65535] { R2964 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_73 {
  init s0;
  s0 -> s1 [0, 66] { R2966 += 1, R2810 += 1, R1931 += 1, R1932 += 1 };
  s0 -> s2 [0, 65535] { R2966 += 1, R2809 += 1, R2810 += 1 };
  s0 -> s0 [0, 65535] { R2965 += 1, R2966 += 1 };
  s0 -> s3 [67, 67] { R2966 += 1, R2810 += 1, R1931 += 1, R1932 += 1 };
  s0 -> s4 [67, 67] { R2966 += 1, R2810 += 1, R1931 += 1, R1932 += 1 };
  s0 -> s1 [68, 65535] { R2966 += 1, R2810 += 1, R1931 += 1, R1932 += 1 };
  s1 -> s1 [0, 66] { R2966 += 1, R2810 += 1, R1931 += 1, R1932 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2966 += 1 };
  s1 -> s3 [67, 67] { R2966 += 1, R2810 += 1, R1931 += 1, R1932 += 1 };
  s1 -> s4 [67, 67] { R2966 += 1, R2810 += 1, R1931 += 1, R1932 += 1 };
  s1 -> s1 [68, 65535] { R2966 += 1, R2810 += 1, R1931 += 1, R1932 += 1 };
  s2 -> s1 [0, 66] { R2966 += 1, R2810 += 1, R1931 += 1, R1932 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2966 += 1, R2809 += 1, R2810 += 1 };
  s2 -> s3 [67, 67] { R2966 += 1, R2810 += 1, R1931 += 1, R1932 += 1 };
  s2 -> s4 [67, 67] { R2966 += 1, R2810 += 1, R1931 += 1, R1932 += 1 };
  s2 -> s1 [68, 65535] { R2966 += 1, R2810 += 1, R1931 += 1, R1932 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2966 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2966 += 1, R2810 += 1, R1931 += 1, R1932 += 1 };
  s4 -> s6 [0, 65535] { R2966 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2966 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_74 {
  init s0;
  s0 -> s1 [0, 66] { R2968 += 1, R2812 += 1, R1943 += 1, R1944 += 1 };
  s0 -> s2 [0, 65535] { R2968 += 1, R2811 += 1, R2812 += 1 };
  s0 -> s0 [0, 65535] { R2967 += 1, R2968 += 1 };
  s0 -> s3 [67, 67] { R2968 += 1, R2812 += 1, R1943 += 1, R1944 += 1 };
  s0 -> s4 [67, 67] { R2968 += 1, R2812 += 1, R1943 += 1, R1944 += 1 };
  s0 -> s1 [68, 65535] { R2968 += 1, R2812 += 1, R1943 += 1, R1944 += 1 };
  s1 -> s1 [0, 66] { R2968 += 1, R2812 += 1, R1943 += 1, R1944 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R2968 += 1 };
  s1 -> s3 [67, 67] { R2968 += 1, R2812 += 1, R1943 += 1, R1944 += 1 };
  s1 -> s4 [67, 67] { R2968 += 1, R2812 += 1, R1943 += 1, R1944 += 1 };
  s1 -> s1 [68, 65535] { R2968 += 1, R2812 += 1, R1943 += 1, R1944 += 1 };
  s2 -> s1 [0, 66] { R2968 += 1, R2812 += 1, R1943 += 1, R1944 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R2968 += 1, R2811 += 1, R2812 += 1 };
  s2 -> s3 [67, 67] { R2968 += 1, R2812 += 1, R1943 += 1, R1944 += 1 };
  s2 -> s4 [67, 67] { R2968 += 1, R2812 += 1, R1943 += 1, R1944 += 1 };
  s2 -> s1 [68, 65535] { R2968 += 1, R2812 += 1, R1943 += 1, R1944 += 1 };
  s3 -> s3 [0, 65535] { R2968 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R2968 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2968 += 1, R2812 += 1, R1943 += 1, R1944 += 1 };
  s5 -> s5 [0, 65535] { R2968 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_75 {
  init s0;
  s0 -> s1 [0, 66] { R2970 += 1, R2814 += 1, R1957 += 1, R1958 += 1 };
  s0 -> s0 [0, 65535] { R2969 += 1, R2970 += 1 };
  s0 -> s2 [0, 65535] { R2970 += 1, R2813 += 1, R2814 += 1 };
  s0 -> s3 [67, 67] { R2970 += 1, R2814 += 1, R1957 += 1, R1958 += 1 };
  s0 -> s4 [67, 67] { R2970 += 1, R2814 += 1, R1957 += 1, R1958 += 1 };
  s0 -> s1 [68, 65535] { R2970 += 1, R2814 += 1, R1957 += 1, R1958 += 1 };
  s1 -> s1 [0, 66] { R2970 += 1, R2814 += 1, R1957 += 1, R1958 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2970 += 1 };
  s1 -> s3 [67, 67] { R2970 += 1, R2814 += 1, R1957 += 1, R1958 += 1 };
  s1 -> s4 [67, 67] { R2970 += 1, R2814 += 1, R1957 += 1, R1958 += 1 };
  s1 -> s1 [68, 65535] { R2970 += 1, R2814 += 1, R1957 += 1, R1958 += 1 };
  s2 -> s1 [0, 66] { R2970 += 1, R2814 += 1, R1957 += 1, R1958 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2970 += 1, R2813 += 1, R2814 += 1 };
  s2 -> s3 [67, 67] { R2970 += 1, R2814 += 1, R1957 += 1, R1958 += 1 };
  s2 -> s4 [67, 67] { R2970 += 1, R2814 += 1, R1957 += 1, R1958 += 1 };
  s2 -> s1 [68, 65535] { R2970 += 1, R2814 += 1, R1957 += 1, R1958 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R2970 += 1 };
  s3 -> s3 [0, 65535] { R2970 += 1, R2814 += 1, R1957 += 1, R1958 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2970 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2970 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_76 {
  init s0;
  s0 -> s1 [0, 66] { R2972 += 1, R2816 += 1, R1969 += 1, R1970 += 1 };
  s0 -> s2 [0, 65535] { R2972 += 1, R2815 += 1, R2816 += 1 };
  s0 -> s0 [0, 65535] { R2971 += 1, R2972 += 1 };
  s0 -> s3 [67, 67] { R2972 += 1, R2816 += 1, R1969 += 1, R1970 += 1 };
  s0 -> s4 [67, 67] { R2972 += 1, R2816 += 1, R1969 += 1, R1970 += 1 };
  s0 -> s1 [68, 65535] { R2972 += 1, R2816 += 1, R1969 += 1, R1970 += 1 };
  s1 -> s1 [0, 66] { R2972 += 1, R2816 += 1, R1969 += 1, R1970 += 1 };
  s1 -> s1 [0, 65535] { R2972 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R2972 += 1, R2816 += 1, R1969 += 1, R1970 += 1 };
  s1 -> s4 [67, 67] { R2972 += 1, R2816 += 1, R1969 += 1, R1970 += 1 };
  s1 -> s1 [68, 65535] { R2972 += 1, R2816 += 1, R1969 += 1, R1970 += 1 };
  s2 -> s1 [0, 66] { R2972 += 1, R2816 += 1, R1969 += 1, R1970 += 1 };
  s2 -> s2 [0, 65535] { R2972 += 1, R2815 += 1, R2816 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R2972 += 1, R2816 += 1, R1969 += 1, R1970 += 1 };
  s2 -> s4 [67, 67] { R2972 += 1, R2816 += 1, R1969 += 1, R1970 += 1 };
  s2 -> s1 [68, 65535] { R2972 += 1, R2816 += 1, R1969 += 1, R1970 += 1 };
  s3 -> s6 [0, 65535] { R2972 += 1 };
  s3 -> s3 [0, 65535] { R2972 += 1, R2816 += 1, R1969 += 1, R1970 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2972 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2972 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_77 {
  init s0;
  s0 -> s1 [0, 66] { R2974 += 1, R2818 += 1, R1979 += 1, R1980 += 1 };
  s0 -> s2 [0, 65535] { R2974 += 1, R2817 += 1, R2818 += 1 };
  s0 -> s0 [0, 65535] { R2973 += 1, R2974 += 1 };
  s0 -> s3 [67, 67] { R2974 += 1, R2818 += 1, R1979 += 1, R1980 += 1 };
  s0 -> s4 [67, 67] { R2974 += 1, R2818 += 1, R1979 += 1, R1980 += 1 };
  s0 -> s1 [68, 65535] { R2974 += 1, R2818 += 1, R1979 += 1, R1980 += 1 };
  s1 -> s1 [0, 66] { R2974 += 1, R2818 += 1, R1979 += 1, R1980 += 1 };
  s1 -> s1 [0, 65535] { R2974 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R2974 += 1, R2818 += 1, R1979 += 1, R1980 += 1 };
  s1 -> s4 [67, 67] { R2974 += 1, R2818 += 1, R1979 += 1, R1980 += 1 };
  s1 -> s1 [68, 65535] { R2974 += 1, R2818 += 1, R1979 += 1, R1980 += 1 };
  s2 -> s1 [0, 66] { R2974 += 1, R2818 += 1, R1979 += 1, R1980 += 1 };
  s2 -> s2 [0, 65535] { R2974 += 1, R2817 += 1, R2818 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R2974 += 1, R2818 += 1, R1979 += 1, R1980 += 1 };
  s2 -> s4 [67, 67] { R2974 += 1, R2818 += 1, R1979 += 1, R1980 += 1 };
  s2 -> s1 [68, 65535] { R2974 += 1, R2818 += 1, R1979 += 1, R1980 += 1 };
  s3 -> s3 [0, 65535] { R2974 += 1, R2818 += 1, R1979 += 1, R1980 += 1 };
  s3 -> s6 [0, 65535] { R2974 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2974 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2974 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_78 {
  init s0;
  s0 -> s1 [0, 66] { R2976 += 1, R2820 += 1, R1987 += 1, R1988 += 1 };
  s0 -> s2 [0, 65535] { R2976 += 1, R2819 += 1, R2820 += 1 };
  s0 -> s0 [0, 65535] { R2975 += 1, R2976 += 1 };
  s0 -> s3 [67, 67] { R2976 += 1, R2820 += 1, R1987 += 1, R1988 += 1 };
  s0 -> s4 [67, 67] { R2976 += 1, R2820 += 1, R1987 += 1, R1988 += 1 };
  s0 -> s1 [68, 65535] { R2976 += 1, R2820 += 1, R1987 += 1, R1988 += 1 };
  s1 -> s1 [0, 66] { R2976 += 1, R2820 += 1, R1987 += 1, R1988 += 1 };
  s1 -> s1 [0, 65535] { R2976 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R2976 += 1, R2820 += 1, R1987 += 1, R1988 += 1 };
  s1 -> s4 [67, 67] { R2976 += 1, R2820 += 1, R1987 += 1, R1988 += 1 };
  s1 -> s1 [68, 65535] { R2976 += 1, R2820 += 1, R1987 += 1, R1988 += 1 };
  s2 -> s1 [0, 66] { R2976 += 1, R2820 += 1, R1987 += 1, R1988 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2976 += 1, R2819 += 1, R2820 += 1 };
  s2 -> s3 [67, 67] { R2976 += 1, R2820 += 1, R1987 += 1, R1988 += 1 };
  s2 -> s4 [67, 67] { R2976 += 1, R2820 += 1, R1987 += 1, R1988 += 1 };
  s2 -> s1 [68, 65535] { R2976 += 1, R2820 += 1, R1987 += 1, R1988 += 1 };
  s3 -> s3 [0, 65535] { R2976 += 1, R2820 += 1, R1987 += 1, R1988 += 1 };
  s3 -> s6 [0, 65535] { R2976 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2976 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2976 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_79 {
  init s0;
  s0 -> s1 [0, 66] { R2978 += 1, R2822 += 1, R1997 += 1, R1998 += 1 };
  s0 -> s2 [0, 65535] { R2978 += 1, R2821 += 1, R2822 += 1 };
  s0 -> s0 [0, 65535] { R2977 += 1, R2978 += 1 };
  s0 -> s3 [67, 67] { R2978 += 1, R2822 += 1, R1997 += 1, R1998 += 1 };
  s0 -> s4 [67, 67] { R2978 += 1, R2822 += 1, R1997 += 1, R1998 += 1 };
  s0 -> s1 [68, 65535] { R2978 += 1, R2822 += 1, R1997 += 1, R1998 += 1 };
  s1 -> s1 [0, 66] { R2978 += 1, R2822 += 1, R1997 += 1, R1998 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R2978 += 1 };
  s1 -> s3 [67, 67] { R2978 += 1, R2822 += 1, R1997 += 1, R1998 += 1 };
  s1 -> s4 [67, 67] { R2978 += 1, R2822 += 1, R1997 += 1, R1998 += 1 };
  s1 -> s1 [68, 65535] { R2978 += 1, R2822 += 1, R1997 += 1, R1998 += 1 };
  s2 -> s1 [0, 66] { R2978 += 1, R2822 += 1, R1997 += 1, R1998 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R2978 += 1, R2821 += 1, R2822 += 1 };
  s2 -> s3 [67, 67] { R2978 += 1, R2822 += 1, R1997 += 1, R1998 += 1 };
  s2 -> s4 [67, 67] { R2978 += 1, R2822 += 1, R1997 += 1, R1998 += 1 };
  s2 -> s1 [68, 65535] { R2978 += 1, R2822 += 1, R1997 += 1, R1998 += 1 };
  s3 -> s3 [0, 65535] { R2978 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2978 += 1, R2822 += 1, R1997 += 1, R1998 += 1 };
  s4 -> s5 [0, 65535] { R2978 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R2978 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_80 {
  init s0;
  s0 -> s1 [0, 66] { R2980 += 1, R2824 += 1, R2007 += 1, R2008 += 1 };
  s0 -> s0 [0, 65535] { R2979 += 1, R2980 += 1 };
  s0 -> s2 [0, 65535] { R2980 += 1, R2823 += 1, R2824 += 1 };
  s0 -> s3 [67, 67] { R2980 += 1, R2824 += 1, R2007 += 1, R2008 += 1 };
  s0 -> s4 [67, 67] { R2980 += 1, R2824 += 1, R2007 += 1, R2008 += 1 };
  s0 -> s1 [68, 65535] { R2980 += 1, R2824 += 1, R2007 += 1, R2008 += 1 };
  s1 -> s1 [0, 66] { R2980 += 1, R2824 += 1, R2007 += 1, R2008 += 1 };
  s1 -> s1 [0, 65535] { R2980 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R2980 += 1, R2824 += 1, R2007 += 1, R2008 += 1 };
  s1 -> s4 [67, 67] { R2980 += 1, R2824 += 1, R2007 += 1, R2008 += 1 };
  s1 -> s1 [68, 65535] { R2980 += 1, R2824 += 1, R2007 += 1, R2008 += 1 };
  s2 -> s1 [0, 66] { R2980 += 1, R2824 += 1, R2007 += 1, R2008 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2980 += 1, R2823 += 1, R2824 += 1 };
  s2 -> s3 [67, 67] { R2980 += 1, R2824 += 1, R2007 += 1, R2008 += 1 };
  s2 -> s4 [67, 67] { R2980 += 1, R2824 += 1, R2007 += 1, R2008 += 1 };
  s2 -> s1 [68, 65535] { R2980 += 1, R2824 += 1, R2007 += 1, R2008 += 1 };
  s3 -> s6 [0, 65535] { R2980 += 1 };
  s3 -> s3 [0, 65535] { R2980 += 1, R2824 += 1, R2007 += 1, R2008 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2980 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2980 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_81 {
  init s0;
  s0 -> s1 [0, 66] { R2982 += 1, R2826 += 1, R2019 += 1, R2020 += 1 };
  s0 -> s0 [0, 65535] { R2981 += 1, R2982 += 1 };
  s0 -> s2 [0, 65535] { R2982 += 1, R2825 += 1, R2826 += 1 };
  s0 -> s3 [67, 67] { R2982 += 1, R2826 += 1, R2019 += 1, R2020 += 1 };
  s0 -> s4 [67, 67] { R2982 += 1, R2826 += 1, R2019 += 1, R2020 += 1 };
  s0 -> s1 [68, 65535] { R2982 += 1, R2826 += 1, R2019 += 1, R2020 += 1 };
  s1 -> s1 [0, 66] { R2982 += 1, R2826 += 1, R2019 += 1, R2020 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2982 += 1 };
  s1 -> s3 [67, 67] { R2982 += 1, R2826 += 1, R2019 += 1, R2020 += 1 };
  s1 -> s4 [67, 67] { R2982 += 1, R2826 += 1, R2019 += 1, R2020 += 1 };
  s1 -> s1 [68, 65535] { R2982 += 1, R2826 += 1, R2019 += 1, R2020 += 1 };
  s2 -> s1 [0, 66] { R2982 += 1, R2826 += 1, R2019 += 1, R2020 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2982 += 1, R2825 += 1, R2826 += 1 };
  s2 -> s3 [67, 67] { R2982 += 1, R2826 += 1, R2019 += 1, R2020 += 1 };
  s2 -> s4 [67, 67] { R2982 += 1, R2826 += 1, R2019 += 1, R2020 += 1 };
  s2 -> s1 [68, 65535] { R2982 += 1, R2826 += 1, R2019 += 1, R2020 += 1 };
  s3 -> s3 [0, 65535] { R2982 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2982 += 1, R2826 += 1, R2019 += 1, R2020 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R2982 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2982 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_82 {
  init s0;
  s0 -> s1 [0, 66] { R2984 += 1, R2828 += 1, R2033 += 1, R2034 += 1 };
  s0 -> s2 [0, 65535] { R2984 += 1, R2827 += 1, R2828 += 1 };
  s0 -> s0 [0, 65535] { R2983 += 1, R2984 += 1 };
  s0 -> s3 [67, 67] { R2984 += 1, R2828 += 1, R2033 += 1, R2034 += 1 };
  s0 -> s4 [67, 67] { R2984 += 1, R2828 += 1, R2033 += 1, R2034 += 1 };
  s0 -> s1 [68, 65535] { R2984 += 1, R2828 += 1, R2033 += 1, R2034 += 1 };
  s1 -> s1 [0, 66] { R2984 += 1, R2828 += 1, R2033 += 1, R2034 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2984 += 1 };
  s1 -> s3 [67, 67] { R2984 += 1, R2828 += 1, R2033 += 1, R2034 += 1 };
  s1 -> s4 [67, 67] { R2984 += 1, R2828 += 1, R2033 += 1, R2034 += 1 };
  s1 -> s1 [68, 65535] { R2984 += 1, R2828 += 1, R2033 += 1, R2034 += 1 };
  s2 -> s1 [0, 66] { R2984 += 1, R2828 += 1, R2033 += 1, R2034 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2984 += 1, R2827 += 1, R2828 += 1 };
  s2 -> s3 [67, 67] { R2984 += 1, R2828 += 1, R2033 += 1, R2034 += 1 };
  s2 -> s4 [67, 67] { R2984 += 1, R2828 += 1, R2033 += 1, R2034 += 1 };
  s2 -> s1 [68, 65535] { R2984 += 1, R2828 += 1, R2033 += 1, R2034 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2984 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2984 += 1, R2828 += 1, R2033 += 1, R2034 += 1 };
  s4 -> s6 [0, 65535] { R2984 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2984 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_83 {
  init s0;
  s0 -> s1 [0, 66] { R2986 += 1, R2830 += 1, R2045 += 1, R2046 += 1 };
  s0 -> s2 [0, 65535] { R2986 += 1, R2829 += 1, R2830 += 1 };
  s0 -> s0 [0, 65535] { R2985 += 1, R2986 += 1 };
  s0 -> s3 [67, 67] { R2986 += 1, R2830 += 1, R2045 += 1, R2046 += 1 };
  s0 -> s4 [67, 67] { R2986 += 1, R2830 += 1, R2045 += 1, R2046 += 1 };
  s0 -> s1 [68, 65535] { R2986 += 1, R2830 += 1, R2045 += 1, R2046 += 1 };
  s1 -> s1 [0, 66] { R2986 += 1, R2830 += 1, R2045 += 1, R2046 += 1 };
  s1 -> s1 [0, 65535] { R2986 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R2986 += 1, R2830 += 1, R2045 += 1, R2046 += 1 };
  s1 -> s4 [67, 67] { R2986 += 1, R2830 += 1, R2045 += 1, R2046 += 1 };
  s1 -> s1 [68, 65535] { R2986 += 1, R2830 += 1, R2045 += 1, R2046 += 1 };
  s2 -> s1 [0, 66] { R2986 += 1, R2830 += 1, R2045 += 1, R2046 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2986 += 1, R2829 += 1, R2830 += 1 };
  s2 -> s3 [67, 67] { R2986 += 1, R2830 += 1, R2045 += 1, R2046 += 1 };
  s2 -> s4 [67, 67] { R2986 += 1, R2830 += 1, R2045 += 1, R2046 += 1 };
  s2 -> s1 [68, 65535] { R2986 += 1, R2830 += 1, R2045 += 1, R2046 += 1 };
  s3 -> s6 [0, 65535] { R2986 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2986 += 1, R2830 += 1, R2045 += 1, R2046 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2986 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2986 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_84 {
  init s0;
  s0 -> s1 [0, 66] { R2988 += 1, R2832 += 1, R2679 += 1, R2680 += 1 };
  s0 -> s2 [0, 66] { R2988 += 1, R2832 += 1, R2680 += 1, R2681 += 1, R2682 += 1 };
  s0 -> s0 [0, 65535] { R2987 += 1, R2988 += 1 };
  s0 -> s3 [0, 65535] { R2988 += 1, R2831 += 1, R2832 += 1 };
  s0 -> s4 [67, 67] { R2988 += 1, R2832 += 1, R2680 += 1, R2681 += 1, R2682 += 1 };
  s0 -> s5 [67, 67] { R2988 += 1, R2832 += 1, R2679 += 1, R2680 += 1 };
  s0 -> s6 [67, 67] { R2988 += 1, R2832 += 1, R2679 += 1, R2680 += 1 };
  s0 -> s7 [67, 67] { R2988 += 1, R2832 += 1, R2680 += 1, R2681 += 1, R2682 += 1 };
  s0 -> s1 [68, 65535] { R2988 += 1, R2832 += 1, R2679 += 1, R2680 += 1 };
  s0 -> s2 [68, 65535] { R2988 += 1, R2832 += 1, R2680 += 1, R2681 += 1, R2682 += 1 };
  s1 -> s1 [0, 66] { R2988 += 1, R2832 += 1, R2679 += 1, R2680 += 1 };
  s1 -> s2 [0, 66] { R2988 += 1, R2832 += 1, R2680 += 1, R2681 += 1, R2682 += 1 };
  s1 -> s4 [67, 67] { R2988 += 1, R2832 += 1, R2680 += 1, R2681 += 1, R2682 += 1 };
  s1 -> s5 [67, 67] { R2988 += 1, R2832 += 1, R2679 += 1, R2680 += 1 };
  s1 -> s6 [67, 67] { R2988 += 1, R2832 += 1, R2679 += 1, R2680 += 1 };
  s1 -> s7 [67, 67] { R2988 += 1, R2832 += 1, R2680 += 1, R2681 += 1, R2682 += 1 };
  s1 -> s1 [68, 65535] { R2988 += 1, R2832 += 1, R2679 += 1, R2680 += 1 };
  s1 -> s2 [68, 65535] { R2988 += 1, R2832 += 1, R2680 += 1, R2681 += 1, R2682 += 1 };
  s2 -> s2 [0, 66] { R2988 += 1, R2832 += 1, R2680 += 1, R2681 += 1, R2682 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R2988 += 1 };
  s2 -> s4 [67, 67] { R2988 += 1, R2832 += 1, R2680 += 1, R2681 += 1, R2682 += 1 };
  s2 -> s7 [67, 67] { R2988 += 1, R2832 += 1, R2680 += 1, R2681 += 1, R2682 += 1 };
  s2 -> s2 [68, 65535] { R2988 += 1, R2832 += 1, R2680 += 1, R2681 += 1, R2682 += 1 };
  s3 -> s1 [0, 66] { R2988 += 1, R2832 += 1, R2679 += 1, R2680 += 1 };
  s3 -> s2 [0, 66] { R2988 += 1, R2832 += 1, R2680 += 1, R2681 += 1, R2682 += 1 };
  s3 -> s3 [0, 65535] { R2988 += 1, R2831 += 1, R2832 += 1 };
  s3 -> s4 [67, 67] { R2988 += 1, R2832 += 1, R2680 += 1, R2681 += 1, R2682 += 1 };
  s3 -> s5 [67, 67] { R2988 += 1, R2832 += 1, R2679 += 1, R2680 += 1 };
  s3 -> s6 [67, 67] { R2988 += 1, R2832 += 1, R2679 += 1, R2680 += 1 };
  s3 -> s7 [67, 67] { R2988 += 1, R2832 += 1, R2680 += 1, R2681 += 1, R2682 += 1 };
  s3 -> s1 [68, 65535] { R2988 += 1, R2832 += 1, R2679 += 1, R2680 += 1 };
  s3 -> s2 [68, 65535] { R2988 += 1, R2832 += 1, R2680 += 1, R2681 += 1, R2682 += 1 };
  s4 -> s4 [0, 65535] { R2988 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R2988 += 1, R2832 += 1, R2679 += 1, R2680 += 1 };
  s5 -> s7 [0, 65535] { R2988 += 1, R2832 += 1, R2680 += 1, R2681 += 1, R2682 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R2988 += 1 };
  s7 -> s7 [0, 65535] { R2988 += 1, R2832 += 1, R2680 += 1, R2681 += 1, R2682 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R2988 += 1 };
  accepting s4, s8, s2, s9, s7;
};
};
synchronised {  // Automata constraining P44
automaton P44_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
synchronised {  // Automata constraining P27
automaton P27_0 {
  init s0;
  s0 -> s1 [108, 108];
  accepting s1;
};
};
synchronised {  // Automata constraining P17
automaton P17_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R2762 && R4 - R2988 = 1 && R29 - R2762 = -1 && R30 = R2762 && R31 - R2762 = -1 && R32 = R2762 && R33 = 0 && R34 = 1 && R35 = 0 && R36 = 1 && R37 = R2988 && R38 - R2988 = 1 && R39 = R2988 && R40 - R2988 = 1 && R41 = 0 && R42 = 1 && R43 = 0 && R44 = 1 && R1774 + R1773 + -1*R2040 + -1*R2034 = 0 && R1792 + R1789 + R1894 + R1889 + R1996 + R1991 + -1*R2044 + -1*R2038 - R1936 - R1942 - R1820 - R1824 = 0 && R1823 + R1819 + R1941 + R1935 + R2043 + R2037 = 0 && R1845 + R1843 = 0 && R1846 + R1844 + -1*R2040 + -1*R2034 = 0 && R1983 + R1979 = 0 && R1984 + R1980 + -1*R2040 + -1*R2034 = 0 && R1985 + R1981 = 0 && R1986 + R1982 = 0 && R2039 + R2033 = 0 && R2041 + R2035 = 0 && R2042 + R2036 = 0 && R2691 = 0 && R2692 = R2762 && R2693 = 0 && R2694 = R2762 && R2695 = 0 && R2696 = R2762 && R2697 = 0 && R2698 = R2762 && R2699 = 0 && R2700 = R2762 && R2701 = 0 && R2702 = R2762 && R2703 = 0 && R2704 = R2762 && R2705 = 0 && R2706 = R2762 && R2707 = 0 && R2708 = R2762 && R2709 = 0 && R2710 = R2762 && R2711 = 0 && R2712 = R2762 && R2713 = 0 && R2714 = R2762 && R2715 = 0 && R2716 = R2762 && R2717 = 0 && R2718 = R2762 && R2719 = 0 && R2720 = R2762 && R2721 = 0 && R2722 = R2762 && R2723 = 0 && R2724 = R2762 && R2725 = 0 && R2726 = R2762 && R2727 = 0 && R2728 = R2762 && R2729 = 0 && R2730 = R2762 && R2731 = 0 && R2732 = R2762 && R2733 = 0 && R2734 = R2762 && R2735 = 0 && R2736 = R2762 && R2737 = 0 && R2738 = R2762 && R2739 = 0 && R2740 = R2762 && R2741 = 0 && R2742 = R2762 && R2743 = 0 && R2744 = R2762 && R2745 = 0 && R2746 = R2762 && R2747 = 0 && R2748 = R2762 && R2749 = 0 && R2750 = R2762 && R2751 = 0 && R2752 = R2762 && R2753 = 0 && R2754 = R2762 && R2755 = 0 && R2756 = R2762 && R2757 = 0 && R2758 = R2762 && R2759 = 0 && R2760 = R2762 && R2761 = 0 && R2765 = 0 && R2766 = 0 && R2831 = 0 && R2832 = 0 && R2833 = 0 && R2834 = R2988 && R2835 = 0 && R2836 = R2988 && R2837 = 0 && R2838 = R2988 && R2839 = 0 && R2840 = R2988 && R2841 = 0 && R2842 = R2988 && R2843 = 0 && R2844 = R2988 && R2845 = 0 && R2846 = R2988 && R2847 = 0 && R2848 = R2988 && R2849 = 0 && R2850 = R2988 && R2851 = 0 && R2852 = R2988 && R2853 = 0 && R2854 = R2988 && R2855 = 0 && R2856 = R2988 && R2857 = 0 && R2858 = R2988 && R2859 = 0 && R2860 = R2988 && R2861 = 0 && R2862 = R2988 && R2863 = 0 && R2864 = R2988 && R2865 = 0 && R2866 = R2988 && R2867 = 0 && R2868 = R2988 && R2869 = 0 && R2870 = R2988 && R2871 = 0 && R2872 = R2988 && R2873 = 0 && R2874 = R2988 && R2875 = 0 && R2876 = R2988 && R2877 = 0 && R2878 = R2988 && R2879 = 0 && R2880 = R2988 && R2881 = 0 && R2882 = R2988 && R2883 = 0 && R2884 = R2988 && R2885 = 0 && R2886 = R2988 && R2887 = 0 && R2888 = R2988 && R2889 = 0 && R2890 = R2988 && R2891 = 0 && R2892 = R2988 && R2893 = 0 && R2894 = R2988 && R2895 = 0 && R2896 = R2988 && R2897 = 0 && R2898 = R2988 && R2899 = 0 && R2900 = R2988 && R2901 = 0 && R2902 = R2988 && R2903 = 0 && R2904 = R2988 && R2905 = 0 && R2906 = R2988 && R2907 = 0 && R2908 = R2988 && R2909 = 0 && R2910 = R2988 && R2911 = 0 && R2912 = R2988 && R2913 = 0 && R2914 = R2988 && R2915 = 0 && R2916 = R2988 && R2917 = 0 && R2918 = R2988 && R2919 = 0 && R2920 = R2988 && R2921 = 0 && R2922 = R2988 && R2923 = 0 && R2924 = R2988 && R2925 = 0 && R2926 = R2988 && R2927 = 0 && R2928 = R2988 && R2929 = 0 && R2930 = R2988 && R2931 = 0 && R2932 = R2988 && R2933 = 0 && R2934 = R2988 && R2935 = 0 && R2936 = R2988 && R2937 = 0 && R2938 = R2988 && R2939 = 0 && R2940 = R2988 && R2941 = 0 && R2942 = R2988 && R2943 = 0 && R2944 = R2988 && R2945 = 0 && R2946 = R2988 && R2947 = 0 && R2948 = R2988 && R2949 = 0 && R2950 = R2988 && R2951 = 0 && R2952 = R2988 && R2953 = 0 && R2954 = R2988 && R2955 = 0 && R2956 = R2988 && R2957 = 0 && R2958 = R2988 && R2959 = 0 && R2960 = R2988 && R2961 = 0 && R2962 = R2988 && R2963 = 0 && R2964 = R2988 && R2965 = 0 && R2966 = R2988 && R2967 = 0 && R2968 = R2988 && R2969 = 0 && R2970 = R2988 && R2971 = 0 && R2972 = R2988 && R2973 = 0 && R2974 = R2988 && R2975 = 0 && R2976 = R2988 && R2977 = 0 && R2978 = R2988 && R2979 = 0 && R2980 = R2988 && R2981 = 0 && R2982 = R2988 && R2983 = 0 && R2984 = R2988 && R2985 = 0 && R2986 = R2988 && R2987 = 0 && R18 < 1 && R21 < 1 && R1776 + R1775 < 1 && R1798 + R1795 + R1904 + R1899 + R2006 + R2001 < 1 && -1*R2044 + -1*R2038 - R1936 - R1942 - R1820 - R1824 < 1 && -1*R1852 + -1*R1849 < 1 && R1858 + R1855 < 1 && -1*R2040 + -1*R2034 < 1 && 0 < R2762 && -1 < R2988 && (R1816 + R1811 + R1930 + R1923 + R2032 + R2025 != 0 || ((R1805 + R1801 + R1915 + R1909 + R2017 + R2011 != 0 || R1806 + R1802 + R1916 + R1910 + R2018 + R2012 + -1*R2044 + -1*R2038 - R1936 - R1942 - R1820 - R1824 = 0 || R1824 + R1820 + R1942 + R1936 + R2044 + R2038 < 1) && (R1805 + R1801 + R1915 + R1909 + R2017 + R2011 = 0 || R1824 + R1820 + R1942 + R1936 + R2044 + R2038 < 1))) && (R1816 + R1811 + R1930 + R1923 + R2032 + R2025 != 0 || ((R1814 + R1809 + R1928 + R1921 + R2030 + R2023 != 0 || R1815 + R1810 + R1929 + R1922 + R2031 + R2024 + -1*R2044 + -1*R2038 - R1936 - R1942 - R1820 - R1824 = 0 || R1824 + R1820 + R1942 + R1936 + R2044 + R2038 < 1) && (R1814 + R1809 + R1928 + R1921 + R2030 + R2023 = 0 || R1824 + R1820 + R1942 + R1936 + R2044 + R2038 < 1))) && (R1850 + R1847 != 0 || R1851 + R1848 + -1*R2040 + -1*R2034 = 0 || R1852 + R1849 < 1) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1865 + R1861 = 0 && R1866 + R1862 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1874 + R1869 = 0 && R1875 + R1870 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1883 + R1879 = 0 && R1884 + R1880 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1892 + R1887 = 0 && R1893 + R1888 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1902 + R1897 = 0 && R1903 + R1898 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1913 + R1907 = 0 && R1914 + R1908 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1926 + R1919 = 0 && R1927 + R1920 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1939 + R1933 = 0 && R1940 + R1934 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1952 + R1945 = 0 && R1953 + R1946 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1965 + R1959 = 0 && R1966 + R1960 = 0)) && (R1852 + R1849 != 0 || ((R1850 + R1847 != 0 || R1851 + R1848 + -1*R2040 + -1*R2034 = 0 || R2040 + R2034 < 1) && (R1850 + R1847 = 0 || R2040 + R2034 < 1))) && (R1856 + R1853 != 0 || R1857 + R1854 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1863 + R1859 != 0 || R1864 + R1860 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1865 + R1861 != 0 || R1852 + R1849 + -1*R1866 + -1*R1862 = 0 || R1852 + R1849 < 1) && (R1872 + R1867 != 0 || R1873 + R1868 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1874 + R1869 != 0 || R1852 + R1849 + -1*R1875 + -1*R1870 = 0 || R1852 + R1849 < 1) && (R1881 + R1877 != 0 || R1882 + R1878 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1883 + R1879 != 0 || R1852 + R1849 + -1*R1884 + -1*R1880 = 0 || R1852 + R1849 < 1) && (R1890 + R1885 != 0 || R1891 + R1886 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1892 + R1887 != 0 || R1852 + R1849 + -1*R1893 + -1*R1888 = 0 || R1852 + R1849 < 1) && (R1900 + R1895 != 0 || R1901 + R1896 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1902 + R1897 != 0 || R1852 + R1849 + -1*R1903 + -1*R1898 = 0 || R1852 + R1849 < 1) && (R1911 + R1905 != 0 || R1912 + R1906 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1913 + R1907 != 0 || R1852 + R1849 + -1*R1914 + -1*R1908 = 0 || R1852 + R1849 < 1) && (R1924 + R1917 != 0 || R1925 + R1918 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1926 + R1919 != 0 || R1852 + R1849 + -1*R1927 + -1*R1920 = 0 || R1852 + R1849 < 1) && (R1937 + R1931 != 0 || R1938 + R1932 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1939 + R1933 != 0 || R1852 + R1849 + -1*R1940 + -1*R1934 = 0 || R1852 + R1849 < 1) && (R1950 + R1943 != 0 || R1951 + R1944 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1952 + R1945 != 0 || R1852 + R1849 + -1*R1953 + -1*R1946 = 0 || R1852 + R1849 < 1) && (R1963 + R1957 != 0 || R1964 + R1958 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1965 + R1959 != 0 || R1852 + R1849 + -1*R1966 + -1*R1960 = 0 || R1852 + R1849 < 1) && (R1974 + R1969 != 0 || R1975 + R1970 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1992 + R1987 != 0 || R1993 + R1988 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R2002 + R1997 != 0 || R2003 + R1998 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R2013 + R2007 != 0 || R2014 + R2008 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R2026 + R2019 != 0 || R2027 + R2020 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R2052 + R2045 != 0 || R2040 + R2034 + -1*R2053 + -1*R2046 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R2685 + R2679 != 0 || R2040 + R2034 + -1*R2686 + -1*R2680 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R28 = 0 || (R2763 = 0 && R2764 = 0)) && (R28 = 0 || (R2767 = 0 && R2768 = 0)) && (R28 = 0 || (R2769 = 0 && R2770 = 0)) && (R28 = 0 || (R2771 = 0 && R2772 = 0)) && (R28 = 0 || (R2773 = 0 && R2774 = 0)) && (R28 = 0 || (R2775 = 0 && R2776 = 0)) && (R28 = 0 || (R2777 = 0 && R2778 = 0)) && (R28 = 0 || (R2779 = 0 && R2780 = 0)) && (R28 = 0 || (R2781 = 0 && R2782 = 0)) && (R28 = 0 || (R2783 = 0 && R2784 = 0)) && (R28 = 0 || (R2785 = 0 && R2786 = 0)) && (R28 = 0 || (R2787 = 0 && R2788 = 0)) && (R28 = 0 || (R2789 = 0 && R2790 = 0)) && (R28 = 0 || (R2791 = 0 && R2792 = 0)) && (R28 = 0 || (R2793 = 0 && R2794 = 0)) && (R28 = 0 || (R2795 = 0 && R2796 = 0)) && (R28 = 0 || (R2797 = 0 && R2798 = 0)) && (R28 = 0 || (R2799 = 0 && R2800 = 0)) && (R28 = 0 || (R2801 = 0 && R2802 = 0)) && (R28 = 0 || (R2803 = 0 && R2804 = 0)) && (R28 = 0 || (R2805 = 0 && R2806 = 0)) && (R28 = 0 || (R2807 = 0 && R2808 = 0)) && (R28 = 0 || (R2809 = 0 && R2810 = 0)) && (R28 = 0 || (R2811 = 0 && R2812 = 0)) && (R28 = 0 || (R2813 = 0 && R2814 = 0)) && (R28 = 0 || (R2815 = 0 && R2816 = 0)) && (R28 = 0 || (R2817 = 0 && R2818 = 0)) && (R28 = 0 || (R2819 = 0 && R2820 = 0)) && (R28 = 0 || (R2821 = 0 && R2822 = 0)) && (R28 = 0 || (R2823 = 0 && R2824 = 0)) && (R28 = 0 || (R2825 = 0 && R2826 = 0)) && (R28 = 0 || (R2827 = 0 && R2828 = 0)) && (R28 = 0 || (R2829 = 0 && R2830 = 0)) && (R1782 + R1779 = 0 || (R1780 + R1777 = 0 && R1781 + R1778 = 0)) && (R1782 + R1779 = 0 || (R1785 + R1783 = 0 && R1786 + R1784 = 0)) && (R1782 + R1779 = 0 || (R1790 + R1787 = 0 && R1791 + R1788 = 0)) && (R1782 + R1779 = 0 || (R1796 + R1793 = 0 && R1797 + R1794 = 0)) && (R1782 + R1779 = 0 || (R1803 + R1799 = 0 && R1804 + R1800 = 0)) && (R1782 + R1779 = 0 || (R1812 + R1807 = 0 && R1813 + R1808 = 0)) && (R1782 + R1779 = 0 || (R1821 + R1817 = 0 && R1822 + R1818 = 0)) && (R1782 + R1779 = 0 || (R1830 + R1825 = 0 && R1831 + R1826 = 0)) && (R1782 + R1779 = 0 || (R1839 + R1835 = 0 && R1840 + R1836 = 0)) && (R1816 + R1811 + R1930 + R1923 + R2032 + R2025 = 0 || (R1805 + R1801 + R1915 + R1909 + R2017 + R2011 = 0 && R1806 + R1802 + R1916 + R1910 + R2018 + R2012 + -1*R2044 + -1*R2038 - R1936 - R1942 - R1820 - R1824 = 0)) && (R1816 + R1811 + R1930 + R1923 + R2032 + R2025 = 0 || (R1814 + R1809 + R1928 + R1921 + R2030 + R2023 = 0 && R1815 + R1810 + R1929 + R1922 + R2031 + R2024 + -1*R2044 + -1*R2038 - R1936 - R1942 - R1820 - R1824 = 0)) && (R1834 + R1829 + R1956 + R1949 + R2058 + R2051 = 0 || (R1832 + R1827 + R1954 + R1947 + R2056 + R2049 = 0 && R1833 + R1828 + R1955 + R1948 + R2057 + R2050 = 0)) && (R1834 + R1829 + R1956 + R1949 + R2058 + R2051 = 0 || (R1841 + R1837 + R1967 + R1961 + R2689 + R2683 = 0 && R1842 + R1838 + R1968 + R1962 + R2690 + R2684 = 0)) && (R1850 + R1847 = 0 || R1852 + R1849 < 1) && (R1856 + R1853 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1863 + R1859 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1865 + R1861 = 0 || R1852 + R1849 < 1) && (R1872 + R1867 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1874 + R1869 = 0 || R1852 + R1849 < 1) && (R1881 + R1877 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1883 + R1879 = 0 || R1852 + R1849 < 1) && (R1890 + R1885 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1892 + R1887 = 0 || R1852 + R1849 < 1) && (R1900 + R1895 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1902 + R1897 = 0 || R1852 + R1849 < 1) && (R1911 + R1905 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1913 + R1907 = 0 || R1852 + R1849 < 1) && (R1924 + R1917 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1926 + R1919 = 0 || R1852 + R1849 < 1) && (R1937 + R1931 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1939 + R1933 = 0 || R1852 + R1849 < 1) && (R1950 + R1943 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1952 + R1945 = 0 || R1852 + R1849 < 1) && (R1963 + R1957 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1965 + R1959 = 0 || R1852 + R1849 < 1) && (R1974 + R1969 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1978 + R1973 = 0 || (R1976 + R1971 = 0 && R1977 + R1972 = 0)) && (R1978 + R1973 = 0 || (R1994 + R1989 = 0 && R1995 + R1990 = 0)) && (R1978 + R1973 = 0 || (R2004 + R1999 = 0 && R2005 + R2000 = 0)) && (R1978 + R1973 = 0 || (R2015 + R2009 = 0 && R2016 + R2010 = 0)) && (R1978 + R1973 = 0 || (R2028 + R2021 = 0 && R2029 + R2022 = 0)) && (R1978 + R1973 = 0 || (R2054 + R2047 = 0 && R2055 + R2048 = 0)) && (R1978 + R1973 = 0 || (R2687 + R2681 = 0 && R2688 + R2682 = 0)) && (R1992 + R1987 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R2002 + R1997 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R2013 + R2007 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R2026 + R2019 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R2052 + R2045 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R2685 + R2679 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0));
// End of Parikh automata intersection problem
