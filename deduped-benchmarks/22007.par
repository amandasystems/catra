// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R11522, R11523, R11524, R11525, R12, R15342, R15343, R15344, R15345, R15346, R15347, R16618, R16619, R16620, R16621, R17, R17044, R17045, R17046, R17047, R17048, R17049, R17362, R17363, R17364, R17365, R17366, R17367, R17368, R17369, R17370, R17371, R17372, R17373, R17374, R17375, R17376, R17377, R17378, R17379, R17380, R17381, R17382, R17383, R17384, R17385, R17386, R17387, R17388, R17389, R17390, R17391, R17392, R17393, R17394, R17395, R17396, R17397, R17398, R17399, R17400, R17401, R17402, R17403, R17404, R17405, R17406, R17407, R17408, R17409, R17410, R17411, R17412, R17413, R17414, R17415, R17416, R17417, R17418, R17419, R17420, R17421, R17422, R17423, R17424, R17425, R17426, R17427, R17428, R17429, R17430, R17431, R17432, R17433, R17434, R17435, R17436, R17437, R17438, R17439, R17440, R17441, R17442, R17443, R17444, R17445, R17446, R17447, R17448, R17449, R17450, R17451, R17452, R17453, R17454, R17455, R17456, R17457, R17458, R17459, R17460, R17461, R17462, R17463, R17464, R17465, R18, R19, R2, R20, R21, R22, R23, R24, R25, R26, R27, R3, R38, R4, R40, R42, R43, R46, R47, R48, R52, R53, R56, R57, R58, R62, R63, R66, R67, R68, R69, R8;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [76, 76];
  s0 -> s0 [77, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [76, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R2 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R11 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 75];
  s0 -> s0 [0, 65535] { R12 += 1 };
  s0 -> s2 [76, 76];
  s0 -> s1 [77, 65535];
  s1 -> s1 [0, 75];
  s1 -> s2 [76, 76];
  s1 -> s1 [77, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R21 += 1 };
  s0 -> s0 [0, 65535] { R20 += 1, R21 += 1 };
  s0 -> s2 [9, 13] { R21 += 1 };
  s0 -> s1 [14, 31] { R21 += 1 };
  s0 -> s2 [32, 32] { R21 += 1 };
  s0 -> s1 [33, 65535] { R21 += 1 };
  s1 -> s1 [0, 65535] { R21 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R21 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R22 += 1, R23 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R25 += 1 };
  s0 -> s0 [0, 65535] { R24 += 1, R25 += 1 };
  s0 -> s2 [9, 13] { R25 += 1 };
  s0 -> s1 [14, 31] { R25 += 1 };
  s0 -> s2 [32, 32] { R25 += 1 };
  s0 -> s1 [33, 65535] { R25 += 1 };
  s1 -> s1 [0, 65535] { R25 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R25 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R26 += 1, R27 += 1 };
  s0 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s1 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R17386 += 1, R17387 += 1 };
  s0 -> s1 [0, 65535] { R17387 += 1, R19 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R17387 += 1, R19 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 75] { R17389 += 1 };
  s0 -> s0 [0, 65535] { R17388 += 1, R17389 += 1 };
  s0 -> s2 [76, 76] { R17389 += 1 };
  s0 -> s3 [76, 76] { R17389 += 1 };
  s0 -> s1 [88, 65535] { R17389 += 1 };
  s1 -> s1 [0, 75] { R17389 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [76, 76] { R17389 += 1 };
  s1 -> s3 [76, 76] { R17389 += 1 };
  s1 -> s1 [88, 65535] { R17389 += 1 };
  s2 -> s2 [0, 76] { R17389 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [88, 65535] { R17389 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 75] { R17391 += 1, R38 += 1 };
  s0 -> s0 [0, 65535] { R17390 += 1, R17391 += 1 };
  s0 -> s2 [76, 76] { R17391 += 1, R38 += 1 };
  s0 -> s3 [76, 76] { R17391 += 1, R38 += 1 };
  s0 -> s1 [77, 65535] { R17391 += 1, R38 += 1 };
  s1 -> s1 [0, 75] { R17391 += 1, R38 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [76, 76] { R17391 += 1, R38 += 1 };
  s1 -> s3 [76, 76] { R17391 += 1, R38 += 1 };
  s1 -> s1 [77, 65535] { R17391 += 1, R38 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R17391 += 1, R38 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 75] { R17393 += 1, R40 += 1 };
  s0 -> s0 [0, 65535] { R17392 += 1, R17393 += 1 };
  s0 -> s2 [76, 76] { R17393 += 1, R40 += 1 };
  s0 -> s3 [76, 76] { R17393 += 1, R40 += 1 };
  s0 -> s1 [77, 65535] { R17393 += 1, R40 += 1 };
  s1 -> s1 [0, 75] { R17393 += 1, R40 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [76, 76] { R17393 += 1, R40 += 1 };
  s1 -> s3 [76, 76] { R17393 += 1, R40 += 1 };
  s1 -> s1 [77, 65535] { R17393 += 1, R40 += 1 };
  s2 -> s2 [0, 65535] { R17393 += 1, R40 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 75] { R17395 += 1, R42 += 1, R43 += 1 };
  s0 -> s0 [0, 65535] { R17394 += 1, R17395 += 1 };
  s0 -> s2 [76, 76] { R17395 += 1, R42 += 1, R43 += 1 };
  s0 -> s3 [76, 76] { R17395 += 1, R42 += 1, R43 += 1 };
  s0 -> s1 [77, 65535] { R17395 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 75] { R17395 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [76, 76] { R17395 += 1, R42 += 1, R43 += 1 };
  s1 -> s3 [76, 76] { R17395 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [77, 65535] { R17395 += 1, R42 += 1, R43 += 1 };
  s2 -> s2 [0, 65535] { R17395 += 1, R42 += 1, R43 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 75] { R17397 += 1, R46 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R17396 += 1, R17397 += 1 };
  s0 -> s2 [76, 76] { R17397 += 1, R46 += 1, R47 += 1 };
  s0 -> s3 [76, 76] { R17397 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [77, 65535] { R17397 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 75] { R17397 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [76, 76] { R17397 += 1, R46 += 1, R47 += 1 };
  s1 -> s3 [76, 76] { R17397 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [77, 65535] { R17397 += 1, R46 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R17397 += 1, R46 += 1, R47 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 75] { R17399 += 1, R52 += 1, R53 += 1 };
  s0 -> s0 [0, 65535] { R17398 += 1, R17399 += 1 };
  s0 -> s2 [76, 76] { R17399 += 1, R52 += 1, R53 += 1 };
  s0 -> s3 [76, 76] { R17399 += 1, R52 += 1, R53 += 1 };
  s0 -> s1 [77, 65535] { R17399 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 75] { R17399 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [76, 76] { R17399 += 1, R52 += 1, R53 += 1 };
  s1 -> s3 [76, 76] { R17399 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [77, 65535] { R17399 += 1, R52 += 1, R53 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R17399 += 1, R52 += 1, R53 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 75] { R17401 += 1, R56 += 1, R57 += 1 };
  s0 -> s0 [0, 65535] { R17400 += 1, R17401 += 1 };
  s0 -> s2 [76, 76] { R17401 += 1, R56 += 1, R57 += 1 };
  s0 -> s3 [76, 76] { R17401 += 1, R56 += 1, R57 += 1 };
  s0 -> s1 [77, 65535] { R17401 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 75] { R17401 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [76, 76] { R17401 += 1, R56 += 1, R57 += 1 };
  s1 -> s3 [76, 76] { R17401 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [77, 65535] { R17401 += 1, R56 += 1, R57 += 1 };
  s2 -> s2 [0, 65535] { R17401 += 1, R56 += 1, R57 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 75] { R17403 += 1, R62 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R17402 += 1, R17403 += 1 };
  s0 -> s2 [76, 76] { R17403 += 1, R62 += 1, R63 += 1 };
  s0 -> s3 [76, 76] { R17403 += 1, R62 += 1, R63 += 1 };
  s0 -> s1 [77, 65535] { R17403 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 75] { R17403 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [76, 76] { R17403 += 1, R62 += 1, R63 += 1 };
  s1 -> s3 [76, 76] { R17403 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [77, 65535] { R17403 += 1, R62 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R17403 += 1, R62 += 1, R63 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 75] { R17423 += 1 };
  s0 -> s0 [0, 65535] { R17422 += 1, R17423 += 1 };
  s0 -> s2 [76, 76] { R17423 += 1 };
  s0 -> s1 [77, 65535] { R17423 += 1 };
  s1 -> s1 [0, 75] { R17423 += 1 };
  s1 -> s2 [76, 76] { R17423 += 1 };
  s1 -> s1 [77, 65535] { R17423 += 1 };
  s2 -> s2 [0, 65535] { R17423 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R17425 += 1, R1 += 1 };
  s0 -> s0 [0, 65535] { R17424 += 1, R17425 += 1 };
  s1 -> s1 [0, 65535] { R17425 += 1, R1 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 75] { R17427 += 1 };
  s0 -> s0 [0, 65535] { R17426 += 1, R17427 += 1 };
  s0 -> s2 [0, 65535] { R17427 += 1, R8 += 1 };
  s0 -> s3 [76, 76] { R17427 += 1 };
  s0 -> s1 [77, 65535] { R17427 += 1 };
  s1 -> s1 [0, 75] { R17427 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [76, 76] { R17427 += 1 };
  s1 -> s1 [77, 65535] { R17427 += 1 };
  s2 -> s1 [0, 75] { R17427 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R17427 += 1, R8 += 1 };
  s2 -> s3 [76, 76] { R17427 += 1 };
  s2 -> s1 [77, 65535] { R17427 += 1 };
  s3 -> s3 [0, 65535] { R17427 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 75] { R17429 += 1, R17367 += 1 };
  s0 -> s0 [0, 65535] { R17428 += 1, R17429 += 1 };
  s0 -> s2 [0, 65535] { R17429 += 1, R17366 += 1, R17367 += 1 };
  s0 -> s1 [77, 65535] { R17429 += 1, R17367 += 1 };
  s1 -> s1 [0, 75] { R17429 += 1, R17367 += 1 };
  s1 -> s1 [0, 65535] { R17429 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [77, 65535] { R17429 += 1, R17367 += 1 };
  s2 -> s1 [0, 75] { R17429 += 1, R17367 += 1 };
  s2 -> s2 [0, 65535] { R17429 += 1, R17366 += 1, R17367 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [77, 65535] { R17429 += 1, R17367 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R17431 += 1, R17368 += 1, R17369 += 1 };
  s0 -> s0 [0, 65535] { R17430 += 1, R17431 += 1 };
  s0 -> s2 [0, 65535] { R17431 += 1, R17369 += 1, R17 += 1 };
  s1 -> s1 [0, 65535] { R17431 += 1, R17368 += 1, R17369 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R17431 += 1, R17369 += 1, R17 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R17431 += 1 };
  s2 -> s2 [0, 65535] { R17431 += 1, R17369 += 1, R17 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R17431 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 76] { R17433 += 1, R17371 += 1 };
  s0 -> s0 [0, 65535] { R17432 += 1, R17433 += 1 };
  s0 -> s2 [0, 65535] { R17433 += 1, R17370 += 1, R17371 += 1 };
  s0 -> s1 [87, 65535] { R17433 += 1, R17371 += 1 };
  s1 -> s1 [0, 76] { R17433 += 1, R17371 += 1 };
  s1 -> s1 [0, 65535] { R17433 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [87, 65535] { R17433 += 1, R17371 += 1 };
  s2 -> s1 [0, 76] { R17433 += 1, R17371 += 1 };
  s2 -> s2 [0, 65535] { R17433 += 1, R17370 += 1, R17371 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [87, 65535] { R17433 += 1, R17371 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R17435 += 1, R17372 += 1, R17373 += 1 };
  s0 -> s2 [0, 65535] { R17435 += 1, R17373 += 1, R67 += 1 };
  s0 -> s0 [0, 65535] { R17434 += 1, R17435 += 1 };
  s1 -> s1 [0, 65535] { R17435 += 1, R17372 += 1, R17373 += 1 };
  s1 -> s2 [0, 65535] { R17435 += 1, R17373 += 1, R67 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R17435 += 1, R17373 += 1, R67 += 1 };
  s2 -> s3 [0, 65535] { R17435 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R17435 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 86] { R17437 += 1, R17375 += 1 };
  s0 -> s0 [0, 65535] { R17436 += 1, R17437 += 1 };
  s0 -> s2 [0, 65535] { R17437 += 1, R17375 += 1, R69 += 1 };
  s0 -> s3 [0, 65535] { R17437 += 1, R17374 += 1, R17375 += 1 };
  s0 -> s1 [88, 65535] { R17437 += 1, R17375 += 1 };
  s1 -> s1 [0, 86] { R17437 += 1, R17375 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R17437 += 1 };
  s1 -> s1 [88, 65535] { R17437 += 1, R17375 += 1 };
  s2 -> s1 [0, 86] { R17437 += 1, R17375 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R17437 += 1, R17375 += 1, R69 += 1 };
  s2 -> s5 [0, 65535] { R17437 += 1 };
  s2 -> s1 [88, 65535] { R17437 += 1, R17375 += 1 };
  s3 -> s1 [0, 86] { R17437 += 1, R17375 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R17437 += 1, R17375 += 1, R69 += 1 };
  s3 -> s3 [0, 65535] { R17437 += 1, R17374 += 1, R17375 += 1 };
  s3 -> s1 [88, 65535] { R17437 += 1, R17375 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R17437 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 86] { R17439 += 1, R17377 += 1, R11525 += 1 };
  s0 -> s0 [0, 65535] { R17438 += 1, R17439 += 1 };
  s0 -> s1 [0, 65535] { R17439 += 1, R17377 += 1 };
  s0 -> s2 [0, 65535] { R17439 += 1, R17376 += 1, R17377 += 1 };
  s0 -> s1 [88, 65535] { R17439 += 1, R17377 += 1, R11525 += 1 };
  s1 -> s1 [0, 86] { R17439 += 1, R17377 += 1, R11525 += 1 };
  s1 -> s1 [0, 65535] { R17439 += 1, R17377 += 1 };
  s1 -> s4 [0, 65535] { R17439 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [88, 65535] { R17439 += 1, R17377 += 1, R11525 += 1 };
  s2 -> s1 [0, 86] { R17439 += 1, R17377 += 1, R11525 += 1 };
  s2 -> s1 [0, 65535] { R17439 += 1, R17377 += 1 };
  s2 -> s2 [0, 65535] { R17439 += 1, R17376 += 1, R17377 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [88, 65535] { R17439 += 1, R17377 += 1, R11525 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R17439 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R17441 += 1, R17379 += 1 };
  s0 -> s0 [0, 65535] { R17440 += 1, R17441 += 1 };
  s0 -> s2 [0, 65535] { R17441 += 1, R17378 += 1, R17379 += 1 };
  s0 -> s3 [0, 65535] { R17441 += 1, R17379 += 1, R15346 += 1, R15347 += 1 };
  s1 -> s1 [0, 65535] { R17441 += 1, R17379 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R17441 += 1 };
  s2 -> s1 [0, 65535] { R17441 += 1, R17379 += 1 };
  s2 -> s2 [0, 65535] { R17441 += 1, R17378 += 1, R17379 += 1 };
  s2 -> s3 [0, 65535] { R17441 += 1, R17379 += 1, R15346 += 1, R15347 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R17441 += 1, R17379 += 1 };
  s3 -> s3 [0, 65535] { R17441 += 1, R17379 += 1, R15346 += 1, R15347 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R17441 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R17441 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 87] { R17443 += 1, R17381 += 1, R16621 += 1 };
  s0 -> s0 [0, 65535] { R17442 += 1, R17443 += 1 };
  s0 -> s2 [0, 65535] { R17443 += 1, R17380 += 1, R17381 += 1 };
  s0 -> s3 [90, 90] { R17443 += 1, R17381 += 1, R16621 += 1 };
  s0 -> s1 [91, 65535] { R17443 += 1, R17381 += 1, R16621 += 1 };
  s1 -> s1 [0, 87] { R17443 += 1, R17381 += 1, R16621 += 1 };
  s1 -> s3 [90, 90] { R17443 += 1, R17381 += 1, R16621 += 1 };
  s1 -> s1 [91, 65535] { R17443 += 1, R17381 += 1, R16621 += 1 };
  s2 -> s1 [0, 87] { R17443 += 1, R17381 += 1, R16621 += 1 };
  s2 -> s2 [0, 65535] { R17443 += 1, R17380 += 1, R17381 += 1 };
  s2 -> s3 [90, 90] { R17443 += 1, R17381 += 1, R16621 += 1 };
  s2 -> s1 [91, 65535] { R17443 += 1, R17381 += 1, R16621 += 1 };
  s3 -> s3 [0, 87] { R17443 += 1, R17381 += 1, R16621 += 1 };
  s3 -> s4 [0, 65535] { R17443 += 1 };
  s3 -> s3 [0, 65535] { R17443 += 1, R17381 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [90, 65535] { R17443 += 1, R17381 += 1, R16621 += 1 };
  s4 -> s4 [0, 65535] { R17443 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R17445 += 1, R17382 += 1, R17383 += 1 };
  s0 -> s2 [0, 65535] { R17445 += 1, R17383 += 1 };
  s0 -> s3 [0, 65535] { R17445 += 1, R17383 += 1, R17048 += 1, R17049 += 1 };
  s0 -> s0 [0, 65535] { R17444 += 1, R17445 += 1 };
  s1 -> s1 [0, 65535] { R17445 += 1, R17382 += 1, R17383 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R17445 += 1, R17383 += 1 };
  s1 -> s3 [0, 65535] { R17445 += 1, R17383 += 1, R17048 += 1, R17049 += 1 };
  s2 -> s4 [0, 65535] { R17445 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R17445 += 1, R17383 += 1 };
  s3 -> s4 [0, 65535] { R17445 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R17445 += 1, R17383 += 1 };
  s3 -> s3 [0, 65535] { R17445 += 1, R17383 += 1, R17048 += 1, R17049 += 1 };
  s4 -> s4 [0, 65535] { R17445 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 87] { R17447 += 1, R17385 += 1, R17365 += 1 };
  s0 -> s2 [0, 65535] { R17447 += 1, R17384 += 1, R17385 += 1 };
  s0 -> s0 [0, 65535] { R17446 += 1, R17447 += 1 };
  s0 -> s1 [0, 65535] { R17447 += 1, R17385 += 1 };
  s0 -> s1 [91, 65535] { R17447 += 1, R17385 += 1, R17365 += 1 };
  s1 -> s1 [0, 87] { R17447 += 1, R17385 += 1, R17365 += 1 };
  s1 -> s1 [0, 65535] { R17447 += 1, R17385 += 1 };
  s1 -> s4 [0, 65535] { R17447 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [91, 65535] { R17447 += 1, R17385 += 1, R17365 += 1 };
  s2 -> s1 [0, 87] { R17447 += 1, R17385 += 1, R17365 += 1 };
  s2 -> s2 [0, 65535] { R17447 += 1, R17384 += 1, R17385 += 1 };
  s2 -> s1 [0, 65535] { R17447 += 1, R17385 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [91, 65535] { R17447 += 1, R17385 += 1, R17365 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R17447 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R17449 += 1, R17404 += 1, R17405 += 1 };
  s0 -> s0 [0, 65535] { R17448 += 1, R17449 += 1 };
  s0 -> s2 [0, 65535] { R17449 += 1, R17405 += 1, R18 += 1 };
  s1 -> s1 [0, 65535] { R17449 += 1, R17404 += 1, R17405 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R17449 += 1, R17405 += 1, R18 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R17449 += 1, R17405 += 1, R18 += 1 };
  s2 -> s4 [0, 65535] { R17449 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R17449 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 75] { R17451 += 1, R17407 += 1 };
  s0 -> s2 [0, 65535] { R17451 += 1, R17406 += 1, R17407 += 1 };
  s0 -> s0 [0, 65535] { R17450 += 1, R17451 += 1 };
  s0 -> s3 [76, 76] { R17451 += 1, R17407 += 1 };
  s0 -> s4 [76, 76] { R17451 += 1, R17407 += 1 };
  s0 -> s5 [87, 87] { R17451 += 1, R17407 += 1 };
  s0 -> s1 [88, 65535] { R17451 += 1, R17407 += 1 };
  s1 -> s1 [0, 75] { R17451 += 1, R17407 += 1 };
  s1 -> s3 [76, 76] { R17451 += 1, R17407 += 1 };
  s1 -> s4 [76, 76] { R17451 += 1, R17407 += 1 };
  s1 -> s5 [87, 87] { R17451 += 1, R17407 += 1 };
  s1 -> s1 [88, 65535] { R17451 += 1, R17407 += 1 };
  s2 -> s1 [0, 75] { R17451 += 1, R17407 += 1 };
  s2 -> s2 [0, 65535] { R17451 += 1, R17406 += 1, R17407 += 1 };
  s2 -> s3 [76, 76] { R17451 += 1, R17407 += 1 };
  s2 -> s4 [76, 76] { R17451 += 1, R17407 += 1 };
  s2 -> s5 [87, 87] { R17451 += 1, R17407 += 1 };
  s2 -> s1 [88, 65535] { R17451 += 1, R17407 += 1 };
  s4 -> s4 [0, 76] { R17451 += 1, R17407 += 1 };
  s4 -> s8 [87, 87] { R17451 += 1, R17407 += 1 };
  s4 -> s4 [88, 65535] { R17451 += 1, R17407 += 1 };
  s5 -> s5 [0, 75] { R17451 += 1, R17407 += 1 };
  s5 -> s5 [0, 65535] { R17451 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [76, 76] { R17451 += 1, R17407 += 1 };
  s5 -> s8 [76, 76] { R17451 += 1, R17407 += 1 };
  s5 -> s5 [87, 65535] { R17451 += 1, R17407 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R17451 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 76] { R17451 += 1, R17407 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R17451 += 1 };
  s8 -> s8 [87, 65535] { R17451 += 1, R17407 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 75] { R17453 += 1, R17409 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R17452 += 1, R17453 += 1 };
  s0 -> s2 [0, 65535] { R17453 += 1, R17408 += 1, R17409 += 1 };
  s0 -> s3 [76, 76] { R17453 += 1, R17409 += 1, R66 += 1 };
  s0 -> s4 [76, 76] { R17453 += 1, R17409 += 1, R66 += 1 };
  s0 -> s1 [77, 65535] { R17453 += 1, R17409 += 1, R66 += 1 };
  s1 -> s1 [0, 75] { R17453 += 1, R17409 += 1, R66 += 1 };
  s1 -> s1 [0, 65535] { R17453 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [76, 76] { R17453 += 1, R17409 += 1, R66 += 1 };
  s1 -> s4 [76, 76] { R17453 += 1, R17409 += 1, R66 += 1 };
  s1 -> s1 [77, 65535] { R17453 += 1, R17409 += 1, R66 += 1 };
  s2 -> s1 [0, 75] { R17453 += 1, R17409 += 1, R66 += 1 };
  s2 -> s2 [0, 65535] { R17453 += 1, R17408 += 1, R17409 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [76, 76] { R17453 += 1, R17409 += 1, R66 += 1 };
  s2 -> s4 [76, 76] { R17453 += 1, R17409 += 1, R66 += 1 };
  s2 -> s1 [77, 65535] { R17453 += 1, R17409 += 1, R66 += 1 };
  s3 -> s3 [0, 65535] { R17453 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R17453 += 1 };
  s4 -> s4 [0, 65535] { R17453 += 1, R17409 += 1, R66 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R17453 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 75] { R17455 += 1, R17411 += 1, R68 += 1 };
  s0 -> s2 [0, 65535] { R17455 += 1, R17410 += 1, R17411 += 1 };
  s0 -> s0 [0, 65535] { R17454 += 1, R17455 += 1 };
  s0 -> s3 [76, 76] { R17455 += 1, R17411 += 1, R68 += 1 };
  s0 -> s4 [76, 76] { R17455 += 1, R17411 += 1, R68 += 1 };
  s0 -> s1 [77, 65535] { R17455 += 1, R17411 += 1, R68 += 1 };
  s1 -> s1 [0, 75] { R17455 += 1, R17411 += 1, R68 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R17455 += 1 };
  s1 -> s3 [76, 76] { R17455 += 1, R17411 += 1, R68 += 1 };
  s1 -> s4 [76, 76] { R17455 += 1, R17411 += 1, R68 += 1 };
  s1 -> s1 [77, 65535] { R17455 += 1, R17411 += 1, R68 += 1 };
  s2 -> s1 [0, 75] { R17455 += 1, R17411 += 1, R68 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R17455 += 1, R17410 += 1, R17411 += 1 };
  s2 -> s3 [76, 76] { R17455 += 1, R17411 += 1, R68 += 1 };
  s2 -> s4 [76, 76] { R17455 += 1, R17411 += 1, R68 += 1 };
  s2 -> s1 [77, 65535] { R17455 += 1, R17411 += 1, R68 += 1 };
  s3 -> s3 [0, 65535] { R17455 += 1, R17411 += 1, R68 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R17455 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R17455 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R17455 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 75] { R17457 += 1, R17413 += 1, R11523 += 1 };
  s0 -> s2 [0, 75] { R17457 += 1, R17413 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s3 [0, 65535] { R17457 += 1, R17412 += 1, R17413 += 1 };
  s0 -> s0 [0, 65535] { R17456 += 1, R17457 += 1 };
  s0 -> s4 [76, 76] { R17457 += 1, R17413 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s5 [76, 76] { R17457 += 1, R17413 += 1, R11523 += 1 };
  s0 -> s6 [76, 76] { R17457 += 1, R17413 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s7 [76, 76] { R17457 += 1, R17413 += 1, R11523 += 1 };
  s0 -> s1 [77, 86] { R17457 += 1, R17413 += 1, R11523 += 1 };
  s0 -> s2 [77, 65535] { R17457 += 1, R17413 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s1 [88, 65535] { R17457 += 1, R17413 += 1, R11523 += 1 };
  s1 -> s1 [0, 75] { R17457 += 1, R17413 += 1, R11523 += 1 };
  s1 -> s1 [0, 65535] { R17457 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s5 [76, 76] { R17457 += 1, R17413 += 1 };
  s1 -> s7 [76, 76] { R17457 += 1, R17413 += 1 };
  s1 -> s1 [77, 86] { R17457 += 1, R17413 += 1, R11523 += 1 };
  s1 -> s1 [77, 65535] { R17457 += 1, R17413 += 1 };
  s1 -> s1 [88, 65535] { R17457 += 1, R17413 += 1, R11523 += 1 };
  s2 -> s1 [0, 75] { R17457 += 1, R17413 += 1, R11523 += 1 };
  s2 -> s2 [0, 75] { R17457 += 1, R17413 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s4 [76, 76] { R17457 += 1, R17413 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s5 [76, 76] { R17457 += 1, R17413 += 1, R11523 += 1 };
  s2 -> s6 [76, 76] { R17457 += 1, R17413 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s7 [76, 76] { R17457 += 1, R17413 += 1, R11523 += 1 };
  s2 -> s1 [77, 86] { R17457 += 1, R17413 += 1, R11523 += 1 };
  s2 -> s2 [77, 65535] { R17457 += 1, R17413 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s1 [88, 65535] { R17457 += 1, R17413 += 1, R11523 += 1 };
  s3 -> s1 [0, 75] { R17457 += 1, R17413 += 1, R11523 += 1 };
  s3 -> s2 [0, 75] { R17457 += 1, R17413 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s3 [0, 65535] { R17457 += 1, R17412 += 1, R17413 += 1 };
  s3 -> s4 [76, 76] { R17457 += 1, R17413 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s5 [76, 76] { R17457 += 1, R17413 += 1, R11523 += 1 };
  s3 -> s6 [76, 76] { R17457 += 1, R17413 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s7 [76, 76] { R17457 += 1, R17413 += 1, R11523 += 1 };
  s3 -> s1 [77, 86] { R17457 += 1, R17413 += 1, R11523 += 1 };
  s3 -> s2 [77, 65535] { R17457 += 1, R17413 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s1 [88, 65535] { R17457 += 1, R17413 += 1, R11523 += 1 };
  s4 -> s5 [0, 86] { R17457 += 1, R17413 += 1, R11523 += 1 };
  s4 -> s4 [0, 65535] { R17457 += 1, R17413 += 1, R11522 += 1, R11523 += 1 };
  s4 -> s5 [88, 65535] { R17457 += 1, R17413 += 1, R11523 += 1 };
  s5 -> s5 [0, 86] { R17457 += 1, R17413 += 1, R11523 += 1 };
  s5 -> s9 [0, 65535] { R17457 += 1 };
  s5 -> s5 [0, 65535] { R17457 += 1, R17413 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [88, 65535] { R17457 += 1, R17413 += 1, R11523 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R17457 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R17457 += 1 };
  s9 -> s8 [0, 65535];
  accepting s8, s5, s9, s1, s7;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 75] { R17459 += 1, R17415 += 1, R15343 += 1, R15344 += 1 };
  s0 -> s2 [0, 75] { R17459 += 1, R17415 += 1, R15342 += 1, R15343 += 1 };
  s0 -> s0 [0, 65535] { R17458 += 1, R17459 += 1 };
  s0 -> s3 [0, 65535] { R17459 += 1, R17414 += 1, R17415 += 1 };
  s0 -> s4 [76, 76] { R17459 += 1, R17415 += 1, R15342 += 1, R15343 += 1 };
  s0 -> s5 [76, 76] { R17459 += 1, R17415 += 1, R15342 += 1, R15343 += 1 };
  s0 -> s6 [76, 76] { R17459 += 1, R17415 += 1, R15343 += 1, R15344 += 1 };
  s0 -> s7 [76, 76] { R17459 += 1, R17415 += 1, R15343 += 1, R15344 += 1 };
  s0 -> s1 [77, 65535] { R17459 += 1, R17415 += 1, R15343 += 1, R15344 += 1 };
  s0 -> s2 [77, 65535] { R17459 += 1, R17415 += 1, R15342 += 1, R15343 += 1 };
  s1 -> s1 [0, 75] { R17459 += 1, R17415 += 1, R15343 += 1, R15344 += 1 };
  s1 -> s1 [0, 65535] { R17459 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s6 [76, 76] { R17459 += 1, R17415 += 1, R15343 += 1, R15344 += 1 };
  s1 -> s7 [76, 76] { R17459 += 1, R17415 += 1, R15343 += 1, R15344 += 1 };
  s1 -> s1 [77, 65535] { R17459 += 1, R17415 += 1, R15343 += 1, R15344 += 1 };
  s2 -> s1 [0, 75] { R17459 += 1, R17415 += 1, R15343 += 1, R15344 += 1 };
  s2 -> s2 [0, 75] { R17459 += 1, R17415 += 1, R15342 += 1, R15343 += 1 };
  s2 -> s4 [76, 76] { R17459 += 1, R17415 += 1, R15342 += 1, R15343 += 1 };
  s2 -> s5 [76, 76] { R17459 += 1, R17415 += 1, R15342 += 1, R15343 += 1 };
  s2 -> s6 [76, 76] { R17459 += 1, R17415 += 1, R15343 += 1, R15344 += 1 };
  s2 -> s7 [76, 76] { R17459 += 1, R17415 += 1, R15343 += 1, R15344 += 1 };
  s2 -> s1 [77, 65535] { R17459 += 1, R17415 += 1, R15343 += 1, R15344 += 1 };
  s2 -> s2 [77, 65535] { R17459 += 1, R17415 += 1, R15342 += 1, R15343 += 1 };
  s3 -> s1 [0, 75] { R17459 += 1, R17415 += 1, R15343 += 1, R15344 += 1 };
  s3 -> s2 [0, 75] { R17459 += 1, R17415 += 1, R15342 += 1, R15343 += 1 };
  s3 -> s3 [0, 65535] { R17459 += 1, R17414 += 1, R17415 += 1 };
  s3 -> s4 [76, 76] { R17459 += 1, R17415 += 1, R15342 += 1, R15343 += 1 };
  s3 -> s5 [76, 76] { R17459 += 1, R17415 += 1, R15342 += 1, R15343 += 1 };
  s3 -> s6 [76, 76] { R17459 += 1, R17415 += 1, R15343 += 1, R15344 += 1 };
  s3 -> s7 [76, 76] { R17459 += 1, R17415 += 1, R15343 += 1, R15344 += 1 };
  s3 -> s1 [77, 65535] { R17459 += 1, R17415 += 1, R15343 += 1, R15344 += 1 };
  s3 -> s2 [77, 65535] { R17459 += 1, R17415 += 1, R15342 += 1, R15343 += 1 };
  s4 -> s4 [0, 65535] { R17459 += 1, R17415 += 1, R15342 += 1, R15343 += 1 };
  s4 -> s7 [0, 65535] { R17459 += 1, R17415 += 1, R15343 += 1, R15344 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R17459 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R17459 += 1 };
  s7 -> s7 [0, 65535] { R17459 += 1, R17415 += 1, R15343 += 1, R15344 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R17459 += 1 };
  accepting s8, s9, s6, s1, s7;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 75] { R17461 += 1, R17417 += 1, R16618 += 1, R16619 += 1 };
  s0 -> s2 [0, 75] { R17461 += 1, R17417 += 1, R16619 += 1 };
  s0 -> s0 [0, 65535] { R17460 += 1, R17461 += 1 };
  s0 -> s3 [0, 65535] { R17461 += 1, R17416 += 1, R17417 += 1 };
  s0 -> s4 [76, 76] { R17461 += 1, R17417 += 1, R16619 += 1 };
  s0 -> s5 [76, 76] { R17461 += 1, R17417 += 1, R16619 += 1 };
  s0 -> s6 [76, 76] { R17461 += 1, R17417 += 1, R16618 += 1, R16619 += 1 };
  s0 -> s7 [76, 76] { R17461 += 1, R17417 += 1, R16618 += 1, R16619 += 1 };
  s0 -> s2 [77, 87] { R17461 += 1, R17417 += 1, R16619 += 1 };
  s0 -> s1 [77, 65535] { R17461 += 1, R17417 += 1, R16618 += 1, R16619 += 1 };
  s0 -> s2 [91, 65535] { R17461 += 1, R17417 += 1, R16619 += 1 };
  s1 -> s1 [0, 75] { R17461 += 1, R17417 += 1, R16618 += 1, R16619 += 1 };
  s1 -> s2 [0, 75] { R17461 += 1, R17417 += 1, R16619 += 1 };
  s1 -> s4 [76, 76] { R17461 += 1, R17417 += 1, R16619 += 1 };
  s1 -> s5 [76, 76] { R17461 += 1, R17417 += 1, R16619 += 1 };
  s1 -> s6 [76, 76] { R17461 += 1, R17417 += 1, R16618 += 1, R16619 += 1 };
  s1 -> s7 [76, 76] { R17461 += 1, R17417 += 1, R16618 += 1, R16619 += 1 };
  s1 -> s2 [77, 87] { R17461 += 1, R17417 += 1, R16619 += 1 };
  s1 -> s1 [77, 65535] { R17461 += 1, R17417 += 1, R16618 += 1, R16619 += 1 };
  s1 -> s2 [91, 65535] { R17461 += 1, R17417 += 1, R16619 += 1 };
  s2 -> s2 [0, 75] { R17461 += 1, R17417 += 1, R16619 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R17461 += 1 };
  s2 -> s4 [76, 76] { R17461 += 1, R17417 += 1, R16619 += 1 };
  s2 -> s5 [76, 76] { R17461 += 1, R17417 += 1, R16619 += 1 };
  s2 -> s2 [77, 87] { R17461 += 1, R17417 += 1, R16619 += 1 };
  s2 -> s2 [91, 65535] { R17461 += 1, R17417 += 1, R16619 += 1 };
  s3 -> s1 [0, 75] { R17461 += 1, R17417 += 1, R16618 += 1, R16619 += 1 };
  s3 -> s2 [0, 75] { R17461 += 1, R17417 += 1, R16619 += 1 };
  s3 -> s3 [0, 65535] { R17461 += 1, R17416 += 1, R17417 += 1 };
  s3 -> s4 [76, 76] { R17461 += 1, R17417 += 1, R16619 += 1 };
  s3 -> s5 [76, 76] { R17461 += 1, R17417 += 1, R16619 += 1 };
  s3 -> s6 [76, 76] { R17461 += 1, R17417 += 1, R16618 += 1, R16619 += 1 };
  s3 -> s7 [76, 76] { R17461 += 1, R17417 += 1, R16618 += 1, R16619 += 1 };
  s3 -> s2 [77, 87] { R17461 += 1, R17417 += 1, R16619 += 1 };
  s3 -> s1 [77, 65535] { R17461 += 1, R17417 += 1, R16618 += 1, R16619 += 1 };
  s3 -> s2 [91, 65535] { R17461 += 1, R17417 += 1, R16619 += 1 };
  s4 -> s4 [0, 87] { R17461 += 1, R17417 += 1, R16619 += 1 };
  s4 -> s4 [0, 65535] { R17461 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [91, 65535] { R17461 += 1, R17417 += 1, R16619 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R17461 += 1 };
  s7 -> s4 [0, 87] { R17461 += 1, R17417 += 1, R16619 += 1 };
  s7 -> s7 [0, 65535] { R17461 += 1, R17417 += 1, R16618 += 1, R16619 += 1 };
  s7 -> s4 [91, 65535] { R17461 += 1, R17417 += 1, R16619 += 1 };
  s8 -> s8 [0, 65535];
  accepting s2, s4, s5, s8;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R17463 += 1, R17419 += 1, R17044 += 1, R17045 += 1 };
  s0 -> s2 [0, 75] { R17463 += 1, R17419 += 1, R17045 += 1, R17046 += 1 };
  s0 -> s0 [0, 65535] { R17462 += 1, R17463 += 1 };
  s0 -> s3 [0, 65535] { R17463 += 1, R17418 += 1, R17419 += 1 };
  s0 -> s4 [76, 76] { R17463 += 1, R17419 += 1, R17045 += 1, R17046 += 1 };
  s0 -> s5 [76, 76] { R17463 += 1, R17419 += 1, R17044 += 1, R17045 += 1 };
  s0 -> s6 [76, 76] { R17463 += 1, R17419 += 1, R17045 += 1, R17046 += 1 };
  s0 -> s7 [76, 76] { R17463 += 1, R17419 += 1, R17044 += 1, R17045 += 1 };
  s0 -> s1 [77, 65535] { R17463 += 1, R17419 += 1, R17044 += 1, R17045 += 1 };
  s0 -> s2 [77, 65535] { R17463 += 1, R17419 += 1, R17045 += 1, R17046 += 1 };
  s1 -> s1 [0, 75] { R17463 += 1, R17419 += 1, R17044 += 1, R17045 += 1 };
  s1 -> s2 [0, 75] { R17463 += 1, R17419 += 1, R17045 += 1, R17046 += 1 };
  s1 -> s4 [76, 76] { R17463 += 1, R17419 += 1, R17045 += 1, R17046 += 1 };
  s1 -> s5 [76, 76] { R17463 += 1, R17419 += 1, R17044 += 1, R17045 += 1 };
  s1 -> s6 [76, 76] { R17463 += 1, R17419 += 1, R17045 += 1, R17046 += 1 };
  s1 -> s7 [76, 76] { R17463 += 1, R17419 += 1, R17044 += 1, R17045 += 1 };
  s1 -> s1 [77, 65535] { R17463 += 1, R17419 += 1, R17044 += 1, R17045 += 1 };
  s1 -> s2 [77, 65535] { R17463 += 1, R17419 += 1, R17045 += 1, R17046 += 1 };
  s2 -> s2 [0, 75] { R17463 += 1, R17419 += 1, R17045 += 1, R17046 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R17463 += 1 };
  s2 -> s4 [76, 76] { R17463 += 1, R17419 += 1, R17045 += 1, R17046 += 1 };
  s2 -> s6 [76, 76] { R17463 += 1, R17419 += 1, R17045 += 1, R17046 += 1 };
  s2 -> s2 [77, 65535] { R17463 += 1, R17419 += 1, R17045 += 1, R17046 += 1 };
  s3 -> s1 [0, 75] { R17463 += 1, R17419 += 1, R17044 += 1, R17045 += 1 };
  s3 -> s2 [0, 75] { R17463 += 1, R17419 += 1, R17045 += 1, R17046 += 1 };
  s3 -> s3 [0, 65535] { R17463 += 1, R17418 += 1, R17419 += 1 };
  s3 -> s4 [76, 76] { R17463 += 1, R17419 += 1, R17045 += 1, R17046 += 1 };
  s3 -> s5 [76, 76] { R17463 += 1, R17419 += 1, R17044 += 1, R17045 += 1 };
  s3 -> s6 [76, 76] { R17463 += 1, R17419 += 1, R17045 += 1, R17046 += 1 };
  s3 -> s7 [76, 76] { R17463 += 1, R17419 += 1, R17044 += 1, R17045 += 1 };
  s3 -> s1 [77, 65535] { R17463 += 1, R17419 += 1, R17044 += 1, R17045 += 1 };
  s3 -> s2 [77, 65535] { R17463 += 1, R17419 += 1, R17045 += 1, R17046 += 1 };
  s4 -> s4 [0, 65535] { R17463 += 1 };
  s4 -> s8 [0, 65535];
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R17463 += 1, R17419 += 1, R17045 += 1, R17046 += 1 };
  s6 -> s9 [0, 65535] { R17463 += 1 };
  s7 -> s6 [0, 65535] { R17463 += 1, R17419 += 1, R17045 += 1, R17046 += 1 };
  s7 -> s7 [0, 65535] { R17463 += 1, R17419 += 1, R17044 += 1, R17045 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R17463 += 1 };
  accepting s4, s8, s2, s9, s6;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 75] { R17465 += 1, R17421 += 1, R17363 += 1 };
  s0 -> s2 [0, 75] { R17465 += 1, R17421 += 1, R17362 += 1, R17363 += 1 };
  s0 -> s0 [0, 65535] { R17464 += 1, R17465 += 1 };
  s0 -> s3 [0, 65535] { R17465 += 1, R17420 += 1, R17421 += 1 };
  s0 -> s4 [76, 76] { R17465 += 1, R17421 += 1, R17363 += 1 };
  s0 -> s5 [76, 76] { R17465 += 1, R17421 += 1, R17363 += 1 };
  s0 -> s6 [76, 76] { R17465 += 1, R17421 += 1, R17362 += 1, R17363 += 1 };
  s0 -> s7 [76, 76] { R17465 += 1, R17421 += 1, R17362 += 1, R17363 += 1 };
  s0 -> s1 [77, 86] { R17465 += 1, R17421 += 1, R17363 += 1 };
  s0 -> s2 [77, 65535] { R17465 += 1, R17421 += 1, R17362 += 1, R17363 += 1 };
  s0 -> s8 [87, 87] { R17465 += 1, R17421 += 1, R17363 += 1 };
  s0 -> s1 [91, 65535] { R17465 += 1, R17421 += 1, R17363 += 1 };
  s1 -> s1 [0, 75] { R17465 += 1, R17421 += 1, R17363 += 1 };
  s1 -> s4 [76, 76] { R17465 += 1, R17421 += 1 };
  s1 -> s5 [76, 76] { R17465 += 1, R17421 += 1 };
  s1 -> s1 [77, 86] { R17465 += 1, R17421 += 1, R17363 += 1 };
  s1 -> s1 [77, 65535] { R17465 += 1, R17421 += 1 };
  s1 -> s8 [87, 87] { R17465 += 1, R17421 += 1, R17363 += 1 };
  s1 -> s1 [91, 65535] { R17465 += 1, R17421 += 1, R17363 += 1 };
  s2 -> s1 [0, 75] { R17465 += 1, R17421 += 1, R17363 += 1 };
  s2 -> s2 [0, 75] { R17465 += 1, R17421 += 1, R17362 += 1, R17363 += 1 };
  s2 -> s4 [76, 76] { R17465 += 1, R17421 += 1, R17363 += 1 };
  s2 -> s5 [76, 76] { R17465 += 1, R17421 += 1, R17363 += 1 };
  s2 -> s6 [76, 76] { R17465 += 1, R17421 += 1, R17362 += 1, R17363 += 1 };
  s2 -> s7 [76, 76] { R17465 += 1, R17421 += 1, R17362 += 1, R17363 += 1 };
  s2 -> s1 [77, 86] { R17465 += 1, R17421 += 1, R17363 += 1 };
  s2 -> s2 [77, 65535] { R17465 += 1, R17421 += 1, R17362 += 1, R17363 += 1 };
  s2 -> s8 [87, 87] { R17465 += 1, R17421 += 1, R17363 += 1 };
  s2 -> s1 [91, 65535] { R17465 += 1, R17421 += 1, R17363 += 1 };
  s3 -> s1 [0, 75] { R17465 += 1, R17421 += 1, R17363 += 1 };
  s3 -> s2 [0, 75] { R17465 += 1, R17421 += 1, R17362 += 1, R17363 += 1 };
  s3 -> s3 [0, 65535] { R17465 += 1, R17420 += 1, R17421 += 1 };
  s3 -> s4 [76, 76] { R17465 += 1, R17421 += 1, R17363 += 1 };
  s3 -> s5 [76, 76] { R17465 += 1, R17421 += 1, R17363 += 1 };
  s3 -> s6 [76, 76] { R17465 += 1, R17421 += 1, R17362 += 1, R17363 += 1 };
  s3 -> s7 [76, 76] { R17465 += 1, R17421 += 1, R17362 += 1, R17363 += 1 };
  s3 -> s1 [77, 86] { R17465 += 1, R17421 += 1, R17363 += 1 };
  s3 -> s2 [77, 65535] { R17465 += 1, R17421 += 1, R17362 += 1, R17363 += 1 };
  s3 -> s8 [87, 87] { R17465 += 1, R17421 += 1, R17363 += 1 };
  s3 -> s1 [91, 65535] { R17465 += 1, R17421 += 1, R17363 += 1 };
  s4 -> s4 [0, 86] { R17465 += 1, R17421 += 1, R17363 += 1 };
  s4 -> s4 [0, 65535] { R17465 += 1, R17421 += 1 };
  s4 -> s10 [87, 87] { R17465 += 1, R17421 += 1, R17363 += 1 };
  s4 -> s4 [91, 65535] { R17465 += 1, R17421 += 1, R17363 += 1 };
  s6 -> s4 [0, 86] { R17465 += 1, R17421 += 1, R17363 += 1 };
  s6 -> s6 [0, 65535] { R17465 += 1, R17421 += 1, R17362 += 1, R17363 += 1 };
  s6 -> s10 [87, 87] { R17465 += 1, R17421 += 1, R17363 += 1 };
  s6 -> s4 [91, 65535] { R17465 += 1, R17421 += 1, R17363 += 1 };
  s8 -> s8 [0, 75] { R17465 += 1, R17421 += 1, R17363 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R17465 += 1 };
  s8 -> s10 [76, 76] { R17465 += 1, R17421 += 1 };
  s8 -> s11 [76, 76] { R17465 += 1, R17421 += 1 };
  s8 -> s8 [77, 87] { R17465 += 1, R17421 += 1, R17363 += 1 };
  s8 -> s8 [77, 65535] { R17465 += 1, R17421 += 1 };
  s8 -> s8 [91, 65535] { R17465 += 1, R17421 += 1, R17363 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 87] { R17465 += 1, R17421 += 1, R17363 += 1 };
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R17465 += 1, R17421 += 1 };
  s10 -> s12 [0, 65535] { R17465 += 1 };
  s10 -> s10 [91, 65535] { R17465 += 1, R17421 += 1, R17363 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R17465 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R17465 += 1 };
  accepting s12, s8, s9, s10, s11;
};
};
synchronised {  // Automata constraining P63
automaton P63_0 {
  init s0;
  s0 -> s1 [119, 119];
  accepting s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [108, 108];
  accepting s1;
};
};
constraint R1 = R17381 && R2 = R17465 && R20 - R17465 = -1 && R21 = R17465 && R22 - R17465 = -1 && R23 = R17465 && R24 = 0 && R25 = 1 && R26 = 0 && R27 = 1 && R38 + R67 + R66 + -1*R16621 + -1*R16619 - R53 = 0 && R52 + R16620 + R16618 = 0 && R17380 = 0 && R17406 = 0 && R17407 = 0 && R17412 = 0 && R17413 = 0 && R17414 = 0 && R17415 = 0 && R17416 = 0 && R17417 = 0 && R17418 = 0 && R17419 = 0 && R17420 = 0 && R17421 = 0 && R17422 = 0 && R17423 = R17465 && R17424 = 0 && R17425 = R17465 && R17426 = 0 && R17427 = R17465 && R17428 = 0 && R17429 = R17465 && R17430 = 0 && R17431 = R17465 && R17432 = 0 && R17433 = R17465 && R17434 = 0 && R17435 = R17465 && R17436 = 0 && R17437 = R17465 && R17438 = 0 && R17439 = R17465 && R17440 = 0 && R17441 = R17465 && R17442 = 0 && R17443 = R17465 && R17444 = 0 && R17445 = R17465 && R17446 = 0 && R17447 = R17465 && R17448 = 0 && R17449 = R17465 && R17450 = 0 && R17451 = R17465 && R17452 = 0 && R17453 = R17465 && R17454 = 0 && R17455 = R17465 && R17456 = 0 && R17457 = R17465 && R17458 = 0 && R17459 = R17465 && R17460 = 0 && R17461 = R17465 && R17462 = 0 && R17463 = R17465 && R17464 = 0 && R8 < 1 && R11 < 1 && R12 < 1 && R40 + R69 + R68 < 1 && -1*R16621 + -1*R16619 - R53 < 1 && -1 < R17381 && 0 < R17465 && (R48 + R15347 + R15344 != 0 || ((R42 + R11524 + R11522 != 0 || R43 + R11525 + R11523 + -1*R16621 + -1*R16619 - R53 = 0 || R53 + R16621 + R16619 < 1) && (R42 + R11524 + R11522 = 0 || R53 + R16621 + R16619 < 1))) && (R48 + R15347 + R15344 != 0 || ((R46 + R15345 + R15342 != 0 || R47 + R15346 + R15343 + -1*R16621 + -1*R16619 - R53 = 0 || R53 + R16621 + R16619 < 1) && (R46 + R15345 + R15342 = 0 || R53 + R16621 + R16619 < 1))) && (R17366 != 0 || R17367 = R17381 || (R17 = 0 && R17381 = 0)) && (R17368 != 0 || R17369 = R17381 || (R17 = 0 && R17381 = 0)) && (R17370 != 0 || R17371 = R17381 || (R17 = 0 && R17381 = 0)) && (R17372 != 0 || R17373 = R17381 || (R17 = 0 && R17381 = 0)) && (R17374 != 0 || R17375 = R17381 || (R17 = 0 && R17381 = 0)) && (R17376 != 0 || R17377 = R17381 || (R17 = 0 && R17381 = 0)) && (R17378 != 0 || R17379 = R17381 || (R17 = 0 && R17381 = 0)) && (R17382 != 0 || R17381 = R17383 || (R17 = 0 && R17381 = 0)) && (R17384 != 0 || R17381 = R17385 || (R17 = 0 && R17381 = 0)) && (R18 = 0 || (R17404 = 0 && R17405 = 0)) && (R18 = 0 || (R17408 = 0 && R17409 = 0)) && (R18 = 0 || (R17410 = 0 && R17411 = 0)) && (R19 = 0 || (R17386 = 0 && R17387 = 0)) && (R19 = 0 || (R17388 = 0 && R17389 = 0)) && (R19 = 0 || (R17390 = 0 && R17391 = 0)) && (R19 = 0 || (R17392 = 0 && R17393 = 0)) && (R19 = 0 || (R17394 = 0 && R17395 = 0)) && (R19 = 0 || (R17396 = 0 && R17397 = 0)) && (R19 = 0 || (R17398 = 0 && R17399 = 0)) && (R19 = 0 || (R17400 = 0 && R17401 = 0)) && (R19 = 0 || (R17402 = 0 && R17403 = 0)) && (R48 + R15347 + R15344 = 0 || (R42 + R11524 + R11522 = 0 && R43 + R11525 + R11523 + -1*R16621 + -1*R16619 - R53 = 0)) && (R48 + R15347 + R15344 = 0 || (R46 + R15345 + R15342 = 0 && R47 + R15346 + R15343 + -1*R16621 + -1*R16619 - R53 = 0)) && (R58 + R17049 + R17046 = 0 || (R56 + R17047 + R17044 = 0 && R57 + R17048 + R17045 = 0)) && (R58 + R17049 + R17046 = 0 || (R62 + R17364 + R17362 = 0 && R63 + R17365 + R17363 = 0)) && (R17366 = 0 || (R17 = 0 && R17381 = 0)) && (R17368 = 0 || (R17 = 0 && R17381 = 0)) && (R17370 = 0 || (R17 = 0 && R17381 = 0)) && (R17372 = 0 || (R17 = 0 && R17381 = 0)) && (R17374 = 0 || (R17 = 0 && R17381 = 0)) && (R17376 = 0 || (R17 = 0 && R17381 = 0)) && (R17378 = 0 || (R17 = 0 && R17381 = 0)) && (R17382 = 0 || (R17 = 0 && R17381 = 0)) && (R17384 = 0 || (R17 = 0 && R17381 = 0));
// End of Parikh automata intersection problem
