// Parikh automata intersection problem, generated by OSTRICH+
counter int R100, R101, R102, R103, R104, R105, R106, R107, R108, R109, R11, R110, R111, R112, R113, R114, R115, R116, R117, R118, R119, R12, R120, R121, R122, R123, R18, R19, R190, R191, R192, R193, R194, R195, R196, R197, R198, R199, R2, R20, R200, R201, R202, R203, R204, R205, R206, R207, R208, R209, R21, R210, R211, R212, R213, R214, R215, R216, R217, R218, R219, R22, R220, R221, R222, R223, R224, R225, R226, R227, R228, R229, R23, R230, R231, R232, R233, R234, R235, R236, R237, R238, R239, R24, R240, R241, R242, R243, R244, R245, R246, R247, R248, R249, R25, R250, R251, R252, R253, R254, R255, R26, R27, R3, R4, R58, R59, R60, R61, R62, R63, R64, R65, R66, R67, R68, R69, R70, R71, R72, R73, R74, R75, R76, R77, R78, R79, R80, R81, R82, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96, R97, R98, R99;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [73, 73];
  s0 -> s0 [74, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [73, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R2 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R11 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 72];
  s0 -> s0 [0, 65535] { R12 += 1 };
  s0 -> s2 [73, 73];
  s0 -> s1 [74, 65535];
  s1 -> s1 [0, 72];
  s1 -> s2 [73, 73];
  s1 -> s1 [74, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R21 += 1 };
  s0 -> s0 [0, 65535] { R20 += 1, R21 += 1 };
  s0 -> s2 [9, 13] { R21 += 1 };
  s0 -> s1 [14, 31] { R21 += 1 };
  s0 -> s2 [32, 32] { R21 += 1 };
  s0 -> s1 [33, 65535] { R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R21 += 1 };
  s2 -> s1 [0, 65535] { R21 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s0 [0, 65535] { R22 += 1, R23 += 1 };
  s0 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R25 += 1 };
  s0 -> s0 [0, 65535] { R24 += 1, R25 += 1 };
  s0 -> s2 [9, 13] { R25 += 1 };
  s0 -> s1 [14, 31] { R25 += 1 };
  s0 -> s2 [32, 32] { R25 += 1 };
  s0 -> s1 [33, 65535] { R25 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R25 += 1 };
  s2 -> s1 [0, 65535] { R25 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R26 += 1, R27 += 1 };
  s0 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s1 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 72] { R199 += 1 };
  s0 -> s0 [0, 65535] { R198 += 1, R199 += 1 };
  s0 -> s1 [74, 65535] { R199 += 1 };
  s1 -> s1 [0, 72] { R199 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s1 [74, 65535] { R199 += 1 };
  accepting s0, s1;
};
automaton value2_9 {
  init s0;
  s0 -> s0 [0, 65535] { R200 += 1, R201 += 1 };
  s0 -> s1 [0, 65535] { R201 += 1, R18 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R201 += 1, R18 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 73] { R203 += 1 };
  s0 -> s0 [0, 65535] { R202 += 1, R203 += 1 };
  s0 -> s2 [74, 74] { R203 += 1 };
  s0 -> s1 [75, 65535] { R203 += 1 };
  s1 -> s1 [0, 73] { R203 += 1 };
  s1 -> s2 [74, 74] { R203 += 1 };
  s1 -> s1 [75, 65535] { R203 += 1 };
  s2 -> s2 [0, 65535] { R203 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_11 {
  init s0;
  s0 -> s0 [0, 65535] { R204 += 1, R205 += 1 };
  s0 -> s1 [0, 65535] { R205 += 1, R59 += 1 };
  s1 -> s1 [0, 65535] { R205 += 1, R59 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 73] { R207 += 1 };
  s0 -> s2 [0, 65535] { R207 += 1, R61 += 1 };
  s0 -> s0 [0, 65535] { R206 += 1, R207 += 1 };
  s0 -> s1 [75, 65535] { R207 += 1 };
  s1 -> s1 [0, 73] { R207 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s1 [75, 65535] { R207 += 1 };
  s2 -> s1 [0, 73] { R207 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R207 += 1, R61 += 1 };
  s2 -> s1 [75, 65535] { R207 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 65535] { R209 += 1, R66 += 1, R67 += 1 };
  s0 -> s2 [0, 65535] { R209 += 1, R65 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R208 += 1, R209 += 1 };
  s1 -> s1 [0, 65535] { R209 += 1, R66 += 1, R67 += 1 };
  s1 -> s4 [0, 65535] { R209 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R209 += 1, R66 += 1, R67 += 1 };
  s2 -> s2 [0, 65535] { R209 += 1, R65 += 1, R66 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R209 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 73] { R211 += 1, R71 += 1 };
  s0 -> s0 [0, 65535] { R210 += 1, R211 += 1 };
  s0 -> s2 [0, 65535] { R211 += 1, R70 += 1, R71 += 1 };
  s0 -> s3 [74, 74] { R211 += 1, R71 += 1 };
  s0 -> s4 [74, 74] { R211 += 1, R71 += 1 };
  s0 -> s1 [77, 65535] { R211 += 1, R71 += 1 };
  s1 -> s1 [0, 73] { R211 += 1, R71 += 1 };
  s1 -> s1 [0, 65535] { R211 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [74, 74] { R211 += 1, R71 += 1 };
  s1 -> s4 [74, 74] { R211 += 1, R71 += 1 };
  s1 -> s1 [77, 65535] { R211 += 1, R71 += 1 };
  s2 -> s1 [0, 73] { R211 += 1, R71 += 1 };
  s2 -> s2 [0, 65535] { R211 += 1, R70 += 1, R71 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [74, 74] { R211 += 1, R71 += 1 };
  s2 -> s4 [74, 74] { R211 += 1, R71 += 1 };
  s2 -> s1 [77, 65535] { R211 += 1, R71 += 1 };
  s3 -> s3 [0, 74] { R211 += 1, R71 += 1 };
  s3 -> s3 [0, 65535] { R211 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [77, 65535] { R211 += 1, R71 += 1 };
  s4 -> s4 [0, 65535] { R211 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 73] { R213 += 1, R75 += 1 };
  s0 -> s2 [0, 65535] { R213 += 1, R74 += 1, R75 += 1 };
  s0 -> s0 [0, 65535] { R212 += 1, R213 += 1 };
  s0 -> s3 [74, 74] { R213 += 1, R75 += 1 };
  s0 -> s1 [75, 65535] { R213 += 1, R75 += 1 };
  s1 -> s1 [0, 73] { R213 += 1, R75 += 1 };
  s1 -> s3 [74, 74] { R213 += 1, R75 += 1 };
  s1 -> s1 [75, 65535] { R213 += 1, R75 += 1 };
  s2 -> s1 [0, 73] { R213 += 1, R75 += 1 };
  s2 -> s2 [0, 65535] { R213 += 1, R74 += 1, R75 += 1 };
  s2 -> s3 [74, 74] { R213 += 1, R75 += 1 };
  s2 -> s1 [75, 65535] { R213 += 1, R75 += 1 };
  s3 -> s3 [0, 65535] { R213 += 1, R75 += 1 };
  s3 -> s4 [0, 65535] { R213 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R213 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 65535] { R215 += 1, R80 += 1, R81 += 1 };
  s0 -> s2 [0, 65535] { R215 += 1, R79 += 1, R80 += 1 };
  s0 -> s0 [0, 65535] { R214 += 1, R215 += 1 };
  s1 -> s1 [0, 65535] { R215 += 1, R80 += 1, R81 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R215 += 1 };
  s2 -> s1 [0, 65535] { R215 += 1, R80 += 1, R81 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R215 += 1, R79 += 1, R80 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R215 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 73] { R217 += 1, R86 += 1 };
  s0 -> s2 [0, 65535] { R217 += 1, R86 += 1, R87 += 1 };
  s0 -> s0 [0, 65535] { R216 += 1, R217 += 1 };
  s0 -> s3 [0, 65535] { R217 += 1, R85 += 1, R86 += 1 };
  s0 -> s1 [75, 65535] { R217 += 1, R86 += 1 };
  s1 -> s1 [0, 73] { R217 += 1, R86 += 1 };
  s1 -> s1 [0, 65535] { R217 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [75, 65535] { R217 += 1, R86 += 1 };
  s2 -> s1 [0, 73] { R217 += 1, R86 += 1 };
  s2 -> s2 [0, 65535] { R217 += 1, R86 += 1, R87 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R217 += 1 };
  s2 -> s1 [75, 65535] { R217 += 1, R86 += 1 };
  s3 -> s1 [0, 73] { R217 += 1, R86 += 1 };
  s3 -> s2 [0, 65535] { R217 += 1, R86 += 1, R87 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R217 += 1, R85 += 1, R86 += 1 };
  s3 -> s1 [75, 65535] { R217 += 1, R86 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R217 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 73] { R219 += 1, R93 += 1, R95 += 1 };
  s0 -> s0 [0, 65535] { R218 += 1, R219 += 1 };
  s0 -> s2 [0, 65535] { R219 += 1, R92 += 1, R93 += 1 };
  s0 -> s3 [0, 65535] { R219 += 1, R93 += 1, R94 += 1, R95 += 1 };
  s0 -> s1 [75, 65535] { R219 += 1, R93 += 1, R95 += 1 };
  s1 -> s1 [0, 73] { R219 += 1, R93 += 1, R95 += 1 };
  s1 -> s1 [0, 65535] { R219 += 1, R93 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R219 += 1 };
  s1 -> s1 [75, 65535] { R219 += 1, R93 += 1, R95 += 1 };
  s2 -> s1 [0, 73] { R219 += 1, R93 += 1, R95 += 1 };
  s2 -> s2 [0, 65535] { R219 += 1, R92 += 1, R93 += 1 };
  s2 -> s3 [0, 65535] { R219 += 1, R93 += 1, R94 += 1, R95 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [75, 65535] { R219 += 1, R93 += 1, R95 += 1 };
  s3 -> s1 [0, 73] { R219 += 1, R93 += 1, R95 += 1 };
  s3 -> s3 [0, 65535] { R219 += 1, R93 += 1, R94 += 1, R95 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R219 += 1 };
  s3 -> s1 [75, 65535] { R219 += 1, R93 += 1, R95 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R219 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s0 [0, 65535] { R220 += 1, R221 += 1 };
  s0 -> s1 [0, 65535] { R221 += 1, R101 += 1, R102 += 1 };
  s0 -> s2 [0, 65535] { R221 += 1, R102 += 1, R103 += 1, R104 += 1 };
  s0 -> s3 [0, 65535] { R221 += 1, R102 += 1, R104 += 1, R105 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R221 += 1, R101 += 1, R102 += 1 };
  s1 -> s2 [0, 65535] { R221 += 1, R102 += 1, R103 += 1, R104 += 1 };
  s1 -> s3 [0, 65535] { R221 += 1, R102 += 1, R104 += 1, R105 += 1 };
  s2 -> s4 [0, 65535] { R221 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R221 += 1, R102 += 1, R103 += 1, R104 += 1 };
  s2 -> s3 [0, 65535] { R221 += 1, R102 += 1, R104 += 1, R105 += 1 };
  s3 -> s4 [0, 65535] { R221 += 1 };
  s3 -> s5 [0, 65535] { R221 += 1, R102 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R221 += 1, R102 += 1, R104 += 1, R105 += 1 };
  s4 -> s4 [0, 65535] { R221 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s4 [0, 65535] { R221 += 1 };
  s5 -> s5 [0, 65535] { R221 += 1, R102 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 74] { R223 += 1, R111 += 1, R113 += 1 };
  s0 -> s2 [0, 65535] { R223 += 1, R110 += 1, R111 += 1 };
  s0 -> s3 [0, 65535] { R223 += 1, R111 += 1, R112 += 1, R113 += 1 };
  s0 -> s0 [0, 65535] { R222 += 1, R223 += 1 };
  s0 -> s1 [76, 65535] { R223 += 1, R111 += 1, R113 += 1 };
  s1 -> s1 [0, 74] { R223 += 1, R111 += 1, R113 += 1 };
  s1 -> s1 [0, 65535] { R223 += 1, R111 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R223 += 1 };
  s1 -> s1 [76, 65535] { R223 += 1, R111 += 1, R113 += 1 };
  s2 -> s1 [0, 74] { R223 += 1, R111 += 1, R113 += 1 };
  s2 -> s2 [0, 65535] { R223 += 1, R110 += 1, R111 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R223 += 1, R111 += 1, R112 += 1, R113 += 1 };
  s2 -> s1 [76, 65535] { R223 += 1, R111 += 1, R113 += 1 };
  s3 -> s1 [0, 74] { R223 += 1, R111 += 1, R113 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R223 += 1, R111 += 1, R112 += 1, R113 += 1 };
  s3 -> s5 [0, 65535] { R223 += 1 };
  s3 -> s1 [76, 65535] { R223 += 1, R111 += 1, R113 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R223 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R225 += 1, R120 += 1, R121 += 1, R122 += 1 };
  s0 -> s0 [0, 65535] { R224 += 1, R225 += 1 };
  s0 -> s2 [0, 65535] { R225 += 1, R120 += 1, R122 += 1, R123 += 1 };
  s0 -> s3 [0, 65535] { R225 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535] { R225 += 1, R120 += 1, R121 += 1, R122 += 1 };
  s1 -> s5 [0, 65535] { R225 += 1 };
  s1 -> s2 [0, 65535] { R225 += 1, R120 += 1, R122 += 1, R123 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R225 += 1 };
  s2 -> s2 [0, 65535] { R225 += 1, R120 += 1, R122 += 1, R123 += 1 };
  s2 -> s6 [0, 65535] { R225 += 1, R120 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R225 += 1, R120 += 1, R121 += 1, R122 += 1 };
  s3 -> s2 [0, 65535] { R225 += 1, R120 += 1, R122 += 1, R123 += 1 };
  s3 -> s3 [0, 65535] { R225 += 1, R119 += 1, R120 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R225 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R225 += 1 };
  s6 -> s6 [0, 65535] { R225 += 1, R120 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 73] { R227 += 1, R195 += 1, R197 += 1 };
  s0 -> s0 [0, 65535] { R226 += 1, R227 += 1 };
  s0 -> s2 [74, 74] { R227 += 1, R195 += 1, R197 += 1 };
  s0 -> s3 [76, 76] { R227 += 1, R195 += 1, R197 += 1 };
  s0 -> s1 [77, 65535] { R227 += 1, R195 += 1, R197 += 1 };
  s1 -> s1 [0, 73] { R227 += 1, R195 += 1, R197 += 1 };
  s1 -> s2 [74, 74] { R227 += 1, R195 += 1, R197 += 1 };
  s1 -> s3 [76, 76] { R227 += 1, R195 += 1, R197 += 1 };
  s1 -> s1 [77, 65535] { R227 += 1, R195 += 1, R197 += 1 };
  s2 -> s2 [0, 74] { R227 += 1, R195 += 1, R197 += 1 };
  s2 -> s7 [76, 76] { R227 += 1, R195 += 1, R197 += 1 };
  s2 -> s2 [77, 65535] { R227 += 1, R195 += 1, R197 += 1 };
  s3 -> s3 [0, 73] { R227 += 1, R195 += 1, R197 += 1 };
  s3 -> s3 [0, 65535] { R227 += 1, R195 += 1 };
  s3 -> s4 [0, 65535] { R227 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [74, 74] { R227 += 1, R195 += 1, R197 += 1 };
  s3 -> s7 [74, 74] { R227 += 1, R195 += 1, R197 += 1 };
  s3 -> s3 [76, 65535] { R227 += 1, R195 += 1, R197 += 1 };
  s4 -> s4 [0, 65535] { R227 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R227 += 1, R195 += 1 };
  s6 -> s4 [0, 65535] { R227 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s7 [0, 74] { R227 += 1, R195 += 1, R197 += 1 };
  s7 -> s7 [0, 65535] { R227 += 1, R195 += 1 };
  s7 -> s4 [0, 65535] { R227 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [76, 65535] { R227 += 1, R195 += 1, R197 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R229 += 1, R19 += 1 };
  s0 -> s0 [0, 65535] { R228 += 1, R229 += 1 };
  s1 -> s1 [0, 65535] { R229 += 1, R19 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 72] { R231 += 1 };
  s0 -> s0 [0, 65535] { R230 += 1, R231 += 1 };
  s0 -> s2 [73, 73] { R231 += 1 };
  s0 -> s3 [73, 73] { R231 += 1 };
  s0 -> s1 [75, 65535] { R231 += 1 };
  s1 -> s1 [0, 72] { R231 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R231 += 1 };
  s1 -> s3 [73, 73] { R231 += 1 };
  s1 -> s1 [75, 65535] { R231 += 1 };
  s2 -> s2 [0, 73] { R231 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [75, 65535] { R231 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 72] { R233 += 1, R58 += 1 };
  s0 -> s0 [0, 65535] { R232 += 1, R233 += 1 };
  s0 -> s2 [73, 73] { R233 += 1, R58 += 1 };
  s0 -> s3 [73, 73] { R233 += 1, R58 += 1 };
  s0 -> s1 [74, 65535] { R233 += 1, R58 += 1 };
  s1 -> s1 [0, 72] { R233 += 1, R58 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R233 += 1, R58 += 1 };
  s1 -> s3 [73, 73] { R233 += 1, R58 += 1 };
  s1 -> s1 [74, 65535] { R233 += 1, R58 += 1 };
  s2 -> s2 [0, 65535] { R233 += 1, R58 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 72] { R235 += 1, R60 += 1 };
  s0 -> s0 [0, 65535] { R234 += 1, R235 += 1 };
  s0 -> s2 [73, 73] { R235 += 1, R60 += 1 };
  s0 -> s3 [73, 73] { R235 += 1, R60 += 1 };
  s0 -> s1 [74, 65535] { R235 += 1, R60 += 1 };
  s1 -> s1 [0, 72] { R235 += 1, R60 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R235 += 1, R60 += 1 };
  s1 -> s3 [73, 73] { R235 += 1, R60 += 1 };
  s1 -> s1 [74, 65535] { R235 += 1, R60 += 1 };
  s2 -> s2 [0, 65535] { R235 += 1, R60 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 72] { R237 += 1, R62 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R236 += 1, R237 += 1 };
  s0 -> s2 [73, 73] { R237 += 1, R62 += 1, R63 += 1 };
  s0 -> s3 [73, 73] { R237 += 1, R62 += 1, R63 += 1 };
  s0 -> s1 [74, 65535] { R237 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 72] { R237 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R237 += 1, R62 += 1, R63 += 1 };
  s1 -> s3 [73, 73] { R237 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [74, 65535] { R237 += 1, R62 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R237 += 1, R62 += 1, R63 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 72] { R239 += 1, R68 += 1, R69 += 1 };
  s0 -> s0 [0, 65535] { R238 += 1, R239 += 1 };
  s0 -> s2 [73, 73] { R239 += 1, R68 += 1, R69 += 1 };
  s0 -> s3 [73, 73] { R239 += 1, R68 += 1, R69 += 1 };
  s0 -> s1 [74, 65535] { R239 += 1, R68 += 1, R69 += 1 };
  s1 -> s1 [0, 72] { R239 += 1, R68 += 1, R69 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R239 += 1, R68 += 1, R69 += 1 };
  s1 -> s3 [73, 73] { R239 += 1, R68 += 1, R69 += 1 };
  s1 -> s1 [74, 65535] { R239 += 1, R68 += 1, R69 += 1 };
  s2 -> s2 [0, 65535] { R239 += 1, R68 += 1, R69 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 72] { R241 += 1, R72 += 1, R73 += 1 };
  s0 -> s0 [0, 65535] { R240 += 1, R241 += 1 };
  s0 -> s2 [73, 73] { R241 += 1, R72 += 1, R73 += 1 };
  s0 -> s3 [73, 73] { R241 += 1, R72 += 1, R73 += 1 };
  s0 -> s1 [74, 65535] { R241 += 1, R72 += 1, R73 += 1 };
  s1 -> s1 [0, 72] { R241 += 1, R72 += 1, R73 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R241 += 1, R72 += 1, R73 += 1 };
  s1 -> s3 [73, 73] { R241 += 1, R72 += 1, R73 += 1 };
  s1 -> s1 [74, 65535] { R241 += 1, R72 += 1, R73 += 1 };
  s2 -> s2 [0, 65535] { R241 += 1, R72 += 1, R73 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 72] { R243 += 1, R76 += 1, R77 += 1 };
  s0 -> s0 [0, 65535] { R242 += 1, R243 += 1 };
  s0 -> s2 [73, 73] { R243 += 1, R76 += 1, R77 += 1 };
  s0 -> s3 [73, 73] { R243 += 1, R76 += 1, R77 += 1 };
  s0 -> s1 [74, 65535] { R243 += 1, R76 += 1, R77 += 1 };
  s1 -> s1 [0, 72] { R243 += 1, R76 += 1, R77 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R243 += 1, R76 += 1, R77 += 1 };
  s1 -> s3 [73, 73] { R243 += 1, R76 += 1, R77 += 1 };
  s1 -> s1 [74, 65535] { R243 += 1, R76 += 1, R77 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R243 += 1, R76 += 1, R77 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 72] { R245 += 1, R82 += 1, R83 += 1 };
  s0 -> s0 [0, 65535] { R244 += 1, R245 += 1 };
  s0 -> s2 [73, 73] { R245 += 1, R82 += 1, R83 += 1 };
  s0 -> s3 [73, 73] { R245 += 1, R82 += 1, R83 += 1 };
  s0 -> s1 [74, 65535] { R245 += 1, R82 += 1, R83 += 1 };
  s1 -> s1 [0, 72] { R245 += 1, R82 += 1, R83 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R245 += 1, R82 += 1, R83 += 1 };
  s1 -> s3 [73, 73] { R245 += 1, R82 += 1, R83 += 1 };
  s1 -> s1 [74, 65535] { R245 += 1, R82 += 1, R83 += 1 };
  s2 -> s2 [0, 65535] { R245 += 1, R82 += 1, R83 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 72] { R247 += 1, R88 += 1, R89 += 1 };
  s0 -> s0 [0, 65535] { R246 += 1, R247 += 1 };
  s0 -> s2 [73, 73] { R247 += 1, R88 += 1, R89 += 1 };
  s0 -> s3 [73, 73] { R247 += 1, R88 += 1, R89 += 1 };
  s0 -> s1 [74, 65535] { R247 += 1, R88 += 1, R89 += 1 };
  s1 -> s1 [0, 72] { R247 += 1, R88 += 1, R89 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R247 += 1, R88 += 1, R89 += 1 };
  s1 -> s3 [73, 73] { R247 += 1, R88 += 1, R89 += 1 };
  s1 -> s1 [74, 65535] { R247 += 1, R88 += 1, R89 += 1 };
  s2 -> s2 [0, 65535] { R247 += 1, R88 += 1, R89 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 72] { R249 += 1, R96 += 1, R97 += 1 };
  s0 -> s0 [0, 65535] { R248 += 1, R249 += 1 };
  s0 -> s2 [73, 73] { R249 += 1, R96 += 1, R97 += 1 };
  s0 -> s3 [73, 73] { R249 += 1, R96 += 1, R97 += 1 };
  s0 -> s1 [74, 65535] { R249 += 1, R96 += 1, R97 += 1 };
  s1 -> s1 [0, 72] { R249 += 1, R96 += 1, R97 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R249 += 1, R96 += 1, R97 += 1 };
  s1 -> s3 [73, 73] { R249 += 1, R96 += 1, R97 += 1 };
  s1 -> s1 [74, 65535] { R249 += 1, R96 += 1, R97 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R249 += 1, R96 += 1, R97 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 72] { R251 += 1, R106 += 1, R107 += 1 };
  s0 -> s0 [0, 65535] { R250 += 1, R251 += 1 };
  s0 -> s2 [73, 73] { R251 += 1, R106 += 1, R107 += 1 };
  s0 -> s3 [73, 73] { R251 += 1, R106 += 1, R107 += 1 };
  s0 -> s1 [74, 65535] { R251 += 1, R106 += 1, R107 += 1 };
  s1 -> s1 [0, 72] { R251 += 1, R106 += 1, R107 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R251 += 1, R106 += 1, R107 += 1 };
  s1 -> s3 [73, 73] { R251 += 1, R106 += 1, R107 += 1 };
  s1 -> s1 [74, 65535] { R251 += 1, R106 += 1, R107 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R251 += 1, R106 += 1, R107 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 72] { R253 += 1, R114 += 1, R115 += 1 };
  s0 -> s0 [0, 65535] { R252 += 1, R253 += 1 };
  s0 -> s2 [73, 73] { R253 += 1, R114 += 1, R115 += 1 };
  s0 -> s3 [73, 73] { R253 += 1, R114 += 1, R115 += 1 };
  s0 -> s1 [74, 65535] { R253 += 1, R114 += 1, R115 += 1 };
  s1 -> s1 [0, 72] { R253 += 1, R114 += 1, R115 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R253 += 1, R114 += 1, R115 += 1 };
  s1 -> s3 [73, 73] { R253 += 1, R114 += 1, R115 += 1 };
  s1 -> s1 [74, 65535] { R253 += 1, R114 += 1, R115 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R253 += 1, R114 += 1, R115 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 72] { R255 += 1, R190 += 1, R191 += 1 };
  s0 -> s2 [0, 72] { R255 += 1, R191 += 1, R193 += 1 };
  s0 -> s3 [0, 72] { R255 += 1, R191 += 1, R192 += 1, R193 += 1 };
  s0 -> s0 [0, 65535] { R254 += 1, R255 += 1 };
  s0 -> s4 [73, 73] { R255 += 1, R191 += 1, R192 += 1, R193 += 1 };
  s0 -> s5 [73, 73] { R255 += 1, R191 += 1, R192 += 1, R193 += 1 };
  s0 -> s6 [73, 73] { R255 += 1, R190 += 1, R191 += 1 };
  s0 -> s7 [73, 73] { R255 += 1, R191 += 1, R193 += 1 };
  s0 -> s8 [73, 73] { R255 += 1, R190 += 1, R191 += 1 };
  s0 -> s9 [73, 73] { R255 += 1, R191 += 1, R193 += 1 };
  s0 -> s1 [74, 65535] { R255 += 1, R190 += 1, R191 += 1 };
  s0 -> s3 [74, 65535] { R255 += 1, R191 += 1, R192 += 1, R193 += 1 };
  s0 -> s2 [77, 65535] { R255 += 1, R191 += 1, R193 += 1 };
  s1 -> s1 [0, 72] { R255 += 1, R190 += 1, R191 += 1 };
  s1 -> s2 [0, 72] { R255 += 1, R191 += 1, R193 += 1 };
  s1 -> s3 [0, 72] { R255 += 1, R191 += 1, R192 += 1, R193 += 1 };
  s1 -> s4 [73, 73] { R255 += 1, R191 += 1, R192 += 1, R193 += 1 };
  s1 -> s5 [73, 73] { R255 += 1, R191 += 1, R192 += 1, R193 += 1 };
  s1 -> s6 [73, 73] { R255 += 1, R190 += 1, R191 += 1 };
  s1 -> s7 [73, 73] { R255 += 1, R191 += 1, R193 += 1 };
  s1 -> s8 [73, 73] { R255 += 1, R190 += 1, R191 += 1 };
  s1 -> s9 [73, 73] { R255 += 1, R191 += 1, R193 += 1 };
  s1 -> s1 [74, 65535] { R255 += 1, R190 += 1, R191 += 1 };
  s1 -> s3 [74, 65535] { R255 += 1, R191 += 1, R192 += 1, R193 += 1 };
  s1 -> s2 [77, 65535] { R255 += 1, R191 += 1, R193 += 1 };
  s2 -> s2 [0, 72] { R255 += 1, R191 += 1, R193 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s7 [73, 73] { R255 += 1, R191 += 1, R193 += 1 };
  s2 -> s9 [73, 73] { R255 += 1, R191 += 1, R193 += 1 };
  s2 -> s2 [77, 65535] { R255 += 1, R191 += 1, R193 += 1 };
  s3 -> s2 [0, 72] { R255 += 1, R191 += 1, R193 += 1 };
  s3 -> s3 [0, 72] { R255 += 1, R191 += 1, R192 += 1, R193 += 1 };
  s3 -> s4 [73, 73] { R255 += 1, R191 += 1, R192 += 1, R193 += 1 };
  s3 -> s5 [73, 73] { R255 += 1, R191 += 1, R192 += 1, R193 += 1 };
  s3 -> s7 [73, 73] { R255 += 1, R191 += 1, R193 += 1 };
  s3 -> s9 [73, 73] { R255 += 1, R191 += 1, R193 += 1 };
  s3 -> s3 [74, 65535] { R255 += 1, R191 += 1, R192 += 1, R193 += 1 };
  s3 -> s2 [77, 65535] { R255 += 1, R191 += 1, R193 += 1 };
  s5 -> s7 [0, 73] { R255 += 1, R191 += 1, R193 += 1 };
  s5 -> s5 [0, 65535] { R255 += 1, R191 += 1, R192 += 1, R193 += 1 };
  s5 -> s7 [77, 65535] { R255 += 1, R191 += 1, R193 += 1 };
  s7 -> s7 [0, 73] { R255 += 1, R191 += 1, R193 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s7 [77, 65535] { R255 += 1, R191 += 1, R193 += 1 };
  s8 -> s7 [0, 73] { R255 += 1, R191 += 1, R193 += 1 };
  s8 -> s5 [0, 65535] { R255 += 1, R191 += 1, R192 += 1, R193 += 1 };
  s8 -> s8 [0, 65535] { R255 += 1, R190 += 1, R191 += 1 };
  s8 -> s7 [77, 65535] { R255 += 1, R191 += 1, R193 += 1 };
  s9 -> s9 [0, 65535];
  accepting s2, s7, s9;
};
};
synchronised {  // Automata constraining P4
automaton P4_0 {
  init s0;
  s0 -> s1 [105, 105];
  accepting s1;
};
};
synchronised {  // Automata constraining P48
automaton P48_0 {
  init s0;
  s0 -> s1 [106, 106];
  accepting s1;
};
};
constraint R2 = R227 && R20 - R227 = -1 && R21 = R227 && R22 - R227 = -1 && R23 = R227 && R24 = 0 && R25 = 1 && R26 = 0 && R27 = 1 && R59 + R58 + -1*R195 + -1*R191 = 0 && R74 + R72 = 0 && R75 + R73 + -1*R195 + -1*R191 = 0 && R194 + R190 = 0 && R196 + R192 = 0 && R197 + R193 = 0 && R198 = 0 && R199 = R227 && R200 = 0 && R201 = R227 && R202 = 0 && R203 = R227 && R204 = 0 && R205 = R227 && R206 = 0 && R207 = R227 && R208 = 0 && R209 = R227 && R210 = 0 && R211 = R227 && R212 = 0 && R213 = R227 && R214 = 0 && R215 = R227 && R216 = 0 && R217 = R227 && R218 = 0 && R219 = R227 && R220 = 0 && R221 = R227 && R222 = 0 && R223 = R227 && R224 = 0 && R225 = R227 && R226 = 0 && R254 = 0 && R255 = 0 && R11 < 1 && R12 < 1 && R61 + R60 < 1 && -1*R81 + -1*R78 < 1 && R87 + R84 < 1 && -1*R195 + -1*R191 < 1 && 0 < R227 && (R79 + R76 != 0 || R80 + R77 + -1*R195 + -1*R191 = 0 || R81 + R78 < 1) && (R81 + R78 != 0 || R105 + R100 = 0 || (R94 + R90 = 0 && R95 + R91 = 0)) && (R81 + R78 != 0 || R105 + R100 = 0 || (R103 + R98 = 0 && R104 + R99 = 0)) && (R81 + R78 != 0 || R105 + R100 = 0 || (R112 + R108 = 0 && R113 + R109 = 0)) && (R81 + R78 != 0 || ((R79 + R76 != 0 || R80 + R77 + -1*R195 + -1*R191 = 0 || R195 + R191 < 1) && (R79 + R76 = 0 || R195 + R191 < 1))) && (R85 + R82 != 0 || R86 + R83 + -1*R195 + -1*R191 = 0 || (R81 + R78 = 0 && R195 + R191 = 0)) && (R92 + R88 != 0 || R93 + R89 + -1*R195 + -1*R191 = 0 || (R81 + R78 = 0 && R195 + R191 = 0)) && (R94 + R90 != 0 || R81 + R78 + -1*R95 + -1*R91 = 0 || R81 + R78 < 1) && (R101 + R96 != 0 || R102 + R97 + -1*R195 + -1*R191 = 0 || (R81 + R78 = 0 && R195 + R191 = 0)) && (R103 + R98 != 0 || R81 + R78 + -1*R104 + -1*R99 = 0 || R81 + R78 < 1) && (R110 + R106 != 0 || R111 + R107 + -1*R195 + -1*R191 = 0 || (R81 + R78 = 0 && R195 + R191 = 0)) && (R112 + R108 != 0 || R81 + R78 + -1*R113 + -1*R109 = 0 || R81 + R78 < 1) && (R119 + R114 != 0 || R120 + R115 + -1*R195 + -1*R191 = 0 || (R81 + R78 = 0 && R195 + R191 = 0)) && (R19 = 0 || (R228 = 0 && R229 = 0)) && (R19 = 0 || (R230 = 0 && R231 = 0)) && (R19 = 0 || (R232 = 0 && R233 = 0)) && (R19 = 0 || (R234 = 0 && R235 = 0)) && (R19 = 0 || (R236 = 0 && R237 = 0)) && (R19 = 0 || (R238 = 0 && R239 = 0)) && (R19 = 0 || (R240 = 0 && R241 = 0)) && (R19 = 0 || (R242 = 0 && R243 = 0)) && (R19 = 0 || (R244 = 0 && R245 = 0)) && (R19 = 0 || (R246 = 0 && R247 = 0)) && (R19 = 0 || (R248 = 0 && R249 = 0)) && (R19 = 0 || (R250 = 0 && R251 = 0)) && (R19 = 0 || (R252 = 0 && R253 = 0)) && (R67 + R64 = 0 || (R65 + R62 = 0 && R66 + R63 = 0)) && (R67 + R64 = 0 || (R70 + R68 = 0 && R71 + R69 = 0)) && (R79 + R76 = 0 || R81 + R78 < 1) && (R85 + R82 = 0 || (R81 + R78 = 0 && R195 + R191 = 0)) && (R92 + R88 = 0 || (R81 + R78 = 0 && R195 + R191 = 0)) && (R94 + R90 = 0 || R81 + R78 < 1) && (R101 + R96 = 0 || (R81 + R78 = 0 && R195 + R191 = 0)) && (R103 + R98 = 0 || R81 + R78 < 1) && (R110 + R106 = 0 || (R81 + R78 = 0 && R195 + R191 = 0)) && (R112 + R108 = 0 || R81 + R78 < 1) && (R119 + R114 = 0 || (R81 + R78 = 0 && R195 + R191 = 0)) && (R123 + R118 = 0 || (R121 + R116 = 0 && R122 + R117 = 0));
// End of Parikh automata intersection problem
