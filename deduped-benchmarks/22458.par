// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R2, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R4015, R4016, R4017, R4018, R4019, R4020, R4021, R4022, R4023, R4024, R5, R5131, R5132, R5133, R5134, R5135, R5136, R5137, R5138, R5139, R5140, R5141, R5142, R5143, R5144, R5145, R5146, R5147, R5148, R5149, R5150, R5151, R5152, R5153, R5154, R5155, R5156, R5157, R5158, R5159, R5160, R5161, R5162, R5163, R5164, R5165, R5166, R5167, R5168, R5169, R5170, R5171, R5172, R5173, R5174, R5175, R5176, R5177, R5178, R5179, R5180, R5181, R5182, R5183, R5184, R5185, R5186, R5187, R5188, R5189, R5190, R5191, R5192, R5193, R5194, R5195, R5196, R5197, R5198, R5199, R5200, R5201, R5202, R5203, R5204, R5205, R5206, R5207, R5208, R5209, R5210, R5211, R5212, R5213, R5214, R5215, R5216, R5217, R5218, R5219, R5220, R5221, R5222, R5223, R5224, R5225, R5226, R5227, R5228, R5229, R5230, R5231, R5232, R5233, R5234, R5235, R5236, R5237, R5238, R5239, R5240, R5241, R5242, R5243, R5244, R5245, R5246, R5247, R5248, R5249, R5250, R5251, R5252, R5253, R5254, R5255, R5256, R5257, R5258, R5259, R5260, R5261, R5262, R5263, R5264, R5265, R5266, R5267, R5268, R5269, R5270, R5271, R5272, R5273, R5274, R5275, R5276, R5277, R5278, R5279, R5280, R5281, R5282, R5283, R5284, R5285, R5286, R5287, R5288, R63, R65, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R30 += 1 };
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R5170 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R5169 += 1, R5170 += 1 };
  s1 -> s1 [0, 65535] { R5170 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R5172 += 1 };
  s0 -> s0 [0, 65535] { R5171 += 1, R5172 += 1 };
  s0 -> s2 [70, 70] { R5172 += 1 };
  s0 -> s3 [70, 70] { R5172 += 1 };
  s0 -> s1 [76, 65535] { R5172 += 1 };
  s1 -> s1 [0, 69] { R5172 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5172 += 1 };
  s1 -> s3 [70, 70] { R5172 += 1 };
  s1 -> s1 [76, 65535] { R5172 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R5172 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R5172 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R5174 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R5173 += 1, R5174 += 1 };
  s0 -> s2 [70, 70] { R5174 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R5174 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R5174 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R5174 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5174 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R5174 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R5174 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5174 += 1, R63 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R5176 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R5175 += 1, R5176 += 1 };
  s0 -> s2 [70, 70] { R5176 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R5176 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R5176 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R5176 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5176 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R5176 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R5176 += 1, R65 += 1 };
  s2 -> s2 [0, 65535] { R5176 += 1, R65 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R5178 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R5177 += 1, R5178 += 1 };
  s0 -> s2 [70, 70] { R5178 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R5178 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R5178 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R5178 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5178 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R5178 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R5178 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5178 += 1, R67 += 1, R68 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R5180 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R5179 += 1, R5180 += 1 };
  s0 -> s2 [70, 70] { R5180 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R5180 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R5180 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R5180 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5180 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R5180 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R5180 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R5180 += 1, R73 += 1, R74 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R5182 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R5181 += 1, R5182 += 1 };
  s0 -> s2 [70, 70] { R5182 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R5182 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R5182 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R5182 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5182 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R5182 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R5182 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535] { R5182 += 1, R77 += 1, R78 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R5184 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R5183 += 1, R5184 += 1 };
  s0 -> s2 [70, 70] { R5184 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R5184 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R5184 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R5184 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5184 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R5184 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R5184 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535] { R5184 += 1, R81 += 1, R82 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R5186 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R5185 += 1, R5186 += 1 };
  s0 -> s2 [70, 70] { R5186 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R5186 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R5186 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R5186 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5186 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R5186 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R5186 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535] { R5186 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R5188 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R5187 += 1, R5188 += 1 };
  s0 -> s2 [70, 70] { R5188 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R5188 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R5188 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R5188 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5188 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R5188 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R5188 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5188 += 1, R93 += 1, R94 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R5190 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R5189 += 1, R5190 += 1 };
  s0 -> s2 [70, 70] { R5190 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R5190 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R5190 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R5190 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5190 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R5190 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R5190 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535] { R5190 += 1, R101 += 1, R102 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R5192 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R5191 += 1, R5192 += 1 };
  s0 -> s2 [70, 70] { R5192 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R5192 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R5192 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R5192 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5192 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R5192 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R5192 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R5192 += 1, R111 += 1, R112 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R5194 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R5193 += 1, R5194 += 1 };
  s0 -> s2 [70, 70] { R5194 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R5194 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R5194 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R5194 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5194 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R5194 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R5194 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535] { R5194 += 1, R119 += 1, R120 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R5196 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R5195 += 1, R5196 += 1 };
  s0 -> s2 [70, 70] { R5196 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R5196 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R5196 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R5196 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5196 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R5196 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R5196 += 1, R129 += 1, R130 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R5196 += 1, R129 += 1, R130 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R5226 += 1 };
  s0 -> s0 [0, 65535] { R5225 += 1, R5226 += 1 };
  s0 -> s2 [70, 70] { R5226 += 1 };
  s0 -> s1 [71, 65535] { R5226 += 1 };
  s1 -> s1 [0, 69] { R5226 += 1 };
  s1 -> s2 [70, 70] { R5226 += 1 };
  s1 -> s1 [71, 65535] { R5226 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5226 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R5228 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R5227 += 1, R5228 += 1 };
  s1 -> s1 [0, 65535] { R5228 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R5230 += 1 };
  s0 -> s2 [0, 65535] { R5230 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R5229 += 1, R5230 += 1 };
  s0 -> s3 [70, 70] { R5230 += 1 };
  s0 -> s1 [71, 65535] { R5230 += 1 };
  s1 -> s1 [0, 69] { R5230 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R5230 += 1 };
  s1 -> s1 [71, 65535] { R5230 += 1 };
  s2 -> s1 [0, 69] { R5230 += 1 };
  s2 -> s2 [0, 65535] { R5230 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R5230 += 1 };
  s2 -> s1 [71, 65535] { R5230 += 1 };
  s3 -> s3 [0, 65535] { R5230 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R5232 += 1, R5140 += 1 };
  s0 -> s0 [0, 65535] { R5231 += 1, R5232 += 1 };
  s0 -> s2 [0, 65535] { R5232 += 1, R5139 += 1, R5140 += 1 };
  s0 -> s1 [71, 65535] { R5232 += 1, R5140 += 1 };
  s1 -> s1 [0, 69] { R5232 += 1, R5140 += 1 };
  s1 -> s1 [0, 65535] { R5232 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R5232 += 1, R5140 += 1 };
  s2 -> s1 [0, 69] { R5232 += 1, R5140 += 1 };
  s2 -> s2 [0, 65535] { R5232 += 1, R5139 += 1, R5140 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R5232 += 1, R5140 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R5234 += 1, R5142 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R5233 += 1, R5234 += 1 };
  s0 -> s2 [0, 65535] { R5234 += 1, R5141 += 1, R5142 += 1 };
  s1 -> s1 [0, 65535] { R5234 += 1, R5142 += 1, R22 += 1 };
  s1 -> s4 [0, 65535] { R5234 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R5234 += 1, R5142 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5234 += 1, R5141 += 1, R5142 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5234 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R5236 += 1, R5144 += 1 };
  s0 -> s2 [0, 65535] { R5236 += 1, R5143 += 1, R5144 += 1 };
  s0 -> s0 [0, 65535] { R5235 += 1, R5236 += 1 };
  s0 -> s1 [75, 65535] { R5236 += 1, R5144 += 1 };
  s1 -> s1 [0, 70] { R5236 += 1, R5144 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R5236 += 1 };
  s1 -> s1 [75, 65535] { R5236 += 1, R5144 += 1 };
  s2 -> s1 [0, 70] { R5236 += 1, R5144 += 1 };
  s2 -> s2 [0, 65535] { R5236 += 1, R5143 += 1, R5144 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R5236 += 1, R5144 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R5238 += 1, R5146 += 1, R138 += 1 };
  s0 -> s2 [0, 65535] { R5238 += 1, R5145 += 1, R5146 += 1 };
  s0 -> s0 [0, 65535] { R5237 += 1, R5238 += 1 };
  s1 -> s1 [0, 65535] { R5238 += 1, R5146 += 1, R138 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R5238 += 1 };
  s2 -> s1 [0, 65535] { R5238 += 1, R5146 += 1, R138 += 1 };
  s2 -> s2 [0, 65535] { R5238 += 1, R5145 += 1, R5146 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5238 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R5240 += 1, R5148 += 1 };
  s0 -> s2 [0, 65535] { R5240 += 1, R5148 += 1, R140 += 1 };
  s0 -> s3 [0, 65535] { R5240 += 1, R5147 += 1, R5148 += 1 };
  s0 -> s0 [0, 65535] { R5239 += 1, R5240 += 1 };
  s0 -> s1 [76, 65535] { R5240 += 1, R5148 += 1 };
  s1 -> s1 [0, 74] { R5240 += 1, R5148 += 1 };
  s1 -> s1 [0, 65535] { R5240 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [76, 65535] { R5240 += 1, R5148 += 1 };
  s2 -> s1 [0, 74] { R5240 += 1, R5148 += 1 };
  s2 -> s5 [0, 65535] { R5240 += 1 };
  s2 -> s2 [0, 65535] { R5240 += 1, R5148 += 1, R140 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [76, 65535] { R5240 += 1, R5148 += 1 };
  s3 -> s1 [0, 74] { R5240 += 1, R5148 += 1 };
  s3 -> s2 [0, 65535] { R5240 += 1, R5148 += 1, R140 += 1 };
  s3 -> s3 [0, 65535] { R5240 += 1, R5147 += 1, R5148 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [76, 65535] { R5240 += 1, R5148 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5240 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R5241 += 1, R5242 += 1 };
  s0 -> s1 [0, 65535] { R5242 += 1, R5149 += 1, R5150 += 1 };
  s0 -> s2 [0, 65535] { R5242 += 1, R5150 += 1, R145 += 1, R146 += 1 };
  s0 -> s3 [0, 65535] { R5242 += 1, R5150 += 1, R144 += 1, R145 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R5242 += 1, R5149 += 1, R5150 += 1 };
  s1 -> s2 [0, 65535] { R5242 += 1, R5150 += 1, R145 += 1, R146 += 1 };
  s1 -> s3 [0, 65535] { R5242 += 1, R5150 += 1, R144 += 1, R145 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s6 [0, 65535] { R5242 += 1, R5150 += 1 };
  s2 -> s2 [0, 65535] { R5242 += 1, R5150 += 1, R145 += 1, R146 += 1 };
  s2 -> s5 [0, 65535] { R5242 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R5242 += 1, R5150 += 1, R145 += 1, R146 += 1 };
  s3 -> s5 [0, 65535] { R5242 += 1 };
  s3 -> s3 [0, 65535] { R5242 += 1, R5150 += 1, R144 += 1, R145 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5242 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R5242 += 1, R5150 += 1 };
  s6 -> s5 [0, 65535] { R5242 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R5244 += 1, R5152 += 1, R150 += 1 };
  s0 -> s2 [0, 65535] { R5244 += 1, R5151 += 1, R5152 += 1 };
  s0 -> s0 [0, 65535] { R5243 += 1, R5244 += 1 };
  s0 -> s3 [0, 65535] { R5244 += 1, R5152 += 1, R149 += 1, R150 += 1 };
  s0 -> s4 [75, 75] { R5244 += 1, R5152 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R5244 += 1, R5152 += 1, R150 += 1 };
  s0 -> s1 [85, 65535] { R5244 += 1, R5152 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R5244 += 1, R5152 += 1, R150 += 1 };
  s1 -> s1 [0, 65535] { R5244 += 1, R5152 += 1 };
  s1 -> s6 [0, 65535] { R5244 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [75, 75] { R5244 += 1, R5152 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R5244 += 1, R5152 += 1, R150 += 1 };
  s1 -> s1 [85, 65535] { R5244 += 1, R5152 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R5244 += 1, R5152 += 1, R150 += 1 };
  s2 -> s2 [0, 65535] { R5244 += 1, R5151 += 1, R5152 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s3 [0, 65535] { R5244 += 1, R5152 += 1, R149 += 1, R150 += 1 };
  s2 -> s4 [75, 75] { R5244 += 1, R5152 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R5244 += 1, R5152 += 1, R150 += 1 };
  s2 -> s1 [85, 65535] { R5244 += 1, R5152 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R5244 += 1, R5152 += 1, R150 += 1 };
  s3 -> s6 [0, 65535] { R5244 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R5244 += 1, R5152 += 1, R149 += 1, R150 += 1 };
  s3 -> s4 [75, 75] { R5244 += 1, R5152 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R5244 += 1, R5152 += 1, R150 += 1 };
  s3 -> s1 [85, 65535] { R5244 += 1, R5152 += 1, R150 += 1 };
  s4 -> s4 [0, 75] { R5244 += 1, R5152 += 1, R150 += 1 };
  s4 -> s4 [0, 65535] { R5244 += 1, R5152 += 1 };
  s4 -> s6 [0, 65535] { R5244 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [85, 65535] { R5244 += 1, R5152 += 1, R150 += 1 };
  s5 -> s6 [0, 65535] { R5244 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R5244 += 1, R5152 += 1 };
  s6 -> s6 [0, 65535] { R5244 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R5246 += 1, R5154 += 1 };
  s0 -> s2 [0, 65535] { R5246 += 1, R5153 += 1, R5154 += 1 };
  s0 -> s0 [0, 65535] { R5245 += 1, R5246 += 1 };
  s0 -> s3 [0, 65535] { R5246 += 1, R5154 += 1, R154 += 1 };
  s1 -> s1 [0, 65535] { R5246 += 1, R5154 += 1 };
  s1 -> s4 [0, 65535] { R5246 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R5246 += 1, R5154 += 1 };
  s2 -> s2 [0, 65535] { R5246 += 1, R5153 += 1, R5154 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R5246 += 1, R5154 += 1, R154 += 1 };
  s3 -> s1 [0, 65535] { R5246 += 1, R5154 += 1 };
  s3 -> s4 [0, 65535] { R5246 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5246 += 1, R5154 += 1, R154 += 1 };
  s4 -> s4 [0, 65535] { R5246 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R5248 += 1, R5156 += 1, R159 += 1, R160 += 1 };
  s0 -> s2 [0, 65535] { R5248 += 1, R5156 += 1, R158 += 1, R159 += 1 };
  s0 -> s0 [0, 65535] { R5247 += 1, R5248 += 1 };
  s0 -> s3 [0, 65535] { R5248 += 1, R5155 += 1, R5156 += 1 };
  s1 -> s5 [0, 65535] { R5248 += 1 };
  s1 -> s1 [0, 65535] { R5248 += 1, R5156 += 1, R159 += 1, R160 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R5248 += 1, R5156 += 1 };
  s2 -> s5 [0, 65535] { R5248 += 1 };
  s2 -> s1 [0, 65535] { R5248 += 1, R5156 += 1, R159 += 1, R160 += 1 };
  s2 -> s2 [0, 65535] { R5248 += 1, R5156 += 1, R158 += 1, R159 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R5248 += 1, R5156 += 1, R159 += 1, R160 += 1 };
  s3 -> s2 [0, 65535] { R5248 += 1, R5156 += 1, R158 += 1, R159 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5248 += 1, R5155 += 1, R5156 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5248 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R5248 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R5248 += 1, R5156 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R5250 += 1, R5158 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R5250 += 1, R5157 += 1, R5158 += 1 };
  s0 -> s3 [0, 65535] { R5250 += 1, R5158 += 1, R164 += 1, R165 += 1 };
  s0 -> s4 [0, 65535] { R5250 += 1, R5158 += 1, R165 += 1, R166 += 1 };
  s0 -> s0 [0, 65535] { R5249 += 1, R5250 += 1 };
  s0 -> s1 [76, 65535] { R5250 += 1, R5158 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R5250 += 1, R5158 += 1, R165 += 1 };
  s1 -> s1 [0, 65535] { R5250 += 1, R5158 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R5250 += 1 };
  s1 -> s1 [76, 65535] { R5250 += 1, R5158 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R5250 += 1, R5158 += 1, R165 += 1 };
  s2 -> s2 [0, 65535] { R5250 += 1, R5157 += 1, R5158 += 1 };
  s2 -> s3 [0, 65535] { R5250 += 1, R5158 += 1, R164 += 1, R165 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [0, 65535] { R5250 += 1, R5158 += 1, R165 += 1, R166 += 1 };
  s2 -> s1 [76, 65535] { R5250 += 1, R5158 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R5250 += 1, R5158 += 1, R165 += 1 };
  s3 -> s3 [0, 65535] { R5250 += 1, R5158 += 1, R164 += 1, R165 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R5250 += 1, R5158 += 1, R165 += 1, R166 += 1 };
  s3 -> s7 [0, 65535] { R5250 += 1 };
  s3 -> s1 [76, 65535] { R5250 += 1, R5158 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R5250 += 1, R5158 += 1, R165 += 1 };
  s4 -> s5 [0, 65535] { R5250 += 1, R5158 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R5250 += 1, R5158 += 1, R165 += 1, R166 += 1 };
  s4 -> s7 [0, 65535] { R5250 += 1 };
  s4 -> s1 [76, 65535] { R5250 += 1, R5158 += 1, R165 += 1 };
  s5 -> s5 [0, 65535] { R5250 += 1, R5158 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R5250 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5250 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R5252 += 1, R5160 += 1, R172 += 1, R174 += 1 };
  s0 -> s2 [0, 65535] { R5252 += 1, R5160 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s0 [0, 65535] { R5251 += 1, R5252 += 1 };
  s0 -> s3 [0, 65535] { R5252 += 1, R5160 += 1, R171 += 1, R172 += 1 };
  s0 -> s4 [0, 65535] { R5252 += 1, R5159 += 1, R5160 += 1 };
  s0 -> s1 [76, 65535] { R5252 += 1, R5160 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R5252 += 1, R5160 += 1, R172 += 1, R174 += 1 };
  s1 -> s6 [0, 65535] { R5252 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5252 += 1, R5160 += 1, R172 += 1 };
  s1 -> s7 [0, 65535] { R5252 += 1, R5160 += 1 };
  s1 -> s1 [76, 65535] { R5252 += 1, R5160 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R5252 += 1, R5160 += 1, R172 += 1, R174 += 1 };
  s2 -> s6 [0, 65535] { R5252 += 1 };
  s2 -> s2 [0, 65535] { R5252 += 1, R5160 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R5252 += 1, R5160 += 1 };
  s2 -> s1 [76, 65535] { R5252 += 1, R5160 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R5252 += 1, R5160 += 1, R172 += 1, R174 += 1 };
  s3 -> s6 [0, 65535] { R5252 += 1 };
  s3 -> s2 [0, 65535] { R5252 += 1, R5160 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5252 += 1, R5160 += 1, R171 += 1, R172 += 1 };
  s3 -> s1 [76, 65535] { R5252 += 1, R5160 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R5252 += 1, R5160 += 1, R172 += 1, R174 += 1 };
  s4 -> s2 [0, 65535] { R5252 += 1, R5160 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R5252 += 1, R5160 += 1, R171 += 1, R172 += 1 };
  s4 -> s4 [0, 65535] { R5252 += 1, R5159 += 1, R5160 += 1 };
  s4 -> s1 [76, 65535] { R5252 += 1, R5160 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5252 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R5252 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R5252 += 1, R5160 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R5254 += 1, R5162 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s0 -> s0 [0, 65535] { R5253 += 1, R5254 += 1 };
  s0 -> s2 [0, 65535] { R5254 += 1, R5162 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s0 -> s3 [0, 65535] { R5254 += 1, R5162 += 1 };
  s0 -> s4 [0, 65535] { R5254 += 1, R5161 += 1, R5162 += 1 };
  s1 -> s1 [0, 65535] { R5254 += 1, R5162 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s1 -> s6 [0, 65535] { R5254 += 1 };
  s1 -> s2 [0, 65535] { R5254 += 1, R5162 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s1 -> s3 [0, 65535] { R5254 += 1, R5162 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R5254 += 1 };
  s2 -> s7 [0, 65535] { R5254 += 1, R5162 += 1, R181 += 1 };
  s2 -> s2 [0, 65535] { R5254 += 1, R5162 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s2 -> s3 [0, 65535] { R5254 += 1, R5162 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R5254 += 1 };
  s3 -> s3 [0, 65535] { R5254 += 1, R5162 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R5254 += 1, R5162 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s4 -> s2 [0, 65535] { R5254 += 1, R5162 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s4 -> s3 [0, 65535] { R5254 += 1, R5162 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5254 += 1, R5161 += 1, R5162 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5254 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R5254 += 1 };
  s7 -> s7 [0, 65535] { R5254 += 1, R5162 += 1, R181 += 1 };
  s7 -> s3 [0, 65535] { R5254 += 1, R5162 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R5256 += 1, R5164 += 1, R190 += 1, R192 += 1 };
  s0 -> s2 [0, 65535] { R5256 += 1, R5164 += 1, R189 += 1, R190 += 1 };
  s0 -> s3 [0, 65535] { R5256 += 1, R5164 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s0 -> s4 [0, 65535] { R5256 += 1, R5163 += 1, R5164 += 1 };
  s0 -> s0 [0, 65535] { R5255 += 1, R5256 += 1 };
  s0 -> s1 [84, 65535] { R5256 += 1, R5164 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 75] { R5256 += 1, R5164 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 65535] { R5256 += 1, R5164 += 1, R190 += 1 };
  s1 -> s6 [0, 65535] { R5256 += 1 };
  s1 -> s7 [0, 65535] { R5256 += 1, R5164 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [84, 65535] { R5256 += 1, R5164 += 1, R190 += 1, R192 += 1 };
  s2 -> s1 [0, 75] { R5256 += 1, R5164 += 1, R190 += 1, R192 += 1 };
  s2 -> s2 [0, 65535] { R5256 += 1, R5164 += 1, R189 += 1, R190 += 1 };
  s2 -> s3 [0, 65535] { R5256 += 1, R5164 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s2 -> s6 [0, 65535] { R5256 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [84, 65535] { R5256 += 1, R5164 += 1, R190 += 1, R192 += 1 };
  s3 -> s1 [0, 75] { R5256 += 1, R5164 += 1, R190 += 1, R192 += 1 };
  s3 -> s3 [0, 65535] { R5256 += 1, R5164 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s3 -> s6 [0, 65535] { R5256 += 1 };
  s3 -> s7 [0, 65535] { R5256 += 1, R5164 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [84, 65535] { R5256 += 1, R5164 += 1, R190 += 1, R192 += 1 };
  s4 -> s1 [0, 75] { R5256 += 1, R5164 += 1, R190 += 1, R192 += 1 };
  s4 -> s2 [0, 65535] { R5256 += 1, R5164 += 1, R189 += 1, R190 += 1 };
  s4 -> s3 [0, 65535] { R5256 += 1, R5164 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s4 -> s4 [0, 65535] { R5256 += 1, R5163 += 1, R5164 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s1 [84, 65535] { R5256 += 1, R5164 += 1, R190 += 1, R192 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5256 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R5256 += 1 };
  s7 -> s7 [0, 65535] { R5256 += 1, R5164 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R5258 += 1, R5166 += 1, R4021 += 1 };
  s0 -> s2 [0, 65535] { R5258 += 1, R5166 += 1 };
  s0 -> s0 [0, 65535] { R5257 += 1, R5258 += 1 };
  s0 -> s3 [0, 65535] { R5258 += 1, R5165 += 1, R5166 += 1 };
  s1 -> s5 [0, 65535] { R5258 += 1 };
  s1 -> s1 [0, 65535] { R5258 += 1, R5166 += 1, R4021 += 1 };
  s1 -> s2 [0, 65535] { R5258 += 1, R5166 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R5258 += 1 };
  s2 -> s2 [0, 65535] { R5258 += 1, R5166 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R5258 += 1, R5166 += 1, R4021 += 1 };
  s3 -> s2 [0, 65535] { R5258 += 1, R5166 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5258 += 1, R5165 += 1, R5166 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5258 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 74] { R5260 += 1, R5168 += 1, R5136 += 1, R5138 += 1 };
  s0 -> s2 [0, 65535] { R5260 += 1, R5167 += 1, R5168 += 1 };
  s0 -> s0 [0, 65535] { R5259 += 1, R5260 += 1 };
  s0 -> s3 [75, 75] { R5260 += 1, R5168 += 1, R5136 += 1, R5138 += 1 };
  s0 -> s4 [84, 84] { R5260 += 1, R5168 += 1, R5136 += 1, R5138 += 1 };
  s0 -> s1 [85, 65535] { R5260 += 1, R5168 += 1, R5136 += 1, R5138 += 1 };
  s1 -> s1 [0, 74] { R5260 += 1, R5168 += 1, R5136 += 1, R5138 += 1 };
  s1 -> s3 [75, 75] { R5260 += 1, R5168 += 1, R5136 += 1, R5138 += 1 };
  s1 -> s4 [84, 84] { R5260 += 1, R5168 += 1, R5136 += 1, R5138 += 1 };
  s1 -> s1 [85, 65535] { R5260 += 1, R5168 += 1, R5136 += 1, R5138 += 1 };
  s2 -> s1 [0, 74] { R5260 += 1, R5168 += 1, R5136 += 1, R5138 += 1 };
  s2 -> s2 [0, 65535] { R5260 += 1, R5167 += 1, R5168 += 1 };
  s2 -> s3 [75, 75] { R5260 += 1, R5168 += 1, R5136 += 1, R5138 += 1 };
  s2 -> s4 [84, 84] { R5260 += 1, R5168 += 1, R5136 += 1, R5138 += 1 };
  s2 -> s1 [85, 65535] { R5260 += 1, R5168 += 1, R5136 += 1, R5138 += 1 };
  s3 -> s3 [0, 75] { R5260 += 1, R5168 += 1, R5136 += 1, R5138 += 1 };
  s3 -> s8 [84, 84] { R5260 += 1, R5168 += 1, R5136 += 1, R5138 += 1 };
  s3 -> s3 [85, 65535] { R5260 += 1, R5168 += 1, R5136 += 1, R5138 += 1 };
  s4 -> s4 [0, 74] { R5260 += 1, R5168 += 1, R5136 += 1, R5138 += 1 };
  s4 -> s5 [0, 65535] { R5260 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R5260 += 1, R5168 += 1, R5136 += 1 };
  s4 -> s7 [0, 65535] { R5260 += 1, R5168 += 1 };
  s4 -> s8 [75, 75] { R5260 += 1, R5168 += 1, R5136 += 1, R5138 += 1 };
  s4 -> s9 [75, 75] { R5260 += 1, R5168 += 1, R5136 += 1, R5138 += 1 };
  s4 -> s4 [84, 65535] { R5260 += 1, R5168 += 1, R5136 += 1, R5138 += 1 };
  s5 -> s5 [0, 65535] { R5260 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R5260 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5260 += 1, R5168 += 1 };
  s8 -> s8 [0, 75] { R5260 += 1, R5168 += 1, R5136 += 1, R5138 += 1 };
  s8 -> s5 [0, 65535] { R5260 += 1 };
  s8 -> s8 [0, 65535] { R5260 += 1, R5168 += 1, R5136 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R5260 += 1, R5168 += 1 };
  s8 -> s8 [84, 65535] { R5260 += 1, R5168 += 1, R5136 += 1, R5138 += 1 };
  s9 -> s5 [0, 65535] { R5260 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s9 [0, 65535] { R5260 += 1, R5168 += 1, R5136 += 1 };
  s9 -> s7 [0, 65535] { R5260 += 1, R5168 += 1 };
  accepting s4, s8, s5, s9, s6, s7;
};
automaton value2_40 {
  init s0;
  s0 -> s0 [0, 65535] { R5261 += 1, R5262 += 1 };
  s0 -> s1 [0, 65535] { R5262 += 1, R5197 += 1, R5198 += 1 };
  s0 -> s2 [0, 65535] { R5262 += 1, R5198 += 1, R23 += 1 };
  s1 -> s1 [0, 65535] { R5262 += 1, R5197 += 1, R5198 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R5262 += 1, R5198 += 1, R23 += 1 };
  s2 -> s3 [0, 65535] { R5262 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R5262 += 1, R5198 += 1, R23 += 1 };
  s3 -> s3 [0, 65535] { R5262 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R5264 += 1, R5200 += 1 };
  s0 -> s0 [0, 65535] { R5263 += 1, R5264 += 1 };
  s0 -> s2 [0, 65535] { R5264 += 1, R5199 += 1, R5200 += 1 };
  s0 -> s3 [70, 70] { R5264 += 1, R5200 += 1 };
  s0 -> s4 [70, 70] { R5264 += 1, R5200 += 1 };
  s0 -> s5 [75, 75] { R5264 += 1, R5200 += 1 };
  s0 -> s1 [76, 65535] { R5264 += 1, R5200 += 1 };
  s1 -> s1 [0, 69] { R5264 += 1, R5200 += 1 };
  s1 -> s3 [70, 70] { R5264 += 1, R5200 += 1 };
  s1 -> s4 [70, 70] { R5264 += 1, R5200 += 1 };
  s1 -> s5 [75, 75] { R5264 += 1, R5200 += 1 };
  s1 -> s1 [76, 65535] { R5264 += 1, R5200 += 1 };
  s2 -> s1 [0, 69] { R5264 += 1, R5200 += 1 };
  s2 -> s2 [0, 65535] { R5264 += 1, R5199 += 1, R5200 += 1 };
  s2 -> s3 [70, 70] { R5264 += 1, R5200 += 1 };
  s2 -> s4 [70, 70] { R5264 += 1, R5200 += 1 };
  s2 -> s5 [75, 75] { R5264 += 1, R5200 += 1 };
  s2 -> s1 [76, 65535] { R5264 += 1, R5200 += 1 };
  s3 -> s3 [0, 70] { R5264 += 1, R5200 += 1 };
  s3 -> s7 [75, 75] { R5264 += 1, R5200 += 1 };
  s3 -> s3 [76, 65535] { R5264 += 1, R5200 += 1 };
  s5 -> s5 [0, 69] { R5264 += 1, R5200 += 1 };
  s5 -> s5 [0, 65535] { R5264 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R5264 += 1, R5200 += 1 };
  s5 -> s8 [70, 70] { R5264 += 1, R5200 += 1 };
  s5 -> s5 [75, 65535] { R5264 += 1, R5200 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R5264 += 1, R5200 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5264 += 1 };
  s7 -> s7 [75, 65535] { R5264 += 1, R5200 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R5264 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R5266 += 1, R5202 += 1, R137 += 1 };
  s0 -> s2 [0, 65535] { R5266 += 1, R5201 += 1, R5202 += 1 };
  s0 -> s0 [0, 65535] { R5265 += 1, R5266 += 1 };
  s0 -> s3 [70, 70] { R5266 += 1, R5202 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R5266 += 1, R5202 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R5266 += 1, R5202 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R5266 += 1, R5202 += 1, R137 += 1 };
  s1 -> s1 [0, 65535] { R5266 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R5266 += 1, R5202 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R5266 += 1, R5202 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R5266 += 1, R5202 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R5266 += 1, R5202 += 1, R137 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5266 += 1, R5201 += 1, R5202 += 1 };
  s2 -> s3 [70, 70] { R5266 += 1, R5202 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R5266 += 1, R5202 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R5266 += 1, R5202 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R5266 += 1, R5202 += 1, R137 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R5266 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5266 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5266 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R5268 += 1, R5204 += 1, R139 += 1 };
  s0 -> s0 [0, 65535] { R5267 += 1, R5268 += 1 };
  s0 -> s2 [0, 65535] { R5268 += 1, R5203 += 1, R5204 += 1 };
  s0 -> s3 [70, 70] { R5268 += 1, R5204 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R5268 += 1, R5204 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R5268 += 1, R5204 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R5268 += 1, R5204 += 1, R139 += 1 };
  s1 -> s1 [0, 65535] { R5268 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R5268 += 1, R5204 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R5268 += 1, R5204 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R5268 += 1, R5204 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R5268 += 1, R5204 += 1, R139 += 1 };
  s2 -> s2 [0, 65535] { R5268 += 1, R5203 += 1, R5204 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R5268 += 1, R5204 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R5268 += 1, R5204 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R5268 += 1, R5204 += 1, R139 += 1 };
  s3 -> s6 [0, 65535] { R5268 += 1 };
  s3 -> s3 [0, 65535] { R5268 += 1, R5204 += 1, R139 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5268 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5268 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R5270 += 1, R5206 += 1, R141 += 1, R142 += 1 };
  s0 -> s2 [0, 65535] { R5270 += 1, R5205 += 1, R5206 += 1 };
  s0 -> s0 [0, 65535] { R5269 += 1, R5270 += 1 };
  s0 -> s3 [70, 70] { R5270 += 1, R5206 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R5270 += 1, R5206 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R5270 += 1, R5206 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R5270 += 1, R5206 += 1, R141 += 1, R142 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5270 += 1 };
  s1 -> s3 [70, 70] { R5270 += 1, R5206 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R5270 += 1, R5206 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R5270 += 1, R5206 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R5270 += 1, R5206 += 1, R141 += 1, R142 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5270 += 1, R5205 += 1, R5206 += 1 };
  s2 -> s3 [70, 70] { R5270 += 1, R5206 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R5270 += 1, R5206 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R5270 += 1, R5206 += 1, R141 += 1, R142 += 1 };
  s3 -> s6 [0, 65535] { R5270 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5270 += 1, R5206 += 1, R141 += 1, R142 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5270 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5270 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R5272 += 1, R5208 += 1, R147 += 1, R148 += 1 };
  s0 -> s2 [0, 65535] { R5272 += 1, R5207 += 1, R5208 += 1 };
  s0 -> s0 [0, 65535] { R5271 += 1, R5272 += 1 };
  s0 -> s3 [70, 70] { R5272 += 1, R5208 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R5272 += 1, R5208 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R5272 += 1, R5208 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R5272 += 1, R5208 += 1, R147 += 1, R148 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5272 += 1 };
  s1 -> s3 [70, 70] { R5272 += 1, R5208 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R5272 += 1, R5208 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R5272 += 1, R5208 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R5272 += 1, R5208 += 1, R147 += 1, R148 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5272 += 1, R5207 += 1, R5208 += 1 };
  s2 -> s3 [70, 70] { R5272 += 1, R5208 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R5272 += 1, R5208 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R5272 += 1, R5208 += 1, R147 += 1, R148 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5272 += 1, R5208 += 1, R147 += 1, R148 += 1 };
  s3 -> s6 [0, 65535] { R5272 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5272 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5272 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R5274 += 1, R5210 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R5274 += 1, R5210 += 1, R151 += 1, R152 += 1 };
  s0 -> s0 [0, 65535] { R5273 += 1, R5274 += 1 };
  s0 -> s3 [0, 65535] { R5274 += 1, R5209 += 1, R5210 += 1 };
  s0 -> s4 [70, 70] { R5274 += 1, R5210 += 1, R151 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R5274 += 1, R5210 += 1, R151 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R5274 += 1, R5210 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R5274 += 1, R5210 += 1, R152 += 1 };
  s0 -> s1 [71, 74] { R5274 += 1, R5210 += 1, R152 += 1 };
  s0 -> s2 [71, 65535] { R5274 += 1, R5210 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R5274 += 1, R5210 += 1, R152 += 1 };
  s0 -> s1 [76, 65535] { R5274 += 1, R5210 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R5274 += 1, R5210 += 1, R152 += 1 };
  s1 -> s6 [70, 70] { R5274 += 1, R5210 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R5274 += 1, R5210 += 1, R152 += 1 };
  s1 -> s1 [71, 74] { R5274 += 1, R5210 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R5274 += 1, R5210 += 1, R152 += 1 };
  s1 -> s1 [76, 65535] { R5274 += 1, R5210 += 1, R152 += 1 };
  s2 -> s1 [0, 69] { R5274 += 1, R5210 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R5274 += 1, R5210 += 1, R151 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R5274 += 1, R5210 += 1, R151 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R5274 += 1, R5210 += 1, R151 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R5274 += 1, R5210 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R5274 += 1, R5210 += 1, R152 += 1 };
  s2 -> s1 [71, 74] { R5274 += 1, R5210 += 1, R152 += 1 };
  s2 -> s2 [71, 65535] { R5274 += 1, R5210 += 1, R151 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R5274 += 1, R5210 += 1, R152 += 1 };
  s2 -> s1 [76, 65535] { R5274 += 1, R5210 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R5274 += 1, R5210 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R5274 += 1, R5210 += 1, R151 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R5274 += 1, R5209 += 1, R5210 += 1 };
  s3 -> s4 [70, 70] { R5274 += 1, R5210 += 1, R151 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R5274 += 1, R5210 += 1, R151 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R5274 += 1, R5210 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R5274 += 1, R5210 += 1, R152 += 1 };
  s3 -> s1 [71, 74] { R5274 += 1, R5210 += 1, R152 += 1 };
  s3 -> s2 [71, 65535] { R5274 += 1, R5210 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R5274 += 1, R5210 += 1, R152 += 1 };
  s3 -> s1 [76, 65535] { R5274 += 1, R5210 += 1, R152 += 1 };
  s4 -> s6 [0, 74] { R5274 += 1, R5210 += 1, R152 += 1 };
  s4 -> s4 [0, 65535] { R5274 += 1, R5210 += 1, R151 += 1, R152 += 1 };
  s4 -> s11 [75, 75] { R5274 += 1, R5210 += 1, R152 += 1 };
  s4 -> s6 [76, 65535] { R5274 += 1, R5210 += 1, R152 += 1 };
  s6 -> s6 [0, 74] { R5274 += 1, R5210 += 1, R152 += 1 };
  s6 -> s11 [75, 75] { R5274 += 1, R5210 += 1, R152 += 1 };
  s6 -> s6 [76, 65535] { R5274 += 1, R5210 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R5274 += 1, R5210 += 1, R152 += 1 };
  s8 -> s8 [0, 65535] { R5274 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R5274 += 1, R5210 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R5274 += 1, R5210 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R5274 += 1, R5210 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R5274 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R5274 += 1, R5210 += 1, R152 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R5274 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R5274 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R5276 += 1, R5212 += 1, R155 += 1, R156 += 1 };
  s0 -> s0 [0, 65535] { R5275 += 1, R5276 += 1 };
  s0 -> s2 [0, 65535] { R5276 += 1, R5211 += 1, R5212 += 1 };
  s0 -> s3 [70, 70] { R5276 += 1, R5212 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R5276 += 1, R5212 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R5276 += 1, R5212 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R5276 += 1, R5212 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 65535] { R5276 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R5276 += 1, R5212 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R5276 += 1, R5212 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R5276 += 1, R5212 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R5276 += 1, R5212 += 1, R155 += 1, R156 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5276 += 1, R5211 += 1, R5212 += 1 };
  s2 -> s3 [70, 70] { R5276 += 1, R5212 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R5276 += 1, R5212 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R5276 += 1, R5212 += 1, R155 += 1, R156 += 1 };
  s3 -> s3 [0, 65535] { R5276 += 1, R5212 += 1, R155 += 1, R156 += 1 };
  s3 -> s6 [0, 65535] { R5276 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5276 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5276 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R5278 += 1, R5214 += 1, R161 += 1, R162 += 1 };
  s0 -> s0 [0, 65535] { R5277 += 1, R5278 += 1 };
  s0 -> s2 [0, 65535] { R5278 += 1, R5213 += 1, R5214 += 1 };
  s0 -> s3 [70, 70] { R5278 += 1, R5214 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R5278 += 1, R5214 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R5278 += 1, R5214 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R5278 += 1, R5214 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535] { R5278 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R5278 += 1, R5214 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R5278 += 1, R5214 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R5278 += 1, R5214 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R5278 += 1, R5214 += 1, R161 += 1, R162 += 1 };
  s2 -> s2 [0, 65535] { R5278 += 1, R5213 += 1, R5214 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R5278 += 1, R5214 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R5278 += 1, R5214 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R5278 += 1, R5214 += 1, R161 += 1, R162 += 1 };
  s3 -> s3 [0, 65535] { R5278 += 1, R5214 += 1, R161 += 1, R162 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R5278 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5278 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5278 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R5280 += 1, R5216 += 1, R167 += 1, R168 += 1 };
  s0 -> s2 [0, 65535] { R5280 += 1, R5215 += 1, R5216 += 1 };
  s0 -> s0 [0, 65535] { R5279 += 1, R5280 += 1 };
  s0 -> s3 [70, 70] { R5280 += 1, R5216 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R5280 += 1, R5216 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R5280 += 1, R5216 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R5280 += 1, R5216 += 1, R167 += 1, R168 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5280 += 1 };
  s1 -> s3 [70, 70] { R5280 += 1, R5216 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R5280 += 1, R5216 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R5280 += 1, R5216 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R5280 += 1, R5216 += 1, R167 += 1, R168 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5280 += 1, R5215 += 1, R5216 += 1 };
  s2 -> s3 [70, 70] { R5280 += 1, R5216 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R5280 += 1, R5216 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R5280 += 1, R5216 += 1, R167 += 1, R168 += 1 };
  s3 -> s3 [0, 65535] { R5280 += 1, R5216 += 1, R167 += 1, R168 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R5280 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5280 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5280 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R5282 += 1, R5218 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s2 [0, 69] { R5282 += 1, R5218 += 1, R175 += 1, R176 += 1 };
  s0 -> s3 [0, 65535] { R5282 += 1, R5217 += 1, R5218 += 1 };
  s0 -> s0 [0, 65535] { R5281 += 1, R5282 += 1 };
  s0 -> s4 [70, 70] { R5282 += 1, R5218 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s5 [70, 70] { R5282 += 1, R5218 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s6 [70, 70] { R5282 += 1, R5218 += 1, R175 += 1, R176 += 1 };
  s0 -> s7 [70, 70] { R5282 += 1, R5218 += 1, R175 += 1, R176 += 1 };
  s0 -> s1 [71, 65535] { R5282 += 1, R5218 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s2 [71, 65535] { R5282 += 1, R5218 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [0, 69] { R5282 += 1, R5218 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s1 [0, 65535] { R5282 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [70, 70] { R5282 += 1, R5218 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s5 [70, 70] { R5282 += 1, R5218 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s1 [71, 65535] { R5282 += 1, R5218 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s1 [0, 69] { R5282 += 1, R5218 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s2 [0, 69] { R5282 += 1, R5218 += 1, R175 += 1, R176 += 1 };
  s2 -> s4 [70, 70] { R5282 += 1, R5218 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s5 [70, 70] { R5282 += 1, R5218 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s6 [70, 70] { R5282 += 1, R5218 += 1, R175 += 1, R176 += 1 };
  s2 -> s7 [70, 70] { R5282 += 1, R5218 += 1, R175 += 1, R176 += 1 };
  s2 -> s1 [71, 65535] { R5282 += 1, R5218 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s2 [71, 65535] { R5282 += 1, R5218 += 1, R175 += 1, R176 += 1 };
  s3 -> s1 [0, 69] { R5282 += 1, R5218 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s2 [0, 69] { R5282 += 1, R5218 += 1, R175 += 1, R176 += 1 };
  s3 -> s3 [0, 65535] { R5282 += 1, R5217 += 1, R5218 += 1 };
  s3 -> s4 [70, 70] { R5282 += 1, R5218 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s5 [70, 70] { R5282 += 1, R5218 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s6 [70, 70] { R5282 += 1, R5218 += 1, R175 += 1, R176 += 1 };
  s3 -> s7 [70, 70] { R5282 += 1, R5218 += 1, R175 += 1, R176 += 1 };
  s3 -> s1 [71, 65535] { R5282 += 1, R5218 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s2 [71, 65535] { R5282 += 1, R5218 += 1, R175 += 1, R176 += 1 };
  s4 -> s9 [0, 65535] { R5282 += 1 };
  s4 -> s4 [0, 65535] { R5282 += 1, R5218 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R5282 += 1 };
  s6 -> s4 [0, 65535] { R5282 += 1, R5218 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s6 -> s6 [0, 65535] { R5282 += 1, R5218 += 1, R175 += 1, R176 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R5282 += 1 };
  s9 -> s8 [0, 65535];
  accepting s4, s8, s5, s9, s1;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R5284 += 1, R5220 += 1, R185 += 1, R186 += 1 };
  s0 -> s2 [0, 65535] { R5284 += 1, R5219 += 1, R5220 += 1 };
  s0 -> s0 [0, 65535] { R5283 += 1, R5284 += 1 };
  s0 -> s3 [70, 70] { R5284 += 1, R5220 += 1, R185 += 1, R186 += 1 };
  s0 -> s4 [70, 70] { R5284 += 1, R5220 += 1, R185 += 1, R186 += 1 };
  s0 -> s1 [71, 65535] { R5284 += 1, R5220 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 69] { R5284 += 1, R5220 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 65535] { R5284 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R5284 += 1, R5220 += 1, R185 += 1, R186 += 1 };
  s1 -> s4 [70, 70] { R5284 += 1, R5220 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [71, 65535] { R5284 += 1, R5220 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [0, 69] { R5284 += 1, R5220 += 1, R185 += 1, R186 += 1 };
  s2 -> s2 [0, 65535] { R5284 += 1, R5219 += 1, R5220 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R5284 += 1, R5220 += 1, R185 += 1, R186 += 1 };
  s2 -> s4 [70, 70] { R5284 += 1, R5220 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [71, 65535] { R5284 += 1, R5220 += 1, R185 += 1, R186 += 1 };
  s3 -> s3 [0, 65535] { R5284 += 1, R5220 += 1, R185 += 1, R186 += 1 };
  s3 -> s6 [0, 65535] { R5284 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5284 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5284 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R5286 += 1, R5222 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s0 -> s2 [0, 69] { R5286 += 1, R5222 += 1, R4015 += 1, R4016 += 1 };
  s0 -> s3 [0, 69] { R5286 += 1, R5222 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s0 -> s4 [0, 65535] { R5286 += 1, R5221 += 1, R5222 += 1 };
  s0 -> s0 [0, 65535] { R5285 += 1, R5286 += 1 };
  s0 -> s5 [70, 70] { R5286 += 1, R5222 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s0 -> s6 [70, 70] { R5286 += 1, R5222 += 1, R4015 += 1, R4016 += 1 };
  s0 -> s7 [70, 70] { R5286 += 1, R5222 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s0 -> s8 [70, 70] { R5286 += 1, R5222 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s0 -> s9 [70, 70] { R5286 += 1, R5222 += 1, R4015 += 1, R4016 += 1 };
  s0 -> s10 [70, 70] { R5286 += 1, R5222 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s0 -> s1 [71, 65535] { R5286 += 1, R5222 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s0 -> s2 [71, 65535] { R5286 += 1, R5222 += 1, R4015 += 1, R4016 += 1 };
  s0 -> s3 [71, 65535] { R5286 += 1, R5222 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s1 -> s1 [0, 69] { R5286 += 1, R5222 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s1 -> s14 [0, 69] { R5286 += 1, R5222 += 1, R4016 += 1 };
  s1 -> s15 [70, 70] { R5286 += 1, R5222 += 1, R4016 += 1 };
  s1 -> s11 [70, 70] { R5286 += 1, R5222 += 1, R4016 += 1 };
  s1 -> s8 [70, 70] { R5286 += 1, R5222 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s1 -> s10 [70, 70] { R5286 += 1, R5222 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s1 -> s1 [71, 65535] { R5286 += 1, R5222 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s1 -> s14 [71, 65535] { R5286 += 1, R5222 += 1, R4016 += 1 };
  s2 -> s1 [0, 69] { R5286 += 1, R5222 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s2 -> s2 [0, 69] { R5286 += 1, R5222 += 1, R4015 += 1, R4016 += 1 };
  s2 -> s3 [0, 69] { R5286 += 1, R5222 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s2 -> s5 [70, 70] { R5286 += 1, R5222 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s2 -> s6 [70, 70] { R5286 += 1, R5222 += 1, R4015 += 1, R4016 += 1 };
  s2 -> s7 [70, 70] { R5286 += 1, R5222 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s2 -> s8 [70, 70] { R5286 += 1, R5222 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s2 -> s9 [70, 70] { R5286 += 1, R5222 += 1, R4015 += 1, R4016 += 1 };
  s2 -> s10 [70, 70] { R5286 += 1, R5222 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s2 -> s1 [71, 65535] { R5286 += 1, R5222 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s2 -> s2 [71, 65535] { R5286 += 1, R5222 += 1, R4015 += 1, R4016 += 1 };
  s2 -> s3 [71, 65535] { R5286 += 1, R5222 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s3 -> s1 [0, 69] { R5286 += 1, R5222 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s3 -> s3 [0, 69] { R5286 += 1, R5222 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s3 -> s5 [70, 70] { R5286 += 1, R5222 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s3 -> s7 [70, 70] { R5286 += 1, R5222 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s3 -> s8 [70, 70] { R5286 += 1, R5222 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s3 -> s10 [70, 70] { R5286 += 1, R5222 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s3 -> s1 [71, 65535] { R5286 += 1, R5222 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s3 -> s3 [71, 65535] { R5286 += 1, R5222 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s4 -> s1 [0, 69] { R5286 += 1, R5222 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s4 -> s2 [0, 69] { R5286 += 1, R5222 += 1, R4015 += 1, R4016 += 1 };
  s4 -> s3 [0, 69] { R5286 += 1, R5222 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s4 -> s4 [0, 65535] { R5286 += 1, R5221 += 1, R5222 += 1 };
  s4 -> s5 [70, 70] { R5286 += 1, R5222 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s4 -> s6 [70, 70] { R5286 += 1, R5222 += 1, R4015 += 1, R4016 += 1 };
  s4 -> s7 [70, 70] { R5286 += 1, R5222 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s4 -> s8 [70, 70] { R5286 += 1, R5222 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s4 -> s9 [70, 70] { R5286 += 1, R5222 += 1, R4015 += 1, R4016 += 1 };
  s4 -> s10 [70, 70] { R5286 += 1, R5222 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s4 -> s1 [71, 65535] { R5286 += 1, R5222 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s4 -> s2 [71, 65535] { R5286 += 1, R5222 += 1, R4015 += 1, R4016 += 1 };
  s4 -> s3 [71, 65535] { R5286 += 1, R5222 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s5 -> s5 [0, 65535] { R5286 += 1, R5222 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s5 -> s10 [0, 65535] { R5286 += 1, R5222 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s6 -> s5 [0, 65535] { R5286 += 1, R5222 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s6 -> s6 [0, 65535] { R5286 += 1, R5222 += 1, R4015 += 1, R4016 += 1 };
  s6 -> s10 [0, 65535] { R5286 += 1, R5222 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s10 -> s11 [0, 65535] { R5286 += 1, R5222 += 1, R4016 += 1 };
  s10 -> s10 [0, 65535] { R5286 += 1, R5222 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s11 -> s11 [0, 65535] { R5286 += 1, R5222 += 1, R4016 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [0, 65535] { R5286 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R5286 += 1 };
  s14 -> s14 [0, 69] { R5286 += 1, R5222 += 1, R4016 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R5286 += 1 };
  s14 -> s15 [70, 70] { R5286 += 1, R5222 += 1, R4016 += 1 };
  s14 -> s11 [70, 70] { R5286 += 1, R5222 += 1, R4016 += 1 };
  s14 -> s14 [71, 65535] { R5286 += 1, R5222 += 1, R4016 += 1 };
  s15 -> s15 [0, 65535] { R5286 += 1 };
  s15 -> s12 [0, 65535];
  accepting s12, s13, s14, s15, s11;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R5288 += 1, R5224 += 1, R5131 += 1, R5132 += 1 };
  s0 -> s2 [0, 69] { R5288 += 1, R5224 += 1, R5132 += 1, R5133 += 1, R5134 += 1 };
  s0 -> s3 [0, 69] { R5288 += 1, R5224 += 1, R5132 += 1, R5134 += 1 };
  s0 -> s4 [0, 65535] { R5288 += 1, R5223 += 1, R5224 += 1 };
  s0 -> s0 [0, 65535] { R5287 += 1, R5288 += 1 };
  s0 -> s5 [70, 70] { R5288 += 1, R5224 += 1, R5132 += 1, R5133 += 1, R5134 += 1 };
  s0 -> s6 [70, 70] { R5288 += 1, R5224 += 1, R5131 += 1, R5132 += 1 };
  s0 -> s7 [70, 70] { R5288 += 1, R5224 += 1, R5132 += 1, R5134 += 1 };
  s0 -> s8 [70, 70] { R5288 += 1, R5224 += 1, R5131 += 1, R5132 += 1 };
  s0 -> s9 [70, 70] { R5288 += 1, R5224 += 1, R5132 += 1, R5134 += 1 };
  s0 -> s10 [70, 70] { R5288 += 1, R5224 += 1, R5132 += 1, R5133 += 1, R5134 += 1 };
  s0 -> s3 [71, 74] { R5288 += 1, R5224 += 1, R5132 += 1, R5134 += 1 };
  s0 -> s1 [71, 65535] { R5288 += 1, R5224 += 1, R5131 += 1, R5132 += 1 };
  s0 -> s2 [71, 65535] { R5288 += 1, R5224 += 1, R5132 += 1, R5133 += 1, R5134 += 1 };
  s0 -> s3 [85, 65535] { R5288 += 1, R5224 += 1, R5132 += 1, R5134 += 1 };
  s1 -> s1 [0, 69] { R5288 += 1, R5224 += 1, R5131 += 1, R5132 += 1 };
  s1 -> s2 [0, 69] { R5288 += 1, R5224 += 1, R5132 += 1, R5133 += 1, R5134 += 1 };
  s1 -> s3 [0, 69] { R5288 += 1, R5224 += 1, R5132 += 1, R5134 += 1 };
  s1 -> s5 [70, 70] { R5288 += 1, R5224 += 1, R5132 += 1, R5133 += 1, R5134 += 1 };
  s1 -> s6 [70, 70] { R5288 += 1, R5224 += 1, R5131 += 1, R5132 += 1 };
  s1 -> s7 [70, 70] { R5288 += 1, R5224 += 1, R5132 += 1, R5134 += 1 };
  s1 -> s8 [70, 70] { R5288 += 1, R5224 += 1, R5131 += 1, R5132 += 1 };
  s1 -> s9 [70, 70] { R5288 += 1, R5224 += 1, R5132 += 1, R5134 += 1 };
  s1 -> s10 [70, 70] { R5288 += 1, R5224 += 1, R5132 += 1, R5133 += 1, R5134 += 1 };
  s1 -> s3 [71, 74] { R5288 += 1, R5224 += 1, R5132 += 1, R5134 += 1 };
  s1 -> s1 [71, 65535] { R5288 += 1, R5224 += 1, R5131 += 1, R5132 += 1 };
  s1 -> s2 [71, 65535] { R5288 += 1, R5224 += 1, R5132 += 1, R5133 += 1, R5134 += 1 };
  s1 -> s3 [85, 65535] { R5288 += 1, R5224 += 1, R5132 += 1, R5134 += 1 };
  s2 -> s2 [0, 69] { R5288 += 1, R5224 += 1, R5132 += 1, R5133 += 1, R5134 += 1 };
  s2 -> s3 [0, 69] { R5288 += 1, R5224 += 1, R5132 += 1, R5134 += 1 };
  s2 -> s5 [70, 70] { R5288 += 1, R5224 += 1, R5132 += 1, R5133 += 1, R5134 += 1 };
  s2 -> s7 [70, 70] { R5288 += 1, R5224 += 1, R5132 += 1, R5134 += 1 };
  s2 -> s9 [70, 70] { R5288 += 1, R5224 += 1, R5132 += 1, R5134 += 1 };
  s2 -> s10 [70, 70] { R5288 += 1, R5224 += 1, R5132 += 1, R5133 += 1, R5134 += 1 };
  s2 -> s3 [71, 74] { R5288 += 1, R5224 += 1, R5132 += 1, R5134 += 1 };
  s2 -> s2 [71, 65535] { R5288 += 1, R5224 += 1, R5132 += 1, R5133 += 1, R5134 += 1 };
  s2 -> s3 [85, 65535] { R5288 += 1, R5224 += 1, R5132 += 1, R5134 += 1 };
  s3 -> s3 [0, 69] { R5288 += 1, R5224 += 1, R5132 += 1, R5134 += 1 };
  s3 -> s11 [0, 65535];
  s3 -> s3 [0, 65535] { R5288 += 1 };
  s3 -> s7 [70, 70] { R5288 += 1, R5224 += 1, R5132 += 1, R5134 += 1 };
  s3 -> s9 [70, 70] { R5288 += 1, R5224 += 1, R5132 += 1, R5134 += 1 };
  s3 -> s3 [71, 74] { R5288 += 1, R5224 += 1, R5132 += 1, R5134 += 1 };
  s3 -> s3 [85, 65535] { R5288 += 1, R5224 += 1, R5132 += 1, R5134 += 1 };
  s4 -> s1 [0, 69] { R5288 += 1, R5224 += 1, R5131 += 1, R5132 += 1 };
  s4 -> s2 [0, 69] { R5288 += 1, R5224 += 1, R5132 += 1, R5133 += 1, R5134 += 1 };
  s4 -> s3 [0, 69] { R5288 += 1, R5224 += 1, R5132 += 1, R5134 += 1 };
  s4 -> s4 [0, 65535] { R5288 += 1, R5223 += 1, R5224 += 1 };
  s4 -> s5 [70, 70] { R5288 += 1, R5224 += 1, R5132 += 1, R5133 += 1, R5134 += 1 };
  s4 -> s6 [70, 70] { R5288 += 1, R5224 += 1, R5131 += 1, R5132 += 1 };
  s4 -> s7 [70, 70] { R5288 += 1, R5224 += 1, R5132 += 1, R5134 += 1 };
  s4 -> s8 [70, 70] { R5288 += 1, R5224 += 1, R5131 += 1, R5132 += 1 };
  s4 -> s9 [70, 70] { R5288 += 1, R5224 += 1, R5132 += 1, R5134 += 1 };
  s4 -> s10 [70, 70] { R5288 += 1, R5224 += 1, R5132 += 1, R5133 += 1, R5134 += 1 };
  s4 -> s3 [71, 74] { R5288 += 1, R5224 += 1, R5132 += 1, R5134 += 1 };
  s4 -> s1 [71, 65535] { R5288 += 1, R5224 += 1, R5131 += 1, R5132 += 1 };
  s4 -> s2 [71, 65535] { R5288 += 1, R5224 += 1, R5132 += 1, R5133 += 1, R5134 += 1 };
  s4 -> s3 [85, 65535] { R5288 += 1, R5224 += 1, R5132 += 1, R5134 += 1 };
  s6 -> s7 [0, 74] { R5288 += 1, R5224 += 1, R5132 += 1, R5134 += 1 };
  s6 -> s6 [0, 65535] { R5288 += 1, R5224 += 1, R5131 += 1, R5132 += 1 };
  s6 -> s10 [0, 65535] { R5288 += 1, R5224 += 1, R5132 += 1, R5133 += 1, R5134 += 1 };
  s6 -> s7 [85, 65535] { R5288 += 1, R5224 += 1, R5132 += 1, R5134 += 1 };
  s7 -> s7 [0, 74] { R5288 += 1, R5224 += 1, R5132 += 1, R5134 += 1 };
  s7 -> s7 [0, 65535] { R5288 += 1 };
  s7 -> s11 [0, 65535];
  s7 -> s7 [85, 65535] { R5288 += 1, R5224 += 1, R5132 += 1, R5134 += 1 };
  s9 -> s9 [0, 65535] { R5288 += 1 };
  s9 -> s11 [0, 65535];
  s10 -> s7 [0, 74] { R5288 += 1, R5224 += 1, R5132 += 1, R5134 += 1 };
  s10 -> s10 [0, 65535] { R5288 += 1, R5224 += 1, R5132 += 1, R5133 += 1, R5134 += 1 };
  s10 -> s7 [85, 65535] { R5288 += 1, R5224 += 1, R5132 += 1, R5134 += 1 };
  s11 -> s11 [0, 65535];
  accepting s3, s7, s9, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
constraint R2 = R5168 && R3 = R5288 && R25 - R5288 = -1 && R26 = R5288 && R27 - R5288 = -1 && R28 = R5288 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R5136 + -1*R5132 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R5136 + -1*R5132 - R130 = 0 && R129 + R5135 + R5131 = 0 && R131 + R5137 + R5133 = 0 && R132 + R5138 + R5134 = 0 && R5167 = 0 && R5199 = 0 && R5200 = 0 && R5209 = 0 && R5210 = 0 && R5217 = 0 && R5218 = 0 && R5221 = 0 && R5222 = 0 && R5223 = 0 && R5224 = 0 && R5225 = 0 && R5226 = R5288 && R5227 = 0 && R5228 = R5288 && R5229 = 0 && R5230 = R5288 && R5231 = 0 && R5232 = R5288 && R5233 = 0 && R5234 = R5288 && R5235 = 0 && R5236 = R5288 && R5237 = 0 && R5238 = R5288 && R5239 = 0 && R5240 = R5288 && R5241 = 0 && R5242 = R5288 && R5243 = 0 && R5244 = R5288 && R5245 = 0 && R5246 = R5288 && R5247 = 0 && R5248 = R5288 && R5249 = 0 && R5250 = R5288 && R5251 = 0 && R5252 = R5288 && R5253 = 0 && R5254 = R5288 && R5255 = 0 && R5256 = R5288 && R5257 = 0 && R5258 = R5288 && R5259 = 0 && R5260 = R5288 && R5261 = 0 && R5262 = R5288 && R5263 = 0 && R5264 = R5288 && R5265 = 0 && R5266 = R5288 && R5267 = 0 && R5268 = R5288 && R5269 = 0 && R5270 = R5288 && R5271 = 0 && R5272 = R5288 && R5273 = 0 && R5274 = R5288 && R5275 = 0 && R5276 = R5288 && R5277 = 0 && R5278 = R5288 && R5279 = 0 && R5280 = R5288 && R5281 = 0 && R5282 = R5288 && R5283 = 0 && R5284 = R5288 && R5285 = 0 && R5286 = R5288 && R5287 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R5136 + -1*R5132 - R130 < 1 && -1 < R5168 && 0 < R5288 && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R5136 + -1*R5132 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R191 + R187 = 0 && R114 + R192 + R188 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R5136 + -1*R5132 - R130 = 0 || R130 + R5136 + R5132 < 1) && (R81 + R158 + R155 = 0 || R130 + R5136 + R5132 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R5136 + -1*R5132 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R5136 + R5132 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R5136 + -1*R5132 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R5136 + R5132 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R5136 + -1*R5132 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R5136 + R5132 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 != 0 || R112 + R190 + R186 + -1*R5136 + -1*R5132 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R5136 + R5132 = 0)) && (R113 + R191 + R187 != 0 || R83 + R160 + R157 + -1*R192 + -1*R188 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R4020 + R4015 != 0 || R120 + R4021 + R4016 + -1*R5136 + -1*R5132 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R5136 + R5132 = 0)) && (R5139 != 0 || R5140 = R5168 || (R22 = 0 && R5168 = 0)) && (R5141 != 0 || R5142 = R5168 || (R22 = 0 && R5168 = 0)) && (R5143 != 0 || R5144 = R5168 || (R22 = 0 && R5168 = 0)) && (R5145 != 0 || R5146 = R5168 || (R22 = 0 && R5168 = 0)) && (R5147 != 0 || R5148 = R5168 || (R22 = 0 && R5168 = 0)) && (R5149 != 0 || R5150 = R5168 || (R22 = 0 && R5168 = 0)) && (R5151 != 0 || R5152 = R5168 || (R22 = 0 && R5168 = 0)) && (R5153 != 0 || R5154 = R5168 || (R22 = 0 && R5168 = 0)) && (R5155 != 0 || R5156 = R5168 || (R22 = 0 && R5168 = 0)) && (R5157 != 0 || R5158 = R5168 || (R22 = 0 && R5168 = 0)) && (R5159 != 0 || R5160 = R5168 || (R22 = 0 && R5168 = 0)) && (R5161 != 0 || R5162 = R5168 || (R22 = 0 && R5168 = 0)) && (R5163 != 0 || R5164 = R5168 || (R22 = 0 && R5168 = 0)) && (R5165 != 0 || R5166 = R5168 || (R22 = 0 && R5168 = 0)) && (R23 = 0 || (R5197 = 0 && R5198 = 0)) && (R23 = 0 || (R5201 = 0 && R5202 = 0)) && (R23 = 0 || (R5203 = 0 && R5204 = 0)) && (R23 = 0 || (R5205 = 0 && R5206 = 0)) && (R23 = 0 || (R5207 = 0 && R5208 = 0)) && (R23 = 0 || (R5211 = 0 && R5212 = 0)) && (R23 = 0 || (R5213 = 0 && R5214 = 0)) && (R23 = 0 || (R5215 = 0 && R5216 = 0)) && (R23 = 0 || (R5219 = 0 && R5220 = 0)) && (R24 = 0 || (R5169 = 0 && R5170 = 0)) && (R24 = 0 || (R5171 = 0 && R5172 = 0)) && (R24 = 0 || (R5173 = 0 && R5174 = 0)) && (R24 = 0 || (R5175 = 0 && R5176 = 0)) && (R24 = 0 || (R5177 = 0 && R5178 = 0)) && (R24 = 0 || (R5179 = 0 && R5180 = 0)) && (R24 = 0 || (R5181 = 0 && R5182 = 0)) && (R24 = 0 || (R5183 = 0 && R5184 = 0)) && (R24 = 0 || (R5185 = 0 && R5186 = 0)) && (R24 = 0 || (R5187 = 0 && R5188 = 0)) && (R24 = 0 || (R5189 = 0 && R5190 = 0)) && (R24 = 0 || (R5191 = 0 && R5192 = 0)) && (R24 = 0 || (R5193 = 0 && R5194 = 0)) && (R24 = 0 || (R5195 = 0 && R5196 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R5136 + R5132 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R5136 + R5132 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R5136 + R5132 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 = 0 || (R83 + R160 + R157 = 0 && R130 + R5136 + R5132 = 0)) && (R113 + R191 + R187 = 0 || R83 + R160 + R157 < 1) && (R119 + R4020 + R4015 = 0 || (R83 + R160 + R157 = 0 && R130 + R5136 + R5132 = 0)) && (R123 + R4024 + R4019 = 0 || (R121 + R4022 + R4017 = 0 && R122 + R4023 + R4018 = 0)) && (R5139 = 0 || (R22 = 0 && R5168 = 0)) && (R5141 = 0 || (R22 = 0 && R5168 = 0)) && (R5143 = 0 || (R22 = 0 && R5168 = 0)) && (R5145 = 0 || (R22 = 0 && R5168 = 0)) && (R5147 = 0 || (R22 = 0 && R5168 = 0)) && (R5149 = 0 || (R22 = 0 && R5168 = 0)) && (R5151 = 0 || (R22 = 0 && R5168 = 0)) && (R5153 = 0 || (R22 = 0 && R5168 = 0)) && (R5155 = 0 || (R22 = 0 && R5168 = 0)) && (R5157 = 0 || (R22 = 0 && R5168 = 0)) && (R5159 = 0 || (R22 = 0 && R5168 = 0)) && (R5161 = 0 || (R22 = 0 && R5168 = 0)) && (R5163 = 0 || (R22 = 0 && R5168 = 0)) && (R5165 = 0 || (R22 = 0 && R5168 = 0));
// End of Parikh automata intersection problem
