// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R1151, R1152, R1153, R1154, R1155, R1156, R1157, R1158, R1159, R1160, R1161, R1162, R1163, R1164, R1165, R1166, R1167, R1168, R1169, R1170, R1171, R1172, R1173, R1174, R1175, R1176, R1177, R1178, R1179, R1180, R1181, R1182, R1183, R1184, R1185, R1186, R1187, R1188, R1189, R119, R1190, R1191, R1192, R1193, R1194, R1195, R1196, R1197, R1198, R1199, R12, R120, R1200, R1201, R1202, R1203, R1204, R1205, R1206, R1207, R1208, R1209, R121, R1210, R1211, R1212, R1213, R1214, R1215, R1216, R1217, R1218, R1219, R122, R1220, R1221, R1222, R1223, R1224, R1225, R1226, R1227, R1228, R1229, R123, R1230, R1231, R1232, R1233, R1234, R1235, R1236, R1237, R1238, R1239, R1240, R1241, R1242, R1243, R1244, R1245, R1246, R1247, R1248, R1249, R1250, R1251, R1252, R1253, R1254, R1255, R1256, R1257, R1258, R1259, R1260, R1261, R1262, R1263, R1264, R1265, R1266, R1267, R1268, R1269, R1270, R1271, R1272, R1273, R1274, R1275, R1276, R1277, R1278, R1279, R1280, R1281, R1282, R1283, R1284, R1285, R1286, R1287, R1288, R1289, R129, R1290, R1291, R1292, R1293, R1294, R1295, R1296, R1297, R1298, R1299, R130, R1300, R1301, R1302, R1303, R1304, R1305, R1306, R1307, R1308, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R193, R194, R195, R196, R197, R198, R199, R2, R200, R201, R202, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R5, R63, R65, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R30 += 1 };
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R1189 += 1, R1190 += 1 };
  s0 -> s1 [0, 65535] { R1190 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R1190 += 1, R24 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R1192 += 1 };
  s0 -> s0 [0, 65535] { R1191 += 1, R1192 += 1 };
  s0 -> s2 [70, 70] { R1192 += 1 };
  s0 -> s3 [70, 70] { R1192 += 1 };
  s0 -> s1 [76, 65535] { R1192 += 1 };
  s1 -> s1 [0, 69] { R1192 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1192 += 1 };
  s1 -> s3 [70, 70] { R1192 += 1 };
  s1 -> s1 [76, 65535] { R1192 += 1 };
  s2 -> s2 [0, 70] { R1192 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R1192 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R1194 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R1193 += 1, R1194 += 1 };
  s0 -> s2 [70, 70] { R1194 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R1194 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R1194 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R1194 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1194 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R1194 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R1194 += 1, R63 += 1 };
  s2 -> s2 [0, 65535] { R1194 += 1, R63 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R1196 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R1195 += 1, R1196 += 1 };
  s0 -> s2 [70, 70] { R1196 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R1196 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R1196 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R1196 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1196 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R1196 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R1196 += 1, R65 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R1196 += 1, R65 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R1198 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R1197 += 1, R1198 += 1 };
  s0 -> s2 [70, 70] { R1198 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R1198 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R1198 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R1198 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1198 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R1198 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R1198 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1198 += 1, R67 += 1, R68 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R1200 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R1199 += 1, R1200 += 1 };
  s0 -> s2 [70, 70] { R1200 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R1200 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R1200 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R1200 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1200 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R1200 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R1200 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1200 += 1, R73 += 1, R74 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R1202 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R1201 += 1, R1202 += 1 };
  s0 -> s2 [70, 70] { R1202 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R1202 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R1202 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R1202 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1202 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R1202 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R1202 += 1, R77 += 1, R78 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1202 += 1, R77 += 1, R78 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R1204 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R1203 += 1, R1204 += 1 };
  s0 -> s2 [70, 70] { R1204 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R1204 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R1204 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R1204 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1204 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R1204 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R1204 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1204 += 1, R81 += 1, R82 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R1206 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R1205 += 1, R1206 += 1 };
  s0 -> s2 [70, 70] { R1206 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R1206 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R1206 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R1206 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1206 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R1206 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R1206 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1206 += 1, R87 += 1, R88 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R1208 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R1207 += 1, R1208 += 1 };
  s0 -> s2 [70, 70] { R1208 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R1208 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R1208 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R1208 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1208 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R1208 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R1208 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1208 += 1, R93 += 1, R94 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R1210 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R1209 += 1, R1210 += 1 };
  s0 -> s2 [70, 70] { R1210 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R1210 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R1210 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R1210 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1210 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R1210 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R1210 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1210 += 1, R101 += 1, R102 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R1212 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R1211 += 1, R1212 += 1 };
  s0 -> s2 [70, 70] { R1212 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R1212 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R1212 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R1212 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1212 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R1212 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R1212 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1212 += 1, R111 += 1, R112 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R1214 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R1213 += 1, R1214 += 1 };
  s0 -> s2 [70, 70] { R1214 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R1214 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R1214 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R1214 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1214 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R1214 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R1214 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R1214 += 1, R119 += 1, R120 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R1216 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R1215 += 1, R1216 += 1 };
  s0 -> s2 [70, 70] { R1216 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R1216 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R1216 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R1216 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1216 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R1216 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R1216 += 1, R129 += 1, R130 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1216 += 1, R129 += 1, R130 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R1246 += 1 };
  s0 -> s0 [0, 65535] { R1245 += 1, R1246 += 1 };
  s0 -> s2 [70, 70] { R1246 += 1 };
  s0 -> s1 [71, 65535] { R1246 += 1 };
  s1 -> s1 [0, 69] { R1246 += 1 };
  s1 -> s2 [70, 70] { R1246 += 1 };
  s1 -> s1 [71, 65535] { R1246 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1246 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R1247 += 1, R1248 += 1 };
  s0 -> s1 [0, 65535] { R1248 += 1, R2 += 1 };
  s1 -> s1 [0, 65535] { R1248 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R1250 += 1 };
  s0 -> s2 [0, 65535] { R1250 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R1249 += 1, R1250 += 1 };
  s0 -> s3 [70, 70] { R1250 += 1 };
  s0 -> s1 [71, 65535] { R1250 += 1 };
  s1 -> s1 [0, 69] { R1250 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R1250 += 1 };
  s1 -> s1 [71, 65535] { R1250 += 1 };
  s2 -> s1 [0, 69] { R1250 += 1 };
  s2 -> s2 [0, 65535] { R1250 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R1250 += 1 };
  s2 -> s1 [71, 65535] { R1250 += 1 };
  s3 -> s3 [0, 65535] { R1250 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R1252 += 1, R1160 += 1 };
  s0 -> s2 [0, 65535] { R1252 += 1, R1159 += 1, R1160 += 1 };
  s0 -> s0 [0, 65535] { R1251 += 1, R1252 += 1 };
  s0 -> s1 [71, 65535] { R1252 += 1, R1160 += 1 };
  s1 -> s1 [0, 69] { R1252 += 1, R1160 += 1 };
  s1 -> s1 [0, 65535] { R1252 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R1252 += 1, R1160 += 1 };
  s2 -> s1 [0, 69] { R1252 += 1, R1160 += 1 };
  s2 -> s2 [0, 65535] { R1252 += 1, R1159 += 1, R1160 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R1252 += 1, R1160 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R1254 += 1, R1161 += 1, R1162 += 1 };
  s0 -> s2 [0, 65535] { R1254 += 1, R1162 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R1253 += 1, R1254 += 1 };
  s1 -> s1 [0, 65535] { R1254 += 1, R1161 += 1, R1162 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R1254 += 1, R1162 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1254 += 1, R1162 += 1, R22 += 1 };
  s2 -> s4 [0, 65535] { R1254 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1254 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R1256 += 1, R1164 += 1 };
  s0 -> s2 [0, 65535] { R1256 += 1, R1163 += 1, R1164 += 1 };
  s0 -> s0 [0, 65535] { R1255 += 1, R1256 += 1 };
  s0 -> s1 [75, 65535] { R1256 += 1, R1164 += 1 };
  s1 -> s1 [0, 70] { R1256 += 1, R1164 += 1 };
  s1 -> s1 [0, 65535] { R1256 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R1256 += 1, R1164 += 1 };
  s2 -> s1 [0, 70] { R1256 += 1, R1164 += 1 };
  s2 -> s2 [0, 65535] { R1256 += 1, R1163 += 1, R1164 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R1256 += 1, R1164 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R1258 += 1, R1166 += 1, R138 += 1 };
  s0 -> s0 [0, 65535] { R1257 += 1, R1258 += 1 };
  s0 -> s2 [0, 65535] { R1258 += 1, R1165 += 1, R1166 += 1 };
  s1 -> s1 [0, 65535] { R1258 += 1, R1166 += 1, R138 += 1 };
  s1 -> s4 [0, 65535] { R1258 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R1258 += 1, R1166 += 1, R138 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1258 += 1, R1165 += 1, R1166 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1258 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R1260 += 1, R1168 += 1 };
  s0 -> s2 [0, 65535] { R1260 += 1, R1167 += 1, R1168 += 1 };
  s0 -> s0 [0, 65535] { R1259 += 1, R1260 += 1 };
  s0 -> s3 [0, 65535] { R1260 += 1, R1168 += 1, R140 += 1 };
  s0 -> s1 [76, 65535] { R1260 += 1, R1168 += 1 };
  s1 -> s1 [0, 74] { R1260 += 1, R1168 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R1260 += 1 };
  s1 -> s1 [76, 65535] { R1260 += 1, R1168 += 1 };
  s2 -> s1 [0, 74] { R1260 += 1, R1168 += 1 };
  s2 -> s2 [0, 65535] { R1260 += 1, R1167 += 1, R1168 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R1260 += 1, R1168 += 1, R140 += 1 };
  s2 -> s1 [76, 65535] { R1260 += 1, R1168 += 1 };
  s3 -> s1 [0, 74] { R1260 += 1, R1168 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1260 += 1, R1168 += 1, R140 += 1 };
  s3 -> s5 [0, 65535] { R1260 += 1 };
  s3 -> s1 [76, 65535] { R1260 += 1, R1168 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1260 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R1262 += 1, R1170 += 1, R145 += 1, R146 += 1 };
  s0 -> s0 [0, 65535] { R1261 += 1, R1262 += 1 };
  s0 -> s2 [0, 65535] { R1262 += 1, R1170 += 1, R144 += 1, R145 += 1 };
  s0 -> s3 [0, 65535] { R1262 += 1, R1169 += 1, R1170 += 1 };
  s1 -> s1 [0, 65535] { R1262 += 1, R1170 += 1, R145 += 1, R146 += 1 };
  s1 -> s6 [0, 65535] { R1262 += 1, R1170 += 1 };
  s1 -> s5 [0, 65535] { R1262 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R1262 += 1, R1170 += 1, R145 += 1, R146 += 1 };
  s2 -> s5 [0, 65535] { R1262 += 1 };
  s2 -> s2 [0, 65535] { R1262 += 1, R1170 += 1, R144 += 1, R145 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R1262 += 1, R1170 += 1, R145 += 1, R146 += 1 };
  s3 -> s2 [0, 65535] { R1262 += 1, R1170 += 1, R144 += 1, R145 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1262 += 1, R1169 += 1, R1170 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1262 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R1262 += 1, R1170 += 1 };
  s6 -> s5 [0, 65535] { R1262 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R1264 += 1, R1172 += 1, R150 += 1 };
  s0 -> s2 [0, 65535] { R1264 += 1, R1172 += 1, R149 += 1, R150 += 1 };
  s0 -> s0 [0, 65535] { R1263 += 1, R1264 += 1 };
  s0 -> s3 [0, 65535] { R1264 += 1, R1171 += 1, R1172 += 1 };
  s0 -> s4 [75, 75] { R1264 += 1, R1172 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R1264 += 1, R1172 += 1, R150 += 1 };
  s0 -> s1 [85, 65535] { R1264 += 1, R1172 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R1264 += 1, R1172 += 1, R150 += 1 };
  s1 -> s6 [0, 65535] { R1264 += 1 };
  s1 -> s1 [0, 65535] { R1264 += 1, R1172 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [75, 75] { R1264 += 1, R1172 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R1264 += 1, R1172 += 1, R150 += 1 };
  s1 -> s1 [85, 65535] { R1264 += 1, R1172 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R1264 += 1, R1172 += 1, R150 += 1 };
  s2 -> s6 [0, 65535] { R1264 += 1 };
  s2 -> s2 [0, 65535] { R1264 += 1, R1172 += 1, R149 += 1, R150 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [75, 75] { R1264 += 1, R1172 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R1264 += 1, R1172 += 1, R150 += 1 };
  s2 -> s1 [85, 65535] { R1264 += 1, R1172 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R1264 += 1, R1172 += 1, R150 += 1 };
  s3 -> s2 [0, 65535] { R1264 += 1, R1172 += 1, R149 += 1, R150 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R1264 += 1, R1171 += 1, R1172 += 1 };
  s3 -> s4 [75, 75] { R1264 += 1, R1172 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R1264 += 1, R1172 += 1, R150 += 1 };
  s3 -> s1 [85, 65535] { R1264 += 1, R1172 += 1, R150 += 1 };
  s4 -> s4 [0, 75] { R1264 += 1, R1172 += 1, R150 += 1 };
  s4 -> s6 [0, 65535] { R1264 += 1 };
  s4 -> s4 [0, 65535] { R1264 += 1, R1172 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [85, 65535] { R1264 += 1, R1172 += 1, R150 += 1 };
  s5 -> s6 [0, 65535] { R1264 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R1264 += 1, R1172 += 1 };
  s6 -> s6 [0, 65535] { R1264 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R1266 += 1, R1174 += 1 };
  s0 -> s2 [0, 65535] { R1266 += 1, R1173 += 1, R1174 += 1 };
  s0 -> s0 [0, 65535] { R1265 += 1, R1266 += 1 };
  s0 -> s3 [0, 65535] { R1266 += 1, R1174 += 1, R154 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R1266 += 1, R1174 += 1 };
  s1 -> s5 [0, 65535] { R1266 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R1266 += 1, R1174 += 1 };
  s2 -> s2 [0, 65535] { R1266 += 1, R1173 += 1, R1174 += 1 };
  s2 -> s3 [0, 65535] { R1266 += 1, R1174 += 1, R154 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R1266 += 1, R1174 += 1 };
  s3 -> s5 [0, 65535] { R1266 += 1 };
  s3 -> s3 [0, 65535] { R1266 += 1, R1174 += 1, R154 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1266 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s0 [0, 65535] { R1267 += 1, R1268 += 1 };
  s0 -> s1 [0, 65535] { R1268 += 1, R1176 += 1, R158 += 1, R159 += 1 };
  s0 -> s2 [0, 65535] { R1268 += 1, R1176 += 1, R159 += 1, R160 += 1 };
  s0 -> s3 [0, 65535] { R1268 += 1, R1175 += 1, R1176 += 1 };
  s1 -> s5 [0, 65535] { R1268 += 1 };
  s1 -> s1 [0, 65535] { R1268 += 1, R1176 += 1, R158 += 1, R159 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R1268 += 1, R1176 += 1, R159 += 1, R160 += 1 };
  s2 -> s5 [0, 65535] { R1268 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s6 [0, 65535] { R1268 += 1, R1176 += 1 };
  s2 -> s2 [0, 65535] { R1268 += 1, R1176 += 1, R159 += 1, R160 += 1 };
  s3 -> s1 [0, 65535] { R1268 += 1, R1176 += 1, R158 += 1, R159 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R1268 += 1, R1176 += 1, R159 += 1, R160 += 1 };
  s3 -> s3 [0, 65535] { R1268 += 1, R1175 += 1, R1176 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1268 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R1268 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R1268 += 1, R1176 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R1270 += 1, R1178 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R1270 += 1, R1177 += 1, R1178 += 1 };
  s0 -> s3 [0, 65535] { R1270 += 1, R1178 += 1, R164 += 1, R165 += 1 };
  s0 -> s0 [0, 65535] { R1269 += 1, R1270 += 1 };
  s0 -> s4 [0, 65535] { R1270 += 1, R1178 += 1, R165 += 1, R166 += 1 };
  s0 -> s1 [76, 65535] { R1270 += 1, R1178 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R1270 += 1, R1178 += 1, R165 += 1 };
  s1 -> s5 [0, 65535] { R1270 += 1 };
  s1 -> s1 [0, 65535] { R1270 += 1, R1178 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [76, 65535] { R1270 += 1, R1178 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R1270 += 1, R1178 += 1, R165 += 1 };
  s2 -> s2 [0, 65535] { R1270 += 1, R1177 += 1, R1178 += 1 };
  s2 -> s3 [0, 65535] { R1270 += 1, R1178 += 1, R164 += 1, R165 += 1 };
  s2 -> s4 [0, 65535] { R1270 += 1, R1178 += 1, R165 += 1, R166 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s1 [76, 65535] { R1270 += 1, R1178 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R1270 += 1, R1178 += 1, R165 += 1 };
  s3 -> s5 [0, 65535] { R1270 += 1 };
  s3 -> s3 [0, 65535] { R1270 += 1, R1178 += 1, R164 += 1, R165 += 1 };
  s3 -> s4 [0, 65535] { R1270 += 1, R1178 += 1, R165 += 1, R166 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s1 [76, 65535] { R1270 += 1, R1178 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R1270 += 1, R1178 += 1, R165 += 1 };
  s4 -> s5 [0, 65535] { R1270 += 1 };
  s4 -> s6 [0, 65535] { R1270 += 1, R1178 += 1 };
  s4 -> s4 [0, 65535] { R1270 += 1, R1178 += 1, R165 += 1, R166 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s1 [76, 65535] { R1270 += 1, R1178 += 1, R165 += 1 };
  s5 -> s5 [0, 65535] { R1270 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s5 [0, 65535] { R1270 += 1 };
  s6 -> s6 [0, 65535] { R1270 += 1, R1178 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R1272 += 1, R1180 += 1, R172 += 1, R174 += 1 };
  s0 -> s0 [0, 65535] { R1271 += 1, R1272 += 1 };
  s0 -> s2 [0, 65535] { R1272 += 1, R1180 += 1, R171 += 1, R172 += 1 };
  s0 -> s3 [0, 65535] { R1272 += 1, R1179 += 1, R1180 += 1 };
  s0 -> s4 [0, 65535] { R1272 += 1, R1180 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s1 [76, 65535] { R1272 += 1, R1180 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R1272 += 1, R1180 += 1, R172 += 1, R174 += 1 };
  s1 -> s5 [0, 65535] { R1272 += 1, R1180 += 1 };
  s1 -> s1 [0, 65535] { R1272 += 1, R1180 += 1, R172 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R1272 += 1 };
  s1 -> s1 [76, 65535] { R1272 += 1, R1180 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R1272 += 1, R1180 += 1, R172 += 1, R174 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R1272 += 1, R1180 += 1, R171 += 1, R172 += 1 };
  s2 -> s7 [0, 65535] { R1272 += 1 };
  s2 -> s4 [0, 65535] { R1272 += 1, R1180 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s1 [76, 65535] { R1272 += 1, R1180 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R1272 += 1, R1180 += 1, R172 += 1, R174 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R1272 += 1, R1180 += 1, R171 += 1, R172 += 1 };
  s3 -> s3 [0, 65535] { R1272 += 1, R1179 += 1, R1180 += 1 };
  s3 -> s4 [0, 65535] { R1272 += 1, R1180 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s1 [76, 65535] { R1272 += 1, R1180 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R1272 += 1, R1180 += 1, R172 += 1, R174 += 1 };
  s4 -> s5 [0, 65535] { R1272 += 1, R1180 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R1272 += 1 };
  s4 -> s4 [0, 65535] { R1272 += 1, R1180 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s1 [76, 65535] { R1272 += 1, R1180 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535] { R1272 += 1, R1180 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R1272 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R1272 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R1274 += 1, R1182 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s0 -> s0 [0, 65535] { R1273 += 1, R1274 += 1 };
  s0 -> s2 [0, 65535] { R1274 += 1, R1181 += 1, R1182 += 1 };
  s0 -> s3 [0, 65535] { R1274 += 1, R1182 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s0 -> s4 [0, 65535] { R1274 += 1, R1182 += 1 };
  s1 -> s1 [0, 65535] { R1274 += 1, R1182 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s1 -> s5 [0, 65535] { R1274 += 1 };
  s1 -> s3 [0, 65535] { R1274 += 1, R1182 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s4 [0, 65535] { R1274 += 1, R1182 += 1 };
  s2 -> s1 [0, 65535] { R1274 += 1, R1182 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s2 -> s2 [0, 65535] { R1274 += 1, R1181 += 1, R1182 += 1 };
  s2 -> s3 [0, 65535] { R1274 += 1, R1182 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [0, 65535] { R1274 += 1, R1182 += 1 };
  s3 -> s7 [0, 65535] { R1274 += 1, R1182 += 1, R181 += 1 };
  s3 -> s5 [0, 65535] { R1274 += 1 };
  s3 -> s3 [0, 65535] { R1274 += 1, R1182 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R1274 += 1, R1182 += 1 };
  s4 -> s5 [0, 65535] { R1274 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R1274 += 1, R1182 += 1 };
  s5 -> s5 [0, 65535] { R1274 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R1274 += 1, R1182 += 1, R181 += 1 };
  s7 -> s5 [0, 65535] { R1274 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s4 [0, 65535] { R1274 += 1, R1182 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R1276 += 1, R1184 += 1, R190 += 1, R192 += 1 };
  s0 -> s0 [0, 65535] { R1275 += 1, R1276 += 1 };
  s0 -> s2 [0, 65535] { R1276 += 1, R1184 += 1, R189 += 1, R190 += 1 };
  s0 -> s3 [0, 65535] { R1276 += 1, R1184 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s0 -> s4 [0, 65535] { R1276 += 1, R1183 += 1, R1184 += 1 };
  s0 -> s1 [84, 65535] { R1276 += 1, R1184 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 75] { R1276 += 1, R1184 += 1, R190 += 1, R192 += 1 };
  s1 -> s6 [0, 65535] { R1276 += 1 };
  s1 -> s1 [0, 65535] { R1276 += 1, R1184 += 1, R190 += 1 };
  s1 -> s7 [0, 65535] { R1276 += 1, R1184 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [84, 65535] { R1276 += 1, R1184 += 1, R190 += 1, R192 += 1 };
  s2 -> s1 [0, 75] { R1276 += 1, R1184 += 1, R190 += 1, R192 += 1 };
  s2 -> s6 [0, 65535] { R1276 += 1 };
  s2 -> s2 [0, 65535] { R1276 += 1, R1184 += 1, R189 += 1, R190 += 1 };
  s2 -> s3 [0, 65535] { R1276 += 1, R1184 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [84, 65535] { R1276 += 1, R1184 += 1, R190 += 1, R192 += 1 };
  s3 -> s1 [0, 75] { R1276 += 1, R1184 += 1, R190 += 1, R192 += 1 };
  s3 -> s6 [0, 65535] { R1276 += 1 };
  s3 -> s3 [0, 65535] { R1276 += 1, R1184 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s3 -> s7 [0, 65535] { R1276 += 1, R1184 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [84, 65535] { R1276 += 1, R1184 += 1, R190 += 1, R192 += 1 };
  s4 -> s1 [0, 75] { R1276 += 1, R1184 += 1, R190 += 1, R192 += 1 };
  s4 -> s2 [0, 65535] { R1276 += 1, R1184 += 1, R189 += 1, R190 += 1 };
  s4 -> s3 [0, 65535] { R1276 += 1, R1184 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1276 += 1, R1183 += 1, R1184 += 1 };
  s4 -> s1 [84, 65535] { R1276 += 1, R1184 += 1, R190 += 1, R192 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1276 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R1276 += 1 };
  s7 -> s7 [0, 65535] { R1276 += 1, R1184 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R1278 += 1, R1185 += 1, R1186 += 1 };
  s0 -> s2 [0, 65535] { R1278 += 1, R1186 += 1 };
  s0 -> s3 [0, 65535] { R1278 += 1, R1186 += 1, R199 += 1 };
  s0 -> s4 [0, 65535] { R1278 += 1, R1186 += 1, R199 += 1, R201 += 1, R202 += 1 };
  s0 -> s0 [0, 65535] { R1277 += 1, R1278 += 1 };
  s1 -> s1 [0, 65535] { R1278 += 1, R1185 += 1, R1186 += 1 };
  s1 -> s2 [0, 65535] { R1278 += 1, R1186 += 1 };
  s1 -> s3 [0, 65535] { R1278 += 1, R1186 += 1, R199 += 1 };
  s1 -> s4 [0, 65535] { R1278 += 1, R1186 += 1, R199 += 1, R201 += 1, R202 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s5 [0, 65535] { R1278 += 1 };
  s2 -> s2 [0, 65535] { R1278 += 1, R1186 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s5 [0, 65535] { R1278 += 1 };
  s3 -> s2 [0, 65535] { R1278 += 1, R1186 += 1 };
  s3 -> s3 [0, 65535] { R1278 += 1, R1186 += 1, R199 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R1278 += 1 };
  s4 -> s2 [0, 65535] { R1278 += 1, R1186 += 1 };
  s4 -> s3 [0, 65535] { R1278 += 1, R1186 += 1, R199 += 1 };
  s4 -> s4 [0, 65535] { R1278 += 1, R1186 += 1, R199 += 1, R201 += 1, R202 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R1278 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 74] { R1280 += 1, R1188 += 1, R1156 += 1, R1158 += 1 };
  s0 -> s0 [0, 65535] { R1279 += 1, R1280 += 1 };
  s0 -> s2 [0, 65535] { R1280 += 1, R1187 += 1, R1188 += 1 };
  s0 -> s3 [0, 65535] { R1280 += 1, R1188 += 1, R1155 += 1, R1156 += 1 };
  s0 -> s4 [0, 65535] { R1280 += 1, R1188 += 1, R1156 += 1, R1157 += 1, R1158 += 1 };
  s0 -> s5 [75, 75] { R1280 += 1, R1188 += 1, R1156 += 1, R1158 += 1 };
  s0 -> s6 [84, 84] { R1280 += 1, R1188 += 1, R1156 += 1, R1158 += 1 };
  s0 -> s1 [85, 65535] { R1280 += 1, R1188 += 1, R1156 += 1, R1158 += 1 };
  s1 -> s1 [0, 74] { R1280 += 1, R1188 += 1, R1156 += 1, R1158 += 1 };
  s1 -> s5 [75, 75] { R1280 += 1, R1188 += 1, R1156 += 1, R1158 += 1 };
  s1 -> s6 [84, 84] { R1280 += 1, R1188 += 1, R1156 += 1, R1158 += 1 };
  s1 -> s1 [85, 65535] { R1280 += 1, R1188 += 1, R1156 += 1, R1158 += 1 };
  s2 -> s1 [0, 74] { R1280 += 1, R1188 += 1, R1156 += 1, R1158 += 1 };
  s2 -> s2 [0, 65535] { R1280 += 1, R1187 += 1, R1188 += 1 };
  s2 -> s3 [0, 65535] { R1280 += 1, R1188 += 1, R1155 += 1, R1156 += 1 };
  s2 -> s4 [0, 65535] { R1280 += 1, R1188 += 1, R1156 += 1, R1157 += 1, R1158 += 1 };
  s2 -> s5 [75, 75] { R1280 += 1, R1188 += 1, R1156 += 1, R1158 += 1 };
  s2 -> s6 [84, 84] { R1280 += 1, R1188 += 1, R1156 += 1, R1158 += 1 };
  s2 -> s1 [85, 65535] { R1280 += 1, R1188 += 1, R1156 += 1, R1158 += 1 };
  s3 -> s1 [0, 74] { R1280 += 1, R1188 += 1, R1156 += 1, R1158 += 1 };
  s3 -> s3 [0, 65535] { R1280 += 1, R1188 += 1, R1155 += 1, R1156 += 1 };
  s3 -> s4 [0, 65535] { R1280 += 1, R1188 += 1, R1156 += 1, R1157 += 1, R1158 += 1 };
  s3 -> s5 [75, 75] { R1280 += 1, R1188 += 1, R1156 += 1, R1158 += 1 };
  s3 -> s6 [84, 84] { R1280 += 1, R1188 += 1, R1156 += 1, R1158 += 1 };
  s3 -> s1 [85, 65535] { R1280 += 1, R1188 += 1, R1156 += 1, R1158 += 1 };
  s4 -> s1 [0, 74] { R1280 += 1, R1188 += 1, R1156 += 1, R1158 += 1 };
  s4 -> s4 [0, 65535] { R1280 += 1, R1188 += 1, R1156 += 1, R1157 += 1, R1158 += 1 };
  s4 -> s5 [75, 75] { R1280 += 1, R1188 += 1, R1156 += 1, R1158 += 1 };
  s4 -> s6 [84, 84] { R1280 += 1, R1188 += 1, R1156 += 1, R1158 += 1 };
  s4 -> s1 [85, 65535] { R1280 += 1, R1188 += 1, R1156 += 1, R1158 += 1 };
  s5 -> s5 [0, 75] { R1280 += 1, R1188 += 1, R1156 += 1, R1158 += 1 };
  s5 -> s11 [84, 84] { R1280 += 1, R1188 += 1, R1156 += 1, R1158 += 1 };
  s5 -> s5 [85, 65535] { R1280 += 1, R1188 += 1, R1156 += 1, R1158 += 1 };
  s6 -> s6 [0, 74] { R1280 += 1, R1188 += 1, R1156 += 1, R1158 += 1 };
  s6 -> s6 [0, 65535] { R1280 += 1, R1188 += 1, R1156 += 1 };
  s6 -> s7 [0, 65535] { R1280 += 1, R1188 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [0, 65535] { R1280 += 1 };
  s6 -> s10 [75, 75] { R1280 += 1, R1188 += 1, R1156 += 1, R1158 += 1 };
  s6 -> s11 [75, 75] { R1280 += 1, R1188 += 1, R1156 += 1, R1158 += 1 };
  s6 -> s6 [84, 65535] { R1280 += 1, R1188 += 1, R1156 += 1, R1158 += 1 };
  s7 -> s7 [0, 65535] { R1280 += 1, R1188 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R1280 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R1280 += 1 };
  s10 -> s7 [0, 65535] { R1280 += 1, R1188 += 1 };
  s10 -> s10 [0, 65535] { R1280 += 1, R1188 += 1, R1156 += 1 };
  s10 -> s8 [0, 65535];
  s10 -> s9 [0, 65535] { R1280 += 1 };
  s11 -> s11 [0, 75] { R1280 += 1, R1188 += 1, R1156 += 1, R1158 += 1 };
  s11 -> s7 [0, 65535] { R1280 += 1, R1188 += 1 };
  s11 -> s8 [0, 65535];
  s11 -> s9 [0, 65535] { R1280 += 1 };
  s11 -> s11 [0, 65535] { R1280 += 1, R1188 += 1, R1156 += 1 };
  s11 -> s11 [84, 65535] { R1280 += 1, R1188 += 1, R1156 += 1, R1158 += 1 };
  accepting s8, s9, s6, s7, s10, s11;
};
automaton value2_40 {
  init s0;
  s0 -> s0 [0, 65535] { R1281 += 1, R1282 += 1 };
  s0 -> s1 [0, 65535] { R1282 += 1, R1218 += 1, R23 += 1 };
  s0 -> s2 [0, 65535] { R1282 += 1, R1217 += 1, R1218 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R1282 += 1, R1218 += 1, R23 += 1 };
  s1 -> s4 [0, 65535] { R1282 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R1282 += 1, R1218 += 1, R23 += 1 };
  s2 -> s2 [0, 65535] { R1282 += 1, R1217 += 1, R1218 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1282 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R1284 += 1, R1220 += 1 };
  s0 -> s2 [0, 65535] { R1284 += 1, R1219 += 1, R1220 += 1 };
  s0 -> s0 [0, 65535] { R1283 += 1, R1284 += 1 };
  s0 -> s3 [70, 70] { R1284 += 1, R1220 += 1 };
  s0 -> s4 [70, 70] { R1284 += 1, R1220 += 1 };
  s0 -> s5 [75, 75] { R1284 += 1, R1220 += 1 };
  s0 -> s1 [76, 65535] { R1284 += 1, R1220 += 1 };
  s1 -> s1 [0, 69] { R1284 += 1, R1220 += 1 };
  s1 -> s3 [70, 70] { R1284 += 1, R1220 += 1 };
  s1 -> s4 [70, 70] { R1284 += 1, R1220 += 1 };
  s1 -> s5 [75, 75] { R1284 += 1, R1220 += 1 };
  s1 -> s1 [76, 65535] { R1284 += 1, R1220 += 1 };
  s2 -> s1 [0, 69] { R1284 += 1, R1220 += 1 };
  s2 -> s2 [0, 65535] { R1284 += 1, R1219 += 1, R1220 += 1 };
  s2 -> s3 [70, 70] { R1284 += 1, R1220 += 1 };
  s2 -> s4 [70, 70] { R1284 += 1, R1220 += 1 };
  s2 -> s5 [75, 75] { R1284 += 1, R1220 += 1 };
  s2 -> s1 [76, 65535] { R1284 += 1, R1220 += 1 };
  s3 -> s3 [0, 70] { R1284 += 1, R1220 += 1 };
  s3 -> s8 [75, 75] { R1284 += 1, R1220 += 1 };
  s3 -> s3 [76, 65535] { R1284 += 1, R1220 += 1 };
  s5 -> s5 [0, 69] { R1284 += 1, R1220 += 1 };
  s5 -> s5 [0, 65535] { R1284 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R1284 += 1, R1220 += 1 };
  s5 -> s8 [70, 70] { R1284 += 1, R1220 += 1 };
  s5 -> s5 [75, 65535] { R1284 += 1, R1220 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R1284 += 1 };
  s8 -> s8 [0, 70] { R1284 += 1, R1220 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R1284 += 1 };
  s8 -> s8 [75, 65535] { R1284 += 1, R1220 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R1286 += 1, R1222 += 1, R137 += 1 };
  s0 -> s0 [0, 65535] { R1285 += 1, R1286 += 1 };
  s0 -> s2 [0, 65535] { R1286 += 1, R1221 += 1, R1222 += 1 };
  s0 -> s3 [70, 70] { R1286 += 1, R1222 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R1286 += 1, R1222 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R1286 += 1, R1222 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R1286 += 1, R1222 += 1, R137 += 1 };
  s1 -> s1 [0, 65535] { R1286 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R1286 += 1, R1222 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R1286 += 1, R1222 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R1286 += 1, R1222 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R1286 += 1, R1222 += 1, R137 += 1 };
  s2 -> s2 [0, 65535] { R1286 += 1, R1221 += 1, R1222 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R1286 += 1, R1222 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R1286 += 1, R1222 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R1286 += 1, R1222 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R1286 += 1, R1222 += 1, R137 += 1 };
  s3 -> s6 [0, 65535] { R1286 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1286 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1286 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R1288 += 1, R1224 += 1, R139 += 1 };
  s0 -> s0 [0, 65535] { R1287 += 1, R1288 += 1 };
  s0 -> s2 [0, 65535] { R1288 += 1, R1223 += 1, R1224 += 1 };
  s0 -> s3 [70, 70] { R1288 += 1, R1224 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R1288 += 1, R1224 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R1288 += 1, R1224 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R1288 += 1, R1224 += 1, R139 += 1 };
  s1 -> s1 [0, 65535] { R1288 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R1288 += 1, R1224 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R1288 += 1, R1224 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R1288 += 1, R1224 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R1288 += 1, R1224 += 1, R139 += 1 };
  s2 -> s2 [0, 65535] { R1288 += 1, R1223 += 1, R1224 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R1288 += 1, R1224 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R1288 += 1, R1224 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R1288 += 1, R1224 += 1, R139 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R1288 += 1 };
  s4 -> s5 [0, 65535] { R1288 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R1288 += 1, R1224 += 1, R139 += 1 };
  s5 -> s5 [0, 65535] { R1288 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R1290 += 1, R1226 += 1, R141 += 1, R142 += 1 };
  s0 -> s2 [0, 65535] { R1290 += 1, R1225 += 1, R1226 += 1 };
  s0 -> s0 [0, 65535] { R1289 += 1, R1290 += 1 };
  s0 -> s3 [70, 70] { R1290 += 1, R1226 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R1290 += 1, R1226 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R1290 += 1, R1226 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R1290 += 1, R1226 += 1, R141 += 1, R142 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1290 += 1 };
  s1 -> s3 [70, 70] { R1290 += 1, R1226 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R1290 += 1, R1226 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R1290 += 1, R1226 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R1290 += 1, R1226 += 1, R141 += 1, R142 += 1 };
  s2 -> s2 [0, 65535] { R1290 += 1, R1225 += 1, R1226 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R1290 += 1, R1226 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R1290 += 1, R1226 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R1290 += 1, R1226 += 1, R141 += 1, R142 += 1 };
  s3 -> s3 [0, 65535] { R1290 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1290 += 1, R1226 += 1, R141 += 1, R142 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1290 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1290 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R1292 += 1, R1228 += 1, R147 += 1, R148 += 1 };
  s0 -> s2 [0, 65535] { R1292 += 1, R1227 += 1, R1228 += 1 };
  s0 -> s0 [0, 65535] { R1291 += 1, R1292 += 1 };
  s0 -> s3 [70, 70] { R1292 += 1, R1228 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R1292 += 1, R1228 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R1292 += 1, R1228 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R1292 += 1, R1228 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 65535] { R1292 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R1292 += 1, R1228 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R1292 += 1, R1228 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R1292 += 1, R1228 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R1292 += 1, R1228 += 1, R147 += 1, R148 += 1 };
  s2 -> s2 [0, 65535] { R1292 += 1, R1227 += 1, R1228 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R1292 += 1, R1228 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R1292 += 1, R1228 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R1292 += 1, R1228 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R1292 += 1, R1228 += 1, R147 += 1, R148 += 1 };
  s3 -> s6 [0, 65535] { R1292 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1292 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1292 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R1294 += 1, R1230 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R1294 += 1, R1230 += 1, R151 += 1, R152 += 1 };
  s0 -> s0 [0, 65535] { R1293 += 1, R1294 += 1 };
  s0 -> s3 [0, 65535] { R1294 += 1, R1229 += 1, R1230 += 1 };
  s0 -> s4 [70, 70] { R1294 += 1, R1230 += 1, R151 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R1294 += 1, R1230 += 1, R151 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R1294 += 1, R1230 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R1294 += 1, R1230 += 1, R152 += 1 };
  s0 -> s1 [71, 74] { R1294 += 1, R1230 += 1, R152 += 1 };
  s0 -> s2 [71, 65535] { R1294 += 1, R1230 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R1294 += 1, R1230 += 1, R152 += 1 };
  s0 -> s1 [76, 65535] { R1294 += 1, R1230 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R1294 += 1, R1230 += 1, R152 += 1 };
  s1 -> s6 [70, 70] { R1294 += 1, R1230 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R1294 += 1, R1230 += 1, R152 += 1 };
  s1 -> s1 [71, 74] { R1294 += 1, R1230 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R1294 += 1, R1230 += 1, R152 += 1 };
  s1 -> s1 [76, 65535] { R1294 += 1, R1230 += 1, R152 += 1 };
  s2 -> s1 [0, 69] { R1294 += 1, R1230 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R1294 += 1, R1230 += 1, R151 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R1294 += 1, R1230 += 1, R151 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R1294 += 1, R1230 += 1, R151 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R1294 += 1, R1230 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R1294 += 1, R1230 += 1, R152 += 1 };
  s2 -> s1 [71, 74] { R1294 += 1, R1230 += 1, R152 += 1 };
  s2 -> s2 [71, 65535] { R1294 += 1, R1230 += 1, R151 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R1294 += 1, R1230 += 1, R152 += 1 };
  s2 -> s1 [76, 65535] { R1294 += 1, R1230 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R1294 += 1, R1230 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R1294 += 1, R1230 += 1, R151 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R1294 += 1, R1229 += 1, R1230 += 1 };
  s3 -> s4 [70, 70] { R1294 += 1, R1230 += 1, R151 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R1294 += 1, R1230 += 1, R151 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R1294 += 1, R1230 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R1294 += 1, R1230 += 1, R152 += 1 };
  s3 -> s1 [71, 74] { R1294 += 1, R1230 += 1, R152 += 1 };
  s3 -> s2 [71, 65535] { R1294 += 1, R1230 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R1294 += 1, R1230 += 1, R152 += 1 };
  s3 -> s1 [76, 65535] { R1294 += 1, R1230 += 1, R152 += 1 };
  s4 -> s7 [0, 74] { R1294 += 1, R1230 += 1, R152 += 1 };
  s4 -> s4 [0, 65535] { R1294 += 1, R1230 += 1, R151 += 1, R152 += 1 };
  s4 -> s10 [75, 75] { R1294 += 1, R1230 += 1, R152 += 1 };
  s4 -> s7 [76, 65535] { R1294 += 1, R1230 += 1, R152 += 1 };
  s7 -> s7 [0, 74] { R1294 += 1, R1230 += 1, R152 += 1 };
  s7 -> s10 [75, 75] { R1294 += 1, R1230 += 1, R152 += 1 };
  s7 -> s7 [76, 65535] { R1294 += 1, R1230 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R1294 += 1, R1230 += 1, R152 += 1 };
  s8 -> s8 [0, 65535] { R1294 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R1294 += 1, R1230 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R1294 += 1, R1230 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R1294 += 1, R1230 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s12 [0, 65535] { R1294 += 1 };
  s10 -> s10 [0, 65535] { R1294 += 1, R1230 += 1, R152 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R1294 += 1 };
  s12 -> s12 [0, 65535] { R1294 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R1296 += 1, R1232 += 1, R155 += 1, R156 += 1 };
  s0 -> s0 [0, 65535] { R1295 += 1, R1296 += 1 };
  s0 -> s2 [0, 65535] { R1296 += 1, R1231 += 1, R1232 += 1 };
  s0 -> s3 [70, 70] { R1296 += 1, R1232 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R1296 += 1, R1232 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R1296 += 1, R1232 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R1296 += 1, R1232 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 65535] { R1296 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R1296 += 1, R1232 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R1296 += 1, R1232 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R1296 += 1, R1232 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R1296 += 1, R1232 += 1, R155 += 1, R156 += 1 };
  s2 -> s2 [0, 65535] { R1296 += 1, R1231 += 1, R1232 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R1296 += 1, R1232 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R1296 += 1, R1232 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R1296 += 1, R1232 += 1, R155 += 1, R156 += 1 };
  s3 -> s3 [0, 65535] { R1296 += 1, R1232 += 1, R155 += 1, R156 += 1 };
  s3 -> s6 [0, 65535] { R1296 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1296 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1296 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R1298 += 1, R1234 += 1, R161 += 1, R162 += 1 };
  s0 -> s2 [0, 65535] { R1298 += 1, R1233 += 1, R1234 += 1 };
  s0 -> s0 [0, 65535] { R1297 += 1, R1298 += 1 };
  s0 -> s3 [70, 70] { R1298 += 1, R1234 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R1298 += 1, R1234 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R1298 += 1, R1234 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R1298 += 1, R1234 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535] { R1298 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R1298 += 1, R1234 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R1298 += 1, R1234 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R1298 += 1, R1234 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R1298 += 1, R1234 += 1, R161 += 1, R162 += 1 };
  s2 -> s2 [0, 65535] { R1298 += 1, R1233 += 1, R1234 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R1298 += 1, R1234 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R1298 += 1, R1234 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R1298 += 1, R1234 += 1, R161 += 1, R162 += 1 };
  s3 -> s3 [0, 65535] { R1298 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R1298 += 1 };
  s4 -> s4 [0, 65535] { R1298 += 1, R1234 += 1, R161 += 1, R162 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R1298 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R1300 += 1, R1236 += 1, R167 += 1, R168 += 1 };
  s0 -> s2 [0, 65535] { R1300 += 1, R1235 += 1, R1236 += 1 };
  s0 -> s0 [0, 65535] { R1299 += 1, R1300 += 1 };
  s0 -> s3 [70, 70] { R1300 += 1, R1236 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R1300 += 1, R1236 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R1300 += 1, R1236 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R1300 += 1, R1236 += 1, R167 += 1, R168 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1300 += 1 };
  s1 -> s3 [70, 70] { R1300 += 1, R1236 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R1300 += 1, R1236 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R1300 += 1, R1236 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R1300 += 1, R1236 += 1, R167 += 1, R168 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1300 += 1, R1235 += 1, R1236 += 1 };
  s2 -> s3 [70, 70] { R1300 += 1, R1236 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R1300 += 1, R1236 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R1300 += 1, R1236 += 1, R167 += 1, R168 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1300 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1300 += 1 };
  s4 -> s4 [0, 65535] { R1300 += 1, R1236 += 1, R167 += 1, R168 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1300 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R1302 += 1, R1238 += 1, R175 += 1, R176 += 1 };
  s0 -> s2 [0, 69] { R1302 += 1, R1238 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s3 [0, 65535] { R1302 += 1, R1237 += 1, R1238 += 1 };
  s0 -> s0 [0, 65535] { R1301 += 1, R1302 += 1 };
  s0 -> s4 [70, 70] { R1302 += 1, R1238 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s5 [70, 70] { R1302 += 1, R1238 += 1, R175 += 1, R176 += 1 };
  s0 -> s6 [70, 70] { R1302 += 1, R1238 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s7 [70, 70] { R1302 += 1, R1238 += 1, R175 += 1, R176 += 1 };
  s0 -> s1 [71, 65535] { R1302 += 1, R1238 += 1, R175 += 1, R176 += 1 };
  s0 -> s2 [71, 65535] { R1302 += 1, R1238 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s1 [0, 69] { R1302 += 1, R1238 += 1, R175 += 1, R176 += 1 };
  s1 -> s2 [0, 69] { R1302 += 1, R1238 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s4 [70, 70] { R1302 += 1, R1238 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s5 [70, 70] { R1302 += 1, R1238 += 1, R175 += 1, R176 += 1 };
  s1 -> s6 [70, 70] { R1302 += 1, R1238 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s7 [70, 70] { R1302 += 1, R1238 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [71, 65535] { R1302 += 1, R1238 += 1, R175 += 1, R176 += 1 };
  s1 -> s2 [71, 65535] { R1302 += 1, R1238 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s2 [0, 69] { R1302 += 1, R1238 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R1302 += 1 };
  s2 -> s4 [70, 70] { R1302 += 1, R1238 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s6 [70, 70] { R1302 += 1, R1238 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s2 [71, 65535] { R1302 += 1, R1238 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s1 [0, 69] { R1302 += 1, R1238 += 1, R175 += 1, R176 += 1 };
  s3 -> s2 [0, 69] { R1302 += 1, R1238 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s3 [0, 65535] { R1302 += 1, R1237 += 1, R1238 += 1 };
  s3 -> s4 [70, 70] { R1302 += 1, R1238 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s5 [70, 70] { R1302 += 1, R1238 += 1, R175 += 1, R176 += 1 };
  s3 -> s6 [70, 70] { R1302 += 1, R1238 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s7 [70, 70] { R1302 += 1, R1238 += 1, R175 += 1, R176 += 1 };
  s3 -> s1 [71, 65535] { R1302 += 1, R1238 += 1, R175 += 1, R176 += 1 };
  s3 -> s2 [71, 65535] { R1302 += 1, R1238 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [0, 65535] { R1302 += 1 };
  s5 -> s5 [0, 65535] { R1302 += 1, R1238 += 1, R175 += 1, R176 += 1 };
  s5 -> s6 [0, 65535] { R1302 += 1, R1238 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R1302 += 1, R1238 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s6 -> s9 [0, 65535] { R1302 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R1302 += 1 };
  accepting s4, s8, s2, s9, s6;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R1304 += 1, R1240 += 1, R185 += 1, R186 += 1 };
  s0 -> s0 [0, 65535] { R1303 += 1, R1304 += 1 };
  s0 -> s2 [0, 65535] { R1304 += 1, R1239 += 1, R1240 += 1 };
  s0 -> s3 [70, 70] { R1304 += 1, R1240 += 1, R185 += 1, R186 += 1 };
  s0 -> s4 [70, 70] { R1304 += 1, R1240 += 1, R185 += 1, R186 += 1 };
  s0 -> s1 [71, 65535] { R1304 += 1, R1240 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 69] { R1304 += 1, R1240 += 1, R185 += 1, R186 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1304 += 1 };
  s1 -> s3 [70, 70] { R1304 += 1, R1240 += 1, R185 += 1, R186 += 1 };
  s1 -> s4 [70, 70] { R1304 += 1, R1240 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [71, 65535] { R1304 += 1, R1240 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [0, 69] { R1304 += 1, R1240 += 1, R185 += 1, R186 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1304 += 1, R1239 += 1, R1240 += 1 };
  s2 -> s3 [70, 70] { R1304 += 1, R1240 += 1, R185 += 1, R186 += 1 };
  s2 -> s4 [70, 70] { R1304 += 1, R1240 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [71, 65535] { R1304 += 1, R1240 += 1, R185 += 1, R186 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1304 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1304 += 1 };
  s4 -> s4 [0, 65535] { R1304 += 1, R1240 += 1, R185 += 1, R186 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1304 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R1306 += 1, R1242 += 1, R193 += 1, R194 += 1 };
  s0 -> s2 [0, 69] { R1306 += 1, R1242 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s0 -> s3 [0, 69] { R1306 += 1, R1242 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s0 -> s4 [0, 65535] { R1306 += 1, R1241 += 1, R1242 += 1 };
  s0 -> s0 [0, 65535] { R1305 += 1, R1306 += 1 };
  s0 -> s5 [70, 70] { R1306 += 1, R1242 += 1, R193 += 1, R194 += 1 };
  s0 -> s6 [70, 70] { R1306 += 1, R1242 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s0 -> s7 [70, 70] { R1306 += 1, R1242 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s0 -> s8 [70, 70] { R1306 += 1, R1242 += 1, R193 += 1, R194 += 1 };
  s0 -> s9 [70, 70] { R1306 += 1, R1242 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s0 -> s10 [70, 70] { R1306 += 1, R1242 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s0 -> s1 [71, 65535] { R1306 += 1, R1242 += 1, R193 += 1, R194 += 1 };
  s0 -> s2 [71, 65535] { R1306 += 1, R1242 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s0 -> s3 [71, 65535] { R1306 += 1, R1242 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s1 -> s1 [0, 69] { R1306 += 1, R1242 += 1, R193 += 1, R194 += 1 };
  s1 -> s2 [0, 69] { R1306 += 1, R1242 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s1 -> s3 [0, 69] { R1306 += 1, R1242 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s1 -> s5 [70, 70] { R1306 += 1, R1242 += 1, R193 += 1, R194 += 1 };
  s1 -> s6 [70, 70] { R1306 += 1, R1242 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s1 -> s7 [70, 70] { R1306 += 1, R1242 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s1 -> s8 [70, 70] { R1306 += 1, R1242 += 1, R193 += 1, R194 += 1 };
  s1 -> s9 [70, 70] { R1306 += 1, R1242 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s1 -> s10 [70, 70] { R1306 += 1, R1242 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s1 -> s1 [71, 65535] { R1306 += 1, R1242 += 1, R193 += 1, R194 += 1 };
  s1 -> s2 [71, 65535] { R1306 += 1, R1242 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s1 -> s3 [71, 65535] { R1306 += 1, R1242 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s2 -> s2 [0, 69] { R1306 += 1, R1242 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s2 -> s3 [0, 69] { R1306 += 1, R1242 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s2 -> s6 [70, 70] { R1306 += 1, R1242 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s2 -> s7 [70, 70] { R1306 += 1, R1242 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s2 -> s9 [70, 70] { R1306 += 1, R1242 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s2 -> s10 [70, 70] { R1306 += 1, R1242 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s2 -> s2 [71, 65535] { R1306 += 1, R1242 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s2 -> s3 [71, 65535] { R1306 += 1, R1242 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s3 -> s3 [0, 69] { R1306 += 1, R1242 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s3 -> s11 [0, 65535];
  s3 -> s3 [0, 65535] { R1306 += 1 };
  s3 -> s7 [70, 70] { R1306 += 1, R1242 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s3 -> s9 [70, 70] { R1306 += 1, R1242 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s3 -> s3 [71, 65535] { R1306 += 1, R1242 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s4 -> s1 [0, 69] { R1306 += 1, R1242 += 1, R193 += 1, R194 += 1 };
  s4 -> s2 [0, 69] { R1306 += 1, R1242 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s4 -> s3 [0, 69] { R1306 += 1, R1242 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s4 -> s4 [0, 65535] { R1306 += 1, R1241 += 1, R1242 += 1 };
  s4 -> s5 [70, 70] { R1306 += 1, R1242 += 1, R193 += 1, R194 += 1 };
  s4 -> s6 [70, 70] { R1306 += 1, R1242 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s4 -> s7 [70, 70] { R1306 += 1, R1242 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s4 -> s8 [70, 70] { R1306 += 1, R1242 += 1, R193 += 1, R194 += 1 };
  s4 -> s9 [70, 70] { R1306 += 1, R1242 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s4 -> s10 [70, 70] { R1306 += 1, R1242 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s4 -> s1 [71, 65535] { R1306 += 1, R1242 += 1, R193 += 1, R194 += 1 };
  s4 -> s2 [71, 65535] { R1306 += 1, R1242 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s4 -> s3 [71, 65535] { R1306 += 1, R1242 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s5 -> s5 [0, 65535] { R1306 += 1, R1242 += 1, R193 += 1, R194 += 1 };
  s5 -> s7 [0, 65535] { R1306 += 1, R1242 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s5 -> s10 [0, 65535] { R1306 += 1, R1242 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s7 -> s12 [0, 65535] { R1306 += 1 };
  s7 -> s7 [0, 65535] { R1306 += 1, R1242 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s7 -> s11 [0, 65535];
  s9 -> s11 [0, 65535];
  s9 -> s9 [0, 65535] { R1306 += 1 };
  s10 -> s7 [0, 65535] { R1306 += 1, R1242 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s10 -> s10 [0, 65535] { R1306 += 1, R1242 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R1306 += 1 };
  s12 -> s11 [0, 65535];
  accepting s3, s12, s9, s7, s11;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R1308 += 1, R1244 += 1, R1151 += 1, R1152 += 1 };
  s0 -> s2 [0, 65535] { R1308 += 1, R1243 += 1, R1244 += 1 };
  s0 -> s0 [0, 65535] { R1307 += 1, R1308 += 1 };
  s0 -> s3 [70, 70] { R1308 += 1, R1244 += 1, R1151 += 1, R1152 += 1 };
  s0 -> s4 [70, 70] { R1308 += 1, R1244 += 1, R1151 += 1, R1152 += 1 };
  s0 -> s1 [71, 65535] { R1308 += 1, R1244 += 1, R1151 += 1, R1152 += 1 };
  s1 -> s1 [0, 69] { R1308 += 1, R1244 += 1, R1151 += 1, R1152 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1308 += 1 };
  s1 -> s3 [70, 70] { R1308 += 1, R1244 += 1, R1151 += 1, R1152 += 1 };
  s1 -> s4 [70, 70] { R1308 += 1, R1244 += 1, R1151 += 1, R1152 += 1 };
  s1 -> s1 [71, 65535] { R1308 += 1, R1244 += 1, R1151 += 1, R1152 += 1 };
  s2 -> s1 [0, 69] { R1308 += 1, R1244 += 1, R1151 += 1, R1152 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1308 += 1, R1243 += 1, R1244 += 1 };
  s2 -> s3 [70, 70] { R1308 += 1, R1244 += 1, R1151 += 1, R1152 += 1 };
  s2 -> s4 [70, 70] { R1308 += 1, R1244 += 1, R1151 += 1, R1152 += 1 };
  s2 -> s1 [71, 65535] { R1308 += 1, R1244 += 1, R1151 += 1, R1152 += 1 };
  s3 -> s3 [0, 65535] { R1308 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1308 += 1 };
  s4 -> s4 [0, 65535] { R1308 += 1, R1244 += 1, R1151 += 1, R1152 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1308 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
constraint R2 = R1188 && R3 = R1308 && R25 - R1308 = -1 && R26 = R1308 && R27 - R1308 = -1 && R28 = R1308 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R1156 + -1*R1152 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R1156 + -1*R1152 - R130 = 0 && R129 + R1155 + R1151 = 0 && R131 + R1157 + R1153 = 0 && R132 + R1158 + R1154 = 0 && R1187 = 0 && R1219 = 0 && R1220 = 0 && R1229 = 0 && R1230 = 0 && R1237 = 0 && R1238 = 0 && R1241 = 0 && R1242 = 0 && R1245 = 0 && R1246 = R1308 && R1247 = 0 && R1248 = R1308 && R1249 = 0 && R1250 = R1308 && R1251 = 0 && R1252 = R1308 && R1253 = 0 && R1254 = R1308 && R1255 = 0 && R1256 = R1308 && R1257 = 0 && R1258 = R1308 && R1259 = 0 && R1260 = R1308 && R1261 = 0 && R1262 = R1308 && R1263 = 0 && R1264 = R1308 && R1265 = 0 && R1266 = R1308 && R1267 = 0 && R1268 = R1308 && R1269 = 0 && R1270 = R1308 && R1271 = 0 && R1272 = R1308 && R1273 = 0 && R1274 = R1308 && R1275 = 0 && R1276 = R1308 && R1277 = 0 && R1278 = R1308 && R1279 = 0 && R1280 = R1308 && R1281 = 0 && R1282 = R1308 && R1283 = 0 && R1284 = R1308 && R1285 = 0 && R1286 = R1308 && R1287 = 0 && R1288 = R1308 && R1289 = 0 && R1290 = R1308 && R1291 = 0 && R1292 = R1308 && R1293 = 0 && R1294 = R1308 && R1295 = 0 && R1296 = R1308 && R1297 = 0 && R1298 = R1308 && R1299 = 0 && R1300 = R1308 && R1301 = 0 && R1302 = R1308 && R1303 = 0 && R1304 = R1308 && R1305 = 0 && R1306 = R1308 && R1307 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R1156 + -1*R1152 - R130 < 1 && -1 < R1188 && 0 < R1308 && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R1156 + -1*R1152 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R191 + R187 = 0 && R114 + R192 + R188 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R1156 + -1*R1152 - R130 = 0 || R130 + R1156 + R1152 < 1) && (R81 + R158 + R155 = 0 || R130 + R1156 + R1152 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R1156 + -1*R1152 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R1156 + R1152 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R1156 + -1*R1152 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R1156 + R1152 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R1156 + -1*R1152 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R1156 + R1152 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 != 0 || R112 + R190 + R186 + -1*R1156 + -1*R1152 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R1156 + R1152 = 0)) && (R113 + R191 + R187 != 0 || R83 + R160 + R157 + -1*R192 + -1*R188 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R198 + R193 != 0 || R120 + R199 + R194 + -1*R1156 + -1*R1152 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R1156 + R1152 = 0)) && (R1159 != 0 || R1160 = R1188 || (R22 = 0 && R1188 = 0)) && (R1161 != 0 || R1162 = R1188 || (R22 = 0 && R1188 = 0)) && (R1163 != 0 || R1164 = R1188 || (R22 = 0 && R1188 = 0)) && (R1165 != 0 || R1166 = R1188 || (R22 = 0 && R1188 = 0)) && (R1167 != 0 || R1168 = R1188 || (R22 = 0 && R1188 = 0)) && (R1169 != 0 || R1170 = R1188 || (R22 = 0 && R1188 = 0)) && (R1171 != 0 || R1172 = R1188 || (R22 = 0 && R1188 = 0)) && (R1173 != 0 || R1174 = R1188 || (R22 = 0 && R1188 = 0)) && (R1175 != 0 || R1176 = R1188 || (R22 = 0 && R1188 = 0)) && (R1177 != 0 || R1178 = R1188 || (R22 = 0 && R1188 = 0)) && (R1179 != 0 || R1180 = R1188 || (R22 = 0 && R1188 = 0)) && (R1181 != 0 || R1182 = R1188 || (R22 = 0 && R1188 = 0)) && (R1183 != 0 || R1184 = R1188 || (R22 = 0 && R1188 = 0)) && (R1185 != 0 || R1186 = R1188 || (R22 = 0 && R1188 = 0)) && (R23 = 0 || (R1217 = 0 && R1218 = 0)) && (R23 = 0 || (R1221 = 0 && R1222 = 0)) && (R23 = 0 || (R1223 = 0 && R1224 = 0)) && (R23 = 0 || (R1225 = 0 && R1226 = 0)) && (R23 = 0 || (R1227 = 0 && R1228 = 0)) && (R23 = 0 || (R1231 = 0 && R1232 = 0)) && (R23 = 0 || (R1233 = 0 && R1234 = 0)) && (R23 = 0 || (R1235 = 0 && R1236 = 0)) && (R23 = 0 || (R1239 = 0 && R1240 = 0)) && (R23 = 0 || (R1243 = 0 && R1244 = 0)) && (R24 = 0 || (R1189 = 0 && R1190 = 0)) && (R24 = 0 || (R1191 = 0 && R1192 = 0)) && (R24 = 0 || (R1193 = 0 && R1194 = 0)) && (R24 = 0 || (R1195 = 0 && R1196 = 0)) && (R24 = 0 || (R1197 = 0 && R1198 = 0)) && (R24 = 0 || (R1199 = 0 && R1200 = 0)) && (R24 = 0 || (R1201 = 0 && R1202 = 0)) && (R24 = 0 || (R1203 = 0 && R1204 = 0)) && (R24 = 0 || (R1205 = 0 && R1206 = 0)) && (R24 = 0 || (R1207 = 0 && R1208 = 0)) && (R24 = 0 || (R1209 = 0 && R1210 = 0)) && (R24 = 0 || (R1211 = 0 && R1212 = 0)) && (R24 = 0 || (R1213 = 0 && R1214 = 0)) && (R24 = 0 || (R1215 = 0 && R1216 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R1156 + R1152 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R1156 + R1152 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R1156 + R1152 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 = 0 || (R83 + R160 + R157 = 0 && R130 + R1156 + R1152 = 0)) && (R113 + R191 + R187 = 0 || R83 + R160 + R157 < 1) && (R119 + R198 + R193 = 0 || (R83 + R160 + R157 = 0 && R130 + R1156 + R1152 = 0)) && (R123 + R202 + R197 = 0 || (R121 + R200 + R195 = 0 && R122 + R201 + R196 = 0)) && (R1159 = 0 || (R22 = 0 && R1188 = 0)) && (R1161 = 0 || (R22 = 0 && R1188 = 0)) && (R1163 = 0 || (R22 = 0 && R1188 = 0)) && (R1165 = 0 || (R22 = 0 && R1188 = 0)) && (R1167 = 0 || (R22 = 0 && R1188 = 0)) && (R1169 = 0 || (R22 = 0 && R1188 = 0)) && (R1171 = 0 || (R22 = 0 && R1188 = 0)) && (R1173 = 0 || (R22 = 0 && R1188 = 0)) && (R1175 = 0 || (R22 = 0 && R1188 = 0)) && (R1177 = 0 || (R22 = 0 && R1188 = 0)) && (R1179 = 0 || (R22 = 0 && R1188 = 0)) && (R1181 = 0 || (R22 = 0 && R1188 = 0)) && (R1183 = 0 || (R22 = 0 && R1188 = 0)) && (R1185 = 0 || (R22 = 0 && R1188 = 0));
// End of Parikh automata intersection problem
