// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R12, R17, R18, R19, R2, R20, R21, R22, R23, R24, R25, R26, R27, R3, R38, R3890, R3891, R3892, R3893, R3894, R3895, R4, R40, R42, R43, R46, R47, R48, R5166, R5167, R5168, R5169, R5170, R5171, R5172, R5173, R5174, R5175, R52, R53, R5384, R5385, R5386, R5387, R5388, R5389, R5390, R5391, R5392, R5393, R5394, R5395, R5396, R5397, R5398, R5399, R5400, R5401, R5402, R5403, R5404, R5405, R5406, R5407, R5408, R5409, R5410, R5411, R5412, R5413, R5414, R5415, R5416, R5417, R5418, R5419, R5420, R5421, R5422, R5423, R5424, R5425, R5426, R5427, R5428, R5429, R5430, R5431, R5432, R5433, R5434, R5435, R5436, R5437, R5438, R5439, R5440, R5441, R5442, R5443, R5444, R5445, R5446, R5447, R5448, R5449, R5450, R5451, R5452, R5453, R5454, R5455, R5456, R5457, R5458, R5459, R5460, R5461, R5462, R5463, R5464, R5465, R5466, R5467, R5468, R5469, R5470, R5471, R5472, R5473, R5474, R5475, R5476, R5477, R5478, R5479, R5480, R5481, R5482, R5483, R5484, R5485, R5486, R5487, R56, R57, R58, R62, R63, R66, R67, R68, R69, R70, R71, R72, R73, R8;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [73, 73];
  s0 -> s0 [74, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [73, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R2 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R11 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 72];
  s0 -> s0 [0, 65535] { R12 += 1 };
  s0 -> s2 [73, 73];
  s0 -> s1 [74, 65535];
  s1 -> s1 [0, 72];
  s1 -> s2 [73, 73];
  s1 -> s1 [74, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R21 += 1 };
  s0 -> s0 [0, 65535] { R20 += 1, R21 += 1 };
  s0 -> s2 [9, 13] { R21 += 1 };
  s0 -> s1 [14, 31] { R21 += 1 };
  s0 -> s2 [32, 32] { R21 += 1 };
  s0 -> s1 [33, 65535] { R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R21 += 1 };
  s2 -> s1 [0, 65535] { R21 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R22 += 1, R23 += 1 };
  s1 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R25 += 1 };
  s0 -> s0 [0, 65535] { R24 += 1, R25 += 1 };
  s0 -> s2 [9, 13] { R25 += 1 };
  s0 -> s1 [14, 31] { R25 += 1 };
  s0 -> s2 [32, 32] { R25 += 1 };
  s0 -> s1 [33, 65535] { R25 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R25 += 1 };
  s2 -> s1 [0, 65535] { R25 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R26 += 1, R27 += 1 };
  s0 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R5409 += 1, R19 += 1 };
  s0 -> s0 [0, 65535] { R5408 += 1, R5409 += 1 };
  s1 -> s1 [0, 65535] { R5409 += 1, R19 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 72] { R5411 += 1 };
  s0 -> s0 [0, 65535] { R5410 += 1, R5411 += 1 };
  s0 -> s2 [73, 73] { R5411 += 1 };
  s0 -> s3 [73, 73] { R5411 += 1 };
  s0 -> s1 [78, 65535] { R5411 += 1 };
  s1 -> s1 [0, 72] { R5411 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R5411 += 1 };
  s1 -> s3 [73, 73] { R5411 += 1 };
  s1 -> s1 [78, 65535] { R5411 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 73] { R5411 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [78, 65535] { R5411 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 72] { R5413 += 1, R38 += 1 };
  s0 -> s0 [0, 65535] { R5412 += 1, R5413 += 1 };
  s0 -> s2 [73, 73] { R5413 += 1, R38 += 1 };
  s0 -> s3 [73, 73] { R5413 += 1, R38 += 1 };
  s0 -> s1 [74, 65535] { R5413 += 1, R38 += 1 };
  s1 -> s1 [0, 72] { R5413 += 1, R38 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R5413 += 1, R38 += 1 };
  s1 -> s3 [73, 73] { R5413 += 1, R38 += 1 };
  s1 -> s1 [74, 65535] { R5413 += 1, R38 += 1 };
  s2 -> s2 [0, 65535] { R5413 += 1, R38 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 72] { R5415 += 1, R40 += 1 };
  s0 -> s0 [0, 65535] { R5414 += 1, R5415 += 1 };
  s0 -> s2 [73, 73] { R5415 += 1, R40 += 1 };
  s0 -> s3 [73, 73] { R5415 += 1, R40 += 1 };
  s0 -> s1 [74, 65535] { R5415 += 1, R40 += 1 };
  s1 -> s1 [0, 72] { R5415 += 1, R40 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R5415 += 1, R40 += 1 };
  s1 -> s3 [73, 73] { R5415 += 1, R40 += 1 };
  s1 -> s1 [74, 65535] { R5415 += 1, R40 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5415 += 1, R40 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 72] { R5417 += 1, R42 += 1, R43 += 1 };
  s0 -> s0 [0, 65535] { R5416 += 1, R5417 += 1 };
  s0 -> s2 [73, 73] { R5417 += 1, R42 += 1, R43 += 1 };
  s0 -> s3 [73, 73] { R5417 += 1, R42 += 1, R43 += 1 };
  s0 -> s1 [74, 65535] { R5417 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 72] { R5417 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R5417 += 1, R42 += 1, R43 += 1 };
  s1 -> s3 [73, 73] { R5417 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [74, 65535] { R5417 += 1, R42 += 1, R43 += 1 };
  s2 -> s2 [0, 65535] { R5417 += 1, R42 += 1, R43 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 72] { R5419 += 1, R46 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R5418 += 1, R5419 += 1 };
  s0 -> s2 [73, 73] { R5419 += 1, R46 += 1, R47 += 1 };
  s0 -> s3 [73, 73] { R5419 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [74, 65535] { R5419 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 72] { R5419 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R5419 += 1, R46 += 1, R47 += 1 };
  s1 -> s3 [73, 73] { R5419 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [74, 65535] { R5419 += 1, R46 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5419 += 1, R46 += 1, R47 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 72] { R5421 += 1, R52 += 1, R53 += 1 };
  s0 -> s0 [0, 65535] { R5420 += 1, R5421 += 1 };
  s0 -> s2 [73, 73] { R5421 += 1, R52 += 1, R53 += 1 };
  s0 -> s3 [73, 73] { R5421 += 1, R52 += 1, R53 += 1 };
  s0 -> s1 [74, 65535] { R5421 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 72] { R5421 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R5421 += 1, R52 += 1, R53 += 1 };
  s1 -> s3 [73, 73] { R5421 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [74, 65535] { R5421 += 1, R52 += 1, R53 += 1 };
  s2 -> s2 [0, 65535] { R5421 += 1, R52 += 1, R53 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 72] { R5423 += 1, R56 += 1, R57 += 1 };
  s0 -> s0 [0, 65535] { R5422 += 1, R5423 += 1 };
  s0 -> s2 [73, 73] { R5423 += 1, R56 += 1, R57 += 1 };
  s0 -> s3 [73, 73] { R5423 += 1, R56 += 1, R57 += 1 };
  s0 -> s1 [74, 65535] { R5423 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 72] { R5423 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R5423 += 1, R56 += 1, R57 += 1 };
  s1 -> s3 [73, 73] { R5423 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [74, 65535] { R5423 += 1, R56 += 1, R57 += 1 };
  s2 -> s2 [0, 65535] { R5423 += 1, R56 += 1, R57 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 72] { R5425 += 1, R62 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R5424 += 1, R5425 += 1 };
  s0 -> s2 [73, 73] { R5425 += 1, R62 += 1, R63 += 1 };
  s0 -> s3 [73, 73] { R5425 += 1, R62 += 1, R63 += 1 };
  s0 -> s1 [74, 65535] { R5425 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 72] { R5425 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R5425 += 1, R62 += 1, R63 += 1 };
  s1 -> s3 [73, 73] { R5425 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [74, 65535] { R5425 += 1, R62 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5425 += 1, R62 += 1, R63 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 72] { R5445 += 1 };
  s0 -> s0 [0, 65535] { R5444 += 1, R5445 += 1 };
  s0 -> s2 [73, 73] { R5445 += 1 };
  s0 -> s1 [74, 65535] { R5445 += 1 };
  s1 -> s1 [0, 72] { R5445 += 1 };
  s1 -> s2 [73, 73] { R5445 += 1 };
  s1 -> s1 [74, 65535] { R5445 += 1 };
  s2 -> s2 [0, 65535] { R5445 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R5447 += 1, R1 += 1 };
  s0 -> s0 [0, 65535] { R5446 += 1, R5447 += 1 };
  s1 -> s1 [0, 65535] { R5447 += 1, R1 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 72] { R5449 += 1 };
  s0 -> s0 [0, 65535] { R5448 += 1, R5449 += 1 };
  s0 -> s2 [0, 65535] { R5449 += 1, R8 += 1 };
  s0 -> s3 [73, 73] { R5449 += 1 };
  s0 -> s1 [74, 65535] { R5449 += 1 };
  s1 -> s1 [0, 72] { R5449 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [73, 73] { R5449 += 1 };
  s1 -> s1 [74, 65535] { R5449 += 1 };
  s2 -> s1 [0, 72] { R5449 += 1 };
  s2 -> s2 [0, 65535] { R5449 += 1, R8 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [73, 73] { R5449 += 1 };
  s2 -> s1 [74, 65535] { R5449 += 1 };
  s3 -> s3 [0, 65535] { R5449 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 72] { R5451 += 1, R5389 += 1 };
  s0 -> s0 [0, 65535] { R5450 += 1, R5451 += 1 };
  s0 -> s2 [0, 65535] { R5451 += 1, R5388 += 1, R5389 += 1 };
  s0 -> s1 [74, 65535] { R5451 += 1, R5389 += 1 };
  s1 -> s1 [0, 72] { R5451 += 1, R5389 += 1 };
  s1 -> s1 [0, 65535] { R5451 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [74, 65535] { R5451 += 1, R5389 += 1 };
  s2 -> s1 [0, 72] { R5451 += 1, R5389 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5451 += 1, R5388 += 1, R5389 += 1 };
  s2 -> s1 [74, 65535] { R5451 += 1, R5389 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R5453 += 1, R5390 += 1, R5391 += 1 };
  s0 -> s0 [0, 65535] { R5452 += 1, R5453 += 1 };
  s0 -> s2 [0, 65535] { R5453 += 1, R5391 += 1, R17 += 1 };
  s1 -> s1 [0, 65535] { R5453 += 1, R5390 += 1, R5391 += 1 };
  s1 -> s2 [0, 65535] { R5453 += 1, R5391 += 1, R17 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R5453 += 1 };
  s2 -> s2 [0, 65535] { R5453 += 1, R5391 += 1, R17 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5453 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 73] { R5455 += 1, R5393 += 1 };
  s0 -> s0 [0, 65535] { R5454 += 1, R5455 += 1 };
  s0 -> s2 [0, 65535] { R5455 += 1, R5392 += 1, R5393 += 1 };
  s0 -> s1 [77, 65535] { R5455 += 1, R5393 += 1 };
  s1 -> s1 [0, 73] { R5455 += 1, R5393 += 1 };
  s1 -> s1 [0, 65535] { R5455 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [77, 65535] { R5455 += 1, R5393 += 1 };
  s2 -> s1 [0, 73] { R5455 += 1, R5393 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5455 += 1, R5392 += 1, R5393 += 1 };
  s2 -> s1 [77, 65535] { R5455 += 1, R5393 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R5456 += 1, R5457 += 1 };
  s0 -> s1 [0, 65535] { R5457 += 1, R5395 += 1, R67 += 1 };
  s0 -> s2 [0, 65535] { R5457 += 1, R5394 += 1, R5395 += 1 };
  s1 -> s4 [0, 65535] { R5457 += 1 };
  s1 -> s1 [0, 65535] { R5457 += 1, R5395 += 1, R67 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R5457 += 1, R5395 += 1, R67 += 1 };
  s2 -> s2 [0, 65535] { R5457 += 1, R5394 += 1, R5395 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5457 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 76] { R5459 += 1, R5397 += 1 };
  s0 -> s2 [0, 65535] { R5459 += 1, R5396 += 1, R5397 += 1 };
  s0 -> s3 [0, 65535] { R5459 += 1, R5397 += 1, R69 += 1 };
  s0 -> s0 [0, 65535] { R5458 += 1, R5459 += 1 };
  s0 -> s1 [78, 65535] { R5459 += 1, R5397 += 1 };
  s1 -> s1 [0, 76] { R5459 += 1, R5397 += 1 };
  s1 -> s1 [0, 65535] { R5459 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [78, 65535] { R5459 += 1, R5397 += 1 };
  s2 -> s1 [0, 76] { R5459 += 1, R5397 += 1 };
  s2 -> s2 [0, 65535] { R5459 += 1, R5396 += 1, R5397 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R5459 += 1, R5397 += 1, R69 += 1 };
  s2 -> s1 [78, 65535] { R5459 += 1, R5397 += 1 };
  s3 -> s1 [0, 76] { R5459 += 1, R5397 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5459 += 1, R5397 += 1, R69 += 1 };
  s3 -> s5 [0, 65535] { R5459 += 1 };
  s3 -> s1 [78, 65535] { R5459 += 1, R5397 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5459 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 76] { R5461 += 1, R5399 += 1, R73 += 1 };
  s0 -> s0 [0, 65535] { R5460 += 1, R5461 += 1 };
  s0 -> s2 [0, 65535] { R5461 += 1, R5398 += 1, R5399 += 1 };
  s0 -> s3 [0, 65535] { R5461 += 1, R5399 += 1, R72 += 1, R73 += 1 };
  s0 -> s1 [78, 65535] { R5461 += 1, R5399 += 1, R73 += 1 };
  s1 -> s1 [0, 76] { R5461 += 1, R5399 += 1, R73 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R5461 += 1 };
  s1 -> s1 [0, 65535] { R5461 += 1, R5399 += 1 };
  s1 -> s1 [78, 65535] { R5461 += 1, R5399 += 1, R73 += 1 };
  s2 -> s1 [0, 76] { R5461 += 1, R5399 += 1, R73 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R5461 += 1, R5398 += 1, R5399 += 1 };
  s2 -> s3 [0, 65535] { R5461 += 1, R5399 += 1, R72 += 1, R73 += 1 };
  s2 -> s1 [78, 65535] { R5461 += 1, R5399 += 1, R73 += 1 };
  s3 -> s1 [0, 76] { R5461 += 1, R5399 += 1, R73 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R5461 += 1 };
  s3 -> s3 [0, 65535] { R5461 += 1, R5399 += 1, R72 += 1, R73 += 1 };
  s3 -> s1 [78, 65535] { R5461 += 1, R5399 += 1, R73 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5461 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R5463 += 1, R5401 += 1, R3894 += 1, R3895 += 1 };
  s0 -> s2 [0, 65535] { R5463 += 1, R5401 += 1 };
  s0 -> s0 [0, 65535] { R5462 += 1, R5463 += 1 };
  s0 -> s3 [0, 65535] { R5463 += 1, R5400 += 1, R5401 += 1 };
  s1 -> s1 [0, 65535] { R5463 += 1, R5401 += 1, R3894 += 1, R3895 += 1 };
  s1 -> s5 [0, 65535] { R5463 += 1 };
  s1 -> s2 [0, 65535] { R5463 += 1, R5401 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R5463 += 1 };
  s2 -> s2 [0, 65535] { R5463 += 1, R5401 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R5463 += 1, R5401 += 1, R3894 += 1, R3895 += 1 };
  s3 -> s2 [0, 65535] { R5463 += 1, R5401 += 1 };
  s3 -> s3 [0, 65535] { R5463 += 1, R5400 += 1, R5401 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5463 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 77] { R5465 += 1, R5403 += 1, R5169 += 1 };
  s0 -> s0 [0, 65535] { R5464 += 1, R5465 += 1 };
  s0 -> s2 [0, 65535] { R5465 += 1, R5402 += 1, R5403 += 1 };
  s0 -> s3 [90, 90] { R5465 += 1, R5403 += 1, R5169 += 1 };
  s0 -> s1 [91, 65535] { R5465 += 1, R5403 += 1, R5169 += 1 };
  s1 -> s1 [0, 77] { R5465 += 1, R5403 += 1, R5169 += 1 };
  s1 -> s3 [90, 90] { R5465 += 1, R5403 += 1, R5169 += 1 };
  s1 -> s1 [91, 65535] { R5465 += 1, R5403 += 1, R5169 += 1 };
  s2 -> s1 [0, 77] { R5465 += 1, R5403 += 1, R5169 += 1 };
  s2 -> s2 [0, 65535] { R5465 += 1, R5402 += 1, R5403 += 1 };
  s2 -> s3 [90, 90] { R5465 += 1, R5403 += 1, R5169 += 1 };
  s2 -> s1 [91, 65535] { R5465 += 1, R5403 += 1, R5169 += 1 };
  s3 -> s3 [0, 77] { R5465 += 1, R5403 += 1, R5169 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R5465 += 1 };
  s3 -> s3 [0, 65535] { R5465 += 1, R5403 += 1 };
  s3 -> s3 [90, 65535] { R5465 += 1, R5403 += 1, R5169 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5465 += 1 };
  accepting s3, s4, s5;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R5467 += 1, R5404 += 1, R5405 += 1 };
  s0 -> s2 [0, 65535] { R5467 += 1, R5405 += 1, R5174 += 1, R5175 += 1 };
  s0 -> s0 [0, 65535] { R5466 += 1, R5467 += 1 };
  s0 -> s3 [0, 65535] { R5467 += 1, R5405 += 1, R5173 += 1, R5174 += 1 };
  s1 -> s1 [0, 65535] { R5467 += 1, R5404 += 1, R5405 += 1 };
  s1 -> s2 [0, 65535] { R5467 += 1, R5405 += 1, R5174 += 1, R5175 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s3 [0, 65535] { R5467 += 1, R5405 += 1, R5173 += 1, R5174 += 1 };
  s2 -> s2 [0, 65535] { R5467 += 1, R5405 += 1, R5174 += 1, R5175 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s6 [0, 65535] { R5467 += 1, R5405 += 1 };
  s2 -> s5 [0, 65535] { R5467 += 1 };
  s3 -> s2 [0, 65535] { R5467 += 1, R5405 += 1, R5174 += 1, R5175 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R5467 += 1 };
  s3 -> s3 [0, 65535] { R5467 += 1, R5405 += 1, R5173 += 1, R5174 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5467 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R5467 += 1, R5405 += 1 };
  s6 -> s5 [0, 65535] { R5467 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s0 [0, 65535] { R5468 += 1, R5469 += 1 };
  s0 -> s1 [0, 65535] { R5469 += 1, R5407 += 1 };
  s0 -> s2 [0, 65535] { R5469 += 1, R5406 += 1, R5407 += 1 };
  s1 -> s4 [0, 65535] { R5469 += 1 };
  s1 -> s1 [0, 65535] { R5469 += 1, R5407 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R5469 += 1, R5407 += 1 };
  s2 -> s2 [0, 65535] { R5469 += 1, R5406 += 1, R5407 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5469 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R5470 += 1, R5471 += 1 };
  s0 -> s1 [0, 65535] { R5471 += 1, R5427 += 1, R18 += 1 };
  s0 -> s2 [0, 65535] { R5471 += 1, R5426 += 1, R5427 += 1 };
  s1 -> s4 [0, 65535] { R5471 += 1 };
  s1 -> s1 [0, 65535] { R5471 += 1, R5427 += 1, R18 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R5471 += 1, R5427 += 1, R18 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5471 += 1, R5426 += 1, R5427 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5471 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 72] { R5473 += 1, R5429 += 1 };
  s0 -> s0 [0, 65535] { R5472 += 1, R5473 += 1 };
  s0 -> s2 [0, 65535] { R5473 += 1, R5428 += 1, R5429 += 1 };
  s0 -> s3 [73, 73] { R5473 += 1, R5429 += 1 };
  s0 -> s4 [73, 73] { R5473 += 1, R5429 += 1 };
  s0 -> s5 [77, 77] { R5473 += 1, R5429 += 1 };
  s0 -> s1 [78, 65535] { R5473 += 1, R5429 += 1 };
  s1 -> s1 [0, 72] { R5473 += 1, R5429 += 1 };
  s1 -> s3 [73, 73] { R5473 += 1, R5429 += 1 };
  s1 -> s4 [73, 73] { R5473 += 1, R5429 += 1 };
  s1 -> s5 [77, 77] { R5473 += 1, R5429 += 1 };
  s1 -> s1 [78, 65535] { R5473 += 1, R5429 += 1 };
  s2 -> s1 [0, 72] { R5473 += 1, R5429 += 1 };
  s2 -> s2 [0, 65535] { R5473 += 1, R5428 += 1, R5429 += 1 };
  s2 -> s3 [73, 73] { R5473 += 1, R5429 += 1 };
  s2 -> s4 [73, 73] { R5473 += 1, R5429 += 1 };
  s2 -> s5 [77, 77] { R5473 += 1, R5429 += 1 };
  s2 -> s1 [78, 65535] { R5473 += 1, R5429 += 1 };
  s3 -> s3 [0, 73] { R5473 += 1, R5429 += 1 };
  s3 -> s7 [77, 77] { R5473 += 1, R5429 += 1 };
  s3 -> s3 [78, 65535] { R5473 += 1, R5429 += 1 };
  s5 -> s5 [0, 72] { R5473 += 1, R5429 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R5473 += 1 };
  s5 -> s7 [73, 73] { R5473 += 1, R5429 += 1 };
  s5 -> s8 [73, 73] { R5473 += 1, R5429 += 1 };
  s5 -> s5 [77, 65535] { R5473 += 1, R5429 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 73] { R5473 += 1, R5429 += 1 };
  s7 -> s7 [0, 65535] { R5473 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [77, 65535] { R5473 += 1, R5429 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R5473 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 72] { R5475 += 1, R5431 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R5474 += 1, R5475 += 1 };
  s0 -> s2 [0, 65535] { R5475 += 1, R5430 += 1, R5431 += 1 };
  s0 -> s3 [73, 73] { R5475 += 1, R5431 += 1, R66 += 1 };
  s0 -> s4 [73, 73] { R5475 += 1, R5431 += 1, R66 += 1 };
  s0 -> s1 [74, 65535] { R5475 += 1, R5431 += 1, R66 += 1 };
  s1 -> s1 [0, 72] { R5475 += 1, R5431 += 1, R66 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5475 += 1 };
  s1 -> s3 [73, 73] { R5475 += 1, R5431 += 1, R66 += 1 };
  s1 -> s4 [73, 73] { R5475 += 1, R5431 += 1, R66 += 1 };
  s1 -> s1 [74, 65535] { R5475 += 1, R5431 += 1, R66 += 1 };
  s2 -> s1 [0, 72] { R5475 += 1, R5431 += 1, R66 += 1 };
  s2 -> s2 [0, 65535] { R5475 += 1, R5430 += 1, R5431 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [73, 73] { R5475 += 1, R5431 += 1, R66 += 1 };
  s2 -> s4 [73, 73] { R5475 += 1, R5431 += 1, R66 += 1 };
  s2 -> s1 [74, 65535] { R5475 += 1, R5431 += 1, R66 += 1 };
  s3 -> s3 [0, 65535] { R5475 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5475 += 1, R5431 += 1, R66 += 1 };
  s4 -> s6 [0, 65535] { R5475 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5475 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 72] { R5477 += 1, R5433 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R5476 += 1, R5477 += 1 };
  s0 -> s2 [0, 65535] { R5477 += 1, R5432 += 1, R5433 += 1 };
  s0 -> s3 [73, 73] { R5477 += 1, R5433 += 1, R68 += 1 };
  s0 -> s4 [73, 73] { R5477 += 1, R5433 += 1, R68 += 1 };
  s0 -> s1 [74, 65535] { R5477 += 1, R5433 += 1, R68 += 1 };
  s1 -> s1 [0, 72] { R5477 += 1, R5433 += 1, R68 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5477 += 1 };
  s1 -> s3 [73, 73] { R5477 += 1, R5433 += 1, R68 += 1 };
  s1 -> s4 [73, 73] { R5477 += 1, R5433 += 1, R68 += 1 };
  s1 -> s1 [74, 65535] { R5477 += 1, R5433 += 1, R68 += 1 };
  s2 -> s1 [0, 72] { R5477 += 1, R5433 += 1, R68 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5477 += 1, R5432 += 1, R5433 += 1 };
  s2 -> s3 [73, 73] { R5477 += 1, R5433 += 1, R68 += 1 };
  s2 -> s4 [73, 73] { R5477 += 1, R5433 += 1, R68 += 1 };
  s2 -> s1 [74, 65535] { R5477 += 1, R5433 += 1, R68 += 1 };
  s3 -> s3 [0, 65535] { R5477 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5477 += 1 };
  s4 -> s4 [0, 65535] { R5477 += 1, R5433 += 1, R68 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5477 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 72] { R5479 += 1, R5435 += 1, R70 += 1, R71 += 1 };
  s0 -> s0 [0, 65535] { R5478 += 1, R5479 += 1 };
  s0 -> s2 [0, 65535] { R5479 += 1, R5434 += 1, R5435 += 1 };
  s0 -> s3 [73, 73] { R5479 += 1, R5435 += 1, R70 += 1, R71 += 1 };
  s0 -> s4 [73, 73] { R5479 += 1, R5435 += 1, R70 += 1, R71 += 1 };
  s0 -> s1 [74, 65535] { R5479 += 1, R5435 += 1, R70 += 1, R71 += 1 };
  s1 -> s1 [0, 72] { R5479 += 1, R5435 += 1, R70 += 1, R71 += 1 };
  s1 -> s1 [0, 65535] { R5479 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [73, 73] { R5479 += 1, R5435 += 1, R70 += 1, R71 += 1 };
  s1 -> s4 [73, 73] { R5479 += 1, R5435 += 1, R70 += 1, R71 += 1 };
  s1 -> s1 [74, 65535] { R5479 += 1, R5435 += 1, R70 += 1, R71 += 1 };
  s2 -> s1 [0, 72] { R5479 += 1, R5435 += 1, R70 += 1, R71 += 1 };
  s2 -> s2 [0, 65535] { R5479 += 1, R5434 += 1, R5435 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [73, 73] { R5479 += 1, R5435 += 1, R70 += 1, R71 += 1 };
  s2 -> s4 [73, 73] { R5479 += 1, R5435 += 1, R70 += 1, R71 += 1 };
  s2 -> s1 [74, 65535] { R5479 += 1, R5435 += 1, R70 += 1, R71 += 1 };
  s3 -> s3 [0, 65535] { R5479 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5479 += 1, R5435 += 1, R70 += 1, R71 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5479 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5479 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 72] { R5481 += 1, R5437 += 1, R3891 += 1, R3892 += 1 };
  s0 -> s2 [0, 72] { R5481 += 1, R5437 += 1, R3890 += 1, R3891 += 1 };
  s0 -> s3 [0, 65535] { R5481 += 1, R5436 += 1, R5437 += 1 };
  s0 -> s0 [0, 65535] { R5480 += 1, R5481 += 1 };
  s0 -> s4 [73, 73] { R5481 += 1, R5437 += 1, R3891 += 1, R3892 += 1 };
  s0 -> s5 [73, 73] { R5481 += 1, R5437 += 1, R3890 += 1, R3891 += 1 };
  s0 -> s6 [73, 73] { R5481 += 1, R5437 += 1, R3890 += 1, R3891 += 1 };
  s0 -> s7 [73, 73] { R5481 += 1, R5437 += 1, R3891 += 1, R3892 += 1 };
  s0 -> s1 [74, 65535] { R5481 += 1, R5437 += 1, R3891 += 1, R3892 += 1 };
  s0 -> s2 [74, 65535] { R5481 += 1, R5437 += 1, R3890 += 1, R3891 += 1 };
  s1 -> s1 [0, 72] { R5481 += 1, R5437 += 1, R3891 += 1, R3892 += 1 };
  s1 -> s1 [0, 65535] { R5481 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [73, 73] { R5481 += 1, R5437 += 1, R3891 += 1, R3892 += 1 };
  s1 -> s7 [73, 73] { R5481 += 1, R5437 += 1, R3891 += 1, R3892 += 1 };
  s1 -> s1 [74, 65535] { R5481 += 1, R5437 += 1, R3891 += 1, R3892 += 1 };
  s2 -> s1 [0, 72] { R5481 += 1, R5437 += 1, R3891 += 1, R3892 += 1 };
  s2 -> s2 [0, 72] { R5481 += 1, R5437 += 1, R3890 += 1, R3891 += 1 };
  s2 -> s4 [73, 73] { R5481 += 1, R5437 += 1, R3891 += 1, R3892 += 1 };
  s2 -> s5 [73, 73] { R5481 += 1, R5437 += 1, R3890 += 1, R3891 += 1 };
  s2 -> s6 [73, 73] { R5481 += 1, R5437 += 1, R3890 += 1, R3891 += 1 };
  s2 -> s7 [73, 73] { R5481 += 1, R5437 += 1, R3891 += 1, R3892 += 1 };
  s2 -> s1 [74, 65535] { R5481 += 1, R5437 += 1, R3891 += 1, R3892 += 1 };
  s2 -> s2 [74, 65535] { R5481 += 1, R5437 += 1, R3890 += 1, R3891 += 1 };
  s3 -> s1 [0, 72] { R5481 += 1, R5437 += 1, R3891 += 1, R3892 += 1 };
  s3 -> s2 [0, 72] { R5481 += 1, R5437 += 1, R3890 += 1, R3891 += 1 };
  s3 -> s3 [0, 65535] { R5481 += 1, R5436 += 1, R5437 += 1 };
  s3 -> s4 [73, 73] { R5481 += 1, R5437 += 1, R3891 += 1, R3892 += 1 };
  s3 -> s5 [73, 73] { R5481 += 1, R5437 += 1, R3890 += 1, R3891 += 1 };
  s3 -> s6 [73, 73] { R5481 += 1, R5437 += 1, R3890 += 1, R3891 += 1 };
  s3 -> s7 [73, 73] { R5481 += 1, R5437 += 1, R3891 += 1, R3892 += 1 };
  s3 -> s1 [74, 65535] { R5481 += 1, R5437 += 1, R3891 += 1, R3892 += 1 };
  s3 -> s2 [74, 65535] { R5481 += 1, R5437 += 1, R3890 += 1, R3891 += 1 };
  s4 -> s4 [0, 65535] { R5481 += 1, R5437 += 1, R3891 += 1, R3892 += 1 };
  s4 -> s9 [0, 65535] { R5481 += 1 };
  s4 -> s8 [0, 65535];
  s6 -> s4 [0, 65535] { R5481 += 1, R5437 += 1, R3891 += 1, R3892 += 1 };
  s6 -> s6 [0, 65535] { R5481 += 1, R5437 += 1, R3890 += 1, R3891 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R5481 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R5481 += 1 };
  s9 -> s8 [0, 65535];
  accepting s4, s8, s9, s1, s7;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 72] { R5483 += 1, R5439 += 1, R5167 += 1 };
  s0 -> s2 [0, 72] { R5483 += 1, R5439 += 1, R5166 += 1, R5167 += 1 };
  s0 -> s0 [0, 65535] { R5482 += 1, R5483 += 1 };
  s0 -> s3 [0, 65535] { R5483 += 1, R5438 += 1, R5439 += 1 };
  s0 -> s4 [73, 73] { R5483 += 1, R5439 += 1, R5166 += 1, R5167 += 1 };
  s0 -> s5 [73, 73] { R5483 += 1, R5439 += 1, R5167 += 1 };
  s0 -> s6 [73, 73] { R5483 += 1, R5439 += 1, R5167 += 1 };
  s0 -> s7 [73, 73] { R5483 += 1, R5439 += 1, R5166 += 1, R5167 += 1 };
  s0 -> s1 [74, 77] { R5483 += 1, R5439 += 1, R5167 += 1 };
  s0 -> s2 [74, 65535] { R5483 += 1, R5439 += 1, R5166 += 1, R5167 += 1 };
  s0 -> s1 [91, 65535] { R5483 += 1, R5439 += 1, R5167 += 1 };
  s1 -> s1 [0, 72] { R5483 += 1, R5439 += 1, R5167 += 1 };
  s1 -> s1 [0, 65535] { R5483 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s5 [73, 73] { R5483 += 1, R5439 += 1, R5167 += 1 };
  s1 -> s6 [73, 73] { R5483 += 1, R5439 += 1, R5167 += 1 };
  s1 -> s1 [74, 77] { R5483 += 1, R5439 += 1, R5167 += 1 };
  s1 -> s1 [91, 65535] { R5483 += 1, R5439 += 1, R5167 += 1 };
  s2 -> s1 [0, 72] { R5483 += 1, R5439 += 1, R5167 += 1 };
  s2 -> s2 [0, 72] { R5483 += 1, R5439 += 1, R5166 += 1, R5167 += 1 };
  s2 -> s4 [73, 73] { R5483 += 1, R5439 += 1, R5166 += 1, R5167 += 1 };
  s2 -> s5 [73, 73] { R5483 += 1, R5439 += 1, R5167 += 1 };
  s2 -> s6 [73, 73] { R5483 += 1, R5439 += 1, R5167 += 1 };
  s2 -> s7 [73, 73] { R5483 += 1, R5439 += 1, R5166 += 1, R5167 += 1 };
  s2 -> s1 [74, 77] { R5483 += 1, R5439 += 1, R5167 += 1 };
  s2 -> s2 [74, 65535] { R5483 += 1, R5439 += 1, R5166 += 1, R5167 += 1 };
  s2 -> s1 [91, 65535] { R5483 += 1, R5439 += 1, R5167 += 1 };
  s3 -> s1 [0, 72] { R5483 += 1, R5439 += 1, R5167 += 1 };
  s3 -> s2 [0, 72] { R5483 += 1, R5439 += 1, R5166 += 1, R5167 += 1 };
  s3 -> s3 [0, 65535] { R5483 += 1, R5438 += 1, R5439 += 1 };
  s3 -> s4 [73, 73] { R5483 += 1, R5439 += 1, R5166 += 1, R5167 += 1 };
  s3 -> s5 [73, 73] { R5483 += 1, R5439 += 1, R5167 += 1 };
  s3 -> s6 [73, 73] { R5483 += 1, R5439 += 1, R5167 += 1 };
  s3 -> s7 [73, 73] { R5483 += 1, R5439 += 1, R5166 += 1, R5167 += 1 };
  s3 -> s1 [74, 77] { R5483 += 1, R5439 += 1, R5167 += 1 };
  s3 -> s2 [74, 65535] { R5483 += 1, R5439 += 1, R5166 += 1, R5167 += 1 };
  s3 -> s1 [91, 65535] { R5483 += 1, R5439 += 1, R5167 += 1 };
  s5 -> s5 [0, 77] { R5483 += 1, R5439 += 1, R5167 += 1 };
  s5 -> s5 [0, 65535] { R5483 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [91, 65535] { R5483 += 1, R5439 += 1, R5167 += 1 };
  s6 -> s6 [0, 65535] { R5483 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s5 [0, 77] { R5483 += 1, R5439 += 1, R5167 += 1 };
  s7 -> s7 [0, 65535] { R5483 += 1, R5439 += 1, R5166 += 1, R5167 += 1 };
  s7 -> s5 [91, 65535] { R5483 += 1, R5439 += 1, R5167 += 1 };
  s8 -> s8 [0, 65535];
  accepting s1, s5, s6, s8;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 72] { R5485 += 1, R5441 += 1, R5170 += 1, R5171 += 1 };
  s0 -> s2 [0, 65535] { R5485 += 1, R5440 += 1, R5441 += 1 };
  s0 -> s0 [0, 65535] { R5484 += 1, R5485 += 1 };
  s0 -> s3 [73, 73] { R5485 += 1, R5441 += 1, R5170 += 1, R5171 += 1 };
  s0 -> s4 [73, 73] { R5485 += 1, R5441 += 1, R5170 += 1, R5171 += 1 };
  s0 -> s1 [74, 65535] { R5485 += 1, R5441 += 1, R5170 += 1, R5171 += 1 };
  s1 -> s1 [0, 72] { R5485 += 1, R5441 += 1, R5170 += 1, R5171 += 1 };
  s1 -> s1 [0, 65535] { R5485 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [73, 73] { R5485 += 1, R5441 += 1, R5170 += 1, R5171 += 1 };
  s1 -> s4 [73, 73] { R5485 += 1, R5441 += 1, R5170 += 1, R5171 += 1 };
  s1 -> s1 [74, 65535] { R5485 += 1, R5441 += 1, R5170 += 1, R5171 += 1 };
  s2 -> s1 [0, 72] { R5485 += 1, R5441 += 1, R5170 += 1, R5171 += 1 };
  s2 -> s2 [0, 65535] { R5485 += 1, R5440 += 1, R5441 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [73, 73] { R5485 += 1, R5441 += 1, R5170 += 1, R5171 += 1 };
  s2 -> s4 [73, 73] { R5485 += 1, R5441 += 1, R5170 += 1, R5171 += 1 };
  s2 -> s1 [74, 65535] { R5485 += 1, R5441 += 1, R5170 += 1, R5171 += 1 };
  s3 -> s3 [0, 65535] { R5485 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5485 += 1, R5441 += 1, R5170 += 1, R5171 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5485 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5485 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 72] { R5487 += 1, R5443 += 1, R5385 += 1 };
  s0 -> s2 [0, 72] { R5487 += 1, R5443 += 1, R5384 += 1, R5385 += 1 };
  s0 -> s0 [0, 65535] { R5486 += 1, R5487 += 1 };
  s0 -> s3 [0, 65535] { R5487 += 1, R5442 += 1, R5443 += 1 };
  s0 -> s4 [73, 73] { R5487 += 1, R5443 += 1, R5385 += 1 };
  s0 -> s5 [73, 73] { R5487 += 1, R5443 += 1, R5385 += 1 };
  s0 -> s6 [73, 73] { R5487 += 1, R5443 += 1, R5384 += 1, R5385 += 1 };
  s0 -> s7 [73, 73] { R5487 += 1, R5443 += 1, R5384 += 1, R5385 += 1 };
  s0 -> s1 [74, 76] { R5487 += 1, R5443 += 1, R5385 += 1 };
  s0 -> s2 [74, 65535] { R5487 += 1, R5443 += 1, R5384 += 1, R5385 += 1 };
  s0 -> s8 [77, 77] { R5487 += 1, R5443 += 1, R5385 += 1 };
  s0 -> s1 [91, 65535] { R5487 += 1, R5443 += 1, R5385 += 1 };
  s1 -> s1 [0, 72] { R5487 += 1, R5443 += 1, R5385 += 1 };
  s1 -> s4 [73, 73] { R5487 += 1, R5443 += 1 };
  s1 -> s5 [73, 73] { R5487 += 1, R5443 += 1 };
  s1 -> s1 [74, 76] { R5487 += 1, R5443 += 1, R5385 += 1 };
  s1 -> s1 [74, 65535] { R5487 += 1, R5443 += 1 };
  s1 -> s8 [77, 77] { R5487 += 1, R5443 += 1, R5385 += 1 };
  s1 -> s1 [91, 65535] { R5487 += 1, R5443 += 1, R5385 += 1 };
  s2 -> s1 [0, 72] { R5487 += 1, R5443 += 1, R5385 += 1 };
  s2 -> s2 [0, 72] { R5487 += 1, R5443 += 1, R5384 += 1, R5385 += 1 };
  s2 -> s4 [73, 73] { R5487 += 1, R5443 += 1, R5385 += 1 };
  s2 -> s5 [73, 73] { R5487 += 1, R5443 += 1, R5385 += 1 };
  s2 -> s6 [73, 73] { R5487 += 1, R5443 += 1, R5384 += 1, R5385 += 1 };
  s2 -> s7 [73, 73] { R5487 += 1, R5443 += 1, R5384 += 1, R5385 += 1 };
  s2 -> s1 [74, 76] { R5487 += 1, R5443 += 1, R5385 += 1 };
  s2 -> s2 [74, 65535] { R5487 += 1, R5443 += 1, R5384 += 1, R5385 += 1 };
  s2 -> s8 [77, 77] { R5487 += 1, R5443 += 1, R5385 += 1 };
  s2 -> s1 [91, 65535] { R5487 += 1, R5443 += 1, R5385 += 1 };
  s3 -> s1 [0, 72] { R5487 += 1, R5443 += 1, R5385 += 1 };
  s3 -> s2 [0, 72] { R5487 += 1, R5443 += 1, R5384 += 1, R5385 += 1 };
  s3 -> s3 [0, 65535] { R5487 += 1, R5442 += 1, R5443 += 1 };
  s3 -> s4 [73, 73] { R5487 += 1, R5443 += 1, R5385 += 1 };
  s3 -> s5 [73, 73] { R5487 += 1, R5443 += 1, R5385 += 1 };
  s3 -> s6 [73, 73] { R5487 += 1, R5443 += 1, R5384 += 1, R5385 += 1 };
  s3 -> s7 [73, 73] { R5487 += 1, R5443 += 1, R5384 += 1, R5385 += 1 };
  s3 -> s1 [74, 76] { R5487 += 1, R5443 += 1, R5385 += 1 };
  s3 -> s2 [74, 65535] { R5487 += 1, R5443 += 1, R5384 += 1, R5385 += 1 };
  s3 -> s8 [77, 77] { R5487 += 1, R5443 += 1, R5385 += 1 };
  s3 -> s1 [91, 65535] { R5487 += 1, R5443 += 1, R5385 += 1 };
  s5 -> s5 [0, 76] { R5487 += 1, R5443 += 1, R5385 += 1 };
  s5 -> s5 [0, 65535] { R5487 += 1, R5443 += 1 };
  s5 -> s11 [77, 77] { R5487 += 1, R5443 += 1, R5385 += 1 };
  s5 -> s5 [91, 65535] { R5487 += 1, R5443 += 1, R5385 += 1 };
  s7 -> s5 [0, 76] { R5487 += 1, R5443 += 1, R5385 += 1 };
  s7 -> s7 [0, 65535] { R5487 += 1, R5443 += 1, R5384 += 1, R5385 += 1 };
  s7 -> s11 [77, 77] { R5487 += 1, R5443 += 1, R5385 += 1 };
  s7 -> s5 [91, 65535] { R5487 += 1, R5443 += 1, R5385 += 1 };
  s8 -> s8 [0, 72] { R5487 += 1, R5443 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R5487 += 1 };
  s8 -> s10 [73, 73] { R5487 += 1, R5443 += 1 };
  s8 -> s11 [73, 73] { R5487 += 1, R5443 += 1 };
  s8 -> s8 [74, 65535] { R5487 += 1, R5443 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R5487 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R5487 += 1, R5443 += 1 };
  s11 -> s12 [0, 65535] { R5487 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R5487 += 1 };
  accepting s12, s8, s9, s10, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [105, 105];
  accepting s1;
};
};
synchronised {  // Automata constraining P54
automaton P54_0 {
  init s0;
  s0 -> s1 [109, 109];
  accepting s1;
};
};
constraint R1 = R5403 && R2 = R5487 && R20 - R5487 = -1 && R21 = R5487 && R22 - R5487 = -1 && R23 = R5487 && R24 = 0 && R25 = 1 && R26 = 0 && R27 = 1 && R38 + R67 + R66 + -1*R5169 + -1*R5167 - R53 = 0 && R52 + R5168 + R5166 = 0 && R5402 = 0 && R5428 = 0 && R5429 = 0 && R5436 = 0 && R5437 = 0 && R5438 = 0 && R5439 = 0 && R5442 = 0 && R5443 = 0 && R5444 = 0 && R5445 = R5487 && R5446 = 0 && R5447 = R5487 && R5448 = 0 && R5449 = R5487 && R5450 = 0 && R5451 = R5487 && R5452 = 0 && R5453 = R5487 && R5454 = 0 && R5455 = R5487 && R5456 = 0 && R5457 = R5487 && R5458 = 0 && R5459 = R5487 && R5460 = 0 && R5461 = R5487 && R5462 = 0 && R5463 = R5487 && R5464 = 0 && R5465 = R5487 && R5466 = 0 && R5467 = R5487 && R5468 = 0 && R5469 = R5487 && R5470 = 0 && R5471 = R5487 && R5472 = 0 && R5473 = R5487 && R5474 = 0 && R5475 = R5487 && R5476 = 0 && R5477 = R5487 && R5478 = 0 && R5479 = R5487 && R5480 = 0 && R5481 = R5487 && R5482 = 0 && R5483 = R5487 && R5484 = 0 && R5485 = R5487 && R5486 = 0 && R8 < 1 && R11 < 1 && R12 < 1 && R40 + R69 + R68 < 1 && -1*R5169 + -1*R5167 - R53 < 1 && -1 < R5403 && 0 < R5487 && (R48 + R3895 + R3892 != 0 || ((R42 + R72 + R70 != 0 || R43 + R73 + R71 + -1*R5169 + -1*R5167 - R53 = 0 || R53 + R5169 + R5167 < 1) && (R42 + R72 + R70 = 0 || R53 + R5169 + R5167 < 1))) && (R48 + R3895 + R3892 != 0 || ((R46 + R3893 + R3890 != 0 || R47 + R3894 + R3891 + -1*R5169 + -1*R5167 - R53 = 0 || R53 + R5169 + R5167 < 1) && (R46 + R3893 + R3890 = 0 || R53 + R5169 + R5167 < 1))) && (R5388 != 0 || R5389 = R5403 || (R17 = 0 && R5403 = 0)) && (R5390 != 0 || R5391 = R5403 || (R17 = 0 && R5403 = 0)) && (R5392 != 0 || R5393 = R5403 || (R17 = 0 && R5403 = 0)) && (R5394 != 0 || R5395 = R5403 || (R17 = 0 && R5403 = 0)) && (R5396 != 0 || R5397 = R5403 || (R17 = 0 && R5403 = 0)) && (R5398 != 0 || R5399 = R5403 || (R17 = 0 && R5403 = 0)) && (R5400 != 0 || R5401 = R5403 || (R17 = 0 && R5403 = 0)) && (R5404 != 0 || R5403 = R5405 || (R17 = 0 && R5403 = 0)) && (R5406 != 0 || R5403 = R5407 || (R17 = 0 && R5403 = 0)) && (R18 = 0 || (R5426 = 0 && R5427 = 0)) && (R18 = 0 || (R5430 = 0 && R5431 = 0)) && (R18 = 0 || (R5432 = 0 && R5433 = 0)) && (R18 = 0 || (R5434 = 0 && R5435 = 0)) && (R18 = 0 || (R5440 = 0 && R5441 = 0)) && (R19 = 0 || (R5408 = 0 && R5409 = 0)) && (R19 = 0 || (R5410 = 0 && R5411 = 0)) && (R19 = 0 || (R5412 = 0 && R5413 = 0)) && (R19 = 0 || (R5414 = 0 && R5415 = 0)) && (R19 = 0 || (R5416 = 0 && R5417 = 0)) && (R19 = 0 || (R5418 = 0 && R5419 = 0)) && (R19 = 0 || (R5420 = 0 && R5421 = 0)) && (R19 = 0 || (R5422 = 0 && R5423 = 0)) && (R19 = 0 || (R5424 = 0 && R5425 = 0)) && (R48 + R3895 + R3892 = 0 || (R42 + R72 + R70 = 0 && R43 + R73 + R71 + -1*R5169 + -1*R5167 - R53 = 0)) && (R48 + R3895 + R3892 = 0 || (R46 + R3893 + R3890 = 0 && R47 + R3894 + R3891 + -1*R5169 + -1*R5167 - R53 = 0)) && (R58 + R5175 + R5172 = 0 || (R56 + R5173 + R5170 = 0 && R57 + R5174 + R5171 = 0)) && (R58 + R5175 + R5172 = 0 || (R62 + R5386 + R5384 = 0 && R63 + R5387 + R5385 = 0)) && (R5388 = 0 || (R17 = 0 && R5403 = 0)) && (R5390 = 0 || (R17 = 0 && R5403 = 0)) && (R5392 = 0 || (R17 = 0 && R5403 = 0)) && (R5394 = 0 || (R17 = 0 && R5403 = 0)) && (R5396 = 0 || (R17 = 0 && R5403 = 0)) && (R5398 = 0 || (R17 = 0 && R5403 = 0)) && (R5400 = 0 || (R17 = 0 && R5403 = 0)) && (R5404 = 0 || (R17 = 0 && R5403 = 0)) && (R5406 = 0 || (R17 = 0 && R5403 = 0));
// End of Parikh automata intersection problem
