// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R11522, R11523, R11524, R11525, R12, R17, R18, R19, R19158, R19159, R19160, R19161, R19162, R19163, R19164, R19165, R19166, R19167, R19168, R19169, R19170, R19171, R19172, R19173, R19174, R19175, R19176, R19177, R19178, R19179, R19180, R19181, R19182, R19183, R19184, R19185, R19186, R19187, R19188, R19189, R19190, R19191, R19192, R19193, R19194, R19195, R19196, R19197, R19198, R19199, R19200, R19201, R19202, R19203, R19204, R19205, R19206, R19207, R19208, R19209, R19210, R19211, R19212, R19213, R19214, R19215, R19216, R19217, R19218, R19219, R19220, R19221, R19222, R19223, R19224, R19225, R19226, R19227, R19228, R19229, R19230, R19231, R19232, R19233, R19234, R19235, R19236, R19237, R19238, R19239, R19240, R19241, R19242, R19243, R19244, R19245, R19246, R19247, R19248, R19249, R19250, R19251, R19252, R19253, R19254, R19255, R19256, R19257, R19258, R19259, R19260, R19261, R19262, R19263, R19264, R19265, R19266, R19267, R19268, R19269, R19270, R19271, R19272, R19273, R19274, R19275, R19276, R19277, R2, R20, R21, R22, R23, R24, R25, R26, R27, R3, R38, R4, R40, R42, R43, R46, R47, R48, R52, R53, R56, R57, R58, R62, R63, R66, R67, R68, R69, R8;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [73, 73];
  s0 -> s0 [74, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [73, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R2 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R11 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 72];
  s0 -> s0 [0, 65535] { R12 += 1 };
  s0 -> s2 [73, 73];
  s0 -> s1 [74, 65535];
  s1 -> s1 [0, 72];
  s1 -> s2 [73, 73];
  s1 -> s1 [74, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R21 += 1 };
  s0 -> s0 [0, 65535] { R20 += 1, R21 += 1 };
  s0 -> s2 [9, 13] { R21 += 1 };
  s0 -> s1 [14, 31] { R21 += 1 };
  s0 -> s2 [32, 32] { R21 += 1 };
  s0 -> s1 [33, 65535] { R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R21 += 1 };
  s2 -> s1 [0, 65535] { R21 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R22 += 1, R23 += 1 };
  s1 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R25 += 1 };
  s0 -> s0 [0, 65535] { R24 += 1, R25 += 1 };
  s0 -> s2 [9, 13] { R25 += 1 };
  s0 -> s1 [14, 31] { R25 += 1 };
  s0 -> s2 [32, 32] { R25 += 1 };
  s0 -> s1 [33, 65535] { R25 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R25 += 1 };
  s2 -> s1 [0, 65535] { R25 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R26 += 1, R27 += 1 };
  s0 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R19199 += 1, R19 += 1 };
  s0 -> s0 [0, 65535] { R19198 += 1, R19199 += 1 };
  s1 -> s1 [0, 65535] { R19199 += 1, R19 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 72] { R19201 += 1 };
  s0 -> s0 [0, 65535] { R19200 += 1, R19201 += 1 };
  s0 -> s2 [73, 73] { R19201 += 1 };
  s0 -> s3 [73, 73] { R19201 += 1 };
  s0 -> s1 [78, 65535] { R19201 += 1 };
  s1 -> s1 [0, 72] { R19201 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19201 += 1 };
  s1 -> s3 [73, 73] { R19201 += 1 };
  s1 -> s1 [78, 65535] { R19201 += 1 };
  s2 -> s2 [0, 73] { R19201 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [78, 65535] { R19201 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 72] { R19203 += 1, R38 += 1 };
  s0 -> s0 [0, 65535] { R19202 += 1, R19203 += 1 };
  s0 -> s2 [73, 73] { R19203 += 1, R38 += 1 };
  s0 -> s3 [73, 73] { R19203 += 1, R38 += 1 };
  s0 -> s1 [74, 65535] { R19203 += 1, R38 += 1 };
  s1 -> s1 [0, 72] { R19203 += 1, R38 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19203 += 1, R38 += 1 };
  s1 -> s3 [73, 73] { R19203 += 1, R38 += 1 };
  s1 -> s1 [74, 65535] { R19203 += 1, R38 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R19203 += 1, R38 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 72] { R19205 += 1, R40 += 1 };
  s0 -> s0 [0, 65535] { R19204 += 1, R19205 += 1 };
  s0 -> s2 [73, 73] { R19205 += 1, R40 += 1 };
  s0 -> s3 [73, 73] { R19205 += 1, R40 += 1 };
  s0 -> s1 [74, 65535] { R19205 += 1, R40 += 1 };
  s1 -> s1 [0, 72] { R19205 += 1, R40 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19205 += 1, R40 += 1 };
  s1 -> s3 [73, 73] { R19205 += 1, R40 += 1 };
  s1 -> s1 [74, 65535] { R19205 += 1, R40 += 1 };
  s2 -> s2 [0, 65535] { R19205 += 1, R40 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 72] { R19207 += 1, R42 += 1, R43 += 1 };
  s0 -> s0 [0, 65535] { R19206 += 1, R19207 += 1 };
  s0 -> s2 [73, 73] { R19207 += 1, R42 += 1, R43 += 1 };
  s0 -> s3 [73, 73] { R19207 += 1, R42 += 1, R43 += 1 };
  s0 -> s1 [74, 65535] { R19207 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 72] { R19207 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19207 += 1, R42 += 1, R43 += 1 };
  s1 -> s3 [73, 73] { R19207 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [74, 65535] { R19207 += 1, R42 += 1, R43 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R19207 += 1, R42 += 1, R43 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 72] { R19209 += 1, R46 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R19208 += 1, R19209 += 1 };
  s0 -> s2 [73, 73] { R19209 += 1, R46 += 1, R47 += 1 };
  s0 -> s3 [73, 73] { R19209 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [74, 65535] { R19209 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 72] { R19209 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19209 += 1, R46 += 1, R47 += 1 };
  s1 -> s3 [73, 73] { R19209 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [74, 65535] { R19209 += 1, R46 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R19209 += 1, R46 += 1, R47 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 72] { R19211 += 1, R52 += 1, R53 += 1 };
  s0 -> s0 [0, 65535] { R19210 += 1, R19211 += 1 };
  s0 -> s2 [73, 73] { R19211 += 1, R52 += 1, R53 += 1 };
  s0 -> s3 [73, 73] { R19211 += 1, R52 += 1, R53 += 1 };
  s0 -> s1 [74, 65535] { R19211 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 72] { R19211 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19211 += 1, R52 += 1, R53 += 1 };
  s1 -> s3 [73, 73] { R19211 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [74, 65535] { R19211 += 1, R52 += 1, R53 += 1 };
  s2 -> s2 [0, 65535] { R19211 += 1, R52 += 1, R53 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 72] { R19213 += 1, R56 += 1, R57 += 1 };
  s0 -> s0 [0, 65535] { R19212 += 1, R19213 += 1 };
  s0 -> s2 [73, 73] { R19213 += 1, R56 += 1, R57 += 1 };
  s0 -> s3 [73, 73] { R19213 += 1, R56 += 1, R57 += 1 };
  s0 -> s1 [74, 65535] { R19213 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 72] { R19213 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19213 += 1, R56 += 1, R57 += 1 };
  s1 -> s3 [73, 73] { R19213 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [74, 65535] { R19213 += 1, R56 += 1, R57 += 1 };
  s2 -> s2 [0, 65535] { R19213 += 1, R56 += 1, R57 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 72] { R19215 += 1, R62 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R19214 += 1, R19215 += 1 };
  s0 -> s2 [73, 73] { R19215 += 1, R62 += 1, R63 += 1 };
  s0 -> s3 [73, 73] { R19215 += 1, R62 += 1, R63 += 1 };
  s0 -> s1 [74, 65535] { R19215 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 72] { R19215 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19215 += 1, R62 += 1, R63 += 1 };
  s1 -> s3 [73, 73] { R19215 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [74, 65535] { R19215 += 1, R62 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R19215 += 1, R62 += 1, R63 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 72] { R19235 += 1 };
  s0 -> s0 [0, 65535] { R19234 += 1, R19235 += 1 };
  s0 -> s2 [73, 73] { R19235 += 1 };
  s0 -> s1 [74, 65535] { R19235 += 1 };
  s1 -> s1 [0, 72] { R19235 += 1 };
  s1 -> s2 [73, 73] { R19235 += 1 };
  s1 -> s1 [74, 65535] { R19235 += 1 };
  s2 -> s2 [0, 65535] { R19235 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R19237 += 1, R1 += 1 };
  s0 -> s0 [0, 65535] { R19236 += 1, R19237 += 1 };
  s1 -> s1 [0, 65535] { R19237 += 1, R1 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 72] { R19239 += 1 };
  s0 -> s2 [0, 65535] { R19239 += 1, R8 += 1 };
  s0 -> s0 [0, 65535] { R19238 += 1, R19239 += 1 };
  s0 -> s3 [73, 73] { R19239 += 1 };
  s0 -> s1 [74, 65535] { R19239 += 1 };
  s1 -> s1 [0, 72] { R19239 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [73, 73] { R19239 += 1 };
  s1 -> s1 [74, 65535] { R19239 += 1 };
  s2 -> s1 [0, 72] { R19239 += 1 };
  s2 -> s2 [0, 65535] { R19239 += 1, R8 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [73, 73] { R19239 += 1 };
  s2 -> s1 [74, 65535] { R19239 += 1 };
  s3 -> s3 [0, 65535] { R19239 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 72] { R19241 += 1, R19179 += 1 };
  s0 -> s0 [0, 65535] { R19240 += 1, R19241 += 1 };
  s0 -> s2 [0, 65535] { R19241 += 1, R19178 += 1, R19179 += 1 };
  s0 -> s1 [74, 65535] { R19241 += 1, R19179 += 1 };
  s1 -> s1 [0, 72] { R19241 += 1, R19179 += 1 };
  s1 -> s1 [0, 65535] { R19241 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [74, 65535] { R19241 += 1, R19179 += 1 };
  s2 -> s1 [0, 72] { R19241 += 1, R19179 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R19241 += 1, R19178 += 1, R19179 += 1 };
  s2 -> s1 [74, 65535] { R19241 += 1, R19179 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R19243 += 1, R19181 += 1, R17 += 1 };
  s0 -> s2 [0, 65535] { R19243 += 1, R19180 += 1, R19181 += 1 };
  s0 -> s0 [0, 65535] { R19242 += 1, R19243 += 1 };
  s1 -> s4 [0, 65535] { R19243 += 1 };
  s1 -> s1 [0, 65535] { R19243 += 1, R19181 += 1, R17 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R19243 += 1, R19181 += 1, R17 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R19243 += 1, R19180 += 1, R19181 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19243 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 73] { R19245 += 1, R19183 += 1 };
  s0 -> s2 [0, 65535] { R19245 += 1, R19182 += 1, R19183 += 1 };
  s0 -> s0 [0, 65535] { R19244 += 1, R19245 += 1 };
  s0 -> s1 [77, 65535] { R19245 += 1, R19183 += 1 };
  s1 -> s1 [0, 73] { R19245 += 1, R19183 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R19245 += 1 };
  s1 -> s1 [77, 65535] { R19245 += 1, R19183 += 1 };
  s2 -> s1 [0, 73] { R19245 += 1, R19183 += 1 };
  s2 -> s2 [0, 65535] { R19245 += 1, R19182 += 1, R19183 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [77, 65535] { R19245 += 1, R19183 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R19247 += 1, R19184 += 1, R19185 += 1 };
  s0 -> s0 [0, 65535] { R19246 += 1, R19247 += 1 };
  s0 -> s2 [0, 65535] { R19247 += 1, R19185 += 1, R67 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R19247 += 1, R19184 += 1, R19185 += 1 };
  s1 -> s2 [0, 65535] { R19247 += 1, R19185 += 1, R67 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R19247 += 1 };
  s2 -> s2 [0, 65535] { R19247 += 1, R19185 += 1, R67 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19247 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 76] { R19249 += 1, R19187 += 1 };
  s0 -> s0 [0, 65535] { R19248 += 1, R19249 += 1 };
  s0 -> s2 [0, 65535] { R19249 += 1, R19186 += 1, R19187 += 1 };
  s0 -> s3 [0, 65535] { R19249 += 1, R19187 += 1, R69 += 1 };
  s0 -> s1 [78, 65535] { R19249 += 1, R19187 += 1 };
  s1 -> s1 [0, 76] { R19249 += 1, R19187 += 1 };
  s1 -> s1 [0, 65535] { R19249 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [78, 65535] { R19249 += 1, R19187 += 1 };
  s2 -> s1 [0, 76] { R19249 += 1, R19187 += 1 };
  s2 -> s2 [0, 65535] { R19249 += 1, R19186 += 1, R19187 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R19249 += 1, R19187 += 1, R69 += 1 };
  s2 -> s1 [78, 65535] { R19249 += 1, R19187 += 1 };
  s3 -> s1 [0, 76] { R19249 += 1, R19187 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R19249 += 1, R19187 += 1, R69 += 1 };
  s3 -> s5 [0, 65535] { R19249 += 1 };
  s3 -> s1 [78, 65535] { R19249 += 1, R19187 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R19249 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 76] { R19251 += 1, R19189 += 1, R11525 += 1 };
  s0 -> s1 [0, 65535] { R19251 += 1, R19189 += 1 };
  s0 -> s2 [0, 65535] { R19251 += 1, R19188 += 1, R19189 += 1 };
  s0 -> s0 [0, 65535] { R19250 += 1, R19251 += 1 };
  s0 -> s1 [78, 65535] { R19251 += 1, R19189 += 1, R11525 += 1 };
  s1 -> s1 [0, 76] { R19251 += 1, R19189 += 1, R11525 += 1 };
  s1 -> s4 [0, 65535] { R19251 += 1 };
  s1 -> s1 [0, 65535] { R19251 += 1, R19189 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [78, 65535] { R19251 += 1, R19189 += 1, R11525 += 1 };
  s2 -> s1 [0, 76] { R19251 += 1, R19189 += 1, R11525 += 1 };
  s2 -> s1 [0, 65535] { R19251 += 1, R19189 += 1 };
  s2 -> s2 [0, 65535] { R19251 += 1, R19188 += 1, R19189 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [78, 65535] { R19251 += 1, R19189 += 1, R11525 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19251 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R19253 += 1, R19191 += 1 };
  s0 -> s0 [0, 65535] { R19252 += 1, R19253 += 1 };
  s0 -> s2 [0, 65535] { R19253 += 1, R19190 += 1, R19191 += 1 };
  s1 -> s4 [0, 65535] { R19253 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R19253 += 1, R19191 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R19253 += 1, R19191 += 1 };
  s2 -> s2 [0, 65535] { R19253 += 1, R19190 += 1, R19191 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19253 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 77] { R19255 += 1, R19193 += 1, R19167 += 1 };
  s0 -> s2 [0, 65535] { R19255 += 1, R19192 += 1, R19193 += 1 };
  s0 -> s0 [0, 65535] { R19254 += 1, R19255 += 1 };
  s0 -> s1 [0, 65535] { R19255 += 1, R19193 += 1 };
  s0 -> s1 [90, 65535] { R19255 += 1, R19193 += 1, R19167 += 1 };
  s1 -> s1 [0, 77] { R19255 += 1, R19193 += 1, R19167 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R19255 += 1 };
  s1 -> s1 [0, 65535] { R19255 += 1, R19193 += 1 };
  s1 -> s1 [90, 65535] { R19255 += 1, R19193 += 1, R19167 += 1 };
  s2 -> s1 [0, 77] { R19255 += 1, R19193 += 1, R19167 += 1 };
  s2 -> s2 [0, 65535] { R19255 += 1, R19192 += 1, R19193 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R19255 += 1, R19193 += 1 };
  s2 -> s1 [90, 65535] { R19255 += 1, R19193 += 1, R19167 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19255 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s0 [0, 65535] { R19256 += 1, R19257 += 1 };
  s0 -> s1 [0, 65535] { R19257 += 1, R19194 += 1, R19195 += 1 };
  s0 -> s2 [0, 65535] { R19257 += 1, R19195 += 1, R19172 += 1, R19173 += 1 };
  s0 -> s3 [0, 65535] { R19257 += 1, R19195 += 1, R19171 += 1, R19172 += 1 };
  s1 -> s1 [0, 65535] { R19257 += 1, R19194 += 1, R19195 += 1 };
  s1 -> s2 [0, 65535] { R19257 += 1, R19195 += 1, R19172 += 1, R19173 += 1 };
  s1 -> s3 [0, 65535] { R19257 += 1, R19195 += 1, R19171 += 1, R19172 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R19257 += 1, R19195 += 1 };
  s2 -> s2 [0, 65535] { R19257 += 1, R19195 += 1, R19172 += 1, R19173 += 1 };
  s2 -> s4 [0, 65535] { R19257 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R19257 += 1, R19195 += 1, R19172 += 1, R19173 += 1 };
  s3 -> s3 [0, 65535] { R19257 += 1, R19195 += 1, R19171 += 1, R19172 += 1 };
  s3 -> s4 [0, 65535] { R19257 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R19257 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R19257 += 1, R19195 += 1 };
  s6 -> s4 [0, 65535] { R19257 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 76] { R19259 += 1, R19197 += 1, R19177 += 1 };
  s0 -> s2 [0, 65535] { R19259 += 1, R19196 += 1, R19197 += 1 };
  s0 -> s3 [0, 65535] { R19259 += 1, R19197 += 1, R19176 += 1, R19177 += 1 };
  s0 -> s0 [0, 65535] { R19258 += 1, R19259 += 1 };
  s0 -> s4 [77, 77] { R19259 += 1, R19197 += 1, R19177 += 1 };
  s0 -> s5 [77, 77] { R19259 += 1, R19197 += 1, R19177 += 1 };
  s0 -> s1 [91, 65535] { R19259 += 1, R19197 += 1, R19177 += 1 };
  s1 -> s1 [0, 76] { R19259 += 1, R19197 += 1, R19177 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R19259 += 1 };
  s1 -> s1 [0, 65535] { R19259 += 1, R19197 += 1 };
  s1 -> s4 [77, 77] { R19259 += 1, R19197 += 1, R19177 += 1 };
  s1 -> s5 [77, 77] { R19259 += 1, R19197 += 1, R19177 += 1 };
  s1 -> s1 [91, 65535] { R19259 += 1, R19197 += 1, R19177 += 1 };
  s2 -> s1 [0, 76] { R19259 += 1, R19197 += 1, R19177 += 1 };
  s2 -> s2 [0, 65535] { R19259 += 1, R19196 += 1, R19197 += 1 };
  s2 -> s3 [0, 65535] { R19259 += 1, R19197 += 1, R19176 += 1, R19177 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [77, 77] { R19259 += 1, R19197 += 1, R19177 += 1 };
  s2 -> s5 [77, 77] { R19259 += 1, R19197 += 1, R19177 += 1 };
  s2 -> s1 [91, 65535] { R19259 += 1, R19197 += 1, R19177 += 1 };
  s3 -> s1 [0, 76] { R19259 += 1, R19197 += 1, R19177 += 1 };
  s3 -> s3 [0, 65535] { R19259 += 1, R19197 += 1, R19176 += 1, R19177 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R19259 += 1 };
  s3 -> s4 [77, 77] { R19259 += 1, R19197 += 1, R19177 += 1 };
  s3 -> s5 [77, 77] { R19259 += 1, R19197 += 1, R19177 += 1 };
  s3 -> s1 [91, 65535] { R19259 += 1, R19197 += 1, R19177 += 1 };
  s4 -> s4 [0, 65535] { R19259 += 1, R19197 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R19259 += 1 };
  s5 -> s5 [0, 77] { R19259 += 1, R19197 += 1, R19177 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R19259 += 1 };
  s5 -> s5 [0, 65535] { R19259 += 1, R19197 += 1 };
  s5 -> s5 [91, 65535] { R19259 += 1, R19197 += 1, R19177 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R19259 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R19260 += 1, R19261 += 1 };
  s0 -> s1 [0, 65535] { R19261 += 1, R19217 += 1, R18 += 1 };
  s0 -> s2 [0, 65535] { R19261 += 1, R19216 += 1, R19217 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R19261 += 1 };
  s1 -> s1 [0, 65535] { R19261 += 1, R19217 += 1, R18 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R19261 += 1, R19217 += 1, R18 += 1 };
  s2 -> s2 [0, 65535] { R19261 += 1, R19216 += 1, R19217 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19261 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 72] { R19263 += 1, R19219 += 1 };
  s0 -> s0 [0, 65535] { R19262 += 1, R19263 += 1 };
  s0 -> s2 [0, 65535] { R19263 += 1, R19218 += 1, R19219 += 1 };
  s0 -> s3 [73, 73] { R19263 += 1, R19219 += 1 };
  s0 -> s4 [73, 73] { R19263 += 1, R19219 += 1 };
  s0 -> s5 [77, 77] { R19263 += 1, R19219 += 1 };
  s0 -> s1 [78, 65535] { R19263 += 1, R19219 += 1 };
  s1 -> s1 [0, 72] { R19263 += 1, R19219 += 1 };
  s1 -> s3 [73, 73] { R19263 += 1, R19219 += 1 };
  s1 -> s4 [73, 73] { R19263 += 1, R19219 += 1 };
  s1 -> s5 [77, 77] { R19263 += 1, R19219 += 1 };
  s1 -> s1 [78, 65535] { R19263 += 1, R19219 += 1 };
  s2 -> s1 [0, 72] { R19263 += 1, R19219 += 1 };
  s2 -> s2 [0, 65535] { R19263 += 1, R19218 += 1, R19219 += 1 };
  s2 -> s3 [73, 73] { R19263 += 1, R19219 += 1 };
  s2 -> s4 [73, 73] { R19263 += 1, R19219 += 1 };
  s2 -> s5 [77, 77] { R19263 += 1, R19219 += 1 };
  s2 -> s1 [78, 65535] { R19263 += 1, R19219 += 1 };
  s4 -> s4 [0, 73] { R19263 += 1, R19219 += 1 };
  s4 -> s7 [77, 77] { R19263 += 1, R19219 += 1 };
  s4 -> s4 [78, 65535] { R19263 += 1, R19219 += 1 };
  s5 -> s5 [0, 72] { R19263 += 1, R19219 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R19263 += 1 };
  s5 -> s7 [73, 73] { R19263 += 1, R19219 += 1 };
  s5 -> s8 [73, 73] { R19263 += 1, R19219 += 1 };
  s5 -> s5 [77, 65535] { R19263 += 1, R19219 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 73] { R19263 += 1, R19219 += 1 };
  s7 -> s7 [0, 65535] { R19263 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [77, 65535] { R19263 += 1, R19219 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R19263 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 72] { R19265 += 1, R19221 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R19264 += 1, R19265 += 1 };
  s0 -> s2 [0, 65535] { R19265 += 1, R19220 += 1, R19221 += 1 };
  s0 -> s3 [73, 73] { R19265 += 1, R19221 += 1, R66 += 1 };
  s0 -> s4 [73, 73] { R19265 += 1, R19221 += 1, R66 += 1 };
  s0 -> s1 [74, 65535] { R19265 += 1, R19221 += 1, R66 += 1 };
  s1 -> s1 [0, 72] { R19265 += 1, R19221 += 1, R66 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R19265 += 1 };
  s1 -> s3 [73, 73] { R19265 += 1, R19221 += 1, R66 += 1 };
  s1 -> s4 [73, 73] { R19265 += 1, R19221 += 1, R66 += 1 };
  s1 -> s1 [74, 65535] { R19265 += 1, R19221 += 1, R66 += 1 };
  s2 -> s1 [0, 72] { R19265 += 1, R19221 += 1, R66 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R19265 += 1, R19220 += 1, R19221 += 1 };
  s2 -> s3 [73, 73] { R19265 += 1, R19221 += 1, R66 += 1 };
  s2 -> s4 [73, 73] { R19265 += 1, R19221 += 1, R66 += 1 };
  s2 -> s1 [74, 65535] { R19265 += 1, R19221 += 1, R66 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R19265 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R19265 += 1, R19221 += 1, R66 += 1 };
  s4 -> s6 [0, 65535] { R19265 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R19265 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 72] { R19267 += 1, R19223 += 1, R68 += 1 };
  s0 -> s2 [0, 65535] { R19267 += 1, R19222 += 1, R19223 += 1 };
  s0 -> s0 [0, 65535] { R19266 += 1, R19267 += 1 };
  s0 -> s3 [73, 73] { R19267 += 1, R19223 += 1, R68 += 1 };
  s0 -> s4 [73, 73] { R19267 += 1, R19223 += 1, R68 += 1 };
  s0 -> s1 [74, 65535] { R19267 += 1, R19223 += 1, R68 += 1 };
  s1 -> s1 [0, 72] { R19267 += 1, R19223 += 1, R68 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R19267 += 1 };
  s1 -> s3 [73, 73] { R19267 += 1, R19223 += 1, R68 += 1 };
  s1 -> s4 [73, 73] { R19267 += 1, R19223 += 1, R68 += 1 };
  s1 -> s1 [74, 65535] { R19267 += 1, R19223 += 1, R68 += 1 };
  s2 -> s1 [0, 72] { R19267 += 1, R19223 += 1, R68 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R19267 += 1, R19222 += 1, R19223 += 1 };
  s2 -> s3 [73, 73] { R19267 += 1, R19223 += 1, R68 += 1 };
  s2 -> s4 [73, 73] { R19267 += 1, R19223 += 1, R68 += 1 };
  s2 -> s1 [74, 65535] { R19267 += 1, R19223 += 1, R68 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R19267 += 1, R19223 += 1, R68 += 1 };
  s3 -> s6 [0, 65535] { R19267 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R19267 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R19267 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 72] { R19269 += 1, R19225 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s2 [0, 72] { R19269 += 1, R19225 += 1, R11523 += 1 };
  s0 -> s3 [0, 65535] { R19269 += 1, R19224 += 1, R19225 += 1 };
  s0 -> s0 [0, 65535] { R19268 += 1, R19269 += 1 };
  s0 -> s4 [73, 73] { R19269 += 1, R19225 += 1, R11523 += 1 };
  s0 -> s5 [73, 73] { R19269 += 1, R19225 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s6 [73, 73] { R19269 += 1, R19225 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s7 [73, 73] { R19269 += 1, R19225 += 1, R11523 += 1 };
  s0 -> s2 [74, 76] { R19269 += 1, R19225 += 1, R11523 += 1 };
  s0 -> s1 [74, 65535] { R19269 += 1, R19225 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s2 [78, 65535] { R19269 += 1, R19225 += 1, R11523 += 1 };
  s1 -> s1 [0, 72] { R19269 += 1, R19225 += 1, R11522 += 1, R11523 += 1 };
  s1 -> s2 [0, 72] { R19269 += 1, R19225 += 1, R11523 += 1 };
  s1 -> s4 [73, 73] { R19269 += 1, R19225 += 1, R11523 += 1 };
  s1 -> s5 [73, 73] { R19269 += 1, R19225 += 1, R11522 += 1, R11523 += 1 };
  s1 -> s6 [73, 73] { R19269 += 1, R19225 += 1, R11522 += 1, R11523 += 1 };
  s1 -> s7 [73, 73] { R19269 += 1, R19225 += 1, R11523 += 1 };
  s1 -> s2 [74, 76] { R19269 += 1, R19225 += 1, R11523 += 1 };
  s1 -> s1 [74, 65535] { R19269 += 1, R19225 += 1, R11522 += 1, R11523 += 1 };
  s1 -> s2 [78, 65535] { R19269 += 1, R19225 += 1, R11523 += 1 };
  s2 -> s2 [0, 72] { R19269 += 1, R19225 += 1, R11523 += 1 };
  s2 -> s2 [0, 65535] { R19269 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [73, 73] { R19269 += 1, R19225 += 1 };
  s2 -> s7 [73, 73] { R19269 += 1, R19225 += 1 };
  s2 -> s2 [74, 76] { R19269 += 1, R19225 += 1, R11523 += 1 };
  s2 -> s2 [74, 65535] { R19269 += 1, R19225 += 1 };
  s2 -> s2 [78, 65535] { R19269 += 1, R19225 += 1, R11523 += 1 };
  s3 -> s1 [0, 72] { R19269 += 1, R19225 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s2 [0, 72] { R19269 += 1, R19225 += 1, R11523 += 1 };
  s3 -> s3 [0, 65535] { R19269 += 1, R19224 += 1, R19225 += 1 };
  s3 -> s4 [73, 73] { R19269 += 1, R19225 += 1, R11523 += 1 };
  s3 -> s5 [73, 73] { R19269 += 1, R19225 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s6 [73, 73] { R19269 += 1, R19225 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s7 [73, 73] { R19269 += 1, R19225 += 1, R11523 += 1 };
  s3 -> s2 [74, 76] { R19269 += 1, R19225 += 1, R11523 += 1 };
  s3 -> s1 [74, 65535] { R19269 += 1, R19225 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s2 [78, 65535] { R19269 += 1, R19225 += 1, R11523 += 1 };
  s4 -> s4 [0, 76] { R19269 += 1, R19225 += 1, R11523 += 1 };
  s4 -> s9 [0, 65535] { R19269 += 1 };
  s4 -> s4 [0, 65535] { R19269 += 1, R19225 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [78, 65535] { R19269 += 1, R19225 += 1, R11523 += 1 };
  s5 -> s4 [0, 76] { R19269 += 1, R19225 += 1, R11523 += 1 };
  s5 -> s5 [0, 65535] { R19269 += 1, R19225 += 1, R11522 += 1, R11523 += 1 };
  s5 -> s4 [78, 65535] { R19269 += 1, R19225 += 1, R11523 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R19269 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R19269 += 1 };
  s9 -> s8 [0, 65535];
  accepting s4, s8, s2, s9, s7;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 72] { R19271 += 1, R19227 += 1, R19159 += 1, R19160 += 1 };
  s0 -> s2 [0, 72] { R19271 += 1, R19227 += 1, R19158 += 1, R19159 += 1 };
  s0 -> s0 [0, 65535] { R19270 += 1, R19271 += 1 };
  s0 -> s3 [0, 65535] { R19271 += 1, R19226 += 1, R19227 += 1 };
  s0 -> s4 [73, 73] { R19271 += 1, R19227 += 1, R19159 += 1, R19160 += 1 };
  s0 -> s5 [73, 73] { R19271 += 1, R19227 += 1, R19158 += 1, R19159 += 1 };
  s0 -> s6 [73, 73] { R19271 += 1, R19227 += 1, R19158 += 1, R19159 += 1 };
  s0 -> s7 [73, 73] { R19271 += 1, R19227 += 1, R19159 += 1, R19160 += 1 };
  s0 -> s1 [74, 65535] { R19271 += 1, R19227 += 1, R19159 += 1, R19160 += 1 };
  s0 -> s2 [74, 65535] { R19271 += 1, R19227 += 1, R19158 += 1, R19159 += 1 };
  s1 -> s1 [0, 72] { R19271 += 1, R19227 += 1, R19159 += 1, R19160 += 1 };
  s1 -> s11 [0, 72] { R19271 += 1, R19227 += 1 };
  s1 -> s4 [73, 73] { R19271 += 1, R19227 += 1, R19159 += 1, R19160 += 1 };
  s1 -> s12 [73, 73] { R19271 += 1, R19227 += 1 };
  s1 -> s8 [73, 73] { R19271 += 1, R19227 += 1 };
  s1 -> s7 [73, 73] { R19271 += 1, R19227 += 1, R19159 += 1, R19160 += 1 };
  s1 -> s1 [74, 65535] { R19271 += 1, R19227 += 1, R19159 += 1, R19160 += 1 };
  s1 -> s11 [74, 65535] { R19271 += 1, R19227 += 1 };
  s2 -> s1 [0, 72] { R19271 += 1, R19227 += 1, R19159 += 1, R19160 += 1 };
  s2 -> s2 [0, 72] { R19271 += 1, R19227 += 1, R19158 += 1, R19159 += 1 };
  s2 -> s4 [73, 73] { R19271 += 1, R19227 += 1, R19159 += 1, R19160 += 1 };
  s2 -> s5 [73, 73] { R19271 += 1, R19227 += 1, R19158 += 1, R19159 += 1 };
  s2 -> s6 [73, 73] { R19271 += 1, R19227 += 1, R19158 += 1, R19159 += 1 };
  s2 -> s7 [73, 73] { R19271 += 1, R19227 += 1, R19159 += 1, R19160 += 1 };
  s2 -> s1 [74, 65535] { R19271 += 1, R19227 += 1, R19159 += 1, R19160 += 1 };
  s2 -> s2 [74, 65535] { R19271 += 1, R19227 += 1, R19158 += 1, R19159 += 1 };
  s3 -> s1 [0, 72] { R19271 += 1, R19227 += 1, R19159 += 1, R19160 += 1 };
  s3 -> s2 [0, 72] { R19271 += 1, R19227 += 1, R19158 += 1, R19159 += 1 };
  s3 -> s3 [0, 65535] { R19271 += 1, R19226 += 1, R19227 += 1 };
  s3 -> s4 [73, 73] { R19271 += 1, R19227 += 1, R19159 += 1, R19160 += 1 };
  s3 -> s5 [73, 73] { R19271 += 1, R19227 += 1, R19158 += 1, R19159 += 1 };
  s3 -> s6 [73, 73] { R19271 += 1, R19227 += 1, R19158 += 1, R19159 += 1 };
  s3 -> s7 [73, 73] { R19271 += 1, R19227 += 1, R19159 += 1, R19160 += 1 };
  s3 -> s1 [74, 65535] { R19271 += 1, R19227 += 1, R19159 += 1, R19160 += 1 };
  s3 -> s2 [74, 65535] { R19271 += 1, R19227 += 1, R19158 += 1, R19159 += 1 };
  s6 -> s6 [0, 65535] { R19271 += 1, R19227 += 1, R19158 += 1, R19159 += 1 };
  s6 -> s7 [0, 65535] { R19271 += 1, R19227 += 1, R19159 += 1, R19160 += 1 };
  s7 -> s8 [0, 65535] { R19271 += 1, R19227 += 1 };
  s7 -> s7 [0, 65535] { R19271 += 1, R19227 += 1, R19159 += 1, R19160 += 1 };
  s8 -> s8 [0, 65535] { R19271 += 1, R19227 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [0, 65535] { R19271 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R19271 += 1 };
  s11 -> s11 [0, 72] { R19271 += 1, R19227 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R19271 += 1 };
  s11 -> s12 [73, 73] { R19271 += 1, R19227 += 1 };
  s11 -> s8 [73, 73] { R19271 += 1, R19227 += 1 };
  s11 -> s11 [74, 65535] { R19271 += 1, R19227 += 1 };
  s12 -> s12 [0, 65535] { R19271 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 72] { R19273 += 1, R19229 += 1, R19164 += 1, R19165 += 1 };
  s0 -> s2 [0, 72] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s0 -> s3 [0, 65535] { R19273 += 1, R19228 += 1, R19229 += 1 };
  s0 -> s0 [0, 65535] { R19272 += 1, R19273 += 1 };
  s0 -> s4 [73, 73] { R19273 += 1, R19229 += 1, R19164 += 1, R19165 += 1 };
  s0 -> s5 [73, 73] { R19273 += 1, R19229 += 1, R19164 += 1, R19165 += 1 };
  s0 -> s6 [73, 73] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s0 -> s7 [73, 73] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s0 -> s2 [74, 77] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s0 -> s1 [74, 65535] { R19273 += 1, R19229 += 1, R19164 += 1, R19165 += 1 };
  s0 -> s8 [90, 90] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s0 -> s2 [91, 65535] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s1 -> s1 [0, 72] { R19273 += 1, R19229 += 1, R19164 += 1, R19165 += 1 };
  s1 -> s2 [0, 72] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s1 -> s4 [73, 73] { R19273 += 1, R19229 += 1, R19164 += 1, R19165 += 1 };
  s1 -> s5 [73, 73] { R19273 += 1, R19229 += 1, R19164 += 1, R19165 += 1 };
  s1 -> s6 [73, 73] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s1 -> s7 [73, 73] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s1 -> s2 [74, 77] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s1 -> s1 [74, 65535] { R19273 += 1, R19229 += 1, R19164 += 1, R19165 += 1 };
  s1 -> s8 [90, 90] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s1 -> s2 [91, 65535] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s2 -> s2 [0, 72] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s2 -> s6 [73, 73] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s2 -> s7 [73, 73] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s2 -> s2 [74, 77] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s2 -> s8 [90, 90] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s2 -> s2 [91, 65535] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s3 -> s1 [0, 72] { R19273 += 1, R19229 += 1, R19164 += 1, R19165 += 1 };
  s3 -> s2 [0, 72] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s3 -> s3 [0, 65535] { R19273 += 1, R19228 += 1, R19229 += 1 };
  s3 -> s4 [73, 73] { R19273 += 1, R19229 += 1, R19164 += 1, R19165 += 1 };
  s3 -> s5 [73, 73] { R19273 += 1, R19229 += 1, R19164 += 1, R19165 += 1 };
  s3 -> s6 [73, 73] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s3 -> s7 [73, 73] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s3 -> s2 [74, 77] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s3 -> s1 [74, 65535] { R19273 += 1, R19229 += 1, R19164 += 1, R19165 += 1 };
  s3 -> s8 [90, 90] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s3 -> s2 [91, 65535] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s5 -> s7 [0, 77] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s5 -> s5 [0, 65535] { R19273 += 1, R19229 += 1, R19164 += 1, R19165 += 1 };
  s5 -> s10 [90, 90] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s5 -> s7 [91, 65535] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s7 -> s7 [0, 77] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s7 -> s10 [90, 90] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s7 -> s7 [91, 65535] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s8 -> s8 [0, 72] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R19273 += 1 };
  s8 -> s10 [73, 73] { R19273 += 1, R19229 += 1 };
  s8 -> s11 [73, 73] { R19273 += 1, R19229 += 1 };
  s8 -> s8 [74, 77] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s8 -> s8 [74, 65535] { R19273 += 1, R19229 += 1 };
  s8 -> s8 [90, 65535] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 77] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s10 -> s10 [0, 65535] { R19273 += 1, R19229 += 1 };
  s10 -> s12 [0, 65535] { R19273 += 1 };
  s10 -> s9 [0, 65535];
  s10 -> s10 [90, 65535] { R19273 += 1, R19229 += 1, R19165 += 1 };
  s11 -> s11 [0, 65535] { R19273 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R19273 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 72] { R19275 += 1, R19231 += 1, R19168 += 1, R19169 += 1 };
  s0 -> s2 [0, 65535] { R19275 += 1, R19230 += 1, R19231 += 1 };
  s0 -> s0 [0, 65535] { R19274 += 1, R19275 += 1 };
  s0 -> s3 [73, 73] { R19275 += 1, R19231 += 1, R19168 += 1, R19169 += 1 };
  s0 -> s4 [73, 73] { R19275 += 1, R19231 += 1, R19168 += 1, R19169 += 1 };
  s0 -> s1 [74, 65535] { R19275 += 1, R19231 += 1, R19168 += 1, R19169 += 1 };
  s1 -> s1 [0, 72] { R19275 += 1, R19231 += 1, R19168 += 1, R19169 += 1 };
  s1 -> s1 [0, 65535] { R19275 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [73, 73] { R19275 += 1, R19231 += 1, R19168 += 1, R19169 += 1 };
  s1 -> s4 [73, 73] { R19275 += 1, R19231 += 1, R19168 += 1, R19169 += 1 };
  s1 -> s1 [74, 65535] { R19275 += 1, R19231 += 1, R19168 += 1, R19169 += 1 };
  s2 -> s1 [0, 72] { R19275 += 1, R19231 += 1, R19168 += 1, R19169 += 1 };
  s2 -> s2 [0, 65535] { R19275 += 1, R19230 += 1, R19231 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [73, 73] { R19275 += 1, R19231 += 1, R19168 += 1, R19169 += 1 };
  s2 -> s4 [73, 73] { R19275 += 1, R19231 += 1, R19168 += 1, R19169 += 1 };
  s2 -> s1 [74, 65535] { R19275 += 1, R19231 += 1, R19168 += 1, R19169 += 1 };
  s3 -> s6 [0, 65535] { R19275 += 1 };
  s3 -> s3 [0, 65535] { R19275 += 1, R19231 += 1, R19168 += 1, R19169 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R19275 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R19275 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 72] { R19277 += 1, R19233 += 1, R19174 += 1, R19175 += 1 };
  s0 -> s2 [0, 65535] { R19277 += 1, R19232 += 1, R19233 += 1 };
  s0 -> s0 [0, 65535] { R19276 += 1, R19277 += 1 };
  s0 -> s3 [73, 73] { R19277 += 1, R19233 += 1, R19174 += 1, R19175 += 1 };
  s0 -> s4 [73, 73] { R19277 += 1, R19233 += 1, R19174 += 1, R19175 += 1 };
  s0 -> s1 [74, 65535] { R19277 += 1, R19233 += 1, R19174 += 1, R19175 += 1 };
  s1 -> s1 [0, 72] { R19277 += 1, R19233 += 1, R19174 += 1, R19175 += 1 };
  s1 -> s1 [0, 65535] { R19277 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [73, 73] { R19277 += 1, R19233 += 1, R19174 += 1, R19175 += 1 };
  s1 -> s4 [73, 73] { R19277 += 1, R19233 += 1, R19174 += 1, R19175 += 1 };
  s1 -> s1 [74, 65535] { R19277 += 1, R19233 += 1, R19174 += 1, R19175 += 1 };
  s2 -> s1 [0, 72] { R19277 += 1, R19233 += 1, R19174 += 1, R19175 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R19277 += 1, R19232 += 1, R19233 += 1 };
  s2 -> s3 [73, 73] { R19277 += 1, R19233 += 1, R19174 += 1, R19175 += 1 };
  s2 -> s4 [73, 73] { R19277 += 1, R19233 += 1, R19174 += 1, R19175 += 1 };
  s2 -> s1 [74, 65535] { R19277 += 1, R19233 += 1, R19174 += 1, R19175 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R19277 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R19277 += 1 };
  s4 -> s4 [0, 65535] { R19277 += 1, R19233 += 1, R19174 += 1, R19175 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R19277 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [105, 105];
  accepting s1;
};
};
synchronised {  // Automata constraining P54
automaton P54_0 {
  init s0;
  s0 -> s1 [109, 109];
  accepting s1;
};
};
constraint R2 = R19277 && R20 - R19277 = -1 && R21 = R19277 && R22 - R19277 = -1 && R23 = R19277 && R24 = 0 && R25 = 1 && R26 = 0 && R27 = 1 && R38 + R67 + R66 + -1*R19167 + -1*R19165 - R53 = 0 && R52 + R19166 + R19164 = 0 && R19218 = 0 && R19219 = 0 && R19224 = 0 && R19225 = 0 && R19226 = 0 && R19227 = 0 && R19228 = 0 && R19229 = 0 && R19234 = 0 && R19235 = R19277 && R19236 = 0 && R19237 = R19277 && R19238 = 0 && R19239 = R19277 && R19240 = 0 && R19241 = R19277 && R19242 = 0 && R19243 = R19277 && R19244 = 0 && R19245 = R19277 && R19246 = 0 && R19247 = R19277 && R19248 = 0 && R19249 = R19277 && R19250 = 0 && R19251 = R19277 && R19252 = 0 && R19253 = R19277 && R19254 = 0 && R19255 = R19277 && R19256 = 0 && R19257 = R19277 && R19258 = 0 && R19259 = R19277 && R19260 = 0 && R19261 = R19277 && R19262 = 0 && R19263 = R19277 && R19264 = 0 && R19265 = R19277 && R19266 = 0 && R19267 = R19277 && R19268 = 0 && R19269 = R19277 && R19270 = 0 && R19271 = R19277 && R19272 = 0 && R19273 = R19277 && R19274 = 0 && R19275 = R19277 && R19276 = 0 && -1 < R1 && R8 < 1 && R11 < 1 && R12 < 1 && R40 + R69 + R68 < 1 && -1*R19167 + -1*R19165 - R53 < 1 && 0 < R19277 && (R1 != 0 || R17 = 0 || (R19178 = 0 && R19179 = 0)) && (R1 != 0 || R17 = 0 || (R19180 = 0 && R19181 = 0)) && (R1 != 0 || R17 = 0 || (R19182 = 0 && R19183 = 0)) && (R1 != 0 || R17 = 0 || (R19184 = 0 && R19185 = 0)) && (R1 != 0 || R17 = 0 || (R19186 = 0 && R19187 = 0)) && (R1 != 0 || R17 = 0 || (R19188 = 0 && R19189 = 0)) && (R1 != 0 || R17 = 0 || (R19190 = 0 && R19191 = 0)) && (R1 != 0 || R17 = 0 || (R19192 = 0 && R19193 = 0)) && (R1 != 0 || R17 = 0 || (R19194 = 0 && R19195 = 0)) && (R1 != 0 || R17 = 0 || (R19196 = 0 && R19197 = 0)) && (R48 + R19163 + R19160 != 0 || ((R42 + R11524 + R11522 != 0 || R43 + R11525 + R11523 + -1*R19167 + -1*R19165 - R53 = 0 || R53 + R19167 + R19165 < 1) && (R42 + R11524 + R11522 = 0 || R53 + R19167 + R19165 < 1))) && (R48 + R19163 + R19160 != 0 || ((R46 + R19161 + R19158 != 0 || R47 + R19162 + R19159 + -1*R19167 + -1*R19165 - R53 = 0 || R53 + R19167 + R19165 < 1) && (R46 + R19161 + R19158 = 0 || R53 + R19167 + R19165 < 1))) && (R19178 != 0 || R1 = R19179 || R1 < 1) && (R19180 != 0 || R1 = R19181 || R1 < 1) && (R19182 != 0 || R1 = R19183 || R1 < 1) && (R19184 != 0 || R1 = R19185 || R1 < 1) && (R19186 != 0 || R1 = R19187 || R1 < 1) && (R19188 != 0 || R1 = R19189 || R1 < 1) && (R19190 != 0 || R1 = R19191 || R1 < 1) && (R19192 != 0 || R1 = R19193 || R1 < 1) && (R19194 != 0 || R1 = R19195 || R1 < 1) && (R19196 != 0 || R1 = R19197 || R1 < 1) && (R18 = 0 || (R19216 = 0 && R19217 = 0)) && (R18 = 0 || (R19220 = 0 && R19221 = 0)) && (R18 = 0 || (R19222 = 0 && R19223 = 0)) && (R18 = 0 || (R19230 = 0 && R19231 = 0)) && (R18 = 0 || (R19232 = 0 && R19233 = 0)) && (R19 = 0 || (R19198 = 0 && R19199 = 0)) && (R19 = 0 || (R19200 = 0 && R19201 = 0)) && (R19 = 0 || (R19202 = 0 && R19203 = 0)) && (R19 = 0 || (R19204 = 0 && R19205 = 0)) && (R19 = 0 || (R19206 = 0 && R19207 = 0)) && (R19 = 0 || (R19208 = 0 && R19209 = 0)) && (R19 = 0 || (R19210 = 0 && R19211 = 0)) && (R19 = 0 || (R19212 = 0 && R19213 = 0)) && (R19 = 0 || (R19214 = 0 && R19215 = 0)) && (R48 + R19163 + R19160 = 0 || (R42 + R11524 + R11522 = 0 && R43 + R11525 + R11523 + -1*R19167 + -1*R19165 - R53 = 0)) && (R48 + R19163 + R19160 = 0 || (R46 + R19161 + R19158 = 0 && R47 + R19162 + R19159 + -1*R19167 + -1*R19165 - R53 = 0)) && (R58 + R19173 + R19170 = 0 || (R56 + R19171 + R19168 = 0 && R57 + R19172 + R19169 = 0)) && (R58 + R19173 + R19170 = 0 || (R62 + R19176 + R19174 = 0 && R63 + R19177 + R19175 = 0)) && (R19178 = 0 || R1 < 1) && (R19180 = 0 || R1 < 1) && (R19182 = 0 || R1 < 1) && (R19184 = 0 || R1 < 1) && (R19186 = 0 || R1 < 1) && (R19188 = 0 || R1 < 1) && (R19190 = 0 || R1 < 1) && (R19192 = 0 || R1 < 1) && (R19194 = 0 || R1 < 1) && (R19196 = 0 || R1 < 1);
// End of Parikh automata intersection problem
