// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R11522, R11523, R11524, R11525, R12, R17, R18, R19, R19158, R19159, R19160, R19161, R19162, R19163, R19164, R19165, R19166, R19167, R19590, R19591, R19592, R19593, R19594, R19595, R19700, R19701, R19702, R19703, R19704, R19705, R19706, R19707, R19708, R19709, R19710, R19711, R19712, R19713, R19714, R19715, R19716, R19717, R19718, R19719, R19720, R19721, R19722, R19723, R19724, R19725, R19726, R19727, R19728, R19729, R19730, R19731, R19732, R19733, R19734, R19735, R19736, R19737, R19738, R19739, R19740, R19741, R19742, R19743, R19744, R19745, R19746, R19747, R19748, R19749, R19750, R19751, R19752, R19753, R19754, R19755, R19756, R19757, R19758, R19759, R19760, R19761, R19762, R19763, R19764, R19765, R19766, R19767, R19768, R19769, R19770, R19771, R19772, R19773, R19774, R19775, R19776, R19777, R19778, R19779, R19780, R19781, R19782, R19783, R19784, R19785, R19786, R19787, R19788, R19789, R19790, R19791, R19792, R19793, R19794, R19795, R19796, R19797, R19798, R19799, R19800, R19801, R19802, R19803, R2, R20, R21, R22, R23, R24, R25, R26, R27, R3, R38, R4, R40, R42, R43, R46, R47, R48, R52, R53, R56, R57, R58, R62, R63, R66, R67, R68, R69, R8;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [73, 73];
  s0 -> s0 [74, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [73, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R2 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R11 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 72];
  s0 -> s0 [0, 65535] { R12 += 1 };
  s0 -> s2 [73, 73];
  s0 -> s1 [74, 65535];
  s1 -> s1 [0, 72];
  s1 -> s2 [73, 73];
  s1 -> s1 [74, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R21 += 1 };
  s0 -> s0 [0, 65535] { R20 += 1, R21 += 1 };
  s0 -> s2 [9, 13] { R21 += 1 };
  s0 -> s1 [14, 31] { R21 += 1 };
  s0 -> s2 [32, 32] { R21 += 1 };
  s0 -> s1 [33, 65535] { R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R21 += 1 };
  s2 -> s1 [0, 65535] { R21 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R22 += 1, R23 += 1 };
  s1 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R25 += 1 };
  s0 -> s0 [0, 65535] { R24 += 1, R25 += 1 };
  s0 -> s2 [9, 13] { R25 += 1 };
  s0 -> s1 [14, 31] { R25 += 1 };
  s0 -> s2 [32, 32] { R25 += 1 };
  s0 -> s1 [33, 65535] { R25 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R25 += 1 };
  s2 -> s1 [0, 65535] { R25 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R26 += 1, R27 += 1 };
  s0 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R19724 += 1, R19725 += 1 };
  s0 -> s1 [0, 65535] { R19725 += 1, R19 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R19725 += 1, R19 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 72] { R19727 += 1 };
  s0 -> s0 [0, 65535] { R19726 += 1, R19727 += 1 };
  s0 -> s2 [73, 73] { R19727 += 1 };
  s0 -> s3 [73, 73] { R19727 += 1 };
  s0 -> s1 [78, 65535] { R19727 += 1 };
  s1 -> s1 [0, 72] { R19727 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19727 += 1 };
  s1 -> s3 [73, 73] { R19727 += 1 };
  s1 -> s1 [78, 65535] { R19727 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 73] { R19727 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [78, 65535] { R19727 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 72] { R19729 += 1, R38 += 1 };
  s0 -> s0 [0, 65535] { R19728 += 1, R19729 += 1 };
  s0 -> s2 [73, 73] { R19729 += 1, R38 += 1 };
  s0 -> s3 [73, 73] { R19729 += 1, R38 += 1 };
  s0 -> s1 [74, 65535] { R19729 += 1, R38 += 1 };
  s1 -> s1 [0, 72] { R19729 += 1, R38 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19729 += 1, R38 += 1 };
  s1 -> s3 [73, 73] { R19729 += 1, R38 += 1 };
  s1 -> s1 [74, 65535] { R19729 += 1, R38 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R19729 += 1, R38 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 72] { R19731 += 1, R40 += 1 };
  s0 -> s0 [0, 65535] { R19730 += 1, R19731 += 1 };
  s0 -> s2 [73, 73] { R19731 += 1, R40 += 1 };
  s0 -> s3 [73, 73] { R19731 += 1, R40 += 1 };
  s0 -> s1 [74, 65535] { R19731 += 1, R40 += 1 };
  s1 -> s1 [0, 72] { R19731 += 1, R40 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19731 += 1, R40 += 1 };
  s1 -> s3 [73, 73] { R19731 += 1, R40 += 1 };
  s1 -> s1 [74, 65535] { R19731 += 1, R40 += 1 };
  s2 -> s2 [0, 65535] { R19731 += 1, R40 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 72] { R19733 += 1, R42 += 1, R43 += 1 };
  s0 -> s0 [0, 65535] { R19732 += 1, R19733 += 1 };
  s0 -> s2 [73, 73] { R19733 += 1, R42 += 1, R43 += 1 };
  s0 -> s3 [73, 73] { R19733 += 1, R42 += 1, R43 += 1 };
  s0 -> s1 [74, 65535] { R19733 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 72] { R19733 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19733 += 1, R42 += 1, R43 += 1 };
  s1 -> s3 [73, 73] { R19733 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [74, 65535] { R19733 += 1, R42 += 1, R43 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R19733 += 1, R42 += 1, R43 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 72] { R19735 += 1, R46 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R19734 += 1, R19735 += 1 };
  s0 -> s2 [73, 73] { R19735 += 1, R46 += 1, R47 += 1 };
  s0 -> s3 [73, 73] { R19735 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [74, 65535] { R19735 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 72] { R19735 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19735 += 1, R46 += 1, R47 += 1 };
  s1 -> s3 [73, 73] { R19735 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [74, 65535] { R19735 += 1, R46 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R19735 += 1, R46 += 1, R47 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 72] { R19737 += 1, R52 += 1, R53 += 1 };
  s0 -> s0 [0, 65535] { R19736 += 1, R19737 += 1 };
  s0 -> s2 [73, 73] { R19737 += 1, R52 += 1, R53 += 1 };
  s0 -> s3 [73, 73] { R19737 += 1, R52 += 1, R53 += 1 };
  s0 -> s1 [74, 65535] { R19737 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 72] { R19737 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19737 += 1, R52 += 1, R53 += 1 };
  s1 -> s3 [73, 73] { R19737 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [74, 65535] { R19737 += 1, R52 += 1, R53 += 1 };
  s2 -> s2 [0, 65535] { R19737 += 1, R52 += 1, R53 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 72] { R19739 += 1, R56 += 1, R57 += 1 };
  s0 -> s0 [0, 65535] { R19738 += 1, R19739 += 1 };
  s0 -> s2 [73, 73] { R19739 += 1, R56 += 1, R57 += 1 };
  s0 -> s3 [73, 73] { R19739 += 1, R56 += 1, R57 += 1 };
  s0 -> s1 [74, 65535] { R19739 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 72] { R19739 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19739 += 1, R56 += 1, R57 += 1 };
  s1 -> s3 [73, 73] { R19739 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [74, 65535] { R19739 += 1, R56 += 1, R57 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R19739 += 1, R56 += 1, R57 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 72] { R19741 += 1, R62 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R19740 += 1, R19741 += 1 };
  s0 -> s2 [73, 73] { R19741 += 1, R62 += 1, R63 += 1 };
  s0 -> s3 [73, 73] { R19741 += 1, R62 += 1, R63 += 1 };
  s0 -> s1 [74, 65535] { R19741 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 72] { R19741 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R19741 += 1, R62 += 1, R63 += 1 };
  s1 -> s3 [73, 73] { R19741 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [74, 65535] { R19741 += 1, R62 += 1, R63 += 1 };
  s2 -> s2 [0, 65535] { R19741 += 1, R62 += 1, R63 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 72] { R19761 += 1 };
  s0 -> s0 [0, 65535] { R19760 += 1, R19761 += 1 };
  s0 -> s2 [73, 73] { R19761 += 1 };
  s0 -> s1 [74, 65535] { R19761 += 1 };
  s1 -> s1 [0, 72] { R19761 += 1 };
  s1 -> s2 [73, 73] { R19761 += 1 };
  s1 -> s1 [74, 65535] { R19761 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R19761 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R19763 += 1, R1 += 1 };
  s0 -> s0 [0, 65535] { R19762 += 1, R19763 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R19763 += 1, R1 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 72] { R19765 += 1 };
  s0 -> s2 [0, 65535] { R19765 += 1, R8 += 1 };
  s0 -> s0 [0, 65535] { R19764 += 1, R19765 += 1 };
  s0 -> s3 [73, 73] { R19765 += 1 };
  s0 -> s1 [74, 65535] { R19765 += 1 };
  s1 -> s1 [0, 72] { R19765 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [73, 73] { R19765 += 1 };
  s1 -> s1 [74, 65535] { R19765 += 1 };
  s2 -> s1 [0, 72] { R19765 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R19765 += 1, R8 += 1 };
  s2 -> s3 [73, 73] { R19765 += 1 };
  s2 -> s1 [74, 65535] { R19765 += 1 };
  s3 -> s3 [0, 65535] { R19765 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 72] { R19767 += 1, R19705 += 1 };
  s0 -> s2 [0, 65535] { R19767 += 1, R19704 += 1, R19705 += 1 };
  s0 -> s0 [0, 65535] { R19766 += 1, R19767 += 1 };
  s0 -> s1 [74, 65535] { R19767 += 1, R19705 += 1 };
  s1 -> s1 [0, 72] { R19767 += 1, R19705 += 1 };
  s1 -> s1 [0, 65535] { R19767 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [74, 65535] { R19767 += 1, R19705 += 1 };
  s2 -> s1 [0, 72] { R19767 += 1, R19705 += 1 };
  s2 -> s2 [0, 65535] { R19767 += 1, R19704 += 1, R19705 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [74, 65535] { R19767 += 1, R19705 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R19769 += 1, R19706 += 1, R19707 += 1 };
  s0 -> s2 [0, 65535] { R19769 += 1, R19707 += 1, R17 += 1 };
  s0 -> s0 [0, 65535] { R19768 += 1, R19769 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R19769 += 1, R19706 += 1, R19707 += 1 };
  s1 -> s2 [0, 65535] { R19769 += 1, R19707 += 1, R17 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R19769 += 1, R19707 += 1, R17 += 1 };
  s2 -> s4 [0, 65535] { R19769 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19769 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 73] { R19771 += 1, R19709 += 1 };
  s0 -> s0 [0, 65535] { R19770 += 1, R19771 += 1 };
  s0 -> s2 [0, 65535] { R19771 += 1, R19708 += 1, R19709 += 1 };
  s0 -> s1 [77, 65535] { R19771 += 1, R19709 += 1 };
  s1 -> s1 [0, 73] { R19771 += 1, R19709 += 1 };
  s1 -> s1 [0, 65535] { R19771 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [77, 65535] { R19771 += 1, R19709 += 1 };
  s2 -> s1 [0, 73] { R19771 += 1, R19709 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R19771 += 1, R19708 += 1, R19709 += 1 };
  s2 -> s1 [77, 65535] { R19771 += 1, R19709 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R19773 += 1, R19710 += 1, R19711 += 1 };
  s0 -> s2 [0, 65535] { R19773 += 1, R19711 += 1, R67 += 1 };
  s0 -> s0 [0, 65535] { R19772 += 1, R19773 += 1 };
  s1 -> s1 [0, 65535] { R19773 += 1, R19710 += 1, R19711 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R19773 += 1, R19711 += 1, R67 += 1 };
  s2 -> s3 [0, 65535] { R19773 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R19773 += 1, R19711 += 1, R67 += 1 };
  s3 -> s3 [0, 65535] { R19773 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 76] { R19775 += 1, R19713 += 1 };
  s0 -> s2 [0, 65535] { R19775 += 1, R19712 += 1, R19713 += 1 };
  s0 -> s0 [0, 65535] { R19774 += 1, R19775 += 1 };
  s0 -> s3 [0, 65535] { R19775 += 1, R19713 += 1, R69 += 1 };
  s0 -> s1 [78, 65535] { R19775 += 1, R19713 += 1 };
  s1 -> s1 [0, 76] { R19775 += 1, R19713 += 1 };
  s1 -> s1 [0, 65535] { R19775 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [78, 65535] { R19775 += 1, R19713 += 1 };
  s2 -> s1 [0, 76] { R19775 += 1, R19713 += 1 };
  s2 -> s2 [0, 65535] { R19775 += 1, R19712 += 1, R19713 += 1 };
  s2 -> s3 [0, 65535] { R19775 += 1, R19713 += 1, R69 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [78, 65535] { R19775 += 1, R19713 += 1 };
  s3 -> s1 [0, 76] { R19775 += 1, R19713 += 1 };
  s3 -> s3 [0, 65535] { R19775 += 1, R19713 += 1, R69 += 1 };
  s3 -> s4 [0, 65535] { R19775 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [78, 65535] { R19775 += 1, R19713 += 1 };
  s4 -> s4 [0, 65535] { R19775 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 76] { R19777 += 1, R19715 += 1, R11525 += 1 };
  s0 -> s1 [0, 65535] { R19777 += 1, R19715 += 1 };
  s0 -> s2 [0, 65535] { R19777 += 1, R19714 += 1, R19715 += 1 };
  s0 -> s0 [0, 65535] { R19776 += 1, R19777 += 1 };
  s0 -> s1 [78, 65535] { R19777 += 1, R19715 += 1, R11525 += 1 };
  s1 -> s1 [0, 76] { R19777 += 1, R19715 += 1, R11525 += 1 };
  s1 -> s1 [0, 65535] { R19777 += 1, R19715 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R19777 += 1 };
  s1 -> s1 [78, 65535] { R19777 += 1, R19715 += 1, R11525 += 1 };
  s2 -> s1 [0, 76] { R19777 += 1, R19715 += 1, R11525 += 1 };
  s2 -> s1 [0, 65535] { R19777 += 1, R19715 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R19777 += 1, R19714 += 1, R19715 += 1 };
  s2 -> s1 [78, 65535] { R19777 += 1, R19715 += 1, R11525 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19777 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R19779 += 1, R19716 += 1, R19717 += 1 };
  s0 -> s2 [0, 65535] { R19779 += 1, R19717 += 1 };
  s0 -> s0 [0, 65535] { R19778 += 1, R19779 += 1 };
  s1 -> s1 [0, 65535] { R19779 += 1, R19716 += 1, R19717 += 1 };
  s1 -> s2 [0, 65535] { R19779 += 1, R19717 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R19779 += 1 };
  s2 -> s2 [0, 65535] { R19779 += 1, R19717 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R19779 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 77] { R19781 += 1, R19719 += 1, R19167 += 1 };
  s0 -> s0 [0, 65535] { R19780 += 1, R19781 += 1 };
  s0 -> s1 [0, 65535] { R19781 += 1, R19719 += 1 };
  s0 -> s2 [0, 65535] { R19781 += 1, R19718 += 1, R19719 += 1 };
  s0 -> s1 [90, 65535] { R19781 += 1, R19719 += 1, R19167 += 1 };
  s1 -> s1 [0, 77] { R19781 += 1, R19719 += 1, R19167 += 1 };
  s1 -> s4 [0, 65535] { R19781 += 1 };
  s1 -> s1 [0, 65535] { R19781 += 1, R19719 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [90, 65535] { R19781 += 1, R19719 += 1, R19167 += 1 };
  s2 -> s1 [0, 77] { R19781 += 1, R19719 += 1, R19167 += 1 };
  s2 -> s1 [0, 65535] { R19781 += 1, R19719 += 1 };
  s2 -> s2 [0, 65535] { R19781 += 1, R19718 += 1, R19719 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [90, 65535] { R19781 += 1, R19719 += 1, R19167 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19781 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R19783 += 1, R19720 += 1, R19721 += 1 };
  s0 -> s0 [0, 65535] { R19782 += 1, R19783 += 1 };
  s0 -> s2 [0, 65535] { R19783 += 1, R19721 += 1 };
  s0 -> s3 [0, 65535] { R19783 += 1, R19721 += 1, R19594 += 1, R19595 += 1 };
  s1 -> s1 [0, 65535] { R19783 += 1, R19720 += 1, R19721 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R19783 += 1, R19721 += 1 };
  s1 -> s3 [0, 65535] { R19783 += 1, R19721 += 1, R19594 += 1, R19595 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R19783 += 1, R19721 += 1 };
  s2 -> s5 [0, 65535] { R19783 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R19783 += 1, R19721 += 1 };
  s3 -> s3 [0, 65535] { R19783 += 1, R19721 += 1, R19594 += 1, R19595 += 1 };
  s3 -> s5 [0, 65535] { R19783 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R19783 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 76] { R19785 += 1, R19723 += 1, R19703 += 1 };
  s0 -> s2 [0, 65535] { R19785 += 1, R19722 += 1, R19723 += 1 };
  s0 -> s0 [0, 65535] { R19784 += 1, R19785 += 1 };
  s0 -> s1 [0, 65535] { R19785 += 1, R19723 += 1 };
  s0 -> s3 [77, 77] { R19785 += 1, R19723 += 1, R19703 += 1 };
  s0 -> s4 [77, 77] { R19785 += 1, R19723 += 1, R19703 += 1 };
  s0 -> s1 [91, 65535] { R19785 += 1, R19723 += 1, R19703 += 1 };
  s1 -> s1 [0, 76] { R19785 += 1, R19723 += 1, R19703 += 1 };
  s1 -> s5 [0, 65535] { R19785 += 1 };
  s1 -> s1 [0, 65535] { R19785 += 1, R19723 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [77, 77] { R19785 += 1, R19723 += 1, R19703 += 1 };
  s1 -> s4 [77, 77] { R19785 += 1, R19723 += 1, R19703 += 1 };
  s1 -> s1 [91, 65535] { R19785 += 1, R19723 += 1, R19703 += 1 };
  s2 -> s1 [0, 76] { R19785 += 1, R19723 += 1, R19703 += 1 };
  s2 -> s2 [0, 65535] { R19785 += 1, R19722 += 1, R19723 += 1 };
  s2 -> s1 [0, 65535] { R19785 += 1, R19723 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [77, 77] { R19785 += 1, R19723 += 1, R19703 += 1 };
  s2 -> s4 [77, 77] { R19785 += 1, R19723 += 1, R19703 += 1 };
  s2 -> s1 [91, 65535] { R19785 += 1, R19723 += 1, R19703 += 1 };
  s3 -> s3 [0, 77] { R19785 += 1, R19723 += 1, R19703 += 1 };
  s3 -> s3 [0, 65535] { R19785 += 1, R19723 += 1 };
  s3 -> s5 [0, 65535] { R19785 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [91, 65535] { R19785 += 1, R19723 += 1, R19703 += 1 };
  s4 -> s4 [0, 65535] { R19785 += 1, R19723 += 1 };
  s4 -> s5 [0, 65535] { R19785 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R19785 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R19787 += 1, R19742 += 1, R19743 += 1 };
  s0 -> s0 [0, 65535] { R19786 += 1, R19787 += 1 };
  s0 -> s2 [0, 65535] { R19787 += 1, R19743 += 1, R18 += 1 };
  s1 -> s1 [0, 65535] { R19787 += 1, R19742 += 1, R19743 += 1 };
  s1 -> s2 [0, 65535] { R19787 += 1, R19743 += 1, R18 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R19787 += 1, R19743 += 1, R18 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R19787 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R19787 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 72] { R19789 += 1, R19745 += 1 };
  s0 -> s0 [0, 65535] { R19788 += 1, R19789 += 1 };
  s0 -> s2 [0, 65535] { R19789 += 1, R19744 += 1, R19745 += 1 };
  s0 -> s3 [73, 73] { R19789 += 1, R19745 += 1 };
  s0 -> s4 [73, 73] { R19789 += 1, R19745 += 1 };
  s0 -> s5 [77, 77] { R19789 += 1, R19745 += 1 };
  s0 -> s1 [78, 65535] { R19789 += 1, R19745 += 1 };
  s1 -> s1 [0, 72] { R19789 += 1, R19745 += 1 };
  s1 -> s3 [73, 73] { R19789 += 1, R19745 += 1 };
  s1 -> s4 [73, 73] { R19789 += 1, R19745 += 1 };
  s1 -> s5 [77, 77] { R19789 += 1, R19745 += 1 };
  s1 -> s1 [78, 65535] { R19789 += 1, R19745 += 1 };
  s2 -> s1 [0, 72] { R19789 += 1, R19745 += 1 };
  s2 -> s2 [0, 65535] { R19789 += 1, R19744 += 1, R19745 += 1 };
  s2 -> s3 [73, 73] { R19789 += 1, R19745 += 1 };
  s2 -> s4 [73, 73] { R19789 += 1, R19745 += 1 };
  s2 -> s5 [77, 77] { R19789 += 1, R19745 += 1 };
  s2 -> s1 [78, 65535] { R19789 += 1, R19745 += 1 };
  s3 -> s3 [0, 73] { R19789 += 1, R19745 += 1 };
  s3 -> s8 [77, 77] { R19789 += 1, R19745 += 1 };
  s3 -> s3 [78, 65535] { R19789 += 1, R19745 += 1 };
  s5 -> s5 [0, 72] { R19789 += 1, R19745 += 1 };
  s5 -> s5 [0, 65535] { R19789 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [73, 73] { R19789 += 1, R19745 += 1 };
  s5 -> s8 [73, 73] { R19789 += 1, R19745 += 1 };
  s5 -> s5 [77, 65535] { R19789 += 1, R19745 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R19789 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 73] { R19789 += 1, R19745 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R19789 += 1 };
  s8 -> s8 [77, 65535] { R19789 += 1, R19745 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 72] { R19791 += 1, R19747 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R19790 += 1, R19791 += 1 };
  s0 -> s2 [0, 65535] { R19791 += 1, R19746 += 1, R19747 += 1 };
  s0 -> s3 [73, 73] { R19791 += 1, R19747 += 1, R66 += 1 };
  s0 -> s4 [73, 73] { R19791 += 1, R19747 += 1, R66 += 1 };
  s0 -> s1 [74, 65535] { R19791 += 1, R19747 += 1, R66 += 1 };
  s1 -> s1 [0, 72] { R19791 += 1, R19747 += 1, R66 += 1 };
  s1 -> s1 [0, 65535] { R19791 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [73, 73] { R19791 += 1, R19747 += 1, R66 += 1 };
  s1 -> s4 [73, 73] { R19791 += 1, R19747 += 1, R66 += 1 };
  s1 -> s1 [74, 65535] { R19791 += 1, R19747 += 1, R66 += 1 };
  s2 -> s1 [0, 72] { R19791 += 1, R19747 += 1, R66 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R19791 += 1, R19746 += 1, R19747 += 1 };
  s2 -> s3 [73, 73] { R19791 += 1, R19747 += 1, R66 += 1 };
  s2 -> s4 [73, 73] { R19791 += 1, R19747 += 1, R66 += 1 };
  s2 -> s1 [74, 65535] { R19791 += 1, R19747 += 1, R66 += 1 };
  s3 -> s3 [0, 65535] { R19791 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R19791 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R19791 += 1, R19747 += 1, R66 += 1 };
  s5 -> s5 [0, 65535] { R19791 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 72] { R19793 += 1, R19749 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R19792 += 1, R19793 += 1 };
  s0 -> s2 [0, 65535] { R19793 += 1, R19748 += 1, R19749 += 1 };
  s0 -> s3 [73, 73] { R19793 += 1, R19749 += 1, R68 += 1 };
  s0 -> s4 [73, 73] { R19793 += 1, R19749 += 1, R68 += 1 };
  s0 -> s1 [74, 65535] { R19793 += 1, R19749 += 1, R68 += 1 };
  s1 -> s1 [0, 72] { R19793 += 1, R19749 += 1, R68 += 1 };
  s1 -> s1 [0, 65535] { R19793 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [73, 73] { R19793 += 1, R19749 += 1, R68 += 1 };
  s1 -> s4 [73, 73] { R19793 += 1, R19749 += 1, R68 += 1 };
  s1 -> s1 [74, 65535] { R19793 += 1, R19749 += 1, R68 += 1 };
  s2 -> s1 [0, 72] { R19793 += 1, R19749 += 1, R68 += 1 };
  s2 -> s2 [0, 65535] { R19793 += 1, R19748 += 1, R19749 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [73, 73] { R19793 += 1, R19749 += 1, R68 += 1 };
  s2 -> s4 [73, 73] { R19793 += 1, R19749 += 1, R68 += 1 };
  s2 -> s1 [74, 65535] { R19793 += 1, R19749 += 1, R68 += 1 };
  s3 -> s3 [0, 65535] { R19793 += 1, R19749 += 1, R68 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R19793 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R19793 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R19793 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 72] { R19795 += 1, R19751 += 1, R11523 += 1 };
  s0 -> s2 [0, 72] { R19795 += 1, R19751 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s3 [0, 65535] { R19795 += 1, R19750 += 1, R19751 += 1 };
  s0 -> s0 [0, 65535] { R19794 += 1, R19795 += 1 };
  s0 -> s4 [73, 73] { R19795 += 1, R19751 += 1, R11523 += 1 };
  s0 -> s5 [73, 73] { R19795 += 1, R19751 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s6 [73, 73] { R19795 += 1, R19751 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s7 [73, 73] { R19795 += 1, R19751 += 1, R11523 += 1 };
  s0 -> s1 [74, 76] { R19795 += 1, R19751 += 1, R11523 += 1 };
  s0 -> s2 [74, 65535] { R19795 += 1, R19751 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s1 [78, 65535] { R19795 += 1, R19751 += 1, R11523 += 1 };
  s1 -> s1 [0, 72] { R19795 += 1, R19751 += 1, R11523 += 1 };
  s1 -> s1 [0, 65535] { R19795 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [73, 73] { R19795 += 1, R19751 += 1 };
  s1 -> s7 [73, 73] { R19795 += 1, R19751 += 1 };
  s1 -> s1 [74, 76] { R19795 += 1, R19751 += 1, R11523 += 1 };
  s1 -> s1 [74, 65535] { R19795 += 1, R19751 += 1 };
  s1 -> s1 [78, 65535] { R19795 += 1, R19751 += 1, R11523 += 1 };
  s2 -> s1 [0, 72] { R19795 += 1, R19751 += 1, R11523 += 1 };
  s2 -> s2 [0, 72] { R19795 += 1, R19751 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s4 [73, 73] { R19795 += 1, R19751 += 1, R11523 += 1 };
  s2 -> s5 [73, 73] { R19795 += 1, R19751 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s6 [73, 73] { R19795 += 1, R19751 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s7 [73, 73] { R19795 += 1, R19751 += 1, R11523 += 1 };
  s2 -> s1 [74, 76] { R19795 += 1, R19751 += 1, R11523 += 1 };
  s2 -> s2 [74, 65535] { R19795 += 1, R19751 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s1 [78, 65535] { R19795 += 1, R19751 += 1, R11523 += 1 };
  s3 -> s1 [0, 72] { R19795 += 1, R19751 += 1, R11523 += 1 };
  s3 -> s2 [0, 72] { R19795 += 1, R19751 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s3 [0, 65535] { R19795 += 1, R19750 += 1, R19751 += 1 };
  s3 -> s4 [73, 73] { R19795 += 1, R19751 += 1, R11523 += 1 };
  s3 -> s5 [73, 73] { R19795 += 1, R19751 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s6 [73, 73] { R19795 += 1, R19751 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s7 [73, 73] { R19795 += 1, R19751 += 1, R11523 += 1 };
  s3 -> s1 [74, 76] { R19795 += 1, R19751 += 1, R11523 += 1 };
  s3 -> s2 [74, 65535] { R19795 += 1, R19751 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s1 [78, 65535] { R19795 += 1, R19751 += 1, R11523 += 1 };
  s4 -> s4 [0, 76] { R19795 += 1, R19751 += 1, R11523 += 1 };
  s4 -> s4 [0, 65535] { R19795 += 1, R19751 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s9 [0, 65535] { R19795 += 1 };
  s4 -> s4 [78, 65535] { R19795 += 1, R19751 += 1, R11523 += 1 };
  s6 -> s4 [0, 76] { R19795 += 1, R19751 += 1, R11523 += 1 };
  s6 -> s6 [0, 65535] { R19795 += 1, R19751 += 1, R11522 += 1, R11523 += 1 };
  s6 -> s4 [78, 65535] { R19795 += 1, R19751 += 1, R11523 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R19795 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R19795 += 1 };
  accepting s4, s8, s9, s1, s7;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 72] { R19797 += 1, R19753 += 1, R19159 += 1, R19160 += 1 };
  s0 -> s2 [0, 72] { R19797 += 1, R19753 += 1, R19158 += 1, R19159 += 1 };
  s0 -> s0 [0, 65535] { R19796 += 1, R19797 += 1 };
  s0 -> s3 [0, 65535] { R19797 += 1, R19752 += 1, R19753 += 1 };
  s0 -> s4 [73, 73] { R19797 += 1, R19753 += 1, R19158 += 1, R19159 += 1 };
  s0 -> s5 [73, 73] { R19797 += 1, R19753 += 1, R19158 += 1, R19159 += 1 };
  s0 -> s6 [73, 73] { R19797 += 1, R19753 += 1, R19159 += 1, R19160 += 1 };
  s0 -> s7 [73, 73] { R19797 += 1, R19753 += 1, R19159 += 1, R19160 += 1 };
  s0 -> s1 [74, 65535] { R19797 += 1, R19753 += 1, R19159 += 1, R19160 += 1 };
  s0 -> s2 [74, 65535] { R19797 += 1, R19753 += 1, R19158 += 1, R19159 += 1 };
  s1 -> s11 [0, 72] { R19797 += 1, R19753 += 1 };
  s1 -> s1 [0, 72] { R19797 += 1, R19753 += 1, R19159 += 1, R19160 += 1 };
  s1 -> s8 [73, 73] { R19797 += 1, R19753 += 1 };
  s1 -> s6 [73, 73] { R19797 += 1, R19753 += 1, R19159 += 1, R19160 += 1 };
  s1 -> s12 [73, 73] { R19797 += 1, R19753 += 1 };
  s1 -> s7 [73, 73] { R19797 += 1, R19753 += 1, R19159 += 1, R19160 += 1 };
  s1 -> s11 [74, 65535] { R19797 += 1, R19753 += 1 };
  s1 -> s1 [74, 65535] { R19797 += 1, R19753 += 1, R19159 += 1, R19160 += 1 };
  s2 -> s1 [0, 72] { R19797 += 1, R19753 += 1, R19159 += 1, R19160 += 1 };
  s2 -> s2 [0, 72] { R19797 += 1, R19753 += 1, R19158 += 1, R19159 += 1 };
  s2 -> s4 [73, 73] { R19797 += 1, R19753 += 1, R19158 += 1, R19159 += 1 };
  s2 -> s5 [73, 73] { R19797 += 1, R19753 += 1, R19158 += 1, R19159 += 1 };
  s2 -> s6 [73, 73] { R19797 += 1, R19753 += 1, R19159 += 1, R19160 += 1 };
  s2 -> s7 [73, 73] { R19797 += 1, R19753 += 1, R19159 += 1, R19160 += 1 };
  s2 -> s1 [74, 65535] { R19797 += 1, R19753 += 1, R19159 += 1, R19160 += 1 };
  s2 -> s2 [74, 65535] { R19797 += 1, R19753 += 1, R19158 += 1, R19159 += 1 };
  s3 -> s1 [0, 72] { R19797 += 1, R19753 += 1, R19159 += 1, R19160 += 1 };
  s3 -> s2 [0, 72] { R19797 += 1, R19753 += 1, R19158 += 1, R19159 += 1 };
  s3 -> s3 [0, 65535] { R19797 += 1, R19752 += 1, R19753 += 1 };
  s3 -> s4 [73, 73] { R19797 += 1, R19753 += 1, R19158 += 1, R19159 += 1 };
  s3 -> s5 [73, 73] { R19797 += 1, R19753 += 1, R19158 += 1, R19159 += 1 };
  s3 -> s6 [73, 73] { R19797 += 1, R19753 += 1, R19159 += 1, R19160 += 1 };
  s3 -> s7 [73, 73] { R19797 += 1, R19753 += 1, R19159 += 1, R19160 += 1 };
  s3 -> s1 [74, 65535] { R19797 += 1, R19753 += 1, R19159 += 1, R19160 += 1 };
  s3 -> s2 [74, 65535] { R19797 += 1, R19753 += 1, R19158 += 1, R19159 += 1 };
  s4 -> s4 [0, 65535] { R19797 += 1, R19753 += 1, R19158 += 1, R19159 += 1 };
  s4 -> s7 [0, 65535] { R19797 += 1, R19753 += 1, R19159 += 1, R19160 += 1 };
  s7 -> s8 [0, 65535] { R19797 += 1, R19753 += 1 };
  s7 -> s7 [0, 65535] { R19797 += 1, R19753 += 1, R19159 += 1, R19160 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R19797 += 1, R19753 += 1 };
  s8 -> s10 [0, 65535] { R19797 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R19797 += 1 };
  s11 -> s11 [0, 72] { R19797 += 1, R19753 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R19797 += 1 };
  s11 -> s8 [73, 73] { R19797 += 1, R19753 += 1 };
  s11 -> s12 [73, 73] { R19797 += 1, R19753 += 1 };
  s11 -> s11 [74, 65535] { R19797 += 1, R19753 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R19797 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 72] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s0 -> s2 [0, 72] { R19799 += 1, R19755 += 1, R19164 += 1, R19165 += 1 };
  s0 -> s3 [0, 65535] { R19799 += 1, R19754 += 1, R19755 += 1 };
  s0 -> s0 [0, 65535] { R19798 += 1, R19799 += 1 };
  s0 -> s4 [73, 73] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s0 -> s5 [73, 73] { R19799 += 1, R19755 += 1, R19164 += 1, R19165 += 1 };
  s0 -> s6 [73, 73] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s0 -> s7 [73, 73] { R19799 += 1, R19755 += 1, R19164 += 1, R19165 += 1 };
  s0 -> s1 [74, 77] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s0 -> s2 [74, 65535] { R19799 += 1, R19755 += 1, R19164 += 1, R19165 += 1 };
  s0 -> s8 [90, 90] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s0 -> s1 [91, 65535] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s1 -> s1 [0, 72] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s1 -> s4 [73, 73] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s1 -> s6 [73, 73] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s1 -> s1 [74, 77] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s1 -> s8 [90, 90] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s1 -> s1 [91, 65535] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s2 -> s1 [0, 72] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s2 -> s2 [0, 72] { R19799 += 1, R19755 += 1, R19164 += 1, R19165 += 1 };
  s2 -> s4 [73, 73] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s2 -> s5 [73, 73] { R19799 += 1, R19755 += 1, R19164 += 1, R19165 += 1 };
  s2 -> s6 [73, 73] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s2 -> s7 [73, 73] { R19799 += 1, R19755 += 1, R19164 += 1, R19165 += 1 };
  s2 -> s1 [74, 77] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s2 -> s2 [74, 65535] { R19799 += 1, R19755 += 1, R19164 += 1, R19165 += 1 };
  s2 -> s8 [90, 90] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s2 -> s1 [91, 65535] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s3 -> s1 [0, 72] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s3 -> s2 [0, 72] { R19799 += 1, R19755 += 1, R19164 += 1, R19165 += 1 };
  s3 -> s3 [0, 65535] { R19799 += 1, R19754 += 1, R19755 += 1 };
  s3 -> s4 [73, 73] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s3 -> s5 [73, 73] { R19799 += 1, R19755 += 1, R19164 += 1, R19165 += 1 };
  s3 -> s6 [73, 73] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s3 -> s7 [73, 73] { R19799 += 1, R19755 += 1, R19164 += 1, R19165 += 1 };
  s3 -> s1 [74, 77] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s3 -> s2 [74, 65535] { R19799 += 1, R19755 += 1, R19164 += 1, R19165 += 1 };
  s3 -> s8 [90, 90] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s3 -> s1 [91, 65535] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s4 -> s4 [0, 77] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s4 -> s10 [90, 90] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s4 -> s4 [91, 65535] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s7 -> s4 [0, 77] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s7 -> s7 [0, 65535] { R19799 += 1, R19755 += 1, R19164 += 1, R19165 += 1 };
  s7 -> s10 [90, 90] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s7 -> s4 [91, 65535] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s8 -> s8 [0, 72] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R19799 += 1 };
  s8 -> s10 [73, 73] { R19799 += 1, R19755 += 1 };
  s8 -> s11 [73, 73] { R19799 += 1, R19755 += 1 };
  s8 -> s8 [74, 77] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s8 -> s8 [74, 65535] { R19799 += 1, R19755 += 1 };
  s8 -> s8 [90, 65535] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 77] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s10 -> s10 [0, 65535] { R19799 += 1, R19755 += 1 };
  s10 -> s9 [0, 65535];
  s10 -> s12 [0, 65535] { R19799 += 1 };
  s10 -> s10 [90, 65535] { R19799 += 1, R19755 += 1, R19165 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R19799 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R19799 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 72] { R19801 += 1, R19757 += 1, R19591 += 1, R19592 += 1 };
  s0 -> s2 [0, 72] { R19801 += 1, R19757 += 1, R19590 += 1, R19591 += 1 };
  s0 -> s3 [0, 65535] { R19801 += 1, R19756 += 1, R19757 += 1 };
  s0 -> s0 [0, 65535] { R19800 += 1, R19801 += 1 };
  s0 -> s4 [73, 73] { R19801 += 1, R19757 += 1, R19591 += 1, R19592 += 1 };
  s0 -> s5 [73, 73] { R19801 += 1, R19757 += 1, R19591 += 1, R19592 += 1 };
  s0 -> s6 [73, 73] { R19801 += 1, R19757 += 1, R19590 += 1, R19591 += 1 };
  s0 -> s7 [73, 73] { R19801 += 1, R19757 += 1, R19590 += 1, R19591 += 1 };
  s0 -> s1 [74, 65535] { R19801 += 1, R19757 += 1, R19591 += 1, R19592 += 1 };
  s0 -> s2 [74, 65535] { R19801 += 1, R19757 += 1, R19590 += 1, R19591 += 1 };
  s1 -> s1 [0, 72] { R19801 += 1, R19757 += 1, R19591 += 1, R19592 += 1 };
  s1 -> s1 [0, 65535] { R19801 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [73, 73] { R19801 += 1, R19757 += 1, R19591 += 1, R19592 += 1 };
  s1 -> s5 [73, 73] { R19801 += 1, R19757 += 1, R19591 += 1, R19592 += 1 };
  s1 -> s1 [74, 65535] { R19801 += 1, R19757 += 1, R19591 += 1, R19592 += 1 };
  s2 -> s1 [0, 72] { R19801 += 1, R19757 += 1, R19591 += 1, R19592 += 1 };
  s2 -> s2 [0, 72] { R19801 += 1, R19757 += 1, R19590 += 1, R19591 += 1 };
  s2 -> s4 [73, 73] { R19801 += 1, R19757 += 1, R19591 += 1, R19592 += 1 };
  s2 -> s5 [73, 73] { R19801 += 1, R19757 += 1, R19591 += 1, R19592 += 1 };
  s2 -> s6 [73, 73] { R19801 += 1, R19757 += 1, R19590 += 1, R19591 += 1 };
  s2 -> s7 [73, 73] { R19801 += 1, R19757 += 1, R19590 += 1, R19591 += 1 };
  s2 -> s1 [74, 65535] { R19801 += 1, R19757 += 1, R19591 += 1, R19592 += 1 };
  s2 -> s2 [74, 65535] { R19801 += 1, R19757 += 1, R19590 += 1, R19591 += 1 };
  s3 -> s1 [0, 72] { R19801 += 1, R19757 += 1, R19591 += 1, R19592 += 1 };
  s3 -> s2 [0, 72] { R19801 += 1, R19757 += 1, R19590 += 1, R19591 += 1 };
  s3 -> s3 [0, 65535] { R19801 += 1, R19756 += 1, R19757 += 1 };
  s3 -> s4 [73, 73] { R19801 += 1, R19757 += 1, R19591 += 1, R19592 += 1 };
  s3 -> s5 [73, 73] { R19801 += 1, R19757 += 1, R19591 += 1, R19592 += 1 };
  s3 -> s6 [73, 73] { R19801 += 1, R19757 += 1, R19590 += 1, R19591 += 1 };
  s3 -> s7 [73, 73] { R19801 += 1, R19757 += 1, R19590 += 1, R19591 += 1 };
  s3 -> s1 [74, 65535] { R19801 += 1, R19757 += 1, R19591 += 1, R19592 += 1 };
  s3 -> s2 [74, 65535] { R19801 += 1, R19757 += 1, R19590 += 1, R19591 += 1 };
  s4 -> s4 [0, 65535] { R19801 += 1, R19757 += 1, R19591 += 1, R19592 += 1 };
  s4 -> s9 [0, 65535] { R19801 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R19801 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s4 [0, 65535] { R19801 += 1, R19757 += 1, R19591 += 1, R19592 += 1 };
  s6 -> s6 [0, 65535] { R19801 += 1, R19757 += 1, R19590 += 1, R19591 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R19801 += 1 };
  s9 -> s8 [0, 65535];
  accepting s4, s8, s5, s9, s1;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 72] { R19803 += 1, R19759 += 1, R19701 += 1 };
  s0 -> s2 [0, 72] { R19803 += 1, R19759 += 1, R19700 += 1, R19701 += 1 };
  s0 -> s3 [0, 65535] { R19803 += 1, R19758 += 1, R19759 += 1 };
  s0 -> s0 [0, 65535] { R19802 += 1, R19803 += 1 };
  s0 -> s4 [73, 73] { R19803 += 1, R19759 += 1, R19700 += 1, R19701 += 1 };
  s0 -> s5 [73, 73] { R19803 += 1, R19759 += 1, R19701 += 1 };
  s0 -> s6 [73, 73] { R19803 += 1, R19759 += 1, R19700 += 1, R19701 += 1 };
  s0 -> s7 [73, 73] { R19803 += 1, R19759 += 1, R19701 += 1 };
  s0 -> s1 [74, 76] { R19803 += 1, R19759 += 1, R19701 += 1 };
  s0 -> s2 [74, 65535] { R19803 += 1, R19759 += 1, R19700 += 1, R19701 += 1 };
  s0 -> s1 [91, 65535] { R19803 += 1, R19759 += 1, R19701 += 1 };
  s1 -> s1 [0, 72] { R19803 += 1, R19759 += 1, R19701 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s1 [0, 65535] { R19803 += 1 };
  s1 -> s5 [73, 73] { R19803 += 1, R19759 += 1 };
  s1 -> s7 [73, 73] { R19803 += 1, R19759 += 1 };
  s1 -> s1 [74, 76] { R19803 += 1, R19759 += 1, R19701 += 1 };
  s1 -> s1 [74, 65535] { R19803 += 1, R19759 += 1 };
  s1 -> s1 [91, 65535] { R19803 += 1, R19759 += 1, R19701 += 1 };
  s2 -> s1 [0, 72] { R19803 += 1, R19759 += 1, R19701 += 1 };
  s2 -> s2 [0, 72] { R19803 += 1, R19759 += 1, R19700 += 1, R19701 += 1 };
  s2 -> s4 [73, 73] { R19803 += 1, R19759 += 1, R19700 += 1, R19701 += 1 };
  s2 -> s5 [73, 73] { R19803 += 1, R19759 += 1, R19701 += 1 };
  s2 -> s6 [73, 73] { R19803 += 1, R19759 += 1, R19700 += 1, R19701 += 1 };
  s2 -> s7 [73, 73] { R19803 += 1, R19759 += 1, R19701 += 1 };
  s2 -> s1 [74, 76] { R19803 += 1, R19759 += 1, R19701 += 1 };
  s2 -> s2 [74, 65535] { R19803 += 1, R19759 += 1, R19700 += 1, R19701 += 1 };
  s2 -> s1 [91, 65535] { R19803 += 1, R19759 += 1, R19701 += 1 };
  s3 -> s1 [0, 72] { R19803 += 1, R19759 += 1, R19701 += 1 };
  s3 -> s2 [0, 72] { R19803 += 1, R19759 += 1, R19700 += 1, R19701 += 1 };
  s3 -> s3 [0, 65535] { R19803 += 1, R19758 += 1, R19759 += 1 };
  s3 -> s4 [73, 73] { R19803 += 1, R19759 += 1, R19700 += 1, R19701 += 1 };
  s3 -> s5 [73, 73] { R19803 += 1, R19759 += 1, R19701 += 1 };
  s3 -> s6 [73, 73] { R19803 += 1, R19759 += 1, R19700 += 1, R19701 += 1 };
  s3 -> s7 [73, 73] { R19803 += 1, R19759 += 1, R19701 += 1 };
  s3 -> s1 [74, 76] { R19803 += 1, R19759 += 1, R19701 += 1 };
  s3 -> s2 [74, 65535] { R19803 += 1, R19759 += 1, R19700 += 1, R19701 += 1 };
  s3 -> s1 [91, 65535] { R19803 += 1, R19759 += 1, R19701 += 1 };
  s4 -> s7 [0, 76] { R19803 += 1, R19759 += 1, R19701 += 1 };
  s4 -> s4 [0, 65535] { R19803 += 1, R19759 += 1, R19700 += 1, R19701 += 1 };
  s4 -> s7 [91, 65535] { R19803 += 1, R19759 += 1, R19701 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R19803 += 1 };
  s7 -> s7 [0, 76] { R19803 += 1, R19759 += 1, R19701 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R19803 += 1 };
  s7 -> s7 [0, 65535] { R19803 += 1, R19759 += 1 };
  s7 -> s7 [91, 65535] { R19803 += 1, R19759 += 1, R19701 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R19803 += 1 };
  accepting s8, s5, s9, s1, s7;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [105, 105];
  accepting s1;
};
};
synchronised {  // Automata constraining P54
automaton P54_0 {
  init s0;
  s0 -> s1 [109, 109];
  accepting s1;
};
};
constraint R2 = R19803 && R20 - R19803 = -1 && R21 = R19803 && R22 - R19803 = -1 && R23 = R19803 && R24 = 0 && R25 = 1 && R26 = 0 && R27 = 1 && R38 + R67 + R66 + -1*R19167 + -1*R19165 - R53 = 0 && R52 + R19166 + R19164 = 0 && R19744 = 0 && R19745 = 0 && R19750 = 0 && R19751 = 0 && R19752 = 0 && R19753 = 0 && R19754 = 0 && R19755 = 0 && R19756 = 0 && R19757 = 0 && R19758 = 0 && R19759 = 0 && R19760 = 0 && R19761 = R19803 && R19762 = 0 && R19763 = R19803 && R19764 = 0 && R19765 = R19803 && R19766 = 0 && R19767 = R19803 && R19768 = 0 && R19769 = R19803 && R19770 = 0 && R19771 = R19803 && R19772 = 0 && R19773 = R19803 && R19774 = 0 && R19775 = R19803 && R19776 = 0 && R19777 = R19803 && R19778 = 0 && R19779 = R19803 && R19780 = 0 && R19781 = R19803 && R19782 = 0 && R19783 = R19803 && R19784 = 0 && R19785 = R19803 && R19786 = 0 && R19787 = R19803 && R19788 = 0 && R19789 = R19803 && R19790 = 0 && R19791 = R19803 && R19792 = 0 && R19793 = R19803 && R19794 = 0 && R19795 = R19803 && R19796 = 0 && R19797 = R19803 && R19798 = 0 && R19799 = R19803 && R19800 = 0 && R19801 = R19803 && R19802 = 0 && -1 < R1 && R8 < 1 && R11 < 1 && R12 < 1 && R40 + R69 + R68 < 1 && -1*R19167 + -1*R19165 - R53 < 1 && 0 < R19803 && (R1 != 0 || R17 = 0 || (R19704 = 0 && R19705 = 0)) && (R1 != 0 || R17 = 0 || (R19706 = 0 && R19707 = 0)) && (R1 != 0 || R17 = 0 || (R19708 = 0 && R19709 = 0)) && (R1 != 0 || R17 = 0 || (R19710 = 0 && R19711 = 0)) && (R1 != 0 || R17 = 0 || (R19712 = 0 && R19713 = 0)) && (R1 != 0 || R17 = 0 || (R19714 = 0 && R19715 = 0)) && (R1 != 0 || R17 = 0 || (R19716 = 0 && R19717 = 0)) && (R1 != 0 || R17 = 0 || (R19718 = 0 && R19719 = 0)) && (R1 != 0 || R17 = 0 || (R19720 = 0 && R19721 = 0)) && (R1 != 0 || R17 = 0 || (R19722 = 0 && R19723 = 0)) && (R48 + R19163 + R19160 != 0 || ((R42 + R11524 + R11522 != 0 || R43 + R11525 + R11523 + -1*R19167 + -1*R19165 - R53 = 0 || R53 + R19167 + R19165 < 1) && (R42 + R11524 + R11522 = 0 || R53 + R19167 + R19165 < 1))) && (R48 + R19163 + R19160 != 0 || ((R46 + R19161 + R19158 != 0 || R47 + R19162 + R19159 + -1*R19167 + -1*R19165 - R53 = 0 || R53 + R19167 + R19165 < 1) && (R46 + R19161 + R19158 = 0 || R53 + R19167 + R19165 < 1))) && (R19704 != 0 || R1 = R19705 || R1 < 1) && (R19706 != 0 || R1 = R19707 || R1 < 1) && (R19708 != 0 || R1 = R19709 || R1 < 1) && (R19710 != 0 || R1 = R19711 || R1 < 1) && (R19712 != 0 || R1 = R19713 || R1 < 1) && (R19714 != 0 || R1 = R19715 || R1 < 1) && (R19716 != 0 || R1 = R19717 || R1 < 1) && (R19718 != 0 || R1 = R19719 || R1 < 1) && (R19720 != 0 || R1 = R19721 || R1 < 1) && (R19722 != 0 || R1 = R19723 || R1 < 1) && (R18 = 0 || (R19742 = 0 && R19743 = 0)) && (R18 = 0 || (R19746 = 0 && R19747 = 0)) && (R18 = 0 || (R19748 = 0 && R19749 = 0)) && (R19 = 0 || (R19724 = 0 && R19725 = 0)) && (R19 = 0 || (R19726 = 0 && R19727 = 0)) && (R19 = 0 || (R19728 = 0 && R19729 = 0)) && (R19 = 0 || (R19730 = 0 && R19731 = 0)) && (R19 = 0 || (R19732 = 0 && R19733 = 0)) && (R19 = 0 || (R19734 = 0 && R19735 = 0)) && (R19 = 0 || (R19736 = 0 && R19737 = 0)) && (R19 = 0 || (R19738 = 0 && R19739 = 0)) && (R19 = 0 || (R19740 = 0 && R19741 = 0)) && (R48 + R19163 + R19160 = 0 || (R42 + R11524 + R11522 = 0 && R43 + R11525 + R11523 + -1*R19167 + -1*R19165 - R53 = 0)) && (R48 + R19163 + R19160 = 0 || (R46 + R19161 + R19158 = 0 && R47 + R19162 + R19159 + -1*R19167 + -1*R19165 - R53 = 0)) && (R58 + R19595 + R19592 = 0 || (R56 + R19593 + R19590 = 0 && R57 + R19594 + R19591 = 0)) && (R58 + R19595 + R19592 = 0 || (R62 + R19702 + R19700 = 0 && R63 + R19703 + R19701 = 0)) && (R19704 = 0 || R1 < 1) && (R19706 = 0 || R1 < 1) && (R19708 = 0 || R1 < 1) && (R19710 = 0 || R1 < 1) && (R19712 = 0 || R1 < 1) && (R19714 = 0 || R1 < 1) && (R19716 = 0 || R1 < 1) && (R19718 = 0 || R1 < 1) && (R19720 = 0 || R1 < 1) && (R19722 = 0 || R1 < 1);
// End of Parikh automata intersection problem
