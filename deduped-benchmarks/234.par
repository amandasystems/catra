// Parikh automata intersection problem, generated by OSTRICH+
counter int R0, R1, R10, R2, R3, R4, R5, R6, R7, R8, R9;
synchronised {  // Automata constraining P22
automaton P22_0 {
  init s0;
  s0 -> s1 [11, 11];
  accepting s1;
};
};
synchronised {  // Automata constraining P18
automaton P18_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
synchronised {  // Automata constraining P21
automaton P21_0 {
  init s0;
  s0 -> s1 [13, 13];
  accepting s1;
};
};
synchronised {  // Automata constraining value
automaton value_0 {
  init s0;
  s0 -> s0 [0, 65535] { R0 += 1 };
  accepting s0;
};
automaton value_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1, R4 += 1 };
  s0 -> s1 [12, 12] { R4 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value_2 {
  init s0;
  s0 -> s0 [0, 65535] { R5 += 1, R6 += 1 };
  s0 -> s1 [0, 65535] { R6 += 1, R1 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R6 += 1, R1 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value_3 {
  init s0;
  s0 -> s1 [0, 8] { R8 += 1 };
  s0 -> s0 [0, 65535] { R7 += 1, R8 += 1 };
  s0 -> s2 [9, 13] { R8 += 1 };
  s0 -> s1 [14, 31] { R8 += 1 };
  s0 -> s2 [32, 32] { R8 += 1 };
  s0 -> s1 [33, 65535] { R8 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R8 += 1 };
  s2 -> s1 [0, 65535] { R8 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value_4 {
  init s0;
  s0 -> s1 [0, 65535] { R10 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R9 += 1, R10 += 1 };
  s1 -> s1 [0, 65535] { R10 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
};
synchronised {  // Automata constraining P20
automaton P20_0 {
  init s0;
  s0 -> s1 [10, 10];
  accepting s1;
};
};
synchronised {  // Automata constraining P19
automaton P19_0 {
  init s0;
  s0 -> s1 [9, 9];
  accepting s1;
};
};
constraint R0 = R4 && R3 - R4 = -1 && R4 != 0 && (R2 != 0 || ((R7 != 0 || ((R9 != 0 || ((R4 != R8 || R8 = 1 || R8 < 0) && (R4 != R10 || R10 = 1 || R10 < 0) && (R4 = R8 || R8 = 1 || R4 < 1) && (R4 = R10 || R10 = 1 || R4 < 1))) && (R9 = 0 || R4 < 1))) && (R7 = 0 || R4 < 1))) && (R4 != R6 || R5 - R6 = -1 || (R1 = 0 && R6 < 0)) && (R2 = 0 || (R7 = 0 && R9 = 0 && (R4 != R8 || R8 = 1 || R8 < 0) && (R4 != R10 || R10 = 1 || R10 < 0) && (R8 != 1 || -1 < R4) && (R10 != 1 || -1 < R4) && (R4 = R8 || R8 = 1) && (R4 = R10 || R10 = 1))) && (R4 = R6 || (R1 = 0 && R4 < 0));
// End of Parikh automata intersection problem
