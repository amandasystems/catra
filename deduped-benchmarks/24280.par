// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R11522, R11523, R11524, R11525, R11526, R11527, R11528, R11529, R11530, R11531, R12, R14072, R14073, R14074, R14075, R14920, R14921, R14922, R14923, R14924, R14925, R14926, R14927, R14928, R14929, R14930, R14931, R14932, R14933, R14934, R14935, R14936, R14937, R14938, R14939, R14940, R14941, R14942, R14943, R14944, R14945, R14946, R14947, R14948, R14949, R14950, R14951, R14952, R14953, R14954, R14955, R14956, R14957, R14958, R14959, R14960, R14961, R14962, R14963, R14964, R14965, R14966, R14967, R14968, R14969, R14970, R14971, R14972, R14973, R14974, R14975, R14976, R14977, R14978, R14979, R14980, R14981, R14982, R14983, R14984, R14985, R14986, R14987, R14988, R14989, R14990, R14991, R14992, R14993, R14994, R14995, R14996, R14997, R14998, R14999, R15000, R15001, R15002, R15003, R15004, R15005, R15006, R15007, R15008, R15009, R15010, R15011, R15012, R15013, R15014, R15015, R15016, R15017, R15018, R15019, R15020, R15021, R15022, R15023, R15024, R15025, R15026, R15027, R15028, R15029, R17, R18, R19, R2, R20, R21, R22, R23, R24, R25, R26, R27, R3, R38, R4, R40, R42, R43, R46, R47, R48, R52, R53, R56, R57, R58, R62, R63, R66, R67, R68, R69, R8;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [84, 84];
  s0 -> s0 [85, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [84, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R2 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R11 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 83];
  s0 -> s0 [0, 65535] { R12 += 1 };
  s0 -> s2 [84, 84];
  s0 -> s1 [85, 65535];
  s1 -> s1 [0, 83];
  s1 -> s2 [84, 84];
  s1 -> s1 [85, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R21 += 1 };
  s0 -> s0 [0, 65535] { R20 += 1, R21 += 1 };
  s0 -> s2 [9, 13] { R21 += 1 };
  s0 -> s1 [14, 31] { R21 += 1 };
  s0 -> s2 [32, 32] { R21 += 1 };
  s0 -> s1 [33, 65535] { R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R21 += 1 };
  s2 -> s1 [0, 65535] { R21 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R22 += 1, R23 += 1 };
  s1 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R25 += 1 };
  s0 -> s0 [0, 65535] { R24 += 1, R25 += 1 };
  s0 -> s2 [9, 13] { R25 += 1 };
  s0 -> s1 [14, 31] { R25 += 1 };
  s0 -> s2 [32, 32] { R25 += 1 };
  s0 -> s1 [33, 65535] { R25 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R25 += 1 };
  s2 -> s1 [0, 65535] { R25 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R26 += 1, R27 += 1 };
  s0 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R14950 += 1, R14951 += 1 };
  s0 -> s1 [0, 65535] { R14951 += 1, R19 += 1 };
  s1 -> s1 [0, 65535] { R14951 += 1, R19 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 83] { R14953 += 1 };
  s0 -> s0 [0, 65535] { R14952 += 1, R14953 += 1 };
  s0 -> s2 [84, 84] { R14953 += 1 };
  s0 -> s3 [84, 84] { R14953 += 1 };
  s0 -> s1 [86, 65535] { R14953 += 1 };
  s1 -> s1 [0, 83] { R14953 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R14953 += 1 };
  s1 -> s3 [84, 84] { R14953 += 1 };
  s1 -> s1 [86, 65535] { R14953 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 84] { R14953 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [86, 65535] { R14953 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 83] { R14955 += 1, R38 += 1 };
  s0 -> s0 [0, 65535] { R14954 += 1, R14955 += 1 };
  s0 -> s2 [84, 84] { R14955 += 1, R38 += 1 };
  s0 -> s3 [84, 84] { R14955 += 1, R38 += 1 };
  s0 -> s1 [85, 65535] { R14955 += 1, R38 += 1 };
  s1 -> s1 [0, 83] { R14955 += 1, R38 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R14955 += 1, R38 += 1 };
  s1 -> s3 [84, 84] { R14955 += 1, R38 += 1 };
  s1 -> s1 [85, 65535] { R14955 += 1, R38 += 1 };
  s2 -> s2 [0, 65535] { R14955 += 1, R38 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 83] { R14957 += 1, R40 += 1 };
  s0 -> s0 [0, 65535] { R14956 += 1, R14957 += 1 };
  s0 -> s2 [84, 84] { R14957 += 1, R40 += 1 };
  s0 -> s3 [84, 84] { R14957 += 1, R40 += 1 };
  s0 -> s1 [85, 65535] { R14957 += 1, R40 += 1 };
  s1 -> s1 [0, 83] { R14957 += 1, R40 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R14957 += 1, R40 += 1 };
  s1 -> s3 [84, 84] { R14957 += 1, R40 += 1 };
  s1 -> s1 [85, 65535] { R14957 += 1, R40 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R14957 += 1, R40 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 83] { R14959 += 1, R42 += 1, R43 += 1 };
  s0 -> s0 [0, 65535] { R14958 += 1, R14959 += 1 };
  s0 -> s2 [84, 84] { R14959 += 1, R42 += 1, R43 += 1 };
  s0 -> s3 [84, 84] { R14959 += 1, R42 += 1, R43 += 1 };
  s0 -> s1 [85, 65535] { R14959 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 83] { R14959 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R14959 += 1, R42 += 1, R43 += 1 };
  s1 -> s3 [84, 84] { R14959 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [85, 65535] { R14959 += 1, R42 += 1, R43 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R14959 += 1, R42 += 1, R43 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 83] { R14961 += 1, R46 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R14960 += 1, R14961 += 1 };
  s0 -> s2 [84, 84] { R14961 += 1, R46 += 1, R47 += 1 };
  s0 -> s3 [84, 84] { R14961 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [85, 65535] { R14961 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 83] { R14961 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R14961 += 1, R46 += 1, R47 += 1 };
  s1 -> s3 [84, 84] { R14961 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [85, 65535] { R14961 += 1, R46 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R14961 += 1, R46 += 1, R47 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 83] { R14963 += 1, R52 += 1, R53 += 1 };
  s0 -> s0 [0, 65535] { R14962 += 1, R14963 += 1 };
  s0 -> s2 [84, 84] { R14963 += 1, R52 += 1, R53 += 1 };
  s0 -> s3 [84, 84] { R14963 += 1, R52 += 1, R53 += 1 };
  s0 -> s1 [85, 65535] { R14963 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 83] { R14963 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R14963 += 1, R52 += 1, R53 += 1 };
  s1 -> s3 [84, 84] { R14963 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [85, 65535] { R14963 += 1, R52 += 1, R53 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R14963 += 1, R52 += 1, R53 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 83] { R14965 += 1, R56 += 1, R57 += 1 };
  s0 -> s0 [0, 65535] { R14964 += 1, R14965 += 1 };
  s0 -> s2 [84, 84] { R14965 += 1, R56 += 1, R57 += 1 };
  s0 -> s3 [84, 84] { R14965 += 1, R56 += 1, R57 += 1 };
  s0 -> s1 [85, 65535] { R14965 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 83] { R14965 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R14965 += 1, R56 += 1, R57 += 1 };
  s1 -> s3 [84, 84] { R14965 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [85, 65535] { R14965 += 1, R56 += 1, R57 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R14965 += 1, R56 += 1, R57 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 83] { R14967 += 1, R62 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R14966 += 1, R14967 += 1 };
  s0 -> s2 [84, 84] { R14967 += 1, R62 += 1, R63 += 1 };
  s0 -> s3 [84, 84] { R14967 += 1, R62 += 1, R63 += 1 };
  s0 -> s1 [85, 65535] { R14967 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 83] { R14967 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R14967 += 1, R62 += 1, R63 += 1 };
  s1 -> s3 [84, 84] { R14967 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [85, 65535] { R14967 += 1, R62 += 1, R63 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R14967 += 1, R62 += 1, R63 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 83] { R14987 += 1 };
  s0 -> s0 [0, 65535] { R14986 += 1, R14987 += 1 };
  s0 -> s2 [84, 84] { R14987 += 1 };
  s0 -> s1 [85, 65535] { R14987 += 1 };
  s1 -> s1 [0, 83] { R14987 += 1 };
  s1 -> s2 [84, 84] { R14987 += 1 };
  s1 -> s1 [85, 65535] { R14987 += 1 };
  s2 -> s2 [0, 65535] { R14987 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R14989 += 1, R1 += 1 };
  s0 -> s0 [0, 65535] { R14988 += 1, R14989 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R14989 += 1, R1 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 83] { R14991 += 1 };
  s0 -> s0 [0, 65535] { R14990 += 1, R14991 += 1 };
  s0 -> s2 [0, 65535] { R14991 += 1, R8 += 1 };
  s0 -> s3 [84, 84] { R14991 += 1 };
  s0 -> s1 [85, 65535] { R14991 += 1 };
  s1 -> s1 [0, 83] { R14991 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [84, 84] { R14991 += 1 };
  s1 -> s1 [85, 65535] { R14991 += 1 };
  s2 -> s1 [0, 83] { R14991 += 1 };
  s2 -> s2 [0, 65535] { R14991 += 1, R8 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [84, 84] { R14991 += 1 };
  s2 -> s1 [85, 65535] { R14991 += 1 };
  s3 -> s3 [0, 65535] { R14991 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 83] { R14993 += 1, R14931 += 1 };
  s0 -> s2 [0, 65535] { R14993 += 1, R14930 += 1, R14931 += 1 };
  s0 -> s0 [0, 65535] { R14992 += 1, R14993 += 1 };
  s0 -> s1 [85, 65535] { R14993 += 1, R14931 += 1 };
  s1 -> s1 [0, 83] { R14993 += 1, R14931 += 1 };
  s1 -> s1 [0, 65535] { R14993 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [85, 65535] { R14993 += 1, R14931 += 1 };
  s2 -> s1 [0, 83] { R14993 += 1, R14931 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R14993 += 1, R14930 += 1, R14931 += 1 };
  s2 -> s1 [85, 65535] { R14993 += 1, R14931 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R14995 += 1, R14933 += 1, R17 += 1 };
  s0 -> s2 [0, 65535] { R14995 += 1, R14932 += 1, R14933 += 1 };
  s0 -> s0 [0, 65535] { R14994 += 1, R14995 += 1 };
  s1 -> s1 [0, 65535] { R14995 += 1, R14933 += 1, R17 += 1 };
  s1 -> s4 [0, 65535] { R14995 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R14995 += 1, R14933 += 1, R17 += 1 };
  s2 -> s2 [0, 65535] { R14995 += 1, R14932 += 1, R14933 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R14995 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 65535] { R14997 += 1, R14935 += 1 };
  s0 -> s0 [0, 65535] { R14996 += 1, R14997 += 1 };
  s0 -> s2 [0, 65535] { R14997 += 1, R14934 += 1, R14935 += 1 };
  s1 -> s1 [0, 65535] { R14997 += 1, R14935 += 1 };
  s1 -> s4 [0, 65535] { R14997 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R14997 += 1, R14935 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R14997 += 1, R14934 += 1, R14935 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R14997 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R14998 += 1, R14999 += 1 };
  s0 -> s1 [0, 65535] { R14999 += 1, R14937 += 1, R67 += 1 };
  s0 -> s2 [0, 65535] { R14999 += 1, R14936 += 1, R14937 += 1 };
  s1 -> s1 [0, 65535] { R14999 += 1, R14937 += 1, R67 += 1 };
  s1 -> s4 [0, 65535] { R14999 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R14999 += 1, R14937 += 1, R67 += 1 };
  s2 -> s2 [0, 65535] { R14999 += 1, R14936 += 1, R14937 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R14999 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 84] { R15001 += 1, R14939 += 1 };
  s0 -> s0 [0, 65535] { R15000 += 1, R15001 += 1 };
  s0 -> s2 [0, 65535] { R15001 += 1, R14939 += 1, R69 += 1 };
  s0 -> s3 [0, 65535] { R15001 += 1, R14938 += 1, R14939 += 1 };
  s0 -> s1 [86, 65535] { R15001 += 1, R14939 += 1 };
  s1 -> s1 [0, 84] { R15001 += 1, R14939 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R15001 += 1 };
  s1 -> s1 [86, 65535] { R15001 += 1, R14939 += 1 };
  s2 -> s1 [0, 84] { R15001 += 1, R14939 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R15001 += 1 };
  s2 -> s2 [0, 65535] { R15001 += 1, R14939 += 1, R69 += 1 };
  s2 -> s1 [86, 65535] { R15001 += 1, R14939 += 1 };
  s3 -> s1 [0, 84] { R15001 += 1, R14939 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R15001 += 1, R14939 += 1, R69 += 1 };
  s3 -> s3 [0, 65535] { R15001 += 1, R14938 += 1, R14939 += 1 };
  s3 -> s1 [86, 65535] { R15001 += 1, R14939 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R15001 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 84] { R15003 += 1, R14941 += 1, R11525 += 1 };
  s0 -> s1 [0, 65535] { R15003 += 1, R14941 += 1 };
  s0 -> s0 [0, 65535] { R15002 += 1, R15003 += 1 };
  s0 -> s2 [0, 65535] { R15003 += 1, R14940 += 1, R14941 += 1 };
  s0 -> s1 [86, 65535] { R15003 += 1, R14941 += 1, R11525 += 1 };
  s1 -> s1 [0, 84] { R15003 += 1, R14941 += 1, R11525 += 1 };
  s1 -> s1 [0, 65535] { R15003 += 1, R14941 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R15003 += 1 };
  s1 -> s1 [86, 65535] { R15003 += 1, R14941 += 1, R11525 += 1 };
  s2 -> s1 [0, 84] { R15003 += 1, R14941 += 1, R11525 += 1 };
  s2 -> s1 [0, 65535] { R15003 += 1, R14941 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R15003 += 1, R14940 += 1, R14941 += 1 };
  s2 -> s1 [86, 65535] { R15003 += 1, R14941 += 1, R11525 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R15003 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R15005 += 1, R14943 += 1, R11530 += 1, R11531 += 1 };
  s0 -> s0 [0, 65535] { R15004 += 1, R15005 += 1 };
  s0 -> s2 [0, 65535] { R15005 += 1, R14943 += 1, R11529 += 1, R11530 += 1 };
  s0 -> s3 [0, 65535] { R15005 += 1, R14942 += 1, R14943 += 1 };
  s1 -> s1 [0, 65535] { R15005 += 1, R14943 += 1, R11530 += 1, R11531 += 1 };
  s1 -> s6 [0, 65535] { R15005 += 1, R14943 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R15005 += 1 };
  s2 -> s1 [0, 65535] { R15005 += 1, R14943 += 1, R11530 += 1, R11531 += 1 };
  s2 -> s2 [0, 65535] { R15005 += 1, R14943 += 1, R11529 += 1, R11530 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R15005 += 1 };
  s3 -> s1 [0, 65535] { R15005 += 1, R14943 += 1, R11530 += 1, R11531 += 1 };
  s3 -> s2 [0, 65535] { R15005 += 1, R14943 += 1, R11529 += 1, R11530 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R15005 += 1, R14942 += 1, R14943 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R15005 += 1 };
  s6 -> s6 [0, 65535] { R15005 += 1, R14943 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R15005 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 85] { R15007 += 1, R14945 += 1, R14075 += 1 };
  s0 -> s0 [0, 65535] { R15006 += 1, R15007 += 1 };
  s0 -> s2 [0, 65535] { R15007 += 1, R14944 += 1, R14945 += 1 };
  s0 -> s3 [89, 89] { R15007 += 1, R14945 += 1, R14075 += 1 };
  s0 -> s1 [90, 65535] { R15007 += 1, R14945 += 1, R14075 += 1 };
  s1 -> s1 [0, 85] { R15007 += 1, R14945 += 1, R14075 += 1 };
  s1 -> s3 [89, 89] { R15007 += 1, R14945 += 1, R14075 += 1 };
  s1 -> s1 [90, 65535] { R15007 += 1, R14945 += 1, R14075 += 1 };
  s2 -> s1 [0, 85] { R15007 += 1, R14945 += 1, R14075 += 1 };
  s2 -> s2 [0, 65535] { R15007 += 1, R14944 += 1, R14945 += 1 };
  s2 -> s3 [89, 89] { R15007 += 1, R14945 += 1, R14075 += 1 };
  s2 -> s1 [90, 65535] { R15007 += 1, R14945 += 1, R14075 += 1 };
  s3 -> s3 [0, 85] { R15007 += 1, R14945 += 1, R14075 += 1 };
  s3 -> s4 [0, 65535] { R15007 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R15007 += 1, R14945 += 1 };
  s3 -> s3 [89, 65535] { R15007 += 1, R14945 += 1, R14075 += 1 };
  s4 -> s4 [0, 65535] { R15007 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R15009 += 1, R14947 += 1 };
  s0 -> s0 [0, 65535] { R15008 += 1, R15009 += 1 };
  s0 -> s2 [0, 65535] { R15009 += 1, R14946 += 1, R14947 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R15009 += 1, R14947 += 1 };
  s1 -> s4 [0, 65535] { R15009 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R15009 += 1, R14947 += 1 };
  s2 -> s2 [0, 65535] { R15009 += 1, R14946 += 1, R14947 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R15009 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 84] { R15011 += 1, R14949 += 1, R14929 += 1 };
  s0 -> s2 [0, 65535] { R15011 += 1, R14948 += 1, R14949 += 1 };
  s0 -> s3 [0, 65535] { R15011 += 1, R14949 += 1, R14928 += 1, R14929 += 1 };
  s0 -> s0 [0, 65535] { R15010 += 1, R15011 += 1 };
  s0 -> s4 [85, 85] { R15011 += 1, R14949 += 1, R14929 += 1 };
  s0 -> s5 [85, 85] { R15011 += 1, R14949 += 1, R14929 += 1 };
  s0 -> s1 [90, 65535] { R15011 += 1, R14949 += 1, R14929 += 1 };
  s1 -> s1 [0, 84] { R15011 += 1, R14949 += 1, R14929 += 1 };
  s1 -> s6 [0, 65535] { R15011 += 1 };
  s1 -> s1 [0, 65535] { R15011 += 1, R14949 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [85, 85] { R15011 += 1, R14949 += 1, R14929 += 1 };
  s1 -> s5 [85, 85] { R15011 += 1, R14949 += 1, R14929 += 1 };
  s1 -> s1 [90, 65535] { R15011 += 1, R14949 += 1, R14929 += 1 };
  s2 -> s1 [0, 84] { R15011 += 1, R14949 += 1, R14929 += 1 };
  s2 -> s2 [0, 65535] { R15011 += 1, R14948 += 1, R14949 += 1 };
  s2 -> s3 [0, 65535] { R15011 += 1, R14949 += 1, R14928 += 1, R14929 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [85, 85] { R15011 += 1, R14949 += 1, R14929 += 1 };
  s2 -> s5 [85, 85] { R15011 += 1, R14949 += 1, R14929 += 1 };
  s2 -> s1 [90, 65535] { R15011 += 1, R14949 += 1, R14929 += 1 };
  s3 -> s1 [0, 84] { R15011 += 1, R14949 += 1, R14929 += 1 };
  s3 -> s6 [0, 65535] { R15011 += 1 };
  s3 -> s3 [0, 65535] { R15011 += 1, R14949 += 1, R14928 += 1, R14929 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [85, 85] { R15011 += 1, R14949 += 1, R14929 += 1 };
  s3 -> s5 [85, 85] { R15011 += 1, R14949 += 1, R14929 += 1 };
  s3 -> s1 [90, 65535] { R15011 += 1, R14949 += 1, R14929 += 1 };
  s4 -> s4 [0, 85] { R15011 += 1, R14949 += 1, R14929 += 1 };
  s4 -> s6 [0, 65535] { R15011 += 1 };
  s4 -> s4 [0, 65535] { R15011 += 1, R14949 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [90, 65535] { R15011 += 1, R14949 += 1, R14929 += 1 };
  s5 -> s6 [0, 65535] { R15011 += 1 };
  s5 -> s5 [0, 65535] { R15011 += 1, R14949 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R15011 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R15013 += 1, R14968 += 1, R14969 += 1 };
  s0 -> s2 [0, 65535] { R15013 += 1, R14969 += 1, R18 += 1 };
  s0 -> s0 [0, 65535] { R15012 += 1, R15013 += 1 };
  s1 -> s1 [0, 65535] { R15013 += 1, R14968 += 1, R14969 += 1 };
  s1 -> s2 [0, 65535] { R15013 += 1, R14969 += 1, R18 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R15013 += 1, R14969 += 1, R18 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R15013 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R15013 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 83] { R15015 += 1, R14971 += 1 };
  s0 -> s0 [0, 65535] { R15014 += 1, R15015 += 1 };
  s0 -> s2 [0, 65535] { R15015 += 1, R14970 += 1, R14971 += 1 };
  s0 -> s3 [84, 84] { R15015 += 1, R14971 += 1 };
  s0 -> s4 [84, 84] { R15015 += 1, R14971 += 1 };
  s0 -> s5 [85, 85] { R15015 += 1, R14971 += 1 };
  s0 -> s1 [86, 65535] { R15015 += 1, R14971 += 1 };
  s1 -> s1 [0, 83] { R15015 += 1, R14971 += 1 };
  s1 -> s3 [84, 84] { R15015 += 1, R14971 += 1 };
  s1 -> s4 [84, 84] { R15015 += 1, R14971 += 1 };
  s1 -> s5 [85, 85] { R15015 += 1, R14971 += 1 };
  s1 -> s1 [86, 65535] { R15015 += 1, R14971 += 1 };
  s2 -> s1 [0, 83] { R15015 += 1, R14971 += 1 };
  s2 -> s2 [0, 65535] { R15015 += 1, R14970 += 1, R14971 += 1 };
  s2 -> s3 [84, 84] { R15015 += 1, R14971 += 1 };
  s2 -> s4 [84, 84] { R15015 += 1, R14971 += 1 };
  s2 -> s5 [85, 85] { R15015 += 1, R14971 += 1 };
  s2 -> s1 [86, 65535] { R15015 += 1, R14971 += 1 };
  s4 -> s4 [0, 84] { R15015 += 1, R14971 += 1 };
  s4 -> s7 [85, 85] { R15015 += 1, R14971 += 1 };
  s4 -> s4 [86, 65535] { R15015 += 1, R14971 += 1 };
  s5 -> s5 [0, 83] { R15015 += 1, R14971 += 1 };
  s5 -> s5 [0, 65535] { R15015 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [84, 84] { R15015 += 1, R14971 += 1 };
  s5 -> s8 [84, 84] { R15015 += 1, R14971 += 1 };
  s5 -> s5 [85, 65535] { R15015 += 1, R14971 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R15015 += 1, R14971 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s9 [0, 65535] { R15015 += 1 };
  s8 -> s8 [0, 65535] { R15015 += 1 };
  s8 -> s6 [0, 65535];
  s9 -> s6 [0, 65535];
  s9 -> s9 [0, 65535] { R15015 += 1 };
  accepting s8, s5, s9, s6, s7;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 83] { R15017 += 1, R14973 += 1, R66 += 1 };
  s0 -> s2 [0, 65535] { R15017 += 1, R14972 += 1, R14973 += 1 };
  s0 -> s0 [0, 65535] { R15016 += 1, R15017 += 1 };
  s0 -> s3 [84, 84] { R15017 += 1, R14973 += 1, R66 += 1 };
  s0 -> s4 [84, 84] { R15017 += 1, R14973 += 1, R66 += 1 };
  s0 -> s1 [85, 65535] { R15017 += 1, R14973 += 1, R66 += 1 };
  s1 -> s1 [0, 83] { R15017 += 1, R14973 += 1, R66 += 1 };
  s1 -> s1 [0, 65535] { R15017 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [84, 84] { R15017 += 1, R14973 += 1, R66 += 1 };
  s1 -> s4 [84, 84] { R15017 += 1, R14973 += 1, R66 += 1 };
  s1 -> s1 [85, 65535] { R15017 += 1, R14973 += 1, R66 += 1 };
  s2 -> s1 [0, 83] { R15017 += 1, R14973 += 1, R66 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R15017 += 1, R14972 += 1, R14973 += 1 };
  s2 -> s3 [84, 84] { R15017 += 1, R14973 += 1, R66 += 1 };
  s2 -> s4 [84, 84] { R15017 += 1, R14973 += 1, R66 += 1 };
  s2 -> s1 [85, 65535] { R15017 += 1, R14973 += 1, R66 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R15017 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R15017 += 1 };
  s4 -> s4 [0, 65535] { R15017 += 1, R14973 += 1, R66 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15017 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 83] { R15019 += 1, R14975 += 1, R68 += 1 };
  s0 -> s2 [0, 65535] { R15019 += 1, R14974 += 1, R14975 += 1 };
  s0 -> s0 [0, 65535] { R15018 += 1, R15019 += 1 };
  s0 -> s3 [84, 84] { R15019 += 1, R14975 += 1, R68 += 1 };
  s0 -> s4 [84, 84] { R15019 += 1, R14975 += 1, R68 += 1 };
  s0 -> s1 [85, 65535] { R15019 += 1, R14975 += 1, R68 += 1 };
  s1 -> s1 [0, 83] { R15019 += 1, R14975 += 1, R68 += 1 };
  s1 -> s1 [0, 65535] { R15019 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [84, 84] { R15019 += 1, R14975 += 1, R68 += 1 };
  s1 -> s4 [84, 84] { R15019 += 1, R14975 += 1, R68 += 1 };
  s1 -> s1 [85, 65535] { R15019 += 1, R14975 += 1, R68 += 1 };
  s2 -> s1 [0, 83] { R15019 += 1, R14975 += 1, R68 += 1 };
  s2 -> s2 [0, 65535] { R15019 += 1, R14974 += 1, R14975 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [84, 84] { R15019 += 1, R14975 += 1, R68 += 1 };
  s2 -> s4 [84, 84] { R15019 += 1, R14975 += 1, R68 += 1 };
  s2 -> s1 [85, 65535] { R15019 += 1, R14975 += 1, R68 += 1 };
  s3 -> s3 [0, 65535] { R15019 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R15019 += 1, R14975 += 1, R68 += 1 };
  s4 -> s6 [0, 65535] { R15019 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15019 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 83] { R15021 += 1, R14977 += 1, R11523 += 1 };
  s0 -> s2 [0, 83] { R15021 += 1, R14977 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s3 [0, 65535] { R15021 += 1, R14976 += 1, R14977 += 1 };
  s0 -> s0 [0, 65535] { R15020 += 1, R15021 += 1 };
  s0 -> s4 [84, 84] { R15021 += 1, R14977 += 1, R11523 += 1 };
  s0 -> s5 [84, 84] { R15021 += 1, R14977 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s6 [84, 84] { R15021 += 1, R14977 += 1, R11523 += 1 };
  s0 -> s7 [84, 84] { R15021 += 1, R14977 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s2 [85, 65535] { R15021 += 1, R14977 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s1 [86, 65535] { R15021 += 1, R14977 += 1, R11523 += 1 };
  s1 -> s1 [0, 83] { R15021 += 1, R14977 += 1, R11523 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s1 [0, 65535] { R15021 += 1 };
  s1 -> s4 [84, 84] { R15021 += 1, R14977 += 1 };
  s1 -> s6 [84, 84] { R15021 += 1, R14977 += 1 };
  s1 -> s1 [85, 65535] { R15021 += 1, R14977 += 1 };
  s1 -> s1 [86, 65535] { R15021 += 1, R14977 += 1, R11523 += 1 };
  s2 -> s1 [0, 83] { R15021 += 1, R14977 += 1, R11523 += 1 };
  s2 -> s2 [0, 83] { R15021 += 1, R14977 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s4 [84, 84] { R15021 += 1, R14977 += 1, R11523 += 1 };
  s2 -> s5 [84, 84] { R15021 += 1, R14977 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s6 [84, 84] { R15021 += 1, R14977 += 1, R11523 += 1 };
  s2 -> s7 [84, 84] { R15021 += 1, R14977 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s2 [85, 65535] { R15021 += 1, R14977 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s1 [86, 65535] { R15021 += 1, R14977 += 1, R11523 += 1 };
  s3 -> s1 [0, 83] { R15021 += 1, R14977 += 1, R11523 += 1 };
  s3 -> s2 [0, 83] { R15021 += 1, R14977 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s3 [0, 65535] { R15021 += 1, R14976 += 1, R14977 += 1 };
  s3 -> s4 [84, 84] { R15021 += 1, R14977 += 1, R11523 += 1 };
  s3 -> s5 [84, 84] { R15021 += 1, R14977 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s6 [84, 84] { R15021 += 1, R14977 += 1, R11523 += 1 };
  s3 -> s7 [84, 84] { R15021 += 1, R14977 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s2 [85, 65535] { R15021 += 1, R14977 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s1 [86, 65535] { R15021 += 1, R14977 += 1, R11523 += 1 };
  s4 -> s4 [0, 84] { R15021 += 1, R14977 += 1, R11523 += 1 };
  s4 -> s4 [0, 65535] { R15021 += 1, R14977 += 1 };
  s4 -> s9 [0, 65535] { R15021 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [86, 65535] { R15021 += 1, R14977 += 1, R11523 += 1 };
  s5 -> s4 [0, 84] { R15021 += 1, R14977 += 1, R11523 += 1 };
  s5 -> s5 [0, 65535] { R15021 += 1, R14977 += 1, R11522 += 1, R11523 += 1 };
  s5 -> s4 [86, 65535] { R15021 += 1, R14977 += 1, R11523 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R15021 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R15021 += 1 };
  s9 -> s8 [0, 65535];
  accepting s4, s8, s9, s6, s1;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 83] { R15023 += 1, R14979 += 1, R11526 += 1, R11527 += 1 };
  s0 -> s0 [0, 65535] { R15022 += 1, R15023 += 1 };
  s0 -> s2 [0, 65535] { R15023 += 1, R14978 += 1, R14979 += 1 };
  s0 -> s3 [84, 84] { R15023 += 1, R14979 += 1, R11526 += 1, R11527 += 1 };
  s0 -> s4 [84, 84] { R15023 += 1, R14979 += 1, R11526 += 1, R11527 += 1 };
  s0 -> s1 [85, 65535] { R15023 += 1, R14979 += 1, R11526 += 1, R11527 += 1 };
  s1 -> s1 [0, 83] { R15023 += 1, R14979 += 1, R11526 += 1, R11527 += 1 };
  s1 -> s1 [0, 65535] { R15023 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [84, 84] { R15023 += 1, R14979 += 1, R11526 += 1, R11527 += 1 };
  s1 -> s4 [84, 84] { R15023 += 1, R14979 += 1, R11526 += 1, R11527 += 1 };
  s1 -> s1 [85, 65535] { R15023 += 1, R14979 += 1, R11526 += 1, R11527 += 1 };
  s2 -> s1 [0, 83] { R15023 += 1, R14979 += 1, R11526 += 1, R11527 += 1 };
  s2 -> s2 [0, 65535] { R15023 += 1, R14978 += 1, R14979 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [84, 84] { R15023 += 1, R14979 += 1, R11526 += 1, R11527 += 1 };
  s2 -> s4 [84, 84] { R15023 += 1, R14979 += 1, R11526 += 1, R11527 += 1 };
  s2 -> s1 [85, 65535] { R15023 += 1, R14979 += 1, R11526 += 1, R11527 += 1 };
  s3 -> s3 [0, 65535] { R15023 += 1, R14979 += 1, R11526 += 1, R11527 += 1 };
  s3 -> s6 [0, 65535] { R15023 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R15023 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15023 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 83] { R15025 += 1, R14981 += 1, R14072 += 1, R14073 += 1 };
  s0 -> s2 [0, 83] { R15025 += 1, R14981 += 1, R14073 += 1 };
  s0 -> s3 [0, 65535] { R15025 += 1, R14980 += 1, R14981 += 1 };
  s0 -> s0 [0, 65535] { R15024 += 1, R15025 += 1 };
  s0 -> s4 [84, 84] { R15025 += 1, R14981 += 1, R14072 += 1, R14073 += 1 };
  s0 -> s5 [84, 84] { R15025 += 1, R14981 += 1, R14072 += 1, R14073 += 1 };
  s0 -> s6 [84, 84] { R15025 += 1, R14981 += 1, R14073 += 1 };
  s0 -> s7 [84, 84] { R15025 += 1, R14981 += 1, R14073 += 1 };
  s0 -> s2 [85, 85] { R15025 += 1, R14981 += 1, R14073 += 1 };
  s0 -> s1 [85, 65535] { R15025 += 1, R14981 += 1, R14072 += 1, R14073 += 1 };
  s0 -> s2 [90, 65535] { R15025 += 1, R14981 += 1, R14073 += 1 };
  s1 -> s1 [0, 83] { R15025 += 1, R14981 += 1, R14072 += 1, R14073 += 1 };
  s1 -> s2 [0, 83] { R15025 += 1, R14981 += 1, R14073 += 1 };
  s1 -> s4 [84, 84] { R15025 += 1, R14981 += 1, R14072 += 1, R14073 += 1 };
  s1 -> s5 [84, 84] { R15025 += 1, R14981 += 1, R14072 += 1, R14073 += 1 };
  s1 -> s6 [84, 84] { R15025 += 1, R14981 += 1, R14073 += 1 };
  s1 -> s7 [84, 84] { R15025 += 1, R14981 += 1, R14073 += 1 };
  s1 -> s2 [85, 85] { R15025 += 1, R14981 += 1, R14073 += 1 };
  s1 -> s1 [85, 65535] { R15025 += 1, R14981 += 1, R14072 += 1, R14073 += 1 };
  s1 -> s2 [90, 65535] { R15025 += 1, R14981 += 1, R14073 += 1 };
  s2 -> s2 [0, 83] { R15025 += 1, R14981 += 1, R14073 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R15025 += 1 };
  s2 -> s6 [84, 84] { R15025 += 1, R14981 += 1, R14073 += 1 };
  s2 -> s7 [84, 84] { R15025 += 1, R14981 += 1, R14073 += 1 };
  s2 -> s2 [85, 85] { R15025 += 1, R14981 += 1, R14073 += 1 };
  s2 -> s2 [90, 65535] { R15025 += 1, R14981 += 1, R14073 += 1 };
  s3 -> s1 [0, 83] { R15025 += 1, R14981 += 1, R14072 += 1, R14073 += 1 };
  s3 -> s2 [0, 83] { R15025 += 1, R14981 += 1, R14073 += 1 };
  s3 -> s3 [0, 65535] { R15025 += 1, R14980 += 1, R14981 += 1 };
  s3 -> s4 [84, 84] { R15025 += 1, R14981 += 1, R14072 += 1, R14073 += 1 };
  s3 -> s5 [84, 84] { R15025 += 1, R14981 += 1, R14072 += 1, R14073 += 1 };
  s3 -> s6 [84, 84] { R15025 += 1, R14981 += 1, R14073 += 1 };
  s3 -> s7 [84, 84] { R15025 += 1, R14981 += 1, R14073 += 1 };
  s3 -> s2 [85, 85] { R15025 += 1, R14981 += 1, R14073 += 1 };
  s3 -> s1 [85, 65535] { R15025 += 1, R14981 += 1, R14072 += 1, R14073 += 1 };
  s3 -> s2 [90, 65535] { R15025 += 1, R14981 += 1, R14073 += 1 };
  s5 -> s7 [0, 85] { R15025 += 1, R14981 += 1, R14073 += 1 };
  s5 -> s5 [0, 65535] { R15025 += 1, R14981 += 1, R14072 += 1, R14073 += 1 };
  s5 -> s7 [90, 65535] { R15025 += 1, R14981 += 1, R14073 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R15025 += 1 };
  s7 -> s7 [0, 85] { R15025 += 1, R14981 += 1, R14073 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R15025 += 1 };
  s7 -> s7 [90, 65535] { R15025 += 1, R14981 += 1, R14073 += 1 };
  s8 -> s8 [0, 65535];
  accepting s2, s6, s7, s8;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 83] { R15027 += 1, R14983 += 1, R14920 += 1, R14921 += 1 };
  s0 -> s2 [0, 83] { R15027 += 1, R14983 += 1, R14921 += 1, R14922 += 1 };
  s0 -> s3 [0, 65535] { R15027 += 1, R14982 += 1, R14983 += 1 };
  s0 -> s0 [0, 65535] { R15026 += 1, R15027 += 1 };
  s0 -> s4 [84, 84] { R15027 += 1, R14983 += 1, R14921 += 1, R14922 += 1 };
  s0 -> s5 [84, 84] { R15027 += 1, R14983 += 1, R14920 += 1, R14921 += 1 };
  s0 -> s6 [84, 84] { R15027 += 1, R14983 += 1, R14920 += 1, R14921 += 1 };
  s0 -> s7 [84, 84] { R15027 += 1, R14983 += 1, R14921 += 1, R14922 += 1 };
  s0 -> s1 [85, 65535] { R15027 += 1, R14983 += 1, R14920 += 1, R14921 += 1 };
  s0 -> s2 [85, 65535] { R15027 += 1, R14983 += 1, R14921 += 1, R14922 += 1 };
  s1 -> s1 [0, 83] { R15027 += 1, R14983 += 1, R14920 += 1, R14921 += 1 };
  s1 -> s2 [0, 83] { R15027 += 1, R14983 += 1, R14921 += 1, R14922 += 1 };
  s1 -> s4 [84, 84] { R15027 += 1, R14983 += 1, R14921 += 1, R14922 += 1 };
  s1 -> s5 [84, 84] { R15027 += 1, R14983 += 1, R14920 += 1, R14921 += 1 };
  s1 -> s6 [84, 84] { R15027 += 1, R14983 += 1, R14920 += 1, R14921 += 1 };
  s1 -> s7 [84, 84] { R15027 += 1, R14983 += 1, R14921 += 1, R14922 += 1 };
  s1 -> s1 [85, 65535] { R15027 += 1, R14983 += 1, R14920 += 1, R14921 += 1 };
  s1 -> s2 [85, 65535] { R15027 += 1, R14983 += 1, R14921 += 1, R14922 += 1 };
  s2 -> s11 [0, 83] { R15027 += 1, R14983 += 1 };
  s2 -> s2 [0, 83] { R15027 += 1, R14983 += 1, R14921 += 1, R14922 += 1 };
  s2 -> s4 [84, 84] { R15027 += 1, R14983 += 1, R14921 += 1, R14922 += 1 };
  s2 -> s8 [84, 84] { R15027 += 1, R14983 += 1 };
  s2 -> s7 [84, 84] { R15027 += 1, R14983 += 1, R14921 += 1, R14922 += 1 };
  s2 -> s12 [84, 84] { R15027 += 1, R14983 += 1 };
  s2 -> s11 [85, 65535] { R15027 += 1, R14983 += 1 };
  s2 -> s2 [85, 65535] { R15027 += 1, R14983 += 1, R14921 += 1, R14922 += 1 };
  s3 -> s1 [0, 83] { R15027 += 1, R14983 += 1, R14920 += 1, R14921 += 1 };
  s3 -> s2 [0, 83] { R15027 += 1, R14983 += 1, R14921 += 1, R14922 += 1 };
  s3 -> s3 [0, 65535] { R15027 += 1, R14982 += 1, R14983 += 1 };
  s3 -> s4 [84, 84] { R15027 += 1, R14983 += 1, R14921 += 1, R14922 += 1 };
  s3 -> s5 [84, 84] { R15027 += 1, R14983 += 1, R14920 += 1, R14921 += 1 };
  s3 -> s6 [84, 84] { R15027 += 1, R14983 += 1, R14920 += 1, R14921 += 1 };
  s3 -> s7 [84, 84] { R15027 += 1, R14983 += 1, R14921 += 1, R14922 += 1 };
  s3 -> s1 [85, 65535] { R15027 += 1, R14983 += 1, R14920 += 1, R14921 += 1 };
  s3 -> s2 [85, 65535] { R15027 += 1, R14983 += 1, R14921 += 1, R14922 += 1 };
  s5 -> s5 [0, 65535] { R15027 += 1, R14983 += 1, R14920 += 1, R14921 += 1 };
  s5 -> s7 [0, 65535] { R15027 += 1, R14983 += 1, R14921 += 1, R14922 += 1 };
  s7 -> s8 [0, 65535] { R15027 += 1, R14983 += 1 };
  s7 -> s7 [0, 65535] { R15027 += 1, R14983 += 1, R14921 += 1, R14922 += 1 };
  s8 -> s8 [0, 65535] { R15027 += 1, R14983 += 1 };
  s8 -> s9 [0, 65535] { R15027 += 1 };
  s8 -> s10 [0, 65535];
  s9 -> s9 [0, 65535] { R15027 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  s11 -> s11 [0, 83] { R15027 += 1, R14983 += 1 };
  s11 -> s11 [0, 65535] { R15027 += 1 };
  s11 -> s10 [0, 65535];
  s11 -> s8 [84, 84] { R15027 += 1, R14983 += 1 };
  s11 -> s12 [84, 84] { R15027 += 1, R14983 += 1 };
  s11 -> s11 [85, 65535] { R15027 += 1, R14983 += 1 };
  s12 -> s10 [0, 65535];
  s12 -> s12 [0, 65535] { R15027 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 83] { R15029 += 1, R14985 += 1, R14926 += 1, R14927 += 1 };
  s0 -> s2 [0, 65535] { R15029 += 1, R14984 += 1, R14985 += 1 };
  s0 -> s0 [0, 65535] { R15028 += 1, R15029 += 1 };
  s0 -> s3 [84, 84] { R15029 += 1, R14985 += 1, R14926 += 1, R14927 += 1 };
  s0 -> s4 [84, 84] { R15029 += 1, R14985 += 1, R14926 += 1, R14927 += 1 };
  s0 -> s1 [85, 65535] { R15029 += 1, R14985 += 1, R14926 += 1, R14927 += 1 };
  s1 -> s1 [0, 83] { R15029 += 1, R14985 += 1, R14926 += 1, R14927 += 1 };
  s1 -> s1 [0, 65535] { R15029 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [84, 84] { R15029 += 1, R14985 += 1, R14926 += 1, R14927 += 1 };
  s1 -> s4 [84, 84] { R15029 += 1, R14985 += 1, R14926 += 1, R14927 += 1 };
  s1 -> s1 [85, 65535] { R15029 += 1, R14985 += 1, R14926 += 1, R14927 += 1 };
  s2 -> s1 [0, 83] { R15029 += 1, R14985 += 1, R14926 += 1, R14927 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R15029 += 1, R14984 += 1, R14985 += 1 };
  s2 -> s3 [84, 84] { R15029 += 1, R14985 += 1, R14926 += 1, R14927 += 1 };
  s2 -> s4 [84, 84] { R15029 += 1, R14985 += 1, R14926 += 1, R14927 += 1 };
  s2 -> s1 [85, 65535] { R15029 += 1, R14985 += 1, R14926 += 1, R14927 += 1 };
  s3 -> s3 [0, 65535] { R15029 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R15029 += 1 };
  s4 -> s4 [0, 65535] { R15029 += 1, R14985 += 1, R14926 += 1, R14927 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15029 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [116, 116];
  accepting s1;
};
};
synchronised {  // Automata constraining P62
automaton P62_0 {
  init s0;
  s0 -> s1 [117, 117];
  accepting s1;
};
};
constraint R1 = R14945 && R2 = R15029 && R20 - R15029 = -1 && R21 = R15029 && R22 - R15029 = -1 && R23 = R15029 && R24 = 0 && R25 = 1 && R26 = 0 && R27 = 1 && R38 + R67 + R66 + -1*R14075 + -1*R14073 - R53 = 0 && R52 + R14074 + R14072 = 0 && R14944 = 0 && R14970 = 0 && R14971 = 0 && R14976 = 0 && R14977 = 0 && R14980 = 0 && R14981 = 0 && R14982 = 0 && R14983 = 0 && R14986 = 0 && R14987 = R15029 && R14988 = 0 && R14989 = R15029 && R14990 = 0 && R14991 = R15029 && R14992 = 0 && R14993 = R15029 && R14994 = 0 && R14995 = R15029 && R14996 = 0 && R14997 = R15029 && R14998 = 0 && R14999 = R15029 && R15000 = 0 && R15001 = R15029 && R15002 = 0 && R15003 = R15029 && R15004 = 0 && R15005 = R15029 && R15006 = 0 && R15007 = R15029 && R15008 = 0 && R15009 = R15029 && R15010 = 0 && R15011 = R15029 && R15012 = 0 && R15013 = R15029 && R15014 = 0 && R15015 = R15029 && R15016 = 0 && R15017 = R15029 && R15018 = 0 && R15019 = R15029 && R15020 = 0 && R15021 = R15029 && R15022 = 0 && R15023 = R15029 && R15024 = 0 && R15025 = R15029 && R15026 = 0 && R15027 = R15029 && R15028 = 0 && R8 < 1 && R11 < 1 && R12 < 1 && R40 + R69 + R68 < 1 && -1*R14075 + -1*R14073 - R53 < 1 && -1 < R14945 && 0 < R15029 && (R48 + R11531 + R11528 != 0 || ((R42 + R11524 + R11522 != 0 || R43 + R11525 + R11523 + -1*R14075 + -1*R14073 - R53 = 0 || R53 + R14075 + R14073 < 1) && (R42 + R11524 + R11522 = 0 || R53 + R14075 + R14073 < 1))) && (R48 + R11531 + R11528 != 0 || ((R46 + R11529 + R11526 != 0 || R47 + R11530 + R11527 + -1*R14075 + -1*R14073 - R53 = 0 || R53 + R14075 + R14073 < 1) && (R46 + R11529 + R11526 = 0 || R53 + R14075 + R14073 < 1))) && (R14930 != 0 || R14931 = R14945 || (R17 = 0 && R14945 = 0)) && (R14932 != 0 || R14933 = R14945 || (R17 = 0 && R14945 = 0)) && (R14934 != 0 || R14935 = R14945 || (R17 = 0 && R14945 = 0)) && (R14936 != 0 || R14937 = R14945 || (R17 = 0 && R14945 = 0)) && (R14938 != 0 || R14939 = R14945 || (R17 = 0 && R14945 = 0)) && (R14940 != 0 || R14941 = R14945 || (R17 = 0 && R14945 = 0)) && (R14942 != 0 || R14943 = R14945 || (R17 = 0 && R14945 = 0)) && (R14946 != 0 || R14945 = R14947 || (R17 = 0 && R14945 = 0)) && (R14948 != 0 || R14945 = R14949 || (R17 = 0 && R14945 = 0)) && (R18 = 0 || (R14968 = 0 && R14969 = 0)) && (R18 = 0 || (R14972 = 0 && R14973 = 0)) && (R18 = 0 || (R14974 = 0 && R14975 = 0)) && (R18 = 0 || (R14978 = 0 && R14979 = 0)) && (R18 = 0 || (R14984 = 0 && R14985 = 0)) && (R19 = 0 || (R14950 = 0 && R14951 = 0)) && (R19 = 0 || (R14952 = 0 && R14953 = 0)) && (R19 = 0 || (R14954 = 0 && R14955 = 0)) && (R19 = 0 || (R14956 = 0 && R14957 = 0)) && (R19 = 0 || (R14958 = 0 && R14959 = 0)) && (R19 = 0 || (R14960 = 0 && R14961 = 0)) && (R19 = 0 || (R14962 = 0 && R14963 = 0)) && (R19 = 0 || (R14964 = 0 && R14965 = 0)) && (R19 = 0 || (R14966 = 0 && R14967 = 0)) && (R48 + R11531 + R11528 = 0 || (R42 + R11524 + R11522 = 0 && R43 + R11525 + R11523 + -1*R14075 + -1*R14073 - R53 = 0)) && (R48 + R11531 + R11528 = 0 || (R46 + R11529 + R11526 = 0 && R47 + R11530 + R11527 + -1*R14075 + -1*R14073 - R53 = 0)) && (R58 + R14925 + R14922 = 0 || (R56 + R14923 + R14920 = 0 && R57 + R14924 + R14921 = 0)) && (R58 + R14925 + R14922 = 0 || (R62 + R14928 + R14926 = 0 && R63 + R14929 + R14927 = 0)) && (R14930 = 0 || (R17 = 0 && R14945 = 0)) && (R14932 = 0 || (R17 = 0 && R14945 = 0)) && (R14934 = 0 || (R17 = 0 && R14945 = 0)) && (R14936 = 0 || (R17 = 0 && R14945 = 0)) && (R14938 = 0 || (R17 = 0 && R14945 = 0)) && (R14940 = 0 || (R17 = 0 && R14945 = 0)) && (R14942 = 0 || (R17 = 0 && R14945 = 0)) && (R14946 = 0 || (R17 = 0 && R14945 = 0)) && (R14948 = 0 || (R17 = 0 && R14945 = 0));
// End of Parikh automata intersection problem
