// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R12, R17, R18, R19, R194, R195, R196, R197, R198, R199, R2, R20, R200, R201, R202, R203, R204, R205, R206, R207, R208, R209, R21, R210, R211, R212, R213, R214, R215, R216, R217, R218, R219, R22, R220, R221, R222, R223, R224, R225, R226, R227, R228, R229, R23, R230, R231, R232, R233, R234, R235, R236, R237, R238, R239, R24, R240, R241, R242, R243, R244, R245, R246, R247, R248, R249, R25, R250, R251, R252, R253, R254, R255, R256, R257, R258, R259, R26, R260, R261, R262, R263, R264, R265, R266, R267, R268, R269, R27, R270, R271, R272, R273, R274, R275, R276, R277, R278, R279, R280, R281, R282, R283, R284, R285, R286, R287, R288, R289, R290, R291, R292, R293, R294, R295, R296, R297, R3, R38, R4, R40, R42, R43, R46, R47, R48, R52, R53, R56, R57, R58, R62, R63, R66, R67, R68, R69, R70, R71, R72, R73, R74, R75, R76, R77, R78, R79, R8, R80, R81, R82, R83, R84, R85, R86, R87, R88, R89;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [84, 84];
  s0 -> s0 [85, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [84, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R2 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R11 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 83];
  s0 -> s0 [0, 65535] { R12 += 1 };
  s0 -> s2 [84, 84];
  s0 -> s1 [85, 65535];
  s1 -> s1 [0, 83];
  s1 -> s2 [84, 84];
  s1 -> s1 [85, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R21 += 1 };
  s0 -> s0 [0, 65535] { R20 += 1, R21 += 1 };
  s0 -> s2 [9, 13] { R21 += 1 };
  s0 -> s1 [14, 31] { R21 += 1 };
  s0 -> s2 [32, 32] { R21 += 1 };
  s0 -> s1 [33, 65535] { R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R21 += 1 };
  s2 -> s1 [0, 65535] { R21 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R22 += 1, R23 += 1 };
  s1 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R25 += 1 };
  s0 -> s0 [0, 65535] { R24 += 1, R25 += 1 };
  s0 -> s2 [9, 13] { R25 += 1 };
  s0 -> s1 [14, 31] { R25 += 1 };
  s0 -> s2 [32, 32] { R25 += 1 };
  s0 -> s1 [33, 65535] { R25 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R25 += 1 };
  s2 -> s1 [0, 65535] { R25 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R26 += 1, R27 += 1 };
  s0 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R218 += 1, R219 += 1 };
  s0 -> s1 [0, 65535] { R219 += 1, R19 += 1 };
  s1 -> s1 [0, 65535] { R219 += 1, R19 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 83] { R221 += 1 };
  s0 -> s0 [0, 65535] { R220 += 1, R221 += 1 };
  s0 -> s2 [84, 84] { R221 += 1 };
  s0 -> s3 [84, 84] { R221 += 1 };
  s0 -> s1 [86, 65535] { R221 += 1 };
  s1 -> s1 [0, 83] { R221 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R221 += 1 };
  s1 -> s3 [84, 84] { R221 += 1 };
  s1 -> s1 [86, 65535] { R221 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 84] { R221 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [86, 65535] { R221 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 83] { R223 += 1, R38 += 1 };
  s0 -> s0 [0, 65535] { R222 += 1, R223 += 1 };
  s0 -> s2 [84, 84] { R223 += 1, R38 += 1 };
  s0 -> s3 [84, 84] { R223 += 1, R38 += 1 };
  s0 -> s1 [85, 65535] { R223 += 1, R38 += 1 };
  s1 -> s1 [0, 83] { R223 += 1, R38 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R223 += 1, R38 += 1 };
  s1 -> s3 [84, 84] { R223 += 1, R38 += 1 };
  s1 -> s1 [85, 65535] { R223 += 1, R38 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R223 += 1, R38 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 83] { R225 += 1, R40 += 1 };
  s0 -> s0 [0, 65535] { R224 += 1, R225 += 1 };
  s0 -> s2 [84, 84] { R225 += 1, R40 += 1 };
  s0 -> s3 [84, 84] { R225 += 1, R40 += 1 };
  s0 -> s1 [85, 65535] { R225 += 1, R40 += 1 };
  s1 -> s1 [0, 83] { R225 += 1, R40 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R225 += 1, R40 += 1 };
  s1 -> s3 [84, 84] { R225 += 1, R40 += 1 };
  s1 -> s1 [85, 65535] { R225 += 1, R40 += 1 };
  s2 -> s2 [0, 65535] { R225 += 1, R40 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 83] { R227 += 1, R42 += 1, R43 += 1 };
  s0 -> s0 [0, 65535] { R226 += 1, R227 += 1 };
  s0 -> s2 [84, 84] { R227 += 1, R42 += 1, R43 += 1 };
  s0 -> s3 [84, 84] { R227 += 1, R42 += 1, R43 += 1 };
  s0 -> s1 [85, 65535] { R227 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 83] { R227 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R227 += 1, R42 += 1, R43 += 1 };
  s1 -> s3 [84, 84] { R227 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [85, 65535] { R227 += 1, R42 += 1, R43 += 1 };
  s2 -> s2 [0, 65535] { R227 += 1, R42 += 1, R43 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 83] { R229 += 1, R46 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R228 += 1, R229 += 1 };
  s0 -> s2 [84, 84] { R229 += 1, R46 += 1, R47 += 1 };
  s0 -> s3 [84, 84] { R229 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [85, 65535] { R229 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 83] { R229 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R229 += 1, R46 += 1, R47 += 1 };
  s1 -> s3 [84, 84] { R229 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [85, 65535] { R229 += 1, R46 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R229 += 1, R46 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 83] { R231 += 1, R52 += 1, R53 += 1 };
  s0 -> s0 [0, 65535] { R230 += 1, R231 += 1 };
  s0 -> s2 [84, 84] { R231 += 1, R52 += 1, R53 += 1 };
  s0 -> s3 [84, 84] { R231 += 1, R52 += 1, R53 += 1 };
  s0 -> s1 [85, 65535] { R231 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 83] { R231 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R231 += 1, R52 += 1, R53 += 1 };
  s1 -> s3 [84, 84] { R231 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [85, 65535] { R231 += 1, R52 += 1, R53 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R231 += 1, R52 += 1, R53 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 83] { R233 += 1, R56 += 1, R57 += 1 };
  s0 -> s0 [0, 65535] { R232 += 1, R233 += 1 };
  s0 -> s2 [84, 84] { R233 += 1, R56 += 1, R57 += 1 };
  s0 -> s3 [84, 84] { R233 += 1, R56 += 1, R57 += 1 };
  s0 -> s1 [85, 65535] { R233 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 83] { R233 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R233 += 1, R56 += 1, R57 += 1 };
  s1 -> s3 [84, 84] { R233 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [85, 65535] { R233 += 1, R56 += 1, R57 += 1 };
  s2 -> s2 [0, 65535] { R233 += 1, R56 += 1, R57 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 83] { R235 += 1, R62 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R234 += 1, R235 += 1 };
  s0 -> s2 [84, 84] { R235 += 1, R62 += 1, R63 += 1 };
  s0 -> s3 [84, 84] { R235 += 1, R62 += 1, R63 += 1 };
  s0 -> s1 [85, 65535] { R235 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 83] { R235 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R235 += 1, R62 += 1, R63 += 1 };
  s1 -> s3 [84, 84] { R235 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [85, 65535] { R235 += 1, R62 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R235 += 1, R62 += 1, R63 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 83] { R255 += 1 };
  s0 -> s0 [0, 65535] { R254 += 1, R255 += 1 };
  s0 -> s2 [84, 84] { R255 += 1 };
  s0 -> s1 [85, 65535] { R255 += 1 };
  s1 -> s1 [0, 83] { R255 += 1 };
  s1 -> s2 [84, 84] { R255 += 1 };
  s1 -> s1 [85, 65535] { R255 += 1 };
  s2 -> s2 [0, 65535] { R255 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R256 += 1, R257 += 1 };
  s0 -> s1 [0, 65535] { R257 += 1, R1 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R257 += 1, R1 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 83] { R259 += 1 };
  s0 -> s0 [0, 65535] { R258 += 1, R259 += 1 };
  s0 -> s2 [0, 65535] { R259 += 1, R8 += 1 };
  s0 -> s3 [84, 84] { R259 += 1 };
  s0 -> s1 [85, 65535] { R259 += 1 };
  s1 -> s1 [0, 83] { R259 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [84, 84] { R259 += 1 };
  s1 -> s1 [85, 65535] { R259 += 1 };
  s2 -> s1 [0, 83] { R259 += 1 };
  s2 -> s2 [0, 65535] { R259 += 1, R8 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [84, 84] { R259 += 1 };
  s2 -> s1 [85, 65535] { R259 += 1 };
  s3 -> s3 [0, 65535] { R259 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 83] { R261 += 1, R199 += 1 };
  s0 -> s0 [0, 65535] { R260 += 1, R261 += 1 };
  s0 -> s2 [0, 65535] { R261 += 1, R198 += 1, R199 += 1 };
  s0 -> s1 [85, 65535] { R261 += 1, R199 += 1 };
  s1 -> s1 [0, 83] { R261 += 1, R199 += 1 };
  s1 -> s1 [0, 65535] { R261 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [85, 65535] { R261 += 1, R199 += 1 };
  s2 -> s1 [0, 83] { R261 += 1, R199 += 1 };
  s2 -> s2 [0, 65535] { R261 += 1, R198 += 1, R199 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [85, 65535] { R261 += 1, R199 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R263 += 1, R200 += 1, R201 += 1 };
  s0 -> s2 [0, 65535] { R263 += 1, R201 += 1, R17 += 1 };
  s0 -> s0 [0, 65535] { R262 += 1, R263 += 1 };
  s1 -> s1 [0, 65535] { R263 += 1, R200 += 1, R201 += 1 };
  s1 -> s2 [0, 65535] { R263 += 1, R201 += 1, R17 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R263 += 1, R201 += 1, R17 += 1 };
  s2 -> s3 [0, 65535] { R263 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R263 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 65535] { R265 += 1, R203 += 1 };
  s0 -> s0 [0, 65535] { R264 += 1, R265 += 1 };
  s0 -> s2 [0, 65535] { R265 += 1, R202 += 1, R203 += 1 };
  s1 -> s1 [0, 65535] { R265 += 1, R203 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R265 += 1 };
  s2 -> s1 [0, 65535] { R265 += 1, R203 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R265 += 1, R202 += 1, R203 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R265 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R266 += 1, R267 += 1 };
  s0 -> s1 [0, 65535] { R267 += 1, R205 += 1, R67 += 1 };
  s0 -> s2 [0, 65535] { R267 += 1, R204 += 1, R205 += 1 };
  s1 -> s1 [0, 65535] { R267 += 1, R205 += 1, R67 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R267 += 1 };
  s2 -> s1 [0, 65535] { R267 += 1, R205 += 1, R67 += 1 };
  s2 -> s2 [0, 65535] { R267 += 1, R204 += 1, R205 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R267 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 84] { R269 += 1, R207 += 1 };
  s0 -> s2 [0, 65535] { R269 += 1, R206 += 1, R207 += 1 };
  s0 -> s0 [0, 65535] { R268 += 1, R269 += 1 };
  s0 -> s3 [0, 65535] { R269 += 1, R207 += 1, R69 += 1 };
  s0 -> s1 [86, 65535] { R269 += 1, R207 += 1 };
  s1 -> s1 [0, 84] { R269 += 1, R207 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R269 += 1 };
  s1 -> s1 [86, 65535] { R269 += 1, R207 += 1 };
  s2 -> s1 [0, 84] { R269 += 1, R207 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R269 += 1, R206 += 1, R207 += 1 };
  s2 -> s3 [0, 65535] { R269 += 1, R207 += 1, R69 += 1 };
  s2 -> s1 [86, 65535] { R269 += 1, R207 += 1 };
  s3 -> s1 [0, 84] { R269 += 1, R207 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R269 += 1 };
  s3 -> s3 [0, 65535] { R269 += 1, R207 += 1, R69 += 1 };
  s3 -> s1 [86, 65535] { R269 += 1, R207 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R269 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 84] { R271 += 1, R209 += 1, R73 += 1 };
  s0 -> s2 [0, 65535] { R271 += 1, R208 += 1, R209 += 1 };
  s0 -> s0 [0, 65535] { R270 += 1, R271 += 1 };
  s0 -> s3 [0, 65535] { R271 += 1, R209 += 1, R72 += 1, R73 += 1 };
  s0 -> s1 [86, 65535] { R271 += 1, R209 += 1, R73 += 1 };
  s1 -> s1 [0, 84] { R271 += 1, R209 += 1, R73 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R271 += 1, R209 += 1 };
  s1 -> s5 [0, 65535] { R271 += 1 };
  s1 -> s1 [86, 65535] { R271 += 1, R209 += 1, R73 += 1 };
  s2 -> s1 [0, 84] { R271 += 1, R209 += 1, R73 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R271 += 1, R208 += 1, R209 += 1 };
  s2 -> s3 [0, 65535] { R271 += 1, R209 += 1, R72 += 1, R73 += 1 };
  s2 -> s1 [86, 65535] { R271 += 1, R209 += 1, R73 += 1 };
  s3 -> s1 [0, 84] { R271 += 1, R209 += 1, R73 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R271 += 1 };
  s3 -> s3 [0, 65535] { R271 += 1, R209 += 1, R72 += 1, R73 += 1 };
  s3 -> s1 [86, 65535] { R271 += 1, R209 += 1, R73 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R271 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R272 += 1, R273 += 1 };
  s0 -> s1 [0, 65535] { R273 += 1, R210 += 1, R211 += 1 };
  s0 -> s2 [0, 65535] { R273 += 1, R211 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [0, 65535] { R273 += 1, R211 += 1, R78 += 1, R79 += 1 };
  s1 -> s1 [0, 65535] { R273 += 1, R210 += 1, R211 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s2 [0, 65535] { R273 += 1, R211 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [0, 65535] { R273 += 1, R211 += 1, R78 += 1, R79 += 1 };
  s2 -> s4 [0, 65535] { R273 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R273 += 1, R211 += 1, R77 += 1, R78 += 1 };
  s2 -> s3 [0, 65535] { R273 += 1, R211 += 1, R78 += 1, R79 += 1 };
  s3 -> s4 [0, 65535] { R273 += 1 };
  s3 -> s5 [0, 65535] { R273 += 1, R211 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R273 += 1, R211 += 1, R78 += 1, R79 += 1 };
  s4 -> s4 [0, 65535] { R273 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s4 [0, 65535] { R273 += 1 };
  s5 -> s5 [0, 65535] { R273 += 1, R211 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 85] { R275 += 1, R213 += 1, R83 += 1 };
  s0 -> s1 [0, 65535] { R275 += 1, R213 += 1 };
  s0 -> s0 [0, 65535] { R274 += 1, R275 += 1 };
  s0 -> s2 [0, 65535] { R275 += 1, R212 += 1, R213 += 1 };
  s0 -> s1 [89, 65535] { R275 += 1, R213 += 1, R83 += 1 };
  s1 -> s1 [0, 85] { R275 += 1, R213 += 1, R83 += 1 };
  s1 -> s1 [0, 65535] { R275 += 1, R213 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R275 += 1 };
  s1 -> s1 [89, 65535] { R275 += 1, R213 += 1, R83 += 1 };
  s2 -> s1 [0, 85] { R275 += 1, R213 += 1, R83 += 1 };
  s2 -> s1 [0, 65535] { R275 += 1, R213 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R275 += 1, R212 += 1, R213 += 1 };
  s2 -> s1 [89, 65535] { R275 += 1, R213 += 1, R83 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R275 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R277 += 1, R215 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R276 += 1, R277 += 1 };
  s0 -> s2 [0, 65535] { R277 += 1, R215 += 1, R88 += 1, R89 += 1 };
  s0 -> s3 [0, 65535] { R277 += 1, R214 += 1, R215 += 1 };
  s1 -> s1 [0, 65535] { R277 += 1, R215 += 1, R87 += 1, R88 += 1 };
  s1 -> s6 [0, 65535] { R277 += 1 };
  s1 -> s2 [0, 65535] { R277 += 1, R215 += 1, R88 += 1, R89 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R277 += 1, R215 += 1 };
  s2 -> s6 [0, 65535] { R277 += 1 };
  s2 -> s2 [0, 65535] { R277 += 1, R215 += 1, R88 += 1, R89 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R277 += 1, R215 += 1, R87 += 1, R88 += 1 };
  s3 -> s2 [0, 65535] { R277 += 1, R215 += 1, R88 += 1, R89 += 1 };
  s3 -> s3 [0, 65535] { R277 += 1, R214 += 1, R215 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R277 += 1, R215 += 1 };
  s5 -> s6 [0, 65535] { R277 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R277 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 84] { R279 += 1, R217 += 1, R197 += 1 };
  s0 -> s2 [0, 65535] { R279 += 1, R216 += 1, R217 += 1 };
  s0 -> s1 [0, 65535] { R279 += 1, R217 += 1 };
  s0 -> s0 [0, 65535] { R278 += 1, R279 += 1 };
  s0 -> s3 [85, 85] { R279 += 1, R217 += 1, R197 += 1 };
  s0 -> s4 [85, 85] { R279 += 1, R217 += 1, R197 += 1 };
  s0 -> s1 [90, 65535] { R279 += 1, R217 += 1, R197 += 1 };
  s1 -> s1 [0, 84] { R279 += 1, R217 += 1, R197 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R279 += 1, R217 += 1 };
  s1 -> s6 [0, 65535] { R279 += 1 };
  s1 -> s3 [85, 85] { R279 += 1, R217 += 1, R197 += 1 };
  s1 -> s4 [85, 85] { R279 += 1, R217 += 1, R197 += 1 };
  s1 -> s1 [90, 65535] { R279 += 1, R217 += 1, R197 += 1 };
  s2 -> s1 [0, 84] { R279 += 1, R217 += 1, R197 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R279 += 1, R216 += 1, R217 += 1 };
  s2 -> s1 [0, 65535] { R279 += 1, R217 += 1 };
  s2 -> s3 [85, 85] { R279 += 1, R217 += 1, R197 += 1 };
  s2 -> s4 [85, 85] { R279 += 1, R217 += 1, R197 += 1 };
  s2 -> s1 [90, 65535] { R279 += 1, R217 += 1, R197 += 1 };
  s3 -> s3 [0, 85] { R279 += 1, R217 += 1, R197 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R279 += 1, R217 += 1 };
  s3 -> s6 [0, 65535] { R279 += 1 };
  s3 -> s3 [90, 65535] { R279 += 1, R217 += 1, R197 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R279 += 1, R217 += 1 };
  s4 -> s6 [0, 65535] { R279 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R279 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R281 += 1, R237 += 1, R18 += 1 };
  s0 -> s0 [0, 65535] { R280 += 1, R281 += 1 };
  s0 -> s2 [0, 65535] { R281 += 1, R236 += 1, R237 += 1 };
  s1 -> s1 [0, 65535] { R281 += 1, R237 += 1, R18 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R281 += 1 };
  s2 -> s1 [0, 65535] { R281 += 1, R237 += 1, R18 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R281 += 1, R236 += 1, R237 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R281 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 83] { R283 += 1, R239 += 1 };
  s0 -> s2 [0, 65535] { R283 += 1, R238 += 1, R239 += 1 };
  s0 -> s0 [0, 65535] { R282 += 1, R283 += 1 };
  s0 -> s3 [84, 84] { R283 += 1, R239 += 1 };
  s0 -> s4 [84, 84] { R283 += 1, R239 += 1 };
  s0 -> s5 [85, 85] { R283 += 1, R239 += 1 };
  s0 -> s1 [86, 65535] { R283 += 1, R239 += 1 };
  s1 -> s1 [0, 83] { R283 += 1, R239 += 1 };
  s1 -> s3 [84, 84] { R283 += 1, R239 += 1 };
  s1 -> s4 [84, 84] { R283 += 1, R239 += 1 };
  s1 -> s5 [85, 85] { R283 += 1, R239 += 1 };
  s1 -> s1 [86, 65535] { R283 += 1, R239 += 1 };
  s2 -> s1 [0, 83] { R283 += 1, R239 += 1 };
  s2 -> s2 [0, 65535] { R283 += 1, R238 += 1, R239 += 1 };
  s2 -> s3 [84, 84] { R283 += 1, R239 += 1 };
  s2 -> s4 [84, 84] { R283 += 1, R239 += 1 };
  s2 -> s5 [85, 85] { R283 += 1, R239 += 1 };
  s2 -> s1 [86, 65535] { R283 += 1, R239 += 1 };
  s4 -> s4 [0, 84] { R283 += 1, R239 += 1 };
  s4 -> s7 [85, 85] { R283 += 1, R239 += 1 };
  s4 -> s4 [86, 65535] { R283 += 1, R239 += 1 };
  s5 -> s5 [0, 83] { R283 += 1, R239 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R283 += 1 };
  s5 -> s7 [84, 84] { R283 += 1, R239 += 1 };
  s5 -> s8 [84, 84] { R283 += 1, R239 += 1 };
  s5 -> s5 [85, 65535] { R283 += 1, R239 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s9 [0, 65535] { R283 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R283 += 1, R239 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R283 += 1 };
  s9 -> s9 [0, 65535] { R283 += 1 };
  s9 -> s6 [0, 65535];
  accepting s8, s5, s9, s6, s7;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 83] { R285 += 1, R241 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R284 += 1, R285 += 1 };
  s0 -> s2 [0, 65535] { R285 += 1, R240 += 1, R241 += 1 };
  s0 -> s3 [84, 84] { R285 += 1, R241 += 1, R66 += 1 };
  s0 -> s4 [84, 84] { R285 += 1, R241 += 1, R66 += 1 };
  s0 -> s1 [85, 65535] { R285 += 1, R241 += 1, R66 += 1 };
  s1 -> s1 [0, 83] { R285 += 1, R241 += 1, R66 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R285 += 1 };
  s1 -> s3 [84, 84] { R285 += 1, R241 += 1, R66 += 1 };
  s1 -> s4 [84, 84] { R285 += 1, R241 += 1, R66 += 1 };
  s1 -> s1 [85, 65535] { R285 += 1, R241 += 1, R66 += 1 };
  s2 -> s1 [0, 83] { R285 += 1, R241 += 1, R66 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R285 += 1, R240 += 1, R241 += 1 };
  s2 -> s3 [84, 84] { R285 += 1, R241 += 1, R66 += 1 };
  s2 -> s4 [84, 84] { R285 += 1, R241 += 1, R66 += 1 };
  s2 -> s1 [85, 65535] { R285 += 1, R241 += 1, R66 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R285 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R285 += 1 };
  s4 -> s4 [0, 65535] { R285 += 1, R241 += 1, R66 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R285 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 83] { R287 += 1, R243 += 1, R68 += 1 };
  s0 -> s2 [0, 65535] { R287 += 1, R242 += 1, R243 += 1 };
  s0 -> s0 [0, 65535] { R286 += 1, R287 += 1 };
  s0 -> s3 [84, 84] { R287 += 1, R243 += 1, R68 += 1 };
  s0 -> s4 [84, 84] { R287 += 1, R243 += 1, R68 += 1 };
  s0 -> s1 [85, 65535] { R287 += 1, R243 += 1, R68 += 1 };
  s1 -> s1 [0, 83] { R287 += 1, R243 += 1, R68 += 1 };
  s1 -> s1 [0, 65535] { R287 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [84, 84] { R287 += 1, R243 += 1, R68 += 1 };
  s1 -> s4 [84, 84] { R287 += 1, R243 += 1, R68 += 1 };
  s1 -> s1 [85, 65535] { R287 += 1, R243 += 1, R68 += 1 };
  s2 -> s1 [0, 83] { R287 += 1, R243 += 1, R68 += 1 };
  s2 -> s2 [0, 65535] { R287 += 1, R242 += 1, R243 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [84, 84] { R287 += 1, R243 += 1, R68 += 1 };
  s2 -> s4 [84, 84] { R287 += 1, R243 += 1, R68 += 1 };
  s2 -> s1 [85, 65535] { R287 += 1, R243 += 1, R68 += 1 };
  s3 -> s3 [0, 65535] { R287 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R287 += 1, R243 += 1, R68 += 1 };
  s4 -> s5 [0, 65535] { R287 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R287 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 83] { R289 += 1, R245 += 1, R70 += 1, R71 += 1 };
  s0 -> s0 [0, 65535] { R288 += 1, R289 += 1 };
  s0 -> s2 [0, 65535] { R289 += 1, R244 += 1, R245 += 1 };
  s0 -> s3 [84, 84] { R289 += 1, R245 += 1, R70 += 1, R71 += 1 };
  s0 -> s4 [84, 84] { R289 += 1, R245 += 1, R70 += 1, R71 += 1 };
  s0 -> s1 [85, 65535] { R289 += 1, R245 += 1, R70 += 1, R71 += 1 };
  s1 -> s1 [0, 83] { R289 += 1, R245 += 1, R70 += 1, R71 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R289 += 1 };
  s1 -> s3 [84, 84] { R289 += 1, R245 += 1, R70 += 1, R71 += 1 };
  s1 -> s4 [84, 84] { R289 += 1, R245 += 1, R70 += 1, R71 += 1 };
  s1 -> s1 [85, 65535] { R289 += 1, R245 += 1, R70 += 1, R71 += 1 };
  s2 -> s1 [0, 83] { R289 += 1, R245 += 1, R70 += 1, R71 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R289 += 1, R244 += 1, R245 += 1 };
  s2 -> s3 [84, 84] { R289 += 1, R245 += 1, R70 += 1, R71 += 1 };
  s2 -> s4 [84, 84] { R289 += 1, R245 += 1, R70 += 1, R71 += 1 };
  s2 -> s1 [85, 65535] { R289 += 1, R245 += 1, R70 += 1, R71 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R289 += 1 };
  s3 -> s3 [0, 65535] { R289 += 1, R245 += 1, R70 += 1, R71 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R289 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R289 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 83] { R291 += 1, R247 += 1, R74 += 1, R75 += 1 };
  s0 -> s2 [0, 65535] { R291 += 1, R246 += 1, R247 += 1 };
  s0 -> s0 [0, 65535] { R290 += 1, R291 += 1 };
  s0 -> s3 [84, 84] { R291 += 1, R247 += 1, R74 += 1, R75 += 1 };
  s0 -> s4 [84, 84] { R291 += 1, R247 += 1, R74 += 1, R75 += 1 };
  s0 -> s1 [85, 65535] { R291 += 1, R247 += 1, R74 += 1, R75 += 1 };
  s1 -> s1 [0, 83] { R291 += 1, R247 += 1, R74 += 1, R75 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R291 += 1 };
  s1 -> s3 [84, 84] { R291 += 1, R247 += 1, R74 += 1, R75 += 1 };
  s1 -> s4 [84, 84] { R291 += 1, R247 += 1, R74 += 1, R75 += 1 };
  s1 -> s1 [85, 65535] { R291 += 1, R247 += 1, R74 += 1, R75 += 1 };
  s2 -> s1 [0, 83] { R291 += 1, R247 += 1, R74 += 1, R75 += 1 };
  s2 -> s2 [0, 65535] { R291 += 1, R246 += 1, R247 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [84, 84] { R291 += 1, R247 += 1, R74 += 1, R75 += 1 };
  s2 -> s4 [84, 84] { R291 += 1, R247 += 1, R74 += 1, R75 += 1 };
  s2 -> s1 [85, 65535] { R291 += 1, R247 += 1, R74 += 1, R75 += 1 };
  s3 -> s3 [0, 65535] { R291 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R291 += 1, R247 += 1, R74 += 1, R75 += 1 };
  s4 -> s5 [0, 65535] { R291 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R291 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 83] { R293 += 1, R249 += 1, R80 += 1, R81 += 1 };
  s0 -> s2 [0, 83] { R293 += 1, R249 += 1, R81 += 1 };
  s0 -> s0 [0, 65535] { R292 += 1, R293 += 1 };
  s0 -> s3 [0, 65535] { R293 += 1, R248 += 1, R249 += 1 };
  s0 -> s4 [84, 84] { R293 += 1, R249 += 1, R80 += 1, R81 += 1 };
  s0 -> s5 [84, 84] { R293 += 1, R249 += 1, R81 += 1 };
  s0 -> s6 [84, 84] { R293 += 1, R249 += 1, R80 += 1, R81 += 1 };
  s0 -> s7 [84, 84] { R293 += 1, R249 += 1, R81 += 1 };
  s0 -> s2 [85, 85] { R293 += 1, R249 += 1, R81 += 1 };
  s0 -> s1 [85, 65535] { R293 += 1, R249 += 1, R80 += 1, R81 += 1 };
  s0 -> s8 [89, 89] { R293 += 1, R249 += 1, R81 += 1 };
  s0 -> s2 [90, 65535] { R293 += 1, R249 += 1, R81 += 1 };
  s1 -> s1 [0, 83] { R293 += 1, R249 += 1, R80 += 1, R81 += 1 };
  s1 -> s2 [0, 83] { R293 += 1, R249 += 1, R81 += 1 };
  s1 -> s4 [84, 84] { R293 += 1, R249 += 1, R80 += 1, R81 += 1 };
  s1 -> s5 [84, 84] { R293 += 1, R249 += 1, R81 += 1 };
  s1 -> s6 [84, 84] { R293 += 1, R249 += 1, R80 += 1, R81 += 1 };
  s1 -> s7 [84, 84] { R293 += 1, R249 += 1, R81 += 1 };
  s1 -> s2 [85, 85] { R293 += 1, R249 += 1, R81 += 1 };
  s1 -> s1 [85, 65535] { R293 += 1, R249 += 1, R80 += 1, R81 += 1 };
  s1 -> s8 [89, 89] { R293 += 1, R249 += 1, R81 += 1 };
  s1 -> s2 [90, 65535] { R293 += 1, R249 += 1, R81 += 1 };
  s2 -> s2 [0, 83] { R293 += 1, R249 += 1, R81 += 1 };
  s2 -> s5 [84, 84] { R293 += 1, R249 += 1, R81 += 1 };
  s2 -> s7 [84, 84] { R293 += 1, R249 += 1, R81 += 1 };
  s2 -> s2 [85, 85] { R293 += 1, R249 += 1, R81 += 1 };
  s2 -> s8 [89, 89] { R293 += 1, R249 += 1, R81 += 1 };
  s2 -> s2 [90, 65535] { R293 += 1, R249 += 1, R81 += 1 };
  s3 -> s1 [0, 83] { R293 += 1, R249 += 1, R80 += 1, R81 += 1 };
  s3 -> s2 [0, 83] { R293 += 1, R249 += 1, R81 += 1 };
  s3 -> s3 [0, 65535] { R293 += 1, R248 += 1, R249 += 1 };
  s3 -> s4 [84, 84] { R293 += 1, R249 += 1, R80 += 1, R81 += 1 };
  s3 -> s5 [84, 84] { R293 += 1, R249 += 1, R81 += 1 };
  s3 -> s6 [84, 84] { R293 += 1, R249 += 1, R80 += 1, R81 += 1 };
  s3 -> s7 [84, 84] { R293 += 1, R249 += 1, R81 += 1 };
  s3 -> s2 [85, 85] { R293 += 1, R249 += 1, R81 += 1 };
  s3 -> s1 [85, 65535] { R293 += 1, R249 += 1, R80 += 1, R81 += 1 };
  s3 -> s8 [89, 89] { R293 += 1, R249 += 1, R81 += 1 };
  s3 -> s2 [90, 65535] { R293 += 1, R249 += 1, R81 += 1 };
  s4 -> s7 [0, 85] { R293 += 1, R249 += 1, R81 += 1 };
  s4 -> s4 [0, 65535] { R293 += 1, R249 += 1, R80 += 1, R81 += 1 };
  s4 -> s11 [89, 89] { R293 += 1, R249 += 1, R81 += 1 };
  s4 -> s7 [90, 65535] { R293 += 1, R249 += 1, R81 += 1 };
  s7 -> s7 [0, 85] { R293 += 1, R249 += 1, R81 += 1 };
  s7 -> s11 [89, 89] { R293 += 1, R249 += 1, R81 += 1 };
  s7 -> s7 [90, 65535] { R293 += 1, R249 += 1, R81 += 1 };
  s8 -> s8 [0, 83] { R293 += 1, R249 += 1, R81 += 1 };
  s8 -> s8 [0, 65535] { R293 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [84, 84] { R293 += 1, R249 += 1 };
  s8 -> s11 [84, 84] { R293 += 1, R249 += 1 };
  s8 -> s8 [85, 85] { R293 += 1, R249 += 1, R81 += 1 };
  s8 -> s8 [85, 65535] { R293 += 1, R249 += 1 };
  s8 -> s8 [89, 65535] { R293 += 1, R249 += 1, R81 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R293 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 85] { R293 += 1, R249 += 1, R81 += 1 };
  s11 -> s12 [0, 65535] { R293 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R293 += 1, R249 += 1 };
  s11 -> s11 [89, 65535] { R293 += 1, R249 += 1, R81 += 1 };
  s12 -> s12 [0, 65535] { R293 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 83] { R295 += 1, R251 += 1, R84 += 1, R85 += 1 };
  s0 -> s0 [0, 65535] { R294 += 1, R295 += 1 };
  s0 -> s2 [0, 65535] { R295 += 1, R250 += 1, R251 += 1 };
  s0 -> s3 [84, 84] { R295 += 1, R251 += 1, R84 += 1, R85 += 1 };
  s0 -> s4 [84, 84] { R295 += 1, R251 += 1, R84 += 1, R85 += 1 };
  s0 -> s1 [85, 65535] { R295 += 1, R251 += 1, R84 += 1, R85 += 1 };
  s1 -> s1 [0, 83] { R295 += 1, R251 += 1, R84 += 1, R85 += 1 };
  s1 -> s1 [0, 65535] { R295 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [84, 84] { R295 += 1, R251 += 1, R84 += 1, R85 += 1 };
  s1 -> s4 [84, 84] { R295 += 1, R251 += 1, R84 += 1, R85 += 1 };
  s1 -> s1 [85, 65535] { R295 += 1, R251 += 1, R84 += 1, R85 += 1 };
  s2 -> s1 [0, 83] { R295 += 1, R251 += 1, R84 += 1, R85 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R295 += 1, R250 += 1, R251 += 1 };
  s2 -> s3 [84, 84] { R295 += 1, R251 += 1, R84 += 1, R85 += 1 };
  s2 -> s4 [84, 84] { R295 += 1, R251 += 1, R84 += 1, R85 += 1 };
  s2 -> s1 [85, 65535] { R295 += 1, R251 += 1, R84 += 1, R85 += 1 };
  s3 -> s3 [0, 65535] { R295 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R295 += 1 };
  s4 -> s4 [0, 65535] { R295 += 1, R251 += 1, R84 += 1, R85 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R295 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 83] { R297 += 1, R253 += 1, R194 += 1, R195 += 1 };
  s0 -> s2 [0, 83] { R297 += 1, R253 += 1, R195 += 1 };
  s0 -> s3 [0, 65535] { R297 += 1, R252 += 1, R253 += 1 };
  s0 -> s0 [0, 65535] { R296 += 1, R297 += 1 };
  s0 -> s4 [84, 84] { R297 += 1, R253 += 1, R195 += 1 };
  s0 -> s5 [84, 84] { R297 += 1, R253 += 1, R195 += 1 };
  s0 -> s6 [84, 84] { R297 += 1, R253 += 1, R194 += 1, R195 += 1 };
  s0 -> s7 [84, 84] { R297 += 1, R253 += 1, R194 += 1, R195 += 1 };
  s0 -> s1 [85, 65535] { R297 += 1, R253 += 1, R194 += 1, R195 += 1 };
  s0 -> s2 [90, 65535] { R297 += 1, R253 += 1, R195 += 1 };
  s1 -> s1 [0, 83] { R297 += 1, R253 += 1, R194 += 1, R195 += 1 };
  s1 -> s2 [0, 83] { R297 += 1, R253 += 1, R195 += 1 };
  s1 -> s4 [84, 84] { R297 += 1, R253 += 1, R195 += 1 };
  s1 -> s5 [84, 84] { R297 += 1, R253 += 1, R195 += 1 };
  s1 -> s6 [84, 84] { R297 += 1, R253 += 1, R194 += 1, R195 += 1 };
  s1 -> s7 [84, 84] { R297 += 1, R253 += 1, R194 += 1, R195 += 1 };
  s1 -> s1 [85, 65535] { R297 += 1, R253 += 1, R194 += 1, R195 += 1 };
  s1 -> s2 [90, 65535] { R297 += 1, R253 += 1, R195 += 1 };
  s2 -> s2 [0, 83] { R297 += 1, R253 += 1, R195 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R297 += 1 };
  s2 -> s4 [84, 84] { R297 += 1, R253 += 1 };
  s2 -> s5 [84, 84] { R297 += 1, R253 += 1 };
  s2 -> s2 [85, 65535] { R297 += 1, R253 += 1 };
  s2 -> s2 [90, 65535] { R297 += 1, R253 += 1, R195 += 1 };
  s3 -> s1 [0, 83] { R297 += 1, R253 += 1, R194 += 1, R195 += 1 };
  s3 -> s2 [0, 83] { R297 += 1, R253 += 1, R195 += 1 };
  s3 -> s3 [0, 65535] { R297 += 1, R252 += 1, R253 += 1 };
  s3 -> s4 [84, 84] { R297 += 1, R253 += 1, R195 += 1 };
  s3 -> s5 [84, 84] { R297 += 1, R253 += 1, R195 += 1 };
  s3 -> s6 [84, 84] { R297 += 1, R253 += 1, R194 += 1, R195 += 1 };
  s3 -> s7 [84, 84] { R297 += 1, R253 += 1, R194 += 1, R195 += 1 };
  s3 -> s1 [85, 65535] { R297 += 1, R253 += 1, R194 += 1, R195 += 1 };
  s3 -> s2 [90, 65535] { R297 += 1, R253 += 1, R195 += 1 };
  s4 -> s4 [0, 84] { R297 += 1, R253 += 1, R195 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [0, 65535] { R297 += 1, R253 += 1 };
  s4 -> s9 [0, 65535] { R297 += 1 };
  s4 -> s4 [90, 65535] { R297 += 1, R253 += 1, R195 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R297 += 1 };
  s7 -> s4 [0, 84] { R297 += 1, R253 += 1, R195 += 1 };
  s7 -> s7 [0, 65535] { R297 += 1, R253 += 1, R194 += 1, R195 += 1 };
  s7 -> s4 [90, 65535] { R297 += 1, R253 += 1, R195 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R297 += 1 };
  accepting s4, s8, s5, s2, s9;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [116, 116];
  accepting s1;
};
};
synchronised {  // Automata constraining P62
automaton P62_0 {
  init s0;
  s0 -> s1 [117, 117];
  accepting s1;
};
};
constraint R2 = R297 && R20 - R297 = -1 && R21 = R297 && R22 - R297 = -1 && R23 = R297 && R24 = 0 && R25 = 1 && R26 = 0 && R27 = 1 && R38 + R67 + R66 + -1*R83 + -1*R81 - R53 = 0 && R52 + R82 + R80 = 0 && R238 = 0 && R239 = 0 && R248 = 0 && R249 = 0 && R252 = 0 && R253 = 0 && R254 = 0 && R255 = R297 && R256 = 0 && R257 = R297 && R258 = 0 && R259 = R297 && R260 = 0 && R261 = R297 && R262 = 0 && R263 = R297 && R264 = 0 && R265 = R297 && R266 = 0 && R267 = R297 && R268 = 0 && R269 = R297 && R270 = 0 && R271 = R297 && R272 = 0 && R273 = R297 && R274 = 0 && R275 = R297 && R276 = 0 && R277 = R297 && R278 = 0 && R279 = R297 && R280 = 0 && R281 = R297 && R282 = 0 && R283 = R297 && R284 = 0 && R285 = R297 && R286 = 0 && R287 = R297 && R288 = 0 && R289 = R297 && R290 = 0 && R291 = R297 && R292 = 0 && R293 = R297 && R294 = 0 && R295 = R297 && R296 = 0 && -1 < R1 && R8 < 1 && R11 < 1 && R12 < 1 && R40 + R69 + R68 < 1 && -1*R83 + -1*R81 - R53 < 1 && 0 < R297 && (R1 != 0 || R17 = 0 || (R198 = 0 && R199 = 0)) && (R1 != 0 || R17 = 0 || (R200 = 0 && R201 = 0)) && (R1 != 0 || R17 = 0 || (R202 = 0 && R203 = 0)) && (R1 != 0 || R17 = 0 || (R204 = 0 && R205 = 0)) && (R1 != 0 || R17 = 0 || (R206 = 0 && R207 = 0)) && (R1 != 0 || R17 = 0 || (R208 = 0 && R209 = 0)) && (R1 != 0 || R17 = 0 || (R210 = 0 && R211 = 0)) && (R1 != 0 || R17 = 0 || (R212 = 0 && R213 = 0)) && (R1 != 0 || R17 = 0 || (R214 = 0 && R215 = 0)) && (R1 != 0 || R17 = 0 || (R216 = 0 && R217 = 0)) && (R48 + R79 + R76 != 0 || ((R42 + R72 + R70 != 0 || R43 + R73 + R71 + -1*R83 + -1*R81 - R53 = 0 || R53 + R83 + R81 < 1) && (R42 + R72 + R70 = 0 || R53 + R83 + R81 < 1))) && (R48 + R79 + R76 != 0 || ((R46 + R77 + R74 != 0 || R47 + R78 + R75 + -1*R83 + -1*R81 - R53 = 0 || R53 + R83 + R81 < 1) && (R46 + R77 + R74 = 0 || R53 + R83 + R81 < 1))) && (R198 != 0 || R1 = R199 || R1 < 1) && (R200 != 0 || R1 = R201 || R1 < 1) && (R202 != 0 || R1 = R203 || R1 < 1) && (R204 != 0 || R1 = R205 || R1 < 1) && (R206 != 0 || R1 = R207 || R1 < 1) && (R208 != 0 || R1 = R209 || R1 < 1) && (R210 != 0 || R1 = R211 || R1 < 1) && (R212 != 0 || R1 = R213 || R1 < 1) && (R214 != 0 || R1 = R215 || R1 < 1) && (R216 != 0 || R1 = R217 || R1 < 1) && (R18 = 0 || (R236 = 0 && R237 = 0)) && (R18 = 0 || (R240 = 0 && R241 = 0)) && (R18 = 0 || (R242 = 0 && R243 = 0)) && (R18 = 0 || (R244 = 0 && R245 = 0)) && (R18 = 0 || (R246 = 0 && R247 = 0)) && (R18 = 0 || (R250 = 0 && R251 = 0)) && (R19 = 0 || (R218 = 0 && R219 = 0)) && (R19 = 0 || (R220 = 0 && R221 = 0)) && (R19 = 0 || (R222 = 0 && R223 = 0)) && (R19 = 0 || (R224 = 0 && R225 = 0)) && (R19 = 0 || (R226 = 0 && R227 = 0)) && (R19 = 0 || (R228 = 0 && R229 = 0)) && (R19 = 0 || (R230 = 0 && R231 = 0)) && (R19 = 0 || (R232 = 0 && R233 = 0)) && (R19 = 0 || (R234 = 0 && R235 = 0)) && (R48 + R79 + R76 = 0 || (R42 + R72 + R70 = 0 && R43 + R73 + R71 + -1*R83 + -1*R81 - R53 = 0)) && (R48 + R79 + R76 = 0 || (R46 + R77 + R74 = 0 && R47 + R78 + R75 + -1*R83 + -1*R81 - R53 = 0)) && (R58 + R89 + R86 = 0 || (R56 + R87 + R84 = 0 && R57 + R88 + R85 = 0)) && (R58 + R89 + R86 = 0 || (R62 + R196 + R194 = 0 && R63 + R197 + R195 = 0)) && (R198 = 0 || R1 < 1) && (R200 = 0 || R1 < 1) && (R202 = 0 || R1 < 1) && (R204 = 0 || R1 < 1) && (R206 = 0 || R1 < 1) && (R208 = 0 || R1 < 1) && (R210 = 0 || R1 < 1) && (R212 = 0 || R1 < 1) && (R214 = 0 || R1 < 1) && (R216 = 0 || R1 < 1);
// End of Parikh automata intersection problem
