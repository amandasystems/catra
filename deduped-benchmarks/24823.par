// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R100, R101, R102, R103, R104, R105, R106, R107, R108, R109, R110, R111, R112, R113, R114, R115, R116, R117, R118, R119, R12, R120, R121, R122, R123, R124, R15, R16, R2, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R43, R45, R47, R48, R5, R51, R52, R53, R57, R58, R61, R62, R63, R67, R68, R71, R73, R75, R76, R79, R80, R81, R8481, R8482, R8483, R8484, R8485, R8486, R8487, R8488, R8489, R8490, R85, R86, R89, R9, R90, R91, R9185, R9186, R9187, R9188, R9189, R9190, R95, R96, R9707, R9708, R9709, R9710, R9711, R9712, R9713, R9714, R9715, R9716, R9717, R9718, R9719, R9720, R9721, R9722, R9723, R9724, R9725, R9726, R9727, R9728, R9729, R9730, R9731, R9732, R9733, R9734, R9735, R9736, R9737, R9738, R9739, R9740, R9741, R9742, R9743, R9744, R9745, R9746, R9747, R9748, R9749, R9750, R9751, R9752, R9753, R9754, R9755, R9756, R9757, R9758, R9759, R9760, R9761, R9762, R9763, R9764, R9765, R9766, R9767, R9768, R9769, R9770, R9771, R9772, R9773, R9774, R9775, R9776, R9777, R9778, R9779, R9780, R9781, R9782, R9783, R9784, R9785, R9786, R9787, R9788, R9789, R9790, R9791, R9792, R9793, R9794, R9795, R9796, R9797, R9798, R9799, R9800, R9801, R9802, R9803, R9804, R9805, R9806, R9807, R9808, R9809, R9810, R9811, R9812, R9813, R9814, R9815, R9816, R9817, R9818, R9819, R9820, R9821, R9822, R9823, R9824, R9825, R9826, R9827, R9828, R9829, R9830, R9831, R9832, R9833, R9834, R9835, R9836, R9837, R9838, R9839, R9840, R9841, R9842, R9843, R9844, R9845, R9846, R9847, R9848, R9849, R9850, R9851, R9852, R9853, R9854, R9855, R9856, R9857, R9858, R9859, R9860, R9861, R9862, R9863, R9864, R9865, R9866, R9867, R9868, R9869, R9870, R9871, R9872, R9873, R9874, R9875, R9876, R9877, R9878, R99;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [69, 69];
  s0 -> s0 [70, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [69, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 68];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [69, 69];
  s0 -> s1 [70, 65535];
  s1 -> s1 [0, 68];
  s1 -> s2 [69, 69];
  s1 -> s1 [70, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R99 += 1, R100 += 1 };
  s0 -> s1 [0, 65535] { R100 += 1, R24 += 1 };
  s1 -> s1 [0, 65535] { R100 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 68] { R102 += 1 };
  s0 -> s0 [0, 65535] { R101 += 1, R102 += 1 };
  s0 -> s2 [69, 69] { R102 += 1 };
  s0 -> s3 [69, 69] { R102 += 1 };
  s0 -> s1 [86, 65535] { R102 += 1 };
  s1 -> s1 [0, 68] { R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [69, 69] { R102 += 1 };
  s1 -> s3 [69, 69] { R102 += 1 };
  s1 -> s1 [86, 65535] { R102 += 1 };
  s2 -> s2 [0, 69] { R102 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [86, 65535] { R102 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 68] { R104 += 1, R43 += 1 };
  s0 -> s0 [0, 65535] { R103 += 1, R104 += 1 };
  s0 -> s2 [69, 69] { R104 += 1, R43 += 1 };
  s0 -> s3 [69, 69] { R104 += 1, R43 += 1 };
  s0 -> s1 [70, 65535] { R104 += 1, R43 += 1 };
  s1 -> s1 [0, 68] { R104 += 1, R43 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [69, 69] { R104 += 1, R43 += 1 };
  s1 -> s3 [69, 69] { R104 += 1, R43 += 1 };
  s1 -> s1 [70, 65535] { R104 += 1, R43 += 1 };
  s2 -> s2 [0, 65535] { R104 += 1, R43 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 68] { R106 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R105 += 1, R106 += 1 };
  s0 -> s2 [69, 69] { R106 += 1, R45 += 1 };
  s0 -> s3 [69, 69] { R106 += 1, R45 += 1 };
  s0 -> s1 [70, 65535] { R106 += 1, R45 += 1 };
  s1 -> s1 [0, 68] { R106 += 1, R45 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [69, 69] { R106 += 1, R45 += 1 };
  s1 -> s3 [69, 69] { R106 += 1, R45 += 1 };
  s1 -> s1 [70, 65535] { R106 += 1, R45 += 1 };
  s2 -> s2 [0, 65535] { R106 += 1, R45 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 68] { R108 += 1, R47 += 1, R48 += 1 };
  s0 -> s0 [0, 65535] { R107 += 1, R108 += 1 };
  s0 -> s2 [69, 69] { R108 += 1, R47 += 1, R48 += 1 };
  s0 -> s3 [69, 69] { R108 += 1, R47 += 1, R48 += 1 };
  s0 -> s1 [70, 65535] { R108 += 1, R47 += 1, R48 += 1 };
  s1 -> s1 [0, 68] { R108 += 1, R47 += 1, R48 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [69, 69] { R108 += 1, R47 += 1, R48 += 1 };
  s1 -> s3 [69, 69] { R108 += 1, R47 += 1, R48 += 1 };
  s1 -> s1 [70, 65535] { R108 += 1, R47 += 1, R48 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R108 += 1, R47 += 1, R48 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 68] { R110 += 1, R51 += 1, R52 += 1 };
  s0 -> s0 [0, 65535] { R109 += 1, R110 += 1 };
  s0 -> s2 [69, 69] { R110 += 1, R51 += 1, R52 += 1 };
  s0 -> s3 [69, 69] { R110 += 1, R51 += 1, R52 += 1 };
  s0 -> s1 [70, 65535] { R110 += 1, R51 += 1, R52 += 1 };
  s1 -> s1 [0, 68] { R110 += 1, R51 += 1, R52 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [69, 69] { R110 += 1, R51 += 1, R52 += 1 };
  s1 -> s3 [69, 69] { R110 += 1, R51 += 1, R52 += 1 };
  s1 -> s1 [70, 65535] { R110 += 1, R51 += 1, R52 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R110 += 1, R51 += 1, R52 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 68] { R112 += 1, R57 += 1, R58 += 1 };
  s0 -> s0 [0, 65535] { R111 += 1, R112 += 1 };
  s0 -> s2 [69, 69] { R112 += 1, R57 += 1, R58 += 1 };
  s0 -> s3 [69, 69] { R112 += 1, R57 += 1, R58 += 1 };
  s0 -> s1 [70, 65535] { R112 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [0, 68] { R112 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [69, 69] { R112 += 1, R57 += 1, R58 += 1 };
  s1 -> s3 [69, 69] { R112 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [70, 65535] { R112 += 1, R57 += 1, R58 += 1 };
  s2 -> s2 [0, 65535] { R112 += 1, R57 += 1, R58 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 68] { R114 += 1, R61 += 1, R62 += 1 };
  s0 -> s0 [0, 65535] { R113 += 1, R114 += 1 };
  s0 -> s2 [69, 69] { R114 += 1, R61 += 1, R62 += 1 };
  s0 -> s3 [69, 69] { R114 += 1, R61 += 1, R62 += 1 };
  s0 -> s1 [70, 65535] { R114 += 1, R61 += 1, R62 += 1 };
  s1 -> s1 [0, 68] { R114 += 1, R61 += 1, R62 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [69, 69] { R114 += 1, R61 += 1, R62 += 1 };
  s1 -> s3 [69, 69] { R114 += 1, R61 += 1, R62 += 1 };
  s1 -> s1 [70, 65535] { R114 += 1, R61 += 1, R62 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R114 += 1, R61 += 1, R62 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 68] { R116 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R115 += 1, R116 += 1 };
  s0 -> s2 [69, 69] { R116 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [69, 69] { R116 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [70, 65535] { R116 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 68] { R116 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [69, 69] { R116 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [69, 69] { R116 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [70, 65535] { R116 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535] { R116 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 68] { R9812 += 1 };
  s0 -> s0 [0, 65535] { R9811 += 1, R9812 += 1 };
  s0 -> s2 [69, 69] { R9812 += 1 };
  s0 -> s1 [70, 65535] { R9812 += 1 };
  s1 -> s1 [0, 68] { R9812 += 1 };
  s1 -> s2 [69, 69] { R9812 += 1 };
  s1 -> s1 [70, 65535] { R9812 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R9812 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R9813 += 1, R9814 += 1 };
  s0 -> s1 [0, 65535] { R9814 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R9814 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 68] { R9816 += 1 };
  s0 -> s0 [0, 65535] { R9815 += 1, R9816 += 1 };
  s0 -> s2 [0, 65535] { R9816 += 1, R12 += 1 };
  s0 -> s3 [69, 69] { R9816 += 1 };
  s0 -> s1 [70, 65535] { R9816 += 1 };
  s1 -> s1 [0, 68] { R9816 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [69, 69] { R9816 += 1 };
  s1 -> s1 [70, 65535] { R9816 += 1 };
  s2 -> s1 [0, 68] { R9816 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R9816 += 1, R12 += 1 };
  s2 -> s3 [69, 69] { R9816 += 1 };
  s2 -> s1 [70, 65535] { R9816 += 1 };
  s3 -> s3 [0, 65535] { R9816 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s0 [0, 65535] { R9817 += 1, R9818 += 1 };
  s0 -> s1 [0, 65535] { R9818 += 1, R9731 += 1, R9732 += 1 };
  s0 -> s2 [0, 65535] { R9818 += 1, R9732 += 1, R23 += 1 };
  s1 -> s1 [0, 65535] { R9818 += 1, R9731 += 1, R9732 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R9818 += 1, R9732 += 1, R23 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R9818 += 1 };
  s2 -> s2 [0, 65535] { R9818 += 1, R9732 += 1, R23 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R9818 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 68] { R9820 += 1, R9734 += 1 };
  s0 -> s2 [0, 65535] { R9820 += 1, R9733 += 1, R9734 += 1 };
  s0 -> s0 [0, 65535] { R9819 += 1, R9820 += 1 };
  s0 -> s3 [69, 69] { R9820 += 1, R9734 += 1 };
  s0 -> s4 [69, 69] { R9820 += 1, R9734 += 1 };
  s0 -> s5 [85, 85] { R9820 += 1, R9734 += 1 };
  s0 -> s1 [86, 65535] { R9820 += 1, R9734 += 1 };
  s1 -> s1 [0, 68] { R9820 += 1, R9734 += 1 };
  s1 -> s3 [69, 69] { R9820 += 1, R9734 += 1 };
  s1 -> s4 [69, 69] { R9820 += 1, R9734 += 1 };
  s1 -> s5 [85, 85] { R9820 += 1, R9734 += 1 };
  s1 -> s1 [86, 65535] { R9820 += 1, R9734 += 1 };
  s2 -> s1 [0, 68] { R9820 += 1, R9734 += 1 };
  s2 -> s2 [0, 65535] { R9820 += 1, R9733 += 1, R9734 += 1 };
  s2 -> s3 [69, 69] { R9820 += 1, R9734 += 1 };
  s2 -> s4 [69, 69] { R9820 += 1, R9734 += 1 };
  s2 -> s5 [85, 85] { R9820 += 1, R9734 += 1 };
  s2 -> s1 [86, 65535] { R9820 += 1, R9734 += 1 };
  s4 -> s4 [0, 69] { R9820 += 1, R9734 += 1 };
  s4 -> s8 [85, 85] { R9820 += 1, R9734 += 1 };
  s4 -> s4 [86, 65535] { R9820 += 1, R9734 += 1 };
  s5 -> s5 [0, 68] { R9820 += 1, R9734 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R9820 += 1 };
  s5 -> s7 [69, 69] { R9820 += 1, R9734 += 1 };
  s5 -> s8 [69, 69] { R9820 += 1, R9734 += 1 };
  s5 -> s5 [85, 65535] { R9820 += 1, R9734 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R9820 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 69] { R9820 += 1, R9734 += 1 };
  s8 -> s8 [0, 65535] { R9820 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [85, 65535] { R9820 += 1, R9734 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 68] { R9822 += 1, R9736 += 1, R71 += 1 };
  s0 -> s0 [0, 65535] { R9821 += 1, R9822 += 1 };
  s0 -> s2 [0, 65535] { R9822 += 1, R9735 += 1, R9736 += 1 };
  s0 -> s3 [69, 69] { R9822 += 1, R9736 += 1, R71 += 1 };
  s0 -> s4 [69, 69] { R9822 += 1, R9736 += 1, R71 += 1 };
  s0 -> s1 [70, 65535] { R9822 += 1, R9736 += 1, R71 += 1 };
  s1 -> s1 [0, 68] { R9822 += 1, R9736 += 1, R71 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R9822 += 1 };
  s1 -> s3 [69, 69] { R9822 += 1, R9736 += 1, R71 += 1 };
  s1 -> s4 [69, 69] { R9822 += 1, R9736 += 1, R71 += 1 };
  s1 -> s1 [70, 65535] { R9822 += 1, R9736 += 1, R71 += 1 };
  s2 -> s1 [0, 68] { R9822 += 1, R9736 += 1, R71 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R9822 += 1, R9735 += 1, R9736 += 1 };
  s2 -> s3 [69, 69] { R9822 += 1, R9736 += 1, R71 += 1 };
  s2 -> s4 [69, 69] { R9822 += 1, R9736 += 1, R71 += 1 };
  s2 -> s1 [70, 65535] { R9822 += 1, R9736 += 1, R71 += 1 };
  s3 -> s3 [0, 65535] { R9822 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R9822 += 1 };
  s4 -> s4 [0, 65535] { R9822 += 1, R9736 += 1, R71 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R9822 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 68] { R9824 += 1, R9738 += 1, R73 += 1 };
  s0 -> s2 [0, 65535] { R9824 += 1, R9737 += 1, R9738 += 1 };
  s0 -> s0 [0, 65535] { R9823 += 1, R9824 += 1 };
  s0 -> s3 [69, 69] { R9824 += 1, R9738 += 1, R73 += 1 };
  s0 -> s4 [69, 69] { R9824 += 1, R9738 += 1, R73 += 1 };
  s0 -> s1 [70, 65535] { R9824 += 1, R9738 += 1, R73 += 1 };
  s1 -> s1 [0, 68] { R9824 += 1, R9738 += 1, R73 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R9824 += 1 };
  s1 -> s3 [69, 69] { R9824 += 1, R9738 += 1, R73 += 1 };
  s1 -> s4 [69, 69] { R9824 += 1, R9738 += 1, R73 += 1 };
  s1 -> s1 [70, 65535] { R9824 += 1, R9738 += 1, R73 += 1 };
  s2 -> s1 [0, 68] { R9824 += 1, R9738 += 1, R73 += 1 };
  s2 -> s2 [0, 65535] { R9824 += 1, R9737 += 1, R9738 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [69, 69] { R9824 += 1, R9738 += 1, R73 += 1 };
  s2 -> s4 [69, 69] { R9824 += 1, R9738 += 1, R73 += 1 };
  s2 -> s1 [70, 65535] { R9824 += 1, R9738 += 1, R73 += 1 };
  s3 -> s3 [0, 65535] { R9824 += 1, R9738 += 1, R73 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R9824 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R9824 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9824 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 68] { R9826 += 1, R9740 += 1, R75 += 1, R76 += 1 };
  s0 -> s2 [0, 65535] { R9826 += 1, R9739 += 1, R9740 += 1 };
  s0 -> s0 [0, 65535] { R9825 += 1, R9826 += 1 };
  s0 -> s3 [69, 69] { R9826 += 1, R9740 += 1, R75 += 1, R76 += 1 };
  s0 -> s4 [69, 69] { R9826 += 1, R9740 += 1, R75 += 1, R76 += 1 };
  s0 -> s1 [70, 65535] { R9826 += 1, R9740 += 1, R75 += 1, R76 += 1 };
  s1 -> s1 [0, 68] { R9826 += 1, R9740 += 1, R75 += 1, R76 += 1 };
  s1 -> s1 [0, 65535] { R9826 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [69, 69] { R9826 += 1, R9740 += 1, R75 += 1, R76 += 1 };
  s1 -> s4 [69, 69] { R9826 += 1, R9740 += 1, R75 += 1, R76 += 1 };
  s1 -> s1 [70, 65535] { R9826 += 1, R9740 += 1, R75 += 1, R76 += 1 };
  s2 -> s1 [0, 68] { R9826 += 1, R9740 += 1, R75 += 1, R76 += 1 };
  s2 -> s2 [0, 65535] { R9826 += 1, R9739 += 1, R9740 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [69, 69] { R9826 += 1, R9740 += 1, R75 += 1, R76 += 1 };
  s2 -> s4 [69, 69] { R9826 += 1, R9740 += 1, R75 += 1, R76 += 1 };
  s2 -> s1 [70, 65535] { R9826 += 1, R9740 += 1, R75 += 1, R76 += 1 };
  s3 -> s3 [0, 65535] { R9826 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R9826 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R9826 += 1, R9740 += 1, R75 += 1, R76 += 1 };
  s5 -> s5 [0, 65535] { R9826 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 68] { R9828 += 1, R9742 += 1, R79 += 1, R80 += 1 };
  s0 -> s0 [0, 65535] { R9827 += 1, R9828 += 1 };
  s0 -> s2 [0, 65535] { R9828 += 1, R9741 += 1, R9742 += 1 };
  s0 -> s3 [69, 69] { R9828 += 1, R9742 += 1, R79 += 1, R80 += 1 };
  s0 -> s4 [69, 69] { R9828 += 1, R9742 += 1, R79 += 1, R80 += 1 };
  s0 -> s1 [70, 65535] { R9828 += 1, R9742 += 1, R79 += 1, R80 += 1 };
  s1 -> s1 [0, 68] { R9828 += 1, R9742 += 1, R79 += 1, R80 += 1 };
  s1 -> s1 [0, 65535] { R9828 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [69, 69] { R9828 += 1, R9742 += 1, R79 += 1, R80 += 1 };
  s1 -> s4 [69, 69] { R9828 += 1, R9742 += 1, R79 += 1, R80 += 1 };
  s1 -> s1 [70, 65535] { R9828 += 1, R9742 += 1, R79 += 1, R80 += 1 };
  s2 -> s1 [0, 68] { R9828 += 1, R9742 += 1, R79 += 1, R80 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R9828 += 1, R9741 += 1, R9742 += 1 };
  s2 -> s3 [69, 69] { R9828 += 1, R9742 += 1, R79 += 1, R80 += 1 };
  s2 -> s4 [69, 69] { R9828 += 1, R9742 += 1, R79 += 1, R80 += 1 };
  s2 -> s1 [70, 65535] { R9828 += 1, R9742 += 1, R79 += 1, R80 += 1 };
  s3 -> s3 [0, 65535] { R9828 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R9828 += 1 };
  s4 -> s4 [0, 65535] { R9828 += 1, R9742 += 1, R79 += 1, R80 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R9828 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 68] { R9830 += 1, R9744 += 1, R85 += 1, R86 += 1 };
  s0 -> s2 [0, 68] { R9830 += 1, R9744 += 1, R86 += 1 };
  s0 -> s0 [0, 65535] { R9829 += 1, R9830 += 1 };
  s0 -> s3 [0, 65535] { R9830 += 1, R9743 += 1, R9744 += 1 };
  s0 -> s4 [69, 69] { R9830 += 1, R9744 += 1, R86 += 1 };
  s0 -> s5 [69, 69] { R9830 += 1, R9744 += 1, R85 += 1, R86 += 1 };
  s0 -> s6 [69, 69] { R9830 += 1, R9744 += 1, R86 += 1 };
  s0 -> s7 [69, 69] { R9830 += 1, R9744 += 1, R85 += 1, R86 += 1 };
  s0 -> s2 [70, 85] { R9830 += 1, R9744 += 1, R86 += 1 };
  s0 -> s1 [70, 65535] { R9830 += 1, R9744 += 1, R85 += 1, R86 += 1 };
  s0 -> s8 [86, 86] { R9830 += 1, R9744 += 1, R86 += 1 };
  s0 -> s2 [87, 65535] { R9830 += 1, R9744 += 1, R86 += 1 };
  s1 -> s1 [0, 68] { R9830 += 1, R9744 += 1, R85 += 1, R86 += 1 };
  s1 -> s2 [0, 68] { R9830 += 1, R9744 += 1, R86 += 1 };
  s1 -> s4 [69, 69] { R9830 += 1, R9744 += 1, R86 += 1 };
  s1 -> s5 [69, 69] { R9830 += 1, R9744 += 1, R85 += 1, R86 += 1 };
  s1 -> s6 [69, 69] { R9830 += 1, R9744 += 1, R86 += 1 };
  s1 -> s7 [69, 69] { R9830 += 1, R9744 += 1, R85 += 1, R86 += 1 };
  s1 -> s2 [70, 85] { R9830 += 1, R9744 += 1, R86 += 1 };
  s1 -> s1 [70, 65535] { R9830 += 1, R9744 += 1, R85 += 1, R86 += 1 };
  s1 -> s8 [86, 86] { R9830 += 1, R9744 += 1, R86 += 1 };
  s1 -> s2 [87, 65535] { R9830 += 1, R9744 += 1, R86 += 1 };
  s2 -> s2 [0, 68] { R9830 += 1, R9744 += 1, R86 += 1 };
  s2 -> s4 [69, 69] { R9830 += 1, R9744 += 1, R86 += 1 };
  s2 -> s6 [69, 69] { R9830 += 1, R9744 += 1, R86 += 1 };
  s2 -> s2 [70, 85] { R9830 += 1, R9744 += 1, R86 += 1 };
  s2 -> s8 [86, 86] { R9830 += 1, R9744 += 1, R86 += 1 };
  s2 -> s2 [87, 65535] { R9830 += 1, R9744 += 1, R86 += 1 };
  s3 -> s1 [0, 68] { R9830 += 1, R9744 += 1, R85 += 1, R86 += 1 };
  s3 -> s2 [0, 68] { R9830 += 1, R9744 += 1, R86 += 1 };
  s3 -> s3 [0, 65535] { R9830 += 1, R9743 += 1, R9744 += 1 };
  s3 -> s4 [69, 69] { R9830 += 1, R9744 += 1, R86 += 1 };
  s3 -> s5 [69, 69] { R9830 += 1, R9744 += 1, R85 += 1, R86 += 1 };
  s3 -> s6 [69, 69] { R9830 += 1, R9744 += 1, R86 += 1 };
  s3 -> s7 [69, 69] { R9830 += 1, R9744 += 1, R85 += 1, R86 += 1 };
  s3 -> s2 [70, 85] { R9830 += 1, R9744 += 1, R86 += 1 };
  s3 -> s1 [70, 65535] { R9830 += 1, R9744 += 1, R85 += 1, R86 += 1 };
  s3 -> s8 [86, 86] { R9830 += 1, R9744 += 1, R86 += 1 };
  s3 -> s2 [87, 65535] { R9830 += 1, R9744 += 1, R86 += 1 };
  s5 -> s6 [0, 85] { R9830 += 1, R9744 += 1, R86 += 1 };
  s5 -> s5 [0, 65535] { R9830 += 1, R9744 += 1, R85 += 1, R86 += 1 };
  s5 -> s11 [86, 86] { R9830 += 1, R9744 += 1, R86 += 1 };
  s5 -> s6 [87, 65535] { R9830 += 1, R9744 += 1, R86 += 1 };
  s6 -> s6 [0, 85] { R9830 += 1, R9744 += 1, R86 += 1 };
  s6 -> s11 [86, 86] { R9830 += 1, R9744 += 1, R86 += 1 };
  s6 -> s6 [87, 65535] { R9830 += 1, R9744 += 1, R86 += 1 };
  s8 -> s8 [0, 68] { R9830 += 1, R9744 += 1, R86 += 1 };
  s8 -> s8 [0, 65535] { R9830 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [69, 69] { R9830 += 1, R9744 += 1, R86 += 1 };
  s8 -> s11 [69, 69] { R9830 += 1, R9744 += 1, R86 += 1 };
  s8 -> s8 [70, 65535] { R9830 += 1, R9744 += 1, R86 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R9830 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R9830 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R9830 += 1, R9744 += 1, R86 += 1 };
  s12 -> s12 [0, 65535] { R9830 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 68] { R9832 += 1, R9746 += 1, R89 += 1, R90 += 1 };
  s0 -> s2 [0, 65535] { R9832 += 1, R9745 += 1, R9746 += 1 };
  s0 -> s0 [0, 65535] { R9831 += 1, R9832 += 1 };
  s0 -> s3 [69, 69] { R9832 += 1, R9746 += 1, R89 += 1, R90 += 1 };
  s0 -> s4 [69, 69] { R9832 += 1, R9746 += 1, R89 += 1, R90 += 1 };
  s0 -> s1 [70, 65535] { R9832 += 1, R9746 += 1, R89 += 1, R90 += 1 };
  s1 -> s1 [0, 68] { R9832 += 1, R9746 += 1, R89 += 1, R90 += 1 };
  s1 -> s1 [0, 65535] { R9832 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [69, 69] { R9832 += 1, R9746 += 1, R89 += 1, R90 += 1 };
  s1 -> s4 [69, 69] { R9832 += 1, R9746 += 1, R89 += 1, R90 += 1 };
  s1 -> s1 [70, 65535] { R9832 += 1, R9746 += 1, R89 += 1, R90 += 1 };
  s2 -> s1 [0, 68] { R9832 += 1, R9746 += 1, R89 += 1, R90 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R9832 += 1, R9745 += 1, R9746 += 1 };
  s2 -> s3 [69, 69] { R9832 += 1, R9746 += 1, R89 += 1, R90 += 1 };
  s2 -> s4 [69, 69] { R9832 += 1, R9746 += 1, R89 += 1, R90 += 1 };
  s2 -> s1 [70, 65535] { R9832 += 1, R9746 += 1, R89 += 1, R90 += 1 };
  s3 -> s6 [0, 65535] { R9832 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R9832 += 1, R9746 += 1, R89 += 1, R90 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R9832 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9832 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 68] { R9834 += 1, R9748 += 1, R95 += 1, R96 += 1 };
  s0 -> s0 [0, 65535] { R9833 += 1, R9834 += 1 };
  s0 -> s2 [0, 65535] { R9834 += 1, R9747 += 1, R9748 += 1 };
  s0 -> s3 [69, 69] { R9834 += 1, R9748 += 1, R95 += 1, R96 += 1 };
  s0 -> s4 [69, 69] { R9834 += 1, R9748 += 1, R95 += 1, R96 += 1 };
  s0 -> s1 [70, 65535] { R9834 += 1, R9748 += 1, R95 += 1, R96 += 1 };
  s1 -> s1 [0, 68] { R9834 += 1, R9748 += 1, R95 += 1, R96 += 1 };
  s1 -> s1 [0, 65535] { R9834 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [69, 69] { R9834 += 1, R9748 += 1, R95 += 1, R96 += 1 };
  s1 -> s4 [69, 69] { R9834 += 1, R9748 += 1, R95 += 1, R96 += 1 };
  s1 -> s1 [70, 65535] { R9834 += 1, R9748 += 1, R95 += 1, R96 += 1 };
  s2 -> s1 [0, 68] { R9834 += 1, R9748 += 1, R95 += 1, R96 += 1 };
  s2 -> s2 [0, 65535] { R9834 += 1, R9747 += 1, R9748 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [69, 69] { R9834 += 1, R9748 += 1, R95 += 1, R96 += 1 };
  s2 -> s4 [69, 69] { R9834 += 1, R9748 += 1, R95 += 1, R96 += 1 };
  s2 -> s1 [70, 65535] { R9834 += 1, R9748 += 1, R95 += 1, R96 += 1 };
  s3 -> s3 [0, 65535] { R9834 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R9834 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R9834 += 1, R9748 += 1, R95 += 1, R96 += 1 };
  s5 -> s5 [0, 65535] { R9834 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 68] { R9836 += 1, R9768 += 1 };
  s0 -> s2 [0, 65535] { R9836 += 1, R9767 += 1, R9768 += 1 };
  s0 -> s0 [0, 65535] { R9835 += 1, R9836 += 1 };
  s0 -> s3 [69, 69] { R9836 += 1, R9768 += 1 };
  s0 -> s1 [70, 65535] { R9836 += 1, R9768 += 1 };
  s1 -> s1 [0, 68] { R9836 += 1, R9768 += 1 };
  s1 -> s3 [69, 69] { R9836 += 1, R9768 += 1 };
  s1 -> s1 [70, 65535] { R9836 += 1, R9768 += 1 };
  s2 -> s1 [0, 68] { R9836 += 1, R9768 += 1 };
  s2 -> s2 [0, 65535] { R9836 += 1, R9767 += 1, R9768 += 1 };
  s2 -> s3 [69, 69] { R9836 += 1, R9768 += 1 };
  s2 -> s1 [70, 65535] { R9836 += 1, R9768 += 1 };
  s3 -> s4 [0, 65535] { R9836 += 1 };
  s3 -> s3 [0, 65535] { R9836 += 1, R9768 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R9836 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R9838 += 1, R9770 += 1, R1 += 1 };
  s0 -> s0 [0, 65535] { R9837 += 1, R9838 += 1 };
  s0 -> s2 [0, 65535] { R9838 += 1, R9769 += 1, R9770 += 1 };
  s1 -> s4 [0, 65535] { R9838 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R9838 += 1, R9770 += 1, R1 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R9838 += 1, R9770 += 1, R1 += 1 };
  s2 -> s2 [0, 65535] { R9838 += 1, R9769 += 1, R9770 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R9838 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 68] { R9840 += 1, R9772 += 1 };
  s0 -> s2 [0, 65535] { R9840 += 1, R9772 += 1, R9 += 1 };
  s0 -> s3 [0, 65535] { R9840 += 1, R9771 += 1, R9772 += 1 };
  s0 -> s0 [0, 65535] { R9839 += 1, R9840 += 1 };
  s0 -> s4 [69, 69] { R9840 += 1, R9772 += 1 };
  s0 -> s1 [70, 65535] { R9840 += 1, R9772 += 1 };
  s1 -> s1 [0, 68] { R9840 += 1, R9772 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R9840 += 1 };
  s1 -> s4 [69, 69] { R9840 += 1, R9772 += 1 };
  s1 -> s1 [70, 65535] { R9840 += 1, R9772 += 1 };
  s2 -> s1 [0, 68] { R9840 += 1, R9772 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R9840 += 1 };
  s2 -> s2 [0, 65535] { R9840 += 1, R9772 += 1, R9 += 1 };
  s2 -> s4 [69, 69] { R9840 += 1, R9772 += 1 };
  s2 -> s1 [70, 65535] { R9840 += 1, R9772 += 1 };
  s3 -> s1 [0, 68] { R9840 += 1, R9772 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R9840 += 1, R9772 += 1, R9 += 1 };
  s3 -> s3 [0, 65535] { R9840 += 1, R9771 += 1, R9772 += 1 };
  s3 -> s4 [69, 69] { R9840 += 1, R9772 += 1 };
  s3 -> s1 [70, 65535] { R9840 += 1, R9772 += 1 };
  s4 -> s4 [0, 65535] { R9840 += 1, R9772 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9840 += 1 };
  accepting s3, s5, s2, s6, s1, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 68] { R9842 += 1, R9774 += 1, R9712 += 1 };
  s0 -> s2 [0, 65535] { R9842 += 1, R9773 += 1, R9774 += 1 };
  s0 -> s0 [0, 65535] { R9841 += 1, R9842 += 1 };
  s0 -> s3 [0, 65535] { R9842 += 1, R9774 += 1, R9711 += 1, R9712 += 1 };
  s0 -> s1 [70, 65535] { R9842 += 1, R9774 += 1, R9712 += 1 };
  s1 -> s1 [0, 68] { R9842 += 1, R9774 += 1, R9712 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R9842 += 1, R9774 += 1 };
  s1 -> s5 [0, 65535] { R9842 += 1 };
  s1 -> s1 [70, 65535] { R9842 += 1, R9774 += 1, R9712 += 1 };
  s2 -> s1 [0, 68] { R9842 += 1, R9774 += 1, R9712 += 1 };
  s2 -> s2 [0, 65535] { R9842 += 1, R9773 += 1, R9774 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R9842 += 1, R9774 += 1, R9711 += 1, R9712 += 1 };
  s2 -> s1 [70, 65535] { R9842 += 1, R9774 += 1, R9712 += 1 };
  s3 -> s1 [0, 68] { R9842 += 1, R9774 += 1, R9712 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R9842 += 1 };
  s3 -> s3 [0, 65535] { R9842 += 1, R9774 += 1, R9711 += 1, R9712 += 1 };
  s3 -> s1 [70, 65535] { R9842 += 1, R9774 += 1, R9712 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R9842 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R9844 += 1, R9775 += 1, R9776 += 1 };
  s0 -> s2 [0, 65535] { R9844 += 1, R9776 += 1, R9713 += 1, R9714 += 1 };
  s0 -> s3 [0, 65535] { R9844 += 1, R9776 += 1, R9714 += 1, R21 += 1 };
  s0 -> s0 [0, 65535] { R9843 += 1, R9844 += 1 };
  s1 -> s1 [0, 65535] { R9844 += 1, R9775 += 1, R9776 += 1 };
  s1 -> s2 [0, 65535] { R9844 += 1, R9776 += 1, R9713 += 1, R9714 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R9844 += 1, R9776 += 1, R9714 += 1, R21 += 1 };
  s2 -> s2 [0, 65535] { R9844 += 1, R9776 += 1, R9713 += 1, R9714 += 1 };
  s2 -> s4 [0, 65535] { R9844 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R9844 += 1, R9776 += 1, R9714 += 1, R21 += 1 };
  s3 -> s4 [0, 65535] { R9844 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R9844 += 1, R9776 += 1, R9714 += 1, R21 += 1 };
  s3 -> s6 [0, 65535] { R9844 += 1, R9776 += 1 };
  s4 -> s4 [0, 65535] { R9844 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R9844 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9844 += 1, R9776 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 69] { R9846 += 1, R9778 += 1, R9716 += 1 };
  s0 -> s2 [0, 65535] { R9846 += 1, R9778 += 1, R9715 += 1, R9716 += 1 };
  s0 -> s3 [0, 65535] { R9846 += 1, R9777 += 1, R9778 += 1 };
  s0 -> s0 [0, 65535] { R9845 += 1, R9846 += 1 };
  s0 -> s1 [85, 65535] { R9846 += 1, R9778 += 1, R9716 += 1 };
  s1 -> s1 [0, 69] { R9846 += 1, R9778 += 1, R9716 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R9846 += 1 };
  s1 -> s1 [0, 65535] { R9846 += 1, R9778 += 1 };
  s1 -> s1 [85, 65535] { R9846 += 1, R9778 += 1, R9716 += 1 };
  s2 -> s1 [0, 69] { R9846 += 1, R9778 += 1, R9716 += 1 };
  s2 -> s2 [0, 65535] { R9846 += 1, R9778 += 1, R9715 += 1, R9716 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R9846 += 1 };
  s2 -> s1 [85, 65535] { R9846 += 1, R9778 += 1, R9716 += 1 };
  s3 -> s1 [0, 69] { R9846 += 1, R9778 += 1, R9716 += 1 };
  s3 -> s2 [0, 65535] { R9846 += 1, R9778 += 1, R9715 += 1, R9716 += 1 };
  s3 -> s3 [0, 65535] { R9846 += 1, R9777 += 1, R9778 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [85, 65535] { R9846 += 1, R9778 += 1, R9716 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R9846 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 65535] { R9848 += 1, R9779 += 1, R9780 += 1 };
  s0 -> s0 [0, 65535] { R9847 += 1, R9848 += 1 };
  s0 -> s2 [0, 65535] { R9848 += 1, R9780 += 1, R9717 += 1, R9718 += 1 };
  s0 -> s3 [0, 65535] { R9848 += 1, R9780 += 1, R9718 += 1, R118 += 1 };
  s1 -> s1 [0, 65535] { R9848 += 1, R9779 += 1, R9780 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R9848 += 1, R9780 += 1, R9717 += 1, R9718 += 1 };
  s1 -> s3 [0, 65535] { R9848 += 1, R9780 += 1, R9718 += 1, R118 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R9848 += 1, R9780 += 1, R9717 += 1, R9718 += 1 };
  s2 -> s6 [0, 65535] { R9848 += 1 };
  s2 -> s3 [0, 65535] { R9848 += 1, R9780 += 1, R9718 += 1, R118 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R9848 += 1, R9780 += 1 };
  s3 -> s6 [0, 65535] { R9848 += 1 };
  s3 -> s3 [0, 65535] { R9848 += 1, R9780 += 1, R9718 += 1, R118 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R9848 += 1, R9780 += 1 };
  s5 -> s6 [0, 65535] { R9848 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R9848 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 84] { R9850 += 1, R9782 += 1, R9720 += 1 };
  s0 -> s2 [0, 65535] { R9850 += 1, R9782 += 1, R9720 += 1, R120 += 1 };
  s0 -> s3 [0, 65535] { R9850 += 1, R9781 += 1, R9782 += 1 };
  s0 -> s4 [0, 65535] { R9850 += 1, R9782 += 1, R9719 += 1, R9720 += 1 };
  s0 -> s0 [0, 65535] { R9849 += 1, R9850 += 1 };
  s0 -> s1 [86, 65535] { R9850 += 1, R9782 += 1, R9720 += 1 };
  s1 -> s1 [0, 84] { R9850 += 1, R9782 += 1, R9720 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R9850 += 1 };
  s1 -> s1 [0, 65535] { R9850 += 1, R9782 += 1 };
  s1 -> s1 [86, 65535] { R9850 += 1, R9782 += 1, R9720 += 1 };
  s2 -> s1 [0, 84] { R9850 += 1, R9782 += 1, R9720 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R9850 += 1, R9782 += 1, R9720 += 1, R120 += 1 };
  s2 -> s7 [0, 65535] { R9850 += 1, R9782 += 1 };
  s2 -> s6 [0, 65535] { R9850 += 1 };
  s2 -> s1 [86, 65535] { R9850 += 1, R9782 += 1, R9720 += 1 };
  s3 -> s1 [0, 84] { R9850 += 1, R9782 += 1, R9720 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R9850 += 1, R9782 += 1, R9720 += 1, R120 += 1 };
  s3 -> s3 [0, 65535] { R9850 += 1, R9781 += 1, R9782 += 1 };
  s3 -> s4 [0, 65535] { R9850 += 1, R9782 += 1, R9719 += 1, R9720 += 1 };
  s3 -> s1 [86, 65535] { R9850 += 1, R9782 += 1, R9720 += 1 };
  s4 -> s1 [0, 84] { R9850 += 1, R9782 += 1, R9720 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R9850 += 1, R9782 += 1, R9720 += 1, R120 += 1 };
  s4 -> s4 [0, 65535] { R9850 += 1, R9782 += 1, R9719 += 1, R9720 += 1 };
  s4 -> s6 [0, 65535] { R9850 += 1 };
  s4 -> s1 [86, 65535] { R9850 += 1, R9782 += 1, R9720 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9850 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R9850 += 1, R9782 += 1 };
  s7 -> s6 [0, 65535] { R9850 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 84] { R9852 += 1, R9784 += 1, R9722 += 1, R124 += 1 };
  s0 -> s2 [0, 65535] { R9852 += 1, R9784 += 1, R9722 += 1, R123 += 1, R124 += 1 };
  s0 -> s0 [0, 65535] { R9851 += 1, R9852 += 1 };
  s0 -> s3 [0, 65535] { R9852 += 1, R9783 += 1, R9784 += 1 };
  s0 -> s4 [0, 65535] { R9852 += 1, R9784 += 1, R9721 += 1, R9722 += 1 };
  s0 -> s1 [86, 65535] { R9852 += 1, R9784 += 1, R9722 += 1, R124 += 1 };
  s1 -> s1 [0, 84] { R9852 += 1, R9784 += 1, R9722 += 1, R124 += 1 };
  s1 -> s7 [0, 65535] { R9852 += 1, R9784 += 1 };
  s1 -> s1 [0, 65535] { R9852 += 1, R9784 += 1, R9722 += 1 };
  s1 -> s5 [0, 65535] { R9852 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [86, 65535] { R9852 += 1, R9784 += 1, R9722 += 1, R124 += 1 };
  s2 -> s1 [0, 84] { R9852 += 1, R9784 += 1, R9722 += 1, R124 += 1 };
  s2 -> s7 [0, 65535] { R9852 += 1, R9784 += 1 };
  s2 -> s2 [0, 65535] { R9852 += 1, R9784 += 1, R9722 += 1, R123 += 1, R124 += 1 };
  s2 -> s5 [0, 65535] { R9852 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [86, 65535] { R9852 += 1, R9784 += 1, R9722 += 1, R124 += 1 };
  s3 -> s1 [0, 84] { R9852 += 1, R9784 += 1, R9722 += 1, R124 += 1 };
  s3 -> s2 [0, 65535] { R9852 += 1, R9784 += 1, R9722 += 1, R123 += 1, R124 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R9852 += 1, R9783 += 1, R9784 += 1 };
  s3 -> s4 [0, 65535] { R9852 += 1, R9784 += 1, R9721 += 1, R9722 += 1 };
  s3 -> s1 [86, 65535] { R9852 += 1, R9784 += 1, R9722 += 1, R124 += 1 };
  s4 -> s1 [0, 84] { R9852 += 1, R9784 += 1, R9722 += 1, R124 += 1 };
  s4 -> s2 [0, 65535] { R9852 += 1, R9784 += 1, R9722 += 1, R123 += 1, R124 += 1 };
  s4 -> s5 [0, 65535] { R9852 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R9852 += 1, R9784 += 1, R9721 += 1, R9722 += 1 };
  s4 -> s1 [86, 65535] { R9852 += 1, R9784 += 1, R9722 += 1, R124 += 1 };
  s5 -> s5 [0, 65535] { R9852 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R9852 += 1, R9784 += 1 };
  s7 -> s5 [0, 65535] { R9852 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R9854 += 1, R9786 += 1, R9723 += 1, R9724 += 1 };
  s0 -> s2 [0, 65535] { R9854 += 1, R9786 += 1, R9724 += 1 };
  s0 -> s0 [0, 65535] { R9853 += 1, R9854 += 1 };
  s0 -> s3 [0, 65535] { R9854 += 1, R9785 += 1, R9786 += 1 };
  s1 -> s1 [0, 65535] { R9854 += 1, R9786 += 1, R9723 += 1, R9724 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R9854 += 1, R9786 += 1, R9724 += 1 };
  s1 -> s6 [0, 65535] { R9854 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R9854 += 1, R9786 += 1, R9724 += 1 };
  s2 -> s5 [0, 65535] { R9854 += 1, R9786 += 1 };
  s2 -> s6 [0, 65535] { R9854 += 1 };
  s3 -> s1 [0, 65535] { R9854 += 1, R9786 += 1, R9723 += 1, R9724 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R9854 += 1, R9786 += 1, R9724 += 1 };
  s3 -> s3 [0, 65535] { R9854 += 1, R9785 += 1, R9786 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R9854 += 1, R9786 += 1 };
  s5 -> s6 [0, 65535] { R9854 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R9854 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 65535] { R9856 += 1, R9788 += 1, R9725 += 1, R9726 += 1 };
  s0 -> s2 [0, 65535] { R9856 += 1, R9788 += 1, R9726 += 1, R8490 += 1 };
  s0 -> s0 [0, 65535] { R9855 += 1, R9856 += 1 };
  s0 -> s3 [0, 65535] { R9856 += 1, R9787 += 1, R9788 += 1 };
  s0 -> s4 [0, 65535] { R9856 += 1, R9788 += 1, R9726 += 1 };
  s1 -> s1 [0, 65535] { R9856 += 1, R9788 += 1, R9725 += 1, R9726 += 1 };
  s1 -> s2 [0, 65535] { R9856 += 1, R9788 += 1, R9726 += 1, R8490 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R9856 += 1 };
  s1 -> s4 [0, 65535] { R9856 += 1, R9788 += 1, R9726 += 1 };
  s2 -> s2 [0, 65535] { R9856 += 1, R9788 += 1, R9726 += 1, R8490 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R9856 += 1 };
  s2 -> s7 [0, 65535] { R9856 += 1, R9788 += 1 };
  s2 -> s4 [0, 65535] { R9856 += 1, R9788 += 1, R9726 += 1 };
  s3 -> s1 [0, 65535] { R9856 += 1, R9788 += 1, R9725 += 1, R9726 += 1 };
  s3 -> s2 [0, 65535] { R9856 += 1, R9788 += 1, R9726 += 1, R8490 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R9856 += 1, R9787 += 1, R9788 += 1 };
  s3 -> s4 [0, 65535] { R9856 += 1, R9788 += 1, R9726 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R9856 += 1 };
  s4 -> s7 [0, 65535] { R9856 += 1, R9788 += 1 };
  s4 -> s4 [0, 65535] { R9856 += 1, R9788 += 1, R9726 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9856 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R9856 += 1 };
  s7 -> s7 [0, 65535] { R9856 += 1, R9788 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s0 [0, 65535] { R9857 += 1, R9858 += 1 };
  s0 -> s1 [0, 65535] { R9858 += 1, R9789 += 1, R9790 += 1 };
  s0 -> s2 [0, 65535] { R9858 += 1, R9790 += 1, R9728 += 1 };
  s0 -> s3 [0, 65535] { R9858 += 1, R9790 += 1, R9727 += 1, R9728 += 1 };
  s0 -> s4 [0, 65535] { R9858 += 1, R9790 += 1, R9728 += 1, R9189 += 1, R9190 += 1 };
  s1 -> s1 [0, 65535] { R9858 += 1, R9789 += 1, R9790 += 1 };
  s1 -> s2 [0, 65535] { R9858 += 1, R9790 += 1, R9728 += 1 };
  s1 -> s3 [0, 65535] { R9858 += 1, R9790 += 1, R9727 += 1, R9728 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [0, 65535] { R9858 += 1, R9790 += 1, R9728 += 1, R9189 += 1, R9190 += 1 };
  s2 -> s5 [0, 65535] { R9858 += 1, R9790 += 1 };
  s2 -> s6 [0, 65535] { R9858 += 1 };
  s2 -> s2 [0, 65535] { R9858 += 1, R9790 += 1, R9728 += 1 };
  s2 -> s7 [0, 65535];
  s3 -> s6 [0, 65535] { R9858 += 1 };
  s3 -> s2 [0, 65535] { R9858 += 1, R9790 += 1, R9728 += 1 };
  s3 -> s3 [0, 65535] { R9858 += 1, R9790 += 1, R9727 += 1, R9728 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [0, 65535] { R9858 += 1, R9790 += 1, R9728 += 1, R9189 += 1, R9190 += 1 };
  s4 -> s5 [0, 65535] { R9858 += 1, R9790 += 1 };
  s4 -> s6 [0, 65535] { R9858 += 1 };
  s4 -> s2 [0, 65535] { R9858 += 1, R9790 += 1, R9728 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R9858 += 1, R9790 += 1, R9728 += 1, R9189 += 1, R9190 += 1 };
  s5 -> s5 [0, 65535] { R9858 += 1, R9790 += 1 };
  s5 -> s6 [0, 65535] { R9858 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R9858 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s0 [0, 65535] { R9859 += 1, R9860 += 1 };
  s0 -> s1 [0, 65535] { R9860 += 1, R9792 += 1, R9730 += 1 };
  s0 -> s2 [0, 65535] { R9860 += 1, R9792 += 1, R9729 += 1, R9730 += 1 };
  s0 -> s3 [0, 65535] { R9860 += 1, R9791 += 1, R9792 += 1 };
  s1 -> s5 [0, 65535] { R9860 += 1 };
  s1 -> s6 [0, 65535] { R9860 += 1, R9792 += 1 };
  s1 -> s1 [0, 65535] { R9860 += 1, R9792 += 1, R9730 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R9860 += 1 };
  s2 -> s1 [0, 65535] { R9860 += 1, R9792 += 1, R9730 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R9860 += 1, R9792 += 1, R9729 += 1, R9730 += 1 };
  s3 -> s1 [0, 65535] { R9860 += 1, R9792 += 1, R9730 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R9860 += 1, R9792 += 1, R9729 += 1, R9730 += 1 };
  s3 -> s3 [0, 65535] { R9860 += 1, R9791 += 1, R9792 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R9860 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R9860 += 1 };
  s6 -> s6 [0, 65535] { R9860 += 1, R9792 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 65535] { R9862 += 1, R9793 += 1, R9794 += 1 };
  s0 -> s2 [0, 65535] { R9862 += 1, R9794 += 1, R9749 += 1, R9750 += 1 };
  s0 -> s3 [0, 65535] { R9862 += 1, R9794 += 1, R9750 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R9861 += 1, R9862 += 1 };
  s1 -> s1 [0, 65535] { R9862 += 1, R9793 += 1, R9794 += 1 };
  s1 -> s2 [0, 65535] { R9862 += 1, R9794 += 1, R9749 += 1, R9750 += 1 };
  s1 -> s3 [0, 65535] { R9862 += 1, R9794 += 1, R9750 += 1, R22 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R9862 += 1, R9794 += 1, R9749 += 1, R9750 += 1 };
  s2 -> s3 [0, 65535] { R9862 += 1, R9794 += 1, R9750 += 1, R22 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R9862 += 1 };
  s3 -> s4 [0, 65535] { R9862 += 1, R9794 += 1 };
  s3 -> s3 [0, 65535] { R9862 += 1, R9794 += 1, R9750 += 1, R22 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R9862 += 1 };
  s4 -> s4 [0, 65535] { R9862 += 1, R9794 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R9862 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9862 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 68] { R9864 += 1, R9796 += 1, R9752 += 1 };
  s0 -> s2 [0, 65535] { R9864 += 1, R9795 += 1, R9796 += 1 };
  s0 -> s3 [0, 65535] { R9864 += 1, R9796 += 1, R9751 += 1, R9752 += 1 };
  s0 -> s0 [0, 65535] { R9863 += 1, R9864 += 1 };
  s0 -> s4 [69, 69] { R9864 += 1, R9796 += 1, R9752 += 1 };
  s0 -> s5 [69, 69] { R9864 += 1, R9796 += 1, R9752 += 1 };
  s0 -> s1 [85, 65535] { R9864 += 1, R9796 += 1, R9752 += 1 };
  s1 -> s1 [0, 68] { R9864 += 1, R9796 += 1, R9752 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R9864 += 1 };
  s1 -> s1 [0, 65535] { R9864 += 1, R9796 += 1 };
  s1 -> s4 [69, 69] { R9864 += 1, R9796 += 1, R9752 += 1 };
  s1 -> s5 [69, 69] { R9864 += 1, R9796 += 1, R9752 += 1 };
  s1 -> s1 [85, 65535] { R9864 += 1, R9796 += 1, R9752 += 1 };
  s2 -> s1 [0, 68] { R9864 += 1, R9796 += 1, R9752 += 1 };
  s2 -> s2 [0, 65535] { R9864 += 1, R9795 += 1, R9796 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R9864 += 1, R9796 += 1, R9751 += 1, R9752 += 1 };
  s2 -> s4 [69, 69] { R9864 += 1, R9796 += 1, R9752 += 1 };
  s2 -> s5 [69, 69] { R9864 += 1, R9796 += 1, R9752 += 1 };
  s2 -> s1 [85, 65535] { R9864 += 1, R9796 += 1, R9752 += 1 };
  s3 -> s1 [0, 68] { R9864 += 1, R9796 += 1, R9752 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R9864 += 1 };
  s3 -> s3 [0, 65535] { R9864 += 1, R9796 += 1, R9751 += 1, R9752 += 1 };
  s3 -> s4 [69, 69] { R9864 += 1, R9796 += 1, R9752 += 1 };
  s3 -> s5 [69, 69] { R9864 += 1, R9796 += 1, R9752 += 1 };
  s3 -> s1 [85, 65535] { R9864 += 1, R9796 += 1, R9752 += 1 };
  s4 -> s4 [0, 69] { R9864 += 1, R9796 += 1, R9752 += 1 };
  s4 -> s4 [0, 65535] { R9864 += 1, R9796 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R9864 += 1 };
  s4 -> s4 [85, 65535] { R9864 += 1, R9796 += 1, R9752 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R9864 += 1 };
  s5 -> s5 [0, 65535] { R9864 += 1, R9796 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R9864 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 68] { R9866 += 1, R9798 += 1, R9754 += 1, R117 += 1 };
  s0 -> s0 [0, 65535] { R9865 += 1, R9866 += 1 };
  s0 -> s2 [0, 65535] { R9866 += 1, R9798 += 1, R9753 += 1, R9754 += 1 };
  s0 -> s3 [0, 65535] { R9866 += 1, R9797 += 1, R9798 += 1 };
  s0 -> s4 [69, 69] { R9866 += 1, R9798 += 1, R9754 += 1, R117 += 1 };
  s0 -> s5 [69, 69] { R9866 += 1, R9798 += 1, R9754 += 1, R117 += 1 };
  s0 -> s1 [70, 65535] { R9866 += 1, R9798 += 1, R9754 += 1, R117 += 1 };
  s1 -> s1 [0, 68] { R9866 += 1, R9798 += 1, R9754 += 1, R117 += 1 };
  s1 -> s1 [0, 65535] { R9866 += 1, R9798 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R9866 += 1 };
  s1 -> s4 [69, 69] { R9866 += 1, R9798 += 1, R9754 += 1, R117 += 1 };
  s1 -> s5 [69, 69] { R9866 += 1, R9798 += 1, R9754 += 1, R117 += 1 };
  s1 -> s1 [70, 65535] { R9866 += 1, R9798 += 1, R9754 += 1, R117 += 1 };
  s2 -> s1 [0, 68] { R9866 += 1, R9798 += 1, R9754 += 1, R117 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R9866 += 1 };
  s2 -> s2 [0, 65535] { R9866 += 1, R9798 += 1, R9753 += 1, R9754 += 1 };
  s2 -> s4 [69, 69] { R9866 += 1, R9798 += 1, R9754 += 1, R117 += 1 };
  s2 -> s5 [69, 69] { R9866 += 1, R9798 += 1, R9754 += 1, R117 += 1 };
  s2 -> s1 [70, 65535] { R9866 += 1, R9798 += 1, R9754 += 1, R117 += 1 };
  s3 -> s1 [0, 68] { R9866 += 1, R9798 += 1, R9754 += 1, R117 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R9866 += 1, R9798 += 1, R9753 += 1, R9754 += 1 };
  s3 -> s3 [0, 65535] { R9866 += 1, R9797 += 1, R9798 += 1 };
  s3 -> s4 [69, 69] { R9866 += 1, R9798 += 1, R9754 += 1, R117 += 1 };
  s3 -> s5 [69, 69] { R9866 += 1, R9798 += 1, R9754 += 1, R117 += 1 };
  s3 -> s1 [70, 65535] { R9866 += 1, R9798 += 1, R9754 += 1, R117 += 1 };
  s4 -> s4 [0, 65535] { R9866 += 1, R9798 += 1, R9754 += 1, R117 += 1 };
  s4 -> s8 [0, 65535] { R9866 += 1, R9798 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R9866 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R9866 += 1 };
  s5 -> s5 [0, 65535] { R9866 += 1, R9798 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R9866 += 1 };
  s8 -> s8 [0, 65535] { R9866 += 1, R9798 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R9866 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 68] { R9868 += 1, R9800 += 1, R9756 += 1, R119 += 1 };
  s0 -> s2 [0, 65535] { R9868 += 1, R9800 += 1, R9755 += 1, R9756 += 1 };
  s0 -> s0 [0, 65535] { R9867 += 1, R9868 += 1 };
  s0 -> s3 [0, 65535] { R9868 += 1, R9799 += 1, R9800 += 1 };
  s0 -> s4 [69, 69] { R9868 += 1, R9800 += 1, R9756 += 1, R119 += 1 };
  s0 -> s5 [69, 69] { R9868 += 1, R9800 += 1, R9756 += 1, R119 += 1 };
  s0 -> s1 [70, 65535] { R9868 += 1, R9800 += 1, R9756 += 1, R119 += 1 };
  s1 -> s1 [0, 68] { R9868 += 1, R9800 += 1, R9756 += 1, R119 += 1 };
  s1 -> s6 [0, 65535] { R9868 += 1 };
  s1 -> s1 [0, 65535] { R9868 += 1, R9800 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [69, 69] { R9868 += 1, R9800 += 1, R9756 += 1, R119 += 1 };
  s1 -> s5 [69, 69] { R9868 += 1, R9800 += 1, R9756 += 1, R119 += 1 };
  s1 -> s1 [70, 65535] { R9868 += 1, R9800 += 1, R9756 += 1, R119 += 1 };
  s2 -> s1 [0, 68] { R9868 += 1, R9800 += 1, R9756 += 1, R119 += 1 };
  s2 -> s6 [0, 65535] { R9868 += 1 };
  s2 -> s2 [0, 65535] { R9868 += 1, R9800 += 1, R9755 += 1, R9756 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [69, 69] { R9868 += 1, R9800 += 1, R9756 += 1, R119 += 1 };
  s2 -> s5 [69, 69] { R9868 += 1, R9800 += 1, R9756 += 1, R119 += 1 };
  s2 -> s1 [70, 65535] { R9868 += 1, R9800 += 1, R9756 += 1, R119 += 1 };
  s3 -> s1 [0, 68] { R9868 += 1, R9800 += 1, R9756 += 1, R119 += 1 };
  s3 -> s2 [0, 65535] { R9868 += 1, R9800 += 1, R9755 += 1, R9756 += 1 };
  s3 -> s3 [0, 65535] { R9868 += 1, R9799 += 1, R9800 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s4 [69, 69] { R9868 += 1, R9800 += 1, R9756 += 1, R119 += 1 };
  s3 -> s5 [69, 69] { R9868 += 1, R9800 += 1, R9756 += 1, R119 += 1 };
  s3 -> s1 [70, 65535] { R9868 += 1, R9800 += 1, R9756 += 1, R119 += 1 };
  s4 -> s6 [0, 65535] { R9868 += 1 };
  s4 -> s4 [0, 65535] { R9868 += 1, R9800 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s6 [0, 65535] { R9868 += 1 };
  s5 -> s7 [0, 65535] { R9868 += 1, R9800 += 1 };
  s5 -> s5 [0, 65535] { R9868 += 1, R9800 += 1, R9756 += 1, R119 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R9868 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s6 [0, 65535] { R9868 += 1 };
  s7 -> s7 [0, 65535] { R9868 += 1, R9800 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 68] { R9870 += 1, R9802 += 1, R9758 += 1, R121 += 1, R122 += 1 };
  s0 -> s0 [0, 65535] { R9869 += 1, R9870 += 1 };
  s0 -> s2 [0, 65535] { R9870 += 1, R9802 += 1, R9757 += 1, R9758 += 1 };
  s0 -> s3 [0, 65535] { R9870 += 1, R9801 += 1, R9802 += 1 };
  s0 -> s4 [69, 69] { R9870 += 1, R9802 += 1, R9758 += 1, R121 += 1, R122 += 1 };
  s0 -> s5 [69, 69] { R9870 += 1, R9802 += 1, R9758 += 1, R121 += 1, R122 += 1 };
  s0 -> s1 [70, 65535] { R9870 += 1, R9802 += 1, R9758 += 1, R121 += 1, R122 += 1 };
  s1 -> s1 [0, 68] { R9870 += 1, R9802 += 1, R9758 += 1, R121 += 1, R122 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R9870 += 1 };
  s1 -> s1 [0, 65535] { R9870 += 1, R9802 += 1 };
  s1 -> s4 [69, 69] { R9870 += 1, R9802 += 1, R9758 += 1, R121 += 1, R122 += 1 };
  s1 -> s5 [69, 69] { R9870 += 1, R9802 += 1, R9758 += 1, R121 += 1, R122 += 1 };
  s1 -> s1 [70, 65535] { R9870 += 1, R9802 += 1, R9758 += 1, R121 += 1, R122 += 1 };
  s2 -> s1 [0, 68] { R9870 += 1, R9802 += 1, R9758 += 1, R121 += 1, R122 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R9870 += 1, R9802 += 1, R9757 += 1, R9758 += 1 };
  s2 -> s7 [0, 65535] { R9870 += 1 };
  s2 -> s4 [69, 69] { R9870 += 1, R9802 += 1, R9758 += 1, R121 += 1, R122 += 1 };
  s2 -> s5 [69, 69] { R9870 += 1, R9802 += 1, R9758 += 1, R121 += 1, R122 += 1 };
  s2 -> s1 [70, 65535] { R9870 += 1, R9802 += 1, R9758 += 1, R121 += 1, R122 += 1 };
  s3 -> s1 [0, 68] { R9870 += 1, R9802 += 1, R9758 += 1, R121 += 1, R122 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R9870 += 1, R9802 += 1, R9757 += 1, R9758 += 1 };
  s3 -> s3 [0, 65535] { R9870 += 1, R9801 += 1, R9802 += 1 };
  s3 -> s4 [69, 69] { R9870 += 1, R9802 += 1, R9758 += 1, R121 += 1, R122 += 1 };
  s3 -> s5 [69, 69] { R9870 += 1, R9802 += 1, R9758 += 1, R121 += 1, R122 += 1 };
  s3 -> s1 [70, 65535] { R9870 += 1, R9802 += 1, R9758 += 1, R121 += 1, R122 += 1 };
  s4 -> s8 [0, 65535] { R9870 += 1, R9802 += 1 };
  s4 -> s4 [0, 65535] { R9870 += 1, R9802 += 1, R9758 += 1, R121 += 1, R122 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R9870 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R9870 += 1, R9802 += 1 };
  s5 -> s7 [0, 65535] { R9870 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R9870 += 1 };
  s8 -> s8 [0, 65535] { R9870 += 1, R9802 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R9870 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 68] { R9872 += 1, R9804 += 1, R9760 += 1, R8481 += 1, R8482 += 1 };
  s0 -> s2 [0, 68] { R9872 += 1, R9804 += 1, R9760 += 1, R8482 += 1, R8483 += 1 };
  s0 -> s3 [0, 65535] { R9872 += 1, R9804 += 1, R9759 += 1, R9760 += 1 };
  s0 -> s4 [0, 65535] { R9872 += 1, R9803 += 1, R9804 += 1 };
  s0 -> s0 [0, 65535] { R9871 += 1, R9872 += 1 };
  s0 -> s5 [69, 69] { R9872 += 1, R9804 += 1, R9760 += 1, R8482 += 1, R8483 += 1 };
  s0 -> s6 [69, 69] { R9872 += 1, R9804 += 1, R9760 += 1, R8482 += 1, R8483 += 1 };
  s0 -> s7 [69, 69] { R9872 += 1, R9804 += 1, R9760 += 1, R8481 += 1, R8482 += 1 };
  s0 -> s8 [69, 69] { R9872 += 1, R9804 += 1, R9760 += 1, R8481 += 1, R8482 += 1 };
  s0 -> s1 [70, 65535] { R9872 += 1, R9804 += 1, R9760 += 1, R8481 += 1, R8482 += 1 };
  s0 -> s2 [70, 65535] { R9872 += 1, R9804 += 1, R9760 += 1, R8482 += 1, R8483 += 1 };
  s1 -> s1 [0, 68] { R9872 += 1, R9804 += 1, R9760 += 1, R8481 += 1, R8482 += 1 };
  s1 -> s2 [0, 68] { R9872 += 1, R9804 += 1, R9760 += 1, R8482 += 1, R8483 += 1 };
  s1 -> s5 [69, 69] { R9872 += 1, R9804 += 1, R9760 += 1, R8482 += 1, R8483 += 1 };
  s1 -> s6 [69, 69] { R9872 += 1, R9804 += 1, R9760 += 1, R8482 += 1, R8483 += 1 };
  s1 -> s7 [69, 69] { R9872 += 1, R9804 += 1, R9760 += 1, R8481 += 1, R8482 += 1 };
  s1 -> s8 [69, 69] { R9872 += 1, R9804 += 1, R9760 += 1, R8481 += 1, R8482 += 1 };
  s1 -> s1 [70, 65535] { R9872 += 1, R9804 += 1, R9760 += 1, R8481 += 1, R8482 += 1 };
  s1 -> s2 [70, 65535] { R9872 += 1, R9804 += 1, R9760 += 1, R8482 += 1, R8483 += 1 };
  s2 -> s13 [0, 68] { R9872 += 1, R9804 += 1, R9760 += 1 };
  s2 -> s2 [0, 68] { R9872 += 1, R9804 += 1, R9760 += 1, R8482 += 1, R8483 += 1 };
  s2 -> s5 [69, 69] { R9872 += 1, R9804 += 1, R9760 += 1, R8482 += 1, R8483 += 1 };
  s2 -> s6 [69, 69] { R9872 += 1, R9804 += 1, R9760 += 1, R8482 += 1, R8483 += 1 };
  s2 -> s14 [69, 69] { R9872 += 1, R9804 += 1, R9760 += 1 };
  s2 -> s9 [69, 69] { R9872 += 1, R9804 += 1, R9760 += 1 };
  s2 -> s13 [70, 65535] { R9872 += 1, R9804 += 1, R9760 += 1 };
  s2 -> s2 [70, 65535] { R9872 += 1, R9804 += 1, R9760 += 1, R8482 += 1, R8483 += 1 };
  s3 -> s1 [0, 68] { R9872 += 1, R9804 += 1, R9760 += 1, R8481 += 1, R8482 += 1 };
  s3 -> s2 [0, 68] { R9872 += 1, R9804 += 1, R9760 += 1, R8482 += 1, R8483 += 1 };
  s3 -> s3 [0, 65535] { R9872 += 1, R9804 += 1, R9759 += 1, R9760 += 1 };
  s3 -> s5 [69, 69] { R9872 += 1, R9804 += 1, R9760 += 1, R8482 += 1, R8483 += 1 };
  s3 -> s6 [69, 69] { R9872 += 1, R9804 += 1, R9760 += 1, R8482 += 1, R8483 += 1 };
  s3 -> s7 [69, 69] { R9872 += 1, R9804 += 1, R9760 += 1, R8481 += 1, R8482 += 1 };
  s3 -> s8 [69, 69] { R9872 += 1, R9804 += 1, R9760 += 1, R8481 += 1, R8482 += 1 };
  s3 -> s1 [70, 65535] { R9872 += 1, R9804 += 1, R9760 += 1, R8481 += 1, R8482 += 1 };
  s3 -> s2 [70, 65535] { R9872 += 1, R9804 += 1, R9760 += 1, R8482 += 1, R8483 += 1 };
  s4 -> s1 [0, 68] { R9872 += 1, R9804 += 1, R9760 += 1, R8481 += 1, R8482 += 1 };
  s4 -> s2 [0, 68] { R9872 += 1, R9804 += 1, R9760 += 1, R8482 += 1, R8483 += 1 };
  s4 -> s3 [0, 65535] { R9872 += 1, R9804 += 1, R9759 += 1, R9760 += 1 };
  s4 -> s4 [0, 65535] { R9872 += 1, R9803 += 1, R9804 += 1 };
  s4 -> s5 [69, 69] { R9872 += 1, R9804 += 1, R9760 += 1, R8482 += 1, R8483 += 1 };
  s4 -> s6 [69, 69] { R9872 += 1, R9804 += 1, R9760 += 1, R8482 += 1, R8483 += 1 };
  s4 -> s7 [69, 69] { R9872 += 1, R9804 += 1, R9760 += 1, R8481 += 1, R8482 += 1 };
  s4 -> s8 [69, 69] { R9872 += 1, R9804 += 1, R9760 += 1, R8481 += 1, R8482 += 1 };
  s4 -> s1 [70, 65535] { R9872 += 1, R9804 += 1, R9760 += 1, R8481 += 1, R8482 += 1 };
  s4 -> s2 [70, 65535] { R9872 += 1, R9804 += 1, R9760 += 1, R8482 += 1, R8483 += 1 };
  s6 -> s6 [0, 65535] { R9872 += 1, R9804 += 1, R9760 += 1, R8482 += 1, R8483 += 1 };
  s6 -> s9 [0, 65535] { R9872 += 1, R9804 += 1, R9760 += 1 };
  s7 -> s6 [0, 65535] { R9872 += 1, R9804 += 1, R9760 += 1, R8482 += 1, R8483 += 1 };
  s7 -> s7 [0, 65535] { R9872 += 1, R9804 += 1, R9760 += 1, R8481 += 1, R8482 += 1 };
  s9 -> s10 [0, 65535] { R9872 += 1 };
  s9 -> s11 [0, 65535] { R9872 += 1, R9804 += 1 };
  s9 -> s9 [0, 65535] { R9872 += 1, R9804 += 1, R9760 += 1 };
  s9 -> s12 [0, 65535];
  s10 -> s10 [0, 65535] { R9872 += 1 };
  s10 -> s12 [0, 65535];
  s11 -> s10 [0, 65535] { R9872 += 1 };
  s11 -> s11 [0, 65535] { R9872 += 1, R9804 += 1 };
  s11 -> s12 [0, 65535];
  s12 -> s12 [0, 65535];
  s13 -> s13 [0, 68] { R9872 += 1, R9804 += 1, R9760 += 1 };
  s13 -> s13 [0, 65535] { R9872 += 1, R9804 += 1 };
  s13 -> s10 [0, 65535] { R9872 += 1 };
  s13 -> s12 [0, 65535];
  s13 -> s14 [69, 69] { R9872 += 1, R9804 += 1, R9760 += 1 };
  s13 -> s9 [69, 69] { R9872 += 1, R9804 += 1, R9760 += 1 };
  s13 -> s13 [70, 65535] { R9872 += 1, R9804 += 1, R9760 += 1 };
  s14 -> s14 [0, 65535] { R9872 += 1, R9804 += 1 };
  s14 -> s10 [0, 65535] { R9872 += 1 };
  s14 -> s12 [0, 65535];
  accepting s12, s13, s9, s14, s10, s11;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 68] { R9874 += 1, R9806 += 1, R9762 += 1, R8488 += 1 };
  s0 -> s2 [0, 65535] { R9874 += 1, R9806 += 1, R9761 += 1, R9762 += 1 };
  s0 -> s0 [0, 65535] { R9873 += 1, R9874 += 1 };
  s0 -> s3 [0, 65535] { R9874 += 1, R9805 += 1, R9806 += 1 };
  s0 -> s4 [69, 69] { R9874 += 1, R9806 += 1, R9762 += 1, R8488 += 1 };
  s0 -> s5 [69, 69] { R9874 += 1, R9806 += 1, R9762 += 1, R8488 += 1 };
  s0 -> s1 [70, 65535] { R9874 += 1, R9806 += 1, R9762 += 1, R8488 += 1 };
  s1 -> s1 [0, 68] { R9874 += 1, R9806 += 1, R9762 += 1, R8488 += 1 };
  s1 -> s6 [0, 65535] { R9874 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R9874 += 1, R9806 += 1 };
  s1 -> s4 [69, 69] { R9874 += 1, R9806 += 1, R9762 += 1, R8488 += 1 };
  s1 -> s5 [69, 69] { R9874 += 1, R9806 += 1, R9762 += 1, R8488 += 1 };
  s1 -> s1 [70, 65535] { R9874 += 1, R9806 += 1, R9762 += 1, R8488 += 1 };
  s2 -> s1 [0, 68] { R9874 += 1, R9806 += 1, R9762 += 1, R8488 += 1 };
  s2 -> s6 [0, 65535] { R9874 += 1 };
  s2 -> s2 [0, 65535] { R9874 += 1, R9806 += 1, R9761 += 1, R9762 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [69, 69] { R9874 += 1, R9806 += 1, R9762 += 1, R8488 += 1 };
  s2 -> s5 [69, 69] { R9874 += 1, R9806 += 1, R9762 += 1, R8488 += 1 };
  s2 -> s1 [70, 65535] { R9874 += 1, R9806 += 1, R9762 += 1, R8488 += 1 };
  s3 -> s1 [0, 68] { R9874 += 1, R9806 += 1, R9762 += 1, R8488 += 1 };
  s3 -> s2 [0, 65535] { R9874 += 1, R9806 += 1, R9761 += 1, R9762 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R9874 += 1, R9805 += 1, R9806 += 1 };
  s3 -> s4 [69, 69] { R9874 += 1, R9806 += 1, R9762 += 1, R8488 += 1 };
  s3 -> s5 [69, 69] { R9874 += 1, R9806 += 1, R9762 += 1, R8488 += 1 };
  s3 -> s1 [70, 65535] { R9874 += 1, R9806 += 1, R9762 += 1, R8488 += 1 };
  s4 -> s4 [0, 65535] { R9874 += 1, R9806 += 1, R9762 += 1, R8488 += 1 };
  s4 -> s6 [0, 65535] { R9874 += 1 };
  s4 -> s8 [0, 65535] { R9874 += 1, R9806 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s6 [0, 65535] { R9874 += 1 };
  s5 -> s5 [0, 65535] { R9874 += 1, R9806 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R9874 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R9874 += 1 };
  s8 -> s8 [0, 65535] { R9874 += 1, R9806 += 1 };
  s8 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 68] { R9876 += 1, R9808 += 1, R9764 += 1, R9186 += 1, R9187 += 1 };
  s0 -> s2 [0, 68] { R9876 += 1, R9808 += 1, R9764 += 1, R9185 += 1, R9186 += 1 };
  s0 -> s0 [0, 65535] { R9875 += 1, R9876 += 1 };
  s0 -> s3 [0, 65535] { R9876 += 1, R9808 += 1, R9763 += 1, R9764 += 1 };
  s0 -> s4 [0, 65535] { R9876 += 1, R9807 += 1, R9808 += 1 };
  s0 -> s5 [69, 69] { R9876 += 1, R9808 += 1, R9764 += 1, R9186 += 1, R9187 += 1 };
  s0 -> s6 [69, 69] { R9876 += 1, R9808 += 1, R9764 += 1, R9186 += 1, R9187 += 1 };
  s0 -> s7 [69, 69] { R9876 += 1, R9808 += 1, R9764 += 1, R9185 += 1, R9186 += 1 };
  s0 -> s8 [69, 69] { R9876 += 1, R9808 += 1, R9764 += 1, R9185 += 1, R9186 += 1 };
  s0 -> s1 [70, 65535] { R9876 += 1, R9808 += 1, R9764 += 1, R9186 += 1, R9187 += 1 };
  s0 -> s2 [70, 65535] { R9876 += 1, R9808 += 1, R9764 += 1, R9185 += 1, R9186 += 1 };
  s1 -> s1 [0, 68] { R9876 += 1, R9808 += 1, R9764 += 1, R9186 += 1, R9187 += 1 };
  s1 -> s1 [0, 65535] { R9876 += 1, R9808 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s11 [0, 65535] { R9876 += 1 };
  s1 -> s5 [69, 69] { R9876 += 1, R9808 += 1, R9764 += 1, R9186 += 1, R9187 += 1 };
  s1 -> s6 [69, 69] { R9876 += 1, R9808 += 1, R9764 += 1, R9186 += 1, R9187 += 1 };
  s1 -> s1 [70, 65535] { R9876 += 1, R9808 += 1, R9764 += 1, R9186 += 1, R9187 += 1 };
  s2 -> s1 [0, 68] { R9876 += 1, R9808 += 1, R9764 += 1, R9186 += 1, R9187 += 1 };
  s2 -> s2 [0, 68] { R9876 += 1, R9808 += 1, R9764 += 1, R9185 += 1, R9186 += 1 };
  s2 -> s5 [69, 69] { R9876 += 1, R9808 += 1, R9764 += 1, R9186 += 1, R9187 += 1 };
  s2 -> s6 [69, 69] { R9876 += 1, R9808 += 1, R9764 += 1, R9186 += 1, R9187 += 1 };
  s2 -> s7 [69, 69] { R9876 += 1, R9808 += 1, R9764 += 1, R9185 += 1, R9186 += 1 };
  s2 -> s8 [69, 69] { R9876 += 1, R9808 += 1, R9764 += 1, R9185 += 1, R9186 += 1 };
  s2 -> s1 [70, 65535] { R9876 += 1, R9808 += 1, R9764 += 1, R9186 += 1, R9187 += 1 };
  s2 -> s2 [70, 65535] { R9876 += 1, R9808 += 1, R9764 += 1, R9185 += 1, R9186 += 1 };
  s3 -> s1 [0, 68] { R9876 += 1, R9808 += 1, R9764 += 1, R9186 += 1, R9187 += 1 };
  s3 -> s2 [0, 68] { R9876 += 1, R9808 += 1, R9764 += 1, R9185 += 1, R9186 += 1 };
  s3 -> s3 [0, 65535] { R9876 += 1, R9808 += 1, R9763 += 1, R9764 += 1 };
  s3 -> s5 [69, 69] { R9876 += 1, R9808 += 1, R9764 += 1, R9186 += 1, R9187 += 1 };
  s3 -> s6 [69, 69] { R9876 += 1, R9808 += 1, R9764 += 1, R9186 += 1, R9187 += 1 };
  s3 -> s7 [69, 69] { R9876 += 1, R9808 += 1, R9764 += 1, R9185 += 1, R9186 += 1 };
  s3 -> s8 [69, 69] { R9876 += 1, R9808 += 1, R9764 += 1, R9185 += 1, R9186 += 1 };
  s3 -> s1 [70, 65535] { R9876 += 1, R9808 += 1, R9764 += 1, R9186 += 1, R9187 += 1 };
  s3 -> s2 [70, 65535] { R9876 += 1, R9808 += 1, R9764 += 1, R9185 += 1, R9186 += 1 };
  s4 -> s1 [0, 68] { R9876 += 1, R9808 += 1, R9764 += 1, R9186 += 1, R9187 += 1 };
  s4 -> s2 [0, 68] { R9876 += 1, R9808 += 1, R9764 += 1, R9185 += 1, R9186 += 1 };
  s4 -> s3 [0, 65535] { R9876 += 1, R9808 += 1, R9763 += 1, R9764 += 1 };
  s4 -> s4 [0, 65535] { R9876 += 1, R9807 += 1, R9808 += 1 };
  s4 -> s5 [69, 69] { R9876 += 1, R9808 += 1, R9764 += 1, R9186 += 1, R9187 += 1 };
  s4 -> s6 [69, 69] { R9876 += 1, R9808 += 1, R9764 += 1, R9186 += 1, R9187 += 1 };
  s4 -> s7 [69, 69] { R9876 += 1, R9808 += 1, R9764 += 1, R9185 += 1, R9186 += 1 };
  s4 -> s8 [69, 69] { R9876 += 1, R9808 += 1, R9764 += 1, R9185 += 1, R9186 += 1 };
  s4 -> s1 [70, 65535] { R9876 += 1, R9808 += 1, R9764 += 1, R9186 += 1, R9187 += 1 };
  s4 -> s2 [70, 65535] { R9876 += 1, R9808 += 1, R9764 += 1, R9185 += 1, R9186 += 1 };
  s5 -> s9 [0, 65535];
  s5 -> s5 [0, 65535] { R9876 += 1, R9808 += 1 };
  s5 -> s11 [0, 65535] { R9876 += 1 };
  s6 -> s9 [0, 65535];
  s6 -> s10 [0, 65535] { R9876 += 1, R9808 += 1 };
  s6 -> s6 [0, 65535] { R9876 += 1, R9808 += 1, R9764 += 1, R9186 += 1, R9187 += 1 };
  s6 -> s11 [0, 65535] { R9876 += 1 };
  s7 -> s6 [0, 65535] { R9876 += 1, R9808 += 1, R9764 += 1, R9186 += 1, R9187 += 1 };
  s7 -> s7 [0, 65535] { R9876 += 1, R9808 += 1, R9764 += 1, R9185 += 1, R9186 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R9876 += 1, R9808 += 1 };
  s10 -> s11 [0, 65535] { R9876 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R9876 += 1 };
  accepting s5, s9, s6, s1, s10, s11;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 68] { R9878 += 1, R9810 += 1, R9766 += 1, R9707 += 1, R9708 += 1 };
  s0 -> s2 [0, 68] { R9878 += 1, R9810 += 1, R9766 += 1, R9708 += 1 };
  s0 -> s3 [0, 65535] { R9878 += 1, R9810 += 1, R9765 += 1, R9766 += 1 };
  s0 -> s0 [0, 65535] { R9877 += 1, R9878 += 1 };
  s0 -> s4 [0, 65535] { R9878 += 1, R9809 += 1, R9810 += 1 };
  s0 -> s5 [69, 69] { R9878 += 1, R9810 += 1, R9766 += 1, R9708 += 1 };
  s0 -> s6 [69, 69] { R9878 += 1, R9810 += 1, R9766 += 1, R9707 += 1, R9708 += 1 };
  s0 -> s7 [69, 69] { R9878 += 1, R9810 += 1, R9766 += 1, R9708 += 1 };
  s0 -> s8 [69, 69] { R9878 += 1, R9810 += 1, R9766 += 1, R9707 += 1, R9708 += 1 };
  s0 -> s2 [70, 84] { R9878 += 1, R9810 += 1, R9766 += 1, R9708 += 1 };
  s0 -> s1 [70, 65535] { R9878 += 1, R9810 += 1, R9766 += 1, R9707 += 1, R9708 += 1 };
  s0 -> s9 [85, 85] { R9878 += 1, R9810 += 1, R9766 += 1, R9708 += 1 };
  s0 -> s2 [87, 65535] { R9878 += 1, R9810 += 1, R9766 += 1, R9708 += 1 };
  s1 -> s1 [0, 68] { R9878 += 1, R9810 += 1, R9766 += 1, R9707 += 1, R9708 += 1 };
  s1 -> s2 [0, 68] { R9878 += 1, R9810 += 1, R9766 += 1, R9708 += 1 };
  s1 -> s5 [69, 69] { R9878 += 1, R9810 += 1, R9766 += 1, R9708 += 1 };
  s1 -> s6 [69, 69] { R9878 += 1, R9810 += 1, R9766 += 1, R9707 += 1, R9708 += 1 };
  s1 -> s7 [69, 69] { R9878 += 1, R9810 += 1, R9766 += 1, R9708 += 1 };
  s1 -> s8 [69, 69] { R9878 += 1, R9810 += 1, R9766 += 1, R9707 += 1, R9708 += 1 };
  s1 -> s2 [70, 84] { R9878 += 1, R9810 += 1, R9766 += 1, R9708 += 1 };
  s1 -> s1 [70, 65535] { R9878 += 1, R9810 += 1, R9766 += 1, R9707 += 1, R9708 += 1 };
  s1 -> s9 [85, 85] { R9878 += 1, R9810 += 1, R9766 += 1, R9708 += 1 };
  s1 -> s2 [87, 65535] { R9878 += 1, R9810 += 1, R9766 += 1, R9708 += 1 };
  s2 -> s2 [0, 68] { R9878 += 1, R9810 += 1, R9766 += 1, R9708 += 1 };
  s2 -> s5 [69, 69] { R9878 += 1, R9810 += 1, R9766 += 1 };
  s2 -> s7 [69, 69] { R9878 += 1, R9810 += 1, R9766 += 1 };
  s2 -> s2 [70, 84] { R9878 += 1, R9810 += 1, R9766 += 1, R9708 += 1 };
  s2 -> s2 [70, 65535] { R9878 += 1, R9810 += 1, R9766 += 1 };
  s2 -> s9 [85, 85] { R9878 += 1, R9810 += 1, R9766 += 1, R9708 += 1 };
  s2 -> s2 [87, 65535] { R9878 += 1, R9810 += 1, R9766 += 1, R9708 += 1 };
  s3 -> s1 [0, 68] { R9878 += 1, R9810 += 1, R9766 += 1, R9707 += 1, R9708 += 1 };
  s3 -> s2 [0, 68] { R9878 += 1, R9810 += 1, R9766 += 1, R9708 += 1 };
  s3 -> s3 [0, 65535] { R9878 += 1, R9810 += 1, R9765 += 1, R9766 += 1 };
  s3 -> s5 [69, 69] { R9878 += 1, R9810 += 1, R9766 += 1, R9708 += 1 };
  s3 -> s6 [69, 69] { R9878 += 1, R9810 += 1, R9766 += 1, R9707 += 1, R9708 += 1 };
  s3 -> s7 [69, 69] { R9878 += 1, R9810 += 1, R9766 += 1, R9708 += 1 };
  s3 -> s8 [69, 69] { R9878 += 1, R9810 += 1, R9766 += 1, R9707 += 1, R9708 += 1 };
  s3 -> s2 [70, 84] { R9878 += 1, R9810 += 1, R9766 += 1, R9708 += 1 };
  s3 -> s1 [70, 65535] { R9878 += 1, R9810 += 1, R9766 += 1, R9707 += 1, R9708 += 1 };
  s3 -> s9 [85, 85] { R9878 += 1, R9810 += 1, R9766 += 1, R9708 += 1 };
  s3 -> s2 [87, 65535] { R9878 += 1, R9810 += 1, R9766 += 1, R9708 += 1 };
  s4 -> s1 [0, 68] { R9878 += 1, R9810 += 1, R9766 += 1, R9707 += 1, R9708 += 1 };
  s4 -> s2 [0, 68] { R9878 += 1, R9810 += 1, R9766 += 1, R9708 += 1 };
  s4 -> s3 [0, 65535] { R9878 += 1, R9810 += 1, R9765 += 1, R9766 += 1 };
  s4 -> s4 [0, 65535] { R9878 += 1, R9809 += 1, R9810 += 1 };
  s4 -> s5 [69, 69] { R9878 += 1, R9810 += 1, R9766 += 1, R9708 += 1 };
  s4 -> s6 [69, 69] { R9878 += 1, R9810 += 1, R9766 += 1, R9707 += 1, R9708 += 1 };
  s4 -> s7 [69, 69] { R9878 += 1, R9810 += 1, R9766 += 1, R9708 += 1 };
  s4 -> s8 [69, 69] { R9878 += 1, R9810 += 1, R9766 += 1, R9707 += 1, R9708 += 1 };
  s4 -> s2 [70, 84] { R9878 += 1, R9810 += 1, R9766 += 1, R9708 += 1 };
  s4 -> s1 [70, 65535] { R9878 += 1, R9810 += 1, R9766 += 1, R9707 += 1, R9708 += 1 };
  s4 -> s9 [85, 85] { R9878 += 1, R9810 += 1, R9766 += 1, R9708 += 1 };
  s4 -> s2 [87, 65535] { R9878 += 1, R9810 += 1, R9766 += 1, R9708 += 1 };
  s6 -> s7 [0, 84] { R9878 += 1, R9810 += 1, R9766 += 1, R9708 += 1 };
  s6 -> s6 [0, 65535] { R9878 += 1, R9810 += 1, R9766 += 1, R9707 += 1, R9708 += 1 };
  s6 -> s12 [85, 85] { R9878 += 1, R9810 += 1, R9766 += 1, R9708 += 1 };
  s6 -> s7 [87, 65535] { R9878 += 1, R9810 += 1, R9766 += 1, R9708 += 1 };
  s7 -> s7 [0, 84] { R9878 += 1, R9810 += 1, R9766 += 1, R9708 += 1 };
  s7 -> s7 [0, 65535] { R9878 += 1, R9810 += 1, R9766 += 1 };
  s7 -> s12 [85, 85] { R9878 += 1, R9810 += 1, R9766 += 1, R9708 += 1 };
  s7 -> s7 [87, 65535] { R9878 += 1, R9810 += 1, R9766 += 1, R9708 += 1 };
  s9 -> s9 [0, 68] { R9878 += 1, R9810 += 1, R9766 += 1 };
  s9 -> s9 [0, 65535] { R9878 += 1, R9810 += 1 };
  s9 -> s10 [0, 65535];
  s9 -> s11 [0, 65535] { R9878 += 1 };
  s9 -> s12 [69, 69] { R9878 += 1, R9810 += 1, R9766 += 1 };
  s9 -> s13 [69, 69] { R9878 += 1, R9810 += 1, R9766 += 1 };
  s9 -> s9 [70, 65535] { R9878 += 1, R9810 += 1, R9766 += 1 };
  s10 -> s10 [0, 65535];
  s11 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R9878 += 1 };
  s12 -> s14 [0, 65535] { R9878 += 1, R9810 += 1 };
  s12 -> s10 [0, 65535];
  s12 -> s11 [0, 65535] { R9878 += 1 };
  s12 -> s12 [0, 65535] { R9878 += 1, R9810 += 1, R9766 += 1 };
  s13 -> s10 [0, 65535];
  s13 -> s11 [0, 65535] { R9878 += 1 };
  s13 -> s13 [0, 65535] { R9878 += 1, R9810 += 1 };
  s14 -> s14 [0, 65535] { R9878 += 1, R9810 += 1 };
  s14 -> s10 [0, 65535];
  s14 -> s11 [0, 65535] { R9878 += 1 };
  accepting s12, s13, s9, s14, s10, s11;
};
};
synchronised {  // Automata constraining P68
automaton P68_0 {
  init s0;
  s0 -> s1 [117, 117];
  accepting s1;
};
};
synchronised {  // Automata constraining P10
automaton P10_0 {
  init s0;
  s0 -> s1 [101, 101];
  accepting s1;
};
};
