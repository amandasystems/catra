// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R2, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R5, R5289, R5290, R5291, R5292, R5293, R5294, R5295, R5296, R5297, R5298, R5931, R5932, R5933, R5934, R5935, R5936, R5937, R5938, R5939, R5940, R5941, R5942, R5943, R5944, R5945, R5946, R5947, R5948, R5949, R5950, R5951, R5952, R5953, R5954, R5955, R5956, R5957, R5958, R5959, R5960, R5961, R5962, R5963, R5964, R5965, R5966, R5967, R5968, R5969, R5970, R5971, R5972, R5973, R5974, R5975, R5976, R5977, R5978, R5979, R5980, R5981, R5982, R5983, R5984, R5985, R5986, R5987, R5988, R5989, R5990, R5991, R5992, R5993, R5994, R5995, R5996, R5997, R5998, R5999, R6000, R6001, R6002, R6003, R6004, R6005, R6006, R6007, R6008, R6009, R6010, R6011, R6012, R6013, R6014, R6015, R6016, R6017, R6018, R6019, R6020, R6021, R6022, R6023, R6024, R6025, R6026, R6027, R6028, R6029, R6030, R6031, R6032, R6033, R6034, R6035, R6036, R6037, R6038, R6039, R6040, R6041, R6042, R6043, R6044, R6045, R6046, R6047, R6048, R6049, R6050, R6051, R6052, R6053, R6054, R6055, R6056, R6057, R6058, R6059, R6060, R6061, R6062, R6063, R6064, R6065, R6066, R6067, R6068, R6069, R6070, R6071, R6072, R6073, R6074, R6075, R6076, R6077, R6078, R6079, R6080, R6081, R6082, R6083, R6084, R6085, R6086, R6087, R6088, R63, R65, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R26 += 1 };
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R5969 += 1, R5970 += 1 };
  s0 -> s1 [0, 65535] { R5970 += 1, R24 += 1 };
  s1 -> s1 [0, 65535] { R5970 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R5972 += 1 };
  s0 -> s0 [0, 65535] { R5971 += 1, R5972 += 1 };
  s0 -> s2 [70, 70] { R5972 += 1 };
  s0 -> s3 [70, 70] { R5972 += 1 };
  s0 -> s1 [76, 65535] { R5972 += 1 };
  s1 -> s1 [0, 69] { R5972 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5972 += 1 };
  s1 -> s3 [70, 70] { R5972 += 1 };
  s1 -> s1 [76, 65535] { R5972 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R5972 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R5972 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R5974 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R5973 += 1, R5974 += 1 };
  s0 -> s2 [70, 70] { R5974 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R5974 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R5974 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R5974 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5974 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R5974 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R5974 += 1, R63 += 1 };
  s2 -> s2 [0, 65535] { R5974 += 1, R63 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R5976 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R5975 += 1, R5976 += 1 };
  s0 -> s2 [70, 70] { R5976 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R5976 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R5976 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R5976 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5976 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R5976 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R5976 += 1, R65 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R5976 += 1, R65 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R5978 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R5977 += 1, R5978 += 1 };
  s0 -> s2 [70, 70] { R5978 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R5978 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R5978 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R5978 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5978 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R5978 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R5978 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5978 += 1, R67 += 1, R68 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R5980 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R5979 += 1, R5980 += 1 };
  s0 -> s2 [70, 70] { R5980 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R5980 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R5980 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R5980 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5980 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R5980 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R5980 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R5980 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R5982 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R5981 += 1, R5982 += 1 };
  s0 -> s2 [70, 70] { R5982 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R5982 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R5982 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R5982 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5982 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R5982 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R5982 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535] { R5982 += 1, R77 += 1, R78 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R5984 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R5983 += 1, R5984 += 1 };
  s0 -> s2 [70, 70] { R5984 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R5984 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R5984 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R5984 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5984 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R5984 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R5984 += 1, R81 += 1, R82 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R5984 += 1, R81 += 1, R82 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R5986 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R5985 += 1, R5986 += 1 };
  s0 -> s2 [70, 70] { R5986 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R5986 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R5986 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R5986 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5986 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R5986 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R5986 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R5986 += 1, R87 += 1, R88 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R5988 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R5987 += 1, R5988 += 1 };
  s0 -> s2 [70, 70] { R5988 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R5988 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R5988 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R5988 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5988 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R5988 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R5988 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535] { R5988 += 1, R93 += 1, R94 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R5990 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R5989 += 1, R5990 += 1 };
  s0 -> s2 [70, 70] { R5990 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R5990 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R5990 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R5990 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5990 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R5990 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R5990 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5990 += 1, R101 += 1, R102 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R5992 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R5991 += 1, R5992 += 1 };
  s0 -> s2 [70, 70] { R5992 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R5992 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R5992 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R5992 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5992 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R5992 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R5992 += 1, R111 += 1, R112 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R5992 += 1, R111 += 1, R112 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R5994 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R5993 += 1, R5994 += 1 };
  s0 -> s2 [70, 70] { R5994 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R5994 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R5994 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R5994 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5994 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R5994 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R5994 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5994 += 1, R119 += 1, R120 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R5996 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R5995 += 1, R5996 += 1 };
  s0 -> s2 [70, 70] { R5996 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R5996 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R5996 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R5996 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5996 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R5996 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R5996 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5996 += 1, R129 += 1, R130 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R6026 += 1 };
  s0 -> s0 [0, 65535] { R6025 += 1, R6026 += 1 };
  s0 -> s2 [70, 70] { R6026 += 1 };
  s0 -> s1 [71, 65535] { R6026 += 1 };
  s1 -> s1 [0, 69] { R6026 += 1 };
  s1 -> s2 [70, 70] { R6026 += 1 };
  s1 -> s1 [71, 65535] { R6026 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R6026 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R6028 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R6027 += 1, R6028 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R6028 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R6030 += 1 };
  s0 -> s2 [0, 65535] { R6030 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R6029 += 1, R6030 += 1 };
  s0 -> s3 [70, 70] { R6030 += 1 };
  s0 -> s1 [71, 65535] { R6030 += 1 };
  s1 -> s1 [0, 69] { R6030 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R6030 += 1 };
  s1 -> s1 [71, 65535] { R6030 += 1 };
  s2 -> s1 [0, 69] { R6030 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R6030 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R6030 += 1 };
  s2 -> s1 [71, 65535] { R6030 += 1 };
  s3 -> s3 [0, 65535] { R6030 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R6032 += 1, R5940 += 1 };
  s0 -> s2 [0, 65535] { R6032 += 1, R5939 += 1, R5940 += 1 };
  s0 -> s0 [0, 65535] { R6031 += 1, R6032 += 1 };
  s0 -> s1 [71, 65535] { R6032 += 1, R5940 += 1 };
  s1 -> s1 [0, 69] { R6032 += 1, R5940 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R6032 += 1 };
  s1 -> s1 [71, 65535] { R6032 += 1, R5940 += 1 };
  s2 -> s1 [0, 69] { R6032 += 1, R5940 += 1 };
  s2 -> s2 [0, 65535] { R6032 += 1, R5939 += 1, R5940 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R6032 += 1, R5940 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R6034 += 1, R5942 += 1, R22 += 1 };
  s0 -> s2 [0, 65535] { R6034 += 1, R5941 += 1, R5942 += 1 };
  s0 -> s0 [0, 65535] { R6033 += 1, R6034 += 1 };
  s1 -> s4 [0, 65535] { R6034 += 1 };
  s1 -> s1 [0, 65535] { R6034 += 1, R5942 += 1, R22 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R6034 += 1, R5942 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R6034 += 1, R5941 += 1, R5942 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R6034 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R6036 += 1, R5944 += 1 };
  s0 -> s0 [0, 65535] { R6035 += 1, R6036 += 1 };
  s0 -> s2 [0, 65535] { R6036 += 1, R5943 += 1, R5944 += 1 };
  s0 -> s1 [75, 65535] { R6036 += 1, R5944 += 1 };
  s1 -> s1 [0, 70] { R6036 += 1, R5944 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R6036 += 1 };
  s1 -> s1 [75, 65535] { R6036 += 1, R5944 += 1 };
  s2 -> s1 [0, 70] { R6036 += 1, R5944 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R6036 += 1, R5943 += 1, R5944 += 1 };
  s2 -> s1 [75, 65535] { R6036 += 1, R5944 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R6038 += 1, R5945 += 1, R5946 += 1 };
  s0 -> s0 [0, 65535] { R6037 += 1, R6038 += 1 };
  s0 -> s2 [0, 65535] { R6038 += 1, R5946 += 1, R138 += 1 };
  s1 -> s1 [0, 65535] { R6038 += 1, R5945 += 1, R5946 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R6038 += 1, R5946 += 1, R138 += 1 };
  s2 -> s3 [0, 65535] { R6038 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R6038 += 1, R5946 += 1, R138 += 1 };
  s3 -> s3 [0, 65535] { R6038 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R6040 += 1, R5948 += 1 };
  s0 -> s2 [0, 65535] { R6040 += 1, R5948 += 1, R140 += 1 };
  s0 -> s0 [0, 65535] { R6039 += 1, R6040 += 1 };
  s0 -> s3 [0, 65535] { R6040 += 1, R5947 += 1, R5948 += 1 };
  s0 -> s1 [76, 65535] { R6040 += 1, R5948 += 1 };
  s1 -> s1 [0, 74] { R6040 += 1, R5948 += 1 };
  s1 -> s1 [0, 65535] { R6040 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [76, 65535] { R6040 += 1, R5948 += 1 };
  s2 -> s1 [0, 74] { R6040 += 1, R5948 += 1 };
  s2 -> s2 [0, 65535] { R6040 += 1, R5948 += 1, R140 += 1 };
  s2 -> s5 [0, 65535] { R6040 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [76, 65535] { R6040 += 1, R5948 += 1 };
  s3 -> s1 [0, 74] { R6040 += 1, R5948 += 1 };
  s3 -> s2 [0, 65535] { R6040 += 1, R5948 += 1, R140 += 1 };
  s3 -> s3 [0, 65535] { R6040 += 1, R5947 += 1, R5948 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [76, 65535] { R6040 += 1, R5948 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R6040 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R6041 += 1, R6042 += 1 };
  s0 -> s1 [0, 65535] { R6042 += 1, R5950 += 1, R144 += 1, R145 += 1 };
  s0 -> s2 [0, 65535] { R6042 += 1, R5949 += 1, R5950 += 1 };
  s0 -> s3 [0, 65535] { R6042 += 1, R5950 += 1, R145 += 1, R146 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R6042 += 1, R5950 += 1, R144 += 1, R145 += 1 };
  s1 -> s5 [0, 65535] { R6042 += 1 };
  s1 -> s3 [0, 65535] { R6042 += 1, R5950 += 1, R145 += 1, R146 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R6042 += 1, R5950 += 1, R144 += 1, R145 += 1 };
  s2 -> s2 [0, 65535] { R6042 += 1, R5949 += 1, R5950 += 1 };
  s2 -> s3 [0, 65535] { R6042 += 1, R5950 += 1, R145 += 1, R146 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R6042 += 1 };
  s3 -> s6 [0, 65535] { R6042 += 1, R5950 += 1 };
  s3 -> s3 [0, 65535] { R6042 += 1, R5950 += 1, R145 += 1, R146 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R6042 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R6042 += 1 };
  s6 -> s6 [0, 65535] { R6042 += 1, R5950 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R6044 += 1, R5952 += 1, R150 += 1 };
  s0 -> s0 [0, 65535] { R6043 += 1, R6044 += 1 };
  s0 -> s2 [0, 65535] { R6044 += 1, R5951 += 1, R5952 += 1 };
  s0 -> s3 [0, 65535] { R6044 += 1, R5952 += 1, R149 += 1, R150 += 1 };
  s0 -> s4 [75, 75] { R6044 += 1, R5952 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R6044 += 1, R5952 += 1, R150 += 1 };
  s0 -> s1 [87, 65535] { R6044 += 1, R5952 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R6044 += 1, R5952 += 1, R150 += 1 };
  s1 -> s6 [0, 65535] { R6044 += 1 };
  s1 -> s1 [0, 65535] { R6044 += 1, R5952 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [75, 75] { R6044 += 1, R5952 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R6044 += 1, R5952 += 1, R150 += 1 };
  s1 -> s1 [87, 65535] { R6044 += 1, R5952 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R6044 += 1, R5952 += 1, R150 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s2 [0, 65535] { R6044 += 1, R5951 += 1, R5952 += 1 };
  s2 -> s3 [0, 65535] { R6044 += 1, R5952 += 1, R149 += 1, R150 += 1 };
  s2 -> s4 [75, 75] { R6044 += 1, R5952 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R6044 += 1, R5952 += 1, R150 += 1 };
  s2 -> s1 [87, 65535] { R6044 += 1, R5952 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R6044 += 1, R5952 += 1, R150 += 1 };
  s3 -> s6 [0, 65535] { R6044 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R6044 += 1, R5952 += 1, R149 += 1, R150 += 1 };
  s3 -> s4 [75, 75] { R6044 += 1, R5952 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R6044 += 1, R5952 += 1, R150 += 1 };
  s3 -> s1 [87, 65535] { R6044 += 1, R5952 += 1, R150 += 1 };
  s4 -> s6 [0, 65535] { R6044 += 1 };
  s4 -> s4 [0, 65535] { R6044 += 1, R5952 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 75] { R6044 += 1, R5952 += 1, R150 += 1 };
  s5 -> s6 [0, 65535] { R6044 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R6044 += 1, R5952 += 1 };
  s5 -> s5 [87, 65535] { R6044 += 1, R5952 += 1, R150 += 1 };
  s6 -> s6 [0, 65535] { R6044 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R6046 += 1, R5953 += 1, R5954 += 1 };
  s0 -> s2 [0, 65535] { R6046 += 1, R5954 += 1 };
  s0 -> s3 [0, 65535] { R6046 += 1, R5954 += 1, R154 += 1 };
  s0 -> s0 [0, 65535] { R6045 += 1, R6046 += 1 };
  s1 -> s1 [0, 65535] { R6046 += 1, R5953 += 1, R5954 += 1 };
  s1 -> s2 [0, 65535] { R6046 += 1, R5954 += 1 };
  s1 -> s3 [0, 65535] { R6046 += 1, R5954 += 1, R154 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R6046 += 1, R5954 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R6046 += 1 };
  s3 -> s2 [0, 65535] { R6046 += 1, R5954 += 1 };
  s3 -> s3 [0, 65535] { R6046 += 1, R5954 += 1, R154 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R6046 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R6046 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R6048 += 1, R5956 += 1, R158 += 1, R159 += 1 };
  s0 -> s0 [0, 65535] { R6047 += 1, R6048 += 1 };
  s0 -> s2 [0, 65535] { R6048 += 1, R5956 += 1, R159 += 1, R160 += 1 };
  s0 -> s3 [0, 65535] { R6048 += 1, R5955 += 1, R5956 += 1 };
  s1 -> s1 [0, 65535] { R6048 += 1, R5956 += 1, R158 += 1, R159 += 1 };
  s1 -> s5 [0, 65535] { R6048 += 1 };
  s1 -> s2 [0, 65535] { R6048 += 1, R5956 += 1, R159 += 1, R160 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R6048 += 1 };
  s2 -> s6 [0, 65535] { R6048 += 1, R5956 += 1 };
  s2 -> s2 [0, 65535] { R6048 += 1, R5956 += 1, R159 += 1, R160 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R6048 += 1, R5956 += 1, R158 += 1, R159 += 1 };
  s3 -> s2 [0, 65535] { R6048 += 1, R5956 += 1, R159 += 1, R160 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R6048 += 1, R5955 += 1, R5956 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R6048 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R6048 += 1 };
  s6 -> s6 [0, 65535] { R6048 += 1, R5956 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R6050 += 1, R5958 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R6050 += 1, R5957 += 1, R5958 += 1 };
  s0 -> s0 [0, 65535] { R6049 += 1, R6050 += 1 };
  s0 -> s3 [0, 65535] { R6050 += 1, R5958 += 1, R164 += 1, R165 += 1 };
  s0 -> s4 [0, 65535] { R6050 += 1, R5958 += 1, R165 += 1, R166 += 1 };
  s0 -> s1 [76, 65535] { R6050 += 1, R5958 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R6050 += 1, R5958 += 1, R165 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R6050 += 1 };
  s1 -> s1 [0, 65535] { R6050 += 1, R5958 += 1 };
  s1 -> s1 [76, 65535] { R6050 += 1, R5958 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R6050 += 1, R5958 += 1, R165 += 1 };
  s2 -> s2 [0, 65535] { R6050 += 1, R5957 += 1, R5958 += 1 };
  s2 -> s3 [0, 65535] { R6050 += 1, R5958 += 1, R164 += 1, R165 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [0, 65535] { R6050 += 1, R5958 += 1, R165 += 1, R166 += 1 };
  s2 -> s1 [76, 65535] { R6050 += 1, R5958 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R6050 += 1, R5958 += 1, R165 += 1 };
  s3 -> s3 [0, 65535] { R6050 += 1, R5958 += 1, R164 += 1, R165 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R6050 += 1 };
  s3 -> s4 [0, 65535] { R6050 += 1, R5958 += 1, R165 += 1, R166 += 1 };
  s3 -> s1 [76, 65535] { R6050 += 1, R5958 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R6050 += 1, R5958 += 1, R165 += 1 };
  s4 -> s5 [0, 65535] { R6050 += 1, R5958 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R6050 += 1 };
  s4 -> s4 [0, 65535] { R6050 += 1, R5958 += 1, R165 += 1, R166 += 1 };
  s4 -> s1 [76, 65535] { R6050 += 1, R5958 += 1, R165 += 1 };
  s5 -> s5 [0, 65535] { R6050 += 1, R5958 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R6050 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R6050 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R6052 += 1, R5960 += 1, R172 += 1, R174 += 1 };
  s0 -> s2 [0, 65535] { R6052 += 1, R5959 += 1, R5960 += 1 };
  s0 -> s3 [0, 65535] { R6052 += 1, R5960 += 1, R171 += 1, R172 += 1 };
  s0 -> s4 [0, 65535] { R6052 += 1, R5960 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s0 [0, 65535] { R6051 += 1, R6052 += 1 };
  s0 -> s1 [76, 65535] { R6052 += 1, R5960 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R6052 += 1, R5960 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 65535] { R6052 += 1, R5960 += 1, R172 += 1 };
  s1 -> s5 [0, 65535] { R6052 += 1 };
  s1 -> s6 [0, 65535] { R6052 += 1, R5960 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [76, 65535] { R6052 += 1, R5960 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R6052 += 1, R5960 += 1, R172 += 1, R174 += 1 };
  s2 -> s2 [0, 65535] { R6052 += 1, R5959 += 1, R5960 += 1 };
  s2 -> s3 [0, 65535] { R6052 += 1, R5960 += 1, R171 += 1, R172 += 1 };
  s2 -> s4 [0, 65535] { R6052 += 1, R5960 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s1 [76, 65535] { R6052 += 1, R5960 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R6052 += 1, R5960 += 1, R172 += 1, R174 += 1 };
  s3 -> s3 [0, 65535] { R6052 += 1, R5960 += 1, R171 += 1, R172 += 1 };
  s3 -> s5 [0, 65535] { R6052 += 1 };
  s3 -> s4 [0, 65535] { R6052 += 1, R5960 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s1 [76, 65535] { R6052 += 1, R5960 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R6052 += 1, R5960 += 1, R172 += 1, R174 += 1 };
  s4 -> s5 [0, 65535] { R6052 += 1 };
  s4 -> s4 [0, 65535] { R6052 += 1, R5960 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s6 [0, 65535] { R6052 += 1, R5960 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s1 [76, 65535] { R6052 += 1, R5960 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535] { R6052 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s5 [0, 65535] { R6052 += 1 };
  s6 -> s6 [0, 65535] { R6052 += 1, R5960 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R6054 += 1, R5962 += 1, R180 += 1, R181 += 1 };
  s0 -> s2 [0, 65535] { R6054 += 1, R5962 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s0 -> s3 [0, 65535] { R6054 += 1, R5962 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s0 -> s0 [0, 65535] { R6053 += 1, R6054 += 1 };
  s0 -> s4 [0, 65535] { R6054 += 1, R5961 += 1, R5962 += 1 };
  s1 -> s1 [0, 65535] { R6054 += 1, R5962 += 1, R180 += 1, R181 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R6054 += 1, R5962 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s1 -> s3 [0, 65535] { R6054 += 1, R5962 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s1 -> s7 [0, 65535] { R6054 += 1 };
  s2 -> s6 [0, 65535] { R6054 += 1, R5962 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R6054 += 1, R5962 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s2 -> s8 [0, 65535] { R6054 += 1, R5962 += 1, R181 += 1 };
  s2 -> s7 [0, 65535] { R6054 += 1 };
  s3 -> s6 [0, 65535] { R6054 += 1, R5962 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R6054 += 1, R5962 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s3 -> s3 [0, 65535] { R6054 += 1, R5962 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s3 -> s7 [0, 65535] { R6054 += 1 };
  s4 -> s1 [0, 65535] { R6054 += 1, R5962 += 1, R180 += 1, R181 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R6054 += 1, R5962 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s4 -> s3 [0, 65535] { R6054 += 1, R5962 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s4 -> s4 [0, 65535] { R6054 += 1, R5961 += 1, R5962 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6054 += 1, R5962 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s7 [0, 65535] { R6054 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R6054 += 1 };
  s8 -> s6 [0, 65535] { R6054 += 1, R5962 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s8 [0, 65535] { R6054 += 1, R5962 += 1, R181 += 1 };
  s8 -> s7 [0, 65535] { R6054 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R6056 += 1, R5964 += 1, R190 += 1, R192 += 1 };
  s0 -> s0 [0, 65535] { R6055 += 1, R6056 += 1 };
  s0 -> s2 [0, 65535] { R6056 += 1, R5964 += 1, R189 += 1, R190 += 1 };
  s0 -> s3 [0, 65535] { R6056 += 1, R5964 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s0 -> s4 [0, 65535] { R6056 += 1, R5963 += 1, R5964 += 1 };
  s0 -> s1 [86, 65535] { R6056 += 1, R5964 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 75] { R6056 += 1, R5964 += 1, R190 += 1, R192 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R6056 += 1 };
  s1 -> s1 [0, 65535] { R6056 += 1, R5964 += 1, R190 += 1 };
  s1 -> s7 [0, 65535] { R6056 += 1, R5964 += 1 };
  s1 -> s1 [86, 65535] { R6056 += 1, R5964 += 1, R190 += 1, R192 += 1 };
  s2 -> s1 [0, 75] { R6056 += 1, R5964 += 1, R190 += 1, R192 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R6056 += 1, R5964 += 1, R189 += 1, R190 += 1 };
  s2 -> s3 [0, 65535] { R6056 += 1, R5964 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s2 -> s6 [0, 65535] { R6056 += 1 };
  s2 -> s1 [86, 65535] { R6056 += 1, R5964 += 1, R190 += 1, R192 += 1 };
  s3 -> s1 [0, 75] { R6056 += 1, R5964 += 1, R190 += 1, R192 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R6056 += 1, R5964 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s3 -> s6 [0, 65535] { R6056 += 1 };
  s3 -> s7 [0, 65535] { R6056 += 1, R5964 += 1 };
  s3 -> s1 [86, 65535] { R6056 += 1, R5964 += 1, R190 += 1, R192 += 1 };
  s4 -> s1 [0, 75] { R6056 += 1, R5964 += 1, R190 += 1, R192 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R6056 += 1, R5964 += 1, R189 += 1, R190 += 1 };
  s4 -> s3 [0, 65535] { R6056 += 1, R5964 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s4 -> s4 [0, 65535] { R6056 += 1, R5963 += 1, R5964 += 1 };
  s4 -> s1 [86, 65535] { R6056 += 1, R5964 += 1, R190 += 1, R192 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6056 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R6056 += 1 };
  s7 -> s7 [0, 65535] { R6056 += 1, R5964 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R6058 += 1, R5965 += 1, R5966 += 1 };
  s0 -> s2 [0, 65535] { R6058 += 1, R5966 += 1 };
  s0 -> s3 [0, 65535] { R6058 += 1, R5966 += 1, R5295 += 1 };
  s0 -> s0 [0, 65535] { R6057 += 1, R6058 += 1 };
  s1 -> s1 [0, 65535] { R6058 += 1, R5965 += 1, R5966 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R6058 += 1, R5966 += 1 };
  s1 -> s3 [0, 65535] { R6058 += 1, R5966 += 1, R5295 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R6058 += 1, R5966 += 1 };
  s2 -> s5 [0, 65535] { R6058 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R6058 += 1, R5966 += 1 };
  s3 -> s3 [0, 65535] { R6058 += 1, R5966 += 1, R5295 += 1 };
  s3 -> s5 [0, 65535] { R6058 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R6058 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 75] { R6060 += 1, R5968 += 1, R5936 += 1, R5938 += 1 };
  s0 -> s2 [0, 65535] { R6060 += 1, R5967 += 1, R5968 += 1 };
  s0 -> s0 [0, 65535] { R6059 += 1, R6060 += 1 };
  s0 -> s3 [86, 86] { R6060 += 1, R5968 += 1, R5936 += 1, R5938 += 1 };
  s0 -> s1 [87, 65535] { R6060 += 1, R5968 += 1, R5936 += 1, R5938 += 1 };
  s1 -> s1 [0, 75] { R6060 += 1, R5968 += 1, R5936 += 1, R5938 += 1 };
  s1 -> s3 [86, 86] { R6060 += 1, R5968 += 1, R5936 += 1, R5938 += 1 };
  s1 -> s1 [87, 65535] { R6060 += 1, R5968 += 1, R5936 += 1, R5938 += 1 };
  s2 -> s1 [0, 75] { R6060 += 1, R5968 += 1, R5936 += 1, R5938 += 1 };
  s2 -> s2 [0, 65535] { R6060 += 1, R5967 += 1, R5968 += 1 };
  s2 -> s3 [86, 86] { R6060 += 1, R5968 += 1, R5936 += 1, R5938 += 1 };
  s2 -> s1 [87, 65535] { R6060 += 1, R5968 += 1, R5936 += 1, R5938 += 1 };
  s3 -> s3 [0, 75] { R6060 += 1, R5968 += 1, R5936 += 1, R5938 += 1 };
  s3 -> s3 [0, 65535] { R6060 += 1, R5968 += 1, R5936 += 1 };
  s3 -> s4 [0, 65535] { R6060 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R6060 += 1, R5968 += 1 };
  s3 -> s3 [86, 65535] { R6060 += 1, R5968 += 1, R5936 += 1, R5938 += 1 };
  s4 -> s4 [0, 65535] { R6060 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R6060 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6060 += 1, R5968 += 1 };
  accepting s3, s4, s5, s6;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65535] { R6062 += 1, R5997 += 1, R5998 += 1 };
  s0 -> s2 [0, 65535] { R6062 += 1, R5998 += 1, R23 += 1 };
  s0 -> s0 [0, 65535] { R6061 += 1, R6062 += 1 };
  s1 -> s1 [0, 65535] { R6062 += 1, R5997 += 1, R5998 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R6062 += 1, R5998 += 1, R23 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R6062 += 1, R5998 += 1, R23 += 1 };
  s2 -> s4 [0, 65535] { R6062 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R6062 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R6064 += 1, R6000 += 1 };
  s0 -> s2 [0, 65535] { R6064 += 1, R5999 += 1, R6000 += 1 };
  s0 -> s0 [0, 65535] { R6063 += 1, R6064 += 1 };
  s0 -> s3 [70, 70] { R6064 += 1, R6000 += 1 };
  s0 -> s4 [70, 70] { R6064 += 1, R6000 += 1 };
  s0 -> s5 [75, 75] { R6064 += 1, R6000 += 1 };
  s0 -> s1 [76, 65535] { R6064 += 1, R6000 += 1 };
  s1 -> s1 [0, 69] { R6064 += 1, R6000 += 1 };
  s1 -> s3 [70, 70] { R6064 += 1, R6000 += 1 };
  s1 -> s4 [70, 70] { R6064 += 1, R6000 += 1 };
  s1 -> s5 [75, 75] { R6064 += 1, R6000 += 1 };
  s1 -> s1 [76, 65535] { R6064 += 1, R6000 += 1 };
  s2 -> s1 [0, 69] { R6064 += 1, R6000 += 1 };
  s2 -> s2 [0, 65535] { R6064 += 1, R5999 += 1, R6000 += 1 };
  s2 -> s3 [70, 70] { R6064 += 1, R6000 += 1 };
  s2 -> s4 [70, 70] { R6064 += 1, R6000 += 1 };
  s2 -> s5 [75, 75] { R6064 += 1, R6000 += 1 };
  s2 -> s1 [76, 65535] { R6064 += 1, R6000 += 1 };
  s4 -> s4 [0, 70] { R6064 += 1, R6000 += 1 };
  s4 -> s8 [75, 75] { R6064 += 1, R6000 += 1 };
  s4 -> s4 [76, 65535] { R6064 += 1, R6000 += 1 };
  s5 -> s5 [0, 69] { R6064 += 1, R6000 += 1 };
  s5 -> s5 [0, 65535] { R6064 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R6064 += 1, R6000 += 1 };
  s5 -> s8 [70, 70] { R6064 += 1, R6000 += 1 };
  s5 -> s5 [75, 65535] { R6064 += 1, R6000 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R6064 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 70] { R6064 += 1, R6000 += 1 };
  s8 -> s8 [0, 65535] { R6064 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [75, 65535] { R6064 += 1, R6000 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R6066 += 1, R6002 += 1, R137 += 1 };
  s0 -> s0 [0, 65535] { R6065 += 1, R6066 += 1 };
  s0 -> s2 [0, 65535] { R6066 += 1, R6001 += 1, R6002 += 1 };
  s0 -> s3 [70, 70] { R6066 += 1, R6002 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R6066 += 1, R6002 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R6066 += 1, R6002 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R6066 += 1, R6002 += 1, R137 += 1 };
  s1 -> s1 [0, 65535] { R6066 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R6066 += 1, R6002 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R6066 += 1, R6002 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R6066 += 1, R6002 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R6066 += 1, R6002 += 1, R137 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R6066 += 1, R6001 += 1, R6002 += 1 };
  s2 -> s3 [70, 70] { R6066 += 1, R6002 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R6066 += 1, R6002 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R6066 += 1, R6002 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R6066 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R6066 += 1 };
  s4 -> s4 [0, 65535] { R6066 += 1, R6002 += 1, R137 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R6066 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R6068 += 1, R6004 += 1, R139 += 1 };
  s0 -> s2 [0, 65535] { R6068 += 1, R6003 += 1, R6004 += 1 };
  s0 -> s0 [0, 65535] { R6067 += 1, R6068 += 1 };
  s0 -> s3 [70, 70] { R6068 += 1, R6004 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R6068 += 1, R6004 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R6068 += 1, R6004 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R6068 += 1, R6004 += 1, R139 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R6068 += 1 };
  s1 -> s3 [70, 70] { R6068 += 1, R6004 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R6068 += 1, R6004 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R6068 += 1, R6004 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R6068 += 1, R6004 += 1, R139 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R6068 += 1, R6003 += 1, R6004 += 1 };
  s2 -> s3 [70, 70] { R6068 += 1, R6004 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R6068 += 1, R6004 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R6068 += 1, R6004 += 1, R139 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R6068 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R6068 += 1 };
  s4 -> s4 [0, 65535] { R6068 += 1, R6004 += 1, R139 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6068 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R6070 += 1, R6006 += 1, R141 += 1, R142 += 1 };
  s0 -> s0 [0, 65535] { R6069 += 1, R6070 += 1 };
  s0 -> s2 [0, 65535] { R6070 += 1, R6005 += 1, R6006 += 1 };
  s0 -> s3 [70, 70] { R6070 += 1, R6006 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R6070 += 1, R6006 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R6070 += 1, R6006 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R6070 += 1, R6006 += 1, R141 += 1, R142 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R6070 += 1 };
  s1 -> s3 [70, 70] { R6070 += 1, R6006 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R6070 += 1, R6006 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R6070 += 1, R6006 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R6070 += 1, R6006 += 1, R141 += 1, R142 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R6070 += 1, R6005 += 1, R6006 += 1 };
  s2 -> s3 [70, 70] { R6070 += 1, R6006 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R6070 += 1, R6006 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R6070 += 1, R6006 += 1, R141 += 1, R142 += 1 };
  s3 -> s6 [0, 65535] { R6070 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R6070 += 1, R6006 += 1, R141 += 1, R142 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R6070 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6070 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R6072 += 1, R6008 += 1, R147 += 1, R148 += 1 };
  s0 -> s2 [0, 65535] { R6072 += 1, R6007 += 1, R6008 += 1 };
  s0 -> s0 [0, 65535] { R6071 += 1, R6072 += 1 };
  s0 -> s3 [70, 70] { R6072 += 1, R6008 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R6072 += 1, R6008 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R6072 += 1, R6008 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R6072 += 1, R6008 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 65535] { R6072 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R6072 += 1, R6008 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R6072 += 1, R6008 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R6072 += 1, R6008 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R6072 += 1, R6008 += 1, R147 += 1, R148 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R6072 += 1, R6007 += 1, R6008 += 1 };
  s2 -> s3 [70, 70] { R6072 += 1, R6008 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R6072 += 1, R6008 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R6072 += 1, R6008 += 1, R147 += 1, R148 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R6072 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R6072 += 1 };
  s4 -> s4 [0, 65535] { R6072 += 1, R6008 += 1, R147 += 1, R148 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6072 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R6074 += 1, R6010 += 1, R151 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R6074 += 1, R6010 += 1, R152 += 1 };
  s0 -> s0 [0, 65535] { R6073 += 1, R6074 += 1 };
  s0 -> s3 [0, 65535] { R6074 += 1, R6009 += 1, R6010 += 1 };
  s0 -> s4 [70, 70] { R6074 += 1, R6010 += 1, R151 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R6074 += 1, R6010 += 1, R151 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R6074 += 1, R6010 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R6074 += 1, R6010 += 1, R152 += 1 };
  s0 -> s2 [71, 74] { R6074 += 1, R6010 += 1, R152 += 1 };
  s0 -> s1 [71, 65535] { R6074 += 1, R6010 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R6074 += 1, R6010 += 1, R152 += 1 };
  s0 -> s2 [76, 65535] { R6074 += 1, R6010 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R6074 += 1, R6010 += 1, R151 += 1, R152 += 1 };
  s1 -> s2 [0, 69] { R6074 += 1, R6010 += 1, R152 += 1 };
  s1 -> s4 [70, 70] { R6074 += 1, R6010 += 1, R151 += 1, R152 += 1 };
  s1 -> s5 [70, 70] { R6074 += 1, R6010 += 1, R151 += 1, R152 += 1 };
  s1 -> s6 [70, 70] { R6074 += 1, R6010 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R6074 += 1, R6010 += 1, R152 += 1 };
  s1 -> s2 [71, 74] { R6074 += 1, R6010 += 1, R152 += 1 };
  s1 -> s1 [71, 65535] { R6074 += 1, R6010 += 1, R151 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R6074 += 1, R6010 += 1, R152 += 1 };
  s1 -> s2 [76, 65535] { R6074 += 1, R6010 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R6074 += 1, R6010 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R6074 += 1, R6010 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R6074 += 1, R6010 += 1, R152 += 1 };
  s2 -> s2 [71, 74] { R6074 += 1, R6010 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R6074 += 1, R6010 += 1, R152 += 1 };
  s2 -> s2 [76, 65535] { R6074 += 1, R6010 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R6074 += 1, R6010 += 1, R151 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R6074 += 1, R6010 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R6074 += 1, R6009 += 1, R6010 += 1 };
  s3 -> s4 [70, 70] { R6074 += 1, R6010 += 1, R151 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R6074 += 1, R6010 += 1, R151 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R6074 += 1, R6010 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R6074 += 1, R6010 += 1, R152 += 1 };
  s3 -> s2 [71, 74] { R6074 += 1, R6010 += 1, R152 += 1 };
  s3 -> s1 [71, 65535] { R6074 += 1, R6010 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R6074 += 1, R6010 += 1, R152 += 1 };
  s3 -> s2 [76, 65535] { R6074 += 1, R6010 += 1, R152 += 1 };
  s4 -> s6 [0, 74] { R6074 += 1, R6010 += 1, R152 += 1 };
  s4 -> s4 [0, 65535] { R6074 += 1, R6010 += 1, R151 += 1, R152 += 1 };
  s4 -> s10 [75, 75] { R6074 += 1, R6010 += 1, R152 += 1 };
  s4 -> s6 [76, 65535] { R6074 += 1, R6010 += 1, R152 += 1 };
  s6 -> s6 [0, 74] { R6074 += 1, R6010 += 1, R152 += 1 };
  s6 -> s10 [75, 75] { R6074 += 1, R6010 += 1, R152 += 1 };
  s6 -> s6 [76, 65535] { R6074 += 1, R6010 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R6074 += 1, R6010 += 1, R152 += 1 };
  s8 -> s8 [0, 65535] { R6074 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R6074 += 1, R6010 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R6074 += 1, R6010 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R6074 += 1, R6010 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s12 [0, 65535] { R6074 += 1 };
  s10 -> s10 [0, 65535] { R6074 += 1, R6010 += 1, R152 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R6074 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R6074 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R6076 += 1, R6012 += 1, R155 += 1, R156 += 1 };
  s0 -> s0 [0, 65535] { R6075 += 1, R6076 += 1 };
  s0 -> s2 [0, 65535] { R6076 += 1, R6011 += 1, R6012 += 1 };
  s0 -> s3 [70, 70] { R6076 += 1, R6012 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R6076 += 1, R6012 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R6076 += 1, R6012 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R6076 += 1, R6012 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 65535] { R6076 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R6076 += 1, R6012 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R6076 += 1, R6012 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R6076 += 1, R6012 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R6076 += 1, R6012 += 1, R155 += 1, R156 += 1 };
  s2 -> s2 [0, 65535] { R6076 += 1, R6011 += 1, R6012 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R6076 += 1, R6012 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R6076 += 1, R6012 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R6076 += 1, R6012 += 1, R155 += 1, R156 += 1 };
  s3 -> s6 [0, 65535] { R6076 += 1 };
  s3 -> s3 [0, 65535] { R6076 += 1, R6012 += 1, R155 += 1, R156 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R6076 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6076 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R6078 += 1, R6014 += 1, R161 += 1, R162 += 1 };
  s0 -> s2 [0, 65535] { R6078 += 1, R6013 += 1, R6014 += 1 };
  s0 -> s0 [0, 65535] { R6077 += 1, R6078 += 1 };
  s0 -> s3 [70, 70] { R6078 += 1, R6014 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R6078 += 1, R6014 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R6078 += 1, R6014 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R6078 += 1, R6014 += 1, R161 += 1, R162 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R6078 += 1 };
  s1 -> s3 [70, 70] { R6078 += 1, R6014 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R6078 += 1, R6014 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R6078 += 1, R6014 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R6078 += 1, R6014 += 1, R161 += 1, R162 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R6078 += 1, R6013 += 1, R6014 += 1 };
  s2 -> s3 [70, 70] { R6078 += 1, R6014 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R6078 += 1, R6014 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R6078 += 1, R6014 += 1, R161 += 1, R162 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R6078 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R6078 += 1 };
  s4 -> s4 [0, 65535] { R6078 += 1, R6014 += 1, R161 += 1, R162 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6078 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R6080 += 1, R6016 += 1, R167 += 1, R168 += 1 };
  s0 -> s2 [0, 65535] { R6080 += 1, R6015 += 1, R6016 += 1 };
  s0 -> s0 [0, 65535] { R6079 += 1, R6080 += 1 };
  s0 -> s3 [70, 70] { R6080 += 1, R6016 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R6080 += 1, R6016 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R6080 += 1, R6016 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R6080 += 1, R6016 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 65535] { R6080 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R6080 += 1, R6016 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R6080 += 1, R6016 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R6080 += 1, R6016 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R6080 += 1, R6016 += 1, R167 += 1, R168 += 1 };
  s2 -> s2 [0, 65535] { R6080 += 1, R6015 += 1, R6016 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R6080 += 1, R6016 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R6080 += 1, R6016 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R6080 += 1, R6016 += 1, R167 += 1, R168 += 1 };
  s3 -> s3 [0, 65535] { R6080 += 1, R6016 += 1, R167 += 1, R168 += 1 };
  s3 -> s6 [0, 65535] { R6080 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R6080 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6080 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R6082 += 1, R6018 += 1, R175 += 1, R176 += 1 };
  s0 -> s2 [0, 65535] { R6082 += 1, R6017 += 1, R6018 += 1 };
  s0 -> s0 [0, 65535] { R6081 += 1, R6082 += 1 };
  s0 -> s3 [70, 70] { R6082 += 1, R6018 += 1, R175 += 1, R176 += 1 };
  s0 -> s4 [70, 70] { R6082 += 1, R6018 += 1, R175 += 1, R176 += 1 };
  s0 -> s1 [71, 65535] { R6082 += 1, R6018 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [0, 69] { R6082 += 1, R6018 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [0, 65535] { R6082 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R6082 += 1, R6018 += 1, R175 += 1, R176 += 1 };
  s1 -> s4 [70, 70] { R6082 += 1, R6018 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [71, 65535] { R6082 += 1, R6018 += 1, R175 += 1, R176 += 1 };
  s2 -> s1 [0, 69] { R6082 += 1, R6018 += 1, R175 += 1, R176 += 1 };
  s2 -> s2 [0, 65535] { R6082 += 1, R6017 += 1, R6018 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R6082 += 1, R6018 += 1, R175 += 1, R176 += 1 };
  s2 -> s4 [70, 70] { R6082 += 1, R6018 += 1, R175 += 1, R176 += 1 };
  s2 -> s1 [71, 65535] { R6082 += 1, R6018 += 1, R175 += 1, R176 += 1 };
  s3 -> s3 [0, 65535] { R6082 += 1, R6018 += 1, R175 += 1, R176 += 1 };
  s3 -> s6 [0, 65535] { R6082 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R6082 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6082 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R6084 += 1, R6020 += 1, R185 += 1, R186 += 1 };
  s0 -> s2 [0, 65535] { R6084 += 1, R6019 += 1, R6020 += 1 };
  s0 -> s0 [0, 65535] { R6083 += 1, R6084 += 1 };
  s0 -> s3 [70, 70] { R6084 += 1, R6020 += 1, R185 += 1, R186 += 1 };
  s0 -> s4 [70, 70] { R6084 += 1, R6020 += 1, R185 += 1, R186 += 1 };
  s0 -> s1 [71, 65535] { R6084 += 1, R6020 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 69] { R6084 += 1, R6020 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 65535] { R6084 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R6084 += 1, R6020 += 1, R185 += 1, R186 += 1 };
  s1 -> s4 [70, 70] { R6084 += 1, R6020 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [71, 65535] { R6084 += 1, R6020 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [0, 69] { R6084 += 1, R6020 += 1, R185 += 1, R186 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R6084 += 1, R6019 += 1, R6020 += 1 };
  s2 -> s3 [70, 70] { R6084 += 1, R6020 += 1, R185 += 1, R186 += 1 };
  s2 -> s4 [70, 70] { R6084 += 1, R6020 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [71, 65535] { R6084 += 1, R6020 += 1, R185 += 1, R186 += 1 };
  s3 -> s3 [0, 65535] { R6084 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R6084 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R6084 += 1, R6020 += 1, R185 += 1, R186 += 1 };
  s5 -> s5 [0, 65535] { R6084 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R6086 += 1, R6022 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s0 -> s2 [0, 69] { R6086 += 1, R6022 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s0 -> s3 [0, 69] { R6086 += 1, R6022 += 1, R5289 += 1, R5290 += 1 };
  s0 -> s4 [0, 65535] { R6086 += 1, R6021 += 1, R6022 += 1 };
  s0 -> s0 [0, 65535] { R6085 += 1, R6086 += 1 };
  s0 -> s5 [70, 70] { R6086 += 1, R6022 += 1, R5289 += 1, R5290 += 1 };
  s0 -> s6 [70, 70] { R6086 += 1, R6022 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s0 -> s7 [70, 70] { R6086 += 1, R6022 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s0 -> s8 [70, 70] { R6086 += 1, R6022 += 1, R5289 += 1, R5290 += 1 };
  s0 -> s9 [70, 70] { R6086 += 1, R6022 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s0 -> s10 [70, 70] { R6086 += 1, R6022 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s0 -> s1 [71, 65535] { R6086 += 1, R6022 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s0 -> s2 [71, 65535] { R6086 += 1, R6022 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s0 -> s3 [71, 65535] { R6086 += 1, R6022 += 1, R5289 += 1, R5290 += 1 };
  s1 -> s1 [0, 69] { R6086 += 1, R6022 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s1 -> s2 [0, 69] { R6086 += 1, R6022 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s1 -> s6 [70, 70] { R6086 += 1, R6022 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s1 -> s7 [70, 70] { R6086 += 1, R6022 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s1 -> s9 [70, 70] { R6086 += 1, R6022 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s1 -> s10 [70, 70] { R6086 += 1, R6022 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s1 -> s1 [71, 65535] { R6086 += 1, R6022 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s1 -> s2 [71, 65535] { R6086 += 1, R6022 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s2 -> s14 [0, 69] { R6086 += 1, R6022 += 1, R5290 += 1 };
  s2 -> s2 [0, 69] { R6086 += 1, R6022 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s2 -> s15 [70, 70] { R6086 += 1, R6022 += 1, R5290 += 1 };
  s2 -> s11 [70, 70] { R6086 += 1, R6022 += 1, R5290 += 1 };
  s2 -> s9 [70, 70] { R6086 += 1, R6022 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s2 -> s10 [70, 70] { R6086 += 1, R6022 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s2 -> s14 [71, 65535] { R6086 += 1, R6022 += 1, R5290 += 1 };
  s2 -> s2 [71, 65535] { R6086 += 1, R6022 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s3 -> s1 [0, 69] { R6086 += 1, R6022 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s3 -> s2 [0, 69] { R6086 += 1, R6022 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s3 -> s3 [0, 69] { R6086 += 1, R6022 += 1, R5289 += 1, R5290 += 1 };
  s3 -> s5 [70, 70] { R6086 += 1, R6022 += 1, R5289 += 1, R5290 += 1 };
  s3 -> s6 [70, 70] { R6086 += 1, R6022 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s3 -> s7 [70, 70] { R6086 += 1, R6022 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s3 -> s8 [70, 70] { R6086 += 1, R6022 += 1, R5289 += 1, R5290 += 1 };
  s3 -> s9 [70, 70] { R6086 += 1, R6022 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s3 -> s10 [70, 70] { R6086 += 1, R6022 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s3 -> s1 [71, 65535] { R6086 += 1, R6022 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s3 -> s2 [71, 65535] { R6086 += 1, R6022 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s3 -> s3 [71, 65535] { R6086 += 1, R6022 += 1, R5289 += 1, R5290 += 1 };
  s4 -> s1 [0, 69] { R6086 += 1, R6022 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s4 -> s2 [0, 69] { R6086 += 1, R6022 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s4 -> s3 [0, 69] { R6086 += 1, R6022 += 1, R5289 += 1, R5290 += 1 };
  s4 -> s4 [0, 65535] { R6086 += 1, R6021 += 1, R6022 += 1 };
  s4 -> s5 [70, 70] { R6086 += 1, R6022 += 1, R5289 += 1, R5290 += 1 };
  s4 -> s6 [70, 70] { R6086 += 1, R6022 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s4 -> s7 [70, 70] { R6086 += 1, R6022 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s4 -> s8 [70, 70] { R6086 += 1, R6022 += 1, R5289 += 1, R5290 += 1 };
  s4 -> s9 [70, 70] { R6086 += 1, R6022 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s4 -> s10 [70, 70] { R6086 += 1, R6022 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s4 -> s1 [71, 65535] { R6086 += 1, R6022 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s4 -> s2 [71, 65535] { R6086 += 1, R6022 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s4 -> s3 [71, 65535] { R6086 += 1, R6022 += 1, R5289 += 1, R5290 += 1 };
  s5 -> s5 [0, 65535] { R6086 += 1, R6022 += 1, R5289 += 1, R5290 += 1 };
  s5 -> s7 [0, 65535] { R6086 += 1, R6022 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s5 -> s9 [0, 65535] { R6086 += 1, R6022 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s7 -> s7 [0, 65535] { R6086 += 1, R6022 += 1, R5290 += 1, R5291 += 1, R5292 += 1 };
  s7 -> s9 [0, 65535] { R6086 += 1, R6022 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s9 -> s11 [0, 65535] { R6086 += 1, R6022 += 1, R5290 += 1 };
  s9 -> s9 [0, 65535] { R6086 += 1, R6022 += 1, R5290 += 1, R5292 += 1, R5293 += 1 };
  s11 -> s12 [0, 65535] { R6086 += 1 };
  s11 -> s11 [0, 65535] { R6086 += 1, R6022 += 1, R5290 += 1 };
  s11 -> s13 [0, 65535];
  s12 -> s12 [0, 65535] { R6086 += 1 };
  s12 -> s13 [0, 65535];
  s13 -> s13 [0, 65535];
  s14 -> s14 [0, 69] { R6086 += 1, R6022 += 1, R5290 += 1 };
  s14 -> s14 [0, 65535] { R6086 += 1 };
  s14 -> s13 [0, 65535];
  s14 -> s15 [70, 70] { R6086 += 1, R6022 += 1, R5290 += 1 };
  s14 -> s11 [70, 70] { R6086 += 1, R6022 += 1, R5290 += 1 };
  s14 -> s14 [71, 65535] { R6086 += 1, R6022 += 1, R5290 += 1 };
  s15 -> s15 [0, 65535] { R6086 += 1 };
  s15 -> s13 [0, 65535];
  accepting s12, s13, s14, s15, s11;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R6088 += 1, R6024 += 1, R5931 += 1, R5932 += 1 };
  s0 -> s2 [0, 69] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s0 -> s3 [0, 69] { R6088 += 1, R6024 += 1, R5932 += 1, R5933 += 1, R5934 += 1 };
  s0 -> s4 [0, 65535] { R6088 += 1, R6023 += 1, R6024 += 1 };
  s0 -> s0 [0, 65535] { R6087 += 1, R6088 += 1 };
  s0 -> s5 [70, 70] { R6088 += 1, R6024 += 1, R5931 += 1, R5932 += 1 };
  s0 -> s6 [70, 70] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s0 -> s7 [70, 70] { R6088 += 1, R6024 += 1, R5931 += 1, R5932 += 1 };
  s0 -> s8 [70, 70] { R6088 += 1, R6024 += 1, R5932 += 1, R5933 += 1, R5934 += 1 };
  s0 -> s9 [70, 70] { R6088 += 1, R6024 += 1, R5932 += 1, R5933 += 1, R5934 += 1 };
  s0 -> s10 [70, 70] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s0 -> s2 [71, 74] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s0 -> s1 [71, 65535] { R6088 += 1, R6024 += 1, R5931 += 1, R5932 += 1 };
  s0 -> s3 [71, 65535] { R6088 += 1, R6024 += 1, R5932 += 1, R5933 += 1, R5934 += 1 };
  s0 -> s11 [75, 75] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s0 -> s2 [87, 65535] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s1 -> s1 [0, 69] { R6088 += 1, R6024 += 1, R5931 += 1, R5932 += 1 };
  s1 -> s2 [0, 69] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s1 -> s3 [0, 69] { R6088 += 1, R6024 += 1, R5932 += 1, R5933 += 1, R5934 += 1 };
  s1 -> s5 [70, 70] { R6088 += 1, R6024 += 1, R5931 += 1, R5932 += 1 };
  s1 -> s6 [70, 70] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s1 -> s7 [70, 70] { R6088 += 1, R6024 += 1, R5931 += 1, R5932 += 1 };
  s1 -> s8 [70, 70] { R6088 += 1, R6024 += 1, R5932 += 1, R5933 += 1, R5934 += 1 };
  s1 -> s9 [70, 70] { R6088 += 1, R6024 += 1, R5932 += 1, R5933 += 1, R5934 += 1 };
  s1 -> s10 [70, 70] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s1 -> s2 [71, 74] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s1 -> s1 [71, 65535] { R6088 += 1, R6024 += 1, R5931 += 1, R5932 += 1 };
  s1 -> s3 [71, 65535] { R6088 += 1, R6024 += 1, R5932 += 1, R5933 += 1, R5934 += 1 };
  s1 -> s11 [75, 75] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s1 -> s2 [87, 65535] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s2 -> s2 [0, 69] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s2 -> s6 [70, 70] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s2 -> s10 [70, 70] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s2 -> s2 [71, 74] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s2 -> s11 [75, 75] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s2 -> s2 [87, 65535] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s3 -> s2 [0, 69] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s3 -> s3 [0, 69] { R6088 += 1, R6024 += 1, R5932 += 1, R5933 += 1, R5934 += 1 };
  s3 -> s6 [70, 70] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s3 -> s8 [70, 70] { R6088 += 1, R6024 += 1, R5932 += 1, R5933 += 1, R5934 += 1 };
  s3 -> s9 [70, 70] { R6088 += 1, R6024 += 1, R5932 += 1, R5933 += 1, R5934 += 1 };
  s3 -> s10 [70, 70] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s3 -> s2 [71, 74] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s3 -> s3 [71, 65535] { R6088 += 1, R6024 += 1, R5932 += 1, R5933 += 1, R5934 += 1 };
  s3 -> s11 [75, 75] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s3 -> s2 [87, 65535] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s4 -> s1 [0, 69] { R6088 += 1, R6024 += 1, R5931 += 1, R5932 += 1 };
  s4 -> s2 [0, 69] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s4 -> s3 [0, 69] { R6088 += 1, R6024 += 1, R5932 += 1, R5933 += 1, R5934 += 1 };
  s4 -> s4 [0, 65535] { R6088 += 1, R6023 += 1, R6024 += 1 };
  s4 -> s5 [70, 70] { R6088 += 1, R6024 += 1, R5931 += 1, R5932 += 1 };
  s4 -> s6 [70, 70] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s4 -> s7 [70, 70] { R6088 += 1, R6024 += 1, R5931 += 1, R5932 += 1 };
  s4 -> s8 [70, 70] { R6088 += 1, R6024 += 1, R5932 += 1, R5933 += 1, R5934 += 1 };
  s4 -> s9 [70, 70] { R6088 += 1, R6024 += 1, R5932 += 1, R5933 += 1, R5934 += 1 };
  s4 -> s10 [70, 70] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s4 -> s2 [71, 74] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s4 -> s1 [71, 65535] { R6088 += 1, R6024 += 1, R5931 += 1, R5932 += 1 };
  s4 -> s3 [71, 65535] { R6088 += 1, R6024 += 1, R5932 += 1, R5933 += 1, R5934 += 1 };
  s4 -> s11 [75, 75] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s4 -> s2 [87, 65535] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s5 -> s6 [0, 74] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s5 -> s5 [0, 65535] { R6088 += 1, R6024 += 1, R5931 += 1, R5932 += 1 };
  s5 -> s9 [0, 65535] { R6088 += 1, R6024 += 1, R5932 += 1, R5933 += 1, R5934 += 1 };
  s5 -> s14 [75, 75] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s5 -> s6 [87, 65535] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s6 -> s6 [0, 74] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s6 -> s14 [75, 75] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s6 -> s6 [87, 65535] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s9 -> s6 [0, 74] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s9 -> s9 [0, 65535] { R6088 += 1, R6024 += 1, R5932 += 1, R5933 += 1, R5934 += 1 };
  s9 -> s14 [75, 75] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s9 -> s6 [87, 65535] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s11 -> s11 [0, 69] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s11 [0, 65535] { R6088 += 1 };
  s11 -> s13 [70, 70] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s11 -> s14 [70, 70] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s11 -> s11 [71, 75] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s11 -> s11 [87, 65535] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R6088 += 1 };
  s13 -> s12 [0, 65535];
  s14 -> s14 [0, 75] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R6088 += 1 };
  s14 -> s14 [87, 65535] { R6088 += 1, R6024 += 1, R5932 += 1, R5934 += 1 };
  accepting s11, s12, s13, s14;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
constraint R2 = R5968 && R3 = R6088 && R25 - R6088 = -1 && R26 = R6088 && R27 - R6088 = -1 && R28 = R6088 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R5936 + -1*R5932 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R5936 + -1*R5932 - R130 = 0 && R129 + R5935 + R5931 = 0 && R131 + R5937 + R5933 = 0 && R132 + R5938 + R5934 = 0 && R5967 = 0 && R5999 = 0 && R6000 = 0 && R6009 = 0 && R6010 = 0 && R6021 = 0 && R6022 = 0 && R6023 = 0 && R6024 = 0 && R6025 = 0 && R6026 = R6088 && R6027 = 0 && R6028 = R6088 && R6029 = 0 && R6030 = R6088 && R6031 = 0 && R6032 = R6088 && R6033 = 0 && R6034 = R6088 && R6035 = 0 && R6036 = R6088 && R6037 = 0 && R6038 = R6088 && R6039 = 0 && R6040 = R6088 && R6041 = 0 && R6042 = R6088 && R6043 = 0 && R6044 = R6088 && R6045 = 0 && R6046 = R6088 && R6047 = 0 && R6048 = R6088 && R6049 = 0 && R6050 = R6088 && R6051 = 0 && R6052 = R6088 && R6053 = 0 && R6054 = R6088 && R6055 = 0 && R6056 = R6088 && R6057 = 0 && R6058 = R6088 && R6059 = 0 && R6060 = R6088 && R6061 = 0 && R6062 = R6088 && R6063 = 0 && R6064 = R6088 && R6065 = 0 && R6066 = R6088 && R6067 = 0 && R6068 = R6088 && R6069 = 0 && R6070 = R6088 && R6071 = 0 && R6072 = R6088 && R6073 = 0 && R6074 = R6088 && R6075 = 0 && R6076 = R6088 && R6077 = 0 && R6078 = R6088 && R6079 = 0 && R6080 = R6088 && R6081 = 0 && R6082 = R6088 && R6083 = 0 && R6084 = R6088 && R6085 = 0 && R6086 = R6088 && R6087 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R5936 + -1*R5932 - R130 < 1 && -1 < R5968 && 0 < R6088 && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R5936 + -1*R5932 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R191 + R187 = 0 && R114 + R192 + R188 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R5936 + -1*R5932 - R130 = 0 || R130 + R5936 + R5932 < 1) && (R81 + R158 + R155 = 0 || R130 + R5936 + R5932 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R5936 + -1*R5932 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R5936 + R5932 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R5936 + -1*R5932 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R5936 + R5932 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R5936 + -1*R5932 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R5936 + R5932 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 != 0 || R112 + R190 + R186 + -1*R5936 + -1*R5932 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R5936 + R5932 = 0)) && (R113 + R191 + R187 != 0 || R83 + R160 + R157 + -1*R192 + -1*R188 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R5294 + R5289 != 0 || R120 + R5295 + R5290 + -1*R5936 + -1*R5932 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R5936 + R5932 = 0)) && (R5939 != 0 || R5940 = R5968 || (R22 = 0 && R5968 = 0)) && (R5941 != 0 || R5942 = R5968 || (R22 = 0 && R5968 = 0)) && (R5943 != 0 || R5944 = R5968 || (R22 = 0 && R5968 = 0)) && (R5945 != 0 || R5946 = R5968 || (R22 = 0 && R5968 = 0)) && (R5947 != 0 || R5948 = R5968 || (R22 = 0 && R5968 = 0)) && (R5949 != 0 || R5950 = R5968 || (R22 = 0 && R5968 = 0)) && (R5951 != 0 || R5952 = R5968 || (R22 = 0 && R5968 = 0)) && (R5953 != 0 || R5954 = R5968 || (R22 = 0 && R5968 = 0)) && (R5955 != 0 || R5956 = R5968 || (R22 = 0 && R5968 = 0)) && (R5957 != 0 || R5958 = R5968 || (R22 = 0 && R5968 = 0)) && (R5959 != 0 || R5960 = R5968 || (R22 = 0 && R5968 = 0)) && (R5961 != 0 || R5962 = R5968 || (R22 = 0 && R5968 = 0)) && (R5963 != 0 || R5964 = R5968 || (R22 = 0 && R5968 = 0)) && (R5965 != 0 || R5966 = R5968 || (R22 = 0 && R5968 = 0)) && (R23 = 0 || (R5997 = 0 && R5998 = 0)) && (R23 = 0 || (R6001 = 0 && R6002 = 0)) && (R23 = 0 || (R6003 = 0 && R6004 = 0)) && (R23 = 0 || (R6005 = 0 && R6006 = 0)) && (R23 = 0 || (R6007 = 0 && R6008 = 0)) && (R23 = 0 || (R6011 = 0 && R6012 = 0)) && (R23 = 0 || (R6013 = 0 && R6014 = 0)) && (R23 = 0 || (R6015 = 0 && R6016 = 0)) && (R23 = 0 || (R6017 = 0 && R6018 = 0)) && (R23 = 0 || (R6019 = 0 && R6020 = 0)) && (R24 = 0 || (R5969 = 0 && R5970 = 0)) && (R24 = 0 || (R5971 = 0 && R5972 = 0)) && (R24 = 0 || (R5973 = 0 && R5974 = 0)) && (R24 = 0 || (R5975 = 0 && R5976 = 0)) && (R24 = 0 || (R5977 = 0 && R5978 = 0)) && (R24 = 0 || (R5979 = 0 && R5980 = 0)) && (R24 = 0 || (R5981 = 0 && R5982 = 0)) && (R24 = 0 || (R5983 = 0 && R5984 = 0)) && (R24 = 0 || (R5985 = 0 && R5986 = 0)) && (R24 = 0 || (R5987 = 0 && R5988 = 0)) && (R24 = 0 || (R5989 = 0 && R5990 = 0)) && (R24 = 0 || (R5991 = 0 && R5992 = 0)) && (R24 = 0 || (R5993 = 0 && R5994 = 0)) && (R24 = 0 || (R5995 = 0 && R5996 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R5936 + R5932 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R5936 + R5932 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R5936 + R5932 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 = 0 || (R83 + R160 + R157 = 0 && R130 + R5936 + R5932 = 0)) && (R113 + R191 + R187 = 0 || R83 + R160 + R157 < 1) && (R119 + R5294 + R5289 = 0 || (R83 + R160 + R157 = 0 && R130 + R5936 + R5932 = 0)) && (R123 + R5298 + R5293 = 0 || (R121 + R5296 + R5291 = 0 && R122 + R5297 + R5292 = 0)) && (R5939 = 0 || (R22 = 0 && R5968 = 0)) && (R5941 = 0 || (R22 = 0 && R5968 = 0)) && (R5943 = 0 || (R22 = 0 && R5968 = 0)) && (R5945 = 0 || (R22 = 0 && R5968 = 0)) && (R5947 = 0 || (R22 = 0 && R5968 = 0)) && (R5949 = 0 || (R22 = 0 && R5968 = 0)) && (R5951 = 0 || (R22 = 0 && R5968 = 0)) && (R5953 = 0 || (R22 = 0 && R5968 = 0)) && (R5955 = 0 || (R22 = 0 && R5968 = 0)) && (R5957 = 0 || (R22 = 0 && R5968 = 0)) && (R5959 = 0 || (R22 = 0 && R5968 = 0)) && (R5961 = 0 || (R22 = 0 && R5968 = 0)) && (R5963 = 0 || (R22 = 0 && R5968 = 0)) && (R5965 = 0 || (R22 = 0 && R5968 = 0));
// End of Parikh automata intersection problem
