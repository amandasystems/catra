// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R2, R22, R23, R24, R25, R26, R27, R2741, R2742, R2743, R2744, R2745, R2746, R2747, R2748, R2749, R2750, R28, R29, R2909, R2910, R2911, R2912, R2913, R2914, R2915, R2916, R2917, R2918, R2919, R2920, R2921, R2922, R2923, R2924, R2925, R2926, R2927, R2928, R2929, R2930, R2931, R2932, R2933, R2934, R2935, R2936, R2937, R2938, R2939, R2940, R2941, R2942, R2943, R2944, R2945, R2946, R2947, R2948, R2949, R2950, R2951, R2952, R2953, R2954, R2955, R2956, R2957, R2958, R2959, R2960, R2961, R2962, R2963, R2964, R2965, R2966, R2967, R2968, R2969, R2970, R2971, R2972, R2973, R2974, R2975, R2976, R2977, R2978, R2979, R2980, R2981, R2982, R2983, R2984, R2985, R2986, R2987, R2988, R2989, R2990, R2991, R2992, R2993, R2994, R2995, R2996, R2997, R2998, R2999, R3, R30, R3000, R3001, R3002, R3003, R3004, R3005, R3006, R3007, R3008, R3009, R3010, R3011, R3012, R3013, R3014, R3015, R3016, R3017, R3018, R3019, R3020, R3021, R3022, R3023, R3024, R3025, R3026, R3027, R3028, R3029, R3030, R3031, R3032, R3033, R3034, R3035, R3036, R3037, R3038, R3039, R3040, R3041, R3042, R3043, R3044, R3045, R3046, R3047, R3048, R3049, R3050, R3051, R3052, R3053, R3054, R3055, R3056, R3057, R3058, R3059, R3060, R3061, R3062, R3063, R3064, R3065, R3066, R31, R32, R4, R5, R63, R65, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R26 += 1 };
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R2947 += 1, R2948 += 1 };
  s0 -> s1 [0, 65535] { R2948 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R2948 += 1, R24 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R2950 += 1 };
  s0 -> s0 [0, 65535] { R2949 += 1, R2950 += 1 };
  s0 -> s2 [70, 70] { R2950 += 1 };
  s0 -> s3 [70, 70] { R2950 += 1 };
  s0 -> s1 [76, 65535] { R2950 += 1 };
  s1 -> s1 [0, 69] { R2950 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2950 += 1 };
  s1 -> s3 [70, 70] { R2950 += 1 };
  s1 -> s1 [76, 65535] { R2950 += 1 };
  s2 -> s2 [0, 70] { R2950 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R2950 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R2952 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R2951 += 1, R2952 += 1 };
  s0 -> s2 [70, 70] { R2952 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R2952 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R2952 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R2952 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2952 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R2952 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R2952 += 1, R63 += 1 };
  s2 -> s2 [0, 65535] { R2952 += 1, R63 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R2954 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R2953 += 1, R2954 += 1 };
  s0 -> s2 [70, 70] { R2954 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R2954 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R2954 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R2954 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2954 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R2954 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R2954 += 1, R65 += 1 };
  s2 -> s2 [0, 65535] { R2954 += 1, R65 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R2956 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R2955 += 1, R2956 += 1 };
  s0 -> s2 [70, 70] { R2956 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R2956 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R2956 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R2956 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2956 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R2956 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R2956 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2956 += 1, R67 += 1, R68 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R2958 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R2957 += 1, R2958 += 1 };
  s0 -> s2 [70, 70] { R2958 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R2958 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R2958 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R2958 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2958 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R2958 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R2958 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R2958 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R2960 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R2959 += 1, R2960 += 1 };
  s0 -> s2 [70, 70] { R2960 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R2960 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R2960 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R2960 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2960 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R2960 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R2960 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2960 += 1, R77 += 1, R78 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R2962 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R2961 += 1, R2962 += 1 };
  s0 -> s2 [70, 70] { R2962 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R2962 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R2962 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R2962 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2962 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R2962 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R2962 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R2962 += 1, R81 += 1, R82 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R2964 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R2963 += 1, R2964 += 1 };
  s0 -> s2 [70, 70] { R2964 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R2964 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R2964 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R2964 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2964 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R2964 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R2964 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535] { R2964 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R2966 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R2965 += 1, R2966 += 1 };
  s0 -> s2 [70, 70] { R2966 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R2966 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R2966 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R2966 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2966 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R2966 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R2966 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535] { R2966 += 1, R93 += 1, R94 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R2968 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R2967 += 1, R2968 += 1 };
  s0 -> s2 [70, 70] { R2968 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R2968 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R2968 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R2968 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2968 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R2968 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R2968 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535] { R2968 += 1, R101 += 1, R102 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R2970 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R2969 += 1, R2970 += 1 };
  s0 -> s2 [70, 70] { R2970 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R2970 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R2970 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R2970 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2970 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R2970 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R2970 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535] { R2970 += 1, R111 += 1, R112 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R2972 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R2971 += 1, R2972 += 1 };
  s0 -> s2 [70, 70] { R2972 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R2972 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R2972 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R2972 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2972 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R2972 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R2972 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535] { R2972 += 1, R119 += 1, R120 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R2974 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R2973 += 1, R2974 += 1 };
  s0 -> s2 [70, 70] { R2974 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R2974 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R2974 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R2974 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2974 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R2974 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R2974 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535] { R2974 += 1, R129 += 1, R130 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R3004 += 1 };
  s0 -> s0 [0, 65535] { R3003 += 1, R3004 += 1 };
  s0 -> s2 [70, 70] { R3004 += 1 };
  s0 -> s1 [71, 65535] { R3004 += 1 };
  s1 -> s1 [0, 69] { R3004 += 1 };
  s1 -> s2 [70, 70] { R3004 += 1 };
  s1 -> s1 [71, 65535] { R3004 += 1 };
  s2 -> s2 [0, 65535] { R3004 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R3005 += 1, R3006 += 1 };
  s0 -> s1 [0, 65535] { R3006 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R3006 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R3008 += 1 };
  s0 -> s0 [0, 65535] { R3007 += 1, R3008 += 1 };
  s0 -> s2 [0, 65535] { R3008 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R3008 += 1 };
  s0 -> s1 [71, 65535] { R3008 += 1 };
  s1 -> s1 [0, 69] { R3008 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R3008 += 1 };
  s1 -> s1 [71, 65535] { R3008 += 1 };
  s2 -> s1 [0, 69] { R3008 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3008 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R3008 += 1 };
  s2 -> s1 [71, 65535] { R3008 += 1 };
  s3 -> s3 [0, 65535] { R3008 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R3010 += 1, R2918 += 1 };
  s0 -> s2 [0, 65535] { R3010 += 1, R2917 += 1, R2918 += 1 };
  s0 -> s0 [0, 65535] { R3009 += 1, R3010 += 1 };
  s0 -> s1 [71, 65535] { R3010 += 1, R2918 += 1 };
  s1 -> s1 [0, 69] { R3010 += 1, R2918 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3010 += 1 };
  s1 -> s1 [71, 65535] { R3010 += 1, R2918 += 1 };
  s2 -> s1 [0, 69] { R3010 += 1, R2918 += 1 };
  s2 -> s2 [0, 65535] { R3010 += 1, R2917 += 1, R2918 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R3010 += 1, R2918 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R3012 += 1, R2920 += 1, R22 += 1 };
  s0 -> s2 [0, 65535] { R3012 += 1, R2919 += 1, R2920 += 1 };
  s0 -> s0 [0, 65535] { R3011 += 1, R3012 += 1 };
  s1 -> s1 [0, 65535] { R3012 += 1, R2920 += 1, R22 += 1 };
  s1 -> s4 [0, 65535] { R3012 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R3012 += 1, R2920 += 1, R22 += 1 };
  s2 -> s2 [0, 65535] { R3012 += 1, R2919 += 1, R2920 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3012 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R3014 += 1, R2922 += 1 };
  s0 -> s2 [0, 65535] { R3014 += 1, R2921 += 1, R2922 += 1 };
  s0 -> s0 [0, 65535] { R3013 += 1, R3014 += 1 };
  s0 -> s1 [75, 65535] { R3014 += 1, R2922 += 1 };
  s1 -> s1 [0, 70] { R3014 += 1, R2922 += 1 };
  s1 -> s1 [0, 65535] { R3014 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R3014 += 1, R2922 += 1 };
  s2 -> s1 [0, 70] { R3014 += 1, R2922 += 1 };
  s2 -> s2 [0, 65535] { R3014 += 1, R2921 += 1, R2922 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R3014 += 1, R2922 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R3016 += 1, R2923 += 1, R2924 += 1 };
  s0 -> s0 [0, 65535] { R3015 += 1, R3016 += 1 };
  s0 -> s2 [0, 65535] { R3016 += 1, R2924 += 1, R138 += 1 };
  s1 -> s1 [0, 65535] { R3016 += 1, R2923 += 1, R2924 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R3016 += 1, R2924 += 1, R138 += 1 };
  s2 -> s3 [0, 65535] { R3016 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3016 += 1, R2924 += 1, R138 += 1 };
  s3 -> s3 [0, 65535] { R3016 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R3018 += 1, R2926 += 1 };
  s0 -> s2 [0, 65535] { R3018 += 1, R2925 += 1, R2926 += 1 };
  s0 -> s3 [0, 65535] { R3018 += 1, R2926 += 1, R140 += 1 };
  s0 -> s0 [0, 65535] { R3017 += 1, R3018 += 1 };
  s0 -> s1 [76, 65535] { R3018 += 1, R2926 += 1 };
  s1 -> s1 [0, 74] { R3018 += 1, R2926 += 1 };
  s1 -> s1 [0, 65535] { R3018 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R3018 += 1, R2926 += 1 };
  s2 -> s1 [0, 74] { R3018 += 1, R2926 += 1 };
  s2 -> s2 [0, 65535] { R3018 += 1, R2925 += 1, R2926 += 1 };
  s2 -> s3 [0, 65535] { R3018 += 1, R2926 += 1, R140 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [76, 65535] { R3018 += 1, R2926 += 1 };
  s3 -> s1 [0, 74] { R3018 += 1, R2926 += 1 };
  s3 -> s3 [0, 65535] { R3018 += 1, R2926 += 1, R140 += 1 };
  s3 -> s4 [0, 65535] { R3018 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [76, 65535] { R3018 += 1, R2926 += 1 };
  s4 -> s4 [0, 65535] { R3018 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R3020 += 1, R2928 += 1, R145 += 1, R146 += 1 };
  s0 -> s2 [0, 65535] { R3020 += 1, R2927 += 1, R2928 += 1 };
  s0 -> s0 [0, 65535] { R3019 += 1, R3020 += 1 };
  s0 -> s3 [0, 65535] { R3020 += 1, R2928 += 1, R144 += 1, R145 += 1 };
  s1 -> s1 [0, 65535] { R3020 += 1, R2928 += 1, R145 += 1, R146 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R3020 += 1, R2928 += 1 };
  s1 -> s5 [0, 65535] { R3020 += 1 };
  s2 -> s1 [0, 65535] { R3020 += 1, R2928 += 1, R145 += 1, R146 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3020 += 1, R2927 += 1, R2928 += 1 };
  s2 -> s3 [0, 65535] { R3020 += 1, R2928 += 1, R144 += 1, R145 += 1 };
  s3 -> s1 [0, 65535] { R3020 += 1, R2928 += 1, R145 += 1, R146 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R3020 += 1 };
  s3 -> s3 [0, 65535] { R3020 += 1, R2928 += 1, R144 += 1, R145 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3020 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R3020 += 1, R2928 += 1 };
  s6 -> s5 [0, 65535] { R3020 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R3022 += 1, R2930 += 1, R150 += 1 };
  s0 -> s2 [0, 65535] { R3022 += 1, R2930 += 1, R149 += 1, R150 += 1 };
  s0 -> s3 [0, 65535] { R3022 += 1, R2929 += 1, R2930 += 1 };
  s0 -> s0 [0, 65535] { R3021 += 1, R3022 += 1 };
  s0 -> s4 [75, 75] { R3022 += 1, R2930 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R3022 += 1, R2930 += 1, R150 += 1 };
  s0 -> s1 [87, 65535] { R3022 += 1, R2930 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R3022 += 1, R2930 += 1, R150 += 1 };
  s1 -> s6 [0, 65535] { R3022 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R3022 += 1, R2930 += 1 };
  s1 -> s4 [75, 75] { R3022 += 1, R2930 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R3022 += 1, R2930 += 1, R150 += 1 };
  s1 -> s1 [87, 65535] { R3022 += 1, R2930 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R3022 += 1, R2930 += 1, R150 += 1 };
  s2 -> s6 [0, 65535] { R3022 += 1 };
  s2 -> s2 [0, 65535] { R3022 += 1, R2930 += 1, R149 += 1, R150 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [75, 75] { R3022 += 1, R2930 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R3022 += 1, R2930 += 1, R150 += 1 };
  s2 -> s1 [87, 65535] { R3022 += 1, R2930 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R3022 += 1, R2930 += 1, R150 += 1 };
  s3 -> s2 [0, 65535] { R3022 += 1, R2930 += 1, R149 += 1, R150 += 1 };
  s3 -> s3 [0, 65535] { R3022 += 1, R2929 += 1, R2930 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [75, 75] { R3022 += 1, R2930 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R3022 += 1, R2930 += 1, R150 += 1 };
  s3 -> s1 [87, 65535] { R3022 += 1, R2930 += 1, R150 += 1 };
  s4 -> s4 [0, 75] { R3022 += 1, R2930 += 1, R150 += 1 };
  s4 -> s6 [0, 65535] { R3022 += 1 };
  s4 -> s4 [0, 65535] { R3022 += 1, R2930 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [87, 65535] { R3022 += 1, R2930 += 1, R150 += 1 };
  s5 -> s6 [0, 65535] { R3022 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R3022 += 1, R2930 += 1 };
  s6 -> s6 [0, 65535] { R3022 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R3024 += 1, R2932 += 1 };
  s0 -> s0 [0, 65535] { R3023 += 1, R3024 += 1 };
  s0 -> s2 [0, 65535] { R3024 += 1, R2932 += 1, R154 += 1 };
  s0 -> s3 [0, 65535] { R3024 += 1, R2931 += 1, R2932 += 1 };
  s1 -> s1 [0, 65535] { R3024 += 1, R2932 += 1 };
  s1 -> s5 [0, 65535] { R3024 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R3024 += 1, R2932 += 1 };
  s2 -> s5 [0, 65535] { R3024 += 1 };
  s2 -> s2 [0, 65535] { R3024 += 1, R2932 += 1, R154 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R3024 += 1, R2932 += 1 };
  s3 -> s2 [0, 65535] { R3024 += 1, R2932 += 1, R154 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3024 += 1, R2931 += 1, R2932 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3024 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s0 [0, 65535] { R3025 += 1, R3026 += 1 };
  s0 -> s1 [0, 65535] { R3026 += 1, R2933 += 1, R2934 += 1 };
  s0 -> s2 [0, 65535] { R3026 += 1, R2934 += 1, R159 += 1, R160 += 1 };
  s0 -> s3 [0, 65535] { R3026 += 1, R2934 += 1, R158 += 1, R159 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3026 += 1, R2933 += 1, R2934 += 1 };
  s1 -> s2 [0, 65535] { R3026 += 1, R2934 += 1, R159 += 1, R160 += 1 };
  s1 -> s3 [0, 65535] { R3026 += 1, R2934 += 1, R158 += 1, R159 += 1 };
  s2 -> s6 [0, 65535] { R3026 += 1, R2934 += 1 };
  s2 -> s4 [0, 65535] { R3026 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3026 += 1, R2934 += 1, R159 += 1, R160 += 1 };
  s3 -> s4 [0, 65535] { R3026 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R3026 += 1, R2934 += 1, R159 += 1, R160 += 1 };
  s3 -> s3 [0, 65535] { R3026 += 1, R2934 += 1, R158 += 1, R159 += 1 };
  s4 -> s4 [0, 65535] { R3026 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3026 += 1, R2934 += 1 };
  s6 -> s4 [0, 65535] { R3026 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R3028 += 1, R2936 += 1, R165 += 1 };
  s0 -> s0 [0, 65535] { R3027 += 1, R3028 += 1 };
  s0 -> s2 [0, 65535] { R3028 += 1, R2935 += 1, R2936 += 1 };
  s0 -> s3 [0, 65535] { R3028 += 1, R2936 += 1, R165 += 1, R166 += 1 };
  s0 -> s4 [0, 65535] { R3028 += 1, R2936 += 1, R164 += 1, R165 += 1 };
  s0 -> s1 [76, 65535] { R3028 += 1, R2936 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R3028 += 1, R2936 += 1, R165 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R3028 += 1 };
  s1 -> s1 [0, 65535] { R3028 += 1, R2936 += 1 };
  s1 -> s1 [76, 65535] { R3028 += 1, R2936 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R3028 += 1, R2936 += 1, R165 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3028 += 1, R2935 += 1, R2936 += 1 };
  s2 -> s3 [0, 65535] { R3028 += 1, R2936 += 1, R165 += 1, R166 += 1 };
  s2 -> s4 [0, 65535] { R3028 += 1, R2936 += 1, R164 += 1, R165 += 1 };
  s2 -> s1 [76, 65535] { R3028 += 1, R2936 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R3028 += 1, R2936 += 1, R165 += 1 };
  s3 -> s7 [0, 65535] { R3028 += 1, R2936 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3028 += 1 };
  s3 -> s3 [0, 65535] { R3028 += 1, R2936 += 1, R165 += 1, R166 += 1 };
  s3 -> s1 [76, 65535] { R3028 += 1, R2936 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R3028 += 1, R2936 += 1, R165 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3028 += 1 };
  s4 -> s3 [0, 65535] { R3028 += 1, R2936 += 1, R165 += 1, R166 += 1 };
  s4 -> s4 [0, 65535] { R3028 += 1, R2936 += 1, R164 += 1, R165 += 1 };
  s4 -> s1 [76, 65535] { R3028 += 1, R2936 += 1, R165 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3028 += 1 };
  s7 -> s7 [0, 65535] { R3028 += 1, R2936 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R3028 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R3030 += 1, R2938 += 1, R172 += 1, R174 += 1 };
  s0 -> s2 [0, 65535] { R3030 += 1, R2937 += 1, R2938 += 1 };
  s0 -> s0 [0, 65535] { R3029 += 1, R3030 += 1 };
  s0 -> s3 [0, 65535] { R3030 += 1, R2938 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s4 [0, 65535] { R3030 += 1, R2938 += 1, R171 += 1, R172 += 1 };
  s0 -> s1 [76, 65535] { R3030 += 1, R2938 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R3030 += 1, R2938 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 65535] { R3030 += 1, R2938 += 1, R172 += 1 };
  s1 -> s7 [0, 65535] { R3030 += 1, R2938 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R3030 += 1 };
  s1 -> s1 [76, 65535] { R3030 += 1, R2938 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R3030 += 1, R2938 += 1, R172 += 1, R174 += 1 };
  s2 -> s2 [0, 65535] { R3030 += 1, R2937 += 1, R2938 += 1 };
  s2 -> s3 [0, 65535] { R3030 += 1, R2938 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s4 [0, 65535] { R3030 += 1, R2938 += 1, R171 += 1, R172 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [76, 65535] { R3030 += 1, R2938 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R3030 += 1, R2938 += 1, R172 += 1, R174 += 1 };
  s3 -> s7 [0, 65535] { R3030 += 1, R2938 += 1 };
  s3 -> s3 [0, 65535] { R3030 += 1, R2938 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3030 += 1 };
  s3 -> s1 [76, 65535] { R3030 += 1, R2938 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R3030 += 1, R2938 += 1, R172 += 1, R174 += 1 };
  s4 -> s3 [0, 65535] { R3030 += 1, R2938 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s4 [0, 65535] { R3030 += 1, R2938 += 1, R171 += 1, R172 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3030 += 1 };
  s4 -> s1 [76, 65535] { R3030 += 1, R2938 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3030 += 1 };
  s7 -> s7 [0, 65535] { R3030 += 1, R2938 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R3030 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s0 [0, 65535] { R3031 += 1, R3032 += 1 };
  s0 -> s1 [0, 65535] { R3032 += 1, R2940 += 1, R180 += 1, R181 += 1 };
  s0 -> s2 [0, 65535] { R3032 += 1, R2940 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s0 -> s3 [0, 65535] { R3032 += 1, R2940 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s0 -> s4 [0, 65535] { R3032 += 1, R2939 += 1, R2940 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3032 += 1, R2940 += 1, R180 += 1, R181 += 1 };
  s1 -> s2 [0, 65535] { R3032 += 1, R2940 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s1 -> s6 [0, 65535] { R3032 += 1 };
  s1 -> s3 [0, 65535] { R3032 += 1, R2940 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3032 += 1, R2940 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s2 -> s6 [0, 65535] { R3032 += 1 };
  s2 -> s3 [0, 65535] { R3032 += 1, R2940 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s2 -> s8 [0, 65535] { R3032 += 1, R2940 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3032 += 1 };
  s3 -> s3 [0, 65535] { R3032 += 1, R2940 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s3 -> s7 [0, 65535] { R3032 += 1, R2940 += 1, R181 += 1 };
  s3 -> s8 [0, 65535] { R3032 += 1, R2940 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R3032 += 1, R2940 += 1, R180 += 1, R181 += 1 };
  s4 -> s2 [0, 65535] { R3032 += 1, R2940 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s4 -> s3 [0, 65535] { R3032 += 1, R2940 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s4 -> s4 [0, 65535] { R3032 += 1, R2939 += 1, R2940 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3032 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R3032 += 1 };
  s7 -> s7 [0, 65535] { R3032 += 1, R2940 += 1, R181 += 1 };
  s7 -> s8 [0, 65535] { R3032 += 1, R2940 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R3032 += 1 };
  s8 -> s8 [0, 65535] { R3032 += 1, R2940 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R3034 += 1, R2942 += 1, R190 += 1, R192 += 1 };
  s0 -> s2 [0, 65535] { R3034 += 1, R2942 += 1, R189 += 1, R190 += 1 };
  s0 -> s3 [0, 65535] { R3034 += 1, R2942 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s0 -> s0 [0, 65535] { R3033 += 1, R3034 += 1 };
  s0 -> s4 [0, 65535] { R3034 += 1, R2941 += 1, R2942 += 1 };
  s0 -> s1 [86, 65535] { R3034 += 1, R2942 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 75] { R3034 += 1, R2942 += 1, R190 += 1, R192 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3034 += 1, R2942 += 1, R190 += 1 };
  s1 -> s6 [0, 65535] { R3034 += 1 };
  s1 -> s7 [0, 65535] { R3034 += 1, R2942 += 1 };
  s1 -> s1 [86, 65535] { R3034 += 1, R2942 += 1, R190 += 1, R192 += 1 };
  s2 -> s1 [0, 75] { R3034 += 1, R2942 += 1, R190 += 1, R192 += 1 };
  s2 -> s2 [0, 65535] { R3034 += 1, R2942 += 1, R189 += 1, R190 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R3034 += 1, R2942 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s2 -> s6 [0, 65535] { R3034 += 1 };
  s2 -> s1 [86, 65535] { R3034 += 1, R2942 += 1, R190 += 1, R192 += 1 };
  s3 -> s1 [0, 75] { R3034 += 1, R2942 += 1, R190 += 1, R192 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3034 += 1, R2942 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s3 -> s6 [0, 65535] { R3034 += 1 };
  s3 -> s7 [0, 65535] { R3034 += 1, R2942 += 1 };
  s3 -> s1 [86, 65535] { R3034 += 1, R2942 += 1, R190 += 1, R192 += 1 };
  s4 -> s1 [0, 75] { R3034 += 1, R2942 += 1, R190 += 1, R192 += 1 };
  s4 -> s2 [0, 65535] { R3034 += 1, R2942 += 1, R189 += 1, R190 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R3034 += 1, R2942 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s4 -> s4 [0, 65535] { R3034 += 1, R2941 += 1, R2942 += 1 };
  s4 -> s1 [86, 65535] { R3034 += 1, R2942 += 1, R190 += 1, R192 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3034 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R3034 += 1 };
  s7 -> s7 [0, 65535] { R3034 += 1, R2942 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R3036 += 1, R2944 += 1, R2747 += 1, R2749 += 1, R2750 += 1 };
  s0 -> s2 [0, 65535] { R3036 += 1, R2944 += 1 };
  s0 -> s3 [0, 65535] { R3036 += 1, R2943 += 1, R2944 += 1 };
  s0 -> s0 [0, 65535] { R3035 += 1, R3036 += 1 };
  s0 -> s4 [0, 65535] { R3036 += 1, R2944 += 1, R2747 += 1 };
  s1 -> s1 [0, 65535] { R3036 += 1, R2944 += 1, R2747 += 1, R2749 += 1, R2750 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R3036 += 1 };
  s1 -> s2 [0, 65535] { R3036 += 1, R2944 += 1 };
  s1 -> s4 [0, 65535] { R3036 += 1, R2944 += 1, R2747 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R3036 += 1 };
  s2 -> s2 [0, 65535] { R3036 += 1, R2944 += 1 };
  s3 -> s1 [0, 65535] { R3036 += 1, R2944 += 1, R2747 += 1, R2749 += 1, R2750 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R3036 += 1, R2944 += 1 };
  s3 -> s3 [0, 65535] { R3036 += 1, R2943 += 1, R2944 += 1 };
  s3 -> s4 [0, 65535] { R3036 += 1, R2944 += 1, R2747 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3036 += 1 };
  s4 -> s2 [0, 65535] { R3036 += 1, R2944 += 1 };
  s4 -> s4 [0, 65535] { R3036 += 1, R2944 += 1, R2747 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3036 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 65535] { R3038 += 1, R2945 += 1, R2946 += 1 };
  s0 -> s2 [0, 65535] { R3038 += 1, R2946 += 1 };
  s0 -> s0 [0, 65535] { R3037 += 1, R3038 += 1 };
  s1 -> s1 [0, 65535] { R3038 += 1, R2945 += 1, R2946 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R3038 += 1, R2946 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R3038 += 1, R2946 += 1 };
  s2 -> s4 [0, 65535] { R3038 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3038 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65535] { R3040 += 1, R2976 += 1, R23 += 1 };
  s0 -> s2 [0, 65535] { R3040 += 1, R2975 += 1, R2976 += 1 };
  s0 -> s0 [0, 65535] { R3039 += 1, R3040 += 1 };
  s1 -> s1 [0, 65535] { R3040 += 1, R2976 += 1, R23 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R3040 += 1 };
  s2 -> s1 [0, 65535] { R3040 += 1, R2976 += 1, R23 += 1 };
  s2 -> s2 [0, 65535] { R3040 += 1, R2975 += 1, R2976 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3040 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R3042 += 1, R2978 += 1 };
  s0 -> s2 [0, 65535] { R3042 += 1, R2977 += 1, R2978 += 1 };
  s0 -> s0 [0, 65535] { R3041 += 1, R3042 += 1 };
  s0 -> s3 [70, 70] { R3042 += 1, R2978 += 1 };
  s0 -> s4 [70, 70] { R3042 += 1, R2978 += 1 };
  s0 -> s5 [75, 75] { R3042 += 1, R2978 += 1 };
  s0 -> s1 [76, 65535] { R3042 += 1, R2978 += 1 };
  s1 -> s1 [0, 69] { R3042 += 1, R2978 += 1 };
  s1 -> s3 [70, 70] { R3042 += 1, R2978 += 1 };
  s1 -> s4 [70, 70] { R3042 += 1, R2978 += 1 };
  s1 -> s5 [75, 75] { R3042 += 1, R2978 += 1 };
  s1 -> s1 [76, 65535] { R3042 += 1, R2978 += 1 };
  s2 -> s1 [0, 69] { R3042 += 1, R2978 += 1 };
  s2 -> s2 [0, 65535] { R3042 += 1, R2977 += 1, R2978 += 1 };
  s2 -> s3 [70, 70] { R3042 += 1, R2978 += 1 };
  s2 -> s4 [70, 70] { R3042 += 1, R2978 += 1 };
  s2 -> s5 [75, 75] { R3042 += 1, R2978 += 1 };
  s2 -> s1 [76, 65535] { R3042 += 1, R2978 += 1 };
  s3 -> s3 [0, 70] { R3042 += 1, R2978 += 1 };
  s3 -> s7 [75, 75] { R3042 += 1, R2978 += 1 };
  s3 -> s3 [76, 65535] { R3042 += 1, R2978 += 1 };
  s5 -> s5 [0, 69] { R3042 += 1, R2978 += 1 };
  s5 -> s5 [0, 65535] { R3042 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R3042 += 1, R2978 += 1 };
  s5 -> s8 [70, 70] { R3042 += 1, R2978 += 1 };
  s5 -> s5 [75, 65535] { R3042 += 1, R2978 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R3042 += 1, R2978 += 1 };
  s7 -> s7 [0, 65535] { R3042 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R3042 += 1, R2978 += 1 };
  s8 -> s8 [0, 65535] { R3042 += 1 };
  s8 -> s6 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R3044 += 1, R2980 += 1, R137 += 1 };
  s0 -> s0 [0, 65535] { R3043 += 1, R3044 += 1 };
  s0 -> s2 [0, 65535] { R3044 += 1, R2979 += 1, R2980 += 1 };
  s0 -> s3 [70, 70] { R3044 += 1, R2980 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R3044 += 1, R2980 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R3044 += 1, R2980 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R3044 += 1, R2980 += 1, R137 += 1 };
  s1 -> s1 [0, 65535] { R3044 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R3044 += 1, R2980 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R3044 += 1, R2980 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R3044 += 1, R2980 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R3044 += 1, R2980 += 1, R137 += 1 };
  s2 -> s2 [0, 65535] { R3044 += 1, R2979 += 1, R2980 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R3044 += 1, R2980 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R3044 += 1, R2980 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R3044 += 1, R2980 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R3044 += 1, R2980 += 1, R137 += 1 };
  s3 -> s6 [0, 65535] { R3044 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3044 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3044 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R3046 += 1, R2982 += 1, R139 += 1 };
  s0 -> s0 [0, 65535] { R3045 += 1, R3046 += 1 };
  s0 -> s2 [0, 65535] { R3046 += 1, R2981 += 1, R2982 += 1 };
  s0 -> s3 [70, 70] { R3046 += 1, R2982 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R3046 += 1, R2982 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R3046 += 1, R2982 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R3046 += 1, R2982 += 1, R139 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R3046 += 1 };
  s1 -> s3 [70, 70] { R3046 += 1, R2982 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R3046 += 1, R2982 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R3046 += 1, R2982 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R3046 += 1, R2982 += 1, R139 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R3046 += 1, R2981 += 1, R2982 += 1 };
  s2 -> s3 [70, 70] { R3046 += 1, R2982 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R3046 += 1, R2982 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R3046 += 1, R2982 += 1, R139 += 1 };
  s3 -> s3 [0, 65535] { R3046 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3046 += 1 };
  s4 -> s4 [0, 65535] { R3046 += 1, R2982 += 1, R139 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3046 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R3048 += 1, R2984 += 1, R141 += 1, R142 += 1 };
  s0 -> s2 [0, 65535] { R3048 += 1, R2983 += 1, R2984 += 1 };
  s0 -> s0 [0, 65535] { R3047 += 1, R3048 += 1 };
  s0 -> s3 [70, 70] { R3048 += 1, R2984 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R3048 += 1, R2984 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R3048 += 1, R2984 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R3048 += 1, R2984 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 65535] { R3048 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R3048 += 1, R2984 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R3048 += 1, R2984 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R3048 += 1, R2984 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R3048 += 1, R2984 += 1, R141 += 1, R142 += 1 };
  s2 -> s2 [0, 65535] { R3048 += 1, R2983 += 1, R2984 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R3048 += 1, R2984 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R3048 += 1, R2984 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R3048 += 1, R2984 += 1, R141 += 1, R142 += 1 };
  s3 -> s3 [0, 65535] { R3048 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3048 += 1, R2984 += 1, R141 += 1, R142 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3048 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3048 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R3050 += 1, R2986 += 1, R147 += 1, R148 += 1 };
  s0 -> s2 [0, 65535] { R3050 += 1, R2985 += 1, R2986 += 1 };
  s0 -> s0 [0, 65535] { R3049 += 1, R3050 += 1 };
  s0 -> s3 [70, 70] { R3050 += 1, R2986 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R3050 += 1, R2986 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R3050 += 1, R2986 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R3050 += 1, R2986 += 1, R147 += 1, R148 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3050 += 1 };
  s1 -> s3 [70, 70] { R3050 += 1, R2986 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R3050 += 1, R2986 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R3050 += 1, R2986 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R3050 += 1, R2986 += 1, R147 += 1, R148 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3050 += 1, R2985 += 1, R2986 += 1 };
  s2 -> s3 [70, 70] { R3050 += 1, R2986 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R3050 += 1, R2986 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R3050 += 1, R2986 += 1, R147 += 1, R148 += 1 };
  s3 -> s6 [0, 65535] { R3050 += 1 };
  s3 -> s3 [0, 65535] { R3050 += 1, R2986 += 1, R147 += 1, R148 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3050 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3050 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R3052 += 1, R2988 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R3052 += 1, R2988 += 1, R151 += 1, R152 += 1 };
  s0 -> s3 [0, 65535] { R3052 += 1, R2987 += 1, R2988 += 1 };
  s0 -> s0 [0, 65535] { R3051 += 1, R3052 += 1 };
  s0 -> s4 [70, 70] { R3052 += 1, R2988 += 1, R151 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R3052 += 1, R2988 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R3052 += 1, R2988 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R3052 += 1, R2988 += 1, R151 += 1, R152 += 1 };
  s0 -> s1 [71, 74] { R3052 += 1, R2988 += 1, R152 += 1 };
  s0 -> s2 [71, 65535] { R3052 += 1, R2988 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R3052 += 1, R2988 += 1, R152 += 1 };
  s0 -> s1 [76, 65535] { R3052 += 1, R2988 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R3052 += 1, R2988 += 1, R152 += 1 };
  s1 -> s5 [70, 70] { R3052 += 1, R2988 += 1, R152 += 1 };
  s1 -> s6 [70, 70] { R3052 += 1, R2988 += 1, R152 += 1 };
  s1 -> s1 [71, 74] { R3052 += 1, R2988 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R3052 += 1, R2988 += 1, R152 += 1 };
  s1 -> s1 [76, 65535] { R3052 += 1, R2988 += 1, R152 += 1 };
  s2 -> s1 [0, 69] { R3052 += 1, R2988 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R3052 += 1, R2988 += 1, R151 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R3052 += 1, R2988 += 1, R151 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R3052 += 1, R2988 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R3052 += 1, R2988 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R3052 += 1, R2988 += 1, R151 += 1, R152 += 1 };
  s2 -> s1 [71, 74] { R3052 += 1, R2988 += 1, R152 += 1 };
  s2 -> s2 [71, 65535] { R3052 += 1, R2988 += 1, R151 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R3052 += 1, R2988 += 1, R152 += 1 };
  s2 -> s1 [76, 65535] { R3052 += 1, R2988 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R3052 += 1, R2988 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R3052 += 1, R2988 += 1, R151 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R3052 += 1, R2987 += 1, R2988 += 1 };
  s3 -> s4 [70, 70] { R3052 += 1, R2988 += 1, R151 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R3052 += 1, R2988 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R3052 += 1, R2988 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R3052 += 1, R2988 += 1, R151 += 1, R152 += 1 };
  s3 -> s1 [71, 74] { R3052 += 1, R2988 += 1, R152 += 1 };
  s3 -> s2 [71, 65535] { R3052 += 1, R2988 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R3052 += 1, R2988 += 1, R152 += 1 };
  s3 -> s1 [76, 65535] { R3052 += 1, R2988 += 1, R152 += 1 };
  s6 -> s6 [0, 74] { R3052 += 1, R2988 += 1, R152 += 1 };
  s6 -> s11 [75, 75] { R3052 += 1, R2988 += 1, R152 += 1 };
  s6 -> s6 [76, 65535] { R3052 += 1, R2988 += 1, R152 += 1 };
  s7 -> s6 [0, 74] { R3052 += 1, R2988 += 1, R152 += 1 };
  s7 -> s7 [0, 65535] { R3052 += 1, R2988 += 1, R151 += 1, R152 += 1 };
  s7 -> s11 [75, 75] { R3052 += 1, R2988 += 1, R152 += 1 };
  s7 -> s6 [76, 65535] { R3052 += 1, R2988 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R3052 += 1, R2988 += 1, R152 += 1 };
  s8 -> s8 [0, 65535] { R3052 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R3052 += 1, R2988 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R3052 += 1, R2988 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R3052 += 1, R2988 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R3052 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R3052 += 1, R2988 += 1, R152 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R3052 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R3052 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R3054 += 1, R2990 += 1, R155 += 1, R156 += 1 };
  s0 -> s0 [0, 65535] { R3053 += 1, R3054 += 1 };
  s0 -> s2 [0, 65535] { R3054 += 1, R2989 += 1, R2990 += 1 };
  s0 -> s3 [70, 70] { R3054 += 1, R2990 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R3054 += 1, R2990 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R3054 += 1, R2990 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R3054 += 1, R2990 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 65535] { R3054 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R3054 += 1, R2990 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R3054 += 1, R2990 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R3054 += 1, R2990 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R3054 += 1, R2990 += 1, R155 += 1, R156 += 1 };
  s2 -> s2 [0, 65535] { R3054 += 1, R2989 += 1, R2990 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R3054 += 1, R2990 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R3054 += 1, R2990 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R3054 += 1, R2990 += 1, R155 += 1, R156 += 1 };
  s3 -> s3 [0, 65535] { R3054 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3054 += 1 };
  s4 -> s4 [0, 65535] { R3054 += 1, R2990 += 1, R155 += 1, R156 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3054 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R3056 += 1, R2992 += 1, R161 += 1, R162 += 1 };
  s0 -> s0 [0, 65535] { R3055 += 1, R3056 += 1 };
  s0 -> s2 [0, 65535] { R3056 += 1, R2991 += 1, R2992 += 1 };
  s0 -> s3 [70, 70] { R3056 += 1, R2992 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R3056 += 1, R2992 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R3056 += 1, R2992 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R3056 += 1, R2992 += 1, R161 += 1, R162 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3056 += 1 };
  s1 -> s3 [70, 70] { R3056 += 1, R2992 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R3056 += 1, R2992 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R3056 += 1, R2992 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R3056 += 1, R2992 += 1, R161 += 1, R162 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3056 += 1, R2991 += 1, R2992 += 1 };
  s2 -> s3 [70, 70] { R3056 += 1, R2992 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R3056 += 1, R2992 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R3056 += 1, R2992 += 1, R161 += 1, R162 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3056 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3056 += 1 };
  s4 -> s4 [0, 65535] { R3056 += 1, R2992 += 1, R161 += 1, R162 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3056 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R3058 += 1, R2994 += 1, R167 += 1, R168 += 1 };
  s0 -> s2 [0, 65535] { R3058 += 1, R2993 += 1, R2994 += 1 };
  s0 -> s0 [0, 65535] { R3057 += 1, R3058 += 1 };
  s0 -> s3 [70, 70] { R3058 += 1, R2994 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R3058 += 1, R2994 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R3058 += 1, R2994 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R3058 += 1, R2994 += 1, R167 += 1, R168 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R3058 += 1 };
  s1 -> s3 [70, 70] { R3058 += 1, R2994 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R3058 += 1, R2994 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R3058 += 1, R2994 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R3058 += 1, R2994 += 1, R167 += 1, R168 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R3058 += 1, R2993 += 1, R2994 += 1 };
  s2 -> s3 [70, 70] { R3058 += 1, R2994 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R3058 += 1, R2994 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R3058 += 1, R2994 += 1, R167 += 1, R168 += 1 };
  s3 -> s3 [0, 65535] { R3058 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3058 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3058 += 1, R2994 += 1, R167 += 1, R168 += 1 };
  s5 -> s5 [0, 65535] { R3058 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R3060 += 1, R2996 += 1, R175 += 1, R176 += 1 };
  s0 -> s2 [0, 65535] { R3060 += 1, R2995 += 1, R2996 += 1 };
  s0 -> s0 [0, 65535] { R3059 += 1, R3060 += 1 };
  s0 -> s3 [70, 70] { R3060 += 1, R2996 += 1, R175 += 1, R176 += 1 };
  s0 -> s4 [70, 70] { R3060 += 1, R2996 += 1, R175 += 1, R176 += 1 };
  s0 -> s1 [71, 65535] { R3060 += 1, R2996 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [0, 69] { R3060 += 1, R2996 += 1, R175 += 1, R176 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3060 += 1 };
  s1 -> s3 [70, 70] { R3060 += 1, R2996 += 1, R175 += 1, R176 += 1 };
  s1 -> s4 [70, 70] { R3060 += 1, R2996 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [71, 65535] { R3060 += 1, R2996 += 1, R175 += 1, R176 += 1 };
  s2 -> s1 [0, 69] { R3060 += 1, R2996 += 1, R175 += 1, R176 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3060 += 1, R2995 += 1, R2996 += 1 };
  s2 -> s3 [70, 70] { R3060 += 1, R2996 += 1, R175 += 1, R176 += 1 };
  s2 -> s4 [70, 70] { R3060 += 1, R2996 += 1, R175 += 1, R176 += 1 };
  s2 -> s1 [71, 65535] { R3060 += 1, R2996 += 1, R175 += 1, R176 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3060 += 1, R2996 += 1, R175 += 1, R176 += 1 };
  s3 -> s6 [0, 65535] { R3060 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3060 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3060 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R3062 += 1, R2998 += 1, R185 += 1, R186 += 1 };
  s0 -> s0 [0, 65535] { R3061 += 1, R3062 += 1 };
  s0 -> s2 [0, 65535] { R3062 += 1, R2997 += 1, R2998 += 1 };
  s0 -> s3 [70, 70] { R3062 += 1, R2998 += 1, R185 += 1, R186 += 1 };
  s0 -> s4 [70, 70] { R3062 += 1, R2998 += 1, R185 += 1, R186 += 1 };
  s0 -> s1 [71, 65535] { R3062 += 1, R2998 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 69] { R3062 += 1, R2998 += 1, R185 += 1, R186 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3062 += 1 };
  s1 -> s3 [70, 70] { R3062 += 1, R2998 += 1, R185 += 1, R186 += 1 };
  s1 -> s4 [70, 70] { R3062 += 1, R2998 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [71, 65535] { R3062 += 1, R2998 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [0, 69] { R3062 += 1, R2998 += 1, R185 += 1, R186 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3062 += 1, R2997 += 1, R2998 += 1 };
  s2 -> s3 [70, 70] { R3062 += 1, R2998 += 1, R185 += 1, R186 += 1 };
  s2 -> s4 [70, 70] { R3062 += 1, R2998 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [71, 65535] { R3062 += 1, R2998 += 1, R185 += 1, R186 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3062 += 1, R2998 += 1, R185 += 1, R186 += 1 };
  s3 -> s6 [0, 65535] { R3062 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3062 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3062 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R3064 += 1, R3000 += 1, R2741 += 1, R2742 += 1 };
  s0 -> s2 [0, 69] { R3064 += 1, R3000 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s0 -> s3 [0, 69] { R3064 += 1, R3000 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s0 -> s4 [0, 65535] { R3064 += 1, R2999 += 1, R3000 += 1 };
  s0 -> s0 [0, 65535] { R3063 += 1, R3064 += 1 };
  s0 -> s5 [70, 70] { R3064 += 1, R3000 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s0 -> s6 [70, 70] { R3064 += 1, R3000 += 1, R2741 += 1, R2742 += 1 };
  s0 -> s7 [70, 70] { R3064 += 1, R3000 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s0 -> s8 [70, 70] { R3064 += 1, R3000 += 1, R2741 += 1, R2742 += 1 };
  s0 -> s9 [70, 70] { R3064 += 1, R3000 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s0 -> s10 [70, 70] { R3064 += 1, R3000 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s0 -> s1 [71, 65535] { R3064 += 1, R3000 += 1, R2741 += 1, R2742 += 1 };
  s0 -> s2 [71, 65535] { R3064 += 1, R3000 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s0 -> s3 [71, 65535] { R3064 += 1, R3000 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s1 -> s1 [0, 69] { R3064 += 1, R3000 += 1, R2741 += 1, R2742 += 1 };
  s1 -> s2 [0, 69] { R3064 += 1, R3000 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s1 -> s3 [0, 69] { R3064 += 1, R3000 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s1 -> s5 [70, 70] { R3064 += 1, R3000 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s1 -> s6 [70, 70] { R3064 += 1, R3000 += 1, R2741 += 1, R2742 += 1 };
  s1 -> s7 [70, 70] { R3064 += 1, R3000 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s1 -> s8 [70, 70] { R3064 += 1, R3000 += 1, R2741 += 1, R2742 += 1 };
  s1 -> s9 [70, 70] { R3064 += 1, R3000 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s1 -> s10 [70, 70] { R3064 += 1, R3000 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s1 -> s1 [71, 65535] { R3064 += 1, R3000 += 1, R2741 += 1, R2742 += 1 };
  s1 -> s2 [71, 65535] { R3064 += 1, R3000 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s1 -> s3 [71, 65535] { R3064 += 1, R3000 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s2 -> s2 [0, 69] { R3064 += 1, R3000 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s2 -> s11 [0, 65535];
  s2 -> s2 [0, 65535] { R3064 += 1 };
  s2 -> s5 [70, 70] { R3064 += 1, R3000 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s2 -> s7 [70, 70] { R3064 += 1, R3000 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s2 -> s2 [71, 65535] { R3064 += 1, R3000 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s3 -> s2 [0, 69] { R3064 += 1, R3000 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s3 -> s3 [0, 69] { R3064 += 1, R3000 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s3 -> s5 [70, 70] { R3064 += 1, R3000 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s3 -> s7 [70, 70] { R3064 += 1, R3000 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s3 -> s9 [70, 70] { R3064 += 1, R3000 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s3 -> s10 [70, 70] { R3064 += 1, R3000 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s3 -> s2 [71, 65535] { R3064 += 1, R3000 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s3 -> s3 [71, 65535] { R3064 += 1, R3000 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s4 -> s1 [0, 69] { R3064 += 1, R3000 += 1, R2741 += 1, R2742 += 1 };
  s4 -> s2 [0, 69] { R3064 += 1, R3000 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s4 -> s3 [0, 69] { R3064 += 1, R3000 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s4 -> s4 [0, 65535] { R3064 += 1, R2999 += 1, R3000 += 1 };
  s4 -> s5 [70, 70] { R3064 += 1, R3000 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s4 -> s6 [70, 70] { R3064 += 1, R3000 += 1, R2741 += 1, R2742 += 1 };
  s4 -> s7 [70, 70] { R3064 += 1, R3000 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s4 -> s8 [70, 70] { R3064 += 1, R3000 += 1, R2741 += 1, R2742 += 1 };
  s4 -> s9 [70, 70] { R3064 += 1, R3000 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s4 -> s10 [70, 70] { R3064 += 1, R3000 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s4 -> s1 [71, 65535] { R3064 += 1, R3000 += 1, R2741 += 1, R2742 += 1 };
  s4 -> s2 [71, 65535] { R3064 += 1, R3000 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s4 -> s3 [71, 65535] { R3064 += 1, R3000 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s5 -> s11 [0, 65535];
  s5 -> s5 [0, 65535] { R3064 += 1 };
  s6 -> s6 [0, 65535] { R3064 += 1, R3000 += 1, R2741 += 1, R2742 += 1 };
  s6 -> s7 [0, 65535] { R3064 += 1, R3000 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s6 -> s9 [0, 65535] { R3064 += 1, R3000 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s7 -> s11 [0, 65535];
  s7 -> s7 [0, 65535] { R3064 += 1, R3000 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s7 -> s12 [0, 65535] { R3064 += 1 };
  s9 -> s7 [0, 65535] { R3064 += 1, R3000 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s9 -> s9 [0, 65535] { R3064 += 1, R3000 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R3064 += 1 };
  accepting s12, s5, s2, s7, s11;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R3066 += 1, R3002 += 1, R2909 += 1, R2910 += 1 };
  s0 -> s2 [0, 69] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s0 -> s3 [0, 69] { R3066 += 1, R3002 += 1, R2910 += 1, R2911 += 1, R2912 += 1 };
  s0 -> s0 [0, 65535] { R3065 += 1, R3066 += 1 };
  s0 -> s4 [0, 65535] { R3066 += 1, R3001 += 1, R3002 += 1 };
  s0 -> s5 [70, 70] { R3066 += 1, R3002 += 1, R2909 += 1, R2910 += 1 };
  s0 -> s6 [70, 70] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s0 -> s7 [70, 70] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s0 -> s8 [70, 70] { R3066 += 1, R3002 += 1, R2910 += 1, R2911 += 1, R2912 += 1 };
  s0 -> s9 [70, 70] { R3066 += 1, R3002 += 1, R2909 += 1, R2910 += 1 };
  s0 -> s10 [70, 70] { R3066 += 1, R3002 += 1, R2910 += 1, R2911 += 1, R2912 += 1 };
  s0 -> s2 [71, 74] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s0 -> s1 [71, 65535] { R3066 += 1, R3002 += 1, R2909 += 1, R2910 += 1 };
  s0 -> s3 [71, 65535] { R3066 += 1, R3002 += 1, R2910 += 1, R2911 += 1, R2912 += 1 };
  s0 -> s11 [75, 75] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s0 -> s12 [86, 86] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s0 -> s2 [87, 65535] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s1 -> s1 [0, 69] { R3066 += 1, R3002 += 1, R2909 += 1, R2910 += 1 };
  s1 -> s2 [0, 69] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s1 -> s3 [0, 69] { R3066 += 1, R3002 += 1, R2910 += 1, R2911 += 1, R2912 += 1 };
  s1 -> s5 [70, 70] { R3066 += 1, R3002 += 1, R2909 += 1, R2910 += 1 };
  s1 -> s6 [70, 70] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s1 -> s7 [70, 70] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s1 -> s8 [70, 70] { R3066 += 1, R3002 += 1, R2910 += 1, R2911 += 1, R2912 += 1 };
  s1 -> s9 [70, 70] { R3066 += 1, R3002 += 1, R2909 += 1, R2910 += 1 };
  s1 -> s10 [70, 70] { R3066 += 1, R3002 += 1, R2910 += 1, R2911 += 1, R2912 += 1 };
  s1 -> s2 [71, 74] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s1 -> s1 [71, 65535] { R3066 += 1, R3002 += 1, R2909 += 1, R2910 += 1 };
  s1 -> s3 [71, 65535] { R3066 += 1, R3002 += 1, R2910 += 1, R2911 += 1, R2912 += 1 };
  s1 -> s11 [75, 75] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s1 -> s12 [86, 86] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s1 -> s2 [87, 65535] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s2 -> s2 [0, 69] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s2 -> s6 [70, 70] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s2 -> s7 [70, 70] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s2 -> s2 [71, 74] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s2 -> s11 [75, 75] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s2 -> s12 [86, 86] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s2 -> s2 [87, 65535] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s3 -> s2 [0, 69] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s3 -> s3 [0, 69] { R3066 += 1, R3002 += 1, R2910 += 1, R2911 += 1, R2912 += 1 };
  s3 -> s6 [70, 70] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s3 -> s7 [70, 70] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s3 -> s8 [70, 70] { R3066 += 1, R3002 += 1, R2910 += 1, R2911 += 1, R2912 += 1 };
  s3 -> s10 [70, 70] { R3066 += 1, R3002 += 1, R2910 += 1, R2911 += 1, R2912 += 1 };
  s3 -> s2 [71, 74] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s3 -> s3 [71, 65535] { R3066 += 1, R3002 += 1, R2910 += 1, R2911 += 1, R2912 += 1 };
  s3 -> s11 [75, 75] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s3 -> s12 [86, 86] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s3 -> s2 [87, 65535] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s4 -> s1 [0, 69] { R3066 += 1, R3002 += 1, R2909 += 1, R2910 += 1 };
  s4 -> s2 [0, 69] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s4 -> s3 [0, 69] { R3066 += 1, R3002 += 1, R2910 += 1, R2911 += 1, R2912 += 1 };
  s4 -> s4 [0, 65535] { R3066 += 1, R3001 += 1, R3002 += 1 };
  s4 -> s5 [70, 70] { R3066 += 1, R3002 += 1, R2909 += 1, R2910 += 1 };
  s4 -> s6 [70, 70] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s4 -> s7 [70, 70] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s4 -> s8 [70, 70] { R3066 += 1, R3002 += 1, R2910 += 1, R2911 += 1, R2912 += 1 };
  s4 -> s9 [70, 70] { R3066 += 1, R3002 += 1, R2909 += 1, R2910 += 1 };
  s4 -> s10 [70, 70] { R3066 += 1, R3002 += 1, R2910 += 1, R2911 += 1, R2912 += 1 };
  s4 -> s2 [71, 74] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s4 -> s1 [71, 65535] { R3066 += 1, R3002 += 1, R2909 += 1, R2910 += 1 };
  s4 -> s3 [71, 65535] { R3066 += 1, R3002 += 1, R2910 += 1, R2911 += 1, R2912 += 1 };
  s4 -> s11 [75, 75] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s4 -> s12 [86, 86] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s4 -> s2 [87, 65535] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s5 -> s7 [0, 74] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s5 -> s5 [0, 65535] { R3066 += 1, R3002 += 1, R2909 += 1, R2910 += 1 };
  s5 -> s8 [0, 65535] { R3066 += 1, R3002 += 1, R2910 += 1, R2911 += 1, R2912 += 1 };
  s5 -> s26 [75, 75] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s5 -> s14 [86, 86] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s5 -> s7 [87, 65535] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s7 -> s7 [0, 74] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s7 -> s26 [75, 75] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s7 -> s14 [86, 86] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s7 -> s7 [87, 65535] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s8 -> s7 [0, 74] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s8 -> s8 [0, 65535] { R3066 += 1, R3002 += 1, R2910 += 1, R2911 += 1, R2912 += 1 };
  s8 -> s26 [75, 75] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s8 -> s14 [86, 86] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s8 -> s7 [87, 65535] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s11 -> s11 [0, 69] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s11 -> s26 [70, 70] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s11 -> s27 [70, 70] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s11 -> s11 [71, 75] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s11 -> s19 [86, 86] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s11 -> s11 [87, 65535] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s12 -> s12 [0, 69] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s12 -> s13 [0, 69] { R3066 += 1, R3002 += 1 };
  s12 -> s14 [70, 70] { R3066 += 1, R3002 += 1, R2910 += 1 };
  s12 -> s15 [70, 70] { R3066 += 1, R3002 += 1 };
  s12 -> s16 [70, 70] { R3066 += 1, R3002 += 1, R2910 += 1 };
  s12 -> s17 [70, 70] { R3066 += 1, R3002 += 1 };
  s12 -> s12 [71, 74] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s12 -> s12 [71, 65535] { R3066 += 1, R3002 += 1, R2910 += 1 };
  s12 -> s13 [71, 65535] { R3066 += 1, R3002 += 1 };
  s12 -> s18 [75, 75] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s12 -> s19 [75, 75] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s12 -> s12 [86, 65535] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s13 -> s13 [0, 69] { R3066 += 1, R3002 += 1 };
  s13 -> s13 [0, 65535] { R3066 += 1 };
  s13 -> s24 [0, 65535];
  s13 -> s15 [70, 70] { R3066 += 1, R3002 += 1 };
  s13 -> s17 [70, 70] { R3066 += 1, R3002 += 1 };
  s13 -> s13 [71, 65535] { R3066 += 1, R3002 += 1 };
  s14 -> s14 [0, 74] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s14 -> s14 [0, 65535] { R3066 += 1, R3002 += 1, R2910 += 1 };
  s14 -> s15 [0, 65535] { R3066 += 1, R3002 += 1 };
  s14 -> s21 [75, 75] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s14 -> s23 [75, 75] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s14 -> s14 [86, 65535] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s15 -> s15 [0, 65535] { R3066 += 1, R3002 += 1 };
  s15 -> s25 [0, 65535] { R3066 += 1 };
  s15 -> s24 [0, 65535];
  s17 -> s24 [0, 65535];
  s17 -> s17 [0, 65535] { R3066 += 1 };
  s18 -> s18 [0, 69] { R3066 += 1, R3002 += 1, R2910 += 1 };
  s18 -> s13 [0, 69] { R3066 += 1, R3002 += 1 };
  s18 -> s15 [70, 70] { R3066 += 1, R3002 += 1 };
  s18 -> s22 [70, 70] { R3066 += 1, R3002 += 1, R2910 += 1 };
  s18 -> s23 [70, 70] { R3066 += 1, R3002 += 1, R2910 += 1 };
  s18 -> s17 [70, 70] { R3066 += 1, R3002 += 1 };
  s18 -> s18 [71, 65535] { R3066 += 1, R3002 += 1, R2910 += 1 };
  s18 -> s13 [71, 65535] { R3066 += 1, R3002 += 1 };
  s19 -> s19 [0, 69] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s19 -> s13 [0, 69] { R3066 += 1, R3002 += 1 };
  s19 -> s20 [70, 70] { R3066 += 1, R3002 += 1, R2910 += 1 };
  s19 -> s15 [70, 70] { R3066 += 1, R3002 += 1 };
  s19 -> s21 [70, 70] { R3066 += 1, R3002 += 1, R2910 += 1 };
  s19 -> s17 [70, 70] { R3066 += 1, R3002 += 1 };
  s19 -> s19 [71, 75] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s19 -> s19 [71, 65535] { R3066 += 1, R3002 += 1, R2910 += 1 };
  s19 -> s13 [71, 65535] { R3066 += 1, R3002 += 1 };
  s19 -> s19 [86, 65535] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s21 -> s21 [0, 75] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s21 -> s15 [0, 65535] { R3066 += 1, R3002 += 1 };
  s21 -> s21 [0, 65535] { R3066 += 1, R3002 += 1, R2910 += 1 };
  s21 -> s21 [86, 65535] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s23 -> s15 [0, 65535] { R3066 += 1, R3002 += 1 };
  s23 -> s23 [0, 65535] { R3066 += 1, R3002 += 1, R2910 += 1 };
  s24 -> s24 [0, 65535];
  s25 -> s25 [0, 65535] { R3066 += 1 };
  s25 -> s24 [0, 65535];
  s26 -> s26 [0, 75] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s26 -> s21 [86, 86] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  s26 -> s26 [87, 65535] { R3066 += 1, R3002 += 1, R2910 += 1, R2912 += 1 };
  accepting s17, s24, s13, s15, s25;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
constraint R3 = R3066 && R25 - R3066 = -1 && R26 = R3066 && R27 - R3066 = -1 && R28 = R3066 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R2914 + -1*R2910 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R2914 + -1*R2910 - R130 = 0 && R129 + R2913 + R2909 = 0 && R131 + R2915 + R2911 = 0 && R132 + R2916 + R2912 = 0 && R2977 = 0 && R2978 = 0 && R2987 = 0 && R2988 = 0 && R2999 = 0 && R3000 = 0 && R3001 = 0 && R3002 = 0 && R3003 = 0 && R3004 = R3066 && R3005 = 0 && R3006 = R3066 && R3007 = 0 && R3008 = R3066 && R3009 = 0 && R3010 = R3066 && R3011 = 0 && R3012 = R3066 && R3013 = 0 && R3014 = R3066 && R3015 = 0 && R3016 = R3066 && R3017 = 0 && R3018 = R3066 && R3019 = 0 && R3020 = R3066 && R3021 = 0 && R3022 = R3066 && R3023 = 0 && R3024 = R3066 && R3025 = 0 && R3026 = R3066 && R3027 = 0 && R3028 = R3066 && R3029 = 0 && R3030 = R3066 && R3031 = 0 && R3032 = R3066 && R3033 = 0 && R3034 = R3066 && R3035 = 0 && R3036 = R3066 && R3037 = 0 && R3038 = R3066 && R3039 = 0 && R3040 = R3066 && R3041 = 0 && R3042 = R3066 && R3043 = 0 && R3044 = R3066 && R3045 = 0 && R3046 = R3066 && R3047 = 0 && R3048 = R3066 && R3049 = 0 && R3050 = R3066 && R3051 = 0 && R3052 = R3066 && R3053 = 0 && R3054 = R3066 && R3055 = 0 && R3056 = R3066 && R3057 = 0 && R3058 = R3066 && R3059 = 0 && R3060 = R3066 && R3061 = 0 && R3062 = R3066 && R3063 = 0 && R3064 = R3066 && R3065 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R2914 + -1*R2910 - R130 < 1 && 0 < R3066 && (R2 != 0 || R22 = 0 || (R2917 = 0 && R2918 = 0)) && (R2 != 0 || R22 = 0 || (R2919 = 0 && R2920 = 0)) && (R2 != 0 || R22 = 0 || (R2921 = 0 && R2922 = 0)) && (R2 != 0 || R22 = 0 || (R2923 = 0 && R2924 = 0)) && (R2 != 0 || R22 = 0 || (R2925 = 0 && R2926 = 0)) && (R2 != 0 || R22 = 0 || (R2927 = 0 && R2928 = 0)) && (R2 != 0 || R22 = 0 || (R2929 = 0 && R2930 = 0)) && (R2 != 0 || R22 = 0 || (R2931 = 0 && R2932 = 0)) && (R2 != 0 || R22 = 0 || (R2933 = 0 && R2934 = 0)) && (R2 != 0 || R22 = 0 || (R2935 = 0 && R2936 = 0)) && (R2 != 0 || R22 = 0 || (R2937 = 0 && R2938 = 0)) && (R2 != 0 || R22 = 0 || (R2939 = 0 && R2940 = 0)) && (R2 != 0 || R22 = 0 || (R2941 = 0 && R2942 = 0)) && (R2 != 0 || R22 = 0 || (R2943 = 0 && R2944 = 0)) && (R2 != 0 || R22 = 0 || (R2945 = 0 && R2946 = 0)) && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R2914 + -1*R2910 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R191 + R187 = 0 && R114 + R192 + R188 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R2914 + -1*R2910 - R130 = 0 || R130 + R2914 + R2910 < 1) && (R81 + R158 + R155 = 0 || R130 + R2914 + R2910 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R2914 + -1*R2910 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R2914 + R2910 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R2914 + -1*R2910 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R2914 + R2910 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R2914 + -1*R2910 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R2914 + R2910 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 != 0 || R112 + R190 + R186 + -1*R2914 + -1*R2910 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R2914 + R2910 = 0)) && (R113 + R191 + R187 != 0 || R83 + R160 + R157 + -1*R192 + -1*R188 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R2746 + R2741 != 0 || R120 + R2747 + R2742 + -1*R2914 + -1*R2910 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R2914 + R2910 = 0)) && (R2917 != 0 || R2 = R2918 || R2 < 1) && (R2919 != 0 || R2 = R2920 || R2 < 1) && (R2921 != 0 || R2 = R2922 || R2 < 1) && (R2923 != 0 || R2 = R2924 || R2 < 1) && (R2925 != 0 || R2 = R2926 || R2 < 1) && (R2927 != 0 || R2 = R2928 || R2 < 1) && (R2929 != 0 || R2 = R2930 || R2 < 1) && (R2931 != 0 || R2 = R2932 || R2 < 1) && (R2933 != 0 || R2 = R2934 || R2 < 1) && (R2935 != 0 || R2 = R2936 || R2 < 1) && (R2937 != 0 || R2 = R2938 || R2 < 1) && (R2939 != 0 || R2 = R2940 || R2 < 1) && (R2941 != 0 || R2 = R2942 || R2 < 1) && (R2943 != 0 || R2 = R2944 || R2 < 1) && (R2945 != 0 || R2 = R2946 || R2 < 1) && (R23 = 0 || (R2975 = 0 && R2976 = 0)) && (R23 = 0 || (R2979 = 0 && R2980 = 0)) && (R23 = 0 || (R2981 = 0 && R2982 = 0)) && (R23 = 0 || (R2983 = 0 && R2984 = 0)) && (R23 = 0 || (R2985 = 0 && R2986 = 0)) && (R23 = 0 || (R2989 = 0 && R2990 = 0)) && (R23 = 0 || (R2991 = 0 && R2992 = 0)) && (R23 = 0 || (R2993 = 0 && R2994 = 0)) && (R23 = 0 || (R2995 = 0 && R2996 = 0)) && (R23 = 0 || (R2997 = 0 && R2998 = 0)) && (R24 = 0 || (R2947 = 0 && R2948 = 0)) && (R24 = 0 || (R2949 = 0 && R2950 = 0)) && (R24 = 0 || (R2951 = 0 && R2952 = 0)) && (R24 = 0 || (R2953 = 0 && R2954 = 0)) && (R24 = 0 || (R2955 = 0 && R2956 = 0)) && (R24 = 0 || (R2957 = 0 && R2958 = 0)) && (R24 = 0 || (R2959 = 0 && R2960 = 0)) && (R24 = 0 || (R2961 = 0 && R2962 = 0)) && (R24 = 0 || (R2963 = 0 && R2964 = 0)) && (R24 = 0 || (R2965 = 0 && R2966 = 0)) && (R24 = 0 || (R2967 = 0 && R2968 = 0)) && (R24 = 0 || (R2969 = 0 && R2970 = 0)) && (R24 = 0 || (R2971 = 0 && R2972 = 0)) && (R24 = 0 || (R2973 = 0 && R2974 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R2914 + R2910 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R2914 + R2910 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R2914 + R2910 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 = 0 || (R83 + R160 + R157 = 0 && R130 + R2914 + R2910 = 0)) && (R113 + R191 + R187 = 0 || R83 + R160 + R157 < 1) && (R119 + R2746 + R2741 = 0 || (R83 + R160 + R157 = 0 && R130 + R2914 + R2910 = 0)) && (R123 + R2750 + R2745 = 0 || (R121 + R2748 + R2743 = 0 && R122 + R2749 + R2744 = 0)) && (R2917 = 0 || R2 < 1) && (R2919 = 0 || R2 < 1) && (R2921 = 0 || R2 < 1) && (R2923 = 0 || R2 < 1) && (R2925 = 0 || R2 < 1) && (R2927 = 0 || R2 < 1) && (R2929 = 0 || R2 < 1) && (R2931 = 0 || R2 < 1) && (R2933 = 0 || R2 < 1) && (R2935 = 0 || R2 < 1) && (R2937 = 0 || R2 < 1) && (R2939 = 0 || R2 < 1) && (R2941 = 0 || R2 < 1) && (R2943 = 0 || R2 < 1) && (R2945 = 0 || R2 < 1);
// End of Parikh automata intersection problem
