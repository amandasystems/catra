// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R193, R194, R195, R196, R197, R198, R199, R2, R200, R201, R202, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R5, R63, R65, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R835, R836, R837, R838, R839, R840, R841, R842, R843, R844, R845, R846, R847, R848, R849, R850, R851, R852, R853, R854, R855, R856, R857, R858, R859, R860, R861, R862, R863, R864, R865, R866, R867, R868, R869, R87, R870, R871, R872, R873, R874, R875, R876, R877, R878, R879, R88, R880, R881, R882, R883, R884, R885, R886, R887, R888, R889, R89, R890, R891, R892, R893, R894, R895, R896, R897, R898, R899, R900, R901, R902, R903, R904, R905, R906, R907, R908, R909, R910, R911, R912, R913, R914, R915, R916, R917, R918, R919, R920, R921, R922, R923, R924, R925, R926, R927, R928, R929, R93, R930, R931, R932, R933, R934, R935, R936, R937, R938, R939, R94, R940, R941, R942, R943, R944, R945, R946, R947, R948, R949, R95, R950, R951, R952, R953, R954, R955, R956, R957, R958, R959, R96, R960, R961, R962, R963, R964, R965, R966, R967, R968, R969, R970, R971, R972, R973, R974, R975, R976, R977, R978, R979, R980, R981, R982, R983, R984, R985, R986, R987, R988, R989, R990, R991, R992;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R26 += 1 };
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R873 += 1, R874 += 1 };
  s0 -> s1 [0, 65535] { R874 += 1, R24 += 1 };
  s1 -> s1 [0, 65535] { R874 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R876 += 1 };
  s0 -> s0 [0, 65535] { R875 += 1, R876 += 1 };
  s0 -> s2 [70, 70] { R876 += 1 };
  s0 -> s3 [70, 70] { R876 += 1 };
  s0 -> s1 [76, 65535] { R876 += 1 };
  s1 -> s1 [0, 69] { R876 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R876 += 1 };
  s1 -> s3 [70, 70] { R876 += 1 };
  s1 -> s1 [76, 65535] { R876 += 1 };
  s2 -> s2 [0, 70] { R876 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R876 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R878 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R877 += 1, R878 += 1 };
  s0 -> s2 [70, 70] { R878 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R878 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R878 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R878 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R878 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R878 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R878 += 1, R63 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R878 += 1, R63 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R880 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R879 += 1, R880 += 1 };
  s0 -> s2 [70, 70] { R880 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R880 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R880 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R880 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R880 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R880 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R880 += 1, R65 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R880 += 1, R65 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R882 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R881 += 1, R882 += 1 };
  s0 -> s2 [70, 70] { R882 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R882 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R882 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R882 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R882 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R882 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R882 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535] { R882 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R884 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R883 += 1, R884 += 1 };
  s0 -> s2 [70, 70] { R884 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R884 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R884 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R884 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R884 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R884 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R884 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R884 += 1, R73 += 1, R74 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R886 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R885 += 1, R886 += 1 };
  s0 -> s2 [70, 70] { R886 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R886 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R886 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R886 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R886 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R886 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R886 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R886 += 1, R77 += 1, R78 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R888 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R887 += 1, R888 += 1 };
  s0 -> s2 [70, 70] { R888 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R888 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R888 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R888 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R888 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R888 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R888 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R888 += 1, R81 += 1, R82 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R890 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R889 += 1, R890 += 1 };
  s0 -> s2 [70, 70] { R890 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R890 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R890 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R890 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R890 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R890 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R890 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R890 += 1, R87 += 1, R88 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R892 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R891 += 1, R892 += 1 };
  s0 -> s2 [70, 70] { R892 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R892 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R892 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R892 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R892 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R892 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R892 += 1, R93 += 1, R94 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R892 += 1, R93 += 1, R94 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R894 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R893 += 1, R894 += 1 };
  s0 -> s2 [70, 70] { R894 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R894 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R894 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R894 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R894 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R894 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R894 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R894 += 1, R101 += 1, R102 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R896 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R895 += 1, R896 += 1 };
  s0 -> s2 [70, 70] { R896 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R896 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R896 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R896 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R896 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R896 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R896 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R896 += 1, R111 += 1, R112 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R898 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R897 += 1, R898 += 1 };
  s0 -> s2 [70, 70] { R898 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R898 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R898 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R898 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R898 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R898 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R898 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R898 += 1, R119 += 1, R120 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R900 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R899 += 1, R900 += 1 };
  s0 -> s2 [70, 70] { R900 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R900 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R900 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R900 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R900 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R900 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R900 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R900 += 1, R129 += 1, R130 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R930 += 1 };
  s0 -> s0 [0, 65535] { R929 += 1, R930 += 1 };
  s0 -> s2 [70, 70] { R930 += 1 };
  s0 -> s1 [71, 65535] { R930 += 1 };
  s1 -> s1 [0, 69] { R930 += 1 };
  s1 -> s2 [70, 70] { R930 += 1 };
  s1 -> s1 [71, 65535] { R930 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R930 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R931 += 1, R932 += 1 };
  s0 -> s1 [0, 65535] { R932 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R932 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R934 += 1 };
  s0 -> s0 [0, 65535] { R933 += 1, R934 += 1 };
  s0 -> s2 [0, 65535] { R934 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R934 += 1 };
  s0 -> s1 [71, 65535] { R934 += 1 };
  s1 -> s1 [0, 69] { R934 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R934 += 1 };
  s1 -> s1 [71, 65535] { R934 += 1 };
  s2 -> s1 [0, 69] { R934 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R934 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R934 += 1 };
  s2 -> s1 [71, 65535] { R934 += 1 };
  s3 -> s3 [0, 65535] { R934 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R936 += 1, R844 += 1 };
  s0 -> s2 [0, 65535] { R936 += 1, R843 += 1, R844 += 1 };
  s0 -> s0 [0, 65535] { R935 += 1, R936 += 1 };
  s0 -> s1 [71, 65535] { R936 += 1, R844 += 1 };
  s1 -> s1 [0, 69] { R936 += 1, R844 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R936 += 1 };
  s1 -> s1 [71, 65535] { R936 += 1, R844 += 1 };
  s2 -> s1 [0, 69] { R936 += 1, R844 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R936 += 1, R843 += 1, R844 += 1 };
  s2 -> s1 [71, 65535] { R936 += 1, R844 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R937 += 1, R938 += 1 };
  s0 -> s1 [0, 65535] { R938 += 1, R846 += 1, R22 += 1 };
  s0 -> s2 [0, 65535] { R938 += 1, R845 += 1, R846 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R938 += 1 };
  s1 -> s1 [0, 65535] { R938 += 1, R846 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R938 += 1, R846 += 1, R22 += 1 };
  s2 -> s2 [0, 65535] { R938 += 1, R845 += 1, R846 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R938 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R940 += 1, R848 += 1 };
  s0 -> s2 [0, 65535] { R940 += 1, R847 += 1, R848 += 1 };
  s0 -> s0 [0, 65535] { R939 += 1, R940 += 1 };
  s0 -> s1 [75, 65535] { R940 += 1, R848 += 1 };
  s1 -> s1 [0, 70] { R940 += 1, R848 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R940 += 1 };
  s1 -> s1 [75, 65535] { R940 += 1, R848 += 1 };
  s2 -> s1 [0, 70] { R940 += 1, R848 += 1 };
  s2 -> s2 [0, 65535] { R940 += 1, R847 += 1, R848 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R940 += 1, R848 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s0 [0, 65535] { R941 += 1, R942 += 1 };
  s0 -> s1 [0, 65535] { R942 += 1, R850 += 1, R138 += 1 };
  s0 -> s2 [0, 65535] { R942 += 1, R849 += 1, R850 += 1 };
  s1 -> s4 [0, 65535] { R942 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R942 += 1, R850 += 1, R138 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R942 += 1, R850 += 1, R138 += 1 };
  s2 -> s2 [0, 65535] { R942 += 1, R849 += 1, R850 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R942 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R944 += 1, R852 += 1 };
  s0 -> s2 [0, 65535] { R944 += 1, R852 += 1, R140 += 1 };
  s0 -> s0 [0, 65535] { R943 += 1, R944 += 1 };
  s0 -> s3 [0, 65535] { R944 += 1, R851 += 1, R852 += 1 };
  s0 -> s1 [76, 65535] { R944 += 1, R852 += 1 };
  s1 -> s1 [0, 74] { R944 += 1, R852 += 1 };
  s1 -> s1 [0, 65535] { R944 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [76, 65535] { R944 += 1, R852 += 1 };
  s2 -> s1 [0, 74] { R944 += 1, R852 += 1 };
  s2 -> s5 [0, 65535] { R944 += 1 };
  s2 -> s2 [0, 65535] { R944 += 1, R852 += 1, R140 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [76, 65535] { R944 += 1, R852 += 1 };
  s3 -> s1 [0, 74] { R944 += 1, R852 += 1 };
  s3 -> s2 [0, 65535] { R944 += 1, R852 += 1, R140 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R944 += 1, R851 += 1, R852 += 1 };
  s3 -> s1 [76, 65535] { R944 += 1, R852 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R944 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R946 += 1, R854 += 1, R145 += 1, R146 += 1 };
  s0 -> s2 [0, 65535] { R946 += 1, R854 += 1, R144 += 1, R145 += 1 };
  s0 -> s3 [0, 65535] { R946 += 1, R853 += 1, R854 += 1 };
  s0 -> s0 [0, 65535] { R945 += 1, R946 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R946 += 1, R854 += 1, R145 += 1, R146 += 1 };
  s1 -> s6 [0, 65535] { R946 += 1, R854 += 1 };
  s1 -> s5 [0, 65535] { R946 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R946 += 1, R854 += 1, R145 += 1, R146 += 1 };
  s2 -> s2 [0, 65535] { R946 += 1, R854 += 1, R144 += 1, R145 += 1 };
  s2 -> s5 [0, 65535] { R946 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R946 += 1, R854 += 1, R145 += 1, R146 += 1 };
  s3 -> s2 [0, 65535] { R946 += 1, R854 += 1, R144 += 1, R145 += 1 };
  s3 -> s3 [0, 65535] { R946 += 1, R853 += 1, R854 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R946 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R946 += 1, R854 += 1 };
  s6 -> s5 [0, 65535] { R946 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R948 += 1, R856 += 1, R150 += 1 };
  s0 -> s2 [0, 65535] { R948 += 1, R855 += 1, R856 += 1 };
  s0 -> s0 [0, 65535] { R947 += 1, R948 += 1 };
  s0 -> s3 [0, 65535] { R948 += 1, R856 += 1, R149 += 1, R150 += 1 };
  s0 -> s4 [75, 75] { R948 += 1, R856 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R948 += 1, R856 += 1, R150 += 1 };
  s0 -> s1 [87, 65535] { R948 += 1, R856 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R948 += 1, R856 += 1, R150 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R948 += 1 };
  s1 -> s1 [0, 65535] { R948 += 1, R856 += 1 };
  s1 -> s4 [75, 75] { R948 += 1, R856 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R948 += 1, R856 += 1, R150 += 1 };
  s1 -> s1 [87, 65535] { R948 += 1, R856 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R948 += 1, R856 += 1, R150 += 1 };
  s2 -> s2 [0, 65535] { R948 += 1, R855 += 1, R856 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R948 += 1, R856 += 1, R149 += 1, R150 += 1 };
  s2 -> s4 [75, 75] { R948 += 1, R856 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R948 += 1, R856 += 1, R150 += 1 };
  s2 -> s1 [87, 65535] { R948 += 1, R856 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R948 += 1, R856 += 1, R150 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R948 += 1, R856 += 1, R149 += 1, R150 += 1 };
  s3 -> s7 [0, 65535] { R948 += 1 };
  s3 -> s4 [75, 75] { R948 += 1, R856 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R948 += 1, R856 += 1, R150 += 1 };
  s3 -> s1 [87, 65535] { R948 += 1, R856 += 1, R150 += 1 };
  s4 -> s4 [0, 75] { R948 += 1, R856 += 1, R150 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R948 += 1, R856 += 1 };
  s4 -> s7 [0, 65535] { R948 += 1 };
  s4 -> s4 [87, 65535] { R948 += 1, R856 += 1, R150 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R948 += 1 };
  s5 -> s5 [0, 65535] { R948 += 1, R856 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R948 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s0 [0, 65535] { R949 += 1, R950 += 1 };
  s0 -> s1 [0, 65535] { R950 += 1, R858 += 1 };
  s0 -> s2 [0, 65535] { R950 += 1, R858 += 1, R154 += 1 };
  s0 -> s3 [0, 65535] { R950 += 1, R857 += 1, R858 += 1 };
  s1 -> s1 [0, 65535] { R950 += 1, R858 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R950 += 1 };
  s2 -> s1 [0, 65535] { R950 += 1, R858 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R950 += 1 };
  s2 -> s2 [0, 65535] { R950 += 1, R858 += 1, R154 += 1 };
  s3 -> s1 [0, 65535] { R950 += 1, R858 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R950 += 1, R858 += 1, R154 += 1 };
  s3 -> s3 [0, 65535] { R950 += 1, R857 += 1, R858 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R950 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R952 += 1, R859 += 1, R860 += 1 };
  s0 -> s2 [0, 65535] { R952 += 1, R860 += 1, R158 += 1, R159 += 1 };
  s0 -> s0 [0, 65535] { R951 += 1, R952 += 1 };
  s0 -> s3 [0, 65535] { R952 += 1, R860 += 1, R159 += 1, R160 += 1 };
  s1 -> s1 [0, 65535] { R952 += 1, R859 += 1, R860 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s2 [0, 65535] { R952 += 1, R860 += 1, R158 += 1, R159 += 1 };
  s1 -> s3 [0, 65535] { R952 += 1, R860 += 1, R159 += 1, R160 += 1 };
  s2 -> s5 [0, 65535] { R952 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R952 += 1, R860 += 1, R158 += 1, R159 += 1 };
  s2 -> s3 [0, 65535] { R952 += 1, R860 += 1, R159 += 1, R160 += 1 };
  s3 -> s4 [0, 65535] { R952 += 1, R860 += 1 };
  s3 -> s5 [0, 65535] { R952 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R952 += 1, R860 += 1, R159 += 1, R160 += 1 };
  s4 -> s4 [0, 65535] { R952 += 1, R860 += 1 };
  s4 -> s5 [0, 65535] { R952 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R952 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R954 += 1, R862 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R954 += 1, R862 += 1, R164 += 1, R165 += 1 };
  s0 -> s3 [0, 65535] { R954 += 1, R861 += 1, R862 += 1 };
  s0 -> s4 [0, 65535] { R954 += 1, R862 += 1, R165 += 1, R166 += 1 };
  s0 -> s0 [0, 65535] { R953 += 1, R954 += 1 };
  s0 -> s1 [76, 65535] { R954 += 1, R862 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R954 += 1, R862 += 1, R165 += 1 };
  s1 -> s1 [0, 65535] { R954 += 1, R862 += 1 };
  s1 -> s6 [0, 65535] { R954 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [76, 65535] { R954 += 1, R862 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R954 += 1, R862 += 1, R165 += 1 };
  s2 -> s2 [0, 65535] { R954 += 1, R862 += 1, R164 += 1, R165 += 1 };
  s2 -> s6 [0, 65535] { R954 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [0, 65535] { R954 += 1, R862 += 1, R165 += 1, R166 += 1 };
  s2 -> s1 [76, 65535] { R954 += 1, R862 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R954 += 1, R862 += 1, R165 += 1 };
  s3 -> s2 [0, 65535] { R954 += 1, R862 += 1, R164 += 1, R165 += 1 };
  s3 -> s3 [0, 65535] { R954 += 1, R861 += 1, R862 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [0, 65535] { R954 += 1, R862 += 1, R165 += 1, R166 += 1 };
  s3 -> s1 [76, 65535] { R954 += 1, R862 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R954 += 1, R862 += 1, R165 += 1 };
  s4 -> s5 [0, 65535] { R954 += 1, R862 += 1 };
  s4 -> s6 [0, 65535] { R954 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R954 += 1, R862 += 1, R165 += 1, R166 += 1 };
  s4 -> s1 [76, 65535] { R954 += 1, R862 += 1, R165 += 1 };
  s5 -> s5 [0, 65535] { R954 += 1, R862 += 1 };
  s5 -> s6 [0, 65535] { R954 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R954 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R956 += 1, R864 += 1, R172 += 1, R174 += 1 };
  s0 -> s0 [0, 65535] { R955 += 1, R956 += 1 };
  s0 -> s2 [0, 65535] { R956 += 1, R863 += 1, R864 += 1 };
  s0 -> s3 [0, 65535] { R956 += 1, R864 += 1, R171 += 1, R172 += 1 };
  s0 -> s4 [0, 65535] { R956 += 1, R864 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s1 [76, 65535] { R956 += 1, R864 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R956 += 1, R864 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 65535] { R956 += 1, R864 += 1, R172 += 1 };
  s1 -> s5 [0, 65535] { R956 += 1, R864 += 1 };
  s1 -> s6 [0, 65535] { R956 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [76, 65535] { R956 += 1, R864 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R956 += 1, R864 += 1, R172 += 1, R174 += 1 };
  s2 -> s2 [0, 65535] { R956 += 1, R863 += 1, R864 += 1 };
  s2 -> s3 [0, 65535] { R956 += 1, R864 += 1, R171 += 1, R172 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [0, 65535] { R956 += 1, R864 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s1 [76, 65535] { R956 += 1, R864 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R956 += 1, R864 += 1, R172 += 1, R174 += 1 };
  s3 -> s3 [0, 65535] { R956 += 1, R864 += 1, R171 += 1, R172 += 1 };
  s3 -> s6 [0, 65535] { R956 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [0, 65535] { R956 += 1, R864 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s1 [76, 65535] { R956 += 1, R864 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R956 += 1, R864 += 1, R172 += 1, R174 += 1 };
  s4 -> s5 [0, 65535] { R956 += 1, R864 += 1 };
  s4 -> s6 [0, 65535] { R956 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R956 += 1, R864 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s1 [76, 65535] { R956 += 1, R864 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535] { R956 += 1, R864 += 1 };
  s5 -> s6 [0, 65535] { R956 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R956 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R958 += 1, R866 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s0 -> s0 [0, 65535] { R957 += 1, R958 += 1 };
  s0 -> s2 [0, 65535] { R958 += 1, R866 += 1, R180 += 1, R181 += 1 };
  s0 -> s3 [0, 65535] { R958 += 1, R865 += 1, R866 += 1 };
  s0 -> s4 [0, 65535] { R958 += 1, R866 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s1 -> s1 [0, 65535] { R958 += 1, R866 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R958 += 1 };
  s1 -> s7 [0, 65535] { R958 += 1, R866 += 1 };
  s1 -> s8 [0, 65535] { R958 += 1, R866 += 1, R181 += 1 };
  s2 -> s1 [0, 65535] { R958 += 1, R866 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R958 += 1, R866 += 1, R180 += 1, R181 += 1 };
  s2 -> s6 [0, 65535] { R958 += 1 };
  s2 -> s4 [0, 65535] { R958 += 1, R866 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s3 -> s1 [0, 65535] { R958 += 1, R866 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R958 += 1, R866 += 1, R180 += 1, R181 += 1 };
  s3 -> s3 [0, 65535] { R958 += 1, R865 += 1, R866 += 1 };
  s3 -> s4 [0, 65535] { R958 += 1, R866 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s4 -> s1 [0, 65535] { R958 += 1, R866 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R958 += 1 };
  s4 -> s7 [0, 65535] { R958 += 1, R866 += 1 };
  s4 -> s4 [0, 65535] { R958 += 1, R866 += 1, R181 += 1, R182 += 1, R183 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R958 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R958 += 1 };
  s7 -> s7 [0, 65535] { R958 += 1, R866 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R958 += 1 };
  s8 -> s7 [0, 65535] { R958 += 1, R866 += 1 };
  s8 -> s8 [0, 65535] { R958 += 1, R866 += 1, R181 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R960 += 1, R868 += 1, R190 += 1, R192 += 1 };
  s0 -> s2 [0, 65535] { R960 += 1, R868 += 1, R189 += 1, R190 += 1 };
  s0 -> s3 [0, 65535] { R960 += 1, R867 += 1, R868 += 1 };
  s0 -> s0 [0, 65535] { R959 += 1, R960 += 1 };
  s0 -> s4 [0, 65535] { R960 += 1, R868 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s0 -> s1 [86, 65535] { R960 += 1, R868 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 75] { R960 += 1, R868 += 1, R190 += 1, R192 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R960 += 1, R868 += 1, R190 += 1 };
  s1 -> s6 [0, 65535] { R960 += 1 };
  s1 -> s7 [0, 65535] { R960 += 1, R868 += 1 };
  s1 -> s1 [86, 65535] { R960 += 1, R868 += 1, R190 += 1, R192 += 1 };
  s2 -> s1 [0, 75] { R960 += 1, R868 += 1, R190 += 1, R192 += 1 };
  s2 -> s2 [0, 65535] { R960 += 1, R868 += 1, R189 += 1, R190 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R960 += 1 };
  s2 -> s4 [0, 65535] { R960 += 1, R868 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s2 -> s1 [86, 65535] { R960 += 1, R868 += 1, R190 += 1, R192 += 1 };
  s3 -> s1 [0, 75] { R960 += 1, R868 += 1, R190 += 1, R192 += 1 };
  s3 -> s2 [0, 65535] { R960 += 1, R868 += 1, R189 += 1, R190 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R960 += 1, R867 += 1, R868 += 1 };
  s3 -> s4 [0, 65535] { R960 += 1, R868 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s3 -> s1 [86, 65535] { R960 += 1, R868 += 1, R190 += 1, R192 += 1 };
  s4 -> s1 [0, 75] { R960 += 1, R868 += 1, R190 += 1, R192 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R960 += 1 };
  s4 -> s4 [0, 65535] { R960 += 1, R868 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s4 -> s7 [0, 65535] { R960 += 1, R868 += 1 };
  s4 -> s1 [86, 65535] { R960 += 1, R868 += 1, R190 += 1, R192 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R960 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R960 += 1 };
  s7 -> s7 [0, 65535] { R960 += 1, R868 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R962 += 1, R869 += 1, R870 += 1 };
  s0 -> s0 [0, 65535] { R961 += 1, R962 += 1 };
  s0 -> s2 [0, 65535] { R962 += 1, R870 += 1 };
  s1 -> s1 [0, 65535] { R962 += 1, R869 += 1, R870 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R962 += 1, R870 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R962 += 1 };
  s2 -> s2 [0, 65535] { R962 += 1, R870 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R962 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 75] { R964 += 1, R872 += 1, R840 += 1, R842 += 1 };
  s0 -> s0 [0, 65535] { R963 += 1, R964 += 1 };
  s0 -> s2 [0, 65535] { R964 += 1, R871 += 1, R872 += 1 };
  s0 -> s3 [86, 86] { R964 += 1, R872 += 1, R840 += 1, R842 += 1 };
  s0 -> s1 [87, 65535] { R964 += 1, R872 += 1, R840 += 1, R842 += 1 };
  s1 -> s1 [0, 75] { R964 += 1, R872 += 1, R840 += 1, R842 += 1 };
  s1 -> s3 [86, 86] { R964 += 1, R872 += 1, R840 += 1, R842 += 1 };
  s1 -> s1 [87, 65535] { R964 += 1, R872 += 1, R840 += 1, R842 += 1 };
  s2 -> s1 [0, 75] { R964 += 1, R872 += 1, R840 += 1, R842 += 1 };
  s2 -> s2 [0, 65535] { R964 += 1, R871 += 1, R872 += 1 };
  s2 -> s3 [86, 86] { R964 += 1, R872 += 1, R840 += 1, R842 += 1 };
  s2 -> s1 [87, 65535] { R964 += 1, R872 += 1, R840 += 1, R842 += 1 };
  s3 -> s3 [0, 75] { R964 += 1, R872 += 1, R840 += 1, R842 += 1 };
  s3 -> s3 [0, 65535] { R964 += 1, R872 += 1, R840 += 1 };
  s3 -> s4 [0, 65535] { R964 += 1 };
  s3 -> s5 [0, 65535] { R964 += 1, R872 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [86, 65535] { R964 += 1, R872 += 1, R840 += 1, R842 += 1 };
  s4 -> s4 [0, 65535] { R964 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s4 [0, 65535] { R964 += 1 };
  s5 -> s5 [0, 65535] { R964 += 1, R872 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s6;
};
automaton value2_40 {
  init s0;
  s0 -> s0 [0, 65535] { R965 += 1, R966 += 1 };
  s0 -> s1 [0, 65535] { R966 += 1, R901 += 1, R902 += 1 };
  s0 -> s2 [0, 65535] { R966 += 1, R902 += 1, R23 += 1 };
  s1 -> s1 [0, 65535] { R966 += 1, R901 += 1, R902 += 1 };
  s1 -> s2 [0, 65535] { R966 += 1, R902 += 1, R23 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R966 += 1 };
  s2 -> s2 [0, 65535] { R966 += 1, R902 += 1, R23 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R966 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R968 += 1, R904 += 1 };
  s0 -> s0 [0, 65535] { R967 += 1, R968 += 1 };
  s0 -> s2 [0, 65535] { R968 += 1, R903 += 1, R904 += 1 };
  s0 -> s3 [70, 70] { R968 += 1, R904 += 1 };
  s0 -> s4 [70, 70] { R968 += 1, R904 += 1 };
  s0 -> s5 [75, 75] { R968 += 1, R904 += 1 };
  s0 -> s1 [76, 65535] { R968 += 1, R904 += 1 };
  s1 -> s1 [0, 69] { R968 += 1, R904 += 1 };
  s1 -> s3 [70, 70] { R968 += 1, R904 += 1 };
  s1 -> s4 [70, 70] { R968 += 1, R904 += 1 };
  s1 -> s5 [75, 75] { R968 += 1, R904 += 1 };
  s1 -> s1 [76, 65535] { R968 += 1, R904 += 1 };
  s2 -> s1 [0, 69] { R968 += 1, R904 += 1 };
  s2 -> s2 [0, 65535] { R968 += 1, R903 += 1, R904 += 1 };
  s2 -> s3 [70, 70] { R968 += 1, R904 += 1 };
  s2 -> s4 [70, 70] { R968 += 1, R904 += 1 };
  s2 -> s5 [75, 75] { R968 += 1, R904 += 1 };
  s2 -> s1 [76, 65535] { R968 += 1, R904 += 1 };
  s4 -> s4 [0, 70] { R968 += 1, R904 += 1 };
  s4 -> s7 [75, 75] { R968 += 1, R904 += 1 };
  s4 -> s4 [76, 65535] { R968 += 1, R904 += 1 };
  s5 -> s5 [0, 69] { R968 += 1, R904 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R968 += 1 };
  s5 -> s7 [70, 70] { R968 += 1, R904 += 1 };
  s5 -> s8 [70, 70] { R968 += 1, R904 += 1 };
  s5 -> s5 [75, 65535] { R968 += 1, R904 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R968 += 1, R904 += 1 };
  s7 -> s7 [0, 65535] { R968 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R968 += 1, R904 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R968 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R970 += 1, R906 += 1, R137 += 1 };
  s0 -> s0 [0, 65535] { R969 += 1, R970 += 1 };
  s0 -> s2 [0, 65535] { R970 += 1, R905 += 1, R906 += 1 };
  s0 -> s3 [70, 70] { R970 += 1, R906 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R970 += 1, R906 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R970 += 1, R906 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R970 += 1, R906 += 1, R137 += 1 };
  s1 -> s1 [0, 65535] { R970 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R970 += 1, R906 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R970 += 1, R906 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R970 += 1, R906 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R970 += 1, R906 += 1, R137 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R970 += 1, R905 += 1, R906 += 1 };
  s2 -> s3 [70, 70] { R970 += 1, R906 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R970 += 1, R906 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R970 += 1, R906 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R970 += 1, R906 += 1, R137 += 1 };
  s3 -> s6 [0, 65535] { R970 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R970 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R970 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R972 += 1, R908 += 1, R139 += 1 };
  s0 -> s0 [0, 65535] { R971 += 1, R972 += 1 };
  s0 -> s2 [0, 65535] { R972 += 1, R907 += 1, R908 += 1 };
  s0 -> s3 [70, 70] { R972 += 1, R908 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R972 += 1, R908 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R972 += 1, R908 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R972 += 1, R908 += 1, R139 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R972 += 1 };
  s1 -> s3 [70, 70] { R972 += 1, R908 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R972 += 1, R908 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R972 += 1, R908 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R972 += 1, R908 += 1, R139 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R972 += 1, R907 += 1, R908 += 1 };
  s2 -> s3 [70, 70] { R972 += 1, R908 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R972 += 1, R908 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R972 += 1, R908 += 1, R139 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R972 += 1 };
  s3 -> s3 [0, 65535] { R972 += 1, R908 += 1, R139 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R972 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R972 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R974 += 1, R910 += 1, R141 += 1, R142 += 1 };
  s0 -> s2 [0, 65535] { R974 += 1, R909 += 1, R910 += 1 };
  s0 -> s0 [0, 65535] { R973 += 1, R974 += 1 };
  s0 -> s3 [70, 70] { R974 += 1, R910 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R974 += 1, R910 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R974 += 1, R910 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R974 += 1, R910 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 65535] { R974 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R974 += 1, R910 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R974 += 1, R910 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R974 += 1, R910 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R974 += 1, R910 += 1, R141 += 1, R142 += 1 };
  s2 -> s2 [0, 65535] { R974 += 1, R909 += 1, R910 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R974 += 1, R910 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R974 += 1, R910 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R974 += 1, R910 += 1, R141 += 1, R142 += 1 };
  s3 -> s3 [0, 65535] { R974 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R974 += 1 };
  s4 -> s4 [0, 65535] { R974 += 1, R910 += 1, R141 += 1, R142 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R974 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R976 += 1, R912 += 1, R147 += 1, R148 += 1 };
  s0 -> s0 [0, 65535] { R975 += 1, R976 += 1 };
  s0 -> s2 [0, 65535] { R976 += 1, R911 += 1, R912 += 1 };
  s0 -> s3 [70, 70] { R976 += 1, R912 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R976 += 1, R912 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R976 += 1, R912 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R976 += 1, R912 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 65535] { R976 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R976 += 1, R912 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R976 += 1, R912 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R976 += 1, R912 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R976 += 1, R912 += 1, R147 += 1, R148 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R976 += 1, R911 += 1, R912 += 1 };
  s2 -> s3 [70, 70] { R976 += 1, R912 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R976 += 1, R912 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R976 += 1, R912 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R976 += 1, R912 += 1, R147 += 1, R148 += 1 };
  s3 -> s6 [0, 65535] { R976 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R976 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R976 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R978 += 1, R914 += 1, R151 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R978 += 1, R914 += 1, R152 += 1 };
  s0 -> s0 [0, 65535] { R977 += 1, R978 += 1 };
  s0 -> s3 [0, 65535] { R978 += 1, R913 += 1, R914 += 1 };
  s0 -> s4 [70, 70] { R978 += 1, R914 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R978 += 1, R914 += 1, R151 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R978 += 1, R914 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R978 += 1, R914 += 1, R151 += 1, R152 += 1 };
  s0 -> s2 [71, 74] { R978 += 1, R914 += 1, R152 += 1 };
  s0 -> s1 [71, 65535] { R978 += 1, R914 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R978 += 1, R914 += 1, R152 += 1 };
  s0 -> s2 [76, 65535] { R978 += 1, R914 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R978 += 1, R914 += 1, R151 += 1, R152 += 1 };
  s1 -> s2 [0, 69] { R978 += 1, R914 += 1, R152 += 1 };
  s1 -> s4 [70, 70] { R978 += 1, R914 += 1, R152 += 1 };
  s1 -> s5 [70, 70] { R978 += 1, R914 += 1, R151 += 1, R152 += 1 };
  s1 -> s6 [70, 70] { R978 += 1, R914 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R978 += 1, R914 += 1, R151 += 1, R152 += 1 };
  s1 -> s2 [71, 74] { R978 += 1, R914 += 1, R152 += 1 };
  s1 -> s1 [71, 65535] { R978 += 1, R914 += 1, R151 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R978 += 1, R914 += 1, R152 += 1 };
  s1 -> s2 [76, 65535] { R978 += 1, R914 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R978 += 1, R914 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R978 += 1, R914 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R978 += 1, R914 += 1, R152 += 1 };
  s2 -> s2 [71, 74] { R978 += 1, R914 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R978 += 1, R914 += 1, R152 += 1 };
  s2 -> s2 [76, 65535] { R978 += 1, R914 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R978 += 1, R914 += 1, R151 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R978 += 1, R914 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R978 += 1, R913 += 1, R914 += 1 };
  s3 -> s4 [70, 70] { R978 += 1, R914 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R978 += 1, R914 += 1, R151 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R978 += 1, R914 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R978 += 1, R914 += 1, R151 += 1, R152 += 1 };
  s3 -> s2 [71, 74] { R978 += 1, R914 += 1, R152 += 1 };
  s3 -> s1 [71, 65535] { R978 += 1, R914 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R978 += 1, R914 += 1, R152 += 1 };
  s3 -> s2 [76, 65535] { R978 += 1, R914 += 1, R152 += 1 };
  s6 -> s6 [0, 74] { R978 += 1, R914 += 1, R152 += 1 };
  s6 -> s11 [75, 75] { R978 += 1, R914 += 1, R152 += 1 };
  s6 -> s6 [76, 65535] { R978 += 1, R914 += 1, R152 += 1 };
  s7 -> s6 [0, 74] { R978 += 1, R914 += 1, R152 += 1 };
  s7 -> s7 [0, 65535] { R978 += 1, R914 += 1, R151 += 1, R152 += 1 };
  s7 -> s11 [75, 75] { R978 += 1, R914 += 1, R152 += 1 };
  s7 -> s6 [76, 65535] { R978 += 1, R914 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R978 += 1, R914 += 1, R152 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R978 += 1 };
  s8 -> s10 [70, 70] { R978 += 1, R914 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R978 += 1, R914 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R978 += 1, R914 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R978 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R978 += 1 };
  s11 -> s11 [0, 65535] { R978 += 1, R914 += 1, R152 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R978 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R980 += 1, R916 += 1, R155 += 1, R156 += 1 };
  s0 -> s2 [0, 65535] { R980 += 1, R915 += 1, R916 += 1 };
  s0 -> s0 [0, 65535] { R979 += 1, R980 += 1 };
  s0 -> s3 [70, 70] { R980 += 1, R916 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R980 += 1, R916 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R980 += 1, R916 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R980 += 1, R916 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 65535] { R980 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R980 += 1, R916 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R980 += 1, R916 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R980 += 1, R916 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R980 += 1, R916 += 1, R155 += 1, R156 += 1 };
  s2 -> s2 [0, 65535] { R980 += 1, R915 += 1, R916 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R980 += 1, R916 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R980 += 1, R916 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R980 += 1, R916 += 1, R155 += 1, R156 += 1 };
  s3 -> s3 [0, 65535] { R980 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R980 += 1, R916 += 1, R155 += 1, R156 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R980 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R980 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R982 += 1, R918 += 1, R161 += 1, R162 += 1 };
  s0 -> s0 [0, 65535] { R981 += 1, R982 += 1 };
  s0 -> s2 [0, 65535] { R982 += 1, R917 += 1, R918 += 1 };
  s0 -> s3 [70, 70] { R982 += 1, R918 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R982 += 1, R918 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R982 += 1, R918 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R982 += 1, R918 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535] { R982 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R982 += 1, R918 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R982 += 1, R918 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R982 += 1, R918 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R982 += 1, R918 += 1, R161 += 1, R162 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R982 += 1, R917 += 1, R918 += 1 };
  s2 -> s3 [70, 70] { R982 += 1, R918 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R982 += 1, R918 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R982 += 1, R918 += 1, R161 += 1, R162 += 1 };
  s3 -> s6 [0, 65535] { R982 += 1 };
  s3 -> s3 [0, 65535] { R982 += 1, R918 += 1, R161 += 1, R162 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R982 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R982 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R984 += 1, R920 += 1, R167 += 1, R168 += 1 };
  s0 -> s0 [0, 65535] { R983 += 1, R984 += 1 };
  s0 -> s2 [0, 65535] { R984 += 1, R919 += 1, R920 += 1 };
  s0 -> s3 [70, 70] { R984 += 1, R920 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R984 += 1, R920 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R984 += 1, R920 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R984 += 1, R920 += 1, R167 += 1, R168 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R984 += 1 };
  s1 -> s3 [70, 70] { R984 += 1, R920 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R984 += 1, R920 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R984 += 1, R920 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R984 += 1, R920 += 1, R167 += 1, R168 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R984 += 1, R919 += 1, R920 += 1 };
  s2 -> s3 [70, 70] { R984 += 1, R920 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R984 += 1, R920 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R984 += 1, R920 += 1, R167 += 1, R168 += 1 };
  s3 -> s3 [0, 65535] { R984 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R984 += 1, R920 += 1, R167 += 1, R168 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R984 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R984 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R986 += 1, R922 += 1, R175 += 1, R176 += 1 };
  s0 -> s0 [0, 65535] { R985 += 1, R986 += 1 };
  s0 -> s2 [0, 65535] { R986 += 1, R921 += 1, R922 += 1 };
  s0 -> s3 [70, 70] { R986 += 1, R922 += 1, R175 += 1, R176 += 1 };
  s0 -> s4 [70, 70] { R986 += 1, R922 += 1, R175 += 1, R176 += 1 };
  s0 -> s1 [71, 65535] { R986 += 1, R922 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [0, 69] { R986 += 1, R922 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [0, 65535] { R986 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R986 += 1, R922 += 1, R175 += 1, R176 += 1 };
  s1 -> s4 [70, 70] { R986 += 1, R922 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [71, 65535] { R986 += 1, R922 += 1, R175 += 1, R176 += 1 };
  s2 -> s1 [0, 69] { R986 += 1, R922 += 1, R175 += 1, R176 += 1 };
  s2 -> s2 [0, 65535] { R986 += 1, R921 += 1, R922 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R986 += 1, R922 += 1, R175 += 1, R176 += 1 };
  s2 -> s4 [70, 70] { R986 += 1, R922 += 1, R175 += 1, R176 += 1 };
  s2 -> s1 [71, 65535] { R986 += 1, R922 += 1, R175 += 1, R176 += 1 };
  s3 -> s3 [0, 65535] { R986 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R986 += 1 };
  s4 -> s4 [0, 65535] { R986 += 1, R922 += 1, R175 += 1, R176 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R986 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R988 += 1, R924 += 1, R185 += 1, R186 += 1 };
  s0 -> s2 [0, 65535] { R988 += 1, R923 += 1, R924 += 1 };
  s0 -> s0 [0, 65535] { R987 += 1, R988 += 1 };
  s0 -> s3 [70, 70] { R988 += 1, R924 += 1, R185 += 1, R186 += 1 };
  s0 -> s4 [70, 70] { R988 += 1, R924 += 1, R185 += 1, R186 += 1 };
  s0 -> s1 [71, 65535] { R988 += 1, R924 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 69] { R988 += 1, R924 += 1, R185 += 1, R186 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R988 += 1 };
  s1 -> s3 [70, 70] { R988 += 1, R924 += 1, R185 += 1, R186 += 1 };
  s1 -> s4 [70, 70] { R988 += 1, R924 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [71, 65535] { R988 += 1, R924 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [0, 69] { R988 += 1, R924 += 1, R185 += 1, R186 += 1 };
  s2 -> s2 [0, 65535] { R988 += 1, R923 += 1, R924 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R988 += 1, R924 += 1, R185 += 1, R186 += 1 };
  s2 -> s4 [70, 70] { R988 += 1, R924 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [71, 65535] { R988 += 1, R924 += 1, R185 += 1, R186 += 1 };
  s3 -> s3 [0, 65535] { R988 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R988 += 1, R924 += 1, R185 += 1, R186 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R988 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R988 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R990 += 1, R926 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s0 -> s2 [0, 69] { R990 += 1, R926 += 1, R193 += 1, R194 += 1 };
  s0 -> s3 [0, 69] { R990 += 1, R926 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s0 -> s4 [0, 65535] { R990 += 1, R925 += 1, R926 += 1 };
  s0 -> s0 [0, 65535] { R989 += 1, R990 += 1 };
  s0 -> s5 [70, 70] { R990 += 1, R926 += 1, R193 += 1, R194 += 1 };
  s0 -> s6 [70, 70] { R990 += 1, R926 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s0 -> s7 [70, 70] { R990 += 1, R926 += 1, R193 += 1, R194 += 1 };
  s0 -> s8 [70, 70] { R990 += 1, R926 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s0 -> s9 [70, 70] { R990 += 1, R926 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s0 -> s10 [70, 70] { R990 += 1, R926 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s0 -> s1 [71, 65535] { R990 += 1, R926 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s0 -> s2 [71, 65535] { R990 += 1, R926 += 1, R193 += 1, R194 += 1 };
  s0 -> s3 [71, 65535] { R990 += 1, R926 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s1 -> s1 [0, 69] { R990 += 1, R926 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s1 -> s15 [0, 69] { R990 += 1, R926 += 1 };
  s1 -> s3 [0, 69] { R990 += 1, R926 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s1 -> s11 [70, 70] { R990 += 1, R926 += 1 };
  s1 -> s17 [70, 70] { R990 += 1, R926 += 1 };
  s1 -> s6 [70, 70] { R990 += 1, R926 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s1 -> s8 [70, 70] { R990 += 1, R926 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s1 -> s9 [70, 70] { R990 += 1, R926 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s1 -> s10 [70, 70] { R990 += 1, R926 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s1 -> s1 [71, 65535] { R990 += 1, R926 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s1 -> s15 [71, 65535] { R990 += 1, R926 += 1 };
  s1 -> s3 [71, 65535] { R990 += 1, R926 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s2 -> s1 [0, 69] { R990 += 1, R926 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s2 -> s2 [0, 69] { R990 += 1, R926 += 1, R193 += 1, R194 += 1 };
  s2 -> s3 [0, 69] { R990 += 1, R926 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s2 -> s5 [70, 70] { R990 += 1, R926 += 1, R193 += 1, R194 += 1 };
  s2 -> s6 [70, 70] { R990 += 1, R926 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s2 -> s7 [70, 70] { R990 += 1, R926 += 1, R193 += 1, R194 += 1 };
  s2 -> s8 [70, 70] { R990 += 1, R926 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s2 -> s9 [70, 70] { R990 += 1, R926 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s2 -> s10 [70, 70] { R990 += 1, R926 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s2 -> s1 [71, 65535] { R990 += 1, R926 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s2 -> s2 [71, 65535] { R990 += 1, R926 += 1, R193 += 1, R194 += 1 };
  s2 -> s3 [71, 65535] { R990 += 1, R926 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s3 -> s15 [0, 69] { R990 += 1, R926 += 1 };
  s3 -> s16 [0, 69] { R990 += 1, R926 += 1, R194 += 1 };
  s3 -> s3 [0, 69] { R990 += 1, R926 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s3 -> s11 [70, 70] { R990 += 1, R926 += 1 };
  s3 -> s17 [70, 70] { R990 += 1, R926 += 1 };
  s3 -> s6 [70, 70] { R990 += 1, R926 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s3 -> s12 [70, 70] { R990 += 1, R926 += 1, R194 += 1 };
  s3 -> s10 [70, 70] { R990 += 1, R926 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s3 -> s18 [70, 70] { R990 += 1, R926 += 1, R194 += 1 };
  s3 -> s15 [71, 65535] { R990 += 1, R926 += 1 };
  s3 -> s16 [71, 65535] { R990 += 1, R926 += 1, R194 += 1 };
  s3 -> s3 [71, 65535] { R990 += 1, R926 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s4 -> s1 [0, 69] { R990 += 1, R926 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s4 -> s2 [0, 69] { R990 += 1, R926 += 1, R193 += 1, R194 += 1 };
  s4 -> s3 [0, 69] { R990 += 1, R926 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s4 -> s4 [0, 65535] { R990 += 1, R925 += 1, R926 += 1 };
  s4 -> s5 [70, 70] { R990 += 1, R926 += 1, R193 += 1, R194 += 1 };
  s4 -> s6 [70, 70] { R990 += 1, R926 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s4 -> s7 [70, 70] { R990 += 1, R926 += 1, R193 += 1, R194 += 1 };
  s4 -> s8 [70, 70] { R990 += 1, R926 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s4 -> s9 [70, 70] { R990 += 1, R926 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s4 -> s10 [70, 70] { R990 += 1, R926 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s4 -> s1 [71, 65535] { R990 += 1, R926 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s4 -> s2 [71, 65535] { R990 += 1, R926 += 1, R193 += 1, R194 += 1 };
  s4 -> s3 [71, 65535] { R990 += 1, R926 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s5 -> s5 [0, 65535] { R990 += 1, R926 += 1, R193 += 1, R194 += 1 };
  s5 -> s8 [0, 65535] { R990 += 1, R926 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s5 -> s10 [0, 65535] { R990 += 1, R926 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s8 -> s11 [0, 65535] { R990 += 1, R926 += 1 };
  s8 -> s8 [0, 65535] { R990 += 1, R926 += 1, R194 += 1, R195 += 1, R196 += 1 };
  s8 -> s10 [0, 65535] { R990 += 1, R926 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s10 -> s11 [0, 65535] { R990 += 1, R926 += 1 };
  s10 -> s12 [0, 65535] { R990 += 1, R926 += 1, R194 += 1 };
  s10 -> s10 [0, 65535] { R990 += 1, R926 += 1, R194 += 1, R196 += 1, R197 += 1 };
  s11 -> s11 [0, 65535] { R990 += 1, R926 += 1 };
  s11 -> s13 [0, 65535] { R990 += 1 };
  s11 -> s14 [0, 65535];
  s12 -> s11 [0, 65535] { R990 += 1, R926 += 1 };
  s12 -> s12 [0, 65535] { R990 += 1, R926 += 1, R194 += 1 };
  s13 -> s13 [0, 65535] { R990 += 1 };
  s13 -> s14 [0, 65535];
  s14 -> s14 [0, 65535];
  s15 -> s15 [0, 69] { R990 += 1, R926 += 1 };
  s15 -> s15 [0, 65535] { R990 += 1 };
  s15 -> s14 [0, 65535];
  s15 -> s11 [70, 70] { R990 += 1, R926 += 1 };
  s15 -> s17 [70, 70] { R990 += 1, R926 += 1 };
  s15 -> s15 [71, 65535] { R990 += 1, R926 += 1 };
  s16 -> s15 [0, 69] { R990 += 1, R926 += 1 };
  s16 -> s16 [0, 69] { R990 += 1, R926 += 1, R194 += 1 };
  s16 -> s11 [70, 70] { R990 += 1, R926 += 1 };
  s16 -> s17 [70, 70] { R990 += 1, R926 += 1 };
  s16 -> s12 [70, 70] { R990 += 1, R926 += 1, R194 += 1 };
  s16 -> s18 [70, 70] { R990 += 1, R926 += 1, R194 += 1 };
  s16 -> s15 [71, 65535] { R990 += 1, R926 += 1 };
  s16 -> s16 [71, 65535] { R990 += 1, R926 += 1, R194 += 1 };
  s17 -> s17 [0, 65535] { R990 += 1 };
  s17 -> s14 [0, 65535];
  accepting s17, s13, s14, s15, s11;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R992 += 1, R928 += 1, R836 += 1, R837 += 1, R838 += 1 };
  s0 -> s2 [0, 69] { R992 += 1, R928 += 1, R835 += 1, R836 += 1 };
  s0 -> s3 [0, 69] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s0 -> s4 [0, 65535] { R992 += 1, R927 += 1, R928 += 1 };
  s0 -> s0 [0, 65535] { R991 += 1, R992 += 1 };
  s0 -> s5 [70, 70] { R992 += 1, R928 += 1, R835 += 1, R836 += 1 };
  s0 -> s6 [70, 70] { R992 += 1, R928 += 1, R836 += 1, R837 += 1, R838 += 1 };
  s0 -> s7 [70, 70] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s0 -> s8 [70, 70] { R992 += 1, R928 += 1, R836 += 1, R837 += 1, R838 += 1 };
  s0 -> s9 [70, 70] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s0 -> s10 [70, 70] { R992 += 1, R928 += 1, R835 += 1, R836 += 1 };
  s0 -> s3 [71, 74] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s0 -> s1 [71, 65535] { R992 += 1, R928 += 1, R836 += 1, R837 += 1, R838 += 1 };
  s0 -> s2 [71, 65535] { R992 += 1, R928 += 1, R835 += 1, R836 += 1 };
  s0 -> s11 [75, 75] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s0 -> s3 [87, 65535] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s1 -> s1 [0, 69] { R992 += 1, R928 += 1, R836 += 1, R837 += 1, R838 += 1 };
  s1 -> s3 [0, 69] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s1 -> s6 [70, 70] { R992 += 1, R928 += 1, R836 += 1, R837 += 1, R838 += 1 };
  s1 -> s7 [70, 70] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s1 -> s8 [70, 70] { R992 += 1, R928 += 1, R836 += 1, R837 += 1, R838 += 1 };
  s1 -> s9 [70, 70] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s1 -> s3 [71, 74] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s1 -> s1 [71, 65535] { R992 += 1, R928 += 1, R836 += 1, R837 += 1, R838 += 1 };
  s1 -> s11 [75, 75] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s1 -> s3 [87, 65535] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s2 -> s1 [0, 69] { R992 += 1, R928 += 1, R836 += 1, R837 += 1, R838 += 1 };
  s2 -> s2 [0, 69] { R992 += 1, R928 += 1, R835 += 1, R836 += 1 };
  s2 -> s3 [0, 69] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s2 -> s5 [70, 70] { R992 += 1, R928 += 1, R835 += 1, R836 += 1 };
  s2 -> s6 [70, 70] { R992 += 1, R928 += 1, R836 += 1, R837 += 1, R838 += 1 };
  s2 -> s7 [70, 70] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s2 -> s8 [70, 70] { R992 += 1, R928 += 1, R836 += 1, R837 += 1, R838 += 1 };
  s2 -> s9 [70, 70] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s2 -> s10 [70, 70] { R992 += 1, R928 += 1, R835 += 1, R836 += 1 };
  s2 -> s3 [71, 74] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s2 -> s1 [71, 65535] { R992 += 1, R928 += 1, R836 += 1, R837 += 1, R838 += 1 };
  s2 -> s2 [71, 65535] { R992 += 1, R928 += 1, R835 += 1, R836 += 1 };
  s2 -> s11 [75, 75] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s2 -> s3 [87, 65535] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s3 -> s3 [0, 69] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s3 -> s7 [70, 70] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s3 -> s9 [70, 70] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s3 -> s3 [71, 74] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s3 -> s11 [75, 75] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s3 -> s3 [87, 65535] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s4 -> s1 [0, 69] { R992 += 1, R928 += 1, R836 += 1, R837 += 1, R838 += 1 };
  s4 -> s2 [0, 69] { R992 += 1, R928 += 1, R835 += 1, R836 += 1 };
  s4 -> s3 [0, 69] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s4 -> s4 [0, 65535] { R992 += 1, R927 += 1, R928 += 1 };
  s4 -> s5 [70, 70] { R992 += 1, R928 += 1, R835 += 1, R836 += 1 };
  s4 -> s6 [70, 70] { R992 += 1, R928 += 1, R836 += 1, R837 += 1, R838 += 1 };
  s4 -> s7 [70, 70] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s4 -> s8 [70, 70] { R992 += 1, R928 += 1, R836 += 1, R837 += 1, R838 += 1 };
  s4 -> s9 [70, 70] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s4 -> s10 [70, 70] { R992 += 1, R928 += 1, R835 += 1, R836 += 1 };
  s4 -> s3 [71, 74] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s4 -> s1 [71, 65535] { R992 += 1, R928 += 1, R836 += 1, R837 += 1, R838 += 1 };
  s4 -> s2 [71, 65535] { R992 += 1, R928 += 1, R835 += 1, R836 += 1 };
  s4 -> s11 [75, 75] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s4 -> s3 [87, 65535] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s5 -> s9 [0, 74] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s5 -> s5 [0, 65535] { R992 += 1, R928 += 1, R835 += 1, R836 += 1 };
  s5 -> s8 [0, 65535] { R992 += 1, R928 += 1, R836 += 1, R837 += 1, R838 += 1 };
  s5 -> s14 [75, 75] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s5 -> s9 [87, 65535] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s8 -> s9 [0, 74] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s8 -> s8 [0, 65535] { R992 += 1, R928 += 1, R836 += 1, R837 += 1, R838 += 1 };
  s8 -> s14 [75, 75] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s8 -> s9 [87, 65535] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s9 -> s9 [0, 74] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s9 -> s14 [75, 75] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s9 -> s9 [87, 65535] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s11 -> s11 [0, 69] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s11 [0, 65535] { R992 += 1 };
  s11 -> s13 [70, 70] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s11 -> s14 [70, 70] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s11 -> s11 [71, 75] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s11 -> s11 [87, 65535] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R992 += 1 };
  s14 -> s14 [0, 75] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R992 += 1 };
  s14 -> s14 [87, 65535] { R992 += 1, R928 += 1, R836 += 1, R838 += 1 };
  accepting s11, s12, s13, s14;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
constraint R2 = R872 && R3 = R992 && R25 - R992 = -1 && R26 = R992 && R27 - R992 = -1 && R28 = R992 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R840 + -1*R836 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R840 + -1*R836 - R130 = 0 && R129 + R839 + R835 = 0 && R131 + R841 + R837 = 0 && R132 + R842 + R838 = 0 && R871 = 0 && R903 = 0 && R904 = 0 && R913 = 0 && R914 = 0 && R925 = 0 && R926 = 0 && R927 = 0 && R928 = 0 && R929 = 0 && R930 = R992 && R931 = 0 && R932 = R992 && R933 = 0 && R934 = R992 && R935 = 0 && R936 = R992 && R937 = 0 && R938 = R992 && R939 = 0 && R940 = R992 && R941 = 0 && R942 = R992 && R943 = 0 && R944 = R992 && R945 = 0 && R946 = R992 && R947 = 0 && R948 = R992 && R949 = 0 && R950 = R992 && R951 = 0 && R952 = R992 && R953 = 0 && R954 = R992 && R955 = 0 && R956 = R992 && R957 = 0 && R958 = R992 && R959 = 0 && R960 = R992 && R961 = 0 && R962 = R992 && R963 = 0 && R964 = R992 && R965 = 0 && R966 = R992 && R967 = 0 && R968 = R992 && R969 = 0 && R970 = R992 && R971 = 0 && R972 = R992 && R973 = 0 && R974 = R992 && R975 = 0 && R976 = R992 && R977 = 0 && R978 = R992 && R979 = 0 && R980 = R992 && R981 = 0 && R982 = R992 && R983 = 0 && R984 = R992 && R985 = 0 && R986 = R992 && R987 = 0 && R988 = R992 && R989 = 0 && R990 = R992 && R991 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R840 + -1*R836 - R130 < 1 && -1 < R872 && 0 < R992 && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R840 + -1*R836 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R191 + R187 = 0 && R114 + R192 + R188 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R840 + -1*R836 - R130 = 0 || R130 + R840 + R836 < 1) && (R81 + R158 + R155 = 0 || R130 + R840 + R836 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R840 + -1*R836 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R840 + R836 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R840 + -1*R836 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R840 + R836 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R840 + -1*R836 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R840 + R836 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 != 0 || R112 + R190 + R186 + -1*R840 + -1*R836 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R840 + R836 = 0)) && (R113 + R191 + R187 != 0 || R83 + R160 + R157 + -1*R192 + -1*R188 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R198 + R193 != 0 || R120 + R199 + R194 + -1*R840 + -1*R836 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R840 + R836 = 0)) && (R843 != 0 || R844 = R872 || (R22 = 0 && R872 = 0)) && (R845 != 0 || R846 = R872 || (R22 = 0 && R872 = 0)) && (R847 != 0 || R848 = R872 || (R22 = 0 && R872 = 0)) && (R849 != 0 || R850 = R872 || (R22 = 0 && R872 = 0)) && (R851 != 0 || R852 = R872 || (R22 = 0 && R872 = 0)) && (R853 != 0 || R854 = R872 || (R22 = 0 && R872 = 0)) && (R855 != 0 || R856 = R872 || (R22 = 0 && R872 = 0)) && (R857 != 0 || R858 = R872 || (R22 = 0 && R872 = 0)) && (R859 != 0 || R860 = R872 || (R22 = 0 && R872 = 0)) && (R861 != 0 || R862 = R872 || (R22 = 0 && R872 = 0)) && (R863 != 0 || R864 = R872 || (R22 = 0 && R872 = 0)) && (R865 != 0 || R866 = R872 || (R22 = 0 && R872 = 0)) && (R867 != 0 || R868 = R872 || (R22 = 0 && R872 = 0)) && (R869 != 0 || R870 = R872 || (R22 = 0 && R872 = 0)) && (R23 = 0 || (R901 = 0 && R902 = 0)) && (R23 = 0 || (R905 = 0 && R906 = 0)) && (R23 = 0 || (R907 = 0 && R908 = 0)) && (R23 = 0 || (R909 = 0 && R910 = 0)) && (R23 = 0 || (R911 = 0 && R912 = 0)) && (R23 = 0 || (R915 = 0 && R916 = 0)) && (R23 = 0 || (R917 = 0 && R918 = 0)) && (R23 = 0 || (R919 = 0 && R920 = 0)) && (R23 = 0 || (R921 = 0 && R922 = 0)) && (R23 = 0 || (R923 = 0 && R924 = 0)) && (R24 = 0 || (R873 = 0 && R874 = 0)) && (R24 = 0 || (R875 = 0 && R876 = 0)) && (R24 = 0 || (R877 = 0 && R878 = 0)) && (R24 = 0 || (R879 = 0 && R880 = 0)) && (R24 = 0 || (R881 = 0 && R882 = 0)) && (R24 = 0 || (R883 = 0 && R884 = 0)) && (R24 = 0 || (R885 = 0 && R886 = 0)) && (R24 = 0 || (R887 = 0 && R888 = 0)) && (R24 = 0 || (R889 = 0 && R890 = 0)) && (R24 = 0 || (R891 = 0 && R892 = 0)) && (R24 = 0 || (R893 = 0 && R894 = 0)) && (R24 = 0 || (R895 = 0 && R896 = 0)) && (R24 = 0 || (R897 = 0 && R898 = 0)) && (R24 = 0 || (R899 = 0 && R900 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R840 + R836 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R840 + R836 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R840 + R836 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 = 0 || (R83 + R160 + R157 = 0 && R130 + R840 + R836 = 0)) && (R113 + R191 + R187 = 0 || R83 + R160 + R157 < 1) && (R119 + R198 + R193 = 0 || (R83 + R160 + R157 = 0 && R130 + R840 + R836 = 0)) && (R123 + R202 + R197 = 0 || (R121 + R200 + R195 = 0 && R122 + R201 + R196 = 0)) && (R843 = 0 || (R22 = 0 && R872 = 0)) && (R845 = 0 || (R22 = 0 && R872 = 0)) && (R847 = 0 || (R22 = 0 && R872 = 0)) && (R849 = 0 || (R22 = 0 && R872 = 0)) && (R851 = 0 || (R22 = 0 && R872 = 0)) && (R853 = 0 || (R22 = 0 && R872 = 0)) && (R855 = 0 || (R22 = 0 && R872 = 0)) && (R857 = 0 || (R22 = 0 && R872 = 0)) && (R859 = 0 || (R22 = 0 && R872 = 0)) && (R861 = 0 || (R22 = 0 && R872 = 0)) && (R863 = 0 || (R22 = 0 && R872 = 0)) && (R865 = 0 || (R22 = 0 && R872 = 0)) && (R867 = 0 || (R22 = 0 && R872 = 0)) && (R869 = 0 || (R22 = 0 && R872 = 0));
// End of Parikh automata intersection problem
