// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R11522, R11523, R11524, R11525, R12, R15342, R15343, R15344, R15345, R15346, R15347, R16618, R16619, R16620, R16621, R17, R17044, R17045, R17046, R17047, R17048, R17049, R17050, R17051, R17052, R17053, R17054, R17055, R17056, R17057, R17058, R17059, R17060, R17061, R17062, R17063, R17064, R17065, R17066, R17067, R17068, R17069, R17070, R17071, R17072, R17073, R17074, R17075, R17076, R17077, R17078, R17079, R17080, R17081, R17082, R17083, R17084, R17085, R17086, R17087, R17088, R17089, R17090, R17091, R17092, R17093, R17094, R17095, R17096, R17097, R17098, R17099, R17100, R17101, R17102, R17103, R17104, R17105, R17106, R17107, R17108, R17109, R17110, R17111, R17112, R17113, R17114, R17115, R17116, R17117, R17118, R17119, R17120, R17121, R17122, R17123, R17124, R17125, R17126, R17127, R17128, R17129, R17130, R17131, R17132, R17133, R17134, R17135, R17136, R17137, R17138, R17139, R17140, R17141, R17142, R17143, R17144, R17145, R17146, R17147, R17148, R17149, R17150, R17151, R17152, R17153, R18, R19, R2, R20, R21, R22, R23, R24, R25, R26, R27, R3, R38, R4, R40, R42, R43, R46, R47, R48, R52, R53, R56, R57, R58, R62, R63, R66, R67, R68, R69, R8;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [73, 73];
  s0 -> s0 [74, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [73, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R2 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R11 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 72];
  s0 -> s0 [0, 65535] { R12 += 1 };
  s0 -> s2 [73, 73];
  s0 -> s1 [74, 65535];
  s1 -> s1 [0, 72];
  s1 -> s2 [73, 73];
  s1 -> s1 [74, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R21 += 1 };
  s0 -> s0 [0, 65535] { R20 += 1, R21 += 1 };
  s0 -> s2 [9, 13] { R21 += 1 };
  s0 -> s1 [14, 31] { R21 += 1 };
  s0 -> s2 [32, 32] { R21 += 1 };
  s0 -> s1 [33, 65535] { R21 += 1 };
  s1 -> s1 [0, 65535] { R21 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R21 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R22 += 1, R23 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R25 += 1 };
  s0 -> s0 [0, 65535] { R24 += 1, R25 += 1 };
  s0 -> s2 [9, 13] { R25 += 1 };
  s0 -> s1 [14, 31] { R25 += 1 };
  s0 -> s2 [32, 32] { R25 += 1 };
  s0 -> s1 [33, 65535] { R25 += 1 };
  s1 -> s1 [0, 65535] { R25 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R25 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R26 += 1, R27 += 1 };
  s1 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R17074 += 1, R17075 += 1 };
  s0 -> s1 [0, 65535] { R17075 += 1, R19 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R17075 += 1, R19 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 72] { R17077 += 1 };
  s0 -> s0 [0, 65535] { R17076 += 1, R17077 += 1 };
  s0 -> s2 [73, 73] { R17077 += 1 };
  s0 -> s3 [73, 73] { R17077 += 1 };
  s0 -> s1 [78, 65535] { R17077 += 1 };
  s1 -> s1 [0, 72] { R17077 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R17077 += 1 };
  s1 -> s3 [73, 73] { R17077 += 1 };
  s1 -> s1 [78, 65535] { R17077 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 73] { R17077 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [78, 65535] { R17077 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 72] { R17079 += 1, R38 += 1 };
  s0 -> s0 [0, 65535] { R17078 += 1, R17079 += 1 };
  s0 -> s2 [73, 73] { R17079 += 1, R38 += 1 };
  s0 -> s3 [73, 73] { R17079 += 1, R38 += 1 };
  s0 -> s1 [74, 65535] { R17079 += 1, R38 += 1 };
  s1 -> s1 [0, 72] { R17079 += 1, R38 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R17079 += 1, R38 += 1 };
  s1 -> s3 [73, 73] { R17079 += 1, R38 += 1 };
  s1 -> s1 [74, 65535] { R17079 += 1, R38 += 1 };
  s2 -> s2 [0, 65535] { R17079 += 1, R38 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 72] { R17081 += 1, R40 += 1 };
  s0 -> s0 [0, 65535] { R17080 += 1, R17081 += 1 };
  s0 -> s2 [73, 73] { R17081 += 1, R40 += 1 };
  s0 -> s3 [73, 73] { R17081 += 1, R40 += 1 };
  s0 -> s1 [74, 65535] { R17081 += 1, R40 += 1 };
  s1 -> s1 [0, 72] { R17081 += 1, R40 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R17081 += 1, R40 += 1 };
  s1 -> s3 [73, 73] { R17081 += 1, R40 += 1 };
  s1 -> s1 [74, 65535] { R17081 += 1, R40 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R17081 += 1, R40 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 72] { R17083 += 1, R42 += 1, R43 += 1 };
  s0 -> s0 [0, 65535] { R17082 += 1, R17083 += 1 };
  s0 -> s2 [73, 73] { R17083 += 1, R42 += 1, R43 += 1 };
  s0 -> s3 [73, 73] { R17083 += 1, R42 += 1, R43 += 1 };
  s0 -> s1 [74, 65535] { R17083 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 72] { R17083 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R17083 += 1, R42 += 1, R43 += 1 };
  s1 -> s3 [73, 73] { R17083 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [74, 65535] { R17083 += 1, R42 += 1, R43 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R17083 += 1, R42 += 1, R43 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 72] { R17085 += 1, R46 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R17084 += 1, R17085 += 1 };
  s0 -> s2 [73, 73] { R17085 += 1, R46 += 1, R47 += 1 };
  s0 -> s3 [73, 73] { R17085 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [74, 65535] { R17085 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 72] { R17085 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R17085 += 1, R46 += 1, R47 += 1 };
  s1 -> s3 [73, 73] { R17085 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [74, 65535] { R17085 += 1, R46 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R17085 += 1, R46 += 1, R47 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 72] { R17087 += 1, R52 += 1, R53 += 1 };
  s0 -> s0 [0, 65535] { R17086 += 1, R17087 += 1 };
  s0 -> s2 [73, 73] { R17087 += 1, R52 += 1, R53 += 1 };
  s0 -> s3 [73, 73] { R17087 += 1, R52 += 1, R53 += 1 };
  s0 -> s1 [74, 65535] { R17087 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 72] { R17087 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R17087 += 1, R52 += 1, R53 += 1 };
  s1 -> s3 [73, 73] { R17087 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [74, 65535] { R17087 += 1, R52 += 1, R53 += 1 };
  s2 -> s2 [0, 65535] { R17087 += 1, R52 += 1, R53 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 72] { R17089 += 1, R56 += 1, R57 += 1 };
  s0 -> s0 [0, 65535] { R17088 += 1, R17089 += 1 };
  s0 -> s2 [73, 73] { R17089 += 1, R56 += 1, R57 += 1 };
  s0 -> s3 [73, 73] { R17089 += 1, R56 += 1, R57 += 1 };
  s0 -> s1 [74, 65535] { R17089 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 72] { R17089 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R17089 += 1, R56 += 1, R57 += 1 };
  s1 -> s3 [73, 73] { R17089 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [74, 65535] { R17089 += 1, R56 += 1, R57 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R17089 += 1, R56 += 1, R57 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 72] { R17091 += 1, R62 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R17090 += 1, R17091 += 1 };
  s0 -> s2 [73, 73] { R17091 += 1, R62 += 1, R63 += 1 };
  s0 -> s3 [73, 73] { R17091 += 1, R62 += 1, R63 += 1 };
  s0 -> s1 [74, 65535] { R17091 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 72] { R17091 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [73, 73] { R17091 += 1, R62 += 1, R63 += 1 };
  s1 -> s3 [73, 73] { R17091 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [74, 65535] { R17091 += 1, R62 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R17091 += 1, R62 += 1, R63 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 72] { R17111 += 1 };
  s0 -> s0 [0, 65535] { R17110 += 1, R17111 += 1 };
  s0 -> s2 [73, 73] { R17111 += 1 };
  s0 -> s1 [74, 65535] { R17111 += 1 };
  s1 -> s1 [0, 72] { R17111 += 1 };
  s1 -> s2 [73, 73] { R17111 += 1 };
  s1 -> s1 [74, 65535] { R17111 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R17111 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R17113 += 1, R1 += 1 };
  s0 -> s0 [0, 65535] { R17112 += 1, R17113 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R17113 += 1, R1 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 72] { R17115 += 1 };
  s0 -> s0 [0, 65535] { R17114 += 1, R17115 += 1 };
  s0 -> s2 [0, 65535] { R17115 += 1, R8 += 1 };
  s0 -> s3 [73, 73] { R17115 += 1 };
  s0 -> s1 [74, 65535] { R17115 += 1 };
  s1 -> s1 [0, 72] { R17115 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [73, 73] { R17115 += 1 };
  s1 -> s1 [74, 65535] { R17115 += 1 };
  s2 -> s1 [0, 72] { R17115 += 1 };
  s2 -> s2 [0, 65535] { R17115 += 1, R8 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [73, 73] { R17115 += 1 };
  s2 -> s1 [74, 65535] { R17115 += 1 };
  s3 -> s3 [0, 65535] { R17115 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 72] { R17117 += 1, R17055 += 1 };
  s0 -> s0 [0, 65535] { R17116 += 1, R17117 += 1 };
  s0 -> s2 [0, 65535] { R17117 += 1, R17054 += 1, R17055 += 1 };
  s0 -> s1 [74, 65535] { R17117 += 1, R17055 += 1 };
  s1 -> s1 [0, 72] { R17117 += 1, R17055 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R17117 += 1 };
  s1 -> s1 [74, 65535] { R17117 += 1, R17055 += 1 };
  s2 -> s1 [0, 72] { R17117 += 1, R17055 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R17117 += 1, R17054 += 1, R17055 += 1 };
  s2 -> s1 [74, 65535] { R17117 += 1, R17055 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s0 [0, 65535] { R17118 += 1, R17119 += 1 };
  s0 -> s1 [0, 65535] { R17119 += 1, R17056 += 1, R17057 += 1 };
  s0 -> s2 [0, 65535] { R17119 += 1, R17057 += 1, R17 += 1 };
  s1 -> s1 [0, 65535] { R17119 += 1, R17056 += 1, R17057 += 1 };
  s1 -> s2 [0, 65535] { R17119 += 1, R17057 += 1, R17 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R17119 += 1 };
  s2 -> s2 [0, 65535] { R17119 += 1, R17057 += 1, R17 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R17119 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 73] { R17121 += 1, R17059 += 1 };
  s0 -> s2 [0, 65535] { R17121 += 1, R17058 += 1, R17059 += 1 };
  s0 -> s0 [0, 65535] { R17120 += 1, R17121 += 1 };
  s0 -> s1 [77, 65535] { R17121 += 1, R17059 += 1 };
  s1 -> s1 [0, 73] { R17121 += 1, R17059 += 1 };
  s1 -> s1 [0, 65535] { R17121 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [77, 65535] { R17121 += 1, R17059 += 1 };
  s2 -> s1 [0, 73] { R17121 += 1, R17059 += 1 };
  s2 -> s2 [0, 65535] { R17121 += 1, R17058 += 1, R17059 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [77, 65535] { R17121 += 1, R17059 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R17123 += 1, R17061 += 1, R67 += 1 };
  s0 -> s0 [0, 65535] { R17122 += 1, R17123 += 1 };
  s0 -> s2 [0, 65535] { R17123 += 1, R17060 += 1, R17061 += 1 };
  s1 -> s1 [0, 65535] { R17123 += 1, R17061 += 1, R67 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R17123 += 1 };
  s2 -> s1 [0, 65535] { R17123 += 1, R17061 += 1, R67 += 1 };
  s2 -> s2 [0, 65535] { R17123 += 1, R17060 += 1, R17061 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R17123 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 76] { R17125 += 1, R17063 += 1 };
  s0 -> s2 [0, 65535] { R17125 += 1, R17062 += 1, R17063 += 1 };
  s0 -> s3 [0, 65535] { R17125 += 1, R17063 += 1, R69 += 1 };
  s0 -> s0 [0, 65535] { R17124 += 1, R17125 += 1 };
  s0 -> s1 [78, 65535] { R17125 += 1, R17063 += 1 };
  s1 -> s1 [0, 76] { R17125 += 1, R17063 += 1 };
  s1 -> s1 [0, 65535] { R17125 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [78, 65535] { R17125 += 1, R17063 += 1 };
  s2 -> s1 [0, 76] { R17125 += 1, R17063 += 1 };
  s2 -> s2 [0, 65535] { R17125 += 1, R17062 += 1, R17063 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R17125 += 1, R17063 += 1, R69 += 1 };
  s2 -> s1 [78, 65535] { R17125 += 1, R17063 += 1 };
  s3 -> s1 [0, 76] { R17125 += 1, R17063 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R17125 += 1, R17063 += 1, R69 += 1 };
  s3 -> s5 [0, 65535] { R17125 += 1 };
  s3 -> s1 [78, 65535] { R17125 += 1, R17063 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R17125 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 76] { R17127 += 1, R17065 += 1, R11525 += 1 };
  s0 -> s2 [0, 65535] { R17127 += 1, R17064 += 1, R17065 += 1 };
  s0 -> s0 [0, 65535] { R17126 += 1, R17127 += 1 };
  s0 -> s1 [0, 65535] { R17127 += 1, R17065 += 1 };
  s0 -> s1 [78, 65535] { R17127 += 1, R17065 += 1, R11525 += 1 };
  s1 -> s1 [0, 76] { R17127 += 1, R17065 += 1, R11525 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R17127 += 1 };
  s1 -> s1 [0, 65535] { R17127 += 1, R17065 += 1 };
  s1 -> s1 [78, 65535] { R17127 += 1, R17065 += 1, R11525 += 1 };
  s2 -> s1 [0, 76] { R17127 += 1, R17065 += 1, R11525 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R17127 += 1, R17064 += 1, R17065 += 1 };
  s2 -> s1 [0, 65535] { R17127 += 1, R17065 += 1 };
  s2 -> s1 [78, 65535] { R17127 += 1, R17065 += 1, R11525 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R17127 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R17128 += 1, R17129 += 1 };
  s0 -> s1 [0, 65535] { R17129 += 1, R17067 += 1, R15346 += 1, R15347 += 1 };
  s0 -> s2 [0, 65535] { R17129 += 1, R17066 += 1, R17067 += 1 };
  s0 -> s3 [0, 65535] { R17129 += 1, R17067 += 1 };
  s1 -> s1 [0, 65535] { R17129 += 1, R17067 += 1, R15346 += 1, R15347 += 1 };
  s1 -> s3 [0, 65535] { R17129 += 1, R17067 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R17129 += 1 };
  s2 -> s1 [0, 65535] { R17129 += 1, R17067 += 1, R15346 += 1, R15347 += 1 };
  s2 -> s2 [0, 65535] { R17129 += 1, R17066 += 1, R17067 += 1 };
  s2 -> s3 [0, 65535] { R17129 += 1, R17067 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R17129 += 1, R17067 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R17129 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R17129 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 77] { R17131 += 1, R17069 += 1, R16621 += 1 };
  s0 -> s0 [0, 65535] { R17130 += 1, R17131 += 1 };
  s0 -> s2 [0, 65535] { R17131 += 1, R17068 += 1, R17069 += 1 };
  s0 -> s3 [0, 65535] { R17131 += 1, R17069 += 1, R16620 += 1, R16621 += 1 };
  s0 -> s4 [83, 83] { R17131 += 1, R17069 += 1, R16621 += 1 };
  s0 -> s1 [84, 65535] { R17131 += 1, R17069 += 1, R16621 += 1 };
  s1 -> s1 [0, 77] { R17131 += 1, R17069 += 1, R16621 += 1 };
  s1 -> s4 [83, 83] { R17131 += 1, R17069 += 1, R16621 += 1 };
  s1 -> s1 [84, 65535] { R17131 += 1, R17069 += 1, R16621 += 1 };
  s2 -> s1 [0, 77] { R17131 += 1, R17069 += 1, R16621 += 1 };
  s2 -> s2 [0, 65535] { R17131 += 1, R17068 += 1, R17069 += 1 };
  s2 -> s3 [0, 65535] { R17131 += 1, R17069 += 1, R16620 += 1, R16621 += 1 };
  s2 -> s4 [83, 83] { R17131 += 1, R17069 += 1, R16621 += 1 };
  s2 -> s1 [84, 65535] { R17131 += 1, R17069 += 1, R16621 += 1 };
  s3 -> s1 [0, 77] { R17131 += 1, R17069 += 1, R16621 += 1 };
  s3 -> s3 [0, 65535] { R17131 += 1, R17069 += 1, R16620 += 1, R16621 += 1 };
  s3 -> s4 [83, 83] { R17131 += 1, R17069 += 1, R16621 += 1 };
  s3 -> s1 [84, 65535] { R17131 += 1, R17069 += 1, R16621 += 1 };
  s4 -> s4 [0, 77] { R17131 += 1, R17069 += 1, R16621 += 1 };
  s4 -> s5 [0, 65535] { R17131 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R17131 += 1, R17069 += 1 };
  s4 -> s4 [83, 65535] { R17131 += 1, R17069 += 1, R16621 += 1 };
  s5 -> s5 [0, 65535] { R17131 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s4, s5, s6;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R17133 += 1, R17071 += 1 };
  s0 -> s0 [0, 65535] { R17132 += 1, R17133 += 1 };
  s0 -> s2 [0, 65535] { R17133 += 1, R17071 += 1, R17048 += 1, R17049 += 1 };
  s0 -> s3 [0, 65535] { R17133 += 1, R17070 += 1, R17071 += 1 };
  s1 -> s1 [0, 65535] { R17133 += 1, R17071 += 1 };
  s1 -> s5 [0, 65535] { R17133 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R17133 += 1, R17071 += 1 };
  s2 -> s2 [0, 65535] { R17133 += 1, R17071 += 1, R17048 += 1, R17049 += 1 };
  s2 -> s5 [0, 65535] { R17133 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R17133 += 1, R17071 += 1 };
  s3 -> s2 [0, 65535] { R17133 += 1, R17071 += 1, R17048 += 1, R17049 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R17133 += 1, R17070 += 1, R17071 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R17133 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 76] { R17135 += 1, R17073 += 1, R17053 += 1 };
  s0 -> s0 [0, 65535] { R17134 += 1, R17135 += 1 };
  s0 -> s2 [0, 65535] { R17135 += 1, R17072 += 1, R17073 += 1 };
  s0 -> s3 [0, 65535] { R17135 += 1, R17073 += 1, R17052 += 1, R17053 += 1 };
  s0 -> s4 [77, 77] { R17135 += 1, R17073 += 1, R17053 += 1 };
  s0 -> s5 [77, 77] { R17135 += 1, R17073 += 1, R17053 += 1 };
  s0 -> s1 [84, 65535] { R17135 += 1, R17073 += 1, R17053 += 1 };
  s1 -> s1 [0, 76] { R17135 += 1, R17073 += 1, R17053 += 1 };
  s1 -> s6 [0, 65535] { R17135 += 1 };
  s1 -> s1 [0, 65535] { R17135 += 1, R17073 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [77, 77] { R17135 += 1, R17073 += 1, R17053 += 1 };
  s1 -> s5 [77, 77] { R17135 += 1, R17073 += 1, R17053 += 1 };
  s1 -> s1 [84, 65535] { R17135 += 1, R17073 += 1, R17053 += 1 };
  s2 -> s1 [0, 76] { R17135 += 1, R17073 += 1, R17053 += 1 };
  s2 -> s2 [0, 65535] { R17135 += 1, R17072 += 1, R17073 += 1 };
  s2 -> s3 [0, 65535] { R17135 += 1, R17073 += 1, R17052 += 1, R17053 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [77, 77] { R17135 += 1, R17073 += 1, R17053 += 1 };
  s2 -> s5 [77, 77] { R17135 += 1, R17073 += 1, R17053 += 1 };
  s2 -> s1 [84, 65535] { R17135 += 1, R17073 += 1, R17053 += 1 };
  s3 -> s1 [0, 76] { R17135 += 1, R17073 += 1, R17053 += 1 };
  s3 -> s6 [0, 65535] { R17135 += 1 };
  s3 -> s3 [0, 65535] { R17135 += 1, R17073 += 1, R17052 += 1, R17053 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [77, 77] { R17135 += 1, R17073 += 1, R17053 += 1 };
  s3 -> s5 [77, 77] { R17135 += 1, R17073 += 1, R17053 += 1 };
  s3 -> s1 [84, 65535] { R17135 += 1, R17073 += 1, R17053 += 1 };
  s4 -> s4 [0, 77] { R17135 += 1, R17073 += 1, R17053 += 1 };
  s4 -> s6 [0, 65535] { R17135 += 1 };
  s4 -> s4 [0, 65535] { R17135 += 1, R17073 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [84, 65535] { R17135 += 1, R17073 += 1, R17053 += 1 };
  s5 -> s6 [0, 65535] { R17135 += 1 };
  s5 -> s5 [0, 65535] { R17135 += 1, R17073 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R17135 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R17137 += 1, R17093 += 1, R18 += 1 };
  s0 -> s2 [0, 65535] { R17137 += 1, R17092 += 1, R17093 += 1 };
  s0 -> s0 [0, 65535] { R17136 += 1, R17137 += 1 };
  s1 -> s1 [0, 65535] { R17137 += 1, R17093 += 1, R18 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R17137 += 1 };
  s2 -> s1 [0, 65535] { R17137 += 1, R17093 += 1, R18 += 1 };
  s2 -> s2 [0, 65535] { R17137 += 1, R17092 += 1, R17093 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R17137 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 72] { R17139 += 1, R17095 += 1 };
  s0 -> s2 [0, 65535] { R17139 += 1, R17094 += 1, R17095 += 1 };
  s0 -> s0 [0, 65535] { R17138 += 1, R17139 += 1 };
  s0 -> s3 [73, 73] { R17139 += 1, R17095 += 1 };
  s0 -> s4 [73, 73] { R17139 += 1, R17095 += 1 };
  s0 -> s5 [77, 77] { R17139 += 1, R17095 += 1 };
  s0 -> s1 [78, 65535] { R17139 += 1, R17095 += 1 };
  s1 -> s1 [0, 72] { R17139 += 1, R17095 += 1 };
  s1 -> s3 [73, 73] { R17139 += 1, R17095 += 1 };
  s1 -> s4 [73, 73] { R17139 += 1, R17095 += 1 };
  s1 -> s5 [77, 77] { R17139 += 1, R17095 += 1 };
  s1 -> s1 [78, 65535] { R17139 += 1, R17095 += 1 };
  s2 -> s1 [0, 72] { R17139 += 1, R17095 += 1 };
  s2 -> s2 [0, 65535] { R17139 += 1, R17094 += 1, R17095 += 1 };
  s2 -> s3 [73, 73] { R17139 += 1, R17095 += 1 };
  s2 -> s4 [73, 73] { R17139 += 1, R17095 += 1 };
  s2 -> s5 [77, 77] { R17139 += 1, R17095 += 1 };
  s2 -> s1 [78, 65535] { R17139 += 1, R17095 += 1 };
  s4 -> s4 [0, 73] { R17139 += 1, R17095 += 1 };
  s4 -> s7 [77, 77] { R17139 += 1, R17095 += 1 };
  s4 -> s4 [78, 65535] { R17139 += 1, R17095 += 1 };
  s5 -> s5 [0, 72] { R17139 += 1, R17095 += 1 };
  s5 -> s5 [0, 65535] { R17139 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [73, 73] { R17139 += 1, R17095 += 1 };
  s5 -> s8 [73, 73] { R17139 += 1, R17095 += 1 };
  s5 -> s5 [77, 65535] { R17139 += 1, R17095 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 73] { R17139 += 1, R17095 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R17139 += 1 };
  s7 -> s7 [77, 65535] { R17139 += 1, R17095 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R17139 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 72] { R17141 += 1, R17097 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R17140 += 1, R17141 += 1 };
  s0 -> s2 [0, 65535] { R17141 += 1, R17096 += 1, R17097 += 1 };
  s0 -> s3 [73, 73] { R17141 += 1, R17097 += 1, R66 += 1 };
  s0 -> s4 [73, 73] { R17141 += 1, R17097 += 1, R66 += 1 };
  s0 -> s1 [74, 65535] { R17141 += 1, R17097 += 1, R66 += 1 };
  s1 -> s1 [0, 72] { R17141 += 1, R17097 += 1, R66 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R17141 += 1 };
  s1 -> s3 [73, 73] { R17141 += 1, R17097 += 1, R66 += 1 };
  s1 -> s4 [73, 73] { R17141 += 1, R17097 += 1, R66 += 1 };
  s1 -> s1 [74, 65535] { R17141 += 1, R17097 += 1, R66 += 1 };
  s2 -> s1 [0, 72] { R17141 += 1, R17097 += 1, R66 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R17141 += 1, R17096 += 1, R17097 += 1 };
  s2 -> s3 [73, 73] { R17141 += 1, R17097 += 1, R66 += 1 };
  s2 -> s4 [73, 73] { R17141 += 1, R17097 += 1, R66 += 1 };
  s2 -> s1 [74, 65535] { R17141 += 1, R17097 += 1, R66 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R17141 += 1, R17097 += 1, R66 += 1 };
  s3 -> s6 [0, 65535] { R17141 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R17141 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R17141 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 72] { R17143 += 1, R17099 += 1, R68 += 1 };
  s0 -> s2 [0, 65535] { R17143 += 1, R17098 += 1, R17099 += 1 };
  s0 -> s0 [0, 65535] { R17142 += 1, R17143 += 1 };
  s0 -> s3 [73, 73] { R17143 += 1, R17099 += 1, R68 += 1 };
  s0 -> s4 [73, 73] { R17143 += 1, R17099 += 1, R68 += 1 };
  s0 -> s1 [74, 65535] { R17143 += 1, R17099 += 1, R68 += 1 };
  s1 -> s1 [0, 72] { R17143 += 1, R17099 += 1, R68 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R17143 += 1 };
  s1 -> s3 [73, 73] { R17143 += 1, R17099 += 1, R68 += 1 };
  s1 -> s4 [73, 73] { R17143 += 1, R17099 += 1, R68 += 1 };
  s1 -> s1 [74, 65535] { R17143 += 1, R17099 += 1, R68 += 1 };
  s2 -> s1 [0, 72] { R17143 += 1, R17099 += 1, R68 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R17143 += 1, R17098 += 1, R17099 += 1 };
  s2 -> s3 [73, 73] { R17143 += 1, R17099 += 1, R68 += 1 };
  s2 -> s4 [73, 73] { R17143 += 1, R17099 += 1, R68 += 1 };
  s2 -> s1 [74, 65535] { R17143 += 1, R17099 += 1, R68 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R17143 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R17143 += 1 };
  s4 -> s4 [0, 65535] { R17143 += 1, R17099 += 1, R68 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R17143 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 72] { R17145 += 1, R17101 += 1, R11523 += 1 };
  s0 -> s2 [0, 72] { R17145 += 1, R17101 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s3 [0, 65535] { R17145 += 1, R17100 += 1, R17101 += 1 };
  s0 -> s0 [0, 65535] { R17144 += 1, R17145 += 1 };
  s0 -> s4 [73, 73] { R17145 += 1, R17101 += 1, R11523 += 1 };
  s0 -> s5 [73, 73] { R17145 += 1, R17101 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s6 [73, 73] { R17145 += 1, R17101 += 1, R11523 += 1 };
  s0 -> s7 [73, 73] { R17145 += 1, R17101 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s1 [74, 76] { R17145 += 1, R17101 += 1, R11523 += 1 };
  s0 -> s2 [74, 65535] { R17145 += 1, R17101 += 1, R11522 += 1, R11523 += 1 };
  s0 -> s1 [78, 65535] { R17145 += 1, R17101 += 1, R11523 += 1 };
  s1 -> s1 [0, 72] { R17145 += 1, R17101 += 1, R11523 += 1 };
  s1 -> s1 [0, 65535] { R17145 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [73, 73] { R17145 += 1, R17101 += 1 };
  s1 -> s6 [73, 73] { R17145 += 1, R17101 += 1 };
  s1 -> s1 [74, 76] { R17145 += 1, R17101 += 1, R11523 += 1 };
  s1 -> s1 [74, 65535] { R17145 += 1, R17101 += 1 };
  s1 -> s1 [78, 65535] { R17145 += 1, R17101 += 1, R11523 += 1 };
  s2 -> s1 [0, 72] { R17145 += 1, R17101 += 1, R11523 += 1 };
  s2 -> s2 [0, 72] { R17145 += 1, R17101 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s4 [73, 73] { R17145 += 1, R17101 += 1, R11523 += 1 };
  s2 -> s5 [73, 73] { R17145 += 1, R17101 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s6 [73, 73] { R17145 += 1, R17101 += 1, R11523 += 1 };
  s2 -> s7 [73, 73] { R17145 += 1, R17101 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s1 [74, 76] { R17145 += 1, R17101 += 1, R11523 += 1 };
  s2 -> s2 [74, 65535] { R17145 += 1, R17101 += 1, R11522 += 1, R11523 += 1 };
  s2 -> s1 [78, 65535] { R17145 += 1, R17101 += 1, R11523 += 1 };
  s3 -> s1 [0, 72] { R17145 += 1, R17101 += 1, R11523 += 1 };
  s3 -> s2 [0, 72] { R17145 += 1, R17101 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s3 [0, 65535] { R17145 += 1, R17100 += 1, R17101 += 1 };
  s3 -> s4 [73, 73] { R17145 += 1, R17101 += 1, R11523 += 1 };
  s3 -> s5 [73, 73] { R17145 += 1, R17101 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s6 [73, 73] { R17145 += 1, R17101 += 1, R11523 += 1 };
  s3 -> s7 [73, 73] { R17145 += 1, R17101 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s1 [74, 76] { R17145 += 1, R17101 += 1, R11523 += 1 };
  s3 -> s2 [74, 65535] { R17145 += 1, R17101 += 1, R11522 += 1, R11523 += 1 };
  s3 -> s1 [78, 65535] { R17145 += 1, R17101 += 1, R11523 += 1 };
  s4 -> s4 [0, 65535] { R17145 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s6 [0, 76] { R17145 += 1, R17101 += 1, R11523 += 1 };
  s5 -> s5 [0, 65535] { R17145 += 1, R17101 += 1, R11522 += 1, R11523 += 1 };
  s5 -> s6 [78, 65535] { R17145 += 1, R17101 += 1, R11523 += 1 };
  s6 -> s6 [0, 76] { R17145 += 1, R17101 += 1, R11523 += 1 };
  s6 -> s6 [0, 65535] { R17145 += 1, R17101 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [0, 65535] { R17145 += 1 };
  s6 -> s6 [78, 65535] { R17145 += 1, R17101 += 1, R11523 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R17145 += 1 };
  accepting s4, s8, s9, s6, s1;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 72] { R17147 += 1, R17103 += 1, R15343 += 1, R15344 += 1 };
  s0 -> s2 [0, 72] { R17147 += 1, R17103 += 1, R15342 += 1, R15343 += 1 };
  s0 -> s0 [0, 65535] { R17146 += 1, R17147 += 1 };
  s0 -> s3 [0, 65535] { R17147 += 1, R17102 += 1, R17103 += 1 };
  s0 -> s4 [73, 73] { R17147 += 1, R17103 += 1, R15342 += 1, R15343 += 1 };
  s0 -> s5 [73, 73] { R17147 += 1, R17103 += 1, R15342 += 1, R15343 += 1 };
  s0 -> s6 [73, 73] { R17147 += 1, R17103 += 1, R15343 += 1, R15344 += 1 };
  s0 -> s7 [73, 73] { R17147 += 1, R17103 += 1, R15343 += 1, R15344 += 1 };
  s0 -> s1 [74, 65535] { R17147 += 1, R17103 += 1, R15343 += 1, R15344 += 1 };
  s0 -> s2 [74, 65535] { R17147 += 1, R17103 += 1, R15342 += 1, R15343 += 1 };
  s1 -> s1 [0, 72] { R17147 += 1, R17103 += 1, R15343 += 1, R15344 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s1 [0, 65535] { R17147 += 1 };
  s1 -> s6 [73, 73] { R17147 += 1, R17103 += 1, R15343 += 1, R15344 += 1 };
  s1 -> s7 [73, 73] { R17147 += 1, R17103 += 1, R15343 += 1, R15344 += 1 };
  s1 -> s1 [74, 65535] { R17147 += 1, R17103 += 1, R15343 += 1, R15344 += 1 };
  s2 -> s1 [0, 72] { R17147 += 1, R17103 += 1, R15343 += 1, R15344 += 1 };
  s2 -> s2 [0, 72] { R17147 += 1, R17103 += 1, R15342 += 1, R15343 += 1 };
  s2 -> s4 [73, 73] { R17147 += 1, R17103 += 1, R15342 += 1, R15343 += 1 };
  s2 -> s5 [73, 73] { R17147 += 1, R17103 += 1, R15342 += 1, R15343 += 1 };
  s2 -> s6 [73, 73] { R17147 += 1, R17103 += 1, R15343 += 1, R15344 += 1 };
  s2 -> s7 [73, 73] { R17147 += 1, R17103 += 1, R15343 += 1, R15344 += 1 };
  s2 -> s1 [74, 65535] { R17147 += 1, R17103 += 1, R15343 += 1, R15344 += 1 };
  s2 -> s2 [74, 65535] { R17147 += 1, R17103 += 1, R15342 += 1, R15343 += 1 };
  s3 -> s1 [0, 72] { R17147 += 1, R17103 += 1, R15343 += 1, R15344 += 1 };
  s3 -> s2 [0, 72] { R17147 += 1, R17103 += 1, R15342 += 1, R15343 += 1 };
  s3 -> s3 [0, 65535] { R17147 += 1, R17102 += 1, R17103 += 1 };
  s3 -> s4 [73, 73] { R17147 += 1, R17103 += 1, R15342 += 1, R15343 += 1 };
  s3 -> s5 [73, 73] { R17147 += 1, R17103 += 1, R15342 += 1, R15343 += 1 };
  s3 -> s6 [73, 73] { R17147 += 1, R17103 += 1, R15343 += 1, R15344 += 1 };
  s3 -> s7 [73, 73] { R17147 += 1, R17103 += 1, R15343 += 1, R15344 += 1 };
  s3 -> s1 [74, 65535] { R17147 += 1, R17103 += 1, R15343 += 1, R15344 += 1 };
  s3 -> s2 [74, 65535] { R17147 += 1, R17103 += 1, R15342 += 1, R15343 += 1 };
  s5 -> s5 [0, 65535] { R17147 += 1, R17103 += 1, R15342 += 1, R15343 += 1 };
  s5 -> s7 [0, 65535] { R17147 += 1, R17103 += 1, R15343 += 1, R15344 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R17147 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R17147 += 1 };
  s7 -> s7 [0, 65535] { R17147 += 1, R17103 += 1, R15343 += 1, R15344 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R17147 += 1 };
  accepting s8, s9, s6, s1, s7;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 72] { R17149 += 1, R17105 += 1, R16618 += 1, R16619 += 1 };
  s0 -> s0 [0, 65535] { R17148 += 1, R17149 += 1 };
  s0 -> s2 [0, 65535] { R17149 += 1, R17104 += 1, R17105 += 1 };
  s0 -> s3 [73, 73] { R17149 += 1, R17105 += 1, R16618 += 1, R16619 += 1 };
  s0 -> s4 [73, 73] { R17149 += 1, R17105 += 1, R16618 += 1, R16619 += 1 };
  s0 -> s1 [74, 65535] { R17149 += 1, R17105 += 1, R16618 += 1, R16619 += 1 };
  s1 -> s1 [0, 72] { R17149 += 1, R17105 += 1, R16618 += 1, R16619 += 1 };
  s1 -> s1 [0, 65535] { R17149 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [73, 73] { R17149 += 1, R17105 += 1, R16618 += 1, R16619 += 1 };
  s1 -> s4 [73, 73] { R17149 += 1, R17105 += 1, R16618 += 1, R16619 += 1 };
  s1 -> s1 [74, 65535] { R17149 += 1, R17105 += 1, R16618 += 1, R16619 += 1 };
  s2 -> s1 [0, 72] { R17149 += 1, R17105 += 1, R16618 += 1, R16619 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R17149 += 1, R17104 += 1, R17105 += 1 };
  s2 -> s3 [73, 73] { R17149 += 1, R17105 += 1, R16618 += 1, R16619 += 1 };
  s2 -> s4 [73, 73] { R17149 += 1, R17105 += 1, R16618 += 1, R16619 += 1 };
  s2 -> s1 [74, 65535] { R17149 += 1, R17105 += 1, R16618 += 1, R16619 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R17149 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R17149 += 1 };
  s4 -> s4 [0, 65535] { R17149 += 1, R17105 += 1, R16618 += 1, R16619 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R17149 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 72] { R17151 += 1, R17107 += 1, R17045 += 1, R17046 += 1 };
  s0 -> s2 [0, 72] { R17151 += 1, R17107 += 1, R17044 += 1, R17045 += 1 };
  s0 -> s3 [0, 65535] { R17151 += 1, R17106 += 1, R17107 += 1 };
  s0 -> s0 [0, 65535] { R17150 += 1, R17151 += 1 };
  s0 -> s4 [73, 73] { R17151 += 1, R17107 += 1, R17045 += 1, R17046 += 1 };
  s0 -> s5 [73, 73] { R17151 += 1, R17107 += 1, R17045 += 1, R17046 += 1 };
  s0 -> s6 [73, 73] { R17151 += 1, R17107 += 1, R17044 += 1, R17045 += 1 };
  s0 -> s7 [73, 73] { R17151 += 1, R17107 += 1, R17044 += 1, R17045 += 1 };
  s0 -> s1 [74, 65535] { R17151 += 1, R17107 += 1, R17045 += 1, R17046 += 1 };
  s0 -> s2 [74, 65535] { R17151 += 1, R17107 += 1, R17044 += 1, R17045 += 1 };
  s1 -> s1 [0, 72] { R17151 += 1, R17107 += 1, R17045 += 1, R17046 += 1 };
  s1 -> s1 [0, 65535] { R17151 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [73, 73] { R17151 += 1, R17107 += 1, R17045 += 1, R17046 += 1 };
  s1 -> s5 [73, 73] { R17151 += 1, R17107 += 1, R17045 += 1, R17046 += 1 };
  s1 -> s1 [74, 65535] { R17151 += 1, R17107 += 1, R17045 += 1, R17046 += 1 };
  s2 -> s1 [0, 72] { R17151 += 1, R17107 += 1, R17045 += 1, R17046 += 1 };
  s2 -> s2 [0, 72] { R17151 += 1, R17107 += 1, R17044 += 1, R17045 += 1 };
  s2 -> s4 [73, 73] { R17151 += 1, R17107 += 1, R17045 += 1, R17046 += 1 };
  s2 -> s5 [73, 73] { R17151 += 1, R17107 += 1, R17045 += 1, R17046 += 1 };
  s2 -> s6 [73, 73] { R17151 += 1, R17107 += 1, R17044 += 1, R17045 += 1 };
  s2 -> s7 [73, 73] { R17151 += 1, R17107 += 1, R17044 += 1, R17045 += 1 };
  s2 -> s1 [74, 65535] { R17151 += 1, R17107 += 1, R17045 += 1, R17046 += 1 };
  s2 -> s2 [74, 65535] { R17151 += 1, R17107 += 1, R17044 += 1, R17045 += 1 };
  s3 -> s1 [0, 72] { R17151 += 1, R17107 += 1, R17045 += 1, R17046 += 1 };
  s3 -> s2 [0, 72] { R17151 += 1, R17107 += 1, R17044 += 1, R17045 += 1 };
  s3 -> s3 [0, 65535] { R17151 += 1, R17106 += 1, R17107 += 1 };
  s3 -> s4 [73, 73] { R17151 += 1, R17107 += 1, R17045 += 1, R17046 += 1 };
  s3 -> s5 [73, 73] { R17151 += 1, R17107 += 1, R17045 += 1, R17046 += 1 };
  s3 -> s6 [73, 73] { R17151 += 1, R17107 += 1, R17044 += 1, R17045 += 1 };
  s3 -> s7 [73, 73] { R17151 += 1, R17107 += 1, R17044 += 1, R17045 += 1 };
  s3 -> s1 [74, 65535] { R17151 += 1, R17107 += 1, R17045 += 1, R17046 += 1 };
  s3 -> s2 [74, 65535] { R17151 += 1, R17107 += 1, R17044 += 1, R17045 += 1 };
  s4 -> s9 [0, 65535] { R17151 += 1 };
  s4 -> s4 [0, 65535] { R17151 += 1, R17107 += 1, R17045 += 1, R17046 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R17151 += 1 };
  s6 -> s4 [0, 65535] { R17151 += 1, R17107 += 1, R17045 += 1, R17046 += 1 };
  s6 -> s6 [0, 65535] { R17151 += 1, R17107 += 1, R17044 += 1, R17045 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R17151 += 1 };
  s9 -> s8 [0, 65535];
  accepting s4, s8, s5, s9, s1;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 72] { R17153 += 1, R17109 += 1, R17050 += 1, R17051 += 1 };
  s0 -> s0 [0, 65535] { R17152 += 1, R17153 += 1 };
  s0 -> s2 [0, 65535] { R17153 += 1, R17108 += 1, R17109 += 1 };
  s0 -> s3 [73, 73] { R17153 += 1, R17109 += 1, R17050 += 1, R17051 += 1 };
  s0 -> s4 [73, 73] { R17153 += 1, R17109 += 1, R17050 += 1, R17051 += 1 };
  s0 -> s1 [74, 65535] { R17153 += 1, R17109 += 1, R17050 += 1, R17051 += 1 };
  s1 -> s1 [0, 72] { R17153 += 1, R17109 += 1, R17050 += 1, R17051 += 1 };
  s1 -> s1 [0, 65535] { R17153 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [73, 73] { R17153 += 1, R17109 += 1, R17050 += 1, R17051 += 1 };
  s1 -> s4 [73, 73] { R17153 += 1, R17109 += 1, R17050 += 1, R17051 += 1 };
  s1 -> s1 [74, 65535] { R17153 += 1, R17109 += 1, R17050 += 1, R17051 += 1 };
  s2 -> s1 [0, 72] { R17153 += 1, R17109 += 1, R17050 += 1, R17051 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R17153 += 1, R17108 += 1, R17109 += 1 };
  s2 -> s3 [73, 73] { R17153 += 1, R17109 += 1, R17050 += 1, R17051 += 1 };
  s2 -> s4 [73, 73] { R17153 += 1, R17109 += 1, R17050 += 1, R17051 += 1 };
  s2 -> s1 [74, 65535] { R17153 += 1, R17109 += 1, R17050 += 1, R17051 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R17153 += 1 };
  s4 -> s5 [0, 65535] { R17153 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R17153 += 1, R17109 += 1, R17050 += 1, R17051 += 1 };
  s5 -> s5 [0, 65535] { R17153 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [105, 105];
  accepting s1;
};
};
synchronised {  // Automata constraining P54
automaton P54_0 {
  init s0;
  s0 -> s1 [109, 109];
  accepting s1;
};
};
constraint R1 = R17069 && R2 = R17153 && R20 - R17153 = -1 && R21 = R17153 && R22 - R17153 = -1 && R23 = R17153 && R24 = 0 && R25 = 1 && R26 = 0 && R27 = 1 && R38 + R67 + R66 + -1*R16621 + -1*R16619 - R53 = 0 && R52 + R16620 + R16618 = 0 && R17068 = 0 && R17094 = 0 && R17095 = 0 && R17100 = 0 && R17101 = 0 && R17102 = 0 && R17103 = 0 && R17106 = 0 && R17107 = 0 && R17110 = 0 && R17111 = R17153 && R17112 = 0 && R17113 = R17153 && R17114 = 0 && R17115 = R17153 && R17116 = 0 && R17117 = R17153 && R17118 = 0 && R17119 = R17153 && R17120 = 0 && R17121 = R17153 && R17122 = 0 && R17123 = R17153 && R17124 = 0 && R17125 = R17153 && R17126 = 0 && R17127 = R17153 && R17128 = 0 && R17129 = R17153 && R17130 = 0 && R17131 = R17153 && R17132 = 0 && R17133 = R17153 && R17134 = 0 && R17135 = R17153 && R17136 = 0 && R17137 = R17153 && R17138 = 0 && R17139 = R17153 && R17140 = 0 && R17141 = R17153 && R17142 = 0 && R17143 = R17153 && R17144 = 0 && R17145 = R17153 && R17146 = 0 && R17147 = R17153 && R17148 = 0 && R17149 = R17153 && R17150 = 0 && R17151 = R17153 && R17152 = 0 && R8 < 1 && R11 < 1 && R12 < 1 && R40 + R69 + R68 < 1 && -1*R16621 + -1*R16619 - R53 < 1 && -1 < R17069 && 0 < R17153 && (R48 + R15347 + R15344 != 0 || ((R42 + R11524 + R11522 != 0 || R43 + R11525 + R11523 + -1*R16621 + -1*R16619 - R53 = 0 || R53 + R16621 + R16619 < 1) && (R42 + R11524 + R11522 = 0 || R53 + R16621 + R16619 < 1))) && (R48 + R15347 + R15344 != 0 || ((R46 + R15345 + R15342 != 0 || R47 + R15346 + R15343 + -1*R16621 + -1*R16619 - R53 = 0 || R53 + R16621 + R16619 < 1) && (R46 + R15345 + R15342 = 0 || R53 + R16621 + R16619 < 1))) && (R17054 != 0 || R17055 = R17069 || (R17 = 0 && R17069 = 0)) && (R17056 != 0 || R17057 = R17069 || (R17 = 0 && R17069 = 0)) && (R17058 != 0 || R17059 = R17069 || (R17 = 0 && R17069 = 0)) && (R17060 != 0 || R17061 = R17069 || (R17 = 0 && R17069 = 0)) && (R17062 != 0 || R17063 = R17069 || (R17 = 0 && R17069 = 0)) && (R17064 != 0 || R17065 = R17069 || (R17 = 0 && R17069 = 0)) && (R17066 != 0 || R17067 = R17069 || (R17 = 0 && R17069 = 0)) && (R17070 != 0 || R17069 = R17071 || (R17 = 0 && R17069 = 0)) && (R17072 != 0 || R17069 = R17073 || (R17 = 0 && R17069 = 0)) && (R18 = 0 || (R17092 = 0 && R17093 = 0)) && (R18 = 0 || (R17096 = 0 && R17097 = 0)) && (R18 = 0 || (R17098 = 0 && R17099 = 0)) && (R18 = 0 || (R17104 = 0 && R17105 = 0)) && (R18 = 0 || (R17108 = 0 && R17109 = 0)) && (R19 = 0 || (R17074 = 0 && R17075 = 0)) && (R19 = 0 || (R17076 = 0 && R17077 = 0)) && (R19 = 0 || (R17078 = 0 && R17079 = 0)) && (R19 = 0 || (R17080 = 0 && R17081 = 0)) && (R19 = 0 || (R17082 = 0 && R17083 = 0)) && (R19 = 0 || (R17084 = 0 && R17085 = 0)) && (R19 = 0 || (R17086 = 0 && R17087 = 0)) && (R19 = 0 || (R17088 = 0 && R17089 = 0)) && (R19 = 0 || (R17090 = 0 && R17091 = 0)) && (R48 + R15347 + R15344 = 0 || (R42 + R11524 + R11522 = 0 && R43 + R11525 + R11523 + -1*R16621 + -1*R16619 - R53 = 0)) && (R48 + R15347 + R15344 = 0 || (R46 + R15345 + R15342 = 0 && R47 + R15346 + R15343 + -1*R16621 + -1*R16619 - R53 = 0)) && (R58 + R17049 + R17046 = 0 || (R56 + R17047 + R17044 = 0 && R57 + R17048 + R17045 = 0)) && (R58 + R17049 + R17046 = 0 || (R62 + R17052 + R17050 = 0 && R63 + R17053 + R17051 = 0)) && (R17054 = 0 || (R17 = 0 && R17069 = 0)) && (R17056 = 0 || (R17 = 0 && R17069 = 0)) && (R17058 = 0 || (R17 = 0 && R17069 = 0)) && (R17060 = 0 || (R17 = 0 && R17069 = 0)) && (R17062 = 0 || (R17 = 0 && R17069 = 0)) && (R17064 = 0 || (R17 = 0 && R17069 = 0)) && (R17066 = 0 || (R17 = 0 && R17069 = 0)) && (R17070 = 0 || (R17 = 0 && R17069 = 0)) && (R17072 = 0 || (R17 = 0 && R17069 = 0));
// End of Parikh automata intersection problem
