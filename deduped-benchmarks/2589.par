// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R14, R17, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R33, R34, R35, R36, R37, R38, R4, R49, R5, R51, R53, R54, R57, R58, R59, R6, R63, R64, R67, R68, R69, R7, R73, R74, R77, R78, R79, R80, R81, R82, R83, R84, R8819, R8820, R8821, R8822, R8823, R8824, R8825, R8826, R8827, R8828, R8829, R8830, R8831, R8832, R8833, R8834, R9015, R9016, R9017, R9018, R9019, R9020, R9021, R9022, R9023, R9024, R9025, R9026, R9027, R9028, R9029, R9030, R9031, R9032, R9033, R9034, R9035, R9036, R9037, R9038, R9039, R9040, R9041, R9042, R9043, R9044, R9045, R9046, R9047, R9048, R9049, R9050, R9051, R9052, R9053, R9054, R9055, R9056, R9057, R9058, R9059, R9060, R9061, R9062, R9063, R9064, R9065, R9066, R9067, R9068, R9069, R9070, R9071, R9072, R9073, R9074, R9075, R9076, R9077, R9078, R9079, R9080, R9081, R9082, R9083, R9084, R9085, R9086, R9087, R9088, R9089, R9090, R9091, R9092, R9093, R9094, R9095, R9096, R9097, R9098, R9099, R9100, R9101, R9102, R9103, R9104, R9105, R9106, R9107, R9108, R9109, R9110, R9111, R9112, R9113, R9114, R9115, R9116, R9117, R9118, R9119, R9120, R9121, R9122, R9123, R9124, R9125, R9126, R9127, R9128, R9129, R9130, R9131, R9132, R9133, R9134, R9135, R9136, R9137, R9138, R9139, R9140, R9141, R9142, R9143, R9144, R9145, R9146, R9147, R9148, R9149, R9150, R9151, R9152, R9153, R9154, R9155, R9156, R9157, R9158, R9159, R9160, R9161, R9162, R9163, R9164, R9165, R9166, R9167, R9168, R9169, R9170, R9171, R9172, R9173, R9174, R9175, R9176, R9177, R9178, R9179, R9180, R9181, R9182, R9183, R9184, R9185, R9186, R9187, R9188, R9189, R9190, R9191, R9192, R9193, R9194;
synchronised {  // Automata constraining P9
automaton P9_0 {
  init s0;
  s0 -> s1 [98, 98];
  accepting s1;
};
};
synchronised {  // Automata constraining P51
automaton P51_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R17 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [13, 13] { R32 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s0 -> s0 [0, 65535] { R33 += 1, R34 += 1 };
  s1 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R36 += 1 };
  s0 -> s0 [0, 65535] { R35 += 1, R36 += 1 };
  s0 -> s2 [9, 13] { R36 += 1 };
  s0 -> s1 [14, 31] { R36 += 1 };
  s0 -> s2 [32, 32] { R36 += 1 };
  s0 -> s1 [33, 65535] { R36 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R36 += 1 };
  s2 -> s1 [0, 65535] { R36 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R37 += 1, R38 += 1 };
  s1 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R9120 += 1 };
  s0 -> s0 [0, 65535] { R9119 += 1, R9120 += 1 };
  s0 -> s2 [66, 66] { R9120 += 1 };
  s0 -> s1 [67, 65535] { R9120 += 1 };
  s1 -> s1 [0, 64] { R9120 += 1 };
  s1 -> s2 [66, 66] { R9120 += 1 };
  s1 -> s1 [67, 65535] { R9120 += 1 };
  s2 -> s2 [0, 64] { R9120 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [66, 65535] { R9120 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R9122 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R9121 += 1, R9122 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R9122 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 65] { R9124 += 1 };
  s0 -> s2 [0, 65535] { R9124 += 1, R14 += 1 };
  s0 -> s0 [0, 65535] { R9123 += 1, R9124 += 1 };
  s0 -> s3 [66, 66] { R9124 += 1 };
  s0 -> s1 [67, 65535] { R9124 += 1 };
  s1 -> s1 [0, 65] { R9124 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [66, 66] { R9124 += 1 };
  s1 -> s1 [67, 65535] { R9124 += 1 };
  s2 -> s1 [0, 65] { R9124 += 1 };
  s2 -> s2 [0, 65535] { R9124 += 1, R14 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [66, 66] { R9124 += 1 };
  s2 -> s1 [67, 65535] { R9124 += 1 };
  s3 -> s3 [0, 65535] { R9124 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R9126 += 1, R24 += 1 };
  s0 -> s2 [0, 65535] { R9126 += 1, R23 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R9125 += 1, R9126 += 1 };
  s0 -> s3 [9, 13] { R9126 += 1, R24 += 1 };
  s0 -> s1 [14, 31] { R9126 += 1, R24 += 1 };
  s0 -> s3 [32, 32] { R9126 += 1, R24 += 1 };
  s0 -> s1 [33, 65535] { R9126 += 1, R24 += 1 };
  s1 -> s5 [0, 65535] { R9126 += 1 };
  s1 -> s1 [0, 65535] { R9126 += 1, R24 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 8] { R9126 += 1, R24 += 1 };
  s2 -> s2 [0, 65535] { R9126 += 1, R23 += 1, R24 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [9, 13] { R9126 += 1, R24 += 1 };
  s2 -> s1 [14, 31] { R9126 += 1, R24 += 1 };
  s2 -> s3 [32, 32] { R9126 += 1, R24 += 1 };
  s2 -> s1 [33, 65535] { R9126 += 1, R24 += 1 };
  s3 -> s1 [0, 65535] { R9126 += 1, R24 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R9126 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s0 [0, 65535] { R9127 += 1, R9128 += 1 };
  s0 -> s1 [0, 65535] { R9128 += 1, R25 += 1, R26 += 1 };
  s0 -> s2 [0, 65535] { R9128 += 1, R26 += 1, R4 += 1 };
  s1 -> s1 [0, 65535] { R9128 += 1, R25 += 1, R26 += 1 };
  s1 -> s2 [0, 65535] { R9128 += 1, R26 += 1, R4 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R9128 += 1, R26 += 1, R4 += 1 };
  s2 -> s3 [0, 65535] { R9128 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R9128 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R9130 += 1, R28 += 1 };
  s0 -> s0 [0, 65535] { R9129 += 1, R9130 += 1 };
  s0 -> s2 [0, 65535] { R9130 += 1, R27 += 1, R28 += 1 };
  s0 -> s3 [9, 13] { R9130 += 1, R28 += 1 };
  s0 -> s1 [14, 31] { R9130 += 1, R28 += 1 };
  s0 -> s3 [32, 32] { R9130 += 1, R28 += 1 };
  s0 -> s1 [33, 65535] { R9130 += 1, R28 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R9130 += 1 };
  s1 -> s1 [0, 65535] { R9130 += 1, R28 += 1 };
  s2 -> s1 [0, 8] { R9130 += 1, R28 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R9130 += 1, R27 += 1, R28 += 1 };
  s2 -> s3 [9, 13] { R9130 += 1, R28 += 1 };
  s2 -> s1 [14, 31] { R9130 += 1, R28 += 1 };
  s2 -> s3 [32, 32] { R9130 += 1, R28 += 1 };
  s2 -> s1 [33, 65535] { R9130 += 1, R28 += 1 };
  s3 -> s1 [0, 65535] { R9130 += 1, R28 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R9130 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 65535] { R9132 += 1, R30 += 1, R5 += 1 };
  s0 -> s2 [0, 65535] { R9132 += 1, R29 += 1, R30 += 1 };
  s0 -> s0 [0, 65535] { R9131 += 1, R9132 += 1 };
  s1 -> s1 [0, 65535] { R9132 += 1, R30 += 1, R5 += 1 };
  s1 -> s4 [0, 65535] { R9132 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R9132 += 1, R30 += 1, R5 += 1 };
  s2 -> s2 [0, 65535] { R9132 += 1, R29 += 1, R30 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R9132 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 65535] { R9134 += 1, R9039 += 1, R9040 += 1 };
  s0 -> s0 [0, 65535] { R9133 += 1, R9134 += 1 };
  s0 -> s2 [0, 65535] { R9134 += 1, R9040 += 1, R22 += 1 };
  s1 -> s1 [0, 65535] { R9134 += 1, R9039 += 1, R9040 += 1 };
  s1 -> s2 [0, 65535] { R9134 += 1, R9040 += 1, R22 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R9134 += 1, R9040 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R9134 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R9134 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 65] { R9136 += 1, R9042 += 1 };
  s0 -> s2 [0, 65535] { R9136 += 1, R9041 += 1, R9042 += 1 };
  s0 -> s0 [0, 65535] { R9135 += 1, R9136 += 1 };
  s0 -> s3 [66, 66] { R9136 += 1, R9042 += 1 };
  s0 -> s4 [66, 66] { R9136 += 1, R9042 += 1 };
  s0 -> s1 [71, 65535] { R9136 += 1, R9042 += 1 };
  s1 -> s1 [0, 65] { R9136 += 1, R9042 += 1 };
  s1 -> s1 [0, 65535] { R9136 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R9136 += 1, R9042 += 1 };
  s1 -> s4 [66, 66] { R9136 += 1, R9042 += 1 };
  s1 -> s1 [71, 65535] { R9136 += 1, R9042 += 1 };
  s2 -> s1 [0, 65] { R9136 += 1, R9042 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R9136 += 1, R9041 += 1, R9042 += 1 };
  s2 -> s3 [66, 66] { R9136 += 1, R9042 += 1 };
  s2 -> s4 [66, 66] { R9136 += 1, R9042 += 1 };
  s2 -> s1 [71, 65535] { R9136 += 1, R9042 += 1 };
  s3 -> s3 [0, 65535] { R9136 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 66] { R9136 += 1, R9042 += 1 };
  s4 -> s4 [0, 65535] { R9136 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [71, 65535] { R9136 += 1, R9042 += 1 };
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 65] { R9138 += 1, R9044 += 1, R49 += 1 };
  s0 -> s2 [0, 65535] { R9138 += 1, R9043 += 1, R9044 += 1 };
  s0 -> s0 [0, 65535] { R9137 += 1, R9138 += 1 };
  s0 -> s3 [66, 66] { R9138 += 1, R9044 += 1, R49 += 1 };
  s0 -> s4 [66, 66] { R9138 += 1, R9044 += 1, R49 += 1 };
  s0 -> s1 [67, 65535] { R9138 += 1, R9044 += 1, R49 += 1 };
  s1 -> s1 [0, 65] { R9138 += 1, R9044 += 1, R49 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R9138 += 1 };
  s1 -> s3 [66, 66] { R9138 += 1, R9044 += 1, R49 += 1 };
  s1 -> s4 [66, 66] { R9138 += 1, R9044 += 1, R49 += 1 };
  s1 -> s1 [67, 65535] { R9138 += 1, R9044 += 1, R49 += 1 };
  s2 -> s1 [0, 65] { R9138 += 1, R9044 += 1, R49 += 1 };
  s2 -> s2 [0, 65535] { R9138 += 1, R9043 += 1, R9044 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R9138 += 1, R9044 += 1, R49 += 1 };
  s2 -> s4 [66, 66] { R9138 += 1, R9044 += 1, R49 += 1 };
  s2 -> s1 [67, 65535] { R9138 += 1, R9044 += 1, R49 += 1 };
  s3 -> s6 [0, 65535] { R9138 += 1 };
  s3 -> s3 [0, 65535] { R9138 += 1, R9044 += 1, R49 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R9138 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9138 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 65] { R9140 += 1, R9046 += 1, R51 += 1 };
  s0 -> s0 [0, 65535] { R9139 += 1, R9140 += 1 };
  s0 -> s2 [0, 65535] { R9140 += 1, R9045 += 1, R9046 += 1 };
  s0 -> s3 [66, 66] { R9140 += 1, R9046 += 1, R51 += 1 };
  s0 -> s4 [66, 66] { R9140 += 1, R9046 += 1, R51 += 1 };
  s0 -> s1 [67, 65535] { R9140 += 1, R9046 += 1, R51 += 1 };
  s1 -> s1 [0, 65] { R9140 += 1, R9046 += 1, R51 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R9140 += 1 };
  s1 -> s3 [66, 66] { R9140 += 1, R9046 += 1, R51 += 1 };
  s1 -> s4 [66, 66] { R9140 += 1, R9046 += 1, R51 += 1 };
  s1 -> s1 [67, 65535] { R9140 += 1, R9046 += 1, R51 += 1 };
  s2 -> s1 [0, 65] { R9140 += 1, R9046 += 1, R51 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R9140 += 1, R9045 += 1, R9046 += 1 };
  s2 -> s3 [66, 66] { R9140 += 1, R9046 += 1, R51 += 1 };
  s2 -> s4 [66, 66] { R9140 += 1, R9046 += 1, R51 += 1 };
  s2 -> s1 [67, 65535] { R9140 += 1, R9046 += 1, R51 += 1 };
  s3 -> s3 [0, 65535] { R9140 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R9140 += 1 };
  s4 -> s4 [0, 65535] { R9140 += 1, R9046 += 1, R51 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9140 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65] { R9142 += 1, R9048 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R9141 += 1, R9142 += 1 };
  s0 -> s2 [0, 65535] { R9142 += 1, R9047 += 1, R9048 += 1 };
  s0 -> s3 [66, 66] { R9142 += 1, R9048 += 1, R53 += 1, R54 += 1 };
  s0 -> s4 [66, 66] { R9142 += 1, R9048 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [67, 65535] { R9142 += 1, R9048 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65] { R9142 += 1, R9048 += 1, R53 += 1, R54 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R9142 += 1 };
  s1 -> s3 [66, 66] { R9142 += 1, R9048 += 1, R53 += 1, R54 += 1 };
  s1 -> s4 [66, 66] { R9142 += 1, R9048 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [67, 65535] { R9142 += 1, R9048 += 1, R53 += 1, R54 += 1 };
  s2 -> s1 [0, 65] { R9142 += 1, R9048 += 1, R53 += 1, R54 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R9142 += 1, R9047 += 1, R9048 += 1 };
  s2 -> s3 [66, 66] { R9142 += 1, R9048 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [66, 66] { R9142 += 1, R9048 += 1, R53 += 1, R54 += 1 };
  s2 -> s1 [67, 65535] { R9142 += 1, R9048 += 1, R53 += 1, R54 += 1 };
  s3 -> s3 [0, 65535] { R9142 += 1, R9048 += 1, R53 += 1, R54 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R9142 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R9142 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9142 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 65] { R9144 += 1, R9050 += 1, R57 += 1, R58 += 1 };
  s0 -> s0 [0, 65535] { R9143 += 1, R9144 += 1 };
  s0 -> s2 [0, 65535] { R9144 += 1, R9049 += 1, R9050 += 1 };
  s0 -> s3 [66, 66] { R9144 += 1, R9050 += 1, R57 += 1, R58 += 1 };
  s0 -> s4 [66, 66] { R9144 += 1, R9050 += 1, R57 += 1, R58 += 1 };
  s0 -> s1 [67, 65535] { R9144 += 1, R9050 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [0, 65] { R9144 += 1, R9050 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [0, 65535] { R9144 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R9144 += 1, R9050 += 1, R57 += 1, R58 += 1 };
  s1 -> s4 [66, 66] { R9144 += 1, R9050 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [67, 65535] { R9144 += 1, R9050 += 1, R57 += 1, R58 += 1 };
  s2 -> s1 [0, 65] { R9144 += 1, R9050 += 1, R57 += 1, R58 += 1 };
  s2 -> s2 [0, 65535] { R9144 += 1, R9049 += 1, R9050 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R9144 += 1, R9050 += 1, R57 += 1, R58 += 1 };
  s2 -> s4 [66, 66] { R9144 += 1, R9050 += 1, R57 += 1, R58 += 1 };
  s2 -> s1 [67, 65535] { R9144 += 1, R9050 += 1, R57 += 1, R58 += 1 };
  s3 -> s3 [0, 65535] { R9144 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R9144 += 1, R9050 += 1, R57 += 1, R58 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R9144 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9144 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 65] { R9146 += 1, R9052 += 1, R63 += 1, R64 += 1 };
  s0 -> s2 [0, 65535] { R9146 += 1, R9051 += 1, R9052 += 1 };
  s0 -> s0 [0, 65535] { R9145 += 1, R9146 += 1 };
  s0 -> s3 [66, 66] { R9146 += 1, R9052 += 1, R63 += 1, R64 += 1 };
  s0 -> s4 [66, 66] { R9146 += 1, R9052 += 1, R63 += 1, R64 += 1 };
  s0 -> s1 [67, 65535] { R9146 += 1, R9052 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [0, 65] { R9146 += 1, R9052 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [0, 65535] { R9146 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [66, 66] { R9146 += 1, R9052 += 1, R63 += 1, R64 += 1 };
  s1 -> s4 [66, 66] { R9146 += 1, R9052 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [67, 65535] { R9146 += 1, R9052 += 1, R63 += 1, R64 += 1 };
  s2 -> s1 [0, 65] { R9146 += 1, R9052 += 1, R63 += 1, R64 += 1 };
  s2 -> s2 [0, 65535] { R9146 += 1, R9051 += 1, R9052 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [66, 66] { R9146 += 1, R9052 += 1, R63 += 1, R64 += 1 };
  s2 -> s4 [66, 66] { R9146 += 1, R9052 += 1, R63 += 1, R64 += 1 };
  s2 -> s1 [67, 65535] { R9146 += 1, R9052 += 1, R63 += 1, R64 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R9146 += 1 };
  s4 -> s5 [0, 65535] { R9146 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R9146 += 1, R9052 += 1, R63 += 1, R64 += 1 };
  s5 -> s5 [0, 65535] { R9146 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65] { R9148 += 1, R9054 += 1, R67 += 1, R68 += 1 };
  s0 -> s2 [0, 65535] { R9148 += 1, R9053 += 1, R9054 += 1 };
  s0 -> s0 [0, 65535] { R9147 += 1, R9148 += 1 };
  s0 -> s3 [66, 66] { R9148 += 1, R9054 += 1, R67 += 1, R68 += 1 };
  s0 -> s4 [66, 66] { R9148 += 1, R9054 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [67, 65535] { R9148 += 1, R9054 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65] { R9148 += 1, R9054 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535] { R9148 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [66, 66] { R9148 += 1, R9054 += 1, R67 += 1, R68 += 1 };
  s1 -> s4 [66, 66] { R9148 += 1, R9054 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [67, 65535] { R9148 += 1, R9054 += 1, R67 += 1, R68 += 1 };
  s2 -> s1 [0, 65] { R9148 += 1, R9054 += 1, R67 += 1, R68 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R9148 += 1, R9053 += 1, R9054 += 1 };
  s2 -> s3 [66, 66] { R9148 += 1, R9054 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [66, 66] { R9148 += 1, R9054 += 1, R67 += 1, R68 += 1 };
  s2 -> s1 [67, 65535] { R9148 += 1, R9054 += 1, R67 += 1, R68 += 1 };
  s3 -> s3 [0, 65535] { R9148 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R9148 += 1, R9054 += 1, R67 += 1, R68 += 1 };
  s4 -> s5 [0, 65535] { R9148 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R9148 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 65] { R9150 += 1, R9056 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R9149 += 1, R9150 += 1 };
  s0 -> s2 [0, 65535] { R9150 += 1, R9055 += 1, R9056 += 1 };
  s0 -> s3 [66, 66] { R9150 += 1, R9056 += 1, R73 += 1, R74 += 1 };
  s0 -> s4 [66, 66] { R9150 += 1, R9056 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [67, 65535] { R9150 += 1, R9056 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65] { R9150 += 1, R9056 += 1, R73 += 1, R74 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R9150 += 1 };
  s1 -> s3 [66, 66] { R9150 += 1, R9056 += 1, R73 += 1, R74 += 1 };
  s1 -> s4 [66, 66] { R9150 += 1, R9056 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [67, 65535] { R9150 += 1, R9056 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [0, 65] { R9150 += 1, R9056 += 1, R73 += 1, R74 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R9150 += 1, R9055 += 1, R9056 += 1 };
  s2 -> s3 [66, 66] { R9150 += 1, R9056 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [66, 66] { R9150 += 1, R9056 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [67, 65535] { R9150 += 1, R9056 += 1, R73 += 1, R74 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R9150 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R9150 += 1 };
  s4 -> s4 [0, 65535] { R9150 += 1, R9056 += 1, R73 += 1, R74 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9150 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65] { R9152 += 1, R9076 += 1 };
  s0 -> s0 [0, 65535] { R9151 += 1, R9152 += 1 };
  s0 -> s2 [0, 65535] { R9152 += 1, R9075 += 1, R9076 += 1 };
  s0 -> s3 [66, 66] { R9152 += 1, R9076 += 1 };
  s0 -> s1 [67, 65535] { R9152 += 1, R9076 += 1 };
  s1 -> s1 [0, 65] { R9152 += 1, R9076 += 1 };
  s1 -> s3 [66, 66] { R9152 += 1, R9076 += 1 };
  s1 -> s1 [67, 65535] { R9152 += 1, R9076 += 1 };
  s2 -> s1 [0, 65] { R9152 += 1, R9076 += 1 };
  s2 -> s2 [0, 65535] { R9152 += 1, R9075 += 1, R9076 += 1 };
  s2 -> s3 [66, 66] { R9152 += 1, R9076 += 1 };
  s2 -> s1 [67, 65535] { R9152 += 1, R9076 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R9152 += 1, R9076 += 1 };
  s3 -> s5 [0, 65535] { R9152 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R9152 += 1 };
  accepting s3, s4, s5;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 65535] { R9154 += 1, R9077 += 1, R9078 += 1 };
  s0 -> s0 [0, 65535] { R9153 += 1, R9154 += 1 };
  s0 -> s2 [0, 65535] { R9154 += 1, R9078 += 1, R1 += 1 };
  s1 -> s1 [0, 65535] { R9154 += 1, R9077 += 1, R9078 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R9154 += 1, R9078 += 1, R1 += 1 };
  s2 -> s3 [0, 65535] { R9154 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R9154 += 1, R9078 += 1, R1 += 1 };
  s3 -> s3 [0, 65535] { R9154 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65] { R9156 += 1, R9080 += 1 };
  s0 -> s2 [0, 65535] { R9156 += 1, R9080 += 1, R11 += 1 };
  s0 -> s0 [0, 65535] { R9155 += 1, R9156 += 1 };
  s0 -> s3 [0, 65535] { R9156 += 1, R9079 += 1, R9080 += 1 };
  s0 -> s4 [66, 66] { R9156 += 1, R9080 += 1 };
  s0 -> s1 [67, 65535] { R9156 += 1, R9080 += 1 };
  s1 -> s1 [0, 65] { R9156 += 1, R9080 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R9156 += 1 };
  s1 -> s4 [66, 66] { R9156 += 1, R9080 += 1 };
  s1 -> s1 [67, 65535] { R9156 += 1, R9080 += 1 };
  s2 -> s1 [0, 65] { R9156 += 1, R9080 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R9156 += 1 };
  s2 -> s2 [0, 65535] { R9156 += 1, R9080 += 1, R11 += 1 };
  s2 -> s4 [66, 66] { R9156 += 1, R9080 += 1 };
  s2 -> s1 [67, 65535] { R9156 += 1, R9080 += 1 };
  s3 -> s1 [0, 65] { R9156 += 1, R9080 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R9156 += 1, R9080 += 1, R11 += 1 };
  s3 -> s3 [0, 65535] { R9156 += 1, R9079 += 1, R9080 += 1 };
  s3 -> s4 [66, 66] { R9156 += 1, R9080 += 1 };
  s3 -> s1 [67, 65535] { R9156 += 1, R9080 += 1 };
  s4 -> s4 [0, 65535] { R9156 += 1, R9080 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9156 += 1 };
  accepting s3, s5, s2, s6, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65] { R9158 += 1, R9082 += 1, R9020 += 1 };
  s0 -> s2 [0, 65535] { R9158 += 1, R9081 += 1, R9082 += 1 };
  s0 -> s0 [0, 65535] { R9157 += 1, R9158 += 1 };
  s0 -> s3 [0, 65535] { R9158 += 1, R9082 += 1, R9019 += 1, R9020 += 1 };
  s0 -> s1 [67, 65535] { R9158 += 1, R9082 += 1, R9020 += 1 };
  s1 -> s1 [0, 65] { R9158 += 1, R9082 += 1, R9020 += 1 };
  s1 -> s1 [0, 65535] { R9158 += 1, R9082 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R9158 += 1 };
  s1 -> s1 [67, 65535] { R9158 += 1, R9082 += 1, R9020 += 1 };
  s2 -> s1 [0, 65] { R9158 += 1, R9082 += 1, R9020 += 1 };
  s2 -> s2 [0, 65535] { R9158 += 1, R9081 += 1, R9082 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R9158 += 1, R9082 += 1, R9019 += 1, R9020 += 1 };
  s2 -> s1 [67, 65535] { R9158 += 1, R9082 += 1, R9020 += 1 };
  s3 -> s1 [0, 65] { R9158 += 1, R9082 += 1, R9020 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R9158 += 1 };
  s3 -> s3 [0, 65535] { R9158 += 1, R9082 += 1, R9019 += 1, R9020 += 1 };
  s3 -> s1 [67, 65535] { R9158 += 1, R9082 += 1, R9020 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R9158 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 65535] { R9160 += 1, R9084 += 1, R9022 += 1, R20 += 1 };
  s0 -> s2 [0, 65535] { R9160 += 1, R9084 += 1, R9021 += 1, R9022 += 1 };
  s0 -> s3 [0, 65535] { R9160 += 1, R9083 += 1, R9084 += 1 };
  s0 -> s0 [0, 65535] { R9159 += 1, R9160 += 1 };
  s1 -> s6 [0, 65535] { R9160 += 1, R9084 += 1 };
  s1 -> s5 [0, 65535] { R9160 += 1 };
  s1 -> s1 [0, 65535] { R9160 += 1, R9084 += 1, R9022 += 1, R20 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R9160 += 1 };
  s2 -> s1 [0, 65535] { R9160 += 1, R9084 += 1, R9022 += 1, R20 += 1 };
  s2 -> s2 [0, 65535] { R9160 += 1, R9084 += 1, R9021 += 1, R9022 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R9160 += 1, R9084 += 1, R9022 += 1, R20 += 1 };
  s3 -> s2 [0, 65535] { R9160 += 1, R9084 += 1, R9021 += 1, R9022 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R9160 += 1, R9083 += 1, R9084 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R9160 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R9160 += 1, R9084 += 1 };
  s6 -> s5 [0, 65535] { R9160 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 66] { R9162 += 1, R9086 += 1, R9024 += 1 };
  s0 -> s2 [0, 65535] { R9162 += 1, R9085 += 1, R9086 += 1 };
  s0 -> s0 [0, 65535] { R9161 += 1, R9162 += 1 };
  s0 -> s3 [0, 65535] { R9162 += 1, R9086 += 1, R9023 += 1, R9024 += 1 };
  s0 -> s1 [70, 65535] { R9162 += 1, R9086 += 1, R9024 += 1 };
  s1 -> s1 [0, 66] { R9162 += 1, R9086 += 1, R9024 += 1 };
  s1 -> s1 [0, 65535] { R9162 += 1, R9086 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R9162 += 1 };
  s1 -> s1 [70, 65535] { R9162 += 1, R9086 += 1, R9024 += 1 };
  s2 -> s1 [0, 66] { R9162 += 1, R9086 += 1, R9024 += 1 };
  s2 -> s2 [0, 65535] { R9162 += 1, R9085 += 1, R9086 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R9162 += 1, R9086 += 1, R9023 += 1, R9024 += 1 };
  s2 -> s1 [70, 65535] { R9162 += 1, R9086 += 1, R9024 += 1 };
  s3 -> s1 [0, 66] { R9162 += 1, R9086 += 1, R9024 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R9162 += 1, R9086 += 1, R9023 += 1, R9024 += 1 };
  s3 -> s5 [0, 65535] { R9162 += 1 };
  s3 -> s1 [70, 65535] { R9162 += 1, R9086 += 1, R9024 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R9162 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R9164 += 1, R9087 += 1, R9088 += 1 };
  s0 -> s2 [0, 65535] { R9164 += 1, R9088 += 1, R9025 += 1, R9026 += 1 };
  s0 -> s3 [0, 65535] { R9164 += 1, R9088 += 1, R9026 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R9163 += 1, R9164 += 1 };
  s1 -> s1 [0, 65535] { R9164 += 1, R9087 += 1, R9088 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R9164 += 1, R9088 += 1, R9025 += 1, R9026 += 1 };
  s1 -> s3 [0, 65535] { R9164 += 1, R9088 += 1, R9026 += 1, R78 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R9164 += 1 };
  s2 -> s2 [0, 65535] { R9164 += 1, R9088 += 1, R9025 += 1, R9026 += 1 };
  s2 -> s3 [0, 65535] { R9164 += 1, R9088 += 1, R9026 += 1, R78 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R9164 += 1 };
  s3 -> s6 [0, 65535] { R9164 += 1, R9088 += 1 };
  s3 -> s3 [0, 65535] { R9164 += 1, R9088 += 1, R9026 += 1, R78 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R9164 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R9164 += 1 };
  s6 -> s6 [0, 65535] { R9164 += 1, R9088 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 69] { R9166 += 1, R9090 += 1, R9028 += 1 };
  s0 -> s2 [0, 65535] { R9166 += 1, R9090 += 1, R9027 += 1, R9028 += 1 };
  s0 -> s3 [0, 65535] { R9166 += 1, R9090 += 1, R9028 += 1, R80 += 1 };
  s0 -> s4 [0, 65535] { R9166 += 1, R9089 += 1, R9090 += 1 };
  s0 -> s0 [0, 65535] { R9165 += 1, R9166 += 1 };
  s0 -> s1 [71, 65535] { R9166 += 1, R9090 += 1, R9028 += 1 };
  s1 -> s1 [0, 69] { R9166 += 1, R9090 += 1, R9028 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R9166 += 1, R9090 += 1 };
  s1 -> s7 [0, 65535] { R9166 += 1 };
  s1 -> s1 [71, 65535] { R9166 += 1, R9090 += 1, R9028 += 1 };
  s2 -> s1 [0, 69] { R9166 += 1, R9090 += 1, R9028 += 1 };
  s2 -> s2 [0, 65535] { R9166 += 1, R9090 += 1, R9027 += 1, R9028 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R9166 += 1, R9090 += 1, R9028 += 1, R80 += 1 };
  s2 -> s7 [0, 65535] { R9166 += 1 };
  s2 -> s1 [71, 65535] { R9166 += 1, R9090 += 1, R9028 += 1 };
  s3 -> s1 [0, 69] { R9166 += 1, R9090 += 1, R9028 += 1 };
  s3 -> s6 [0, 65535] { R9166 += 1, R9090 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R9166 += 1, R9090 += 1, R9028 += 1, R80 += 1 };
  s3 -> s7 [0, 65535] { R9166 += 1 };
  s3 -> s1 [71, 65535] { R9166 += 1, R9090 += 1, R9028 += 1 };
  s4 -> s1 [0, 69] { R9166 += 1, R9090 += 1, R9028 += 1 };
  s4 -> s2 [0, 65535] { R9166 += 1, R9090 += 1, R9027 += 1, R9028 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R9166 += 1, R9090 += 1, R9028 += 1, R80 += 1 };
  s4 -> s4 [0, 65535] { R9166 += 1, R9089 += 1, R9090 += 1 };
  s4 -> s1 [71, 65535] { R9166 += 1, R9090 += 1, R9028 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9166 += 1, R9090 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s7 [0, 65535] { R9166 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R9166 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R9168 += 1, R9092 += 1, R9030 += 1, R84 += 1 };
  s0 -> s2 [0, 65535] { R9168 += 1, R9091 += 1, R9092 += 1 };
  s0 -> s3 [0, 65535] { R9168 += 1, R9092 += 1, R9030 += 1, R83 += 1, R84 += 1 };
  s0 -> s4 [0, 65535] { R9168 += 1, R9092 += 1, R9029 += 1, R9030 += 1 };
  s0 -> s0 [0, 65535] { R9167 += 1, R9168 += 1 };
  s0 -> s1 [71, 65535] { R9168 += 1, R9092 += 1, R9030 += 1, R84 += 1 };
  s1 -> s1 [0, 69] { R9168 += 1, R9092 += 1, R9030 += 1, R84 += 1 };
  s1 -> s5 [0, 65535] { R9168 += 1 };
  s1 -> s1 [0, 65535] { R9168 += 1, R9092 += 1, R9030 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R9168 += 1, R9092 += 1 };
  s1 -> s1 [71, 65535] { R9168 += 1, R9092 += 1, R9030 += 1, R84 += 1 };
  s2 -> s1 [0, 69] { R9168 += 1, R9092 += 1, R9030 += 1, R84 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R9168 += 1, R9091 += 1, R9092 += 1 };
  s2 -> s3 [0, 65535] { R9168 += 1, R9092 += 1, R9030 += 1, R83 += 1, R84 += 1 };
  s2 -> s4 [0, 65535] { R9168 += 1, R9092 += 1, R9029 += 1, R9030 += 1 };
  s2 -> s1 [71, 65535] { R9168 += 1, R9092 += 1, R9030 += 1, R84 += 1 };
  s3 -> s1 [0, 69] { R9168 += 1, R9092 += 1, R9030 += 1, R84 += 1 };
  s3 -> s5 [0, 65535] { R9168 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R9168 += 1, R9092 += 1 };
  s3 -> s3 [0, 65535] { R9168 += 1, R9092 += 1, R9030 += 1, R83 += 1, R84 += 1 };
  s3 -> s1 [71, 65535] { R9168 += 1, R9092 += 1, R9030 += 1, R84 += 1 };
  s4 -> s1 [0, 69] { R9168 += 1, R9092 += 1, R9030 += 1, R84 += 1 };
  s4 -> s5 [0, 65535] { R9168 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s3 [0, 65535] { R9168 += 1, R9092 += 1, R9030 += 1, R83 += 1, R84 += 1 };
  s4 -> s4 [0, 65535] { R9168 += 1, R9092 += 1, R9029 += 1, R9030 += 1 };
  s4 -> s1 [71, 65535] { R9168 += 1, R9092 += 1, R9030 += 1, R84 += 1 };
  s5 -> s5 [0, 65535] { R9168 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R9168 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R9168 += 1, R9092 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R9170 += 1, R9094 += 1, R9032 += 1, R8823 += 1, R8824 += 1 };
  s0 -> s2 [0, 65535] { R9170 += 1, R9093 += 1, R9094 += 1 };
  s0 -> s3 [0, 65535] { R9170 += 1, R9094 += 1, R9031 += 1, R9032 += 1 };
  s0 -> s4 [0, 65535] { R9170 += 1, R9094 += 1, R9032 += 1 };
  s0 -> s0 [0, 65535] { R9169 += 1, R9170 += 1 };
  s1 -> s5 [0, 65535] { R9170 += 1, R9094 += 1 };
  s1 -> s6 [0, 65535] { R9170 += 1 };
  s1 -> s1 [0, 65535] { R9170 += 1, R9094 += 1, R9032 += 1, R8823 += 1, R8824 += 1 };
  s1 -> s4 [0, 65535] { R9170 += 1, R9094 += 1, R9032 += 1 };
  s1 -> s7 [0, 65535];
  s2 -> s1 [0, 65535] { R9170 += 1, R9094 += 1, R9032 += 1, R8823 += 1, R8824 += 1 };
  s2 -> s2 [0, 65535] { R9170 += 1, R9093 += 1, R9094 += 1 };
  s2 -> s3 [0, 65535] { R9170 += 1, R9094 += 1, R9031 += 1, R9032 += 1 };
  s2 -> s4 [0, 65535] { R9170 += 1, R9094 += 1, R9032 += 1 };
  s2 -> s7 [0, 65535];
  s3 -> s6 [0, 65535] { R9170 += 1 };
  s3 -> s1 [0, 65535] { R9170 += 1, R9094 += 1, R9032 += 1, R8823 += 1, R8824 += 1 };
  s3 -> s3 [0, 65535] { R9170 += 1, R9094 += 1, R9031 += 1, R9032 += 1 };
  s3 -> s4 [0, 65535] { R9170 += 1, R9094 += 1, R9032 += 1 };
  s3 -> s7 [0, 65535];
  s4 -> s5 [0, 65535] { R9170 += 1, R9094 += 1 };
  s4 -> s6 [0, 65535] { R9170 += 1 };
  s4 -> s4 [0, 65535] { R9170 += 1, R9094 += 1, R9032 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R9170 += 1, R9094 += 1 };
  s5 -> s6 [0, 65535] { R9170 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R9170 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R9172 += 1, R9096 += 1, R9034 += 1, R8828 += 1 };
  s0 -> s0 [0, 65535] { R9171 += 1, R9172 += 1 };
  s0 -> s2 [0, 65535] { R9172 += 1, R9096 += 1, R9034 += 1 };
  s0 -> s3 [0, 65535] { R9172 += 1, R9096 += 1, R9033 += 1, R9034 += 1 };
  s0 -> s4 [0, 65535] { R9172 += 1, R9095 += 1, R9096 += 1 };
  s1 -> s1 [0, 65535] { R9172 += 1, R9096 += 1, R9034 += 1, R8828 += 1 };
  s1 -> s2 [0, 65535] { R9172 += 1, R9096 += 1, R9034 += 1 };
  s1 -> s7 [0, 65535] { R9172 += 1, R9096 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R9172 += 1 };
  s2 -> s2 [0, 65535] { R9172 += 1, R9096 += 1, R9034 += 1 };
  s2 -> s7 [0, 65535] { R9172 += 1, R9096 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R9172 += 1 };
  s3 -> s1 [0, 65535] { R9172 += 1, R9096 += 1, R9034 += 1, R8828 += 1 };
  s3 -> s2 [0, 65535] { R9172 += 1, R9096 += 1, R9034 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R9172 += 1, R9096 += 1, R9033 += 1, R9034 += 1 };
  s3 -> s6 [0, 65535] { R9172 += 1 };
  s4 -> s1 [0, 65535] { R9172 += 1, R9096 += 1, R9034 += 1, R8828 += 1 };
  s4 -> s2 [0, 65535] { R9172 += 1, R9096 += 1, R9034 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R9172 += 1, R9096 += 1, R9033 += 1, R9034 += 1 };
  s4 -> s4 [0, 65535] { R9172 += 1, R9095 += 1, R9096 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9172 += 1 };
  s7 -> s7 [0, 65535] { R9172 += 1, R9096 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R9172 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s0 [0, 65535] { R9173 += 1, R9174 += 1 };
  s0 -> s1 [0, 65535] { R9174 += 1, R9098 += 1, R9036 += 1, R8833 += 1, R8834 += 1 };
  s0 -> s2 [0, 65535] { R9174 += 1, R9098 += 1, R9036 += 1, R8832 += 1, R8833 += 1 };
  s0 -> s3 [0, 65535] { R9174 += 1, R9097 += 1, R9098 += 1 };
  s0 -> s4 [0, 65535] { R9174 += 1, R9098 += 1, R9035 += 1, R9036 += 1 };
  s1 -> s5 [0, 65535] { R9174 += 1 };
  s1 -> s8 [0, 65535] { R9174 += 1, R9098 += 1, R9036 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R9174 += 1, R9098 += 1, R9036 += 1, R8833 += 1, R8834 += 1 };
  s1 -> s7 [0, 65535] { R9174 += 1, R9098 += 1 };
  s2 -> s5 [0, 65535] { R9174 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [0, 65535] { R9174 += 1, R9098 += 1, R9036 += 1, R8833 += 1, R8834 += 1 };
  s2 -> s2 [0, 65535] { R9174 += 1, R9098 += 1, R9036 += 1, R8832 += 1, R8833 += 1 };
  s2 -> s7 [0, 65535] { R9174 += 1, R9098 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [0, 65535] { R9174 += 1, R9098 += 1, R9036 += 1, R8833 += 1, R8834 += 1 };
  s3 -> s2 [0, 65535] { R9174 += 1, R9098 += 1, R9036 += 1, R8832 += 1, R8833 += 1 };
  s3 -> s3 [0, 65535] { R9174 += 1, R9097 += 1, R9098 += 1 };
  s3 -> s4 [0, 65535] { R9174 += 1, R9098 += 1, R9035 += 1, R9036 += 1 };
  s4 -> s5 [0, 65535] { R9174 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s1 [0, 65535] { R9174 += 1, R9098 += 1, R9036 += 1, R8833 += 1, R8834 += 1 };
  s4 -> s2 [0, 65535] { R9174 += 1, R9098 += 1, R9036 += 1, R8832 += 1, R8833 += 1 };
  s4 -> s4 [0, 65535] { R9174 += 1, R9098 += 1, R9035 += 1, R9036 += 1 };
  s5 -> s5 [0, 65535] { R9174 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R9174 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R9174 += 1, R9098 += 1 };
  s8 -> s5 [0, 65535] { R9174 += 1 };
  s8 -> s8 [0, 65535] { R9174 += 1, R9098 += 1, R9036 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R9174 += 1, R9098 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R9176 += 1, R9100 += 1, R9038 += 1, R9018 += 1 };
  s0 -> s1 [0, 65535] { R9176 += 1, R9100 += 1, R9038 += 1 };
  s0 -> s2 [0, 65535] { R9176 += 1, R9100 += 1, R9037 += 1, R9038 += 1 };
  s0 -> s3 [0, 65535] { R9176 += 1, R9099 += 1, R9100 += 1 };
  s0 -> s0 [0, 65535] { R9175 += 1, R9176 += 1 };
  s0 -> s4 [70, 70] { R9176 += 1, R9100 += 1, R9038 += 1, R9018 += 1 };
  s0 -> s5 [70, 70] { R9176 += 1, R9100 += 1, R9038 += 1, R9018 += 1 };
  s0 -> s1 [72, 65535] { R9176 += 1, R9100 += 1, R9038 += 1, R9018 += 1 };
  s1 -> s1 [0, 69] { R9176 += 1, R9100 += 1, R9038 += 1, R9018 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R9176 += 1, R9100 += 1, R9038 += 1 };
  s1 -> s7 [0, 65535] { R9176 += 1, R9100 += 1 };
  s1 -> s8 [0, 65535] { R9176 += 1 };
  s1 -> s4 [70, 70] { R9176 += 1, R9100 += 1, R9038 += 1, R9018 += 1 };
  s1 -> s5 [70, 70] { R9176 += 1, R9100 += 1, R9038 += 1, R9018 += 1 };
  s1 -> s1 [72, 65535] { R9176 += 1, R9100 += 1, R9038 += 1, R9018 += 1 };
  s2 -> s1 [0, 69] { R9176 += 1, R9100 += 1, R9038 += 1, R9018 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [0, 65535] { R9176 += 1, R9100 += 1, R9038 += 1 };
  s2 -> s2 [0, 65535] { R9176 += 1, R9100 += 1, R9037 += 1, R9038 += 1 };
  s2 -> s8 [0, 65535] { R9176 += 1 };
  s2 -> s4 [70, 70] { R9176 += 1, R9100 += 1, R9038 += 1, R9018 += 1 };
  s2 -> s5 [70, 70] { R9176 += 1, R9100 += 1, R9038 += 1, R9018 += 1 };
  s2 -> s1 [72, 65535] { R9176 += 1, R9100 += 1, R9038 += 1, R9018 += 1 };
  s3 -> s1 [0, 69] { R9176 += 1, R9100 += 1, R9038 += 1, R9018 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [0, 65535] { R9176 += 1, R9100 += 1, R9038 += 1 };
  s3 -> s2 [0, 65535] { R9176 += 1, R9100 += 1, R9037 += 1, R9038 += 1 };
  s3 -> s3 [0, 65535] { R9176 += 1, R9099 += 1, R9100 += 1 };
  s3 -> s4 [70, 70] { R9176 += 1, R9100 += 1, R9038 += 1, R9018 += 1 };
  s3 -> s5 [70, 70] { R9176 += 1, R9100 += 1, R9038 += 1, R9018 += 1 };
  s3 -> s1 [72, 65535] { R9176 += 1, R9100 += 1, R9038 += 1, R9018 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R9176 += 1, R9100 += 1, R9038 += 1 };
  s4 -> s7 [0, 65535] { R9176 += 1, R9100 += 1 };
  s4 -> s8 [0, 65535] { R9176 += 1 };
  s5 -> s5 [0, 70] { R9176 += 1, R9100 += 1, R9038 += 1, R9018 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R9176 += 1, R9100 += 1 };
  s5 -> s5 [0, 65535] { R9176 += 1, R9100 += 1, R9038 += 1 };
  s5 -> s8 [0, 65535] { R9176 += 1 };
  s5 -> s5 [72, 65535] { R9176 += 1, R9100 += 1, R9038 += 1, R9018 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R9176 += 1, R9100 += 1 };
  s7 -> s8 [0, 65535] { R9176 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R9176 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s0 [0, 65535] { R9177 += 1, R9178 += 1 };
  s0 -> s1 [0, 65535] { R9178 += 1, R9102 += 1, R9057 += 1, R9058 += 1 };
  s0 -> s2 [0, 65535] { R9178 += 1, R9102 += 1, R9058 += 1, R21 += 1 };
  s0 -> s3 [0, 65535] { R9178 += 1, R9101 += 1, R9102 += 1 };
  s1 -> s5 [0, 65535] { R9178 += 1 };
  s1 -> s1 [0, 65535] { R9178 += 1, R9102 += 1, R9057 += 1, R9058 += 1 };
  s1 -> s2 [0, 65535] { R9178 += 1, R9102 += 1, R9058 += 1, R21 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R9178 += 1 };
  s2 -> s2 [0, 65535] { R9178 += 1, R9102 += 1, R9058 += 1, R21 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s6 [0, 65535] { R9178 += 1, R9102 += 1 };
  s3 -> s1 [0, 65535] { R9178 += 1, R9102 += 1, R9057 += 1, R9058 += 1 };
  s3 -> s2 [0, 65535] { R9178 += 1, R9102 += 1, R9058 += 1, R21 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R9178 += 1, R9101 += 1, R9102 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R9178 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R9178 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R9178 += 1, R9102 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 65] { R9180 += 1, R9104 += 1, R9060 += 1 };
  s0 -> s0 [0, 65535] { R9179 += 1, R9180 += 1 };
  s0 -> s2 [0, 65535] { R9180 += 1, R9103 += 1, R9104 += 1 };
  s0 -> s3 [0, 65535] { R9180 += 1, R9104 += 1, R9059 += 1, R9060 += 1 };
  s0 -> s4 [66, 66] { R9180 += 1, R9104 += 1, R9060 += 1 };
  s0 -> s5 [66, 66] { R9180 += 1, R9104 += 1, R9060 += 1 };
  s0 -> s6 [70, 70] { R9180 += 1, R9104 += 1, R9060 += 1 };
  s0 -> s1 [71, 65535] { R9180 += 1, R9104 += 1, R9060 += 1 };
  s1 -> s1 [0, 65] { R9180 += 1, R9104 += 1, R9060 += 1 };
  s1 -> s4 [66, 66] { R9180 += 1, R9104 += 1, R9060 += 1 };
  s1 -> s5 [66, 66] { R9180 += 1, R9104 += 1, R9060 += 1 };
  s1 -> s6 [70, 70] { R9180 += 1, R9104 += 1, R9060 += 1 };
  s1 -> s1 [71, 65535] { R9180 += 1, R9104 += 1, R9060 += 1 };
  s2 -> s1 [0, 65] { R9180 += 1, R9104 += 1, R9060 += 1 };
  s2 -> s2 [0, 65535] { R9180 += 1, R9103 += 1, R9104 += 1 };
  s2 -> s3 [0, 65535] { R9180 += 1, R9104 += 1, R9059 += 1, R9060 += 1 };
  s2 -> s4 [66, 66] { R9180 += 1, R9104 += 1, R9060 += 1 };
  s2 -> s5 [66, 66] { R9180 += 1, R9104 += 1, R9060 += 1 };
  s2 -> s6 [70, 70] { R9180 += 1, R9104 += 1, R9060 += 1 };
  s2 -> s1 [71, 65535] { R9180 += 1, R9104 += 1, R9060 += 1 };
  s3 -> s1 [0, 65] { R9180 += 1, R9104 += 1, R9060 += 1 };
  s3 -> s3 [0, 65535] { R9180 += 1, R9104 += 1, R9059 += 1, R9060 += 1 };
  s3 -> s4 [66, 66] { R9180 += 1, R9104 += 1, R9060 += 1 };
  s3 -> s5 [66, 66] { R9180 += 1, R9104 += 1, R9060 += 1 };
  s3 -> s6 [70, 70] { R9180 += 1, R9104 += 1, R9060 += 1 };
  s3 -> s1 [71, 65535] { R9180 += 1, R9104 += 1, R9060 += 1 };
  s5 -> s5 [0, 66] { R9180 += 1, R9104 += 1, R9060 += 1 };
  s5 -> s9 [70, 70] { R9180 += 1, R9104 += 1, R9060 += 1 };
  s5 -> s5 [71, 65535] { R9180 += 1, R9104 += 1, R9060 += 1 };
  s6 -> s6 [0, 65] { R9180 += 1, R9104 += 1, R9060 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R9180 += 1 };
  s6 -> s6 [0, 65535] { R9180 += 1, R9104 += 1 };
  s6 -> s9 [66, 66] { R9180 += 1, R9104 += 1, R9060 += 1 };
  s6 -> s10 [66, 66] { R9180 += 1, R9104 += 1, R9060 += 1 };
  s6 -> s6 [70, 65535] { R9180 += 1, R9104 += 1, R9060 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R9180 += 1 };
  s9 -> s9 [0, 66] { R9180 += 1, R9104 += 1, R9060 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s8 [0, 65535] { R9180 += 1 };
  s9 -> s9 [0, 65535] { R9180 += 1, R9104 += 1 };
  s9 -> s9 [70, 65535] { R9180 += 1, R9104 += 1, R9060 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s8 [0, 65535] { R9180 += 1 };
  s10 -> s10 [0, 65535] { R9180 += 1, R9104 += 1 };
  accepting s8, s9, s6, s7, s10;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65] { R9182 += 1, R9106 += 1, R9062 += 1, R77 += 1 };
  s0 -> s2 [0, 65535] { R9182 += 1, R9106 += 1, R9061 += 1, R9062 += 1 };
  s0 -> s3 [0, 65535] { R9182 += 1, R9105 += 1, R9106 += 1 };
  s0 -> s0 [0, 65535] { R9181 += 1, R9182 += 1 };
  s0 -> s4 [66, 66] { R9182 += 1, R9106 += 1, R9062 += 1, R77 += 1 };
  s0 -> s5 [66, 66] { R9182 += 1, R9106 += 1, R9062 += 1, R77 += 1 };
  s0 -> s1 [67, 65535] { R9182 += 1, R9106 += 1, R9062 += 1, R77 += 1 };
  s1 -> s1 [0, 65] { R9182 += 1, R9106 += 1, R9062 += 1, R77 += 1 };
  s1 -> s1 [0, 65535] { R9182 += 1, R9106 += 1 };
  s1 -> s6 [0, 65535] { R9182 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [66, 66] { R9182 += 1, R9106 += 1, R9062 += 1, R77 += 1 };
  s1 -> s5 [66, 66] { R9182 += 1, R9106 += 1, R9062 += 1, R77 += 1 };
  s1 -> s1 [67, 65535] { R9182 += 1, R9106 += 1, R9062 += 1, R77 += 1 };
  s2 -> s1 [0, 65] { R9182 += 1, R9106 += 1, R9062 += 1, R77 += 1 };
  s2 -> s6 [0, 65535] { R9182 += 1 };
  s2 -> s2 [0, 65535] { R9182 += 1, R9106 += 1, R9061 += 1, R9062 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [66, 66] { R9182 += 1, R9106 += 1, R9062 += 1, R77 += 1 };
  s2 -> s5 [66, 66] { R9182 += 1, R9106 += 1, R9062 += 1, R77 += 1 };
  s2 -> s1 [67, 65535] { R9182 += 1, R9106 += 1, R9062 += 1, R77 += 1 };
  s3 -> s1 [0, 65] { R9182 += 1, R9106 += 1, R9062 += 1, R77 += 1 };
  s3 -> s2 [0, 65535] { R9182 += 1, R9106 += 1, R9061 += 1, R9062 += 1 };
  s3 -> s3 [0, 65535] { R9182 += 1, R9105 += 1, R9106 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [66, 66] { R9182 += 1, R9106 += 1, R9062 += 1, R77 += 1 };
  s3 -> s5 [66, 66] { R9182 += 1, R9106 += 1, R9062 += 1, R77 += 1 };
  s3 -> s1 [67, 65535] { R9182 += 1, R9106 += 1, R9062 += 1, R77 += 1 };
  s4 -> s6 [0, 65535] { R9182 += 1 };
  s4 -> s4 [0, 65535] { R9182 += 1, R9106 += 1, R9062 += 1, R77 += 1 };
  s4 -> s8 [0, 65535] { R9182 += 1, R9106 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s6 [0, 65535] { R9182 += 1 };
  s5 -> s5 [0, 65535] { R9182 += 1, R9106 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R9182 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R9182 += 1 };
  s8 -> s8 [0, 65535] { R9182 += 1, R9106 += 1 };
  s8 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 65] { R9184 += 1, R9108 += 1, R9064 += 1, R79 += 1 };
  s0 -> s0 [0, 65535] { R9183 += 1, R9184 += 1 };
  s0 -> s2 [0, 65535] { R9184 += 1, R9108 += 1, R9063 += 1, R9064 += 1 };
  s0 -> s3 [0, 65535] { R9184 += 1, R9107 += 1, R9108 += 1 };
  s0 -> s4 [66, 66] { R9184 += 1, R9108 += 1, R9064 += 1, R79 += 1 };
  s0 -> s5 [66, 66] { R9184 += 1, R9108 += 1, R9064 += 1, R79 += 1 };
  s0 -> s1 [67, 65535] { R9184 += 1, R9108 += 1, R9064 += 1, R79 += 1 };
  s1 -> s1 [0, 65] { R9184 += 1, R9108 += 1, R9064 += 1, R79 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R9184 += 1 };
  s1 -> s1 [0, 65535] { R9184 += 1, R9108 += 1 };
  s1 -> s4 [66, 66] { R9184 += 1, R9108 += 1, R9064 += 1, R79 += 1 };
  s1 -> s5 [66, 66] { R9184 += 1, R9108 += 1, R9064 += 1, R79 += 1 };
  s1 -> s1 [67, 65535] { R9184 += 1, R9108 += 1, R9064 += 1, R79 += 1 };
  s2 -> s1 [0, 65] { R9184 += 1, R9108 += 1, R9064 += 1, R79 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R9184 += 1 };
  s2 -> s2 [0, 65535] { R9184 += 1, R9108 += 1, R9063 += 1, R9064 += 1 };
  s2 -> s4 [66, 66] { R9184 += 1, R9108 += 1, R9064 += 1, R79 += 1 };
  s2 -> s5 [66, 66] { R9184 += 1, R9108 += 1, R9064 += 1, R79 += 1 };
  s2 -> s1 [67, 65535] { R9184 += 1, R9108 += 1, R9064 += 1, R79 += 1 };
  s3 -> s1 [0, 65] { R9184 += 1, R9108 += 1, R9064 += 1, R79 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R9184 += 1, R9108 += 1, R9063 += 1, R9064 += 1 };
  s3 -> s3 [0, 65535] { R9184 += 1, R9107 += 1, R9108 += 1 };
  s3 -> s4 [66, 66] { R9184 += 1, R9108 += 1, R9064 += 1, R79 += 1 };
  s3 -> s5 [66, 66] { R9184 += 1, R9108 += 1, R9064 += 1, R79 += 1 };
  s3 -> s1 [67, 65535] { R9184 += 1, R9108 += 1, R9064 += 1, R79 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R9184 += 1, R9108 += 1 };
  s4 -> s7 [0, 65535] { R9184 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R9184 += 1 };
  s5 -> s5 [0, 65535] { R9184 += 1, R9108 += 1, R9064 += 1, R79 += 1 };
  s5 -> s8 [0, 65535] { R9184 += 1, R9108 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R9184 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R9184 += 1 };
  s8 -> s8 [0, 65535] { R9184 += 1, R9108 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65] { R9186 += 1, R9110 += 1, R9066 += 1, R81 += 1, R82 += 1 };
  s0 -> s2 [0, 65535] { R9186 += 1, R9110 += 1, R9065 += 1, R9066 += 1 };
  s0 -> s0 [0, 65535] { R9185 += 1, R9186 += 1 };
  s0 -> s3 [0, 65535] { R9186 += 1, R9109 += 1, R9110 += 1 };
  s0 -> s4 [66, 66] { R9186 += 1, R9110 += 1, R9066 += 1, R81 += 1, R82 += 1 };
  s0 -> s5 [66, 66] { R9186 += 1, R9110 += 1, R9066 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [67, 65535] { R9186 += 1, R9110 += 1, R9066 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65] { R9186 += 1, R9110 += 1, R9066 += 1, R81 += 1, R82 += 1 };
  s1 -> s6 [0, 65535] { R9186 += 1 };
  s1 -> s1 [0, 65535] { R9186 += 1, R9110 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [66, 66] { R9186 += 1, R9110 += 1, R9066 += 1, R81 += 1, R82 += 1 };
  s1 -> s5 [66, 66] { R9186 += 1, R9110 += 1, R9066 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [67, 65535] { R9186 += 1, R9110 += 1, R9066 += 1, R81 += 1, R82 += 1 };
  s2 -> s1 [0, 65] { R9186 += 1, R9110 += 1, R9066 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535] { R9186 += 1, R9110 += 1, R9065 += 1, R9066 += 1 };
  s2 -> s6 [0, 65535] { R9186 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [66, 66] { R9186 += 1, R9110 += 1, R9066 += 1, R81 += 1, R82 += 1 };
  s2 -> s5 [66, 66] { R9186 += 1, R9110 += 1, R9066 += 1, R81 += 1, R82 += 1 };
  s2 -> s1 [67, 65535] { R9186 += 1, R9110 += 1, R9066 += 1, R81 += 1, R82 += 1 };
  s3 -> s1 [0, 65] { R9186 += 1, R9110 += 1, R9066 += 1, R81 += 1, R82 += 1 };
  s3 -> s2 [0, 65535] { R9186 += 1, R9110 += 1, R9065 += 1, R9066 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R9186 += 1, R9109 += 1, R9110 += 1 };
  s3 -> s4 [66, 66] { R9186 += 1, R9110 += 1, R9066 += 1, R81 += 1, R82 += 1 };
  s3 -> s5 [66, 66] { R9186 += 1, R9110 += 1, R9066 += 1, R81 += 1, R82 += 1 };
  s3 -> s1 [67, 65535] { R9186 += 1, R9110 += 1, R9066 += 1, R81 += 1, R82 += 1 };
  s4 -> s6 [0, 65535] { R9186 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R9186 += 1, R9110 += 1, R9066 += 1, R81 += 1, R82 += 1 };
  s4 -> s8 [0, 65535] { R9186 += 1, R9110 += 1 };
  s5 -> s6 [0, 65535] { R9186 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R9186 += 1, R9110 += 1 };
  s6 -> s6 [0, 65535] { R9186 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R9186 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R9186 += 1, R9110 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 65] { R9188 += 1, R9112 += 1, R9068 += 1, R8820 += 1, R8821 += 1 };
  s0 -> s2 [0, 65] { R9188 += 1, R9112 += 1, R9068 += 1, R8819 += 1, R8820 += 1 };
  s0 -> s3 [0, 65535] { R9188 += 1, R9112 += 1, R9067 += 1, R9068 += 1 };
  s0 -> s0 [0, 65535] { R9187 += 1, R9188 += 1 };
  s0 -> s4 [0, 65535] { R9188 += 1, R9111 += 1, R9112 += 1 };
  s0 -> s5 [66, 66] { R9188 += 1, R9112 += 1, R9068 += 1, R8819 += 1, R8820 += 1 };
  s0 -> s6 [66, 66] { R9188 += 1, R9112 += 1, R9068 += 1, R8819 += 1, R8820 += 1 };
  s0 -> s7 [66, 66] { R9188 += 1, R9112 += 1, R9068 += 1, R8820 += 1, R8821 += 1 };
  s0 -> s8 [66, 66] { R9188 += 1, R9112 += 1, R9068 += 1, R8820 += 1, R8821 += 1 };
  s0 -> s1 [67, 65535] { R9188 += 1, R9112 += 1, R9068 += 1, R8820 += 1, R8821 += 1 };
  s0 -> s2 [67, 65535] { R9188 += 1, R9112 += 1, R9068 += 1, R8819 += 1, R8820 += 1 };
  s1 -> s1 [0, 65] { R9188 += 1, R9112 += 1, R9068 += 1, R8820 += 1, R8821 += 1 };
  s1 -> s1 [0, 65535] { R9188 += 1, R9112 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s11 [0, 65535] { R9188 += 1 };
  s1 -> s7 [66, 66] { R9188 += 1, R9112 += 1, R9068 += 1, R8820 += 1, R8821 += 1 };
  s1 -> s8 [66, 66] { R9188 += 1, R9112 += 1, R9068 += 1, R8820 += 1, R8821 += 1 };
  s1 -> s1 [67, 65535] { R9188 += 1, R9112 += 1, R9068 += 1, R8820 += 1, R8821 += 1 };
  s2 -> s1 [0, 65] { R9188 += 1, R9112 += 1, R9068 += 1, R8820 += 1, R8821 += 1 };
  s2 -> s2 [0, 65] { R9188 += 1, R9112 += 1, R9068 += 1, R8819 += 1, R8820 += 1 };
  s2 -> s5 [66, 66] { R9188 += 1, R9112 += 1, R9068 += 1, R8819 += 1, R8820 += 1 };
  s2 -> s6 [66, 66] { R9188 += 1, R9112 += 1, R9068 += 1, R8819 += 1, R8820 += 1 };
  s2 -> s7 [66, 66] { R9188 += 1, R9112 += 1, R9068 += 1, R8820 += 1, R8821 += 1 };
  s2 -> s8 [66, 66] { R9188 += 1, R9112 += 1, R9068 += 1, R8820 += 1, R8821 += 1 };
  s2 -> s1 [67, 65535] { R9188 += 1, R9112 += 1, R9068 += 1, R8820 += 1, R8821 += 1 };
  s2 -> s2 [67, 65535] { R9188 += 1, R9112 += 1, R9068 += 1, R8819 += 1, R8820 += 1 };
  s3 -> s1 [0, 65] { R9188 += 1, R9112 += 1, R9068 += 1, R8820 += 1, R8821 += 1 };
  s3 -> s2 [0, 65] { R9188 += 1, R9112 += 1, R9068 += 1, R8819 += 1, R8820 += 1 };
  s3 -> s3 [0, 65535] { R9188 += 1, R9112 += 1, R9067 += 1, R9068 += 1 };
  s3 -> s5 [66, 66] { R9188 += 1, R9112 += 1, R9068 += 1, R8819 += 1, R8820 += 1 };
  s3 -> s6 [66, 66] { R9188 += 1, R9112 += 1, R9068 += 1, R8819 += 1, R8820 += 1 };
  s3 -> s7 [66, 66] { R9188 += 1, R9112 += 1, R9068 += 1, R8820 += 1, R8821 += 1 };
  s3 -> s8 [66, 66] { R9188 += 1, R9112 += 1, R9068 += 1, R8820 += 1, R8821 += 1 };
  s3 -> s1 [67, 65535] { R9188 += 1, R9112 += 1, R9068 += 1, R8820 += 1, R8821 += 1 };
  s3 -> s2 [67, 65535] { R9188 += 1, R9112 += 1, R9068 += 1, R8819 += 1, R8820 += 1 };
  s4 -> s1 [0, 65] { R9188 += 1, R9112 += 1, R9068 += 1, R8820 += 1, R8821 += 1 };
  s4 -> s2 [0, 65] { R9188 += 1, R9112 += 1, R9068 += 1, R8819 += 1, R8820 += 1 };
  s4 -> s3 [0, 65535] { R9188 += 1, R9112 += 1, R9067 += 1, R9068 += 1 };
  s4 -> s4 [0, 65535] { R9188 += 1, R9111 += 1, R9112 += 1 };
  s4 -> s5 [66, 66] { R9188 += 1, R9112 += 1, R9068 += 1, R8819 += 1, R8820 += 1 };
  s4 -> s6 [66, 66] { R9188 += 1, R9112 += 1, R9068 += 1, R8819 += 1, R8820 += 1 };
  s4 -> s7 [66, 66] { R9188 += 1, R9112 += 1, R9068 += 1, R8820 += 1, R8821 += 1 };
  s4 -> s8 [66, 66] { R9188 += 1, R9112 += 1, R9068 += 1, R8820 += 1, R8821 += 1 };
  s4 -> s1 [67, 65535] { R9188 += 1, R9112 += 1, R9068 += 1, R8820 += 1, R8821 += 1 };
  s4 -> s2 [67, 65535] { R9188 += 1, R9112 += 1, R9068 += 1, R8819 += 1, R8820 += 1 };
  s6 -> s6 [0, 65535] { R9188 += 1, R9112 += 1, R9068 += 1, R8819 += 1, R8820 += 1 };
  s6 -> s8 [0, 65535] { R9188 += 1, R9112 += 1, R9068 += 1, R8820 += 1, R8821 += 1 };
  s7 -> s9 [0, 65535];
  s7 -> s7 [0, 65535] { R9188 += 1, R9112 += 1 };
  s7 -> s11 [0, 65535] { R9188 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [0, 65535] { R9188 += 1, R9112 += 1 };
  s8 -> s8 [0, 65535] { R9188 += 1, R9112 += 1, R9068 += 1, R8820 += 1, R8821 += 1 };
  s8 -> s11 [0, 65535] { R9188 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R9188 += 1, R9112 += 1 };
  s10 -> s11 [0, 65535] { R9188 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R9188 += 1 };
  accepting s8, s9, s1, s7, s10, s11;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 65] { R9190 += 1, R9114 += 1, R9070 += 1, R8825 += 1, R8826 += 1 };
  s0 -> s2 [0, 65] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s0 -> s3 [0, 65535] { R9190 += 1, R9114 += 1, R9069 += 1, R9070 += 1 };
  s0 -> s4 [0, 65535] { R9190 += 1, R9113 += 1, R9114 += 1 };
  s0 -> s0 [0, 65535] { R9189 += 1, R9190 += 1 };
  s0 -> s5 [66, 66] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s0 -> s6 [66, 66] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s0 -> s7 [66, 66] { R9190 += 1, R9114 += 1, R9070 += 1, R8825 += 1, R8826 += 1 };
  s0 -> s8 [66, 66] { R9190 += 1, R9114 += 1, R9070 += 1, R8825 += 1, R8826 += 1 };
  s0 -> s2 [67, 70] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s0 -> s1 [67, 65535] { R9190 += 1, R9114 += 1, R9070 += 1, R8825 += 1, R8826 += 1 };
  s0 -> s9 [71, 71] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s0 -> s2 [72, 65535] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s1 -> s1 [0, 65] { R9190 += 1, R9114 += 1, R9070 += 1, R8825 += 1, R8826 += 1 };
  s1 -> s2 [0, 65] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s1 -> s5 [66, 66] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s1 -> s6 [66, 66] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s1 -> s7 [66, 66] { R9190 += 1, R9114 += 1, R9070 += 1, R8825 += 1, R8826 += 1 };
  s1 -> s8 [66, 66] { R9190 += 1, R9114 += 1, R9070 += 1, R8825 += 1, R8826 += 1 };
  s1 -> s2 [67, 70] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s1 -> s1 [67, 65535] { R9190 += 1, R9114 += 1, R9070 += 1, R8825 += 1, R8826 += 1 };
  s1 -> s9 [71, 71] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s1 -> s2 [72, 65535] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s2 -> s2 [0, 65] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s2 -> s5 [66, 66] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s2 -> s6 [66, 66] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s2 -> s2 [67, 70] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s2 -> s9 [71, 71] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s2 -> s2 [72, 65535] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s3 -> s1 [0, 65] { R9190 += 1, R9114 += 1, R9070 += 1, R8825 += 1, R8826 += 1 };
  s3 -> s2 [0, 65] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s3 -> s3 [0, 65535] { R9190 += 1, R9114 += 1, R9069 += 1, R9070 += 1 };
  s3 -> s5 [66, 66] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s3 -> s6 [66, 66] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s3 -> s7 [66, 66] { R9190 += 1, R9114 += 1, R9070 += 1, R8825 += 1, R8826 += 1 };
  s3 -> s8 [66, 66] { R9190 += 1, R9114 += 1, R9070 += 1, R8825 += 1, R8826 += 1 };
  s3 -> s2 [67, 70] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s3 -> s1 [67, 65535] { R9190 += 1, R9114 += 1, R9070 += 1, R8825 += 1, R8826 += 1 };
  s3 -> s9 [71, 71] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s3 -> s2 [72, 65535] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s4 -> s1 [0, 65] { R9190 += 1, R9114 += 1, R9070 += 1, R8825 += 1, R8826 += 1 };
  s4 -> s2 [0, 65] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s4 -> s3 [0, 65535] { R9190 += 1, R9114 += 1, R9069 += 1, R9070 += 1 };
  s4 -> s4 [0, 65535] { R9190 += 1, R9113 += 1, R9114 += 1 };
  s4 -> s5 [66, 66] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s4 -> s6 [66, 66] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s4 -> s7 [66, 66] { R9190 += 1, R9114 += 1, R9070 += 1, R8825 += 1, R8826 += 1 };
  s4 -> s8 [66, 66] { R9190 += 1, R9114 += 1, R9070 += 1, R8825 += 1, R8826 += 1 };
  s4 -> s2 [67, 70] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s4 -> s1 [67, 65535] { R9190 += 1, R9114 += 1, R9070 += 1, R8825 += 1, R8826 += 1 };
  s4 -> s9 [71, 71] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s4 -> s2 [72, 65535] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s5 -> s5 [0, 70] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s5 -> s12 [71, 71] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s5 -> s5 [72, 65535] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s8 -> s5 [0, 70] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s8 -> s8 [0, 65535] { R9190 += 1, R9114 += 1, R9070 += 1, R8825 += 1, R8826 += 1 };
  s8 -> s12 [71, 71] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s8 -> s5 [72, 65535] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s9 -> s9 [0, 65] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s9 -> s10 [0, 65535] { R9190 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s9 [0, 65535] { R9190 += 1, R9114 += 1 };
  s9 -> s12 [66, 66] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s9 -> s13 [66, 66] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s9 -> s9 [67, 65535] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s10 -> s10 [0, 65535] { R9190 += 1 };
  s10 -> s11 [0, 65535];
  s11 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R9190 += 1, R9114 += 1, R9070 += 1, R8826 += 1 };
  s12 -> s10 [0, 65535] { R9190 += 1 };
  s12 -> s14 [0, 65535] { R9190 += 1, R9114 += 1 };
  s12 -> s11 [0, 65535];
  s13 -> s10 [0, 65535] { R9190 += 1 };
  s13 -> s11 [0, 65535];
  s13 -> s13 [0, 65535] { R9190 += 1, R9114 += 1 };
  s14 -> s10 [0, 65535] { R9190 += 1 };
  s14 -> s14 [0, 65535] { R9190 += 1, R9114 += 1 };
  s14 -> s11 [0, 65535];
  accepting s12, s13, s9, s14, s10, s11;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 65] { R9192 += 1, R9116 += 1, R9072 += 1, R8829 += 1, R8830 += 1 };
  s0 -> s2 [0, 65535] { R9192 += 1, R9116 += 1, R9071 += 1, R9072 += 1 };
  s0 -> s0 [0, 65535] { R9191 += 1, R9192 += 1 };
  s0 -> s3 [0, 65535] { R9192 += 1, R9115 += 1, R9116 += 1 };
  s0 -> s4 [66, 66] { R9192 += 1, R9116 += 1, R9072 += 1, R8829 += 1, R8830 += 1 };
  s0 -> s5 [66, 66] { R9192 += 1, R9116 += 1, R9072 += 1, R8829 += 1, R8830 += 1 };
  s0 -> s1 [67, 65535] { R9192 += 1, R9116 += 1, R9072 += 1, R8829 += 1, R8830 += 1 };
  s1 -> s1 [0, 65] { R9192 += 1, R9116 += 1, R9072 += 1, R8829 += 1, R8830 += 1 };
  s1 -> s1 [0, 65535] { R9192 += 1, R9116 += 1 };
  s1 -> s6 [0, 65535] { R9192 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [66, 66] { R9192 += 1, R9116 += 1, R9072 += 1, R8829 += 1, R8830 += 1 };
  s1 -> s5 [66, 66] { R9192 += 1, R9116 += 1, R9072 += 1, R8829 += 1, R8830 += 1 };
  s1 -> s1 [67, 65535] { R9192 += 1, R9116 += 1, R9072 += 1, R8829 += 1, R8830 += 1 };
  s2 -> s1 [0, 65] { R9192 += 1, R9116 += 1, R9072 += 1, R8829 += 1, R8830 += 1 };
  s2 -> s6 [0, 65535] { R9192 += 1 };
  s2 -> s2 [0, 65535] { R9192 += 1, R9116 += 1, R9071 += 1, R9072 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [66, 66] { R9192 += 1, R9116 += 1, R9072 += 1, R8829 += 1, R8830 += 1 };
  s2 -> s5 [66, 66] { R9192 += 1, R9116 += 1, R9072 += 1, R8829 += 1, R8830 += 1 };
  s2 -> s1 [67, 65535] { R9192 += 1, R9116 += 1, R9072 += 1, R8829 += 1, R8830 += 1 };
  s3 -> s1 [0, 65] { R9192 += 1, R9116 += 1, R9072 += 1, R8829 += 1, R8830 += 1 };
  s3 -> s2 [0, 65535] { R9192 += 1, R9116 += 1, R9071 += 1, R9072 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R9192 += 1, R9115 += 1, R9116 += 1 };
  s3 -> s4 [66, 66] { R9192 += 1, R9116 += 1, R9072 += 1, R8829 += 1, R8830 += 1 };
  s3 -> s5 [66, 66] { R9192 += 1, R9116 += 1, R9072 += 1, R8829 += 1, R8830 += 1 };
  s3 -> s1 [67, 65535] { R9192 += 1, R9116 += 1, R9072 += 1, R8829 += 1, R8830 += 1 };
  s4 -> s6 [0, 65535] { R9192 += 1 };
  s4 -> s8 [0, 65535] { R9192 += 1, R9116 += 1 };
  s4 -> s4 [0, 65535] { R9192 += 1, R9116 += 1, R9072 += 1, R8829 += 1, R8830 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s6 [0, 65535] { R9192 += 1 };
  s5 -> s5 [0, 65535] { R9192 += 1, R9116 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R9192 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R9192 += 1 };
  s8 -> s8 [0, 65535] { R9192 += 1, R9116 += 1 };
  s8 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 65] { R9194 += 1, R9118 += 1, R9074 += 1, R9016 += 1 };
  s0 -> s2 [0, 65] { R9194 += 1, R9118 += 1, R9074 += 1, R9015 += 1, R9016 += 1 };
  s0 -> s3 [0, 65535] { R9194 += 1, R9117 += 1, R9118 += 1 };
  s0 -> s0 [0, 65535] { R9193 += 1, R9194 += 1 };
  s0 -> s4 [0, 65535] { R9194 += 1, R9118 += 1, R9073 += 1, R9074 += 1 };
  s0 -> s5 [66, 66] { R9194 += 1, R9118 += 1, R9074 += 1, R9016 += 1 };
  s0 -> s6 [66, 66] { R9194 += 1, R9118 += 1, R9074 += 1, R9016 += 1 };
  s0 -> s7 [66, 66] { R9194 += 1, R9118 += 1, R9074 += 1, R9015 += 1, R9016 += 1 };
  s0 -> s8 [66, 66] { R9194 += 1, R9118 += 1, R9074 += 1, R9015 += 1, R9016 += 1 };
  s0 -> s1 [67, 69] { R9194 += 1, R9118 += 1, R9074 += 1, R9016 += 1 };
  s0 -> s2 [67, 65535] { R9194 += 1, R9118 += 1, R9074 += 1, R9015 += 1, R9016 += 1 };
  s0 -> s1 [72, 65535] { R9194 += 1, R9118 += 1, R9074 += 1, R9016 += 1 };
  s1 -> s1 [0, 65] { R9194 += 1, R9118 += 1, R9074 += 1, R9016 += 1 };
  s1 -> s10 [0, 65535];
  s1 -> s1 [0, 65535] { R9194 += 1, R9118 += 1 };
  s1 -> s11 [0, 65535] { R9194 += 1 };
  s1 -> s5 [66, 66] { R9194 += 1, R9118 += 1, R9074 += 1 };
  s1 -> s6 [66, 66] { R9194 += 1, R9118 += 1, R9074 += 1 };
  s1 -> s1 [67, 69] { R9194 += 1, R9118 += 1, R9074 += 1, R9016 += 1 };
  s1 -> s1 [67, 65535] { R9194 += 1, R9118 += 1, R9074 += 1 };
  s1 -> s1 [72, 65535] { R9194 += 1, R9118 += 1, R9074 += 1, R9016 += 1 };
  s2 -> s1 [0, 65] { R9194 += 1, R9118 += 1, R9074 += 1, R9016 += 1 };
  s2 -> s2 [0, 65] { R9194 += 1, R9118 += 1, R9074 += 1, R9015 += 1, R9016 += 1 };
  s2 -> s5 [66, 66] { R9194 += 1, R9118 += 1, R9074 += 1, R9016 += 1 };
  s2 -> s6 [66, 66] { R9194 += 1, R9118 += 1, R9074 += 1, R9016 += 1 };
  s2 -> s7 [66, 66] { R9194 += 1, R9118 += 1, R9074 += 1, R9015 += 1, R9016 += 1 };
  s2 -> s8 [66, 66] { R9194 += 1, R9118 += 1, R9074 += 1, R9015 += 1, R9016 += 1 };
  s2 -> s1 [67, 69] { R9194 += 1, R9118 += 1, R9074 += 1, R9016 += 1 };
  s2 -> s2 [67, 65535] { R9194 += 1, R9118 += 1, R9074 += 1, R9015 += 1, R9016 += 1 };
  s2 -> s1 [72, 65535] { R9194 += 1, R9118 += 1, R9074 += 1, R9016 += 1 };
  s3 -> s1 [0, 65] { R9194 += 1, R9118 += 1, R9074 += 1, R9016 += 1 };
  s3 -> s2 [0, 65] { R9194 += 1, R9118 += 1, R9074 += 1, R9015 += 1, R9016 += 1 };
  s3 -> s3 [0, 65535] { R9194 += 1, R9117 += 1, R9118 += 1 };
  s3 -> s4 [0, 65535] { R9194 += 1, R9118 += 1, R9073 += 1, R9074 += 1 };
  s3 -> s5 [66, 66] { R9194 += 1, R9118 += 1, R9074 += 1, R9016 += 1 };
  s3 -> s6 [66, 66] { R9194 += 1, R9118 += 1, R9074 += 1, R9016 += 1 };
  s3 -> s7 [66, 66] { R9194 += 1, R9118 += 1, R9074 += 1, R9015 += 1, R9016 += 1 };
  s3 -> s8 [66, 66] { R9194 += 1, R9118 += 1, R9074 += 1, R9015 += 1, R9016 += 1 };
  s3 -> s1 [67, 69] { R9194 += 1, R9118 += 1, R9074 += 1, R9016 += 1 };
  s3 -> s2 [67, 65535] { R9194 += 1, R9118 += 1, R9074 += 1, R9015 += 1, R9016 += 1 };
  s3 -> s1 [72, 65535] { R9194 += 1, R9118 += 1, R9074 += 1, R9016 += 1 };
  s4 -> s1 [0, 65] { R9194 += 1, R9118 += 1, R9074 += 1, R9016 += 1 };
  s4 -> s2 [0, 65] { R9194 += 1, R9118 += 1, R9074 += 1, R9015 += 1, R9016 += 1 };
  s4 -> s4 [0, 65535] { R9194 += 1, R9118 += 1, R9073 += 1, R9074 += 1 };
  s4 -> s5 [66, 66] { R9194 += 1, R9118 += 1, R9074 += 1, R9016 += 1 };
  s4 -> s6 [66, 66] { R9194 += 1, R9118 += 1, R9074 += 1, R9016 += 1 };
  s4 -> s7 [66, 66] { R9194 += 1, R9118 += 1, R9074 += 1, R9015 += 1, R9016 += 1 };
  s4 -> s8 [66, 66] { R9194 += 1, R9118 += 1, R9074 += 1, R9015 += 1, R9016 += 1 };
  s4 -> s1 [67, 69] { R9194 += 1, R9118 += 1, R9074 += 1, R9016 += 1 };
  s4 -> s2 [67, 65535] { R9194 += 1, R9118 += 1, R9074 += 1, R9015 += 1, R9016 += 1 };
  s4 -> s1 [72, 65535] { R9194 += 1, R9118 += 1, R9074 += 1, R9016 += 1 };
  s5 -> s5 [0, 65535] { R9194 += 1, R9118 += 1 };
  s5 -> s10 [0, 65535];
  s5 -> s11 [0, 65535] { R9194 += 1 };
  s6 -> s6 [0, 69] { R9194 += 1, R9118 += 1, R9074 += 1, R9016 += 1 };
  s6 -> s9 [0, 65535] { R9194 += 1, R9118 += 1 };
  s6 -> s10 [0, 65535];
  s6 -> s11 [0, 65535] { R9194 += 1 };
  s6 -> s6 [0, 65535] { R9194 += 1, R9118 += 1, R9074 += 1 };
  s6 -> s6 [72, 65535] { R9194 += 1, R9118 += 1, R9074 += 1, R9016 += 1 };
  s7 -> s6 [0, 69] { R9194 += 1, R9118 += 1, R9074 += 1, R9016 += 1 };
  s7 -> s7 [0, 65535] { R9194 += 1, R9118 += 1, R9074 += 1, R9015 += 1, R9016 += 1 };
  s7 -> s6 [72, 65535] { R9194 += 1, R9118 += 1, R9074 += 1, R9016 += 1 };
  s9 -> s9 [0, 65535] { R9194 += 1, R9118 += 1 };
  s9 -> s10 [0, 65535];
  s9 -> s11 [0, 65535] { R9194 += 1 };
  s10 -> s10 [0, 65535];
  s11 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R9194 += 1 };
  accepting s5, s9, s6, s1, s10, s11;
};
};
synchronised {  // Automata constraining P37
automaton P37_0 {
  init s0;
  s0 -> s1 [9, 9];
  accepting s1;
};
};
synchronised {  // Automata constraining P38
automaton P38_0 {
  init s0;
  s0 -> s1 [10, 10];
  accepting s1;
};
};
synchronised {  // Automata constraining P36
automaton P36_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
constraint R2 = R9118 && R3 - R9194 = 1 && R23 - R9118 = -1 && R24 = R9118 && R25 - R9118 = -1 && R26 = R9118 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R31 = R9194 && R32 - R9194 = 1 && R33 = R9194 && R34 - R9194 = 1 && R35 = 0 && R36 = 1 && R37 = 0 && R38 = 1 && R49 + R78 + R77 + -1*R8828 + -1*R8826 - R64 = 0 && R63 + R8827 + R8825 = 0 && R9059 = 0 && R9060 = 0 && R9067 = 0 && R9068 = 0 && R9069 = 0 && R9070 = 0 && R9073 = 0 && R9074 = 0 && R9075 = 0 && R9076 = R9118 && R9077 = 0 && R9078 = R9118 && R9079 = 0 && R9080 = R9118 && R9081 = 0 && R9082 = R9118 && R9083 = 0 && R9084 = R9118 && R9085 = 0 && R9086 = R9118 && R9087 = 0 && R9088 = R9118 && R9089 = 0 && R9090 = R9118 && R9091 = 0 && R9092 = R9118 && R9093 = 0 && R9094 = R9118 && R9095 = 0 && R9096 = R9118 && R9097 = 0 && R9098 = R9118 && R9099 = 0 && R9100 = R9118 && R9101 = 0 && R9102 = R9118 && R9103 = 0 && R9104 = R9118 && R9105 = 0 && R9106 = R9118 && R9107 = 0 && R9108 = R9118 && R9109 = 0 && R9110 = R9118 && R9111 = 0 && R9112 = R9118 && R9113 = 0 && R9114 = R9118 && R9115 = 0 && R9116 = R9118 && R9117 = 0 && R9119 = 0 && R9120 = R9194 && R9121 = 0 && R9122 = R9194 && R9123 = 0 && R9124 = R9194 && R9125 = 0 && R9126 = R9194 && R9127 = 0 && R9128 = R9194 && R9129 = 0 && R9130 = R9194 && R9131 = 0 && R9132 = R9194 && R9133 = 0 && R9134 = R9194 && R9135 = 0 && R9136 = R9194 && R9137 = 0 && R9138 = R9194 && R9139 = 0 && R9140 = R9194 && R9141 = 0 && R9142 = R9194 && R9143 = 0 && R9144 = R9194 && R9145 = 0 && R9146 = R9194 && R9147 = 0 && R9148 = R9194 && R9149 = 0 && R9150 = R9194 && R9151 = 0 && R9152 = R9194 && R9153 = 0 && R9154 = R9194 && R9155 = 0 && R9156 = R9194 && R9157 = 0 && R9158 = R9194 && R9159 = 0 && R9160 = R9194 && R9161 = 0 && R9162 = R9194 && R9163 = 0 && R9164 = R9194 && R9165 = 0 && R9166 = R9194 && R9167 = 0 && R9168 = R9194 && R9169 = 0 && R9170 = R9194 && R9171 = 0 && R9172 = R9194 && R9173 = 0 && R9174 = R9194 && R9175 = 0 && R9176 = R9194 && R9177 = 0 && R9178 = R9194 && R9179 = 0 && R9180 = R9194 && R9181 = 0 && R9182 = R9194 && R9183 = 0 && R9184 = R9194 && R9185 = 0 && R9186 = R9194 && R9187 = 0 && R9188 = R9194 && R9189 = 0 && R9190 = R9194 && R9191 = 0 && R9192 = R9194 && R9193 = 0 && -1 < R1 && R11 < 1 && R14 < 1 && R17 < 1 && R51 + R80 + R79 < 1 && -1*R8828 + -1*R8826 - R64 < 1 && 0 < R9118 && -1 < R9194 && (R1 != 0 || R20 = 0 || (R9019 = 0 && R9020 = 0)) && (R1 != 0 || R20 = 0 || (R9021 = 0 && R9022 = 0)) && (R1 != 0 || R20 = 0 || (R9023 = 0 && R9024 = 0)) && (R1 != 0 || R20 = 0 || (R9025 = 0 && R9026 = 0)) && (R1 != 0 || R20 = 0 || (R9027 = 0 && R9028 = 0)) && (R1 != 0 || R20 = 0 || (R9029 = 0 && R9030 = 0)) && (R1 != 0 || R20 = 0 || (R9031 = 0 && R9032 = 0)) && (R1 != 0 || R20 = 0 || (R9033 = 0 && R9034 = 0)) && (R1 != 0 || R20 = 0 || (R9035 = 0 && R9036 = 0)) && (R1 != 0 || R20 = 0 || (R9037 = 0 && R9038 = 0)) && (R59 + R8824 + R8821 != 0 || ((R53 + R83 + R81 != 0 || R54 + R84 + R82 + -1*R8828 + -1*R8826 - R64 = 0 || R64 + R8828 + R8826 < 1) && (R53 + R83 + R81 = 0 || R64 + R8828 + R8826 < 1))) && (R59 + R8824 + R8821 != 0 || ((R57 + R8822 + R8819 != 0 || R58 + R8823 + R8820 + -1*R8828 + -1*R8826 - R64 = 0 || R64 + R8828 + R8826 < 1) && (R57 + R8822 + R8819 = 0 || R64 + R8828 + R8826 < 1))) && (R9019 != 0 || R1 = R9020 || R1 < 1) && (R9021 != 0 || R1 = R9022 || R1 < 1) && (R9023 != 0 || R1 = R9024 || R1 < 1) && (R9025 != 0 || R1 = R9026 || R1 < 1) && (R9027 != 0 || R1 = R9028 || R1 < 1) && (R9029 != 0 || R1 = R9030 || R1 < 1) && (R9031 != 0 || R1 = R9032 || R1 < 1) && (R9033 != 0 || R1 = R9034 || R1 < 1) && (R9035 != 0 || R1 = R9036 || R1 < 1) && (R9037 != 0 || R1 = R9038 || R1 < 1) && (R21 = 0 || (R9057 = 0 && R9058 = 0)) && (R21 = 0 || (R9061 = 0 && R9062 = 0)) && (R21 = 0 || (R9063 = 0 && R9064 = 0)) && (R21 = 0 || (R9065 = 0 && R9066 = 0)) && (R21 = 0 || (R9071 = 0 && R9072 = 0)) && (R22 = 0 || (R9039 = 0 && R9040 = 0)) && (R22 = 0 || (R9041 = 0 && R9042 = 0)) && (R22 = 0 || (R9043 = 0 && R9044 = 0)) && (R22 = 0 || (R9045 = 0 && R9046 = 0)) && (R22 = 0 || (R9047 = 0 && R9048 = 0)) && (R22 = 0 || (R9049 = 0 && R9050 = 0)) && (R22 = 0 || (R9051 = 0 && R9052 = 0)) && (R22 = 0 || (R9053 = 0 && R9054 = 0)) && (R22 = 0 || (R9055 = 0 && R9056 = 0)) && (R59 + R8824 + R8821 = 0 || (R53 + R83 + R81 = 0 && R54 + R84 + R82 + -1*R8828 + -1*R8826 - R64 = 0)) && (R59 + R8824 + R8821 = 0 || (R57 + R8822 + R8819 = 0 && R58 + R8823 + R8820 + -1*R8828 + -1*R8826 - R64 = 0)) && (R69 + R8834 + R8831 = 0 || (R67 + R8832 + R8829 = 0 && R68 + R8833 + R8830 = 0)) && (R69 + R8834 + R8831 = 0 || (R73 + R9017 + R9015 = 0 && R74 + R9018 + R9016 = 0)) && (R9019 = 0 || R1 < 1) && (R9021 = 0 || R1 < 1) && (R9023 = 0 || R1 < 1) && (R9025 = 0 || R1 < 1) && (R9027 = 0 || R1 < 1) && (R9029 = 0 || R1 < 1) && (R9031 = 0 || R1 < 1) && (R9033 = 0 || R1 < 1) && (R9035 = 0 || R1 < 1) && (R9037 = 0 || R1 < 1);
// End of Parikh automata intersection problem
