// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R2, R22, R23, R24, R25, R26, R27, R2741, R2742, R2743, R2744, R2745, R2746, R2747, R2748, R2749, R2750, R28, R29, R3, R30, R31, R32, R3857, R3858, R3859, R3860, R3861, R3862, R3863, R3864, R3865, R3866, R3867, R3868, R3869, R3870, R3871, R3872, R3873, R3874, R3875, R3876, R3877, R3878, R3879, R3880, R3881, R3882, R3883, R3884, R3885, R3886, R3887, R3888, R3889, R3890, R3891, R3892, R3893, R3894, R3895, R3896, R3897, R3898, R3899, R3900, R3901, R3902, R3903, R3904, R3905, R3906, R3907, R3908, R3909, R3910, R3911, R3912, R3913, R3914, R3915, R3916, R3917, R3918, R3919, R3920, R3921, R3922, R3923, R3924, R3925, R3926, R3927, R3928, R3929, R3930, R3931, R3932, R3933, R3934, R3935, R3936, R3937, R3938, R3939, R3940, R3941, R3942, R3943, R3944, R3945, R3946, R3947, R3948, R3949, R3950, R3951, R3952, R3953, R3954, R3955, R3956, R3957, R3958, R3959, R3960, R3961, R3962, R3963, R3964, R3965, R3966, R3967, R3968, R3969, R3970, R3971, R3972, R3973, R3974, R3975, R3976, R3977, R3978, R3979, R3980, R3981, R3982, R3983, R3984, R3985, R3986, R3987, R3988, R3989, R3990, R3991, R3992, R3993, R3994, R3995, R3996, R3997, R3998, R3999, R4, R4000, R4001, R4002, R4003, R4004, R4005, R4006, R4007, R4008, R4009, R4010, R4011, R4012, R4013, R4014, R5, R63, R65, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R30 += 1 };
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R3896 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R3895 += 1, R3896 += 1 };
  s1 -> s1 [0, 65535] { R3896 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R3898 += 1 };
  s0 -> s0 [0, 65535] { R3897 += 1, R3898 += 1 };
  s0 -> s2 [70, 70] { R3898 += 1 };
  s0 -> s3 [70, 70] { R3898 += 1 };
  s0 -> s1 [76, 65535] { R3898 += 1 };
  s1 -> s1 [0, 69] { R3898 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3898 += 1 };
  s1 -> s3 [70, 70] { R3898 += 1 };
  s1 -> s1 [76, 65535] { R3898 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R3898 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R3898 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R3900 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R3899 += 1, R3900 += 1 };
  s0 -> s2 [70, 70] { R3900 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R3900 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R3900 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R3900 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3900 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R3900 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R3900 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3900 += 1, R63 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R3902 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R3901 += 1, R3902 += 1 };
  s0 -> s2 [70, 70] { R3902 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R3902 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R3902 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R3902 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3902 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R3902 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R3902 += 1, R65 += 1 };
  s2 -> s2 [0, 65535] { R3902 += 1, R65 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R3904 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R3903 += 1, R3904 += 1 };
  s0 -> s2 [70, 70] { R3904 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R3904 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R3904 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R3904 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3904 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R3904 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R3904 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3904 += 1, R67 += 1, R68 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R3906 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R3905 += 1, R3906 += 1 };
  s0 -> s2 [70, 70] { R3906 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R3906 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R3906 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R3906 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3906 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R3906 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R3906 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R3906 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R3908 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R3907 += 1, R3908 += 1 };
  s0 -> s2 [70, 70] { R3908 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R3908 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R3908 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R3908 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3908 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R3908 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R3908 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3908 += 1, R77 += 1, R78 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R3910 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R3909 += 1, R3910 += 1 };
  s0 -> s2 [70, 70] { R3910 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R3910 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R3910 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R3910 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3910 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R3910 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R3910 += 1, R81 += 1, R82 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3910 += 1, R81 += 1, R82 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R3912 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R3911 += 1, R3912 += 1 };
  s0 -> s2 [70, 70] { R3912 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R3912 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R3912 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R3912 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3912 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R3912 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R3912 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3912 += 1, R87 += 1, R88 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R3914 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R3913 += 1, R3914 += 1 };
  s0 -> s2 [70, 70] { R3914 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R3914 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R3914 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R3914 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3914 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R3914 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R3914 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535] { R3914 += 1, R93 += 1, R94 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R3916 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R3915 += 1, R3916 += 1 };
  s0 -> s2 [70, 70] { R3916 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R3916 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R3916 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R3916 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3916 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R3916 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R3916 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3916 += 1, R101 += 1, R102 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R3918 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R3917 += 1, R3918 += 1 };
  s0 -> s2 [70, 70] { R3918 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R3918 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R3918 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R3918 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3918 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R3918 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R3918 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3918 += 1, R111 += 1, R112 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R3920 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R3919 += 1, R3920 += 1 };
  s0 -> s2 [70, 70] { R3920 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R3920 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R3920 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R3920 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3920 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R3920 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R3920 += 1, R119 += 1, R120 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3920 += 1, R119 += 1, R120 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R3922 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R3921 += 1, R3922 += 1 };
  s0 -> s2 [70, 70] { R3922 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R3922 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R3922 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R3922 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3922 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R3922 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R3922 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3922 += 1, R129 += 1, R130 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R3952 += 1 };
  s0 -> s0 [0, 65535] { R3951 += 1, R3952 += 1 };
  s0 -> s2 [70, 70] { R3952 += 1 };
  s0 -> s1 [71, 65535] { R3952 += 1 };
  s1 -> s1 [0, 69] { R3952 += 1 };
  s1 -> s2 [70, 70] { R3952 += 1 };
  s1 -> s1 [71, 65535] { R3952 += 1 };
  s2 -> s2 [0, 65535] { R3952 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R3954 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R3953 += 1, R3954 += 1 };
  s1 -> s1 [0, 65535] { R3954 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R3956 += 1 };
  s0 -> s0 [0, 65535] { R3955 += 1, R3956 += 1 };
  s0 -> s2 [0, 65535] { R3956 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R3956 += 1 };
  s0 -> s1 [71, 65535] { R3956 += 1 };
  s1 -> s1 [0, 69] { R3956 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R3956 += 1 };
  s1 -> s1 [71, 65535] { R3956 += 1 };
  s2 -> s1 [0, 69] { R3956 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3956 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R3956 += 1 };
  s2 -> s1 [71, 65535] { R3956 += 1 };
  s3 -> s3 [0, 65535] { R3956 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R3958 += 1, R3866 += 1 };
  s0 -> s2 [0, 65535] { R3958 += 1, R3865 += 1, R3866 += 1 };
  s0 -> s0 [0, 65535] { R3957 += 1, R3958 += 1 };
  s0 -> s1 [71, 65535] { R3958 += 1, R3866 += 1 };
  s1 -> s1 [0, 69] { R3958 += 1, R3866 += 1 };
  s1 -> s1 [0, 65535] { R3958 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R3958 += 1, R3866 += 1 };
  s2 -> s1 [0, 69] { R3958 += 1, R3866 += 1 };
  s2 -> s2 [0, 65535] { R3958 += 1, R3865 += 1, R3866 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R3958 += 1, R3866 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R3960 += 1, R3867 += 1, R3868 += 1 };
  s0 -> s2 [0, 65535] { R3960 += 1, R3868 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R3959 += 1, R3960 += 1 };
  s1 -> s1 [0, 65535] { R3960 += 1, R3867 += 1, R3868 += 1 };
  s1 -> s2 [0, 65535] { R3960 += 1, R3868 += 1, R22 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R3960 += 1, R3868 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R3960 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3960 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R3962 += 1, R3870 += 1 };
  s0 -> s0 [0, 65535] { R3961 += 1, R3962 += 1 };
  s0 -> s2 [0, 65535] { R3962 += 1, R3869 += 1, R3870 += 1 };
  s0 -> s1 [75, 65535] { R3962 += 1, R3870 += 1 };
  s1 -> s1 [0, 70] { R3962 += 1, R3870 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3962 += 1 };
  s1 -> s1 [75, 65535] { R3962 += 1, R3870 += 1 };
  s2 -> s1 [0, 70] { R3962 += 1, R3870 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R3962 += 1, R3869 += 1, R3870 += 1 };
  s2 -> s1 [75, 65535] { R3962 += 1, R3870 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R3964 += 1, R3871 += 1, R3872 += 1 };
  s0 -> s0 [0, 65535] { R3963 += 1, R3964 += 1 };
  s0 -> s2 [0, 65535] { R3964 += 1, R3872 += 1, R138 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3964 += 1, R3871 += 1, R3872 += 1 };
  s1 -> s2 [0, 65535] { R3964 += 1, R3872 += 1, R138 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R3964 += 1 };
  s2 -> s2 [0, 65535] { R3964 += 1, R3872 += 1, R138 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3964 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R3966 += 1, R3874 += 1 };
  s0 -> s2 [0, 65535] { R3966 += 1, R3874 += 1, R140 += 1 };
  s0 -> s0 [0, 65535] { R3965 += 1, R3966 += 1 };
  s0 -> s3 [0, 65535] { R3966 += 1, R3873 += 1, R3874 += 1 };
  s0 -> s1 [76, 65535] { R3966 += 1, R3874 += 1 };
  s1 -> s1 [0, 74] { R3966 += 1, R3874 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R3966 += 1 };
  s1 -> s1 [76, 65535] { R3966 += 1, R3874 += 1 };
  s2 -> s1 [0, 74] { R3966 += 1, R3874 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R3966 += 1 };
  s2 -> s2 [0, 65535] { R3966 += 1, R3874 += 1, R140 += 1 };
  s2 -> s1 [76, 65535] { R3966 += 1, R3874 += 1 };
  s3 -> s1 [0, 74] { R3966 += 1, R3874 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R3966 += 1, R3874 += 1, R140 += 1 };
  s3 -> s3 [0, 65535] { R3966 += 1, R3873 += 1, R3874 += 1 };
  s3 -> s1 [76, 65535] { R3966 += 1, R3874 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3966 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R3968 += 1, R3875 += 1, R3876 += 1 };
  s0 -> s2 [0, 65535] { R3968 += 1, R3876 += 1, R145 += 1, R146 += 1 };
  s0 -> s3 [0, 65535] { R3968 += 1, R3876 += 1, R144 += 1, R145 += 1 };
  s0 -> s0 [0, 65535] { R3967 += 1, R3968 += 1 };
  s1 -> s1 [0, 65535] { R3968 += 1, R3875 += 1, R3876 += 1 };
  s1 -> s2 [0, 65535] { R3968 += 1, R3876 += 1, R145 += 1, R146 += 1 };
  s1 -> s3 [0, 65535] { R3968 += 1, R3876 += 1, R144 += 1, R145 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R3968 += 1, R3876 += 1 };
  s2 -> s2 [0, 65535] { R3968 += 1, R3876 += 1, R145 += 1, R146 += 1 };
  s2 -> s4 [0, 65535] { R3968 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R3968 += 1, R3876 += 1, R145 += 1, R146 += 1 };
  s3 -> s3 [0, 65535] { R3968 += 1, R3876 += 1, R144 += 1, R145 += 1 };
  s3 -> s4 [0, 65535] { R3968 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3968 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3968 += 1, R3876 += 1 };
  s6 -> s4 [0, 65535] { R3968 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R3970 += 1, R3878 += 1, R150 += 1 };
  s0 -> s2 [0, 65535] { R3970 += 1, R3878 += 1, R149 += 1, R150 += 1 };
  s0 -> s3 [0, 65535] { R3970 += 1, R3877 += 1, R3878 += 1 };
  s0 -> s0 [0, 65535] { R3969 += 1, R3970 += 1 };
  s0 -> s4 [75, 75] { R3970 += 1, R3878 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R3970 += 1, R3878 += 1, R150 += 1 };
  s0 -> s1 [81, 65535] { R3970 += 1, R3878 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R3970 += 1, R3878 += 1, R150 += 1 };
  s1 -> s6 [0, 65535] { R3970 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R3970 += 1, R3878 += 1 };
  s1 -> s4 [75, 75] { R3970 += 1, R3878 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R3970 += 1, R3878 += 1, R150 += 1 };
  s1 -> s1 [81, 65535] { R3970 += 1, R3878 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R3970 += 1, R3878 += 1, R150 += 1 };
  s2 -> s6 [0, 65535] { R3970 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s2 [0, 65535] { R3970 += 1, R3878 += 1, R149 += 1, R150 += 1 };
  s2 -> s4 [75, 75] { R3970 += 1, R3878 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R3970 += 1, R3878 += 1, R150 += 1 };
  s2 -> s1 [81, 65535] { R3970 += 1, R3878 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R3970 += 1, R3878 += 1, R150 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s2 [0, 65535] { R3970 += 1, R3878 += 1, R149 += 1, R150 += 1 };
  s3 -> s3 [0, 65535] { R3970 += 1, R3877 += 1, R3878 += 1 };
  s3 -> s4 [75, 75] { R3970 += 1, R3878 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R3970 += 1, R3878 += 1, R150 += 1 };
  s3 -> s1 [81, 65535] { R3970 += 1, R3878 += 1, R150 += 1 };
  s4 -> s4 [0, 75] { R3970 += 1, R3878 += 1, R150 += 1 };
  s4 -> s6 [0, 65535] { R3970 += 1 };
  s4 -> s4 [0, 65535] { R3970 += 1, R3878 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [81, 65535] { R3970 += 1, R3878 += 1, R150 += 1 };
  s5 -> s6 [0, 65535] { R3970 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R3970 += 1, R3878 += 1 };
  s6 -> s6 [0, 65535] { R3970 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s0 [0, 65535] { R3971 += 1, R3972 += 1 };
  s0 -> s1 [0, 65535] { R3972 += 1, R3880 += 1, R154 += 1 };
  s0 -> s2 [0, 65535] { R3972 += 1, R3879 += 1, R3880 += 1 };
  s0 -> s3 [0, 65535] { R3972 += 1, R3880 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R3972 += 1, R3880 += 1, R154 += 1 };
  s1 -> s5 [0, 65535] { R3972 += 1 };
  s1 -> s3 [0, 65535] { R3972 += 1, R3880 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R3972 += 1, R3880 += 1, R154 += 1 };
  s2 -> s2 [0, 65535] { R3972 += 1, R3879 += 1, R3880 += 1 };
  s2 -> s3 [0, 65535] { R3972 += 1, R3880 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R3972 += 1 };
  s3 -> s3 [0, 65535] { R3972 += 1, R3880 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3972 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R3974 += 1, R3882 += 1, R158 += 1, R159 += 1 };
  s0 -> s0 [0, 65535] { R3973 += 1, R3974 += 1 };
  s0 -> s2 [0, 65535] { R3974 += 1, R3881 += 1, R3882 += 1 };
  s0 -> s3 [0, 65535] { R3974 += 1, R3882 += 1, R159 += 1, R160 += 1 };
  s1 -> s1 [0, 65535] { R3974 += 1, R3882 += 1, R158 += 1, R159 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R3974 += 1, R3882 += 1, R159 += 1, R160 += 1 };
  s1 -> s6 [0, 65535] { R3974 += 1 };
  s2 -> s1 [0, 65535] { R3974 += 1, R3882 += 1, R158 += 1, R159 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3974 += 1, R3881 += 1, R3882 += 1 };
  s2 -> s3 [0, 65535] { R3974 += 1, R3882 += 1, R159 += 1, R160 += 1 };
  s3 -> s4 [0, 65535] { R3974 += 1, R3882 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3974 += 1, R3882 += 1, R159 += 1, R160 += 1 };
  s3 -> s6 [0, 65535] { R3974 += 1 };
  s4 -> s4 [0, 65535] { R3974 += 1, R3882 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3974 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3974 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R3976 += 1, R3884 += 1, R165 += 1 };
  s0 -> s0 [0, 65535] { R3975 += 1, R3976 += 1 };
  s0 -> s2 [0, 65535] { R3976 += 1, R3884 += 1, R165 += 1, R166 += 1 };
  s0 -> s3 [0, 65535] { R3976 += 1, R3883 += 1, R3884 += 1 };
  s0 -> s4 [0, 65535] { R3976 += 1, R3884 += 1, R164 += 1, R165 += 1 };
  s0 -> s1 [76, 65535] { R3976 += 1, R3884 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R3976 += 1, R3884 += 1, R165 += 1 };
  s1 -> s5 [0, 65535] { R3976 += 1 };
  s1 -> s1 [0, 65535] { R3976 += 1, R3884 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [76, 65535] { R3976 += 1, R3884 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R3976 += 1, R3884 += 1, R165 += 1 };
  s2 -> s5 [0, 65535] { R3976 += 1 };
  s2 -> s7 [0, 65535] { R3976 += 1, R3884 += 1 };
  s2 -> s2 [0, 65535] { R3976 += 1, R3884 += 1, R165 += 1, R166 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [76, 65535] { R3976 += 1, R3884 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R3976 += 1, R3884 += 1, R165 += 1 };
  s3 -> s2 [0, 65535] { R3976 += 1, R3884 += 1, R165 += 1, R166 += 1 };
  s3 -> s3 [0, 65535] { R3976 += 1, R3883 += 1, R3884 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R3976 += 1, R3884 += 1, R164 += 1, R165 += 1 };
  s3 -> s1 [76, 65535] { R3976 += 1, R3884 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R3976 += 1, R3884 += 1, R165 += 1 };
  s4 -> s5 [0, 65535] { R3976 += 1 };
  s4 -> s2 [0, 65535] { R3976 += 1, R3884 += 1, R165 += 1, R166 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3976 += 1, R3884 += 1, R164 += 1, R165 += 1 };
  s4 -> s1 [76, 65535] { R3976 += 1, R3884 += 1, R165 += 1 };
  s5 -> s5 [0, 65535] { R3976 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R3976 += 1 };
  s7 -> s7 [0, 65535] { R3976 += 1, R3884 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R3978 += 1, R3886 += 1, R172 += 1, R174 += 1 };
  s0 -> s0 [0, 65535] { R3977 += 1, R3978 += 1 };
  s0 -> s2 [0, 65535] { R3978 += 1, R3886 += 1, R171 += 1, R172 += 1 };
  s0 -> s3 [0, 65535] { R3978 += 1, R3886 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s4 [0, 65535] { R3978 += 1, R3885 += 1, R3886 += 1 };
  s0 -> s1 [76, 65535] { R3978 += 1, R3886 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R3978 += 1, R3886 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 65535] { R3978 += 1, R3886 += 1, R172 += 1 };
  s1 -> s6 [0, 65535] { R3978 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R3978 += 1, R3886 += 1 };
  s1 -> s1 [76, 65535] { R3978 += 1, R3886 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R3978 += 1, R3886 += 1, R172 += 1, R174 += 1 };
  s2 -> s2 [0, 65535] { R3978 += 1, R3886 += 1, R171 += 1, R172 += 1 };
  s2 -> s3 [0, 65535] { R3978 += 1, R3886 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s6 [0, 65535] { R3978 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [76, 65535] { R3978 += 1, R3886 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R3978 += 1, R3886 += 1, R172 += 1, R174 += 1 };
  s3 -> s3 [0, 65535] { R3978 += 1, R3886 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s6 [0, 65535] { R3978 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s7 [0, 65535] { R3978 += 1, R3886 += 1 };
  s3 -> s1 [76, 65535] { R3978 += 1, R3886 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R3978 += 1, R3886 += 1, R172 += 1, R174 += 1 };
  s4 -> s2 [0, 65535] { R3978 += 1, R3886 += 1, R171 += 1, R172 += 1 };
  s4 -> s3 [0, 65535] { R3978 += 1, R3886 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3978 += 1, R3885 += 1, R3886 += 1 };
  s4 -> s1 [76, 65535] { R3978 += 1, R3886 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3978 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R3978 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R3978 += 1, R3886 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R3980 += 1, R3888 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s0 -> s2 [0, 65535] { R3980 += 1, R3887 += 1, R3888 += 1 };
  s0 -> s0 [0, 65535] { R3979 += 1, R3980 += 1 };
  s0 -> s3 [0, 65535] { R3980 += 1, R3888 += 1 };
  s0 -> s4 [0, 65535] { R3980 += 1, R3888 += 1, R181 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3980 += 1, R3888 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s1 -> s6 [0, 65535] { R3980 += 1 };
  s1 -> s3 [0, 65535] { R3980 += 1, R3888 += 1 };
  s1 -> s4 [0, 65535] { R3980 += 1, R3888 += 1, R181 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R3980 += 1, R3888 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s2 -> s2 [0, 65535] { R3980 += 1, R3887 += 1, R3888 += 1 };
  s2 -> s3 [0, 65535] { R3980 += 1, R3888 += 1 };
  s2 -> s4 [0, 65535] { R3980 += 1, R3888 += 1, R181 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3980 += 1 };
  s3 -> s3 [0, 65535] { R3980 += 1, R3888 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3980 += 1 };
  s4 -> s3 [0, 65535] { R3980 += 1, R3888 += 1 };
  s4 -> s4 [0, 65535] { R3980 += 1, R3888 += 1, R181 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3980 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R3982 += 1, R3890 += 1, R190 += 1, R192 += 1 };
  s0 -> s0 [0, 65535] { R3981 += 1, R3982 += 1 };
  s0 -> s2 [0, 65535] { R3982 += 1, R3890 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s0 -> s3 [0, 65535] { R3982 += 1, R3890 += 1, R189 += 1, R190 += 1 };
  s0 -> s4 [0, 65535] { R3982 += 1, R3889 += 1, R3890 += 1 };
  s0 -> s1 [80, 65535] { R3982 += 1, R3890 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 75] { R3982 += 1, R3890 += 1, R190 += 1, R192 += 1 };
  s1 -> s7 [0, 65535] { R3982 += 1, R3890 += 1 };
  s1 -> s1 [0, 65535] { R3982 += 1, R3890 += 1, R190 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R3982 += 1 };
  s1 -> s1 [80, 65535] { R3982 += 1, R3890 += 1, R190 += 1, R192 += 1 };
  s2 -> s1 [0, 75] { R3982 += 1, R3890 += 1, R190 += 1, R192 += 1 };
  s2 -> s7 [0, 65535] { R3982 += 1, R3890 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3982 += 1, R3890 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s2 -> s6 [0, 65535] { R3982 += 1 };
  s2 -> s1 [80, 65535] { R3982 += 1, R3890 += 1, R190 += 1, R192 += 1 };
  s3 -> s1 [0, 75] { R3982 += 1, R3890 += 1, R190 += 1, R192 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R3982 += 1, R3890 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s3 -> s6 [0, 65535] { R3982 += 1 };
  s3 -> s3 [0, 65535] { R3982 += 1, R3890 += 1, R189 += 1, R190 += 1 };
  s3 -> s1 [80, 65535] { R3982 += 1, R3890 += 1, R190 += 1, R192 += 1 };
  s4 -> s1 [0, 75] { R3982 += 1, R3890 += 1, R190 += 1, R192 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R3982 += 1, R3890 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s4 -> s3 [0, 65535] { R3982 += 1, R3890 += 1, R189 += 1, R190 += 1 };
  s4 -> s4 [0, 65535] { R3982 += 1, R3889 += 1, R3890 += 1 };
  s4 -> s1 [80, 65535] { R3982 += 1, R3890 += 1, R190 += 1, R192 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3982 += 1 };
  s7 -> s7 [0, 65535] { R3982 += 1, R3890 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R3982 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R3984 += 1, R3892 += 1 };
  s0 -> s2 [0, 65535] { R3984 += 1, R3891 += 1, R3892 += 1 };
  s0 -> s0 [0, 65535] { R3983 += 1, R3984 += 1 };
  s0 -> s3 [0, 65535] { R3984 += 1, R3892 += 1, R2747 += 1 };
  s1 -> s1 [0, 65535] { R3984 += 1, R3892 += 1 };
  s1 -> s4 [0, 65535] { R3984 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R3984 += 1, R3892 += 1 };
  s2 -> s2 [0, 65535] { R3984 += 1, R3891 += 1, R3892 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R3984 += 1, R3892 += 1, R2747 += 1 };
  s3 -> s1 [0, 65535] { R3984 += 1, R3892 += 1 };
  s3 -> s4 [0, 65535] { R3984 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3984 += 1, R3892 += 1, R2747 += 1 };
  s4 -> s4 [0, 65535] { R3984 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 74] { R3986 += 1, R3894 += 1, R3862 += 1, R3864 += 1 };
  s0 -> s0 [0, 65535] { R3985 += 1, R3986 += 1 };
  s0 -> s2 [0, 65535] { R3986 += 1, R3894 += 1, R3862 += 1, R3863 += 1, R3864 += 1 };
  s0 -> s3 [0, 65535] { R3986 += 1, R3893 += 1, R3894 += 1 };
  s0 -> s4 [75, 75] { R3986 += 1, R3894 += 1, R3862 += 1, R3864 += 1 };
  s0 -> s5 [80, 80] { R3986 += 1, R3894 += 1, R3862 += 1, R3864 += 1 };
  s0 -> s1 [81, 65535] { R3986 += 1, R3894 += 1, R3862 += 1, R3864 += 1 };
  s1 -> s1 [0, 74] { R3986 += 1, R3894 += 1, R3862 += 1, R3864 += 1 };
  s1 -> s4 [75, 75] { R3986 += 1, R3894 += 1, R3862 += 1, R3864 += 1 };
  s1 -> s5 [80, 80] { R3986 += 1, R3894 += 1, R3862 += 1, R3864 += 1 };
  s1 -> s1 [81, 65535] { R3986 += 1, R3894 += 1, R3862 += 1, R3864 += 1 };
  s2 -> s1 [0, 74] { R3986 += 1, R3894 += 1, R3862 += 1, R3864 += 1 };
  s2 -> s2 [0, 65535] { R3986 += 1, R3894 += 1, R3862 += 1, R3863 += 1, R3864 += 1 };
  s2 -> s4 [75, 75] { R3986 += 1, R3894 += 1, R3862 += 1, R3864 += 1 };
  s2 -> s5 [80, 80] { R3986 += 1, R3894 += 1, R3862 += 1, R3864 += 1 };
  s2 -> s1 [81, 65535] { R3986 += 1, R3894 += 1, R3862 += 1, R3864 += 1 };
  s3 -> s1 [0, 74] { R3986 += 1, R3894 += 1, R3862 += 1, R3864 += 1 };
  s3 -> s2 [0, 65535] { R3986 += 1, R3894 += 1, R3862 += 1, R3863 += 1, R3864 += 1 };
  s3 -> s3 [0, 65535] { R3986 += 1, R3893 += 1, R3894 += 1 };
  s3 -> s4 [75, 75] { R3986 += 1, R3894 += 1, R3862 += 1, R3864 += 1 };
  s3 -> s5 [80, 80] { R3986 += 1, R3894 += 1, R3862 += 1, R3864 += 1 };
  s3 -> s1 [81, 65535] { R3986 += 1, R3894 += 1, R3862 += 1, R3864 += 1 };
  s4 -> s4 [0, 75] { R3986 += 1, R3894 += 1, R3862 += 1, R3864 += 1 };
  s4 -> s10 [80, 80] { R3986 += 1, R3894 += 1, R3862 += 1, R3864 += 1 };
  s4 -> s4 [81, 65535] { R3986 += 1, R3894 += 1, R3862 += 1, R3864 += 1 };
  s5 -> s5 [0, 74] { R3986 += 1, R3894 += 1, R3862 += 1, R3864 += 1 };
  s5 -> s6 [0, 65535] { R3986 += 1, R3894 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R3986 += 1, R3894 += 1, R3862 += 1 };
  s5 -> s8 [0, 65535] { R3986 += 1 };
  s5 -> s9 [75, 75] { R3986 += 1, R3894 += 1, R3862 += 1, R3864 += 1 };
  s5 -> s10 [75, 75] { R3986 += 1, R3894 += 1, R3862 += 1, R3864 += 1 };
  s5 -> s5 [80, 65535] { R3986 += 1, R3894 += 1, R3862 += 1, R3864 += 1 };
  s6 -> s6 [0, 65535] { R3986 += 1, R3894 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R3986 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R3986 += 1 };
  s9 -> s6 [0, 65535] { R3986 += 1, R3894 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s9 [0, 65535] { R3986 += 1, R3894 += 1, R3862 += 1 };
  s9 -> s8 [0, 65535] { R3986 += 1 };
  s10 -> s10 [0, 75] { R3986 += 1, R3894 += 1, R3862 += 1, R3864 += 1 };
  s10 -> s6 [0, 65535] { R3986 += 1, R3894 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s10 [0, 65535] { R3986 += 1, R3894 += 1, R3862 += 1 };
  s10 -> s8 [0, 65535] { R3986 += 1 };
  s10 -> s10 [80, 65535] { R3986 += 1, R3894 += 1, R3862 += 1, R3864 += 1 };
  accepting s8, s5, s9, s6, s7, s10;
};
automaton value2_40 {
  init s0;
  s0 -> s0 [0, 65535] { R3987 += 1, R3988 += 1 };
  s0 -> s1 [0, 65535] { R3988 += 1, R3923 += 1, R3924 += 1 };
  s0 -> s2 [0, 65535] { R3988 += 1, R3924 += 1, R23 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3988 += 1, R3923 += 1, R3924 += 1 };
  s1 -> s2 [0, 65535] { R3988 += 1, R3924 += 1, R23 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R3988 += 1 };
  s2 -> s2 [0, 65535] { R3988 += 1, R3924 += 1, R23 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3988 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R3990 += 1, R3926 += 1 };
  s0 -> s2 [0, 65535] { R3990 += 1, R3925 += 1, R3926 += 1 };
  s0 -> s0 [0, 65535] { R3989 += 1, R3990 += 1 };
  s0 -> s3 [70, 70] { R3990 += 1, R3926 += 1 };
  s0 -> s4 [70, 70] { R3990 += 1, R3926 += 1 };
  s0 -> s5 [75, 75] { R3990 += 1, R3926 += 1 };
  s0 -> s1 [76, 65535] { R3990 += 1, R3926 += 1 };
  s1 -> s1 [0, 69] { R3990 += 1, R3926 += 1 };
  s1 -> s3 [70, 70] { R3990 += 1, R3926 += 1 };
  s1 -> s4 [70, 70] { R3990 += 1, R3926 += 1 };
  s1 -> s5 [75, 75] { R3990 += 1, R3926 += 1 };
  s1 -> s1 [76, 65535] { R3990 += 1, R3926 += 1 };
  s2 -> s1 [0, 69] { R3990 += 1, R3926 += 1 };
  s2 -> s2 [0, 65535] { R3990 += 1, R3925 += 1, R3926 += 1 };
  s2 -> s3 [70, 70] { R3990 += 1, R3926 += 1 };
  s2 -> s4 [70, 70] { R3990 += 1, R3926 += 1 };
  s2 -> s5 [75, 75] { R3990 += 1, R3926 += 1 };
  s2 -> s1 [76, 65535] { R3990 += 1, R3926 += 1 };
  s3 -> s3 [0, 70] { R3990 += 1, R3926 += 1 };
  s3 -> s8 [75, 75] { R3990 += 1, R3926 += 1 };
  s3 -> s3 [76, 65535] { R3990 += 1, R3926 += 1 };
  s5 -> s5 [0, 69] { R3990 += 1, R3926 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3990 += 1 };
  s5 -> s7 [70, 70] { R3990 += 1, R3926 += 1 };
  s5 -> s8 [70, 70] { R3990 += 1, R3926 += 1 };
  s5 -> s5 [75, 65535] { R3990 += 1, R3926 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3990 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 70] { R3990 += 1, R3926 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R3990 += 1 };
  s8 -> s8 [75, 65535] { R3990 += 1, R3926 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R3992 += 1, R3928 += 1, R137 += 1 };
  s0 -> s0 [0, 65535] { R3991 += 1, R3992 += 1 };
  s0 -> s2 [0, 65535] { R3992 += 1, R3927 += 1, R3928 += 1 };
  s0 -> s3 [70, 70] { R3992 += 1, R3928 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R3992 += 1, R3928 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R3992 += 1, R3928 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R3992 += 1, R3928 += 1, R137 += 1 };
  s1 -> s1 [0, 65535] { R3992 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R3992 += 1, R3928 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R3992 += 1, R3928 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R3992 += 1, R3928 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R3992 += 1, R3928 += 1, R137 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3992 += 1, R3927 += 1, R3928 += 1 };
  s2 -> s3 [70, 70] { R3992 += 1, R3928 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R3992 += 1, R3928 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R3992 += 1, R3928 += 1, R137 += 1 };
  s3 -> s6 [0, 65535] { R3992 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3992 += 1, R3928 += 1, R137 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3992 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3992 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R3994 += 1, R3930 += 1, R139 += 1 };
  s0 -> s2 [0, 65535] { R3994 += 1, R3929 += 1, R3930 += 1 };
  s0 -> s0 [0, 65535] { R3993 += 1, R3994 += 1 };
  s0 -> s3 [70, 70] { R3994 += 1, R3930 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R3994 += 1, R3930 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R3994 += 1, R3930 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R3994 += 1, R3930 += 1, R139 += 1 };
  s1 -> s1 [0, 65535] { R3994 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R3994 += 1, R3930 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R3994 += 1, R3930 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R3994 += 1, R3930 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R3994 += 1, R3930 += 1, R139 += 1 };
  s2 -> s2 [0, 65535] { R3994 += 1, R3929 += 1, R3930 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R3994 += 1, R3930 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R3994 += 1, R3930 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R3994 += 1, R3930 += 1, R139 += 1 };
  s3 -> s3 [0, 65535] { R3994 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3994 += 1, R3930 += 1, R139 += 1 };
  s4 -> s5 [0, 65535] { R3994 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3994 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R3996 += 1, R3932 += 1, R141 += 1, R142 += 1 };
  s0 -> s0 [0, 65535] { R3995 += 1, R3996 += 1 };
  s0 -> s2 [0, 65535] { R3996 += 1, R3931 += 1, R3932 += 1 };
  s0 -> s3 [70, 70] { R3996 += 1, R3932 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R3996 += 1, R3932 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R3996 += 1, R3932 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R3996 += 1, R3932 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 65535] { R3996 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R3996 += 1, R3932 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R3996 += 1, R3932 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R3996 += 1, R3932 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R3996 += 1, R3932 += 1, R141 += 1, R142 += 1 };
  s2 -> s2 [0, 65535] { R3996 += 1, R3931 += 1, R3932 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R3996 += 1, R3932 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R3996 += 1, R3932 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R3996 += 1, R3932 += 1, R141 += 1, R142 += 1 };
  s3 -> s6 [0, 65535] { R3996 += 1 };
  s3 -> s3 [0, 65535] { R3996 += 1, R3932 += 1, R141 += 1, R142 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3996 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3996 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R3998 += 1, R3934 += 1, R147 += 1, R148 += 1 };
  s0 -> s2 [0, 65535] { R3998 += 1, R3933 += 1, R3934 += 1 };
  s0 -> s0 [0, 65535] { R3997 += 1, R3998 += 1 };
  s0 -> s3 [70, 70] { R3998 += 1, R3934 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R3998 += 1, R3934 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R3998 += 1, R3934 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R3998 += 1, R3934 += 1, R147 += 1, R148 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3998 += 1 };
  s1 -> s3 [70, 70] { R3998 += 1, R3934 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R3998 += 1, R3934 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R3998 += 1, R3934 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R3998 += 1, R3934 += 1, R147 += 1, R148 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3998 += 1, R3933 += 1, R3934 += 1 };
  s2 -> s3 [70, 70] { R3998 += 1, R3934 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R3998 += 1, R3934 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R3998 += 1, R3934 += 1, R147 += 1, R148 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3998 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3998 += 1 };
  s4 -> s4 [0, 65535] { R3998 += 1, R3934 += 1, R147 += 1, R148 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3998 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R4000 += 1, R3936 += 1, R151 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R4000 += 1, R3936 += 1, R152 += 1 };
  s0 -> s0 [0, 65535] { R3999 += 1, R4000 += 1 };
  s0 -> s3 [0, 65535] { R4000 += 1, R3935 += 1, R3936 += 1 };
  s0 -> s4 [70, 70] { R4000 += 1, R3936 += 1, R151 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R4000 += 1, R3936 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R4000 += 1, R3936 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R4000 += 1, R3936 += 1, R151 += 1, R152 += 1 };
  s0 -> s2 [71, 74] { R4000 += 1, R3936 += 1, R152 += 1 };
  s0 -> s1 [71, 65535] { R4000 += 1, R3936 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R4000 += 1, R3936 += 1, R152 += 1 };
  s0 -> s2 [76, 65535] { R4000 += 1, R3936 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R4000 += 1, R3936 += 1, R151 += 1, R152 += 1 };
  s1 -> s2 [0, 69] { R4000 += 1, R3936 += 1, R152 += 1 };
  s1 -> s4 [70, 70] { R4000 += 1, R3936 += 1, R151 += 1, R152 += 1 };
  s1 -> s5 [70, 70] { R4000 += 1, R3936 += 1, R152 += 1 };
  s1 -> s6 [70, 70] { R4000 += 1, R3936 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R4000 += 1, R3936 += 1, R151 += 1, R152 += 1 };
  s1 -> s2 [71, 74] { R4000 += 1, R3936 += 1, R152 += 1 };
  s1 -> s1 [71, 65535] { R4000 += 1, R3936 += 1, R151 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R4000 += 1, R3936 += 1, R152 += 1 };
  s1 -> s2 [76, 65535] { R4000 += 1, R3936 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R4000 += 1, R3936 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R4000 += 1, R3936 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R4000 += 1, R3936 += 1, R152 += 1 };
  s2 -> s2 [71, 74] { R4000 += 1, R3936 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R4000 += 1, R3936 += 1, R152 += 1 };
  s2 -> s2 [76, 65535] { R4000 += 1, R3936 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R4000 += 1, R3936 += 1, R151 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R4000 += 1, R3936 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R4000 += 1, R3935 += 1, R3936 += 1 };
  s3 -> s4 [70, 70] { R4000 += 1, R3936 += 1, R151 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R4000 += 1, R3936 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R4000 += 1, R3936 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R4000 += 1, R3936 += 1, R151 += 1, R152 += 1 };
  s3 -> s2 [71, 74] { R4000 += 1, R3936 += 1, R152 += 1 };
  s3 -> s1 [71, 65535] { R4000 += 1, R3936 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R4000 += 1, R3936 += 1, R152 += 1 };
  s3 -> s2 [76, 65535] { R4000 += 1, R3936 += 1, R152 += 1 };
  s5 -> s5 [0, 74] { R4000 += 1, R3936 += 1, R152 += 1 };
  s5 -> s10 [75, 75] { R4000 += 1, R3936 += 1, R152 += 1 };
  s5 -> s5 [76, 65535] { R4000 += 1, R3936 += 1, R152 += 1 };
  s7 -> s5 [0, 74] { R4000 += 1, R3936 += 1, R152 += 1 };
  s7 -> s7 [0, 65535] { R4000 += 1, R3936 += 1, R151 += 1, R152 += 1 };
  s7 -> s10 [75, 75] { R4000 += 1, R3936 += 1, R152 += 1 };
  s7 -> s5 [76, 65535] { R4000 += 1, R3936 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R4000 += 1, R3936 += 1, R152 += 1 };
  s8 -> s8 [0, 65535] { R4000 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R4000 += 1, R3936 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R4000 += 1, R3936 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R4000 += 1, R3936 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R4000 += 1, R3936 += 1, R152 += 1 };
  s10 -> s12 [0, 65535] { R4000 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R4000 += 1 };
  s12 -> s12 [0, 65535] { R4000 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R4002 += 1, R3938 += 1, R155 += 1, R156 += 1 };
  s0 -> s0 [0, 65535] { R4001 += 1, R4002 += 1 };
  s0 -> s2 [0, 65535] { R4002 += 1, R3937 += 1, R3938 += 1 };
  s0 -> s3 [70, 70] { R4002 += 1, R3938 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R4002 += 1, R3938 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R4002 += 1, R3938 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R4002 += 1, R3938 += 1, R155 += 1, R156 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4002 += 1 };
  s1 -> s3 [70, 70] { R4002 += 1, R3938 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R4002 += 1, R3938 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R4002 += 1, R3938 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R4002 += 1, R3938 += 1, R155 += 1, R156 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4002 += 1, R3937 += 1, R3938 += 1 };
  s2 -> s3 [70, 70] { R4002 += 1, R3938 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R4002 += 1, R3938 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R4002 += 1, R3938 += 1, R155 += 1, R156 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4002 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4002 += 1 };
  s4 -> s4 [0, 65535] { R4002 += 1, R3938 += 1, R155 += 1, R156 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4002 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R4004 += 1, R3940 += 1, R161 += 1, R162 += 1 };
  s0 -> s0 [0, 65535] { R4003 += 1, R4004 += 1 };
  s0 -> s2 [0, 65535] { R4004 += 1, R3939 += 1, R3940 += 1 };
  s0 -> s3 [70, 70] { R4004 += 1, R3940 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R4004 += 1, R3940 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R4004 += 1, R3940 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R4004 += 1, R3940 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535] { R4004 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R4004 += 1, R3940 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R4004 += 1, R3940 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R4004 += 1, R3940 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R4004 += 1, R3940 += 1, R161 += 1, R162 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R4004 += 1, R3939 += 1, R3940 += 1 };
  s2 -> s3 [70, 70] { R4004 += 1, R3940 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R4004 += 1, R3940 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R4004 += 1, R3940 += 1, R161 += 1, R162 += 1 };
  s3 -> s3 [0, 65535] { R4004 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4004 += 1, R3940 += 1, R161 += 1, R162 += 1 };
  s4 -> s5 [0, 65535] { R4004 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4004 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R4006 += 1, R3942 += 1, R167 += 1, R168 += 1 };
  s0 -> s0 [0, 65535] { R4005 += 1, R4006 += 1 };
  s0 -> s2 [0, 65535] { R4006 += 1, R3941 += 1, R3942 += 1 };
  s0 -> s3 [70, 70] { R4006 += 1, R3942 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R4006 += 1, R3942 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R4006 += 1, R3942 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R4006 += 1, R3942 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 65535] { R4006 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R4006 += 1, R3942 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R4006 += 1, R3942 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R4006 += 1, R3942 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R4006 += 1, R3942 += 1, R167 += 1, R168 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R4006 += 1, R3941 += 1, R3942 += 1 };
  s2 -> s3 [70, 70] { R4006 += 1, R3942 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R4006 += 1, R3942 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R4006 += 1, R3942 += 1, R167 += 1, R168 += 1 };
  s3 -> s3 [0, 65535] { R4006 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R4006 += 1 };
  s4 -> s4 [0, 65535] { R4006 += 1, R3942 += 1, R167 += 1, R168 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4006 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R4008 += 1, R3944 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s2 [0, 69] { R4008 += 1, R3944 += 1, R175 += 1, R176 += 1 };
  s0 -> s3 [0, 69] { R4008 += 1, R3944 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s0 [0, 65535] { R4007 += 1, R4008 += 1 };
  s0 -> s4 [0, 65535] { R4008 += 1, R3943 += 1, R3944 += 1 };
  s0 -> s5 [70, 70] { R4008 += 1, R3944 += 1, R175 += 1, R176 += 1 };
  s0 -> s6 [70, 70] { R4008 += 1, R3944 += 1, R175 += 1, R176 += 1 };
  s0 -> s7 [70, 70] { R4008 += 1, R3944 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s8 [70, 70] { R4008 += 1, R3944 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s9 [70, 70] { R4008 += 1, R3944 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s10 [70, 70] { R4008 += 1, R3944 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s1 [71, 65535] { R4008 += 1, R3944 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s2 [71, 65535] { R4008 += 1, R3944 += 1, R175 += 1, R176 += 1 };
  s0 -> s3 [71, 65535] { R4008 += 1, R3944 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s1 [0, 69] { R4008 += 1, R3944 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s11 [0, 65535];
  s1 -> s1 [0, 65535] { R4008 += 1 };
  s1 -> s8 [70, 70] { R4008 += 1, R3944 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s10 [70, 70] { R4008 += 1, R3944 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s1 [71, 65535] { R4008 += 1, R3944 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s1 [0, 69] { R4008 += 1, R3944 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [0, 69] { R4008 += 1, R3944 += 1, R175 += 1, R176 += 1 };
  s2 -> s3 [0, 69] { R4008 += 1, R3944 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s5 [70, 70] { R4008 += 1, R3944 += 1, R175 += 1, R176 += 1 };
  s2 -> s6 [70, 70] { R4008 += 1, R3944 += 1, R175 += 1, R176 += 1 };
  s2 -> s7 [70, 70] { R4008 += 1, R3944 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s8 [70, 70] { R4008 += 1, R3944 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s9 [70, 70] { R4008 += 1, R3944 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s10 [70, 70] { R4008 += 1, R3944 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s1 [71, 65535] { R4008 += 1, R3944 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [71, 65535] { R4008 += 1, R3944 += 1, R175 += 1, R176 += 1 };
  s2 -> s3 [71, 65535] { R4008 += 1, R3944 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s1 [0, 69] { R4008 += 1, R3944 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [0, 69] { R4008 += 1, R3944 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s7 [70, 70] { R4008 += 1, R3944 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s8 [70, 70] { R4008 += 1, R3944 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s9 [70, 70] { R4008 += 1, R3944 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s10 [70, 70] { R4008 += 1, R3944 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s1 [71, 65535] { R4008 += 1, R3944 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [71, 65535] { R4008 += 1, R3944 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s1 [0, 69] { R4008 += 1, R3944 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s2 [0, 69] { R4008 += 1, R3944 += 1, R175 += 1, R176 += 1 };
  s4 -> s3 [0, 69] { R4008 += 1, R3944 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s4 [0, 65535] { R4008 += 1, R3943 += 1, R3944 += 1 };
  s4 -> s5 [70, 70] { R4008 += 1, R3944 += 1, R175 += 1, R176 += 1 };
  s4 -> s6 [70, 70] { R4008 += 1, R3944 += 1, R175 += 1, R176 += 1 };
  s4 -> s7 [70, 70] { R4008 += 1, R3944 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s8 [70, 70] { R4008 += 1, R3944 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s9 [70, 70] { R4008 += 1, R3944 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s10 [70, 70] { R4008 += 1, R3944 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s1 [71, 65535] { R4008 += 1, R3944 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s2 [71, 65535] { R4008 += 1, R3944 += 1, R175 += 1, R176 += 1 };
  s4 -> s3 [71, 65535] { R4008 += 1, R3944 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s6 -> s6 [0, 65535] { R4008 += 1, R3944 += 1, R175 += 1, R176 += 1 };
  s6 -> s8 [0, 65535] { R4008 += 1, R3944 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s6 -> s9 [0, 65535] { R4008 += 1, R3944 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s8 -> s11 [0, 65535];
  s8 -> s12 [0, 65535] { R4008 += 1 };
  s8 -> s8 [0, 65535] { R4008 += 1, R3944 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s9 -> s8 [0, 65535] { R4008 += 1, R3944 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s9 -> s9 [0, 65535] { R4008 += 1, R3944 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s10 -> s11 [0, 65535];
  s10 -> s10 [0, 65535] { R4008 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R4008 += 1 };
  accepting s12, s8, s1, s10, s11;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R4010 += 1, R3946 += 1, R185 += 1, R186 += 1 };
  s0 -> s0 [0, 65535] { R4009 += 1, R4010 += 1 };
  s0 -> s2 [0, 65535] { R4010 += 1, R3945 += 1, R3946 += 1 };
  s0 -> s3 [70, 70] { R4010 += 1, R3946 += 1, R185 += 1, R186 += 1 };
  s0 -> s4 [70, 70] { R4010 += 1, R3946 += 1, R185 += 1, R186 += 1 };
  s0 -> s1 [71, 65535] { R4010 += 1, R3946 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 69] { R4010 += 1, R3946 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 65535] { R4010 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R4010 += 1, R3946 += 1, R185 += 1, R186 += 1 };
  s1 -> s4 [70, 70] { R4010 += 1, R3946 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [71, 65535] { R4010 += 1, R3946 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [0, 69] { R4010 += 1, R3946 += 1, R185 += 1, R186 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4010 += 1, R3945 += 1, R3946 += 1 };
  s2 -> s3 [70, 70] { R4010 += 1, R3946 += 1, R185 += 1, R186 += 1 };
  s2 -> s4 [70, 70] { R4010 += 1, R3946 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [71, 65535] { R4010 += 1, R3946 += 1, R185 += 1, R186 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4010 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4010 += 1, R3946 += 1, R185 += 1, R186 += 1 };
  s4 -> s6 [0, 65535] { R4010 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4010 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R4012 += 1, R3948 += 1, R2741 += 1, R2742 += 1 };
  s0 -> s2 [0, 69] { R4012 += 1, R3948 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s0 -> s3 [0, 69] { R4012 += 1, R3948 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s0 -> s0 [0, 65535] { R4011 += 1, R4012 += 1 };
  s0 -> s4 [0, 65535] { R4012 += 1, R3947 += 1, R3948 += 1 };
  s0 -> s5 [70, 70] { R4012 += 1, R3948 += 1, R2741 += 1, R2742 += 1 };
  s0 -> s6 [70, 70] { R4012 += 1, R3948 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s0 -> s7 [70, 70] { R4012 += 1, R3948 += 1, R2741 += 1, R2742 += 1 };
  s0 -> s8 [70, 70] { R4012 += 1, R3948 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s0 -> s9 [70, 70] { R4012 += 1, R3948 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s0 -> s10 [70, 70] { R4012 += 1, R3948 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s0 -> s1 [71, 65535] { R4012 += 1, R3948 += 1, R2741 += 1, R2742 += 1 };
  s0 -> s2 [71, 65535] { R4012 += 1, R3948 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s0 -> s3 [71, 65535] { R4012 += 1, R3948 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s1 -> s1 [0, 69] { R4012 += 1, R3948 += 1, R2741 += 1, R2742 += 1 };
  s1 -> s2 [0, 69] { R4012 += 1, R3948 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s1 -> s3 [0, 69] { R4012 += 1, R3948 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s1 -> s5 [70, 70] { R4012 += 1, R3948 += 1, R2741 += 1, R2742 += 1 };
  s1 -> s6 [70, 70] { R4012 += 1, R3948 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s1 -> s7 [70, 70] { R4012 += 1, R3948 += 1, R2741 += 1, R2742 += 1 };
  s1 -> s8 [70, 70] { R4012 += 1, R3948 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s1 -> s9 [70, 70] { R4012 += 1, R3948 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s1 -> s10 [70, 70] { R4012 += 1, R3948 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s1 -> s1 [71, 65535] { R4012 += 1, R3948 += 1, R2741 += 1, R2742 += 1 };
  s1 -> s2 [71, 65535] { R4012 += 1, R3948 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s1 -> s3 [71, 65535] { R4012 += 1, R3948 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s2 -> s2 [0, 69] { R4012 += 1, R3948 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s2 -> s14 [0, 69] { R4012 += 1, R3948 += 1, R2742 += 1 };
  s2 -> s11 [70, 70] { R4012 += 1, R3948 += 1, R2742 += 1 };
  s2 -> s6 [70, 70] { R4012 += 1, R3948 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s2 -> s8 [70, 70] { R4012 += 1, R3948 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s2 -> s15 [70, 70] { R4012 += 1, R3948 += 1, R2742 += 1 };
  s2 -> s2 [71, 65535] { R4012 += 1, R3948 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s2 -> s14 [71, 65535] { R4012 += 1, R3948 += 1, R2742 += 1 };
  s3 -> s2 [0, 69] { R4012 += 1, R3948 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s3 -> s3 [0, 69] { R4012 += 1, R3948 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s3 -> s6 [70, 70] { R4012 += 1, R3948 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s3 -> s8 [70, 70] { R4012 += 1, R3948 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s3 -> s9 [70, 70] { R4012 += 1, R3948 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s3 -> s10 [70, 70] { R4012 += 1, R3948 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s3 -> s2 [71, 65535] { R4012 += 1, R3948 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s3 -> s3 [71, 65535] { R4012 += 1, R3948 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s4 -> s1 [0, 69] { R4012 += 1, R3948 += 1, R2741 += 1, R2742 += 1 };
  s4 -> s2 [0, 69] { R4012 += 1, R3948 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s4 -> s3 [0, 69] { R4012 += 1, R3948 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s4 -> s4 [0, 65535] { R4012 += 1, R3947 += 1, R3948 += 1 };
  s4 -> s5 [70, 70] { R4012 += 1, R3948 += 1, R2741 += 1, R2742 += 1 };
  s4 -> s6 [70, 70] { R4012 += 1, R3948 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s4 -> s7 [70, 70] { R4012 += 1, R3948 += 1, R2741 += 1, R2742 += 1 };
  s4 -> s8 [70, 70] { R4012 += 1, R3948 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s4 -> s9 [70, 70] { R4012 += 1, R3948 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s4 -> s10 [70, 70] { R4012 += 1, R3948 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s4 -> s1 [71, 65535] { R4012 += 1, R3948 += 1, R2741 += 1, R2742 += 1 };
  s4 -> s2 [71, 65535] { R4012 += 1, R3948 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s4 -> s3 [71, 65535] { R4012 += 1, R3948 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s7 -> s7 [0, 65535] { R4012 += 1, R3948 += 1, R2741 += 1, R2742 += 1 };
  s7 -> s8 [0, 65535] { R4012 += 1, R3948 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s7 -> s9 [0, 65535] { R4012 += 1, R3948 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s8 -> s11 [0, 65535] { R4012 += 1, R3948 += 1, R2742 += 1 };
  s8 -> s8 [0, 65535] { R4012 += 1, R3948 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s9 -> s8 [0, 65535] { R4012 += 1, R3948 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s9 -> s9 [0, 65535] { R4012 += 1, R3948 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s11 [0, 65535] { R4012 += 1, R3948 += 1, R2742 += 1 };
  s11 -> s13 [0, 65535] { R4012 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R4012 += 1 };
  s14 -> s14 [0, 69] { R4012 += 1, R3948 += 1, R2742 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R4012 += 1 };
  s14 -> s11 [70, 70] { R4012 += 1, R3948 += 1, R2742 += 1 };
  s14 -> s15 [70, 70] { R4012 += 1, R3948 += 1, R2742 += 1 };
  s14 -> s14 [71, 65535] { R4012 += 1, R3948 += 1, R2742 += 1 };
  s15 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R4012 += 1 };
  accepting s12, s13, s14, s15, s11;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R4014 += 1, R3950 += 1, R3858 += 1, R3859 += 1, R3860 += 1 };
  s0 -> s2 [0, 69] { R4014 += 1, R3950 += 1, R3857 += 1, R3858 += 1 };
  s0 -> s3 [0, 65535] { R4014 += 1, R3949 += 1, R3950 += 1 };
  s0 -> s0 [0, 65535] { R4013 += 1, R4014 += 1 };
  s0 -> s4 [70, 70] { R4014 += 1, R3950 += 1, R3858 += 1, R3859 += 1, R3860 += 1 };
  s0 -> s5 [70, 70] { R4014 += 1, R3950 += 1, R3857 += 1, R3858 += 1 };
  s0 -> s6 [70, 70] { R4014 += 1, R3950 += 1, R3858 += 1, R3859 += 1, R3860 += 1 };
  s0 -> s7 [70, 70] { R4014 += 1, R3950 += 1, R3857 += 1, R3858 += 1 };
  s0 -> s1 [71, 65535] { R4014 += 1, R3950 += 1, R3858 += 1, R3859 += 1, R3860 += 1 };
  s0 -> s2 [71, 65535] { R4014 += 1, R3950 += 1, R3857 += 1, R3858 += 1 };
  s1 -> s1 [0, 69] { R4014 += 1, R3950 += 1, R3858 += 1, R3859 += 1, R3860 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s1 [0, 65535] { R4014 += 1 };
  s1 -> s4 [70, 70] { R4014 += 1, R3950 += 1, R3858 += 1, R3859 += 1, R3860 += 1 };
  s1 -> s6 [70, 70] { R4014 += 1, R3950 += 1, R3858 += 1, R3859 += 1, R3860 += 1 };
  s1 -> s1 [71, 65535] { R4014 += 1, R3950 += 1, R3858 += 1, R3859 += 1, R3860 += 1 };
  s2 -> s1 [0, 69] { R4014 += 1, R3950 += 1, R3858 += 1, R3859 += 1, R3860 += 1 };
  s2 -> s2 [0, 69] { R4014 += 1, R3950 += 1, R3857 += 1, R3858 += 1 };
  s2 -> s4 [70, 70] { R4014 += 1, R3950 += 1, R3858 += 1, R3859 += 1, R3860 += 1 };
  s2 -> s5 [70, 70] { R4014 += 1, R3950 += 1, R3857 += 1, R3858 += 1 };
  s2 -> s6 [70, 70] { R4014 += 1, R3950 += 1, R3858 += 1, R3859 += 1, R3860 += 1 };
  s2 -> s7 [70, 70] { R4014 += 1, R3950 += 1, R3857 += 1, R3858 += 1 };
  s2 -> s1 [71, 65535] { R4014 += 1, R3950 += 1, R3858 += 1, R3859 += 1, R3860 += 1 };
  s2 -> s2 [71, 65535] { R4014 += 1, R3950 += 1, R3857 += 1, R3858 += 1 };
  s3 -> s1 [0, 69] { R4014 += 1, R3950 += 1, R3858 += 1, R3859 += 1, R3860 += 1 };
  s3 -> s2 [0, 69] { R4014 += 1, R3950 += 1, R3857 += 1, R3858 += 1 };
  s3 -> s3 [0, 65535] { R4014 += 1, R3949 += 1, R3950 += 1 };
  s3 -> s4 [70, 70] { R4014 += 1, R3950 += 1, R3858 += 1, R3859 += 1, R3860 += 1 };
  s3 -> s5 [70, 70] { R4014 += 1, R3950 += 1, R3857 += 1, R3858 += 1 };
  s3 -> s6 [70, 70] { R4014 += 1, R3950 += 1, R3858 += 1, R3859 += 1, R3860 += 1 };
  s3 -> s7 [70, 70] { R4014 += 1, R3950 += 1, R3857 += 1, R3858 += 1 };
  s3 -> s1 [71, 65535] { R4014 += 1, R3950 += 1, R3858 += 1, R3859 += 1, R3860 += 1 };
  s3 -> s2 [71, 65535] { R4014 += 1, R3950 += 1, R3857 += 1, R3858 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [0, 65535] { R4014 += 1, R3950 += 1, R3858 += 1, R3859 += 1, R3860 += 1 };
  s4 -> s9 [0, 65535] { R4014 += 1 };
  s5 -> s4 [0, 65535] { R4014 += 1, R3950 += 1, R3858 += 1, R3859 += 1, R3860 += 1 };
  s5 -> s5 [0, 65535] { R4014 += 1, R3950 += 1, R3857 += 1, R3858 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R4014 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R4014 += 1 };
  accepting s4, s8, s9, s6, s1;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R3894 && R3 = R4014 && R25 - R4014 = -1 && R26 = R4014 && R27 - R4014 = -1 && R28 = R4014 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R3862 + -1*R3858 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R3862 + -1*R3858 - R130 = 0 && R129 + R3861 + R3857 = 0 && R131 + R3863 + R3859 = 0 && R132 + R3864 + R3860 = 0 && R3893 = 0 && R3925 = 0 && R3926 = 0 && R3935 = 0 && R3936 = 0 && R3943 = 0 && R3944 = 0 && R3947 = 0 && R3948 = 0 && R3949 = 0 && R3950 = 0 && R3951 = 0 && R3952 = R4014 && R3953 = 0 && R3954 = R4014 && R3955 = 0 && R3956 = R4014 && R3957 = 0 && R3958 = R4014 && R3959 = 0 && R3960 = R4014 && R3961 = 0 && R3962 = R4014 && R3963 = 0 && R3964 = R4014 && R3965 = 0 && R3966 = R4014 && R3967 = 0 && R3968 = R4014 && R3969 = 0 && R3970 = R4014 && R3971 = 0 && R3972 = R4014 && R3973 = 0 && R3974 = R4014 && R3975 = 0 && R3976 = R4014 && R3977 = 0 && R3978 = R4014 && R3979 = 0 && R3980 = R4014 && R3981 = 0 && R3982 = R4014 && R3983 = 0 && R3984 = R4014 && R3985 = 0 && R3986 = R4014 && R3987 = 0 && R3988 = R4014 && R3989 = 0 && R3990 = R4014 && R3991 = 0 && R3992 = R4014 && R3993 = 0 && R3994 = R4014 && R3995 = 0 && R3996 = R4014 && R3997 = 0 && R3998 = R4014 && R3999 = 0 && R4000 = R4014 && R4001 = 0 && R4002 = R4014 && R4003 = 0 && R4004 = R4014 && R4005 = 0 && R4006 = R4014 && R4007 = 0 && R4008 = R4014 && R4009 = 0 && R4010 = R4014 && R4011 = 0 && R4012 = R4014 && R4013 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R3862 + -1*R3858 - R130 < 1 && -1 < R3894 && 0 < R4014 && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R3862 + -1*R3858 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R191 + R187 = 0 && R114 + R192 + R188 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R3862 + -1*R3858 - R130 = 0 || R130 + R3862 + R3858 < 1) && (R81 + R158 + R155 = 0 || R130 + R3862 + R3858 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R3862 + -1*R3858 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R3862 + R3858 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R3862 + -1*R3858 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R3862 + R3858 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R3862 + -1*R3858 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R3862 + R3858 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 != 0 || R112 + R190 + R186 + -1*R3862 + -1*R3858 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R3862 + R3858 = 0)) && (R113 + R191 + R187 != 0 || R83 + R160 + R157 + -1*R192 + -1*R188 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R2746 + R2741 != 0 || R120 + R2747 + R2742 + -1*R3862 + -1*R3858 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R3862 + R3858 = 0)) && (R3865 != 0 || R3866 = R3894 || (R22 = 0 && R3894 = 0)) && (R3867 != 0 || R3868 = R3894 || (R22 = 0 && R3894 = 0)) && (R3869 != 0 || R3870 = R3894 || (R22 = 0 && R3894 = 0)) && (R3871 != 0 || R3872 = R3894 || (R22 = 0 && R3894 = 0)) && (R3873 != 0 || R3874 = R3894 || (R22 = 0 && R3894 = 0)) && (R3875 != 0 || R3876 = R3894 || (R22 = 0 && R3894 = 0)) && (R3877 != 0 || R3878 = R3894 || (R22 = 0 && R3894 = 0)) && (R3879 != 0 || R3880 = R3894 || (R22 = 0 && R3894 = 0)) && (R3881 != 0 || R3882 = R3894 || (R22 = 0 && R3894 = 0)) && (R3883 != 0 || R3884 = R3894 || (R22 = 0 && R3894 = 0)) && (R3885 != 0 || R3886 = R3894 || (R22 = 0 && R3894 = 0)) && (R3887 != 0 || R3888 = R3894 || (R22 = 0 && R3894 = 0)) && (R3889 != 0 || R3890 = R3894 || (R22 = 0 && R3894 = 0)) && (R3891 != 0 || R3892 = R3894 || (R22 = 0 && R3894 = 0)) && (R23 = 0 || (R3923 = 0 && R3924 = 0)) && (R23 = 0 || (R3927 = 0 && R3928 = 0)) && (R23 = 0 || (R3929 = 0 && R3930 = 0)) && (R23 = 0 || (R3931 = 0 && R3932 = 0)) && (R23 = 0 || (R3933 = 0 && R3934 = 0)) && (R23 = 0 || (R3937 = 0 && R3938 = 0)) && (R23 = 0 || (R3939 = 0 && R3940 = 0)) && (R23 = 0 || (R3941 = 0 && R3942 = 0)) && (R23 = 0 || (R3945 = 0 && R3946 = 0)) && (R24 = 0 || (R3895 = 0 && R3896 = 0)) && (R24 = 0 || (R3897 = 0 && R3898 = 0)) && (R24 = 0 || (R3899 = 0 && R3900 = 0)) && (R24 = 0 || (R3901 = 0 && R3902 = 0)) && (R24 = 0 || (R3903 = 0 && R3904 = 0)) && (R24 = 0 || (R3905 = 0 && R3906 = 0)) && (R24 = 0 || (R3907 = 0 && R3908 = 0)) && (R24 = 0 || (R3909 = 0 && R3910 = 0)) && (R24 = 0 || (R3911 = 0 && R3912 = 0)) && (R24 = 0 || (R3913 = 0 && R3914 = 0)) && (R24 = 0 || (R3915 = 0 && R3916 = 0)) && (R24 = 0 || (R3917 = 0 && R3918 = 0)) && (R24 = 0 || (R3919 = 0 && R3920 = 0)) && (R24 = 0 || (R3921 = 0 && R3922 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R3862 + R3858 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R3862 + R3858 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R3862 + R3858 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 = 0 || (R83 + R160 + R157 = 0 && R130 + R3862 + R3858 = 0)) && (R113 + R191 + R187 = 0 || R83 + R160 + R157 < 1) && (R119 + R2746 + R2741 = 0 || (R83 + R160 + R157 = 0 && R130 + R3862 + R3858 = 0)) && (R123 + R2750 + R2745 = 0 || (R121 + R2748 + R2743 = 0 && R122 + R2749 + R2744 = 0)) && (R3865 = 0 || (R22 = 0 && R3894 = 0)) && (R3867 = 0 || (R22 = 0 && R3894 = 0)) && (R3869 = 0 || (R22 = 0 && R3894 = 0)) && (R3871 = 0 || (R22 = 0 && R3894 = 0)) && (R3873 = 0 || (R22 = 0 && R3894 = 0)) && (R3875 = 0 || (R22 = 0 && R3894 = 0)) && (R3877 = 0 || (R22 = 0 && R3894 = 0)) && (R3879 = 0 || (R22 = 0 && R3894 = 0)) && (R3881 = 0 || (R22 = 0 && R3894 = 0)) && (R3883 = 0 || (R22 = 0 && R3894 = 0)) && (R3885 = 0 || (R22 = 0 && R3894 = 0)) && (R3887 = 0 || (R22 = 0 && R3894 = 0)) && (R3889 = 0 || (R22 = 0 && R3894 = 0)) && (R3891 = 0 || (R22 = 0 && R3894 = 0));
// End of Parikh automata intersection problem
