// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R10235, R10236, R10237, R10238, R10239, R10240, R10241, R10242, R10243, R10244, R10245, R10246, R10247, R10248, R10249, R10250, R10251, R10252, R10253, R10254, R10255, R10256, R10257, R10258, R10259, R10260, R10261, R10262, R10263, R10264, R10265, R10266, R10267, R10268, R10269, R10270, R10271, R10272, R10273, R10274, R10275, R10276, R10277, R10278, R10279, R10280, R10281, R10282, R10283, R10284, R10285, R10286, R10287, R10288, R10289, R10290, R10291, R10292, R10293, R10294, R10295, R10296, R10297, R10298, R10299, R103, R10300, R10301, R10302, R10303, R10304, R10305, R10306, R10307, R10308, R10309, R10310, R10311, R10312, R10313, R10314, R10315, R10316, R10317, R10318, R10319, R10320, R10321, R10322, R10323, R10324, R10325, R10326, R10327, R10328, R10329, R10330, R10331, R10332, R10333, R10334, R10335, R10336, R10337, R10338, R10339, R10340, R10341, R10342, R10343, R10344, R10345, R10346, R10347, R10348, R10349, R10350, R10351, R10352, R10353, R10354, R10355, R10356, R10357, R10358, R10359, R10360, R10361, R10362, R10363, R10364, R10365, R10366, R10367, R10368, R10369, R10370, R10371, R10372, R10373, R10374, R10375, R10376, R10377, R10378, R10379, R10380, R10381, R10382, R10383, R10384, R10385, R10386, R10387, R10388, R10389, R10390, R10391, R10392, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R2, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R5, R63, R65, R6563, R6564, R6565, R6566, R6567, R6568, R6569, R6570, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R9119, R9120, R9121, R9122, R9123, R9124, R9125, R9126, R9127, R9128, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R30 += 1 };
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R10273 += 1, R10274 += 1 };
  s0 -> s1 [0, 65535] { R10274 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R10274 += 1, R24 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R10276 += 1 };
  s0 -> s0 [0, 65535] { R10275 += 1, R10276 += 1 };
  s0 -> s2 [70, 70] { R10276 += 1 };
  s0 -> s3 [70, 70] { R10276 += 1 };
  s0 -> s1 [76, 65535] { R10276 += 1 };
  s1 -> s1 [0, 69] { R10276 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10276 += 1 };
  s1 -> s3 [70, 70] { R10276 += 1 };
  s1 -> s1 [76, 65535] { R10276 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R10276 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R10276 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R10278 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R10277 += 1, R10278 += 1 };
  s0 -> s2 [70, 70] { R10278 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R10278 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R10278 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R10278 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10278 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R10278 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R10278 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R10278 += 1, R63 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R10280 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R10279 += 1, R10280 += 1 };
  s0 -> s2 [70, 70] { R10280 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R10280 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R10280 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R10280 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10280 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R10280 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R10280 += 1, R65 += 1 };
  s2 -> s2 [0, 65535] { R10280 += 1, R65 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R10282 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R10281 += 1, R10282 += 1 };
  s0 -> s2 [70, 70] { R10282 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R10282 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R10282 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R10282 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10282 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R10282 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R10282 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R10282 += 1, R67 += 1, R68 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R10284 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R10283 += 1, R10284 += 1 };
  s0 -> s2 [70, 70] { R10284 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R10284 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R10284 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R10284 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10284 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R10284 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R10284 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R10284 += 1, R73 += 1, R74 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R10286 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R10285 += 1, R10286 += 1 };
  s0 -> s2 [70, 70] { R10286 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R10286 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R10286 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R10286 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10286 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R10286 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R10286 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535] { R10286 += 1, R77 += 1, R78 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R10288 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R10287 += 1, R10288 += 1 };
  s0 -> s2 [70, 70] { R10288 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R10288 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R10288 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R10288 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10288 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R10288 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R10288 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535] { R10288 += 1, R81 += 1, R82 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R10290 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R10289 += 1, R10290 += 1 };
  s0 -> s2 [70, 70] { R10290 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R10290 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R10290 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R10290 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10290 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R10290 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R10290 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R10290 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R10292 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R10291 += 1, R10292 += 1 };
  s0 -> s2 [70, 70] { R10292 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R10292 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R10292 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R10292 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10292 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R10292 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R10292 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535] { R10292 += 1, R93 += 1, R94 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R10294 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R10293 += 1, R10294 += 1 };
  s0 -> s2 [70, 70] { R10294 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R10294 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R10294 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R10294 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10294 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R10294 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R10294 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535] { R10294 += 1, R101 += 1, R102 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R10296 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R10295 += 1, R10296 += 1 };
  s0 -> s2 [70, 70] { R10296 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R10296 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R10296 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R10296 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10296 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R10296 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R10296 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535] { R10296 += 1, R111 += 1, R112 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R10298 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R10297 += 1, R10298 += 1 };
  s0 -> s2 [70, 70] { R10298 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R10298 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R10298 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R10298 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10298 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R10298 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R10298 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535] { R10298 += 1, R119 += 1, R120 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R10300 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R10299 += 1, R10300 += 1 };
  s0 -> s2 [70, 70] { R10300 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R10300 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R10300 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R10300 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10300 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R10300 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R10300 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R10300 += 1, R129 += 1, R130 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R10330 += 1 };
  s0 -> s0 [0, 65535] { R10329 += 1, R10330 += 1 };
  s0 -> s2 [70, 70] { R10330 += 1 };
  s0 -> s1 [71, 65535] { R10330 += 1 };
  s1 -> s1 [0, 69] { R10330 += 1 };
  s1 -> s2 [70, 70] { R10330 += 1 };
  s1 -> s1 [71, 65535] { R10330 += 1 };
  s2 -> s2 [0, 65535] { R10330 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R10331 += 1, R10332 += 1 };
  s0 -> s1 [0, 65535] { R10332 += 1, R2 += 1 };
  s1 -> s1 [0, 65535] { R10332 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R10334 += 1 };
  s0 -> s0 [0, 65535] { R10333 += 1, R10334 += 1 };
  s0 -> s2 [0, 65535] { R10334 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R10334 += 1 };
  s0 -> s1 [71, 65535] { R10334 += 1 };
  s1 -> s1 [0, 69] { R10334 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R10334 += 1 };
  s1 -> s1 [71, 65535] { R10334 += 1 };
  s2 -> s1 [0, 69] { R10334 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R10334 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R10334 += 1 };
  s2 -> s1 [71, 65535] { R10334 += 1 };
  s3 -> s3 [0, 65535] { R10334 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R10336 += 1, R10244 += 1 };
  s0 -> s0 [0, 65535] { R10335 += 1, R10336 += 1 };
  s0 -> s2 [0, 65535] { R10336 += 1, R10243 += 1, R10244 += 1 };
  s0 -> s1 [71, 65535] { R10336 += 1, R10244 += 1 };
  s1 -> s1 [0, 69] { R10336 += 1, R10244 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R10336 += 1 };
  s1 -> s1 [71, 65535] { R10336 += 1, R10244 += 1 };
  s2 -> s1 [0, 69] { R10336 += 1, R10244 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R10336 += 1, R10243 += 1, R10244 += 1 };
  s2 -> s1 [71, 65535] { R10336 += 1, R10244 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R10338 += 1, R10245 += 1, R10246 += 1 };
  s0 -> s0 [0, 65535] { R10337 += 1, R10338 += 1 };
  s0 -> s2 [0, 65535] { R10338 += 1, R10246 += 1, R22 += 1 };
  s1 -> s1 [0, 65535] { R10338 += 1, R10245 += 1, R10246 += 1 };
  s1 -> s2 [0, 65535] { R10338 += 1, R10246 += 1, R22 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R10338 += 1 };
  s2 -> s2 [0, 65535] { R10338 += 1, R10246 += 1, R22 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R10338 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R10340 += 1, R10248 += 1 };
  s0 -> s2 [0, 65535] { R10340 += 1, R10247 += 1, R10248 += 1 };
  s0 -> s0 [0, 65535] { R10339 += 1, R10340 += 1 };
  s0 -> s1 [75, 65535] { R10340 += 1, R10248 += 1 };
  s1 -> s1 [0, 70] { R10340 += 1, R10248 += 1 };
  s1 -> s1 [0, 65535] { R10340 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R10340 += 1, R10248 += 1 };
  s2 -> s1 [0, 70] { R10340 += 1, R10248 += 1 };
  s2 -> s2 [0, 65535] { R10340 += 1, R10247 += 1, R10248 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R10340 += 1, R10248 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s0 [0, 65535] { R10341 += 1, R10342 += 1 };
  s0 -> s1 [0, 65535] { R10342 += 1, R10249 += 1, R10250 += 1 };
  s0 -> s2 [0, 65535] { R10342 += 1, R10250 += 1, R138 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R10342 += 1, R10249 += 1, R10250 += 1 };
  s1 -> s2 [0, 65535] { R10342 += 1, R10250 += 1, R138 += 1 };
  s2 -> s3 [0, 65535] { R10342 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R10342 += 1, R10250 += 1, R138 += 1 };
  s3 -> s3 [0, 65535] { R10342 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R10344 += 1, R10252 += 1 };
  s0 -> s2 [0, 65535] { R10344 += 1, R10252 += 1, R140 += 1 };
  s0 -> s0 [0, 65535] { R10343 += 1, R10344 += 1 };
  s0 -> s3 [0, 65535] { R10344 += 1, R10251 += 1, R10252 += 1 };
  s0 -> s1 [76, 65535] { R10344 += 1, R10252 += 1 };
  s1 -> s1 [0, 74] { R10344 += 1, R10252 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R10344 += 1 };
  s1 -> s1 [76, 65535] { R10344 += 1, R10252 += 1 };
  s2 -> s1 [0, 74] { R10344 += 1, R10252 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R10344 += 1, R10252 += 1, R140 += 1 };
  s2 -> s5 [0, 65535] { R10344 += 1 };
  s2 -> s1 [76, 65535] { R10344 += 1, R10252 += 1 };
  s3 -> s1 [0, 74] { R10344 += 1, R10252 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R10344 += 1, R10252 += 1, R140 += 1 };
  s3 -> s3 [0, 65535] { R10344 += 1, R10251 += 1, R10252 += 1 };
  s3 -> s1 [76, 65535] { R10344 += 1, R10252 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R10344 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R10346 += 1, R10254 += 1, R145 += 1, R146 += 1 };
  s0 -> s0 [0, 65535] { R10345 += 1, R10346 += 1 };
  s0 -> s2 [0, 65535] { R10346 += 1, R10253 += 1, R10254 += 1 };
  s0 -> s3 [0, 65535] { R10346 += 1, R10254 += 1, R144 += 1, R145 += 1 };
  s1 -> s1 [0, 65535] { R10346 += 1, R10254 += 1, R145 += 1, R146 += 1 };
  s1 -> s4 [0, 65535] { R10346 += 1 };
  s1 -> s6 [0, 65535] { R10346 += 1, R10254 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R10346 += 1, R10254 += 1, R145 += 1, R146 += 1 };
  s2 -> s2 [0, 65535] { R10346 += 1, R10253 += 1, R10254 += 1 };
  s2 -> s3 [0, 65535] { R10346 += 1, R10254 += 1, R144 += 1, R145 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R10346 += 1, R10254 += 1, R145 += 1, R146 += 1 };
  s3 -> s4 [0, 65535] { R10346 += 1 };
  s3 -> s3 [0, 65535] { R10346 += 1, R10254 += 1, R144 += 1, R145 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10346 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R10346 += 1 };
  s6 -> s6 [0, 65535] { R10346 += 1, R10254 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R10348 += 1, R10256 += 1, R150 += 1 };
  s0 -> s2 [0, 65535] { R10348 += 1, R10256 += 1, R149 += 1, R150 += 1 };
  s0 -> s3 [0, 65535] { R10348 += 1, R10255 += 1, R10256 += 1 };
  s0 -> s0 [0, 65535] { R10347 += 1, R10348 += 1 };
  s0 -> s4 [75, 75] { R10348 += 1, R10256 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R10348 += 1, R10256 += 1, R150 += 1 };
  s0 -> s1 [81, 65535] { R10348 += 1, R10256 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R10348 += 1, R10256 += 1, R150 += 1 };
  s1 -> s1 [0, 65535] { R10348 += 1, R10256 += 1 };
  s1 -> s6 [0, 65535] { R10348 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [75, 75] { R10348 += 1, R10256 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R10348 += 1, R10256 += 1, R150 += 1 };
  s1 -> s1 [81, 65535] { R10348 += 1, R10256 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R10348 += 1, R10256 += 1, R150 += 1 };
  s2 -> s2 [0, 65535] { R10348 += 1, R10256 += 1, R149 += 1, R150 += 1 };
  s2 -> s6 [0, 65535] { R10348 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [75, 75] { R10348 += 1, R10256 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R10348 += 1, R10256 += 1, R150 += 1 };
  s2 -> s1 [81, 65535] { R10348 += 1, R10256 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R10348 += 1, R10256 += 1, R150 += 1 };
  s3 -> s2 [0, 65535] { R10348 += 1, R10256 += 1, R149 += 1, R150 += 1 };
  s3 -> s3 [0, 65535] { R10348 += 1, R10255 += 1, R10256 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [75, 75] { R10348 += 1, R10256 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R10348 += 1, R10256 += 1, R150 += 1 };
  s3 -> s1 [81, 65535] { R10348 += 1, R10256 += 1, R150 += 1 };
  s4 -> s4 [0, 75] { R10348 += 1, R10256 += 1, R150 += 1 };
  s4 -> s4 [0, 65535] { R10348 += 1, R10256 += 1 };
  s4 -> s6 [0, 65535] { R10348 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [81, 65535] { R10348 += 1, R10256 += 1, R150 += 1 };
  s5 -> s5 [0, 65535] { R10348 += 1, R10256 += 1 };
  s5 -> s6 [0, 65535] { R10348 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R10348 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R10350 += 1, R10257 += 1, R10258 += 1 };
  s0 -> s0 [0, 65535] { R10349 += 1, R10350 += 1 };
  s0 -> s2 [0, 65535] { R10350 += 1, R10258 += 1, R154 += 1 };
  s0 -> s3 [0, 65535] { R10350 += 1, R10258 += 1 };
  s1 -> s1 [0, 65535] { R10350 += 1, R10257 += 1, R10258 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R10350 += 1, R10258 += 1, R154 += 1 };
  s1 -> s3 [0, 65535] { R10350 += 1, R10258 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R10350 += 1 };
  s2 -> s2 [0, 65535] { R10350 += 1, R10258 += 1, R154 += 1 };
  s2 -> s3 [0, 65535] { R10350 += 1, R10258 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R10350 += 1 };
  s3 -> s3 [0, 65535] { R10350 += 1, R10258 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R10350 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R10352 += 1, R10259 += 1, R10260 += 1 };
  s0 -> s0 [0, 65535] { R10351 += 1, R10352 += 1 };
  s0 -> s2 [0, 65535] { R10352 += 1, R10260 += 1, R159 += 1, R160 += 1 };
  s0 -> s3 [0, 65535] { R10352 += 1, R10260 += 1, R158 += 1, R159 += 1 };
  s1 -> s1 [0, 65535] { R10352 += 1, R10259 += 1, R10260 += 1 };
  s1 -> s2 [0, 65535] { R10352 += 1, R10260 += 1, R159 += 1, R160 += 1 };
  s1 -> s3 [0, 65535] { R10352 += 1, R10260 += 1, R158 += 1, R159 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R10352 += 1, R10260 += 1 };
  s2 -> s2 [0, 65535] { R10352 += 1, R10260 += 1, R159 += 1, R160 += 1 };
  s2 -> s4 [0, 65535] { R10352 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R10352 += 1, R10260 += 1, R159 += 1, R160 += 1 };
  s3 -> s4 [0, 65535] { R10352 += 1 };
  s3 -> s3 [0, 65535] { R10352 += 1, R10260 += 1, R158 += 1, R159 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10352 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10352 += 1, R10260 += 1 };
  s6 -> s4 [0, 65535] { R10352 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R10354 += 1, R10262 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R10354 += 1, R10261 += 1, R10262 += 1 };
  s0 -> s0 [0, 65535] { R10353 += 1, R10354 += 1 };
  s0 -> s3 [0, 65535] { R10354 += 1, R10262 += 1, R165 += 1, R166 += 1 };
  s0 -> s4 [0, 65535] { R10354 += 1, R10262 += 1, R164 += 1, R165 += 1 };
  s0 -> s1 [76, 65535] { R10354 += 1, R10262 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R10354 += 1, R10262 += 1, R165 += 1 };
  s1 -> s5 [0, 65535] { R10354 += 1 };
  s1 -> s1 [0, 65535] { R10354 += 1, R10262 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [76, 65535] { R10354 += 1, R10262 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R10354 += 1, R10262 += 1, R165 += 1 };
  s2 -> s2 [0, 65535] { R10354 += 1, R10261 += 1, R10262 += 1 };
  s2 -> s3 [0, 65535] { R10354 += 1, R10262 += 1, R165 += 1, R166 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [0, 65535] { R10354 += 1, R10262 += 1, R164 += 1, R165 += 1 };
  s2 -> s1 [76, 65535] { R10354 += 1, R10262 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R10354 += 1, R10262 += 1, R165 += 1 };
  s3 -> s5 [0, 65535] { R10354 += 1 };
  s3 -> s3 [0, 65535] { R10354 += 1, R10262 += 1, R165 += 1, R166 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R10354 += 1, R10262 += 1 };
  s3 -> s1 [76, 65535] { R10354 += 1, R10262 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R10354 += 1, R10262 += 1, R165 += 1 };
  s4 -> s5 [0, 65535] { R10354 += 1 };
  s4 -> s3 [0, 65535] { R10354 += 1, R10262 += 1, R165 += 1, R166 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R10354 += 1, R10262 += 1, R164 += 1, R165 += 1 };
  s4 -> s1 [76, 65535] { R10354 += 1, R10262 += 1, R165 += 1 };
  s5 -> s5 [0, 65535] { R10354 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R10354 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R10354 += 1, R10262 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R10356 += 1, R10264 += 1, R172 += 1, R174 += 1 };
  s0 -> s2 [0, 65535] { R10356 += 1, R10263 += 1, R10264 += 1 };
  s0 -> s0 [0, 65535] { R10355 += 1, R10356 += 1 };
  s0 -> s3 [0, 65535] { R10356 += 1, R10264 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s4 [0, 65535] { R10356 += 1, R10264 += 1, R171 += 1, R172 += 1 };
  s0 -> s1 [76, 65535] { R10356 += 1, R10264 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R10356 += 1, R10264 += 1, R172 += 1, R174 += 1 };
  s1 -> s5 [0, 65535] { R10356 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R10356 += 1, R10264 += 1 };
  s1 -> s1 [0, 65535] { R10356 += 1, R10264 += 1, R172 += 1 };
  s1 -> s1 [76, 65535] { R10356 += 1, R10264 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R10356 += 1, R10264 += 1, R172 += 1, R174 += 1 };
  s2 -> s2 [0, 65535] { R10356 += 1, R10263 += 1, R10264 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R10356 += 1, R10264 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s4 [0, 65535] { R10356 += 1, R10264 += 1, R171 += 1, R172 += 1 };
  s2 -> s1 [76, 65535] { R10356 += 1, R10264 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R10356 += 1, R10264 += 1, R172 += 1, R174 += 1 };
  s3 -> s5 [0, 65535] { R10356 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R10356 += 1, R10264 += 1 };
  s3 -> s3 [0, 65535] { R10356 += 1, R10264 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s1 [76, 65535] { R10356 += 1, R10264 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R10356 += 1, R10264 += 1, R172 += 1, R174 += 1 };
  s4 -> s5 [0, 65535] { R10356 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s3 [0, 65535] { R10356 += 1, R10264 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s4 [0, 65535] { R10356 += 1, R10264 += 1, R171 += 1, R172 += 1 };
  s4 -> s1 [76, 65535] { R10356 += 1, R10264 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535] { R10356 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R10356 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R10356 += 1, R10264 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R10358 += 1, R10266 += 1, R181 += 1 };
  s0 -> s2 [0, 65535] { R10358 += 1, R10266 += 1 };
  s0 -> s3 [0, 65535] { R10358 += 1, R10265 += 1, R10266 += 1 };
  s0 -> s0 [0, 65535] { R10357 += 1, R10358 += 1 };
  s0 -> s4 [0, 65535] { R10358 += 1, R10266 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s1 -> s1 [0, 65535] { R10358 += 1, R10266 += 1, R181 += 1 };
  s1 -> s2 [0, 65535] { R10358 += 1, R10266 += 1 };
  s1 -> s5 [0, 65535] { R10358 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R10358 += 1, R10266 += 1 };
  s2 -> s5 [0, 65535] { R10358 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s1 [0, 65535] { R10358 += 1, R10266 += 1, R181 += 1 };
  s3 -> s2 [0, 65535] { R10358 += 1, R10266 += 1 };
  s3 -> s3 [0, 65535] { R10358 += 1, R10265 += 1, R10266 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R10358 += 1, R10266 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s4 -> s1 [0, 65535] { R10358 += 1, R10266 += 1, R181 += 1 };
  s4 -> s2 [0, 65535] { R10358 += 1, R10266 += 1 };
  s4 -> s5 [0, 65535] { R10358 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R10358 += 1, R10266 += 1, R181 += 1, R183 += 1, R184 += 1 };
  s5 -> s5 [0, 65535] { R10358 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R10360 += 1, R10268 += 1, R6568 += 1, R6570 += 1 };
  s0 -> s2 [0, 65535] { R10360 += 1, R10267 += 1, R10268 += 1 };
  s0 -> s3 [0, 65535] { R10360 += 1, R10268 += 1 };
  s0 -> s1 [0, 65535] { R10360 += 1, R10268 += 1, R6568 += 1 };
  s0 -> s0 [0, 65535] { R10359 += 1, R10360 += 1 };
  s0 -> s1 [80, 65535] { R10360 += 1, R10268 += 1, R6568 += 1, R6570 += 1 };
  s1 -> s1 [0, 75] { R10360 += 1, R10268 += 1, R6568 += 1, R6570 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s3 [0, 65535] { R10360 += 1, R10268 += 1 };
  s1 -> s5 [0, 65535] { R10360 += 1 };
  s1 -> s1 [0, 65535] { R10360 += 1, R10268 += 1, R6568 += 1 };
  s1 -> s1 [80, 65535] { R10360 += 1, R10268 += 1, R6568 += 1, R6570 += 1 };
  s2 -> s1 [0, 75] { R10360 += 1, R10268 += 1, R6568 += 1, R6570 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R10360 += 1, R10267 += 1, R10268 += 1 };
  s2 -> s3 [0, 65535] { R10360 += 1, R10268 += 1 };
  s2 -> s1 [0, 65535] { R10360 += 1, R10268 += 1, R6568 += 1 };
  s2 -> s1 [80, 65535] { R10360 += 1, R10268 += 1, R6568 += 1, R6570 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R10360 += 1, R10268 += 1 };
  s3 -> s5 [0, 65535] { R10360 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R10360 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R10362 += 1, R10269 += 1, R10270 += 1 };
  s0 -> s2 [0, 65535] { R10362 += 1, R10270 += 1, R9125 += 1 };
  s0 -> s0 [0, 65535] { R10361 += 1, R10362 += 1 };
  s0 -> s3 [0, 65535] { R10362 += 1, R10270 += 1 };
  s1 -> s1 [0, 65535] { R10362 += 1, R10269 += 1, R10270 += 1 };
  s1 -> s2 [0, 65535] { R10362 += 1, R10270 += 1, R9125 += 1 };
  s1 -> s3 [0, 65535] { R10362 += 1, R10270 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s4 [0, 65535] { R10362 += 1 };
  s2 -> s2 [0, 65535] { R10362 += 1, R10270 += 1, R9125 += 1 };
  s2 -> s3 [0, 65535] { R10362 += 1, R10270 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R10362 += 1 };
  s3 -> s3 [0, 65535] { R10362 += 1, R10270 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10362 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 74] { R10364 += 1, R10272 += 1, R10240 += 1, R10242 += 1 };
  s0 -> s0 [0, 65535] { R10363 += 1, R10364 += 1 };
  s0 -> s2 [0, 65535] { R10364 += 1, R10272 += 1, R10240 += 1, R10241 += 1, R10242 += 1 };
  s0 -> s3 [0, 65535] { R10364 += 1, R10271 += 1, R10272 += 1 };
  s0 -> s4 [75, 75] { R10364 += 1, R10272 += 1, R10240 += 1, R10242 += 1 };
  s0 -> s5 [80, 80] { R10364 += 1, R10272 += 1, R10240 += 1, R10242 += 1 };
  s0 -> s1 [81, 65535] { R10364 += 1, R10272 += 1, R10240 += 1, R10242 += 1 };
  s1 -> s1 [0, 74] { R10364 += 1, R10272 += 1, R10240 += 1, R10242 += 1 };
  s1 -> s4 [75, 75] { R10364 += 1, R10272 += 1, R10240 += 1, R10242 += 1 };
  s1 -> s5 [80, 80] { R10364 += 1, R10272 += 1, R10240 += 1, R10242 += 1 };
  s1 -> s1 [81, 65535] { R10364 += 1, R10272 += 1, R10240 += 1, R10242 += 1 };
  s2 -> s1 [0, 74] { R10364 += 1, R10272 += 1, R10240 += 1, R10242 += 1 };
  s2 -> s2 [0, 65535] { R10364 += 1, R10272 += 1, R10240 += 1, R10241 += 1, R10242 += 1 };
  s2 -> s4 [75, 75] { R10364 += 1, R10272 += 1, R10240 += 1, R10242 += 1 };
  s2 -> s5 [80, 80] { R10364 += 1, R10272 += 1, R10240 += 1, R10242 += 1 };
  s2 -> s1 [81, 65535] { R10364 += 1, R10272 += 1, R10240 += 1, R10242 += 1 };
  s3 -> s1 [0, 74] { R10364 += 1, R10272 += 1, R10240 += 1, R10242 += 1 };
  s3 -> s2 [0, 65535] { R10364 += 1, R10272 += 1, R10240 += 1, R10241 += 1, R10242 += 1 };
  s3 -> s3 [0, 65535] { R10364 += 1, R10271 += 1, R10272 += 1 };
  s3 -> s4 [75, 75] { R10364 += 1, R10272 += 1, R10240 += 1, R10242 += 1 };
  s3 -> s5 [80, 80] { R10364 += 1, R10272 += 1, R10240 += 1, R10242 += 1 };
  s3 -> s1 [81, 65535] { R10364 += 1, R10272 += 1, R10240 += 1, R10242 += 1 };
  s4 -> s4 [0, 75] { R10364 += 1, R10272 += 1, R10240 += 1, R10242 += 1 };
  s4 -> s10 [80, 80] { R10364 += 1, R10272 += 1, R10240 += 1, R10242 += 1 };
  s4 -> s4 [81, 65535] { R10364 += 1, R10272 += 1, R10240 += 1, R10242 += 1 };
  s5 -> s5 [0, 74] { R10364 += 1, R10272 += 1, R10240 += 1, R10242 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R10364 += 1, R10272 += 1, R10240 += 1 };
  s5 -> s7 [0, 65535] { R10364 += 1, R10272 += 1 };
  s5 -> s8 [0, 65535] { R10364 += 1 };
  s5 -> s9 [75, 75] { R10364 += 1, R10272 += 1, R10240 += 1, R10242 += 1 };
  s5 -> s10 [75, 75] { R10364 += 1, R10272 += 1, R10240 += 1, R10242 += 1 };
  s5 -> s5 [80, 65535] { R10364 += 1, R10272 += 1, R10240 += 1, R10242 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R10364 += 1, R10272 += 1 };
  s7 -> s8 [0, 65535] { R10364 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R10364 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s9 [0, 65535] { R10364 += 1, R10272 += 1, R10240 += 1 };
  s9 -> s7 [0, 65535] { R10364 += 1, R10272 += 1 };
  s9 -> s8 [0, 65535] { R10364 += 1 };
  s10 -> s10 [0, 75] { R10364 += 1, R10272 += 1, R10240 += 1, R10242 += 1 };
  s10 -> s6 [0, 65535];
  s10 -> s10 [0, 65535] { R10364 += 1, R10272 += 1, R10240 += 1 };
  s10 -> s7 [0, 65535] { R10364 += 1, R10272 += 1 };
  s10 -> s8 [0, 65535] { R10364 += 1 };
  s10 -> s10 [80, 65535] { R10364 += 1, R10272 += 1, R10240 += 1, R10242 += 1 };
  accepting s8, s5, s9, s6, s7, s10;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65535] { R10366 += 1, R10302 += 1, R23 += 1 };
  s0 -> s0 [0, 65535] { R10365 += 1, R10366 += 1 };
  s0 -> s2 [0, 65535] { R10366 += 1, R10301 += 1, R10302 += 1 };
  s1 -> s1 [0, 65535] { R10366 += 1, R10302 += 1, R23 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R10366 += 1 };
  s2 -> s1 [0, 65535] { R10366 += 1, R10302 += 1, R23 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R10366 += 1, R10301 += 1, R10302 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R10366 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R10368 += 1, R10304 += 1 };
  s0 -> s0 [0, 65535] { R10367 += 1, R10368 += 1 };
  s0 -> s2 [0, 65535] { R10368 += 1, R10303 += 1, R10304 += 1 };
  s0 -> s3 [70, 70] { R10368 += 1, R10304 += 1 };
  s0 -> s4 [70, 70] { R10368 += 1, R10304 += 1 };
  s0 -> s5 [75, 75] { R10368 += 1, R10304 += 1 };
  s0 -> s1 [76, 65535] { R10368 += 1, R10304 += 1 };
  s1 -> s1 [0, 69] { R10368 += 1, R10304 += 1 };
  s1 -> s3 [70, 70] { R10368 += 1, R10304 += 1 };
  s1 -> s4 [70, 70] { R10368 += 1, R10304 += 1 };
  s1 -> s5 [75, 75] { R10368 += 1, R10304 += 1 };
  s1 -> s1 [76, 65535] { R10368 += 1, R10304 += 1 };
  s2 -> s1 [0, 69] { R10368 += 1, R10304 += 1 };
  s2 -> s2 [0, 65535] { R10368 += 1, R10303 += 1, R10304 += 1 };
  s2 -> s3 [70, 70] { R10368 += 1, R10304 += 1 };
  s2 -> s4 [70, 70] { R10368 += 1, R10304 += 1 };
  s2 -> s5 [75, 75] { R10368 += 1, R10304 += 1 };
  s2 -> s1 [76, 65535] { R10368 += 1, R10304 += 1 };
  s3 -> s3 [0, 70] { R10368 += 1, R10304 += 1 };
  s3 -> s8 [75, 75] { R10368 += 1, R10304 += 1 };
  s3 -> s3 [76, 65535] { R10368 += 1, R10304 += 1 };
  s5 -> s5 [0, 69] { R10368 += 1, R10304 += 1 };
  s5 -> s5 [0, 65535] { R10368 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R10368 += 1, R10304 += 1 };
  s5 -> s8 [70, 70] { R10368 += 1, R10304 += 1 };
  s5 -> s5 [75, 65535] { R10368 += 1, R10304 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R10368 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 70] { R10368 += 1, R10304 += 1 };
  s8 -> s8 [0, 65535] { R10368 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [75, 65535] { R10368 += 1, R10304 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R10370 += 1, R10306 += 1, R137 += 1 };
  s0 -> s0 [0, 65535] { R10369 += 1, R10370 += 1 };
  s0 -> s2 [0, 65535] { R10370 += 1, R10305 += 1, R10306 += 1 };
  s0 -> s3 [70, 70] { R10370 += 1, R10306 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R10370 += 1, R10306 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R10370 += 1, R10306 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R10370 += 1, R10306 += 1, R137 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R10370 += 1 };
  s1 -> s3 [70, 70] { R10370 += 1, R10306 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R10370 += 1, R10306 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R10370 += 1, R10306 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R10370 += 1, R10306 += 1, R137 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R10370 += 1, R10305 += 1, R10306 += 1 };
  s2 -> s3 [70, 70] { R10370 += 1, R10306 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R10370 += 1, R10306 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R10370 += 1, R10306 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R10370 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R10370 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R10370 += 1, R10306 += 1, R137 += 1 };
  s5 -> s5 [0, 65535] { R10370 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R10372 += 1, R10308 += 1, R139 += 1 };
  s0 -> s2 [0, 65535] { R10372 += 1, R10307 += 1, R10308 += 1 };
  s0 -> s0 [0, 65535] { R10371 += 1, R10372 += 1 };
  s0 -> s3 [70, 70] { R10372 += 1, R10308 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R10372 += 1, R10308 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R10372 += 1, R10308 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R10372 += 1, R10308 += 1, R139 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R10372 += 1 };
  s1 -> s3 [70, 70] { R10372 += 1, R10308 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R10372 += 1, R10308 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R10372 += 1, R10308 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R10372 += 1, R10308 += 1, R139 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10372 += 1, R10307 += 1, R10308 += 1 };
  s2 -> s3 [70, 70] { R10372 += 1, R10308 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R10372 += 1, R10308 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R10372 += 1, R10308 += 1, R139 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R10372 += 1, R10308 += 1, R139 += 1 };
  s3 -> s6 [0, 65535] { R10372 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10372 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10372 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R10374 += 1, R10310 += 1, R141 += 1, R142 += 1 };
  s0 -> s0 [0, 65535] { R10373 += 1, R10374 += 1 };
  s0 -> s2 [0, 65535] { R10374 += 1, R10309 += 1, R10310 += 1 };
  s0 -> s3 [70, 70] { R10374 += 1, R10310 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R10374 += 1, R10310 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R10374 += 1, R10310 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R10374 += 1, R10310 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 65535] { R10374 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R10374 += 1, R10310 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R10374 += 1, R10310 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R10374 += 1, R10310 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R10374 += 1, R10310 += 1, R141 += 1, R142 += 1 };
  s2 -> s2 [0, 65535] { R10374 += 1, R10309 += 1, R10310 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R10374 += 1, R10310 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R10374 += 1, R10310 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R10374 += 1, R10310 += 1, R141 += 1, R142 += 1 };
  s3 -> s3 [0, 65535] { R10374 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R10374 += 1 };
  s4 -> s4 [0, 65535] { R10374 += 1, R10310 += 1, R141 += 1, R142 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R10374 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R10376 += 1, R10312 += 1, R147 += 1, R148 += 1 };
  s0 -> s2 [0, 65535] { R10376 += 1, R10311 += 1, R10312 += 1 };
  s0 -> s0 [0, 65535] { R10375 += 1, R10376 += 1 };
  s0 -> s3 [70, 70] { R10376 += 1, R10312 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R10376 += 1, R10312 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R10376 += 1, R10312 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R10376 += 1, R10312 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 65535] { R10376 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R10376 += 1, R10312 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R10376 += 1, R10312 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R10376 += 1, R10312 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R10376 += 1, R10312 += 1, R147 += 1, R148 += 1 };
  s2 -> s2 [0, 65535] { R10376 += 1, R10311 += 1, R10312 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R10376 += 1, R10312 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R10376 += 1, R10312 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R10376 += 1, R10312 += 1, R147 += 1, R148 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R10376 += 1, R10312 += 1, R147 += 1, R148 += 1 };
  s3 -> s6 [0, 65535] { R10376 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10376 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10376 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R10378 += 1, R10314 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R10378 += 1, R10314 += 1, R151 += 1, R152 += 1 };
  s0 -> s3 [0, 65535] { R10378 += 1, R10313 += 1, R10314 += 1 };
  s0 -> s0 [0, 65535] { R10377 += 1, R10378 += 1 };
  s0 -> s4 [70, 70] { R10378 += 1, R10314 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R10378 += 1, R10314 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R10378 += 1, R10314 += 1, R151 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R10378 += 1, R10314 += 1, R151 += 1, R152 += 1 };
  s0 -> s1 [71, 74] { R10378 += 1, R10314 += 1, R152 += 1 };
  s0 -> s2 [71, 65535] { R10378 += 1, R10314 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R10378 += 1, R10314 += 1, R152 += 1 };
  s0 -> s1 [76, 65535] { R10378 += 1, R10314 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R10378 += 1, R10314 += 1, R152 += 1 };
  s1 -> s4 [70, 70] { R10378 += 1, R10314 += 1, R152 += 1 };
  s1 -> s5 [70, 70] { R10378 += 1, R10314 += 1, R152 += 1 };
  s1 -> s1 [71, 74] { R10378 += 1, R10314 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R10378 += 1, R10314 += 1, R152 += 1 };
  s1 -> s1 [76, 65535] { R10378 += 1, R10314 += 1, R152 += 1 };
  s2 -> s1 [0, 69] { R10378 += 1, R10314 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R10378 += 1, R10314 += 1, R151 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R10378 += 1, R10314 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R10378 += 1, R10314 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R10378 += 1, R10314 += 1, R151 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R10378 += 1, R10314 += 1, R151 += 1, R152 += 1 };
  s2 -> s1 [71, 74] { R10378 += 1, R10314 += 1, R152 += 1 };
  s2 -> s2 [71, 65535] { R10378 += 1, R10314 += 1, R151 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R10378 += 1, R10314 += 1, R152 += 1 };
  s2 -> s1 [76, 65535] { R10378 += 1, R10314 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R10378 += 1, R10314 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R10378 += 1, R10314 += 1, R151 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R10378 += 1, R10313 += 1, R10314 += 1 };
  s3 -> s4 [70, 70] { R10378 += 1, R10314 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R10378 += 1, R10314 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R10378 += 1, R10314 += 1, R151 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R10378 += 1, R10314 += 1, R151 += 1, R152 += 1 };
  s3 -> s1 [71, 74] { R10378 += 1, R10314 += 1, R152 += 1 };
  s3 -> s2 [71, 65535] { R10378 += 1, R10314 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R10378 += 1, R10314 += 1, R152 += 1 };
  s3 -> s1 [76, 65535] { R10378 += 1, R10314 += 1, R152 += 1 };
  s4 -> s4 [0, 74] { R10378 += 1, R10314 += 1, R152 += 1 };
  s4 -> s11 [75, 75] { R10378 += 1, R10314 += 1, R152 += 1 };
  s4 -> s4 [76, 65535] { R10378 += 1, R10314 += 1, R152 += 1 };
  s7 -> s4 [0, 74] { R10378 += 1, R10314 += 1, R152 += 1 };
  s7 -> s7 [0, 65535] { R10378 += 1, R10314 += 1, R151 += 1, R152 += 1 };
  s7 -> s11 [75, 75] { R10378 += 1, R10314 += 1, R152 += 1 };
  s7 -> s4 [76, 65535] { R10378 += 1, R10314 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R10378 += 1, R10314 += 1, R152 += 1 };
  s8 -> s8 [0, 65535] { R10378 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R10378 += 1, R10314 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R10378 += 1, R10314 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R10378 += 1, R10314 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R10378 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R10378 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R10378 += 1, R10314 += 1, R152 += 1 };
  s12 -> s12 [0, 65535] { R10378 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R10380 += 1, R10316 += 1, R155 += 1, R156 += 1 };
  s0 -> s0 [0, 65535] { R10379 += 1, R10380 += 1 };
  s0 -> s2 [0, 65535] { R10380 += 1, R10315 += 1, R10316 += 1 };
  s0 -> s3 [70, 70] { R10380 += 1, R10316 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R10380 += 1, R10316 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R10380 += 1, R10316 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R10380 += 1, R10316 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 65535] { R10380 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R10380 += 1, R10316 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R10380 += 1, R10316 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R10380 += 1, R10316 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R10380 += 1, R10316 += 1, R155 += 1, R156 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R10380 += 1, R10315 += 1, R10316 += 1 };
  s2 -> s3 [70, 70] { R10380 += 1, R10316 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R10380 += 1, R10316 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R10380 += 1, R10316 += 1, R155 += 1, R156 += 1 };
  s3 -> s3 [0, 65535] { R10380 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R10380 += 1, R10316 += 1, R155 += 1, R156 += 1 };
  s4 -> s5 [0, 65535] { R10380 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R10380 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R10382 += 1, R10318 += 1, R161 += 1, R162 += 1 };
  s0 -> s2 [0, 65535] { R10382 += 1, R10317 += 1, R10318 += 1 };
  s0 -> s0 [0, 65535] { R10381 += 1, R10382 += 1 };
  s0 -> s3 [70, 70] { R10382 += 1, R10318 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R10382 += 1, R10318 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R10382 += 1, R10318 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R10382 += 1, R10318 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535] { R10382 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R10382 += 1, R10318 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R10382 += 1, R10318 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R10382 += 1, R10318 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R10382 += 1, R10318 += 1, R161 += 1, R162 += 1 };
  s2 -> s2 [0, 65535] { R10382 += 1, R10317 += 1, R10318 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R10382 += 1, R10318 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R10382 += 1, R10318 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R10382 += 1, R10318 += 1, R161 += 1, R162 += 1 };
  s3 -> s3 [0, 65535] { R10382 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R10382 += 1 };
  s4 -> s4 [0, 65535] { R10382 += 1, R10318 += 1, R161 += 1, R162 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R10382 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R10384 += 1, R10320 += 1, R167 += 1, R168 += 1 };
  s0 -> s2 [0, 65535] { R10384 += 1, R10319 += 1, R10320 += 1 };
  s0 -> s0 [0, 65535] { R10383 += 1, R10384 += 1 };
  s0 -> s3 [70, 70] { R10384 += 1, R10320 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R10384 += 1, R10320 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R10384 += 1, R10320 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R10384 += 1, R10320 += 1, R167 += 1, R168 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R10384 += 1 };
  s1 -> s3 [70, 70] { R10384 += 1, R10320 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R10384 += 1, R10320 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R10384 += 1, R10320 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R10384 += 1, R10320 += 1, R167 += 1, R168 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10384 += 1, R10319 += 1, R10320 += 1 };
  s2 -> s3 [70, 70] { R10384 += 1, R10320 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R10384 += 1, R10320 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R10384 += 1, R10320 += 1, R167 += 1, R168 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R10384 += 1, R10320 += 1, R167 += 1, R168 += 1 };
  s3 -> s6 [0, 65535] { R10384 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10384 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10384 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R10386 += 1, R10322 += 1, R175 += 1, R176 += 1 };
  s0 -> s2 [0, 69] { R10386 += 1, R10322 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s3 [0, 69] { R10386 += 1, R10322 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s0 [0, 65535] { R10385 += 1, R10386 += 1 };
  s0 -> s4 [0, 65535] { R10386 += 1, R10321 += 1, R10322 += 1 };
  s0 -> s5 [70, 70] { R10386 += 1, R10322 += 1, R175 += 1, R176 += 1 };
  s0 -> s6 [70, 70] { R10386 += 1, R10322 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s7 [70, 70] { R10386 += 1, R10322 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s8 [70, 70] { R10386 += 1, R10322 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s9 [70, 70] { R10386 += 1, R10322 += 1, R175 += 1, R176 += 1 };
  s0 -> s10 [70, 70] { R10386 += 1, R10322 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s1 [71, 65535] { R10386 += 1, R10322 += 1, R175 += 1, R176 += 1 };
  s0 -> s2 [71, 65535] { R10386 += 1, R10322 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s3 [71, 65535] { R10386 += 1, R10322 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s1 [0, 69] { R10386 += 1, R10322 += 1, R175 += 1, R176 += 1 };
  s1 -> s2 [0, 69] { R10386 += 1, R10322 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s3 [0, 69] { R10386 += 1, R10322 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s5 [70, 70] { R10386 += 1, R10322 += 1, R175 += 1, R176 += 1 };
  s1 -> s6 [70, 70] { R10386 += 1, R10322 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s7 [70, 70] { R10386 += 1, R10322 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s8 [70, 70] { R10386 += 1, R10322 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s9 [70, 70] { R10386 += 1, R10322 += 1, R175 += 1, R176 += 1 };
  s1 -> s10 [70, 70] { R10386 += 1, R10322 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s1 [71, 65535] { R10386 += 1, R10322 += 1, R175 += 1, R176 += 1 };
  s1 -> s2 [71, 65535] { R10386 += 1, R10322 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s3 [71, 65535] { R10386 += 1, R10322 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s2 [0, 69] { R10386 += 1, R10322 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [0, 65535] { R10386 += 1 };
  s2 -> s12 [0, 65535];
  s2 -> s6 [70, 70] { R10386 += 1, R10322 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s10 [70, 70] { R10386 += 1, R10322 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [71, 65535] { R10386 += 1, R10322 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s2 [0, 69] { R10386 += 1, R10322 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [0, 69] { R10386 += 1, R10322 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s6 [70, 70] { R10386 += 1, R10322 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s7 [70, 70] { R10386 += 1, R10322 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s8 [70, 70] { R10386 += 1, R10322 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s10 [70, 70] { R10386 += 1, R10322 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s2 [71, 65535] { R10386 += 1, R10322 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [71, 65535] { R10386 += 1, R10322 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s1 [0, 69] { R10386 += 1, R10322 += 1, R175 += 1, R176 += 1 };
  s4 -> s2 [0, 69] { R10386 += 1, R10322 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s3 [0, 69] { R10386 += 1, R10322 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s4 [0, 65535] { R10386 += 1, R10321 += 1, R10322 += 1 };
  s4 -> s5 [70, 70] { R10386 += 1, R10322 += 1, R175 += 1, R176 += 1 };
  s4 -> s6 [70, 70] { R10386 += 1, R10322 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s7 [70, 70] { R10386 += 1, R10322 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s8 [70, 70] { R10386 += 1, R10322 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s9 [70, 70] { R10386 += 1, R10322 += 1, R175 += 1, R176 += 1 };
  s4 -> s10 [70, 70] { R10386 += 1, R10322 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s1 [71, 65535] { R10386 += 1, R10322 += 1, R175 += 1, R176 += 1 };
  s4 -> s2 [71, 65535] { R10386 += 1, R10322 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s3 [71, 65535] { R10386 += 1, R10322 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s6 -> s6 [0, 65535] { R10386 += 1 };
  s6 -> s12 [0, 65535];
  s8 -> s8 [0, 65535] { R10386 += 1, R10322 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s8 -> s10 [0, 65535] { R10386 += 1, R10322 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s9 -> s8 [0, 65535] { R10386 += 1, R10322 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s9 -> s9 [0, 65535] { R10386 += 1, R10322 += 1, R175 += 1, R176 += 1 };
  s9 -> s10 [0, 65535] { R10386 += 1, R10322 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s10 -> s11 [0, 65535] { R10386 += 1 };
  s10 -> s12 [0, 65535];
  s10 -> s10 [0, 65535] { R10386 += 1, R10322 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s11 -> s11 [0, 65535] { R10386 += 1 };
  s11 -> s12 [0, 65535];
  s12 -> s12 [0, 65535];
  accepting s12, s2, s6, s10, s11;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R10388 += 1, R10324 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s2 [0, 69] { R10388 += 1, R10324 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s3 [0, 69] { R10388 += 1, R10324 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s4 [0, 65535] { R10388 += 1, R10323 += 1, R10324 += 1 };
  s0 -> s0 [0, 65535] { R10387 += 1, R10388 += 1 };
  s0 -> s5 [70, 70] { R10388 += 1, R10324 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s6 [70, 70] { R10388 += 1, R10324 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s7 [70, 70] { R10388 += 1, R10324 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s8 [70, 70] { R10388 += 1, R10324 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s9 [70, 70] { R10388 += 1, R10324 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s10 [70, 70] { R10388 += 1, R10324 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s1 [71, 75] { R10388 += 1, R10324 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s2 [71, 65535] { R10388 += 1, R10324 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s3 [71, 65535] { R10388 += 1, R10324 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s1 [80, 65535] { R10388 += 1, R10324 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s1 [0, 69] { R10388 += 1, R10324 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s1 [0, 65535] { R10388 += 1 };
  s1 -> s12 [0, 65535];
  s1 -> s7 [70, 70] { R10388 += 1, R10324 += 1, R6564 += 1 };
  s1 -> s8 [70, 70] { R10388 += 1, R10324 += 1, R6564 += 1 };
  s1 -> s1 [71, 75] { R10388 += 1, R10324 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s1 [71, 65535] { R10388 += 1, R10324 += 1, R6564 += 1 };
  s1 -> s1 [80, 65535] { R10388 += 1, R10324 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s1 [0, 69] { R10388 += 1, R10324 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s2 [0, 69] { R10388 += 1, R10324 += 1, R6563 += 1, R6564 += 1 };
  s2 -> s3 [0, 69] { R10388 += 1, R10324 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s5 [70, 70] { R10388 += 1, R10324 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s6 [70, 70] { R10388 += 1, R10324 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s7 [70, 70] { R10388 += 1, R10324 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s8 [70, 70] { R10388 += 1, R10324 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s9 [70, 70] { R10388 += 1, R10324 += 1, R6563 += 1, R6564 += 1 };
  s2 -> s10 [70, 70] { R10388 += 1, R10324 += 1, R6563 += 1, R6564 += 1 };
  s2 -> s1 [71, 75] { R10388 += 1, R10324 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s2 [71, 65535] { R10388 += 1, R10324 += 1, R6563 += 1, R6564 += 1 };
  s2 -> s3 [71, 65535] { R10388 += 1, R10324 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s1 [80, 65535] { R10388 += 1, R10324 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s1 [0, 69] { R10388 += 1, R10324 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s3 [0, 69] { R10388 += 1, R10324 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s3 -> s5 [70, 70] { R10388 += 1, R10324 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s3 -> s6 [70, 70] { R10388 += 1, R10324 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s3 -> s7 [70, 70] { R10388 += 1, R10324 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s8 [70, 70] { R10388 += 1, R10324 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s1 [71, 75] { R10388 += 1, R10324 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s3 [71, 65535] { R10388 += 1, R10324 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s3 -> s1 [80, 65535] { R10388 += 1, R10324 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s1 [0, 69] { R10388 += 1, R10324 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s2 [0, 69] { R10388 += 1, R10324 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s3 [0, 69] { R10388 += 1, R10324 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s4 [0, 65535] { R10388 += 1, R10323 += 1, R10324 += 1 };
  s4 -> s5 [70, 70] { R10388 += 1, R10324 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s6 [70, 70] { R10388 += 1, R10324 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s7 [70, 70] { R10388 += 1, R10324 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s8 [70, 70] { R10388 += 1, R10324 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s9 [70, 70] { R10388 += 1, R10324 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s10 [70, 70] { R10388 += 1, R10324 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s1 [71, 75] { R10388 += 1, R10324 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s2 [71, 65535] { R10388 += 1, R10324 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s3 [71, 65535] { R10388 += 1, R10324 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s1 [80, 65535] { R10388 += 1, R10324 += 1, R6564 += 1, R6566 += 1 };
  s6 -> s8 [0, 75] { R10388 += 1, R10324 += 1, R6564 += 1, R6566 += 1 };
  s6 -> s6 [0, 65535] { R10388 += 1, R10324 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s6 -> s8 [80, 65535] { R10388 += 1, R10324 += 1, R6564 += 1, R6566 += 1 };
  s7 -> s7 [0, 65535] { R10388 += 1 };
  s7 -> s12 [0, 65535];
  s8 -> s8 [0, 75] { R10388 += 1, R10324 += 1, R6564 += 1, R6566 += 1 };
  s8 -> s11 [0, 65535] { R10388 += 1 };
  s8 -> s8 [0, 65535] { R10388 += 1, R10324 += 1, R6564 += 1 };
  s8 -> s12 [0, 65535];
  s8 -> s8 [80, 65535] { R10388 += 1, R10324 += 1, R6564 += 1, R6566 += 1 };
  s10 -> s8 [0, 75] { R10388 += 1, R10324 += 1, R6564 += 1, R6566 += 1 };
  s10 -> s6 [0, 65535] { R10388 += 1, R10324 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s10 -> s10 [0, 65535] { R10388 += 1, R10324 += 1, R6563 += 1, R6564 += 1 };
  s10 -> s8 [80, 65535] { R10388 += 1, R10324 += 1, R6564 += 1, R6566 += 1 };
  s11 -> s11 [0, 65535] { R10388 += 1 };
  s11 -> s12 [0, 65535];
  s12 -> s12 [0, 65535];
  accepting s12, s8, s1, s7, s11;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R10390 += 1, R10326 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s0 -> s2 [0, 69] { R10390 += 1, R10326 += 1, R9119 += 1, R9120 += 1 };
  s0 -> s3 [0, 69] { R10390 += 1, R10326 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s0 -> s0 [0, 65535] { R10389 += 1, R10390 += 1 };
  s0 -> s4 [0, 65535] { R10390 += 1, R10325 += 1, R10326 += 1 };
  s0 -> s5 [70, 70] { R10390 += 1, R10326 += 1, R9119 += 1, R9120 += 1 };
  s0 -> s6 [70, 70] { R10390 += 1, R10326 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s0 -> s7 [70, 70] { R10390 += 1, R10326 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s0 -> s8 [70, 70] { R10390 += 1, R10326 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s0 -> s9 [70, 70] { R10390 += 1, R10326 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s0 -> s10 [70, 70] { R10390 += 1, R10326 += 1, R9119 += 1, R9120 += 1 };
  s0 -> s1 [71, 65535] { R10390 += 1, R10326 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s0 -> s2 [71, 65535] { R10390 += 1, R10326 += 1, R9119 += 1, R9120 += 1 };
  s0 -> s3 [71, 65535] { R10390 += 1, R10326 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s1 -> s14 [0, 69] { R10390 += 1, R10326 += 1, R9120 += 1 };
  s1 -> s1 [0, 69] { R10390 += 1, R10326 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s1 -> s6 [70, 70] { R10390 += 1, R10326 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s1 -> s7 [70, 70] { R10390 += 1, R10326 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s1 -> s11 [70, 70] { R10390 += 1, R10326 += 1, R9120 += 1 };
  s1 -> s15 [70, 70] { R10390 += 1, R10326 += 1, R9120 += 1 };
  s1 -> s14 [71, 65535] { R10390 += 1, R10326 += 1, R9120 += 1 };
  s1 -> s1 [71, 65535] { R10390 += 1, R10326 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s2 -> s1 [0, 69] { R10390 += 1, R10326 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s2 -> s2 [0, 69] { R10390 += 1, R10326 += 1, R9119 += 1, R9120 += 1 };
  s2 -> s3 [0, 69] { R10390 += 1, R10326 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s2 -> s5 [70, 70] { R10390 += 1, R10326 += 1, R9119 += 1, R9120 += 1 };
  s2 -> s6 [70, 70] { R10390 += 1, R10326 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s2 -> s7 [70, 70] { R10390 += 1, R10326 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s2 -> s8 [70, 70] { R10390 += 1, R10326 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s2 -> s9 [70, 70] { R10390 += 1, R10326 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s2 -> s10 [70, 70] { R10390 += 1, R10326 += 1, R9119 += 1, R9120 += 1 };
  s2 -> s1 [71, 65535] { R10390 += 1, R10326 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s2 -> s2 [71, 65535] { R10390 += 1, R10326 += 1, R9119 += 1, R9120 += 1 };
  s2 -> s3 [71, 65535] { R10390 += 1, R10326 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s3 -> s1 [0, 69] { R10390 += 1, R10326 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s3 -> s3 [0, 69] { R10390 += 1, R10326 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s3 -> s6 [70, 70] { R10390 += 1, R10326 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s3 -> s7 [70, 70] { R10390 += 1, R10326 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s3 -> s8 [70, 70] { R10390 += 1, R10326 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s3 -> s9 [70, 70] { R10390 += 1, R10326 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s3 -> s1 [71, 65535] { R10390 += 1, R10326 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s3 -> s3 [71, 65535] { R10390 += 1, R10326 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s4 -> s1 [0, 69] { R10390 += 1, R10326 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s4 -> s2 [0, 69] { R10390 += 1, R10326 += 1, R9119 += 1, R9120 += 1 };
  s4 -> s3 [0, 69] { R10390 += 1, R10326 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s4 -> s4 [0, 65535] { R10390 += 1, R10325 += 1, R10326 += 1 };
  s4 -> s5 [70, 70] { R10390 += 1, R10326 += 1, R9119 += 1, R9120 += 1 };
  s4 -> s6 [70, 70] { R10390 += 1, R10326 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s4 -> s7 [70, 70] { R10390 += 1, R10326 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s4 -> s8 [70, 70] { R10390 += 1, R10326 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s4 -> s9 [70, 70] { R10390 += 1, R10326 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s4 -> s10 [70, 70] { R10390 += 1, R10326 += 1, R9119 += 1, R9120 += 1 };
  s4 -> s1 [71, 65535] { R10390 += 1, R10326 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s4 -> s2 [71, 65535] { R10390 += 1, R10326 += 1, R9119 += 1, R9120 += 1 };
  s4 -> s3 [71, 65535] { R10390 += 1, R10326 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s5 -> s5 [0, 65535] { R10390 += 1, R10326 += 1, R9119 += 1, R9120 += 1 };
  s5 -> s7 [0, 65535] { R10390 += 1, R10326 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s5 -> s8 [0, 65535] { R10390 += 1, R10326 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s7 -> s7 [0, 65535] { R10390 += 1, R10326 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s7 -> s11 [0, 65535] { R10390 += 1, R10326 += 1, R9120 += 1 };
  s8 -> s7 [0, 65535] { R10390 += 1, R10326 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s8 -> s8 [0, 65535] { R10390 += 1, R10326 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s11 [0, 65535] { R10390 += 1, R10326 += 1, R9120 += 1 };
  s11 -> s13 [0, 65535] { R10390 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R10390 += 1 };
  s14 -> s14 [0, 69] { R10390 += 1, R10326 += 1, R9120 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R10390 += 1 };
  s14 -> s11 [70, 70] { R10390 += 1, R10326 += 1, R9120 += 1 };
  s14 -> s15 [70, 70] { R10390 += 1, R10326 += 1, R9120 += 1 };
  s14 -> s14 [71, 65535] { R10390 += 1, R10326 += 1, R9120 += 1 };
  s15 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R10390 += 1 };
  accepting s12, s13, s14, s15, s11;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R10392 += 1, R10328 += 1, R10236 += 1, R10237 += 1, R10238 += 1 };
  s0 -> s2 [0, 69] { R10392 += 1, R10328 += 1, R10235 += 1, R10236 += 1 };
  s0 -> s3 [0, 65535] { R10392 += 1, R10327 += 1, R10328 += 1 };
  s0 -> s0 [0, 65535] { R10391 += 1, R10392 += 1 };
  s0 -> s4 [70, 70] { R10392 += 1, R10328 += 1, R10236 += 1, R10237 += 1, R10238 += 1 };
  s0 -> s5 [70, 70] { R10392 += 1, R10328 += 1, R10236 += 1, R10237 += 1, R10238 += 1 };
  s0 -> s6 [70, 70] { R10392 += 1, R10328 += 1, R10235 += 1, R10236 += 1 };
  s0 -> s7 [70, 70] { R10392 += 1, R10328 += 1, R10235 += 1, R10236 += 1 };
  s0 -> s1 [71, 65535] { R10392 += 1, R10328 += 1, R10236 += 1, R10237 += 1, R10238 += 1 };
  s0 -> s2 [71, 65535] { R10392 += 1, R10328 += 1, R10235 += 1, R10236 += 1 };
  s1 -> s1 [0, 69] { R10392 += 1, R10328 += 1, R10236 += 1, R10237 += 1, R10238 += 1 };
  s1 -> s1 [0, 65535] { R10392 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [70, 70] { R10392 += 1, R10328 += 1, R10236 += 1, R10237 += 1, R10238 += 1 };
  s1 -> s5 [70, 70] { R10392 += 1, R10328 += 1, R10236 += 1, R10237 += 1, R10238 += 1 };
  s1 -> s1 [71, 65535] { R10392 += 1, R10328 += 1, R10236 += 1, R10237 += 1, R10238 += 1 };
  s2 -> s1 [0, 69] { R10392 += 1, R10328 += 1, R10236 += 1, R10237 += 1, R10238 += 1 };
  s2 -> s2 [0, 69] { R10392 += 1, R10328 += 1, R10235 += 1, R10236 += 1 };
  s2 -> s4 [70, 70] { R10392 += 1, R10328 += 1, R10236 += 1, R10237 += 1, R10238 += 1 };
  s2 -> s5 [70, 70] { R10392 += 1, R10328 += 1, R10236 += 1, R10237 += 1, R10238 += 1 };
  s2 -> s6 [70, 70] { R10392 += 1, R10328 += 1, R10235 += 1, R10236 += 1 };
  s2 -> s7 [70, 70] { R10392 += 1, R10328 += 1, R10235 += 1, R10236 += 1 };
  s2 -> s1 [71, 65535] { R10392 += 1, R10328 += 1, R10236 += 1, R10237 += 1, R10238 += 1 };
  s2 -> s2 [71, 65535] { R10392 += 1, R10328 += 1, R10235 += 1, R10236 += 1 };
  s3 -> s1 [0, 69] { R10392 += 1, R10328 += 1, R10236 += 1, R10237 += 1, R10238 += 1 };
  s3 -> s2 [0, 69] { R10392 += 1, R10328 += 1, R10235 += 1, R10236 += 1 };
  s3 -> s3 [0, 65535] { R10392 += 1, R10327 += 1, R10328 += 1 };
  s3 -> s4 [70, 70] { R10392 += 1, R10328 += 1, R10236 += 1, R10237 += 1, R10238 += 1 };
  s3 -> s5 [70, 70] { R10392 += 1, R10328 += 1, R10236 += 1, R10237 += 1, R10238 += 1 };
  s3 -> s6 [70, 70] { R10392 += 1, R10328 += 1, R10235 += 1, R10236 += 1 };
  s3 -> s7 [70, 70] { R10392 += 1, R10328 += 1, R10235 += 1, R10236 += 1 };
  s3 -> s1 [71, 65535] { R10392 += 1, R10328 += 1, R10236 += 1, R10237 += 1, R10238 += 1 };
  s3 -> s2 [71, 65535] { R10392 += 1, R10328 += 1, R10235 += 1, R10236 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [0, 65535] { R10392 += 1, R10328 += 1, R10236 += 1, R10237 += 1, R10238 += 1 };
  s4 -> s9 [0, 65535] { R10392 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R10392 += 1 };
  s7 -> s4 [0, 65535] { R10392 += 1, R10328 += 1, R10236 += 1, R10237 += 1, R10238 += 1 };
  s7 -> s7 [0, 65535] { R10392 += 1, R10328 += 1, R10235 += 1, R10236 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R10392 += 1 };
  accepting s4, s8, s5, s9, s1;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R10272 && R3 = R10392 && R25 - R10392 = -1 && R26 = R10392 && R27 - R10392 = -1 && R28 = R10392 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R10240 + -1*R10236 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R10240 + -1*R10236 - R130 = 0 && R129 + R10239 + R10235 = 0 && R131 + R10241 + R10237 = 0 && R132 + R10242 + R10238 = 0 && R10271 = 0 && R10303 = 0 && R10304 = 0 && R10313 = 0 && R10314 = 0 && R10321 = 0 && R10322 = 0 && R10323 = 0 && R10324 = 0 && R10325 = 0 && R10326 = 0 && R10327 = 0 && R10328 = 0 && R10329 = 0 && R10330 = R10392 && R10331 = 0 && R10332 = R10392 && R10333 = 0 && R10334 = R10392 && R10335 = 0 && R10336 = R10392 && R10337 = 0 && R10338 = R10392 && R10339 = 0 && R10340 = R10392 && R10341 = 0 && R10342 = R10392 && R10343 = 0 && R10344 = R10392 && R10345 = 0 && R10346 = R10392 && R10347 = 0 && R10348 = R10392 && R10349 = 0 && R10350 = R10392 && R10351 = 0 && R10352 = R10392 && R10353 = 0 && R10354 = R10392 && R10355 = 0 && R10356 = R10392 && R10357 = 0 && R10358 = R10392 && R10359 = 0 && R10360 = R10392 && R10361 = 0 && R10362 = R10392 && R10363 = 0 && R10364 = R10392 && R10365 = 0 && R10366 = R10392 && R10367 = 0 && R10368 = R10392 && R10369 = 0 && R10370 = R10392 && R10371 = 0 && R10372 = R10392 && R10373 = 0 && R10374 = R10392 && R10375 = 0 && R10376 = R10392 && R10377 = 0 && R10378 = R10392 && R10379 = 0 && R10380 = R10392 && R10381 = 0 && R10382 = R10392 && R10383 = 0 && R10384 = R10392 && R10385 = 0 && R10386 = R10392 && R10387 = 0 && R10388 = R10392 && R10389 = 0 && R10390 = R10392 && R10391 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R10240 + -1*R10236 - R130 < 1 && -1 < R10272 && 0 < R10392 && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R10240 + -1*R10236 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R6569 + R6565 = 0 && R114 + R6570 + R6566 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R10240 + -1*R10236 - R130 = 0 || R130 + R10240 + R10236 < 1) && (R81 + R158 + R155 = 0 || R130 + R10240 + R10236 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R10240 + -1*R10236 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R10240 + R10236 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R10240 + -1*R10236 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R10240 + R10236 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R10240 + -1*R10236 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R10240 + R10236 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R6567 + R6563 != 0 || R112 + R6568 + R6564 + -1*R10240 + -1*R10236 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R10240 + R10236 = 0)) && (R113 + R6569 + R6565 != 0 || R83 + R160 + R157 + -1*R6570 + -1*R6566 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R9124 + R9119 != 0 || R120 + R9125 + R9120 + -1*R10240 + -1*R10236 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R10240 + R10236 = 0)) && (R10243 != 0 || R10244 = R10272 || (R22 = 0 && R10272 = 0)) && (R10245 != 0 || R10246 = R10272 || (R22 = 0 && R10272 = 0)) && (R10247 != 0 || R10248 = R10272 || (R22 = 0 && R10272 = 0)) && (R10249 != 0 || R10250 = R10272 || (R22 = 0 && R10272 = 0)) && (R10251 != 0 || R10252 = R10272 || (R22 = 0 && R10272 = 0)) && (R10253 != 0 || R10254 = R10272 || (R22 = 0 && R10272 = 0)) && (R10255 != 0 || R10256 = R10272 || (R22 = 0 && R10272 = 0)) && (R10257 != 0 || R10258 = R10272 || (R22 = 0 && R10272 = 0)) && (R10259 != 0 || R10260 = R10272 || (R22 = 0 && R10272 = 0)) && (R10261 != 0 || R10262 = R10272 || (R22 = 0 && R10272 = 0)) && (R10263 != 0 || R10264 = R10272 || (R22 = 0 && R10272 = 0)) && (R10265 != 0 || R10266 = R10272 || (R22 = 0 && R10272 = 0)) && (R10267 != 0 || R10268 = R10272 || (R22 = 0 && R10272 = 0)) && (R10269 != 0 || R10270 = R10272 || (R22 = 0 && R10272 = 0)) && (R23 = 0 || (R10301 = 0 && R10302 = 0)) && (R23 = 0 || (R10305 = 0 && R10306 = 0)) && (R23 = 0 || (R10307 = 0 && R10308 = 0)) && (R23 = 0 || (R10309 = 0 && R10310 = 0)) && (R23 = 0 || (R10311 = 0 && R10312 = 0)) && (R23 = 0 || (R10315 = 0 && R10316 = 0)) && (R23 = 0 || (R10317 = 0 && R10318 = 0)) && (R23 = 0 || (R10319 = 0 && R10320 = 0)) && (R24 = 0 || (R10273 = 0 && R10274 = 0)) && (R24 = 0 || (R10275 = 0 && R10276 = 0)) && (R24 = 0 || (R10277 = 0 && R10278 = 0)) && (R24 = 0 || (R10279 = 0 && R10280 = 0)) && (R24 = 0 || (R10281 = 0 && R10282 = 0)) && (R24 = 0 || (R10283 = 0 && R10284 = 0)) && (R24 = 0 || (R10285 = 0 && R10286 = 0)) && (R24 = 0 || (R10287 = 0 && R10288 = 0)) && (R24 = 0 || (R10289 = 0 && R10290 = 0)) && (R24 = 0 || (R10291 = 0 && R10292 = 0)) && (R24 = 0 || (R10293 = 0 && R10294 = 0)) && (R24 = 0 || (R10295 = 0 && R10296 = 0)) && (R24 = 0 || (R10297 = 0 && R10298 = 0)) && (R24 = 0 || (R10299 = 0 && R10300 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R10240 + R10236 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R10240 + R10236 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R10240 + R10236 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R6567 + R6563 = 0 || (R83 + R160 + R157 = 0 && R130 + R10240 + R10236 = 0)) && (R113 + R6569 + R6565 = 0 || R83 + R160 + R157 < 1) && (R119 + R9124 + R9119 = 0 || (R83 + R160 + R157 = 0 && R130 + R10240 + R10236 = 0)) && (R123 + R9128 + R9123 = 0 || (R121 + R9126 + R9121 = 0 && R122 + R9127 + R9122 = 0)) && (R10243 = 0 || (R22 = 0 && R10272 = 0)) && (R10245 = 0 || (R22 = 0 && R10272 = 0)) && (R10247 = 0 || (R22 = 0 && R10272 = 0)) && (R10249 = 0 || (R22 = 0 && R10272 = 0)) && (R10251 = 0 || (R22 = 0 && R10272 = 0)) && (R10253 = 0 || (R22 = 0 && R10272 = 0)) && (R10255 = 0 || (R22 = 0 && R10272 = 0)) && (R10257 = 0 || (R22 = 0 && R10272 = 0)) && (R10259 = 0 || (R22 = 0 && R10272 = 0)) && (R10261 = 0 || (R22 = 0 && R10272 = 0)) && (R10263 = 0 || (R22 = 0 && R10272 = 0)) && (R10265 = 0 || (R22 = 0 && R10272 = 0)) && (R10267 = 0 || (R22 = 0 && R10272 = 0)) && (R10269 = 0 || (R22 = 0 && R10272 = 0));
// End of Parikh automata intersection problem
