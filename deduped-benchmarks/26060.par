// Parikh automata intersection problem, generated by OSTRICH+
counter int
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [84, 84];
  s0 -> s0 [85, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [84, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R2 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R11 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 83];
  s0 -> s0 [0, 65535] { R12 += 1 };
  s0 -> s2 [84, 84];
  s0 -> s1 [85, 65535];
  s1 -> s1 [0, 83];
  s1 -> s2 [84, 84];
  s1 -> s1 [85, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R21 += 1 };
  s0 -> s0 [0, 65535] { R20 += 1, R21 += 1 };
  s0 -> s2 [9, 13] { R21 += 1 };
  s0 -> s1 [14, 31] { R21 += 1 };
  s0 -> s2 [32, 32] { R21 += 1 };
  s0 -> s1 [33, 65535] { R21 += 1 };
  s1 -> s1 [0, 65535] { R21 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R21 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R22 += 1, R23 += 1 };
  s1 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R25 += 1 };
  s0 -> s0 [0, 65535] { R24 += 1, R25 += 1 };
  s0 -> s2 [9, 13] { R25 += 1 };
  s0 -> s1 [14, 31] { R25 += 1 };
  s0 -> s2 [32, 32] { R25 += 1 };
  s0 -> s1 [33, 65535] { R25 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R25 += 1 };
  s2 -> s1 [0, 65535] { R25 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R26 += 1, R27 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R13982 += 1, R13983 += 1 };
  s0 -> s1 [0, 65535] { R13983 += 1, R19 += 1 };
  s1 -> s1 [0, 65535] { R13983 += 1, R19 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 83] { R13985 += 1 };
  s0 -> s0 [0, 65535] { R13984 += 1, R13985 += 1 };
  s0 -> s2 [84, 84] { R13985 += 1 };
  s0 -> s3 [84, 84] { R13985 += 1 };
  s0 -> s1 [86, 65535] { R13985 += 1 };
  s1 -> s1 [0, 83] { R13985 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R13985 += 1 };
  s1 -> s3 [84, 84] { R13985 += 1 };
  s1 -> s1 [86, 65535] { R13985 += 1 };
  s2 -> s2 [0, 84] { R13985 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [86, 65535] { R13985 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 83] { R13987 += 1, R38 += 1 };
  s0 -> s0 [0, 65535] { R13986 += 1, R13987 += 1 };
  s0 -> s2 [84, 84] { R13987 += 1, R38 += 1 };
  s0 -> s3 [84, 84] { R13987 += 1, R38 += 1 };
  s0 -> s1 [85, 65535] { R13987 += 1, R38 += 1 };
  s1 -> s1 [0, 83] { R13987 += 1, R38 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R13987 += 1, R38 += 1 };
  s1 -> s3 [84, 84] { R13987 += 1, R38 += 1 };
  s1 -> s1 [85, 65535] { R13987 += 1, R38 += 1 };
  s2 -> s2 [0, 65535] { R13987 += 1, R38 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 83] { R13989 += 1, R40 += 1 };
  s0 -> s0 [0, 65535] { R13988 += 1, R13989 += 1 };
  s0 -> s2 [84, 84] { R13989 += 1, R40 += 1 };
  s0 -> s3 [84, 84] { R13989 += 1, R40 += 1 };
  s0 -> s1 [85, 65535] { R13989 += 1, R40 += 1 };
  s1 -> s1 [0, 83] { R13989 += 1, R40 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R13989 += 1, R40 += 1 };
  s1 -> s3 [84, 84] { R13989 += 1, R40 += 1 };
  s1 -> s1 [85, 65535] { R13989 += 1, R40 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13989 += 1, R40 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 83] { R13991 += 1, R42 += 1, R43 += 1 };
  s0 -> s0 [0, 65535] { R13990 += 1, R13991 += 1 };
  s0 -> s2 [84, 84] { R13991 += 1, R42 += 1, R43 += 1 };
  s0 -> s3 [84, 84] { R13991 += 1, R42 += 1, R43 += 1 };
  s0 -> s1 [85, 65535] { R13991 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 83] { R13991 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R13991 += 1, R42 += 1, R43 += 1 };
  s1 -> s3 [84, 84] { R13991 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [85, 65535] { R13991 += 1, R42 += 1, R43 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13991 += 1, R42 += 1, R43 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 83] { R13993 += 1, R46 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R13992 += 1, R13993 += 1 };
  s0 -> s2 [84, 84] { R13993 += 1, R46 += 1, R47 += 1 };
  s0 -> s3 [84, 84] { R13993 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [85, 65535] { R13993 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 83] { R13993 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R13993 += 1, R46 += 1, R47 += 1 };
  s1 -> s3 [84, 84] { R13993 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [85, 65535] { R13993 += 1, R46 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R13993 += 1, R46 += 1, R47 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 83] { R13995 += 1, R52 += 1, R53 += 1 };
  s0 -> s0 [0, 65535] { R13994 += 1, R13995 += 1 };
  s0 -> s2 [84, 84] { R13995 += 1, R52 += 1, R53 += 1 };
  s0 -> s3 [84, 84] { R13995 += 1, R52 += 1, R53 += 1 };
  s0 -> s1 [85, 65535] { R13995 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 83] { R13995 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R13995 += 1, R52 += 1, R53 += 1 };
  s1 -> s3 [84, 84] { R13995 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [85, 65535] { R13995 += 1, R52 += 1, R53 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13995 += 1, R52 += 1, R53 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 83] { R13997 += 1, R56 += 1, R57 += 1 };
  s0 -> s0 [0, 65535] { R13996 += 1, R13997 += 1 };
  s0 -> s2 [84, 84] { R13997 += 1, R56 += 1, R57 += 1 };
  s0 -> s3 [84, 84] { R13997 += 1, R56 += 1, R57 += 1 };
  s0 -> s1 [85, 65535] { R13997 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 83] { R13997 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R13997 += 1, R56 += 1, R57 += 1 };
  s1 -> s3 [84, 84] { R13997 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [85, 65535] { R13997 += 1, R56 += 1, R57 += 1 };
  s2 -> s2 [0, 65535] { R13997 += 1, R56 += 1, R57 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 83] { R13999 += 1, R62 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R13998 += 1, R13999 += 1 };
  s0 -> s2 [84, 84] { R13999 += 1, R62 += 1, R63 += 1 };
  s0 -> s3 [84, 84] { R13999 += 1, R62 += 1, R63 += 1 };
  s0 -> s1 [85, 65535] { R13999 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 83] { R13999 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R13999 += 1, R62 += 1, R63 += 1 };
  s1 -> s3 [84, 84] { R13999 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [85, 65535] { R13999 += 1, R62 += 1, R63 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13999 += 1, R62 += 1, R63 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 83] { R14019 += 1 };
  s0 -> s0 [0, 65535] { R14018 += 1, R14019 += 1 };
  s0 -> s2 [84, 84] { R14019 += 1 };
  s0 -> s1 [85, 65535] { R14019 += 1 };
  s1 -> s1 [0, 83] { R14019 += 1 };
  s1 -> s2 [84, 84] { R14019 += 1 };
  s1 -> s1 [85, 65535] { R14019 += 1 };
  s2 -> s2 [0, 65535] { R14019 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R14021 += 1, R1 += 1 };
  s0 -> s0 [0, 65535] { R14020 += 1, R14021 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R14021 += 1, R1 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 83] { R14023 += 1 };
  s0 -> s2 [0, 65535] { R14023 += 1, R8 += 1 };
  s0 -> s0 [0, 65535] { R14022 += 1, R14023 += 1 };
  s0 -> s3 [84, 84] { R14023 += 1 };
  s0 -> s1 [85, 65535] { R14023 += 1 };
  s1 -> s1 [0, 83] { R14023 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [84, 84] { R14023 += 1 };
  s1 -> s1 [85, 65535] { R14023 += 1 };
  s2 -> s1 [0, 83] { R14023 += 1 };
  s2 -> s2 [0, 65535] { R14023 += 1, R8 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [84, 84] { R14023 += 1 };
  s2 -> s1 [85, 65535] { R14023 += 1 };
  s3 -> s3 [0, 65535] { R14023 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 83] { R14025 += 1, R13963 += 1 };
  s0 -> s2 [0, 65535] { R14025 += 1, R13962 += 1, R13963 += 1 };
  s0 -> s0 [0, 65535] { R14024 += 1, R14025 += 1 };
  s0 -> s1 [85, 65535] { R14025 += 1, R13963 += 1 };
  s1 -> s1 [0, 83] { R14025 += 1, R13963 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R14025 += 1 };
  s1 -> s1 [85, 65535] { R14025 += 1, R13963 += 1 };
  s2 -> s1 [0, 83] { R14025 += 1, R13963 += 1 };
  s2 -> s2 [0, 65535] { R14025 += 1, R13962 += 1, R13963 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [85, 65535] { R14025 += 1, R13963 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R14027 += 1, R13965 += 1, R17 += 1 };
  s0 -> s2 [0, 65535] { R14027 += 1, R13964 += 1, R13965 += 1 };
  s0 -> s0 [0, 65535] { R14026 += 1, R14027 += 1 };
  s1 -> s1 [0, 65535] { R14027 += 1, R13965 += 1, R17 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R14027 += 1 };
  s2 -> s1 [0, 65535] { R14027 += 1, R13965 += 1, R17 += 1 };
  s2 -> s2 [0, 65535] { R14027 += 1, R13964 += 1, R13965 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R14027 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s0 [0, 65535] { R14028 += 1, R14029 += 1 };
  s0 -> s1 [0, 65535] { R14029 += 1, R13966 += 1, R13967 += 1 };
  s0 -> s2 [0, 65535] { R14029 += 1, R13967 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R14029 += 1, R13966 += 1, R13967 += 1 };
  s1 -> s2 [0, 65535] { R14029 += 1, R13967 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R14029 += 1 };
  s2 -> s2 [0, 65535] { R14029 += 1, R13967 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R14029 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R14030 += 1, R14031 += 1 };
  s0 -> s1 [0, 65535] { R14031 += 1, R13969 += 1, R67 += 1 };
  s0 -> s2 [0, 65535] { R14031 += 1, R13968 += 1, R13969 += 1 };
  s1 -> s1 [0, 65535] { R14031 += 1, R13969 += 1, R67 += 1 };
  s1 -> s4 [0, 65535] { R14031 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R14031 += 1, R13969 += 1, R67 += 1 };
  s2 -> s2 [0, 65535] { R14031 += 1, R13968 += 1, R13969 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R14031 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 84] { R14033 += 1, R13971 += 1 };
  s0 -> s2 [0, 65535] { R14033 += 1, R13971 += 1, R69 += 1 };
  s0 -> s3 [0, 65535] { R14033 += 1, R13970 += 1, R13971 += 1 };
  s0 -> s0 [0, 65535] { R14032 += 1, R14033 += 1 };
  s0 -> s1 [86, 65535] { R14033 += 1, R13971 += 1 };
  s1 -> s1 [0, 84] { R14033 += 1, R13971 += 1 };
  s1 -> s1 [0, 65535] { R14033 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [86, 65535] { R14033 += 1, R13971 += 1 };
  s2 -> s1 [0, 84] { R14033 += 1, R13971 += 1 };
  s2 -> s2 [0, 65535] { R14033 += 1, R13971 += 1, R69 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R14033 += 1 };
  s2 -> s1 [86, 65535] { R14033 += 1, R13971 += 1 };
  s3 -> s1 [0, 84] { R14033 += 1, R13971 += 1 };
  s3 -> s2 [0, 65535] { R14033 += 1, R13971 += 1, R69 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R14033 += 1, R13970 += 1, R13971 += 1 };
  s3 -> s1 [86, 65535] { R14033 += 1, R13971 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R14033 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 84] { R14035 += 1, R13973 += 1, R73 += 1 };
  s0 -> s2 [0, 65535] { R14035 += 1, R13973 += 1, R72 += 1, R73 += 1 };
  s0 -> s3 [0, 65535] { R14035 += 1, R13972 += 1, R13973 += 1 };
  s0 -> s0 [0, 65535] { R14034 += 1, R14035 += 1 };
  s0 -> s1 [86, 65535] { R14035 += 1, R13973 += 1, R73 += 1 };
  s1 -> s1 [0, 84] { R14035 += 1, R13973 += 1, R73 += 1 };
  s1 -> s1 [0, 65535] { R14035 += 1, R13973 += 1 };
  s1 -> s5 [0, 65535] { R14035 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [86, 65535] { R14035 += 1, R13973 += 1, R73 += 1 };
  s2 -> s1 [0, 84] { R14035 += 1, R13973 += 1, R73 += 1 };
  s2 -> s2 [0, 65535] { R14035 += 1, R13973 += 1, R72 += 1, R73 += 1 };
  s2 -> s5 [0, 65535] { R14035 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [86, 65535] { R14035 += 1, R13973 += 1, R73 += 1 };
  s3 -> s1 [0, 84] { R14035 += 1, R13973 += 1, R73 += 1 };
  s3 -> s2 [0, 65535] { R14035 += 1, R13973 += 1, R72 += 1, R73 += 1 };
  s3 -> s3 [0, 65535] { R14035 += 1, R13972 += 1, R13973 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [86, 65535] { R14035 += 1, R13973 += 1, R73 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R14035 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R14036 += 1, R14037 += 1 };
  s0 -> s1 [0, 65535] { R14037 += 1, R13975 += 1 };
  s0 -> s2 [0, 65535] { R14037 += 1, R13974 += 1, R13975 += 1 };
  s1 -> s1 [0, 65535] { R14037 += 1, R13975 += 1 };
  s1 -> s4 [0, 65535] { R14037 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R14037 += 1, R13975 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R14037 += 1, R13974 += 1, R13975 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R14037 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 85] { R14039 += 1, R13977 += 1, R12795 += 1 };
  s0 -> s2 [0, 65535] { R14039 += 1, R13976 += 1, R13977 += 1 };
  s0 -> s0 [0, 65535] { R14038 += 1, R14039 += 1 };
  s0 -> s3 [0, 65535] { R14039 += 1, R13977 += 1, R12794 += 1, R12795 += 1 };
  s0 -> s4 [86, 86] { R14039 += 1, R13977 += 1, R12795 += 1 };
  s0 -> s1 [87, 65535] { R14039 += 1, R13977 += 1, R12795 += 1 };
  s1 -> s1 [0, 85] { R14039 += 1, R13977 += 1, R12795 += 1 };
  s1 -> s4 [86, 86] { R14039 += 1, R13977 += 1, R12795 += 1 };
  s1 -> s1 [87, 65535] { R14039 += 1, R13977 += 1, R12795 += 1 };
  s2 -> s1 [0, 85] { R14039 += 1, R13977 += 1, R12795 += 1 };
  s2 -> s2 [0, 65535] { R14039 += 1, R13976 += 1, R13977 += 1 };
  s2 -> s3 [0, 65535] { R14039 += 1, R13977 += 1, R12794 += 1, R12795 += 1 };
  s2 -> s4 [86, 86] { R14039 += 1, R13977 += 1, R12795 += 1 };
  s2 -> s1 [87, 65535] { R14039 += 1, R13977 += 1, R12795 += 1 };
  s3 -> s1 [0, 85] { R14039 += 1, R13977 += 1, R12795 += 1 };
  s3 -> s3 [0, 65535] { R14039 += 1, R13977 += 1, R12794 += 1, R12795 += 1 };
  s3 -> s4 [86, 86] { R14039 += 1, R13977 += 1, R12795 += 1 };
  s3 -> s1 [87, 65535] { R14039 += 1, R13977 += 1, R12795 += 1 };
  s4 -> s4 [0, 65535] { R14039 += 1, R13977 += 1, R12795 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R14039 += 1, R13977 += 1 };
  s4 -> s7 [0, 65535] { R14039 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R14039 += 1, R13977 += 1 };
  s6 -> s7 [0, 65535] { R14039 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R14039 += 1 };
  accepting s4, s5, s6, s7;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R14041 += 1, R13979 += 1 };
  s0 -> s0 [0, 65535] { R14040 += 1, R14041 += 1 };
  s0 -> s2 [0, 65535] { R14041 += 1, R13978 += 1, R13979 += 1 };
  s1 -> s4 [0, 65535] { R14041 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R14041 += 1, R13979 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R14041 += 1, R13979 += 1 };
  s2 -> s2 [0, 65535] { R14041 += 1, R13978 += 1, R13979 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R14041 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 85] { R14043 += 1, R13981 += 1, R13961 += 1 };
  s0 -> s1 [0, 65535] { R14043 += 1, R13981 += 1 };
  s0 -> s2 [0, 65535] { R14043 += 1, R13980 += 1, R13981 += 1 };
  s0 -> s0 [0, 65535] { R14042 += 1, R14043 += 1 };
  s0 -> s1 [87, 65535] { R14043 += 1, R13981 += 1, R13961 += 1 };
  s1 -> s1 [0, 85] { R14043 += 1, R13981 += 1, R13961 += 1 };
  s1 -> s1 [0, 65535] { R14043 += 1, R13981 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R14043 += 1 };
  s1 -> s1 [87, 65535] { R14043 += 1, R13981 += 1, R13961 += 1 };
  s2 -> s1 [0, 85] { R14043 += 1, R13981 += 1, R13961 += 1 };
  s2 -> s1 [0, 65535] { R14043 += 1, R13981 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R14043 += 1, R13980 += 1, R13981 += 1 };
  s2 -> s1 [87, 65535] { R14043 += 1, R13981 += 1, R13961 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R14043 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R14044 += 1, R14045 += 1 };
  s0 -> s1 [0, 65535] { R14045 += 1, R14000 += 1, R14001 += 1 };
  s0 -> s2 [0, 65535] { R14045 += 1, R14001 += 1, R18 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R14045 += 1, R14000 += 1, R14001 += 1 };
  s1 -> s2 [0, 65535] { R14045 += 1, R14001 += 1, R18 += 1 };
  s2 -> s3 [0, 65535] { R14045 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R14045 += 1, R14001 += 1, R18 += 1 };
  s3 -> s3 [0, 65535] { R14045 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 83] { R14047 += 1, R14003 += 1 };
  s0 -> s2 [0, 65535] { R14047 += 1, R14002 += 1, R14003 += 1 };
  s0 -> s0 [0, 65535] { R14046 += 1, R14047 += 1 };
  s0 -> s3 [84, 84] { R14047 += 1, R14003 += 1 };
  s0 -> s4 [84, 84] { R14047 += 1, R14003 += 1 };
  s0 -> s5 [85, 85] { R14047 += 1, R14003 += 1 };
  s0 -> s1 [86, 65535] { R14047 += 1, R14003 += 1 };
  s1 -> s1 [0, 83] { R14047 += 1, R14003 += 1 };
  s1 -> s3 [84, 84] { R14047 += 1, R14003 += 1 };
  s1 -> s4 [84, 84] { R14047 += 1, R14003 += 1 };
  s1 -> s5 [85, 85] { R14047 += 1, R14003 += 1 };
  s1 -> s1 [86, 65535] { R14047 += 1, R14003 += 1 };
  s2 -> s1 [0, 83] { R14047 += 1, R14003 += 1 };
  s2 -> s2 [0, 65535] { R14047 += 1, R14002 += 1, R14003 += 1 };
  s2 -> s3 [84, 84] { R14047 += 1, R14003 += 1 };
  s2 -> s4 [84, 84] { R14047 += 1, R14003 += 1 };
  s2 -> s5 [85, 85] { R14047 += 1, R14003 += 1 };
  s2 -> s1 [86, 65535] { R14047 += 1, R14003 += 1 };
  s3 -> s3 [0, 84] { R14047 += 1, R14003 += 1 };
  s3 -> s7 [85, 85] { R14047 += 1, R14003 += 1 };
  s3 -> s3 [86, 65535] { R14047 += 1, R14003 += 1 };
  s5 -> s5 [0, 83] { R14047 += 1, R14003 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R14047 += 1 };
  s5 -> s7 [84, 84] { R14047 += 1, R14003 += 1 };
  s5 -> s8 [84, 84] { R14047 += 1, R14003 += 1 };
  s5 -> s5 [85, 65535] { R14047 += 1, R14003 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s9 [0, 65535] { R14047 += 1 };
  s7 -> s7 [0, 65535] { R14047 += 1, R14003 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R14047 += 1 };
  s9 -> s9 [0, 65535] { R14047 += 1 };
  s9 -> s6 [0, 65535];
  accepting s8, s5, s9, s6, s7;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 83] { R14049 += 1, R14005 += 1, R66 += 1 };
  s0 -> s2 [0, 65535] { R14049 += 1, R14004 += 1, R14005 += 1 };
  s0 -> s0 [0, 65535] { R14048 += 1, R14049 += 1 };
  s0 -> s3 [84, 84] { R14049 += 1, R14005 += 1, R66 += 1 };
  s0 -> s4 [84, 84] { R14049 += 1, R14005 += 1, R66 += 1 };
  s0 -> s1 [85, 65535] { R14049 += 1, R14005 += 1, R66 += 1 };
  s1 -> s1 [0, 83] { R14049 += 1, R14005 += 1, R66 += 1 };
  s1 -> s1 [0, 65535] { R14049 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [84, 84] { R14049 += 1, R14005 += 1, R66 += 1 };
  s1 -> s4 [84, 84] { R14049 += 1, R14005 += 1, R66 += 1 };
  s1 -> s1 [85, 65535] { R14049 += 1, R14005 += 1, R66 += 1 };
  s2 -> s1 [0, 83] { R14049 += 1, R14005 += 1, R66 += 1 };
  s2 -> s2 [0, 65535] { R14049 += 1, R14004 += 1, R14005 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [84, 84] { R14049 += 1, R14005 += 1, R66 += 1 };
  s2 -> s4 [84, 84] { R14049 += 1, R14005 += 1, R66 += 1 };
  s2 -> s1 [85, 65535] { R14049 += 1, R14005 += 1, R66 += 1 };
  s3 -> s3 [0, 65535] { R14049 += 1, R14005 += 1, R66 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R14049 += 1 };
  s4 -> s4 [0, 65535] { R14049 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R14049 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 83] { R14051 += 1, R14007 += 1, R68 += 1 };
  s0 -> s2 [0, 65535] { R14051 += 1, R14006 += 1, R14007 += 1 };
  s0 -> s0 [0, 65535] { R14050 += 1, R14051 += 1 };
  s0 -> s3 [84, 84] { R14051 += 1, R14007 += 1, R68 += 1 };
  s0 -> s4 [84, 84] { R14051 += 1, R14007 += 1, R68 += 1 };
  s0 -> s1 [85, 65535] { R14051 += 1, R14007 += 1, R68 += 1 };
  s1 -> s1 [0, 83] { R14051 += 1, R14007 += 1, R68 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R14051 += 1 };
  s1 -> s3 [84, 84] { R14051 += 1, R14007 += 1, R68 += 1 };
  s1 -> s4 [84, 84] { R14051 += 1, R14007 += 1, R68 += 1 };
  s1 -> s1 [85, 65535] { R14051 += 1, R14007 += 1, R68 += 1 };
  s2 -> s1 [0, 83] { R14051 += 1, R14007 += 1, R68 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R14051 += 1, R14006 += 1, R14007 += 1 };
  s2 -> s3 [84, 84] { R14051 += 1, R14007 += 1, R68 += 1 };
  s2 -> s4 [84, 84] { R14051 += 1, R14007 += 1, R68 += 1 };
  s2 -> s1 [85, 65535] { R14051 += 1, R14007 += 1, R68 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R14051 += 1 };
  s3 -> s3 [0, 65535] { R14051 += 1, R14007 += 1, R68 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R14051 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R14051 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 83] { R14053 += 1, R14009 += 1, R70 += 1, R71 += 1 };
  s0 -> s0 [0, 65535] { R14052 += 1, R14053 += 1 };
  s0 -> s2 [0, 65535] { R14053 += 1, R14008 += 1, R14009 += 1 };
  s0 -> s3 [84, 84] { R14053 += 1, R14009 += 1, R70 += 1, R71 += 1 };
  s0 -> s4 [84, 84] { R14053 += 1, R14009 += 1, R70 += 1, R71 += 1 };
  s0 -> s1 [85, 65535] { R14053 += 1, R14009 += 1, R70 += 1, R71 += 1 };
  s1 -> s1 [0, 83] { R14053 += 1, R14009 += 1, R70 += 1, R71 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R14053 += 1 };
  s1 -> s3 [84, 84] { R14053 += 1, R14009 += 1, R70 += 1, R71 += 1 };
  s1 -> s4 [84, 84] { R14053 += 1, R14009 += 1, R70 += 1, R71 += 1 };
  s1 -> s1 [85, 65535] { R14053 += 1, R14009 += 1, R70 += 1, R71 += 1 };
  s2 -> s1 [0, 83] { R14053 += 1, R14009 += 1, R70 += 1, R71 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R14053 += 1, R14008 += 1, R14009 += 1 };
  s2 -> s3 [84, 84] { R14053 += 1, R14009 += 1, R70 += 1, R71 += 1 };
  s2 -> s4 [84, 84] { R14053 += 1, R14009 += 1, R70 += 1, R71 += 1 };
  s2 -> s1 [85, 65535] { R14053 += 1, R14009 += 1, R70 += 1, R71 += 1 };
  s3 -> s6 [0, 65535] { R14053 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R14053 += 1, R14009 += 1, R70 += 1, R71 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R14053 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R14053 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 83] { R14055 += 1, R14011 += 1, R10246 += 1, R10247 += 1 };
  s0 -> s2 [0, 83] { R14055 += 1, R14011 += 1, R10247 += 1, R10248 += 1 };
  s0 -> s0 [0, 65535] { R14054 += 1, R14055 += 1 };
  s0 -> s3 [0, 65535] { R14055 += 1, R14010 += 1, R14011 += 1 };
  s0 -> s4 [84, 84] { R14055 += 1, R14011 += 1, R10246 += 1, R10247 += 1 };
  s0 -> s5 [84, 84] { R14055 += 1, R14011 += 1, R10247 += 1, R10248 += 1 };
  s0 -> s6 [84, 84] { R14055 += 1, R14011 += 1, R10247 += 1, R10248 += 1 };
  s0 -> s7 [84, 84] { R14055 += 1, R14011 += 1, R10246 += 1, R10247 += 1 };
  s0 -> s1 [85, 65535] { R14055 += 1, R14011 += 1, R10246 += 1, R10247 += 1 };
  s0 -> s2 [85, 65535] { R14055 += 1, R14011 += 1, R10247 += 1, R10248 += 1 };
  s1 -> s1 [0, 83] { R14055 += 1, R14011 += 1, R10246 += 1, R10247 += 1 };
  s1 -> s2 [0, 83] { R14055 += 1, R14011 += 1, R10247 += 1, R10248 += 1 };
  s1 -> s4 [84, 84] { R14055 += 1, R14011 += 1, R10246 += 1, R10247 += 1 };
  s1 -> s5 [84, 84] { R14055 += 1, R14011 += 1, R10247 += 1, R10248 += 1 };
  s1 -> s6 [84, 84] { R14055 += 1, R14011 += 1, R10247 += 1, R10248 += 1 };
  s1 -> s7 [84, 84] { R14055 += 1, R14011 += 1, R10246 += 1, R10247 += 1 };
  s1 -> s1 [85, 65535] { R14055 += 1, R14011 += 1, R10246 += 1, R10247 += 1 };
  s1 -> s2 [85, 65535] { R14055 += 1, R14011 += 1, R10247 += 1, R10248 += 1 };
  s2 -> s11 [0, 83] { R14055 += 1, R14011 += 1 };
  s2 -> s2 [0, 83] { R14055 += 1, R14011 += 1, R10247 += 1, R10248 += 1 };
  s2 -> s5 [84, 84] { R14055 += 1, R14011 += 1, R10247 += 1, R10248 += 1 };
  s2 -> s8 [84, 84] { R14055 += 1, R14011 += 1 };
  s2 -> s12 [84, 84] { R14055 += 1, R14011 += 1 };
  s2 -> s6 [84, 84] { R14055 += 1, R14011 += 1, R10247 += 1, R10248 += 1 };
  s2 -> s11 [85, 65535] { R14055 += 1, R14011 += 1 };
  s2 -> s2 [85, 65535] { R14055 += 1, R14011 += 1, R10247 += 1, R10248 += 1 };
  s3 -> s1 [0, 83] { R14055 += 1, R14011 += 1, R10246 += 1, R10247 += 1 };
  s3 -> s2 [0, 83] { R14055 += 1, R14011 += 1, R10247 += 1, R10248 += 1 };
  s3 -> s3 [0, 65535] { R14055 += 1, R14010 += 1, R14011 += 1 };
  s3 -> s4 [84, 84] { R14055 += 1, R14011 += 1, R10246 += 1, R10247 += 1 };
  s3 -> s5 [84, 84] { R14055 += 1, R14011 += 1, R10247 += 1, R10248 += 1 };
  s3 -> s6 [84, 84] { R14055 += 1, R14011 += 1, R10247 += 1, R10248 += 1 };
  s3 -> s7 [84, 84] { R14055 += 1, R14011 += 1, R10246 += 1, R10247 += 1 };
  s3 -> s1 [85, 65535] { R14055 += 1, R14011 += 1, R10246 += 1, R10247 += 1 };
  s3 -> s2 [85, 65535] { R14055 += 1, R14011 += 1, R10247 += 1, R10248 += 1 };
  s5 -> s5 [0, 65535] { R14055 += 1, R14011 += 1, R10247 += 1, R10248 += 1 };
  s5 -> s8 [0, 65535] { R14055 += 1, R14011 += 1 };
  s7 -> s5 [0, 65535] { R14055 += 1, R14011 += 1, R10247 += 1, R10248 += 1 };
  s7 -> s7 [0, 65535] { R14055 += 1, R14011 += 1, R10246 += 1, R10247 += 1 };
  s8 -> s8 [0, 65535] { R14055 += 1, R14011 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [0, 65535] { R14055 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R14055 += 1 };
  s11 -> s11 [0, 83] { R14055 += 1, R14011 += 1 };
  s11 -> s11 [0, 65535] { R14055 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s8 [84, 84] { R14055 += 1, R14011 += 1 };
  s11 -> s12 [84, 84] { R14055 += 1, R14011 += 1 };
  s11 -> s11 [85, 65535] { R14055 += 1, R14011 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R14055 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 83] { R14057 += 1, R14013 += 1, R12792 += 1, R12793 += 1 };
  s0 -> s2 [0, 65535] { R14057 += 1, R14012 += 1, R14013 += 1 };
  s0 -> s0 [0, 65535] { R14056 += 1, R14057 += 1 };
  s0 -> s3 [84, 84] { R14057 += 1, R14013 += 1, R12792 += 1, R12793 += 1 };
  s0 -> s4 [84, 84] { R14057 += 1, R14013 += 1, R12792 += 1, R12793 += 1 };
  s0 -> s1 [85, 65535] { R14057 += 1, R14013 += 1, R12792 += 1, R12793 += 1 };
  s1 -> s1 [0, 83] { R14057 += 1, R14013 += 1, R12792 += 1, R12793 += 1 };
  s1 -> s1 [0, 65535] { R14057 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [84, 84] { R14057 += 1, R14013 += 1, R12792 += 1, R12793 += 1 };
  s1 -> s4 [84, 84] { R14057 += 1, R14013 += 1, R12792 += 1, R12793 += 1 };
  s1 -> s1 [85, 65535] { R14057 += 1, R14013 += 1, R12792 += 1, R12793 += 1 };
  s2 -> s1 [0, 83] { R14057 += 1, R14013 += 1, R12792 += 1, R12793 += 1 };
  s2 -> s2 [0, 65535] { R14057 += 1, R14012 += 1, R14013 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [84, 84] { R14057 += 1, R14013 += 1, R12792 += 1, R12793 += 1 };
  s2 -> s4 [84, 84] { R14057 += 1, R14013 += 1, R12792 += 1, R12793 += 1 };
  s2 -> s1 [85, 65535] { R14057 += 1, R14013 += 1, R12792 += 1, R12793 += 1 };
  s3 -> s6 [0, 65535] { R14057 += 1 };
  s3 -> s3 [0, 65535] { R14057 += 1, R14013 += 1, R12792 += 1, R12793 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R14057 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R14057 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 83] { R14059 += 1, R14015 += 1, R13641 += 1, R13642 += 1 };
  s0 -> s2 [0, 83] { R14059 += 1, R14015 += 1, R13640 += 1, R13641 += 1 };
  s0 -> s3 [0, 65535] { R14059 += 1, R14014 += 1, R14015 += 1 };
  s0 -> s0 [0, 65535] { R14058 += 1, R14059 += 1 };
  s0 -> s4 [84, 84] { R14059 += 1, R14015 += 1, R13640 += 1, R13641 += 1 };
  s0 -> s5 [84, 84] { R14059 += 1, R14015 += 1, R13641 += 1, R13642 += 1 };
  s0 -> s6 [84, 84] { R14059 += 1, R14015 += 1, R13641 += 1, R13642 += 1 };
  s0 -> s7 [84, 84] { R14059 += 1, R14015 += 1, R13640 += 1, R13641 += 1 };
  s0 -> s1 [85, 65535] { R14059 += 1, R14015 += 1, R13641 += 1, R13642 += 1 };
  s0 -> s2 [85, 65535] { R14059 += 1, R14015 += 1, R13640 += 1, R13641 += 1 };
  s1 -> s1 [0, 83] { R14059 += 1, R14015 += 1, R13641 += 1, R13642 += 1 };
  s1 -> s11 [0, 83] { R14059 += 1, R14015 += 1 };
  s1 -> s12 [84, 84] { R14059 += 1, R14015 += 1 };
  s1 -> s8 [84, 84] { R14059 += 1, R14015 += 1 };
  s1 -> s5 [84, 84] { R14059 += 1, R14015 += 1, R13641 += 1, R13642 += 1 };
  s1 -> s6 [84, 84] { R14059 += 1, R14015 += 1, R13641 += 1, R13642 += 1 };
  s1 -> s1 [85, 65535] { R14059 += 1, R14015 += 1, R13641 += 1, R13642 += 1 };
  s1 -> s11 [85, 65535] { R14059 += 1, R14015 += 1 };
  s2 -> s1 [0, 83] { R14059 += 1, R14015 += 1, R13641 += 1, R13642 += 1 };
  s2 -> s2 [0, 83] { R14059 += 1, R14015 += 1, R13640 += 1, R13641 += 1 };
  s2 -> s4 [84, 84] { R14059 += 1, R14015 += 1, R13640 += 1, R13641 += 1 };
  s2 -> s5 [84, 84] { R14059 += 1, R14015 += 1, R13641 += 1, R13642 += 1 };
  s2 -> s6 [84, 84] { R14059 += 1, R14015 += 1, R13641 += 1, R13642 += 1 };
  s2 -> s7 [84, 84] { R14059 += 1, R14015 += 1, R13640 += 1, R13641 += 1 };
  s2 -> s1 [85, 65535] { R14059 += 1, R14015 += 1, R13641 += 1, R13642 += 1 };
  s2 -> s2 [85, 65535] { R14059 += 1, R14015 += 1, R13640 += 1, R13641 += 1 };
  s3 -> s1 [0, 83] { R14059 += 1, R14015 += 1, R13641 += 1, R13642 += 1 };
  s3 -> s2 [0, 83] { R14059 += 1, R14015 += 1, R13640 += 1, R13641 += 1 };
  s3 -> s3 [0, 65535] { R14059 += 1, R14014 += 1, R14015 += 1 };
  s3 -> s4 [84, 84] { R14059 += 1, R14015 += 1, R13640 += 1, R13641 += 1 };
  s3 -> s5 [84, 84] { R14059 += 1, R14015 += 1, R13641 += 1, R13642 += 1 };
  s3 -> s6 [84, 84] { R14059 += 1, R14015 += 1, R13641 += 1, R13642 += 1 };
  s3 -> s7 [84, 84] { R14059 += 1, R14015 += 1, R13640 += 1, R13641 += 1 };
  s3 -> s1 [85, 65535] { R14059 += 1, R14015 += 1, R13641 += 1, R13642 += 1 };
  s3 -> s2 [85, 65535] { R14059 += 1, R14015 += 1, R13640 += 1, R13641 += 1 };
  s4 -> s4 [0, 65535] { R14059 += 1, R14015 += 1, R13640 += 1, R13641 += 1 };
  s4 -> s5 [0, 65535] { R14059 += 1, R14015 += 1, R13641 += 1, R13642 += 1 };
  s5 -> s8 [0, 65535] { R14059 += 1, R14015 += 1 };
  s5 -> s5 [0, 65535] { R14059 += 1, R14015 += 1, R13641 += 1, R13642 += 1 };
  s8 -> s8 [0, 65535] { R14059 += 1, R14015 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [0, 65535] { R14059 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R14059 += 1 };
  s11 -> s11 [0, 83] { R14059 += 1, R14015 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R14059 += 1 };
  s11 -> s12 [84, 84] { R14059 += 1, R14015 += 1 };
  s11 -> s8 [84, 84] { R14059 += 1, R14015 += 1 };
  s11 -> s11 [85, 65535] { R14059 += 1, R14015 += 1 };
  s12 -> s12 [0, 65535] { R14059 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 83] { R14061 += 1, R14017 += 1, R13958 += 1, R13959 += 1 };
  s0 -> s2 [0, 83] { R14061 += 1, R14017 += 1, R13959 += 1 };
  s0 -> s3 [0, 65535] { R14061 += 1, R14016 += 1, R14017 += 1 };
  s0 -> s0 [0, 65535] { R14060 += 1, R14061 += 1 };
  s0 -> s4 [84, 84] { R14061 += 1, R14017 += 1, R13959 += 1 };
  s0 -> s5 [84, 84] { R14061 += 1, R14017 += 1, R13958 += 1, R13959 += 1 };
  s0 -> s6 [84, 84] { R14061 += 1, R14017 += 1, R13959 += 1 };
  s0 -> s7 [84, 84] { R14061 += 1, R14017 += 1, R13958 += 1, R13959 += 1 };
  s0 -> s8 [85, 85] { R14061 += 1, R14017 += 1, R13959 += 1 };
  s0 -> s1 [85, 65535] { R14061 += 1, R14017 += 1, R13958 += 1, R13959 += 1 };
  s0 -> s2 [87, 65535] { R14061 += 1, R14017 += 1, R13959 += 1 };
  s1 -> s1 [0, 83] { R14061 += 1, R14017 += 1, R13958 += 1, R13959 += 1 };
  s1 -> s2 [0, 83] { R14061 += 1, R14017 += 1, R13959 += 1 };
  s1 -> s4 [84, 84] { R14061 += 1, R14017 += 1, R13959 += 1 };
  s1 -> s5 [84, 84] { R14061 += 1, R14017 += 1, R13958 += 1, R13959 += 1 };
  s1 -> s6 [84, 84] { R14061 += 1, R14017 += 1, R13959 += 1 };
  s1 -> s7 [84, 84] { R14061 += 1, R14017 += 1, R13958 += 1, R13959 += 1 };
  s1 -> s8 [85, 85] { R14061 += 1, R14017 += 1, R13959 += 1 };
  s1 -> s1 [85, 65535] { R14061 += 1, R14017 += 1, R13958 += 1, R13959 += 1 };
  s1 -> s2 [87, 65535] { R14061 += 1, R14017 += 1, R13959 += 1 };
  s2 -> s2 [0, 83] { R14061 += 1, R14017 += 1, R13959 += 1 };
  s2 -> s4 [84, 84] { R14061 += 1, R14017 += 1 };
  s2 -> s6 [84, 84] { R14061 += 1, R14017 += 1 };
  s2 -> s8 [85, 85] { R14061 += 1, R14017 += 1, R13959 += 1 };
  s2 -> s2 [85, 65535] { R14061 += 1, R14017 += 1 };
  s2 -> s2 [87, 65535] { R14061 += 1, R14017 += 1, R13959 += 1 };
  s3 -> s1 [0, 83] { R14061 += 1, R14017 += 1, R13958 += 1, R13959 += 1 };
  s3 -> s2 [0, 83] { R14061 += 1, R14017 += 1, R13959 += 1 };
  s3 -> s3 [0, 65535] { R14061 += 1, R14016 += 1, R14017 += 1 };
  s3 -> s4 [84, 84] { R14061 += 1, R14017 += 1, R13959 += 1 };
  s3 -> s5 [84, 84] { R14061 += 1, R14017 += 1, R13958 += 1, R13959 += 1 };
  s3 -> s6 [84, 84] { R14061 += 1, R14017 += 1, R13959 += 1 };
  s3 -> s7 [84, 84] { R14061 += 1, R14017 += 1, R13958 += 1, R13959 += 1 };
  s3 -> s8 [85, 85] { R14061 += 1, R14017 += 1, R13959 += 1 };
  s3 -> s1 [85, 65535] { R14061 += 1, R14017 += 1, R13958 += 1, R13959 += 1 };
  s3 -> s2 [87, 65535] { R14061 += 1, R14017 += 1, R13959 += 1 };
  s6 -> s6 [0, 84] { R14061 += 1, R14017 += 1, R13959 += 1 };
  s6 -> s6 [0, 65535] { R14061 += 1, R14017 += 1 };
  s6 -> s11 [85, 85] { R14061 += 1, R14017 += 1, R13959 += 1 };
  s6 -> s6 [87, 65535] { R14061 += 1, R14017 += 1, R13959 += 1 };
  s7 -> s6 [0, 84] { R14061 += 1, R14017 += 1, R13959 += 1 };
  s7 -> s7 [0, 65535] { R14061 += 1, R14017 += 1, R13958 += 1, R13959 += 1 };
  s7 -> s11 [85, 85] { R14061 += 1, R14017 += 1, R13959 += 1 };
  s7 -> s6 [87, 65535] { R14061 += 1, R14017 += 1, R13959 += 1 };
  s8 -> s8 [0, 83] { R14061 += 1, R14017 += 1, R13959 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R14061 += 1 };
  s8 -> s10 [84, 84] { R14061 += 1, R14017 += 1 };
  s8 -> s11 [84, 84] { R14061 += 1, R14017 += 1 };
  s8 -> s8 [85, 85] { R14061 += 1, R14017 += 1, R13959 += 1 };
  s8 -> s8 [85, 65535] { R14061 += 1, R14017 += 1 };
  s8 -> s8 [87, 65535] { R14061 += 1, R14017 += 1, R13959 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R14061 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 85] { R14061 += 1, R14017 += 1, R13959 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R14061 += 1, R14017 += 1 };
  s11 -> s12 [0, 65535] { R14061 += 1 };
  s11 -> s11 [87, 65535] { R14061 += 1, R14017 += 1, R13959 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R14061 += 1 };
  accepting s12, s8, s9, s10, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [116, 116];
  accepting s1;
};
};
synchronised {  // Automata constraining P62
automaton P62_0 {
  init s0;
  s0 -> s1 [117, 117];
  accepting s1;
};
};
constraint R1 = R13977 && R2 = R14061 && R20 - R14061 = -1 && R21 = R14061 && R22 - R14061 = -1 && R23 = R14061 && R24 = 0 && R25 = 1 && R26 = 0 && R27 = 1 && R38 + R67 + R66 + -1*R12795 + -1*R12793 - R53 = 0 && R52 + R12794 + R12792 = 0 && R13976 = 0 && R14002 = 0 && R14003 = 0 && R14010 = 0 && R14011 = 0 && R14014 = 0 && R14015 = 0 && R14016 = 0 && R14017 = 0 && R14018 = 0 && R14019 = R14061 && R14020 = 0 && R14021 = R14061 && R14022 = 0 && R14023 = R14061 && R14024 = 0 && R14025 = R14061 && R14026 = 0 && R14027 = R14061 && R14028 = 0 && R14029 = R14061 && R14030 = 0 && R14031 = R14061 && R14032 = 0 && R14033 = R14061 && R14034 = 0 && R14035 = R14061 && R14036 = 0 && R14037 = R14061 && R14038 = 0 && R14039 = R14061 && R14040 = 0 && R14041 = R14061 && R14042 = 0 && R14043 = R14061 && R14044 = 0 && R14045 = R14061 && R14046 = 0 && R14047 = R14061 && R14048 = 0 && R14049 = R14061 && R14050 = 0 && R14051 = R14061 && R14052 = 0 && R14053 = R14061 && R14054 = 0 && R14055 = R14061 && R14056 = 0 && R14057 = R14061 && R14058 = 0 && R14059 = R14061 && R14060 = 0 && R8 < 1 && R11 < 1 && R12 < 1 && R40 + R69 + R68 < 1 && -1*R12795 + -1*R12793 - R53 < 1 && -1 < R13977 && 0 < R14061 && (R48 + R10251 + R10248 != 0 || ((R42 + R72 + R70 != 0 || R43 + R73 + R71 + -1*R12795 + -1*R12793 - R53 = 0 || R53 + R12795 + R12793 < 1) && (R42 + R72 + R70 = 0 || R53 + R12795 + R12793 < 1))) && (R48 + R10251 + R10248 != 0 || ((R46 + R10249 + R10246 != 0 || R47 + R10250 + R10247 + -1*R12795 + -1*R12793 - R53 = 0 || R53 + R12795 + R12793 < 1) && (R46 + R10249 + R10246 = 0 || R53 + R12795 + R12793 < 1))) && (R13962 != 0 || R13963 = R13977 || (R17 = 0 && R13977 = 0)) && (R13964 != 0 || R13965 = R13977 || (R17 = 0 && R13977 = 0)) && (R13966 != 0 || R13967 = R13977 || (R17 = 0 && R13977 = 0)) && (R13968 != 0 || R13969 = R13977 || (R17 = 0 && R13977 = 0)) && (R13970 != 0 || R13971 = R13977 || (R17 = 0 && R13977 = 0)) && (R13972 != 0 || R13973 = R13977 || (R17 = 0 && R13977 = 0)) && (R13974 != 0 || R13975 = R13977 || (R17 = 0 && R13977 = 0)) && (R13978 != 0 || R13977 = R13979 || (R17 = 0 && R13977 = 0)) && (R13980 != 0 || R13977 = R13981 || (R17 = 0 && R13977 = 0)) && (R18 = 0 || (R14000 = 0 && R14001 = 0)) && (R18 = 0 || (R14004 = 0 && R14005 = 0)) && (R18 = 0 || (R14006 = 0 && R14007 = 0)) && (R18 = 0 || (R14008 = 0 && R14009 = 0)) && (R18 = 0 || (R14012 = 0 && R14013 = 0)) && (R19 = 0 || (R13982 = 0 && R13983 = 0)) && (R19 = 0 || (R13984 = 0 && R13985 = 0)) && (R19 = 0 || (R13986 = 0 && R13987 = 0)) && (R19 = 0 || (R13988 = 0 && R13989 = 0)) && (R19 = 0 || (R13990 = 0 && R13991 = 0)) && (R19 = 0 || (R13992 = 0 && R13993 = 0)) && (R19 = 0 || (R13994 = 0 && R13995 = 0)) && (R19 = 0 || (R13996 = 0 && R13997 = 0)) && (R19 = 0 || (R13998 = 0 && R13999 = 0)) && (R48 + R10251 + R10248 = 0 || (R42 + R72 + R70 = 0 && R43 + R73 + R71 + -1*R12795 + -1*R12793 - R53 = 0)) && (R48 + R10251 + R10248 = 0 || (R46 + R10249 + R10246 = 0 && R47 + R10250 + R10247 + -1*R12795 + -1*R12793 - R53 = 0)) && (R58 + R13645 + R13642 = 0 || (R56 + R13643 + R13640 = 0 && R57 + R13644 + R13641 = 0)) && (R58 + R13645 + R13642 = 0 || (R62 + R13960 + R13958 = 0 && R63 + R13961 + R13959 = 0)) && (R13962 = 0 || (R17 = 0 && R13977 = 0)) && (R13964 = 0 || (R17 = 0 && R13977 = 0)) && (R13966 = 0 || (R17 = 0 && R13977 = 0)) && (R13968 = 0 || (R17 = 0 && R13977 = 0)) && (R13970 = 0 || (R17 = 0 && R13977 = 0)) && (R13972 = 0 || (R17 = 0 && R13977 = 0)) && (R13974 = 0 || (R17 = 0 && R13977 = 0)) && (R13978 = 0 || (R17 = 0 && R13977 = 0)) && (R13980 = 0 || (R17 = 0 && R13977 = 0));
// End of Parikh automata intersection problem
