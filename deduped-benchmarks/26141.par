// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R12, R15332, R15333, R15334, R15335, R15336, R15337, R15338, R15339, R15340, R15341, R16612, R16613, R16614, R16615, R17, R17460, R17461, R17462, R17463, R17464, R17465, R17466, R17467, R17468, R17469, R17470, R17471, R17472, R17473, R17474, R17475, R17476, R17477, R17478, R17479, R17480, R17481, R17482, R17483, R17484, R17485, R17486, R17487, R17488, R17489, R17490, R17491, R17492, R17493, R17494, R17495, R17496, R17497, R17498, R17499, R17500, R17501, R17502, R17503, R17504, R17505, R17506, R17507, R17508, R17509, R17510, R17511, R17512, R17513, R17514, R17515, R17516, R17517, R17518, R17519, R17520, R17521, R17522, R17523, R17524, R17525, R17526, R17527, R17528, R17529, R17530, R17531, R17532, R17533, R17534, R17535, R17536, R17537, R17538, R17539, R17540, R17541, R17542, R17543, R17544, R17545, R17546, R17547, R17548, R17549, R17550, R17551, R17552, R17553, R17554, R17555, R17556, R17557, R17558, R17559, R17560, R17561, R17562, R17563, R17564, R17565, R17566, R17567, R17568, R17569, R18, R19, R2, R20, R21, R22, R23, R24, R25, R26, R27, R3, R38, R4, R40, R42, R43, R46, R47, R48, R52, R53, R56, R57, R58, R62, R63, R66, R67, R68, R69, R8;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [84, 84];
  s0 -> s0 [85, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [84, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R2 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R11 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 83];
  s0 -> s0 [0, 65535] { R12 += 1 };
  s0 -> s2 [84, 84];
  s0 -> s1 [85, 65535];
  s1 -> s1 [0, 83];
  s1 -> s2 [84, 84];
  s1 -> s1 [85, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R21 += 1 };
  s0 -> s0 [0, 65535] { R20 += 1, R21 += 1 };
  s0 -> s2 [9, 13] { R21 += 1 };
  s0 -> s1 [14, 31] { R21 += 1 };
  s0 -> s2 [32, 32] { R21 += 1 };
  s0 -> s1 [33, 65535] { R21 += 1 };
  s1 -> s1 [0, 65535] { R21 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R21 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R22 += 1, R23 += 1 };
  s1 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R25 += 1 };
  s0 -> s0 [0, 65535] { R24 += 1, R25 += 1 };
  s0 -> s2 [9, 13] { R25 += 1 };
  s0 -> s1 [14, 31] { R25 += 1 };
  s0 -> s2 [32, 32] { R25 += 1 };
  s0 -> s1 [33, 65535] { R25 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R25 += 1 };
  s2 -> s1 [0, 65535] { R25 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R26 += 1, R27 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R17490 += 1, R17491 += 1 };
  s0 -> s1 [0, 65535] { R17491 += 1, R19 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R17491 += 1, R19 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 83] { R17493 += 1 };
  s0 -> s0 [0, 65535] { R17492 += 1, R17493 += 1 };
  s0 -> s2 [84, 84] { R17493 += 1 };
  s0 -> s3 [84, 84] { R17493 += 1 };
  s0 -> s1 [86, 65535] { R17493 += 1 };
  s1 -> s1 [0, 83] { R17493 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R17493 += 1 };
  s1 -> s3 [84, 84] { R17493 += 1 };
  s1 -> s1 [86, 65535] { R17493 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 84] { R17493 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [86, 65535] { R17493 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 83] { R17495 += 1, R38 += 1 };
  s0 -> s0 [0, 65535] { R17494 += 1, R17495 += 1 };
  s0 -> s2 [84, 84] { R17495 += 1, R38 += 1 };
  s0 -> s3 [84, 84] { R17495 += 1, R38 += 1 };
  s0 -> s1 [85, 65535] { R17495 += 1, R38 += 1 };
  s1 -> s1 [0, 83] { R17495 += 1, R38 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R17495 += 1, R38 += 1 };
  s1 -> s3 [84, 84] { R17495 += 1, R38 += 1 };
  s1 -> s1 [85, 65535] { R17495 += 1, R38 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R17495 += 1, R38 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 83] { R17497 += 1, R40 += 1 };
  s0 -> s0 [0, 65535] { R17496 += 1, R17497 += 1 };
  s0 -> s2 [84, 84] { R17497 += 1, R40 += 1 };
  s0 -> s3 [84, 84] { R17497 += 1, R40 += 1 };
  s0 -> s1 [85, 65535] { R17497 += 1, R40 += 1 };
  s1 -> s1 [0, 83] { R17497 += 1, R40 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R17497 += 1, R40 += 1 };
  s1 -> s3 [84, 84] { R17497 += 1, R40 += 1 };
  s1 -> s1 [85, 65535] { R17497 += 1, R40 += 1 };
  s2 -> s2 [0, 65535] { R17497 += 1, R40 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 83] { R17499 += 1, R42 += 1, R43 += 1 };
  s0 -> s0 [0, 65535] { R17498 += 1, R17499 += 1 };
  s0 -> s2 [84, 84] { R17499 += 1, R42 += 1, R43 += 1 };
  s0 -> s3 [84, 84] { R17499 += 1, R42 += 1, R43 += 1 };
  s0 -> s1 [85, 65535] { R17499 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 83] { R17499 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R17499 += 1, R42 += 1, R43 += 1 };
  s1 -> s3 [84, 84] { R17499 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [85, 65535] { R17499 += 1, R42 += 1, R43 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R17499 += 1, R42 += 1, R43 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 83] { R17501 += 1, R46 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R17500 += 1, R17501 += 1 };
  s0 -> s2 [84, 84] { R17501 += 1, R46 += 1, R47 += 1 };
  s0 -> s3 [84, 84] { R17501 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [85, 65535] { R17501 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 83] { R17501 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R17501 += 1, R46 += 1, R47 += 1 };
  s1 -> s3 [84, 84] { R17501 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [85, 65535] { R17501 += 1, R46 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R17501 += 1, R46 += 1, R47 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 83] { R17503 += 1, R52 += 1, R53 += 1 };
  s0 -> s0 [0, 65535] { R17502 += 1, R17503 += 1 };
  s0 -> s2 [84, 84] { R17503 += 1, R52 += 1, R53 += 1 };
  s0 -> s3 [84, 84] { R17503 += 1, R52 += 1, R53 += 1 };
  s0 -> s1 [85, 65535] { R17503 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 83] { R17503 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R17503 += 1, R52 += 1, R53 += 1 };
  s1 -> s3 [84, 84] { R17503 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [85, 65535] { R17503 += 1, R52 += 1, R53 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R17503 += 1, R52 += 1, R53 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 83] { R17505 += 1, R56 += 1, R57 += 1 };
  s0 -> s0 [0, 65535] { R17504 += 1, R17505 += 1 };
  s0 -> s2 [84, 84] { R17505 += 1, R56 += 1, R57 += 1 };
  s0 -> s3 [84, 84] { R17505 += 1, R56 += 1, R57 += 1 };
  s0 -> s1 [85, 65535] { R17505 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 83] { R17505 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R17505 += 1, R56 += 1, R57 += 1 };
  s1 -> s3 [84, 84] { R17505 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [85, 65535] { R17505 += 1, R56 += 1, R57 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R17505 += 1, R56 += 1, R57 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 83] { R17507 += 1, R62 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R17506 += 1, R17507 += 1 };
  s0 -> s2 [84, 84] { R17507 += 1, R62 += 1, R63 += 1 };
  s0 -> s3 [84, 84] { R17507 += 1, R62 += 1, R63 += 1 };
  s0 -> s1 [85, 65535] { R17507 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 83] { R17507 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [84, 84] { R17507 += 1, R62 += 1, R63 += 1 };
  s1 -> s3 [84, 84] { R17507 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [85, 65535] { R17507 += 1, R62 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R17507 += 1, R62 += 1, R63 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 83] { R17527 += 1 };
  s0 -> s0 [0, 65535] { R17526 += 1, R17527 += 1 };
  s0 -> s2 [84, 84] { R17527 += 1 };
  s0 -> s1 [85, 65535] { R17527 += 1 };
  s1 -> s1 [0, 83] { R17527 += 1 };
  s1 -> s2 [84, 84] { R17527 += 1 };
  s1 -> s1 [85, 65535] { R17527 += 1 };
  s2 -> s2 [0, 65535] { R17527 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R17529 += 1, R1 += 1 };
  s0 -> s0 [0, 65535] { R17528 += 1, R17529 += 1 };
  s1 -> s1 [0, 65535] { R17529 += 1, R1 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 83] { R17531 += 1 };
  s0 -> s0 [0, 65535] { R17530 += 1, R17531 += 1 };
  s0 -> s2 [0, 65535] { R17531 += 1, R8 += 1 };
  s0 -> s3 [84, 84] { R17531 += 1 };
  s0 -> s1 [85, 65535] { R17531 += 1 };
  s1 -> s1 [0, 83] { R17531 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [84, 84] { R17531 += 1 };
  s1 -> s1 [85, 65535] { R17531 += 1 };
  s2 -> s1 [0, 83] { R17531 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R17531 += 1, R8 += 1 };
  s2 -> s3 [84, 84] { R17531 += 1 };
  s2 -> s1 [85, 65535] { R17531 += 1 };
  s3 -> s3 [0, 65535] { R17531 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 83] { R17533 += 1, R17471 += 1 };
  s0 -> s2 [0, 65535] { R17533 += 1, R17470 += 1, R17471 += 1 };
  s0 -> s0 [0, 65535] { R17532 += 1, R17533 += 1 };
  s0 -> s1 [85, 65535] { R17533 += 1, R17471 += 1 };
  s1 -> s1 [0, 83] { R17533 += 1, R17471 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R17533 += 1 };
  s1 -> s1 [85, 65535] { R17533 += 1, R17471 += 1 };
  s2 -> s1 [0, 83] { R17533 += 1, R17471 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R17533 += 1, R17470 += 1, R17471 += 1 };
  s2 -> s1 [85, 65535] { R17533 += 1, R17471 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R17535 += 1, R17472 += 1, R17473 += 1 };
  s0 -> s0 [0, 65535] { R17534 += 1, R17535 += 1 };
  s0 -> s2 [0, 65535] { R17535 += 1, R17473 += 1, R17 += 1 };
  s1 -> s1 [0, 65535] { R17535 += 1, R17472 += 1, R17473 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R17535 += 1, R17473 += 1, R17 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R17535 += 1, R17473 += 1, R17 += 1 };
  s2 -> s4 [0, 65535] { R17535 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R17535 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 65535] { R17537 += 1, R17475 += 1 };
  s0 -> s0 [0, 65535] { R17536 += 1, R17537 += 1 };
  s0 -> s2 [0, 65535] { R17537 += 1, R17474 += 1, R17475 += 1 };
  s1 -> s1 [0, 65535] { R17537 += 1, R17475 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R17537 += 1 };
  s2 -> s1 [0, 65535] { R17537 += 1, R17475 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R17537 += 1, R17474 += 1, R17475 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R17537 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R17539 += 1, R17477 += 1, R67 += 1 };
  s0 -> s0 [0, 65535] { R17538 += 1, R17539 += 1 };
  s0 -> s2 [0, 65535] { R17539 += 1, R17476 += 1, R17477 += 1 };
  s1 -> s1 [0, 65535] { R17539 += 1, R17477 += 1, R67 += 1 };
  s1 -> s4 [0, 65535] { R17539 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R17539 += 1, R17477 += 1, R67 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R17539 += 1, R17476 += 1, R17477 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R17539 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 84] { R17541 += 1, R17479 += 1 };
  s0 -> s2 [0, 65535] { R17541 += 1, R17478 += 1, R17479 += 1 };
  s0 -> s0 [0, 65535] { R17540 += 1, R17541 += 1 };
  s0 -> s3 [0, 65535] { R17541 += 1, R17479 += 1, R69 += 1 };
  s0 -> s1 [86, 65535] { R17541 += 1, R17479 += 1 };
  s1 -> s1 [0, 84] { R17541 += 1, R17479 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R17541 += 1 };
  s1 -> s1 [86, 65535] { R17541 += 1, R17479 += 1 };
  s2 -> s1 [0, 84] { R17541 += 1, R17479 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R17541 += 1, R17478 += 1, R17479 += 1 };
  s2 -> s3 [0, 65535] { R17541 += 1, R17479 += 1, R69 += 1 };
  s2 -> s1 [86, 65535] { R17541 += 1, R17479 += 1 };
  s3 -> s1 [0, 84] { R17541 += 1, R17479 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R17541 += 1 };
  s3 -> s3 [0, 65535] { R17541 += 1, R17479 += 1, R69 += 1 };
  s3 -> s1 [86, 65535] { R17541 += 1, R17479 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R17541 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 84] { R17543 += 1, R17481 += 1, R15335 += 1 };
  s0 -> s1 [0, 65535] { R17543 += 1, R17481 += 1 };
  s0 -> s2 [0, 65535] { R17543 += 1, R17480 += 1, R17481 += 1 };
  s0 -> s0 [0, 65535] { R17542 += 1, R17543 += 1 };
  s0 -> s1 [86, 65535] { R17543 += 1, R17481 += 1, R15335 += 1 };
  s1 -> s1 [0, 84] { R17543 += 1, R17481 += 1, R15335 += 1 };
  s1 -> s4 [0, 65535] { R17543 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R17543 += 1, R17481 += 1 };
  s1 -> s1 [86, 65535] { R17543 += 1, R17481 += 1, R15335 += 1 };
  s2 -> s1 [0, 84] { R17543 += 1, R17481 += 1, R15335 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R17543 += 1, R17481 += 1 };
  s2 -> s2 [0, 65535] { R17543 += 1, R17480 += 1, R17481 += 1 };
  s2 -> s1 [86, 65535] { R17543 += 1, R17481 += 1, R15335 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R17543 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R17544 += 1, R17545 += 1 };
  s0 -> s1 [0, 65535] { R17545 += 1, R17483 += 1, R15340 += 1, R15341 += 1 };
  s0 -> s2 [0, 65535] { R17545 += 1, R17483 += 1, R15339 += 1, R15340 += 1 };
  s0 -> s3 [0, 65535] { R17545 += 1, R17482 += 1, R17483 += 1 };
  s1 -> s6 [0, 65535] { R17545 += 1, R17483 += 1 };
  s1 -> s1 [0, 65535] { R17545 += 1, R17483 += 1, R15340 += 1, R15341 += 1 };
  s1 -> s5 [0, 65535] { R17545 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R17545 += 1, R17483 += 1, R15340 += 1, R15341 += 1 };
  s2 -> s2 [0, 65535] { R17545 += 1, R17483 += 1, R15339 += 1, R15340 += 1 };
  s2 -> s5 [0, 65535] { R17545 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R17545 += 1, R17483 += 1, R15340 += 1, R15341 += 1 };
  s3 -> s2 [0, 65535] { R17545 += 1, R17483 += 1, R15339 += 1, R15340 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R17545 += 1, R17482 += 1, R17483 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R17545 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R17545 += 1, R17483 += 1 };
  s6 -> s5 [0, 65535] { R17545 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 65535] { R17547 += 1, R17484 += 1, R17485 += 1 };
  s0 -> s2 [0, 65535] { R17547 += 1, R17485 += 1 };
  s0 -> s0 [0, 65535] { R17546 += 1, R17547 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R17547 += 1, R17484 += 1, R17485 += 1 };
  s1 -> s2 [0, 65535] { R17547 += 1, R17485 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R17547 += 1 };
  s2 -> s2 [0, 65535] { R17547 += 1, R17485 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R17547 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R17549 += 1, R17487 += 1 };
  s0 -> s0 [0, 65535] { R17548 += 1, R17549 += 1 };
  s0 -> s2 [0, 65535] { R17549 += 1, R17486 += 1, R17487 += 1 };
  s1 -> s1 [0, 65535] { R17549 += 1, R17487 += 1 };
  s1 -> s4 [0, 65535] { R17549 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R17549 += 1, R17487 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R17549 += 1, R17486 += 1, R17487 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R17549 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 84] { R17551 += 1, R17489 += 1, R17469 += 1 };
  s0 -> s2 [0, 65535] { R17551 += 1, R17488 += 1, R17489 += 1 };
  s0 -> s0 [0, 65535] { R17550 += 1, R17551 += 1 };
  s0 -> s3 [0, 65535] { R17551 += 1, R17489 += 1, R17468 += 1, R17469 += 1 };
  s0 -> s4 [85, 85] { R17551 += 1, R17489 += 1, R17469 += 1 };
  s0 -> s5 [85, 85] { R17551 += 1, R17489 += 1, R17469 += 1 };
  s0 -> s1 [87, 65535] { R17551 += 1, R17489 += 1, R17469 += 1 };
  s1 -> s1 [0, 84] { R17551 += 1, R17489 += 1, R17469 += 1 };
  s1 -> s1 [0, 65535] { R17551 += 1, R17489 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R17551 += 1 };
  s1 -> s4 [85, 85] { R17551 += 1, R17489 += 1, R17469 += 1 };
  s1 -> s5 [85, 85] { R17551 += 1, R17489 += 1, R17469 += 1 };
  s1 -> s1 [87, 65535] { R17551 += 1, R17489 += 1, R17469 += 1 };
  s2 -> s1 [0, 84] { R17551 += 1, R17489 += 1, R17469 += 1 };
  s2 -> s2 [0, 65535] { R17551 += 1, R17488 += 1, R17489 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R17551 += 1, R17489 += 1, R17468 += 1, R17469 += 1 };
  s2 -> s4 [85, 85] { R17551 += 1, R17489 += 1, R17469 += 1 };
  s2 -> s5 [85, 85] { R17551 += 1, R17489 += 1, R17469 += 1 };
  s2 -> s1 [87, 65535] { R17551 += 1, R17489 += 1, R17469 += 1 };
  s3 -> s1 [0, 84] { R17551 += 1, R17489 += 1, R17469 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R17551 += 1, R17489 += 1, R17468 += 1, R17469 += 1 };
  s3 -> s7 [0, 65535] { R17551 += 1 };
  s3 -> s4 [85, 85] { R17551 += 1, R17489 += 1, R17469 += 1 };
  s3 -> s5 [85, 85] { R17551 += 1, R17489 += 1, R17469 += 1 };
  s3 -> s1 [87, 65535] { R17551 += 1, R17489 += 1, R17469 += 1 };
  s4 -> s4 [0, 65535] { R17551 += 1, R17489 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R17551 += 1 };
  s5 -> s5 [0, 85] { R17551 += 1, R17489 += 1, R17469 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R17551 += 1, R17489 += 1 };
  s5 -> s7 [0, 65535] { R17551 += 1 };
  s5 -> s5 [87, 65535] { R17551 += 1, R17489 += 1, R17469 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R17551 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R17553 += 1, R17509 += 1, R18 += 1 };
  s0 -> s0 [0, 65535] { R17552 += 1, R17553 += 1 };
  s0 -> s2 [0, 65535] { R17553 += 1, R17508 += 1, R17509 += 1 };
  s1 -> s1 [0, 65535] { R17553 += 1, R17509 += 1, R18 += 1 };
  s1 -> s4 [0, 65535] { R17553 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R17553 += 1, R17509 += 1, R18 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R17553 += 1, R17508 += 1, R17509 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R17553 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 83] { R17555 += 1, R17511 += 1 };
  s0 -> s0 [0, 65535] { R17554 += 1, R17555 += 1 };
  s0 -> s2 [0, 65535] { R17555 += 1, R17510 += 1, R17511 += 1 };
  s0 -> s3 [84, 84] { R17555 += 1, R17511 += 1 };
  s0 -> s4 [84, 84] { R17555 += 1, R17511 += 1 };
  s0 -> s5 [85, 85] { R17555 += 1, R17511 += 1 };
  s0 -> s1 [86, 65535] { R17555 += 1, R17511 += 1 };
  s1 -> s1 [0, 83] { R17555 += 1, R17511 += 1 };
  s1 -> s3 [84, 84] { R17555 += 1, R17511 += 1 };
  s1 -> s4 [84, 84] { R17555 += 1, R17511 += 1 };
  s1 -> s5 [85, 85] { R17555 += 1, R17511 += 1 };
  s1 -> s1 [86, 65535] { R17555 += 1, R17511 += 1 };
  s2 -> s1 [0, 83] { R17555 += 1, R17511 += 1 };
  s2 -> s2 [0, 65535] { R17555 += 1, R17510 += 1, R17511 += 1 };
  s2 -> s3 [84, 84] { R17555 += 1, R17511 += 1 };
  s2 -> s4 [84, 84] { R17555 += 1, R17511 += 1 };
  s2 -> s5 [85, 85] { R17555 += 1, R17511 += 1 };
  s2 -> s1 [86, 65535] { R17555 += 1, R17511 += 1 };
  s4 -> s4 [0, 84] { R17555 += 1, R17511 += 1 };
  s4 -> s7 [85, 85] { R17555 += 1, R17511 += 1 };
  s4 -> s4 [86, 65535] { R17555 += 1, R17511 += 1 };
  s5 -> s5 [0, 83] { R17555 += 1, R17511 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R17555 += 1 };
  s5 -> s7 [84, 84] { R17555 += 1, R17511 += 1 };
  s5 -> s8 [84, 84] { R17555 += 1, R17511 += 1 };
  s5 -> s5 [85, 65535] { R17555 += 1, R17511 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R17555 += 1, R17511 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s9 [0, 65535] { R17555 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R17555 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s9 [0, 65535] { R17555 += 1 };
  accepting s8, s5, s9, s6, s7;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 83] { R17557 += 1, R17513 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R17556 += 1, R17557 += 1 };
  s0 -> s2 [0, 65535] { R17557 += 1, R17512 += 1, R17513 += 1 };
  s0 -> s3 [84, 84] { R17557 += 1, R17513 += 1, R66 += 1 };
  s0 -> s4 [84, 84] { R17557 += 1, R17513 += 1, R66 += 1 };
  s0 -> s1 [85, 65535] { R17557 += 1, R17513 += 1, R66 += 1 };
  s1 -> s1 [0, 83] { R17557 += 1, R17513 += 1, R66 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R17557 += 1 };
  s1 -> s3 [84, 84] { R17557 += 1, R17513 += 1, R66 += 1 };
  s1 -> s4 [84, 84] { R17557 += 1, R17513 += 1, R66 += 1 };
  s1 -> s1 [85, 65535] { R17557 += 1, R17513 += 1, R66 += 1 };
  s2 -> s1 [0, 83] { R17557 += 1, R17513 += 1, R66 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R17557 += 1, R17512 += 1, R17513 += 1 };
  s2 -> s3 [84, 84] { R17557 += 1, R17513 += 1, R66 += 1 };
  s2 -> s4 [84, 84] { R17557 += 1, R17513 += 1, R66 += 1 };
  s2 -> s1 [85, 65535] { R17557 += 1, R17513 += 1, R66 += 1 };
  s3 -> s3 [0, 65535] { R17557 += 1, R17513 += 1, R66 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R17557 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R17557 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R17557 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 83] { R17559 += 1, R17515 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R17558 += 1, R17559 += 1 };
  s0 -> s2 [0, 65535] { R17559 += 1, R17514 += 1, R17515 += 1 };
  s0 -> s3 [84, 84] { R17559 += 1, R17515 += 1, R68 += 1 };
  s0 -> s4 [84, 84] { R17559 += 1, R17515 += 1, R68 += 1 };
  s0 -> s1 [85, 65535] { R17559 += 1, R17515 += 1, R68 += 1 };
  s1 -> s1 [0, 83] { R17559 += 1, R17515 += 1, R68 += 1 };
  s1 -> s1 [0, 65535] { R17559 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [84, 84] { R17559 += 1, R17515 += 1, R68 += 1 };
  s1 -> s4 [84, 84] { R17559 += 1, R17515 += 1, R68 += 1 };
  s1 -> s1 [85, 65535] { R17559 += 1, R17515 += 1, R68 += 1 };
  s2 -> s1 [0, 83] { R17559 += 1, R17515 += 1, R68 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R17559 += 1, R17514 += 1, R17515 += 1 };
  s2 -> s3 [84, 84] { R17559 += 1, R17515 += 1, R68 += 1 };
  s2 -> s4 [84, 84] { R17559 += 1, R17515 += 1, R68 += 1 };
  s2 -> s1 [85, 65535] { R17559 += 1, R17515 += 1, R68 += 1 };
  s3 -> s3 [0, 65535] { R17559 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R17559 += 1, R17515 += 1, R68 += 1 };
  s4 -> s6 [0, 65535] { R17559 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R17559 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 83] { R17561 += 1, R17517 += 1, R15332 += 1, R15333 += 1 };
  s0 -> s2 [0, 83] { R17561 += 1, R17517 += 1, R15333 += 1 };
  s0 -> s0 [0, 65535] { R17560 += 1, R17561 += 1 };
  s0 -> s3 [0, 65535] { R17561 += 1, R17516 += 1, R17517 += 1 };
  s0 -> s4 [84, 84] { R17561 += 1, R17517 += 1, R15333 += 1 };
  s0 -> s5 [84, 84] { R17561 += 1, R17517 += 1, R15332 += 1, R15333 += 1 };
  s0 -> s6 [84, 84] { R17561 += 1, R17517 += 1, R15333 += 1 };
  s0 -> s7 [84, 84] { R17561 += 1, R17517 += 1, R15332 += 1, R15333 += 1 };
  s0 -> s1 [85, 65535] { R17561 += 1, R17517 += 1, R15332 += 1, R15333 += 1 };
  s0 -> s2 [86, 65535] { R17561 += 1, R17517 += 1, R15333 += 1 };
  s1 -> s1 [0, 83] { R17561 += 1, R17517 += 1, R15332 += 1, R15333 += 1 };
  s1 -> s2 [0, 83] { R17561 += 1, R17517 += 1, R15333 += 1 };
  s1 -> s4 [84, 84] { R17561 += 1, R17517 += 1, R15333 += 1 };
  s1 -> s5 [84, 84] { R17561 += 1, R17517 += 1, R15332 += 1, R15333 += 1 };
  s1 -> s6 [84, 84] { R17561 += 1, R17517 += 1, R15333 += 1 };
  s1 -> s7 [84, 84] { R17561 += 1, R17517 += 1, R15332 += 1, R15333 += 1 };
  s1 -> s1 [85, 65535] { R17561 += 1, R17517 += 1, R15332 += 1, R15333 += 1 };
  s1 -> s2 [86, 65535] { R17561 += 1, R17517 += 1, R15333 += 1 };
  s2 -> s2 [0, 83] { R17561 += 1, R17517 += 1, R15333 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R17561 += 1 };
  s2 -> s4 [84, 84] { R17561 += 1, R17517 += 1 };
  s2 -> s6 [84, 84] { R17561 += 1, R17517 += 1 };
  s2 -> s2 [85, 65535] { R17561 += 1, R17517 += 1 };
  s2 -> s2 [86, 65535] { R17561 += 1, R17517 += 1, R15333 += 1 };
  s3 -> s1 [0, 83] { R17561 += 1, R17517 += 1, R15332 += 1, R15333 += 1 };
  s3 -> s2 [0, 83] { R17561 += 1, R17517 += 1, R15333 += 1 };
  s3 -> s3 [0, 65535] { R17561 += 1, R17516 += 1, R17517 += 1 };
  s3 -> s4 [84, 84] { R17561 += 1, R17517 += 1, R15333 += 1 };
  s3 -> s5 [84, 84] { R17561 += 1, R17517 += 1, R15332 += 1, R15333 += 1 };
  s3 -> s6 [84, 84] { R17561 += 1, R17517 += 1, R15333 += 1 };
  s3 -> s7 [84, 84] { R17561 += 1, R17517 += 1, R15332 += 1, R15333 += 1 };
  s3 -> s1 [85, 65535] { R17561 += 1, R17517 += 1, R15332 += 1, R15333 += 1 };
  s3 -> s2 [86, 65535] { R17561 += 1, R17517 += 1, R15333 += 1 };
  s4 -> s4 [0, 65535] { R17561 += 1 };
  s4 -> s8 [0, 65535];
  s6 -> s6 [0, 84] { R17561 += 1, R17517 += 1, R15333 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [0, 65535] { R17561 += 1 };
  s6 -> s6 [0, 65535] { R17561 += 1, R17517 += 1 };
  s6 -> s6 [86, 65535] { R17561 += 1, R17517 += 1, R15333 += 1 };
  s7 -> s6 [0, 84] { R17561 += 1, R17517 += 1, R15333 += 1 };
  s7 -> s7 [0, 65535] { R17561 += 1, R17517 += 1, R15332 += 1, R15333 += 1 };
  s7 -> s6 [86, 65535] { R17561 += 1, R17517 += 1, R15333 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R17561 += 1 };
  accepting s4, s8, s2, s9, s6;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 83] { R17563 += 1, R17519 += 1, R15336 += 1, R15337 += 1 };
  s0 -> s2 [0, 65535] { R17563 += 1, R17518 += 1, R17519 += 1 };
  s0 -> s0 [0, 65535] { R17562 += 1, R17563 += 1 };
  s0 -> s3 [84, 84] { R17563 += 1, R17519 += 1, R15336 += 1, R15337 += 1 };
  s0 -> s4 [84, 84] { R17563 += 1, R17519 += 1, R15336 += 1, R15337 += 1 };
  s0 -> s1 [85, 65535] { R17563 += 1, R17519 += 1, R15336 += 1, R15337 += 1 };
  s1 -> s1 [0, 83] { R17563 += 1, R17519 += 1, R15336 += 1, R15337 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R17563 += 1 };
  s1 -> s3 [84, 84] { R17563 += 1, R17519 += 1, R15336 += 1, R15337 += 1 };
  s1 -> s4 [84, 84] { R17563 += 1, R17519 += 1, R15336 += 1, R15337 += 1 };
  s1 -> s1 [85, 65535] { R17563 += 1, R17519 += 1, R15336 += 1, R15337 += 1 };
  s2 -> s1 [0, 83] { R17563 += 1, R17519 += 1, R15336 += 1, R15337 += 1 };
  s2 -> s2 [0, 65535] { R17563 += 1, R17518 += 1, R17519 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [84, 84] { R17563 += 1, R17519 += 1, R15336 += 1, R15337 += 1 };
  s2 -> s4 [84, 84] { R17563 += 1, R17519 += 1, R15336 += 1, R15337 += 1 };
  s2 -> s1 [85, 65535] { R17563 += 1, R17519 += 1, R15336 += 1, R15337 += 1 };
  s3 -> s3 [0, 65535] { R17563 += 1, R17519 += 1, R15336 += 1, R15337 += 1 };
  s3 -> s6 [0, 65535] { R17563 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R17563 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R17563 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 83] { R17565 += 1, R17521 += 1, R16612 += 1, R16613 += 1 };
  s0 -> s2 [0, 83] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s0 -> s0 [0, 65535] { R17564 += 1, R17565 += 1 };
  s0 -> s3 [0, 65535] { R17565 += 1, R17520 += 1, R17521 += 1 };
  s0 -> s4 [84, 84] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s0 -> s5 [84, 84] { R17565 += 1, R17521 += 1, R16612 += 1, R16613 += 1 };
  s0 -> s6 [84, 84] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s0 -> s7 [84, 84] { R17565 += 1, R17521 += 1, R16612 += 1, R16613 += 1 };
  s0 -> s2 [85, 85] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s0 -> s1 [85, 65535] { R17565 += 1, R17521 += 1, R16612 += 1, R16613 += 1 };
  s0 -> s8 [86, 86] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s0 -> s2 [87, 65535] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s1 -> s1 [0, 83] { R17565 += 1, R17521 += 1, R16612 += 1, R16613 += 1 };
  s1 -> s2 [0, 83] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s1 -> s4 [84, 84] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s1 -> s5 [84, 84] { R17565 += 1, R17521 += 1, R16612 += 1, R16613 += 1 };
  s1 -> s6 [84, 84] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s1 -> s7 [84, 84] { R17565 += 1, R17521 += 1, R16612 += 1, R16613 += 1 };
  s1 -> s2 [85, 85] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s1 -> s1 [85, 65535] { R17565 += 1, R17521 += 1, R16612 += 1, R16613 += 1 };
  s1 -> s8 [86, 86] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s1 -> s2 [87, 65535] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s2 -> s2 [0, 83] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s2 -> s4 [84, 84] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s2 -> s6 [84, 84] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s2 -> s2 [85, 85] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s2 -> s8 [86, 86] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s2 -> s2 [87, 65535] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s3 -> s1 [0, 83] { R17565 += 1, R17521 += 1, R16612 += 1, R16613 += 1 };
  s3 -> s2 [0, 83] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s3 -> s3 [0, 65535] { R17565 += 1, R17520 += 1, R17521 += 1 };
  s3 -> s4 [84, 84] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s3 -> s5 [84, 84] { R17565 += 1, R17521 += 1, R16612 += 1, R16613 += 1 };
  s3 -> s6 [84, 84] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s3 -> s7 [84, 84] { R17565 += 1, R17521 += 1, R16612 += 1, R16613 += 1 };
  s3 -> s2 [85, 85] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s3 -> s1 [85, 65535] { R17565 += 1, R17521 += 1, R16612 += 1, R16613 += 1 };
  s3 -> s8 [86, 86] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s3 -> s2 [87, 65535] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s4 -> s4 [0, 85] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s4 -> s12 [86, 86] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s4 -> s4 [87, 65535] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s7 -> s4 [0, 85] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s7 -> s7 [0, 65535] { R17565 += 1, R17521 += 1, R16612 += 1, R16613 += 1 };
  s7 -> s12 [86, 86] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s7 -> s4 [87, 65535] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s8 -> s8 [0, 83] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s8 -> s9 [0, 83] { R17565 += 1, R17521 += 1 };
  s8 -> s10 [84, 84] { R17565 += 1, R17521 += 1 };
  s8 -> s11 [84, 84] { R17565 += 1, R17521 += 1 };
  s8 -> s12 [84, 84] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s8 -> s13 [84, 84] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s8 -> s8 [85, 65535] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s8 -> s9 [85, 65535] { R17565 += 1, R17521 += 1 };
  s9 -> s9 [0, 83] { R17565 += 1, R17521 += 1 };
  s9 -> s9 [0, 65535] { R17565 += 1 };
  s9 -> s14 [0, 65535];
  s9 -> s10 [84, 84] { R17565 += 1, R17521 += 1 };
  s9 -> s11 [84, 84] { R17565 += 1, R17521 += 1 };
  s9 -> s9 [85, 65535] { R17565 += 1, R17521 += 1 };
  s10 -> s15 [0, 65535] { R17565 += 1 };
  s10 -> s10 [0, 65535] { R17565 += 1, R17521 += 1 };
  s10 -> s14 [0, 65535];
  s11 -> s11 [0, 65535] { R17565 += 1 };
  s11 -> s14 [0, 65535];
  s12 -> s10 [0, 65535] { R17565 += 1, R17521 += 1 };
  s12 -> s12 [0, 65535] { R17565 += 1, R17521 += 1, R16613 += 1 };
  s14 -> s14 [0, 65535];
  s15 -> s15 [0, 65535] { R17565 += 1 };
  s15 -> s14 [0, 65535];
  accepting s9, s14, s15, s10, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 83] { R17567 += 1, R17523 += 1, R17461 += 1, R17462 += 1 };
  s0 -> s2 [0, 83] { R17567 += 1, R17523 += 1, R17460 += 1, R17461 += 1 };
  s0 -> s3 [0, 65535] { R17567 += 1, R17522 += 1, R17523 += 1 };
  s0 -> s0 [0, 65535] { R17566 += 1, R17567 += 1 };
  s0 -> s4 [84, 84] { R17567 += 1, R17523 += 1, R17461 += 1, R17462 += 1 };
  s0 -> s5 [84, 84] { R17567 += 1, R17523 += 1, R17460 += 1, R17461 += 1 };
  s0 -> s6 [84, 84] { R17567 += 1, R17523 += 1, R17461 += 1, R17462 += 1 };
  s0 -> s7 [84, 84] { R17567 += 1, R17523 += 1, R17460 += 1, R17461 += 1 };
  s0 -> s1 [85, 65535] { R17567 += 1, R17523 += 1, R17461 += 1, R17462 += 1 };
  s0 -> s2 [85, 65535] { R17567 += 1, R17523 += 1, R17460 += 1, R17461 += 1 };
  s1 -> s11 [0, 83] { R17567 += 1, R17523 += 1 };
  s1 -> s1 [0, 83] { R17567 += 1, R17523 += 1, R17461 += 1, R17462 += 1 };
  s1 -> s4 [84, 84] { R17567 += 1, R17523 += 1, R17461 += 1, R17462 += 1 };
  s1 -> s6 [84, 84] { R17567 += 1, R17523 += 1, R17461 += 1, R17462 += 1 };
  s1 -> s8 [84, 84] { R17567 += 1, R17523 += 1 };
  s1 -> s12 [84, 84] { R17567 += 1, R17523 += 1 };
  s1 -> s11 [85, 65535] { R17567 += 1, R17523 += 1 };
  s1 -> s1 [85, 65535] { R17567 += 1, R17523 += 1, R17461 += 1, R17462 += 1 };
  s2 -> s1 [0, 83] { R17567 += 1, R17523 += 1, R17461 += 1, R17462 += 1 };
  s2 -> s2 [0, 83] { R17567 += 1, R17523 += 1, R17460 += 1, R17461 += 1 };
  s2 -> s4 [84, 84] { R17567 += 1, R17523 += 1, R17461 += 1, R17462 += 1 };
  s2 -> s5 [84, 84] { R17567 += 1, R17523 += 1, R17460 += 1, R17461 += 1 };
  s2 -> s6 [84, 84] { R17567 += 1, R17523 += 1, R17461 += 1, R17462 += 1 };
  s2 -> s7 [84, 84] { R17567 += 1, R17523 += 1, R17460 += 1, R17461 += 1 };
  s2 -> s1 [85, 65535] { R17567 += 1, R17523 += 1, R17461 += 1, R17462 += 1 };
  s2 -> s2 [85, 65535] { R17567 += 1, R17523 += 1, R17460 += 1, R17461 += 1 };
  s3 -> s1 [0, 83] { R17567 += 1, R17523 += 1, R17461 += 1, R17462 += 1 };
  s3 -> s2 [0, 83] { R17567 += 1, R17523 += 1, R17460 += 1, R17461 += 1 };
  s3 -> s3 [0, 65535] { R17567 += 1, R17522 += 1, R17523 += 1 };
  s3 -> s4 [84, 84] { R17567 += 1, R17523 += 1, R17461 += 1, R17462 += 1 };
  s3 -> s5 [84, 84] { R17567 += 1, R17523 += 1, R17460 += 1, R17461 += 1 };
  s3 -> s6 [84, 84] { R17567 += 1, R17523 += 1, R17461 += 1, R17462 += 1 };
  s3 -> s7 [84, 84] { R17567 += 1, R17523 += 1, R17460 += 1, R17461 += 1 };
  s3 -> s1 [85, 65535] { R17567 += 1, R17523 += 1, R17461 += 1, R17462 += 1 };
  s3 -> s2 [85, 65535] { R17567 += 1, R17523 += 1, R17460 += 1, R17461 += 1 };
  s6 -> s6 [0, 65535] { R17567 += 1, R17523 += 1, R17461 += 1, R17462 += 1 };
  s6 -> s8 [0, 65535] { R17567 += 1, R17523 += 1 };
  s7 -> s6 [0, 65535] { R17567 += 1, R17523 += 1, R17461 += 1, R17462 += 1 };
  s7 -> s7 [0, 65535] { R17567 += 1, R17523 += 1, R17460 += 1, R17461 += 1 };
  s8 -> s9 [0, 65535] { R17567 += 1 };
  s8 -> s8 [0, 65535] { R17567 += 1, R17523 += 1 };
  s8 -> s10 [0, 65535];
  s9 -> s9 [0, 65535] { R17567 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  s11 -> s11 [0, 83] { R17567 += 1, R17523 += 1 };
  s11 -> s11 [0, 65535] { R17567 += 1 };
  s11 -> s10 [0, 65535];
  s11 -> s8 [84, 84] { R17567 += 1, R17523 += 1 };
  s11 -> s12 [84, 84] { R17567 += 1, R17523 += 1 };
  s11 -> s11 [85, 65535] { R17567 += 1, R17523 += 1 };
  s12 -> s12 [0, 65535] { R17567 += 1 };
  s12 -> s10 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 83] { R17569 += 1, R17525 += 1, R17466 += 1, R17467 += 1 };
  s0 -> s2 [0, 65535] { R17569 += 1, R17524 += 1, R17525 += 1 };
  s0 -> s0 [0, 65535] { R17568 += 1, R17569 += 1 };
  s0 -> s3 [84, 84] { R17569 += 1, R17525 += 1, R17466 += 1, R17467 += 1 };
  s0 -> s4 [84, 84] { R17569 += 1, R17525 += 1, R17466 += 1, R17467 += 1 };
  s0 -> s1 [85, 65535] { R17569 += 1, R17525 += 1, R17466 += 1, R17467 += 1 };
  s1 -> s1 [0, 83] { R17569 += 1, R17525 += 1, R17466 += 1, R17467 += 1 };
  s1 -> s1 [0, 65535] { R17569 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [84, 84] { R17569 += 1, R17525 += 1, R17466 += 1, R17467 += 1 };
  s1 -> s4 [84, 84] { R17569 += 1, R17525 += 1, R17466 += 1, R17467 += 1 };
  s1 -> s1 [85, 65535] { R17569 += 1, R17525 += 1, R17466 += 1, R17467 += 1 };
  s2 -> s1 [0, 83] { R17569 += 1, R17525 += 1, R17466 += 1, R17467 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R17569 += 1, R17524 += 1, R17525 += 1 };
  s2 -> s3 [84, 84] { R17569 += 1, R17525 += 1, R17466 += 1, R17467 += 1 };
  s2 -> s4 [84, 84] { R17569 += 1, R17525 += 1, R17466 += 1, R17467 += 1 };
  s2 -> s1 [85, 65535] { R17569 += 1, R17525 += 1, R17466 += 1, R17467 += 1 };
  s3 -> s3 [0, 65535] { R17569 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R17569 += 1, R17525 += 1, R17466 += 1, R17467 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R17569 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R17569 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [116, 116];
  accepting s1;
};
};
synchronised {  // Automata constraining P62
automaton P62_0 {
  init s0;
  s0 -> s1 [117, 117];
  accepting s1;
};
};
constraint R2 = R17569 && R20 - R17569 = -1 && R21 = R17569 && R22 - R17569 = -1 && R23 = R17569 && R24 = 0 && R25 = 1 && R26 = 0 && R27 = 1 && R38 + R67 + R66 + -1*R16615 + -1*R16613 - R53 = 0 && R52 + R16614 + R16612 = 0 && R17510 = 0 && R17511 = 0 && R17516 = 0 && R17517 = 0 && R17520 = 0 && R17521 = 0 && R17522 = 0 && R17523 = 0 && R17526 = 0 && R17527 = R17569 && R17528 = 0 && R17529 = R17569 && R17530 = 0 && R17531 = R17569 && R17532 = 0 && R17533 = R17569 && R17534 = 0 && R17535 = R17569 && R17536 = 0 && R17537 = R17569 && R17538 = 0 && R17539 = R17569 && R17540 = 0 && R17541 = R17569 && R17542 = 0 && R17543 = R17569 && R17544 = 0 && R17545 = R17569 && R17546 = 0 && R17547 = R17569 && R17548 = 0 && R17549 = R17569 && R17550 = 0 && R17551 = R17569 && R17552 = 0 && R17553 = R17569 && R17554 = 0 && R17555 = R17569 && R17556 = 0 && R17557 = R17569 && R17558 = 0 && R17559 = R17569 && R17560 = 0 && R17561 = R17569 && R17562 = 0 && R17563 = R17569 && R17564 = 0 && R17565 = R17569 && R17566 = 0 && R17567 = R17569 && R17568 = 0 && -1 < R1 && R8 < 1 && R11 < 1 && R12 < 1 && R40 + R69 + R68 < 1 && -1*R16615 + -1*R16613 - R53 < 1 && 0 < R17569 && (R1 != 0 || R17 = 0 || (R17470 = 0 && R17471 = 0)) && (R1 != 0 || R17 = 0 || (R17472 = 0 && R17473 = 0)) && (R1 != 0 || R17 = 0 || (R17474 = 0 && R17475 = 0)) && (R1 != 0 || R17 = 0 || (R17476 = 0 && R17477 = 0)) && (R1 != 0 || R17 = 0 || (R17478 = 0 && R17479 = 0)) && (R1 != 0 || R17 = 0 || (R17480 = 0 && R17481 = 0)) && (R1 != 0 || R17 = 0 || (R17482 = 0 && R17483 = 0)) && (R1 != 0 || R17 = 0 || (R17484 = 0 && R17485 = 0)) && (R1 != 0 || R17 = 0 || (R17486 = 0 && R17487 = 0)) && (R1 != 0 || R17 = 0 || (R17488 = 0 && R17489 = 0)) && (R48 + R15341 + R15338 != 0 || ((R42 + R15334 + R15332 != 0 || R43 + R15335 + R15333 + -1*R16615 + -1*R16613 - R53 = 0 || R53 + R16615 + R16613 < 1) && (R42 + R15334 + R15332 = 0 || R53 + R16615 + R16613 < 1))) && (R48 + R15341 + R15338 != 0 || ((R46 + R15339 + R15336 != 0 || R47 + R15340 + R15337 + -1*R16615 + -1*R16613 - R53 = 0 || R53 + R16615 + R16613 < 1) && (R46 + R15339 + R15336 = 0 || R53 + R16615 + R16613 < 1))) && (R17470 != 0 || R1 = R17471 || R1 < 1) && (R17472 != 0 || R1 = R17473 || R1 < 1) && (R17474 != 0 || R1 = R17475 || R1 < 1) && (R17476 != 0 || R1 = R17477 || R1 < 1) && (R17478 != 0 || R1 = R17479 || R1 < 1) && (R17480 != 0 || R1 = R17481 || R1 < 1) && (R17482 != 0 || R1 = R17483 || R1 < 1) && (R17484 != 0 || R1 = R17485 || R1 < 1) && (R17486 != 0 || R1 = R17487 || R1 < 1) && (R17488 != 0 || R1 = R17489 || R1 < 1) && (R18 = 0 || (R17508 = 0 && R17509 = 0)) && (R18 = 0 || (R17512 = 0 && R17513 = 0)) && (R18 = 0 || (R17514 = 0 && R17515 = 0)) && (R18 = 0 || (R17518 = 0 && R17519 = 0)) && (R18 = 0 || (R17524 = 0 && R17525 = 0)) && (R19 = 0 || (R17490 = 0 && R17491 = 0)) && (R19 = 0 || (R17492 = 0 && R17493 = 0)) && (R19 = 0 || (R17494 = 0 && R17495 = 0)) && (R19 = 0 || (R17496 = 0 && R17497 = 0)) && (R19 = 0 || (R17498 = 0 && R17499 = 0)) && (R19 = 0 || (R17500 = 0 && R17501 = 0)) && (R19 = 0 || (R17502 = 0 && R17503 = 0)) && (R19 = 0 || (R17504 = 0 && R17505 = 0)) && (R19 = 0 || (R17506 = 0 && R17507 = 0)) && (R48 + R15341 + R15338 = 0 || (R42 + R15334 + R15332 = 0 && R43 + R15335 + R15333 + -1*R16615 + -1*R16613 - R53 = 0)) && (R48 + R15341 + R15338 = 0 || (R46 + R15339 + R15336 = 0 && R47 + R15340 + R15337 + -1*R16615 + -1*R16613 - R53 = 0)) && (R58 + R17465 + R17462 = 0 || (R56 + R17463 + R17460 = 0 && R57 + R17464 + R17461 = 0)) && (R58 + R17465 + R17462 = 0 || (R62 + R17468 + R17466 = 0 && R63 + R17469 + R17467 = 0)) && (R17470 = 0 || R1 < 1) && (R17472 = 0 || R1 < 1) && (R17474 = 0 || R1 < 1) && (R17476 = 0 || R1 < 1) && (R17478 = 0 || R1 < 1) && (R17480 = 0 || R1 < 1) && (R17482 = 0 || R1 < 1) && (R17484 = 0 || R1 < 1) && (R17486 = 0 || R1 < 1) && (R17488 = 0 || R1 < 1);
// End of Parikh automata intersection problem
