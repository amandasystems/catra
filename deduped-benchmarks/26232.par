// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R2, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R4015, R4016, R4017, R4018, R4019, R4020, R4021, R4022, R4023, R4024, R4499, R4500, R4501, R4502, R4503, R4504, R4505, R4506, R4507, R4508, R4509, R4510, R4511, R4512, R4513, R4514, R4515, R4516, R4517, R4518, R4519, R4520, R4521, R4522, R4523, R4524, R4525, R4526, R4527, R4528, R4529, R4530, R4531, R4532, R4533, R4534, R4535, R4536, R4537, R4538, R4539, R4540, R4541, R4542, R4543, R4544, R4545, R4546, R4547, R4548, R4549, R4550, R4551, R4552, R4553, R4554, R4555, R4556, R4557, R4558, R4559, R4560, R4561, R4562, R4563, R4564, R4565, R4566, R4567, R4568, R4569, R4570, R4571, R4572, R4573, R4574, R4575, R4576, R4577, R4578, R4579, R4580, R4581, R4582, R4583, R4584, R4585, R4586, R4587, R4588, R4589, R4590, R4591, R4592, R4593, R4594, R4595, R4596, R4597, R4598, R4599, R4600, R4601, R4602, R4603, R4604, R4605, R4606, R4607, R4608, R4609, R4610, R4611, R4612, R4613, R4614, R4615, R4616, R4617, R4618, R4619, R4620, R4621, R4622, R4623, R4624, R4625, R4626, R4627, R4628, R4629, R4630, R4631, R4632, R4633, R4634, R4635, R4636, R4637, R4638, R4639, R4640, R4641, R4642, R4643, R4644, R4645, R4646, R4647, R4648, R4649, R4650, R4651, R4652, R4653, R4654, R4655, R4656, R5, R63, R65, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R26 += 1 };
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R4538 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R4537 += 1, R4538 += 1 };
  s1 -> s1 [0, 65535] { R4538 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R4540 += 1 };
  s0 -> s0 [0, 65535] { R4539 += 1, R4540 += 1 };
  s0 -> s2 [70, 70] { R4540 += 1 };
  s0 -> s3 [70, 70] { R4540 += 1 };
  s0 -> s1 [76, 65535] { R4540 += 1 };
  s1 -> s1 [0, 69] { R4540 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4540 += 1 };
  s1 -> s3 [70, 70] { R4540 += 1 };
  s1 -> s1 [76, 65535] { R4540 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R4540 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R4540 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R4542 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R4541 += 1, R4542 += 1 };
  s0 -> s2 [70, 70] { R4542 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R4542 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R4542 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R4542 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4542 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R4542 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R4542 += 1, R63 += 1 };
  s2 -> s2 [0, 65535] { R4542 += 1, R63 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R4544 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R4543 += 1, R4544 += 1 };
  s0 -> s2 [70, 70] { R4544 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R4544 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R4544 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R4544 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4544 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R4544 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R4544 += 1, R65 += 1 };
  s2 -> s2 [0, 65535] { R4544 += 1, R65 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R4546 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R4545 += 1, R4546 += 1 };
  s0 -> s2 [70, 70] { R4546 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R4546 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R4546 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R4546 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4546 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R4546 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R4546 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535] { R4546 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R4548 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R4547 += 1, R4548 += 1 };
  s0 -> s2 [70, 70] { R4548 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R4548 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R4548 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R4548 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4548 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R4548 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R4548 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R4548 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R4550 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R4549 += 1, R4550 += 1 };
  s0 -> s2 [70, 70] { R4550 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R4550 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R4550 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R4550 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4550 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R4550 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R4550 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4550 += 1, R77 += 1, R78 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R4552 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R4551 += 1, R4552 += 1 };
  s0 -> s2 [70, 70] { R4552 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R4552 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R4552 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R4552 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4552 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R4552 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R4552 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4552 += 1, R81 += 1, R82 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R4554 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R4553 += 1, R4554 += 1 };
  s0 -> s2 [70, 70] { R4554 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R4554 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R4554 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R4554 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4554 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R4554 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R4554 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R4554 += 1, R87 += 1, R88 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R4556 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R4555 += 1, R4556 += 1 };
  s0 -> s2 [70, 70] { R4556 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R4556 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R4556 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R4556 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4556 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R4556 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R4556 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535] { R4556 += 1, R93 += 1, R94 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R4558 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R4557 += 1, R4558 += 1 };
  s0 -> s2 [70, 70] { R4558 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R4558 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R4558 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R4558 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4558 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R4558 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R4558 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4558 += 1, R101 += 1, R102 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R4560 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R4559 += 1, R4560 += 1 };
  s0 -> s2 [70, 70] { R4560 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R4560 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R4560 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R4560 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4560 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R4560 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R4560 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R4560 += 1, R111 += 1, R112 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R4562 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R4561 += 1, R4562 += 1 };
  s0 -> s2 [70, 70] { R4562 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R4562 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R4562 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R4562 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4562 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R4562 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R4562 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4562 += 1, R119 += 1, R120 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R4564 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R4563 += 1, R4564 += 1 };
  s0 -> s2 [70, 70] { R4564 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R4564 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R4564 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R4564 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4564 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R4564 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R4564 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R4564 += 1, R129 += 1, R130 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R4594 += 1 };
  s0 -> s0 [0, 65535] { R4593 += 1, R4594 += 1 };
  s0 -> s2 [70, 70] { R4594 += 1 };
  s0 -> s1 [71, 65535] { R4594 += 1 };
  s1 -> s1 [0, 69] { R4594 += 1 };
  s1 -> s2 [70, 70] { R4594 += 1 };
  s1 -> s1 [71, 65535] { R4594 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4594 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R4596 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R4595 += 1, R4596 += 1 };
  s1 -> s1 [0, 65535] { R4596 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R4598 += 1 };
  s0 -> s0 [0, 65535] { R4597 += 1, R4598 += 1 };
  s0 -> s2 [0, 65535] { R4598 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R4598 += 1 };
  s0 -> s1 [71, 65535] { R4598 += 1 };
  s1 -> s1 [0, 69] { R4598 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R4598 += 1 };
  s1 -> s1 [71, 65535] { R4598 += 1 };
  s2 -> s1 [0, 69] { R4598 += 1 };
  s2 -> s2 [0, 65535] { R4598 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R4598 += 1 };
  s2 -> s1 [71, 65535] { R4598 += 1 };
  s3 -> s3 [0, 65535] { R4598 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R4600 += 1, R4508 += 1 };
  s0 -> s2 [0, 65535] { R4600 += 1, R4507 += 1, R4508 += 1 };
  s0 -> s0 [0, 65535] { R4599 += 1, R4600 += 1 };
  s0 -> s1 [71, 65535] { R4600 += 1, R4508 += 1 };
  s1 -> s1 [0, 69] { R4600 += 1, R4508 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4600 += 1 };
  s1 -> s1 [71, 65535] { R4600 += 1, R4508 += 1 };
  s2 -> s1 [0, 69] { R4600 += 1, R4508 += 1 };
  s2 -> s2 [0, 65535] { R4600 += 1, R4507 += 1, R4508 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R4600 += 1, R4508 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R4602 += 1, R4509 += 1, R4510 += 1 };
  s0 -> s0 [0, 65535] { R4601 += 1, R4602 += 1 };
  s0 -> s2 [0, 65535] { R4602 += 1, R4510 += 1, R22 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4602 += 1, R4509 += 1, R4510 += 1 };
  s1 -> s2 [0, 65535] { R4602 += 1, R4510 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R4602 += 1 };
  s2 -> s2 [0, 65535] { R4602 += 1, R4510 += 1, R22 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4602 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R4604 += 1, R4512 += 1 };
  s0 -> s2 [0, 65535] { R4604 += 1, R4511 += 1, R4512 += 1 };
  s0 -> s0 [0, 65535] { R4603 += 1, R4604 += 1 };
  s0 -> s1 [75, 65535] { R4604 += 1, R4512 += 1 };
  s1 -> s1 [0, 70] { R4604 += 1, R4512 += 1 };
  s1 -> s1 [0, 65535] { R4604 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R4604 += 1, R4512 += 1 };
  s2 -> s1 [0, 70] { R4604 += 1, R4512 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4604 += 1, R4511 += 1, R4512 += 1 };
  s2 -> s1 [75, 65535] { R4604 += 1, R4512 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R4606 += 1, R4513 += 1, R4514 += 1 };
  s0 -> s2 [0, 65535] { R4606 += 1, R4514 += 1, R138 += 1 };
  s0 -> s0 [0, 65535] { R4605 += 1, R4606 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4606 += 1, R4513 += 1, R4514 += 1 };
  s1 -> s2 [0, 65535] { R4606 += 1, R4514 += 1, R138 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4606 += 1, R4514 += 1, R138 += 1 };
  s2 -> s4 [0, 65535] { R4606 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4606 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R4608 += 1, R4516 += 1 };
  s0 -> s0 [0, 65535] { R4607 += 1, R4608 += 1 };
  s0 -> s2 [0, 65535] { R4608 += 1, R4515 += 1, R4516 += 1 };
  s0 -> s3 [0, 65535] { R4608 += 1, R4516 += 1, R140 += 1 };
  s0 -> s1 [76, 65535] { R4608 += 1, R4516 += 1 };
  s1 -> s1 [0, 74] { R4608 += 1, R4516 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4608 += 1 };
  s1 -> s1 [76, 65535] { R4608 += 1, R4516 += 1 };
  s2 -> s1 [0, 74] { R4608 += 1, R4516 += 1 };
  s2 -> s2 [0, 65535] { R4608 += 1, R4515 += 1, R4516 += 1 };
  s2 -> s3 [0, 65535] { R4608 += 1, R4516 += 1, R140 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [76, 65535] { R4608 += 1, R4516 += 1 };
  s3 -> s1 [0, 74] { R4608 += 1, R4516 += 1 };
  s3 -> s4 [0, 65535] { R4608 += 1 };
  s3 -> s3 [0, 65535] { R4608 += 1, R4516 += 1, R140 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [76, 65535] { R4608 += 1, R4516 += 1 };
  s4 -> s4 [0, 65535] { R4608 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R4610 += 1, R4517 += 1, R4518 += 1 };
  s0 -> s2 [0, 65535] { R4610 += 1, R4518 += 1, R144 += 1, R145 += 1 };
  s0 -> s3 [0, 65535] { R4610 += 1, R4518 += 1, R145 += 1, R146 += 1 };
  s0 -> s0 [0, 65535] { R4609 += 1, R4610 += 1 };
  s1 -> s1 [0, 65535] { R4610 += 1, R4517 += 1, R4518 += 1 };
  s1 -> s2 [0, 65535] { R4610 += 1, R4518 += 1, R144 += 1, R145 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s3 [0, 65535] { R4610 += 1, R4518 += 1, R145 += 1, R146 += 1 };
  s2 -> s2 [0, 65535] { R4610 += 1, R4518 += 1, R144 += 1, R145 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R4610 += 1, R4518 += 1, R145 += 1, R146 += 1 };
  s2 -> s5 [0, 65535] { R4610 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4610 += 1, R4518 += 1, R145 += 1, R146 += 1 };
  s3 -> s5 [0, 65535] { R4610 += 1 };
  s3 -> s6 [0, 65535] { R4610 += 1, R4518 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4610 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R4610 += 1 };
  s6 -> s6 [0, 65535] { R4610 += 1, R4518 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R4612 += 1, R4520 += 1, R150 += 1 };
  s0 -> s2 [0, 65535] { R4612 += 1, R4520 += 1, R149 += 1, R150 += 1 };
  s0 -> s3 [0, 65535] { R4612 += 1, R4519 += 1, R4520 += 1 };
  s0 -> s0 [0, 65535] { R4611 += 1, R4612 += 1 };
  s0 -> s4 [75, 75] { R4612 += 1, R4520 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R4612 += 1, R4520 += 1, R150 += 1 };
  s0 -> s1 [89, 65535] { R4612 += 1, R4520 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R4612 += 1, R4520 += 1, R150 += 1 };
  s1 -> s6 [0, 65535] { R4612 += 1 };
  s1 -> s1 [0, 65535] { R4612 += 1, R4520 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [75, 75] { R4612 += 1, R4520 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R4612 += 1, R4520 += 1, R150 += 1 };
  s1 -> s1 [89, 65535] { R4612 += 1, R4520 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R4612 += 1, R4520 += 1, R150 += 1 };
  s2 -> s2 [0, 65535] { R4612 += 1, R4520 += 1, R149 += 1, R150 += 1 };
  s2 -> s6 [0, 65535] { R4612 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [75, 75] { R4612 += 1, R4520 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R4612 += 1, R4520 += 1, R150 += 1 };
  s2 -> s1 [89, 65535] { R4612 += 1, R4520 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R4612 += 1, R4520 += 1, R150 += 1 };
  s3 -> s2 [0, 65535] { R4612 += 1, R4520 += 1, R149 += 1, R150 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R4612 += 1, R4519 += 1, R4520 += 1 };
  s3 -> s4 [75, 75] { R4612 += 1, R4520 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R4612 += 1, R4520 += 1, R150 += 1 };
  s3 -> s1 [89, 65535] { R4612 += 1, R4520 += 1, R150 += 1 };
  s4 -> s4 [0, 75] { R4612 += 1, R4520 += 1, R150 += 1 };
  s4 -> s4 [0, 65535] { R4612 += 1, R4520 += 1 };
  s4 -> s6 [0, 65535] { R4612 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [89, 65535] { R4612 += 1, R4520 += 1, R150 += 1 };
  s5 -> s6 [0, 65535] { R4612 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R4612 += 1, R4520 += 1 };
  s6 -> s6 [0, 65535] { R4612 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R4614 += 1, R4522 += 1 };
  s0 -> s2 [0, 65535] { R4614 += 1, R4521 += 1, R4522 += 1 };
  s0 -> s0 [0, 65535] { R4613 += 1, R4614 += 1 };
  s0 -> s3 [0, 65535] { R4614 += 1, R4522 += 1, R154 += 1 };
  s1 -> s1 [0, 65535] { R4614 += 1, R4522 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R4614 += 1 };
  s2 -> s1 [0, 65535] { R4614 += 1, R4522 += 1 };
  s2 -> s2 [0, 65535] { R4614 += 1, R4521 += 1, R4522 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R4614 += 1, R4522 += 1, R154 += 1 };
  s3 -> s1 [0, 65535] { R4614 += 1, R4522 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R4614 += 1 };
  s3 -> s3 [0, 65535] { R4614 += 1, R4522 += 1, R154 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4614 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R4616 += 1, R4524 += 1, R158 += 1, R159 += 1 };
  s0 -> s2 [0, 65535] { R4616 += 1, R4524 += 1, R159 += 1, R160 += 1 };
  s0 -> s0 [0, 65535] { R4615 += 1, R4616 += 1 };
  s0 -> s3 [0, 65535] { R4616 += 1, R4523 += 1, R4524 += 1 };
  s1 -> s5 [0, 65535] { R4616 += 1 };
  s1 -> s1 [0, 65535] { R4616 += 1, R4524 += 1, R158 += 1, R159 += 1 };
  s1 -> s2 [0, 65535] { R4616 += 1, R4524 += 1, R159 += 1, R160 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R4616 += 1 };
  s2 -> s2 [0, 65535] { R4616 += 1, R4524 += 1, R159 += 1, R160 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s6 [0, 65535] { R4616 += 1, R4524 += 1 };
  s3 -> s1 [0, 65535] { R4616 += 1, R4524 += 1, R158 += 1, R159 += 1 };
  s3 -> s2 [0, 65535] { R4616 += 1, R4524 += 1, R159 += 1, R160 += 1 };
  s3 -> s3 [0, 65535] { R4616 += 1, R4523 += 1, R4524 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4616 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R4616 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R4616 += 1, R4524 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R4618 += 1, R4526 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R4618 += 1, R4525 += 1, R4526 += 1 };
  s0 -> s0 [0, 65535] { R4617 += 1, R4618 += 1 };
  s0 -> s3 [0, 65535] { R4618 += 1, R4526 += 1, R164 += 1, R165 += 1 };
  s0 -> s4 [0, 65535] { R4618 += 1, R4526 += 1, R165 += 1, R166 += 1 };
  s0 -> s1 [76, 65535] { R4618 += 1, R4526 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R4618 += 1, R4526 += 1, R165 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4618 += 1, R4526 += 1 };
  s1 -> s7 [0, 65535] { R4618 += 1 };
  s1 -> s1 [76, 65535] { R4618 += 1, R4526 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R4618 += 1, R4526 += 1, R165 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4618 += 1, R4525 += 1, R4526 += 1 };
  s2 -> s3 [0, 65535] { R4618 += 1, R4526 += 1, R164 += 1, R165 += 1 };
  s2 -> s4 [0, 65535] { R4618 += 1, R4526 += 1, R165 += 1, R166 += 1 };
  s2 -> s1 [76, 65535] { R4618 += 1, R4526 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R4618 += 1, R4526 += 1, R165 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4618 += 1, R4526 += 1, R164 += 1, R165 += 1 };
  s3 -> s4 [0, 65535] { R4618 += 1, R4526 += 1, R165 += 1, R166 += 1 };
  s3 -> s7 [0, 65535] { R4618 += 1 };
  s3 -> s1 [76, 65535] { R4618 += 1, R4526 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R4618 += 1, R4526 += 1, R165 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4618 += 1, R4526 += 1 };
  s4 -> s4 [0, 65535] { R4618 += 1, R4526 += 1, R165 += 1, R166 += 1 };
  s4 -> s7 [0, 65535] { R4618 += 1 };
  s4 -> s1 [76, 65535] { R4618 += 1, R4526 += 1, R165 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4618 += 1, R4526 += 1 };
  s6 -> s7 [0, 65535] { R4618 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R4618 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R4620 += 1, R4528 += 1, R172 += 1, R174 += 1 };
  s0 -> s2 [0, 65535] { R4620 += 1, R4527 += 1, R4528 += 1 };
  s0 -> s0 [0, 65535] { R4619 += 1, R4620 += 1 };
  s0 -> s3 [0, 65535] { R4620 += 1, R4528 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s4 [0, 65535] { R4620 += 1, R4528 += 1, R171 += 1, R172 += 1 };
  s0 -> s1 [76, 65535] { R4620 += 1, R4528 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R4620 += 1, R4528 += 1, R172 += 1, R174 += 1 };
  s1 -> s7 [0, 65535] { R4620 += 1, R4528 += 1 };
  s1 -> s5 [0, 65535] { R4620 += 1 };
  s1 -> s1 [0, 65535] { R4620 += 1, R4528 += 1, R172 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [76, 65535] { R4620 += 1, R4528 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R4620 += 1, R4528 += 1, R172 += 1, R174 += 1 };
  s2 -> s2 [0, 65535] { R4620 += 1, R4527 += 1, R4528 += 1 };
  s2 -> s3 [0, 65535] { R4620 += 1, R4528 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s4 [0, 65535] { R4620 += 1, R4528 += 1, R171 += 1, R172 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [76, 65535] { R4620 += 1, R4528 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R4620 += 1, R4528 += 1, R172 += 1, R174 += 1 };
  s3 -> s7 [0, 65535] { R4620 += 1, R4528 += 1 };
  s3 -> s3 [0, 65535] { R4620 += 1, R4528 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s5 [0, 65535] { R4620 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [76, 65535] { R4620 += 1, R4528 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R4620 += 1, R4528 += 1, R172 += 1, R174 += 1 };
  s4 -> s3 [0, 65535] { R4620 += 1, R4528 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s4 [0, 65535] { R4620 += 1, R4528 += 1, R171 += 1, R172 += 1 };
  s4 -> s5 [0, 65535] { R4620 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s1 [76, 65535] { R4620 += 1, R4528 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535] { R4620 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4620 += 1, R4528 += 1 };
  s7 -> s5 [0, 65535] { R4620 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R4622 += 1, R4530 += 1, R181 += 1 };
  s0 -> s0 [0, 65535] { R4621 += 1, R4622 += 1 };
  s0 -> s2 [0, 65535] { R4622 += 1, R4530 += 1 };
  s0 -> s3 [0, 65535] { R4622 += 1, R4529 += 1, R4530 += 1 };
  s1 -> s1 [0, 65535] { R4622 += 1, R4530 += 1, R181 += 1 };
  s1 -> s2 [0, 65535] { R4622 += 1, R4530 += 1 };
  s1 -> s5 [0, 65535] { R4622 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4622 += 1, R4530 += 1 };
  s2 -> s5 [0, 65535] { R4622 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R4622 += 1, R4530 += 1, R181 += 1 };
  s3 -> s2 [0, 65535] { R4622 += 1, R4530 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4622 += 1, R4529 += 1, R4530 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4622 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R4624 += 1, R4532 += 1, R190 += 1, R192 += 1 };
  s0 -> s2 [0, 65535] { R4624 += 1, R4531 += 1, R4532 += 1 };
  s0 -> s3 [0, 65535] { R4624 += 1, R4532 += 1, R189 += 1, R190 += 1 };
  s0 -> s0 [0, 65535] { R4623 += 1, R4624 += 1 };
  s0 -> s4 [0, 65535] { R4624 += 1, R4532 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s0 -> s1 [88, 65535] { R4624 += 1, R4532 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 75] { R4624 += 1, R4532 += 1, R190 += 1, R192 += 1 };
  s1 -> s5 [0, 65535] { R4624 += 1, R4532 += 1 };
  s1 -> s1 [0, 65535] { R4624 += 1, R4532 += 1, R190 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R4624 += 1 };
  s1 -> s1 [88, 65535] { R4624 += 1, R4532 += 1, R190 += 1, R192 += 1 };
  s2 -> s1 [0, 75] { R4624 += 1, R4532 += 1, R190 += 1, R192 += 1 };
  s2 -> s2 [0, 65535] { R4624 += 1, R4531 += 1, R4532 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R4624 += 1, R4532 += 1, R189 += 1, R190 += 1 };
  s2 -> s4 [0, 65535] { R4624 += 1, R4532 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s2 -> s1 [88, 65535] { R4624 += 1, R4532 += 1, R190 += 1, R192 += 1 };
  s3 -> s1 [0, 75] { R4624 += 1, R4532 += 1, R190 += 1, R192 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R4624 += 1, R4532 += 1, R189 += 1, R190 += 1 };
  s3 -> s7 [0, 65535] { R4624 += 1 };
  s3 -> s4 [0, 65535] { R4624 += 1, R4532 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s3 -> s1 [88, 65535] { R4624 += 1, R4532 += 1, R190 += 1, R192 += 1 };
  s4 -> s1 [0, 75] { R4624 += 1, R4532 += 1, R190 += 1, R192 += 1 };
  s4 -> s5 [0, 65535] { R4624 += 1, R4532 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R4624 += 1 };
  s4 -> s4 [0, 65535] { R4624 += 1, R4532 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s4 -> s1 [88, 65535] { R4624 += 1, R4532 += 1, R190 += 1, R192 += 1 };
  s5 -> s5 [0, 65535] { R4624 += 1, R4532 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R4624 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4624 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R4626 += 1, R4534 += 1 };
  s0 -> s2 [0, 65535] { R4626 += 1, R4534 += 1, R4021 += 1 };
  s0 -> s3 [0, 65535] { R4626 += 1, R4534 += 1, R4021 += 1, R4023 += 1, R4024 += 1 };
  s0 -> s0 [0, 65535] { R4625 += 1, R4626 += 1 };
  s0 -> s4 [0, 65535] { R4626 += 1, R4533 += 1, R4534 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4626 += 1, R4534 += 1 };
  s1 -> s6 [0, 65535] { R4626 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R4626 += 1, R4534 += 1 };
  s2 -> s2 [0, 65535] { R4626 += 1, R4534 += 1, R4021 += 1 };
  s2 -> s6 [0, 65535] { R4626 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R4626 += 1, R4534 += 1 };
  s3 -> s2 [0, 65535] { R4626 += 1, R4534 += 1, R4021 += 1 };
  s3 -> s6 [0, 65535] { R4626 += 1 };
  s3 -> s3 [0, 65535] { R4626 += 1, R4534 += 1, R4021 += 1, R4023 += 1, R4024 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R4626 += 1, R4534 += 1 };
  s4 -> s2 [0, 65535] { R4626 += 1, R4534 += 1, R4021 += 1 };
  s4 -> s3 [0, 65535] { R4626 += 1, R4534 += 1, R4021 += 1, R4023 += 1, R4024 += 1 };
  s4 -> s4 [0, 65535] { R4626 += 1, R4533 += 1, R4534 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4626 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 65535] { R4628 += 1, R4535 += 1, R4536 += 1 };
  s0 -> s0 [0, 65535] { R4627 += 1, R4628 += 1 };
  s0 -> s2 [0, 65535] { R4628 += 1, R4536 += 1 };
  s0 -> s3 [0, 65535] { R4628 += 1, R4536 += 1, R4504 += 1 };
  s1 -> s1 [0, 65535] { R4628 += 1, R4535 += 1, R4536 += 1 };
  s1 -> s2 [0, 65535] { R4628 += 1, R4536 += 1 };
  s1 -> s3 [0, 65535] { R4628 += 1, R4536 += 1, R4504 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s4 [0, 65535] { R4628 += 1 };
  s2 -> s2 [0, 65535] { R4628 += 1, R4536 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R4628 += 1 };
  s3 -> s2 [0, 65535] { R4628 += 1, R4536 += 1 };
  s3 -> s3 [0, 65535] { R4628 += 1, R4536 += 1, R4504 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4628 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65535] { R4630 += 1, R4565 += 1, R4566 += 1 };
  s0 -> s2 [0, 65535] { R4630 += 1, R4566 += 1, R23 += 1 };
  s0 -> s0 [0, 65535] { R4629 += 1, R4630 += 1 };
  s1 -> s1 [0, 65535] { R4630 += 1, R4565 += 1, R4566 += 1 };
  s1 -> s2 [0, 65535] { R4630 += 1, R4566 += 1, R23 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R4630 += 1 };
  s2 -> s2 [0, 65535] { R4630 += 1, R4566 += 1, R23 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4630 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R4632 += 1, R4568 += 1 };
  s0 -> s2 [0, 65535] { R4632 += 1, R4567 += 1, R4568 += 1 };
  s0 -> s0 [0, 65535] { R4631 += 1, R4632 += 1 };
  s0 -> s3 [70, 70] { R4632 += 1, R4568 += 1 };
  s0 -> s4 [70, 70] { R4632 += 1, R4568 += 1 };
  s0 -> s5 [75, 75] { R4632 += 1, R4568 += 1 };
  s0 -> s1 [76, 65535] { R4632 += 1, R4568 += 1 };
  s1 -> s1 [0, 69] { R4632 += 1, R4568 += 1 };
  s1 -> s3 [70, 70] { R4632 += 1, R4568 += 1 };
  s1 -> s4 [70, 70] { R4632 += 1, R4568 += 1 };
  s1 -> s5 [75, 75] { R4632 += 1, R4568 += 1 };
  s1 -> s1 [76, 65535] { R4632 += 1, R4568 += 1 };
  s2 -> s1 [0, 69] { R4632 += 1, R4568 += 1 };
  s2 -> s2 [0, 65535] { R4632 += 1, R4567 += 1, R4568 += 1 };
  s2 -> s3 [70, 70] { R4632 += 1, R4568 += 1 };
  s2 -> s4 [70, 70] { R4632 += 1, R4568 += 1 };
  s2 -> s5 [75, 75] { R4632 += 1, R4568 += 1 };
  s2 -> s1 [76, 65535] { R4632 += 1, R4568 += 1 };
  s3 -> s3 [0, 70] { R4632 += 1, R4568 += 1 };
  s3 -> s8 [75, 75] { R4632 += 1, R4568 += 1 };
  s3 -> s3 [76, 65535] { R4632 += 1, R4568 += 1 };
  s5 -> s5 [0, 69] { R4632 += 1, R4568 += 1 };
  s5 -> s5 [0, 65535] { R4632 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R4632 += 1, R4568 += 1 };
  s5 -> s8 [70, 70] { R4632 += 1, R4568 += 1 };
  s5 -> s5 [75, 65535] { R4632 += 1, R4568 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4632 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 70] { R4632 += 1, R4568 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R4632 += 1 };
  s8 -> s8 [75, 65535] { R4632 += 1, R4568 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R4634 += 1, R4570 += 1, R137 += 1 };
  s0 -> s0 [0, 65535] { R4633 += 1, R4634 += 1 };
  s0 -> s2 [0, 65535] { R4634 += 1, R4569 += 1, R4570 += 1 };
  s0 -> s3 [70, 70] { R4634 += 1, R4570 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R4634 += 1, R4570 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R4634 += 1, R4570 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R4634 += 1, R4570 += 1, R137 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4634 += 1 };
  s1 -> s3 [70, 70] { R4634 += 1, R4570 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R4634 += 1, R4570 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R4634 += 1, R4570 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R4634 += 1, R4570 += 1, R137 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4634 += 1, R4569 += 1, R4570 += 1 };
  s2 -> s3 [70, 70] { R4634 += 1, R4570 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R4634 += 1, R4570 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R4634 += 1, R4570 += 1, R137 += 1 };
  s3 -> s6 [0, 65535] { R4634 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4634 += 1, R4570 += 1, R137 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4634 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4634 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R4636 += 1, R4572 += 1, R139 += 1 };
  s0 -> s2 [0, 65535] { R4636 += 1, R4571 += 1, R4572 += 1 };
  s0 -> s0 [0, 65535] { R4635 += 1, R4636 += 1 };
  s0 -> s3 [70, 70] { R4636 += 1, R4572 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R4636 += 1, R4572 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R4636 += 1, R4572 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R4636 += 1, R4572 += 1, R139 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4636 += 1 };
  s1 -> s3 [70, 70] { R4636 += 1, R4572 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R4636 += 1, R4572 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R4636 += 1, R4572 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R4636 += 1, R4572 += 1, R139 += 1 };
  s2 -> s2 [0, 65535] { R4636 += 1, R4571 += 1, R4572 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R4636 += 1, R4572 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R4636 += 1, R4572 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R4636 += 1, R4572 += 1, R139 += 1 };
  s3 -> s3 [0, 65535] { R4636 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4636 += 1, R4572 += 1, R139 += 1 };
  s4 -> s6 [0, 65535] { R4636 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4636 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R4638 += 1, R4574 += 1, R141 += 1, R142 += 1 };
  s0 -> s0 [0, 65535] { R4637 += 1, R4638 += 1 };
  s0 -> s2 [0, 65535] { R4638 += 1, R4573 += 1, R4574 += 1 };
  s0 -> s3 [70, 70] { R4638 += 1, R4574 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R4638 += 1, R4574 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R4638 += 1, R4574 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R4638 += 1, R4574 += 1, R141 += 1, R142 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4638 += 1 };
  s1 -> s3 [70, 70] { R4638 += 1, R4574 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R4638 += 1, R4574 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R4638 += 1, R4574 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R4638 += 1, R4574 += 1, R141 += 1, R142 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4638 += 1, R4573 += 1, R4574 += 1 };
  s2 -> s3 [70, 70] { R4638 += 1, R4574 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R4638 += 1, R4574 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R4638 += 1, R4574 += 1, R141 += 1, R142 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4638 += 1, R4574 += 1, R141 += 1, R142 += 1 };
  s3 -> s6 [0, 65535] { R4638 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4638 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4638 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R4640 += 1, R4576 += 1, R147 += 1, R148 += 1 };
  s0 -> s0 [0, 65535] { R4639 += 1, R4640 += 1 };
  s0 -> s2 [0, 65535] { R4640 += 1, R4575 += 1, R4576 += 1 };
  s0 -> s3 [70, 70] { R4640 += 1, R4576 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R4640 += 1, R4576 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R4640 += 1, R4576 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R4640 += 1, R4576 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 65535] { R4640 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R4640 += 1, R4576 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R4640 += 1, R4576 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R4640 += 1, R4576 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R4640 += 1, R4576 += 1, R147 += 1, R148 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4640 += 1, R4575 += 1, R4576 += 1 };
  s2 -> s3 [70, 70] { R4640 += 1, R4576 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R4640 += 1, R4576 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R4640 += 1, R4576 += 1, R147 += 1, R148 += 1 };
  s3 -> s6 [0, 65535] { R4640 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4640 += 1, R4576 += 1, R147 += 1, R148 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4640 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4640 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R4642 += 1, R4578 += 1, R151 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R4642 += 1, R4578 += 1, R152 += 1 };
  s0 -> s3 [0, 65535] { R4642 += 1, R4577 += 1, R4578 += 1 };
  s0 -> s0 [0, 65535] { R4641 += 1, R4642 += 1 };
  s0 -> s4 [70, 70] { R4642 += 1, R4578 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R4642 += 1, R4578 += 1, R151 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R4642 += 1, R4578 += 1, R151 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R4642 += 1, R4578 += 1, R152 += 1 };
  s0 -> s2 [71, 74] { R4642 += 1, R4578 += 1, R152 += 1 };
  s0 -> s1 [71, 65535] { R4642 += 1, R4578 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R4642 += 1, R4578 += 1, R152 += 1 };
  s0 -> s2 [76, 65535] { R4642 += 1, R4578 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R4642 += 1, R4578 += 1, R151 += 1, R152 += 1 };
  s1 -> s2 [0, 69] { R4642 += 1, R4578 += 1, R152 += 1 };
  s1 -> s4 [70, 70] { R4642 += 1, R4578 += 1, R152 += 1 };
  s1 -> s5 [70, 70] { R4642 += 1, R4578 += 1, R151 += 1, R152 += 1 };
  s1 -> s6 [70, 70] { R4642 += 1, R4578 += 1, R151 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R4642 += 1, R4578 += 1, R152 += 1 };
  s1 -> s2 [71, 74] { R4642 += 1, R4578 += 1, R152 += 1 };
  s1 -> s1 [71, 65535] { R4642 += 1, R4578 += 1, R151 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R4642 += 1, R4578 += 1, R152 += 1 };
  s1 -> s2 [76, 65535] { R4642 += 1, R4578 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R4642 += 1, R4578 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R4642 += 1, R4578 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R4642 += 1, R4578 += 1, R152 += 1 };
  s2 -> s2 [71, 74] { R4642 += 1, R4578 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R4642 += 1, R4578 += 1, R152 += 1 };
  s2 -> s2 [76, 65535] { R4642 += 1, R4578 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R4642 += 1, R4578 += 1, R151 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R4642 += 1, R4578 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R4642 += 1, R4577 += 1, R4578 += 1 };
  s3 -> s4 [70, 70] { R4642 += 1, R4578 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R4642 += 1, R4578 += 1, R151 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R4642 += 1, R4578 += 1, R151 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R4642 += 1, R4578 += 1, R152 += 1 };
  s3 -> s2 [71, 74] { R4642 += 1, R4578 += 1, R152 += 1 };
  s3 -> s1 [71, 65535] { R4642 += 1, R4578 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R4642 += 1, R4578 += 1, R152 += 1 };
  s3 -> s2 [76, 65535] { R4642 += 1, R4578 += 1, R152 += 1 };
  s6 -> s7 [0, 74] { R4642 += 1, R4578 += 1, R152 += 1 };
  s6 -> s6 [0, 65535] { R4642 += 1, R4578 += 1, R151 += 1, R152 += 1 };
  s6 -> s11 [75, 75] { R4642 += 1, R4578 += 1, R152 += 1 };
  s6 -> s7 [76, 65535] { R4642 += 1, R4578 += 1, R152 += 1 };
  s7 -> s7 [0, 74] { R4642 += 1, R4578 += 1, R152 += 1 };
  s7 -> s11 [75, 75] { R4642 += 1, R4578 += 1, R152 += 1 };
  s7 -> s7 [76, 65535] { R4642 += 1, R4578 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R4642 += 1, R4578 += 1, R152 += 1 };
  s8 -> s8 [0, 65535] { R4642 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R4642 += 1, R4578 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R4642 += 1, R4578 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R4642 += 1, R4578 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R4642 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R4642 += 1 };
  s11 -> s11 [0, 65535] { R4642 += 1, R4578 += 1, R152 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R4642 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R4644 += 1, R4580 += 1, R155 += 1, R156 += 1 };
  s0 -> s0 [0, 65535] { R4643 += 1, R4644 += 1 };
  s0 -> s2 [0, 65535] { R4644 += 1, R4579 += 1, R4580 += 1 };
  s0 -> s3 [70, 70] { R4644 += 1, R4580 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R4644 += 1, R4580 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R4644 += 1, R4580 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R4644 += 1, R4580 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 65535] { R4644 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R4644 += 1, R4580 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R4644 += 1, R4580 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R4644 += 1, R4580 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R4644 += 1, R4580 += 1, R155 += 1, R156 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4644 += 1, R4579 += 1, R4580 += 1 };
  s2 -> s3 [70, 70] { R4644 += 1, R4580 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R4644 += 1, R4580 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R4644 += 1, R4580 += 1, R155 += 1, R156 += 1 };
  s3 -> s6 [0, 65535] { R4644 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4644 += 1, R4580 += 1, R155 += 1, R156 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4644 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4644 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R4646 += 1, R4582 += 1, R161 += 1, R162 += 1 };
  s0 -> s2 [0, 65535] { R4646 += 1, R4581 += 1, R4582 += 1 };
  s0 -> s0 [0, 65535] { R4645 += 1, R4646 += 1 };
  s0 -> s3 [70, 70] { R4646 += 1, R4582 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R4646 += 1, R4582 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R4646 += 1, R4582 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R4646 += 1, R4582 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535] { R4646 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R4646 += 1, R4582 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R4646 += 1, R4582 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R4646 += 1, R4582 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R4646 += 1, R4582 += 1, R161 += 1, R162 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4646 += 1, R4581 += 1, R4582 += 1 };
  s2 -> s3 [70, 70] { R4646 += 1, R4582 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R4646 += 1, R4582 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R4646 += 1, R4582 += 1, R161 += 1, R162 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4646 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4646 += 1 };
  s4 -> s4 [0, 65535] { R4646 += 1, R4582 += 1, R161 += 1, R162 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4646 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R4648 += 1, R4584 += 1, R167 += 1, R168 += 1 };
  s0 -> s2 [0, 65535] { R4648 += 1, R4583 += 1, R4584 += 1 };
  s0 -> s0 [0, 65535] { R4647 += 1, R4648 += 1 };
  s0 -> s3 [70, 70] { R4648 += 1, R4584 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R4648 += 1, R4584 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R4648 += 1, R4584 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R4648 += 1, R4584 += 1, R167 += 1, R168 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R4648 += 1 };
  s1 -> s3 [70, 70] { R4648 += 1, R4584 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R4648 += 1, R4584 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R4648 += 1, R4584 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R4648 += 1, R4584 += 1, R167 += 1, R168 += 1 };
  s2 -> s2 [0, 65535] { R4648 += 1, R4583 += 1, R4584 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R4648 += 1, R4584 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R4648 += 1, R4584 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R4648 += 1, R4584 += 1, R167 += 1, R168 += 1 };
  s3 -> s3 [0, 65535] { R4648 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4648 += 1, R4584 += 1, R167 += 1, R168 += 1 };
  s4 -> s5 [0, 65535] { R4648 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4648 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R4650 += 1, R4586 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s2 [0, 69] { R4650 += 1, R4586 += 1, R175 += 1, R176 += 1 };
  s0 -> s3 [0, 69] { R4650 += 1, R4586 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s4 [0, 65535] { R4650 += 1, R4585 += 1, R4586 += 1 };
  s0 -> s0 [0, 65535] { R4649 += 1, R4650 += 1 };
  s0 -> s5 [70, 70] { R4650 += 1, R4586 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s6 [70, 70] { R4650 += 1, R4586 += 1, R175 += 1, R176 += 1 };
  s0 -> s7 [70, 70] { R4650 += 1, R4586 += 1, R175 += 1, R176 += 1 };
  s0 -> s8 [70, 70] { R4650 += 1, R4586 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s9 [70, 70] { R4650 += 1, R4586 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s10 [70, 70] { R4650 += 1, R4586 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s1 [71, 65535] { R4650 += 1, R4586 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s2 [71, 65535] { R4650 += 1, R4586 += 1, R175 += 1, R176 += 1 };
  s0 -> s3 [71, 65535] { R4650 += 1, R4586 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s1 [0, 69] { R4650 += 1, R4586 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s3 [0, 69] { R4650 += 1, R4586 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s5 [70, 70] { R4650 += 1, R4586 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s8 [70, 70] { R4650 += 1, R4586 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s9 [70, 70] { R4650 += 1, R4586 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s10 [70, 70] { R4650 += 1, R4586 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s1 [71, 65535] { R4650 += 1, R4586 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s3 [71, 65535] { R4650 += 1, R4586 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s1 [0, 69] { R4650 += 1, R4586 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s2 [0, 69] { R4650 += 1, R4586 += 1, R175 += 1, R176 += 1 };
  s2 -> s3 [0, 69] { R4650 += 1, R4586 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s5 [70, 70] { R4650 += 1, R4586 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s6 [70, 70] { R4650 += 1, R4586 += 1, R175 += 1, R176 += 1 };
  s2 -> s7 [70, 70] { R4650 += 1, R4586 += 1, R175 += 1, R176 += 1 };
  s2 -> s8 [70, 70] { R4650 += 1, R4586 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s9 [70, 70] { R4650 += 1, R4586 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s10 [70, 70] { R4650 += 1, R4586 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s1 [71, 65535] { R4650 += 1, R4586 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s2 [71, 65535] { R4650 += 1, R4586 += 1, R175 += 1, R176 += 1 };
  s2 -> s3 [71, 65535] { R4650 += 1, R4586 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s14 [0, 69] { R4650 += 1, R4586 += 1, R176 += 1 };
  s3 -> s3 [0, 69] { R4650 += 1, R4586 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s5 [70, 70] { R4650 += 1, R4586 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s15 [70, 70] { R4650 += 1, R4586 += 1, R176 += 1 };
  s3 -> s11 [70, 70] { R4650 += 1, R4586 += 1, R176 += 1 };
  s3 -> s9 [70, 70] { R4650 += 1, R4586 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s14 [71, 65535] { R4650 += 1, R4586 += 1, R176 += 1 };
  s3 -> s3 [71, 65535] { R4650 += 1, R4586 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s1 [0, 69] { R4650 += 1, R4586 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s2 [0, 69] { R4650 += 1, R4586 += 1, R175 += 1, R176 += 1 };
  s4 -> s3 [0, 69] { R4650 += 1, R4586 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s4 [0, 65535] { R4650 += 1, R4585 += 1, R4586 += 1 };
  s4 -> s5 [70, 70] { R4650 += 1, R4586 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s6 [70, 70] { R4650 += 1, R4586 += 1, R175 += 1, R176 += 1 };
  s4 -> s7 [70, 70] { R4650 += 1, R4586 += 1, R175 += 1, R176 += 1 };
  s4 -> s8 [70, 70] { R4650 += 1, R4586 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s9 [70, 70] { R4650 += 1, R4586 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s10 [70, 70] { R4650 += 1, R4586 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s1 [71, 65535] { R4650 += 1, R4586 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s2 [71, 65535] { R4650 += 1, R4586 += 1, R175 += 1, R176 += 1 };
  s4 -> s3 [71, 65535] { R4650 += 1, R4586 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s6 -> s6 [0, 65535] { R4650 += 1, R4586 += 1, R175 += 1, R176 += 1 };
  s6 -> s9 [0, 65535] { R4650 += 1, R4586 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s6 -> s10 [0, 65535] { R4650 += 1, R4586 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s9 -> s11 [0, 65535] { R4650 += 1, R4586 += 1, R176 += 1 };
  s9 -> s9 [0, 65535] { R4650 += 1, R4586 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s10 -> s9 [0, 65535] { R4650 += 1, R4586 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s10 -> s10 [0, 65535] { R4650 += 1, R4586 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s11 -> s11 [0, 65535] { R4650 += 1, R4586 += 1, R176 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [0, 65535] { R4650 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R4650 += 1 };
  s14 -> s14 [0, 69] { R4650 += 1, R4586 += 1, R176 += 1 };
  s14 -> s14 [0, 65535] { R4650 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s15 [70, 70] { R4650 += 1, R4586 += 1, R176 += 1 };
  s14 -> s11 [70, 70] { R4650 += 1, R4586 += 1, R176 += 1 };
  s14 -> s14 [71, 65535] { R4650 += 1, R4586 += 1, R176 += 1 };
  s15 -> s15 [0, 65535] { R4650 += 1 };
  s15 -> s12 [0, 65535];
  accepting s12, s13, s14, s15, s11;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R4652 += 1, R4588 += 1, R185 += 1, R186 += 1 };
  s0 -> s2 [0, 65535] { R4652 += 1, R4587 += 1, R4588 += 1 };
  s0 -> s0 [0, 65535] { R4651 += 1, R4652 += 1 };
  s0 -> s3 [70, 70] { R4652 += 1, R4588 += 1, R185 += 1, R186 += 1 };
  s0 -> s4 [70, 70] { R4652 += 1, R4588 += 1, R185 += 1, R186 += 1 };
  s0 -> s1 [71, 65535] { R4652 += 1, R4588 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 69] { R4652 += 1, R4588 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 65535] { R4652 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R4652 += 1, R4588 += 1, R185 += 1, R186 += 1 };
  s1 -> s4 [70, 70] { R4652 += 1, R4588 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [71, 65535] { R4652 += 1, R4588 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [0, 69] { R4652 += 1, R4588 += 1, R185 += 1, R186 += 1 };
  s2 -> s2 [0, 65535] { R4652 += 1, R4587 += 1, R4588 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R4652 += 1, R4588 += 1, R185 += 1, R186 += 1 };
  s2 -> s4 [70, 70] { R4652 += 1, R4588 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [71, 65535] { R4652 += 1, R4588 += 1, R185 += 1, R186 += 1 };
  s3 -> s3 [0, 65535] { R4652 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R4652 += 1 };
  s4 -> s4 [0, 65535] { R4652 += 1, R4588 += 1, R185 += 1, R186 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4652 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R4654 += 1, R4590 += 1, R4015 += 1, R4016 += 1 };
  s0 -> s2 [0, 69] { R4654 += 1, R4590 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s0 -> s3 [0, 69] { R4654 += 1, R4590 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s0 -> s4 [0, 65535] { R4654 += 1, R4589 += 1, R4590 += 1 };
  s0 -> s0 [0, 65535] { R4653 += 1, R4654 += 1 };
  s0 -> s5 [70, 70] { R4654 += 1, R4590 += 1, R4015 += 1, R4016 += 1 };
  s0 -> s6 [70, 70] { R4654 += 1, R4590 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s0 -> s7 [70, 70] { R4654 += 1, R4590 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s0 -> s8 [70, 70] { R4654 += 1, R4590 += 1, R4015 += 1, R4016 += 1 };
  s0 -> s9 [70, 70] { R4654 += 1, R4590 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s0 -> s10 [70, 70] { R4654 += 1, R4590 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s0 -> s1 [71, 65535] { R4654 += 1, R4590 += 1, R4015 += 1, R4016 += 1 };
  s0 -> s2 [71, 65535] { R4654 += 1, R4590 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s0 -> s3 [71, 65535] { R4654 += 1, R4590 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s1 -> s1 [0, 69] { R4654 += 1, R4590 += 1, R4015 += 1, R4016 += 1 };
  s1 -> s2 [0, 69] { R4654 += 1, R4590 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s1 -> s3 [0, 69] { R4654 += 1, R4590 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s1 -> s5 [70, 70] { R4654 += 1, R4590 += 1, R4015 += 1, R4016 += 1 };
  s1 -> s6 [70, 70] { R4654 += 1, R4590 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s1 -> s7 [70, 70] { R4654 += 1, R4590 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s1 -> s8 [70, 70] { R4654 += 1, R4590 += 1, R4015 += 1, R4016 += 1 };
  s1 -> s9 [70, 70] { R4654 += 1, R4590 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s1 -> s10 [70, 70] { R4654 += 1, R4590 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s1 -> s1 [71, 65535] { R4654 += 1, R4590 += 1, R4015 += 1, R4016 += 1 };
  s1 -> s2 [71, 65535] { R4654 += 1, R4590 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s1 -> s3 [71, 65535] { R4654 += 1, R4590 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s2 -> s2 [0, 69] { R4654 += 1, R4590 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s2 -> s3 [0, 69] { R4654 += 1, R4590 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s2 -> s6 [70, 70] { R4654 += 1, R4590 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s2 -> s7 [70, 70] { R4654 += 1, R4590 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s2 -> s9 [70, 70] { R4654 += 1, R4590 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s2 -> s10 [70, 70] { R4654 += 1, R4590 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s2 -> s2 [71, 65535] { R4654 += 1, R4590 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s2 -> s3 [71, 65535] { R4654 += 1, R4590 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s3 -> s3 [0, 69] { R4654 += 1, R4590 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s3 -> s11 [0, 65535];
  s3 -> s3 [0, 65535] { R4654 += 1 };
  s3 -> s6 [70, 70] { R4654 += 1, R4590 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s3 -> s7 [70, 70] { R4654 += 1, R4590 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s3 -> s3 [71, 65535] { R4654 += 1, R4590 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s4 -> s1 [0, 69] { R4654 += 1, R4590 += 1, R4015 += 1, R4016 += 1 };
  s4 -> s2 [0, 69] { R4654 += 1, R4590 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s4 -> s3 [0, 69] { R4654 += 1, R4590 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s4 -> s4 [0, 65535] { R4654 += 1, R4589 += 1, R4590 += 1 };
  s4 -> s5 [70, 70] { R4654 += 1, R4590 += 1, R4015 += 1, R4016 += 1 };
  s4 -> s6 [70, 70] { R4654 += 1, R4590 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s4 -> s7 [70, 70] { R4654 += 1, R4590 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s4 -> s8 [70, 70] { R4654 += 1, R4590 += 1, R4015 += 1, R4016 += 1 };
  s4 -> s9 [70, 70] { R4654 += 1, R4590 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s4 -> s10 [70, 70] { R4654 += 1, R4590 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s4 -> s1 [71, 65535] { R4654 += 1, R4590 += 1, R4015 += 1, R4016 += 1 };
  s4 -> s2 [71, 65535] { R4654 += 1, R4590 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s4 -> s3 [71, 65535] { R4654 += 1, R4590 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s6 -> s12 [0, 65535] { R4654 += 1 };
  s6 -> s11 [0, 65535];
  s6 -> s6 [0, 65535] { R4654 += 1, R4590 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s7 -> s11 [0, 65535];
  s7 -> s7 [0, 65535] { R4654 += 1 };
  s8 -> s6 [0, 65535] { R4654 += 1, R4590 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s8 -> s8 [0, 65535] { R4654 += 1, R4590 += 1, R4015 += 1, R4016 += 1 };
  s8 -> s10 [0, 65535] { R4654 += 1, R4590 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s10 -> s6 [0, 65535] { R4654 += 1, R4590 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s10 -> s10 [0, 65535] { R4654 += 1, R4590 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R4654 += 1 };
  s12 -> s11 [0, 65535];
  accepting s3, s12, s6, s7, s11;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R4656 += 1, R4592 += 1, R4499 += 1, R4500 += 1 };
  s0 -> s2 [0, 69] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s0 -> s3 [0, 69] { R4656 += 1, R4592 += 1, R4500 += 1, R4501 += 1, R4502 += 1 };
  s0 -> s0 [0, 65535] { R4655 += 1, R4656 += 1 };
  s0 -> s4 [0, 65535] { R4656 += 1, R4591 += 1, R4592 += 1 };
  s0 -> s5 [70, 70] { R4656 += 1, R4592 += 1, R4500 += 1, R4501 += 1, R4502 += 1 };
  s0 -> s6 [70, 70] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s0 -> s7 [70, 70] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s0 -> s8 [70, 70] { R4656 += 1, R4592 += 1, R4499 += 1, R4500 += 1 };
  s0 -> s9 [70, 70] { R4656 += 1, R4592 += 1, R4499 += 1, R4500 += 1 };
  s0 -> s10 [70, 70] { R4656 += 1, R4592 += 1, R4500 += 1, R4501 += 1, R4502 += 1 };
  s0 -> s2 [71, 74] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s0 -> s1 [71, 65535] { R4656 += 1, R4592 += 1, R4499 += 1, R4500 += 1 };
  s0 -> s3 [71, 65535] { R4656 += 1, R4592 += 1, R4500 += 1, R4501 += 1, R4502 += 1 };
  s0 -> s11 [88, 88] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s0 -> s2 [89, 65535] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s1 -> s1 [0, 69] { R4656 += 1, R4592 += 1, R4499 += 1, R4500 += 1 };
  s1 -> s2 [0, 69] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s1 -> s3 [0, 69] { R4656 += 1, R4592 += 1, R4500 += 1, R4501 += 1, R4502 += 1 };
  s1 -> s5 [70, 70] { R4656 += 1, R4592 += 1, R4500 += 1, R4501 += 1, R4502 += 1 };
  s1 -> s6 [70, 70] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s1 -> s7 [70, 70] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s1 -> s8 [70, 70] { R4656 += 1, R4592 += 1, R4499 += 1, R4500 += 1 };
  s1 -> s9 [70, 70] { R4656 += 1, R4592 += 1, R4499 += 1, R4500 += 1 };
  s1 -> s10 [70, 70] { R4656 += 1, R4592 += 1, R4500 += 1, R4501 += 1, R4502 += 1 };
  s1 -> s2 [71, 74] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s1 -> s1 [71, 65535] { R4656 += 1, R4592 += 1, R4499 += 1, R4500 += 1 };
  s1 -> s3 [71, 65535] { R4656 += 1, R4592 += 1, R4500 += 1, R4501 += 1, R4502 += 1 };
  s1 -> s11 [88, 88] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s1 -> s2 [89, 65535] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s2 -> s2 [0, 69] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s2 -> s6 [70, 70] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s2 -> s7 [70, 70] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s2 -> s2 [71, 74] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s2 -> s11 [88, 88] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s2 -> s2 [89, 65535] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s3 -> s2 [0, 69] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s3 -> s3 [0, 69] { R4656 += 1, R4592 += 1, R4500 += 1, R4501 += 1, R4502 += 1 };
  s3 -> s5 [70, 70] { R4656 += 1, R4592 += 1, R4500 += 1, R4501 += 1, R4502 += 1 };
  s3 -> s6 [70, 70] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s3 -> s7 [70, 70] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s3 -> s10 [70, 70] { R4656 += 1, R4592 += 1, R4500 += 1, R4501 += 1, R4502 += 1 };
  s3 -> s2 [71, 74] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s3 -> s3 [71, 65535] { R4656 += 1, R4592 += 1, R4500 += 1, R4501 += 1, R4502 += 1 };
  s3 -> s11 [88, 88] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s3 -> s2 [89, 65535] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s4 -> s1 [0, 69] { R4656 += 1, R4592 += 1, R4499 += 1, R4500 += 1 };
  s4 -> s2 [0, 69] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s4 -> s3 [0, 69] { R4656 += 1, R4592 += 1, R4500 += 1, R4501 += 1, R4502 += 1 };
  s4 -> s4 [0, 65535] { R4656 += 1, R4591 += 1, R4592 += 1 };
  s4 -> s5 [70, 70] { R4656 += 1, R4592 += 1, R4500 += 1, R4501 += 1, R4502 += 1 };
  s4 -> s6 [70, 70] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s4 -> s7 [70, 70] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s4 -> s8 [70, 70] { R4656 += 1, R4592 += 1, R4499 += 1, R4500 += 1 };
  s4 -> s9 [70, 70] { R4656 += 1, R4592 += 1, R4499 += 1, R4500 += 1 };
  s4 -> s10 [70, 70] { R4656 += 1, R4592 += 1, R4500 += 1, R4501 += 1, R4502 += 1 };
  s4 -> s2 [71, 74] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s4 -> s1 [71, 65535] { R4656 += 1, R4592 += 1, R4499 += 1, R4500 += 1 };
  s4 -> s3 [71, 65535] { R4656 += 1, R4592 += 1, R4500 += 1, R4501 += 1, R4502 += 1 };
  s4 -> s11 [88, 88] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s4 -> s2 [89, 65535] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s5 -> s6 [0, 74] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s5 -> s5 [0, 65535] { R4656 += 1, R4592 += 1, R4500 += 1, R4501 += 1, R4502 += 1 };
  s5 -> s12 [88, 88] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s5 -> s6 [89, 65535] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s6 -> s6 [0, 74] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s6 -> s12 [88, 88] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s6 -> s6 [89, 65535] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s8 -> s6 [0, 74] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s8 -> s5 [0, 65535] { R4656 += 1, R4592 += 1, R4500 += 1, R4501 += 1, R4502 += 1 };
  s8 -> s8 [0, 65535] { R4656 += 1, R4592 += 1, R4499 += 1, R4500 += 1 };
  s8 -> s12 [88, 88] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s8 -> s6 [89, 65535] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s11 -> s11 [0, 69] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s11 -> s12 [70, 70] { R4656 += 1, R4592 += 1, R4500 += 1 };
  s11 -> s13 [70, 70] { R4656 += 1, R4592 += 1, R4500 += 1 };
  s11 -> s11 [71, 74] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s11 -> s11 [71, 65535] { R4656 += 1, R4592 += 1, R4500 += 1 };
  s11 -> s14 [75, 75] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s11 -> s11 [88, 65535] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s12 -> s12 [0, 74] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s12 -> s12 [0, 65535] { R4656 += 1, R4592 += 1, R4500 += 1 };
  s12 -> s17 [75, 75] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s12 -> s12 [88, 65535] { R4656 += 1, R4592 += 1, R4500 += 1, R4502 += 1 };
  s14 -> s14 [0, 69] { R4656 += 1, R4592 += 1, R4500 += 1 };
  s14 -> s15 [0, 65535];
  s14 -> s14 [0, 65535] { R4656 += 1 };
  s14 -> s16 [70, 70] { R4656 += 1, R4592 += 1, R4500 += 1 };
  s14 -> s17 [70, 70] { R4656 += 1, R4592 += 1, R4500 += 1 };
  s14 -> s14 [71, 65535] { R4656 += 1, R4592 += 1, R4500 += 1 };
  s15 -> s15 [0, 65535];
  s16 -> s16 [0, 65535] { R4656 += 1 };
  s16 -> s15 [0, 65535];
  s17 -> s18 [0, 65535] { R4656 += 1 };
  s17 -> s15 [0, 65535];
  s17 -> s17 [0, 65535] { R4656 += 1, R4592 += 1, R4500 += 1 };
  s18 -> s18 [0, 65535] { R4656 += 1 };
  s18 -> s15 [0, 65535];
  accepting s17, s16, s14, s18, s15;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
constraint R3 = R4656 && R25 - R4656 = -1 && R26 = R4656 && R27 - R4656 = -1 && R28 = R4656 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R4504 + -1*R4500 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R4504 + -1*R4500 - R130 = 0 && R129 + R4503 + R4499 = 0 && R131 + R4505 + R4501 = 0 && R132 + R4506 + R4502 = 0 && R4567 = 0 && R4568 = 0 && R4577 = 0 && R4578 = 0 && R4585 = 0 && R4586 = 0 && R4589 = 0 && R4590 = 0 && R4591 = 0 && R4592 = 0 && R4593 = 0 && R4594 = R4656 && R4595 = 0 && R4596 = R4656 && R4597 = 0 && R4598 = R4656 && R4599 = 0 && R4600 = R4656 && R4601 = 0 && R4602 = R4656 && R4603 = 0 && R4604 = R4656 && R4605 = 0 && R4606 = R4656 && R4607 = 0 && R4608 = R4656 && R4609 = 0 && R4610 = R4656 && R4611 = 0 && R4612 = R4656 && R4613 = 0 && R4614 = R4656 && R4615 = 0 && R4616 = R4656 && R4617 = 0 && R4618 = R4656 && R4619 = 0 && R4620 = R4656 && R4621 = 0 && R4622 = R4656 && R4623 = 0 && R4624 = R4656 && R4625 = 0 && R4626 = R4656 && R4627 = 0 && R4628 = R4656 && R4629 = 0 && R4630 = R4656 && R4631 = 0 && R4632 = R4656 && R4633 = 0 && R4634 = R4656 && R4635 = 0 && R4636 = R4656 && R4637 = 0 && R4638 = R4656 && R4639 = 0 && R4640 = R4656 && R4641 = 0 && R4642 = R4656 && R4643 = 0 && R4644 = R4656 && R4645 = 0 && R4646 = R4656 && R4647 = 0 && R4648 = R4656 && R4649 = 0 && R4650 = R4656 && R4651 = 0 && R4652 = R4656 && R4653 = 0 && R4654 = R4656 && R4655 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R4504 + -1*R4500 - R130 < 1 && 0 < R4656 && (R2 != 0 || R22 = 0 || (R4507 = 0 && R4508 = 0)) && (R2 != 0 || R22 = 0 || (R4509 = 0 && R4510 = 0)) && (R2 != 0 || R22 = 0 || (R4511 = 0 && R4512 = 0)) && (R2 != 0 || R22 = 0 || (R4513 = 0 && R4514 = 0)) && (R2 != 0 || R22 = 0 || (R4515 = 0 && R4516 = 0)) && (R2 != 0 || R22 = 0 || (R4517 = 0 && R4518 = 0)) && (R2 != 0 || R22 = 0 || (R4519 = 0 && R4520 = 0)) && (R2 != 0 || R22 = 0 || (R4521 = 0 && R4522 = 0)) && (R2 != 0 || R22 = 0 || (R4523 = 0 && R4524 = 0)) && (R2 != 0 || R22 = 0 || (R4525 = 0 && R4526 = 0)) && (R2 != 0 || R22 = 0 || (R4527 = 0 && R4528 = 0)) && (R2 != 0 || R22 = 0 || (R4529 = 0 && R4530 = 0)) && (R2 != 0 || R22 = 0 || (R4531 = 0 && R4532 = 0)) && (R2 != 0 || R22 = 0 || (R4533 = 0 && R4534 = 0)) && (R2 != 0 || R22 = 0 || (R4535 = 0 && R4536 = 0)) && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R4504 + -1*R4500 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R191 + R187 = 0 && R114 + R192 + R188 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R4504 + -1*R4500 - R130 = 0 || R130 + R4504 + R4500 < 1) && (R81 + R158 + R155 = 0 || R130 + R4504 + R4500 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R4504 + -1*R4500 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R4504 + R4500 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R4504 + -1*R4500 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R4504 + R4500 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R4504 + -1*R4500 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R4504 + R4500 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 != 0 || R112 + R190 + R186 + -1*R4504 + -1*R4500 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R4504 + R4500 = 0)) && (R113 + R191 + R187 != 0 || R83 + R160 + R157 + -1*R192 + -1*R188 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R4020 + R4015 != 0 || R120 + R4021 + R4016 + -1*R4504 + -1*R4500 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R4504 + R4500 = 0)) && (R4507 != 0 || R2 = R4508 || R2 < 1) && (R4509 != 0 || R2 = R4510 || R2 < 1) && (R4511 != 0 || R2 = R4512 || R2 < 1) && (R4513 != 0 || R2 = R4514 || R2 < 1) && (R4515 != 0 || R2 = R4516 || R2 < 1) && (R4517 != 0 || R2 = R4518 || R2 < 1) && (R4519 != 0 || R2 = R4520 || R2 < 1) && (R4521 != 0 || R2 = R4522 || R2 < 1) && (R4523 != 0 || R2 = R4524 || R2 < 1) && (R4525 != 0 || R2 = R4526 || R2 < 1) && (R4527 != 0 || R2 = R4528 || R2 < 1) && (R4529 != 0 || R2 = R4530 || R2 < 1) && (R4531 != 0 || R2 = R4532 || R2 < 1) && (R4533 != 0 || R2 = R4534 || R2 < 1) && (R4535 != 0 || R2 = R4536 || R2 < 1) && (R23 = 0 || (R4565 = 0 && R4566 = 0)) && (R23 = 0 || (R4569 = 0 && R4570 = 0)) && (R23 = 0 || (R4571 = 0 && R4572 = 0)) && (R23 = 0 || (R4573 = 0 && R4574 = 0)) && (R23 = 0 || (R4575 = 0 && R4576 = 0)) && (R23 = 0 || (R4579 = 0 && R4580 = 0)) && (R23 = 0 || (R4581 = 0 && R4582 = 0)) && (R23 = 0 || (R4583 = 0 && R4584 = 0)) && (R23 = 0 || (R4587 = 0 && R4588 = 0)) && (R24 = 0 || (R4537 = 0 && R4538 = 0)) && (R24 = 0 || (R4539 = 0 && R4540 = 0)) && (R24 = 0 || (R4541 = 0 && R4542 = 0)) && (R24 = 0 || (R4543 = 0 && R4544 = 0)) && (R24 = 0 || (R4545 = 0 && R4546 = 0)) && (R24 = 0 || (R4547 = 0 && R4548 = 0)) && (R24 = 0 || (R4549 = 0 && R4550 = 0)) && (R24 = 0 || (R4551 = 0 && R4552 = 0)) && (R24 = 0 || (R4553 = 0 && R4554 = 0)) && (R24 = 0 || (R4555 = 0 && R4556 = 0)) && (R24 = 0 || (R4557 = 0 && R4558 = 0)) && (R24 = 0 || (R4559 = 0 && R4560 = 0)) && (R24 = 0 || (R4561 = 0 && R4562 = 0)) && (R24 = 0 || (R4563 = 0 && R4564 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R4504 + R4500 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R4504 + R4500 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R4504 + R4500 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 = 0 || (R83 + R160 + R157 = 0 && R130 + R4504 + R4500 = 0)) && (R113 + R191 + R187 = 0 || R83 + R160 + R157 < 1) && (R119 + R4020 + R4015 = 0 || (R83 + R160 + R157 = 0 && R130 + R4504 + R4500 = 0)) && (R123 + R4024 + R4019 = 0 || (R121 + R4022 + R4017 = 0 && R122 + R4023 + R4018 = 0)) && (R4507 = 0 || R2 < 1) && (R4509 = 0 || R2 < 1) && (R4511 = 0 || R2 < 1) && (R4513 = 0 || R2 < 1) && (R4515 = 0 || R2 < 1) && (R4517 = 0 || R2 < 1) && (R4519 = 0 || R2 < 1) && (R4521 = 0 || R2 < 1) && (R4523 = 0 || R2 < 1) && (R4525 = 0 || R2 < 1) && (R4527 = 0 || R2 < 1) && (R4529 = 0 || R2 < 1) && (R4531 = 0 || R2 < 1) && (R4533 = 0 || R2 < 1) && (R4535 = 0 || R2 < 1);
// End of Parikh automata intersection problem
