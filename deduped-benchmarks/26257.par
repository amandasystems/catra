// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R193, R194, R195, R196, R197, R198, R199, R2, R200, R201, R202, R203, R204, R205, R206, R207, R208, R209, R210, R211, R212, R213, R214, R215, R216, R217, R218, R219, R22, R220, R221, R222, R223, R224, R225, R226, R227, R228, R229, R23, R230, R231, R232, R233, R234, R235, R236, R237, R238, R239, R24, R240, R241, R242, R243, R244, R245, R246, R247, R248, R249, R25, R250, R251, R252, R253, R254, R255, R256, R257, R258, R259, R26, R260, R261, R262, R263, R264, R265, R266, R267, R268, R269, R27, R270, R271, R272, R273, R274, R275, R276, R277, R278, R279, R28, R280, R281, R282, R283, R284, R285, R286, R287, R288, R289, R29, R290, R291, R292, R293, R294, R295, R296, R297, R298, R299, R3, R30, R300, R301, R302, R303, R304, R305, R306, R307, R308, R309, R31, R310, R311, R312, R313, R314, R315, R316, R317, R318, R319, R32, R320, R321, R322, R323, R324, R325, R326, R327, R328, R329, R330, R331, R332, R333, R334, R335, R336, R337, R338, R339, R340, R341, R342, R343, R344, R345, R346, R347, R348, R349, R350, R351, R352, R353, R354, R355, R356, R357, R358, R359, R360, R4, R5, R63, R65, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R26 += 1 };
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R241 += 1, R242 += 1 };
  s0 -> s1 [0, 65535] { R242 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R242 += 1, R24 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R244 += 1 };
  s0 -> s0 [0, 65535] { R243 += 1, R244 += 1 };
  s0 -> s2 [70, 70] { R244 += 1 };
  s0 -> s3 [70, 70] { R244 += 1 };
  s0 -> s1 [76, 65535] { R244 += 1 };
  s1 -> s1 [0, 69] { R244 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R244 += 1 };
  s1 -> s3 [70, 70] { R244 += 1 };
  s1 -> s1 [76, 65535] { R244 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R244 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R244 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R246 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R245 += 1, R246 += 1 };
  s0 -> s2 [70, 70] { R246 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R246 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R246 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R246 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R246 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R246 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R246 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R246 += 1, R63 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R248 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R247 += 1, R248 += 1 };
  s0 -> s2 [70, 70] { R248 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R248 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R248 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R248 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R248 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R248 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R248 += 1, R65 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R248 += 1, R65 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R250 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R249 += 1, R250 += 1 };
  s0 -> s2 [70, 70] { R250 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R250 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R250 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R250 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R250 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R250 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R250 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R250 += 1, R67 += 1, R68 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R252 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R251 += 1, R252 += 1 };
  s0 -> s2 [70, 70] { R252 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R252 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R252 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R252 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R252 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R252 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R252 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R252 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R254 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R253 += 1, R254 += 1 };
  s0 -> s2 [70, 70] { R254 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R254 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R254 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R254 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R254 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R254 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R254 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535] { R254 += 1, R77 += 1, R78 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R256 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R255 += 1, R256 += 1 };
  s0 -> s2 [70, 70] { R256 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R256 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R256 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R256 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R256 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R256 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R256 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R256 += 1, R81 += 1, R82 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R258 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R257 += 1, R258 += 1 };
  s0 -> s2 [70, 70] { R258 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R258 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R258 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R258 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R258 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R258 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R258 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R258 += 1, R87 += 1, R88 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R260 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R259 += 1, R260 += 1 };
  s0 -> s2 [70, 70] { R260 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R260 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R260 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R260 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R260 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R260 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R260 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R260 += 1, R93 += 1, R94 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R262 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R261 += 1, R262 += 1 };
  s0 -> s2 [70, 70] { R262 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R262 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R262 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R262 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R262 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R262 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R262 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R262 += 1, R101 += 1, R102 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R264 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R263 += 1, R264 += 1 };
  s0 -> s2 [70, 70] { R264 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R264 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R264 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R264 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R264 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R264 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R264 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535] { R264 += 1, R111 += 1, R112 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R266 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R265 += 1, R266 += 1 };
  s0 -> s2 [70, 70] { R266 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R266 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R266 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R266 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R266 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R266 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R266 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R266 += 1, R119 += 1, R120 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R268 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R267 += 1, R268 += 1 };
  s0 -> s2 [70, 70] { R268 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R268 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R268 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R268 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R268 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R268 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R268 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R268 += 1, R129 += 1, R130 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R298 += 1 };
  s0 -> s0 [0, 65535] { R297 += 1, R298 += 1 };
  s0 -> s2 [70, 70] { R298 += 1 };
  s0 -> s1 [71, 65535] { R298 += 1 };
  s1 -> s1 [0, 69] { R298 += 1 };
  s1 -> s2 [70, 70] { R298 += 1 };
  s1 -> s1 [71, 65535] { R298 += 1 };
  s2 -> s2 [0, 65535] { R298 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R300 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R299 += 1, R300 += 1 };
  s1 -> s1 [0, 65535] { R300 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R302 += 1 };
  s0 -> s2 [0, 65535] { R302 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R301 += 1, R302 += 1 };
  s0 -> s3 [70, 70] { R302 += 1 };
  s0 -> s1 [71, 65535] { R302 += 1 };
  s1 -> s1 [0, 69] { R302 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R302 += 1 };
  s1 -> s1 [71, 65535] { R302 += 1 };
  s2 -> s1 [0, 69] { R302 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R302 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R302 += 1 };
  s2 -> s1 [71, 65535] { R302 += 1 };
  s3 -> s3 [0, 65535] { R302 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R304 += 1, R212 += 1 };
  s0 -> s0 [0, 65535] { R303 += 1, R304 += 1 };
  s0 -> s2 [0, 65535] { R304 += 1, R211 += 1, R212 += 1 };
  s0 -> s1 [71, 65535] { R304 += 1, R212 += 1 };
  s1 -> s1 [0, 69] { R304 += 1, R212 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R304 += 1 };
  s1 -> s1 [71, 65535] { R304 += 1, R212 += 1 };
  s2 -> s1 [0, 69] { R304 += 1, R212 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R304 += 1, R211 += 1, R212 += 1 };
  s2 -> s1 [71, 65535] { R304 += 1, R212 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R306 += 1, R213 += 1, R214 += 1 };
  s0 -> s2 [0, 65535] { R306 += 1, R214 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R305 += 1, R306 += 1 };
  s1 -> s1 [0, 65535] { R306 += 1, R213 += 1, R214 += 1 };
  s1 -> s2 [0, 65535] { R306 += 1, R214 += 1, R22 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R306 += 1 };
  s2 -> s2 [0, 65535] { R306 += 1, R214 += 1, R22 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R306 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R308 += 1, R216 += 1 };
  s0 -> s0 [0, 65535] { R307 += 1, R308 += 1 };
  s0 -> s2 [0, 65535] { R308 += 1, R215 += 1, R216 += 1 };
  s0 -> s1 [75, 65535] { R308 += 1, R216 += 1 };
  s1 -> s1 [0, 70] { R308 += 1, R216 += 1 };
  s1 -> s1 [0, 65535] { R308 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R308 += 1, R216 += 1 };
  s2 -> s1 [0, 70] { R308 += 1, R216 += 1 };
  s2 -> s2 [0, 65535] { R308 += 1, R215 += 1, R216 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R308 += 1, R216 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s0 [0, 65535] { R309 += 1, R310 += 1 };
  s0 -> s1 [0, 65535] { R310 += 1, R217 += 1, R218 += 1 };
  s0 -> s2 [0, 65535] { R310 += 1, R218 += 1, R138 += 1 };
  s1 -> s1 [0, 65535] { R310 += 1, R217 += 1, R218 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R310 += 1, R218 += 1, R138 += 1 };
  s2 -> s3 [0, 65535] { R310 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R310 += 1, R218 += 1, R138 += 1 };
  s3 -> s3 [0, 65535] { R310 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R312 += 1, R220 += 1 };
  s0 -> s0 [0, 65535] { R311 += 1, R312 += 1 };
  s0 -> s2 [0, 65535] { R312 += 1, R219 += 1, R220 += 1 };
  s0 -> s3 [0, 65535] { R312 += 1, R220 += 1, R140 += 1 };
  s0 -> s1 [76, 65535] { R312 += 1, R220 += 1 };
  s1 -> s1 [0, 74] { R312 += 1, R220 += 1 };
  s1 -> s1 [0, 65535] { R312 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R312 += 1, R220 += 1 };
  s2 -> s1 [0, 74] { R312 += 1, R220 += 1 };
  s2 -> s2 [0, 65535] { R312 += 1, R219 += 1, R220 += 1 };
  s2 -> s3 [0, 65535] { R312 += 1, R220 += 1, R140 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [76, 65535] { R312 += 1, R220 += 1 };
  s3 -> s1 [0, 74] { R312 += 1, R220 += 1 };
  s3 -> s4 [0, 65535] { R312 += 1 };
  s3 -> s3 [0, 65535] { R312 += 1, R220 += 1, R140 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [76, 65535] { R312 += 1, R220 += 1 };
  s4 -> s4 [0, 65535] { R312 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R314 += 1, R222 += 1, R145 += 1, R146 += 1 };
  s0 -> s2 [0, 65535] { R314 += 1, R221 += 1, R222 += 1 };
  s0 -> s3 [0, 65535] { R314 += 1, R222 += 1, R144 += 1, R145 += 1 };
  s0 -> s0 [0, 65535] { R313 += 1, R314 += 1 };
  s1 -> s1 [0, 65535] { R314 += 1, R222 += 1, R145 += 1, R146 += 1 };
  s1 -> s6 [0, 65535] { R314 += 1, R222 += 1 };
  s1 -> s4 [0, 65535] { R314 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R314 += 1, R222 += 1, R145 += 1, R146 += 1 };
  s2 -> s2 [0, 65535] { R314 += 1, R221 += 1, R222 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R314 += 1, R222 += 1, R144 += 1, R145 += 1 };
  s3 -> s1 [0, 65535] { R314 += 1, R222 += 1, R145 += 1, R146 += 1 };
  s3 -> s4 [0, 65535] { R314 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R314 += 1, R222 += 1, R144 += 1, R145 += 1 };
  s4 -> s4 [0, 65535] { R314 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R314 += 1, R222 += 1 };
  s6 -> s4 [0, 65535] { R314 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R316 += 1, R224 += 1, R150 += 1 };
  s0 -> s2 [0, 65535] { R316 += 1, R223 += 1, R224 += 1 };
  s0 -> s0 [0, 65535] { R315 += 1, R316 += 1 };
  s0 -> s3 [0, 65535] { R316 += 1, R224 += 1, R149 += 1, R150 += 1 };
  s0 -> s4 [75, 75] { R316 += 1, R224 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R316 += 1, R224 += 1, R150 += 1 };
  s0 -> s1 [89, 65535] { R316 += 1, R224 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R316 += 1, R224 += 1, R150 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R316 += 1, R224 += 1 };
  s1 -> s7 [0, 65535] { R316 += 1 };
  s1 -> s4 [75, 75] { R316 += 1, R224 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R316 += 1, R224 += 1, R150 += 1 };
  s1 -> s1 [89, 65535] { R316 += 1, R224 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R316 += 1, R224 += 1, R150 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R316 += 1, R223 += 1, R224 += 1 };
  s2 -> s3 [0, 65535] { R316 += 1, R224 += 1, R149 += 1, R150 += 1 };
  s2 -> s4 [75, 75] { R316 += 1, R224 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R316 += 1, R224 += 1, R150 += 1 };
  s2 -> s1 [89, 65535] { R316 += 1, R224 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R316 += 1, R224 += 1, R150 += 1 };
  s3 -> s3 [0, 65535] { R316 += 1, R224 += 1, R149 += 1, R150 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R316 += 1 };
  s3 -> s4 [75, 75] { R316 += 1, R224 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R316 += 1, R224 += 1, R150 += 1 };
  s3 -> s1 [89, 65535] { R316 += 1, R224 += 1, R150 += 1 };
  s4 -> s4 [0, 75] { R316 += 1, R224 += 1, R150 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R316 += 1, R224 += 1 };
  s4 -> s7 [0, 65535] { R316 += 1 };
  s4 -> s4 [89, 65535] { R316 += 1, R224 += 1, R150 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R316 += 1, R224 += 1 };
  s5 -> s7 [0, 65535] { R316 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R316 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R318 += 1, R226 += 1 };
  s0 -> s0 [0, 65535] { R317 += 1, R318 += 1 };
  s0 -> s2 [0, 65535] { R318 += 1, R226 += 1, R154 += 1 };
  s0 -> s3 [0, 65535] { R318 += 1, R225 += 1, R226 += 1 };
  s1 -> s5 [0, 65535] { R318 += 1 };
  s1 -> s1 [0, 65535] { R318 += 1, R226 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R318 += 1 };
  s2 -> s1 [0, 65535] { R318 += 1, R226 += 1 };
  s2 -> s2 [0, 65535] { R318 += 1, R226 += 1, R154 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R318 += 1, R226 += 1 };
  s3 -> s2 [0, 65535] { R318 += 1, R226 += 1, R154 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R318 += 1, R225 += 1, R226 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R318 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s0 [0, 65535] { R319 += 1, R320 += 1 };
  s0 -> s1 [0, 65535] { R320 += 1, R228 += 1, R159 += 1, R160 += 1 };
  s0 -> s2 [0, 65535] { R320 += 1, R227 += 1, R228 += 1 };
  s0 -> s3 [0, 65535] { R320 += 1, R228 += 1, R158 += 1, R159 += 1 };
  s1 -> s6 [0, 65535] { R320 += 1, R228 += 1 };
  s1 -> s1 [0, 65535] { R320 += 1, R228 += 1, R159 += 1, R160 += 1 };
  s1 -> s4 [0, 65535] { R320 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R320 += 1, R228 += 1, R159 += 1, R160 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R320 += 1, R227 += 1, R228 += 1 };
  s2 -> s3 [0, 65535] { R320 += 1, R228 += 1, R158 += 1, R159 += 1 };
  s3 -> s1 [0, 65535] { R320 += 1, R228 += 1, R159 += 1, R160 += 1 };
  s3 -> s4 [0, 65535] { R320 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R320 += 1, R228 += 1, R158 += 1, R159 += 1 };
  s4 -> s4 [0, 65535] { R320 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R320 += 1, R228 += 1 };
  s6 -> s4 [0, 65535] { R320 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R322 += 1, R230 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R322 += 1, R229 += 1, R230 += 1 };
  s0 -> s3 [0, 65535] { R322 += 1, R230 += 1, R164 += 1, R165 += 1 };
  s0 -> s0 [0, 65535] { R321 += 1, R322 += 1 };
  s0 -> s4 [0, 65535] { R322 += 1, R230 += 1, R165 += 1, R166 += 1 };
  s0 -> s1 [76, 65535] { R322 += 1, R230 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R322 += 1, R230 += 1, R165 += 1 };
  s1 -> s5 [0, 65535] { R322 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R322 += 1, R230 += 1 };
  s1 -> s1 [76, 65535] { R322 += 1, R230 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R322 += 1, R230 += 1, R165 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R322 += 1, R229 += 1, R230 += 1 };
  s2 -> s3 [0, 65535] { R322 += 1, R230 += 1, R164 += 1, R165 += 1 };
  s2 -> s4 [0, 65535] { R322 += 1, R230 += 1, R165 += 1, R166 += 1 };
  s2 -> s1 [76, 65535] { R322 += 1, R230 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R322 += 1, R230 += 1, R165 += 1 };
  s3 -> s5 [0, 65535] { R322 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R322 += 1, R230 += 1, R164 += 1, R165 += 1 };
  s3 -> s4 [0, 65535] { R322 += 1, R230 += 1, R165 += 1, R166 += 1 };
  s3 -> s1 [76, 65535] { R322 += 1, R230 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R322 += 1, R230 += 1, R165 += 1 };
  s4 -> s5 [0, 65535] { R322 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R322 += 1, R230 += 1, R165 += 1, R166 += 1 };
  s4 -> s7 [0, 65535] { R322 += 1, R230 += 1 };
  s4 -> s1 [76, 65535] { R322 += 1, R230 += 1, R165 += 1 };
  s5 -> s5 [0, 65535] { R322 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R322 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R322 += 1, R230 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R324 += 1, R232 += 1, R172 += 1, R174 += 1 };
  s0 -> s2 [0, 65535] { R324 += 1, R232 += 1, R171 += 1, R172 += 1 };
  s0 -> s3 [0, 65535] { R324 += 1, R232 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s0 [0, 65535] { R323 += 1, R324 += 1 };
  s0 -> s4 [0, 65535] { R324 += 1, R231 += 1, R232 += 1 };
  s0 -> s1 [76, 65535] { R324 += 1, R232 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R324 += 1, R232 += 1, R172 += 1, R174 += 1 };
  s1 -> s6 [0, 65535] { R324 += 1 };
  s1 -> s7 [0, 65535] { R324 += 1, R232 += 1 };
  s1 -> s1 [0, 65535] { R324 += 1, R232 += 1, R172 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R324 += 1, R232 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R324 += 1, R232 += 1, R172 += 1, R174 += 1 };
  s2 -> s6 [0, 65535] { R324 += 1 };
  s2 -> s2 [0, 65535] { R324 += 1, R232 += 1, R171 += 1, R172 += 1 };
  s2 -> s3 [0, 65535] { R324 += 1, R232 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [76, 65535] { R324 += 1, R232 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R324 += 1, R232 += 1, R172 += 1, R174 += 1 };
  s3 -> s6 [0, 65535] { R324 += 1 };
  s3 -> s7 [0, 65535] { R324 += 1, R232 += 1 };
  s3 -> s3 [0, 65535] { R324 += 1, R232 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [76, 65535] { R324 += 1, R232 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R324 += 1, R232 += 1, R172 += 1, R174 += 1 };
  s4 -> s2 [0, 65535] { R324 += 1, R232 += 1, R171 += 1, R172 += 1 };
  s4 -> s3 [0, 65535] { R324 += 1, R232 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s4 [0, 65535] { R324 += 1, R231 += 1, R232 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s1 [76, 65535] { R324 += 1, R232 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R324 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R324 += 1 };
  s7 -> s7 [0, 65535] { R324 += 1, R232 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R326 += 1, R234 += 1, R181 += 1 };
  s0 -> s2 [0, 65535] { R326 += 1, R233 += 1, R234 += 1 };
  s0 -> s0 [0, 65535] { R325 += 1, R326 += 1 };
  s0 -> s3 [0, 65535] { R326 += 1, R234 += 1 };
  s1 -> s4 [0, 65535] { R326 += 1 };
  s1 -> s1 [0, 65535] { R326 += 1, R234 += 1, R181 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R326 += 1, R234 += 1 };
  s2 -> s1 [0, 65535] { R326 += 1, R234 += 1, R181 += 1 };
  s2 -> s2 [0, 65535] { R326 += 1, R233 += 1, R234 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R326 += 1, R234 += 1 };
  s3 -> s4 [0, 65535] { R326 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R326 += 1, R234 += 1 };
  s4 -> s4 [0, 65535] { R326 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R328 += 1, R236 += 1, R190 += 1, R192 += 1 };
  s0 -> s0 [0, 65535] { R327 += 1, R328 += 1 };
  s0 -> s2 [0, 65535] { R328 += 1, R235 += 1, R236 += 1 };
  s0 -> s3 [0, 65535] { R328 += 1, R236 += 1, R189 += 1, R190 += 1 };
  s0 -> s4 [0, 65535] { R328 += 1, R236 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s0 -> s1 [88, 65535] { R328 += 1, R236 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 75] { R328 += 1, R236 += 1, R190 += 1, R192 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R328 += 1, R236 += 1 };
  s1 -> s7 [0, 65535] { R328 += 1 };
  s1 -> s1 [0, 65535] { R328 += 1, R236 += 1, R190 += 1 };
  s1 -> s1 [88, 65535] { R328 += 1, R236 += 1, R190 += 1, R192 += 1 };
  s2 -> s1 [0, 75] { R328 += 1, R236 += 1, R190 += 1, R192 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R328 += 1, R235 += 1, R236 += 1 };
  s2 -> s3 [0, 65535] { R328 += 1, R236 += 1, R189 += 1, R190 += 1 };
  s2 -> s4 [0, 65535] { R328 += 1, R236 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s2 -> s1 [88, 65535] { R328 += 1, R236 += 1, R190 += 1, R192 += 1 };
  s3 -> s1 [0, 75] { R328 += 1, R236 += 1, R190 += 1, R192 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s7 [0, 65535] { R328 += 1 };
  s3 -> s3 [0, 65535] { R328 += 1, R236 += 1, R189 += 1, R190 += 1 };
  s3 -> s4 [0, 65535] { R328 += 1, R236 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s3 -> s1 [88, 65535] { R328 += 1, R236 += 1, R190 += 1, R192 += 1 };
  s4 -> s1 [0, 75] { R328 += 1, R236 += 1, R190 += 1, R192 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R328 += 1, R236 += 1 };
  s4 -> s7 [0, 65535] { R328 += 1 };
  s4 -> s4 [0, 65535] { R328 += 1, R236 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s4 -> s1 [88, 65535] { R328 += 1, R236 += 1, R190 += 1, R192 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R328 += 1, R236 += 1 };
  s6 -> s7 [0, 65535] { R328 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R328 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s0 [0, 65535] { R329 += 1, R330 += 1 };
  s0 -> s1 [0, 65535] { R330 += 1, R238 += 1, R198 += 1, R199 += 1 };
  s0 -> s2 [0, 65535] { R330 += 1, R238 += 1, R199 += 1, R201 += 1, R202 += 1 };
  s0 -> s3 [0, 65535] { R330 += 1, R237 += 1, R238 += 1 };
  s0 -> s4 [0, 65535] { R330 += 1, R238 += 1, R199 += 1, R200 += 1, R201 += 1 };
  s1 -> s1 [0, 65535] { R330 += 1, R238 += 1, R198 += 1, R199 += 1 };
  s1 -> s2 [0, 65535] { R330 += 1, R238 += 1, R199 += 1, R201 += 1, R202 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R330 += 1 };
  s1 -> s4 [0, 65535] { R330 += 1, R238 += 1, R199 += 1, R200 += 1, R201 += 1 };
  s2 -> s5 [0, 65535] { R330 += 1, R238 += 1 };
  s2 -> s8 [0, 65535] { R330 += 1, R238 += 1, R199 += 1 };
  s2 -> s2 [0, 65535] { R330 += 1, R238 += 1, R199 += 1, R201 += 1, R202 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R330 += 1 };
  s3 -> s1 [0, 65535] { R330 += 1, R238 += 1, R198 += 1, R199 += 1 };
  s3 -> s2 [0, 65535] { R330 += 1, R238 += 1, R199 += 1, R201 += 1, R202 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R330 += 1, R237 += 1, R238 += 1 };
  s3 -> s4 [0, 65535] { R330 += 1, R238 += 1, R199 += 1, R200 += 1, R201 += 1 };
  s4 -> s5 [0, 65535] { R330 += 1, R238 += 1 };
  s4 -> s2 [0, 65535] { R330 += 1, R238 += 1, R199 += 1, R201 += 1, R202 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R330 += 1 };
  s4 -> s4 [0, 65535] { R330 += 1, R238 += 1, R199 += 1, R200 += 1, R201 += 1 };
  s5 -> s5 [0, 65535] { R330 += 1, R238 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R330 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R330 += 1 };
  s8 -> s5 [0, 65535] { R330 += 1, R238 += 1 };
  s8 -> s8 [0, 65535] { R330 += 1, R238 += 1, R199 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R330 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 74] { R332 += 1, R240 += 1, R208 += 1, R210 += 1 };
  s0 -> s1 [0, 65535] { R332 += 1, R240 += 1, R208 += 1 };
  s0 -> s0 [0, 65535] { R331 += 1, R332 += 1 };
  s0 -> s2 [0, 65535] { R332 += 1, R239 += 1, R240 += 1 };
  s0 -> s3 [0, 65535] { R332 += 1, R240 += 1 };
  s0 -> s4 [75, 75] { R332 += 1, R240 += 1, R208 += 1, R210 += 1 };
  s0 -> s5 [75, 75] { R332 += 1, R240 += 1, R208 += 1, R210 += 1 };
  s0 -> s1 [88, 65535] { R332 += 1, R240 += 1, R208 += 1, R210 += 1 };
  s1 -> s1 [0, 74] { R332 += 1, R240 += 1, R208 += 1, R210 += 1 };
  s1 -> s1 [0, 65535] { R332 += 1, R240 += 1, R208 += 1 };
  s1 -> s6 [0, 65535] { R332 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s3 [0, 65535] { R332 += 1, R240 += 1 };
  s1 -> s4 [75, 75] { R332 += 1, R240 += 1, R208 += 1, R210 += 1 };
  s1 -> s5 [75, 75] { R332 += 1, R240 += 1, R208 += 1, R210 += 1 };
  s1 -> s1 [88, 65535] { R332 += 1, R240 += 1, R208 += 1, R210 += 1 };
  s2 -> s1 [0, 74] { R332 += 1, R240 += 1, R208 += 1, R210 += 1 };
  s2 -> s1 [0, 65535] { R332 += 1, R240 += 1, R208 += 1 };
  s2 -> s2 [0, 65535] { R332 += 1, R239 += 1, R240 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s3 [0, 65535] { R332 += 1, R240 += 1 };
  s2 -> s4 [75, 75] { R332 += 1, R240 += 1, R208 += 1, R210 += 1 };
  s2 -> s5 [75, 75] { R332 += 1, R240 += 1, R208 += 1, R210 += 1 };
  s2 -> s1 [88, 65535] { R332 += 1, R240 += 1, R208 += 1, R210 += 1 };
  s3 -> s6 [0, 65535] { R332 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R332 += 1, R240 += 1 };
  s4 -> s6 [0, 65535] { R332 += 1 };
  s4 -> s4 [0, 65535] { R332 += 1, R240 += 1, R208 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s3 [0, 65535] { R332 += 1, R240 += 1 };
  s5 -> s5 [0, 75] { R332 += 1, R240 += 1, R208 += 1, R210 += 1 };
  s5 -> s6 [0, 65535] { R332 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s3 [0, 65535] { R332 += 1, R240 += 1 };
  s5 -> s5 [0, 65535] { R332 += 1, R240 += 1, R208 += 1 };
  s5 -> s5 [88, 65535] { R332 += 1, R240 += 1, R208 += 1, R210 += 1 };
  s6 -> s6 [0, 65535] { R332 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65535] { R334 += 1, R269 += 1, R270 += 1 };
  s0 -> s2 [0, 65535] { R334 += 1, R270 += 1, R23 += 1 };
  s0 -> s0 [0, 65535] { R333 += 1, R334 += 1 };
  s1 -> s1 [0, 65535] { R334 += 1, R269 += 1, R270 += 1 };
  s1 -> s2 [0, 65535] { R334 += 1, R270 += 1, R23 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R334 += 1, R270 += 1, R23 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R334 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R334 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R336 += 1, R272 += 1 };
  s0 -> s2 [0, 65535] { R336 += 1, R271 += 1, R272 += 1 };
  s0 -> s0 [0, 65535] { R335 += 1, R336 += 1 };
  s0 -> s3 [70, 70] { R336 += 1, R272 += 1 };
  s0 -> s4 [70, 70] { R336 += 1, R272 += 1 };
  s0 -> s5 [75, 75] { R336 += 1, R272 += 1 };
  s0 -> s1 [76, 65535] { R336 += 1, R272 += 1 };
  s1 -> s1 [0, 69] { R336 += 1, R272 += 1 };
  s1 -> s3 [70, 70] { R336 += 1, R272 += 1 };
  s1 -> s4 [70, 70] { R336 += 1, R272 += 1 };
  s1 -> s5 [75, 75] { R336 += 1, R272 += 1 };
  s1 -> s1 [76, 65535] { R336 += 1, R272 += 1 };
  s2 -> s1 [0, 69] { R336 += 1, R272 += 1 };
  s2 -> s2 [0, 65535] { R336 += 1, R271 += 1, R272 += 1 };
  s2 -> s3 [70, 70] { R336 += 1, R272 += 1 };
  s2 -> s4 [70, 70] { R336 += 1, R272 += 1 };
  s2 -> s5 [75, 75] { R336 += 1, R272 += 1 };
  s2 -> s1 [76, 65535] { R336 += 1, R272 += 1 };
  s3 -> s3 [0, 70] { R336 += 1, R272 += 1 };
  s3 -> s7 [75, 75] { R336 += 1, R272 += 1 };
  s3 -> s3 [76, 65535] { R336 += 1, R272 += 1 };
  s5 -> s5 [0, 69] { R336 += 1, R272 += 1 };
  s5 -> s5 [0, 65535] { R336 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R336 += 1, R272 += 1 };
  s5 -> s8 [70, 70] { R336 += 1, R272 += 1 };
  s5 -> s5 [75, 65535] { R336 += 1, R272 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R336 += 1, R272 += 1 };
  s7 -> s7 [0, 65535] { R336 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R336 += 1, R272 += 1 };
  s8 -> s8 [0, 65535] { R336 += 1 };
  s8 -> s6 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R338 += 1, R274 += 1, R137 += 1 };
  s0 -> s2 [0, 65535] { R338 += 1, R273 += 1, R274 += 1 };
  s0 -> s0 [0, 65535] { R337 += 1, R338 += 1 };
  s0 -> s3 [70, 70] { R338 += 1, R274 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R338 += 1, R274 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R338 += 1, R274 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R338 += 1, R274 += 1, R137 += 1 };
  s1 -> s1 [0, 65535] { R338 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R338 += 1, R274 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R338 += 1, R274 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R338 += 1, R274 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R338 += 1, R274 += 1, R137 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R338 += 1, R273 += 1, R274 += 1 };
  s2 -> s3 [70, 70] { R338 += 1, R274 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R338 += 1, R274 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R338 += 1, R274 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R338 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R338 += 1 };
  s4 -> s4 [0, 65535] { R338 += 1, R274 += 1, R137 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R338 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R340 += 1, R276 += 1, R139 += 1 };
  s0 -> s2 [0, 65535] { R340 += 1, R275 += 1, R276 += 1 };
  s0 -> s0 [0, 65535] { R339 += 1, R340 += 1 };
  s0 -> s3 [70, 70] { R340 += 1, R276 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R340 += 1, R276 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R340 += 1, R276 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R340 += 1, R276 += 1, R139 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R340 += 1 };
  s1 -> s3 [70, 70] { R340 += 1, R276 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R340 += 1, R276 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R340 += 1, R276 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R340 += 1, R276 += 1, R139 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R340 += 1, R275 += 1, R276 += 1 };
  s2 -> s3 [70, 70] { R340 += 1, R276 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R340 += 1, R276 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R340 += 1, R276 += 1, R139 += 1 };
  s3 -> s3 [0, 65535] { R340 += 1, R276 += 1, R139 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R340 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R340 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R340 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R342 += 1, R278 += 1, R141 += 1, R142 += 1 };
  s0 -> s2 [0, 65535] { R342 += 1, R277 += 1, R278 += 1 };
  s0 -> s0 [0, 65535] { R341 += 1, R342 += 1 };
  s0 -> s3 [70, 70] { R342 += 1, R278 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R342 += 1, R278 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R342 += 1, R278 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R342 += 1, R278 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 65535] { R342 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R342 += 1, R278 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R342 += 1, R278 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R342 += 1, R278 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R342 += 1, R278 += 1, R141 += 1, R142 += 1 };
  s2 -> s2 [0, 65535] { R342 += 1, R277 += 1, R278 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R342 += 1, R278 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R342 += 1, R278 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R342 += 1, R278 += 1, R141 += 1, R142 += 1 };
  s3 -> s3 [0, 65535] { R342 += 1, R278 += 1, R141 += 1, R142 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R342 += 1 };
  s4 -> s4 [0, 65535] { R342 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R342 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R344 += 1, R280 += 1, R147 += 1, R148 += 1 };
  s0 -> s2 [0, 65535] { R344 += 1, R279 += 1, R280 += 1 };
  s0 -> s0 [0, 65535] { R343 += 1, R344 += 1 };
  s0 -> s3 [70, 70] { R344 += 1, R280 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R344 += 1, R280 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R344 += 1, R280 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R344 += 1, R280 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 65535] { R344 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R344 += 1, R280 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R344 += 1, R280 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R344 += 1, R280 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R344 += 1, R280 += 1, R147 += 1, R148 += 1 };
  s2 -> s2 [0, 65535] { R344 += 1, R279 += 1, R280 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R344 += 1, R280 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R344 += 1, R280 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R344 += 1, R280 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R344 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R344 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R344 += 1, R280 += 1, R147 += 1, R148 += 1 };
  s5 -> s5 [0, 65535] { R344 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R346 += 1, R282 += 1, R151 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R346 += 1, R282 += 1, R152 += 1 };
  s0 -> s0 [0, 65535] { R345 += 1, R346 += 1 };
  s0 -> s3 [0, 65535] { R346 += 1, R281 += 1, R282 += 1 };
  s0 -> s4 [70, 70] { R346 += 1, R282 += 1, R151 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R346 += 1, R282 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R346 += 1, R282 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R346 += 1, R282 += 1, R151 += 1, R152 += 1 };
  s0 -> s2 [71, 74] { R346 += 1, R282 += 1, R152 += 1 };
  s0 -> s1 [71, 65535] { R346 += 1, R282 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R346 += 1, R282 += 1, R152 += 1 };
  s0 -> s2 [76, 65535] { R346 += 1, R282 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R346 += 1, R282 += 1, R151 += 1, R152 += 1 };
  s1 -> s2 [0, 69] { R346 += 1, R282 += 1, R152 += 1 };
  s1 -> s4 [70, 70] { R346 += 1, R282 += 1, R151 += 1, R152 += 1 };
  s1 -> s5 [70, 70] { R346 += 1, R282 += 1, R152 += 1 };
  s1 -> s6 [70, 70] { R346 += 1, R282 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R346 += 1, R282 += 1, R151 += 1, R152 += 1 };
  s1 -> s2 [71, 74] { R346 += 1, R282 += 1, R152 += 1 };
  s1 -> s1 [71, 65535] { R346 += 1, R282 += 1, R151 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R346 += 1, R282 += 1, R152 += 1 };
  s1 -> s2 [76, 65535] { R346 += 1, R282 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R346 += 1, R282 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R346 += 1, R282 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R346 += 1, R282 += 1, R152 += 1 };
  s2 -> s2 [71, 74] { R346 += 1, R282 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R346 += 1, R282 += 1, R152 += 1 };
  s2 -> s2 [76, 65535] { R346 += 1, R282 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R346 += 1, R282 += 1, R151 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R346 += 1, R282 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R346 += 1, R281 += 1, R282 += 1 };
  s3 -> s4 [70, 70] { R346 += 1, R282 += 1, R151 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R346 += 1, R282 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R346 += 1, R282 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R346 += 1, R282 += 1, R151 += 1, R152 += 1 };
  s3 -> s2 [71, 74] { R346 += 1, R282 += 1, R152 += 1 };
  s3 -> s1 [71, 65535] { R346 += 1, R282 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R346 += 1, R282 += 1, R152 += 1 };
  s3 -> s2 [76, 65535] { R346 += 1, R282 += 1, R152 += 1 };
  s6 -> s6 [0, 74] { R346 += 1, R282 += 1, R152 += 1 };
  s6 -> s10 [75, 75] { R346 += 1, R282 += 1, R152 += 1 };
  s6 -> s6 [76, 65535] { R346 += 1, R282 += 1, R152 += 1 };
  s7 -> s6 [0, 74] { R346 += 1, R282 += 1, R152 += 1 };
  s7 -> s7 [0, 65535] { R346 += 1, R282 += 1, R151 += 1, R152 += 1 };
  s7 -> s10 [75, 75] { R346 += 1, R282 += 1, R152 += 1 };
  s7 -> s6 [76, 65535] { R346 += 1, R282 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R346 += 1, R282 += 1, R152 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R346 += 1 };
  s8 -> s10 [70, 70] { R346 += 1, R282 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R346 += 1, R282 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R346 += 1, R282 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R346 += 1, R282 += 1, R152 += 1 };
  s10 -> s9 [0, 65535];
  s10 -> s12 [0, 65535] { R346 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R346 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R346 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R348 += 1, R284 += 1, R155 += 1, R156 += 1 };
  s0 -> s2 [0, 65535] { R348 += 1, R283 += 1, R284 += 1 };
  s0 -> s0 [0, 65535] { R347 += 1, R348 += 1 };
  s0 -> s3 [70, 70] { R348 += 1, R284 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R348 += 1, R284 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R348 += 1, R284 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R348 += 1, R284 += 1, R155 += 1, R156 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R348 += 1 };
  s1 -> s3 [70, 70] { R348 += 1, R284 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R348 += 1, R284 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R348 += 1, R284 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R348 += 1, R284 += 1, R155 += 1, R156 += 1 };
  s2 -> s2 [0, 65535] { R348 += 1, R283 += 1, R284 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R348 += 1, R284 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R348 += 1, R284 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R348 += 1, R284 += 1, R155 += 1, R156 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R348 += 1, R284 += 1, R155 += 1, R156 += 1 };
  s3 -> s6 [0, 65535] { R348 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R348 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R348 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R350 += 1, R286 += 1, R161 += 1, R162 += 1 };
  s0 -> s0 [0, 65535] { R349 += 1, R350 += 1 };
  s0 -> s2 [0, 65535] { R350 += 1, R285 += 1, R286 += 1 };
  s0 -> s3 [70, 70] { R350 += 1, R286 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R350 += 1, R286 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R350 += 1, R286 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R350 += 1, R286 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535] { R350 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R350 += 1, R286 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R350 += 1, R286 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R350 += 1, R286 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R350 += 1, R286 += 1, R161 += 1, R162 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R350 += 1, R285 += 1, R286 += 1 };
  s2 -> s3 [70, 70] { R350 += 1, R286 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R350 += 1, R286 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R350 += 1, R286 += 1, R161 += 1, R162 += 1 };
  s3 -> s6 [0, 65535] { R350 += 1 };
  s3 -> s3 [0, 65535] { R350 += 1, R286 += 1, R161 += 1, R162 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R350 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R350 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R352 += 1, R288 += 1, R167 += 1, R168 += 1 };
  s0 -> s2 [0, 65535] { R352 += 1, R287 += 1, R288 += 1 };
  s0 -> s0 [0, 65535] { R351 += 1, R352 += 1 };
  s0 -> s3 [70, 70] { R352 += 1, R288 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R352 += 1, R288 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R352 += 1, R288 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R352 += 1, R288 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 65535] { R352 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R352 += 1, R288 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R352 += 1, R288 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R352 += 1, R288 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R352 += 1, R288 += 1, R167 += 1, R168 += 1 };
  s2 -> s2 [0, 65535] { R352 += 1, R287 += 1, R288 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R352 += 1, R288 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R352 += 1, R288 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R352 += 1, R288 += 1, R167 += 1, R168 += 1 };
  s3 -> s6 [0, 65535] { R352 += 1 };
  s3 -> s3 [0, 65535] { R352 += 1, R288 += 1, R167 += 1, R168 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R352 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R352 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R354 += 1, R290 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s2 [0, 69] { R354 += 1, R290 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s3 [0, 69] { R354 += 1, R290 += 1, R175 += 1, R176 += 1 };
  s0 -> s4 [0, 65535] { R354 += 1, R289 += 1, R290 += 1 };
  s0 -> s0 [0, 65535] { R353 += 1, R354 += 1 };
  s0 -> s5 [70, 70] { R354 += 1, R290 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s6 [70, 70] { R354 += 1, R290 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s7 [70, 70] { R354 += 1, R290 += 1, R175 += 1, R176 += 1 };
  s0 -> s8 [70, 70] { R354 += 1, R290 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s9 [70, 70] { R354 += 1, R290 += 1, R175 += 1, R176 += 1 };
  s0 -> s10 [70, 70] { R354 += 1, R290 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s1 [71, 65535] { R354 += 1, R290 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s2 [71, 65535] { R354 += 1, R290 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s3 [71, 65535] { R354 += 1, R290 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [0, 69] { R354 += 1, R290 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s2 [0, 69] { R354 += 1, R290 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s5 [70, 70] { R354 += 1, R290 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s6 [70, 70] { R354 += 1, R290 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s8 [70, 70] { R354 += 1, R290 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s10 [70, 70] { R354 += 1, R290 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s1 [71, 65535] { R354 += 1, R290 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s2 [71, 65535] { R354 += 1, R290 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [0, 69] { R354 += 1, R290 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s14 [0, 69] { R354 += 1, R290 += 1, R176 += 1 };
  s2 -> s5 [70, 70] { R354 += 1, R290 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s11 [70, 70] { R354 += 1, R290 += 1, R176 += 1 };
  s2 -> s8 [70, 70] { R354 += 1, R290 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s15 [70, 70] { R354 += 1, R290 += 1, R176 += 1 };
  s2 -> s2 [71, 65535] { R354 += 1, R290 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s14 [71, 65535] { R354 += 1, R290 += 1, R176 += 1 };
  s3 -> s1 [0, 69] { R354 += 1, R290 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s2 [0, 69] { R354 += 1, R290 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [0, 69] { R354 += 1, R290 += 1, R175 += 1, R176 += 1 };
  s3 -> s5 [70, 70] { R354 += 1, R290 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s6 [70, 70] { R354 += 1, R290 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s7 [70, 70] { R354 += 1, R290 += 1, R175 += 1, R176 += 1 };
  s3 -> s8 [70, 70] { R354 += 1, R290 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s9 [70, 70] { R354 += 1, R290 += 1, R175 += 1, R176 += 1 };
  s3 -> s10 [70, 70] { R354 += 1, R290 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s1 [71, 65535] { R354 += 1, R290 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s2 [71, 65535] { R354 += 1, R290 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [71, 65535] { R354 += 1, R290 += 1, R175 += 1, R176 += 1 };
  s4 -> s1 [0, 69] { R354 += 1, R290 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s2 [0, 69] { R354 += 1, R290 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s3 [0, 69] { R354 += 1, R290 += 1, R175 += 1, R176 += 1 };
  s4 -> s4 [0, 65535] { R354 += 1, R289 += 1, R290 += 1 };
  s4 -> s5 [70, 70] { R354 += 1, R290 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s6 [70, 70] { R354 += 1, R290 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s7 [70, 70] { R354 += 1, R290 += 1, R175 += 1, R176 += 1 };
  s4 -> s8 [70, 70] { R354 += 1, R290 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s9 [70, 70] { R354 += 1, R290 += 1, R175 += 1, R176 += 1 };
  s4 -> s10 [70, 70] { R354 += 1, R290 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s1 [71, 65535] { R354 += 1, R290 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s2 [71, 65535] { R354 += 1, R290 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s3 [71, 65535] { R354 += 1, R290 += 1, R175 += 1, R176 += 1 };
  s5 -> s5 [0, 65535] { R354 += 1, R290 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s5 -> s11 [0, 65535] { R354 += 1, R290 += 1, R176 += 1 };
  s6 -> s5 [0, 65535] { R354 += 1, R290 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s6 -> s6 [0, 65535] { R354 += 1, R290 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s7 -> s5 [0, 65535] { R354 += 1, R290 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s7 -> s6 [0, 65535] { R354 += 1, R290 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s7 -> s7 [0, 65535] { R354 += 1, R290 += 1, R175 += 1, R176 += 1 };
  s11 -> s11 [0, 65535] { R354 += 1, R290 += 1, R176 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [0, 65535] { R354 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R354 += 1 };
  s14 -> s14 [0, 69] { R354 += 1, R290 += 1, R176 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R354 += 1 };
  s14 -> s11 [70, 70] { R354 += 1, R290 += 1, R176 += 1 };
  s14 -> s15 [70, 70] { R354 += 1, R290 += 1, R176 += 1 };
  s14 -> s14 [71, 65535] { R354 += 1, R290 += 1, R176 += 1 };
  s15 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R354 += 1 };
  accepting s12, s13, s14, s15, s11;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R356 += 1, R292 += 1, R185 += 1, R186 += 1 };
  s0 -> s0 [0, 65535] { R355 += 1, R356 += 1 };
  s0 -> s2 [0, 65535] { R356 += 1, R291 += 1, R292 += 1 };
  s0 -> s3 [70, 70] { R356 += 1, R292 += 1, R185 += 1, R186 += 1 };
  s0 -> s4 [70, 70] { R356 += 1, R292 += 1, R185 += 1, R186 += 1 };
  s0 -> s1 [71, 65535] { R356 += 1, R292 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 69] { R356 += 1, R292 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 65535] { R356 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R356 += 1, R292 += 1, R185 += 1, R186 += 1 };
  s1 -> s4 [70, 70] { R356 += 1, R292 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [71, 65535] { R356 += 1, R292 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [0, 69] { R356 += 1, R292 += 1, R185 += 1, R186 += 1 };
  s2 -> s2 [0, 65535] { R356 += 1, R291 += 1, R292 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R356 += 1, R292 += 1, R185 += 1, R186 += 1 };
  s2 -> s4 [70, 70] { R356 += 1, R292 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [71, 65535] { R356 += 1, R292 += 1, R185 += 1, R186 += 1 };
  s3 -> s3 [0, 65535] { R356 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R356 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R356 += 1, R292 += 1, R185 += 1, R186 += 1 };
  s5 -> s5 [0, 65535] { R356 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R358 += 1, R294 += 1, R193 += 1, R194 += 1 };
  s0 -> s0 [0, 65535] { R357 += 1, R358 += 1 };
  s0 -> s2 [0, 65535] { R358 += 1, R293 += 1, R294 += 1 };
  s0 -> s3 [70, 70] { R358 += 1, R294 += 1, R193 += 1, R194 += 1 };
  s0 -> s4 [70, 70] { R358 += 1, R294 += 1, R193 += 1, R194 += 1 };
  s0 -> s1 [71, 65535] { R358 += 1, R294 += 1, R193 += 1, R194 += 1 };
  s1 -> s1 [0, 69] { R358 += 1, R294 += 1, R193 += 1, R194 += 1 };
  s1 -> s1 [0, 65535] { R358 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R358 += 1, R294 += 1, R193 += 1, R194 += 1 };
  s1 -> s4 [70, 70] { R358 += 1, R294 += 1, R193 += 1, R194 += 1 };
  s1 -> s1 [71, 65535] { R358 += 1, R294 += 1, R193 += 1, R194 += 1 };
  s2 -> s1 [0, 69] { R358 += 1, R294 += 1, R193 += 1, R194 += 1 };
  s2 -> s2 [0, 65535] { R358 += 1, R293 += 1, R294 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R358 += 1, R294 += 1, R193 += 1, R194 += 1 };
  s2 -> s4 [70, 70] { R358 += 1, R294 += 1, R193 += 1, R194 += 1 };
  s2 -> s1 [71, 65535] { R358 += 1, R294 += 1, R193 += 1, R194 += 1 };
  s3 -> s3 [0, 65535] { R358 += 1, R294 += 1, R193 += 1, R194 += 1 };
  s3 -> s6 [0, 65535] { R358 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R358 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R358 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s0 -> s2 [0, 69] { R360 += 1, R296 += 1, R204 += 1, R205 += 1, R206 += 1 };
  s0 -> s3 [0, 69] { R360 += 1, R296 += 1, R203 += 1, R204 += 1 };
  s0 -> s4 [0, 65535] { R360 += 1, R295 += 1, R296 += 1 };
  s0 -> s0 [0, 65535] { R359 += 1, R360 += 1 };
  s0 -> s5 [70, 70] { R360 += 1, R296 += 1, R203 += 1, R204 += 1 };
  s0 -> s6 [70, 70] { R360 += 1, R296 += 1, R204 += 1, R205 += 1, R206 += 1 };
  s0 -> s7 [70, 70] { R360 += 1, R296 += 1, R204 += 1, R205 += 1, R206 += 1 };
  s0 -> s8 [70, 70] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s0 -> s9 [70, 70] { R360 += 1, R296 += 1, R203 += 1, R204 += 1 };
  s0 -> s10 [70, 70] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s0 -> s1 [71, 74] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s0 -> s2 [71, 65535] { R360 += 1, R296 += 1, R204 += 1, R205 += 1, R206 += 1 };
  s0 -> s3 [71, 65535] { R360 += 1, R296 += 1, R203 += 1, R204 += 1 };
  s0 -> s11 [88, 88] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s0 -> s1 [89, 65535] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s1 -> s1 [0, 69] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s1 -> s8 [70, 70] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s1 -> s10 [70, 70] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s1 -> s1 [71, 74] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s1 -> s11 [88, 88] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s1 -> s1 [89, 65535] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s2 -> s1 [0, 69] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s2 -> s2 [0, 69] { R360 += 1, R296 += 1, R204 += 1, R205 += 1, R206 += 1 };
  s2 -> s6 [70, 70] { R360 += 1, R296 += 1, R204 += 1, R205 += 1, R206 += 1 };
  s2 -> s7 [70, 70] { R360 += 1, R296 += 1, R204 += 1, R205 += 1, R206 += 1 };
  s2 -> s8 [70, 70] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s2 -> s10 [70, 70] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s2 -> s1 [71, 74] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s2 -> s2 [71, 65535] { R360 += 1, R296 += 1, R204 += 1, R205 += 1, R206 += 1 };
  s2 -> s11 [88, 88] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s2 -> s1 [89, 65535] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s3 -> s1 [0, 69] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s3 -> s2 [0, 69] { R360 += 1, R296 += 1, R204 += 1, R205 += 1, R206 += 1 };
  s3 -> s3 [0, 69] { R360 += 1, R296 += 1, R203 += 1, R204 += 1 };
  s3 -> s5 [70, 70] { R360 += 1, R296 += 1, R203 += 1, R204 += 1 };
  s3 -> s6 [70, 70] { R360 += 1, R296 += 1, R204 += 1, R205 += 1, R206 += 1 };
  s3 -> s7 [70, 70] { R360 += 1, R296 += 1, R204 += 1, R205 += 1, R206 += 1 };
  s3 -> s8 [70, 70] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s3 -> s9 [70, 70] { R360 += 1, R296 += 1, R203 += 1, R204 += 1 };
  s3 -> s10 [70, 70] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s3 -> s1 [71, 74] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s3 -> s2 [71, 65535] { R360 += 1, R296 += 1, R204 += 1, R205 += 1, R206 += 1 };
  s3 -> s3 [71, 65535] { R360 += 1, R296 += 1, R203 += 1, R204 += 1 };
  s3 -> s11 [88, 88] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s3 -> s1 [89, 65535] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s4 -> s1 [0, 69] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s4 -> s2 [0, 69] { R360 += 1, R296 += 1, R204 += 1, R205 += 1, R206 += 1 };
  s4 -> s3 [0, 69] { R360 += 1, R296 += 1, R203 += 1, R204 += 1 };
  s4 -> s4 [0, 65535] { R360 += 1, R295 += 1, R296 += 1 };
  s4 -> s5 [70, 70] { R360 += 1, R296 += 1, R203 += 1, R204 += 1 };
  s4 -> s6 [70, 70] { R360 += 1, R296 += 1, R204 += 1, R205 += 1, R206 += 1 };
  s4 -> s7 [70, 70] { R360 += 1, R296 += 1, R204 += 1, R205 += 1, R206 += 1 };
  s4 -> s8 [70, 70] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s4 -> s9 [70, 70] { R360 += 1, R296 += 1, R203 += 1, R204 += 1 };
  s4 -> s10 [70, 70] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s4 -> s1 [71, 74] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s4 -> s2 [71, 65535] { R360 += 1, R296 += 1, R204 += 1, R205 += 1, R206 += 1 };
  s4 -> s3 [71, 65535] { R360 += 1, R296 += 1, R203 += 1, R204 += 1 };
  s4 -> s11 [88, 88] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s4 -> s1 [89, 65535] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s5 -> s8 [0, 74] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s5 -> s5 [0, 65535] { R360 += 1, R296 += 1, R203 += 1, R204 += 1 };
  s5 -> s6 [0, 65535] { R360 += 1, R296 += 1, R204 += 1, R205 += 1, R206 += 1 };
  s5 -> s13 [88, 88] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s5 -> s8 [89, 65535] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s6 -> s8 [0, 74] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s6 -> s6 [0, 65535] { R360 += 1, R296 += 1, R204 += 1, R205 += 1, R206 += 1 };
  s6 -> s13 [88, 88] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s6 -> s8 [89, 65535] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s8 -> s8 [0, 74] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s8 -> s13 [88, 88] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s8 -> s8 [89, 65535] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s11 -> s11 [0, 69] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s11 -> s11 [0, 65535] { R360 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [70, 70] { R360 += 1, R296 += 1, R204 += 1 };
  s11 -> s14 [70, 70] { R360 += 1, R296 += 1, R204 += 1 };
  s11 -> s11 [71, 74] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s11 -> s11 [71, 65535] { R360 += 1, R296 += 1, R204 += 1 };
  s11 -> s11 [88, 65535] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s13 [0, 74] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s13 -> s13 [0, 65535] { R360 += 1, R296 += 1, R204 += 1 };
  s13 -> s15 [0, 65535] { R360 += 1 };
  s13 -> s12 [0, 65535];
  s13 -> s13 [88, 65535] { R360 += 1, R296 += 1, R204 += 1, R206 += 1 };
  s14 -> s14 [0, 65535] { R360 += 1 };
  s14 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R360 += 1 };
  s15 -> s12 [0, 65535];
  accepting s12, s13, s14, s15, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
constraint R3 = R360 && R25 - R360 = -1 && R26 = R360 && R27 - R360 = -1 && R28 = R360 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R208 + -1*R204 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R208 + -1*R204 - R130 = 0 && R129 + R207 + R203 = 0 && R131 + R209 + R205 = 0 && R132 + R210 + R206 = 0 && R271 = 0 && R272 = 0 && R281 = 0 && R282 = 0 && R289 = 0 && R290 = 0 && R295 = 0 && R296 = 0 && R297 = 0 && R298 = R360 && R299 = 0 && R300 = R360 && R301 = 0 && R302 = R360 && R303 = 0 && R304 = R360 && R305 = 0 && R306 = R360 && R307 = 0 && R308 = R360 && R309 = 0 && R310 = R360 && R311 = 0 && R312 = R360 && R313 = 0 && R314 = R360 && R315 = 0 && R316 = R360 && R317 = 0 && R318 = R360 && R319 = 0 && R320 = R360 && R321 = 0 && R322 = R360 && R323 = 0 && R324 = R360 && R325 = 0 && R326 = R360 && R327 = 0 && R328 = R360 && R329 = 0 && R330 = R360 && R331 = 0 && R332 = R360 && R333 = 0 && R334 = R360 && R335 = 0 && R336 = R360 && R337 = 0 && R338 = R360 && R339 = 0 && R340 = R360 && R341 = 0 && R342 = R360 && R343 = 0 && R344 = R360 && R345 = 0 && R346 = R360 && R347 = 0 && R348 = R360 && R349 = 0 && R350 = R360 && R351 = 0 && R352 = R360 && R353 = 0 && R354 = R360 && R355 = 0 && R356 = R360 && R357 = 0 && R358 = R360 && R359 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R208 + -1*R204 - R130 < 1 && 0 < R360 && (R2 != 0 || R22 = 0 || (R211 = 0 && R212 = 0)) && (R2 != 0 || R22 = 0 || (R213 = 0 && R214 = 0)) && (R2 != 0 || R22 = 0 || (R215 = 0 && R216 = 0)) && (R2 != 0 || R22 = 0 || (R217 = 0 && R218 = 0)) && (R2 != 0 || R22 = 0 || (R219 = 0 && R220 = 0)) && (R2 != 0 || R22 = 0 || (R221 = 0 && R222 = 0)) && (R2 != 0 || R22 = 0 || (R223 = 0 && R224 = 0)) && (R2 != 0 || R22 = 0 || (R225 = 0 && R226 = 0)) && (R2 != 0 || R22 = 0 || (R227 = 0 && R228 = 0)) && (R2 != 0 || R22 = 0 || (R229 = 0 && R230 = 0)) && (R2 != 0 || R22 = 0 || (R231 = 0 && R232 = 0)) && (R2 != 0 || R22 = 0 || (R233 = 0 && R234 = 0)) && (R2 != 0 || R22 = 0 || (R235 = 0 && R236 = 0)) && (R2 != 0 || R22 = 0 || (R237 = 0 && R238 = 0)) && (R2 != 0 || R22 = 0 || (R239 = 0 && R240 = 0)) && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R208 + -1*R204 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R191 + R187 = 0 && R114 + R192 + R188 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R208 + -1*R204 - R130 = 0 || R130 + R208 + R204 < 1) && (R81 + R158 + R155 = 0 || R130 + R208 + R204 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R208 + -1*R204 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R208 + R204 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R208 + -1*R204 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R208 + R204 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R208 + -1*R204 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R208 + R204 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 != 0 || R112 + R190 + R186 + -1*R208 + -1*R204 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R208 + R204 = 0)) && (R113 + R191 + R187 != 0 || R83 + R160 + R157 + -1*R192 + -1*R188 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R198 + R193 != 0 || R120 + R199 + R194 + -1*R208 + -1*R204 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R208 + R204 = 0)) && (R211 != 0 || R2 = R212 || R2 < 1) && (R213 != 0 || R2 = R214 || R2 < 1) && (R215 != 0 || R2 = R216 || R2 < 1) && (R217 != 0 || R2 = R218 || R2 < 1) && (R219 != 0 || R2 = R220 || R2 < 1) && (R221 != 0 || R2 = R222 || R2 < 1) && (R223 != 0 || R2 = R224 || R2 < 1) && (R225 != 0 || R2 = R226 || R2 < 1) && (R227 != 0 || R2 = R228 || R2 < 1) && (R229 != 0 || R2 = R230 || R2 < 1) && (R231 != 0 || R2 = R232 || R2 < 1) && (R233 != 0 || R2 = R234 || R2 < 1) && (R235 != 0 || R2 = R236 || R2 < 1) && (R237 != 0 || R2 = R238 || R2 < 1) && (R239 != 0 || R2 = R240 || R2 < 1) && (R23 = 0 || (R269 = 0 && R270 = 0)) && (R23 = 0 || (R273 = 0 && R274 = 0)) && (R23 = 0 || (R275 = 0 && R276 = 0)) && (R23 = 0 || (R277 = 0 && R278 = 0)) && (R23 = 0 || (R279 = 0 && R280 = 0)) && (R23 = 0 || (R283 = 0 && R284 = 0)) && (R23 = 0 || (R285 = 0 && R286 = 0)) && (R23 = 0 || (R287 = 0 && R288 = 0)) && (R23 = 0 || (R291 = 0 && R292 = 0)) && (R23 = 0 || (R293 = 0 && R294 = 0)) && (R24 = 0 || (R241 = 0 && R242 = 0)) && (R24 = 0 || (R243 = 0 && R244 = 0)) && (R24 = 0 || (R245 = 0 && R246 = 0)) && (R24 = 0 || (R247 = 0 && R248 = 0)) && (R24 = 0 || (R249 = 0 && R250 = 0)) && (R24 = 0 || (R251 = 0 && R252 = 0)) && (R24 = 0 || (R253 = 0 && R254 = 0)) && (R24 = 0 || (R255 = 0 && R256 = 0)) && (R24 = 0 || (R257 = 0 && R258 = 0)) && (R24 = 0 || (R259 = 0 && R260 = 0)) && (R24 = 0 || (R261 = 0 && R262 = 0)) && (R24 = 0 || (R263 = 0 && R264 = 0)) && (R24 = 0 || (R265 = 0 && R266 = 0)) && (R24 = 0 || (R267 = 0 && R268 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R208 + R204 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R208 + R204 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R208 + R204 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 = 0 || (R83 + R160 + R157 = 0 && R130 + R208 + R204 = 0)) && (R113 + R191 + R187 = 0 || R83 + R160 + R157 < 1) && (R119 + R198 + R193 = 0 || (R83 + R160 + R157 = 0 && R130 + R208 + R204 = 0)) && (R123 + R202 + R197 = 0 || (R121 + R200 + R195 = 0 && R122 + R201 + R196 = 0)) && (R211 = 0 || R2 < 1) && (R213 = 0 || R2 < 1) && (R215 = 0 || R2 < 1) && (R217 = 0 || R2 < 1) && (R219 = 0 || R2 < 1) && (R221 = 0 || R2 < 1) && (R223 = 0 || R2 < 1) && (R225 = 0 || R2 < 1) && (R227 = 0 || R2 < 1) && (R229 = 0 || R2 < 1) && (R231 = 0 || R2 < 1) && (R233 = 0 || R2 < 1) && (R235 = 0 || R2 < 1) && (R237 = 0 || R2 < 1) && (R239 = 0 || R2 < 1);
// End of Parikh automata intersection problem
