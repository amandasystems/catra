// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R10225, R10226, R10227, R10228, R10229, R10230, R10231, R10232, R10233, R10234, R103, R104, R105, R11025, R11026, R11027, R11028, R11029, R11030, R11031, R11032, R11033, R11034, R11035, R11036, R11037, R11038, R11039, R11040, R11041, R11042, R11043, R11044, R11045, R11046, R11047, R11048, R11049, R11050, R11051, R11052, R11053, R11054, R11055, R11056, R11057, R11058, R11059, R11060, R11061, R11062, R11063, R11064, R11065, R11066, R11067, R11068, R11069, R11070, R11071, R11072, R11073, R11074, R11075, R11076, R11077, R11078, R11079, R11080, R11081, R11082, R11083, R11084, R11085, R11086, R11087, R11088, R11089, R11090, R11091, R11092, R11093, R11094, R11095, R11096, R11097, R11098, R11099, R111, R11100, R11101, R11102, R11103, R11104, R11105, R11106, R11107, R11108, R11109, R11110, R11111, R11112, R11113, R11114, R11115, R11116, R11117, R11118, R11119, R11120, R11121, R11122, R11123, R11124, R11125, R11126, R11127, R11128, R11129, R11130, R11131, R11132, R11133, R11134, R11135, R11136, R11137, R11138, R11139, R11140, R11141, R11142, R11143, R11144, R11145, R11146, R11147, R11148, R11149, R11150, R11151, R11152, R11153, R11154, R11155, R11156, R11157, R11158, R11159, R11160, R11161, R11162, R11163, R11164, R11165, R11166, R11167, R11168, R11169, R11170, R11171, R11172, R11173, R11174, R11175, R11176, R11177, R11178, R11179, R11180, R11181, R11182, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R2, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R5, R63, R65, R67, R68, R69, R73, R7353, R7354, R7355, R7356, R7357, R7358, R7359, R7360, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R26 += 1 };
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R11064 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R11063 += 1, R11064 += 1 };
  s1 -> s1 [0, 65535] { R11064 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R11066 += 1 };
  s0 -> s0 [0, 65535] { R11065 += 1, R11066 += 1 };
  s0 -> s2 [70, 70] { R11066 += 1 };
  s0 -> s3 [70, 70] { R11066 += 1 };
  s0 -> s1 [76, 65535] { R11066 += 1 };
  s1 -> s1 [0, 69] { R11066 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11066 += 1 };
  s1 -> s3 [70, 70] { R11066 += 1 };
  s1 -> s1 [76, 65535] { R11066 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R11066 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R11066 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R11068 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R11067 += 1, R11068 += 1 };
  s0 -> s2 [70, 70] { R11068 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R11068 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R11068 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R11068 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11068 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R11068 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R11068 += 1, R63 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R11068 += 1, R63 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R11070 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R11069 += 1, R11070 += 1 };
  s0 -> s2 [70, 70] { R11070 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R11070 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R11070 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R11070 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11070 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R11070 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R11070 += 1, R65 += 1 };
  s2 -> s2 [0, 65535] { R11070 += 1, R65 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R11072 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R11071 += 1, R11072 += 1 };
  s0 -> s2 [70, 70] { R11072 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R11072 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R11072 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R11072 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11072 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R11072 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R11072 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R11072 += 1, R67 += 1, R68 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R11074 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R11073 += 1, R11074 += 1 };
  s0 -> s2 [70, 70] { R11074 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R11074 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R11074 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R11074 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11074 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R11074 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R11074 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R11074 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R11076 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R11075 += 1, R11076 += 1 };
  s0 -> s2 [70, 70] { R11076 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R11076 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R11076 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R11076 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11076 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R11076 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R11076 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R11076 += 1, R77 += 1, R78 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R11078 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R11077 += 1, R11078 += 1 };
  s0 -> s2 [70, 70] { R11078 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R11078 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R11078 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R11078 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11078 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R11078 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R11078 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535] { R11078 += 1, R81 += 1, R82 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R11080 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R11079 += 1, R11080 += 1 };
  s0 -> s2 [70, 70] { R11080 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R11080 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R11080 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R11080 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11080 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R11080 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R11080 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535] { R11080 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R11082 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R11081 += 1, R11082 += 1 };
  s0 -> s2 [70, 70] { R11082 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R11082 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R11082 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R11082 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11082 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R11082 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R11082 += 1, R93 += 1, R94 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R11082 += 1, R93 += 1, R94 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R11084 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R11083 += 1, R11084 += 1 };
  s0 -> s2 [70, 70] { R11084 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R11084 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R11084 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R11084 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11084 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R11084 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R11084 += 1, R101 += 1, R102 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R11084 += 1, R101 += 1, R102 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R11086 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R11085 += 1, R11086 += 1 };
  s0 -> s2 [70, 70] { R11086 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R11086 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R11086 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R11086 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11086 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R11086 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R11086 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535] { R11086 += 1, R111 += 1, R112 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R11088 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R11087 += 1, R11088 += 1 };
  s0 -> s2 [70, 70] { R11088 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R11088 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R11088 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R11088 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11088 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R11088 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R11088 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535] { R11088 += 1, R119 += 1, R120 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R11090 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R11089 += 1, R11090 += 1 };
  s0 -> s2 [70, 70] { R11090 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R11090 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R11090 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R11090 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11090 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R11090 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R11090 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535] { R11090 += 1, R129 += 1, R130 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R11120 += 1 };
  s0 -> s0 [0, 65535] { R11119 += 1, R11120 += 1 };
  s0 -> s2 [70, 70] { R11120 += 1 };
  s0 -> s1 [71, 65535] { R11120 += 1 };
  s1 -> s1 [0, 69] { R11120 += 1 };
  s1 -> s2 [70, 70] { R11120 += 1 };
  s1 -> s1 [71, 65535] { R11120 += 1 };
  s2 -> s2 [0, 65535] { R11120 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R11122 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R11121 += 1, R11122 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R11122 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R11124 += 1 };
  s0 -> s2 [0, 65535] { R11124 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R11123 += 1, R11124 += 1 };
  s0 -> s3 [70, 70] { R11124 += 1 };
  s0 -> s1 [71, 65535] { R11124 += 1 };
  s1 -> s1 [0, 69] { R11124 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R11124 += 1 };
  s1 -> s1 [71, 65535] { R11124 += 1 };
  s2 -> s1 [0, 69] { R11124 += 1 };
  s2 -> s2 [0, 65535] { R11124 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R11124 += 1 };
  s2 -> s1 [71, 65535] { R11124 += 1 };
  s3 -> s3 [0, 65535] { R11124 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R11126 += 1, R11034 += 1 };
  s0 -> s0 [0, 65535] { R11125 += 1, R11126 += 1 };
  s0 -> s2 [0, 65535] { R11126 += 1, R11033 += 1, R11034 += 1 };
  s0 -> s1 [71, 65535] { R11126 += 1, R11034 += 1 };
  s1 -> s1 [0, 69] { R11126 += 1, R11034 += 1 };
  s1 -> s1 [0, 65535] { R11126 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R11126 += 1, R11034 += 1 };
  s2 -> s1 [0, 69] { R11126 += 1, R11034 += 1 };
  s2 -> s2 [0, 65535] { R11126 += 1, R11033 += 1, R11034 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R11126 += 1, R11034 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R11127 += 1, R11128 += 1 };
  s0 -> s1 [0, 65535] { R11128 += 1, R11036 += 1, R22 += 1 };
  s0 -> s2 [0, 65535] { R11128 += 1, R11035 += 1, R11036 += 1 };
  s1 -> s1 [0, 65535] { R11128 += 1, R11036 += 1, R22 += 1 };
  s1 -> s4 [0, 65535] { R11128 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R11128 += 1, R11036 += 1, R22 += 1 };
  s2 -> s2 [0, 65535] { R11128 += 1, R11035 += 1, R11036 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R11128 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R11130 += 1, R11038 += 1 };
  s0 -> s0 [0, 65535] { R11129 += 1, R11130 += 1 };
  s0 -> s2 [0, 65535] { R11130 += 1, R11037 += 1, R11038 += 1 };
  s0 -> s1 [75, 65535] { R11130 += 1, R11038 += 1 };
  s1 -> s1 [0, 70] { R11130 += 1, R11038 += 1 };
  s1 -> s1 [0, 65535] { R11130 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R11130 += 1, R11038 += 1 };
  s2 -> s1 [0, 70] { R11130 += 1, R11038 += 1 };
  s2 -> s2 [0, 65535] { R11130 += 1, R11037 += 1, R11038 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R11130 += 1, R11038 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s0 [0, 65535] { R11131 += 1, R11132 += 1 };
  s0 -> s1 [0, 65535] { R11132 += 1, R11040 += 1, R138 += 1 };
  s0 -> s2 [0, 65535] { R11132 += 1, R11039 += 1, R11040 += 1 };
  s1 -> s4 [0, 65535] { R11132 += 1 };
  s1 -> s1 [0, 65535] { R11132 += 1, R11040 += 1, R138 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R11132 += 1, R11040 += 1, R138 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R11132 += 1, R11039 += 1, R11040 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R11132 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R11134 += 1, R11042 += 1 };
  s0 -> s0 [0, 65535] { R11133 += 1, R11134 += 1 };
  s0 -> s2 [0, 65535] { R11134 += 1, R11042 += 1, R140 += 1 };
  s0 -> s3 [0, 65535] { R11134 += 1, R11041 += 1, R11042 += 1 };
  s0 -> s1 [76, 65535] { R11134 += 1, R11042 += 1 };
  s1 -> s1 [0, 74] { R11134 += 1, R11042 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R11134 += 1 };
  s1 -> s1 [76, 65535] { R11134 += 1, R11042 += 1 };
  s2 -> s1 [0, 74] { R11134 += 1, R11042 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R11134 += 1, R11042 += 1, R140 += 1 };
  s2 -> s5 [0, 65535] { R11134 += 1 };
  s2 -> s1 [76, 65535] { R11134 += 1, R11042 += 1 };
  s3 -> s1 [0, 74] { R11134 += 1, R11042 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R11134 += 1, R11042 += 1, R140 += 1 };
  s3 -> s3 [0, 65535] { R11134 += 1, R11041 += 1, R11042 += 1 };
  s3 -> s1 [76, 65535] { R11134 += 1, R11042 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R11134 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R11136 += 1, R11044 += 1, R144 += 1, R145 += 1 };
  s0 -> s0 [0, 65535] { R11135 += 1, R11136 += 1 };
  s0 -> s2 [0, 65535] { R11136 += 1, R11043 += 1, R11044 += 1 };
  s0 -> s3 [0, 65535] { R11136 += 1, R11044 += 1, R145 += 1, R146 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R11136 += 1, R11044 += 1, R144 += 1, R145 += 1 };
  s1 -> s3 [0, 65535] { R11136 += 1, R11044 += 1, R145 += 1, R146 += 1 };
  s1 -> s6 [0, 65535] { R11136 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R11136 += 1, R11044 += 1, R144 += 1, R145 += 1 };
  s2 -> s2 [0, 65535] { R11136 += 1, R11043 += 1, R11044 += 1 };
  s2 -> s3 [0, 65535] { R11136 += 1, R11044 += 1, R145 += 1, R146 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R11136 += 1, R11044 += 1 };
  s3 -> s3 [0, 65535] { R11136 += 1, R11044 += 1, R145 += 1, R146 += 1 };
  s3 -> s6 [0, 65535] { R11136 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R11136 += 1, R11044 += 1 };
  s5 -> s6 [0, 65535] { R11136 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R11136 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R11138 += 1, R11046 += 1, R150 += 1 };
  s0 -> s2 [0, 65535] { R11138 += 1, R11046 += 1, R149 += 1, R150 += 1 };
  s0 -> s3 [0, 65535] { R11138 += 1, R11045 += 1, R11046 += 1 };
  s0 -> s0 [0, 65535] { R11137 += 1, R11138 += 1 };
  s0 -> s4 [75, 75] { R11138 += 1, R11046 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R11138 += 1, R11046 += 1, R150 += 1 };
  s0 -> s1 [77, 65535] { R11138 += 1, R11046 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R11138 += 1, R11046 += 1, R150 += 1 };
  s1 -> s6 [0, 65535] { R11138 += 1 };
  s1 -> s1 [0, 65535] { R11138 += 1, R11046 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [75, 75] { R11138 += 1, R11046 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R11138 += 1, R11046 += 1, R150 += 1 };
  s1 -> s1 [77, 65535] { R11138 += 1, R11046 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R11138 += 1, R11046 += 1, R150 += 1 };
  s2 -> s6 [0, 65535] { R11138 += 1 };
  s2 -> s2 [0, 65535] { R11138 += 1, R11046 += 1, R149 += 1, R150 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [75, 75] { R11138 += 1, R11046 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R11138 += 1, R11046 += 1, R150 += 1 };
  s2 -> s1 [77, 65535] { R11138 += 1, R11046 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R11138 += 1, R11046 += 1, R150 += 1 };
  s3 -> s2 [0, 65535] { R11138 += 1, R11046 += 1, R149 += 1, R150 += 1 };
  s3 -> s3 [0, 65535] { R11138 += 1, R11045 += 1, R11046 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [75, 75] { R11138 += 1, R11046 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R11138 += 1, R11046 += 1, R150 += 1 };
  s3 -> s1 [77, 65535] { R11138 += 1, R11046 += 1, R150 += 1 };
  s4 -> s6 [0, 65535] { R11138 += 1 };
  s4 -> s4 [0, 65535] { R11138 += 1, R11046 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 75] { R11138 += 1, R11046 += 1, R150 += 1 };
  s5 -> s6 [0, 65535] { R11138 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R11138 += 1, R11046 += 1 };
  s5 -> s5 [77, 65535] { R11138 += 1, R11046 += 1, R150 += 1 };
  s6 -> s6 [0, 65535] { R11138 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R11140 += 1, R11048 += 1, R154 += 1 };
  s0 -> s0 [0, 65535] { R11139 += 1, R11140 += 1 };
  s0 -> s2 [0, 65535] { R11140 += 1, R11047 += 1, R11048 += 1 };
  s0 -> s3 [0, 65535] { R11140 += 1, R11048 += 1 };
  s1 -> s4 [0, 65535] { R11140 += 1 };
  s1 -> s1 [0, 65535] { R11140 += 1, R11048 += 1, R154 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R11140 += 1, R11048 += 1 };
  s2 -> s1 [0, 65535] { R11140 += 1, R11048 += 1, R154 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R11140 += 1, R11047 += 1, R11048 += 1 };
  s2 -> s3 [0, 65535] { R11140 += 1, R11048 += 1 };
  s3 -> s4 [0, 65535] { R11140 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R11140 += 1, R11048 += 1 };
  s4 -> s4 [0, 65535] { R11140 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R11142 += 1, R11050 += 1, R159 += 1, R160 += 1 };
  s0 -> s0 [0, 65535] { R11141 += 1, R11142 += 1 };
  s0 -> s2 [0, 65535] { R11142 += 1, R11050 += 1, R158 += 1, R159 += 1 };
  s0 -> s3 [0, 65535] { R11142 += 1, R11049 += 1, R11050 += 1 };
  s1 -> s1 [0, 65535] { R11142 += 1, R11050 += 1, R159 += 1, R160 += 1 };
  s1 -> s5 [0, 65535] { R11142 += 1 };
  s1 -> s6 [0, 65535] { R11142 += 1, R11050 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R11142 += 1, R11050 += 1, R159 += 1, R160 += 1 };
  s2 -> s5 [0, 65535] { R11142 += 1 };
  s2 -> s2 [0, 65535] { R11142 += 1, R11050 += 1, R158 += 1, R159 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R11142 += 1, R11050 += 1, R159 += 1, R160 += 1 };
  s3 -> s2 [0, 65535] { R11142 += 1, R11050 += 1, R158 += 1, R159 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R11142 += 1, R11049 += 1, R11050 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R11142 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R11142 += 1 };
  s6 -> s6 [0, 65535] { R11142 += 1, R11050 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R11144 += 1, R11052 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R11144 += 1, R11052 += 1, R165 += 1, R166 += 1 };
  s0 -> s0 [0, 65535] { R11143 += 1, R11144 += 1 };
  s0 -> s3 [0, 65535] { R11144 += 1, R11052 += 1, R164 += 1, R165 += 1 };
  s0 -> s4 [0, 65535] { R11144 += 1, R11051 += 1, R11052 += 1 };
  s0 -> s1 [76, 65535] { R11144 += 1, R11052 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R11144 += 1, R11052 += 1, R165 += 1 };
  s1 -> s6 [0, 65535] { R11144 += 1 };
  s1 -> s1 [0, 65535] { R11144 += 1, R11052 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R11144 += 1, R11052 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R11144 += 1, R11052 += 1, R165 += 1 };
  s2 -> s2 [0, 65535] { R11144 += 1, R11052 += 1, R165 += 1, R166 += 1 };
  s2 -> s6 [0, 65535] { R11144 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R11144 += 1, R11052 += 1 };
  s2 -> s1 [76, 65535] { R11144 += 1, R11052 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R11144 += 1, R11052 += 1, R165 += 1 };
  s3 -> s2 [0, 65535] { R11144 += 1, R11052 += 1, R165 += 1, R166 += 1 };
  s3 -> s6 [0, 65535] { R11144 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R11144 += 1, R11052 += 1, R164 += 1, R165 += 1 };
  s3 -> s1 [76, 65535] { R11144 += 1, R11052 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R11144 += 1, R11052 += 1, R165 += 1 };
  s4 -> s2 [0, 65535] { R11144 += 1, R11052 += 1, R165 += 1, R166 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R11144 += 1, R11052 += 1, R164 += 1, R165 += 1 };
  s4 -> s4 [0, 65535] { R11144 += 1, R11051 += 1, R11052 += 1 };
  s4 -> s1 [76, 65535] { R11144 += 1, R11052 += 1, R165 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11144 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R11144 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R11144 += 1, R11052 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R11146 += 1, R11054 += 1, R172 += 1, R174 += 1 };
  s0 -> s2 [0, 65535] { R11146 += 1, R11054 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s3 [0, 65535] { R11146 += 1, R11054 += 1, R171 += 1, R172 += 1 };
  s0 -> s0 [0, 65535] { R11145 += 1, R11146 += 1 };
  s0 -> s4 [0, 65535] { R11146 += 1, R11053 += 1, R11054 += 1 };
  s0 -> s1 [76, 65535] { R11146 += 1, R11054 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R11146 += 1, R11054 += 1, R172 += 1, R174 += 1 };
  s1 -> s7 [0, 65535] { R11146 += 1, R11054 += 1 };
  s1 -> s1 [0, 65535] { R11146 += 1, R11054 += 1, R172 += 1 };
  s1 -> s6 [0, 65535] { R11146 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R11146 += 1, R11054 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R11146 += 1, R11054 += 1, R172 += 1, R174 += 1 };
  s2 -> s7 [0, 65535] { R11146 += 1, R11054 += 1 };
  s2 -> s2 [0, 65535] { R11146 += 1, R11054 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s6 [0, 65535] { R11146 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [76, 65535] { R11146 += 1, R11054 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R11146 += 1, R11054 += 1, R172 += 1, R174 += 1 };
  s3 -> s2 [0, 65535] { R11146 += 1, R11054 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s6 [0, 65535] { R11146 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R11146 += 1, R11054 += 1, R171 += 1, R172 += 1 };
  s3 -> s1 [76, 65535] { R11146 += 1, R11054 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R11146 += 1, R11054 += 1, R172 += 1, R174 += 1 };
  s4 -> s2 [0, 65535] { R11146 += 1, R11054 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R11146 += 1, R11054 += 1, R171 += 1, R172 += 1 };
  s4 -> s4 [0, 65535] { R11146 += 1, R11053 += 1, R11054 += 1 };
  s4 -> s1 [76, 65535] { R11146 += 1, R11054 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11146 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R11146 += 1, R11054 += 1 };
  s7 -> s6 [0, 65535] { R11146 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R11148 += 1, R11056 += 1, R181 += 1 };
  s0 -> s2 [0, 65535] { R11148 += 1, R11055 += 1, R11056 += 1 };
  s0 -> s3 [0, 65535] { R11148 += 1, R11056 += 1 };
  s0 -> s0 [0, 65535] { R11147 += 1, R11148 += 1 };
  s1 -> s4 [0, 65535] { R11148 += 1 };
  s1 -> s1 [0, 65535] { R11148 += 1, R11056 += 1, R181 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R11148 += 1, R11056 += 1 };
  s2 -> s1 [0, 65535] { R11148 += 1, R11056 += 1, R181 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R11148 += 1, R11055 += 1, R11056 += 1 };
  s2 -> s3 [0, 65535] { R11148 += 1, R11056 += 1 };
  s3 -> s4 [0, 65535] { R11148 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R11148 += 1, R11056 += 1 };
  s4 -> s4 [0, 65535] { R11148 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 65535] { R11150 += 1, R11057 += 1, R11058 += 1 };
  s0 -> s0 [0, 65535] { R11149 += 1, R11150 += 1 };
  s0 -> s2 [0, 65535] { R11150 += 1, R11058 += 1, R7357 += 1, R7358 += 1 };
  s0 -> s3 [0, 65535] { R11150 += 1, R11058 += 1, R7358 += 1, R7360 += 1 };
  s0 -> s4 [0, 65535] { R11150 += 1, R11058 += 1, R7358 += 1, R7359 += 1, R7360 += 1 };
  s1 -> s1 [0, 65535] { R11150 += 1, R11057 += 1, R11058 += 1 };
  s1 -> s2 [0, 65535] { R11150 += 1, R11058 += 1, R7357 += 1, R7358 += 1 };
  s1 -> s3 [0, 65535] { R11150 += 1, R11058 += 1, R7358 += 1, R7360 += 1 };
  s1 -> s4 [0, 65535] { R11150 += 1, R11058 += 1, R7358 += 1, R7359 += 1, R7360 += 1 };
  s1 -> s7 [0, 65535];
  s2 -> s2 [0, 65535] { R11150 += 1, R11058 += 1, R7357 += 1, R7358 += 1 };
  s2 -> s6 [0, 65535] { R11150 += 1 };
  s2 -> s3 [0, 65535] { R11150 += 1, R11058 += 1, R7358 += 1, R7360 += 1 };
  s2 -> s4 [0, 65535] { R11150 += 1, R11058 += 1, R7358 += 1, R7359 += 1, R7360 += 1 };
  s2 -> s7 [0, 65535];
  s3 -> s5 [0, 65535] { R11150 += 1, R11058 += 1 };
  s3 -> s8 [0, 65535] { R11150 += 1, R11058 += 1, R7358 += 1 };
  s3 -> s6 [0, 65535] { R11150 += 1 };
  s3 -> s3 [0, 65535] { R11150 += 1, R11058 += 1, R7358 += 1, R7360 += 1 };
  s3 -> s7 [0, 65535];
  s4 -> s5 [0, 65535] { R11150 += 1, R11058 += 1 };
  s4 -> s6 [0, 65535] { R11150 += 1 };
  s4 -> s3 [0, 65535] { R11150 += 1, R11058 += 1, R7358 += 1, R7360 += 1 };
  s4 -> s4 [0, 65535] { R11150 += 1, R11058 += 1, R7358 += 1, R7359 += 1, R7360 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R11150 += 1, R11058 += 1 };
  s5 -> s6 [0, 65535] { R11150 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R11150 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s5 [0, 65535] { R11150 += 1, R11058 += 1 };
  s8 -> s8 [0, 65535] { R11150 += 1, R11058 += 1, R7358 += 1 };
  s8 -> s6 [0, 65535] { R11150 += 1 };
  s8 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R11152 += 1, R11059 += 1, R11060 += 1 };
  s0 -> s2 [0, 65535] { R11152 += 1, R11060 += 1 };
  s0 -> s0 [0, 65535] { R11151 += 1, R11152 += 1 };
  s0 -> s3 [0, 65535] { R11152 += 1, R11060 += 1, R10231 += 1, R10232 += 1, R10233 += 1 };
  s0 -> s4 [0, 65535] { R11152 += 1, R11060 += 1, R10231 += 1, R10233 += 1, R10234 += 1 };
  s1 -> s1 [0, 65535] { R11152 += 1, R11059 += 1, R11060 += 1 };
  s1 -> s2 [0, 65535] { R11152 += 1, R11060 += 1 };
  s1 -> s3 [0, 65535] { R11152 += 1, R11060 += 1, R10231 += 1, R10232 += 1, R10233 += 1 };
  s1 -> s4 [0, 65535] { R11152 += 1, R11060 += 1, R10231 += 1, R10233 += 1, R10234 += 1 };
  s1 -> s7 [0, 65535];
  s2 -> s5 [0, 65535] { R11152 += 1 };
  s2 -> s2 [0, 65535] { R11152 += 1, R11060 += 1 };
  s2 -> s7 [0, 65535];
  s3 -> s5 [0, 65535] { R11152 += 1 };
  s3 -> s2 [0, 65535] { R11152 += 1, R11060 += 1 };
  s3 -> s3 [0, 65535] { R11152 += 1, R11060 += 1, R10231 += 1, R10232 += 1, R10233 += 1 };
  s3 -> s4 [0, 65535] { R11152 += 1, R11060 += 1, R10231 += 1, R10233 += 1, R10234 += 1 };
  s3 -> s7 [0, 65535];
  s4 -> s5 [0, 65535] { R11152 += 1 };
  s4 -> s6 [0, 65535] { R11152 += 1, R11060 += 1, R10231 += 1 };
  s4 -> s2 [0, 65535] { R11152 += 1, R11060 += 1 };
  s4 -> s4 [0, 65535] { R11152 += 1, R11060 += 1, R10231 += 1, R10233 += 1, R10234 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R11152 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s5 [0, 65535] { R11152 += 1 };
  s6 -> s6 [0, 65535] { R11152 += 1, R11060 += 1, R10231 += 1 };
  s6 -> s2 [0, 65535] { R11152 += 1, R11060 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 75] { R11154 += 1, R11062 += 1, R11030 += 1, R11032 += 1 };
  s0 -> s0 [0, 65535] { R11153 += 1, R11154 += 1 };
  s0 -> s2 [0, 65535] { R11154 += 1, R11061 += 1, R11062 += 1 };
  s0 -> s3 [76, 76] { R11154 += 1, R11062 += 1, R11030 += 1, R11032 += 1 };
  s0 -> s1 [77, 65535] { R11154 += 1, R11062 += 1, R11030 += 1, R11032 += 1 };
  s1 -> s1 [0, 75] { R11154 += 1, R11062 += 1, R11030 += 1, R11032 += 1 };
  s1 -> s3 [76, 76] { R11154 += 1, R11062 += 1, R11030 += 1, R11032 += 1 };
  s1 -> s1 [77, 65535] { R11154 += 1, R11062 += 1, R11030 += 1, R11032 += 1 };
  s2 -> s1 [0, 75] { R11154 += 1, R11062 += 1, R11030 += 1, R11032 += 1 };
  s2 -> s2 [0, 65535] { R11154 += 1, R11061 += 1, R11062 += 1 };
  s2 -> s3 [76, 76] { R11154 += 1, R11062 += 1, R11030 += 1, R11032 += 1 };
  s2 -> s1 [77, 65535] { R11154 += 1, R11062 += 1, R11030 += 1, R11032 += 1 };
  s3 -> s4 [0, 65535] { R11154 += 1 };
  s3 -> s3 [0, 65535] { R11154 += 1, R11062 += 1, R11030 += 1, R11032 += 1 };
  s3 -> s5 [0, 65535] { R11154 += 1, R11062 += 1 };
  s3 -> s6 [0, 65535] { R11154 += 1, R11062 += 1, R11030 += 1 };
  s3 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R11154 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s4 [0, 65535] { R11154 += 1 };
  s5 -> s5 [0, 65535] { R11154 += 1, R11062 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s4 [0, 65535] { R11154 += 1 };
  s6 -> s5 [0, 65535] { R11154 += 1, R11062 += 1 };
  s6 -> s6 [0, 65535] { R11154 += 1, R11062 += 1, R11030 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s6, s7;
};
automaton value2_40 {
  init s0;
  s0 -> s0 [0, 65535] { R11155 += 1, R11156 += 1 };
  s0 -> s1 [0, 65535] { R11156 += 1, R11091 += 1, R11092 += 1 };
  s0 -> s2 [0, 65535] { R11156 += 1, R11092 += 1, R23 += 1 };
  s1 -> s1 [0, 65535] { R11156 += 1, R11091 += 1, R11092 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R11156 += 1, R11092 += 1, R23 += 1 };
  s2 -> s3 [0, 65535] { R11156 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R11156 += 1, R11092 += 1, R23 += 1 };
  s3 -> s3 [0, 65535] { R11156 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R11158 += 1, R11094 += 1 };
  s0 -> s0 [0, 65535] { R11157 += 1, R11158 += 1 };
  s0 -> s2 [0, 65535] { R11158 += 1, R11093 += 1, R11094 += 1 };
  s0 -> s3 [70, 70] { R11158 += 1, R11094 += 1 };
  s0 -> s4 [70, 70] { R11158 += 1, R11094 += 1 };
  s0 -> s5 [75, 75] { R11158 += 1, R11094 += 1 };
  s0 -> s1 [76, 65535] { R11158 += 1, R11094 += 1 };
  s1 -> s1 [0, 69] { R11158 += 1, R11094 += 1 };
  s1 -> s3 [70, 70] { R11158 += 1, R11094 += 1 };
  s1 -> s4 [70, 70] { R11158 += 1, R11094 += 1 };
  s1 -> s5 [75, 75] { R11158 += 1, R11094 += 1 };
  s1 -> s1 [76, 65535] { R11158 += 1, R11094 += 1 };
  s2 -> s1 [0, 69] { R11158 += 1, R11094 += 1 };
  s2 -> s2 [0, 65535] { R11158 += 1, R11093 += 1, R11094 += 1 };
  s2 -> s3 [70, 70] { R11158 += 1, R11094 += 1 };
  s2 -> s4 [70, 70] { R11158 += 1, R11094 += 1 };
  s2 -> s5 [75, 75] { R11158 += 1, R11094 += 1 };
  s2 -> s1 [76, 65535] { R11158 += 1, R11094 += 1 };
  s4 -> s4 [0, 70] { R11158 += 1, R11094 += 1 };
  s4 -> s8 [75, 75] { R11158 += 1, R11094 += 1 };
  s4 -> s4 [76, 65535] { R11158 += 1, R11094 += 1 };
  s5 -> s5 [0, 69] { R11158 += 1, R11094 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R11158 += 1 };
  s5 -> s7 [70, 70] { R11158 += 1, R11094 += 1 };
  s5 -> s8 [70, 70] { R11158 += 1, R11094 += 1 };
  s5 -> s5 [75, 65535] { R11158 += 1, R11094 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R11158 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 70] { R11158 += 1, R11094 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R11158 += 1 };
  s8 -> s8 [75, 65535] { R11158 += 1, R11094 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R11160 += 1, R11096 += 1, R137 += 1 };
  s0 -> s2 [0, 65535] { R11160 += 1, R11095 += 1, R11096 += 1 };
  s0 -> s0 [0, 65535] { R11159 += 1, R11160 += 1 };
  s0 -> s3 [70, 70] { R11160 += 1, R11096 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R11160 += 1, R11096 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R11160 += 1, R11096 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R11160 += 1, R11096 += 1, R137 += 1 };
  s1 -> s1 [0, 65535] { R11160 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R11160 += 1, R11096 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R11160 += 1, R11096 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R11160 += 1, R11096 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R11160 += 1, R11096 += 1, R137 += 1 };
  s2 -> s2 [0, 65535] { R11160 += 1, R11095 += 1, R11096 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R11160 += 1, R11096 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R11160 += 1, R11096 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R11160 += 1, R11096 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R11160 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R11160 += 1, R11096 += 1, R137 += 1 };
  s4 -> s5 [0, 65535] { R11160 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R11160 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R11162 += 1, R11098 += 1, R139 += 1 };
  s0 -> s0 [0, 65535] { R11161 += 1, R11162 += 1 };
  s0 -> s2 [0, 65535] { R11162 += 1, R11097 += 1, R11098 += 1 };
  s0 -> s3 [70, 70] { R11162 += 1, R11098 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R11162 += 1, R11098 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R11162 += 1, R11098 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R11162 += 1, R11098 += 1, R139 += 1 };
  s1 -> s1 [0, 65535] { R11162 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R11162 += 1, R11098 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R11162 += 1, R11098 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R11162 += 1, R11098 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R11162 += 1, R11098 += 1, R139 += 1 };
  s2 -> s2 [0, 65535] { R11162 += 1, R11097 += 1, R11098 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R11162 += 1, R11098 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R11162 += 1, R11098 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R11162 += 1, R11098 += 1, R139 += 1 };
  s3 -> s3 [0, 65535] { R11162 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R11162 += 1 };
  s4 -> s4 [0, 65535] { R11162 += 1, R11098 += 1, R139 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11162 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R11164 += 1, R11100 += 1, R141 += 1, R142 += 1 };
  s0 -> s2 [0, 65535] { R11164 += 1, R11099 += 1, R11100 += 1 };
  s0 -> s0 [0, 65535] { R11163 += 1, R11164 += 1 };
  s0 -> s3 [70, 70] { R11164 += 1, R11100 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R11164 += 1, R11100 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R11164 += 1, R11100 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R11164 += 1, R11100 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 65535] { R11164 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R11164 += 1, R11100 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R11164 += 1, R11100 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R11164 += 1, R11100 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R11164 += 1, R11100 += 1, R141 += 1, R142 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R11164 += 1, R11099 += 1, R11100 += 1 };
  s2 -> s3 [70, 70] { R11164 += 1, R11100 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R11164 += 1, R11100 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R11164 += 1, R11100 += 1, R141 += 1, R142 += 1 };
  s3 -> s3 [0, 65535] { R11164 += 1, R11100 += 1, R141 += 1, R142 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R11164 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R11164 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11164 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R11166 += 1, R11102 += 1, R147 += 1, R148 += 1 };
  s0 -> s0 [0, 65535] { R11165 += 1, R11166 += 1 };
  s0 -> s2 [0, 65535] { R11166 += 1, R11101 += 1, R11102 += 1 };
  s0 -> s3 [70, 70] { R11166 += 1, R11102 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R11166 += 1, R11102 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R11166 += 1, R11102 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R11166 += 1, R11102 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 65535] { R11166 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R11166 += 1, R11102 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R11166 += 1, R11102 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R11166 += 1, R11102 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R11166 += 1, R11102 += 1, R147 += 1, R148 += 1 };
  s2 -> s2 [0, 65535] { R11166 += 1, R11101 += 1, R11102 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R11166 += 1, R11102 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R11166 += 1, R11102 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R11166 += 1, R11102 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R11166 += 1, R11102 += 1, R147 += 1, R148 += 1 };
  s3 -> s6 [0, 65535] { R11166 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R11166 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11166 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R11168 += 1, R11104 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R11168 += 1, R11104 += 1, R151 += 1, R152 += 1 };
  s0 -> s3 [0, 65535] { R11168 += 1, R11103 += 1, R11104 += 1 };
  s0 -> s0 [0, 65535] { R11167 += 1, R11168 += 1 };
  s0 -> s4 [70, 70] { R11168 += 1, R11104 += 1, R151 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R11168 += 1, R11104 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R11168 += 1, R11104 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R11168 += 1, R11104 += 1, R151 += 1, R152 += 1 };
  s0 -> s1 [71, 74] { R11168 += 1, R11104 += 1, R152 += 1 };
  s0 -> s2 [71, 65535] { R11168 += 1, R11104 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R11168 += 1, R11104 += 1, R152 += 1 };
  s0 -> s1 [76, 65535] { R11168 += 1, R11104 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R11168 += 1, R11104 += 1, R152 += 1 };
  s1 -> s5 [70, 70] { R11168 += 1, R11104 += 1, R152 += 1 };
  s1 -> s6 [70, 70] { R11168 += 1, R11104 += 1, R152 += 1 };
  s1 -> s1 [71, 74] { R11168 += 1, R11104 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R11168 += 1, R11104 += 1, R152 += 1 };
  s1 -> s1 [76, 65535] { R11168 += 1, R11104 += 1, R152 += 1 };
  s2 -> s1 [0, 69] { R11168 += 1, R11104 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R11168 += 1, R11104 += 1, R151 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R11168 += 1, R11104 += 1, R151 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R11168 += 1, R11104 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R11168 += 1, R11104 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R11168 += 1, R11104 += 1, R151 += 1, R152 += 1 };
  s2 -> s1 [71, 74] { R11168 += 1, R11104 += 1, R152 += 1 };
  s2 -> s2 [71, 65535] { R11168 += 1, R11104 += 1, R151 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R11168 += 1, R11104 += 1, R152 += 1 };
  s2 -> s1 [76, 65535] { R11168 += 1, R11104 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R11168 += 1, R11104 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R11168 += 1, R11104 += 1, R151 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R11168 += 1, R11103 += 1, R11104 += 1 };
  s3 -> s4 [70, 70] { R11168 += 1, R11104 += 1, R151 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R11168 += 1, R11104 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R11168 += 1, R11104 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R11168 += 1, R11104 += 1, R151 += 1, R152 += 1 };
  s3 -> s1 [71, 74] { R11168 += 1, R11104 += 1, R152 += 1 };
  s3 -> s2 [71, 65535] { R11168 += 1, R11104 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R11168 += 1, R11104 += 1, R152 += 1 };
  s3 -> s1 [76, 65535] { R11168 += 1, R11104 += 1, R152 += 1 };
  s6 -> s6 [0, 74] { R11168 += 1, R11104 += 1, R152 += 1 };
  s6 -> s11 [75, 75] { R11168 += 1, R11104 += 1, R152 += 1 };
  s6 -> s6 [76, 65535] { R11168 += 1, R11104 += 1, R152 += 1 };
  s7 -> s6 [0, 74] { R11168 += 1, R11104 += 1, R152 += 1 };
  s7 -> s7 [0, 65535] { R11168 += 1, R11104 += 1, R151 += 1, R152 += 1 };
  s7 -> s11 [75, 75] { R11168 += 1, R11104 += 1, R152 += 1 };
  s7 -> s6 [76, 65535] { R11168 += 1, R11104 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R11168 += 1, R11104 += 1, R152 += 1 };
  s8 -> s8 [0, 65535] { R11168 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R11168 += 1, R11104 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R11168 += 1, R11104 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R11168 += 1, R11104 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R11168 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R11168 += 1 };
  s11 -> s11 [0, 65535] { R11168 += 1, R11104 += 1, R152 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R11168 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R11170 += 1, R11106 += 1, R155 += 1, R156 += 1 };
  s0 -> s2 [0, 65535] { R11170 += 1, R11105 += 1, R11106 += 1 };
  s0 -> s0 [0, 65535] { R11169 += 1, R11170 += 1 };
  s0 -> s3 [70, 70] { R11170 += 1, R11106 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R11170 += 1, R11106 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R11170 += 1, R11106 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R11170 += 1, R11106 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 65535] { R11170 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R11170 += 1, R11106 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R11170 += 1, R11106 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R11170 += 1, R11106 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R11170 += 1, R11106 += 1, R155 += 1, R156 += 1 };
  s2 -> s2 [0, 65535] { R11170 += 1, R11105 += 1, R11106 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R11170 += 1, R11106 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R11170 += 1, R11106 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R11170 += 1, R11106 += 1, R155 += 1, R156 += 1 };
  s3 -> s3 [0, 65535] { R11170 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R11170 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R11170 += 1, R11106 += 1, R155 += 1, R156 += 1 };
  s5 -> s5 [0, 65535] { R11170 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R11172 += 1, R11108 += 1, R161 += 1, R162 += 1 };
  s0 -> s2 [0, 65535] { R11172 += 1, R11107 += 1, R11108 += 1 };
  s0 -> s0 [0, 65535] { R11171 += 1, R11172 += 1 };
  s0 -> s3 [70, 70] { R11172 += 1, R11108 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R11172 += 1, R11108 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R11172 += 1, R11108 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R11172 += 1, R11108 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535] { R11172 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R11172 += 1, R11108 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R11172 += 1, R11108 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R11172 += 1, R11108 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R11172 += 1, R11108 += 1, R161 += 1, R162 += 1 };
  s2 -> s2 [0, 65535] { R11172 += 1, R11107 += 1, R11108 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R11172 += 1, R11108 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R11172 += 1, R11108 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R11172 += 1, R11108 += 1, R161 += 1, R162 += 1 };
  s3 -> s3 [0, 65535] { R11172 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R11172 += 1, R11108 += 1, R161 += 1, R162 += 1 };
  s4 -> s5 [0, 65535] { R11172 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R11172 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R11174 += 1, R11110 += 1, R167 += 1, R168 += 1 };
  s0 -> s2 [0, 65535] { R11174 += 1, R11109 += 1, R11110 += 1 };
  s0 -> s0 [0, 65535] { R11173 += 1, R11174 += 1 };
  s0 -> s3 [70, 70] { R11174 += 1, R11110 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R11174 += 1, R11110 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R11174 += 1, R11110 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R11174 += 1, R11110 += 1, R167 += 1, R168 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R11174 += 1 };
  s1 -> s3 [70, 70] { R11174 += 1, R11110 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R11174 += 1, R11110 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R11174 += 1, R11110 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R11174 += 1, R11110 += 1, R167 += 1, R168 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R11174 += 1, R11109 += 1, R11110 += 1 };
  s2 -> s3 [70, 70] { R11174 += 1, R11110 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R11174 += 1, R11110 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R11174 += 1, R11110 += 1, R167 += 1, R168 += 1 };
  s3 -> s6 [0, 65535] { R11174 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R11174 += 1, R11110 += 1, R167 += 1, R168 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R11174 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11174 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R11176 += 1, R11112 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s2 [0, 69] { R11176 += 1, R11112 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s3 [0, 69] { R11176 += 1, R11112 += 1, R175 += 1, R176 += 1 };
  s0 -> s0 [0, 65535] { R11175 += 1, R11176 += 1 };
  s0 -> s4 [0, 65535] { R11176 += 1, R11111 += 1, R11112 += 1 };
  s0 -> s5 [70, 70] { R11176 += 1, R11112 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s6 [70, 70] { R11176 += 1, R11112 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s7 [70, 70] { R11176 += 1, R11112 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s8 [70, 70] { R11176 += 1, R11112 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s9 [70, 70] { R11176 += 1, R11112 += 1, R175 += 1, R176 += 1 };
  s0 -> s10 [70, 70] { R11176 += 1, R11112 += 1, R175 += 1, R176 += 1 };
  s0 -> s1 [71, 65535] { R11176 += 1, R11112 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s2 [71, 65535] { R11176 += 1, R11112 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s3 [71, 65535] { R11176 += 1, R11112 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [0, 69] { R11176 += 1, R11112 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s14 [0, 69] { R11176 += 1, R11112 += 1, R176 += 1 };
  s1 -> s11 [70, 70] { R11176 += 1, R11112 += 1, R176 += 1 };
  s1 -> s6 [70, 70] { R11176 += 1, R11112 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s8 [70, 70] { R11176 += 1, R11112 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s15 [70, 70] { R11176 += 1, R11112 += 1, R176 += 1 };
  s1 -> s1 [71, 65535] { R11176 += 1, R11112 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s14 [71, 65535] { R11176 += 1, R11112 += 1, R176 += 1 };
  s2 -> s1 [0, 69] { R11176 += 1, R11112 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [0, 69] { R11176 += 1, R11112 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s5 [70, 70] { R11176 += 1, R11112 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s6 [70, 70] { R11176 += 1, R11112 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s7 [70, 70] { R11176 += 1, R11112 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s8 [70, 70] { R11176 += 1, R11112 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s1 [71, 65535] { R11176 += 1, R11112 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [71, 65535] { R11176 += 1, R11112 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s1 [0, 69] { R11176 += 1, R11112 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s2 [0, 69] { R11176 += 1, R11112 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s3 [0, 69] { R11176 += 1, R11112 += 1, R175 += 1, R176 += 1 };
  s3 -> s5 [70, 70] { R11176 += 1, R11112 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s6 [70, 70] { R11176 += 1, R11112 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s7 [70, 70] { R11176 += 1, R11112 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s8 [70, 70] { R11176 += 1, R11112 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s9 [70, 70] { R11176 += 1, R11112 += 1, R175 += 1, R176 += 1 };
  s3 -> s10 [70, 70] { R11176 += 1, R11112 += 1, R175 += 1, R176 += 1 };
  s3 -> s1 [71, 65535] { R11176 += 1, R11112 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s2 [71, 65535] { R11176 += 1, R11112 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s3 [71, 65535] { R11176 += 1, R11112 += 1, R175 += 1, R176 += 1 };
  s4 -> s1 [0, 69] { R11176 += 1, R11112 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s2 [0, 69] { R11176 += 1, R11112 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s3 [0, 69] { R11176 += 1, R11112 += 1, R175 += 1, R176 += 1 };
  s4 -> s4 [0, 65535] { R11176 += 1, R11111 += 1, R11112 += 1 };
  s4 -> s5 [70, 70] { R11176 += 1, R11112 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s6 [70, 70] { R11176 += 1, R11112 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s7 [70, 70] { R11176 += 1, R11112 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s8 [70, 70] { R11176 += 1, R11112 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s9 [70, 70] { R11176 += 1, R11112 += 1, R175 += 1, R176 += 1 };
  s4 -> s10 [70, 70] { R11176 += 1, R11112 += 1, R175 += 1, R176 += 1 };
  s4 -> s1 [71, 65535] { R11176 += 1, R11112 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s2 [71, 65535] { R11176 += 1, R11112 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s3 [71, 65535] { R11176 += 1, R11112 += 1, R175 += 1, R176 += 1 };
  s6 -> s11 [0, 65535] { R11176 += 1, R11112 += 1, R176 += 1 };
  s6 -> s6 [0, 65535] { R11176 += 1, R11112 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s7 -> s6 [0, 65535] { R11176 += 1, R11112 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s7 -> s7 [0, 65535] { R11176 += 1, R11112 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s9 -> s6 [0, 65535] { R11176 += 1, R11112 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s9 -> s7 [0, 65535] { R11176 += 1, R11112 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s9 -> s9 [0, 65535] { R11176 += 1, R11112 += 1, R175 += 1, R176 += 1 };
  s11 -> s11 [0, 65535] { R11176 += 1, R11112 += 1, R176 += 1 };
  s11 -> s12 [0, 65535] { R11176 += 1 };
  s11 -> s13 [0, 65535];
  s12 -> s12 [0, 65535] { R11176 += 1 };
  s12 -> s13 [0, 65535];
  s13 -> s13 [0, 65535];
  s14 -> s14 [0, 69] { R11176 += 1, R11112 += 1, R176 += 1 };
  s14 -> s14 [0, 65535] { R11176 += 1 };
  s14 -> s13 [0, 65535];
  s14 -> s11 [70, 70] { R11176 += 1, R11112 += 1, R176 += 1 };
  s14 -> s15 [70, 70] { R11176 += 1, R11112 += 1, R176 += 1 };
  s14 -> s14 [71, 65535] { R11176 += 1, R11112 += 1, R176 += 1 };
  s15 -> s15 [0, 65535] { R11176 += 1 };
  s15 -> s13 [0, 65535];
  accepting s12, s13, s14, s15, s11;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R11178 += 1, R11114 += 1, R7353 += 1, R7354 += 1 };
  s0 -> s0 [0, 65535] { R11177 += 1, R11178 += 1 };
  s0 -> s2 [0, 65535] { R11178 += 1, R11113 += 1, R11114 += 1 };
  s0 -> s3 [70, 70] { R11178 += 1, R11114 += 1, R7353 += 1, R7354 += 1 };
  s0 -> s4 [70, 70] { R11178 += 1, R11114 += 1, R7353 += 1, R7354 += 1 };
  s0 -> s1 [71, 65535] { R11178 += 1, R11114 += 1, R7353 += 1, R7354 += 1 };
  s1 -> s1 [0, 69] { R11178 += 1, R11114 += 1, R7353 += 1, R7354 += 1 };
  s1 -> s1 [0, 65535] { R11178 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R11178 += 1, R11114 += 1, R7353 += 1, R7354 += 1 };
  s1 -> s4 [70, 70] { R11178 += 1, R11114 += 1, R7353 += 1, R7354 += 1 };
  s1 -> s1 [71, 65535] { R11178 += 1, R11114 += 1, R7353 += 1, R7354 += 1 };
  s2 -> s1 [0, 69] { R11178 += 1, R11114 += 1, R7353 += 1, R7354 += 1 };
  s2 -> s2 [0, 65535] { R11178 += 1, R11113 += 1, R11114 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R11178 += 1, R11114 += 1, R7353 += 1, R7354 += 1 };
  s2 -> s4 [70, 70] { R11178 += 1, R11114 += 1, R7353 += 1, R7354 += 1 };
  s2 -> s1 [71, 65535] { R11178 += 1, R11114 += 1, R7353 += 1, R7354 += 1 };
  s3 -> s3 [0, 65535] { R11178 += 1, R11114 += 1, R7353 += 1, R7354 += 1 };
  s3 -> s6 [0, 65535] { R11178 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R11178 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11178 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R11180 += 1, R11116 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s0 -> s2 [0, 69] { R11180 += 1, R11116 += 1, R10225 += 1, R10226 += 1 };
  s0 -> s3 [0, 65535] { R11180 += 1, R11115 += 1, R11116 += 1 };
  s0 -> s0 [0, 65535] { R11179 += 1, R11180 += 1 };
  s0 -> s4 [70, 70] { R11180 += 1, R11116 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s0 -> s5 [70, 70] { R11180 += 1, R11116 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s0 -> s6 [70, 70] { R11180 += 1, R11116 += 1, R10225 += 1, R10226 += 1 };
  s0 -> s7 [70, 70] { R11180 += 1, R11116 += 1, R10225 += 1, R10226 += 1 };
  s0 -> s1 [71, 65535] { R11180 += 1, R11116 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s0 -> s2 [71, 65535] { R11180 += 1, R11116 += 1, R10225 += 1, R10226 += 1 };
  s1 -> s1 [0, 69] { R11180 += 1, R11116 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s1 -> s1 [0, 65535] { R11180 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [70, 70] { R11180 += 1, R11116 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s1 -> s5 [70, 70] { R11180 += 1, R11116 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s1 -> s1 [71, 65535] { R11180 += 1, R11116 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s2 -> s1 [0, 69] { R11180 += 1, R11116 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s2 -> s2 [0, 69] { R11180 += 1, R11116 += 1, R10225 += 1, R10226 += 1 };
  s2 -> s4 [70, 70] { R11180 += 1, R11116 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s2 -> s5 [70, 70] { R11180 += 1, R11116 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s2 -> s6 [70, 70] { R11180 += 1, R11116 += 1, R10225 += 1, R10226 += 1 };
  s2 -> s7 [70, 70] { R11180 += 1, R11116 += 1, R10225 += 1, R10226 += 1 };
  s2 -> s1 [71, 65535] { R11180 += 1, R11116 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s2 -> s2 [71, 65535] { R11180 += 1, R11116 += 1, R10225 += 1, R10226 += 1 };
  s3 -> s1 [0, 69] { R11180 += 1, R11116 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s3 -> s2 [0, 69] { R11180 += 1, R11116 += 1, R10225 += 1, R10226 += 1 };
  s3 -> s3 [0, 65535] { R11180 += 1, R11115 += 1, R11116 += 1 };
  s3 -> s4 [70, 70] { R11180 += 1, R11116 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s3 -> s5 [70, 70] { R11180 += 1, R11116 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s3 -> s6 [70, 70] { R11180 += 1, R11116 += 1, R10225 += 1, R10226 += 1 };
  s3 -> s7 [70, 70] { R11180 += 1, R11116 += 1, R10225 += 1, R10226 += 1 };
  s3 -> s1 [71, 65535] { R11180 += 1, R11116 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s3 -> s2 [71, 65535] { R11180 += 1, R11116 += 1, R10225 += 1, R10226 += 1 };
  s4 -> s4 [0, 65535] { R11180 += 1, R11116 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s4 -> s9 [0, 65535] { R11180 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R11180 += 1 };
  s5 -> s8 [0, 65535];
  s7 -> s4 [0, 65535] { R11180 += 1, R11116 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s7 -> s7 [0, 65535] { R11180 += 1, R11116 += 1, R10225 += 1, R10226 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R11180 += 1 };
  s9 -> s8 [0, 65535];
  accepting s4, s8, s5, s9, s1;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s0 -> s2 [0, 69] { R11182 += 1, R11118 += 1, R11025 += 1, R11026 += 1 };
  s0 -> s3 [0, 69] { R11182 += 1, R11118 += 1, R11026 += 1, R11027 += 1, R11028 += 1 };
  s0 -> s0 [0, 65535] { R11181 += 1, R11182 += 1 };
  s0 -> s4 [0, 65535] { R11182 += 1, R11117 += 1, R11118 += 1 };
  s0 -> s5 [70, 70] { R11182 += 1, R11118 += 1, R11026 += 1, R11027 += 1, R11028 += 1 };
  s0 -> s6 [70, 70] { R11182 += 1, R11118 += 1, R11025 += 1, R11026 += 1 };
  s0 -> s7 [70, 70] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s0 -> s8 [70, 70] { R11182 += 1, R11118 += 1, R11025 += 1, R11026 += 1 };
  s0 -> s9 [70, 70] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s0 -> s10 [70, 70] { R11182 += 1, R11118 += 1, R11026 += 1, R11027 += 1, R11028 += 1 };
  s0 -> s1 [71, 74] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s0 -> s2 [71, 65535] { R11182 += 1, R11118 += 1, R11025 += 1, R11026 += 1 };
  s0 -> s3 [71, 65535] { R11182 += 1, R11118 += 1, R11026 += 1, R11027 += 1, R11028 += 1 };
  s0 -> s11 [75, 75] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s0 -> s1 [77, 65535] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s1 -> s1 [0, 69] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s1 -> s7 [70, 70] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s1 -> s9 [70, 70] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s1 -> s1 [71, 74] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s1 -> s11 [75, 75] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s1 -> s1 [77, 65535] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s2 -> s1 [0, 69] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s2 -> s2 [0, 69] { R11182 += 1, R11118 += 1, R11025 += 1, R11026 += 1 };
  s2 -> s3 [0, 69] { R11182 += 1, R11118 += 1, R11026 += 1, R11027 += 1, R11028 += 1 };
  s2 -> s5 [70, 70] { R11182 += 1, R11118 += 1, R11026 += 1, R11027 += 1, R11028 += 1 };
  s2 -> s6 [70, 70] { R11182 += 1, R11118 += 1, R11025 += 1, R11026 += 1 };
  s2 -> s7 [70, 70] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s2 -> s8 [70, 70] { R11182 += 1, R11118 += 1, R11025 += 1, R11026 += 1 };
  s2 -> s9 [70, 70] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s2 -> s10 [70, 70] { R11182 += 1, R11118 += 1, R11026 += 1, R11027 += 1, R11028 += 1 };
  s2 -> s1 [71, 74] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s2 -> s2 [71, 65535] { R11182 += 1, R11118 += 1, R11025 += 1, R11026 += 1 };
  s2 -> s3 [71, 65535] { R11182 += 1, R11118 += 1, R11026 += 1, R11027 += 1, R11028 += 1 };
  s2 -> s11 [75, 75] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s2 -> s1 [77, 65535] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s3 -> s1 [0, 69] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s3 -> s3 [0, 69] { R11182 += 1, R11118 += 1, R11026 += 1, R11027 += 1, R11028 += 1 };
  s3 -> s5 [70, 70] { R11182 += 1, R11118 += 1, R11026 += 1, R11027 += 1, R11028 += 1 };
  s3 -> s7 [70, 70] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s3 -> s9 [70, 70] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s3 -> s10 [70, 70] { R11182 += 1, R11118 += 1, R11026 += 1, R11027 += 1, R11028 += 1 };
  s3 -> s1 [71, 74] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s3 -> s3 [71, 65535] { R11182 += 1, R11118 += 1, R11026 += 1, R11027 += 1, R11028 += 1 };
  s3 -> s11 [75, 75] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s3 -> s1 [77, 65535] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s4 -> s1 [0, 69] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s4 -> s2 [0, 69] { R11182 += 1, R11118 += 1, R11025 += 1, R11026 += 1 };
  s4 -> s3 [0, 69] { R11182 += 1, R11118 += 1, R11026 += 1, R11027 += 1, R11028 += 1 };
  s4 -> s4 [0, 65535] { R11182 += 1, R11117 += 1, R11118 += 1 };
  s4 -> s5 [70, 70] { R11182 += 1, R11118 += 1, R11026 += 1, R11027 += 1, R11028 += 1 };
  s4 -> s6 [70, 70] { R11182 += 1, R11118 += 1, R11025 += 1, R11026 += 1 };
  s4 -> s7 [70, 70] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s4 -> s8 [70, 70] { R11182 += 1, R11118 += 1, R11025 += 1, R11026 += 1 };
  s4 -> s9 [70, 70] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s4 -> s10 [70, 70] { R11182 += 1, R11118 += 1, R11026 += 1, R11027 += 1, R11028 += 1 };
  s4 -> s1 [71, 74] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s4 -> s2 [71, 65535] { R11182 += 1, R11118 += 1, R11025 += 1, R11026 += 1 };
  s4 -> s3 [71, 65535] { R11182 += 1, R11118 += 1, R11026 += 1, R11027 += 1, R11028 += 1 };
  s4 -> s11 [75, 75] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s4 -> s1 [77, 65535] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s5 -> s9 [0, 74] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s5 -> s5 [0, 65535] { R11182 += 1, R11118 += 1, R11026 += 1, R11027 += 1, R11028 += 1 };
  s5 -> s14 [75, 75] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s5 -> s9 [77, 65535] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s6 -> s9 [0, 74] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s6 -> s5 [0, 65535] { R11182 += 1, R11118 += 1, R11026 += 1, R11027 += 1, R11028 += 1 };
  s6 -> s6 [0, 65535] { R11182 += 1, R11118 += 1, R11025 += 1, R11026 += 1 };
  s6 -> s14 [75, 75] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s6 -> s9 [77, 65535] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s9 -> s9 [0, 74] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s9 -> s14 [75, 75] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s9 -> s9 [77, 65535] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s11 -> s11 [0, 69] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s11 [0, 65535] { R11182 += 1 };
  s11 -> s13 [70, 70] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s11 -> s14 [70, 70] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s11 -> s11 [71, 75] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s11 -> s11 [77, 65535] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R11182 += 1 };
  s14 -> s14 [0, 75] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R11182 += 1 };
  s14 -> s14 [77, 65535] { R11182 += 1, R11118 += 1, R11026 += 1, R11028 += 1 };
  accepting s11, s12, s13, s14;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R11062 && R3 = R11182 && R25 - R11182 = -1 && R26 = R11182 && R27 - R11182 = -1 && R28 = R11182 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R11030 + -1*R11026 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R11030 + -1*R11026 - R130 = 0 && R129 + R11029 + R11025 = 0 && R131 + R11031 + R11027 = 0 && R132 + R11032 + R11028 = 0 && R11061 = 0 && R11093 = 0 && R11094 = 0 && R11103 = 0 && R11104 = 0 && R11111 = 0 && R11112 = 0 && R11115 = 0 && R11116 = 0 && R11117 = 0 && R11118 = 0 && R11119 = 0 && R11120 = R11182 && R11121 = 0 && R11122 = R11182 && R11123 = 0 && R11124 = R11182 && R11125 = 0 && R11126 = R11182 && R11127 = 0 && R11128 = R11182 && R11129 = 0 && R11130 = R11182 && R11131 = 0 && R11132 = R11182 && R11133 = 0 && R11134 = R11182 && R11135 = 0 && R11136 = R11182 && R11137 = 0 && R11138 = R11182 && R11139 = 0 && R11140 = R11182 && R11141 = 0 && R11142 = R11182 && R11143 = 0 && R11144 = R11182 && R11145 = 0 && R11146 = R11182 && R11147 = 0 && R11148 = R11182 && R11149 = 0 && R11150 = R11182 && R11151 = 0 && R11152 = R11182 && R11153 = 0 && R11154 = R11182 && R11155 = 0 && R11156 = R11182 && R11157 = 0 && R11158 = R11182 && R11159 = 0 && R11160 = R11182 && R11161 = 0 && R11162 = R11182 && R11163 = 0 && R11164 = R11182 && R11165 = 0 && R11166 = R11182 && R11167 = 0 && R11168 = R11182 && R11169 = 0 && R11170 = R11182 && R11171 = 0 && R11172 = R11182 && R11173 = 0 && R11174 = R11182 && R11175 = 0 && R11176 = R11182 && R11177 = 0 && R11178 = R11182 && R11179 = 0 && R11180 = R11182 && R11181 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R11030 + -1*R11026 - R130 < 1 && -1 < R11062 && 0 < R11182 && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R11030 + -1*R11026 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R7359 + R7355 = 0 && R114 + R7360 + R7356 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R11030 + -1*R11026 - R130 = 0 || R130 + R11030 + R11026 < 1) && (R81 + R158 + R155 = 0 || R130 + R11030 + R11026 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R11030 + -1*R11026 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R11030 + R11026 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R11030 + -1*R11026 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R11030 + R11026 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R11030 + -1*R11026 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R11030 + R11026 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R7357 + R7353 != 0 || R112 + R7358 + R7354 + -1*R11030 + -1*R11026 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R11030 + R11026 = 0)) && (R113 + R7359 + R7355 != 0 || R83 + R160 + R157 + -1*R7360 + -1*R7356 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R10230 + R10225 != 0 || R120 + R10231 + R10226 + -1*R11030 + -1*R11026 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R11030 + R11026 = 0)) && (R11033 != 0 || R11034 = R11062 || (R22 = 0 && R11062 = 0)) && (R11035 != 0 || R11036 = R11062 || (R22 = 0 && R11062 = 0)) && (R11037 != 0 || R11038 = R11062 || (R22 = 0 && R11062 = 0)) && (R11039 != 0 || R11040 = R11062 || (R22 = 0 && R11062 = 0)) && (R11041 != 0 || R11042 = R11062 || (R22 = 0 && R11062 = 0)) && (R11043 != 0 || R11044 = R11062 || (R22 = 0 && R11062 = 0)) && (R11045 != 0 || R11046 = R11062 || (R22 = 0 && R11062 = 0)) && (R11047 != 0 || R11048 = R11062 || (R22 = 0 && R11062 = 0)) && (R11049 != 0 || R11050 = R11062 || (R22 = 0 && R11062 = 0)) && (R11051 != 0 || R11052 = R11062 || (R22 = 0 && R11062 = 0)) && (R11053 != 0 || R11054 = R11062 || (R22 = 0 && R11062 = 0)) && (R11055 != 0 || R11056 = R11062 || (R22 = 0 && R11062 = 0)) && (R11057 != 0 || R11058 = R11062 || (R22 = 0 && R11062 = 0)) && (R11059 != 0 || R11060 = R11062 || (R22 = 0 && R11062 = 0)) && (R23 = 0 || (R11091 = 0 && R11092 = 0)) && (R23 = 0 || (R11095 = 0 && R11096 = 0)) && (R23 = 0 || (R11097 = 0 && R11098 = 0)) && (R23 = 0 || (R11099 = 0 && R11100 = 0)) && (R23 = 0 || (R11101 = 0 && R11102 = 0)) && (R23 = 0 || (R11105 = 0 && R11106 = 0)) && (R23 = 0 || (R11107 = 0 && R11108 = 0)) && (R23 = 0 || (R11109 = 0 && R11110 = 0)) && (R23 = 0 || (R11113 = 0 && R11114 = 0)) && (R24 = 0 || (R11063 = 0 && R11064 = 0)) && (R24 = 0 || (R11065 = 0 && R11066 = 0)) && (R24 = 0 || (R11067 = 0 && R11068 = 0)) && (R24 = 0 || (R11069 = 0 && R11070 = 0)) && (R24 = 0 || (R11071 = 0 && R11072 = 0)) && (R24 = 0 || (R11073 = 0 && R11074 = 0)) && (R24 = 0 || (R11075 = 0 && R11076 = 0)) && (R24 = 0 || (R11077 = 0 && R11078 = 0)) && (R24 = 0 || (R11079 = 0 && R11080 = 0)) && (R24 = 0 || (R11081 = 0 && R11082 = 0)) && (R24 = 0 || (R11083 = 0 && R11084 = 0)) && (R24 = 0 || (R11085 = 0 && R11086 = 0)) && (R24 = 0 || (R11087 = 0 && R11088 = 0)) && (R24 = 0 || (R11089 = 0 && R11090 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R11030 + R11026 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R11030 + R11026 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R11030 + R11026 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R7357 + R7353 = 0 || (R83 + R160 + R157 = 0 && R130 + R11030 + R11026 = 0)) && (R113 + R7359 + R7355 = 0 || R83 + R160 + R157 < 1) && (R119 + R10230 + R10225 = 0 || (R83 + R160 + R157 = 0 && R130 + R11030 + R11026 = 0)) && (R123 + R10234 + R10229 = 0 || (R121 + R10232 + R10227 = 0 && R122 + R10233 + R10228 = 0)) && (R11033 = 0 || (R22 = 0 && R11062 = 0)) && (R11035 = 0 || (R22 = 0 && R11062 = 0)) && (R11037 = 0 || (R22 = 0 && R11062 = 0)) && (R11039 = 0 || (R22 = 0 && R11062 = 0)) && (R11041 = 0 || (R22 = 0 && R11062 = 0)) && (R11043 = 0 || (R22 = 0 && R11062 = 0)) && (R11045 = 0 || (R22 = 0 && R11062 = 0)) && (R11047 = 0 || (R22 = 0 && R11062 = 0)) && (R11049 = 0 || (R22 = 0 && R11062 = 0)) && (R11051 = 0 || (R22 = 0 && R11062 = 0)) && (R11053 = 0 || (R22 = 0 && R11062 = 0)) && (R11055 = 0 || (R22 = 0 && R11062 = 0)) && (R11057 = 0 || (R22 = 0 && R11062 = 0)) && (R11059 = 0 || (R22 = 0 && R11062 = 0));
// End of Parikh automata intersection problem
