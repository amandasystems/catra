// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R2, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R5, R5921, R5922, R5923, R5924, R5925, R5926, R5927, R5928, R5929, R5930, R63, R65, R67, R68, R6879, R6880, R6881, R6882, R6883, R6884, R6885, R6886, R6887, R6888, R6889, R6890, R6891, R6892, R6893, R6894, R6895, R6896, R6897, R6898, R6899, R69, R6900, R6901, R6902, R6903, R6904, R6905, R6906, R6907, R6908, R6909, R6910, R6911, R6912, R6913, R6914, R6915, R6916, R6917, R6918, R6919, R6920, R6921, R6922, R6923, R6924, R6925, R6926, R6927, R6928, R6929, R6930, R6931, R6932, R6933, R6934, R6935, R6936, R6937, R6938, R6939, R6940, R6941, R6942, R6943, R6944, R6945, R6946, R6947, R6948, R6949, R6950, R6951, R6952, R6953, R6954, R6955, R6956, R6957, R6958, R6959, R6960, R6961, R6962, R6963, R6964, R6965, R6966, R6967, R6968, R6969, R6970, R6971, R6972, R6973, R6974, R6975, R6976, R6977, R6978, R6979, R6980, R6981, R6982, R6983, R6984, R6985, R6986, R6987, R6988, R6989, R6990, R6991, R6992, R6993, R6994, R6995, R6996, R6997, R6998, R6999, R7000, R7001, R7002, R7003, R7004, R7005, R7006, R7007, R7008, R7009, R7010, R7011, R7012, R7013, R7014, R7015, R7016, R7017, R7018, R7019, R7020, R7021, R7022, R7023, R7024, R7025, R7026, R7027, R7028, R7029, R7030, R7031, R7032, R7033, R7034, R7035, R7036, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R26 += 1 };
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R6918 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R6917 += 1, R6918 += 1 };
  s1 -> s1 [0, 65535] { R6918 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R6920 += 1 };
  s0 -> s0 [0, 65535] { R6919 += 1, R6920 += 1 };
  s0 -> s2 [70, 70] { R6920 += 1 };
  s0 -> s3 [70, 70] { R6920 += 1 };
  s0 -> s1 [76, 65535] { R6920 += 1 };
  s1 -> s1 [0, 69] { R6920 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6920 += 1 };
  s1 -> s3 [70, 70] { R6920 += 1 };
  s1 -> s1 [76, 65535] { R6920 += 1 };
  s2 -> s2 [0, 70] { R6920 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R6920 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R6922 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R6921 += 1, R6922 += 1 };
  s0 -> s2 [70, 70] { R6922 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R6922 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R6922 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R6922 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6922 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R6922 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R6922 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R6922 += 1, R63 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R6924 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R6923 += 1, R6924 += 1 };
  s0 -> s2 [70, 70] { R6924 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R6924 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R6924 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R6924 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6924 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R6924 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R6924 += 1, R65 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R6924 += 1, R65 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R6926 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R6925 += 1, R6926 += 1 };
  s0 -> s2 [70, 70] { R6926 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R6926 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R6926 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R6926 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6926 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R6926 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R6926 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R6926 += 1, R67 += 1, R68 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R6928 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R6927 += 1, R6928 += 1 };
  s0 -> s2 [70, 70] { R6928 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R6928 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R6928 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R6928 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6928 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R6928 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R6928 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R6928 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R6930 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R6929 += 1, R6930 += 1 };
  s0 -> s2 [70, 70] { R6930 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R6930 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R6930 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R6930 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6930 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R6930 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R6930 += 1, R77 += 1, R78 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R6930 += 1, R77 += 1, R78 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R6932 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R6931 += 1, R6932 += 1 };
  s0 -> s2 [70, 70] { R6932 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R6932 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R6932 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R6932 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6932 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R6932 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R6932 += 1, R81 += 1, R82 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R6932 += 1, R81 += 1, R82 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R6934 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R6933 += 1, R6934 += 1 };
  s0 -> s2 [70, 70] { R6934 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R6934 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R6934 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R6934 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6934 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R6934 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R6934 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R6934 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R6936 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R6935 += 1, R6936 += 1 };
  s0 -> s2 [70, 70] { R6936 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R6936 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R6936 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R6936 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6936 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R6936 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R6936 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R6936 += 1, R93 += 1, R94 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R6938 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R6937 += 1, R6938 += 1 };
  s0 -> s2 [70, 70] { R6938 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R6938 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R6938 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R6938 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6938 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R6938 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R6938 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R6938 += 1, R101 += 1, R102 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R6940 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R6939 += 1, R6940 += 1 };
  s0 -> s2 [70, 70] { R6940 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R6940 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R6940 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R6940 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6940 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R6940 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R6940 += 1, R111 += 1, R112 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R6940 += 1, R111 += 1, R112 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R6942 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R6941 += 1, R6942 += 1 };
  s0 -> s2 [70, 70] { R6942 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R6942 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R6942 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R6942 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6942 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R6942 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R6942 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535] { R6942 += 1, R119 += 1, R120 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R6944 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R6943 += 1, R6944 += 1 };
  s0 -> s2 [70, 70] { R6944 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R6944 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R6944 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R6944 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6944 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R6944 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R6944 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R6944 += 1, R129 += 1, R130 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R6974 += 1 };
  s0 -> s0 [0, 65535] { R6973 += 1, R6974 += 1 };
  s0 -> s2 [70, 70] { R6974 += 1 };
  s0 -> s1 [71, 65535] { R6974 += 1 };
  s1 -> s1 [0, 69] { R6974 += 1 };
  s1 -> s2 [70, 70] { R6974 += 1 };
  s1 -> s1 [71, 65535] { R6974 += 1 };
  s2 -> s2 [0, 65535] { R6974 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R6976 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R6975 += 1, R6976 += 1 };
  s1 -> s1 [0, 65535] { R6976 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R6978 += 1 };
  s0 -> s0 [0, 65535] { R6977 += 1, R6978 += 1 };
  s0 -> s2 [0, 65535] { R6978 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R6978 += 1 };
  s0 -> s1 [71, 65535] { R6978 += 1 };
  s1 -> s1 [0, 69] { R6978 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R6978 += 1 };
  s1 -> s1 [71, 65535] { R6978 += 1 };
  s2 -> s1 [0, 69] { R6978 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R6978 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R6978 += 1 };
  s2 -> s1 [71, 65535] { R6978 += 1 };
  s3 -> s3 [0, 65535] { R6978 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R6980 += 1, R6888 += 1 };
  s0 -> s2 [0, 65535] { R6980 += 1, R6887 += 1, R6888 += 1 };
  s0 -> s0 [0, 65535] { R6979 += 1, R6980 += 1 };
  s0 -> s1 [71, 65535] { R6980 += 1, R6888 += 1 };
  s1 -> s1 [0, 69] { R6980 += 1, R6888 += 1 };
  s1 -> s1 [0, 65535] { R6980 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R6980 += 1, R6888 += 1 };
  s2 -> s1 [0, 69] { R6980 += 1, R6888 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R6980 += 1, R6887 += 1, R6888 += 1 };
  s2 -> s1 [71, 65535] { R6980 += 1, R6888 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R6982 += 1, R6889 += 1, R6890 += 1 };
  s0 -> s0 [0, 65535] { R6981 += 1, R6982 += 1 };
  s0 -> s2 [0, 65535] { R6982 += 1, R6890 += 1, R22 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R6982 += 1, R6889 += 1, R6890 += 1 };
  s1 -> s2 [0, 65535] { R6982 += 1, R6890 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R6982 += 1 };
  s2 -> s2 [0, 65535] { R6982 += 1, R6890 += 1, R22 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R6982 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R6984 += 1, R6892 += 1 };
  s0 -> s2 [0, 65535] { R6984 += 1, R6891 += 1, R6892 += 1 };
  s0 -> s0 [0, 65535] { R6983 += 1, R6984 += 1 };
  s0 -> s1 [75, 65535] { R6984 += 1, R6892 += 1 };
  s1 -> s1 [0, 70] { R6984 += 1, R6892 += 1 };
  s1 -> s1 [0, 65535] { R6984 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R6984 += 1, R6892 += 1 };
  s2 -> s1 [0, 70] { R6984 += 1, R6892 += 1 };
  s2 -> s2 [0, 65535] { R6984 += 1, R6891 += 1, R6892 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R6984 += 1, R6892 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R6986 += 1, R6894 += 1, R138 += 1 };
  s0 -> s0 [0, 65535] { R6985 += 1, R6986 += 1 };
  s0 -> s2 [0, 65535] { R6986 += 1, R6893 += 1, R6894 += 1 };
  s1 -> s1 [0, 65535] { R6986 += 1, R6894 += 1, R138 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R6986 += 1 };
  s2 -> s1 [0, 65535] { R6986 += 1, R6894 += 1, R138 += 1 };
  s2 -> s2 [0, 65535] { R6986 += 1, R6893 += 1, R6894 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R6986 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R6988 += 1, R6896 += 1 };
  s0 -> s0 [0, 65535] { R6987 += 1, R6988 += 1 };
  s0 -> s2 [0, 65535] { R6988 += 1, R6896 += 1, R140 += 1 };
  s0 -> s3 [0, 65535] { R6988 += 1, R6895 += 1, R6896 += 1 };
  s0 -> s1 [76, 65535] { R6988 += 1, R6896 += 1 };
  s1 -> s1 [0, 74] { R6988 += 1, R6896 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R6988 += 1 };
  s1 -> s1 [76, 65535] { R6988 += 1, R6896 += 1 };
  s2 -> s1 [0, 74] { R6988 += 1, R6896 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R6988 += 1, R6896 += 1, R140 += 1 };
  s2 -> s5 [0, 65535] { R6988 += 1 };
  s2 -> s1 [76, 65535] { R6988 += 1, R6896 += 1 };
  s3 -> s1 [0, 74] { R6988 += 1, R6896 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R6988 += 1, R6896 += 1, R140 += 1 };
  s3 -> s3 [0, 65535] { R6988 += 1, R6895 += 1, R6896 += 1 };
  s3 -> s1 [76, 65535] { R6988 += 1, R6896 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R6988 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R6989 += 1, R6990 += 1 };
  s0 -> s1 [0, 65535] { R6990 += 1, R6898 += 1, R144 += 1, R145 += 1 };
  s0 -> s2 [0, 65535] { R6990 += 1, R6897 += 1, R6898 += 1 };
  s0 -> s3 [0, 65535] { R6990 += 1, R6898 += 1, R145 += 1, R146 += 1 };
  s1 -> s1 [0, 65535] { R6990 += 1, R6898 += 1, R144 += 1, R145 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R6990 += 1, R6898 += 1, R145 += 1, R146 += 1 };
  s1 -> s6 [0, 65535] { R6990 += 1 };
  s2 -> s1 [0, 65535] { R6990 += 1, R6898 += 1, R144 += 1, R145 += 1 };
  s2 -> s2 [0, 65535] { R6990 += 1, R6897 += 1, R6898 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R6990 += 1, R6898 += 1, R145 += 1, R146 += 1 };
  s3 -> s4 [0, 65535] { R6990 += 1, R6898 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R6990 += 1, R6898 += 1, R145 += 1, R146 += 1 };
  s3 -> s6 [0, 65535] { R6990 += 1 };
  s4 -> s4 [0, 65535] { R6990 += 1, R6898 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R6990 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6990 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R6992 += 1, R6900 += 1, R150 += 1 };
  s0 -> s2 [0, 65535] { R6992 += 1, R6899 += 1, R6900 += 1 };
  s0 -> s0 [0, 65535] { R6991 += 1, R6992 += 1 };
  s0 -> s3 [0, 65535] { R6992 += 1, R6900 += 1, R149 += 1, R150 += 1 };
  s0 -> s4 [75, 75] { R6992 += 1, R6900 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R6992 += 1, R6900 += 1, R150 += 1 };
  s0 -> s1 [77, 65535] { R6992 += 1, R6900 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R6992 += 1, R6900 += 1, R150 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R6992 += 1 };
  s1 -> s1 [0, 65535] { R6992 += 1, R6900 += 1 };
  s1 -> s4 [75, 75] { R6992 += 1, R6900 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R6992 += 1, R6900 += 1, R150 += 1 };
  s1 -> s1 [77, 65535] { R6992 += 1, R6900 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R6992 += 1, R6900 += 1, R150 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R6992 += 1, R6899 += 1, R6900 += 1 };
  s2 -> s3 [0, 65535] { R6992 += 1, R6900 += 1, R149 += 1, R150 += 1 };
  s2 -> s4 [75, 75] { R6992 += 1, R6900 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R6992 += 1, R6900 += 1, R150 += 1 };
  s2 -> s1 [77, 65535] { R6992 += 1, R6900 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R6992 += 1, R6900 += 1, R150 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R6992 += 1, R6900 += 1, R149 += 1, R150 += 1 };
  s3 -> s7 [0, 65535] { R6992 += 1 };
  s3 -> s4 [75, 75] { R6992 += 1, R6900 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R6992 += 1, R6900 += 1, R150 += 1 };
  s3 -> s1 [77, 65535] { R6992 += 1, R6900 += 1, R150 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R6992 += 1, R6900 += 1 };
  s4 -> s7 [0, 65535] { R6992 += 1 };
  s5 -> s5 [0, 75] { R6992 += 1, R6900 += 1, R150 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R6992 += 1, R6900 += 1 };
  s5 -> s7 [0, 65535] { R6992 += 1 };
  s5 -> s5 [77, 65535] { R6992 += 1, R6900 += 1, R150 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R6992 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R6994 += 1, R6902 += 1, R154 += 1 };
  s0 -> s0 [0, 65535] { R6993 += 1, R6994 += 1 };
  s0 -> s2 [0, 65535] { R6994 += 1, R6902 += 1 };
  s0 -> s3 [0, 65535] { R6994 += 1, R6901 += 1, R6902 += 1 };
  s1 -> s1 [0, 65535] { R6994 += 1, R6902 += 1, R154 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R6994 += 1, R6902 += 1 };
  s1 -> s5 [0, 65535] { R6994 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R6994 += 1, R6902 += 1 };
  s2 -> s5 [0, 65535] { R6994 += 1 };
  s3 -> s1 [0, 65535] { R6994 += 1, R6902 += 1, R154 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R6994 += 1, R6902 += 1 };
  s3 -> s3 [0, 65535] { R6994 += 1, R6901 += 1, R6902 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R6994 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R6996 += 1, R6904 += 1, R159 += 1, R160 += 1 };
  s0 -> s2 [0, 65535] { R6996 += 1, R6903 += 1, R6904 += 1 };
  s0 -> s0 [0, 65535] { R6995 += 1, R6996 += 1 };
  s0 -> s3 [0, 65535] { R6996 += 1, R6904 += 1, R158 += 1, R159 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R6996 += 1, R6904 += 1, R159 += 1, R160 += 1 };
  s1 -> s5 [0, 65535] { R6996 += 1 };
  s1 -> s6 [0, 65535] { R6996 += 1, R6904 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R6996 += 1, R6904 += 1, R159 += 1, R160 += 1 };
  s2 -> s2 [0, 65535] { R6996 += 1, R6903 += 1, R6904 += 1 };
  s2 -> s3 [0, 65535] { R6996 += 1, R6904 += 1, R158 += 1, R159 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R6996 += 1, R6904 += 1, R159 += 1, R160 += 1 };
  s3 -> s5 [0, 65535] { R6996 += 1 };
  s3 -> s3 [0, 65535] { R6996 += 1, R6904 += 1, R158 += 1, R159 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R6996 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R6996 += 1 };
  s6 -> s6 [0, 65535] { R6996 += 1, R6904 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R6998 += 1, R6906 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R6998 += 1, R6906 += 1, R165 += 1, R166 += 1 };
  s0 -> s0 [0, 65535] { R6997 += 1, R6998 += 1 };
  s0 -> s3 [0, 65535] { R6998 += 1, R6905 += 1, R6906 += 1 };
  s0 -> s4 [0, 65535] { R6998 += 1, R6906 += 1, R164 += 1, R165 += 1 };
  s0 -> s1 [76, 65535] { R6998 += 1, R6906 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R6998 += 1, R6906 += 1, R165 += 1 };
  s1 -> s1 [0, 65535] { R6998 += 1, R6906 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R6998 += 1 };
  s1 -> s1 [76, 65535] { R6998 += 1, R6906 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R6998 += 1, R6906 += 1, R165 += 1 };
  s2 -> s7 [0, 65535] { R6998 += 1, R6906 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R6998 += 1 };
  s2 -> s2 [0, 65535] { R6998 += 1, R6906 += 1, R165 += 1, R166 += 1 };
  s2 -> s1 [76, 65535] { R6998 += 1, R6906 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R6998 += 1, R6906 += 1, R165 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R6998 += 1, R6906 += 1, R165 += 1, R166 += 1 };
  s3 -> s3 [0, 65535] { R6998 += 1, R6905 += 1, R6906 += 1 };
  s3 -> s4 [0, 65535] { R6998 += 1, R6906 += 1, R164 += 1, R165 += 1 };
  s3 -> s1 [76, 65535] { R6998 += 1, R6906 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R6998 += 1, R6906 += 1, R165 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R6998 += 1 };
  s4 -> s2 [0, 65535] { R6998 += 1, R6906 += 1, R165 += 1, R166 += 1 };
  s4 -> s4 [0, 65535] { R6998 += 1, R6906 += 1, R164 += 1, R165 += 1 };
  s4 -> s1 [76, 65535] { R6998 += 1, R6906 += 1, R165 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6998 += 1 };
  s7 -> s7 [0, 65535] { R6998 += 1, R6906 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R6998 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R7000 += 1, R6908 += 1, R172 += 1, R174 += 1 };
  s0 -> s2 [0, 65535] { R7000 += 1, R6907 += 1, R6908 += 1 };
  s0 -> s3 [0, 65535] { R7000 += 1, R6908 += 1, R171 += 1, R172 += 1 };
  s0 -> s4 [0, 65535] { R7000 += 1, R6908 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s0 [0, 65535] { R6999 += 1, R7000 += 1 };
  s0 -> s1 [76, 65535] { R7000 += 1, R6908 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R7000 += 1, R6908 += 1, R172 += 1, R174 += 1 };
  s1 -> s5 [0, 65535] { R7000 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R7000 += 1, R6908 += 1 };
  s1 -> s1 [0, 65535] { R7000 += 1, R6908 += 1, R172 += 1 };
  s1 -> s1 [76, 65535] { R7000 += 1, R6908 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R7000 += 1, R6908 += 1, R172 += 1, R174 += 1 };
  s2 -> s2 [0, 65535] { R7000 += 1, R6907 += 1, R6908 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R7000 += 1, R6908 += 1, R171 += 1, R172 += 1 };
  s2 -> s4 [0, 65535] { R7000 += 1, R6908 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s1 [76, 65535] { R7000 += 1, R6908 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R7000 += 1, R6908 += 1, R172 += 1, R174 += 1 };
  s3 -> s5 [0, 65535] { R7000 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R7000 += 1, R6908 += 1, R171 += 1, R172 += 1 };
  s3 -> s4 [0, 65535] { R7000 += 1, R6908 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s1 [76, 65535] { R7000 += 1, R6908 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R7000 += 1, R6908 += 1, R172 += 1, R174 += 1 };
  s4 -> s5 [0, 65535] { R7000 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R7000 += 1, R6908 += 1 };
  s4 -> s4 [0, 65535] { R7000 += 1, R6908 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s1 [76, 65535] { R7000 += 1, R6908 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535] { R7000 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R7000 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R7000 += 1, R6908 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R7002 += 1, R6910 += 1, R181 += 1 };
  s0 -> s2 [0, 65535] { R7002 += 1, R6909 += 1, R6910 += 1 };
  s0 -> s0 [0, 65535] { R7001 += 1, R7002 += 1 };
  s0 -> s3 [0, 65535] { R7002 += 1, R6910 += 1 };
  s1 -> s1 [0, 65535] { R7002 += 1, R6910 += 1, R181 += 1 };
  s1 -> s3 [0, 65535] { R7002 += 1, R6910 += 1 };
  s1 -> s4 [0, 65535] { R7002 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R7002 += 1, R6910 += 1, R181 += 1 };
  s2 -> s2 [0, 65535] { R7002 += 1, R6909 += 1, R6910 += 1 };
  s2 -> s3 [0, 65535] { R7002 += 1, R6910 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R7002 += 1, R6910 += 1 };
  s3 -> s4 [0, 65535] { R7002 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R7002 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 65535] { R7004 += 1, R6911 += 1, R6912 += 1 };
  s0 -> s2 [0, 65535] { R7004 += 1, R6912 += 1 };
  s0 -> s3 [0, 65535] { R7004 += 1, R6912 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s0 -> s0 [0, 65535] { R7003 += 1, R7004 += 1 };
  s0 -> s4 [0, 65535] { R7004 += 1, R6912 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 65535] { R7004 += 1, R6911 += 1, R6912 += 1 };
  s1 -> s2 [0, 65535] { R7004 += 1, R6912 += 1 };
  s1 -> s3 [0, 65535] { R7004 += 1, R6912 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [0, 65535] { R7004 += 1, R6912 += 1, R190 += 1, R192 += 1 };
  s2 -> s5 [0, 65535] { R7004 += 1 };
  s2 -> s2 [0, 65535] { R7004 += 1, R6912 += 1 };
  s2 -> s7 [0, 65535];
  s3 -> s5 [0, 65535] { R7004 += 1 };
  s3 -> s2 [0, 65535] { R7004 += 1, R6912 += 1 };
  s3 -> s3 [0, 65535] { R7004 += 1, R6912 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [0, 65535] { R7004 += 1, R6912 += 1, R190 += 1, R192 += 1 };
  s4 -> s5 [0, 65535] { R7004 += 1 };
  s4 -> s2 [0, 65535] { R7004 += 1, R6912 += 1 };
  s4 -> s6 [0, 65535] { R7004 += 1, R6912 += 1, R190 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R7004 += 1, R6912 += 1, R190 += 1, R192 += 1 };
  s5 -> s5 [0, 65535] { R7004 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s5 [0, 65535] { R7004 += 1 };
  s6 -> s2 [0, 65535] { R7004 += 1, R6912 += 1 };
  s6 -> s6 [0, 65535] { R7004 += 1, R6912 += 1, R190 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s0 [0, 65535] { R7005 += 1, R7006 += 1 };
  s0 -> s1 [0, 65535] { R7006 += 1, R6914 += 1 };
  s0 -> s2 [0, 65535] { R7006 += 1, R6913 += 1, R6914 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R7006 += 1, R6914 += 1 };
  s1 -> s4 [0, 65535] { R7006 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R7006 += 1, R6914 += 1 };
  s2 -> s2 [0, 65535] { R7006 += 1, R6913 += 1, R6914 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R7006 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 74] { R7008 += 1, R6916 += 1, R6884 += 1, R6886 += 1 };
  s0 -> s2 [0, 65535] { R7008 += 1, R6916 += 1, R6884 += 1, R6885 += 1, R6886 += 1 };
  s0 -> s3 [0, 65535] { R7008 += 1, R6915 += 1, R6916 += 1 };
  s0 -> s0 [0, 65535] { R7007 += 1, R7008 += 1 };
  s0 -> s4 [75, 75] { R7008 += 1, R6916 += 1, R6884 += 1, R6886 += 1 };
  s0 -> s5 [76, 76] { R7008 += 1, R6916 += 1, R6884 += 1, R6886 += 1 };
  s0 -> s1 [77, 65535] { R7008 += 1, R6916 += 1, R6884 += 1, R6886 += 1 };
  s1 -> s1 [0, 74] { R7008 += 1, R6916 += 1, R6884 += 1, R6886 += 1 };
  s1 -> s4 [75, 75] { R7008 += 1, R6916 += 1, R6884 += 1, R6886 += 1 };
  s1 -> s5 [76, 76] { R7008 += 1, R6916 += 1, R6884 += 1, R6886 += 1 };
  s1 -> s1 [77, 65535] { R7008 += 1, R6916 += 1, R6884 += 1, R6886 += 1 };
  s2 -> s1 [0, 74] { R7008 += 1, R6916 += 1, R6884 += 1, R6886 += 1 };
  s2 -> s2 [0, 65535] { R7008 += 1, R6916 += 1, R6884 += 1, R6885 += 1, R6886 += 1 };
  s2 -> s4 [75, 75] { R7008 += 1, R6916 += 1, R6884 += 1, R6886 += 1 };
  s2 -> s5 [76, 76] { R7008 += 1, R6916 += 1, R6884 += 1, R6886 += 1 };
  s2 -> s1 [77, 65535] { R7008 += 1, R6916 += 1, R6884 += 1, R6886 += 1 };
  s3 -> s1 [0, 74] { R7008 += 1, R6916 += 1, R6884 += 1, R6886 += 1 };
  s3 -> s2 [0, 65535] { R7008 += 1, R6916 += 1, R6884 += 1, R6885 += 1, R6886 += 1 };
  s3 -> s3 [0, 65535] { R7008 += 1, R6915 += 1, R6916 += 1 };
  s3 -> s4 [75, 75] { R7008 += 1, R6916 += 1, R6884 += 1, R6886 += 1 };
  s3 -> s5 [76, 76] { R7008 += 1, R6916 += 1, R6884 += 1, R6886 += 1 };
  s3 -> s1 [77, 65535] { R7008 += 1, R6916 += 1, R6884 += 1, R6886 += 1 };
  s4 -> s4 [0, 75] { R7008 += 1, R6916 += 1, R6884 += 1, R6886 += 1 };
  s4 -> s10 [76, 76] { R7008 += 1, R6916 += 1, R6884 += 1, R6886 += 1 };
  s4 -> s4 [77, 65535] { R7008 += 1, R6916 += 1, R6884 += 1, R6886 += 1 };
  s5 -> s5 [0, 74] { R7008 += 1, R6916 += 1, R6884 += 1, R6886 += 1 };
  s5 -> s6 [0, 65535] { R7008 += 1, R6916 += 1 };
  s5 -> s5 [0, 65535] { R7008 += 1, R6916 += 1, R6884 += 1 };
  s5 -> s7 [0, 65535] { R7008 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s9 [75, 75] { R7008 += 1, R6916 += 1, R6884 += 1, R6886 += 1 };
  s5 -> s10 [75, 75] { R7008 += 1, R6916 += 1, R6884 += 1, R6886 += 1 };
  s5 -> s5 [76, 65535] { R7008 += 1, R6916 += 1, R6884 += 1, R6886 += 1 };
  s6 -> s6 [0, 65535] { R7008 += 1, R6916 += 1 };
  s6 -> s7 [0, 65535] { R7008 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R7008 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R7008 += 1, R6916 += 1, R6884 += 1 };
  s9 -> s6 [0, 65535] { R7008 += 1, R6916 += 1 };
  s9 -> s7 [0, 65535] { R7008 += 1 };
  s9 -> s8 [0, 65535];
  s10 -> s6 [0, 65535] { R7008 += 1, R6916 += 1 };
  s10 -> s11 [0, 65535] { R7008 += 1, R6916 += 1, R6884 += 1 };
  s10 -> s7 [0, 65535] { R7008 += 1 };
  s10 -> s10 [0, 65535] { R7008 += 1, R6916 += 1, R6884 += 1, R6886 += 1 };
  s10 -> s8 [0, 65535];
  s11 -> s6 [0, 65535] { R7008 += 1, R6916 += 1 };
  s11 -> s11 [0, 65535] { R7008 += 1, R6916 += 1, R6884 += 1 };
  s11 -> s7 [0, 65535] { R7008 += 1 };
  s11 -> s8 [0, 65535];
  accepting s8, s5, s9, s6, s7, s10, s11;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65535] { R7010 += 1, R6945 += 1, R6946 += 1 };
  s0 -> s0 [0, 65535] { R7009 += 1, R7010 += 1 };
  s0 -> s2 [0, 65535] { R7010 += 1, R6946 += 1, R23 += 1 };
  s1 -> s1 [0, 65535] { R7010 += 1, R6945 += 1, R6946 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R7010 += 1, R6946 += 1, R23 += 1 };
  s2 -> s3 [0, 65535] { R7010 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R7010 += 1, R6946 += 1, R23 += 1 };
  s3 -> s3 [0, 65535] { R7010 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R7012 += 1, R6948 += 1 };
  s0 -> s0 [0, 65535] { R7011 += 1, R7012 += 1 };
  s0 -> s2 [0, 65535] { R7012 += 1, R6947 += 1, R6948 += 1 };
  s0 -> s3 [70, 70] { R7012 += 1, R6948 += 1 };
  s0 -> s4 [70, 70] { R7012 += 1, R6948 += 1 };
  s0 -> s5 [75, 75] { R7012 += 1, R6948 += 1 };
  s0 -> s1 [76, 65535] { R7012 += 1, R6948 += 1 };
  s1 -> s1 [0, 69] { R7012 += 1, R6948 += 1 };
  s1 -> s3 [70, 70] { R7012 += 1, R6948 += 1 };
  s1 -> s4 [70, 70] { R7012 += 1, R6948 += 1 };
  s1 -> s5 [75, 75] { R7012 += 1, R6948 += 1 };
  s1 -> s1 [76, 65535] { R7012 += 1, R6948 += 1 };
  s2 -> s1 [0, 69] { R7012 += 1, R6948 += 1 };
  s2 -> s2 [0, 65535] { R7012 += 1, R6947 += 1, R6948 += 1 };
  s2 -> s3 [70, 70] { R7012 += 1, R6948 += 1 };
  s2 -> s4 [70, 70] { R7012 += 1, R6948 += 1 };
  s2 -> s5 [75, 75] { R7012 += 1, R6948 += 1 };
  s2 -> s1 [76, 65535] { R7012 += 1, R6948 += 1 };
  s4 -> s4 [0, 70] { R7012 += 1, R6948 += 1 };
  s4 -> s7 [75, 75] { R7012 += 1, R6948 += 1 };
  s4 -> s4 [76, 65535] { R7012 += 1, R6948 += 1 };
  s5 -> s5 [0, 69] { R7012 += 1, R6948 += 1 };
  s5 -> s5 [0, 65535] { R7012 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R7012 += 1, R6948 += 1 };
  s5 -> s8 [70, 70] { R7012 += 1, R6948 += 1 };
  s5 -> s5 [75, 65535] { R7012 += 1, R6948 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R7012 += 1, R6948 += 1 };
  s7 -> s7 [0, 65535] { R7012 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R7012 += 1, R6948 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R7012 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R7014 += 1, R6950 += 1, R137 += 1 };
  s0 -> s2 [0, 65535] { R7014 += 1, R6949 += 1, R6950 += 1 };
  s0 -> s0 [0, 65535] { R7013 += 1, R7014 += 1 };
  s0 -> s3 [70, 70] { R7014 += 1, R6950 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R7014 += 1, R6950 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R7014 += 1, R6950 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R7014 += 1, R6950 += 1, R137 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R7014 += 1 };
  s1 -> s3 [70, 70] { R7014 += 1, R6950 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R7014 += 1, R6950 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R7014 += 1, R6950 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R7014 += 1, R6950 += 1, R137 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R7014 += 1, R6949 += 1, R6950 += 1 };
  s2 -> s3 [70, 70] { R7014 += 1, R6950 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R7014 += 1, R6950 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R7014 += 1, R6950 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R7014 += 1, R6950 += 1, R137 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R7014 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R7014 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7014 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R7016 += 1, R6952 += 1, R139 += 1 };
  s0 -> s2 [0, 65535] { R7016 += 1, R6951 += 1, R6952 += 1 };
  s0 -> s0 [0, 65535] { R7015 += 1, R7016 += 1 };
  s0 -> s3 [70, 70] { R7016 += 1, R6952 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R7016 += 1, R6952 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R7016 += 1, R6952 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R7016 += 1, R6952 += 1, R139 += 1 };
  s1 -> s1 [0, 65535] { R7016 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R7016 += 1, R6952 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R7016 += 1, R6952 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R7016 += 1, R6952 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R7016 += 1, R6952 += 1, R139 += 1 };
  s2 -> s2 [0, 65535] { R7016 += 1, R6951 += 1, R6952 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R7016 += 1, R6952 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R7016 += 1, R6952 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R7016 += 1, R6952 += 1, R139 += 1 };
  s3 -> s3 [0, 65535] { R7016 += 1, R6952 += 1, R139 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R7016 += 1 };
  s4 -> s4 [0, 65535] { R7016 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7016 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R7018 += 1, R6954 += 1, R141 += 1, R142 += 1 };
  s0 -> s0 [0, 65535] { R7017 += 1, R7018 += 1 };
  s0 -> s2 [0, 65535] { R7018 += 1, R6953 += 1, R6954 += 1 };
  s0 -> s3 [70, 70] { R7018 += 1, R6954 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R7018 += 1, R6954 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R7018 += 1, R6954 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R7018 += 1, R6954 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 65535] { R7018 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R7018 += 1, R6954 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R7018 += 1, R6954 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R7018 += 1, R6954 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R7018 += 1, R6954 += 1, R141 += 1, R142 += 1 };
  s2 -> s2 [0, 65535] { R7018 += 1, R6953 += 1, R6954 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R7018 += 1, R6954 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R7018 += 1, R6954 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R7018 += 1, R6954 += 1, R141 += 1, R142 += 1 };
  s3 -> s3 [0, 65535] { R7018 += 1, R6954 += 1, R141 += 1, R142 += 1 };
  s3 -> s6 [0, 65535] { R7018 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R7018 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7018 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R7020 += 1, R6956 += 1, R147 += 1, R148 += 1 };
  s0 -> s2 [0, 65535] { R7020 += 1, R6955 += 1, R6956 += 1 };
  s0 -> s0 [0, 65535] { R7019 += 1, R7020 += 1 };
  s0 -> s3 [70, 70] { R7020 += 1, R6956 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R7020 += 1, R6956 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R7020 += 1, R6956 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R7020 += 1, R6956 += 1, R147 += 1, R148 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R7020 += 1 };
  s1 -> s3 [70, 70] { R7020 += 1, R6956 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R7020 += 1, R6956 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R7020 += 1, R6956 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R7020 += 1, R6956 += 1, R147 += 1, R148 += 1 };
  s2 -> s2 [0, 65535] { R7020 += 1, R6955 += 1, R6956 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R7020 += 1, R6956 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R7020 += 1, R6956 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R7020 += 1, R6956 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R7020 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R7020 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R7020 += 1, R6956 += 1, R147 += 1, R148 += 1 };
  s5 -> s5 [0, 65535] { R7020 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R7022 += 1, R6958 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R7022 += 1, R6958 += 1, R151 += 1, R152 += 1 };
  s0 -> s3 [0, 65535] { R7022 += 1, R6957 += 1, R6958 += 1 };
  s0 -> s0 [0, 65535] { R7021 += 1, R7022 += 1 };
  s0 -> s4 [70, 70] { R7022 += 1, R6958 += 1, R151 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R7022 += 1, R6958 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R7022 += 1, R6958 += 1, R151 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R7022 += 1, R6958 += 1, R152 += 1 };
  s0 -> s1 [71, 74] { R7022 += 1, R6958 += 1, R152 += 1 };
  s0 -> s2 [71, 65535] { R7022 += 1, R6958 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R7022 += 1, R6958 += 1, R152 += 1 };
  s0 -> s1 [76, 65535] { R7022 += 1, R6958 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R7022 += 1, R6958 += 1, R152 += 1 };
  s1 -> s5 [70, 70] { R7022 += 1, R6958 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R7022 += 1, R6958 += 1, R152 += 1 };
  s1 -> s1 [71, 74] { R7022 += 1, R6958 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R7022 += 1, R6958 += 1, R152 += 1 };
  s1 -> s1 [76, 65535] { R7022 += 1, R6958 += 1, R152 += 1 };
  s2 -> s1 [0, 69] { R7022 += 1, R6958 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R7022 += 1, R6958 += 1, R151 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R7022 += 1, R6958 += 1, R151 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R7022 += 1, R6958 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R7022 += 1, R6958 += 1, R151 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R7022 += 1, R6958 += 1, R152 += 1 };
  s2 -> s1 [71, 74] { R7022 += 1, R6958 += 1, R152 += 1 };
  s2 -> s2 [71, 65535] { R7022 += 1, R6958 += 1, R151 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R7022 += 1, R6958 += 1, R152 += 1 };
  s2 -> s1 [76, 65535] { R7022 += 1, R6958 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R7022 += 1, R6958 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R7022 += 1, R6958 += 1, R151 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R7022 += 1, R6957 += 1, R6958 += 1 };
  s3 -> s4 [70, 70] { R7022 += 1, R6958 += 1, R151 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R7022 += 1, R6958 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R7022 += 1, R6958 += 1, R151 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R7022 += 1, R6958 += 1, R152 += 1 };
  s3 -> s1 [71, 74] { R7022 += 1, R6958 += 1, R152 += 1 };
  s3 -> s2 [71, 65535] { R7022 += 1, R6958 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R7022 += 1, R6958 += 1, R152 += 1 };
  s3 -> s1 [76, 65535] { R7022 += 1, R6958 += 1, R152 += 1 };
  s5 -> s5 [0, 74] { R7022 += 1, R6958 += 1, R152 += 1 };
  s5 -> s10 [75, 75] { R7022 += 1, R6958 += 1, R152 += 1 };
  s5 -> s5 [76, 65535] { R7022 += 1, R6958 += 1, R152 += 1 };
  s6 -> s5 [0, 74] { R7022 += 1, R6958 += 1, R152 += 1 };
  s6 -> s6 [0, 65535] { R7022 += 1, R6958 += 1, R151 += 1, R152 += 1 };
  s6 -> s10 [75, 75] { R7022 += 1, R6958 += 1, R152 += 1 };
  s6 -> s5 [76, 65535] { R7022 += 1, R6958 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R7022 += 1, R6958 += 1, R152 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R7022 += 1 };
  s8 -> s10 [70, 70] { R7022 += 1, R6958 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R7022 += 1, R6958 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R7022 += 1, R6958 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R7022 += 1, R6958 += 1, R152 += 1 };
  s10 -> s12 [0, 65535] { R7022 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R7022 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R7022 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R7024 += 1, R6960 += 1, R155 += 1, R156 += 1 };
  s0 -> s0 [0, 65535] { R7023 += 1, R7024 += 1 };
  s0 -> s2 [0, 65535] { R7024 += 1, R6959 += 1, R6960 += 1 };
  s0 -> s3 [70, 70] { R7024 += 1, R6960 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R7024 += 1, R6960 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R7024 += 1, R6960 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R7024 += 1, R6960 += 1, R155 += 1, R156 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R7024 += 1 };
  s1 -> s3 [70, 70] { R7024 += 1, R6960 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R7024 += 1, R6960 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R7024 += 1, R6960 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R7024 += 1, R6960 += 1, R155 += 1, R156 += 1 };
  s2 -> s2 [0, 65535] { R7024 += 1, R6959 += 1, R6960 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R7024 += 1, R6960 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R7024 += 1, R6960 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R7024 += 1, R6960 += 1, R155 += 1, R156 += 1 };
  s3 -> s3 [0, 65535] { R7024 += 1, R6960 += 1, R155 += 1, R156 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R7024 += 1 };
  s4 -> s4 [0, 65535] { R7024 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7024 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R7026 += 1, R6962 += 1, R161 += 1, R162 += 1 };
  s0 -> s2 [0, 65535] { R7026 += 1, R6961 += 1, R6962 += 1 };
  s0 -> s0 [0, 65535] { R7025 += 1, R7026 += 1 };
  s0 -> s3 [70, 70] { R7026 += 1, R6962 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R7026 += 1, R6962 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R7026 += 1, R6962 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R7026 += 1, R6962 += 1, R161 += 1, R162 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R7026 += 1 };
  s1 -> s3 [70, 70] { R7026 += 1, R6962 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R7026 += 1, R6962 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R7026 += 1, R6962 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R7026 += 1, R6962 += 1, R161 += 1, R162 += 1 };
  s2 -> s2 [0, 65535] { R7026 += 1, R6961 += 1, R6962 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R7026 += 1, R6962 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R7026 += 1, R6962 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R7026 += 1, R6962 += 1, R161 += 1, R162 += 1 };
  s3 -> s3 [0, 65535] { R7026 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R7026 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R7026 += 1, R6962 += 1, R161 += 1, R162 += 1 };
  s5 -> s5 [0, 65535] { R7026 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R7028 += 1, R6964 += 1, R167 += 1, R168 += 1 };
  s0 -> s2 [0, 65535] { R7028 += 1, R6963 += 1, R6964 += 1 };
  s0 -> s0 [0, 65535] { R7027 += 1, R7028 += 1 };
  s0 -> s3 [70, 70] { R7028 += 1, R6964 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R7028 += 1, R6964 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R7028 += 1, R6964 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R7028 += 1, R6964 += 1, R167 += 1, R168 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R7028 += 1 };
  s1 -> s3 [70, 70] { R7028 += 1, R6964 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R7028 += 1, R6964 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R7028 += 1, R6964 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R7028 += 1, R6964 += 1, R167 += 1, R168 += 1 };
  s2 -> s2 [0, 65535] { R7028 += 1, R6963 += 1, R6964 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R7028 += 1, R6964 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R7028 += 1, R6964 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R7028 += 1, R6964 += 1, R167 += 1, R168 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R7028 += 1 };
  s3 -> s3 [0, 65535] { R7028 += 1, R6964 += 1, R167 += 1, R168 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R7028 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7028 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R7030 += 1, R6966 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s2 [0, 69] { R7030 += 1, R6966 += 1, R175 += 1, R176 += 1 };
  s0 -> s3 [0, 69] { R7030 += 1, R6966 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s0 [0, 65535] { R7029 += 1, R7030 += 1 };
  s0 -> s4 [0, 65535] { R7030 += 1, R6965 += 1, R6966 += 1 };
  s0 -> s5 [70, 70] { R7030 += 1, R6966 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s6 [70, 70] { R7030 += 1, R6966 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s7 [70, 70] { R7030 += 1, R6966 += 1, R175 += 1, R176 += 1 };
  s0 -> s8 [70, 70] { R7030 += 1, R6966 += 1, R175 += 1, R176 += 1 };
  s0 -> s9 [70, 70] { R7030 += 1, R6966 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s10 [70, 70] { R7030 += 1, R6966 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s1 [71, 65535] { R7030 += 1, R6966 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s2 [71, 65535] { R7030 += 1, R6966 += 1, R175 += 1, R176 += 1 };
  s0 -> s3 [71, 65535] { R7030 += 1, R6966 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s1 [0, 69] { R7030 += 1, R6966 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s14 [0, 69] { R7030 += 1, R6966 += 1, R176 += 1 };
  s1 -> s11 [70, 70] { R7030 += 1, R6966 += 1, R176 += 1 };
  s1 -> s15 [70, 70] { R7030 += 1, R6966 += 1, R176 += 1 };
  s1 -> s6 [70, 70] { R7030 += 1, R6966 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s9 [70, 70] { R7030 += 1, R6966 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s1 [71, 65535] { R7030 += 1, R6966 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s14 [71, 65535] { R7030 += 1, R6966 += 1, R176 += 1 };
  s2 -> s1 [0, 69] { R7030 += 1, R6966 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [0, 69] { R7030 += 1, R6966 += 1, R175 += 1, R176 += 1 };
  s2 -> s3 [0, 69] { R7030 += 1, R6966 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s5 [70, 70] { R7030 += 1, R6966 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s6 [70, 70] { R7030 += 1, R6966 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s7 [70, 70] { R7030 += 1, R6966 += 1, R175 += 1, R176 += 1 };
  s2 -> s8 [70, 70] { R7030 += 1, R6966 += 1, R175 += 1, R176 += 1 };
  s2 -> s9 [70, 70] { R7030 += 1, R6966 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s10 [70, 70] { R7030 += 1, R6966 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s1 [71, 65535] { R7030 += 1, R6966 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [71, 65535] { R7030 += 1, R6966 += 1, R175 += 1, R176 += 1 };
  s2 -> s3 [71, 65535] { R7030 += 1, R6966 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s1 [0, 69] { R7030 += 1, R6966 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [0, 69] { R7030 += 1, R6966 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s5 [70, 70] { R7030 += 1, R6966 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s6 [70, 70] { R7030 += 1, R6966 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s9 [70, 70] { R7030 += 1, R6966 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s10 [70, 70] { R7030 += 1, R6966 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s1 [71, 65535] { R7030 += 1, R6966 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [71, 65535] { R7030 += 1, R6966 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s1 [0, 69] { R7030 += 1, R6966 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s2 [0, 69] { R7030 += 1, R6966 += 1, R175 += 1, R176 += 1 };
  s4 -> s3 [0, 69] { R7030 += 1, R6966 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s4 [0, 65535] { R7030 += 1, R6965 += 1, R6966 += 1 };
  s4 -> s5 [70, 70] { R7030 += 1, R6966 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s6 [70, 70] { R7030 += 1, R6966 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s7 [70, 70] { R7030 += 1, R6966 += 1, R175 += 1, R176 += 1 };
  s4 -> s8 [70, 70] { R7030 += 1, R6966 += 1, R175 += 1, R176 += 1 };
  s4 -> s9 [70, 70] { R7030 += 1, R6966 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s10 [70, 70] { R7030 += 1, R6966 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s1 [71, 65535] { R7030 += 1, R6966 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s2 [71, 65535] { R7030 += 1, R6966 += 1, R175 += 1, R176 += 1 };
  s4 -> s3 [71, 65535] { R7030 += 1, R6966 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s5 -> s5 [0, 65535] { R7030 += 1, R6966 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s5 -> s9 [0, 65535] { R7030 += 1, R6966 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s7 -> s5 [0, 65535] { R7030 += 1, R6966 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s7 -> s7 [0, 65535] { R7030 += 1, R6966 += 1, R175 += 1, R176 += 1 };
  s7 -> s9 [0, 65535] { R7030 += 1, R6966 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s9 -> s11 [0, 65535] { R7030 += 1, R6966 += 1, R176 += 1 };
  s9 -> s9 [0, 65535] { R7030 += 1, R6966 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s11 -> s11 [0, 65535] { R7030 += 1, R6966 += 1, R176 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [0, 65535] { R7030 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R7030 += 1 };
  s14 -> s14 [0, 69] { R7030 += 1, R6966 += 1, R176 += 1 };
  s14 -> s14 [0, 65535] { R7030 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s11 [70, 70] { R7030 += 1, R6966 += 1, R176 += 1 };
  s14 -> s15 [70, 70] { R7030 += 1, R6966 += 1, R176 += 1 };
  s14 -> s14 [71, 65535] { R7030 += 1, R6966 += 1, R176 += 1 };
  s15 -> s15 [0, 65535] { R7030 += 1 };
  s15 -> s12 [0, 65535];
  accepting s12, s13, s14, s15, s11;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R7032 += 1, R6968 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s0 -> s2 [0, 69] { R7032 += 1, R6968 += 1, R185 += 1, R186 += 1 };
  s0 -> s3 [0, 65535] { R7032 += 1, R6967 += 1, R6968 += 1 };
  s0 -> s0 [0, 65535] { R7031 += 1, R7032 += 1 };
  s0 -> s4 [70, 70] { R7032 += 1, R6968 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s0 -> s5 [70, 70] { R7032 += 1, R6968 += 1, R185 += 1, R186 += 1 };
  s0 -> s6 [70, 70] { R7032 += 1, R6968 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s0 -> s7 [70, 70] { R7032 += 1, R6968 += 1, R185 += 1, R186 += 1 };
  s0 -> s1 [71, 65535] { R7032 += 1, R6968 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s0 -> s2 [71, 65535] { R7032 += 1, R6968 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 69] { R7032 += 1, R6968 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s1 -> s1 [0, 65535] { R7032 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s4 [70, 70] { R7032 += 1, R6968 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s1 -> s6 [70, 70] { R7032 += 1, R6968 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s1 -> s1 [71, 65535] { R7032 += 1, R6968 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s2 -> s1 [0, 69] { R7032 += 1, R6968 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s2 -> s2 [0, 69] { R7032 += 1, R6968 += 1, R185 += 1, R186 += 1 };
  s2 -> s4 [70, 70] { R7032 += 1, R6968 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s2 -> s5 [70, 70] { R7032 += 1, R6968 += 1, R185 += 1, R186 += 1 };
  s2 -> s6 [70, 70] { R7032 += 1, R6968 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s2 -> s7 [70, 70] { R7032 += 1, R6968 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [71, 65535] { R7032 += 1, R6968 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s2 -> s2 [71, 65535] { R7032 += 1, R6968 += 1, R185 += 1, R186 += 1 };
  s3 -> s1 [0, 69] { R7032 += 1, R6968 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s3 -> s2 [0, 69] { R7032 += 1, R6968 += 1, R185 += 1, R186 += 1 };
  s3 -> s3 [0, 65535] { R7032 += 1, R6967 += 1, R6968 += 1 };
  s3 -> s4 [70, 70] { R7032 += 1, R6968 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s3 -> s5 [70, 70] { R7032 += 1, R6968 += 1, R185 += 1, R186 += 1 };
  s3 -> s6 [70, 70] { R7032 += 1, R6968 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s3 -> s7 [70, 70] { R7032 += 1, R6968 += 1, R185 += 1, R186 += 1 };
  s3 -> s1 [71, 65535] { R7032 += 1, R6968 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s3 -> s2 [71, 65535] { R7032 += 1, R6968 += 1, R185 += 1, R186 += 1 };
  s4 -> s4 [0, 65535] { R7032 += 1 };
  s4 -> s9 [0, 65535];
  s5 -> s5 [0, 65535] { R7032 += 1, R6968 += 1, R185 += 1, R186 += 1 };
  s5 -> s6 [0, 65535] { R7032 += 1, R6968 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s6 -> s8 [0, 65535] { R7032 += 1 };
  s6 -> s6 [0, 65535] { R7032 += 1, R6968 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s6 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R7032 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  accepting s4, s8, s9, s6, s1;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R7034 += 1, R6970 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s0 -> s2 [0, 69] { R7034 += 1, R6970 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s0 -> s3 [0, 69] { R7034 += 1, R6970 += 1, R5921 += 1, R5922 += 1 };
  s0 -> s4 [0, 65535] { R7034 += 1, R6969 += 1, R6970 += 1 };
  s0 -> s0 [0, 65535] { R7033 += 1, R7034 += 1 };
  s0 -> s5 [70, 70] { R7034 += 1, R6970 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s0 -> s6 [70, 70] { R7034 += 1, R6970 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s0 -> s7 [70, 70] { R7034 += 1, R6970 += 1, R5921 += 1, R5922 += 1 };
  s0 -> s8 [70, 70] { R7034 += 1, R6970 += 1, R5921 += 1, R5922 += 1 };
  s0 -> s9 [70, 70] { R7034 += 1, R6970 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s0 -> s10 [70, 70] { R7034 += 1, R6970 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s0 -> s1 [71, 65535] { R7034 += 1, R6970 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s0 -> s2 [71, 65535] { R7034 += 1, R6970 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s0 -> s3 [71, 65535] { R7034 += 1, R6970 += 1, R5921 += 1, R5922 += 1 };
  s1 -> s1 [0, 69] { R7034 += 1, R6970 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s1 -> s15 [0, 69] { R7034 += 1, R6970 += 1 };
  s1 -> s17 [0, 69] { R7034 += 1, R6970 += 1, R5922 += 1 };
  s1 -> s16 [70, 70] { R7034 += 1, R6970 += 1 };
  s1 -> s5 [70, 70] { R7034 += 1, R6970 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s1 -> s6 [70, 70] { R7034 += 1, R6970 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s1 -> s18 [70, 70] { R7034 += 1, R6970 += 1, R5922 += 1 };
  s1 -> s11 [70, 70] { R7034 += 1, R6970 += 1 };
  s1 -> s14 [70, 70] { R7034 += 1, R6970 += 1, R5922 += 1 };
  s1 -> s1 [71, 65535] { R7034 += 1, R6970 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s1 -> s15 [71, 65535] { R7034 += 1, R6970 += 1 };
  s1 -> s17 [71, 65535] { R7034 += 1, R6970 += 1, R5922 += 1 };
  s2 -> s1 [0, 69] { R7034 += 1, R6970 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s2 -> s15 [0, 69] { R7034 += 1, R6970 += 1 };
  s2 -> s2 [0, 69] { R7034 += 1, R6970 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s2 -> s16 [70, 70] { R7034 += 1, R6970 += 1 };
  s2 -> s5 [70, 70] { R7034 += 1, R6970 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s2 -> s6 [70, 70] { R7034 += 1, R6970 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s2 -> s11 [70, 70] { R7034 += 1, R6970 += 1 };
  s2 -> s9 [70, 70] { R7034 += 1, R6970 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s2 -> s10 [70, 70] { R7034 += 1, R6970 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s2 -> s1 [71, 65535] { R7034 += 1, R6970 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s2 -> s15 [71, 65535] { R7034 += 1, R6970 += 1 };
  s2 -> s2 [71, 65535] { R7034 += 1, R6970 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s3 -> s1 [0, 69] { R7034 += 1, R6970 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s3 -> s2 [0, 69] { R7034 += 1, R6970 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s3 -> s3 [0, 69] { R7034 += 1, R6970 += 1, R5921 += 1, R5922 += 1 };
  s3 -> s5 [70, 70] { R7034 += 1, R6970 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s3 -> s6 [70, 70] { R7034 += 1, R6970 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s3 -> s7 [70, 70] { R7034 += 1, R6970 += 1, R5921 += 1, R5922 += 1 };
  s3 -> s8 [70, 70] { R7034 += 1, R6970 += 1, R5921 += 1, R5922 += 1 };
  s3 -> s9 [70, 70] { R7034 += 1, R6970 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s3 -> s10 [70, 70] { R7034 += 1, R6970 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s3 -> s1 [71, 65535] { R7034 += 1, R6970 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s3 -> s2 [71, 65535] { R7034 += 1, R6970 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s3 -> s3 [71, 65535] { R7034 += 1, R6970 += 1, R5921 += 1, R5922 += 1 };
  s4 -> s1 [0, 69] { R7034 += 1, R6970 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s4 -> s2 [0, 69] { R7034 += 1, R6970 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s4 -> s3 [0, 69] { R7034 += 1, R6970 += 1, R5921 += 1, R5922 += 1 };
  s4 -> s4 [0, 65535] { R7034 += 1, R6969 += 1, R6970 += 1 };
  s4 -> s5 [70, 70] { R7034 += 1, R6970 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s4 -> s6 [70, 70] { R7034 += 1, R6970 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s4 -> s7 [70, 70] { R7034 += 1, R6970 += 1, R5921 += 1, R5922 += 1 };
  s4 -> s8 [70, 70] { R7034 += 1, R6970 += 1, R5921 += 1, R5922 += 1 };
  s4 -> s9 [70, 70] { R7034 += 1, R6970 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s4 -> s10 [70, 70] { R7034 += 1, R6970 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s4 -> s1 [71, 65535] { R7034 += 1, R6970 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s4 -> s2 [71, 65535] { R7034 += 1, R6970 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s4 -> s3 [71, 65535] { R7034 += 1, R6970 += 1, R5921 += 1, R5922 += 1 };
  s6 -> s6 [0, 65535] { R7034 += 1, R6970 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s6 -> s11 [0, 65535] { R7034 += 1, R6970 += 1 };
  s6 -> s14 [0, 65535] { R7034 += 1, R6970 += 1, R5922 += 1 };
  s8 -> s6 [0, 65535] { R7034 += 1, R6970 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s8 -> s8 [0, 65535] { R7034 += 1, R6970 += 1, R5921 += 1, R5922 += 1 };
  s8 -> s9 [0, 65535] { R7034 += 1, R6970 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s9 -> s6 [0, 65535] { R7034 += 1, R6970 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s9 -> s11 [0, 65535] { R7034 += 1, R6970 += 1 };
  s9 -> s9 [0, 65535] { R7034 += 1, R6970 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s11 -> s11 [0, 65535] { R7034 += 1, R6970 += 1 };
  s11 -> s12 [0, 65535] { R7034 += 1 };
  s11 -> s13 [0, 65535];
  s12 -> s12 [0, 65535] { R7034 += 1 };
  s12 -> s13 [0, 65535];
  s13 -> s13 [0, 65535];
  s14 -> s11 [0, 65535] { R7034 += 1, R6970 += 1 };
  s14 -> s14 [0, 65535] { R7034 += 1, R6970 += 1, R5922 += 1 };
  s15 -> s15 [0, 69] { R7034 += 1, R6970 += 1 };
  s15 -> s15 [0, 65535] { R7034 += 1 };
  s15 -> s13 [0, 65535];
  s15 -> s16 [70, 70] { R7034 += 1, R6970 += 1 };
  s15 -> s11 [70, 70] { R7034 += 1, R6970 += 1 };
  s15 -> s15 [71, 65535] { R7034 += 1, R6970 += 1 };
  s16 -> s16 [0, 65535] { R7034 += 1 };
  s16 -> s13 [0, 65535];
  s17 -> s15 [0, 69] { R7034 += 1, R6970 += 1 };
  s17 -> s17 [0, 69] { R7034 += 1, R6970 += 1, R5922 += 1 };
  s17 -> s16 [70, 70] { R7034 += 1, R6970 += 1 };
  s17 -> s18 [70, 70] { R7034 += 1, R6970 += 1, R5922 += 1 };
  s17 -> s11 [70, 70] { R7034 += 1, R6970 += 1 };
  s17 -> s14 [70, 70] { R7034 += 1, R6970 += 1, R5922 += 1 };
  s17 -> s15 [71, 65535] { R7034 += 1, R6970 += 1 };
  s17 -> s17 [71, 65535] { R7034 += 1, R6970 += 1, R5922 += 1 };
  accepting s16, s12, s13, s15, s11;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R7036 += 1, R6972 += 1, R6879 += 1, R6880 += 1 };
  s0 -> s2 [0, 69] { R7036 += 1, R6972 += 1, R6880 += 1, R6881 += 1, R6882 += 1 };
  s0 -> s0 [0, 65535] { R7035 += 1, R7036 += 1 };
  s0 -> s3 [0, 65535] { R7036 += 1, R6971 += 1, R6972 += 1 };
  s0 -> s4 [70, 70] { R7036 += 1, R6972 += 1, R6880 += 1, R6881 += 1, R6882 += 1 };
  s0 -> s5 [70, 70] { R7036 += 1, R6972 += 1, R6879 += 1, R6880 += 1 };
  s0 -> s6 [70, 70] { R7036 += 1, R6972 += 1, R6880 += 1, R6881 += 1, R6882 += 1 };
  s0 -> s7 [70, 70] { R7036 += 1, R6972 += 1, R6879 += 1, R6880 += 1 };
  s0 -> s1 [71, 65535] { R7036 += 1, R6972 += 1, R6879 += 1, R6880 += 1 };
  s0 -> s2 [71, 65535] { R7036 += 1, R6972 += 1, R6880 += 1, R6881 += 1, R6882 += 1 };
  s1 -> s1 [0, 69] { R7036 += 1, R6972 += 1, R6879 += 1, R6880 += 1 };
  s1 -> s2 [0, 69] { R7036 += 1, R6972 += 1, R6880 += 1, R6881 += 1, R6882 += 1 };
  s1 -> s4 [70, 70] { R7036 += 1, R6972 += 1, R6880 += 1, R6881 += 1, R6882 += 1 };
  s1 -> s5 [70, 70] { R7036 += 1, R6972 += 1, R6879 += 1, R6880 += 1 };
  s1 -> s6 [70, 70] { R7036 += 1, R6972 += 1, R6880 += 1, R6881 += 1, R6882 += 1 };
  s1 -> s7 [70, 70] { R7036 += 1, R6972 += 1, R6879 += 1, R6880 += 1 };
  s1 -> s1 [71, 65535] { R7036 += 1, R6972 += 1, R6879 += 1, R6880 += 1 };
  s1 -> s2 [71, 65535] { R7036 += 1, R6972 += 1, R6880 += 1, R6881 += 1, R6882 += 1 };
  s2 -> s2 [0, 69] { R7036 += 1, R6972 += 1, R6880 += 1, R6881 += 1, R6882 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R7036 += 1 };
  s2 -> s4 [70, 70] { R7036 += 1, R6972 += 1, R6880 += 1, R6881 += 1, R6882 += 1 };
  s2 -> s6 [70, 70] { R7036 += 1, R6972 += 1, R6880 += 1, R6881 += 1, R6882 += 1 };
  s2 -> s2 [71, 65535] { R7036 += 1, R6972 += 1, R6880 += 1, R6881 += 1, R6882 += 1 };
  s3 -> s1 [0, 69] { R7036 += 1, R6972 += 1, R6879 += 1, R6880 += 1 };
  s3 -> s2 [0, 69] { R7036 += 1, R6972 += 1, R6880 += 1, R6881 += 1, R6882 += 1 };
  s3 -> s3 [0, 65535] { R7036 += 1, R6971 += 1, R6972 += 1 };
  s3 -> s4 [70, 70] { R7036 += 1, R6972 += 1, R6880 += 1, R6881 += 1, R6882 += 1 };
  s3 -> s5 [70, 70] { R7036 += 1, R6972 += 1, R6879 += 1, R6880 += 1 };
  s3 -> s6 [70, 70] { R7036 += 1, R6972 += 1, R6880 += 1, R6881 += 1, R6882 += 1 };
  s3 -> s7 [70, 70] { R7036 += 1, R6972 += 1, R6879 += 1, R6880 += 1 };
  s3 -> s1 [71, 65535] { R7036 += 1, R6972 += 1, R6879 += 1, R6880 += 1 };
  s3 -> s2 [71, 65535] { R7036 += 1, R6972 += 1, R6880 += 1, R6881 += 1, R6882 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [0, 65535] { R7036 += 1 };
  s5 -> s5 [0, 65535] { R7036 += 1, R6972 += 1, R6879 += 1, R6880 += 1 };
  s5 -> s6 [0, 65535] { R7036 += 1, R6972 += 1, R6880 += 1, R6881 += 1, R6882 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R7036 += 1, R6972 += 1, R6880 += 1, R6881 += 1, R6882 += 1 };
  s6 -> s9 [0, 65535] { R7036 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R7036 += 1 };
  accepting s4, s8, s2, s9, s6;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R6916 && R3 = R7036 && R25 - R7036 = -1 && R26 = R7036 && R27 - R7036 = -1 && R28 = R7036 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R6884 + -1*R6880 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R6884 + -1*R6880 - R130 = 0 && R129 + R6883 + R6879 = 0 && R131 + R6885 + R6881 = 0 && R132 + R6886 + R6882 = 0 && R6915 = 0 && R6947 = 0 && R6948 = 0 && R6957 = 0 && R6958 = 0 && R6965 = 0 && R6966 = 0 && R6967 = 0 && R6968 = 0 && R6969 = 0 && R6970 = 0 && R6971 = 0 && R6972 = 0 && R6973 = 0 && R6974 = R7036 && R6975 = 0 && R6976 = R7036 && R6977 = 0 && R6978 = R7036 && R6979 = 0 && R6980 = R7036 && R6981 = 0 && R6982 = R7036 && R6983 = 0 && R6984 = R7036 && R6985 = 0 && R6986 = R7036 && R6987 = 0 && R6988 = R7036 && R6989 = 0 && R6990 = R7036 && R6991 = 0 && R6992 = R7036 && R6993 = 0 && R6994 = R7036 && R6995 = 0 && R6996 = R7036 && R6997 = 0 && R6998 = R7036 && R6999 = 0 && R7000 = R7036 && R7001 = 0 && R7002 = R7036 && R7003 = 0 && R7004 = R7036 && R7005 = 0 && R7006 = R7036 && R7007 = 0 && R7008 = R7036 && R7009 = 0 && R7010 = R7036 && R7011 = 0 && R7012 = R7036 && R7013 = 0 && R7014 = R7036 && R7015 = 0 && R7016 = R7036 && R7017 = 0 && R7018 = R7036 && R7019 = 0 && R7020 = R7036 && R7021 = 0 && R7022 = R7036 && R7023 = 0 && R7024 = R7036 && R7025 = 0 && R7026 = R7036 && R7027 = 0 && R7028 = R7036 && R7029 = 0 && R7030 = R7036 && R7031 = 0 && R7032 = R7036 && R7033 = 0 && R7034 = R7036 && R7035 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R6884 + -1*R6880 - R130 < 1 && -1 < R6916 && 0 < R7036 && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R6884 + -1*R6880 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R191 + R187 = 0 && R114 + R192 + R188 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R6884 + -1*R6880 - R130 = 0 || R130 + R6884 + R6880 < 1) && (R81 + R158 + R155 = 0 || R130 + R6884 + R6880 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R6884 + -1*R6880 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R6884 + R6880 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R6884 + -1*R6880 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R6884 + R6880 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R6884 + -1*R6880 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R6884 + R6880 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 != 0 || R112 + R190 + R186 + -1*R6884 + -1*R6880 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R6884 + R6880 = 0)) && (R113 + R191 + R187 != 0 || R83 + R160 + R157 + -1*R192 + -1*R188 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R5926 + R5921 != 0 || R120 + R5927 + R5922 + -1*R6884 + -1*R6880 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R6884 + R6880 = 0)) && (R6887 != 0 || R6888 = R6916 || (R22 = 0 && R6916 = 0)) && (R6889 != 0 || R6890 = R6916 || (R22 = 0 && R6916 = 0)) && (R6891 != 0 || R6892 = R6916 || (R22 = 0 && R6916 = 0)) && (R6893 != 0 || R6894 = R6916 || (R22 = 0 && R6916 = 0)) && (R6895 != 0 || R6896 = R6916 || (R22 = 0 && R6916 = 0)) && (R6897 != 0 || R6898 = R6916 || (R22 = 0 && R6916 = 0)) && (R6899 != 0 || R6900 = R6916 || (R22 = 0 && R6916 = 0)) && (R6901 != 0 || R6902 = R6916 || (R22 = 0 && R6916 = 0)) && (R6903 != 0 || R6904 = R6916 || (R22 = 0 && R6916 = 0)) && (R6905 != 0 || R6906 = R6916 || (R22 = 0 && R6916 = 0)) && (R6907 != 0 || R6908 = R6916 || (R22 = 0 && R6916 = 0)) && (R6909 != 0 || R6910 = R6916 || (R22 = 0 && R6916 = 0)) && (R6911 != 0 || R6912 = R6916 || (R22 = 0 && R6916 = 0)) && (R6913 != 0 || R6914 = R6916 || (R22 = 0 && R6916 = 0)) && (R23 = 0 || (R6945 = 0 && R6946 = 0)) && (R23 = 0 || (R6949 = 0 && R6950 = 0)) && (R23 = 0 || (R6951 = 0 && R6952 = 0)) && (R23 = 0 || (R6953 = 0 && R6954 = 0)) && (R23 = 0 || (R6955 = 0 && R6956 = 0)) && (R23 = 0 || (R6959 = 0 && R6960 = 0)) && (R23 = 0 || (R6961 = 0 && R6962 = 0)) && (R23 = 0 || (R6963 = 0 && R6964 = 0)) && (R24 = 0 || (R6917 = 0 && R6918 = 0)) && (R24 = 0 || (R6919 = 0 && R6920 = 0)) && (R24 = 0 || (R6921 = 0 && R6922 = 0)) && (R24 = 0 || (R6923 = 0 && R6924 = 0)) && (R24 = 0 || (R6925 = 0 && R6926 = 0)) && (R24 = 0 || (R6927 = 0 && R6928 = 0)) && (R24 = 0 || (R6929 = 0 && R6930 = 0)) && (R24 = 0 || (R6931 = 0 && R6932 = 0)) && (R24 = 0 || (R6933 = 0 && R6934 = 0)) && (R24 = 0 || (R6935 = 0 && R6936 = 0)) && (R24 = 0 || (R6937 = 0 && R6938 = 0)) && (R24 = 0 || (R6939 = 0 && R6940 = 0)) && (R24 = 0 || (R6941 = 0 && R6942 = 0)) && (R24 = 0 || (R6943 = 0 && R6944 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R6884 + R6880 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R6884 + R6880 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R6884 + R6880 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 = 0 || (R83 + R160 + R157 = 0 && R130 + R6884 + R6880 = 0)) && (R113 + R191 + R187 = 0 || R83 + R160 + R157 < 1) && (R119 + R5926 + R5921 = 0 || (R83 + R160 + R157 = 0 && R130 + R6884 + R6880 = 0)) && (R123 + R5930 + R5925 = 0 || (R121 + R5928 + R5923 = 0 && R122 + R5929 + R5924 = 0)) && (R6887 = 0 || (R22 = 0 && R6916 = 0)) && (R6889 = 0 || (R22 = 0 && R6916 = 0)) && (R6891 = 0 || (R22 = 0 && R6916 = 0)) && (R6893 = 0 || (R22 = 0 && R6916 = 0)) && (R6895 = 0 || (R22 = 0 && R6916 = 0)) && (R6897 = 0 || (R22 = 0 && R6916 = 0)) && (R6899 = 0 || (R22 = 0 && R6916 = 0)) && (R6901 = 0 || (R22 = 0 && R6916 = 0)) && (R6903 = 0 || (R22 = 0 && R6916 = 0)) && (R6905 = 0 || (R22 = 0 && R6916 = 0)) && (R6907 = 0 || (R22 = 0 && R6916 = 0)) && (R6909 = 0 || (R22 = 0 && R6916 = 0)) && (R6911 = 0 || (R22 = 0 && R6916 = 0)) && (R6913 = 0 || (R22 = 0 && R6916 = 0));
// End of Parikh automata intersection problem
