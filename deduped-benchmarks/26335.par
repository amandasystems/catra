// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R2, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R5, R5921, R5922, R5923, R5924, R5925, R5926, R5927, R5928, R5929, R5930, R63, R65, R67, R68, R69, R7037, R7038, R7039, R7040, R7041, R7042, R7043, R7044, R7045, R7046, R7047, R7048, R7049, R7050, R7051, R7052, R7053, R7054, R7055, R7056, R7057, R7058, R7059, R7060, R7061, R7062, R7063, R7064, R7065, R7066, R7067, R7068, R7069, R7070, R7071, R7072, R7073, R7074, R7075, R7076, R7077, R7078, R7079, R7080, R7081, R7082, R7083, R7084, R7085, R7086, R7087, R7088, R7089, R7090, R7091, R7092, R7093, R7094, R7095, R7096, R7097, R7098, R7099, R7100, R7101, R7102, R7103, R7104, R7105, R7106, R7107, R7108, R7109, R7110, R7111, R7112, R7113, R7114, R7115, R7116, R7117, R7118, R7119, R7120, R7121, R7122, R7123, R7124, R7125, R7126, R7127, R7128, R7129, R7130, R7131, R7132, R7133, R7134, R7135, R7136, R7137, R7138, R7139, R7140, R7141, R7142, R7143, R7144, R7145, R7146, R7147, R7148, R7149, R7150, R7151, R7152, R7153, R7154, R7155, R7156, R7157, R7158, R7159, R7160, R7161, R7162, R7163, R7164, R7165, R7166, R7167, R7168, R7169, R7170, R7171, R7172, R7173, R7174, R7175, R7176, R7177, R7178, R7179, R7180, R7181, R7182, R7183, R7184, R7185, R7186, R7187, R7188, R7189, R7190, R7191, R7192, R7193, R7194, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R26 += 1 };
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R7075 += 1, R7076 += 1 };
  s0 -> s1 [0, 65535] { R7076 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R7076 += 1, R24 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R7078 += 1 };
  s0 -> s0 [0, 65535] { R7077 += 1, R7078 += 1 };
  s0 -> s2 [70, 70] { R7078 += 1 };
  s0 -> s3 [70, 70] { R7078 += 1 };
  s0 -> s1 [76, 65535] { R7078 += 1 };
  s1 -> s1 [0, 69] { R7078 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7078 += 1 };
  s1 -> s3 [70, 70] { R7078 += 1 };
  s1 -> s1 [76, 65535] { R7078 += 1 };
  s2 -> s2 [0, 70] { R7078 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R7078 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R7080 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R7079 += 1, R7080 += 1 };
  s0 -> s2 [70, 70] { R7080 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R7080 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R7080 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R7080 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7080 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R7080 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R7080 += 1, R63 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R7080 += 1, R63 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R7082 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R7081 += 1, R7082 += 1 };
  s0 -> s2 [70, 70] { R7082 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R7082 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R7082 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R7082 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7082 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R7082 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R7082 += 1, R65 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R7082 += 1, R65 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R7084 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R7083 += 1, R7084 += 1 };
  s0 -> s2 [70, 70] { R7084 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R7084 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R7084 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R7084 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7084 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R7084 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R7084 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R7084 += 1, R67 += 1, R68 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R7086 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R7085 += 1, R7086 += 1 };
  s0 -> s2 [70, 70] { R7086 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R7086 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R7086 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R7086 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7086 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R7086 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R7086 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R7086 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R7088 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R7087 += 1, R7088 += 1 };
  s0 -> s2 [70, 70] { R7088 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R7088 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R7088 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R7088 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7088 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R7088 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R7088 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R7088 += 1, R77 += 1, R78 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R7090 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R7089 += 1, R7090 += 1 };
  s0 -> s2 [70, 70] { R7090 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R7090 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R7090 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R7090 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7090 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R7090 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R7090 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535] { R7090 += 1, R81 += 1, R82 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R7092 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R7091 += 1, R7092 += 1 };
  s0 -> s2 [70, 70] { R7092 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R7092 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R7092 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R7092 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7092 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R7092 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R7092 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R7092 += 1, R87 += 1, R88 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R7094 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R7093 += 1, R7094 += 1 };
  s0 -> s2 [70, 70] { R7094 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R7094 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R7094 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R7094 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7094 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R7094 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R7094 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535] { R7094 += 1, R93 += 1, R94 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R7096 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R7095 += 1, R7096 += 1 };
  s0 -> s2 [70, 70] { R7096 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R7096 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R7096 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R7096 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7096 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R7096 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R7096 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R7096 += 1, R101 += 1, R102 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R7098 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R7097 += 1, R7098 += 1 };
  s0 -> s2 [70, 70] { R7098 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R7098 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R7098 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R7098 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7098 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R7098 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R7098 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R7098 += 1, R111 += 1, R112 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R7100 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R7099 += 1, R7100 += 1 };
  s0 -> s2 [70, 70] { R7100 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R7100 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R7100 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R7100 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7100 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R7100 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R7100 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R7100 += 1, R119 += 1, R120 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R7102 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R7101 += 1, R7102 += 1 };
  s0 -> s2 [70, 70] { R7102 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R7102 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R7102 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R7102 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7102 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R7102 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R7102 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535] { R7102 += 1, R129 += 1, R130 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R7132 += 1 };
  s0 -> s0 [0, 65535] { R7131 += 1, R7132 += 1 };
  s0 -> s2 [70, 70] { R7132 += 1 };
  s0 -> s1 [71, 65535] { R7132 += 1 };
  s1 -> s1 [0, 69] { R7132 += 1 };
  s1 -> s2 [70, 70] { R7132 += 1 };
  s1 -> s1 [71, 65535] { R7132 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R7132 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R7133 += 1, R7134 += 1 };
  s0 -> s1 [0, 65535] { R7134 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R7134 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R7136 += 1 };
  s0 -> s2 [0, 65535] { R7136 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R7135 += 1, R7136 += 1 };
  s0 -> s3 [70, 70] { R7136 += 1 };
  s0 -> s1 [71, 65535] { R7136 += 1 };
  s1 -> s1 [0, 69] { R7136 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R7136 += 1 };
  s1 -> s1 [71, 65535] { R7136 += 1 };
  s2 -> s1 [0, 69] { R7136 += 1 };
  s2 -> s2 [0, 65535] { R7136 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R7136 += 1 };
  s2 -> s1 [71, 65535] { R7136 += 1 };
  s3 -> s3 [0, 65535] { R7136 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R7138 += 1, R7046 += 1 };
  s0 -> s2 [0, 65535] { R7138 += 1, R7045 += 1, R7046 += 1 };
  s0 -> s0 [0, 65535] { R7137 += 1, R7138 += 1 };
  s0 -> s1 [71, 65535] { R7138 += 1, R7046 += 1 };
  s1 -> s1 [0, 69] { R7138 += 1, R7046 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R7138 += 1 };
  s1 -> s1 [71, 65535] { R7138 += 1, R7046 += 1 };
  s2 -> s1 [0, 69] { R7138 += 1, R7046 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R7138 += 1, R7045 += 1, R7046 += 1 };
  s2 -> s1 [71, 65535] { R7138 += 1, R7046 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R7139 += 1, R7140 += 1 };
  s0 -> s1 [0, 65535] { R7140 += 1, R7048 += 1, R22 += 1 };
  s0 -> s2 [0, 65535] { R7140 += 1, R7047 += 1, R7048 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R7140 += 1 };
  s1 -> s1 [0, 65535] { R7140 += 1, R7048 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R7140 += 1, R7048 += 1, R22 += 1 };
  s2 -> s2 [0, 65535] { R7140 += 1, R7047 += 1, R7048 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R7140 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R7142 += 1, R7050 += 1 };
  s0 -> s2 [0, 65535] { R7142 += 1, R7049 += 1, R7050 += 1 };
  s0 -> s0 [0, 65535] { R7141 += 1, R7142 += 1 };
  s0 -> s1 [75, 65535] { R7142 += 1, R7050 += 1 };
  s1 -> s1 [0, 70] { R7142 += 1, R7050 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R7142 += 1 };
  s1 -> s1 [75, 65535] { R7142 += 1, R7050 += 1 };
  s2 -> s1 [0, 70] { R7142 += 1, R7050 += 1 };
  s2 -> s2 [0, 65535] { R7142 += 1, R7049 += 1, R7050 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R7142 += 1, R7050 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s0 [0, 65535] { R7143 += 1, R7144 += 1 };
  s0 -> s1 [0, 65535] { R7144 += 1, R7051 += 1, R7052 += 1 };
  s0 -> s2 [0, 65535] { R7144 += 1, R7052 += 1, R138 += 1 };
  s1 -> s1 [0, 65535] { R7144 += 1, R7051 += 1, R7052 += 1 };
  s1 -> s2 [0, 65535] { R7144 += 1, R7052 += 1, R138 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R7144 += 1 };
  s2 -> s2 [0, 65535] { R7144 += 1, R7052 += 1, R138 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R7144 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R7146 += 1, R7054 += 1 };
  s0 -> s2 [0, 65535] { R7146 += 1, R7053 += 1, R7054 += 1 };
  s0 -> s3 [0, 65535] { R7146 += 1, R7054 += 1, R140 += 1 };
  s0 -> s0 [0, 65535] { R7145 += 1, R7146 += 1 };
  s0 -> s1 [76, 65535] { R7146 += 1, R7054 += 1 };
  s1 -> s1 [0, 74] { R7146 += 1, R7054 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R7146 += 1 };
  s1 -> s1 [76, 65535] { R7146 += 1, R7054 += 1 };
  s2 -> s1 [0, 74] { R7146 += 1, R7054 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R7146 += 1, R7053 += 1, R7054 += 1 };
  s2 -> s3 [0, 65535] { R7146 += 1, R7054 += 1, R140 += 1 };
  s2 -> s1 [76, 65535] { R7146 += 1, R7054 += 1 };
  s3 -> s1 [0, 74] { R7146 += 1, R7054 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R7146 += 1, R7054 += 1, R140 += 1 };
  s3 -> s5 [0, 65535] { R7146 += 1 };
  s3 -> s1 [76, 65535] { R7146 += 1, R7054 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R7146 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R7148 += 1, R7056 += 1, R145 += 1, R146 += 1 };
  s0 -> s2 [0, 65535] { R7148 += 1, R7055 += 1, R7056 += 1 };
  s0 -> s3 [0, 65535] { R7148 += 1, R7056 += 1, R144 += 1, R145 += 1 };
  s0 -> s0 [0, 65535] { R7147 += 1, R7148 += 1 };
  s1 -> s1 [0, 65535] { R7148 += 1, R7056 += 1, R145 += 1, R146 += 1 };
  s1 -> s4 [0, 65535] { R7148 += 1 };
  s1 -> s6 [0, 65535] { R7148 += 1, R7056 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R7148 += 1, R7056 += 1, R145 += 1, R146 += 1 };
  s2 -> s2 [0, 65535] { R7148 += 1, R7055 += 1, R7056 += 1 };
  s2 -> s3 [0, 65535] { R7148 += 1, R7056 += 1, R144 += 1, R145 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R7148 += 1, R7056 += 1, R145 += 1, R146 += 1 };
  s3 -> s4 [0, 65535] { R7148 += 1 };
  s3 -> s3 [0, 65535] { R7148 += 1, R7056 += 1, R144 += 1, R145 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R7148 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R7148 += 1 };
  s6 -> s6 [0, 65535] { R7148 += 1, R7056 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R7150 += 1, R7058 += 1, R150 += 1 };
  s0 -> s2 [0, 65535] { R7150 += 1, R7058 += 1, R149 += 1, R150 += 1 };
  s0 -> s3 [0, 65535] { R7150 += 1, R7057 += 1, R7058 += 1 };
  s0 -> s0 [0, 65535] { R7149 += 1, R7150 += 1 };
  s0 -> s4 [75, 75] { R7150 += 1, R7058 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R7150 += 1, R7058 += 1, R150 += 1 };
  s0 -> s1 [77, 65535] { R7150 += 1, R7058 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R7150 += 1, R7058 += 1, R150 += 1 };
  s1 -> s6 [0, 65535] { R7150 += 1 };
  s1 -> s1 [0, 65535] { R7150 += 1, R7058 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [75, 75] { R7150 += 1, R7058 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R7150 += 1, R7058 += 1, R150 += 1 };
  s1 -> s1 [77, 65535] { R7150 += 1, R7058 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R7150 += 1, R7058 += 1, R150 += 1 };
  s2 -> s2 [0, 65535] { R7150 += 1, R7058 += 1, R149 += 1, R150 += 1 };
  s2 -> s6 [0, 65535] { R7150 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [75, 75] { R7150 += 1, R7058 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R7150 += 1, R7058 += 1, R150 += 1 };
  s2 -> s1 [77, 65535] { R7150 += 1, R7058 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R7150 += 1, R7058 += 1, R150 += 1 };
  s3 -> s2 [0, 65535] { R7150 += 1, R7058 += 1, R149 += 1, R150 += 1 };
  s3 -> s3 [0, 65535] { R7150 += 1, R7057 += 1, R7058 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [75, 75] { R7150 += 1, R7058 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R7150 += 1, R7058 += 1, R150 += 1 };
  s3 -> s1 [77, 65535] { R7150 += 1, R7058 += 1, R150 += 1 };
  s4 -> s6 [0, 65535] { R7150 += 1 };
  s4 -> s4 [0, 65535] { R7150 += 1, R7058 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 75] { R7150 += 1, R7058 += 1, R150 += 1 };
  s5 -> s6 [0, 65535] { R7150 += 1 };
  s5 -> s5 [0, 65535] { R7150 += 1, R7058 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [77, 65535] { R7150 += 1, R7058 += 1, R150 += 1 };
  s6 -> s6 [0, 65535] { R7150 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s0 [0, 65535] { R7151 += 1, R7152 += 1 };
  s0 -> s1 [0, 65535] { R7152 += 1, R7060 += 1, R154 += 1 };
  s0 -> s2 [0, 65535] { R7152 += 1, R7059 += 1, R7060 += 1 };
  s0 -> s3 [0, 65535] { R7152 += 1, R7060 += 1 };
  s1 -> s4 [0, 65535] { R7152 += 1 };
  s1 -> s1 [0, 65535] { R7152 += 1, R7060 += 1, R154 += 1 };
  s1 -> s3 [0, 65535] { R7152 += 1, R7060 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R7152 += 1, R7060 += 1, R154 += 1 };
  s2 -> s2 [0, 65535] { R7152 += 1, R7059 += 1, R7060 += 1 };
  s2 -> s3 [0, 65535] { R7152 += 1, R7060 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R7152 += 1 };
  s3 -> s3 [0, 65535] { R7152 += 1, R7060 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R7152 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R7154 += 1, R7061 += 1, R7062 += 1 };
  s0 -> s0 [0, 65535] { R7153 += 1, R7154 += 1 };
  s0 -> s2 [0, 65535] { R7154 += 1, R7062 += 1, R159 += 1, R160 += 1 };
  s0 -> s3 [0, 65535] { R7154 += 1, R7062 += 1, R158 += 1, R159 += 1 };
  s1 -> s1 [0, 65535] { R7154 += 1, R7061 += 1, R7062 += 1 };
  s1 -> s2 [0, 65535] { R7154 += 1, R7062 += 1, R159 += 1, R160 += 1 };
  s1 -> s3 [0, 65535] { R7154 += 1, R7062 += 1, R158 += 1, R159 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s6 [0, 65535] { R7154 += 1, R7062 += 1 };
  s2 -> s2 [0, 65535] { R7154 += 1, R7062 += 1, R159 += 1, R160 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R7154 += 1 };
  s3 -> s2 [0, 65535] { R7154 += 1, R7062 += 1, R159 += 1, R160 += 1 };
  s3 -> s3 [0, 65535] { R7154 += 1, R7062 += 1, R158 += 1, R159 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R7154 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R7154 += 1 };
  s6 -> s6 [0, 65535] { R7154 += 1, R7062 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R7154 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R7156 += 1, R7064 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R7156 += 1, R7064 += 1, R165 += 1, R166 += 1 };
  s0 -> s0 [0, 65535] { R7155 += 1, R7156 += 1 };
  s0 -> s3 [0, 65535] { R7156 += 1, R7063 += 1, R7064 += 1 };
  s0 -> s4 [0, 65535] { R7156 += 1, R7064 += 1, R164 += 1, R165 += 1 };
  s0 -> s1 [76, 65535] { R7156 += 1, R7064 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R7156 += 1, R7064 += 1, R165 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R7156 += 1, R7064 += 1 };
  s1 -> s6 [0, 65535] { R7156 += 1 };
  s1 -> s1 [76, 65535] { R7156 += 1, R7064 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R7156 += 1, R7064 += 1, R165 += 1 };
  s2 -> s2 [0, 65535] { R7156 += 1, R7064 += 1, R165 += 1, R166 += 1 };
  s2 -> s7 [0, 65535] { R7156 += 1, R7064 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R7156 += 1 };
  s2 -> s1 [76, 65535] { R7156 += 1, R7064 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R7156 += 1, R7064 += 1, R165 += 1 };
  s3 -> s2 [0, 65535] { R7156 += 1, R7064 += 1, R165 += 1, R166 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R7156 += 1, R7063 += 1, R7064 += 1 };
  s3 -> s4 [0, 65535] { R7156 += 1, R7064 += 1, R164 += 1, R165 += 1 };
  s3 -> s1 [76, 65535] { R7156 += 1, R7064 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R7156 += 1, R7064 += 1, R165 += 1 };
  s4 -> s2 [0, 65535] { R7156 += 1, R7064 += 1, R165 += 1, R166 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R7156 += 1, R7064 += 1, R164 += 1, R165 += 1 };
  s4 -> s6 [0, 65535] { R7156 += 1 };
  s4 -> s1 [76, 65535] { R7156 += 1, R7064 += 1, R165 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7156 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R7156 += 1, R7064 += 1 };
  s7 -> s6 [0, 65535] { R7156 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R7158 += 1, R7066 += 1, R172 += 1, R174 += 1 };
  s0 -> s2 [0, 65535] { R7158 += 1, R7066 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s0 [0, 65535] { R7157 += 1, R7158 += 1 };
  s0 -> s3 [0, 65535] { R7158 += 1, R7066 += 1, R171 += 1, R172 += 1 };
  s0 -> s4 [0, 65535] { R7158 += 1, R7065 += 1, R7066 += 1 };
  s0 -> s1 [76, 65535] { R7158 += 1, R7066 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R7158 += 1, R7066 += 1, R172 += 1, R174 += 1 };
  s1 -> s6 [0, 65535] { R7158 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R7158 += 1, R7066 += 1, R172 += 1 };
  s1 -> s7 [0, 65535] { R7158 += 1, R7066 += 1 };
  s1 -> s1 [76, 65535] { R7158 += 1, R7066 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R7158 += 1, R7066 += 1, R172 += 1, R174 += 1 };
  s2 -> s2 [0, 65535] { R7158 += 1, R7066 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s6 [0, 65535] { R7158 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R7158 += 1, R7066 += 1 };
  s2 -> s1 [76, 65535] { R7158 += 1, R7066 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R7158 += 1, R7066 += 1, R172 += 1, R174 += 1 };
  s3 -> s2 [0, 65535] { R7158 += 1, R7066 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s6 [0, 65535] { R7158 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R7158 += 1, R7066 += 1, R171 += 1, R172 += 1 };
  s3 -> s1 [76, 65535] { R7158 += 1, R7066 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R7158 += 1, R7066 += 1, R172 += 1, R174 += 1 };
  s4 -> s2 [0, 65535] { R7158 += 1, R7066 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R7158 += 1, R7066 += 1, R171 += 1, R172 += 1 };
  s4 -> s4 [0, 65535] { R7158 += 1, R7065 += 1, R7066 += 1 };
  s4 -> s1 [76, 65535] { R7158 += 1, R7066 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7158 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R7158 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R7158 += 1, R7066 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s0 [0, 65535] { R7159 += 1, R7160 += 1 };
  s0 -> s1 [0, 65535] { R7160 += 1, R7068 += 1, R181 += 1 };
  s0 -> s2 [0, 65535] { R7160 += 1, R7068 += 1 };
  s0 -> s3 [0, 65535] { R7160 += 1, R7067 += 1, R7068 += 1 };
  s1 -> s1 [0, 65535] { R7160 += 1, R7068 += 1, R181 += 1 };
  s1 -> s2 [0, 65535] { R7160 += 1, R7068 += 1 };
  s1 -> s5 [0, 65535] { R7160 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R7160 += 1, R7068 += 1 };
  s2 -> s5 [0, 65535] { R7160 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R7160 += 1, R7068 += 1, R181 += 1 };
  s3 -> s2 [0, 65535] { R7160 += 1, R7068 += 1 };
  s3 -> s3 [0, 65535] { R7160 += 1, R7067 += 1, R7068 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R7160 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 65535] { R7162 += 1, R7070 += 1, R190 += 1, R192 += 1 };
  s0 -> s0 [0, 65535] { R7161 += 1, R7162 += 1 };
  s0 -> s2 [0, 65535] { R7162 += 1, R7070 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s0 -> s3 [0, 65535] { R7162 += 1, R7069 += 1, R7070 += 1 };
  s0 -> s4 [0, 65535] { R7162 += 1, R7070 += 1 };
  s1 -> s1 [0, 65535] { R7162 += 1, R7070 += 1, R190 += 1, R192 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R7162 += 1 };
  s1 -> s7 [0, 65535] { R7162 += 1, R7070 += 1, R190 += 1 };
  s1 -> s4 [0, 65535] { R7162 += 1, R7070 += 1 };
  s2 -> s1 [0, 65535] { R7162 += 1, R7070 += 1, R190 += 1, R192 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R7162 += 1, R7070 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s2 -> s6 [0, 65535] { R7162 += 1 };
  s2 -> s4 [0, 65535] { R7162 += 1, R7070 += 1 };
  s3 -> s1 [0, 65535] { R7162 += 1, R7070 += 1, R190 += 1, R192 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R7162 += 1, R7070 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s3 -> s3 [0, 65535] { R7162 += 1, R7069 += 1, R7070 += 1 };
  s3 -> s4 [0, 65535] { R7162 += 1, R7070 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R7162 += 1 };
  s4 -> s4 [0, 65535] { R7162 += 1, R7070 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7162 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R7162 += 1 };
  s7 -> s7 [0, 65535] { R7162 += 1, R7070 += 1, R190 += 1 };
  s7 -> s4 [0, 65535] { R7162 += 1, R7070 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R7164 += 1, R7072 += 1 };
  s0 -> s0 [0, 65535] { R7163 += 1, R7164 += 1 };
  s0 -> s2 [0, 65535] { R7164 += 1, R7071 += 1, R7072 += 1 };
  s1 -> s1 [0, 65535] { R7164 += 1, R7072 += 1 };
  s1 -> s4 [0, 65535] { R7164 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R7164 += 1, R7072 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R7164 += 1, R7071 += 1, R7072 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R7164 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 74] { R7166 += 1, R7074 += 1, R7042 += 1, R7044 += 1 };
  s0 -> s2 [0, 65535] { R7166 += 1, R7074 += 1, R7041 += 1, R7042 += 1 };
  s0 -> s0 [0, 65535] { R7165 += 1, R7166 += 1 };
  s0 -> s3 [0, 65535] { R7166 += 1, R7073 += 1, R7074 += 1 };
  s0 -> s4 [0, 65535] { R7166 += 1, R7074 += 1, R7042 += 1, R7043 += 1, R7044 += 1 };
  s0 -> s5 [75, 75] { R7166 += 1, R7074 += 1, R7042 += 1, R7044 += 1 };
  s0 -> s6 [76, 76] { R7166 += 1, R7074 += 1, R7042 += 1, R7044 += 1 };
  s0 -> s1 [77, 65535] { R7166 += 1, R7074 += 1, R7042 += 1, R7044 += 1 };
  s1 -> s1 [0, 74] { R7166 += 1, R7074 += 1, R7042 += 1, R7044 += 1 };
  s1 -> s5 [75, 75] { R7166 += 1, R7074 += 1, R7042 += 1, R7044 += 1 };
  s1 -> s6 [76, 76] { R7166 += 1, R7074 += 1, R7042 += 1, R7044 += 1 };
  s1 -> s1 [77, 65535] { R7166 += 1, R7074 += 1, R7042 += 1, R7044 += 1 };
  s2 -> s1 [0, 74] { R7166 += 1, R7074 += 1, R7042 += 1, R7044 += 1 };
  s2 -> s2 [0, 65535] { R7166 += 1, R7074 += 1, R7041 += 1, R7042 += 1 };
  s2 -> s4 [0, 65535] { R7166 += 1, R7074 += 1, R7042 += 1, R7043 += 1, R7044 += 1 };
  s2 -> s5 [75, 75] { R7166 += 1, R7074 += 1, R7042 += 1, R7044 += 1 };
  s2 -> s6 [76, 76] { R7166 += 1, R7074 += 1, R7042 += 1, R7044 += 1 };
  s2 -> s1 [77, 65535] { R7166 += 1, R7074 += 1, R7042 += 1, R7044 += 1 };
  s3 -> s1 [0, 74] { R7166 += 1, R7074 += 1, R7042 += 1, R7044 += 1 };
  s3 -> s2 [0, 65535] { R7166 += 1, R7074 += 1, R7041 += 1, R7042 += 1 };
  s3 -> s3 [0, 65535] { R7166 += 1, R7073 += 1, R7074 += 1 };
  s3 -> s4 [0, 65535] { R7166 += 1, R7074 += 1, R7042 += 1, R7043 += 1, R7044 += 1 };
  s3 -> s5 [75, 75] { R7166 += 1, R7074 += 1, R7042 += 1, R7044 += 1 };
  s3 -> s6 [76, 76] { R7166 += 1, R7074 += 1, R7042 += 1, R7044 += 1 };
  s3 -> s1 [77, 65535] { R7166 += 1, R7074 += 1, R7042 += 1, R7044 += 1 };
  s4 -> s1 [0, 74] { R7166 += 1, R7074 += 1, R7042 += 1, R7044 += 1 };
  s4 -> s4 [0, 65535] { R7166 += 1, R7074 += 1, R7042 += 1, R7043 += 1, R7044 += 1 };
  s4 -> s5 [75, 75] { R7166 += 1, R7074 += 1, R7042 += 1, R7044 += 1 };
  s4 -> s6 [76, 76] { R7166 += 1, R7074 += 1, R7042 += 1, R7044 += 1 };
  s4 -> s1 [77, 65535] { R7166 += 1, R7074 += 1, R7042 += 1, R7044 += 1 };
  s5 -> s5 [0, 75] { R7166 += 1, R7074 += 1, R7042 += 1, R7044 += 1 };
  s5 -> s10 [76, 76] { R7166 += 1, R7074 += 1, R7042 += 1, R7044 += 1 };
  s5 -> s5 [77, 65535] { R7166 += 1, R7074 += 1, R7042 += 1, R7044 += 1 };
  s6 -> s6 [0, 74] { R7166 += 1, R7074 += 1, R7042 += 1, R7044 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R7166 += 1, R7074 += 1 };
  s6 -> s9 [0, 65535] { R7166 += 1 };
  s6 -> s6 [0, 65535] { R7166 += 1, R7074 += 1, R7042 += 1 };
  s6 -> s10 [75, 75] { R7166 += 1, R7074 += 1, R7042 += 1, R7044 += 1 };
  s6 -> s11 [75, 75] { R7166 += 1, R7074 += 1, R7042 += 1, R7044 += 1 };
  s6 -> s6 [76, 65535] { R7166 += 1, R7074 += 1, R7042 += 1, R7044 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R7166 += 1, R7074 += 1 };
  s8 -> s9 [0, 65535] { R7166 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s9 [0, 65535] { R7166 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s8 [0, 65535] { R7166 += 1, R7074 += 1 };
  s10 -> s10 [0, 65535] { R7166 += 1, R7074 += 1, R7042 += 1, R7044 += 1 };
  s10 -> s9 [0, 65535] { R7166 += 1 };
  s10 -> s12 [0, 65535] { R7166 += 1, R7074 += 1, R7042 += 1 };
  s11 -> s7 [0, 65535];
  s11 -> s8 [0, 65535] { R7166 += 1, R7074 += 1 };
  s11 -> s9 [0, 65535] { R7166 += 1 };
  s11 -> s11 [0, 65535] { R7166 += 1, R7074 += 1, R7042 += 1 };
  s12 -> s7 [0, 65535];
  s12 -> s8 [0, 65535] { R7166 += 1, R7074 += 1 };
  s12 -> s9 [0, 65535] { R7166 += 1 };
  s12 -> s12 [0, 65535] { R7166 += 1, R7074 += 1, R7042 += 1 };
  accepting s12, s8, s9, s6, s7, s10, s11;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65535] { R7168 += 1, R7103 += 1, R7104 += 1 };
  s0 -> s0 [0, 65535] { R7167 += 1, R7168 += 1 };
  s0 -> s2 [0, 65535] { R7168 += 1, R7104 += 1, R23 += 1 };
  s1 -> s1 [0, 65535] { R7168 += 1, R7103 += 1, R7104 += 1 };
  s1 -> s2 [0, 65535] { R7168 += 1, R7104 += 1, R23 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R7168 += 1 };
  s2 -> s2 [0, 65535] { R7168 += 1, R7104 += 1, R23 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R7168 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R7170 += 1, R7106 += 1 };
  s0 -> s0 [0, 65535] { R7169 += 1, R7170 += 1 };
  s0 -> s2 [0, 65535] { R7170 += 1, R7105 += 1, R7106 += 1 };
  s0 -> s3 [70, 70] { R7170 += 1, R7106 += 1 };
  s0 -> s4 [70, 70] { R7170 += 1, R7106 += 1 };
  s0 -> s5 [75, 75] { R7170 += 1, R7106 += 1 };
  s0 -> s1 [76, 65535] { R7170 += 1, R7106 += 1 };
  s1 -> s1 [0, 69] { R7170 += 1, R7106 += 1 };
  s1 -> s3 [70, 70] { R7170 += 1, R7106 += 1 };
  s1 -> s4 [70, 70] { R7170 += 1, R7106 += 1 };
  s1 -> s5 [75, 75] { R7170 += 1, R7106 += 1 };
  s1 -> s1 [76, 65535] { R7170 += 1, R7106 += 1 };
  s2 -> s1 [0, 69] { R7170 += 1, R7106 += 1 };
  s2 -> s2 [0, 65535] { R7170 += 1, R7105 += 1, R7106 += 1 };
  s2 -> s3 [70, 70] { R7170 += 1, R7106 += 1 };
  s2 -> s4 [70, 70] { R7170 += 1, R7106 += 1 };
  s2 -> s5 [75, 75] { R7170 += 1, R7106 += 1 };
  s2 -> s1 [76, 65535] { R7170 += 1, R7106 += 1 };
  s4 -> s4 [0, 70] { R7170 += 1, R7106 += 1 };
  s4 -> s7 [75, 75] { R7170 += 1, R7106 += 1 };
  s4 -> s4 [76, 65535] { R7170 += 1, R7106 += 1 };
  s5 -> s5 [0, 69] { R7170 += 1, R7106 += 1 };
  s5 -> s5 [0, 65535] { R7170 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R7170 += 1, R7106 += 1 };
  s5 -> s8 [70, 70] { R7170 += 1, R7106 += 1 };
  s5 -> s5 [75, 65535] { R7170 += 1, R7106 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R7170 += 1, R7106 += 1 };
  s7 -> s7 [0, 65535] { R7170 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R7170 += 1, R7106 += 1 };
  s8 -> s8 [0, 65535] { R7170 += 1 };
  s8 -> s6 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R7172 += 1, R7108 += 1, R137 += 1 };
  s0 -> s2 [0, 65535] { R7172 += 1, R7107 += 1, R7108 += 1 };
  s0 -> s0 [0, 65535] { R7171 += 1, R7172 += 1 };
  s0 -> s3 [70, 70] { R7172 += 1, R7108 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R7172 += 1, R7108 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R7172 += 1, R7108 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R7172 += 1, R7108 += 1, R137 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R7172 += 1 };
  s1 -> s3 [70, 70] { R7172 += 1, R7108 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R7172 += 1, R7108 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R7172 += 1, R7108 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R7172 += 1, R7108 += 1, R137 += 1 };
  s2 -> s2 [0, 65535] { R7172 += 1, R7107 += 1, R7108 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R7172 += 1, R7108 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R7172 += 1, R7108 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R7172 += 1, R7108 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R7172 += 1, R7108 += 1, R137 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R7172 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R7172 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7172 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R7174 += 1, R7110 += 1, R139 += 1 };
  s0 -> s0 [0, 65535] { R7173 += 1, R7174 += 1 };
  s0 -> s2 [0, 65535] { R7174 += 1, R7109 += 1, R7110 += 1 };
  s0 -> s3 [70, 70] { R7174 += 1, R7110 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R7174 += 1, R7110 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R7174 += 1, R7110 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R7174 += 1, R7110 += 1, R139 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R7174 += 1 };
  s1 -> s3 [70, 70] { R7174 += 1, R7110 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R7174 += 1, R7110 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R7174 += 1, R7110 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R7174 += 1, R7110 += 1, R139 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R7174 += 1, R7109 += 1, R7110 += 1 };
  s2 -> s3 [70, 70] { R7174 += 1, R7110 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R7174 += 1, R7110 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R7174 += 1, R7110 += 1, R139 += 1 };
  s3 -> s3 [0, 65535] { R7174 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R7174 += 1, R7110 += 1, R139 += 1 };
  s4 -> s5 [0, 65535] { R7174 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R7174 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R7176 += 1, R7112 += 1, R141 += 1, R142 += 1 };
  s0 -> s0 [0, 65535] { R7175 += 1, R7176 += 1 };
  s0 -> s2 [0, 65535] { R7176 += 1, R7111 += 1, R7112 += 1 };
  s0 -> s3 [70, 70] { R7176 += 1, R7112 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R7176 += 1, R7112 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R7176 += 1, R7112 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R7176 += 1, R7112 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 65535] { R7176 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R7176 += 1, R7112 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R7176 += 1, R7112 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R7176 += 1, R7112 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R7176 += 1, R7112 += 1, R141 += 1, R142 += 1 };
  s2 -> s2 [0, 65535] { R7176 += 1, R7111 += 1, R7112 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R7176 += 1, R7112 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R7176 += 1, R7112 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R7176 += 1, R7112 += 1, R141 += 1, R142 += 1 };
  s3 -> s6 [0, 65535] { R7176 += 1 };
  s3 -> s3 [0, 65535] { R7176 += 1, R7112 += 1, R141 += 1, R142 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R7176 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7176 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R7178 += 1, R7114 += 1, R147 += 1, R148 += 1 };
  s0 -> s0 [0, 65535] { R7177 += 1, R7178 += 1 };
  s0 -> s2 [0, 65535] { R7178 += 1, R7113 += 1, R7114 += 1 };
  s0 -> s3 [70, 70] { R7178 += 1, R7114 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R7178 += 1, R7114 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R7178 += 1, R7114 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R7178 += 1, R7114 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 65535] { R7178 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R7178 += 1, R7114 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R7178 += 1, R7114 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R7178 += 1, R7114 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R7178 += 1, R7114 += 1, R147 += 1, R148 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R7178 += 1, R7113 += 1, R7114 += 1 };
  s2 -> s3 [70, 70] { R7178 += 1, R7114 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R7178 += 1, R7114 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R7178 += 1, R7114 += 1, R147 += 1, R148 += 1 };
  s3 -> s6 [0, 65535] { R7178 += 1 };
  s3 -> s3 [0, 65535] { R7178 += 1, R7114 += 1, R147 += 1, R148 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R7178 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7178 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R7180 += 1, R7116 += 1, R151 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R7180 += 1, R7116 += 1, R152 += 1 };
  s0 -> s0 [0, 65535] { R7179 += 1, R7180 += 1 };
  s0 -> s3 [0, 65535] { R7180 += 1, R7115 += 1, R7116 += 1 };
  s0 -> s4 [70, 70] { R7180 += 1, R7116 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R7180 += 1, R7116 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R7180 += 1, R7116 += 1, R151 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R7180 += 1, R7116 += 1, R151 += 1, R152 += 1 };
  s0 -> s2 [71, 74] { R7180 += 1, R7116 += 1, R152 += 1 };
  s0 -> s1 [71, 65535] { R7180 += 1, R7116 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R7180 += 1, R7116 += 1, R152 += 1 };
  s0 -> s2 [76, 65535] { R7180 += 1, R7116 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R7180 += 1, R7116 += 1, R151 += 1, R152 += 1 };
  s1 -> s2 [0, 69] { R7180 += 1, R7116 += 1, R152 += 1 };
  s1 -> s4 [70, 70] { R7180 += 1, R7116 += 1, R152 += 1 };
  s1 -> s5 [70, 70] { R7180 += 1, R7116 += 1, R152 += 1 };
  s1 -> s6 [70, 70] { R7180 += 1, R7116 += 1, R151 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R7180 += 1, R7116 += 1, R151 += 1, R152 += 1 };
  s1 -> s2 [71, 74] { R7180 += 1, R7116 += 1, R152 += 1 };
  s1 -> s1 [71, 65535] { R7180 += 1, R7116 += 1, R151 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R7180 += 1, R7116 += 1, R152 += 1 };
  s1 -> s2 [76, 65535] { R7180 += 1, R7116 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R7180 += 1, R7116 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R7180 += 1, R7116 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R7180 += 1, R7116 += 1, R152 += 1 };
  s2 -> s2 [71, 74] { R7180 += 1, R7116 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R7180 += 1, R7116 += 1, R152 += 1 };
  s2 -> s2 [76, 65535] { R7180 += 1, R7116 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R7180 += 1, R7116 += 1, R151 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R7180 += 1, R7116 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R7180 += 1, R7115 += 1, R7116 += 1 };
  s3 -> s4 [70, 70] { R7180 += 1, R7116 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R7180 += 1, R7116 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R7180 += 1, R7116 += 1, R151 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R7180 += 1, R7116 += 1, R151 += 1, R152 += 1 };
  s3 -> s2 [71, 74] { R7180 += 1, R7116 += 1, R152 += 1 };
  s3 -> s1 [71, 65535] { R7180 += 1, R7116 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R7180 += 1, R7116 += 1, R152 += 1 };
  s3 -> s2 [76, 65535] { R7180 += 1, R7116 += 1, R152 += 1 };
  s5 -> s5 [0, 74] { R7180 += 1, R7116 += 1, R152 += 1 };
  s5 -> s10 [75, 75] { R7180 += 1, R7116 += 1, R152 += 1 };
  s5 -> s5 [76, 65535] { R7180 += 1, R7116 += 1, R152 += 1 };
  s6 -> s5 [0, 74] { R7180 += 1, R7116 += 1, R152 += 1 };
  s6 -> s6 [0, 65535] { R7180 += 1, R7116 += 1, R151 += 1, R152 += 1 };
  s6 -> s10 [75, 75] { R7180 += 1, R7116 += 1, R152 += 1 };
  s6 -> s5 [76, 65535] { R7180 += 1, R7116 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R7180 += 1, R7116 += 1, R152 += 1 };
  s8 -> s8 [0, 65535] { R7180 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R7180 += 1, R7116 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R7180 += 1, R7116 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R7180 += 1, R7116 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s12 [0, 65535] { R7180 += 1 };
  s10 -> s10 [0, 65535] { R7180 += 1, R7116 += 1, R152 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R7180 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R7180 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R7182 += 1, R7118 += 1, R155 += 1, R156 += 1 };
  s0 -> s2 [0, 65535] { R7182 += 1, R7117 += 1, R7118 += 1 };
  s0 -> s0 [0, 65535] { R7181 += 1, R7182 += 1 };
  s0 -> s3 [70, 70] { R7182 += 1, R7118 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R7182 += 1, R7118 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R7182 += 1, R7118 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R7182 += 1, R7118 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 65535] { R7182 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R7182 += 1, R7118 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R7182 += 1, R7118 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R7182 += 1, R7118 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R7182 += 1, R7118 += 1, R155 += 1, R156 += 1 };
  s2 -> s2 [0, 65535] { R7182 += 1, R7117 += 1, R7118 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R7182 += 1, R7118 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R7182 += 1, R7118 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R7182 += 1, R7118 += 1, R155 += 1, R156 += 1 };
  s3 -> s3 [0, 65535] { R7182 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R7182 += 1 };
  s4 -> s4 [0, 65535] { R7182 += 1, R7118 += 1, R155 += 1, R156 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R7182 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R7184 += 1, R7120 += 1, R161 += 1, R162 += 1 };
  s0 -> s0 [0, 65535] { R7183 += 1, R7184 += 1 };
  s0 -> s2 [0, 65535] { R7184 += 1, R7119 += 1, R7120 += 1 };
  s0 -> s3 [70, 70] { R7184 += 1, R7120 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R7184 += 1, R7120 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R7184 += 1, R7120 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R7184 += 1, R7120 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535] { R7184 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R7184 += 1, R7120 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R7184 += 1, R7120 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R7184 += 1, R7120 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R7184 += 1, R7120 += 1, R161 += 1, R162 += 1 };
  s2 -> s2 [0, 65535] { R7184 += 1, R7119 += 1, R7120 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R7184 += 1, R7120 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R7184 += 1, R7120 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R7184 += 1, R7120 += 1, R161 += 1, R162 += 1 };
  s3 -> s3 [0, 65535] { R7184 += 1, R7120 += 1, R161 += 1, R162 += 1 };
  s3 -> s6 [0, 65535] { R7184 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R7184 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7184 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R7186 += 1, R7122 += 1, R167 += 1, R168 += 1 };
  s0 -> s0 [0, 65535] { R7185 += 1, R7186 += 1 };
  s0 -> s2 [0, 65535] { R7186 += 1, R7121 += 1, R7122 += 1 };
  s0 -> s3 [70, 70] { R7186 += 1, R7122 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R7186 += 1, R7122 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R7186 += 1, R7122 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R7186 += 1, R7122 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 65535] { R7186 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R7186 += 1, R7122 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R7186 += 1, R7122 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R7186 += 1, R7122 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R7186 += 1, R7122 += 1, R167 += 1, R168 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R7186 += 1, R7121 += 1, R7122 += 1 };
  s2 -> s3 [70, 70] { R7186 += 1, R7122 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R7186 += 1, R7122 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R7186 += 1, R7122 += 1, R167 += 1, R168 += 1 };
  s3 -> s3 [0, 65535] { R7186 += 1, R7122 += 1, R167 += 1, R168 += 1 };
  s3 -> s6 [0, 65535] { R7186 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R7186 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7186 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R7188 += 1, R7124 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s2 [0, 69] { R7188 += 1, R7124 += 1, R175 += 1, R176 += 1 };
  s0 -> s3 [0, 69] { R7188 += 1, R7124 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s4 [0, 65535] { R7188 += 1, R7123 += 1, R7124 += 1 };
  s0 -> s0 [0, 65535] { R7187 += 1, R7188 += 1 };
  s0 -> s5 [70, 70] { R7188 += 1, R7124 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s6 [70, 70] { R7188 += 1, R7124 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s7 [70, 70] { R7188 += 1, R7124 += 1, R175 += 1, R176 += 1 };
  s0 -> s8 [70, 70] { R7188 += 1, R7124 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s9 [70, 70] { R7188 += 1, R7124 += 1, R175 += 1, R176 += 1 };
  s0 -> s10 [70, 70] { R7188 += 1, R7124 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s1 [71, 65535] { R7188 += 1, R7124 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s2 [71, 65535] { R7188 += 1, R7124 += 1, R175 += 1, R176 += 1 };
  s0 -> s3 [71, 65535] { R7188 += 1, R7124 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s1 [0, 69] { R7188 += 1, R7124 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s3 [0, 69] { R7188 += 1, R7124 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s5 [70, 70] { R7188 += 1, R7124 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s6 [70, 70] { R7188 += 1, R7124 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s8 [70, 70] { R7188 += 1, R7124 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s10 [70, 70] { R7188 += 1, R7124 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s1 [71, 65535] { R7188 += 1, R7124 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s3 [71, 65535] { R7188 += 1, R7124 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s1 [0, 69] { R7188 += 1, R7124 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s2 [0, 69] { R7188 += 1, R7124 += 1, R175 += 1, R176 += 1 };
  s2 -> s3 [0, 69] { R7188 += 1, R7124 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s5 [70, 70] { R7188 += 1, R7124 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s6 [70, 70] { R7188 += 1, R7124 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s7 [70, 70] { R7188 += 1, R7124 += 1, R175 += 1, R176 += 1 };
  s2 -> s8 [70, 70] { R7188 += 1, R7124 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s9 [70, 70] { R7188 += 1, R7124 += 1, R175 += 1, R176 += 1 };
  s2 -> s10 [70, 70] { R7188 += 1, R7124 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s1 [71, 65535] { R7188 += 1, R7124 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s2 [71, 65535] { R7188 += 1, R7124 += 1, R175 += 1, R176 += 1 };
  s2 -> s3 [71, 65535] { R7188 += 1, R7124 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [0, 69] { R7188 += 1, R7124 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s14 [0, 69] { R7188 += 1, R7124 += 1, R176 += 1 };
  s3 -> s15 [70, 70] { R7188 += 1, R7124 += 1, R176 += 1 };
  s3 -> s6 [70, 70] { R7188 += 1, R7124 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s8 [70, 70] { R7188 += 1, R7124 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s11 [70, 70] { R7188 += 1, R7124 += 1, R176 += 1 };
  s3 -> s3 [71, 65535] { R7188 += 1, R7124 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s14 [71, 65535] { R7188 += 1, R7124 += 1, R176 += 1 };
  s4 -> s1 [0, 69] { R7188 += 1, R7124 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s2 [0, 69] { R7188 += 1, R7124 += 1, R175 += 1, R176 += 1 };
  s4 -> s3 [0, 69] { R7188 += 1, R7124 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s4 [0, 65535] { R7188 += 1, R7123 += 1, R7124 += 1 };
  s4 -> s5 [70, 70] { R7188 += 1, R7124 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s6 [70, 70] { R7188 += 1, R7124 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s7 [70, 70] { R7188 += 1, R7124 += 1, R175 += 1, R176 += 1 };
  s4 -> s8 [70, 70] { R7188 += 1, R7124 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s9 [70, 70] { R7188 += 1, R7124 += 1, R175 += 1, R176 += 1 };
  s4 -> s10 [70, 70] { R7188 += 1, R7124 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s1 [71, 65535] { R7188 += 1, R7124 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s2 [71, 65535] { R7188 += 1, R7124 += 1, R175 += 1, R176 += 1 };
  s4 -> s3 [71, 65535] { R7188 += 1, R7124 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s8 -> s8 [0, 65535] { R7188 += 1, R7124 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s8 -> s11 [0, 65535] { R7188 += 1, R7124 += 1, R176 += 1 };
  s9 -> s8 [0, 65535] { R7188 += 1, R7124 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s9 -> s9 [0, 65535] { R7188 += 1, R7124 += 1, R175 += 1, R176 += 1 };
  s9 -> s10 [0, 65535] { R7188 += 1, R7124 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s10 -> s8 [0, 65535] { R7188 += 1, R7124 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s10 -> s10 [0, 65535] { R7188 += 1, R7124 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s11 -> s12 [0, 65535] { R7188 += 1 };
  s11 -> s13 [0, 65535];
  s11 -> s11 [0, 65535] { R7188 += 1, R7124 += 1, R176 += 1 };
  s12 -> s12 [0, 65535] { R7188 += 1 };
  s12 -> s13 [0, 65535];
  s13 -> s13 [0, 65535];
  s14 -> s14 [0, 69] { R7188 += 1, R7124 += 1, R176 += 1 };
  s14 -> s13 [0, 65535];
  s14 -> s14 [0, 65535] { R7188 += 1 };
  s14 -> s15 [70, 70] { R7188 += 1, R7124 += 1, R176 += 1 };
  s14 -> s11 [70, 70] { R7188 += 1, R7124 += 1, R176 += 1 };
  s14 -> s14 [71, 65535] { R7188 += 1, R7124 += 1, R176 += 1 };
  s15 -> s13 [0, 65535];
  s15 -> s15 [0, 65535] { R7188 += 1 };
  accepting s12, s13, s14, s15, s11;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R7190 += 1, R7126 += 1, R185 += 1, R186 += 1 };
  s0 -> s2 [0, 69] { R7190 += 1, R7126 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s0 -> s3 [0, 65535] { R7190 += 1, R7125 += 1, R7126 += 1 };
  s0 -> s0 [0, 65535] { R7189 += 1, R7190 += 1 };
  s0 -> s4 [70, 70] { R7190 += 1, R7126 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s0 -> s5 [70, 70] { R7190 += 1, R7126 += 1, R185 += 1, R186 += 1 };
  s0 -> s6 [70, 70] { R7190 += 1, R7126 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s0 -> s7 [70, 70] { R7190 += 1, R7126 += 1, R185 += 1, R186 += 1 };
  s0 -> s1 [71, 65535] { R7190 += 1, R7126 += 1, R185 += 1, R186 += 1 };
  s0 -> s2 [71, 65535] { R7190 += 1, R7126 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s1 -> s1 [0, 69] { R7190 += 1, R7126 += 1, R185 += 1, R186 += 1 };
  s1 -> s2 [0, 69] { R7190 += 1, R7126 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s1 -> s4 [70, 70] { R7190 += 1, R7126 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s1 -> s5 [70, 70] { R7190 += 1, R7126 += 1, R185 += 1, R186 += 1 };
  s1 -> s6 [70, 70] { R7190 += 1, R7126 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s1 -> s7 [70, 70] { R7190 += 1, R7126 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [71, 65535] { R7190 += 1, R7126 += 1, R185 += 1, R186 += 1 };
  s1 -> s2 [71, 65535] { R7190 += 1, R7126 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s2 -> s2 [0, 69] { R7190 += 1, R7126 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R7190 += 1 };
  s2 -> s4 [70, 70] { R7190 += 1, R7126 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s2 -> s6 [70, 70] { R7190 += 1, R7126 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s2 -> s2 [71, 65535] { R7190 += 1, R7126 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s3 -> s1 [0, 69] { R7190 += 1, R7126 += 1, R185 += 1, R186 += 1 };
  s3 -> s2 [0, 69] { R7190 += 1, R7126 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s3 -> s3 [0, 65535] { R7190 += 1, R7125 += 1, R7126 += 1 };
  s3 -> s4 [70, 70] { R7190 += 1, R7126 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s3 -> s5 [70, 70] { R7190 += 1, R7126 += 1, R185 += 1, R186 += 1 };
  s3 -> s6 [70, 70] { R7190 += 1, R7126 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s3 -> s7 [70, 70] { R7190 += 1, R7126 += 1, R185 += 1, R186 += 1 };
  s3 -> s1 [71, 65535] { R7190 += 1, R7126 += 1, R185 += 1, R186 += 1 };
  s3 -> s2 [71, 65535] { R7190 += 1, R7126 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s4 -> s4 [0, 65535] { R7190 += 1, R7126 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s4 -> s9 [0, 65535] { R7190 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s4 [0, 65535] { R7190 += 1, R7126 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s5 -> s5 [0, 65535] { R7190 += 1, R7126 += 1, R185 += 1, R186 += 1 };
  s6 -> s6 [0, 65535] { R7190 += 1 };
  s6 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R7190 += 1 };
  s9 -> s8 [0, 65535];
  accepting s4, s8, s2, s9, s6;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R7192 += 1, R7128 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s0 -> s2 [0, 69] { R7192 += 1, R7128 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s0 -> s3 [0, 69] { R7192 += 1, R7128 += 1, R5921 += 1, R5922 += 1 };
  s0 -> s4 [0, 65535] { R7192 += 1, R7127 += 1, R7128 += 1 };
  s0 -> s0 [0, 65535] { R7191 += 1, R7192 += 1 };
  s0 -> s5 [70, 70] { R7192 += 1, R7128 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s0 -> s6 [70, 70] { R7192 += 1, R7128 += 1, R5921 += 1, R5922 += 1 };
  s0 -> s7 [70, 70] { R7192 += 1, R7128 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s0 -> s8 [70, 70] { R7192 += 1, R7128 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s0 -> s9 [70, 70] { R7192 += 1, R7128 += 1, R5921 += 1, R5922 += 1 };
  s0 -> s10 [70, 70] { R7192 += 1, R7128 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s0 -> s1 [71, 65535] { R7192 += 1, R7128 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s0 -> s2 [71, 65535] { R7192 += 1, R7128 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s0 -> s3 [71, 65535] { R7192 += 1, R7128 += 1, R5921 += 1, R5922 += 1 };
  s1 -> s15 [0, 69] { R7192 += 1, R7128 += 1 };
  s1 -> s1 [0, 69] { R7192 += 1, R7128 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s1 -> s2 [0, 69] { R7192 += 1, R7128 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s1 -> s5 [70, 70] { R7192 += 1, R7128 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s1 -> s8 [70, 70] { R7192 += 1, R7128 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s1 -> s7 [70, 70] { R7192 += 1, R7128 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s1 -> s11 [70, 70] { R7192 += 1, R7128 += 1 };
  s1 -> s10 [70, 70] { R7192 += 1, R7128 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s1 -> s18 [70, 70] { R7192 += 1, R7128 += 1 };
  s1 -> s15 [71, 65535] { R7192 += 1, R7128 += 1 };
  s1 -> s1 [71, 65535] { R7192 += 1, R7128 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s1 -> s2 [71, 65535] { R7192 += 1, R7128 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s2 -> s15 [0, 69] { R7192 += 1, R7128 += 1 };
  s2 -> s16 [0, 69] { R7192 += 1, R7128 += 1, R5922 += 1 };
  s2 -> s2 [0, 69] { R7192 += 1, R7128 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s2 -> s14 [70, 70] { R7192 += 1, R7128 += 1, R5922 += 1 };
  s2 -> s17 [70, 70] { R7192 += 1, R7128 += 1, R5922 += 1 };
  s2 -> s5 [70, 70] { R7192 += 1, R7128 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s2 -> s7 [70, 70] { R7192 += 1, R7128 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s2 -> s11 [70, 70] { R7192 += 1, R7128 += 1 };
  s2 -> s18 [70, 70] { R7192 += 1, R7128 += 1 };
  s2 -> s15 [71, 65535] { R7192 += 1, R7128 += 1 };
  s2 -> s16 [71, 65535] { R7192 += 1, R7128 += 1, R5922 += 1 };
  s2 -> s2 [71, 65535] { R7192 += 1, R7128 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s3 -> s1 [0, 69] { R7192 += 1, R7128 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s3 -> s2 [0, 69] { R7192 += 1, R7128 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s3 -> s3 [0, 69] { R7192 += 1, R7128 += 1, R5921 += 1, R5922 += 1 };
  s3 -> s5 [70, 70] { R7192 += 1, R7128 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s3 -> s6 [70, 70] { R7192 += 1, R7128 += 1, R5921 += 1, R5922 += 1 };
  s3 -> s7 [70, 70] { R7192 += 1, R7128 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s3 -> s8 [70, 70] { R7192 += 1, R7128 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s3 -> s9 [70, 70] { R7192 += 1, R7128 += 1, R5921 += 1, R5922 += 1 };
  s3 -> s10 [70, 70] { R7192 += 1, R7128 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s3 -> s1 [71, 65535] { R7192 += 1, R7128 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s3 -> s2 [71, 65535] { R7192 += 1, R7128 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s3 -> s3 [71, 65535] { R7192 += 1, R7128 += 1, R5921 += 1, R5922 += 1 };
  s4 -> s1 [0, 69] { R7192 += 1, R7128 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s4 -> s2 [0, 69] { R7192 += 1, R7128 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s4 -> s3 [0, 69] { R7192 += 1, R7128 += 1, R5921 += 1, R5922 += 1 };
  s4 -> s4 [0, 65535] { R7192 += 1, R7127 += 1, R7128 += 1 };
  s4 -> s5 [70, 70] { R7192 += 1, R7128 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s4 -> s6 [70, 70] { R7192 += 1, R7128 += 1, R5921 += 1, R5922 += 1 };
  s4 -> s7 [70, 70] { R7192 += 1, R7128 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s4 -> s8 [70, 70] { R7192 += 1, R7128 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s4 -> s9 [70, 70] { R7192 += 1, R7128 += 1, R5921 += 1, R5922 += 1 };
  s4 -> s10 [70, 70] { R7192 += 1, R7128 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s4 -> s1 [71, 65535] { R7192 += 1, R7128 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s4 -> s2 [71, 65535] { R7192 += 1, R7128 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s4 -> s3 [71, 65535] { R7192 += 1, R7128 += 1, R5921 += 1, R5922 += 1 };
  s5 -> s14 [0, 65535] { R7192 += 1, R7128 += 1, R5922 += 1 };
  s5 -> s5 [0, 65535] { R7192 += 1, R7128 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s5 -> s11 [0, 65535] { R7192 += 1, R7128 += 1 };
  s9 -> s5 [0, 65535] { R7192 += 1, R7128 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s9 -> s9 [0, 65535] { R7192 += 1, R7128 += 1, R5921 += 1, R5922 += 1 };
  s9 -> s10 [0, 65535] { R7192 += 1, R7128 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s10 -> s5 [0, 65535] { R7192 += 1, R7128 += 1, R5922 += 1, R5924 += 1, R5925 += 1 };
  s10 -> s11 [0, 65535] { R7192 += 1, R7128 += 1 };
  s10 -> s10 [0, 65535] { R7192 += 1, R7128 += 1, R5922 += 1, R5923 += 1, R5924 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [0, 65535] { R7192 += 1 };
  s11 -> s11 [0, 65535] { R7192 += 1, R7128 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R7192 += 1 };
  s14 -> s14 [0, 65535] { R7192 += 1, R7128 += 1, R5922 += 1 };
  s14 -> s11 [0, 65535] { R7192 += 1, R7128 += 1 };
  s15 -> s15 [0, 69] { R7192 += 1, R7128 += 1 };
  s15 -> s15 [0, 65535] { R7192 += 1 };
  s15 -> s12 [0, 65535];
  s15 -> s11 [70, 70] { R7192 += 1, R7128 += 1 };
  s15 -> s18 [70, 70] { R7192 += 1, R7128 += 1 };
  s15 -> s15 [71, 65535] { R7192 += 1, R7128 += 1 };
  s16 -> s15 [0, 69] { R7192 += 1, R7128 += 1 };
  s16 -> s16 [0, 69] { R7192 += 1, R7128 += 1, R5922 += 1 };
  s16 -> s14 [70, 70] { R7192 += 1, R7128 += 1, R5922 += 1 };
  s16 -> s17 [70, 70] { R7192 += 1, R7128 += 1, R5922 += 1 };
  s16 -> s11 [70, 70] { R7192 += 1, R7128 += 1 };
  s16 -> s18 [70, 70] { R7192 += 1, R7128 += 1 };
  s16 -> s15 [71, 65535] { R7192 += 1, R7128 += 1 };
  s16 -> s16 [71, 65535] { R7192 += 1, R7128 += 1, R5922 += 1 };
  s18 -> s12 [0, 65535];
  s18 -> s18 [0, 65535] { R7192 += 1 };
  accepting s12, s13, s18, s15, s11;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R7194 += 1, R7130 += 1, R7037 += 1, R7038 += 1 };
  s0 -> s0 [0, 65535] { R7193 += 1, R7194 += 1 };
  s0 -> s2 [0, 65535] { R7194 += 1, R7129 += 1, R7130 += 1 };
  s0 -> s3 [70, 70] { R7194 += 1, R7130 += 1, R7037 += 1, R7038 += 1 };
  s0 -> s4 [70, 70] { R7194 += 1, R7130 += 1, R7037 += 1, R7038 += 1 };
  s0 -> s1 [71, 65535] { R7194 += 1, R7130 += 1, R7037 += 1, R7038 += 1 };
  s1 -> s1 [0, 69] { R7194 += 1, R7130 += 1, R7037 += 1, R7038 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R7194 += 1 };
  s1 -> s3 [70, 70] { R7194 += 1, R7130 += 1, R7037 += 1, R7038 += 1 };
  s1 -> s4 [70, 70] { R7194 += 1, R7130 += 1, R7037 += 1, R7038 += 1 };
  s1 -> s1 [71, 65535] { R7194 += 1, R7130 += 1, R7037 += 1, R7038 += 1 };
  s2 -> s1 [0, 69] { R7194 += 1, R7130 += 1, R7037 += 1, R7038 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R7194 += 1, R7129 += 1, R7130 += 1 };
  s2 -> s3 [70, 70] { R7194 += 1, R7130 += 1, R7037 += 1, R7038 += 1 };
  s2 -> s4 [70, 70] { R7194 += 1, R7130 += 1, R7037 += 1, R7038 += 1 };
  s2 -> s1 [71, 65535] { R7194 += 1, R7130 += 1, R7037 += 1, R7038 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R7194 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R7194 += 1 };
  s4 -> s4 [0, 65535] { R7194 += 1, R7130 += 1, R7037 += 1, R7038 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7194 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R7074 && R3 = R7194 && R25 - R7194 = -1 && R26 = R7194 && R27 - R7194 = -1 && R28 = R7194 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R7042 + -1*R7038 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R7042 + -1*R7038 - R130 = 0 && R129 + R7041 + R7037 = 0 && R131 + R7043 + R7039 = 0 && R132 + R7044 + R7040 = 0 && R7073 = 0 && R7105 = 0 && R7106 = 0 && R7115 = 0 && R7116 = 0 && R7123 = 0 && R7124 = 0 && R7125 = 0 && R7126 = 0 && R7127 = 0 && R7128 = 0 && R7131 = 0 && R7132 = R7194 && R7133 = 0 && R7134 = R7194 && R7135 = 0 && R7136 = R7194 && R7137 = 0 && R7138 = R7194 && R7139 = 0 && R7140 = R7194 && R7141 = 0 && R7142 = R7194 && R7143 = 0 && R7144 = R7194 && R7145 = 0 && R7146 = R7194 && R7147 = 0 && R7148 = R7194 && R7149 = 0 && R7150 = R7194 && R7151 = 0 && R7152 = R7194 && R7153 = 0 && R7154 = R7194 && R7155 = 0 && R7156 = R7194 && R7157 = 0 && R7158 = R7194 && R7159 = 0 && R7160 = R7194 && R7161 = 0 && R7162 = R7194 && R7163 = 0 && R7164 = R7194 && R7165 = 0 && R7166 = R7194 && R7167 = 0 && R7168 = R7194 && R7169 = 0 && R7170 = R7194 && R7171 = 0 && R7172 = R7194 && R7173 = 0 && R7174 = R7194 && R7175 = 0 && R7176 = R7194 && R7177 = 0 && R7178 = R7194 && R7179 = 0 && R7180 = R7194 && R7181 = 0 && R7182 = R7194 && R7183 = 0 && R7184 = R7194 && R7185 = 0 && R7186 = R7194 && R7187 = 0 && R7188 = R7194 && R7189 = 0 && R7190 = R7194 && R7191 = 0 && R7192 = R7194 && R7193 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R7042 + -1*R7038 - R130 < 1 && -1 < R7074 && 0 < R7194 && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R7042 + -1*R7038 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R191 + R187 = 0 && R114 + R192 + R188 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R7042 + -1*R7038 - R130 = 0 || R130 + R7042 + R7038 < 1) && (R81 + R158 + R155 = 0 || R130 + R7042 + R7038 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R7042 + -1*R7038 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R7042 + R7038 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R7042 + -1*R7038 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R7042 + R7038 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R7042 + -1*R7038 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R7042 + R7038 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 != 0 || R112 + R190 + R186 + -1*R7042 + -1*R7038 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R7042 + R7038 = 0)) && (R113 + R191 + R187 != 0 || R83 + R160 + R157 + -1*R192 + -1*R188 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R5926 + R5921 != 0 || R120 + R5927 + R5922 + -1*R7042 + -1*R7038 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R7042 + R7038 = 0)) && (R7045 != 0 || R7046 = R7074 || (R22 = 0 && R7074 = 0)) && (R7047 != 0 || R7048 = R7074 || (R22 = 0 && R7074 = 0)) && (R7049 != 0 || R7050 = R7074 || (R22 = 0 && R7074 = 0)) && (R7051 != 0 || R7052 = R7074 || (R22 = 0 && R7074 = 0)) && (R7053 != 0 || R7054 = R7074 || (R22 = 0 && R7074 = 0)) && (R7055 != 0 || R7056 = R7074 || (R22 = 0 && R7074 = 0)) && (R7057 != 0 || R7058 = R7074 || (R22 = 0 && R7074 = 0)) && (R7059 != 0 || R7060 = R7074 || (R22 = 0 && R7074 = 0)) && (R7061 != 0 || R7062 = R7074 || (R22 = 0 && R7074 = 0)) && (R7063 != 0 || R7064 = R7074 || (R22 = 0 && R7074 = 0)) && (R7065 != 0 || R7066 = R7074 || (R22 = 0 && R7074 = 0)) && (R7067 != 0 || R7068 = R7074 || (R22 = 0 && R7074 = 0)) && (R7069 != 0 || R7070 = R7074 || (R22 = 0 && R7074 = 0)) && (R7071 != 0 || R7072 = R7074 || (R22 = 0 && R7074 = 0)) && (R23 = 0 || (R7103 = 0 && R7104 = 0)) && (R23 = 0 || (R7107 = 0 && R7108 = 0)) && (R23 = 0 || (R7109 = 0 && R7110 = 0)) && (R23 = 0 || (R7111 = 0 && R7112 = 0)) && (R23 = 0 || (R7113 = 0 && R7114 = 0)) && (R23 = 0 || (R7117 = 0 && R7118 = 0)) && (R23 = 0 || (R7119 = 0 && R7120 = 0)) && (R23 = 0 || (R7121 = 0 && R7122 = 0)) && (R23 = 0 || (R7129 = 0 && R7130 = 0)) && (R24 = 0 || (R7075 = 0 && R7076 = 0)) && (R24 = 0 || (R7077 = 0 && R7078 = 0)) && (R24 = 0 || (R7079 = 0 && R7080 = 0)) && (R24 = 0 || (R7081 = 0 && R7082 = 0)) && (R24 = 0 || (R7083 = 0 && R7084 = 0)) && (R24 = 0 || (R7085 = 0 && R7086 = 0)) && (R24 = 0 || (R7087 = 0 && R7088 = 0)) && (R24 = 0 || (R7089 = 0 && R7090 = 0)) && (R24 = 0 || (R7091 = 0 && R7092 = 0)) && (R24 = 0 || (R7093 = 0 && R7094 = 0)) && (R24 = 0 || (R7095 = 0 && R7096 = 0)) && (R24 = 0 || (R7097 = 0 && R7098 = 0)) && (R24 = 0 || (R7099 = 0 && R7100 = 0)) && (R24 = 0 || (R7101 = 0 && R7102 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R7042 + R7038 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R7042 + R7038 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R7042 + R7038 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 = 0 || (R83 + R160 + R157 = 0 && R130 + R7042 + R7038 = 0)) && (R113 + R191 + R187 = 0 || R83 + R160 + R157 < 1) && (R119 + R5926 + R5921 = 0 || (R83 + R160 + R157 = 0 && R130 + R7042 + R7038 = 0)) && (R123 + R5930 + R5925 = 0 || (R121 + R5928 + R5923 = 0 && R122 + R5929 + R5924 = 0)) && (R7045 = 0 || (R22 = 0 && R7074 = 0)) && (R7047 = 0 || (R22 = 0 && R7074 = 0)) && (R7049 = 0 || (R22 = 0 && R7074 = 0)) && (R7051 = 0 || (R22 = 0 && R7074 = 0)) && (R7053 = 0 || (R22 = 0 && R7074 = 0)) && (R7055 = 0 || (R22 = 0 && R7074 = 0)) && (R7057 = 0 || (R22 = 0 && R7074 = 0)) && (R7059 = 0 || (R22 = 0 && R7074 = 0)) && (R7061 = 0 || (R22 = 0 && R7074 = 0)) && (R7063 = 0 || (R22 = 0 && R7074 = 0)) && (R7065 = 0 || (R22 = 0 && R7074 = 0)) && (R7067 = 0 || (R22 = 0 && R7074 = 0)) && (R7069 = 0 || (R22 = 0 && R7074 = 0)) && (R7071 = 0 || (R22 = 0 && R7074 = 0));
// End of Parikh automata intersection problem
