// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R2, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R4489, R4490, R4491, R4492, R4493, R4494, R4495, R4496, R4497, R4498, R5, R5763, R5764, R5765, R5766, R5767, R5768, R5769, R5770, R5771, R5772, R5773, R5774, R5775, R5776, R5777, R5778, R5779, R5780, R5781, R5782, R5783, R5784, R5785, R5786, R5787, R5788, R5789, R5790, R5791, R5792, R5793, R5794, R5795, R5796, R5797, R5798, R5799, R5800, R5801, R5802, R5803, R5804, R5805, R5806, R5807, R5808, R5809, R5810, R5811, R5812, R5813, R5814, R5815, R5816, R5817, R5818, R5819, R5820, R5821, R5822, R5823, R5824, R5825, R5826, R5827, R5828, R5829, R5830, R5831, R5832, R5833, R5834, R5835, R5836, R5837, R5838, R5839, R5840, R5841, R5842, R5843, R5844, R5845, R5846, R5847, R5848, R5849, R5850, R5851, R5852, R5853, R5854, R5855, R5856, R5857, R5858, R5859, R5860, R5861, R5862, R5863, R5864, R5865, R5866, R5867, R5868, R5869, R5870, R5871, R5872, R5873, R5874, R5875, R5876, R5877, R5878, R5879, R5880, R5881, R5882, R5883, R5884, R5885, R5886, R5887, R5888, R5889, R5890, R5891, R5892, R5893, R5894, R5895, R5896, R5897, R5898, R5899, R5900, R5901, R5902, R5903, R5904, R5905, R5906, R5907, R5908, R5909, R5910, R5911, R5912, R5913, R5914, R5915, R5916, R5917, R5918, R5919, R5920, R63, R65, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R26 += 1 };
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R5801 += 1, R5802 += 1 };
  s0 -> s1 [0, 65535] { R5802 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R5802 += 1, R24 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R5804 += 1 };
  s0 -> s0 [0, 65535] { R5803 += 1, R5804 += 1 };
  s0 -> s2 [70, 70] { R5804 += 1 };
  s0 -> s3 [70, 70] { R5804 += 1 };
  s0 -> s1 [76, 65535] { R5804 += 1 };
  s1 -> s1 [0, 69] { R5804 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5804 += 1 };
  s1 -> s3 [70, 70] { R5804 += 1 };
  s1 -> s1 [76, 65535] { R5804 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R5804 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R5804 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R5806 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R5805 += 1, R5806 += 1 };
  s0 -> s2 [70, 70] { R5806 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R5806 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R5806 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R5806 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5806 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R5806 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R5806 += 1, R63 += 1 };
  s2 -> s2 [0, 65535] { R5806 += 1, R63 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R5808 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R5807 += 1, R5808 += 1 };
  s0 -> s2 [70, 70] { R5808 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R5808 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R5808 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R5808 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5808 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R5808 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R5808 += 1, R65 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5808 += 1, R65 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R5810 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R5809 += 1, R5810 += 1 };
  s0 -> s2 [70, 70] { R5810 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R5810 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R5810 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R5810 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5810 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R5810 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R5810 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5810 += 1, R67 += 1, R68 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R5812 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R5811 += 1, R5812 += 1 };
  s0 -> s2 [70, 70] { R5812 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R5812 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R5812 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R5812 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5812 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R5812 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R5812 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R5812 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R5814 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R5813 += 1, R5814 += 1 };
  s0 -> s2 [70, 70] { R5814 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R5814 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R5814 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R5814 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5814 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R5814 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R5814 += 1, R77 += 1, R78 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R5814 += 1, R77 += 1, R78 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R5816 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R5815 += 1, R5816 += 1 };
  s0 -> s2 [70, 70] { R5816 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R5816 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R5816 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R5816 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5816 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R5816 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R5816 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5816 += 1, R81 += 1, R82 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R5818 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R5817 += 1, R5818 += 1 };
  s0 -> s2 [70, 70] { R5818 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R5818 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R5818 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R5818 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5818 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R5818 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R5818 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5818 += 1, R87 += 1, R88 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R5820 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R5819 += 1, R5820 += 1 };
  s0 -> s2 [70, 70] { R5820 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R5820 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R5820 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R5820 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5820 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R5820 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R5820 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5820 += 1, R93 += 1, R94 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R5822 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R5821 += 1, R5822 += 1 };
  s0 -> s2 [70, 70] { R5822 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R5822 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R5822 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R5822 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5822 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R5822 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R5822 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R5822 += 1, R101 += 1, R102 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R5824 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R5823 += 1, R5824 += 1 };
  s0 -> s2 [70, 70] { R5824 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R5824 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R5824 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R5824 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5824 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R5824 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R5824 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535] { R5824 += 1, R111 += 1, R112 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R5826 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R5825 += 1, R5826 += 1 };
  s0 -> s2 [70, 70] { R5826 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R5826 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R5826 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R5826 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5826 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R5826 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R5826 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535] { R5826 += 1, R119 += 1, R120 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R5828 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R5827 += 1, R5828 += 1 };
  s0 -> s2 [70, 70] { R5828 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R5828 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R5828 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R5828 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5828 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R5828 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R5828 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535] { R5828 += 1, R129 += 1, R130 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R5858 += 1 };
  s0 -> s0 [0, 65535] { R5857 += 1, R5858 += 1 };
  s0 -> s2 [70, 70] { R5858 += 1 };
  s0 -> s1 [71, 65535] { R5858 += 1 };
  s1 -> s1 [0, 69] { R5858 += 1 };
  s1 -> s2 [70, 70] { R5858 += 1 };
  s1 -> s1 [71, 65535] { R5858 += 1 };
  s2 -> s2 [0, 65535] { R5858 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R5860 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R5859 += 1, R5860 += 1 };
  s1 -> s1 [0, 65535] { R5860 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R5862 += 1 };
  s0 -> s2 [0, 65535] { R5862 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R5861 += 1, R5862 += 1 };
  s0 -> s3 [70, 70] { R5862 += 1 };
  s0 -> s1 [71, 65535] { R5862 += 1 };
  s1 -> s1 [0, 69] { R5862 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R5862 += 1 };
  s1 -> s1 [71, 65535] { R5862 += 1 };
  s2 -> s1 [0, 69] { R5862 += 1 };
  s2 -> s2 [0, 65535] { R5862 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R5862 += 1 };
  s2 -> s1 [71, 65535] { R5862 += 1 };
  s3 -> s3 [0, 65535] { R5862 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R5864 += 1, R5772 += 1 };
  s0 -> s0 [0, 65535] { R5863 += 1, R5864 += 1 };
  s0 -> s2 [0, 65535] { R5864 += 1, R5771 += 1, R5772 += 1 };
  s0 -> s1 [71, 65535] { R5864 += 1, R5772 += 1 };
  s1 -> s1 [0, 69] { R5864 += 1, R5772 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R5864 += 1 };
  s1 -> s1 [71, 65535] { R5864 += 1, R5772 += 1 };
  s2 -> s1 [0, 69] { R5864 += 1, R5772 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5864 += 1, R5771 += 1, R5772 += 1 };
  s2 -> s1 [71, 65535] { R5864 += 1, R5772 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R5866 += 1, R5773 += 1, R5774 += 1 };
  s0 -> s2 [0, 65535] { R5866 += 1, R5774 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R5865 += 1, R5866 += 1 };
  s1 -> s1 [0, 65535] { R5866 += 1, R5773 += 1, R5774 += 1 };
  s1 -> s2 [0, 65535] { R5866 += 1, R5774 += 1, R22 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R5866 += 1 };
  s2 -> s2 [0, 65535] { R5866 += 1, R5774 += 1, R22 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5866 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R5868 += 1, R5776 += 1 };
  s0 -> s0 [0, 65535] { R5867 += 1, R5868 += 1 };
  s0 -> s2 [0, 65535] { R5868 += 1, R5775 += 1, R5776 += 1 };
  s0 -> s1 [75, 65535] { R5868 += 1, R5776 += 1 };
  s1 -> s1 [0, 70] { R5868 += 1, R5776 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R5868 += 1 };
  s1 -> s1 [75, 65535] { R5868 += 1, R5776 += 1 };
  s2 -> s1 [0, 70] { R5868 += 1, R5776 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5868 += 1, R5775 += 1, R5776 += 1 };
  s2 -> s1 [75, 65535] { R5868 += 1, R5776 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s0 [0, 65535] { R5869 += 1, R5870 += 1 };
  s0 -> s1 [0, 65535] { R5870 += 1, R5777 += 1, R5778 += 1 };
  s0 -> s2 [0, 65535] { R5870 += 1, R5778 += 1, R138 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R5870 += 1, R5777 += 1, R5778 += 1 };
  s1 -> s2 [0, 65535] { R5870 += 1, R5778 += 1, R138 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R5870 += 1 };
  s2 -> s2 [0, 65535] { R5870 += 1, R5778 += 1, R138 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5870 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R5872 += 1, R5780 += 1 };
  s0 -> s0 [0, 65535] { R5871 += 1, R5872 += 1 };
  s0 -> s2 [0, 65535] { R5872 += 1, R5779 += 1, R5780 += 1 };
  s0 -> s3 [0, 65535] { R5872 += 1, R5780 += 1, R140 += 1 };
  s0 -> s1 [76, 65535] { R5872 += 1, R5780 += 1 };
  s1 -> s1 [0, 74] { R5872 += 1, R5780 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5872 += 1 };
  s1 -> s1 [76, 65535] { R5872 += 1, R5780 += 1 };
  s2 -> s1 [0, 74] { R5872 += 1, R5780 += 1 };
  s2 -> s2 [0, 65535] { R5872 += 1, R5779 += 1, R5780 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R5872 += 1, R5780 += 1, R140 += 1 };
  s2 -> s1 [76, 65535] { R5872 += 1, R5780 += 1 };
  s3 -> s1 [0, 74] { R5872 += 1, R5780 += 1 };
  s3 -> s4 [0, 65535] { R5872 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5872 += 1, R5780 += 1, R140 += 1 };
  s3 -> s1 [76, 65535] { R5872 += 1, R5780 += 1 };
  s4 -> s4 [0, 65535] { R5872 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R5873 += 1, R5874 += 1 };
  s0 -> s1 [0, 65535] { R5874 += 1, R5782 += 1, R145 += 1, R146 += 1 };
  s0 -> s2 [0, 65535] { R5874 += 1, R5781 += 1, R5782 += 1 };
  s0 -> s3 [0, 65535] { R5874 += 1, R5782 += 1, R144 += 1, R145 += 1 };
  s1 -> s4 [0, 65535] { R5874 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5874 += 1, R5782 += 1, R145 += 1, R146 += 1 };
  s1 -> s6 [0, 65535] { R5874 += 1, R5782 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R5874 += 1, R5782 += 1, R145 += 1, R146 += 1 };
  s2 -> s2 [0, 65535] { R5874 += 1, R5781 += 1, R5782 += 1 };
  s2 -> s3 [0, 65535] { R5874 += 1, R5782 += 1, R144 += 1, R145 += 1 };
  s3 -> s4 [0, 65535] { R5874 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R5874 += 1, R5782 += 1, R145 += 1, R146 += 1 };
  s3 -> s3 [0, 65535] { R5874 += 1, R5782 += 1, R144 += 1, R145 += 1 };
  s4 -> s4 [0, 65535] { R5874 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R5874 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5874 += 1, R5782 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R5876 += 1, R5784 += 1, R150 += 1 };
  s0 -> s2 [0, 65535] { R5876 += 1, R5784 += 1, R149 += 1, R150 += 1 };
  s0 -> s0 [0, 65535] { R5875 += 1, R5876 += 1 };
  s0 -> s3 [0, 65535] { R5876 += 1, R5783 += 1, R5784 += 1 };
  s0 -> s4 [75, 75] { R5876 += 1, R5784 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R5876 += 1, R5784 += 1, R150 += 1 };
  s0 -> s1 [77, 65535] { R5876 += 1, R5784 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R5876 += 1, R5784 += 1, R150 += 1 };
  s1 -> s6 [0, 65535] { R5876 += 1 };
  s1 -> s1 [0, 65535] { R5876 += 1, R5784 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [75, 75] { R5876 += 1, R5784 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R5876 += 1, R5784 += 1, R150 += 1 };
  s1 -> s1 [77, 65535] { R5876 += 1, R5784 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R5876 += 1, R5784 += 1, R150 += 1 };
  s2 -> s2 [0, 65535] { R5876 += 1, R5784 += 1, R149 += 1, R150 += 1 };
  s2 -> s6 [0, 65535] { R5876 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [75, 75] { R5876 += 1, R5784 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R5876 += 1, R5784 += 1, R150 += 1 };
  s2 -> s1 [77, 65535] { R5876 += 1, R5784 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R5876 += 1, R5784 += 1, R150 += 1 };
  s3 -> s2 [0, 65535] { R5876 += 1, R5784 += 1, R149 += 1, R150 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R5876 += 1, R5783 += 1, R5784 += 1 };
  s3 -> s4 [75, 75] { R5876 += 1, R5784 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R5876 += 1, R5784 += 1, R150 += 1 };
  s3 -> s1 [77, 65535] { R5876 += 1, R5784 += 1, R150 += 1 };
  s4 -> s6 [0, 65535] { R5876 += 1 };
  s4 -> s4 [0, 65535] { R5876 += 1, R5784 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 75] { R5876 += 1, R5784 += 1, R150 += 1 };
  s5 -> s6 [0, 65535] { R5876 += 1 };
  s5 -> s5 [0, 65535] { R5876 += 1, R5784 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [77, 65535] { R5876 += 1, R5784 += 1, R150 += 1 };
  s6 -> s6 [0, 65535] { R5876 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R5878 += 1, R5786 += 1, R154 += 1 };
  s0 -> s2 [0, 65535] { R5878 += 1, R5785 += 1, R5786 += 1 };
  s0 -> s0 [0, 65535] { R5877 += 1, R5878 += 1 };
  s0 -> s3 [0, 65535] { R5878 += 1, R5786 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R5878 += 1, R5786 += 1, R154 += 1 };
  s1 -> s3 [0, 65535] { R5878 += 1, R5786 += 1 };
  s1 -> s5 [0, 65535] { R5878 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R5878 += 1, R5786 += 1, R154 += 1 };
  s2 -> s2 [0, 65535] { R5878 += 1, R5785 += 1, R5786 += 1 };
  s2 -> s3 [0, 65535] { R5878 += 1, R5786 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5878 += 1, R5786 += 1 };
  s3 -> s5 [0, 65535] { R5878 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5878 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R5880 += 1, R5788 += 1, R159 += 1, R160 += 1 };
  s0 -> s0 [0, 65535] { R5879 += 1, R5880 += 1 };
  s0 -> s2 [0, 65535] { R5880 += 1, R5788 += 1, R158 += 1, R159 += 1 };
  s0 -> s3 [0, 65535] { R5880 += 1, R5787 += 1, R5788 += 1 };
  s1 -> s6 [0, 65535] { R5880 += 1, R5788 += 1 };
  s1 -> s1 [0, 65535] { R5880 += 1, R5788 += 1, R159 += 1, R160 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R5880 += 1 };
  s2 -> s1 [0, 65535] { R5880 += 1, R5788 += 1, R159 += 1, R160 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R5880 += 1, R5788 += 1, R158 += 1, R159 += 1 };
  s2 -> s5 [0, 65535] { R5880 += 1 };
  s3 -> s1 [0, 65535] { R5880 += 1, R5788 += 1, R159 += 1, R160 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R5880 += 1, R5788 += 1, R158 += 1, R159 += 1 };
  s3 -> s3 [0, 65535] { R5880 += 1, R5787 += 1, R5788 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5880 += 1 };
  s6 -> s6 [0, 65535] { R5880 += 1, R5788 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R5880 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R5882 += 1, R5790 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R5882 += 1, R5790 += 1, R165 += 1, R166 += 1 };
  s0 -> s3 [0, 65535] { R5882 += 1, R5790 += 1, R164 += 1, R165 += 1 };
  s0 -> s0 [0, 65535] { R5881 += 1, R5882 += 1 };
  s0 -> s4 [0, 65535] { R5882 += 1, R5789 += 1, R5790 += 1 };
  s0 -> s1 [76, 65535] { R5882 += 1, R5790 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R5882 += 1, R5790 += 1, R165 += 1 };
  s1 -> s1 [0, 65535] { R5882 += 1, R5790 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R5882 += 1 };
  s1 -> s1 [76, 65535] { R5882 += 1, R5790 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R5882 += 1, R5790 += 1, R165 += 1 };
  s2 -> s2 [0, 65535] { R5882 += 1, R5790 += 1, R165 += 1, R166 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R5882 += 1 };
  s2 -> s7 [0, 65535] { R5882 += 1, R5790 += 1 };
  s2 -> s1 [76, 65535] { R5882 += 1, R5790 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R5882 += 1, R5790 += 1, R165 += 1 };
  s3 -> s2 [0, 65535] { R5882 += 1, R5790 += 1, R165 += 1, R166 += 1 };
  s3 -> s3 [0, 65535] { R5882 += 1, R5790 += 1, R164 += 1, R165 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R5882 += 1 };
  s3 -> s1 [76, 65535] { R5882 += 1, R5790 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R5882 += 1, R5790 += 1, R165 += 1 };
  s4 -> s2 [0, 65535] { R5882 += 1, R5790 += 1, R165 += 1, R166 += 1 };
  s4 -> s3 [0, 65535] { R5882 += 1, R5790 += 1, R164 += 1, R165 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5882 += 1, R5789 += 1, R5790 += 1 };
  s4 -> s1 [76, 65535] { R5882 += 1, R5790 += 1, R165 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5882 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R5882 += 1 };
  s7 -> s7 [0, 65535] { R5882 += 1, R5790 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R5884 += 1, R5792 += 1, R172 += 1, R174 += 1 };
  s0 -> s2 [0, 65535] { R5884 += 1, R5792 += 1, R171 += 1, R172 += 1 };
  s0 -> s0 [0, 65535] { R5883 += 1, R5884 += 1 };
  s0 -> s3 [0, 65535] { R5884 += 1, R5792 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s4 [0, 65535] { R5884 += 1, R5791 += 1, R5792 += 1 };
  s0 -> s1 [76, 65535] { R5884 += 1, R5792 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R5884 += 1, R5792 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 65535] { R5884 += 1, R5792 += 1, R172 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R5884 += 1, R5792 += 1 };
  s1 -> s7 [0, 65535] { R5884 += 1 };
  s1 -> s1 [76, 65535] { R5884 += 1, R5792 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R5884 += 1, R5792 += 1, R172 += 1, R174 += 1 };
  s2 -> s2 [0, 65535] { R5884 += 1, R5792 += 1, R171 += 1, R172 += 1 };
  s2 -> s3 [0, 65535] { R5884 += 1, R5792 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R5884 += 1 };
  s2 -> s1 [76, 65535] { R5884 += 1, R5792 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R5884 += 1, R5792 += 1, R172 += 1, R174 += 1 };
  s3 -> s3 [0, 65535] { R5884 += 1, R5792 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R5884 += 1, R5792 += 1 };
  s3 -> s7 [0, 65535] { R5884 += 1 };
  s3 -> s1 [76, 65535] { R5884 += 1, R5792 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R5884 += 1, R5792 += 1, R172 += 1, R174 += 1 };
  s4 -> s2 [0, 65535] { R5884 += 1, R5792 += 1, R171 += 1, R172 += 1 };
  s4 -> s3 [0, 65535] { R5884 += 1, R5792 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5884 += 1, R5791 += 1, R5792 += 1 };
  s4 -> s1 [76, 65535] { R5884 += 1, R5792 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5884 += 1, R5792 += 1 };
  s6 -> s7 [0, 65535] { R5884 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R5884 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s0 [0, 65535] { R5885 += 1, R5886 += 1 };
  s0 -> s1 [0, 65535] { R5886 += 1, R5794 += 1, R181 += 1 };
  s0 -> s2 [0, 65535] { R5886 += 1, R5793 += 1, R5794 += 1 };
  s0 -> s3 [0, 65535] { R5886 += 1, R5794 += 1 };
  s1 -> s4 [0, 65535] { R5886 += 1 };
  s1 -> s1 [0, 65535] { R5886 += 1, R5794 += 1, R181 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R5886 += 1, R5794 += 1 };
  s2 -> s1 [0, 65535] { R5886 += 1, R5794 += 1, R181 += 1 };
  s2 -> s2 [0, 65535] { R5886 += 1, R5793 += 1, R5794 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R5886 += 1, R5794 += 1 };
  s3 -> s4 [0, 65535] { R5886 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5886 += 1, R5794 += 1 };
  s4 -> s4 [0, 65535] { R5886 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 65535] { R5888 += 1, R5796 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s0 -> s2 [0, 65535] { R5888 += 1, R5796 += 1 };
  s0 -> s3 [0, 65535] { R5888 += 1, R5795 += 1, R5796 += 1 };
  s0 -> s0 [0, 65535] { R5887 += 1, R5888 += 1 };
  s0 -> s4 [0, 65535] { R5888 += 1, R5796 += 1, R190 += 1, R192 += 1 };
  s1 -> s5 [0, 65535] { R5888 += 1 };
  s1 -> s1 [0, 65535] { R5888 += 1, R5796 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s1 -> s2 [0, 65535] { R5888 += 1, R5796 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [0, 65535] { R5888 += 1, R5796 += 1, R190 += 1, R192 += 1 };
  s2 -> s5 [0, 65535] { R5888 += 1 };
  s2 -> s2 [0, 65535] { R5888 += 1, R5796 += 1 };
  s2 -> s7 [0, 65535];
  s3 -> s1 [0, 65535] { R5888 += 1, R5796 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s3 -> s2 [0, 65535] { R5888 += 1, R5796 += 1 };
  s3 -> s3 [0, 65535] { R5888 += 1, R5795 += 1, R5796 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [0, 65535] { R5888 += 1, R5796 += 1, R190 += 1, R192 += 1 };
  s4 -> s5 [0, 65535] { R5888 += 1 };
  s4 -> s2 [0, 65535] { R5888 += 1, R5796 += 1 };
  s4 -> s6 [0, 65535] { R5888 += 1, R5796 += 1, R190 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R5888 += 1, R5796 += 1, R190 += 1, R192 += 1 };
  s5 -> s5 [0, 65535] { R5888 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s5 [0, 65535] { R5888 += 1 };
  s6 -> s2 [0, 65535] { R5888 += 1, R5796 += 1 };
  s6 -> s6 [0, 65535] { R5888 += 1, R5796 += 1, R190 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R5890 += 1, R5798 += 1, R4495 += 1, R4496 += 1, R4497 += 1 };
  s0 -> s2 [0, 65535] { R5890 += 1, R5797 += 1, R5798 += 1 };
  s0 -> s0 [0, 65535] { R5889 += 1, R5890 += 1 };
  s0 -> s3 [0, 65535] { R5890 += 1, R5798 += 1, R4495 += 1, R4497 += 1, R4498 += 1 };
  s0 -> s4 [0, 65535] { R5890 += 1, R5798 += 1, R4494 += 1, R4495 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5890 += 1, R5798 += 1, R4495 += 1, R4496 += 1, R4497 += 1 };
  s1 -> s6 [0, 65535] { R5890 += 1 };
  s1 -> s3 [0, 65535] { R5890 += 1, R5798 += 1, R4495 += 1, R4497 += 1, R4498 += 1 };
  s1 -> s7 [0, 65535] { R5890 += 1, R5798 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R5890 += 1, R5798 += 1, R4495 += 1, R4496 += 1, R4497 += 1 };
  s2 -> s2 [0, 65535] { R5890 += 1, R5797 += 1, R5798 += 1 };
  s2 -> s3 [0, 65535] { R5890 += 1, R5798 += 1, R4495 += 1, R4497 += 1, R4498 += 1 };
  s2 -> s4 [0, 65535] { R5890 += 1, R5798 += 1, R4494 += 1, R4495 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R5890 += 1 };
  s3 -> s3 [0, 65535] { R5890 += 1, R5798 += 1, R4495 += 1, R4497 += 1, R4498 += 1 };
  s3 -> s7 [0, 65535] { R5890 += 1, R5798 += 1 };
  s3 -> s8 [0, 65535] { R5890 += 1, R5798 += 1, R4495 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R5890 += 1, R5798 += 1, R4495 += 1, R4496 += 1, R4497 += 1 };
  s4 -> s6 [0, 65535] { R5890 += 1 };
  s4 -> s3 [0, 65535] { R5890 += 1, R5798 += 1, R4495 += 1, R4497 += 1, R4498 += 1 };
  s4 -> s4 [0, 65535] { R5890 += 1, R5798 += 1, R4494 += 1, R4495 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5890 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R5890 += 1 };
  s7 -> s7 [0, 65535] { R5890 += 1, R5798 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R5890 += 1 };
  s8 -> s7 [0, 65535] { R5890 += 1, R5798 += 1 };
  s8 -> s8 [0, 65535] { R5890 += 1, R5798 += 1, R4495 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 74] { R5892 += 1, R5800 += 1, R5768 += 1, R5770 += 1 };
  s0 -> s0 [0, 65535] { R5891 += 1, R5892 += 1 };
  s0 -> s2 [0, 65535] { R5892 += 1, R5799 += 1, R5800 += 1 };
  s0 -> s3 [75, 75] { R5892 += 1, R5800 += 1, R5768 += 1, R5770 += 1 };
  s0 -> s4 [76, 76] { R5892 += 1, R5800 += 1, R5768 += 1, R5770 += 1 };
  s0 -> s1 [77, 65535] { R5892 += 1, R5800 += 1, R5768 += 1, R5770 += 1 };
  s1 -> s1 [0, 74] { R5892 += 1, R5800 += 1, R5768 += 1, R5770 += 1 };
  s1 -> s3 [75, 75] { R5892 += 1, R5800 += 1, R5768 += 1, R5770 += 1 };
  s1 -> s4 [76, 76] { R5892 += 1, R5800 += 1, R5768 += 1, R5770 += 1 };
  s1 -> s1 [77, 65535] { R5892 += 1, R5800 += 1, R5768 += 1, R5770 += 1 };
  s2 -> s1 [0, 74] { R5892 += 1, R5800 += 1, R5768 += 1, R5770 += 1 };
  s2 -> s2 [0, 65535] { R5892 += 1, R5799 += 1, R5800 += 1 };
  s2 -> s3 [75, 75] { R5892 += 1, R5800 += 1, R5768 += 1, R5770 += 1 };
  s2 -> s4 [76, 76] { R5892 += 1, R5800 += 1, R5768 += 1, R5770 += 1 };
  s2 -> s1 [77, 65535] { R5892 += 1, R5800 += 1, R5768 += 1, R5770 += 1 };
  s3 -> s3 [0, 75] { R5892 += 1, R5800 += 1, R5768 += 1, R5770 += 1 };
  s3 -> s8 [76, 76] { R5892 += 1, R5800 += 1, R5768 += 1, R5770 += 1 };
  s3 -> s3 [77, 65535] { R5892 += 1, R5800 += 1, R5768 += 1, R5770 += 1 };
  s4 -> s4 [0, 74] { R5892 += 1, R5800 += 1, R5768 += 1, R5770 += 1 };
  s4 -> s5 [0, 65535] { R5892 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R5892 += 1, R5800 += 1 };
  s4 -> s4 [0, 65535] { R5892 += 1, R5800 += 1, R5768 += 1 };
  s4 -> s8 [75, 75] { R5892 += 1, R5800 += 1, R5768 += 1, R5770 += 1 };
  s4 -> s9 [75, 75] { R5892 += 1, R5800 += 1, R5768 += 1, R5770 += 1 };
  s4 -> s4 [76, 65535] { R5892 += 1, R5800 += 1, R5768 += 1, R5770 += 1 };
  s5 -> s5 [0, 65535] { R5892 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R5892 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5892 += 1, R5800 += 1 };
  s8 -> s10 [0, 65535] { R5892 += 1, R5800 += 1, R5768 += 1 };
  s8 -> s5 [0, 65535] { R5892 += 1 };
  s8 -> s8 [0, 65535] { R5892 += 1, R5800 += 1, R5768 += 1, R5770 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R5892 += 1, R5800 += 1 };
  s9 -> s5 [0, 65535] { R5892 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s7 [0, 65535] { R5892 += 1, R5800 += 1 };
  s9 -> s9 [0, 65535] { R5892 += 1, R5800 += 1, R5768 += 1 };
  s10 -> s10 [0, 65535] { R5892 += 1, R5800 += 1, R5768 += 1 };
  s10 -> s5 [0, 65535] { R5892 += 1 };
  s10 -> s6 [0, 65535];
  s10 -> s7 [0, 65535] { R5892 += 1, R5800 += 1 };
  accepting s4, s8, s5, s9, s6, s7, s10;
};
automaton value2_40 {
  init s0;
  s0 -> s0 [0, 65535] { R5893 += 1, R5894 += 1 };
  s0 -> s1 [0, 65535] { R5894 += 1, R5829 += 1, R5830 += 1 };
  s0 -> s2 [0, 65535] { R5894 += 1, R5830 += 1, R23 += 1 };
  s1 -> s1 [0, 65535] { R5894 += 1, R5829 += 1, R5830 += 1 };
  s1 -> s2 [0, 65535] { R5894 += 1, R5830 += 1, R23 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R5894 += 1 };
  s2 -> s2 [0, 65535] { R5894 += 1, R5830 += 1, R23 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5894 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R5896 += 1, R5832 += 1 };
  s0 -> s2 [0, 65535] { R5896 += 1, R5831 += 1, R5832 += 1 };
  s0 -> s0 [0, 65535] { R5895 += 1, R5896 += 1 };
  s0 -> s3 [70, 70] { R5896 += 1, R5832 += 1 };
  s0 -> s4 [70, 70] { R5896 += 1, R5832 += 1 };
  s0 -> s5 [75, 75] { R5896 += 1, R5832 += 1 };
  s0 -> s1 [76, 65535] { R5896 += 1, R5832 += 1 };
  s1 -> s1 [0, 69] { R5896 += 1, R5832 += 1 };
  s1 -> s3 [70, 70] { R5896 += 1, R5832 += 1 };
  s1 -> s4 [70, 70] { R5896 += 1, R5832 += 1 };
  s1 -> s5 [75, 75] { R5896 += 1, R5832 += 1 };
  s1 -> s1 [76, 65535] { R5896 += 1, R5832 += 1 };
  s2 -> s1 [0, 69] { R5896 += 1, R5832 += 1 };
  s2 -> s2 [0, 65535] { R5896 += 1, R5831 += 1, R5832 += 1 };
  s2 -> s3 [70, 70] { R5896 += 1, R5832 += 1 };
  s2 -> s4 [70, 70] { R5896 += 1, R5832 += 1 };
  s2 -> s5 [75, 75] { R5896 += 1, R5832 += 1 };
  s2 -> s1 [76, 65535] { R5896 += 1, R5832 += 1 };
  s4 -> s4 [0, 70] { R5896 += 1, R5832 += 1 };
  s4 -> s8 [75, 75] { R5896 += 1, R5832 += 1 };
  s4 -> s4 [76, 65535] { R5896 += 1, R5832 += 1 };
  s5 -> s5 [0, 69] { R5896 += 1, R5832 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R5896 += 1 };
  s5 -> s7 [70, 70] { R5896 += 1, R5832 += 1 };
  s5 -> s8 [70, 70] { R5896 += 1, R5832 += 1 };
  s5 -> s5 [75, 65535] { R5896 += 1, R5832 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5896 += 1 };
  s8 -> s8 [0, 70] { R5896 += 1, R5832 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R5896 += 1 };
  s8 -> s8 [75, 65535] { R5896 += 1, R5832 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R5898 += 1, R5834 += 1, R137 += 1 };
  s0 -> s2 [0, 65535] { R5898 += 1, R5833 += 1, R5834 += 1 };
  s0 -> s0 [0, 65535] { R5897 += 1, R5898 += 1 };
  s0 -> s3 [70, 70] { R5898 += 1, R5834 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R5898 += 1, R5834 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R5898 += 1, R5834 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R5898 += 1, R5834 += 1, R137 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5898 += 1 };
  s1 -> s3 [70, 70] { R5898 += 1, R5834 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R5898 += 1, R5834 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R5898 += 1, R5834 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R5898 += 1, R5834 += 1, R137 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5898 += 1, R5833 += 1, R5834 += 1 };
  s2 -> s3 [70, 70] { R5898 += 1, R5834 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R5898 += 1, R5834 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R5898 += 1, R5834 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R5898 += 1, R5834 += 1, R137 += 1 };
  s3 -> s6 [0, 65535] { R5898 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5898 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5898 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R5900 += 1, R5836 += 1, R139 += 1 };
  s0 -> s0 [0, 65535] { R5899 += 1, R5900 += 1 };
  s0 -> s2 [0, 65535] { R5900 += 1, R5835 += 1, R5836 += 1 };
  s0 -> s3 [70, 70] { R5900 += 1, R5836 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R5900 += 1, R5836 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R5900 += 1, R5836 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R5900 += 1, R5836 += 1, R139 += 1 };
  s1 -> s1 [0, 65535] { R5900 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R5900 += 1, R5836 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R5900 += 1, R5836 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R5900 += 1, R5836 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R5900 += 1, R5836 += 1, R139 += 1 };
  s2 -> s2 [0, 65535] { R5900 += 1, R5835 += 1, R5836 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R5900 += 1, R5836 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R5900 += 1, R5836 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R5900 += 1, R5836 += 1, R139 += 1 };
  s3 -> s3 [0, 65535] { R5900 += 1, R5836 += 1, R139 += 1 };
  s3 -> s6 [0, 65535] { R5900 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5900 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5900 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R5902 += 1, R5838 += 1, R141 += 1, R142 += 1 };
  s0 -> s0 [0, 65535] { R5901 += 1, R5902 += 1 };
  s0 -> s2 [0, 65535] { R5902 += 1, R5837 += 1, R5838 += 1 };
  s0 -> s3 [70, 70] { R5902 += 1, R5838 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R5902 += 1, R5838 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R5902 += 1, R5838 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R5902 += 1, R5838 += 1, R141 += 1, R142 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R5902 += 1 };
  s1 -> s3 [70, 70] { R5902 += 1, R5838 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R5902 += 1, R5838 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R5902 += 1, R5838 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R5902 += 1, R5838 += 1, R141 += 1, R142 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R5902 += 1, R5837 += 1, R5838 += 1 };
  s2 -> s3 [70, 70] { R5902 += 1, R5838 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R5902 += 1, R5838 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R5902 += 1, R5838 += 1, R141 += 1, R142 += 1 };
  s3 -> s3 [0, 65535] { R5902 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R5902 += 1 };
  s4 -> s4 [0, 65535] { R5902 += 1, R5838 += 1, R141 += 1, R142 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R5902 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R5904 += 1, R5840 += 1, R147 += 1, R148 += 1 };
  s0 -> s2 [0, 65535] { R5904 += 1, R5839 += 1, R5840 += 1 };
  s0 -> s0 [0, 65535] { R5903 += 1, R5904 += 1 };
  s0 -> s3 [70, 70] { R5904 += 1, R5840 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R5904 += 1, R5840 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R5904 += 1, R5840 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R5904 += 1, R5840 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 65535] { R5904 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R5904 += 1, R5840 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R5904 += 1, R5840 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R5904 += 1, R5840 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R5904 += 1, R5840 += 1, R147 += 1, R148 += 1 };
  s2 -> s2 [0, 65535] { R5904 += 1, R5839 += 1, R5840 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R5904 += 1, R5840 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R5904 += 1, R5840 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R5904 += 1, R5840 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R5904 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5904 += 1, R5840 += 1, R147 += 1, R148 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5904 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5904 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R5906 += 1, R5842 += 1, R151 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R5906 += 1, R5842 += 1, R152 += 1 };
  s0 -> s0 [0, 65535] { R5905 += 1, R5906 += 1 };
  s0 -> s3 [0, 65535] { R5906 += 1, R5841 += 1, R5842 += 1 };
  s0 -> s4 [70, 70] { R5906 += 1, R5842 += 1, R151 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R5906 += 1, R5842 += 1, R151 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R5906 += 1, R5842 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R5906 += 1, R5842 += 1, R152 += 1 };
  s0 -> s2 [71, 74] { R5906 += 1, R5842 += 1, R152 += 1 };
  s0 -> s1 [71, 65535] { R5906 += 1, R5842 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R5906 += 1, R5842 += 1, R152 += 1 };
  s0 -> s2 [76, 65535] { R5906 += 1, R5842 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R5906 += 1, R5842 += 1, R151 += 1, R152 += 1 };
  s1 -> s2 [0, 69] { R5906 += 1, R5842 += 1, R152 += 1 };
  s1 -> s4 [70, 70] { R5906 += 1, R5842 += 1, R151 += 1, R152 += 1 };
  s1 -> s5 [70, 70] { R5906 += 1, R5842 += 1, R151 += 1, R152 += 1 };
  s1 -> s6 [70, 70] { R5906 += 1, R5842 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R5906 += 1, R5842 += 1, R152 += 1 };
  s1 -> s2 [71, 74] { R5906 += 1, R5842 += 1, R152 += 1 };
  s1 -> s1 [71, 65535] { R5906 += 1, R5842 += 1, R151 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R5906 += 1, R5842 += 1, R152 += 1 };
  s1 -> s2 [76, 65535] { R5906 += 1, R5842 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R5906 += 1, R5842 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R5906 += 1, R5842 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R5906 += 1, R5842 += 1, R152 += 1 };
  s2 -> s2 [71, 74] { R5906 += 1, R5842 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R5906 += 1, R5842 += 1, R152 += 1 };
  s2 -> s2 [76, 65535] { R5906 += 1, R5842 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R5906 += 1, R5842 += 1, R151 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R5906 += 1, R5842 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R5906 += 1, R5841 += 1, R5842 += 1 };
  s3 -> s4 [70, 70] { R5906 += 1, R5842 += 1, R151 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R5906 += 1, R5842 += 1, R151 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R5906 += 1, R5842 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R5906 += 1, R5842 += 1, R152 += 1 };
  s3 -> s2 [71, 74] { R5906 += 1, R5842 += 1, R152 += 1 };
  s3 -> s1 [71, 65535] { R5906 += 1, R5842 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R5906 += 1, R5842 += 1, R152 += 1 };
  s3 -> s2 [76, 65535] { R5906 += 1, R5842 += 1, R152 += 1 };
  s5 -> s7 [0, 74] { R5906 += 1, R5842 += 1, R152 += 1 };
  s5 -> s5 [0, 65535] { R5906 += 1, R5842 += 1, R151 += 1, R152 += 1 };
  s5 -> s10 [75, 75] { R5906 += 1, R5842 += 1, R152 += 1 };
  s5 -> s7 [76, 65535] { R5906 += 1, R5842 += 1, R152 += 1 };
  s7 -> s7 [0, 74] { R5906 += 1, R5842 += 1, R152 += 1 };
  s7 -> s10 [75, 75] { R5906 += 1, R5842 += 1, R152 += 1 };
  s7 -> s7 [76, 65535] { R5906 += 1, R5842 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R5906 += 1, R5842 += 1, R152 += 1 };
  s8 -> s8 [0, 65535] { R5906 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R5906 += 1, R5842 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R5906 += 1, R5842 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R5906 += 1, R5842 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s12 [0, 65535] { R5906 += 1 };
  s10 -> s10 [0, 65535] { R5906 += 1, R5842 += 1, R152 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R5906 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R5906 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R5908 += 1, R5844 += 1, R155 += 1, R156 += 1 };
  s0 -> s0 [0, 65535] { R5907 += 1, R5908 += 1 };
  s0 -> s2 [0, 65535] { R5908 += 1, R5843 += 1, R5844 += 1 };
  s0 -> s3 [70, 70] { R5908 += 1, R5844 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R5908 += 1, R5844 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R5908 += 1, R5844 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R5908 += 1, R5844 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 65535] { R5908 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R5908 += 1, R5844 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R5908 += 1, R5844 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R5908 += 1, R5844 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R5908 += 1, R5844 += 1, R155 += 1, R156 += 1 };
  s2 -> s2 [0, 65535] { R5908 += 1, R5843 += 1, R5844 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R5908 += 1, R5844 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R5908 += 1, R5844 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R5908 += 1, R5844 += 1, R155 += 1, R156 += 1 };
  s3 -> s3 [0, 65535] { R5908 += 1, R5844 += 1, R155 += 1, R156 += 1 };
  s3 -> s6 [0, 65535] { R5908 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5908 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5908 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R5910 += 1, R5846 += 1, R161 += 1, R162 += 1 };
  s0 -> s2 [0, 65535] { R5910 += 1, R5845 += 1, R5846 += 1 };
  s0 -> s0 [0, 65535] { R5909 += 1, R5910 += 1 };
  s0 -> s3 [70, 70] { R5910 += 1, R5846 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R5910 += 1, R5846 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R5910 += 1, R5846 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R5910 += 1, R5846 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535] { R5910 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R5910 += 1, R5846 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R5910 += 1, R5846 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R5910 += 1, R5846 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R5910 += 1, R5846 += 1, R161 += 1, R162 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5910 += 1, R5845 += 1, R5846 += 1 };
  s2 -> s3 [70, 70] { R5910 += 1, R5846 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R5910 += 1, R5846 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R5910 += 1, R5846 += 1, R161 += 1, R162 += 1 };
  s3 -> s6 [0, 65535] { R5910 += 1 };
  s3 -> s3 [0, 65535] { R5910 += 1, R5846 += 1, R161 += 1, R162 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5910 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5910 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R5912 += 1, R5848 += 1, R167 += 1, R168 += 1 };
  s0 -> s2 [0, 65535] { R5912 += 1, R5847 += 1, R5848 += 1 };
  s0 -> s0 [0, 65535] { R5911 += 1, R5912 += 1 };
  s0 -> s3 [70, 70] { R5912 += 1, R5848 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R5912 += 1, R5848 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R5912 += 1, R5848 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R5912 += 1, R5848 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 65535] { R5912 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R5912 += 1, R5848 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R5912 += 1, R5848 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R5912 += 1, R5848 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R5912 += 1, R5848 += 1, R167 += 1, R168 += 1 };
  s2 -> s2 [0, 65535] { R5912 += 1, R5847 += 1, R5848 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R5912 += 1, R5848 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R5912 += 1, R5848 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R5912 += 1, R5848 += 1, R167 += 1, R168 += 1 };
  s3 -> s3 [0, 65535] { R5912 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R5912 += 1 };
  s4 -> s4 [0, 65535] { R5912 += 1, R5848 += 1, R167 += 1, R168 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R5912 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R5914 += 1, R5850 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s2 [0, 69] { R5914 += 1, R5850 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s3 [0, 69] { R5914 += 1, R5850 += 1, R175 += 1, R176 += 1 };
  s0 -> s4 [0, 65535] { R5914 += 1, R5849 += 1, R5850 += 1 };
  s0 -> s0 [0, 65535] { R5913 += 1, R5914 += 1 };
  s0 -> s5 [70, 70] { R5914 += 1, R5850 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s6 [70, 70] { R5914 += 1, R5850 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s7 [70, 70] { R5914 += 1, R5850 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s8 [70, 70] { R5914 += 1, R5850 += 1, R175 += 1, R176 += 1 };
  s0 -> s9 [70, 70] { R5914 += 1, R5850 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s10 [70, 70] { R5914 += 1, R5850 += 1, R175 += 1, R176 += 1 };
  s0 -> s1 [71, 65535] { R5914 += 1, R5850 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s2 [71, 65535] { R5914 += 1, R5850 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s3 [71, 65535] { R5914 += 1, R5850 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [0, 69] { R5914 += 1, R5850 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s14 [0, 69] { R5914 += 1, R5850 += 1, R176 += 1 };
  s1 -> s5 [70, 70] { R5914 += 1, R5850 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s11 [70, 70] { R5914 += 1, R5850 += 1, R176 += 1 };
  s1 -> s15 [70, 70] { R5914 += 1, R5850 += 1, R176 += 1 };
  s1 -> s9 [70, 70] { R5914 += 1, R5850 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s1 [71, 65535] { R5914 += 1, R5850 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s14 [71, 65535] { R5914 += 1, R5850 += 1, R176 += 1 };
  s2 -> s1 [0, 69] { R5914 += 1, R5850 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [0, 69] { R5914 += 1, R5850 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s5 [70, 70] { R5914 += 1, R5850 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s6 [70, 70] { R5914 += 1, R5850 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s7 [70, 70] { R5914 += 1, R5850 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s9 [70, 70] { R5914 += 1, R5850 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s1 [71, 65535] { R5914 += 1, R5850 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [71, 65535] { R5914 += 1, R5850 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s1 [0, 69] { R5914 += 1, R5850 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s2 [0, 69] { R5914 += 1, R5850 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s3 [0, 69] { R5914 += 1, R5850 += 1, R175 += 1, R176 += 1 };
  s3 -> s5 [70, 70] { R5914 += 1, R5850 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s6 [70, 70] { R5914 += 1, R5850 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s7 [70, 70] { R5914 += 1, R5850 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s8 [70, 70] { R5914 += 1, R5850 += 1, R175 += 1, R176 += 1 };
  s3 -> s9 [70, 70] { R5914 += 1, R5850 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s10 [70, 70] { R5914 += 1, R5850 += 1, R175 += 1, R176 += 1 };
  s3 -> s1 [71, 65535] { R5914 += 1, R5850 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s2 [71, 65535] { R5914 += 1, R5850 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s3 [71, 65535] { R5914 += 1, R5850 += 1, R175 += 1, R176 += 1 };
  s4 -> s1 [0, 69] { R5914 += 1, R5850 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s2 [0, 69] { R5914 += 1, R5850 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s3 [0, 69] { R5914 += 1, R5850 += 1, R175 += 1, R176 += 1 };
  s4 -> s4 [0, 65535] { R5914 += 1, R5849 += 1, R5850 += 1 };
  s4 -> s5 [70, 70] { R5914 += 1, R5850 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s6 [70, 70] { R5914 += 1, R5850 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s7 [70, 70] { R5914 += 1, R5850 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s8 [70, 70] { R5914 += 1, R5850 += 1, R175 += 1, R176 += 1 };
  s4 -> s9 [70, 70] { R5914 += 1, R5850 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s10 [70, 70] { R5914 += 1, R5850 += 1, R175 += 1, R176 += 1 };
  s4 -> s1 [71, 65535] { R5914 += 1, R5850 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s2 [71, 65535] { R5914 += 1, R5850 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s3 [71, 65535] { R5914 += 1, R5850 += 1, R175 += 1, R176 += 1 };
  s6 -> s6 [0, 65535] { R5914 += 1, R5850 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s6 -> s9 [0, 65535] { R5914 += 1, R5850 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s9 -> s11 [0, 65535] { R5914 += 1, R5850 += 1, R176 += 1 };
  s9 -> s9 [0, 65535] { R5914 += 1, R5850 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s10 -> s6 [0, 65535] { R5914 += 1, R5850 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s10 -> s9 [0, 65535] { R5914 += 1, R5850 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s10 -> s10 [0, 65535] { R5914 += 1, R5850 += 1, R175 += 1, R176 += 1 };
  s11 -> s11 [0, 65535] { R5914 += 1, R5850 += 1, R176 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [0, 65535] { R5914 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R5914 += 1 };
  s14 -> s14 [0, 69] { R5914 += 1, R5850 += 1, R176 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R5914 += 1 };
  s14 -> s11 [70, 70] { R5914 += 1, R5850 += 1, R176 += 1 };
  s14 -> s15 [70, 70] { R5914 += 1, R5850 += 1, R176 += 1 };
  s14 -> s14 [71, 65535] { R5914 += 1, R5850 += 1, R176 += 1 };
  s15 -> s15 [0, 65535] { R5914 += 1 };
  s15 -> s12 [0, 65535];
  accepting s12, s13, s14, s15, s11;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R5916 += 1, R5852 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s0 -> s2 [0, 69] { R5916 += 1, R5852 += 1, R185 += 1, R186 += 1 };
  s0 -> s3 [0, 65535] { R5916 += 1, R5851 += 1, R5852 += 1 };
  s0 -> s0 [0, 65535] { R5915 += 1, R5916 += 1 };
  s0 -> s4 [70, 70] { R5916 += 1, R5852 += 1, R185 += 1, R186 += 1 };
  s0 -> s5 [70, 70] { R5916 += 1, R5852 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s0 -> s6 [70, 70] { R5916 += 1, R5852 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s0 -> s7 [70, 70] { R5916 += 1, R5852 += 1, R185 += 1, R186 += 1 };
  s0 -> s1 [71, 65535] { R5916 += 1, R5852 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s0 -> s2 [71, 65535] { R5916 += 1, R5852 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 69] { R5916 += 1, R5852 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s1 -> s1 [0, 65535] { R5916 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s5 [70, 70] { R5916 += 1, R5852 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s1 -> s6 [70, 70] { R5916 += 1, R5852 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s1 -> s1 [71, 65535] { R5916 += 1, R5852 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s2 -> s1 [0, 69] { R5916 += 1, R5852 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s2 -> s2 [0, 69] { R5916 += 1, R5852 += 1, R185 += 1, R186 += 1 };
  s2 -> s4 [70, 70] { R5916 += 1, R5852 += 1, R185 += 1, R186 += 1 };
  s2 -> s5 [70, 70] { R5916 += 1, R5852 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s2 -> s6 [70, 70] { R5916 += 1, R5852 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s2 -> s7 [70, 70] { R5916 += 1, R5852 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [71, 65535] { R5916 += 1, R5852 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s2 -> s2 [71, 65535] { R5916 += 1, R5852 += 1, R185 += 1, R186 += 1 };
  s3 -> s1 [0, 69] { R5916 += 1, R5852 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s3 -> s2 [0, 69] { R5916 += 1, R5852 += 1, R185 += 1, R186 += 1 };
  s3 -> s3 [0, 65535] { R5916 += 1, R5851 += 1, R5852 += 1 };
  s3 -> s4 [70, 70] { R5916 += 1, R5852 += 1, R185 += 1, R186 += 1 };
  s3 -> s5 [70, 70] { R5916 += 1, R5852 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s3 -> s6 [70, 70] { R5916 += 1, R5852 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s3 -> s7 [70, 70] { R5916 += 1, R5852 += 1, R185 += 1, R186 += 1 };
  s3 -> s1 [71, 65535] { R5916 += 1, R5852 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s3 -> s2 [71, 65535] { R5916 += 1, R5852 += 1, R185 += 1, R186 += 1 };
  s4 -> s4 [0, 65535] { R5916 += 1, R5852 += 1, R185 += 1, R186 += 1 };
  s4 -> s6 [0, 65535] { R5916 += 1, R5852 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s5 -> s5 [0, 65535] { R5916 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R5916 += 1, R5852 += 1, R186 += 1, R187 += 1, R188 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [0, 65535] { R5916 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R5916 += 1 };
  accepting s8, s5, s9, s6, s1;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R5918 += 1, R5854 += 1, R4489 += 1, R4490 += 1 };
  s0 -> s2 [0, 65535] { R5918 += 1, R5853 += 1, R5854 += 1 };
  s0 -> s0 [0, 65535] { R5917 += 1, R5918 += 1 };
  s0 -> s3 [70, 70] { R5918 += 1, R5854 += 1, R4489 += 1, R4490 += 1 };
  s0 -> s4 [70, 70] { R5918 += 1, R5854 += 1, R4489 += 1, R4490 += 1 };
  s0 -> s1 [71, 65535] { R5918 += 1, R5854 += 1, R4489 += 1, R4490 += 1 };
  s1 -> s1 [0, 69] { R5918 += 1, R5854 += 1, R4489 += 1, R4490 += 1 };
  s1 -> s1 [0, 65535] { R5918 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R5918 += 1, R5854 += 1, R4489 += 1, R4490 += 1 };
  s1 -> s4 [70, 70] { R5918 += 1, R5854 += 1, R4489 += 1, R4490 += 1 };
  s1 -> s1 [71, 65535] { R5918 += 1, R5854 += 1, R4489 += 1, R4490 += 1 };
  s2 -> s1 [0, 69] { R5918 += 1, R5854 += 1, R4489 += 1, R4490 += 1 };
  s2 -> s2 [0, 65535] { R5918 += 1, R5853 += 1, R5854 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R5918 += 1, R5854 += 1, R4489 += 1, R4490 += 1 };
  s2 -> s4 [70, 70] { R5918 += 1, R5854 += 1, R4489 += 1, R4490 += 1 };
  s2 -> s1 [71, 65535] { R5918 += 1, R5854 += 1, R4489 += 1, R4490 += 1 };
  s3 -> s3 [0, 65535] { R5918 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5918 += 1 };
  s4 -> s4 [0, 65535] { R5918 += 1, R5854 += 1, R4489 += 1, R4490 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5918 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R5920 += 1, R5856 += 1, R5764 += 1, R5766 += 1 };
  s0 -> s2 [0, 69] { R5920 += 1, R5856 += 1, R5763 += 1, R5764 += 1 };
  s0 -> s3 [0, 69] { R5920 += 1, R5856 += 1, R5764 += 1, R5765 += 1, R5766 += 1 };
  s0 -> s0 [0, 65535] { R5919 += 1, R5920 += 1 };
  s0 -> s4 [0, 65535] { R5920 += 1, R5855 += 1, R5856 += 1 };
  s0 -> s5 [70, 70] { R5920 += 1, R5856 += 1, R5764 += 1, R5765 += 1, R5766 += 1 };
  s0 -> s6 [70, 70] { R5920 += 1, R5856 += 1, R5764 += 1, R5766 += 1 };
  s0 -> s7 [70, 70] { R5920 += 1, R5856 += 1, R5764 += 1, R5765 += 1, R5766 += 1 };
  s0 -> s8 [70, 70] { R5920 += 1, R5856 += 1, R5763 += 1, R5764 += 1 };
  s0 -> s9 [70, 70] { R5920 += 1, R5856 += 1, R5764 += 1, R5766 += 1 };
  s0 -> s10 [70, 70] { R5920 += 1, R5856 += 1, R5763 += 1, R5764 += 1 };
  s0 -> s1 [71, 74] { R5920 += 1, R5856 += 1, R5764 += 1, R5766 += 1 };
  s0 -> s2 [71, 65535] { R5920 += 1, R5856 += 1, R5763 += 1, R5764 += 1 };
  s0 -> s3 [71, 65535] { R5920 += 1, R5856 += 1, R5764 += 1, R5765 += 1, R5766 += 1 };
  s0 -> s1 [77, 65535] { R5920 += 1, R5856 += 1, R5764 += 1, R5766 += 1 };
  s1 -> s1 [0, 69] { R5920 += 1, R5856 += 1, R5764 += 1, R5766 += 1 };
  s1 -> s1 [0, 65535] { R5920 += 1 };
  s1 -> s11 [0, 65535];
  s1 -> s6 [70, 70] { R5920 += 1, R5856 += 1, R5764 += 1, R5766 += 1 };
  s1 -> s9 [70, 70] { R5920 += 1, R5856 += 1, R5764 += 1, R5766 += 1 };
  s1 -> s1 [71, 74] { R5920 += 1, R5856 += 1, R5764 += 1, R5766 += 1 };
  s1 -> s1 [77, 65535] { R5920 += 1, R5856 += 1, R5764 += 1, R5766 += 1 };
  s2 -> s1 [0, 69] { R5920 += 1, R5856 += 1, R5764 += 1, R5766 += 1 };
  s2 -> s2 [0, 69] { R5920 += 1, R5856 += 1, R5763 += 1, R5764 += 1 };
  s2 -> s3 [0, 69] { R5920 += 1, R5856 += 1, R5764 += 1, R5765 += 1, R5766 += 1 };
  s2 -> s5 [70, 70] { R5920 += 1, R5856 += 1, R5764 += 1, R5765 += 1, R5766 += 1 };
  s2 -> s6 [70, 70] { R5920 += 1, R5856 += 1, R5764 += 1, R5766 += 1 };
  s2 -> s7 [70, 70] { R5920 += 1, R5856 += 1, R5764 += 1, R5765 += 1, R5766 += 1 };
  s2 -> s8 [70, 70] { R5920 += 1, R5856 += 1, R5763 += 1, R5764 += 1 };
  s2 -> s9 [70, 70] { R5920 += 1, R5856 += 1, R5764 += 1, R5766 += 1 };
  s2 -> s10 [70, 70] { R5920 += 1, R5856 += 1, R5763 += 1, R5764 += 1 };
  s2 -> s1 [71, 74] { R5920 += 1, R5856 += 1, R5764 += 1, R5766 += 1 };
  s2 -> s2 [71, 65535] { R5920 += 1, R5856 += 1, R5763 += 1, R5764 += 1 };
  s2 -> s3 [71, 65535] { R5920 += 1, R5856 += 1, R5764 += 1, R5765 += 1, R5766 += 1 };
  s2 -> s1 [77, 65535] { R5920 += 1, R5856 += 1, R5764 += 1, R5766 += 1 };
  s3 -> s1 [0, 69] { R5920 += 1, R5856 += 1, R5764 += 1, R5766 += 1 };
  s3 -> s3 [0, 69] { R5920 += 1, R5856 += 1, R5764 += 1, R5765 += 1, R5766 += 1 };
  s3 -> s5 [70, 70] { R5920 += 1, R5856 += 1, R5764 += 1, R5765 += 1, R5766 += 1 };
  s3 -> s6 [70, 70] { R5920 += 1, R5856 += 1, R5764 += 1, R5766 += 1 };
  s3 -> s7 [70, 70] { R5920 += 1, R5856 += 1, R5764 += 1, R5765 += 1, R5766 += 1 };
  s3 -> s9 [70, 70] { R5920 += 1, R5856 += 1, R5764 += 1, R5766 += 1 };
  s3 -> s1 [71, 74] { R5920 += 1, R5856 += 1, R5764 += 1, R5766 += 1 };
  s3 -> s3 [71, 65535] { R5920 += 1, R5856 += 1, R5764 += 1, R5765 += 1, R5766 += 1 };
  s3 -> s1 [77, 65535] { R5920 += 1, R5856 += 1, R5764 += 1, R5766 += 1 };
  s4 -> s1 [0, 69] { R5920 += 1, R5856 += 1, R5764 += 1, R5766 += 1 };
  s4 -> s2 [0, 69] { R5920 += 1, R5856 += 1, R5763 += 1, R5764 += 1 };
  s4 -> s3 [0, 69] { R5920 += 1, R5856 += 1, R5764 += 1, R5765 += 1, R5766 += 1 };
  s4 -> s4 [0, 65535] { R5920 += 1, R5855 += 1, R5856 += 1 };
  s4 -> s5 [70, 70] { R5920 += 1, R5856 += 1, R5764 += 1, R5765 += 1, R5766 += 1 };
  s4 -> s6 [70, 70] { R5920 += 1, R5856 += 1, R5764 += 1, R5766 += 1 };
  s4 -> s7 [70, 70] { R5920 += 1, R5856 += 1, R5764 += 1, R5765 += 1, R5766 += 1 };
  s4 -> s8 [70, 70] { R5920 += 1, R5856 += 1, R5763 += 1, R5764 += 1 };
  s4 -> s9 [70, 70] { R5920 += 1, R5856 += 1, R5764 += 1, R5766 += 1 };
  s4 -> s10 [70, 70] { R5920 += 1, R5856 += 1, R5763 += 1, R5764 += 1 };
  s4 -> s1 [71, 74] { R5920 += 1, R5856 += 1, R5764 += 1, R5766 += 1 };
  s4 -> s2 [71, 65535] { R5920 += 1, R5856 += 1, R5763 += 1, R5764 += 1 };
  s4 -> s3 [71, 65535] { R5920 += 1, R5856 += 1, R5764 += 1, R5765 += 1, R5766 += 1 };
  s4 -> s1 [77, 65535] { R5920 += 1, R5856 += 1, R5764 += 1, R5766 += 1 };
  s6 -> s6 [0, 74] { R5920 += 1, R5856 += 1, R5764 += 1, R5766 += 1 };
  s6 -> s11 [0, 65535];
  s6 -> s6 [0, 65535] { R5920 += 1 };
  s6 -> s6 [77, 65535] { R5920 += 1, R5856 += 1, R5764 += 1, R5766 += 1 };
  s7 -> s6 [0, 74] { R5920 += 1, R5856 += 1, R5764 += 1, R5766 += 1 };
  s7 -> s7 [0, 65535] { R5920 += 1, R5856 += 1, R5764 += 1, R5765 += 1, R5766 += 1 };
  s7 -> s6 [77, 65535] { R5920 += 1, R5856 += 1, R5764 += 1, R5766 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s9 [0, 65535] { R5920 += 1 };
  s10 -> s6 [0, 74] { R5920 += 1, R5856 += 1, R5764 += 1, R5766 += 1 };
  s10 -> s7 [0, 65535] { R5920 += 1, R5856 += 1, R5764 += 1, R5765 += 1, R5766 += 1 };
  s10 -> s10 [0, 65535] { R5920 += 1, R5856 += 1, R5763 += 1, R5764 += 1 };
  s10 -> s6 [77, 65535] { R5920 += 1, R5856 += 1, R5764 += 1, R5766 += 1 };
  s11 -> s11 [0, 65535];
  accepting s1, s6, s9, s11;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R5800 && R3 = R5920 && R25 - R5920 = -1 && R26 = R5920 && R27 - R5920 = -1 && R28 = R5920 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R5768 + -1*R5764 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R5768 + -1*R5764 - R130 = 0 && R129 + R5767 + R5763 = 0 && R131 + R5769 + R5765 = 0 && R132 + R5770 + R5766 = 0 && R5799 = 0 && R5831 = 0 && R5832 = 0 && R5841 = 0 && R5842 = 0 && R5849 = 0 && R5850 = 0 && R5851 = 0 && R5852 = 0 && R5855 = 0 && R5856 = 0 && R5857 = 0 && R5858 = R5920 && R5859 = 0 && R5860 = R5920 && R5861 = 0 && R5862 = R5920 && R5863 = 0 && R5864 = R5920 && R5865 = 0 && R5866 = R5920 && R5867 = 0 && R5868 = R5920 && R5869 = 0 && R5870 = R5920 && R5871 = 0 && R5872 = R5920 && R5873 = 0 && R5874 = R5920 && R5875 = 0 && R5876 = R5920 && R5877 = 0 && R5878 = R5920 && R5879 = 0 && R5880 = R5920 && R5881 = 0 && R5882 = R5920 && R5883 = 0 && R5884 = R5920 && R5885 = 0 && R5886 = R5920 && R5887 = 0 && R5888 = R5920 && R5889 = 0 && R5890 = R5920 && R5891 = 0 && R5892 = R5920 && R5893 = 0 && R5894 = R5920 && R5895 = 0 && R5896 = R5920 && R5897 = 0 && R5898 = R5920 && R5899 = 0 && R5900 = R5920 && R5901 = 0 && R5902 = R5920 && R5903 = 0 && R5904 = R5920 && R5905 = 0 && R5906 = R5920 && R5907 = 0 && R5908 = R5920 && R5909 = 0 && R5910 = R5920 && R5911 = 0 && R5912 = R5920 && R5913 = 0 && R5914 = R5920 && R5915 = 0 && R5916 = R5920 && R5917 = 0 && R5918 = R5920 && R5919 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R5768 + -1*R5764 - R130 < 1 && -1 < R5800 && 0 < R5920 && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R5768 + -1*R5764 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R191 + R187 = 0 && R114 + R192 + R188 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R5768 + -1*R5764 - R130 = 0 || R130 + R5768 + R5764 < 1) && (R81 + R158 + R155 = 0 || R130 + R5768 + R5764 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R5768 + -1*R5764 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R5768 + R5764 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R5768 + -1*R5764 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R5768 + R5764 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R5768 + -1*R5764 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R5768 + R5764 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 != 0 || R112 + R190 + R186 + -1*R5768 + -1*R5764 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R5768 + R5764 = 0)) && (R113 + R191 + R187 != 0 || R83 + R160 + R157 + -1*R192 + -1*R188 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R4494 + R4489 != 0 || R120 + R4495 + R4490 + -1*R5768 + -1*R5764 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R5768 + R5764 = 0)) && (R5771 != 0 || R5772 = R5800 || (R22 = 0 && R5800 = 0)) && (R5773 != 0 || R5774 = R5800 || (R22 = 0 && R5800 = 0)) && (R5775 != 0 || R5776 = R5800 || (R22 = 0 && R5800 = 0)) && (R5777 != 0 || R5778 = R5800 || (R22 = 0 && R5800 = 0)) && (R5779 != 0 || R5780 = R5800 || (R22 = 0 && R5800 = 0)) && (R5781 != 0 || R5782 = R5800 || (R22 = 0 && R5800 = 0)) && (R5783 != 0 || R5784 = R5800 || (R22 = 0 && R5800 = 0)) && (R5785 != 0 || R5786 = R5800 || (R22 = 0 && R5800 = 0)) && (R5787 != 0 || R5788 = R5800 || (R22 = 0 && R5800 = 0)) && (R5789 != 0 || R5790 = R5800 || (R22 = 0 && R5800 = 0)) && (R5791 != 0 || R5792 = R5800 || (R22 = 0 && R5800 = 0)) && (R5793 != 0 || R5794 = R5800 || (R22 = 0 && R5800 = 0)) && (R5795 != 0 || R5796 = R5800 || (R22 = 0 && R5800 = 0)) && (R5797 != 0 || R5798 = R5800 || (R22 = 0 && R5800 = 0)) && (R23 = 0 || (R5829 = 0 && R5830 = 0)) && (R23 = 0 || (R5833 = 0 && R5834 = 0)) && (R23 = 0 || (R5835 = 0 && R5836 = 0)) && (R23 = 0 || (R5837 = 0 && R5838 = 0)) && (R23 = 0 || (R5839 = 0 && R5840 = 0)) && (R23 = 0 || (R5843 = 0 && R5844 = 0)) && (R23 = 0 || (R5845 = 0 && R5846 = 0)) && (R23 = 0 || (R5847 = 0 && R5848 = 0)) && (R23 = 0 || (R5853 = 0 && R5854 = 0)) && (R24 = 0 || (R5801 = 0 && R5802 = 0)) && (R24 = 0 || (R5803 = 0 && R5804 = 0)) && (R24 = 0 || (R5805 = 0 && R5806 = 0)) && (R24 = 0 || (R5807 = 0 && R5808 = 0)) && (R24 = 0 || (R5809 = 0 && R5810 = 0)) && (R24 = 0 || (R5811 = 0 && R5812 = 0)) && (R24 = 0 || (R5813 = 0 && R5814 = 0)) && (R24 = 0 || (R5815 = 0 && R5816 = 0)) && (R24 = 0 || (R5817 = 0 && R5818 = 0)) && (R24 = 0 || (R5819 = 0 && R5820 = 0)) && (R24 = 0 || (R5821 = 0 && R5822 = 0)) && (R24 = 0 || (R5823 = 0 && R5824 = 0)) && (R24 = 0 || (R5825 = 0 && R5826 = 0)) && (R24 = 0 || (R5827 = 0 && R5828 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R5768 + R5764 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R5768 + R5764 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R5768 + R5764 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 = 0 || (R83 + R160 + R157 = 0 && R130 + R5768 + R5764 = 0)) && (R113 + R191 + R187 = 0 || R83 + R160 + R157 < 1) && (R119 + R4494 + R4489 = 0 || (R83 + R160 + R157 = 0 && R130 + R5768 + R5764 = 0)) && (R123 + R4498 + R4493 = 0 || (R121 + R4496 + R4491 = 0 && R122 + R4497 + R4492 = 0)) && (R5771 = 0 || (R22 = 0 && R5800 = 0)) && (R5773 = 0 || (R22 = 0 && R5800 = 0)) && (R5775 = 0 || (R22 = 0 && R5800 = 0)) && (R5777 = 0 || (R22 = 0 && R5800 = 0)) && (R5779 = 0 || (R22 = 0 && R5800 = 0)) && (R5781 = 0 || (R22 = 0 && R5800 = 0)) && (R5783 = 0 || (R22 = 0 && R5800 = 0)) && (R5785 = 0 || (R22 = 0 && R5800 = 0)) && (R5787 = 0 || (R22 = 0 && R5800 = 0)) && (R5789 = 0 || (R22 = 0 && R5800 = 0)) && (R5791 = 0 || (R22 = 0 && R5800 = 0)) && (R5793 = 0 || (R22 = 0 && R5800 = 0)) && (R5795 = 0 || (R22 = 0 && R5800 = 0)) && (R5797 = 0 || (R22 = 0 && R5800 = 0));
// End of Parikh automata intersection problem
