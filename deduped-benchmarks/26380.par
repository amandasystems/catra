// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R2, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R5, R63, R65, R67, R68, R69, R73, R7353, R7354, R7355, R7356, R7357, R7358, R7359, R7360, R7361, R7362, R7363, R7364, R7365, R7366, R7367, R7368, R7369, R7370, R74, R77, R78, R8003, R8004, R8005, R8006, R8007, R8008, R8009, R8010, R8011, R8012, R8013, R8014, R8015, R8016, R8017, R8018, R8019, R8020, R8021, R8022, R8023, R8024, R8025, R8026, R8027, R8028, R8029, R8030, R8031, R8032, R8033, R8034, R8035, R8036, R8037, R8038, R8039, R8040, R8041, R8042, R8043, R8044, R8045, R8046, R8047, R8048, R8049, R8050, R8051, R8052, R8053, R8054, R8055, R8056, R8057, R8058, R8059, R8060, R8061, R8062, R8063, R8064, R8065, R8066, R8067, R8068, R8069, R8070, R8071, R8072, R8073, R8074, R8075, R8076, R8077, R8078, R8079, R8080, R8081, R8082, R8083, R8084, R8085, R8086, R8087, R8088, R8089, R8090, R8091, R8092, R8093, R8094, R8095, R8096, R8097, R8098, R8099, R81, R8100, R8101, R8102, R8103, R8104, R8105, R8106, R8107, R8108, R8109, R8110, R8111, R8112, R8113, R8114, R8115, R8116, R8117, R8118, R8119, R8120, R8121, R8122, R8123, R8124, R8125, R8126, R8127, R8128, R8129, R8130, R8131, R8132, R8133, R8134, R8135, R8136, R8137, R8138, R8139, R8140, R8141, R8142, R8143, R8144, R8145, R8146, R8147, R8148, R8149, R8150, R8151, R8152, R8153, R8154, R8155, R8156, R8157, R8158, R8159, R8160, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R26 += 1 };
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R8041 += 1, R8042 += 1 };
  s0 -> s1 [0, 65535] { R8042 += 1, R24 += 1 };
  s1 -> s1 [0, 65535] { R8042 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R8044 += 1 };
  s0 -> s0 [0, 65535] { R8043 += 1, R8044 += 1 };
  s0 -> s2 [70, 70] { R8044 += 1 };
  s0 -> s3 [70, 70] { R8044 += 1 };
  s0 -> s1 [76, 65535] { R8044 += 1 };
  s1 -> s1 [0, 69] { R8044 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R8044 += 1 };
  s1 -> s3 [70, 70] { R8044 += 1 };
  s1 -> s1 [76, 65535] { R8044 += 1 };
  s2 -> s2 [0, 70] { R8044 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R8044 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R8046 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R8045 += 1, R8046 += 1 };
  s0 -> s2 [70, 70] { R8046 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R8046 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R8046 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R8046 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R8046 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R8046 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R8046 += 1, R63 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R8046 += 1, R63 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R8048 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R8047 += 1, R8048 += 1 };
  s0 -> s2 [70, 70] { R8048 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R8048 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R8048 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R8048 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R8048 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R8048 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R8048 += 1, R65 += 1 };
  s2 -> s2 [0, 65535] { R8048 += 1, R65 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R8050 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R8049 += 1, R8050 += 1 };
  s0 -> s2 [70, 70] { R8050 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R8050 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R8050 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R8050 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R8050 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R8050 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R8050 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R8050 += 1, R67 += 1, R68 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R8052 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R8051 += 1, R8052 += 1 };
  s0 -> s2 [70, 70] { R8052 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R8052 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R8052 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R8052 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R8052 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R8052 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R8052 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R8052 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R8054 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R8053 += 1, R8054 += 1 };
  s0 -> s2 [70, 70] { R8054 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R8054 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R8054 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R8054 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R8054 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R8054 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R8054 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535] { R8054 += 1, R77 += 1, R78 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R8056 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R8055 += 1, R8056 += 1 };
  s0 -> s2 [70, 70] { R8056 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R8056 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R8056 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R8056 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R8056 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R8056 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R8056 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R8056 += 1, R81 += 1, R82 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R8058 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R8057 += 1, R8058 += 1 };
  s0 -> s2 [70, 70] { R8058 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R8058 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R8058 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R8058 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R8058 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R8058 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R8058 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R8058 += 1, R87 += 1, R88 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R8060 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R8059 += 1, R8060 += 1 };
  s0 -> s2 [70, 70] { R8060 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R8060 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R8060 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R8060 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R8060 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R8060 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R8060 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R8060 += 1, R93 += 1, R94 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R8062 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R8061 += 1, R8062 += 1 };
  s0 -> s2 [70, 70] { R8062 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R8062 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R8062 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R8062 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R8062 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R8062 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R8062 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535] { R8062 += 1, R101 += 1, R102 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R8064 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R8063 += 1, R8064 += 1 };
  s0 -> s2 [70, 70] { R8064 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R8064 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R8064 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R8064 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R8064 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R8064 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R8064 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R8064 += 1, R111 += 1, R112 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R8066 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R8065 += 1, R8066 += 1 };
  s0 -> s2 [70, 70] { R8066 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R8066 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R8066 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R8066 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R8066 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R8066 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R8066 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R8066 += 1, R119 += 1, R120 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R8068 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R8067 += 1, R8068 += 1 };
  s0 -> s2 [70, 70] { R8068 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R8068 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R8068 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R8068 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R8068 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R8068 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R8068 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535] { R8068 += 1, R129 += 1, R130 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R8098 += 1 };
  s0 -> s0 [0, 65535] { R8097 += 1, R8098 += 1 };
  s0 -> s2 [70, 70] { R8098 += 1 };
  s0 -> s1 [71, 65535] { R8098 += 1 };
  s1 -> s1 [0, 69] { R8098 += 1 };
  s1 -> s2 [70, 70] { R8098 += 1 };
  s1 -> s1 [71, 65535] { R8098 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R8098 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R8099 += 1, R8100 += 1 };
  s0 -> s1 [0, 65535] { R8100 += 1, R2 += 1 };
  s1 -> s1 [0, 65535] { R8100 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R8102 += 1 };
  s0 -> s0 [0, 65535] { R8101 += 1, R8102 += 1 };
  s0 -> s2 [0, 65535] { R8102 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R8102 += 1 };
  s0 -> s1 [71, 65535] { R8102 += 1 };
  s1 -> s1 [0, 69] { R8102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R8102 += 1 };
  s1 -> s1 [71, 65535] { R8102 += 1 };
  s2 -> s1 [0, 69] { R8102 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R8102 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R8102 += 1 };
  s2 -> s1 [71, 65535] { R8102 += 1 };
  s3 -> s3 [0, 65535] { R8102 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R8104 += 1, R8012 += 1 };
  s0 -> s2 [0, 65535] { R8104 += 1, R8011 += 1, R8012 += 1 };
  s0 -> s0 [0, 65535] { R8103 += 1, R8104 += 1 };
  s0 -> s1 [71, 65535] { R8104 += 1, R8012 += 1 };
  s1 -> s1 [0, 69] { R8104 += 1, R8012 += 1 };
  s1 -> s1 [0, 65535] { R8104 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R8104 += 1, R8012 += 1 };
  s2 -> s1 [0, 69] { R8104 += 1, R8012 += 1 };
  s2 -> s2 [0, 65535] { R8104 += 1, R8011 += 1, R8012 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R8104 += 1, R8012 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R8106 += 1, R8013 += 1, R8014 += 1 };
  s0 -> s2 [0, 65535] { R8106 += 1, R8014 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R8105 += 1, R8106 += 1 };
  s1 -> s1 [0, 65535] { R8106 += 1, R8013 += 1, R8014 += 1 };
  s1 -> s2 [0, 65535] { R8106 += 1, R8014 += 1, R22 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R8106 += 1, R8014 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R8106 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R8106 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R8108 += 1, R8016 += 1 };
  s0 -> s0 [0, 65535] { R8107 += 1, R8108 += 1 };
  s0 -> s2 [0, 65535] { R8108 += 1, R8015 += 1, R8016 += 1 };
  s0 -> s1 [75, 65535] { R8108 += 1, R8016 += 1 };
  s1 -> s1 [0, 70] { R8108 += 1, R8016 += 1 };
  s1 -> s1 [0, 65535] { R8108 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R8108 += 1, R8016 += 1 };
  s2 -> s1 [0, 70] { R8108 += 1, R8016 += 1 };
  s2 -> s2 [0, 65535] { R8108 += 1, R8015 += 1, R8016 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R8108 += 1, R8016 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s0 [0, 65535] { R8109 += 1, R8110 += 1 };
  s0 -> s1 [0, 65535] { R8110 += 1, R8017 += 1, R8018 += 1 };
  s0 -> s2 [0, 65535] { R8110 += 1, R8018 += 1, R138 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R8110 += 1, R8017 += 1, R8018 += 1 };
  s1 -> s2 [0, 65535] { R8110 += 1, R8018 += 1, R138 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R8110 += 1 };
  s2 -> s2 [0, 65535] { R8110 += 1, R8018 += 1, R138 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R8110 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R8112 += 1, R8020 += 1 };
  s0 -> s0 [0, 65535] { R8111 += 1, R8112 += 1 };
  s0 -> s2 [0, 65535] { R8112 += 1, R8020 += 1, R140 += 1 };
  s0 -> s3 [0, 65535] { R8112 += 1, R8019 += 1, R8020 += 1 };
  s0 -> s1 [76, 65535] { R8112 += 1, R8020 += 1 };
  s1 -> s1 [0, 74] { R8112 += 1, R8020 += 1 };
  s1 -> s1 [0, 65535] { R8112 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [76, 65535] { R8112 += 1, R8020 += 1 };
  s2 -> s1 [0, 74] { R8112 += 1, R8020 += 1 };
  s2 -> s5 [0, 65535] { R8112 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R8112 += 1, R8020 += 1, R140 += 1 };
  s2 -> s1 [76, 65535] { R8112 += 1, R8020 += 1 };
  s3 -> s1 [0, 74] { R8112 += 1, R8020 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R8112 += 1, R8020 += 1, R140 += 1 };
  s3 -> s3 [0, 65535] { R8112 += 1, R8019 += 1, R8020 += 1 };
  s3 -> s1 [76, 65535] { R8112 += 1, R8020 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R8112 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R8114 += 1, R8021 += 1, R8022 += 1 };
  s0 -> s2 [0, 65535] { R8114 += 1, R8022 += 1, R144 += 1, R145 += 1 };
  s0 -> s3 [0, 65535] { R8114 += 1, R8022 += 1, R145 += 1, R146 += 1 };
  s0 -> s0 [0, 65535] { R8113 += 1, R8114 += 1 };
  s1 -> s1 [0, 65535] { R8114 += 1, R8021 += 1, R8022 += 1 };
  s1 -> s2 [0, 65535] { R8114 += 1, R8022 += 1, R144 += 1, R145 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s3 [0, 65535] { R8114 += 1, R8022 += 1, R145 += 1, R146 += 1 };
  s2 -> s2 [0, 65535] { R8114 += 1, R8022 += 1, R144 += 1, R145 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R8114 += 1, R8022 += 1, R145 += 1, R146 += 1 };
  s2 -> s6 [0, 65535] { R8114 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R8114 += 1, R8022 += 1 };
  s3 -> s3 [0, 65535] { R8114 += 1, R8022 += 1, R145 += 1, R146 += 1 };
  s3 -> s6 [0, 65535] { R8114 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R8114 += 1, R8022 += 1 };
  s5 -> s6 [0, 65535] { R8114 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R8114 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R8116 += 1, R8024 += 1, R150 += 1 };
  s0 -> s2 [0, 65535] { R8116 += 1, R8024 += 1, R149 += 1, R150 += 1 };
  s0 -> s0 [0, 65535] { R8115 += 1, R8116 += 1 };
  s0 -> s3 [0, 65535] { R8116 += 1, R8023 += 1, R8024 += 1 };
  s0 -> s4 [75, 75] { R8116 += 1, R8024 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R8116 += 1, R8024 += 1, R150 += 1 };
  s0 -> s1 [77, 65535] { R8116 += 1, R8024 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R8116 += 1, R8024 += 1, R150 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R8116 += 1 };
  s1 -> s1 [0, 65535] { R8116 += 1, R8024 += 1 };
  s1 -> s4 [75, 75] { R8116 += 1, R8024 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R8116 += 1, R8024 += 1, R150 += 1 };
  s1 -> s1 [77, 65535] { R8116 += 1, R8024 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R8116 += 1, R8024 += 1, R150 += 1 };
  s2 -> s2 [0, 65535] { R8116 += 1, R8024 += 1, R149 += 1, R150 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R8116 += 1 };
  s2 -> s4 [75, 75] { R8116 += 1, R8024 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R8116 += 1, R8024 += 1, R150 += 1 };
  s2 -> s1 [77, 65535] { R8116 += 1, R8024 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R8116 += 1, R8024 += 1, R150 += 1 };
  s3 -> s2 [0, 65535] { R8116 += 1, R8024 += 1, R149 += 1, R150 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R8116 += 1, R8023 += 1, R8024 += 1 };
  s3 -> s4 [75, 75] { R8116 += 1, R8024 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R8116 += 1, R8024 += 1, R150 += 1 };
  s3 -> s1 [77, 65535] { R8116 += 1, R8024 += 1, R150 += 1 };
  s4 -> s4 [0, 65535] { R8116 += 1, R8024 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R8116 += 1 };
  s5 -> s5 [0, 75] { R8116 += 1, R8024 += 1, R150 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R8116 += 1 };
  s5 -> s5 [0, 65535] { R8116 += 1, R8024 += 1 };
  s5 -> s5 [77, 65535] { R8116 += 1, R8024 += 1, R150 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R8116 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R8118 += 1, R8025 += 1, R8026 += 1 };
  s0 -> s0 [0, 65535] { R8117 += 1, R8118 += 1 };
  s0 -> s2 [0, 65535] { R8118 += 1, R8026 += 1 };
  s0 -> s3 [0, 65535] { R8118 += 1, R8026 += 1, R154 += 1 };
  s1 -> s1 [0, 65535] { R8118 += 1, R8025 += 1, R8026 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R8118 += 1, R8026 += 1 };
  s1 -> s3 [0, 65535] { R8118 += 1, R8026 += 1, R154 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R8118 += 1, R8026 += 1 };
  s2 -> s5 [0, 65535] { R8118 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R8118 += 1, R8026 += 1 };
  s3 -> s3 [0, 65535] { R8118 += 1, R8026 += 1, R154 += 1 };
  s3 -> s5 [0, 65535] { R8118 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R8118 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R8120 += 1, R8028 += 1, R159 += 1, R160 += 1 };
  s0 -> s2 [0, 65535] { R8120 += 1, R8027 += 1, R8028 += 1 };
  s0 -> s0 [0, 65535] { R8119 += 1, R8120 += 1 };
  s0 -> s3 [0, 65535] { R8120 += 1, R8028 += 1, R158 += 1, R159 += 1 };
  s1 -> s4 [0, 65535] { R8120 += 1 };
  s1 -> s1 [0, 65535] { R8120 += 1, R8028 += 1, R159 += 1, R160 += 1 };
  s1 -> s6 [0, 65535] { R8120 += 1, R8028 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R8120 += 1, R8028 += 1, R159 += 1, R160 += 1 };
  s2 -> s2 [0, 65535] { R8120 += 1, R8027 += 1, R8028 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R8120 += 1, R8028 += 1, R158 += 1, R159 += 1 };
  s3 -> s4 [0, 65535] { R8120 += 1 };
  s3 -> s1 [0, 65535] { R8120 += 1, R8028 += 1, R159 += 1, R160 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R8120 += 1, R8028 += 1, R158 += 1, R159 += 1 };
  s4 -> s4 [0, 65535] { R8120 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R8120 += 1 };
  s6 -> s6 [0, 65535] { R8120 += 1, R8028 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R8122 += 1, R8030 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R8122 += 1, R8029 += 1, R8030 += 1 };
  s0 -> s3 [0, 65535] { R8122 += 1, R8030 += 1, R164 += 1, R165 += 1 };
  s0 -> s0 [0, 65535] { R8121 += 1, R8122 += 1 };
  s0 -> s4 [0, 65535] { R8122 += 1, R8030 += 1, R165 += 1, R166 += 1 };
  s0 -> s1 [76, 65535] { R8122 += 1, R8030 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R8122 += 1, R8030 += 1, R165 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R8122 += 1, R8030 += 1 };
  s1 -> s7 [0, 65535] { R8122 += 1 };
  s1 -> s1 [76, 65535] { R8122 += 1, R8030 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R8122 += 1, R8030 += 1, R165 += 1 };
  s2 -> s2 [0, 65535] { R8122 += 1, R8029 += 1, R8030 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R8122 += 1, R8030 += 1, R164 += 1, R165 += 1 };
  s2 -> s4 [0, 65535] { R8122 += 1, R8030 += 1, R165 += 1, R166 += 1 };
  s2 -> s1 [76, 65535] { R8122 += 1, R8030 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R8122 += 1, R8030 += 1, R165 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R8122 += 1, R8030 += 1, R164 += 1, R165 += 1 };
  s3 -> s7 [0, 65535] { R8122 += 1 };
  s3 -> s4 [0, 65535] { R8122 += 1, R8030 += 1, R165 += 1, R166 += 1 };
  s3 -> s1 [76, 65535] { R8122 += 1, R8030 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R8122 += 1, R8030 += 1, R165 += 1 };
  s4 -> s4 [0, 65535] { R8122 += 1, R8030 += 1, R165 += 1, R166 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R8122 += 1, R8030 += 1 };
  s4 -> s7 [0, 65535] { R8122 += 1 };
  s4 -> s1 [76, 65535] { R8122 += 1, R8030 += 1, R165 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R8122 += 1, R8030 += 1 };
  s6 -> s7 [0, 65535] { R8122 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R8122 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R8124 += 1, R8032 += 1, R172 += 1, R174 += 1 };
  s0 -> s0 [0, 65535] { R8123 += 1, R8124 += 1 };
  s0 -> s2 [0, 65535] { R8124 += 1, R8031 += 1, R8032 += 1 };
  s0 -> s3 [0, 65535] { R8124 += 1, R8032 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s4 [0, 65535] { R8124 += 1, R8032 += 1, R171 += 1, R172 += 1 };
  s0 -> s1 [76, 65535] { R8124 += 1, R8032 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R8124 += 1, R8032 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 65535] { R8124 += 1, R8032 += 1, R172 += 1 };
  s1 -> s7 [0, 65535] { R8124 += 1, R8032 += 1 };
  s1 -> s5 [0, 65535] { R8124 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [76, 65535] { R8124 += 1, R8032 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R8124 += 1, R8032 += 1, R172 += 1, R174 += 1 };
  s2 -> s2 [0, 65535] { R8124 += 1, R8031 += 1, R8032 += 1 };
  s2 -> s3 [0, 65535] { R8124 += 1, R8032 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s4 [0, 65535] { R8124 += 1, R8032 += 1, R171 += 1, R172 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [76, 65535] { R8124 += 1, R8032 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R8124 += 1, R8032 += 1, R172 += 1, R174 += 1 };
  s3 -> s7 [0, 65535] { R8124 += 1, R8032 += 1 };
  s3 -> s3 [0, 65535] { R8124 += 1, R8032 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s5 [0, 65535] { R8124 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [76, 65535] { R8124 += 1, R8032 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R8124 += 1, R8032 += 1, R172 += 1, R174 += 1 };
  s4 -> s3 [0, 65535] { R8124 += 1, R8032 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s4 [0, 65535] { R8124 += 1, R8032 += 1, R171 += 1, R172 += 1 };
  s4 -> s5 [0, 65535] { R8124 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s1 [76, 65535] { R8124 += 1, R8032 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535] { R8124 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R8124 += 1, R8032 += 1 };
  s7 -> s5 [0, 65535] { R8124 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R8126 += 1, R8033 += 1, R8034 += 1 };
  s0 -> s0 [0, 65535] { R8125 += 1, R8126 += 1 };
  s0 -> s2 [0, 65535] { R8126 += 1, R8034 += 1, R181 += 1 };
  s0 -> s3 [0, 65535] { R8126 += 1, R8034 += 1 };
  s1 -> s1 [0, 65535] { R8126 += 1, R8033 += 1, R8034 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R8126 += 1, R8034 += 1, R181 += 1 };
  s1 -> s3 [0, 65535] { R8126 += 1, R8034 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R8126 += 1 };
  s2 -> s2 [0, 65535] { R8126 += 1, R8034 += 1, R181 += 1 };
  s2 -> s3 [0, 65535] { R8126 += 1, R8034 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R8126 += 1 };
  s3 -> s3 [0, 65535] { R8126 += 1, R8034 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R8126 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 65535] { R8128 += 1, R8035 += 1, R8036 += 1 };
  s0 -> s2 [0, 65535] { R8128 += 1, R8036 += 1, R7357 += 1, R7358 += 1 };
  s0 -> s0 [0, 65535] { R8127 += 1, R8128 += 1 };
  s0 -> s3 [0, 65535] { R8128 += 1, R8036 += 1, R7358 += 1, R7359 += 1, R7360 += 1 };
  s0 -> s4 [0, 65535] { R8128 += 1, R8036 += 1, R7358 += 1, R7360 += 1 };
  s1 -> s1 [0, 65535] { R8128 += 1, R8035 += 1, R8036 += 1 };
  s1 -> s2 [0, 65535] { R8128 += 1, R8036 += 1, R7357 += 1, R7358 += 1 };
  s1 -> s3 [0, 65535] { R8128 += 1, R8036 += 1, R7358 += 1, R7359 += 1, R7360 += 1 };
  s1 -> s4 [0, 65535] { R8128 += 1, R8036 += 1, R7358 += 1, R7360 += 1 };
  s1 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R8128 += 1, R8036 += 1, R7357 += 1, R7358 += 1 };
  s2 -> s3 [0, 65535] { R8128 += 1, R8036 += 1, R7358 += 1, R7359 += 1, R7360 += 1 };
  s2 -> s7 [0, 65535] { R8128 += 1 };
  s2 -> s4 [0, 65535] { R8128 += 1, R8036 += 1, R7358 += 1, R7360 += 1 };
  s2 -> s8 [0, 65535];
  s3 -> s6 [0, 65535] { R8128 += 1, R8036 += 1 };
  s3 -> s3 [0, 65535] { R8128 += 1, R8036 += 1, R7358 += 1, R7359 += 1, R7360 += 1 };
  s3 -> s7 [0, 65535] { R8128 += 1 };
  s3 -> s4 [0, 65535] { R8128 += 1, R8036 += 1, R7358 += 1, R7360 += 1 };
  s3 -> s8 [0, 65535];
  s4 -> s5 [0, 65535] { R8128 += 1, R8036 += 1, R7358 += 1 };
  s4 -> s6 [0, 65535] { R8128 += 1, R8036 += 1 };
  s4 -> s7 [0, 65535] { R8128 += 1 };
  s4 -> s4 [0, 65535] { R8128 += 1, R8036 += 1, R7358 += 1, R7360 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R8128 += 1, R8036 += 1, R7358 += 1 };
  s5 -> s6 [0, 65535] { R8128 += 1, R8036 += 1 };
  s5 -> s7 [0, 65535] { R8128 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R8128 += 1, R8036 += 1 };
  s6 -> s7 [0, 65535] { R8128 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R8128 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R8130 += 1, R8038 += 1, R7367 += 1, R7369 += 1, R7370 += 1 };
  s0 -> s2 [0, 65535] { R8130 += 1, R8038 += 1, R7367 += 1 };
  s0 -> s3 [0, 65535] { R8130 += 1, R8038 += 1 };
  s0 -> s0 [0, 65535] { R8129 += 1, R8130 += 1 };
  s0 -> s4 [0, 65535] { R8130 += 1, R8037 += 1, R8038 += 1 };
  s1 -> s6 [0, 65535] { R8130 += 1 };
  s1 -> s1 [0, 65535] { R8130 += 1, R8038 += 1, R7367 += 1, R7369 += 1, R7370 += 1 };
  s1 -> s2 [0, 65535] { R8130 += 1, R8038 += 1, R7367 += 1 };
  s1 -> s3 [0, 65535] { R8130 += 1, R8038 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R8130 += 1 };
  s2 -> s2 [0, 65535] { R8130 += 1, R8038 += 1, R7367 += 1 };
  s2 -> s3 [0, 65535] { R8130 += 1, R8038 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R8130 += 1 };
  s3 -> s3 [0, 65535] { R8130 += 1, R8038 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R8130 += 1, R8038 += 1, R7367 += 1, R7369 += 1, R7370 += 1 };
  s4 -> s2 [0, 65535] { R8130 += 1, R8038 += 1, R7367 += 1 };
  s4 -> s3 [0, 65535] { R8130 += 1, R8038 += 1 };
  s4 -> s4 [0, 65535] { R8130 += 1, R8037 += 1, R8038 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R8130 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 65535] { R8132 += 1, R8040 += 1 };
  s0 -> s2 [0, 65535] { R8132 += 1, R8039 += 1, R8040 += 1 };
  s0 -> s0 [0, 65535] { R8131 += 1, R8132 += 1 };
  s0 -> s3 [0, 65535] { R8132 += 1, R8040 += 1, R8008 += 1 };
  s1 -> s1 [0, 65535] { R8132 += 1, R8040 += 1 };
  s1 -> s4 [0, 65535] { R8132 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R8132 += 1, R8040 += 1 };
  s2 -> s2 [0, 65535] { R8132 += 1, R8039 += 1, R8040 += 1 };
  s2 -> s3 [0, 65535] { R8132 += 1, R8040 += 1, R8008 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R8132 += 1, R8040 += 1 };
  s3 -> s4 [0, 65535] { R8132 += 1 };
  s3 -> s3 [0, 65535] { R8132 += 1, R8040 += 1, R8008 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R8132 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s0 [0, 65535] { R8133 += 1, R8134 += 1 };
  s0 -> s1 [0, 65535] { R8134 += 1, R8069 += 1, R8070 += 1 };
  s0 -> s2 [0, 65535] { R8134 += 1, R8070 += 1, R23 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R8134 += 1, R8069 += 1, R8070 += 1 };
  s1 -> s2 [0, 65535] { R8134 += 1, R8070 += 1, R23 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R8134 += 1 };
  s2 -> s2 [0, 65535] { R8134 += 1, R8070 += 1, R23 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R8134 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R8136 += 1, R8072 += 1 };
  s0 -> s0 [0, 65535] { R8135 += 1, R8136 += 1 };
  s0 -> s2 [0, 65535] { R8136 += 1, R8071 += 1, R8072 += 1 };
  s0 -> s3 [70, 70] { R8136 += 1, R8072 += 1 };
  s0 -> s4 [70, 70] { R8136 += 1, R8072 += 1 };
  s0 -> s5 [75, 75] { R8136 += 1, R8072 += 1 };
  s0 -> s1 [76, 65535] { R8136 += 1, R8072 += 1 };
  s1 -> s1 [0, 69] { R8136 += 1, R8072 += 1 };
  s1 -> s3 [70, 70] { R8136 += 1, R8072 += 1 };
  s1 -> s4 [70, 70] { R8136 += 1, R8072 += 1 };
  s1 -> s5 [75, 75] { R8136 += 1, R8072 += 1 };
  s1 -> s1 [76, 65535] { R8136 += 1, R8072 += 1 };
  s2 -> s1 [0, 69] { R8136 += 1, R8072 += 1 };
  s2 -> s2 [0, 65535] { R8136 += 1, R8071 += 1, R8072 += 1 };
  s2 -> s3 [70, 70] { R8136 += 1, R8072 += 1 };
  s2 -> s4 [70, 70] { R8136 += 1, R8072 += 1 };
  s2 -> s5 [75, 75] { R8136 += 1, R8072 += 1 };
  s2 -> s1 [76, 65535] { R8136 += 1, R8072 += 1 };
  s4 -> s4 [0, 70] { R8136 += 1, R8072 += 1 };
  s4 -> s8 [75, 75] { R8136 += 1, R8072 += 1 };
  s4 -> s4 [76, 65535] { R8136 += 1, R8072 += 1 };
  s5 -> s5 [0, 69] { R8136 += 1, R8072 += 1 };
  s5 -> s5 [0, 65535] { R8136 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R8136 += 1, R8072 += 1 };
  s5 -> s8 [70, 70] { R8136 += 1, R8072 += 1 };
  s5 -> s5 [75, 65535] { R8136 += 1, R8072 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R8136 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 70] { R8136 += 1, R8072 += 1 };
  s8 -> s8 [0, 65535] { R8136 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [75, 65535] { R8136 += 1, R8072 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R8138 += 1, R8074 += 1, R137 += 1 };
  s0 -> s0 [0, 65535] { R8137 += 1, R8138 += 1 };
  s0 -> s2 [0, 65535] { R8138 += 1, R8073 += 1, R8074 += 1 };
  s0 -> s3 [70, 70] { R8138 += 1, R8074 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R8138 += 1, R8074 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R8138 += 1, R8074 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R8138 += 1, R8074 += 1, R137 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R8138 += 1 };
  s1 -> s3 [70, 70] { R8138 += 1, R8074 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R8138 += 1, R8074 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R8138 += 1, R8074 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R8138 += 1, R8074 += 1, R137 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R8138 += 1, R8073 += 1, R8074 += 1 };
  s2 -> s3 [70, 70] { R8138 += 1, R8074 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R8138 += 1, R8074 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R8138 += 1, R8074 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R8138 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R8138 += 1 };
  s4 -> s4 [0, 65535] { R8138 += 1, R8074 += 1, R137 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R8138 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R8140 += 1, R8076 += 1, R139 += 1 };
  s0 -> s0 [0, 65535] { R8139 += 1, R8140 += 1 };
  s0 -> s2 [0, 65535] { R8140 += 1, R8075 += 1, R8076 += 1 };
  s0 -> s3 [70, 70] { R8140 += 1, R8076 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R8140 += 1, R8076 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R8140 += 1, R8076 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R8140 += 1, R8076 += 1, R139 += 1 };
  s1 -> s1 [0, 65535] { R8140 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R8140 += 1, R8076 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R8140 += 1, R8076 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R8140 += 1, R8076 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R8140 += 1, R8076 += 1, R139 += 1 };
  s2 -> s2 [0, 65535] { R8140 += 1, R8075 += 1, R8076 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R8140 += 1, R8076 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R8140 += 1, R8076 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R8140 += 1, R8076 += 1, R139 += 1 };
  s3 -> s3 [0, 65535] { R8140 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R8140 += 1 };
  s4 -> s4 [0, 65535] { R8140 += 1, R8076 += 1, R139 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R8140 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R8142 += 1, R8078 += 1, R141 += 1, R142 += 1 };
  s0 -> s0 [0, 65535] { R8141 += 1, R8142 += 1 };
  s0 -> s2 [0, 65535] { R8142 += 1, R8077 += 1, R8078 += 1 };
  s0 -> s3 [70, 70] { R8142 += 1, R8078 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R8142 += 1, R8078 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R8142 += 1, R8078 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R8142 += 1, R8078 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 65535] { R8142 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R8142 += 1, R8078 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R8142 += 1, R8078 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R8142 += 1, R8078 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R8142 += 1, R8078 += 1, R141 += 1, R142 += 1 };
  s2 -> s2 [0, 65535] { R8142 += 1, R8077 += 1, R8078 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R8142 += 1, R8078 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R8142 += 1, R8078 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R8142 += 1, R8078 += 1, R141 += 1, R142 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R8142 += 1 };
  s3 -> s3 [0, 65535] { R8142 += 1, R8078 += 1, R141 += 1, R142 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R8142 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R8142 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R8144 += 1, R8080 += 1, R147 += 1, R148 += 1 };
  s0 -> s2 [0, 65535] { R8144 += 1, R8079 += 1, R8080 += 1 };
  s0 -> s0 [0, 65535] { R8143 += 1, R8144 += 1 };
  s0 -> s3 [70, 70] { R8144 += 1, R8080 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R8144 += 1, R8080 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R8144 += 1, R8080 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R8144 += 1, R8080 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 65535] { R8144 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R8144 += 1, R8080 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R8144 += 1, R8080 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R8144 += 1, R8080 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R8144 += 1, R8080 += 1, R147 += 1, R148 += 1 };
  s2 -> s2 [0, 65535] { R8144 += 1, R8079 += 1, R8080 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R8144 += 1, R8080 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R8144 += 1, R8080 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R8144 += 1, R8080 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R8144 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R8144 += 1, R8080 += 1, R147 += 1, R148 += 1 };
  s4 -> s6 [0, 65535] { R8144 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R8144 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R8146 += 1, R8082 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R8146 += 1, R8082 += 1, R151 += 1, R152 += 1 };
  s0 -> s3 [0, 65535] { R8146 += 1, R8081 += 1, R8082 += 1 };
  s0 -> s0 [0, 65535] { R8145 += 1, R8146 += 1 };
  s0 -> s4 [70, 70] { R8146 += 1, R8082 += 1, R151 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R8146 += 1, R8082 += 1, R151 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R8146 += 1, R8082 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R8146 += 1, R8082 += 1, R152 += 1 };
  s0 -> s1 [71, 74] { R8146 += 1, R8082 += 1, R152 += 1 };
  s0 -> s2 [71, 65535] { R8146 += 1, R8082 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R8146 += 1, R8082 += 1, R152 += 1 };
  s0 -> s1 [76, 65535] { R8146 += 1, R8082 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R8146 += 1, R8082 += 1, R152 += 1 };
  s1 -> s6 [70, 70] { R8146 += 1, R8082 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R8146 += 1, R8082 += 1, R152 += 1 };
  s1 -> s1 [71, 74] { R8146 += 1, R8082 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R8146 += 1, R8082 += 1, R152 += 1 };
  s1 -> s1 [76, 65535] { R8146 += 1, R8082 += 1, R152 += 1 };
  s2 -> s1 [0, 69] { R8146 += 1, R8082 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R8146 += 1, R8082 += 1, R151 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R8146 += 1, R8082 += 1, R151 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R8146 += 1, R8082 += 1, R151 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R8146 += 1, R8082 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R8146 += 1, R8082 += 1, R152 += 1 };
  s2 -> s1 [71, 74] { R8146 += 1, R8082 += 1, R152 += 1 };
  s2 -> s2 [71, 65535] { R8146 += 1, R8082 += 1, R151 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R8146 += 1, R8082 += 1, R152 += 1 };
  s2 -> s1 [76, 65535] { R8146 += 1, R8082 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R8146 += 1, R8082 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R8146 += 1, R8082 += 1, R151 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R8146 += 1, R8081 += 1, R8082 += 1 };
  s3 -> s4 [70, 70] { R8146 += 1, R8082 += 1, R151 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R8146 += 1, R8082 += 1, R151 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R8146 += 1, R8082 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R8146 += 1, R8082 += 1, R152 += 1 };
  s3 -> s1 [71, 74] { R8146 += 1, R8082 += 1, R152 += 1 };
  s3 -> s2 [71, 65535] { R8146 += 1, R8082 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R8146 += 1, R8082 += 1, R152 += 1 };
  s3 -> s1 [76, 65535] { R8146 += 1, R8082 += 1, R152 += 1 };
  s4 -> s6 [0, 74] { R8146 += 1, R8082 += 1, R152 += 1 };
  s4 -> s4 [0, 65535] { R8146 += 1, R8082 += 1, R151 += 1, R152 += 1 };
  s4 -> s10 [75, 75] { R8146 += 1, R8082 += 1, R152 += 1 };
  s4 -> s6 [76, 65535] { R8146 += 1, R8082 += 1, R152 += 1 };
  s6 -> s6 [0, 74] { R8146 += 1, R8082 += 1, R152 += 1 };
  s6 -> s10 [75, 75] { R8146 += 1, R8082 += 1, R152 += 1 };
  s6 -> s6 [76, 65535] { R8146 += 1, R8082 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R8146 += 1, R8082 += 1, R152 += 1 };
  s8 -> s8 [0, 65535] { R8146 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R8146 += 1, R8082 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R8146 += 1, R8082 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R8146 += 1, R8082 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R8146 += 1, R8082 += 1, R152 += 1 };
  s10 -> s12 [0, 65535] { R8146 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R8146 += 1 };
  s12 -> s12 [0, 65535] { R8146 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R8148 += 1, R8084 += 1, R155 += 1, R156 += 1 };
  s0 -> s0 [0, 65535] { R8147 += 1, R8148 += 1 };
  s0 -> s2 [0, 65535] { R8148 += 1, R8083 += 1, R8084 += 1 };
  s0 -> s3 [70, 70] { R8148 += 1, R8084 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R8148 += 1, R8084 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R8148 += 1, R8084 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R8148 += 1, R8084 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 65535] { R8148 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R8148 += 1, R8084 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R8148 += 1, R8084 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R8148 += 1, R8084 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R8148 += 1, R8084 += 1, R155 += 1, R156 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R8148 += 1, R8083 += 1, R8084 += 1 };
  s2 -> s3 [70, 70] { R8148 += 1, R8084 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R8148 += 1, R8084 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R8148 += 1, R8084 += 1, R155 += 1, R156 += 1 };
  s3 -> s3 [0, 65535] { R8148 += 1, R8084 += 1, R155 += 1, R156 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R8148 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R8148 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R8148 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R8150 += 1, R8086 += 1, R161 += 1, R162 += 1 };
  s0 -> s2 [0, 65535] { R8150 += 1, R8085 += 1, R8086 += 1 };
  s0 -> s0 [0, 65535] { R8149 += 1, R8150 += 1 };
  s0 -> s3 [70, 70] { R8150 += 1, R8086 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R8150 += 1, R8086 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R8150 += 1, R8086 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R8150 += 1, R8086 += 1, R161 += 1, R162 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R8150 += 1 };
  s1 -> s3 [70, 70] { R8150 += 1, R8086 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R8150 += 1, R8086 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R8150 += 1, R8086 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R8150 += 1, R8086 += 1, R161 += 1, R162 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R8150 += 1, R8085 += 1, R8086 += 1 };
  s2 -> s3 [70, 70] { R8150 += 1, R8086 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R8150 += 1, R8086 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R8150 += 1, R8086 += 1, R161 += 1, R162 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R8150 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R8150 += 1, R8086 += 1, R161 += 1, R162 += 1 };
  s4 -> s6 [0, 65535] { R8150 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R8150 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R8152 += 1, R8088 += 1, R167 += 1, R168 += 1 };
  s0 -> s2 [0, 65535] { R8152 += 1, R8087 += 1, R8088 += 1 };
  s0 -> s0 [0, 65535] { R8151 += 1, R8152 += 1 };
  s0 -> s3 [70, 70] { R8152 += 1, R8088 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R8152 += 1, R8088 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R8152 += 1, R8088 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R8152 += 1, R8088 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 65535] { R8152 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R8152 += 1, R8088 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R8152 += 1, R8088 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R8152 += 1, R8088 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R8152 += 1, R8088 += 1, R167 += 1, R168 += 1 };
  s2 -> s2 [0, 65535] { R8152 += 1, R8087 += 1, R8088 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R8152 += 1, R8088 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R8152 += 1, R8088 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R8152 += 1, R8088 += 1, R167 += 1, R168 += 1 };
  s3 -> s3 [0, 65535] { R8152 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R8152 += 1, R8088 += 1, R167 += 1, R168 += 1 };
  s4 -> s5 [0, 65535] { R8152 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R8152 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R8154 += 1, R8090 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s2 [0, 69] { R8154 += 1, R8090 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s3 [0, 69] { R8154 += 1, R8090 += 1, R175 += 1, R176 += 1 };
  s0 -> s4 [0, 65535] { R8154 += 1, R8089 += 1, R8090 += 1 };
  s0 -> s0 [0, 65535] { R8153 += 1, R8154 += 1 };
  s0 -> s5 [70, 70] { R8154 += 1, R8090 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s6 [70, 70] { R8154 += 1, R8090 += 1, R175 += 1, R176 += 1 };
  s0 -> s7 [70, 70] { R8154 += 1, R8090 += 1, R175 += 1, R176 += 1 };
  s0 -> s8 [70, 70] { R8154 += 1, R8090 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s9 [70, 70] { R8154 += 1, R8090 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s10 [70, 70] { R8154 += 1, R8090 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s1 [71, 65535] { R8154 += 1, R8090 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s2 [71, 65535] { R8154 += 1, R8090 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s3 [71, 65535] { R8154 += 1, R8090 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [0, 69] { R8154 += 1, R8090 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s2 [0, 69] { R8154 += 1, R8090 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s5 [70, 70] { R8154 += 1, R8090 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s8 [70, 70] { R8154 += 1, R8090 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s9 [70, 70] { R8154 += 1, R8090 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s10 [70, 70] { R8154 += 1, R8090 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s1 [71, 65535] { R8154 += 1, R8090 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s2 [71, 65535] { R8154 += 1, R8090 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [0, 69] { R8154 += 1, R8090 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s14 [0, 69] { R8154 += 1, R8090 += 1, R176 += 1 };
  s2 -> s11 [70, 70] { R8154 += 1, R8090 += 1, R176 += 1 };
  s2 -> s15 [70, 70] { R8154 += 1, R8090 += 1, R176 += 1 };
  s2 -> s8 [70, 70] { R8154 += 1, R8090 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s9 [70, 70] { R8154 += 1, R8090 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [71, 65535] { R8154 += 1, R8090 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s14 [71, 65535] { R8154 += 1, R8090 += 1, R176 += 1 };
  s3 -> s1 [0, 69] { R8154 += 1, R8090 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s2 [0, 69] { R8154 += 1, R8090 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [0, 69] { R8154 += 1, R8090 += 1, R175 += 1, R176 += 1 };
  s3 -> s5 [70, 70] { R8154 += 1, R8090 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s6 [70, 70] { R8154 += 1, R8090 += 1, R175 += 1, R176 += 1 };
  s3 -> s7 [70, 70] { R8154 += 1, R8090 += 1, R175 += 1, R176 += 1 };
  s3 -> s8 [70, 70] { R8154 += 1, R8090 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s9 [70, 70] { R8154 += 1, R8090 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s10 [70, 70] { R8154 += 1, R8090 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s1 [71, 65535] { R8154 += 1, R8090 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s2 [71, 65535] { R8154 += 1, R8090 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [71, 65535] { R8154 += 1, R8090 += 1, R175 += 1, R176 += 1 };
  s4 -> s1 [0, 69] { R8154 += 1, R8090 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s2 [0, 69] { R8154 += 1, R8090 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s3 [0, 69] { R8154 += 1, R8090 += 1, R175 += 1, R176 += 1 };
  s4 -> s4 [0, 65535] { R8154 += 1, R8089 += 1, R8090 += 1 };
  s4 -> s5 [70, 70] { R8154 += 1, R8090 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s6 [70, 70] { R8154 += 1, R8090 += 1, R175 += 1, R176 += 1 };
  s4 -> s7 [70, 70] { R8154 += 1, R8090 += 1, R175 += 1, R176 += 1 };
  s4 -> s8 [70, 70] { R8154 += 1, R8090 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s9 [70, 70] { R8154 += 1, R8090 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s10 [70, 70] { R8154 += 1, R8090 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s1 [71, 65535] { R8154 += 1, R8090 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s2 [71, 65535] { R8154 += 1, R8090 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s3 [71, 65535] { R8154 += 1, R8090 += 1, R175 += 1, R176 += 1 };
  s6 -> s6 [0, 65535] { R8154 += 1, R8090 += 1, R175 += 1, R176 += 1 };
  s6 -> s8 [0, 65535] { R8154 += 1, R8090 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s6 -> s10 [0, 65535] { R8154 += 1, R8090 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s8 -> s11 [0, 65535] { R8154 += 1, R8090 += 1, R176 += 1 };
  s8 -> s8 [0, 65535] { R8154 += 1, R8090 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s10 -> s8 [0, 65535] { R8154 += 1, R8090 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s10 -> s10 [0, 65535] { R8154 += 1, R8090 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s11 -> s11 [0, 65535] { R8154 += 1, R8090 += 1, R176 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [0, 65535] { R8154 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R8154 += 1 };
  s14 -> s14 [0, 69] { R8154 += 1, R8090 += 1, R176 += 1 };
  s14 -> s14 [0, 65535] { R8154 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s11 [70, 70] { R8154 += 1, R8090 += 1, R176 += 1 };
  s14 -> s15 [70, 70] { R8154 += 1, R8090 += 1, R176 += 1 };
  s14 -> s14 [71, 65535] { R8154 += 1, R8090 += 1, R176 += 1 };
  s15 -> s15 [0, 65535] { R8154 += 1 };
  s15 -> s12 [0, 65535];
  accepting s12, s13, s14, s15, s11;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R8156 += 1, R8092 += 1, R7353 += 1, R7354 += 1 };
  s0 -> s0 [0, 65535] { R8155 += 1, R8156 += 1 };
  s0 -> s2 [0, 65535] { R8156 += 1, R8091 += 1, R8092 += 1 };
  s0 -> s3 [70, 70] { R8156 += 1, R8092 += 1, R7353 += 1, R7354 += 1 };
  s0 -> s4 [70, 70] { R8156 += 1, R8092 += 1, R7353 += 1, R7354 += 1 };
  s0 -> s1 [71, 65535] { R8156 += 1, R8092 += 1, R7353 += 1, R7354 += 1 };
  s1 -> s1 [0, 69] { R8156 += 1, R8092 += 1, R7353 += 1, R7354 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R8156 += 1 };
  s1 -> s3 [70, 70] { R8156 += 1, R8092 += 1, R7353 += 1, R7354 += 1 };
  s1 -> s4 [70, 70] { R8156 += 1, R8092 += 1, R7353 += 1, R7354 += 1 };
  s1 -> s1 [71, 65535] { R8156 += 1, R8092 += 1, R7353 += 1, R7354 += 1 };
  s2 -> s1 [0, 69] { R8156 += 1, R8092 += 1, R7353 += 1, R7354 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R8156 += 1, R8091 += 1, R8092 += 1 };
  s2 -> s3 [70, 70] { R8156 += 1, R8092 += 1, R7353 += 1, R7354 += 1 };
  s2 -> s4 [70, 70] { R8156 += 1, R8092 += 1, R7353 += 1, R7354 += 1 };
  s2 -> s1 [71, 65535] { R8156 += 1, R8092 += 1, R7353 += 1, R7354 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R8156 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R8156 += 1 };
  s4 -> s4 [0, 65535] { R8156 += 1, R8092 += 1, R7353 += 1, R7354 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R8156 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R8158 += 1, R8094 += 1, R7362 += 1, R7363 += 1, R7364 += 1 };
  s0 -> s2 [0, 69] { R8158 += 1, R8094 += 1, R7362 += 1, R7364 += 1, R7365 += 1 };
  s0 -> s3 [0, 69] { R8158 += 1, R8094 += 1, R7361 += 1, R7362 += 1 };
  s0 -> s4 [0, 65535] { R8158 += 1, R8093 += 1, R8094 += 1 };
  s0 -> s0 [0, 65535] { R8157 += 1, R8158 += 1 };
  s0 -> s5 [70, 70] { R8158 += 1, R8094 += 1, R7362 += 1, R7364 += 1, R7365 += 1 };
  s0 -> s6 [70, 70] { R8158 += 1, R8094 += 1, R7362 += 1, R7363 += 1, R7364 += 1 };
  s0 -> s7 [70, 70] { R8158 += 1, R8094 += 1, R7361 += 1, R7362 += 1 };
  s0 -> s8 [70, 70] { R8158 += 1, R8094 += 1, R7362 += 1, R7363 += 1, R7364 += 1 };
  s0 -> s9 [70, 70] { R8158 += 1, R8094 += 1, R7361 += 1, R7362 += 1 };
  s0 -> s10 [70, 70] { R8158 += 1, R8094 += 1, R7362 += 1, R7364 += 1, R7365 += 1 };
  s0 -> s1 [71, 65535] { R8158 += 1, R8094 += 1, R7362 += 1, R7363 += 1, R7364 += 1 };
  s0 -> s2 [71, 65535] { R8158 += 1, R8094 += 1, R7362 += 1, R7364 += 1, R7365 += 1 };
  s0 -> s3 [71, 65535] { R8158 += 1, R8094 += 1, R7361 += 1, R7362 += 1 };
  s1 -> s1 [0, 69] { R8158 += 1, R8094 += 1, R7362 += 1, R7363 += 1, R7364 += 1 };
  s1 -> s2 [0, 69] { R8158 += 1, R8094 += 1, R7362 += 1, R7364 += 1, R7365 += 1 };
  s1 -> s5 [70, 70] { R8158 += 1, R8094 += 1, R7362 += 1, R7364 += 1, R7365 += 1 };
  s1 -> s6 [70, 70] { R8158 += 1, R8094 += 1, R7362 += 1, R7363 += 1, R7364 += 1 };
  s1 -> s8 [70, 70] { R8158 += 1, R8094 += 1, R7362 += 1, R7363 += 1, R7364 += 1 };
  s1 -> s10 [70, 70] { R8158 += 1, R8094 += 1, R7362 += 1, R7364 += 1, R7365 += 1 };
  s1 -> s1 [71, 65535] { R8158 += 1, R8094 += 1, R7362 += 1, R7363 += 1, R7364 += 1 };
  s1 -> s2 [71, 65535] { R8158 += 1, R8094 += 1, R7362 += 1, R7364 += 1, R7365 += 1 };
  s2 -> s2 [0, 69] { R8158 += 1, R8094 += 1, R7362 += 1, R7364 += 1, R7365 += 1 };
  s2 -> s11 [0, 65535];
  s2 -> s2 [0, 65535] { R8158 += 1 };
  s2 -> s5 [70, 70] { R8158 += 1, R8094 += 1, R7362 += 1, R7364 += 1, R7365 += 1 };
  s2 -> s10 [70, 70] { R8158 += 1, R8094 += 1, R7362 += 1, R7364 += 1, R7365 += 1 };
  s2 -> s2 [71, 65535] { R8158 += 1, R8094 += 1, R7362 += 1, R7364 += 1, R7365 += 1 };
  s3 -> s1 [0, 69] { R8158 += 1, R8094 += 1, R7362 += 1, R7363 += 1, R7364 += 1 };
  s3 -> s2 [0, 69] { R8158 += 1, R8094 += 1, R7362 += 1, R7364 += 1, R7365 += 1 };
  s3 -> s3 [0, 69] { R8158 += 1, R8094 += 1, R7361 += 1, R7362 += 1 };
  s3 -> s5 [70, 70] { R8158 += 1, R8094 += 1, R7362 += 1, R7364 += 1, R7365 += 1 };
  s3 -> s6 [70, 70] { R8158 += 1, R8094 += 1, R7362 += 1, R7363 += 1, R7364 += 1 };
  s3 -> s7 [70, 70] { R8158 += 1, R8094 += 1, R7361 += 1, R7362 += 1 };
  s3 -> s8 [70, 70] { R8158 += 1, R8094 += 1, R7362 += 1, R7363 += 1, R7364 += 1 };
  s3 -> s9 [70, 70] { R8158 += 1, R8094 += 1, R7361 += 1, R7362 += 1 };
  s3 -> s10 [70, 70] { R8158 += 1, R8094 += 1, R7362 += 1, R7364 += 1, R7365 += 1 };
  s3 -> s1 [71, 65535] { R8158 += 1, R8094 += 1, R7362 += 1, R7363 += 1, R7364 += 1 };
  s3 -> s2 [71, 65535] { R8158 += 1, R8094 += 1, R7362 += 1, R7364 += 1, R7365 += 1 };
  s3 -> s3 [71, 65535] { R8158 += 1, R8094 += 1, R7361 += 1, R7362 += 1 };
  s4 -> s1 [0, 69] { R8158 += 1, R8094 += 1, R7362 += 1, R7363 += 1, R7364 += 1 };
  s4 -> s2 [0, 69] { R8158 += 1, R8094 += 1, R7362 += 1, R7364 += 1, R7365 += 1 };
  s4 -> s3 [0, 69] { R8158 += 1, R8094 += 1, R7361 += 1, R7362 += 1 };
  s4 -> s4 [0, 65535] { R8158 += 1, R8093 += 1, R8094 += 1 };
  s4 -> s5 [70, 70] { R8158 += 1, R8094 += 1, R7362 += 1, R7364 += 1, R7365 += 1 };
  s4 -> s6 [70, 70] { R8158 += 1, R8094 += 1, R7362 += 1, R7363 += 1, R7364 += 1 };
  s4 -> s7 [70, 70] { R8158 += 1, R8094 += 1, R7361 += 1, R7362 += 1 };
  s4 -> s8 [70, 70] { R8158 += 1, R8094 += 1, R7362 += 1, R7363 += 1, R7364 += 1 };
  s4 -> s9 [70, 70] { R8158 += 1, R8094 += 1, R7361 += 1, R7362 += 1 };
  s4 -> s10 [70, 70] { R8158 += 1, R8094 += 1, R7362 += 1, R7364 += 1, R7365 += 1 };
  s4 -> s1 [71, 65535] { R8158 += 1, R8094 += 1, R7362 += 1, R7363 += 1, R7364 += 1 };
  s4 -> s2 [71, 65535] { R8158 += 1, R8094 += 1, R7362 += 1, R7364 += 1, R7365 += 1 };
  s4 -> s3 [71, 65535] { R8158 += 1, R8094 += 1, R7361 += 1, R7362 += 1 };
  s5 -> s5 [0, 65535] { R8158 += 1, R8094 += 1, R7362 += 1, R7364 += 1, R7365 += 1 };
  s5 -> s12 [0, 65535] { R8158 += 1 };
  s5 -> s11 [0, 65535];
  s8 -> s5 [0, 65535] { R8158 += 1, R8094 += 1, R7362 += 1, R7364 += 1, R7365 += 1 };
  s8 -> s8 [0, 65535] { R8158 += 1, R8094 += 1, R7362 += 1, R7363 += 1, R7364 += 1 };
  s9 -> s5 [0, 65535] { R8158 += 1, R8094 += 1, R7362 += 1, R7364 += 1, R7365 += 1 };
  s9 -> s8 [0, 65535] { R8158 += 1, R8094 += 1, R7362 += 1, R7363 += 1, R7364 += 1 };
  s9 -> s9 [0, 65535] { R8158 += 1, R8094 += 1, R7361 += 1, R7362 += 1 };
  s10 -> s11 [0, 65535];
  s10 -> s10 [0, 65535] { R8158 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R8158 += 1 };
  s12 -> s11 [0, 65535];
  accepting s12, s5, s2, s10, s11;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R8160 += 1, R8096 += 1, R8003 += 1, R8004 += 1 };
  s0 -> s2 [0, 69] { R8160 += 1, R8096 += 1, R8004 += 1, R8005 += 1, R8006 += 1 };
  s0 -> s3 [0, 69] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s0 -> s0 [0, 65535] { R8159 += 1, R8160 += 1 };
  s0 -> s4 [0, 65535] { R8160 += 1, R8095 += 1, R8096 += 1 };
  s0 -> s5 [70, 70] { R8160 += 1, R8096 += 1, R8004 += 1, R8005 += 1, R8006 += 1 };
  s0 -> s6 [70, 70] { R8160 += 1, R8096 += 1, R8004 += 1, R8005 += 1, R8006 += 1 };
  s0 -> s7 [70, 70] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s0 -> s8 [70, 70] { R8160 += 1, R8096 += 1, R8003 += 1, R8004 += 1 };
  s0 -> s9 [70, 70] { R8160 += 1, R8096 += 1, R8003 += 1, R8004 += 1 };
  s0 -> s10 [70, 70] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s0 -> s3 [71, 74] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s0 -> s1 [71, 65535] { R8160 += 1, R8096 += 1, R8003 += 1, R8004 += 1 };
  s0 -> s2 [71, 65535] { R8160 += 1, R8096 += 1, R8004 += 1, R8005 += 1, R8006 += 1 };
  s0 -> s11 [75, 75] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s0 -> s12 [76, 76] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s0 -> s3 [77, 65535] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s1 -> s1 [0, 69] { R8160 += 1, R8096 += 1, R8003 += 1, R8004 += 1 };
  s1 -> s2 [0, 69] { R8160 += 1, R8096 += 1, R8004 += 1, R8005 += 1, R8006 += 1 };
  s1 -> s3 [0, 69] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s1 -> s5 [70, 70] { R8160 += 1, R8096 += 1, R8004 += 1, R8005 += 1, R8006 += 1 };
  s1 -> s6 [70, 70] { R8160 += 1, R8096 += 1, R8004 += 1, R8005 += 1, R8006 += 1 };
  s1 -> s7 [70, 70] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s1 -> s8 [70, 70] { R8160 += 1, R8096 += 1, R8003 += 1, R8004 += 1 };
  s1 -> s9 [70, 70] { R8160 += 1, R8096 += 1, R8003 += 1, R8004 += 1 };
  s1 -> s10 [70, 70] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s1 -> s3 [71, 74] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s1 -> s1 [71, 65535] { R8160 += 1, R8096 += 1, R8003 += 1, R8004 += 1 };
  s1 -> s2 [71, 65535] { R8160 += 1, R8096 += 1, R8004 += 1, R8005 += 1, R8006 += 1 };
  s1 -> s11 [75, 75] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s1 -> s12 [76, 76] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s1 -> s3 [77, 65535] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s2 -> s2 [0, 69] { R8160 += 1, R8096 += 1, R8004 += 1, R8005 += 1, R8006 += 1 };
  s2 -> s3 [0, 69] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s2 -> s5 [70, 70] { R8160 += 1, R8096 += 1, R8004 += 1, R8005 += 1, R8006 += 1 };
  s2 -> s6 [70, 70] { R8160 += 1, R8096 += 1, R8004 += 1, R8005 += 1, R8006 += 1 };
  s2 -> s7 [70, 70] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s2 -> s10 [70, 70] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s2 -> s3 [71, 74] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s2 -> s2 [71, 65535] { R8160 += 1, R8096 += 1, R8004 += 1, R8005 += 1, R8006 += 1 };
  s2 -> s11 [75, 75] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s2 -> s12 [76, 76] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s2 -> s3 [77, 65535] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s3 -> s3 [0, 69] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s3 -> s7 [70, 70] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s3 -> s10 [70, 70] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s3 -> s3 [71, 74] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s3 -> s11 [75, 75] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s3 -> s12 [76, 76] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s3 -> s3 [77, 65535] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s4 -> s1 [0, 69] { R8160 += 1, R8096 += 1, R8003 += 1, R8004 += 1 };
  s4 -> s2 [0, 69] { R8160 += 1, R8096 += 1, R8004 += 1, R8005 += 1, R8006 += 1 };
  s4 -> s3 [0, 69] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s4 -> s4 [0, 65535] { R8160 += 1, R8095 += 1, R8096 += 1 };
  s4 -> s5 [70, 70] { R8160 += 1, R8096 += 1, R8004 += 1, R8005 += 1, R8006 += 1 };
  s4 -> s6 [70, 70] { R8160 += 1, R8096 += 1, R8004 += 1, R8005 += 1, R8006 += 1 };
  s4 -> s7 [70, 70] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s4 -> s8 [70, 70] { R8160 += 1, R8096 += 1, R8003 += 1, R8004 += 1 };
  s4 -> s9 [70, 70] { R8160 += 1, R8096 += 1, R8003 += 1, R8004 += 1 };
  s4 -> s10 [70, 70] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s4 -> s3 [71, 74] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s4 -> s1 [71, 65535] { R8160 += 1, R8096 += 1, R8003 += 1, R8004 += 1 };
  s4 -> s2 [71, 65535] { R8160 += 1, R8096 += 1, R8004 += 1, R8005 += 1, R8006 += 1 };
  s4 -> s11 [75, 75] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s4 -> s12 [76, 76] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s4 -> s3 [77, 65535] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s5 -> s10 [0, 74] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s5 -> s5 [0, 65535] { R8160 += 1, R8096 += 1, R8004 += 1, R8005 += 1, R8006 += 1 };
  s5 -> s24 [75, 75] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s5 -> s13 [76, 76] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s5 -> s10 [77, 65535] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s9 -> s10 [0, 74] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s9 -> s5 [0, 65535] { R8160 += 1, R8096 += 1, R8004 += 1, R8005 += 1, R8006 += 1 };
  s9 -> s9 [0, 65535] { R8160 += 1, R8096 += 1, R8003 += 1, R8004 += 1 };
  s9 -> s24 [75, 75] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s9 -> s13 [76, 76] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s9 -> s10 [77, 65535] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s10 -> s10 [0, 74] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s10 -> s24 [75, 75] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s10 -> s13 [76, 76] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s10 -> s10 [77, 65535] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s11 -> s11 [0, 69] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s11 -> s23 [70, 70] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s11 -> s24 [70, 70] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s11 -> s11 [71, 75] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s11 -> s15 [76, 76] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s11 -> s11 [77, 65535] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s12 -> s12 [0, 69] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s12 -> s13 [70, 70] { R8160 += 1, R8096 += 1, R8004 += 1 };
  s12 -> s14 [70, 70] { R8160 += 1, R8096 += 1, R8004 += 1 };
  s12 -> s12 [71, 74] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s12 -> s12 [71, 65535] { R8160 += 1, R8096 += 1, R8004 += 1 };
  s12 -> s15 [75, 75] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s12 -> s12 [76, 65535] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s13 -> s13 [0, 74] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s13 -> s13 [0, 65535] { R8160 += 1, R8096 += 1, R8004 += 1 };
  s13 -> s19 [75, 75] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s13 -> s13 [76, 65535] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s15 -> s16 [0, 69] { R8160 += 1, R8096 += 1, R8004 += 1 };
  s15 -> s15 [0, 69] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s15 -> s17 [70, 70] { R8160 += 1, R8096 += 1, R8004 += 1 };
  s15 -> s18 [70, 70] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s15 -> s19 [70, 70] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s15 -> s20 [70, 70] { R8160 += 1, R8096 += 1, R8004 += 1 };
  s15 -> s16 [71, 65535] { R8160 += 1, R8096 += 1, R8004 += 1 };
  s15 -> s15 [71, 65535] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s16 -> s16 [0, 69] { R8160 += 1, R8096 += 1, R8004 += 1 };
  s16 -> s16 [0, 65535] { R8160 += 1 };
  s16 -> s22 [0, 65535];
  s16 -> s17 [70, 70] { R8160 += 1, R8096 += 1, R8004 += 1 };
  s16 -> s20 [70, 70] { R8160 += 1, R8096 += 1, R8004 += 1 };
  s16 -> s16 [71, 65535] { R8160 += 1, R8096 += 1, R8004 += 1 };
  s17 -> s17 [0, 65535] { R8160 += 1 };
  s17 -> s22 [0, 65535];
  s19 -> s19 [0, 65535] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s19 -> s20 [0, 65535] { R8160 += 1, R8096 += 1, R8004 += 1 };
  s20 -> s21 [0, 65535] { R8160 += 1 };
  s20 -> s20 [0, 65535] { R8160 += 1, R8096 += 1, R8004 += 1 };
  s20 -> s22 [0, 65535];
  s21 -> s21 [0, 65535] { R8160 += 1 };
  s21 -> s22 [0, 65535];
  s22 -> s22 [0, 65535];
  s24 -> s24 [0, 75] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s24 -> s19 [76, 76] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  s24 -> s24 [77, 65535] { R8160 += 1, R8096 += 1, R8004 += 1, R8006 += 1 };
  accepting s17, s16, s22, s21, s20;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R8160 && R25 - R8160 = -1 && R26 = R8160 && R27 - R8160 = -1 && R28 = R8160 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R8008 + -1*R8004 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R8008 + -1*R8004 - R130 = 0 && R129 + R8007 + R8003 = 0 && R131 + R8009 + R8005 = 0 && R132 + R8010 + R8006 = 0 && R8071 = 0 && R8072 = 0 && R8081 = 0 && R8082 = 0 && R8089 = 0 && R8090 = 0 && R8093 = 0 && R8094 = 0 && R8095 = 0 && R8096 = 0 && R8097 = 0 && R8098 = R8160 && R8099 = 0 && R8100 = R8160 && R8101 = 0 && R8102 = R8160 && R8103 = 0 && R8104 = R8160 && R8105 = 0 && R8106 = R8160 && R8107 = 0 && R8108 = R8160 && R8109 = 0 && R8110 = R8160 && R8111 = 0 && R8112 = R8160 && R8113 = 0 && R8114 = R8160 && R8115 = 0 && R8116 = R8160 && R8117 = 0 && R8118 = R8160 && R8119 = 0 && R8120 = R8160 && R8121 = 0 && R8122 = R8160 && R8123 = 0 && R8124 = R8160 && R8125 = 0 && R8126 = R8160 && R8127 = 0 && R8128 = R8160 && R8129 = 0 && R8130 = R8160 && R8131 = 0 && R8132 = R8160 && R8133 = 0 && R8134 = R8160 && R8135 = 0 && R8136 = R8160 && R8137 = 0 && R8138 = R8160 && R8139 = 0 && R8140 = R8160 && R8141 = 0 && R8142 = R8160 && R8143 = 0 && R8144 = R8160 && R8145 = 0 && R8146 = R8160 && R8147 = 0 && R8148 = R8160 && R8149 = 0 && R8150 = R8160 && R8151 = 0 && R8152 = R8160 && R8153 = 0 && R8154 = R8160 && R8155 = 0 && R8156 = R8160 && R8157 = 0 && R8158 = R8160 && R8159 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R8008 + -1*R8004 - R130 < 1 && 0 < R8160 && (R2 != 0 || R22 = 0 || (R8011 = 0 && R8012 = 0)) && (R2 != 0 || R22 = 0 || (R8013 = 0 && R8014 = 0)) && (R2 != 0 || R22 = 0 || (R8015 = 0 && R8016 = 0)) && (R2 != 0 || R22 = 0 || (R8017 = 0 && R8018 = 0)) && (R2 != 0 || R22 = 0 || (R8019 = 0 && R8020 = 0)) && (R2 != 0 || R22 = 0 || (R8021 = 0 && R8022 = 0)) && (R2 != 0 || R22 = 0 || (R8023 = 0 && R8024 = 0)) && (R2 != 0 || R22 = 0 || (R8025 = 0 && R8026 = 0)) && (R2 != 0 || R22 = 0 || (R8027 = 0 && R8028 = 0)) && (R2 != 0 || R22 = 0 || (R8029 = 0 && R8030 = 0)) && (R2 != 0 || R22 = 0 || (R8031 = 0 && R8032 = 0)) && (R2 != 0 || R22 = 0 || (R8033 = 0 && R8034 = 0)) && (R2 != 0 || R22 = 0 || (R8035 = 0 && R8036 = 0)) && (R2 != 0 || R22 = 0 || (R8037 = 0 && R8038 = 0)) && (R2 != 0 || R22 = 0 || (R8039 = 0 && R8040 = 0)) && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R8008 + -1*R8004 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R7359 + R7355 = 0 && R114 + R7360 + R7356 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R8008 + -1*R8004 - R130 = 0 || R130 + R8008 + R8004 < 1) && (R81 + R158 + R155 = 0 || R130 + R8008 + R8004 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R8008 + -1*R8004 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R8008 + R8004 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R8008 + -1*R8004 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R8008 + R8004 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R8008 + -1*R8004 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R8008 + R8004 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R7357 + R7353 != 0 || R112 + R7358 + R7354 + -1*R8008 + -1*R8004 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R8008 + R8004 = 0)) && (R113 + R7359 + R7355 != 0 || R83 + R160 + R157 + -1*R7360 + -1*R7356 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R7366 + R7361 != 0 || R120 + R7367 + R7362 + -1*R8008 + -1*R8004 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R8008 + R8004 = 0)) && (R8011 != 0 || R2 = R8012 || R2 < 1) && (R8013 != 0 || R2 = R8014 || R2 < 1) && (R8015 != 0 || R2 = R8016 || R2 < 1) && (R8017 != 0 || R2 = R8018 || R2 < 1) && (R8019 != 0 || R2 = R8020 || R2 < 1) && (R8021 != 0 || R2 = R8022 || R2 < 1) && (R8023 != 0 || R2 = R8024 || R2 < 1) && (R8025 != 0 || R2 = R8026 || R2 < 1) && (R8027 != 0 || R2 = R8028 || R2 < 1) && (R8029 != 0 || R2 = R8030 || R2 < 1) && (R8031 != 0 || R2 = R8032 || R2 < 1) && (R8033 != 0 || R2 = R8034 || R2 < 1) && (R8035 != 0 || R2 = R8036 || R2 < 1) && (R8037 != 0 || R2 = R8038 || R2 < 1) && (R8039 != 0 || R2 = R8040 || R2 < 1) && (R23 = 0 || (R8069 = 0 && R8070 = 0)) && (R23 = 0 || (R8073 = 0 && R8074 = 0)) && (R23 = 0 || (R8075 = 0 && R8076 = 0)) && (R23 = 0 || (R8077 = 0 && R8078 = 0)) && (R23 = 0 || (R8079 = 0 && R8080 = 0)) && (R23 = 0 || (R8083 = 0 && R8084 = 0)) && (R23 = 0 || (R8085 = 0 && R8086 = 0)) && (R23 = 0 || (R8087 = 0 && R8088 = 0)) && (R23 = 0 || (R8091 = 0 && R8092 = 0)) && (R24 = 0 || (R8041 = 0 && R8042 = 0)) && (R24 = 0 || (R8043 = 0 && R8044 = 0)) && (R24 = 0 || (R8045 = 0 && R8046 = 0)) && (R24 = 0 || (R8047 = 0 && R8048 = 0)) && (R24 = 0 || (R8049 = 0 && R8050 = 0)) && (R24 = 0 || (R8051 = 0 && R8052 = 0)) && (R24 = 0 || (R8053 = 0 && R8054 = 0)) && (R24 = 0 || (R8055 = 0 && R8056 = 0)) && (R24 = 0 || (R8057 = 0 && R8058 = 0)) && (R24 = 0 || (R8059 = 0 && R8060 = 0)) && (R24 = 0 || (R8061 = 0 && R8062 = 0)) && (R24 = 0 || (R8063 = 0 && R8064 = 0)) && (R24 = 0 || (R8065 = 0 && R8066 = 0)) && (R24 = 0 || (R8067 = 0 && R8068 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R8008 + R8004 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R8008 + R8004 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R8008 + R8004 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R7357 + R7353 = 0 || (R83 + R160 + R157 = 0 && R130 + R8008 + R8004 = 0)) && (R113 + R7359 + R7355 = 0 || R83 + R160 + R157 < 1) && (R119 + R7366 + R7361 = 0 || (R83 + R160 + R157 = 0 && R130 + R8008 + R8004 = 0)) && (R123 + R7370 + R7365 = 0 || (R121 + R7368 + R7363 = 0 && R122 + R7369 + R7364 = 0)) && (R8011 = 0 || R2 < 1) && (R8013 = 0 || R2 < 1) && (R8015 = 0 || R2 < 1) && (R8017 = 0 || R2 < 1) && (R8019 = 0 || R2 < 1) && (R8021 = 0 || R2 < 1) && (R8023 = 0 || R2 < 1) && (R8025 = 0 || R2 < 1) && (R8027 = 0 || R2 < 1) && (R8029 = 0 || R2 < 1) && (R8031 = 0 || R2 < 1) && (R8033 = 0 || R2 < 1) && (R8035 = 0 || R2 < 1) && (R8037 = 0 || R2 < 1) && (R8039 = 0 || R2 < 1);
// End of Parikh automata intersection problem
