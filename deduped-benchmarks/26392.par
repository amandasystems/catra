// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R2, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R5, R63, R65, R67, R68, R69, R73, R7353, R7354, R7355, R7356, R7357, R7358, R7359, R7360, R74, R77, R78, R81, R82, R83, R87, R8793, R8794, R8795, R8796, R8797, R8798, R8799, R88, R8800, R8801, R8802, R89, R93, R94, R95, R9593, R9594, R9595, R9596, R9597, R9598, R9599, R96, R9600, R9601, R9602, R9603, R9604, R9605, R9606, R9607, R9608, R9609, R9610, R9611, R9612, R9613, R9614, R9615, R9616, R9617, R9618, R9619, R9620, R9621, R9622, R9623, R9624, R9625, R9626, R9627, R9628, R9629, R9630, R9631, R9632, R9633, R9634, R9635, R9636, R9637, R9638, R9639, R9640, R9641, R9642, R9643, R9644, R9645, R9646, R9647, R9648, R9649, R9650, R9651, R9652, R9653, R9654, R9655, R9656, R9657, R9658, R9659, R9660, R9661, R9662, R9663, R9664, R9665, R9666, R9667, R9668, R9669, R9670, R9671, R9672, R9673, R9674, R9675, R9676, R9677, R9678, R9679, R9680, R9681, R9682, R9683, R9684, R9685, R9686, R9687, R9688, R9689, R9690, R9691, R9692, R9693, R9694, R9695, R9696, R9697, R9698, R9699, R9700, R9701, R9702, R9703, R9704, R9705, R9706, R9707, R9708, R9709, R9710, R9711, R9712, R9713, R9714, R9715, R9716, R9717, R9718, R9719, R9720, R9721, R9722, R9723, R9724, R9725, R9726, R9727, R9728, R9729, R9730, R9731, R9732, R9733, R9734, R9735, R9736, R9737, R9738, R9739, R9740, R9741, R9742, R9743, R9744, R9745, R9746, R9747, R9748, R9749, R9750;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R26 += 1 };
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R9632 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R9631 += 1, R9632 += 1 };
  s1 -> s1 [0, 65535] { R9632 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R9634 += 1 };
  s0 -> s0 [0, 65535] { R9633 += 1, R9634 += 1 };
  s0 -> s2 [70, 70] { R9634 += 1 };
  s0 -> s3 [70, 70] { R9634 += 1 };
  s0 -> s1 [76, 65535] { R9634 += 1 };
  s1 -> s1 [0, 69] { R9634 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9634 += 1 };
  s1 -> s3 [70, 70] { R9634 += 1 };
  s1 -> s1 [76, 65535] { R9634 += 1 };
  s2 -> s2 [0, 70] { R9634 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R9634 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R9636 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R9635 += 1, R9636 += 1 };
  s0 -> s2 [70, 70] { R9636 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R9636 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R9636 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R9636 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9636 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R9636 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R9636 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R9636 += 1, R63 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R9638 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R9637 += 1, R9638 += 1 };
  s0 -> s2 [70, 70] { R9638 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R9638 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R9638 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R9638 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9638 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R9638 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R9638 += 1, R65 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R9638 += 1, R65 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R9640 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R9639 += 1, R9640 += 1 };
  s0 -> s2 [70, 70] { R9640 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R9640 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R9640 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R9640 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9640 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R9640 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R9640 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R9640 += 1, R67 += 1, R68 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R9642 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R9641 += 1, R9642 += 1 };
  s0 -> s2 [70, 70] { R9642 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R9642 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R9642 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R9642 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9642 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R9642 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R9642 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R9642 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R9644 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R9643 += 1, R9644 += 1 };
  s0 -> s2 [70, 70] { R9644 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R9644 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R9644 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R9644 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9644 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R9644 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R9644 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R9644 += 1, R77 += 1, R78 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R9646 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R9645 += 1, R9646 += 1 };
  s0 -> s2 [70, 70] { R9646 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R9646 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R9646 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R9646 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9646 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R9646 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R9646 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535] { R9646 += 1, R81 += 1, R82 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R9648 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R9647 += 1, R9648 += 1 };
  s0 -> s2 [70, 70] { R9648 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R9648 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R9648 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R9648 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9648 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R9648 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R9648 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535] { R9648 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R9650 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R9649 += 1, R9650 += 1 };
  s0 -> s2 [70, 70] { R9650 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R9650 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R9650 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R9650 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9650 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R9650 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R9650 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535] { R9650 += 1, R93 += 1, R94 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R9652 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R9651 += 1, R9652 += 1 };
  s0 -> s2 [70, 70] { R9652 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R9652 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R9652 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R9652 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9652 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R9652 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R9652 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R9652 += 1, R101 += 1, R102 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R9654 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R9653 += 1, R9654 += 1 };
  s0 -> s2 [70, 70] { R9654 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R9654 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R9654 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R9654 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9654 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R9654 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R9654 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R9654 += 1, R111 += 1, R112 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R9656 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R9655 += 1, R9656 += 1 };
  s0 -> s2 [70, 70] { R9656 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R9656 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R9656 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R9656 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9656 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R9656 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R9656 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R9656 += 1, R119 += 1, R120 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R9658 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R9657 += 1, R9658 += 1 };
  s0 -> s2 [70, 70] { R9658 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R9658 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R9658 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R9658 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R9658 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R9658 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R9658 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R9658 += 1, R129 += 1, R130 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R9688 += 1 };
  s0 -> s0 [0, 65535] { R9687 += 1, R9688 += 1 };
  s0 -> s2 [70, 70] { R9688 += 1 };
  s0 -> s1 [71, 65535] { R9688 += 1 };
  s1 -> s1 [0, 69] { R9688 += 1 };
  s1 -> s2 [70, 70] { R9688 += 1 };
  s1 -> s1 [71, 65535] { R9688 += 1 };
  s2 -> s2 [0, 65535] { R9688 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R9689 += 1, R9690 += 1 };
  s0 -> s1 [0, 65535] { R9690 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R9690 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R9692 += 1 };
  s0 -> s2 [0, 65535] { R9692 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R9691 += 1, R9692 += 1 };
  s0 -> s3 [70, 70] { R9692 += 1 };
  s0 -> s1 [71, 65535] { R9692 += 1 };
  s1 -> s1 [0, 69] { R9692 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R9692 += 1 };
  s1 -> s1 [71, 65535] { R9692 += 1 };
  s2 -> s1 [0, 69] { R9692 += 1 };
  s2 -> s2 [0, 65535] { R9692 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R9692 += 1 };
  s2 -> s1 [71, 65535] { R9692 += 1 };
  s3 -> s3 [0, 65535] { R9692 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R9694 += 1, R9602 += 1 };
  s0 -> s2 [0, 65535] { R9694 += 1, R9601 += 1, R9602 += 1 };
  s0 -> s0 [0, 65535] { R9693 += 1, R9694 += 1 };
  s0 -> s1 [71, 65535] { R9694 += 1, R9602 += 1 };
  s1 -> s1 [0, 69] { R9694 += 1, R9602 += 1 };
  s1 -> s1 [0, 65535] { R9694 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R9694 += 1, R9602 += 1 };
  s2 -> s1 [0, 69] { R9694 += 1, R9602 += 1 };
  s2 -> s2 [0, 65535] { R9694 += 1, R9601 += 1, R9602 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R9694 += 1, R9602 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R9696 += 1, R9603 += 1, R9604 += 1 };
  s0 -> s0 [0, 65535] { R9695 += 1, R9696 += 1 };
  s0 -> s2 [0, 65535] { R9696 += 1, R9604 += 1, R22 += 1 };
  s1 -> s1 [0, 65535] { R9696 += 1, R9603 += 1, R9604 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R9696 += 1, R9604 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R9696 += 1 };
  s2 -> s2 [0, 65535] { R9696 += 1, R9604 += 1, R22 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R9696 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R9698 += 1, R9606 += 1 };
  s0 -> s2 [0, 65535] { R9698 += 1, R9605 += 1, R9606 += 1 };
  s0 -> s0 [0, 65535] { R9697 += 1, R9698 += 1 };
  s0 -> s1 [75, 65535] { R9698 += 1, R9606 += 1 };
  s1 -> s1 [0, 70] { R9698 += 1, R9606 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R9698 += 1 };
  s1 -> s1 [75, 65535] { R9698 += 1, R9606 += 1 };
  s2 -> s1 [0, 70] { R9698 += 1, R9606 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R9698 += 1, R9605 += 1, R9606 += 1 };
  s2 -> s1 [75, 65535] { R9698 += 1, R9606 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R9700 += 1, R9608 += 1, R138 += 1 };
  s0 -> s2 [0, 65535] { R9700 += 1, R9607 += 1, R9608 += 1 };
  s0 -> s0 [0, 65535] { R9699 += 1, R9700 += 1 };
  s1 -> s1 [0, 65535] { R9700 += 1, R9608 += 1, R138 += 1 };
  s1 -> s4 [0, 65535] { R9700 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R9700 += 1, R9608 += 1, R138 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R9700 += 1, R9607 += 1, R9608 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R9700 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R9702 += 1, R9610 += 1 };
  s0 -> s2 [0, 65535] { R9702 += 1, R9610 += 1, R140 += 1 };
  s0 -> s3 [0, 65535] { R9702 += 1, R9609 += 1, R9610 += 1 };
  s0 -> s0 [0, 65535] { R9701 += 1, R9702 += 1 };
  s0 -> s1 [76, 65535] { R9702 += 1, R9610 += 1 };
  s1 -> s1 [0, 74] { R9702 += 1, R9610 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R9702 += 1 };
  s1 -> s1 [76, 65535] { R9702 += 1, R9610 += 1 };
  s2 -> s1 [0, 74] { R9702 += 1, R9610 += 1 };
  s2 -> s2 [0, 65535] { R9702 += 1, R9610 += 1, R140 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R9702 += 1 };
  s2 -> s1 [76, 65535] { R9702 += 1, R9610 += 1 };
  s3 -> s1 [0, 74] { R9702 += 1, R9610 += 1 };
  s3 -> s2 [0, 65535] { R9702 += 1, R9610 += 1, R140 += 1 };
  s3 -> s3 [0, 65535] { R9702 += 1, R9609 += 1, R9610 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [76, 65535] { R9702 += 1, R9610 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R9702 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R9703 += 1, R9704 += 1 };
  s0 -> s1 [0, 65535] { R9704 += 1, R9611 += 1, R9612 += 1 };
  s0 -> s2 [0, 65535] { R9704 += 1, R9612 += 1, R145 += 1, R146 += 1 };
  s0 -> s3 [0, 65535] { R9704 += 1, R9612 += 1, R144 += 1, R145 += 1 };
  s1 -> s1 [0, 65535] { R9704 += 1, R9611 += 1, R9612 += 1 };
  s1 -> s2 [0, 65535] { R9704 += 1, R9612 += 1, R145 += 1, R146 += 1 };
  s1 -> s3 [0, 65535] { R9704 += 1, R9612 += 1, R144 += 1, R145 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R9704 += 1, R9612 += 1 };
  s2 -> s2 [0, 65535] { R9704 += 1, R9612 += 1, R145 += 1, R146 += 1 };
  s2 -> s4 [0, 65535] { R9704 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R9704 += 1, R9612 += 1, R145 += 1, R146 += 1 };
  s3 -> s3 [0, 65535] { R9704 += 1, R9612 += 1, R144 += 1, R145 += 1 };
  s3 -> s4 [0, 65535] { R9704 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R9704 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9704 += 1, R9612 += 1 };
  s6 -> s4 [0, 65535] { R9704 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R9706 += 1, R9614 += 1, R150 += 1 };
  s0 -> s2 [0, 65535] { R9706 += 1, R9614 += 1, R149 += 1, R150 += 1 };
  s0 -> s3 [0, 65535] { R9706 += 1, R9613 += 1, R9614 += 1 };
  s0 -> s0 [0, 65535] { R9705 += 1, R9706 += 1 };
  s0 -> s4 [75, 75] { R9706 += 1, R9614 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R9706 += 1, R9614 += 1, R150 += 1 };
  s0 -> s1 [77, 65535] { R9706 += 1, R9614 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R9706 += 1, R9614 += 1, R150 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R9706 += 1, R9614 += 1 };
  s1 -> s7 [0, 65535] { R9706 += 1 };
  s1 -> s4 [75, 75] { R9706 += 1, R9614 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R9706 += 1, R9614 += 1, R150 += 1 };
  s1 -> s1 [77, 65535] { R9706 += 1, R9614 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R9706 += 1, R9614 += 1, R150 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R9706 += 1, R9614 += 1, R149 += 1, R150 += 1 };
  s2 -> s7 [0, 65535] { R9706 += 1 };
  s2 -> s4 [75, 75] { R9706 += 1, R9614 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R9706 += 1, R9614 += 1, R150 += 1 };
  s2 -> s1 [77, 65535] { R9706 += 1, R9614 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R9706 += 1, R9614 += 1, R150 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R9706 += 1, R9614 += 1, R149 += 1, R150 += 1 };
  s3 -> s3 [0, 65535] { R9706 += 1, R9613 += 1, R9614 += 1 };
  s3 -> s4 [75, 75] { R9706 += 1, R9614 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R9706 += 1, R9614 += 1, R150 += 1 };
  s3 -> s1 [77, 65535] { R9706 += 1, R9614 += 1, R150 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R9706 += 1 };
  s4 -> s4 [0, 65535] { R9706 += 1, R9614 += 1 };
  s5 -> s5 [0, 75] { R9706 += 1, R9614 += 1, R150 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R9706 += 1 };
  s5 -> s5 [0, 65535] { R9706 += 1, R9614 += 1 };
  s5 -> s5 [77, 65535] { R9706 += 1, R9614 += 1, R150 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R9706 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R9708 += 1, R9616 += 1 };
  s0 -> s2 [0, 65535] { R9708 += 1, R9616 += 1, R154 += 1 };
  s0 -> s3 [0, 65535] { R9708 += 1, R9615 += 1, R9616 += 1 };
  s0 -> s0 [0, 65535] { R9707 += 1, R9708 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R9708 += 1 };
  s1 -> s1 [0, 65535] { R9708 += 1, R9616 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R9708 += 1 };
  s2 -> s1 [0, 65535] { R9708 += 1, R9616 += 1 };
  s2 -> s2 [0, 65535] { R9708 += 1, R9616 += 1, R154 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R9708 += 1, R9616 += 1 };
  s3 -> s2 [0, 65535] { R9708 += 1, R9616 += 1, R154 += 1 };
  s3 -> s3 [0, 65535] { R9708 += 1, R9615 += 1, R9616 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R9708 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s0 [0, 65535] { R9709 += 1, R9710 += 1 };
  s0 -> s1 [0, 65535] { R9710 += 1, R9618 += 1, R159 += 1, R160 += 1 };
  s0 -> s2 [0, 65535] { R9710 += 1, R9618 += 1, R158 += 1, R159 += 1 };
  s0 -> s3 [0, 65535] { R9710 += 1, R9617 += 1, R9618 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R9710 += 1, R9618 += 1 };
  s1 -> s5 [0, 65535] { R9710 += 1 };
  s1 -> s1 [0, 65535] { R9710 += 1, R9618 += 1, R159 += 1, R160 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R9710 += 1 };
  s2 -> s1 [0, 65535] { R9710 += 1, R9618 += 1, R159 += 1, R160 += 1 };
  s2 -> s2 [0, 65535] { R9710 += 1, R9618 += 1, R158 += 1, R159 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R9710 += 1, R9618 += 1, R159 += 1, R160 += 1 };
  s3 -> s2 [0, 65535] { R9710 += 1, R9618 += 1, R158 += 1, R159 += 1 };
  s3 -> s3 [0, 65535] { R9710 += 1, R9617 += 1, R9618 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R9710 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R9710 += 1, R9618 += 1 };
  s6 -> s5 [0, 65535] { R9710 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R9712 += 1, R9620 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R9712 += 1, R9619 += 1, R9620 += 1 };
  s0 -> s3 [0, 65535] { R9712 += 1, R9620 += 1, R164 += 1, R165 += 1 };
  s0 -> s4 [0, 65535] { R9712 += 1, R9620 += 1, R165 += 1, R166 += 1 };
  s0 -> s0 [0, 65535] { R9711 += 1, R9712 += 1 };
  s0 -> s1 [76, 65535] { R9712 += 1, R9620 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R9712 += 1, R9620 += 1, R165 += 1 };
  s1 -> s1 [0, 65535] { R9712 += 1, R9620 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R9712 += 1 };
  s1 -> s1 [76, 65535] { R9712 += 1, R9620 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R9712 += 1, R9620 += 1, R165 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R9712 += 1, R9619 += 1, R9620 += 1 };
  s2 -> s3 [0, 65535] { R9712 += 1, R9620 += 1, R164 += 1, R165 += 1 };
  s2 -> s4 [0, 65535] { R9712 += 1, R9620 += 1, R165 += 1, R166 += 1 };
  s2 -> s1 [76, 65535] { R9712 += 1, R9620 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R9712 += 1, R9620 += 1, R165 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s7 [0, 65535] { R9712 += 1 };
  s3 -> s3 [0, 65535] { R9712 += 1, R9620 += 1, R164 += 1, R165 += 1 };
  s3 -> s4 [0, 65535] { R9712 += 1, R9620 += 1, R165 += 1, R166 += 1 };
  s3 -> s1 [76, 65535] { R9712 += 1, R9620 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R9712 += 1, R9620 += 1, R165 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R9712 += 1, R9620 += 1 };
  s4 -> s7 [0, 65535] { R9712 += 1 };
  s4 -> s4 [0, 65535] { R9712 += 1, R9620 += 1, R165 += 1, R166 += 1 };
  s4 -> s1 [76, 65535] { R9712 += 1, R9620 += 1, R165 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9712 += 1, R9620 += 1 };
  s6 -> s7 [0, 65535] { R9712 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R9712 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R9714 += 1, R9622 += 1, R172 += 1, R174 += 1 };
  s0 -> s0 [0, 65535] { R9713 += 1, R9714 += 1 };
  s0 -> s2 [0, 65535] { R9714 += 1, R9621 += 1, R9622 += 1 };
  s0 -> s3 [0, 65535] { R9714 += 1, R9622 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s4 [0, 65535] { R9714 += 1, R9622 += 1, R171 += 1, R172 += 1 };
  s0 -> s1 [76, 65535] { R9714 += 1, R9622 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R9714 += 1, R9622 += 1, R172 += 1, R174 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R9714 += 1, R9622 += 1, R172 += 1 };
  s1 -> s7 [0, 65535] { R9714 += 1, R9622 += 1 };
  s1 -> s6 [0, 65535] { R9714 += 1 };
  s1 -> s1 [76, 65535] { R9714 += 1, R9622 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R9714 += 1, R9622 += 1, R172 += 1, R174 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R9714 += 1, R9621 += 1, R9622 += 1 };
  s2 -> s3 [0, 65535] { R9714 += 1, R9622 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s4 [0, 65535] { R9714 += 1, R9622 += 1, R171 += 1, R172 += 1 };
  s2 -> s1 [76, 65535] { R9714 += 1, R9622 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R9714 += 1, R9622 += 1, R172 += 1, R174 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R9714 += 1, R9622 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s7 [0, 65535] { R9714 += 1, R9622 += 1 };
  s3 -> s6 [0, 65535] { R9714 += 1 };
  s3 -> s1 [76, 65535] { R9714 += 1, R9622 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R9714 += 1, R9622 += 1, R172 += 1, R174 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R9714 += 1, R9622 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s4 [0, 65535] { R9714 += 1, R9622 += 1, R171 += 1, R172 += 1 };
  s4 -> s6 [0, 65535] { R9714 += 1 };
  s4 -> s1 [76, 65535] { R9714 += 1, R9622 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9714 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R9714 += 1, R9622 += 1 };
  s7 -> s6 [0, 65535] { R9714 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R9716 += 1, R9623 += 1, R9624 += 1 };
  s0 -> s0 [0, 65535] { R9715 += 1, R9716 += 1 };
  s0 -> s2 [0, 65535] { R9716 += 1, R9624 += 1 };
  s0 -> s3 [0, 65535] { R9716 += 1, R9624 += 1, R181 += 1 };
  s1 -> s1 [0, 65535] { R9716 += 1, R9623 += 1, R9624 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R9716 += 1, R9624 += 1 };
  s1 -> s3 [0, 65535] { R9716 += 1, R9624 += 1, R181 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R9716 += 1 };
  s2 -> s2 [0, 65535] { R9716 += 1, R9624 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R9716 += 1 };
  s3 -> s2 [0, 65535] { R9716 += 1, R9624 += 1 };
  s3 -> s3 [0, 65535] { R9716 += 1, R9624 += 1, R181 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R9716 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 65535] { R9718 += 1, R9626 += 1, R7358 += 1, R7360 += 1 };
  s0 -> s2 [0, 65535] { R9718 += 1, R9626 += 1, R7357 += 1, R7358 += 1 };
  s0 -> s3 [0, 65535] { R9718 += 1, R9626 += 1, R7358 += 1, R7359 += 1, R7360 += 1 };
  s0 -> s4 [0, 65535] { R9718 += 1, R9625 += 1, R9626 += 1 };
  s0 -> s0 [0, 65535] { R9717 += 1, R9718 += 1 };
  s1 -> s1 [0, 65535] { R9718 += 1, R9626 += 1, R7358 += 1, R7360 += 1 };
  s1 -> s6 [0, 65535] { R9718 += 1, R9626 += 1 };
  s1 -> s7 [0, 65535] { R9718 += 1 };
  s1 -> s8 [0, 65535] { R9718 += 1, R9626 += 1, R7358 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R9718 += 1, R9626 += 1, R7358 += 1, R7360 += 1 };
  s2 -> s2 [0, 65535] { R9718 += 1, R9626 += 1, R7357 += 1, R7358 += 1 };
  s2 -> s3 [0, 65535] { R9718 += 1, R9626 += 1, R7358 += 1, R7359 += 1, R7360 += 1 };
  s2 -> s7 [0, 65535] { R9718 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R9718 += 1, R9626 += 1, R7358 += 1, R7360 += 1 };
  s3 -> s6 [0, 65535] { R9718 += 1, R9626 += 1 };
  s3 -> s3 [0, 65535] { R9718 += 1, R9626 += 1, R7358 += 1, R7359 += 1, R7360 += 1 };
  s3 -> s7 [0, 65535] { R9718 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R9718 += 1, R9626 += 1, R7358 += 1, R7360 += 1 };
  s4 -> s2 [0, 65535] { R9718 += 1, R9626 += 1, R7357 += 1, R7358 += 1 };
  s4 -> s3 [0, 65535] { R9718 += 1, R9626 += 1, R7358 += 1, R7359 += 1, R7360 += 1 };
  s4 -> s4 [0, 65535] { R9718 += 1, R9625 += 1, R9626 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9718 += 1, R9626 += 1 };
  s6 -> s7 [0, 65535] { R9718 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R9718 += 1 };
  s7 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R9718 += 1, R9626 += 1 };
  s8 -> s7 [0, 65535] { R9718 += 1 };
  s8 -> s8 [0, 65535] { R9718 += 1, R9626 += 1, R7358 += 1 };
  s8 -> s5 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R9720 += 1, R9627 += 1, R9628 += 1 };
  s0 -> s2 [0, 65535] { R9720 += 1, R9628 += 1, R8799 += 1 };
  s0 -> s3 [0, 65535] { R9720 += 1, R9628 += 1 };
  s0 -> s0 [0, 65535] { R9719 += 1, R9720 += 1 };
  s1 -> s1 [0, 65535] { R9720 += 1, R9627 += 1, R9628 += 1 };
  s1 -> s2 [0, 65535] { R9720 += 1, R9628 += 1, R8799 += 1 };
  s1 -> s3 [0, 65535] { R9720 += 1, R9628 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R9720 += 1, R9628 += 1, R8799 += 1 };
  s2 -> s3 [0, 65535] { R9720 += 1, R9628 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R9720 += 1 };
  s3 -> s3 [0, 65535] { R9720 += 1, R9628 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R9720 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R9720 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 75] { R9722 += 1, R9630 += 1, R9598 += 1, R9600 += 1 };
  s0 -> s2 [0, 65535] { R9722 += 1, R9629 += 1, R9630 += 1 };
  s0 -> s0 [0, 65535] { R9721 += 1, R9722 += 1 };
  s0 -> s3 [76, 76] { R9722 += 1, R9630 += 1, R9598 += 1, R9600 += 1 };
  s0 -> s1 [77, 65535] { R9722 += 1, R9630 += 1, R9598 += 1, R9600 += 1 };
  s1 -> s1 [0, 75] { R9722 += 1, R9630 += 1, R9598 += 1, R9600 += 1 };
  s1 -> s3 [76, 76] { R9722 += 1, R9630 += 1, R9598 += 1, R9600 += 1 };
  s1 -> s1 [77, 65535] { R9722 += 1, R9630 += 1, R9598 += 1, R9600 += 1 };
  s2 -> s1 [0, 75] { R9722 += 1, R9630 += 1, R9598 += 1, R9600 += 1 };
  s2 -> s2 [0, 65535] { R9722 += 1, R9629 += 1, R9630 += 1 };
  s2 -> s3 [76, 76] { R9722 += 1, R9630 += 1, R9598 += 1, R9600 += 1 };
  s2 -> s1 [77, 65535] { R9722 += 1, R9630 += 1, R9598 += 1, R9600 += 1 };
  s3 -> s3 [0, 65535] { R9722 += 1, R9630 += 1, R9598 += 1, R9600 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R9722 += 1 };
  s3 -> s6 [0, 65535] { R9722 += 1, R9630 += 1 };
  s3 -> s7 [0, 65535] { R9722 += 1, R9630 += 1, R9598 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R9722 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R9722 += 1 };
  s6 -> s6 [0, 65535] { R9722 += 1, R9630 += 1 };
  s7 -> s4 [0, 65535];
  s7 -> s5 [0, 65535] { R9722 += 1 };
  s7 -> s6 [0, 65535] { R9722 += 1, R9630 += 1 };
  s7 -> s7 [0, 65535] { R9722 += 1, R9630 += 1, R9598 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65535] { R9724 += 1, R9659 += 1, R9660 += 1 };
  s0 -> s2 [0, 65535] { R9724 += 1, R9660 += 1, R23 += 1 };
  s0 -> s0 [0, 65535] { R9723 += 1, R9724 += 1 };
  s1 -> s1 [0, 65535] { R9724 += 1, R9659 += 1, R9660 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R9724 += 1, R9660 += 1, R23 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R9724 += 1, R9660 += 1, R23 += 1 };
  s2 -> s4 [0, 65535] { R9724 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R9724 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R9726 += 1, R9662 += 1 };
  s0 -> s2 [0, 65535] { R9726 += 1, R9661 += 1, R9662 += 1 };
  s0 -> s0 [0, 65535] { R9725 += 1, R9726 += 1 };
  s0 -> s3 [70, 70] { R9726 += 1, R9662 += 1 };
  s0 -> s4 [70, 70] { R9726 += 1, R9662 += 1 };
  s0 -> s5 [75, 75] { R9726 += 1, R9662 += 1 };
  s0 -> s1 [76, 65535] { R9726 += 1, R9662 += 1 };
  s1 -> s1 [0, 69] { R9726 += 1, R9662 += 1 };
  s1 -> s3 [70, 70] { R9726 += 1, R9662 += 1 };
  s1 -> s4 [70, 70] { R9726 += 1, R9662 += 1 };
  s1 -> s5 [75, 75] { R9726 += 1, R9662 += 1 };
  s1 -> s1 [76, 65535] { R9726 += 1, R9662 += 1 };
  s2 -> s1 [0, 69] { R9726 += 1, R9662 += 1 };
  s2 -> s2 [0, 65535] { R9726 += 1, R9661 += 1, R9662 += 1 };
  s2 -> s3 [70, 70] { R9726 += 1, R9662 += 1 };
  s2 -> s4 [70, 70] { R9726 += 1, R9662 += 1 };
  s2 -> s5 [75, 75] { R9726 += 1, R9662 += 1 };
  s2 -> s1 [76, 65535] { R9726 += 1, R9662 += 1 };
  s3 -> s3 [0, 70] { R9726 += 1, R9662 += 1 };
  s3 -> s7 [75, 75] { R9726 += 1, R9662 += 1 };
  s3 -> s3 [76, 65535] { R9726 += 1, R9662 += 1 };
  s5 -> s5 [0, 69] { R9726 += 1, R9662 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R9726 += 1 };
  s5 -> s7 [70, 70] { R9726 += 1, R9662 += 1 };
  s5 -> s8 [70, 70] { R9726 += 1, R9662 += 1 };
  s5 -> s5 [75, 65535] { R9726 += 1, R9662 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R9726 += 1, R9662 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R9726 += 1 };
  s7 -> s7 [75, 65535] { R9726 += 1, R9662 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R9726 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R9728 += 1, R9664 += 1, R137 += 1 };
  s0 -> s2 [0, 65535] { R9728 += 1, R9663 += 1, R9664 += 1 };
  s0 -> s0 [0, 65535] { R9727 += 1, R9728 += 1 };
  s0 -> s3 [70, 70] { R9728 += 1, R9664 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R9728 += 1, R9664 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R9728 += 1, R9664 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R9728 += 1, R9664 += 1, R137 += 1 };
  s1 -> s1 [0, 65535] { R9728 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R9728 += 1, R9664 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R9728 += 1, R9664 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R9728 += 1, R9664 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R9728 += 1, R9664 += 1, R137 += 1 };
  s2 -> s2 [0, 65535] { R9728 += 1, R9663 += 1, R9664 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R9728 += 1, R9664 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R9728 += 1, R9664 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R9728 += 1, R9664 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R9728 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R9728 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R9728 += 1, R9664 += 1, R137 += 1 };
  s5 -> s5 [0, 65535] { R9728 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R9730 += 1, R9666 += 1, R139 += 1 };
  s0 -> s2 [0, 65535] { R9730 += 1, R9665 += 1, R9666 += 1 };
  s0 -> s0 [0, 65535] { R9729 += 1, R9730 += 1 };
  s0 -> s3 [70, 70] { R9730 += 1, R9666 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R9730 += 1, R9666 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R9730 += 1, R9666 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R9730 += 1, R9666 += 1, R139 += 1 };
  s1 -> s1 [0, 65535] { R9730 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R9730 += 1, R9666 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R9730 += 1, R9666 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R9730 += 1, R9666 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R9730 += 1, R9666 += 1, R139 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R9730 += 1, R9665 += 1, R9666 += 1 };
  s2 -> s3 [70, 70] { R9730 += 1, R9666 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R9730 += 1, R9666 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R9730 += 1, R9666 += 1, R139 += 1 };
  s3 -> s3 [0, 65535] { R9730 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R9730 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R9730 += 1, R9666 += 1, R139 += 1 };
  s5 -> s5 [0, 65535] { R9730 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R9732 += 1, R9668 += 1, R141 += 1, R142 += 1 };
  s0 -> s0 [0, 65535] { R9731 += 1, R9732 += 1 };
  s0 -> s2 [0, 65535] { R9732 += 1, R9667 += 1, R9668 += 1 };
  s0 -> s3 [70, 70] { R9732 += 1, R9668 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R9732 += 1, R9668 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R9732 += 1, R9668 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R9732 += 1, R9668 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 65535] { R9732 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R9732 += 1, R9668 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R9732 += 1, R9668 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R9732 += 1, R9668 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R9732 += 1, R9668 += 1, R141 += 1, R142 += 1 };
  s2 -> s2 [0, 65535] { R9732 += 1, R9667 += 1, R9668 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R9732 += 1, R9668 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R9732 += 1, R9668 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R9732 += 1, R9668 += 1, R141 += 1, R142 += 1 };
  s3 -> s3 [0, 65535] { R9732 += 1, R9668 += 1, R141 += 1, R142 += 1 };
  s3 -> s6 [0, 65535] { R9732 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R9732 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9732 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R9734 += 1, R9670 += 1, R147 += 1, R148 += 1 };
  s0 -> s2 [0, 65535] { R9734 += 1, R9669 += 1, R9670 += 1 };
  s0 -> s0 [0, 65535] { R9733 += 1, R9734 += 1 };
  s0 -> s3 [70, 70] { R9734 += 1, R9670 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R9734 += 1, R9670 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R9734 += 1, R9670 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R9734 += 1, R9670 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 65535] { R9734 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R9734 += 1, R9670 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R9734 += 1, R9670 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R9734 += 1, R9670 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R9734 += 1, R9670 += 1, R147 += 1, R148 += 1 };
  s2 -> s2 [0, 65535] { R9734 += 1, R9669 += 1, R9670 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R9734 += 1, R9670 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R9734 += 1, R9670 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R9734 += 1, R9670 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R9734 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R9734 += 1 };
  s4 -> s4 [0, 65535] { R9734 += 1, R9670 += 1, R147 += 1, R148 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R9734 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R9736 += 1, R9672 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R9736 += 1, R9672 += 1, R151 += 1, R152 += 1 };
  s0 -> s3 [0, 65535] { R9736 += 1, R9671 += 1, R9672 += 1 };
  s0 -> s0 [0, 65535] { R9735 += 1, R9736 += 1 };
  s0 -> s4 [70, 70] { R9736 += 1, R9672 += 1, R151 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R9736 += 1, R9672 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R9736 += 1, R9672 += 1, R151 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R9736 += 1, R9672 += 1, R152 += 1 };
  s0 -> s1 [71, 74] { R9736 += 1, R9672 += 1, R152 += 1 };
  s0 -> s2 [71, 65535] { R9736 += 1, R9672 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R9736 += 1, R9672 += 1, R152 += 1 };
  s0 -> s1 [76, 65535] { R9736 += 1, R9672 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R9736 += 1, R9672 += 1, R152 += 1 };
  s1 -> s5 [70, 70] { R9736 += 1, R9672 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R9736 += 1, R9672 += 1, R152 += 1 };
  s1 -> s1 [71, 74] { R9736 += 1, R9672 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R9736 += 1, R9672 += 1, R152 += 1 };
  s1 -> s1 [76, 65535] { R9736 += 1, R9672 += 1, R152 += 1 };
  s2 -> s1 [0, 69] { R9736 += 1, R9672 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R9736 += 1, R9672 += 1, R151 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R9736 += 1, R9672 += 1, R151 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R9736 += 1, R9672 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R9736 += 1, R9672 += 1, R151 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R9736 += 1, R9672 += 1, R152 += 1 };
  s2 -> s1 [71, 74] { R9736 += 1, R9672 += 1, R152 += 1 };
  s2 -> s2 [71, 65535] { R9736 += 1, R9672 += 1, R151 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R9736 += 1, R9672 += 1, R152 += 1 };
  s2 -> s1 [76, 65535] { R9736 += 1, R9672 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R9736 += 1, R9672 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R9736 += 1, R9672 += 1, R151 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R9736 += 1, R9671 += 1, R9672 += 1 };
  s3 -> s4 [70, 70] { R9736 += 1, R9672 += 1, R151 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R9736 += 1, R9672 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R9736 += 1, R9672 += 1, R151 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R9736 += 1, R9672 += 1, R152 += 1 };
  s3 -> s1 [71, 74] { R9736 += 1, R9672 += 1, R152 += 1 };
  s3 -> s2 [71, 65535] { R9736 += 1, R9672 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R9736 += 1, R9672 += 1, R152 += 1 };
  s3 -> s1 [76, 65535] { R9736 += 1, R9672 += 1, R152 += 1 };
  s4 -> s7 [0, 74] { R9736 += 1, R9672 += 1, R152 += 1 };
  s4 -> s4 [0, 65535] { R9736 += 1, R9672 += 1, R151 += 1, R152 += 1 };
  s4 -> s11 [75, 75] { R9736 += 1, R9672 += 1, R152 += 1 };
  s4 -> s7 [76, 65535] { R9736 += 1, R9672 += 1, R152 += 1 };
  s7 -> s7 [0, 74] { R9736 += 1, R9672 += 1, R152 += 1 };
  s7 -> s11 [75, 75] { R9736 += 1, R9672 += 1, R152 += 1 };
  s7 -> s7 [76, 65535] { R9736 += 1, R9672 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R9736 += 1, R9672 += 1, R152 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R9736 += 1 };
  s8 -> s10 [70, 70] { R9736 += 1, R9672 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R9736 += 1, R9672 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R9736 += 1, R9672 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R9736 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R9736 += 1, R9672 += 1, R152 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R9736 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R9736 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R9738 += 1, R9674 += 1, R155 += 1, R156 += 1 };
  s0 -> s0 [0, 65535] { R9737 += 1, R9738 += 1 };
  s0 -> s2 [0, 65535] { R9738 += 1, R9673 += 1, R9674 += 1 };
  s0 -> s3 [70, 70] { R9738 += 1, R9674 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R9738 += 1, R9674 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R9738 += 1, R9674 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R9738 += 1, R9674 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 65535] { R9738 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R9738 += 1, R9674 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R9738 += 1, R9674 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R9738 += 1, R9674 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R9738 += 1, R9674 += 1, R155 += 1, R156 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R9738 += 1, R9673 += 1, R9674 += 1 };
  s2 -> s3 [70, 70] { R9738 += 1, R9674 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R9738 += 1, R9674 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R9738 += 1, R9674 += 1, R155 += 1, R156 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R9738 += 1, R9674 += 1, R155 += 1, R156 += 1 };
  s3 -> s6 [0, 65535] { R9738 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R9738 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9738 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R9740 += 1, R9676 += 1, R161 += 1, R162 += 1 };
  s0 -> s2 [0, 65535] { R9740 += 1, R9675 += 1, R9676 += 1 };
  s0 -> s0 [0, 65535] { R9739 += 1, R9740 += 1 };
  s0 -> s3 [70, 70] { R9740 += 1, R9676 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R9740 += 1, R9676 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R9740 += 1, R9676 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R9740 += 1, R9676 += 1, R161 += 1, R162 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R9740 += 1 };
  s1 -> s3 [70, 70] { R9740 += 1, R9676 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R9740 += 1, R9676 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R9740 += 1, R9676 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R9740 += 1, R9676 += 1, R161 += 1, R162 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R9740 += 1, R9675 += 1, R9676 += 1 };
  s2 -> s3 [70, 70] { R9740 += 1, R9676 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R9740 += 1, R9676 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R9740 += 1, R9676 += 1, R161 += 1, R162 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R9740 += 1, R9676 += 1, R161 += 1, R162 += 1 };
  s3 -> s6 [0, 65535] { R9740 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R9740 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9740 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R9742 += 1, R9678 += 1, R167 += 1, R168 += 1 };
  s0 -> s0 [0, 65535] { R9741 += 1, R9742 += 1 };
  s0 -> s2 [0, 65535] { R9742 += 1, R9677 += 1, R9678 += 1 };
  s0 -> s3 [70, 70] { R9742 += 1, R9678 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R9742 += 1, R9678 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R9742 += 1, R9678 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R9742 += 1, R9678 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 65535] { R9742 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R9742 += 1, R9678 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R9742 += 1, R9678 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R9742 += 1, R9678 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R9742 += 1, R9678 += 1, R167 += 1, R168 += 1 };
  s2 -> s2 [0, 65535] { R9742 += 1, R9677 += 1, R9678 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R9742 += 1, R9678 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R9742 += 1, R9678 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R9742 += 1, R9678 += 1, R167 += 1, R168 += 1 };
  s3 -> s3 [0, 65535] { R9742 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R9742 += 1 };
  s4 -> s4 [0, 65535] { R9742 += 1, R9678 += 1, R167 += 1, R168 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R9742 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R9744 += 1, R9680 += 1, R175 += 1, R176 += 1 };
  s0 -> s2 [0, 69] { R9744 += 1, R9680 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s3 [0, 69] { R9744 += 1, R9680 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s4 [0, 65535] { R9744 += 1, R9679 += 1, R9680 += 1 };
  s0 -> s0 [0, 65535] { R9743 += 1, R9744 += 1 };
  s0 -> s5 [70, 70] { R9744 += 1, R9680 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s6 [70, 70] { R9744 += 1, R9680 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s7 [70, 70] { R9744 += 1, R9680 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s8 [70, 70] { R9744 += 1, R9680 += 1, R175 += 1, R176 += 1 };
  s0 -> s9 [70, 70] { R9744 += 1, R9680 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s10 [70, 70] { R9744 += 1, R9680 += 1, R175 += 1, R176 += 1 };
  s0 -> s1 [71, 65535] { R9744 += 1, R9680 += 1, R175 += 1, R176 += 1 };
  s0 -> s2 [71, 65535] { R9744 += 1, R9680 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s3 [71, 65535] { R9744 += 1, R9680 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s1 [0, 69] { R9744 += 1, R9680 += 1, R175 += 1, R176 += 1 };
  s1 -> s2 [0, 69] { R9744 += 1, R9680 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s3 [0, 69] { R9744 += 1, R9680 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s5 [70, 70] { R9744 += 1, R9680 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s6 [70, 70] { R9744 += 1, R9680 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s7 [70, 70] { R9744 += 1, R9680 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s8 [70, 70] { R9744 += 1, R9680 += 1, R175 += 1, R176 += 1 };
  s1 -> s9 [70, 70] { R9744 += 1, R9680 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s10 [70, 70] { R9744 += 1, R9680 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [71, 65535] { R9744 += 1, R9680 += 1, R175 += 1, R176 += 1 };
  s1 -> s2 [71, 65535] { R9744 += 1, R9680 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s3 [71, 65535] { R9744 += 1, R9680 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [0, 69] { R9744 += 1, R9680 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s3 [0, 69] { R9744 += 1, R9680 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s5 [70, 70] { R9744 += 1, R9680 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s6 [70, 70] { R9744 += 1, R9680 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s7 [70, 70] { R9744 += 1, R9680 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s9 [70, 70] { R9744 += 1, R9680 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [71, 65535] { R9744 += 1, R9680 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s3 [71, 65535] { R9744 += 1, R9680 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s14 [0, 69] { R9744 += 1, R9680 += 1, R176 += 1 };
  s3 -> s3 [0, 69] { R9744 += 1, R9680 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s15 [70, 70] { R9744 += 1, R9680 += 1, R176 += 1 };
  s3 -> s11 [70, 70] { R9744 += 1, R9680 += 1, R176 += 1 };
  s3 -> s7 [70, 70] { R9744 += 1, R9680 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s9 [70, 70] { R9744 += 1, R9680 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s14 [71, 65535] { R9744 += 1, R9680 += 1, R176 += 1 };
  s3 -> s3 [71, 65535] { R9744 += 1, R9680 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s1 [0, 69] { R9744 += 1, R9680 += 1, R175 += 1, R176 += 1 };
  s4 -> s2 [0, 69] { R9744 += 1, R9680 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s3 [0, 69] { R9744 += 1, R9680 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s4 [0, 65535] { R9744 += 1, R9679 += 1, R9680 += 1 };
  s4 -> s5 [70, 70] { R9744 += 1, R9680 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s6 [70, 70] { R9744 += 1, R9680 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s7 [70, 70] { R9744 += 1, R9680 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s8 [70, 70] { R9744 += 1, R9680 += 1, R175 += 1, R176 += 1 };
  s4 -> s9 [70, 70] { R9744 += 1, R9680 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s10 [70, 70] { R9744 += 1, R9680 += 1, R175 += 1, R176 += 1 };
  s4 -> s1 [71, 65535] { R9744 += 1, R9680 += 1, R175 += 1, R176 += 1 };
  s4 -> s2 [71, 65535] { R9744 += 1, R9680 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s3 [71, 65535] { R9744 += 1, R9680 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s5 -> s5 [0, 65535] { R9744 += 1, R9680 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s5 -> s7 [0, 65535] { R9744 += 1, R9680 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s7 -> s11 [0, 65535] { R9744 += 1, R9680 += 1, R176 += 1 };
  s7 -> s7 [0, 65535] { R9744 += 1, R9680 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s8 -> s5 [0, 65535] { R9744 += 1, R9680 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s8 -> s7 [0, 65535] { R9744 += 1, R9680 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s8 -> s8 [0, 65535] { R9744 += 1, R9680 += 1, R175 += 1, R176 += 1 };
  s11 -> s12 [0, 65535] { R9744 += 1 };
  s11 -> s11 [0, 65535] { R9744 += 1, R9680 += 1, R176 += 1 };
  s11 -> s13 [0, 65535];
  s12 -> s12 [0, 65535] { R9744 += 1 };
  s12 -> s13 [0, 65535];
  s13 -> s13 [0, 65535];
  s14 -> s14 [0, 69] { R9744 += 1, R9680 += 1, R176 += 1 };
  s14 -> s14 [0, 65535] { R9744 += 1 };
  s14 -> s13 [0, 65535];
  s14 -> s15 [70, 70] { R9744 += 1, R9680 += 1, R176 += 1 };
  s14 -> s11 [70, 70] { R9744 += 1, R9680 += 1, R176 += 1 };
  s14 -> s14 [71, 65535] { R9744 += 1, R9680 += 1, R176 += 1 };
  s15 -> s15 [0, 65535] { R9744 += 1 };
  s15 -> s13 [0, 65535];
  accepting s12, s13, s14, s15, s11;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R9746 += 1, R9682 += 1, R7353 += 1, R7354 += 1 };
  s0 -> s2 [0, 65535] { R9746 += 1, R9681 += 1, R9682 += 1 };
  s0 -> s0 [0, 65535] { R9745 += 1, R9746 += 1 };
  s0 -> s3 [70, 70] { R9746 += 1, R9682 += 1, R7353 += 1, R7354 += 1 };
  s0 -> s4 [70, 70] { R9746 += 1, R9682 += 1, R7353 += 1, R7354 += 1 };
  s0 -> s1 [71, 65535] { R9746 += 1, R9682 += 1, R7353 += 1, R7354 += 1 };
  s1 -> s1 [0, 69] { R9746 += 1, R9682 += 1, R7353 += 1, R7354 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R9746 += 1 };
  s1 -> s3 [70, 70] { R9746 += 1, R9682 += 1, R7353 += 1, R7354 += 1 };
  s1 -> s4 [70, 70] { R9746 += 1, R9682 += 1, R7353 += 1, R7354 += 1 };
  s1 -> s1 [71, 65535] { R9746 += 1, R9682 += 1, R7353 += 1, R7354 += 1 };
  s2 -> s1 [0, 69] { R9746 += 1, R9682 += 1, R7353 += 1, R7354 += 1 };
  s2 -> s2 [0, 65535] { R9746 += 1, R9681 += 1, R9682 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R9746 += 1, R9682 += 1, R7353 += 1, R7354 += 1 };
  s2 -> s4 [70, 70] { R9746 += 1, R9682 += 1, R7353 += 1, R7354 += 1 };
  s2 -> s1 [71, 65535] { R9746 += 1, R9682 += 1, R7353 += 1, R7354 += 1 };
  s3 -> s6 [0, 65535] { R9746 += 1 };
  s3 -> s3 [0, 65535] { R9746 += 1, R9682 += 1, R7353 += 1, R7354 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R9746 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9746 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R9748 += 1, R9684 += 1, R8794 += 1, R8796 += 1, R8797 += 1 };
  s0 -> s2 [0, 69] { R9748 += 1, R9684 += 1, R8793 += 1, R8794 += 1 };
  s0 -> s3 [0, 69] { R9748 += 1, R9684 += 1, R8794 += 1, R8795 += 1, R8796 += 1 };
  s0 -> s4 [0, 65535] { R9748 += 1, R9683 += 1, R9684 += 1 };
  s0 -> s0 [0, 65535] { R9747 += 1, R9748 += 1 };
  s0 -> s5 [70, 70] { R9748 += 1, R9684 += 1, R8794 += 1, R8795 += 1, R8796 += 1 };
  s0 -> s6 [70, 70] { R9748 += 1, R9684 += 1, R8794 += 1, R8796 += 1, R8797 += 1 };
  s0 -> s7 [70, 70] { R9748 += 1, R9684 += 1, R8793 += 1, R8794 += 1 };
  s0 -> s8 [70, 70] { R9748 += 1, R9684 += 1, R8793 += 1, R8794 += 1 };
  s0 -> s9 [70, 70] { R9748 += 1, R9684 += 1, R8794 += 1, R8796 += 1, R8797 += 1 };
  s0 -> s10 [70, 70] { R9748 += 1, R9684 += 1, R8794 += 1, R8795 += 1, R8796 += 1 };
  s0 -> s1 [71, 65535] { R9748 += 1, R9684 += 1, R8794 += 1, R8796 += 1, R8797 += 1 };
  s0 -> s2 [71, 65535] { R9748 += 1, R9684 += 1, R8793 += 1, R8794 += 1 };
  s0 -> s3 [71, 65535] { R9748 += 1, R9684 += 1, R8794 += 1, R8795 += 1, R8796 += 1 };
  s1 -> s1 [0, 69] { R9748 += 1, R9684 += 1, R8794 += 1, R8796 += 1, R8797 += 1 };
  s1 -> s14 [0, 69] { R9748 += 1, R9684 += 1, R8794 += 1 };
  s1 -> s6 [70, 70] { R9748 += 1, R9684 += 1, R8794 += 1, R8796 += 1, R8797 += 1 };
  s1 -> s9 [70, 70] { R9748 += 1, R9684 += 1, R8794 += 1, R8796 += 1, R8797 += 1 };
  s1 -> s15 [70, 70] { R9748 += 1, R9684 += 1, R8794 += 1 };
  s1 -> s11 [70, 70] { R9748 += 1, R9684 += 1, R8794 += 1 };
  s1 -> s1 [71, 65535] { R9748 += 1, R9684 += 1, R8794 += 1, R8796 += 1, R8797 += 1 };
  s1 -> s14 [71, 65535] { R9748 += 1, R9684 += 1, R8794 += 1 };
  s2 -> s1 [0, 69] { R9748 += 1, R9684 += 1, R8794 += 1, R8796 += 1, R8797 += 1 };
  s2 -> s2 [0, 69] { R9748 += 1, R9684 += 1, R8793 += 1, R8794 += 1 };
  s2 -> s3 [0, 69] { R9748 += 1, R9684 += 1, R8794 += 1, R8795 += 1, R8796 += 1 };
  s2 -> s5 [70, 70] { R9748 += 1, R9684 += 1, R8794 += 1, R8795 += 1, R8796 += 1 };
  s2 -> s6 [70, 70] { R9748 += 1, R9684 += 1, R8794 += 1, R8796 += 1, R8797 += 1 };
  s2 -> s7 [70, 70] { R9748 += 1, R9684 += 1, R8793 += 1, R8794 += 1 };
  s2 -> s8 [70, 70] { R9748 += 1, R9684 += 1, R8793 += 1, R8794 += 1 };
  s2 -> s9 [70, 70] { R9748 += 1, R9684 += 1, R8794 += 1, R8796 += 1, R8797 += 1 };
  s2 -> s10 [70, 70] { R9748 += 1, R9684 += 1, R8794 += 1, R8795 += 1, R8796 += 1 };
  s2 -> s1 [71, 65535] { R9748 += 1, R9684 += 1, R8794 += 1, R8796 += 1, R8797 += 1 };
  s2 -> s2 [71, 65535] { R9748 += 1, R9684 += 1, R8793 += 1, R8794 += 1 };
  s2 -> s3 [71, 65535] { R9748 += 1, R9684 += 1, R8794 += 1, R8795 += 1, R8796 += 1 };
  s3 -> s1 [0, 69] { R9748 += 1, R9684 += 1, R8794 += 1, R8796 += 1, R8797 += 1 };
  s3 -> s3 [0, 69] { R9748 += 1, R9684 += 1, R8794 += 1, R8795 += 1, R8796 += 1 };
  s3 -> s5 [70, 70] { R9748 += 1, R9684 += 1, R8794 += 1, R8795 += 1, R8796 += 1 };
  s3 -> s6 [70, 70] { R9748 += 1, R9684 += 1, R8794 += 1, R8796 += 1, R8797 += 1 };
  s3 -> s9 [70, 70] { R9748 += 1, R9684 += 1, R8794 += 1, R8796 += 1, R8797 += 1 };
  s3 -> s10 [70, 70] { R9748 += 1, R9684 += 1, R8794 += 1, R8795 += 1, R8796 += 1 };
  s3 -> s1 [71, 65535] { R9748 += 1, R9684 += 1, R8794 += 1, R8796 += 1, R8797 += 1 };
  s3 -> s3 [71, 65535] { R9748 += 1, R9684 += 1, R8794 += 1, R8795 += 1, R8796 += 1 };
  s4 -> s1 [0, 69] { R9748 += 1, R9684 += 1, R8794 += 1, R8796 += 1, R8797 += 1 };
  s4 -> s2 [0, 69] { R9748 += 1, R9684 += 1, R8793 += 1, R8794 += 1 };
  s4 -> s3 [0, 69] { R9748 += 1, R9684 += 1, R8794 += 1, R8795 += 1, R8796 += 1 };
  s4 -> s4 [0, 65535] { R9748 += 1, R9683 += 1, R9684 += 1 };
  s4 -> s5 [70, 70] { R9748 += 1, R9684 += 1, R8794 += 1, R8795 += 1, R8796 += 1 };
  s4 -> s6 [70, 70] { R9748 += 1, R9684 += 1, R8794 += 1, R8796 += 1, R8797 += 1 };
  s4 -> s7 [70, 70] { R9748 += 1, R9684 += 1, R8793 += 1, R8794 += 1 };
  s4 -> s8 [70, 70] { R9748 += 1, R9684 += 1, R8793 += 1, R8794 += 1 };
  s4 -> s9 [70, 70] { R9748 += 1, R9684 += 1, R8794 += 1, R8796 += 1, R8797 += 1 };
  s4 -> s10 [70, 70] { R9748 += 1, R9684 += 1, R8794 += 1, R8795 += 1, R8796 += 1 };
  s4 -> s1 [71, 65535] { R9748 += 1, R9684 += 1, R8794 += 1, R8796 += 1, R8797 += 1 };
  s4 -> s2 [71, 65535] { R9748 += 1, R9684 += 1, R8793 += 1, R8794 += 1 };
  s4 -> s3 [71, 65535] { R9748 += 1, R9684 += 1, R8794 += 1, R8795 += 1, R8796 += 1 };
  s6 -> s6 [0, 65535] { R9748 += 1, R9684 += 1, R8794 += 1, R8796 += 1, R8797 += 1 };
  s6 -> s11 [0, 65535] { R9748 += 1, R9684 += 1, R8794 += 1 };
  s8 -> s6 [0, 65535] { R9748 += 1, R9684 += 1, R8794 += 1, R8796 += 1, R8797 += 1 };
  s8 -> s8 [0, 65535] { R9748 += 1, R9684 += 1, R8793 += 1, R8794 += 1 };
  s8 -> s10 [0, 65535] { R9748 += 1, R9684 += 1, R8794 += 1, R8795 += 1, R8796 += 1 };
  s10 -> s6 [0, 65535] { R9748 += 1, R9684 += 1, R8794 += 1, R8796 += 1, R8797 += 1 };
  s10 -> s10 [0, 65535] { R9748 += 1, R9684 += 1, R8794 += 1, R8795 += 1, R8796 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [0, 65535] { R9748 += 1 };
  s11 -> s11 [0, 65535] { R9748 += 1, R9684 += 1, R8794 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R9748 += 1 };
  s14 -> s14 [0, 69] { R9748 += 1, R9684 += 1, R8794 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R9748 += 1 };
  s14 -> s15 [70, 70] { R9748 += 1, R9684 += 1, R8794 += 1 };
  s14 -> s11 [70, 70] { R9748 += 1, R9684 += 1, R8794 += 1 };
  s14 -> s14 [71, 65535] { R9748 += 1, R9684 += 1, R8794 += 1 };
  s15 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R9748 += 1 };
  accepting s12, s13, s14, s15, s11;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R9750 += 1, R9686 += 1, R9593 += 1, R9594 += 1 };
  s0 -> s2 [0, 69] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s0 -> s3 [0, 69] { R9750 += 1, R9686 += 1, R9594 += 1, R9595 += 1, R9596 += 1 };
  s0 -> s4 [0, 65535] { R9750 += 1, R9685 += 1, R9686 += 1 };
  s0 -> s0 [0, 65535] { R9749 += 1, R9750 += 1 };
  s0 -> s5 [70, 70] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s0 -> s6 [70, 70] { R9750 += 1, R9686 += 1, R9594 += 1, R9595 += 1, R9596 += 1 };
  s0 -> s7 [70, 70] { R9750 += 1, R9686 += 1, R9593 += 1, R9594 += 1 };
  s0 -> s8 [70, 70] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s0 -> s9 [70, 70] { R9750 += 1, R9686 += 1, R9594 += 1, R9595 += 1, R9596 += 1 };
  s0 -> s10 [70, 70] { R9750 += 1, R9686 += 1, R9593 += 1, R9594 += 1 };
  s0 -> s2 [71, 74] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s0 -> s1 [71, 65535] { R9750 += 1, R9686 += 1, R9593 += 1, R9594 += 1 };
  s0 -> s3 [71, 65535] { R9750 += 1, R9686 += 1, R9594 += 1, R9595 += 1, R9596 += 1 };
  s0 -> s11 [75, 75] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s0 -> s2 [77, 65535] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s1 -> s1 [0, 69] { R9750 += 1, R9686 += 1, R9593 += 1, R9594 += 1 };
  s1 -> s2 [0, 69] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s1 -> s3 [0, 69] { R9750 += 1, R9686 += 1, R9594 += 1, R9595 += 1, R9596 += 1 };
  s1 -> s5 [70, 70] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s1 -> s6 [70, 70] { R9750 += 1, R9686 += 1, R9594 += 1, R9595 += 1, R9596 += 1 };
  s1 -> s7 [70, 70] { R9750 += 1, R9686 += 1, R9593 += 1, R9594 += 1 };
  s1 -> s8 [70, 70] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s1 -> s9 [70, 70] { R9750 += 1, R9686 += 1, R9594 += 1, R9595 += 1, R9596 += 1 };
  s1 -> s10 [70, 70] { R9750 += 1, R9686 += 1, R9593 += 1, R9594 += 1 };
  s1 -> s2 [71, 74] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s1 -> s1 [71, 65535] { R9750 += 1, R9686 += 1, R9593 += 1, R9594 += 1 };
  s1 -> s3 [71, 65535] { R9750 += 1, R9686 += 1, R9594 += 1, R9595 += 1, R9596 += 1 };
  s1 -> s11 [75, 75] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s1 -> s2 [77, 65535] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s2 -> s2 [0, 69] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s2 -> s5 [70, 70] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s2 -> s8 [70, 70] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s2 -> s2 [71, 74] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s2 -> s11 [75, 75] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s2 -> s2 [77, 65535] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s3 -> s2 [0, 69] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s3 -> s3 [0, 69] { R9750 += 1, R9686 += 1, R9594 += 1, R9595 += 1, R9596 += 1 };
  s3 -> s5 [70, 70] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s3 -> s6 [70, 70] { R9750 += 1, R9686 += 1, R9594 += 1, R9595 += 1, R9596 += 1 };
  s3 -> s8 [70, 70] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s3 -> s9 [70, 70] { R9750 += 1, R9686 += 1, R9594 += 1, R9595 += 1, R9596 += 1 };
  s3 -> s2 [71, 74] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s3 -> s3 [71, 65535] { R9750 += 1, R9686 += 1, R9594 += 1, R9595 += 1, R9596 += 1 };
  s3 -> s11 [75, 75] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s3 -> s2 [77, 65535] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s4 -> s1 [0, 69] { R9750 += 1, R9686 += 1, R9593 += 1, R9594 += 1 };
  s4 -> s2 [0, 69] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s4 -> s3 [0, 69] { R9750 += 1, R9686 += 1, R9594 += 1, R9595 += 1, R9596 += 1 };
  s4 -> s4 [0, 65535] { R9750 += 1, R9685 += 1, R9686 += 1 };
  s4 -> s5 [70, 70] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s4 -> s6 [70, 70] { R9750 += 1, R9686 += 1, R9594 += 1, R9595 += 1, R9596 += 1 };
  s4 -> s7 [70, 70] { R9750 += 1, R9686 += 1, R9593 += 1, R9594 += 1 };
  s4 -> s8 [70, 70] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s4 -> s9 [70, 70] { R9750 += 1, R9686 += 1, R9594 += 1, R9595 += 1, R9596 += 1 };
  s4 -> s10 [70, 70] { R9750 += 1, R9686 += 1, R9593 += 1, R9594 += 1 };
  s4 -> s2 [71, 74] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s4 -> s1 [71, 65535] { R9750 += 1, R9686 += 1, R9593 += 1, R9594 += 1 };
  s4 -> s3 [71, 65535] { R9750 += 1, R9686 += 1, R9594 += 1, R9595 += 1, R9596 += 1 };
  s4 -> s11 [75, 75] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s4 -> s2 [77, 65535] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s5 -> s5 [0, 74] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s5 -> s14 [75, 75] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s5 -> s5 [77, 65535] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s6 -> s5 [0, 74] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s6 -> s6 [0, 65535] { R9750 += 1, R9686 += 1, R9594 += 1, R9595 += 1, R9596 += 1 };
  s6 -> s14 [75, 75] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s6 -> s5 [77, 65535] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s7 -> s5 [0, 74] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s7 -> s6 [0, 65535] { R9750 += 1, R9686 += 1, R9594 += 1, R9595 += 1, R9596 += 1 };
  s7 -> s7 [0, 65535] { R9750 += 1, R9686 += 1, R9593 += 1, R9594 += 1 };
  s7 -> s14 [75, 75] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s7 -> s5 [77, 65535] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s11 -> s11 [0, 69] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s11 -> s11 [0, 65535] { R9750 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [70, 70] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s11 -> s14 [70, 70] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s11 -> s11 [71, 75] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s11 -> s11 [77, 65535] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R9750 += 1 };
  s14 -> s14 [0, 75] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R9750 += 1 };
  s14 -> s14 [77, 65535] { R9750 += 1, R9686 += 1, R9594 += 1, R9596 += 1 };
  accepting s11, s12, s13, s14;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R9630 && R3 = R9750 && R25 - R9750 = -1 && R26 = R9750 && R27 - R9750 = -1 && R28 = R9750 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R9598 + -1*R9594 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R9598 + -1*R9594 - R130 = 0 && R129 + R9597 + R9593 = 0 && R131 + R9599 + R9595 = 0 && R132 + R9600 + R9596 = 0 && R9629 = 0 && R9661 = 0 && R9662 = 0 && R9671 = 0 && R9672 = 0 && R9679 = 0 && R9680 = 0 && R9683 = 0 && R9684 = 0 && R9685 = 0 && R9686 = 0 && R9687 = 0 && R9688 = R9750 && R9689 = 0 && R9690 = R9750 && R9691 = 0 && R9692 = R9750 && R9693 = 0 && R9694 = R9750 && R9695 = 0 && R9696 = R9750 && R9697 = 0 && R9698 = R9750 && R9699 = 0 && R9700 = R9750 && R9701 = 0 && R9702 = R9750 && R9703 = 0 && R9704 = R9750 && R9705 = 0 && R9706 = R9750 && R9707 = 0 && R9708 = R9750 && R9709 = 0 && R9710 = R9750 && R9711 = 0 && R9712 = R9750 && R9713 = 0 && R9714 = R9750 && R9715 = 0 && R9716 = R9750 && R9717 = 0 && R9718 = R9750 && R9719 = 0 && R9720 = R9750 && R9721 = 0 && R9722 = R9750 && R9723 = 0 && R9724 = R9750 && R9725 = 0 && R9726 = R9750 && R9727 = 0 && R9728 = R9750 && R9729 = 0 && R9730 = R9750 && R9731 = 0 && R9732 = R9750 && R9733 = 0 && R9734 = R9750 && R9735 = 0 && R9736 = R9750 && R9737 = 0 && R9738 = R9750 && R9739 = 0 && R9740 = R9750 && R9741 = 0 && R9742 = R9750 && R9743 = 0 && R9744 = R9750 && R9745 = 0 && R9746 = R9750 && R9747 = 0 && R9748 = R9750 && R9749 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R9598 + -1*R9594 - R130 < 1 && -1 < R9630 && 0 < R9750 && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R9598 + -1*R9594 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R7359 + R7355 = 0 && R114 + R7360 + R7356 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R9598 + -1*R9594 - R130 = 0 || R130 + R9598 + R9594 < 1) && (R81 + R158 + R155 = 0 || R130 + R9598 + R9594 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R9598 + -1*R9594 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R9598 + R9594 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R9598 + -1*R9594 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R9598 + R9594 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R9598 + -1*R9594 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R9598 + R9594 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R7357 + R7353 != 0 || R112 + R7358 + R7354 + -1*R9598 + -1*R9594 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R9598 + R9594 = 0)) && (R113 + R7359 + R7355 != 0 || R83 + R160 + R157 + -1*R7360 + -1*R7356 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R8798 + R8793 != 0 || R120 + R8799 + R8794 + -1*R9598 + -1*R9594 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R9598 + R9594 = 0)) && (R9601 != 0 || R9602 = R9630 || (R22 = 0 && R9630 = 0)) && (R9603 != 0 || R9604 = R9630 || (R22 = 0 && R9630 = 0)) && (R9605 != 0 || R9606 = R9630 || (R22 = 0 && R9630 = 0)) && (R9607 != 0 || R9608 = R9630 || (R22 = 0 && R9630 = 0)) && (R9609 != 0 || R9610 = R9630 || (R22 = 0 && R9630 = 0)) && (R9611 != 0 || R9612 = R9630 || (R22 = 0 && R9630 = 0)) && (R9613 != 0 || R9614 = R9630 || (R22 = 0 && R9630 = 0)) && (R9615 != 0 || R9616 = R9630 || (R22 = 0 && R9630 = 0)) && (R9617 != 0 || R9618 = R9630 || (R22 = 0 && R9630 = 0)) && (R9619 != 0 || R9620 = R9630 || (R22 = 0 && R9630 = 0)) && (R9621 != 0 || R9622 = R9630 || (R22 = 0 && R9630 = 0)) && (R9623 != 0 || R9624 = R9630 || (R22 = 0 && R9630 = 0)) && (R9625 != 0 || R9626 = R9630 || (R22 = 0 && R9630 = 0)) && (R9627 != 0 || R9628 = R9630 || (R22 = 0 && R9630 = 0)) && (R23 = 0 || (R9659 = 0 && R9660 = 0)) && (R23 = 0 || (R9663 = 0 && R9664 = 0)) && (R23 = 0 || (R9665 = 0 && R9666 = 0)) && (R23 = 0 || (R9667 = 0 && R9668 = 0)) && (R23 = 0 || (R9669 = 0 && R9670 = 0)) && (R23 = 0 || (R9673 = 0 && R9674 = 0)) && (R23 = 0 || (R9675 = 0 && R9676 = 0)) && (R23 = 0 || (R9677 = 0 && R9678 = 0)) && (R23 = 0 || (R9681 = 0 && R9682 = 0)) && (R24 = 0 || (R9631 = 0 && R9632 = 0)) && (R24 = 0 || (R9633 = 0 && R9634 = 0)) && (R24 = 0 || (R9635 = 0 && R9636 = 0)) && (R24 = 0 || (R9637 = 0 && R9638 = 0)) && (R24 = 0 || (R9639 = 0 && R9640 = 0)) && (R24 = 0 || (R9641 = 0 && R9642 = 0)) && (R24 = 0 || (R9643 = 0 && R9644 = 0)) && (R24 = 0 || (R9645 = 0 && R9646 = 0)) && (R24 = 0 || (R9647 = 0 && R9648 = 0)) && (R24 = 0 || (R9649 = 0 && R9650 = 0)) && (R24 = 0 || (R9651 = 0 && R9652 = 0)) && (R24 = 0 || (R9653 = 0 && R9654 = 0)) && (R24 = 0 || (R9655 = 0 && R9656 = 0)) && (R24 = 0 || (R9657 = 0 && R9658 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R9598 + R9594 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R9598 + R9594 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R9598 + R9594 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R7357 + R7353 = 0 || (R83 + R160 + R157 = 0 && R130 + R9598 + R9594 = 0)) && (R113 + R7359 + R7355 = 0 || R83 + R160 + R157 < 1) && (R119 + R8798 + R8793 = 0 || (R83 + R160 + R157 = 0 && R130 + R9598 + R9594 = 0)) && (R123 + R8802 + R8797 = 0 || (R121 + R8800 + R8795 = 0 && R122 + R8801 + R8796 = 0)) && (R9601 = 0 || (R22 = 0 && R9630 = 0)) && (R9603 = 0 || (R22 = 0 && R9630 = 0)) && (R9605 = 0 || (R22 = 0 && R9630 = 0)) && (R9607 = 0 || (R22 = 0 && R9630 = 0)) && (R9609 = 0 || (R22 = 0 && R9630 = 0)) && (R9611 = 0 || (R22 = 0 && R9630 = 0)) && (R9613 = 0 || (R22 = 0 && R9630 = 0)) && (R9615 = 0 || (R22 = 0 && R9630 = 0)) && (R9617 = 0 || (R22 = 0 && R9630 = 0)) && (R9619 = 0 || (R22 = 0 && R9630 = 0)) && (R9621 = 0 || (R22 = 0 && R9630 = 0)) && (R9623 = 0 || (R22 = 0 && R9630 = 0)) && (R9625 = 0 || (R22 = 0 && R9630 = 0)) && (R9627 = 0 || (R22 = 0 && R9630 = 0));
// End of Parikh automata intersection problem
