// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R10225, R10226, R10227, R10228, R10229, R10230, R10231, R10232, R10233, R10234, R103, R10393, R10394, R10395, R10396, R10397, R10398, R10399, R104, R10400, R10401, R10402, R10403, R10404, R10405, R10406, R10407, R10408, R10409, R10410, R10411, R10412, R10413, R10414, R10415, R10416, R10417, R10418, R10419, R10420, R10421, R10422, R10423, R10424, R10425, R10426, R10427, R10428, R10429, R10430, R10431, R10432, R10433, R10434, R10435, R10436, R10437, R10438, R10439, R10440, R10441, R10442, R10443, R10444, R10445, R10446, R10447, R10448, R10449, R10450, R10451, R10452, R10453, R10454, R10455, R10456, R10457, R10458, R10459, R10460, R10461, R10462, R10463, R10464, R10465, R10466, R10467, R10468, R10469, R10470, R10471, R10472, R10473, R10474, R10475, R10476, R10477, R10478, R10479, R10480, R10481, R10482, R10483, R10484, R10485, R10486, R10487, R10488, R10489, R10490, R10491, R10492, R10493, R10494, R10495, R10496, R10497, R10498, R10499, R105, R10500, R10501, R10502, R10503, R10504, R10505, R10506, R10507, R10508, R10509, R10510, R10511, R10512, R10513, R10514, R10515, R10516, R10517, R10518, R10519, R10520, R10521, R10522, R10523, R10524, R10525, R10526, R10527, R10528, R10529, R10530, R10531, R10532, R10533, R10534, R10535, R10536, R10537, R10538, R10539, R10540, R10541, R10542, R10543, R10544, R10545, R10546, R10547, R10548, R10549, R10550, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R2, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R5, R63, R65, R67, R68, R69, R73, R7353, R7354, R7355, R7356, R7357, R7358, R7359, R7360, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R26 += 1 };
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s1 [0, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R10432 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R10431 += 1, R10432 += 1 };
  s1 -> s1 [0, 65535] { R10432 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R10434 += 1 };
  s0 -> s0 [0, 65535] { R10433 += 1, R10434 += 1 };
  s0 -> s2 [70, 70] { R10434 += 1 };
  s0 -> s3 [70, 70] { R10434 += 1 };
  s0 -> s1 [76, 65535] { R10434 += 1 };
  s1 -> s1 [0, 69] { R10434 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10434 += 1 };
  s1 -> s3 [70, 70] { R10434 += 1 };
  s1 -> s1 [76, 65535] { R10434 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R10434 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R10434 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R10436 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R10435 += 1, R10436 += 1 };
  s0 -> s2 [70, 70] { R10436 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R10436 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R10436 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R10436 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10436 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R10436 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R10436 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R10436 += 1, R63 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R10438 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R10437 += 1, R10438 += 1 };
  s0 -> s2 [70, 70] { R10438 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R10438 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R10438 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R10438 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10438 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R10438 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R10438 += 1, R65 += 1 };
  s2 -> s2 [0, 65535] { R10438 += 1, R65 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R10440 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R10439 += 1, R10440 += 1 };
  s0 -> s2 [70, 70] { R10440 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R10440 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R10440 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R10440 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10440 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R10440 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R10440 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535] { R10440 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R10442 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R10441 += 1, R10442 += 1 };
  s0 -> s2 [70, 70] { R10442 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R10442 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R10442 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R10442 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10442 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R10442 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R10442 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R10442 += 1, R73 += 1, R74 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R10444 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R10443 += 1, R10444 += 1 };
  s0 -> s2 [70, 70] { R10444 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R10444 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R10444 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R10444 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10444 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R10444 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R10444 += 1, R77 += 1, R78 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R10444 += 1, R77 += 1, R78 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R10446 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R10445 += 1, R10446 += 1 };
  s0 -> s2 [70, 70] { R10446 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R10446 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R10446 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R10446 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10446 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R10446 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R10446 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535] { R10446 += 1, R81 += 1, R82 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R10448 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R10447 += 1, R10448 += 1 };
  s0 -> s2 [70, 70] { R10448 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R10448 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R10448 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R10448 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10448 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R10448 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R10448 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R10448 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R10450 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R10449 += 1, R10450 += 1 };
  s0 -> s2 [70, 70] { R10450 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R10450 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R10450 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R10450 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10450 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R10450 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R10450 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R10450 += 1, R93 += 1, R94 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R10452 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R10451 += 1, R10452 += 1 };
  s0 -> s2 [70, 70] { R10452 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R10452 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R10452 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R10452 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10452 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R10452 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R10452 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535] { R10452 += 1, R101 += 1, R102 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R10454 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R10453 += 1, R10454 += 1 };
  s0 -> s2 [70, 70] { R10454 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R10454 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R10454 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R10454 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10454 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R10454 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R10454 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535] { R10454 += 1, R111 += 1, R112 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R10456 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R10455 += 1, R10456 += 1 };
  s0 -> s2 [70, 70] { R10456 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R10456 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R10456 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R10456 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10456 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R10456 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R10456 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R10456 += 1, R119 += 1, R120 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R10458 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R10457 += 1, R10458 += 1 };
  s0 -> s2 [70, 70] { R10458 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R10458 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R10458 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R10458 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10458 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R10458 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R10458 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535] { R10458 += 1, R129 += 1, R130 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R10488 += 1 };
  s0 -> s0 [0, 65535] { R10487 += 1, R10488 += 1 };
  s0 -> s2 [70, 70] { R10488 += 1 };
  s0 -> s1 [71, 65535] { R10488 += 1 };
  s1 -> s1 [0, 69] { R10488 += 1 };
  s1 -> s2 [70, 70] { R10488 += 1 };
  s1 -> s1 [71, 65535] { R10488 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R10488 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R10490 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R10489 += 1, R10490 += 1 };
  s1 -> s1 [0, 65535] { R10490 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R10492 += 1 };
  s0 -> s0 [0, 65535] { R10491 += 1, R10492 += 1 };
  s0 -> s2 [0, 65535] { R10492 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R10492 += 1 };
  s0 -> s1 [71, 65535] { R10492 += 1 };
  s1 -> s1 [0, 69] { R10492 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R10492 += 1 };
  s1 -> s1 [71, 65535] { R10492 += 1 };
  s2 -> s1 [0, 69] { R10492 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R10492 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R10492 += 1 };
  s2 -> s1 [71, 65535] { R10492 += 1 };
  s3 -> s3 [0, 65535] { R10492 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R10494 += 1, R10402 += 1 };
  s0 -> s0 [0, 65535] { R10493 += 1, R10494 += 1 };
  s0 -> s2 [0, 65535] { R10494 += 1, R10401 += 1, R10402 += 1 };
  s0 -> s1 [71, 65535] { R10494 += 1, R10402 += 1 };
  s1 -> s1 [0, 69] { R10494 += 1, R10402 += 1 };
  s1 -> s1 [0, 65535] { R10494 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R10494 += 1, R10402 += 1 };
  s2 -> s1 [0, 69] { R10494 += 1, R10402 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R10494 += 1, R10401 += 1, R10402 += 1 };
  s2 -> s1 [71, 65535] { R10494 += 1, R10402 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R10496 += 1, R10404 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R10495 += 1, R10496 += 1 };
  s0 -> s2 [0, 65535] { R10496 += 1, R10403 += 1, R10404 += 1 };
  s1 -> s1 [0, 65535] { R10496 += 1, R10404 += 1, R22 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R10496 += 1 };
  s2 -> s1 [0, 65535] { R10496 += 1, R10404 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R10496 += 1, R10403 += 1, R10404 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R10496 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R10498 += 1, R10406 += 1 };
  s0 -> s2 [0, 65535] { R10498 += 1, R10405 += 1, R10406 += 1 };
  s0 -> s0 [0, 65535] { R10497 += 1, R10498 += 1 };
  s0 -> s1 [75, 65535] { R10498 += 1, R10406 += 1 };
  s1 -> s1 [0, 70] { R10498 += 1, R10406 += 1 };
  s1 -> s1 [0, 65535] { R10498 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R10498 += 1, R10406 += 1 };
  s2 -> s1 [0, 70] { R10498 += 1, R10406 += 1 };
  s2 -> s2 [0, 65535] { R10498 += 1, R10405 += 1, R10406 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R10498 += 1, R10406 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R10500 += 1, R10407 += 1, R10408 += 1 };
  s0 -> s2 [0, 65535] { R10500 += 1, R10408 += 1, R138 += 1 };
  s0 -> s0 [0, 65535] { R10499 += 1, R10500 += 1 };
  s1 -> s1 [0, 65535] { R10500 += 1, R10407 += 1, R10408 += 1 };
  s1 -> s2 [0, 65535] { R10500 += 1, R10408 += 1, R138 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R10500 += 1, R10408 += 1, R138 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R10500 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R10500 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R10502 += 1, R10410 += 1 };
  s0 -> s0 [0, 65535] { R10501 += 1, R10502 += 1 };
  s0 -> s2 [0, 65535] { R10502 += 1, R10409 += 1, R10410 += 1 };
  s0 -> s3 [0, 65535] { R10502 += 1, R10410 += 1, R140 += 1 };
  s0 -> s1 [76, 65535] { R10502 += 1, R10410 += 1 };
  s1 -> s1 [0, 74] { R10502 += 1, R10410 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R10502 += 1 };
  s1 -> s1 [76, 65535] { R10502 += 1, R10410 += 1 };
  s2 -> s1 [0, 74] { R10502 += 1, R10410 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R10502 += 1, R10409 += 1, R10410 += 1 };
  s2 -> s3 [0, 65535] { R10502 += 1, R10410 += 1, R140 += 1 };
  s2 -> s1 [76, 65535] { R10502 += 1, R10410 += 1 };
  s3 -> s1 [0, 74] { R10502 += 1, R10410 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R10502 += 1 };
  s3 -> s3 [0, 65535] { R10502 += 1, R10410 += 1, R140 += 1 };
  s3 -> s1 [76, 65535] { R10502 += 1, R10410 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R10502 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R10503 += 1, R10504 += 1 };
  s0 -> s1 [0, 65535] { R10504 += 1, R10412 += 1, R145 += 1, R146 += 1 };
  s0 -> s2 [0, 65535] { R10504 += 1, R10411 += 1, R10412 += 1 };
  s0 -> s3 [0, 65535] { R10504 += 1, R10412 += 1, R144 += 1, R145 += 1 };
  s1 -> s1 [0, 65535] { R10504 += 1, R10412 += 1, R145 += 1, R146 += 1 };
  s1 -> s4 [0, 65535] { R10504 += 1 };
  s1 -> s6 [0, 65535] { R10504 += 1, R10412 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R10504 += 1, R10412 += 1, R145 += 1, R146 += 1 };
  s2 -> s2 [0, 65535] { R10504 += 1, R10411 += 1, R10412 += 1 };
  s2 -> s3 [0, 65535] { R10504 += 1, R10412 += 1, R144 += 1, R145 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R10504 += 1, R10412 += 1, R145 += 1, R146 += 1 };
  s3 -> s3 [0, 65535] { R10504 += 1, R10412 += 1, R144 += 1, R145 += 1 };
  s3 -> s4 [0, 65535] { R10504 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10504 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R10504 += 1 };
  s6 -> s6 [0, 65535] { R10504 += 1, R10412 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R10506 += 1, R10414 += 1, R150 += 1 };
  s0 -> s0 [0, 65535] { R10505 += 1, R10506 += 1 };
  s0 -> s2 [0, 65535] { R10506 += 1, R10414 += 1, R149 += 1, R150 += 1 };
  s0 -> s3 [0, 65535] { R10506 += 1, R10413 += 1, R10414 += 1 };
  s0 -> s4 [75, 75] { R10506 += 1, R10414 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R10506 += 1, R10414 += 1, R150 += 1 };
  s0 -> s1 [77, 65535] { R10506 += 1, R10414 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R10506 += 1, R10414 += 1, R150 += 1 };
  s1 -> s6 [0, 65535] { R10506 += 1 };
  s1 -> s1 [0, 65535] { R10506 += 1, R10414 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [75, 75] { R10506 += 1, R10414 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R10506 += 1, R10414 += 1, R150 += 1 };
  s1 -> s1 [77, 65535] { R10506 += 1, R10414 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R10506 += 1, R10414 += 1, R150 += 1 };
  s2 -> s6 [0, 65535] { R10506 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s2 [0, 65535] { R10506 += 1, R10414 += 1, R149 += 1, R150 += 1 };
  s2 -> s4 [75, 75] { R10506 += 1, R10414 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R10506 += 1, R10414 += 1, R150 += 1 };
  s2 -> s1 [77, 65535] { R10506 += 1, R10414 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R10506 += 1, R10414 += 1, R150 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s2 [0, 65535] { R10506 += 1, R10414 += 1, R149 += 1, R150 += 1 };
  s3 -> s3 [0, 65535] { R10506 += 1, R10413 += 1, R10414 += 1 };
  s3 -> s4 [75, 75] { R10506 += 1, R10414 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R10506 += 1, R10414 += 1, R150 += 1 };
  s3 -> s1 [77, 65535] { R10506 += 1, R10414 += 1, R150 += 1 };
  s4 -> s6 [0, 65535] { R10506 += 1 };
  s4 -> s4 [0, 65535] { R10506 += 1, R10414 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 75] { R10506 += 1, R10414 += 1, R150 += 1 };
  s5 -> s6 [0, 65535] { R10506 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R10506 += 1, R10414 += 1 };
  s5 -> s5 [77, 65535] { R10506 += 1, R10414 += 1, R150 += 1 };
  s6 -> s6 [0, 65535] { R10506 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R10508 += 1, R10415 += 1, R10416 += 1 };
  s0 -> s0 [0, 65535] { R10507 += 1, R10508 += 1 };
  s0 -> s2 [0, 65535] { R10508 += 1, R10416 += 1, R154 += 1 };
  s0 -> s3 [0, 65535] { R10508 += 1, R10416 += 1 };
  s1 -> s1 [0, 65535] { R10508 += 1, R10415 += 1, R10416 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R10508 += 1, R10416 += 1, R154 += 1 };
  s1 -> s3 [0, 65535] { R10508 += 1, R10416 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R10508 += 1 };
  s2 -> s2 [0, 65535] { R10508 += 1, R10416 += 1, R154 += 1 };
  s2 -> s3 [0, 65535] { R10508 += 1, R10416 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R10508 += 1 };
  s3 -> s3 [0, 65535] { R10508 += 1, R10416 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R10508 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R10510 += 1, R10418 += 1, R158 += 1, R159 += 1 };
  s0 -> s2 [0, 65535] { R10510 += 1, R10417 += 1, R10418 += 1 };
  s0 -> s3 [0, 65535] { R10510 += 1, R10418 += 1, R159 += 1, R160 += 1 };
  s0 -> s0 [0, 65535] { R10509 += 1, R10510 += 1 };
  s1 -> s1 [0, 65535] { R10510 += 1, R10418 += 1, R158 += 1, R159 += 1 };
  s1 -> s4 [0, 65535] { R10510 += 1 };
  s1 -> s3 [0, 65535] { R10510 += 1, R10418 += 1, R159 += 1, R160 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s1 [0, 65535] { R10510 += 1, R10418 += 1, R158 += 1, R159 += 1 };
  s2 -> s2 [0, 65535] { R10510 += 1, R10417 += 1, R10418 += 1 };
  s2 -> s3 [0, 65535] { R10510 += 1, R10418 += 1, R159 += 1, R160 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R10510 += 1 };
  s3 -> s3 [0, 65535] { R10510 += 1, R10418 += 1, R159 += 1, R160 += 1 };
  s3 -> s5 [0, 65535] { R10510 += 1, R10418 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R10510 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s4 [0, 65535] { R10510 += 1 };
  s5 -> s5 [0, 65535] { R10510 += 1, R10418 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R10512 += 1, R10420 += 1, R165 += 1 };
  s0 -> s0 [0, 65535] { R10511 += 1, R10512 += 1 };
  s0 -> s2 [0, 65535] { R10512 += 1, R10420 += 1, R165 += 1, R166 += 1 };
  s0 -> s3 [0, 65535] { R10512 += 1, R10419 += 1, R10420 += 1 };
  s0 -> s4 [0, 65535] { R10512 += 1, R10420 += 1, R164 += 1, R165 += 1 };
  s0 -> s1 [76, 65535] { R10512 += 1, R10420 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R10512 += 1, R10420 += 1, R165 += 1 };
  s1 -> s5 [0, 65535] { R10512 += 1 };
  s1 -> s1 [0, 65535] { R10512 += 1, R10420 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [76, 65535] { R10512 += 1, R10420 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R10512 += 1, R10420 += 1, R165 += 1 };
  s2 -> s7 [0, 65535] { R10512 += 1, R10420 += 1 };
  s2 -> s2 [0, 65535] { R10512 += 1, R10420 += 1, R165 += 1, R166 += 1 };
  s2 -> s5 [0, 65535] { R10512 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [76, 65535] { R10512 += 1, R10420 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R10512 += 1, R10420 += 1, R165 += 1 };
  s3 -> s2 [0, 65535] { R10512 += 1, R10420 += 1, R165 += 1, R166 += 1 };
  s3 -> s3 [0, 65535] { R10512 += 1, R10419 += 1, R10420 += 1 };
  s3 -> s4 [0, 65535] { R10512 += 1, R10420 += 1, R164 += 1, R165 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [76, 65535] { R10512 += 1, R10420 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R10512 += 1, R10420 += 1, R165 += 1 };
  s4 -> s2 [0, 65535] { R10512 += 1, R10420 += 1, R165 += 1, R166 += 1 };
  s4 -> s5 [0, 65535] { R10512 += 1 };
  s4 -> s4 [0, 65535] { R10512 += 1, R10420 += 1, R164 += 1, R165 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s1 [76, 65535] { R10512 += 1, R10420 += 1, R165 += 1 };
  s5 -> s5 [0, 65535] { R10512 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R10512 += 1, R10420 += 1 };
  s7 -> s5 [0, 65535] { R10512 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R10514 += 1, R10422 += 1, R172 += 1, R174 += 1 };
  s0 -> s2 [0, 65535] { R10514 += 1, R10422 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s0 [0, 65535] { R10513 += 1, R10514 += 1 };
  s0 -> s3 [0, 65535] { R10514 += 1, R10422 += 1, R171 += 1, R172 += 1 };
  s0 -> s4 [0, 65535] { R10514 += 1, R10421 += 1, R10422 += 1 };
  s0 -> s1 [76, 65535] { R10514 += 1, R10422 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R10514 += 1, R10422 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 65535] { R10514 += 1, R10422 += 1, R172 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R10514 += 1 };
  s1 -> s7 [0, 65535] { R10514 += 1, R10422 += 1 };
  s1 -> s1 [76, 65535] { R10514 += 1, R10422 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R10514 += 1, R10422 += 1, R172 += 1, R174 += 1 };
  s2 -> s2 [0, 65535] { R10514 += 1, R10422 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R10514 += 1 };
  s2 -> s7 [0, 65535] { R10514 += 1, R10422 += 1 };
  s2 -> s1 [76, 65535] { R10514 += 1, R10422 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R10514 += 1, R10422 += 1, R172 += 1, R174 += 1 };
  s3 -> s2 [0, 65535] { R10514 += 1, R10422 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R10514 += 1, R10422 += 1, R171 += 1, R172 += 1 };
  s3 -> s6 [0, 65535] { R10514 += 1 };
  s3 -> s1 [76, 65535] { R10514 += 1, R10422 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R10514 += 1, R10422 += 1, R172 += 1, R174 += 1 };
  s4 -> s2 [0, 65535] { R10514 += 1, R10422 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R10514 += 1, R10422 += 1, R171 += 1, R172 += 1 };
  s4 -> s4 [0, 65535] { R10514 += 1, R10421 += 1, R10422 += 1 };
  s4 -> s1 [76, 65535] { R10514 += 1, R10422 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10514 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R10514 += 1 };
  s7 -> s7 [0, 65535] { R10514 += 1, R10422 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R10516 += 1, R10423 += 1, R10424 += 1 };
  s0 -> s2 [0, 65535] { R10516 += 1, R10424 += 1 };
  s0 -> s0 [0, 65535] { R10515 += 1, R10516 += 1 };
  s0 -> s3 [0, 65535] { R10516 += 1, R10424 += 1, R181 += 1 };
  s1 -> s1 [0, 65535] { R10516 += 1, R10423 += 1, R10424 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R10516 += 1, R10424 += 1 };
  s1 -> s3 [0, 65535] { R10516 += 1, R10424 += 1, R181 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R10516 += 1, R10424 += 1 };
  s2 -> s5 [0, 65535] { R10516 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R10516 += 1, R10424 += 1 };
  s3 -> s5 [0, 65535] { R10516 += 1 };
  s3 -> s3 [0, 65535] { R10516 += 1, R10424 += 1, R181 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R10516 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s0 [0, 65535] { R10517 += 1, R10518 += 1 };
  s0 -> s1 [0, 65535] { R10518 += 1, R10426 += 1, R7358 += 1, R7359 += 1, R7360 += 1 };
  s0 -> s2 [0, 65535] { R10518 += 1, R10426 += 1, R7357 += 1, R7358 += 1 };
  s0 -> s3 [0, 65535] { R10518 += 1, R10425 += 1, R10426 += 1 };
  s0 -> s4 [0, 65535] { R10518 += 1, R10426 += 1, R7358 += 1, R7360 += 1 };
  s1 -> s1 [0, 65535] { R10518 += 1, R10426 += 1, R7358 += 1, R7359 += 1, R7360 += 1 };
  s1 -> s6 [0, 65535] { R10518 += 1, R10426 += 1 };
  s1 -> s4 [0, 65535] { R10518 += 1, R10426 += 1, R7358 += 1, R7360 += 1 };
  s1 -> s7 [0, 65535] { R10518 += 1 };
  s1 -> s8 [0, 65535];
  s2 -> s1 [0, 65535] { R10518 += 1, R10426 += 1, R7358 += 1, R7359 += 1, R7360 += 1 };
  s2 -> s2 [0, 65535] { R10518 += 1, R10426 += 1, R7357 += 1, R7358 += 1 };
  s2 -> s4 [0, 65535] { R10518 += 1, R10426 += 1, R7358 += 1, R7360 += 1 };
  s2 -> s7 [0, 65535] { R10518 += 1 };
  s2 -> s8 [0, 65535];
  s3 -> s1 [0, 65535] { R10518 += 1, R10426 += 1, R7358 += 1, R7359 += 1, R7360 += 1 };
  s3 -> s2 [0, 65535] { R10518 += 1, R10426 += 1, R7357 += 1, R7358 += 1 };
  s3 -> s3 [0, 65535] { R10518 += 1, R10425 += 1, R10426 += 1 };
  s3 -> s4 [0, 65535] { R10518 += 1, R10426 += 1, R7358 += 1, R7360 += 1 };
  s3 -> s8 [0, 65535];
  s4 -> s5 [0, 65535] { R10518 += 1, R10426 += 1, R7358 += 1 };
  s4 -> s6 [0, 65535] { R10518 += 1, R10426 += 1 };
  s4 -> s4 [0, 65535] { R10518 += 1, R10426 += 1, R7358 += 1, R7360 += 1 };
  s4 -> s7 [0, 65535] { R10518 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R10518 += 1, R10426 += 1, R7358 += 1 };
  s5 -> s6 [0, 65535] { R10518 += 1, R10426 += 1 };
  s5 -> s7 [0, 65535] { R10518 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R10518 += 1, R10426 += 1 };
  s6 -> s7 [0, 65535] { R10518 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R10518 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R10520 += 1, R10427 += 1, R10428 += 1 };
  s0 -> s2 [0, 65535] { R10520 += 1, R10428 += 1 };
  s0 -> s3 [0, 65535] { R10520 += 1, R10428 += 1, R10231 += 1, R10233 += 1, R10234 += 1 };
  s0 -> s4 [0, 65535] { R10520 += 1, R10428 += 1, R10231 += 1, R10232 += 1, R10233 += 1 };
  s0 -> s0 [0, 65535] { R10519 += 1, R10520 += 1 };
  s1 -> s1 [0, 65535] { R10520 += 1, R10427 += 1, R10428 += 1 };
  s1 -> s2 [0, 65535] { R10520 += 1, R10428 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R10520 += 1, R10428 += 1, R10231 += 1, R10233 += 1, R10234 += 1 };
  s1 -> s4 [0, 65535] { R10520 += 1, R10428 += 1, R10231 += 1, R10232 += 1, R10233 += 1 };
  s2 -> s2 [0, 65535] { R10520 += 1, R10428 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R10520 += 1 };
  s3 -> s7 [0, 65535] { R10520 += 1, R10428 += 1, R10231 += 1 };
  s3 -> s2 [0, 65535] { R10520 += 1, R10428 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R10520 += 1 };
  s3 -> s3 [0, 65535] { R10520 += 1, R10428 += 1, R10231 += 1, R10233 += 1, R10234 += 1 };
  s4 -> s2 [0, 65535] { R10520 += 1, R10428 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R10520 += 1 };
  s4 -> s3 [0, 65535] { R10520 += 1, R10428 += 1, R10231 += 1, R10233 += 1, R10234 += 1 };
  s4 -> s4 [0, 65535] { R10520 += 1, R10428 += 1, R10231 += 1, R10232 += 1, R10233 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10520 += 1 };
  s7 -> s7 [0, 65535] { R10520 += 1, R10428 += 1, R10231 += 1 };
  s7 -> s2 [0, 65535] { R10520 += 1, R10428 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R10520 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 74] { R10522 += 1, R10430 += 1, R10398 += 1, R10400 += 1 };
  s0 -> s2 [0, 65535] { R10522 += 1, R10429 += 1, R10430 += 1 };
  s0 -> s3 [0, 65535] { R10522 += 1, R10430 += 1 };
  s0 -> s0 [0, 65535] { R10521 += 1, R10522 += 1 };
  s0 -> s1 [0, 65535] { R10522 += 1, R10430 += 1, R10398 += 1 };
  s0 -> s4 [75, 75] { R10522 += 1, R10430 += 1, R10398 += 1, R10400 += 1 };
  s0 -> s5 [75, 75] { R10522 += 1, R10430 += 1, R10398 += 1, R10400 += 1 };
  s0 -> s1 [76, 65535] { R10522 += 1, R10430 += 1, R10398 += 1, R10400 += 1 };
  s1 -> s1 [0, 74] { R10522 += 1, R10430 += 1, R10398 += 1, R10400 += 1 };
  s1 -> s6 [0, 65535] { R10522 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s3 [0, 65535] { R10522 += 1, R10430 += 1 };
  s1 -> s1 [0, 65535] { R10522 += 1, R10430 += 1, R10398 += 1 };
  s1 -> s4 [75, 75] { R10522 += 1, R10430 += 1, R10398 += 1, R10400 += 1 };
  s1 -> s5 [75, 75] { R10522 += 1, R10430 += 1, R10398 += 1, R10400 += 1 };
  s1 -> s1 [76, 65535] { R10522 += 1, R10430 += 1, R10398 += 1, R10400 += 1 };
  s2 -> s1 [0, 74] { R10522 += 1, R10430 += 1, R10398 += 1, R10400 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s2 [0, 65535] { R10522 += 1, R10429 += 1, R10430 += 1 };
  s2 -> s3 [0, 65535] { R10522 += 1, R10430 += 1 };
  s2 -> s1 [0, 65535] { R10522 += 1, R10430 += 1, R10398 += 1 };
  s2 -> s4 [75, 75] { R10522 += 1, R10430 += 1, R10398 += 1, R10400 += 1 };
  s2 -> s5 [75, 75] { R10522 += 1, R10430 += 1, R10398 += 1, R10400 += 1 };
  s2 -> s1 [76, 65535] { R10522 += 1, R10430 += 1, R10398 += 1, R10400 += 1 };
  s3 -> s6 [0, 65535] { R10522 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R10522 += 1, R10430 += 1 };
  s4 -> s6 [0, 65535] { R10522 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R10522 += 1, R10430 += 1, R10398 += 1 };
  s4 -> s3 [0, 65535] { R10522 += 1, R10430 += 1 };
  s5 -> s6 [0, 65535] { R10522 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R10522 += 1, R10430 += 1, R10398 += 1, R10400 += 1 };
  s5 -> s3 [0, 65535] { R10522 += 1, R10430 += 1 };
  s5 -> s8 [0, 65535] { R10522 += 1, R10430 += 1, R10398 += 1 };
  s6 -> s6 [0, 65535] { R10522 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R10522 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s3 [0, 65535] { R10522 += 1, R10430 += 1 };
  s8 -> s8 [0, 65535] { R10522 += 1, R10430 += 1, R10398 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65535] { R10524 += 1, R10460 += 1, R23 += 1 };
  s0 -> s2 [0, 65535] { R10524 += 1, R10459 += 1, R10460 += 1 };
  s0 -> s0 [0, 65535] { R10523 += 1, R10524 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R10524 += 1, R10460 += 1, R23 += 1 };
  s1 -> s4 [0, 65535] { R10524 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R10524 += 1, R10460 += 1, R23 += 1 };
  s2 -> s2 [0, 65535] { R10524 += 1, R10459 += 1, R10460 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R10524 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R10526 += 1, R10462 += 1 };
  s0 -> s0 [0, 65535] { R10525 += 1, R10526 += 1 };
  s0 -> s2 [0, 65535] { R10526 += 1, R10461 += 1, R10462 += 1 };
  s0 -> s3 [70, 70] { R10526 += 1, R10462 += 1 };
  s0 -> s4 [70, 70] { R10526 += 1, R10462 += 1 };
  s0 -> s5 [75, 75] { R10526 += 1, R10462 += 1 };
  s0 -> s1 [76, 65535] { R10526 += 1, R10462 += 1 };
  s1 -> s1 [0, 69] { R10526 += 1, R10462 += 1 };
  s1 -> s3 [70, 70] { R10526 += 1, R10462 += 1 };
  s1 -> s4 [70, 70] { R10526 += 1, R10462 += 1 };
  s1 -> s5 [75, 75] { R10526 += 1, R10462 += 1 };
  s1 -> s1 [76, 65535] { R10526 += 1, R10462 += 1 };
  s2 -> s1 [0, 69] { R10526 += 1, R10462 += 1 };
  s2 -> s2 [0, 65535] { R10526 += 1, R10461 += 1, R10462 += 1 };
  s2 -> s3 [70, 70] { R10526 += 1, R10462 += 1 };
  s2 -> s4 [70, 70] { R10526 += 1, R10462 += 1 };
  s2 -> s5 [75, 75] { R10526 += 1, R10462 += 1 };
  s2 -> s1 [76, 65535] { R10526 += 1, R10462 += 1 };
  s3 -> s3 [0, 70] { R10526 += 1, R10462 += 1 };
  s3 -> s7 [75, 75] { R10526 += 1, R10462 += 1 };
  s3 -> s3 [76, 65535] { R10526 += 1, R10462 += 1 };
  s5 -> s5 [0, 69] { R10526 += 1, R10462 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R10526 += 1 };
  s5 -> s7 [70, 70] { R10526 += 1, R10462 += 1 };
  s5 -> s8 [70, 70] { R10526 += 1, R10462 += 1 };
  s5 -> s5 [75, 65535] { R10526 += 1, R10462 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R10526 += 1, R10462 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R10526 += 1 };
  s7 -> s7 [75, 65535] { R10526 += 1, R10462 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R10526 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R10528 += 1, R10464 += 1, R137 += 1 };
  s0 -> s2 [0, 65535] { R10528 += 1, R10463 += 1, R10464 += 1 };
  s0 -> s0 [0, 65535] { R10527 += 1, R10528 += 1 };
  s0 -> s3 [70, 70] { R10528 += 1, R10464 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R10528 += 1, R10464 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R10528 += 1, R10464 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R10528 += 1, R10464 += 1, R137 += 1 };
  s1 -> s1 [0, 65535] { R10528 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R10528 += 1, R10464 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R10528 += 1, R10464 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R10528 += 1, R10464 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R10528 += 1, R10464 += 1, R137 += 1 };
  s2 -> s2 [0, 65535] { R10528 += 1, R10463 += 1, R10464 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R10528 += 1, R10464 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R10528 += 1, R10464 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R10528 += 1, R10464 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R10528 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10528 += 1, R10464 += 1, R137 += 1 };
  s4 -> s6 [0, 65535] { R10528 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10528 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R10530 += 1, R10466 += 1, R139 += 1 };
  s0 -> s0 [0, 65535] { R10529 += 1, R10530 += 1 };
  s0 -> s2 [0, 65535] { R10530 += 1, R10465 += 1, R10466 += 1 };
  s0 -> s3 [70, 70] { R10530 += 1, R10466 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R10530 += 1, R10466 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R10530 += 1, R10466 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R10530 += 1, R10466 += 1, R139 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R10530 += 1 };
  s1 -> s3 [70, 70] { R10530 += 1, R10466 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R10530 += 1, R10466 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R10530 += 1, R10466 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R10530 += 1, R10466 += 1, R139 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R10530 += 1, R10465 += 1, R10466 += 1 };
  s2 -> s3 [70, 70] { R10530 += 1, R10466 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R10530 += 1, R10466 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R10530 += 1, R10466 += 1, R139 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R10530 += 1 };
  s4 -> s5 [0, 65535] { R10530 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R10530 += 1, R10466 += 1, R139 += 1 };
  s5 -> s5 [0, 65535] { R10530 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R10532 += 1, R10468 += 1, R141 += 1, R142 += 1 };
  s0 -> s0 [0, 65535] { R10531 += 1, R10532 += 1 };
  s0 -> s2 [0, 65535] { R10532 += 1, R10467 += 1, R10468 += 1 };
  s0 -> s3 [70, 70] { R10532 += 1, R10468 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R10532 += 1, R10468 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R10532 += 1, R10468 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R10532 += 1, R10468 += 1, R141 += 1, R142 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R10532 += 1 };
  s1 -> s3 [70, 70] { R10532 += 1, R10468 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R10532 += 1, R10468 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R10532 += 1, R10468 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R10532 += 1, R10468 += 1, R141 += 1, R142 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10532 += 1, R10467 += 1, R10468 += 1 };
  s2 -> s3 [70, 70] { R10532 += 1, R10468 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R10532 += 1, R10468 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R10532 += 1, R10468 += 1, R141 += 1, R142 += 1 };
  s3 -> s3 [0, 65535] { R10532 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10532 += 1, R10468 += 1, R141 += 1, R142 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R10532 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10532 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R10534 += 1, R10470 += 1, R147 += 1, R148 += 1 };
  s0 -> s0 [0, 65535] { R10533 += 1, R10534 += 1 };
  s0 -> s2 [0, 65535] { R10534 += 1, R10469 += 1, R10470 += 1 };
  s0 -> s3 [70, 70] { R10534 += 1, R10470 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R10534 += 1, R10470 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R10534 += 1, R10470 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R10534 += 1, R10470 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 65535] { R10534 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R10534 += 1, R10470 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R10534 += 1, R10470 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R10534 += 1, R10470 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R10534 += 1, R10470 += 1, R147 += 1, R148 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10534 += 1, R10469 += 1, R10470 += 1 };
  s2 -> s3 [70, 70] { R10534 += 1, R10470 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R10534 += 1, R10470 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R10534 += 1, R10470 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R10534 += 1, R10470 += 1, R147 += 1, R148 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R10534 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10534 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10534 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R10536 += 1, R10472 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R10536 += 1, R10472 += 1, R151 += 1, R152 += 1 };
  s0 -> s0 [0, 65535] { R10535 += 1, R10536 += 1 };
  s0 -> s3 [0, 65535] { R10536 += 1, R10471 += 1, R10472 += 1 };
  s0 -> s4 [70, 70] { R10536 += 1, R10472 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R10536 += 1, R10472 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R10536 += 1, R10472 += 1, R151 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R10536 += 1, R10472 += 1, R151 += 1, R152 += 1 };
  s0 -> s1 [71, 74] { R10536 += 1, R10472 += 1, R152 += 1 };
  s0 -> s2 [71, 65535] { R10536 += 1, R10472 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R10536 += 1, R10472 += 1, R152 += 1 };
  s0 -> s1 [76, 65535] { R10536 += 1, R10472 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R10536 += 1, R10472 += 1, R152 += 1 };
  s1 -> s4 [70, 70] { R10536 += 1, R10472 += 1, R152 += 1 };
  s1 -> s5 [70, 70] { R10536 += 1, R10472 += 1, R152 += 1 };
  s1 -> s1 [71, 74] { R10536 += 1, R10472 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R10536 += 1, R10472 += 1, R152 += 1 };
  s1 -> s1 [76, 65535] { R10536 += 1, R10472 += 1, R152 += 1 };
  s2 -> s1 [0, 69] { R10536 += 1, R10472 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R10536 += 1, R10472 += 1, R151 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R10536 += 1, R10472 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R10536 += 1, R10472 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R10536 += 1, R10472 += 1, R151 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R10536 += 1, R10472 += 1, R151 += 1, R152 += 1 };
  s2 -> s1 [71, 74] { R10536 += 1, R10472 += 1, R152 += 1 };
  s2 -> s2 [71, 65535] { R10536 += 1, R10472 += 1, R151 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R10536 += 1, R10472 += 1, R152 += 1 };
  s2 -> s1 [76, 65535] { R10536 += 1, R10472 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R10536 += 1, R10472 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R10536 += 1, R10472 += 1, R151 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R10536 += 1, R10471 += 1, R10472 += 1 };
  s3 -> s4 [70, 70] { R10536 += 1, R10472 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R10536 += 1, R10472 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R10536 += 1, R10472 += 1, R151 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R10536 += 1, R10472 += 1, R151 += 1, R152 += 1 };
  s3 -> s1 [71, 74] { R10536 += 1, R10472 += 1, R152 += 1 };
  s3 -> s2 [71, 65535] { R10536 += 1, R10472 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R10536 += 1, R10472 += 1, R152 += 1 };
  s3 -> s1 [76, 65535] { R10536 += 1, R10472 += 1, R152 += 1 };
  s5 -> s5 [0, 74] { R10536 += 1, R10472 += 1, R152 += 1 };
  s5 -> s11 [75, 75] { R10536 += 1, R10472 += 1, R152 += 1 };
  s5 -> s5 [76, 65535] { R10536 += 1, R10472 += 1, R152 += 1 };
  s7 -> s5 [0, 74] { R10536 += 1, R10472 += 1, R152 += 1 };
  s7 -> s7 [0, 65535] { R10536 += 1, R10472 += 1, R151 += 1, R152 += 1 };
  s7 -> s11 [75, 75] { R10536 += 1, R10472 += 1, R152 += 1 };
  s7 -> s5 [76, 65535] { R10536 += 1, R10472 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R10536 += 1, R10472 += 1, R152 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R10536 += 1 };
  s8 -> s10 [70, 70] { R10536 += 1, R10472 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R10536 += 1, R10472 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R10536 += 1, R10472 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R10536 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R10536 += 1, R10472 += 1, R152 += 1 };
  s11 -> s12 [0, 65535] { R10536 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R10536 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R10538 += 1, R10474 += 1, R155 += 1, R156 += 1 };
  s0 -> s0 [0, 65535] { R10537 += 1, R10538 += 1 };
  s0 -> s2 [0, 65535] { R10538 += 1, R10473 += 1, R10474 += 1 };
  s0 -> s3 [70, 70] { R10538 += 1, R10474 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R10538 += 1, R10474 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R10538 += 1, R10474 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R10538 += 1, R10474 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 65535] { R10538 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R10538 += 1, R10474 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R10538 += 1, R10474 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R10538 += 1, R10474 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R10538 += 1, R10474 += 1, R155 += 1, R156 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10538 += 1, R10473 += 1, R10474 += 1 };
  s2 -> s3 [70, 70] { R10538 += 1, R10474 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R10538 += 1, R10474 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R10538 += 1, R10474 += 1, R155 += 1, R156 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R10538 += 1, R10474 += 1, R155 += 1, R156 += 1 };
  s3 -> s6 [0, 65535] { R10538 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10538 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10538 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R10540 += 1, R10476 += 1, R161 += 1, R162 += 1 };
  s0 -> s2 [0, 65535] { R10540 += 1, R10475 += 1, R10476 += 1 };
  s0 -> s0 [0, 65535] { R10539 += 1, R10540 += 1 };
  s0 -> s3 [70, 70] { R10540 += 1, R10476 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R10540 += 1, R10476 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R10540 += 1, R10476 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R10540 += 1, R10476 += 1, R161 += 1, R162 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R10540 += 1 };
  s1 -> s3 [70, 70] { R10540 += 1, R10476 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R10540 += 1, R10476 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R10540 += 1, R10476 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R10540 += 1, R10476 += 1, R161 += 1, R162 += 1 };
  s2 -> s2 [0, 65535] { R10540 += 1, R10475 += 1, R10476 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R10540 += 1, R10476 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R10540 += 1, R10476 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R10540 += 1, R10476 += 1, R161 += 1, R162 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R10540 += 1 };
  s3 -> s3 [0, 65535] { R10540 += 1, R10476 += 1, R161 += 1, R162 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10540 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10540 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R10542 += 1, R10478 += 1, R167 += 1, R168 += 1 };
  s0 -> s0 [0, 65535] { R10541 += 1, R10542 += 1 };
  s0 -> s2 [0, 65535] { R10542 += 1, R10477 += 1, R10478 += 1 };
  s0 -> s3 [70, 70] { R10542 += 1, R10478 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R10542 += 1, R10478 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R10542 += 1, R10478 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R10542 += 1, R10478 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 65535] { R10542 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R10542 += 1, R10478 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R10542 += 1, R10478 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R10542 += 1, R10478 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R10542 += 1, R10478 += 1, R167 += 1, R168 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10542 += 1, R10477 += 1, R10478 += 1 };
  s2 -> s3 [70, 70] { R10542 += 1, R10478 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R10542 += 1, R10478 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R10542 += 1, R10478 += 1, R167 += 1, R168 += 1 };
  s3 -> s3 [0, 65535] { R10542 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10542 += 1, R10478 += 1, R167 += 1, R168 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R10542 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10542 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R10544 += 1, R10480 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s2 [0, 69] { R10544 += 1, R10480 += 1, R175 += 1, R176 += 1 };
  s0 -> s3 [0, 69] { R10544 += 1, R10480 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s4 [0, 65535] { R10544 += 1, R10479 += 1, R10480 += 1 };
  s0 -> s0 [0, 65535] { R10543 += 1, R10544 += 1 };
  s0 -> s5 [70, 70] { R10544 += 1, R10480 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s6 [70, 70] { R10544 += 1, R10480 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s7 [70, 70] { R10544 += 1, R10480 += 1, R175 += 1, R176 += 1 };
  s0 -> s8 [70, 70] { R10544 += 1, R10480 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s9 [70, 70] { R10544 += 1, R10480 += 1, R175 += 1, R176 += 1 };
  s0 -> s10 [70, 70] { R10544 += 1, R10480 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s1 [71, 65535] { R10544 += 1, R10480 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s2 [71, 65535] { R10544 += 1, R10480 += 1, R175 += 1, R176 += 1 };
  s0 -> s3 [71, 65535] { R10544 += 1, R10480 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s1 [0, 69] { R10544 += 1, R10480 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s3 [0, 69] { R10544 += 1, R10480 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s5 [70, 70] { R10544 += 1, R10480 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s6 [70, 70] { R10544 += 1, R10480 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s8 [70, 70] { R10544 += 1, R10480 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s10 [70, 70] { R10544 += 1, R10480 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s1 [71, 65535] { R10544 += 1, R10480 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s3 [71, 65535] { R10544 += 1, R10480 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s1 [0, 69] { R10544 += 1, R10480 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s2 [0, 69] { R10544 += 1, R10480 += 1, R175 += 1, R176 += 1 };
  s2 -> s3 [0, 69] { R10544 += 1, R10480 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s5 [70, 70] { R10544 += 1, R10480 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s6 [70, 70] { R10544 += 1, R10480 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s7 [70, 70] { R10544 += 1, R10480 += 1, R175 += 1, R176 += 1 };
  s2 -> s8 [70, 70] { R10544 += 1, R10480 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s9 [70, 70] { R10544 += 1, R10480 += 1, R175 += 1, R176 += 1 };
  s2 -> s10 [70, 70] { R10544 += 1, R10480 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s1 [71, 65535] { R10544 += 1, R10480 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s2 [71, 65535] { R10544 += 1, R10480 += 1, R175 += 1, R176 += 1 };
  s2 -> s3 [71, 65535] { R10544 += 1, R10480 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s14 [0, 69] { R10544 += 1, R10480 += 1, R176 += 1 };
  s3 -> s3 [0, 69] { R10544 += 1, R10480 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s11 [70, 70] { R10544 += 1, R10480 += 1, R176 += 1 };
  s3 -> s8 [70, 70] { R10544 += 1, R10480 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s15 [70, 70] { R10544 += 1, R10480 += 1, R176 += 1 };
  s3 -> s10 [70, 70] { R10544 += 1, R10480 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s14 [71, 65535] { R10544 += 1, R10480 += 1, R176 += 1 };
  s3 -> s3 [71, 65535] { R10544 += 1, R10480 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s1 [0, 69] { R10544 += 1, R10480 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s2 [0, 69] { R10544 += 1, R10480 += 1, R175 += 1, R176 += 1 };
  s4 -> s3 [0, 69] { R10544 += 1, R10480 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s4 [0, 65535] { R10544 += 1, R10479 += 1, R10480 += 1 };
  s4 -> s5 [70, 70] { R10544 += 1, R10480 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s6 [70, 70] { R10544 += 1, R10480 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s7 [70, 70] { R10544 += 1, R10480 += 1, R175 += 1, R176 += 1 };
  s4 -> s8 [70, 70] { R10544 += 1, R10480 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s9 [70, 70] { R10544 += 1, R10480 += 1, R175 += 1, R176 += 1 };
  s4 -> s10 [70, 70] { R10544 += 1, R10480 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s1 [71, 65535] { R10544 += 1, R10480 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s2 [71, 65535] { R10544 += 1, R10480 += 1, R175 += 1, R176 += 1 };
  s4 -> s3 [71, 65535] { R10544 += 1, R10480 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s6 -> s6 [0, 65535] { R10544 += 1, R10480 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s6 -> s8 [0, 65535] { R10544 += 1, R10480 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s8 -> s11 [0, 65535] { R10544 += 1, R10480 += 1, R176 += 1 };
  s8 -> s8 [0, 65535] { R10544 += 1, R10480 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s9 -> s6 [0, 65535] { R10544 += 1, R10480 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s9 -> s8 [0, 65535] { R10544 += 1, R10480 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s9 -> s9 [0, 65535] { R10544 += 1, R10480 += 1, R175 += 1, R176 += 1 };
  s11 -> s11 [0, 65535] { R10544 += 1, R10480 += 1, R176 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [0, 65535] { R10544 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R10544 += 1 };
  s14 -> s14 [0, 69] { R10544 += 1, R10480 += 1, R176 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R10544 += 1 };
  s14 -> s11 [70, 70] { R10544 += 1, R10480 += 1, R176 += 1 };
  s14 -> s15 [70, 70] { R10544 += 1, R10480 += 1, R176 += 1 };
  s14 -> s14 [71, 65535] { R10544 += 1, R10480 += 1, R176 += 1 };
  s15 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R10544 += 1 };
  accepting s12, s13, s14, s15, s11;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R10546 += 1, R10482 += 1, R7353 += 1, R7354 += 1 };
  s0 -> s0 [0, 65535] { R10545 += 1, R10546 += 1 };
  s0 -> s2 [0, 65535] { R10546 += 1, R10481 += 1, R10482 += 1 };
  s0 -> s3 [70, 70] { R10546 += 1, R10482 += 1, R7353 += 1, R7354 += 1 };
  s0 -> s4 [70, 70] { R10546 += 1, R10482 += 1, R7353 += 1, R7354 += 1 };
  s0 -> s1 [71, 65535] { R10546 += 1, R10482 += 1, R7353 += 1, R7354 += 1 };
  s1 -> s1 [0, 69] { R10546 += 1, R10482 += 1, R7353 += 1, R7354 += 1 };
  s1 -> s1 [0, 65535] { R10546 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R10546 += 1, R10482 += 1, R7353 += 1, R7354 += 1 };
  s1 -> s4 [70, 70] { R10546 += 1, R10482 += 1, R7353 += 1, R7354 += 1 };
  s1 -> s1 [71, 65535] { R10546 += 1, R10482 += 1, R7353 += 1, R7354 += 1 };
  s2 -> s1 [0, 69] { R10546 += 1, R10482 += 1, R7353 += 1, R7354 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10546 += 1, R10481 += 1, R10482 += 1 };
  s2 -> s3 [70, 70] { R10546 += 1, R10482 += 1, R7353 += 1, R7354 += 1 };
  s2 -> s4 [70, 70] { R10546 += 1, R10482 += 1, R7353 += 1, R7354 += 1 };
  s2 -> s1 [71, 65535] { R10546 += 1, R10482 += 1, R7353 += 1, R7354 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R10546 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R10546 += 1 };
  s4 -> s4 [0, 65535] { R10546 += 1, R10482 += 1, R7353 += 1, R7354 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10546 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R10548 += 1, R10484 += 1, R10225 += 1, R10226 += 1 };
  s0 -> s2 [0, 69] { R10548 += 1, R10484 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s0 -> s3 [0, 65535] { R10548 += 1, R10483 += 1, R10484 += 1 };
  s0 -> s0 [0, 65535] { R10547 += 1, R10548 += 1 };
  s0 -> s4 [70, 70] { R10548 += 1, R10484 += 1, R10225 += 1, R10226 += 1 };
  s0 -> s5 [70, 70] { R10548 += 1, R10484 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s0 -> s6 [70, 70] { R10548 += 1, R10484 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s0 -> s7 [70, 70] { R10548 += 1, R10484 += 1, R10225 += 1, R10226 += 1 };
  s0 -> s1 [71, 65535] { R10548 += 1, R10484 += 1, R10225 += 1, R10226 += 1 };
  s0 -> s2 [71, 65535] { R10548 += 1, R10484 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s1 -> s1 [0, 69] { R10548 += 1, R10484 += 1, R10225 += 1, R10226 += 1 };
  s1 -> s2 [0, 69] { R10548 += 1, R10484 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s1 -> s4 [70, 70] { R10548 += 1, R10484 += 1, R10225 += 1, R10226 += 1 };
  s1 -> s5 [70, 70] { R10548 += 1, R10484 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s1 -> s6 [70, 70] { R10548 += 1, R10484 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s1 -> s7 [70, 70] { R10548 += 1, R10484 += 1, R10225 += 1, R10226 += 1 };
  s1 -> s1 [71, 65535] { R10548 += 1, R10484 += 1, R10225 += 1, R10226 += 1 };
  s1 -> s2 [71, 65535] { R10548 += 1, R10484 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s2 -> s2 [0, 69] { R10548 += 1, R10484 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R10548 += 1 };
  s2 -> s5 [70, 70] { R10548 += 1, R10484 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s2 -> s6 [70, 70] { R10548 += 1, R10484 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s2 -> s2 [71, 65535] { R10548 += 1, R10484 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s3 -> s1 [0, 69] { R10548 += 1, R10484 += 1, R10225 += 1, R10226 += 1 };
  s3 -> s2 [0, 69] { R10548 += 1, R10484 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s3 -> s3 [0, 65535] { R10548 += 1, R10483 += 1, R10484 += 1 };
  s3 -> s4 [70, 70] { R10548 += 1, R10484 += 1, R10225 += 1, R10226 += 1 };
  s3 -> s5 [70, 70] { R10548 += 1, R10484 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s3 -> s6 [70, 70] { R10548 += 1, R10484 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s3 -> s7 [70, 70] { R10548 += 1, R10484 += 1, R10225 += 1, R10226 += 1 };
  s3 -> s1 [71, 65535] { R10548 += 1, R10484 += 1, R10225 += 1, R10226 += 1 };
  s3 -> s2 [71, 65535] { R10548 += 1, R10484 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R10548 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R10548 += 1, R10484 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s6 -> s9 [0, 65535] { R10548 += 1 };
  s7 -> s6 [0, 65535] { R10548 += 1, R10484 += 1, R10226 += 1, R10227 += 1, R10228 += 1 };
  s7 -> s7 [0, 65535] { R10548 += 1, R10484 += 1, R10225 += 1, R10226 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R10548 += 1 };
  accepting s8, s5, s2, s9, s6;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R10550 += 1, R10486 += 1, R10394 += 1, R10395 += 1, R10396 += 1 };
  s0 -> s2 [0, 69] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s0 -> s3 [0, 69] { R10550 += 1, R10486 += 1, R10393 += 1, R10394 += 1 };
  s0 -> s0 [0, 65535] { R10549 += 1, R10550 += 1 };
  s0 -> s4 [0, 65535] { R10550 += 1, R10485 += 1, R10486 += 1 };
  s0 -> s5 [70, 70] { R10550 += 1, R10486 += 1, R10393 += 1, R10394 += 1 };
  s0 -> s6 [70, 70] { R10550 += 1, R10486 += 1, R10394 += 1, R10395 += 1, R10396 += 1 };
  s0 -> s7 [70, 70] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s0 -> s8 [70, 70] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s0 -> s9 [70, 70] { R10550 += 1, R10486 += 1, R10394 += 1, R10395 += 1, R10396 += 1 };
  s0 -> s10 [70, 70] { R10550 += 1, R10486 += 1, R10393 += 1, R10394 += 1 };
  s0 -> s2 [71, 74] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s0 -> s1 [71, 65535] { R10550 += 1, R10486 += 1, R10394 += 1, R10395 += 1, R10396 += 1 };
  s0 -> s3 [71, 65535] { R10550 += 1, R10486 += 1, R10393 += 1, R10394 += 1 };
  s0 -> s11 [76, 76] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s0 -> s2 [77, 65535] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s1 -> s1 [0, 69] { R10550 += 1, R10486 += 1, R10394 += 1, R10395 += 1, R10396 += 1 };
  s1 -> s2 [0, 69] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s1 -> s6 [70, 70] { R10550 += 1, R10486 += 1, R10394 += 1, R10395 += 1, R10396 += 1 };
  s1 -> s7 [70, 70] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s1 -> s8 [70, 70] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s1 -> s9 [70, 70] { R10550 += 1, R10486 += 1, R10394 += 1, R10395 += 1, R10396 += 1 };
  s1 -> s2 [71, 74] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s1 -> s1 [71, 65535] { R10550 += 1, R10486 += 1, R10394 += 1, R10395 += 1, R10396 += 1 };
  s1 -> s11 [76, 76] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s1 -> s2 [77, 65535] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s2 -> s2 [0, 69] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s2 -> s7 [70, 70] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s2 -> s8 [70, 70] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s2 -> s2 [71, 74] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s2 -> s11 [76, 76] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s2 -> s2 [77, 65535] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s3 -> s1 [0, 69] { R10550 += 1, R10486 += 1, R10394 += 1, R10395 += 1, R10396 += 1 };
  s3 -> s2 [0, 69] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s3 -> s3 [0, 69] { R10550 += 1, R10486 += 1, R10393 += 1, R10394 += 1 };
  s3 -> s5 [70, 70] { R10550 += 1, R10486 += 1, R10393 += 1, R10394 += 1 };
  s3 -> s6 [70, 70] { R10550 += 1, R10486 += 1, R10394 += 1, R10395 += 1, R10396 += 1 };
  s3 -> s7 [70, 70] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s3 -> s8 [70, 70] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s3 -> s9 [70, 70] { R10550 += 1, R10486 += 1, R10394 += 1, R10395 += 1, R10396 += 1 };
  s3 -> s10 [70, 70] { R10550 += 1, R10486 += 1, R10393 += 1, R10394 += 1 };
  s3 -> s2 [71, 74] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s3 -> s1 [71, 65535] { R10550 += 1, R10486 += 1, R10394 += 1, R10395 += 1, R10396 += 1 };
  s3 -> s3 [71, 65535] { R10550 += 1, R10486 += 1, R10393 += 1, R10394 += 1 };
  s3 -> s11 [76, 76] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s3 -> s2 [77, 65535] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s4 -> s1 [0, 69] { R10550 += 1, R10486 += 1, R10394 += 1, R10395 += 1, R10396 += 1 };
  s4 -> s2 [0, 69] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s4 -> s3 [0, 69] { R10550 += 1, R10486 += 1, R10393 += 1, R10394 += 1 };
  s4 -> s4 [0, 65535] { R10550 += 1, R10485 += 1, R10486 += 1 };
  s4 -> s5 [70, 70] { R10550 += 1, R10486 += 1, R10393 += 1, R10394 += 1 };
  s4 -> s6 [70, 70] { R10550 += 1, R10486 += 1, R10394 += 1, R10395 += 1, R10396 += 1 };
  s4 -> s7 [70, 70] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s4 -> s8 [70, 70] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s4 -> s9 [70, 70] { R10550 += 1, R10486 += 1, R10394 += 1, R10395 += 1, R10396 += 1 };
  s4 -> s10 [70, 70] { R10550 += 1, R10486 += 1, R10393 += 1, R10394 += 1 };
  s4 -> s2 [71, 74] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s4 -> s1 [71, 65535] { R10550 += 1, R10486 += 1, R10394 += 1, R10395 += 1, R10396 += 1 };
  s4 -> s3 [71, 65535] { R10550 += 1, R10486 += 1, R10393 += 1, R10394 += 1 };
  s4 -> s11 [76, 76] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s4 -> s2 [77, 65535] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s6 -> s8 [0, 74] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s6 -> s6 [0, 65535] { R10550 += 1, R10486 += 1, R10394 += 1, R10395 += 1, R10396 += 1 };
  s6 -> s13 [76, 76] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s6 -> s8 [77, 65535] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s8 -> s8 [0, 74] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s8 -> s13 [76, 76] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s8 -> s8 [77, 65535] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s10 -> s8 [0, 74] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s10 -> s6 [0, 65535] { R10550 += 1, R10486 += 1, R10394 += 1, R10395 += 1, R10396 += 1 };
  s10 -> s10 [0, 65535] { R10550 += 1, R10486 += 1, R10393 += 1, R10394 += 1 };
  s10 -> s13 [76, 76] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s10 -> s8 [77, 65535] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s11 -> s11 [0, 69] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s11 [0, 65535] { R10550 += 1 };
  s11 -> s13 [70, 70] { R10550 += 1, R10486 += 1, R10394 += 1 };
  s11 -> s14 [70, 70] { R10550 += 1, R10486 += 1, R10394 += 1 };
  s11 -> s11 [71, 74] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s11 -> s11 [71, 65535] { R10550 += 1, R10486 += 1, R10394 += 1 };
  s11 -> s11 [76, 65535] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s13 [0, 74] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R10550 += 1, R10486 += 1, R10394 += 1 };
  s13 -> s15 [0, 65535] { R10550 += 1 };
  s13 -> s13 [76, 65535] { R10550 += 1, R10486 += 1, R10394 += 1, R10396 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R10550 += 1 };
  s15 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R10550 += 1 };
  accepting s12, s13, s14, s15, s11;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R10550 && R25 - R10550 = -1 && R26 = R10550 && R27 - R10550 = -1 && R28 = R10550 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R10398 + -1*R10394 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R10398 + -1*R10394 - R130 = 0 && R129 + R10397 + R10393 = 0 && R131 + R10399 + R10395 = 0 && R132 + R10400 + R10396 = 0 && R10461 = 0 && R10462 = 0 && R10471 = 0 && R10472 = 0 && R10479 = 0 && R10480 = 0 && R10483 = 0 && R10484 = 0 && R10485 = 0 && R10486 = 0 && R10487 = 0 && R10488 = R10550 && R10489 = 0 && R10490 = R10550 && R10491 = 0 && R10492 = R10550 && R10493 = 0 && R10494 = R10550 && R10495 = 0 && R10496 = R10550 && R10497 = 0 && R10498 = R10550 && R10499 = 0 && R10500 = R10550 && R10501 = 0 && R10502 = R10550 && R10503 = 0 && R10504 = R10550 && R10505 = 0 && R10506 = R10550 && R10507 = 0 && R10508 = R10550 && R10509 = 0 && R10510 = R10550 && R10511 = 0 && R10512 = R10550 && R10513 = 0 && R10514 = R10550 && R10515 = 0 && R10516 = R10550 && R10517 = 0 && R10518 = R10550 && R10519 = 0 && R10520 = R10550 && R10521 = 0 && R10522 = R10550 && R10523 = 0 && R10524 = R10550 && R10525 = 0 && R10526 = R10550 && R10527 = 0 && R10528 = R10550 && R10529 = 0 && R10530 = R10550 && R10531 = 0 && R10532 = R10550 && R10533 = 0 && R10534 = R10550 && R10535 = 0 && R10536 = R10550 && R10537 = 0 && R10538 = R10550 && R10539 = 0 && R10540 = R10550 && R10541 = 0 && R10542 = R10550 && R10543 = 0 && R10544 = R10550 && R10545 = 0 && R10546 = R10550 && R10547 = 0 && R10548 = R10550 && R10549 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R10398 + -1*R10394 - R130 < 1 && 0 < R10550 && (R2 != 0 || R22 = 0 || (R10401 = 0 && R10402 = 0)) && (R2 != 0 || R22 = 0 || (R10403 = 0 && R10404 = 0)) && (R2 != 0 || R22 = 0 || (R10405 = 0 && R10406 = 0)) && (R2 != 0 || R22 = 0 || (R10407 = 0 && R10408 = 0)) && (R2 != 0 || R22 = 0 || (R10409 = 0 && R10410 = 0)) && (R2 != 0 || R22 = 0 || (R10411 = 0 && R10412 = 0)) && (R2 != 0 || R22 = 0 || (R10413 = 0 && R10414 = 0)) && (R2 != 0 || R22 = 0 || (R10415 = 0 && R10416 = 0)) && (R2 != 0 || R22 = 0 || (R10417 = 0 && R10418 = 0)) && (R2 != 0 || R22 = 0 || (R10419 = 0 && R10420 = 0)) && (R2 != 0 || R22 = 0 || (R10421 = 0 && R10422 = 0)) && (R2 != 0 || R22 = 0 || (R10423 = 0 && R10424 = 0)) && (R2 != 0 || R22 = 0 || (R10425 = 0 && R10426 = 0)) && (R2 != 0 || R22 = 0 || (R10427 = 0 && R10428 = 0)) && (R2 != 0 || R22 = 0 || (R10429 = 0 && R10430 = 0)) && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R10398 + -1*R10394 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R7359 + R7355 = 0 && R114 + R7360 + R7356 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R10398 + -1*R10394 - R130 = 0 || R130 + R10398 + R10394 < 1) && (R81 + R158 + R155 = 0 || R130 + R10398 + R10394 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R10398 + -1*R10394 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R10398 + R10394 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R10398 + -1*R10394 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R10398 + R10394 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R10398 + -1*R10394 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R10398 + R10394 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R7357 + R7353 != 0 || R112 + R7358 + R7354 + -1*R10398 + -1*R10394 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R10398 + R10394 = 0)) && (R113 + R7359 + R7355 != 0 || R83 + R160 + R157 + -1*R7360 + -1*R7356 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R10230 + R10225 != 0 || R120 + R10231 + R10226 + -1*R10398 + -1*R10394 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R10398 + R10394 = 0)) && (R10401 != 0 || R2 = R10402 || R2 < 1) && (R10403 != 0 || R2 = R10404 || R2 < 1) && (R10405 != 0 || R2 = R10406 || R2 < 1) && (R10407 != 0 || R2 = R10408 || R2 < 1) && (R10409 != 0 || R2 = R10410 || R2 < 1) && (R10411 != 0 || R2 = R10412 || R2 < 1) && (R10413 != 0 || R2 = R10414 || R2 < 1) && (R10415 != 0 || R2 = R10416 || R2 < 1) && (R10417 != 0 || R2 = R10418 || R2 < 1) && (R10419 != 0 || R2 = R10420 || R2 < 1) && (R10421 != 0 || R2 = R10422 || R2 < 1) && (R10423 != 0 || R2 = R10424 || R2 < 1) && (R10425 != 0 || R2 = R10426 || R2 < 1) && (R10427 != 0 || R2 = R10428 || R2 < 1) && (R10429 != 0 || R2 = R10430 || R2 < 1) && (R23 = 0 || (R10459 = 0 && R10460 = 0)) && (R23 = 0 || (R10463 = 0 && R10464 = 0)) && (R23 = 0 || (R10465 = 0 && R10466 = 0)) && (R23 = 0 || (R10467 = 0 && R10468 = 0)) && (R23 = 0 || (R10469 = 0 && R10470 = 0)) && (R23 = 0 || (R10473 = 0 && R10474 = 0)) && (R23 = 0 || (R10475 = 0 && R10476 = 0)) && (R23 = 0 || (R10477 = 0 && R10478 = 0)) && (R23 = 0 || (R10481 = 0 && R10482 = 0)) && (R24 = 0 || (R10431 = 0 && R10432 = 0)) && (R24 = 0 || (R10433 = 0 && R10434 = 0)) && (R24 = 0 || (R10435 = 0 && R10436 = 0)) && (R24 = 0 || (R10437 = 0 && R10438 = 0)) && (R24 = 0 || (R10439 = 0 && R10440 = 0)) && (R24 = 0 || (R10441 = 0 && R10442 = 0)) && (R24 = 0 || (R10443 = 0 && R10444 = 0)) && (R24 = 0 || (R10445 = 0 && R10446 = 0)) && (R24 = 0 || (R10447 = 0 && R10448 = 0)) && (R24 = 0 || (R10449 = 0 && R10450 = 0)) && (R24 = 0 || (R10451 = 0 && R10452 = 0)) && (R24 = 0 || (R10453 = 0 && R10454 = 0)) && (R24 = 0 || (R10455 = 0 && R10456 = 0)) && (R24 = 0 || (R10457 = 0 && R10458 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R10398 + R10394 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R10398 + R10394 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R10398 + R10394 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R7357 + R7353 = 0 || (R83 + R160 + R157 = 0 && R130 + R10398 + R10394 = 0)) && (R113 + R7359 + R7355 = 0 || R83 + R160 + R157 < 1) && (R119 + R10230 + R10225 = 0 || (R83 + R160 + R157 = 0 && R130 + R10398 + R10394 = 0)) && (R123 + R10234 + R10229 = 0 || (R121 + R10232 + R10227 = 0 && R122 + R10233 + R10228 = 0)) && (R10401 = 0 || R2 < 1) && (R10403 = 0 || R2 < 1) && (R10405 = 0 || R2 < 1) && (R10407 = 0 || R2 < 1) && (R10409 = 0 || R2 < 1) && (R10411 = 0 || R2 < 1) && (R10413 = 0 || R2 < 1) && (R10415 = 0 || R2 < 1) && (R10417 = 0 || R2 < 1) && (R10419 = 0 || R2 < 1) && (R10421 = 0 || R2 < 1) && (R10423 = 0 || R2 < 1) && (R10425 = 0 || R2 < 1) && (R10427 = 0 || R2 < 1) && (R10429 = 0 || R2 < 1);
// End of Parikh automata intersection problem
