// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R12, R17, R18, R19, R2, R20, R21, R22, R23, R24, R25, R26, R27, R3, R38, R4, R40, R42, R43, R46, R47, R48, R5160, R5161, R5162, R5163, R5164, R5165, R52, R53, R56, R57, R58, R62, R63, R66, R67, R68, R69, R70, R71, R72, R73, R8, R8976, R8977, R8978, R8979, R9402, R9403, R9404, R9405, R9406, R9407, R9720, R9721, R9722, R9723, R9724, R9725, R9726, R9727, R9728, R9729, R9730, R9731, R9732, R9733, R9734, R9735, R9736, R9737, R9738, R9739, R9740, R9741, R9742, R9743, R9744, R9745, R9746, R9747, R9748, R9749, R9750, R9751, R9752, R9753, R9754, R9755, R9756, R9757, R9758, R9759, R9760, R9761, R9762, R9763, R9764, R9765, R9766, R9767, R9768, R9769, R9770, R9771, R9772, R9773, R9774, R9775, R9776, R9777, R9778, R9779, R9780, R9781, R9782, R9783, R9784, R9785, R9786, R9787, R9788, R9789, R9790, R9791, R9792, R9793, R9794, R9795, R9796, R9797, R9798, R9799, R9800, R9801, R9802, R9803, R9804, R9805, R9806, R9807, R9808, R9809, R9810, R9811, R9812, R9813, R9814, R9815, R9816, R9817, R9818, R9819, R9820, R9821, R9822, R9823;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [76, 76];
  s0 -> s0 [77, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [76, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R2 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R11 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 75];
  s0 -> s0 [0, 65535] { R12 += 1 };
  s0 -> s2 [76, 76];
  s0 -> s1 [77, 65535];
  s1 -> s1 [0, 75];
  s1 -> s2 [76, 76];
  s1 -> s1 [77, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R21 += 1 };
  s0 -> s0 [0, 65535] { R20 += 1, R21 += 1 };
  s0 -> s2 [9, 13] { R21 += 1 };
  s0 -> s1 [14, 31] { R21 += 1 };
  s0 -> s2 [32, 32] { R21 += 1 };
  s0 -> s1 [33, 65535] { R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R21 += 1 };
  s2 -> s1 [0, 65535] { R21 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R22 += 1, R23 += 1 };
  s1 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R25 += 1 };
  s0 -> s0 [0, 65535] { R24 += 1, R25 += 1 };
  s0 -> s2 [9, 13] { R25 += 1 };
  s0 -> s1 [14, 31] { R25 += 1 };
  s0 -> s2 [32, 32] { R25 += 1 };
  s0 -> s1 [33, 65535] { R25 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R25 += 1 };
  s2 -> s1 [0, 65535] { R25 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R26 += 1, R27 += 1 };
  s0 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s1 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R9745 += 1, R19 += 1 };
  s0 -> s0 [0, 65535] { R9744 += 1, R9745 += 1 };
  s1 -> s1 [0, 65535] { R9745 += 1, R19 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 75] { R9747 += 1 };
  s0 -> s0 [0, 65535] { R9746 += 1, R9747 += 1 };
  s0 -> s2 [76, 76] { R9747 += 1 };
  s0 -> s3 [76, 76] { R9747 += 1 };
  s0 -> s1 [88, 65535] { R9747 += 1 };
  s1 -> s1 [0, 75] { R9747 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [76, 76] { R9747 += 1 };
  s1 -> s3 [76, 76] { R9747 += 1 };
  s1 -> s1 [88, 65535] { R9747 += 1 };
  s2 -> s2 [0, 76] { R9747 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [88, 65535] { R9747 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 75] { R9749 += 1, R38 += 1 };
  s0 -> s0 [0, 65535] { R9748 += 1, R9749 += 1 };
  s0 -> s2 [76, 76] { R9749 += 1, R38 += 1 };
  s0 -> s3 [76, 76] { R9749 += 1, R38 += 1 };
  s0 -> s1 [77, 65535] { R9749 += 1, R38 += 1 };
  s1 -> s1 [0, 75] { R9749 += 1, R38 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [76, 76] { R9749 += 1, R38 += 1 };
  s1 -> s3 [76, 76] { R9749 += 1, R38 += 1 };
  s1 -> s1 [77, 65535] { R9749 += 1, R38 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R9749 += 1, R38 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 75] { R9751 += 1, R40 += 1 };
  s0 -> s0 [0, 65535] { R9750 += 1, R9751 += 1 };
  s0 -> s2 [76, 76] { R9751 += 1, R40 += 1 };
  s0 -> s3 [76, 76] { R9751 += 1, R40 += 1 };
  s0 -> s1 [77, 65535] { R9751 += 1, R40 += 1 };
  s1 -> s1 [0, 75] { R9751 += 1, R40 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [76, 76] { R9751 += 1, R40 += 1 };
  s1 -> s3 [76, 76] { R9751 += 1, R40 += 1 };
  s1 -> s1 [77, 65535] { R9751 += 1, R40 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R9751 += 1, R40 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 75] { R9753 += 1, R42 += 1, R43 += 1 };
  s0 -> s0 [0, 65535] { R9752 += 1, R9753 += 1 };
  s0 -> s2 [76, 76] { R9753 += 1, R42 += 1, R43 += 1 };
  s0 -> s3 [76, 76] { R9753 += 1, R42 += 1, R43 += 1 };
  s0 -> s1 [77, 65535] { R9753 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 75] { R9753 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [76, 76] { R9753 += 1, R42 += 1, R43 += 1 };
  s1 -> s3 [76, 76] { R9753 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [77, 65535] { R9753 += 1, R42 += 1, R43 += 1 };
  s2 -> s2 [0, 65535] { R9753 += 1, R42 += 1, R43 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 75] { R9755 += 1, R46 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R9754 += 1, R9755 += 1 };
  s0 -> s2 [76, 76] { R9755 += 1, R46 += 1, R47 += 1 };
  s0 -> s3 [76, 76] { R9755 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [77, 65535] { R9755 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 75] { R9755 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [76, 76] { R9755 += 1, R46 += 1, R47 += 1 };
  s1 -> s3 [76, 76] { R9755 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [77, 65535] { R9755 += 1, R46 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R9755 += 1, R46 += 1, R47 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 75] { R9757 += 1, R52 += 1, R53 += 1 };
  s0 -> s0 [0, 65535] { R9756 += 1, R9757 += 1 };
  s0 -> s2 [76, 76] { R9757 += 1, R52 += 1, R53 += 1 };
  s0 -> s3 [76, 76] { R9757 += 1, R52 += 1, R53 += 1 };
  s0 -> s1 [77, 65535] { R9757 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 75] { R9757 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [76, 76] { R9757 += 1, R52 += 1, R53 += 1 };
  s1 -> s3 [76, 76] { R9757 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [77, 65535] { R9757 += 1, R52 += 1, R53 += 1 };
  s2 -> s2 [0, 65535] { R9757 += 1, R52 += 1, R53 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 75] { R9759 += 1, R56 += 1, R57 += 1 };
  s0 -> s0 [0, 65535] { R9758 += 1, R9759 += 1 };
  s0 -> s2 [76, 76] { R9759 += 1, R56 += 1, R57 += 1 };
  s0 -> s3 [76, 76] { R9759 += 1, R56 += 1, R57 += 1 };
  s0 -> s1 [77, 65535] { R9759 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 75] { R9759 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [76, 76] { R9759 += 1, R56 += 1, R57 += 1 };
  s1 -> s3 [76, 76] { R9759 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [77, 65535] { R9759 += 1, R56 += 1, R57 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R9759 += 1, R56 += 1, R57 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 75] { R9761 += 1, R62 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R9760 += 1, R9761 += 1 };
  s0 -> s2 [76, 76] { R9761 += 1, R62 += 1, R63 += 1 };
  s0 -> s3 [76, 76] { R9761 += 1, R62 += 1, R63 += 1 };
  s0 -> s1 [77, 65535] { R9761 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 75] { R9761 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [76, 76] { R9761 += 1, R62 += 1, R63 += 1 };
  s1 -> s3 [76, 76] { R9761 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [77, 65535] { R9761 += 1, R62 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R9761 += 1, R62 += 1, R63 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 75] { R9781 += 1 };
  s0 -> s0 [0, 65535] { R9780 += 1, R9781 += 1 };
  s0 -> s2 [76, 76] { R9781 += 1 };
  s0 -> s1 [77, 65535] { R9781 += 1 };
  s1 -> s1 [0, 75] { R9781 += 1 };
  s1 -> s2 [76, 76] { R9781 += 1 };
  s1 -> s1 [77, 65535] { R9781 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R9781 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R9782 += 1, R9783 += 1 };
  s0 -> s1 [0, 65535] { R9783 += 1, R1 += 1 };
  s1 -> s1 [0, 65535] { R9783 += 1, R1 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 75] { R9785 += 1 };
  s0 -> s0 [0, 65535] { R9784 += 1, R9785 += 1 };
  s0 -> s2 [0, 65535] { R9785 += 1, R8 += 1 };
  s0 -> s3 [76, 76] { R9785 += 1 };
  s0 -> s1 [77, 65535] { R9785 += 1 };
  s1 -> s1 [0, 75] { R9785 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [76, 76] { R9785 += 1 };
  s1 -> s1 [77, 65535] { R9785 += 1 };
  s2 -> s1 [0, 75] { R9785 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R9785 += 1, R8 += 1 };
  s2 -> s3 [76, 76] { R9785 += 1 };
  s2 -> s1 [77, 65535] { R9785 += 1 };
  s3 -> s3 [0, 65535] { R9785 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 75] { R9787 += 1, R9725 += 1 };
  s0 -> s0 [0, 65535] { R9786 += 1, R9787 += 1 };
  s0 -> s2 [0, 65535] { R9787 += 1, R9724 += 1, R9725 += 1 };
  s0 -> s1 [77, 65535] { R9787 += 1, R9725 += 1 };
  s1 -> s1 [0, 75] { R9787 += 1, R9725 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R9787 += 1 };
  s1 -> s1 [77, 65535] { R9787 += 1, R9725 += 1 };
  s2 -> s1 [0, 75] { R9787 += 1, R9725 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R9787 += 1, R9724 += 1, R9725 += 1 };
  s2 -> s1 [77, 65535] { R9787 += 1, R9725 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R9789 += 1, R9726 += 1, R9727 += 1 };
  s0 -> s2 [0, 65535] { R9789 += 1, R9727 += 1, R17 += 1 };
  s0 -> s0 [0, 65535] { R9788 += 1, R9789 += 1 };
  s1 -> s1 [0, 65535] { R9789 += 1, R9726 += 1, R9727 += 1 };
  s1 -> s2 [0, 65535] { R9789 += 1, R9727 += 1, R17 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R9789 += 1, R9727 += 1, R17 += 1 };
  s2 -> s3 [0, 65535] { R9789 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R9789 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 76] { R9791 += 1, R9729 += 1 };
  s0 -> s2 [0, 65535] { R9791 += 1, R9728 += 1, R9729 += 1 };
  s0 -> s0 [0, 65535] { R9790 += 1, R9791 += 1 };
  s0 -> s1 [87, 65535] { R9791 += 1, R9729 += 1 };
  s1 -> s1 [0, 76] { R9791 += 1, R9729 += 1 };
  s1 -> s1 [0, 65535] { R9791 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [87, 65535] { R9791 += 1, R9729 += 1 };
  s2 -> s1 [0, 76] { R9791 += 1, R9729 += 1 };
  s2 -> s2 [0, 65535] { R9791 += 1, R9728 += 1, R9729 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [87, 65535] { R9791 += 1, R9729 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R9793 += 1, R9730 += 1, R9731 += 1 };
  s0 -> s0 [0, 65535] { R9792 += 1, R9793 += 1 };
  s0 -> s2 [0, 65535] { R9793 += 1, R9731 += 1, R67 += 1 };
  s1 -> s1 [0, 65535] { R9793 += 1, R9730 += 1, R9731 += 1 };
  s1 -> s2 [0, 65535] { R9793 += 1, R9731 += 1, R67 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R9793 += 1, R9731 += 1, R67 += 1 };
  s2 -> s3 [0, 65535] { R9793 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R9793 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 86] { R9795 += 1, R9733 += 1 };
  s0 -> s2 [0, 65535] { R9795 += 1, R9732 += 1, R9733 += 1 };
  s0 -> s3 [0, 65535] { R9795 += 1, R9733 += 1, R69 += 1 };
  s0 -> s0 [0, 65535] { R9794 += 1, R9795 += 1 };
  s0 -> s1 [88, 65535] { R9795 += 1, R9733 += 1 };
  s1 -> s1 [0, 86] { R9795 += 1, R9733 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R9795 += 1 };
  s1 -> s1 [88, 65535] { R9795 += 1, R9733 += 1 };
  s2 -> s1 [0, 86] { R9795 += 1, R9733 += 1 };
  s2 -> s2 [0, 65535] { R9795 += 1, R9732 += 1, R9733 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R9795 += 1, R9733 += 1, R69 += 1 };
  s2 -> s1 [88, 65535] { R9795 += 1, R9733 += 1 };
  s3 -> s1 [0, 86] { R9795 += 1, R9733 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R9795 += 1, R9733 += 1, R69 += 1 };
  s3 -> s5 [0, 65535] { R9795 += 1 };
  s3 -> s1 [88, 65535] { R9795 += 1, R9733 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R9795 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 86] { R9797 += 1, R9735 += 1, R73 += 1 };
  s0 -> s2 [0, 65535] { R9797 += 1, R9734 += 1, R9735 += 1 };
  s0 -> s0 [0, 65535] { R9796 += 1, R9797 += 1 };
  s0 -> s3 [0, 65535] { R9797 += 1, R9735 += 1, R72 += 1, R73 += 1 };
  s0 -> s1 [88, 65535] { R9797 += 1, R9735 += 1, R73 += 1 };
  s1 -> s1 [0, 86] { R9797 += 1, R9735 += 1, R73 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R9797 += 1 };
  s1 -> s1 [0, 65535] { R9797 += 1, R9735 += 1 };
  s1 -> s1 [88, 65535] { R9797 += 1, R9735 += 1, R73 += 1 };
  s2 -> s1 [0, 86] { R9797 += 1, R9735 += 1, R73 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R9797 += 1, R9734 += 1, R9735 += 1 };
  s2 -> s3 [0, 65535] { R9797 += 1, R9735 += 1, R72 += 1, R73 += 1 };
  s2 -> s1 [88, 65535] { R9797 += 1, R9735 += 1, R73 += 1 };
  s3 -> s1 [0, 86] { R9797 += 1, R9735 += 1, R73 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R9797 += 1 };
  s3 -> s3 [0, 65535] { R9797 += 1, R9735 += 1, R72 += 1, R73 += 1 };
  s3 -> s1 [88, 65535] { R9797 += 1, R9735 += 1, R73 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R9797 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R9799 += 1, R9737 += 1, R5164 += 1, R5165 += 1 };
  s0 -> s2 [0, 65535] { R9799 += 1, R9736 += 1, R9737 += 1 };
  s0 -> s0 [0, 65535] { R9798 += 1, R9799 += 1 };
  s0 -> s3 [0, 65535] { R9799 += 1, R9737 += 1 };
  s1 -> s1 [0, 65535] { R9799 += 1, R9737 += 1, R5164 += 1, R5165 += 1 };
  s1 -> s4 [0, 65535] { R9799 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R9799 += 1, R9737 += 1 };
  s2 -> s1 [0, 65535] { R9799 += 1, R9737 += 1, R5164 += 1, R5165 += 1 };
  s2 -> s2 [0, 65535] { R9799 += 1, R9736 += 1, R9737 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R9799 += 1, R9737 += 1 };
  s3 -> s4 [0, 65535] { R9799 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R9799 += 1, R9737 += 1 };
  s4 -> s4 [0, 65535] { R9799 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 87] { R9801 += 1, R9739 += 1, R8979 += 1 };
  s0 -> s2 [0, 65535] { R9801 += 1, R9738 += 1, R9739 += 1 };
  s0 -> s0 [0, 65535] { R9800 += 1, R9801 += 1 };
  s0 -> s3 [0, 65535] { R9801 += 1, R9739 += 1, R8978 += 1, R8979 += 1 };
  s0 -> s4 [88, 88] { R9801 += 1, R9739 += 1, R8979 += 1 };
  s0 -> s1 [89, 65535] { R9801 += 1, R9739 += 1, R8979 += 1 };
  s1 -> s1 [0, 87] { R9801 += 1, R9739 += 1, R8979 += 1 };
  s1 -> s4 [88, 88] { R9801 += 1, R9739 += 1, R8979 += 1 };
  s1 -> s1 [89, 65535] { R9801 += 1, R9739 += 1, R8979 += 1 };
  s2 -> s1 [0, 87] { R9801 += 1, R9739 += 1, R8979 += 1 };
  s2 -> s2 [0, 65535] { R9801 += 1, R9738 += 1, R9739 += 1 };
  s2 -> s3 [0, 65535] { R9801 += 1, R9739 += 1, R8978 += 1, R8979 += 1 };
  s2 -> s4 [88, 88] { R9801 += 1, R9739 += 1, R8979 += 1 };
  s2 -> s1 [89, 65535] { R9801 += 1, R9739 += 1, R8979 += 1 };
  s3 -> s1 [0, 87] { R9801 += 1, R9739 += 1, R8979 += 1 };
  s3 -> s3 [0, 65535] { R9801 += 1, R9739 += 1, R8978 += 1, R8979 += 1 };
  s3 -> s4 [88, 88] { R9801 += 1, R9739 += 1, R8979 += 1 };
  s3 -> s1 [89, 65535] { R9801 += 1, R9739 += 1, R8979 += 1 };
  s4 -> s5 [0, 65535] { R9801 += 1 };
  s4 -> s4 [0, 65535] { R9801 += 1, R9739 += 1, R8979 += 1 };
  s4 -> s6 [0, 65535] { R9801 += 1, R9739 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R9801 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s5 [0, 65535] { R9801 += 1 };
  s6 -> s6 [0, 65535] { R9801 += 1, R9739 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s4, s5, s6, s7;
};
automaton value2_28 {
  init s0;
  s0 -> s0 [0, 65535] { R9802 += 1, R9803 += 1 };
  s0 -> s1 [0, 65535] { R9803 += 1, R9741 += 1, R9406 += 1, R9407 += 1 };
  s0 -> s2 [0, 65535] { R9803 += 1, R9740 += 1, R9741 += 1 };
  s0 -> s3 [0, 65535] { R9803 += 1, R9741 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R9803 += 1, R9741 += 1, R9406 += 1, R9407 += 1 };
  s1 -> s5 [0, 65535] { R9803 += 1 };
  s1 -> s3 [0, 65535] { R9803 += 1, R9741 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R9803 += 1, R9741 += 1, R9406 += 1, R9407 += 1 };
  s2 -> s2 [0, 65535] { R9803 += 1, R9740 += 1, R9741 += 1 };
  s2 -> s3 [0, 65535] { R9803 += 1, R9741 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R9803 += 1 };
  s3 -> s3 [0, 65535] { R9803 += 1, R9741 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R9803 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 87] { R9805 += 1, R9743 += 1, R9723 += 1 };
  s0 -> s2 [0, 65535] { R9805 += 1, R9742 += 1, R9743 += 1 };
  s0 -> s0 [0, 65535] { R9804 += 1, R9805 += 1 };
  s0 -> s1 [0, 65535] { R9805 += 1, R9743 += 1 };
  s0 -> s1 [89, 65535] { R9805 += 1, R9743 += 1, R9723 += 1 };
  s1 -> s1 [0, 87] { R9805 += 1, R9743 += 1, R9723 += 1 };
  s1 -> s4 [0, 65535] { R9805 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R9805 += 1, R9743 += 1 };
  s1 -> s1 [89, 65535] { R9805 += 1, R9743 += 1, R9723 += 1 };
  s2 -> s1 [0, 87] { R9805 += 1, R9743 += 1, R9723 += 1 };
  s2 -> s2 [0, 65535] { R9805 += 1, R9742 += 1, R9743 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R9805 += 1, R9743 += 1 };
  s2 -> s1 [89, 65535] { R9805 += 1, R9743 += 1, R9723 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R9805 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R9807 += 1, R9762 += 1, R9763 += 1 };
  s0 -> s2 [0, 65535] { R9807 += 1, R9763 += 1, R18 += 1 };
  s0 -> s0 [0, 65535] { R9806 += 1, R9807 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R9807 += 1, R9762 += 1, R9763 += 1 };
  s1 -> s2 [0, 65535] { R9807 += 1, R9763 += 1, R18 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R9807 += 1, R9763 += 1, R18 += 1 };
  s2 -> s4 [0, 65535] { R9807 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R9807 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 75] { R9809 += 1, R9765 += 1 };
  s0 -> s2 [0, 65535] { R9809 += 1, R9764 += 1, R9765 += 1 };
  s0 -> s0 [0, 65535] { R9808 += 1, R9809 += 1 };
  s0 -> s3 [76, 76] { R9809 += 1, R9765 += 1 };
  s0 -> s4 [76, 76] { R9809 += 1, R9765 += 1 };
  s0 -> s5 [87, 87] { R9809 += 1, R9765 += 1 };
  s0 -> s1 [88, 65535] { R9809 += 1, R9765 += 1 };
  s1 -> s1 [0, 75] { R9809 += 1, R9765 += 1 };
  s1 -> s3 [76, 76] { R9809 += 1, R9765 += 1 };
  s1 -> s4 [76, 76] { R9809 += 1, R9765 += 1 };
  s1 -> s5 [87, 87] { R9809 += 1, R9765 += 1 };
  s1 -> s1 [88, 65535] { R9809 += 1, R9765 += 1 };
  s2 -> s1 [0, 75] { R9809 += 1, R9765 += 1 };
  s2 -> s2 [0, 65535] { R9809 += 1, R9764 += 1, R9765 += 1 };
  s2 -> s3 [76, 76] { R9809 += 1, R9765 += 1 };
  s2 -> s4 [76, 76] { R9809 += 1, R9765 += 1 };
  s2 -> s5 [87, 87] { R9809 += 1, R9765 += 1 };
  s2 -> s1 [88, 65535] { R9809 += 1, R9765 += 1 };
  s4 -> s4 [0, 76] { R9809 += 1, R9765 += 1 };
  s4 -> s8 [87, 87] { R9809 += 1, R9765 += 1 };
  s4 -> s4 [88, 65535] { R9809 += 1, R9765 += 1 };
  s5 -> s5 [0, 75] { R9809 += 1, R9765 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R9809 += 1 };
  s5 -> s7 [76, 76] { R9809 += 1, R9765 += 1 };
  s5 -> s8 [76, 76] { R9809 += 1, R9765 += 1 };
  s5 -> s5 [87, 65535] { R9809 += 1, R9765 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R9809 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 76] { R9809 += 1, R9765 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R9809 += 1 };
  s8 -> s8 [87, 65535] { R9809 += 1, R9765 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 75] { R9811 += 1, R9767 += 1, R66 += 1 };
  s0 -> s2 [0, 65535] { R9811 += 1, R9766 += 1, R9767 += 1 };
  s0 -> s0 [0, 65535] { R9810 += 1, R9811 += 1 };
  s0 -> s3 [76, 76] { R9811 += 1, R9767 += 1, R66 += 1 };
  s0 -> s4 [76, 76] { R9811 += 1, R9767 += 1, R66 += 1 };
  s0 -> s1 [77, 65535] { R9811 += 1, R9767 += 1, R66 += 1 };
  s1 -> s1 [0, 75] { R9811 += 1, R9767 += 1, R66 += 1 };
  s1 -> s1 [0, 65535] { R9811 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [76, 76] { R9811 += 1, R9767 += 1, R66 += 1 };
  s1 -> s4 [76, 76] { R9811 += 1, R9767 += 1, R66 += 1 };
  s1 -> s1 [77, 65535] { R9811 += 1, R9767 += 1, R66 += 1 };
  s2 -> s1 [0, 75] { R9811 += 1, R9767 += 1, R66 += 1 };
  s2 -> s2 [0, 65535] { R9811 += 1, R9766 += 1, R9767 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [76, 76] { R9811 += 1, R9767 += 1, R66 += 1 };
  s2 -> s4 [76, 76] { R9811 += 1, R9767 += 1, R66 += 1 };
  s2 -> s1 [77, 65535] { R9811 += 1, R9767 += 1, R66 += 1 };
  s3 -> s3 [0, 65535] { R9811 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R9811 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R9811 += 1, R9767 += 1, R66 += 1 };
  s5 -> s5 [0, 65535] { R9811 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 75] { R9813 += 1, R9769 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R9812 += 1, R9813 += 1 };
  s0 -> s2 [0, 65535] { R9813 += 1, R9768 += 1, R9769 += 1 };
  s0 -> s3 [76, 76] { R9813 += 1, R9769 += 1, R68 += 1 };
  s0 -> s4 [76, 76] { R9813 += 1, R9769 += 1, R68 += 1 };
  s0 -> s1 [77, 65535] { R9813 += 1, R9769 += 1, R68 += 1 };
  s1 -> s1 [0, 75] { R9813 += 1, R9769 += 1, R68 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R9813 += 1 };
  s1 -> s3 [76, 76] { R9813 += 1, R9769 += 1, R68 += 1 };
  s1 -> s4 [76, 76] { R9813 += 1, R9769 += 1, R68 += 1 };
  s1 -> s1 [77, 65535] { R9813 += 1, R9769 += 1, R68 += 1 };
  s2 -> s1 [0, 75] { R9813 += 1, R9769 += 1, R68 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R9813 += 1, R9768 += 1, R9769 += 1 };
  s2 -> s3 [76, 76] { R9813 += 1, R9769 += 1, R68 += 1 };
  s2 -> s4 [76, 76] { R9813 += 1, R9769 += 1, R68 += 1 };
  s2 -> s1 [77, 65535] { R9813 += 1, R9769 += 1, R68 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R9813 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R9813 += 1 };
  s4 -> s4 [0, 65535] { R9813 += 1, R9769 += 1, R68 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9813 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 75] { R9815 += 1, R9771 += 1, R70 += 1, R71 += 1 };
  s0 -> s0 [0, 65535] { R9814 += 1, R9815 += 1 };
  s0 -> s2 [0, 65535] { R9815 += 1, R9770 += 1, R9771 += 1 };
  s0 -> s3 [76, 76] { R9815 += 1, R9771 += 1, R70 += 1, R71 += 1 };
  s0 -> s4 [76, 76] { R9815 += 1, R9771 += 1, R70 += 1, R71 += 1 };
  s0 -> s1 [77, 65535] { R9815 += 1, R9771 += 1, R70 += 1, R71 += 1 };
  s1 -> s1 [0, 75] { R9815 += 1, R9771 += 1, R70 += 1, R71 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R9815 += 1 };
  s1 -> s3 [76, 76] { R9815 += 1, R9771 += 1, R70 += 1, R71 += 1 };
  s1 -> s4 [76, 76] { R9815 += 1, R9771 += 1, R70 += 1, R71 += 1 };
  s1 -> s1 [77, 65535] { R9815 += 1, R9771 += 1, R70 += 1, R71 += 1 };
  s2 -> s1 [0, 75] { R9815 += 1, R9771 += 1, R70 += 1, R71 += 1 };
  s2 -> s2 [0, 65535] { R9815 += 1, R9770 += 1, R9771 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [76, 76] { R9815 += 1, R9771 += 1, R70 += 1, R71 += 1 };
  s2 -> s4 [76, 76] { R9815 += 1, R9771 += 1, R70 += 1, R71 += 1 };
  s2 -> s1 [77, 65535] { R9815 += 1, R9771 += 1, R70 += 1, R71 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R9815 += 1, R9771 += 1, R70 += 1, R71 += 1 };
  s3 -> s6 [0, 65535] { R9815 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R9815 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9815 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 75] { R9817 += 1, R9773 += 1, R5160 += 1, R5161 += 1 };
  s0 -> s2 [0, 75] { R9817 += 1, R9773 += 1, R5161 += 1, R5162 += 1 };
  s0 -> s0 [0, 65535] { R9816 += 1, R9817 += 1 };
  s0 -> s3 [0, 65535] { R9817 += 1, R9772 += 1, R9773 += 1 };
  s0 -> s4 [76, 76] { R9817 += 1, R9773 += 1, R5160 += 1, R5161 += 1 };
  s0 -> s5 [76, 76] { R9817 += 1, R9773 += 1, R5161 += 1, R5162 += 1 };
  s0 -> s6 [76, 76] { R9817 += 1, R9773 += 1, R5160 += 1, R5161 += 1 };
  s0 -> s7 [76, 76] { R9817 += 1, R9773 += 1, R5161 += 1, R5162 += 1 };
  s0 -> s1 [77, 65535] { R9817 += 1, R9773 += 1, R5160 += 1, R5161 += 1 };
  s0 -> s2 [77, 65535] { R9817 += 1, R9773 += 1, R5161 += 1, R5162 += 1 };
  s1 -> s1 [0, 75] { R9817 += 1, R9773 += 1, R5160 += 1, R5161 += 1 };
  s1 -> s2 [0, 75] { R9817 += 1, R9773 += 1, R5161 += 1, R5162 += 1 };
  s1 -> s4 [76, 76] { R9817 += 1, R9773 += 1, R5160 += 1, R5161 += 1 };
  s1 -> s5 [76, 76] { R9817 += 1, R9773 += 1, R5161 += 1, R5162 += 1 };
  s1 -> s6 [76, 76] { R9817 += 1, R9773 += 1, R5160 += 1, R5161 += 1 };
  s1 -> s7 [76, 76] { R9817 += 1, R9773 += 1, R5161 += 1, R5162 += 1 };
  s1 -> s1 [77, 65535] { R9817 += 1, R9773 += 1, R5160 += 1, R5161 += 1 };
  s1 -> s2 [77, 65535] { R9817 += 1, R9773 += 1, R5161 += 1, R5162 += 1 };
  s2 -> s2 [0, 75] { R9817 += 1, R9773 += 1, R5161 += 1, R5162 += 1 };
  s2 -> s2 [0, 65535] { R9817 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s5 [76, 76] { R9817 += 1, R9773 += 1, R5161 += 1, R5162 += 1 };
  s2 -> s7 [76, 76] { R9817 += 1, R9773 += 1, R5161 += 1, R5162 += 1 };
  s2 -> s2 [77, 65535] { R9817 += 1, R9773 += 1, R5161 += 1, R5162 += 1 };
  s3 -> s1 [0, 75] { R9817 += 1, R9773 += 1, R5160 += 1, R5161 += 1 };
  s3 -> s2 [0, 75] { R9817 += 1, R9773 += 1, R5161 += 1, R5162 += 1 };
  s3 -> s3 [0, 65535] { R9817 += 1, R9772 += 1, R9773 += 1 };
  s3 -> s4 [76, 76] { R9817 += 1, R9773 += 1, R5160 += 1, R5161 += 1 };
  s3 -> s5 [76, 76] { R9817 += 1, R9773 += 1, R5161 += 1, R5162 += 1 };
  s3 -> s6 [76, 76] { R9817 += 1, R9773 += 1, R5160 += 1, R5161 += 1 };
  s3 -> s7 [76, 76] { R9817 += 1, R9773 += 1, R5161 += 1, R5162 += 1 };
  s3 -> s1 [77, 65535] { R9817 += 1, R9773 += 1, R5160 += 1, R5161 += 1 };
  s3 -> s2 [77, 65535] { R9817 += 1, R9773 += 1, R5161 += 1, R5162 += 1 };
  s5 -> s5 [0, 65535] { R9817 += 1, R9773 += 1, R5161 += 1, R5162 += 1 };
  s5 -> s9 [0, 65535] { R9817 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s5 [0, 65535] { R9817 += 1, R9773 += 1, R5161 += 1, R5162 += 1 };
  s6 -> s6 [0, 65535] { R9817 += 1, R9773 += 1, R5160 += 1, R5161 += 1 };
  s7 -> s7 [0, 65535] { R9817 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R9817 += 1 };
  s9 -> s8 [0, 65535];
  accepting s8, s5, s2, s9, s7;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 75] { R9819 += 1, R9775 += 1, R8976 += 1, R8977 += 1 };
  s0 -> s2 [0, 65535] { R9819 += 1, R9774 += 1, R9775 += 1 };
  s0 -> s0 [0, 65535] { R9818 += 1, R9819 += 1 };
  s0 -> s3 [76, 76] { R9819 += 1, R9775 += 1, R8976 += 1, R8977 += 1 };
  s0 -> s4 [76, 76] { R9819 += 1, R9775 += 1, R8976 += 1, R8977 += 1 };
  s0 -> s1 [77, 65535] { R9819 += 1, R9775 += 1, R8976 += 1, R8977 += 1 };
  s1 -> s1 [0, 75] { R9819 += 1, R9775 += 1, R8976 += 1, R8977 += 1 };
  s1 -> s1 [0, 65535] { R9819 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [76, 76] { R9819 += 1, R9775 += 1, R8976 += 1, R8977 += 1 };
  s1 -> s4 [76, 76] { R9819 += 1, R9775 += 1, R8976 += 1, R8977 += 1 };
  s1 -> s1 [77, 65535] { R9819 += 1, R9775 += 1, R8976 += 1, R8977 += 1 };
  s2 -> s1 [0, 75] { R9819 += 1, R9775 += 1, R8976 += 1, R8977 += 1 };
  s2 -> s2 [0, 65535] { R9819 += 1, R9774 += 1, R9775 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [76, 76] { R9819 += 1, R9775 += 1, R8976 += 1, R8977 += 1 };
  s2 -> s4 [76, 76] { R9819 += 1, R9775 += 1, R8976 += 1, R8977 += 1 };
  s2 -> s1 [77, 65535] { R9819 += 1, R9775 += 1, R8976 += 1, R8977 += 1 };
  s3 -> s3 [0, 65535] { R9819 += 1, R9775 += 1, R8976 += 1, R8977 += 1 };
  s3 -> s6 [0, 65535] { R9819 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R9819 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R9819 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R9821 += 1, R9777 += 1, R9402 += 1, R9403 += 1 };
  s0 -> s2 [0, 75] { R9821 += 1, R9777 += 1, R9403 += 1, R9404 += 1 };
  s0 -> s3 [0, 65535] { R9821 += 1, R9776 += 1, R9777 += 1 };
  s0 -> s0 [0, 65535] { R9820 += 1, R9821 += 1 };
  s0 -> s4 [76, 76] { R9821 += 1, R9777 += 1, R9402 += 1, R9403 += 1 };
  s0 -> s5 [76, 76] { R9821 += 1, R9777 += 1, R9403 += 1, R9404 += 1 };
  s0 -> s6 [76, 76] { R9821 += 1, R9777 += 1, R9403 += 1, R9404 += 1 };
  s0 -> s7 [76, 76] { R9821 += 1, R9777 += 1, R9402 += 1, R9403 += 1 };
  s0 -> s1 [77, 65535] { R9821 += 1, R9777 += 1, R9402 += 1, R9403 += 1 };
  s0 -> s2 [77, 65535] { R9821 += 1, R9777 += 1, R9403 += 1, R9404 += 1 };
  s1 -> s1 [0, 75] { R9821 += 1, R9777 += 1, R9402 += 1, R9403 += 1 };
  s1 -> s2 [0, 75] { R9821 += 1, R9777 += 1, R9403 += 1, R9404 += 1 };
  s1 -> s4 [76, 76] { R9821 += 1, R9777 += 1, R9402 += 1, R9403 += 1 };
  s1 -> s5 [76, 76] { R9821 += 1, R9777 += 1, R9403 += 1, R9404 += 1 };
  s1 -> s6 [76, 76] { R9821 += 1, R9777 += 1, R9403 += 1, R9404 += 1 };
  s1 -> s7 [76, 76] { R9821 += 1, R9777 += 1, R9402 += 1, R9403 += 1 };
  s1 -> s1 [77, 65535] { R9821 += 1, R9777 += 1, R9402 += 1, R9403 += 1 };
  s1 -> s2 [77, 65535] { R9821 += 1, R9777 += 1, R9403 += 1, R9404 += 1 };
  s2 -> s2 [0, 75] { R9821 += 1, R9777 += 1, R9403 += 1, R9404 += 1 };
  s2 -> s2 [0, 65535] { R9821 += 1 };
  s2 -> s9 [0, 65535];
  s2 -> s5 [76, 76] { R9821 += 1, R9777 += 1, R9403 += 1, R9404 += 1 };
  s2 -> s6 [76, 76] { R9821 += 1, R9777 += 1, R9403 += 1, R9404 += 1 };
  s2 -> s2 [77, 65535] { R9821 += 1, R9777 += 1, R9403 += 1, R9404 += 1 };
  s3 -> s1 [0, 75] { R9821 += 1, R9777 += 1, R9402 += 1, R9403 += 1 };
  s3 -> s2 [0, 75] { R9821 += 1, R9777 += 1, R9403 += 1, R9404 += 1 };
  s3 -> s3 [0, 65535] { R9821 += 1, R9776 += 1, R9777 += 1 };
  s3 -> s4 [76, 76] { R9821 += 1, R9777 += 1, R9402 += 1, R9403 += 1 };
  s3 -> s5 [76, 76] { R9821 += 1, R9777 += 1, R9403 += 1, R9404 += 1 };
  s3 -> s6 [76, 76] { R9821 += 1, R9777 += 1, R9403 += 1, R9404 += 1 };
  s3 -> s7 [76, 76] { R9821 += 1, R9777 += 1, R9402 += 1, R9403 += 1 };
  s3 -> s1 [77, 65535] { R9821 += 1, R9777 += 1, R9402 += 1, R9403 += 1 };
  s3 -> s2 [77, 65535] { R9821 += 1, R9777 += 1, R9403 += 1, R9404 += 1 };
  s4 -> s4 [0, 65535] { R9821 += 1, R9777 += 1, R9402 += 1, R9403 += 1 };
  s4 -> s6 [0, 65535] { R9821 += 1, R9777 += 1, R9403 += 1, R9404 += 1 };
  s5 -> s5 [0, 65535] { R9821 += 1 };
  s5 -> s9 [0, 65535];
  s6 -> s8 [0, 65535] { R9821 += 1 };
  s6 -> s6 [0, 65535] { R9821 += 1, R9777 += 1, R9403 += 1, R9404 += 1 };
  s6 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R9821 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  accepting s8, s5, s2, s9, s6;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 75] { R9823 += 1, R9779 += 1, R9721 += 1 };
  s0 -> s2 [0, 75] { R9823 += 1, R9779 += 1, R9720 += 1, R9721 += 1 };
  s0 -> s3 [0, 65535] { R9823 += 1, R9778 += 1, R9779 += 1 };
  s0 -> s0 [0, 65535] { R9822 += 1, R9823 += 1 };
  s0 -> s4 [76, 76] { R9823 += 1, R9779 += 1, R9720 += 1, R9721 += 1 };
  s0 -> s5 [76, 76] { R9823 += 1, R9779 += 1, R9721 += 1 };
  s0 -> s6 [76, 76] { R9823 += 1, R9779 += 1, R9721 += 1 };
  s0 -> s7 [76, 76] { R9823 += 1, R9779 += 1, R9720 += 1, R9721 += 1 };
  s0 -> s1 [77, 86] { R9823 += 1, R9779 += 1, R9721 += 1 };
  s0 -> s2 [77, 65535] { R9823 += 1, R9779 += 1, R9720 += 1, R9721 += 1 };
  s0 -> s8 [87, 87] { R9823 += 1, R9779 += 1, R9721 += 1 };
  s0 -> s1 [89, 65535] { R9823 += 1, R9779 += 1, R9721 += 1 };
  s1 -> s1 [0, 75] { R9823 += 1, R9779 += 1, R9721 += 1 };
  s1 -> s5 [76, 76] { R9823 += 1, R9779 += 1 };
  s1 -> s6 [76, 76] { R9823 += 1, R9779 += 1 };
  s1 -> s1 [77, 86] { R9823 += 1, R9779 += 1, R9721 += 1 };
  s1 -> s1 [77, 65535] { R9823 += 1, R9779 += 1 };
  s1 -> s8 [87, 87] { R9823 += 1, R9779 += 1, R9721 += 1 };
  s1 -> s1 [89, 65535] { R9823 += 1, R9779 += 1, R9721 += 1 };
  s2 -> s1 [0, 75] { R9823 += 1, R9779 += 1, R9721 += 1 };
  s2 -> s2 [0, 75] { R9823 += 1, R9779 += 1, R9720 += 1, R9721 += 1 };
  s2 -> s4 [76, 76] { R9823 += 1, R9779 += 1, R9720 += 1, R9721 += 1 };
  s2 -> s5 [76, 76] { R9823 += 1, R9779 += 1, R9721 += 1 };
  s2 -> s6 [76, 76] { R9823 += 1, R9779 += 1, R9721 += 1 };
  s2 -> s7 [76, 76] { R9823 += 1, R9779 += 1, R9720 += 1, R9721 += 1 };
  s2 -> s1 [77, 86] { R9823 += 1, R9779 += 1, R9721 += 1 };
  s2 -> s2 [77, 65535] { R9823 += 1, R9779 += 1, R9720 += 1, R9721 += 1 };
  s2 -> s8 [87, 87] { R9823 += 1, R9779 += 1, R9721 += 1 };
  s2 -> s1 [89, 65535] { R9823 += 1, R9779 += 1, R9721 += 1 };
  s3 -> s1 [0, 75] { R9823 += 1, R9779 += 1, R9721 += 1 };
  s3 -> s2 [0, 75] { R9823 += 1, R9779 += 1, R9720 += 1, R9721 += 1 };
  s3 -> s3 [0, 65535] { R9823 += 1, R9778 += 1, R9779 += 1 };
  s3 -> s4 [76, 76] { R9823 += 1, R9779 += 1, R9720 += 1, R9721 += 1 };
  s3 -> s5 [76, 76] { R9823 += 1, R9779 += 1, R9721 += 1 };
  s3 -> s6 [76, 76] { R9823 += 1, R9779 += 1, R9721 += 1 };
  s3 -> s7 [76, 76] { R9823 += 1, R9779 += 1, R9720 += 1, R9721 += 1 };
  s3 -> s1 [77, 86] { R9823 += 1, R9779 += 1, R9721 += 1 };
  s3 -> s2 [77, 65535] { R9823 += 1, R9779 += 1, R9720 += 1, R9721 += 1 };
  s3 -> s8 [87, 87] { R9823 += 1, R9779 += 1, R9721 += 1 };
  s3 -> s1 [89, 65535] { R9823 += 1, R9779 += 1, R9721 += 1 };
  s4 -> s6 [0, 86] { R9823 += 1, R9779 += 1, R9721 += 1 };
  s4 -> s4 [0, 65535] { R9823 += 1, R9779 += 1, R9720 += 1, R9721 += 1 };
  s4 -> s10 [87, 87] { R9823 += 1, R9779 += 1, R9721 += 1 };
  s4 -> s6 [89, 65535] { R9823 += 1, R9779 += 1, R9721 += 1 };
  s6 -> s6 [0, 86] { R9823 += 1, R9779 += 1, R9721 += 1 };
  s6 -> s6 [0, 65535] { R9823 += 1, R9779 += 1 };
  s6 -> s10 [87, 87] { R9823 += 1, R9779 += 1, R9721 += 1 };
  s6 -> s6 [89, 65535] { R9823 += 1, R9779 += 1, R9721 += 1 };
  s8 -> s8 [0, 75] { R9823 += 1, R9779 += 1, R9721 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R9823 += 1 };
  s8 -> s10 [76, 76] { R9823 += 1, R9779 += 1 };
  s8 -> s11 [76, 76] { R9823 += 1, R9779 += 1 };
  s8 -> s8 [77, 87] { R9823 += 1, R9779 += 1, R9721 += 1 };
  s8 -> s8 [77, 65535] { R9823 += 1, R9779 += 1 };
  s8 -> s8 [89, 65535] { R9823 += 1, R9779 += 1, R9721 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 87] { R9823 += 1, R9779 += 1, R9721 += 1 };
  s10 -> s10 [0, 65535] { R9823 += 1, R9779 += 1 };
  s10 -> s9 [0, 65535];
  s10 -> s12 [0, 65535] { R9823 += 1 };
  s10 -> s10 [89, 65535] { R9823 += 1, R9779 += 1, R9721 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R9823 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R9823 += 1 };
  accepting s12, s8, s9, s10, s11;
};
};
synchronised {  // Automata constraining P63
automaton P63_0 {
  init s0;
  s0 -> s1 [119, 119];
  accepting s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [108, 108];
  accepting s1;
};
};
constraint R1 = R9739 && R2 = R9823 && R20 - R9823 = -1 && R21 = R9823 && R22 - R9823 = -1 && R23 = R9823 && R24 = 0 && R25 = 1 && R26 = 0 && R27 = 1 && R38 + R67 + R66 + -1*R8979 + -1*R8977 - R53 = 0 && R52 + R8978 + R8976 = 0 && R9738 = 0 && R9764 = 0 && R9765 = 0 && R9772 = 0 && R9773 = 0 && R9776 = 0 && R9777 = 0 && R9778 = 0 && R9779 = 0 && R9780 = 0 && R9781 = R9823 && R9782 = 0 && R9783 = R9823 && R9784 = 0 && R9785 = R9823 && R9786 = 0 && R9787 = R9823 && R9788 = 0 && R9789 = R9823 && R9790 = 0 && R9791 = R9823 && R9792 = 0 && R9793 = R9823 && R9794 = 0 && R9795 = R9823 && R9796 = 0 && R9797 = R9823 && R9798 = 0 && R9799 = R9823 && R9800 = 0 && R9801 = R9823 && R9802 = 0 && R9803 = R9823 && R9804 = 0 && R9805 = R9823 && R9806 = 0 && R9807 = R9823 && R9808 = 0 && R9809 = R9823 && R9810 = 0 && R9811 = R9823 && R9812 = 0 && R9813 = R9823 && R9814 = 0 && R9815 = R9823 && R9816 = 0 && R9817 = R9823 && R9818 = 0 && R9819 = R9823 && R9820 = 0 && R9821 = R9823 && R9822 = 0 && R8 < 1 && R11 < 1 && R12 < 1 && R40 + R69 + R68 < 1 && -1*R8979 + -1*R8977 - R53 < 1 && -1 < R9739 && 0 < R9823 && (R48 + R5165 + R5162 != 0 || ((R42 + R72 + R70 != 0 || R43 + R73 + R71 + -1*R8979 + -1*R8977 - R53 = 0 || R53 + R8979 + R8977 < 1) && (R42 + R72 + R70 = 0 || R53 + R8979 + R8977 < 1))) && (R48 + R5165 + R5162 != 0 || ((R46 + R5163 + R5160 != 0 || R47 + R5164 + R5161 + -1*R8979 + -1*R8977 - R53 = 0 || R53 + R8979 + R8977 < 1) && (R46 + R5163 + R5160 = 0 || R53 + R8979 + R8977 < 1))) && (R9724 != 0 || R9725 = R9739 || (R17 = 0 && R9739 = 0)) && (R9726 != 0 || R9727 = R9739 || (R17 = 0 && R9739 = 0)) && (R9728 != 0 || R9729 = R9739 || (R17 = 0 && R9739 = 0)) && (R9730 != 0 || R9731 = R9739 || (R17 = 0 && R9739 = 0)) && (R9732 != 0 || R9733 = R9739 || (R17 = 0 && R9739 = 0)) && (R9734 != 0 || R9735 = R9739 || (R17 = 0 && R9739 = 0)) && (R9736 != 0 || R9737 = R9739 || (R17 = 0 && R9739 = 0)) && (R9740 != 0 || R9739 = R9741 || (R17 = 0 && R9739 = 0)) && (R9742 != 0 || R9739 = R9743 || (R17 = 0 && R9739 = 0)) && (R18 = 0 || (R9762 = 0 && R9763 = 0)) && (R18 = 0 || (R9766 = 0 && R9767 = 0)) && (R18 = 0 || (R9768 = 0 && R9769 = 0)) && (R18 = 0 || (R9770 = 0 && R9771 = 0)) && (R18 = 0 || (R9774 = 0 && R9775 = 0)) && (R19 = 0 || (R9744 = 0 && R9745 = 0)) && (R19 = 0 || (R9746 = 0 && R9747 = 0)) && (R19 = 0 || (R9748 = 0 && R9749 = 0)) && (R19 = 0 || (R9750 = 0 && R9751 = 0)) && (R19 = 0 || (R9752 = 0 && R9753 = 0)) && (R19 = 0 || (R9754 = 0 && R9755 = 0)) && (R19 = 0 || (R9756 = 0 && R9757 = 0)) && (R19 = 0 || (R9758 = 0 && R9759 = 0)) && (R19 = 0 || (R9760 = 0 && R9761 = 0)) && (R48 + R5165 + R5162 = 0 || (R42 + R72 + R70 = 0 && R43 + R73 + R71 + -1*R8979 + -1*R8977 - R53 = 0)) && (R48 + R5165 + R5162 = 0 || (R46 + R5163 + R5160 = 0 && R47 + R5164 + R5161 + -1*R8979 + -1*R8977 - R53 = 0)) && (R58 + R9407 + R9404 = 0 || (R56 + R9405 + R9402 = 0 && R57 + R9406 + R9403 = 0)) && (R58 + R9407 + R9404 = 0 || (R62 + R9722 + R9720 = 0 && R63 + R9723 + R9721 = 0)) && (R9724 = 0 || (R17 = 0 && R9739 = 0)) && (R9726 = 0 || (R17 = 0 && R9739 = 0)) && (R9728 = 0 || (R17 = 0 && R9739 = 0)) && (R9730 = 0 || (R17 = 0 && R9739 = 0)) && (R9732 = 0 || (R17 = 0 && R9739 = 0)) && (R9734 = 0 || (R17 = 0 && R9739 = 0)) && (R9736 = 0 || (R17 = 0 && R9739 = 0)) && (R9740 = 0 || (R17 = 0 && R9739 = 0)) && (R9742 = 0 || (R17 = 0 && R9739 = 0));
// End of Parikh automata intersection problem
