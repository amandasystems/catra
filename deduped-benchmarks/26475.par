// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R10000, R10001, R10002, R10003, R10004, R10005, R10006, R10007, R10008, R10009, R10010, R10011, R10012, R10013, R10014, R10015, R10016, R10017, R10018, R10019, R10020, R10021, R10022, R10023, R10024, R10025, R10026, R10027, R10028, R10029, R10030, R10031, R10032, R10033, R10034, R10035, R10036, R10037, R11, R12, R17, R18, R19, R2, R20, R21, R22, R23, R24, R25, R26, R27, R3, R38, R4, R40, R42, R43, R46, R47, R48, R5160, R5161, R5162, R5163, R5164, R5165, R52, R53, R56, R57, R58, R62, R63, R66, R67, R68, R69, R70, R71, R72, R73, R8, R8976, R8977, R8978, R8979, R9824, R9825, R9826, R9827, R9828, R9829, R9934, R9935, R9936, R9937, R9938, R9939, R9940, R9941, R9942, R9943, R9944, R9945, R9946, R9947, R9948, R9949, R9950, R9951, R9952, R9953, R9954, R9955, R9956, R9957, R9958, R9959, R9960, R9961, R9962, R9963, R9964, R9965, R9966, R9967, R9968, R9969, R9970, R9971, R9972, R9973, R9974, R9975, R9976, R9977, R9978, R9979, R9980, R9981, R9982, R9983, R9984, R9985, R9986, R9987, R9988, R9989, R9990, R9991, R9992, R9993, R9994, R9995, R9996, R9997, R9998, R9999;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [76, 76];
  s0 -> s0 [77, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [76, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R2 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R11 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 75];
  s0 -> s0 [0, 65535] { R12 += 1 };
  s0 -> s2 [76, 76];
  s0 -> s1 [77, 65535];
  s1 -> s1 [0, 75];
  s1 -> s2 [76, 76];
  s1 -> s1 [77, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R21 += 1 };
  s0 -> s0 [0, 65535] { R20 += 1, R21 += 1 };
  s0 -> s2 [9, 13] { R21 += 1 };
  s0 -> s1 [14, 31] { R21 += 1 };
  s0 -> s2 [32, 32] { R21 += 1 };
  s0 -> s1 [33, 65535] { R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R21 += 1 };
  s2 -> s1 [0, 65535] { R21 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R22 += 1, R23 += 1 };
  s1 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R25 += 1 };
  s0 -> s0 [0, 65535] { R24 += 1, R25 += 1 };
  s0 -> s2 [9, 13] { R25 += 1 };
  s0 -> s1 [14, 31] { R25 += 1 };
  s0 -> s2 [32, 32] { R25 += 1 };
  s0 -> s1 [33, 65535] { R25 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R25 += 1 };
  s2 -> s1 [0, 65535] { R25 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R26 += 1, R27 += 1 };
  s0 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s1 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R9958 += 1, R9959 += 1 };
  s0 -> s1 [0, 65535] { R9959 += 1, R19 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R9959 += 1, R19 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 75] { R9961 += 1 };
  s0 -> s0 [0, 65535] { R9960 += 1, R9961 += 1 };
  s0 -> s2 [76, 76] { R9961 += 1 };
  s0 -> s3 [76, 76] { R9961 += 1 };
  s0 -> s1 [88, 65535] { R9961 += 1 };
  s1 -> s1 [0, 75] { R9961 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [76, 76] { R9961 += 1 };
  s1 -> s3 [76, 76] { R9961 += 1 };
  s1 -> s1 [88, 65535] { R9961 += 1 };
  s2 -> s2 [0, 76] { R9961 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [88, 65535] { R9961 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 75] { R9963 += 1, R38 += 1 };
  s0 -> s0 [0, 65535] { R9962 += 1, R9963 += 1 };
  s0 -> s2 [76, 76] { R9963 += 1, R38 += 1 };
  s0 -> s3 [76, 76] { R9963 += 1, R38 += 1 };
  s0 -> s1 [77, 65535] { R9963 += 1, R38 += 1 };
  s1 -> s1 [0, 75] { R9963 += 1, R38 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [76, 76] { R9963 += 1, R38 += 1 };
  s1 -> s3 [76, 76] { R9963 += 1, R38 += 1 };
  s1 -> s1 [77, 65535] { R9963 += 1, R38 += 1 };
  s2 -> s2 [0, 65535] { R9963 += 1, R38 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 75] { R9965 += 1, R40 += 1 };
  s0 -> s0 [0, 65535] { R9964 += 1, R9965 += 1 };
  s0 -> s2 [76, 76] { R9965 += 1, R40 += 1 };
  s0 -> s3 [76, 76] { R9965 += 1, R40 += 1 };
  s0 -> s1 [77, 65535] { R9965 += 1, R40 += 1 };
  s1 -> s1 [0, 75] { R9965 += 1, R40 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [76, 76] { R9965 += 1, R40 += 1 };
  s1 -> s3 [76, 76] { R9965 += 1, R40 += 1 };
  s1 -> s1 [77, 65535] { R9965 += 1, R40 += 1 };
  s2 -> s2 [0, 65535] { R9965 += 1, R40 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 75] { R9967 += 1, R42 += 1, R43 += 1 };
  s0 -> s0 [0, 65535] { R9966 += 1, R9967 += 1 };
  s0 -> s2 [76, 76] { R9967 += 1, R42 += 1, R43 += 1 };
  s0 -> s3 [76, 76] { R9967 += 1, R42 += 1, R43 += 1 };
  s0 -> s1 [77, 65535] { R9967 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 75] { R9967 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [76, 76] { R9967 += 1, R42 += 1, R43 += 1 };
  s1 -> s3 [76, 76] { R9967 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [77, 65535] { R9967 += 1, R42 += 1, R43 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R9967 += 1, R42 += 1, R43 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 75] { R9969 += 1, R46 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R9968 += 1, R9969 += 1 };
  s0 -> s2 [76, 76] { R9969 += 1, R46 += 1, R47 += 1 };
  s0 -> s3 [76, 76] { R9969 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [77, 65535] { R9969 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 75] { R9969 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [76, 76] { R9969 += 1, R46 += 1, R47 += 1 };
  s1 -> s3 [76, 76] { R9969 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [77, 65535] { R9969 += 1, R46 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R9969 += 1, R46 += 1, R47 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 75] { R9971 += 1, R52 += 1, R53 += 1 };
  s0 -> s0 [0, 65535] { R9970 += 1, R9971 += 1 };
  s0 -> s2 [76, 76] { R9971 += 1, R52 += 1, R53 += 1 };
  s0 -> s3 [76, 76] { R9971 += 1, R52 += 1, R53 += 1 };
  s0 -> s1 [77, 65535] { R9971 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 75] { R9971 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [76, 76] { R9971 += 1, R52 += 1, R53 += 1 };
  s1 -> s3 [76, 76] { R9971 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [77, 65535] { R9971 += 1, R52 += 1, R53 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R9971 += 1, R52 += 1, R53 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 75] { R9973 += 1, R56 += 1, R57 += 1 };
  s0 -> s0 [0, 65535] { R9972 += 1, R9973 += 1 };
  s0 -> s2 [76, 76] { R9973 += 1, R56 += 1, R57 += 1 };
  s0 -> s3 [76, 76] { R9973 += 1, R56 += 1, R57 += 1 };
  s0 -> s1 [77, 65535] { R9973 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 75] { R9973 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [76, 76] { R9973 += 1, R56 += 1, R57 += 1 };
  s1 -> s3 [76, 76] { R9973 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [77, 65535] { R9973 += 1, R56 += 1, R57 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R9973 += 1, R56 += 1, R57 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 75] { R9975 += 1, R62 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R9974 += 1, R9975 += 1 };
  s0 -> s2 [76, 76] { R9975 += 1, R62 += 1, R63 += 1 };
  s0 -> s3 [76, 76] { R9975 += 1, R62 += 1, R63 += 1 };
  s0 -> s1 [77, 65535] { R9975 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 75] { R9975 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [76, 76] { R9975 += 1, R62 += 1, R63 += 1 };
  s1 -> s3 [76, 76] { R9975 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [77, 65535] { R9975 += 1, R62 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R9975 += 1, R62 += 1, R63 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 75] { R9995 += 1 };
  s0 -> s0 [0, 65535] { R9994 += 1, R9995 += 1 };
  s0 -> s2 [76, 76] { R9995 += 1 };
  s0 -> s1 [77, 65535] { R9995 += 1 };
  s1 -> s1 [0, 75] { R9995 += 1 };
  s1 -> s2 [76, 76] { R9995 += 1 };
  s1 -> s1 [77, 65535] { R9995 += 1 };
  s2 -> s2 [0, 65535] { R9995 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R9997 += 1, R1 += 1 };
  s0 -> s0 [0, 65535] { R9996 += 1, R9997 += 1 };
  s1 -> s1 [0, 65535] { R9997 += 1, R1 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 75] { R9999 += 1 };
  s0 -> s0 [0, 65535] { R9998 += 1, R9999 += 1 };
  s0 -> s2 [0, 65535] { R9999 += 1, R8 += 1 };
  s0 -> s3 [76, 76] { R9999 += 1 };
  s0 -> s1 [77, 65535] { R9999 += 1 };
  s1 -> s1 [0, 75] { R9999 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [76, 76] { R9999 += 1 };
  s1 -> s1 [77, 65535] { R9999 += 1 };
  s2 -> s1 [0, 75] { R9999 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R9999 += 1, R8 += 1 };
  s2 -> s3 [76, 76] { R9999 += 1 };
  s2 -> s1 [77, 65535] { R9999 += 1 };
  s3 -> s3 [0, 65535] { R9999 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 75] { R10001 += 1, R9939 += 1 };
  s0 -> s2 [0, 65535] { R10001 += 1, R9938 += 1, R9939 += 1 };
  s0 -> s0 [0, 65535] { R10000 += 1, R10001 += 1 };
  s0 -> s1 [77, 65535] { R10001 += 1, R9939 += 1 };
  s1 -> s1 [0, 75] { R10001 += 1, R9939 += 1 };
  s1 -> s1 [0, 65535] { R10001 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [77, 65535] { R10001 += 1, R9939 += 1 };
  s2 -> s1 [0, 75] { R10001 += 1, R9939 += 1 };
  s2 -> s2 [0, 65535] { R10001 += 1, R9938 += 1, R9939 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [77, 65535] { R10001 += 1, R9939 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R10003 += 1, R9940 += 1, R9941 += 1 };
  s0 -> s0 [0, 65535] { R10002 += 1, R10003 += 1 };
  s0 -> s2 [0, 65535] { R10003 += 1, R9941 += 1, R17 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R10003 += 1, R9940 += 1, R9941 += 1 };
  s1 -> s2 [0, 65535] { R10003 += 1, R9941 += 1, R17 += 1 };
  s2 -> s3 [0, 65535] { R10003 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R10003 += 1, R9941 += 1, R17 += 1 };
  s3 -> s3 [0, 65535] { R10003 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 76] { R10005 += 1, R9943 += 1 };
  s0 -> s0 [0, 65535] { R10004 += 1, R10005 += 1 };
  s0 -> s2 [0, 65535] { R10005 += 1, R9942 += 1, R9943 += 1 };
  s0 -> s1 [87, 65535] { R10005 += 1, R9943 += 1 };
  s1 -> s1 [0, 76] { R10005 += 1, R9943 += 1 };
  s1 -> s1 [0, 65535] { R10005 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [87, 65535] { R10005 += 1, R9943 += 1 };
  s2 -> s1 [0, 76] { R10005 += 1, R9943 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R10005 += 1, R9942 += 1, R9943 += 1 };
  s2 -> s1 [87, 65535] { R10005 += 1, R9943 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R10007 += 1, R9945 += 1, R67 += 1 };
  s0 -> s0 [0, 65535] { R10006 += 1, R10007 += 1 };
  s0 -> s2 [0, 65535] { R10007 += 1, R9944 += 1, R9945 += 1 };
  s1 -> s1 [0, 65535] { R10007 += 1, R9945 += 1, R67 += 1 };
  s1 -> s4 [0, 65535] { R10007 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R10007 += 1, R9945 += 1, R67 += 1 };
  s2 -> s2 [0, 65535] { R10007 += 1, R9944 += 1, R9945 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R10007 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 86] { R10009 += 1, R9947 += 1 };
  s0 -> s2 [0, 65535] { R10009 += 1, R9947 += 1, R69 += 1 };
  s0 -> s0 [0, 65535] { R10008 += 1, R10009 += 1 };
  s0 -> s3 [0, 65535] { R10009 += 1, R9946 += 1, R9947 += 1 };
  s0 -> s1 [88, 65535] { R10009 += 1, R9947 += 1 };
  s1 -> s1 [0, 86] { R10009 += 1, R9947 += 1 };
  s1 -> s1 [0, 65535] { R10009 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [88, 65535] { R10009 += 1, R9947 += 1 };
  s2 -> s1 [0, 86] { R10009 += 1, R9947 += 1 };
  s2 -> s2 [0, 65535] { R10009 += 1, R9947 += 1, R69 += 1 };
  s2 -> s5 [0, 65535] { R10009 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [88, 65535] { R10009 += 1, R9947 += 1 };
  s3 -> s1 [0, 86] { R10009 += 1, R9947 += 1 };
  s3 -> s2 [0, 65535] { R10009 += 1, R9947 += 1, R69 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R10009 += 1, R9946 += 1, R9947 += 1 };
  s3 -> s1 [88, 65535] { R10009 += 1, R9947 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R10009 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 86] { R10011 += 1, R9949 += 1, R73 += 1 };
  s0 -> s2 [0, 65535] { R10011 += 1, R9948 += 1, R9949 += 1 };
  s0 -> s3 [0, 65535] { R10011 += 1, R9949 += 1, R72 += 1, R73 += 1 };
  s0 -> s0 [0, 65535] { R10010 += 1, R10011 += 1 };
  s0 -> s1 [88, 65535] { R10011 += 1, R9949 += 1, R73 += 1 };
  s1 -> s1 [0, 86] { R10011 += 1, R9949 += 1, R73 += 1 };
  s1 -> s4 [0, 65535] { R10011 += 1 };
  s1 -> s1 [0, 65535] { R10011 += 1, R9949 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [88, 65535] { R10011 += 1, R9949 += 1, R73 += 1 };
  s2 -> s1 [0, 86] { R10011 += 1, R9949 += 1, R73 += 1 };
  s2 -> s2 [0, 65535] { R10011 += 1, R9948 += 1, R9949 += 1 };
  s2 -> s3 [0, 65535] { R10011 += 1, R9949 += 1, R72 += 1, R73 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [88, 65535] { R10011 += 1, R9949 += 1, R73 += 1 };
  s3 -> s1 [0, 86] { R10011 += 1, R9949 += 1, R73 += 1 };
  s3 -> s3 [0, 65535] { R10011 += 1, R9949 += 1, R72 += 1, R73 += 1 };
  s3 -> s4 [0, 65535] { R10011 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [88, 65535] { R10011 += 1, R9949 += 1, R73 += 1 };
  s4 -> s4 [0, 65535] { R10011 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R10013 += 1, R9950 += 1, R9951 += 1 };
  s0 -> s2 [0, 65535] { R10013 += 1, R9951 += 1 };
  s0 -> s3 [0, 65535] { R10013 += 1, R9951 += 1, R5164 += 1, R5165 += 1 };
  s0 -> s0 [0, 65535] { R10012 += 1, R10013 += 1 };
  s1 -> s1 [0, 65535] { R10013 += 1, R9950 += 1, R9951 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R10013 += 1, R9951 += 1 };
  s1 -> s3 [0, 65535] { R10013 += 1, R9951 += 1, R5164 += 1, R5165 += 1 };
  s2 -> s4 [0, 65535] { R10013 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10013 += 1, R9951 += 1 };
  s3 -> s4 [0, 65535] { R10013 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R10013 += 1, R9951 += 1 };
  s3 -> s3 [0, 65535] { R10013 += 1, R9951 += 1, R5164 += 1, R5165 += 1 };
  s4 -> s4 [0, 65535] { R10013 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 87] { R10015 += 1, R9953 += 1, R8979 += 1 };
  s0 -> s0 [0, 65535] { R10014 += 1, R10015 += 1 };
  s0 -> s2 [0, 65535] { R10015 += 1, R9953 += 1, R8978 += 1, R8979 += 1 };
  s0 -> s3 [0, 65535] { R10015 += 1, R9952 += 1, R9953 += 1 };
  s0 -> s4 [88, 88] { R10015 += 1, R9953 += 1, R8979 += 1 };
  s0 -> s1 [89, 65535] { R10015 += 1, R9953 += 1, R8979 += 1 };
  s1 -> s1 [0, 87] { R10015 += 1, R9953 += 1, R8979 += 1 };
  s1 -> s4 [88, 88] { R10015 += 1, R9953 += 1, R8979 += 1 };
  s1 -> s1 [89, 65535] { R10015 += 1, R9953 += 1, R8979 += 1 };
  s2 -> s1 [0, 87] { R10015 += 1, R9953 += 1, R8979 += 1 };
  s2 -> s2 [0, 65535] { R10015 += 1, R9953 += 1, R8978 += 1, R8979 += 1 };
  s2 -> s4 [88, 88] { R10015 += 1, R9953 += 1, R8979 += 1 };
  s2 -> s1 [89, 65535] { R10015 += 1, R9953 += 1, R8979 += 1 };
  s3 -> s1 [0, 87] { R10015 += 1, R9953 += 1, R8979 += 1 };
  s3 -> s2 [0, 65535] { R10015 += 1, R9953 += 1, R8978 += 1, R8979 += 1 };
  s3 -> s3 [0, 65535] { R10015 += 1, R9952 += 1, R9953 += 1 };
  s3 -> s4 [88, 88] { R10015 += 1, R9953 += 1, R8979 += 1 };
  s3 -> s1 [89, 65535] { R10015 += 1, R9953 += 1, R8979 += 1 };
  s4 -> s5 [0, 65535] { R10015 += 1 };
  s4 -> s4 [0, 65535] { R10015 += 1, R9953 += 1, R8979 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R10015 += 1, R9953 += 1 };
  s5 -> s5 [0, 65535] { R10015 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R10015 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R10015 += 1, R9953 += 1 };
  accepting s4, s5, s6, s7;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R10017 += 1, R9955 += 1 };
  s0 -> s2 [0, 65535] { R10017 += 1, R9954 += 1, R9955 += 1 };
  s0 -> s0 [0, 65535] { R10016 += 1, R10017 += 1 };
  s1 -> s1 [0, 65535] { R10017 += 1, R9955 += 1 };
  s1 -> s4 [0, 65535] { R10017 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R10017 += 1, R9955 += 1 };
  s2 -> s2 [0, 65535] { R10017 += 1, R9954 += 1, R9955 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R10017 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 86] { R10019 += 1, R9957 += 1, R9937 += 1 };
  s0 -> s0 [0, 65535] { R10018 += 1, R10019 += 1 };
  s0 -> s1 [0, 65535] { R10019 += 1, R9957 += 1 };
  s0 -> s2 [0, 65535] { R10019 += 1, R9956 += 1, R9957 += 1 };
  s0 -> s3 [87, 87] { R10019 += 1, R9957 += 1, R9937 += 1 };
  s0 -> s4 [87, 87] { R10019 += 1, R9957 += 1, R9937 += 1 };
  s0 -> s1 [89, 65535] { R10019 += 1, R9957 += 1, R9937 += 1 };
  s1 -> s1 [0, 86] { R10019 += 1, R9957 += 1, R9937 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R10019 += 1 };
  s1 -> s1 [0, 65535] { R10019 += 1, R9957 += 1 };
  s1 -> s3 [87, 87] { R10019 += 1, R9957 += 1, R9937 += 1 };
  s1 -> s4 [87, 87] { R10019 += 1, R9957 += 1, R9937 += 1 };
  s1 -> s1 [89, 65535] { R10019 += 1, R9957 += 1, R9937 += 1 };
  s2 -> s1 [0, 86] { R10019 += 1, R9957 += 1, R9937 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R10019 += 1, R9957 += 1 };
  s2 -> s2 [0, 65535] { R10019 += 1, R9956 += 1, R9957 += 1 };
  s2 -> s3 [87, 87] { R10019 += 1, R9957 += 1, R9937 += 1 };
  s2 -> s4 [87, 87] { R10019 += 1, R9957 += 1, R9937 += 1 };
  s2 -> s1 [89, 65535] { R10019 += 1, R9957 += 1, R9937 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R10019 += 1, R9957 += 1 };
  s3 -> s6 [0, 65535] { R10019 += 1 };
  s4 -> s4 [0, 87] { R10019 += 1, R9957 += 1, R9937 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R10019 += 1 };
  s4 -> s4 [0, 65535] { R10019 += 1, R9957 += 1 };
  s4 -> s4 [89, 65535] { R10019 += 1, R9957 += 1, R9937 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10019 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R10021 += 1, R9977 += 1, R18 += 1 };
  s0 -> s0 [0, 65535] { R10020 += 1, R10021 += 1 };
  s0 -> s2 [0, 65535] { R10021 += 1, R9976 += 1, R9977 += 1 };
  s1 -> s4 [0, 65535] { R10021 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R10021 += 1, R9977 += 1, R18 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R10021 += 1, R9977 += 1, R18 += 1 };
  s2 -> s2 [0, 65535] { R10021 += 1, R9976 += 1, R9977 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R10021 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 75] { R10023 += 1, R9979 += 1 };
  s0 -> s0 [0, 65535] { R10022 += 1, R10023 += 1 };
  s0 -> s2 [0, 65535] { R10023 += 1, R9978 += 1, R9979 += 1 };
  s0 -> s3 [76, 76] { R10023 += 1, R9979 += 1 };
  s0 -> s4 [76, 76] { R10023 += 1, R9979 += 1 };
  s0 -> s5 [87, 87] { R10023 += 1, R9979 += 1 };
  s0 -> s1 [88, 65535] { R10023 += 1, R9979 += 1 };
  s1 -> s1 [0, 75] { R10023 += 1, R9979 += 1 };
  s1 -> s3 [76, 76] { R10023 += 1, R9979 += 1 };
  s1 -> s4 [76, 76] { R10023 += 1, R9979 += 1 };
  s1 -> s5 [87, 87] { R10023 += 1, R9979 += 1 };
  s1 -> s1 [88, 65535] { R10023 += 1, R9979 += 1 };
  s2 -> s1 [0, 75] { R10023 += 1, R9979 += 1 };
  s2 -> s2 [0, 65535] { R10023 += 1, R9978 += 1, R9979 += 1 };
  s2 -> s3 [76, 76] { R10023 += 1, R9979 += 1 };
  s2 -> s4 [76, 76] { R10023 += 1, R9979 += 1 };
  s2 -> s5 [87, 87] { R10023 += 1, R9979 += 1 };
  s2 -> s1 [88, 65535] { R10023 += 1, R9979 += 1 };
  s4 -> s4 [0, 76] { R10023 += 1, R9979 += 1 };
  s4 -> s8 [87, 87] { R10023 += 1, R9979 += 1 };
  s4 -> s4 [88, 65535] { R10023 += 1, R9979 += 1 };
  s5 -> s5 [0, 75] { R10023 += 1, R9979 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R10023 += 1 };
  s5 -> s7 [76, 76] { R10023 += 1, R9979 += 1 };
  s5 -> s8 [76, 76] { R10023 += 1, R9979 += 1 };
  s5 -> s5 [87, 65535] { R10023 += 1, R9979 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R10023 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 76] { R10023 += 1, R9979 += 1 };
  s8 -> s8 [0, 65535] { R10023 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [87, 65535] { R10023 += 1, R9979 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 75] { R10025 += 1, R9981 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R10024 += 1, R10025 += 1 };
  s0 -> s2 [0, 65535] { R10025 += 1, R9980 += 1, R9981 += 1 };
  s0 -> s3 [76, 76] { R10025 += 1, R9981 += 1, R66 += 1 };
  s0 -> s4 [76, 76] { R10025 += 1, R9981 += 1, R66 += 1 };
  s0 -> s1 [77, 65535] { R10025 += 1, R9981 += 1, R66 += 1 };
  s1 -> s1 [0, 75] { R10025 += 1, R9981 += 1, R66 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R10025 += 1 };
  s1 -> s3 [76, 76] { R10025 += 1, R9981 += 1, R66 += 1 };
  s1 -> s4 [76, 76] { R10025 += 1, R9981 += 1, R66 += 1 };
  s1 -> s1 [77, 65535] { R10025 += 1, R9981 += 1, R66 += 1 };
  s2 -> s1 [0, 75] { R10025 += 1, R9981 += 1, R66 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10025 += 1, R9980 += 1, R9981 += 1 };
  s2 -> s3 [76, 76] { R10025 += 1, R9981 += 1, R66 += 1 };
  s2 -> s4 [76, 76] { R10025 += 1, R9981 += 1, R66 += 1 };
  s2 -> s1 [77, 65535] { R10025 += 1, R9981 += 1, R66 += 1 };
  s3 -> s3 [0, 65535] { R10025 += 1, R9981 += 1, R66 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R10025 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10025 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10025 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 75] { R10027 += 1, R9983 += 1, R68 += 1 };
  s0 -> s2 [0, 65535] { R10027 += 1, R9982 += 1, R9983 += 1 };
  s0 -> s0 [0, 65535] { R10026 += 1, R10027 += 1 };
  s0 -> s3 [76, 76] { R10027 += 1, R9983 += 1, R68 += 1 };
  s0 -> s4 [76, 76] { R10027 += 1, R9983 += 1, R68 += 1 };
  s0 -> s1 [77, 65535] { R10027 += 1, R9983 += 1, R68 += 1 };
  s1 -> s1 [0, 75] { R10027 += 1, R9983 += 1, R68 += 1 };
  s1 -> s1 [0, 65535] { R10027 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [76, 76] { R10027 += 1, R9983 += 1, R68 += 1 };
  s1 -> s4 [76, 76] { R10027 += 1, R9983 += 1, R68 += 1 };
  s1 -> s1 [77, 65535] { R10027 += 1, R9983 += 1, R68 += 1 };
  s2 -> s1 [0, 75] { R10027 += 1, R9983 += 1, R68 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10027 += 1, R9982 += 1, R9983 += 1 };
  s2 -> s3 [76, 76] { R10027 += 1, R9983 += 1, R68 += 1 };
  s2 -> s4 [76, 76] { R10027 += 1, R9983 += 1, R68 += 1 };
  s2 -> s1 [77, 65535] { R10027 += 1, R9983 += 1, R68 += 1 };
  s3 -> s6 [0, 65535] { R10027 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R10027 += 1, R9983 += 1, R68 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10027 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10027 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 75] { R10029 += 1, R9985 += 1, R70 += 1, R71 += 1 };
  s0 -> s0 [0, 65535] { R10028 += 1, R10029 += 1 };
  s0 -> s2 [0, 65535] { R10029 += 1, R9984 += 1, R9985 += 1 };
  s0 -> s3 [76, 76] { R10029 += 1, R9985 += 1, R70 += 1, R71 += 1 };
  s0 -> s4 [76, 76] { R10029 += 1, R9985 += 1, R70 += 1, R71 += 1 };
  s0 -> s1 [77, 65535] { R10029 += 1, R9985 += 1, R70 += 1, R71 += 1 };
  s1 -> s1 [0, 75] { R10029 += 1, R9985 += 1, R70 += 1, R71 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R10029 += 1 };
  s1 -> s3 [76, 76] { R10029 += 1, R9985 += 1, R70 += 1, R71 += 1 };
  s1 -> s4 [76, 76] { R10029 += 1, R9985 += 1, R70 += 1, R71 += 1 };
  s1 -> s1 [77, 65535] { R10029 += 1, R9985 += 1, R70 += 1, R71 += 1 };
  s2 -> s1 [0, 75] { R10029 += 1, R9985 += 1, R70 += 1, R71 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10029 += 1, R9984 += 1, R9985 += 1 };
  s2 -> s3 [76, 76] { R10029 += 1, R9985 += 1, R70 += 1, R71 += 1 };
  s2 -> s4 [76, 76] { R10029 += 1, R9985 += 1, R70 += 1, R71 += 1 };
  s2 -> s1 [77, 65535] { R10029 += 1, R9985 += 1, R70 += 1, R71 += 1 };
  s3 -> s3 [0, 65535] { R10029 += 1, R9985 += 1, R70 += 1, R71 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R10029 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10029 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10029 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 75] { R10031 += 1, R9987 += 1, R5161 += 1, R5162 += 1 };
  s0 -> s2 [0, 75] { R10031 += 1, R9987 += 1, R5160 += 1, R5161 += 1 };
  s0 -> s0 [0, 65535] { R10030 += 1, R10031 += 1 };
  s0 -> s3 [0, 65535] { R10031 += 1, R9986 += 1, R9987 += 1 };
  s0 -> s4 [76, 76] { R10031 += 1, R9987 += 1, R5161 += 1, R5162 += 1 };
  s0 -> s5 [76, 76] { R10031 += 1, R9987 += 1, R5160 += 1, R5161 += 1 };
  s0 -> s6 [76, 76] { R10031 += 1, R9987 += 1, R5160 += 1, R5161 += 1 };
  s0 -> s7 [76, 76] { R10031 += 1, R9987 += 1, R5161 += 1, R5162 += 1 };
  s0 -> s1 [77, 65535] { R10031 += 1, R9987 += 1, R5161 += 1, R5162 += 1 };
  s0 -> s2 [77, 65535] { R10031 += 1, R9987 += 1, R5160 += 1, R5161 += 1 };
  s1 -> s1 [0, 75] { R10031 += 1, R9987 += 1, R5161 += 1, R5162 += 1 };
  s1 -> s1 [0, 65535] { R10031 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [76, 76] { R10031 += 1, R9987 += 1, R5161 += 1, R5162 += 1 };
  s1 -> s7 [76, 76] { R10031 += 1, R9987 += 1, R5161 += 1, R5162 += 1 };
  s1 -> s1 [77, 65535] { R10031 += 1, R9987 += 1, R5161 += 1, R5162 += 1 };
  s2 -> s1 [0, 75] { R10031 += 1, R9987 += 1, R5161 += 1, R5162 += 1 };
  s2 -> s2 [0, 75] { R10031 += 1, R9987 += 1, R5160 += 1, R5161 += 1 };
  s2 -> s4 [76, 76] { R10031 += 1, R9987 += 1, R5161 += 1, R5162 += 1 };
  s2 -> s5 [76, 76] { R10031 += 1, R9987 += 1, R5160 += 1, R5161 += 1 };
  s2 -> s6 [76, 76] { R10031 += 1, R9987 += 1, R5160 += 1, R5161 += 1 };
  s2 -> s7 [76, 76] { R10031 += 1, R9987 += 1, R5161 += 1, R5162 += 1 };
  s2 -> s1 [77, 65535] { R10031 += 1, R9987 += 1, R5161 += 1, R5162 += 1 };
  s2 -> s2 [77, 65535] { R10031 += 1, R9987 += 1, R5160 += 1, R5161 += 1 };
  s3 -> s1 [0, 75] { R10031 += 1, R9987 += 1, R5161 += 1, R5162 += 1 };
  s3 -> s2 [0, 75] { R10031 += 1, R9987 += 1, R5160 += 1, R5161 += 1 };
  s3 -> s3 [0, 65535] { R10031 += 1, R9986 += 1, R9987 += 1 };
  s3 -> s4 [76, 76] { R10031 += 1, R9987 += 1, R5161 += 1, R5162 += 1 };
  s3 -> s5 [76, 76] { R10031 += 1, R9987 += 1, R5160 += 1, R5161 += 1 };
  s3 -> s6 [76, 76] { R10031 += 1, R9987 += 1, R5160 += 1, R5161 += 1 };
  s3 -> s7 [76, 76] { R10031 += 1, R9987 += 1, R5161 += 1, R5162 += 1 };
  s3 -> s1 [77, 65535] { R10031 += 1, R9987 += 1, R5161 += 1, R5162 += 1 };
  s3 -> s2 [77, 65535] { R10031 += 1, R9987 += 1, R5160 += 1, R5161 += 1 };
  s4 -> s4 [0, 65535] { R10031 += 1 };
  s4 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R10031 += 1, R9987 += 1, R5160 += 1, R5161 += 1 };
  s6 -> s7 [0, 65535] { R10031 += 1, R9987 += 1, R5161 += 1, R5162 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R10031 += 1 };
  s7 -> s7 [0, 65535] { R10031 += 1, R9987 += 1, R5161 += 1, R5162 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R10031 += 1 };
  accepting s4, s8, s9, s1, s7;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 75] { R10033 += 1, R9989 += 1, R8976 += 1, R8977 += 1 };
  s0 -> s0 [0, 65535] { R10032 += 1, R10033 += 1 };
  s0 -> s2 [0, 65535] { R10033 += 1, R9988 += 1, R9989 += 1 };
  s0 -> s3 [76, 76] { R10033 += 1, R9989 += 1, R8976 += 1, R8977 += 1 };
  s0 -> s4 [76, 76] { R10033 += 1, R9989 += 1, R8976 += 1, R8977 += 1 };
  s0 -> s1 [77, 65535] { R10033 += 1, R9989 += 1, R8976 += 1, R8977 += 1 };
  s1 -> s1 [0, 75] { R10033 += 1, R9989 += 1, R8976 += 1, R8977 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R10033 += 1 };
  s1 -> s3 [76, 76] { R10033 += 1, R9989 += 1, R8976 += 1, R8977 += 1 };
  s1 -> s4 [76, 76] { R10033 += 1, R9989 += 1, R8976 += 1, R8977 += 1 };
  s1 -> s1 [77, 65535] { R10033 += 1, R9989 += 1, R8976 += 1, R8977 += 1 };
  s2 -> s1 [0, 75] { R10033 += 1, R9989 += 1, R8976 += 1, R8977 += 1 };
  s2 -> s2 [0, 65535] { R10033 += 1, R9988 += 1, R9989 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [76, 76] { R10033 += 1, R9989 += 1, R8976 += 1, R8977 += 1 };
  s2 -> s4 [76, 76] { R10033 += 1, R9989 += 1, R8976 += 1, R8977 += 1 };
  s2 -> s1 [77, 65535] { R10033 += 1, R9989 += 1, R8976 += 1, R8977 += 1 };
  s3 -> s3 [0, 65535] { R10033 += 1, R9989 += 1, R8976 += 1, R8977 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R10033 += 1 };
  s4 -> s4 [0, 65535] { R10033 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10033 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R10035 += 1, R9991 += 1, R9825 += 1, R9826 += 1 };
  s0 -> s2 [0, 75] { R10035 += 1, R9991 += 1, R9824 += 1, R9825 += 1 };
  s0 -> s0 [0, 65535] { R10034 += 1, R10035 += 1 };
  s0 -> s3 [0, 65535] { R10035 += 1, R9990 += 1, R9991 += 1 };
  s0 -> s4 [76, 76] { R10035 += 1, R9991 += 1, R9824 += 1, R9825 += 1 };
  s0 -> s5 [76, 76] { R10035 += 1, R9991 += 1, R9825 += 1, R9826 += 1 };
  s0 -> s6 [76, 76] { R10035 += 1, R9991 += 1, R9825 += 1, R9826 += 1 };
  s0 -> s7 [76, 76] { R10035 += 1, R9991 += 1, R9824 += 1, R9825 += 1 };
  s0 -> s1 [77, 65535] { R10035 += 1, R9991 += 1, R9825 += 1, R9826 += 1 };
  s0 -> s2 [77, 65535] { R10035 += 1, R9991 += 1, R9824 += 1, R9825 += 1 };
  s1 -> s1 [0, 75] { R10035 += 1, R9991 += 1, R9825 += 1, R9826 += 1 };
  s1 -> s11 [0, 75] { R10035 += 1, R9991 += 1 };
  s1 -> s5 [76, 76] { R10035 += 1, R9991 += 1, R9825 += 1, R9826 += 1 };
  s1 -> s12 [76, 76] { R10035 += 1, R9991 += 1 };
  s1 -> s6 [76, 76] { R10035 += 1, R9991 += 1, R9825 += 1, R9826 += 1 };
  s1 -> s8 [76, 76] { R10035 += 1, R9991 += 1 };
  s1 -> s1 [77, 65535] { R10035 += 1, R9991 += 1, R9825 += 1, R9826 += 1 };
  s1 -> s11 [77, 65535] { R10035 += 1, R9991 += 1 };
  s2 -> s1 [0, 75] { R10035 += 1, R9991 += 1, R9825 += 1, R9826 += 1 };
  s2 -> s2 [0, 75] { R10035 += 1, R9991 += 1, R9824 += 1, R9825 += 1 };
  s2 -> s4 [76, 76] { R10035 += 1, R9991 += 1, R9824 += 1, R9825 += 1 };
  s2 -> s5 [76, 76] { R10035 += 1, R9991 += 1, R9825 += 1, R9826 += 1 };
  s2 -> s6 [76, 76] { R10035 += 1, R9991 += 1, R9825 += 1, R9826 += 1 };
  s2 -> s7 [76, 76] { R10035 += 1, R9991 += 1, R9824 += 1, R9825 += 1 };
  s2 -> s1 [77, 65535] { R10035 += 1, R9991 += 1, R9825 += 1, R9826 += 1 };
  s2 -> s2 [77, 65535] { R10035 += 1, R9991 += 1, R9824 += 1, R9825 += 1 };
  s3 -> s1 [0, 75] { R10035 += 1, R9991 += 1, R9825 += 1, R9826 += 1 };
  s3 -> s2 [0, 75] { R10035 += 1, R9991 += 1, R9824 += 1, R9825 += 1 };
  s3 -> s3 [0, 65535] { R10035 += 1, R9990 += 1, R9991 += 1 };
  s3 -> s4 [76, 76] { R10035 += 1, R9991 += 1, R9824 += 1, R9825 += 1 };
  s3 -> s5 [76, 76] { R10035 += 1, R9991 += 1, R9825 += 1, R9826 += 1 };
  s3 -> s6 [76, 76] { R10035 += 1, R9991 += 1, R9825 += 1, R9826 += 1 };
  s3 -> s7 [76, 76] { R10035 += 1, R9991 += 1, R9824 += 1, R9825 += 1 };
  s3 -> s1 [77, 65535] { R10035 += 1, R9991 += 1, R9825 += 1, R9826 += 1 };
  s3 -> s2 [77, 65535] { R10035 += 1, R9991 += 1, R9824 += 1, R9825 += 1 };
  s5 -> s5 [0, 65535] { R10035 += 1, R9991 += 1, R9825 += 1, R9826 += 1 };
  s5 -> s8 [0, 65535] { R10035 += 1, R9991 += 1 };
  s7 -> s5 [0, 65535] { R10035 += 1, R9991 += 1, R9825 += 1, R9826 += 1 };
  s7 -> s7 [0, 65535] { R10035 += 1, R9991 += 1, R9824 += 1, R9825 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [0, 65535] { R10035 += 1 };
  s8 -> s8 [0, 65535] { R10035 += 1, R9991 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R10035 += 1 };
  s11 -> s11 [0, 75] { R10035 += 1, R9991 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R10035 += 1 };
  s11 -> s12 [76, 76] { R10035 += 1, R9991 += 1 };
  s11 -> s8 [76, 76] { R10035 += 1, R9991 += 1 };
  s11 -> s11 [77, 65535] { R10035 += 1, R9991 += 1 };
  s12 -> s12 [0, 65535] { R10035 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 75] { R10037 += 1, R9993 += 1, R9934 += 1, R9935 += 1 };
  s0 -> s2 [0, 75] { R10037 += 1, R9993 += 1, R9935 += 1 };
  s0 -> s0 [0, 65535] { R10036 += 1, R10037 += 1 };
  s0 -> s3 [0, 65535] { R10037 += 1, R9992 += 1, R9993 += 1 };
  s0 -> s4 [76, 76] { R10037 += 1, R9993 += 1, R9934 += 1, R9935 += 1 };
  s0 -> s5 [76, 76] { R10037 += 1, R9993 += 1, R9935 += 1 };
  s0 -> s6 [76, 76] { R10037 += 1, R9993 += 1, R9934 += 1, R9935 += 1 };
  s0 -> s7 [76, 76] { R10037 += 1, R9993 += 1, R9935 += 1 };
  s0 -> s2 [77, 86] { R10037 += 1, R9993 += 1, R9935 += 1 };
  s0 -> s1 [77, 65535] { R10037 += 1, R9993 += 1, R9934 += 1, R9935 += 1 };
  s0 -> s2 [89, 65535] { R10037 += 1, R9993 += 1, R9935 += 1 };
  s1 -> s1 [0, 75] { R10037 += 1, R9993 += 1, R9934 += 1, R9935 += 1 };
  s1 -> s2 [0, 75] { R10037 += 1, R9993 += 1, R9935 += 1 };
  s1 -> s4 [76, 76] { R10037 += 1, R9993 += 1, R9934 += 1, R9935 += 1 };
  s1 -> s5 [76, 76] { R10037 += 1, R9993 += 1, R9935 += 1 };
  s1 -> s6 [76, 76] { R10037 += 1, R9993 += 1, R9934 += 1, R9935 += 1 };
  s1 -> s7 [76, 76] { R10037 += 1, R9993 += 1, R9935 += 1 };
  s1 -> s2 [77, 86] { R10037 += 1, R9993 += 1, R9935 += 1 };
  s1 -> s1 [77, 65535] { R10037 += 1, R9993 += 1, R9934 += 1, R9935 += 1 };
  s1 -> s2 [89, 65535] { R10037 += 1, R9993 += 1, R9935 += 1 };
  s2 -> s2 [0, 75] { R10037 += 1, R9993 += 1, R9935 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R10037 += 1 };
  s2 -> s5 [76, 76] { R10037 += 1, R9993 += 1 };
  s2 -> s7 [76, 76] { R10037 += 1, R9993 += 1 };
  s2 -> s2 [77, 86] { R10037 += 1, R9993 += 1, R9935 += 1 };
  s2 -> s2 [77, 65535] { R10037 += 1, R9993 += 1 };
  s2 -> s2 [89, 65535] { R10037 += 1, R9993 += 1, R9935 += 1 };
  s3 -> s1 [0, 75] { R10037 += 1, R9993 += 1, R9934 += 1, R9935 += 1 };
  s3 -> s2 [0, 75] { R10037 += 1, R9993 += 1, R9935 += 1 };
  s3 -> s3 [0, 65535] { R10037 += 1, R9992 += 1, R9993 += 1 };
  s3 -> s4 [76, 76] { R10037 += 1, R9993 += 1, R9934 += 1, R9935 += 1 };
  s3 -> s5 [76, 76] { R10037 += 1, R9993 += 1, R9935 += 1 };
  s3 -> s6 [76, 76] { R10037 += 1, R9993 += 1, R9934 += 1, R9935 += 1 };
  s3 -> s7 [76, 76] { R10037 += 1, R9993 += 1, R9935 += 1 };
  s3 -> s2 [77, 86] { R10037 += 1, R9993 += 1, R9935 += 1 };
  s3 -> s1 [77, 65535] { R10037 += 1, R9993 += 1, R9934 += 1, R9935 += 1 };
  s3 -> s2 [89, 65535] { R10037 += 1, R9993 += 1, R9935 += 1 };
  s4 -> s7 [0, 86] { R10037 += 1, R9993 += 1, R9935 += 1 };
  s4 -> s4 [0, 65535] { R10037 += 1, R9993 += 1, R9934 += 1, R9935 += 1 };
  s4 -> s7 [89, 65535] { R10037 += 1, R9993 += 1, R9935 += 1 };
  s5 -> s5 [0, 65535] { R10037 += 1 };
  s5 -> s8 [0, 65535];
  s7 -> s7 [0, 86] { R10037 += 1, R9993 += 1, R9935 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R10037 += 1, R9993 += 1 };
  s7 -> s9 [0, 65535] { R10037 += 1 };
  s7 -> s7 [89, 65535] { R10037 += 1, R9993 += 1, R9935 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R10037 += 1 };
  accepting s8, s5, s2, s9, s7;
};
};
synchronised {  // Automata constraining P63
automaton P63_0 {
  init s0;
  s0 -> s1 [119, 119];
  accepting s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [108, 108];
  accepting s1;
};
};
constraint R1 = R9953 && R2 = R10037 && R20 - R10037 = -1 && R21 = R10037 && R22 - R10037 = -1 && R23 = R10037 && R24 = 0 && R25 = 1 && R26 = 0 && R27 = 1 && R38 + R67 + R66 + -1*R8979 + -1*R8977 - R53 = 0 && R52 + R8978 + R8976 = 0 && R9952 = 0 && R9978 = 0 && R9979 = 0 && R9986 = 0 && R9987 = 0 && R9990 = 0 && R9991 = 0 && R9992 = 0 && R9993 = 0 && R9994 = 0 && R9995 = R10037 && R9996 = 0 && R9997 = R10037 && R9998 = 0 && R9999 = R10037 && R10000 = 0 && R10001 = R10037 && R10002 = 0 && R10003 = R10037 && R10004 = 0 && R10005 = R10037 && R10006 = 0 && R10007 = R10037 && R10008 = 0 && R10009 = R10037 && R10010 = 0 && R10011 = R10037 && R10012 = 0 && R10013 = R10037 && R10014 = 0 && R10015 = R10037 && R10016 = 0 && R10017 = R10037 && R10018 = 0 && R10019 = R10037 && R10020 = 0 && R10021 = R10037 && R10022 = 0 && R10023 = R10037 && R10024 = 0 && R10025 = R10037 && R10026 = 0 && R10027 = R10037 && R10028 = 0 && R10029 = R10037 && R10030 = 0 && R10031 = R10037 && R10032 = 0 && R10033 = R10037 && R10034 = 0 && R10035 = R10037 && R10036 = 0 && R8 < 1 && R11 < 1 && R12 < 1 && R40 + R69 + R68 < 1 && -1*R8979 + -1*R8977 - R53 < 1 && -1 < R9953 && 0 < R10037 && (R48 + R5165 + R5162 != 0 || ((R42 + R72 + R70 != 0 || R43 + R73 + R71 + -1*R8979 + -1*R8977 - R53 = 0 || R53 + R8979 + R8977 < 1) && (R42 + R72 + R70 = 0 || R53 + R8979 + R8977 < 1))) && (R48 + R5165 + R5162 != 0 || ((R46 + R5163 + R5160 != 0 || R47 + R5164 + R5161 + -1*R8979 + -1*R8977 - R53 = 0 || R53 + R8979 + R8977 < 1) && (R46 + R5163 + R5160 = 0 || R53 + R8979 + R8977 < 1))) && (R9938 != 0 || R9939 = R9953 || (R17 = 0 && R9953 = 0)) && (R9940 != 0 || R9941 = R9953 || (R17 = 0 && R9953 = 0)) && (R9942 != 0 || R9943 = R9953 || (R17 = 0 && R9953 = 0)) && (R9944 != 0 || R9945 = R9953 || (R17 = 0 && R9953 = 0)) && (R9946 != 0 || R9947 = R9953 || (R17 = 0 && R9953 = 0)) && (R9948 != 0 || R9949 = R9953 || (R17 = 0 && R9953 = 0)) && (R9950 != 0 || R9951 = R9953 || (R17 = 0 && R9953 = 0)) && (R9954 != 0 || R9953 = R9955 || (R17 = 0 && R9953 = 0)) && (R9956 != 0 || R9953 = R9957 || (R17 = 0 && R9953 = 0)) && (R18 = 0 || (R9976 = 0 && R9977 = 0)) && (R18 = 0 || (R9980 = 0 && R9981 = 0)) && (R18 = 0 || (R9982 = 0 && R9983 = 0)) && (R18 = 0 || (R9984 = 0 && R9985 = 0)) && (R18 = 0 || (R9988 = 0 && R9989 = 0)) && (R19 = 0 || (R9958 = 0 && R9959 = 0)) && (R19 = 0 || (R9960 = 0 && R9961 = 0)) && (R19 = 0 || (R9962 = 0 && R9963 = 0)) && (R19 = 0 || (R9964 = 0 && R9965 = 0)) && (R19 = 0 || (R9966 = 0 && R9967 = 0)) && (R19 = 0 || (R9968 = 0 && R9969 = 0)) && (R19 = 0 || (R9970 = 0 && R9971 = 0)) && (R19 = 0 || (R9972 = 0 && R9973 = 0)) && (R19 = 0 || (R9974 = 0 && R9975 = 0)) && (R48 + R5165 + R5162 = 0 || (R42 + R72 + R70 = 0 && R43 + R73 + R71 + -1*R8979 + -1*R8977 - R53 = 0)) && (R48 + R5165 + R5162 = 0 || (R46 + R5163 + R5160 = 0 && R47 + R5164 + R5161 + -1*R8979 + -1*R8977 - R53 = 0)) && (R58 + R9829 + R9826 = 0 || (R56 + R9827 + R9824 = 0 && R57 + R9828 + R9825 = 0)) && (R58 + R9829 + R9826 = 0 || (R62 + R9936 + R9934 = 0 && R63 + R9937 + R9935 = 0)) && (R9938 = 0 || (R17 = 0 && R9953 = 0)) && (R9940 = 0 || (R17 = 0 && R9953 = 0)) && (R9942 = 0 || (R17 = 0 && R9953 = 0)) && (R9944 = 0 || (R17 = 0 && R9953 = 0)) && (R9946 = 0 || (R17 = 0 && R9953 = 0)) && (R9948 = 0 || (R17 = 0 && R9953 = 0)) && (R9950 = 0 || (R17 = 0 && R9953 = 0)) && (R9954 = 0 || (R17 = 0 && R9953 = 0)) && (R9956 = 0 || (R17 = 0 && R9953 = 0));
// End of Parikh automata intersection problem
