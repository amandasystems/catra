// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R12, R15332, R15333, R15334, R15335, R15336, R15337, R15338, R15339, R15340, R15341, R16612, R16613, R16614, R16615, R17, R17460, R17461, R17462, R17463, R17464, R17465, R17570, R17571, R17572, R17573, R17574, R17575, R17576, R17577, R17578, R17579, R17580, R17581, R17582, R17583, R17584, R17585, R17586, R17587, R17588, R17589, R17590, R17591, R17592, R17593, R17594, R17595, R17596, R17597, R17598, R17599, R17600, R17601, R17602, R17603, R17604, R17605, R17606, R17607, R17608, R17609, R17610, R17611, R17612, R17613, R17614, R17615, R17616, R17617, R17618, R17619, R17620, R17621, R17622, R17623, R17624, R17625, R17626, R17627, R17628, R17629, R17630, R17631, R17632, R17633, R17634, R17635, R17636, R17637, R17638, R17639, R17640, R17641, R17642, R17643, R17644, R17645, R17646, R17647, R17648, R17649, R17650, R17651, R17652, R17653, R17654, R17655, R17656, R17657, R17658, R17659, R17660, R17661, R17662, R17663, R17664, R17665, R17666, R17667, R17668, R17669, R17670, R17671, R17672, R17673, R18, R19, R2, R20, R21, R22, R23, R24, R25, R26, R27, R3, R38, R4, R40, R42, R43, R46, R47, R48, R52, R53, R56, R57, R58, R62, R63, R66, R67, R68, R69, R8;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [76, 76];
  s0 -> s0 [77, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [76, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R2 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R11 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 75];
  s0 -> s0 [0, 65535] { R12 += 1 };
  s0 -> s2 [76, 76];
  s0 -> s1 [77, 65535];
  s1 -> s1 [0, 75];
  s1 -> s2 [76, 76];
  s1 -> s1 [77, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R21 += 1 };
  s0 -> s0 [0, 65535] { R20 += 1, R21 += 1 };
  s0 -> s2 [9, 13] { R21 += 1 };
  s0 -> s1 [14, 31] { R21 += 1 };
  s0 -> s2 [32, 32] { R21 += 1 };
  s0 -> s1 [33, 65535] { R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R21 += 1 };
  s2 -> s1 [0, 65535] { R21 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R22 += 1, R23 += 1 };
  s1 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R25 += 1 };
  s0 -> s0 [0, 65535] { R24 += 1, R25 += 1 };
  s0 -> s2 [9, 13] { R25 += 1 };
  s0 -> s1 [14, 31] { R25 += 1 };
  s0 -> s2 [32, 32] { R25 += 1 };
  s0 -> s1 [33, 65535] { R25 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R25 += 1 };
  s2 -> s1 [0, 65535] { R25 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R26 += 1, R27 += 1 };
  s0 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s1 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R17594 += 1, R17595 += 1 };
  s0 -> s1 [0, 65535] { R17595 += 1, R19 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R17595 += 1, R19 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 75] { R17597 += 1 };
  s0 -> s0 [0, 65535] { R17596 += 1, R17597 += 1 };
  s0 -> s2 [76, 76] { R17597 += 1 };
  s0 -> s3 [76, 76] { R17597 += 1 };
  s0 -> s1 [88, 65535] { R17597 += 1 };
  s1 -> s1 [0, 75] { R17597 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [76, 76] { R17597 += 1 };
  s1 -> s3 [76, 76] { R17597 += 1 };
  s1 -> s1 [88, 65535] { R17597 += 1 };
  s2 -> s2 [0, 76] { R17597 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [88, 65535] { R17597 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 75] { R17599 += 1, R38 += 1 };
  s0 -> s0 [0, 65535] { R17598 += 1, R17599 += 1 };
  s0 -> s2 [76, 76] { R17599 += 1, R38 += 1 };
  s0 -> s3 [76, 76] { R17599 += 1, R38 += 1 };
  s0 -> s1 [77, 65535] { R17599 += 1, R38 += 1 };
  s1 -> s1 [0, 75] { R17599 += 1, R38 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [76, 76] { R17599 += 1, R38 += 1 };
  s1 -> s3 [76, 76] { R17599 += 1, R38 += 1 };
  s1 -> s1 [77, 65535] { R17599 += 1, R38 += 1 };
  s2 -> s2 [0, 65535] { R17599 += 1, R38 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 75] { R17601 += 1, R40 += 1 };
  s0 -> s0 [0, 65535] { R17600 += 1, R17601 += 1 };
  s0 -> s2 [76, 76] { R17601 += 1, R40 += 1 };
  s0 -> s3 [76, 76] { R17601 += 1, R40 += 1 };
  s0 -> s1 [77, 65535] { R17601 += 1, R40 += 1 };
  s1 -> s1 [0, 75] { R17601 += 1, R40 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [76, 76] { R17601 += 1, R40 += 1 };
  s1 -> s3 [76, 76] { R17601 += 1, R40 += 1 };
  s1 -> s1 [77, 65535] { R17601 += 1, R40 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R17601 += 1, R40 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 75] { R17603 += 1, R42 += 1, R43 += 1 };
  s0 -> s0 [0, 65535] { R17602 += 1, R17603 += 1 };
  s0 -> s2 [76, 76] { R17603 += 1, R42 += 1, R43 += 1 };
  s0 -> s3 [76, 76] { R17603 += 1, R42 += 1, R43 += 1 };
  s0 -> s1 [77, 65535] { R17603 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 75] { R17603 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [76, 76] { R17603 += 1, R42 += 1, R43 += 1 };
  s1 -> s3 [76, 76] { R17603 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [77, 65535] { R17603 += 1, R42 += 1, R43 += 1 };
  s2 -> s2 [0, 65535] { R17603 += 1, R42 += 1, R43 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 75] { R17605 += 1, R46 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R17604 += 1, R17605 += 1 };
  s0 -> s2 [76, 76] { R17605 += 1, R46 += 1, R47 += 1 };
  s0 -> s3 [76, 76] { R17605 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [77, 65535] { R17605 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 75] { R17605 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [76, 76] { R17605 += 1, R46 += 1, R47 += 1 };
  s1 -> s3 [76, 76] { R17605 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [77, 65535] { R17605 += 1, R46 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R17605 += 1, R46 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 75] { R17607 += 1, R52 += 1, R53 += 1 };
  s0 -> s0 [0, 65535] { R17606 += 1, R17607 += 1 };
  s0 -> s2 [76, 76] { R17607 += 1, R52 += 1, R53 += 1 };
  s0 -> s3 [76, 76] { R17607 += 1, R52 += 1, R53 += 1 };
  s0 -> s1 [77, 65535] { R17607 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 75] { R17607 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [76, 76] { R17607 += 1, R52 += 1, R53 += 1 };
  s1 -> s3 [76, 76] { R17607 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [77, 65535] { R17607 += 1, R52 += 1, R53 += 1 };
  s2 -> s2 [0, 65535] { R17607 += 1, R52 += 1, R53 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 75] { R17609 += 1, R56 += 1, R57 += 1 };
  s0 -> s0 [0, 65535] { R17608 += 1, R17609 += 1 };
  s0 -> s2 [76, 76] { R17609 += 1, R56 += 1, R57 += 1 };
  s0 -> s3 [76, 76] { R17609 += 1, R56 += 1, R57 += 1 };
  s0 -> s1 [77, 65535] { R17609 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 75] { R17609 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [76, 76] { R17609 += 1, R56 += 1, R57 += 1 };
  s1 -> s3 [76, 76] { R17609 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [77, 65535] { R17609 += 1, R56 += 1, R57 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R17609 += 1, R56 += 1, R57 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 75] { R17611 += 1, R62 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R17610 += 1, R17611 += 1 };
  s0 -> s2 [76, 76] { R17611 += 1, R62 += 1, R63 += 1 };
  s0 -> s3 [76, 76] { R17611 += 1, R62 += 1, R63 += 1 };
  s0 -> s1 [77, 65535] { R17611 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 75] { R17611 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [76, 76] { R17611 += 1, R62 += 1, R63 += 1 };
  s1 -> s3 [76, 76] { R17611 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [77, 65535] { R17611 += 1, R62 += 1, R63 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R17611 += 1, R62 += 1, R63 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 75] { R17631 += 1 };
  s0 -> s0 [0, 65535] { R17630 += 1, R17631 += 1 };
  s0 -> s2 [76, 76] { R17631 += 1 };
  s0 -> s1 [77, 65535] { R17631 += 1 };
  s1 -> s1 [0, 75] { R17631 += 1 };
  s1 -> s2 [76, 76] { R17631 += 1 };
  s1 -> s1 [77, 65535] { R17631 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R17631 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R17632 += 1, R17633 += 1 };
  s0 -> s1 [0, 65535] { R17633 += 1, R1 += 1 };
  s1 -> s1 [0, 65535] { R17633 += 1, R1 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 75] { R17635 += 1 };
  s0 -> s0 [0, 65535] { R17634 += 1, R17635 += 1 };
  s0 -> s2 [0, 65535] { R17635 += 1, R8 += 1 };
  s0 -> s3 [76, 76] { R17635 += 1 };
  s0 -> s1 [77, 65535] { R17635 += 1 };
  s1 -> s1 [0, 75] { R17635 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [76, 76] { R17635 += 1 };
  s1 -> s1 [77, 65535] { R17635 += 1 };
  s2 -> s1 [0, 75] { R17635 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R17635 += 1, R8 += 1 };
  s2 -> s3 [76, 76] { R17635 += 1 };
  s2 -> s1 [77, 65535] { R17635 += 1 };
  s3 -> s3 [0, 65535] { R17635 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 75] { R17637 += 1, R17575 += 1 };
  s0 -> s0 [0, 65535] { R17636 += 1, R17637 += 1 };
  s0 -> s2 [0, 65535] { R17637 += 1, R17574 += 1, R17575 += 1 };
  s0 -> s1 [77, 65535] { R17637 += 1, R17575 += 1 };
  s1 -> s1 [0, 75] { R17637 += 1, R17575 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R17637 += 1 };
  s1 -> s1 [77, 65535] { R17637 += 1, R17575 += 1 };
  s2 -> s1 [0, 75] { R17637 += 1, R17575 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R17637 += 1, R17574 += 1, R17575 += 1 };
  s2 -> s1 [77, 65535] { R17637 += 1, R17575 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s0 [0, 65535] { R17638 += 1, R17639 += 1 };
  s0 -> s1 [0, 65535] { R17639 += 1, R17577 += 1, R17 += 1 };
  s0 -> s2 [0, 65535] { R17639 += 1, R17576 += 1, R17577 += 1 };
  s1 -> s4 [0, 65535] { R17639 += 1 };
  s1 -> s1 [0, 65535] { R17639 += 1, R17577 += 1, R17 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R17639 += 1, R17577 += 1, R17 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R17639 += 1, R17576 += 1, R17577 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R17639 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 76] { R17641 += 1, R17579 += 1 };
  s0 -> s2 [0, 65535] { R17641 += 1, R17578 += 1, R17579 += 1 };
  s0 -> s0 [0, 65535] { R17640 += 1, R17641 += 1 };
  s0 -> s1 [87, 65535] { R17641 += 1, R17579 += 1 };
  s1 -> s1 [0, 76] { R17641 += 1, R17579 += 1 };
  s1 -> s1 [0, 65535] { R17641 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [87, 65535] { R17641 += 1, R17579 += 1 };
  s2 -> s1 [0, 76] { R17641 += 1, R17579 += 1 };
  s2 -> s2 [0, 65535] { R17641 += 1, R17578 += 1, R17579 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [87, 65535] { R17641 += 1, R17579 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R17643 += 1, R17581 += 1, R67 += 1 };
  s0 -> s2 [0, 65535] { R17643 += 1, R17580 += 1, R17581 += 1 };
  s0 -> s0 [0, 65535] { R17642 += 1, R17643 += 1 };
  s1 -> s1 [0, 65535] { R17643 += 1, R17581 += 1, R67 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R17643 += 1 };
  s2 -> s1 [0, 65535] { R17643 += 1, R17581 += 1, R67 += 1 };
  s2 -> s2 [0, 65535] { R17643 += 1, R17580 += 1, R17581 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R17643 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 86] { R17645 += 1, R17583 += 1 };
  s0 -> s0 [0, 65535] { R17644 += 1, R17645 += 1 };
  s0 -> s2 [0, 65535] { R17645 += 1, R17582 += 1, R17583 += 1 };
  s0 -> s3 [0, 65535] { R17645 += 1, R17583 += 1, R69 += 1 };
  s0 -> s1 [88, 65535] { R17645 += 1, R17583 += 1 };
  s1 -> s1 [0, 86] { R17645 += 1, R17583 += 1 };
  s1 -> s1 [0, 65535] { R17645 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [88, 65535] { R17645 += 1, R17583 += 1 };
  s2 -> s1 [0, 86] { R17645 += 1, R17583 += 1 };
  s2 -> s2 [0, 65535] { R17645 += 1, R17582 += 1, R17583 += 1 };
  s2 -> s3 [0, 65535] { R17645 += 1, R17583 += 1, R69 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [88, 65535] { R17645 += 1, R17583 += 1 };
  s3 -> s1 [0, 86] { R17645 += 1, R17583 += 1 };
  s3 -> s3 [0, 65535] { R17645 += 1, R17583 += 1, R69 += 1 };
  s3 -> s4 [0, 65535] { R17645 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [88, 65535] { R17645 += 1, R17583 += 1 };
  s4 -> s4 [0, 65535] { R17645 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 86] { R17647 += 1, R17585 += 1, R15335 += 1 };
  s0 -> s2 [0, 65535] { R17647 += 1, R17584 += 1, R17585 += 1 };
  s0 -> s0 [0, 65535] { R17646 += 1, R17647 += 1 };
  s0 -> s1 [0, 65535] { R17647 += 1, R17585 += 1 };
  s0 -> s1 [88, 65535] { R17647 += 1, R17585 += 1, R15335 += 1 };
  s1 -> s1 [0, 86] { R17647 += 1, R17585 += 1, R15335 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R17647 += 1 };
  s1 -> s1 [0, 65535] { R17647 += 1, R17585 += 1 };
  s1 -> s1 [88, 65535] { R17647 += 1, R17585 += 1, R15335 += 1 };
  s2 -> s1 [0, 86] { R17647 += 1, R17585 += 1, R15335 += 1 };
  s2 -> s2 [0, 65535] { R17647 += 1, R17584 += 1, R17585 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R17647 += 1, R17585 += 1 };
  s2 -> s1 [88, 65535] { R17647 += 1, R17585 += 1, R15335 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R17647 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R17649 += 1, R17587 += 1, R15339 += 1, R15340 += 1 };
  s0 -> s2 [0, 65535] { R17649 += 1, R17587 += 1, R15340 += 1, R15341 += 1 };
  s0 -> s3 [0, 65535] { R17649 += 1, R17586 += 1, R17587 += 1 };
  s0 -> s0 [0, 65535] { R17648 += 1, R17649 += 1 };
  s1 -> s1 [0, 65535] { R17649 += 1, R17587 += 1, R15339 += 1, R15340 += 1 };
  s1 -> s2 [0, 65535] { R17649 += 1, R17587 += 1, R15340 += 1, R15341 += 1 };
  s1 -> s5 [0, 65535] { R17649 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R17649 += 1, R17587 += 1, R15340 += 1, R15341 += 1 };
  s2 -> s5 [0, 65535] { R17649 += 1 };
  s2 -> s6 [0, 65535] { R17649 += 1, R17587 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R17649 += 1, R17587 += 1, R15339 += 1, R15340 += 1 };
  s3 -> s2 [0, 65535] { R17649 += 1, R17587 += 1, R15340 += 1, R15341 += 1 };
  s3 -> s3 [0, 65535] { R17649 += 1, R17586 += 1, R17587 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R17649 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R17649 += 1 };
  s6 -> s6 [0, 65535] { R17649 += 1, R17587 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s0 [0, 65535] { R17650 += 1, R17651 += 1 };
  s0 -> s1 [0, 65535] { R17651 += 1, R17589 += 1 };
  s0 -> s2 [0, 65535] { R17651 += 1, R17588 += 1, R17589 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R17651 += 1, R17589 += 1 };
  s1 -> s4 [0, 65535] { R17651 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R17651 += 1, R17589 += 1 };
  s2 -> s2 [0, 65535] { R17651 += 1, R17588 += 1, R17589 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R17651 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R17653 += 1, R17591 += 1 };
  s0 -> s0 [0, 65535] { R17652 += 1, R17653 += 1 };
  s0 -> s2 [0, 65535] { R17653 += 1, R17590 += 1, R17591 += 1 };
  s1 -> s1 [0, 65535] { R17653 += 1, R17591 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R17653 += 1 };
  s2 -> s1 [0, 65535] { R17653 += 1, R17591 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R17653 += 1, R17590 += 1, R17591 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R17653 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 86] { R17655 += 1, R17593 += 1, R17573 += 1 };
  s0 -> s2 [0, 65535] { R17655 += 1, R17592 += 1, R17593 += 1 };
  s0 -> s0 [0, 65535] { R17654 += 1, R17655 += 1 };
  s0 -> s1 [0, 65535] { R17655 += 1, R17593 += 1 };
  s0 -> s3 [87, 87] { R17655 += 1, R17593 += 1, R17573 += 1 };
  s0 -> s4 [87, 87] { R17655 += 1, R17593 += 1, R17573 += 1 };
  s0 -> s1 [89, 65535] { R17655 += 1, R17593 += 1, R17573 += 1 };
  s1 -> s1 [0, 86] { R17655 += 1, R17593 += 1, R17573 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R17655 += 1 };
  s1 -> s1 [0, 65535] { R17655 += 1, R17593 += 1 };
  s1 -> s3 [87, 87] { R17655 += 1, R17593 += 1, R17573 += 1 };
  s1 -> s4 [87, 87] { R17655 += 1, R17593 += 1, R17573 += 1 };
  s1 -> s1 [89, 65535] { R17655 += 1, R17593 += 1, R17573 += 1 };
  s2 -> s1 [0, 86] { R17655 += 1, R17593 += 1, R17573 += 1 };
  s2 -> s2 [0, 65535] { R17655 += 1, R17592 += 1, R17593 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R17655 += 1, R17593 += 1 };
  s2 -> s3 [87, 87] { R17655 += 1, R17593 += 1, R17573 += 1 };
  s2 -> s4 [87, 87] { R17655 += 1, R17593 += 1, R17573 += 1 };
  s2 -> s1 [89, 65535] { R17655 += 1, R17593 += 1, R17573 += 1 };
  s3 -> s3 [0, 65535] { R17655 += 1, R17593 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R17655 += 1 };
  s4 -> s4 [0, 87] { R17655 += 1, R17593 += 1, R17573 += 1 };
  s4 -> s4 [0, 65535] { R17655 += 1, R17593 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R17655 += 1 };
  s4 -> s4 [89, 65535] { R17655 += 1, R17593 += 1, R17573 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R17655 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R17656 += 1, R17657 += 1 };
  s0 -> s1 [0, 65535] { R17657 += 1, R17613 += 1, R18 += 1 };
  s0 -> s2 [0, 65535] { R17657 += 1, R17612 += 1, R17613 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R17657 += 1, R17613 += 1, R18 += 1 };
  s1 -> s4 [0, 65535] { R17657 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R17657 += 1, R17613 += 1, R18 += 1 };
  s2 -> s2 [0, 65535] { R17657 += 1, R17612 += 1, R17613 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R17657 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 75] { R17659 += 1, R17615 += 1 };
  s0 -> s2 [0, 65535] { R17659 += 1, R17614 += 1, R17615 += 1 };
  s0 -> s0 [0, 65535] { R17658 += 1, R17659 += 1 };
  s0 -> s3 [76, 76] { R17659 += 1, R17615 += 1 };
  s0 -> s4 [76, 76] { R17659 += 1, R17615 += 1 };
  s0 -> s5 [87, 87] { R17659 += 1, R17615 += 1 };
  s0 -> s1 [88, 65535] { R17659 += 1, R17615 += 1 };
  s1 -> s1 [0, 75] { R17659 += 1, R17615 += 1 };
  s1 -> s3 [76, 76] { R17659 += 1, R17615 += 1 };
  s1 -> s4 [76, 76] { R17659 += 1, R17615 += 1 };
  s1 -> s5 [87, 87] { R17659 += 1, R17615 += 1 };
  s1 -> s1 [88, 65535] { R17659 += 1, R17615 += 1 };
  s2 -> s1 [0, 75] { R17659 += 1, R17615 += 1 };
  s2 -> s2 [0, 65535] { R17659 += 1, R17614 += 1, R17615 += 1 };
  s2 -> s3 [76, 76] { R17659 += 1, R17615 += 1 };
  s2 -> s4 [76, 76] { R17659 += 1, R17615 += 1 };
  s2 -> s5 [87, 87] { R17659 += 1, R17615 += 1 };
  s2 -> s1 [88, 65535] { R17659 += 1, R17615 += 1 };
  s4 -> s4 [0, 76] { R17659 += 1, R17615 += 1 };
  s4 -> s8 [87, 87] { R17659 += 1, R17615 += 1 };
  s4 -> s4 [88, 65535] { R17659 += 1, R17615 += 1 };
  s5 -> s5 [0, 75] { R17659 += 1, R17615 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R17659 += 1 };
  s5 -> s7 [76, 76] { R17659 += 1, R17615 += 1 };
  s5 -> s8 [76, 76] { R17659 += 1, R17615 += 1 };
  s5 -> s5 [87, 65535] { R17659 += 1, R17615 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R17659 += 1 };
  s8 -> s8 [0, 76] { R17659 += 1, R17615 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R17659 += 1 };
  s8 -> s8 [87, 65535] { R17659 += 1, R17615 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 75] { R17661 += 1, R17617 += 1, R66 += 1 };
  s0 -> s2 [0, 65535] { R17661 += 1, R17616 += 1, R17617 += 1 };
  s0 -> s0 [0, 65535] { R17660 += 1, R17661 += 1 };
  s0 -> s3 [76, 76] { R17661 += 1, R17617 += 1, R66 += 1 };
  s0 -> s4 [76, 76] { R17661 += 1, R17617 += 1, R66 += 1 };
  s0 -> s1 [77, 65535] { R17661 += 1, R17617 += 1, R66 += 1 };
  s1 -> s1 [0, 75] { R17661 += 1, R17617 += 1, R66 += 1 };
  s1 -> s1 [0, 65535] { R17661 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [76, 76] { R17661 += 1, R17617 += 1, R66 += 1 };
  s1 -> s4 [76, 76] { R17661 += 1, R17617 += 1, R66 += 1 };
  s1 -> s1 [77, 65535] { R17661 += 1, R17617 += 1, R66 += 1 };
  s2 -> s1 [0, 75] { R17661 += 1, R17617 += 1, R66 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R17661 += 1, R17616 += 1, R17617 += 1 };
  s2 -> s3 [76, 76] { R17661 += 1, R17617 += 1, R66 += 1 };
  s2 -> s4 [76, 76] { R17661 += 1, R17617 += 1, R66 += 1 };
  s2 -> s1 [77, 65535] { R17661 += 1, R17617 += 1, R66 += 1 };
  s3 -> s3 [0, 65535] { R17661 += 1, R17617 += 1, R66 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R17661 += 1 };
  s4 -> s4 [0, 65535] { R17661 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R17661 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 75] { R17663 += 1, R17619 += 1, R68 += 1 };
  s0 -> s2 [0, 65535] { R17663 += 1, R17618 += 1, R17619 += 1 };
  s0 -> s0 [0, 65535] { R17662 += 1, R17663 += 1 };
  s0 -> s3 [76, 76] { R17663 += 1, R17619 += 1, R68 += 1 };
  s0 -> s4 [76, 76] { R17663 += 1, R17619 += 1, R68 += 1 };
  s0 -> s1 [77, 65535] { R17663 += 1, R17619 += 1, R68 += 1 };
  s1 -> s1 [0, 75] { R17663 += 1, R17619 += 1, R68 += 1 };
  s1 -> s1 [0, 65535] { R17663 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [76, 76] { R17663 += 1, R17619 += 1, R68 += 1 };
  s1 -> s4 [76, 76] { R17663 += 1, R17619 += 1, R68 += 1 };
  s1 -> s1 [77, 65535] { R17663 += 1, R17619 += 1, R68 += 1 };
  s2 -> s1 [0, 75] { R17663 += 1, R17619 += 1, R68 += 1 };
  s2 -> s2 [0, 65535] { R17663 += 1, R17618 += 1, R17619 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [76, 76] { R17663 += 1, R17619 += 1, R68 += 1 };
  s2 -> s4 [76, 76] { R17663 += 1, R17619 += 1, R68 += 1 };
  s2 -> s1 [77, 65535] { R17663 += 1, R17619 += 1, R68 += 1 };
  s3 -> s6 [0, 65535] { R17663 += 1 };
  s3 -> s3 [0, 65535] { R17663 += 1, R17619 += 1, R68 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R17663 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R17663 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 75] { R17665 += 1, R17621 += 1, R15333 += 1 };
  s0 -> s2 [0, 75] { R17665 += 1, R17621 += 1, R15332 += 1, R15333 += 1 };
  s0 -> s0 [0, 65535] { R17664 += 1, R17665 += 1 };
  s0 -> s3 [0, 65535] { R17665 += 1, R17620 += 1, R17621 += 1 };
  s0 -> s4 [76, 76] { R17665 += 1, R17621 += 1, R15333 += 1 };
  s0 -> s5 [76, 76] { R17665 += 1, R17621 += 1, R15332 += 1, R15333 += 1 };
  s0 -> s6 [76, 76] { R17665 += 1, R17621 += 1, R15332 += 1, R15333 += 1 };
  s0 -> s7 [76, 76] { R17665 += 1, R17621 += 1, R15333 += 1 };
  s0 -> s1 [77, 86] { R17665 += 1, R17621 += 1, R15333 += 1 };
  s0 -> s2 [77, 65535] { R17665 += 1, R17621 += 1, R15332 += 1, R15333 += 1 };
  s0 -> s1 [88, 65535] { R17665 += 1, R17621 += 1, R15333 += 1 };
  s1 -> s1 [0, 75] { R17665 += 1, R17621 += 1, R15333 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s1 [0, 65535] { R17665 += 1 };
  s1 -> s4 [76, 76] { R17665 += 1, R17621 += 1 };
  s1 -> s7 [76, 76] { R17665 += 1, R17621 += 1 };
  s1 -> s1 [77, 86] { R17665 += 1, R17621 += 1, R15333 += 1 };
  s1 -> s1 [77, 65535] { R17665 += 1, R17621 += 1 };
  s1 -> s1 [88, 65535] { R17665 += 1, R17621 += 1, R15333 += 1 };
  s2 -> s1 [0, 75] { R17665 += 1, R17621 += 1, R15333 += 1 };
  s2 -> s2 [0, 75] { R17665 += 1, R17621 += 1, R15332 += 1, R15333 += 1 };
  s2 -> s4 [76, 76] { R17665 += 1, R17621 += 1, R15333 += 1 };
  s2 -> s5 [76, 76] { R17665 += 1, R17621 += 1, R15332 += 1, R15333 += 1 };
  s2 -> s6 [76, 76] { R17665 += 1, R17621 += 1, R15332 += 1, R15333 += 1 };
  s2 -> s7 [76, 76] { R17665 += 1, R17621 += 1, R15333 += 1 };
  s2 -> s1 [77, 86] { R17665 += 1, R17621 += 1, R15333 += 1 };
  s2 -> s2 [77, 65535] { R17665 += 1, R17621 += 1, R15332 += 1, R15333 += 1 };
  s2 -> s1 [88, 65535] { R17665 += 1, R17621 += 1, R15333 += 1 };
  s3 -> s1 [0, 75] { R17665 += 1, R17621 += 1, R15333 += 1 };
  s3 -> s2 [0, 75] { R17665 += 1, R17621 += 1, R15332 += 1, R15333 += 1 };
  s3 -> s3 [0, 65535] { R17665 += 1, R17620 += 1, R17621 += 1 };
  s3 -> s4 [76, 76] { R17665 += 1, R17621 += 1, R15333 += 1 };
  s3 -> s5 [76, 76] { R17665 += 1, R17621 += 1, R15332 += 1, R15333 += 1 };
  s3 -> s6 [76, 76] { R17665 += 1, R17621 += 1, R15332 += 1, R15333 += 1 };
  s3 -> s7 [76, 76] { R17665 += 1, R17621 += 1, R15333 += 1 };
  s3 -> s1 [77, 86] { R17665 += 1, R17621 += 1, R15333 += 1 };
  s3 -> s2 [77, 65535] { R17665 += 1, R17621 += 1, R15332 += 1, R15333 += 1 };
  s3 -> s1 [88, 65535] { R17665 += 1, R17621 += 1, R15333 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [0, 65535] { R17665 += 1 };
  s6 -> s7 [0, 86] { R17665 += 1, R17621 += 1, R15333 += 1 };
  s6 -> s6 [0, 65535] { R17665 += 1, R17621 += 1, R15332 += 1, R15333 += 1 };
  s6 -> s7 [88, 65535] { R17665 += 1, R17621 += 1, R15333 += 1 };
  s7 -> s7 [0, 86] { R17665 += 1, R17621 += 1, R15333 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R17665 += 1 };
  s7 -> s7 [0, 65535] { R17665 += 1, R17621 += 1 };
  s7 -> s7 [88, 65535] { R17665 += 1, R17621 += 1, R15333 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R17665 += 1 };
  accepting s4, s8, s9, s1, s7;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 75] { R17667 += 1, R17623 += 1, R15336 += 1, R15337 += 1 };
  s0 -> s2 [0, 65535] { R17667 += 1, R17622 += 1, R17623 += 1 };
  s0 -> s0 [0, 65535] { R17666 += 1, R17667 += 1 };
  s0 -> s3 [76, 76] { R17667 += 1, R17623 += 1, R15336 += 1, R15337 += 1 };
  s0 -> s4 [76, 76] { R17667 += 1, R17623 += 1, R15336 += 1, R15337 += 1 };
  s0 -> s1 [77, 65535] { R17667 += 1, R17623 += 1, R15336 += 1, R15337 += 1 };
  s1 -> s1 [0, 75] { R17667 += 1, R17623 += 1, R15336 += 1, R15337 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R17667 += 1 };
  s1 -> s3 [76, 76] { R17667 += 1, R17623 += 1, R15336 += 1, R15337 += 1 };
  s1 -> s4 [76, 76] { R17667 += 1, R17623 += 1, R15336 += 1, R15337 += 1 };
  s1 -> s1 [77, 65535] { R17667 += 1, R17623 += 1, R15336 += 1, R15337 += 1 };
  s2 -> s1 [0, 75] { R17667 += 1, R17623 += 1, R15336 += 1, R15337 += 1 };
  s2 -> s2 [0, 65535] { R17667 += 1, R17622 += 1, R17623 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [76, 76] { R17667 += 1, R17623 += 1, R15336 += 1, R15337 += 1 };
  s2 -> s4 [76, 76] { R17667 += 1, R17623 += 1, R15336 += 1, R15337 += 1 };
  s2 -> s1 [77, 65535] { R17667 += 1, R17623 += 1, R15336 += 1, R15337 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R17667 += 1 };
  s3 -> s3 [0, 65535] { R17667 += 1, R17623 += 1, R15336 += 1, R15337 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R17667 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R17667 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 75] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s0 -> s2 [0, 75] { R17669 += 1, R17625 += 1, R16612 += 1, R16613 += 1 };
  s0 -> s3 [0, 65535] { R17669 += 1, R17624 += 1, R17625 += 1 };
  s0 -> s0 [0, 65535] { R17668 += 1, R17669 += 1 };
  s0 -> s4 [76, 76] { R17669 += 1, R17625 += 1, R16612 += 1, R16613 += 1 };
  s0 -> s5 [76, 76] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s0 -> s6 [76, 76] { R17669 += 1, R17625 += 1, R16612 += 1, R16613 += 1 };
  s0 -> s7 [76, 76] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s0 -> s1 [77, 87] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s0 -> s2 [77, 65535] { R17669 += 1, R17625 += 1, R16612 += 1, R16613 += 1 };
  s0 -> s8 [88, 88] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s0 -> s1 [89, 65535] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s1 -> s1 [0, 75] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s1 -> s5 [76, 76] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s1 -> s7 [76, 76] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s1 -> s1 [77, 87] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s1 -> s8 [88, 88] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s1 -> s1 [89, 65535] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s2 -> s1 [0, 75] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s2 -> s2 [0, 75] { R17669 += 1, R17625 += 1, R16612 += 1, R16613 += 1 };
  s2 -> s4 [76, 76] { R17669 += 1, R17625 += 1, R16612 += 1, R16613 += 1 };
  s2 -> s5 [76, 76] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s2 -> s6 [76, 76] { R17669 += 1, R17625 += 1, R16612 += 1, R16613 += 1 };
  s2 -> s7 [76, 76] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s2 -> s1 [77, 87] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s2 -> s2 [77, 65535] { R17669 += 1, R17625 += 1, R16612 += 1, R16613 += 1 };
  s2 -> s8 [88, 88] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s2 -> s1 [89, 65535] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s3 -> s1 [0, 75] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s3 -> s2 [0, 75] { R17669 += 1, R17625 += 1, R16612 += 1, R16613 += 1 };
  s3 -> s3 [0, 65535] { R17669 += 1, R17624 += 1, R17625 += 1 };
  s3 -> s4 [76, 76] { R17669 += 1, R17625 += 1, R16612 += 1, R16613 += 1 };
  s3 -> s5 [76, 76] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s3 -> s6 [76, 76] { R17669 += 1, R17625 += 1, R16612 += 1, R16613 += 1 };
  s3 -> s7 [76, 76] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s3 -> s1 [77, 87] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s3 -> s2 [77, 65535] { R17669 += 1, R17625 += 1, R16612 += 1, R16613 += 1 };
  s3 -> s8 [88, 88] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s3 -> s1 [89, 65535] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s4 -> s7 [0, 87] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s4 -> s4 [0, 65535] { R17669 += 1, R17625 += 1, R16612 += 1, R16613 += 1 };
  s4 -> s10 [88, 88] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s4 -> s7 [89, 65535] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s7 -> s7 [0, 87] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s7 -> s10 [88, 88] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s7 -> s7 [89, 65535] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s8 -> s8 [0, 75] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s8 -> s9 [0, 75] { R17669 += 1, R17625 += 1 };
  s8 -> s10 [76, 76] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s8 -> s11 [76, 76] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s8 -> s12 [76, 76] { R17669 += 1, R17625 += 1 };
  s8 -> s13 [76, 76] { R17669 += 1, R17625 += 1 };
  s8 -> s8 [77, 65535] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s8 -> s9 [77, 65535] { R17669 += 1, R17625 += 1 };
  s9 -> s9 [0, 75] { R17669 += 1, R17625 += 1 };
  s9 -> s9 [0, 65535] { R17669 += 1 };
  s9 -> s15 [0, 65535];
  s9 -> s12 [76, 76] { R17669 += 1, R17625 += 1 };
  s9 -> s13 [76, 76] { R17669 += 1, R17625 += 1 };
  s9 -> s9 [77, 65535] { R17669 += 1, R17625 += 1 };
  s10 -> s10 [0, 65535] { R17669 += 1, R17625 += 1, R16613 += 1 };
  s10 -> s13 [0, 65535] { R17669 += 1, R17625 += 1 };
  s12 -> s12 [0, 65535] { R17669 += 1 };
  s12 -> s15 [0, 65535];
  s13 -> s14 [0, 65535] { R17669 += 1 };
  s13 -> s13 [0, 65535] { R17669 += 1, R17625 += 1 };
  s13 -> s15 [0, 65535];
  s14 -> s14 [0, 65535] { R17669 += 1 };
  s14 -> s15 [0, 65535];
  s15 -> s15 [0, 65535];
  accepting s12, s13, s9, s14, s15;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R17671 += 1, R17627 += 1, R17461 += 1, R17462 += 1 };
  s0 -> s2 [0, 75] { R17671 += 1, R17627 += 1, R17460 += 1, R17461 += 1 };
  s0 -> s0 [0, 65535] { R17670 += 1, R17671 += 1 };
  s0 -> s3 [0, 65535] { R17671 += 1, R17626 += 1, R17627 += 1 };
  s0 -> s4 [76, 76] { R17671 += 1, R17627 += 1, R17460 += 1, R17461 += 1 };
  s0 -> s5 [76, 76] { R17671 += 1, R17627 += 1, R17460 += 1, R17461 += 1 };
  s0 -> s6 [76, 76] { R17671 += 1, R17627 += 1, R17461 += 1, R17462 += 1 };
  s0 -> s7 [76, 76] { R17671 += 1, R17627 += 1, R17461 += 1, R17462 += 1 };
  s0 -> s1 [77, 65535] { R17671 += 1, R17627 += 1, R17461 += 1, R17462 += 1 };
  s0 -> s2 [77, 65535] { R17671 += 1, R17627 += 1, R17460 += 1, R17461 += 1 };
  s1 -> s1 [0, 75] { R17671 += 1, R17627 += 1, R17461 += 1, R17462 += 1 };
  s1 -> s11 [0, 75] { R17671 += 1, R17627 += 1 };
  s1 -> s8 [76, 76] { R17671 += 1, R17627 += 1 };
  s1 -> s12 [76, 76] { R17671 += 1, R17627 += 1 };
  s1 -> s6 [76, 76] { R17671 += 1, R17627 += 1, R17461 += 1, R17462 += 1 };
  s1 -> s7 [76, 76] { R17671 += 1, R17627 += 1, R17461 += 1, R17462 += 1 };
  s1 -> s1 [77, 65535] { R17671 += 1, R17627 += 1, R17461 += 1, R17462 += 1 };
  s1 -> s11 [77, 65535] { R17671 += 1, R17627 += 1 };
  s2 -> s1 [0, 75] { R17671 += 1, R17627 += 1, R17461 += 1, R17462 += 1 };
  s2 -> s2 [0, 75] { R17671 += 1, R17627 += 1, R17460 += 1, R17461 += 1 };
  s2 -> s4 [76, 76] { R17671 += 1, R17627 += 1, R17460 += 1, R17461 += 1 };
  s2 -> s5 [76, 76] { R17671 += 1, R17627 += 1, R17460 += 1, R17461 += 1 };
  s2 -> s6 [76, 76] { R17671 += 1, R17627 += 1, R17461 += 1, R17462 += 1 };
  s2 -> s7 [76, 76] { R17671 += 1, R17627 += 1, R17461 += 1, R17462 += 1 };
  s2 -> s1 [77, 65535] { R17671 += 1, R17627 += 1, R17461 += 1, R17462 += 1 };
  s2 -> s2 [77, 65535] { R17671 += 1, R17627 += 1, R17460 += 1, R17461 += 1 };
  s3 -> s1 [0, 75] { R17671 += 1, R17627 += 1, R17461 += 1, R17462 += 1 };
  s3 -> s2 [0, 75] { R17671 += 1, R17627 += 1, R17460 += 1, R17461 += 1 };
  s3 -> s3 [0, 65535] { R17671 += 1, R17626 += 1, R17627 += 1 };
  s3 -> s4 [76, 76] { R17671 += 1, R17627 += 1, R17460 += 1, R17461 += 1 };
  s3 -> s5 [76, 76] { R17671 += 1, R17627 += 1, R17460 += 1, R17461 += 1 };
  s3 -> s6 [76, 76] { R17671 += 1, R17627 += 1, R17461 += 1, R17462 += 1 };
  s3 -> s7 [76, 76] { R17671 += 1, R17627 += 1, R17461 += 1, R17462 += 1 };
  s3 -> s1 [77, 65535] { R17671 += 1, R17627 += 1, R17461 += 1, R17462 += 1 };
  s3 -> s2 [77, 65535] { R17671 += 1, R17627 += 1, R17460 += 1, R17461 += 1 };
  s4 -> s4 [0, 65535] { R17671 += 1, R17627 += 1, R17460 += 1, R17461 += 1 };
  s4 -> s7 [0, 65535] { R17671 += 1, R17627 += 1, R17461 += 1, R17462 += 1 };
  s7 -> s8 [0, 65535] { R17671 += 1, R17627 += 1 };
  s7 -> s7 [0, 65535] { R17671 += 1, R17627 += 1, R17461 += 1, R17462 += 1 };
  s8 -> s9 [0, 65535] { R17671 += 1 };
  s8 -> s10 [0, 65535];
  s8 -> s8 [0, 65535] { R17671 += 1, R17627 += 1 };
  s9 -> s9 [0, 65535] { R17671 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  s11 -> s11 [0, 75] { R17671 += 1, R17627 += 1 };
  s11 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R17671 += 1 };
  s11 -> s8 [76, 76] { R17671 += 1, R17627 += 1 };
  s11 -> s12 [76, 76] { R17671 += 1, R17627 += 1 };
  s11 -> s11 [77, 65535] { R17671 += 1, R17627 += 1 };
  s12 -> s10 [0, 65535];
  s12 -> s12 [0, 65535] { R17671 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 75] { R17673 += 1, R17629 += 1, R17571 += 1 };
  s0 -> s2 [0, 75] { R17673 += 1, R17629 += 1, R17570 += 1, R17571 += 1 };
  s0 -> s3 [0, 65535] { R17673 += 1, R17628 += 1, R17629 += 1 };
  s0 -> s0 [0, 65535] { R17672 += 1, R17673 += 1 };
  s0 -> s4 [76, 76] { R17673 += 1, R17629 += 1, R17570 += 1, R17571 += 1 };
  s0 -> s5 [76, 76] { R17673 += 1, R17629 += 1, R17570 += 1, R17571 += 1 };
  s0 -> s6 [76, 76] { R17673 += 1, R17629 += 1, R17571 += 1 };
  s0 -> s7 [76, 76] { R17673 += 1, R17629 += 1, R17571 += 1 };
  s0 -> s1 [77, 86] { R17673 += 1, R17629 += 1, R17571 += 1 };
  s0 -> s2 [77, 65535] { R17673 += 1, R17629 += 1, R17570 += 1, R17571 += 1 };
  s0 -> s1 [89, 65535] { R17673 += 1, R17629 += 1, R17571 += 1 };
  s1 -> s1 [0, 75] { R17673 += 1, R17629 += 1, R17571 += 1 };
  s1 -> s1 [0, 65535] { R17673 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s6 [76, 76] { R17673 += 1, R17629 += 1 };
  s1 -> s7 [76, 76] { R17673 += 1, R17629 += 1 };
  s1 -> s1 [77, 86] { R17673 += 1, R17629 += 1, R17571 += 1 };
  s1 -> s1 [77, 65535] { R17673 += 1, R17629 += 1 };
  s1 -> s1 [89, 65535] { R17673 += 1, R17629 += 1, R17571 += 1 };
  s2 -> s1 [0, 75] { R17673 += 1, R17629 += 1, R17571 += 1 };
  s2 -> s2 [0, 75] { R17673 += 1, R17629 += 1, R17570 += 1, R17571 += 1 };
  s2 -> s4 [76, 76] { R17673 += 1, R17629 += 1, R17570 += 1, R17571 += 1 };
  s2 -> s5 [76, 76] { R17673 += 1, R17629 += 1, R17570 += 1, R17571 += 1 };
  s2 -> s6 [76, 76] { R17673 += 1, R17629 += 1, R17571 += 1 };
  s2 -> s7 [76, 76] { R17673 += 1, R17629 += 1, R17571 += 1 };
  s2 -> s1 [77, 86] { R17673 += 1, R17629 += 1, R17571 += 1 };
  s2 -> s2 [77, 65535] { R17673 += 1, R17629 += 1, R17570 += 1, R17571 += 1 };
  s2 -> s1 [89, 65535] { R17673 += 1, R17629 += 1, R17571 += 1 };
  s3 -> s1 [0, 75] { R17673 += 1, R17629 += 1, R17571 += 1 };
  s3 -> s2 [0, 75] { R17673 += 1, R17629 += 1, R17570 += 1, R17571 += 1 };
  s3 -> s3 [0, 65535] { R17673 += 1, R17628 += 1, R17629 += 1 };
  s3 -> s4 [76, 76] { R17673 += 1, R17629 += 1, R17570 += 1, R17571 += 1 };
  s3 -> s5 [76, 76] { R17673 += 1, R17629 += 1, R17570 += 1, R17571 += 1 };
  s3 -> s6 [76, 76] { R17673 += 1, R17629 += 1, R17571 += 1 };
  s3 -> s7 [76, 76] { R17673 += 1, R17629 += 1, R17571 += 1 };
  s3 -> s1 [77, 86] { R17673 += 1, R17629 += 1, R17571 += 1 };
  s3 -> s2 [77, 65535] { R17673 += 1, R17629 += 1, R17570 += 1, R17571 += 1 };
  s3 -> s1 [89, 65535] { R17673 += 1, R17629 += 1, R17571 += 1 };
  s4 -> s6 [0, 86] { R17673 += 1, R17629 += 1, R17571 += 1 };
  s4 -> s4 [0, 65535] { R17673 += 1, R17629 += 1, R17570 += 1, R17571 += 1 };
  s4 -> s6 [89, 65535] { R17673 += 1, R17629 += 1, R17571 += 1 };
  s6 -> s6 [0, 86] { R17673 += 1, R17629 += 1, R17571 += 1 };
  s6 -> s6 [0, 65535] { R17673 += 1, R17629 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [0, 65535] { R17673 += 1 };
  s6 -> s6 [89, 65535] { R17673 += 1, R17629 += 1, R17571 += 1 };
  s7 -> s7 [0, 65535] { R17673 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R17673 += 1 };
  accepting s8, s9, s6, s1, s7;
};
};
synchronised {  // Automata constraining P63
automaton P63_0 {
  init s0;
  s0 -> s1 [119, 119];
  accepting s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [108, 108];
  accepting s1;
};
};
constraint R2 = R17673 && R20 - R17673 = -1 && R21 = R17673 && R22 - R17673 = -1 && R23 = R17673 && R24 = 0 && R25 = 1 && R26 = 0 && R27 = 1 && R38 + R67 + R66 + -1*R16615 + -1*R16613 - R53 = 0 && R52 + R16614 + R16612 = 0 && R17614 = 0 && R17615 = 0 && R17620 = 0 && R17621 = 0 && R17624 = 0 && R17625 = 0 && R17626 = 0 && R17627 = 0 && R17628 = 0 && R17629 = 0 && R17630 = 0 && R17631 = R17673 && R17632 = 0 && R17633 = R17673 && R17634 = 0 && R17635 = R17673 && R17636 = 0 && R17637 = R17673 && R17638 = 0 && R17639 = R17673 && R17640 = 0 && R17641 = R17673 && R17642 = 0 && R17643 = R17673 && R17644 = 0 && R17645 = R17673 && R17646 = 0 && R17647 = R17673 && R17648 = 0 && R17649 = R17673 && R17650 = 0 && R17651 = R17673 && R17652 = 0 && R17653 = R17673 && R17654 = 0 && R17655 = R17673 && R17656 = 0 && R17657 = R17673 && R17658 = 0 && R17659 = R17673 && R17660 = 0 && R17661 = R17673 && R17662 = 0 && R17663 = R17673 && R17664 = 0 && R17665 = R17673 && R17666 = 0 && R17667 = R17673 && R17668 = 0 && R17669 = R17673 && R17670 = 0 && R17671 = R17673 && R17672 = 0 && -1 < R1 && R8 < 1 && R11 < 1 && R12 < 1 && R40 + R69 + R68 < 1 && -1*R16615 + -1*R16613 - R53 < 1 && 0 < R17673 && (R1 != 0 || R17 = 0 || (R17574 = 0 && R17575 = 0)) && (R1 != 0 || R17 = 0 || (R17576 = 0 && R17577 = 0)) && (R1 != 0 || R17 = 0 || (R17578 = 0 && R17579 = 0)) && (R1 != 0 || R17 = 0 || (R17580 = 0 && R17581 = 0)) && (R1 != 0 || R17 = 0 || (R17582 = 0 && R17583 = 0)) && (R1 != 0 || R17 = 0 || (R17584 = 0 && R17585 = 0)) && (R1 != 0 || R17 = 0 || (R17586 = 0 && R17587 = 0)) && (R1 != 0 || R17 = 0 || (R17588 = 0 && R17589 = 0)) && (R1 != 0 || R17 = 0 || (R17590 = 0 && R17591 = 0)) && (R1 != 0 || R17 = 0 || (R17592 = 0 && R17593 = 0)) && (R48 + R15341 + R15338 != 0 || ((R42 + R15334 + R15332 != 0 || R43 + R15335 + R15333 + -1*R16615 + -1*R16613 - R53 = 0 || R53 + R16615 + R16613 < 1) && (R42 + R15334 + R15332 = 0 || R53 + R16615 + R16613 < 1))) && (R48 + R15341 + R15338 != 0 || ((R46 + R15339 + R15336 != 0 || R47 + R15340 + R15337 + -1*R16615 + -1*R16613 - R53 = 0 || R53 + R16615 + R16613 < 1) && (R46 + R15339 + R15336 = 0 || R53 + R16615 + R16613 < 1))) && (R17574 != 0 || R1 = R17575 || R1 < 1) && (R17576 != 0 || R1 = R17577 || R1 < 1) && (R17578 != 0 || R1 = R17579 || R1 < 1) && (R17580 != 0 || R1 = R17581 || R1 < 1) && (R17582 != 0 || R1 = R17583 || R1 < 1) && (R17584 != 0 || R1 = R17585 || R1 < 1) && (R17586 != 0 || R1 = R17587 || R1 < 1) && (R17588 != 0 || R1 = R17589 || R1 < 1) && (R17590 != 0 || R1 = R17591 || R1 < 1) && (R17592 != 0 || R1 = R17593 || R1 < 1) && (R18 = 0 || (R17612 = 0 && R17613 = 0)) && (R18 = 0 || (R17616 = 0 && R17617 = 0)) && (R18 = 0 || (R17618 = 0 && R17619 = 0)) && (R18 = 0 || (R17622 = 0 && R17623 = 0)) && (R19 = 0 || (R17594 = 0 && R17595 = 0)) && (R19 = 0 || (R17596 = 0 && R17597 = 0)) && (R19 = 0 || (R17598 = 0 && R17599 = 0)) && (R19 = 0 || (R17600 = 0 && R17601 = 0)) && (R19 = 0 || (R17602 = 0 && R17603 = 0)) && (R19 = 0 || (R17604 = 0 && R17605 = 0)) && (R19 = 0 || (R17606 = 0 && R17607 = 0)) && (R19 = 0 || (R17608 = 0 && R17609 = 0)) && (R19 = 0 || (R17610 = 0 && R17611 = 0)) && (R48 + R15341 + R15338 = 0 || (R42 + R15334 + R15332 = 0 && R43 + R15335 + R15333 + -1*R16615 + -1*R16613 - R53 = 0)) && (R48 + R15341 + R15338 = 0 || (R46 + R15339 + R15336 = 0 && R47 + R15340 + R15337 + -1*R16615 + -1*R16613 - R53 = 0)) && (R58 + R17465 + R17462 = 0 || (R56 + R17463 + R17460 = 0 && R57 + R17464 + R17461 = 0)) && (R58 + R17465 + R17462 = 0 || (R62 + R17572 + R17570 = 0 && R63 + R17573 + R17571 = 0)) && (R17574 = 0 || R1 < 1) && (R17576 = 0 || R1 < 1) && (R17578 = 0 || R1 < 1) && (R17580 = 0 || R1 < 1) && (R17582 = 0 || R1 < 1) && (R17584 = 0 || R1 < 1) && (R17586 = 0 || R1 < 1) && (R17588 = 0 || R1 < 1) && (R17590 = 0 || R1 < 1) && (R17592 = 0 || R1 < 1);
// End of Parikh automata intersection problem
