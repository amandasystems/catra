// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R2, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R5, R63, R65, R6563, R6564, R6565, R6566, R6567, R6568, R6569, R6570, R6571, R6572, R6573, R6574, R6575, R6576, R6577, R6578, R6579, R6580, R67, R68, R69, R73, R74, R7687, R7688, R7689, R7690, R7691, R7692, R7693, R7694, R7695, R7696, R7697, R7698, R7699, R77, R7700, R7701, R7702, R7703, R7704, R7705, R7706, R7707, R7708, R7709, R7710, R7711, R7712, R7713, R7714, R7715, R7716, R7717, R7718, R7719, R7720, R7721, R7722, R7723, R7724, R7725, R7726, R7727, R7728, R7729, R7730, R7731, R7732, R7733, R7734, R7735, R7736, R7737, R7738, R7739, R7740, R7741, R7742, R7743, R7744, R7745, R7746, R7747, R7748, R7749, R7750, R7751, R7752, R7753, R7754, R7755, R7756, R7757, R7758, R7759, R7760, R7761, R7762, R7763, R7764, R7765, R7766, R7767, R7768, R7769, R7770, R7771, R7772, R7773, R7774, R7775, R7776, R7777, R7778, R7779, R7780, R7781, R7782, R7783, R7784, R7785, R7786, R7787, R7788, R7789, R7790, R7791, R7792, R7793, R7794, R7795, R7796, R7797, R7798, R7799, R78, R7800, R7801, R7802, R7803, R7804, R7805, R7806, R7807, R7808, R7809, R7810, R7811, R7812, R7813, R7814, R7815, R7816, R7817, R7818, R7819, R7820, R7821, R7822, R7823, R7824, R7825, R7826, R7827, R7828, R7829, R7830, R7831, R7832, R7833, R7834, R7835, R7836, R7837, R7838, R7839, R7840, R7841, R7842, R7843, R7844, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R30 += 1 };
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R7725 += 1, R7726 += 1 };
  s0 -> s1 [0, 65535] { R7726 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R7726 += 1, R24 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R7728 += 1 };
  s0 -> s0 [0, 65535] { R7727 += 1, R7728 += 1 };
  s0 -> s2 [70, 70] { R7728 += 1 };
  s0 -> s3 [70, 70] { R7728 += 1 };
  s0 -> s1 [76, 65535] { R7728 += 1 };
  s1 -> s1 [0, 69] { R7728 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7728 += 1 };
  s1 -> s3 [70, 70] { R7728 += 1 };
  s1 -> s1 [76, 65535] { R7728 += 1 };
  s2 -> s2 [0, 70] { R7728 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R7728 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R7730 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R7729 += 1, R7730 += 1 };
  s0 -> s2 [70, 70] { R7730 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R7730 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R7730 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R7730 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7730 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R7730 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R7730 += 1, R63 += 1 };
  s2 -> s2 [0, 65535] { R7730 += 1, R63 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R7732 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R7731 += 1, R7732 += 1 };
  s0 -> s2 [70, 70] { R7732 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R7732 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R7732 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R7732 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7732 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R7732 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R7732 += 1, R65 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R7732 += 1, R65 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R7734 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R7733 += 1, R7734 += 1 };
  s0 -> s2 [70, 70] { R7734 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R7734 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R7734 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R7734 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7734 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R7734 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R7734 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R7734 += 1, R67 += 1, R68 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R7736 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R7735 += 1, R7736 += 1 };
  s0 -> s2 [70, 70] { R7736 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R7736 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R7736 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R7736 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7736 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R7736 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R7736 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R7736 += 1, R73 += 1, R74 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R7738 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R7737 += 1, R7738 += 1 };
  s0 -> s2 [70, 70] { R7738 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R7738 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R7738 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R7738 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7738 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R7738 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R7738 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535] { R7738 += 1, R77 += 1, R78 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R7740 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R7739 += 1, R7740 += 1 };
  s0 -> s2 [70, 70] { R7740 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R7740 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R7740 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R7740 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7740 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R7740 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R7740 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535] { R7740 += 1, R81 += 1, R82 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R7742 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R7741 += 1, R7742 += 1 };
  s0 -> s2 [70, 70] { R7742 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R7742 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R7742 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R7742 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7742 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R7742 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R7742 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R7742 += 1, R87 += 1, R88 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R7744 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R7743 += 1, R7744 += 1 };
  s0 -> s2 [70, 70] { R7744 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R7744 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R7744 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R7744 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7744 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R7744 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R7744 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R7744 += 1, R93 += 1, R94 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R7746 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R7745 += 1, R7746 += 1 };
  s0 -> s2 [70, 70] { R7746 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R7746 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R7746 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R7746 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7746 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R7746 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R7746 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535] { R7746 += 1, R101 += 1, R102 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R7748 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R7747 += 1, R7748 += 1 };
  s0 -> s2 [70, 70] { R7748 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R7748 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R7748 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R7748 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7748 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R7748 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R7748 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535] { R7748 += 1, R111 += 1, R112 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R7750 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R7749 += 1, R7750 += 1 };
  s0 -> s2 [70, 70] { R7750 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R7750 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R7750 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R7750 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7750 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R7750 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R7750 += 1, R119 += 1, R120 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R7750 += 1, R119 += 1, R120 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R7752 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R7751 += 1, R7752 += 1 };
  s0 -> s2 [70, 70] { R7752 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R7752 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R7752 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R7752 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R7752 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R7752 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R7752 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535] { R7752 += 1, R129 += 1, R130 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R7782 += 1 };
  s0 -> s0 [0, 65535] { R7781 += 1, R7782 += 1 };
  s0 -> s2 [70, 70] { R7782 += 1 };
  s0 -> s1 [71, 65535] { R7782 += 1 };
  s1 -> s1 [0, 69] { R7782 += 1 };
  s1 -> s2 [70, 70] { R7782 += 1 };
  s1 -> s1 [71, 65535] { R7782 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R7782 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R7784 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R7783 += 1, R7784 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R7784 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R7786 += 1 };
  s0 -> s2 [0, 65535] { R7786 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R7785 += 1, R7786 += 1 };
  s0 -> s3 [70, 70] { R7786 += 1 };
  s0 -> s1 [71, 65535] { R7786 += 1 };
  s1 -> s1 [0, 69] { R7786 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R7786 += 1 };
  s1 -> s1 [71, 65535] { R7786 += 1 };
  s2 -> s1 [0, 69] { R7786 += 1 };
  s2 -> s2 [0, 65535] { R7786 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R7786 += 1 };
  s2 -> s1 [71, 65535] { R7786 += 1 };
  s3 -> s3 [0, 65535] { R7786 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R7788 += 1, R7696 += 1 };
  s0 -> s0 [0, 65535] { R7787 += 1, R7788 += 1 };
  s0 -> s2 [0, 65535] { R7788 += 1, R7695 += 1, R7696 += 1 };
  s0 -> s1 [71, 65535] { R7788 += 1, R7696 += 1 };
  s1 -> s1 [0, 69] { R7788 += 1, R7696 += 1 };
  s1 -> s1 [0, 65535] { R7788 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R7788 += 1, R7696 += 1 };
  s2 -> s1 [0, 69] { R7788 += 1, R7696 += 1 };
  s2 -> s2 [0, 65535] { R7788 += 1, R7695 += 1, R7696 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R7788 += 1, R7696 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R7790 += 1, R7697 += 1, R7698 += 1 };
  s0 -> s0 [0, 65535] { R7789 += 1, R7790 += 1 };
  s0 -> s2 [0, 65535] { R7790 += 1, R7698 += 1, R22 += 1 };
  s1 -> s1 [0, 65535] { R7790 += 1, R7697 += 1, R7698 += 1 };
  s1 -> s2 [0, 65535] { R7790 += 1, R7698 += 1, R22 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R7790 += 1 };
  s2 -> s2 [0, 65535] { R7790 += 1, R7698 += 1, R22 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R7790 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R7792 += 1, R7700 += 1 };
  s0 -> s0 [0, 65535] { R7791 += 1, R7792 += 1 };
  s0 -> s2 [0, 65535] { R7792 += 1, R7699 += 1, R7700 += 1 };
  s0 -> s1 [75, 65535] { R7792 += 1, R7700 += 1 };
  s1 -> s1 [0, 70] { R7792 += 1, R7700 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R7792 += 1 };
  s1 -> s1 [75, 65535] { R7792 += 1, R7700 += 1 };
  s2 -> s1 [0, 70] { R7792 += 1, R7700 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R7792 += 1, R7699 += 1, R7700 += 1 };
  s2 -> s1 [75, 65535] { R7792 += 1, R7700 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s0 [0, 65535] { R7793 += 1, R7794 += 1 };
  s0 -> s1 [0, 65535] { R7794 += 1, R7702 += 1, R138 += 1 };
  s0 -> s2 [0, 65535] { R7794 += 1, R7701 += 1, R7702 += 1 };
  s1 -> s4 [0, 65535] { R7794 += 1 };
  s1 -> s1 [0, 65535] { R7794 += 1, R7702 += 1, R138 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R7794 += 1, R7702 += 1, R138 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R7794 += 1, R7701 += 1, R7702 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R7794 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R7796 += 1, R7704 += 1 };
  s0 -> s2 [0, 65535] { R7796 += 1, R7703 += 1, R7704 += 1 };
  s0 -> s0 [0, 65535] { R7795 += 1, R7796 += 1 };
  s0 -> s3 [0, 65535] { R7796 += 1, R7704 += 1, R140 += 1 };
  s0 -> s1 [76, 65535] { R7796 += 1, R7704 += 1 };
  s1 -> s1 [0, 74] { R7796 += 1, R7704 += 1 };
  s1 -> s1 [0, 65535] { R7796 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R7796 += 1, R7704 += 1 };
  s2 -> s1 [0, 74] { R7796 += 1, R7704 += 1 };
  s2 -> s2 [0, 65535] { R7796 += 1, R7703 += 1, R7704 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R7796 += 1, R7704 += 1, R140 += 1 };
  s2 -> s1 [76, 65535] { R7796 += 1, R7704 += 1 };
  s3 -> s1 [0, 74] { R7796 += 1, R7704 += 1 };
  s3 -> s4 [0, 65535] { R7796 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R7796 += 1, R7704 += 1, R140 += 1 };
  s3 -> s1 [76, 65535] { R7796 += 1, R7704 += 1 };
  s4 -> s4 [0, 65535] { R7796 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R7797 += 1, R7798 += 1 };
  s0 -> s1 [0, 65535] { R7798 += 1, R7705 += 1, R7706 += 1 };
  s0 -> s2 [0, 65535] { R7798 += 1, R7706 += 1, R144 += 1, R145 += 1 };
  s0 -> s3 [0, 65535] { R7798 += 1, R7706 += 1, R145 += 1, R146 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R7798 += 1, R7705 += 1, R7706 += 1 };
  s1 -> s2 [0, 65535] { R7798 += 1, R7706 += 1, R144 += 1, R145 += 1 };
  s1 -> s3 [0, 65535] { R7798 += 1, R7706 += 1, R145 += 1, R146 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R7798 += 1, R7706 += 1, R144 += 1, R145 += 1 };
  s2 -> s5 [0, 65535] { R7798 += 1 };
  s2 -> s3 [0, 65535] { R7798 += 1, R7706 += 1, R145 += 1, R146 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R7798 += 1 };
  s3 -> s6 [0, 65535] { R7798 += 1, R7706 += 1 };
  s3 -> s3 [0, 65535] { R7798 += 1, R7706 += 1, R145 += 1, R146 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R7798 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R7798 += 1 };
  s6 -> s6 [0, 65535] { R7798 += 1, R7706 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R7800 += 1, R7708 += 1, R150 += 1 };
  s0 -> s2 [0, 65535] { R7800 += 1, R7707 += 1, R7708 += 1 };
  s0 -> s0 [0, 65535] { R7799 += 1, R7800 += 1 };
  s0 -> s3 [0, 65535] { R7800 += 1, R7708 += 1, R149 += 1, R150 += 1 };
  s0 -> s4 [75, 75] { R7800 += 1, R7708 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R7800 += 1, R7708 += 1, R150 += 1 };
  s0 -> s1 [78, 65535] { R7800 += 1, R7708 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R7800 += 1, R7708 += 1, R150 += 1 };
  s1 -> s1 [0, 65535] { R7800 += 1, R7708 += 1 };
  s1 -> s6 [0, 65535] { R7800 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [75, 75] { R7800 += 1, R7708 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R7800 += 1, R7708 += 1, R150 += 1 };
  s1 -> s1 [78, 65535] { R7800 += 1, R7708 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R7800 += 1, R7708 += 1, R150 += 1 };
  s2 -> s2 [0, 65535] { R7800 += 1, R7707 += 1, R7708 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s3 [0, 65535] { R7800 += 1, R7708 += 1, R149 += 1, R150 += 1 };
  s2 -> s4 [75, 75] { R7800 += 1, R7708 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R7800 += 1, R7708 += 1, R150 += 1 };
  s2 -> s1 [78, 65535] { R7800 += 1, R7708 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R7800 += 1, R7708 += 1, R150 += 1 };
  s3 -> s6 [0, 65535] { R7800 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R7800 += 1, R7708 += 1, R149 += 1, R150 += 1 };
  s3 -> s4 [75, 75] { R7800 += 1, R7708 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R7800 += 1, R7708 += 1, R150 += 1 };
  s3 -> s1 [78, 65535] { R7800 += 1, R7708 += 1, R150 += 1 };
  s4 -> s4 [0, 75] { R7800 += 1, R7708 += 1, R150 += 1 };
  s4 -> s4 [0, 65535] { R7800 += 1, R7708 += 1 };
  s4 -> s6 [0, 65535] { R7800 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [78, 65535] { R7800 += 1, R7708 += 1, R150 += 1 };
  s5 -> s5 [0, 65535] { R7800 += 1, R7708 += 1 };
  s5 -> s6 [0, 65535] { R7800 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R7800 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s0 [0, 65535] { R7801 += 1, R7802 += 1 };
  s0 -> s1 [0, 65535] { R7802 += 1, R7710 += 1, R154 += 1 };
  s0 -> s2 [0, 65535] { R7802 += 1, R7710 += 1 };
  s0 -> s3 [0, 65535] { R7802 += 1, R7709 += 1, R7710 += 1 };
  s1 -> s1 [0, 65535] { R7802 += 1, R7710 += 1, R154 += 1 };
  s1 -> s2 [0, 65535] { R7802 += 1, R7710 += 1 };
  s1 -> s5 [0, 65535] { R7802 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R7802 += 1, R7710 += 1 };
  s2 -> s5 [0, 65535] { R7802 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R7802 += 1, R7710 += 1, R154 += 1 };
  s3 -> s2 [0, 65535] { R7802 += 1, R7710 += 1 };
  s3 -> s3 [0, 65535] { R7802 += 1, R7709 += 1, R7710 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R7802 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s0 [0, 65535] { R7803 += 1, R7804 += 1 };
  s0 -> s1 [0, 65535] { R7804 += 1, R7711 += 1, R7712 += 1 };
  s0 -> s2 [0, 65535] { R7804 += 1, R7712 += 1, R158 += 1, R159 += 1 };
  s0 -> s3 [0, 65535] { R7804 += 1, R7712 += 1, R159 += 1, R160 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R7804 += 1, R7711 += 1, R7712 += 1 };
  s1 -> s2 [0, 65535] { R7804 += 1, R7712 += 1, R158 += 1, R159 += 1 };
  s1 -> s3 [0, 65535] { R7804 += 1, R7712 += 1, R159 += 1, R160 += 1 };
  s2 -> s4 [0, 65535] { R7804 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R7804 += 1, R7712 += 1, R158 += 1, R159 += 1 };
  s2 -> s3 [0, 65535] { R7804 += 1, R7712 += 1, R159 += 1, R160 += 1 };
  s3 -> s4 [0, 65535] { R7804 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R7804 += 1, R7712 += 1 };
  s3 -> s3 [0, 65535] { R7804 += 1, R7712 += 1, R159 += 1, R160 += 1 };
  s4 -> s4 [0, 65535] { R7804 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R7804 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7804 += 1, R7712 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R7806 += 1, R7714 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R7806 += 1, R7714 += 1, R165 += 1, R166 += 1 };
  s0 -> s0 [0, 65535] { R7805 += 1, R7806 += 1 };
  s0 -> s3 [0, 65535] { R7806 += 1, R7714 += 1, R164 += 1, R165 += 1 };
  s0 -> s4 [0, 65535] { R7806 += 1, R7713 += 1, R7714 += 1 };
  s0 -> s1 [76, 65535] { R7806 += 1, R7714 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R7806 += 1, R7714 += 1, R165 += 1 };
  s1 -> s1 [0, 65535] { R7806 += 1, R7714 += 1 };
  s1 -> s6 [0, 65535] { R7806 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R7806 += 1, R7714 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R7806 += 1, R7714 += 1, R165 += 1 };
  s2 -> s2 [0, 65535] { R7806 += 1, R7714 += 1, R165 += 1, R166 += 1 };
  s2 -> s7 [0, 65535] { R7806 += 1, R7714 += 1 };
  s2 -> s6 [0, 65535] { R7806 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [76, 65535] { R7806 += 1, R7714 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R7806 += 1, R7714 += 1, R165 += 1 };
  s3 -> s2 [0, 65535] { R7806 += 1, R7714 += 1, R165 += 1, R166 += 1 };
  s3 -> s3 [0, 65535] { R7806 += 1, R7714 += 1, R164 += 1, R165 += 1 };
  s3 -> s6 [0, 65535] { R7806 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [76, 65535] { R7806 += 1, R7714 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R7806 += 1, R7714 += 1, R165 += 1 };
  s4 -> s2 [0, 65535] { R7806 += 1, R7714 += 1, R165 += 1, R166 += 1 };
  s4 -> s3 [0, 65535] { R7806 += 1, R7714 += 1, R164 += 1, R165 += 1 };
  s4 -> s4 [0, 65535] { R7806 += 1, R7713 += 1, R7714 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s1 [76, 65535] { R7806 += 1, R7714 += 1, R165 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7806 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R7806 += 1, R7714 += 1 };
  s7 -> s6 [0, 65535] { R7806 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R7808 += 1, R7716 += 1, R172 += 1, R174 += 1 };
  s0 -> s0 [0, 65535] { R7807 += 1, R7808 += 1 };
  s0 -> s2 [0, 65535] { R7808 += 1, R7716 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s3 [0, 65535] { R7808 += 1, R7715 += 1, R7716 += 1 };
  s0 -> s4 [0, 65535] { R7808 += 1, R7716 += 1, R171 += 1, R172 += 1 };
  s0 -> s1 [76, 65535] { R7808 += 1, R7716 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R7808 += 1, R7716 += 1, R172 += 1, R174 += 1 };
  s1 -> s5 [0, 65535] { R7808 += 1 };
  s1 -> s7 [0, 65535] { R7808 += 1, R7716 += 1 };
  s1 -> s1 [0, 65535] { R7808 += 1, R7716 += 1, R172 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [76, 65535] { R7808 += 1, R7716 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R7808 += 1, R7716 += 1, R172 += 1, R174 += 1 };
  s2 -> s5 [0, 65535] { R7808 += 1 };
  s2 -> s7 [0, 65535] { R7808 += 1, R7716 += 1 };
  s2 -> s2 [0, 65535] { R7808 += 1, R7716 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [76, 65535] { R7808 += 1, R7716 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R7808 += 1, R7716 += 1, R172 += 1, R174 += 1 };
  s3 -> s2 [0, 65535] { R7808 += 1, R7716 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s3 [0, 65535] { R7808 += 1, R7715 += 1, R7716 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R7808 += 1, R7716 += 1, R171 += 1, R172 += 1 };
  s3 -> s1 [76, 65535] { R7808 += 1, R7716 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R7808 += 1, R7716 += 1, R172 += 1, R174 += 1 };
  s4 -> s5 [0, 65535] { R7808 += 1 };
  s4 -> s2 [0, 65535] { R7808 += 1, R7716 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R7808 += 1, R7716 += 1, R171 += 1, R172 += 1 };
  s4 -> s1 [76, 65535] { R7808 += 1, R7716 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535] { R7808 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R7808 += 1 };
  s7 -> s7 [0, 65535] { R7808 += 1, R7716 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R7810 += 1, R7717 += 1, R7718 += 1 };
  s0 -> s2 [0, 65535] { R7810 += 1, R7718 += 1 };
  s0 -> s3 [0, 65535] { R7810 += 1, R7718 += 1, R181 += 1 };
  s0 -> s0 [0, 65535] { R7809 += 1, R7810 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R7810 += 1, R7717 += 1, R7718 += 1 };
  s1 -> s2 [0, 65535] { R7810 += 1, R7718 += 1 };
  s1 -> s3 [0, 65535] { R7810 += 1, R7718 += 1, R181 += 1 };
  s2 -> s4 [0, 65535] { R7810 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R7810 += 1, R7718 += 1 };
  s3 -> s4 [0, 65535] { R7810 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R7810 += 1, R7718 += 1 };
  s3 -> s3 [0, 65535] { R7810 += 1, R7718 += 1, R181 += 1 };
  s4 -> s4 [0, 65535] { R7810 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R7812 += 1, R7720 += 1, R6568 += 1, R6570 += 1 };
  s0 -> s2 [0, 65535] { R7812 += 1, R7720 += 1 };
  s0 -> s1 [0, 65535] { R7812 += 1, R7720 += 1, R6568 += 1 };
  s0 -> s3 [0, 65535] { R7812 += 1, R7719 += 1, R7720 += 1 };
  s0 -> s0 [0, 65535] { R7811 += 1, R7812 += 1 };
  s0 -> s1 [77, 65535] { R7812 += 1, R7720 += 1, R6568 += 1, R6570 += 1 };
  s1 -> s1 [0, 75] { R7812 += 1, R7720 += 1, R6568 += 1, R6570 += 1 };
  s1 -> s2 [0, 65535] { R7812 += 1, R7720 += 1 };
  s1 -> s1 [0, 65535] { R7812 += 1, R7720 += 1, R6568 += 1 };
  s1 -> s5 [0, 65535] { R7812 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [77, 65535] { R7812 += 1, R7720 += 1, R6568 += 1, R6570 += 1 };
  s2 -> s2 [0, 65535] { R7812 += 1, R7720 += 1 };
  s2 -> s5 [0, 65535] { R7812 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 75] { R7812 += 1, R7720 += 1, R6568 += 1, R6570 += 1 };
  s3 -> s2 [0, 65535] { R7812 += 1, R7720 += 1 };
  s3 -> s1 [0, 65535] { R7812 += 1, R7720 += 1, R6568 += 1 };
  s3 -> s3 [0, 65535] { R7812 += 1, R7719 += 1, R7720 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [77, 65535] { R7812 += 1, R7720 += 1, R6568 += 1, R6570 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R7812 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R7814 += 1, R7721 += 1, R7722 += 1 };
  s0 -> s2 [0, 65535] { R7814 += 1, R7722 += 1 };
  s0 -> s3 [0, 65535] { R7814 += 1, R7722 += 1, R6577 += 1, R6579 += 1, R6580 += 1 };
  s0 -> s0 [0, 65535] { R7813 += 1, R7814 += 1 };
  s0 -> s4 [0, 65535] { R7814 += 1, R7722 += 1, R6577 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R7814 += 1, R7721 += 1, R7722 += 1 };
  s1 -> s2 [0, 65535] { R7814 += 1, R7722 += 1 };
  s1 -> s3 [0, 65535] { R7814 += 1, R7722 += 1, R6577 += 1, R6579 += 1, R6580 += 1 };
  s1 -> s4 [0, 65535] { R7814 += 1, R7722 += 1, R6577 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R7814 += 1, R7722 += 1 };
  s2 -> s6 [0, 65535] { R7814 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R7814 += 1, R7722 += 1 };
  s3 -> s3 [0, 65535] { R7814 += 1, R7722 += 1, R6577 += 1, R6579 += 1, R6580 += 1 };
  s3 -> s4 [0, 65535] { R7814 += 1, R7722 += 1, R6577 += 1 };
  s3 -> s6 [0, 65535] { R7814 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R7814 += 1, R7722 += 1 };
  s4 -> s4 [0, 65535] { R7814 += 1, R7722 += 1, R6577 += 1 };
  s4 -> s6 [0, 65535] { R7814 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7814 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 74] { R7816 += 1, R7724 += 1, R7692 += 1, R7694 += 1 };
  s0 -> s0 [0, 65535] { R7815 += 1, R7816 += 1 };
  s0 -> s2 [0, 65535] { R7816 += 1, R7724 += 1, R7692 += 1, R7693 += 1, R7694 += 1 };
  s0 -> s3 [0, 65535] { R7816 += 1, R7723 += 1, R7724 += 1 };
  s0 -> s4 [0, 65535] { R7816 += 1, R7724 += 1, R7691 += 1, R7692 += 1 };
  s0 -> s5 [75, 75] { R7816 += 1, R7724 += 1, R7692 += 1, R7694 += 1 };
  s0 -> s6 [77, 77] { R7816 += 1, R7724 += 1, R7692 += 1, R7694 += 1 };
  s0 -> s1 [78, 65535] { R7816 += 1, R7724 += 1, R7692 += 1, R7694 += 1 };
  s1 -> s1 [0, 74] { R7816 += 1, R7724 += 1, R7692 += 1, R7694 += 1 };
  s1 -> s5 [75, 75] { R7816 += 1, R7724 += 1, R7692 += 1, R7694 += 1 };
  s1 -> s6 [77, 77] { R7816 += 1, R7724 += 1, R7692 += 1, R7694 += 1 };
  s1 -> s1 [78, 65535] { R7816 += 1, R7724 += 1, R7692 += 1, R7694 += 1 };
  s2 -> s1 [0, 74] { R7816 += 1, R7724 += 1, R7692 += 1, R7694 += 1 };
  s2 -> s2 [0, 65535] { R7816 += 1, R7724 += 1, R7692 += 1, R7693 += 1, R7694 += 1 };
  s2 -> s5 [75, 75] { R7816 += 1, R7724 += 1, R7692 += 1, R7694 += 1 };
  s2 -> s6 [77, 77] { R7816 += 1, R7724 += 1, R7692 += 1, R7694 += 1 };
  s2 -> s1 [78, 65535] { R7816 += 1, R7724 += 1, R7692 += 1, R7694 += 1 };
  s3 -> s1 [0, 74] { R7816 += 1, R7724 += 1, R7692 += 1, R7694 += 1 };
  s3 -> s2 [0, 65535] { R7816 += 1, R7724 += 1, R7692 += 1, R7693 += 1, R7694 += 1 };
  s3 -> s3 [0, 65535] { R7816 += 1, R7723 += 1, R7724 += 1 };
  s3 -> s4 [0, 65535] { R7816 += 1, R7724 += 1, R7691 += 1, R7692 += 1 };
  s3 -> s5 [75, 75] { R7816 += 1, R7724 += 1, R7692 += 1, R7694 += 1 };
  s3 -> s6 [77, 77] { R7816 += 1, R7724 += 1, R7692 += 1, R7694 += 1 };
  s3 -> s1 [78, 65535] { R7816 += 1, R7724 += 1, R7692 += 1, R7694 += 1 };
  s4 -> s1 [0, 74] { R7816 += 1, R7724 += 1, R7692 += 1, R7694 += 1 };
  s4 -> s2 [0, 65535] { R7816 += 1, R7724 += 1, R7692 += 1, R7693 += 1, R7694 += 1 };
  s4 -> s4 [0, 65535] { R7816 += 1, R7724 += 1, R7691 += 1, R7692 += 1 };
  s4 -> s5 [75, 75] { R7816 += 1, R7724 += 1, R7692 += 1, R7694 += 1 };
  s4 -> s6 [77, 77] { R7816 += 1, R7724 += 1, R7692 += 1, R7694 += 1 };
  s4 -> s1 [78, 65535] { R7816 += 1, R7724 += 1, R7692 += 1, R7694 += 1 };
  s5 -> s5 [0, 75] { R7816 += 1, R7724 += 1, R7692 += 1, R7694 += 1 };
  s5 -> s11 [77, 77] { R7816 += 1, R7724 += 1, R7692 += 1, R7694 += 1 };
  s5 -> s5 [78, 65535] { R7816 += 1, R7724 += 1, R7692 += 1, R7694 += 1 };
  s6 -> s6 [0, 74] { R7816 += 1, R7724 += 1, R7692 += 1, R7694 += 1 };
  s6 -> s6 [0, 65535] { R7816 += 1, R7724 += 1, R7692 += 1 };
  s6 -> s7 [0, 65535] { R7816 += 1 };
  s6 -> s8 [0, 65535] { R7816 += 1, R7724 += 1 };
  s6 -> s9 [0, 65535];
  s6 -> s10 [75, 75] { R7816 += 1, R7724 += 1, R7692 += 1, R7694 += 1 };
  s6 -> s11 [75, 75] { R7816 += 1, R7724 += 1, R7692 += 1, R7694 += 1 };
  s6 -> s6 [77, 65535] { R7816 += 1, R7724 += 1, R7692 += 1, R7694 += 1 };
  s7 -> s7 [0, 65535] { R7816 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s7 [0, 65535] { R7816 += 1 };
  s8 -> s8 [0, 65535] { R7816 += 1, R7724 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  s10 -> s7 [0, 65535] { R7816 += 1 };
  s10 -> s10 [0, 65535] { R7816 += 1, R7724 += 1, R7692 += 1 };
  s10 -> s8 [0, 65535] { R7816 += 1, R7724 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 75] { R7816 += 1, R7724 += 1, R7692 += 1, R7694 += 1 };
  s11 -> s7 [0, 65535] { R7816 += 1 };
  s11 -> s11 [0, 65535] { R7816 += 1, R7724 += 1, R7692 += 1 };
  s11 -> s8 [0, 65535] { R7816 += 1, R7724 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [77, 65535] { R7816 += 1, R7724 += 1, R7692 += 1, R7694 += 1 };
  accepting s8, s9, s6, s7, s10, s11;
};
automaton value2_40 {
  init s0;
  s0 -> s0 [0, 65535] { R7817 += 1, R7818 += 1 };
  s0 -> s1 [0, 65535] { R7818 += 1, R7754 += 1, R23 += 1 };
  s0 -> s2 [0, 65535] { R7818 += 1, R7753 += 1, R7754 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R7818 += 1 };
  s1 -> s1 [0, 65535] { R7818 += 1, R7754 += 1, R23 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R7818 += 1, R7754 += 1, R23 += 1 };
  s2 -> s2 [0, 65535] { R7818 += 1, R7753 += 1, R7754 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R7818 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R7820 += 1, R7756 += 1 };
  s0 -> s0 [0, 65535] { R7819 += 1, R7820 += 1 };
  s0 -> s2 [0, 65535] { R7820 += 1, R7755 += 1, R7756 += 1 };
  s0 -> s3 [70, 70] { R7820 += 1, R7756 += 1 };
  s0 -> s4 [70, 70] { R7820 += 1, R7756 += 1 };
  s0 -> s5 [75, 75] { R7820 += 1, R7756 += 1 };
  s0 -> s1 [76, 65535] { R7820 += 1, R7756 += 1 };
  s1 -> s1 [0, 69] { R7820 += 1, R7756 += 1 };
  s1 -> s3 [70, 70] { R7820 += 1, R7756 += 1 };
  s1 -> s4 [70, 70] { R7820 += 1, R7756 += 1 };
  s1 -> s5 [75, 75] { R7820 += 1, R7756 += 1 };
  s1 -> s1 [76, 65535] { R7820 += 1, R7756 += 1 };
  s2 -> s1 [0, 69] { R7820 += 1, R7756 += 1 };
  s2 -> s2 [0, 65535] { R7820 += 1, R7755 += 1, R7756 += 1 };
  s2 -> s3 [70, 70] { R7820 += 1, R7756 += 1 };
  s2 -> s4 [70, 70] { R7820 += 1, R7756 += 1 };
  s2 -> s5 [75, 75] { R7820 += 1, R7756 += 1 };
  s2 -> s1 [76, 65535] { R7820 += 1, R7756 += 1 };
  s4 -> s4 [0, 70] { R7820 += 1, R7756 += 1 };
  s4 -> s7 [75, 75] { R7820 += 1, R7756 += 1 };
  s4 -> s4 [76, 65535] { R7820 += 1, R7756 += 1 };
  s5 -> s5 [0, 69] { R7820 += 1, R7756 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R7820 += 1 };
  s5 -> s7 [70, 70] { R7820 += 1, R7756 += 1 };
  s5 -> s8 [70, 70] { R7820 += 1, R7756 += 1 };
  s5 -> s5 [75, 65535] { R7820 += 1, R7756 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R7820 += 1, R7756 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R7820 += 1 };
  s7 -> s7 [75, 65535] { R7820 += 1, R7756 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R7820 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R7822 += 1, R7758 += 1, R137 += 1 };
  s0 -> s0 [0, 65535] { R7821 += 1, R7822 += 1 };
  s0 -> s2 [0, 65535] { R7822 += 1, R7757 += 1, R7758 += 1 };
  s0 -> s3 [70, 70] { R7822 += 1, R7758 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R7822 += 1, R7758 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R7822 += 1, R7758 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R7822 += 1, R7758 += 1, R137 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R7822 += 1 };
  s1 -> s3 [70, 70] { R7822 += 1, R7758 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R7822 += 1, R7758 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R7822 += 1, R7758 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R7822 += 1, R7758 += 1, R137 += 1 };
  s2 -> s2 [0, 65535] { R7822 += 1, R7757 += 1, R7758 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R7822 += 1, R7758 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R7822 += 1, R7758 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R7822 += 1, R7758 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R7822 += 1, R7758 += 1, R137 += 1 };
  s3 -> s6 [0, 65535] { R7822 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R7822 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7822 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R7824 += 1, R7760 += 1, R139 += 1 };
  s0 -> s0 [0, 65535] { R7823 += 1, R7824 += 1 };
  s0 -> s2 [0, 65535] { R7824 += 1, R7759 += 1, R7760 += 1 };
  s0 -> s3 [70, 70] { R7824 += 1, R7760 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R7824 += 1, R7760 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R7824 += 1, R7760 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R7824 += 1, R7760 += 1, R139 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R7824 += 1 };
  s1 -> s3 [70, 70] { R7824 += 1, R7760 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R7824 += 1, R7760 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R7824 += 1, R7760 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R7824 += 1, R7760 += 1, R139 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R7824 += 1, R7759 += 1, R7760 += 1 };
  s2 -> s3 [70, 70] { R7824 += 1, R7760 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R7824 += 1, R7760 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R7824 += 1, R7760 += 1, R139 += 1 };
  s3 -> s3 [0, 65535] { R7824 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R7824 += 1 };
  s4 -> s4 [0, 65535] { R7824 += 1, R7760 += 1, R139 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7824 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R7826 += 1, R7762 += 1, R141 += 1, R142 += 1 };
  s0 -> s2 [0, 65535] { R7826 += 1, R7761 += 1, R7762 += 1 };
  s0 -> s0 [0, 65535] { R7825 += 1, R7826 += 1 };
  s0 -> s3 [70, 70] { R7826 += 1, R7762 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R7826 += 1, R7762 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R7826 += 1, R7762 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R7826 += 1, R7762 += 1, R141 += 1, R142 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R7826 += 1 };
  s1 -> s3 [70, 70] { R7826 += 1, R7762 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R7826 += 1, R7762 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R7826 += 1, R7762 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R7826 += 1, R7762 += 1, R141 += 1, R142 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R7826 += 1, R7761 += 1, R7762 += 1 };
  s2 -> s3 [70, 70] { R7826 += 1, R7762 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R7826 += 1, R7762 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R7826 += 1, R7762 += 1, R141 += 1, R142 += 1 };
  s3 -> s3 [0, 65535] { R7826 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R7826 += 1, R7762 += 1, R141 += 1, R142 += 1 };
  s4 -> s5 [0, 65535] { R7826 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R7826 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R7828 += 1, R7764 += 1, R147 += 1, R148 += 1 };
  s0 -> s2 [0, 65535] { R7828 += 1, R7763 += 1, R7764 += 1 };
  s0 -> s0 [0, 65535] { R7827 += 1, R7828 += 1 };
  s0 -> s3 [70, 70] { R7828 += 1, R7764 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R7828 += 1, R7764 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R7828 += 1, R7764 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R7828 += 1, R7764 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 65535] { R7828 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R7828 += 1, R7764 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R7828 += 1, R7764 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R7828 += 1, R7764 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R7828 += 1, R7764 += 1, R147 += 1, R148 += 1 };
  s2 -> s2 [0, 65535] { R7828 += 1, R7763 += 1, R7764 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R7828 += 1, R7764 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R7828 += 1, R7764 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R7828 += 1, R7764 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R7828 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R7828 += 1 };
  s4 -> s4 [0, 65535] { R7828 += 1, R7764 += 1, R147 += 1, R148 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R7828 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R7830 += 1, R7766 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R7830 += 1, R7766 += 1, R151 += 1, R152 += 1 };
  s0 -> s0 [0, 65535] { R7829 += 1, R7830 += 1 };
  s0 -> s3 [0, 65535] { R7830 += 1, R7765 += 1, R7766 += 1 };
  s0 -> s4 [70, 70] { R7830 += 1, R7766 += 1, R151 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R7830 += 1, R7766 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R7830 += 1, R7766 += 1, R151 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R7830 += 1, R7766 += 1, R152 += 1 };
  s0 -> s1 [71, 74] { R7830 += 1, R7766 += 1, R152 += 1 };
  s0 -> s2 [71, 65535] { R7830 += 1, R7766 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R7830 += 1, R7766 += 1, R152 += 1 };
  s0 -> s1 [76, 65535] { R7830 += 1, R7766 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R7830 += 1, R7766 += 1, R152 += 1 };
  s1 -> s5 [70, 70] { R7830 += 1, R7766 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R7830 += 1, R7766 += 1, R152 += 1 };
  s1 -> s1 [71, 74] { R7830 += 1, R7766 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R7830 += 1, R7766 += 1, R152 += 1 };
  s1 -> s1 [76, 65535] { R7830 += 1, R7766 += 1, R152 += 1 };
  s2 -> s1 [0, 69] { R7830 += 1, R7766 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R7830 += 1, R7766 += 1, R151 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R7830 += 1, R7766 += 1, R151 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R7830 += 1, R7766 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R7830 += 1, R7766 += 1, R151 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R7830 += 1, R7766 += 1, R152 += 1 };
  s2 -> s1 [71, 74] { R7830 += 1, R7766 += 1, R152 += 1 };
  s2 -> s2 [71, 65535] { R7830 += 1, R7766 += 1, R151 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R7830 += 1, R7766 += 1, R152 += 1 };
  s2 -> s1 [76, 65535] { R7830 += 1, R7766 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R7830 += 1, R7766 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R7830 += 1, R7766 += 1, R151 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R7830 += 1, R7765 += 1, R7766 += 1 };
  s3 -> s4 [70, 70] { R7830 += 1, R7766 += 1, R151 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R7830 += 1, R7766 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R7830 += 1, R7766 += 1, R151 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R7830 += 1, R7766 += 1, R152 += 1 };
  s3 -> s1 [71, 74] { R7830 += 1, R7766 += 1, R152 += 1 };
  s3 -> s2 [71, 65535] { R7830 += 1, R7766 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R7830 += 1, R7766 += 1, R152 += 1 };
  s3 -> s1 [76, 65535] { R7830 += 1, R7766 += 1, R152 += 1 };
  s6 -> s7 [0, 74] { R7830 += 1, R7766 += 1, R152 += 1 };
  s6 -> s6 [0, 65535] { R7830 += 1, R7766 += 1, R151 += 1, R152 += 1 };
  s6 -> s10 [75, 75] { R7830 += 1, R7766 += 1, R152 += 1 };
  s6 -> s7 [76, 65535] { R7830 += 1, R7766 += 1, R152 += 1 };
  s7 -> s7 [0, 74] { R7830 += 1, R7766 += 1, R152 += 1 };
  s7 -> s10 [75, 75] { R7830 += 1, R7766 += 1, R152 += 1 };
  s7 -> s7 [76, 65535] { R7830 += 1, R7766 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R7830 += 1, R7766 += 1, R152 += 1 };
  s8 -> s8 [0, 65535] { R7830 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R7830 += 1, R7766 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R7830 += 1, R7766 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R7830 += 1, R7766 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R7830 += 1, R7766 += 1, R152 += 1 };
  s10 -> s12 [0, 65535] { R7830 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R7830 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R7830 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R7832 += 1, R7768 += 1, R155 += 1, R156 += 1 };
  s0 -> s2 [0, 65535] { R7832 += 1, R7767 += 1, R7768 += 1 };
  s0 -> s0 [0, 65535] { R7831 += 1, R7832 += 1 };
  s0 -> s3 [70, 70] { R7832 += 1, R7768 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R7832 += 1, R7768 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R7832 += 1, R7768 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R7832 += 1, R7768 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 65535] { R7832 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R7832 += 1, R7768 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R7832 += 1, R7768 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R7832 += 1, R7768 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R7832 += 1, R7768 += 1, R155 += 1, R156 += 1 };
  s2 -> s2 [0, 65535] { R7832 += 1, R7767 += 1, R7768 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R7832 += 1, R7768 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R7832 += 1, R7768 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R7832 += 1, R7768 += 1, R155 += 1, R156 += 1 };
  s3 -> s3 [0, 65535] { R7832 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R7832 += 1, R7768 += 1, R155 += 1, R156 += 1 };
  s4 -> s6 [0, 65535] { R7832 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7832 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R7834 += 1, R7770 += 1, R161 += 1, R162 += 1 };
  s0 -> s0 [0, 65535] { R7833 += 1, R7834 += 1 };
  s0 -> s2 [0, 65535] { R7834 += 1, R7769 += 1, R7770 += 1 };
  s0 -> s3 [70, 70] { R7834 += 1, R7770 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R7834 += 1, R7770 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R7834 += 1, R7770 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R7834 += 1, R7770 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535] { R7834 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R7834 += 1, R7770 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R7834 += 1, R7770 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R7834 += 1, R7770 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R7834 += 1, R7770 += 1, R161 += 1, R162 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R7834 += 1, R7769 += 1, R7770 += 1 };
  s2 -> s3 [70, 70] { R7834 += 1, R7770 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R7834 += 1, R7770 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R7834 += 1, R7770 += 1, R161 += 1, R162 += 1 };
  s3 -> s3 [0, 65535] { R7834 += 1, R7770 += 1, R161 += 1, R162 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R7834 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R7834 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7834 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R7836 += 1, R7772 += 1, R167 += 1, R168 += 1 };
  s0 -> s2 [0, 65535] { R7836 += 1, R7771 += 1, R7772 += 1 };
  s0 -> s0 [0, 65535] { R7835 += 1, R7836 += 1 };
  s0 -> s3 [70, 70] { R7836 += 1, R7772 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R7836 += 1, R7772 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R7836 += 1, R7772 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R7836 += 1, R7772 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 65535] { R7836 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R7836 += 1, R7772 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R7836 += 1, R7772 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R7836 += 1, R7772 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R7836 += 1, R7772 += 1, R167 += 1, R168 += 1 };
  s2 -> s2 [0, 65535] { R7836 += 1, R7771 += 1, R7772 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R7836 += 1, R7772 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R7836 += 1, R7772 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R7836 += 1, R7772 += 1, R167 += 1, R168 += 1 };
  s3 -> s3 [0, 65535] { R7836 += 1, R7772 += 1, R167 += 1, R168 += 1 };
  s3 -> s6 [0, 65535] { R7836 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R7836 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7836 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R7838 += 1, R7774 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s2 [0, 69] { R7838 += 1, R7774 += 1, R175 += 1, R176 += 1 };
  s0 -> s3 [0, 69] { R7838 += 1, R7774 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s4 [0, 65535] { R7838 += 1, R7773 += 1, R7774 += 1 };
  s0 -> s0 [0, 65535] { R7837 += 1, R7838 += 1 };
  s0 -> s5 [70, 70] { R7838 += 1, R7774 += 1, R175 += 1, R176 += 1 };
  s0 -> s6 [70, 70] { R7838 += 1, R7774 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s7 [70, 70] { R7838 += 1, R7774 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s8 [70, 70] { R7838 += 1, R7774 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s9 [70, 70] { R7838 += 1, R7774 += 1, R175 += 1, R176 += 1 };
  s0 -> s10 [70, 70] { R7838 += 1, R7774 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s1 [71, 65535] { R7838 += 1, R7774 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s2 [71, 65535] { R7838 += 1, R7774 += 1, R175 += 1, R176 += 1 };
  s0 -> s3 [71, 65535] { R7838 += 1, R7774 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s1 [0, 69] { R7838 += 1, R7774 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s14 [0, 69] { R7838 += 1, R7774 += 1, R176 += 1 };
  s1 -> s11 [70, 70] { R7838 += 1, R7774 += 1, R176 += 1 };
  s1 -> s15 [70, 70] { R7838 += 1, R7774 += 1, R176 += 1 };
  s1 -> s7 [70, 70] { R7838 += 1, R7774 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s10 [70, 70] { R7838 += 1, R7774 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s1 [71, 65535] { R7838 += 1, R7774 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s14 [71, 65535] { R7838 += 1, R7774 += 1, R176 += 1 };
  s2 -> s1 [0, 69] { R7838 += 1, R7774 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [0, 69] { R7838 += 1, R7774 += 1, R175 += 1, R176 += 1 };
  s2 -> s3 [0, 69] { R7838 += 1, R7774 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s5 [70, 70] { R7838 += 1, R7774 += 1, R175 += 1, R176 += 1 };
  s2 -> s6 [70, 70] { R7838 += 1, R7774 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s7 [70, 70] { R7838 += 1, R7774 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s8 [70, 70] { R7838 += 1, R7774 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s9 [70, 70] { R7838 += 1, R7774 += 1, R175 += 1, R176 += 1 };
  s2 -> s10 [70, 70] { R7838 += 1, R7774 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s1 [71, 65535] { R7838 += 1, R7774 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [71, 65535] { R7838 += 1, R7774 += 1, R175 += 1, R176 += 1 };
  s2 -> s3 [71, 65535] { R7838 += 1, R7774 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s1 [0, 69] { R7838 += 1, R7774 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [0, 69] { R7838 += 1, R7774 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s6 [70, 70] { R7838 += 1, R7774 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s7 [70, 70] { R7838 += 1, R7774 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s8 [70, 70] { R7838 += 1, R7774 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s10 [70, 70] { R7838 += 1, R7774 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s1 [71, 65535] { R7838 += 1, R7774 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [71, 65535] { R7838 += 1, R7774 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s1 [0, 69] { R7838 += 1, R7774 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s2 [0, 69] { R7838 += 1, R7774 += 1, R175 += 1, R176 += 1 };
  s4 -> s3 [0, 69] { R7838 += 1, R7774 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s4 [0, 65535] { R7838 += 1, R7773 += 1, R7774 += 1 };
  s4 -> s5 [70, 70] { R7838 += 1, R7774 += 1, R175 += 1, R176 += 1 };
  s4 -> s6 [70, 70] { R7838 += 1, R7774 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s7 [70, 70] { R7838 += 1, R7774 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s8 [70, 70] { R7838 += 1, R7774 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s9 [70, 70] { R7838 += 1, R7774 += 1, R175 += 1, R176 += 1 };
  s4 -> s10 [70, 70] { R7838 += 1, R7774 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s1 [71, 65535] { R7838 += 1, R7774 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s2 [71, 65535] { R7838 += 1, R7774 += 1, R175 += 1, R176 += 1 };
  s4 -> s3 [71, 65535] { R7838 += 1, R7774 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s5 -> s5 [0, 65535] { R7838 += 1, R7774 += 1, R175 += 1, R176 += 1 };
  s5 -> s6 [0, 65535] { R7838 += 1, R7774 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s5 -> s7 [0, 65535] { R7838 += 1, R7774 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s6 -> s6 [0, 65535] { R7838 += 1, R7774 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s6 -> s7 [0, 65535] { R7838 += 1, R7774 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s7 -> s11 [0, 65535] { R7838 += 1, R7774 += 1, R176 += 1 };
  s7 -> s7 [0, 65535] { R7838 += 1, R7774 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s11 -> s11 [0, 65535] { R7838 += 1, R7774 += 1, R176 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [0, 65535] { R7838 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R7838 += 1 };
  s14 -> s14 [0, 69] { R7838 += 1, R7774 += 1, R176 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R7838 += 1 };
  s14 -> s11 [70, 70] { R7838 += 1, R7774 += 1, R176 += 1 };
  s14 -> s15 [70, 70] { R7838 += 1, R7774 += 1, R176 += 1 };
  s14 -> s14 [71, 65535] { R7838 += 1, R7774 += 1, R176 += 1 };
  s15 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R7838 += 1 };
  accepting s12, s13, s14, s15, s11;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R7840 += 1, R7776 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s2 [0, 69] { R7840 += 1, R7776 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s3 [0, 69] { R7840 += 1, R7776 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s4 [0, 65535] { R7840 += 1, R7775 += 1, R7776 += 1 };
  s0 -> s0 [0, 65535] { R7839 += 1, R7840 += 1 };
  s0 -> s5 [70, 70] { R7840 += 1, R7776 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s6 [70, 70] { R7840 += 1, R7776 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s7 [70, 70] { R7840 += 1, R7776 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s8 [70, 70] { R7840 += 1, R7776 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s9 [70, 70] { R7840 += 1, R7776 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s10 [70, 70] { R7840 += 1, R7776 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s3 [71, 75] { R7840 += 1, R7776 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s1 [71, 65535] { R7840 += 1, R7776 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s2 [71, 65535] { R7840 += 1, R7776 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s3 [77, 65535] { R7840 += 1, R7776 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s1 [0, 69] { R7840 += 1, R7776 += 1, R6563 += 1, R6564 += 1 };
  s1 -> s2 [0, 69] { R7840 += 1, R7776 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s1 -> s3 [0, 69] { R7840 += 1, R7776 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s5 [70, 70] { R7840 += 1, R7776 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s1 -> s6 [70, 70] { R7840 += 1, R7776 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s1 -> s7 [70, 70] { R7840 += 1, R7776 += 1, R6563 += 1, R6564 += 1 };
  s1 -> s8 [70, 70] { R7840 += 1, R7776 += 1, R6563 += 1, R6564 += 1 };
  s1 -> s9 [70, 70] { R7840 += 1, R7776 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s10 [70, 70] { R7840 += 1, R7776 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s3 [71, 75] { R7840 += 1, R7776 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s1 [71, 65535] { R7840 += 1, R7776 += 1, R6563 += 1, R6564 += 1 };
  s1 -> s2 [71, 65535] { R7840 += 1, R7776 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s1 -> s3 [77, 65535] { R7840 += 1, R7776 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s2 [0, 69] { R7840 += 1, R7776 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s3 [0, 69] { R7840 += 1, R7776 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s5 [70, 70] { R7840 += 1, R7776 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s6 [70, 70] { R7840 += 1, R7776 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s9 [70, 70] { R7840 += 1, R7776 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s10 [70, 70] { R7840 += 1, R7776 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s3 [71, 75] { R7840 += 1, R7776 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s2 [71, 65535] { R7840 += 1, R7776 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s3 [77, 65535] { R7840 += 1, R7776 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s3 [0, 69] { R7840 += 1, R7776 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s11 [0, 65535];
  s3 -> s3 [0, 65535] { R7840 += 1 };
  s3 -> s9 [70, 70] { R7840 += 1, R7776 += 1, R6564 += 1 };
  s3 -> s10 [70, 70] { R7840 += 1, R7776 += 1, R6564 += 1 };
  s3 -> s3 [71, 75] { R7840 += 1, R7776 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s3 [71, 65535] { R7840 += 1, R7776 += 1, R6564 += 1 };
  s3 -> s3 [77, 65535] { R7840 += 1, R7776 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s1 [0, 69] { R7840 += 1, R7776 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s2 [0, 69] { R7840 += 1, R7776 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s3 [0, 69] { R7840 += 1, R7776 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s4 [0, 65535] { R7840 += 1, R7775 += 1, R7776 += 1 };
  s4 -> s5 [70, 70] { R7840 += 1, R7776 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s6 [70, 70] { R7840 += 1, R7776 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s7 [70, 70] { R7840 += 1, R7776 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s8 [70, 70] { R7840 += 1, R7776 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s9 [70, 70] { R7840 += 1, R7776 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s10 [70, 70] { R7840 += 1, R7776 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s3 [71, 75] { R7840 += 1, R7776 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s1 [71, 65535] { R7840 += 1, R7776 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s2 [71, 65535] { R7840 += 1, R7776 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s3 [77, 65535] { R7840 += 1, R7776 += 1, R6564 += 1, R6566 += 1 };
  s6 -> s10 [0, 75] { R7840 += 1, R7776 += 1, R6564 += 1, R6566 += 1 };
  s6 -> s6 [0, 65535] { R7840 += 1, R7776 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s6 -> s10 [77, 65535] { R7840 += 1, R7776 += 1, R6564 += 1, R6566 += 1 };
  s7 -> s10 [0, 75] { R7840 += 1, R7776 += 1, R6564 += 1, R6566 += 1 };
  s7 -> s6 [0, 65535] { R7840 += 1, R7776 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s7 -> s7 [0, 65535] { R7840 += 1, R7776 += 1, R6563 += 1, R6564 += 1 };
  s7 -> s10 [77, 65535] { R7840 += 1, R7776 += 1, R6564 += 1, R6566 += 1 };
  s9 -> s9 [0, 65535] { R7840 += 1 };
  s9 -> s11 [0, 65535];
  s10 -> s10 [0, 75] { R7840 += 1, R7776 += 1, R6564 += 1, R6566 += 1 };
  s10 -> s10 [0, 65535] { R7840 += 1, R7776 += 1, R6564 += 1 };
  s10 -> s11 [0, 65535];
  s10 -> s12 [0, 65535] { R7840 += 1 };
  s10 -> s10 [77, 65535] { R7840 += 1, R7776 += 1, R6564 += 1, R6566 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R7840 += 1 };
  accepting s3, s12, s9, s10, s11;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R7842 += 1, R7778 += 1, R6572 += 1, R6574 += 1, R6575 += 1 };
  s0 -> s2 [0, 69] { R7842 += 1, R7778 += 1, R6571 += 1, R6572 += 1 };
  s0 -> s3 [0, 69] { R7842 += 1, R7778 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s0 -> s4 [0, 65535] { R7842 += 1, R7777 += 1, R7778 += 1 };
  s0 -> s0 [0, 65535] { R7841 += 1, R7842 += 1 };
  s0 -> s5 [70, 70] { R7842 += 1, R7778 += 1, R6571 += 1, R6572 += 1 };
  s0 -> s6 [70, 70] { R7842 += 1, R7778 += 1, R6571 += 1, R6572 += 1 };
  s0 -> s7 [70, 70] { R7842 += 1, R7778 += 1, R6572 += 1, R6574 += 1, R6575 += 1 };
  s0 -> s8 [70, 70] { R7842 += 1, R7778 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s0 -> s9 [70, 70] { R7842 += 1, R7778 += 1, R6572 += 1, R6574 += 1, R6575 += 1 };
  s0 -> s10 [70, 70] { R7842 += 1, R7778 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s0 -> s1 [71, 65535] { R7842 += 1, R7778 += 1, R6572 += 1, R6574 += 1, R6575 += 1 };
  s0 -> s2 [71, 65535] { R7842 += 1, R7778 += 1, R6571 += 1, R6572 += 1 };
  s0 -> s3 [71, 65535] { R7842 += 1, R7778 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s1 -> s1 [0, 69] { R7842 += 1, R7778 += 1, R6572 += 1, R6574 += 1, R6575 += 1 };
  s1 -> s1 [0, 65535] { R7842 += 1 };
  s1 -> s11 [0, 65535];
  s1 -> s7 [70, 70] { R7842 += 1, R7778 += 1, R6572 += 1, R6574 += 1, R6575 += 1 };
  s1 -> s9 [70, 70] { R7842 += 1, R7778 += 1, R6572 += 1, R6574 += 1, R6575 += 1 };
  s1 -> s1 [71, 65535] { R7842 += 1, R7778 += 1, R6572 += 1, R6574 += 1, R6575 += 1 };
  s2 -> s1 [0, 69] { R7842 += 1, R7778 += 1, R6572 += 1, R6574 += 1, R6575 += 1 };
  s2 -> s2 [0, 69] { R7842 += 1, R7778 += 1, R6571 += 1, R6572 += 1 };
  s2 -> s3 [0, 69] { R7842 += 1, R7778 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s2 -> s5 [70, 70] { R7842 += 1, R7778 += 1, R6571 += 1, R6572 += 1 };
  s2 -> s6 [70, 70] { R7842 += 1, R7778 += 1, R6571 += 1, R6572 += 1 };
  s2 -> s7 [70, 70] { R7842 += 1, R7778 += 1, R6572 += 1, R6574 += 1, R6575 += 1 };
  s2 -> s8 [70, 70] { R7842 += 1, R7778 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s2 -> s9 [70, 70] { R7842 += 1, R7778 += 1, R6572 += 1, R6574 += 1, R6575 += 1 };
  s2 -> s10 [70, 70] { R7842 += 1, R7778 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s2 -> s1 [71, 65535] { R7842 += 1, R7778 += 1, R6572 += 1, R6574 += 1, R6575 += 1 };
  s2 -> s2 [71, 65535] { R7842 += 1, R7778 += 1, R6571 += 1, R6572 += 1 };
  s2 -> s3 [71, 65535] { R7842 += 1, R7778 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s3 -> s1 [0, 69] { R7842 += 1, R7778 += 1, R6572 += 1, R6574 += 1, R6575 += 1 };
  s3 -> s3 [0, 69] { R7842 += 1, R7778 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s3 -> s7 [70, 70] { R7842 += 1, R7778 += 1, R6572 += 1, R6574 += 1, R6575 += 1 };
  s3 -> s8 [70, 70] { R7842 += 1, R7778 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s3 -> s9 [70, 70] { R7842 += 1, R7778 += 1, R6572 += 1, R6574 += 1, R6575 += 1 };
  s3 -> s10 [70, 70] { R7842 += 1, R7778 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s3 -> s1 [71, 65535] { R7842 += 1, R7778 += 1, R6572 += 1, R6574 += 1, R6575 += 1 };
  s3 -> s3 [71, 65535] { R7842 += 1, R7778 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s4 -> s1 [0, 69] { R7842 += 1, R7778 += 1, R6572 += 1, R6574 += 1, R6575 += 1 };
  s4 -> s2 [0, 69] { R7842 += 1, R7778 += 1, R6571 += 1, R6572 += 1 };
  s4 -> s3 [0, 69] { R7842 += 1, R7778 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s4 -> s4 [0, 65535] { R7842 += 1, R7777 += 1, R7778 += 1 };
  s4 -> s5 [70, 70] { R7842 += 1, R7778 += 1, R6571 += 1, R6572 += 1 };
  s4 -> s6 [70, 70] { R7842 += 1, R7778 += 1, R6571 += 1, R6572 += 1 };
  s4 -> s7 [70, 70] { R7842 += 1, R7778 += 1, R6572 += 1, R6574 += 1, R6575 += 1 };
  s4 -> s8 [70, 70] { R7842 += 1, R7778 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s4 -> s9 [70, 70] { R7842 += 1, R7778 += 1, R6572 += 1, R6574 += 1, R6575 += 1 };
  s4 -> s10 [70, 70] { R7842 += 1, R7778 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s4 -> s1 [71, 65535] { R7842 += 1, R7778 += 1, R6572 += 1, R6574 += 1, R6575 += 1 };
  s4 -> s2 [71, 65535] { R7842 += 1, R7778 += 1, R6571 += 1, R6572 += 1 };
  s4 -> s3 [71, 65535] { R7842 += 1, R7778 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s5 -> s5 [0, 65535] { R7842 += 1, R7778 += 1, R6571 += 1, R6572 += 1 };
  s5 -> s7 [0, 65535] { R7842 += 1, R7778 += 1, R6572 += 1, R6574 += 1, R6575 += 1 };
  s5 -> s10 [0, 65535] { R7842 += 1, R7778 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s7 -> s7 [0, 65535] { R7842 += 1, R7778 += 1, R6572 += 1, R6574 += 1, R6575 += 1 };
  s7 -> s11 [0, 65535];
  s7 -> s12 [0, 65535] { R7842 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s9 [0, 65535] { R7842 += 1 };
  s10 -> s7 [0, 65535] { R7842 += 1, R7778 += 1, R6572 += 1, R6574 += 1, R6575 += 1 };
  s10 -> s10 [0, 65535] { R7842 += 1, R7778 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R7842 += 1 };
  accepting s12, s9, s1, s7, s11;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R7844 += 1, R7780 += 1, R7687 += 1, R7688 += 1 };
  s0 -> s0 [0, 65535] { R7843 += 1, R7844 += 1 };
  s0 -> s2 [0, 65535] { R7844 += 1, R7779 += 1, R7780 += 1 };
  s0 -> s3 [70, 70] { R7844 += 1, R7780 += 1, R7687 += 1, R7688 += 1 };
  s0 -> s4 [70, 70] { R7844 += 1, R7780 += 1, R7687 += 1, R7688 += 1 };
  s0 -> s1 [71, 65535] { R7844 += 1, R7780 += 1, R7687 += 1, R7688 += 1 };
  s1 -> s1 [0, 69] { R7844 += 1, R7780 += 1, R7687 += 1, R7688 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R7844 += 1 };
  s1 -> s3 [70, 70] { R7844 += 1, R7780 += 1, R7687 += 1, R7688 += 1 };
  s1 -> s4 [70, 70] { R7844 += 1, R7780 += 1, R7687 += 1, R7688 += 1 };
  s1 -> s1 [71, 65535] { R7844 += 1, R7780 += 1, R7687 += 1, R7688 += 1 };
  s2 -> s1 [0, 69] { R7844 += 1, R7780 += 1, R7687 += 1, R7688 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R7844 += 1, R7779 += 1, R7780 += 1 };
  s2 -> s3 [70, 70] { R7844 += 1, R7780 += 1, R7687 += 1, R7688 += 1 };
  s2 -> s4 [70, 70] { R7844 += 1, R7780 += 1, R7687 += 1, R7688 += 1 };
  s2 -> s1 [71, 65535] { R7844 += 1, R7780 += 1, R7687 += 1, R7688 += 1 };
  s3 -> s6 [0, 65535] { R7844 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R7844 += 1, R7780 += 1, R7687 += 1, R7688 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R7844 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7844 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R7724 && R3 = R7844 && R25 - R7844 = -1 && R26 = R7844 && R27 - R7844 = -1 && R28 = R7844 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R7692 + -1*R7688 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R7692 + -1*R7688 - R130 = 0 && R129 + R7691 + R7687 = 0 && R131 + R7693 + R7689 = 0 && R132 + R7694 + R7690 = 0 && R7723 = 0 && R7755 = 0 && R7756 = 0 && R7765 = 0 && R7766 = 0 && R7773 = 0 && R7774 = 0 && R7775 = 0 && R7776 = 0 && R7777 = 0 && R7778 = 0 && R7781 = 0 && R7782 = R7844 && R7783 = 0 && R7784 = R7844 && R7785 = 0 && R7786 = R7844 && R7787 = 0 && R7788 = R7844 && R7789 = 0 && R7790 = R7844 && R7791 = 0 && R7792 = R7844 && R7793 = 0 && R7794 = R7844 && R7795 = 0 && R7796 = R7844 && R7797 = 0 && R7798 = R7844 && R7799 = 0 && R7800 = R7844 && R7801 = 0 && R7802 = R7844 && R7803 = 0 && R7804 = R7844 && R7805 = 0 && R7806 = R7844 && R7807 = 0 && R7808 = R7844 && R7809 = 0 && R7810 = R7844 && R7811 = 0 && R7812 = R7844 && R7813 = 0 && R7814 = R7844 && R7815 = 0 && R7816 = R7844 && R7817 = 0 && R7818 = R7844 && R7819 = 0 && R7820 = R7844 && R7821 = 0 && R7822 = R7844 && R7823 = 0 && R7824 = R7844 && R7825 = 0 && R7826 = R7844 && R7827 = 0 && R7828 = R7844 && R7829 = 0 && R7830 = R7844 && R7831 = 0 && R7832 = R7844 && R7833 = 0 && R7834 = R7844 && R7835 = 0 && R7836 = R7844 && R7837 = 0 && R7838 = R7844 && R7839 = 0 && R7840 = R7844 && R7841 = 0 && R7842 = R7844 && R7843 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R7692 + -1*R7688 - R130 < 1 && -1 < R7724 && 0 < R7844 && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R7692 + -1*R7688 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R6569 + R6565 = 0 && R114 + R6570 + R6566 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R7692 + -1*R7688 - R130 = 0 || R130 + R7692 + R7688 < 1) && (R81 + R158 + R155 = 0 || R130 + R7692 + R7688 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R7692 + -1*R7688 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R7692 + R7688 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R7692 + -1*R7688 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R7692 + R7688 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R7692 + -1*R7688 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R7692 + R7688 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R6567 + R6563 != 0 || R112 + R6568 + R6564 + -1*R7692 + -1*R7688 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R7692 + R7688 = 0)) && (R113 + R6569 + R6565 != 0 || R83 + R160 + R157 + -1*R6570 + -1*R6566 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R6576 + R6571 != 0 || R120 + R6577 + R6572 + -1*R7692 + -1*R7688 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R7692 + R7688 = 0)) && (R7695 != 0 || R7696 = R7724 || (R22 = 0 && R7724 = 0)) && (R7697 != 0 || R7698 = R7724 || (R22 = 0 && R7724 = 0)) && (R7699 != 0 || R7700 = R7724 || (R22 = 0 && R7724 = 0)) && (R7701 != 0 || R7702 = R7724 || (R22 = 0 && R7724 = 0)) && (R7703 != 0 || R7704 = R7724 || (R22 = 0 && R7724 = 0)) && (R7705 != 0 || R7706 = R7724 || (R22 = 0 && R7724 = 0)) && (R7707 != 0 || R7708 = R7724 || (R22 = 0 && R7724 = 0)) && (R7709 != 0 || R7710 = R7724 || (R22 = 0 && R7724 = 0)) && (R7711 != 0 || R7712 = R7724 || (R22 = 0 && R7724 = 0)) && (R7713 != 0 || R7714 = R7724 || (R22 = 0 && R7724 = 0)) && (R7715 != 0 || R7716 = R7724 || (R22 = 0 && R7724 = 0)) && (R7717 != 0 || R7718 = R7724 || (R22 = 0 && R7724 = 0)) && (R7719 != 0 || R7720 = R7724 || (R22 = 0 && R7724 = 0)) && (R7721 != 0 || R7722 = R7724 || (R22 = 0 && R7724 = 0)) && (R23 = 0 || (R7753 = 0 && R7754 = 0)) && (R23 = 0 || (R7757 = 0 && R7758 = 0)) && (R23 = 0 || (R7759 = 0 && R7760 = 0)) && (R23 = 0 || (R7761 = 0 && R7762 = 0)) && (R23 = 0 || (R7763 = 0 && R7764 = 0)) && (R23 = 0 || (R7767 = 0 && R7768 = 0)) && (R23 = 0 || (R7769 = 0 && R7770 = 0)) && (R23 = 0 || (R7771 = 0 && R7772 = 0)) && (R23 = 0 || (R7779 = 0 && R7780 = 0)) && (R24 = 0 || (R7725 = 0 && R7726 = 0)) && (R24 = 0 || (R7727 = 0 && R7728 = 0)) && (R24 = 0 || (R7729 = 0 && R7730 = 0)) && (R24 = 0 || (R7731 = 0 && R7732 = 0)) && (R24 = 0 || (R7733 = 0 && R7734 = 0)) && (R24 = 0 || (R7735 = 0 && R7736 = 0)) && (R24 = 0 || (R7737 = 0 && R7738 = 0)) && (R24 = 0 || (R7739 = 0 && R7740 = 0)) && (R24 = 0 || (R7741 = 0 && R7742 = 0)) && (R24 = 0 || (R7743 = 0 && R7744 = 0)) && (R24 = 0 || (R7745 = 0 && R7746 = 0)) && (R24 = 0 || (R7747 = 0 && R7748 = 0)) && (R24 = 0 || (R7749 = 0 && R7750 = 0)) && (R24 = 0 || (R7751 = 0 && R7752 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R7692 + R7688 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R7692 + R7688 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R7692 + R7688 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R6567 + R6563 = 0 || (R83 + R160 + R157 = 0 && R130 + R7692 + R7688 = 0)) && (R113 + R6569 + R6565 = 0 || R83 + R160 + R157 < 1) && (R119 + R6576 + R6571 = 0 || (R83 + R160 + R157 = 0 && R130 + R7692 + R7688 = 0)) && (R123 + R6580 + R6575 = 0 || (R121 + R6578 + R6573 = 0 && R122 + R6579 + R6574 = 0)) && (R7695 = 0 || (R22 = 0 && R7724 = 0)) && (R7697 = 0 || (R22 = 0 && R7724 = 0)) && (R7699 = 0 || (R22 = 0 && R7724 = 0)) && (R7701 = 0 || (R22 = 0 && R7724 = 0)) && (R7703 = 0 || (R22 = 0 && R7724 = 0)) && (R7705 = 0 || (R22 = 0 && R7724 = 0)) && (R7707 = 0 || (R22 = 0 && R7724 = 0)) && (R7709 = 0 || (R22 = 0 && R7724 = 0)) && (R7711 = 0 || (R22 = 0 && R7724 = 0)) && (R7713 = 0 || (R22 = 0 && R7724 = 0)) && (R7715 = 0 || (R22 = 0 && R7724 = 0)) && (R7717 = 0 || (R22 = 0 && R7724 = 0)) && (R7719 = 0 || (R22 = 0 && R7724 = 0)) && (R7721 = 0 || (R22 = 0 && R7724 = 0));
// End of Parikh automata intersection problem
