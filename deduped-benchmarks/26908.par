// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R1467, R1468, R1469, R147, R1470, R1471, R1472, R1473, R1474, R1475, R1476, R1477, R1478, R1479, R148, R1480, R1481, R1482, R1483, R1484, R1485, R1486, R1487, R1488, R1489, R149, R1490, R1491, R1492, R1493, R1494, R1495, R1496, R1497, R1498, R1499, R15, R150, R1500, R1501, R1502, R1503, R1504, R1505, R1506, R1507, R1508, R1509, R151, R1510, R1511, R1512, R1513, R1514, R1515, R1516, R1517, R1518, R1519, R152, R1520, R1521, R1522, R1523, R1524, R1525, R1526, R1527, R1528, R1529, R153, R1530, R1531, R1532, R1533, R1534, R1535, R1536, R1537, R1538, R1539, R154, R1540, R1541, R1542, R1543, R1544, R1545, R1546, R1547, R1548, R1549, R155, R1550, R1551, R1552, R1553, R1554, R1555, R1556, R1557, R1558, R1559, R156, R1560, R1561, R1562, R1563, R1564, R1565, R1566, R1567, R1568, R1569, R157, R1570, R1571, R1572, R1573, R1574, R1575, R1576, R1577, R1578, R1579, R158, R1580, R1581, R1582, R1583, R1584, R1585, R1586, R1587, R1588, R1589, R159, R1590, R1591, R1592, R1593, R1594, R1595, R1596, R1597, R1598, R1599, R16, R160, R1600, R1601, R1602, R1603, R1604, R1605, R1606, R1607, R1608, R1609, R161, R1610, R1611, R1612, R1613, R1614, R1615, R1616, R1617, R1618, R1619, R162, R1620, R1621, R1622, R1623, R1624, R1625, R1626, R1627, R1628, R1629, R163, R1630, R1631, R1632, R1633, R1634, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R2, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R5, R63, R65, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R30 += 1 };
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R1515 += 1, R1516 += 1 };
  s0 -> s1 [0, 65535] { R1516 += 1, R24 += 1 };
  s1 -> s1 [0, 65535] { R1516 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R1518 += 1 };
  s0 -> s0 [0, 65535] { R1517 += 1, R1518 += 1 };
  s0 -> s2 [70, 70] { R1518 += 1 };
  s0 -> s3 [70, 70] { R1518 += 1 };
  s0 -> s1 [76, 65535] { R1518 += 1 };
  s1 -> s1 [0, 69] { R1518 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1518 += 1 };
  s1 -> s3 [70, 70] { R1518 += 1 };
  s1 -> s1 [76, 65535] { R1518 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R1518 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R1518 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R1520 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R1519 += 1, R1520 += 1 };
  s0 -> s2 [70, 70] { R1520 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R1520 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R1520 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R1520 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1520 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R1520 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R1520 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1520 += 1, R63 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R1522 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R1521 += 1, R1522 += 1 };
  s0 -> s2 [70, 70] { R1522 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R1522 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R1522 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R1522 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1522 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R1522 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R1522 += 1, R65 += 1 };
  s2 -> s2 [0, 65535] { R1522 += 1, R65 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R1524 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R1523 += 1, R1524 += 1 };
  s0 -> s2 [70, 70] { R1524 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R1524 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R1524 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R1524 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1524 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R1524 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R1524 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535] { R1524 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R1526 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R1525 += 1, R1526 += 1 };
  s0 -> s2 [70, 70] { R1526 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R1526 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R1526 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R1526 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1526 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R1526 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R1526 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R1526 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R1528 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R1527 += 1, R1528 += 1 };
  s0 -> s2 [70, 70] { R1528 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R1528 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R1528 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R1528 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1528 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R1528 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R1528 += 1, R77 += 1, R78 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1528 += 1, R77 += 1, R78 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R1530 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R1529 += 1, R1530 += 1 };
  s0 -> s2 [70, 70] { R1530 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R1530 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R1530 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R1530 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1530 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R1530 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R1530 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535] { R1530 += 1, R81 += 1, R82 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R1532 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R1531 += 1, R1532 += 1 };
  s0 -> s2 [70, 70] { R1532 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R1532 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R1532 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R1532 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1532 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R1532 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R1532 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1532 += 1, R87 += 1, R88 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R1534 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R1533 += 1, R1534 += 1 };
  s0 -> s2 [70, 70] { R1534 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R1534 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R1534 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R1534 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1534 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R1534 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R1534 += 1, R93 += 1, R94 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1534 += 1, R93 += 1, R94 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R1536 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R1535 += 1, R1536 += 1 };
  s0 -> s2 [70, 70] { R1536 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R1536 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R1536 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R1536 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1536 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R1536 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R1536 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1536 += 1, R101 += 1, R102 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R1538 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R1537 += 1, R1538 += 1 };
  s0 -> s2 [70, 70] { R1538 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R1538 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R1538 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R1538 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1538 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R1538 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R1538 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R1538 += 1, R111 += 1, R112 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R1540 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R1539 += 1, R1540 += 1 };
  s0 -> s2 [70, 70] { R1540 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R1540 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R1540 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R1540 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1540 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R1540 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R1540 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535] { R1540 += 1, R119 += 1, R120 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R1542 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R1541 += 1, R1542 += 1 };
  s0 -> s2 [70, 70] { R1542 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R1542 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R1542 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R1542 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R1542 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R1542 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R1542 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1542 += 1, R129 += 1, R130 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R1572 += 1 };
  s0 -> s0 [0, 65535] { R1571 += 1, R1572 += 1 };
  s0 -> s2 [70, 70] { R1572 += 1 };
  s0 -> s1 [71, 65535] { R1572 += 1 };
  s1 -> s1 [0, 69] { R1572 += 1 };
  s1 -> s2 [70, 70] { R1572 += 1 };
  s1 -> s1 [71, 65535] { R1572 += 1 };
  s2 -> s2 [0, 65535] { R1572 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R1574 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R1573 += 1, R1574 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R1574 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R1576 += 1 };
  s0 -> s2 [0, 65535] { R1576 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R1575 += 1, R1576 += 1 };
  s0 -> s3 [70, 70] { R1576 += 1 };
  s0 -> s1 [71, 65535] { R1576 += 1 };
  s1 -> s1 [0, 69] { R1576 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R1576 += 1 };
  s1 -> s1 [71, 65535] { R1576 += 1 };
  s2 -> s1 [0, 69] { R1576 += 1 };
  s2 -> s2 [0, 65535] { R1576 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R1576 += 1 };
  s2 -> s1 [71, 65535] { R1576 += 1 };
  s3 -> s3 [0, 65535] { R1576 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R1578 += 1, R1486 += 1 };
  s0 -> s2 [0, 65535] { R1578 += 1, R1485 += 1, R1486 += 1 };
  s0 -> s0 [0, 65535] { R1577 += 1, R1578 += 1 };
  s0 -> s1 [71, 65535] { R1578 += 1, R1486 += 1 };
  s1 -> s1 [0, 69] { R1578 += 1, R1486 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R1578 += 1 };
  s1 -> s1 [71, 65535] { R1578 += 1, R1486 += 1 };
  s2 -> s1 [0, 69] { R1578 += 1, R1486 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1578 += 1, R1485 += 1, R1486 += 1 };
  s2 -> s1 [71, 65535] { R1578 += 1, R1486 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R1579 += 1, R1580 += 1 };
  s0 -> s1 [0, 65535] { R1580 += 1, R1487 += 1, R1488 += 1 };
  s0 -> s2 [0, 65535] { R1580 += 1, R1488 += 1, R22 += 1 };
  s1 -> s1 [0, 65535] { R1580 += 1, R1487 += 1, R1488 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R1580 += 1, R1488 += 1, R22 += 1 };
  s2 -> s3 [0, 65535] { R1580 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1580 += 1, R1488 += 1, R22 += 1 };
  s3 -> s3 [0, 65535] { R1580 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R1582 += 1, R1490 += 1 };
  s0 -> s2 [0, 65535] { R1582 += 1, R1489 += 1, R1490 += 1 };
  s0 -> s0 [0, 65535] { R1581 += 1, R1582 += 1 };
  s0 -> s1 [75, 65535] { R1582 += 1, R1490 += 1 };
  s1 -> s1 [0, 70] { R1582 += 1, R1490 += 1 };
  s1 -> s1 [0, 65535] { R1582 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R1582 += 1, R1490 += 1 };
  s2 -> s1 [0, 70] { R1582 += 1, R1490 += 1 };
  s2 -> s2 [0, 65535] { R1582 += 1, R1489 += 1, R1490 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R1582 += 1, R1490 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R1584 += 1, R1492 += 1, R138 += 1 };
  s0 -> s0 [0, 65535] { R1583 += 1, R1584 += 1 };
  s0 -> s2 [0, 65535] { R1584 += 1, R1491 += 1, R1492 += 1 };
  s1 -> s4 [0, 65535] { R1584 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R1584 += 1, R1492 += 1, R138 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R1584 += 1, R1492 += 1, R138 += 1 };
  s2 -> s2 [0, 65535] { R1584 += 1, R1491 += 1, R1492 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1584 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R1586 += 1, R1494 += 1 };
  s0 -> s2 [0, 65535] { R1586 += 1, R1494 += 1, R140 += 1 };
  s0 -> s0 [0, 65535] { R1585 += 1, R1586 += 1 };
  s0 -> s3 [0, 65535] { R1586 += 1, R1493 += 1, R1494 += 1 };
  s0 -> s1 [76, 65535] { R1586 += 1, R1494 += 1 };
  s1 -> s1 [0, 74] { R1586 += 1, R1494 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R1586 += 1 };
  s1 -> s1 [76, 65535] { R1586 += 1, R1494 += 1 };
  s2 -> s1 [0, 74] { R1586 += 1, R1494 += 1 };
  s2 -> s2 [0, 65535] { R1586 += 1, R1494 += 1, R140 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R1586 += 1 };
  s2 -> s1 [76, 65535] { R1586 += 1, R1494 += 1 };
  s3 -> s1 [0, 74] { R1586 += 1, R1494 += 1 };
  s3 -> s2 [0, 65535] { R1586 += 1, R1494 += 1, R140 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1586 += 1, R1493 += 1, R1494 += 1 };
  s3 -> s1 [76, 65535] { R1586 += 1, R1494 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1586 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R1588 += 1, R1495 += 1, R1496 += 1 };
  s0 -> s2 [0, 65535] { R1588 += 1, R1496 += 1, R145 += 1, R146 += 1 };
  s0 -> s3 [0, 65535] { R1588 += 1, R1496 += 1, R144 += 1, R145 += 1 };
  s0 -> s0 [0, 65535] { R1587 += 1, R1588 += 1 };
  s1 -> s1 [0, 65535] { R1588 += 1, R1495 += 1, R1496 += 1 };
  s1 -> s2 [0, 65535] { R1588 += 1, R1496 += 1, R145 += 1, R146 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R1588 += 1, R1496 += 1, R144 += 1, R145 += 1 };
  s2 -> s4 [0, 65535] { R1588 += 1 };
  s2 -> s6 [0, 65535] { R1588 += 1, R1496 += 1 };
  s2 -> s2 [0, 65535] { R1588 += 1, R1496 += 1, R145 += 1, R146 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R1588 += 1 };
  s3 -> s2 [0, 65535] { R1588 += 1, R1496 += 1, R145 += 1, R146 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1588 += 1, R1496 += 1, R144 += 1, R145 += 1 };
  s4 -> s4 [0, 65535] { R1588 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R1588 += 1 };
  s6 -> s6 [0, 65535] { R1588 += 1, R1496 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R1590 += 1, R1498 += 1, R150 += 1 };
  s0 -> s0 [0, 65535] { R1589 += 1, R1590 += 1 };
  s0 -> s2 [0, 65535] { R1590 += 1, R1498 += 1, R149 += 1, R150 += 1 };
  s0 -> s3 [0, 65535] { R1590 += 1, R1497 += 1, R1498 += 1 };
  s0 -> s4 [75, 75] { R1590 += 1, R1498 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R1590 += 1, R1498 += 1, R150 += 1 };
  s0 -> s1 [78, 65535] { R1590 += 1, R1498 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R1590 += 1, R1498 += 1, R150 += 1 };
  s1 -> s1 [0, 65535] { R1590 += 1, R1498 += 1 };
  s1 -> s6 [0, 65535] { R1590 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [75, 75] { R1590 += 1, R1498 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R1590 += 1, R1498 += 1, R150 += 1 };
  s1 -> s1 [78, 65535] { R1590 += 1, R1498 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R1590 += 1, R1498 += 1, R150 += 1 };
  s2 -> s2 [0, 65535] { R1590 += 1, R1498 += 1, R149 += 1, R150 += 1 };
  s2 -> s6 [0, 65535] { R1590 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [75, 75] { R1590 += 1, R1498 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R1590 += 1, R1498 += 1, R150 += 1 };
  s2 -> s1 [78, 65535] { R1590 += 1, R1498 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R1590 += 1, R1498 += 1, R150 += 1 };
  s3 -> s2 [0, 65535] { R1590 += 1, R1498 += 1, R149 += 1, R150 += 1 };
  s3 -> s3 [0, 65535] { R1590 += 1, R1497 += 1, R1498 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [75, 75] { R1590 += 1, R1498 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R1590 += 1, R1498 += 1, R150 += 1 };
  s3 -> s1 [78, 65535] { R1590 += 1, R1498 += 1, R150 += 1 };
  s4 -> s4 [0, 75] { R1590 += 1, R1498 += 1, R150 += 1 };
  s4 -> s6 [0, 65535] { R1590 += 1 };
  s4 -> s4 [0, 65535] { R1590 += 1, R1498 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [78, 65535] { R1590 += 1, R1498 += 1, R150 += 1 };
  s5 -> s6 [0, 65535] { R1590 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R1590 += 1, R1498 += 1 };
  s6 -> s6 [0, 65535] { R1590 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R1592 += 1, R1500 += 1, R154 += 1 };
  s0 -> s0 [0, 65535] { R1591 += 1, R1592 += 1 };
  s0 -> s2 [0, 65535] { R1592 += 1, R1500 += 1 };
  s0 -> s3 [0, 65535] { R1592 += 1, R1499 += 1, R1500 += 1 };
  s1 -> s1 [0, 65535] { R1592 += 1, R1500 += 1, R154 += 1 };
  s1 -> s5 [0, 65535] { R1592 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R1592 += 1, R1500 += 1 };
  s2 -> s5 [0, 65535] { R1592 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1592 += 1, R1500 += 1 };
  s3 -> s1 [0, 65535] { R1592 += 1, R1500 += 1, R154 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R1592 += 1, R1500 += 1 };
  s3 -> s3 [0, 65535] { R1592 += 1, R1499 += 1, R1500 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1592 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s0 [0, 65535] { R1593 += 1, R1594 += 1 };
  s0 -> s1 [0, 65535] { R1594 += 1, R1502 += 1, R158 += 1, R159 += 1 };
  s0 -> s2 [0, 65535] { R1594 += 1, R1502 += 1, R159 += 1, R160 += 1 };
  s0 -> s3 [0, 65535] { R1594 += 1, R1501 += 1, R1502 += 1 };
  s1 -> s1 [0, 65535] { R1594 += 1, R1502 += 1, R158 += 1, R159 += 1 };
  s1 -> s2 [0, 65535] { R1594 += 1, R1502 += 1, R159 += 1, R160 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R1594 += 1 };
  s2 -> s2 [0, 65535] { R1594 += 1, R1502 += 1, R159 += 1, R160 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R1594 += 1 };
  s2 -> s6 [0, 65535] { R1594 += 1, R1502 += 1 };
  s3 -> s1 [0, 65535] { R1594 += 1, R1502 += 1, R158 += 1, R159 += 1 };
  s3 -> s2 [0, 65535] { R1594 += 1, R1502 += 1, R159 += 1, R160 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1594 += 1, R1501 += 1, R1502 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1594 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R1594 += 1 };
  s6 -> s6 [0, 65535] { R1594 += 1, R1502 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R1596 += 1, R1504 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R1596 += 1, R1504 += 1, R164 += 1, R165 += 1 };
  s0 -> s3 [0, 65535] { R1596 += 1, R1504 += 1, R165 += 1, R166 += 1 };
  s0 -> s4 [0, 65535] { R1596 += 1, R1503 += 1, R1504 += 1 };
  s0 -> s0 [0, 65535] { R1595 += 1, R1596 += 1 };
  s0 -> s1 [76, 65535] { R1596 += 1, R1504 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R1596 += 1, R1504 += 1, R165 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R1596 += 1 };
  s1 -> s1 [0, 65535] { R1596 += 1, R1504 += 1 };
  s1 -> s1 [76, 65535] { R1596 += 1, R1504 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R1596 += 1, R1504 += 1, R165 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R1596 += 1 };
  s2 -> s2 [0, 65535] { R1596 += 1, R1504 += 1, R164 += 1, R165 += 1 };
  s2 -> s3 [0, 65535] { R1596 += 1, R1504 += 1, R165 += 1, R166 += 1 };
  s2 -> s1 [76, 65535] { R1596 += 1, R1504 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R1596 += 1, R1504 += 1, R165 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R1596 += 1 };
  s3 -> s3 [0, 65535] { R1596 += 1, R1504 += 1, R165 += 1, R166 += 1 };
  s3 -> s7 [0, 65535] { R1596 += 1, R1504 += 1 };
  s3 -> s1 [76, 65535] { R1596 += 1, R1504 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R1596 += 1, R1504 += 1, R165 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R1596 += 1, R1504 += 1, R164 += 1, R165 += 1 };
  s4 -> s3 [0, 65535] { R1596 += 1, R1504 += 1, R165 += 1, R166 += 1 };
  s4 -> s4 [0, 65535] { R1596 += 1, R1503 += 1, R1504 += 1 };
  s4 -> s1 [76, 65535] { R1596 += 1, R1504 += 1, R165 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1596 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R1596 += 1 };
  s7 -> s7 [0, 65535] { R1596 += 1, R1504 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R1598 += 1, R1506 += 1, R172 += 1, R174 += 1 };
  s0 -> s0 [0, 65535] { R1597 += 1, R1598 += 1 };
  s0 -> s2 [0, 65535] { R1598 += 1, R1506 += 1, R171 += 1, R172 += 1 };
  s0 -> s3 [0, 65535] { R1598 += 1, R1505 += 1, R1506 += 1 };
  s0 -> s4 [0, 65535] { R1598 += 1, R1506 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s1 [76, 65535] { R1598 += 1, R1506 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R1598 += 1, R1506 += 1, R172 += 1, R174 += 1 };
  s1 -> s5 [0, 65535] { R1598 += 1, R1506 += 1 };
  s1 -> s6 [0, 65535] { R1598 += 1 };
  s1 -> s1 [0, 65535] { R1598 += 1, R1506 += 1, R172 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [76, 65535] { R1598 += 1, R1506 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R1598 += 1, R1506 += 1, R172 += 1, R174 += 1 };
  s2 -> s2 [0, 65535] { R1598 += 1, R1506 += 1, R171 += 1, R172 += 1 };
  s2 -> s6 [0, 65535] { R1598 += 1 };
  s2 -> s4 [0, 65535] { R1598 += 1, R1506 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s1 [76, 65535] { R1598 += 1, R1506 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R1598 += 1, R1506 += 1, R172 += 1, R174 += 1 };
  s3 -> s2 [0, 65535] { R1598 += 1, R1506 += 1, R171 += 1, R172 += 1 };
  s3 -> s3 [0, 65535] { R1598 += 1, R1505 += 1, R1506 += 1 };
  s3 -> s4 [0, 65535] { R1598 += 1, R1506 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s1 [76, 65535] { R1598 += 1, R1506 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R1598 += 1, R1506 += 1, R172 += 1, R174 += 1 };
  s4 -> s5 [0, 65535] { R1598 += 1, R1506 += 1 };
  s4 -> s6 [0, 65535] { R1598 += 1 };
  s4 -> s4 [0, 65535] { R1598 += 1, R1506 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s1 [76, 65535] { R1598 += 1, R1506 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535] { R1598 += 1, R1506 += 1 };
  s5 -> s6 [0, 65535] { R1598 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R1598 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s0 [0, 65535] { R1599 += 1, R1600 += 1 };
  s0 -> s1 [0, 65535] { R1600 += 1, R1508 += 1 };
  s0 -> s2 [0, 65535] { R1600 += 1, R1508 += 1, R181 += 1 };
  s0 -> s3 [0, 65535] { R1600 += 1, R1507 += 1, R1508 += 1 };
  s1 -> s1 [0, 65535] { R1600 += 1, R1508 += 1 };
  s1 -> s5 [0, 65535] { R1600 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R1600 += 1, R1508 += 1 };
  s2 -> s2 [0, 65535] { R1600 += 1, R1508 += 1, R181 += 1 };
  s2 -> s5 [0, 65535] { R1600 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R1600 += 1, R1508 += 1 };
  s3 -> s2 [0, 65535] { R1600 += 1, R1508 += 1, R181 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1600 += 1, R1507 += 1, R1508 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1600 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R1602 += 1, R1510 += 1, R190 += 1, R192 += 1 };
  s0 -> s2 [0, 65535] { R1602 += 1, R1509 += 1, R1510 += 1 };
  s0 -> s3 [0, 65535] { R1602 += 1, R1510 += 1, R189 += 1, R190 += 1 };
  s0 -> s4 [0, 65535] { R1602 += 1, R1510 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s0 -> s0 [0, 65535] { R1601 += 1, R1602 += 1 };
  s0 -> s1 [77, 65535] { R1602 += 1, R1510 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 75] { R1602 += 1, R1510 += 1, R190 += 1, R192 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R1602 += 1, R1510 += 1 };
  s1 -> s1 [0, 65535] { R1602 += 1, R1510 += 1, R190 += 1 };
  s1 -> s7 [0, 65535] { R1602 += 1 };
  s1 -> s1 [77, 65535] { R1602 += 1, R1510 += 1, R190 += 1, R192 += 1 };
  s2 -> s1 [0, 75] { R1602 += 1, R1510 += 1, R190 += 1, R192 += 1 };
  s2 -> s2 [0, 65535] { R1602 += 1, R1509 += 1, R1510 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R1602 += 1, R1510 += 1, R189 += 1, R190 += 1 };
  s2 -> s4 [0, 65535] { R1602 += 1, R1510 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s2 -> s1 [77, 65535] { R1602 += 1, R1510 += 1, R190 += 1, R192 += 1 };
  s3 -> s1 [0, 75] { R1602 += 1, R1510 += 1, R190 += 1, R192 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1602 += 1, R1510 += 1, R189 += 1, R190 += 1 };
  s3 -> s7 [0, 65535] { R1602 += 1 };
  s3 -> s4 [0, 65535] { R1602 += 1, R1510 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s3 -> s1 [77, 65535] { R1602 += 1, R1510 += 1, R190 += 1, R192 += 1 };
  s4 -> s1 [0, 75] { R1602 += 1, R1510 += 1, R190 += 1, R192 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1602 += 1, R1510 += 1 };
  s4 -> s7 [0, 65535] { R1602 += 1 };
  s4 -> s4 [0, 65535] { R1602 += 1, R1510 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s4 -> s1 [77, 65535] { R1602 += 1, R1510 += 1, R190 += 1, R192 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1602 += 1, R1510 += 1 };
  s6 -> s7 [0, 65535] { R1602 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R1602 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R1604 += 1, R1511 += 1, R1512 += 1 };
  s0 -> s2 [0, 65535] { R1604 += 1, R1512 += 1 };
  s0 -> s3 [0, 65535] { R1604 += 1, R1512 += 1, R1473 += 1 };
  s0 -> s0 [0, 65535] { R1603 += 1, R1604 += 1 };
  s1 -> s1 [0, 65535] { R1604 += 1, R1511 += 1, R1512 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R1604 += 1, R1512 += 1 };
  s1 -> s3 [0, 65535] { R1604 += 1, R1512 += 1, R1473 += 1 };
  s2 -> s4 [0, 65535] { R1604 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1604 += 1, R1512 += 1 };
  s3 -> s4 [0, 65535] { R1604 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R1604 += 1, R1512 += 1 };
  s3 -> s3 [0, 65535] { R1604 += 1, R1512 += 1, R1473 += 1 };
  s4 -> s4 [0, 65535] { R1604 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 74] { R1606 += 1, R1514 += 1, R1482 += 1, R1484 += 1 };
  s0 -> s1 [0, 65535] { R1606 += 1, R1514 += 1, R1482 += 1 };
  s0 -> s0 [0, 65535] { R1605 += 1, R1606 += 1 };
  s0 -> s2 [0, 65535] { R1606 += 1, R1514 += 1 };
  s0 -> s3 [0, 65535] { R1606 += 1, R1513 += 1, R1514 += 1 };
  s0 -> s4 [75, 75] { R1606 += 1, R1514 += 1, R1482 += 1, R1484 += 1 };
  s0 -> s5 [75, 75] { R1606 += 1, R1514 += 1, R1482 += 1, R1484 += 1 };
  s0 -> s1 [77, 65535] { R1606 += 1, R1514 += 1, R1482 += 1, R1484 += 1 };
  s1 -> s1 [0, 74] { R1606 += 1, R1514 += 1, R1482 += 1, R1484 += 1 };
  s1 -> s1 [0, 65535] { R1606 += 1, R1514 += 1, R1482 += 1 };
  s1 -> s2 [0, 65535] { R1606 += 1, R1514 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R1606 += 1 };
  s1 -> s4 [75, 75] { R1606 += 1, R1514 += 1, R1482 += 1, R1484 += 1 };
  s1 -> s5 [75, 75] { R1606 += 1, R1514 += 1, R1482 += 1, R1484 += 1 };
  s1 -> s1 [77, 65535] { R1606 += 1, R1514 += 1, R1482 += 1, R1484 += 1 };
  s2 -> s2 [0, 65535] { R1606 += 1, R1514 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R1606 += 1 };
  s3 -> s1 [0, 74] { R1606 += 1, R1514 += 1, R1482 += 1, R1484 += 1 };
  s3 -> s1 [0, 65535] { R1606 += 1, R1514 += 1, R1482 += 1 };
  s3 -> s2 [0, 65535] { R1606 += 1, R1514 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R1606 += 1, R1513 += 1, R1514 += 1 };
  s3 -> s4 [75, 75] { R1606 += 1, R1514 += 1, R1482 += 1, R1484 += 1 };
  s3 -> s5 [75, 75] { R1606 += 1, R1514 += 1, R1482 += 1, R1484 += 1 };
  s3 -> s1 [77, 65535] { R1606 += 1, R1514 += 1, R1482 += 1, R1484 += 1 };
  s4 -> s4 [0, 75] { R1606 += 1, R1514 += 1, R1482 += 1, R1484 += 1 };
  s4 -> s4 [0, 65535] { R1606 += 1, R1514 += 1, R1482 += 1 };
  s4 -> s2 [0, 65535] { R1606 += 1, R1514 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R1606 += 1 };
  s4 -> s4 [77, 65535] { R1606 += 1, R1514 += 1, R1482 += 1, R1484 += 1 };
  s5 -> s5 [0, 65535] { R1606 += 1, R1514 += 1, R1482 += 1 };
  s5 -> s2 [0, 65535] { R1606 += 1, R1514 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R1606 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R1606 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65535] { R1608 += 1, R1544 += 1, R23 += 1 };
  s0 -> s2 [0, 65535] { R1608 += 1, R1543 += 1, R1544 += 1 };
  s0 -> s0 [0, 65535] { R1607 += 1, R1608 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R1608 += 1, R1544 += 1, R23 += 1 };
  s1 -> s4 [0, 65535] { R1608 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R1608 += 1, R1544 += 1, R23 += 1 };
  s2 -> s2 [0, 65535] { R1608 += 1, R1543 += 1, R1544 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1608 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R1610 += 1, R1546 += 1 };
  s0 -> s0 [0, 65535] { R1609 += 1, R1610 += 1 };
  s0 -> s2 [0, 65535] { R1610 += 1, R1545 += 1, R1546 += 1 };
  s0 -> s3 [70, 70] { R1610 += 1, R1546 += 1 };
  s0 -> s4 [70, 70] { R1610 += 1, R1546 += 1 };
  s0 -> s5 [75, 75] { R1610 += 1, R1546 += 1 };
  s0 -> s1 [76, 65535] { R1610 += 1, R1546 += 1 };
  s1 -> s1 [0, 69] { R1610 += 1, R1546 += 1 };
  s1 -> s3 [70, 70] { R1610 += 1, R1546 += 1 };
  s1 -> s4 [70, 70] { R1610 += 1, R1546 += 1 };
  s1 -> s5 [75, 75] { R1610 += 1, R1546 += 1 };
  s1 -> s1 [76, 65535] { R1610 += 1, R1546 += 1 };
  s2 -> s1 [0, 69] { R1610 += 1, R1546 += 1 };
  s2 -> s2 [0, 65535] { R1610 += 1, R1545 += 1, R1546 += 1 };
  s2 -> s3 [70, 70] { R1610 += 1, R1546 += 1 };
  s2 -> s4 [70, 70] { R1610 += 1, R1546 += 1 };
  s2 -> s5 [75, 75] { R1610 += 1, R1546 += 1 };
  s2 -> s1 [76, 65535] { R1610 += 1, R1546 += 1 };
  s4 -> s4 [0, 70] { R1610 += 1, R1546 += 1 };
  s4 -> s7 [75, 75] { R1610 += 1, R1546 += 1 };
  s4 -> s4 [76, 65535] { R1610 += 1, R1546 += 1 };
  s5 -> s5 [0, 69] { R1610 += 1, R1546 += 1 };
  s5 -> s5 [0, 65535] { R1610 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R1610 += 1, R1546 += 1 };
  s5 -> s8 [70, 70] { R1610 += 1, R1546 += 1 };
  s5 -> s5 [75, 65535] { R1610 += 1, R1546 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R1610 += 1, R1546 += 1 };
  s7 -> s7 [0, 65535] { R1610 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R1610 += 1, R1546 += 1 };
  s8 -> s8 [0, 65535] { R1610 += 1 };
  s8 -> s6 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R1612 += 1, R1548 += 1, R137 += 1 };
  s0 -> s2 [0, 65535] { R1612 += 1, R1547 += 1, R1548 += 1 };
  s0 -> s0 [0, 65535] { R1611 += 1, R1612 += 1 };
  s0 -> s3 [70, 70] { R1612 += 1, R1548 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R1612 += 1, R1548 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R1612 += 1, R1548 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R1612 += 1, R1548 += 1, R137 += 1 };
  s1 -> s1 [0, 65535] { R1612 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R1612 += 1, R1548 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R1612 += 1, R1548 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R1612 += 1, R1548 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R1612 += 1, R1548 += 1, R137 += 1 };
  s2 -> s2 [0, 65535] { R1612 += 1, R1547 += 1, R1548 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R1612 += 1, R1548 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R1612 += 1, R1548 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R1612 += 1, R1548 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R1612 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R1612 += 1, R1548 += 1, R137 += 1 };
  s4 -> s5 [0, 65535] { R1612 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R1612 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R1614 += 1, R1550 += 1, R139 += 1 };
  s0 -> s2 [0, 65535] { R1614 += 1, R1549 += 1, R1550 += 1 };
  s0 -> s0 [0, 65535] { R1613 += 1, R1614 += 1 };
  s0 -> s3 [70, 70] { R1614 += 1, R1550 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R1614 += 1, R1550 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R1614 += 1, R1550 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R1614 += 1, R1550 += 1, R139 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1614 += 1 };
  s1 -> s3 [70, 70] { R1614 += 1, R1550 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R1614 += 1, R1550 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R1614 += 1, R1550 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R1614 += 1, R1550 += 1, R139 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1614 += 1, R1549 += 1, R1550 += 1 };
  s2 -> s3 [70, 70] { R1614 += 1, R1550 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R1614 += 1, R1550 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R1614 += 1, R1550 += 1, R139 += 1 };
  s3 -> s3 [0, 65535] { R1614 += 1, R1550 += 1, R139 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R1614 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1614 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1614 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R1616 += 1, R1552 += 1, R141 += 1, R142 += 1 };
  s0 -> s2 [0, 65535] { R1616 += 1, R1551 += 1, R1552 += 1 };
  s0 -> s0 [0, 65535] { R1615 += 1, R1616 += 1 };
  s0 -> s3 [70, 70] { R1616 += 1, R1552 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R1616 += 1, R1552 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R1616 += 1, R1552 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R1616 += 1, R1552 += 1, R141 += 1, R142 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1616 += 1 };
  s1 -> s3 [70, 70] { R1616 += 1, R1552 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R1616 += 1, R1552 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R1616 += 1, R1552 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R1616 += 1, R1552 += 1, R141 += 1, R142 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1616 += 1, R1551 += 1, R1552 += 1 };
  s2 -> s3 [70, 70] { R1616 += 1, R1552 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R1616 += 1, R1552 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R1616 += 1, R1552 += 1, R141 += 1, R142 += 1 };
  s3 -> s3 [0, 65535] { R1616 += 1, R1552 += 1, R141 += 1, R142 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R1616 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1616 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1616 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R1618 += 1, R1554 += 1, R147 += 1, R148 += 1 };
  s0 -> s2 [0, 65535] { R1618 += 1, R1553 += 1, R1554 += 1 };
  s0 -> s0 [0, 65535] { R1617 += 1, R1618 += 1 };
  s0 -> s3 [70, 70] { R1618 += 1, R1554 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R1618 += 1, R1554 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R1618 += 1, R1554 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R1618 += 1, R1554 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 65535] { R1618 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R1618 += 1, R1554 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R1618 += 1, R1554 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R1618 += 1, R1554 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R1618 += 1, R1554 += 1, R147 += 1, R148 += 1 };
  s2 -> s2 [0, 65535] { R1618 += 1, R1553 += 1, R1554 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R1618 += 1, R1554 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R1618 += 1, R1554 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R1618 += 1, R1554 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R1618 += 1, R1554 += 1, R147 += 1, R148 += 1 };
  s3 -> s6 [0, 65535] { R1618 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1618 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1618 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R1620 += 1, R1556 += 1, R151 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R1620 += 1, R1556 += 1, R152 += 1 };
  s0 -> s3 [0, 65535] { R1620 += 1, R1555 += 1, R1556 += 1 };
  s0 -> s0 [0, 65535] { R1619 += 1, R1620 += 1 };
  s0 -> s4 [70, 70] { R1620 += 1, R1556 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R1620 += 1, R1556 += 1, R151 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R1620 += 1, R1556 += 1, R151 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R1620 += 1, R1556 += 1, R152 += 1 };
  s0 -> s2 [71, 74] { R1620 += 1, R1556 += 1, R152 += 1 };
  s0 -> s1 [71, 65535] { R1620 += 1, R1556 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R1620 += 1, R1556 += 1, R152 += 1 };
  s0 -> s2 [76, 65535] { R1620 += 1, R1556 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R1620 += 1, R1556 += 1, R151 += 1, R152 += 1 };
  s1 -> s2 [0, 69] { R1620 += 1, R1556 += 1, R152 += 1 };
  s1 -> s4 [70, 70] { R1620 += 1, R1556 += 1, R152 += 1 };
  s1 -> s5 [70, 70] { R1620 += 1, R1556 += 1, R151 += 1, R152 += 1 };
  s1 -> s6 [70, 70] { R1620 += 1, R1556 += 1, R151 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R1620 += 1, R1556 += 1, R152 += 1 };
  s1 -> s2 [71, 74] { R1620 += 1, R1556 += 1, R152 += 1 };
  s1 -> s1 [71, 65535] { R1620 += 1, R1556 += 1, R151 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R1620 += 1, R1556 += 1, R152 += 1 };
  s1 -> s2 [76, 65535] { R1620 += 1, R1556 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R1620 += 1, R1556 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R1620 += 1, R1556 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R1620 += 1, R1556 += 1, R152 += 1 };
  s2 -> s2 [71, 74] { R1620 += 1, R1556 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R1620 += 1, R1556 += 1, R152 += 1 };
  s2 -> s2 [76, 65535] { R1620 += 1, R1556 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R1620 += 1, R1556 += 1, R151 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R1620 += 1, R1556 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R1620 += 1, R1555 += 1, R1556 += 1 };
  s3 -> s4 [70, 70] { R1620 += 1, R1556 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R1620 += 1, R1556 += 1, R151 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R1620 += 1, R1556 += 1, R151 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R1620 += 1, R1556 += 1, R152 += 1 };
  s3 -> s2 [71, 74] { R1620 += 1, R1556 += 1, R152 += 1 };
  s3 -> s1 [71, 65535] { R1620 += 1, R1556 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R1620 += 1, R1556 += 1, R152 += 1 };
  s3 -> s2 [76, 65535] { R1620 += 1, R1556 += 1, R152 += 1 };
  s4 -> s4 [0, 74] { R1620 += 1, R1556 += 1, R152 += 1 };
  s4 -> s10 [75, 75] { R1620 += 1, R1556 += 1, R152 += 1 };
  s4 -> s4 [76, 65535] { R1620 += 1, R1556 += 1, R152 += 1 };
  s5 -> s4 [0, 74] { R1620 += 1, R1556 += 1, R152 += 1 };
  s5 -> s5 [0, 65535] { R1620 += 1, R1556 += 1, R151 += 1, R152 += 1 };
  s5 -> s10 [75, 75] { R1620 += 1, R1556 += 1, R152 += 1 };
  s5 -> s4 [76, 65535] { R1620 += 1, R1556 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R1620 += 1, R1556 += 1, R152 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R1620 += 1 };
  s8 -> s10 [70, 70] { R1620 += 1, R1556 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R1620 += 1, R1556 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R1620 += 1, R1556 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R1620 += 1, R1556 += 1, R152 += 1 };
  s10 -> s12 [0, 65535] { R1620 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R1620 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R1620 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R1622 += 1, R1558 += 1, R155 += 1, R156 += 1 };
  s0 -> s0 [0, 65535] { R1621 += 1, R1622 += 1 };
  s0 -> s2 [0, 65535] { R1622 += 1, R1557 += 1, R1558 += 1 };
  s0 -> s3 [70, 70] { R1622 += 1, R1558 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R1622 += 1, R1558 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R1622 += 1, R1558 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R1622 += 1, R1558 += 1, R155 += 1, R156 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1622 += 1 };
  s1 -> s3 [70, 70] { R1622 += 1, R1558 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R1622 += 1, R1558 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R1622 += 1, R1558 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R1622 += 1, R1558 += 1, R155 += 1, R156 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1622 += 1, R1557 += 1, R1558 += 1 };
  s2 -> s3 [70, 70] { R1622 += 1, R1558 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R1622 += 1, R1558 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R1622 += 1, R1558 += 1, R155 += 1, R156 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R1622 += 1 };
  s3 -> s3 [0, 65535] { R1622 += 1, R1558 += 1, R155 += 1, R156 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1622 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1622 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R1624 += 1, R1560 += 1, R161 += 1, R162 += 1 };
  s0 -> s2 [0, 65535] { R1624 += 1, R1559 += 1, R1560 += 1 };
  s0 -> s0 [0, 65535] { R1623 += 1, R1624 += 1 };
  s0 -> s3 [70, 70] { R1624 += 1, R1560 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R1624 += 1, R1560 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R1624 += 1, R1560 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R1624 += 1, R1560 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535] { R1624 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R1624 += 1, R1560 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R1624 += 1, R1560 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R1624 += 1, R1560 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R1624 += 1, R1560 += 1, R161 += 1, R162 += 1 };
  s2 -> s2 [0, 65535] { R1624 += 1, R1559 += 1, R1560 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R1624 += 1, R1560 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R1624 += 1, R1560 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R1624 += 1, R1560 += 1, R161 += 1, R162 += 1 };
  s3 -> s3 [0, 65535] { R1624 += 1, R1560 += 1, R161 += 1, R162 += 1 };
  s3 -> s6 [0, 65535] { R1624 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1624 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1624 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R1626 += 1, R1562 += 1, R167 += 1, R168 += 1 };
  s0 -> s2 [0, 65535] { R1626 += 1, R1561 += 1, R1562 += 1 };
  s0 -> s0 [0, 65535] { R1625 += 1, R1626 += 1 };
  s0 -> s3 [70, 70] { R1626 += 1, R1562 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R1626 += 1, R1562 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R1626 += 1, R1562 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R1626 += 1, R1562 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 65535] { R1626 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R1626 += 1, R1562 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R1626 += 1, R1562 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R1626 += 1, R1562 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R1626 += 1, R1562 += 1, R167 += 1, R168 += 1 };
  s2 -> s2 [0, 65535] { R1626 += 1, R1561 += 1, R1562 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R1626 += 1, R1562 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R1626 += 1, R1562 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R1626 += 1, R1562 += 1, R167 += 1, R168 += 1 };
  s3 -> s3 [0, 65535] { R1626 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R1626 += 1 };
  s4 -> s4 [0, 65535] { R1626 += 1, R1562 += 1, R167 += 1, R168 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R1626 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R1628 += 1, R1564 += 1, R175 += 1, R176 += 1 };
  s0 -> s2 [0, 69] { R1628 += 1, R1564 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s3 [0, 69] { R1628 += 1, R1564 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s0 [0, 65535] { R1627 += 1, R1628 += 1 };
  s0 -> s4 [0, 65535] { R1628 += 1, R1563 += 1, R1564 += 1 };
  s0 -> s5 [70, 70] { R1628 += 1, R1564 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s6 [70, 70] { R1628 += 1, R1564 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s7 [70, 70] { R1628 += 1, R1564 += 1, R175 += 1, R176 += 1 };
  s0 -> s8 [70, 70] { R1628 += 1, R1564 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s9 [70, 70] { R1628 += 1, R1564 += 1, R175 += 1, R176 += 1 };
  s0 -> s10 [70, 70] { R1628 += 1, R1564 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s1 [71, 65535] { R1628 += 1, R1564 += 1, R175 += 1, R176 += 1 };
  s0 -> s2 [71, 65535] { R1628 += 1, R1564 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s3 [71, 65535] { R1628 += 1, R1564 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s1 [0, 69] { R1628 += 1, R1564 += 1, R175 += 1, R176 += 1 };
  s1 -> s2 [0, 69] { R1628 += 1, R1564 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s3 [0, 69] { R1628 += 1, R1564 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s5 [70, 70] { R1628 += 1, R1564 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s6 [70, 70] { R1628 += 1, R1564 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s7 [70, 70] { R1628 += 1, R1564 += 1, R175 += 1, R176 += 1 };
  s1 -> s8 [70, 70] { R1628 += 1, R1564 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s9 [70, 70] { R1628 += 1, R1564 += 1, R175 += 1, R176 += 1 };
  s1 -> s10 [70, 70] { R1628 += 1, R1564 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s1 [71, 65535] { R1628 += 1, R1564 += 1, R175 += 1, R176 += 1 };
  s1 -> s2 [71, 65535] { R1628 += 1, R1564 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s3 [71, 65535] { R1628 += 1, R1564 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [0, 69] { R1628 += 1, R1564 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s3 [0, 69] { R1628 += 1, R1564 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s5 [70, 70] { R1628 += 1, R1564 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s6 [70, 70] { R1628 += 1, R1564 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s8 [70, 70] { R1628 += 1, R1564 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s10 [70, 70] { R1628 += 1, R1564 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [71, 65535] { R1628 += 1, R1564 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s3 [71, 65535] { R1628 += 1, R1564 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s14 [0, 69] { R1628 += 1, R1564 += 1, R176 += 1 };
  s3 -> s3 [0, 69] { R1628 += 1, R1564 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s11 [70, 70] { R1628 += 1, R1564 += 1, R176 += 1 };
  s3 -> s8 [70, 70] { R1628 += 1, R1564 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s15 [70, 70] { R1628 += 1, R1564 += 1, R176 += 1 };
  s3 -> s10 [70, 70] { R1628 += 1, R1564 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s14 [71, 65535] { R1628 += 1, R1564 += 1, R176 += 1 };
  s3 -> s3 [71, 65535] { R1628 += 1, R1564 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s1 [0, 69] { R1628 += 1, R1564 += 1, R175 += 1, R176 += 1 };
  s4 -> s2 [0, 69] { R1628 += 1, R1564 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s3 [0, 69] { R1628 += 1, R1564 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s4 [0, 65535] { R1628 += 1, R1563 += 1, R1564 += 1 };
  s4 -> s5 [70, 70] { R1628 += 1, R1564 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s6 [70, 70] { R1628 += 1, R1564 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s7 [70, 70] { R1628 += 1, R1564 += 1, R175 += 1, R176 += 1 };
  s4 -> s8 [70, 70] { R1628 += 1, R1564 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s9 [70, 70] { R1628 += 1, R1564 += 1, R175 += 1, R176 += 1 };
  s4 -> s10 [70, 70] { R1628 += 1, R1564 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s1 [71, 65535] { R1628 += 1, R1564 += 1, R175 += 1, R176 += 1 };
  s4 -> s2 [71, 65535] { R1628 += 1, R1564 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s3 [71, 65535] { R1628 += 1, R1564 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s5 -> s5 [0, 65535] { R1628 += 1, R1564 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s5 -> s10 [0, 65535] { R1628 += 1, R1564 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s7 -> s5 [0, 65535] { R1628 += 1, R1564 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s7 -> s7 [0, 65535] { R1628 += 1, R1564 += 1, R175 += 1, R176 += 1 };
  s7 -> s10 [0, 65535] { R1628 += 1, R1564 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s10 -> s11 [0, 65535] { R1628 += 1, R1564 += 1, R176 += 1 };
  s10 -> s10 [0, 65535] { R1628 += 1, R1564 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s11 -> s11 [0, 65535] { R1628 += 1, R1564 += 1, R176 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [0, 65535] { R1628 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R1628 += 1 };
  s14 -> s14 [0, 69] { R1628 += 1, R1564 += 1, R176 += 1 };
  s14 -> s14 [0, 65535] { R1628 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s11 [70, 70] { R1628 += 1, R1564 += 1, R176 += 1 };
  s14 -> s15 [70, 70] { R1628 += 1, R1564 += 1, R176 += 1 };
  s14 -> s14 [71, 65535] { R1628 += 1, R1564 += 1, R176 += 1 };
  s15 -> s15 [0, 65535] { R1628 += 1 };
  s15 -> s12 [0, 65535];
  accepting s12, s13, s14, s15, s11;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R1630 += 1, R1566 += 1, R185 += 1, R186 += 1 };
  s0 -> s0 [0, 65535] { R1629 += 1, R1630 += 1 };
  s0 -> s2 [0, 65535] { R1630 += 1, R1565 += 1, R1566 += 1 };
  s0 -> s3 [70, 70] { R1630 += 1, R1566 += 1, R185 += 1, R186 += 1 };
  s0 -> s4 [70, 70] { R1630 += 1, R1566 += 1, R185 += 1, R186 += 1 };
  s0 -> s1 [71, 65535] { R1630 += 1, R1566 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 69] { R1630 += 1, R1566 += 1, R185 += 1, R186 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1630 += 1 };
  s1 -> s3 [70, 70] { R1630 += 1, R1566 += 1, R185 += 1, R186 += 1 };
  s1 -> s4 [70, 70] { R1630 += 1, R1566 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [71, 65535] { R1630 += 1, R1566 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [0, 69] { R1630 += 1, R1566 += 1, R185 += 1, R186 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1630 += 1, R1565 += 1, R1566 += 1 };
  s2 -> s3 [70, 70] { R1630 += 1, R1566 += 1, R185 += 1, R186 += 1 };
  s2 -> s4 [70, 70] { R1630 += 1, R1566 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [71, 65535] { R1630 += 1, R1566 += 1, R185 += 1, R186 += 1 };
  s3 -> s6 [0, 65535] { R1630 += 1 };
  s3 -> s3 [0, 65535] { R1630 += 1, R1566 += 1, R185 += 1, R186 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1630 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1630 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R1632 += 1, R1568 += 1, R1467 += 1, R1468 += 1 };
  s0 -> s2 [0, 69] { R1632 += 1, R1568 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s0 -> s3 [0, 69] { R1632 += 1, R1568 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s0 -> s4 [0, 65535] { R1632 += 1, R1567 += 1, R1568 += 1 };
  s0 -> s0 [0, 65535] { R1631 += 1, R1632 += 1 };
  s0 -> s5 [70, 70] { R1632 += 1, R1568 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s0 -> s6 [70, 70] { R1632 += 1, R1568 += 1, R1467 += 1, R1468 += 1 };
  s0 -> s7 [70, 70] { R1632 += 1, R1568 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s0 -> s8 [70, 70] { R1632 += 1, R1568 += 1, R1467 += 1, R1468 += 1 };
  s0 -> s9 [70, 70] { R1632 += 1, R1568 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s0 -> s10 [70, 70] { R1632 += 1, R1568 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s0 -> s1 [71, 65535] { R1632 += 1, R1568 += 1, R1467 += 1, R1468 += 1 };
  s0 -> s2 [71, 65535] { R1632 += 1, R1568 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s0 -> s3 [71, 65535] { R1632 += 1, R1568 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s1 -> s1 [0, 69] { R1632 += 1, R1568 += 1, R1467 += 1, R1468 += 1 };
  s1 -> s2 [0, 69] { R1632 += 1, R1568 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s1 -> s3 [0, 69] { R1632 += 1, R1568 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s1 -> s5 [70, 70] { R1632 += 1, R1568 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s1 -> s6 [70, 70] { R1632 += 1, R1568 += 1, R1467 += 1, R1468 += 1 };
  s1 -> s7 [70, 70] { R1632 += 1, R1568 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s1 -> s8 [70, 70] { R1632 += 1, R1568 += 1, R1467 += 1, R1468 += 1 };
  s1 -> s9 [70, 70] { R1632 += 1, R1568 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s1 -> s10 [70, 70] { R1632 += 1, R1568 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s1 -> s1 [71, 65535] { R1632 += 1, R1568 += 1, R1467 += 1, R1468 += 1 };
  s1 -> s2 [71, 65535] { R1632 += 1, R1568 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s1 -> s3 [71, 65535] { R1632 += 1, R1568 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s2 -> s2 [0, 69] { R1632 += 1, R1568 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s2 -> s3 [0, 69] { R1632 += 1, R1568 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s2 -> s5 [70, 70] { R1632 += 1, R1568 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s2 -> s7 [70, 70] { R1632 += 1, R1568 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s2 -> s9 [70, 70] { R1632 += 1, R1568 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s2 -> s10 [70, 70] { R1632 += 1, R1568 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s2 -> s2 [71, 65535] { R1632 += 1, R1568 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s2 -> s3 [71, 65535] { R1632 += 1, R1568 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s3 -> s14 [0, 69] { R1632 += 1, R1568 += 1, R1468 += 1 };
  s3 -> s3 [0, 69] { R1632 += 1, R1568 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s3 -> s5 [70, 70] { R1632 += 1, R1568 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s3 -> s15 [70, 70] { R1632 += 1, R1568 += 1, R1468 += 1 };
  s3 -> s9 [70, 70] { R1632 += 1, R1568 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s3 -> s11 [70, 70] { R1632 += 1, R1568 += 1, R1468 += 1 };
  s3 -> s14 [71, 65535] { R1632 += 1, R1568 += 1, R1468 += 1 };
  s3 -> s3 [71, 65535] { R1632 += 1, R1568 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s4 -> s1 [0, 69] { R1632 += 1, R1568 += 1, R1467 += 1, R1468 += 1 };
  s4 -> s2 [0, 69] { R1632 += 1, R1568 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s4 -> s3 [0, 69] { R1632 += 1, R1568 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s4 -> s4 [0, 65535] { R1632 += 1, R1567 += 1, R1568 += 1 };
  s4 -> s5 [70, 70] { R1632 += 1, R1568 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s4 -> s6 [70, 70] { R1632 += 1, R1568 += 1, R1467 += 1, R1468 += 1 };
  s4 -> s7 [70, 70] { R1632 += 1, R1568 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s4 -> s8 [70, 70] { R1632 += 1, R1568 += 1, R1467 += 1, R1468 += 1 };
  s4 -> s9 [70, 70] { R1632 += 1, R1568 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s4 -> s10 [70, 70] { R1632 += 1, R1568 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s4 -> s1 [71, 65535] { R1632 += 1, R1568 += 1, R1467 += 1, R1468 += 1 };
  s4 -> s2 [71, 65535] { R1632 += 1, R1568 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s4 -> s3 [71, 65535] { R1632 += 1, R1568 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s6 -> s6 [0, 65535] { R1632 += 1, R1568 += 1, R1467 += 1, R1468 += 1 };
  s6 -> s9 [0, 65535] { R1632 += 1, R1568 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s6 -> s10 [0, 65535] { R1632 += 1, R1568 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s9 -> s9 [0, 65535] { R1632 += 1, R1568 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s9 -> s11 [0, 65535] { R1632 += 1, R1568 += 1, R1468 += 1 };
  s10 -> s9 [0, 65535] { R1632 += 1, R1568 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s10 -> s10 [0, 65535] { R1632 += 1, R1568 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [0, 65535] { R1632 += 1 };
  s11 -> s11 [0, 65535] { R1632 += 1, R1568 += 1, R1468 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R1632 += 1 };
  s14 -> s14 [0, 69] { R1632 += 1, R1568 += 1, R1468 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R1632 += 1 };
  s14 -> s15 [70, 70] { R1632 += 1, R1568 += 1, R1468 += 1 };
  s14 -> s11 [70, 70] { R1632 += 1, R1568 += 1, R1468 += 1 };
  s14 -> s14 [71, 65535] { R1632 += 1, R1568 += 1, R1468 += 1 };
  s15 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R1632 += 1 };
  accepting s12, s13, s14, s15, s11;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s0 -> s2 [0, 69] { R1634 += 1, R1570 += 1, R1478 += 1, R1479 += 1, R1480 += 1 };
  s0 -> s3 [0, 69] { R1634 += 1, R1570 += 1, R1477 += 1, R1478 += 1 };
  s0 -> s4 [0, 65535] { R1634 += 1, R1569 += 1, R1570 += 1 };
  s0 -> s0 [0, 65535] { R1633 += 1, R1634 += 1 };
  s0 -> s5 [70, 70] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s0 -> s6 [70, 70] { R1634 += 1, R1570 += 1, R1477 += 1, R1478 += 1 };
  s0 -> s7 [70, 70] { R1634 += 1, R1570 += 1, R1478 += 1, R1479 += 1, R1480 += 1 };
  s0 -> s8 [70, 70] { R1634 += 1, R1570 += 1, R1478 += 1, R1479 += 1, R1480 += 1 };
  s0 -> s9 [70, 70] { R1634 += 1, R1570 += 1, R1477 += 1, R1478 += 1 };
  s0 -> s10 [70, 70] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s0 -> s1 [71, 74] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s0 -> s2 [71, 65535] { R1634 += 1, R1570 += 1, R1478 += 1, R1479 += 1, R1480 += 1 };
  s0 -> s3 [71, 65535] { R1634 += 1, R1570 += 1, R1477 += 1, R1478 += 1 };
  s0 -> s11 [77, 77] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s0 -> s1 [78, 65535] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s1 -> s1 [0, 69] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s1 -> s5 [70, 70] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s1 -> s10 [70, 70] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s1 -> s1 [71, 74] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s1 -> s11 [77, 77] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s1 -> s1 [78, 65535] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s2 -> s1 [0, 69] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s2 -> s2 [0, 69] { R1634 += 1, R1570 += 1, R1478 += 1, R1479 += 1, R1480 += 1 };
  s2 -> s5 [70, 70] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s2 -> s7 [70, 70] { R1634 += 1, R1570 += 1, R1478 += 1, R1479 += 1, R1480 += 1 };
  s2 -> s8 [70, 70] { R1634 += 1, R1570 += 1, R1478 += 1, R1479 += 1, R1480 += 1 };
  s2 -> s10 [70, 70] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s2 -> s1 [71, 74] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s2 -> s2 [71, 65535] { R1634 += 1, R1570 += 1, R1478 += 1, R1479 += 1, R1480 += 1 };
  s2 -> s11 [77, 77] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s2 -> s1 [78, 65535] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s3 -> s1 [0, 69] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s3 -> s2 [0, 69] { R1634 += 1, R1570 += 1, R1478 += 1, R1479 += 1, R1480 += 1 };
  s3 -> s3 [0, 69] { R1634 += 1, R1570 += 1, R1477 += 1, R1478 += 1 };
  s3 -> s5 [70, 70] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s3 -> s6 [70, 70] { R1634 += 1, R1570 += 1, R1477 += 1, R1478 += 1 };
  s3 -> s7 [70, 70] { R1634 += 1, R1570 += 1, R1478 += 1, R1479 += 1, R1480 += 1 };
  s3 -> s8 [70, 70] { R1634 += 1, R1570 += 1, R1478 += 1, R1479 += 1, R1480 += 1 };
  s3 -> s9 [70, 70] { R1634 += 1, R1570 += 1, R1477 += 1, R1478 += 1 };
  s3 -> s10 [70, 70] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s3 -> s1 [71, 74] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s3 -> s2 [71, 65535] { R1634 += 1, R1570 += 1, R1478 += 1, R1479 += 1, R1480 += 1 };
  s3 -> s3 [71, 65535] { R1634 += 1, R1570 += 1, R1477 += 1, R1478 += 1 };
  s3 -> s11 [77, 77] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s3 -> s1 [78, 65535] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s4 -> s1 [0, 69] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s4 -> s2 [0, 69] { R1634 += 1, R1570 += 1, R1478 += 1, R1479 += 1, R1480 += 1 };
  s4 -> s3 [0, 69] { R1634 += 1, R1570 += 1, R1477 += 1, R1478 += 1 };
  s4 -> s4 [0, 65535] { R1634 += 1, R1569 += 1, R1570 += 1 };
  s4 -> s5 [70, 70] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s4 -> s6 [70, 70] { R1634 += 1, R1570 += 1, R1477 += 1, R1478 += 1 };
  s4 -> s7 [70, 70] { R1634 += 1, R1570 += 1, R1478 += 1, R1479 += 1, R1480 += 1 };
  s4 -> s8 [70, 70] { R1634 += 1, R1570 += 1, R1478 += 1, R1479 += 1, R1480 += 1 };
  s4 -> s9 [70, 70] { R1634 += 1, R1570 += 1, R1477 += 1, R1478 += 1 };
  s4 -> s10 [70, 70] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s4 -> s1 [71, 74] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s4 -> s2 [71, 65535] { R1634 += 1, R1570 += 1, R1478 += 1, R1479 += 1, R1480 += 1 };
  s4 -> s3 [71, 65535] { R1634 += 1, R1570 += 1, R1477 += 1, R1478 += 1 };
  s4 -> s11 [77, 77] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s4 -> s1 [78, 65535] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s5 -> s5 [0, 74] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s5 -> s13 [77, 77] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s5 -> s5 [78, 65535] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s6 -> s5 [0, 74] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s6 -> s6 [0, 65535] { R1634 += 1, R1570 += 1, R1477 += 1, R1478 += 1 };
  s6 -> s8 [0, 65535] { R1634 += 1, R1570 += 1, R1478 += 1, R1479 += 1, R1480 += 1 };
  s6 -> s13 [77, 77] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s6 -> s5 [78, 65535] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s8 -> s5 [0, 74] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s8 -> s8 [0, 65535] { R1634 += 1, R1570 += 1, R1478 += 1, R1479 += 1, R1480 += 1 };
  s8 -> s13 [77, 77] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s8 -> s5 [78, 65535] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s11 -> s11 [0, 69] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s11 [0, 65535] { R1634 += 1 };
  s11 -> s13 [70, 70] { R1634 += 1, R1570 += 1, R1478 += 1 };
  s11 -> s14 [70, 70] { R1634 += 1, R1570 += 1, R1478 += 1 };
  s11 -> s11 [71, 74] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s11 -> s11 [71, 65535] { R1634 += 1, R1570 += 1, R1478 += 1 };
  s11 -> s11 [77, 65535] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s13 [0, 74] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s13 -> s13 [0, 65535] { R1634 += 1, R1570 += 1, R1478 += 1 };
  s13 -> s15 [0, 65535] { R1634 += 1 };
  s13 -> s12 [0, 65535];
  s13 -> s13 [77, 65535] { R1634 += 1, R1570 += 1, R1478 += 1, R1480 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R1634 += 1 };
  s15 -> s15 [0, 65535] { R1634 += 1 };
  s15 -> s12 [0, 65535];
  accepting s12, s13, s14, s15, s11;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R1634 && R25 - R1634 = -1 && R26 = R1634 && R27 - R1634 = -1 && R28 = R1634 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R1482 + -1*R1478 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R1482 + -1*R1478 - R130 = 0 && R129 + R1481 + R1477 = 0 && R131 + R1483 + R1479 = 0 && R132 + R1484 + R1480 = 0 && R1545 = 0 && R1546 = 0 && R1555 = 0 && R1556 = 0 && R1563 = 0 && R1564 = 0 && R1567 = 0 && R1568 = 0 && R1569 = 0 && R1570 = 0 && R1571 = 0 && R1572 = R1634 && R1573 = 0 && R1574 = R1634 && R1575 = 0 && R1576 = R1634 && R1577 = 0 && R1578 = R1634 && R1579 = 0 && R1580 = R1634 && R1581 = 0 && R1582 = R1634 && R1583 = 0 && R1584 = R1634 && R1585 = 0 && R1586 = R1634 && R1587 = 0 && R1588 = R1634 && R1589 = 0 && R1590 = R1634 && R1591 = 0 && R1592 = R1634 && R1593 = 0 && R1594 = R1634 && R1595 = 0 && R1596 = R1634 && R1597 = 0 && R1598 = R1634 && R1599 = 0 && R1600 = R1634 && R1601 = 0 && R1602 = R1634 && R1603 = 0 && R1604 = R1634 && R1605 = 0 && R1606 = R1634 && R1607 = 0 && R1608 = R1634 && R1609 = 0 && R1610 = R1634 && R1611 = 0 && R1612 = R1634 && R1613 = 0 && R1614 = R1634 && R1615 = 0 && R1616 = R1634 && R1617 = 0 && R1618 = R1634 && R1619 = 0 && R1620 = R1634 && R1621 = 0 && R1622 = R1634 && R1623 = 0 && R1624 = R1634 && R1625 = 0 && R1626 = R1634 && R1627 = 0 && R1628 = R1634 && R1629 = 0 && R1630 = R1634 && R1631 = 0 && R1632 = R1634 && R1633 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R1482 + -1*R1478 - R130 < 1 && 0 < R1634 && (R2 != 0 || R22 = 0 || (R1485 = 0 && R1486 = 0)) && (R2 != 0 || R22 = 0 || (R1487 = 0 && R1488 = 0)) && (R2 != 0 || R22 = 0 || (R1489 = 0 && R1490 = 0)) && (R2 != 0 || R22 = 0 || (R1491 = 0 && R1492 = 0)) && (R2 != 0 || R22 = 0 || (R1493 = 0 && R1494 = 0)) && (R2 != 0 || R22 = 0 || (R1495 = 0 && R1496 = 0)) && (R2 != 0 || R22 = 0 || (R1497 = 0 && R1498 = 0)) && (R2 != 0 || R22 = 0 || (R1499 = 0 && R1500 = 0)) && (R2 != 0 || R22 = 0 || (R1501 = 0 && R1502 = 0)) && (R2 != 0 || R22 = 0 || (R1503 = 0 && R1504 = 0)) && (R2 != 0 || R22 = 0 || (R1505 = 0 && R1506 = 0)) && (R2 != 0 || R22 = 0 || (R1507 = 0 && R1508 = 0)) && (R2 != 0 || R22 = 0 || (R1509 = 0 && R1510 = 0)) && (R2 != 0 || R22 = 0 || (R1511 = 0 && R1512 = 0)) && (R2 != 0 || R22 = 0 || (R1513 = 0 && R1514 = 0)) && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R1482 + -1*R1478 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R191 + R187 = 0 && R114 + R192 + R188 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R1482 + -1*R1478 - R130 = 0 || R130 + R1482 + R1478 < 1) && (R81 + R158 + R155 = 0 || R130 + R1482 + R1478 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R1482 + -1*R1478 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R1482 + R1478 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R1482 + -1*R1478 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R1482 + R1478 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R1482 + -1*R1478 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R1482 + R1478 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 != 0 || R112 + R190 + R186 + -1*R1482 + -1*R1478 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R1482 + R1478 = 0)) && (R113 + R191 + R187 != 0 || R83 + R160 + R157 + -1*R192 + -1*R188 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R1472 + R1467 != 0 || R120 + R1473 + R1468 + -1*R1482 + -1*R1478 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R1482 + R1478 = 0)) && (R1485 != 0 || R2 = R1486 || R2 < 1) && (R1487 != 0 || R2 = R1488 || R2 < 1) && (R1489 != 0 || R2 = R1490 || R2 < 1) && (R1491 != 0 || R2 = R1492 || R2 < 1) && (R1493 != 0 || R2 = R1494 || R2 < 1) && (R1495 != 0 || R2 = R1496 || R2 < 1) && (R1497 != 0 || R2 = R1498 || R2 < 1) && (R1499 != 0 || R2 = R1500 || R2 < 1) && (R1501 != 0 || R2 = R1502 || R2 < 1) && (R1503 != 0 || R2 = R1504 || R2 < 1) && (R1505 != 0 || R2 = R1506 || R2 < 1) && (R1507 != 0 || R2 = R1508 || R2 < 1) && (R1509 != 0 || R2 = R1510 || R2 < 1) && (R1511 != 0 || R2 = R1512 || R2 < 1) && (R1513 != 0 || R2 = R1514 || R2 < 1) && (R23 = 0 || (R1543 = 0 && R1544 = 0)) && (R23 = 0 || (R1547 = 0 && R1548 = 0)) && (R23 = 0 || (R1549 = 0 && R1550 = 0)) && (R23 = 0 || (R1551 = 0 && R1552 = 0)) && (R23 = 0 || (R1553 = 0 && R1554 = 0)) && (R23 = 0 || (R1557 = 0 && R1558 = 0)) && (R23 = 0 || (R1559 = 0 && R1560 = 0)) && (R23 = 0 || (R1561 = 0 && R1562 = 0)) && (R23 = 0 || (R1565 = 0 && R1566 = 0)) && (R24 = 0 || (R1515 = 0 && R1516 = 0)) && (R24 = 0 || (R1517 = 0 && R1518 = 0)) && (R24 = 0 || (R1519 = 0 && R1520 = 0)) && (R24 = 0 || (R1521 = 0 && R1522 = 0)) && (R24 = 0 || (R1523 = 0 && R1524 = 0)) && (R24 = 0 || (R1525 = 0 && R1526 = 0)) && (R24 = 0 || (R1527 = 0 && R1528 = 0)) && (R24 = 0 || (R1529 = 0 && R1530 = 0)) && (R24 = 0 || (R1531 = 0 && R1532 = 0)) && (R24 = 0 || (R1533 = 0 && R1534 = 0)) && (R24 = 0 || (R1535 = 0 && R1536 = 0)) && (R24 = 0 || (R1537 = 0 && R1538 = 0)) && (R24 = 0 || (R1539 = 0 && R1540 = 0)) && (R24 = 0 || (R1541 = 0 && R1542 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R1482 + R1478 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R1482 + R1478 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R1482 + R1478 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 = 0 || (R83 + R160 + R157 = 0 && R130 + R1482 + R1478 = 0)) && (R113 + R191 + R187 = 0 || R83 + R160 + R157 < 1) && (R119 + R1472 + R1467 = 0 || (R83 + R160 + R157 = 0 && R130 + R1482 + R1478 = 0)) && (R123 + R1476 + R1471 = 0 || (R121 + R1474 + R1469 = 0 && R122 + R1475 + R1470 = 0)) && (R1485 = 0 || R2 < 1) && (R1487 = 0 || R2 < 1) && (R1489 = 0 || R2 < 1) && (R1491 = 0 || R2 < 1) && (R1493 = 0 || R2 < 1) && (R1495 = 0 || R2 < 1) && (R1497 = 0 || R2 < 1) && (R1499 = 0 || R2 < 1) && (R1501 = 0 || R2 < 1) && (R1503 = 0 || R2 < 1) && (R1505 = 0 || R2 < 1) && (R1507 = 0 || R2 < 1) && (R1509 = 0 || R2 < 1) && (R1511 = 0 || R2 < 1) && (R1513 = 0 || R2 < 1);
// End of Parikh automata intersection problem
