// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R2, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R4015, R4016, R4017, R4018, R4019, R4020, R4021, R4022, R4023, R4024, R4657, R4658, R4659, R4660, R4661, R4662, R4663, R4664, R4665, R4666, R4667, R4668, R4669, R4670, R4671, R4672, R4673, R4674, R4675, R4676, R4677, R4678, R4679, R4680, R4681, R4682, R4683, R4684, R4685, R4686, R4687, R4688, R4689, R4690, R4691, R4692, R4693, R4694, R4695, R4696, R4697, R4698, R4699, R4700, R4701, R4702, R4703, R4704, R4705, R4706, R4707, R4708, R4709, R4710, R4711, R4712, R4713, R4714, R4715, R4716, R4717, R4718, R4719, R4720, R4721, R4722, R4723, R4724, R4725, R4726, R4727, R4728, R4729, R4730, R4731, R4732, R4733, R4734, R4735, R4736, R4737, R4738, R4739, R4740, R4741, R4742, R4743, R4744, R4745, R4746, R4747, R4748, R4749, R4750, R4751, R4752, R4753, R4754, R4755, R4756, R4757, R4758, R4759, R4760, R4761, R4762, R4763, R4764, R4765, R4766, R4767, R4768, R4769, R4770, R4771, R4772, R4773, R4774, R4775, R4776, R4777, R4778, R4779, R4780, R4781, R4782, R4783, R4784, R4785, R4786, R4787, R4788, R4789, R4790, R4791, R4792, R4793, R4794, R4795, R4796, R4797, R4798, R4799, R4800, R4801, R4802, R4803, R4804, R4805, R4806, R4807, R4808, R4809, R4810, R4811, R4812, R4813, R4814, R5, R63, R65, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R30 += 1 };
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R4695 += 1, R4696 += 1 };
  s0 -> s1 [0, 65535] { R4696 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R4696 += 1, R24 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R4698 += 1 };
  s0 -> s0 [0, 65535] { R4697 += 1, R4698 += 1 };
  s0 -> s2 [70, 70] { R4698 += 1 };
  s0 -> s3 [70, 70] { R4698 += 1 };
  s0 -> s1 [76, 65535] { R4698 += 1 };
  s1 -> s1 [0, 69] { R4698 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4698 += 1 };
  s1 -> s3 [70, 70] { R4698 += 1 };
  s1 -> s1 [76, 65535] { R4698 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R4698 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R4698 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R4700 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R4699 += 1, R4700 += 1 };
  s0 -> s2 [70, 70] { R4700 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R4700 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R4700 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R4700 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4700 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R4700 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R4700 += 1, R63 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4700 += 1, R63 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R4702 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R4701 += 1, R4702 += 1 };
  s0 -> s2 [70, 70] { R4702 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R4702 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R4702 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R4702 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4702 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R4702 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R4702 += 1, R65 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4702 += 1, R65 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R4704 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R4703 += 1, R4704 += 1 };
  s0 -> s2 [70, 70] { R4704 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R4704 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R4704 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R4704 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4704 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R4704 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R4704 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R4704 += 1, R67 += 1, R68 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R4706 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R4705 += 1, R4706 += 1 };
  s0 -> s2 [70, 70] { R4706 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R4706 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R4706 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R4706 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4706 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R4706 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R4706 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R4706 += 1, R73 += 1, R74 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R4708 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R4707 += 1, R4708 += 1 };
  s0 -> s2 [70, 70] { R4708 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R4708 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R4708 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R4708 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4708 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R4708 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R4708 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4708 += 1, R77 += 1, R78 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R4710 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R4709 += 1, R4710 += 1 };
  s0 -> s2 [70, 70] { R4710 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R4710 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R4710 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R4710 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4710 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R4710 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R4710 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4710 += 1, R81 += 1, R82 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R4712 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R4711 += 1, R4712 += 1 };
  s0 -> s2 [70, 70] { R4712 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R4712 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R4712 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R4712 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4712 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R4712 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R4712 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4712 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R4714 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R4713 += 1, R4714 += 1 };
  s0 -> s2 [70, 70] { R4714 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R4714 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R4714 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R4714 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4714 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R4714 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R4714 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4714 += 1, R93 += 1, R94 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R4716 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R4715 += 1, R4716 += 1 };
  s0 -> s2 [70, 70] { R4716 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R4716 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R4716 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R4716 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4716 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R4716 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R4716 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R4716 += 1, R101 += 1, R102 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R4718 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R4717 += 1, R4718 += 1 };
  s0 -> s2 [70, 70] { R4718 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R4718 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R4718 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R4718 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4718 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R4718 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R4718 += 1, R111 += 1, R112 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4718 += 1, R111 += 1, R112 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R4720 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R4719 += 1, R4720 += 1 };
  s0 -> s2 [70, 70] { R4720 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R4720 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R4720 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R4720 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4720 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R4720 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R4720 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4720 += 1, R119 += 1, R120 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R4722 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R4721 += 1, R4722 += 1 };
  s0 -> s2 [70, 70] { R4722 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R4722 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R4722 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R4722 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4722 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R4722 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R4722 += 1, R129 += 1, R130 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4722 += 1, R129 += 1, R130 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R4752 += 1 };
  s0 -> s0 [0, 65535] { R4751 += 1, R4752 += 1 };
  s0 -> s2 [70, 70] { R4752 += 1 };
  s0 -> s1 [71, 65535] { R4752 += 1 };
  s1 -> s1 [0, 69] { R4752 += 1 };
  s1 -> s2 [70, 70] { R4752 += 1 };
  s1 -> s1 [71, 65535] { R4752 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4752 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R4754 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R4753 += 1, R4754 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R4754 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R4756 += 1 };
  s0 -> s2 [0, 65535] { R4756 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R4755 += 1, R4756 += 1 };
  s0 -> s3 [70, 70] { R4756 += 1 };
  s0 -> s1 [71, 65535] { R4756 += 1 };
  s1 -> s1 [0, 69] { R4756 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R4756 += 1 };
  s1 -> s1 [71, 65535] { R4756 += 1 };
  s2 -> s1 [0, 69] { R4756 += 1 };
  s2 -> s2 [0, 65535] { R4756 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R4756 += 1 };
  s2 -> s1 [71, 65535] { R4756 += 1 };
  s3 -> s3 [0, 65535] { R4756 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R4758 += 1, R4666 += 1 };
  s0 -> s0 [0, 65535] { R4757 += 1, R4758 += 1 };
  s0 -> s2 [0, 65535] { R4758 += 1, R4665 += 1, R4666 += 1 };
  s0 -> s1 [71, 65535] { R4758 += 1, R4666 += 1 };
  s1 -> s1 [0, 69] { R4758 += 1, R4666 += 1 };
  s1 -> s1 [0, 65535] { R4758 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R4758 += 1, R4666 += 1 };
  s2 -> s1 [0, 69] { R4758 += 1, R4666 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4758 += 1, R4665 += 1, R4666 += 1 };
  s2 -> s1 [71, 65535] { R4758 += 1, R4666 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R4760 += 1, R4667 += 1, R4668 += 1 };
  s0 -> s2 [0, 65535] { R4760 += 1, R4668 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R4759 += 1, R4760 += 1 };
  s1 -> s1 [0, 65535] { R4760 += 1, R4667 += 1, R4668 += 1 };
  s1 -> s2 [0, 65535] { R4760 += 1, R4668 += 1, R22 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4760 += 1, R4668 += 1, R22 += 1 };
  s2 -> s3 [0, 65535] { R4760 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4760 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R4762 += 1, R4670 += 1 };
  s0 -> s0 [0, 65535] { R4761 += 1, R4762 += 1 };
  s0 -> s2 [0, 65535] { R4762 += 1, R4669 += 1, R4670 += 1 };
  s0 -> s1 [75, 65535] { R4762 += 1, R4670 += 1 };
  s1 -> s1 [0, 70] { R4762 += 1, R4670 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4762 += 1 };
  s1 -> s1 [75, 65535] { R4762 += 1, R4670 += 1 };
  s2 -> s1 [0, 70] { R4762 += 1, R4670 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4762 += 1, R4669 += 1, R4670 += 1 };
  s2 -> s1 [75, 65535] { R4762 += 1, R4670 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R4764 += 1, R4671 += 1, R4672 += 1 };
  s0 -> s0 [0, 65535] { R4763 += 1, R4764 += 1 };
  s0 -> s2 [0, 65535] { R4764 += 1, R4672 += 1, R138 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4764 += 1, R4671 += 1, R4672 += 1 };
  s1 -> s2 [0, 65535] { R4764 += 1, R4672 += 1, R138 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4764 += 1, R4672 += 1, R138 += 1 };
  s2 -> s4 [0, 65535] { R4764 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4764 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R4766 += 1, R4674 += 1 };
  s0 -> s0 [0, 65535] { R4765 += 1, R4766 += 1 };
  s0 -> s2 [0, 65535] { R4766 += 1, R4673 += 1, R4674 += 1 };
  s0 -> s3 [0, 65535] { R4766 += 1, R4674 += 1, R140 += 1 };
  s0 -> s1 [76, 65535] { R4766 += 1, R4674 += 1 };
  s1 -> s1 [0, 74] { R4766 += 1, R4674 += 1 };
  s1 -> s1 [0, 65535] { R4766 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R4766 += 1, R4674 += 1 };
  s2 -> s1 [0, 74] { R4766 += 1, R4674 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4766 += 1, R4673 += 1, R4674 += 1 };
  s2 -> s3 [0, 65535] { R4766 += 1, R4674 += 1, R140 += 1 };
  s2 -> s1 [76, 65535] { R4766 += 1, R4674 += 1 };
  s3 -> s1 [0, 74] { R4766 += 1, R4674 += 1 };
  s3 -> s4 [0, 65535] { R4766 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4766 += 1, R4674 += 1, R140 += 1 };
  s3 -> s1 [76, 65535] { R4766 += 1, R4674 += 1 };
  s4 -> s4 [0, 65535] { R4766 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R4768 += 1, R4676 += 1, R144 += 1, R145 += 1 };
  s0 -> s2 [0, 65535] { R4768 += 1, R4676 += 1, R145 += 1, R146 += 1 };
  s0 -> s0 [0, 65535] { R4767 += 1, R4768 += 1 };
  s0 -> s3 [0, 65535] { R4768 += 1, R4675 += 1, R4676 += 1 };
  s1 -> s1 [0, 65535] { R4768 += 1, R4676 += 1, R144 += 1, R145 += 1 };
  s1 -> s2 [0, 65535] { R4768 += 1, R4676 += 1, R145 += 1, R146 += 1 };
  s1 -> s5 [0, 65535] { R4768 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4768 += 1, R4676 += 1, R145 += 1, R146 += 1 };
  s2 -> s5 [0, 65535] { R4768 += 1 };
  s2 -> s6 [0, 65535] { R4768 += 1, R4676 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R4768 += 1, R4676 += 1, R144 += 1, R145 += 1 };
  s3 -> s2 [0, 65535] { R4768 += 1, R4676 += 1, R145 += 1, R146 += 1 };
  s3 -> s3 [0, 65535] { R4768 += 1, R4675 += 1, R4676 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4768 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R4768 += 1 };
  s6 -> s6 [0, 65535] { R4768 += 1, R4676 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R4770 += 1, R4678 += 1, R150 += 1 };
  s0 -> s0 [0, 65535] { R4769 += 1, R4770 += 1 };
  s0 -> s2 [0, 65535] { R4770 += 1, R4678 += 1, R149 += 1, R150 += 1 };
  s0 -> s3 [0, 65535] { R4770 += 1, R4677 += 1, R4678 += 1 };
  s0 -> s4 [75, 75] { R4770 += 1, R4678 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R4770 += 1, R4678 += 1, R150 += 1 };
  s0 -> s1 [78, 65535] { R4770 += 1, R4678 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R4770 += 1, R4678 += 1, R150 += 1 };
  s1 -> s1 [0, 65535] { R4770 += 1, R4678 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R4770 += 1 };
  s1 -> s4 [75, 75] { R4770 += 1, R4678 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R4770 += 1, R4678 += 1, R150 += 1 };
  s1 -> s1 [78, 65535] { R4770 += 1, R4678 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R4770 += 1, R4678 += 1, R150 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R4770 += 1 };
  s2 -> s2 [0, 65535] { R4770 += 1, R4678 += 1, R149 += 1, R150 += 1 };
  s2 -> s4 [75, 75] { R4770 += 1, R4678 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R4770 += 1, R4678 += 1, R150 += 1 };
  s2 -> s1 [78, 65535] { R4770 += 1, R4678 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R4770 += 1, R4678 += 1, R150 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R4770 += 1, R4678 += 1, R149 += 1, R150 += 1 };
  s3 -> s3 [0, 65535] { R4770 += 1, R4677 += 1, R4678 += 1 };
  s3 -> s4 [75, 75] { R4770 += 1, R4678 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R4770 += 1, R4678 += 1, R150 += 1 };
  s3 -> s1 [78, 65535] { R4770 += 1, R4678 += 1, R150 += 1 };
  s4 -> s4 [0, 65535] { R4770 += 1, R4678 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R4770 += 1 };
  s5 -> s5 [0, 75] { R4770 += 1, R4678 += 1, R150 += 1 };
  s5 -> s5 [0, 65535] { R4770 += 1, R4678 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R4770 += 1 };
  s5 -> s5 [78, 65535] { R4770 += 1, R4678 += 1, R150 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4770 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R4772 += 1, R4680 += 1 };
  s0 -> s2 [0, 65535] { R4772 += 1, R4679 += 1, R4680 += 1 };
  s0 -> s3 [0, 65535] { R4772 += 1, R4680 += 1, R154 += 1 };
  s0 -> s0 [0, 65535] { R4771 += 1, R4772 += 1 };
  s1 -> s1 [0, 65535] { R4772 += 1, R4680 += 1 };
  s1 -> s4 [0, 65535] { R4772 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R4772 += 1, R4680 += 1 };
  s2 -> s2 [0, 65535] { R4772 += 1, R4679 += 1, R4680 += 1 };
  s2 -> s3 [0, 65535] { R4772 += 1, R4680 += 1, R154 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R4772 += 1, R4680 += 1 };
  s3 -> s4 [0, 65535] { R4772 += 1 };
  s3 -> s3 [0, 65535] { R4772 += 1, R4680 += 1, R154 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4772 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R4774 += 1, R4682 += 1, R158 += 1, R159 += 1 };
  s0 -> s2 [0, 65535] { R4774 += 1, R4682 += 1, R159 += 1, R160 += 1 };
  s0 -> s0 [0, 65535] { R4773 += 1, R4774 += 1 };
  s0 -> s3 [0, 65535] { R4774 += 1, R4681 += 1, R4682 += 1 };
  s1 -> s1 [0, 65535] { R4774 += 1, R4682 += 1, R158 += 1, R159 += 1 };
  s1 -> s6 [0, 65535] { R4774 += 1 };
  s1 -> s2 [0, 65535] { R4774 += 1, R4682 += 1, R159 += 1, R160 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R4774 += 1, R4682 += 1 };
  s2 -> s6 [0, 65535] { R4774 += 1 };
  s2 -> s2 [0, 65535] { R4774 += 1, R4682 += 1, R159 += 1, R160 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R4774 += 1, R4682 += 1, R158 += 1, R159 += 1 };
  s3 -> s2 [0, 65535] { R4774 += 1, R4682 += 1, R159 += 1, R160 += 1 };
  s3 -> s3 [0, 65535] { R4774 += 1, R4681 += 1, R4682 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4774 += 1, R4682 += 1 };
  s5 -> s6 [0, 65535] { R4774 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R4774 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R4776 += 1, R4684 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R4776 += 1, R4684 += 1, R164 += 1, R165 += 1 };
  s0 -> s3 [0, 65535] { R4776 += 1, R4684 += 1, R165 += 1, R166 += 1 };
  s0 -> s4 [0, 65535] { R4776 += 1, R4683 += 1, R4684 += 1 };
  s0 -> s0 [0, 65535] { R4775 += 1, R4776 += 1 };
  s0 -> s1 [76, 65535] { R4776 += 1, R4684 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R4776 += 1, R4684 += 1, R165 += 1 };
  s1 -> s6 [0, 65535] { R4776 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4776 += 1, R4684 += 1 };
  s1 -> s1 [76, 65535] { R4776 += 1, R4684 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R4776 += 1, R4684 += 1, R165 += 1 };
  s2 -> s6 [0, 65535] { R4776 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4776 += 1, R4684 += 1, R164 += 1, R165 += 1 };
  s2 -> s3 [0, 65535] { R4776 += 1, R4684 += 1, R165 += 1, R166 += 1 };
  s2 -> s1 [76, 65535] { R4776 += 1, R4684 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R4776 += 1, R4684 += 1, R165 += 1 };
  s3 -> s6 [0, 65535] { R4776 += 1 };
  s3 -> s7 [0, 65535] { R4776 += 1, R4684 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4776 += 1, R4684 += 1, R165 += 1, R166 += 1 };
  s3 -> s1 [76, 65535] { R4776 += 1, R4684 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R4776 += 1, R4684 += 1, R165 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R4776 += 1, R4684 += 1, R164 += 1, R165 += 1 };
  s4 -> s3 [0, 65535] { R4776 += 1, R4684 += 1, R165 += 1, R166 += 1 };
  s4 -> s4 [0, 65535] { R4776 += 1, R4683 += 1, R4684 += 1 };
  s4 -> s1 [76, 65535] { R4776 += 1, R4684 += 1, R165 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4776 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R4776 += 1 };
  s7 -> s7 [0, 65535] { R4776 += 1, R4684 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R4778 += 1, R4686 += 1, R172 += 1, R174 += 1 };
  s0 -> s2 [0, 65535] { R4778 += 1, R4686 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s3 [0, 65535] { R4778 += 1, R4685 += 1, R4686 += 1 };
  s0 -> s4 [0, 65535] { R4778 += 1, R4686 += 1, R171 += 1, R172 += 1 };
  s0 -> s0 [0, 65535] { R4777 += 1, R4778 += 1 };
  s0 -> s1 [76, 65535] { R4778 += 1, R4686 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R4778 += 1, R4686 += 1, R172 += 1, R174 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R4778 += 1 };
  s1 -> s7 [0, 65535] { R4778 += 1, R4686 += 1 };
  s1 -> s1 [0, 65535] { R4778 += 1, R4686 += 1, R172 += 1 };
  s1 -> s1 [76, 65535] { R4778 += 1, R4686 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R4778 += 1, R4686 += 1, R172 += 1, R174 += 1 };
  s2 -> s2 [0, 65535] { R4778 += 1, R4686 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R4778 += 1 };
  s2 -> s7 [0, 65535] { R4778 += 1, R4686 += 1 };
  s2 -> s1 [76, 65535] { R4778 += 1, R4686 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R4778 += 1, R4686 += 1, R172 += 1, R174 += 1 };
  s3 -> s2 [0, 65535] { R4778 += 1, R4686 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s3 [0, 65535] { R4778 += 1, R4685 += 1, R4686 += 1 };
  s3 -> s4 [0, 65535] { R4778 += 1, R4686 += 1, R171 += 1, R172 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [76, 65535] { R4778 += 1, R4686 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R4778 += 1, R4686 += 1, R172 += 1, R174 += 1 };
  s4 -> s2 [0, 65535] { R4778 += 1, R4686 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4778 += 1, R4686 += 1, R171 += 1, R172 += 1 };
  s4 -> s6 [0, 65535] { R4778 += 1 };
  s4 -> s1 [76, 65535] { R4778 += 1, R4686 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4778 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R4778 += 1 };
  s7 -> s7 [0, 65535] { R4778 += 1, R4686 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s0 [0, 65535] { R4779 += 1, R4780 += 1 };
  s0 -> s1 [0, 65535] { R4780 += 1, R4687 += 1, R4688 += 1 };
  s0 -> s2 [0, 65535] { R4780 += 1, R4688 += 1 };
  s0 -> s3 [0, 65535] { R4780 += 1, R4688 += 1, R181 += 1 };
  s1 -> s1 [0, 65535] { R4780 += 1, R4687 += 1, R4688 += 1 };
  s1 -> s2 [0, 65535] { R4780 += 1, R4688 += 1 };
  s1 -> s3 [0, 65535] { R4780 += 1, R4688 += 1, R181 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s4 [0, 65535] { R4780 += 1 };
  s2 -> s2 [0, 65535] { R4780 += 1, R4688 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R4780 += 1 };
  s3 -> s2 [0, 65535] { R4780 += 1, R4688 += 1 };
  s3 -> s3 [0, 65535] { R4780 += 1, R4688 += 1, R181 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4780 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R4782 += 1, R4690 += 1, R190 += 1, R192 += 1 };
  s0 -> s2 [0, 65535] { R4782 += 1, R4689 += 1, R4690 += 1 };
  s0 -> s3 [0, 65535] { R4782 += 1, R4690 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s0 -> s4 [0, 65535] { R4782 += 1, R4690 += 1, R189 += 1, R190 += 1 };
  s0 -> s0 [0, 65535] { R4781 += 1, R4782 += 1 };
  s0 -> s1 [77, 65535] { R4782 += 1, R4690 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 75] { R4782 += 1, R4690 += 1, R190 += 1, R192 += 1 };
  s1 -> s5 [0, 65535] { R4782 += 1 };
  s1 -> s1 [0, 65535] { R4782 += 1, R4690 += 1, R190 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R4782 += 1, R4690 += 1 };
  s1 -> s1 [77, 65535] { R4782 += 1, R4690 += 1, R190 += 1, R192 += 1 };
  s2 -> s1 [0, 75] { R4782 += 1, R4690 += 1, R190 += 1, R192 += 1 };
  s2 -> s2 [0, 65535] { R4782 += 1, R4689 += 1, R4690 += 1 };
  s2 -> s3 [0, 65535] { R4782 += 1, R4690 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [0, 65535] { R4782 += 1, R4690 += 1, R189 += 1, R190 += 1 };
  s2 -> s1 [77, 65535] { R4782 += 1, R4690 += 1, R190 += 1, R192 += 1 };
  s3 -> s1 [0, 75] { R4782 += 1, R4690 += 1, R190 += 1, R192 += 1 };
  s3 -> s5 [0, 65535] { R4782 += 1 };
  s3 -> s3 [0, 65535] { R4782 += 1, R4690 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R4782 += 1, R4690 += 1 };
  s3 -> s1 [77, 65535] { R4782 += 1, R4690 += 1, R190 += 1, R192 += 1 };
  s4 -> s1 [0, 75] { R4782 += 1, R4690 += 1, R190 += 1, R192 += 1 };
  s4 -> s5 [0, 65535] { R4782 += 1 };
  s4 -> s3 [0, 65535] { R4782 += 1, R4690 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4782 += 1, R4690 += 1, R189 += 1, R190 += 1 };
  s4 -> s1 [77, 65535] { R4782 += 1, R4690 += 1, R190 += 1, R192 += 1 };
  s5 -> s5 [0, 65535] { R4782 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R4782 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4782 += 1, R4690 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R4784 += 1, R4692 += 1 };
  s0 -> s0 [0, 65535] { R4783 += 1, R4784 += 1 };
  s0 -> s2 [0, 65535] { R4784 += 1, R4691 += 1, R4692 += 1 };
  s1 -> s1 [0, 65535] { R4784 += 1, R4692 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R4784 += 1 };
  s2 -> s1 [0, 65535] { R4784 += 1, R4692 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4784 += 1, R4691 += 1, R4692 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4784 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 75] { R4786 += 1, R4694 += 1, R4662 += 1, R4664 += 1 };
  s0 -> s2 [0, 65535] { R4786 += 1, R4693 += 1, R4694 += 1 };
  s0 -> s0 [0, 65535] { R4785 += 1, R4786 += 1 };
  s0 -> s3 [77, 77] { R4786 += 1, R4694 += 1, R4662 += 1, R4664 += 1 };
  s0 -> s1 [78, 65535] { R4786 += 1, R4694 += 1, R4662 += 1, R4664 += 1 };
  s1 -> s1 [0, 75] { R4786 += 1, R4694 += 1, R4662 += 1, R4664 += 1 };
  s1 -> s3 [77, 77] { R4786 += 1, R4694 += 1, R4662 += 1, R4664 += 1 };
  s1 -> s1 [78, 65535] { R4786 += 1, R4694 += 1, R4662 += 1, R4664 += 1 };
  s2 -> s1 [0, 75] { R4786 += 1, R4694 += 1, R4662 += 1, R4664 += 1 };
  s2 -> s2 [0, 65535] { R4786 += 1, R4693 += 1, R4694 += 1 };
  s2 -> s3 [77, 77] { R4786 += 1, R4694 += 1, R4662 += 1, R4664 += 1 };
  s2 -> s1 [78, 65535] { R4786 += 1, R4694 += 1, R4662 += 1, R4664 += 1 };
  s3 -> s3 [0, 75] { R4786 += 1, R4694 += 1, R4662 += 1, R4664 += 1 };
  s3 -> s3 [0, 65535] { R4786 += 1, R4694 += 1, R4662 += 1 };
  s3 -> s4 [0, 65535] { R4786 += 1 };
  s3 -> s5 [0, 65535] { R4786 += 1, R4694 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [77, 65535] { R4786 += 1, R4694 += 1, R4662 += 1, R4664 += 1 };
  s4 -> s4 [0, 65535] { R4786 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s4 [0, 65535] { R4786 += 1 };
  s5 -> s5 [0, 65535] { R4786 += 1, R4694 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s6;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65535] { R4788 += 1, R4723 += 1, R4724 += 1 };
  s0 -> s2 [0, 65535] { R4788 += 1, R4724 += 1, R23 += 1 };
  s0 -> s0 [0, 65535] { R4787 += 1, R4788 += 1 };
  s1 -> s1 [0, 65535] { R4788 += 1, R4723 += 1, R4724 += 1 };
  s1 -> s2 [0, 65535] { R4788 += 1, R4724 += 1, R23 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4788 += 1, R4724 += 1, R23 += 1 };
  s2 -> s3 [0, 65535] { R4788 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4788 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R4790 += 1, R4726 += 1 };
  s0 -> s2 [0, 65535] { R4790 += 1, R4725 += 1, R4726 += 1 };
  s0 -> s0 [0, 65535] { R4789 += 1, R4790 += 1 };
  s0 -> s3 [70, 70] { R4790 += 1, R4726 += 1 };
  s0 -> s4 [70, 70] { R4790 += 1, R4726 += 1 };
  s0 -> s5 [75, 75] { R4790 += 1, R4726 += 1 };
  s0 -> s1 [76, 65535] { R4790 += 1, R4726 += 1 };
  s1 -> s1 [0, 69] { R4790 += 1, R4726 += 1 };
  s1 -> s3 [70, 70] { R4790 += 1, R4726 += 1 };
  s1 -> s4 [70, 70] { R4790 += 1, R4726 += 1 };
  s1 -> s5 [75, 75] { R4790 += 1, R4726 += 1 };
  s1 -> s1 [76, 65535] { R4790 += 1, R4726 += 1 };
  s2 -> s1 [0, 69] { R4790 += 1, R4726 += 1 };
  s2 -> s2 [0, 65535] { R4790 += 1, R4725 += 1, R4726 += 1 };
  s2 -> s3 [70, 70] { R4790 += 1, R4726 += 1 };
  s2 -> s4 [70, 70] { R4790 += 1, R4726 += 1 };
  s2 -> s5 [75, 75] { R4790 += 1, R4726 += 1 };
  s2 -> s1 [76, 65535] { R4790 += 1, R4726 += 1 };
  s3 -> s3 [0, 70] { R4790 += 1, R4726 += 1 };
  s3 -> s7 [75, 75] { R4790 += 1, R4726 += 1 };
  s3 -> s3 [76, 65535] { R4790 += 1, R4726 += 1 };
  s5 -> s5 [0, 69] { R4790 += 1, R4726 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4790 += 1 };
  s5 -> s7 [70, 70] { R4790 += 1, R4726 += 1 };
  s5 -> s8 [70, 70] { R4790 += 1, R4726 += 1 };
  s5 -> s5 [75, 65535] { R4790 += 1, R4726 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R4790 += 1, R4726 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4790 += 1 };
  s7 -> s7 [75, 65535] { R4790 += 1, R4726 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R4790 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R4792 += 1, R4728 += 1, R137 += 1 };
  s0 -> s2 [0, 65535] { R4792 += 1, R4727 += 1, R4728 += 1 };
  s0 -> s0 [0, 65535] { R4791 += 1, R4792 += 1 };
  s0 -> s3 [70, 70] { R4792 += 1, R4728 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R4792 += 1, R4728 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R4792 += 1, R4728 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R4792 += 1, R4728 += 1, R137 += 1 };
  s1 -> s1 [0, 65535] { R4792 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R4792 += 1, R4728 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R4792 += 1, R4728 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R4792 += 1, R4728 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R4792 += 1, R4728 += 1, R137 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4792 += 1, R4727 += 1, R4728 += 1 };
  s2 -> s3 [70, 70] { R4792 += 1, R4728 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R4792 += 1, R4728 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R4792 += 1, R4728 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R4792 += 1, R4728 += 1, R137 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R4792 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4792 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4792 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R4794 += 1, R4730 += 1, R139 += 1 };
  s0 -> s2 [0, 65535] { R4794 += 1, R4729 += 1, R4730 += 1 };
  s0 -> s0 [0, 65535] { R4793 += 1, R4794 += 1 };
  s0 -> s3 [70, 70] { R4794 += 1, R4730 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R4794 += 1, R4730 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R4794 += 1, R4730 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R4794 += 1, R4730 += 1, R139 += 1 };
  s1 -> s1 [0, 65535] { R4794 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R4794 += 1, R4730 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R4794 += 1, R4730 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R4794 += 1, R4730 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R4794 += 1, R4730 += 1, R139 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4794 += 1, R4729 += 1, R4730 += 1 };
  s2 -> s3 [70, 70] { R4794 += 1, R4730 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R4794 += 1, R4730 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R4794 += 1, R4730 += 1, R139 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4794 += 1, R4730 += 1, R139 += 1 };
  s3 -> s6 [0, 65535] { R4794 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4794 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4794 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R4796 += 1, R4732 += 1, R141 += 1, R142 += 1 };
  s0 -> s0 [0, 65535] { R4795 += 1, R4796 += 1 };
  s0 -> s2 [0, 65535] { R4796 += 1, R4731 += 1, R4732 += 1 };
  s0 -> s3 [70, 70] { R4796 += 1, R4732 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R4796 += 1, R4732 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R4796 += 1, R4732 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R4796 += 1, R4732 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 65535] { R4796 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R4796 += 1, R4732 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R4796 += 1, R4732 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R4796 += 1, R4732 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R4796 += 1, R4732 += 1, R141 += 1, R142 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R4796 += 1, R4731 += 1, R4732 += 1 };
  s2 -> s3 [70, 70] { R4796 += 1, R4732 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R4796 += 1, R4732 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R4796 += 1, R4732 += 1, R141 += 1, R142 += 1 };
  s3 -> s3 [0, 65535] { R4796 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R4796 += 1 };
  s4 -> s4 [0, 65535] { R4796 += 1, R4732 += 1, R141 += 1, R142 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4796 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R4798 += 1, R4734 += 1, R147 += 1, R148 += 1 };
  s0 -> s2 [0, 65535] { R4798 += 1, R4733 += 1, R4734 += 1 };
  s0 -> s0 [0, 65535] { R4797 += 1, R4798 += 1 };
  s0 -> s3 [70, 70] { R4798 += 1, R4734 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R4798 += 1, R4734 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R4798 += 1, R4734 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R4798 += 1, R4734 += 1, R147 += 1, R148 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4798 += 1 };
  s1 -> s3 [70, 70] { R4798 += 1, R4734 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R4798 += 1, R4734 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R4798 += 1, R4734 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R4798 += 1, R4734 += 1, R147 += 1, R148 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4798 += 1, R4733 += 1, R4734 += 1 };
  s2 -> s3 [70, 70] { R4798 += 1, R4734 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R4798 += 1, R4734 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R4798 += 1, R4734 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R4798 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4798 += 1, R4734 += 1, R147 += 1, R148 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4798 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4798 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R4800 += 1, R4736 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R4800 += 1, R4736 += 1, R151 += 1, R152 += 1 };
  s0 -> s3 [0, 65535] { R4800 += 1, R4735 += 1, R4736 += 1 };
  s0 -> s0 [0, 65535] { R4799 += 1, R4800 += 1 };
  s0 -> s4 [70, 70] { R4800 += 1, R4736 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R4800 += 1, R4736 += 1, R151 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R4800 += 1, R4736 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R4800 += 1, R4736 += 1, R151 += 1, R152 += 1 };
  s0 -> s1 [71, 74] { R4800 += 1, R4736 += 1, R152 += 1 };
  s0 -> s2 [71, 65535] { R4800 += 1, R4736 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R4800 += 1, R4736 += 1, R152 += 1 };
  s0 -> s1 [76, 65535] { R4800 += 1, R4736 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R4800 += 1, R4736 += 1, R152 += 1 };
  s1 -> s4 [70, 70] { R4800 += 1, R4736 += 1, R152 += 1 };
  s1 -> s6 [70, 70] { R4800 += 1, R4736 += 1, R152 += 1 };
  s1 -> s1 [71, 74] { R4800 += 1, R4736 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R4800 += 1, R4736 += 1, R152 += 1 };
  s1 -> s1 [76, 65535] { R4800 += 1, R4736 += 1, R152 += 1 };
  s2 -> s1 [0, 69] { R4800 += 1, R4736 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R4800 += 1, R4736 += 1, R151 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R4800 += 1, R4736 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R4800 += 1, R4736 += 1, R151 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R4800 += 1, R4736 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R4800 += 1, R4736 += 1, R151 += 1, R152 += 1 };
  s2 -> s1 [71, 74] { R4800 += 1, R4736 += 1, R152 += 1 };
  s2 -> s2 [71, 65535] { R4800 += 1, R4736 += 1, R151 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R4800 += 1, R4736 += 1, R152 += 1 };
  s2 -> s1 [76, 65535] { R4800 += 1, R4736 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R4800 += 1, R4736 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R4800 += 1, R4736 += 1, R151 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R4800 += 1, R4735 += 1, R4736 += 1 };
  s3 -> s4 [70, 70] { R4800 += 1, R4736 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R4800 += 1, R4736 += 1, R151 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R4800 += 1, R4736 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R4800 += 1, R4736 += 1, R151 += 1, R152 += 1 };
  s3 -> s1 [71, 74] { R4800 += 1, R4736 += 1, R152 += 1 };
  s3 -> s2 [71, 65535] { R4800 += 1, R4736 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R4800 += 1, R4736 += 1, R152 += 1 };
  s3 -> s1 [76, 65535] { R4800 += 1, R4736 += 1, R152 += 1 };
  s4 -> s4 [0, 74] { R4800 += 1, R4736 += 1, R152 += 1 };
  s4 -> s10 [75, 75] { R4800 += 1, R4736 += 1, R152 += 1 };
  s4 -> s4 [76, 65535] { R4800 += 1, R4736 += 1, R152 += 1 };
  s5 -> s4 [0, 74] { R4800 += 1, R4736 += 1, R152 += 1 };
  s5 -> s5 [0, 65535] { R4800 += 1, R4736 += 1, R151 += 1, R152 += 1 };
  s5 -> s10 [75, 75] { R4800 += 1, R4736 += 1, R152 += 1 };
  s5 -> s4 [76, 65535] { R4800 += 1, R4736 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R4800 += 1, R4736 += 1, R152 += 1 };
  s8 -> s8 [0, 65535] { R4800 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R4800 += 1, R4736 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R4800 += 1, R4736 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R4800 += 1, R4736 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R4800 += 1, R4736 += 1, R152 += 1 };
  s10 -> s12 [0, 65535] { R4800 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R4800 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R4800 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R4802 += 1, R4738 += 1, R155 += 1, R156 += 1 };
  s0 -> s0 [0, 65535] { R4801 += 1, R4802 += 1 };
  s0 -> s2 [0, 65535] { R4802 += 1, R4737 += 1, R4738 += 1 };
  s0 -> s3 [70, 70] { R4802 += 1, R4738 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R4802 += 1, R4738 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R4802 += 1, R4738 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R4802 += 1, R4738 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 65535] { R4802 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R4802 += 1, R4738 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R4802 += 1, R4738 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R4802 += 1, R4738 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R4802 += 1, R4738 += 1, R155 += 1, R156 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4802 += 1, R4737 += 1, R4738 += 1 };
  s2 -> s3 [70, 70] { R4802 += 1, R4738 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R4802 += 1, R4738 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R4802 += 1, R4738 += 1, R155 += 1, R156 += 1 };
  s3 -> s3 [0, 65535] { R4802 += 1, R4738 += 1, R155 += 1, R156 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R4802 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4802 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4802 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R4804 += 1, R4740 += 1, R161 += 1, R162 += 1 };
  s0 -> s0 [0, 65535] { R4803 += 1, R4804 += 1 };
  s0 -> s2 [0, 65535] { R4804 += 1, R4739 += 1, R4740 += 1 };
  s0 -> s3 [70, 70] { R4804 += 1, R4740 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R4804 += 1, R4740 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R4804 += 1, R4740 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R4804 += 1, R4740 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535] { R4804 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R4804 += 1, R4740 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R4804 += 1, R4740 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R4804 += 1, R4740 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R4804 += 1, R4740 += 1, R161 += 1, R162 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4804 += 1, R4739 += 1, R4740 += 1 };
  s2 -> s3 [70, 70] { R4804 += 1, R4740 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R4804 += 1, R4740 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R4804 += 1, R4740 += 1, R161 += 1, R162 += 1 };
  s3 -> s6 [0, 65535] { R4804 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4804 += 1, R4740 += 1, R161 += 1, R162 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4804 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4804 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R4806 += 1, R4742 += 1, R167 += 1, R168 += 1 };
  s0 -> s0 [0, 65535] { R4805 += 1, R4806 += 1 };
  s0 -> s2 [0, 65535] { R4806 += 1, R4741 += 1, R4742 += 1 };
  s0 -> s3 [70, 70] { R4806 += 1, R4742 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R4806 += 1, R4742 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R4806 += 1, R4742 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R4806 += 1, R4742 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 65535] { R4806 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R4806 += 1, R4742 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R4806 += 1, R4742 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R4806 += 1, R4742 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R4806 += 1, R4742 += 1, R167 += 1, R168 += 1 };
  s2 -> s2 [0, 65535] { R4806 += 1, R4741 += 1, R4742 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R4806 += 1, R4742 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R4806 += 1, R4742 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R4806 += 1, R4742 += 1, R167 += 1, R168 += 1 };
  s3 -> s3 [0, 65535] { R4806 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R4806 += 1 };
  s4 -> s4 [0, 65535] { R4806 += 1, R4742 += 1, R167 += 1, R168 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4806 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R4808 += 1, R4744 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s2 [0, 69] { R4808 += 1, R4744 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s3 [0, 69] { R4808 += 1, R4744 += 1, R175 += 1, R176 += 1 };
  s0 -> s4 [0, 65535] { R4808 += 1, R4743 += 1, R4744 += 1 };
  s0 -> s0 [0, 65535] { R4807 += 1, R4808 += 1 };
  s0 -> s5 [70, 70] { R4808 += 1, R4744 += 1, R175 += 1, R176 += 1 };
  s0 -> s6 [70, 70] { R4808 += 1, R4744 += 1, R175 += 1, R176 += 1 };
  s0 -> s7 [70, 70] { R4808 += 1, R4744 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s8 [70, 70] { R4808 += 1, R4744 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s9 [70, 70] { R4808 += 1, R4744 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s10 [70, 70] { R4808 += 1, R4744 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s1 [71, 65535] { R4808 += 1, R4744 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s2 [71, 65535] { R4808 += 1, R4744 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s3 [71, 65535] { R4808 += 1, R4744 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [0, 69] { R4808 += 1, R4744 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s2 [0, 69] { R4808 += 1, R4744 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s7 [70, 70] { R4808 += 1, R4744 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s8 [70, 70] { R4808 += 1, R4744 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s9 [70, 70] { R4808 += 1, R4744 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s10 [70, 70] { R4808 += 1, R4744 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s1 [71, 65535] { R4808 += 1, R4744 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s2 [71, 65535] { R4808 += 1, R4744 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s14 [0, 69] { R4808 += 1, R4744 += 1, R176 += 1 };
  s2 -> s2 [0, 69] { R4808 += 1, R4744 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s11 [70, 70] { R4808 += 1, R4744 += 1, R176 += 1 };
  s2 -> s15 [70, 70] { R4808 += 1, R4744 += 1, R176 += 1 };
  s2 -> s7 [70, 70] { R4808 += 1, R4744 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s8 [70, 70] { R4808 += 1, R4744 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s14 [71, 65535] { R4808 += 1, R4744 += 1, R176 += 1 };
  s2 -> s2 [71, 65535] { R4808 += 1, R4744 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s1 [0, 69] { R4808 += 1, R4744 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s2 [0, 69] { R4808 += 1, R4744 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [0, 69] { R4808 += 1, R4744 += 1, R175 += 1, R176 += 1 };
  s3 -> s5 [70, 70] { R4808 += 1, R4744 += 1, R175 += 1, R176 += 1 };
  s3 -> s6 [70, 70] { R4808 += 1, R4744 += 1, R175 += 1, R176 += 1 };
  s3 -> s7 [70, 70] { R4808 += 1, R4744 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s8 [70, 70] { R4808 += 1, R4744 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s9 [70, 70] { R4808 += 1, R4744 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s10 [70, 70] { R4808 += 1, R4744 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s1 [71, 65535] { R4808 += 1, R4744 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s2 [71, 65535] { R4808 += 1, R4744 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [71, 65535] { R4808 += 1, R4744 += 1, R175 += 1, R176 += 1 };
  s4 -> s1 [0, 69] { R4808 += 1, R4744 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s2 [0, 69] { R4808 += 1, R4744 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s3 [0, 69] { R4808 += 1, R4744 += 1, R175 += 1, R176 += 1 };
  s4 -> s4 [0, 65535] { R4808 += 1, R4743 += 1, R4744 += 1 };
  s4 -> s5 [70, 70] { R4808 += 1, R4744 += 1, R175 += 1, R176 += 1 };
  s4 -> s6 [70, 70] { R4808 += 1, R4744 += 1, R175 += 1, R176 += 1 };
  s4 -> s7 [70, 70] { R4808 += 1, R4744 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s8 [70, 70] { R4808 += 1, R4744 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s9 [70, 70] { R4808 += 1, R4744 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s10 [70, 70] { R4808 += 1, R4744 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s1 [71, 65535] { R4808 += 1, R4744 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s2 [71, 65535] { R4808 += 1, R4744 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s3 [71, 65535] { R4808 += 1, R4744 += 1, R175 += 1, R176 += 1 };
  s5 -> s5 [0, 65535] { R4808 += 1, R4744 += 1, R175 += 1, R176 += 1 };
  s5 -> s7 [0, 65535] { R4808 += 1, R4744 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s5 -> s9 [0, 65535] { R4808 += 1, R4744 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s7 -> s11 [0, 65535] { R4808 += 1, R4744 += 1, R176 += 1 };
  s7 -> s7 [0, 65535] { R4808 += 1, R4744 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s9 -> s7 [0, 65535] { R4808 += 1, R4744 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s9 -> s9 [0, 65535] { R4808 += 1, R4744 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s11 -> s11 [0, 65535] { R4808 += 1, R4744 += 1, R176 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [0, 65535] { R4808 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R4808 += 1 };
  s14 -> s14 [0, 69] { R4808 += 1, R4744 += 1, R176 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R4808 += 1 };
  s14 -> s11 [70, 70] { R4808 += 1, R4744 += 1, R176 += 1 };
  s14 -> s15 [70, 70] { R4808 += 1, R4744 += 1, R176 += 1 };
  s14 -> s14 [71, 65535] { R4808 += 1, R4744 += 1, R176 += 1 };
  s15 -> s15 [0, 65535] { R4808 += 1 };
  s15 -> s12 [0, 65535];
  accepting s12, s13, s14, s15, s11;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R4810 += 1, R4746 += 1, R185 += 1, R186 += 1 };
  s0 -> s0 [0, 65535] { R4809 += 1, R4810 += 1 };
  s0 -> s2 [0, 65535] { R4810 += 1, R4745 += 1, R4746 += 1 };
  s0 -> s3 [70, 70] { R4810 += 1, R4746 += 1, R185 += 1, R186 += 1 };
  s0 -> s4 [70, 70] { R4810 += 1, R4746 += 1, R185 += 1, R186 += 1 };
  s0 -> s1 [71, 65535] { R4810 += 1, R4746 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 69] { R4810 += 1, R4746 += 1, R185 += 1, R186 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4810 += 1 };
  s1 -> s3 [70, 70] { R4810 += 1, R4746 += 1, R185 += 1, R186 += 1 };
  s1 -> s4 [70, 70] { R4810 += 1, R4746 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [71, 65535] { R4810 += 1, R4746 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [0, 69] { R4810 += 1, R4746 += 1, R185 += 1, R186 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4810 += 1, R4745 += 1, R4746 += 1 };
  s2 -> s3 [70, 70] { R4810 += 1, R4746 += 1, R185 += 1, R186 += 1 };
  s2 -> s4 [70, 70] { R4810 += 1, R4746 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [71, 65535] { R4810 += 1, R4746 += 1, R185 += 1, R186 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R4810 += 1 };
  s3 -> s3 [0, 65535] { R4810 += 1, R4746 += 1, R185 += 1, R186 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4810 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4810 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R4812 += 1, R4748 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s0 -> s2 [0, 69] { R4812 += 1, R4748 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s0 -> s3 [0, 69] { R4812 += 1, R4748 += 1, R4015 += 1, R4016 += 1 };
  s0 -> s4 [0, 65535] { R4812 += 1, R4747 += 1, R4748 += 1 };
  s0 -> s0 [0, 65535] { R4811 += 1, R4812 += 1 };
  s0 -> s5 [70, 70] { R4812 += 1, R4748 += 1, R4015 += 1, R4016 += 1 };
  s0 -> s6 [70, 70] { R4812 += 1, R4748 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s0 -> s7 [70, 70] { R4812 += 1, R4748 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s0 -> s8 [70, 70] { R4812 += 1, R4748 += 1, R4015 += 1, R4016 += 1 };
  s0 -> s9 [70, 70] { R4812 += 1, R4748 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s0 -> s10 [70, 70] { R4812 += 1, R4748 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s0 -> s1 [71, 65535] { R4812 += 1, R4748 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s0 -> s2 [71, 65535] { R4812 += 1, R4748 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s0 -> s3 [71, 65535] { R4812 += 1, R4748 += 1, R4015 += 1, R4016 += 1 };
  s1 -> s1 [0, 69] { R4812 += 1, R4748 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s1 -> s15 [0, 69] { R4812 += 1, R4748 += 1 };
  s1 -> s17 [0, 69] { R4812 += 1, R4748 += 1, R4016 += 1 };
  s1 -> s11 [70, 70] { R4812 += 1, R4748 += 1, R4016 += 1 };
  s1 -> s16 [70, 70] { R4812 += 1, R4748 += 1 };
  s1 -> s7 [70, 70] { R4812 += 1, R4748 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s1 -> s12 [70, 70] { R4812 += 1, R4748 += 1 };
  s1 -> s10 [70, 70] { R4812 += 1, R4748 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s1 -> s18 [70, 70] { R4812 += 1, R4748 += 1, R4016 += 1 };
  s1 -> s1 [71, 65535] { R4812 += 1, R4748 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s1 -> s15 [71, 65535] { R4812 += 1, R4748 += 1 };
  s1 -> s17 [71, 65535] { R4812 += 1, R4748 += 1, R4016 += 1 };
  s2 -> s1 [0, 69] { R4812 += 1, R4748 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s2 -> s2 [0, 69] { R4812 += 1, R4748 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s2 -> s15 [0, 69] { R4812 += 1, R4748 += 1 };
  s2 -> s6 [70, 70] { R4812 += 1, R4748 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s2 -> s16 [70, 70] { R4812 += 1, R4748 += 1 };
  s2 -> s7 [70, 70] { R4812 += 1, R4748 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s2 -> s12 [70, 70] { R4812 += 1, R4748 += 1 };
  s2 -> s9 [70, 70] { R4812 += 1, R4748 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s2 -> s10 [70, 70] { R4812 += 1, R4748 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s2 -> s1 [71, 65535] { R4812 += 1, R4748 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s2 -> s2 [71, 65535] { R4812 += 1, R4748 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s2 -> s15 [71, 65535] { R4812 += 1, R4748 += 1 };
  s3 -> s1 [0, 69] { R4812 += 1, R4748 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s3 -> s2 [0, 69] { R4812 += 1, R4748 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s3 -> s3 [0, 69] { R4812 += 1, R4748 += 1, R4015 += 1, R4016 += 1 };
  s3 -> s5 [70, 70] { R4812 += 1, R4748 += 1, R4015 += 1, R4016 += 1 };
  s3 -> s6 [70, 70] { R4812 += 1, R4748 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s3 -> s7 [70, 70] { R4812 += 1, R4748 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s3 -> s8 [70, 70] { R4812 += 1, R4748 += 1, R4015 += 1, R4016 += 1 };
  s3 -> s9 [70, 70] { R4812 += 1, R4748 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s3 -> s10 [70, 70] { R4812 += 1, R4748 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s3 -> s1 [71, 65535] { R4812 += 1, R4748 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s3 -> s2 [71, 65535] { R4812 += 1, R4748 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s3 -> s3 [71, 65535] { R4812 += 1, R4748 += 1, R4015 += 1, R4016 += 1 };
  s4 -> s1 [0, 69] { R4812 += 1, R4748 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s4 -> s2 [0, 69] { R4812 += 1, R4748 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s4 -> s3 [0, 69] { R4812 += 1, R4748 += 1, R4015 += 1, R4016 += 1 };
  s4 -> s4 [0, 65535] { R4812 += 1, R4747 += 1, R4748 += 1 };
  s4 -> s5 [70, 70] { R4812 += 1, R4748 += 1, R4015 += 1, R4016 += 1 };
  s4 -> s6 [70, 70] { R4812 += 1, R4748 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s4 -> s7 [70, 70] { R4812 += 1, R4748 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s4 -> s8 [70, 70] { R4812 += 1, R4748 += 1, R4015 += 1, R4016 += 1 };
  s4 -> s9 [70, 70] { R4812 += 1, R4748 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s4 -> s10 [70, 70] { R4812 += 1, R4748 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s4 -> s1 [71, 65535] { R4812 += 1, R4748 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s4 -> s2 [71, 65535] { R4812 += 1, R4748 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s4 -> s3 [71, 65535] { R4812 += 1, R4748 += 1, R4015 += 1, R4016 += 1 };
  s5 -> s5 [0, 65535] { R4812 += 1, R4748 += 1, R4015 += 1, R4016 += 1 };
  s5 -> s6 [0, 65535] { R4812 += 1, R4748 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s5 -> s10 [0, 65535] { R4812 += 1, R4748 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s6 -> s6 [0, 65535] { R4812 += 1, R4748 += 1, R4016 += 1, R4017 += 1, R4018 += 1 };
  s6 -> s12 [0, 65535] { R4812 += 1, R4748 += 1 };
  s6 -> s10 [0, 65535] { R4812 += 1, R4748 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s10 -> s11 [0, 65535] { R4812 += 1, R4748 += 1, R4016 += 1 };
  s10 -> s12 [0, 65535] { R4812 += 1, R4748 += 1 };
  s10 -> s10 [0, 65535] { R4812 += 1, R4748 += 1, R4016 += 1, R4018 += 1, R4019 += 1 };
  s11 -> s11 [0, 65535] { R4812 += 1, R4748 += 1, R4016 += 1 };
  s11 -> s12 [0, 65535] { R4812 += 1, R4748 += 1 };
  s12 -> s13 [0, 65535];
  s12 -> s12 [0, 65535] { R4812 += 1, R4748 += 1 };
  s12 -> s14 [0, 65535] { R4812 += 1 };
  s13 -> s13 [0, 65535];
  s14 -> s13 [0, 65535];
  s14 -> s14 [0, 65535] { R4812 += 1 };
  s15 -> s15 [0, 69] { R4812 += 1, R4748 += 1 };
  s15 -> s15 [0, 65535] { R4812 += 1 };
  s15 -> s13 [0, 65535];
  s15 -> s16 [70, 70] { R4812 += 1, R4748 += 1 };
  s15 -> s12 [70, 70] { R4812 += 1, R4748 += 1 };
  s15 -> s15 [71, 65535] { R4812 += 1, R4748 += 1 };
  s16 -> s16 [0, 65535] { R4812 += 1 };
  s16 -> s13 [0, 65535];
  s17 -> s15 [0, 69] { R4812 += 1, R4748 += 1 };
  s17 -> s17 [0, 69] { R4812 += 1, R4748 += 1, R4016 += 1 };
  s17 -> s11 [70, 70] { R4812 += 1, R4748 += 1, R4016 += 1 };
  s17 -> s16 [70, 70] { R4812 += 1, R4748 += 1 };
  s17 -> s12 [70, 70] { R4812 += 1, R4748 += 1 };
  s17 -> s18 [70, 70] { R4812 += 1, R4748 += 1, R4016 += 1 };
  s17 -> s15 [71, 65535] { R4812 += 1, R4748 += 1 };
  s17 -> s17 [71, 65535] { R4812 += 1, R4748 += 1, R4016 += 1 };
  accepting s16, s12, s13, s14, s15;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R4814 += 1, R4750 += 1, R4657 += 1, R4658 += 1 };
  s0 -> s2 [0, 69] { R4814 += 1, R4750 += 1, R4658 += 1, R4659 += 1, R4660 += 1 };
  s0 -> s3 [0, 69] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s0 -> s0 [0, 65535] { R4813 += 1, R4814 += 1 };
  s0 -> s4 [0, 65535] { R4814 += 1, R4749 += 1, R4750 += 1 };
  s0 -> s5 [70, 70] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s0 -> s6 [70, 70] { R4814 += 1, R4750 += 1, R4657 += 1, R4658 += 1 };
  s0 -> s7 [70, 70] { R4814 += 1, R4750 += 1, R4658 += 1, R4659 += 1, R4660 += 1 };
  s0 -> s8 [70, 70] { R4814 += 1, R4750 += 1, R4657 += 1, R4658 += 1 };
  s0 -> s9 [70, 70] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s0 -> s10 [70, 70] { R4814 += 1, R4750 += 1, R4658 += 1, R4659 += 1, R4660 += 1 };
  s0 -> s3 [71, 74] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s0 -> s1 [71, 65535] { R4814 += 1, R4750 += 1, R4657 += 1, R4658 += 1 };
  s0 -> s2 [71, 65535] { R4814 += 1, R4750 += 1, R4658 += 1, R4659 += 1, R4660 += 1 };
  s0 -> s11 [75, 75] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s0 -> s3 [78, 65535] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s1 -> s1 [0, 69] { R4814 += 1, R4750 += 1, R4657 += 1, R4658 += 1 };
  s1 -> s2 [0, 69] { R4814 += 1, R4750 += 1, R4658 += 1, R4659 += 1, R4660 += 1 };
  s1 -> s3 [0, 69] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s1 -> s5 [70, 70] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s1 -> s6 [70, 70] { R4814 += 1, R4750 += 1, R4657 += 1, R4658 += 1 };
  s1 -> s7 [70, 70] { R4814 += 1, R4750 += 1, R4658 += 1, R4659 += 1, R4660 += 1 };
  s1 -> s8 [70, 70] { R4814 += 1, R4750 += 1, R4657 += 1, R4658 += 1 };
  s1 -> s9 [70, 70] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s1 -> s10 [70, 70] { R4814 += 1, R4750 += 1, R4658 += 1, R4659 += 1, R4660 += 1 };
  s1 -> s3 [71, 74] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s1 -> s1 [71, 65535] { R4814 += 1, R4750 += 1, R4657 += 1, R4658 += 1 };
  s1 -> s2 [71, 65535] { R4814 += 1, R4750 += 1, R4658 += 1, R4659 += 1, R4660 += 1 };
  s1 -> s11 [75, 75] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s1 -> s3 [78, 65535] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s2 -> s2 [0, 69] { R4814 += 1, R4750 += 1, R4658 += 1, R4659 += 1, R4660 += 1 };
  s2 -> s3 [0, 69] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s2 -> s5 [70, 70] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s2 -> s7 [70, 70] { R4814 += 1, R4750 += 1, R4658 += 1, R4659 += 1, R4660 += 1 };
  s2 -> s9 [70, 70] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s2 -> s10 [70, 70] { R4814 += 1, R4750 += 1, R4658 += 1, R4659 += 1, R4660 += 1 };
  s2 -> s3 [71, 74] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s2 -> s2 [71, 65535] { R4814 += 1, R4750 += 1, R4658 += 1, R4659 += 1, R4660 += 1 };
  s2 -> s11 [75, 75] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s2 -> s3 [78, 65535] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s3 -> s3 [0, 69] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s3 -> s5 [70, 70] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s3 -> s9 [70, 70] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s3 -> s3 [71, 74] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s3 -> s11 [75, 75] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s3 -> s3 [78, 65535] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s4 -> s1 [0, 69] { R4814 += 1, R4750 += 1, R4657 += 1, R4658 += 1 };
  s4 -> s2 [0, 69] { R4814 += 1, R4750 += 1, R4658 += 1, R4659 += 1, R4660 += 1 };
  s4 -> s3 [0, 69] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s4 -> s4 [0, 65535] { R4814 += 1, R4749 += 1, R4750 += 1 };
  s4 -> s5 [70, 70] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s4 -> s6 [70, 70] { R4814 += 1, R4750 += 1, R4657 += 1, R4658 += 1 };
  s4 -> s7 [70, 70] { R4814 += 1, R4750 += 1, R4658 += 1, R4659 += 1, R4660 += 1 };
  s4 -> s8 [70, 70] { R4814 += 1, R4750 += 1, R4657 += 1, R4658 += 1 };
  s4 -> s9 [70, 70] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s4 -> s10 [70, 70] { R4814 += 1, R4750 += 1, R4658 += 1, R4659 += 1, R4660 += 1 };
  s4 -> s3 [71, 74] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s4 -> s1 [71, 65535] { R4814 += 1, R4750 += 1, R4657 += 1, R4658 += 1 };
  s4 -> s2 [71, 65535] { R4814 += 1, R4750 += 1, R4658 += 1, R4659 += 1, R4660 += 1 };
  s4 -> s11 [75, 75] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s4 -> s3 [78, 65535] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s5 -> s5 [0, 74] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s5 -> s13 [75, 75] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s5 -> s5 [78, 65535] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s6 -> s5 [0, 74] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s6 -> s6 [0, 65535] { R4814 += 1, R4750 += 1, R4657 += 1, R4658 += 1 };
  s6 -> s7 [0, 65535] { R4814 += 1, R4750 += 1, R4658 += 1, R4659 += 1, R4660 += 1 };
  s6 -> s13 [75, 75] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s6 -> s5 [78, 65535] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s7 -> s5 [0, 74] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s7 -> s7 [0, 65535] { R4814 += 1, R4750 += 1, R4658 += 1, R4659 += 1, R4660 += 1 };
  s7 -> s13 [75, 75] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s7 -> s5 [78, 65535] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s11 -> s11 [0, 69] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s11 [0, 65535] { R4814 += 1 };
  s11 -> s13 [70, 70] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s11 -> s14 [70, 70] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s11 -> s11 [71, 75] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s11 -> s11 [78, 65535] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s13 [0, 75] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s13 -> s13 [0, 65535] { R4814 += 1 };
  s13 -> s12 [0, 65535];
  s13 -> s13 [78, 65535] { R4814 += 1, R4750 += 1, R4658 += 1, R4660 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R4814 += 1 };
  accepting s11, s12, s13, s14;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R4694 && R3 = R4814 && R25 - R4814 = -1 && R26 = R4814 && R27 - R4814 = -1 && R28 = R4814 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R4662 + -1*R4658 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R4662 + -1*R4658 - R130 = 0 && R129 + R4661 + R4657 = 0 && R131 + R4663 + R4659 = 0 && R132 + R4664 + R4660 = 0 && R4693 = 0 && R4725 = 0 && R4726 = 0 && R4735 = 0 && R4736 = 0 && R4743 = 0 && R4744 = 0 && R4747 = 0 && R4748 = 0 && R4749 = 0 && R4750 = 0 && R4751 = 0 && R4752 = R4814 && R4753 = 0 && R4754 = R4814 && R4755 = 0 && R4756 = R4814 && R4757 = 0 && R4758 = R4814 && R4759 = 0 && R4760 = R4814 && R4761 = 0 && R4762 = R4814 && R4763 = 0 && R4764 = R4814 && R4765 = 0 && R4766 = R4814 && R4767 = 0 && R4768 = R4814 && R4769 = 0 && R4770 = R4814 && R4771 = 0 && R4772 = R4814 && R4773 = 0 && R4774 = R4814 && R4775 = 0 && R4776 = R4814 && R4777 = 0 && R4778 = R4814 && R4779 = 0 && R4780 = R4814 && R4781 = 0 && R4782 = R4814 && R4783 = 0 && R4784 = R4814 && R4785 = 0 && R4786 = R4814 && R4787 = 0 && R4788 = R4814 && R4789 = 0 && R4790 = R4814 && R4791 = 0 && R4792 = R4814 && R4793 = 0 && R4794 = R4814 && R4795 = 0 && R4796 = R4814 && R4797 = 0 && R4798 = R4814 && R4799 = 0 && R4800 = R4814 && R4801 = 0 && R4802 = R4814 && R4803 = 0 && R4804 = R4814 && R4805 = 0 && R4806 = R4814 && R4807 = 0 && R4808 = R4814 && R4809 = 0 && R4810 = R4814 && R4811 = 0 && R4812 = R4814 && R4813 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R4662 + -1*R4658 - R130 < 1 && -1 < R4694 && 0 < R4814 && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R4662 + -1*R4658 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R191 + R187 = 0 && R114 + R192 + R188 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R4662 + -1*R4658 - R130 = 0 || R130 + R4662 + R4658 < 1) && (R81 + R158 + R155 = 0 || R130 + R4662 + R4658 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R4662 + -1*R4658 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R4662 + R4658 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R4662 + -1*R4658 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R4662 + R4658 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R4662 + -1*R4658 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R4662 + R4658 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 != 0 || R112 + R190 + R186 + -1*R4662 + -1*R4658 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R4662 + R4658 = 0)) && (R113 + R191 + R187 != 0 || R83 + R160 + R157 + -1*R192 + -1*R188 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R4020 + R4015 != 0 || R120 + R4021 + R4016 + -1*R4662 + -1*R4658 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R4662 + R4658 = 0)) && (R4665 != 0 || R4666 = R4694 || (R22 = 0 && R4694 = 0)) && (R4667 != 0 || R4668 = R4694 || (R22 = 0 && R4694 = 0)) && (R4669 != 0 || R4670 = R4694 || (R22 = 0 && R4694 = 0)) && (R4671 != 0 || R4672 = R4694 || (R22 = 0 && R4694 = 0)) && (R4673 != 0 || R4674 = R4694 || (R22 = 0 && R4694 = 0)) && (R4675 != 0 || R4676 = R4694 || (R22 = 0 && R4694 = 0)) && (R4677 != 0 || R4678 = R4694 || (R22 = 0 && R4694 = 0)) && (R4679 != 0 || R4680 = R4694 || (R22 = 0 && R4694 = 0)) && (R4681 != 0 || R4682 = R4694 || (R22 = 0 && R4694 = 0)) && (R4683 != 0 || R4684 = R4694 || (R22 = 0 && R4694 = 0)) && (R4685 != 0 || R4686 = R4694 || (R22 = 0 && R4694 = 0)) && (R4687 != 0 || R4688 = R4694 || (R22 = 0 && R4694 = 0)) && (R4689 != 0 || R4690 = R4694 || (R22 = 0 && R4694 = 0)) && (R4691 != 0 || R4692 = R4694 || (R22 = 0 && R4694 = 0)) && (R23 = 0 || (R4723 = 0 && R4724 = 0)) && (R23 = 0 || (R4727 = 0 && R4728 = 0)) && (R23 = 0 || (R4729 = 0 && R4730 = 0)) && (R23 = 0 || (R4731 = 0 && R4732 = 0)) && (R23 = 0 || (R4733 = 0 && R4734 = 0)) && (R23 = 0 || (R4737 = 0 && R4738 = 0)) && (R23 = 0 || (R4739 = 0 && R4740 = 0)) && (R23 = 0 || (R4741 = 0 && R4742 = 0)) && (R23 = 0 || (R4745 = 0 && R4746 = 0)) && (R24 = 0 || (R4695 = 0 && R4696 = 0)) && (R24 = 0 || (R4697 = 0 && R4698 = 0)) && (R24 = 0 || (R4699 = 0 && R4700 = 0)) && (R24 = 0 || (R4701 = 0 && R4702 = 0)) && (R24 = 0 || (R4703 = 0 && R4704 = 0)) && (R24 = 0 || (R4705 = 0 && R4706 = 0)) && (R24 = 0 || (R4707 = 0 && R4708 = 0)) && (R24 = 0 || (R4709 = 0 && R4710 = 0)) && (R24 = 0 || (R4711 = 0 && R4712 = 0)) && (R24 = 0 || (R4713 = 0 && R4714 = 0)) && (R24 = 0 || (R4715 = 0 && R4716 = 0)) && (R24 = 0 || (R4717 = 0 && R4718 = 0)) && (R24 = 0 || (R4719 = 0 && R4720 = 0)) && (R24 = 0 || (R4721 = 0 && R4722 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R4662 + R4658 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R4662 + R4658 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R4662 + R4658 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 = 0 || (R83 + R160 + R157 = 0 && R130 + R4662 + R4658 = 0)) && (R113 + R191 + R187 = 0 || R83 + R160 + R157 < 1) && (R119 + R4020 + R4015 = 0 || (R83 + R160 + R157 = 0 && R130 + R4662 + R4658 = 0)) && (R123 + R4024 + R4019 = 0 || (R121 + R4022 + R4017 = 0 && R122 + R4023 + R4018 = 0)) && (R4665 = 0 || (R22 = 0 && R4694 = 0)) && (R4667 = 0 || (R22 = 0 && R4694 = 0)) && (R4669 = 0 || (R22 = 0 && R4694 = 0)) && (R4671 = 0 || (R22 = 0 && R4694 = 0)) && (R4673 = 0 || (R22 = 0 && R4694 = 0)) && (R4675 = 0 || (R22 = 0 && R4694 = 0)) && (R4677 = 0 || (R22 = 0 && R4694 = 0)) && (R4679 = 0 || (R22 = 0 && R4694 = 0)) && (R4681 = 0 || (R22 = 0 && R4694 = 0)) && (R4683 = 0 || (R22 = 0 && R4694 = 0)) && (R4685 = 0 || (R22 = 0 && R4694 = 0)) && (R4687 = 0 || (R22 = 0 && R4694 = 0)) && (R4689 = 0 || (R22 = 0 && R4694 = 0)) && (R4691 = 0 || (R22 = 0 && R4694 = 0));
// End of Parikh automata intersection problem
