// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R1467, R1468, R1469, R147, R1470, R1471, R1472, R1473, R1474, R1475, R1476, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R2, R22, R2267, R2268, R2269, R2270, R2271, R2272, R2273, R2274, R2275, R2276, R2277, R2278, R2279, R2280, R2281, R2282, R2283, R2284, R2285, R2286, R2287, R2288, R2289, R2290, R2291, R2292, R2293, R2294, R2295, R2296, R2297, R2298, R2299, R23, R2300, R2301, R2302, R2303, R2304, R2305, R2306, R2307, R2308, R2309, R2310, R2311, R2312, R2313, R2314, R2315, R2316, R2317, R2318, R2319, R2320, R2321, R2322, R2323, R2324, R2325, R2326, R2327, R2328, R2329, R2330, R2331, R2332, R2333, R2334, R2335, R2336, R2337, R2338, R2339, R2340, R2341, R2342, R2343, R2344, R2345, R2346, R2347, R2348, R2349, R2350, R2351, R2352, R2353, R2354, R2355, R2356, R2357, R2358, R2359, R2360, R2361, R2362, R2363, R2364, R2365, R2366, R2367, R2368, R2369, R2370, R2371, R2372, R2373, R2374, R2375, R2376, R2377, R2378, R2379, R2380, R2381, R2382, R2383, R2384, R2385, R2386, R2387, R2388, R2389, R2390, R2391, R2392, R2393, R2394, R2395, R2396, R2397, R2398, R2399, R24, R2400, R2401, R2402, R2403, R2404, R2405, R2406, R2407, R2408, R2409, R2410, R2411, R2412, R2413, R2414, R2415, R2416, R2417, R2418, R2419, R2420, R2421, R2422, R2423, R2424, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R5, R63, R65, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R30 += 1 };
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R2306 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R2305 += 1, R2306 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R2306 += 1, R24 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R2308 += 1 };
  s0 -> s0 [0, 65535] { R2307 += 1, R2308 += 1 };
  s0 -> s2 [70, 70] { R2308 += 1 };
  s0 -> s3 [70, 70] { R2308 += 1 };
  s0 -> s1 [76, 65535] { R2308 += 1 };
  s1 -> s1 [0, 69] { R2308 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2308 += 1 };
  s1 -> s3 [70, 70] { R2308 += 1 };
  s1 -> s1 [76, 65535] { R2308 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R2308 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R2308 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R2310 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R2309 += 1, R2310 += 1 };
  s0 -> s2 [70, 70] { R2310 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R2310 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R2310 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R2310 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2310 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R2310 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R2310 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2310 += 1, R63 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R2312 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R2311 += 1, R2312 += 1 };
  s0 -> s2 [70, 70] { R2312 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R2312 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R2312 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R2312 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2312 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R2312 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R2312 += 1, R65 += 1 };
  s2 -> s2 [0, 65535] { R2312 += 1, R65 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R2314 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R2313 += 1, R2314 += 1 };
  s0 -> s2 [70, 70] { R2314 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R2314 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R2314 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R2314 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2314 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R2314 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R2314 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2314 += 1, R67 += 1, R68 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R2316 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R2315 += 1, R2316 += 1 };
  s0 -> s2 [70, 70] { R2316 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R2316 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R2316 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R2316 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2316 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R2316 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R2316 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R2316 += 1, R73 += 1, R74 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R2318 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R2317 += 1, R2318 += 1 };
  s0 -> s2 [70, 70] { R2318 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R2318 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R2318 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R2318 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2318 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R2318 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R2318 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R2318 += 1, R77 += 1, R78 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R2320 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R2319 += 1, R2320 += 1 };
  s0 -> s2 [70, 70] { R2320 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R2320 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R2320 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R2320 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2320 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R2320 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R2320 += 1, R81 += 1, R82 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2320 += 1, R81 += 1, R82 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R2322 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R2321 += 1, R2322 += 1 };
  s0 -> s2 [70, 70] { R2322 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R2322 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R2322 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R2322 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2322 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R2322 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R2322 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535] { R2322 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R2324 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R2323 += 1, R2324 += 1 };
  s0 -> s2 [70, 70] { R2324 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R2324 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R2324 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R2324 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2324 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R2324 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R2324 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535] { R2324 += 1, R93 += 1, R94 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R2326 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R2325 += 1, R2326 += 1 };
  s0 -> s2 [70, 70] { R2326 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R2326 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R2326 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R2326 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2326 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R2326 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R2326 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2326 += 1, R101 += 1, R102 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R2328 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R2327 += 1, R2328 += 1 };
  s0 -> s2 [70, 70] { R2328 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R2328 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R2328 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R2328 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2328 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R2328 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R2328 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R2328 += 1, R111 += 1, R112 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R2330 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R2329 += 1, R2330 += 1 };
  s0 -> s2 [70, 70] { R2330 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R2330 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R2330 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R2330 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2330 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R2330 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R2330 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535] { R2330 += 1, R119 += 1, R120 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R2332 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R2331 += 1, R2332 += 1 };
  s0 -> s2 [70, 70] { R2332 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R2332 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R2332 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R2332 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2332 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R2332 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R2332 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535] { R2332 += 1, R129 += 1, R130 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R2362 += 1 };
  s0 -> s0 [0, 65535] { R2361 += 1, R2362 += 1 };
  s0 -> s2 [70, 70] { R2362 += 1 };
  s0 -> s1 [71, 65535] { R2362 += 1 };
  s1 -> s1 [0, 69] { R2362 += 1 };
  s1 -> s2 [70, 70] { R2362 += 1 };
  s1 -> s1 [71, 65535] { R2362 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2362 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R2363 += 1, R2364 += 1 };
  s0 -> s1 [0, 65535] { R2364 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R2364 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R2366 += 1 };
  s0 -> s0 [0, 65535] { R2365 += 1, R2366 += 1 };
  s0 -> s2 [0, 65535] { R2366 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R2366 += 1 };
  s0 -> s1 [71, 65535] { R2366 += 1 };
  s1 -> s1 [0, 69] { R2366 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R2366 += 1 };
  s1 -> s1 [71, 65535] { R2366 += 1 };
  s2 -> s1 [0, 69] { R2366 += 1 };
  s2 -> s2 [0, 65535] { R2366 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R2366 += 1 };
  s2 -> s1 [71, 65535] { R2366 += 1 };
  s3 -> s3 [0, 65535] { R2366 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R2368 += 1, R2276 += 1 };
  s0 -> s2 [0, 65535] { R2368 += 1, R2275 += 1, R2276 += 1 };
  s0 -> s0 [0, 65535] { R2367 += 1, R2368 += 1 };
  s0 -> s1 [71, 65535] { R2368 += 1, R2276 += 1 };
  s1 -> s1 [0, 69] { R2368 += 1, R2276 += 1 };
  s1 -> s1 [0, 65535] { R2368 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R2368 += 1, R2276 += 1 };
  s2 -> s1 [0, 69] { R2368 += 1, R2276 += 1 };
  s2 -> s2 [0, 65535] { R2368 += 1, R2275 += 1, R2276 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R2368 += 1, R2276 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R2369 += 1, R2370 += 1 };
  s0 -> s1 [0, 65535] { R2370 += 1, R2278 += 1, R22 += 1 };
  s0 -> s2 [0, 65535] { R2370 += 1, R2277 += 1, R2278 += 1 };
  s1 -> s4 [0, 65535] { R2370 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2370 += 1, R2278 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R2370 += 1, R2278 += 1, R22 += 1 };
  s2 -> s2 [0, 65535] { R2370 += 1, R2277 += 1, R2278 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2370 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R2372 += 1, R2280 += 1 };
  s0 -> s2 [0, 65535] { R2372 += 1, R2279 += 1, R2280 += 1 };
  s0 -> s0 [0, 65535] { R2371 += 1, R2372 += 1 };
  s0 -> s1 [75, 65535] { R2372 += 1, R2280 += 1 };
  s1 -> s1 [0, 70] { R2372 += 1, R2280 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2372 += 1 };
  s1 -> s1 [75, 65535] { R2372 += 1, R2280 += 1 };
  s2 -> s1 [0, 70] { R2372 += 1, R2280 += 1 };
  s2 -> s2 [0, 65535] { R2372 += 1, R2279 += 1, R2280 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R2372 += 1, R2280 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s0 [0, 65535] { R2373 += 1, R2374 += 1 };
  s0 -> s1 [0, 65535] { R2374 += 1, R2281 += 1, R2282 += 1 };
  s0 -> s2 [0, 65535] { R2374 += 1, R2282 += 1, R138 += 1 };
  s1 -> s1 [0, 65535] { R2374 += 1, R2281 += 1, R2282 += 1 };
  s1 -> s2 [0, 65535] { R2374 += 1, R2282 += 1, R138 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R2374 += 1 };
  s2 -> s2 [0, 65535] { R2374 += 1, R2282 += 1, R138 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2374 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R2376 += 1, R2284 += 1 };
  s0 -> s0 [0, 65535] { R2375 += 1, R2376 += 1 };
  s0 -> s2 [0, 65535] { R2376 += 1, R2283 += 1, R2284 += 1 };
  s0 -> s3 [0, 65535] { R2376 += 1, R2284 += 1, R140 += 1 };
  s0 -> s1 [76, 65535] { R2376 += 1, R2284 += 1 };
  s1 -> s1 [0, 74] { R2376 += 1, R2284 += 1 };
  s1 -> s1 [0, 65535] { R2376 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R2376 += 1, R2284 += 1 };
  s2 -> s1 [0, 74] { R2376 += 1, R2284 += 1 };
  s2 -> s2 [0, 65535] { R2376 += 1, R2283 += 1, R2284 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R2376 += 1, R2284 += 1, R140 += 1 };
  s2 -> s1 [76, 65535] { R2376 += 1, R2284 += 1 };
  s3 -> s1 [0, 74] { R2376 += 1, R2284 += 1 };
  s3 -> s4 [0, 65535] { R2376 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2376 += 1, R2284 += 1, R140 += 1 };
  s3 -> s1 [76, 65535] { R2376 += 1, R2284 += 1 };
  s4 -> s4 [0, 65535] { R2376 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R2378 += 1, R2286 += 1, R145 += 1, R146 += 1 };
  s0 -> s0 [0, 65535] { R2377 += 1, R2378 += 1 };
  s0 -> s2 [0, 65535] { R2378 += 1, R2285 += 1, R2286 += 1 };
  s0 -> s3 [0, 65535] { R2378 += 1, R2286 += 1, R144 += 1, R145 += 1 };
  s1 -> s4 [0, 65535] { R2378 += 1 };
  s1 -> s1 [0, 65535] { R2378 += 1, R2286 += 1, R145 += 1, R146 += 1 };
  s1 -> s6 [0, 65535] { R2378 += 1, R2286 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R2378 += 1, R2286 += 1, R145 += 1, R146 += 1 };
  s2 -> s2 [0, 65535] { R2378 += 1, R2285 += 1, R2286 += 1 };
  s2 -> s3 [0, 65535] { R2378 += 1, R2286 += 1, R144 += 1, R145 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R2378 += 1 };
  s3 -> s1 [0, 65535] { R2378 += 1, R2286 += 1, R145 += 1, R146 += 1 };
  s3 -> s3 [0, 65535] { R2378 += 1, R2286 += 1, R144 += 1, R145 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2378 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R2378 += 1 };
  s6 -> s6 [0, 65535] { R2378 += 1, R2286 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R2380 += 1, R2288 += 1, R150 += 1 };
  s0 -> s0 [0, 65535] { R2379 += 1, R2380 += 1 };
  s0 -> s2 [0, 65535] { R2380 += 1, R2288 += 1, R149 += 1, R150 += 1 };
  s0 -> s3 [0, 65535] { R2380 += 1, R2287 += 1, R2288 += 1 };
  s0 -> s4 [75, 75] { R2380 += 1, R2288 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R2380 += 1, R2288 += 1, R150 += 1 };
  s0 -> s1 [78, 65535] { R2380 += 1, R2288 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R2380 += 1, R2288 += 1, R150 += 1 };
  s1 -> s6 [0, 65535] { R2380 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R2380 += 1, R2288 += 1 };
  s1 -> s4 [75, 75] { R2380 += 1, R2288 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R2380 += 1, R2288 += 1, R150 += 1 };
  s1 -> s1 [78, 65535] { R2380 += 1, R2288 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R2380 += 1, R2288 += 1, R150 += 1 };
  s2 -> s6 [0, 65535] { R2380 += 1 };
  s2 -> s2 [0, 65535] { R2380 += 1, R2288 += 1, R149 += 1, R150 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [75, 75] { R2380 += 1, R2288 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R2380 += 1, R2288 += 1, R150 += 1 };
  s2 -> s1 [78, 65535] { R2380 += 1, R2288 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R2380 += 1, R2288 += 1, R150 += 1 };
  s3 -> s2 [0, 65535] { R2380 += 1, R2288 += 1, R149 += 1, R150 += 1 };
  s3 -> s3 [0, 65535] { R2380 += 1, R2287 += 1, R2288 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [75, 75] { R2380 += 1, R2288 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R2380 += 1, R2288 += 1, R150 += 1 };
  s3 -> s1 [78, 65535] { R2380 += 1, R2288 += 1, R150 += 1 };
  s4 -> s6 [0, 65535] { R2380 += 1 };
  s4 -> s4 [0, 65535] { R2380 += 1, R2288 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 75] { R2380 += 1, R2288 += 1, R150 += 1 };
  s5 -> s6 [0, 65535] { R2380 += 1 };
  s5 -> s5 [0, 65535] { R2380 += 1, R2288 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [78, 65535] { R2380 += 1, R2288 += 1, R150 += 1 };
  s6 -> s6 [0, 65535] { R2380 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s0 [0, 65535] { R2381 += 1, R2382 += 1 };
  s0 -> s1 [0, 65535] { R2382 += 1, R2289 += 1, R2290 += 1 };
  s0 -> s2 [0, 65535] { R2382 += 1, R2290 += 1 };
  s0 -> s3 [0, 65535] { R2382 += 1, R2290 += 1, R154 += 1 };
  s1 -> s1 [0, 65535] { R2382 += 1, R2289 += 1, R2290 += 1 };
  s1 -> s2 [0, 65535] { R2382 += 1, R2290 += 1 };
  s1 -> s3 [0, 65535] { R2382 += 1, R2290 += 1, R154 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s4 [0, 65535] { R2382 += 1 };
  s2 -> s2 [0, 65535] { R2382 += 1, R2290 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R2382 += 1 };
  s3 -> s2 [0, 65535] { R2382 += 1, R2290 += 1 };
  s3 -> s3 [0, 65535] { R2382 += 1, R2290 += 1, R154 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2382 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R2384 += 1, R2291 += 1, R2292 += 1 };
  s0 -> s0 [0, 65535] { R2383 += 1, R2384 += 1 };
  s0 -> s2 [0, 65535] { R2384 += 1, R2292 += 1, R159 += 1, R160 += 1 };
  s0 -> s3 [0, 65535] { R2384 += 1, R2292 += 1, R158 += 1, R159 += 1 };
  s1 -> s1 [0, 65535] { R2384 += 1, R2291 += 1, R2292 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R2384 += 1, R2292 += 1, R159 += 1, R160 += 1 };
  s1 -> s3 [0, 65535] { R2384 += 1, R2292 += 1, R158 += 1, R159 += 1 };
  s2 -> s4 [0, 65535] { R2384 += 1 };
  s2 -> s6 [0, 65535] { R2384 += 1, R2292 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2384 += 1, R2292 += 1, R159 += 1, R160 += 1 };
  s3 -> s4 [0, 65535] { R2384 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R2384 += 1, R2292 += 1, R159 += 1, R160 += 1 };
  s3 -> s3 [0, 65535] { R2384 += 1, R2292 += 1, R158 += 1, R159 += 1 };
  s4 -> s4 [0, 65535] { R2384 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R2384 += 1 };
  s6 -> s6 [0, 65535] { R2384 += 1, R2292 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R2386 += 1, R2294 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R2386 += 1, R2294 += 1, R164 += 1, R165 += 1 };
  s0 -> s0 [0, 65535] { R2385 += 1, R2386 += 1 };
  s0 -> s3 [0, 65535] { R2386 += 1, R2294 += 1, R165 += 1, R166 += 1 };
  s0 -> s4 [0, 65535] { R2386 += 1, R2293 += 1, R2294 += 1 };
  s0 -> s1 [76, 65535] { R2386 += 1, R2294 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R2386 += 1, R2294 += 1, R165 += 1 };
  s1 -> s6 [0, 65535] { R2386 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2386 += 1, R2294 += 1 };
  s1 -> s1 [76, 65535] { R2386 += 1, R2294 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R2386 += 1, R2294 += 1, R165 += 1 };
  s2 -> s6 [0, 65535] { R2386 += 1 };
  s2 -> s2 [0, 65535] { R2386 += 1, R2294 += 1, R164 += 1, R165 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R2386 += 1, R2294 += 1, R165 += 1, R166 += 1 };
  s2 -> s1 [76, 65535] { R2386 += 1, R2294 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R2386 += 1, R2294 += 1, R165 += 1 };
  s3 -> s6 [0, 65535] { R2386 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2386 += 1, R2294 += 1, R165 += 1, R166 += 1 };
  s3 -> s7 [0, 65535] { R2386 += 1, R2294 += 1 };
  s3 -> s1 [76, 65535] { R2386 += 1, R2294 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R2386 += 1, R2294 += 1, R165 += 1 };
  s4 -> s2 [0, 65535] { R2386 += 1, R2294 += 1, R164 += 1, R165 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R2386 += 1, R2294 += 1, R165 += 1, R166 += 1 };
  s4 -> s4 [0, 65535] { R2386 += 1, R2293 += 1, R2294 += 1 };
  s4 -> s1 [76, 65535] { R2386 += 1, R2294 += 1, R165 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2386 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R2386 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R2386 += 1, R2294 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R2388 += 1, R2296 += 1, R172 += 1, R174 += 1 };
  s0 -> s2 [0, 65535] { R2388 += 1, R2295 += 1, R2296 += 1 };
  s0 -> s0 [0, 65535] { R2387 += 1, R2388 += 1 };
  s0 -> s3 [0, 65535] { R2388 += 1, R2296 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s4 [0, 65535] { R2388 += 1, R2296 += 1, R171 += 1, R172 += 1 };
  s0 -> s1 [76, 65535] { R2388 += 1, R2296 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R2388 += 1, R2296 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 65535] { R2388 += 1, R2296 += 1, R172 += 1 };
  s1 -> s7 [0, 65535] { R2388 += 1, R2296 += 1 };
  s1 -> s5 [0, 65535] { R2388 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [76, 65535] { R2388 += 1, R2296 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R2388 += 1, R2296 += 1, R172 += 1, R174 += 1 };
  s2 -> s2 [0, 65535] { R2388 += 1, R2295 += 1, R2296 += 1 };
  s2 -> s3 [0, 65535] { R2388 += 1, R2296 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s4 [0, 65535] { R2388 += 1, R2296 += 1, R171 += 1, R172 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [76, 65535] { R2388 += 1, R2296 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R2388 += 1, R2296 += 1, R172 += 1, R174 += 1 };
  s3 -> s3 [0, 65535] { R2388 += 1, R2296 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s7 [0, 65535] { R2388 += 1, R2296 += 1 };
  s3 -> s5 [0, 65535] { R2388 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [76, 65535] { R2388 += 1, R2296 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R2388 += 1, R2296 += 1, R172 += 1, R174 += 1 };
  s4 -> s3 [0, 65535] { R2388 += 1, R2296 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s5 [0, 65535] { R2388 += 1 };
  s4 -> s4 [0, 65535] { R2388 += 1, R2296 += 1, R171 += 1, R172 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s1 [76, 65535] { R2388 += 1, R2296 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535] { R2388 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2388 += 1, R2296 += 1 };
  s7 -> s5 [0, 65535] { R2388 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R2390 += 1, R2298 += 1, R181 += 1 };
  s0 -> s2 [0, 65535] { R2390 += 1, R2298 += 1 };
  s0 -> s0 [0, 65535] { R2389 += 1, R2390 += 1 };
  s0 -> s3 [0, 65535] { R2390 += 1, R2297 += 1, R2298 += 1 };
  s1 -> s5 [0, 65535] { R2390 += 1 };
  s1 -> s1 [0, 65535] { R2390 += 1, R2298 += 1, R181 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R2390 += 1, R2298 += 1 };
  s2 -> s5 [0, 65535] { R2390 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2390 += 1, R2298 += 1 };
  s3 -> s1 [0, 65535] { R2390 += 1, R2298 += 1, R181 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R2390 += 1, R2298 += 1 };
  s3 -> s3 [0, 65535] { R2390 += 1, R2297 += 1, R2298 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2390 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R2392 += 1, R2300 += 1, R190 += 1, R192 += 1 };
  s0 -> s2 [0, 65535] { R2392 += 1, R2300 += 1, R189 += 1, R190 += 1 };
  s0 -> s0 [0, 65535] { R2391 += 1, R2392 += 1 };
  s0 -> s3 [0, 65535] { R2392 += 1, R2299 += 1, R2300 += 1 };
  s0 -> s4 [0, 65535] { R2392 += 1, R2300 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s0 -> s1 [77, 65535] { R2392 += 1, R2300 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 75] { R2392 += 1, R2300 += 1, R190 += 1, R192 += 1 };
  s1 -> s5 [0, 65535] { R2392 += 1, R2300 += 1 };
  s1 -> s1 [0, 65535] { R2392 += 1, R2300 += 1, R190 += 1 };
  s1 -> s6 [0, 65535] { R2392 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [77, 65535] { R2392 += 1, R2300 += 1, R190 += 1, R192 += 1 };
  s2 -> s1 [0, 75] { R2392 += 1, R2300 += 1, R190 += 1, R192 += 1 };
  s2 -> s2 [0, 65535] { R2392 += 1, R2300 += 1, R189 += 1, R190 += 1 };
  s2 -> s6 [0, 65535] { R2392 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [0, 65535] { R2392 += 1, R2300 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s2 -> s1 [77, 65535] { R2392 += 1, R2300 += 1, R190 += 1, R192 += 1 };
  s3 -> s1 [0, 75] { R2392 += 1, R2300 += 1, R190 += 1, R192 += 1 };
  s3 -> s2 [0, 65535] { R2392 += 1, R2300 += 1, R189 += 1, R190 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R2392 += 1, R2299 += 1, R2300 += 1 };
  s3 -> s4 [0, 65535] { R2392 += 1, R2300 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s3 -> s1 [77, 65535] { R2392 += 1, R2300 += 1, R190 += 1, R192 += 1 };
  s4 -> s1 [0, 75] { R2392 += 1, R2300 += 1, R190 += 1, R192 += 1 };
  s4 -> s5 [0, 65535] { R2392 += 1, R2300 += 1 };
  s4 -> s6 [0, 65535] { R2392 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R2392 += 1, R2300 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s4 -> s1 [77, 65535] { R2392 += 1, R2300 += 1, R190 += 1, R192 += 1 };
  s5 -> s5 [0, 65535] { R2392 += 1, R2300 += 1 };
  s5 -> s6 [0, 65535] { R2392 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R2392 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R2394 += 1, R2302 += 1, R1473 += 1 };
  s0 -> s2 [0, 65535] { R2394 += 1, R2301 += 1, R2302 += 1 };
  s0 -> s0 [0, 65535] { R2393 += 1, R2394 += 1 };
  s0 -> s3 [0, 65535] { R2394 += 1, R2302 += 1 };
  s1 -> s1 [0, 65535] { R2394 += 1, R2302 += 1, R1473 += 1 };
  s1 -> s3 [0, 65535] { R2394 += 1, R2302 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R2394 += 1 };
  s2 -> s1 [0, 65535] { R2394 += 1, R2302 += 1, R1473 += 1 };
  s2 -> s2 [0, 65535] { R2394 += 1, R2301 += 1, R2302 += 1 };
  s2 -> s3 [0, 65535] { R2394 += 1, R2302 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2394 += 1, R2302 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R2394 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2394 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 74] { R2396 += 1, R2304 += 1, R2272 += 1, R2274 += 1 };
  s0 -> s2 [0, 65535] { R2396 += 1, R2303 += 1, R2304 += 1 };
  s0 -> s0 [0, 65535] { R2395 += 1, R2396 += 1 };
  s0 -> s3 [75, 75] { R2396 += 1, R2304 += 1, R2272 += 1, R2274 += 1 };
  s0 -> s4 [77, 77] { R2396 += 1, R2304 += 1, R2272 += 1, R2274 += 1 };
  s0 -> s1 [78, 65535] { R2396 += 1, R2304 += 1, R2272 += 1, R2274 += 1 };
  s1 -> s1 [0, 74] { R2396 += 1, R2304 += 1, R2272 += 1, R2274 += 1 };
  s1 -> s3 [75, 75] { R2396 += 1, R2304 += 1, R2272 += 1, R2274 += 1 };
  s1 -> s4 [77, 77] { R2396 += 1, R2304 += 1, R2272 += 1, R2274 += 1 };
  s1 -> s1 [78, 65535] { R2396 += 1, R2304 += 1, R2272 += 1, R2274 += 1 };
  s2 -> s1 [0, 74] { R2396 += 1, R2304 += 1, R2272 += 1, R2274 += 1 };
  s2 -> s2 [0, 65535] { R2396 += 1, R2303 += 1, R2304 += 1 };
  s2 -> s3 [75, 75] { R2396 += 1, R2304 += 1, R2272 += 1, R2274 += 1 };
  s2 -> s4 [77, 77] { R2396 += 1, R2304 += 1, R2272 += 1, R2274 += 1 };
  s2 -> s1 [78, 65535] { R2396 += 1, R2304 += 1, R2272 += 1, R2274 += 1 };
  s3 -> s3 [0, 75] { R2396 += 1, R2304 += 1, R2272 += 1, R2274 += 1 };
  s3 -> s9 [77, 77] { R2396 += 1, R2304 += 1, R2272 += 1, R2274 += 1 };
  s3 -> s3 [78, 65535] { R2396 += 1, R2304 += 1, R2272 += 1, R2274 += 1 };
  s4 -> s4 [0, 74] { R2396 += 1, R2304 += 1, R2272 += 1, R2274 += 1 };
  s4 -> s5 [0, 65535] { R2396 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2396 += 1, R2304 += 1, R2272 += 1 };
  s4 -> s7 [0, 65535] { R2396 += 1, R2304 += 1 };
  s4 -> s8 [75, 75] { R2396 += 1, R2304 += 1, R2272 += 1, R2274 += 1 };
  s4 -> s9 [75, 75] { R2396 += 1, R2304 += 1, R2272 += 1, R2274 += 1 };
  s4 -> s4 [77, 65535] { R2396 += 1, R2304 += 1, R2272 += 1, R2274 += 1 };
  s5 -> s5 [0, 65535] { R2396 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R2396 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2396 += 1, R2304 += 1 };
  s8 -> s5 [0, 65535] { R2396 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R2396 += 1, R2304 += 1 };
  s8 -> s8 [0, 65535] { R2396 += 1, R2304 += 1, R2272 += 1 };
  s9 -> s9 [0, 75] { R2396 += 1, R2304 += 1, R2272 += 1, R2274 += 1 };
  s9 -> s5 [0, 65535] { R2396 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s7 [0, 65535] { R2396 += 1, R2304 += 1 };
  s9 -> s9 [0, 65535] { R2396 += 1, R2304 += 1, R2272 += 1 };
  s9 -> s9 [77, 65535] { R2396 += 1, R2304 += 1, R2272 += 1, R2274 += 1 };
  accepting s4, s8, s5, s9, s6, s7;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65535] { R2398 += 1, R2334 += 1, R23 += 1 };
  s0 -> s0 [0, 65535] { R2397 += 1, R2398 += 1 };
  s0 -> s2 [0, 65535] { R2398 += 1, R2333 += 1, R2334 += 1 };
  s1 -> s4 [0, 65535] { R2398 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2398 += 1, R2334 += 1, R23 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R2398 += 1, R2334 += 1, R23 += 1 };
  s2 -> s2 [0, 65535] { R2398 += 1, R2333 += 1, R2334 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2398 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R2400 += 1, R2336 += 1 };
  s0 -> s2 [0, 65535] { R2400 += 1, R2335 += 1, R2336 += 1 };
  s0 -> s0 [0, 65535] { R2399 += 1, R2400 += 1 };
  s0 -> s3 [70, 70] { R2400 += 1, R2336 += 1 };
  s0 -> s4 [70, 70] { R2400 += 1, R2336 += 1 };
  s0 -> s5 [75, 75] { R2400 += 1, R2336 += 1 };
  s0 -> s1 [76, 65535] { R2400 += 1, R2336 += 1 };
  s1 -> s1 [0, 69] { R2400 += 1, R2336 += 1 };
  s1 -> s3 [70, 70] { R2400 += 1, R2336 += 1 };
  s1 -> s4 [70, 70] { R2400 += 1, R2336 += 1 };
  s1 -> s5 [75, 75] { R2400 += 1, R2336 += 1 };
  s1 -> s1 [76, 65535] { R2400 += 1, R2336 += 1 };
  s2 -> s1 [0, 69] { R2400 += 1, R2336 += 1 };
  s2 -> s2 [0, 65535] { R2400 += 1, R2335 += 1, R2336 += 1 };
  s2 -> s3 [70, 70] { R2400 += 1, R2336 += 1 };
  s2 -> s4 [70, 70] { R2400 += 1, R2336 += 1 };
  s2 -> s5 [75, 75] { R2400 += 1, R2336 += 1 };
  s2 -> s1 [76, 65535] { R2400 += 1, R2336 += 1 };
  s4 -> s4 [0, 70] { R2400 += 1, R2336 += 1 };
  s4 -> s8 [75, 75] { R2400 += 1, R2336 += 1 };
  s4 -> s4 [76, 65535] { R2400 += 1, R2336 += 1 };
  s5 -> s5 [0, 69] { R2400 += 1, R2336 += 1 };
  s5 -> s5 [0, 65535] { R2400 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R2400 += 1, R2336 += 1 };
  s5 -> s8 [70, 70] { R2400 += 1, R2336 += 1 };
  s5 -> s5 [75, 65535] { R2400 += 1, R2336 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2400 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 70] { R2400 += 1, R2336 += 1 };
  s8 -> s8 [0, 65535] { R2400 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [75, 65535] { R2400 += 1, R2336 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R2402 += 1, R2338 += 1, R137 += 1 };
  s0 -> s2 [0, 65535] { R2402 += 1, R2337 += 1, R2338 += 1 };
  s0 -> s0 [0, 65535] { R2401 += 1, R2402 += 1 };
  s0 -> s3 [70, 70] { R2402 += 1, R2338 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R2402 += 1, R2338 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R2402 += 1, R2338 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R2402 += 1, R2338 += 1, R137 += 1 };
  s1 -> s1 [0, 65535] { R2402 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R2402 += 1, R2338 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R2402 += 1, R2338 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R2402 += 1, R2338 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R2402 += 1, R2338 += 1, R137 += 1 };
  s2 -> s2 [0, 65535] { R2402 += 1, R2337 += 1, R2338 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R2402 += 1, R2338 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R2402 += 1, R2338 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R2402 += 1, R2338 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R2402 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2402 += 1, R2338 += 1, R137 += 1 };
  s4 -> s5 [0, 65535] { R2402 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R2402 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R2404 += 1, R2340 += 1, R139 += 1 };
  s0 -> s0 [0, 65535] { R2403 += 1, R2404 += 1 };
  s0 -> s2 [0, 65535] { R2404 += 1, R2339 += 1, R2340 += 1 };
  s0 -> s3 [70, 70] { R2404 += 1, R2340 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R2404 += 1, R2340 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R2404 += 1, R2340 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R2404 += 1, R2340 += 1, R139 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2404 += 1 };
  s1 -> s3 [70, 70] { R2404 += 1, R2340 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R2404 += 1, R2340 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R2404 += 1, R2340 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R2404 += 1, R2340 += 1, R139 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2404 += 1, R2339 += 1, R2340 += 1 };
  s2 -> s3 [70, 70] { R2404 += 1, R2340 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R2404 += 1, R2340 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R2404 += 1, R2340 += 1, R139 += 1 };
  s3 -> s3 [0, 65535] { R2404 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2404 += 1, R2340 += 1, R139 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R2404 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2404 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R2406 += 1, R2342 += 1, R141 += 1, R142 += 1 };
  s0 -> s0 [0, 65535] { R2405 += 1, R2406 += 1 };
  s0 -> s2 [0, 65535] { R2406 += 1, R2341 += 1, R2342 += 1 };
  s0 -> s3 [70, 70] { R2406 += 1, R2342 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R2406 += 1, R2342 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R2406 += 1, R2342 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R2406 += 1, R2342 += 1, R141 += 1, R142 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2406 += 1 };
  s1 -> s3 [70, 70] { R2406 += 1, R2342 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R2406 += 1, R2342 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R2406 += 1, R2342 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R2406 += 1, R2342 += 1, R141 += 1, R142 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2406 += 1, R2341 += 1, R2342 += 1 };
  s2 -> s3 [70, 70] { R2406 += 1, R2342 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R2406 += 1, R2342 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R2406 += 1, R2342 += 1, R141 += 1, R142 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R2406 += 1 };
  s3 -> s3 [0, 65535] { R2406 += 1, R2342 += 1, R141 += 1, R142 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2406 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2406 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R2408 += 1, R2344 += 1, R147 += 1, R148 += 1 };
  s0 -> s2 [0, 65535] { R2408 += 1, R2343 += 1, R2344 += 1 };
  s0 -> s0 [0, 65535] { R2407 += 1, R2408 += 1 };
  s0 -> s3 [70, 70] { R2408 += 1, R2344 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R2408 += 1, R2344 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R2408 += 1, R2344 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R2408 += 1, R2344 += 1, R147 += 1, R148 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R2408 += 1 };
  s1 -> s3 [70, 70] { R2408 += 1, R2344 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R2408 += 1, R2344 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R2408 += 1, R2344 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R2408 += 1, R2344 += 1, R147 += 1, R148 += 1 };
  s2 -> s2 [0, 65535] { R2408 += 1, R2343 += 1, R2344 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R2408 += 1, R2344 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R2408 += 1, R2344 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R2408 += 1, R2344 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R2408 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R2408 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2408 += 1, R2344 += 1, R147 += 1, R148 += 1 };
  s5 -> s5 [0, 65535] { R2408 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R2410 += 1, R2346 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R2410 += 1, R2346 += 1, R151 += 1, R152 += 1 };
  s0 -> s3 [0, 65535] { R2410 += 1, R2345 += 1, R2346 += 1 };
  s0 -> s0 [0, 65535] { R2409 += 1, R2410 += 1 };
  s0 -> s4 [70, 70] { R2410 += 1, R2346 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R2410 += 1, R2346 += 1, R151 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R2410 += 1, R2346 += 1, R151 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R2410 += 1, R2346 += 1, R152 += 1 };
  s0 -> s1 [71, 74] { R2410 += 1, R2346 += 1, R152 += 1 };
  s0 -> s2 [71, 65535] { R2410 += 1, R2346 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R2410 += 1, R2346 += 1, R152 += 1 };
  s0 -> s1 [76, 65535] { R2410 += 1, R2346 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R2410 += 1, R2346 += 1, R152 += 1 };
  s1 -> s4 [70, 70] { R2410 += 1, R2346 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R2410 += 1, R2346 += 1, R152 += 1 };
  s1 -> s1 [71, 74] { R2410 += 1, R2346 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R2410 += 1, R2346 += 1, R152 += 1 };
  s1 -> s1 [76, 65535] { R2410 += 1, R2346 += 1, R152 += 1 };
  s2 -> s1 [0, 69] { R2410 += 1, R2346 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R2410 += 1, R2346 += 1, R151 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R2410 += 1, R2346 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R2410 += 1, R2346 += 1, R151 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R2410 += 1, R2346 += 1, R151 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R2410 += 1, R2346 += 1, R152 += 1 };
  s2 -> s1 [71, 74] { R2410 += 1, R2346 += 1, R152 += 1 };
  s2 -> s2 [71, 65535] { R2410 += 1, R2346 += 1, R151 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R2410 += 1, R2346 += 1, R152 += 1 };
  s2 -> s1 [76, 65535] { R2410 += 1, R2346 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R2410 += 1, R2346 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R2410 += 1, R2346 += 1, R151 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R2410 += 1, R2345 += 1, R2346 += 1 };
  s3 -> s4 [70, 70] { R2410 += 1, R2346 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R2410 += 1, R2346 += 1, R151 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R2410 += 1, R2346 += 1, R151 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R2410 += 1, R2346 += 1, R152 += 1 };
  s3 -> s1 [71, 74] { R2410 += 1, R2346 += 1, R152 += 1 };
  s3 -> s2 [71, 65535] { R2410 += 1, R2346 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R2410 += 1, R2346 += 1, R152 += 1 };
  s3 -> s1 [76, 65535] { R2410 += 1, R2346 += 1, R152 += 1 };
  s4 -> s4 [0, 74] { R2410 += 1, R2346 += 1, R152 += 1 };
  s4 -> s10 [75, 75] { R2410 += 1, R2346 += 1, R152 += 1 };
  s4 -> s4 [76, 65535] { R2410 += 1, R2346 += 1, R152 += 1 };
  s6 -> s4 [0, 74] { R2410 += 1, R2346 += 1, R152 += 1 };
  s6 -> s6 [0, 65535] { R2410 += 1, R2346 += 1, R151 += 1, R152 += 1 };
  s6 -> s10 [75, 75] { R2410 += 1, R2346 += 1, R152 += 1 };
  s6 -> s4 [76, 65535] { R2410 += 1, R2346 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R2410 += 1, R2346 += 1, R152 += 1 };
  s8 -> s8 [0, 65535] { R2410 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R2410 += 1, R2346 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R2410 += 1, R2346 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R2410 += 1, R2346 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R2410 += 1, R2346 += 1, R152 += 1 };
  s10 -> s12 [0, 65535] { R2410 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R2410 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R2410 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R2412 += 1, R2348 += 1, R155 += 1, R156 += 1 };
  s0 -> s2 [0, 65535] { R2412 += 1, R2347 += 1, R2348 += 1 };
  s0 -> s0 [0, 65535] { R2411 += 1, R2412 += 1 };
  s0 -> s3 [70, 70] { R2412 += 1, R2348 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R2412 += 1, R2348 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R2412 += 1, R2348 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R2412 += 1, R2348 += 1, R155 += 1, R156 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2412 += 1 };
  s1 -> s3 [70, 70] { R2412 += 1, R2348 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R2412 += 1, R2348 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R2412 += 1, R2348 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R2412 += 1, R2348 += 1, R155 += 1, R156 += 1 };
  s2 -> s2 [0, 65535] { R2412 += 1, R2347 += 1, R2348 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R2412 += 1, R2348 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R2412 += 1, R2348 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R2412 += 1, R2348 += 1, R155 += 1, R156 += 1 };
  s3 -> s3 [0, 65535] { R2412 += 1, R2348 += 1, R155 += 1, R156 += 1 };
  s3 -> s6 [0, 65535] { R2412 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2412 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2412 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R2414 += 1, R2350 += 1, R161 += 1, R162 += 1 };
  s0 -> s2 [0, 65535] { R2414 += 1, R2349 += 1, R2350 += 1 };
  s0 -> s0 [0, 65535] { R2413 += 1, R2414 += 1 };
  s0 -> s3 [70, 70] { R2414 += 1, R2350 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R2414 += 1, R2350 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R2414 += 1, R2350 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R2414 += 1, R2350 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535] { R2414 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R2414 += 1, R2350 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R2414 += 1, R2350 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R2414 += 1, R2350 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R2414 += 1, R2350 += 1, R161 += 1, R162 += 1 };
  s2 -> s2 [0, 65535] { R2414 += 1, R2349 += 1, R2350 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R2414 += 1, R2350 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R2414 += 1, R2350 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R2414 += 1, R2350 += 1, R161 += 1, R162 += 1 };
  s3 -> s3 [0, 65535] { R2414 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R2414 += 1 };
  s4 -> s4 [0, 65535] { R2414 += 1, R2350 += 1, R161 += 1, R162 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2414 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R2416 += 1, R2352 += 1, R167 += 1, R168 += 1 };
  s0 -> s2 [0, 65535] { R2416 += 1, R2351 += 1, R2352 += 1 };
  s0 -> s0 [0, 65535] { R2415 += 1, R2416 += 1 };
  s0 -> s3 [70, 70] { R2416 += 1, R2352 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R2416 += 1, R2352 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R2416 += 1, R2352 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R2416 += 1, R2352 += 1, R167 += 1, R168 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2416 += 1 };
  s1 -> s3 [70, 70] { R2416 += 1, R2352 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R2416 += 1, R2352 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R2416 += 1, R2352 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R2416 += 1, R2352 += 1, R167 += 1, R168 += 1 };
  s2 -> s2 [0, 65535] { R2416 += 1, R2351 += 1, R2352 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R2416 += 1, R2352 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R2416 += 1, R2352 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R2416 += 1, R2352 += 1, R167 += 1, R168 += 1 };
  s3 -> s3 [0, 65535] { R2416 += 1, R2352 += 1, R167 += 1, R168 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R2416 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2416 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2416 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R2418 += 1, R2354 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s2 [0, 69] { R2418 += 1, R2354 += 1, R175 += 1, R176 += 1 };
  s0 -> s3 [0, 69] { R2418 += 1, R2354 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s0 [0, 65535] { R2417 += 1, R2418 += 1 };
  s0 -> s4 [0, 65535] { R2418 += 1, R2353 += 1, R2354 += 1 };
  s0 -> s5 [70, 70] { R2418 += 1, R2354 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s6 [70, 70] { R2418 += 1, R2354 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s7 [70, 70] { R2418 += 1, R2354 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s8 [70, 70] { R2418 += 1, R2354 += 1, R175 += 1, R176 += 1 };
  s0 -> s9 [70, 70] { R2418 += 1, R2354 += 1, R175 += 1, R176 += 1 };
  s0 -> s10 [70, 70] { R2418 += 1, R2354 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s1 [71, 65535] { R2418 += 1, R2354 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s2 [71, 65535] { R2418 += 1, R2354 += 1, R175 += 1, R176 += 1 };
  s0 -> s3 [71, 65535] { R2418 += 1, R2354 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s1 [0, 69] { R2418 += 1, R2354 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s14 [0, 69] { R2418 += 1, R2354 += 1, R176 += 1 };
  s1 -> s11 [70, 70] { R2418 += 1, R2354 += 1, R176 += 1 };
  s1 -> s5 [70, 70] { R2418 += 1, R2354 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s15 [70, 70] { R2418 += 1, R2354 += 1, R176 += 1 };
  s1 -> s6 [70, 70] { R2418 += 1, R2354 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s1 [71, 65535] { R2418 += 1, R2354 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s14 [71, 65535] { R2418 += 1, R2354 += 1, R176 += 1 };
  s2 -> s1 [0, 69] { R2418 += 1, R2354 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [0, 69] { R2418 += 1, R2354 += 1, R175 += 1, R176 += 1 };
  s2 -> s3 [0, 69] { R2418 += 1, R2354 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s5 [70, 70] { R2418 += 1, R2354 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s6 [70, 70] { R2418 += 1, R2354 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s7 [70, 70] { R2418 += 1, R2354 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s8 [70, 70] { R2418 += 1, R2354 += 1, R175 += 1, R176 += 1 };
  s2 -> s9 [70, 70] { R2418 += 1, R2354 += 1, R175 += 1, R176 += 1 };
  s2 -> s10 [70, 70] { R2418 += 1, R2354 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s1 [71, 65535] { R2418 += 1, R2354 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [71, 65535] { R2418 += 1, R2354 += 1, R175 += 1, R176 += 1 };
  s2 -> s3 [71, 65535] { R2418 += 1, R2354 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s1 [0, 69] { R2418 += 1, R2354 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [0, 69] { R2418 += 1, R2354 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s5 [70, 70] { R2418 += 1, R2354 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s6 [70, 70] { R2418 += 1, R2354 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s7 [70, 70] { R2418 += 1, R2354 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s10 [70, 70] { R2418 += 1, R2354 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s1 [71, 65535] { R2418 += 1, R2354 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [71, 65535] { R2418 += 1, R2354 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s1 [0, 69] { R2418 += 1, R2354 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s2 [0, 69] { R2418 += 1, R2354 += 1, R175 += 1, R176 += 1 };
  s4 -> s3 [0, 69] { R2418 += 1, R2354 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s4 [0, 65535] { R2418 += 1, R2353 += 1, R2354 += 1 };
  s4 -> s5 [70, 70] { R2418 += 1, R2354 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s6 [70, 70] { R2418 += 1, R2354 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s7 [70, 70] { R2418 += 1, R2354 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s8 [70, 70] { R2418 += 1, R2354 += 1, R175 += 1, R176 += 1 };
  s4 -> s9 [70, 70] { R2418 += 1, R2354 += 1, R175 += 1, R176 += 1 };
  s4 -> s10 [70, 70] { R2418 += 1, R2354 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s1 [71, 65535] { R2418 += 1, R2354 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s2 [71, 65535] { R2418 += 1, R2354 += 1, R175 += 1, R176 += 1 };
  s4 -> s3 [71, 65535] { R2418 += 1, R2354 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s6 -> s11 [0, 65535] { R2418 += 1, R2354 += 1, R176 += 1 };
  s6 -> s6 [0, 65535] { R2418 += 1, R2354 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s8 -> s6 [0, 65535] { R2418 += 1, R2354 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s8 -> s8 [0, 65535] { R2418 += 1, R2354 += 1, R175 += 1, R176 += 1 };
  s8 -> s10 [0, 65535] { R2418 += 1, R2354 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s10 -> s6 [0, 65535] { R2418 += 1, R2354 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s10 -> s10 [0, 65535] { R2418 += 1, R2354 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s11 -> s12 [0, 65535] { R2418 += 1 };
  s11 -> s11 [0, 65535] { R2418 += 1, R2354 += 1, R176 += 1 };
  s11 -> s13 [0, 65535];
  s12 -> s12 [0, 65535] { R2418 += 1 };
  s12 -> s13 [0, 65535];
  s13 -> s13 [0, 65535];
  s14 -> s14 [0, 69] { R2418 += 1, R2354 += 1, R176 += 1 };
  s14 -> s13 [0, 65535];
  s14 -> s14 [0, 65535] { R2418 += 1 };
  s14 -> s11 [70, 70] { R2418 += 1, R2354 += 1, R176 += 1 };
  s14 -> s15 [70, 70] { R2418 += 1, R2354 += 1, R176 += 1 };
  s14 -> s14 [71, 65535] { R2418 += 1, R2354 += 1, R176 += 1 };
  s15 -> s15 [0, 65535] { R2418 += 1 };
  s15 -> s13 [0, 65535];
  accepting s12, s13, s14, s15, s11;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R2420 += 1, R2356 += 1, R185 += 1, R186 += 1 };
  s0 -> s2 [0, 65535] { R2420 += 1, R2355 += 1, R2356 += 1 };
  s0 -> s0 [0, 65535] { R2419 += 1, R2420 += 1 };
  s0 -> s3 [70, 70] { R2420 += 1, R2356 += 1, R185 += 1, R186 += 1 };
  s0 -> s4 [70, 70] { R2420 += 1, R2356 += 1, R185 += 1, R186 += 1 };
  s0 -> s1 [71, 65535] { R2420 += 1, R2356 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 69] { R2420 += 1, R2356 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 65535] { R2420 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R2420 += 1, R2356 += 1, R185 += 1, R186 += 1 };
  s1 -> s4 [70, 70] { R2420 += 1, R2356 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [71, 65535] { R2420 += 1, R2356 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [0, 69] { R2420 += 1, R2356 += 1, R185 += 1, R186 += 1 };
  s2 -> s2 [0, 65535] { R2420 += 1, R2355 += 1, R2356 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R2420 += 1, R2356 += 1, R185 += 1, R186 += 1 };
  s2 -> s4 [70, 70] { R2420 += 1, R2356 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [71, 65535] { R2420 += 1, R2356 += 1, R185 += 1, R186 += 1 };
  s3 -> s3 [0, 65535] { R2420 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2420 += 1, R2356 += 1, R185 += 1, R186 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R2420 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2420 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R2422 += 1, R2358 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s0 -> s2 [0, 69] { R2422 += 1, R2358 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s0 -> s3 [0, 69] { R2422 += 1, R2358 += 1, R1467 += 1, R1468 += 1 };
  s0 -> s4 [0, 65535] { R2422 += 1, R2357 += 1, R2358 += 1 };
  s0 -> s0 [0, 65535] { R2421 += 1, R2422 += 1 };
  s0 -> s5 [70, 70] { R2422 += 1, R2358 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s0 -> s6 [70, 70] { R2422 += 1, R2358 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s0 -> s7 [70, 70] { R2422 += 1, R2358 += 1, R1467 += 1, R1468 += 1 };
  s0 -> s8 [70, 70] { R2422 += 1, R2358 += 1, R1467 += 1, R1468 += 1 };
  s0 -> s9 [70, 70] { R2422 += 1, R2358 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s0 -> s10 [70, 70] { R2422 += 1, R2358 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s0 -> s1 [71, 65535] { R2422 += 1, R2358 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s0 -> s2 [71, 65535] { R2422 += 1, R2358 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s0 -> s3 [71, 65535] { R2422 += 1, R2358 += 1, R1467 += 1, R1468 += 1 };
  s1 -> s1 [0, 69] { R2422 += 1, R2358 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s1 -> s2 [0, 69] { R2422 += 1, R2358 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s1 -> s5 [70, 70] { R2422 += 1, R2358 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s1 -> s6 [70, 70] { R2422 += 1, R2358 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s1 -> s9 [70, 70] { R2422 += 1, R2358 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s1 -> s10 [70, 70] { R2422 += 1, R2358 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s1 -> s1 [71, 65535] { R2422 += 1, R2358 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s1 -> s2 [71, 65535] { R2422 += 1, R2358 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s2 -> s2 [0, 69] { R2422 += 1, R2358 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s2 -> s14 [0, 69] { R2422 += 1, R2358 += 1, R1468 += 1 };
  s2 -> s15 [70, 70] { R2422 += 1, R2358 += 1, R1468 += 1 };
  s2 -> s11 [70, 70] { R2422 += 1, R2358 += 1, R1468 += 1 };
  s2 -> s5 [70, 70] { R2422 += 1, R2358 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s2 -> s10 [70, 70] { R2422 += 1, R2358 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s2 -> s2 [71, 65535] { R2422 += 1, R2358 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s2 -> s14 [71, 65535] { R2422 += 1, R2358 += 1, R1468 += 1 };
  s3 -> s1 [0, 69] { R2422 += 1, R2358 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s3 -> s2 [0, 69] { R2422 += 1, R2358 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s3 -> s3 [0, 69] { R2422 += 1, R2358 += 1, R1467 += 1, R1468 += 1 };
  s3 -> s5 [70, 70] { R2422 += 1, R2358 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s3 -> s6 [70, 70] { R2422 += 1, R2358 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s3 -> s7 [70, 70] { R2422 += 1, R2358 += 1, R1467 += 1, R1468 += 1 };
  s3 -> s8 [70, 70] { R2422 += 1, R2358 += 1, R1467 += 1, R1468 += 1 };
  s3 -> s9 [70, 70] { R2422 += 1, R2358 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s3 -> s10 [70, 70] { R2422 += 1, R2358 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s3 -> s1 [71, 65535] { R2422 += 1, R2358 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s3 -> s2 [71, 65535] { R2422 += 1, R2358 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s3 -> s3 [71, 65535] { R2422 += 1, R2358 += 1, R1467 += 1, R1468 += 1 };
  s4 -> s1 [0, 69] { R2422 += 1, R2358 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s4 -> s2 [0, 69] { R2422 += 1, R2358 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s4 -> s3 [0, 69] { R2422 += 1, R2358 += 1, R1467 += 1, R1468 += 1 };
  s4 -> s4 [0, 65535] { R2422 += 1, R2357 += 1, R2358 += 1 };
  s4 -> s5 [70, 70] { R2422 += 1, R2358 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s4 -> s6 [70, 70] { R2422 += 1, R2358 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s4 -> s7 [70, 70] { R2422 += 1, R2358 += 1, R1467 += 1, R1468 += 1 };
  s4 -> s8 [70, 70] { R2422 += 1, R2358 += 1, R1467 += 1, R1468 += 1 };
  s4 -> s9 [70, 70] { R2422 += 1, R2358 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s4 -> s10 [70, 70] { R2422 += 1, R2358 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s4 -> s1 [71, 65535] { R2422 += 1, R2358 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s4 -> s2 [71, 65535] { R2422 += 1, R2358 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s4 -> s3 [71, 65535] { R2422 += 1, R2358 += 1, R1467 += 1, R1468 += 1 };
  s6 -> s6 [0, 65535] { R2422 += 1, R2358 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s6 -> s10 [0, 65535] { R2422 += 1, R2358 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s7 -> s6 [0, 65535] { R2422 += 1, R2358 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s7 -> s7 [0, 65535] { R2422 += 1, R2358 += 1, R1467 += 1, R1468 += 1 };
  s7 -> s10 [0, 65535] { R2422 += 1, R2358 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s10 -> s11 [0, 65535] { R2422 += 1, R2358 += 1, R1468 += 1 };
  s10 -> s10 [0, 65535] { R2422 += 1, R2358 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s11 -> s12 [0, 65535] { R2422 += 1 };
  s11 -> s13 [0, 65535];
  s11 -> s11 [0, 65535] { R2422 += 1, R2358 += 1, R1468 += 1 };
  s12 -> s12 [0, 65535] { R2422 += 1 };
  s12 -> s13 [0, 65535];
  s13 -> s13 [0, 65535];
  s14 -> s14 [0, 69] { R2422 += 1, R2358 += 1, R1468 += 1 };
  s14 -> s13 [0, 65535];
  s14 -> s14 [0, 65535] { R2422 += 1 };
  s14 -> s15 [70, 70] { R2422 += 1, R2358 += 1, R1468 += 1 };
  s14 -> s11 [70, 70] { R2422 += 1, R2358 += 1, R1468 += 1 };
  s14 -> s14 [71, 65535] { R2422 += 1, R2358 += 1, R1468 += 1 };
  s15 -> s15 [0, 65535] { R2422 += 1 };
  s15 -> s13 [0, 65535];
  accepting s12, s13, s14, s15, s11;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R2424 += 1, R2360 += 1, R2267 += 1, R2268 += 1 };
  s0 -> s2 [0, 69] { R2424 += 1, R2360 += 1, R2268 += 1, R2270 += 1 };
  s0 -> s3 [0, 69] { R2424 += 1, R2360 += 1, R2268 += 1, R2269 += 1, R2270 += 1 };
  s0 -> s0 [0, 65535] { R2423 += 1, R2424 += 1 };
  s0 -> s4 [0, 65535] { R2424 += 1, R2359 += 1, R2360 += 1 };
  s0 -> s5 [70, 70] { R2424 += 1, R2360 += 1, R2268 += 1, R2269 += 1, R2270 += 1 };
  s0 -> s6 [70, 70] { R2424 += 1, R2360 += 1, R2268 += 1, R2270 += 1 };
  s0 -> s7 [70, 70] { R2424 += 1, R2360 += 1, R2268 += 1, R2269 += 1, R2270 += 1 };
  s0 -> s8 [70, 70] { R2424 += 1, R2360 += 1, R2268 += 1, R2270 += 1 };
  s0 -> s9 [70, 70] { R2424 += 1, R2360 += 1, R2267 += 1, R2268 += 1 };
  s0 -> s10 [70, 70] { R2424 += 1, R2360 += 1, R2267 += 1, R2268 += 1 };
  s0 -> s2 [71, 74] { R2424 += 1, R2360 += 1, R2268 += 1, R2270 += 1 };
  s0 -> s1 [71, 65535] { R2424 += 1, R2360 += 1, R2267 += 1, R2268 += 1 };
  s0 -> s3 [71, 65535] { R2424 += 1, R2360 += 1, R2268 += 1, R2269 += 1, R2270 += 1 };
  s0 -> s2 [78, 65535] { R2424 += 1, R2360 += 1, R2268 += 1, R2270 += 1 };
  s1 -> s1 [0, 69] { R2424 += 1, R2360 += 1, R2267 += 1, R2268 += 1 };
  s1 -> s2 [0, 69] { R2424 += 1, R2360 += 1, R2268 += 1, R2270 += 1 };
  s1 -> s3 [0, 69] { R2424 += 1, R2360 += 1, R2268 += 1, R2269 += 1, R2270 += 1 };
  s1 -> s5 [70, 70] { R2424 += 1, R2360 += 1, R2268 += 1, R2269 += 1, R2270 += 1 };
  s1 -> s6 [70, 70] { R2424 += 1, R2360 += 1, R2268 += 1, R2270 += 1 };
  s1 -> s7 [70, 70] { R2424 += 1, R2360 += 1, R2268 += 1, R2269 += 1, R2270 += 1 };
  s1 -> s8 [70, 70] { R2424 += 1, R2360 += 1, R2268 += 1, R2270 += 1 };
  s1 -> s9 [70, 70] { R2424 += 1, R2360 += 1, R2267 += 1, R2268 += 1 };
  s1 -> s10 [70, 70] { R2424 += 1, R2360 += 1, R2267 += 1, R2268 += 1 };
  s1 -> s2 [71, 74] { R2424 += 1, R2360 += 1, R2268 += 1, R2270 += 1 };
  s1 -> s1 [71, 65535] { R2424 += 1, R2360 += 1, R2267 += 1, R2268 += 1 };
  s1 -> s3 [71, 65535] { R2424 += 1, R2360 += 1, R2268 += 1, R2269 += 1, R2270 += 1 };
  s1 -> s2 [78, 65535] { R2424 += 1, R2360 += 1, R2268 += 1, R2270 += 1 };
  s2 -> s2 [0, 69] { R2424 += 1, R2360 += 1, R2268 += 1, R2270 += 1 };
  s2 -> s11 [0, 65535];
  s2 -> s2 [0, 65535] { R2424 += 1 };
  s2 -> s6 [70, 70] { R2424 += 1, R2360 += 1, R2268 += 1, R2270 += 1 };
  s2 -> s8 [70, 70] { R2424 += 1, R2360 += 1, R2268 += 1, R2270 += 1 };
  s2 -> s2 [71, 74] { R2424 += 1, R2360 += 1, R2268 += 1, R2270 += 1 };
  s2 -> s2 [78, 65535] { R2424 += 1, R2360 += 1, R2268 += 1, R2270 += 1 };
  s3 -> s2 [0, 69] { R2424 += 1, R2360 += 1, R2268 += 1, R2270 += 1 };
  s3 -> s3 [0, 69] { R2424 += 1, R2360 += 1, R2268 += 1, R2269 += 1, R2270 += 1 };
  s3 -> s5 [70, 70] { R2424 += 1, R2360 += 1, R2268 += 1, R2269 += 1, R2270 += 1 };
  s3 -> s6 [70, 70] { R2424 += 1, R2360 += 1, R2268 += 1, R2270 += 1 };
  s3 -> s7 [70, 70] { R2424 += 1, R2360 += 1, R2268 += 1, R2269 += 1, R2270 += 1 };
  s3 -> s8 [70, 70] { R2424 += 1, R2360 += 1, R2268 += 1, R2270 += 1 };
  s3 -> s2 [71, 74] { R2424 += 1, R2360 += 1, R2268 += 1, R2270 += 1 };
  s3 -> s3 [71, 65535] { R2424 += 1, R2360 += 1, R2268 += 1, R2269 += 1, R2270 += 1 };
  s3 -> s2 [78, 65535] { R2424 += 1, R2360 += 1, R2268 += 1, R2270 += 1 };
  s4 -> s1 [0, 69] { R2424 += 1, R2360 += 1, R2267 += 1, R2268 += 1 };
  s4 -> s2 [0, 69] { R2424 += 1, R2360 += 1, R2268 += 1, R2270 += 1 };
  s4 -> s3 [0, 69] { R2424 += 1, R2360 += 1, R2268 += 1, R2269 += 1, R2270 += 1 };
  s4 -> s4 [0, 65535] { R2424 += 1, R2359 += 1, R2360 += 1 };
  s4 -> s5 [70, 70] { R2424 += 1, R2360 += 1, R2268 += 1, R2269 += 1, R2270 += 1 };
  s4 -> s6 [70, 70] { R2424 += 1, R2360 += 1, R2268 += 1, R2270 += 1 };
  s4 -> s7 [70, 70] { R2424 += 1, R2360 += 1, R2268 += 1, R2269 += 1, R2270 += 1 };
  s4 -> s8 [70, 70] { R2424 += 1, R2360 += 1, R2268 += 1, R2270 += 1 };
  s4 -> s9 [70, 70] { R2424 += 1, R2360 += 1, R2267 += 1, R2268 += 1 };
  s4 -> s10 [70, 70] { R2424 += 1, R2360 += 1, R2267 += 1, R2268 += 1 };
  s4 -> s2 [71, 74] { R2424 += 1, R2360 += 1, R2268 += 1, R2270 += 1 };
  s4 -> s1 [71, 65535] { R2424 += 1, R2360 += 1, R2267 += 1, R2268 += 1 };
  s4 -> s3 [71, 65535] { R2424 += 1, R2360 += 1, R2268 += 1, R2269 += 1, R2270 += 1 };
  s4 -> s2 [78, 65535] { R2424 += 1, R2360 += 1, R2268 += 1, R2270 += 1 };
  s5 -> s6 [0, 74] { R2424 += 1, R2360 += 1, R2268 += 1, R2270 += 1 };
  s5 -> s5 [0, 65535] { R2424 += 1, R2360 += 1, R2268 += 1, R2269 += 1, R2270 += 1 };
  s5 -> s6 [78, 65535] { R2424 += 1, R2360 += 1, R2268 += 1, R2270 += 1 };
  s6 -> s6 [0, 74] { R2424 += 1, R2360 += 1, R2268 += 1, R2270 += 1 };
  s6 -> s11 [0, 65535];
  s6 -> s6 [0, 65535] { R2424 += 1 };
  s6 -> s6 [78, 65535] { R2424 += 1, R2360 += 1, R2268 += 1, R2270 += 1 };
  s8 -> s11 [0, 65535];
  s8 -> s8 [0, 65535] { R2424 += 1 };
  s9 -> s6 [0, 74] { R2424 += 1, R2360 += 1, R2268 += 1, R2270 += 1 };
  s9 -> s5 [0, 65535] { R2424 += 1, R2360 += 1, R2268 += 1, R2269 += 1, R2270 += 1 };
  s9 -> s9 [0, 65535] { R2424 += 1, R2360 += 1, R2267 += 1, R2268 += 1 };
  s9 -> s6 [78, 65535] { R2424 += 1, R2360 += 1, R2268 += 1, R2270 += 1 };
  s11 -> s11 [0, 65535];
  accepting s2, s6, s8, s11;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R2304 && R3 = R2424 && R25 - R2424 = -1 && R26 = R2424 && R27 - R2424 = -1 && R28 = R2424 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R2272 + -1*R2268 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R2272 + -1*R2268 - R130 = 0 && R129 + R2271 + R2267 = 0 && R131 + R2273 + R2269 = 0 && R132 + R2274 + R2270 = 0 && R2303 = 0 && R2335 = 0 && R2336 = 0 && R2345 = 0 && R2346 = 0 && R2353 = 0 && R2354 = 0 && R2357 = 0 && R2358 = 0 && R2359 = 0 && R2360 = 0 && R2361 = 0 && R2362 = R2424 && R2363 = 0 && R2364 = R2424 && R2365 = 0 && R2366 = R2424 && R2367 = 0 && R2368 = R2424 && R2369 = 0 && R2370 = R2424 && R2371 = 0 && R2372 = R2424 && R2373 = 0 && R2374 = R2424 && R2375 = 0 && R2376 = R2424 && R2377 = 0 && R2378 = R2424 && R2379 = 0 && R2380 = R2424 && R2381 = 0 && R2382 = R2424 && R2383 = 0 && R2384 = R2424 && R2385 = 0 && R2386 = R2424 && R2387 = 0 && R2388 = R2424 && R2389 = 0 && R2390 = R2424 && R2391 = 0 && R2392 = R2424 && R2393 = 0 && R2394 = R2424 && R2395 = 0 && R2396 = R2424 && R2397 = 0 && R2398 = R2424 && R2399 = 0 && R2400 = R2424 && R2401 = 0 && R2402 = R2424 && R2403 = 0 && R2404 = R2424 && R2405 = 0 && R2406 = R2424 && R2407 = 0 && R2408 = R2424 && R2409 = 0 && R2410 = R2424 && R2411 = 0 && R2412 = R2424 && R2413 = 0 && R2414 = R2424 && R2415 = 0 && R2416 = R2424 && R2417 = 0 && R2418 = R2424 && R2419 = 0 && R2420 = R2424 && R2421 = 0 && R2422 = R2424 && R2423 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R2272 + -1*R2268 - R130 < 1 && -1 < R2304 && 0 < R2424 && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R2272 + -1*R2268 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R191 + R187 = 0 && R114 + R192 + R188 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R2272 + -1*R2268 - R130 = 0 || R130 + R2272 + R2268 < 1) && (R81 + R158 + R155 = 0 || R130 + R2272 + R2268 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R2272 + -1*R2268 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R2272 + R2268 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R2272 + -1*R2268 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R2272 + R2268 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R2272 + -1*R2268 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R2272 + R2268 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 != 0 || R112 + R190 + R186 + -1*R2272 + -1*R2268 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R2272 + R2268 = 0)) && (R113 + R191 + R187 != 0 || R83 + R160 + R157 + -1*R192 + -1*R188 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R1472 + R1467 != 0 || R120 + R1473 + R1468 + -1*R2272 + -1*R2268 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R2272 + R2268 = 0)) && (R2275 != 0 || R2276 = R2304 || (R22 = 0 && R2304 = 0)) && (R2277 != 0 || R2278 = R2304 || (R22 = 0 && R2304 = 0)) && (R2279 != 0 || R2280 = R2304 || (R22 = 0 && R2304 = 0)) && (R2281 != 0 || R2282 = R2304 || (R22 = 0 && R2304 = 0)) && (R2283 != 0 || R2284 = R2304 || (R22 = 0 && R2304 = 0)) && (R2285 != 0 || R2286 = R2304 || (R22 = 0 && R2304 = 0)) && (R2287 != 0 || R2288 = R2304 || (R22 = 0 && R2304 = 0)) && (R2289 != 0 || R2290 = R2304 || (R22 = 0 && R2304 = 0)) && (R2291 != 0 || R2292 = R2304 || (R22 = 0 && R2304 = 0)) && (R2293 != 0 || R2294 = R2304 || (R22 = 0 && R2304 = 0)) && (R2295 != 0 || R2296 = R2304 || (R22 = 0 && R2304 = 0)) && (R2297 != 0 || R2298 = R2304 || (R22 = 0 && R2304 = 0)) && (R2299 != 0 || R2300 = R2304 || (R22 = 0 && R2304 = 0)) && (R2301 != 0 || R2302 = R2304 || (R22 = 0 && R2304 = 0)) && (R23 = 0 || (R2333 = 0 && R2334 = 0)) && (R23 = 0 || (R2337 = 0 && R2338 = 0)) && (R23 = 0 || (R2339 = 0 && R2340 = 0)) && (R23 = 0 || (R2341 = 0 && R2342 = 0)) && (R23 = 0 || (R2343 = 0 && R2344 = 0)) && (R23 = 0 || (R2347 = 0 && R2348 = 0)) && (R23 = 0 || (R2349 = 0 && R2350 = 0)) && (R23 = 0 || (R2351 = 0 && R2352 = 0)) && (R23 = 0 || (R2355 = 0 && R2356 = 0)) && (R24 = 0 || (R2305 = 0 && R2306 = 0)) && (R24 = 0 || (R2307 = 0 && R2308 = 0)) && (R24 = 0 || (R2309 = 0 && R2310 = 0)) && (R24 = 0 || (R2311 = 0 && R2312 = 0)) && (R24 = 0 || (R2313 = 0 && R2314 = 0)) && (R24 = 0 || (R2315 = 0 && R2316 = 0)) && (R24 = 0 || (R2317 = 0 && R2318 = 0)) && (R24 = 0 || (R2319 = 0 && R2320 = 0)) && (R24 = 0 || (R2321 = 0 && R2322 = 0)) && (R24 = 0 || (R2323 = 0 && R2324 = 0)) && (R24 = 0 || (R2325 = 0 && R2326 = 0)) && (R24 = 0 || (R2327 = 0 && R2328 = 0)) && (R24 = 0 || (R2329 = 0 && R2330 = 0)) && (R24 = 0 || (R2331 = 0 && R2332 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R2272 + R2268 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R2272 + R2268 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R2272 + R2268 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 = 0 || (R83 + R160 + R157 = 0 && R130 + R2272 + R2268 = 0)) && (R113 + R191 + R187 = 0 || R83 + R160 + R157 < 1) && (R119 + R1472 + R1467 = 0 || (R83 + R160 + R157 = 0 && R130 + R2272 + R2268 = 0)) && (R123 + R1476 + R1471 = 0 || (R121 + R1474 + R1469 = 0 && R122 + R1475 + R1470 = 0)) && (R2275 = 0 || (R22 = 0 && R2304 = 0)) && (R2277 = 0 || (R22 = 0 && R2304 = 0)) && (R2279 = 0 || (R22 = 0 && R2304 = 0)) && (R2281 = 0 || (R22 = 0 && R2304 = 0)) && (R2283 = 0 || (R22 = 0 && R2304 = 0)) && (R2285 = 0 || (R22 = 0 && R2304 = 0)) && (R2287 = 0 || (R22 = 0 && R2304 = 0)) && (R2289 = 0 || (R22 = 0 && R2304 = 0)) && (R2291 = 0 || (R22 = 0 && R2304 = 0)) && (R2293 = 0 || (R22 = 0 && R2304 = 0)) && (R2295 = 0 || (R22 = 0 && R2304 = 0)) && (R2297 = 0 || (R22 = 0 && R2304 = 0)) && (R2299 = 0 || (R22 = 0 && R2304 = 0)) && (R2301 = 0 || (R22 = 0 && R2304 = 0));
// End of Parikh automata intersection problem
