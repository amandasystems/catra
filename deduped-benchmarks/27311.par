// Parikh automata intersection problem, generated by OSTRICH+
counter int R0, R1, R16, R17, R18, R19, R2, R20, R21, R22, R23, R24, R25, R4, R5;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 60];
  s0 -> s1 [61, 61];
  s0 -> s0 [62, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R1 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60] { R5 += 1 };
  s0 -> s0 [0, 65535] { R4 += 1, R5 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535] { R5 += 1 };
  s1 -> s1 [0, 60] { R5 += 1 };
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535] { R5 += 1 };
  s2 -> s2 [0, 65535];
  accepting s2;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535];
  accepting s0;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 65535] { R21 += 1, R0 += 1 };
  s0 -> s0 [0, 65535] { R20 += 1, R21 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R21 += 1, R0 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s0 [0, 65535] { R22 += 1, R23 += 1 };
  s0 -> s1 [0, 65535] { R23 += 1, R16 += 1, R17 += 1 };
  s0 -> s2 [10, 10] { R23 += 1, R17 += 1 };
  s1 -> s1 [0, 65535] { R23 += 1, R16 += 1, R17 += 1 };
  s1 -> s2 [10, 10] { R23 += 1, R17 += 1 };
  s2 -> s2 [0, 65535] { R23 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s0 [0, 65535] { R24 += 1, R25 += 1 };
  s0 -> s1 [0, 65535] { R25 += 1, R19 += 1, R2 += 1 };
  s0 -> s2 [0, 65535] { R25 += 1, R18 += 1, R19 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R25 += 1, R19 += 1, R2 += 1 };
  s1 -> s4 [0, 65535] { R25 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R25 += 1, R19 += 1, R2 += 1 };
  s2 -> s2 [0, 65535] { R25 += 1, R18 += 1, R19 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R25 += 1 };
  accepting s3, s4, s2, s1, s0;
};
};
constraint R1 - R25 = 1 && R4 = 0 && R5 = R25 && R16 = 0 && R20 = 0 && R21 = R25 && R22 = 0 && R23 = R25 && R24 = 0 && R0 != 0 && -1 < R25 && (R0 != R17 || R17 = 1 || R17 < 0) && (R17 != 1 || -1 < R0) && (R18 != 0 || ((R2 != 0 || ((R0 != R19 || R19 = 1 || R19 < 0) && (R0 = R19 || R19 = 1 || R0 < 1))) && (R2 = 0 || ((R0 != R19 || R19 = 1 || R19 < 0) && (R19 != 1 || -1 < R0) && (R0 = R19 || R19 = 1))))) && (R0 = R17 || R17 = 1) && (R18 = 0 || (R2 = 0 && R0 < 0));
// End of Parikh automata intersection problem
