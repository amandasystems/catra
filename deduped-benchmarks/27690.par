// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R12, R17, R18, R19, R2, R20, R21, R22, R23, R24, R25, R26, R2620, R2621, R2622, R2623, R2624, R2625, R2626, R2627, R2628, R2629, R27, R2734, R2735, R2736, R2737, R2738, R2739, R2740, R2741, R2742, R2743, R2744, R2745, R2746, R2747, R2748, R2749, R2750, R2751, R2752, R2753, R2754, R2755, R2756, R2757, R2758, R2759, R2760, R2761, R2762, R2763, R2764, R2765, R2766, R2767, R2768, R2769, R2770, R2771, R2772, R2773, R2774, R2775, R2776, R2777, R2778, R2779, R2780, R2781, R2782, R2783, R2784, R2785, R2786, R2787, R2788, R2789, R2790, R2791, R2792, R2793, R2794, R2795, R2796, R2797, R2798, R2799, R2800, R2801, R2802, R2803, R2804, R2805, R2806, R2807, R2808, R2809, R2810, R2811, R2812, R2813, R2814, R2815, R2816, R2817, R2818, R2819, R2820, R2821, R2822, R2823, R2824, R2825, R2826, R2827, R2828, R2829, R2830, R2831, R2832, R2833, R2834, R2835, R2836, R2837, R3, R38, R4, R40, R42, R43, R46, R47, R48, R52, R53, R56, R57, R58, R62, R63, R66, R67, R68, R69, R70, R71, R72, R73, R74, R75, R76, R77, R78, R79, R8;
synchronised {  // Automata constraining P64
automaton P64_0 {
  init s0;
  s0 -> s1 [119, 119];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [75, 75];
  s0 -> s0 [76, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [75, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R2 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R11 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 74];
  s0 -> s0 [0, 65535] { R12 += 1 };
  s0 -> s2 [75, 75];
  s0 -> s1 [76, 65535];
  s1 -> s1 [0, 74];
  s1 -> s2 [75, 75];
  s1 -> s1 [76, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R21 += 1 };
  s0 -> s0 [0, 65535] { R20 += 1, R21 += 1 };
  s0 -> s2 [9, 13] { R21 += 1 };
  s0 -> s1 [14, 31] { R21 += 1 };
  s0 -> s2 [32, 32] { R21 += 1 };
  s0 -> s1 [33, 65535] { R21 += 1 };
  s1 -> s1 [0, 65535] { R21 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R21 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s0 [0, 65535] { R22 += 1, R23 += 1 };
  s0 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s1 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R25 += 1 };
  s0 -> s0 [0, 65535] { R24 += 1, R25 += 1 };
  s0 -> s2 [9, 13] { R25 += 1 };
  s0 -> s1 [14, 31] { R25 += 1 };
  s0 -> s2 [32, 32] { R25 += 1 };
  s0 -> s1 [33, 65535] { R25 += 1 };
  s1 -> s1 [0, 65535] { R25 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R25 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R26 += 1, R27 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R2758 += 1, R2759 += 1 };
  s0 -> s1 [0, 65535] { R2759 += 1, R19 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R2759 += 1, R19 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 74] { R2761 += 1 };
  s0 -> s0 [0, 65535] { R2760 += 1, R2761 += 1 };
  s0 -> s2 [75, 75] { R2761 += 1 };
  s0 -> s3 [75, 75] { R2761 += 1 };
  s0 -> s1 [88, 65535] { R2761 += 1 };
  s1 -> s1 [0, 74] { R2761 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R2761 += 1 };
  s1 -> s3 [75, 75] { R2761 += 1 };
  s1 -> s1 [88, 65535] { R2761 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 75] { R2761 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [88, 65535] { R2761 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 74] { R2763 += 1, R38 += 1 };
  s0 -> s0 [0, 65535] { R2762 += 1, R2763 += 1 };
  s0 -> s2 [75, 75] { R2763 += 1, R38 += 1 };
  s0 -> s3 [75, 75] { R2763 += 1, R38 += 1 };
  s0 -> s1 [76, 65535] { R2763 += 1, R38 += 1 };
  s1 -> s1 [0, 74] { R2763 += 1, R38 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R2763 += 1, R38 += 1 };
  s1 -> s3 [75, 75] { R2763 += 1, R38 += 1 };
  s1 -> s1 [76, 65535] { R2763 += 1, R38 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2763 += 1, R38 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 74] { R2765 += 1, R40 += 1 };
  s0 -> s0 [0, 65535] { R2764 += 1, R2765 += 1 };
  s0 -> s2 [75, 75] { R2765 += 1, R40 += 1 };
  s0 -> s3 [75, 75] { R2765 += 1, R40 += 1 };
  s0 -> s1 [76, 65535] { R2765 += 1, R40 += 1 };
  s1 -> s1 [0, 74] { R2765 += 1, R40 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R2765 += 1, R40 += 1 };
  s1 -> s3 [75, 75] { R2765 += 1, R40 += 1 };
  s1 -> s1 [76, 65535] { R2765 += 1, R40 += 1 };
  s2 -> s2 [0, 65535] { R2765 += 1, R40 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 74] { R2767 += 1, R42 += 1, R43 += 1 };
  s0 -> s0 [0, 65535] { R2766 += 1, R2767 += 1 };
  s0 -> s2 [75, 75] { R2767 += 1, R42 += 1, R43 += 1 };
  s0 -> s3 [75, 75] { R2767 += 1, R42 += 1, R43 += 1 };
  s0 -> s1 [76, 65535] { R2767 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 74] { R2767 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R2767 += 1, R42 += 1, R43 += 1 };
  s1 -> s3 [75, 75] { R2767 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [76, 65535] { R2767 += 1, R42 += 1, R43 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2767 += 1, R42 += 1, R43 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 74] { R2769 += 1, R46 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R2768 += 1, R2769 += 1 };
  s0 -> s2 [75, 75] { R2769 += 1, R46 += 1, R47 += 1 };
  s0 -> s3 [75, 75] { R2769 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [76, 65535] { R2769 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 74] { R2769 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R2769 += 1, R46 += 1, R47 += 1 };
  s1 -> s3 [75, 75] { R2769 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [76, 65535] { R2769 += 1, R46 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2769 += 1, R46 += 1, R47 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 74] { R2771 += 1, R52 += 1, R53 += 1 };
  s0 -> s0 [0, 65535] { R2770 += 1, R2771 += 1 };
  s0 -> s2 [75, 75] { R2771 += 1, R52 += 1, R53 += 1 };
  s0 -> s3 [75, 75] { R2771 += 1, R52 += 1, R53 += 1 };
  s0 -> s1 [76, 65535] { R2771 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 74] { R2771 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R2771 += 1, R52 += 1, R53 += 1 };
  s1 -> s3 [75, 75] { R2771 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [76, 65535] { R2771 += 1, R52 += 1, R53 += 1 };
  s2 -> s2 [0, 65535] { R2771 += 1, R52 += 1, R53 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 74] { R2773 += 1, R56 += 1, R57 += 1 };
  s0 -> s0 [0, 65535] { R2772 += 1, R2773 += 1 };
  s0 -> s2 [75, 75] { R2773 += 1, R56 += 1, R57 += 1 };
  s0 -> s3 [75, 75] { R2773 += 1, R56 += 1, R57 += 1 };
  s0 -> s1 [76, 65535] { R2773 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 74] { R2773 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R2773 += 1, R56 += 1, R57 += 1 };
  s1 -> s3 [75, 75] { R2773 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [76, 65535] { R2773 += 1, R56 += 1, R57 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2773 += 1, R56 += 1, R57 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 74] { R2775 += 1, R62 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R2774 += 1, R2775 += 1 };
  s0 -> s2 [75, 75] { R2775 += 1, R62 += 1, R63 += 1 };
  s0 -> s3 [75, 75] { R2775 += 1, R62 += 1, R63 += 1 };
  s0 -> s1 [76, 65535] { R2775 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 74] { R2775 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R2775 += 1, R62 += 1, R63 += 1 };
  s1 -> s3 [75, 75] { R2775 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [76, 65535] { R2775 += 1, R62 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2775 += 1, R62 += 1, R63 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 74] { R2795 += 1 };
  s0 -> s0 [0, 65535] { R2794 += 1, R2795 += 1 };
  s0 -> s2 [75, 75] { R2795 += 1 };
  s0 -> s1 [76, 65535] { R2795 += 1 };
  s1 -> s1 [0, 74] { R2795 += 1 };
  s1 -> s2 [75, 75] { R2795 += 1 };
  s1 -> s1 [76, 65535] { R2795 += 1 };
  s2 -> s2 [0, 65535] { R2795 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s0 [0, 65535] { R2796 += 1, R2797 += 1 };
  s0 -> s1 [0, 65535] { R2797 += 1, R1 += 1 };
  s1 -> s1 [0, 65535] { R2797 += 1, R1 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 74] { R2799 += 1 };
  s0 -> s2 [0, 65535] { R2799 += 1, R8 += 1 };
  s0 -> s0 [0, 65535] { R2798 += 1, R2799 += 1 };
  s0 -> s3 [75, 75] { R2799 += 1 };
  s0 -> s1 [76, 65535] { R2799 += 1 };
  s1 -> s1 [0, 74] { R2799 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [75, 75] { R2799 += 1 };
  s1 -> s1 [76, 65535] { R2799 += 1 };
  s2 -> s1 [0, 74] { R2799 += 1 };
  s2 -> s2 [0, 65535] { R2799 += 1, R8 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [75, 75] { R2799 += 1 };
  s2 -> s1 [76, 65535] { R2799 += 1 };
  s3 -> s3 [0, 65535] { R2799 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 74] { R2801 += 1, R2739 += 1 };
  s0 -> s0 [0, 65535] { R2800 += 1, R2801 += 1 };
  s0 -> s2 [0, 65535] { R2801 += 1, R2738 += 1, R2739 += 1 };
  s0 -> s1 [76, 65535] { R2801 += 1, R2739 += 1 };
  s1 -> s1 [0, 74] { R2801 += 1, R2739 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2801 += 1 };
  s1 -> s1 [76, 65535] { R2801 += 1, R2739 += 1 };
  s2 -> s1 [0, 74] { R2801 += 1, R2739 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2801 += 1, R2738 += 1, R2739 += 1 };
  s2 -> s1 [76, 65535] { R2801 += 1, R2739 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s0 [0, 65535] { R2802 += 1, R2803 += 1 };
  s0 -> s1 [0, 65535] { R2803 += 1, R2741 += 1, R17 += 1 };
  s0 -> s2 [0, 65535] { R2803 += 1, R2740 += 1, R2741 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2803 += 1, R2741 += 1, R17 += 1 };
  s1 -> s4 [0, 65535] { R2803 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R2803 += 1, R2741 += 1, R17 += 1 };
  s2 -> s2 [0, 65535] { R2803 += 1, R2740 += 1, R2741 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2803 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 75] { R2805 += 1, R2743 += 1 };
  s0 -> s2 [0, 65535] { R2805 += 1, R2742 += 1, R2743 += 1 };
  s0 -> s0 [0, 65535] { R2804 += 1, R2805 += 1 };
  s0 -> s1 [87, 65535] { R2805 += 1, R2743 += 1 };
  s1 -> s1 [0, 75] { R2805 += 1, R2743 += 1 };
  s1 -> s1 [0, 65535] { R2805 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [87, 65535] { R2805 += 1, R2743 += 1 };
  s2 -> s1 [0, 75] { R2805 += 1, R2743 += 1 };
  s2 -> s2 [0, 65535] { R2805 += 1, R2742 += 1, R2743 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [87, 65535] { R2805 += 1, R2743 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R2806 += 1, R2807 += 1 };
  s0 -> s1 [0, 65535] { R2807 += 1, R2744 += 1, R2745 += 1 };
  s0 -> s2 [0, 65535] { R2807 += 1, R2745 += 1, R67 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2807 += 1, R2744 += 1, R2745 += 1 };
  s1 -> s2 [0, 65535] { R2807 += 1, R2745 += 1, R67 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R2807 += 1 };
  s2 -> s2 [0, 65535] { R2807 += 1, R2745 += 1, R67 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2807 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 86] { R2809 += 1, R2747 += 1 };
  s0 -> s2 [0, 65535] { R2809 += 1, R2746 += 1, R2747 += 1 };
  s0 -> s0 [0, 65535] { R2808 += 1, R2809 += 1 };
  s0 -> s3 [0, 65535] { R2809 += 1, R2747 += 1, R69 += 1 };
  s0 -> s1 [88, 65535] { R2809 += 1, R2747 += 1 };
  s1 -> s1 [0, 86] { R2809 += 1, R2747 += 1 };
  s1 -> s1 [0, 65535] { R2809 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [88, 65535] { R2809 += 1, R2747 += 1 };
  s2 -> s1 [0, 86] { R2809 += 1, R2747 += 1 };
  s2 -> s2 [0, 65535] { R2809 += 1, R2746 += 1, R2747 += 1 };
  s2 -> s3 [0, 65535] { R2809 += 1, R2747 += 1, R69 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [88, 65535] { R2809 += 1, R2747 += 1 };
  s3 -> s1 [0, 86] { R2809 += 1, R2747 += 1 };
  s3 -> s4 [0, 65535] { R2809 += 1 };
  s3 -> s3 [0, 65535] { R2809 += 1, R2747 += 1, R69 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [88, 65535] { R2809 += 1, R2747 += 1 };
  s4 -> s4 [0, 65535] { R2809 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 86] { R2811 += 1, R2749 += 1, R73 += 1 };
  s0 -> s0 [0, 65535] { R2810 += 1, R2811 += 1 };
  s0 -> s2 [0, 65535] { R2811 += 1, R2748 += 1, R2749 += 1 };
  s0 -> s3 [0, 65535] { R2811 += 1, R2749 += 1, R72 += 1, R73 += 1 };
  s0 -> s1 [88, 65535] { R2811 += 1, R2749 += 1, R73 += 1 };
  s1 -> s1 [0, 86] { R2811 += 1, R2749 += 1, R73 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R2811 += 1, R2749 += 1 };
  s1 -> s5 [0, 65535] { R2811 += 1 };
  s1 -> s1 [88, 65535] { R2811 += 1, R2749 += 1, R73 += 1 };
  s2 -> s1 [0, 86] { R2811 += 1, R2749 += 1, R73 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2811 += 1, R2748 += 1, R2749 += 1 };
  s2 -> s3 [0, 65535] { R2811 += 1, R2749 += 1, R72 += 1, R73 += 1 };
  s2 -> s1 [88, 65535] { R2811 += 1, R2749 += 1, R73 += 1 };
  s3 -> s1 [0, 86] { R2811 += 1, R2749 += 1, R73 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2811 += 1, R2749 += 1, R72 += 1, R73 += 1 };
  s3 -> s5 [0, 65535] { R2811 += 1 };
  s3 -> s1 [88, 65535] { R2811 += 1, R2749 += 1, R73 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2811 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R2813 += 1, R2751 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R2812 += 1, R2813 += 1 };
  s0 -> s2 [0, 65535] { R2813 += 1, R2750 += 1, R2751 += 1 };
  s0 -> s3 [0, 65535] { R2813 += 1, R2751 += 1, R78 += 1, R79 += 1 };
  s1 -> s1 [0, 65535] { R2813 += 1, R2751 += 1, R77 += 1, R78 += 1 };
  s1 -> s5 [0, 65535] { R2813 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [0, 65535] { R2813 += 1, R2751 += 1, R78 += 1, R79 += 1 };
  s2 -> s1 [0, 65535] { R2813 += 1, R2751 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535] { R2813 += 1, R2750 += 1, R2751 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R2813 += 1, R2751 += 1, R78 += 1, R79 += 1 };
  s3 -> s4 [0, 65535] { R2813 += 1, R2751 += 1 };
  s3 -> s5 [0, 65535] { R2813 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R2813 += 1, R2751 += 1, R78 += 1, R79 += 1 };
  s4 -> s4 [0, 65535] { R2813 += 1, R2751 += 1 };
  s4 -> s5 [0, 65535] { R2813 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R2813 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 87] { R2815 += 1, R2753 += 1, R2623 += 1 };
  s0 -> s2 [0, 65535] { R2815 += 1, R2752 += 1, R2753 += 1 };
  s0 -> s0 [0, 65535] { R2814 += 1, R2815 += 1 };
  s0 -> s3 [0, 65535] { R2815 += 1, R2753 += 1, R2622 += 1, R2623 += 1 };
  s0 -> s4 [88, 88] { R2815 += 1, R2753 += 1, R2623 += 1 };
  s0 -> s1 [89, 65535] { R2815 += 1, R2753 += 1, R2623 += 1 };
  s1 -> s1 [0, 87] { R2815 += 1, R2753 += 1, R2623 += 1 };
  s1 -> s4 [88, 88] { R2815 += 1, R2753 += 1, R2623 += 1 };
  s1 -> s1 [89, 65535] { R2815 += 1, R2753 += 1, R2623 += 1 };
  s2 -> s1 [0, 87] { R2815 += 1, R2753 += 1, R2623 += 1 };
  s2 -> s2 [0, 65535] { R2815 += 1, R2752 += 1, R2753 += 1 };
  s2 -> s3 [0, 65535] { R2815 += 1, R2753 += 1, R2622 += 1, R2623 += 1 };
  s2 -> s4 [88, 88] { R2815 += 1, R2753 += 1, R2623 += 1 };
  s2 -> s1 [89, 65535] { R2815 += 1, R2753 += 1, R2623 += 1 };
  s3 -> s1 [0, 87] { R2815 += 1, R2753 += 1, R2623 += 1 };
  s3 -> s3 [0, 65535] { R2815 += 1, R2753 += 1, R2622 += 1, R2623 += 1 };
  s3 -> s4 [88, 88] { R2815 += 1, R2753 += 1, R2623 += 1 };
  s3 -> s1 [89, 65535] { R2815 += 1, R2753 += 1, R2623 += 1 };
  s4 -> s5 [0, 65535] { R2815 += 1, R2753 += 1 };
  s4 -> s4 [0, 65535] { R2815 += 1, R2753 += 1, R2623 += 1 };
  s4 -> s6 [0, 65535] { R2815 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R2815 += 1, R2753 += 1 };
  s5 -> s6 [0, 65535] { R2815 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R2815 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s4, s5, s6, s7;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R2817 += 1, R2755 += 1, R2627 += 1, R2628 += 1 };
  s0 -> s2 [0, 65535] { R2817 += 1, R2755 += 1, R2628 += 1, R2629 += 1 };
  s0 -> s3 [0, 65535] { R2817 += 1, R2754 += 1, R2755 += 1 };
  s0 -> s0 [0, 65535] { R2816 += 1, R2817 += 1 };
  s1 -> s1 [0, 65535] { R2817 += 1, R2755 += 1, R2627 += 1, R2628 += 1 };
  s1 -> s2 [0, 65535] { R2817 += 1, R2755 += 1, R2628 += 1, R2629 += 1 };
  s1 -> s5 [0, 65535] { R2817 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2817 += 1, R2755 += 1, R2628 += 1, R2629 += 1 };
  s2 -> s5 [0, 65535] { R2817 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s6 [0, 65535] { R2817 += 1, R2755 += 1 };
  s3 -> s1 [0, 65535] { R2817 += 1, R2755 += 1, R2627 += 1, R2628 += 1 };
  s3 -> s2 [0, 65535] { R2817 += 1, R2755 += 1, R2628 += 1, R2629 += 1 };
  s3 -> s3 [0, 65535] { R2817 += 1, R2754 += 1, R2755 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2817 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R2817 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R2817 += 1, R2755 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 86] { R2819 += 1, R2757 += 1, R2737 += 1 };
  s0 -> s2 [0, 65535] { R2819 += 1, R2756 += 1, R2757 += 1 };
  s0 -> s0 [0, 65535] { R2818 += 1, R2819 += 1 };
  s0 -> s1 [0, 65535] { R2819 += 1, R2757 += 1 };
  s0 -> s3 [87, 87] { R2819 += 1, R2757 += 1, R2737 += 1 };
  s0 -> s4 [87, 87] { R2819 += 1, R2757 += 1, R2737 += 1 };
  s0 -> s1 [89, 65535] { R2819 += 1, R2757 += 1, R2737 += 1 };
  s1 -> s1 [0, 86] { R2819 += 1, R2757 += 1, R2737 += 1 };
  s1 -> s5 [0, 65535] { R2819 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R2819 += 1, R2757 += 1 };
  s1 -> s3 [87, 87] { R2819 += 1, R2757 += 1, R2737 += 1 };
  s1 -> s4 [87, 87] { R2819 += 1, R2757 += 1, R2737 += 1 };
  s1 -> s1 [89, 65535] { R2819 += 1, R2757 += 1, R2737 += 1 };
  s2 -> s1 [0, 86] { R2819 += 1, R2757 += 1, R2737 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R2819 += 1, R2756 += 1, R2757 += 1 };
  s2 -> s1 [0, 65535] { R2819 += 1, R2757 += 1 };
  s2 -> s3 [87, 87] { R2819 += 1, R2757 += 1, R2737 += 1 };
  s2 -> s4 [87, 87] { R2819 += 1, R2757 += 1, R2737 += 1 };
  s2 -> s1 [89, 65535] { R2819 += 1, R2757 += 1, R2737 += 1 };
  s3 -> s3 [0, 65535] { R2819 += 1, R2757 += 1 };
  s3 -> s5 [0, 65535] { R2819 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 87] { R2819 += 1, R2757 += 1, R2737 += 1 };
  s4 -> s4 [0, 65535] { R2819 += 1, R2757 += 1 };
  s4 -> s5 [0, 65535] { R2819 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [89, 65535] { R2819 += 1, R2757 += 1, R2737 += 1 };
  s5 -> s5 [0, 65535] { R2819 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R2821 += 1, R2776 += 1, R2777 += 1 };
  s0 -> s0 [0, 65535] { R2820 += 1, R2821 += 1 };
  s0 -> s2 [0, 65535] { R2821 += 1, R2777 += 1, R18 += 1 };
  s1 -> s1 [0, 65535] { R2821 += 1, R2776 += 1, R2777 += 1 };
  s1 -> s2 [0, 65535] { R2821 += 1, R2777 += 1, R18 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R2821 += 1 };
  s2 -> s2 [0, 65535] { R2821 += 1, R2777 += 1, R18 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2821 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R2823 += 1, R2779 += 1 };
  s0 -> s0 [0, 65535] { R2822 += 1, R2823 += 1 };
  s0 -> s2 [0, 65535] { R2823 += 1, R2778 += 1, R2779 += 1 };
  s0 -> s3 [75, 75] { R2823 += 1, R2779 += 1 };
  s0 -> s4 [75, 75] { R2823 += 1, R2779 += 1 };
  s0 -> s5 [87, 87] { R2823 += 1, R2779 += 1 };
  s0 -> s1 [88, 65535] { R2823 += 1, R2779 += 1 };
  s1 -> s1 [0, 74] { R2823 += 1, R2779 += 1 };
  s1 -> s3 [75, 75] { R2823 += 1, R2779 += 1 };
  s1 -> s4 [75, 75] { R2823 += 1, R2779 += 1 };
  s1 -> s5 [87, 87] { R2823 += 1, R2779 += 1 };
  s1 -> s1 [88, 65535] { R2823 += 1, R2779 += 1 };
  s2 -> s1 [0, 74] { R2823 += 1, R2779 += 1 };
  s2 -> s2 [0, 65535] { R2823 += 1, R2778 += 1, R2779 += 1 };
  s2 -> s3 [75, 75] { R2823 += 1, R2779 += 1 };
  s2 -> s4 [75, 75] { R2823 += 1, R2779 += 1 };
  s2 -> s5 [87, 87] { R2823 += 1, R2779 += 1 };
  s2 -> s1 [88, 65535] { R2823 += 1, R2779 += 1 };
  s4 -> s4 [0, 75] { R2823 += 1, R2779 += 1 };
  s4 -> s8 [87, 87] { R2823 += 1, R2779 += 1 };
  s4 -> s4 [88, 65535] { R2823 += 1, R2779 += 1 };
  s5 -> s5 [0, 74] { R2823 += 1, R2779 += 1 };
  s5 -> s5 [0, 65535] { R2823 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [75, 75] { R2823 += 1, R2779 += 1 };
  s5 -> s8 [75, 75] { R2823 += 1, R2779 += 1 };
  s5 -> s5 [87, 65535] { R2823 += 1, R2779 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2823 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 75] { R2823 += 1, R2779 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R2823 += 1 };
  s8 -> s8 [87, 65535] { R2823 += 1, R2779 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 74] { R2825 += 1, R2781 += 1, R66 += 1 };
  s0 -> s2 [0, 65535] { R2825 += 1, R2780 += 1, R2781 += 1 };
  s0 -> s0 [0, 65535] { R2824 += 1, R2825 += 1 };
  s0 -> s3 [75, 75] { R2825 += 1, R2781 += 1, R66 += 1 };
  s0 -> s4 [75, 75] { R2825 += 1, R2781 += 1, R66 += 1 };
  s0 -> s1 [76, 65535] { R2825 += 1, R2781 += 1, R66 += 1 };
  s1 -> s1 [0, 74] { R2825 += 1, R2781 += 1, R66 += 1 };
  s1 -> s1 [0, 65535] { R2825 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [75, 75] { R2825 += 1, R2781 += 1, R66 += 1 };
  s1 -> s4 [75, 75] { R2825 += 1, R2781 += 1, R66 += 1 };
  s1 -> s1 [76, 65535] { R2825 += 1, R2781 += 1, R66 += 1 };
  s2 -> s1 [0, 74] { R2825 += 1, R2781 += 1, R66 += 1 };
  s2 -> s2 [0, 65535] { R2825 += 1, R2780 += 1, R2781 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [75, 75] { R2825 += 1, R2781 += 1, R66 += 1 };
  s2 -> s4 [75, 75] { R2825 += 1, R2781 += 1, R66 += 1 };
  s2 -> s1 [76, 65535] { R2825 += 1, R2781 += 1, R66 += 1 };
  s3 -> s6 [0, 65535] { R2825 += 1 };
  s3 -> s3 [0, 65535] { R2825 += 1, R2781 += 1, R66 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2825 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2825 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 74] { R2827 += 1, R2783 += 1, R68 += 1 };
  s0 -> s2 [0, 65535] { R2827 += 1, R2782 += 1, R2783 += 1 };
  s0 -> s0 [0, 65535] { R2826 += 1, R2827 += 1 };
  s0 -> s3 [75, 75] { R2827 += 1, R2783 += 1, R68 += 1 };
  s0 -> s4 [75, 75] { R2827 += 1, R2783 += 1, R68 += 1 };
  s0 -> s1 [76, 65535] { R2827 += 1, R2783 += 1, R68 += 1 };
  s1 -> s1 [0, 74] { R2827 += 1, R2783 += 1, R68 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2827 += 1 };
  s1 -> s3 [75, 75] { R2827 += 1, R2783 += 1, R68 += 1 };
  s1 -> s4 [75, 75] { R2827 += 1, R2783 += 1, R68 += 1 };
  s1 -> s1 [76, 65535] { R2827 += 1, R2783 += 1, R68 += 1 };
  s2 -> s1 [0, 74] { R2827 += 1, R2783 += 1, R68 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2827 += 1, R2782 += 1, R2783 += 1 };
  s2 -> s3 [75, 75] { R2827 += 1, R2783 += 1, R68 += 1 };
  s2 -> s4 [75, 75] { R2827 += 1, R2783 += 1, R68 += 1 };
  s2 -> s1 [76, 65535] { R2827 += 1, R2783 += 1, R68 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2827 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R2827 += 1 };
  s4 -> s4 [0, 65535] { R2827 += 1, R2783 += 1, R68 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2827 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R2829 += 1, R2785 += 1, R70 += 1, R71 += 1 };
  s0 -> s2 [0, 65535] { R2829 += 1, R2784 += 1, R2785 += 1 };
  s0 -> s0 [0, 65535] { R2828 += 1, R2829 += 1 };
  s0 -> s3 [75, 75] { R2829 += 1, R2785 += 1, R70 += 1, R71 += 1 };
  s0 -> s4 [75, 75] { R2829 += 1, R2785 += 1, R70 += 1, R71 += 1 };
  s0 -> s1 [76, 65535] { R2829 += 1, R2785 += 1, R70 += 1, R71 += 1 };
  s1 -> s1 [0, 74] { R2829 += 1, R2785 += 1, R70 += 1, R71 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2829 += 1 };
  s1 -> s3 [75, 75] { R2829 += 1, R2785 += 1, R70 += 1, R71 += 1 };
  s1 -> s4 [75, 75] { R2829 += 1, R2785 += 1, R70 += 1, R71 += 1 };
  s1 -> s1 [76, 65535] { R2829 += 1, R2785 += 1, R70 += 1, R71 += 1 };
  s2 -> s1 [0, 74] { R2829 += 1, R2785 += 1, R70 += 1, R71 += 1 };
  s2 -> s2 [0, 65535] { R2829 += 1, R2784 += 1, R2785 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [75, 75] { R2829 += 1, R2785 += 1, R70 += 1, R71 += 1 };
  s2 -> s4 [75, 75] { R2829 += 1, R2785 += 1, R70 += 1, R71 += 1 };
  s2 -> s1 [76, 65535] { R2829 += 1, R2785 += 1, R70 += 1, R71 += 1 };
  s3 -> s3 [0, 65535] { R2829 += 1, R2785 += 1, R70 += 1, R71 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R2829 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2829 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2829 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R2831 += 1, R2787 += 1, R74 += 1, R75 += 1 };
  s0 -> s0 [0, 65535] { R2830 += 1, R2831 += 1 };
  s0 -> s2 [0, 65535] { R2831 += 1, R2786 += 1, R2787 += 1 };
  s0 -> s3 [75, 75] { R2831 += 1, R2787 += 1, R74 += 1, R75 += 1 };
  s0 -> s4 [75, 75] { R2831 += 1, R2787 += 1, R74 += 1, R75 += 1 };
  s0 -> s1 [76, 65535] { R2831 += 1, R2787 += 1, R74 += 1, R75 += 1 };
  s1 -> s1 [0, 74] { R2831 += 1, R2787 += 1, R74 += 1, R75 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2831 += 1 };
  s1 -> s3 [75, 75] { R2831 += 1, R2787 += 1, R74 += 1, R75 += 1 };
  s1 -> s4 [75, 75] { R2831 += 1, R2787 += 1, R74 += 1, R75 += 1 };
  s1 -> s1 [76, 65535] { R2831 += 1, R2787 += 1, R74 += 1, R75 += 1 };
  s2 -> s1 [0, 74] { R2831 += 1, R2787 += 1, R74 += 1, R75 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2831 += 1, R2786 += 1, R2787 += 1 };
  s2 -> s3 [75, 75] { R2831 += 1, R2787 += 1, R74 += 1, R75 += 1 };
  s2 -> s4 [75, 75] { R2831 += 1, R2787 += 1, R74 += 1, R75 += 1 };
  s2 -> s1 [76, 65535] { R2831 += 1, R2787 += 1, R74 += 1, R75 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2831 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R2831 += 1 };
  s4 -> s4 [0, 65535] { R2831 += 1, R2787 += 1, R74 += 1, R75 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2831 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 74] { R2833 += 1, R2789 += 1, R2620 += 1, R2621 += 1 };
  s0 -> s2 [0, 65535] { R2833 += 1, R2788 += 1, R2789 += 1 };
  s0 -> s0 [0, 65535] { R2832 += 1, R2833 += 1 };
  s0 -> s3 [75, 75] { R2833 += 1, R2789 += 1, R2620 += 1, R2621 += 1 };
  s0 -> s4 [75, 75] { R2833 += 1, R2789 += 1, R2620 += 1, R2621 += 1 };
  s0 -> s1 [76, 65535] { R2833 += 1, R2789 += 1, R2620 += 1, R2621 += 1 };
  s1 -> s1 [0, 74] { R2833 += 1, R2789 += 1, R2620 += 1, R2621 += 1 };
  s1 -> s1 [0, 65535] { R2833 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [75, 75] { R2833 += 1, R2789 += 1, R2620 += 1, R2621 += 1 };
  s1 -> s4 [75, 75] { R2833 += 1, R2789 += 1, R2620 += 1, R2621 += 1 };
  s1 -> s1 [76, 65535] { R2833 += 1, R2789 += 1, R2620 += 1, R2621 += 1 };
  s2 -> s1 [0, 74] { R2833 += 1, R2789 += 1, R2620 += 1, R2621 += 1 };
  s2 -> s2 [0, 65535] { R2833 += 1, R2788 += 1, R2789 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [75, 75] { R2833 += 1, R2789 += 1, R2620 += 1, R2621 += 1 };
  s2 -> s4 [75, 75] { R2833 += 1, R2789 += 1, R2620 += 1, R2621 += 1 };
  s2 -> s1 [76, 65535] { R2833 += 1, R2789 += 1, R2620 += 1, R2621 += 1 };
  s3 -> s3 [0, 65535] { R2833 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R2833 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2833 += 1, R2789 += 1, R2620 += 1, R2621 += 1 };
  s5 -> s5 [0, 65535] { R2833 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 74] { R2835 += 1, R2791 += 1, R2624 += 1, R2625 += 1 };
  s0 -> s0 [0, 65535] { R2834 += 1, R2835 += 1 };
  s0 -> s2 [0, 65535] { R2835 += 1, R2790 += 1, R2791 += 1 };
  s0 -> s3 [75, 75] { R2835 += 1, R2791 += 1, R2624 += 1, R2625 += 1 };
  s0 -> s4 [75, 75] { R2835 += 1, R2791 += 1, R2624 += 1, R2625 += 1 };
  s0 -> s1 [76, 65535] { R2835 += 1, R2791 += 1, R2624 += 1, R2625 += 1 };
  s1 -> s1 [0, 74] { R2835 += 1, R2791 += 1, R2624 += 1, R2625 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2835 += 1 };
  s1 -> s3 [75, 75] { R2835 += 1, R2791 += 1, R2624 += 1, R2625 += 1 };
  s1 -> s4 [75, 75] { R2835 += 1, R2791 += 1, R2624 += 1, R2625 += 1 };
  s1 -> s1 [76, 65535] { R2835 += 1, R2791 += 1, R2624 += 1, R2625 += 1 };
  s2 -> s1 [0, 74] { R2835 += 1, R2791 += 1, R2624 += 1, R2625 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2835 += 1, R2790 += 1, R2791 += 1 };
  s2 -> s3 [75, 75] { R2835 += 1, R2791 += 1, R2624 += 1, R2625 += 1 };
  s2 -> s4 [75, 75] { R2835 += 1, R2791 += 1, R2624 += 1, R2625 += 1 };
  s2 -> s1 [76, 65535] { R2835 += 1, R2791 += 1, R2624 += 1, R2625 += 1 };
  s3 -> s3 [0, 65535] { R2835 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2835 += 1, R2791 += 1, R2624 += 1, R2625 += 1 };
  s4 -> s6 [0, 65535] { R2835 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2835 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 74] { R2837 += 1, R2793 += 1, R2734 += 1, R2735 += 1 };
  s0 -> s2 [0, 74] { R2837 += 1, R2793 += 1, R2735 += 1 };
  s0 -> s3 [0, 65535] { R2837 += 1, R2792 += 1, R2793 += 1 };
  s0 -> s0 [0, 65535] { R2836 += 1, R2837 += 1 };
  s0 -> s4 [75, 75] { R2837 += 1, R2793 += 1, R2734 += 1, R2735 += 1 };
  s0 -> s5 [75, 75] { R2837 += 1, R2793 += 1, R2734 += 1, R2735 += 1 };
  s0 -> s6 [75, 75] { R2837 += 1, R2793 += 1, R2735 += 1 };
  s0 -> s7 [75, 75] { R2837 += 1, R2793 += 1, R2735 += 1 };
  s0 -> s2 [76, 86] { R2837 += 1, R2793 += 1, R2735 += 1 };
  s0 -> s1 [76, 65535] { R2837 += 1, R2793 += 1, R2734 += 1, R2735 += 1 };
  s0 -> s2 [89, 65535] { R2837 += 1, R2793 += 1, R2735 += 1 };
  s1 -> s1 [0, 74] { R2837 += 1, R2793 += 1, R2734 += 1, R2735 += 1 };
  s1 -> s2 [0, 74] { R2837 += 1, R2793 += 1, R2735 += 1 };
  s1 -> s4 [75, 75] { R2837 += 1, R2793 += 1, R2734 += 1, R2735 += 1 };
  s1 -> s5 [75, 75] { R2837 += 1, R2793 += 1, R2734 += 1, R2735 += 1 };
  s1 -> s6 [75, 75] { R2837 += 1, R2793 += 1, R2735 += 1 };
  s1 -> s7 [75, 75] { R2837 += 1, R2793 += 1, R2735 += 1 };
  s1 -> s2 [76, 86] { R2837 += 1, R2793 += 1, R2735 += 1 };
  s1 -> s1 [76, 65535] { R2837 += 1, R2793 += 1, R2734 += 1, R2735 += 1 };
  s1 -> s2 [89, 65535] { R2837 += 1, R2793 += 1, R2735 += 1 };
  s2 -> s2 [0, 74] { R2837 += 1, R2793 += 1, R2735 += 1 };
  s2 -> s2 [0, 65535] { R2837 += 1 };
  s2 -> s9 [0, 65535];
  s2 -> s6 [75, 75] { R2837 += 1, R2793 += 1 };
  s2 -> s7 [75, 75] { R2837 += 1, R2793 += 1 };
  s2 -> s2 [76, 86] { R2837 += 1, R2793 += 1, R2735 += 1 };
  s2 -> s2 [76, 65535] { R2837 += 1, R2793 += 1 };
  s2 -> s2 [89, 65535] { R2837 += 1, R2793 += 1, R2735 += 1 };
  s3 -> s1 [0, 74] { R2837 += 1, R2793 += 1, R2734 += 1, R2735 += 1 };
  s3 -> s2 [0, 74] { R2837 += 1, R2793 += 1, R2735 += 1 };
  s3 -> s3 [0, 65535] { R2837 += 1, R2792 += 1, R2793 += 1 };
  s3 -> s4 [75, 75] { R2837 += 1, R2793 += 1, R2734 += 1, R2735 += 1 };
  s3 -> s5 [75, 75] { R2837 += 1, R2793 += 1, R2734 += 1, R2735 += 1 };
  s3 -> s6 [75, 75] { R2837 += 1, R2793 += 1, R2735 += 1 };
  s3 -> s7 [75, 75] { R2837 += 1, R2793 += 1, R2735 += 1 };
  s3 -> s2 [76, 86] { R2837 += 1, R2793 += 1, R2735 += 1 };
  s3 -> s1 [76, 65535] { R2837 += 1, R2793 += 1, R2734 += 1, R2735 += 1 };
  s3 -> s2 [89, 65535] { R2837 += 1, R2793 += 1, R2735 += 1 };
  s4 -> s7 [0, 86] { R2837 += 1, R2793 += 1, R2735 += 1 };
  s4 -> s4 [0, 65535] { R2837 += 1, R2793 += 1, R2734 += 1, R2735 += 1 };
  s4 -> s7 [89, 65535] { R2837 += 1, R2793 += 1, R2735 += 1 };
  s6 -> s6 [0, 65535] { R2837 += 1 };
  s6 -> s9 [0, 65535];
  s7 -> s7 [0, 86] { R2837 += 1, R2793 += 1, R2735 += 1 };
  s7 -> s8 [0, 65535] { R2837 += 1 };
  s7 -> s7 [0, 65535] { R2837 += 1, R2793 += 1 };
  s7 -> s9 [0, 65535];
  s7 -> s7 [89, 65535] { R2837 += 1, R2793 += 1, R2735 += 1 };
  s8 -> s8 [0, 65535] { R2837 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  accepting s8, s2, s9, s6, s7;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
constraint R1 = R2753 && R2 = R2837 && R20 - R2837 = -1 && R21 = R2837 && R22 - R2837 = -1 && R23 = R2837 && R24 = 0 && R25 = 1 && R26 = 0 && R27 = 1 && R38 + R67 + R66 + -1*R2623 + -1*R2621 - R53 = 0 && R52 + R2622 + R2620 = 0 && R2752 = 0 && R2778 = 0 && R2779 = 0 && R2792 = 0 && R2793 = 0 && R2794 = 0 && R2795 = R2837 && R2796 = 0 && R2797 = R2837 && R2798 = 0 && R2799 = R2837 && R2800 = 0 && R2801 = R2837 && R2802 = 0 && R2803 = R2837 && R2804 = 0 && R2805 = R2837 && R2806 = 0 && R2807 = R2837 && R2808 = 0 && R2809 = R2837 && R2810 = 0 && R2811 = R2837 && R2812 = 0 && R2813 = R2837 && R2814 = 0 && R2815 = R2837 && R2816 = 0 && R2817 = R2837 && R2818 = 0 && R2819 = R2837 && R2820 = 0 && R2821 = R2837 && R2822 = 0 && R2823 = R2837 && R2824 = 0 && R2825 = R2837 && R2826 = 0 && R2827 = R2837 && R2828 = 0 && R2829 = R2837 && R2830 = 0 && R2831 = R2837 && R2832 = 0 && R2833 = R2837 && R2834 = 0 && R2835 = R2837 && R2836 = 0 && R8 < 1 && R11 < 1 && R12 < 1 && R40 + R69 + R68 < 1 && -1*R2623 + -1*R2621 - R53 < 1 && -1 < R2753 && 0 < R2837 && (R48 + R79 + R76 != 0 || ((R42 + R72 + R70 != 0 || R43 + R73 + R71 + -1*R2623 + -1*R2621 - R53 = 0 || R53 + R2623 + R2621 < 1) && (R42 + R72 + R70 = 0 || R53 + R2623 + R2621 < 1))) && (R48 + R79 + R76 != 0 || ((R46 + R77 + R74 != 0 || R47 + R78 + R75 + -1*R2623 + -1*R2621 - R53 = 0 || R53 + R2623 + R2621 < 1) && (R46 + R77 + R74 = 0 || R53 + R2623 + R2621 < 1))) && (R2738 != 0 || R2739 = R2753 || (R17 = 0 && R2753 = 0)) && (R2740 != 0 || R2741 = R2753 || (R17 = 0 && R2753 = 0)) && (R2742 != 0 || R2743 = R2753 || (R17 = 0 && R2753 = 0)) && (R2744 != 0 || R2745 = R2753 || (R17 = 0 && R2753 = 0)) && (R2746 != 0 || R2747 = R2753 || (R17 = 0 && R2753 = 0)) && (R2748 != 0 || R2749 = R2753 || (R17 = 0 && R2753 = 0)) && (R2750 != 0 || R2751 = R2753 || (R17 = 0 && R2753 = 0)) && (R2754 != 0 || R2753 = R2755 || (R17 = 0 && R2753 = 0)) && (R2756 != 0 || R2753 = R2757 || (R17 = 0 && R2753 = 0)) && (R18 = 0 || (R2776 = 0 && R2777 = 0)) && (R18 = 0 || (R2780 = 0 && R2781 = 0)) && (R18 = 0 || (R2782 = 0 && R2783 = 0)) && (R18 = 0 || (R2784 = 0 && R2785 = 0)) && (R18 = 0 || (R2786 = 0 && R2787 = 0)) && (R18 = 0 || (R2788 = 0 && R2789 = 0)) && (R18 = 0 || (R2790 = 0 && R2791 = 0)) && (R19 = 0 || (R2758 = 0 && R2759 = 0)) && (R19 = 0 || (R2760 = 0 && R2761 = 0)) && (R19 = 0 || (R2762 = 0 && R2763 = 0)) && (R19 = 0 || (R2764 = 0 && R2765 = 0)) && (R19 = 0 || (R2766 = 0 && R2767 = 0)) && (R19 = 0 || (R2768 = 0 && R2769 = 0)) && (R19 = 0 || (R2770 = 0 && R2771 = 0)) && (R19 = 0 || (R2772 = 0 && R2773 = 0)) && (R19 = 0 || (R2774 = 0 && R2775 = 0)) && (R48 + R79 + R76 = 0 || (R42 + R72 + R70 = 0 && R43 + R73 + R71 + -1*R2623 + -1*R2621 - R53 = 0)) && (R48 + R79 + R76 = 0 || (R46 + R77 + R74 = 0 && R47 + R78 + R75 + -1*R2623 + -1*R2621 - R53 = 0)) && (R58 + R2629 + R2626 = 0 || (R56 + R2627 + R2624 = 0 && R57 + R2628 + R2625 = 0)) && (R58 + R2629 + R2626 = 0 || (R62 + R2736 + R2734 = 0 && R63 + R2737 + R2735 = 0)) && (R2738 = 0 || (R17 = 0 && R2753 = 0)) && (R2740 = 0 || (R17 = 0 && R2753 = 0)) && (R2742 = 0 || (R17 = 0 && R2753 = 0)) && (R2744 = 0 || (R17 = 0 && R2753 = 0)) && (R2746 = 0 || (R17 = 0 && R2753 = 0)) && (R2748 = 0 || (R17 = 0 && R2753 = 0)) && (R2750 = 0 || (R17 = 0 && R2753 = 0)) && (R2754 = 0 || (R17 = 0 && R2753 = 0)) && (R2756 = 0 || (R17 = 0 && R2753 = 0));
// End of Parikh automata intersection problem
