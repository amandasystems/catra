// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R12, R15332, R15333, R15334, R15335, R15336, R15337, R15338, R15339, R15340, R15341, R16612, R16613, R16614, R16615, R17, R17038, R17039, R17040, R17041, R17042, R17043, R17148, R17149, R17150, R17151, R17152, R17153, R17154, R17155, R17156, R17157, R17158, R17159, R17160, R17161, R17162, R17163, R17164, R17165, R17166, R17167, R17168, R17169, R17170, R17171, R17172, R17173, R17174, R17175, R17176, R17177, R17178, R17179, R17180, R17181, R17182, R17183, R17184, R17185, R17186, R17187, R17188, R17189, R17190, R17191, R17192, R17193, R17194, R17195, R17196, R17197, R17198, R17199, R17200, R17201, R17202, R17203, R17204, R17205, R17206, R17207, R17208, R17209, R17210, R17211, R17212, R17213, R17214, R17215, R17216, R17217, R17218, R17219, R17220, R17221, R17222, R17223, R17224, R17225, R17226, R17227, R17228, R17229, R17230, R17231, R17232, R17233, R17234, R17235, R17236, R17237, R17238, R17239, R17240, R17241, R17242, R17243, R17244, R17245, R17246, R17247, R17248, R17249, R17250, R17251, R18, R19, R2, R20, R21, R22, R23, R24, R25, R26, R27, R3, R38, R4, R40, R42, R43, R46, R47, R48, R52, R53, R56, R57, R58, R62, R63, R66, R67, R68, R69, R8;
synchronised {  // Automata constraining P64
automaton P64_0 {
  init s0;
  s0 -> s1 [119, 119];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [75, 75];
  s0 -> s0 [76, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [75, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R2 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R11 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 74];
  s0 -> s0 [0, 65535] { R12 += 1 };
  s0 -> s2 [75, 75];
  s0 -> s1 [76, 65535];
  s1 -> s1 [0, 74];
  s1 -> s2 [75, 75];
  s1 -> s1 [76, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R21 += 1 };
  s0 -> s0 [0, 65535] { R20 += 1, R21 += 1 };
  s0 -> s2 [9, 13] { R21 += 1 };
  s0 -> s1 [14, 31] { R21 += 1 };
  s0 -> s2 [32, 32] { R21 += 1 };
  s0 -> s1 [33, 65535] { R21 += 1 };
  s1 -> s1 [0, 65535] { R21 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R21 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s0 [0, 65535] { R22 += 1, R23 += 1 };
  s0 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s1 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R25 += 1 };
  s0 -> s0 [0, 65535] { R24 += 1, R25 += 1 };
  s0 -> s2 [9, 13] { R25 += 1 };
  s0 -> s1 [14, 31] { R25 += 1 };
  s0 -> s2 [32, 32] { R25 += 1 };
  s0 -> s1 [33, 65535] { R25 += 1 };
  s1 -> s1 [0, 65535] { R25 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R25 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R26 += 1, R27 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R17173 += 1, R19 += 1 };
  s0 -> s0 [0, 65535] { R17172 += 1, R17173 += 1 };
  s1 -> s1 [0, 65535] { R17173 += 1, R19 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 74] { R17175 += 1 };
  s0 -> s0 [0, 65535] { R17174 += 1, R17175 += 1 };
  s0 -> s2 [75, 75] { R17175 += 1 };
  s0 -> s3 [75, 75] { R17175 += 1 };
  s0 -> s1 [88, 65535] { R17175 += 1 };
  s1 -> s1 [0, 74] { R17175 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R17175 += 1 };
  s1 -> s3 [75, 75] { R17175 += 1 };
  s1 -> s1 [88, 65535] { R17175 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 75] { R17175 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [88, 65535] { R17175 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 74] { R17177 += 1, R38 += 1 };
  s0 -> s0 [0, 65535] { R17176 += 1, R17177 += 1 };
  s0 -> s2 [75, 75] { R17177 += 1, R38 += 1 };
  s0 -> s3 [75, 75] { R17177 += 1, R38 += 1 };
  s0 -> s1 [76, 65535] { R17177 += 1, R38 += 1 };
  s1 -> s1 [0, 74] { R17177 += 1, R38 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R17177 += 1, R38 += 1 };
  s1 -> s3 [75, 75] { R17177 += 1, R38 += 1 };
  s1 -> s1 [76, 65535] { R17177 += 1, R38 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R17177 += 1, R38 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 74] { R17179 += 1, R40 += 1 };
  s0 -> s0 [0, 65535] { R17178 += 1, R17179 += 1 };
  s0 -> s2 [75, 75] { R17179 += 1, R40 += 1 };
  s0 -> s3 [75, 75] { R17179 += 1, R40 += 1 };
  s0 -> s1 [76, 65535] { R17179 += 1, R40 += 1 };
  s1 -> s1 [0, 74] { R17179 += 1, R40 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R17179 += 1, R40 += 1 };
  s1 -> s3 [75, 75] { R17179 += 1, R40 += 1 };
  s1 -> s1 [76, 65535] { R17179 += 1, R40 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R17179 += 1, R40 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 74] { R17181 += 1, R42 += 1, R43 += 1 };
  s0 -> s0 [0, 65535] { R17180 += 1, R17181 += 1 };
  s0 -> s2 [75, 75] { R17181 += 1, R42 += 1, R43 += 1 };
  s0 -> s3 [75, 75] { R17181 += 1, R42 += 1, R43 += 1 };
  s0 -> s1 [76, 65535] { R17181 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 74] { R17181 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R17181 += 1, R42 += 1, R43 += 1 };
  s1 -> s3 [75, 75] { R17181 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [76, 65535] { R17181 += 1, R42 += 1, R43 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R17181 += 1, R42 += 1, R43 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 74] { R17183 += 1, R46 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R17182 += 1, R17183 += 1 };
  s0 -> s2 [75, 75] { R17183 += 1, R46 += 1, R47 += 1 };
  s0 -> s3 [75, 75] { R17183 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [76, 65535] { R17183 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 74] { R17183 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R17183 += 1, R46 += 1, R47 += 1 };
  s1 -> s3 [75, 75] { R17183 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [76, 65535] { R17183 += 1, R46 += 1, R47 += 1 };
  s2 -> s2 [0, 65535] { R17183 += 1, R46 += 1, R47 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 74] { R17185 += 1, R52 += 1, R53 += 1 };
  s0 -> s0 [0, 65535] { R17184 += 1, R17185 += 1 };
  s0 -> s2 [75, 75] { R17185 += 1, R52 += 1, R53 += 1 };
  s0 -> s3 [75, 75] { R17185 += 1, R52 += 1, R53 += 1 };
  s0 -> s1 [76, 65535] { R17185 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 74] { R17185 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R17185 += 1, R52 += 1, R53 += 1 };
  s1 -> s3 [75, 75] { R17185 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [76, 65535] { R17185 += 1, R52 += 1, R53 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R17185 += 1, R52 += 1, R53 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 74] { R17187 += 1, R56 += 1, R57 += 1 };
  s0 -> s0 [0, 65535] { R17186 += 1, R17187 += 1 };
  s0 -> s2 [75, 75] { R17187 += 1, R56 += 1, R57 += 1 };
  s0 -> s3 [75, 75] { R17187 += 1, R56 += 1, R57 += 1 };
  s0 -> s1 [76, 65535] { R17187 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 74] { R17187 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R17187 += 1, R56 += 1, R57 += 1 };
  s1 -> s3 [75, 75] { R17187 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [76, 65535] { R17187 += 1, R56 += 1, R57 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R17187 += 1, R56 += 1, R57 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 74] { R17189 += 1, R62 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R17188 += 1, R17189 += 1 };
  s0 -> s2 [75, 75] { R17189 += 1, R62 += 1, R63 += 1 };
  s0 -> s3 [75, 75] { R17189 += 1, R62 += 1, R63 += 1 };
  s0 -> s1 [76, 65535] { R17189 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 74] { R17189 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R17189 += 1, R62 += 1, R63 += 1 };
  s1 -> s3 [75, 75] { R17189 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [76, 65535] { R17189 += 1, R62 += 1, R63 += 1 };
  s2 -> s2 [0, 65535] { R17189 += 1, R62 += 1, R63 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 74] { R17209 += 1 };
  s0 -> s0 [0, 65535] { R17208 += 1, R17209 += 1 };
  s0 -> s2 [75, 75] { R17209 += 1 };
  s0 -> s1 [76, 65535] { R17209 += 1 };
  s1 -> s1 [0, 74] { R17209 += 1 };
  s1 -> s2 [75, 75] { R17209 += 1 };
  s1 -> s1 [76, 65535] { R17209 += 1 };
  s2 -> s2 [0, 65535] { R17209 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R17211 += 1, R1 += 1 };
  s0 -> s0 [0, 65535] { R17210 += 1, R17211 += 1 };
  s1 -> s1 [0, 65535] { R17211 += 1, R1 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 74] { R17213 += 1 };
  s0 -> s0 [0, 65535] { R17212 += 1, R17213 += 1 };
  s0 -> s2 [0, 65535] { R17213 += 1, R8 += 1 };
  s0 -> s3 [75, 75] { R17213 += 1 };
  s0 -> s1 [76, 65535] { R17213 += 1 };
  s1 -> s1 [0, 74] { R17213 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [75, 75] { R17213 += 1 };
  s1 -> s1 [76, 65535] { R17213 += 1 };
  s2 -> s1 [0, 74] { R17213 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R17213 += 1, R8 += 1 };
  s2 -> s3 [75, 75] { R17213 += 1 };
  s2 -> s1 [76, 65535] { R17213 += 1 };
  s3 -> s3 [0, 65535] { R17213 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 74] { R17215 += 1, R17153 += 1 };
  s0 -> s2 [0, 65535] { R17215 += 1, R17152 += 1, R17153 += 1 };
  s0 -> s0 [0, 65535] { R17214 += 1, R17215 += 1 };
  s0 -> s1 [76, 65535] { R17215 += 1, R17153 += 1 };
  s1 -> s1 [0, 74] { R17215 += 1, R17153 += 1 };
  s1 -> s1 [0, 65535] { R17215 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [76, 65535] { R17215 += 1, R17153 += 1 };
  s2 -> s1 [0, 74] { R17215 += 1, R17153 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R17215 += 1, R17152 += 1, R17153 += 1 };
  s2 -> s1 [76, 65535] { R17215 += 1, R17153 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R17217 += 1, R17154 += 1, R17155 += 1 };
  s0 -> s0 [0, 65535] { R17216 += 1, R17217 += 1 };
  s0 -> s2 [0, 65535] { R17217 += 1, R17155 += 1, R17 += 1 };
  s1 -> s1 [0, 65535] { R17217 += 1, R17154 += 1, R17155 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R17217 += 1, R17155 += 1, R17 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R17217 += 1 };
  s2 -> s2 [0, 65535] { R17217 += 1, R17155 += 1, R17 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R17217 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 75] { R17219 += 1, R17157 += 1 };
  s0 -> s2 [0, 65535] { R17219 += 1, R17156 += 1, R17157 += 1 };
  s0 -> s0 [0, 65535] { R17218 += 1, R17219 += 1 };
  s0 -> s1 [87, 65535] { R17219 += 1, R17157 += 1 };
  s1 -> s1 [0, 75] { R17219 += 1, R17157 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R17219 += 1 };
  s1 -> s1 [87, 65535] { R17219 += 1, R17157 += 1 };
  s2 -> s1 [0, 75] { R17219 += 1, R17157 += 1 };
  s2 -> s2 [0, 65535] { R17219 += 1, R17156 += 1, R17157 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [87, 65535] { R17219 += 1, R17157 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R17220 += 1, R17221 += 1 };
  s0 -> s1 [0, 65535] { R17221 += 1, R17159 += 1, R67 += 1 };
  s0 -> s2 [0, 65535] { R17221 += 1, R17158 += 1, R17159 += 1 };
  s1 -> s1 [0, 65535] { R17221 += 1, R17159 += 1, R67 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R17221 += 1 };
  s2 -> s1 [0, 65535] { R17221 += 1, R17159 += 1, R67 += 1 };
  s2 -> s2 [0, 65535] { R17221 += 1, R17158 += 1, R17159 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R17221 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 86] { R17223 += 1, R17161 += 1 };
  s0 -> s0 [0, 65535] { R17222 += 1, R17223 += 1 };
  s0 -> s2 [0, 65535] { R17223 += 1, R17161 += 1, R69 += 1 };
  s0 -> s3 [0, 65535] { R17223 += 1, R17160 += 1, R17161 += 1 };
  s0 -> s1 [88, 65535] { R17223 += 1, R17161 += 1 };
  s1 -> s1 [0, 86] { R17223 += 1, R17161 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R17223 += 1 };
  s1 -> s1 [88, 65535] { R17223 += 1, R17161 += 1 };
  s2 -> s1 [0, 86] { R17223 += 1, R17161 += 1 };
  s2 -> s5 [0, 65535] { R17223 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R17223 += 1, R17161 += 1, R69 += 1 };
  s2 -> s1 [88, 65535] { R17223 += 1, R17161 += 1 };
  s3 -> s1 [0, 86] { R17223 += 1, R17161 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R17223 += 1, R17161 += 1, R69 += 1 };
  s3 -> s3 [0, 65535] { R17223 += 1, R17160 += 1, R17161 += 1 };
  s3 -> s1 [88, 65535] { R17223 += 1, R17161 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R17223 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 86] { R17225 += 1, R17163 += 1, R15335 += 1 };
  s0 -> s2 [0, 65535] { R17225 += 1, R17162 += 1, R17163 += 1 };
  s0 -> s0 [0, 65535] { R17224 += 1, R17225 += 1 };
  s0 -> s1 [0, 65535] { R17225 += 1, R17163 += 1 };
  s0 -> s1 [88, 65535] { R17225 += 1, R17163 += 1, R15335 += 1 };
  s1 -> s1 [0, 86] { R17225 += 1, R17163 += 1, R15335 += 1 };
  s1 -> s4 [0, 65535] { R17225 += 1 };
  s1 -> s1 [0, 65535] { R17225 += 1, R17163 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [88, 65535] { R17225 += 1, R17163 += 1, R15335 += 1 };
  s2 -> s1 [0, 86] { R17225 += 1, R17163 += 1, R15335 += 1 };
  s2 -> s2 [0, 65535] { R17225 += 1, R17162 += 1, R17163 += 1 };
  s2 -> s1 [0, 65535] { R17225 += 1, R17163 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [88, 65535] { R17225 += 1, R17163 += 1, R15335 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R17225 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R17227 += 1, R17165 += 1, R15339 += 1, R15340 += 1 };
  s0 -> s2 [0, 65535] { R17227 += 1, R17164 += 1, R17165 += 1 };
  s0 -> s3 [0, 65535] { R17227 += 1, R17165 += 1, R15340 += 1, R15341 += 1 };
  s0 -> s0 [0, 65535] { R17226 += 1, R17227 += 1 };
  s1 -> s1 [0, 65535] { R17227 += 1, R17165 += 1, R15339 += 1, R15340 += 1 };
  s1 -> s5 [0, 65535] { R17227 += 1 };
  s1 -> s3 [0, 65535] { R17227 += 1, R17165 += 1, R15340 += 1, R15341 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s1 [0, 65535] { R17227 += 1, R17165 += 1, R15339 += 1, R15340 += 1 };
  s2 -> s2 [0, 65535] { R17227 += 1, R17164 += 1, R17165 += 1 };
  s2 -> s3 [0, 65535] { R17227 += 1, R17165 += 1, R15340 += 1, R15341 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R17227 += 1, R17165 += 1 };
  s3 -> s5 [0, 65535] { R17227 += 1 };
  s3 -> s3 [0, 65535] { R17227 += 1, R17165 += 1, R15340 += 1, R15341 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R17227 += 1, R17165 += 1 };
  s4 -> s5 [0, 65535] { R17227 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R17227 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 65535] { R17229 += 1, R17166 += 1, R17167 += 1 };
  s0 -> s0 [0, 65535] { R17228 += 1, R17229 += 1 };
  s0 -> s2 [0, 65535] { R17229 += 1, R17167 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R17229 += 1, R17166 += 1, R17167 += 1 };
  s1 -> s2 [0, 65535] { R17229 += 1, R17167 += 1 };
  s2 -> s3 [0, 65535] { R17229 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R17229 += 1, R17167 += 1 };
  s3 -> s3 [0, 65535] { R17229 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s0 [0, 65535] { R17230 += 1, R17231 += 1 };
  s0 -> s1 [0, 65535] { R17231 += 1, R17169 += 1 };
  s0 -> s2 [0, 65535] { R17231 += 1, R17168 += 1, R17169 += 1 };
  s0 -> s3 [0, 65535] { R17231 += 1, R17169 += 1, R17042 += 1, R17043 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R17231 += 1 };
  s1 -> s1 [0, 65535] { R17231 += 1, R17169 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R17231 += 1, R17169 += 1 };
  s2 -> s2 [0, 65535] { R17231 += 1, R17168 += 1, R17169 += 1 };
  s2 -> s3 [0, 65535] { R17231 += 1, R17169 += 1, R17042 += 1, R17043 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R17231 += 1 };
  s3 -> s1 [0, 65535] { R17231 += 1, R17169 += 1 };
  s3 -> s3 [0, 65535] { R17231 += 1, R17169 += 1, R17042 += 1, R17043 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R17231 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 86] { R17233 += 1, R17171 += 1, R17151 += 1 };
  s0 -> s1 [0, 65535] { R17233 += 1, R17171 += 1 };
  s0 -> s0 [0, 65535] { R17232 += 1, R17233 += 1 };
  s0 -> s2 [0, 65535] { R17233 += 1, R17170 += 1, R17171 += 1 };
  s0 -> s3 [87, 87] { R17233 += 1, R17171 += 1, R17151 += 1 };
  s0 -> s4 [87, 87] { R17233 += 1, R17171 += 1, R17151 += 1 };
  s0 -> s1 [89, 65535] { R17233 += 1, R17171 += 1, R17151 += 1 };
  s1 -> s1 [0, 86] { R17233 += 1, R17171 += 1, R17151 += 1 };
  s1 -> s5 [0, 65535] { R17233 += 1 };
  s1 -> s1 [0, 65535] { R17233 += 1, R17171 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [87, 87] { R17233 += 1, R17171 += 1, R17151 += 1 };
  s1 -> s4 [87, 87] { R17233 += 1, R17171 += 1, R17151 += 1 };
  s1 -> s1 [89, 65535] { R17233 += 1, R17171 += 1, R17151 += 1 };
  s2 -> s1 [0, 86] { R17233 += 1, R17171 += 1, R17151 += 1 };
  s2 -> s1 [0, 65535] { R17233 += 1, R17171 += 1 };
  s2 -> s2 [0, 65535] { R17233 += 1, R17170 += 1, R17171 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [87, 87] { R17233 += 1, R17171 += 1, R17151 += 1 };
  s2 -> s4 [87, 87] { R17233 += 1, R17171 += 1, R17151 += 1 };
  s2 -> s1 [89, 65535] { R17233 += 1, R17171 += 1, R17151 += 1 };
  s3 -> s5 [0, 65535] { R17233 += 1 };
  s3 -> s3 [0, 65535] { R17233 += 1, R17171 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 87] { R17233 += 1, R17171 += 1, R17151 += 1 };
  s4 -> s5 [0, 65535] { R17233 += 1 };
  s4 -> s4 [0, 65535] { R17233 += 1, R17171 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [89, 65535] { R17233 += 1, R17171 += 1, R17151 += 1 };
  s5 -> s5 [0, 65535] { R17233 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R17235 += 1, R17190 += 1, R17191 += 1 };
  s0 -> s0 [0, 65535] { R17234 += 1, R17235 += 1 };
  s0 -> s2 [0, 65535] { R17235 += 1, R17191 += 1, R18 += 1 };
  s1 -> s1 [0, 65535] { R17235 += 1, R17190 += 1, R17191 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R17235 += 1, R17191 += 1, R18 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R17235 += 1 };
  s2 -> s2 [0, 65535] { R17235 += 1, R17191 += 1, R18 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R17235 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R17237 += 1, R17193 += 1 };
  s0 -> s2 [0, 65535] { R17237 += 1, R17192 += 1, R17193 += 1 };
  s0 -> s0 [0, 65535] { R17236 += 1, R17237 += 1 };
  s0 -> s3 [75, 75] { R17237 += 1, R17193 += 1 };
  s0 -> s4 [75, 75] { R17237 += 1, R17193 += 1 };
  s0 -> s5 [87, 87] { R17237 += 1, R17193 += 1 };
  s0 -> s1 [88, 65535] { R17237 += 1, R17193 += 1 };
  s1 -> s1 [0, 74] { R17237 += 1, R17193 += 1 };
  s1 -> s3 [75, 75] { R17237 += 1, R17193 += 1 };
  s1 -> s4 [75, 75] { R17237 += 1, R17193 += 1 };
  s1 -> s5 [87, 87] { R17237 += 1, R17193 += 1 };
  s1 -> s1 [88, 65535] { R17237 += 1, R17193 += 1 };
  s2 -> s1 [0, 74] { R17237 += 1, R17193 += 1 };
  s2 -> s2 [0, 65535] { R17237 += 1, R17192 += 1, R17193 += 1 };
  s2 -> s3 [75, 75] { R17237 += 1, R17193 += 1 };
  s2 -> s4 [75, 75] { R17237 += 1, R17193 += 1 };
  s2 -> s5 [87, 87] { R17237 += 1, R17193 += 1 };
  s2 -> s1 [88, 65535] { R17237 += 1, R17193 += 1 };
  s4 -> s4 [0, 75] { R17237 += 1, R17193 += 1 };
  s4 -> s8 [87, 87] { R17237 += 1, R17193 += 1 };
  s4 -> s4 [88, 65535] { R17237 += 1, R17193 += 1 };
  s5 -> s5 [0, 74] { R17237 += 1, R17193 += 1 };
  s5 -> s5 [0, 65535] { R17237 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [75, 75] { R17237 += 1, R17193 += 1 };
  s5 -> s8 [75, 75] { R17237 += 1, R17193 += 1 };
  s5 -> s5 [87, 65535] { R17237 += 1, R17193 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R17237 += 1 };
  s8 -> s8 [0, 75] { R17237 += 1, R17193 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R17237 += 1 };
  s8 -> s8 [87, 65535] { R17237 += 1, R17193 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 74] { R17239 += 1, R17195 += 1, R66 += 1 };
  s0 -> s0 [0, 65535] { R17238 += 1, R17239 += 1 };
  s0 -> s2 [0, 65535] { R17239 += 1, R17194 += 1, R17195 += 1 };
  s0 -> s3 [75, 75] { R17239 += 1, R17195 += 1, R66 += 1 };
  s0 -> s4 [75, 75] { R17239 += 1, R17195 += 1, R66 += 1 };
  s0 -> s1 [76, 65535] { R17239 += 1, R17195 += 1, R66 += 1 };
  s1 -> s1 [0, 74] { R17239 += 1, R17195 += 1, R66 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R17239 += 1 };
  s1 -> s3 [75, 75] { R17239 += 1, R17195 += 1, R66 += 1 };
  s1 -> s4 [75, 75] { R17239 += 1, R17195 += 1, R66 += 1 };
  s1 -> s1 [76, 65535] { R17239 += 1, R17195 += 1, R66 += 1 };
  s2 -> s1 [0, 74] { R17239 += 1, R17195 += 1, R66 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R17239 += 1, R17194 += 1, R17195 += 1 };
  s2 -> s3 [75, 75] { R17239 += 1, R17195 += 1, R66 += 1 };
  s2 -> s4 [75, 75] { R17239 += 1, R17195 += 1, R66 += 1 };
  s2 -> s1 [76, 65535] { R17239 += 1, R17195 += 1, R66 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R17239 += 1 };
  s3 -> s3 [0, 65535] { R17239 += 1, R17195 += 1, R66 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R17239 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R17239 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 74] { R17241 += 1, R17197 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R17240 += 1, R17241 += 1 };
  s0 -> s2 [0, 65535] { R17241 += 1, R17196 += 1, R17197 += 1 };
  s0 -> s3 [75, 75] { R17241 += 1, R17197 += 1, R68 += 1 };
  s0 -> s4 [75, 75] { R17241 += 1, R17197 += 1, R68 += 1 };
  s0 -> s1 [76, 65535] { R17241 += 1, R17197 += 1, R68 += 1 };
  s1 -> s1 [0, 74] { R17241 += 1, R17197 += 1, R68 += 1 };
  s1 -> s1 [0, 65535] { R17241 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [75, 75] { R17241 += 1, R17197 += 1, R68 += 1 };
  s1 -> s4 [75, 75] { R17241 += 1, R17197 += 1, R68 += 1 };
  s1 -> s1 [76, 65535] { R17241 += 1, R17197 += 1, R68 += 1 };
  s2 -> s1 [0, 74] { R17241 += 1, R17197 += 1, R68 += 1 };
  s2 -> s2 [0, 65535] { R17241 += 1, R17196 += 1, R17197 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [75, 75] { R17241 += 1, R17197 += 1, R68 += 1 };
  s2 -> s4 [75, 75] { R17241 += 1, R17197 += 1, R68 += 1 };
  s2 -> s1 [76, 65535] { R17241 += 1, R17197 += 1, R68 += 1 };
  s3 -> s3 [0, 65535] { R17241 += 1, R17197 += 1, R68 += 1 };
  s3 -> s6 [0, 65535] { R17241 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R17241 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R17241 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R17243 += 1, R17199 += 1, R15333 += 1 };
  s0 -> s2 [0, 74] { R17243 += 1, R17199 += 1, R15332 += 1, R15333 += 1 };
  s0 -> s0 [0, 65535] { R17242 += 1, R17243 += 1 };
  s0 -> s3 [0, 65535] { R17243 += 1, R17198 += 1, R17199 += 1 };
  s0 -> s4 [75, 75] { R17243 += 1, R17199 += 1, R15333 += 1 };
  s0 -> s5 [75, 75] { R17243 += 1, R17199 += 1, R15333 += 1 };
  s0 -> s6 [75, 75] { R17243 += 1, R17199 += 1, R15332 += 1, R15333 += 1 };
  s0 -> s7 [75, 75] { R17243 += 1, R17199 += 1, R15332 += 1, R15333 += 1 };
  s0 -> s1 [76, 86] { R17243 += 1, R17199 += 1, R15333 += 1 };
  s0 -> s2 [76, 65535] { R17243 += 1, R17199 += 1, R15332 += 1, R15333 += 1 };
  s0 -> s1 [88, 65535] { R17243 += 1, R17199 += 1, R15333 += 1 };
  s1 -> s1 [0, 74] { R17243 += 1, R17199 += 1, R15333 += 1 };
  s1 -> s1 [0, 65535] { R17243 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [75, 75] { R17243 += 1, R17199 += 1 };
  s1 -> s5 [75, 75] { R17243 += 1, R17199 += 1 };
  s1 -> s1 [76, 86] { R17243 += 1, R17199 += 1, R15333 += 1 };
  s1 -> s1 [76, 65535] { R17243 += 1, R17199 += 1 };
  s1 -> s1 [88, 65535] { R17243 += 1, R17199 += 1, R15333 += 1 };
  s2 -> s1 [0, 74] { R17243 += 1, R17199 += 1, R15333 += 1 };
  s2 -> s2 [0, 74] { R17243 += 1, R17199 += 1, R15332 += 1, R15333 += 1 };
  s2 -> s4 [75, 75] { R17243 += 1, R17199 += 1, R15333 += 1 };
  s2 -> s5 [75, 75] { R17243 += 1, R17199 += 1, R15333 += 1 };
  s2 -> s6 [75, 75] { R17243 += 1, R17199 += 1, R15332 += 1, R15333 += 1 };
  s2 -> s7 [75, 75] { R17243 += 1, R17199 += 1, R15332 += 1, R15333 += 1 };
  s2 -> s1 [76, 86] { R17243 += 1, R17199 += 1, R15333 += 1 };
  s2 -> s2 [76, 65535] { R17243 += 1, R17199 += 1, R15332 += 1, R15333 += 1 };
  s2 -> s1 [88, 65535] { R17243 += 1, R17199 += 1, R15333 += 1 };
  s3 -> s1 [0, 74] { R17243 += 1, R17199 += 1, R15333 += 1 };
  s3 -> s2 [0, 74] { R17243 += 1, R17199 += 1, R15332 += 1, R15333 += 1 };
  s3 -> s3 [0, 65535] { R17243 += 1, R17198 += 1, R17199 += 1 };
  s3 -> s4 [75, 75] { R17243 += 1, R17199 += 1, R15333 += 1 };
  s3 -> s5 [75, 75] { R17243 += 1, R17199 += 1, R15333 += 1 };
  s3 -> s6 [75, 75] { R17243 += 1, R17199 += 1, R15332 += 1, R15333 += 1 };
  s3 -> s7 [75, 75] { R17243 += 1, R17199 += 1, R15332 += 1, R15333 += 1 };
  s3 -> s1 [76, 86] { R17243 += 1, R17199 += 1, R15333 += 1 };
  s3 -> s2 [76, 65535] { R17243 += 1, R17199 += 1, R15332 += 1, R15333 += 1 };
  s3 -> s1 [88, 65535] { R17243 += 1, R17199 += 1, R15333 += 1 };
  s4 -> s4 [0, 86] { R17243 += 1, R17199 += 1, R15333 += 1 };
  s4 -> s9 [0, 65535] { R17243 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [0, 65535] { R17243 += 1, R17199 += 1 };
  s4 -> s4 [88, 65535] { R17243 += 1, R17199 += 1, R15333 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R17243 += 1 };
  s7 -> s4 [0, 86] { R17243 += 1, R17199 += 1, R15333 += 1 };
  s7 -> s7 [0, 65535] { R17243 += 1, R17199 += 1, R15332 += 1, R15333 += 1 };
  s7 -> s4 [88, 65535] { R17243 += 1, R17199 += 1, R15333 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R17243 += 1 };
  s9 -> s8 [0, 65535];
  accepting s4, s8, s5, s9, s1;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R17245 += 1, R17201 += 1, R15336 += 1, R15337 += 1 };
  s0 -> s2 [0, 65535] { R17245 += 1, R17200 += 1, R17201 += 1 };
  s0 -> s0 [0, 65535] { R17244 += 1, R17245 += 1 };
  s0 -> s3 [75, 75] { R17245 += 1, R17201 += 1, R15336 += 1, R15337 += 1 };
  s0 -> s4 [75, 75] { R17245 += 1, R17201 += 1, R15336 += 1, R15337 += 1 };
  s0 -> s1 [76, 65535] { R17245 += 1, R17201 += 1, R15336 += 1, R15337 += 1 };
  s1 -> s1 [0, 74] { R17245 += 1, R17201 += 1, R15336 += 1, R15337 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R17245 += 1 };
  s1 -> s3 [75, 75] { R17245 += 1, R17201 += 1, R15336 += 1, R15337 += 1 };
  s1 -> s4 [75, 75] { R17245 += 1, R17201 += 1, R15336 += 1, R15337 += 1 };
  s1 -> s1 [76, 65535] { R17245 += 1, R17201 += 1, R15336 += 1, R15337 += 1 };
  s2 -> s1 [0, 74] { R17245 += 1, R17201 += 1, R15336 += 1, R15337 += 1 };
  s2 -> s2 [0, 65535] { R17245 += 1, R17200 += 1, R17201 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [75, 75] { R17245 += 1, R17201 += 1, R15336 += 1, R15337 += 1 };
  s2 -> s4 [75, 75] { R17245 += 1, R17201 += 1, R15336 += 1, R15337 += 1 };
  s2 -> s1 [76, 65535] { R17245 += 1, R17201 += 1, R15336 += 1, R15337 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R17245 += 1, R17201 += 1, R15336 += 1, R15337 += 1 };
  s3 -> s6 [0, 65535] { R17245 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R17245 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R17245 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 74] { R17247 += 1, R17203 += 1, R16612 += 1, R16613 += 1 };
  s0 -> s2 [0, 74] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s0 -> s0 [0, 65535] { R17246 += 1, R17247 += 1 };
  s0 -> s3 [0, 65535] { R17247 += 1, R17202 += 1, R17203 += 1 };
  s0 -> s4 [75, 75] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s0 -> s5 [75, 75] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s0 -> s6 [75, 75] { R17247 += 1, R17203 += 1, R16612 += 1, R16613 += 1 };
  s0 -> s7 [75, 75] { R17247 += 1, R17203 += 1, R16612 += 1, R16613 += 1 };
  s0 -> s2 [76, 87] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s0 -> s1 [76, 65535] { R17247 += 1, R17203 += 1, R16612 += 1, R16613 += 1 };
  s0 -> s8 [88, 88] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s0 -> s2 [89, 65535] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s1 -> s1 [0, 74] { R17247 += 1, R17203 += 1, R16612 += 1, R16613 += 1 };
  s1 -> s2 [0, 74] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s1 -> s4 [75, 75] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s1 -> s5 [75, 75] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s1 -> s6 [75, 75] { R17247 += 1, R17203 += 1, R16612 += 1, R16613 += 1 };
  s1 -> s7 [75, 75] { R17247 += 1, R17203 += 1, R16612 += 1, R16613 += 1 };
  s1 -> s2 [76, 87] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s1 -> s1 [76, 65535] { R17247 += 1, R17203 += 1, R16612 += 1, R16613 += 1 };
  s1 -> s8 [88, 88] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s1 -> s2 [89, 65535] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s2 -> s2 [0, 74] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s2 -> s4 [75, 75] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s2 -> s5 [75, 75] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s2 -> s2 [76, 87] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s2 -> s8 [88, 88] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s2 -> s2 [89, 65535] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s3 -> s1 [0, 74] { R17247 += 1, R17203 += 1, R16612 += 1, R16613 += 1 };
  s3 -> s2 [0, 74] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s3 -> s3 [0, 65535] { R17247 += 1, R17202 += 1, R17203 += 1 };
  s3 -> s4 [75, 75] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s3 -> s5 [75, 75] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s3 -> s6 [75, 75] { R17247 += 1, R17203 += 1, R16612 += 1, R16613 += 1 };
  s3 -> s7 [75, 75] { R17247 += 1, R17203 += 1, R16612 += 1, R16613 += 1 };
  s3 -> s2 [76, 87] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s3 -> s1 [76, 65535] { R17247 += 1, R17203 += 1, R16612 += 1, R16613 += 1 };
  s3 -> s8 [88, 88] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s3 -> s2 [89, 65535] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s5 -> s5 [0, 87] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s5 -> s10 [88, 88] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s5 -> s5 [89, 65535] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s6 -> s5 [0, 87] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s6 -> s6 [0, 65535] { R17247 += 1, R17203 += 1, R16612 += 1, R16613 += 1 };
  s6 -> s10 [88, 88] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s6 -> s5 [89, 65535] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s8 -> s9 [0, 74] { R17247 += 1, R17203 += 1 };
  s8 -> s8 [0, 74] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s8 -> s10 [75, 75] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s8 -> s11 [75, 75] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s8 -> s12 [75, 75] { R17247 += 1, R17203 += 1 };
  s8 -> s13 [75, 75] { R17247 += 1, R17203 += 1 };
  s8 -> s9 [76, 65535] { R17247 += 1, R17203 += 1 };
  s8 -> s8 [76, 65535] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s9 -> s9 [0, 74] { R17247 += 1, R17203 += 1 };
  s9 -> s9 [0, 65535] { R17247 += 1 };
  s9 -> s14 [0, 65535];
  s9 -> s12 [75, 75] { R17247 += 1, R17203 += 1 };
  s9 -> s13 [75, 75] { R17247 += 1, R17203 += 1 };
  s9 -> s9 [76, 65535] { R17247 += 1, R17203 += 1 };
  s10 -> s10 [0, 65535] { R17247 += 1, R17203 += 1, R16613 += 1 };
  s10 -> s13 [0, 65535] { R17247 += 1, R17203 += 1 };
  s12 -> s14 [0, 65535];
  s12 -> s12 [0, 65535] { R17247 += 1 };
  s13 -> s14 [0, 65535];
  s13 -> s15 [0, 65535] { R17247 += 1 };
  s13 -> s13 [0, 65535] { R17247 += 1, R17203 += 1 };
  s14 -> s14 [0, 65535];
  s15 -> s14 [0, 65535];
  s15 -> s15 [0, 65535] { R17247 += 1 };
  accepting s12, s13, s9, s14, s15;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 74] { R17249 += 1, R17205 += 1, R17039 += 1, R17040 += 1 };
  s0 -> s2 [0, 74] { R17249 += 1, R17205 += 1, R17038 += 1, R17039 += 1 };
  s0 -> s0 [0, 65535] { R17248 += 1, R17249 += 1 };
  s0 -> s3 [0, 65535] { R17249 += 1, R17204 += 1, R17205 += 1 };
  s0 -> s4 [75, 75] { R17249 += 1, R17205 += 1, R17039 += 1, R17040 += 1 };
  s0 -> s5 [75, 75] { R17249 += 1, R17205 += 1, R17038 += 1, R17039 += 1 };
  s0 -> s6 [75, 75] { R17249 += 1, R17205 += 1, R17039 += 1, R17040 += 1 };
  s0 -> s7 [75, 75] { R17249 += 1, R17205 += 1, R17038 += 1, R17039 += 1 };
  s0 -> s1 [76, 65535] { R17249 += 1, R17205 += 1, R17039 += 1, R17040 += 1 };
  s0 -> s2 [76, 65535] { R17249 += 1, R17205 += 1, R17038 += 1, R17039 += 1 };
  s1 -> s1 [0, 74] { R17249 += 1, R17205 += 1, R17039 += 1, R17040 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s1 [0, 65535] { R17249 += 1 };
  s1 -> s4 [75, 75] { R17249 += 1, R17205 += 1, R17039 += 1, R17040 += 1 };
  s1 -> s6 [75, 75] { R17249 += 1, R17205 += 1, R17039 += 1, R17040 += 1 };
  s1 -> s1 [76, 65535] { R17249 += 1, R17205 += 1, R17039 += 1, R17040 += 1 };
  s2 -> s1 [0, 74] { R17249 += 1, R17205 += 1, R17039 += 1, R17040 += 1 };
  s2 -> s2 [0, 74] { R17249 += 1, R17205 += 1, R17038 += 1, R17039 += 1 };
  s2 -> s4 [75, 75] { R17249 += 1, R17205 += 1, R17039 += 1, R17040 += 1 };
  s2 -> s5 [75, 75] { R17249 += 1, R17205 += 1, R17038 += 1, R17039 += 1 };
  s2 -> s6 [75, 75] { R17249 += 1, R17205 += 1, R17039 += 1, R17040 += 1 };
  s2 -> s7 [75, 75] { R17249 += 1, R17205 += 1, R17038 += 1, R17039 += 1 };
  s2 -> s1 [76, 65535] { R17249 += 1, R17205 += 1, R17039 += 1, R17040 += 1 };
  s2 -> s2 [76, 65535] { R17249 += 1, R17205 += 1, R17038 += 1, R17039 += 1 };
  s3 -> s1 [0, 74] { R17249 += 1, R17205 += 1, R17039 += 1, R17040 += 1 };
  s3 -> s2 [0, 74] { R17249 += 1, R17205 += 1, R17038 += 1, R17039 += 1 };
  s3 -> s3 [0, 65535] { R17249 += 1, R17204 += 1, R17205 += 1 };
  s3 -> s4 [75, 75] { R17249 += 1, R17205 += 1, R17039 += 1, R17040 += 1 };
  s3 -> s5 [75, 75] { R17249 += 1, R17205 += 1, R17038 += 1, R17039 += 1 };
  s3 -> s6 [75, 75] { R17249 += 1, R17205 += 1, R17039 += 1, R17040 += 1 };
  s3 -> s7 [75, 75] { R17249 += 1, R17205 += 1, R17038 += 1, R17039 += 1 };
  s3 -> s1 [76, 65535] { R17249 += 1, R17205 += 1, R17039 += 1, R17040 += 1 };
  s3 -> s2 [76, 65535] { R17249 += 1, R17205 += 1, R17038 += 1, R17039 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [0, 65535] { R17249 += 1 };
  s5 -> s5 [0, 65535] { R17249 += 1, R17205 += 1, R17038 += 1, R17039 += 1 };
  s5 -> s6 [0, 65535] { R17249 += 1, R17205 += 1, R17039 += 1, R17040 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R17249 += 1, R17205 += 1, R17039 += 1, R17040 += 1 };
  s6 -> s9 [0, 65535] { R17249 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R17249 += 1 };
  accepting s4, s8, s9, s6, s1;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 74] { R17251 += 1, R17207 += 1, R17148 += 1, R17149 += 1 };
  s0 -> s2 [0, 74] { R17251 += 1, R17207 += 1, R17149 += 1 };
  s0 -> s0 [0, 65535] { R17250 += 1, R17251 += 1 };
  s0 -> s3 [0, 65535] { R17251 += 1, R17206 += 1, R17207 += 1 };
  s0 -> s4 [75, 75] { R17251 += 1, R17207 += 1, R17148 += 1, R17149 += 1 };
  s0 -> s5 [75, 75] { R17251 += 1, R17207 += 1, R17149 += 1 };
  s0 -> s6 [75, 75] { R17251 += 1, R17207 += 1, R17149 += 1 };
  s0 -> s7 [75, 75] { R17251 += 1, R17207 += 1, R17148 += 1, R17149 += 1 };
  s0 -> s2 [76, 86] { R17251 += 1, R17207 += 1, R17149 += 1 };
  s0 -> s1 [76, 65535] { R17251 += 1, R17207 += 1, R17148 += 1, R17149 += 1 };
  s0 -> s2 [89, 65535] { R17251 += 1, R17207 += 1, R17149 += 1 };
  s1 -> s1 [0, 74] { R17251 += 1, R17207 += 1, R17148 += 1, R17149 += 1 };
  s1 -> s2 [0, 74] { R17251 += 1, R17207 += 1, R17149 += 1 };
  s1 -> s4 [75, 75] { R17251 += 1, R17207 += 1, R17148 += 1, R17149 += 1 };
  s1 -> s5 [75, 75] { R17251 += 1, R17207 += 1, R17149 += 1 };
  s1 -> s6 [75, 75] { R17251 += 1, R17207 += 1, R17149 += 1 };
  s1 -> s7 [75, 75] { R17251 += 1, R17207 += 1, R17148 += 1, R17149 += 1 };
  s1 -> s2 [76, 86] { R17251 += 1, R17207 += 1, R17149 += 1 };
  s1 -> s1 [76, 65535] { R17251 += 1, R17207 += 1, R17148 += 1, R17149 += 1 };
  s1 -> s2 [89, 65535] { R17251 += 1, R17207 += 1, R17149 += 1 };
  s2 -> s2 [0, 74] { R17251 += 1, R17207 += 1, R17149 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R17251 += 1 };
  s2 -> s5 [75, 75] { R17251 += 1, R17207 += 1 };
  s2 -> s6 [75, 75] { R17251 += 1, R17207 += 1 };
  s2 -> s2 [76, 86] { R17251 += 1, R17207 += 1, R17149 += 1 };
  s2 -> s2 [76, 65535] { R17251 += 1, R17207 += 1 };
  s2 -> s2 [89, 65535] { R17251 += 1, R17207 += 1, R17149 += 1 };
  s3 -> s1 [0, 74] { R17251 += 1, R17207 += 1, R17148 += 1, R17149 += 1 };
  s3 -> s2 [0, 74] { R17251 += 1, R17207 += 1, R17149 += 1 };
  s3 -> s3 [0, 65535] { R17251 += 1, R17206 += 1, R17207 += 1 };
  s3 -> s4 [75, 75] { R17251 += 1, R17207 += 1, R17148 += 1, R17149 += 1 };
  s3 -> s5 [75, 75] { R17251 += 1, R17207 += 1, R17149 += 1 };
  s3 -> s6 [75, 75] { R17251 += 1, R17207 += 1, R17149 += 1 };
  s3 -> s7 [75, 75] { R17251 += 1, R17207 += 1, R17148 += 1, R17149 += 1 };
  s3 -> s2 [76, 86] { R17251 += 1, R17207 += 1, R17149 += 1 };
  s3 -> s1 [76, 65535] { R17251 += 1, R17207 += 1, R17148 += 1, R17149 += 1 };
  s3 -> s2 [89, 65535] { R17251 += 1, R17207 += 1, R17149 += 1 };
  s5 -> s5 [0, 65535] { R17251 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 86] { R17251 += 1, R17207 += 1, R17149 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R17251 += 1, R17207 += 1 };
  s6 -> s9 [0, 65535] { R17251 += 1 };
  s6 -> s6 [89, 65535] { R17251 += 1, R17207 += 1, R17149 += 1 };
  s7 -> s6 [0, 86] { R17251 += 1, R17207 += 1, R17149 += 1 };
  s7 -> s7 [0, 65535] { R17251 += 1, R17207 += 1, R17148 += 1, R17149 += 1 };
  s7 -> s6 [89, 65535] { R17251 += 1, R17207 += 1, R17149 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R17251 += 1 };
  accepting s8, s5, s2, s9, s6;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
constraint R2 = R17251 && R20 - R17251 = -1 && R21 = R17251 && R22 - R17251 = -1 && R23 = R17251 && R24 = 0 && R25 = 1 && R26 = 0 && R27 = 1 && R38 + R67 + R66 + -1*R16615 + -1*R16613 - R53 = 0 && R52 + R16614 + R16612 = 0 && R17192 = 0 && R17193 = 0 && R17198 = 0 && R17199 = 0 && R17202 = 0 && R17203 = 0 && R17204 = 0 && R17205 = 0 && R17206 = 0 && R17207 = 0 && R17208 = 0 && R17209 = R17251 && R17210 = 0 && R17211 = R17251 && R17212 = 0 && R17213 = R17251 && R17214 = 0 && R17215 = R17251 && R17216 = 0 && R17217 = R17251 && R17218 = 0 && R17219 = R17251 && R17220 = 0 && R17221 = R17251 && R17222 = 0 && R17223 = R17251 && R17224 = 0 && R17225 = R17251 && R17226 = 0 && R17227 = R17251 && R17228 = 0 && R17229 = R17251 && R17230 = 0 && R17231 = R17251 && R17232 = 0 && R17233 = R17251 && R17234 = 0 && R17235 = R17251 && R17236 = 0 && R17237 = R17251 && R17238 = 0 && R17239 = R17251 && R17240 = 0 && R17241 = R17251 && R17242 = 0 && R17243 = R17251 && R17244 = 0 && R17245 = R17251 && R17246 = 0 && R17247 = R17251 && R17248 = 0 && R17249 = R17251 && R17250 = 0 && -1 < R1 && R8 < 1 && R11 < 1 && R12 < 1 && R40 + R69 + R68 < 1 && -1*R16615 + -1*R16613 - R53 < 1 && 0 < R17251 && (R1 != 0 || R17 = 0 || (R17152 = 0 && R17153 = 0)) && (R1 != 0 || R17 = 0 || (R17154 = 0 && R17155 = 0)) && (R1 != 0 || R17 = 0 || (R17156 = 0 && R17157 = 0)) && (R1 != 0 || R17 = 0 || (R17158 = 0 && R17159 = 0)) && (R1 != 0 || R17 = 0 || (R17160 = 0 && R17161 = 0)) && (R1 != 0 || R17 = 0 || (R17162 = 0 && R17163 = 0)) && (R1 != 0 || R17 = 0 || (R17164 = 0 && R17165 = 0)) && (R1 != 0 || R17 = 0 || (R17166 = 0 && R17167 = 0)) && (R1 != 0 || R17 = 0 || (R17168 = 0 && R17169 = 0)) && (R1 != 0 || R17 = 0 || (R17170 = 0 && R17171 = 0)) && (R48 + R15341 + R15338 != 0 || ((R42 + R15334 + R15332 != 0 || R43 + R15335 + R15333 + -1*R16615 + -1*R16613 - R53 = 0 || R53 + R16615 + R16613 < 1) && (R42 + R15334 + R15332 = 0 || R53 + R16615 + R16613 < 1))) && (R48 + R15341 + R15338 != 0 || ((R46 + R15339 + R15336 != 0 || R47 + R15340 + R15337 + -1*R16615 + -1*R16613 - R53 = 0 || R53 + R16615 + R16613 < 1) && (R46 + R15339 + R15336 = 0 || R53 + R16615 + R16613 < 1))) && (R17152 != 0 || R1 = R17153 || R1 < 1) && (R17154 != 0 || R1 = R17155 || R1 < 1) && (R17156 != 0 || R1 = R17157 || R1 < 1) && (R17158 != 0 || R1 = R17159 || R1 < 1) && (R17160 != 0 || R1 = R17161 || R1 < 1) && (R17162 != 0 || R1 = R17163 || R1 < 1) && (R17164 != 0 || R1 = R17165 || R1 < 1) && (R17166 != 0 || R1 = R17167 || R1 < 1) && (R17168 != 0 || R1 = R17169 || R1 < 1) && (R17170 != 0 || R1 = R17171 || R1 < 1) && (R18 = 0 || (R17190 = 0 && R17191 = 0)) && (R18 = 0 || (R17194 = 0 && R17195 = 0)) && (R18 = 0 || (R17196 = 0 && R17197 = 0)) && (R18 = 0 || (R17200 = 0 && R17201 = 0)) && (R19 = 0 || (R17172 = 0 && R17173 = 0)) && (R19 = 0 || (R17174 = 0 && R17175 = 0)) && (R19 = 0 || (R17176 = 0 && R17177 = 0)) && (R19 = 0 || (R17178 = 0 && R17179 = 0)) && (R19 = 0 || (R17180 = 0 && R17181 = 0)) && (R19 = 0 || (R17182 = 0 && R17183 = 0)) && (R19 = 0 || (R17184 = 0 && R17185 = 0)) && (R19 = 0 || (R17186 = 0 && R17187 = 0)) && (R19 = 0 || (R17188 = 0 && R17189 = 0)) && (R48 + R15341 + R15338 = 0 || (R42 + R15334 + R15332 = 0 && R43 + R15335 + R15333 + -1*R16615 + -1*R16613 - R53 = 0)) && (R48 + R15341 + R15338 = 0 || (R46 + R15339 + R15336 = 0 && R47 + R15340 + R15337 + -1*R16615 + -1*R16613 - R53 = 0)) && (R58 + R17043 + R17040 = 0 || (R56 + R17041 + R17038 = 0 && R57 + R17042 + R17039 = 0)) && (R58 + R17043 + R17040 = 0 || (R62 + R17150 + R17148 = 0 && R63 + R17151 + R17149 = 0)) && (R17152 = 0 || R1 < 1) && (R17154 = 0 || R1 < 1) && (R17156 = 0 || R1 < 1) && (R17158 = 0 || R1 < 1) && (R17160 = 0 || R1 < 1) && (R17162 = 0 || R1 < 1) && (R17164 = 0 || R1 < 1) && (R17166 = 0 || R1 < 1) && (R17168 = 0 || R1 < 1) && (R17170 = 0 || R1 < 1);
// End of Parikh automata intersection problem
