// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R12, R15332, R15333, R15334, R15335, R15336, R15337, R15338, R15339, R15340, R15341, R17, R17882, R17883, R17884, R17885, R18, R18308, R18309, R18310, R18311, R18312, R18313, R18626, R18627, R18628, R18629, R18630, R18631, R18632, R18633, R18634, R18635, R18636, R18637, R18638, R18639, R18640, R18641, R18642, R18643, R18644, R18645, R18646, R18647, R18648, R18649, R18650, R18651, R18652, R18653, R18654, R18655, R18656, R18657, R18658, R18659, R18660, R18661, R18662, R18663, R18664, R18665, R18666, R18667, R18668, R18669, R18670, R18671, R18672, R18673, R18674, R18675, R18676, R18677, R18678, R18679, R18680, R18681, R18682, R18683, R18684, R18685, R18686, R18687, R18688, R18689, R18690, R18691, R18692, R18693, R18694, R18695, R18696, R18697, R18698, R18699, R18700, R18701, R18702, R18703, R18704, R18705, R18706, R18707, R18708, R18709, R18710, R18711, R18712, R18713, R18714, R18715, R18716, R18717, R18718, R18719, R18720, R18721, R18722, R18723, R18724, R18725, R18726, R18727, R18728, R18729, R19, R2, R20, R21, R22, R23, R24, R25, R26, R27, R3, R38, R4, R40, R42, R43, R46, R47, R48, R52, R53, R56, R57, R58, R62, R63, R66, R67, R68, R69, R8;
synchronised {  // Automata constraining P64
automaton P64_0 {
  init s0;
  s0 -> s1 [119, 119];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [75, 75];
  s0 -> s0 [76, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [75, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R2 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R11 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 74];
  s0 -> s0 [0, 65535] { R12 += 1 };
  s0 -> s2 [75, 75];
  s0 -> s1 [76, 65535];
  s1 -> s1 [0, 74];
  s1 -> s2 [75, 75];
  s1 -> s1 [76, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R21 += 1 };
  s0 -> s0 [0, 65535] { R20 += 1, R21 += 1 };
  s0 -> s2 [9, 13] { R21 += 1 };
  s0 -> s1 [14, 31] { R21 += 1 };
  s0 -> s2 [32, 32] { R21 += 1 };
  s0 -> s1 [33, 65535] { R21 += 1 };
  s1 -> s1 [0, 65535] { R21 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R21 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s0 [0, 65535] { R22 += 1, R23 += 1 };
  s0 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s1 -> s1 [0, 65535] { R23 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R25 += 1 };
  s0 -> s0 [0, 65535] { R24 += 1, R25 += 1 };
  s0 -> s2 [9, 13] { R25 += 1 };
  s0 -> s1 [14, 31] { R25 += 1 };
  s0 -> s2 [32, 32] { R25 += 1 };
  s0 -> s1 [33, 65535] { R25 += 1 };
  s1 -> s1 [0, 65535] { R25 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R25 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R26 += 1, R27 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R27 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R18651 += 1, R19 += 1 };
  s0 -> s0 [0, 65535] { R18650 += 1, R18651 += 1 };
  s1 -> s1 [0, 65535] { R18651 += 1, R19 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 74] { R18653 += 1 };
  s0 -> s0 [0, 65535] { R18652 += 1, R18653 += 1 };
  s0 -> s2 [75, 75] { R18653 += 1 };
  s0 -> s3 [75, 75] { R18653 += 1 };
  s0 -> s1 [88, 65535] { R18653 += 1 };
  s1 -> s1 [0, 74] { R18653 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R18653 += 1 };
  s1 -> s3 [75, 75] { R18653 += 1 };
  s1 -> s1 [88, 65535] { R18653 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 75] { R18653 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [88, 65535] { R18653 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 74] { R18655 += 1, R38 += 1 };
  s0 -> s0 [0, 65535] { R18654 += 1, R18655 += 1 };
  s0 -> s2 [75, 75] { R18655 += 1, R38 += 1 };
  s0 -> s3 [75, 75] { R18655 += 1, R38 += 1 };
  s0 -> s1 [76, 65535] { R18655 += 1, R38 += 1 };
  s1 -> s1 [0, 74] { R18655 += 1, R38 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R18655 += 1, R38 += 1 };
  s1 -> s3 [75, 75] { R18655 += 1, R38 += 1 };
  s1 -> s1 [76, 65535] { R18655 += 1, R38 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R18655 += 1, R38 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 74] { R18657 += 1, R40 += 1 };
  s0 -> s0 [0, 65535] { R18656 += 1, R18657 += 1 };
  s0 -> s2 [75, 75] { R18657 += 1, R40 += 1 };
  s0 -> s3 [75, 75] { R18657 += 1, R40 += 1 };
  s0 -> s1 [76, 65535] { R18657 += 1, R40 += 1 };
  s1 -> s1 [0, 74] { R18657 += 1, R40 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R18657 += 1, R40 += 1 };
  s1 -> s3 [75, 75] { R18657 += 1, R40 += 1 };
  s1 -> s1 [76, 65535] { R18657 += 1, R40 += 1 };
  s2 -> s2 [0, 65535] { R18657 += 1, R40 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 74] { R18659 += 1, R42 += 1, R43 += 1 };
  s0 -> s0 [0, 65535] { R18658 += 1, R18659 += 1 };
  s0 -> s2 [75, 75] { R18659 += 1, R42 += 1, R43 += 1 };
  s0 -> s3 [75, 75] { R18659 += 1, R42 += 1, R43 += 1 };
  s0 -> s1 [76, 65535] { R18659 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 74] { R18659 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R18659 += 1, R42 += 1, R43 += 1 };
  s1 -> s3 [75, 75] { R18659 += 1, R42 += 1, R43 += 1 };
  s1 -> s1 [76, 65535] { R18659 += 1, R42 += 1, R43 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R18659 += 1, R42 += 1, R43 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 74] { R18661 += 1, R46 += 1, R47 += 1 };
  s0 -> s0 [0, 65535] { R18660 += 1, R18661 += 1 };
  s0 -> s2 [75, 75] { R18661 += 1, R46 += 1, R47 += 1 };
  s0 -> s3 [75, 75] { R18661 += 1, R46 += 1, R47 += 1 };
  s0 -> s1 [76, 65535] { R18661 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 74] { R18661 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R18661 += 1, R46 += 1, R47 += 1 };
  s1 -> s3 [75, 75] { R18661 += 1, R46 += 1, R47 += 1 };
  s1 -> s1 [76, 65535] { R18661 += 1, R46 += 1, R47 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R18661 += 1, R46 += 1, R47 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 74] { R18663 += 1, R52 += 1, R53 += 1 };
  s0 -> s0 [0, 65535] { R18662 += 1, R18663 += 1 };
  s0 -> s2 [75, 75] { R18663 += 1, R52 += 1, R53 += 1 };
  s0 -> s3 [75, 75] { R18663 += 1, R52 += 1, R53 += 1 };
  s0 -> s1 [76, 65535] { R18663 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 74] { R18663 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R18663 += 1, R52 += 1, R53 += 1 };
  s1 -> s3 [75, 75] { R18663 += 1, R52 += 1, R53 += 1 };
  s1 -> s1 [76, 65535] { R18663 += 1, R52 += 1, R53 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R18663 += 1, R52 += 1, R53 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 74] { R18665 += 1, R56 += 1, R57 += 1 };
  s0 -> s0 [0, 65535] { R18664 += 1, R18665 += 1 };
  s0 -> s2 [75, 75] { R18665 += 1, R56 += 1, R57 += 1 };
  s0 -> s3 [75, 75] { R18665 += 1, R56 += 1, R57 += 1 };
  s0 -> s1 [76, 65535] { R18665 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 74] { R18665 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R18665 += 1, R56 += 1, R57 += 1 };
  s1 -> s3 [75, 75] { R18665 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [76, 65535] { R18665 += 1, R56 += 1, R57 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R18665 += 1, R56 += 1, R57 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 74] { R18667 += 1, R62 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R18666 += 1, R18667 += 1 };
  s0 -> s2 [75, 75] { R18667 += 1, R62 += 1, R63 += 1 };
  s0 -> s3 [75, 75] { R18667 += 1, R62 += 1, R63 += 1 };
  s0 -> s1 [76, 65535] { R18667 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 74] { R18667 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [75, 75] { R18667 += 1, R62 += 1, R63 += 1 };
  s1 -> s3 [75, 75] { R18667 += 1, R62 += 1, R63 += 1 };
  s1 -> s1 [76, 65535] { R18667 += 1, R62 += 1, R63 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R18667 += 1, R62 += 1, R63 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 74] { R18687 += 1 };
  s0 -> s0 [0, 65535] { R18686 += 1, R18687 += 1 };
  s0 -> s2 [75, 75] { R18687 += 1 };
  s0 -> s1 [76, 65535] { R18687 += 1 };
  s1 -> s1 [0, 74] { R18687 += 1 };
  s1 -> s2 [75, 75] { R18687 += 1 };
  s1 -> s1 [76, 65535] { R18687 += 1 };
  s2 -> s2 [0, 65535] { R18687 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R18689 += 1, R1 += 1 };
  s0 -> s0 [0, 65535] { R18688 += 1, R18689 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R18689 += 1, R1 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 74] { R18691 += 1 };
  s0 -> s0 [0, 65535] { R18690 += 1, R18691 += 1 };
  s0 -> s2 [0, 65535] { R18691 += 1, R8 += 1 };
  s0 -> s3 [75, 75] { R18691 += 1 };
  s0 -> s1 [76, 65535] { R18691 += 1 };
  s1 -> s1 [0, 74] { R18691 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [75, 75] { R18691 += 1 };
  s1 -> s1 [76, 65535] { R18691 += 1 };
  s2 -> s1 [0, 74] { R18691 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R18691 += 1, R8 += 1 };
  s2 -> s3 [75, 75] { R18691 += 1 };
  s2 -> s1 [76, 65535] { R18691 += 1 };
  s3 -> s3 [0, 65535] { R18691 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 74] { R18693 += 1, R18631 += 1 };
  s0 -> s0 [0, 65535] { R18692 += 1, R18693 += 1 };
  s0 -> s2 [0, 65535] { R18693 += 1, R18630 += 1, R18631 += 1 };
  s0 -> s1 [76, 65535] { R18693 += 1, R18631 += 1 };
  s1 -> s1 [0, 74] { R18693 += 1, R18631 += 1 };
  s1 -> s1 [0, 65535] { R18693 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [76, 65535] { R18693 += 1, R18631 += 1 };
  s2 -> s1 [0, 74] { R18693 += 1, R18631 += 1 };
  s2 -> s2 [0, 65535] { R18693 += 1, R18630 += 1, R18631 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [76, 65535] { R18693 += 1, R18631 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65535] { R18695 += 1, R18632 += 1, R18633 += 1 };
  s0 -> s0 [0, 65535] { R18694 += 1, R18695 += 1 };
  s0 -> s2 [0, 65535] { R18695 += 1, R18633 += 1, R17 += 1 };
  s1 -> s1 [0, 65535] { R18695 += 1, R18632 += 1, R18633 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R18695 += 1, R18633 += 1, R17 += 1 };
  s2 -> s3 [0, 65535] { R18695 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R18695 += 1, R18633 += 1, R17 += 1 };
  s3 -> s3 [0, 65535] { R18695 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 75] { R18697 += 1, R18635 += 1 };
  s0 -> s0 [0, 65535] { R18696 += 1, R18697 += 1 };
  s0 -> s2 [0, 65535] { R18697 += 1, R18634 += 1, R18635 += 1 };
  s0 -> s1 [87, 65535] { R18697 += 1, R18635 += 1 };
  s1 -> s1 [0, 75] { R18697 += 1, R18635 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R18697 += 1 };
  s1 -> s1 [87, 65535] { R18697 += 1, R18635 += 1 };
  s2 -> s1 [0, 75] { R18697 += 1, R18635 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R18697 += 1, R18634 += 1, R18635 += 1 };
  s2 -> s1 [87, 65535] { R18697 += 1, R18635 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R18699 += 1, R18636 += 1, R18637 += 1 };
  s0 -> s0 [0, 65535] { R18698 += 1, R18699 += 1 };
  s0 -> s2 [0, 65535] { R18699 += 1, R18637 += 1, R67 += 1 };
  s1 -> s1 [0, 65535] { R18699 += 1, R18636 += 1, R18637 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R18699 += 1, R18637 += 1, R67 += 1 };
  s2 -> s3 [0, 65535] { R18699 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R18699 += 1, R18637 += 1, R67 += 1 };
  s3 -> s3 [0, 65535] { R18699 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 86] { R18701 += 1, R18639 += 1 };
  s0 -> s2 [0, 65535] { R18701 += 1, R18638 += 1, R18639 += 1 };
  s0 -> s3 [0, 65535] { R18701 += 1, R18639 += 1, R69 += 1 };
  s0 -> s0 [0, 65535] { R18700 += 1, R18701 += 1 };
  s0 -> s1 [88, 65535] { R18701 += 1, R18639 += 1 };
  s1 -> s1 [0, 86] { R18701 += 1, R18639 += 1 };
  s1 -> s1 [0, 65535] { R18701 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [88, 65535] { R18701 += 1, R18639 += 1 };
  s2 -> s1 [0, 86] { R18701 += 1, R18639 += 1 };
  s2 -> s2 [0, 65535] { R18701 += 1, R18638 += 1, R18639 += 1 };
  s2 -> s3 [0, 65535] { R18701 += 1, R18639 += 1, R69 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [88, 65535] { R18701 += 1, R18639 += 1 };
  s3 -> s1 [0, 86] { R18701 += 1, R18639 += 1 };
  s3 -> s4 [0, 65535] { R18701 += 1 };
  s3 -> s3 [0, 65535] { R18701 += 1, R18639 += 1, R69 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [88, 65535] { R18701 += 1, R18639 += 1 };
  s4 -> s4 [0, 65535] { R18701 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 86] { R18703 += 1, R18641 += 1, R15335 += 1 };
  s0 -> s0 [0, 65535] { R18702 += 1, R18703 += 1 };
  s0 -> s2 [0, 65535] { R18703 += 1, R18640 += 1, R18641 += 1 };
  s0 -> s1 [0, 65535] { R18703 += 1, R18641 += 1 };
  s0 -> s1 [88, 65535] { R18703 += 1, R18641 += 1, R15335 += 1 };
  s1 -> s1 [0, 86] { R18703 += 1, R18641 += 1, R15335 += 1 };
  s1 -> s4 [0, 65535] { R18703 += 1 };
  s1 -> s1 [0, 65535] { R18703 += 1, R18641 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [88, 65535] { R18703 += 1, R18641 += 1, R15335 += 1 };
  s2 -> s1 [0, 86] { R18703 += 1, R18641 += 1, R15335 += 1 };
  s2 -> s2 [0, 65535] { R18703 += 1, R18640 += 1, R18641 += 1 };
  s2 -> s1 [0, 65535] { R18703 += 1, R18641 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [88, 65535] { R18703 += 1, R18641 += 1, R15335 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R18703 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R18705 += 1, R18643 += 1, R15339 += 1, R15340 += 1 };
  s0 -> s2 [0, 65535] { R18705 += 1, R18642 += 1, R18643 += 1 };
  s0 -> s3 [0, 65535] { R18705 += 1, R18643 += 1, R15340 += 1, R15341 += 1 };
  s0 -> s0 [0, 65535] { R18704 += 1, R18705 += 1 };
  s1 -> s1 [0, 65535] { R18705 += 1, R18643 += 1, R15339 += 1, R15340 += 1 };
  s1 -> s4 [0, 65535] { R18705 += 1 };
  s1 -> s3 [0, 65535] { R18705 += 1, R18643 += 1, R15340 += 1, R15341 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s1 [0, 65535] { R18705 += 1, R18643 += 1, R15339 += 1, R15340 += 1 };
  s2 -> s2 [0, 65535] { R18705 += 1, R18642 += 1, R18643 += 1 };
  s2 -> s3 [0, 65535] { R18705 += 1, R18643 += 1, R15340 += 1, R15341 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R18705 += 1 };
  s3 -> s5 [0, 65535] { R18705 += 1, R18643 += 1 };
  s3 -> s3 [0, 65535] { R18705 += 1, R18643 += 1, R15340 += 1, R15341 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R18705 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s4 [0, 65535] { R18705 += 1 };
  s5 -> s5 [0, 65535] { R18705 += 1, R18643 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 87] { R18707 += 1, R18645 += 1, R17885 += 1 };
  s0 -> s2 [0, 65535] { R18707 += 1, R18645 += 1, R17884 += 1, R17885 += 1 };
  s0 -> s3 [0, 65535] { R18707 += 1, R18644 += 1, R18645 += 1 };
  s0 -> s0 [0, 65535] { R18706 += 1, R18707 += 1 };
  s0 -> s4 [88, 88] { R18707 += 1, R18645 += 1, R17885 += 1 };
  s0 -> s1 [89, 65535] { R18707 += 1, R18645 += 1, R17885 += 1 };
  s1 -> s1 [0, 87] { R18707 += 1, R18645 += 1, R17885 += 1 };
  s1 -> s4 [88, 88] { R18707 += 1, R18645 += 1, R17885 += 1 };
  s1 -> s1 [89, 65535] { R18707 += 1, R18645 += 1, R17885 += 1 };
  s2 -> s1 [0, 87] { R18707 += 1, R18645 += 1, R17885 += 1 };
  s2 -> s2 [0, 65535] { R18707 += 1, R18645 += 1, R17884 += 1, R17885 += 1 };
  s2 -> s4 [88, 88] { R18707 += 1, R18645 += 1, R17885 += 1 };
  s2 -> s1 [89, 65535] { R18707 += 1, R18645 += 1, R17885 += 1 };
  s3 -> s1 [0, 87] { R18707 += 1, R18645 += 1, R17885 += 1 };
  s3 -> s2 [0, 65535] { R18707 += 1, R18645 += 1, R17884 += 1, R17885 += 1 };
  s3 -> s3 [0, 65535] { R18707 += 1, R18644 += 1, R18645 += 1 };
  s3 -> s4 [88, 88] { R18707 += 1, R18645 += 1, R17885 += 1 };
  s3 -> s1 [89, 65535] { R18707 += 1, R18645 += 1, R17885 += 1 };
  s4 -> s5 [0, 65535] { R18707 += 1 };
  s4 -> s6 [0, 65535] { R18707 += 1, R18645 += 1 };
  s4 -> s4 [0, 65535] { R18707 += 1, R18645 += 1, R17885 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R18707 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s5 [0, 65535] { R18707 += 1 };
  s6 -> s6 [0, 65535] { R18707 += 1, R18645 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s4, s5, s6, s7;
};
automaton value2_28 {
  init s0;
  s0 -> s0 [0, 65535] { R18708 += 1, R18709 += 1 };
  s0 -> s1 [0, 65535] { R18709 += 1, R18647 += 1 };
  s0 -> s2 [0, 65535] { R18709 += 1, R18647 += 1, R18312 += 1, R18313 += 1 };
  s0 -> s3 [0, 65535] { R18709 += 1, R18646 += 1, R18647 += 1 };
  s1 -> s1 [0, 65535] { R18709 += 1, R18647 += 1 };
  s1 -> s5 [0, 65535] { R18709 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R18709 += 1, R18647 += 1 };
  s2 -> s2 [0, 65535] { R18709 += 1, R18647 += 1, R18312 += 1, R18313 += 1 };
  s2 -> s5 [0, 65535] { R18709 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R18709 += 1, R18647 += 1 };
  s3 -> s2 [0, 65535] { R18709 += 1, R18647 += 1, R18312 += 1, R18313 += 1 };
  s3 -> s3 [0, 65535] { R18709 += 1, R18646 += 1, R18647 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R18709 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s0 [0, 65535] { R18710 += 1, R18711 += 1 };
  s0 -> s1 [0, 65535] { R18711 += 1, R18649 += 1 };
  s0 -> s2 [0, 65535] { R18711 += 1, R18648 += 1, R18649 += 1 };
  s1 -> s4 [0, 65535] { R18711 += 1 };
  s1 -> s1 [0, 65535] { R18711 += 1, R18649 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R18711 += 1, R18649 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R18711 += 1, R18648 += 1, R18649 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R18711 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R18713 += 1, R18669 += 1, R18 += 1 };
  s0 -> s2 [0, 65535] { R18713 += 1, R18668 += 1, R18669 += 1 };
  s0 -> s0 [0, 65535] { R18712 += 1, R18713 += 1 };
  s1 -> s1 [0, 65535] { R18713 += 1, R18669 += 1, R18 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R18713 += 1 };
  s2 -> s1 [0, 65535] { R18713 += 1, R18669 += 1, R18 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R18713 += 1, R18668 += 1, R18669 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R18713 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R18715 += 1, R18671 += 1 };
  s0 -> s2 [0, 65535] { R18715 += 1, R18670 += 1, R18671 += 1 };
  s0 -> s0 [0, 65535] { R18714 += 1, R18715 += 1 };
  s0 -> s3 [75, 75] { R18715 += 1, R18671 += 1 };
  s0 -> s4 [75, 75] { R18715 += 1, R18671 += 1 };
  s0 -> s5 [87, 87] { R18715 += 1, R18671 += 1 };
  s0 -> s1 [88, 65535] { R18715 += 1, R18671 += 1 };
  s1 -> s1 [0, 74] { R18715 += 1, R18671 += 1 };
  s1 -> s3 [75, 75] { R18715 += 1, R18671 += 1 };
  s1 -> s4 [75, 75] { R18715 += 1, R18671 += 1 };
  s1 -> s5 [87, 87] { R18715 += 1, R18671 += 1 };
  s1 -> s1 [88, 65535] { R18715 += 1, R18671 += 1 };
  s2 -> s1 [0, 74] { R18715 += 1, R18671 += 1 };
  s2 -> s2 [0, 65535] { R18715 += 1, R18670 += 1, R18671 += 1 };
  s2 -> s3 [75, 75] { R18715 += 1, R18671 += 1 };
  s2 -> s4 [75, 75] { R18715 += 1, R18671 += 1 };
  s2 -> s5 [87, 87] { R18715 += 1, R18671 += 1 };
  s2 -> s1 [88, 65535] { R18715 += 1, R18671 += 1 };
  s4 -> s4 [0, 75] { R18715 += 1, R18671 += 1 };
  s4 -> s7 [87, 87] { R18715 += 1, R18671 += 1 };
  s4 -> s4 [88, 65535] { R18715 += 1, R18671 += 1 };
  s5 -> s5 [0, 74] { R18715 += 1, R18671 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R18715 += 1 };
  s5 -> s7 [75, 75] { R18715 += 1, R18671 += 1 };
  s5 -> s8 [75, 75] { R18715 += 1, R18671 += 1 };
  s5 -> s5 [87, 65535] { R18715 += 1, R18671 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 75] { R18715 += 1, R18671 += 1 };
  s7 -> s7 [0, 65535] { R18715 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [87, 65535] { R18715 += 1, R18671 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R18715 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 74] { R18717 += 1, R18673 += 1, R66 += 1 };
  s0 -> s2 [0, 65535] { R18717 += 1, R18672 += 1, R18673 += 1 };
  s0 -> s0 [0, 65535] { R18716 += 1, R18717 += 1 };
  s0 -> s3 [75, 75] { R18717 += 1, R18673 += 1, R66 += 1 };
  s0 -> s4 [75, 75] { R18717 += 1, R18673 += 1, R66 += 1 };
  s0 -> s1 [76, 65535] { R18717 += 1, R18673 += 1, R66 += 1 };
  s1 -> s1 [0, 74] { R18717 += 1, R18673 += 1, R66 += 1 };
  s1 -> s1 [0, 65535] { R18717 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [75, 75] { R18717 += 1, R18673 += 1, R66 += 1 };
  s1 -> s4 [75, 75] { R18717 += 1, R18673 += 1, R66 += 1 };
  s1 -> s1 [76, 65535] { R18717 += 1, R18673 += 1, R66 += 1 };
  s2 -> s1 [0, 74] { R18717 += 1, R18673 += 1, R66 += 1 };
  s2 -> s2 [0, 65535] { R18717 += 1, R18672 += 1, R18673 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [75, 75] { R18717 += 1, R18673 += 1, R66 += 1 };
  s2 -> s4 [75, 75] { R18717 += 1, R18673 += 1, R66 += 1 };
  s2 -> s1 [76, 65535] { R18717 += 1, R18673 += 1, R66 += 1 };
  s3 -> s3 [0, 65535] { R18717 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R18717 += 1, R18673 += 1, R66 += 1 };
  s4 -> s5 [0, 65535] { R18717 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R18717 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 74] { R18719 += 1, R18675 += 1, R68 += 1 };
  s0 -> s2 [0, 65535] { R18719 += 1, R18674 += 1, R18675 += 1 };
  s0 -> s0 [0, 65535] { R18718 += 1, R18719 += 1 };
  s0 -> s3 [75, 75] { R18719 += 1, R18675 += 1, R68 += 1 };
  s0 -> s4 [75, 75] { R18719 += 1, R18675 += 1, R68 += 1 };
  s0 -> s1 [76, 65535] { R18719 += 1, R18675 += 1, R68 += 1 };
  s1 -> s1 [0, 74] { R18719 += 1, R18675 += 1, R68 += 1 };
  s1 -> s1 [0, 65535] { R18719 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [75, 75] { R18719 += 1, R18675 += 1, R68 += 1 };
  s1 -> s4 [75, 75] { R18719 += 1, R18675 += 1, R68 += 1 };
  s1 -> s1 [76, 65535] { R18719 += 1, R18675 += 1, R68 += 1 };
  s2 -> s1 [0, 74] { R18719 += 1, R18675 += 1, R68 += 1 };
  s2 -> s2 [0, 65535] { R18719 += 1, R18674 += 1, R18675 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [75, 75] { R18719 += 1, R18675 += 1, R68 += 1 };
  s2 -> s4 [75, 75] { R18719 += 1, R18675 += 1, R68 += 1 };
  s2 -> s1 [76, 65535] { R18719 += 1, R18675 += 1, R68 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R18719 += 1, R18675 += 1, R68 += 1 };
  s3 -> s6 [0, 65535] { R18719 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R18719 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R18719 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R18721 += 1, R18677 += 1, R15333 += 1 };
  s0 -> s2 [0, 74] { R18721 += 1, R18677 += 1, R15332 += 1, R15333 += 1 };
  s0 -> s0 [0, 65535] { R18720 += 1, R18721 += 1 };
  s0 -> s3 [0, 65535] { R18721 += 1, R18676 += 1, R18677 += 1 };
  s0 -> s4 [75, 75] { R18721 += 1, R18677 += 1, R15333 += 1 };
  s0 -> s5 [75, 75] { R18721 += 1, R18677 += 1, R15332 += 1, R15333 += 1 };
  s0 -> s6 [75, 75] { R18721 += 1, R18677 += 1, R15332 += 1, R15333 += 1 };
  s0 -> s7 [75, 75] { R18721 += 1, R18677 += 1, R15333 += 1 };
  s0 -> s1 [76, 86] { R18721 += 1, R18677 += 1, R15333 += 1 };
  s0 -> s2 [76, 65535] { R18721 += 1, R18677 += 1, R15332 += 1, R15333 += 1 };
  s0 -> s1 [88, 65535] { R18721 += 1, R18677 += 1, R15333 += 1 };
  s1 -> s1 [0, 74] { R18721 += 1, R18677 += 1, R15333 += 1 };
  s1 -> s1 [0, 65535] { R18721 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [75, 75] { R18721 += 1, R18677 += 1 };
  s1 -> s7 [75, 75] { R18721 += 1, R18677 += 1 };
  s1 -> s1 [76, 86] { R18721 += 1, R18677 += 1, R15333 += 1 };
  s1 -> s1 [76, 65535] { R18721 += 1, R18677 += 1 };
  s1 -> s1 [88, 65535] { R18721 += 1, R18677 += 1, R15333 += 1 };
  s2 -> s1 [0, 74] { R18721 += 1, R18677 += 1, R15333 += 1 };
  s2 -> s2 [0, 74] { R18721 += 1, R18677 += 1, R15332 += 1, R15333 += 1 };
  s2 -> s4 [75, 75] { R18721 += 1, R18677 += 1, R15333 += 1 };
  s2 -> s5 [75, 75] { R18721 += 1, R18677 += 1, R15332 += 1, R15333 += 1 };
  s2 -> s6 [75, 75] { R18721 += 1, R18677 += 1, R15332 += 1, R15333 += 1 };
  s2 -> s7 [75, 75] { R18721 += 1, R18677 += 1, R15333 += 1 };
  s2 -> s1 [76, 86] { R18721 += 1, R18677 += 1, R15333 += 1 };
  s2 -> s2 [76, 65535] { R18721 += 1, R18677 += 1, R15332 += 1, R15333 += 1 };
  s2 -> s1 [88, 65535] { R18721 += 1, R18677 += 1, R15333 += 1 };
  s3 -> s1 [0, 74] { R18721 += 1, R18677 += 1, R15333 += 1 };
  s3 -> s2 [0, 74] { R18721 += 1, R18677 += 1, R15332 += 1, R15333 += 1 };
  s3 -> s3 [0, 65535] { R18721 += 1, R18676 += 1, R18677 += 1 };
  s3 -> s4 [75, 75] { R18721 += 1, R18677 += 1, R15333 += 1 };
  s3 -> s5 [75, 75] { R18721 += 1, R18677 += 1, R15332 += 1, R15333 += 1 };
  s3 -> s6 [75, 75] { R18721 += 1, R18677 += 1, R15332 += 1, R15333 += 1 };
  s3 -> s7 [75, 75] { R18721 += 1, R18677 += 1, R15333 += 1 };
  s3 -> s1 [76, 86] { R18721 += 1, R18677 += 1, R15333 += 1 };
  s3 -> s2 [76, 65535] { R18721 += 1, R18677 += 1, R15332 += 1, R15333 += 1 };
  s3 -> s1 [88, 65535] { R18721 += 1, R18677 += 1, R15333 += 1 };
  s4 -> s4 [0, 65535] { R18721 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s7 [0, 86] { R18721 += 1, R18677 += 1, R15333 += 1 };
  s5 -> s5 [0, 65535] { R18721 += 1, R18677 += 1, R15332 += 1, R15333 += 1 };
  s5 -> s7 [88, 65535] { R18721 += 1, R18677 += 1, R15333 += 1 };
  s7 -> s7 [0, 86] { R18721 += 1, R18677 += 1, R15333 += 1 };
  s7 -> s7 [0, 65535] { R18721 += 1, R18677 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R18721 += 1 };
  s7 -> s7 [88, 65535] { R18721 += 1, R18677 += 1, R15333 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R18721 += 1 };
  accepting s4, s8, s9, s1, s7;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R18723 += 1, R18679 += 1, R15336 += 1, R15337 += 1 };
  s0 -> s0 [0, 65535] { R18722 += 1, R18723 += 1 };
  s0 -> s2 [0, 65535] { R18723 += 1, R18678 += 1, R18679 += 1 };
  s0 -> s3 [75, 75] { R18723 += 1, R18679 += 1, R15336 += 1, R15337 += 1 };
  s0 -> s4 [75, 75] { R18723 += 1, R18679 += 1, R15336 += 1, R15337 += 1 };
  s0 -> s1 [76, 65535] { R18723 += 1, R18679 += 1, R15336 += 1, R15337 += 1 };
  s1 -> s1 [0, 74] { R18723 += 1, R18679 += 1, R15336 += 1, R15337 += 1 };
  s1 -> s1 [0, 65535] { R18723 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [75, 75] { R18723 += 1, R18679 += 1, R15336 += 1, R15337 += 1 };
  s1 -> s4 [75, 75] { R18723 += 1, R18679 += 1, R15336 += 1, R15337 += 1 };
  s1 -> s1 [76, 65535] { R18723 += 1, R18679 += 1, R15336 += 1, R15337 += 1 };
  s2 -> s1 [0, 74] { R18723 += 1, R18679 += 1, R15336 += 1, R15337 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R18723 += 1, R18678 += 1, R18679 += 1 };
  s2 -> s3 [75, 75] { R18723 += 1, R18679 += 1, R15336 += 1, R15337 += 1 };
  s2 -> s4 [75, 75] { R18723 += 1, R18679 += 1, R15336 += 1, R15337 += 1 };
  s2 -> s1 [76, 65535] { R18723 += 1, R18679 += 1, R15336 += 1, R15337 += 1 };
  s3 -> s6 [0, 65535] { R18723 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R18723 += 1, R18679 += 1, R15336 += 1, R15337 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R18723 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R18723 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 74] { R18725 += 1, R18681 += 1, R17882 += 1, R17883 += 1 };
  s0 -> s2 [0, 65535] { R18725 += 1, R18680 += 1, R18681 += 1 };
  s0 -> s0 [0, 65535] { R18724 += 1, R18725 += 1 };
  s0 -> s3 [75, 75] { R18725 += 1, R18681 += 1, R17882 += 1, R17883 += 1 };
  s0 -> s4 [75, 75] { R18725 += 1, R18681 += 1, R17882 += 1, R17883 += 1 };
  s0 -> s1 [76, 65535] { R18725 += 1, R18681 += 1, R17882 += 1, R17883 += 1 };
  s1 -> s1 [0, 74] { R18725 += 1, R18681 += 1, R17882 += 1, R17883 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R18725 += 1 };
  s1 -> s3 [75, 75] { R18725 += 1, R18681 += 1, R17882 += 1, R17883 += 1 };
  s1 -> s4 [75, 75] { R18725 += 1, R18681 += 1, R17882 += 1, R17883 += 1 };
  s1 -> s1 [76, 65535] { R18725 += 1, R18681 += 1, R17882 += 1, R17883 += 1 };
  s2 -> s1 [0, 74] { R18725 += 1, R18681 += 1, R17882 += 1, R17883 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R18725 += 1, R18680 += 1, R18681 += 1 };
  s2 -> s3 [75, 75] { R18725 += 1, R18681 += 1, R17882 += 1, R17883 += 1 };
  s2 -> s4 [75, 75] { R18725 += 1, R18681 += 1, R17882 += 1, R17883 += 1 };
  s2 -> s1 [76, 65535] { R18725 += 1, R18681 += 1, R17882 += 1, R17883 += 1 };
  s3 -> s3 [0, 65535] { R18725 += 1, R18681 += 1, R17882 += 1, R17883 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R18725 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R18725 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R18725 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 74] { R18727 += 1, R18683 += 1, R18308 += 1, R18309 += 1 };
  s0 -> s2 [0, 74] { R18727 += 1, R18683 += 1, R18309 += 1, R18310 += 1 };
  s0 -> s0 [0, 65535] { R18726 += 1, R18727 += 1 };
  s0 -> s3 [0, 65535] { R18727 += 1, R18682 += 1, R18683 += 1 };
  s0 -> s4 [75, 75] { R18727 += 1, R18683 += 1, R18308 += 1, R18309 += 1 };
  s0 -> s5 [75, 75] { R18727 += 1, R18683 += 1, R18309 += 1, R18310 += 1 };
  s0 -> s6 [75, 75] { R18727 += 1, R18683 += 1, R18309 += 1, R18310 += 1 };
  s0 -> s7 [75, 75] { R18727 += 1, R18683 += 1, R18308 += 1, R18309 += 1 };
  s0 -> s1 [76, 65535] { R18727 += 1, R18683 += 1, R18308 += 1, R18309 += 1 };
  s0 -> s2 [76, 65535] { R18727 += 1, R18683 += 1, R18309 += 1, R18310 += 1 };
  s1 -> s1 [0, 74] { R18727 += 1, R18683 += 1, R18308 += 1, R18309 += 1 };
  s1 -> s2 [0, 74] { R18727 += 1, R18683 += 1, R18309 += 1, R18310 += 1 };
  s1 -> s4 [75, 75] { R18727 += 1, R18683 += 1, R18308 += 1, R18309 += 1 };
  s1 -> s5 [75, 75] { R18727 += 1, R18683 += 1, R18309 += 1, R18310 += 1 };
  s1 -> s6 [75, 75] { R18727 += 1, R18683 += 1, R18309 += 1, R18310 += 1 };
  s1 -> s7 [75, 75] { R18727 += 1, R18683 += 1, R18308 += 1, R18309 += 1 };
  s1 -> s1 [76, 65535] { R18727 += 1, R18683 += 1, R18308 += 1, R18309 += 1 };
  s1 -> s2 [76, 65535] { R18727 += 1, R18683 += 1, R18309 += 1, R18310 += 1 };
  s2 -> s2 [0, 74] { R18727 += 1, R18683 += 1, R18309 += 1, R18310 += 1 };
  s2 -> s2 [0, 65535] { R18727 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s5 [75, 75] { R18727 += 1, R18683 += 1, R18309 += 1, R18310 += 1 };
  s2 -> s6 [75, 75] { R18727 += 1, R18683 += 1, R18309 += 1, R18310 += 1 };
  s2 -> s2 [76, 65535] { R18727 += 1, R18683 += 1, R18309 += 1, R18310 += 1 };
  s3 -> s1 [0, 74] { R18727 += 1, R18683 += 1, R18308 += 1, R18309 += 1 };
  s3 -> s2 [0, 74] { R18727 += 1, R18683 += 1, R18309 += 1, R18310 += 1 };
  s3 -> s3 [0, 65535] { R18727 += 1, R18682 += 1, R18683 += 1 };
  s3 -> s4 [75, 75] { R18727 += 1, R18683 += 1, R18308 += 1, R18309 += 1 };
  s3 -> s5 [75, 75] { R18727 += 1, R18683 += 1, R18309 += 1, R18310 += 1 };
  s3 -> s6 [75, 75] { R18727 += 1, R18683 += 1, R18309 += 1, R18310 += 1 };
  s3 -> s7 [75, 75] { R18727 += 1, R18683 += 1, R18308 += 1, R18309 += 1 };
  s3 -> s1 [76, 65535] { R18727 += 1, R18683 += 1, R18308 += 1, R18309 += 1 };
  s3 -> s2 [76, 65535] { R18727 += 1, R18683 += 1, R18309 += 1, R18310 += 1 };
  s4 -> s4 [0, 65535] { R18727 += 1, R18683 += 1, R18308 += 1, R18309 += 1 };
  s4 -> s5 [0, 65535] { R18727 += 1, R18683 += 1, R18309 += 1, R18310 += 1 };
  s5 -> s9 [0, 65535] { R18727 += 1 };
  s5 -> s5 [0, 65535] { R18727 += 1, R18683 += 1, R18309 += 1, R18310 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R18727 += 1 };
  s6 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R18727 += 1 };
  s9 -> s8 [0, 65535];
  accepting s8, s5, s2, s9, s6;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 74] { R18729 += 1, R18685 += 1, R18627 += 1 };
  s0 -> s2 [0, 74] { R18729 += 1, R18685 += 1, R18626 += 1, R18627 += 1 };
  s0 -> s3 [0, 65535] { R18729 += 1, R18684 += 1, R18685 += 1 };
  s0 -> s0 [0, 65535] { R18728 += 1, R18729 += 1 };
  s0 -> s4 [75, 75] { R18729 += 1, R18685 += 1, R18626 += 1, R18627 += 1 };
  s0 -> s5 [75, 75] { R18729 += 1, R18685 += 1, R18627 += 1 };
  s0 -> s6 [75, 75] { R18729 += 1, R18685 += 1, R18626 += 1, R18627 += 1 };
  s0 -> s7 [75, 75] { R18729 += 1, R18685 += 1, R18627 += 1 };
  s0 -> s1 [76, 86] { R18729 += 1, R18685 += 1, R18627 += 1 };
  s0 -> s2 [76, 65535] { R18729 += 1, R18685 += 1, R18626 += 1, R18627 += 1 };
  s0 -> s8 [87, 87] { R18729 += 1, R18685 += 1, R18627 += 1 };
  s0 -> s1 [89, 65535] { R18729 += 1, R18685 += 1, R18627 += 1 };
  s1 -> s1 [0, 74] { R18729 += 1, R18685 += 1, R18627 += 1 };
  s1 -> s5 [75, 75] { R18729 += 1, R18685 += 1 };
  s1 -> s7 [75, 75] { R18729 += 1, R18685 += 1 };
  s1 -> s1 [76, 86] { R18729 += 1, R18685 += 1, R18627 += 1 };
  s1 -> s1 [76, 65535] { R18729 += 1, R18685 += 1 };
  s1 -> s8 [87, 87] { R18729 += 1, R18685 += 1, R18627 += 1 };
  s1 -> s1 [89, 65535] { R18729 += 1, R18685 += 1, R18627 += 1 };
  s2 -> s1 [0, 74] { R18729 += 1, R18685 += 1, R18627 += 1 };
  s2 -> s2 [0, 74] { R18729 += 1, R18685 += 1, R18626 += 1, R18627 += 1 };
  s2 -> s4 [75, 75] { R18729 += 1, R18685 += 1, R18626 += 1, R18627 += 1 };
  s2 -> s5 [75, 75] { R18729 += 1, R18685 += 1, R18627 += 1 };
  s2 -> s6 [75, 75] { R18729 += 1, R18685 += 1, R18626 += 1, R18627 += 1 };
  s2 -> s7 [75, 75] { R18729 += 1, R18685 += 1, R18627 += 1 };
  s2 -> s1 [76, 86] { R18729 += 1, R18685 += 1, R18627 += 1 };
  s2 -> s2 [76, 65535] { R18729 += 1, R18685 += 1, R18626 += 1, R18627 += 1 };
  s2 -> s8 [87, 87] { R18729 += 1, R18685 += 1, R18627 += 1 };
  s2 -> s1 [89, 65535] { R18729 += 1, R18685 += 1, R18627 += 1 };
  s3 -> s1 [0, 74] { R18729 += 1, R18685 += 1, R18627 += 1 };
  s3 -> s2 [0, 74] { R18729 += 1, R18685 += 1, R18626 += 1, R18627 += 1 };
  s3 -> s3 [0, 65535] { R18729 += 1, R18684 += 1, R18685 += 1 };
  s3 -> s4 [75, 75] { R18729 += 1, R18685 += 1, R18626 += 1, R18627 += 1 };
  s3 -> s5 [75, 75] { R18729 += 1, R18685 += 1, R18627 += 1 };
  s3 -> s6 [75, 75] { R18729 += 1, R18685 += 1, R18626 += 1, R18627 += 1 };
  s3 -> s7 [75, 75] { R18729 += 1, R18685 += 1, R18627 += 1 };
  s3 -> s1 [76, 86] { R18729 += 1, R18685 += 1, R18627 += 1 };
  s3 -> s2 [76, 65535] { R18729 += 1, R18685 += 1, R18626 += 1, R18627 += 1 };
  s3 -> s8 [87, 87] { R18729 += 1, R18685 += 1, R18627 += 1 };
  s3 -> s1 [89, 65535] { R18729 += 1, R18685 += 1, R18627 += 1 };
  s4 -> s7 [0, 86] { R18729 += 1, R18685 += 1, R18627 += 1 };
  s4 -> s4 [0, 65535] { R18729 += 1, R18685 += 1, R18626 += 1, R18627 += 1 };
  s4 -> s11 [87, 87] { R18729 += 1, R18685 += 1, R18627 += 1 };
  s4 -> s7 [89, 65535] { R18729 += 1, R18685 += 1, R18627 += 1 };
  s7 -> s7 [0, 86] { R18729 += 1, R18685 += 1, R18627 += 1 };
  s7 -> s7 [0, 65535] { R18729 += 1, R18685 += 1 };
  s7 -> s11 [87, 87] { R18729 += 1, R18685 += 1, R18627 += 1 };
  s7 -> s7 [89, 65535] { R18729 += 1, R18685 += 1, R18627 += 1 };
  s8 -> s8 [0, 74] { R18729 += 1, R18685 += 1 };
  s8 -> s8 [0, 65535] { R18729 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [75, 75] { R18729 += 1, R18685 += 1 };
  s8 -> s11 [75, 75] { R18729 += 1, R18685 += 1 };
  s8 -> s8 [76, 65535] { R18729 += 1, R18685 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R18729 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R18729 += 1 };
  s11 -> s11 [0, 65535] { R18729 += 1, R18685 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R18729 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
