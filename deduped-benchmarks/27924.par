// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R2, R22, R23, R24, R25, R26, R27, R2741, R2742, R2743, R2744, R2745, R2746, R2747, R2748, R2749, R2750, R28, R29, R3, R30, R31, R32, R3699, R3700, R3701, R3702, R3703, R3704, R3705, R3706, R3707, R3708, R3709, R3710, R3711, R3712, R3713, R3714, R3715, R3716, R3717, R3718, R3719, R3720, R3721, R3722, R3723, R3724, R3725, R3726, R3727, R3728, R3729, R3730, R3731, R3732, R3733, R3734, R3735, R3736, R3737, R3738, R3739, R3740, R3741, R3742, R3743, R3744, R3745, R3746, R3747, R3748, R3749, R3750, R3751, R3752, R3753, R3754, R3755, R3756, R3757, R3758, R3759, R3760, R3761, R3762, R3763, R3764, R3765, R3766, R3767, R3768, R3769, R3770, R3771, R3772, R3773, R3774, R3775, R3776, R3777, R3778, R3779, R3780, R3781, R3782, R3783, R3784, R3785, R3786, R3787, R3788, R3789, R3790, R3791, R3792, R3793, R3794, R3795, R3796, R3797, R3798, R3799, R3800, R3801, R3802, R3803, R3804, R3805, R3806, R3807, R3808, R3809, R3810, R3811, R3812, R3813, R3814, R3815, R3816, R3817, R3818, R3819, R3820, R3821, R3822, R3823, R3824, R3825, R3826, R3827, R3828, R3829, R3830, R3831, R3832, R3833, R3834, R3835, R3836, R3837, R3838, R3839, R3840, R3841, R3842, R3843, R3844, R3845, R3846, R3847, R3848, R3849, R3850, R3851, R3852, R3853, R3854, R3855, R3856, R4, R5, R63, R65, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R26 += 1 };
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R30 += 1 };
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R3738 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R3737 += 1, R3738 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R3738 += 1, R24 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R3740 += 1 };
  s0 -> s0 [0, 65535] { R3739 += 1, R3740 += 1 };
  s0 -> s2 [70, 70] { R3740 += 1 };
  s0 -> s3 [70, 70] { R3740 += 1 };
  s0 -> s1 [76, 65535] { R3740 += 1 };
  s1 -> s1 [0, 69] { R3740 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3740 += 1 };
  s1 -> s3 [70, 70] { R3740 += 1 };
  s1 -> s1 [76, 65535] { R3740 += 1 };
  s2 -> s2 [0, 70] { R3740 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R3740 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R3742 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R3741 += 1, R3742 += 1 };
  s0 -> s2 [70, 70] { R3742 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R3742 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R3742 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R3742 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3742 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R3742 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R3742 += 1, R63 += 1 };
  s2 -> s2 [0, 65535] { R3742 += 1, R63 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R3744 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R3743 += 1, R3744 += 1 };
  s0 -> s2 [70, 70] { R3744 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R3744 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R3744 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R3744 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3744 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R3744 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R3744 += 1, R65 += 1 };
  s2 -> s2 [0, 65535] { R3744 += 1, R65 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R3746 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R3745 += 1, R3746 += 1 };
  s0 -> s2 [70, 70] { R3746 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R3746 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R3746 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R3746 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3746 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R3746 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R3746 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535] { R3746 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R3748 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R3747 += 1, R3748 += 1 };
  s0 -> s2 [70, 70] { R3748 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R3748 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R3748 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R3748 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3748 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R3748 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R3748 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R3748 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R3750 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R3749 += 1, R3750 += 1 };
  s0 -> s2 [70, 70] { R3750 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R3750 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R3750 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R3750 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3750 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R3750 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R3750 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R3750 += 1, R77 += 1, R78 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R3752 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R3751 += 1, R3752 += 1 };
  s0 -> s2 [70, 70] { R3752 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R3752 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R3752 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R3752 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3752 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R3752 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R3752 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3752 += 1, R81 += 1, R82 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R3754 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R3753 += 1, R3754 += 1 };
  s0 -> s2 [70, 70] { R3754 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R3754 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R3754 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R3754 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3754 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R3754 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R3754 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535] { R3754 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R3756 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R3755 += 1, R3756 += 1 };
  s0 -> s2 [70, 70] { R3756 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R3756 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R3756 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R3756 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3756 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R3756 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R3756 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535] { R3756 += 1, R93 += 1, R94 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R3758 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R3757 += 1, R3758 += 1 };
  s0 -> s2 [70, 70] { R3758 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R3758 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R3758 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R3758 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3758 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R3758 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R3758 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535] { R3758 += 1, R101 += 1, R102 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R3760 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R3759 += 1, R3760 += 1 };
  s0 -> s2 [70, 70] { R3760 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R3760 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R3760 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R3760 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3760 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R3760 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R3760 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535] { R3760 += 1, R111 += 1, R112 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R3762 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R3761 += 1, R3762 += 1 };
  s0 -> s2 [70, 70] { R3762 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R3762 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R3762 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R3762 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3762 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R3762 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R3762 += 1, R119 += 1, R120 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3762 += 1, R119 += 1, R120 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R3764 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R3763 += 1, R3764 += 1 };
  s0 -> s2 [70, 70] { R3764 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R3764 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R3764 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R3764 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3764 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R3764 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R3764 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535] { R3764 += 1, R129 += 1, R130 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R3794 += 1 };
  s0 -> s0 [0, 65535] { R3793 += 1, R3794 += 1 };
  s0 -> s2 [70, 70] { R3794 += 1 };
  s0 -> s1 [71, 65535] { R3794 += 1 };
  s1 -> s1 [0, 69] { R3794 += 1 };
  s1 -> s2 [70, 70] { R3794 += 1 };
  s1 -> s1 [71, 65535] { R3794 += 1 };
  s2 -> s2 [0, 65535] { R3794 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R3796 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R3795 += 1, R3796 += 1 };
  s1 -> s1 [0, 65535] { R3796 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R3798 += 1 };
  s0 -> s2 [0, 65535] { R3798 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R3797 += 1, R3798 += 1 };
  s0 -> s3 [70, 70] { R3798 += 1 };
  s0 -> s1 [71, 65535] { R3798 += 1 };
  s1 -> s1 [0, 69] { R3798 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R3798 += 1 };
  s1 -> s1 [71, 65535] { R3798 += 1 };
  s2 -> s1 [0, 69] { R3798 += 1 };
  s2 -> s2 [0, 65535] { R3798 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R3798 += 1 };
  s2 -> s1 [71, 65535] { R3798 += 1 };
  s3 -> s3 [0, 65535] { R3798 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R3800 += 1, R3708 += 1 };
  s0 -> s2 [0, 65535] { R3800 += 1, R3707 += 1, R3708 += 1 };
  s0 -> s0 [0, 65535] { R3799 += 1, R3800 += 1 };
  s0 -> s1 [71, 65535] { R3800 += 1, R3708 += 1 };
  s1 -> s1 [0, 69] { R3800 += 1, R3708 += 1 };
  s1 -> s1 [0, 65535] { R3800 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R3800 += 1, R3708 += 1 };
  s2 -> s1 [0, 69] { R3800 += 1, R3708 += 1 };
  s2 -> s2 [0, 65535] { R3800 += 1, R3707 += 1, R3708 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R3800 += 1, R3708 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R3801 += 1, R3802 += 1 };
  s0 -> s1 [0, 65535] { R3802 += 1, R3710 += 1, R22 += 1 };
  s0 -> s2 [0, 65535] { R3802 += 1, R3709 += 1, R3710 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R3802 += 1 };
  s1 -> s1 [0, 65535] { R3802 += 1, R3710 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R3802 += 1, R3710 += 1, R22 += 1 };
  s2 -> s2 [0, 65535] { R3802 += 1, R3709 += 1, R3710 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3802 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R3804 += 1, R3712 += 1 };
  s0 -> s0 [0, 65535] { R3803 += 1, R3804 += 1 };
  s0 -> s2 [0, 65535] { R3804 += 1, R3711 += 1, R3712 += 1 };
  s0 -> s1 [75, 65535] { R3804 += 1, R3712 += 1 };
  s1 -> s1 [0, 70] { R3804 += 1, R3712 += 1 };
  s1 -> s1 [0, 65535] { R3804 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R3804 += 1, R3712 += 1 };
  s2 -> s1 [0, 70] { R3804 += 1, R3712 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R3804 += 1, R3711 += 1, R3712 += 1 };
  s2 -> s1 [75, 65535] { R3804 += 1, R3712 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R3806 += 1, R3714 += 1, R138 += 1 };
  s0 -> s0 [0, 65535] { R3805 += 1, R3806 += 1 };
  s0 -> s2 [0, 65535] { R3806 += 1, R3713 += 1, R3714 += 1 };
  s1 -> s1 [0, 65535] { R3806 += 1, R3714 += 1, R138 += 1 };
  s1 -> s4 [0, 65535] { R3806 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R3806 += 1, R3714 += 1, R138 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R3806 += 1, R3713 += 1, R3714 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3806 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R3808 += 1, R3716 += 1 };
  s0 -> s0 [0, 65535] { R3807 += 1, R3808 += 1 };
  s0 -> s2 [0, 65535] { R3808 += 1, R3715 += 1, R3716 += 1 };
  s0 -> s3 [0, 65535] { R3808 += 1, R3716 += 1, R140 += 1 };
  s0 -> s1 [76, 65535] { R3808 += 1, R3716 += 1 };
  s1 -> s1 [0, 74] { R3808 += 1, R3716 += 1 };
  s1 -> s1 [0, 65535] { R3808 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R3808 += 1, R3716 += 1 };
  s2 -> s1 [0, 74] { R3808 += 1, R3716 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3808 += 1, R3715 += 1, R3716 += 1 };
  s2 -> s3 [0, 65535] { R3808 += 1, R3716 += 1, R140 += 1 };
  s2 -> s1 [76, 65535] { R3808 += 1, R3716 += 1 };
  s3 -> s1 [0, 74] { R3808 += 1, R3716 += 1 };
  s3 -> s4 [0, 65535] { R3808 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3808 += 1, R3716 += 1, R140 += 1 };
  s3 -> s1 [76, 65535] { R3808 += 1, R3716 += 1 };
  s4 -> s4 [0, 65535] { R3808 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R3810 += 1, R3718 += 1, R144 += 1, R145 += 1 };
  s0 -> s0 [0, 65535] { R3809 += 1, R3810 += 1 };
  s0 -> s2 [0, 65535] { R3810 += 1, R3717 += 1, R3718 += 1 };
  s0 -> s3 [0, 65535] { R3810 += 1, R3718 += 1, R145 += 1, R146 += 1 };
  s1 -> s4 [0, 65535] { R3810 += 1 };
  s1 -> s1 [0, 65535] { R3810 += 1, R3718 += 1, R144 += 1, R145 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R3810 += 1, R3718 += 1, R145 += 1, R146 += 1 };
  s2 -> s1 [0, 65535] { R3810 += 1, R3718 += 1, R144 += 1, R145 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3810 += 1, R3717 += 1, R3718 += 1 };
  s2 -> s3 [0, 65535] { R3810 += 1, R3718 += 1, R145 += 1, R146 += 1 };
  s3 -> s4 [0, 65535] { R3810 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3810 += 1, R3718 += 1, R145 += 1, R146 += 1 };
  s3 -> s6 [0, 65535] { R3810 += 1, R3718 += 1 };
  s4 -> s4 [0, 65535] { R3810 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R3810 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3810 += 1, R3718 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R3812 += 1, R3720 += 1, R150 += 1 };
  s0 -> s2 [0, 65535] { R3812 += 1, R3719 += 1, R3720 += 1 };
  s0 -> s3 [0, 65535] { R3812 += 1, R3720 += 1, R149 += 1, R150 += 1 };
  s0 -> s0 [0, 65535] { R3811 += 1, R3812 += 1 };
  s0 -> s4 [75, 75] { R3812 += 1, R3720 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R3812 += 1, R3720 += 1, R150 += 1 };
  s0 -> s1 [84, 65535] { R3812 += 1, R3720 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R3812 += 1, R3720 += 1, R150 += 1 };
  s1 -> s1 [0, 65535] { R3812 += 1, R3720 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R3812 += 1 };
  s1 -> s4 [75, 75] { R3812 += 1, R3720 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R3812 += 1, R3720 += 1, R150 += 1 };
  s1 -> s1 [84, 65535] { R3812 += 1, R3720 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R3812 += 1, R3720 += 1, R150 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R3812 += 1, R3719 += 1, R3720 += 1 };
  s2 -> s3 [0, 65535] { R3812 += 1, R3720 += 1, R149 += 1, R150 += 1 };
  s2 -> s4 [75, 75] { R3812 += 1, R3720 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R3812 += 1, R3720 += 1, R150 += 1 };
  s2 -> s1 [84, 65535] { R3812 += 1, R3720 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R3812 += 1, R3720 += 1, R150 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R3812 += 1 };
  s3 -> s3 [0, 65535] { R3812 += 1, R3720 += 1, R149 += 1, R150 += 1 };
  s3 -> s4 [75, 75] { R3812 += 1, R3720 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R3812 += 1, R3720 += 1, R150 += 1 };
  s3 -> s1 [84, 65535] { R3812 += 1, R3720 += 1, R150 += 1 };
  s4 -> s4 [0, 75] { R3812 += 1, R3720 += 1, R150 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3812 += 1, R3720 += 1 };
  s4 -> s7 [0, 65535] { R3812 += 1 };
  s4 -> s4 [84, 65535] { R3812 += 1, R3720 += 1, R150 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3812 += 1, R3720 += 1 };
  s5 -> s7 [0, 65535] { R3812 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3812 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R3814 += 1, R3721 += 1, R3722 += 1 };
  s0 -> s2 [0, 65535] { R3814 += 1, R3722 += 1, R154 += 1 };
  s0 -> s3 [0, 65535] { R3814 += 1, R3722 += 1 };
  s0 -> s0 [0, 65535] { R3813 += 1, R3814 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R3814 += 1, R3721 += 1, R3722 += 1 };
  s1 -> s2 [0, 65535] { R3814 += 1, R3722 += 1, R154 += 1 };
  s1 -> s3 [0, 65535] { R3814 += 1, R3722 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3814 += 1, R3722 += 1, R154 += 1 };
  s2 -> s3 [0, 65535] { R3814 += 1, R3722 += 1 };
  s2 -> s5 [0, 65535] { R3814 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3814 += 1, R3722 += 1 };
  s3 -> s5 [0, 65535] { R3814 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3814 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R3816 += 1, R3724 += 1, R159 += 1, R160 += 1 };
  s0 -> s2 [0, 65535] { R3816 += 1, R3724 += 1, R158 += 1, R159 += 1 };
  s0 -> s3 [0, 65535] { R3816 += 1, R3723 += 1, R3724 += 1 };
  s0 -> s0 [0, 65535] { R3815 += 1, R3816 += 1 };
  s1 -> s6 [0, 65535] { R3816 += 1, R3724 += 1 };
  s1 -> s1 [0, 65535] { R3816 += 1, R3724 += 1, R159 += 1, R160 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R3816 += 1 };
  s2 -> s1 [0, 65535] { R3816 += 1, R3724 += 1, R159 += 1, R160 += 1 };
  s2 -> s2 [0, 65535] { R3816 += 1, R3724 += 1, R158 += 1, R159 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R3816 += 1 };
  s3 -> s1 [0, 65535] { R3816 += 1, R3724 += 1, R159 += 1, R160 += 1 };
  s3 -> s2 [0, 65535] { R3816 += 1, R3724 += 1, R158 += 1, R159 += 1 };
  s3 -> s3 [0, 65535] { R3816 += 1, R3723 += 1, R3724 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3816 += 1 };
  s6 -> s6 [0, 65535] { R3816 += 1, R3724 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R3816 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R3818 += 1, R3726 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R3818 += 1, R3725 += 1, R3726 += 1 };
  s0 -> s0 [0, 65535] { R3817 += 1, R3818 += 1 };
  s0 -> s3 [0, 65535] { R3818 += 1, R3726 += 1, R164 += 1, R165 += 1 };
  s0 -> s4 [0, 65535] { R3818 += 1, R3726 += 1, R165 += 1, R166 += 1 };
  s0 -> s1 [76, 65535] { R3818 += 1, R3726 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R3818 += 1, R3726 += 1, R165 += 1 };
  s1 -> s5 [0, 65535] { R3818 += 1 };
  s1 -> s1 [0, 65535] { R3818 += 1, R3726 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [76, 65535] { R3818 += 1, R3726 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R3818 += 1, R3726 += 1, R165 += 1 };
  s2 -> s2 [0, 65535] { R3818 += 1, R3725 += 1, R3726 += 1 };
  s2 -> s3 [0, 65535] { R3818 += 1, R3726 += 1, R164 += 1, R165 += 1 };
  s2 -> s4 [0, 65535] { R3818 += 1, R3726 += 1, R165 += 1, R166 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s1 [76, 65535] { R3818 += 1, R3726 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R3818 += 1, R3726 += 1, R165 += 1 };
  s3 -> s3 [0, 65535] { R3818 += 1, R3726 += 1, R164 += 1, R165 += 1 };
  s3 -> s4 [0, 65535] { R3818 += 1, R3726 += 1, R165 += 1, R166 += 1 };
  s3 -> s5 [0, 65535] { R3818 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s1 [76, 65535] { R3818 += 1, R3726 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R3818 += 1, R3726 += 1, R165 += 1 };
  s4 -> s4 [0, 65535] { R3818 += 1, R3726 += 1, R165 += 1, R166 += 1 };
  s4 -> s5 [0, 65535] { R3818 += 1 };
  s4 -> s6 [0, 65535] { R3818 += 1, R3726 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s1 [76, 65535] { R3818 += 1, R3726 += 1, R165 += 1 };
  s5 -> s5 [0, 65535] { R3818 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s5 [0, 65535] { R3818 += 1 };
  s6 -> s6 [0, 65535] { R3818 += 1, R3726 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R3820 += 1, R3728 += 1, R172 += 1, R174 += 1 };
  s0 -> s2 [0, 65535] { R3820 += 1, R3728 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s3 [0, 65535] { R3820 += 1, R3728 += 1, R171 += 1, R172 += 1 };
  s0 -> s4 [0, 65535] { R3820 += 1, R3727 += 1, R3728 += 1 };
  s0 -> s0 [0, 65535] { R3819 += 1, R3820 += 1 };
  s0 -> s1 [76, 65535] { R3820 += 1, R3728 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R3820 += 1, R3728 += 1, R172 += 1, R174 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R3820 += 1, R3728 += 1 };
  s1 -> s6 [0, 65535] { R3820 += 1 };
  s1 -> s1 [0, 65535] { R3820 += 1, R3728 += 1, R172 += 1 };
  s1 -> s1 [76, 65535] { R3820 += 1, R3728 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R3820 += 1, R3728 += 1, R172 += 1, R174 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R3820 += 1, R3728 += 1 };
  s2 -> s2 [0, 65535] { R3820 += 1, R3728 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s6 [0, 65535] { R3820 += 1 };
  s2 -> s1 [76, 65535] { R3820 += 1, R3728 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R3820 += 1, R3728 += 1, R172 += 1, R174 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R3820 += 1, R3728 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s3 [0, 65535] { R3820 += 1, R3728 += 1, R171 += 1, R172 += 1 };
  s3 -> s6 [0, 65535] { R3820 += 1 };
  s3 -> s1 [76, 65535] { R3820 += 1, R3728 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R3820 += 1, R3728 += 1, R172 += 1, R174 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R3820 += 1, R3728 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s3 [0, 65535] { R3820 += 1, R3728 += 1, R171 += 1, R172 += 1 };
  s4 -> s4 [0, 65535] { R3820 += 1, R3727 += 1, R3728 += 1 };
  s4 -> s1 [76, 65535] { R3820 += 1, R3728 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3820 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R3820 += 1, R3728 += 1 };
  s7 -> s6 [0, 65535] { R3820 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R3822 += 1, R3729 += 1, R3730 += 1 };
  s0 -> s2 [0, 65535] { R3822 += 1, R3730 += 1 };
  s0 -> s0 [0, 65535] { R3821 += 1, R3822 += 1 };
  s0 -> s3 [0, 65535] { R3822 += 1, R3730 += 1, R181 += 1 };
  s1 -> s1 [0, 65535] { R3822 += 1, R3729 += 1, R3730 += 1 };
  s1 -> s2 [0, 65535] { R3822 += 1, R3730 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R3822 += 1, R3730 += 1, R181 += 1 };
  s2 -> s2 [0, 65535] { R3822 += 1, R3730 += 1 };
  s2 -> s4 [0, 65535] { R3822 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R3822 += 1, R3730 += 1 };
  s3 -> s4 [0, 65535] { R3822 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3822 += 1, R3730 += 1, R181 += 1 };
  s4 -> s4 [0, 65535] { R3822 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R3824 += 1, R3732 += 1, R190 += 1, R192 += 1 };
  s0 -> s0 [0, 65535] { R3823 += 1, R3824 += 1 };
  s0 -> s2 [0, 65535] { R3824 += 1, R3732 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s0 -> s3 [0, 65535] { R3824 += 1, R3732 += 1, R189 += 1, R190 += 1 };
  s0 -> s4 [0, 65535] { R3824 += 1, R3731 += 1, R3732 += 1 };
  s0 -> s1 [83, 65535] { R3824 += 1, R3732 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 75] { R3824 += 1, R3732 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 65535] { R3824 += 1, R3732 += 1, R190 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R3824 += 1 };
  s1 -> s7 [0, 65535] { R3824 += 1, R3732 += 1 };
  s1 -> s1 [83, 65535] { R3824 += 1, R3732 += 1, R190 += 1, R192 += 1 };
  s2 -> s1 [0, 75] { R3824 += 1, R3732 += 1, R190 += 1, R192 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3824 += 1, R3732 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s2 -> s6 [0, 65535] { R3824 += 1 };
  s2 -> s7 [0, 65535] { R3824 += 1, R3732 += 1 };
  s2 -> s1 [83, 65535] { R3824 += 1, R3732 += 1, R190 += 1, R192 += 1 };
  s3 -> s1 [0, 75] { R3824 += 1, R3732 += 1, R190 += 1, R192 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R3824 += 1, R3732 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s3 -> s3 [0, 65535] { R3824 += 1, R3732 += 1, R189 += 1, R190 += 1 };
  s3 -> s6 [0, 65535] { R3824 += 1 };
  s3 -> s1 [83, 65535] { R3824 += 1, R3732 += 1, R190 += 1, R192 += 1 };
  s4 -> s1 [0, 75] { R3824 += 1, R3732 += 1, R190 += 1, R192 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R3824 += 1, R3732 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s4 -> s3 [0, 65535] { R3824 += 1, R3732 += 1, R189 += 1, R190 += 1 };
  s4 -> s4 [0, 65535] { R3824 += 1, R3731 += 1, R3732 += 1 };
  s4 -> s1 [83, 65535] { R3824 += 1, R3732 += 1, R190 += 1, R192 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3824 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R3824 += 1 };
  s7 -> s7 [0, 65535] { R3824 += 1, R3732 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R3826 += 1, R3734 += 1 };
  s0 -> s2 [0, 65535] { R3826 += 1, R3733 += 1, R3734 += 1 };
  s0 -> s3 [0, 65535] { R3826 += 1, R3734 += 1, R2747 += 1 };
  s0 -> s0 [0, 65535] { R3825 += 1, R3826 += 1 };
  s1 -> s1 [0, 65535] { R3826 += 1, R3734 += 1 };
  s1 -> s4 [0, 65535] { R3826 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R3826 += 1, R3734 += 1 };
  s2 -> s2 [0, 65535] { R3826 += 1, R3733 += 1, R3734 += 1 };
  s2 -> s3 [0, 65535] { R3826 += 1, R3734 += 1, R2747 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R3826 += 1, R3734 += 1 };
  s3 -> s4 [0, 65535] { R3826 += 1 };
  s3 -> s3 [0, 65535] { R3826 += 1, R3734 += 1, R2747 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3826 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 74] { R3828 += 1, R3736 += 1, R3704 += 1, R3706 += 1 };
  s0 -> s2 [0, 65535] { R3828 += 1, R3736 += 1, R3704 += 1, R3705 += 1, R3706 += 1 };
  s0 -> s3 [0, 65535] { R3828 += 1, R3735 += 1, R3736 += 1 };
  s0 -> s0 [0, 65535] { R3827 += 1, R3828 += 1 };
  s0 -> s4 [75, 75] { R3828 += 1, R3736 += 1, R3704 += 1, R3706 += 1 };
  s0 -> s5 [83, 83] { R3828 += 1, R3736 += 1, R3704 += 1, R3706 += 1 };
  s0 -> s1 [84, 65535] { R3828 += 1, R3736 += 1, R3704 += 1, R3706 += 1 };
  s1 -> s1 [0, 74] { R3828 += 1, R3736 += 1, R3704 += 1, R3706 += 1 };
  s1 -> s4 [75, 75] { R3828 += 1, R3736 += 1, R3704 += 1, R3706 += 1 };
  s1 -> s5 [83, 83] { R3828 += 1, R3736 += 1, R3704 += 1, R3706 += 1 };
  s1 -> s1 [84, 65535] { R3828 += 1, R3736 += 1, R3704 += 1, R3706 += 1 };
  s2 -> s1 [0, 74] { R3828 += 1, R3736 += 1, R3704 += 1, R3706 += 1 };
  s2 -> s2 [0, 65535] { R3828 += 1, R3736 += 1, R3704 += 1, R3705 += 1, R3706 += 1 };
  s2 -> s4 [75, 75] { R3828 += 1, R3736 += 1, R3704 += 1, R3706 += 1 };
  s2 -> s5 [83, 83] { R3828 += 1, R3736 += 1, R3704 += 1, R3706 += 1 };
  s2 -> s1 [84, 65535] { R3828 += 1, R3736 += 1, R3704 += 1, R3706 += 1 };
  s3 -> s1 [0, 74] { R3828 += 1, R3736 += 1, R3704 += 1, R3706 += 1 };
  s3 -> s2 [0, 65535] { R3828 += 1, R3736 += 1, R3704 += 1, R3705 += 1, R3706 += 1 };
  s3 -> s3 [0, 65535] { R3828 += 1, R3735 += 1, R3736 += 1 };
  s3 -> s4 [75, 75] { R3828 += 1, R3736 += 1, R3704 += 1, R3706 += 1 };
  s3 -> s5 [83, 83] { R3828 += 1, R3736 += 1, R3704 += 1, R3706 += 1 };
  s3 -> s1 [84, 65535] { R3828 += 1, R3736 += 1, R3704 += 1, R3706 += 1 };
  s4 -> s4 [0, 75] { R3828 += 1, R3736 += 1, R3704 += 1, R3706 += 1 };
  s4 -> s10 [83, 83] { R3828 += 1, R3736 += 1, R3704 += 1, R3706 += 1 };
  s4 -> s4 [84, 65535] { R3828 += 1, R3736 += 1, R3704 += 1, R3706 += 1 };
  s5 -> s5 [0, 74] { R3828 += 1, R3736 += 1, R3704 += 1, R3706 += 1 };
  s5 -> s6 [0, 65535] { R3828 += 1, R3736 += 1 };
  s5 -> s5 [0, 65535] { R3828 += 1, R3736 += 1, R3704 += 1 };
  s5 -> s7 [0, 65535] { R3828 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s9 [75, 75] { R3828 += 1, R3736 += 1, R3704 += 1, R3706 += 1 };
  s5 -> s10 [75, 75] { R3828 += 1, R3736 += 1, R3704 += 1, R3706 += 1 };
  s5 -> s5 [83, 65535] { R3828 += 1, R3736 += 1, R3704 += 1, R3706 += 1 };
  s6 -> s6 [0, 65535] { R3828 += 1, R3736 += 1 };
  s6 -> s7 [0, 65535] { R3828 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R3828 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s6 [0, 65535] { R3828 += 1, R3736 += 1 };
  s9 -> s9 [0, 65535] { R3828 += 1, R3736 += 1, R3704 += 1 };
  s9 -> s7 [0, 65535] { R3828 += 1 };
  s9 -> s8 [0, 65535];
  s10 -> s10 [0, 75] { R3828 += 1, R3736 += 1, R3704 += 1, R3706 += 1 };
  s10 -> s6 [0, 65535] { R3828 += 1, R3736 += 1 };
  s10 -> s7 [0, 65535] { R3828 += 1 };
  s10 -> s10 [0, 65535] { R3828 += 1, R3736 += 1, R3704 += 1 };
  s10 -> s8 [0, 65535];
  s10 -> s10 [83, 65535] { R3828 += 1, R3736 += 1, R3704 += 1, R3706 += 1 };
  accepting s8, s5, s9, s6, s7, s10;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65535] { R3830 += 1, R3765 += 1, R3766 += 1 };
  s0 -> s2 [0, 65535] { R3830 += 1, R3766 += 1, R23 += 1 };
  s0 -> s0 [0, 65535] { R3829 += 1, R3830 += 1 };
  s1 -> s1 [0, 65535] { R3830 += 1, R3765 += 1, R3766 += 1 };
  s1 -> s2 [0, 65535] { R3830 += 1, R3766 += 1, R23 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3830 += 1, R3766 += 1, R23 += 1 };
  s2 -> s3 [0, 65535] { R3830 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3830 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R3832 += 1, R3768 += 1 };
  s0 -> s2 [0, 65535] { R3832 += 1, R3767 += 1, R3768 += 1 };
  s0 -> s0 [0, 65535] { R3831 += 1, R3832 += 1 };
  s0 -> s3 [70, 70] { R3832 += 1, R3768 += 1 };
  s0 -> s4 [70, 70] { R3832 += 1, R3768 += 1 };
  s0 -> s5 [75, 75] { R3832 += 1, R3768 += 1 };
  s0 -> s1 [76, 65535] { R3832 += 1, R3768 += 1 };
  s1 -> s1 [0, 69] { R3832 += 1, R3768 += 1 };
  s1 -> s3 [70, 70] { R3832 += 1, R3768 += 1 };
  s1 -> s4 [70, 70] { R3832 += 1, R3768 += 1 };
  s1 -> s5 [75, 75] { R3832 += 1, R3768 += 1 };
  s1 -> s1 [76, 65535] { R3832 += 1, R3768 += 1 };
  s2 -> s1 [0, 69] { R3832 += 1, R3768 += 1 };
  s2 -> s2 [0, 65535] { R3832 += 1, R3767 += 1, R3768 += 1 };
  s2 -> s3 [70, 70] { R3832 += 1, R3768 += 1 };
  s2 -> s4 [70, 70] { R3832 += 1, R3768 += 1 };
  s2 -> s5 [75, 75] { R3832 += 1, R3768 += 1 };
  s2 -> s1 [76, 65535] { R3832 += 1, R3768 += 1 };
  s4 -> s4 [0, 70] { R3832 += 1, R3768 += 1 };
  s4 -> s8 [75, 75] { R3832 += 1, R3768 += 1 };
  s4 -> s4 [76, 65535] { R3832 += 1, R3768 += 1 };
  s5 -> s5 [0, 69] { R3832 += 1, R3768 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3832 += 1 };
  s5 -> s7 [70, 70] { R3832 += 1, R3768 += 1 };
  s5 -> s8 [70, 70] { R3832 += 1, R3768 += 1 };
  s5 -> s5 [75, 65535] { R3832 += 1, R3768 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3832 += 1 };
  s8 -> s8 [0, 70] { R3832 += 1, R3768 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R3832 += 1 };
  s8 -> s8 [75, 65535] { R3832 += 1, R3768 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R3834 += 1, R3770 += 1, R137 += 1 };
  s0 -> s2 [0, 65535] { R3834 += 1, R3769 += 1, R3770 += 1 };
  s0 -> s0 [0, 65535] { R3833 += 1, R3834 += 1 };
  s0 -> s3 [70, 70] { R3834 += 1, R3770 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R3834 += 1, R3770 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R3834 += 1, R3770 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R3834 += 1, R3770 += 1, R137 += 1 };
  s1 -> s1 [0, 65535] { R3834 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R3834 += 1, R3770 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R3834 += 1, R3770 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R3834 += 1, R3770 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R3834 += 1, R3770 += 1, R137 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3834 += 1, R3769 += 1, R3770 += 1 };
  s2 -> s3 [70, 70] { R3834 += 1, R3770 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R3834 += 1, R3770 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R3834 += 1, R3770 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R3834 += 1, R3770 += 1, R137 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3834 += 1 };
  s4 -> s4 [0, 65535] { R3834 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3834 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R3836 += 1, R3772 += 1, R139 += 1 };
  s0 -> s0 [0, 65535] { R3835 += 1, R3836 += 1 };
  s0 -> s2 [0, 65535] { R3836 += 1, R3771 += 1, R3772 += 1 };
  s0 -> s3 [70, 70] { R3836 += 1, R3772 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R3836 += 1, R3772 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R3836 += 1, R3772 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R3836 += 1, R3772 += 1, R139 += 1 };
  s1 -> s1 [0, 65535] { R3836 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R3836 += 1, R3772 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R3836 += 1, R3772 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R3836 += 1, R3772 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R3836 += 1, R3772 += 1, R139 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3836 += 1, R3771 += 1, R3772 += 1 };
  s2 -> s3 [70, 70] { R3836 += 1, R3772 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R3836 += 1, R3772 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R3836 += 1, R3772 += 1, R139 += 1 };
  s3 -> s6 [0, 65535] { R3836 += 1 };
  s3 -> s3 [0, 65535] { R3836 += 1, R3772 += 1, R139 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3836 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3836 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R3838 += 1, R3774 += 1, R141 += 1, R142 += 1 };
  s0 -> s0 [0, 65535] { R3837 += 1, R3838 += 1 };
  s0 -> s2 [0, 65535] { R3838 += 1, R3773 += 1, R3774 += 1 };
  s0 -> s3 [70, 70] { R3838 += 1, R3774 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R3838 += 1, R3774 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R3838 += 1, R3774 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R3838 += 1, R3774 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 65535] { R3838 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R3838 += 1, R3774 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R3838 += 1, R3774 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R3838 += 1, R3774 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R3838 += 1, R3774 += 1, R141 += 1, R142 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3838 += 1, R3773 += 1, R3774 += 1 };
  s2 -> s3 [70, 70] { R3838 += 1, R3774 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R3838 += 1, R3774 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R3838 += 1, R3774 += 1, R141 += 1, R142 += 1 };
  s3 -> s3 [0, 65535] { R3838 += 1, R3774 += 1, R141 += 1, R142 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3838 += 1 };
  s4 -> s4 [0, 65535] { R3838 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3838 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R3840 += 1, R3776 += 1, R147 += 1, R148 += 1 };
  s0 -> s0 [0, 65535] { R3839 += 1, R3840 += 1 };
  s0 -> s2 [0, 65535] { R3840 += 1, R3775 += 1, R3776 += 1 };
  s0 -> s3 [70, 70] { R3840 += 1, R3776 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R3840 += 1, R3776 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R3840 += 1, R3776 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R3840 += 1, R3776 += 1, R147 += 1, R148 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3840 += 1 };
  s1 -> s3 [70, 70] { R3840 += 1, R3776 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R3840 += 1, R3776 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R3840 += 1, R3776 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R3840 += 1, R3776 += 1, R147 += 1, R148 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3840 += 1, R3775 += 1, R3776 += 1 };
  s2 -> s3 [70, 70] { R3840 += 1, R3776 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R3840 += 1, R3776 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R3840 += 1, R3776 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R3840 += 1, R3776 += 1, R147 += 1, R148 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3840 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3840 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3840 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R3842 += 1, R3778 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R3842 += 1, R3778 += 1, R151 += 1, R152 += 1 };
  s0 -> s3 [0, 65535] { R3842 += 1, R3777 += 1, R3778 += 1 };
  s0 -> s0 [0, 65535] { R3841 += 1, R3842 += 1 };
  s0 -> s4 [70, 70] { R3842 += 1, R3778 += 1, R151 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R3842 += 1, R3778 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R3842 += 1, R3778 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R3842 += 1, R3778 += 1, R151 += 1, R152 += 1 };
  s0 -> s1 [71, 74] { R3842 += 1, R3778 += 1, R152 += 1 };
  s0 -> s2 [71, 65535] { R3842 += 1, R3778 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R3842 += 1, R3778 += 1, R152 += 1 };
  s0 -> s1 [76, 65535] { R3842 += 1, R3778 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R3842 += 1, R3778 += 1, R152 += 1 };
  s1 -> s5 [70, 70] { R3842 += 1, R3778 += 1, R152 += 1 };
  s1 -> s6 [70, 70] { R3842 += 1, R3778 += 1, R152 += 1 };
  s1 -> s1 [71, 74] { R3842 += 1, R3778 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R3842 += 1, R3778 += 1, R152 += 1 };
  s1 -> s1 [76, 65535] { R3842 += 1, R3778 += 1, R152 += 1 };
  s2 -> s1 [0, 69] { R3842 += 1, R3778 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R3842 += 1, R3778 += 1, R151 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R3842 += 1, R3778 += 1, R151 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R3842 += 1, R3778 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R3842 += 1, R3778 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R3842 += 1, R3778 += 1, R151 += 1, R152 += 1 };
  s2 -> s1 [71, 74] { R3842 += 1, R3778 += 1, R152 += 1 };
  s2 -> s2 [71, 65535] { R3842 += 1, R3778 += 1, R151 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R3842 += 1, R3778 += 1, R152 += 1 };
  s2 -> s1 [76, 65535] { R3842 += 1, R3778 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R3842 += 1, R3778 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R3842 += 1, R3778 += 1, R151 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R3842 += 1, R3777 += 1, R3778 += 1 };
  s3 -> s4 [70, 70] { R3842 += 1, R3778 += 1, R151 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R3842 += 1, R3778 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R3842 += 1, R3778 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R3842 += 1, R3778 += 1, R151 += 1, R152 += 1 };
  s3 -> s1 [71, 74] { R3842 += 1, R3778 += 1, R152 += 1 };
  s3 -> s2 [71, 65535] { R3842 += 1, R3778 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R3842 += 1, R3778 += 1, R152 += 1 };
  s3 -> s1 [76, 65535] { R3842 += 1, R3778 += 1, R152 += 1 };
  s4 -> s6 [0, 74] { R3842 += 1, R3778 += 1, R152 += 1 };
  s4 -> s4 [0, 65535] { R3842 += 1, R3778 += 1, R151 += 1, R152 += 1 };
  s4 -> s10 [75, 75] { R3842 += 1, R3778 += 1, R152 += 1 };
  s4 -> s6 [76, 65535] { R3842 += 1, R3778 += 1, R152 += 1 };
  s6 -> s6 [0, 74] { R3842 += 1, R3778 += 1, R152 += 1 };
  s6 -> s10 [75, 75] { R3842 += 1, R3778 += 1, R152 += 1 };
  s6 -> s6 [76, 65535] { R3842 += 1, R3778 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R3842 += 1, R3778 += 1, R152 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R3842 += 1 };
  s8 -> s10 [70, 70] { R3842 += 1, R3778 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R3842 += 1, R3778 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R3842 += 1, R3778 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R3842 += 1, R3778 += 1, R152 += 1 };
  s10 -> s12 [0, 65535] { R3842 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R3842 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R3842 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R3844 += 1, R3780 += 1, R155 += 1, R156 += 1 };
  s0 -> s2 [0, 65535] { R3844 += 1, R3779 += 1, R3780 += 1 };
  s0 -> s0 [0, 65535] { R3843 += 1, R3844 += 1 };
  s0 -> s3 [70, 70] { R3844 += 1, R3780 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R3844 += 1, R3780 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R3844 += 1, R3780 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R3844 += 1, R3780 += 1, R155 += 1, R156 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3844 += 1 };
  s1 -> s3 [70, 70] { R3844 += 1, R3780 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R3844 += 1, R3780 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R3844 += 1, R3780 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R3844 += 1, R3780 += 1, R155 += 1, R156 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3844 += 1, R3779 += 1, R3780 += 1 };
  s2 -> s3 [70, 70] { R3844 += 1, R3780 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R3844 += 1, R3780 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R3844 += 1, R3780 += 1, R155 += 1, R156 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3844 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3844 += 1 };
  s4 -> s4 [0, 65535] { R3844 += 1, R3780 += 1, R155 += 1, R156 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3844 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R3846 += 1, R3782 += 1, R161 += 1, R162 += 1 };
  s0 -> s2 [0, 65535] { R3846 += 1, R3781 += 1, R3782 += 1 };
  s0 -> s0 [0, 65535] { R3845 += 1, R3846 += 1 };
  s0 -> s3 [70, 70] { R3846 += 1, R3782 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R3846 += 1, R3782 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R3846 += 1, R3782 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R3846 += 1, R3782 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535] { R3846 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R3846 += 1, R3782 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R3846 += 1, R3782 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R3846 += 1, R3782 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R3846 += 1, R3782 += 1, R161 += 1, R162 += 1 };
  s2 -> s2 [0, 65535] { R3846 += 1, R3781 += 1, R3782 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R3846 += 1, R3782 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R3846 += 1, R3782 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R3846 += 1, R3782 += 1, R161 += 1, R162 += 1 };
  s3 -> s3 [0, 65535] { R3846 += 1, R3782 += 1, R161 += 1, R162 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3846 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3846 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3846 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R3848 += 1, R3784 += 1, R167 += 1, R168 += 1 };
  s0 -> s0 [0, 65535] { R3847 += 1, R3848 += 1 };
  s0 -> s2 [0, 65535] { R3848 += 1, R3783 += 1, R3784 += 1 };
  s0 -> s3 [70, 70] { R3848 += 1, R3784 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R3848 += 1, R3784 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R3848 += 1, R3784 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R3848 += 1, R3784 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 65535] { R3848 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R3848 += 1, R3784 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R3848 += 1, R3784 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R3848 += 1, R3784 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R3848 += 1, R3784 += 1, R167 += 1, R168 += 1 };
  s2 -> s2 [0, 65535] { R3848 += 1, R3783 += 1, R3784 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R3848 += 1, R3784 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R3848 += 1, R3784 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R3848 += 1, R3784 += 1, R167 += 1, R168 += 1 };
  s3 -> s3 [0, 65535] { R3848 += 1, R3784 += 1, R167 += 1, R168 += 1 };
  s3 -> s6 [0, 65535] { R3848 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3848 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3848 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R3850 += 1, R3786 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s2 [0, 69] { R3850 += 1, R3786 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s3 [0, 69] { R3850 += 1, R3786 += 1, R175 += 1, R176 += 1 };
  s0 -> s0 [0, 65535] { R3849 += 1, R3850 += 1 };
  s0 -> s4 [0, 65535] { R3850 += 1, R3785 += 1, R3786 += 1 };
  s0 -> s5 [70, 70] { R3850 += 1, R3786 += 1, R175 += 1, R176 += 1 };
  s0 -> s6 [70, 70] { R3850 += 1, R3786 += 1, R175 += 1, R176 += 1 };
  s0 -> s7 [70, 70] { R3850 += 1, R3786 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s8 [70, 70] { R3850 += 1, R3786 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s9 [70, 70] { R3850 += 1, R3786 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s10 [70, 70] { R3850 += 1, R3786 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s1 [71, 65535] { R3850 += 1, R3786 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s2 [71, 65535] { R3850 += 1, R3786 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s3 [71, 65535] { R3850 += 1, R3786 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [0, 69] { R3850 += 1, R3786 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s2 [0, 69] { R3850 += 1, R3786 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s7 [70, 70] { R3850 += 1, R3786 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s8 [70, 70] { R3850 += 1, R3786 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s9 [70, 70] { R3850 += 1, R3786 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s10 [70, 70] { R3850 += 1, R3786 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s1 [71, 65535] { R3850 += 1, R3786 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s2 [71, 65535] { R3850 += 1, R3786 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s14 [0, 69] { R3850 += 1, R3786 += 1, R176 += 1 };
  s2 -> s2 [0, 69] { R3850 += 1, R3786 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s11 [70, 70] { R3850 += 1, R3786 += 1, R176 += 1 };
  s2 -> s15 [70, 70] { R3850 += 1, R3786 += 1, R176 += 1 };
  s2 -> s8 [70, 70] { R3850 += 1, R3786 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s10 [70, 70] { R3850 += 1, R3786 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s14 [71, 65535] { R3850 += 1, R3786 += 1, R176 += 1 };
  s2 -> s2 [71, 65535] { R3850 += 1, R3786 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s1 [0, 69] { R3850 += 1, R3786 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s2 [0, 69] { R3850 += 1, R3786 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [0, 69] { R3850 += 1, R3786 += 1, R175 += 1, R176 += 1 };
  s3 -> s5 [70, 70] { R3850 += 1, R3786 += 1, R175 += 1, R176 += 1 };
  s3 -> s6 [70, 70] { R3850 += 1, R3786 += 1, R175 += 1, R176 += 1 };
  s3 -> s7 [70, 70] { R3850 += 1, R3786 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s8 [70, 70] { R3850 += 1, R3786 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s9 [70, 70] { R3850 += 1, R3786 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s10 [70, 70] { R3850 += 1, R3786 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s1 [71, 65535] { R3850 += 1, R3786 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s2 [71, 65535] { R3850 += 1, R3786 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [71, 65535] { R3850 += 1, R3786 += 1, R175 += 1, R176 += 1 };
  s4 -> s1 [0, 69] { R3850 += 1, R3786 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s2 [0, 69] { R3850 += 1, R3786 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s3 [0, 69] { R3850 += 1, R3786 += 1, R175 += 1, R176 += 1 };
  s4 -> s4 [0, 65535] { R3850 += 1, R3785 += 1, R3786 += 1 };
  s4 -> s5 [70, 70] { R3850 += 1, R3786 += 1, R175 += 1, R176 += 1 };
  s4 -> s6 [70, 70] { R3850 += 1, R3786 += 1, R175 += 1, R176 += 1 };
  s4 -> s7 [70, 70] { R3850 += 1, R3786 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s8 [70, 70] { R3850 += 1, R3786 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s9 [70, 70] { R3850 += 1, R3786 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s10 [70, 70] { R3850 += 1, R3786 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s1 [71, 65535] { R3850 += 1, R3786 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s2 [71, 65535] { R3850 += 1, R3786 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s3 [71, 65535] { R3850 += 1, R3786 += 1, R175 += 1, R176 += 1 };
  s6 -> s6 [0, 65535] { R3850 += 1, R3786 += 1, R175 += 1, R176 += 1 };
  s6 -> s8 [0, 65535] { R3850 += 1, R3786 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s6 -> s9 [0, 65535] { R3850 += 1, R3786 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s8 -> s11 [0, 65535] { R3850 += 1, R3786 += 1, R176 += 1 };
  s8 -> s8 [0, 65535] { R3850 += 1, R3786 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s9 -> s8 [0, 65535] { R3850 += 1, R3786 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s9 -> s9 [0, 65535] { R3850 += 1, R3786 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s11 -> s11 [0, 65535] { R3850 += 1, R3786 += 1, R176 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [0, 65535] { R3850 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R3850 += 1 };
  s14 -> s14 [0, 69] { R3850 += 1, R3786 += 1, R176 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R3850 += 1 };
  s14 -> s11 [70, 70] { R3850 += 1, R3786 += 1, R176 += 1 };
  s14 -> s15 [70, 70] { R3850 += 1, R3786 += 1, R176 += 1 };
  s14 -> s14 [71, 65535] { R3850 += 1, R3786 += 1, R176 += 1 };
  s15 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R3850 += 1 };
  accepting s12, s13, s14, s15, s11;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R3852 += 1, R3788 += 1, R185 += 1, R186 += 1 };
  s0 -> s2 [0, 65535] { R3852 += 1, R3787 += 1, R3788 += 1 };
  s0 -> s0 [0, 65535] { R3851 += 1, R3852 += 1 };
  s0 -> s3 [70, 70] { R3852 += 1, R3788 += 1, R185 += 1, R186 += 1 };
  s0 -> s4 [70, 70] { R3852 += 1, R3788 += 1, R185 += 1, R186 += 1 };
  s0 -> s1 [71, 65535] { R3852 += 1, R3788 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 69] { R3852 += 1, R3788 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 65535] { R3852 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R3852 += 1, R3788 += 1, R185 += 1, R186 += 1 };
  s1 -> s4 [70, 70] { R3852 += 1, R3788 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [71, 65535] { R3852 += 1, R3788 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [0, 69] { R3852 += 1, R3788 += 1, R185 += 1, R186 += 1 };
  s2 -> s2 [0, 65535] { R3852 += 1, R3787 += 1, R3788 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R3852 += 1, R3788 += 1, R185 += 1, R186 += 1 };
  s2 -> s4 [70, 70] { R3852 += 1, R3788 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [71, 65535] { R3852 += 1, R3788 += 1, R185 += 1, R186 += 1 };
  s3 -> s3 [0, 65535] { R3852 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3852 += 1, R3788 += 1, R185 += 1, R186 += 1 };
  s4 -> s5 [0, 65535] { R3852 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3852 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R3854 += 1, R3790 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s0 -> s2 [0, 69] { R3854 += 1, R3790 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s0 -> s3 [0, 69] { R3854 += 1, R3790 += 1, R2741 += 1, R2742 += 1 };
  s0 -> s4 [0, 65535] { R3854 += 1, R3789 += 1, R3790 += 1 };
  s0 -> s0 [0, 65535] { R3853 += 1, R3854 += 1 };
  s0 -> s5 [70, 70] { R3854 += 1, R3790 += 1, R2741 += 1, R2742 += 1 };
  s0 -> s6 [70, 70] { R3854 += 1, R3790 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s0 -> s7 [70, 70] { R3854 += 1, R3790 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s0 -> s8 [70, 70] { R3854 += 1, R3790 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s0 -> s9 [70, 70] { R3854 += 1, R3790 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s0 -> s10 [70, 70] { R3854 += 1, R3790 += 1, R2741 += 1, R2742 += 1 };
  s0 -> s1 [71, 65535] { R3854 += 1, R3790 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s0 -> s2 [71, 65535] { R3854 += 1, R3790 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s0 -> s3 [71, 65535] { R3854 += 1, R3790 += 1, R2741 += 1, R2742 += 1 };
  s1 -> s1 [0, 69] { R3854 += 1, R3790 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s1 -> s2 [0, 69] { R3854 += 1, R3790 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s1 -> s6 [70, 70] { R3854 += 1, R3790 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s1 -> s7 [70, 70] { R3854 += 1, R3790 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s1 -> s8 [70, 70] { R3854 += 1, R3790 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s1 -> s9 [70, 70] { R3854 += 1, R3790 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s1 -> s1 [71, 65535] { R3854 += 1, R3790 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s1 -> s2 [71, 65535] { R3854 += 1, R3790 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s2 -> s2 [0, 69] { R3854 += 1, R3790 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s2 -> s14 [0, 69] { R3854 += 1, R3790 += 1, R2742 += 1 };
  s2 -> s6 [70, 70] { R3854 += 1, R3790 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s2 -> s11 [70, 70] { R3854 += 1, R3790 += 1, R2742 += 1 };
  s2 -> s7 [70, 70] { R3854 += 1, R3790 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s2 -> s15 [70, 70] { R3854 += 1, R3790 += 1, R2742 += 1 };
  s2 -> s2 [71, 65535] { R3854 += 1, R3790 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s2 -> s14 [71, 65535] { R3854 += 1, R3790 += 1, R2742 += 1 };
  s3 -> s1 [0, 69] { R3854 += 1, R3790 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s3 -> s2 [0, 69] { R3854 += 1, R3790 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s3 -> s3 [0, 69] { R3854 += 1, R3790 += 1, R2741 += 1, R2742 += 1 };
  s3 -> s5 [70, 70] { R3854 += 1, R3790 += 1, R2741 += 1, R2742 += 1 };
  s3 -> s6 [70, 70] { R3854 += 1, R3790 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s3 -> s7 [70, 70] { R3854 += 1, R3790 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s3 -> s8 [70, 70] { R3854 += 1, R3790 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s3 -> s9 [70, 70] { R3854 += 1, R3790 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s3 -> s10 [70, 70] { R3854 += 1, R3790 += 1, R2741 += 1, R2742 += 1 };
  s3 -> s1 [71, 65535] { R3854 += 1, R3790 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s3 -> s2 [71, 65535] { R3854 += 1, R3790 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s3 -> s3 [71, 65535] { R3854 += 1, R3790 += 1, R2741 += 1, R2742 += 1 };
  s4 -> s1 [0, 69] { R3854 += 1, R3790 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s4 -> s2 [0, 69] { R3854 += 1, R3790 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s4 -> s3 [0, 69] { R3854 += 1, R3790 += 1, R2741 += 1, R2742 += 1 };
  s4 -> s4 [0, 65535] { R3854 += 1, R3789 += 1, R3790 += 1 };
  s4 -> s5 [70, 70] { R3854 += 1, R3790 += 1, R2741 += 1, R2742 += 1 };
  s4 -> s6 [70, 70] { R3854 += 1, R3790 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s4 -> s7 [70, 70] { R3854 += 1, R3790 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s4 -> s8 [70, 70] { R3854 += 1, R3790 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s4 -> s9 [70, 70] { R3854 += 1, R3790 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s4 -> s10 [70, 70] { R3854 += 1, R3790 += 1, R2741 += 1, R2742 += 1 };
  s4 -> s1 [71, 65535] { R3854 += 1, R3790 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s4 -> s2 [71, 65535] { R3854 += 1, R3790 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s4 -> s3 [71, 65535] { R3854 += 1, R3790 += 1, R2741 += 1, R2742 += 1 };
  s6 -> s6 [0, 65535] { R3854 += 1, R3790 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s6 -> s11 [0, 65535] { R3854 += 1, R3790 += 1, R2742 += 1 };
  s9 -> s6 [0, 65535] { R3854 += 1, R3790 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s9 -> s9 [0, 65535] { R3854 += 1, R3790 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s10 -> s6 [0, 65535] { R3854 += 1, R3790 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s10 -> s9 [0, 65535] { R3854 += 1, R3790 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s10 -> s10 [0, 65535] { R3854 += 1, R3790 += 1, R2741 += 1, R2742 += 1 };
  s11 -> s11 [0, 65535] { R3854 += 1, R3790 += 1, R2742 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [0, 65535] { R3854 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R3854 += 1 };
  s14 -> s14 [0, 69] { R3854 += 1, R3790 += 1, R2742 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R3854 += 1 };
  s14 -> s11 [70, 70] { R3854 += 1, R3790 += 1, R2742 += 1 };
  s14 -> s15 [70, 70] { R3854 += 1, R3790 += 1, R2742 += 1 };
  s14 -> s14 [71, 65535] { R3854 += 1, R3790 += 1, R2742 += 1 };
  s15 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R3854 += 1 };
  accepting s12, s13, s14, s15, s11;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R3856 += 1, R3792 += 1, R3699 += 1, R3700 += 1 };
  s0 -> s2 [0, 69] { R3856 += 1, R3792 += 1, R3700 += 1, R3701 += 1, R3702 += 1 };
  s0 -> s3 [0, 65535] { R3856 += 1, R3791 += 1, R3792 += 1 };
  s0 -> s0 [0, 65535] { R3855 += 1, R3856 += 1 };
  s0 -> s4 [70, 70] { R3856 += 1, R3792 += 1, R3699 += 1, R3700 += 1 };
  s0 -> s5 [70, 70] { R3856 += 1, R3792 += 1, R3700 += 1, R3701 += 1, R3702 += 1 };
  s0 -> s6 [70, 70] { R3856 += 1, R3792 += 1, R3699 += 1, R3700 += 1 };
  s0 -> s7 [70, 70] { R3856 += 1, R3792 += 1, R3700 += 1, R3701 += 1, R3702 += 1 };
  s0 -> s1 [71, 65535] { R3856 += 1, R3792 += 1, R3699 += 1, R3700 += 1 };
  s0 -> s2 [71, 65535] { R3856 += 1, R3792 += 1, R3700 += 1, R3701 += 1, R3702 += 1 };
  s1 -> s1 [0, 69] { R3856 += 1, R3792 += 1, R3699 += 1, R3700 += 1 };
  s1 -> s2 [0, 69] { R3856 += 1, R3792 += 1, R3700 += 1, R3701 += 1, R3702 += 1 };
  s1 -> s4 [70, 70] { R3856 += 1, R3792 += 1, R3699 += 1, R3700 += 1 };
  s1 -> s5 [70, 70] { R3856 += 1, R3792 += 1, R3700 += 1, R3701 += 1, R3702 += 1 };
  s1 -> s6 [70, 70] { R3856 += 1, R3792 += 1, R3699 += 1, R3700 += 1 };
  s1 -> s7 [70, 70] { R3856 += 1, R3792 += 1, R3700 += 1, R3701 += 1, R3702 += 1 };
  s1 -> s1 [71, 65535] { R3856 += 1, R3792 += 1, R3699 += 1, R3700 += 1 };
  s1 -> s2 [71, 65535] { R3856 += 1, R3792 += 1, R3700 += 1, R3701 += 1, R3702 += 1 };
  s2 -> s2 [0, 69] { R3856 += 1, R3792 += 1, R3700 += 1, R3701 += 1, R3702 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R3856 += 1 };
  s2 -> s5 [70, 70] { R3856 += 1, R3792 += 1, R3700 += 1, R3701 += 1, R3702 += 1 };
  s2 -> s7 [70, 70] { R3856 += 1, R3792 += 1, R3700 += 1, R3701 += 1, R3702 += 1 };
  s2 -> s2 [71, 65535] { R3856 += 1, R3792 += 1, R3700 += 1, R3701 += 1, R3702 += 1 };
  s3 -> s1 [0, 69] { R3856 += 1, R3792 += 1, R3699 += 1, R3700 += 1 };
  s3 -> s2 [0, 69] { R3856 += 1, R3792 += 1, R3700 += 1, R3701 += 1, R3702 += 1 };
  s3 -> s3 [0, 65535] { R3856 += 1, R3791 += 1, R3792 += 1 };
  s3 -> s4 [70, 70] { R3856 += 1, R3792 += 1, R3699 += 1, R3700 += 1 };
  s3 -> s5 [70, 70] { R3856 += 1, R3792 += 1, R3700 += 1, R3701 += 1, R3702 += 1 };
  s3 -> s6 [70, 70] { R3856 += 1, R3792 += 1, R3699 += 1, R3700 += 1 };
  s3 -> s7 [70, 70] { R3856 += 1, R3792 += 1, R3700 += 1, R3701 += 1, R3702 += 1 };
  s3 -> s1 [71, 65535] { R3856 += 1, R3792 += 1, R3699 += 1, R3700 += 1 };
  s3 -> s2 [71, 65535] { R3856 += 1, R3792 += 1, R3700 += 1, R3701 += 1, R3702 += 1 };
  s5 -> s5 [0, 65535] { R3856 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R3856 += 1, R3792 += 1, R3699 += 1, R3700 += 1 };
  s6 -> s7 [0, 65535] { R3856 += 1, R3792 += 1, R3700 += 1, R3701 += 1, R3702 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R3856 += 1, R3792 += 1, R3700 += 1, R3701 += 1, R3702 += 1 };
  s7 -> s9 [0, 65535] { R3856 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R3856 += 1 };
  accepting s8, s5, s2, s9, s7;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
constraint R2 = R3736 && R3 = R3856 && R25 - R3856 = -1 && R26 = R3856 && R27 - R3856 = -1 && R28 = R3856 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R3704 + -1*R3700 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R3704 + -1*R3700 - R130 = 0 && R129 + R3703 + R3699 = 0 && R131 + R3705 + R3701 = 0 && R132 + R3706 + R3702 = 0 && R3735 = 0 && R3767 = 0 && R3768 = 0 && R3777 = 0 && R3778 = 0 && R3785 = 0 && R3786 = 0 && R3789 = 0 && R3790 = 0 && R3791 = 0 && R3792 = 0 && R3793 = 0 && R3794 = R3856 && R3795 = 0 && R3796 = R3856 && R3797 = 0 && R3798 = R3856 && R3799 = 0 && R3800 = R3856 && R3801 = 0 && R3802 = R3856 && R3803 = 0 && R3804 = R3856 && R3805 = 0 && R3806 = R3856 && R3807 = 0 && R3808 = R3856 && R3809 = 0 && R3810 = R3856 && R3811 = 0 && R3812 = R3856 && R3813 = 0 && R3814 = R3856 && R3815 = 0 && R3816 = R3856 && R3817 = 0 && R3818 = R3856 && R3819 = 0 && R3820 = R3856 && R3821 = 0 && R3822 = R3856 && R3823 = 0 && R3824 = R3856 && R3825 = 0 && R3826 = R3856 && R3827 = 0 && R3828 = R3856 && R3829 = 0 && R3830 = R3856 && R3831 = 0 && R3832 = R3856 && R3833 = 0 && R3834 = R3856 && R3835 = 0 && R3836 = R3856 && R3837 = 0 && R3838 = R3856 && R3839 = 0 && R3840 = R3856 && R3841 = 0 && R3842 = R3856 && R3843 = 0 && R3844 = R3856 && R3845 = 0 && R3846 = R3856 && R3847 = 0 && R3848 = R3856 && R3849 = 0 && R3850 = R3856 && R3851 = 0 && R3852 = R3856 && R3853 = 0 && R3854 = R3856 && R3855 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R3704 + -1*R3700 - R130 < 1 && -1 < R3736 && 0 < R3856 && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R3704 + -1*R3700 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R191 + R187 = 0 && R114 + R192 + R188 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R3704 + -1*R3700 - R130 = 0 || R130 + R3704 + R3700 < 1) && (R81 + R158 + R155 = 0 || R130 + R3704 + R3700 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R3704 + -1*R3700 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R3704 + R3700 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R3704 + -1*R3700 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R3704 + R3700 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R3704 + -1*R3700 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R3704 + R3700 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 != 0 || R112 + R190 + R186 + -1*R3704 + -1*R3700 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R3704 + R3700 = 0)) && (R113 + R191 + R187 != 0 || R83 + R160 + R157 + -1*R192 + -1*R188 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R2746 + R2741 != 0 || R120 + R2747 + R2742 + -1*R3704 + -1*R3700 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R3704 + R3700 = 0)) && (R3707 != 0 || R3708 = R3736 || (R22 = 0 && R3736 = 0)) && (R3709 != 0 || R3710 = R3736 || (R22 = 0 && R3736 = 0)) && (R3711 != 0 || R3712 = R3736 || (R22 = 0 && R3736 = 0)) && (R3713 != 0 || R3714 = R3736 || (R22 = 0 && R3736 = 0)) && (R3715 != 0 || R3716 = R3736 || (R22 = 0 && R3736 = 0)) && (R3717 != 0 || R3718 = R3736 || (R22 = 0 && R3736 = 0)) && (R3719 != 0 || R3720 = R3736 || (R22 = 0 && R3736 = 0)) && (R3721 != 0 || R3722 = R3736 || (R22 = 0 && R3736 = 0)) && (R3723 != 0 || R3724 = R3736 || (R22 = 0 && R3736 = 0)) && (R3725 != 0 || R3726 = R3736 || (R22 = 0 && R3736 = 0)) && (R3727 != 0 || R3728 = R3736 || (R22 = 0 && R3736 = 0)) && (R3729 != 0 || R3730 = R3736 || (R22 = 0 && R3736 = 0)) && (R3731 != 0 || R3732 = R3736 || (R22 = 0 && R3736 = 0)) && (R3733 != 0 || R3734 = R3736 || (R22 = 0 && R3736 = 0)) && (R23 = 0 || (R3765 = 0 && R3766 = 0)) && (R23 = 0 || (R3769 = 0 && R3770 = 0)) && (R23 = 0 || (R3771 = 0 && R3772 = 0)) && (R23 = 0 || (R3773 = 0 && R3774 = 0)) && (R23 = 0 || (R3775 = 0 && R3776 = 0)) && (R23 = 0 || (R3779 = 0 && R3780 = 0)) && (R23 = 0 || (R3781 = 0 && R3782 = 0)) && (R23 = 0 || (R3783 = 0 && R3784 = 0)) && (R23 = 0 || (R3787 = 0 && R3788 = 0)) && (R24 = 0 || (R3737 = 0 && R3738 = 0)) && (R24 = 0 || (R3739 = 0 && R3740 = 0)) && (R24 = 0 || (R3741 = 0 && R3742 = 0)) && (R24 = 0 || (R3743 = 0 && R3744 = 0)) && (R24 = 0 || (R3745 = 0 && R3746 = 0)) && (R24 = 0 || (R3747 = 0 && R3748 = 0)) && (R24 = 0 || (R3749 = 0 && R3750 = 0)) && (R24 = 0 || (R3751 = 0 && R3752 = 0)) && (R24 = 0 || (R3753 = 0 && R3754 = 0)) && (R24 = 0 || (R3755 = 0 && R3756 = 0)) && (R24 = 0 || (R3757 = 0 && R3758 = 0)) && (R24 = 0 || (R3759 = 0 && R3760 = 0)) && (R24 = 0 || (R3761 = 0 && R3762 = 0)) && (R24 = 0 || (R3763 = 0 && R3764 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R3704 + R3700 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R3704 + R3700 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R3704 + R3700 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 = 0 || (R83 + R160 + R157 = 0 && R130 + R3704 + R3700 = 0)) && (R113 + R191 + R187 = 0 || R83 + R160 + R157 < 1) && (R119 + R2746 + R2741 = 0 || (R83 + R160 + R157 = 0 && R130 + R3704 + R3700 = 0)) && (R123 + R2750 + R2745 = 0 || (R121 + R2748 + R2743 = 0 && R122 + R2749 + R2744 = 0)) && (R3707 = 0 || (R22 = 0 && R3736 = 0)) && (R3709 = 0 || (R22 = 0 && R3736 = 0)) && (R3711 = 0 || (R22 = 0 && R3736 = 0)) && (R3713 = 0 || (R22 = 0 && R3736 = 0)) && (R3715 = 0 || (R22 = 0 && R3736 = 0)) && (R3717 = 0 || (R22 = 0 && R3736 = 0)) && (R3719 = 0 || (R22 = 0 && R3736 = 0)) && (R3721 = 0 || (R22 = 0 && R3736 = 0)) && (R3723 = 0 || (R22 = 0 && R3736 = 0)) && (R3725 = 0 || (R22 = 0 && R3736 = 0)) && (R3727 = 0 || (R22 = 0 && R3736 = 0)) && (R3729 = 0 || (R22 = 0 && R3736 = 0)) && (R3731 = 0 || (R22 = 0 && R3736 = 0)) && (R3733 = 0 || (R22 = 0 && R3736 = 0));
// End of Parikh automata intersection problem
