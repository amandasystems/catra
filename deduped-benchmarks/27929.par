// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R2, R22, R23, R24, R25, R26, R27, R2741, R2742, R2743, R2744, R2745, R2746, R2747, R2748, R2749, R2750, R28, R29, R3, R30, R31, R32, R3541, R3542, R3543, R3544, R3545, R3546, R3547, R3548, R3549, R3550, R3551, R3552, R3553, R3554, R3555, R3556, R3557, R3558, R3559, R3560, R3561, R3562, R3563, R3564, R3565, R3566, R3567, R3568, R3569, R3570, R3571, R3572, R3573, R3574, R3575, R3576, R3577, R3578, R3579, R3580, R3581, R3582, R3583, R3584, R3585, R3586, R3587, R3588, R3589, R3590, R3591, R3592, R3593, R3594, R3595, R3596, R3597, R3598, R3599, R3600, R3601, R3602, R3603, R3604, R3605, R3606, R3607, R3608, R3609, R3610, R3611, R3612, R3613, R3614, R3615, R3616, R3617, R3618, R3619, R3620, R3621, R3622, R3623, R3624, R3625, R3626, R3627, R3628, R3629, R3630, R3631, R3632, R3633, R3634, R3635, R3636, R3637, R3638, R3639, R3640, R3641, R3642, R3643, R3644, R3645, R3646, R3647, R3648, R3649, R3650, R3651, R3652, R3653, R3654, R3655, R3656, R3657, R3658, R3659, R3660, R3661, R3662, R3663, R3664, R3665, R3666, R3667, R3668, R3669, R3670, R3671, R3672, R3673, R3674, R3675, R3676, R3677, R3678, R3679, R3680, R3681, R3682, R3683, R3684, R3685, R3686, R3687, R3688, R3689, R3690, R3691, R3692, R3693, R3694, R3695, R3696, R3697, R3698, R4, R5, R63, R65, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R26 += 1 };
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R30 += 1 };
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R3580 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R3579 += 1, R3580 += 1 };
  s1 -> s1 [0, 65535] { R3580 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R3582 += 1 };
  s0 -> s0 [0, 65535] { R3581 += 1, R3582 += 1 };
  s0 -> s2 [70, 70] { R3582 += 1 };
  s0 -> s3 [70, 70] { R3582 += 1 };
  s0 -> s1 [76, 65535] { R3582 += 1 };
  s1 -> s1 [0, 69] { R3582 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3582 += 1 };
  s1 -> s3 [70, 70] { R3582 += 1 };
  s1 -> s1 [76, 65535] { R3582 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R3582 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R3582 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R3584 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R3583 += 1, R3584 += 1 };
  s0 -> s2 [70, 70] { R3584 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R3584 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R3584 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R3584 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3584 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R3584 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R3584 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3584 += 1, R63 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R3586 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R3585 += 1, R3586 += 1 };
  s0 -> s2 [70, 70] { R3586 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R3586 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R3586 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R3586 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3586 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R3586 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R3586 += 1, R65 += 1 };
  s2 -> s2 [0, 65535] { R3586 += 1, R65 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R3588 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R3587 += 1, R3588 += 1 };
  s0 -> s2 [70, 70] { R3588 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R3588 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R3588 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R3588 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3588 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R3588 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R3588 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3588 += 1, R67 += 1, R68 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R3590 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R3589 += 1, R3590 += 1 };
  s0 -> s2 [70, 70] { R3590 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R3590 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R3590 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R3590 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3590 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R3590 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R3590 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3590 += 1, R73 += 1, R74 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R3592 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R3591 += 1, R3592 += 1 };
  s0 -> s2 [70, 70] { R3592 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R3592 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R3592 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R3592 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3592 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R3592 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R3592 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3592 += 1, R77 += 1, R78 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R3594 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R3593 += 1, R3594 += 1 };
  s0 -> s2 [70, 70] { R3594 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R3594 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R3594 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R3594 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3594 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R3594 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R3594 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3594 += 1, R81 += 1, R82 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R3596 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R3595 += 1, R3596 += 1 };
  s0 -> s2 [70, 70] { R3596 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R3596 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R3596 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R3596 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3596 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R3596 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R3596 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535] { R3596 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R3598 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R3597 += 1, R3598 += 1 };
  s0 -> s2 [70, 70] { R3598 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R3598 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R3598 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R3598 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3598 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R3598 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R3598 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R3598 += 1, R93 += 1, R94 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R3600 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R3599 += 1, R3600 += 1 };
  s0 -> s2 [70, 70] { R3600 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R3600 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R3600 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R3600 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3600 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R3600 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R3600 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535] { R3600 += 1, R101 += 1, R102 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R3602 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R3601 += 1, R3602 += 1 };
  s0 -> s2 [70, 70] { R3602 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R3602 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R3602 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R3602 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3602 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R3602 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R3602 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535] { R3602 += 1, R111 += 1, R112 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R3604 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R3603 += 1, R3604 += 1 };
  s0 -> s2 [70, 70] { R3604 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R3604 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R3604 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R3604 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3604 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R3604 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R3604 += 1, R119 += 1, R120 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3604 += 1, R119 += 1, R120 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R3606 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R3605 += 1, R3606 += 1 };
  s0 -> s2 [70, 70] { R3606 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R3606 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R3606 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R3606 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3606 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R3606 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R3606 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3606 += 1, R129 += 1, R130 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R3636 += 1 };
  s0 -> s0 [0, 65535] { R3635 += 1, R3636 += 1 };
  s0 -> s2 [70, 70] { R3636 += 1 };
  s0 -> s1 [71, 65535] { R3636 += 1 };
  s1 -> s1 [0, 69] { R3636 += 1 };
  s1 -> s2 [70, 70] { R3636 += 1 };
  s1 -> s1 [71, 65535] { R3636 += 1 };
  s2 -> s2 [0, 65535] { R3636 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R3638 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R3637 += 1, R3638 += 1 };
  s1 -> s1 [0, 65535] { R3638 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R3640 += 1 };
  s0 -> s0 [0, 65535] { R3639 += 1, R3640 += 1 };
  s0 -> s2 [0, 65535] { R3640 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R3640 += 1 };
  s0 -> s1 [71, 65535] { R3640 += 1 };
  s1 -> s1 [0, 69] { R3640 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R3640 += 1 };
  s1 -> s1 [71, 65535] { R3640 += 1 };
  s2 -> s1 [0, 69] { R3640 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3640 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R3640 += 1 };
  s2 -> s1 [71, 65535] { R3640 += 1 };
  s3 -> s3 [0, 65535] { R3640 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R3642 += 1, R3550 += 1 };
  s0 -> s0 [0, 65535] { R3641 += 1, R3642 += 1 };
  s0 -> s2 [0, 65535] { R3642 += 1, R3549 += 1, R3550 += 1 };
  s0 -> s1 [71, 65535] { R3642 += 1, R3550 += 1 };
  s1 -> s1 [0, 69] { R3642 += 1, R3550 += 1 };
  s1 -> s1 [0, 65535] { R3642 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R3642 += 1, R3550 += 1 };
  s2 -> s1 [0, 69] { R3642 += 1, R3550 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R3642 += 1, R3549 += 1, R3550 += 1 };
  s2 -> s1 [71, 65535] { R3642 += 1, R3550 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R3643 += 1, R3644 += 1 };
  s0 -> s1 [0, 65535] { R3644 += 1, R3552 += 1, R22 += 1 };
  s0 -> s2 [0, 65535] { R3644 += 1, R3551 += 1, R3552 += 1 };
  s1 -> s4 [0, 65535] { R3644 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3644 += 1, R3552 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R3644 += 1, R3552 += 1, R22 += 1 };
  s2 -> s2 [0, 65535] { R3644 += 1, R3551 += 1, R3552 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3644 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R3646 += 1, R3554 += 1 };
  s0 -> s2 [0, 65535] { R3646 += 1, R3553 += 1, R3554 += 1 };
  s0 -> s0 [0, 65535] { R3645 += 1, R3646 += 1 };
  s0 -> s1 [75, 65535] { R3646 += 1, R3554 += 1 };
  s1 -> s1 [0, 70] { R3646 += 1, R3554 += 1 };
  s1 -> s1 [0, 65535] { R3646 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R3646 += 1, R3554 += 1 };
  s2 -> s1 [0, 70] { R3646 += 1, R3554 += 1 };
  s2 -> s2 [0, 65535] { R3646 += 1, R3553 += 1, R3554 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R3646 += 1, R3554 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R3648 += 1, R3556 += 1, R138 += 1 };
  s0 -> s2 [0, 65535] { R3648 += 1, R3555 += 1, R3556 += 1 };
  s0 -> s0 [0, 65535] { R3647 += 1, R3648 += 1 };
  s1 -> s4 [0, 65535] { R3648 += 1 };
  s1 -> s1 [0, 65535] { R3648 += 1, R3556 += 1, R138 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R3648 += 1, R3556 += 1, R138 += 1 };
  s2 -> s2 [0, 65535] { R3648 += 1, R3555 += 1, R3556 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3648 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R3650 += 1, R3558 += 1 };
  s0 -> s2 [0, 65535] { R3650 += 1, R3558 += 1, R140 += 1 };
  s0 -> s3 [0, 65535] { R3650 += 1, R3557 += 1, R3558 += 1 };
  s0 -> s0 [0, 65535] { R3649 += 1, R3650 += 1 };
  s0 -> s1 [76, 65535] { R3650 += 1, R3558 += 1 };
  s1 -> s1 [0, 74] { R3650 += 1, R3558 += 1 };
  s1 -> s1 [0, 65535] { R3650 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [76, 65535] { R3650 += 1, R3558 += 1 };
  s2 -> s1 [0, 74] { R3650 += 1, R3558 += 1 };
  s2 -> s2 [0, 65535] { R3650 += 1, R3558 += 1, R140 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R3650 += 1 };
  s2 -> s1 [76, 65535] { R3650 += 1, R3558 += 1 };
  s3 -> s1 [0, 74] { R3650 += 1, R3558 += 1 };
  s3 -> s2 [0, 65535] { R3650 += 1, R3558 += 1, R140 += 1 };
  s3 -> s3 [0, 65535] { R3650 += 1, R3557 += 1, R3558 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [76, 65535] { R3650 += 1, R3558 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3650 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R3652 += 1, R3560 += 1, R145 += 1, R146 += 1 };
  s0 -> s2 [0, 65535] { R3652 += 1, R3559 += 1, R3560 += 1 };
  s0 -> s3 [0, 65535] { R3652 += 1, R3560 += 1, R144 += 1, R145 += 1 };
  s0 -> s0 [0, 65535] { R3651 += 1, R3652 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R3652 += 1, R3560 += 1, R145 += 1, R146 += 1 };
  s1 -> s6 [0, 65535] { R3652 += 1, R3560 += 1 };
  s1 -> s5 [0, 65535] { R3652 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R3652 += 1, R3560 += 1, R145 += 1, R146 += 1 };
  s2 -> s2 [0, 65535] { R3652 += 1, R3559 += 1, R3560 += 1 };
  s2 -> s3 [0, 65535] { R3652 += 1, R3560 += 1, R144 += 1, R145 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R3652 += 1, R3560 += 1, R145 += 1, R146 += 1 };
  s3 -> s3 [0, 65535] { R3652 += 1, R3560 += 1, R144 += 1, R145 += 1 };
  s3 -> s5 [0, 65535] { R3652 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3652 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R3652 += 1, R3560 += 1 };
  s6 -> s5 [0, 65535] { R3652 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R3654 += 1, R3562 += 1, R150 += 1 };
  s0 -> s2 [0, 65535] { R3654 += 1, R3561 += 1, R3562 += 1 };
  s0 -> s0 [0, 65535] { R3653 += 1, R3654 += 1 };
  s0 -> s3 [0, 65535] { R3654 += 1, R3562 += 1, R149 += 1, R150 += 1 };
  s0 -> s4 [75, 75] { R3654 += 1, R3562 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R3654 += 1, R3562 += 1, R150 += 1 };
  s0 -> s1 [84, 65535] { R3654 += 1, R3562 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R3654 += 1, R3562 += 1, R150 += 1 };
  s1 -> s1 [0, 65535] { R3654 += 1, R3562 += 1 };
  s1 -> s6 [0, 65535] { R3654 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [75, 75] { R3654 += 1, R3562 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R3654 += 1, R3562 += 1, R150 += 1 };
  s1 -> s1 [84, 65535] { R3654 += 1, R3562 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R3654 += 1, R3562 += 1, R150 += 1 };
  s2 -> s2 [0, 65535] { R3654 += 1, R3561 += 1, R3562 += 1 };
  s2 -> s3 [0, 65535] { R3654 += 1, R3562 += 1, R149 += 1, R150 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [75, 75] { R3654 += 1, R3562 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R3654 += 1, R3562 += 1, R150 += 1 };
  s2 -> s1 [84, 65535] { R3654 += 1, R3562 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R3654 += 1, R3562 += 1, R150 += 1 };
  s3 -> s6 [0, 65535] { R3654 += 1 };
  s3 -> s3 [0, 65535] { R3654 += 1, R3562 += 1, R149 += 1, R150 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [75, 75] { R3654 += 1, R3562 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R3654 += 1, R3562 += 1, R150 += 1 };
  s3 -> s1 [84, 65535] { R3654 += 1, R3562 += 1, R150 += 1 };
  s4 -> s4 [0, 75] { R3654 += 1, R3562 += 1, R150 += 1 };
  s4 -> s6 [0, 65535] { R3654 += 1 };
  s4 -> s4 [0, 65535] { R3654 += 1, R3562 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [84, 65535] { R3654 += 1, R3562 += 1, R150 += 1 };
  s5 -> s6 [0, 65535] { R3654 += 1 };
  s5 -> s5 [0, 65535] { R3654 += 1, R3562 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R3654 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R3656 += 1, R3563 += 1, R3564 += 1 };
  s0 -> s0 [0, 65535] { R3655 += 1, R3656 += 1 };
  s0 -> s2 [0, 65535] { R3656 += 1, R3564 += 1 };
  s0 -> s3 [0, 65535] { R3656 += 1, R3564 += 1, R154 += 1 };
  s1 -> s1 [0, 65535] { R3656 += 1, R3563 += 1, R3564 += 1 };
  s1 -> s2 [0, 65535] { R3656 += 1, R3564 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R3656 += 1, R3564 += 1, R154 += 1 };
  s2 -> s4 [0, 65535] { R3656 += 1 };
  s2 -> s2 [0, 65535] { R3656 += 1, R3564 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R3656 += 1 };
  s3 -> s2 [0, 65535] { R3656 += 1, R3564 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3656 += 1, R3564 += 1, R154 += 1 };
  s4 -> s4 [0, 65535] { R3656 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R3658 += 1, R3566 += 1, R159 += 1, R160 += 1 };
  s0 -> s0 [0, 65535] { R3657 += 1, R3658 += 1 };
  s0 -> s2 [0, 65535] { R3658 += 1, R3566 += 1, R158 += 1, R159 += 1 };
  s0 -> s3 [0, 65535] { R3658 += 1, R3565 += 1, R3566 += 1 };
  s1 -> s1 [0, 65535] { R3658 += 1, R3566 += 1, R159 += 1, R160 += 1 };
  s1 -> s5 [0, 65535] { R3658 += 1 };
  s1 -> s6 [0, 65535] { R3658 += 1, R3566 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R3658 += 1, R3566 += 1, R159 += 1, R160 += 1 };
  s2 -> s5 [0, 65535] { R3658 += 1 };
  s2 -> s2 [0, 65535] { R3658 += 1, R3566 += 1, R158 += 1, R159 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R3658 += 1, R3566 += 1, R159 += 1, R160 += 1 };
  s3 -> s2 [0, 65535] { R3658 += 1, R3566 += 1, R158 += 1, R159 += 1 };
  s3 -> s3 [0, 65535] { R3658 += 1, R3565 += 1, R3566 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3658 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R3658 += 1 };
  s6 -> s6 [0, 65535] { R3658 += 1, R3566 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R3660 += 1, R3568 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R3660 += 1, R3567 += 1, R3568 += 1 };
  s0 -> s0 [0, 65535] { R3659 += 1, R3660 += 1 };
  s0 -> s3 [0, 65535] { R3660 += 1, R3568 += 1, R165 += 1, R166 += 1 };
  s0 -> s4 [0, 65535] { R3660 += 1, R3568 += 1, R164 += 1, R165 += 1 };
  s0 -> s1 [76, 65535] { R3660 += 1, R3568 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R3660 += 1, R3568 += 1, R165 += 1 };
  s1 -> s5 [0, 65535] { R3660 += 1 };
  s1 -> s1 [0, 65535] { R3660 += 1, R3568 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [76, 65535] { R3660 += 1, R3568 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R3660 += 1, R3568 += 1, R165 += 1 };
  s2 -> s2 [0, 65535] { R3660 += 1, R3567 += 1, R3568 += 1 };
  s2 -> s3 [0, 65535] { R3660 += 1, R3568 += 1, R165 += 1, R166 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [0, 65535] { R3660 += 1, R3568 += 1, R164 += 1, R165 += 1 };
  s2 -> s1 [76, 65535] { R3660 += 1, R3568 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R3660 += 1, R3568 += 1, R165 += 1 };
  s3 -> s5 [0, 65535] { R3660 += 1 };
  s3 -> s3 [0, 65535] { R3660 += 1, R3568 += 1, R165 += 1, R166 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R3660 += 1, R3568 += 1 };
  s3 -> s1 [76, 65535] { R3660 += 1, R3568 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R3660 += 1, R3568 += 1, R165 += 1 };
  s4 -> s5 [0, 65535] { R3660 += 1 };
  s4 -> s3 [0, 65535] { R3660 += 1, R3568 += 1, R165 += 1, R166 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3660 += 1, R3568 += 1, R164 += 1, R165 += 1 };
  s4 -> s1 [76, 65535] { R3660 += 1, R3568 += 1, R165 += 1 };
  s5 -> s5 [0, 65535] { R3660 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R3660 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3660 += 1, R3568 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R3662 += 1, R3570 += 1, R172 += 1, R174 += 1 };
  s0 -> s0 [0, 65535] { R3661 += 1, R3662 += 1 };
  s0 -> s2 [0, 65535] { R3662 += 1, R3570 += 1, R171 += 1, R172 += 1 };
  s0 -> s3 [0, 65535] { R3662 += 1, R3569 += 1, R3570 += 1 };
  s0 -> s4 [0, 65535] { R3662 += 1, R3570 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s1 [76, 65535] { R3662 += 1, R3570 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R3662 += 1, R3570 += 1, R172 += 1, R174 += 1 };
  s1 -> s5 [0, 65535] { R3662 += 1, R3570 += 1 };
  s1 -> s6 [0, 65535] { R3662 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R3662 += 1, R3570 += 1, R172 += 1 };
  s1 -> s1 [76, 65535] { R3662 += 1, R3570 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R3662 += 1, R3570 += 1, R172 += 1, R174 += 1 };
  s2 -> s2 [0, 65535] { R3662 += 1, R3570 += 1, R171 += 1, R172 += 1 };
  s2 -> s6 [0, 65535] { R3662 += 1 };
  s2 -> s4 [0, 65535] { R3662 += 1, R3570 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s1 [76, 65535] { R3662 += 1, R3570 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R3662 += 1, R3570 += 1, R172 += 1, R174 += 1 };
  s3 -> s2 [0, 65535] { R3662 += 1, R3570 += 1, R171 += 1, R172 += 1 };
  s3 -> s3 [0, 65535] { R3662 += 1, R3569 += 1, R3570 += 1 };
  s3 -> s4 [0, 65535] { R3662 += 1, R3570 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s1 [76, 65535] { R3662 += 1, R3570 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R3662 += 1, R3570 += 1, R172 += 1, R174 += 1 };
  s4 -> s5 [0, 65535] { R3662 += 1, R3570 += 1 };
  s4 -> s6 [0, 65535] { R3662 += 1 };
  s4 -> s4 [0, 65535] { R3662 += 1, R3570 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s1 [76, 65535] { R3662 += 1, R3570 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535] { R3662 += 1, R3570 += 1 };
  s5 -> s6 [0, 65535] { R3662 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R3662 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R3664 += 1, R3572 += 1, R181 += 1 };
  s0 -> s2 [0, 65535] { R3664 += 1, R3572 += 1 };
  s0 -> s3 [0, 65535] { R3664 += 1, R3571 += 1, R3572 += 1 };
  s0 -> s0 [0, 65535] { R3663 += 1, R3664 += 1 };
  s1 -> s5 [0, 65535] { R3664 += 1 };
  s1 -> s1 [0, 65535] { R3664 += 1, R3572 += 1, R181 += 1 };
  s1 -> s2 [0, 65535] { R3664 += 1, R3572 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R3664 += 1 };
  s2 -> s2 [0, 65535] { R3664 += 1, R3572 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R3664 += 1, R3572 += 1, R181 += 1 };
  s3 -> s2 [0, 65535] { R3664 += 1, R3572 += 1 };
  s3 -> s3 [0, 65535] { R3664 += 1, R3571 += 1, R3572 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3664 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R3666 += 1, R3574 += 1, R190 += 1, R192 += 1 };
  s0 -> s2 [0, 65535] { R3666 += 1, R3574 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s0 -> s3 [0, 65535] { R3666 += 1, R3573 += 1, R3574 += 1 };
  s0 -> s4 [0, 65535] { R3666 += 1, R3574 += 1, R189 += 1, R190 += 1 };
  s0 -> s0 [0, 65535] { R3665 += 1, R3666 += 1 };
  s0 -> s1 [83, 65535] { R3666 += 1, R3574 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 75] { R3666 += 1, R3574 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 65535] { R3666 += 1, R3574 += 1, R190 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R3666 += 1 };
  s1 -> s7 [0, 65535] { R3666 += 1, R3574 += 1 };
  s1 -> s1 [83, 65535] { R3666 += 1, R3574 += 1, R190 += 1, R192 += 1 };
  s2 -> s1 [0, 75] { R3666 += 1, R3574 += 1, R190 += 1, R192 += 1 };
  s2 -> s2 [0, 65535] { R3666 += 1, R3574 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R3666 += 1 };
  s2 -> s7 [0, 65535] { R3666 += 1, R3574 += 1 };
  s2 -> s1 [83, 65535] { R3666 += 1, R3574 += 1, R190 += 1, R192 += 1 };
  s3 -> s1 [0, 75] { R3666 += 1, R3574 += 1, R190 += 1, R192 += 1 };
  s3 -> s2 [0, 65535] { R3666 += 1, R3574 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s3 -> s3 [0, 65535] { R3666 += 1, R3573 += 1, R3574 += 1 };
  s3 -> s4 [0, 65535] { R3666 += 1, R3574 += 1, R189 += 1, R190 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [83, 65535] { R3666 += 1, R3574 += 1, R190 += 1, R192 += 1 };
  s4 -> s1 [0, 75] { R3666 += 1, R3574 += 1, R190 += 1, R192 += 1 };
  s4 -> s2 [0, 65535] { R3666 += 1, R3574 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s4 -> s4 [0, 65535] { R3666 += 1, R3574 += 1, R189 += 1, R190 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3666 += 1 };
  s4 -> s1 [83, 65535] { R3666 += 1, R3574 += 1, R190 += 1, R192 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3666 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R3666 += 1 };
  s7 -> s7 [0, 65535] { R3666 += 1, R3574 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R3668 += 1, R3576 += 1 };
  s0 -> s2 [0, 65535] { R3668 += 1, R3575 += 1, R3576 += 1 };
  s0 -> s0 [0, 65535] { R3667 += 1, R3668 += 1 };
  s0 -> s3 [0, 65535] { R3668 += 1, R3576 += 1, R2747 += 1 };
  s1 -> s4 [0, 65535] { R3668 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3668 += 1, R3576 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R3668 += 1, R3576 += 1 };
  s2 -> s2 [0, 65535] { R3668 += 1, R3575 += 1, R3576 += 1 };
  s2 -> s3 [0, 65535] { R3668 += 1, R3576 += 1, R2747 += 1 };
  s3 -> s4 [0, 65535] { R3668 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R3668 += 1, R3576 += 1 };
  s3 -> s3 [0, 65535] { R3668 += 1, R3576 += 1, R2747 += 1 };
  s4 -> s4 [0, 65535] { R3668 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 74] { R3670 += 1, R3578 += 1, R3546 += 1, R3548 += 1 };
  s0 -> s2 [0, 65535] { R3670 += 1, R3577 += 1, R3578 += 1 };
  s0 -> s0 [0, 65535] { R3669 += 1, R3670 += 1 };
  s0 -> s3 [75, 75] { R3670 += 1, R3578 += 1, R3546 += 1, R3548 += 1 };
  s0 -> s4 [83, 83] { R3670 += 1, R3578 += 1, R3546 += 1, R3548 += 1 };
  s0 -> s1 [84, 65535] { R3670 += 1, R3578 += 1, R3546 += 1, R3548 += 1 };
  s1 -> s1 [0, 74] { R3670 += 1, R3578 += 1, R3546 += 1, R3548 += 1 };
  s1 -> s3 [75, 75] { R3670 += 1, R3578 += 1, R3546 += 1, R3548 += 1 };
  s1 -> s4 [83, 83] { R3670 += 1, R3578 += 1, R3546 += 1, R3548 += 1 };
  s1 -> s1 [84, 65535] { R3670 += 1, R3578 += 1, R3546 += 1, R3548 += 1 };
  s2 -> s1 [0, 74] { R3670 += 1, R3578 += 1, R3546 += 1, R3548 += 1 };
  s2 -> s2 [0, 65535] { R3670 += 1, R3577 += 1, R3578 += 1 };
  s2 -> s3 [75, 75] { R3670 += 1, R3578 += 1, R3546 += 1, R3548 += 1 };
  s2 -> s4 [83, 83] { R3670 += 1, R3578 += 1, R3546 += 1, R3548 += 1 };
  s2 -> s1 [84, 65535] { R3670 += 1, R3578 += 1, R3546 += 1, R3548 += 1 };
  s3 -> s3 [0, 75] { R3670 += 1, R3578 += 1, R3546 += 1, R3548 += 1 };
  s3 -> s8 [83, 83] { R3670 += 1, R3578 += 1, R3546 += 1, R3548 += 1 };
  s3 -> s3 [84, 65535] { R3670 += 1, R3578 += 1, R3546 += 1, R3548 += 1 };
  s4 -> s4 [0, 74] { R3670 += 1, R3578 += 1, R3546 += 1, R3548 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3670 += 1 };
  s4 -> s7 [0, 65535] { R3670 += 1, R3578 += 1 };
  s4 -> s4 [0, 65535] { R3670 += 1, R3578 += 1, R3546 += 1 };
  s4 -> s8 [75, 75] { R3670 += 1, R3578 += 1, R3546 += 1, R3548 += 1 };
  s4 -> s9 [75, 75] { R3670 += 1, R3578 += 1, R3546 += 1, R3548 += 1 };
  s4 -> s4 [83, 65535] { R3670 += 1, R3578 += 1, R3546 += 1, R3548 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3670 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R3670 += 1 };
  s7 -> s7 [0, 65535] { R3670 += 1, R3578 += 1 };
  s8 -> s8 [0, 75] { R3670 += 1, R3578 += 1, R3546 += 1, R3548 += 1 };
  s8 -> s8 [0, 65535] { R3670 += 1, R3578 += 1, R3546 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R3670 += 1 };
  s8 -> s7 [0, 65535] { R3670 += 1, R3578 += 1 };
  s8 -> s8 [83, 65535] { R3670 += 1, R3578 += 1, R3546 += 1, R3548 += 1 };
  s9 -> s5 [0, 65535];
  s9 -> s9 [0, 65535] { R3670 += 1, R3578 += 1, R3546 += 1 };
  s9 -> s6 [0, 65535] { R3670 += 1 };
  s9 -> s7 [0, 65535] { R3670 += 1, R3578 += 1 };
  accepting s4, s8, s5, s9, s6, s7;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65535] { R3672 += 1, R3607 += 1, R3608 += 1 };
  s0 -> s0 [0, 65535] { R3671 += 1, R3672 += 1 };
  s0 -> s2 [0, 65535] { R3672 += 1, R3608 += 1, R23 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3672 += 1, R3607 += 1, R3608 += 1 };
  s1 -> s2 [0, 65535] { R3672 += 1, R3608 += 1, R23 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R3672 += 1, R3608 += 1, R23 += 1 };
  s2 -> s4 [0, 65535] { R3672 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3672 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R3674 += 1, R3610 += 1 };
  s0 -> s2 [0, 65535] { R3674 += 1, R3609 += 1, R3610 += 1 };
  s0 -> s0 [0, 65535] { R3673 += 1, R3674 += 1 };
  s0 -> s3 [70, 70] { R3674 += 1, R3610 += 1 };
  s0 -> s4 [70, 70] { R3674 += 1, R3610 += 1 };
  s0 -> s5 [75, 75] { R3674 += 1, R3610 += 1 };
  s0 -> s1 [76, 65535] { R3674 += 1, R3610 += 1 };
  s1 -> s1 [0, 69] { R3674 += 1, R3610 += 1 };
  s1 -> s3 [70, 70] { R3674 += 1, R3610 += 1 };
  s1 -> s4 [70, 70] { R3674 += 1, R3610 += 1 };
  s1 -> s5 [75, 75] { R3674 += 1, R3610 += 1 };
  s1 -> s1 [76, 65535] { R3674 += 1, R3610 += 1 };
  s2 -> s1 [0, 69] { R3674 += 1, R3610 += 1 };
  s2 -> s2 [0, 65535] { R3674 += 1, R3609 += 1, R3610 += 1 };
  s2 -> s3 [70, 70] { R3674 += 1, R3610 += 1 };
  s2 -> s4 [70, 70] { R3674 += 1, R3610 += 1 };
  s2 -> s5 [75, 75] { R3674 += 1, R3610 += 1 };
  s2 -> s1 [76, 65535] { R3674 += 1, R3610 += 1 };
  s3 -> s3 [0, 70] { R3674 += 1, R3610 += 1 };
  s3 -> s8 [75, 75] { R3674 += 1, R3610 += 1 };
  s3 -> s3 [76, 65535] { R3674 += 1, R3610 += 1 };
  s5 -> s5 [0, 69] { R3674 += 1, R3610 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3674 += 1 };
  s5 -> s7 [70, 70] { R3674 += 1, R3610 += 1 };
  s5 -> s8 [70, 70] { R3674 += 1, R3610 += 1 };
  s5 -> s5 [75, 65535] { R3674 += 1, R3610 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3674 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 70] { R3674 += 1, R3610 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R3674 += 1 };
  s8 -> s8 [75, 65535] { R3674 += 1, R3610 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R3676 += 1, R3612 += 1, R137 += 1 };
  s0 -> s2 [0, 65535] { R3676 += 1, R3611 += 1, R3612 += 1 };
  s0 -> s0 [0, 65535] { R3675 += 1, R3676 += 1 };
  s0 -> s3 [70, 70] { R3676 += 1, R3612 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R3676 += 1, R3612 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R3676 += 1, R3612 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R3676 += 1, R3612 += 1, R137 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R3676 += 1 };
  s1 -> s3 [70, 70] { R3676 += 1, R3612 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R3676 += 1, R3612 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R3676 += 1, R3612 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R3676 += 1, R3612 += 1, R137 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R3676 += 1, R3611 += 1, R3612 += 1 };
  s2 -> s3 [70, 70] { R3676 += 1, R3612 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R3676 += 1, R3612 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R3676 += 1, R3612 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R3676 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3676 += 1 };
  s4 -> s4 [0, 65535] { R3676 += 1, R3612 += 1, R137 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3676 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R3678 += 1, R3614 += 1, R139 += 1 };
  s0 -> s2 [0, 65535] { R3678 += 1, R3613 += 1, R3614 += 1 };
  s0 -> s0 [0, 65535] { R3677 += 1, R3678 += 1 };
  s0 -> s3 [70, 70] { R3678 += 1, R3614 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R3678 += 1, R3614 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R3678 += 1, R3614 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R3678 += 1, R3614 += 1, R139 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3678 += 1 };
  s1 -> s3 [70, 70] { R3678 += 1, R3614 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R3678 += 1, R3614 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R3678 += 1, R3614 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R3678 += 1, R3614 += 1, R139 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3678 += 1, R3613 += 1, R3614 += 1 };
  s2 -> s3 [70, 70] { R3678 += 1, R3614 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R3678 += 1, R3614 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R3678 += 1, R3614 += 1, R139 += 1 };
  s3 -> s3 [0, 65535] { R3678 += 1, R3614 += 1, R139 += 1 };
  s3 -> s6 [0, 65535] { R3678 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3678 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3678 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R3680 += 1, R3616 += 1, R141 += 1, R142 += 1 };
  s0 -> s0 [0, 65535] { R3679 += 1, R3680 += 1 };
  s0 -> s2 [0, 65535] { R3680 += 1, R3615 += 1, R3616 += 1 };
  s0 -> s3 [70, 70] { R3680 += 1, R3616 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R3680 += 1, R3616 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R3680 += 1, R3616 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R3680 += 1, R3616 += 1, R141 += 1, R142 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3680 += 1 };
  s1 -> s3 [70, 70] { R3680 += 1, R3616 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R3680 += 1, R3616 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R3680 += 1, R3616 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R3680 += 1, R3616 += 1, R141 += 1, R142 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3680 += 1, R3615 += 1, R3616 += 1 };
  s2 -> s3 [70, 70] { R3680 += 1, R3616 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R3680 += 1, R3616 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R3680 += 1, R3616 += 1, R141 += 1, R142 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3680 += 1 };
  s3 -> s3 [0, 65535] { R3680 += 1, R3616 += 1, R141 += 1, R142 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3680 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3680 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R3682 += 1, R3618 += 1, R147 += 1, R148 += 1 };
  s0 -> s0 [0, 65535] { R3681 += 1, R3682 += 1 };
  s0 -> s2 [0, 65535] { R3682 += 1, R3617 += 1, R3618 += 1 };
  s0 -> s3 [70, 70] { R3682 += 1, R3618 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R3682 += 1, R3618 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R3682 += 1, R3618 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R3682 += 1, R3618 += 1, R147 += 1, R148 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3682 += 1 };
  s1 -> s3 [70, 70] { R3682 += 1, R3618 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R3682 += 1, R3618 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R3682 += 1, R3618 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R3682 += 1, R3618 += 1, R147 += 1, R148 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3682 += 1, R3617 += 1, R3618 += 1 };
  s2 -> s3 [70, 70] { R3682 += 1, R3618 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R3682 += 1, R3618 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R3682 += 1, R3618 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R3682 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3682 += 1 };
  s4 -> s4 [0, 65535] { R3682 += 1, R3618 += 1, R147 += 1, R148 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3682 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R3684 += 1, R3620 += 1, R151 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R3684 += 1, R3620 += 1, R152 += 1 };
  s0 -> s3 [0, 65535] { R3684 += 1, R3619 += 1, R3620 += 1 };
  s0 -> s0 [0, 65535] { R3683 += 1, R3684 += 1 };
  s0 -> s4 [70, 70] { R3684 += 1, R3620 += 1, R151 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R3684 += 1, R3620 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R3684 += 1, R3620 += 1, R151 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R3684 += 1, R3620 += 1, R152 += 1 };
  s0 -> s2 [71, 74] { R3684 += 1, R3620 += 1, R152 += 1 };
  s0 -> s1 [71, 65535] { R3684 += 1, R3620 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R3684 += 1, R3620 += 1, R152 += 1 };
  s0 -> s2 [76, 65535] { R3684 += 1, R3620 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R3684 += 1, R3620 += 1, R151 += 1, R152 += 1 };
  s1 -> s2 [0, 69] { R3684 += 1, R3620 += 1, R152 += 1 };
  s1 -> s4 [70, 70] { R3684 += 1, R3620 += 1, R151 += 1, R152 += 1 };
  s1 -> s5 [70, 70] { R3684 += 1, R3620 += 1, R152 += 1 };
  s1 -> s6 [70, 70] { R3684 += 1, R3620 += 1, R151 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R3684 += 1, R3620 += 1, R152 += 1 };
  s1 -> s2 [71, 74] { R3684 += 1, R3620 += 1, R152 += 1 };
  s1 -> s1 [71, 65535] { R3684 += 1, R3620 += 1, R151 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R3684 += 1, R3620 += 1, R152 += 1 };
  s1 -> s2 [76, 65535] { R3684 += 1, R3620 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R3684 += 1, R3620 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R3684 += 1, R3620 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R3684 += 1, R3620 += 1, R152 += 1 };
  s2 -> s2 [71, 74] { R3684 += 1, R3620 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R3684 += 1, R3620 += 1, R152 += 1 };
  s2 -> s2 [76, 65535] { R3684 += 1, R3620 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R3684 += 1, R3620 += 1, R151 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R3684 += 1, R3620 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R3684 += 1, R3619 += 1, R3620 += 1 };
  s3 -> s4 [70, 70] { R3684 += 1, R3620 += 1, R151 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R3684 += 1, R3620 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R3684 += 1, R3620 += 1, R151 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R3684 += 1, R3620 += 1, R152 += 1 };
  s3 -> s2 [71, 74] { R3684 += 1, R3620 += 1, R152 += 1 };
  s3 -> s1 [71, 65535] { R3684 += 1, R3620 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R3684 += 1, R3620 += 1, R152 += 1 };
  s3 -> s2 [76, 65535] { R3684 += 1, R3620 += 1, R152 += 1 };
  s4 -> s5 [0, 74] { R3684 += 1, R3620 += 1, R152 += 1 };
  s4 -> s4 [0, 65535] { R3684 += 1, R3620 += 1, R151 += 1, R152 += 1 };
  s4 -> s11 [75, 75] { R3684 += 1, R3620 += 1, R152 += 1 };
  s4 -> s5 [76, 65535] { R3684 += 1, R3620 += 1, R152 += 1 };
  s5 -> s5 [0, 74] { R3684 += 1, R3620 += 1, R152 += 1 };
  s5 -> s11 [75, 75] { R3684 += 1, R3620 += 1, R152 += 1 };
  s5 -> s5 [76, 65535] { R3684 += 1, R3620 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R3684 += 1, R3620 += 1, R152 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R3684 += 1 };
  s8 -> s10 [70, 70] { R3684 += 1, R3620 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R3684 += 1, R3620 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R3684 += 1, R3620 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R3684 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R3684 += 1 };
  s11 -> s11 [0, 65535] { R3684 += 1, R3620 += 1, R152 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R3684 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R3686 += 1, R3622 += 1, R155 += 1, R156 += 1 };
  s0 -> s2 [0, 65535] { R3686 += 1, R3621 += 1, R3622 += 1 };
  s0 -> s0 [0, 65535] { R3685 += 1, R3686 += 1 };
  s0 -> s3 [70, 70] { R3686 += 1, R3622 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R3686 += 1, R3622 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R3686 += 1, R3622 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R3686 += 1, R3622 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 65535] { R3686 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R3686 += 1, R3622 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R3686 += 1, R3622 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R3686 += 1, R3622 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R3686 += 1, R3622 += 1, R155 += 1, R156 += 1 };
  s2 -> s2 [0, 65535] { R3686 += 1, R3621 += 1, R3622 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R3686 += 1, R3622 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R3686 += 1, R3622 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R3686 += 1, R3622 += 1, R155 += 1, R156 += 1 };
  s3 -> s3 [0, 65535] { R3686 += 1, R3622 += 1, R155 += 1, R156 += 1 };
  s3 -> s6 [0, 65535] { R3686 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3686 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3686 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R3688 += 1, R3624 += 1, R161 += 1, R162 += 1 };
  s0 -> s0 [0, 65535] { R3687 += 1, R3688 += 1 };
  s0 -> s2 [0, 65535] { R3688 += 1, R3623 += 1, R3624 += 1 };
  s0 -> s3 [70, 70] { R3688 += 1, R3624 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R3688 += 1, R3624 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R3688 += 1, R3624 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R3688 += 1, R3624 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535] { R3688 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R3688 += 1, R3624 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R3688 += 1, R3624 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R3688 += 1, R3624 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R3688 += 1, R3624 += 1, R161 += 1, R162 += 1 };
  s2 -> s2 [0, 65535] { R3688 += 1, R3623 += 1, R3624 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R3688 += 1, R3624 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R3688 += 1, R3624 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R3688 += 1, R3624 += 1, R161 += 1, R162 += 1 };
  s3 -> s3 [0, 65535] { R3688 += 1, R3624 += 1, R161 += 1, R162 += 1 };
  s3 -> s6 [0, 65535] { R3688 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3688 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3688 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R3690 += 1, R3626 += 1, R167 += 1, R168 += 1 };
  s0 -> s2 [0, 65535] { R3690 += 1, R3625 += 1, R3626 += 1 };
  s0 -> s0 [0, 65535] { R3689 += 1, R3690 += 1 };
  s0 -> s3 [70, 70] { R3690 += 1, R3626 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R3690 += 1, R3626 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R3690 += 1, R3626 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R3690 += 1, R3626 += 1, R167 += 1, R168 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3690 += 1 };
  s1 -> s3 [70, 70] { R3690 += 1, R3626 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R3690 += 1, R3626 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R3690 += 1, R3626 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R3690 += 1, R3626 += 1, R167 += 1, R168 += 1 };
  s2 -> s2 [0, 65535] { R3690 += 1, R3625 += 1, R3626 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R3690 += 1, R3626 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R3690 += 1, R3626 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R3690 += 1, R3626 += 1, R167 += 1, R168 += 1 };
  s3 -> s3 [0, 65535] { R3690 += 1, R3626 += 1, R167 += 1, R168 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3690 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3690 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3690 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R3692 += 1, R3628 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s2 [0, 69] { R3692 += 1, R3628 += 1, R175 += 1, R176 += 1 };
  s0 -> s3 [0, 69] { R3692 += 1, R3628 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s4 [0, 65535] { R3692 += 1, R3627 += 1, R3628 += 1 };
  s0 -> s0 [0, 65535] { R3691 += 1, R3692 += 1 };
  s0 -> s5 [70, 70] { R3692 += 1, R3628 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s6 [70, 70] { R3692 += 1, R3628 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s7 [70, 70] { R3692 += 1, R3628 += 1, R175 += 1, R176 += 1 };
  s0 -> s8 [70, 70] { R3692 += 1, R3628 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s9 [70, 70] { R3692 += 1, R3628 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s10 [70, 70] { R3692 += 1, R3628 += 1, R175 += 1, R176 += 1 };
  s0 -> s1 [71, 65535] { R3692 += 1, R3628 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s2 [71, 65535] { R3692 += 1, R3628 += 1, R175 += 1, R176 += 1 };
  s0 -> s3 [71, 65535] { R3692 += 1, R3628 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s1 [0, 69] { R3692 += 1, R3628 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s3 [0, 69] { R3692 += 1, R3628 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s5 [70, 70] { R3692 += 1, R3628 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s6 [70, 70] { R3692 += 1, R3628 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s8 [70, 70] { R3692 += 1, R3628 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s9 [70, 70] { R3692 += 1, R3628 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s1 [71, 65535] { R3692 += 1, R3628 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s3 [71, 65535] { R3692 += 1, R3628 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s1 [0, 69] { R3692 += 1, R3628 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s2 [0, 69] { R3692 += 1, R3628 += 1, R175 += 1, R176 += 1 };
  s2 -> s3 [0, 69] { R3692 += 1, R3628 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s5 [70, 70] { R3692 += 1, R3628 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s6 [70, 70] { R3692 += 1, R3628 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s7 [70, 70] { R3692 += 1, R3628 += 1, R175 += 1, R176 += 1 };
  s2 -> s8 [70, 70] { R3692 += 1, R3628 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s9 [70, 70] { R3692 += 1, R3628 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s10 [70, 70] { R3692 += 1, R3628 += 1, R175 += 1, R176 += 1 };
  s2 -> s1 [71, 65535] { R3692 += 1, R3628 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s2 [71, 65535] { R3692 += 1, R3628 += 1, R175 += 1, R176 += 1 };
  s2 -> s3 [71, 65535] { R3692 += 1, R3628 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s14 [0, 69] { R3692 += 1, R3628 += 1, R176 += 1 };
  s3 -> s3 [0, 69] { R3692 += 1, R3628 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s5 [70, 70] { R3692 += 1, R3628 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s11 [70, 70] { R3692 += 1, R3628 += 1, R176 += 1 };
  s3 -> s8 [70, 70] { R3692 += 1, R3628 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s15 [70, 70] { R3692 += 1, R3628 += 1, R176 += 1 };
  s3 -> s14 [71, 65535] { R3692 += 1, R3628 += 1, R176 += 1 };
  s3 -> s3 [71, 65535] { R3692 += 1, R3628 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s1 [0, 69] { R3692 += 1, R3628 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s2 [0, 69] { R3692 += 1, R3628 += 1, R175 += 1, R176 += 1 };
  s4 -> s3 [0, 69] { R3692 += 1, R3628 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s4 [0, 65535] { R3692 += 1, R3627 += 1, R3628 += 1 };
  s4 -> s5 [70, 70] { R3692 += 1, R3628 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s6 [70, 70] { R3692 += 1, R3628 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s7 [70, 70] { R3692 += 1, R3628 += 1, R175 += 1, R176 += 1 };
  s4 -> s8 [70, 70] { R3692 += 1, R3628 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s9 [70, 70] { R3692 += 1, R3628 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s10 [70, 70] { R3692 += 1, R3628 += 1, R175 += 1, R176 += 1 };
  s4 -> s1 [71, 65535] { R3692 += 1, R3628 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s2 [71, 65535] { R3692 += 1, R3628 += 1, R175 += 1, R176 += 1 };
  s4 -> s3 [71, 65535] { R3692 += 1, R3628 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s6 -> s6 [0, 65535] { R3692 += 1, R3628 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s6 -> s8 [0, 65535] { R3692 += 1, R3628 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s7 -> s6 [0, 65535] { R3692 += 1, R3628 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s7 -> s7 [0, 65535] { R3692 += 1, R3628 += 1, R175 += 1, R176 += 1 };
  s7 -> s8 [0, 65535] { R3692 += 1, R3628 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s8 -> s11 [0, 65535] { R3692 += 1, R3628 += 1, R176 += 1 };
  s8 -> s8 [0, 65535] { R3692 += 1, R3628 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s11 [0, 65535] { R3692 += 1, R3628 += 1, R176 += 1 };
  s11 -> s13 [0, 65535] { R3692 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R3692 += 1 };
  s14 -> s14 [0, 69] { R3692 += 1, R3628 += 1, R176 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R3692 += 1 };
  s14 -> s11 [70, 70] { R3692 += 1, R3628 += 1, R176 += 1 };
  s14 -> s15 [70, 70] { R3692 += 1, R3628 += 1, R176 += 1 };
  s14 -> s14 [71, 65535] { R3692 += 1, R3628 += 1, R176 += 1 };
  s15 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R3692 += 1 };
  accepting s12, s13, s14, s15, s11;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R3694 += 1, R3630 += 1, R185 += 1, R186 += 1 };
  s0 -> s2 [0, 65535] { R3694 += 1, R3629 += 1, R3630 += 1 };
  s0 -> s0 [0, 65535] { R3693 += 1, R3694 += 1 };
  s0 -> s3 [70, 70] { R3694 += 1, R3630 += 1, R185 += 1, R186 += 1 };
  s0 -> s4 [70, 70] { R3694 += 1, R3630 += 1, R185 += 1, R186 += 1 };
  s0 -> s1 [71, 65535] { R3694 += 1, R3630 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 69] { R3694 += 1, R3630 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 65535] { R3694 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R3694 += 1, R3630 += 1, R185 += 1, R186 += 1 };
  s1 -> s4 [70, 70] { R3694 += 1, R3630 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [71, 65535] { R3694 += 1, R3630 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [0, 69] { R3694 += 1, R3630 += 1, R185 += 1, R186 += 1 };
  s2 -> s2 [0, 65535] { R3694 += 1, R3629 += 1, R3630 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R3694 += 1, R3630 += 1, R185 += 1, R186 += 1 };
  s2 -> s4 [70, 70] { R3694 += 1, R3630 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [71, 65535] { R3694 += 1, R3630 += 1, R185 += 1, R186 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3694 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3694 += 1 };
  s4 -> s4 [0, 65535] { R3694 += 1, R3630 += 1, R185 += 1, R186 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3694 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R3696 += 1, R3632 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s0 -> s2 [0, 69] { R3696 += 1, R3632 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s0 -> s3 [0, 69] { R3696 += 1, R3632 += 1, R2741 += 1, R2742 += 1 };
  s0 -> s0 [0, 65535] { R3695 += 1, R3696 += 1 };
  s0 -> s4 [0, 65535] { R3696 += 1, R3631 += 1, R3632 += 1 };
  s0 -> s5 [70, 70] { R3696 += 1, R3632 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s0 -> s6 [70, 70] { R3696 += 1, R3632 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s0 -> s7 [70, 70] { R3696 += 1, R3632 += 1, R2741 += 1, R2742 += 1 };
  s0 -> s8 [70, 70] { R3696 += 1, R3632 += 1, R2741 += 1, R2742 += 1 };
  s0 -> s9 [70, 70] { R3696 += 1, R3632 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s0 -> s10 [70, 70] { R3696 += 1, R3632 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s0 -> s1 [71, 65535] { R3696 += 1, R3632 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s0 -> s2 [71, 65535] { R3696 += 1, R3632 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s0 -> s3 [71, 65535] { R3696 += 1, R3632 += 1, R2741 += 1, R2742 += 1 };
  s1 -> s1 [0, 69] { R3696 += 1, R3632 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s1 -> s14 [0, 69] { R3696 += 1, R3632 += 1, R2742 += 1 };
  s1 -> s11 [70, 70] { R3696 += 1, R3632 += 1, R2742 += 1 };
  s1 -> s6 [70, 70] { R3696 += 1, R3632 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s1 -> s10 [70, 70] { R3696 += 1, R3632 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s1 -> s15 [70, 70] { R3696 += 1, R3632 += 1, R2742 += 1 };
  s1 -> s1 [71, 65535] { R3696 += 1, R3632 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s1 -> s14 [71, 65535] { R3696 += 1, R3632 += 1, R2742 += 1 };
  s2 -> s1 [0, 69] { R3696 += 1, R3632 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s2 -> s2 [0, 69] { R3696 += 1, R3632 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s2 -> s5 [70, 70] { R3696 += 1, R3632 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s2 -> s6 [70, 70] { R3696 += 1, R3632 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s2 -> s9 [70, 70] { R3696 += 1, R3632 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s2 -> s10 [70, 70] { R3696 += 1, R3632 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s2 -> s1 [71, 65535] { R3696 += 1, R3632 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s2 -> s2 [71, 65535] { R3696 += 1, R3632 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s3 -> s1 [0, 69] { R3696 += 1, R3632 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s3 -> s2 [0, 69] { R3696 += 1, R3632 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s3 -> s3 [0, 69] { R3696 += 1, R3632 += 1, R2741 += 1, R2742 += 1 };
  s3 -> s5 [70, 70] { R3696 += 1, R3632 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s3 -> s6 [70, 70] { R3696 += 1, R3632 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s3 -> s7 [70, 70] { R3696 += 1, R3632 += 1, R2741 += 1, R2742 += 1 };
  s3 -> s8 [70, 70] { R3696 += 1, R3632 += 1, R2741 += 1, R2742 += 1 };
  s3 -> s9 [70, 70] { R3696 += 1, R3632 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s3 -> s10 [70, 70] { R3696 += 1, R3632 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s3 -> s1 [71, 65535] { R3696 += 1, R3632 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s3 -> s2 [71, 65535] { R3696 += 1, R3632 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s3 -> s3 [71, 65535] { R3696 += 1, R3632 += 1, R2741 += 1, R2742 += 1 };
  s4 -> s1 [0, 69] { R3696 += 1, R3632 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s4 -> s2 [0, 69] { R3696 += 1, R3632 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s4 -> s3 [0, 69] { R3696 += 1, R3632 += 1, R2741 += 1, R2742 += 1 };
  s4 -> s4 [0, 65535] { R3696 += 1, R3631 += 1, R3632 += 1 };
  s4 -> s5 [70, 70] { R3696 += 1, R3632 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s4 -> s6 [70, 70] { R3696 += 1, R3632 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s4 -> s7 [70, 70] { R3696 += 1, R3632 += 1, R2741 += 1, R2742 += 1 };
  s4 -> s8 [70, 70] { R3696 += 1, R3632 += 1, R2741 += 1, R2742 += 1 };
  s4 -> s9 [70, 70] { R3696 += 1, R3632 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s4 -> s10 [70, 70] { R3696 += 1, R3632 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s4 -> s1 [71, 65535] { R3696 += 1, R3632 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s4 -> s2 [71, 65535] { R3696 += 1, R3632 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s4 -> s3 [71, 65535] { R3696 += 1, R3632 += 1, R2741 += 1, R2742 += 1 };
  s7 -> s7 [0, 65535] { R3696 += 1, R3632 += 1, R2741 += 1, R2742 += 1 };
  s7 -> s9 [0, 65535] { R3696 += 1, R3632 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s7 -> s10 [0, 65535] { R3696 += 1, R3632 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s9 -> s9 [0, 65535] { R3696 += 1, R3632 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s9 -> s10 [0, 65535] { R3696 += 1, R3632 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s10 -> s11 [0, 65535] { R3696 += 1, R3632 += 1, R2742 += 1 };
  s10 -> s10 [0, 65535] { R3696 += 1, R3632 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s11 -> s11 [0, 65535] { R3696 += 1, R3632 += 1, R2742 += 1 };
  s11 -> s12 [0, 65535] { R3696 += 1 };
  s11 -> s13 [0, 65535];
  s12 -> s12 [0, 65535] { R3696 += 1 };
  s12 -> s13 [0, 65535];
  s13 -> s13 [0, 65535];
  s14 -> s14 [0, 69] { R3696 += 1, R3632 += 1, R2742 += 1 };
  s14 -> s13 [0, 65535];
  s14 -> s14 [0, 65535] { R3696 += 1 };
  s14 -> s11 [70, 70] { R3696 += 1, R3632 += 1, R2742 += 1 };
  s14 -> s15 [70, 70] { R3696 += 1, R3632 += 1, R2742 += 1 };
  s14 -> s14 [71, 65535] { R3696 += 1, R3632 += 1, R2742 += 1 };
  s15 -> s13 [0, 65535];
  s15 -> s15 [0, 65535] { R3696 += 1 };
  accepting s12, s13, s14, s15, s11;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R3698 += 1, R3634 += 1, R3542 += 1, R3543 += 1, R3544 += 1 };
  s0 -> s2 [0, 69] { R3698 += 1, R3634 += 1, R3542 += 1, R3544 += 1 };
  s0 -> s3 [0, 69] { R3698 += 1, R3634 += 1, R3541 += 1, R3542 += 1 };
  s0 -> s4 [0, 65535] { R3698 += 1, R3633 += 1, R3634 += 1 };
  s0 -> s0 [0, 65535] { R3697 += 1, R3698 += 1 };
  s0 -> s5 [70, 70] { R3698 += 1, R3634 += 1, R3541 += 1, R3542 += 1 };
  s0 -> s6 [70, 70] { R3698 += 1, R3634 += 1, R3542 += 1, R3543 += 1, R3544 += 1 };
  s0 -> s7 [70, 70] { R3698 += 1, R3634 += 1, R3542 += 1, R3544 += 1 };
  s0 -> s8 [70, 70] { R3698 += 1, R3634 += 1, R3542 += 1, R3544 += 1 };
  s0 -> s9 [70, 70] { R3698 += 1, R3634 += 1, R3542 += 1, R3543 += 1, R3544 += 1 };
  s0 -> s10 [70, 70] { R3698 += 1, R3634 += 1, R3541 += 1, R3542 += 1 };
  s0 -> s2 [71, 74] { R3698 += 1, R3634 += 1, R3542 += 1, R3544 += 1 };
  s0 -> s1 [71, 65535] { R3698 += 1, R3634 += 1, R3542 += 1, R3543 += 1, R3544 += 1 };
  s0 -> s3 [71, 65535] { R3698 += 1, R3634 += 1, R3541 += 1, R3542 += 1 };
  s0 -> s2 [84, 65535] { R3698 += 1, R3634 += 1, R3542 += 1, R3544 += 1 };
  s1 -> s1 [0, 69] { R3698 += 1, R3634 += 1, R3542 += 1, R3543 += 1, R3544 += 1 };
  s1 -> s2 [0, 69] { R3698 += 1, R3634 += 1, R3542 += 1, R3544 += 1 };
  s1 -> s6 [70, 70] { R3698 += 1, R3634 += 1, R3542 += 1, R3543 += 1, R3544 += 1 };
  s1 -> s7 [70, 70] { R3698 += 1, R3634 += 1, R3542 += 1, R3544 += 1 };
  s1 -> s8 [70, 70] { R3698 += 1, R3634 += 1, R3542 += 1, R3544 += 1 };
  s1 -> s9 [70, 70] { R3698 += 1, R3634 += 1, R3542 += 1, R3543 += 1, R3544 += 1 };
  s1 -> s2 [71, 74] { R3698 += 1, R3634 += 1, R3542 += 1, R3544 += 1 };
  s1 -> s1 [71, 65535] { R3698 += 1, R3634 += 1, R3542 += 1, R3543 += 1, R3544 += 1 };
  s1 -> s2 [84, 65535] { R3698 += 1, R3634 += 1, R3542 += 1, R3544 += 1 };
  s2 -> s2 [0, 69] { R3698 += 1, R3634 += 1, R3542 += 1, R3544 += 1 };
  s2 -> s11 [0, 65535];
  s2 -> s2 [0, 65535] { R3698 += 1 };
  s2 -> s7 [70, 70] { R3698 += 1, R3634 += 1, R3542 += 1, R3544 += 1 };
  s2 -> s8 [70, 70] { R3698 += 1, R3634 += 1, R3542 += 1, R3544 += 1 };
  s2 -> s2 [71, 74] { R3698 += 1, R3634 += 1, R3542 += 1, R3544 += 1 };
  s2 -> s2 [84, 65535] { R3698 += 1, R3634 += 1, R3542 += 1, R3544 += 1 };
  s3 -> s1 [0, 69] { R3698 += 1, R3634 += 1, R3542 += 1, R3543 += 1, R3544 += 1 };
  s3 -> s2 [0, 69] { R3698 += 1, R3634 += 1, R3542 += 1, R3544 += 1 };
  s3 -> s3 [0, 69] { R3698 += 1, R3634 += 1, R3541 += 1, R3542 += 1 };
  s3 -> s5 [70, 70] { R3698 += 1, R3634 += 1, R3541 += 1, R3542 += 1 };
  s3 -> s6 [70, 70] { R3698 += 1, R3634 += 1, R3542 += 1, R3543 += 1, R3544 += 1 };
  s3 -> s7 [70, 70] { R3698 += 1, R3634 += 1, R3542 += 1, R3544 += 1 };
  s3 -> s8 [70, 70] { R3698 += 1, R3634 += 1, R3542 += 1, R3544 += 1 };
  s3 -> s9 [70, 70] { R3698 += 1, R3634 += 1, R3542 += 1, R3543 += 1, R3544 += 1 };
  s3 -> s10 [70, 70] { R3698 += 1, R3634 += 1, R3541 += 1, R3542 += 1 };
  s3 -> s2 [71, 74] { R3698 += 1, R3634 += 1, R3542 += 1, R3544 += 1 };
  s3 -> s1 [71, 65535] { R3698 += 1, R3634 += 1, R3542 += 1, R3543 += 1, R3544 += 1 };
  s3 -> s3 [71, 65535] { R3698 += 1, R3634 += 1, R3541 += 1, R3542 += 1 };
  s3 -> s2 [84, 65535] { R3698 += 1, R3634 += 1, R3542 += 1, R3544 += 1 };
  s4 -> s1 [0, 69] { R3698 += 1, R3634 += 1, R3542 += 1, R3543 += 1, R3544 += 1 };
  s4 -> s2 [0, 69] { R3698 += 1, R3634 += 1, R3542 += 1, R3544 += 1 };
  s4 -> s3 [0, 69] { R3698 += 1, R3634 += 1, R3541 += 1, R3542 += 1 };
  s4 -> s4 [0, 65535] { R3698 += 1, R3633 += 1, R3634 += 1 };
  s4 -> s5 [70, 70] { R3698 += 1, R3634 += 1, R3541 += 1, R3542 += 1 };
  s4 -> s6 [70, 70] { R3698 += 1, R3634 += 1, R3542 += 1, R3543 += 1, R3544 += 1 };
  s4 -> s7 [70, 70] { R3698 += 1, R3634 += 1, R3542 += 1, R3544 += 1 };
  s4 -> s8 [70, 70] { R3698 += 1, R3634 += 1, R3542 += 1, R3544 += 1 };
  s4 -> s9 [70, 70] { R3698 += 1, R3634 += 1, R3542 += 1, R3543 += 1, R3544 += 1 };
  s4 -> s10 [70, 70] { R3698 += 1, R3634 += 1, R3541 += 1, R3542 += 1 };
  s4 -> s2 [71, 74] { R3698 += 1, R3634 += 1, R3542 += 1, R3544 += 1 };
  s4 -> s1 [71, 65535] { R3698 += 1, R3634 += 1, R3542 += 1, R3543 += 1, R3544 += 1 };
  s4 -> s3 [71, 65535] { R3698 += 1, R3634 += 1, R3541 += 1, R3542 += 1 };
  s4 -> s2 [84, 65535] { R3698 += 1, R3634 += 1, R3542 += 1, R3544 += 1 };
  s7 -> s7 [0, 74] { R3698 += 1, R3634 += 1, R3542 += 1, R3544 += 1 };
  s7 -> s11 [0, 65535];
  s7 -> s7 [0, 65535] { R3698 += 1 };
  s7 -> s7 [84, 65535] { R3698 += 1, R3634 += 1, R3542 += 1, R3544 += 1 };
  s8 -> s11 [0, 65535];
  s8 -> s8 [0, 65535] { R3698 += 1 };
  s9 -> s7 [0, 74] { R3698 += 1, R3634 += 1, R3542 += 1, R3544 += 1 };
  s9 -> s9 [0, 65535] { R3698 += 1, R3634 += 1, R3542 += 1, R3543 += 1, R3544 += 1 };
  s9 -> s7 [84, 65535] { R3698 += 1, R3634 += 1, R3542 += 1, R3544 += 1 };
  s10 -> s7 [0, 74] { R3698 += 1, R3634 += 1, R3542 += 1, R3544 += 1 };
  s10 -> s9 [0, 65535] { R3698 += 1, R3634 += 1, R3542 += 1, R3543 += 1, R3544 += 1 };
  s10 -> s10 [0, 65535] { R3698 += 1, R3634 += 1, R3541 += 1, R3542 += 1 };
  s10 -> s7 [84, 65535] { R3698 += 1, R3634 += 1, R3542 += 1, R3544 += 1 };
  s11 -> s11 [0, 65535];
  accepting s2, s7, s8, s11;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
constraint R2 = R3578 && R3 = R3698 && R25 - R3698 = -1 && R26 = R3698 && R27 - R3698 = -1 && R28 = R3698 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R3546 + -1*R3542 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R3546 + -1*R3542 - R130 = 0 && R129 + R3545 + R3541 = 0 && R131 + R3547 + R3543 = 0 && R132 + R3548 + R3544 = 0 && R3577 = 0 && R3609 = 0 && R3610 = 0 && R3619 = 0 && R3620 = 0 && R3627 = 0 && R3628 = 0 && R3631 = 0 && R3632 = 0 && R3633 = 0 && R3634 = 0 && R3635 = 0 && R3636 = R3698 && R3637 = 0 && R3638 = R3698 && R3639 = 0 && R3640 = R3698 && R3641 = 0 && R3642 = R3698 && R3643 = 0 && R3644 = R3698 && R3645 = 0 && R3646 = R3698 && R3647 = 0 && R3648 = R3698 && R3649 = 0 && R3650 = R3698 && R3651 = 0 && R3652 = R3698 && R3653 = 0 && R3654 = R3698 && R3655 = 0 && R3656 = R3698 && R3657 = 0 && R3658 = R3698 && R3659 = 0 && R3660 = R3698 && R3661 = 0 && R3662 = R3698 && R3663 = 0 && R3664 = R3698 && R3665 = 0 && R3666 = R3698 && R3667 = 0 && R3668 = R3698 && R3669 = 0 && R3670 = R3698 && R3671 = 0 && R3672 = R3698 && R3673 = 0 && R3674 = R3698 && R3675 = 0 && R3676 = R3698 && R3677 = 0 && R3678 = R3698 && R3679 = 0 && R3680 = R3698 && R3681 = 0 && R3682 = R3698 && R3683 = 0 && R3684 = R3698 && R3685 = 0 && R3686 = R3698 && R3687 = 0 && R3688 = R3698 && R3689 = 0 && R3690 = R3698 && R3691 = 0 && R3692 = R3698 && R3693 = 0 && R3694 = R3698 && R3695 = 0 && R3696 = R3698 && R3697 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R3546 + -1*R3542 - R130 < 1 && -1 < R3578 && 0 < R3698 && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R3546 + -1*R3542 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R191 + R187 = 0 && R114 + R192 + R188 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R3546 + -1*R3542 - R130 = 0 || R130 + R3546 + R3542 < 1) && (R81 + R158 + R155 = 0 || R130 + R3546 + R3542 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R3546 + -1*R3542 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R3546 + R3542 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R3546 + -1*R3542 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R3546 + R3542 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R3546 + -1*R3542 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R3546 + R3542 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 != 0 || R112 + R190 + R186 + -1*R3546 + -1*R3542 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R3546 + R3542 = 0)) && (R113 + R191 + R187 != 0 || R83 + R160 + R157 + -1*R192 + -1*R188 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R2746 + R2741 != 0 || R120 + R2747 + R2742 + -1*R3546 + -1*R3542 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R3546 + R3542 = 0)) && (R3549 != 0 || R3550 = R3578 || (R22 = 0 && R3578 = 0)) && (R3551 != 0 || R3552 = R3578 || (R22 = 0 && R3578 = 0)) && (R3553 != 0 || R3554 = R3578 || (R22 = 0 && R3578 = 0)) && (R3555 != 0 || R3556 = R3578 || (R22 = 0 && R3578 = 0)) && (R3557 != 0 || R3558 = R3578 || (R22 = 0 && R3578 = 0)) && (R3559 != 0 || R3560 = R3578 || (R22 = 0 && R3578 = 0)) && (R3561 != 0 || R3562 = R3578 || (R22 = 0 && R3578 = 0)) && (R3563 != 0 || R3564 = R3578 || (R22 = 0 && R3578 = 0)) && (R3565 != 0 || R3566 = R3578 || (R22 = 0 && R3578 = 0)) && (R3567 != 0 || R3568 = R3578 || (R22 = 0 && R3578 = 0)) && (R3569 != 0 || R3570 = R3578 || (R22 = 0 && R3578 = 0)) && (R3571 != 0 || R3572 = R3578 || (R22 = 0 && R3578 = 0)) && (R3573 != 0 || R3574 = R3578 || (R22 = 0 && R3578 = 0)) && (R3575 != 0 || R3576 = R3578 || (R22 = 0 && R3578 = 0)) && (R23 = 0 || (R3607 = 0 && R3608 = 0)) && (R23 = 0 || (R3611 = 0 && R3612 = 0)) && (R23 = 0 || (R3613 = 0 && R3614 = 0)) && (R23 = 0 || (R3615 = 0 && R3616 = 0)) && (R23 = 0 || (R3617 = 0 && R3618 = 0)) && (R23 = 0 || (R3621 = 0 && R3622 = 0)) && (R23 = 0 || (R3623 = 0 && R3624 = 0)) && (R23 = 0 || (R3625 = 0 && R3626 = 0)) && (R23 = 0 || (R3629 = 0 && R3630 = 0)) && (R24 = 0 || (R3579 = 0 && R3580 = 0)) && (R24 = 0 || (R3581 = 0 && R3582 = 0)) && (R24 = 0 || (R3583 = 0 && R3584 = 0)) && (R24 = 0 || (R3585 = 0 && R3586 = 0)) && (R24 = 0 || (R3587 = 0 && R3588 = 0)) && (R24 = 0 || (R3589 = 0 && R3590 = 0)) && (R24 = 0 || (R3591 = 0 && R3592 = 0)) && (R24 = 0 || (R3593 = 0 && R3594 = 0)) && (R24 = 0 || (R3595 = 0 && R3596 = 0)) && (R24 = 0 || (R3597 = 0 && R3598 = 0)) && (R24 = 0 || (R3599 = 0 && R3600 = 0)) && (R24 = 0 || (R3601 = 0 && R3602 = 0)) && (R24 = 0 || (R3603 = 0 && R3604 = 0)) && (R24 = 0 || (R3605 = 0 && R3606 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R3546 + R3542 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R3546 + R3542 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R3546 + R3542 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 = 0 || (R83 + R160 + R157 = 0 && R130 + R3546 + R3542 = 0)) && (R113 + R191 + R187 = 0 || R83 + R160 + R157 < 1) && (R119 + R2746 + R2741 = 0 || (R83 + R160 + R157 = 0 && R130 + R3546 + R3542 = 0)) && (R123 + R2750 + R2745 = 0 || (R121 + R2748 + R2743 = 0 && R122 + R2749 + R2744 = 0)) && (R3549 = 0 || (R22 = 0 && R3578 = 0)) && (R3551 = 0 || (R22 = 0 && R3578 = 0)) && (R3553 = 0 || (R22 = 0 && R3578 = 0)) && (R3555 = 0 || (R22 = 0 && R3578 = 0)) && (R3557 = 0 || (R22 = 0 && R3578 = 0)) && (R3559 = 0 || (R22 = 0 && R3578 = 0)) && (R3561 = 0 || (R22 = 0 && R3578 = 0)) && (R3563 = 0 || (R22 = 0 && R3578 = 0)) && (R3565 = 0 || (R22 = 0 && R3578 = 0)) && (R3567 = 0 || (R22 = 0 && R3578 = 0)) && (R3569 = 0 || (R22 = 0 && R3578 = 0)) && (R3571 = 0 || (R22 = 0 && R3578 = 0)) && (R3573 = 0 || (R22 = 0 && R3578 = 0)) && (R3575 = 0 || (R22 = 0 && R3578 = 0));
// End of Parikh automata intersection problem
