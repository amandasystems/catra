// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R2, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R4015, R4016, R4017, R4018, R4019, R4020, R4021, R4022, R4023, R4024, R4183, R4184, R4185, R4186, R4187, R4188, R4189, R4190, R4191, R4192, R4193, R4194, R4195, R4196, R4197, R4198, R4199, R4200, R4201, R4202, R4203, R4204, R4205, R4206, R4207, R4208, R4209, R4210, R4211, R4212, R4213, R4214, R4215, R4216, R4217, R4218, R4219, R4220, R4221, R4222, R4223, R4224, R4225, R4226, R4227, R4228, R4229, R4230, R4231, R4232, R4233, R4234, R4235, R4236, R4237, R4238, R4239, R4240, R4241, R4242, R4243, R4244, R4245, R4246, R4247, R4248, R4249, R4250, R4251, R4252, R4253, R4254, R4255, R4256, R4257, R4258, R4259, R4260, R4261, R4262, R4263, R4264, R4265, R4266, R4267, R4268, R4269, R4270, R4271, R4272, R4273, R4274, R4275, R4276, R4277, R4278, R4279, R4280, R4281, R4282, R4283, R4284, R4285, R4286, R4287, R4288, R4289, R4290, R4291, R4292, R4293, R4294, R4295, R4296, R4297, R4298, R4299, R4300, R4301, R4302, R4303, R4304, R4305, R4306, R4307, R4308, R4309, R4310, R4311, R4312, R4313, R4314, R4315, R4316, R4317, R4318, R4319, R4320, R4321, R4322, R4323, R4324, R4325, R4326, R4327, R4328, R4329, R4330, R4331, R4332, R4333, R4334, R4335, R4336, R4337, R4338, R4339, R4340, R5, R63, R65, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R26 += 1 };
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R30 += 1 };
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R4221 += 1, R4222 += 1 };
  s0 -> s1 [0, 65535] { R4222 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R4222 += 1, R24 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R4224 += 1 };
  s0 -> s0 [0, 65535] { R4223 += 1, R4224 += 1 };
  s0 -> s2 [70, 70] { R4224 += 1 };
  s0 -> s3 [70, 70] { R4224 += 1 };
  s0 -> s1 [76, 65535] { R4224 += 1 };
  s1 -> s1 [0, 69] { R4224 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4224 += 1 };
  s1 -> s3 [70, 70] { R4224 += 1 };
  s1 -> s1 [76, 65535] { R4224 += 1 };
  s2 -> s2 [0, 70] { R4224 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R4224 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R4226 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R4225 += 1, R4226 += 1 };
  s0 -> s2 [70, 70] { R4226 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R4226 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R4226 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R4226 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4226 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R4226 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R4226 += 1, R63 += 1 };
  s2 -> s2 [0, 65535] { R4226 += 1, R63 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R4228 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R4227 += 1, R4228 += 1 };
  s0 -> s2 [70, 70] { R4228 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R4228 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R4228 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R4228 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4228 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R4228 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R4228 += 1, R65 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R4228 += 1, R65 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R4230 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R4229 += 1, R4230 += 1 };
  s0 -> s2 [70, 70] { R4230 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R4230 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R4230 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R4230 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4230 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R4230 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R4230 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535] { R4230 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R4232 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R4231 += 1, R4232 += 1 };
  s0 -> s2 [70, 70] { R4232 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R4232 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R4232 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R4232 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4232 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R4232 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R4232 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R4232 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R4234 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R4233 += 1, R4234 += 1 };
  s0 -> s2 [70, 70] { R4234 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R4234 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R4234 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R4234 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4234 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R4234 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R4234 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535] { R4234 += 1, R77 += 1, R78 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R4236 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R4235 += 1, R4236 += 1 };
  s0 -> s2 [70, 70] { R4236 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R4236 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R4236 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R4236 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4236 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R4236 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R4236 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535] { R4236 += 1, R81 += 1, R82 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R4238 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R4237 += 1, R4238 += 1 };
  s0 -> s2 [70, 70] { R4238 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R4238 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R4238 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R4238 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4238 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R4238 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R4238 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4238 += 1, R87 += 1, R88 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R4240 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R4239 += 1, R4240 += 1 };
  s0 -> s2 [70, 70] { R4240 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R4240 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R4240 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R4240 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4240 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R4240 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R4240 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535] { R4240 += 1, R93 += 1, R94 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R4242 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R4241 += 1, R4242 += 1 };
  s0 -> s2 [70, 70] { R4242 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R4242 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R4242 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R4242 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4242 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R4242 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R4242 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4242 += 1, R101 += 1, R102 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R4244 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R4243 += 1, R4244 += 1 };
  s0 -> s2 [70, 70] { R4244 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R4244 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R4244 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R4244 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4244 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R4244 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R4244 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R4244 += 1, R111 += 1, R112 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R4246 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R4245 += 1, R4246 += 1 };
  s0 -> s2 [70, 70] { R4246 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R4246 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R4246 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R4246 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4246 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R4246 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R4246 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4246 += 1, R119 += 1, R120 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R4248 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R4247 += 1, R4248 += 1 };
  s0 -> s2 [70, 70] { R4248 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R4248 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R4248 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R4248 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4248 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R4248 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R4248 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4248 += 1, R129 += 1, R130 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R4278 += 1 };
  s0 -> s0 [0, 65535] { R4277 += 1, R4278 += 1 };
  s0 -> s2 [70, 70] { R4278 += 1 };
  s0 -> s1 [71, 65535] { R4278 += 1 };
  s1 -> s1 [0, 69] { R4278 += 1 };
  s1 -> s2 [70, 70] { R4278 += 1 };
  s1 -> s1 [71, 65535] { R4278 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4278 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R4279 += 1, R4280 += 1 };
  s0 -> s1 [0, 65535] { R4280 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R4280 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R4282 += 1 };
  s0 -> s2 [0, 65535] { R4282 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R4281 += 1, R4282 += 1 };
  s0 -> s3 [70, 70] { R4282 += 1 };
  s0 -> s1 [71, 65535] { R4282 += 1 };
  s1 -> s1 [0, 69] { R4282 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R4282 += 1 };
  s1 -> s1 [71, 65535] { R4282 += 1 };
  s2 -> s1 [0, 69] { R4282 += 1 };
  s2 -> s2 [0, 65535] { R4282 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R4282 += 1 };
  s2 -> s1 [71, 65535] { R4282 += 1 };
  s3 -> s3 [0, 65535] { R4282 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R4284 += 1, R4192 += 1 };
  s0 -> s0 [0, 65535] { R4283 += 1, R4284 += 1 };
  s0 -> s2 [0, 65535] { R4284 += 1, R4191 += 1, R4192 += 1 };
  s0 -> s1 [71, 65535] { R4284 += 1, R4192 += 1 };
  s1 -> s1 [0, 69] { R4284 += 1, R4192 += 1 };
  s1 -> s1 [0, 65535] { R4284 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R4284 += 1, R4192 += 1 };
  s2 -> s1 [0, 69] { R4284 += 1, R4192 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4284 += 1, R4191 += 1, R4192 += 1 };
  s2 -> s1 [71, 65535] { R4284 += 1, R4192 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R4286 += 1, R4193 += 1, R4194 += 1 };
  s0 -> s2 [0, 65535] { R4286 += 1, R4194 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R4285 += 1, R4286 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4286 += 1, R4193 += 1, R4194 += 1 };
  s1 -> s2 [0, 65535] { R4286 += 1, R4194 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4286 += 1, R4194 += 1, R22 += 1 };
  s2 -> s4 [0, 65535] { R4286 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4286 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R4288 += 1, R4196 += 1 };
  s0 -> s2 [0, 65535] { R4288 += 1, R4195 += 1, R4196 += 1 };
  s0 -> s0 [0, 65535] { R4287 += 1, R4288 += 1 };
  s0 -> s1 [75, 65535] { R4288 += 1, R4196 += 1 };
  s1 -> s1 [0, 70] { R4288 += 1, R4196 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4288 += 1 };
  s1 -> s1 [75, 65535] { R4288 += 1, R4196 += 1 };
  s2 -> s1 [0, 70] { R4288 += 1, R4196 += 1 };
  s2 -> s2 [0, 65535] { R4288 += 1, R4195 += 1, R4196 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R4288 += 1, R4196 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R4290 += 1, R4198 += 1, R138 += 1 };
  s0 -> s2 [0, 65535] { R4290 += 1, R4197 += 1, R4198 += 1 };
  s0 -> s0 [0, 65535] { R4289 += 1, R4290 += 1 };
  s1 -> s1 [0, 65535] { R4290 += 1, R4198 += 1, R138 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R4290 += 1 };
  s2 -> s1 [0, 65535] { R4290 += 1, R4198 += 1, R138 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4290 += 1, R4197 += 1, R4198 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4290 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R4292 += 1, R4200 += 1 };
  s0 -> s0 [0, 65535] { R4291 += 1, R4292 += 1 };
  s0 -> s2 [0, 65535] { R4292 += 1, R4199 += 1, R4200 += 1 };
  s0 -> s3 [0, 65535] { R4292 += 1, R4200 += 1, R140 += 1 };
  s0 -> s1 [76, 65535] { R4292 += 1, R4200 += 1 };
  s1 -> s1 [0, 74] { R4292 += 1, R4200 += 1 };
  s1 -> s1 [0, 65535] { R4292 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R4292 += 1, R4200 += 1 };
  s2 -> s1 [0, 74] { R4292 += 1, R4200 += 1 };
  s2 -> s2 [0, 65535] { R4292 += 1, R4199 += 1, R4200 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R4292 += 1, R4200 += 1, R140 += 1 };
  s2 -> s1 [76, 65535] { R4292 += 1, R4200 += 1 };
  s3 -> s1 [0, 74] { R4292 += 1, R4200 += 1 };
  s3 -> s4 [0, 65535] { R4292 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4292 += 1, R4200 += 1, R140 += 1 };
  s3 -> s1 [76, 65535] { R4292 += 1, R4200 += 1 };
  s4 -> s4 [0, 65535] { R4292 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R4294 += 1, R4201 += 1, R4202 += 1 };
  s0 -> s2 [0, 65535] { R4294 += 1, R4202 += 1, R145 += 1, R146 += 1 };
  s0 -> s0 [0, 65535] { R4293 += 1, R4294 += 1 };
  s0 -> s3 [0, 65535] { R4294 += 1, R4202 += 1, R144 += 1, R145 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R4294 += 1, R4201 += 1, R4202 += 1 };
  s1 -> s2 [0, 65535] { R4294 += 1, R4202 += 1, R145 += 1, R146 += 1 };
  s1 -> s3 [0, 65535] { R4294 += 1, R4202 += 1, R144 += 1, R145 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s6 [0, 65535] { R4294 += 1, R4202 += 1 };
  s2 -> s2 [0, 65535] { R4294 += 1, R4202 += 1, R145 += 1, R146 += 1 };
  s2 -> s5 [0, 65535] { R4294 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R4294 += 1, R4202 += 1, R145 += 1, R146 += 1 };
  s3 -> s5 [0, 65535] { R4294 += 1 };
  s3 -> s3 [0, 65535] { R4294 += 1, R4202 += 1, R144 += 1, R145 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4294 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R4294 += 1, R4202 += 1 };
  s6 -> s5 [0, 65535] { R4294 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R4296 += 1, R4204 += 1, R150 += 1 };
  s0 -> s2 [0, 65535] { R4296 += 1, R4203 += 1, R4204 += 1 };
  s0 -> s3 [0, 65535] { R4296 += 1, R4204 += 1, R149 += 1, R150 += 1 };
  s0 -> s0 [0, 65535] { R4295 += 1, R4296 += 1 };
  s0 -> s4 [75, 75] { R4296 += 1, R4204 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R4296 += 1, R4204 += 1, R150 += 1 };
  s0 -> s1 [84, 65535] { R4296 += 1, R4204 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R4296 += 1, R4204 += 1, R150 += 1 };
  s1 -> s1 [0, 65535] { R4296 += 1, R4204 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R4296 += 1 };
  s1 -> s4 [75, 75] { R4296 += 1, R4204 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R4296 += 1, R4204 += 1, R150 += 1 };
  s1 -> s1 [84, 65535] { R4296 += 1, R4204 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R4296 += 1, R4204 += 1, R150 += 1 };
  s2 -> s2 [0, 65535] { R4296 += 1, R4203 += 1, R4204 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R4296 += 1, R4204 += 1, R149 += 1, R150 += 1 };
  s2 -> s4 [75, 75] { R4296 += 1, R4204 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R4296 += 1, R4204 += 1, R150 += 1 };
  s2 -> s1 [84, 65535] { R4296 += 1, R4204 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R4296 += 1, R4204 += 1, R150 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R4296 += 1 };
  s3 -> s3 [0, 65535] { R4296 += 1, R4204 += 1, R149 += 1, R150 += 1 };
  s3 -> s4 [75, 75] { R4296 += 1, R4204 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R4296 += 1, R4204 += 1, R150 += 1 };
  s3 -> s1 [84, 65535] { R4296 += 1, R4204 += 1, R150 += 1 };
  s4 -> s4 [0, 75] { R4296 += 1, R4204 += 1, R150 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4296 += 1, R4204 += 1 };
  s4 -> s7 [0, 65535] { R4296 += 1 };
  s4 -> s4 [84, 65535] { R4296 += 1, R4204 += 1, R150 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R4296 += 1 };
  s5 -> s5 [0, 65535] { R4296 += 1, R4204 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4296 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R4298 += 1, R4206 += 1, R154 += 1 };
  s0 -> s0 [0, 65535] { R4297 += 1, R4298 += 1 };
  s0 -> s2 [0, 65535] { R4298 += 1, R4205 += 1, R4206 += 1 };
  s0 -> s3 [0, 65535] { R4298 += 1, R4206 += 1 };
  s1 -> s4 [0, 65535] { R4298 += 1 };
  s1 -> s1 [0, 65535] { R4298 += 1, R4206 += 1, R154 += 1 };
  s1 -> s3 [0, 65535] { R4298 += 1, R4206 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R4298 += 1, R4206 += 1, R154 += 1 };
  s2 -> s2 [0, 65535] { R4298 += 1, R4205 += 1, R4206 += 1 };
  s2 -> s3 [0, 65535] { R4298 += 1, R4206 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R4298 += 1 };
  s3 -> s3 [0, 65535] { R4298 += 1, R4206 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4298 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s0 [0, 65535] { R4299 += 1, R4300 += 1 };
  s0 -> s1 [0, 65535] { R4300 += 1, R4208 += 1, R158 += 1, R159 += 1 };
  s0 -> s2 [0, 65535] { R4300 += 1, R4208 += 1, R159 += 1, R160 += 1 };
  s0 -> s3 [0, 65535] { R4300 += 1, R4207 += 1, R4208 += 1 };
  s1 -> s5 [0, 65535] { R4300 += 1 };
  s1 -> s1 [0, 65535] { R4300 += 1, R4208 += 1, R158 += 1, R159 += 1 };
  s1 -> s2 [0, 65535] { R4300 += 1, R4208 += 1, R159 += 1, R160 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R4300 += 1 };
  s2 -> s2 [0, 65535] { R4300 += 1, R4208 += 1, R159 += 1, R160 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s6 [0, 65535] { R4300 += 1, R4208 += 1 };
  s3 -> s1 [0, 65535] { R4300 += 1, R4208 += 1, R158 += 1, R159 += 1 };
  s3 -> s2 [0, 65535] { R4300 += 1, R4208 += 1, R159 += 1, R160 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4300 += 1, R4207 += 1, R4208 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4300 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R4300 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R4300 += 1, R4208 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R4302 += 1, R4210 += 1, R165 += 1 };
  s0 -> s0 [0, 65535] { R4301 += 1, R4302 += 1 };
  s0 -> s2 [0, 65535] { R4302 += 1, R4209 += 1, R4210 += 1 };
  s0 -> s3 [0, 65535] { R4302 += 1, R4210 += 1, R165 += 1, R166 += 1 };
  s0 -> s4 [0, 65535] { R4302 += 1, R4210 += 1, R164 += 1, R165 += 1 };
  s0 -> s1 [76, 65535] { R4302 += 1, R4210 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R4302 += 1, R4210 += 1, R165 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R4302 += 1 };
  s1 -> s1 [0, 65535] { R4302 += 1, R4210 += 1 };
  s1 -> s1 [76, 65535] { R4302 += 1, R4210 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R4302 += 1, R4210 += 1, R165 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4302 += 1, R4209 += 1, R4210 += 1 };
  s2 -> s3 [0, 65535] { R4302 += 1, R4210 += 1, R165 += 1, R166 += 1 };
  s2 -> s4 [0, 65535] { R4302 += 1, R4210 += 1, R164 += 1, R165 += 1 };
  s2 -> s1 [76, 65535] { R4302 += 1, R4210 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R4302 += 1, R4210 += 1, R165 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R4302 += 1 };
  s3 -> s7 [0, 65535] { R4302 += 1, R4210 += 1 };
  s3 -> s3 [0, 65535] { R4302 += 1, R4210 += 1, R165 += 1, R166 += 1 };
  s3 -> s1 [76, 65535] { R4302 += 1, R4210 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R4302 += 1, R4210 += 1, R165 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4302 += 1 };
  s4 -> s3 [0, 65535] { R4302 += 1, R4210 += 1, R165 += 1, R166 += 1 };
  s4 -> s4 [0, 65535] { R4302 += 1, R4210 += 1, R164 += 1, R165 += 1 };
  s4 -> s1 [76, 65535] { R4302 += 1, R4210 += 1, R165 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4302 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R4302 += 1 };
  s7 -> s7 [0, 65535] { R4302 += 1, R4210 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R4304 += 1, R4212 += 1, R172 += 1, R174 += 1 };
  s0 -> s2 [0, 65535] { R4304 += 1, R4212 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s3 [0, 65535] { R4304 += 1, R4211 += 1, R4212 += 1 };
  s0 -> s4 [0, 65535] { R4304 += 1, R4212 += 1, R171 += 1, R172 += 1 };
  s0 -> s0 [0, 65535] { R4303 += 1, R4304 += 1 };
  s0 -> s1 [76, 65535] { R4304 += 1, R4212 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R4304 += 1, R4212 += 1, R172 += 1, R174 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R4304 += 1, R4212 += 1 };
  s1 -> s6 [0, 65535] { R4304 += 1 };
  s1 -> s1 [0, 65535] { R4304 += 1, R4212 += 1, R172 += 1 };
  s1 -> s1 [76, 65535] { R4304 += 1, R4212 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R4304 += 1, R4212 += 1, R172 += 1, R174 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R4304 += 1, R4212 += 1 };
  s2 -> s6 [0, 65535] { R4304 += 1 };
  s2 -> s2 [0, 65535] { R4304 += 1, R4212 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s1 [76, 65535] { R4304 += 1, R4212 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R4304 += 1, R4212 += 1, R172 += 1, R174 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R4304 += 1, R4212 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s3 [0, 65535] { R4304 += 1, R4211 += 1, R4212 += 1 };
  s3 -> s4 [0, 65535] { R4304 += 1, R4212 += 1, R171 += 1, R172 += 1 };
  s3 -> s1 [76, 65535] { R4304 += 1, R4212 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R4304 += 1, R4212 += 1, R172 += 1, R174 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4304 += 1 };
  s4 -> s2 [0, 65535] { R4304 += 1, R4212 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s4 [0, 65535] { R4304 += 1, R4212 += 1, R171 += 1, R172 += 1 };
  s4 -> s1 [76, 65535] { R4304 += 1, R4212 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4304 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R4304 += 1, R4212 += 1 };
  s7 -> s6 [0, 65535] { R4304 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s0 [0, 65535] { R4305 += 1, R4306 += 1 };
  s0 -> s1 [0, 65535] { R4306 += 1, R4214 += 1 };
  s0 -> s2 [0, 65535] { R4306 += 1, R4213 += 1, R4214 += 1 };
  s0 -> s3 [0, 65535] { R4306 += 1, R4214 += 1, R181 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R4306 += 1, R4214 += 1 };
  s1 -> s5 [0, 65535] { R4306 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R4306 += 1, R4214 += 1 };
  s2 -> s2 [0, 65535] { R4306 += 1, R4213 += 1, R4214 += 1 };
  s2 -> s3 [0, 65535] { R4306 += 1, R4214 += 1, R181 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R4306 += 1, R4214 += 1 };
  s3 -> s5 [0, 65535] { R4306 += 1 };
  s3 -> s3 [0, 65535] { R4306 += 1, R4214 += 1, R181 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4306 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R4308 += 1, R4216 += 1, R190 += 1, R192 += 1 };
  s0 -> s2 [0, 65535] { R4308 += 1, R4216 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s0 -> s3 [0, 65535] { R4308 += 1, R4216 += 1, R189 += 1, R190 += 1 };
  s0 -> s0 [0, 65535] { R4307 += 1, R4308 += 1 };
  s0 -> s4 [0, 65535] { R4308 += 1, R4215 += 1, R4216 += 1 };
  s0 -> s1 [83, 65535] { R4308 += 1, R4216 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 75] { R4308 += 1, R4216 += 1, R190 += 1, R192 += 1 };
  s1 -> s6 [0, 65535] { R4308 += 1 };
  s1 -> s7 [0, 65535] { R4308 += 1, R4216 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4308 += 1, R4216 += 1, R190 += 1 };
  s1 -> s1 [83, 65535] { R4308 += 1, R4216 += 1, R190 += 1, R192 += 1 };
  s2 -> s1 [0, 75] { R4308 += 1, R4216 += 1, R190 += 1, R192 += 1 };
  s2 -> s6 [0, 65535] { R4308 += 1 };
  s2 -> s2 [0, 65535] { R4308 += 1, R4216 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s2 -> s7 [0, 65535] { R4308 += 1, R4216 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [83, 65535] { R4308 += 1, R4216 += 1, R190 += 1, R192 += 1 };
  s3 -> s1 [0, 75] { R4308 += 1, R4216 += 1, R190 += 1, R192 += 1 };
  s3 -> s6 [0, 65535] { R4308 += 1 };
  s3 -> s2 [0, 65535] { R4308 += 1, R4216 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s3 -> s3 [0, 65535] { R4308 += 1, R4216 += 1, R189 += 1, R190 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [83, 65535] { R4308 += 1, R4216 += 1, R190 += 1, R192 += 1 };
  s4 -> s1 [0, 75] { R4308 += 1, R4216 += 1, R190 += 1, R192 += 1 };
  s4 -> s2 [0, 65535] { R4308 += 1, R4216 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s4 -> s3 [0, 65535] { R4308 += 1, R4216 += 1, R189 += 1, R190 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4308 += 1, R4215 += 1, R4216 += 1 };
  s4 -> s1 [83, 65535] { R4308 += 1, R4216 += 1, R190 += 1, R192 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4308 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R4308 += 1 };
  s7 -> s7 [0, 65535] { R4308 += 1, R4216 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R4310 += 1, R4218 += 1, R4021 += 1, R4022 += 1, R4023 += 1 };
  s0 -> s2 [0, 65535] { R4310 += 1, R4217 += 1, R4218 += 1 };
  s0 -> s3 [0, 65535] { R4310 += 1, R4218 += 1, R4021 += 1, R4023 += 1, R4024 += 1 };
  s0 -> s0 [0, 65535] { R4309 += 1, R4310 += 1 };
  s0 -> s4 [0, 65535] { R4310 += 1, R4218 += 1, R4020 += 1, R4021 += 1 };
  s1 -> s1 [0, 65535] { R4310 += 1, R4218 += 1, R4021 += 1, R4022 += 1, R4023 += 1 };
  s1 -> s7 [0, 65535] { R4310 += 1, R4218 += 1 };
  s1 -> s3 [0, 65535] { R4310 += 1, R4218 += 1, R4021 += 1, R4023 += 1, R4024 += 1 };
  s1 -> s5 [0, 65535] { R4310 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s1 [0, 65535] { R4310 += 1, R4218 += 1, R4021 += 1, R4022 += 1, R4023 += 1 };
  s2 -> s2 [0, 65535] { R4310 += 1, R4217 += 1, R4218 += 1 };
  s2 -> s3 [0, 65535] { R4310 += 1, R4218 += 1, R4021 += 1, R4023 += 1, R4024 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [0, 65535] { R4310 += 1, R4218 += 1, R4020 += 1, R4021 += 1 };
  s3 -> s7 [0, 65535] { R4310 += 1, R4218 += 1 };
  s3 -> s3 [0, 65535] { R4310 += 1, R4218 += 1, R4021 += 1, R4023 += 1, R4024 += 1 };
  s3 -> s5 [0, 65535] { R4310 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s8 [0, 65535] { R4310 += 1, R4218 += 1, R4021 += 1 };
  s4 -> s1 [0, 65535] { R4310 += 1, R4218 += 1, R4021 += 1, R4022 += 1, R4023 += 1 };
  s4 -> s3 [0, 65535] { R4310 += 1, R4218 += 1, R4021 += 1, R4023 += 1, R4024 += 1 };
  s4 -> s5 [0, 65535] { R4310 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4310 += 1, R4218 += 1, R4020 += 1, R4021 += 1 };
  s5 -> s5 [0, 65535] { R4310 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4310 += 1, R4218 += 1 };
  s7 -> s5 [0, 65535] { R4310 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R4310 += 1, R4218 += 1 };
  s8 -> s5 [0, 65535] { R4310 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R4310 += 1, R4218 += 1, R4021 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 65535] { R4312 += 1, R4220 += 1 };
  s0 -> s2 [0, 65535] { R4312 += 1, R4219 += 1, R4220 += 1 };
  s0 -> s0 [0, 65535] { R4311 += 1, R4312 += 1 };
  s1 -> s1 [0, 65535] { R4312 += 1, R4220 += 1 };
  s1 -> s4 [0, 65535] { R4312 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4312 += 1, R4220 += 1 };
  s2 -> s2 [0, 65535] { R4312 += 1, R4219 += 1, R4220 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4312 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65535] { R4314 += 1, R4249 += 1, R4250 += 1 };
  s0 -> s2 [0, 65535] { R4314 += 1, R4250 += 1, R23 += 1 };
  s0 -> s0 [0, 65535] { R4313 += 1, R4314 += 1 };
  s1 -> s1 [0, 65535] { R4314 += 1, R4249 += 1, R4250 += 1 };
  s1 -> s2 [0, 65535] { R4314 += 1, R4250 += 1, R23 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R4314 += 1 };
  s2 -> s2 [0, 65535] { R4314 += 1, R4250 += 1, R23 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4314 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R4316 += 1, R4252 += 1 };
  s0 -> s0 [0, 65535] { R4315 += 1, R4316 += 1 };
  s0 -> s2 [0, 65535] { R4316 += 1, R4251 += 1, R4252 += 1 };
  s0 -> s3 [70, 70] { R4316 += 1, R4252 += 1 };
  s0 -> s4 [70, 70] { R4316 += 1, R4252 += 1 };
  s0 -> s5 [75, 75] { R4316 += 1, R4252 += 1 };
  s0 -> s1 [76, 65535] { R4316 += 1, R4252 += 1 };
  s1 -> s1 [0, 69] { R4316 += 1, R4252 += 1 };
  s1 -> s3 [70, 70] { R4316 += 1, R4252 += 1 };
  s1 -> s4 [70, 70] { R4316 += 1, R4252 += 1 };
  s1 -> s5 [75, 75] { R4316 += 1, R4252 += 1 };
  s1 -> s1 [76, 65535] { R4316 += 1, R4252 += 1 };
  s2 -> s1 [0, 69] { R4316 += 1, R4252 += 1 };
  s2 -> s2 [0, 65535] { R4316 += 1, R4251 += 1, R4252 += 1 };
  s2 -> s3 [70, 70] { R4316 += 1, R4252 += 1 };
  s2 -> s4 [70, 70] { R4316 += 1, R4252 += 1 };
  s2 -> s5 [75, 75] { R4316 += 1, R4252 += 1 };
  s2 -> s1 [76, 65535] { R4316 += 1, R4252 += 1 };
  s4 -> s4 [0, 70] { R4316 += 1, R4252 += 1 };
  s4 -> s8 [75, 75] { R4316 += 1, R4252 += 1 };
  s4 -> s4 [76, 65535] { R4316 += 1, R4252 += 1 };
  s5 -> s5 [0, 69] { R4316 += 1, R4252 += 1 };
  s5 -> s5 [0, 65535] { R4316 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R4316 += 1, R4252 += 1 };
  s5 -> s8 [70, 70] { R4316 += 1, R4252 += 1 };
  s5 -> s5 [75, 65535] { R4316 += 1, R4252 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4316 += 1 };
  s8 -> s8 [0, 70] { R4316 += 1, R4252 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R4316 += 1 };
  s8 -> s8 [75, 65535] { R4316 += 1, R4252 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R4318 += 1, R4254 += 1, R137 += 1 };
  s0 -> s0 [0, 65535] { R4317 += 1, R4318 += 1 };
  s0 -> s2 [0, 65535] { R4318 += 1, R4253 += 1, R4254 += 1 };
  s0 -> s3 [70, 70] { R4318 += 1, R4254 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R4318 += 1, R4254 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R4318 += 1, R4254 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R4318 += 1, R4254 += 1, R137 += 1 };
  s1 -> s1 [0, 65535] { R4318 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R4318 += 1, R4254 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R4318 += 1, R4254 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R4318 += 1, R4254 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R4318 += 1, R4254 += 1, R137 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4318 += 1, R4253 += 1, R4254 += 1 };
  s2 -> s3 [70, 70] { R4318 += 1, R4254 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R4318 += 1, R4254 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R4318 += 1, R4254 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R4318 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4318 += 1, R4254 += 1, R137 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4318 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4318 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R4320 += 1, R4256 += 1, R139 += 1 };
  s0 -> s0 [0, 65535] { R4319 += 1, R4320 += 1 };
  s0 -> s2 [0, 65535] { R4320 += 1, R4255 += 1, R4256 += 1 };
  s0 -> s3 [70, 70] { R4320 += 1, R4256 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R4320 += 1, R4256 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R4320 += 1, R4256 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R4320 += 1, R4256 += 1, R139 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4320 += 1 };
  s1 -> s3 [70, 70] { R4320 += 1, R4256 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R4320 += 1, R4256 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R4320 += 1, R4256 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R4320 += 1, R4256 += 1, R139 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4320 += 1, R4255 += 1, R4256 += 1 };
  s2 -> s3 [70, 70] { R4320 += 1, R4256 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R4320 += 1, R4256 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R4320 += 1, R4256 += 1, R139 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4320 += 1, R4256 += 1, R139 += 1 };
  s3 -> s6 [0, 65535] { R4320 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4320 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4320 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R4322 += 1, R4258 += 1, R141 += 1, R142 += 1 };
  s0 -> s0 [0, 65535] { R4321 += 1, R4322 += 1 };
  s0 -> s2 [0, 65535] { R4322 += 1, R4257 += 1, R4258 += 1 };
  s0 -> s3 [70, 70] { R4322 += 1, R4258 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R4322 += 1, R4258 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R4322 += 1, R4258 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R4322 += 1, R4258 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 65535] { R4322 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R4322 += 1, R4258 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R4322 += 1, R4258 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R4322 += 1, R4258 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R4322 += 1, R4258 += 1, R141 += 1, R142 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4322 += 1, R4257 += 1, R4258 += 1 };
  s2 -> s3 [70, 70] { R4322 += 1, R4258 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R4322 += 1, R4258 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R4322 += 1, R4258 += 1, R141 += 1, R142 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4322 += 1, R4258 += 1, R141 += 1, R142 += 1 };
  s3 -> s6 [0, 65535] { R4322 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4322 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4322 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R4324 += 1, R4260 += 1, R147 += 1, R148 += 1 };
  s0 -> s0 [0, 65535] { R4323 += 1, R4324 += 1 };
  s0 -> s2 [0, 65535] { R4324 += 1, R4259 += 1, R4260 += 1 };
  s0 -> s3 [70, 70] { R4324 += 1, R4260 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R4324 += 1, R4260 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R4324 += 1, R4260 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R4324 += 1, R4260 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 65535] { R4324 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R4324 += 1, R4260 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R4324 += 1, R4260 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R4324 += 1, R4260 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R4324 += 1, R4260 += 1, R147 += 1, R148 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4324 += 1, R4259 += 1, R4260 += 1 };
  s2 -> s3 [70, 70] { R4324 += 1, R4260 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R4324 += 1, R4260 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R4324 += 1, R4260 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R4324 += 1, R4260 += 1, R147 += 1, R148 += 1 };
  s3 -> s6 [0, 65535] { R4324 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4324 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4324 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R4326 += 1, R4262 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R4326 += 1, R4262 += 1, R151 += 1, R152 += 1 };
  s0 -> s3 [0, 65535] { R4326 += 1, R4261 += 1, R4262 += 1 };
  s0 -> s0 [0, 65535] { R4325 += 1, R4326 += 1 };
  s0 -> s4 [70, 70] { R4326 += 1, R4262 += 1, R151 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R4326 += 1, R4262 += 1, R151 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R4326 += 1, R4262 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R4326 += 1, R4262 += 1, R152 += 1 };
  s0 -> s1 [71, 74] { R4326 += 1, R4262 += 1, R152 += 1 };
  s0 -> s2 [71, 65535] { R4326 += 1, R4262 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R4326 += 1, R4262 += 1, R152 += 1 };
  s0 -> s1 [76, 65535] { R4326 += 1, R4262 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R4326 += 1, R4262 += 1, R152 += 1 };
  s1 -> s6 [70, 70] { R4326 += 1, R4262 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R4326 += 1, R4262 += 1, R152 += 1 };
  s1 -> s1 [71, 74] { R4326 += 1, R4262 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R4326 += 1, R4262 += 1, R152 += 1 };
  s1 -> s1 [76, 65535] { R4326 += 1, R4262 += 1, R152 += 1 };
  s2 -> s1 [0, 69] { R4326 += 1, R4262 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R4326 += 1, R4262 += 1, R151 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R4326 += 1, R4262 += 1, R151 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R4326 += 1, R4262 += 1, R151 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R4326 += 1, R4262 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R4326 += 1, R4262 += 1, R152 += 1 };
  s2 -> s1 [71, 74] { R4326 += 1, R4262 += 1, R152 += 1 };
  s2 -> s2 [71, 65535] { R4326 += 1, R4262 += 1, R151 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R4326 += 1, R4262 += 1, R152 += 1 };
  s2 -> s1 [76, 65535] { R4326 += 1, R4262 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R4326 += 1, R4262 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R4326 += 1, R4262 += 1, R151 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R4326 += 1, R4261 += 1, R4262 += 1 };
  s3 -> s4 [70, 70] { R4326 += 1, R4262 += 1, R151 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R4326 += 1, R4262 += 1, R151 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R4326 += 1, R4262 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R4326 += 1, R4262 += 1, R152 += 1 };
  s3 -> s1 [71, 74] { R4326 += 1, R4262 += 1, R152 += 1 };
  s3 -> s2 [71, 65535] { R4326 += 1, R4262 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R4326 += 1, R4262 += 1, R152 += 1 };
  s3 -> s1 [76, 65535] { R4326 += 1, R4262 += 1, R152 += 1 };
  s5 -> s6 [0, 74] { R4326 += 1, R4262 += 1, R152 += 1 };
  s5 -> s5 [0, 65535] { R4326 += 1, R4262 += 1, R151 += 1, R152 += 1 };
  s5 -> s10 [75, 75] { R4326 += 1, R4262 += 1, R152 += 1 };
  s5 -> s6 [76, 65535] { R4326 += 1, R4262 += 1, R152 += 1 };
  s6 -> s6 [0, 74] { R4326 += 1, R4262 += 1, R152 += 1 };
  s6 -> s10 [75, 75] { R4326 += 1, R4262 += 1, R152 += 1 };
  s6 -> s6 [76, 65535] { R4326 += 1, R4262 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R4326 += 1, R4262 += 1, R152 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R4326 += 1 };
  s8 -> s10 [70, 70] { R4326 += 1, R4262 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R4326 += 1, R4262 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R4326 += 1, R4262 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R4326 += 1, R4262 += 1, R152 += 1 };
  s10 -> s12 [0, 65535] { R4326 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R4326 += 1 };
  s12 -> s12 [0, 65535] { R4326 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R4328 += 1, R4264 += 1, R155 += 1, R156 += 1 };
  s0 -> s2 [0, 65535] { R4328 += 1, R4263 += 1, R4264 += 1 };
  s0 -> s0 [0, 65535] { R4327 += 1, R4328 += 1 };
  s0 -> s3 [70, 70] { R4328 += 1, R4264 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R4328 += 1, R4264 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R4328 += 1, R4264 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R4328 += 1, R4264 += 1, R155 += 1, R156 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4328 += 1 };
  s1 -> s3 [70, 70] { R4328 += 1, R4264 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R4328 += 1, R4264 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R4328 += 1, R4264 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R4328 += 1, R4264 += 1, R155 += 1, R156 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4328 += 1, R4263 += 1, R4264 += 1 };
  s2 -> s3 [70, 70] { R4328 += 1, R4264 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R4328 += 1, R4264 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R4328 += 1, R4264 += 1, R155 += 1, R156 += 1 };
  s3 -> s3 [0, 65535] { R4328 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4328 += 1 };
  s4 -> s4 [0, 65535] { R4328 += 1, R4264 += 1, R155 += 1, R156 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4328 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R4330 += 1, R4266 += 1, R161 += 1, R162 += 1 };
  s0 -> s2 [0, 65535] { R4330 += 1, R4265 += 1, R4266 += 1 };
  s0 -> s0 [0, 65535] { R4329 += 1, R4330 += 1 };
  s0 -> s3 [70, 70] { R4330 += 1, R4266 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R4330 += 1, R4266 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R4330 += 1, R4266 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R4330 += 1, R4266 += 1, R161 += 1, R162 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R4330 += 1 };
  s1 -> s3 [70, 70] { R4330 += 1, R4266 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R4330 += 1, R4266 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R4330 += 1, R4266 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R4330 += 1, R4266 += 1, R161 += 1, R162 += 1 };
  s2 -> s2 [0, 65535] { R4330 += 1, R4265 += 1, R4266 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R4330 += 1, R4266 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R4330 += 1, R4266 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R4330 += 1, R4266 += 1, R161 += 1, R162 += 1 };
  s3 -> s3 [0, 65535] { R4330 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R4330 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4330 += 1, R4266 += 1, R161 += 1, R162 += 1 };
  s5 -> s5 [0, 65535] { R4330 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R4332 += 1, R4268 += 1, R167 += 1, R168 += 1 };
  s0 -> s2 [0, 65535] { R4332 += 1, R4267 += 1, R4268 += 1 };
  s0 -> s0 [0, 65535] { R4331 += 1, R4332 += 1 };
  s0 -> s3 [70, 70] { R4332 += 1, R4268 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R4332 += 1, R4268 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R4332 += 1, R4268 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R4332 += 1, R4268 += 1, R167 += 1, R168 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4332 += 1 };
  s1 -> s3 [70, 70] { R4332 += 1, R4268 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R4332 += 1, R4268 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R4332 += 1, R4268 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R4332 += 1, R4268 += 1, R167 += 1, R168 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4332 += 1, R4267 += 1, R4268 += 1 };
  s2 -> s3 [70, 70] { R4332 += 1, R4268 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R4332 += 1, R4268 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R4332 += 1, R4268 += 1, R167 += 1, R168 += 1 };
  s3 -> s3 [0, 65535] { R4332 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4332 += 1, R4268 += 1, R167 += 1, R168 += 1 };
  s4 -> s6 [0, 65535] { R4332 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4332 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R4334 += 1, R4270 += 1, R175 += 1, R176 += 1 };
  s0 -> s2 [0, 69] { R4334 += 1, R4270 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s3 [0, 69] { R4334 += 1, R4270 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s4 [0, 65535] { R4334 += 1, R4269 += 1, R4270 += 1 };
  s0 -> s0 [0, 65535] { R4333 += 1, R4334 += 1 };
  s0 -> s5 [70, 70] { R4334 += 1, R4270 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s6 [70, 70] { R4334 += 1, R4270 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s7 [70, 70] { R4334 += 1, R4270 += 1, R175 += 1, R176 += 1 };
  s0 -> s8 [70, 70] { R4334 += 1, R4270 += 1, R175 += 1, R176 += 1 };
  s0 -> s9 [70, 70] { R4334 += 1, R4270 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s10 [70, 70] { R4334 += 1, R4270 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s1 [71, 65535] { R4334 += 1, R4270 += 1, R175 += 1, R176 += 1 };
  s0 -> s2 [71, 65535] { R4334 += 1, R4270 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s3 [71, 65535] { R4334 += 1, R4270 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s1 [0, 69] { R4334 += 1, R4270 += 1, R175 += 1, R176 += 1 };
  s1 -> s2 [0, 69] { R4334 += 1, R4270 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s3 [0, 69] { R4334 += 1, R4270 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s5 [70, 70] { R4334 += 1, R4270 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s6 [70, 70] { R4334 += 1, R4270 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s7 [70, 70] { R4334 += 1, R4270 += 1, R175 += 1, R176 += 1 };
  s1 -> s8 [70, 70] { R4334 += 1, R4270 += 1, R175 += 1, R176 += 1 };
  s1 -> s9 [70, 70] { R4334 += 1, R4270 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s10 [70, 70] { R4334 += 1, R4270 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s1 [71, 65535] { R4334 += 1, R4270 += 1, R175 += 1, R176 += 1 };
  s1 -> s2 [71, 65535] { R4334 += 1, R4270 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s3 [71, 65535] { R4334 += 1, R4270 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [0, 69] { R4334 += 1, R4270 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s3 [0, 69] { R4334 += 1, R4270 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s5 [70, 70] { R4334 += 1, R4270 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s6 [70, 70] { R4334 += 1, R4270 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s9 [70, 70] { R4334 += 1, R4270 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s10 [70, 70] { R4334 += 1, R4270 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [71, 65535] { R4334 += 1, R4270 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s3 [71, 65535] { R4334 += 1, R4270 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [0, 69] { R4334 += 1, R4270 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s14 [0, 69] { R4334 += 1, R4270 += 1, R176 += 1 };
  s3 -> s15 [70, 70] { R4334 += 1, R4270 += 1, R176 += 1 };
  s3 -> s5 [70, 70] { R4334 += 1, R4270 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s10 [70, 70] { R4334 += 1, R4270 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s11 [70, 70] { R4334 += 1, R4270 += 1, R176 += 1 };
  s3 -> s3 [71, 65535] { R4334 += 1, R4270 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s14 [71, 65535] { R4334 += 1, R4270 += 1, R176 += 1 };
  s4 -> s1 [0, 69] { R4334 += 1, R4270 += 1, R175 += 1, R176 += 1 };
  s4 -> s2 [0, 69] { R4334 += 1, R4270 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s3 [0, 69] { R4334 += 1, R4270 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s4 [0, 65535] { R4334 += 1, R4269 += 1, R4270 += 1 };
  s4 -> s5 [70, 70] { R4334 += 1, R4270 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s6 [70, 70] { R4334 += 1, R4270 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s7 [70, 70] { R4334 += 1, R4270 += 1, R175 += 1, R176 += 1 };
  s4 -> s8 [70, 70] { R4334 += 1, R4270 += 1, R175 += 1, R176 += 1 };
  s4 -> s9 [70, 70] { R4334 += 1, R4270 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s10 [70, 70] { R4334 += 1, R4270 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s1 [71, 65535] { R4334 += 1, R4270 += 1, R175 += 1, R176 += 1 };
  s4 -> s2 [71, 65535] { R4334 += 1, R4270 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s3 [71, 65535] { R4334 += 1, R4270 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s5 -> s5 [0, 65535] { R4334 += 1, R4270 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s5 -> s11 [0, 65535] { R4334 += 1, R4270 += 1, R176 += 1 };
  s7 -> s5 [0, 65535] { R4334 += 1, R4270 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s7 -> s7 [0, 65535] { R4334 += 1, R4270 += 1, R175 += 1, R176 += 1 };
  s7 -> s9 [0, 65535] { R4334 += 1, R4270 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s9 -> s5 [0, 65535] { R4334 += 1, R4270 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s9 -> s9 [0, 65535] { R4334 += 1, R4270 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [0, 65535] { R4334 += 1 };
  s11 -> s11 [0, 65535] { R4334 += 1, R4270 += 1, R176 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R4334 += 1 };
  s14 -> s14 [0, 69] { R4334 += 1, R4270 += 1, R176 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R4334 += 1 };
  s14 -> s15 [70, 70] { R4334 += 1, R4270 += 1, R176 += 1 };
  s14 -> s11 [70, 70] { R4334 += 1, R4270 += 1, R176 += 1 };
  s14 -> s14 [71, 65535] { R4334 += 1, R4270 += 1, R176 += 1 };
  s15 -> s15 [0, 65535] { R4334 += 1 };
  s15 -> s12 [0, 65535];
  accepting s12, s13, s14, s15, s11;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R4336 += 1, R4272 += 1, R185 += 1, R186 += 1 };
  s0 -> s2 [0, 65535] { R4336 += 1, R4271 += 1, R4272 += 1 };
  s0 -> s0 [0, 65535] { R4335 += 1, R4336 += 1 };
  s0 -> s3 [70, 70] { R4336 += 1, R4272 += 1, R185 += 1, R186 += 1 };
  s0 -> s4 [70, 70] { R4336 += 1, R4272 += 1, R185 += 1, R186 += 1 };
  s0 -> s1 [71, 65535] { R4336 += 1, R4272 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 69] { R4336 += 1, R4272 += 1, R185 += 1, R186 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R4336 += 1 };
  s1 -> s3 [70, 70] { R4336 += 1, R4272 += 1, R185 += 1, R186 += 1 };
  s1 -> s4 [70, 70] { R4336 += 1, R4272 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [71, 65535] { R4336 += 1, R4272 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [0, 69] { R4336 += 1, R4272 += 1, R185 += 1, R186 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R4336 += 1, R4271 += 1, R4272 += 1 };
  s2 -> s3 [70, 70] { R4336 += 1, R4272 += 1, R185 += 1, R186 += 1 };
  s2 -> s4 [70, 70] { R4336 += 1, R4272 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [71, 65535] { R4336 += 1, R4272 += 1, R185 += 1, R186 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R4336 += 1 };
  s4 -> s5 [0, 65535] { R4336 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4336 += 1, R4272 += 1, R185 += 1, R186 += 1 };
  s5 -> s5 [0, 65535] { R4336 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R4338 += 1, R4274 += 1, R4015 += 1, R4016 += 1 };
  s0 -> s0 [0, 65535] { R4337 += 1, R4338 += 1 };
  s0 -> s2 [0, 65535] { R4338 += 1, R4273 += 1, R4274 += 1 };
  s0 -> s3 [70, 70] { R4338 += 1, R4274 += 1, R4015 += 1, R4016 += 1 };
  s0 -> s4 [70, 70] { R4338 += 1, R4274 += 1, R4015 += 1, R4016 += 1 };
  s0 -> s1 [71, 65535] { R4338 += 1, R4274 += 1, R4015 += 1, R4016 += 1 };
  s1 -> s1 [0, 69] { R4338 += 1, R4274 += 1, R4015 += 1, R4016 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4338 += 1 };
  s1 -> s3 [70, 70] { R4338 += 1, R4274 += 1, R4015 += 1, R4016 += 1 };
  s1 -> s4 [70, 70] { R4338 += 1, R4274 += 1, R4015 += 1, R4016 += 1 };
  s1 -> s1 [71, 65535] { R4338 += 1, R4274 += 1, R4015 += 1, R4016 += 1 };
  s2 -> s1 [0, 69] { R4338 += 1, R4274 += 1, R4015 += 1, R4016 += 1 };
  s2 -> s2 [0, 65535] { R4338 += 1, R4273 += 1, R4274 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R4338 += 1, R4274 += 1, R4015 += 1, R4016 += 1 };
  s2 -> s4 [70, 70] { R4338 += 1, R4274 += 1, R4015 += 1, R4016 += 1 };
  s2 -> s1 [71, 65535] { R4338 += 1, R4274 += 1, R4015 += 1, R4016 += 1 };
  s3 -> s3 [0, 65535] { R4338 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4338 += 1 };
  s4 -> s4 [0, 65535] { R4338 += 1, R4274 += 1, R4015 += 1, R4016 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4338 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R4340 += 1, R4276 += 1, R4184 += 1, R4185 += 1, R4186 += 1 };
  s0 -> s2 [0, 69] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s0 -> s3 [0, 69] { R4340 += 1, R4276 += 1, R4183 += 1, R4184 += 1 };
  s0 -> s4 [0, 65535] { R4340 += 1, R4275 += 1, R4276 += 1 };
  s0 -> s0 [0, 65535] { R4339 += 1, R4340 += 1 };
  s0 -> s5 [70, 70] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s0 -> s6 [70, 70] { R4340 += 1, R4276 += 1, R4184 += 1, R4185 += 1, R4186 += 1 };
  s0 -> s7 [70, 70] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s0 -> s8 [70, 70] { R4340 += 1, R4276 += 1, R4183 += 1, R4184 += 1 };
  s0 -> s9 [70, 70] { R4340 += 1, R4276 += 1, R4183 += 1, R4184 += 1 };
  s0 -> s10 [70, 70] { R4340 += 1, R4276 += 1, R4184 += 1, R4185 += 1, R4186 += 1 };
  s0 -> s2 [71, 74] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s0 -> s1 [71, 65535] { R4340 += 1, R4276 += 1, R4184 += 1, R4185 += 1, R4186 += 1 };
  s0 -> s3 [71, 65535] { R4340 += 1, R4276 += 1, R4183 += 1, R4184 += 1 };
  s0 -> s11 [75, 75] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s0 -> s12 [83, 83] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s0 -> s2 [84, 65535] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s1 -> s1 [0, 69] { R4340 += 1, R4276 += 1, R4184 += 1, R4185 += 1, R4186 += 1 };
  s1 -> s2 [0, 69] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s1 -> s5 [70, 70] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s1 -> s6 [70, 70] { R4340 += 1, R4276 += 1, R4184 += 1, R4185 += 1, R4186 += 1 };
  s1 -> s7 [70, 70] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s1 -> s10 [70, 70] { R4340 += 1, R4276 += 1, R4184 += 1, R4185 += 1, R4186 += 1 };
  s1 -> s2 [71, 74] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s1 -> s1 [71, 65535] { R4340 += 1, R4276 += 1, R4184 += 1, R4185 += 1, R4186 += 1 };
  s1 -> s11 [75, 75] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s1 -> s12 [83, 83] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s1 -> s2 [84, 65535] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s2 -> s2 [0, 69] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s2 -> s5 [70, 70] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s2 -> s7 [70, 70] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s2 -> s2 [71, 74] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s2 -> s11 [75, 75] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s2 -> s12 [83, 83] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s2 -> s2 [84, 65535] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s3 -> s1 [0, 69] { R4340 += 1, R4276 += 1, R4184 += 1, R4185 += 1, R4186 += 1 };
  s3 -> s2 [0, 69] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s3 -> s3 [0, 69] { R4340 += 1, R4276 += 1, R4183 += 1, R4184 += 1 };
  s3 -> s5 [70, 70] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s3 -> s6 [70, 70] { R4340 += 1, R4276 += 1, R4184 += 1, R4185 += 1, R4186 += 1 };
  s3 -> s7 [70, 70] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s3 -> s8 [70, 70] { R4340 += 1, R4276 += 1, R4183 += 1, R4184 += 1 };
  s3 -> s9 [70, 70] { R4340 += 1, R4276 += 1, R4183 += 1, R4184 += 1 };
  s3 -> s10 [70, 70] { R4340 += 1, R4276 += 1, R4184 += 1, R4185 += 1, R4186 += 1 };
  s3 -> s2 [71, 74] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s3 -> s1 [71, 65535] { R4340 += 1, R4276 += 1, R4184 += 1, R4185 += 1, R4186 += 1 };
  s3 -> s3 [71, 65535] { R4340 += 1, R4276 += 1, R4183 += 1, R4184 += 1 };
  s3 -> s11 [75, 75] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s3 -> s12 [83, 83] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s3 -> s2 [84, 65535] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s4 -> s1 [0, 69] { R4340 += 1, R4276 += 1, R4184 += 1, R4185 += 1, R4186 += 1 };
  s4 -> s2 [0, 69] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s4 -> s3 [0, 69] { R4340 += 1, R4276 += 1, R4183 += 1, R4184 += 1 };
  s4 -> s4 [0, 65535] { R4340 += 1, R4275 += 1, R4276 += 1 };
  s4 -> s5 [70, 70] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s4 -> s6 [70, 70] { R4340 += 1, R4276 += 1, R4184 += 1, R4185 += 1, R4186 += 1 };
  s4 -> s7 [70, 70] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s4 -> s8 [70, 70] { R4340 += 1, R4276 += 1, R4183 += 1, R4184 += 1 };
  s4 -> s9 [70, 70] { R4340 += 1, R4276 += 1, R4183 += 1, R4184 += 1 };
  s4 -> s10 [70, 70] { R4340 += 1, R4276 += 1, R4184 += 1, R4185 += 1, R4186 += 1 };
  s4 -> s2 [71, 74] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s4 -> s1 [71, 65535] { R4340 += 1, R4276 += 1, R4184 += 1, R4185 += 1, R4186 += 1 };
  s4 -> s3 [71, 65535] { R4340 += 1, R4276 += 1, R4183 += 1, R4184 += 1 };
  s4 -> s11 [75, 75] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s4 -> s12 [83, 83] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s4 -> s2 [84, 65535] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s5 -> s5 [0, 74] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s5 -> s27 [75, 75] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s5 -> s15 [83, 83] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s5 -> s5 [84, 65535] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s8 -> s5 [0, 74] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s8 -> s8 [0, 65535] { R4340 += 1, R4276 += 1, R4183 += 1, R4184 += 1 };
  s8 -> s10 [0, 65535] { R4340 += 1, R4276 += 1, R4184 += 1, R4185 += 1, R4186 += 1 };
  s8 -> s27 [75, 75] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s8 -> s15 [83, 83] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s8 -> s5 [84, 65535] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s10 -> s5 [0, 74] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s10 -> s10 [0, 65535] { R4340 += 1, R4276 += 1, R4184 += 1, R4185 += 1, R4186 += 1 };
  s10 -> s27 [75, 75] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s10 -> s15 [83, 83] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s10 -> s5 [84, 65535] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s11 -> s11 [0, 69] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s11 -> s26 [70, 70] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s11 -> s27 [70, 70] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s11 -> s11 [71, 75] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s11 -> s18 [83, 83] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s11 -> s11 [84, 65535] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s12 -> s13 [0, 69] { R4340 += 1, R4276 += 1 };
  s12 -> s12 [0, 69] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s12 -> s14 [70, 70] { R4340 += 1, R4276 += 1 };
  s12 -> s15 [70, 70] { R4340 += 1, R4276 += 1, R4184 += 1 };
  s12 -> s16 [70, 70] { R4340 += 1, R4276 += 1, R4184 += 1 };
  s12 -> s17 [70, 70] { R4340 += 1, R4276 += 1 };
  s12 -> s12 [71, 74] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s12 -> s13 [71, 65535] { R4340 += 1, R4276 += 1 };
  s12 -> s12 [71, 65535] { R4340 += 1, R4276 += 1, R4184 += 1 };
  s12 -> s18 [75, 75] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s12 -> s19 [75, 75] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s12 -> s12 [83, 65535] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s13 -> s13 [0, 69] { R4340 += 1, R4276 += 1 };
  s13 -> s13 [0, 65535] { R4340 += 1 };
  s13 -> s24 [0, 65535];
  s13 -> s14 [70, 70] { R4340 += 1, R4276 += 1 };
  s13 -> s17 [70, 70] { R4340 += 1, R4276 += 1 };
  s13 -> s13 [71, 65535] { R4340 += 1, R4276 += 1 };
  s14 -> s14 [0, 65535] { R4340 += 1, R4276 += 1 };
  s14 -> s25 [0, 65535] { R4340 += 1 };
  s14 -> s24 [0, 65535];
  s15 -> s15 [0, 74] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s15 -> s14 [0, 65535] { R4340 += 1, R4276 += 1 };
  s15 -> s15 [0, 65535] { R4340 += 1, R4276 += 1, R4184 += 1 };
  s15 -> s22 [75, 75] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s15 -> s21 [75, 75] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s15 -> s15 [83, 65535] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s17 -> s17 [0, 65535] { R4340 += 1 };
  s17 -> s24 [0, 65535];
  s18 -> s18 [0, 69] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s18 -> s13 [0, 69] { R4340 += 1, R4276 += 1 };
  s18 -> s14 [70, 70] { R4340 += 1, R4276 += 1 };
  s18 -> s22 [70, 70] { R4340 += 1, R4276 += 1, R4184 += 1 };
  s18 -> s23 [70, 70] { R4340 += 1, R4276 += 1, R4184 += 1 };
  s18 -> s17 [70, 70] { R4340 += 1, R4276 += 1 };
  s18 -> s18 [71, 75] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s18 -> s18 [71, 65535] { R4340 += 1, R4276 += 1, R4184 += 1 };
  s18 -> s13 [71, 65535] { R4340 += 1, R4276 += 1 };
  s18 -> s18 [83, 65535] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s19 -> s13 [0, 69] { R4340 += 1, R4276 += 1 };
  s19 -> s19 [0, 69] { R4340 += 1, R4276 += 1, R4184 += 1 };
  s19 -> s14 [70, 70] { R4340 += 1, R4276 += 1 };
  s19 -> s20 [70, 70] { R4340 += 1, R4276 += 1, R4184 += 1 };
  s19 -> s21 [70, 70] { R4340 += 1, R4276 += 1, R4184 += 1 };
  s19 -> s17 [70, 70] { R4340 += 1, R4276 += 1 };
  s19 -> s13 [71, 65535] { R4340 += 1, R4276 += 1 };
  s19 -> s19 [71, 65535] { R4340 += 1, R4276 += 1, R4184 += 1 };
  s21 -> s14 [0, 65535] { R4340 += 1, R4276 += 1 };
  s21 -> s21 [0, 65535] { R4340 += 1, R4276 += 1, R4184 += 1 };
  s22 -> s22 [0, 75] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s22 -> s14 [0, 65535] { R4340 += 1, R4276 += 1 };
  s22 -> s22 [0, 65535] { R4340 += 1, R4276 += 1, R4184 += 1 };
  s22 -> s22 [83, 65535] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s24 -> s24 [0, 65535];
  s25 -> s25 [0, 65535] { R4340 += 1 };
  s25 -> s24 [0, 65535];
  s27 -> s27 [0, 75] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s27 -> s22 [83, 83] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  s27 -> s27 [84, 65535] { R4340 += 1, R4276 += 1, R4184 += 1, R4186 += 1 };
  accepting s17, s24, s13, s14, s25;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
constraint R3 = R4340 && R25 - R4340 = -1 && R26 = R4340 && R27 - R4340 = -1 && R28 = R4340 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R4188 + -1*R4184 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R4188 + -1*R4184 - R130 = 0 && R129 + R4187 + R4183 = 0 && R131 + R4189 + R4185 = 0 && R132 + R4190 + R4186 = 0 && R4251 = 0 && R4252 = 0 && R4261 = 0 && R4262 = 0 && R4269 = 0 && R4270 = 0 && R4275 = 0 && R4276 = 0 && R4277 = 0 && R4278 = R4340 && R4279 = 0 && R4280 = R4340 && R4281 = 0 && R4282 = R4340 && R4283 = 0 && R4284 = R4340 && R4285 = 0 && R4286 = R4340 && R4287 = 0 && R4288 = R4340 && R4289 = 0 && R4290 = R4340 && R4291 = 0 && R4292 = R4340 && R4293 = 0 && R4294 = R4340 && R4295 = 0 && R4296 = R4340 && R4297 = 0 && R4298 = R4340 && R4299 = 0 && R4300 = R4340 && R4301 = 0 && R4302 = R4340 && R4303 = 0 && R4304 = R4340 && R4305 = 0 && R4306 = R4340 && R4307 = 0 && R4308 = R4340 && R4309 = 0 && R4310 = R4340 && R4311 = 0 && R4312 = R4340 && R4313 = 0 && R4314 = R4340 && R4315 = 0 && R4316 = R4340 && R4317 = 0 && R4318 = R4340 && R4319 = 0 && R4320 = R4340 && R4321 = 0 && R4322 = R4340 && R4323 = 0 && R4324 = R4340 && R4325 = 0 && R4326 = R4340 && R4327 = 0 && R4328 = R4340 && R4329 = 0 && R4330 = R4340 && R4331 = 0 && R4332 = R4340 && R4333 = 0 && R4334 = R4340 && R4335 = 0 && R4336 = R4340 && R4337 = 0 && R4338 = R4340 && R4339 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R4188 + -1*R4184 - R130 < 1 && 0 < R4340 && (R2 != 0 || R22 = 0 || (R4191 = 0 && R4192 = 0)) && (R2 != 0 || R22 = 0 || (R4193 = 0 && R4194 = 0)) && (R2 != 0 || R22 = 0 || (R4195 = 0 && R4196 = 0)) && (R2 != 0 || R22 = 0 || (R4197 = 0 && R4198 = 0)) && (R2 != 0 || R22 = 0 || (R4199 = 0 && R4200 = 0)) && (R2 != 0 || R22 = 0 || (R4201 = 0 && R4202 = 0)) && (R2 != 0 || R22 = 0 || (R4203 = 0 && R4204 = 0)) && (R2 != 0 || R22 = 0 || (R4205 = 0 && R4206 = 0)) && (R2 != 0 || R22 = 0 || (R4207 = 0 && R4208 = 0)) && (R2 != 0 || R22 = 0 || (R4209 = 0 && R4210 = 0)) && (R2 != 0 || R22 = 0 || (R4211 = 0 && R4212 = 0)) && (R2 != 0 || R22 = 0 || (R4213 = 0 && R4214 = 0)) && (R2 != 0 || R22 = 0 || (R4215 = 0 && R4216 = 0)) && (R2 != 0 || R22 = 0 || (R4217 = 0 && R4218 = 0)) && (R2 != 0 || R22 = 0 || (R4219 = 0 && R4220 = 0)) && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R4188 + -1*R4184 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R191 + R187 = 0 && R114 + R192 + R188 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R4188 + -1*R4184 - R130 = 0 || R130 + R4188 + R4184 < 1) && (R81 + R158 + R155 = 0 || R130 + R4188 + R4184 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R4188 + -1*R4184 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R4188 + R4184 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R4188 + -1*R4184 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R4188 + R4184 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R4188 + -1*R4184 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R4188 + R4184 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 != 0 || R112 + R190 + R186 + -1*R4188 + -1*R4184 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R4188 + R4184 = 0)) && (R113 + R191 + R187 != 0 || R83 + R160 + R157 + -1*R192 + -1*R188 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R4020 + R4015 != 0 || R120 + R4021 + R4016 + -1*R4188 + -1*R4184 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R4188 + R4184 = 0)) && (R4191 != 0 || R2 = R4192 || R2 < 1) && (R4193 != 0 || R2 = R4194 || R2 < 1) && (R4195 != 0 || R2 = R4196 || R2 < 1) && (R4197 != 0 || R2 = R4198 || R2 < 1) && (R4199 != 0 || R2 = R4200 || R2 < 1) && (R4201 != 0 || R2 = R4202 || R2 < 1) && (R4203 != 0 || R2 = R4204 || R2 < 1) && (R4205 != 0 || R2 = R4206 || R2 < 1) && (R4207 != 0 || R2 = R4208 || R2 < 1) && (R4209 != 0 || R2 = R4210 || R2 < 1) && (R4211 != 0 || R2 = R4212 || R2 < 1) && (R4213 != 0 || R2 = R4214 || R2 < 1) && (R4215 != 0 || R2 = R4216 || R2 < 1) && (R4217 != 0 || R2 = R4218 || R2 < 1) && (R4219 != 0 || R2 = R4220 || R2 < 1) && (R23 = 0 || (R4249 = 0 && R4250 = 0)) && (R23 = 0 || (R4253 = 0 && R4254 = 0)) && (R23 = 0 || (R4255 = 0 && R4256 = 0)) && (R23 = 0 || (R4257 = 0 && R4258 = 0)) && (R23 = 0 || (R4259 = 0 && R4260 = 0)) && (R23 = 0 || (R4263 = 0 && R4264 = 0)) && (R23 = 0 || (R4265 = 0 && R4266 = 0)) && (R23 = 0 || (R4267 = 0 && R4268 = 0)) && (R23 = 0 || (R4271 = 0 && R4272 = 0)) && (R23 = 0 || (R4273 = 0 && R4274 = 0)) && (R24 = 0 || (R4221 = 0 && R4222 = 0)) && (R24 = 0 || (R4223 = 0 && R4224 = 0)) && (R24 = 0 || (R4225 = 0 && R4226 = 0)) && (R24 = 0 || (R4227 = 0 && R4228 = 0)) && (R24 = 0 || (R4229 = 0 && R4230 = 0)) && (R24 = 0 || (R4231 = 0 && R4232 = 0)) && (R24 = 0 || (R4233 = 0 && R4234 = 0)) && (R24 = 0 || (R4235 = 0 && R4236 = 0)) && (R24 = 0 || (R4237 = 0 && R4238 = 0)) && (R24 = 0 || (R4239 = 0 && R4240 = 0)) && (R24 = 0 || (R4241 = 0 && R4242 = 0)) && (R24 = 0 || (R4243 = 0 && R4244 = 0)) && (R24 = 0 || (R4245 = 0 && R4246 = 0)) && (R24 = 0 || (R4247 = 0 && R4248 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R4188 + R4184 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R4188 + R4184 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R4188 + R4184 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 = 0 || (R83 + R160 + R157 = 0 && R130 + R4188 + R4184 = 0)) && (R113 + R191 + R187 = 0 || R83 + R160 + R157 < 1) && (R119 + R4020 + R4015 = 0 || (R83 + R160 + R157 = 0 && R130 + R4188 + R4184 = 0)) && (R123 + R4024 + R4019 = 0 || (R121 + R4022 + R4017 = 0 && R122 + R4023 + R4018 = 0)) && (R4191 = 0 || R2 < 1) && (R4193 = 0 || R2 < 1) && (R4195 = 0 || R2 < 1) && (R4197 = 0 || R2 < 1) && (R4199 = 0 || R2 < 1) && (R4201 = 0 || R2 < 1) && (R4203 = 0 || R2 < 1) && (R4205 = 0 || R2 < 1) && (R4207 = 0 || R2 < 1) && (R4209 = 0 || R2 < 1) && (R4211 = 0 || R2 < 1) && (R4213 = 0 || R2 < 1) && (R4215 = 0 || R2 < 1) && (R4217 = 0 || R2 < 1) && (R4219 = 0 || R2 < 1);
// End of Parikh automata intersection problem
