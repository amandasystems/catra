// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R2, R22, R23, R24, R25, R26, R27, R2741, R2742, R2743, R2744, R2745, R2746, R2747, R2748, R2749, R2750, R28, R29, R3, R30, R31, R32, R3225, R3226, R3227, R3228, R3229, R3230, R3231, R3232, R3233, R3234, R3235, R3236, R3237, R3238, R3239, R3240, R3241, R3242, R3243, R3244, R3245, R3246, R3247, R3248, R3249, R3250, R3251, R3252, R3253, R3254, R3255, R3256, R3257, R3258, R3259, R3260, R3261, R3262, R3263, R3264, R3265, R3266, R3267, R3268, R3269, R3270, R3271, R3272, R3273, R3274, R3275, R3276, R3277, R3278, R3279, R3280, R3281, R3282, R3283, R3284, R3285, R3286, R3287, R3288, R3289, R3290, R3291, R3292, R3293, R3294, R3295, R3296, R3297, R3298, R3299, R3300, R3301, R3302, R3303, R3304, R3305, R3306, R3307, R3308, R3309, R3310, R3311, R3312, R3313, R3314, R3315, R3316, R3317, R3318, R3319, R3320, R3321, R3322, R3323, R3324, R3325, R3326, R3327, R3328, R3329, R3330, R3331, R3332, R3333, R3334, R3335, R3336, R3337, R3338, R3339, R3340, R3341, R3342, R3343, R3344, R3345, R3346, R3347, R3348, R3349, R3350, R3351, R3352, R3353, R3354, R3355, R3356, R3357, R3358, R3359, R3360, R3361, R3362, R3363, R3364, R3365, R3366, R3367, R3368, R3369, R3370, R3371, R3372, R3373, R3374, R3375, R3376, R3377, R3378, R3379, R3380, R3381, R3382, R4, R5, R63, R65, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R26 += 1 };
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R30 += 1 };
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R3264 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R3263 += 1, R3264 += 1 };
  s1 -> s1 [0, 65535] { R3264 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R3266 += 1 };
  s0 -> s0 [0, 65535] { R3265 += 1, R3266 += 1 };
  s0 -> s2 [70, 70] { R3266 += 1 };
  s0 -> s3 [70, 70] { R3266 += 1 };
  s0 -> s1 [76, 65535] { R3266 += 1 };
  s1 -> s1 [0, 69] { R3266 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3266 += 1 };
  s1 -> s3 [70, 70] { R3266 += 1 };
  s1 -> s1 [76, 65535] { R3266 += 1 };
  s2 -> s2 [0, 70] { R3266 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R3266 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R3268 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R3267 += 1, R3268 += 1 };
  s0 -> s2 [70, 70] { R3268 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R3268 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R3268 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R3268 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3268 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R3268 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R3268 += 1, R63 += 1 };
  s2 -> s2 [0, 65535] { R3268 += 1, R63 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R3270 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R3269 += 1, R3270 += 1 };
  s0 -> s2 [70, 70] { R3270 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R3270 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R3270 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R3270 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3270 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R3270 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R3270 += 1, R65 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R3270 += 1, R65 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R3272 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R3271 += 1, R3272 += 1 };
  s0 -> s2 [70, 70] { R3272 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R3272 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R3272 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R3272 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3272 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R3272 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R3272 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3272 += 1, R67 += 1, R68 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R3274 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R3273 += 1, R3274 += 1 };
  s0 -> s2 [70, 70] { R3274 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R3274 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R3274 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R3274 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3274 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R3274 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R3274 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3274 += 1, R73 += 1, R74 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R3276 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R3275 += 1, R3276 += 1 };
  s0 -> s2 [70, 70] { R3276 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R3276 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R3276 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R3276 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3276 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R3276 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R3276 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3276 += 1, R77 += 1, R78 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R3278 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R3277 += 1, R3278 += 1 };
  s0 -> s2 [70, 70] { R3278 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R3278 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R3278 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R3278 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3278 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R3278 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R3278 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3278 += 1, R81 += 1, R82 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R3280 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R3279 += 1, R3280 += 1 };
  s0 -> s2 [70, 70] { R3280 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R3280 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R3280 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R3280 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3280 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R3280 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R3280 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3280 += 1, R87 += 1, R88 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R3282 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R3281 += 1, R3282 += 1 };
  s0 -> s2 [70, 70] { R3282 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R3282 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R3282 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R3282 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3282 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R3282 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R3282 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R3282 += 1, R93 += 1, R94 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R3284 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R3283 += 1, R3284 += 1 };
  s0 -> s2 [70, 70] { R3284 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R3284 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R3284 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R3284 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3284 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R3284 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R3284 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535] { R3284 += 1, R101 += 1, R102 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R3286 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R3285 += 1, R3286 += 1 };
  s0 -> s2 [70, 70] { R3286 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R3286 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R3286 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R3286 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3286 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R3286 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R3286 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535] { R3286 += 1, R111 += 1, R112 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R3288 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R3287 += 1, R3288 += 1 };
  s0 -> s2 [70, 70] { R3288 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R3288 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R3288 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R3288 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3288 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R3288 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R3288 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3288 += 1, R119 += 1, R120 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R3290 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R3289 += 1, R3290 += 1 };
  s0 -> s2 [70, 70] { R3290 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R3290 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R3290 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R3290 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3290 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R3290 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R3290 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535] { R3290 += 1, R129 += 1, R130 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R3320 += 1 };
  s0 -> s0 [0, 65535] { R3319 += 1, R3320 += 1 };
  s0 -> s2 [70, 70] { R3320 += 1 };
  s0 -> s1 [71, 65535] { R3320 += 1 };
  s1 -> s1 [0, 69] { R3320 += 1 };
  s1 -> s2 [70, 70] { R3320 += 1 };
  s1 -> s1 [71, 65535] { R3320 += 1 };
  s2 -> s2 [0, 65535] { R3320 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R3321 += 1, R3322 += 1 };
  s0 -> s1 [0, 65535] { R3322 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R3322 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R3324 += 1 };
  s0 -> s2 [0, 65535] { R3324 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R3323 += 1, R3324 += 1 };
  s0 -> s3 [70, 70] { R3324 += 1 };
  s0 -> s1 [71, 65535] { R3324 += 1 };
  s1 -> s1 [0, 69] { R3324 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R3324 += 1 };
  s1 -> s1 [71, 65535] { R3324 += 1 };
  s2 -> s1 [0, 69] { R3324 += 1 };
  s2 -> s2 [0, 65535] { R3324 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R3324 += 1 };
  s2 -> s1 [71, 65535] { R3324 += 1 };
  s3 -> s3 [0, 65535] { R3324 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R3326 += 1, R3234 += 1 };
  s0 -> s0 [0, 65535] { R3325 += 1, R3326 += 1 };
  s0 -> s2 [0, 65535] { R3326 += 1, R3233 += 1, R3234 += 1 };
  s0 -> s1 [71, 65535] { R3326 += 1, R3234 += 1 };
  s1 -> s1 [0, 69] { R3326 += 1, R3234 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3326 += 1 };
  s1 -> s1 [71, 65535] { R3326 += 1, R3234 += 1 };
  s2 -> s1 [0, 69] { R3326 += 1, R3234 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R3326 += 1, R3233 += 1, R3234 += 1 };
  s2 -> s1 [71, 65535] { R3326 += 1, R3234 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R3328 += 1, R3235 += 1, R3236 += 1 };
  s0 -> s0 [0, 65535] { R3327 += 1, R3328 += 1 };
  s0 -> s2 [0, 65535] { R3328 += 1, R3236 += 1, R22 += 1 };
  s1 -> s1 [0, 65535] { R3328 += 1, R3235 += 1, R3236 += 1 };
  s1 -> s2 [0, 65535] { R3328 += 1, R3236 += 1, R22 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R3328 += 1 };
  s2 -> s2 [0, 65535] { R3328 += 1, R3236 += 1, R22 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3328 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R3330 += 1, R3238 += 1 };
  s0 -> s2 [0, 65535] { R3330 += 1, R3237 += 1, R3238 += 1 };
  s0 -> s0 [0, 65535] { R3329 += 1, R3330 += 1 };
  s0 -> s1 [75, 65535] { R3330 += 1, R3238 += 1 };
  s1 -> s1 [0, 70] { R3330 += 1, R3238 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3330 += 1 };
  s1 -> s1 [75, 65535] { R3330 += 1, R3238 += 1 };
  s2 -> s1 [0, 70] { R3330 += 1, R3238 += 1 };
  s2 -> s2 [0, 65535] { R3330 += 1, R3237 += 1, R3238 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R3330 += 1, R3238 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s0 [0, 65535] { R3331 += 1, R3332 += 1 };
  s0 -> s1 [0, 65535] { R3332 += 1, R3240 += 1, R138 += 1 };
  s0 -> s2 [0, 65535] { R3332 += 1, R3239 += 1, R3240 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3332 += 1, R3240 += 1, R138 += 1 };
  s1 -> s4 [0, 65535] { R3332 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R3332 += 1, R3240 += 1, R138 += 1 };
  s2 -> s2 [0, 65535] { R3332 += 1, R3239 += 1, R3240 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3332 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R3334 += 1, R3242 += 1 };
  s0 -> s2 [0, 65535] { R3334 += 1, R3242 += 1, R140 += 1 };
  s0 -> s3 [0, 65535] { R3334 += 1, R3241 += 1, R3242 += 1 };
  s0 -> s0 [0, 65535] { R3333 += 1, R3334 += 1 };
  s0 -> s1 [76, 65535] { R3334 += 1, R3242 += 1 };
  s1 -> s1 [0, 74] { R3334 += 1, R3242 += 1 };
  s1 -> s1 [0, 65535] { R3334 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [76, 65535] { R3334 += 1, R3242 += 1 };
  s2 -> s1 [0, 74] { R3334 += 1, R3242 += 1 };
  s2 -> s2 [0, 65535] { R3334 += 1, R3242 += 1, R140 += 1 };
  s2 -> s5 [0, 65535] { R3334 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [76, 65535] { R3334 += 1, R3242 += 1 };
  s3 -> s1 [0, 74] { R3334 += 1, R3242 += 1 };
  s3 -> s2 [0, 65535] { R3334 += 1, R3242 += 1, R140 += 1 };
  s3 -> s3 [0, 65535] { R3334 += 1, R3241 += 1, R3242 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [76, 65535] { R3334 += 1, R3242 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3334 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R3336 += 1, R3244 += 1, R144 += 1, R145 += 1 };
  s0 -> s0 [0, 65535] { R3335 += 1, R3336 += 1 };
  s0 -> s2 [0, 65535] { R3336 += 1, R3244 += 1, R145 += 1, R146 += 1 };
  s0 -> s3 [0, 65535] { R3336 += 1, R3243 += 1, R3244 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R3336 += 1, R3244 += 1, R144 += 1, R145 += 1 };
  s1 -> s6 [0, 65535] { R3336 += 1 };
  s1 -> s2 [0, 65535] { R3336 += 1, R3244 += 1, R145 += 1, R146 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R3336 += 1, R3244 += 1 };
  s2 -> s6 [0, 65535] { R3336 += 1 };
  s2 -> s2 [0, 65535] { R3336 += 1, R3244 += 1, R145 += 1, R146 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R3336 += 1, R3244 += 1, R144 += 1, R145 += 1 };
  s3 -> s2 [0, 65535] { R3336 += 1, R3244 += 1, R145 += 1, R146 += 1 };
  s3 -> s3 [0, 65535] { R3336 += 1, R3243 += 1, R3244 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3336 += 1, R3244 += 1 };
  s5 -> s6 [0, 65535] { R3336 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R3336 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R3338 += 1, R3246 += 1, R150 += 1 };
  s0 -> s2 [0, 65535] { R3338 += 1, R3245 += 1, R3246 += 1 };
  s0 -> s3 [0, 65535] { R3338 += 1, R3246 += 1, R149 += 1, R150 += 1 };
  s0 -> s0 [0, 65535] { R3337 += 1, R3338 += 1 };
  s0 -> s4 [75, 75] { R3338 += 1, R3246 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R3338 += 1, R3246 += 1, R150 += 1 };
  s0 -> s1 [84, 65535] { R3338 += 1, R3246 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R3338 += 1, R3246 += 1, R150 += 1 };
  s1 -> s1 [0, 65535] { R3338 += 1, R3246 += 1 };
  s1 -> s6 [0, 65535] { R3338 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [75, 75] { R3338 += 1, R3246 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R3338 += 1, R3246 += 1, R150 += 1 };
  s1 -> s1 [84, 65535] { R3338 += 1, R3246 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R3338 += 1, R3246 += 1, R150 += 1 };
  s2 -> s2 [0, 65535] { R3338 += 1, R3245 += 1, R3246 += 1 };
  s2 -> s3 [0, 65535] { R3338 += 1, R3246 += 1, R149 += 1, R150 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [75, 75] { R3338 += 1, R3246 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R3338 += 1, R3246 += 1, R150 += 1 };
  s2 -> s1 [84, 65535] { R3338 += 1, R3246 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R3338 += 1, R3246 += 1, R150 += 1 };
  s3 -> s6 [0, 65535] { R3338 += 1 };
  s3 -> s3 [0, 65535] { R3338 += 1, R3246 += 1, R149 += 1, R150 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [75, 75] { R3338 += 1, R3246 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R3338 += 1, R3246 += 1, R150 += 1 };
  s3 -> s1 [84, 65535] { R3338 += 1, R3246 += 1, R150 += 1 };
  s4 -> s4 [0, 75] { R3338 += 1, R3246 += 1, R150 += 1 };
  s4 -> s4 [0, 65535] { R3338 += 1, R3246 += 1 };
  s4 -> s6 [0, 65535] { R3338 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [84, 65535] { R3338 += 1, R3246 += 1, R150 += 1 };
  s5 -> s6 [0, 65535] { R3338 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R3338 += 1, R3246 += 1 };
  s6 -> s6 [0, 65535] { R3338 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R3340 += 1, R3248 += 1, R154 += 1 };
  s0 -> s0 [0, 65535] { R3339 += 1, R3340 += 1 };
  s0 -> s2 [0, 65535] { R3340 += 1, R3248 += 1 };
  s0 -> s3 [0, 65535] { R3340 += 1, R3247 += 1, R3248 += 1 };
  s1 -> s1 [0, 65535] { R3340 += 1, R3248 += 1, R154 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R3340 += 1, R3248 += 1 };
  s1 -> s5 [0, 65535] { R3340 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3340 += 1, R3248 += 1 };
  s2 -> s5 [0, 65535] { R3340 += 1 };
  s3 -> s1 [0, 65535] { R3340 += 1, R3248 += 1, R154 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R3340 += 1, R3248 += 1 };
  s3 -> s3 [0, 65535] { R3340 += 1, R3247 += 1, R3248 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3340 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R3342 += 1, R3250 += 1, R159 += 1, R160 += 1 };
  s0 -> s2 [0, 65535] { R3342 += 1, R3249 += 1, R3250 += 1 };
  s0 -> s0 [0, 65535] { R3341 += 1, R3342 += 1 };
  s0 -> s3 [0, 65535] { R3342 += 1, R3250 += 1, R158 += 1, R159 += 1 };
  s1 -> s1 [0, 65535] { R3342 += 1, R3250 += 1, R159 += 1, R160 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R3342 += 1, R3250 += 1 };
  s1 -> s5 [0, 65535] { R3342 += 1 };
  s2 -> s1 [0, 65535] { R3342 += 1, R3250 += 1, R159 += 1, R160 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3342 += 1, R3249 += 1, R3250 += 1 };
  s2 -> s3 [0, 65535] { R3342 += 1, R3250 += 1, R158 += 1, R159 += 1 };
  s3 -> s1 [0, 65535] { R3342 += 1, R3250 += 1, R159 += 1, R160 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R3342 += 1 };
  s3 -> s3 [0, 65535] { R3342 += 1, R3250 += 1, R158 += 1, R159 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3342 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R3342 += 1, R3250 += 1 };
  s6 -> s5 [0, 65535] { R3342 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R3344 += 1, R3252 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R3344 += 1, R3252 += 1, R165 += 1, R166 += 1 };
  s0 -> s3 [0, 65535] { R3344 += 1, R3252 += 1, R164 += 1, R165 += 1 };
  s0 -> s0 [0, 65535] { R3343 += 1, R3344 += 1 };
  s0 -> s4 [0, 65535] { R3344 += 1, R3251 += 1, R3252 += 1 };
  s0 -> s1 [76, 65535] { R3344 += 1, R3252 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R3344 += 1, R3252 += 1, R165 += 1 };
  s1 -> s6 [0, 65535] { R3344 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3344 += 1, R3252 += 1 };
  s1 -> s1 [76, 65535] { R3344 += 1, R3252 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R3344 += 1, R3252 += 1, R165 += 1 };
  s2 -> s6 [0, 65535] { R3344 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3344 += 1, R3252 += 1, R165 += 1, R166 += 1 };
  s2 -> s7 [0, 65535] { R3344 += 1, R3252 += 1 };
  s2 -> s1 [76, 65535] { R3344 += 1, R3252 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R3344 += 1, R3252 += 1, R165 += 1 };
  s3 -> s6 [0, 65535] { R3344 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R3344 += 1, R3252 += 1, R165 += 1, R166 += 1 };
  s3 -> s3 [0, 65535] { R3344 += 1, R3252 += 1, R164 += 1, R165 += 1 };
  s3 -> s1 [76, 65535] { R3344 += 1, R3252 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R3344 += 1, R3252 += 1, R165 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R3344 += 1, R3252 += 1, R165 += 1, R166 += 1 };
  s4 -> s3 [0, 65535] { R3344 += 1, R3252 += 1, R164 += 1, R165 += 1 };
  s4 -> s4 [0, 65535] { R3344 += 1, R3251 += 1, R3252 += 1 };
  s4 -> s1 [76, 65535] { R3344 += 1, R3252 += 1, R165 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3344 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R3344 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R3344 += 1, R3252 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R3346 += 1, R3254 += 1, R172 += 1, R174 += 1 };
  s0 -> s2 [0, 65535] { R3346 += 1, R3254 += 1, R171 += 1, R172 += 1 };
  s0 -> s3 [0, 65535] { R3346 += 1, R3253 += 1, R3254 += 1 };
  s0 -> s0 [0, 65535] { R3345 += 1, R3346 += 1 };
  s0 -> s4 [0, 65535] { R3346 += 1, R3254 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s1 [76, 65535] { R3346 += 1, R3254 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R3346 += 1, R3254 += 1, R172 += 1, R174 += 1 };
  s1 -> s5 [0, 65535] { R3346 += 1, R3254 += 1 };
  s1 -> s6 [0, 65535] { R3346 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R3346 += 1, R3254 += 1, R172 += 1 };
  s1 -> s1 [76, 65535] { R3346 += 1, R3254 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R3346 += 1, R3254 += 1, R172 += 1, R174 += 1 };
  s2 -> s2 [0, 65535] { R3346 += 1, R3254 += 1, R171 += 1, R172 += 1 };
  s2 -> s6 [0, 65535] { R3346 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [0, 65535] { R3346 += 1, R3254 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s1 [76, 65535] { R3346 += 1, R3254 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R3346 += 1, R3254 += 1, R172 += 1, R174 += 1 };
  s3 -> s2 [0, 65535] { R3346 += 1, R3254 += 1, R171 += 1, R172 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R3346 += 1, R3253 += 1, R3254 += 1 };
  s3 -> s4 [0, 65535] { R3346 += 1, R3254 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s1 [76, 65535] { R3346 += 1, R3254 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R3346 += 1, R3254 += 1, R172 += 1, R174 += 1 };
  s4 -> s5 [0, 65535] { R3346 += 1, R3254 += 1 };
  s4 -> s6 [0, 65535] { R3346 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R3346 += 1, R3254 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s1 [76, 65535] { R3346 += 1, R3254 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535] { R3346 += 1, R3254 += 1 };
  s5 -> s6 [0, 65535] { R3346 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R3346 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R3348 += 1, R3256 += 1, R181 += 1 };
  s0 -> s2 [0, 65535] { R3348 += 1, R3255 += 1, R3256 += 1 };
  s0 -> s3 [0, 65535] { R3348 += 1, R3256 += 1 };
  s0 -> s0 [0, 65535] { R3347 += 1, R3348 += 1 };
  s1 -> s1 [0, 65535] { R3348 += 1, R3256 += 1, R181 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s3 [0, 65535] { R3348 += 1, R3256 += 1 };
  s1 -> s5 [0, 65535] { R3348 += 1 };
  s2 -> s1 [0, 65535] { R3348 += 1, R3256 += 1, R181 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3348 += 1, R3255 += 1, R3256 += 1 };
  s2 -> s3 [0, 65535] { R3348 += 1, R3256 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3348 += 1, R3256 += 1 };
  s3 -> s5 [0, 65535] { R3348 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3348 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R3350 += 1, R3258 += 1, R190 += 1, R192 += 1 };
  s0 -> s2 [0, 65535] { R3350 += 1, R3258 += 1, R189 += 1, R190 += 1 };
  s0 -> s0 [0, 65535] { R3349 += 1, R3350 += 1 };
  s0 -> s3 [0, 65535] { R3350 += 1, R3257 += 1, R3258 += 1 };
  s0 -> s4 [0, 65535] { R3350 += 1, R3258 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s0 -> s1 [83, 65535] { R3350 += 1, R3258 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 75] { R3350 += 1, R3258 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 65535] { R3350 += 1, R3258 += 1, R190 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R3350 += 1, R3258 += 1 };
  s1 -> s7 [0, 65535] { R3350 += 1 };
  s1 -> s1 [83, 65535] { R3350 += 1, R3258 += 1, R190 += 1, R192 += 1 };
  s2 -> s1 [0, 75] { R3350 += 1, R3258 += 1, R190 += 1, R192 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3350 += 1, R3258 += 1, R189 += 1, R190 += 1 };
  s2 -> s7 [0, 65535] { R3350 += 1 };
  s2 -> s4 [0, 65535] { R3350 += 1, R3258 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s2 -> s1 [83, 65535] { R3350 += 1, R3258 += 1, R190 += 1, R192 += 1 };
  s3 -> s1 [0, 75] { R3350 += 1, R3258 += 1, R190 += 1, R192 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R3350 += 1, R3258 += 1, R189 += 1, R190 += 1 };
  s3 -> s3 [0, 65535] { R3350 += 1, R3257 += 1, R3258 += 1 };
  s3 -> s4 [0, 65535] { R3350 += 1, R3258 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s3 -> s1 [83, 65535] { R3350 += 1, R3258 += 1, R190 += 1, R192 += 1 };
  s4 -> s1 [0, 75] { R3350 += 1, R3258 += 1, R190 += 1, R192 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3350 += 1, R3258 += 1 };
  s4 -> s7 [0, 65535] { R3350 += 1 };
  s4 -> s4 [0, 65535] { R3350 += 1, R3258 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s4 -> s1 [83, 65535] { R3350 += 1, R3258 += 1, R190 += 1, R192 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3350 += 1, R3258 += 1 };
  s6 -> s7 [0, 65535] { R3350 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R3350 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R3352 += 1, R3260 += 1, R2747 += 1 };
  s0 -> s0 [0, 65535] { R3351 += 1, R3352 += 1 };
  s0 -> s2 [0, 65535] { R3352 += 1, R3260 += 1 };
  s0 -> s3 [0, 65535] { R3352 += 1, R3259 += 1, R3260 += 1 };
  s1 -> s1 [0, 65535] { R3352 += 1, R3260 += 1, R2747 += 1 };
  s1 -> s2 [0, 65535] { R3352 += 1, R3260 += 1 };
  s1 -> s5 [0, 65535] { R3352 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3352 += 1, R3260 += 1 };
  s2 -> s5 [0, 65535] { R3352 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R3352 += 1, R3260 += 1, R2747 += 1 };
  s3 -> s2 [0, 65535] { R3352 += 1, R3260 += 1 };
  s3 -> s3 [0, 65535] { R3352 += 1, R3259 += 1, R3260 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3352 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 65535] { R3354 += 1, R3262 += 1, R3230 += 1 };
  s0 -> s2 [0, 65535] { R3354 += 1, R3262 += 1 };
  s0 -> s0 [0, 65535] { R3353 += 1, R3354 += 1 };
  s0 -> s3 [0, 65535] { R3354 += 1, R3261 += 1, R3262 += 1 };
  s1 -> s1 [0, 65535] { R3354 += 1, R3262 += 1, R3230 += 1 };
  s1 -> s2 [0, 65535] { R3354 += 1, R3262 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R3354 += 1 };
  s2 -> s2 [0, 65535] { R3354 += 1, R3262 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R3354 += 1 };
  s3 -> s1 [0, 65535] { R3354 += 1, R3262 += 1, R3230 += 1 };
  s3 -> s2 [0, 65535] { R3354 += 1, R3262 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3354 += 1, R3261 += 1, R3262 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3354 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65535] { R3356 += 1, R3292 += 1, R23 += 1 };
  s0 -> s2 [0, 65535] { R3356 += 1, R3291 += 1, R3292 += 1 };
  s0 -> s0 [0, 65535] { R3355 += 1, R3356 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3356 += 1, R3292 += 1, R23 += 1 };
  s1 -> s4 [0, 65535] { R3356 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R3356 += 1, R3292 += 1, R23 += 1 };
  s2 -> s2 [0, 65535] { R3356 += 1, R3291 += 1, R3292 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3356 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R3358 += 1, R3294 += 1 };
  s0 -> s0 [0, 65535] { R3357 += 1, R3358 += 1 };
  s0 -> s2 [0, 65535] { R3358 += 1, R3293 += 1, R3294 += 1 };
  s0 -> s3 [70, 70] { R3358 += 1, R3294 += 1 };
  s0 -> s4 [70, 70] { R3358 += 1, R3294 += 1 };
  s0 -> s5 [75, 75] { R3358 += 1, R3294 += 1 };
  s0 -> s1 [76, 65535] { R3358 += 1, R3294 += 1 };
  s1 -> s1 [0, 69] { R3358 += 1, R3294 += 1 };
  s1 -> s3 [70, 70] { R3358 += 1, R3294 += 1 };
  s1 -> s4 [70, 70] { R3358 += 1, R3294 += 1 };
  s1 -> s5 [75, 75] { R3358 += 1, R3294 += 1 };
  s1 -> s1 [76, 65535] { R3358 += 1, R3294 += 1 };
  s2 -> s1 [0, 69] { R3358 += 1, R3294 += 1 };
  s2 -> s2 [0, 65535] { R3358 += 1, R3293 += 1, R3294 += 1 };
  s2 -> s3 [70, 70] { R3358 += 1, R3294 += 1 };
  s2 -> s4 [70, 70] { R3358 += 1, R3294 += 1 };
  s2 -> s5 [75, 75] { R3358 += 1, R3294 += 1 };
  s2 -> s1 [76, 65535] { R3358 += 1, R3294 += 1 };
  s4 -> s4 [0, 70] { R3358 += 1, R3294 += 1 };
  s4 -> s7 [75, 75] { R3358 += 1, R3294 += 1 };
  s4 -> s4 [76, 65535] { R3358 += 1, R3294 += 1 };
  s5 -> s5 [0, 69] { R3358 += 1, R3294 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3358 += 1 };
  s5 -> s7 [70, 70] { R3358 += 1, R3294 += 1 };
  s5 -> s8 [70, 70] { R3358 += 1, R3294 += 1 };
  s5 -> s5 [75, 65535] { R3358 += 1, R3294 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R3358 += 1, R3294 += 1 };
  s7 -> s7 [0, 65535] { R3358 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R3358 += 1, R3294 += 1 };
  s8 -> s8 [0, 65535] { R3358 += 1 };
  s8 -> s6 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R3360 += 1, R3296 += 1, R137 += 1 };
  s0 -> s2 [0, 65535] { R3360 += 1, R3295 += 1, R3296 += 1 };
  s0 -> s0 [0, 65535] { R3359 += 1, R3360 += 1 };
  s0 -> s3 [70, 70] { R3360 += 1, R3296 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R3360 += 1, R3296 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R3360 += 1, R3296 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R3360 += 1, R3296 += 1, R137 += 1 };
  s1 -> s1 [0, 65535] { R3360 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R3360 += 1, R3296 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R3360 += 1, R3296 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R3360 += 1, R3296 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R3360 += 1, R3296 += 1, R137 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3360 += 1, R3295 += 1, R3296 += 1 };
  s2 -> s3 [70, 70] { R3360 += 1, R3296 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R3360 += 1, R3296 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R3360 += 1, R3296 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R3360 += 1, R3296 += 1, R137 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3360 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3360 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3360 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R3362 += 1, R3298 += 1, R139 += 1 };
  s0 -> s0 [0, 65535] { R3361 += 1, R3362 += 1 };
  s0 -> s2 [0, 65535] { R3362 += 1, R3297 += 1, R3298 += 1 };
  s0 -> s3 [70, 70] { R3362 += 1, R3298 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R3362 += 1, R3298 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R3362 += 1, R3298 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R3362 += 1, R3298 += 1, R139 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3362 += 1 };
  s1 -> s3 [70, 70] { R3362 += 1, R3298 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R3362 += 1, R3298 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R3362 += 1, R3298 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R3362 += 1, R3298 += 1, R139 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3362 += 1, R3297 += 1, R3298 += 1 };
  s2 -> s3 [70, 70] { R3362 += 1, R3298 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R3362 += 1, R3298 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R3362 += 1, R3298 += 1, R139 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3362 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3362 += 1, R3298 += 1, R139 += 1 };
  s4 -> s6 [0, 65535] { R3362 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3362 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R3364 += 1, R3300 += 1, R141 += 1, R142 += 1 };
  s0 -> s2 [0, 65535] { R3364 += 1, R3299 += 1, R3300 += 1 };
  s0 -> s0 [0, 65535] { R3363 += 1, R3364 += 1 };
  s0 -> s3 [70, 70] { R3364 += 1, R3300 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R3364 += 1, R3300 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R3364 += 1, R3300 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R3364 += 1, R3300 += 1, R141 += 1, R142 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3364 += 1 };
  s1 -> s3 [70, 70] { R3364 += 1, R3300 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R3364 += 1, R3300 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R3364 += 1, R3300 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R3364 += 1, R3300 += 1, R141 += 1, R142 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3364 += 1, R3299 += 1, R3300 += 1 };
  s2 -> s3 [70, 70] { R3364 += 1, R3300 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R3364 += 1, R3300 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R3364 += 1, R3300 += 1, R141 += 1, R142 += 1 };
  s3 -> s3 [0, 65535] { R3364 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3364 += 1 };
  s4 -> s4 [0, 65535] { R3364 += 1, R3300 += 1, R141 += 1, R142 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3364 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R3366 += 1, R3302 += 1, R147 += 1, R148 += 1 };
  s0 -> s0 [0, 65535] { R3365 += 1, R3366 += 1 };
  s0 -> s2 [0, 65535] { R3366 += 1, R3301 += 1, R3302 += 1 };
  s0 -> s3 [70, 70] { R3366 += 1, R3302 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R3366 += 1, R3302 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R3366 += 1, R3302 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R3366 += 1, R3302 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 65535] { R3366 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R3366 += 1, R3302 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R3366 += 1, R3302 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R3366 += 1, R3302 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R3366 += 1, R3302 += 1, R147 += 1, R148 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3366 += 1, R3301 += 1, R3302 += 1 };
  s2 -> s3 [70, 70] { R3366 += 1, R3302 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R3366 += 1, R3302 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R3366 += 1, R3302 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R3366 += 1, R3302 += 1, R147 += 1, R148 += 1 };
  s3 -> s6 [0, 65535] { R3366 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3366 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3366 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R3368 += 1, R3304 += 1, R151 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R3368 += 1, R3304 += 1, R152 += 1 };
  s0 -> s3 [0, 65535] { R3368 += 1, R3303 += 1, R3304 += 1 };
  s0 -> s0 [0, 65535] { R3367 += 1, R3368 += 1 };
  s0 -> s4 [70, 70] { R3368 += 1, R3304 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R3368 += 1, R3304 += 1, R151 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R3368 += 1, R3304 += 1, R151 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R3368 += 1, R3304 += 1, R152 += 1 };
  s0 -> s2 [71, 74] { R3368 += 1, R3304 += 1, R152 += 1 };
  s0 -> s1 [71, 65535] { R3368 += 1, R3304 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R3368 += 1, R3304 += 1, R152 += 1 };
  s0 -> s2 [76, 65535] { R3368 += 1, R3304 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R3368 += 1, R3304 += 1, R151 += 1, R152 += 1 };
  s1 -> s2 [0, 69] { R3368 += 1, R3304 += 1, R152 += 1 };
  s1 -> s4 [70, 70] { R3368 += 1, R3304 += 1, R152 += 1 };
  s1 -> s5 [70, 70] { R3368 += 1, R3304 += 1, R151 += 1, R152 += 1 };
  s1 -> s6 [70, 70] { R3368 += 1, R3304 += 1, R151 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R3368 += 1, R3304 += 1, R152 += 1 };
  s1 -> s2 [71, 74] { R3368 += 1, R3304 += 1, R152 += 1 };
  s1 -> s1 [71, 65535] { R3368 += 1, R3304 += 1, R151 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R3368 += 1, R3304 += 1, R152 += 1 };
  s1 -> s2 [76, 65535] { R3368 += 1, R3304 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R3368 += 1, R3304 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R3368 += 1, R3304 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R3368 += 1, R3304 += 1, R152 += 1 };
  s2 -> s2 [71, 74] { R3368 += 1, R3304 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R3368 += 1, R3304 += 1, R152 += 1 };
  s2 -> s2 [76, 65535] { R3368 += 1, R3304 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R3368 += 1, R3304 += 1, R151 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R3368 += 1, R3304 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R3368 += 1, R3303 += 1, R3304 += 1 };
  s3 -> s4 [70, 70] { R3368 += 1, R3304 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R3368 += 1, R3304 += 1, R151 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R3368 += 1, R3304 += 1, R151 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R3368 += 1, R3304 += 1, R152 += 1 };
  s3 -> s2 [71, 74] { R3368 += 1, R3304 += 1, R152 += 1 };
  s3 -> s1 [71, 65535] { R3368 += 1, R3304 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R3368 += 1, R3304 += 1, R152 += 1 };
  s3 -> s2 [76, 65535] { R3368 += 1, R3304 += 1, R152 += 1 };
  s4 -> s4 [0, 74] { R3368 += 1, R3304 += 1, R152 += 1 };
  s4 -> s10 [75, 75] { R3368 += 1, R3304 += 1, R152 += 1 };
  s4 -> s4 [76, 65535] { R3368 += 1, R3304 += 1, R152 += 1 };
  s5 -> s4 [0, 74] { R3368 += 1, R3304 += 1, R152 += 1 };
  s5 -> s5 [0, 65535] { R3368 += 1, R3304 += 1, R151 += 1, R152 += 1 };
  s5 -> s10 [75, 75] { R3368 += 1, R3304 += 1, R152 += 1 };
  s5 -> s4 [76, 65535] { R3368 += 1, R3304 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R3368 += 1, R3304 += 1, R152 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R3368 += 1 };
  s8 -> s10 [70, 70] { R3368 += 1, R3304 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R3368 += 1, R3304 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R3368 += 1, R3304 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R3368 += 1, R3304 += 1, R152 += 1 };
  s10 -> s9 [0, 65535];
  s10 -> s12 [0, 65535] { R3368 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R3368 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R3368 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R3370 += 1, R3306 += 1, R155 += 1, R156 += 1 };
  s0 -> s2 [0, 65535] { R3370 += 1, R3305 += 1, R3306 += 1 };
  s0 -> s0 [0, 65535] { R3369 += 1, R3370 += 1 };
  s0 -> s3 [70, 70] { R3370 += 1, R3306 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R3370 += 1, R3306 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R3370 += 1, R3306 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R3370 += 1, R3306 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 65535] { R3370 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R3370 += 1, R3306 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R3370 += 1, R3306 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R3370 += 1, R3306 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R3370 += 1, R3306 += 1, R155 += 1, R156 += 1 };
  s2 -> s2 [0, 65535] { R3370 += 1, R3305 += 1, R3306 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R3370 += 1, R3306 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R3370 += 1, R3306 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R3370 += 1, R3306 += 1, R155 += 1, R156 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3370 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3370 += 1 };
  s4 -> s4 [0, 65535] { R3370 += 1, R3306 += 1, R155 += 1, R156 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3370 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R3372 += 1, R3308 += 1, R161 += 1, R162 += 1 };
  s0 -> s2 [0, 65535] { R3372 += 1, R3307 += 1, R3308 += 1 };
  s0 -> s0 [0, 65535] { R3371 += 1, R3372 += 1 };
  s0 -> s3 [70, 70] { R3372 += 1, R3308 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R3372 += 1, R3308 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R3372 += 1, R3308 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R3372 += 1, R3308 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535] { R3372 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R3372 += 1, R3308 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R3372 += 1, R3308 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R3372 += 1, R3308 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R3372 += 1, R3308 += 1, R161 += 1, R162 += 1 };
  s2 -> s2 [0, 65535] { R3372 += 1, R3307 += 1, R3308 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R3372 += 1, R3308 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R3372 += 1, R3308 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R3372 += 1, R3308 += 1, R161 += 1, R162 += 1 };
  s3 -> s6 [0, 65535] { R3372 += 1 };
  s3 -> s3 [0, 65535] { R3372 += 1, R3308 += 1, R161 += 1, R162 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3372 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3372 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R3374 += 1, R3310 += 1, R167 += 1, R168 += 1 };
  s0 -> s2 [0, 65535] { R3374 += 1, R3309 += 1, R3310 += 1 };
  s0 -> s0 [0, 65535] { R3373 += 1, R3374 += 1 };
  s0 -> s3 [70, 70] { R3374 += 1, R3310 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R3374 += 1, R3310 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R3374 += 1, R3310 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R3374 += 1, R3310 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 65535] { R3374 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R3374 += 1, R3310 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R3374 += 1, R3310 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R3374 += 1, R3310 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R3374 += 1, R3310 += 1, R167 += 1, R168 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3374 += 1, R3309 += 1, R3310 += 1 };
  s2 -> s3 [70, 70] { R3374 += 1, R3310 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R3374 += 1, R3310 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R3374 += 1, R3310 += 1, R167 += 1, R168 += 1 };
  s3 -> s3 [0, 65535] { R3374 += 1, R3310 += 1, R167 += 1, R168 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3374 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3374 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3374 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R3376 += 1, R3312 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s2 [0, 69] { R3376 += 1, R3312 += 1, R175 += 1, R176 += 1 };
  s0 -> s3 [0, 69] { R3376 += 1, R3312 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s0 [0, 65535] { R3375 += 1, R3376 += 1 };
  s0 -> s4 [0, 65535] { R3376 += 1, R3311 += 1, R3312 += 1 };
  s0 -> s5 [70, 70] { R3376 += 1, R3312 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s6 [70, 70] { R3376 += 1, R3312 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s7 [70, 70] { R3376 += 1, R3312 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s8 [70, 70] { R3376 += 1, R3312 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s9 [70, 70] { R3376 += 1, R3312 += 1, R175 += 1, R176 += 1 };
  s0 -> s10 [70, 70] { R3376 += 1, R3312 += 1, R175 += 1, R176 += 1 };
  s0 -> s1 [71, 65535] { R3376 += 1, R3312 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s2 [71, 65535] { R3376 += 1, R3312 += 1, R175 += 1, R176 += 1 };
  s0 -> s3 [71, 65535] { R3376 += 1, R3312 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s1 [0, 69] { R3376 += 1, R3312 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s3 [0, 69] { R3376 += 1, R3312 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s5 [70, 70] { R3376 += 1, R3312 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s6 [70, 70] { R3376 += 1, R3312 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s7 [70, 70] { R3376 += 1, R3312 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s8 [70, 70] { R3376 += 1, R3312 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s1 [71, 65535] { R3376 += 1, R3312 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s3 [71, 65535] { R3376 += 1, R3312 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s1 [0, 69] { R3376 += 1, R3312 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s2 [0, 69] { R3376 += 1, R3312 += 1, R175 += 1, R176 += 1 };
  s2 -> s3 [0, 69] { R3376 += 1, R3312 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s5 [70, 70] { R3376 += 1, R3312 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s6 [70, 70] { R3376 += 1, R3312 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s7 [70, 70] { R3376 += 1, R3312 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s8 [70, 70] { R3376 += 1, R3312 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s9 [70, 70] { R3376 += 1, R3312 += 1, R175 += 1, R176 += 1 };
  s2 -> s10 [70, 70] { R3376 += 1, R3312 += 1, R175 += 1, R176 += 1 };
  s2 -> s1 [71, 65535] { R3376 += 1, R3312 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s2 [71, 65535] { R3376 += 1, R3312 += 1, R175 += 1, R176 += 1 };
  s2 -> s3 [71, 65535] { R3376 += 1, R3312 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s14 [0, 69] { R3376 += 1, R3312 += 1, R176 += 1 };
  s3 -> s3 [0, 69] { R3376 += 1, R3312 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s5 [70, 70] { R3376 += 1, R3312 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s8 [70, 70] { R3376 += 1, R3312 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s11 [70, 70] { R3376 += 1, R3312 += 1, R176 += 1 };
  s3 -> s15 [70, 70] { R3376 += 1, R3312 += 1, R176 += 1 };
  s3 -> s14 [71, 65535] { R3376 += 1, R3312 += 1, R176 += 1 };
  s3 -> s3 [71, 65535] { R3376 += 1, R3312 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s1 [0, 69] { R3376 += 1, R3312 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s2 [0, 69] { R3376 += 1, R3312 += 1, R175 += 1, R176 += 1 };
  s4 -> s3 [0, 69] { R3376 += 1, R3312 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s4 [0, 65535] { R3376 += 1, R3311 += 1, R3312 += 1 };
  s4 -> s5 [70, 70] { R3376 += 1, R3312 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s6 [70, 70] { R3376 += 1, R3312 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s7 [70, 70] { R3376 += 1, R3312 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s8 [70, 70] { R3376 += 1, R3312 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s9 [70, 70] { R3376 += 1, R3312 += 1, R175 += 1, R176 += 1 };
  s4 -> s10 [70, 70] { R3376 += 1, R3312 += 1, R175 += 1, R176 += 1 };
  s4 -> s1 [71, 65535] { R3376 += 1, R3312 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s2 [71, 65535] { R3376 += 1, R3312 += 1, R175 += 1, R176 += 1 };
  s4 -> s3 [71, 65535] { R3376 += 1, R3312 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s5 -> s5 [0, 65535] { R3376 += 1, R3312 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s5 -> s11 [0, 65535] { R3376 += 1, R3312 += 1, R176 += 1 };
  s6 -> s5 [0, 65535] { R3376 += 1, R3312 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s6 -> s6 [0, 65535] { R3376 += 1, R3312 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s9 -> s5 [0, 65535] { R3376 += 1, R3312 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s9 -> s6 [0, 65535] { R3376 += 1, R3312 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s9 -> s9 [0, 65535] { R3376 += 1, R3312 += 1, R175 += 1, R176 += 1 };
  s11 -> s12 [0, 65535] { R3376 += 1 };
  s11 -> s11 [0, 65535] { R3376 += 1, R3312 += 1, R176 += 1 };
  s11 -> s13 [0, 65535];
  s12 -> s12 [0, 65535] { R3376 += 1 };
  s12 -> s13 [0, 65535];
  s13 -> s13 [0, 65535];
  s14 -> s14 [0, 69] { R3376 += 1, R3312 += 1, R176 += 1 };
  s14 -> s14 [0, 65535] { R3376 += 1 };
  s14 -> s13 [0, 65535];
  s14 -> s11 [70, 70] { R3376 += 1, R3312 += 1, R176 += 1 };
  s14 -> s15 [70, 70] { R3376 += 1, R3312 += 1, R176 += 1 };
  s14 -> s14 [71, 65535] { R3376 += 1, R3312 += 1, R176 += 1 };
  s15 -> s15 [0, 65535] { R3376 += 1 };
  s15 -> s13 [0, 65535];
  accepting s12, s13, s14, s15, s11;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R3378 += 1, R3314 += 1, R185 += 1, R186 += 1 };
  s0 -> s2 [0, 65535] { R3378 += 1, R3313 += 1, R3314 += 1 };
  s0 -> s0 [0, 65535] { R3377 += 1, R3378 += 1 };
  s0 -> s3 [70, 70] { R3378 += 1, R3314 += 1, R185 += 1, R186 += 1 };
  s0 -> s4 [70, 70] { R3378 += 1, R3314 += 1, R185 += 1, R186 += 1 };
  s0 -> s1 [71, 65535] { R3378 += 1, R3314 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 69] { R3378 += 1, R3314 += 1, R185 += 1, R186 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3378 += 1 };
  s1 -> s3 [70, 70] { R3378 += 1, R3314 += 1, R185 += 1, R186 += 1 };
  s1 -> s4 [70, 70] { R3378 += 1, R3314 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [71, 65535] { R3378 += 1, R3314 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [0, 69] { R3378 += 1, R3314 += 1, R185 += 1, R186 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3378 += 1, R3313 += 1, R3314 += 1 };
  s2 -> s3 [70, 70] { R3378 += 1, R3314 += 1, R185 += 1, R186 += 1 };
  s2 -> s4 [70, 70] { R3378 += 1, R3314 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [71, 65535] { R3378 += 1, R3314 += 1, R185 += 1, R186 += 1 };
  s3 -> s3 [0, 65535] { R3378 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3378 += 1, R3314 += 1, R185 += 1, R186 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3378 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3378 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R3380 += 1, R3316 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s0 -> s2 [0, 69] { R3380 += 1, R3316 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s0 -> s3 [0, 69] { R3380 += 1, R3316 += 1, R2741 += 1, R2742 += 1 };
  s0 -> s4 [0, 65535] { R3380 += 1, R3315 += 1, R3316 += 1 };
  s0 -> s0 [0, 65535] { R3379 += 1, R3380 += 1 };
  s0 -> s5 [70, 70] { R3380 += 1, R3316 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s0 -> s6 [70, 70] { R3380 += 1, R3316 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s0 -> s7 [70, 70] { R3380 += 1, R3316 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s0 -> s8 [70, 70] { R3380 += 1, R3316 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s0 -> s9 [70, 70] { R3380 += 1, R3316 += 1, R2741 += 1, R2742 += 1 };
  s0 -> s10 [70, 70] { R3380 += 1, R3316 += 1, R2741 += 1, R2742 += 1 };
  s0 -> s1 [71, 65535] { R3380 += 1, R3316 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s0 -> s2 [71, 65535] { R3380 += 1, R3316 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s0 -> s3 [71, 65535] { R3380 += 1, R3316 += 1, R2741 += 1, R2742 += 1 };
  s1 -> s1 [0, 69] { R3380 += 1, R3316 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s1 -> s14 [0, 69] { R3380 += 1, R3316 += 1, R2742 += 1 };
  s1 -> s5 [70, 70] { R3380 += 1, R3316 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s1 -> s6 [70, 70] { R3380 += 1, R3316 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s1 -> s11 [70, 70] { R3380 += 1, R3316 += 1, R2742 += 1 };
  s1 -> s15 [70, 70] { R3380 += 1, R3316 += 1, R2742 += 1 };
  s1 -> s1 [71, 65535] { R3380 += 1, R3316 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s1 -> s14 [71, 65535] { R3380 += 1, R3316 += 1, R2742 += 1 };
  s2 -> s1 [0, 69] { R3380 += 1, R3316 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s2 -> s2 [0, 69] { R3380 += 1, R3316 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s2 -> s5 [70, 70] { R3380 += 1, R3316 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s2 -> s6 [70, 70] { R3380 += 1, R3316 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s2 -> s7 [70, 70] { R3380 += 1, R3316 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s2 -> s8 [70, 70] { R3380 += 1, R3316 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s2 -> s1 [71, 65535] { R3380 += 1, R3316 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s2 -> s2 [71, 65535] { R3380 += 1, R3316 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s3 -> s1 [0, 69] { R3380 += 1, R3316 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s3 -> s2 [0, 69] { R3380 += 1, R3316 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s3 -> s3 [0, 69] { R3380 += 1, R3316 += 1, R2741 += 1, R2742 += 1 };
  s3 -> s5 [70, 70] { R3380 += 1, R3316 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s3 -> s6 [70, 70] { R3380 += 1, R3316 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s3 -> s7 [70, 70] { R3380 += 1, R3316 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s3 -> s8 [70, 70] { R3380 += 1, R3316 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s3 -> s9 [70, 70] { R3380 += 1, R3316 += 1, R2741 += 1, R2742 += 1 };
  s3 -> s10 [70, 70] { R3380 += 1, R3316 += 1, R2741 += 1, R2742 += 1 };
  s3 -> s1 [71, 65535] { R3380 += 1, R3316 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s3 -> s2 [71, 65535] { R3380 += 1, R3316 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s3 -> s3 [71, 65535] { R3380 += 1, R3316 += 1, R2741 += 1, R2742 += 1 };
  s4 -> s1 [0, 69] { R3380 += 1, R3316 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s4 -> s2 [0, 69] { R3380 += 1, R3316 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s4 -> s3 [0, 69] { R3380 += 1, R3316 += 1, R2741 += 1, R2742 += 1 };
  s4 -> s4 [0, 65535] { R3380 += 1, R3315 += 1, R3316 += 1 };
  s4 -> s5 [70, 70] { R3380 += 1, R3316 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s4 -> s6 [70, 70] { R3380 += 1, R3316 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s4 -> s7 [70, 70] { R3380 += 1, R3316 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s4 -> s8 [70, 70] { R3380 += 1, R3316 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s4 -> s9 [70, 70] { R3380 += 1, R3316 += 1, R2741 += 1, R2742 += 1 };
  s4 -> s10 [70, 70] { R3380 += 1, R3316 += 1, R2741 += 1, R2742 += 1 };
  s4 -> s1 [71, 65535] { R3380 += 1, R3316 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s4 -> s2 [71, 65535] { R3380 += 1, R3316 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s4 -> s3 [71, 65535] { R3380 += 1, R3316 += 1, R2741 += 1, R2742 += 1 };
  s5 -> s5 [0, 65535] { R3380 += 1, R3316 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s5 -> s11 [0, 65535] { R3380 += 1, R3316 += 1, R2742 += 1 };
  s8 -> s5 [0, 65535] { R3380 += 1, R3316 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s8 -> s8 [0, 65535] { R3380 += 1, R3316 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s10 -> s5 [0, 65535] { R3380 += 1, R3316 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s10 -> s8 [0, 65535] { R3380 += 1, R3316 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s10 -> s10 [0, 65535] { R3380 += 1, R3316 += 1, R2741 += 1, R2742 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s11 [0, 65535] { R3380 += 1, R3316 += 1, R2742 += 1 };
  s11 -> s13 [0, 65535] { R3380 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R3380 += 1 };
  s14 -> s14 [0, 69] { R3380 += 1, R3316 += 1, R2742 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R3380 += 1 };
  s14 -> s11 [70, 70] { R3380 += 1, R3316 += 1, R2742 += 1 };
  s14 -> s15 [70, 70] { R3380 += 1, R3316 += 1, R2742 += 1 };
  s14 -> s14 [71, 65535] { R3380 += 1, R3316 += 1, R2742 += 1 };
  s15 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R3380 += 1 };
  accepting s12, s13, s14, s15, s11;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R3382 += 1, R3318 += 1, R3225 += 1, R3226 += 1 };
  s0 -> s2 [0, 69] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s0 -> s3 [0, 69] { R3382 += 1, R3318 += 1, R3226 += 1, R3227 += 1, R3228 += 1 };
  s0 -> s4 [0, 65535] { R3382 += 1, R3317 += 1, R3318 += 1 };
  s0 -> s0 [0, 65535] { R3381 += 1, R3382 += 1 };
  s0 -> s5 [70, 70] { R3382 += 1, R3318 += 1, R3225 += 1, R3226 += 1 };
  s0 -> s6 [70, 70] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s0 -> s7 [70, 70] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s0 -> s8 [70, 70] { R3382 += 1, R3318 += 1, R3226 += 1, R3227 += 1, R3228 += 1 };
  s0 -> s9 [70, 70] { R3382 += 1, R3318 += 1, R3225 += 1, R3226 += 1 };
  s0 -> s10 [70, 70] { R3382 += 1, R3318 += 1, R3226 += 1, R3227 += 1, R3228 += 1 };
  s0 -> s2 [71, 74] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s0 -> s1 [71, 65535] { R3382 += 1, R3318 += 1, R3225 += 1, R3226 += 1 };
  s0 -> s3 [71, 65535] { R3382 += 1, R3318 += 1, R3226 += 1, R3227 += 1, R3228 += 1 };
  s0 -> s11 [83, 83] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s0 -> s2 [84, 65535] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s1 -> s1 [0, 69] { R3382 += 1, R3318 += 1, R3225 += 1, R3226 += 1 };
  s1 -> s2 [0, 69] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s1 -> s3 [0, 69] { R3382 += 1, R3318 += 1, R3226 += 1, R3227 += 1, R3228 += 1 };
  s1 -> s5 [70, 70] { R3382 += 1, R3318 += 1, R3225 += 1, R3226 += 1 };
  s1 -> s6 [70, 70] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s1 -> s7 [70, 70] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s1 -> s8 [70, 70] { R3382 += 1, R3318 += 1, R3226 += 1, R3227 += 1, R3228 += 1 };
  s1 -> s9 [70, 70] { R3382 += 1, R3318 += 1, R3225 += 1, R3226 += 1 };
  s1 -> s10 [70, 70] { R3382 += 1, R3318 += 1, R3226 += 1, R3227 += 1, R3228 += 1 };
  s1 -> s2 [71, 74] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s1 -> s1 [71, 65535] { R3382 += 1, R3318 += 1, R3225 += 1, R3226 += 1 };
  s1 -> s3 [71, 65535] { R3382 += 1, R3318 += 1, R3226 += 1, R3227 += 1, R3228 += 1 };
  s1 -> s11 [83, 83] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s1 -> s2 [84, 65535] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s2 -> s2 [0, 69] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s2 -> s6 [70, 70] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s2 -> s7 [70, 70] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s2 -> s2 [71, 74] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s2 -> s11 [83, 83] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s2 -> s2 [84, 65535] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s3 -> s2 [0, 69] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s3 -> s3 [0, 69] { R3382 += 1, R3318 += 1, R3226 += 1, R3227 += 1, R3228 += 1 };
  s3 -> s6 [70, 70] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s3 -> s7 [70, 70] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s3 -> s8 [70, 70] { R3382 += 1, R3318 += 1, R3226 += 1, R3227 += 1, R3228 += 1 };
  s3 -> s10 [70, 70] { R3382 += 1, R3318 += 1, R3226 += 1, R3227 += 1, R3228 += 1 };
  s3 -> s2 [71, 74] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s3 -> s3 [71, 65535] { R3382 += 1, R3318 += 1, R3226 += 1, R3227 += 1, R3228 += 1 };
  s3 -> s11 [83, 83] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s3 -> s2 [84, 65535] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s4 -> s1 [0, 69] { R3382 += 1, R3318 += 1, R3225 += 1, R3226 += 1 };
  s4 -> s2 [0, 69] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s4 -> s3 [0, 69] { R3382 += 1, R3318 += 1, R3226 += 1, R3227 += 1, R3228 += 1 };
  s4 -> s4 [0, 65535] { R3382 += 1, R3317 += 1, R3318 += 1 };
  s4 -> s5 [70, 70] { R3382 += 1, R3318 += 1, R3225 += 1, R3226 += 1 };
  s4 -> s6 [70, 70] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s4 -> s7 [70, 70] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s4 -> s8 [70, 70] { R3382 += 1, R3318 += 1, R3226 += 1, R3227 += 1, R3228 += 1 };
  s4 -> s9 [70, 70] { R3382 += 1, R3318 += 1, R3225 += 1, R3226 += 1 };
  s4 -> s10 [70, 70] { R3382 += 1, R3318 += 1, R3226 += 1, R3227 += 1, R3228 += 1 };
  s4 -> s2 [71, 74] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s4 -> s1 [71, 65535] { R3382 += 1, R3318 += 1, R3225 += 1, R3226 += 1 };
  s4 -> s3 [71, 65535] { R3382 += 1, R3318 += 1, R3226 += 1, R3227 += 1, R3228 += 1 };
  s4 -> s11 [83, 83] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s4 -> s2 [84, 65535] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s5 -> s6 [0, 74] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s5 -> s5 [0, 65535] { R3382 += 1, R3318 += 1, R3225 += 1, R3226 += 1 };
  s5 -> s8 [0, 65535] { R3382 += 1, R3318 += 1, R3226 += 1, R3227 += 1, R3228 += 1 };
  s5 -> s13 [83, 83] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s5 -> s6 [84, 65535] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s6 -> s6 [0, 74] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s6 -> s13 [83, 83] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s6 -> s6 [84, 65535] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s8 -> s6 [0, 74] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s8 -> s8 [0, 65535] { R3382 += 1, R3318 += 1, R3226 += 1, R3227 += 1, R3228 += 1 };
  s8 -> s13 [83, 83] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s8 -> s6 [84, 65535] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s11 -> s11 [0, 69] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s11 -> s12 [70, 70] { R3382 += 1, R3318 += 1, R3226 += 1 };
  s11 -> s13 [70, 70] { R3382 += 1, R3318 += 1, R3226 += 1 };
  s11 -> s11 [71, 74] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s11 -> s11 [71, 65535] { R3382 += 1, R3318 += 1, R3226 += 1 };
  s11 -> s14 [75, 75] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s11 -> s11 [83, 65535] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s13 -> s13 [0, 74] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s13 -> s13 [0, 65535] { R3382 += 1, R3318 += 1, R3226 += 1 };
  s13 -> s16 [75, 75] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s13 -> s13 [83, 65535] { R3382 += 1, R3318 += 1, R3226 += 1, R3228 += 1 };
  s14 -> s14 [0, 69] { R3382 += 1, R3318 += 1, R3226 += 1 };
  s14 -> s14 [0, 65535] { R3382 += 1 };
  s14 -> s15 [0, 65535];
  s14 -> s16 [70, 70] { R3382 += 1, R3318 += 1, R3226 += 1 };
  s14 -> s17 [70, 70] { R3382 += 1, R3318 += 1, R3226 += 1 };
  s14 -> s14 [71, 65535] { R3382 += 1, R3318 += 1, R3226 += 1 };
  s15 -> s15 [0, 65535];
  s16 -> s16 [0, 65535] { R3382 += 1, R3318 += 1, R3226 += 1 };
  s16 -> s18 [0, 65535] { R3382 += 1 };
  s16 -> s15 [0, 65535];
  s17 -> s15 [0, 65535];
  s17 -> s17 [0, 65535] { R3382 += 1 };
  s18 -> s18 [0, 65535] { R3382 += 1 };
  s18 -> s15 [0, 65535];
  accepting s17, s16, s14, s18, s15;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
constraint R3 = R3382 && R25 - R3382 = -1 && R26 = R3382 && R27 - R3382 = -1 && R28 = R3382 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R3230 + -1*R3226 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R3230 + -1*R3226 - R130 = 0 && R129 + R3229 + R3225 = 0 && R131 + R3231 + R3227 = 0 && R132 + R3232 + R3228 = 0 && R3293 = 0 && R3294 = 0 && R3303 = 0 && R3304 = 0 && R3311 = 0 && R3312 = 0 && R3315 = 0 && R3316 = 0 && R3317 = 0 && R3318 = 0 && R3319 = 0 && R3320 = R3382 && R3321 = 0 && R3322 = R3382 && R3323 = 0 && R3324 = R3382 && R3325 = 0 && R3326 = R3382 && R3327 = 0 && R3328 = R3382 && R3329 = 0 && R3330 = R3382 && R3331 = 0 && R3332 = R3382 && R3333 = 0 && R3334 = R3382 && R3335 = 0 && R3336 = R3382 && R3337 = 0 && R3338 = R3382 && R3339 = 0 && R3340 = R3382 && R3341 = 0 && R3342 = R3382 && R3343 = 0 && R3344 = R3382 && R3345 = 0 && R3346 = R3382 && R3347 = 0 && R3348 = R3382 && R3349 = 0 && R3350 = R3382 && R3351 = 0 && R3352 = R3382 && R3353 = 0 && R3354 = R3382 && R3355 = 0 && R3356 = R3382 && R3357 = 0 && R3358 = R3382 && R3359 = 0 && R3360 = R3382 && R3361 = 0 && R3362 = R3382 && R3363 = 0 && R3364 = R3382 && R3365 = 0 && R3366 = R3382 && R3367 = 0 && R3368 = R3382 && R3369 = 0 && R3370 = R3382 && R3371 = 0 && R3372 = R3382 && R3373 = 0 && R3374 = R3382 && R3375 = 0 && R3376 = R3382 && R3377 = 0 && R3378 = R3382 && R3379 = 0 && R3380 = R3382 && R3381 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R3230 + -1*R3226 - R130 < 1 && 0 < R3382 && (R2 != 0 || R22 = 0 || (R3233 = 0 && R3234 = 0)) && (R2 != 0 || R22 = 0 || (R3235 = 0 && R3236 = 0)) && (R2 != 0 || R22 = 0 || (R3237 = 0 && R3238 = 0)) && (R2 != 0 || R22 = 0 || (R3239 = 0 && R3240 = 0)) && (R2 != 0 || R22 = 0 || (R3241 = 0 && R3242 = 0)) && (R2 != 0 || R22 = 0 || (R3243 = 0 && R3244 = 0)) && (R2 != 0 || R22 = 0 || (R3245 = 0 && R3246 = 0)) && (R2 != 0 || R22 = 0 || (R3247 = 0 && R3248 = 0)) && (R2 != 0 || R22 = 0 || (R3249 = 0 && R3250 = 0)) && (R2 != 0 || R22 = 0 || (R3251 = 0 && R3252 = 0)) && (R2 != 0 || R22 = 0 || (R3253 = 0 && R3254 = 0)) && (R2 != 0 || R22 = 0 || (R3255 = 0 && R3256 = 0)) && (R2 != 0 || R22 = 0 || (R3257 = 0 && R3258 = 0)) && (R2 != 0 || R22 = 0 || (R3259 = 0 && R3260 = 0)) && (R2 != 0 || R22 = 0 || (R3261 = 0 && R3262 = 0)) && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R3230 + -1*R3226 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R191 + R187 = 0 && R114 + R192 + R188 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R3230 + -1*R3226 - R130 = 0 || R130 + R3230 + R3226 < 1) && (R81 + R158 + R155 = 0 || R130 + R3230 + R3226 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R3230 + -1*R3226 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R3230 + R3226 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R3230 + -1*R3226 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R3230 + R3226 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R3230 + -1*R3226 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R3230 + R3226 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 != 0 || R112 + R190 + R186 + -1*R3230 + -1*R3226 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R3230 + R3226 = 0)) && (R113 + R191 + R187 != 0 || R83 + R160 + R157 + -1*R192 + -1*R188 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R2746 + R2741 != 0 || R120 + R2747 + R2742 + -1*R3230 + -1*R3226 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R3230 + R3226 = 0)) && (R3233 != 0 || R2 = R3234 || R2 < 1) && (R3235 != 0 || R2 = R3236 || R2 < 1) && (R3237 != 0 || R2 = R3238 || R2 < 1) && (R3239 != 0 || R2 = R3240 || R2 < 1) && (R3241 != 0 || R2 = R3242 || R2 < 1) && (R3243 != 0 || R2 = R3244 || R2 < 1) && (R3245 != 0 || R2 = R3246 || R2 < 1) && (R3247 != 0 || R2 = R3248 || R2 < 1) && (R3249 != 0 || R2 = R3250 || R2 < 1) && (R3251 != 0 || R2 = R3252 || R2 < 1) && (R3253 != 0 || R2 = R3254 || R2 < 1) && (R3255 != 0 || R2 = R3256 || R2 < 1) && (R3257 != 0 || R2 = R3258 || R2 < 1) && (R3259 != 0 || R2 = R3260 || R2 < 1) && (R3261 != 0 || R2 = R3262 || R2 < 1) && (R23 = 0 || (R3291 = 0 && R3292 = 0)) && (R23 = 0 || (R3295 = 0 && R3296 = 0)) && (R23 = 0 || (R3297 = 0 && R3298 = 0)) && (R23 = 0 || (R3299 = 0 && R3300 = 0)) && (R23 = 0 || (R3301 = 0 && R3302 = 0)) && (R23 = 0 || (R3305 = 0 && R3306 = 0)) && (R23 = 0 || (R3307 = 0 && R3308 = 0)) && (R23 = 0 || (R3309 = 0 && R3310 = 0)) && (R23 = 0 || (R3313 = 0 && R3314 = 0)) && (R24 = 0 || (R3263 = 0 && R3264 = 0)) && (R24 = 0 || (R3265 = 0 && R3266 = 0)) && (R24 = 0 || (R3267 = 0 && R3268 = 0)) && (R24 = 0 || (R3269 = 0 && R3270 = 0)) && (R24 = 0 || (R3271 = 0 && R3272 = 0)) && (R24 = 0 || (R3273 = 0 && R3274 = 0)) && (R24 = 0 || (R3275 = 0 && R3276 = 0)) && (R24 = 0 || (R3277 = 0 && R3278 = 0)) && (R24 = 0 || (R3279 = 0 && R3280 = 0)) && (R24 = 0 || (R3281 = 0 && R3282 = 0)) && (R24 = 0 || (R3283 = 0 && R3284 = 0)) && (R24 = 0 || (R3285 = 0 && R3286 = 0)) && (R24 = 0 || (R3287 = 0 && R3288 = 0)) && (R24 = 0 || (R3289 = 0 && R3290 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R3230 + R3226 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R3230 + R3226 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R3230 + R3226 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 = 0 || (R83 + R160 + R157 = 0 && R130 + R3230 + R3226 = 0)) && (R113 + R191 + R187 = 0 || R83 + R160 + R157 < 1) && (R119 + R2746 + R2741 = 0 || (R83 + R160 + R157 = 0 && R130 + R3230 + R3226 = 0)) && (R123 + R2750 + R2745 = 0 || (R121 + R2748 + R2743 = 0 && R122 + R2749 + R2744 = 0)) && (R3233 = 0 || R2 < 1) && (R3235 = 0 || R2 < 1) && (R3237 = 0 || R2 < 1) && (R3239 = 0 || R2 < 1) && (R3241 = 0 || R2 < 1) && (R3243 = 0 || R2 < 1) && (R3245 = 0 || R2 < 1) && (R3247 = 0 || R2 < 1) && (R3249 = 0 || R2 < 1) && (R3251 = 0 || R2 < 1) && (R3253 = 0 || R2 < 1) && (R3255 = 0 || R2 < 1) && (R3257 = 0 || R2 < 1) && (R3259 = 0 || R2 < 1) && (R3261 = 0 || R2 < 1);
// End of Parikh automata intersection problem
