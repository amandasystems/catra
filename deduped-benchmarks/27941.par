// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R2, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R4015, R4016, R4017, R4018, R4019, R4020, R4021, R4022, R4023, R4024, R4341, R4342, R4343, R4344, R4345, R4346, R4347, R4348, R4349, R4350, R4351, R4352, R4353, R4354, R4355, R4356, R4357, R4358, R4359, R4360, R4361, R4362, R4363, R4364, R4365, R4366, R4367, R4368, R4369, R4370, R4371, R4372, R4373, R4374, R4375, R4376, R4377, R4378, R4379, R4380, R4381, R4382, R4383, R4384, R4385, R4386, R4387, R4388, R4389, R4390, R4391, R4392, R4393, R4394, R4395, R4396, R4397, R4398, R4399, R4400, R4401, R4402, R4403, R4404, R4405, R4406, R4407, R4408, R4409, R4410, R4411, R4412, R4413, R4414, R4415, R4416, R4417, R4418, R4419, R4420, R4421, R4422, R4423, R4424, R4425, R4426, R4427, R4428, R4429, R4430, R4431, R4432, R4433, R4434, R4435, R4436, R4437, R4438, R4439, R4440, R4441, R4442, R4443, R4444, R4445, R4446, R4447, R4448, R4449, R4450, R4451, R4452, R4453, R4454, R4455, R4456, R4457, R4458, R4459, R4460, R4461, R4462, R4463, R4464, R4465, R4466, R4467, R4468, R4469, R4470, R4471, R4472, R4473, R4474, R4475, R4476, R4477, R4478, R4479, R4480, R4481, R4482, R4483, R4484, R4485, R4486, R4487, R4488, R4489, R4490, R4491, R4492, R4493, R4494, R4495, R4496, R4497, R4498, R5, R63, R65, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R26 += 1 };
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R30 += 1 };
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R4380 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R4379 += 1, R4380 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R4380 += 1, R24 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R4382 += 1 };
  s0 -> s0 [0, 65535] { R4381 += 1, R4382 += 1 };
  s0 -> s2 [70, 70] { R4382 += 1 };
  s0 -> s3 [70, 70] { R4382 += 1 };
  s0 -> s1 [76, 65535] { R4382 += 1 };
  s1 -> s1 [0, 69] { R4382 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4382 += 1 };
  s1 -> s3 [70, 70] { R4382 += 1 };
  s1 -> s1 [76, 65535] { R4382 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R4382 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R4382 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R4384 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R4383 += 1, R4384 += 1 };
  s0 -> s2 [70, 70] { R4384 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R4384 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R4384 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R4384 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4384 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R4384 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R4384 += 1, R63 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4384 += 1, R63 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R4386 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R4385 += 1, R4386 += 1 };
  s0 -> s2 [70, 70] { R4386 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R4386 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R4386 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R4386 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4386 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R4386 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R4386 += 1, R65 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R4386 += 1, R65 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R4388 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R4387 += 1, R4388 += 1 };
  s0 -> s2 [70, 70] { R4388 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R4388 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R4388 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R4388 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4388 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R4388 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R4388 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R4388 += 1, R67 += 1, R68 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R4390 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R4389 += 1, R4390 += 1 };
  s0 -> s2 [70, 70] { R4390 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R4390 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R4390 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R4390 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4390 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R4390 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R4390 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4390 += 1, R73 += 1, R74 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R4392 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R4391 += 1, R4392 += 1 };
  s0 -> s2 [70, 70] { R4392 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R4392 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R4392 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R4392 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4392 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R4392 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R4392 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4392 += 1, R77 += 1, R78 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R4394 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R4393 += 1, R4394 += 1 };
  s0 -> s2 [70, 70] { R4394 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R4394 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R4394 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R4394 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4394 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R4394 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R4394 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R4394 += 1, R81 += 1, R82 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R4396 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R4395 += 1, R4396 += 1 };
  s0 -> s2 [70, 70] { R4396 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R4396 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R4396 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R4396 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4396 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R4396 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R4396 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4396 += 1, R87 += 1, R88 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R4398 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R4397 += 1, R4398 += 1 };
  s0 -> s2 [70, 70] { R4398 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R4398 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R4398 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R4398 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4398 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R4398 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R4398 += 1, R93 += 1, R94 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4398 += 1, R93 += 1, R94 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R4400 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R4399 += 1, R4400 += 1 };
  s0 -> s2 [70, 70] { R4400 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R4400 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R4400 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R4400 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4400 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R4400 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R4400 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4400 += 1, R101 += 1, R102 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R4402 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R4401 += 1, R4402 += 1 };
  s0 -> s2 [70, 70] { R4402 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R4402 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R4402 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R4402 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4402 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R4402 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R4402 += 1, R111 += 1, R112 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4402 += 1, R111 += 1, R112 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R4404 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R4403 += 1, R4404 += 1 };
  s0 -> s2 [70, 70] { R4404 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R4404 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R4404 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R4404 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4404 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R4404 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R4404 += 1, R119 += 1, R120 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4404 += 1, R119 += 1, R120 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R4406 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R4405 += 1, R4406 += 1 };
  s0 -> s2 [70, 70] { R4406 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R4406 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R4406 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R4406 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R4406 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R4406 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R4406 += 1, R129 += 1, R130 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4406 += 1, R129 += 1, R130 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R4436 += 1 };
  s0 -> s0 [0, 65535] { R4435 += 1, R4436 += 1 };
  s0 -> s2 [70, 70] { R4436 += 1 };
  s0 -> s1 [71, 65535] { R4436 += 1 };
  s1 -> s1 [0, 69] { R4436 += 1 };
  s1 -> s2 [70, 70] { R4436 += 1 };
  s1 -> s1 [71, 65535] { R4436 += 1 };
  s2 -> s2 [0, 65535] { R4436 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R4437 += 1, R4438 += 1 };
  s0 -> s1 [0, 65535] { R4438 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R4438 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R4440 += 1 };
  s0 -> s0 [0, 65535] { R4439 += 1, R4440 += 1 };
  s0 -> s2 [0, 65535] { R4440 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R4440 += 1 };
  s0 -> s1 [71, 65535] { R4440 += 1 };
  s1 -> s1 [0, 69] { R4440 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R4440 += 1 };
  s1 -> s1 [71, 65535] { R4440 += 1 };
  s2 -> s1 [0, 69] { R4440 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4440 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R4440 += 1 };
  s2 -> s1 [71, 65535] { R4440 += 1 };
  s3 -> s3 [0, 65535] { R4440 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R4442 += 1, R4350 += 1 };
  s0 -> s2 [0, 65535] { R4442 += 1, R4349 += 1, R4350 += 1 };
  s0 -> s0 [0, 65535] { R4441 += 1, R4442 += 1 };
  s0 -> s1 [71, 65535] { R4442 += 1, R4350 += 1 };
  s1 -> s1 [0, 69] { R4442 += 1, R4350 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4442 += 1 };
  s1 -> s1 [71, 65535] { R4442 += 1, R4350 += 1 };
  s2 -> s1 [0, 69] { R4442 += 1, R4350 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4442 += 1, R4349 += 1, R4350 += 1 };
  s2 -> s1 [71, 65535] { R4442 += 1, R4350 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R4444 += 1, R4351 += 1, R4352 += 1 };
  s0 -> s2 [0, 65535] { R4444 += 1, R4352 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R4443 += 1, R4444 += 1 };
  s1 -> s1 [0, 65535] { R4444 += 1, R4351 += 1, R4352 += 1 };
  s1 -> s2 [0, 65535] { R4444 += 1, R4352 += 1, R22 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R4444 += 1 };
  s2 -> s2 [0, 65535] { R4444 += 1, R4352 += 1, R22 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4444 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R4446 += 1, R4354 += 1 };
  s0 -> s2 [0, 65535] { R4446 += 1, R4353 += 1, R4354 += 1 };
  s0 -> s0 [0, 65535] { R4445 += 1, R4446 += 1 };
  s0 -> s1 [75, 65535] { R4446 += 1, R4354 += 1 };
  s1 -> s1 [0, 70] { R4446 += 1, R4354 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4446 += 1 };
  s1 -> s1 [75, 65535] { R4446 += 1, R4354 += 1 };
  s2 -> s1 [0, 70] { R4446 += 1, R4354 += 1 };
  s2 -> s2 [0, 65535] { R4446 += 1, R4353 += 1, R4354 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R4446 += 1, R4354 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R4448 += 1, R4356 += 1, R138 += 1 };
  s0 -> s2 [0, 65535] { R4448 += 1, R4355 += 1, R4356 += 1 };
  s0 -> s0 [0, 65535] { R4447 += 1, R4448 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4448 += 1, R4356 += 1, R138 += 1 };
  s1 -> s4 [0, 65535] { R4448 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4448 += 1, R4356 += 1, R138 += 1 };
  s2 -> s2 [0, 65535] { R4448 += 1, R4355 += 1, R4356 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4448 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R4450 += 1, R4358 += 1 };
  s0 -> s2 [0, 65535] { R4450 += 1, R4357 += 1, R4358 += 1 };
  s0 -> s0 [0, 65535] { R4449 += 1, R4450 += 1 };
  s0 -> s3 [0, 65535] { R4450 += 1, R4358 += 1, R140 += 1 };
  s0 -> s1 [76, 65535] { R4450 += 1, R4358 += 1 };
  s1 -> s1 [0, 74] { R4450 += 1, R4358 += 1 };
  s1 -> s1 [0, 65535] { R4450 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R4450 += 1, R4358 += 1 };
  s2 -> s1 [0, 74] { R4450 += 1, R4358 += 1 };
  s2 -> s2 [0, 65535] { R4450 += 1, R4357 += 1, R4358 += 1 };
  s2 -> s3 [0, 65535] { R4450 += 1, R4358 += 1, R140 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [76, 65535] { R4450 += 1, R4358 += 1 };
  s3 -> s1 [0, 74] { R4450 += 1, R4358 += 1 };
  s3 -> s3 [0, 65535] { R4450 += 1, R4358 += 1, R140 += 1 };
  s3 -> s4 [0, 65535] { R4450 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [76, 65535] { R4450 += 1, R4358 += 1 };
  s4 -> s4 [0, 65535] { R4450 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R4451 += 1, R4452 += 1 };
  s0 -> s1 [0, 65535] { R4452 += 1, R4360 += 1, R144 += 1, R145 += 1 };
  s0 -> s2 [0, 65535] { R4452 += 1, R4360 += 1, R145 += 1, R146 += 1 };
  s0 -> s3 [0, 65535] { R4452 += 1, R4359 += 1, R4360 += 1 };
  s1 -> s1 [0, 65535] { R4452 += 1, R4360 += 1, R144 += 1, R145 += 1 };
  s1 -> s2 [0, 65535] { R4452 += 1, R4360 += 1, R145 += 1, R146 += 1 };
  s1 -> s6 [0, 65535] { R4452 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4452 += 1, R4360 += 1, R145 += 1, R146 += 1 };
  s2 -> s5 [0, 65535] { R4452 += 1, R4360 += 1 };
  s2 -> s6 [0, 65535] { R4452 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R4452 += 1, R4360 += 1, R144 += 1, R145 += 1 };
  s3 -> s2 [0, 65535] { R4452 += 1, R4360 += 1, R145 += 1, R146 += 1 };
  s3 -> s3 [0, 65535] { R4452 += 1, R4359 += 1, R4360 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4452 += 1, R4360 += 1 };
  s5 -> s6 [0, 65535] { R4452 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R4452 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R4454 += 1, R4362 += 1, R150 += 1 };
  s0 -> s2 [0, 65535] { R4454 += 1, R4362 += 1, R149 += 1, R150 += 1 };
  s0 -> s0 [0, 65535] { R4453 += 1, R4454 += 1 };
  s0 -> s3 [0, 65535] { R4454 += 1, R4361 += 1, R4362 += 1 };
  s0 -> s4 [75, 75] { R4454 += 1, R4362 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R4454 += 1, R4362 += 1, R150 += 1 };
  s0 -> s1 [84, 65535] { R4454 += 1, R4362 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R4454 += 1, R4362 += 1, R150 += 1 };
  s1 -> s1 [0, 65535] { R4454 += 1, R4362 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R4454 += 1 };
  s1 -> s4 [75, 75] { R4454 += 1, R4362 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R4454 += 1, R4362 += 1, R150 += 1 };
  s1 -> s1 [84, 65535] { R4454 += 1, R4362 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R4454 += 1, R4362 += 1, R150 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R4454 += 1 };
  s2 -> s2 [0, 65535] { R4454 += 1, R4362 += 1, R149 += 1, R150 += 1 };
  s2 -> s4 [75, 75] { R4454 += 1, R4362 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R4454 += 1, R4362 += 1, R150 += 1 };
  s2 -> s1 [84, 65535] { R4454 += 1, R4362 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R4454 += 1, R4362 += 1, R150 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R4454 += 1, R4362 += 1, R149 += 1, R150 += 1 };
  s3 -> s3 [0, 65535] { R4454 += 1, R4361 += 1, R4362 += 1 };
  s3 -> s4 [75, 75] { R4454 += 1, R4362 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R4454 += 1, R4362 += 1, R150 += 1 };
  s3 -> s1 [84, 65535] { R4454 += 1, R4362 += 1, R150 += 1 };
  s4 -> s4 [0, 65535] { R4454 += 1, R4362 += 1 };
  s4 -> s7 [0, 65535] { R4454 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 75] { R4454 += 1, R4362 += 1, R150 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R4454 += 1 };
  s5 -> s5 [0, 65535] { R4454 += 1, R4362 += 1 };
  s5 -> s5 [84, 65535] { R4454 += 1, R4362 += 1, R150 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4454 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R4456 += 1, R4363 += 1, R4364 += 1 };
  s0 -> s0 [0, 65535] { R4455 += 1, R4456 += 1 };
  s0 -> s2 [0, 65535] { R4456 += 1, R4364 += 1, R154 += 1 };
  s0 -> s3 [0, 65535] { R4456 += 1, R4364 += 1 };
  s1 -> s1 [0, 65535] { R4456 += 1, R4363 += 1, R4364 += 1 };
  s1 -> s2 [0, 65535] { R4456 += 1, R4364 += 1, R154 += 1 };
  s1 -> s3 [0, 65535] { R4456 += 1, R4364 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s4 [0, 65535] { R4456 += 1 };
  s2 -> s2 [0, 65535] { R4456 += 1, R4364 += 1, R154 += 1 };
  s2 -> s3 [0, 65535] { R4456 += 1, R4364 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R4456 += 1 };
  s3 -> s3 [0, 65535] { R4456 += 1, R4364 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4456 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s0 [0, 65535] { R4457 += 1, R4458 += 1 };
  s0 -> s1 [0, 65535] { R4458 += 1, R4365 += 1, R4366 += 1 };
  s0 -> s2 [0, 65535] { R4458 += 1, R4366 += 1, R158 += 1, R159 += 1 };
  s0 -> s3 [0, 65535] { R4458 += 1, R4366 += 1, R159 += 1, R160 += 1 };
  s1 -> s1 [0, 65535] { R4458 += 1, R4365 += 1, R4366 += 1 };
  s1 -> s2 [0, 65535] { R4458 += 1, R4366 += 1, R158 += 1, R159 += 1 };
  s1 -> s3 [0, 65535] { R4458 += 1, R4366 += 1, R159 += 1, R160 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4458 += 1, R4366 += 1, R158 += 1, R159 += 1 };
  s2 -> s3 [0, 65535] { R4458 += 1, R4366 += 1, R159 += 1, R160 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R4458 += 1 };
  s3 -> s4 [0, 65535] { R4458 += 1, R4366 += 1 };
  s3 -> s3 [0, 65535] { R4458 += 1, R4366 += 1, R159 += 1, R160 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R4458 += 1 };
  s4 -> s4 [0, 65535] { R4458 += 1, R4366 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4458 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4458 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R4460 += 1, R4368 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R4460 += 1, R4368 += 1, R165 += 1, R166 += 1 };
  s0 -> s3 [0, 65535] { R4460 += 1, R4367 += 1, R4368 += 1 };
  s0 -> s4 [0, 65535] { R4460 += 1, R4368 += 1, R164 += 1, R165 += 1 };
  s0 -> s0 [0, 65535] { R4459 += 1, R4460 += 1 };
  s0 -> s1 [76, 65535] { R4460 += 1, R4368 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R4460 += 1, R4368 += 1, R165 += 1 };
  s1 -> s1 [0, 65535] { R4460 += 1, R4368 += 1 };
  s1 -> s5 [0, 65535] { R4460 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [76, 65535] { R4460 += 1, R4368 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R4460 += 1, R4368 += 1, R165 += 1 };
  s2 -> s2 [0, 65535] { R4460 += 1, R4368 += 1, R165 += 1, R166 += 1 };
  s2 -> s7 [0, 65535] { R4460 += 1, R4368 += 1 };
  s2 -> s5 [0, 65535] { R4460 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [76, 65535] { R4460 += 1, R4368 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R4460 += 1, R4368 += 1, R165 += 1 };
  s3 -> s2 [0, 65535] { R4460 += 1, R4368 += 1, R165 += 1, R166 += 1 };
  s3 -> s3 [0, 65535] { R4460 += 1, R4367 += 1, R4368 += 1 };
  s3 -> s4 [0, 65535] { R4460 += 1, R4368 += 1, R164 += 1, R165 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [76, 65535] { R4460 += 1, R4368 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R4460 += 1, R4368 += 1, R165 += 1 };
  s4 -> s2 [0, 65535] { R4460 += 1, R4368 += 1, R165 += 1, R166 += 1 };
  s4 -> s4 [0, 65535] { R4460 += 1, R4368 += 1, R164 += 1, R165 += 1 };
  s4 -> s5 [0, 65535] { R4460 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s1 [76, 65535] { R4460 += 1, R4368 += 1, R165 += 1 };
  s5 -> s5 [0, 65535] { R4460 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4460 += 1, R4368 += 1 };
  s7 -> s5 [0, 65535] { R4460 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R4462 += 1, R4370 += 1, R172 += 1, R174 += 1 };
  s0 -> s0 [0, 65535] { R4461 += 1, R4462 += 1 };
  s0 -> s2 [0, 65535] { R4462 += 1, R4369 += 1, R4370 += 1 };
  s0 -> s3 [0, 65535] { R4462 += 1, R4370 += 1, R171 += 1, R172 += 1 };
  s0 -> s4 [0, 65535] { R4462 += 1, R4370 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s1 [76, 65535] { R4462 += 1, R4370 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R4462 += 1, R4370 += 1, R172 += 1, R174 += 1 };
  s1 -> s5 [0, 65535] { R4462 += 1, R4370 += 1 };
  s1 -> s1 [0, 65535] { R4462 += 1, R4370 += 1, R172 += 1 };
  s1 -> s6 [0, 65535] { R4462 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [76, 65535] { R4462 += 1, R4370 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R4462 += 1, R4370 += 1, R172 += 1, R174 += 1 };
  s2 -> s2 [0, 65535] { R4462 += 1, R4369 += 1, R4370 += 1 };
  s2 -> s3 [0, 65535] { R4462 += 1, R4370 += 1, R171 += 1, R172 += 1 };
  s2 -> s4 [0, 65535] { R4462 += 1, R4370 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s1 [76, 65535] { R4462 += 1, R4370 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R4462 += 1, R4370 += 1, R172 += 1, R174 += 1 };
  s3 -> s6 [0, 65535] { R4462 += 1 };
  s3 -> s3 [0, 65535] { R4462 += 1, R4370 += 1, R171 += 1, R172 += 1 };
  s3 -> s4 [0, 65535] { R4462 += 1, R4370 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s1 [76, 65535] { R4462 += 1, R4370 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R4462 += 1, R4370 += 1, R172 += 1, R174 += 1 };
  s4 -> s5 [0, 65535] { R4462 += 1, R4370 += 1 };
  s4 -> s6 [0, 65535] { R4462 += 1 };
  s4 -> s4 [0, 65535] { R4462 += 1, R4370 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s1 [76, 65535] { R4462 += 1, R4370 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535] { R4462 += 1, R4370 += 1 };
  s5 -> s6 [0, 65535] { R4462 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R4462 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R4464 += 1, R4372 += 1 };
  s0 -> s2 [0, 65535] { R4464 += 1, R4372 += 1, R181 += 1 };
  s0 -> s3 [0, 65535] { R4464 += 1, R4371 += 1, R4372 += 1 };
  s0 -> s0 [0, 65535] { R4463 += 1, R4464 += 1 };
  s1 -> s1 [0, 65535] { R4464 += 1, R4372 += 1 };
  s1 -> s5 [0, 65535] { R4464 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R4464 += 1, R4372 += 1 };
  s2 -> s2 [0, 65535] { R4464 += 1, R4372 += 1, R181 += 1 };
  s2 -> s5 [0, 65535] { R4464 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R4464 += 1, R4372 += 1 };
  s3 -> s2 [0, 65535] { R4464 += 1, R4372 += 1, R181 += 1 };
  s3 -> s3 [0, 65535] { R4464 += 1, R4371 += 1, R4372 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4464 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R4466 += 1, R4374 += 1, R190 += 1, R192 += 1 };
  s0 -> s2 [0, 65535] { R4466 += 1, R4374 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s0 -> s3 [0, 65535] { R4466 += 1, R4373 += 1, R4374 += 1 };
  s0 -> s4 [0, 65535] { R4466 += 1, R4374 += 1, R189 += 1, R190 += 1 };
  s0 -> s0 [0, 65535] { R4465 += 1, R4466 += 1 };
  s0 -> s1 [83, 65535] { R4466 += 1, R4374 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 75] { R4466 += 1, R4374 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 65535] { R4466 += 1, R4374 += 1, R190 += 1 };
  s1 -> s7 [0, 65535] { R4466 += 1, R4374 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R4466 += 1 };
  s1 -> s1 [83, 65535] { R4466 += 1, R4374 += 1, R190 += 1, R192 += 1 };
  s2 -> s1 [0, 75] { R4466 += 1, R4374 += 1, R190 += 1, R192 += 1 };
  s2 -> s2 [0, 65535] { R4466 += 1, R4374 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s2 -> s7 [0, 65535] { R4466 += 1, R4374 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R4466 += 1 };
  s2 -> s1 [83, 65535] { R4466 += 1, R4374 += 1, R190 += 1, R192 += 1 };
  s3 -> s1 [0, 75] { R4466 += 1, R4374 += 1, R190 += 1, R192 += 1 };
  s3 -> s2 [0, 65535] { R4466 += 1, R4374 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s3 -> s3 [0, 65535] { R4466 += 1, R4373 += 1, R4374 += 1 };
  s3 -> s4 [0, 65535] { R4466 += 1, R4374 += 1, R189 += 1, R190 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [83, 65535] { R4466 += 1, R4374 += 1, R190 += 1, R192 += 1 };
  s4 -> s1 [0, 75] { R4466 += 1, R4374 += 1, R190 += 1, R192 += 1 };
  s4 -> s2 [0, 65535] { R4466 += 1, R4374 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s4 -> s4 [0, 65535] { R4466 += 1, R4374 += 1, R189 += 1, R190 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4466 += 1 };
  s4 -> s1 [83, 65535] { R4466 += 1, R4374 += 1, R190 += 1, R192 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4466 += 1 };
  s7 -> s7 [0, 65535] { R4466 += 1, R4374 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R4466 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s0 [0, 65535] { R4467 += 1, R4468 += 1 };
  s0 -> s1 [0, 65535] { R4468 += 1, R4376 += 1, R4021 += 1, R4022 += 1, R4023 += 1 };
  s0 -> s2 [0, 65535] { R4468 += 1, R4376 += 1, R4021 += 1, R4023 += 1, R4024 += 1 };
  s0 -> s3 [0, 65535] { R4468 += 1, R4376 += 1, R4020 += 1, R4021 += 1 };
  s0 -> s4 [0, 65535] { R4468 += 1, R4375 += 1, R4376 += 1 };
  s1 -> s6 [0, 65535] { R4468 += 1 };
  s1 -> s8 [0, 65535] { R4468 += 1, R4376 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4468 += 1, R4376 += 1, R4021 += 1, R4022 += 1, R4023 += 1 };
  s1 -> s2 [0, 65535] { R4468 += 1, R4376 += 1, R4021 += 1, R4023 += 1, R4024 += 1 };
  s2 -> s6 [0, 65535] { R4468 += 1 };
  s2 -> s7 [0, 65535] { R4468 += 1, R4376 += 1, R4021 += 1 };
  s2 -> s8 [0, 65535] { R4468 += 1, R4376 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4468 += 1, R4376 += 1, R4021 += 1, R4023 += 1, R4024 += 1 };
  s3 -> s6 [0, 65535] { R4468 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R4468 += 1, R4376 += 1, R4021 += 1, R4022 += 1, R4023 += 1 };
  s3 -> s2 [0, 65535] { R4468 += 1, R4376 += 1, R4021 += 1, R4023 += 1, R4024 += 1 };
  s3 -> s3 [0, 65535] { R4468 += 1, R4376 += 1, R4020 += 1, R4021 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R4468 += 1, R4376 += 1, R4021 += 1, R4022 += 1, R4023 += 1 };
  s4 -> s2 [0, 65535] { R4468 += 1, R4376 += 1, R4021 += 1, R4023 += 1, R4024 += 1 };
  s4 -> s3 [0, 65535] { R4468 += 1, R4376 += 1, R4020 += 1, R4021 += 1 };
  s4 -> s4 [0, 65535] { R4468 += 1, R4375 += 1, R4376 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4468 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R4468 += 1 };
  s7 -> s7 [0, 65535] { R4468 += 1, R4376 += 1, R4021 += 1 };
  s7 -> s8 [0, 65535] { R4468 += 1, R4376 += 1 };
  s7 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R4468 += 1 };
  s8 -> s8 [0, 65535] { R4468 += 1, R4376 += 1 };
  s8 -> s5 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 75] { R4470 += 1, R4378 += 1, R4346 += 1, R4348 += 1 };
  s0 -> s0 [0, 65535] { R4469 += 1, R4470 += 1 };
  s0 -> s1 [0, 65535] { R4470 += 1, R4378 += 1, R4346 += 1 };
  s0 -> s2 [0, 65535] { R4470 += 1, R4377 += 1, R4378 += 1 };
  s0 -> s3 [0, 65535] { R4470 += 1, R4378 += 1 };
  s0 -> s1 [83, 65535] { R4470 += 1, R4378 += 1, R4346 += 1, R4348 += 1 };
  s1 -> s1 [0, 75] { R4470 += 1, R4378 += 1, R4346 += 1, R4348 += 1 };
  s1 -> s4 [0, 65535] { R4470 += 1 };
  s1 -> s1 [0, 65535] { R4470 += 1, R4378 += 1, R4346 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R4470 += 1, R4378 += 1 };
  s1 -> s1 [83, 65535] { R4470 += 1, R4378 += 1, R4346 += 1, R4348 += 1 };
  s2 -> s1 [0, 75] { R4470 += 1, R4378 += 1, R4346 += 1, R4348 += 1 };
  s2 -> s1 [0, 65535] { R4470 += 1, R4378 += 1, R4346 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4470 += 1, R4377 += 1, R4378 += 1 };
  s2 -> s3 [0, 65535] { R4470 += 1, R4378 += 1 };
  s2 -> s1 [83, 65535] { R4470 += 1, R4378 += 1, R4346 += 1, R4348 += 1 };
  s3 -> s4 [0, 65535] { R4470 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4470 += 1, R4378 += 1 };
  s4 -> s4 [0, 65535] { R4470 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s0 [0, 65535] { R4471 += 1, R4472 += 1 };
  s0 -> s1 [0, 65535] { R4472 += 1, R4408 += 1, R23 += 1 };
  s0 -> s2 [0, 65535] { R4472 += 1, R4407 += 1, R4408 += 1 };
  s1 -> s1 [0, 65535] { R4472 += 1, R4408 += 1, R23 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R4472 += 1 };
  s2 -> s1 [0, 65535] { R4472 += 1, R4408 += 1, R23 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4472 += 1, R4407 += 1, R4408 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4472 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R4474 += 1, R4410 += 1 };
  s0 -> s2 [0, 65535] { R4474 += 1, R4409 += 1, R4410 += 1 };
  s0 -> s0 [0, 65535] { R4473 += 1, R4474 += 1 };
  s0 -> s3 [70, 70] { R4474 += 1, R4410 += 1 };
  s0 -> s4 [70, 70] { R4474 += 1, R4410 += 1 };
  s0 -> s5 [75, 75] { R4474 += 1, R4410 += 1 };
  s0 -> s1 [76, 65535] { R4474 += 1, R4410 += 1 };
  s1 -> s1 [0, 69] { R4474 += 1, R4410 += 1 };
  s1 -> s3 [70, 70] { R4474 += 1, R4410 += 1 };
  s1 -> s4 [70, 70] { R4474 += 1, R4410 += 1 };
  s1 -> s5 [75, 75] { R4474 += 1, R4410 += 1 };
  s1 -> s1 [76, 65535] { R4474 += 1, R4410 += 1 };
  s2 -> s1 [0, 69] { R4474 += 1, R4410 += 1 };
  s2 -> s2 [0, 65535] { R4474 += 1, R4409 += 1, R4410 += 1 };
  s2 -> s3 [70, 70] { R4474 += 1, R4410 += 1 };
  s2 -> s4 [70, 70] { R4474 += 1, R4410 += 1 };
  s2 -> s5 [75, 75] { R4474 += 1, R4410 += 1 };
  s2 -> s1 [76, 65535] { R4474 += 1, R4410 += 1 };
  s3 -> s3 [0, 70] { R4474 += 1, R4410 += 1 };
  s3 -> s7 [75, 75] { R4474 += 1, R4410 += 1 };
  s3 -> s3 [76, 65535] { R4474 += 1, R4410 += 1 };
  s5 -> s5 [0, 69] { R4474 += 1, R4410 += 1 };
  s5 -> s5 [0, 65535] { R4474 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R4474 += 1, R4410 += 1 };
  s5 -> s8 [70, 70] { R4474 += 1, R4410 += 1 };
  s5 -> s5 [75, 65535] { R4474 += 1, R4410 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R4474 += 1, R4410 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4474 += 1 };
  s7 -> s7 [75, 65535] { R4474 += 1, R4410 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R4474 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R4476 += 1, R4412 += 1, R137 += 1 };
  s0 -> s2 [0, 65535] { R4476 += 1, R4411 += 1, R4412 += 1 };
  s0 -> s0 [0, 65535] { R4475 += 1, R4476 += 1 };
  s0 -> s3 [70, 70] { R4476 += 1, R4412 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R4476 += 1, R4412 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R4476 += 1, R4412 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R4476 += 1, R4412 += 1, R137 += 1 };
  s1 -> s1 [0, 65535] { R4476 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R4476 += 1, R4412 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R4476 += 1, R4412 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R4476 += 1, R4412 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R4476 += 1, R4412 += 1, R137 += 1 };
  s2 -> s2 [0, 65535] { R4476 += 1, R4411 += 1, R4412 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R4476 += 1, R4412 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R4476 += 1, R4412 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R4476 += 1, R4412 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R4476 += 1, R4412 += 1, R137 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R4476 += 1 };
  s4 -> s4 [0, 65535] { R4476 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4476 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R4478 += 1, R4414 += 1, R139 += 1 };
  s0 -> s0 [0, 65535] { R4477 += 1, R4478 += 1 };
  s0 -> s2 [0, 65535] { R4478 += 1, R4413 += 1, R4414 += 1 };
  s0 -> s3 [70, 70] { R4478 += 1, R4414 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R4478 += 1, R4414 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R4478 += 1, R4414 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R4478 += 1, R4414 += 1, R139 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4478 += 1 };
  s1 -> s3 [70, 70] { R4478 += 1, R4414 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R4478 += 1, R4414 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R4478 += 1, R4414 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R4478 += 1, R4414 += 1, R139 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4478 += 1, R4413 += 1, R4414 += 1 };
  s2 -> s3 [70, 70] { R4478 += 1, R4414 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R4478 += 1, R4414 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R4478 += 1, R4414 += 1, R139 += 1 };
  s3 -> s3 [0, 65535] { R4478 += 1, R4414 += 1, R139 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R4478 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4478 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4478 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R4480 += 1, R4416 += 1, R141 += 1, R142 += 1 };
  s0 -> s2 [0, 65535] { R4480 += 1, R4415 += 1, R4416 += 1 };
  s0 -> s0 [0, 65535] { R4479 += 1, R4480 += 1 };
  s0 -> s3 [70, 70] { R4480 += 1, R4416 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R4480 += 1, R4416 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R4480 += 1, R4416 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R4480 += 1, R4416 += 1, R141 += 1, R142 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R4480 += 1 };
  s1 -> s3 [70, 70] { R4480 += 1, R4416 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R4480 += 1, R4416 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R4480 += 1, R4416 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R4480 += 1, R4416 += 1, R141 += 1, R142 += 1 };
  s2 -> s2 [0, 65535] { R4480 += 1, R4415 += 1, R4416 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R4480 += 1, R4416 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R4480 += 1, R4416 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R4480 += 1, R4416 += 1, R141 += 1, R142 += 1 };
  s3 -> s3 [0, 65535] { R4480 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R4480 += 1 };
  s4 -> s4 [0, 65535] { R4480 += 1, R4416 += 1, R141 += 1, R142 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4480 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R4482 += 1, R4418 += 1, R147 += 1, R148 += 1 };
  s0 -> s0 [0, 65535] { R4481 += 1, R4482 += 1 };
  s0 -> s2 [0, 65535] { R4482 += 1, R4417 += 1, R4418 += 1 };
  s0 -> s3 [70, 70] { R4482 += 1, R4418 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R4482 += 1, R4418 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R4482 += 1, R4418 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R4482 += 1, R4418 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 65535] { R4482 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R4482 += 1, R4418 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R4482 += 1, R4418 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R4482 += 1, R4418 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R4482 += 1, R4418 += 1, R147 += 1, R148 += 1 };
  s2 -> s2 [0, 65535] { R4482 += 1, R4417 += 1, R4418 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R4482 += 1, R4418 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R4482 += 1, R4418 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R4482 += 1, R4418 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R4482 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R4482 += 1 };
  s4 -> s4 [0, 65535] { R4482 += 1, R4418 += 1, R147 += 1, R148 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4482 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R4484 += 1, R4420 += 1, R151 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R4484 += 1, R4420 += 1, R152 += 1 };
  s0 -> s3 [0, 65535] { R4484 += 1, R4419 += 1, R4420 += 1 };
  s0 -> s0 [0, 65535] { R4483 += 1, R4484 += 1 };
  s0 -> s4 [70, 70] { R4484 += 1, R4420 += 1, R151 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R4484 += 1, R4420 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R4484 += 1, R4420 += 1, R151 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R4484 += 1, R4420 += 1, R152 += 1 };
  s0 -> s2 [71, 74] { R4484 += 1, R4420 += 1, R152 += 1 };
  s0 -> s1 [71, 65535] { R4484 += 1, R4420 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R4484 += 1, R4420 += 1, R152 += 1 };
  s0 -> s2 [76, 65535] { R4484 += 1, R4420 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R4484 += 1, R4420 += 1, R151 += 1, R152 += 1 };
  s1 -> s2 [0, 69] { R4484 += 1, R4420 += 1, R152 += 1 };
  s1 -> s4 [70, 70] { R4484 += 1, R4420 += 1, R151 += 1, R152 += 1 };
  s1 -> s5 [70, 70] { R4484 += 1, R4420 += 1, R152 += 1 };
  s1 -> s6 [70, 70] { R4484 += 1, R4420 += 1, R151 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R4484 += 1, R4420 += 1, R152 += 1 };
  s1 -> s2 [71, 74] { R4484 += 1, R4420 += 1, R152 += 1 };
  s1 -> s1 [71, 65535] { R4484 += 1, R4420 += 1, R151 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R4484 += 1, R4420 += 1, R152 += 1 };
  s1 -> s2 [76, 65535] { R4484 += 1, R4420 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R4484 += 1, R4420 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R4484 += 1, R4420 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R4484 += 1, R4420 += 1, R152 += 1 };
  s2 -> s2 [71, 74] { R4484 += 1, R4420 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R4484 += 1, R4420 += 1, R152 += 1 };
  s2 -> s2 [76, 65535] { R4484 += 1, R4420 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R4484 += 1, R4420 += 1, R151 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R4484 += 1, R4420 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R4484 += 1, R4419 += 1, R4420 += 1 };
  s3 -> s4 [70, 70] { R4484 += 1, R4420 += 1, R151 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R4484 += 1, R4420 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R4484 += 1, R4420 += 1, R151 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R4484 += 1, R4420 += 1, R152 += 1 };
  s3 -> s2 [71, 74] { R4484 += 1, R4420 += 1, R152 += 1 };
  s3 -> s1 [71, 65535] { R4484 += 1, R4420 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R4484 += 1, R4420 += 1, R152 += 1 };
  s3 -> s2 [76, 65535] { R4484 += 1, R4420 += 1, R152 += 1 };
  s6 -> s7 [0, 74] { R4484 += 1, R4420 += 1, R152 += 1 };
  s6 -> s6 [0, 65535] { R4484 += 1, R4420 += 1, R151 += 1, R152 += 1 };
  s6 -> s10 [75, 75] { R4484 += 1, R4420 += 1, R152 += 1 };
  s6 -> s7 [76, 65535] { R4484 += 1, R4420 += 1, R152 += 1 };
  s7 -> s7 [0, 74] { R4484 += 1, R4420 += 1, R152 += 1 };
  s7 -> s10 [75, 75] { R4484 += 1, R4420 += 1, R152 += 1 };
  s7 -> s7 [76, 65535] { R4484 += 1, R4420 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R4484 += 1, R4420 += 1, R152 += 1 };
  s8 -> s8 [0, 65535] { R4484 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R4484 += 1, R4420 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R4484 += 1, R4420 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R4484 += 1, R4420 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R4484 += 1, R4420 += 1, R152 += 1 };
  s10 -> s12 [0, 65535] { R4484 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R4484 += 1 };
  s12 -> s12 [0, 65535] { R4484 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R4486 += 1, R4422 += 1, R155 += 1, R156 += 1 };
  s0 -> s0 [0, 65535] { R4485 += 1, R4486 += 1 };
  s0 -> s2 [0, 65535] { R4486 += 1, R4421 += 1, R4422 += 1 };
  s0 -> s3 [70, 70] { R4486 += 1, R4422 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R4486 += 1, R4422 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R4486 += 1, R4422 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R4486 += 1, R4422 += 1, R155 += 1, R156 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R4486 += 1 };
  s1 -> s3 [70, 70] { R4486 += 1, R4422 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R4486 += 1, R4422 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R4486 += 1, R4422 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R4486 += 1, R4422 += 1, R155 += 1, R156 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R4486 += 1, R4421 += 1, R4422 += 1 };
  s2 -> s3 [70, 70] { R4486 += 1, R4422 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R4486 += 1, R4422 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R4486 += 1, R4422 += 1, R155 += 1, R156 += 1 };
  s3 -> s3 [0, 65535] { R4486 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R4486 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4486 += 1, R4422 += 1, R155 += 1, R156 += 1 };
  s5 -> s5 [0, 65535] { R4486 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R4488 += 1, R4424 += 1, R161 += 1, R162 += 1 };
  s0 -> s0 [0, 65535] { R4487 += 1, R4488 += 1 };
  s0 -> s2 [0, 65535] { R4488 += 1, R4423 += 1, R4424 += 1 };
  s0 -> s3 [70, 70] { R4488 += 1, R4424 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R4488 += 1, R4424 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R4488 += 1, R4424 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R4488 += 1, R4424 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535] { R4488 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R4488 += 1, R4424 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R4488 += 1, R4424 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R4488 += 1, R4424 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R4488 += 1, R4424 += 1, R161 += 1, R162 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R4488 += 1, R4423 += 1, R4424 += 1 };
  s2 -> s3 [70, 70] { R4488 += 1, R4424 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R4488 += 1, R4424 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R4488 += 1, R4424 += 1, R161 += 1, R162 += 1 };
  s3 -> s3 [0, 65535] { R4488 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R4488 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4488 += 1, R4424 += 1, R161 += 1, R162 += 1 };
  s5 -> s5 [0, 65535] { R4488 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R4490 += 1, R4426 += 1, R167 += 1, R168 += 1 };
  s0 -> s2 [0, 65535] { R4490 += 1, R4425 += 1, R4426 += 1 };
  s0 -> s0 [0, 65535] { R4489 += 1, R4490 += 1 };
  s0 -> s3 [70, 70] { R4490 += 1, R4426 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R4490 += 1, R4426 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R4490 += 1, R4426 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R4490 += 1, R4426 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 65535] { R4490 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R4490 += 1, R4426 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R4490 += 1, R4426 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R4490 += 1, R4426 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R4490 += 1, R4426 += 1, R167 += 1, R168 += 1 };
  s2 -> s2 [0, 65535] { R4490 += 1, R4425 += 1, R4426 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R4490 += 1, R4426 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R4490 += 1, R4426 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R4490 += 1, R4426 += 1, R167 += 1, R168 += 1 };
  s3 -> s3 [0, 65535] { R4490 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R4490 += 1 };
  s4 -> s4 [0, 65535] { R4490 += 1, R4426 += 1, R167 += 1, R168 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4490 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R4492 += 1, R4428 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s2 [0, 69] { R4492 += 1, R4428 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s3 [0, 69] { R4492 += 1, R4428 += 1, R175 += 1, R176 += 1 };
  s0 -> s4 [0, 65535] { R4492 += 1, R4427 += 1, R4428 += 1 };
  s0 -> s0 [0, 65535] { R4491 += 1, R4492 += 1 };
  s0 -> s5 [70, 70] { R4492 += 1, R4428 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s6 [70, 70] { R4492 += 1, R4428 += 1, R175 += 1, R176 += 1 };
  s0 -> s7 [70, 70] { R4492 += 1, R4428 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s8 [70, 70] { R4492 += 1, R4428 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s9 [70, 70] { R4492 += 1, R4428 += 1, R175 += 1, R176 += 1 };
  s0 -> s10 [70, 70] { R4492 += 1, R4428 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s1 [71, 65535] { R4492 += 1, R4428 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s2 [71, 65535] { R4492 += 1, R4428 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s3 [71, 65535] { R4492 += 1, R4428 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [0, 69] { R4492 += 1, R4428 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s14 [0, 69] { R4492 += 1, R4428 += 1, R176 += 1 };
  s1 -> s5 [70, 70] { R4492 += 1, R4428 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s8 [70, 70] { R4492 += 1, R4428 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s15 [70, 70] { R4492 += 1, R4428 += 1, R176 += 1 };
  s1 -> s11 [70, 70] { R4492 += 1, R4428 += 1, R176 += 1 };
  s1 -> s1 [71, 65535] { R4492 += 1, R4428 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s14 [71, 65535] { R4492 += 1, R4428 += 1, R176 += 1 };
  s2 -> s1 [0, 69] { R4492 += 1, R4428 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [0, 69] { R4492 += 1, R4428 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s5 [70, 70] { R4492 += 1, R4428 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s7 [70, 70] { R4492 += 1, R4428 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s8 [70, 70] { R4492 += 1, R4428 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s10 [70, 70] { R4492 += 1, R4428 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s1 [71, 65535] { R4492 += 1, R4428 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [71, 65535] { R4492 += 1, R4428 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s1 [0, 69] { R4492 += 1, R4428 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s2 [0, 69] { R4492 += 1, R4428 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s3 [0, 69] { R4492 += 1, R4428 += 1, R175 += 1, R176 += 1 };
  s3 -> s5 [70, 70] { R4492 += 1, R4428 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s6 [70, 70] { R4492 += 1, R4428 += 1, R175 += 1, R176 += 1 };
  s3 -> s7 [70, 70] { R4492 += 1, R4428 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s8 [70, 70] { R4492 += 1, R4428 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s9 [70, 70] { R4492 += 1, R4428 += 1, R175 += 1, R176 += 1 };
  s3 -> s10 [70, 70] { R4492 += 1, R4428 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s1 [71, 65535] { R4492 += 1, R4428 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s2 [71, 65535] { R4492 += 1, R4428 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s3 [71, 65535] { R4492 += 1, R4428 += 1, R175 += 1, R176 += 1 };
  s4 -> s1 [0, 69] { R4492 += 1, R4428 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s2 [0, 69] { R4492 += 1, R4428 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s3 [0, 69] { R4492 += 1, R4428 += 1, R175 += 1, R176 += 1 };
  s4 -> s4 [0, 65535] { R4492 += 1, R4427 += 1, R4428 += 1 };
  s4 -> s5 [70, 70] { R4492 += 1, R4428 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s6 [70, 70] { R4492 += 1, R4428 += 1, R175 += 1, R176 += 1 };
  s4 -> s7 [70, 70] { R4492 += 1, R4428 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s8 [70, 70] { R4492 += 1, R4428 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s9 [70, 70] { R4492 += 1, R4428 += 1, R175 += 1, R176 += 1 };
  s4 -> s10 [70, 70] { R4492 += 1, R4428 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s1 [71, 65535] { R4492 += 1, R4428 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s2 [71, 65535] { R4492 += 1, R4428 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s3 [71, 65535] { R4492 += 1, R4428 += 1, R175 += 1, R176 += 1 };
  s6 -> s6 [0, 65535] { R4492 += 1, R4428 += 1, R175 += 1, R176 += 1 };
  s6 -> s7 [0, 65535] { R4492 += 1, R4428 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s6 -> s8 [0, 65535] { R4492 += 1, R4428 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s7 -> s7 [0, 65535] { R4492 += 1, R4428 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s7 -> s8 [0, 65535] { R4492 += 1, R4428 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s8 -> s8 [0, 65535] { R4492 += 1, R4428 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s8 -> s11 [0, 65535] { R4492 += 1, R4428 += 1, R176 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s11 [0, 65535] { R4492 += 1, R4428 += 1, R176 += 1 };
  s11 -> s13 [0, 65535] { R4492 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R4492 += 1 };
  s14 -> s14 [0, 69] { R4492 += 1, R4428 += 1, R176 += 1 };
  s14 -> s14 [0, 65535] { R4492 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s15 [70, 70] { R4492 += 1, R4428 += 1, R176 += 1 };
  s14 -> s11 [70, 70] { R4492 += 1, R4428 += 1, R176 += 1 };
  s14 -> s14 [71, 65535] { R4492 += 1, R4428 += 1, R176 += 1 };
  s15 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R4492 += 1 };
  accepting s12, s13, s14, s15, s11;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R4494 += 1, R4430 += 1, R185 += 1, R186 += 1 };
  s0 -> s2 [0, 65535] { R4494 += 1, R4429 += 1, R4430 += 1 };
  s0 -> s0 [0, 65535] { R4493 += 1, R4494 += 1 };
  s0 -> s3 [70, 70] { R4494 += 1, R4430 += 1, R185 += 1, R186 += 1 };
  s0 -> s4 [70, 70] { R4494 += 1, R4430 += 1, R185 += 1, R186 += 1 };
  s0 -> s1 [71, 65535] { R4494 += 1, R4430 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 69] { R4494 += 1, R4430 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 65535] { R4494 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R4494 += 1, R4430 += 1, R185 += 1, R186 += 1 };
  s1 -> s4 [70, 70] { R4494 += 1, R4430 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [71, 65535] { R4494 += 1, R4430 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [0, 69] { R4494 += 1, R4430 += 1, R185 += 1, R186 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4494 += 1, R4429 += 1, R4430 += 1 };
  s2 -> s3 [70, 70] { R4494 += 1, R4430 += 1, R185 += 1, R186 += 1 };
  s2 -> s4 [70, 70] { R4494 += 1, R4430 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [71, 65535] { R4494 += 1, R4430 += 1, R185 += 1, R186 += 1 };
  s3 -> s3 [0, 65535] { R4494 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4494 += 1, R4430 += 1, R185 += 1, R186 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4494 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4494 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R4496 += 1, R4432 += 1, R4015 += 1, R4016 += 1 };
  s0 -> s2 [0, 65535] { R4496 += 1, R4431 += 1, R4432 += 1 };
  s0 -> s0 [0, 65535] { R4495 += 1, R4496 += 1 };
  s0 -> s3 [70, 70] { R4496 += 1, R4432 += 1, R4015 += 1, R4016 += 1 };
  s0 -> s4 [70, 70] { R4496 += 1, R4432 += 1, R4015 += 1, R4016 += 1 };
  s0 -> s1 [71, 65535] { R4496 += 1, R4432 += 1, R4015 += 1, R4016 += 1 };
  s1 -> s1 [0, 69] { R4496 += 1, R4432 += 1, R4015 += 1, R4016 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4496 += 1 };
  s1 -> s3 [70, 70] { R4496 += 1, R4432 += 1, R4015 += 1, R4016 += 1 };
  s1 -> s4 [70, 70] { R4496 += 1, R4432 += 1, R4015 += 1, R4016 += 1 };
  s1 -> s1 [71, 65535] { R4496 += 1, R4432 += 1, R4015 += 1, R4016 += 1 };
  s2 -> s1 [0, 69] { R4496 += 1, R4432 += 1, R4015 += 1, R4016 += 1 };
  s2 -> s2 [0, 65535] { R4496 += 1, R4431 += 1, R4432 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R4496 += 1, R4432 += 1, R4015 += 1, R4016 += 1 };
  s2 -> s4 [70, 70] { R4496 += 1, R4432 += 1, R4015 += 1, R4016 += 1 };
  s2 -> s1 [71, 65535] { R4496 += 1, R4432 += 1, R4015 += 1, R4016 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4496 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4496 += 1, R4432 += 1, R4015 += 1, R4016 += 1 };
  s4 -> s6 [0, 65535] { R4496 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4496 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R4498 += 1, R4434 += 1, R4342 += 1, R4343 += 1, R4344 += 1 };
  s0 -> s2 [0, 69] { R4498 += 1, R4434 += 1, R4341 += 1, R4342 += 1 };
  s0 -> s3 [0, 69] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s0 -> s4 [0, 65535] { R4498 += 1, R4433 += 1, R4434 += 1 };
  s0 -> s0 [0, 65535] { R4497 += 1, R4498 += 1 };
  s0 -> s5 [70, 70] { R4498 += 1, R4434 += 1, R4342 += 1, R4343 += 1, R4344 += 1 };
  s0 -> s6 [70, 70] { R4498 += 1, R4434 += 1, R4342 += 1, R4343 += 1, R4344 += 1 };
  s0 -> s7 [70, 70] { R4498 += 1, R4434 += 1, R4341 += 1, R4342 += 1 };
  s0 -> s8 [70, 70] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s0 -> s9 [70, 70] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s0 -> s10 [70, 70] { R4498 += 1, R4434 += 1, R4341 += 1, R4342 += 1 };
  s0 -> s3 [71, 74] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s0 -> s1 [71, 65535] { R4498 += 1, R4434 += 1, R4342 += 1, R4343 += 1, R4344 += 1 };
  s0 -> s2 [71, 65535] { R4498 += 1, R4434 += 1, R4341 += 1, R4342 += 1 };
  s0 -> s11 [75, 75] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s0 -> s12 [83, 83] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s0 -> s3 [84, 65535] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s1 -> s1 [0, 69] { R4498 += 1, R4434 += 1, R4342 += 1, R4343 += 1, R4344 += 1 };
  s1 -> s3 [0, 69] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s1 -> s5 [70, 70] { R4498 += 1, R4434 += 1, R4342 += 1, R4343 += 1, R4344 += 1 };
  s1 -> s6 [70, 70] { R4498 += 1, R4434 += 1, R4342 += 1, R4343 += 1, R4344 += 1 };
  s1 -> s8 [70, 70] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s1 -> s9 [70, 70] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s1 -> s3 [71, 74] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s1 -> s1 [71, 65535] { R4498 += 1, R4434 += 1, R4342 += 1, R4343 += 1, R4344 += 1 };
  s1 -> s11 [75, 75] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s1 -> s12 [83, 83] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s1 -> s3 [84, 65535] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s2 -> s1 [0, 69] { R4498 += 1, R4434 += 1, R4342 += 1, R4343 += 1, R4344 += 1 };
  s2 -> s2 [0, 69] { R4498 += 1, R4434 += 1, R4341 += 1, R4342 += 1 };
  s2 -> s3 [0, 69] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s2 -> s5 [70, 70] { R4498 += 1, R4434 += 1, R4342 += 1, R4343 += 1, R4344 += 1 };
  s2 -> s6 [70, 70] { R4498 += 1, R4434 += 1, R4342 += 1, R4343 += 1, R4344 += 1 };
  s2 -> s7 [70, 70] { R4498 += 1, R4434 += 1, R4341 += 1, R4342 += 1 };
  s2 -> s8 [70, 70] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s2 -> s9 [70, 70] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s2 -> s10 [70, 70] { R4498 += 1, R4434 += 1, R4341 += 1, R4342 += 1 };
  s2 -> s3 [71, 74] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s2 -> s1 [71, 65535] { R4498 += 1, R4434 += 1, R4342 += 1, R4343 += 1, R4344 += 1 };
  s2 -> s2 [71, 65535] { R4498 += 1, R4434 += 1, R4341 += 1, R4342 += 1 };
  s2 -> s11 [75, 75] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s2 -> s12 [83, 83] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s2 -> s3 [84, 65535] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s3 -> s3 [0, 69] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s3 -> s8 [70, 70] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s3 -> s9 [70, 70] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s3 -> s3 [71, 74] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s3 -> s11 [75, 75] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s3 -> s12 [83, 83] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s3 -> s3 [84, 65535] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s4 -> s1 [0, 69] { R4498 += 1, R4434 += 1, R4342 += 1, R4343 += 1, R4344 += 1 };
  s4 -> s2 [0, 69] { R4498 += 1, R4434 += 1, R4341 += 1, R4342 += 1 };
  s4 -> s3 [0, 69] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s4 -> s4 [0, 65535] { R4498 += 1, R4433 += 1, R4434 += 1 };
  s4 -> s5 [70, 70] { R4498 += 1, R4434 += 1, R4342 += 1, R4343 += 1, R4344 += 1 };
  s4 -> s6 [70, 70] { R4498 += 1, R4434 += 1, R4342 += 1, R4343 += 1, R4344 += 1 };
  s4 -> s7 [70, 70] { R4498 += 1, R4434 += 1, R4341 += 1, R4342 += 1 };
  s4 -> s8 [70, 70] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s4 -> s9 [70, 70] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s4 -> s10 [70, 70] { R4498 += 1, R4434 += 1, R4341 += 1, R4342 += 1 };
  s4 -> s3 [71, 74] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s4 -> s1 [71, 65535] { R4498 += 1, R4434 += 1, R4342 += 1, R4343 += 1, R4344 += 1 };
  s4 -> s2 [71, 65535] { R4498 += 1, R4434 += 1, R4341 += 1, R4342 += 1 };
  s4 -> s11 [75, 75] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s4 -> s12 [83, 83] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s4 -> s3 [84, 65535] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s5 -> s8 [0, 74] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s5 -> s5 [0, 65535] { R4498 += 1, R4434 += 1, R4342 += 1, R4343 += 1, R4344 += 1 };
  s5 -> s21 [75, 75] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s5 -> s13 [83, 83] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s5 -> s8 [84, 65535] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s7 -> s8 [0, 74] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s7 -> s5 [0, 65535] { R4498 += 1, R4434 += 1, R4342 += 1, R4343 += 1, R4344 += 1 };
  s7 -> s7 [0, 65535] { R4498 += 1, R4434 += 1, R4341 += 1, R4342 += 1 };
  s7 -> s21 [75, 75] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s7 -> s13 [83, 83] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s7 -> s8 [84, 65535] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s8 -> s8 [0, 74] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s8 -> s21 [75, 75] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s8 -> s13 [83, 83] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s8 -> s8 [84, 65535] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s11 -> s11 [0, 69] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s11 -> s20 [70, 70] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s11 -> s21 [70, 70] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s11 -> s11 [71, 75] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s11 -> s15 [83, 83] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s11 -> s11 [84, 65535] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s12 -> s12 [0, 69] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s12 -> s13 [70, 70] { R4498 += 1, R4434 += 1, R4342 += 1 };
  s12 -> s14 [70, 70] { R4498 += 1, R4434 += 1, R4342 += 1 };
  s12 -> s12 [71, 74] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s12 -> s12 [71, 65535] { R4498 += 1, R4434 += 1, R4342 += 1 };
  s12 -> s15 [75, 75] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s12 -> s12 [83, 65535] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s13 -> s13 [0, 74] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s13 -> s13 [0, 65535] { R4498 += 1, R4434 += 1, R4342 += 1 };
  s13 -> s17 [75, 75] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s13 -> s13 [83, 65535] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s15 -> s15 [0, 69] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s15 -> s15 [0, 65535] { R4498 += 1 };
  s15 -> s16 [0, 65535];
  s15 -> s17 [70, 70] { R4498 += 1, R4434 += 1, R4342 += 1 };
  s15 -> s18 [70, 70] { R4498 += 1, R4434 += 1, R4342 += 1 };
  s15 -> s15 [71, 75] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s15 -> s15 [71, 65535] { R4498 += 1, R4434 += 1, R4342 += 1 };
  s15 -> s15 [83, 65535] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s16 -> s16 [0, 65535];
  s17 -> s17 [0, 75] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s17 -> s17 [0, 65535] { R4498 += 1, R4434 += 1, R4342 += 1 };
  s17 -> s19 [0, 65535] { R4498 += 1 };
  s17 -> s16 [0, 65535];
  s17 -> s17 [83, 65535] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s18 -> s18 [0, 65535] { R4498 += 1 };
  s18 -> s16 [0, 65535];
  s19 -> s19 [0, 65535] { R4498 += 1 };
  s19 -> s16 [0, 65535];
  s21 -> s21 [0, 75] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s21 -> s17 [83, 83] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  s21 -> s21 [84, 65535] { R4498 += 1, R4434 += 1, R4342 += 1, R4344 += 1 };
  accepting s17, s16, s19, s18, s15;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
constraint R3 = R4498 && R25 - R4498 = -1 && R26 = R4498 && R27 - R4498 = -1 && R28 = R4498 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R4346 + -1*R4342 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R4346 + -1*R4342 - R130 = 0 && R129 + R4345 + R4341 = 0 && R131 + R4347 + R4343 = 0 && R132 + R4348 + R4344 = 0 && R4409 = 0 && R4410 = 0 && R4419 = 0 && R4420 = 0 && R4427 = 0 && R4428 = 0 && R4433 = 0 && R4434 = 0 && R4435 = 0 && R4436 = R4498 && R4437 = 0 && R4438 = R4498 && R4439 = 0 && R4440 = R4498 && R4441 = 0 && R4442 = R4498 && R4443 = 0 && R4444 = R4498 && R4445 = 0 && R4446 = R4498 && R4447 = 0 && R4448 = R4498 && R4449 = 0 && R4450 = R4498 && R4451 = 0 && R4452 = R4498 && R4453 = 0 && R4454 = R4498 && R4455 = 0 && R4456 = R4498 && R4457 = 0 && R4458 = R4498 && R4459 = 0 && R4460 = R4498 && R4461 = 0 && R4462 = R4498 && R4463 = 0 && R4464 = R4498 && R4465 = 0 && R4466 = R4498 && R4467 = 0 && R4468 = R4498 && R4469 = 0 && R4470 = R4498 && R4471 = 0 && R4472 = R4498 && R4473 = 0 && R4474 = R4498 && R4475 = 0 && R4476 = R4498 && R4477 = 0 && R4478 = R4498 && R4479 = 0 && R4480 = R4498 && R4481 = 0 && R4482 = R4498 && R4483 = 0 && R4484 = R4498 && R4485 = 0 && R4486 = R4498 && R4487 = 0 && R4488 = R4498 && R4489 = 0 && R4490 = R4498 && R4491 = 0 && R4492 = R4498 && R4493 = 0 && R4494 = R4498 && R4495 = 0 && R4496 = R4498 && R4497 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R4346 + -1*R4342 - R130 < 1 && 0 < R4498 && (R2 != 0 || R22 = 0 || (R4349 = 0 && R4350 = 0)) && (R2 != 0 || R22 = 0 || (R4351 = 0 && R4352 = 0)) && (R2 != 0 || R22 = 0 || (R4353 = 0 && R4354 = 0)) && (R2 != 0 || R22 = 0 || (R4355 = 0 && R4356 = 0)) && (R2 != 0 || R22 = 0 || (R4357 = 0 && R4358 = 0)) && (R2 != 0 || R22 = 0 || (R4359 = 0 && R4360 = 0)) && (R2 != 0 || R22 = 0 || (R4361 = 0 && R4362 = 0)) && (R2 != 0 || R22 = 0 || (R4363 = 0 && R4364 = 0)) && (R2 != 0 || R22 = 0 || (R4365 = 0 && R4366 = 0)) && (R2 != 0 || R22 = 0 || (R4367 = 0 && R4368 = 0)) && (R2 != 0 || R22 = 0 || (R4369 = 0 && R4370 = 0)) && (R2 != 0 || R22 = 0 || (R4371 = 0 && R4372 = 0)) && (R2 != 0 || R22 = 0 || (R4373 = 0 && R4374 = 0)) && (R2 != 0 || R22 = 0 || (R4375 = 0 && R4376 = 0)) && (R2 != 0 || R22 = 0 || (R4377 = 0 && R4378 = 0)) && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R4346 + -1*R4342 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R191 + R187 = 0 && R114 + R192 + R188 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R4346 + -1*R4342 - R130 = 0 || R130 + R4346 + R4342 < 1) && (R81 + R158 + R155 = 0 || R130 + R4346 + R4342 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R4346 + -1*R4342 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R4346 + R4342 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R4346 + -1*R4342 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R4346 + R4342 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R4346 + -1*R4342 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R4346 + R4342 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 != 0 || R112 + R190 + R186 + -1*R4346 + -1*R4342 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R4346 + R4342 = 0)) && (R113 + R191 + R187 != 0 || R83 + R160 + R157 + -1*R192 + -1*R188 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R4020 + R4015 != 0 || R120 + R4021 + R4016 + -1*R4346 + -1*R4342 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R4346 + R4342 = 0)) && (R4349 != 0 || R2 = R4350 || R2 < 1) && (R4351 != 0 || R2 = R4352 || R2 < 1) && (R4353 != 0 || R2 = R4354 || R2 < 1) && (R4355 != 0 || R2 = R4356 || R2 < 1) && (R4357 != 0 || R2 = R4358 || R2 < 1) && (R4359 != 0 || R2 = R4360 || R2 < 1) && (R4361 != 0 || R2 = R4362 || R2 < 1) && (R4363 != 0 || R2 = R4364 || R2 < 1) && (R4365 != 0 || R2 = R4366 || R2 < 1) && (R4367 != 0 || R2 = R4368 || R2 < 1) && (R4369 != 0 || R2 = R4370 || R2 < 1) && (R4371 != 0 || R2 = R4372 || R2 < 1) && (R4373 != 0 || R2 = R4374 || R2 < 1) && (R4375 != 0 || R2 = R4376 || R2 < 1) && (R4377 != 0 || R2 = R4378 || R2 < 1) && (R23 = 0 || (R4407 = 0 && R4408 = 0)) && (R23 = 0 || (R4411 = 0 && R4412 = 0)) && (R23 = 0 || (R4413 = 0 && R4414 = 0)) && (R23 = 0 || (R4415 = 0 && R4416 = 0)) && (R23 = 0 || (R4417 = 0 && R4418 = 0)) && (R23 = 0 || (R4421 = 0 && R4422 = 0)) && (R23 = 0 || (R4423 = 0 && R4424 = 0)) && (R23 = 0 || (R4425 = 0 && R4426 = 0)) && (R23 = 0 || (R4429 = 0 && R4430 = 0)) && (R23 = 0 || (R4431 = 0 && R4432 = 0)) && (R24 = 0 || (R4379 = 0 && R4380 = 0)) && (R24 = 0 || (R4381 = 0 && R4382 = 0)) && (R24 = 0 || (R4383 = 0 && R4384 = 0)) && (R24 = 0 || (R4385 = 0 && R4386 = 0)) && (R24 = 0 || (R4387 = 0 && R4388 = 0)) && (R24 = 0 || (R4389 = 0 && R4390 = 0)) && (R24 = 0 || (R4391 = 0 && R4392 = 0)) && (R24 = 0 || (R4393 = 0 && R4394 = 0)) && (R24 = 0 || (R4395 = 0 && R4396 = 0)) && (R24 = 0 || (R4397 = 0 && R4398 = 0)) && (R24 = 0 || (R4399 = 0 && R4400 = 0)) && (R24 = 0 || (R4401 = 0 && R4402 = 0)) && (R24 = 0 || (R4403 = 0 && R4404 = 0)) && (R24 = 0 || (R4405 = 0 && R4406 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R4346 + R4342 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R4346 + R4342 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R4346 + R4342 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 = 0 || (R83 + R160 + R157 = 0 && R130 + R4346 + R4342 = 0)) && (R113 + R191 + R187 = 0 || R83 + R160 + R157 < 1) && (R119 + R4020 + R4015 = 0 || (R83 + R160 + R157 = 0 && R130 + R4346 + R4342 = 0)) && (R123 + R4024 + R4019 = 0 || (R121 + R4022 + R4017 = 0 && R122 + R4023 + R4018 = 0)) && (R4349 = 0 || R2 < 1) && (R4351 = 0 || R2 < 1) && (R4353 = 0 || R2 < 1) && (R4355 = 0 || R2 < 1) && (R4357 = 0 || R2 < 1) && (R4359 = 0 || R2 < 1) && (R4361 = 0 || R2 < 1) && (R4363 = 0 || R2 < 1) && (R4365 = 0 || R2 < 1) && (R4367 = 0 || R2 < 1) && (R4369 = 0 || R2 < 1) && (R4371 = 0 || R2 < 1) && (R4373 = 0 || R2 < 1) && (R4375 = 0 || R2 < 1) && (R4377 = 0 || R2 < 1);
// End of Parikh automata intersection problem
