// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R10393, R10394, R10395, R10396, R10397, R10398, R10399, R104, R10400, R10401, R10402, R105, R10877, R10878, R10879, R10880, R10881, R10882, R10883, R10884, R10885, R10886, R10887, R10888, R10889, R10890, R10891, R10892, R10893, R10894, R10895, R10896, R10897, R10898, R10899, R10900, R10901, R10902, R10903, R10904, R10905, R10906, R10907, R10908, R10909, R10910, R10911, R10912, R10913, R10914, R10915, R10916, R10917, R10918, R10919, R10920, R10921, R10922, R10923, R10924, R10925, R10926, R10927, R10928, R10929, R10930, R10931, R10932, R10933, R10934, R10935, R10936, R10937, R10938, R10939, R10940, R10941, R10942, R10943, R10944, R10945, R10946, R10947, R10948, R10949, R10950, R10951, R10952, R10953, R10954, R10955, R10956, R10957, R10958, R10959, R10960, R10961, R10962, R10963, R10964, R10965, R10966, R10967, R10968, R10969, R10970, R10971, R10972, R10973, R10974, R10975, R10976, R10977, R10978, R10979, R10980, R10981, R10982, R10983, R10984, R10985, R10986, R10987, R10988, R10989, R10990, R10991, R10992, R10993, R10994, R10995, R10996, R10997, R10998, R10999, R11000, R11001, R11002, R11003, R11004, R11005, R11006, R11007, R11008, R11009, R11010, R11011, R11012, R11013, R11014, R11015, R11016, R11017, R11018, R11019, R11020, R11021, R11022, R11023, R11024, R11025, R11026, R11027, R11028, R11029, R11030, R11031, R11032, R11033, R11034, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R2, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R5, R63, R65, R6563, R6564, R6565, R6566, R6567, R6568, R6569, R6570, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R26 += 1 };
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R30 += 1 };
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R10916 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R10915 += 1, R10916 += 1 };
  s1 -> s1 [0, 65535] { R10916 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R10918 += 1 };
  s0 -> s0 [0, 65535] { R10917 += 1, R10918 += 1 };
  s0 -> s2 [70, 70] { R10918 += 1 };
  s0 -> s3 [70, 70] { R10918 += 1 };
  s0 -> s1 [76, 65535] { R10918 += 1 };
  s1 -> s1 [0, 69] { R10918 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10918 += 1 };
  s1 -> s3 [70, 70] { R10918 += 1 };
  s1 -> s1 [76, 65535] { R10918 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R10918 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R10918 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R10920 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R10919 += 1, R10920 += 1 };
  s0 -> s2 [70, 70] { R10920 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R10920 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R10920 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R10920 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10920 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R10920 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R10920 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R10920 += 1, R63 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R10922 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R10921 += 1, R10922 += 1 };
  s0 -> s2 [70, 70] { R10922 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R10922 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R10922 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R10922 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10922 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R10922 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R10922 += 1, R65 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R10922 += 1, R65 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R10924 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R10923 += 1, R10924 += 1 };
  s0 -> s2 [70, 70] { R10924 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R10924 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R10924 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R10924 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10924 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R10924 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R10924 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R10924 += 1, R67 += 1, R68 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R10926 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R10925 += 1, R10926 += 1 };
  s0 -> s2 [70, 70] { R10926 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R10926 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R10926 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R10926 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10926 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R10926 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R10926 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R10926 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R10928 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R10927 += 1, R10928 += 1 };
  s0 -> s2 [70, 70] { R10928 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R10928 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R10928 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R10928 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10928 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R10928 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R10928 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R10928 += 1, R77 += 1, R78 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R10930 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R10929 += 1, R10930 += 1 };
  s0 -> s2 [70, 70] { R10930 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R10930 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R10930 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R10930 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10930 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R10930 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R10930 += 1, R81 += 1, R82 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R10930 += 1, R81 += 1, R82 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R10932 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R10931 += 1, R10932 += 1 };
  s0 -> s2 [70, 70] { R10932 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R10932 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R10932 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R10932 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10932 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R10932 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R10932 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R10932 += 1, R87 += 1, R88 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R10934 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R10933 += 1, R10934 += 1 };
  s0 -> s2 [70, 70] { R10934 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R10934 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R10934 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R10934 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10934 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R10934 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R10934 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R10934 += 1, R93 += 1, R94 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R10936 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R10935 += 1, R10936 += 1 };
  s0 -> s2 [70, 70] { R10936 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R10936 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R10936 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R10936 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10936 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R10936 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R10936 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R10936 += 1, R101 += 1, R102 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R10938 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R10937 += 1, R10938 += 1 };
  s0 -> s2 [70, 70] { R10938 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R10938 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R10938 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R10938 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10938 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R10938 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R10938 += 1, R111 += 1, R112 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R10938 += 1, R111 += 1, R112 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R10940 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R10939 += 1, R10940 += 1 };
  s0 -> s2 [70, 70] { R10940 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R10940 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R10940 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R10940 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10940 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R10940 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R10940 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R10940 += 1, R119 += 1, R120 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R10942 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R10941 += 1, R10942 += 1 };
  s0 -> s2 [70, 70] { R10942 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R10942 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R10942 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R10942 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10942 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R10942 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R10942 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R10942 += 1, R129 += 1, R130 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R10972 += 1 };
  s0 -> s0 [0, 65535] { R10971 += 1, R10972 += 1 };
  s0 -> s2 [70, 70] { R10972 += 1 };
  s0 -> s1 [71, 65535] { R10972 += 1 };
  s1 -> s1 [0, 69] { R10972 += 1 };
  s1 -> s2 [70, 70] { R10972 += 1 };
  s1 -> s1 [71, 65535] { R10972 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R10972 += 1 };
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R10974 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R10973 += 1, R10974 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R10974 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R10976 += 1 };
  s0 -> s0 [0, 65535] { R10975 += 1, R10976 += 1 };
  s0 -> s2 [0, 65535] { R10976 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R10976 += 1 };
  s0 -> s1 [71, 65535] { R10976 += 1 };
  s1 -> s1 [0, 69] { R10976 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R10976 += 1 };
  s1 -> s1 [71, 65535] { R10976 += 1 };
  s2 -> s1 [0, 69] { R10976 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R10976 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R10976 += 1 };
  s2 -> s1 [71, 65535] { R10976 += 1 };
  s3 -> s3 [0, 65535] { R10976 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R10978 += 1, R10886 += 1 };
  s0 -> s0 [0, 65535] { R10977 += 1, R10978 += 1 };
  s0 -> s2 [0, 65535] { R10978 += 1, R10885 += 1, R10886 += 1 };
  s0 -> s1 [71, 65535] { R10978 += 1, R10886 += 1 };
  s1 -> s1 [0, 69] { R10978 += 1, R10886 += 1 };
  s1 -> s1 [0, 65535] { R10978 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R10978 += 1, R10886 += 1 };
  s2 -> s1 [0, 69] { R10978 += 1, R10886 += 1 };
  s2 -> s2 [0, 65535] { R10978 += 1, R10885 += 1, R10886 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R10978 += 1, R10886 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R10980 += 1, R10887 += 1, R10888 += 1 };
  s0 -> s0 [0, 65535] { R10979 += 1, R10980 += 1 };
  s0 -> s2 [0, 65535] { R10980 += 1, R10888 += 1, R22 += 1 };
  s1 -> s1 [0, 65535] { R10980 += 1, R10887 += 1, R10888 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R10980 += 1, R10888 += 1, R22 += 1 };
  s2 -> s3 [0, 65535] { R10980 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R10980 += 1, R10888 += 1, R22 += 1 };
  s3 -> s3 [0, 65535] { R10980 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R10982 += 1, R10890 += 1 };
  s0 -> s0 [0, 65535] { R10981 += 1, R10982 += 1 };
  s0 -> s2 [0, 65535] { R10982 += 1, R10889 += 1, R10890 += 1 };
  s0 -> s1 [75, 65535] { R10982 += 1, R10890 += 1 };
  s1 -> s1 [0, 70] { R10982 += 1, R10890 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R10982 += 1 };
  s1 -> s1 [75, 65535] { R10982 += 1, R10890 += 1 };
  s2 -> s1 [0, 70] { R10982 += 1, R10890 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R10982 += 1, R10889 += 1, R10890 += 1 };
  s2 -> s1 [75, 65535] { R10982 += 1, R10890 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R10984 += 1, R10892 += 1, R138 += 1 };
  s0 -> s0 [0, 65535] { R10983 += 1, R10984 += 1 };
  s0 -> s2 [0, 65535] { R10984 += 1, R10891 += 1, R10892 += 1 };
  s1 -> s1 [0, 65535] { R10984 += 1, R10892 += 1, R138 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R10984 += 1 };
  s2 -> s1 [0, 65535] { R10984 += 1, R10892 += 1, R138 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R10984 += 1, R10891 += 1, R10892 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R10984 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R10986 += 1, R10894 += 1 };
  s0 -> s2 [0, 65535] { R10986 += 1, R10894 += 1, R140 += 1 };
  s0 -> s0 [0, 65535] { R10985 += 1, R10986 += 1 };
  s0 -> s3 [0, 65535] { R10986 += 1, R10893 += 1, R10894 += 1 };
  s0 -> s1 [76, 65535] { R10986 += 1, R10894 += 1 };
  s1 -> s1 [0, 74] { R10986 += 1, R10894 += 1 };
  s1 -> s1 [0, 65535] { R10986 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [76, 65535] { R10986 += 1, R10894 += 1 };
  s2 -> s1 [0, 74] { R10986 += 1, R10894 += 1 };
  s2 -> s5 [0, 65535] { R10986 += 1 };
  s2 -> s2 [0, 65535] { R10986 += 1, R10894 += 1, R140 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [76, 65535] { R10986 += 1, R10894 += 1 };
  s3 -> s1 [0, 74] { R10986 += 1, R10894 += 1 };
  s3 -> s2 [0, 65535] { R10986 += 1, R10894 += 1, R140 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R10986 += 1, R10893 += 1, R10894 += 1 };
  s3 -> s1 [76, 65535] { R10986 += 1, R10894 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R10986 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R10987 += 1, R10988 += 1 };
  s0 -> s1 [0, 65535] { R10988 += 1, R10896 += 1, R145 += 1, R146 += 1 };
  s0 -> s2 [0, 65535] { R10988 += 1, R10895 += 1, R10896 += 1 };
  s0 -> s3 [0, 65535] { R10988 += 1, R10896 += 1, R144 += 1, R145 += 1 };
  s1 -> s4 [0, 65535] { R10988 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R10988 += 1, R10896 += 1, R145 += 1, R146 += 1 };
  s1 -> s6 [0, 65535] { R10988 += 1, R10896 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R10988 += 1, R10896 += 1, R145 += 1, R146 += 1 };
  s2 -> s2 [0, 65535] { R10988 += 1, R10895 += 1, R10896 += 1 };
  s2 -> s3 [0, 65535] { R10988 += 1, R10896 += 1, R144 += 1, R145 += 1 };
  s3 -> s4 [0, 65535] { R10988 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R10988 += 1, R10896 += 1, R145 += 1, R146 += 1 };
  s3 -> s3 [0, 65535] { R10988 += 1, R10896 += 1, R144 += 1, R145 += 1 };
  s4 -> s4 [0, 65535] { R10988 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R10988 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10988 += 1, R10896 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R10990 += 1, R10898 += 1, R150 += 1 };
  s0 -> s2 [0, 65535] { R10990 += 1, R10898 += 1, R149 += 1, R150 += 1 };
  s0 -> s3 [0, 65535] { R10990 += 1, R10897 += 1, R10898 += 1 };
  s0 -> s0 [0, 65535] { R10989 += 1, R10990 += 1 };
  s0 -> s4 [75, 75] { R10990 += 1, R10898 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R10990 += 1, R10898 += 1, R150 += 1 };
  s0 -> s1 [84, 65535] { R10990 += 1, R10898 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R10990 += 1, R10898 += 1, R150 += 1 };
  s1 -> s1 [0, 65535] { R10990 += 1, R10898 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R10990 += 1 };
  s1 -> s4 [75, 75] { R10990 += 1, R10898 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R10990 += 1, R10898 += 1, R150 += 1 };
  s1 -> s1 [84, 65535] { R10990 += 1, R10898 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R10990 += 1, R10898 += 1, R150 += 1 };
  s2 -> s2 [0, 65535] { R10990 += 1, R10898 += 1, R149 += 1, R150 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R10990 += 1 };
  s2 -> s4 [75, 75] { R10990 += 1, R10898 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R10990 += 1, R10898 += 1, R150 += 1 };
  s2 -> s1 [84, 65535] { R10990 += 1, R10898 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R10990 += 1, R10898 += 1, R150 += 1 };
  s3 -> s2 [0, 65535] { R10990 += 1, R10898 += 1, R149 += 1, R150 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R10990 += 1, R10897 += 1, R10898 += 1 };
  s3 -> s4 [75, 75] { R10990 += 1, R10898 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R10990 += 1, R10898 += 1, R150 += 1 };
  s3 -> s1 [84, 65535] { R10990 += 1, R10898 += 1, R150 += 1 };
  s4 -> s4 [0, 75] { R10990 += 1, R10898 += 1, R150 += 1 };
  s4 -> s4 [0, 65535] { R10990 += 1, R10898 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R10990 += 1 };
  s4 -> s4 [84, 65535] { R10990 += 1, R10898 += 1, R150 += 1 };
  s5 -> s5 [0, 65535] { R10990 += 1, R10898 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R10990 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R10990 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R10992 += 1, R10899 += 1, R10900 += 1 };
  s0 -> s2 [0, 65535] { R10992 += 1, R10900 += 1 };
  s0 -> s3 [0, 65535] { R10992 += 1, R10900 += 1, R154 += 1 };
  s0 -> s0 [0, 65535] { R10991 += 1, R10992 += 1 };
  s1 -> s1 [0, 65535] { R10992 += 1, R10899 += 1, R10900 += 1 };
  s1 -> s2 [0, 65535] { R10992 += 1, R10900 += 1 };
  s1 -> s3 [0, 65535] { R10992 += 1, R10900 += 1, R154 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s4 [0, 65535] { R10992 += 1 };
  s2 -> s2 [0, 65535] { R10992 += 1, R10900 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R10992 += 1 };
  s3 -> s2 [0, 65535] { R10992 += 1, R10900 += 1 };
  s3 -> s3 [0, 65535] { R10992 += 1, R10900 += 1, R154 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10992 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R10994 += 1, R10901 += 1, R10902 += 1 };
  s0 -> s0 [0, 65535] { R10993 += 1, R10994 += 1 };
  s0 -> s2 [0, 65535] { R10994 += 1, R10902 += 1, R158 += 1, R159 += 1 };
  s0 -> s3 [0, 65535] { R10994 += 1, R10902 += 1, R159 += 1, R160 += 1 };
  s1 -> s1 [0, 65535] { R10994 += 1, R10901 += 1, R10902 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R10994 += 1, R10902 += 1, R158 += 1, R159 += 1 };
  s1 -> s3 [0, 65535] { R10994 += 1, R10902 += 1, R159 += 1, R160 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10994 += 1, R10902 += 1, R158 += 1, R159 += 1 };
  s2 -> s3 [0, 65535] { R10994 += 1, R10902 += 1, R159 += 1, R160 += 1 };
  s2 -> s6 [0, 65535] { R10994 += 1 };
  s3 -> s4 [0, 65535] { R10994 += 1, R10902 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R10994 += 1, R10902 += 1, R159 += 1, R160 += 1 };
  s3 -> s6 [0, 65535] { R10994 += 1 };
  s4 -> s4 [0, 65535] { R10994 += 1, R10902 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R10994 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10994 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R10996 += 1, R10904 += 1, R165 += 1 };
  s0 -> s0 [0, 65535] { R10995 += 1, R10996 += 1 };
  s0 -> s2 [0, 65535] { R10996 += 1, R10903 += 1, R10904 += 1 };
  s0 -> s3 [0, 65535] { R10996 += 1, R10904 += 1, R165 += 1, R166 += 1 };
  s0 -> s4 [0, 65535] { R10996 += 1, R10904 += 1, R164 += 1, R165 += 1 };
  s0 -> s1 [76, 65535] { R10996 += 1, R10904 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R10996 += 1, R10904 += 1, R165 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R10996 += 1, R10904 += 1 };
  s1 -> s6 [0, 65535] { R10996 += 1 };
  s1 -> s1 [76, 65535] { R10996 += 1, R10904 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R10996 += 1, R10904 += 1, R165 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10996 += 1, R10903 += 1, R10904 += 1 };
  s2 -> s3 [0, 65535] { R10996 += 1, R10904 += 1, R165 += 1, R166 += 1 };
  s2 -> s4 [0, 65535] { R10996 += 1, R10904 += 1, R164 += 1, R165 += 1 };
  s2 -> s1 [76, 65535] { R10996 += 1, R10904 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R10996 += 1, R10904 += 1, R165 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R10996 += 1, R10904 += 1, R165 += 1, R166 += 1 };
  s3 -> s7 [0, 65535] { R10996 += 1, R10904 += 1 };
  s3 -> s6 [0, 65535] { R10996 += 1 };
  s3 -> s1 [76, 65535] { R10996 += 1, R10904 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R10996 += 1, R10904 += 1, R165 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R10996 += 1, R10904 += 1, R165 += 1, R166 += 1 };
  s4 -> s6 [0, 65535] { R10996 += 1 };
  s4 -> s4 [0, 65535] { R10996 += 1, R10904 += 1, R164 += 1, R165 += 1 };
  s4 -> s1 [76, 65535] { R10996 += 1, R10904 += 1, R165 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10996 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R10996 += 1, R10904 += 1 };
  s7 -> s6 [0, 65535] { R10996 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R10998 += 1, R10906 += 1, R172 += 1, R174 += 1 };
  s0 -> s2 [0, 65535] { R10998 += 1, R10905 += 1, R10906 += 1 };
  s0 -> s3 [0, 65535] { R10998 += 1, R10906 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s0 [0, 65535] { R10997 += 1, R10998 += 1 };
  s0 -> s4 [0, 65535] { R10998 += 1, R10906 += 1, R171 += 1, R172 += 1 };
  s0 -> s1 [76, 65535] { R10998 += 1, R10906 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R10998 += 1, R10906 += 1, R172 += 1, R174 += 1 };
  s1 -> s7 [0, 65535] { R10998 += 1, R10906 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R10998 += 1, R10906 += 1, R172 += 1 };
  s1 -> s6 [0, 65535] { R10998 += 1 };
  s1 -> s1 [76, 65535] { R10998 += 1, R10906 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R10998 += 1, R10906 += 1, R172 += 1, R174 += 1 };
  s2 -> s2 [0, 65535] { R10998 += 1, R10905 += 1, R10906 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R10998 += 1, R10906 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s4 [0, 65535] { R10998 += 1, R10906 += 1, R171 += 1, R172 += 1 };
  s2 -> s1 [76, 65535] { R10998 += 1, R10906 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R10998 += 1, R10906 += 1, R172 += 1, R174 += 1 };
  s3 -> s7 [0, 65535] { R10998 += 1, R10906 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R10998 += 1, R10906 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s6 [0, 65535] { R10998 += 1 };
  s3 -> s1 [76, 65535] { R10998 += 1, R10906 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R10998 += 1, R10906 += 1, R172 += 1, R174 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R10998 += 1, R10906 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s4 [0, 65535] { R10998 += 1, R10906 += 1, R171 += 1, R172 += 1 };
  s4 -> s6 [0, 65535] { R10998 += 1 };
  s4 -> s1 [76, 65535] { R10998 += 1, R10906 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10998 += 1 };
  s7 -> s7 [0, 65535] { R10998 += 1, R10906 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R10998 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s0 [0, 65535] { R10999 += 1, R11000 += 1 };
  s0 -> s1 [0, 65535] { R11000 += 1, R10907 += 1, R10908 += 1 };
  s0 -> s2 [0, 65535] { R11000 += 1, R10908 += 1 };
  s0 -> s3 [0, 65535] { R11000 += 1, R10908 += 1, R181 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R11000 += 1, R10907 += 1, R10908 += 1 };
  s1 -> s2 [0, 65535] { R11000 += 1, R10908 += 1 };
  s1 -> s3 [0, 65535] { R11000 += 1, R10908 += 1, R181 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R11000 += 1, R10908 += 1 };
  s2 -> s5 [0, 65535] { R11000 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R11000 += 1, R10908 += 1 };
  s3 -> s5 [0, 65535] { R11000 += 1 };
  s3 -> s3 [0, 65535] { R11000 += 1, R10908 += 1, R181 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R11000 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R11002 += 1, R10910 += 1, R6568 += 1, R6570 += 1 };
  s0 -> s1 [0, 65535] { R11002 += 1, R10910 += 1, R6568 += 1 };
  s0 -> s0 [0, 65535] { R11001 += 1, R11002 += 1 };
  s0 -> s2 [0, 65535] { R11002 += 1, R10909 += 1, R10910 += 1 };
  s0 -> s3 [0, 65535] { R11002 += 1, R10910 += 1 };
  s0 -> s1 [83, 65535] { R11002 += 1, R10910 += 1, R6568 += 1, R6570 += 1 };
  s1 -> s1 [0, 75] { R11002 += 1, R10910 += 1, R6568 += 1, R6570 += 1 };
  s1 -> s1 [0, 65535] { R11002 += 1, R10910 += 1, R6568 += 1 };
  s1 -> s4 [0, 65535] { R11002 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R11002 += 1, R10910 += 1 };
  s1 -> s1 [83, 65535] { R11002 += 1, R10910 += 1, R6568 += 1, R6570 += 1 };
  s2 -> s1 [0, 75] { R11002 += 1, R10910 += 1, R6568 += 1, R6570 += 1 };
  s2 -> s1 [0, 65535] { R11002 += 1, R10910 += 1, R6568 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R11002 += 1, R10909 += 1, R10910 += 1 };
  s2 -> s3 [0, 65535] { R11002 += 1, R10910 += 1 };
  s2 -> s1 [83, 65535] { R11002 += 1, R10910 += 1, R6568 += 1, R6570 += 1 };
  s3 -> s4 [0, 65535] { R11002 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R11002 += 1, R10910 += 1 };
  s4 -> s4 [0, 65535] { R11002 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R11004 += 1, R10912 += 1, R10399 += 1, R10400 += 1, R10401 += 1 };
  s0 -> s0 [0, 65535] { R11003 += 1, R11004 += 1 };
  s0 -> s2 [0, 65535] { R11004 += 1, R10911 += 1, R10912 += 1 };
  s0 -> s3 [0, 65535] { R11004 += 1, R10912 += 1, R10399 += 1, R10401 += 1, R10402 += 1 };
  s0 -> s4 [0, 65535] { R11004 += 1, R10912 += 1, R10398 += 1, R10399 += 1 };
  s1 -> s1 [0, 65535] { R11004 += 1, R10912 += 1, R10399 += 1, R10400 += 1, R10401 += 1 };
  s1 -> s8 [0, 65535] { R11004 += 1, R10912 += 1 };
  s1 -> s5 [0, 65535] { R11004 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [0, 65535] { R11004 += 1, R10912 += 1, R10399 += 1, R10401 += 1, R10402 += 1 };
  s2 -> s1 [0, 65535] { R11004 += 1, R10912 += 1, R10399 += 1, R10400 += 1, R10401 += 1 };
  s2 -> s2 [0, 65535] { R11004 += 1, R10911 += 1, R10912 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R11004 += 1, R10912 += 1, R10399 += 1, R10401 += 1, R10402 += 1 };
  s2 -> s4 [0, 65535] { R11004 += 1, R10912 += 1, R10398 += 1, R10399 += 1 };
  s3 -> s7 [0, 65535] { R11004 += 1, R10912 += 1, R10399 += 1 };
  s3 -> s8 [0, 65535] { R11004 += 1, R10912 += 1 };
  s3 -> s5 [0, 65535] { R11004 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R11004 += 1, R10912 += 1, R10399 += 1, R10401 += 1, R10402 += 1 };
  s4 -> s1 [0, 65535] { R11004 += 1, R10912 += 1, R10399 += 1, R10400 += 1, R10401 += 1 };
  s4 -> s5 [0, 65535] { R11004 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s3 [0, 65535] { R11004 += 1, R10912 += 1, R10399 += 1, R10401 += 1, R10402 += 1 };
  s4 -> s4 [0, 65535] { R11004 += 1, R10912 += 1, R10398 += 1, R10399 += 1 };
  s5 -> s5 [0, 65535] { R11004 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R11004 += 1, R10912 += 1, R10399 += 1 };
  s7 -> s8 [0, 65535] { R11004 += 1, R10912 += 1 };
  s7 -> s5 [0, 65535] { R11004 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R11004 += 1, R10912 += 1 };
  s8 -> s5 [0, 65535] { R11004 += 1 };
  s8 -> s6 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 65535] { R11006 += 1, R10914 += 1, R10882 += 1 };
  s0 -> s2 [0, 65535] { R11006 += 1, R10914 += 1 };
  s0 -> s0 [0, 65535] { R11005 += 1, R11006 += 1 };
  s0 -> s3 [0, 65535] { R11006 += 1, R10913 += 1, R10914 += 1 };
  s1 -> s5 [0, 65535] { R11006 += 1 };
  s1 -> s1 [0, 65535] { R11006 += 1, R10914 += 1, R10882 += 1 };
  s1 -> s2 [0, 65535] { R11006 += 1, R10914 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R11006 += 1 };
  s2 -> s2 [0, 65535] { R11006 += 1, R10914 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R11006 += 1, R10914 += 1, R10882 += 1 };
  s3 -> s2 [0, 65535] { R11006 += 1, R10914 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R11006 += 1, R10913 += 1, R10914 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R11006 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s0 [0, 65535] { R11007 += 1, R11008 += 1 };
  s0 -> s1 [0, 65535] { R11008 += 1, R10944 += 1, R23 += 1 };
  s0 -> s2 [0, 65535] { R11008 += 1, R10943 += 1, R10944 += 1 };
  s1 -> s1 [0, 65535] { R11008 += 1, R10944 += 1, R23 += 1 };
  s1 -> s4 [0, 65535] { R11008 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R11008 += 1, R10944 += 1, R23 += 1 };
  s2 -> s2 [0, 65535] { R11008 += 1, R10943 += 1, R10944 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R11008 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R11010 += 1, R10946 += 1 };
  s0 -> s2 [0, 65535] { R11010 += 1, R10945 += 1, R10946 += 1 };
  s0 -> s0 [0, 65535] { R11009 += 1, R11010 += 1 };
  s0 -> s3 [70, 70] { R11010 += 1, R10946 += 1 };
  s0 -> s4 [70, 70] { R11010 += 1, R10946 += 1 };
  s0 -> s5 [75, 75] { R11010 += 1, R10946 += 1 };
  s0 -> s1 [76, 65535] { R11010 += 1, R10946 += 1 };
  s1 -> s1 [0, 69] { R11010 += 1, R10946 += 1 };
  s1 -> s3 [70, 70] { R11010 += 1, R10946 += 1 };
  s1 -> s4 [70, 70] { R11010 += 1, R10946 += 1 };
  s1 -> s5 [75, 75] { R11010 += 1, R10946 += 1 };
  s1 -> s1 [76, 65535] { R11010 += 1, R10946 += 1 };
  s2 -> s1 [0, 69] { R11010 += 1, R10946 += 1 };
  s2 -> s2 [0, 65535] { R11010 += 1, R10945 += 1, R10946 += 1 };
  s2 -> s3 [70, 70] { R11010 += 1, R10946 += 1 };
  s2 -> s4 [70, 70] { R11010 += 1, R10946 += 1 };
  s2 -> s5 [75, 75] { R11010 += 1, R10946 += 1 };
  s2 -> s1 [76, 65535] { R11010 += 1, R10946 += 1 };
  s3 -> s3 [0, 70] { R11010 += 1, R10946 += 1 };
  s3 -> s7 [75, 75] { R11010 += 1, R10946 += 1 };
  s3 -> s3 [76, 65535] { R11010 += 1, R10946 += 1 };
  s5 -> s5 [0, 69] { R11010 += 1, R10946 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R11010 += 1 };
  s5 -> s7 [70, 70] { R11010 += 1, R10946 += 1 };
  s5 -> s8 [70, 70] { R11010 += 1, R10946 += 1 };
  s5 -> s5 [75, 65535] { R11010 += 1, R10946 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R11010 += 1, R10946 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R11010 += 1 };
  s7 -> s7 [75, 65535] { R11010 += 1, R10946 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R11010 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R11012 += 1, R10948 += 1, R137 += 1 };
  s0 -> s2 [0, 65535] { R11012 += 1, R10947 += 1, R10948 += 1 };
  s0 -> s0 [0, 65535] { R11011 += 1, R11012 += 1 };
  s0 -> s3 [70, 70] { R11012 += 1, R10948 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R11012 += 1, R10948 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R11012 += 1, R10948 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R11012 += 1, R10948 += 1, R137 += 1 };
  s1 -> s1 [0, 65535] { R11012 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R11012 += 1, R10948 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R11012 += 1, R10948 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R11012 += 1, R10948 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R11012 += 1, R10948 += 1, R137 += 1 };
  s2 -> s2 [0, 65535] { R11012 += 1, R10947 += 1, R10948 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R11012 += 1, R10948 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R11012 += 1, R10948 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R11012 += 1, R10948 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R11012 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R11012 += 1, R10948 += 1, R137 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R11012 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11012 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R11014 += 1, R10950 += 1, R139 += 1 };
  s0 -> s0 [0, 65535] { R11013 += 1, R11014 += 1 };
  s0 -> s2 [0, 65535] { R11014 += 1, R10949 += 1, R10950 += 1 };
  s0 -> s3 [70, 70] { R11014 += 1, R10950 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R11014 += 1, R10950 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R11014 += 1, R10950 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R11014 += 1, R10950 += 1, R139 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R11014 += 1 };
  s1 -> s3 [70, 70] { R11014 += 1, R10950 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R11014 += 1, R10950 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R11014 += 1, R10950 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R11014 += 1, R10950 += 1, R139 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R11014 += 1, R10949 += 1, R10950 += 1 };
  s2 -> s3 [70, 70] { R11014 += 1, R10950 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R11014 += 1, R10950 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R11014 += 1, R10950 += 1, R139 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R11014 += 1, R10950 += 1, R139 += 1 };
  s3 -> s6 [0, 65535] { R11014 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R11014 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11014 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R11016 += 1, R10952 += 1, R141 += 1, R142 += 1 };
  s0 -> s0 [0, 65535] { R11015 += 1, R11016 += 1 };
  s0 -> s2 [0, 65535] { R11016 += 1, R10951 += 1, R10952 += 1 };
  s0 -> s3 [70, 70] { R11016 += 1, R10952 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R11016 += 1, R10952 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R11016 += 1, R10952 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R11016 += 1, R10952 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 65535] { R11016 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R11016 += 1, R10952 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R11016 += 1, R10952 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R11016 += 1, R10952 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R11016 += 1, R10952 += 1, R141 += 1, R142 += 1 };
  s2 -> s2 [0, 65535] { R11016 += 1, R10951 += 1, R10952 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R11016 += 1, R10952 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R11016 += 1, R10952 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R11016 += 1, R10952 += 1, R141 += 1, R142 += 1 };
  s3 -> s3 [0, 65535] { R11016 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R11016 += 1 };
  s4 -> s4 [0, 65535] { R11016 += 1, R10952 += 1, R141 += 1, R142 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R11016 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R11018 += 1, R10954 += 1, R147 += 1, R148 += 1 };
  s0 -> s0 [0, 65535] { R11017 += 1, R11018 += 1 };
  s0 -> s2 [0, 65535] { R11018 += 1, R10953 += 1, R10954 += 1 };
  s0 -> s3 [70, 70] { R11018 += 1, R10954 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R11018 += 1, R10954 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R11018 += 1, R10954 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R11018 += 1, R10954 += 1, R147 += 1, R148 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R11018 += 1 };
  s1 -> s3 [70, 70] { R11018 += 1, R10954 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R11018 += 1, R10954 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R11018 += 1, R10954 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R11018 += 1, R10954 += 1, R147 += 1, R148 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R11018 += 1, R10953 += 1, R10954 += 1 };
  s2 -> s3 [70, 70] { R11018 += 1, R10954 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R11018 += 1, R10954 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R11018 += 1, R10954 += 1, R147 += 1, R148 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R11018 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R11018 += 1, R10954 += 1, R147 += 1, R148 += 1 };
  s4 -> s6 [0, 65535] { R11018 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11018 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R11020 += 1, R10956 += 1, R151 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R11020 += 1, R10956 += 1, R152 += 1 };
  s0 -> s0 [0, 65535] { R11019 += 1, R11020 += 1 };
  s0 -> s3 [0, 65535] { R11020 += 1, R10955 += 1, R10956 += 1 };
  s0 -> s4 [70, 70] { R11020 += 1, R10956 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R11020 += 1, R10956 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R11020 += 1, R10956 += 1, R151 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R11020 += 1, R10956 += 1, R151 += 1, R152 += 1 };
  s0 -> s2 [71, 74] { R11020 += 1, R10956 += 1, R152 += 1 };
  s0 -> s1 [71, 65535] { R11020 += 1, R10956 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R11020 += 1, R10956 += 1, R152 += 1 };
  s0 -> s2 [76, 65535] { R11020 += 1, R10956 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R11020 += 1, R10956 += 1, R151 += 1, R152 += 1 };
  s1 -> s2 [0, 69] { R11020 += 1, R10956 += 1, R152 += 1 };
  s1 -> s4 [70, 70] { R11020 += 1, R10956 += 1, R152 += 1 };
  s1 -> s5 [70, 70] { R11020 += 1, R10956 += 1, R152 += 1 };
  s1 -> s6 [70, 70] { R11020 += 1, R10956 += 1, R151 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R11020 += 1, R10956 += 1, R151 += 1, R152 += 1 };
  s1 -> s2 [71, 74] { R11020 += 1, R10956 += 1, R152 += 1 };
  s1 -> s1 [71, 65535] { R11020 += 1, R10956 += 1, R151 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R11020 += 1, R10956 += 1, R152 += 1 };
  s1 -> s2 [76, 65535] { R11020 += 1, R10956 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R11020 += 1, R10956 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R11020 += 1, R10956 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R11020 += 1, R10956 += 1, R152 += 1 };
  s2 -> s2 [71, 74] { R11020 += 1, R10956 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R11020 += 1, R10956 += 1, R152 += 1 };
  s2 -> s2 [76, 65535] { R11020 += 1, R10956 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R11020 += 1, R10956 += 1, R151 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R11020 += 1, R10956 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R11020 += 1, R10955 += 1, R10956 += 1 };
  s3 -> s4 [70, 70] { R11020 += 1, R10956 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R11020 += 1, R10956 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R11020 += 1, R10956 += 1, R151 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R11020 += 1, R10956 += 1, R151 += 1, R152 += 1 };
  s3 -> s2 [71, 74] { R11020 += 1, R10956 += 1, R152 += 1 };
  s3 -> s1 [71, 65535] { R11020 += 1, R10956 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R11020 += 1, R10956 += 1, R152 += 1 };
  s3 -> s2 [76, 65535] { R11020 += 1, R10956 += 1, R152 += 1 };
  s4 -> s4 [0, 74] { R11020 += 1, R10956 += 1, R152 += 1 };
  s4 -> s10 [75, 75] { R11020 += 1, R10956 += 1, R152 += 1 };
  s4 -> s4 [76, 65535] { R11020 += 1, R10956 += 1, R152 += 1 };
  s7 -> s4 [0, 74] { R11020 += 1, R10956 += 1, R152 += 1 };
  s7 -> s7 [0, 65535] { R11020 += 1, R10956 += 1, R151 += 1, R152 += 1 };
  s7 -> s10 [75, 75] { R11020 += 1, R10956 += 1, R152 += 1 };
  s7 -> s4 [76, 65535] { R11020 += 1, R10956 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R11020 += 1, R10956 += 1, R152 += 1 };
  s8 -> s8 [0, 65535] { R11020 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R11020 += 1, R10956 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R11020 += 1, R10956 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R11020 += 1, R10956 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R11020 += 1, R10956 += 1, R152 += 1 };
  s10 -> s12 [0, 65535] { R11020 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R11020 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R11020 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R11022 += 1, R10958 += 1, R155 += 1, R156 += 1 };
  s0 -> s0 [0, 65535] { R11021 += 1, R11022 += 1 };
  s0 -> s2 [0, 65535] { R11022 += 1, R10957 += 1, R10958 += 1 };
  s0 -> s3 [70, 70] { R11022 += 1, R10958 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R11022 += 1, R10958 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R11022 += 1, R10958 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R11022 += 1, R10958 += 1, R155 += 1, R156 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R11022 += 1 };
  s1 -> s3 [70, 70] { R11022 += 1, R10958 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R11022 += 1, R10958 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R11022 += 1, R10958 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R11022 += 1, R10958 += 1, R155 += 1, R156 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R11022 += 1, R10957 += 1, R10958 += 1 };
  s2 -> s3 [70, 70] { R11022 += 1, R10958 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R11022 += 1, R10958 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R11022 += 1, R10958 += 1, R155 += 1, R156 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R11022 += 1 };
  s4 -> s5 [0, 65535] { R11022 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R11022 += 1, R10958 += 1, R155 += 1, R156 += 1 };
  s5 -> s5 [0, 65535] { R11022 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R11024 += 1, R10960 += 1, R161 += 1, R162 += 1 };
  s0 -> s0 [0, 65535] { R11023 += 1, R11024 += 1 };
  s0 -> s2 [0, 65535] { R11024 += 1, R10959 += 1, R10960 += 1 };
  s0 -> s3 [70, 70] { R11024 += 1, R10960 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R11024 += 1, R10960 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R11024 += 1, R10960 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R11024 += 1, R10960 += 1, R161 += 1, R162 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R11024 += 1 };
  s1 -> s3 [70, 70] { R11024 += 1, R10960 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R11024 += 1, R10960 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R11024 += 1, R10960 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R11024 += 1, R10960 += 1, R161 += 1, R162 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R11024 += 1, R10959 += 1, R10960 += 1 };
  s2 -> s3 [70, 70] { R11024 += 1, R10960 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R11024 += 1, R10960 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R11024 += 1, R10960 += 1, R161 += 1, R162 += 1 };
  s3 -> s3 [0, 65535] { R11024 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R11024 += 1 };
  s4 -> s4 [0, 65535] { R11024 += 1, R10960 += 1, R161 += 1, R162 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11024 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R11026 += 1, R10962 += 1, R167 += 1, R168 += 1 };
  s0 -> s2 [0, 65535] { R11026 += 1, R10961 += 1, R10962 += 1 };
  s0 -> s0 [0, 65535] { R11025 += 1, R11026 += 1 };
  s0 -> s3 [70, 70] { R11026 += 1, R10962 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R11026 += 1, R10962 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R11026 += 1, R10962 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R11026 += 1, R10962 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 65535] { R11026 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R11026 += 1, R10962 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R11026 += 1, R10962 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R11026 += 1, R10962 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R11026 += 1, R10962 += 1, R167 += 1, R168 += 1 };
  s2 -> s2 [0, 65535] { R11026 += 1, R10961 += 1, R10962 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R11026 += 1, R10962 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R11026 += 1, R10962 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R11026 += 1, R10962 += 1, R167 += 1, R168 += 1 };
  s3 -> s3 [0, 65535] { R11026 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R11026 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R11026 += 1, R10962 += 1, R167 += 1, R168 += 1 };
  s5 -> s5 [0, 65535] { R11026 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R11028 += 1, R10964 += 1, R175 += 1, R176 += 1 };
  s0 -> s2 [0, 69] { R11028 += 1, R10964 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s3 [0, 69] { R11028 += 1, R10964 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s4 [0, 65535] { R11028 += 1, R10963 += 1, R10964 += 1 };
  s0 -> s0 [0, 65535] { R11027 += 1, R11028 += 1 };
  s0 -> s5 [70, 70] { R11028 += 1, R10964 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s6 [70, 70] { R11028 += 1, R10964 += 1, R175 += 1, R176 += 1 };
  s0 -> s7 [70, 70] { R11028 += 1, R10964 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s8 [70, 70] { R11028 += 1, R10964 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s9 [70, 70] { R11028 += 1, R10964 += 1, R175 += 1, R176 += 1 };
  s0 -> s10 [70, 70] { R11028 += 1, R10964 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s1 [71, 65535] { R11028 += 1, R10964 += 1, R175 += 1, R176 += 1 };
  s0 -> s2 [71, 65535] { R11028 += 1, R10964 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s3 [71, 65535] { R11028 += 1, R10964 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s1 [0, 69] { R11028 += 1, R10964 += 1, R175 += 1, R176 += 1 };
  s1 -> s2 [0, 69] { R11028 += 1, R10964 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s3 [0, 69] { R11028 += 1, R10964 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s5 [70, 70] { R11028 += 1, R10964 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s6 [70, 70] { R11028 += 1, R10964 += 1, R175 += 1, R176 += 1 };
  s1 -> s7 [70, 70] { R11028 += 1, R10964 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s8 [70, 70] { R11028 += 1, R10964 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s9 [70, 70] { R11028 += 1, R10964 += 1, R175 += 1, R176 += 1 };
  s1 -> s10 [70, 70] { R11028 += 1, R10964 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s1 [71, 65535] { R11028 += 1, R10964 += 1, R175 += 1, R176 += 1 };
  s1 -> s2 [71, 65535] { R11028 += 1, R10964 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s3 [71, 65535] { R11028 += 1, R10964 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s14 [0, 69] { R11028 += 1, R10964 += 1, R176 += 1 };
  s2 -> s2 [0, 69] { R11028 += 1, R10964 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s11 [70, 70] { R11028 += 1, R10964 += 1, R176 += 1 };
  s2 -> s15 [70, 70] { R11028 += 1, R10964 += 1, R176 += 1 };
  s2 -> s7 [70, 70] { R11028 += 1, R10964 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s8 [70, 70] { R11028 += 1, R10964 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s14 [71, 65535] { R11028 += 1, R10964 += 1, R176 += 1 };
  s2 -> s2 [71, 65535] { R11028 += 1, R10964 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s2 [0, 69] { R11028 += 1, R10964 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [0, 69] { R11028 += 1, R10964 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s5 [70, 70] { R11028 += 1, R10964 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s7 [70, 70] { R11028 += 1, R10964 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s8 [70, 70] { R11028 += 1, R10964 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s10 [70, 70] { R11028 += 1, R10964 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s2 [71, 65535] { R11028 += 1, R10964 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [71, 65535] { R11028 += 1, R10964 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s1 [0, 69] { R11028 += 1, R10964 += 1, R175 += 1, R176 += 1 };
  s4 -> s2 [0, 69] { R11028 += 1, R10964 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s3 [0, 69] { R11028 += 1, R10964 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s4 [0, 65535] { R11028 += 1, R10963 += 1, R10964 += 1 };
  s4 -> s5 [70, 70] { R11028 += 1, R10964 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s6 [70, 70] { R11028 += 1, R10964 += 1, R175 += 1, R176 += 1 };
  s4 -> s7 [70, 70] { R11028 += 1, R10964 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s8 [70, 70] { R11028 += 1, R10964 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s9 [70, 70] { R11028 += 1, R10964 += 1, R175 += 1, R176 += 1 };
  s4 -> s10 [70, 70] { R11028 += 1, R10964 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s1 [71, 65535] { R11028 += 1, R10964 += 1, R175 += 1, R176 += 1 };
  s4 -> s2 [71, 65535] { R11028 += 1, R10964 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s3 [71, 65535] { R11028 += 1, R10964 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s5 -> s5 [0, 65535] { R11028 += 1, R10964 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s5 -> s7 [0, 65535] { R11028 += 1, R10964 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s6 -> s5 [0, 65535] { R11028 += 1, R10964 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s6 -> s6 [0, 65535] { R11028 += 1, R10964 += 1, R175 += 1, R176 += 1 };
  s6 -> s7 [0, 65535] { R11028 += 1, R10964 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s7 -> s11 [0, 65535] { R11028 += 1, R10964 += 1, R176 += 1 };
  s7 -> s7 [0, 65535] { R11028 += 1, R10964 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s11 [0, 65535] { R11028 += 1, R10964 += 1, R176 += 1 };
  s11 -> s13 [0, 65535] { R11028 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R11028 += 1 };
  s14 -> s14 [0, 69] { R11028 += 1, R10964 += 1, R176 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R11028 += 1 };
  s14 -> s11 [70, 70] { R11028 += 1, R10964 += 1, R176 += 1 };
  s14 -> s15 [70, 70] { R11028 += 1, R10964 += 1, R176 += 1 };
  s14 -> s14 [71, 65535] { R11028 += 1, R10964 += 1, R176 += 1 };
  s15 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R11028 += 1 };
  accepting s12, s13, s14, s15, s11;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R11030 += 1, R10966 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s2 [0, 69] { R11030 += 1, R10966 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s3 [0, 69] { R11030 += 1, R10966 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s4 [0, 65535] { R11030 += 1, R10965 += 1, R10966 += 1 };
  s0 -> s0 [0, 65535] { R11029 += 1, R11030 += 1 };
  s0 -> s5 [70, 70] { R11030 += 1, R10966 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s6 [70, 70] { R11030 += 1, R10966 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s7 [70, 70] { R11030 += 1, R10966 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s8 [70, 70] { R11030 += 1, R10966 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s9 [70, 70] { R11030 += 1, R10966 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s10 [70, 70] { R11030 += 1, R10966 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s1 [71, 75] { R11030 += 1, R10966 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s2 [71, 65535] { R11030 += 1, R10966 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s3 [71, 65535] { R11030 += 1, R10966 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s1 [83, 65535] { R11030 += 1, R10966 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s1 [0, 69] { R11030 += 1, R10966 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s1 [0, 65535] { R11030 += 1 };
  s1 -> s12 [0, 65535];
  s1 -> s5 [70, 70] { R11030 += 1, R10966 += 1, R6564 += 1 };
  s1 -> s8 [70, 70] { R11030 += 1, R10966 += 1, R6564 += 1 };
  s1 -> s1 [71, 75] { R11030 += 1, R10966 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s1 [71, 65535] { R11030 += 1, R10966 += 1, R6564 += 1 };
  s1 -> s1 [83, 65535] { R11030 += 1, R10966 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s1 [0, 69] { R11030 += 1, R10966 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s2 [0, 69] { R11030 += 1, R10966 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s5 [70, 70] { R11030 += 1, R10966 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s8 [70, 70] { R11030 += 1, R10966 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s9 [70, 70] { R11030 += 1, R10966 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s10 [70, 70] { R11030 += 1, R10966 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s1 [71, 75] { R11030 += 1, R10966 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s2 [71, 65535] { R11030 += 1, R10966 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s1 [83, 65535] { R11030 += 1, R10966 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s1 [0, 69] { R11030 += 1, R10966 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s2 [0, 69] { R11030 += 1, R10966 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s3 -> s3 [0, 69] { R11030 += 1, R10966 += 1, R6563 += 1, R6564 += 1 };
  s3 -> s5 [70, 70] { R11030 += 1, R10966 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s6 [70, 70] { R11030 += 1, R10966 += 1, R6563 += 1, R6564 += 1 };
  s3 -> s7 [70, 70] { R11030 += 1, R10966 += 1, R6563 += 1, R6564 += 1 };
  s3 -> s8 [70, 70] { R11030 += 1, R10966 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s9 [70, 70] { R11030 += 1, R10966 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s3 -> s10 [70, 70] { R11030 += 1, R10966 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s3 -> s1 [71, 75] { R11030 += 1, R10966 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s2 [71, 65535] { R11030 += 1, R10966 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s3 -> s3 [71, 65535] { R11030 += 1, R10966 += 1, R6563 += 1, R6564 += 1 };
  s3 -> s1 [83, 65535] { R11030 += 1, R10966 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s1 [0, 69] { R11030 += 1, R10966 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s2 [0, 69] { R11030 += 1, R10966 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s3 [0, 69] { R11030 += 1, R10966 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s4 [0, 65535] { R11030 += 1, R10965 += 1, R10966 += 1 };
  s4 -> s5 [70, 70] { R11030 += 1, R10966 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s6 [70, 70] { R11030 += 1, R10966 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s7 [70, 70] { R11030 += 1, R10966 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s8 [70, 70] { R11030 += 1, R10966 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s9 [70, 70] { R11030 += 1, R10966 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s10 [70, 70] { R11030 += 1, R10966 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s1 [71, 75] { R11030 += 1, R10966 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s2 [71, 65535] { R11030 += 1, R10966 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s3 [71, 65535] { R11030 += 1, R10966 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s1 [83, 65535] { R11030 += 1, R10966 += 1, R6564 += 1, R6566 += 1 };
  s5 -> s5 [0, 65535] { R11030 += 1 };
  s5 -> s12 [0, 65535];
  s7 -> s8 [0, 75] { R11030 += 1, R10966 += 1, R6564 += 1, R6566 += 1 };
  s7 -> s7 [0, 65535] { R11030 += 1, R10966 += 1, R6563 += 1, R6564 += 1 };
  s7 -> s9 [0, 65535] { R11030 += 1, R10966 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s7 -> s8 [83, 65535] { R11030 += 1, R10966 += 1, R6564 += 1, R6566 += 1 };
  s8 -> s8 [0, 75] { R11030 += 1, R10966 += 1, R6564 += 1, R6566 += 1 };
  s8 -> s11 [0, 65535] { R11030 += 1 };
  s8 -> s8 [0, 65535] { R11030 += 1, R10966 += 1, R6564 += 1 };
  s8 -> s12 [0, 65535];
  s8 -> s8 [83, 65535] { R11030 += 1, R10966 += 1, R6564 += 1, R6566 += 1 };
  s9 -> s8 [0, 75] { R11030 += 1, R10966 += 1, R6564 += 1, R6566 += 1 };
  s9 -> s9 [0, 65535] { R11030 += 1, R10966 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s9 -> s8 [83, 65535] { R11030 += 1, R10966 += 1, R6564 += 1, R6566 += 1 };
  s11 -> s11 [0, 65535] { R11030 += 1 };
  s11 -> s12 [0, 65535];
  s12 -> s12 [0, 65535];
  accepting s12, s8, s5, s1, s11;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R11032 += 1, R10968 += 1, R10393 += 1, R10394 += 1 };
  s0 -> s0 [0, 65535] { R11031 += 1, R11032 += 1 };
  s0 -> s2 [0, 65535] { R11032 += 1, R10967 += 1, R10968 += 1 };
  s0 -> s3 [70, 70] { R11032 += 1, R10968 += 1, R10393 += 1, R10394 += 1 };
  s0 -> s4 [70, 70] { R11032 += 1, R10968 += 1, R10393 += 1, R10394 += 1 };
  s0 -> s1 [71, 65535] { R11032 += 1, R10968 += 1, R10393 += 1, R10394 += 1 };
  s1 -> s1 [0, 69] { R11032 += 1, R10968 += 1, R10393 += 1, R10394 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R11032 += 1 };
  s1 -> s3 [70, 70] { R11032 += 1, R10968 += 1, R10393 += 1, R10394 += 1 };
  s1 -> s4 [70, 70] { R11032 += 1, R10968 += 1, R10393 += 1, R10394 += 1 };
  s1 -> s1 [71, 65535] { R11032 += 1, R10968 += 1, R10393 += 1, R10394 += 1 };
  s2 -> s1 [0, 69] { R11032 += 1, R10968 += 1, R10393 += 1, R10394 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R11032 += 1, R10967 += 1, R10968 += 1 };
  s2 -> s3 [70, 70] { R11032 += 1, R10968 += 1, R10393 += 1, R10394 += 1 };
  s2 -> s4 [70, 70] { R11032 += 1, R10968 += 1, R10393 += 1, R10394 += 1 };
  s2 -> s1 [71, 65535] { R11032 += 1, R10968 += 1, R10393 += 1, R10394 += 1 };
  s3 -> s3 [0, 65535] { R11032 += 1, R10968 += 1, R10393 += 1, R10394 += 1 };
  s3 -> s6 [0, 65535] { R11032 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R11032 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11032 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R11034 += 1, R10970 += 1, R10878 += 1, R10879 += 1, R10880 += 1 };
  s0 -> s2 [0, 69] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s0 -> s3 [0, 69] { R11034 += 1, R10970 += 1, R10877 += 1, R10878 += 1 };
  s0 -> s4 [0, 65535] { R11034 += 1, R10969 += 1, R10970 += 1 };
  s0 -> s0 [0, 65535] { R11033 += 1, R11034 += 1 };
  s0 -> s5 [70, 70] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s0 -> s6 [70, 70] { R11034 += 1, R10970 += 1, R10878 += 1, R10879 += 1, R10880 += 1 };
  s0 -> s7 [70, 70] { R11034 += 1, R10970 += 1, R10877 += 1, R10878 += 1 };
  s0 -> s8 [70, 70] { R11034 += 1, R10970 += 1, R10877 += 1, R10878 += 1 };
  s0 -> s9 [70, 70] { R11034 += 1, R10970 += 1, R10878 += 1, R10879 += 1, R10880 += 1 };
  s0 -> s10 [70, 70] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s0 -> s2 [71, 74] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s0 -> s1 [71, 65535] { R11034 += 1, R10970 += 1, R10878 += 1, R10879 += 1, R10880 += 1 };
  s0 -> s3 [71, 65535] { R11034 += 1, R10970 += 1, R10877 += 1, R10878 += 1 };
  s0 -> s11 [83, 83] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s0 -> s2 [84, 65535] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s1 -> s1 [0, 69] { R11034 += 1, R10970 += 1, R10878 += 1, R10879 += 1, R10880 += 1 };
  s1 -> s2 [0, 69] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s1 -> s5 [70, 70] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s1 -> s6 [70, 70] { R11034 += 1, R10970 += 1, R10878 += 1, R10879 += 1, R10880 += 1 };
  s1 -> s9 [70, 70] { R11034 += 1, R10970 += 1, R10878 += 1, R10879 += 1, R10880 += 1 };
  s1 -> s10 [70, 70] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s1 -> s2 [71, 74] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s1 -> s1 [71, 65535] { R11034 += 1, R10970 += 1, R10878 += 1, R10879 += 1, R10880 += 1 };
  s1 -> s11 [83, 83] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s1 -> s2 [84, 65535] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s2 -> s2 [0, 69] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s2 -> s5 [70, 70] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s2 -> s10 [70, 70] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s2 -> s2 [71, 74] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s2 -> s11 [83, 83] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s2 -> s2 [84, 65535] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s3 -> s1 [0, 69] { R11034 += 1, R10970 += 1, R10878 += 1, R10879 += 1, R10880 += 1 };
  s3 -> s2 [0, 69] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s3 -> s3 [0, 69] { R11034 += 1, R10970 += 1, R10877 += 1, R10878 += 1 };
  s3 -> s5 [70, 70] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s3 -> s6 [70, 70] { R11034 += 1, R10970 += 1, R10878 += 1, R10879 += 1, R10880 += 1 };
  s3 -> s7 [70, 70] { R11034 += 1, R10970 += 1, R10877 += 1, R10878 += 1 };
  s3 -> s8 [70, 70] { R11034 += 1, R10970 += 1, R10877 += 1, R10878 += 1 };
  s3 -> s9 [70, 70] { R11034 += 1, R10970 += 1, R10878 += 1, R10879 += 1, R10880 += 1 };
  s3 -> s10 [70, 70] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s3 -> s2 [71, 74] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s3 -> s1 [71, 65535] { R11034 += 1, R10970 += 1, R10878 += 1, R10879 += 1, R10880 += 1 };
  s3 -> s3 [71, 65535] { R11034 += 1, R10970 += 1, R10877 += 1, R10878 += 1 };
  s3 -> s11 [83, 83] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s3 -> s2 [84, 65535] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s4 -> s1 [0, 69] { R11034 += 1, R10970 += 1, R10878 += 1, R10879 += 1, R10880 += 1 };
  s4 -> s2 [0, 69] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s4 -> s3 [0, 69] { R11034 += 1, R10970 += 1, R10877 += 1, R10878 += 1 };
  s4 -> s4 [0, 65535] { R11034 += 1, R10969 += 1, R10970 += 1 };
  s4 -> s5 [70, 70] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s4 -> s6 [70, 70] { R11034 += 1, R10970 += 1, R10878 += 1, R10879 += 1, R10880 += 1 };
  s4 -> s7 [70, 70] { R11034 += 1, R10970 += 1, R10877 += 1, R10878 += 1 };
  s4 -> s8 [70, 70] { R11034 += 1, R10970 += 1, R10877 += 1, R10878 += 1 };
  s4 -> s9 [70, 70] { R11034 += 1, R10970 += 1, R10878 += 1, R10879 += 1, R10880 += 1 };
  s4 -> s10 [70, 70] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s4 -> s2 [71, 74] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s4 -> s1 [71, 65535] { R11034 += 1, R10970 += 1, R10878 += 1, R10879 += 1, R10880 += 1 };
  s4 -> s3 [71, 65535] { R11034 += 1, R10970 += 1, R10877 += 1, R10878 += 1 };
  s4 -> s11 [83, 83] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s4 -> s2 [84, 65535] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s5 -> s5 [0, 74] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s5 -> s12 [83, 83] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s5 -> s5 [84, 65535] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s8 -> s5 [0, 74] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s8 -> s8 [0, 65535] { R11034 += 1, R10970 += 1, R10877 += 1, R10878 += 1 };
  s8 -> s9 [0, 65535] { R11034 += 1, R10970 += 1, R10878 += 1, R10879 += 1, R10880 += 1 };
  s8 -> s12 [83, 83] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s8 -> s5 [84, 65535] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s9 -> s5 [0, 74] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s9 -> s9 [0, 65535] { R11034 += 1, R10970 += 1, R10878 += 1, R10879 += 1, R10880 += 1 };
  s9 -> s12 [83, 83] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s9 -> s5 [84, 65535] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s11 -> s11 [0, 69] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s11 -> s12 [70, 70] { R11034 += 1, R10970 += 1, R10878 += 1 };
  s11 -> s13 [70, 70] { R11034 += 1, R10970 += 1, R10878 += 1 };
  s11 -> s11 [71, 74] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s11 -> s11 [71, 65535] { R11034 += 1, R10970 += 1, R10878 += 1 };
  s11 -> s14 [75, 75] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s11 -> s11 [83, 65535] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s12 -> s12 [0, 74] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s12 -> s12 [0, 65535] { R11034 += 1, R10970 += 1, R10878 += 1 };
  s12 -> s17 [75, 75] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s12 -> s12 [83, 65535] { R11034 += 1, R10970 += 1, R10878 += 1, R10880 += 1 };
  s14 -> s14 [0, 69] { R11034 += 1, R10970 += 1, R10878 += 1 };
  s14 -> s14 [0, 65535] { R11034 += 1 };
  s14 -> s15 [0, 65535];
  s14 -> s16 [70, 70] { R11034 += 1, R10970 += 1, R10878 += 1 };
  s14 -> s17 [70, 70] { R11034 += 1, R10970 += 1, R10878 += 1 };
  s14 -> s14 [71, 65535] { R11034 += 1, R10970 += 1, R10878 += 1 };
  s15 -> s15 [0, 65535];
  s16 -> s16 [0, 65535] { R11034 += 1 };
  s16 -> s15 [0, 65535];
  s17 -> s18 [0, 65535] { R11034 += 1 };
  s17 -> s17 [0, 65535] { R11034 += 1, R10970 += 1, R10878 += 1 };
  s17 -> s15 [0, 65535];
  s18 -> s18 [0, 65535] { R11034 += 1 };
  s18 -> s15 [0, 65535];
  accepting s17, s16, s14, s18, s15;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
constraint R3 = R11034 && R25 - R11034 = -1 && R26 = R11034 && R27 - R11034 = -1 && R28 = R11034 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R10882 + -1*R10878 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R10882 + -1*R10878 - R130 = 0 && R129 + R10881 + R10877 = 0 && R131 + R10883 + R10879 = 0 && R132 + R10884 + R10880 = 0 && R10945 = 0 && R10946 = 0 && R10955 = 0 && R10956 = 0 && R10963 = 0 && R10964 = 0 && R10965 = 0 && R10966 = 0 && R10969 = 0 && R10970 = 0 && R10971 = 0 && R10972 = R11034 && R10973 = 0 && R10974 = R11034 && R10975 = 0 && R10976 = R11034 && R10977 = 0 && R10978 = R11034 && R10979 = 0 && R10980 = R11034 && R10981 = 0 && R10982 = R11034 && R10983 = 0 && R10984 = R11034 && R10985 = 0 && R10986 = R11034 && R10987 = 0 && R10988 = R11034 && R10989 = 0 && R10990 = R11034 && R10991 = 0 && R10992 = R11034 && R10993 = 0 && R10994 = R11034 && R10995 = 0 && R10996 = R11034 && R10997 = 0 && R10998 = R11034 && R10999 = 0 && R11000 = R11034 && R11001 = 0 && R11002 = R11034 && R11003 = 0 && R11004 = R11034 && R11005 = 0 && R11006 = R11034 && R11007 = 0 && R11008 = R11034 && R11009 = 0 && R11010 = R11034 && R11011 = 0 && R11012 = R11034 && R11013 = 0 && R11014 = R11034 && R11015 = 0 && R11016 = R11034 && R11017 = 0 && R11018 = R11034 && R11019 = 0 && R11020 = R11034 && R11021 = 0 && R11022 = R11034 && R11023 = 0 && R11024 = R11034 && R11025 = 0 && R11026 = R11034 && R11027 = 0 && R11028 = R11034 && R11029 = 0 && R11030 = R11034 && R11031 = 0 && R11032 = R11034 && R11033 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R10882 + -1*R10878 - R130 < 1 && 0 < R11034 && (R2 != 0 || R22 = 0 || (R10885 = 0 && R10886 = 0)) && (R2 != 0 || R22 = 0 || (R10887 = 0 && R10888 = 0)) && (R2 != 0 || R22 = 0 || (R10889 = 0 && R10890 = 0)) && (R2 != 0 || R22 = 0 || (R10891 = 0 && R10892 = 0)) && (R2 != 0 || R22 = 0 || (R10893 = 0 && R10894 = 0)) && (R2 != 0 || R22 = 0 || (R10895 = 0 && R10896 = 0)) && (R2 != 0 || R22 = 0 || (R10897 = 0 && R10898 = 0)) && (R2 != 0 || R22 = 0 || (R10899 = 0 && R10900 = 0)) && (R2 != 0 || R22 = 0 || (R10901 = 0 && R10902 = 0)) && (R2 != 0 || R22 = 0 || (R10903 = 0 && R10904 = 0)) && (R2 != 0 || R22 = 0 || (R10905 = 0 && R10906 = 0)) && (R2 != 0 || R22 = 0 || (R10907 = 0 && R10908 = 0)) && (R2 != 0 || R22 = 0 || (R10909 = 0 && R10910 = 0)) && (R2 != 0 || R22 = 0 || (R10911 = 0 && R10912 = 0)) && (R2 != 0 || R22 = 0 || (R10913 = 0 && R10914 = 0)) && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R10882 + -1*R10878 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R6569 + R6565 = 0 && R114 + R6570 + R6566 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R10882 + -1*R10878 - R130 = 0 || R130 + R10882 + R10878 < 1) && (R81 + R158 + R155 = 0 || R130 + R10882 + R10878 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R10882 + -1*R10878 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R10882 + R10878 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R10882 + -1*R10878 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R10882 + R10878 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R10882 + -1*R10878 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R10882 + R10878 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R6567 + R6563 != 0 || R112 + R6568 + R6564 + -1*R10882 + -1*R10878 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R10882 + R10878 = 0)) && (R113 + R6569 + R6565 != 0 || R83 + R160 + R157 + -1*R6570 + -1*R6566 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R10398 + R10393 != 0 || R120 + R10399 + R10394 + -1*R10882 + -1*R10878 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R10882 + R10878 = 0)) && (R10885 != 0 || R2 = R10886 || R2 < 1) && (R10887 != 0 || R2 = R10888 || R2 < 1) && (R10889 != 0 || R2 = R10890 || R2 < 1) && (R10891 != 0 || R2 = R10892 || R2 < 1) && (R10893 != 0 || R2 = R10894 || R2 < 1) && (R10895 != 0 || R2 = R10896 || R2 < 1) && (R10897 != 0 || R2 = R10898 || R2 < 1) && (R10899 != 0 || R2 = R10900 || R2 < 1) && (R10901 != 0 || R2 = R10902 || R2 < 1) && (R10903 != 0 || R2 = R10904 || R2 < 1) && (R10905 != 0 || R2 = R10906 || R2 < 1) && (R10907 != 0 || R2 = R10908 || R2 < 1) && (R10909 != 0 || R2 = R10910 || R2 < 1) && (R10911 != 0 || R2 = R10912 || R2 < 1) && (R10913 != 0 || R2 = R10914 || R2 < 1) && (R23 = 0 || (R10943 = 0 && R10944 = 0)) && (R23 = 0 || (R10947 = 0 && R10948 = 0)) && (R23 = 0 || (R10949 = 0 && R10950 = 0)) && (R23 = 0 || (R10951 = 0 && R10952 = 0)) && (R23 = 0 || (R10953 = 0 && R10954 = 0)) && (R23 = 0 || (R10957 = 0 && R10958 = 0)) && (R23 = 0 || (R10959 = 0 && R10960 = 0)) && (R23 = 0 || (R10961 = 0 && R10962 = 0)) && (R23 = 0 || (R10967 = 0 && R10968 = 0)) && (R24 = 0 || (R10915 = 0 && R10916 = 0)) && (R24 = 0 || (R10917 = 0 && R10918 = 0)) && (R24 = 0 || (R10919 = 0 && R10920 = 0)) && (R24 = 0 || (R10921 = 0 && R10922 = 0)) && (R24 = 0 || (R10923 = 0 && R10924 = 0)) && (R24 = 0 || (R10925 = 0 && R10926 = 0)) && (R24 = 0 || (R10927 = 0 && R10928 = 0)) && (R24 = 0 || (R10929 = 0 && R10930 = 0)) && (R24 = 0 || (R10931 = 0 && R10932 = 0)) && (R24 = 0 || (R10933 = 0 && R10934 = 0)) && (R24 = 0 || (R10935 = 0 && R10936 = 0)) && (R24 = 0 || (R10937 = 0 && R10938 = 0)) && (R24 = 0 || (R10939 = 0 && R10940 = 0)) && (R24 = 0 || (R10941 = 0 && R10942 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R10882 + R10878 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R10882 + R10878 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R10882 + R10878 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R6567 + R6563 = 0 || (R83 + R160 + R157 = 0 && R130 + R10882 + R10878 = 0)) && (R113 + R6569 + R6565 = 0 || R83 + R160 + R157 < 1) && (R119 + R10398 + R10393 = 0 || (R83 + R160 + R157 = 0 && R130 + R10882 + R10878 = 0)) && (R123 + R10402 + R10397 = 0 || (R121 + R10400 + R10395 = 0 && R122 + R10401 + R10396 = 0)) && (R10885 = 0 || R2 < 1) && (R10887 = 0 || R2 < 1) && (R10889 = 0 || R2 < 1) && (R10891 = 0 || R2 < 1) && (R10893 = 0 || R2 < 1) && (R10895 = 0 || R2 < 1) && (R10897 = 0 || R2 < 1) && (R10899 = 0 || R2 < 1) && (R10901 = 0 || R2 < 1) && (R10903 = 0 || R2 < 1) && (R10905 = 0 || R2 < 1) && (R10907 = 0 || R2 < 1) && (R10909 = 0 || R2 < 1) && (R10911 = 0 || R2 < 1) && (R10913 = 0 || R2 < 1);
// End of Parikh automata intersection problem
