// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R2, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R5, R63, R65, R6563, R6564, R6565, R6566, R6567, R6568, R6569, R6570, R6571, R6572, R6573, R6574, R6575, R6576, R6577, R6578, R6579, R6580, R67, R6739, R6740, R6741, R6742, R6743, R6744, R6745, R6746, R6747, R6748, R6749, R6750, R6751, R6752, R6753, R6754, R6755, R6756, R6757, R6758, R6759, R6760, R6761, R6762, R6763, R6764, R6765, R6766, R6767, R6768, R6769, R6770, R6771, R6772, R6773, R6774, R6775, R6776, R6777, R6778, R6779, R6780, R6781, R6782, R6783, R6784, R6785, R6786, R6787, R6788, R6789, R6790, R6791, R6792, R6793, R6794, R6795, R6796, R6797, R6798, R6799, R68, R6800, R6801, R6802, R6803, R6804, R6805, R6806, R6807, R6808, R6809, R6810, R6811, R6812, R6813, R6814, R6815, R6816, R6817, R6818, R6819, R6820, R6821, R6822, R6823, R6824, R6825, R6826, R6827, R6828, R6829, R6830, R6831, R6832, R6833, R6834, R6835, R6836, R6837, R6838, R6839, R6840, R6841, R6842, R6843, R6844, R6845, R6846, R6847, R6848, R6849, R6850, R6851, R6852, R6853, R6854, R6855, R6856, R6857, R6858, R6859, R6860, R6861, R6862, R6863, R6864, R6865, R6866, R6867, R6868, R6869, R6870, R6871, R6872, R6873, R6874, R6875, R6876, R6877, R6878, R6879, R6880, R6881, R6882, R6883, R6884, R6885, R6886, R6887, R6888, R6889, R6890, R6891, R6892, R6893, R6894, R6895, R6896, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R30 += 1 };
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R6777 += 1, R6778 += 1 };
  s0 -> s1 [0, 65535] { R6778 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R6778 += 1, R24 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R6780 += 1 };
  s0 -> s0 [0, 65535] { R6779 += 1, R6780 += 1 };
  s0 -> s2 [70, 70] { R6780 += 1 };
  s0 -> s3 [70, 70] { R6780 += 1 };
  s0 -> s1 [76, 65535] { R6780 += 1 };
  s1 -> s1 [0, 69] { R6780 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6780 += 1 };
  s1 -> s3 [70, 70] { R6780 += 1 };
  s1 -> s1 [76, 65535] { R6780 += 1 };
  s2 -> s2 [0, 70] { R6780 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R6780 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R6782 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R6781 += 1, R6782 += 1 };
  s0 -> s2 [70, 70] { R6782 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R6782 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R6782 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R6782 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6782 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R6782 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R6782 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R6782 += 1, R63 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R6784 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R6783 += 1, R6784 += 1 };
  s0 -> s2 [70, 70] { R6784 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R6784 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R6784 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R6784 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6784 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R6784 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R6784 += 1, R65 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R6784 += 1, R65 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R6786 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R6785 += 1, R6786 += 1 };
  s0 -> s2 [70, 70] { R6786 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R6786 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R6786 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R6786 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6786 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R6786 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R6786 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535] { R6786 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R6788 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R6787 += 1, R6788 += 1 };
  s0 -> s2 [70, 70] { R6788 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R6788 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R6788 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R6788 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6788 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R6788 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R6788 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R6788 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R6790 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R6789 += 1, R6790 += 1 };
  s0 -> s2 [70, 70] { R6790 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R6790 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R6790 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R6790 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6790 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R6790 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R6790 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R6790 += 1, R77 += 1, R78 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R6792 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R6791 += 1, R6792 += 1 };
  s0 -> s2 [70, 70] { R6792 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R6792 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R6792 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R6792 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6792 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R6792 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R6792 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R6792 += 1, R81 += 1, R82 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R6794 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R6793 += 1, R6794 += 1 };
  s0 -> s2 [70, 70] { R6794 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R6794 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R6794 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R6794 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6794 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R6794 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R6794 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R6794 += 1, R87 += 1, R88 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R6796 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R6795 += 1, R6796 += 1 };
  s0 -> s2 [70, 70] { R6796 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R6796 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R6796 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R6796 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6796 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R6796 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R6796 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535] { R6796 += 1, R93 += 1, R94 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R6798 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R6797 += 1, R6798 += 1 };
  s0 -> s2 [70, 70] { R6798 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R6798 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R6798 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R6798 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6798 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R6798 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R6798 += 1, R101 += 1, R102 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R6798 += 1, R101 += 1, R102 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R6800 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R6799 += 1, R6800 += 1 };
  s0 -> s2 [70, 70] { R6800 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R6800 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R6800 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R6800 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6800 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R6800 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R6800 += 1, R111 += 1, R112 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R6800 += 1, R111 += 1, R112 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R6802 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R6801 += 1, R6802 += 1 };
  s0 -> s2 [70, 70] { R6802 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R6802 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R6802 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R6802 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6802 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R6802 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R6802 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R6802 += 1, R119 += 1, R120 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R6804 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R6803 += 1, R6804 += 1 };
  s0 -> s2 [70, 70] { R6804 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R6804 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R6804 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R6804 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R6804 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R6804 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R6804 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535] { R6804 += 1, R129 += 1, R130 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R6834 += 1 };
  s0 -> s0 [0, 65535] { R6833 += 1, R6834 += 1 };
  s0 -> s2 [70, 70] { R6834 += 1 };
  s0 -> s1 [71, 65535] { R6834 += 1 };
  s1 -> s1 [0, 69] { R6834 += 1 };
  s1 -> s2 [70, 70] { R6834 += 1 };
  s1 -> s1 [71, 65535] { R6834 += 1 };
  s2 -> s2 [0, 65535] { R6834 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R6836 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R6835 += 1, R6836 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R6836 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R6838 += 1 };
  s0 -> s2 [0, 65535] { R6838 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R6837 += 1, R6838 += 1 };
  s0 -> s3 [70, 70] { R6838 += 1 };
  s0 -> s1 [71, 65535] { R6838 += 1 };
  s1 -> s1 [0, 69] { R6838 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R6838 += 1 };
  s1 -> s1 [71, 65535] { R6838 += 1 };
  s2 -> s1 [0, 69] { R6838 += 1 };
  s2 -> s2 [0, 65535] { R6838 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R6838 += 1 };
  s2 -> s1 [71, 65535] { R6838 += 1 };
  s3 -> s3 [0, 65535] { R6838 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R6840 += 1, R6748 += 1 };
  s0 -> s0 [0, 65535] { R6839 += 1, R6840 += 1 };
  s0 -> s2 [0, 65535] { R6840 += 1, R6747 += 1, R6748 += 1 };
  s0 -> s1 [71, 65535] { R6840 += 1, R6748 += 1 };
  s1 -> s1 [0, 69] { R6840 += 1, R6748 += 1 };
  s1 -> s1 [0, 65535] { R6840 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R6840 += 1, R6748 += 1 };
  s2 -> s1 [0, 69] { R6840 += 1, R6748 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R6840 += 1, R6747 += 1, R6748 += 1 };
  s2 -> s1 [71, 65535] { R6840 += 1, R6748 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R6842 += 1, R6750 += 1, R22 += 1 };
  s0 -> s2 [0, 65535] { R6842 += 1, R6749 += 1, R6750 += 1 };
  s0 -> s0 [0, 65535] { R6841 += 1, R6842 += 1 };
  s1 -> s1 [0, 65535] { R6842 += 1, R6750 += 1, R22 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R6842 += 1 };
  s2 -> s1 [0, 65535] { R6842 += 1, R6750 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R6842 += 1, R6749 += 1, R6750 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R6842 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R6844 += 1, R6752 += 1 };
  s0 -> s2 [0, 65535] { R6844 += 1, R6751 += 1, R6752 += 1 };
  s0 -> s0 [0, 65535] { R6843 += 1, R6844 += 1 };
  s0 -> s1 [75, 65535] { R6844 += 1, R6752 += 1 };
  s1 -> s1 [0, 70] { R6844 += 1, R6752 += 1 };
  s1 -> s1 [0, 65535] { R6844 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R6844 += 1, R6752 += 1 };
  s2 -> s1 [0, 70] { R6844 += 1, R6752 += 1 };
  s2 -> s2 [0, 65535] { R6844 += 1, R6751 += 1, R6752 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R6844 += 1, R6752 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s0 [0, 65535] { R6845 += 1, R6846 += 1 };
  s0 -> s1 [0, 65535] { R6846 += 1, R6753 += 1, R6754 += 1 };
  s0 -> s2 [0, 65535] { R6846 += 1, R6754 += 1, R138 += 1 };
  s1 -> s1 [0, 65535] { R6846 += 1, R6753 += 1, R6754 += 1 };
  s1 -> s2 [0, 65535] { R6846 += 1, R6754 += 1, R138 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R6846 += 1 };
  s2 -> s2 [0, 65535] { R6846 += 1, R6754 += 1, R138 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R6846 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R6848 += 1, R6756 += 1 };
  s0 -> s0 [0, 65535] { R6847 += 1, R6848 += 1 };
  s0 -> s2 [0, 65535] { R6848 += 1, R6756 += 1, R140 += 1 };
  s0 -> s3 [0, 65535] { R6848 += 1, R6755 += 1, R6756 += 1 };
  s0 -> s1 [76, 65535] { R6848 += 1, R6756 += 1 };
  s1 -> s1 [0, 74] { R6848 += 1, R6756 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R6848 += 1 };
  s1 -> s1 [76, 65535] { R6848 += 1, R6756 += 1 };
  s2 -> s1 [0, 74] { R6848 += 1, R6756 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R6848 += 1 };
  s2 -> s2 [0, 65535] { R6848 += 1, R6756 += 1, R140 += 1 };
  s2 -> s1 [76, 65535] { R6848 += 1, R6756 += 1 };
  s3 -> s1 [0, 74] { R6848 += 1, R6756 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R6848 += 1, R6756 += 1, R140 += 1 };
  s3 -> s3 [0, 65535] { R6848 += 1, R6755 += 1, R6756 += 1 };
  s3 -> s1 [76, 65535] { R6848 += 1, R6756 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R6848 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R6850 += 1, R6758 += 1, R144 += 1, R145 += 1 };
  s0 -> s2 [0, 65535] { R6850 += 1, R6757 += 1, R6758 += 1 };
  s0 -> s0 [0, 65535] { R6849 += 1, R6850 += 1 };
  s0 -> s3 [0, 65535] { R6850 += 1, R6758 += 1, R145 += 1, R146 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R6850 += 1, R6758 += 1, R144 += 1, R145 += 1 };
  s1 -> s5 [0, 65535] { R6850 += 1 };
  s1 -> s3 [0, 65535] { R6850 += 1, R6758 += 1, R145 += 1, R146 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R6850 += 1, R6758 += 1, R144 += 1, R145 += 1 };
  s2 -> s2 [0, 65535] { R6850 += 1, R6757 += 1, R6758 += 1 };
  s2 -> s3 [0, 65535] { R6850 += 1, R6758 += 1, R145 += 1, R146 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R6850 += 1 };
  s3 -> s6 [0, 65535] { R6850 += 1, R6758 += 1 };
  s3 -> s3 [0, 65535] { R6850 += 1, R6758 += 1, R145 += 1, R146 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R6850 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R6850 += 1 };
  s6 -> s6 [0, 65535] { R6850 += 1, R6758 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R6852 += 1, R6760 += 1, R150 += 1 };
  s0 -> s2 [0, 65535] { R6852 += 1, R6760 += 1, R149 += 1, R150 += 1 };
  s0 -> s3 [0, 65535] { R6852 += 1, R6759 += 1, R6760 += 1 };
  s0 -> s0 [0, 65535] { R6851 += 1, R6852 += 1 };
  s0 -> s4 [75, 75] { R6852 += 1, R6760 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R6852 += 1, R6760 += 1, R150 += 1 };
  s0 -> s1 [79, 65535] { R6852 += 1, R6760 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R6852 += 1, R6760 += 1, R150 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R6852 += 1, R6760 += 1 };
  s1 -> s7 [0, 65535] { R6852 += 1 };
  s1 -> s4 [75, 75] { R6852 += 1, R6760 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R6852 += 1, R6760 += 1, R150 += 1 };
  s1 -> s1 [79, 65535] { R6852 += 1, R6760 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R6852 += 1, R6760 += 1, R150 += 1 };
  s2 -> s2 [0, 65535] { R6852 += 1, R6760 += 1, R149 += 1, R150 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R6852 += 1 };
  s2 -> s4 [75, 75] { R6852 += 1, R6760 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R6852 += 1, R6760 += 1, R150 += 1 };
  s2 -> s1 [79, 65535] { R6852 += 1, R6760 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R6852 += 1, R6760 += 1, R150 += 1 };
  s3 -> s2 [0, 65535] { R6852 += 1, R6760 += 1, R149 += 1, R150 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R6852 += 1, R6759 += 1, R6760 += 1 };
  s3 -> s4 [75, 75] { R6852 += 1, R6760 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R6852 += 1, R6760 += 1, R150 += 1 };
  s3 -> s1 [79, 65535] { R6852 += 1, R6760 += 1, R150 += 1 };
  s4 -> s4 [0, 75] { R6852 += 1, R6760 += 1, R150 += 1 };
  s4 -> s4 [0, 65535] { R6852 += 1, R6760 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R6852 += 1 };
  s4 -> s4 [79, 65535] { R6852 += 1, R6760 += 1, R150 += 1 };
  s5 -> s5 [0, 65535] { R6852 += 1, R6760 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R6852 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R6852 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s0 [0, 65535] { R6853 += 1, R6854 += 1 };
  s0 -> s1 [0, 65535] { R6854 += 1, R6761 += 1, R6762 += 1 };
  s0 -> s2 [0, 65535] { R6854 += 1, R6762 += 1, R154 += 1 };
  s0 -> s3 [0, 65535] { R6854 += 1, R6762 += 1 };
  s1 -> s1 [0, 65535] { R6854 += 1, R6761 += 1, R6762 += 1 };
  s1 -> s2 [0, 65535] { R6854 += 1, R6762 += 1, R154 += 1 };
  s1 -> s3 [0, 65535] { R6854 += 1, R6762 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R6854 += 1, R6762 += 1, R154 += 1 };
  s2 -> s3 [0, 65535] { R6854 += 1, R6762 += 1 };
  s2 -> s4 [0, 65535] { R6854 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R6854 += 1, R6762 += 1 };
  s3 -> s4 [0, 65535] { R6854 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R6854 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R6856 += 1, R6763 += 1, R6764 += 1 };
  s0 -> s0 [0, 65535] { R6855 += 1, R6856 += 1 };
  s0 -> s2 [0, 65535] { R6856 += 1, R6764 += 1, R159 += 1, R160 += 1 };
  s0 -> s3 [0, 65535] { R6856 += 1, R6764 += 1, R158 += 1, R159 += 1 };
  s1 -> s1 [0, 65535] { R6856 += 1, R6763 += 1, R6764 += 1 };
  s1 -> s2 [0, 65535] { R6856 += 1, R6764 += 1, R159 += 1, R160 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R6856 += 1, R6764 += 1, R158 += 1, R159 += 1 };
  s2 -> s6 [0, 65535] { R6856 += 1, R6764 += 1 };
  s2 -> s2 [0, 65535] { R6856 += 1, R6764 += 1, R159 += 1, R160 += 1 };
  s2 -> s4 [0, 65535] { R6856 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R6856 += 1, R6764 += 1, R159 += 1, R160 += 1 };
  s3 -> s4 [0, 65535] { R6856 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R6856 += 1, R6764 += 1, R158 += 1, R159 += 1 };
  s4 -> s4 [0, 65535] { R6856 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6856 += 1, R6764 += 1 };
  s6 -> s4 [0, 65535] { R6856 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R6858 += 1, R6766 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R6858 += 1, R6766 += 1, R165 += 1, R166 += 1 };
  s0 -> s3 [0, 65535] { R6858 += 1, R6765 += 1, R6766 += 1 };
  s0 -> s4 [0, 65535] { R6858 += 1, R6766 += 1, R164 += 1, R165 += 1 };
  s0 -> s0 [0, 65535] { R6857 += 1, R6858 += 1 };
  s0 -> s1 [76, 65535] { R6858 += 1, R6766 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R6858 += 1, R6766 += 1, R165 += 1 };
  s1 -> s1 [0, 65535] { R6858 += 1, R6766 += 1 };
  s1 -> s5 [0, 65535] { R6858 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [76, 65535] { R6858 += 1, R6766 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R6858 += 1, R6766 += 1, R165 += 1 };
  s2 -> s2 [0, 65535] { R6858 += 1, R6766 += 1, R165 += 1, R166 += 1 };
  s2 -> s7 [0, 65535] { R6858 += 1, R6766 += 1 };
  s2 -> s5 [0, 65535] { R6858 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [76, 65535] { R6858 += 1, R6766 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R6858 += 1, R6766 += 1, R165 += 1 };
  s3 -> s2 [0, 65535] { R6858 += 1, R6766 += 1, R165 += 1, R166 += 1 };
  s3 -> s3 [0, 65535] { R6858 += 1, R6765 += 1, R6766 += 1 };
  s3 -> s4 [0, 65535] { R6858 += 1, R6766 += 1, R164 += 1, R165 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [76, 65535] { R6858 += 1, R6766 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R6858 += 1, R6766 += 1, R165 += 1 };
  s4 -> s2 [0, 65535] { R6858 += 1, R6766 += 1, R165 += 1, R166 += 1 };
  s4 -> s4 [0, 65535] { R6858 += 1, R6766 += 1, R164 += 1, R165 += 1 };
  s4 -> s5 [0, 65535] { R6858 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s1 [76, 65535] { R6858 += 1, R6766 += 1, R165 += 1 };
  s5 -> s5 [0, 65535] { R6858 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R6858 += 1, R6766 += 1 };
  s7 -> s5 [0, 65535] { R6858 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R6860 += 1, R6768 += 1, R172 += 1, R174 += 1 };
  s0 -> s2 [0, 65535] { R6860 += 1, R6767 += 1, R6768 += 1 };
  s0 -> s0 [0, 65535] { R6859 += 1, R6860 += 1 };
  s0 -> s3 [0, 65535] { R6860 += 1, R6768 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s4 [0, 65535] { R6860 += 1, R6768 += 1, R171 += 1, R172 += 1 };
  s0 -> s1 [76, 65535] { R6860 += 1, R6768 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R6860 += 1, R6768 += 1, R172 += 1, R174 += 1 };
  s1 -> s5 [0, 65535] { R6860 += 1 };
  s1 -> s1 [0, 65535] { R6860 += 1, R6768 += 1, R172 += 1 };
  s1 -> s7 [0, 65535] { R6860 += 1, R6768 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [76, 65535] { R6860 += 1, R6768 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R6860 += 1, R6768 += 1, R172 += 1, R174 += 1 };
  s2 -> s2 [0, 65535] { R6860 += 1, R6767 += 1, R6768 += 1 };
  s2 -> s3 [0, 65535] { R6860 += 1, R6768 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [0, 65535] { R6860 += 1, R6768 += 1, R171 += 1, R172 += 1 };
  s2 -> s1 [76, 65535] { R6860 += 1, R6768 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R6860 += 1, R6768 += 1, R172 += 1, R174 += 1 };
  s3 -> s5 [0, 65535] { R6860 += 1 };
  s3 -> s3 [0, 65535] { R6860 += 1, R6768 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s7 [0, 65535] { R6860 += 1, R6768 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [76, 65535] { R6860 += 1, R6768 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R6860 += 1, R6768 += 1, R172 += 1, R174 += 1 };
  s4 -> s5 [0, 65535] { R6860 += 1 };
  s4 -> s3 [0, 65535] { R6860 += 1, R6768 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R6860 += 1, R6768 += 1, R171 += 1, R172 += 1 };
  s4 -> s1 [76, 65535] { R6860 += 1, R6768 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535] { R6860 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R6860 += 1 };
  s7 -> s7 [0, 65535] { R6860 += 1, R6768 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s0 [0, 65535] { R6861 += 1, R6862 += 1 };
  s0 -> s1 [0, 65535] { R6862 += 1, R6769 += 1, R6770 += 1 };
  s0 -> s2 [0, 65535] { R6862 += 1, R6770 += 1 };
  s1 -> s1 [0, 65535] { R6862 += 1, R6769 += 1, R6770 += 1 };
  s1 -> s2 [0, 65535] { R6862 += 1, R6770 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R6862 += 1 };
  s2 -> s2 [0, 65535] { R6862 += 1, R6770 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R6862 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R6864 += 1, R6772 += 1, R6568 += 1, R6570 += 1 };
  s0 -> s2 [0, 65535] { R6864 += 1, R6771 += 1, R6772 += 1 };
  s0 -> s1 [0, 65535] { R6864 += 1, R6772 += 1, R6568 += 1 };
  s0 -> s3 [0, 65535] { R6864 += 1, R6772 += 1 };
  s0 -> s0 [0, 65535] { R6863 += 1, R6864 += 1 };
  s0 -> s1 [78, 65535] { R6864 += 1, R6772 += 1, R6568 += 1, R6570 += 1 };
  s1 -> s1 [0, 75] { R6864 += 1, R6772 += 1, R6568 += 1, R6570 += 1 };
  s1 -> s4 [0, 65535] { R6864 += 1 };
  s1 -> s1 [0, 65535] { R6864 += 1, R6772 += 1, R6568 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R6864 += 1, R6772 += 1 };
  s1 -> s1 [78, 65535] { R6864 += 1, R6772 += 1, R6568 += 1, R6570 += 1 };
  s2 -> s1 [0, 75] { R6864 += 1, R6772 += 1, R6568 += 1, R6570 += 1 };
  s2 -> s2 [0, 65535] { R6864 += 1, R6771 += 1, R6772 += 1 };
  s2 -> s1 [0, 65535] { R6864 += 1, R6772 += 1, R6568 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R6864 += 1, R6772 += 1 };
  s2 -> s1 [78, 65535] { R6864 += 1, R6772 += 1, R6568 += 1, R6570 += 1 };
  s3 -> s4 [0, 65535] { R6864 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R6864 += 1, R6772 += 1 };
  s4 -> s4 [0, 65535] { R6864 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s0 [0, 65535] { R6865 += 1, R6866 += 1 };
  s0 -> s1 [0, 65535] { R6866 += 1, R6774 += 1, R6577 += 1, R6578 += 1, R6579 += 1 };
  s0 -> s2 [0, 65535] { R6866 += 1, R6773 += 1, R6774 += 1 };
  s0 -> s3 [0, 65535] { R6866 += 1, R6774 += 1 };
  s0 -> s4 [0, 65535] { R6866 += 1, R6774 += 1, R6577 += 1, R6579 += 1, R6580 += 1 };
  s1 -> s5 [0, 65535] { R6866 += 1 };
  s1 -> s1 [0, 65535] { R6866 += 1, R6774 += 1, R6577 += 1, R6578 += 1, R6579 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s3 [0, 65535] { R6866 += 1, R6774 += 1 };
  s1 -> s4 [0, 65535] { R6866 += 1, R6774 += 1, R6577 += 1, R6579 += 1, R6580 += 1 };
  s2 -> s1 [0, 65535] { R6866 += 1, R6774 += 1, R6577 += 1, R6578 += 1, R6579 += 1 };
  s2 -> s2 [0, 65535] { R6866 += 1, R6773 += 1, R6774 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s3 [0, 65535] { R6866 += 1, R6774 += 1 };
  s2 -> s4 [0, 65535] { R6866 += 1, R6774 += 1, R6577 += 1, R6579 += 1, R6580 += 1 };
  s3 -> s5 [0, 65535] { R6866 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R6866 += 1, R6774 += 1 };
  s4 -> s5 [0, 65535] { R6866 += 1 };
  s4 -> s6 [0, 65535] { R6866 += 1, R6774 += 1, R6577 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s3 [0, 65535] { R6866 += 1, R6774 += 1 };
  s4 -> s4 [0, 65535] { R6866 += 1, R6774 += 1, R6577 += 1, R6579 += 1, R6580 += 1 };
  s5 -> s5 [0, 65535] { R6866 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s5 [0, 65535] { R6866 += 1 };
  s6 -> s6 [0, 65535] { R6866 += 1, R6774 += 1, R6577 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s3 [0, 65535] { R6866 += 1, R6774 += 1 };
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 65535] { R6868 += 1, R6776 += 1 };
  s0 -> s0 [0, 65535] { R6867 += 1, R6868 += 1 };
  s0 -> s2 [0, 65535] { R6868 += 1, R6775 += 1, R6776 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R6868 += 1, R6776 += 1 };
  s1 -> s4 [0, 65535] { R6868 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R6868 += 1, R6776 += 1 };
  s2 -> s2 [0, 65535] { R6868 += 1, R6775 += 1, R6776 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R6868 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65535] { R6870 += 1, R6805 += 1, R6806 += 1 };
  s0 -> s0 [0, 65535] { R6869 += 1, R6870 += 1 };
  s0 -> s2 [0, 65535] { R6870 += 1, R6806 += 1, R23 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R6870 += 1, R6805 += 1, R6806 += 1 };
  s1 -> s2 [0, 65535] { R6870 += 1, R6806 += 1, R23 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R6870 += 1 };
  s2 -> s2 [0, 65535] { R6870 += 1, R6806 += 1, R23 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R6870 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R6872 += 1, R6808 += 1 };
  s0 -> s0 [0, 65535] { R6871 += 1, R6872 += 1 };
  s0 -> s2 [0, 65535] { R6872 += 1, R6807 += 1, R6808 += 1 };
  s0 -> s3 [70, 70] { R6872 += 1, R6808 += 1 };
  s0 -> s4 [70, 70] { R6872 += 1, R6808 += 1 };
  s0 -> s5 [75, 75] { R6872 += 1, R6808 += 1 };
  s0 -> s1 [76, 65535] { R6872 += 1, R6808 += 1 };
  s1 -> s1 [0, 69] { R6872 += 1, R6808 += 1 };
  s1 -> s3 [70, 70] { R6872 += 1, R6808 += 1 };
  s1 -> s4 [70, 70] { R6872 += 1, R6808 += 1 };
  s1 -> s5 [75, 75] { R6872 += 1, R6808 += 1 };
  s1 -> s1 [76, 65535] { R6872 += 1, R6808 += 1 };
  s2 -> s1 [0, 69] { R6872 += 1, R6808 += 1 };
  s2 -> s2 [0, 65535] { R6872 += 1, R6807 += 1, R6808 += 1 };
  s2 -> s3 [70, 70] { R6872 += 1, R6808 += 1 };
  s2 -> s4 [70, 70] { R6872 += 1, R6808 += 1 };
  s2 -> s5 [75, 75] { R6872 += 1, R6808 += 1 };
  s2 -> s1 [76, 65535] { R6872 += 1, R6808 += 1 };
  s4 -> s4 [0, 70] { R6872 += 1, R6808 += 1 };
  s4 -> s7 [75, 75] { R6872 += 1, R6808 += 1 };
  s4 -> s4 [76, 65535] { R6872 += 1, R6808 += 1 };
  s5 -> s5 [0, 69] { R6872 += 1, R6808 += 1 };
  s5 -> s5 [0, 65535] { R6872 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R6872 += 1, R6808 += 1 };
  s5 -> s8 [70, 70] { R6872 += 1, R6808 += 1 };
  s5 -> s5 [75, 65535] { R6872 += 1, R6808 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R6872 += 1, R6808 += 1 };
  s7 -> s7 [0, 65535] { R6872 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R6872 += 1, R6808 += 1 };
  s8 -> s8 [0, 65535] { R6872 += 1 };
  s8 -> s6 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R6874 += 1, R6810 += 1, R137 += 1 };
  s0 -> s0 [0, 65535] { R6873 += 1, R6874 += 1 };
  s0 -> s2 [0, 65535] { R6874 += 1, R6809 += 1, R6810 += 1 };
  s0 -> s3 [70, 70] { R6874 += 1, R6810 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R6874 += 1, R6810 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R6874 += 1, R6810 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R6874 += 1, R6810 += 1, R137 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R6874 += 1 };
  s1 -> s3 [70, 70] { R6874 += 1, R6810 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R6874 += 1, R6810 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R6874 += 1, R6810 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R6874 += 1, R6810 += 1, R137 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R6874 += 1, R6809 += 1, R6810 += 1 };
  s2 -> s3 [70, 70] { R6874 += 1, R6810 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R6874 += 1, R6810 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R6874 += 1, R6810 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R6874 += 1, R6810 += 1, R137 += 1 };
  s3 -> s6 [0, 65535] { R6874 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R6874 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6874 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R6876 += 1, R6812 += 1, R139 += 1 };
  s0 -> s2 [0, 65535] { R6876 += 1, R6811 += 1, R6812 += 1 };
  s0 -> s0 [0, 65535] { R6875 += 1, R6876 += 1 };
  s0 -> s3 [70, 70] { R6876 += 1, R6812 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R6876 += 1, R6812 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R6876 += 1, R6812 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R6876 += 1, R6812 += 1, R139 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R6876 += 1 };
  s1 -> s3 [70, 70] { R6876 += 1, R6812 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R6876 += 1, R6812 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R6876 += 1, R6812 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R6876 += 1, R6812 += 1, R139 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R6876 += 1, R6811 += 1, R6812 += 1 };
  s2 -> s3 [70, 70] { R6876 += 1, R6812 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R6876 += 1, R6812 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R6876 += 1, R6812 += 1, R139 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R6876 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R6876 += 1 };
  s4 -> s4 [0, 65535] { R6876 += 1, R6812 += 1, R139 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6876 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R6878 += 1, R6814 += 1, R141 += 1, R142 += 1 };
  s0 -> s0 [0, 65535] { R6877 += 1, R6878 += 1 };
  s0 -> s2 [0, 65535] { R6878 += 1, R6813 += 1, R6814 += 1 };
  s0 -> s3 [70, 70] { R6878 += 1, R6814 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R6878 += 1, R6814 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R6878 += 1, R6814 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R6878 += 1, R6814 += 1, R141 += 1, R142 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R6878 += 1 };
  s1 -> s3 [70, 70] { R6878 += 1, R6814 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R6878 += 1, R6814 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R6878 += 1, R6814 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R6878 += 1, R6814 += 1, R141 += 1, R142 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R6878 += 1, R6813 += 1, R6814 += 1 };
  s2 -> s3 [70, 70] { R6878 += 1, R6814 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R6878 += 1, R6814 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R6878 += 1, R6814 += 1, R141 += 1, R142 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R6878 += 1 };
  s3 -> s3 [0, 65535] { R6878 += 1, R6814 += 1, R141 += 1, R142 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R6878 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6878 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R6880 += 1, R6816 += 1, R147 += 1, R148 += 1 };
  s0 -> s0 [0, 65535] { R6879 += 1, R6880 += 1 };
  s0 -> s2 [0, 65535] { R6880 += 1, R6815 += 1, R6816 += 1 };
  s0 -> s3 [70, 70] { R6880 += 1, R6816 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R6880 += 1, R6816 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R6880 += 1, R6816 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R6880 += 1, R6816 += 1, R147 += 1, R148 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R6880 += 1 };
  s1 -> s3 [70, 70] { R6880 += 1, R6816 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R6880 += 1, R6816 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R6880 += 1, R6816 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R6880 += 1, R6816 += 1, R147 += 1, R148 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R6880 += 1, R6815 += 1, R6816 += 1 };
  s2 -> s3 [70, 70] { R6880 += 1, R6816 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R6880 += 1, R6816 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R6880 += 1, R6816 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R6880 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R6880 += 1, R6816 += 1, R147 += 1, R148 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R6880 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6880 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R6882 += 1, R6818 += 1, R151 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R6882 += 1, R6818 += 1, R152 += 1 };
  s0 -> s0 [0, 65535] { R6881 += 1, R6882 += 1 };
  s0 -> s3 [0, 65535] { R6882 += 1, R6817 += 1, R6818 += 1 };
  s0 -> s4 [70, 70] { R6882 += 1, R6818 += 1, R151 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R6882 += 1, R6818 += 1, R151 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R6882 += 1, R6818 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R6882 += 1, R6818 += 1, R152 += 1 };
  s0 -> s2 [71, 74] { R6882 += 1, R6818 += 1, R152 += 1 };
  s0 -> s1 [71, 65535] { R6882 += 1, R6818 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R6882 += 1, R6818 += 1, R152 += 1 };
  s0 -> s2 [76, 65535] { R6882 += 1, R6818 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R6882 += 1, R6818 += 1, R151 += 1, R152 += 1 };
  s1 -> s2 [0, 69] { R6882 += 1, R6818 += 1, R152 += 1 };
  s1 -> s4 [70, 70] { R6882 += 1, R6818 += 1, R151 += 1, R152 += 1 };
  s1 -> s5 [70, 70] { R6882 += 1, R6818 += 1, R151 += 1, R152 += 1 };
  s1 -> s6 [70, 70] { R6882 += 1, R6818 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R6882 += 1, R6818 += 1, R152 += 1 };
  s1 -> s2 [71, 74] { R6882 += 1, R6818 += 1, R152 += 1 };
  s1 -> s1 [71, 65535] { R6882 += 1, R6818 += 1, R151 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R6882 += 1, R6818 += 1, R152 += 1 };
  s1 -> s2 [76, 65535] { R6882 += 1, R6818 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R6882 += 1, R6818 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R6882 += 1, R6818 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R6882 += 1, R6818 += 1, R152 += 1 };
  s2 -> s2 [71, 74] { R6882 += 1, R6818 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R6882 += 1, R6818 += 1, R152 += 1 };
  s2 -> s2 [76, 65535] { R6882 += 1, R6818 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R6882 += 1, R6818 += 1, R151 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R6882 += 1, R6818 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R6882 += 1, R6817 += 1, R6818 += 1 };
  s3 -> s4 [70, 70] { R6882 += 1, R6818 += 1, R151 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R6882 += 1, R6818 += 1, R151 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R6882 += 1, R6818 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R6882 += 1, R6818 += 1, R152 += 1 };
  s3 -> s2 [71, 74] { R6882 += 1, R6818 += 1, R152 += 1 };
  s3 -> s1 [71, 65535] { R6882 += 1, R6818 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R6882 += 1, R6818 += 1, R152 += 1 };
  s3 -> s2 [76, 65535] { R6882 += 1, R6818 += 1, R152 += 1 };
  s5 -> s6 [0, 74] { R6882 += 1, R6818 += 1, R152 += 1 };
  s5 -> s5 [0, 65535] { R6882 += 1, R6818 += 1, R151 += 1, R152 += 1 };
  s5 -> s10 [75, 75] { R6882 += 1, R6818 += 1, R152 += 1 };
  s5 -> s6 [76, 65535] { R6882 += 1, R6818 += 1, R152 += 1 };
  s6 -> s6 [0, 74] { R6882 += 1, R6818 += 1, R152 += 1 };
  s6 -> s10 [75, 75] { R6882 += 1, R6818 += 1, R152 += 1 };
  s6 -> s6 [76, 65535] { R6882 += 1, R6818 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R6882 += 1, R6818 += 1, R152 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R6882 += 1 };
  s8 -> s10 [70, 70] { R6882 += 1, R6818 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R6882 += 1, R6818 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R6882 += 1, R6818 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s12 [0, 65535] { R6882 += 1 };
  s10 -> s10 [0, 65535] { R6882 += 1, R6818 += 1, R152 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R6882 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R6882 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R6884 += 1, R6820 += 1, R155 += 1, R156 += 1 };
  s0 -> s2 [0, 65535] { R6884 += 1, R6819 += 1, R6820 += 1 };
  s0 -> s0 [0, 65535] { R6883 += 1, R6884 += 1 };
  s0 -> s3 [70, 70] { R6884 += 1, R6820 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R6884 += 1, R6820 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R6884 += 1, R6820 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R6884 += 1, R6820 += 1, R155 += 1, R156 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R6884 += 1 };
  s1 -> s3 [70, 70] { R6884 += 1, R6820 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R6884 += 1, R6820 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R6884 += 1, R6820 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R6884 += 1, R6820 += 1, R155 += 1, R156 += 1 };
  s2 -> s2 [0, 65535] { R6884 += 1, R6819 += 1, R6820 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R6884 += 1, R6820 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R6884 += 1, R6820 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R6884 += 1, R6820 += 1, R155 += 1, R156 += 1 };
  s3 -> s3 [0, 65535] { R6884 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R6884 += 1 };
  s4 -> s4 [0, 65535] { R6884 += 1, R6820 += 1, R155 += 1, R156 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6884 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R6886 += 1, R6822 += 1, R161 += 1, R162 += 1 };
  s0 -> s0 [0, 65535] { R6885 += 1, R6886 += 1 };
  s0 -> s2 [0, 65535] { R6886 += 1, R6821 += 1, R6822 += 1 };
  s0 -> s3 [70, 70] { R6886 += 1, R6822 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R6886 += 1, R6822 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R6886 += 1, R6822 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R6886 += 1, R6822 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535] { R6886 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R6886 += 1, R6822 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R6886 += 1, R6822 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R6886 += 1, R6822 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R6886 += 1, R6822 += 1, R161 += 1, R162 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R6886 += 1, R6821 += 1, R6822 += 1 };
  s2 -> s3 [70, 70] { R6886 += 1, R6822 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R6886 += 1, R6822 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R6886 += 1, R6822 += 1, R161 += 1, R162 += 1 };
  s3 -> s3 [0, 65535] { R6886 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R6886 += 1 };
  s4 -> s4 [0, 65535] { R6886 += 1, R6822 += 1, R161 += 1, R162 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R6886 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R6888 += 1, R6824 += 1, R167 += 1, R168 += 1 };
  s0 -> s2 [0, 65535] { R6888 += 1, R6823 += 1, R6824 += 1 };
  s0 -> s0 [0, 65535] { R6887 += 1, R6888 += 1 };
  s0 -> s3 [70, 70] { R6888 += 1, R6824 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R6888 += 1, R6824 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R6888 += 1, R6824 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R6888 += 1, R6824 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 65535] { R6888 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R6888 += 1, R6824 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R6888 += 1, R6824 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R6888 += 1, R6824 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R6888 += 1, R6824 += 1, R167 += 1, R168 += 1 };
  s2 -> s2 [0, 65535] { R6888 += 1, R6823 += 1, R6824 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R6888 += 1, R6824 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R6888 += 1, R6824 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R6888 += 1, R6824 += 1, R167 += 1, R168 += 1 };
  s3 -> s3 [0, 65535] { R6888 += 1, R6824 += 1, R167 += 1, R168 += 1 };
  s3 -> s6 [0, 65535] { R6888 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R6888 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R6888 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R6890 += 1, R6826 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s2 [0, 69] { R6890 += 1, R6826 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s3 [0, 69] { R6890 += 1, R6826 += 1, R175 += 1, R176 += 1 };
  s0 -> s4 [0, 65535] { R6890 += 1, R6825 += 1, R6826 += 1 };
  s0 -> s0 [0, 65535] { R6889 += 1, R6890 += 1 };
  s0 -> s5 [70, 70] { R6890 += 1, R6826 += 1, R175 += 1, R176 += 1 };
  s0 -> s6 [70, 70] { R6890 += 1, R6826 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s7 [70, 70] { R6890 += 1, R6826 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s8 [70, 70] { R6890 += 1, R6826 += 1, R175 += 1, R176 += 1 };
  s0 -> s9 [70, 70] { R6890 += 1, R6826 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s10 [70, 70] { R6890 += 1, R6826 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s1 [71, 65535] { R6890 += 1, R6826 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s2 [71, 65535] { R6890 += 1, R6826 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s3 [71, 65535] { R6890 += 1, R6826 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [0, 69] { R6890 += 1, R6826 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s16 [0, 69] { R6890 += 1, R6826 += 1 };
  s1 -> s2 [0, 69] { R6890 += 1, R6826 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s6 [70, 70] { R6890 += 1, R6826 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s11 [70, 70] { R6890 += 1, R6826 += 1 };
  s1 -> s7 [70, 70] { R6890 += 1, R6826 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s9 [70, 70] { R6890 += 1, R6826 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s10 [70, 70] { R6890 += 1, R6826 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s18 [70, 70] { R6890 += 1, R6826 += 1 };
  s1 -> s1 [71, 65535] { R6890 += 1, R6826 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s16 [71, 65535] { R6890 += 1, R6826 += 1 };
  s1 -> s2 [71, 65535] { R6890 += 1, R6826 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s15 [0, 69] { R6890 += 1, R6826 += 1, R176 += 1 };
  s2 -> s16 [0, 69] { R6890 += 1, R6826 += 1 };
  s2 -> s2 [0, 69] { R6890 += 1, R6826 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s14 [70, 70] { R6890 += 1, R6826 += 1, R176 += 1 };
  s2 -> s6 [70, 70] { R6890 += 1, R6826 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s11 [70, 70] { R6890 += 1, R6826 += 1 };
  s2 -> s17 [70, 70] { R6890 += 1, R6826 += 1, R176 += 1 };
  s2 -> s10 [70, 70] { R6890 += 1, R6826 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s18 [70, 70] { R6890 += 1, R6826 += 1 };
  s2 -> s15 [71, 65535] { R6890 += 1, R6826 += 1, R176 += 1 };
  s2 -> s16 [71, 65535] { R6890 += 1, R6826 += 1 };
  s2 -> s2 [71, 65535] { R6890 += 1, R6826 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s1 [0, 69] { R6890 += 1, R6826 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s2 [0, 69] { R6890 += 1, R6826 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [0, 69] { R6890 += 1, R6826 += 1, R175 += 1, R176 += 1 };
  s3 -> s5 [70, 70] { R6890 += 1, R6826 += 1, R175 += 1, R176 += 1 };
  s3 -> s6 [70, 70] { R6890 += 1, R6826 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s7 [70, 70] { R6890 += 1, R6826 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s8 [70, 70] { R6890 += 1, R6826 += 1, R175 += 1, R176 += 1 };
  s3 -> s9 [70, 70] { R6890 += 1, R6826 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s10 [70, 70] { R6890 += 1, R6826 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s1 [71, 65535] { R6890 += 1, R6826 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s2 [71, 65535] { R6890 += 1, R6826 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [71, 65535] { R6890 += 1, R6826 += 1, R175 += 1, R176 += 1 };
  s4 -> s1 [0, 69] { R6890 += 1, R6826 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s2 [0, 69] { R6890 += 1, R6826 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s3 [0, 69] { R6890 += 1, R6826 += 1, R175 += 1, R176 += 1 };
  s4 -> s4 [0, 65535] { R6890 += 1, R6825 += 1, R6826 += 1 };
  s4 -> s5 [70, 70] { R6890 += 1, R6826 += 1, R175 += 1, R176 += 1 };
  s4 -> s6 [70, 70] { R6890 += 1, R6826 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s7 [70, 70] { R6890 += 1, R6826 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s8 [70, 70] { R6890 += 1, R6826 += 1, R175 += 1, R176 += 1 };
  s4 -> s9 [70, 70] { R6890 += 1, R6826 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s10 [70, 70] { R6890 += 1, R6826 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s1 [71, 65535] { R6890 += 1, R6826 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s2 [71, 65535] { R6890 += 1, R6826 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s3 [71, 65535] { R6890 += 1, R6826 += 1, R175 += 1, R176 += 1 };
  s5 -> s5 [0, 65535] { R6890 += 1, R6826 += 1, R175 += 1, R176 += 1 };
  s5 -> s6 [0, 65535] { R6890 += 1, R6826 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s5 -> s7 [0, 65535] { R6890 += 1, R6826 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s6 -> s14 [0, 65535] { R6890 += 1, R6826 += 1, R176 += 1 };
  s6 -> s6 [0, 65535] { R6890 += 1, R6826 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s6 -> s11 [0, 65535] { R6890 += 1, R6826 += 1 };
  s7 -> s6 [0, 65535] { R6890 += 1, R6826 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s7 -> s11 [0, 65535] { R6890 += 1, R6826 += 1 };
  s7 -> s7 [0, 65535] { R6890 += 1, R6826 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s11 [0, 65535] { R6890 += 1, R6826 += 1 };
  s11 -> s13 [0, 65535] { R6890 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R6890 += 1 };
  s14 -> s14 [0, 65535] { R6890 += 1, R6826 += 1, R176 += 1 };
  s14 -> s11 [0, 65535] { R6890 += 1, R6826 += 1 };
  s15 -> s15 [0, 69] { R6890 += 1, R6826 += 1, R176 += 1 };
  s15 -> s16 [0, 69] { R6890 += 1, R6826 += 1 };
  s15 -> s14 [70, 70] { R6890 += 1, R6826 += 1, R176 += 1 };
  s15 -> s11 [70, 70] { R6890 += 1, R6826 += 1 };
  s15 -> s17 [70, 70] { R6890 += 1, R6826 += 1, R176 += 1 };
  s15 -> s18 [70, 70] { R6890 += 1, R6826 += 1 };
  s15 -> s15 [71, 65535] { R6890 += 1, R6826 += 1, R176 += 1 };
  s15 -> s16 [71, 65535] { R6890 += 1, R6826 += 1 };
  s16 -> s16 [0, 69] { R6890 += 1, R6826 += 1 };
  s16 -> s12 [0, 65535];
  s16 -> s16 [0, 65535] { R6890 += 1 };
  s16 -> s11 [70, 70] { R6890 += 1, R6826 += 1 };
  s16 -> s18 [70, 70] { R6890 += 1, R6826 += 1 };
  s16 -> s16 [71, 65535] { R6890 += 1, R6826 += 1 };
  s18 -> s12 [0, 65535];
  s18 -> s18 [0, 65535] { R6890 += 1 };
  accepting s16, s12, s13, s18, s11;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R6892 += 1, R6828 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s2 [0, 69] { R6892 += 1, R6828 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s3 [0, 69] { R6892 += 1, R6828 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s4 [0, 65535] { R6892 += 1, R6827 += 1, R6828 += 1 };
  s0 -> s0 [0, 65535] { R6891 += 1, R6892 += 1 };
  s0 -> s5 [70, 70] { R6892 += 1, R6828 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s6 [70, 70] { R6892 += 1, R6828 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s7 [70, 70] { R6892 += 1, R6828 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s8 [70, 70] { R6892 += 1, R6828 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s9 [70, 70] { R6892 += 1, R6828 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s10 [70, 70] { R6892 += 1, R6828 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s1 [71, 75] { R6892 += 1, R6828 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s2 [71, 65535] { R6892 += 1, R6828 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s3 [71, 65535] { R6892 += 1, R6828 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s1 [78, 65535] { R6892 += 1, R6828 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s1 [0, 69] { R6892 += 1, R6828 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s1 [0, 65535] { R6892 += 1 };
  s1 -> s11 [0, 65535];
  s1 -> s6 [70, 70] { R6892 += 1, R6828 += 1, R6564 += 1 };
  s1 -> s10 [70, 70] { R6892 += 1, R6828 += 1, R6564 += 1 };
  s1 -> s1 [71, 75] { R6892 += 1, R6828 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s1 [71, 65535] { R6892 += 1, R6828 += 1, R6564 += 1 };
  s1 -> s1 [78, 65535] { R6892 += 1, R6828 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s1 [0, 69] { R6892 += 1, R6828 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s2 [0, 69] { R6892 += 1, R6828 += 1, R6563 += 1, R6564 += 1 };
  s2 -> s3 [0, 69] { R6892 += 1, R6828 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s5 [70, 70] { R6892 += 1, R6828 += 1, R6563 += 1, R6564 += 1 };
  s2 -> s6 [70, 70] { R6892 += 1, R6828 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s7 [70, 70] { R6892 += 1, R6828 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s8 [70, 70] { R6892 += 1, R6828 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s9 [70, 70] { R6892 += 1, R6828 += 1, R6563 += 1, R6564 += 1 };
  s2 -> s10 [70, 70] { R6892 += 1, R6828 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s1 [71, 75] { R6892 += 1, R6828 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s2 [71, 65535] { R6892 += 1, R6828 += 1, R6563 += 1, R6564 += 1 };
  s2 -> s3 [71, 65535] { R6892 += 1, R6828 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s1 [78, 65535] { R6892 += 1, R6828 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s1 [0, 69] { R6892 += 1, R6828 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s3 [0, 69] { R6892 += 1, R6828 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s3 -> s6 [70, 70] { R6892 += 1, R6828 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s7 [70, 70] { R6892 += 1, R6828 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s3 -> s8 [70, 70] { R6892 += 1, R6828 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s3 -> s10 [70, 70] { R6892 += 1, R6828 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s1 [71, 75] { R6892 += 1, R6828 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s3 [71, 65535] { R6892 += 1, R6828 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s3 -> s1 [78, 65535] { R6892 += 1, R6828 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s1 [0, 69] { R6892 += 1, R6828 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s2 [0, 69] { R6892 += 1, R6828 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s3 [0, 69] { R6892 += 1, R6828 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s4 [0, 65535] { R6892 += 1, R6827 += 1, R6828 += 1 };
  s4 -> s5 [70, 70] { R6892 += 1, R6828 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s6 [70, 70] { R6892 += 1, R6828 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s7 [70, 70] { R6892 += 1, R6828 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s8 [70, 70] { R6892 += 1, R6828 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s9 [70, 70] { R6892 += 1, R6828 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s10 [70, 70] { R6892 += 1, R6828 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s1 [71, 75] { R6892 += 1, R6828 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s2 [71, 65535] { R6892 += 1, R6828 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s3 [71, 65535] { R6892 += 1, R6828 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s1 [78, 65535] { R6892 += 1, R6828 += 1, R6564 += 1, R6566 += 1 };
  s5 -> s6 [0, 75] { R6892 += 1, R6828 += 1, R6564 += 1, R6566 += 1 };
  s5 -> s5 [0, 65535] { R6892 += 1, R6828 += 1, R6563 += 1, R6564 += 1 };
  s5 -> s7 [0, 65535] { R6892 += 1, R6828 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s5 -> s6 [78, 65535] { R6892 += 1, R6828 += 1, R6564 += 1, R6566 += 1 };
  s6 -> s6 [0, 75] { R6892 += 1, R6828 += 1, R6564 += 1, R6566 += 1 };
  s6 -> s6 [0, 65535] { R6892 += 1, R6828 += 1, R6564 += 1 };
  s6 -> s12 [0, 65535] { R6892 += 1 };
  s6 -> s11 [0, 65535];
  s6 -> s6 [78, 65535] { R6892 += 1, R6828 += 1, R6564 += 1, R6566 += 1 };
  s7 -> s6 [0, 75] { R6892 += 1, R6828 += 1, R6564 += 1, R6566 += 1 };
  s7 -> s7 [0, 65535] { R6892 += 1, R6828 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s7 -> s6 [78, 65535] { R6892 += 1, R6828 += 1, R6564 += 1, R6566 += 1 };
  s10 -> s10 [0, 65535] { R6892 += 1 };
  s10 -> s11 [0, 65535];
  s11 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R6892 += 1 };
  s12 -> s11 [0, 65535];
  accepting s12, s6, s1, s10, s11;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R6894 += 1, R6830 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s0 -> s2 [0, 69] { R6894 += 1, R6830 += 1, R6571 += 1, R6572 += 1 };
  s0 -> s3 [0, 65535] { R6894 += 1, R6829 += 1, R6830 += 1 };
  s0 -> s0 [0, 65535] { R6893 += 1, R6894 += 1 };
  s0 -> s4 [70, 70] { R6894 += 1, R6830 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s0 -> s5 [70, 70] { R6894 += 1, R6830 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s0 -> s6 [70, 70] { R6894 += 1, R6830 += 1, R6571 += 1, R6572 += 1 };
  s0 -> s7 [70, 70] { R6894 += 1, R6830 += 1, R6571 += 1, R6572 += 1 };
  s0 -> s1 [71, 65535] { R6894 += 1, R6830 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s0 -> s2 [71, 65535] { R6894 += 1, R6830 += 1, R6571 += 1, R6572 += 1 };
  s1 -> s1 [0, 69] { R6894 += 1, R6830 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s1 [0, 65535] { R6894 += 1 };
  s1 -> s4 [70, 70] { R6894 += 1, R6830 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s1 -> s5 [70, 70] { R6894 += 1, R6830 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s1 -> s1 [71, 65535] { R6894 += 1, R6830 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s2 -> s1 [0, 69] { R6894 += 1, R6830 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s2 -> s2 [0, 69] { R6894 += 1, R6830 += 1, R6571 += 1, R6572 += 1 };
  s2 -> s4 [70, 70] { R6894 += 1, R6830 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s2 -> s5 [70, 70] { R6894 += 1, R6830 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s2 -> s6 [70, 70] { R6894 += 1, R6830 += 1, R6571 += 1, R6572 += 1 };
  s2 -> s7 [70, 70] { R6894 += 1, R6830 += 1, R6571 += 1, R6572 += 1 };
  s2 -> s1 [71, 65535] { R6894 += 1, R6830 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s2 -> s2 [71, 65535] { R6894 += 1, R6830 += 1, R6571 += 1, R6572 += 1 };
  s3 -> s1 [0, 69] { R6894 += 1, R6830 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s3 -> s2 [0, 69] { R6894 += 1, R6830 += 1, R6571 += 1, R6572 += 1 };
  s3 -> s3 [0, 65535] { R6894 += 1, R6829 += 1, R6830 += 1 };
  s3 -> s4 [70, 70] { R6894 += 1, R6830 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s3 -> s5 [70, 70] { R6894 += 1, R6830 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s3 -> s6 [70, 70] { R6894 += 1, R6830 += 1, R6571 += 1, R6572 += 1 };
  s3 -> s7 [70, 70] { R6894 += 1, R6830 += 1, R6571 += 1, R6572 += 1 };
  s3 -> s1 [71, 65535] { R6894 += 1, R6830 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s3 -> s2 [71, 65535] { R6894 += 1, R6830 += 1, R6571 += 1, R6572 += 1 };
  s4 -> s4 [0, 65535] { R6894 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R6894 += 1, R6830 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s5 -> s9 [0, 65535] { R6894 += 1 };
  s7 -> s5 [0, 65535] { R6894 += 1, R6830 += 1, R6572 += 1, R6573 += 1, R6574 += 1 };
  s7 -> s7 [0, 65535] { R6894 += 1, R6830 += 1, R6571 += 1, R6572 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R6894 += 1 };
  accepting s4, s8, s5, s9, s1;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R6896 += 1, R6832 += 1, R6739 += 1, R6740 += 1 };
  s0 -> s2 [0, 69] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s0 -> s3 [0, 69] { R6896 += 1, R6832 += 1, R6740 += 1, R6741 += 1, R6742 += 1 };
  s0 -> s4 [0, 65535] { R6896 += 1, R6831 += 1, R6832 += 1 };
  s0 -> s0 [0, 65535] { R6895 += 1, R6896 += 1 };
  s0 -> s5 [70, 70] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s0 -> s6 [70, 70] { R6896 += 1, R6832 += 1, R6740 += 1, R6741 += 1, R6742 += 1 };
  s0 -> s7 [70, 70] { R6896 += 1, R6832 += 1, R6739 += 1, R6740 += 1 };
  s0 -> s8 [70, 70] { R6896 += 1, R6832 += 1, R6740 += 1, R6741 += 1, R6742 += 1 };
  s0 -> s9 [70, 70] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s0 -> s10 [70, 70] { R6896 += 1, R6832 += 1, R6739 += 1, R6740 += 1 };
  s0 -> s2 [71, 74] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s0 -> s1 [71, 65535] { R6896 += 1, R6832 += 1, R6739 += 1, R6740 += 1 };
  s0 -> s3 [71, 65535] { R6896 += 1, R6832 += 1, R6740 += 1, R6741 += 1, R6742 += 1 };
  s0 -> s11 [75, 75] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s0 -> s12 [78, 78] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s0 -> s2 [79, 65535] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s1 -> s1 [0, 69] { R6896 += 1, R6832 += 1, R6739 += 1, R6740 += 1 };
  s1 -> s2 [0, 69] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s1 -> s3 [0, 69] { R6896 += 1, R6832 += 1, R6740 += 1, R6741 += 1, R6742 += 1 };
  s1 -> s5 [70, 70] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s1 -> s6 [70, 70] { R6896 += 1, R6832 += 1, R6740 += 1, R6741 += 1, R6742 += 1 };
  s1 -> s7 [70, 70] { R6896 += 1, R6832 += 1, R6739 += 1, R6740 += 1 };
  s1 -> s8 [70, 70] { R6896 += 1, R6832 += 1, R6740 += 1, R6741 += 1, R6742 += 1 };
  s1 -> s9 [70, 70] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s1 -> s10 [70, 70] { R6896 += 1, R6832 += 1, R6739 += 1, R6740 += 1 };
  s1 -> s2 [71, 74] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s1 -> s1 [71, 65535] { R6896 += 1, R6832 += 1, R6739 += 1, R6740 += 1 };
  s1 -> s3 [71, 65535] { R6896 += 1, R6832 += 1, R6740 += 1, R6741 += 1, R6742 += 1 };
  s1 -> s11 [75, 75] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s1 -> s12 [78, 78] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s1 -> s2 [79, 65535] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s2 -> s2 [0, 69] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s2 -> s5 [70, 70] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s2 -> s9 [70, 70] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s2 -> s2 [71, 74] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s2 -> s11 [75, 75] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s2 -> s12 [78, 78] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s2 -> s2 [79, 65535] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s3 -> s2 [0, 69] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s3 -> s3 [0, 69] { R6896 += 1, R6832 += 1, R6740 += 1, R6741 += 1, R6742 += 1 };
  s3 -> s5 [70, 70] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s3 -> s8 [70, 70] { R6896 += 1, R6832 += 1, R6740 += 1, R6741 += 1, R6742 += 1 };
  s3 -> s9 [70, 70] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s3 -> s6 [70, 70] { R6896 += 1, R6832 += 1, R6740 += 1, R6741 += 1, R6742 += 1 };
  s3 -> s2 [71, 74] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s3 -> s3 [71, 65535] { R6896 += 1, R6832 += 1, R6740 += 1, R6741 += 1, R6742 += 1 };
  s3 -> s11 [75, 75] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s3 -> s12 [78, 78] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s3 -> s2 [79, 65535] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s4 -> s1 [0, 69] { R6896 += 1, R6832 += 1, R6739 += 1, R6740 += 1 };
  s4 -> s2 [0, 69] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s4 -> s3 [0, 69] { R6896 += 1, R6832 += 1, R6740 += 1, R6741 += 1, R6742 += 1 };
  s4 -> s4 [0, 65535] { R6896 += 1, R6831 += 1, R6832 += 1 };
  s4 -> s5 [70, 70] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s4 -> s6 [70, 70] { R6896 += 1, R6832 += 1, R6740 += 1, R6741 += 1, R6742 += 1 };
  s4 -> s7 [70, 70] { R6896 += 1, R6832 += 1, R6739 += 1, R6740 += 1 };
  s4 -> s8 [70, 70] { R6896 += 1, R6832 += 1, R6740 += 1, R6741 += 1, R6742 += 1 };
  s4 -> s9 [70, 70] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s4 -> s10 [70, 70] { R6896 += 1, R6832 += 1, R6739 += 1, R6740 += 1 };
  s4 -> s2 [71, 74] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s4 -> s1 [71, 65535] { R6896 += 1, R6832 += 1, R6739 += 1, R6740 += 1 };
  s4 -> s3 [71, 65535] { R6896 += 1, R6832 += 1, R6740 += 1, R6741 += 1, R6742 += 1 };
  s4 -> s11 [75, 75] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s4 -> s12 [78, 78] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s4 -> s2 [79, 65535] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s5 -> s5 [0, 74] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s5 -> s27 [75, 75] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s5 -> s16 [78, 78] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s5 -> s5 [79, 65535] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s8 -> s5 [0, 74] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s8 -> s8 [0, 65535] { R6896 += 1, R6832 += 1, R6740 += 1, R6741 += 1, R6742 += 1 };
  s8 -> s27 [75, 75] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s8 -> s16 [78, 78] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s8 -> s5 [79, 65535] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s10 -> s5 [0, 74] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s10 -> s8 [0, 65535] { R6896 += 1, R6832 += 1, R6740 += 1, R6741 += 1, R6742 += 1 };
  s10 -> s10 [0, 65535] { R6896 += 1, R6832 += 1, R6739 += 1, R6740 += 1 };
  s10 -> s27 [75, 75] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s10 -> s16 [78, 78] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s10 -> s5 [79, 65535] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s11 -> s11 [0, 69] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s11 -> s26 [70, 70] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s11 -> s27 [70, 70] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s11 -> s11 [71, 75] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s11 -> s19 [78, 78] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s11 -> s11 [79, 65535] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s12 -> s12 [0, 69] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s12 -> s13 [0, 69] { R6896 += 1, R6832 += 1 };
  s12 -> s14 [70, 70] { R6896 += 1, R6832 += 1, R6740 += 1 };
  s12 -> s15 [70, 70] { R6896 += 1, R6832 += 1 };
  s12 -> s16 [70, 70] { R6896 += 1, R6832 += 1, R6740 += 1 };
  s12 -> s17 [70, 70] { R6896 += 1, R6832 += 1 };
  s12 -> s12 [71, 74] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s12 -> s12 [71, 65535] { R6896 += 1, R6832 += 1, R6740 += 1 };
  s12 -> s13 [71, 65535] { R6896 += 1, R6832 += 1 };
  s12 -> s18 [75, 75] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s12 -> s19 [75, 75] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s12 -> s12 [78, 65535] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s13 -> s13 [0, 69] { R6896 += 1, R6832 += 1 };
  s13 -> s13 [0, 65535] { R6896 += 1 };
  s13 -> s25 [0, 65535];
  s13 -> s15 [70, 70] { R6896 += 1, R6832 += 1 };
  s13 -> s17 [70, 70] { R6896 += 1, R6832 += 1 };
  s13 -> s13 [71, 65535] { R6896 += 1, R6832 += 1 };
  s15 -> s15 [0, 65535] { R6896 += 1 };
  s15 -> s25 [0, 65535];
  s16 -> s16 [0, 74] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s16 -> s16 [0, 65535] { R6896 += 1, R6832 += 1, R6740 += 1 };
  s16 -> s17 [0, 65535] { R6896 += 1, R6832 += 1 };
  s16 -> s22 [75, 75] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s16 -> s21 [75, 75] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s16 -> s16 [78, 65535] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s17 -> s24 [0, 65535] { R6896 += 1 };
  s17 -> s25 [0, 65535];
  s17 -> s17 [0, 65535] { R6896 += 1, R6832 += 1 };
  s18 -> s18 [0, 69] { R6896 += 1, R6832 += 1, R6740 += 1 };
  s18 -> s13 [0, 69] { R6896 += 1, R6832 += 1 };
  s18 -> s22 [70, 70] { R6896 += 1, R6832 += 1, R6740 += 1 };
  s18 -> s23 [70, 70] { R6896 += 1, R6832 += 1, R6740 += 1 };
  s18 -> s15 [70, 70] { R6896 += 1, R6832 += 1 };
  s18 -> s17 [70, 70] { R6896 += 1, R6832 += 1 };
  s18 -> s18 [71, 65535] { R6896 += 1, R6832 += 1, R6740 += 1 };
  s18 -> s13 [71, 65535] { R6896 += 1, R6832 += 1 };
  s19 -> s19 [0, 69] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s19 -> s13 [0, 69] { R6896 += 1, R6832 += 1 };
  s19 -> s20 [70, 70] { R6896 += 1, R6832 += 1, R6740 += 1 };
  s19 -> s15 [70, 70] { R6896 += 1, R6832 += 1 };
  s19 -> s17 [70, 70] { R6896 += 1, R6832 += 1 };
  s19 -> s21 [70, 70] { R6896 += 1, R6832 += 1, R6740 += 1 };
  s19 -> s19 [71, 75] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s19 -> s19 [71, 65535] { R6896 += 1, R6832 += 1, R6740 += 1 };
  s19 -> s13 [71, 65535] { R6896 += 1, R6832 += 1 };
  s19 -> s19 [78, 65535] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s21 -> s21 [0, 75] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s21 -> s17 [0, 65535] { R6896 += 1, R6832 += 1 };
  s21 -> s21 [0, 65535] { R6896 += 1, R6832 += 1, R6740 += 1 };
  s21 -> s21 [78, 65535] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s22 -> s22 [0, 65535] { R6896 += 1, R6832 += 1, R6740 += 1 };
  s22 -> s17 [0, 65535] { R6896 += 1, R6832 += 1 };
  s24 -> s24 [0, 65535] { R6896 += 1 };
  s24 -> s25 [0, 65535];
  s25 -> s25 [0, 65535];
  s27 -> s27 [0, 75] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s27 -> s21 [78, 78] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  s27 -> s27 [79, 65535] { R6896 += 1, R6832 += 1, R6740 += 1, R6742 += 1 };
  accepting s17, s24, s13, s15, s25;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R6896 && R25 - R6896 = -1 && R26 = R6896 && R27 - R6896 = -1 && R28 = R6896 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R6744 + -1*R6740 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R6744 + -1*R6740 - R130 = 0 && R129 + R6743 + R6739 = 0 && R131 + R6745 + R6741 = 0 && R132 + R6746 + R6742 = 0 && R6807 = 0 && R6808 = 0 && R6817 = 0 && R6818 = 0 && R6825 = 0 && R6826 = 0 && R6827 = 0 && R6828 = 0 && R6829 = 0 && R6830 = 0 && R6831 = 0 && R6832 = 0 && R6833 = 0 && R6834 = R6896 && R6835 = 0 && R6836 = R6896 && R6837 = 0 && R6838 = R6896 && R6839 = 0 && R6840 = R6896 && R6841 = 0 && R6842 = R6896 && R6843 = 0 && R6844 = R6896 && R6845 = 0 && R6846 = R6896 && R6847 = 0 && R6848 = R6896 && R6849 = 0 && R6850 = R6896 && R6851 = 0 && R6852 = R6896 && R6853 = 0 && R6854 = R6896 && R6855 = 0 && R6856 = R6896 && R6857 = 0 && R6858 = R6896 && R6859 = 0 && R6860 = R6896 && R6861 = 0 && R6862 = R6896 && R6863 = 0 && R6864 = R6896 && R6865 = 0 && R6866 = R6896 && R6867 = 0 && R6868 = R6896 && R6869 = 0 && R6870 = R6896 && R6871 = 0 && R6872 = R6896 && R6873 = 0 && R6874 = R6896 && R6875 = 0 && R6876 = R6896 && R6877 = 0 && R6878 = R6896 && R6879 = 0 && R6880 = R6896 && R6881 = 0 && R6882 = R6896 && R6883 = 0 && R6884 = R6896 && R6885 = 0 && R6886 = R6896 && R6887 = 0 && R6888 = R6896 && R6889 = 0 && R6890 = R6896 && R6891 = 0 && R6892 = R6896 && R6893 = 0 && R6894 = R6896 && R6895 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R6744 + -1*R6740 - R130 < 1 && 0 < R6896 && (R2 != 0 || R22 = 0 || (R6747 = 0 && R6748 = 0)) && (R2 != 0 || R22 = 0 || (R6749 = 0 && R6750 = 0)) && (R2 != 0 || R22 = 0 || (R6751 = 0 && R6752 = 0)) && (R2 != 0 || R22 = 0 || (R6753 = 0 && R6754 = 0)) && (R2 != 0 || R22 = 0 || (R6755 = 0 && R6756 = 0)) && (R2 != 0 || R22 = 0 || (R6757 = 0 && R6758 = 0)) && (R2 != 0 || R22 = 0 || (R6759 = 0 && R6760 = 0)) && (R2 != 0 || R22 = 0 || (R6761 = 0 && R6762 = 0)) && (R2 != 0 || R22 = 0 || (R6763 = 0 && R6764 = 0)) && (R2 != 0 || R22 = 0 || (R6765 = 0 && R6766 = 0)) && (R2 != 0 || R22 = 0 || (R6767 = 0 && R6768 = 0)) && (R2 != 0 || R22 = 0 || (R6769 = 0 && R6770 = 0)) && (R2 != 0 || R22 = 0 || (R6771 = 0 && R6772 = 0)) && (R2 != 0 || R22 = 0 || (R6773 = 0 && R6774 = 0)) && (R2 != 0 || R22 = 0 || (R6775 = 0 && R6776 = 0)) && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R6744 + -1*R6740 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R6569 + R6565 = 0 && R114 + R6570 + R6566 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R6744 + -1*R6740 - R130 = 0 || R130 + R6744 + R6740 < 1) && (R81 + R158 + R155 = 0 || R130 + R6744 + R6740 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R6744 + -1*R6740 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R6744 + R6740 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R6744 + -1*R6740 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R6744 + R6740 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R6744 + -1*R6740 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R6744 + R6740 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R6567 + R6563 != 0 || R112 + R6568 + R6564 + -1*R6744 + -1*R6740 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R6744 + R6740 = 0)) && (R113 + R6569 + R6565 != 0 || R83 + R160 + R157 + -1*R6570 + -1*R6566 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R6576 + R6571 != 0 || R120 + R6577 + R6572 + -1*R6744 + -1*R6740 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R6744 + R6740 = 0)) && (R6747 != 0 || R2 = R6748 || R2 < 1) && (R6749 != 0 || R2 = R6750 || R2 < 1) && (R6751 != 0 || R2 = R6752 || R2 < 1) && (R6753 != 0 || R2 = R6754 || R2 < 1) && (R6755 != 0 || R2 = R6756 || R2 < 1) && (R6757 != 0 || R2 = R6758 || R2 < 1) && (R6759 != 0 || R2 = R6760 || R2 < 1) && (R6761 != 0 || R2 = R6762 || R2 < 1) && (R6763 != 0 || R2 = R6764 || R2 < 1) && (R6765 != 0 || R2 = R6766 || R2 < 1) && (R6767 != 0 || R2 = R6768 || R2 < 1) && (R6769 != 0 || R2 = R6770 || R2 < 1) && (R6771 != 0 || R2 = R6772 || R2 < 1) && (R6773 != 0 || R2 = R6774 || R2 < 1) && (R6775 != 0 || R2 = R6776 || R2 < 1) && (R23 = 0 || (R6805 = 0 && R6806 = 0)) && (R23 = 0 || (R6809 = 0 && R6810 = 0)) && (R23 = 0 || (R6811 = 0 && R6812 = 0)) && (R23 = 0 || (R6813 = 0 && R6814 = 0)) && (R23 = 0 || (R6815 = 0 && R6816 = 0)) && (R23 = 0 || (R6819 = 0 && R6820 = 0)) && (R23 = 0 || (R6821 = 0 && R6822 = 0)) && (R23 = 0 || (R6823 = 0 && R6824 = 0)) && (R24 = 0 || (R6777 = 0 && R6778 = 0)) && (R24 = 0 || (R6779 = 0 && R6780 = 0)) && (R24 = 0 || (R6781 = 0 && R6782 = 0)) && (R24 = 0 || (R6783 = 0 && R6784 = 0)) && (R24 = 0 || (R6785 = 0 && R6786 = 0)) && (R24 = 0 || (R6787 = 0 && R6788 = 0)) && (R24 = 0 || (R6789 = 0 && R6790 = 0)) && (R24 = 0 || (R6791 = 0 && R6792 = 0)) && (R24 = 0 || (R6793 = 0 && R6794 = 0)) && (R24 = 0 || (R6795 = 0 && R6796 = 0)) && (R24 = 0 || (R6797 = 0 && R6798 = 0)) && (R24 = 0 || (R6799 = 0 && R6800 = 0)) && (R24 = 0 || (R6801 = 0 && R6802 = 0)) && (R24 = 0 || (R6803 = 0 && R6804 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R6744 + R6740 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R6744 + R6740 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R6744 + R6740 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R6567 + R6563 = 0 || (R83 + R160 + R157 = 0 && R130 + R6744 + R6740 = 0)) && (R113 + R6569 + R6565 = 0 || R83 + R160 + R157 < 1) && (R119 + R6576 + R6571 = 0 || (R83 + R160 + R157 = 0 && R130 + R6744 + R6740 = 0)) && (R123 + R6580 + R6575 = 0 || (R121 + R6578 + R6573 = 0 && R122 + R6579 + R6574 = 0)) && (R6747 = 0 || R2 < 1) && (R6749 = 0 || R2 < 1) && (R6751 = 0 || R2 < 1) && (R6753 = 0 || R2 < 1) && (R6755 = 0 || R2 < 1) && (R6757 = 0 || R2 < 1) && (R6759 = 0 || R2 < 1) && (R6761 = 0 || R2 < 1) && (R6763 = 0 || R2 < 1) && (R6765 = 0 || R2 < 1) && (R6767 = 0 || R2 < 1) && (R6769 = 0 || R2 < 1) && (R6771 = 0 || R2 < 1) && (R6773 = 0 || R2 < 1) && (R6775 = 0 || R2 < 1);
// End of Parikh automata intersection problem
