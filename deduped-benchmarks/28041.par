// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R10393, R10394, R10395, R10396, R10397, R10398, R10399, R104, R10400, R10401, R10402, R105, R111, R11193, R11194, R11195, R11196, R11197, R11198, R11199, R112, R11200, R11201, R11202, R11203, R11204, R11205, R11206, R11207, R11208, R11209, R11210, R11211, R11212, R11213, R11214, R11215, R11216, R11217, R11218, R11219, R11220, R11221, R11222, R11223, R11224, R11225, R11226, R11227, R11228, R11229, R11230, R11231, R11232, R11233, R11234, R11235, R11236, R11237, R11238, R11239, R11240, R11241, R11242, R11243, R11244, R11245, R11246, R11247, R11248, R11249, R11250, R11251, R11252, R11253, R11254, R11255, R11256, R11257, R11258, R11259, R11260, R11261, R11262, R11263, R11264, R11265, R11266, R11267, R11268, R11269, R11270, R11271, R11272, R11273, R11274, R11275, R11276, R11277, R11278, R11279, R11280, R11281, R11282, R11283, R11284, R11285, R11286, R11287, R11288, R11289, R11290, R11291, R11292, R11293, R11294, R11295, R11296, R11297, R11298, R11299, R113, R11300, R11301, R11302, R11303, R11304, R11305, R11306, R11307, R11308, R11309, R11310, R11311, R11312, R11313, R11314, R11315, R11316, R11317, R11318, R11319, R11320, R11321, R11322, R11323, R11324, R11325, R11326, R11327, R11328, R11329, R11330, R11331, R11332, R11333, R11334, R11335, R11336, R11337, R11338, R11339, R11340, R11341, R11342, R11343, R11344, R11345, R11346, R11347, R11348, R11349, R11350, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R2, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R5, R63, R65, R6563, R6564, R6565, R6566, R6567, R6568, R6569, R6570, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R30 += 1 };
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R11231 += 1, R11232 += 1 };
  s0 -> s1 [0, 65535] { R11232 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R11232 += 1, R24 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R11234 += 1 };
  s0 -> s0 [0, 65535] { R11233 += 1, R11234 += 1 };
  s0 -> s2 [70, 70] { R11234 += 1 };
  s0 -> s3 [70, 70] { R11234 += 1 };
  s0 -> s1 [76, 65535] { R11234 += 1 };
  s1 -> s1 [0, 69] { R11234 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11234 += 1 };
  s1 -> s3 [70, 70] { R11234 += 1 };
  s1 -> s1 [76, 65535] { R11234 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R11234 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R11234 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R11236 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R11235 += 1, R11236 += 1 };
  s0 -> s2 [70, 70] { R11236 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R11236 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R11236 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R11236 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11236 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R11236 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R11236 += 1, R63 += 1 };
  s2 -> s2 [0, 65535] { R11236 += 1, R63 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R11238 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R11237 += 1, R11238 += 1 };
  s0 -> s2 [70, 70] { R11238 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R11238 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R11238 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R11238 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11238 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R11238 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R11238 += 1, R65 += 1 };
  s2 -> s2 [0, 65535] { R11238 += 1, R65 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R11240 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R11239 += 1, R11240 += 1 };
  s0 -> s2 [70, 70] { R11240 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R11240 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R11240 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R11240 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11240 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R11240 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R11240 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R11240 += 1, R67 += 1, R68 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R11242 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R11241 += 1, R11242 += 1 };
  s0 -> s2 [70, 70] { R11242 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R11242 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R11242 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R11242 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11242 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R11242 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R11242 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R11242 += 1, R73 += 1, R74 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R11244 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R11243 += 1, R11244 += 1 };
  s0 -> s2 [70, 70] { R11244 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R11244 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R11244 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R11244 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11244 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R11244 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R11244 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535] { R11244 += 1, R77 += 1, R78 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R11246 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R11245 += 1, R11246 += 1 };
  s0 -> s2 [70, 70] { R11246 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R11246 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R11246 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R11246 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11246 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R11246 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R11246 += 1, R81 += 1, R82 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R11246 += 1, R81 += 1, R82 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R11248 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R11247 += 1, R11248 += 1 };
  s0 -> s2 [70, 70] { R11248 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R11248 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R11248 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R11248 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11248 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R11248 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R11248 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R11248 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R11250 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R11249 += 1, R11250 += 1 };
  s0 -> s2 [70, 70] { R11250 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R11250 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R11250 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R11250 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11250 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R11250 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R11250 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R11250 += 1, R93 += 1, R94 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R11252 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R11251 += 1, R11252 += 1 };
  s0 -> s2 [70, 70] { R11252 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R11252 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R11252 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R11252 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11252 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R11252 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R11252 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535] { R11252 += 1, R101 += 1, R102 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R11254 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R11253 += 1, R11254 += 1 };
  s0 -> s2 [70, 70] { R11254 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R11254 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R11254 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R11254 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11254 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R11254 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R11254 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R11254 += 1, R111 += 1, R112 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R11256 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R11255 += 1, R11256 += 1 };
  s0 -> s2 [70, 70] { R11256 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R11256 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R11256 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R11256 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11256 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R11256 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R11256 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535] { R11256 += 1, R119 += 1, R120 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R11258 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R11257 += 1, R11258 += 1 };
  s0 -> s2 [70, 70] { R11258 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R11258 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R11258 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R11258 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R11258 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R11258 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R11258 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R11258 += 1, R129 += 1, R130 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R11288 += 1 };
  s0 -> s0 [0, 65535] { R11287 += 1, R11288 += 1 };
  s0 -> s2 [70, 70] { R11288 += 1 };
  s0 -> s1 [71, 65535] { R11288 += 1 };
  s1 -> s1 [0, 69] { R11288 += 1 };
  s1 -> s2 [70, 70] { R11288 += 1 };
  s1 -> s1 [71, 65535] { R11288 += 1 };
  s2 -> s2 [0, 65535] { R11288 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R11290 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R11289 += 1, R11290 += 1 };
  s1 -> s1 [0, 65535] { R11290 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R11292 += 1 };
  s0 -> s2 [0, 65535] { R11292 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R11291 += 1, R11292 += 1 };
  s0 -> s3 [70, 70] { R11292 += 1 };
  s0 -> s1 [71, 65535] { R11292 += 1 };
  s1 -> s1 [0, 69] { R11292 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R11292 += 1 };
  s1 -> s1 [71, 65535] { R11292 += 1 };
  s2 -> s1 [0, 69] { R11292 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R11292 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R11292 += 1 };
  s2 -> s1 [71, 65535] { R11292 += 1 };
  s3 -> s3 [0, 65535] { R11292 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R11294 += 1, R11202 += 1 };
  s0 -> s0 [0, 65535] { R11293 += 1, R11294 += 1 };
  s0 -> s2 [0, 65535] { R11294 += 1, R11201 += 1, R11202 += 1 };
  s0 -> s1 [71, 65535] { R11294 += 1, R11202 += 1 };
  s1 -> s1 [0, 69] { R11294 += 1, R11202 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R11294 += 1 };
  s1 -> s1 [71, 65535] { R11294 += 1, R11202 += 1 };
  s2 -> s1 [0, 69] { R11294 += 1, R11202 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R11294 += 1, R11201 += 1, R11202 += 1 };
  s2 -> s1 [71, 65535] { R11294 += 1, R11202 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R11295 += 1, R11296 += 1 };
  s0 -> s1 [0, 65535] { R11296 += 1, R11203 += 1, R11204 += 1 };
  s0 -> s2 [0, 65535] { R11296 += 1, R11204 += 1, R22 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R11296 += 1, R11203 += 1, R11204 += 1 };
  s1 -> s2 [0, 65535] { R11296 += 1, R11204 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R11296 += 1 };
  s2 -> s2 [0, 65535] { R11296 += 1, R11204 += 1, R22 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R11296 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R11298 += 1, R11206 += 1 };
  s0 -> s2 [0, 65535] { R11298 += 1, R11205 += 1, R11206 += 1 };
  s0 -> s0 [0, 65535] { R11297 += 1, R11298 += 1 };
  s0 -> s1 [75, 65535] { R11298 += 1, R11206 += 1 };
  s1 -> s1 [0, 70] { R11298 += 1, R11206 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R11298 += 1 };
  s1 -> s1 [75, 65535] { R11298 += 1, R11206 += 1 };
  s2 -> s1 [0, 70] { R11298 += 1, R11206 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R11298 += 1, R11205 += 1, R11206 += 1 };
  s2 -> s1 [75, 65535] { R11298 += 1, R11206 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R11300 += 1, R11207 += 1, R11208 += 1 };
  s0 -> s0 [0, 65535] { R11299 += 1, R11300 += 1 };
  s0 -> s2 [0, 65535] { R11300 += 1, R11208 += 1, R138 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R11300 += 1, R11207 += 1, R11208 += 1 };
  s1 -> s2 [0, 65535] { R11300 += 1, R11208 += 1, R138 += 1 };
  s2 -> s3 [0, 65535] { R11300 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R11300 += 1, R11208 += 1, R138 += 1 };
  s3 -> s3 [0, 65535] { R11300 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R11302 += 1, R11210 += 1 };
  s0 -> s0 [0, 65535] { R11301 += 1, R11302 += 1 };
  s0 -> s2 [0, 65535] { R11302 += 1, R11210 += 1, R140 += 1 };
  s0 -> s3 [0, 65535] { R11302 += 1, R11209 += 1, R11210 += 1 };
  s0 -> s1 [76, 65535] { R11302 += 1, R11210 += 1 };
  s1 -> s1 [0, 74] { R11302 += 1, R11210 += 1 };
  s1 -> s1 [0, 65535] { R11302 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [76, 65535] { R11302 += 1, R11210 += 1 };
  s2 -> s1 [0, 74] { R11302 += 1, R11210 += 1 };
  s2 -> s2 [0, 65535] { R11302 += 1, R11210 += 1, R140 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R11302 += 1 };
  s2 -> s1 [76, 65535] { R11302 += 1, R11210 += 1 };
  s3 -> s1 [0, 74] { R11302 += 1, R11210 += 1 };
  s3 -> s2 [0, 65535] { R11302 += 1, R11210 += 1, R140 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R11302 += 1, R11209 += 1, R11210 += 1 };
  s3 -> s1 [76, 65535] { R11302 += 1, R11210 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R11302 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R11303 += 1, R11304 += 1 };
  s0 -> s1 [0, 65535] { R11304 += 1, R11212 += 1, R145 += 1, R146 += 1 };
  s0 -> s2 [0, 65535] { R11304 += 1, R11212 += 1, R144 += 1, R145 += 1 };
  s0 -> s3 [0, 65535] { R11304 += 1, R11211 += 1, R11212 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R11304 += 1 };
  s1 -> s6 [0, 65535] { R11304 += 1, R11212 += 1 };
  s1 -> s1 [0, 65535] { R11304 += 1, R11212 += 1, R145 += 1, R146 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R11304 += 1 };
  s2 -> s1 [0, 65535] { R11304 += 1, R11212 += 1, R145 += 1, R146 += 1 };
  s2 -> s2 [0, 65535] { R11304 += 1, R11212 += 1, R144 += 1, R145 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R11304 += 1, R11212 += 1, R145 += 1, R146 += 1 };
  s3 -> s2 [0, 65535] { R11304 += 1, R11212 += 1, R144 += 1, R145 += 1 };
  s3 -> s3 [0, 65535] { R11304 += 1, R11211 += 1, R11212 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R11304 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R11304 += 1 };
  s6 -> s6 [0, 65535] { R11304 += 1, R11212 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R11306 += 1, R11214 += 1, R150 += 1 };
  s0 -> s2 [0, 65535] { R11306 += 1, R11213 += 1, R11214 += 1 };
  s0 -> s3 [0, 65535] { R11306 += 1, R11214 += 1, R149 += 1, R150 += 1 };
  s0 -> s0 [0, 65535] { R11305 += 1, R11306 += 1 };
  s0 -> s4 [75, 75] { R11306 += 1, R11214 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R11306 += 1, R11214 += 1, R150 += 1 };
  s0 -> s1 [79, 65535] { R11306 += 1, R11214 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R11306 += 1, R11214 += 1, R150 += 1 };
  s1 -> s6 [0, 65535] { R11306 += 1 };
  s1 -> s1 [0, 65535] { R11306 += 1, R11214 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [75, 75] { R11306 += 1, R11214 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R11306 += 1, R11214 += 1, R150 += 1 };
  s1 -> s1 [79, 65535] { R11306 += 1, R11214 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R11306 += 1, R11214 += 1, R150 += 1 };
  s2 -> s2 [0, 65535] { R11306 += 1, R11213 += 1, R11214 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s3 [0, 65535] { R11306 += 1, R11214 += 1, R149 += 1, R150 += 1 };
  s2 -> s4 [75, 75] { R11306 += 1, R11214 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R11306 += 1, R11214 += 1, R150 += 1 };
  s2 -> s1 [79, 65535] { R11306 += 1, R11214 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R11306 += 1, R11214 += 1, R150 += 1 };
  s3 -> s6 [0, 65535] { R11306 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R11306 += 1, R11214 += 1, R149 += 1, R150 += 1 };
  s3 -> s4 [75, 75] { R11306 += 1, R11214 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R11306 += 1, R11214 += 1, R150 += 1 };
  s3 -> s1 [79, 65535] { R11306 += 1, R11214 += 1, R150 += 1 };
  s4 -> s4 [0, 75] { R11306 += 1, R11214 += 1, R150 += 1 };
  s4 -> s6 [0, 65535] { R11306 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R11306 += 1, R11214 += 1 };
  s4 -> s4 [79, 65535] { R11306 += 1, R11214 += 1, R150 += 1 };
  s5 -> s6 [0, 65535] { R11306 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R11306 += 1, R11214 += 1 };
  s6 -> s6 [0, 65535] { R11306 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R11308 += 1, R11216 += 1, R154 += 1 };
  s0 -> s2 [0, 65535] { R11308 += 1, R11215 += 1, R11216 += 1 };
  s0 -> s3 [0, 65535] { R11308 += 1, R11216 += 1 };
  s0 -> s0 [0, 65535] { R11307 += 1, R11308 += 1 };
  s1 -> s1 [0, 65535] { R11308 += 1, R11216 += 1, R154 += 1 };
  s1 -> s3 [0, 65535] { R11308 += 1, R11216 += 1 };
  s1 -> s4 [0, 65535] { R11308 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R11308 += 1, R11216 += 1, R154 += 1 };
  s2 -> s2 [0, 65535] { R11308 += 1, R11215 += 1, R11216 += 1 };
  s2 -> s3 [0, 65535] { R11308 += 1, R11216 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R11308 += 1, R11216 += 1 };
  s3 -> s4 [0, 65535] { R11308 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R11308 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R11310 += 1, R11217 += 1, R11218 += 1 };
  s0 -> s2 [0, 65535] { R11310 += 1, R11218 += 1, R159 += 1, R160 += 1 };
  s0 -> s3 [0, 65535] { R11310 += 1, R11218 += 1, R158 += 1, R159 += 1 };
  s0 -> s0 [0, 65535] { R11309 += 1, R11310 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R11310 += 1, R11217 += 1, R11218 += 1 };
  s1 -> s2 [0, 65535] { R11310 += 1, R11218 += 1, R159 += 1, R160 += 1 };
  s1 -> s3 [0, 65535] { R11310 += 1, R11218 += 1, R158 += 1, R159 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R11310 += 1, R11218 += 1, R159 += 1, R160 += 1 };
  s2 -> s6 [0, 65535] { R11310 += 1, R11218 += 1 };
  s2 -> s5 [0, 65535] { R11310 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R11310 += 1, R11218 += 1, R159 += 1, R160 += 1 };
  s3 -> s3 [0, 65535] { R11310 += 1, R11218 += 1, R158 += 1, R159 += 1 };
  s3 -> s5 [0, 65535] { R11310 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R11310 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R11310 += 1, R11218 += 1 };
  s6 -> s5 [0, 65535] { R11310 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R11312 += 1, R11220 += 1, R165 += 1 };
  s0 -> s0 [0, 65535] { R11311 += 1, R11312 += 1 };
  s0 -> s2 [0, 65535] { R11312 += 1, R11220 += 1, R165 += 1, R166 += 1 };
  s0 -> s3 [0, 65535] { R11312 += 1, R11220 += 1, R164 += 1, R165 += 1 };
  s0 -> s4 [0, 65535] { R11312 += 1, R11219 += 1, R11220 += 1 };
  s0 -> s1 [76, 65535] { R11312 += 1, R11220 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R11312 += 1, R11220 += 1, R165 += 1 };
  s1 -> s6 [0, 65535] { R11312 += 1 };
  s1 -> s1 [0, 65535] { R11312 += 1, R11220 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R11312 += 1, R11220 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R11312 += 1, R11220 += 1, R165 += 1 };
  s2 -> s2 [0, 65535] { R11312 += 1, R11220 += 1, R165 += 1, R166 += 1 };
  s2 -> s7 [0, 65535] { R11312 += 1, R11220 += 1 };
  s2 -> s6 [0, 65535] { R11312 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [76, 65535] { R11312 += 1, R11220 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R11312 += 1, R11220 += 1, R165 += 1 };
  s3 -> s2 [0, 65535] { R11312 += 1, R11220 += 1, R165 += 1, R166 += 1 };
  s3 -> s3 [0, 65535] { R11312 += 1, R11220 += 1, R164 += 1, R165 += 1 };
  s3 -> s6 [0, 65535] { R11312 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [76, 65535] { R11312 += 1, R11220 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R11312 += 1, R11220 += 1, R165 += 1 };
  s4 -> s2 [0, 65535] { R11312 += 1, R11220 += 1, R165 += 1, R166 += 1 };
  s4 -> s3 [0, 65535] { R11312 += 1, R11220 += 1, R164 += 1, R165 += 1 };
  s4 -> s4 [0, 65535] { R11312 += 1, R11219 += 1, R11220 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s1 [76, 65535] { R11312 += 1, R11220 += 1, R165 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11312 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R11312 += 1, R11220 += 1 };
  s7 -> s6 [0, 65535] { R11312 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R11314 += 1, R11222 += 1, R172 += 1, R174 += 1 };
  s0 -> s0 [0, 65535] { R11313 += 1, R11314 += 1 };
  s0 -> s2 [0, 65535] { R11314 += 1, R11222 += 1, R171 += 1, R172 += 1 };
  s0 -> s3 [0, 65535] { R11314 += 1, R11222 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s4 [0, 65535] { R11314 += 1, R11221 += 1, R11222 += 1 };
  s0 -> s1 [76, 65535] { R11314 += 1, R11222 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R11314 += 1, R11222 += 1, R172 += 1, R174 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R11314 += 1 };
  s1 -> s1 [0, 65535] { R11314 += 1, R11222 += 1, R172 += 1 };
  s1 -> s7 [0, 65535] { R11314 += 1, R11222 += 1 };
  s1 -> s1 [76, 65535] { R11314 += 1, R11222 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R11314 += 1, R11222 += 1, R172 += 1, R174 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R11314 += 1 };
  s2 -> s2 [0, 65535] { R11314 += 1, R11222 += 1, R171 += 1, R172 += 1 };
  s2 -> s3 [0, 65535] { R11314 += 1, R11222 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s1 [76, 65535] { R11314 += 1, R11222 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R11314 += 1, R11222 += 1, R172 += 1, R174 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R11314 += 1 };
  s3 -> s3 [0, 65535] { R11314 += 1, R11222 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s7 [0, 65535] { R11314 += 1, R11222 += 1 };
  s3 -> s1 [76, 65535] { R11314 += 1, R11222 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R11314 += 1, R11222 += 1, R172 += 1, R174 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R11314 += 1, R11222 += 1, R171 += 1, R172 += 1 };
  s4 -> s3 [0, 65535] { R11314 += 1, R11222 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s4 [0, 65535] { R11314 += 1, R11221 += 1, R11222 += 1 };
  s4 -> s1 [76, 65535] { R11314 += 1, R11222 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11314 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R11314 += 1 };
  s7 -> s7 [0, 65535] { R11314 += 1, R11222 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s0 [0, 65535] { R11315 += 1, R11316 += 1 };
  s0 -> s1 [0, 65535] { R11316 += 1, R11223 += 1, R11224 += 1 };
  s0 -> s2 [0, 65535] { R11316 += 1, R11224 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R11316 += 1, R11223 += 1, R11224 += 1 };
  s1 -> s2 [0, 65535] { R11316 += 1, R11224 += 1 };
  s2 -> s3 [0, 65535] { R11316 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R11316 += 1, R11224 += 1 };
  s3 -> s3 [0, 65535] { R11316 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R11318 += 1, R11226 += 1, R6568 += 1, R6570 += 1 };
  s0 -> s0 [0, 65535] { R11317 += 1, R11318 += 1 };
  s0 -> s1 [0, 65535] { R11318 += 1, R11226 += 1, R6568 += 1 };
  s0 -> s2 [0, 65535] { R11318 += 1, R11226 += 1 };
  s0 -> s3 [0, 65535] { R11318 += 1, R11225 += 1, R11226 += 1 };
  s0 -> s1 [78, 65535] { R11318 += 1, R11226 += 1, R6568 += 1, R6570 += 1 };
  s1 -> s1 [0, 75] { R11318 += 1, R11226 += 1, R6568 += 1, R6570 += 1 };
  s1 -> s1 [0, 65535] { R11318 += 1, R11226 += 1, R6568 += 1 };
  s1 -> s5 [0, 65535] { R11318 += 1 };
  s1 -> s2 [0, 65535] { R11318 += 1, R11226 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [78, 65535] { R11318 += 1, R11226 += 1, R6568 += 1, R6570 += 1 };
  s2 -> s5 [0, 65535] { R11318 += 1 };
  s2 -> s2 [0, 65535] { R11318 += 1, R11226 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 75] { R11318 += 1, R11226 += 1, R6568 += 1, R6570 += 1 };
  s3 -> s1 [0, 65535] { R11318 += 1, R11226 += 1, R6568 += 1 };
  s3 -> s2 [0, 65535] { R11318 += 1, R11226 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R11318 += 1, R11225 += 1, R11226 += 1 };
  s3 -> s1 [78, 65535] { R11318 += 1, R11226 += 1, R6568 += 1, R6570 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R11318 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R11320 += 1, R11228 += 1, R10399 += 1, R10400 += 1, R10401 += 1 };
  s0 -> s2 [0, 65535] { R11320 += 1, R11228 += 1, R10398 += 1, R10399 += 1 };
  s0 -> s3 [0, 65535] { R11320 += 1, R11227 += 1, R11228 += 1 };
  s0 -> s4 [0, 65535] { R11320 += 1, R11228 += 1, R10399 += 1, R10401 += 1, R10402 += 1 };
  s0 -> s0 [0, 65535] { R11319 += 1, R11320 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R11320 += 1, R11228 += 1, R10399 += 1, R10400 += 1, R10401 += 1 };
  s1 -> s6 [0, 65535] { R11320 += 1, R11228 += 1 };
  s1 -> s7 [0, 65535] { R11320 += 1 };
  s1 -> s4 [0, 65535] { R11320 += 1, R11228 += 1, R10399 += 1, R10401 += 1, R10402 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R11320 += 1, R11228 += 1, R10399 += 1, R10400 += 1, R10401 += 1 };
  s2 -> s2 [0, 65535] { R11320 += 1, R11228 += 1, R10398 += 1, R10399 += 1 };
  s2 -> s7 [0, 65535] { R11320 += 1 };
  s2 -> s4 [0, 65535] { R11320 += 1, R11228 += 1, R10399 += 1, R10401 += 1, R10402 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R11320 += 1, R11228 += 1, R10399 += 1, R10400 += 1, R10401 += 1 };
  s3 -> s2 [0, 65535] { R11320 += 1, R11228 += 1, R10398 += 1, R10399 += 1 };
  s3 -> s3 [0, 65535] { R11320 += 1, R11227 += 1, R11228 += 1 };
  s3 -> s4 [0, 65535] { R11320 += 1, R11228 += 1, R10399 += 1, R10401 += 1, R10402 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R11320 += 1, R11228 += 1 };
  s4 -> s7 [0, 65535] { R11320 += 1 };
  s4 -> s4 [0, 65535] { R11320 += 1, R11228 += 1, R10399 += 1, R10401 += 1, R10402 += 1 };
  s4 -> s8 [0, 65535] { R11320 += 1, R11228 += 1, R10399 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11320 += 1, R11228 += 1 };
  s6 -> s7 [0, 65535] { R11320 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R11320 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R11320 += 1, R11228 += 1 };
  s8 -> s7 [0, 65535] { R11320 += 1 };
  s8 -> s8 [0, 65535] { R11320 += 1, R11228 += 1, R10399 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 74] { R11322 += 1, R11230 += 1, R11198 += 1, R11200 += 1 };
  s0 -> s2 [0, 65535] { R11322 += 1, R11229 += 1, R11230 += 1 };
  s0 -> s0 [0, 65535] { R11321 += 1, R11322 += 1 };
  s0 -> s3 [0, 65535] { R11322 += 1, R11230 += 1, R11198 += 1, R11199 += 1, R11200 += 1 };
  s0 -> s4 [75, 75] { R11322 += 1, R11230 += 1, R11198 += 1, R11200 += 1 };
  s0 -> s5 [78, 78] { R11322 += 1, R11230 += 1, R11198 += 1, R11200 += 1 };
  s0 -> s1 [79, 65535] { R11322 += 1, R11230 += 1, R11198 += 1, R11200 += 1 };
  s1 -> s1 [0, 74] { R11322 += 1, R11230 += 1, R11198 += 1, R11200 += 1 };
  s1 -> s4 [75, 75] { R11322 += 1, R11230 += 1, R11198 += 1, R11200 += 1 };
  s1 -> s5 [78, 78] { R11322 += 1, R11230 += 1, R11198 += 1, R11200 += 1 };
  s1 -> s1 [79, 65535] { R11322 += 1, R11230 += 1, R11198 += 1, R11200 += 1 };
  s2 -> s1 [0, 74] { R11322 += 1, R11230 += 1, R11198 += 1, R11200 += 1 };
  s2 -> s2 [0, 65535] { R11322 += 1, R11229 += 1, R11230 += 1 };
  s2 -> s3 [0, 65535] { R11322 += 1, R11230 += 1, R11198 += 1, R11199 += 1, R11200 += 1 };
  s2 -> s4 [75, 75] { R11322 += 1, R11230 += 1, R11198 += 1, R11200 += 1 };
  s2 -> s5 [78, 78] { R11322 += 1, R11230 += 1, R11198 += 1, R11200 += 1 };
  s2 -> s1 [79, 65535] { R11322 += 1, R11230 += 1, R11198 += 1, R11200 += 1 };
  s3 -> s1 [0, 74] { R11322 += 1, R11230 += 1, R11198 += 1, R11200 += 1 };
  s3 -> s3 [0, 65535] { R11322 += 1, R11230 += 1, R11198 += 1, R11199 += 1, R11200 += 1 };
  s3 -> s4 [75, 75] { R11322 += 1, R11230 += 1, R11198 += 1, R11200 += 1 };
  s3 -> s5 [78, 78] { R11322 += 1, R11230 += 1, R11198 += 1, R11200 += 1 };
  s3 -> s1 [79, 65535] { R11322 += 1, R11230 += 1, R11198 += 1, R11200 += 1 };
  s4 -> s4 [0, 75] { R11322 += 1, R11230 += 1, R11198 += 1, R11200 += 1 };
  s4 -> s10 [78, 78] { R11322 += 1, R11230 += 1, R11198 += 1, R11200 += 1 };
  s4 -> s4 [79, 65535] { R11322 += 1, R11230 += 1, R11198 += 1, R11200 += 1 };
  s5 -> s5 [0, 74] { R11322 += 1, R11230 += 1, R11198 += 1, R11200 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R11322 += 1, R11230 += 1, R11198 += 1 };
  s5 -> s7 [0, 65535] { R11322 += 1 };
  s5 -> s8 [0, 65535] { R11322 += 1, R11230 += 1 };
  s5 -> s9 [75, 75] { R11322 += 1, R11230 += 1, R11198 += 1, R11200 += 1 };
  s5 -> s10 [75, 75] { R11322 += 1, R11230 += 1, R11198 += 1, R11200 += 1 };
  s5 -> s5 [78, 65535] { R11322 += 1, R11230 += 1, R11198 += 1, R11200 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R11322 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R11322 += 1 };
  s8 -> s8 [0, 65535] { R11322 += 1, R11230 += 1 };
  s9 -> s9 [0, 65535] { R11322 += 1, R11230 += 1, R11198 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s7 [0, 65535] { R11322 += 1 };
  s9 -> s8 [0, 65535] { R11322 += 1, R11230 += 1 };
  s10 -> s10 [0, 75] { R11322 += 1, R11230 += 1, R11198 += 1, R11200 += 1 };
  s10 -> s6 [0, 65535];
  s10 -> s10 [0, 65535] { R11322 += 1, R11230 += 1, R11198 += 1 };
  s10 -> s7 [0, 65535] { R11322 += 1 };
  s10 -> s8 [0, 65535] { R11322 += 1, R11230 += 1 };
  s10 -> s10 [78, 65535] { R11322 += 1, R11230 += 1, R11198 += 1, R11200 += 1 };
  accepting s8, s5, s9, s6, s7, s10;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65535] { R11324 += 1, R11260 += 1, R23 += 1 };
  s0 -> s0 [0, 65535] { R11323 += 1, R11324 += 1 };
  s0 -> s2 [0, 65535] { R11324 += 1, R11259 += 1, R11260 += 1 };
  s1 -> s1 [0, 65535] { R11324 += 1, R11260 += 1, R23 += 1 };
  s1 -> s4 [0, 65535] { R11324 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R11324 += 1, R11260 += 1, R23 += 1 };
  s2 -> s2 [0, 65535] { R11324 += 1, R11259 += 1, R11260 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R11324 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R11326 += 1, R11262 += 1 };
  s0 -> s2 [0, 65535] { R11326 += 1, R11261 += 1, R11262 += 1 };
  s0 -> s0 [0, 65535] { R11325 += 1, R11326 += 1 };
  s0 -> s3 [70, 70] { R11326 += 1, R11262 += 1 };
  s0 -> s4 [70, 70] { R11326 += 1, R11262 += 1 };
  s0 -> s5 [75, 75] { R11326 += 1, R11262 += 1 };
  s0 -> s1 [76, 65535] { R11326 += 1, R11262 += 1 };
  s1 -> s1 [0, 69] { R11326 += 1, R11262 += 1 };
  s1 -> s3 [70, 70] { R11326 += 1, R11262 += 1 };
  s1 -> s4 [70, 70] { R11326 += 1, R11262 += 1 };
  s1 -> s5 [75, 75] { R11326 += 1, R11262 += 1 };
  s1 -> s1 [76, 65535] { R11326 += 1, R11262 += 1 };
  s2 -> s1 [0, 69] { R11326 += 1, R11262 += 1 };
  s2 -> s2 [0, 65535] { R11326 += 1, R11261 += 1, R11262 += 1 };
  s2 -> s3 [70, 70] { R11326 += 1, R11262 += 1 };
  s2 -> s4 [70, 70] { R11326 += 1, R11262 += 1 };
  s2 -> s5 [75, 75] { R11326 += 1, R11262 += 1 };
  s2 -> s1 [76, 65535] { R11326 += 1, R11262 += 1 };
  s3 -> s3 [0, 70] { R11326 += 1, R11262 += 1 };
  s3 -> s7 [75, 75] { R11326 += 1, R11262 += 1 };
  s3 -> s3 [76, 65535] { R11326 += 1, R11262 += 1 };
  s5 -> s5 [0, 69] { R11326 += 1, R11262 += 1 };
  s5 -> s5 [0, 65535] { R11326 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R11326 += 1, R11262 += 1 };
  s5 -> s8 [70, 70] { R11326 += 1, R11262 += 1 };
  s5 -> s5 [75, 65535] { R11326 += 1, R11262 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R11326 += 1, R11262 += 1 };
  s7 -> s7 [0, 65535] { R11326 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [75, 65535] { R11326 += 1, R11262 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R11326 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R11328 += 1, R11264 += 1, R137 += 1 };
  s0 -> s2 [0, 65535] { R11328 += 1, R11263 += 1, R11264 += 1 };
  s0 -> s0 [0, 65535] { R11327 += 1, R11328 += 1 };
  s0 -> s3 [70, 70] { R11328 += 1, R11264 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R11328 += 1, R11264 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R11328 += 1, R11264 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R11328 += 1, R11264 += 1, R137 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R11328 += 1 };
  s1 -> s3 [70, 70] { R11328 += 1, R11264 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R11328 += 1, R11264 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R11328 += 1, R11264 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R11328 += 1, R11264 += 1, R137 += 1 };
  s2 -> s2 [0, 65535] { R11328 += 1, R11263 += 1, R11264 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R11328 += 1, R11264 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R11328 += 1, R11264 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R11328 += 1, R11264 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R11328 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R11328 += 1 };
  s4 -> s4 [0, 65535] { R11328 += 1, R11264 += 1, R137 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R11328 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R11330 += 1, R11266 += 1, R139 += 1 };
  s0 -> s2 [0, 65535] { R11330 += 1, R11265 += 1, R11266 += 1 };
  s0 -> s0 [0, 65535] { R11329 += 1, R11330 += 1 };
  s0 -> s3 [70, 70] { R11330 += 1, R11266 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R11330 += 1, R11266 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R11330 += 1, R11266 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R11330 += 1, R11266 += 1, R139 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R11330 += 1 };
  s1 -> s3 [70, 70] { R11330 += 1, R11266 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R11330 += 1, R11266 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R11330 += 1, R11266 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R11330 += 1, R11266 += 1, R139 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R11330 += 1, R11265 += 1, R11266 += 1 };
  s2 -> s3 [70, 70] { R11330 += 1, R11266 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R11330 += 1, R11266 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R11330 += 1, R11266 += 1, R139 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R11330 += 1 };
  s3 -> s3 [0, 65535] { R11330 += 1, R11266 += 1, R139 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R11330 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11330 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R11332 += 1, R11268 += 1, R141 += 1, R142 += 1 };
  s0 -> s2 [0, 65535] { R11332 += 1, R11267 += 1, R11268 += 1 };
  s0 -> s0 [0, 65535] { R11331 += 1, R11332 += 1 };
  s0 -> s3 [70, 70] { R11332 += 1, R11268 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R11332 += 1, R11268 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R11332 += 1, R11268 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R11332 += 1, R11268 += 1, R141 += 1, R142 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R11332 += 1 };
  s1 -> s3 [70, 70] { R11332 += 1, R11268 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R11332 += 1, R11268 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R11332 += 1, R11268 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R11332 += 1, R11268 += 1, R141 += 1, R142 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R11332 += 1, R11267 += 1, R11268 += 1 };
  s2 -> s3 [70, 70] { R11332 += 1, R11268 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R11332 += 1, R11268 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R11332 += 1, R11268 += 1, R141 += 1, R142 += 1 };
  s3 -> s3 [0, 65535] { R11332 += 1, R11268 += 1, R141 += 1, R142 += 1 };
  s3 -> s6 [0, 65535] { R11332 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R11332 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11332 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R11334 += 1, R11270 += 1, R147 += 1, R148 += 1 };
  s0 -> s0 [0, 65535] { R11333 += 1, R11334 += 1 };
  s0 -> s2 [0, 65535] { R11334 += 1, R11269 += 1, R11270 += 1 };
  s0 -> s3 [70, 70] { R11334 += 1, R11270 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R11334 += 1, R11270 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R11334 += 1, R11270 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R11334 += 1, R11270 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 65535] { R11334 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R11334 += 1, R11270 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R11334 += 1, R11270 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R11334 += 1, R11270 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R11334 += 1, R11270 += 1, R147 += 1, R148 += 1 };
  s2 -> s2 [0, 65535] { R11334 += 1, R11269 += 1, R11270 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R11334 += 1, R11270 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R11334 += 1, R11270 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R11334 += 1, R11270 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R11334 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R11334 += 1 };
  s4 -> s4 [0, 65535] { R11334 += 1, R11270 += 1, R147 += 1, R148 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11334 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R11336 += 1, R11272 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R11336 += 1, R11272 += 1, R151 += 1, R152 += 1 };
  s0 -> s0 [0, 65535] { R11335 += 1, R11336 += 1 };
  s0 -> s3 [0, 65535] { R11336 += 1, R11271 += 1, R11272 += 1 };
  s0 -> s4 [70, 70] { R11336 += 1, R11272 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R11336 += 1, R11272 += 1, R151 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R11336 += 1, R11272 += 1, R151 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R11336 += 1, R11272 += 1, R152 += 1 };
  s0 -> s1 [71, 74] { R11336 += 1, R11272 += 1, R152 += 1 };
  s0 -> s2 [71, 65535] { R11336 += 1, R11272 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R11336 += 1, R11272 += 1, R152 += 1 };
  s0 -> s1 [76, 65535] { R11336 += 1, R11272 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R11336 += 1, R11272 += 1, R152 += 1 };
  s1 -> s4 [70, 70] { R11336 += 1, R11272 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R11336 += 1, R11272 += 1, R152 += 1 };
  s1 -> s1 [71, 74] { R11336 += 1, R11272 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R11336 += 1, R11272 += 1, R152 += 1 };
  s1 -> s1 [76, 65535] { R11336 += 1, R11272 += 1, R152 += 1 };
  s2 -> s1 [0, 69] { R11336 += 1, R11272 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R11336 += 1, R11272 += 1, R151 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R11336 += 1, R11272 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R11336 += 1, R11272 += 1, R151 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R11336 += 1, R11272 += 1, R151 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R11336 += 1, R11272 += 1, R152 += 1 };
  s2 -> s1 [71, 74] { R11336 += 1, R11272 += 1, R152 += 1 };
  s2 -> s2 [71, 65535] { R11336 += 1, R11272 += 1, R151 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R11336 += 1, R11272 += 1, R152 += 1 };
  s2 -> s1 [76, 65535] { R11336 += 1, R11272 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R11336 += 1, R11272 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R11336 += 1, R11272 += 1, R151 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R11336 += 1, R11271 += 1, R11272 += 1 };
  s3 -> s4 [70, 70] { R11336 += 1, R11272 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R11336 += 1, R11272 += 1, R151 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R11336 += 1, R11272 += 1, R151 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R11336 += 1, R11272 += 1, R152 += 1 };
  s3 -> s1 [71, 74] { R11336 += 1, R11272 += 1, R152 += 1 };
  s3 -> s2 [71, 65535] { R11336 += 1, R11272 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R11336 += 1, R11272 += 1, R152 += 1 };
  s3 -> s1 [76, 65535] { R11336 += 1, R11272 += 1, R152 += 1 };
  s6 -> s7 [0, 74] { R11336 += 1, R11272 += 1, R152 += 1 };
  s6 -> s6 [0, 65535] { R11336 += 1, R11272 += 1, R151 += 1, R152 += 1 };
  s6 -> s10 [75, 75] { R11336 += 1, R11272 += 1, R152 += 1 };
  s6 -> s7 [76, 65535] { R11336 += 1, R11272 += 1, R152 += 1 };
  s7 -> s7 [0, 74] { R11336 += 1, R11272 += 1, R152 += 1 };
  s7 -> s10 [75, 75] { R11336 += 1, R11272 += 1, R152 += 1 };
  s7 -> s7 [76, 65535] { R11336 += 1, R11272 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R11336 += 1, R11272 += 1, R152 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R11336 += 1 };
  s8 -> s10 [70, 70] { R11336 += 1, R11272 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R11336 += 1, R11272 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R11336 += 1, R11272 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R11336 += 1, R11272 += 1, R152 += 1 };
  s10 -> s12 [0, 65535] { R11336 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R11336 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R11336 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R11338 += 1, R11274 += 1, R155 += 1, R156 += 1 };
  s0 -> s2 [0, 65535] { R11338 += 1, R11273 += 1, R11274 += 1 };
  s0 -> s0 [0, 65535] { R11337 += 1, R11338 += 1 };
  s0 -> s3 [70, 70] { R11338 += 1, R11274 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R11338 += 1, R11274 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R11338 += 1, R11274 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R11338 += 1, R11274 += 1, R155 += 1, R156 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R11338 += 1 };
  s1 -> s3 [70, 70] { R11338 += 1, R11274 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R11338 += 1, R11274 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R11338 += 1, R11274 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R11338 += 1, R11274 += 1, R155 += 1, R156 += 1 };
  s2 -> s2 [0, 65535] { R11338 += 1, R11273 += 1, R11274 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R11338 += 1, R11274 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R11338 += 1, R11274 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R11338 += 1, R11274 += 1, R155 += 1, R156 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R11338 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R11338 += 1, R11274 += 1, R155 += 1, R156 += 1 };
  s4 -> s6 [0, 65535] { R11338 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11338 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R11340 += 1, R11276 += 1, R161 += 1, R162 += 1 };
  s0 -> s0 [0, 65535] { R11339 += 1, R11340 += 1 };
  s0 -> s2 [0, 65535] { R11340 += 1, R11275 += 1, R11276 += 1 };
  s0 -> s3 [70, 70] { R11340 += 1, R11276 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R11340 += 1, R11276 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R11340 += 1, R11276 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R11340 += 1, R11276 += 1, R161 += 1, R162 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R11340 += 1 };
  s1 -> s3 [70, 70] { R11340 += 1, R11276 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R11340 += 1, R11276 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R11340 += 1, R11276 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R11340 += 1, R11276 += 1, R161 += 1, R162 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R11340 += 1, R11275 += 1, R11276 += 1 };
  s2 -> s3 [70, 70] { R11340 += 1, R11276 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R11340 += 1, R11276 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R11340 += 1, R11276 += 1, R161 += 1, R162 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R11340 += 1, R11276 += 1, R161 += 1, R162 += 1 };
  s3 -> s6 [0, 65535] { R11340 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R11340 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11340 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R11342 += 1, R11278 += 1, R167 += 1, R168 += 1 };
  s0 -> s2 [0, 65535] { R11342 += 1, R11277 += 1, R11278 += 1 };
  s0 -> s0 [0, 65535] { R11341 += 1, R11342 += 1 };
  s0 -> s3 [70, 70] { R11342 += 1, R11278 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R11342 += 1, R11278 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R11342 += 1, R11278 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R11342 += 1, R11278 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 65535] { R11342 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R11342 += 1, R11278 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R11342 += 1, R11278 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R11342 += 1, R11278 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R11342 += 1, R11278 += 1, R167 += 1, R168 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R11342 += 1, R11277 += 1, R11278 += 1 };
  s2 -> s3 [70, 70] { R11342 += 1, R11278 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R11342 += 1, R11278 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R11342 += 1, R11278 += 1, R167 += 1, R168 += 1 };
  s3 -> s3 [0, 65535] { R11342 += 1, R11278 += 1, R167 += 1, R168 += 1 };
  s3 -> s6 [0, 65535] { R11342 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R11342 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11342 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R11344 += 1, R11280 += 1, R175 += 1, R176 += 1 };
  s0 -> s2 [0, 69] { R11344 += 1, R11280 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s3 [0, 69] { R11344 += 1, R11280 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s0 [0, 65535] { R11343 += 1, R11344 += 1 };
  s0 -> s4 [0, 65535] { R11344 += 1, R11279 += 1, R11280 += 1 };
  s0 -> s5 [70, 70] { R11344 += 1, R11280 += 1, R175 += 1, R176 += 1 };
  s0 -> s6 [70, 70] { R11344 += 1, R11280 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s7 [70, 70] { R11344 += 1, R11280 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s8 [70, 70] { R11344 += 1, R11280 += 1, R175 += 1, R176 += 1 };
  s0 -> s9 [70, 70] { R11344 += 1, R11280 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s10 [70, 70] { R11344 += 1, R11280 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s1 [71, 65535] { R11344 += 1, R11280 += 1, R175 += 1, R176 += 1 };
  s0 -> s2 [71, 65535] { R11344 += 1, R11280 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s3 [71, 65535] { R11344 += 1, R11280 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s1 [0, 69] { R11344 += 1, R11280 += 1, R175 += 1, R176 += 1 };
  s1 -> s2 [0, 69] { R11344 += 1, R11280 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s3 [0, 69] { R11344 += 1, R11280 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s5 [70, 70] { R11344 += 1, R11280 += 1, R175 += 1, R176 += 1 };
  s1 -> s6 [70, 70] { R11344 += 1, R11280 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s7 [70, 70] { R11344 += 1, R11280 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s8 [70, 70] { R11344 += 1, R11280 += 1, R175 += 1, R176 += 1 };
  s1 -> s9 [70, 70] { R11344 += 1, R11280 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s10 [70, 70] { R11344 += 1, R11280 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s1 [71, 65535] { R11344 += 1, R11280 += 1, R175 += 1, R176 += 1 };
  s1 -> s2 [71, 65535] { R11344 += 1, R11280 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s3 [71, 65535] { R11344 += 1, R11280 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s17 [0, 69] { R11344 += 1, R11280 += 1, R176 += 1 };
  s2 -> s15 [0, 69] { R11344 += 1, R11280 += 1 };
  s2 -> s2 [0, 69] { R11344 += 1, R11280 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s11 [70, 70] { R11344 += 1, R11280 += 1, R176 += 1 };
  s2 -> s12 [70, 70] { R11344 += 1, R11280 += 1 };
  s2 -> s16 [70, 70] { R11344 += 1, R11280 += 1 };
  s2 -> s18 [70, 70] { R11344 += 1, R11280 += 1, R176 += 1 };
  s2 -> s9 [70, 70] { R11344 += 1, R11280 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s10 [70, 70] { R11344 += 1, R11280 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s17 [71, 65535] { R11344 += 1, R11280 += 1, R176 += 1 };
  s2 -> s15 [71, 65535] { R11344 += 1, R11280 += 1 };
  s2 -> s2 [71, 65535] { R11344 += 1, R11280 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s15 [0, 69] { R11344 += 1, R11280 += 1 };
  s3 -> s2 [0, 69] { R11344 += 1, R11280 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [0, 69] { R11344 += 1, R11280 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s6 [70, 70] { R11344 += 1, R11280 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s12 [70, 70] { R11344 += 1, R11280 += 1 };
  s3 -> s16 [70, 70] { R11344 += 1, R11280 += 1 };
  s3 -> s7 [70, 70] { R11344 += 1, R11280 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s9 [70, 70] { R11344 += 1, R11280 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s10 [70, 70] { R11344 += 1, R11280 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s15 [71, 65535] { R11344 += 1, R11280 += 1 };
  s3 -> s2 [71, 65535] { R11344 += 1, R11280 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [71, 65535] { R11344 += 1, R11280 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s1 [0, 69] { R11344 += 1, R11280 += 1, R175 += 1, R176 += 1 };
  s4 -> s2 [0, 69] { R11344 += 1, R11280 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s3 [0, 69] { R11344 += 1, R11280 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s4 [0, 65535] { R11344 += 1, R11279 += 1, R11280 += 1 };
  s4 -> s5 [70, 70] { R11344 += 1, R11280 += 1, R175 += 1, R176 += 1 };
  s4 -> s6 [70, 70] { R11344 += 1, R11280 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s7 [70, 70] { R11344 += 1, R11280 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s8 [70, 70] { R11344 += 1, R11280 += 1, R175 += 1, R176 += 1 };
  s4 -> s9 [70, 70] { R11344 += 1, R11280 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s10 [70, 70] { R11344 += 1, R11280 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s1 [71, 65535] { R11344 += 1, R11280 += 1, R175 += 1, R176 += 1 };
  s4 -> s2 [71, 65535] { R11344 += 1, R11280 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s3 [71, 65535] { R11344 += 1, R11280 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s5 -> s5 [0, 65535] { R11344 += 1, R11280 += 1, R175 += 1, R176 += 1 };
  s5 -> s7 [0, 65535] { R11344 += 1, R11280 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s5 -> s10 [0, 65535] { R11344 += 1, R11280 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s7 -> s12 [0, 65535] { R11344 += 1, R11280 += 1 };
  s7 -> s7 [0, 65535] { R11344 += 1, R11280 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s7 -> s10 [0, 65535] { R11344 += 1, R11280 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s10 -> s11 [0, 65535] { R11344 += 1, R11280 += 1, R176 += 1 };
  s10 -> s12 [0, 65535] { R11344 += 1, R11280 += 1 };
  s10 -> s10 [0, 65535] { R11344 += 1, R11280 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s11 -> s11 [0, 65535] { R11344 += 1, R11280 += 1, R176 += 1 };
  s11 -> s12 [0, 65535] { R11344 += 1, R11280 += 1 };
  s12 -> s12 [0, 65535] { R11344 += 1, R11280 += 1 };
  s12 -> s13 [0, 65535];
  s12 -> s14 [0, 65535] { R11344 += 1 };
  s13 -> s13 [0, 65535];
  s14 -> s13 [0, 65535];
  s14 -> s14 [0, 65535] { R11344 += 1 };
  s15 -> s15 [0, 69] { R11344 += 1, R11280 += 1 };
  s15 -> s15 [0, 65535] { R11344 += 1 };
  s15 -> s13 [0, 65535];
  s15 -> s12 [70, 70] { R11344 += 1, R11280 += 1 };
  s15 -> s16 [70, 70] { R11344 += 1, R11280 += 1 };
  s15 -> s15 [71, 65535] { R11344 += 1, R11280 += 1 };
  s16 -> s16 [0, 65535] { R11344 += 1 };
  s16 -> s13 [0, 65535];
  s17 -> s17 [0, 69] { R11344 += 1, R11280 += 1, R176 += 1 };
  s17 -> s15 [0, 69] { R11344 += 1, R11280 += 1 };
  s17 -> s11 [70, 70] { R11344 += 1, R11280 += 1, R176 += 1 };
  s17 -> s12 [70, 70] { R11344 += 1, R11280 += 1 };
  s17 -> s16 [70, 70] { R11344 += 1, R11280 += 1 };
  s17 -> s18 [70, 70] { R11344 += 1, R11280 += 1, R176 += 1 };
  s17 -> s17 [71, 65535] { R11344 += 1, R11280 += 1, R176 += 1 };
  s17 -> s15 [71, 65535] { R11344 += 1, R11280 += 1 };
  accepting s16, s12, s13, s14, s15;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R11346 += 1, R11282 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s2 [0, 69] { R11346 += 1, R11282 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s3 [0, 69] { R11346 += 1, R11282 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s4 [0, 65535] { R11346 += 1, R11281 += 1, R11282 += 1 };
  s0 -> s0 [0, 65535] { R11345 += 1, R11346 += 1 };
  s0 -> s5 [70, 70] { R11346 += 1, R11282 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s6 [70, 70] { R11346 += 1, R11282 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s7 [70, 70] { R11346 += 1, R11282 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s8 [70, 70] { R11346 += 1, R11282 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s9 [70, 70] { R11346 += 1, R11282 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s10 [70, 70] { R11346 += 1, R11282 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s3 [71, 75] { R11346 += 1, R11282 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s1 [71, 65535] { R11346 += 1, R11282 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s2 [71, 65535] { R11346 += 1, R11282 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s3 [78, 65535] { R11346 += 1, R11282 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s1 [0, 69] { R11346 += 1, R11282 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s1 -> s3 [0, 69] { R11346 += 1, R11282 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s6 [70, 70] { R11346 += 1, R11282 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s8 [70, 70] { R11346 += 1, R11282 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s1 -> s9 [70, 70] { R11346 += 1, R11282 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s10 [70, 70] { R11346 += 1, R11282 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s1 -> s3 [71, 75] { R11346 += 1, R11282 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s1 [71, 65535] { R11346 += 1, R11282 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s1 -> s3 [78, 65535] { R11346 += 1, R11282 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s1 [0, 69] { R11346 += 1, R11282 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s2 [0, 69] { R11346 += 1, R11282 += 1, R6563 += 1, R6564 += 1 };
  s2 -> s3 [0, 69] { R11346 += 1, R11282 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s5 [70, 70] { R11346 += 1, R11282 += 1, R6563 += 1, R6564 += 1 };
  s2 -> s6 [70, 70] { R11346 += 1, R11282 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s7 [70, 70] { R11346 += 1, R11282 += 1, R6563 += 1, R6564 += 1 };
  s2 -> s8 [70, 70] { R11346 += 1, R11282 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s9 [70, 70] { R11346 += 1, R11282 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s10 [70, 70] { R11346 += 1, R11282 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s3 [71, 75] { R11346 += 1, R11282 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s1 [71, 65535] { R11346 += 1, R11282 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s2 [71, 65535] { R11346 += 1, R11282 += 1, R6563 += 1, R6564 += 1 };
  s2 -> s3 [78, 65535] { R11346 += 1, R11282 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s3 [0, 69] { R11346 += 1, R11282 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s12 [0, 65535];
  s3 -> s3 [0, 65535] { R11346 += 1 };
  s3 -> s6 [70, 70] { R11346 += 1, R11282 += 1, R6564 += 1 };
  s3 -> s9 [70, 70] { R11346 += 1, R11282 += 1, R6564 += 1 };
  s3 -> s3 [71, 75] { R11346 += 1, R11282 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s3 [71, 65535] { R11346 += 1, R11282 += 1, R6564 += 1 };
  s3 -> s3 [78, 65535] { R11346 += 1, R11282 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s1 [0, 69] { R11346 += 1, R11282 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s2 [0, 69] { R11346 += 1, R11282 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s3 [0, 69] { R11346 += 1, R11282 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s4 [0, 65535] { R11346 += 1, R11281 += 1, R11282 += 1 };
  s4 -> s5 [70, 70] { R11346 += 1, R11282 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s6 [70, 70] { R11346 += 1, R11282 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s7 [70, 70] { R11346 += 1, R11282 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s8 [70, 70] { R11346 += 1, R11282 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s9 [70, 70] { R11346 += 1, R11282 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s10 [70, 70] { R11346 += 1, R11282 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s3 [71, 75] { R11346 += 1, R11282 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s1 [71, 65535] { R11346 += 1, R11282 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s2 [71, 65535] { R11346 += 1, R11282 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s3 [78, 65535] { R11346 += 1, R11282 += 1, R6564 += 1, R6566 += 1 };
  s6 -> s6 [0, 65535] { R11346 += 1 };
  s6 -> s12 [0, 65535];
  s7 -> s9 [0, 75] { R11346 += 1, R11282 += 1, R6564 += 1, R6566 += 1 };
  s7 -> s7 [0, 65535] { R11346 += 1, R11282 += 1, R6563 += 1, R6564 += 1 };
  s7 -> s8 [0, 65535] { R11346 += 1, R11282 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s7 -> s9 [78, 65535] { R11346 += 1, R11282 += 1, R6564 += 1, R6566 += 1 };
  s8 -> s9 [0, 75] { R11346 += 1, R11282 += 1, R6564 += 1, R6566 += 1 };
  s8 -> s8 [0, 65535] { R11346 += 1, R11282 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s8 -> s9 [78, 65535] { R11346 += 1, R11282 += 1, R6564 += 1, R6566 += 1 };
  s9 -> s9 [0, 75] { R11346 += 1, R11282 += 1, R6564 += 1, R6566 += 1 };
  s9 -> s11 [0, 65535] { R11346 += 1 };
  s9 -> s12 [0, 65535];
  s9 -> s9 [0, 65535] { R11346 += 1, R11282 += 1, R6564 += 1 };
  s9 -> s9 [78, 65535] { R11346 += 1, R11282 += 1, R6564 += 1, R6566 += 1 };
  s11 -> s11 [0, 65535] { R11346 += 1 };
  s11 -> s12 [0, 65535];
  s12 -> s12 [0, 65535];
  accepting s3, s12, s9, s6, s11;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R11348 += 1, R11284 += 1, R10393 += 1, R10394 += 1 };
  s0 -> s0 [0, 65535] { R11347 += 1, R11348 += 1 };
  s0 -> s2 [0, 65535] { R11348 += 1, R11283 += 1, R11284 += 1 };
  s0 -> s3 [70, 70] { R11348 += 1, R11284 += 1, R10393 += 1, R10394 += 1 };
  s0 -> s4 [70, 70] { R11348 += 1, R11284 += 1, R10393 += 1, R10394 += 1 };
  s0 -> s1 [71, 65535] { R11348 += 1, R11284 += 1, R10393 += 1, R10394 += 1 };
  s1 -> s1 [0, 69] { R11348 += 1, R11284 += 1, R10393 += 1, R10394 += 1 };
  s1 -> s1 [0, 65535] { R11348 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R11348 += 1, R11284 += 1, R10393 += 1, R10394 += 1 };
  s1 -> s4 [70, 70] { R11348 += 1, R11284 += 1, R10393 += 1, R10394 += 1 };
  s1 -> s1 [71, 65535] { R11348 += 1, R11284 += 1, R10393 += 1, R10394 += 1 };
  s2 -> s1 [0, 69] { R11348 += 1, R11284 += 1, R10393 += 1, R10394 += 1 };
  s2 -> s2 [0, 65535] { R11348 += 1, R11283 += 1, R11284 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R11348 += 1, R11284 += 1, R10393 += 1, R10394 += 1 };
  s2 -> s4 [70, 70] { R11348 += 1, R11284 += 1, R10393 += 1, R10394 += 1 };
  s2 -> s1 [71, 65535] { R11348 += 1, R11284 += 1, R10393 += 1, R10394 += 1 };
  s3 -> s6 [0, 65535] { R11348 += 1 };
  s3 -> s3 [0, 65535] { R11348 += 1, R11284 += 1, R10393 += 1, R10394 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R11348 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11348 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R11350 += 1, R11286 += 1, R11193 += 1, R11194 += 1 };
  s0 -> s2 [0, 69] { R11350 += 1, R11286 += 1, R11194 += 1, R11195 += 1, R11196 += 1 };
  s0 -> s3 [0, 65535] { R11350 += 1, R11285 += 1, R11286 += 1 };
  s0 -> s0 [0, 65535] { R11349 += 1, R11350 += 1 };
  s0 -> s4 [70, 70] { R11350 += 1, R11286 += 1, R11194 += 1, R11195 += 1, R11196 += 1 };
  s0 -> s5 [70, 70] { R11350 += 1, R11286 += 1, R11193 += 1, R11194 += 1 };
  s0 -> s6 [70, 70] { R11350 += 1, R11286 += 1, R11193 += 1, R11194 += 1 };
  s0 -> s7 [70, 70] { R11350 += 1, R11286 += 1, R11194 += 1, R11195 += 1, R11196 += 1 };
  s0 -> s1 [71, 65535] { R11350 += 1, R11286 += 1, R11193 += 1, R11194 += 1 };
  s0 -> s2 [71, 65535] { R11350 += 1, R11286 += 1, R11194 += 1, R11195 += 1, R11196 += 1 };
  s1 -> s1 [0, 69] { R11350 += 1, R11286 += 1, R11193 += 1, R11194 += 1 };
  s1 -> s2 [0, 69] { R11350 += 1, R11286 += 1, R11194 += 1, R11195 += 1, R11196 += 1 };
  s1 -> s4 [70, 70] { R11350 += 1, R11286 += 1, R11194 += 1, R11195 += 1, R11196 += 1 };
  s1 -> s5 [70, 70] { R11350 += 1, R11286 += 1, R11193 += 1, R11194 += 1 };
  s1 -> s6 [70, 70] { R11350 += 1, R11286 += 1, R11193 += 1, R11194 += 1 };
  s1 -> s7 [70, 70] { R11350 += 1, R11286 += 1, R11194 += 1, R11195 += 1, R11196 += 1 };
  s1 -> s1 [71, 65535] { R11350 += 1, R11286 += 1, R11193 += 1, R11194 += 1 };
  s1 -> s2 [71, 65535] { R11350 += 1, R11286 += 1, R11194 += 1, R11195 += 1, R11196 += 1 };
  s2 -> s2 [0, 69] { R11350 += 1, R11286 += 1, R11194 += 1, R11195 += 1, R11196 += 1 };
  s2 -> s2 [0, 65535] { R11350 += 1 };
  s2 -> s9 [0, 65535];
  s2 -> s4 [70, 70] { R11350 += 1, R11286 += 1, R11194 += 1, R11195 += 1, R11196 += 1 };
  s2 -> s7 [70, 70] { R11350 += 1, R11286 += 1, R11194 += 1, R11195 += 1, R11196 += 1 };
  s2 -> s2 [71, 65535] { R11350 += 1, R11286 += 1, R11194 += 1, R11195 += 1, R11196 += 1 };
  s3 -> s1 [0, 69] { R11350 += 1, R11286 += 1, R11193 += 1, R11194 += 1 };
  s3 -> s2 [0, 69] { R11350 += 1, R11286 += 1, R11194 += 1, R11195 += 1, R11196 += 1 };
  s3 -> s3 [0, 65535] { R11350 += 1, R11285 += 1, R11286 += 1 };
  s3 -> s4 [70, 70] { R11350 += 1, R11286 += 1, R11194 += 1, R11195 += 1, R11196 += 1 };
  s3 -> s5 [70, 70] { R11350 += 1, R11286 += 1, R11193 += 1, R11194 += 1 };
  s3 -> s6 [70, 70] { R11350 += 1, R11286 += 1, R11193 += 1, R11194 += 1 };
  s3 -> s7 [70, 70] { R11350 += 1, R11286 += 1, R11194 += 1, R11195 += 1, R11196 += 1 };
  s3 -> s1 [71, 65535] { R11350 += 1, R11286 += 1, R11193 += 1, R11194 += 1 };
  s3 -> s2 [71, 65535] { R11350 += 1, R11286 += 1, R11194 += 1, R11195 += 1, R11196 += 1 };
  s4 -> s4 [0, 65535] { R11350 += 1 };
  s4 -> s9 [0, 65535];
  s6 -> s6 [0, 65535] { R11350 += 1, R11286 += 1, R11193 += 1, R11194 += 1 };
  s6 -> s7 [0, 65535] { R11350 += 1, R11286 += 1, R11194 += 1, R11195 += 1, R11196 += 1 };
  s7 -> s8 [0, 65535] { R11350 += 1 };
  s7 -> s7 [0, 65535] { R11350 += 1, R11286 += 1, R11194 += 1, R11195 += 1, R11196 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R11350 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  accepting s4, s8, s2, s9, s7;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R11230 && R3 = R11350 && R25 - R11350 = -1 && R26 = R11350 && R27 - R11350 = -1 && R28 = R11350 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R11198 + -1*R11194 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R11198 + -1*R11194 - R130 = 0 && R129 + R11197 + R11193 = 0 && R131 + R11199 + R11195 = 0 && R132 + R11200 + R11196 = 0 && R11229 = 0 && R11261 = 0 && R11262 = 0 && R11271 = 0 && R11272 = 0 && R11279 = 0 && R11280 = 0 && R11281 = 0 && R11282 = 0 && R11285 = 0 && R11286 = 0 && R11287 = 0 && R11288 = R11350 && R11289 = 0 && R11290 = R11350 && R11291 = 0 && R11292 = R11350 && R11293 = 0 && R11294 = R11350 && R11295 = 0 && R11296 = R11350 && R11297 = 0 && R11298 = R11350 && R11299 = 0 && R11300 = R11350 && R11301 = 0 && R11302 = R11350 && R11303 = 0 && R11304 = R11350 && R11305 = 0 && R11306 = R11350 && R11307 = 0 && R11308 = R11350 && R11309 = 0 && R11310 = R11350 && R11311 = 0 && R11312 = R11350 && R11313 = 0 && R11314 = R11350 && R11315 = 0 && R11316 = R11350 && R11317 = 0 && R11318 = R11350 && R11319 = 0 && R11320 = R11350 && R11321 = 0 && R11322 = R11350 && R11323 = 0 && R11324 = R11350 && R11325 = 0 && R11326 = R11350 && R11327 = 0 && R11328 = R11350 && R11329 = 0 && R11330 = R11350 && R11331 = 0 && R11332 = R11350 && R11333 = 0 && R11334 = R11350 && R11335 = 0 && R11336 = R11350 && R11337 = 0 && R11338 = R11350 && R11339 = 0 && R11340 = R11350 && R11341 = 0 && R11342 = R11350 && R11343 = 0 && R11344 = R11350 && R11345 = 0 && R11346 = R11350 && R11347 = 0 && R11348 = R11350 && R11349 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R11198 + -1*R11194 - R130 < 1 && -1 < R11230 && 0 < R11350 && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R11198 + -1*R11194 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R6569 + R6565 = 0 && R114 + R6570 + R6566 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R11198 + -1*R11194 - R130 = 0 || R130 + R11198 + R11194 < 1) && (R81 + R158 + R155 = 0 || R130 + R11198 + R11194 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R11198 + -1*R11194 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R11198 + R11194 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R11198 + -1*R11194 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R11198 + R11194 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R11198 + -1*R11194 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R11198 + R11194 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R6567 + R6563 != 0 || R112 + R6568 + R6564 + -1*R11198 + -1*R11194 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R11198 + R11194 = 0)) && (R113 + R6569 + R6565 != 0 || R83 + R160 + R157 + -1*R6570 + -1*R6566 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R10398 + R10393 != 0 || R120 + R10399 + R10394 + -1*R11198 + -1*R11194 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R11198 + R11194 = 0)) && (R11201 != 0 || R11202 = R11230 || (R22 = 0 && R11230 = 0)) && (R11203 != 0 || R11204 = R11230 || (R22 = 0 && R11230 = 0)) && (R11205 != 0 || R11206 = R11230 || (R22 = 0 && R11230 = 0)) && (R11207 != 0 || R11208 = R11230 || (R22 = 0 && R11230 = 0)) && (R11209 != 0 || R11210 = R11230 || (R22 = 0 && R11230 = 0)) && (R11211 != 0 || R11212 = R11230 || (R22 = 0 && R11230 = 0)) && (R11213 != 0 || R11214 = R11230 || (R22 = 0 && R11230 = 0)) && (R11215 != 0 || R11216 = R11230 || (R22 = 0 && R11230 = 0)) && (R11217 != 0 || R11218 = R11230 || (R22 = 0 && R11230 = 0)) && (R11219 != 0 || R11220 = R11230 || (R22 = 0 && R11230 = 0)) && (R11221 != 0 || R11222 = R11230 || (R22 = 0 && R11230 = 0)) && (R11223 != 0 || R11224 = R11230 || (R22 = 0 && R11230 = 0)) && (R11225 != 0 || R11226 = R11230 || (R22 = 0 && R11230 = 0)) && (R11227 != 0 || R11228 = R11230 || (R22 = 0 && R11230 = 0)) && (R23 = 0 || (R11259 = 0 && R11260 = 0)) && (R23 = 0 || (R11263 = 0 && R11264 = 0)) && (R23 = 0 || (R11265 = 0 && R11266 = 0)) && (R23 = 0 || (R11267 = 0 && R11268 = 0)) && (R23 = 0 || (R11269 = 0 && R11270 = 0)) && (R23 = 0 || (R11273 = 0 && R11274 = 0)) && (R23 = 0 || (R11275 = 0 && R11276 = 0)) && (R23 = 0 || (R11277 = 0 && R11278 = 0)) && (R23 = 0 || (R11283 = 0 && R11284 = 0)) && (R24 = 0 || (R11231 = 0 && R11232 = 0)) && (R24 = 0 || (R11233 = 0 && R11234 = 0)) && (R24 = 0 || (R11235 = 0 && R11236 = 0)) && (R24 = 0 || (R11237 = 0 && R11238 = 0)) && (R24 = 0 || (R11239 = 0 && R11240 = 0)) && (R24 = 0 || (R11241 = 0 && R11242 = 0)) && (R24 = 0 || (R11243 = 0 && R11244 = 0)) && (R24 = 0 || (R11245 = 0 && R11246 = 0)) && (R24 = 0 || (R11247 = 0 && R11248 = 0)) && (R24 = 0 || (R11249 = 0 && R11250 = 0)) && (R24 = 0 || (R11251 = 0 && R11252 = 0)) && (R24 = 0 || (R11253 = 0 && R11254 = 0)) && (R24 = 0 || (R11255 = 0 && R11256 = 0)) && (R24 = 0 || (R11257 = 0 && R11258 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R11198 + R11194 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R11198 + R11194 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R11198 + R11194 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R6567 + R6563 = 0 || (R83 + R160 + R157 = 0 && R130 + R11198 + R11194 = 0)) && (R113 + R6569 + R6565 = 0 || R83 + R160 + R157 < 1) && (R119 + R10398 + R10393 = 0 || (R83 + R160 + R157 = 0 && R130 + R11198 + R11194 = 0)) && (R123 + R10402 + R10397 = 0 || (R121 + R10400 + R10395 = 0 && R122 + R10401 + R10396 = 0)) && (R11201 = 0 || (R22 = 0 && R11230 = 0)) && (R11203 = 0 || (R22 = 0 && R11230 = 0)) && (R11205 = 0 || (R22 = 0 && R11230 = 0)) && (R11207 = 0 || (R22 = 0 && R11230 = 0)) && (R11209 = 0 || (R22 = 0 && R11230 = 0)) && (R11211 = 0 || (R22 = 0 && R11230 = 0)) && (R11213 = 0 || (R22 = 0 && R11230 = 0)) && (R11215 = 0 || (R22 = 0 && R11230 = 0)) && (R11217 = 0 || (R22 = 0 && R11230 = 0)) && (R11219 = 0 || (R22 = 0 && R11230 = 0)) && (R11221 = 0 || (R22 = 0 && R11230 = 0)) && (R11223 = 0 || (R22 = 0 && R11230 = 0)) && (R11225 = 0 || (R22 = 0 && R11230 = 0)) && (R11227 = 0 || (R22 = 0 && R11230 = 0));
// End of Parikh automata intersection problem
