// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R2, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R5, R63, R65, R6563, R6564, R6565, R6566, R6567, R6568, R6569, R6570, R67, R68, R69, R73, R74, R77, R78, R7845, R7846, R7847, R7848, R7849, R7850, R7851, R7852, R7853, R7854, R81, R82, R83, R87, R88, R8803, R8804, R8805, R8806, R8807, R8808, R8809, R8810, R8811, R8812, R8813, R8814, R8815, R8816, R8817, R8818, R8819, R8820, R8821, R8822, R8823, R8824, R8825, R8826, R8827, R8828, R8829, R8830, R8831, R8832, R8833, R8834, R8835, R8836, R8837, R8838, R8839, R8840, R8841, R8842, R8843, R8844, R8845, R8846, R8847, R8848, R8849, R8850, R8851, R8852, R8853, R8854, R8855, R8856, R8857, R8858, R8859, R8860, R8861, R8862, R8863, R8864, R8865, R8866, R8867, R8868, R8869, R8870, R8871, R8872, R8873, R8874, R8875, R8876, R8877, R8878, R8879, R8880, R8881, R8882, R8883, R8884, R8885, R8886, R8887, R8888, R8889, R8890, R8891, R8892, R8893, R8894, R8895, R8896, R8897, R8898, R8899, R89, R8900, R8901, R8902, R8903, R8904, R8905, R8906, R8907, R8908, R8909, R8910, R8911, R8912, R8913, R8914, R8915, R8916, R8917, R8918, R8919, R8920, R8921, R8922, R8923, R8924, R8925, R8926, R8927, R8928, R8929, R8930, R8931, R8932, R8933, R8934, R8935, R8936, R8937, R8938, R8939, R8940, R8941, R8942, R8943, R8944, R8945, R8946, R8947, R8948, R8949, R8950, R8951, R8952, R8953, R8954, R8955, R8956, R8957, R8958, R8959, R8960, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R30 += 1 };
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R8841 += 1, R8842 += 1 };
  s0 -> s1 [0, 65535] { R8842 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R8842 += 1, R24 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R8844 += 1 };
  s0 -> s0 [0, 65535] { R8843 += 1, R8844 += 1 };
  s0 -> s2 [70, 70] { R8844 += 1 };
  s0 -> s3 [70, 70] { R8844 += 1 };
  s0 -> s1 [76, 65535] { R8844 += 1 };
  s1 -> s1 [0, 69] { R8844 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R8844 += 1 };
  s1 -> s3 [70, 70] { R8844 += 1 };
  s1 -> s1 [76, 65535] { R8844 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R8844 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R8844 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R8846 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R8845 += 1, R8846 += 1 };
  s0 -> s2 [70, 70] { R8846 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R8846 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R8846 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R8846 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R8846 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R8846 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R8846 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R8846 += 1, R63 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R8848 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R8847 += 1, R8848 += 1 };
  s0 -> s2 [70, 70] { R8848 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R8848 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R8848 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R8848 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R8848 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R8848 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R8848 += 1, R65 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R8848 += 1, R65 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R8850 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R8849 += 1, R8850 += 1 };
  s0 -> s2 [70, 70] { R8850 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R8850 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R8850 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R8850 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R8850 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R8850 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R8850 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R8850 += 1, R67 += 1, R68 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R8852 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R8851 += 1, R8852 += 1 };
  s0 -> s2 [70, 70] { R8852 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R8852 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R8852 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R8852 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R8852 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R8852 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R8852 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R8852 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R8854 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R8853 += 1, R8854 += 1 };
  s0 -> s2 [70, 70] { R8854 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R8854 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R8854 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R8854 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R8854 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R8854 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R8854 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R8854 += 1, R77 += 1, R78 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R8856 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R8855 += 1, R8856 += 1 };
  s0 -> s2 [70, 70] { R8856 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R8856 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R8856 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R8856 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R8856 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R8856 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R8856 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535] { R8856 += 1, R81 += 1, R82 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R8858 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R8857 += 1, R8858 += 1 };
  s0 -> s2 [70, 70] { R8858 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R8858 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R8858 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R8858 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R8858 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R8858 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R8858 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535] { R8858 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R8860 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R8859 += 1, R8860 += 1 };
  s0 -> s2 [70, 70] { R8860 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R8860 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R8860 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R8860 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R8860 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R8860 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R8860 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535] { R8860 += 1, R93 += 1, R94 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R8862 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R8861 += 1, R8862 += 1 };
  s0 -> s2 [70, 70] { R8862 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R8862 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R8862 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R8862 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R8862 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R8862 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R8862 += 1, R101 += 1, R102 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R8862 += 1, R101 += 1, R102 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R8864 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R8863 += 1, R8864 += 1 };
  s0 -> s2 [70, 70] { R8864 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R8864 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R8864 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R8864 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R8864 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R8864 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R8864 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R8864 += 1, R111 += 1, R112 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R8866 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R8865 += 1, R8866 += 1 };
  s0 -> s2 [70, 70] { R8866 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R8866 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R8866 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R8866 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R8866 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R8866 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R8866 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R8866 += 1, R119 += 1, R120 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R8868 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R8867 += 1, R8868 += 1 };
  s0 -> s2 [70, 70] { R8868 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R8868 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R8868 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R8868 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R8868 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R8868 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R8868 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535] { R8868 += 1, R129 += 1, R130 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R8898 += 1 };
  s0 -> s0 [0, 65535] { R8897 += 1, R8898 += 1 };
  s0 -> s2 [70, 70] { R8898 += 1 };
  s0 -> s1 [71, 65535] { R8898 += 1 };
  s1 -> s1 [0, 69] { R8898 += 1 };
  s1 -> s2 [70, 70] { R8898 += 1 };
  s1 -> s1 [71, 65535] { R8898 += 1 };
  s2 -> s2 [0, 65535] { R8898 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R8900 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R8899 += 1, R8900 += 1 };
  s1 -> s1 [0, 65535] { R8900 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R8902 += 1 };
  s0 -> s0 [0, 65535] { R8901 += 1, R8902 += 1 };
  s0 -> s2 [0, 65535] { R8902 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R8902 += 1 };
  s0 -> s1 [71, 65535] { R8902 += 1 };
  s1 -> s1 [0, 69] { R8902 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R8902 += 1 };
  s1 -> s1 [71, 65535] { R8902 += 1 };
  s2 -> s1 [0, 69] { R8902 += 1 };
  s2 -> s2 [0, 65535] { R8902 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R8902 += 1 };
  s2 -> s1 [71, 65535] { R8902 += 1 };
  s3 -> s3 [0, 65535] { R8902 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R8904 += 1, R8812 += 1 };
  s0 -> s2 [0, 65535] { R8904 += 1, R8811 += 1, R8812 += 1 };
  s0 -> s0 [0, 65535] { R8903 += 1, R8904 += 1 };
  s0 -> s1 [71, 65535] { R8904 += 1, R8812 += 1 };
  s1 -> s1 [0, 69] { R8904 += 1, R8812 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R8904 += 1 };
  s1 -> s1 [71, 65535] { R8904 += 1, R8812 += 1 };
  s2 -> s1 [0, 69] { R8904 += 1, R8812 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R8904 += 1, R8811 += 1, R8812 += 1 };
  s2 -> s1 [71, 65535] { R8904 += 1, R8812 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R8906 += 1, R8814 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R8905 += 1, R8906 += 1 };
  s0 -> s2 [0, 65535] { R8906 += 1, R8813 += 1, R8814 += 1 };
  s1 -> s4 [0, 65535] { R8906 += 1 };
  s1 -> s1 [0, 65535] { R8906 += 1, R8814 += 1, R22 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R8906 += 1, R8814 += 1, R22 += 1 };
  s2 -> s2 [0, 65535] { R8906 += 1, R8813 += 1, R8814 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R8906 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R8908 += 1, R8816 += 1 };
  s0 -> s2 [0, 65535] { R8908 += 1, R8815 += 1, R8816 += 1 };
  s0 -> s0 [0, 65535] { R8907 += 1, R8908 += 1 };
  s0 -> s1 [75, 65535] { R8908 += 1, R8816 += 1 };
  s1 -> s1 [0, 70] { R8908 += 1, R8816 += 1 };
  s1 -> s1 [0, 65535] { R8908 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R8908 += 1, R8816 += 1 };
  s2 -> s1 [0, 70] { R8908 += 1, R8816 += 1 };
  s2 -> s2 [0, 65535] { R8908 += 1, R8815 += 1, R8816 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R8908 += 1, R8816 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R8910 += 1, R8817 += 1, R8818 += 1 };
  s0 -> s0 [0, 65535] { R8909 += 1, R8910 += 1 };
  s0 -> s2 [0, 65535] { R8910 += 1, R8818 += 1, R138 += 1 };
  s1 -> s1 [0, 65535] { R8910 += 1, R8817 += 1, R8818 += 1 };
  s1 -> s2 [0, 65535] { R8910 += 1, R8818 += 1, R138 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R8910 += 1, R8818 += 1, R138 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R8910 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R8910 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R8912 += 1, R8820 += 1 };
  s0 -> s2 [0, 65535] { R8912 += 1, R8820 += 1, R140 += 1 };
  s0 -> s0 [0, 65535] { R8911 += 1, R8912 += 1 };
  s0 -> s3 [0, 65535] { R8912 += 1, R8819 += 1, R8820 += 1 };
  s0 -> s1 [76, 65535] { R8912 += 1, R8820 += 1 };
  s1 -> s1 [0, 74] { R8912 += 1, R8820 += 1 };
  s1 -> s1 [0, 65535] { R8912 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [76, 65535] { R8912 += 1, R8820 += 1 };
  s2 -> s1 [0, 74] { R8912 += 1, R8820 += 1 };
  s2 -> s5 [0, 65535] { R8912 += 1 };
  s2 -> s2 [0, 65535] { R8912 += 1, R8820 += 1, R140 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [76, 65535] { R8912 += 1, R8820 += 1 };
  s3 -> s1 [0, 74] { R8912 += 1, R8820 += 1 };
  s3 -> s2 [0, 65535] { R8912 += 1, R8820 += 1, R140 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R8912 += 1, R8819 += 1, R8820 += 1 };
  s3 -> s1 [76, 65535] { R8912 += 1, R8820 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R8912 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R8913 += 1, R8914 += 1 };
  s0 -> s1 [0, 65535] { R8914 += 1, R8822 += 1, R144 += 1, R145 += 1 };
  s0 -> s2 [0, 65535] { R8914 += 1, R8822 += 1, R145 += 1, R146 += 1 };
  s0 -> s3 [0, 65535] { R8914 += 1, R8821 += 1, R8822 += 1 };
  s1 -> s5 [0, 65535] { R8914 += 1 };
  s1 -> s1 [0, 65535] { R8914 += 1, R8822 += 1, R144 += 1, R145 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R8914 += 1, R8822 += 1, R145 += 1, R146 += 1 };
  s2 -> s5 [0, 65535] { R8914 += 1 };
  s2 -> s6 [0, 65535] { R8914 += 1, R8822 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R8914 += 1, R8822 += 1, R145 += 1, R146 += 1 };
  s3 -> s1 [0, 65535] { R8914 += 1, R8822 += 1, R144 += 1, R145 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R8914 += 1, R8822 += 1, R145 += 1, R146 += 1 };
  s3 -> s3 [0, 65535] { R8914 += 1, R8821 += 1, R8822 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R8914 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R8914 += 1 };
  s6 -> s6 [0, 65535] { R8914 += 1, R8822 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R8916 += 1, R8824 += 1, R150 += 1 };
  s0 -> s2 [0, 65535] { R8916 += 1, R8824 += 1, R149 += 1, R150 += 1 };
  s0 -> s0 [0, 65535] { R8915 += 1, R8916 += 1 };
  s0 -> s3 [0, 65535] { R8916 += 1, R8823 += 1, R8824 += 1 };
  s0 -> s4 [75, 75] { R8916 += 1, R8824 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R8916 += 1, R8824 += 1, R150 += 1 };
  s0 -> s1 [79, 65535] { R8916 += 1, R8824 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R8916 += 1, R8824 += 1, R150 += 1 };
  s1 -> s1 [0, 65535] { R8916 += 1, R8824 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R8916 += 1 };
  s1 -> s4 [75, 75] { R8916 += 1, R8824 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R8916 += 1, R8824 += 1, R150 += 1 };
  s1 -> s1 [79, 65535] { R8916 += 1, R8824 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R8916 += 1, R8824 += 1, R150 += 1 };
  s2 -> s2 [0, 65535] { R8916 += 1, R8824 += 1, R149 += 1, R150 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R8916 += 1 };
  s2 -> s4 [75, 75] { R8916 += 1, R8824 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R8916 += 1, R8824 += 1, R150 += 1 };
  s2 -> s1 [79, 65535] { R8916 += 1, R8824 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R8916 += 1, R8824 += 1, R150 += 1 };
  s3 -> s2 [0, 65535] { R8916 += 1, R8824 += 1, R149 += 1, R150 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R8916 += 1, R8823 += 1, R8824 += 1 };
  s3 -> s4 [75, 75] { R8916 += 1, R8824 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R8916 += 1, R8824 += 1, R150 += 1 };
  s3 -> s1 [79, 65535] { R8916 += 1, R8824 += 1, R150 += 1 };
  s4 -> s4 [0, 65535] { R8916 += 1, R8824 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R8916 += 1 };
  s5 -> s5 [0, 75] { R8916 += 1, R8824 += 1, R150 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R8916 += 1 };
  s5 -> s5 [0, 65535] { R8916 += 1, R8824 += 1 };
  s5 -> s5 [79, 65535] { R8916 += 1, R8824 += 1, R150 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R8916 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R8918 += 1, R8826 += 1, R154 += 1 };
  s0 -> s0 [0, 65535] { R8917 += 1, R8918 += 1 };
  s0 -> s2 [0, 65535] { R8918 += 1, R8825 += 1, R8826 += 1 };
  s0 -> s3 [0, 65535] { R8918 += 1, R8826 += 1 };
  s1 -> s1 [0, 65535] { R8918 += 1, R8826 += 1, R154 += 1 };
  s1 -> s4 [0, 65535] { R8918 += 1 };
  s1 -> s3 [0, 65535] { R8918 += 1, R8826 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R8918 += 1, R8826 += 1, R154 += 1 };
  s2 -> s2 [0, 65535] { R8918 += 1, R8825 += 1, R8826 += 1 };
  s2 -> s3 [0, 65535] { R8918 += 1, R8826 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R8918 += 1 };
  s3 -> s3 [0, 65535] { R8918 += 1, R8826 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R8918 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R8920 += 1, R8827 += 1, R8828 += 1 };
  s0 -> s2 [0, 65535] { R8920 += 1, R8828 += 1, R159 += 1, R160 += 1 };
  s0 -> s3 [0, 65535] { R8920 += 1, R8828 += 1, R158 += 1, R159 += 1 };
  s0 -> s0 [0, 65535] { R8919 += 1, R8920 += 1 };
  s1 -> s1 [0, 65535] { R8920 += 1, R8827 += 1, R8828 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R8920 += 1, R8828 += 1, R159 += 1, R160 += 1 };
  s1 -> s3 [0, 65535] { R8920 += 1, R8828 += 1, R158 += 1, R159 += 1 };
  s2 -> s6 [0, 65535] { R8920 += 1, R8828 += 1 };
  s2 -> s4 [0, 65535] { R8920 += 1 };
  s2 -> s2 [0, 65535] { R8920 += 1, R8828 += 1, R159 += 1, R160 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R8920 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R8920 += 1, R8828 += 1, R159 += 1, R160 += 1 };
  s3 -> s3 [0, 65535] { R8920 += 1, R8828 += 1, R158 += 1, R159 += 1 };
  s4 -> s4 [0, 65535] { R8920 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R8920 += 1, R8828 += 1 };
  s6 -> s4 [0, 65535] { R8920 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R8922 += 1, R8830 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R8922 += 1, R8830 += 1, R165 += 1, R166 += 1 };
  s0 -> s0 [0, 65535] { R8921 += 1, R8922 += 1 };
  s0 -> s3 [0, 65535] { R8922 += 1, R8830 += 1, R164 += 1, R165 += 1 };
  s0 -> s4 [0, 65535] { R8922 += 1, R8829 += 1, R8830 += 1 };
  s0 -> s1 [76, 65535] { R8922 += 1, R8830 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R8922 += 1, R8830 += 1, R165 += 1 };
  s1 -> s1 [0, 65535] { R8922 += 1, R8830 += 1 };
  s1 -> s6 [0, 65535] { R8922 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R8922 += 1, R8830 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R8922 += 1, R8830 += 1, R165 += 1 };
  s2 -> s2 [0, 65535] { R8922 += 1, R8830 += 1, R165 += 1, R166 += 1 };
  s2 -> s6 [0, 65535] { R8922 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R8922 += 1, R8830 += 1 };
  s2 -> s1 [76, 65535] { R8922 += 1, R8830 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R8922 += 1, R8830 += 1, R165 += 1 };
  s3 -> s2 [0, 65535] { R8922 += 1, R8830 += 1, R165 += 1, R166 += 1 };
  s3 -> s6 [0, 65535] { R8922 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R8922 += 1, R8830 += 1, R164 += 1, R165 += 1 };
  s3 -> s1 [76, 65535] { R8922 += 1, R8830 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R8922 += 1, R8830 += 1, R165 += 1 };
  s4 -> s2 [0, 65535] { R8922 += 1, R8830 += 1, R165 += 1, R166 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R8922 += 1, R8830 += 1, R164 += 1, R165 += 1 };
  s4 -> s4 [0, 65535] { R8922 += 1, R8829 += 1, R8830 += 1 };
  s4 -> s1 [76, 65535] { R8922 += 1, R8830 += 1, R165 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R8922 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R8922 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R8922 += 1, R8830 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R8924 += 1, R8832 += 1, R172 += 1, R174 += 1 };
  s0 -> s0 [0, 65535] { R8923 += 1, R8924 += 1 };
  s0 -> s2 [0, 65535] { R8924 += 1, R8832 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s3 [0, 65535] { R8924 += 1, R8831 += 1, R8832 += 1 };
  s0 -> s4 [0, 65535] { R8924 += 1, R8832 += 1, R171 += 1, R172 += 1 };
  s0 -> s1 [76, 65535] { R8924 += 1, R8832 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R8924 += 1, R8832 += 1, R172 += 1, R174 += 1 };
  s1 -> s5 [0, 65535] { R8924 += 1 };
  s1 -> s7 [0, 65535] { R8924 += 1, R8832 += 1 };
  s1 -> s1 [0, 65535] { R8924 += 1, R8832 += 1, R172 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [76, 65535] { R8924 += 1, R8832 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R8924 += 1, R8832 += 1, R172 += 1, R174 += 1 };
  s2 -> s5 [0, 65535] { R8924 += 1 };
  s2 -> s2 [0, 65535] { R8924 += 1, R8832 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s7 [0, 65535] { R8924 += 1, R8832 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [76, 65535] { R8924 += 1, R8832 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R8924 += 1, R8832 += 1, R172 += 1, R174 += 1 };
  s3 -> s2 [0, 65535] { R8924 += 1, R8832 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s3 [0, 65535] { R8924 += 1, R8831 += 1, R8832 += 1 };
  s3 -> s4 [0, 65535] { R8924 += 1, R8832 += 1, R171 += 1, R172 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [76, 65535] { R8924 += 1, R8832 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R8924 += 1, R8832 += 1, R172 += 1, R174 += 1 };
  s4 -> s5 [0, 65535] { R8924 += 1 };
  s4 -> s2 [0, 65535] { R8924 += 1, R8832 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s4 [0, 65535] { R8924 += 1, R8832 += 1, R171 += 1, R172 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s1 [76, 65535] { R8924 += 1, R8832 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535] { R8924 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R8924 += 1 };
  s7 -> s7 [0, 65535] { R8924 += 1, R8832 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s0 [0, 65535] { R8925 += 1, R8926 += 1 };
  s0 -> s1 [0, 65535] { R8926 += 1, R8834 += 1 };
  s0 -> s2 [0, 65535] { R8926 += 1, R8833 += 1, R8834 += 1 };
  s1 -> s4 [0, 65535] { R8926 += 1 };
  s1 -> s1 [0, 65535] { R8926 += 1, R8834 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R8926 += 1, R8834 += 1 };
  s2 -> s2 [0, 65535] { R8926 += 1, R8833 += 1, R8834 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R8926 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R8928 += 1, R8836 += 1, R6568 += 1, R6570 += 1 };
  s0 -> s2 [0, 65535] { R8928 += 1, R8835 += 1, R8836 += 1 };
  s0 -> s0 [0, 65535] { R8927 += 1, R8928 += 1 };
  s0 -> s1 [0, 65535] { R8928 += 1, R8836 += 1, R6568 += 1 };
  s0 -> s3 [0, 65535] { R8928 += 1, R8836 += 1 };
  s0 -> s1 [78, 65535] { R8928 += 1, R8836 += 1, R6568 += 1, R6570 += 1 };
  s1 -> s1 [0, 75] { R8928 += 1, R8836 += 1, R6568 += 1, R6570 += 1 };
  s1 -> s1 [0, 65535] { R8928 += 1, R8836 += 1, R6568 += 1 };
  s1 -> s4 [0, 65535] { R8928 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R8928 += 1, R8836 += 1 };
  s1 -> s1 [78, 65535] { R8928 += 1, R8836 += 1, R6568 += 1, R6570 += 1 };
  s2 -> s1 [0, 75] { R8928 += 1, R8836 += 1, R6568 += 1, R6570 += 1 };
  s2 -> s2 [0, 65535] { R8928 += 1, R8835 += 1, R8836 += 1 };
  s2 -> s1 [0, 65535] { R8928 += 1, R8836 += 1, R6568 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R8928 += 1, R8836 += 1 };
  s2 -> s1 [78, 65535] { R8928 += 1, R8836 += 1, R6568 += 1, R6570 += 1 };
  s3 -> s4 [0, 65535] { R8928 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R8928 += 1, R8836 += 1 };
  s4 -> s4 [0, 65535] { R8928 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R8930 += 1, R8838 += 1 };
  s0 -> s2 [0, 65535] { R8930 += 1, R8837 += 1, R8838 += 1 };
  s0 -> s3 [0, 65535] { R8930 += 1, R8838 += 1, R7851 += 1 };
  s0 -> s0 [0, 65535] { R8929 += 1, R8930 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R8930 += 1, R8838 += 1 };
  s1 -> s5 [0, 65535] { R8930 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R8930 += 1, R8838 += 1 };
  s2 -> s2 [0, 65535] { R8930 += 1, R8837 += 1, R8838 += 1 };
  s2 -> s3 [0, 65535] { R8930 += 1, R8838 += 1, R7851 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R8930 += 1, R8838 += 1 };
  s3 -> s5 [0, 65535] { R8930 += 1 };
  s3 -> s3 [0, 65535] { R8930 += 1, R8838 += 1, R7851 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R8930 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 74] { R8932 += 1, R8840 += 1, R8808 += 1, R8810 += 1 };
  s0 -> s2 [0, 65535] { R8932 += 1, R8839 += 1, R8840 += 1 };
  s0 -> s0 [0, 65535] { R8931 += 1, R8932 += 1 };
  s0 -> s3 [75, 75] { R8932 += 1, R8840 += 1, R8808 += 1, R8810 += 1 };
  s0 -> s4 [78, 78] { R8932 += 1, R8840 += 1, R8808 += 1, R8810 += 1 };
  s0 -> s1 [79, 65535] { R8932 += 1, R8840 += 1, R8808 += 1, R8810 += 1 };
  s1 -> s1 [0, 74] { R8932 += 1, R8840 += 1, R8808 += 1, R8810 += 1 };
  s1 -> s3 [75, 75] { R8932 += 1, R8840 += 1, R8808 += 1, R8810 += 1 };
  s1 -> s4 [78, 78] { R8932 += 1, R8840 += 1, R8808 += 1, R8810 += 1 };
  s1 -> s1 [79, 65535] { R8932 += 1, R8840 += 1, R8808 += 1, R8810 += 1 };
  s2 -> s1 [0, 74] { R8932 += 1, R8840 += 1, R8808 += 1, R8810 += 1 };
  s2 -> s2 [0, 65535] { R8932 += 1, R8839 += 1, R8840 += 1 };
  s2 -> s3 [75, 75] { R8932 += 1, R8840 += 1, R8808 += 1, R8810 += 1 };
  s2 -> s4 [78, 78] { R8932 += 1, R8840 += 1, R8808 += 1, R8810 += 1 };
  s2 -> s1 [79, 65535] { R8932 += 1, R8840 += 1, R8808 += 1, R8810 += 1 };
  s3 -> s3 [0, 75] { R8932 += 1, R8840 += 1, R8808 += 1, R8810 += 1 };
  s3 -> s8 [78, 78] { R8932 += 1, R8840 += 1, R8808 += 1, R8810 += 1 };
  s3 -> s3 [79, 65535] { R8932 += 1, R8840 += 1, R8808 += 1, R8810 += 1 };
  s4 -> s4 [0, 74] { R8932 += 1, R8840 += 1, R8808 += 1, R8810 += 1 };
  s4 -> s5 [0, 65535] { R8932 += 1 };
  s4 -> s6 [0, 65535] { R8932 += 1, R8840 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R8932 += 1, R8840 += 1, R8808 += 1 };
  s4 -> s8 [75, 75] { R8932 += 1, R8840 += 1, R8808 += 1, R8810 += 1 };
  s4 -> s9 [75, 75] { R8932 += 1, R8840 += 1, R8808 += 1, R8810 += 1 };
  s4 -> s4 [78, 65535] { R8932 += 1, R8840 += 1, R8808 += 1, R8810 += 1 };
  s5 -> s5 [0, 65535] { R8932 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s5 [0, 65535] { R8932 += 1 };
  s6 -> s6 [0, 65535] { R8932 += 1, R8840 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s8 [0, 75] { R8932 += 1, R8840 += 1, R8808 += 1, R8810 += 1 };
  s8 -> s5 [0, 65535] { R8932 += 1 };
  s8 -> s8 [0, 65535] { R8932 += 1, R8840 += 1, R8808 += 1 };
  s8 -> s6 [0, 65535] { R8932 += 1, R8840 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [78, 65535] { R8932 += 1, R8840 += 1, R8808 += 1, R8810 += 1 };
  s9 -> s5 [0, 65535] { R8932 += 1 };
  s9 -> s6 [0, 65535] { R8932 += 1, R8840 += 1 };
  s9 -> s9 [0, 65535] { R8932 += 1, R8840 += 1, R8808 += 1 };
  s9 -> s7 [0, 65535];
  accepting s4, s8, s5, s9, s6, s7;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65535] { R8934 += 1, R8869 += 1, R8870 += 1 };
  s0 -> s2 [0, 65535] { R8934 += 1, R8870 += 1, R23 += 1 };
  s0 -> s0 [0, 65535] { R8933 += 1, R8934 += 1 };
  s1 -> s1 [0, 65535] { R8934 += 1, R8869 += 1, R8870 += 1 };
  s1 -> s2 [0, 65535] { R8934 += 1, R8870 += 1, R23 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R8934 += 1, R8870 += 1, R23 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R8934 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R8934 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R8936 += 1, R8872 += 1 };
  s0 -> s2 [0, 65535] { R8936 += 1, R8871 += 1, R8872 += 1 };
  s0 -> s0 [0, 65535] { R8935 += 1, R8936 += 1 };
  s0 -> s3 [70, 70] { R8936 += 1, R8872 += 1 };
  s0 -> s4 [70, 70] { R8936 += 1, R8872 += 1 };
  s0 -> s5 [75, 75] { R8936 += 1, R8872 += 1 };
  s0 -> s1 [76, 65535] { R8936 += 1, R8872 += 1 };
  s1 -> s1 [0, 69] { R8936 += 1, R8872 += 1 };
  s1 -> s3 [70, 70] { R8936 += 1, R8872 += 1 };
  s1 -> s4 [70, 70] { R8936 += 1, R8872 += 1 };
  s1 -> s5 [75, 75] { R8936 += 1, R8872 += 1 };
  s1 -> s1 [76, 65535] { R8936 += 1, R8872 += 1 };
  s2 -> s1 [0, 69] { R8936 += 1, R8872 += 1 };
  s2 -> s2 [0, 65535] { R8936 += 1, R8871 += 1, R8872 += 1 };
  s2 -> s3 [70, 70] { R8936 += 1, R8872 += 1 };
  s2 -> s4 [70, 70] { R8936 += 1, R8872 += 1 };
  s2 -> s5 [75, 75] { R8936 += 1, R8872 += 1 };
  s2 -> s1 [76, 65535] { R8936 += 1, R8872 += 1 };
  s3 -> s3 [0, 70] { R8936 += 1, R8872 += 1 };
  s3 -> s8 [75, 75] { R8936 += 1, R8872 += 1 };
  s3 -> s3 [76, 65535] { R8936 += 1, R8872 += 1 };
  s5 -> s5 [0, 69] { R8936 += 1, R8872 += 1 };
  s5 -> s5 [0, 65535] { R8936 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [70, 70] { R8936 += 1, R8872 += 1 };
  s5 -> s8 [70, 70] { R8936 += 1, R8872 += 1 };
  s5 -> s5 [75, 65535] { R8936 += 1, R8872 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R8936 += 1 };
  s8 -> s8 [0, 70] { R8936 += 1, R8872 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R8936 += 1 };
  s8 -> s8 [75, 65535] { R8936 += 1, R8872 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R8938 += 1, R8874 += 1, R137 += 1 };
  s0 -> s2 [0, 65535] { R8938 += 1, R8873 += 1, R8874 += 1 };
  s0 -> s0 [0, 65535] { R8937 += 1, R8938 += 1 };
  s0 -> s3 [70, 70] { R8938 += 1, R8874 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R8938 += 1, R8874 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R8938 += 1, R8874 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R8938 += 1, R8874 += 1, R137 += 1 };
  s1 -> s1 [0, 65535] { R8938 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R8938 += 1, R8874 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R8938 += 1, R8874 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R8938 += 1, R8874 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R8938 += 1, R8874 += 1, R137 += 1 };
  s2 -> s2 [0, 65535] { R8938 += 1, R8873 += 1, R8874 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R8938 += 1, R8874 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R8938 += 1, R8874 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R8938 += 1, R8874 += 1, R137 += 1 };
  s3 -> s6 [0, 65535] { R8938 += 1 };
  s3 -> s3 [0, 65535] { R8938 += 1, R8874 += 1, R137 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R8938 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R8938 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R8940 += 1, R8876 += 1, R139 += 1 };
  s0 -> s0 [0, 65535] { R8939 += 1, R8940 += 1 };
  s0 -> s2 [0, 65535] { R8940 += 1, R8875 += 1, R8876 += 1 };
  s0 -> s3 [70, 70] { R8940 += 1, R8876 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R8940 += 1, R8876 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R8940 += 1, R8876 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R8940 += 1, R8876 += 1, R139 += 1 };
  s1 -> s1 [0, 65535] { R8940 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R8940 += 1, R8876 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R8940 += 1, R8876 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R8940 += 1, R8876 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R8940 += 1, R8876 += 1, R139 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R8940 += 1, R8875 += 1, R8876 += 1 };
  s2 -> s3 [70, 70] { R8940 += 1, R8876 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R8940 += 1, R8876 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R8940 += 1, R8876 += 1, R139 += 1 };
  s3 -> s3 [0, 65535] { R8940 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R8940 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R8940 += 1, R8876 += 1, R139 += 1 };
  s5 -> s5 [0, 65535] { R8940 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R8942 += 1, R8878 += 1, R141 += 1, R142 += 1 };
  s0 -> s0 [0, 65535] { R8941 += 1, R8942 += 1 };
  s0 -> s2 [0, 65535] { R8942 += 1, R8877 += 1, R8878 += 1 };
  s0 -> s3 [70, 70] { R8942 += 1, R8878 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R8942 += 1, R8878 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R8942 += 1, R8878 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R8942 += 1, R8878 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 65535] { R8942 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R8942 += 1, R8878 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R8942 += 1, R8878 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R8942 += 1, R8878 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R8942 += 1, R8878 += 1, R141 += 1, R142 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R8942 += 1, R8877 += 1, R8878 += 1 };
  s2 -> s3 [70, 70] { R8942 += 1, R8878 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R8942 += 1, R8878 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R8942 += 1, R8878 += 1, R141 += 1, R142 += 1 };
  s3 -> s6 [0, 65535] { R8942 += 1 };
  s3 -> s3 [0, 65535] { R8942 += 1, R8878 += 1, R141 += 1, R142 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R8942 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R8942 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R8944 += 1, R8880 += 1, R147 += 1, R148 += 1 };
  s0 -> s0 [0, 65535] { R8943 += 1, R8944 += 1 };
  s0 -> s2 [0, 65535] { R8944 += 1, R8879 += 1, R8880 += 1 };
  s0 -> s3 [70, 70] { R8944 += 1, R8880 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R8944 += 1, R8880 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R8944 += 1, R8880 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R8944 += 1, R8880 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 65535] { R8944 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R8944 += 1, R8880 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R8944 += 1, R8880 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R8944 += 1, R8880 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R8944 += 1, R8880 += 1, R147 += 1, R148 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R8944 += 1, R8879 += 1, R8880 += 1 };
  s2 -> s3 [70, 70] { R8944 += 1, R8880 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R8944 += 1, R8880 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R8944 += 1, R8880 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R8944 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R8944 += 1 };
  s4 -> s4 [0, 65535] { R8944 += 1, R8880 += 1, R147 += 1, R148 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R8944 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R8946 += 1, R8882 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R8946 += 1, R8882 += 1, R151 += 1, R152 += 1 };
  s0 -> s3 [0, 65535] { R8946 += 1, R8881 += 1, R8882 += 1 };
  s0 -> s0 [0, 65535] { R8945 += 1, R8946 += 1 };
  s0 -> s4 [70, 70] { R8946 += 1, R8882 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R8946 += 1, R8882 += 1, R151 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R8946 += 1, R8882 += 1, R151 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R8946 += 1, R8882 += 1, R152 += 1 };
  s0 -> s1 [71, 74] { R8946 += 1, R8882 += 1, R152 += 1 };
  s0 -> s2 [71, 65535] { R8946 += 1, R8882 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R8946 += 1, R8882 += 1, R152 += 1 };
  s0 -> s1 [76, 65535] { R8946 += 1, R8882 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R8946 += 1, R8882 += 1, R152 += 1 };
  s1 -> s4 [70, 70] { R8946 += 1, R8882 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R8946 += 1, R8882 += 1, R152 += 1 };
  s1 -> s1 [71, 74] { R8946 += 1, R8882 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R8946 += 1, R8882 += 1, R152 += 1 };
  s1 -> s1 [76, 65535] { R8946 += 1, R8882 += 1, R152 += 1 };
  s2 -> s1 [0, 69] { R8946 += 1, R8882 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R8946 += 1, R8882 += 1, R151 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R8946 += 1, R8882 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R8946 += 1, R8882 += 1, R151 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R8946 += 1, R8882 += 1, R151 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R8946 += 1, R8882 += 1, R152 += 1 };
  s2 -> s1 [71, 74] { R8946 += 1, R8882 += 1, R152 += 1 };
  s2 -> s2 [71, 65535] { R8946 += 1, R8882 += 1, R151 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R8946 += 1, R8882 += 1, R152 += 1 };
  s2 -> s1 [76, 65535] { R8946 += 1, R8882 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R8946 += 1, R8882 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R8946 += 1, R8882 += 1, R151 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R8946 += 1, R8881 += 1, R8882 += 1 };
  s3 -> s4 [70, 70] { R8946 += 1, R8882 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R8946 += 1, R8882 += 1, R151 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R8946 += 1, R8882 += 1, R151 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R8946 += 1, R8882 += 1, R152 += 1 };
  s3 -> s1 [71, 74] { R8946 += 1, R8882 += 1, R152 += 1 };
  s3 -> s2 [71, 65535] { R8946 += 1, R8882 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R8946 += 1, R8882 += 1, R152 += 1 };
  s3 -> s1 [76, 65535] { R8946 += 1, R8882 += 1, R152 += 1 };
  s5 -> s7 [0, 74] { R8946 += 1, R8882 += 1, R152 += 1 };
  s5 -> s5 [0, 65535] { R8946 += 1, R8882 += 1, R151 += 1, R152 += 1 };
  s5 -> s11 [75, 75] { R8946 += 1, R8882 += 1, R152 += 1 };
  s5 -> s7 [76, 65535] { R8946 += 1, R8882 += 1, R152 += 1 };
  s7 -> s7 [0, 74] { R8946 += 1, R8882 += 1, R152 += 1 };
  s7 -> s11 [75, 75] { R8946 += 1, R8882 += 1, R152 += 1 };
  s7 -> s7 [76, 65535] { R8946 += 1, R8882 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R8946 += 1, R8882 += 1, R152 += 1 };
  s8 -> s8 [0, 65535] { R8946 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R8946 += 1, R8882 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R8946 += 1, R8882 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R8946 += 1, R8882 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R8946 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R8946 += 1 };
  s11 -> s11 [0, 65535] { R8946 += 1, R8882 += 1, R152 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R8946 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R8948 += 1, R8884 += 1, R155 += 1, R156 += 1 };
  s0 -> s0 [0, 65535] { R8947 += 1, R8948 += 1 };
  s0 -> s2 [0, 65535] { R8948 += 1, R8883 += 1, R8884 += 1 };
  s0 -> s3 [70, 70] { R8948 += 1, R8884 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R8948 += 1, R8884 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R8948 += 1, R8884 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R8948 += 1, R8884 += 1, R155 += 1, R156 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R8948 += 1 };
  s1 -> s3 [70, 70] { R8948 += 1, R8884 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R8948 += 1, R8884 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R8948 += 1, R8884 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R8948 += 1, R8884 += 1, R155 += 1, R156 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R8948 += 1, R8883 += 1, R8884 += 1 };
  s2 -> s3 [70, 70] { R8948 += 1, R8884 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R8948 += 1, R8884 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R8948 += 1, R8884 += 1, R155 += 1, R156 += 1 };
  s3 -> s3 [0, 65535] { R8948 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R8948 += 1 };
  s4 -> s4 [0, 65535] { R8948 += 1, R8884 += 1, R155 += 1, R156 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R8948 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R8950 += 1, R8886 += 1, R161 += 1, R162 += 1 };
  s0 -> s0 [0, 65535] { R8949 += 1, R8950 += 1 };
  s0 -> s2 [0, 65535] { R8950 += 1, R8885 += 1, R8886 += 1 };
  s0 -> s3 [70, 70] { R8950 += 1, R8886 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R8950 += 1, R8886 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R8950 += 1, R8886 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R8950 += 1, R8886 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535] { R8950 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R8950 += 1, R8886 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R8950 += 1, R8886 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R8950 += 1, R8886 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R8950 += 1, R8886 += 1, R161 += 1, R162 += 1 };
  s2 -> s2 [0, 65535] { R8950 += 1, R8885 += 1, R8886 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R8950 += 1, R8886 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R8950 += 1, R8886 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R8950 += 1, R8886 += 1, R161 += 1, R162 += 1 };
  s3 -> s3 [0, 65535] { R8950 += 1, R8886 += 1, R161 += 1, R162 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R8950 += 1 };
  s4 -> s4 [0, 65535] { R8950 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R8950 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R8952 += 1, R8888 += 1, R167 += 1, R168 += 1 };
  s0 -> s2 [0, 65535] { R8952 += 1, R8887 += 1, R8888 += 1 };
  s0 -> s0 [0, 65535] { R8951 += 1, R8952 += 1 };
  s0 -> s3 [70, 70] { R8952 += 1, R8888 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R8952 += 1, R8888 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R8952 += 1, R8888 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R8952 += 1, R8888 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 65535] { R8952 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R8952 += 1, R8888 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R8952 += 1, R8888 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R8952 += 1, R8888 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R8952 += 1, R8888 += 1, R167 += 1, R168 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R8952 += 1, R8887 += 1, R8888 += 1 };
  s2 -> s3 [70, 70] { R8952 += 1, R8888 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R8952 += 1, R8888 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R8952 += 1, R8888 += 1, R167 += 1, R168 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R8952 += 1 };
  s4 -> s5 [0, 65535] { R8952 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R8952 += 1, R8888 += 1, R167 += 1, R168 += 1 };
  s5 -> s5 [0, 65535] { R8952 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R8954 += 1, R8890 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s2 [0, 69] { R8954 += 1, R8890 += 1, R175 += 1, R176 += 1 };
  s0 -> s3 [0, 69] { R8954 += 1, R8890 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s0 [0, 65535] { R8953 += 1, R8954 += 1 };
  s0 -> s4 [0, 65535] { R8954 += 1, R8889 += 1, R8890 += 1 };
  s0 -> s5 [70, 70] { R8954 += 1, R8890 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s6 [70, 70] { R8954 += 1, R8890 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s7 [70, 70] { R8954 += 1, R8890 += 1, R175 += 1, R176 += 1 };
  s0 -> s8 [70, 70] { R8954 += 1, R8890 += 1, R175 += 1, R176 += 1 };
  s0 -> s9 [70, 70] { R8954 += 1, R8890 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s10 [70, 70] { R8954 += 1, R8890 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s1 [71, 65535] { R8954 += 1, R8890 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s2 [71, 65535] { R8954 += 1, R8890 += 1, R175 += 1, R176 += 1 };
  s0 -> s3 [71, 65535] { R8954 += 1, R8890 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s1 [0, 69] { R8954 += 1, R8890 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s15 [0, 69] { R8954 += 1, R8890 += 1 };
  s1 -> s3 [0, 69] { R8954 += 1, R8890 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s5 [70, 70] { R8954 += 1, R8890 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s17 [70, 70] { R8954 += 1, R8890 += 1 };
  s1 -> s6 [70, 70] { R8954 += 1, R8890 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s11 [70, 70] { R8954 += 1, R8890 += 1 };
  s1 -> s9 [70, 70] { R8954 += 1, R8890 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s10 [70, 70] { R8954 += 1, R8890 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s1 [71, 65535] { R8954 += 1, R8890 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s15 [71, 65535] { R8954 += 1, R8890 += 1 };
  s1 -> s3 [71, 65535] { R8954 += 1, R8890 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s1 [0, 69] { R8954 += 1, R8890 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s2 [0, 69] { R8954 += 1, R8890 += 1, R175 += 1, R176 += 1 };
  s2 -> s3 [0, 69] { R8954 += 1, R8890 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s5 [70, 70] { R8954 += 1, R8890 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s6 [70, 70] { R8954 += 1, R8890 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s7 [70, 70] { R8954 += 1, R8890 += 1, R175 += 1, R176 += 1 };
  s2 -> s8 [70, 70] { R8954 += 1, R8890 += 1, R175 += 1, R176 += 1 };
  s2 -> s9 [70, 70] { R8954 += 1, R8890 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s10 [70, 70] { R8954 += 1, R8890 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s1 [71, 65535] { R8954 += 1, R8890 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s2 [71, 65535] { R8954 += 1, R8890 += 1, R175 += 1, R176 += 1 };
  s2 -> s3 [71, 65535] { R8954 += 1, R8890 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s15 [0, 69] { R8954 += 1, R8890 += 1 };
  s3 -> s3 [0, 69] { R8954 += 1, R8890 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s16 [0, 69] { R8954 += 1, R8890 += 1, R176 += 1 };
  s3 -> s5 [70, 70] { R8954 += 1, R8890 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s17 [70, 70] { R8954 += 1, R8890 += 1 };
  s3 -> s6 [70, 70] { R8954 += 1, R8890 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s18 [70, 70] { R8954 += 1, R8890 += 1, R176 += 1 };
  s3 -> s14 [70, 70] { R8954 += 1, R8890 += 1, R176 += 1 };
  s3 -> s11 [70, 70] { R8954 += 1, R8890 += 1 };
  s3 -> s15 [71, 65535] { R8954 += 1, R8890 += 1 };
  s3 -> s3 [71, 65535] { R8954 += 1, R8890 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s16 [71, 65535] { R8954 += 1, R8890 += 1, R176 += 1 };
  s4 -> s1 [0, 69] { R8954 += 1, R8890 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s2 [0, 69] { R8954 += 1, R8890 += 1, R175 += 1, R176 += 1 };
  s4 -> s3 [0, 69] { R8954 += 1, R8890 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s4 [0, 65535] { R8954 += 1, R8889 += 1, R8890 += 1 };
  s4 -> s5 [70, 70] { R8954 += 1, R8890 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s6 [70, 70] { R8954 += 1, R8890 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s7 [70, 70] { R8954 += 1, R8890 += 1, R175 += 1, R176 += 1 };
  s4 -> s8 [70, 70] { R8954 += 1, R8890 += 1, R175 += 1, R176 += 1 };
  s4 -> s9 [70, 70] { R8954 += 1, R8890 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s10 [70, 70] { R8954 += 1, R8890 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s1 [71, 65535] { R8954 += 1, R8890 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s2 [71, 65535] { R8954 += 1, R8890 += 1, R175 += 1, R176 += 1 };
  s4 -> s3 [71, 65535] { R8954 += 1, R8890 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s5 -> s5 [0, 65535] { R8954 += 1, R8890 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s5 -> s14 [0, 65535] { R8954 += 1, R8890 += 1, R176 += 1 };
  s5 -> s11 [0, 65535] { R8954 += 1, R8890 += 1 };
  s7 -> s5 [0, 65535] { R8954 += 1, R8890 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s7 -> s7 [0, 65535] { R8954 += 1, R8890 += 1, R175 += 1, R176 += 1 };
  s7 -> s10 [0, 65535] { R8954 += 1, R8890 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s10 -> s5 [0, 65535] { R8954 += 1, R8890 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s10 -> s11 [0, 65535] { R8954 += 1, R8890 += 1 };
  s10 -> s10 [0, 65535] { R8954 += 1, R8890 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s11 -> s12 [0, 65535] { R8954 += 1 };
  s11 -> s11 [0, 65535] { R8954 += 1, R8890 += 1 };
  s11 -> s13 [0, 65535];
  s12 -> s12 [0, 65535] { R8954 += 1 };
  s12 -> s13 [0, 65535];
  s13 -> s13 [0, 65535];
  s14 -> s14 [0, 65535] { R8954 += 1, R8890 += 1, R176 += 1 };
  s14 -> s11 [0, 65535] { R8954 += 1, R8890 += 1 };
  s15 -> s15 [0, 69] { R8954 += 1, R8890 += 1 };
  s15 -> s13 [0, 65535];
  s15 -> s15 [0, 65535] { R8954 += 1 };
  s15 -> s17 [70, 70] { R8954 += 1, R8890 += 1 };
  s15 -> s11 [70, 70] { R8954 += 1, R8890 += 1 };
  s15 -> s15 [71, 65535] { R8954 += 1, R8890 += 1 };
  s16 -> s15 [0, 69] { R8954 += 1, R8890 += 1 };
  s16 -> s16 [0, 69] { R8954 += 1, R8890 += 1, R176 += 1 };
  s16 -> s17 [70, 70] { R8954 += 1, R8890 += 1 };
  s16 -> s18 [70, 70] { R8954 += 1, R8890 += 1, R176 += 1 };
  s16 -> s14 [70, 70] { R8954 += 1, R8890 += 1, R176 += 1 };
  s16 -> s11 [70, 70] { R8954 += 1, R8890 += 1 };
  s16 -> s15 [71, 65535] { R8954 += 1, R8890 += 1 };
  s16 -> s16 [71, 65535] { R8954 += 1, R8890 += 1, R176 += 1 };
  s17 -> s17 [0, 65535] { R8954 += 1 };
  s17 -> s13 [0, 65535];
  accepting s17, s12, s13, s15, s11;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R8956 += 1, R8892 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s2 [0, 69] { R8956 += 1, R8892 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s3 [0, 69] { R8956 += 1, R8892 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s0 [0, 65535] { R8955 += 1, R8956 += 1 };
  s0 -> s4 [0, 65535] { R8956 += 1, R8891 += 1, R8892 += 1 };
  s0 -> s5 [70, 70] { R8956 += 1, R8892 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s6 [70, 70] { R8956 += 1, R8892 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s7 [70, 70] { R8956 += 1, R8892 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s8 [70, 70] { R8956 += 1, R8892 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s9 [70, 70] { R8956 += 1, R8892 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s10 [70, 70] { R8956 += 1, R8892 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s1 [71, 75] { R8956 += 1, R8892 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s2 [71, 65535] { R8956 += 1, R8892 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s3 [71, 65535] { R8956 += 1, R8892 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s1 [78, 65535] { R8956 += 1, R8892 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s1 [0, 69] { R8956 += 1, R8892 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s1 [0, 65535] { R8956 += 1 };
  s1 -> s11 [0, 65535];
  s1 -> s6 [70, 70] { R8956 += 1, R8892 += 1, R6564 += 1 };
  s1 -> s9 [70, 70] { R8956 += 1, R8892 += 1, R6564 += 1 };
  s1 -> s1 [71, 75] { R8956 += 1, R8892 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s1 [71, 65535] { R8956 += 1, R8892 += 1, R6564 += 1 };
  s1 -> s1 [78, 65535] { R8956 += 1, R8892 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s1 [0, 69] { R8956 += 1, R8892 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s2 [0, 69] { R8956 += 1, R8892 += 1, R6563 += 1, R6564 += 1 };
  s2 -> s3 [0, 69] { R8956 += 1, R8892 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s5 [70, 70] { R8956 += 1, R8892 += 1, R6563 += 1, R6564 += 1 };
  s2 -> s6 [70, 70] { R8956 += 1, R8892 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s7 [70, 70] { R8956 += 1, R8892 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s8 [70, 70] { R8956 += 1, R8892 += 1, R6563 += 1, R6564 += 1 };
  s2 -> s9 [70, 70] { R8956 += 1, R8892 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s10 [70, 70] { R8956 += 1, R8892 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s1 [71, 75] { R8956 += 1, R8892 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s2 [71, 65535] { R8956 += 1, R8892 += 1, R6563 += 1, R6564 += 1 };
  s2 -> s3 [71, 65535] { R8956 += 1, R8892 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s2 -> s1 [78, 65535] { R8956 += 1, R8892 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s1 [0, 69] { R8956 += 1, R8892 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s3 [0, 69] { R8956 += 1, R8892 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s3 -> s6 [70, 70] { R8956 += 1, R8892 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s7 [70, 70] { R8956 += 1, R8892 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s3 -> s9 [70, 70] { R8956 += 1, R8892 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s10 [70, 70] { R8956 += 1, R8892 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s3 -> s1 [71, 75] { R8956 += 1, R8892 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s3 [71, 65535] { R8956 += 1, R8892 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s3 -> s1 [78, 65535] { R8956 += 1, R8892 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s1 [0, 69] { R8956 += 1, R8892 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s2 [0, 69] { R8956 += 1, R8892 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s3 [0, 69] { R8956 += 1, R8892 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s4 [0, 65535] { R8956 += 1, R8891 += 1, R8892 += 1 };
  s4 -> s5 [70, 70] { R8956 += 1, R8892 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s6 [70, 70] { R8956 += 1, R8892 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s7 [70, 70] { R8956 += 1, R8892 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s8 [70, 70] { R8956 += 1, R8892 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s9 [70, 70] { R8956 += 1, R8892 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s10 [70, 70] { R8956 += 1, R8892 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s1 [71, 75] { R8956 += 1, R8892 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s2 [71, 65535] { R8956 += 1, R8892 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s3 [71, 65535] { R8956 += 1, R8892 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s1 [78, 65535] { R8956 += 1, R8892 += 1, R6564 += 1, R6566 += 1 };
  s5 -> s9 [0, 75] { R8956 += 1, R8892 += 1, R6564 += 1, R6566 += 1 };
  s5 -> s5 [0, 65535] { R8956 += 1, R8892 += 1, R6563 += 1, R6564 += 1 };
  s5 -> s10 [0, 65535] { R8956 += 1, R8892 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s5 -> s9 [78, 65535] { R8956 += 1, R8892 += 1, R6564 += 1, R6566 += 1 };
  s6 -> s6 [0, 65535] { R8956 += 1 };
  s6 -> s11 [0, 65535];
  s9 -> s9 [0, 75] { R8956 += 1, R8892 += 1, R6564 += 1, R6566 += 1 };
  s9 -> s9 [0, 65535] { R8956 += 1, R8892 += 1, R6564 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s12 [0, 65535] { R8956 += 1 };
  s9 -> s9 [78, 65535] { R8956 += 1, R8892 += 1, R6564 += 1, R6566 += 1 };
  s10 -> s9 [0, 75] { R8956 += 1, R8892 += 1, R6564 += 1, R6566 += 1 };
  s10 -> s10 [0, 65535] { R8956 += 1, R8892 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s10 -> s9 [78, 65535] { R8956 += 1, R8892 += 1, R6564 += 1, R6566 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R8956 += 1 };
  accepting s12, s9, s6, s1, s11;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R8958 += 1, R8894 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s0 -> s2 [0, 69] { R8958 += 1, R8894 += 1, R7845 += 1, R7846 += 1 };
  s0 -> s3 [0, 69] { R8958 += 1, R8894 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s0 -> s0 [0, 65535] { R8957 += 1, R8958 += 1 };
  s0 -> s4 [0, 65535] { R8958 += 1, R8893 += 1, R8894 += 1 };
  s0 -> s5 [70, 70] { R8958 += 1, R8894 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s0 -> s6 [70, 70] { R8958 += 1, R8894 += 1, R7845 += 1, R7846 += 1 };
  s0 -> s7 [70, 70] { R8958 += 1, R8894 += 1, R7845 += 1, R7846 += 1 };
  s0 -> s8 [70, 70] { R8958 += 1, R8894 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s0 -> s9 [70, 70] { R8958 += 1, R8894 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s0 -> s10 [70, 70] { R8958 += 1, R8894 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s0 -> s1 [71, 65535] { R8958 += 1, R8894 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s0 -> s2 [71, 65535] { R8958 += 1, R8894 += 1, R7845 += 1, R7846 += 1 };
  s0 -> s3 [71, 65535] { R8958 += 1, R8894 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s1 -> s1 [0, 69] { R8958 += 1, R8894 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s1 -> s14 [0, 69] { R8958 += 1, R8894 += 1, R7846 += 1 };
  s1 -> s5 [70, 70] { R8958 += 1, R8894 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s1 -> s11 [70, 70] { R8958 += 1, R8894 += 1, R7846 += 1 };
  s1 -> s8 [70, 70] { R8958 += 1, R8894 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s1 -> s15 [70, 70] { R8958 += 1, R8894 += 1, R7846 += 1 };
  s1 -> s1 [71, 65535] { R8958 += 1, R8894 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s1 -> s14 [71, 65535] { R8958 += 1, R8894 += 1, R7846 += 1 };
  s2 -> s1 [0, 69] { R8958 += 1, R8894 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s2 -> s2 [0, 69] { R8958 += 1, R8894 += 1, R7845 += 1, R7846 += 1 };
  s2 -> s3 [0, 69] { R8958 += 1, R8894 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s2 -> s5 [70, 70] { R8958 += 1, R8894 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s2 -> s6 [70, 70] { R8958 += 1, R8894 += 1, R7845 += 1, R7846 += 1 };
  s2 -> s7 [70, 70] { R8958 += 1, R8894 += 1, R7845 += 1, R7846 += 1 };
  s2 -> s8 [70, 70] { R8958 += 1, R8894 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s2 -> s9 [70, 70] { R8958 += 1, R8894 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s2 -> s10 [70, 70] { R8958 += 1, R8894 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s2 -> s1 [71, 65535] { R8958 += 1, R8894 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s2 -> s2 [71, 65535] { R8958 += 1, R8894 += 1, R7845 += 1, R7846 += 1 };
  s2 -> s3 [71, 65535] { R8958 += 1, R8894 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s3 -> s1 [0, 69] { R8958 += 1, R8894 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s3 -> s3 [0, 69] { R8958 += 1, R8894 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s3 -> s5 [70, 70] { R8958 += 1, R8894 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s3 -> s8 [70, 70] { R8958 += 1, R8894 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s3 -> s9 [70, 70] { R8958 += 1, R8894 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s3 -> s10 [70, 70] { R8958 += 1, R8894 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s3 -> s1 [71, 65535] { R8958 += 1, R8894 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s3 -> s3 [71, 65535] { R8958 += 1, R8894 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s4 -> s1 [0, 69] { R8958 += 1, R8894 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s4 -> s2 [0, 69] { R8958 += 1, R8894 += 1, R7845 += 1, R7846 += 1 };
  s4 -> s3 [0, 69] { R8958 += 1, R8894 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s4 -> s4 [0, 65535] { R8958 += 1, R8893 += 1, R8894 += 1 };
  s4 -> s5 [70, 70] { R8958 += 1, R8894 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s4 -> s6 [70, 70] { R8958 += 1, R8894 += 1, R7845 += 1, R7846 += 1 };
  s4 -> s7 [70, 70] { R8958 += 1, R8894 += 1, R7845 += 1, R7846 += 1 };
  s4 -> s8 [70, 70] { R8958 += 1, R8894 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s4 -> s9 [70, 70] { R8958 += 1, R8894 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s4 -> s10 [70, 70] { R8958 += 1, R8894 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s4 -> s1 [71, 65535] { R8958 += 1, R8894 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s4 -> s2 [71, 65535] { R8958 += 1, R8894 += 1, R7845 += 1, R7846 += 1 };
  s4 -> s3 [71, 65535] { R8958 += 1, R8894 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s6 -> s6 [0, 65535] { R8958 += 1, R8894 += 1, R7845 += 1, R7846 += 1 };
  s6 -> s8 [0, 65535] { R8958 += 1, R8894 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s6 -> s10 [0, 65535] { R8958 += 1, R8894 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s8 -> s11 [0, 65535] { R8958 += 1, R8894 += 1, R7846 += 1 };
  s8 -> s8 [0, 65535] { R8958 += 1, R8894 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s10 -> s8 [0, 65535] { R8958 += 1, R8894 += 1, R7846 += 1, R7848 += 1, R7849 += 1 };
  s10 -> s10 [0, 65535] { R8958 += 1, R8894 += 1, R7846 += 1, R7847 += 1, R7848 += 1 };
  s11 -> s12 [0, 65535] { R8958 += 1 };
  s11 -> s13 [0, 65535];
  s11 -> s11 [0, 65535] { R8958 += 1, R8894 += 1, R7846 += 1 };
  s12 -> s12 [0, 65535] { R8958 += 1 };
  s12 -> s13 [0, 65535];
  s13 -> s13 [0, 65535];
  s14 -> s14 [0, 69] { R8958 += 1, R8894 += 1, R7846 += 1 };
  s14 -> s13 [0, 65535];
  s14 -> s14 [0, 65535] { R8958 += 1 };
  s14 -> s11 [70, 70] { R8958 += 1, R8894 += 1, R7846 += 1 };
  s14 -> s15 [70, 70] { R8958 += 1, R8894 += 1, R7846 += 1 };
  s14 -> s14 [71, 65535] { R8958 += 1, R8894 += 1, R7846 += 1 };
  s15 -> s13 [0, 65535];
  s15 -> s15 [0, 65535] { R8958 += 1 };
  accepting s12, s13, s14, s15, s11;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R8960 += 1, R8896 += 1, R8804 += 1, R8806 += 1 };
  s0 -> s2 [0, 69] { R8960 += 1, R8896 += 1, R8803 += 1, R8804 += 1 };
  s0 -> s3 [0, 69] { R8960 += 1, R8896 += 1, R8804 += 1, R8805 += 1, R8806 += 1 };
  s0 -> s4 [0, 65535] { R8960 += 1, R8895 += 1, R8896 += 1 };
  s0 -> s0 [0, 65535] { R8959 += 1, R8960 += 1 };
  s0 -> s5 [70, 70] { R8960 += 1, R8896 += 1, R8804 += 1, R8805 += 1, R8806 += 1 };
  s0 -> s6 [70, 70] { R8960 += 1, R8896 += 1, R8804 += 1, R8805 += 1, R8806 += 1 };
  s0 -> s7 [70, 70] { R8960 += 1, R8896 += 1, R8804 += 1, R8806 += 1 };
  s0 -> s8 [70, 70] { R8960 += 1, R8896 += 1, R8803 += 1, R8804 += 1 };
  s0 -> s9 [70, 70] { R8960 += 1, R8896 += 1, R8803 += 1, R8804 += 1 };
  s0 -> s10 [70, 70] { R8960 += 1, R8896 += 1, R8804 += 1, R8806 += 1 };
  s0 -> s1 [71, 74] { R8960 += 1, R8896 += 1, R8804 += 1, R8806 += 1 };
  s0 -> s2 [71, 65535] { R8960 += 1, R8896 += 1, R8803 += 1, R8804 += 1 };
  s0 -> s3 [71, 65535] { R8960 += 1, R8896 += 1, R8804 += 1, R8805 += 1, R8806 += 1 };
  s0 -> s1 [79, 65535] { R8960 += 1, R8896 += 1, R8804 += 1, R8806 += 1 };
  s1 -> s1 [0, 69] { R8960 += 1, R8896 += 1, R8804 += 1, R8806 += 1 };
  s1 -> s1 [0, 65535] { R8960 += 1 };
  s1 -> s11 [0, 65535];
  s1 -> s7 [70, 70] { R8960 += 1, R8896 += 1, R8804 += 1, R8806 += 1 };
  s1 -> s10 [70, 70] { R8960 += 1, R8896 += 1, R8804 += 1, R8806 += 1 };
  s1 -> s1 [71, 74] { R8960 += 1, R8896 += 1, R8804 += 1, R8806 += 1 };
  s1 -> s1 [79, 65535] { R8960 += 1, R8896 += 1, R8804 += 1, R8806 += 1 };
  s2 -> s1 [0, 69] { R8960 += 1, R8896 += 1, R8804 += 1, R8806 += 1 };
  s2 -> s2 [0, 69] { R8960 += 1, R8896 += 1, R8803 += 1, R8804 += 1 };
  s2 -> s3 [0, 69] { R8960 += 1, R8896 += 1, R8804 += 1, R8805 += 1, R8806 += 1 };
  s2 -> s5 [70, 70] { R8960 += 1, R8896 += 1, R8804 += 1, R8805 += 1, R8806 += 1 };
  s2 -> s6 [70, 70] { R8960 += 1, R8896 += 1, R8804 += 1, R8805 += 1, R8806 += 1 };
  s2 -> s7 [70, 70] { R8960 += 1, R8896 += 1, R8804 += 1, R8806 += 1 };
  s2 -> s8 [70, 70] { R8960 += 1, R8896 += 1, R8803 += 1, R8804 += 1 };
  s2 -> s9 [70, 70] { R8960 += 1, R8896 += 1, R8803 += 1, R8804 += 1 };
  s2 -> s10 [70, 70] { R8960 += 1, R8896 += 1, R8804 += 1, R8806 += 1 };
  s2 -> s1 [71, 74] { R8960 += 1, R8896 += 1, R8804 += 1, R8806 += 1 };
  s2 -> s2 [71, 65535] { R8960 += 1, R8896 += 1, R8803 += 1, R8804 += 1 };
  s2 -> s3 [71, 65535] { R8960 += 1, R8896 += 1, R8804 += 1, R8805 += 1, R8806 += 1 };
  s2 -> s1 [79, 65535] { R8960 += 1, R8896 += 1, R8804 += 1, R8806 += 1 };
  s3 -> s1 [0, 69] { R8960 += 1, R8896 += 1, R8804 += 1, R8806 += 1 };
  s3 -> s3 [0, 69] { R8960 += 1, R8896 += 1, R8804 += 1, R8805 += 1, R8806 += 1 };
  s3 -> s5 [70, 70] { R8960 += 1, R8896 += 1, R8804 += 1, R8805 += 1, R8806 += 1 };
  s3 -> s6 [70, 70] { R8960 += 1, R8896 += 1, R8804 += 1, R8805 += 1, R8806 += 1 };
  s3 -> s7 [70, 70] { R8960 += 1, R8896 += 1, R8804 += 1, R8806 += 1 };
  s3 -> s10 [70, 70] { R8960 += 1, R8896 += 1, R8804 += 1, R8806 += 1 };
  s3 -> s1 [71, 74] { R8960 += 1, R8896 += 1, R8804 += 1, R8806 += 1 };
  s3 -> s3 [71, 65535] { R8960 += 1, R8896 += 1, R8804 += 1, R8805 += 1, R8806 += 1 };
  s3 -> s1 [79, 65535] { R8960 += 1, R8896 += 1, R8804 += 1, R8806 += 1 };
  s4 -> s1 [0, 69] { R8960 += 1, R8896 += 1, R8804 += 1, R8806 += 1 };
  s4 -> s2 [0, 69] { R8960 += 1, R8896 += 1, R8803 += 1, R8804 += 1 };
  s4 -> s3 [0, 69] { R8960 += 1, R8896 += 1, R8804 += 1, R8805 += 1, R8806 += 1 };
  s4 -> s4 [0, 65535] { R8960 += 1, R8895 += 1, R8896 += 1 };
  s4 -> s5 [70, 70] { R8960 += 1, R8896 += 1, R8804 += 1, R8805 += 1, R8806 += 1 };
  s4 -> s6 [70, 70] { R8960 += 1, R8896 += 1, R8804 += 1, R8805 += 1, R8806 += 1 };
  s4 -> s7 [70, 70] { R8960 += 1, R8896 += 1, R8804 += 1, R8806 += 1 };
  s4 -> s8 [70, 70] { R8960 += 1, R8896 += 1, R8803 += 1, R8804 += 1 };
  s4 -> s9 [70, 70] { R8960 += 1, R8896 += 1, R8803 += 1, R8804 += 1 };
  s4 -> s10 [70, 70] { R8960 += 1, R8896 += 1, R8804 += 1, R8806 += 1 };
  s4 -> s1 [71, 74] { R8960 += 1, R8896 += 1, R8804 += 1, R8806 += 1 };
  s4 -> s2 [71, 65535] { R8960 += 1, R8896 += 1, R8803 += 1, R8804 += 1 };
  s4 -> s3 [71, 65535] { R8960 += 1, R8896 += 1, R8804 += 1, R8805 += 1, R8806 += 1 };
  s4 -> s1 [79, 65535] { R8960 += 1, R8896 += 1, R8804 += 1, R8806 += 1 };
  s6 -> s10 [0, 74] { R8960 += 1, R8896 += 1, R8804 += 1, R8806 += 1 };
  s6 -> s6 [0, 65535] { R8960 += 1, R8896 += 1, R8804 += 1, R8805 += 1, R8806 += 1 };
  s6 -> s10 [79, 65535] { R8960 += 1, R8896 += 1, R8804 += 1, R8806 += 1 };
  s7 -> s7 [0, 65535] { R8960 += 1 };
  s7 -> s11 [0, 65535];
  s8 -> s10 [0, 74] { R8960 += 1, R8896 += 1, R8804 += 1, R8806 += 1 };
  s8 -> s6 [0, 65535] { R8960 += 1, R8896 += 1, R8804 += 1, R8805 += 1, R8806 += 1 };
  s8 -> s8 [0, 65535] { R8960 += 1, R8896 += 1, R8803 += 1, R8804 += 1 };
  s8 -> s10 [79, 65535] { R8960 += 1, R8896 += 1, R8804 += 1, R8806 += 1 };
  s10 -> s10 [0, 74] { R8960 += 1, R8896 += 1, R8804 += 1, R8806 += 1 };
  s10 -> s11 [0, 65535];
  s10 -> s10 [0, 65535] { R8960 += 1 };
  s10 -> s10 [79, 65535] { R8960 += 1, R8896 += 1, R8804 += 1, R8806 += 1 };
  s11 -> s11 [0, 65535];
  accepting s1, s7, s10, s11;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R8840 && R3 = R8960 && R25 - R8960 = -1 && R26 = R8960 && R27 - R8960 = -1 && R28 = R8960 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R8808 + -1*R8804 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R8808 + -1*R8804 - R130 = 0 && R129 + R8807 + R8803 = 0 && R131 + R8809 + R8805 = 0 && R132 + R8810 + R8806 = 0 && R8839 = 0 && R8871 = 0 && R8872 = 0 && R8881 = 0 && R8882 = 0 && R8889 = 0 && R8890 = 0 && R8891 = 0 && R8892 = 0 && R8893 = 0 && R8894 = 0 && R8895 = 0 && R8896 = 0 && R8897 = 0 && R8898 = R8960 && R8899 = 0 && R8900 = R8960 && R8901 = 0 && R8902 = R8960 && R8903 = 0 && R8904 = R8960 && R8905 = 0 && R8906 = R8960 && R8907 = 0 && R8908 = R8960 && R8909 = 0 && R8910 = R8960 && R8911 = 0 && R8912 = R8960 && R8913 = 0 && R8914 = R8960 && R8915 = 0 && R8916 = R8960 && R8917 = 0 && R8918 = R8960 && R8919 = 0 && R8920 = R8960 && R8921 = 0 && R8922 = R8960 && R8923 = 0 && R8924 = R8960 && R8925 = 0 && R8926 = R8960 && R8927 = 0 && R8928 = R8960 && R8929 = 0 && R8930 = R8960 && R8931 = 0 && R8932 = R8960 && R8933 = 0 && R8934 = R8960 && R8935 = 0 && R8936 = R8960 && R8937 = 0 && R8938 = R8960 && R8939 = 0 && R8940 = R8960 && R8941 = 0 && R8942 = R8960 && R8943 = 0 && R8944 = R8960 && R8945 = 0 && R8946 = R8960 && R8947 = 0 && R8948 = R8960 && R8949 = 0 && R8950 = R8960 && R8951 = 0 && R8952 = R8960 && R8953 = 0 && R8954 = R8960 && R8955 = 0 && R8956 = R8960 && R8957 = 0 && R8958 = R8960 && R8959 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R8808 + -1*R8804 - R130 < 1 && -1 < R8840 && 0 < R8960 && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R8808 + -1*R8804 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R6569 + R6565 = 0 && R114 + R6570 + R6566 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R8808 + -1*R8804 - R130 = 0 || R130 + R8808 + R8804 < 1) && (R81 + R158 + R155 = 0 || R130 + R8808 + R8804 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R8808 + -1*R8804 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R8808 + R8804 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R8808 + -1*R8804 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R8808 + R8804 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R8808 + -1*R8804 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R8808 + R8804 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R6567 + R6563 != 0 || R112 + R6568 + R6564 + -1*R8808 + -1*R8804 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R8808 + R8804 = 0)) && (R113 + R6569 + R6565 != 0 || R83 + R160 + R157 + -1*R6570 + -1*R6566 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R7850 + R7845 != 0 || R120 + R7851 + R7846 + -1*R8808 + -1*R8804 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R8808 + R8804 = 0)) && (R8811 != 0 || R8812 = R8840 || (R22 = 0 && R8840 = 0)) && (R8813 != 0 || R8814 = R8840 || (R22 = 0 && R8840 = 0)) && (R8815 != 0 || R8816 = R8840 || (R22 = 0 && R8840 = 0)) && (R8817 != 0 || R8818 = R8840 || (R22 = 0 && R8840 = 0)) && (R8819 != 0 || R8820 = R8840 || (R22 = 0 && R8840 = 0)) && (R8821 != 0 || R8822 = R8840 || (R22 = 0 && R8840 = 0)) && (R8823 != 0 || R8824 = R8840 || (R22 = 0 && R8840 = 0)) && (R8825 != 0 || R8826 = R8840 || (R22 = 0 && R8840 = 0)) && (R8827 != 0 || R8828 = R8840 || (R22 = 0 && R8840 = 0)) && (R8829 != 0 || R8830 = R8840 || (R22 = 0 && R8840 = 0)) && (R8831 != 0 || R8832 = R8840 || (R22 = 0 && R8840 = 0)) && (R8833 != 0 || R8834 = R8840 || (R22 = 0 && R8840 = 0)) && (R8835 != 0 || R8836 = R8840 || (R22 = 0 && R8840 = 0)) && (R8837 != 0 || R8838 = R8840 || (R22 = 0 && R8840 = 0)) && (R23 = 0 || (R8869 = 0 && R8870 = 0)) && (R23 = 0 || (R8873 = 0 && R8874 = 0)) && (R23 = 0 || (R8875 = 0 && R8876 = 0)) && (R23 = 0 || (R8877 = 0 && R8878 = 0)) && (R23 = 0 || (R8879 = 0 && R8880 = 0)) && (R23 = 0 || (R8883 = 0 && R8884 = 0)) && (R23 = 0 || (R8885 = 0 && R8886 = 0)) && (R23 = 0 || (R8887 = 0 && R8888 = 0)) && (R24 = 0 || (R8841 = 0 && R8842 = 0)) && (R24 = 0 || (R8843 = 0 && R8844 = 0)) && (R24 = 0 || (R8845 = 0 && R8846 = 0)) && (R24 = 0 || (R8847 = 0 && R8848 = 0)) && (R24 = 0 || (R8849 = 0 && R8850 = 0)) && (R24 = 0 || (R8851 = 0 && R8852 = 0)) && (R24 = 0 || (R8853 = 0 && R8854 = 0)) && (R24 = 0 || (R8855 = 0 && R8856 = 0)) && (R24 = 0 || (R8857 = 0 && R8858 = 0)) && (R24 = 0 || (R8859 = 0 && R8860 = 0)) && (R24 = 0 || (R8861 = 0 && R8862 = 0)) && (R24 = 0 || (R8863 = 0 && R8864 = 0)) && (R24 = 0 || (R8865 = 0 && R8866 = 0)) && (R24 = 0 || (R8867 = 0 && R8868 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R8808 + R8804 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R8808 + R8804 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R8808 + R8804 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R6567 + R6563 = 0 || (R83 + R160 + R157 = 0 && R130 + R8808 + R8804 = 0)) && (R113 + R6569 + R6565 = 0 || R83 + R160 + R157 < 1) && (R119 + R7850 + R7845 = 0 || (R83 + R160 + R157 = 0 && R130 + R8808 + R8804 = 0)) && (R123 + R7854 + R7849 = 0 || (R121 + R7852 + R7847 = 0 && R122 + R7853 + R7848 = 0)) && (R8811 = 0 || (R22 = 0 && R8840 = 0)) && (R8813 = 0 || (R22 = 0 && R8840 = 0)) && (R8815 = 0 || (R22 = 0 && R8840 = 0)) && (R8817 = 0 || (R22 = 0 && R8840 = 0)) && (R8819 = 0 || (R22 = 0 && R8840 = 0)) && (R8821 = 0 || (R22 = 0 && R8840 = 0)) && (R8823 = 0 || (R22 = 0 && R8840 = 0)) && (R8825 = 0 || (R22 = 0 && R8840 = 0)) && (R8827 = 0 || (R22 = 0 && R8840 = 0)) && (R8829 = 0 || (R22 = 0 && R8840 = 0)) && (R8831 = 0 || (R22 = 0 && R8840 = 0)) && (R8833 = 0 || (R22 = 0 && R8840 = 0)) && (R8835 = 0 || (R22 = 0 && R8840 = 0)) && (R8837 = 0 || (R22 = 0 && R8840 = 0));
// End of Parikh automata intersection problem
