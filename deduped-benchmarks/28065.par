// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R2, R22, R23, R24, R25, R26, R27, R2741, R2742, R2743, R2744, R2745, R2746, R2747, R2748, R2749, R2750, R28, R29, R3, R30, R31, R32, R3383, R3384, R3385, R3386, R3387, R3388, R3389, R3390, R3391, R3392, R3393, R3394, R3395, R3396, R3397, R3398, R3399, R3400, R3401, R3402, R3403, R3404, R3405, R3406, R3407, R3408, R3409, R3410, R3411, R3412, R3413, R3414, R3415, R3416, R3417, R3418, R3419, R3420, R3421, R3422, R3423, R3424, R3425, R3426, R3427, R3428, R3429, R3430, R3431, R3432, R3433, R3434, R3435, R3436, R3437, R3438, R3439, R3440, R3441, R3442, R3443, R3444, R3445, R3446, R3447, R3448, R3449, R3450, R3451, R3452, R3453, R3454, R3455, R3456, R3457, R3458, R3459, R3460, R3461, R3462, R3463, R3464, R3465, R3466, R3467, R3468, R3469, R3470, R3471, R3472, R3473, R3474, R3475, R3476, R3477, R3478, R3479, R3480, R3481, R3482, R3483, R3484, R3485, R3486, R3487, R3488, R3489, R3490, R3491, R3492, R3493, R3494, R3495, R3496, R3497, R3498, R3499, R3500, R3501, R3502, R3503, R3504, R3505, R3506, R3507, R3508, R3509, R3510, R3511, R3512, R3513, R3514, R3515, R3516, R3517, R3518, R3519, R3520, R3521, R3522, R3523, R3524, R3525, R3526, R3527, R3528, R3529, R3530, R3531, R3532, R3533, R3534, R3535, R3536, R3537, R3538, R3539, R3540, R4, R5, R63, R65, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R30 += 1 };
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R3422 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R3421 += 1, R3422 += 1 };
  s1 -> s1 [0, 65535] { R3422 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R3424 += 1 };
  s0 -> s0 [0, 65535] { R3423 += 1, R3424 += 1 };
  s0 -> s2 [70, 70] { R3424 += 1 };
  s0 -> s3 [70, 70] { R3424 += 1 };
  s0 -> s1 [76, 65535] { R3424 += 1 };
  s1 -> s1 [0, 69] { R3424 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3424 += 1 };
  s1 -> s3 [70, 70] { R3424 += 1 };
  s1 -> s1 [76, 65535] { R3424 += 1 };
  s2 -> s2 [0, 70] { R3424 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R3424 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R3426 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R3425 += 1, R3426 += 1 };
  s0 -> s2 [70, 70] { R3426 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R3426 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R3426 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R3426 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3426 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R3426 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R3426 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R3426 += 1, R63 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R3428 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R3427 += 1, R3428 += 1 };
  s0 -> s2 [70, 70] { R3428 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R3428 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R3428 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R3428 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3428 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R3428 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R3428 += 1, R65 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R3428 += 1, R65 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R3430 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R3429 += 1, R3430 += 1 };
  s0 -> s2 [70, 70] { R3430 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R3430 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R3430 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R3430 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3430 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R3430 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R3430 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R3430 += 1, R67 += 1, R68 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R3432 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R3431 += 1, R3432 += 1 };
  s0 -> s2 [70, 70] { R3432 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R3432 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R3432 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R3432 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3432 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R3432 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R3432 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R3432 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R3434 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R3433 += 1, R3434 += 1 };
  s0 -> s2 [70, 70] { R3434 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R3434 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R3434 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R3434 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3434 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R3434 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R3434 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3434 += 1, R77 += 1, R78 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R3436 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R3435 += 1, R3436 += 1 };
  s0 -> s2 [70, 70] { R3436 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R3436 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R3436 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R3436 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3436 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R3436 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R3436 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R3436 += 1, R81 += 1, R82 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R3438 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R3437 += 1, R3438 += 1 };
  s0 -> s2 [70, 70] { R3438 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R3438 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R3438 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R3438 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3438 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R3438 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R3438 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3438 += 1, R87 += 1, R88 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R3440 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R3439 += 1, R3440 += 1 };
  s0 -> s2 [70, 70] { R3440 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R3440 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R3440 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R3440 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3440 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R3440 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R3440 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3440 += 1, R93 += 1, R94 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R3442 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R3441 += 1, R3442 += 1 };
  s0 -> s2 [70, 70] { R3442 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R3442 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R3442 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R3442 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3442 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R3442 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R3442 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3442 += 1, R101 += 1, R102 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R3444 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R3443 += 1, R3444 += 1 };
  s0 -> s2 [70, 70] { R3444 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R3444 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R3444 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R3444 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3444 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R3444 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R3444 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R3444 += 1, R111 += 1, R112 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R3446 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R3445 += 1, R3446 += 1 };
  s0 -> s2 [70, 70] { R3446 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R3446 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R3446 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R3446 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3446 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R3446 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R3446 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3446 += 1, R119 += 1, R120 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R3448 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R3447 += 1, R3448 += 1 };
  s0 -> s2 [70, 70] { R3448 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R3448 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R3448 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R3448 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3448 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R3448 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R3448 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R3448 += 1, R129 += 1, R130 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R3478 += 1 };
  s0 -> s0 [0, 65535] { R3477 += 1, R3478 += 1 };
  s0 -> s2 [70, 70] { R3478 += 1 };
  s0 -> s1 [71, 65535] { R3478 += 1 };
  s1 -> s1 [0, 69] { R3478 += 1 };
  s1 -> s2 [70, 70] { R3478 += 1 };
  s1 -> s1 [71, 65535] { R3478 += 1 };
  s2 -> s2 [0, 65535] { R3478 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R3480 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R3479 += 1, R3480 += 1 };
  s1 -> s1 [0, 65535] { R3480 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R3482 += 1 };
  s0 -> s2 [0, 65535] { R3482 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R3481 += 1, R3482 += 1 };
  s0 -> s3 [70, 70] { R3482 += 1 };
  s0 -> s1 [71, 65535] { R3482 += 1 };
  s1 -> s1 [0, 69] { R3482 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R3482 += 1 };
  s1 -> s1 [71, 65535] { R3482 += 1 };
  s2 -> s1 [0, 69] { R3482 += 1 };
  s2 -> s2 [0, 65535] { R3482 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R3482 += 1 };
  s2 -> s1 [71, 65535] { R3482 += 1 };
  s3 -> s3 [0, 65535] { R3482 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R3484 += 1, R3392 += 1 };
  s0 -> s0 [0, 65535] { R3483 += 1, R3484 += 1 };
  s0 -> s2 [0, 65535] { R3484 += 1, R3391 += 1, R3392 += 1 };
  s0 -> s1 [71, 65535] { R3484 += 1, R3392 += 1 };
  s1 -> s1 [0, 69] { R3484 += 1, R3392 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3484 += 1 };
  s1 -> s1 [71, 65535] { R3484 += 1, R3392 += 1 };
  s2 -> s1 [0, 69] { R3484 += 1, R3392 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R3484 += 1, R3391 += 1, R3392 += 1 };
  s2 -> s1 [71, 65535] { R3484 += 1, R3392 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R3486 += 1, R3394 += 1, R22 += 1 };
  s0 -> s2 [0, 65535] { R3486 += 1, R3393 += 1, R3394 += 1 };
  s0 -> s0 [0, 65535] { R3485 += 1, R3486 += 1 };
  s1 -> s1 [0, 65535] { R3486 += 1, R3394 += 1, R22 += 1 };
  s1 -> s4 [0, 65535] { R3486 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R3486 += 1, R3394 += 1, R22 += 1 };
  s2 -> s2 [0, 65535] { R3486 += 1, R3393 += 1, R3394 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3486 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R3488 += 1, R3396 += 1 };
  s0 -> s2 [0, 65535] { R3488 += 1, R3395 += 1, R3396 += 1 };
  s0 -> s0 [0, 65535] { R3487 += 1, R3488 += 1 };
  s0 -> s1 [75, 65535] { R3488 += 1, R3396 += 1 };
  s1 -> s1 [0, 70] { R3488 += 1, R3396 += 1 };
  s1 -> s1 [0, 65535] { R3488 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R3488 += 1, R3396 += 1 };
  s2 -> s1 [0, 70] { R3488 += 1, R3396 += 1 };
  s2 -> s2 [0, 65535] { R3488 += 1, R3395 += 1, R3396 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R3488 += 1, R3396 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R3490 += 1, R3398 += 1, R138 += 1 };
  s0 -> s0 [0, 65535] { R3489 += 1, R3490 += 1 };
  s0 -> s2 [0, 65535] { R3490 += 1, R3397 += 1, R3398 += 1 };
  s1 -> s1 [0, 65535] { R3490 += 1, R3398 += 1, R138 += 1 };
  s1 -> s4 [0, 65535] { R3490 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R3490 += 1, R3398 += 1, R138 += 1 };
  s2 -> s2 [0, 65535] { R3490 += 1, R3397 += 1, R3398 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3490 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R3492 += 1, R3400 += 1 };
  s0 -> s2 [0, 65535] { R3492 += 1, R3400 += 1, R140 += 1 };
  s0 -> s3 [0, 65535] { R3492 += 1, R3399 += 1, R3400 += 1 };
  s0 -> s0 [0, 65535] { R3491 += 1, R3492 += 1 };
  s0 -> s1 [76, 65535] { R3492 += 1, R3400 += 1 };
  s1 -> s1 [0, 74] { R3492 += 1, R3400 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R3492 += 1 };
  s1 -> s1 [76, 65535] { R3492 += 1, R3400 += 1 };
  s2 -> s1 [0, 74] { R3492 += 1, R3400 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3492 += 1, R3400 += 1, R140 += 1 };
  s2 -> s5 [0, 65535] { R3492 += 1 };
  s2 -> s1 [76, 65535] { R3492 += 1, R3400 += 1 };
  s3 -> s1 [0, 74] { R3492 += 1, R3400 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R3492 += 1, R3400 += 1, R140 += 1 };
  s3 -> s3 [0, 65535] { R3492 += 1, R3399 += 1, R3400 += 1 };
  s3 -> s1 [76, 65535] { R3492 += 1, R3400 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3492 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s0 [0, 65535] { R3493 += 1, R3494 += 1 };
  s0 -> s1 [0, 65535] { R3494 += 1, R3402 += 1, R144 += 1, R145 += 1 };
  s0 -> s2 [0, 65535] { R3494 += 1, R3401 += 1, R3402 += 1 };
  s0 -> s3 [0, 65535] { R3494 += 1, R3402 += 1, R145 += 1, R146 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3494 += 1, R3402 += 1, R144 += 1, R145 += 1 };
  s1 -> s6 [0, 65535] { R3494 += 1 };
  s1 -> s3 [0, 65535] { R3494 += 1, R3402 += 1, R145 += 1, R146 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R3494 += 1, R3402 += 1, R144 += 1, R145 += 1 };
  s2 -> s2 [0, 65535] { R3494 += 1, R3401 += 1, R3402 += 1 };
  s2 -> s3 [0, 65535] { R3494 += 1, R3402 += 1, R145 += 1, R146 += 1 };
  s3 -> s4 [0, 65535] { R3494 += 1, R3402 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3494 += 1 };
  s3 -> s3 [0, 65535] { R3494 += 1, R3402 += 1, R145 += 1, R146 += 1 };
  s4 -> s4 [0, 65535] { R3494 += 1, R3402 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3494 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3494 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R3496 += 1, R3404 += 1, R150 += 1 };
  s0 -> s2 [0, 65535] { R3496 += 1, R3404 += 1, R149 += 1, R150 += 1 };
  s0 -> s3 [0, 65535] { R3496 += 1, R3403 += 1, R3404 += 1 };
  s0 -> s0 [0, 65535] { R3495 += 1, R3496 += 1 };
  s0 -> s4 [75, 75] { R3496 += 1, R3404 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R3496 += 1, R3404 += 1, R150 += 1 };
  s0 -> s1 [79, 65535] { R3496 += 1, R3404 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R3496 += 1, R3404 += 1, R150 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R3496 += 1 };
  s1 -> s1 [0, 65535] { R3496 += 1, R3404 += 1 };
  s1 -> s4 [75, 75] { R3496 += 1, R3404 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R3496 += 1, R3404 += 1, R150 += 1 };
  s1 -> s1 [79, 65535] { R3496 += 1, R3404 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R3496 += 1, R3404 += 1, R150 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R3496 += 1 };
  s2 -> s2 [0, 65535] { R3496 += 1, R3404 += 1, R149 += 1, R150 += 1 };
  s2 -> s4 [75, 75] { R3496 += 1, R3404 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R3496 += 1, R3404 += 1, R150 += 1 };
  s2 -> s1 [79, 65535] { R3496 += 1, R3404 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R3496 += 1, R3404 += 1, R150 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R3496 += 1, R3404 += 1, R149 += 1, R150 += 1 };
  s3 -> s3 [0, 65535] { R3496 += 1, R3403 += 1, R3404 += 1 };
  s3 -> s4 [75, 75] { R3496 += 1, R3404 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R3496 += 1, R3404 += 1, R150 += 1 };
  s3 -> s1 [79, 65535] { R3496 += 1, R3404 += 1, R150 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R3496 += 1 };
  s4 -> s4 [0, 65535] { R3496 += 1, R3404 += 1 };
  s5 -> s5 [0, 75] { R3496 += 1, R3404 += 1, R150 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R3496 += 1 };
  s5 -> s5 [0, 65535] { R3496 += 1, R3404 += 1 };
  s5 -> s5 [79, 65535] { R3496 += 1, R3404 += 1, R150 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3496 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s0 [0, 65535] { R3497 += 1, R3498 += 1 };
  s0 -> s1 [0, 65535] { R3498 += 1, R3405 += 1, R3406 += 1 };
  s0 -> s2 [0, 65535] { R3498 += 1, R3406 += 1, R154 += 1 };
  s0 -> s3 [0, 65535] { R3498 += 1, R3406 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R3498 += 1, R3405 += 1, R3406 += 1 };
  s1 -> s2 [0, 65535] { R3498 += 1, R3406 += 1, R154 += 1 };
  s1 -> s3 [0, 65535] { R3498 += 1, R3406 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3498 += 1, R3406 += 1, R154 += 1 };
  s2 -> s3 [0, 65535] { R3498 += 1, R3406 += 1 };
  s2 -> s5 [0, 65535] { R3498 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3498 += 1, R3406 += 1 };
  s3 -> s5 [0, 65535] { R3498 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3498 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R3500 += 1, R3408 += 1, R159 += 1, R160 += 1 };
  s0 -> s2 [0, 65535] { R3500 += 1, R3407 += 1, R3408 += 1 };
  s0 -> s3 [0, 65535] { R3500 += 1, R3408 += 1, R158 += 1, R159 += 1 };
  s0 -> s0 [0, 65535] { R3499 += 1, R3500 += 1 };
  s1 -> s4 [0, 65535] { R3500 += 1 };
  s1 -> s6 [0, 65535] { R3500 += 1, R3408 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3500 += 1, R3408 += 1, R159 += 1, R160 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R3500 += 1, R3408 += 1, R159 += 1, R160 += 1 };
  s2 -> s2 [0, 65535] { R3500 += 1, R3407 += 1, R3408 += 1 };
  s2 -> s3 [0, 65535] { R3500 += 1, R3408 += 1, R158 += 1, R159 += 1 };
  s3 -> s4 [0, 65535] { R3500 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R3500 += 1, R3408 += 1, R159 += 1, R160 += 1 };
  s3 -> s3 [0, 65535] { R3500 += 1, R3408 += 1, R158 += 1, R159 += 1 };
  s4 -> s4 [0, 65535] { R3500 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R3500 += 1 };
  s6 -> s6 [0, 65535] { R3500 += 1, R3408 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R3502 += 1, R3410 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R3502 += 1, R3410 += 1, R165 += 1, R166 += 1 };
  s0 -> s0 [0, 65535] { R3501 += 1, R3502 += 1 };
  s0 -> s3 [0, 65535] { R3502 += 1, R3409 += 1, R3410 += 1 };
  s0 -> s4 [0, 65535] { R3502 += 1, R3410 += 1, R164 += 1, R165 += 1 };
  s0 -> s1 [76, 65535] { R3502 += 1, R3410 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R3502 += 1, R3410 += 1, R165 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R3502 += 1 };
  s1 -> s1 [0, 65535] { R3502 += 1, R3410 += 1 };
  s1 -> s1 [76, 65535] { R3502 += 1, R3410 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R3502 += 1, R3410 += 1, R165 += 1 };
  s2 -> s2 [0, 65535] { R3502 += 1, R3410 += 1, R165 += 1, R166 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R3502 += 1 };
  s2 -> s7 [0, 65535] { R3502 += 1, R3410 += 1 };
  s2 -> s1 [76, 65535] { R3502 += 1, R3410 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R3502 += 1, R3410 += 1, R165 += 1 };
  s3 -> s2 [0, 65535] { R3502 += 1, R3410 += 1, R165 += 1, R166 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3502 += 1, R3409 += 1, R3410 += 1 };
  s3 -> s4 [0, 65535] { R3502 += 1, R3410 += 1, R164 += 1, R165 += 1 };
  s3 -> s1 [76, 65535] { R3502 += 1, R3410 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R3502 += 1, R3410 += 1, R165 += 1 };
  s4 -> s2 [0, 65535] { R3502 += 1, R3410 += 1, R165 += 1, R166 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3502 += 1 };
  s4 -> s4 [0, 65535] { R3502 += 1, R3410 += 1, R164 += 1, R165 += 1 };
  s4 -> s1 [76, 65535] { R3502 += 1, R3410 += 1, R165 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3502 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R3502 += 1 };
  s7 -> s7 [0, 65535] { R3502 += 1, R3410 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R3504 += 1, R3412 += 1, R172 += 1, R174 += 1 };
  s0 -> s2 [0, 65535] { R3504 += 1, R3411 += 1, R3412 += 1 };
  s0 -> s3 [0, 65535] { R3504 += 1, R3412 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s0 [0, 65535] { R3503 += 1, R3504 += 1 };
  s0 -> s4 [0, 65535] { R3504 += 1, R3412 += 1, R171 += 1, R172 += 1 };
  s0 -> s1 [76, 65535] { R3504 += 1, R3412 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R3504 += 1, R3412 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 65535] { R3504 += 1, R3412 += 1, R172 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R3504 += 1 };
  s1 -> s7 [0, 65535] { R3504 += 1, R3412 += 1 };
  s1 -> s1 [76, 65535] { R3504 += 1, R3412 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R3504 += 1, R3412 += 1, R172 += 1, R174 += 1 };
  s2 -> s2 [0, 65535] { R3504 += 1, R3411 += 1, R3412 += 1 };
  s2 -> s3 [0, 65535] { R3504 += 1, R3412 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s4 [0, 65535] { R3504 += 1, R3412 += 1, R171 += 1, R172 += 1 };
  s2 -> s1 [76, 65535] { R3504 += 1, R3412 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R3504 += 1, R3412 += 1, R172 += 1, R174 += 1 };
  s3 -> s3 [0, 65535] { R3504 += 1, R3412 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3504 += 1 };
  s3 -> s7 [0, 65535] { R3504 += 1, R3412 += 1 };
  s3 -> s1 [76, 65535] { R3504 += 1, R3412 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R3504 += 1, R3412 += 1, R172 += 1, R174 += 1 };
  s4 -> s3 [0, 65535] { R3504 += 1, R3412 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3504 += 1 };
  s4 -> s4 [0, 65535] { R3504 += 1, R3412 += 1, R171 += 1, R172 += 1 };
  s4 -> s1 [76, 65535] { R3504 += 1, R3412 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3504 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R3504 += 1 };
  s7 -> s7 [0, 65535] { R3504 += 1, R3412 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s0 [0, 65535] { R3505 += 1, R3506 += 1 };
  s0 -> s1 [0, 65535] { R3506 += 1, R3414 += 1 };
  s0 -> s2 [0, 65535] { R3506 += 1, R3413 += 1, R3414 += 1 };
  s1 -> s4 [0, 65535] { R3506 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3506 += 1, R3414 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R3506 += 1, R3414 += 1 };
  s2 -> s2 [0, 65535] { R3506 += 1, R3413 += 1, R3414 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3506 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R3508 += 1, R3416 += 1, R190 += 1, R192 += 1 };
  s0 -> s2 [0, 65535] { R3508 += 1, R3415 += 1, R3416 += 1 };
  s0 -> s0 [0, 65535] { R3507 += 1, R3508 += 1 };
  s0 -> s3 [0, 65535] { R3508 += 1, R3416 += 1, R189 += 1, R190 += 1 };
  s0 -> s4 [0, 65535] { R3508 += 1, R3416 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s0 -> s1 [78, 65535] { R3508 += 1, R3416 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 75] { R3508 += 1, R3416 += 1, R190 += 1, R192 += 1 };
  s1 -> s5 [0, 65535] { R3508 += 1 };
  s1 -> s1 [0, 65535] { R3508 += 1, R3416 += 1, R190 += 1 };
  s1 -> s6 [0, 65535] { R3508 += 1, R3416 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [78, 65535] { R3508 += 1, R3416 += 1, R190 += 1, R192 += 1 };
  s2 -> s1 [0, 75] { R3508 += 1, R3416 += 1, R190 += 1, R192 += 1 };
  s2 -> s2 [0, 65535] { R3508 += 1, R3415 += 1, R3416 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s3 [0, 65535] { R3508 += 1, R3416 += 1, R189 += 1, R190 += 1 };
  s2 -> s4 [0, 65535] { R3508 += 1, R3416 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s2 -> s1 [78, 65535] { R3508 += 1, R3416 += 1, R190 += 1, R192 += 1 };
  s3 -> s1 [0, 75] { R3508 += 1, R3416 += 1, R190 += 1, R192 += 1 };
  s3 -> s5 [0, 65535] { R3508 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R3508 += 1, R3416 += 1, R189 += 1, R190 += 1 };
  s3 -> s4 [0, 65535] { R3508 += 1, R3416 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s3 -> s1 [78, 65535] { R3508 += 1, R3416 += 1, R190 += 1, R192 += 1 };
  s4 -> s1 [0, 75] { R3508 += 1, R3416 += 1, R190 += 1, R192 += 1 };
  s4 -> s5 [0, 65535] { R3508 += 1 };
  s4 -> s6 [0, 65535] { R3508 += 1, R3416 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R3508 += 1, R3416 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s4 -> s1 [78, 65535] { R3508 += 1, R3416 += 1, R190 += 1, R192 += 1 };
  s5 -> s5 [0, 65535] { R3508 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s5 [0, 65535] { R3508 += 1 };
  s6 -> s6 [0, 65535] { R3508 += 1, R3416 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R3510 += 1, R3417 += 1, R3418 += 1 };
  s0 -> s2 [0, 65535] { R3510 += 1, R3418 += 1 };
  s0 -> s0 [0, 65535] { R3509 += 1, R3510 += 1 };
  s0 -> s3 [0, 65535] { R3510 += 1, R3418 += 1, R2747 += 1, R2749 += 1, R2750 += 1 };
  s0 -> s4 [0, 65535] { R3510 += 1, R3418 += 1, R2747 += 1 };
  s1 -> s1 [0, 65535] { R3510 += 1, R3417 += 1, R3418 += 1 };
  s1 -> s2 [0, 65535] { R3510 += 1, R3418 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R3510 += 1, R3418 += 1, R2747 += 1, R2749 += 1, R2750 += 1 };
  s1 -> s4 [0, 65535] { R3510 += 1, R3418 += 1, R2747 += 1 };
  s2 -> s2 [0, 65535] { R3510 += 1, R3418 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R3510 += 1 };
  s3 -> s2 [0, 65535] { R3510 += 1, R3418 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3510 += 1, R3418 += 1, R2747 += 1, R2749 += 1, R2750 += 1 };
  s3 -> s4 [0, 65535] { R3510 += 1, R3418 += 1, R2747 += 1 };
  s3 -> s6 [0, 65535] { R3510 += 1 };
  s4 -> s2 [0, 65535] { R3510 += 1, R3418 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3510 += 1, R3418 += 1, R2747 += 1 };
  s4 -> s6 [0, 65535] { R3510 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3510 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 75] { R3512 += 1, R3420 += 1, R3388 += 1, R3390 += 1 };
  s0 -> s0 [0, 65535] { R3511 += 1, R3512 += 1 };
  s0 -> s2 [0, 65535] { R3512 += 1, R3419 += 1, R3420 += 1 };
  s0 -> s3 [78, 78] { R3512 += 1, R3420 += 1, R3388 += 1, R3390 += 1 };
  s0 -> s1 [79, 65535] { R3512 += 1, R3420 += 1, R3388 += 1, R3390 += 1 };
  s1 -> s1 [0, 75] { R3512 += 1, R3420 += 1, R3388 += 1, R3390 += 1 };
  s1 -> s3 [78, 78] { R3512 += 1, R3420 += 1, R3388 += 1, R3390 += 1 };
  s1 -> s1 [79, 65535] { R3512 += 1, R3420 += 1, R3388 += 1, R3390 += 1 };
  s2 -> s1 [0, 75] { R3512 += 1, R3420 += 1, R3388 += 1, R3390 += 1 };
  s2 -> s2 [0, 65535] { R3512 += 1, R3419 += 1, R3420 += 1 };
  s2 -> s3 [78, 78] { R3512 += 1, R3420 += 1, R3388 += 1, R3390 += 1 };
  s2 -> s1 [79, 65535] { R3512 += 1, R3420 += 1, R3388 += 1, R3390 += 1 };
  s3 -> s3 [0, 75] { R3512 += 1, R3420 += 1, R3388 += 1, R3390 += 1 };
  s3 -> s3 [0, 65535] { R3512 += 1, R3420 += 1, R3388 += 1 };
  s3 -> s4 [0, 65535] { R3512 += 1, R3420 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3512 += 1 };
  s3 -> s3 [78, 65535] { R3512 += 1, R3420 += 1, R3388 += 1, R3390 += 1 };
  s4 -> s4 [0, 65535] { R3512 += 1, R3420 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3512 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3512 += 1 };
  accepting s3, s4, s5, s6;
};
automaton value2_40 {
  init s0;
  s0 -> s0 [0, 65535] { R3513 += 1, R3514 += 1 };
  s0 -> s1 [0, 65535] { R3514 += 1, R3449 += 1, R3450 += 1 };
  s0 -> s2 [0, 65535] { R3514 += 1, R3450 += 1, R23 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3514 += 1, R3449 += 1, R3450 += 1 };
  s1 -> s2 [0, 65535] { R3514 += 1, R3450 += 1, R23 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R3514 += 1 };
  s2 -> s2 [0, 65535] { R3514 += 1, R3450 += 1, R23 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3514 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R3516 += 1, R3452 += 1 };
  s0 -> s0 [0, 65535] { R3515 += 1, R3516 += 1 };
  s0 -> s2 [0, 65535] { R3516 += 1, R3451 += 1, R3452 += 1 };
  s0 -> s3 [70, 70] { R3516 += 1, R3452 += 1 };
  s0 -> s4 [70, 70] { R3516 += 1, R3452 += 1 };
  s0 -> s5 [75, 75] { R3516 += 1, R3452 += 1 };
  s0 -> s1 [76, 65535] { R3516 += 1, R3452 += 1 };
  s1 -> s1 [0, 69] { R3516 += 1, R3452 += 1 };
  s1 -> s3 [70, 70] { R3516 += 1, R3452 += 1 };
  s1 -> s4 [70, 70] { R3516 += 1, R3452 += 1 };
  s1 -> s5 [75, 75] { R3516 += 1, R3452 += 1 };
  s1 -> s1 [76, 65535] { R3516 += 1, R3452 += 1 };
  s2 -> s1 [0, 69] { R3516 += 1, R3452 += 1 };
  s2 -> s2 [0, 65535] { R3516 += 1, R3451 += 1, R3452 += 1 };
  s2 -> s3 [70, 70] { R3516 += 1, R3452 += 1 };
  s2 -> s4 [70, 70] { R3516 += 1, R3452 += 1 };
  s2 -> s5 [75, 75] { R3516 += 1, R3452 += 1 };
  s2 -> s1 [76, 65535] { R3516 += 1, R3452 += 1 };
  s4 -> s4 [0, 70] { R3516 += 1, R3452 += 1 };
  s4 -> s7 [75, 75] { R3516 += 1, R3452 += 1 };
  s4 -> s4 [76, 65535] { R3516 += 1, R3452 += 1 };
  s5 -> s5 [0, 69] { R3516 += 1, R3452 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3516 += 1 };
  s5 -> s7 [70, 70] { R3516 += 1, R3452 += 1 };
  s5 -> s8 [70, 70] { R3516 += 1, R3452 += 1 };
  s5 -> s5 [75, 65535] { R3516 += 1, R3452 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R3516 += 1, R3452 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3516 += 1 };
  s7 -> s7 [75, 65535] { R3516 += 1, R3452 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R3516 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R3518 += 1, R3454 += 1, R137 += 1 };
  s0 -> s2 [0, 65535] { R3518 += 1, R3453 += 1, R3454 += 1 };
  s0 -> s0 [0, 65535] { R3517 += 1, R3518 += 1 };
  s0 -> s3 [70, 70] { R3518 += 1, R3454 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R3518 += 1, R3454 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R3518 += 1, R3454 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R3518 += 1, R3454 += 1, R137 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3518 += 1 };
  s1 -> s3 [70, 70] { R3518 += 1, R3454 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R3518 += 1, R3454 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R3518 += 1, R3454 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R3518 += 1, R3454 += 1, R137 += 1 };
  s2 -> s2 [0, 65535] { R3518 += 1, R3453 += 1, R3454 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R3518 += 1, R3454 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R3518 += 1, R3454 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R3518 += 1, R3454 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R3518 += 1, R3454 += 1, R137 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3518 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3518 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3518 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R3520 += 1, R3456 += 1, R139 += 1 };
  s0 -> s2 [0, 65535] { R3520 += 1, R3455 += 1, R3456 += 1 };
  s0 -> s0 [0, 65535] { R3519 += 1, R3520 += 1 };
  s0 -> s3 [70, 70] { R3520 += 1, R3456 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R3520 += 1, R3456 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R3520 += 1, R3456 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R3520 += 1, R3456 += 1, R139 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3520 += 1 };
  s1 -> s3 [70, 70] { R3520 += 1, R3456 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R3520 += 1, R3456 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R3520 += 1, R3456 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R3520 += 1, R3456 += 1, R139 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3520 += 1, R3455 += 1, R3456 += 1 };
  s2 -> s3 [70, 70] { R3520 += 1, R3456 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R3520 += 1, R3456 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R3520 += 1, R3456 += 1, R139 += 1 };
  s3 -> s3 [0, 65535] { R3520 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3520 += 1 };
  s4 -> s4 [0, 65535] { R3520 += 1, R3456 += 1, R139 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3520 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R3522 += 1, R3458 += 1, R141 += 1, R142 += 1 };
  s0 -> s2 [0, 65535] { R3522 += 1, R3457 += 1, R3458 += 1 };
  s0 -> s0 [0, 65535] { R3521 += 1, R3522 += 1 };
  s0 -> s3 [70, 70] { R3522 += 1, R3458 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R3522 += 1, R3458 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R3522 += 1, R3458 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R3522 += 1, R3458 += 1, R141 += 1, R142 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3522 += 1 };
  s1 -> s3 [70, 70] { R3522 += 1, R3458 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R3522 += 1, R3458 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R3522 += 1, R3458 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R3522 += 1, R3458 += 1, R141 += 1, R142 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3522 += 1, R3457 += 1, R3458 += 1 };
  s2 -> s3 [70, 70] { R3522 += 1, R3458 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R3522 += 1, R3458 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R3522 += 1, R3458 += 1, R141 += 1, R142 += 1 };
  s3 -> s3 [0, 65535] { R3522 += 1, R3458 += 1, R141 += 1, R142 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3522 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3522 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3522 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R3524 += 1, R3460 += 1, R147 += 1, R148 += 1 };
  s0 -> s2 [0, 65535] { R3524 += 1, R3459 += 1, R3460 += 1 };
  s0 -> s0 [0, 65535] { R3523 += 1, R3524 += 1 };
  s0 -> s3 [70, 70] { R3524 += 1, R3460 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R3524 += 1, R3460 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R3524 += 1, R3460 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R3524 += 1, R3460 += 1, R147 += 1, R148 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3524 += 1 };
  s1 -> s3 [70, 70] { R3524 += 1, R3460 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R3524 += 1, R3460 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R3524 += 1, R3460 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R3524 += 1, R3460 += 1, R147 += 1, R148 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3524 += 1, R3459 += 1, R3460 += 1 };
  s2 -> s3 [70, 70] { R3524 += 1, R3460 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R3524 += 1, R3460 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R3524 += 1, R3460 += 1, R147 += 1, R148 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3524 += 1, R3460 += 1, R147 += 1, R148 += 1 };
  s3 -> s6 [0, 65535] { R3524 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3524 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3524 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R3526 += 1, R3462 += 1, R151 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R3526 += 1, R3462 += 1, R152 += 1 };
  s0 -> s0 [0, 65535] { R3525 += 1, R3526 += 1 };
  s0 -> s3 [0, 65535] { R3526 += 1, R3461 += 1, R3462 += 1 };
  s0 -> s4 [70, 70] { R3526 += 1, R3462 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R3526 += 1, R3462 += 1, R151 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R3526 += 1, R3462 += 1, R151 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R3526 += 1, R3462 += 1, R152 += 1 };
  s0 -> s2 [71, 74] { R3526 += 1, R3462 += 1, R152 += 1 };
  s0 -> s1 [71, 65535] { R3526 += 1, R3462 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R3526 += 1, R3462 += 1, R152 += 1 };
  s0 -> s2 [76, 65535] { R3526 += 1, R3462 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R3526 += 1, R3462 += 1, R151 += 1, R152 += 1 };
  s1 -> s2 [0, 69] { R3526 += 1, R3462 += 1, R152 += 1 };
  s1 -> s4 [70, 70] { R3526 += 1, R3462 += 1, R152 += 1 };
  s1 -> s5 [70, 70] { R3526 += 1, R3462 += 1, R151 += 1, R152 += 1 };
  s1 -> s6 [70, 70] { R3526 += 1, R3462 += 1, R151 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R3526 += 1, R3462 += 1, R152 += 1 };
  s1 -> s2 [71, 74] { R3526 += 1, R3462 += 1, R152 += 1 };
  s1 -> s1 [71, 65535] { R3526 += 1, R3462 += 1, R151 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R3526 += 1, R3462 += 1, R152 += 1 };
  s1 -> s2 [76, 65535] { R3526 += 1, R3462 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R3526 += 1, R3462 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R3526 += 1, R3462 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R3526 += 1, R3462 += 1, R152 += 1 };
  s2 -> s2 [71, 74] { R3526 += 1, R3462 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R3526 += 1, R3462 += 1, R152 += 1 };
  s2 -> s2 [76, 65535] { R3526 += 1, R3462 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R3526 += 1, R3462 += 1, R151 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R3526 += 1, R3462 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R3526 += 1, R3461 += 1, R3462 += 1 };
  s3 -> s4 [70, 70] { R3526 += 1, R3462 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R3526 += 1, R3462 += 1, R151 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R3526 += 1, R3462 += 1, R151 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R3526 += 1, R3462 += 1, R152 += 1 };
  s3 -> s2 [71, 74] { R3526 += 1, R3462 += 1, R152 += 1 };
  s3 -> s1 [71, 65535] { R3526 += 1, R3462 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R3526 += 1, R3462 += 1, R152 += 1 };
  s3 -> s2 [76, 65535] { R3526 += 1, R3462 += 1, R152 += 1 };
  s5 -> s7 [0, 74] { R3526 += 1, R3462 += 1, R152 += 1 };
  s5 -> s5 [0, 65535] { R3526 += 1, R3462 += 1, R151 += 1, R152 += 1 };
  s5 -> s10 [75, 75] { R3526 += 1, R3462 += 1, R152 += 1 };
  s5 -> s7 [76, 65535] { R3526 += 1, R3462 += 1, R152 += 1 };
  s7 -> s7 [0, 74] { R3526 += 1, R3462 += 1, R152 += 1 };
  s7 -> s10 [75, 75] { R3526 += 1, R3462 += 1, R152 += 1 };
  s7 -> s7 [76, 65535] { R3526 += 1, R3462 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R3526 += 1, R3462 += 1, R152 += 1 };
  s8 -> s8 [0, 65535] { R3526 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R3526 += 1, R3462 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R3526 += 1, R3462 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R3526 += 1, R3462 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s12 [0, 65535] { R3526 += 1 };
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R3526 += 1, R3462 += 1, R152 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R3526 += 1 };
  s12 -> s12 [0, 65535] { R3526 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R3528 += 1, R3464 += 1, R155 += 1, R156 += 1 };
  s0 -> s2 [0, 65535] { R3528 += 1, R3463 += 1, R3464 += 1 };
  s0 -> s0 [0, 65535] { R3527 += 1, R3528 += 1 };
  s0 -> s3 [70, 70] { R3528 += 1, R3464 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R3528 += 1, R3464 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R3528 += 1, R3464 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R3528 += 1, R3464 += 1, R155 += 1, R156 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R3528 += 1 };
  s1 -> s3 [70, 70] { R3528 += 1, R3464 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R3528 += 1, R3464 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R3528 += 1, R3464 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R3528 += 1, R3464 += 1, R155 += 1, R156 += 1 };
  s2 -> s2 [0, 65535] { R3528 += 1, R3463 += 1, R3464 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R3528 += 1, R3464 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R3528 += 1, R3464 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R3528 += 1, R3464 += 1, R155 += 1, R156 += 1 };
  s3 -> s3 [0, 65535] { R3528 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3528 += 1 };
  s4 -> s4 [0, 65535] { R3528 += 1, R3464 += 1, R155 += 1, R156 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3528 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R3530 += 1, R3466 += 1, R161 += 1, R162 += 1 };
  s0 -> s2 [0, 65535] { R3530 += 1, R3465 += 1, R3466 += 1 };
  s0 -> s0 [0, 65535] { R3529 += 1, R3530 += 1 };
  s0 -> s3 [70, 70] { R3530 += 1, R3466 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R3530 += 1, R3466 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R3530 += 1, R3466 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R3530 += 1, R3466 += 1, R161 += 1, R162 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3530 += 1 };
  s1 -> s3 [70, 70] { R3530 += 1, R3466 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R3530 += 1, R3466 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R3530 += 1, R3466 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R3530 += 1, R3466 += 1, R161 += 1, R162 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3530 += 1, R3465 += 1, R3466 += 1 };
  s2 -> s3 [70, 70] { R3530 += 1, R3466 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R3530 += 1, R3466 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R3530 += 1, R3466 += 1, R161 += 1, R162 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3530 += 1, R3466 += 1, R161 += 1, R162 += 1 };
  s3 -> s6 [0, 65535] { R3530 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3530 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3530 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R3532 += 1, R3468 += 1, R167 += 1, R168 += 1 };
  s0 -> s0 [0, 65535] { R3531 += 1, R3532 += 1 };
  s0 -> s2 [0, 65535] { R3532 += 1, R3467 += 1, R3468 += 1 };
  s0 -> s3 [70, 70] { R3532 += 1, R3468 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R3532 += 1, R3468 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R3532 += 1, R3468 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R3532 += 1, R3468 += 1, R167 += 1, R168 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3532 += 1 };
  s1 -> s3 [70, 70] { R3532 += 1, R3468 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R3532 += 1, R3468 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R3532 += 1, R3468 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R3532 += 1, R3468 += 1, R167 += 1, R168 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3532 += 1, R3467 += 1, R3468 += 1 };
  s2 -> s3 [70, 70] { R3532 += 1, R3468 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R3532 += 1, R3468 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R3532 += 1, R3468 += 1, R167 += 1, R168 += 1 };
  s3 -> s3 [0, 65535] { R3532 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3532 += 1, R3468 += 1, R167 += 1, R168 += 1 };
  s4 -> s6 [0, 65535] { R3532 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3532 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R3534 += 1, R3470 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s2 [0, 69] { R3534 += 1, R3470 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s3 [0, 69] { R3534 += 1, R3470 += 1, R175 += 1, R176 += 1 };
  s0 -> s4 [0, 65535] { R3534 += 1, R3469 += 1, R3470 += 1 };
  s0 -> s0 [0, 65535] { R3533 += 1, R3534 += 1 };
  s0 -> s5 [70, 70] { R3534 += 1, R3470 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s6 [70, 70] { R3534 += 1, R3470 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s7 [70, 70] { R3534 += 1, R3470 += 1, R175 += 1, R176 += 1 };
  s0 -> s8 [70, 70] { R3534 += 1, R3470 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s9 [70, 70] { R3534 += 1, R3470 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s10 [70, 70] { R3534 += 1, R3470 += 1, R175 += 1, R176 += 1 };
  s0 -> s1 [71, 65535] { R3534 += 1, R3470 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s2 [71, 65535] { R3534 += 1, R3470 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s3 [71, 65535] { R3534 += 1, R3470 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [0, 69] { R3534 += 1, R3470 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s15 [0, 69] { R3534 += 1, R3470 += 1 };
  s1 -> s17 [0, 69] { R3534 += 1, R3470 += 1, R176 += 1 };
  s1 -> s14 [70, 70] { R3534 += 1, R3470 += 1, R176 += 1 };
  s1 -> s5 [70, 70] { R3534 += 1, R3470 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s6 [70, 70] { R3534 += 1, R3470 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s11 [70, 70] { R3534 += 1, R3470 += 1 };
  s1 -> s18 [70, 70] { R3534 += 1, R3470 += 1, R176 += 1 };
  s1 -> s16 [70, 70] { R3534 += 1, R3470 += 1 };
  s1 -> s1 [71, 65535] { R3534 += 1, R3470 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s15 [71, 65535] { R3534 += 1, R3470 += 1 };
  s1 -> s17 [71, 65535] { R3534 += 1, R3470 += 1, R176 += 1 };
  s2 -> s1 [0, 69] { R3534 += 1, R3470 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [0, 69] { R3534 += 1, R3470 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s15 [0, 69] { R3534 += 1, R3470 += 1 };
  s2 -> s5 [70, 70] { R3534 += 1, R3470 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s6 [70, 70] { R3534 += 1, R3470 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s8 [70, 70] { R3534 += 1, R3470 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s11 [70, 70] { R3534 += 1, R3470 += 1 };
  s2 -> s9 [70, 70] { R3534 += 1, R3470 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s16 [70, 70] { R3534 += 1, R3470 += 1 };
  s2 -> s1 [71, 65535] { R3534 += 1, R3470 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [71, 65535] { R3534 += 1, R3470 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s15 [71, 65535] { R3534 += 1, R3470 += 1 };
  s3 -> s1 [0, 69] { R3534 += 1, R3470 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s2 [0, 69] { R3534 += 1, R3470 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s3 [0, 69] { R3534 += 1, R3470 += 1, R175 += 1, R176 += 1 };
  s3 -> s5 [70, 70] { R3534 += 1, R3470 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s6 [70, 70] { R3534 += 1, R3470 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s7 [70, 70] { R3534 += 1, R3470 += 1, R175 += 1, R176 += 1 };
  s3 -> s8 [70, 70] { R3534 += 1, R3470 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s9 [70, 70] { R3534 += 1, R3470 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s10 [70, 70] { R3534 += 1, R3470 += 1, R175 += 1, R176 += 1 };
  s3 -> s1 [71, 65535] { R3534 += 1, R3470 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s2 [71, 65535] { R3534 += 1, R3470 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s3 [71, 65535] { R3534 += 1, R3470 += 1, R175 += 1, R176 += 1 };
  s4 -> s1 [0, 69] { R3534 += 1, R3470 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s2 [0, 69] { R3534 += 1, R3470 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s3 [0, 69] { R3534 += 1, R3470 += 1, R175 += 1, R176 += 1 };
  s4 -> s4 [0, 65535] { R3534 += 1, R3469 += 1, R3470 += 1 };
  s4 -> s5 [70, 70] { R3534 += 1, R3470 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s6 [70, 70] { R3534 += 1, R3470 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s7 [70, 70] { R3534 += 1, R3470 += 1, R175 += 1, R176 += 1 };
  s4 -> s8 [70, 70] { R3534 += 1, R3470 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s9 [70, 70] { R3534 += 1, R3470 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s10 [70, 70] { R3534 += 1, R3470 += 1, R175 += 1, R176 += 1 };
  s4 -> s1 [71, 65535] { R3534 += 1, R3470 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s2 [71, 65535] { R3534 += 1, R3470 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s3 [71, 65535] { R3534 += 1, R3470 += 1, R175 += 1, R176 += 1 };
  s6 -> s14 [0, 65535] { R3534 += 1, R3470 += 1, R176 += 1 };
  s6 -> s6 [0, 65535] { R3534 += 1, R3470 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s6 -> s11 [0, 65535] { R3534 += 1, R3470 += 1 };
  s9 -> s6 [0, 65535] { R3534 += 1, R3470 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s9 -> s11 [0, 65535] { R3534 += 1, R3470 += 1 };
  s9 -> s9 [0, 65535] { R3534 += 1, R3470 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s10 -> s6 [0, 65535] { R3534 += 1, R3470 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s10 -> s9 [0, 65535] { R3534 += 1, R3470 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s10 -> s10 [0, 65535] { R3534 += 1, R3470 += 1, R175 += 1, R176 += 1 };
  s11 -> s12 [0, 65535] { R3534 += 1 };
  s11 -> s11 [0, 65535] { R3534 += 1, R3470 += 1 };
  s11 -> s13 [0, 65535];
  s12 -> s12 [0, 65535] { R3534 += 1 };
  s12 -> s13 [0, 65535];
  s13 -> s13 [0, 65535];
  s14 -> s14 [0, 65535] { R3534 += 1, R3470 += 1, R176 += 1 };
  s14 -> s11 [0, 65535] { R3534 += 1, R3470 += 1 };
  s15 -> s15 [0, 69] { R3534 += 1, R3470 += 1 };
  s15 -> s15 [0, 65535] { R3534 += 1 };
  s15 -> s13 [0, 65535];
  s15 -> s11 [70, 70] { R3534 += 1, R3470 += 1 };
  s15 -> s16 [70, 70] { R3534 += 1, R3470 += 1 };
  s15 -> s15 [71, 65535] { R3534 += 1, R3470 += 1 };
  s16 -> s16 [0, 65535] { R3534 += 1 };
  s16 -> s13 [0, 65535];
  s17 -> s15 [0, 69] { R3534 += 1, R3470 += 1 };
  s17 -> s17 [0, 69] { R3534 += 1, R3470 += 1, R176 += 1 };
  s17 -> s14 [70, 70] { R3534 += 1, R3470 += 1, R176 += 1 };
  s17 -> s11 [70, 70] { R3534 += 1, R3470 += 1 };
  s17 -> s18 [70, 70] { R3534 += 1, R3470 += 1, R176 += 1 };
  s17 -> s16 [70, 70] { R3534 += 1, R3470 += 1 };
  s17 -> s15 [71, 65535] { R3534 += 1, R3470 += 1 };
  s17 -> s17 [71, 65535] { R3534 += 1, R3470 += 1, R176 += 1 };
  accepting s16, s12, s13, s15, s11;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R3536 += 1, R3472 += 1, R185 += 1, R186 += 1 };
  s0 -> s2 [0, 65535] { R3536 += 1, R3471 += 1, R3472 += 1 };
  s0 -> s0 [0, 65535] { R3535 += 1, R3536 += 1 };
  s0 -> s3 [70, 70] { R3536 += 1, R3472 += 1, R185 += 1, R186 += 1 };
  s0 -> s4 [70, 70] { R3536 += 1, R3472 += 1, R185 += 1, R186 += 1 };
  s0 -> s1 [71, 65535] { R3536 += 1, R3472 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 69] { R3536 += 1, R3472 += 1, R185 += 1, R186 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3536 += 1 };
  s1 -> s3 [70, 70] { R3536 += 1, R3472 += 1, R185 += 1, R186 += 1 };
  s1 -> s4 [70, 70] { R3536 += 1, R3472 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [71, 65535] { R3536 += 1, R3472 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [0, 69] { R3536 += 1, R3472 += 1, R185 += 1, R186 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3536 += 1, R3471 += 1, R3472 += 1 };
  s2 -> s3 [70, 70] { R3536 += 1, R3472 += 1, R185 += 1, R186 += 1 };
  s2 -> s4 [70, 70] { R3536 += 1, R3472 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [71, 65535] { R3536 += 1, R3472 += 1, R185 += 1, R186 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3536 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3536 += 1, R3472 += 1, R185 += 1, R186 += 1 };
  s4 -> s6 [0, 65535] { R3536 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3536 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R3538 += 1, R3474 += 1, R2741 += 1, R2742 += 1 };
  s0 -> s2 [0, 69] { R3538 += 1, R3474 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s0 -> s3 [0, 69] { R3538 += 1, R3474 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s0 -> s0 [0, 65535] { R3537 += 1, R3538 += 1 };
  s0 -> s4 [0, 65535] { R3538 += 1, R3473 += 1, R3474 += 1 };
  s0 -> s5 [70, 70] { R3538 += 1, R3474 += 1, R2741 += 1, R2742 += 1 };
  s0 -> s6 [70, 70] { R3538 += 1, R3474 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s0 -> s7 [70, 70] { R3538 += 1, R3474 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s0 -> s8 [70, 70] { R3538 += 1, R3474 += 1, R2741 += 1, R2742 += 1 };
  s0 -> s9 [70, 70] { R3538 += 1, R3474 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s0 -> s10 [70, 70] { R3538 += 1, R3474 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s0 -> s1 [71, 65535] { R3538 += 1, R3474 += 1, R2741 += 1, R2742 += 1 };
  s0 -> s2 [71, 65535] { R3538 += 1, R3474 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s0 -> s3 [71, 65535] { R3538 += 1, R3474 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s1 -> s1 [0, 69] { R3538 += 1, R3474 += 1, R2741 += 1, R2742 += 1 };
  s1 -> s2 [0, 69] { R3538 += 1, R3474 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s1 -> s3 [0, 69] { R3538 += 1, R3474 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s1 -> s5 [70, 70] { R3538 += 1, R3474 += 1, R2741 += 1, R2742 += 1 };
  s1 -> s6 [70, 70] { R3538 += 1, R3474 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s1 -> s7 [70, 70] { R3538 += 1, R3474 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s1 -> s8 [70, 70] { R3538 += 1, R3474 += 1, R2741 += 1, R2742 += 1 };
  s1 -> s9 [70, 70] { R3538 += 1, R3474 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s1 -> s10 [70, 70] { R3538 += 1, R3474 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s1 -> s1 [71, 65535] { R3538 += 1, R3474 += 1, R2741 += 1, R2742 += 1 };
  s1 -> s2 [71, 65535] { R3538 += 1, R3474 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s1 -> s3 [71, 65535] { R3538 += 1, R3474 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s2 -> s2 [0, 69] { R3538 += 1, R3474 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s2 -> s2 [0, 65535] { R3538 += 1 };
  s2 -> s12 [0, 65535];
  s2 -> s6 [70, 70] { R3538 += 1, R3474 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s2 -> s7 [70, 70] { R3538 += 1, R3474 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s2 -> s2 [71, 65535] { R3538 += 1, R3474 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s3 -> s2 [0, 69] { R3538 += 1, R3474 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s3 -> s3 [0, 69] { R3538 += 1, R3474 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s3 -> s6 [70, 70] { R3538 += 1, R3474 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s3 -> s7 [70, 70] { R3538 += 1, R3474 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s3 -> s9 [70, 70] { R3538 += 1, R3474 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s3 -> s10 [70, 70] { R3538 += 1, R3474 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s3 -> s2 [71, 65535] { R3538 += 1, R3474 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s3 -> s3 [71, 65535] { R3538 += 1, R3474 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s4 -> s1 [0, 69] { R3538 += 1, R3474 += 1, R2741 += 1, R2742 += 1 };
  s4 -> s2 [0, 69] { R3538 += 1, R3474 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s4 -> s3 [0, 69] { R3538 += 1, R3474 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s4 -> s4 [0, 65535] { R3538 += 1, R3473 += 1, R3474 += 1 };
  s4 -> s5 [70, 70] { R3538 += 1, R3474 += 1, R2741 += 1, R2742 += 1 };
  s4 -> s6 [70, 70] { R3538 += 1, R3474 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s4 -> s7 [70, 70] { R3538 += 1, R3474 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s4 -> s8 [70, 70] { R3538 += 1, R3474 += 1, R2741 += 1, R2742 += 1 };
  s4 -> s9 [70, 70] { R3538 += 1, R3474 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s4 -> s10 [70, 70] { R3538 += 1, R3474 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s4 -> s1 [71, 65535] { R3538 += 1, R3474 += 1, R2741 += 1, R2742 += 1 };
  s4 -> s2 [71, 65535] { R3538 += 1, R3474 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s4 -> s3 [71, 65535] { R3538 += 1, R3474 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s6 -> s6 [0, 65535] { R3538 += 1 };
  s6 -> s12 [0, 65535];
  s7 -> s7 [0, 65535] { R3538 += 1, R3474 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s7 -> s11 [0, 65535] { R3538 += 1 };
  s7 -> s12 [0, 65535];
  s8 -> s7 [0, 65535] { R3538 += 1, R3474 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s8 -> s8 [0, 65535] { R3538 += 1, R3474 += 1, R2741 += 1, R2742 += 1 };
  s8 -> s10 [0, 65535] { R3538 += 1, R3474 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s10 -> s7 [0, 65535] { R3538 += 1, R3474 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s10 -> s10 [0, 65535] { R3538 += 1, R3474 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s11 -> s11 [0, 65535] { R3538 += 1 };
  s11 -> s12 [0, 65535];
  s12 -> s12 [0, 65535];
  accepting s12, s2, s6, s7, s11;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R3540 += 1, R3476 += 1, R3384 += 1, R3385 += 1, R3386 += 1 };
  s0 -> s2 [0, 69] { R3540 += 1, R3476 += 1, R3383 += 1, R3384 += 1 };
  s0 -> s3 [0, 69] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s0 -> s0 [0, 65535] { R3539 += 1, R3540 += 1 };
  s0 -> s4 [0, 65535] { R3540 += 1, R3475 += 1, R3476 += 1 };
  s0 -> s5 [70, 70] { R3540 += 1, R3476 += 1, R3384 += 1, R3385 += 1, R3386 += 1 };
  s0 -> s6 [70, 70] { R3540 += 1, R3476 += 1, R3383 += 1, R3384 += 1 };
  s0 -> s7 [70, 70] { R3540 += 1, R3476 += 1, R3383 += 1, R3384 += 1 };
  s0 -> s8 [70, 70] { R3540 += 1, R3476 += 1, R3384 += 1, R3385 += 1, R3386 += 1 };
  s0 -> s9 [70, 70] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s0 -> s10 [70, 70] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s0 -> s3 [71, 74] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s0 -> s1 [71, 65535] { R3540 += 1, R3476 += 1, R3384 += 1, R3385 += 1, R3386 += 1 };
  s0 -> s2 [71, 65535] { R3540 += 1, R3476 += 1, R3383 += 1, R3384 += 1 };
  s0 -> s11 [75, 75] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s0 -> s3 [79, 65535] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s1 -> s1 [0, 69] { R3540 += 1, R3476 += 1, R3384 += 1, R3385 += 1, R3386 += 1 };
  s1 -> s3 [0, 69] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s1 -> s5 [70, 70] { R3540 += 1, R3476 += 1, R3384 += 1, R3385 += 1, R3386 += 1 };
  s1 -> s8 [70, 70] { R3540 += 1, R3476 += 1, R3384 += 1, R3385 += 1, R3386 += 1 };
  s1 -> s9 [70, 70] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s1 -> s10 [70, 70] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s1 -> s3 [71, 74] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s1 -> s1 [71, 65535] { R3540 += 1, R3476 += 1, R3384 += 1, R3385 += 1, R3386 += 1 };
  s1 -> s11 [75, 75] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s1 -> s3 [79, 65535] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s2 -> s1 [0, 69] { R3540 += 1, R3476 += 1, R3384 += 1, R3385 += 1, R3386 += 1 };
  s2 -> s2 [0, 69] { R3540 += 1, R3476 += 1, R3383 += 1, R3384 += 1 };
  s2 -> s3 [0, 69] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s2 -> s5 [70, 70] { R3540 += 1, R3476 += 1, R3384 += 1, R3385 += 1, R3386 += 1 };
  s2 -> s6 [70, 70] { R3540 += 1, R3476 += 1, R3383 += 1, R3384 += 1 };
  s2 -> s7 [70, 70] { R3540 += 1, R3476 += 1, R3383 += 1, R3384 += 1 };
  s2 -> s8 [70, 70] { R3540 += 1, R3476 += 1, R3384 += 1, R3385 += 1, R3386 += 1 };
  s2 -> s9 [70, 70] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s2 -> s10 [70, 70] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s2 -> s3 [71, 74] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s2 -> s1 [71, 65535] { R3540 += 1, R3476 += 1, R3384 += 1, R3385 += 1, R3386 += 1 };
  s2 -> s2 [71, 65535] { R3540 += 1, R3476 += 1, R3383 += 1, R3384 += 1 };
  s2 -> s11 [75, 75] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s2 -> s3 [79, 65535] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s3 -> s3 [0, 69] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s3 -> s9 [70, 70] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s3 -> s10 [70, 70] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s3 -> s3 [71, 74] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s3 -> s11 [75, 75] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s3 -> s3 [79, 65535] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s4 -> s1 [0, 69] { R3540 += 1, R3476 += 1, R3384 += 1, R3385 += 1, R3386 += 1 };
  s4 -> s2 [0, 69] { R3540 += 1, R3476 += 1, R3383 += 1, R3384 += 1 };
  s4 -> s3 [0, 69] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s4 -> s4 [0, 65535] { R3540 += 1, R3475 += 1, R3476 += 1 };
  s4 -> s5 [70, 70] { R3540 += 1, R3476 += 1, R3384 += 1, R3385 += 1, R3386 += 1 };
  s4 -> s6 [70, 70] { R3540 += 1, R3476 += 1, R3383 += 1, R3384 += 1 };
  s4 -> s7 [70, 70] { R3540 += 1, R3476 += 1, R3383 += 1, R3384 += 1 };
  s4 -> s8 [70, 70] { R3540 += 1, R3476 += 1, R3384 += 1, R3385 += 1, R3386 += 1 };
  s4 -> s9 [70, 70] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s4 -> s10 [70, 70] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s4 -> s3 [71, 74] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s4 -> s1 [71, 65535] { R3540 += 1, R3476 += 1, R3384 += 1, R3385 += 1, R3386 += 1 };
  s4 -> s2 [71, 65535] { R3540 += 1, R3476 += 1, R3383 += 1, R3384 += 1 };
  s4 -> s11 [75, 75] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s4 -> s3 [79, 65535] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s6 -> s10 [0, 74] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s6 -> s6 [0, 65535] { R3540 += 1, R3476 += 1, R3383 += 1, R3384 += 1 };
  s6 -> s8 [0, 65535] { R3540 += 1, R3476 += 1, R3384 += 1, R3385 += 1, R3386 += 1 };
  s6 -> s14 [75, 75] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s6 -> s10 [79, 65535] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s8 -> s10 [0, 74] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s8 -> s8 [0, 65535] { R3540 += 1, R3476 += 1, R3384 += 1, R3385 += 1, R3386 += 1 };
  s8 -> s14 [75, 75] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s8 -> s10 [79, 65535] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s10 -> s10 [0, 74] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s10 -> s14 [75, 75] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s10 -> s10 [79, 65535] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s11 -> s11 [0, 69] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s11 -> s11 [0, 65535] { R3540 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [70, 70] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s11 -> s14 [70, 70] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s11 -> s11 [71, 75] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s11 -> s11 [79, 65535] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R3540 += 1 };
  s13 -> s12 [0, 65535];
  s14 -> s14 [0, 75] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R3540 += 1 };
  s14 -> s14 [79, 65535] { R3540 += 1, R3476 += 1, R3384 += 1, R3386 += 1 };
  accepting s11, s12, s13, s14;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R3420 && R3 = R3540 && R25 - R3540 = -1 && R26 = R3540 && R27 - R3540 = -1 && R28 = R3540 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R3388 + -1*R3384 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R3388 + -1*R3384 - R130 = 0 && R129 + R3387 + R3383 = 0 && R131 + R3389 + R3385 = 0 && R132 + R3390 + R3386 = 0 && R3419 = 0 && R3451 = 0 && R3452 = 0 && R3461 = 0 && R3462 = 0 && R3469 = 0 && R3470 = 0 && R3473 = 0 && R3474 = 0 && R3475 = 0 && R3476 = 0 && R3477 = 0 && R3478 = R3540 && R3479 = 0 && R3480 = R3540 && R3481 = 0 && R3482 = R3540 && R3483 = 0 && R3484 = R3540 && R3485 = 0 && R3486 = R3540 && R3487 = 0 && R3488 = R3540 && R3489 = 0 && R3490 = R3540 && R3491 = 0 && R3492 = R3540 && R3493 = 0 && R3494 = R3540 && R3495 = 0 && R3496 = R3540 && R3497 = 0 && R3498 = R3540 && R3499 = 0 && R3500 = R3540 && R3501 = 0 && R3502 = R3540 && R3503 = 0 && R3504 = R3540 && R3505 = 0 && R3506 = R3540 && R3507 = 0 && R3508 = R3540 && R3509 = 0 && R3510 = R3540 && R3511 = 0 && R3512 = R3540 && R3513 = 0 && R3514 = R3540 && R3515 = 0 && R3516 = R3540 && R3517 = 0 && R3518 = R3540 && R3519 = 0 && R3520 = R3540 && R3521 = 0 && R3522 = R3540 && R3523 = 0 && R3524 = R3540 && R3525 = 0 && R3526 = R3540 && R3527 = 0 && R3528 = R3540 && R3529 = 0 && R3530 = R3540 && R3531 = 0 && R3532 = R3540 && R3533 = 0 && R3534 = R3540 && R3535 = 0 && R3536 = R3540 && R3537 = 0 && R3538 = R3540 && R3539 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R3388 + -1*R3384 - R130 < 1 && -1 < R3420 && 0 < R3540 && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R3388 + -1*R3384 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R191 + R187 = 0 && R114 + R192 + R188 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R3388 + -1*R3384 - R130 = 0 || R130 + R3388 + R3384 < 1) && (R81 + R158 + R155 = 0 || R130 + R3388 + R3384 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R3388 + -1*R3384 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R3388 + R3384 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R3388 + -1*R3384 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R3388 + R3384 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R3388 + -1*R3384 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R3388 + R3384 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 != 0 || R112 + R190 + R186 + -1*R3388 + -1*R3384 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R3388 + R3384 = 0)) && (R113 + R191 + R187 != 0 || R83 + R160 + R157 + -1*R192 + -1*R188 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R2746 + R2741 != 0 || R120 + R2747 + R2742 + -1*R3388 + -1*R3384 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R3388 + R3384 = 0)) && (R3391 != 0 || R3392 = R3420 || (R22 = 0 && R3420 = 0)) && (R3393 != 0 || R3394 = R3420 || (R22 = 0 && R3420 = 0)) && (R3395 != 0 || R3396 = R3420 || (R22 = 0 && R3420 = 0)) && (R3397 != 0 || R3398 = R3420 || (R22 = 0 && R3420 = 0)) && (R3399 != 0 || R3400 = R3420 || (R22 = 0 && R3420 = 0)) && (R3401 != 0 || R3402 = R3420 || (R22 = 0 && R3420 = 0)) && (R3403 != 0 || R3404 = R3420 || (R22 = 0 && R3420 = 0)) && (R3405 != 0 || R3406 = R3420 || (R22 = 0 && R3420 = 0)) && (R3407 != 0 || R3408 = R3420 || (R22 = 0 && R3420 = 0)) && (R3409 != 0 || R3410 = R3420 || (R22 = 0 && R3420 = 0)) && (R3411 != 0 || R3412 = R3420 || (R22 = 0 && R3420 = 0)) && (R3413 != 0 || R3414 = R3420 || (R22 = 0 && R3420 = 0)) && (R3415 != 0 || R3416 = R3420 || (R22 = 0 && R3420 = 0)) && (R3417 != 0 || R3418 = R3420 || (R22 = 0 && R3420 = 0)) && (R23 = 0 || (R3449 = 0 && R3450 = 0)) && (R23 = 0 || (R3453 = 0 && R3454 = 0)) && (R23 = 0 || (R3455 = 0 && R3456 = 0)) && (R23 = 0 || (R3457 = 0 && R3458 = 0)) && (R23 = 0 || (R3459 = 0 && R3460 = 0)) && (R23 = 0 || (R3463 = 0 && R3464 = 0)) && (R23 = 0 || (R3465 = 0 && R3466 = 0)) && (R23 = 0 || (R3467 = 0 && R3468 = 0)) && (R23 = 0 || (R3471 = 0 && R3472 = 0)) && (R24 = 0 || (R3421 = 0 && R3422 = 0)) && (R24 = 0 || (R3423 = 0 && R3424 = 0)) && (R24 = 0 || (R3425 = 0 && R3426 = 0)) && (R24 = 0 || (R3427 = 0 && R3428 = 0)) && (R24 = 0 || (R3429 = 0 && R3430 = 0)) && (R24 = 0 || (R3431 = 0 && R3432 = 0)) && (R24 = 0 || (R3433 = 0 && R3434 = 0)) && (R24 = 0 || (R3435 = 0 && R3436 = 0)) && (R24 = 0 || (R3437 = 0 && R3438 = 0)) && (R24 = 0 || (R3439 = 0 && R3440 = 0)) && (R24 = 0 || (R3441 = 0 && R3442 = 0)) && (R24 = 0 || (R3443 = 0 && R3444 = 0)) && (R24 = 0 || (R3445 = 0 && R3446 = 0)) && (R24 = 0 || (R3447 = 0 && R3448 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R3388 + R3384 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R3388 + R3384 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R3388 + R3384 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 = 0 || (R83 + R160 + R157 = 0 && R130 + R3388 + R3384 = 0)) && (R113 + R191 + R187 = 0 || R83 + R160 + R157 < 1) && (R119 + R2746 + R2741 = 0 || (R83 + R160 + R157 = 0 && R130 + R3388 + R3384 = 0)) && (R123 + R2750 + R2745 = 0 || (R121 + R2748 + R2743 = 0 && R122 + R2749 + R2744 = 0)) && (R3391 = 0 || (R22 = 0 && R3420 = 0)) && (R3393 = 0 || (R22 = 0 && R3420 = 0)) && (R3395 = 0 || (R22 = 0 && R3420 = 0)) && (R3397 = 0 || (R22 = 0 && R3420 = 0)) && (R3399 = 0 || (R22 = 0 && R3420 = 0)) && (R3401 = 0 || (R22 = 0 && R3420 = 0)) && (R3403 = 0 || (R22 = 0 && R3420 = 0)) && (R3405 = 0 || (R22 = 0 && R3420 = 0)) && (R3407 = 0 || (R22 = 0 && R3420 = 0)) && (R3409 = 0 || (R22 = 0 && R3420 = 0)) && (R3411 = 0 || (R22 = 0 && R3420 = 0)) && (R3413 = 0 || (R22 = 0 && R3420 = 0)) && (R3415 = 0 || (R22 = 0 && R3420 = 0)) && (R3417 = 0 || (R22 = 0 && R3420 = 0));
// End of Parikh automata intersection problem
