// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R2, R22, R23, R24, R25, R26, R27, R2741, R2742, R2743, R2744, R2745, R2746, R2747, R2748, R2749, R2750, R28, R29, R3, R30, R3067, R3068, R3069, R3070, R3071, R3072, R3073, R3074, R3075, R3076, R3077, R3078, R3079, R3080, R3081, R3082, R3083, R3084, R3085, R3086, R3087, R3088, R3089, R3090, R3091, R3092, R3093, R3094, R3095, R3096, R3097, R3098, R3099, R31, R3100, R3101, R3102, R3103, R3104, R3105, R3106, R3107, R3108, R3109, R3110, R3111, R3112, R3113, R3114, R3115, R3116, R3117, R3118, R3119, R3120, R3121, R3122, R3123, R3124, R3125, R3126, R3127, R3128, R3129, R3130, R3131, R3132, R3133, R3134, R3135, R3136, R3137, R3138, R3139, R3140, R3141, R3142, R3143, R3144, R3145, R3146, R3147, R3148, R3149, R3150, R3151, R3152, R3153, R3154, R3155, R3156, R3157, R3158, R3159, R3160, R3161, R3162, R3163, R3164, R3165, R3166, R3167, R3168, R3169, R3170, R3171, R3172, R3173, R3174, R3175, R3176, R3177, R3178, R3179, R3180, R3181, R3182, R3183, R3184, R3185, R3186, R3187, R3188, R3189, R3190, R3191, R3192, R3193, R3194, R3195, R3196, R3197, R3198, R3199, R32, R3200, R3201, R3202, R3203, R3204, R3205, R3206, R3207, R3208, R3209, R3210, R3211, R3212, R3213, R3214, R3215, R3216, R3217, R3218, R3219, R3220, R3221, R3222, R3223, R3224, R4, R5, R63, R65, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R30 += 1 };
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R3105 += 1, R3106 += 1 };
  s0 -> s1 [0, 65535] { R3106 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R3106 += 1, R24 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R3108 += 1 };
  s0 -> s0 [0, 65535] { R3107 += 1, R3108 += 1 };
  s0 -> s2 [70, 70] { R3108 += 1 };
  s0 -> s3 [70, 70] { R3108 += 1 };
  s0 -> s1 [76, 65535] { R3108 += 1 };
  s1 -> s1 [0, 69] { R3108 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3108 += 1 };
  s1 -> s3 [70, 70] { R3108 += 1 };
  s1 -> s1 [76, 65535] { R3108 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R3108 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R3108 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R3110 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R3109 += 1, R3110 += 1 };
  s0 -> s2 [70, 70] { R3110 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R3110 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R3110 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R3110 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3110 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R3110 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R3110 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3110 += 1, R63 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R3112 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R3111 += 1, R3112 += 1 };
  s0 -> s2 [70, 70] { R3112 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R3112 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R3112 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R3112 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3112 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R3112 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R3112 += 1, R65 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R3112 += 1, R65 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R3114 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R3113 += 1, R3114 += 1 };
  s0 -> s2 [70, 70] { R3114 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R3114 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R3114 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R3114 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3114 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R3114 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R3114 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3114 += 1, R67 += 1, R68 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R3116 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R3115 += 1, R3116 += 1 };
  s0 -> s2 [70, 70] { R3116 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R3116 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R3116 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R3116 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3116 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R3116 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R3116 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R3116 += 1, R73 += 1, R74 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R3118 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R3117 += 1, R3118 += 1 };
  s0 -> s2 [70, 70] { R3118 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R3118 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R3118 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R3118 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3118 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R3118 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R3118 += 1, R77 += 1, R78 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3118 += 1, R77 += 1, R78 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R3120 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R3119 += 1, R3120 += 1 };
  s0 -> s2 [70, 70] { R3120 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R3120 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R3120 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R3120 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3120 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R3120 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R3120 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3120 += 1, R81 += 1, R82 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R3122 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R3121 += 1, R3122 += 1 };
  s0 -> s2 [70, 70] { R3122 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R3122 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R3122 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R3122 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3122 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R3122 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R3122 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3122 += 1, R87 += 1, R88 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R3124 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R3123 += 1, R3124 += 1 };
  s0 -> s2 [70, 70] { R3124 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R3124 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R3124 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R3124 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3124 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R3124 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R3124 += 1, R93 += 1, R94 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3124 += 1, R93 += 1, R94 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R3126 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R3125 += 1, R3126 += 1 };
  s0 -> s2 [70, 70] { R3126 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R3126 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R3126 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R3126 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3126 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R3126 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R3126 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R3126 += 1, R101 += 1, R102 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R3128 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R3127 += 1, R3128 += 1 };
  s0 -> s2 [70, 70] { R3128 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R3128 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R3128 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R3128 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3128 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R3128 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R3128 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535] { R3128 += 1, R111 += 1, R112 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R3130 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R3129 += 1, R3130 += 1 };
  s0 -> s2 [70, 70] { R3130 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R3130 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R3130 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R3130 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3130 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R3130 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R3130 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535] { R3130 += 1, R119 += 1, R120 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R3132 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R3131 += 1, R3132 += 1 };
  s0 -> s2 [70, 70] { R3132 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R3132 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R3132 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R3132 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R3132 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R3132 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R3132 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3132 += 1, R129 += 1, R130 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R3162 += 1 };
  s0 -> s0 [0, 65535] { R3161 += 1, R3162 += 1 };
  s0 -> s2 [70, 70] { R3162 += 1 };
  s0 -> s1 [71, 65535] { R3162 += 1 };
  s1 -> s1 [0, 69] { R3162 += 1 };
  s1 -> s2 [70, 70] { R3162 += 1 };
  s1 -> s1 [71, 65535] { R3162 += 1 };
  s2 -> s2 [0, 65535] { R3162 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R3164 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R3163 += 1, R3164 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R3164 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R3166 += 1 };
  s0 -> s0 [0, 65535] { R3165 += 1, R3166 += 1 };
  s0 -> s2 [0, 65535] { R3166 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R3166 += 1 };
  s0 -> s1 [71, 65535] { R3166 += 1 };
  s1 -> s1 [0, 69] { R3166 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R3166 += 1 };
  s1 -> s1 [71, 65535] { R3166 += 1 };
  s2 -> s1 [0, 69] { R3166 += 1 };
  s2 -> s2 [0, 65535] { R3166 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R3166 += 1 };
  s2 -> s1 [71, 65535] { R3166 += 1 };
  s3 -> s3 [0, 65535] { R3166 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R3168 += 1, R3076 += 1 };
  s0 -> s2 [0, 65535] { R3168 += 1, R3075 += 1, R3076 += 1 };
  s0 -> s0 [0, 65535] { R3167 += 1, R3168 += 1 };
  s0 -> s1 [71, 65535] { R3168 += 1, R3076 += 1 };
  s1 -> s1 [0, 69] { R3168 += 1, R3076 += 1 };
  s1 -> s1 [0, 65535] { R3168 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R3168 += 1, R3076 += 1 };
  s2 -> s1 [0, 69] { R3168 += 1, R3076 += 1 };
  s2 -> s2 [0, 65535] { R3168 += 1, R3075 += 1, R3076 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R3168 += 1, R3076 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R3170 += 1, R3078 += 1, R22 += 1 };
  s0 -> s2 [0, 65535] { R3170 += 1, R3077 += 1, R3078 += 1 };
  s0 -> s0 [0, 65535] { R3169 += 1, R3170 += 1 };
  s1 -> s1 [0, 65535] { R3170 += 1, R3078 += 1, R22 += 1 };
  s1 -> s4 [0, 65535] { R3170 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R3170 += 1, R3078 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R3170 += 1, R3077 += 1, R3078 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3170 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R3172 += 1, R3080 += 1 };
  s0 -> s2 [0, 65535] { R3172 += 1, R3079 += 1, R3080 += 1 };
  s0 -> s0 [0, 65535] { R3171 += 1, R3172 += 1 };
  s0 -> s1 [75, 65535] { R3172 += 1, R3080 += 1 };
  s1 -> s1 [0, 70] { R3172 += 1, R3080 += 1 };
  s1 -> s1 [0, 65535] { R3172 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R3172 += 1, R3080 += 1 };
  s2 -> s1 [0, 70] { R3172 += 1, R3080 += 1 };
  s2 -> s2 [0, 65535] { R3172 += 1, R3079 += 1, R3080 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R3172 += 1, R3080 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R3174 += 1, R3081 += 1, R3082 += 1 };
  s0 -> s0 [0, 65535] { R3173 += 1, R3174 += 1 };
  s0 -> s2 [0, 65535] { R3174 += 1, R3082 += 1, R138 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R3174 += 1, R3081 += 1, R3082 += 1 };
  s1 -> s2 [0, 65535] { R3174 += 1, R3082 += 1, R138 += 1 };
  s2 -> s3 [0, 65535] { R3174 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3174 += 1, R3082 += 1, R138 += 1 };
  s3 -> s3 [0, 65535] { R3174 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R3176 += 1, R3084 += 1 };
  s0 -> s2 [0, 65535] { R3176 += 1, R3083 += 1, R3084 += 1 };
  s0 -> s3 [0, 65535] { R3176 += 1, R3084 += 1, R140 += 1 };
  s0 -> s0 [0, 65535] { R3175 += 1, R3176 += 1 };
  s0 -> s1 [76, 65535] { R3176 += 1, R3084 += 1 };
  s1 -> s1 [0, 74] { R3176 += 1, R3084 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R3176 += 1 };
  s1 -> s1 [76, 65535] { R3176 += 1, R3084 += 1 };
  s2 -> s1 [0, 74] { R3176 += 1, R3084 += 1 };
  s2 -> s2 [0, 65535] { R3176 += 1, R3083 += 1, R3084 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R3176 += 1, R3084 += 1, R140 += 1 };
  s2 -> s1 [76, 65535] { R3176 += 1, R3084 += 1 };
  s3 -> s1 [0, 74] { R3176 += 1, R3084 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3176 += 1, R3084 += 1, R140 += 1 };
  s3 -> s5 [0, 65535] { R3176 += 1 };
  s3 -> s1 [76, 65535] { R3176 += 1, R3084 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3176 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R3178 += 1, R3086 += 1, R144 += 1, R145 += 1 };
  s0 -> s2 [0, 65535] { R3178 += 1, R3085 += 1, R3086 += 1 };
  s0 -> s0 [0, 65535] { R3177 += 1, R3178 += 1 };
  s0 -> s3 [0, 65535] { R3178 += 1, R3086 += 1, R145 += 1, R146 += 1 };
  s1 -> s1 [0, 65535] { R3178 += 1, R3086 += 1, R144 += 1, R145 += 1 };
  s1 -> s4 [0, 65535] { R3178 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R3178 += 1, R3086 += 1, R145 += 1, R146 += 1 };
  s2 -> s1 [0, 65535] { R3178 += 1, R3086 += 1, R144 += 1, R145 += 1 };
  s2 -> s2 [0, 65535] { R3178 += 1, R3085 += 1, R3086 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R3178 += 1, R3086 += 1, R145 += 1, R146 += 1 };
  s3 -> s4 [0, 65535] { R3178 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3178 += 1, R3086 += 1, R145 += 1, R146 += 1 };
  s3 -> s6 [0, 65535] { R3178 += 1, R3086 += 1 };
  s4 -> s4 [0, 65535] { R3178 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R3178 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3178 += 1, R3086 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R3180 += 1, R3088 += 1, R150 += 1 };
  s0 -> s0 [0, 65535] { R3179 += 1, R3180 += 1 };
  s0 -> s2 [0, 65535] { R3180 += 1, R3087 += 1, R3088 += 1 };
  s0 -> s3 [0, 65535] { R3180 += 1, R3088 += 1, R149 += 1, R150 += 1 };
  s0 -> s4 [75, 75] { R3180 += 1, R3088 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R3180 += 1, R3088 += 1, R150 += 1 };
  s0 -> s1 [79, 65535] { R3180 += 1, R3088 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R3180 += 1, R3088 += 1, R150 += 1 };
  s1 -> s6 [0, 65535] { R3180 += 1 };
  s1 -> s1 [0, 65535] { R3180 += 1, R3088 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [75, 75] { R3180 += 1, R3088 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R3180 += 1, R3088 += 1, R150 += 1 };
  s1 -> s1 [79, 65535] { R3180 += 1, R3088 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R3180 += 1, R3088 += 1, R150 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s2 [0, 65535] { R3180 += 1, R3087 += 1, R3088 += 1 };
  s2 -> s3 [0, 65535] { R3180 += 1, R3088 += 1, R149 += 1, R150 += 1 };
  s2 -> s4 [75, 75] { R3180 += 1, R3088 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R3180 += 1, R3088 += 1, R150 += 1 };
  s2 -> s1 [79, 65535] { R3180 += 1, R3088 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R3180 += 1, R3088 += 1, R150 += 1 };
  s3 -> s6 [0, 65535] { R3180 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R3180 += 1, R3088 += 1, R149 += 1, R150 += 1 };
  s3 -> s4 [75, 75] { R3180 += 1, R3088 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R3180 += 1, R3088 += 1, R150 += 1 };
  s3 -> s1 [79, 65535] { R3180 += 1, R3088 += 1, R150 += 1 };
  s4 -> s4 [0, 75] { R3180 += 1, R3088 += 1, R150 += 1 };
  s4 -> s4 [0, 65535] { R3180 += 1, R3088 += 1 };
  s4 -> s6 [0, 65535] { R3180 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [79, 65535] { R3180 += 1, R3088 += 1, R150 += 1 };
  s5 -> s6 [0, 65535] { R3180 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R3180 += 1, R3088 += 1 };
  s6 -> s6 [0, 65535] { R3180 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R3182 += 1, R3089 += 1, R3090 += 1 };
  s0 -> s2 [0, 65535] { R3182 += 1, R3090 += 1, R154 += 1 };
  s0 -> s3 [0, 65535] { R3182 += 1, R3090 += 1 };
  s0 -> s0 [0, 65535] { R3181 += 1, R3182 += 1 };
  s1 -> s1 [0, 65535] { R3182 += 1, R3089 += 1, R3090 += 1 };
  s1 -> s2 [0, 65535] { R3182 += 1, R3090 += 1, R154 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s3 [0, 65535] { R3182 += 1, R3090 += 1 };
  s2 -> s2 [0, 65535] { R3182 += 1, R3090 += 1, R154 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R3182 += 1 };
  s2 -> s3 [0, 65535] { R3182 += 1, R3090 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R3182 += 1 };
  s3 -> s3 [0, 65535] { R3182 += 1, R3090 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3182 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R3184 += 1, R3092 += 1, R159 += 1, R160 += 1 };
  s0 -> s2 [0, 65535] { R3184 += 1, R3091 += 1, R3092 += 1 };
  s0 -> s3 [0, 65535] { R3184 += 1, R3092 += 1, R158 += 1, R159 += 1 };
  s0 -> s0 [0, 65535] { R3183 += 1, R3184 += 1 };
  s1 -> s4 [0, 65535] { R3184 += 1 };
  s1 -> s6 [0, 65535] { R3184 += 1, R3092 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3184 += 1, R3092 += 1, R159 += 1, R160 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R3184 += 1, R3092 += 1, R159 += 1, R160 += 1 };
  s2 -> s2 [0, 65535] { R3184 += 1, R3091 += 1, R3092 += 1 };
  s2 -> s3 [0, 65535] { R3184 += 1, R3092 += 1, R158 += 1, R159 += 1 };
  s3 -> s4 [0, 65535] { R3184 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R3184 += 1, R3092 += 1, R159 += 1, R160 += 1 };
  s3 -> s3 [0, 65535] { R3184 += 1, R3092 += 1, R158 += 1, R159 += 1 };
  s4 -> s4 [0, 65535] { R3184 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R3184 += 1 };
  s6 -> s6 [0, 65535] { R3184 += 1, R3092 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R3186 += 1, R3094 += 1, R165 += 1 };
  s0 -> s0 [0, 65535] { R3185 += 1, R3186 += 1 };
  s0 -> s2 [0, 65535] { R3186 += 1, R3094 += 1, R165 += 1, R166 += 1 };
  s0 -> s3 [0, 65535] { R3186 += 1, R3093 += 1, R3094 += 1 };
  s0 -> s4 [0, 65535] { R3186 += 1, R3094 += 1, R164 += 1, R165 += 1 };
  s0 -> s1 [76, 65535] { R3186 += 1, R3094 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R3186 += 1, R3094 += 1, R165 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R3186 += 1 };
  s1 -> s1 [0, 65535] { R3186 += 1, R3094 += 1 };
  s1 -> s1 [76, 65535] { R3186 += 1, R3094 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R3186 += 1, R3094 += 1, R165 += 1 };
  s2 -> s2 [0, 65535] { R3186 += 1, R3094 += 1, R165 += 1, R166 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R3186 += 1 };
  s2 -> s7 [0, 65535] { R3186 += 1, R3094 += 1 };
  s2 -> s1 [76, 65535] { R3186 += 1, R3094 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R3186 += 1, R3094 += 1, R165 += 1 };
  s3 -> s2 [0, 65535] { R3186 += 1, R3094 += 1, R165 += 1, R166 += 1 };
  s3 -> s3 [0, 65535] { R3186 += 1, R3093 += 1, R3094 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R3186 += 1, R3094 += 1, R164 += 1, R165 += 1 };
  s3 -> s1 [76, 65535] { R3186 += 1, R3094 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R3186 += 1, R3094 += 1, R165 += 1 };
  s4 -> s2 [0, 65535] { R3186 += 1, R3094 += 1, R165 += 1, R166 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3186 += 1, R3094 += 1, R164 += 1, R165 += 1 };
  s4 -> s6 [0, 65535] { R3186 += 1 };
  s4 -> s1 [76, 65535] { R3186 += 1, R3094 += 1, R165 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3186 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R3186 += 1 };
  s7 -> s7 [0, 65535] { R3186 += 1, R3094 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R3188 += 1, R3096 += 1, R172 += 1, R174 += 1 };
  s0 -> s0 [0, 65535] { R3187 += 1, R3188 += 1 };
  s0 -> s2 [0, 65535] { R3188 += 1, R3095 += 1, R3096 += 1 };
  s0 -> s3 [0, 65535] { R3188 += 1, R3096 += 1, R171 += 1, R172 += 1 };
  s0 -> s4 [0, 65535] { R3188 += 1, R3096 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s1 [76, 65535] { R3188 += 1, R3096 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R3188 += 1, R3096 += 1, R172 += 1, R174 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3188 += 1, R3096 += 1, R172 += 1 };
  s1 -> s6 [0, 65535] { R3188 += 1, R3096 += 1 };
  s1 -> s7 [0, 65535] { R3188 += 1 };
  s1 -> s1 [76, 65535] { R3188 += 1, R3096 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R3188 += 1, R3096 += 1, R172 += 1, R174 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3188 += 1, R3095 += 1, R3096 += 1 };
  s2 -> s3 [0, 65535] { R3188 += 1, R3096 += 1, R171 += 1, R172 += 1 };
  s2 -> s4 [0, 65535] { R3188 += 1, R3096 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s1 [76, 65535] { R3188 += 1, R3096 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R3188 += 1, R3096 += 1, R172 += 1, R174 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s7 [0, 65535] { R3188 += 1 };
  s3 -> s3 [0, 65535] { R3188 += 1, R3096 += 1, R171 += 1, R172 += 1 };
  s3 -> s4 [0, 65535] { R3188 += 1, R3096 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s1 [76, 65535] { R3188 += 1, R3096 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R3188 += 1, R3096 += 1, R172 += 1, R174 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3188 += 1, R3096 += 1 };
  s4 -> s7 [0, 65535] { R3188 += 1 };
  s4 -> s4 [0, 65535] { R3188 += 1, R3096 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s1 [76, 65535] { R3188 += 1, R3096 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3188 += 1, R3096 += 1 };
  s6 -> s7 [0, 65535] { R3188 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R3188 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R3190 += 1, R3097 += 1, R3098 += 1 };
  s0 -> s0 [0, 65535] { R3189 += 1, R3190 += 1 };
  s0 -> s2 [0, 65535] { R3190 += 1, R3098 += 1 };
  s1 -> s1 [0, 65535] { R3190 += 1, R3097 += 1, R3098 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R3190 += 1, R3098 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R3190 += 1 };
  s2 -> s2 [0, 65535] { R3190 += 1, R3098 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3190 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R3192 += 1, R3100 += 1, R190 += 1, R192 += 1 };
  s0 -> s2 [0, 65535] { R3192 += 1, R3100 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s0 -> s0 [0, 65535] { R3191 += 1, R3192 += 1 };
  s0 -> s3 [0, 65535] { R3192 += 1, R3100 += 1, R189 += 1, R190 += 1 };
  s0 -> s4 [0, 65535] { R3192 += 1, R3099 += 1, R3100 += 1 };
  s0 -> s1 [78, 65535] { R3192 += 1, R3100 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 75] { R3192 += 1, R3100 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 65535] { R3192 += 1, R3100 += 1, R190 += 1 };
  s1 -> s6 [0, 65535] { R3192 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R3192 += 1, R3100 += 1 };
  s1 -> s1 [78, 65535] { R3192 += 1, R3100 += 1, R190 += 1, R192 += 1 };
  s2 -> s1 [0, 75] { R3192 += 1, R3100 += 1, R190 += 1, R192 += 1 };
  s2 -> s2 [0, 65535] { R3192 += 1, R3100 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s2 -> s6 [0, 65535] { R3192 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R3192 += 1, R3100 += 1 };
  s2 -> s1 [78, 65535] { R3192 += 1, R3100 += 1, R190 += 1, R192 += 1 };
  s3 -> s1 [0, 75] { R3192 += 1, R3100 += 1, R190 += 1, R192 += 1 };
  s3 -> s2 [0, 65535] { R3192 += 1, R3100 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s3 -> s6 [0, 65535] { R3192 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3192 += 1, R3100 += 1, R189 += 1, R190 += 1 };
  s3 -> s1 [78, 65535] { R3192 += 1, R3100 += 1, R190 += 1, R192 += 1 };
  s4 -> s1 [0, 75] { R3192 += 1, R3100 += 1, R190 += 1, R192 += 1 };
  s4 -> s2 [0, 65535] { R3192 += 1, R3100 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R3192 += 1, R3100 += 1, R189 += 1, R190 += 1 };
  s4 -> s4 [0, 65535] { R3192 += 1, R3099 += 1, R3100 += 1 };
  s4 -> s1 [78, 65535] { R3192 += 1, R3100 += 1, R190 += 1, R192 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3192 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R3192 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R3192 += 1, R3100 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R3194 += 1, R3101 += 1, R3102 += 1 };
  s0 -> s2 [0, 65535] { R3194 += 1, R3102 += 1 };
  s0 -> s0 [0, 65535] { R3193 += 1, R3194 += 1 };
  s0 -> s3 [0, 65535] { R3194 += 1, R3102 += 1, R2747 += 1, R2749 += 1, R2750 += 1 };
  s0 -> s4 [0, 65535] { R3194 += 1, R3102 += 1, R2747 += 1 };
  s1 -> s1 [0, 65535] { R3194 += 1, R3101 += 1, R3102 += 1 };
  s1 -> s2 [0, 65535] { R3194 += 1, R3102 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R3194 += 1, R3102 += 1, R2747 += 1, R2749 += 1, R2750 += 1 };
  s1 -> s4 [0, 65535] { R3194 += 1, R3102 += 1, R2747 += 1 };
  s2 -> s2 [0, 65535] { R3194 += 1, R3102 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R3194 += 1 };
  s3 -> s2 [0, 65535] { R3194 += 1, R3102 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3194 += 1, R3102 += 1, R2747 += 1, R2749 += 1, R2750 += 1 };
  s3 -> s4 [0, 65535] { R3194 += 1, R3102 += 1, R2747 += 1 };
  s3 -> s6 [0, 65535] { R3194 += 1 };
  s4 -> s2 [0, 65535] { R3194 += 1, R3102 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3194 += 1, R3102 += 1, R2747 += 1 };
  s4 -> s6 [0, 65535] { R3194 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3194 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 75] { R3196 += 1, R3104 += 1, R3072 += 1, R3074 += 1 };
  s0 -> s2 [0, 65535] { R3196 += 1, R3103 += 1, R3104 += 1 };
  s0 -> s0 [0, 65535] { R3195 += 1, R3196 += 1 };
  s0 -> s3 [0, 65535] { R3196 += 1, R3104 += 1 };
  s0 -> s1 [0, 65535] { R3196 += 1, R3104 += 1, R3072 += 1 };
  s0 -> s1 [78, 65535] { R3196 += 1, R3104 += 1, R3072 += 1, R3074 += 1 };
  s1 -> s1 [0, 75] { R3196 += 1, R3104 += 1, R3072 += 1, R3074 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s3 [0, 65535] { R3196 += 1, R3104 += 1 };
  s1 -> s1 [0, 65535] { R3196 += 1, R3104 += 1, R3072 += 1 };
  s1 -> s5 [0, 65535] { R3196 += 1 };
  s1 -> s1 [78, 65535] { R3196 += 1, R3104 += 1, R3072 += 1, R3074 += 1 };
  s2 -> s1 [0, 75] { R3196 += 1, R3104 += 1, R3072 += 1, R3074 += 1 };
  s2 -> s2 [0, 65535] { R3196 += 1, R3103 += 1, R3104 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R3196 += 1, R3104 += 1 };
  s2 -> s1 [0, 65535] { R3196 += 1, R3104 += 1, R3072 += 1 };
  s2 -> s1 [78, 65535] { R3196 += 1, R3104 += 1, R3072 += 1, R3074 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3196 += 1, R3104 += 1 };
  s3 -> s5 [0, 65535] { R3196 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3196 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65535] { R3198 += 1, R3133 += 1, R3134 += 1 };
  s0 -> s2 [0, 65535] { R3198 += 1, R3134 += 1, R23 += 1 };
  s0 -> s0 [0, 65535] { R3197 += 1, R3198 += 1 };
  s1 -> s1 [0, 65535] { R3198 += 1, R3133 += 1, R3134 += 1 };
  s1 -> s2 [0, 65535] { R3198 += 1, R3134 += 1, R23 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R3198 += 1 };
  s2 -> s2 [0, 65535] { R3198 += 1, R3134 += 1, R23 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3198 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R3200 += 1, R3136 += 1 };
  s0 -> s0 [0, 65535] { R3199 += 1, R3200 += 1 };
  s0 -> s2 [0, 65535] { R3200 += 1, R3135 += 1, R3136 += 1 };
  s0 -> s3 [70, 70] { R3200 += 1, R3136 += 1 };
  s0 -> s4 [70, 70] { R3200 += 1, R3136 += 1 };
  s0 -> s5 [75, 75] { R3200 += 1, R3136 += 1 };
  s0 -> s1 [76, 65535] { R3200 += 1, R3136 += 1 };
  s1 -> s1 [0, 69] { R3200 += 1, R3136 += 1 };
  s1 -> s3 [70, 70] { R3200 += 1, R3136 += 1 };
  s1 -> s4 [70, 70] { R3200 += 1, R3136 += 1 };
  s1 -> s5 [75, 75] { R3200 += 1, R3136 += 1 };
  s1 -> s1 [76, 65535] { R3200 += 1, R3136 += 1 };
  s2 -> s1 [0, 69] { R3200 += 1, R3136 += 1 };
  s2 -> s2 [0, 65535] { R3200 += 1, R3135 += 1, R3136 += 1 };
  s2 -> s3 [70, 70] { R3200 += 1, R3136 += 1 };
  s2 -> s4 [70, 70] { R3200 += 1, R3136 += 1 };
  s2 -> s5 [75, 75] { R3200 += 1, R3136 += 1 };
  s2 -> s1 [76, 65535] { R3200 += 1, R3136 += 1 };
  s4 -> s4 [0, 70] { R3200 += 1, R3136 += 1 };
  s4 -> s7 [75, 75] { R3200 += 1, R3136 += 1 };
  s4 -> s4 [76, 65535] { R3200 += 1, R3136 += 1 };
  s5 -> s5 [0, 69] { R3200 += 1, R3136 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3200 += 1 };
  s5 -> s7 [70, 70] { R3200 += 1, R3136 += 1 };
  s5 -> s8 [70, 70] { R3200 += 1, R3136 += 1 };
  s5 -> s5 [75, 65535] { R3200 += 1, R3136 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R3200 += 1, R3136 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3200 += 1 };
  s7 -> s7 [75, 65535] { R3200 += 1, R3136 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R3200 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R3202 += 1, R3138 += 1, R137 += 1 };
  s0 -> s0 [0, 65535] { R3201 += 1, R3202 += 1 };
  s0 -> s2 [0, 65535] { R3202 += 1, R3137 += 1, R3138 += 1 };
  s0 -> s3 [70, 70] { R3202 += 1, R3138 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R3202 += 1, R3138 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R3202 += 1, R3138 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R3202 += 1, R3138 += 1, R137 += 1 };
  s1 -> s1 [0, 65535] { R3202 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R3202 += 1, R3138 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R3202 += 1, R3138 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R3202 += 1, R3138 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R3202 += 1, R3138 += 1, R137 += 1 };
  s2 -> s2 [0, 65535] { R3202 += 1, R3137 += 1, R3138 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R3202 += 1, R3138 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R3202 += 1, R3138 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R3202 += 1, R3138 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R3202 += 1, R3138 += 1, R137 += 1 };
  s3 -> s6 [0, 65535] { R3202 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3202 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3202 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R3204 += 1, R3140 += 1, R139 += 1 };
  s0 -> s0 [0, 65535] { R3203 += 1, R3204 += 1 };
  s0 -> s2 [0, 65535] { R3204 += 1, R3139 += 1, R3140 += 1 };
  s0 -> s3 [70, 70] { R3204 += 1, R3140 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R3204 += 1, R3140 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R3204 += 1, R3140 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R3204 += 1, R3140 += 1, R139 += 1 };
  s1 -> s1 [0, 65535] { R3204 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R3204 += 1, R3140 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R3204 += 1, R3140 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R3204 += 1, R3140 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R3204 += 1, R3140 += 1, R139 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3204 += 1, R3139 += 1, R3140 += 1 };
  s2 -> s3 [70, 70] { R3204 += 1, R3140 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R3204 += 1, R3140 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R3204 += 1, R3140 += 1, R139 += 1 };
  s3 -> s3 [0, 65535] { R3204 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3204 += 1, R3140 += 1, R139 += 1 };
  s4 -> s6 [0, 65535] { R3204 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3204 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R3206 += 1, R3142 += 1, R141 += 1, R142 += 1 };
  s0 -> s0 [0, 65535] { R3205 += 1, R3206 += 1 };
  s0 -> s2 [0, 65535] { R3206 += 1, R3141 += 1, R3142 += 1 };
  s0 -> s3 [70, 70] { R3206 += 1, R3142 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R3206 += 1, R3142 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R3206 += 1, R3142 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R3206 += 1, R3142 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 65535] { R3206 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R3206 += 1, R3142 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R3206 += 1, R3142 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R3206 += 1, R3142 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R3206 += 1, R3142 += 1, R141 += 1, R142 += 1 };
  s2 -> s2 [0, 65535] { R3206 += 1, R3141 += 1, R3142 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R3206 += 1, R3142 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R3206 += 1, R3142 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R3206 += 1, R3142 += 1, R141 += 1, R142 += 1 };
  s3 -> s3 [0, 65535] { R3206 += 1, R3142 += 1, R141 += 1, R142 += 1 };
  s3 -> s6 [0, 65535] { R3206 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3206 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3206 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R3208 += 1, R3144 += 1, R147 += 1, R148 += 1 };
  s0 -> s2 [0, 65535] { R3208 += 1, R3143 += 1, R3144 += 1 };
  s0 -> s0 [0, 65535] { R3207 += 1, R3208 += 1 };
  s0 -> s3 [70, 70] { R3208 += 1, R3144 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R3208 += 1, R3144 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R3208 += 1, R3144 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R3208 += 1, R3144 += 1, R147 += 1, R148 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3208 += 1 };
  s1 -> s3 [70, 70] { R3208 += 1, R3144 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R3208 += 1, R3144 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R3208 += 1, R3144 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R3208 += 1, R3144 += 1, R147 += 1, R148 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3208 += 1, R3143 += 1, R3144 += 1 };
  s2 -> s3 [70, 70] { R3208 += 1, R3144 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R3208 += 1, R3144 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R3208 += 1, R3144 += 1, R147 += 1, R148 += 1 };
  s3 -> s6 [0, 65535] { R3208 += 1 };
  s3 -> s3 [0, 65535] { R3208 += 1, R3144 += 1, R147 += 1, R148 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3208 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3208 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R3210 += 1, R3146 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R3210 += 1, R3146 += 1, R151 += 1, R152 += 1 };
  s0 -> s0 [0, 65535] { R3209 += 1, R3210 += 1 };
  s0 -> s3 [0, 65535] { R3210 += 1, R3145 += 1, R3146 += 1 };
  s0 -> s4 [70, 70] { R3210 += 1, R3146 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R3210 += 1, R3146 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R3210 += 1, R3146 += 1, R151 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R3210 += 1, R3146 += 1, R151 += 1, R152 += 1 };
  s0 -> s1 [71, 74] { R3210 += 1, R3146 += 1, R152 += 1 };
  s0 -> s2 [71, 65535] { R3210 += 1, R3146 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R3210 += 1, R3146 += 1, R152 += 1 };
  s0 -> s1 [76, 65535] { R3210 += 1, R3146 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R3210 += 1, R3146 += 1, R152 += 1 };
  s1 -> s4 [70, 70] { R3210 += 1, R3146 += 1, R152 += 1 };
  s1 -> s5 [70, 70] { R3210 += 1, R3146 += 1, R152 += 1 };
  s1 -> s1 [71, 74] { R3210 += 1, R3146 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R3210 += 1, R3146 += 1, R152 += 1 };
  s1 -> s1 [76, 65535] { R3210 += 1, R3146 += 1, R152 += 1 };
  s2 -> s1 [0, 69] { R3210 += 1, R3146 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R3210 += 1, R3146 += 1, R151 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R3210 += 1, R3146 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R3210 += 1, R3146 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R3210 += 1, R3146 += 1, R151 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R3210 += 1, R3146 += 1, R151 += 1, R152 += 1 };
  s2 -> s1 [71, 74] { R3210 += 1, R3146 += 1, R152 += 1 };
  s2 -> s2 [71, 65535] { R3210 += 1, R3146 += 1, R151 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R3210 += 1, R3146 += 1, R152 += 1 };
  s2 -> s1 [76, 65535] { R3210 += 1, R3146 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R3210 += 1, R3146 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R3210 += 1, R3146 += 1, R151 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R3210 += 1, R3145 += 1, R3146 += 1 };
  s3 -> s4 [70, 70] { R3210 += 1, R3146 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R3210 += 1, R3146 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R3210 += 1, R3146 += 1, R151 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R3210 += 1, R3146 += 1, R151 += 1, R152 += 1 };
  s3 -> s1 [71, 74] { R3210 += 1, R3146 += 1, R152 += 1 };
  s3 -> s2 [71, 65535] { R3210 += 1, R3146 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R3210 += 1, R3146 += 1, R152 += 1 };
  s3 -> s1 [76, 65535] { R3210 += 1, R3146 += 1, R152 += 1 };
  s4 -> s4 [0, 74] { R3210 += 1, R3146 += 1, R152 += 1 };
  s4 -> s11 [75, 75] { R3210 += 1, R3146 += 1, R152 += 1 };
  s4 -> s4 [76, 65535] { R3210 += 1, R3146 += 1, R152 += 1 };
  s6 -> s4 [0, 74] { R3210 += 1, R3146 += 1, R152 += 1 };
  s6 -> s6 [0, 65535] { R3210 += 1, R3146 += 1, R151 += 1, R152 += 1 };
  s6 -> s11 [75, 75] { R3210 += 1, R3146 += 1, R152 += 1 };
  s6 -> s4 [76, 65535] { R3210 += 1, R3146 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R3210 += 1, R3146 += 1, R152 += 1 };
  s8 -> s8 [0, 65535] { R3210 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R3210 += 1, R3146 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R3210 += 1, R3146 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R3210 += 1, R3146 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R3210 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R3210 += 1 };
  s11 -> s11 [0, 65535] { R3210 += 1, R3146 += 1, R152 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R3210 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R3212 += 1, R3148 += 1, R155 += 1, R156 += 1 };
  s0 -> s2 [0, 65535] { R3212 += 1, R3147 += 1, R3148 += 1 };
  s0 -> s0 [0, 65535] { R3211 += 1, R3212 += 1 };
  s0 -> s3 [70, 70] { R3212 += 1, R3148 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R3212 += 1, R3148 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R3212 += 1, R3148 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R3212 += 1, R3148 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 65535] { R3212 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R3212 += 1, R3148 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R3212 += 1, R3148 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R3212 += 1, R3148 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R3212 += 1, R3148 += 1, R155 += 1, R156 += 1 };
  s2 -> s2 [0, 65535] { R3212 += 1, R3147 += 1, R3148 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R3212 += 1, R3148 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R3212 += 1, R3148 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R3212 += 1, R3148 += 1, R155 += 1, R156 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3212 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3212 += 1 };
  s4 -> s4 [0, 65535] { R3212 += 1, R3148 += 1, R155 += 1, R156 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3212 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R3214 += 1, R3150 += 1, R161 += 1, R162 += 1 };
  s0 -> s0 [0, 65535] { R3213 += 1, R3214 += 1 };
  s0 -> s2 [0, 65535] { R3214 += 1, R3149 += 1, R3150 += 1 };
  s0 -> s3 [70, 70] { R3214 += 1, R3150 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R3214 += 1, R3150 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R3214 += 1, R3150 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R3214 += 1, R3150 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535] { R3214 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R3214 += 1, R3150 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R3214 += 1, R3150 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R3214 += 1, R3150 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R3214 += 1, R3150 += 1, R161 += 1, R162 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R3214 += 1, R3149 += 1, R3150 += 1 };
  s2 -> s3 [70, 70] { R3214 += 1, R3150 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R3214 += 1, R3150 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R3214 += 1, R3150 += 1, R161 += 1, R162 += 1 };
  s3 -> s3 [0, 65535] { R3214 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3214 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3214 += 1, R3150 += 1, R161 += 1, R162 += 1 };
  s5 -> s5 [0, 65535] { R3214 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R3216 += 1, R3152 += 1, R167 += 1, R168 += 1 };
  s0 -> s0 [0, 65535] { R3215 += 1, R3216 += 1 };
  s0 -> s2 [0, 65535] { R3216 += 1, R3151 += 1, R3152 += 1 };
  s0 -> s3 [70, 70] { R3216 += 1, R3152 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R3216 += 1, R3152 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R3216 += 1, R3152 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R3216 += 1, R3152 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 65535] { R3216 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R3216 += 1, R3152 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R3216 += 1, R3152 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R3216 += 1, R3152 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R3216 += 1, R3152 += 1, R167 += 1, R168 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3216 += 1, R3151 += 1, R3152 += 1 };
  s2 -> s3 [70, 70] { R3216 += 1, R3152 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R3216 += 1, R3152 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R3216 += 1, R3152 += 1, R167 += 1, R168 += 1 };
  s3 -> s3 [0, 65535] { R3216 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3216 += 1, R3152 += 1, R167 += 1, R168 += 1 };
  s4 -> s6 [0, 65535] { R3216 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3216 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R3218 += 1, R3154 += 1, R175 += 1, R176 += 1 };
  s0 -> s2 [0, 69] { R3218 += 1, R3154 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s3 [0, 69] { R3218 += 1, R3154 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s4 [0, 65535] { R3218 += 1, R3153 += 1, R3154 += 1 };
  s0 -> s0 [0, 65535] { R3217 += 1, R3218 += 1 };
  s0 -> s5 [70, 70] { R3218 += 1, R3154 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s6 [70, 70] { R3218 += 1, R3154 += 1, R175 += 1, R176 += 1 };
  s0 -> s7 [70, 70] { R3218 += 1, R3154 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s8 [70, 70] { R3218 += 1, R3154 += 1, R175 += 1, R176 += 1 };
  s0 -> s9 [70, 70] { R3218 += 1, R3154 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s10 [70, 70] { R3218 += 1, R3154 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s1 [71, 65535] { R3218 += 1, R3154 += 1, R175 += 1, R176 += 1 };
  s0 -> s2 [71, 65535] { R3218 += 1, R3154 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s3 [71, 65535] { R3218 += 1, R3154 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s1 [0, 69] { R3218 += 1, R3154 += 1, R175 += 1, R176 += 1 };
  s1 -> s2 [0, 69] { R3218 += 1, R3154 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s3 [0, 69] { R3218 += 1, R3154 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s5 [70, 70] { R3218 += 1, R3154 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s6 [70, 70] { R3218 += 1, R3154 += 1, R175 += 1, R176 += 1 };
  s1 -> s7 [70, 70] { R3218 += 1, R3154 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s8 [70, 70] { R3218 += 1, R3154 += 1, R175 += 1, R176 += 1 };
  s1 -> s9 [70, 70] { R3218 += 1, R3154 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s10 [70, 70] { R3218 += 1, R3154 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s1 [71, 65535] { R3218 += 1, R3154 += 1, R175 += 1, R176 += 1 };
  s1 -> s2 [71, 65535] { R3218 += 1, R3154 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s3 [71, 65535] { R3218 += 1, R3154 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s17 [0, 69] { R3218 += 1, R3154 += 1, R176 += 1 };
  s2 -> s2 [0, 69] { R3218 += 1, R3154 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s15 [0, 69] { R3218 += 1, R3154 += 1 };
  s2 -> s18 [70, 70] { R3218 += 1, R3154 += 1, R176 += 1 };
  s2 -> s16 [70, 70] { R3218 += 1, R3154 += 1 };
  s2 -> s11 [70, 70] { R3218 += 1, R3154 += 1 };
  s2 -> s14 [70, 70] { R3218 += 1, R3154 += 1, R176 += 1 };
  s2 -> s7 [70, 70] { R3218 += 1, R3154 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s9 [70, 70] { R3218 += 1, R3154 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s17 [71, 65535] { R3218 += 1, R3154 += 1, R176 += 1 };
  s2 -> s2 [71, 65535] { R3218 += 1, R3154 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s15 [71, 65535] { R3218 += 1, R3154 += 1 };
  s3 -> s2 [0, 69] { R3218 += 1, R3154 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [0, 69] { R3218 += 1, R3154 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s15 [0, 69] { R3218 += 1, R3154 += 1 };
  s3 -> s16 [70, 70] { R3218 += 1, R3154 += 1 };
  s3 -> s5 [70, 70] { R3218 += 1, R3154 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s11 [70, 70] { R3218 += 1, R3154 += 1 };
  s3 -> s7 [70, 70] { R3218 += 1, R3154 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s9 [70, 70] { R3218 += 1, R3154 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s10 [70, 70] { R3218 += 1, R3154 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s2 [71, 65535] { R3218 += 1, R3154 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s3 [71, 65535] { R3218 += 1, R3154 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s15 [71, 65535] { R3218 += 1, R3154 += 1 };
  s4 -> s1 [0, 69] { R3218 += 1, R3154 += 1, R175 += 1, R176 += 1 };
  s4 -> s2 [0, 69] { R3218 += 1, R3154 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s3 [0, 69] { R3218 += 1, R3154 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s4 [0, 65535] { R3218 += 1, R3153 += 1, R3154 += 1 };
  s4 -> s5 [70, 70] { R3218 += 1, R3154 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s6 [70, 70] { R3218 += 1, R3154 += 1, R175 += 1, R176 += 1 };
  s4 -> s7 [70, 70] { R3218 += 1, R3154 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s8 [70, 70] { R3218 += 1, R3154 += 1, R175 += 1, R176 += 1 };
  s4 -> s9 [70, 70] { R3218 += 1, R3154 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s10 [70, 70] { R3218 += 1, R3154 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s1 [71, 65535] { R3218 += 1, R3154 += 1, R175 += 1, R176 += 1 };
  s4 -> s2 [71, 65535] { R3218 += 1, R3154 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s3 [71, 65535] { R3218 += 1, R3154 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s6 -> s6 [0, 65535] { R3218 += 1, R3154 += 1, R175 += 1, R176 += 1 };
  s6 -> s9 [0, 65535] { R3218 += 1, R3154 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s6 -> s10 [0, 65535] { R3218 += 1, R3154 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s9 -> s11 [0, 65535] { R3218 += 1, R3154 += 1 };
  s9 -> s14 [0, 65535] { R3218 += 1, R3154 += 1, R176 += 1 };
  s9 -> s9 [0, 65535] { R3218 += 1, R3154 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s10 -> s11 [0, 65535] { R3218 += 1, R3154 += 1 };
  s10 -> s9 [0, 65535] { R3218 += 1, R3154 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s10 -> s10 [0, 65535] { R3218 += 1, R3154 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s11 [0, 65535] { R3218 += 1, R3154 += 1 };
  s11 -> s13 [0, 65535] { R3218 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R3218 += 1 };
  s14 -> s11 [0, 65535] { R3218 += 1, R3154 += 1 };
  s14 -> s14 [0, 65535] { R3218 += 1, R3154 += 1, R176 += 1 };
  s15 -> s15 [0, 69] { R3218 += 1, R3154 += 1 };
  s15 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R3218 += 1 };
  s15 -> s16 [70, 70] { R3218 += 1, R3154 += 1 };
  s15 -> s11 [70, 70] { R3218 += 1, R3154 += 1 };
  s15 -> s15 [71, 65535] { R3218 += 1, R3154 += 1 };
  s16 -> s16 [0, 65535] { R3218 += 1 };
  s16 -> s12 [0, 65535];
  s17 -> s17 [0, 69] { R3218 += 1, R3154 += 1, R176 += 1 };
  s17 -> s15 [0, 69] { R3218 += 1, R3154 += 1 };
  s17 -> s18 [70, 70] { R3218 += 1, R3154 += 1, R176 += 1 };
  s17 -> s16 [70, 70] { R3218 += 1, R3154 += 1 };
  s17 -> s11 [70, 70] { R3218 += 1, R3154 += 1 };
  s17 -> s14 [70, 70] { R3218 += 1, R3154 += 1, R176 += 1 };
  s17 -> s17 [71, 65535] { R3218 += 1, R3154 += 1, R176 += 1 };
  s17 -> s15 [71, 65535] { R3218 += 1, R3154 += 1 };
  accepting s16, s12, s13, s15, s11;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R3220 += 1, R3156 += 1, R185 += 1, R186 += 1 };
  s0 -> s0 [0, 65535] { R3219 += 1, R3220 += 1 };
  s0 -> s2 [0, 65535] { R3220 += 1, R3155 += 1, R3156 += 1 };
  s0 -> s3 [70, 70] { R3220 += 1, R3156 += 1, R185 += 1, R186 += 1 };
  s0 -> s4 [70, 70] { R3220 += 1, R3156 += 1, R185 += 1, R186 += 1 };
  s0 -> s1 [71, 65535] { R3220 += 1, R3156 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 69] { R3220 += 1, R3156 += 1, R185 += 1, R186 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3220 += 1 };
  s1 -> s3 [70, 70] { R3220 += 1, R3156 += 1, R185 += 1, R186 += 1 };
  s1 -> s4 [70, 70] { R3220 += 1, R3156 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [71, 65535] { R3220 += 1, R3156 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [0, 69] { R3220 += 1, R3156 += 1, R185 += 1, R186 += 1 };
  s2 -> s2 [0, 65535] { R3220 += 1, R3155 += 1, R3156 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R3220 += 1, R3156 += 1, R185 += 1, R186 += 1 };
  s2 -> s4 [70, 70] { R3220 += 1, R3156 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [71, 65535] { R3220 += 1, R3156 += 1, R185 += 1, R186 += 1 };
  s3 -> s6 [0, 65535] { R3220 += 1 };
  s3 -> s3 [0, 65535] { R3220 += 1, R3156 += 1, R185 += 1, R186 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3220 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3220 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R3222 += 1, R3158 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s0 -> s2 [0, 69] { R3222 += 1, R3158 += 1, R2741 += 1, R2742 += 1 };
  s0 -> s3 [0, 69] { R3222 += 1, R3158 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s0 -> s0 [0, 65535] { R3221 += 1, R3222 += 1 };
  s0 -> s4 [0, 65535] { R3222 += 1, R3157 += 1, R3158 += 1 };
  s0 -> s5 [70, 70] { R3222 += 1, R3158 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s0 -> s6 [70, 70] { R3222 += 1, R3158 += 1, R2741 += 1, R2742 += 1 };
  s0 -> s7 [70, 70] { R3222 += 1, R3158 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s0 -> s8 [70, 70] { R3222 += 1, R3158 += 1, R2741 += 1, R2742 += 1 };
  s0 -> s9 [70, 70] { R3222 += 1, R3158 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s0 -> s10 [70, 70] { R3222 += 1, R3158 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s0 -> s1 [71, 65535] { R3222 += 1, R3158 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s0 -> s2 [71, 65535] { R3222 += 1, R3158 += 1, R2741 += 1, R2742 += 1 };
  s0 -> s3 [71, 65535] { R3222 += 1, R3158 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s1 -> s1 [0, 69] { R3222 += 1, R3158 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s1 -> s11 [0, 65535];
  s1 -> s1 [0, 65535] { R3222 += 1 };
  s1 -> s9 [70, 70] { R3222 += 1, R3158 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s1 -> s10 [70, 70] { R3222 += 1, R3158 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s1 -> s1 [71, 65535] { R3222 += 1, R3158 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s2 -> s1 [0, 69] { R3222 += 1, R3158 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s2 -> s2 [0, 69] { R3222 += 1, R3158 += 1, R2741 += 1, R2742 += 1 };
  s2 -> s3 [0, 69] { R3222 += 1, R3158 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s2 -> s5 [70, 70] { R3222 += 1, R3158 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s2 -> s6 [70, 70] { R3222 += 1, R3158 += 1, R2741 += 1, R2742 += 1 };
  s2 -> s7 [70, 70] { R3222 += 1, R3158 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s2 -> s8 [70, 70] { R3222 += 1, R3158 += 1, R2741 += 1, R2742 += 1 };
  s2 -> s9 [70, 70] { R3222 += 1, R3158 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s2 -> s10 [70, 70] { R3222 += 1, R3158 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s2 -> s1 [71, 65535] { R3222 += 1, R3158 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s2 -> s2 [71, 65535] { R3222 += 1, R3158 += 1, R2741 += 1, R2742 += 1 };
  s2 -> s3 [71, 65535] { R3222 += 1, R3158 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s3 -> s1 [0, 69] { R3222 += 1, R3158 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s3 -> s3 [0, 69] { R3222 += 1, R3158 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s3 -> s5 [70, 70] { R3222 += 1, R3158 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s3 -> s7 [70, 70] { R3222 += 1, R3158 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s3 -> s9 [70, 70] { R3222 += 1, R3158 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s3 -> s10 [70, 70] { R3222 += 1, R3158 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s3 -> s1 [71, 65535] { R3222 += 1, R3158 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s3 -> s3 [71, 65535] { R3222 += 1, R3158 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s4 -> s1 [0, 69] { R3222 += 1, R3158 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s4 -> s2 [0, 69] { R3222 += 1, R3158 += 1, R2741 += 1, R2742 += 1 };
  s4 -> s3 [0, 69] { R3222 += 1, R3158 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s4 -> s4 [0, 65535] { R3222 += 1, R3157 += 1, R3158 += 1 };
  s4 -> s5 [70, 70] { R3222 += 1, R3158 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s4 -> s6 [70, 70] { R3222 += 1, R3158 += 1, R2741 += 1, R2742 += 1 };
  s4 -> s7 [70, 70] { R3222 += 1, R3158 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s4 -> s8 [70, 70] { R3222 += 1, R3158 += 1, R2741 += 1, R2742 += 1 };
  s4 -> s9 [70, 70] { R3222 += 1, R3158 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s4 -> s10 [70, 70] { R3222 += 1, R3158 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s4 -> s1 [71, 65535] { R3222 += 1, R3158 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s4 -> s2 [71, 65535] { R3222 += 1, R3158 += 1, R2741 += 1, R2742 += 1 };
  s4 -> s3 [71, 65535] { R3222 += 1, R3158 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s6 -> s6 [0, 65535] { R3222 += 1, R3158 += 1, R2741 += 1, R2742 += 1 };
  s6 -> s7 [0, 65535] { R3222 += 1, R3158 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s6 -> s9 [0, 65535] { R3222 += 1, R3158 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s7 -> s7 [0, 65535] { R3222 += 1, R3158 += 1, R2742 += 1, R2743 += 1, R2744 += 1 };
  s7 -> s9 [0, 65535] { R3222 += 1, R3158 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s12 [0, 65535] { R3222 += 1 };
  s9 -> s9 [0, 65535] { R3222 += 1, R3158 += 1, R2742 += 1, R2744 += 1, R2745 += 1 };
  s10 -> s11 [0, 65535];
  s10 -> s10 [0, 65535] { R3222 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R3222 += 1 };
  accepting s12, s9, s1, s10, s11;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s0 -> s2 [0, 69] { R3224 += 1, R3160 += 1, R3068 += 1, R3069 += 1, R3070 += 1 };
  s0 -> s3 [0, 69] { R3224 += 1, R3160 += 1, R3067 += 1, R3068 += 1 };
  s0 -> s0 [0, 65535] { R3223 += 1, R3224 += 1 };
  s0 -> s4 [0, 65535] { R3224 += 1, R3159 += 1, R3160 += 1 };
  s0 -> s5 [70, 70] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s0 -> s6 [70, 70] { R3224 += 1, R3160 += 1, R3067 += 1, R3068 += 1 };
  s0 -> s7 [70, 70] { R3224 += 1, R3160 += 1, R3068 += 1, R3069 += 1, R3070 += 1 };
  s0 -> s8 [70, 70] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s0 -> s9 [70, 70] { R3224 += 1, R3160 += 1, R3067 += 1, R3068 += 1 };
  s0 -> s10 [70, 70] { R3224 += 1, R3160 += 1, R3068 += 1, R3069 += 1, R3070 += 1 };
  s0 -> s1 [71, 74] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s0 -> s2 [71, 65535] { R3224 += 1, R3160 += 1, R3068 += 1, R3069 += 1, R3070 += 1 };
  s0 -> s3 [71, 65535] { R3224 += 1, R3160 += 1, R3067 += 1, R3068 += 1 };
  s0 -> s11 [75, 75] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s0 -> s12 [78, 78] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s0 -> s1 [79, 65535] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s1 -> s1 [0, 69] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s1 -> s5 [70, 70] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s1 -> s8 [70, 70] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s1 -> s1 [71, 74] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s1 -> s11 [75, 75] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s1 -> s12 [78, 78] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s1 -> s1 [79, 65535] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s2 -> s1 [0, 69] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s2 -> s2 [0, 69] { R3224 += 1, R3160 += 1, R3068 += 1, R3069 += 1, R3070 += 1 };
  s2 -> s5 [70, 70] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s2 -> s7 [70, 70] { R3224 += 1, R3160 += 1, R3068 += 1, R3069 += 1, R3070 += 1 };
  s2 -> s8 [70, 70] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s2 -> s10 [70, 70] { R3224 += 1, R3160 += 1, R3068 += 1, R3069 += 1, R3070 += 1 };
  s2 -> s1 [71, 74] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s2 -> s2 [71, 65535] { R3224 += 1, R3160 += 1, R3068 += 1, R3069 += 1, R3070 += 1 };
  s2 -> s11 [75, 75] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s2 -> s12 [78, 78] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s2 -> s1 [79, 65535] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s3 -> s1 [0, 69] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s3 -> s2 [0, 69] { R3224 += 1, R3160 += 1, R3068 += 1, R3069 += 1, R3070 += 1 };
  s3 -> s3 [0, 69] { R3224 += 1, R3160 += 1, R3067 += 1, R3068 += 1 };
  s3 -> s5 [70, 70] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s3 -> s6 [70, 70] { R3224 += 1, R3160 += 1, R3067 += 1, R3068 += 1 };
  s3 -> s7 [70, 70] { R3224 += 1, R3160 += 1, R3068 += 1, R3069 += 1, R3070 += 1 };
  s3 -> s8 [70, 70] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s3 -> s9 [70, 70] { R3224 += 1, R3160 += 1, R3067 += 1, R3068 += 1 };
  s3 -> s10 [70, 70] { R3224 += 1, R3160 += 1, R3068 += 1, R3069 += 1, R3070 += 1 };
  s3 -> s1 [71, 74] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s3 -> s2 [71, 65535] { R3224 += 1, R3160 += 1, R3068 += 1, R3069 += 1, R3070 += 1 };
  s3 -> s3 [71, 65535] { R3224 += 1, R3160 += 1, R3067 += 1, R3068 += 1 };
  s3 -> s11 [75, 75] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s3 -> s12 [78, 78] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s3 -> s1 [79, 65535] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s4 -> s1 [0, 69] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s4 -> s2 [0, 69] { R3224 += 1, R3160 += 1, R3068 += 1, R3069 += 1, R3070 += 1 };
  s4 -> s3 [0, 69] { R3224 += 1, R3160 += 1, R3067 += 1, R3068 += 1 };
  s4 -> s4 [0, 65535] { R3224 += 1, R3159 += 1, R3160 += 1 };
  s4 -> s5 [70, 70] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s4 -> s6 [70, 70] { R3224 += 1, R3160 += 1, R3067 += 1, R3068 += 1 };
  s4 -> s7 [70, 70] { R3224 += 1, R3160 += 1, R3068 += 1, R3069 += 1, R3070 += 1 };
  s4 -> s8 [70, 70] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s4 -> s9 [70, 70] { R3224 += 1, R3160 += 1, R3067 += 1, R3068 += 1 };
  s4 -> s10 [70, 70] { R3224 += 1, R3160 += 1, R3068 += 1, R3069 += 1, R3070 += 1 };
  s4 -> s1 [71, 74] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s4 -> s2 [71, 65535] { R3224 += 1, R3160 += 1, R3068 += 1, R3069 += 1, R3070 += 1 };
  s4 -> s3 [71, 65535] { R3224 += 1, R3160 += 1, R3067 += 1, R3068 += 1 };
  s4 -> s11 [75, 75] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s4 -> s12 [78, 78] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s4 -> s1 [79, 65535] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s6 -> s8 [0, 74] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s6 -> s6 [0, 65535] { R3224 += 1, R3160 += 1, R3067 += 1, R3068 += 1 };
  s6 -> s10 [0, 65535] { R3224 += 1, R3160 += 1, R3068 += 1, R3069 += 1, R3070 += 1 };
  s6 -> s20 [75, 75] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s6 -> s14 [78, 78] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s6 -> s8 [79, 65535] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s8 -> s8 [0, 74] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s8 -> s20 [75, 75] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s8 -> s14 [78, 78] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s8 -> s8 [79, 65535] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s10 -> s8 [0, 74] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s10 -> s10 [0, 65535] { R3224 += 1, R3160 += 1, R3068 += 1, R3069 += 1, R3070 += 1 };
  s10 -> s20 [75, 75] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s10 -> s14 [78, 78] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s10 -> s8 [79, 65535] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s11 -> s11 [0, 69] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s11 -> s20 [70, 70] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s11 -> s21 [70, 70] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s11 -> s11 [71, 75] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s11 -> s15 [78, 78] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s11 -> s11 [79, 65535] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s12 -> s12 [0, 69] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s12 -> s13 [70, 70] { R3224 += 1, R3160 += 1, R3068 += 1 };
  s12 -> s14 [70, 70] { R3224 += 1, R3160 += 1, R3068 += 1 };
  s12 -> s12 [71, 74] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s12 -> s12 [71, 65535] { R3224 += 1, R3160 += 1, R3068 += 1 };
  s12 -> s15 [75, 75] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s12 -> s12 [78, 65535] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s14 -> s14 [0, 74] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s14 -> s14 [0, 65535] { R3224 += 1, R3160 += 1, R3068 += 1 };
  s14 -> s17 [75, 75] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s14 -> s14 [78, 65535] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s15 -> s15 [0, 69] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s15 -> s15 [0, 65535] { R3224 += 1 };
  s15 -> s16 [0, 65535];
  s15 -> s17 [70, 70] { R3224 += 1, R3160 += 1, R3068 += 1 };
  s15 -> s18 [70, 70] { R3224 += 1, R3160 += 1, R3068 += 1 };
  s15 -> s15 [71, 75] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s15 -> s15 [71, 65535] { R3224 += 1, R3160 += 1, R3068 += 1 };
  s15 -> s15 [78, 65535] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s16 -> s16 [0, 65535];
  s17 -> s17 [0, 75] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s17 -> s19 [0, 65535] { R3224 += 1 };
  s17 -> s17 [0, 65535] { R3224 += 1, R3160 += 1, R3068 += 1 };
  s17 -> s16 [0, 65535];
  s17 -> s17 [78, 65535] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s18 -> s16 [0, 65535];
  s18 -> s18 [0, 65535] { R3224 += 1 };
  s19 -> s19 [0, 65535] { R3224 += 1 };
  s19 -> s16 [0, 65535];
  s20 -> s20 [0, 75] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s20 -> s17 [78, 78] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  s20 -> s20 [79, 65535] { R3224 += 1, R3160 += 1, R3068 += 1, R3070 += 1 };
  accepting s17, s16, s19, s18, s15;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R3224 && R25 - R3224 = -1 && R26 = R3224 && R27 - R3224 = -1 && R28 = R3224 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R3072 + -1*R3068 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R3072 + -1*R3068 - R130 = 0 && R129 + R3071 + R3067 = 0 && R131 + R3073 + R3069 = 0 && R132 + R3074 + R3070 = 0 && R3135 = 0 && R3136 = 0 && R3145 = 0 && R3146 = 0 && R3153 = 0 && R3154 = 0 && R3157 = 0 && R3158 = 0 && R3159 = 0 && R3160 = 0 && R3161 = 0 && R3162 = R3224 && R3163 = 0 && R3164 = R3224 && R3165 = 0 && R3166 = R3224 && R3167 = 0 && R3168 = R3224 && R3169 = 0 && R3170 = R3224 && R3171 = 0 && R3172 = R3224 && R3173 = 0 && R3174 = R3224 && R3175 = 0 && R3176 = R3224 && R3177 = 0 && R3178 = R3224 && R3179 = 0 && R3180 = R3224 && R3181 = 0 && R3182 = R3224 && R3183 = 0 && R3184 = R3224 && R3185 = 0 && R3186 = R3224 && R3187 = 0 && R3188 = R3224 && R3189 = 0 && R3190 = R3224 && R3191 = 0 && R3192 = R3224 && R3193 = 0 && R3194 = R3224 && R3195 = 0 && R3196 = R3224 && R3197 = 0 && R3198 = R3224 && R3199 = 0 && R3200 = R3224 && R3201 = 0 && R3202 = R3224 && R3203 = 0 && R3204 = R3224 && R3205 = 0 && R3206 = R3224 && R3207 = 0 && R3208 = R3224 && R3209 = 0 && R3210 = R3224 && R3211 = 0 && R3212 = R3224 && R3213 = 0 && R3214 = R3224 && R3215 = 0 && R3216 = R3224 && R3217 = 0 && R3218 = R3224 && R3219 = 0 && R3220 = R3224 && R3221 = 0 && R3222 = R3224 && R3223 = 0 && -1 < R2 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R3072 + -1*R3068 - R130 < 1 && 0 < R3224 && (R2 != 0 || R22 = 0 || (R3075 = 0 && R3076 = 0)) && (R2 != 0 || R22 = 0 || (R3077 = 0 && R3078 = 0)) && (R2 != 0 || R22 = 0 || (R3079 = 0 && R3080 = 0)) && (R2 != 0 || R22 = 0 || (R3081 = 0 && R3082 = 0)) && (R2 != 0 || R22 = 0 || (R3083 = 0 && R3084 = 0)) && (R2 != 0 || R22 = 0 || (R3085 = 0 && R3086 = 0)) && (R2 != 0 || R22 = 0 || (R3087 = 0 && R3088 = 0)) && (R2 != 0 || R22 = 0 || (R3089 = 0 && R3090 = 0)) && (R2 != 0 || R22 = 0 || (R3091 = 0 && R3092 = 0)) && (R2 != 0 || R22 = 0 || (R3093 = 0 && R3094 = 0)) && (R2 != 0 || R22 = 0 || (R3095 = 0 && R3096 = 0)) && (R2 != 0 || R22 = 0 || (R3097 = 0 && R3098 = 0)) && (R2 != 0 || R22 = 0 || (R3099 = 0 && R3100 = 0)) && (R2 != 0 || R22 = 0 || (R3101 = 0 && R3102 = 0)) && (R2 != 0 || R22 = 0 || (R3103 = 0 && R3104 = 0)) && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R3072 + -1*R3068 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R191 + R187 = 0 && R114 + R192 + R188 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R3072 + -1*R3068 - R130 = 0 || R130 + R3072 + R3068 < 1) && (R81 + R158 + R155 = 0 || R130 + R3072 + R3068 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R3072 + -1*R3068 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R3072 + R3068 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R3072 + -1*R3068 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R3072 + R3068 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R3072 + -1*R3068 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R3072 + R3068 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 != 0 || R112 + R190 + R186 + -1*R3072 + -1*R3068 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R3072 + R3068 = 0)) && (R113 + R191 + R187 != 0 || R83 + R160 + R157 + -1*R192 + -1*R188 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R2746 + R2741 != 0 || R120 + R2747 + R2742 + -1*R3072 + -1*R3068 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R3072 + R3068 = 0)) && (R3075 != 0 || R2 = R3076 || R2 < 1) && (R3077 != 0 || R2 = R3078 || R2 < 1) && (R3079 != 0 || R2 = R3080 || R2 < 1) && (R3081 != 0 || R2 = R3082 || R2 < 1) && (R3083 != 0 || R2 = R3084 || R2 < 1) && (R3085 != 0 || R2 = R3086 || R2 < 1) && (R3087 != 0 || R2 = R3088 || R2 < 1) && (R3089 != 0 || R2 = R3090 || R2 < 1) && (R3091 != 0 || R2 = R3092 || R2 < 1) && (R3093 != 0 || R2 = R3094 || R2 < 1) && (R3095 != 0 || R2 = R3096 || R2 < 1) && (R3097 != 0 || R2 = R3098 || R2 < 1) && (R3099 != 0 || R2 = R3100 || R2 < 1) && (R3101 != 0 || R2 = R3102 || R2 < 1) && (R3103 != 0 || R2 = R3104 || R2 < 1) && (R23 = 0 || (R3133 = 0 && R3134 = 0)) && (R23 = 0 || (R3137 = 0 && R3138 = 0)) && (R23 = 0 || (R3139 = 0 && R3140 = 0)) && (R23 = 0 || (R3141 = 0 && R3142 = 0)) && (R23 = 0 || (R3143 = 0 && R3144 = 0)) && (R23 = 0 || (R3147 = 0 && R3148 = 0)) && (R23 = 0 || (R3149 = 0 && R3150 = 0)) && (R23 = 0 || (R3151 = 0 && R3152 = 0)) && (R23 = 0 || (R3155 = 0 && R3156 = 0)) && (R24 = 0 || (R3105 = 0 && R3106 = 0)) && (R24 = 0 || (R3107 = 0 && R3108 = 0)) && (R24 = 0 || (R3109 = 0 && R3110 = 0)) && (R24 = 0 || (R3111 = 0 && R3112 = 0)) && (R24 = 0 || (R3113 = 0 && R3114 = 0)) && (R24 = 0 || (R3115 = 0 && R3116 = 0)) && (R24 = 0 || (R3117 = 0 && R3118 = 0)) && (R24 = 0 || (R3119 = 0 && R3120 = 0)) && (R24 = 0 || (R3121 = 0 && R3122 = 0)) && (R24 = 0 || (R3123 = 0 && R3124 = 0)) && (R24 = 0 || (R3125 = 0 && R3126 = 0)) && (R24 = 0 || (R3127 = 0 && R3128 = 0)) && (R24 = 0 || (R3129 = 0 && R3130 = 0)) && (R24 = 0 || (R3131 = 0 && R3132 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R3072 + R3068 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R3072 + R3068 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R3072 + R3068 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 = 0 || (R83 + R160 + R157 = 0 && R130 + R3072 + R3068 = 0)) && (R113 + R191 + R187 = 0 || R83 + R160 + R157 < 1) && (R119 + R2746 + R2741 = 0 || (R83 + R160 + R157 = 0 && R130 + R3072 + R3068 = 0)) && (R123 + R2750 + R2745 = 0 || (R121 + R2748 + R2743 = 0 && R122 + R2749 + R2744 = 0)) && (R3075 = 0 || R2 < 1) && (R3077 = 0 || R2 < 1) && (R3079 = 0 || R2 < 1) && (R3081 = 0 || R2 < 1) && (R3083 = 0 || R2 < 1) && (R3085 = 0 || R2 < 1) && (R3087 = 0 || R2 < 1) && (R3089 = 0 || R2 < 1) && (R3091 = 0 || R2 < 1) && (R3093 = 0 || R2 < 1) && (R3095 = 0 || R2 < 1) && (R3097 = 0 || R2 < 1) && (R3099 = 0 || R2 < 1) && (R3101 = 0 || R2 < 1) && (R3103 = 0 || R2 < 1);
// End of Parikh automata intersection problem
