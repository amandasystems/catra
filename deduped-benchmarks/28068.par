// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R2, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R4015, R4016, R4017, R4018, R4019, R4020, R4021, R4022, R4023, R4024, R4973, R4974, R4975, R4976, R4977, R4978, R4979, R4980, R4981, R4982, R4983, R4984, R4985, R4986, R4987, R4988, R4989, R4990, R4991, R4992, R4993, R4994, R4995, R4996, R4997, R4998, R4999, R5, R5000, R5001, R5002, R5003, R5004, R5005, R5006, R5007, R5008, R5009, R5010, R5011, R5012, R5013, R5014, R5015, R5016, R5017, R5018, R5019, R5020, R5021, R5022, R5023, R5024, R5025, R5026, R5027, R5028, R5029, R5030, R5031, R5032, R5033, R5034, R5035, R5036, R5037, R5038, R5039, R5040, R5041, R5042, R5043, R5044, R5045, R5046, R5047, R5048, R5049, R5050, R5051, R5052, R5053, R5054, R5055, R5056, R5057, R5058, R5059, R5060, R5061, R5062, R5063, R5064, R5065, R5066, R5067, R5068, R5069, R5070, R5071, R5072, R5073, R5074, R5075, R5076, R5077, R5078, R5079, R5080, R5081, R5082, R5083, R5084, R5085, R5086, R5087, R5088, R5089, R5090, R5091, R5092, R5093, R5094, R5095, R5096, R5097, R5098, R5099, R5100, R5101, R5102, R5103, R5104, R5105, R5106, R5107, R5108, R5109, R5110, R5111, R5112, R5113, R5114, R5115, R5116, R5117, R5118, R5119, R5120, R5121, R5122, R5123, R5124, R5125, R5126, R5127, R5128, R5129, R5130, R63, R65, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R30 += 1 };
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R5011 += 1, R5012 += 1 };
  s0 -> s1 [0, 65535] { R5012 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R5012 += 1, R24 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R5014 += 1 };
  s0 -> s0 [0, 65535] { R5013 += 1, R5014 += 1 };
  s0 -> s2 [70, 70] { R5014 += 1 };
  s0 -> s3 [70, 70] { R5014 += 1 };
  s0 -> s1 [76, 65535] { R5014 += 1 };
  s1 -> s1 [0, 69] { R5014 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5014 += 1 };
  s1 -> s3 [70, 70] { R5014 += 1 };
  s1 -> s1 [76, 65535] { R5014 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R5014 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R5014 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R5016 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R5015 += 1, R5016 += 1 };
  s0 -> s2 [70, 70] { R5016 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R5016 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R5016 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R5016 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5016 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R5016 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R5016 += 1, R63 += 1 };
  s2 -> s2 [0, 65535] { R5016 += 1, R63 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R5018 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R5017 += 1, R5018 += 1 };
  s0 -> s2 [70, 70] { R5018 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R5018 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R5018 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R5018 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5018 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R5018 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R5018 += 1, R65 += 1 };
  s2 -> s2 [0, 65535] { R5018 += 1, R65 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R5020 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R5019 += 1, R5020 += 1 };
  s0 -> s2 [70, 70] { R5020 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R5020 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R5020 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R5020 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5020 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R5020 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R5020 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5020 += 1, R67 += 1, R68 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R5022 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R5021 += 1, R5022 += 1 };
  s0 -> s2 [70, 70] { R5022 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R5022 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R5022 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R5022 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5022 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R5022 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R5022 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R5022 += 1, R73 += 1, R74 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R5024 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R5023 += 1, R5024 += 1 };
  s0 -> s2 [70, 70] { R5024 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R5024 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R5024 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R5024 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5024 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R5024 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R5024 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535] { R5024 += 1, R77 += 1, R78 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R5026 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R5025 += 1, R5026 += 1 };
  s0 -> s2 [70, 70] { R5026 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R5026 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R5026 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R5026 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5026 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R5026 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R5026 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5026 += 1, R81 += 1, R82 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R5028 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R5027 += 1, R5028 += 1 };
  s0 -> s2 [70, 70] { R5028 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R5028 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R5028 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R5028 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5028 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R5028 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R5028 += 1, R87 += 1, R88 += 1 };
  s2 -> s2 [0, 65535] { R5028 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R5030 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R5029 += 1, R5030 += 1 };
  s0 -> s2 [70, 70] { R5030 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R5030 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R5030 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R5030 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5030 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R5030 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R5030 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535] { R5030 += 1, R93 += 1, R94 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R5032 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R5031 += 1, R5032 += 1 };
  s0 -> s2 [70, 70] { R5032 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R5032 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R5032 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R5032 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5032 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R5032 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R5032 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5032 += 1, R101 += 1, R102 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R5034 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R5033 += 1, R5034 += 1 };
  s0 -> s2 [70, 70] { R5034 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R5034 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R5034 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R5034 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5034 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R5034 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R5034 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5034 += 1, R111 += 1, R112 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R5036 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R5035 += 1, R5036 += 1 };
  s0 -> s2 [70, 70] { R5036 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R5036 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R5036 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R5036 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5036 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R5036 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R5036 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R5036 += 1, R119 += 1, R120 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R5038 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R5037 += 1, R5038 += 1 };
  s0 -> s2 [70, 70] { R5038 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R5038 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R5038 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R5038 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R5038 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R5038 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R5038 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535] { R5038 += 1, R129 += 1, R130 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R5068 += 1 };
  s0 -> s0 [0, 65535] { R5067 += 1, R5068 += 1 };
  s0 -> s2 [70, 70] { R5068 += 1 };
  s0 -> s1 [71, 65535] { R5068 += 1 };
  s1 -> s1 [0, 69] { R5068 += 1 };
  s1 -> s2 [70, 70] { R5068 += 1 };
  s1 -> s1 [71, 65535] { R5068 += 1 };
  s2 -> s2 [0, 65535] { R5068 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R5069 += 1, R5070 += 1 };
  s0 -> s1 [0, 65535] { R5070 += 1, R2 += 1 };
  s1 -> s1 [0, 65535] { R5070 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R5072 += 1 };
  s0 -> s2 [0, 65535] { R5072 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R5071 += 1, R5072 += 1 };
  s0 -> s3 [70, 70] { R5072 += 1 };
  s0 -> s1 [71, 65535] { R5072 += 1 };
  s1 -> s1 [0, 69] { R5072 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R5072 += 1 };
  s1 -> s1 [71, 65535] { R5072 += 1 };
  s2 -> s1 [0, 69] { R5072 += 1 };
  s2 -> s2 [0, 65535] { R5072 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R5072 += 1 };
  s2 -> s1 [71, 65535] { R5072 += 1 };
  s3 -> s3 [0, 65535] { R5072 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R5074 += 1, R4982 += 1 };
  s0 -> s0 [0, 65535] { R5073 += 1, R5074 += 1 };
  s0 -> s2 [0, 65535] { R5074 += 1, R4981 += 1, R4982 += 1 };
  s0 -> s1 [71, 65535] { R5074 += 1, R4982 += 1 };
  s1 -> s1 [0, 69] { R5074 += 1, R4982 += 1 };
  s1 -> s1 [0, 65535] { R5074 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R5074 += 1, R4982 += 1 };
  s2 -> s1 [0, 69] { R5074 += 1, R4982 += 1 };
  s2 -> s2 [0, 65535] { R5074 += 1, R4981 += 1, R4982 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [71, 65535] { R5074 += 1, R4982 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R5075 += 1, R5076 += 1 };
  s0 -> s1 [0, 65535] { R5076 += 1, R4984 += 1, R22 += 1 };
  s0 -> s2 [0, 65535] { R5076 += 1, R4983 += 1, R4984 += 1 };
  s1 -> s4 [0, 65535] { R5076 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R5076 += 1, R4984 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R5076 += 1, R4984 += 1, R22 += 1 };
  s2 -> s2 [0, 65535] { R5076 += 1, R4983 += 1, R4984 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5076 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R5078 += 1, R4986 += 1 };
  s0 -> s0 [0, 65535] { R5077 += 1, R5078 += 1 };
  s0 -> s2 [0, 65535] { R5078 += 1, R4985 += 1, R4986 += 1 };
  s0 -> s1 [75, 65535] { R5078 += 1, R4986 += 1 };
  s1 -> s1 [0, 70] { R5078 += 1, R4986 += 1 };
  s1 -> s1 [0, 65535] { R5078 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R5078 += 1, R4986 += 1 };
  s2 -> s1 [0, 70] { R5078 += 1, R4986 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5078 += 1, R4985 += 1, R4986 += 1 };
  s2 -> s1 [75, 65535] { R5078 += 1, R4986 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s0 [0, 65535] { R5079 += 1, R5080 += 1 };
  s0 -> s1 [0, 65535] { R5080 += 1, R4987 += 1, R4988 += 1 };
  s0 -> s2 [0, 65535] { R5080 += 1, R4988 += 1, R138 += 1 };
  s1 -> s1 [0, 65535] { R5080 += 1, R4987 += 1, R4988 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R5080 += 1, R4988 += 1, R138 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5080 += 1, R4988 += 1, R138 += 1 };
  s2 -> s4 [0, 65535] { R5080 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5080 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R5082 += 1, R4990 += 1 };
  s0 -> s2 [0, 65535] { R5082 += 1, R4990 += 1, R140 += 1 };
  s0 -> s3 [0, 65535] { R5082 += 1, R4989 += 1, R4990 += 1 };
  s0 -> s0 [0, 65535] { R5081 += 1, R5082 += 1 };
  s0 -> s1 [76, 65535] { R5082 += 1, R4990 += 1 };
  s1 -> s1 [0, 74] { R5082 += 1, R4990 += 1 };
  s1 -> s1 [0, 65535] { R5082 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [76, 65535] { R5082 += 1, R4990 += 1 };
  s2 -> s1 [0, 74] { R5082 += 1, R4990 += 1 };
  s2 -> s2 [0, 65535] { R5082 += 1, R4990 += 1, R140 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R5082 += 1 };
  s2 -> s1 [76, 65535] { R5082 += 1, R4990 += 1 };
  s3 -> s1 [0, 74] { R5082 += 1, R4990 += 1 };
  s3 -> s2 [0, 65535] { R5082 += 1, R4990 += 1, R140 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5082 += 1, R4989 += 1, R4990 += 1 };
  s3 -> s1 [76, 65535] { R5082 += 1, R4990 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5082 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R5084 += 1, R4992 += 1, R145 += 1, R146 += 1 };
  s0 -> s0 [0, 65535] { R5083 += 1, R5084 += 1 };
  s0 -> s2 [0, 65535] { R5084 += 1, R4991 += 1, R4992 += 1 };
  s0 -> s3 [0, 65535] { R5084 += 1, R4992 += 1, R144 += 1, R145 += 1 };
  s1 -> s4 [0, 65535] { R5084 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5084 += 1, R4992 += 1, R145 += 1, R146 += 1 };
  s1 -> s6 [0, 65535] { R5084 += 1, R4992 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R5084 += 1, R4992 += 1, R145 += 1, R146 += 1 };
  s2 -> s2 [0, 65535] { R5084 += 1, R4991 += 1, R4992 += 1 };
  s2 -> s3 [0, 65535] { R5084 += 1, R4992 += 1, R144 += 1, R145 += 1 };
  s3 -> s4 [0, 65535] { R5084 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R5084 += 1, R4992 += 1, R145 += 1, R146 += 1 };
  s3 -> s3 [0, 65535] { R5084 += 1, R4992 += 1, R144 += 1, R145 += 1 };
  s4 -> s4 [0, 65535] { R5084 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R5084 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5084 += 1, R4992 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R5086 += 1, R4994 += 1, R150 += 1 };
  s0 -> s2 [0, 65535] { R5086 += 1, R4994 += 1, R149 += 1, R150 += 1 };
  s0 -> s3 [0, 65535] { R5086 += 1, R4993 += 1, R4994 += 1 };
  s0 -> s0 [0, 65535] { R5085 += 1, R5086 += 1 };
  s0 -> s4 [75, 75] { R5086 += 1, R4994 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R5086 += 1, R4994 += 1, R150 += 1 };
  s0 -> s1 [79, 65535] { R5086 += 1, R4994 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R5086 += 1, R4994 += 1, R150 += 1 };
  s1 -> s6 [0, 65535] { R5086 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R5086 += 1, R4994 += 1 };
  s1 -> s4 [75, 75] { R5086 += 1, R4994 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R5086 += 1, R4994 += 1, R150 += 1 };
  s1 -> s1 [79, 65535] { R5086 += 1, R4994 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R5086 += 1, R4994 += 1, R150 += 1 };
  s2 -> s6 [0, 65535] { R5086 += 1 };
  s2 -> s2 [0, 65535] { R5086 += 1, R4994 += 1, R149 += 1, R150 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [75, 75] { R5086 += 1, R4994 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R5086 += 1, R4994 += 1, R150 += 1 };
  s2 -> s1 [79, 65535] { R5086 += 1, R4994 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R5086 += 1, R4994 += 1, R150 += 1 };
  s3 -> s2 [0, 65535] { R5086 += 1, R4994 += 1, R149 += 1, R150 += 1 };
  s3 -> s3 [0, 65535] { R5086 += 1, R4993 += 1, R4994 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [75, 75] { R5086 += 1, R4994 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R5086 += 1, R4994 += 1, R150 += 1 };
  s3 -> s1 [79, 65535] { R5086 += 1, R4994 += 1, R150 += 1 };
  s4 -> s4 [0, 75] { R5086 += 1, R4994 += 1, R150 += 1 };
  s4 -> s6 [0, 65535] { R5086 += 1 };
  s4 -> s4 [0, 65535] { R5086 += 1, R4994 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [79, 65535] { R5086 += 1, R4994 += 1, R150 += 1 };
  s5 -> s6 [0, 65535] { R5086 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R5086 += 1, R4994 += 1 };
  s6 -> s6 [0, 65535] { R5086 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s0 [0, 65535] { R5087 += 1, R5088 += 1 };
  s0 -> s1 [0, 65535] { R5088 += 1, R4995 += 1, R4996 += 1 };
  s0 -> s2 [0, 65535] { R5088 += 1, R4996 += 1, R154 += 1 };
  s0 -> s3 [0, 65535] { R5088 += 1, R4996 += 1 };
  s1 -> s1 [0, 65535] { R5088 += 1, R4995 += 1, R4996 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R5088 += 1, R4996 += 1, R154 += 1 };
  s1 -> s3 [0, 65535] { R5088 += 1, R4996 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R5088 += 1, R4996 += 1, R154 += 1 };
  s2 -> s3 [0, 65535] { R5088 += 1, R4996 += 1 };
  s2 -> s5 [0, 65535] { R5088 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5088 += 1, R4996 += 1 };
  s3 -> s5 [0, 65535] { R5088 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5088 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R5090 += 1, R4997 += 1, R4998 += 1 };
  s0 -> s2 [0, 65535] { R5090 += 1, R4998 += 1, R158 += 1, R159 += 1 };
  s0 -> s3 [0, 65535] { R5090 += 1, R4998 += 1, R159 += 1, R160 += 1 };
  s0 -> s0 [0, 65535] { R5089 += 1, R5090 += 1 };
  s1 -> s1 [0, 65535] { R5090 += 1, R4997 += 1, R4998 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R5090 += 1, R4998 += 1, R158 += 1, R159 += 1 };
  s1 -> s3 [0, 65535] { R5090 += 1, R4998 += 1, R159 += 1, R160 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R5090 += 1, R4998 += 1, R158 += 1, R159 += 1 };
  s2 -> s3 [0, 65535] { R5090 += 1, R4998 += 1, R159 += 1, R160 += 1 };
  s2 -> s5 [0, 65535] { R5090 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5090 += 1, R4998 += 1, R159 += 1, R160 += 1 };
  s3 -> s5 [0, 65535] { R5090 += 1 };
  s3 -> s6 [0, 65535] { R5090 += 1, R4998 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5090 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R5090 += 1 };
  s6 -> s6 [0, 65535] { R5090 += 1, R4998 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R5092 += 1, R5000 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R5092 += 1, R5000 += 1, R164 += 1, R165 += 1 };
  s0 -> s3 [0, 65535] { R5092 += 1, R5000 += 1, R165 += 1, R166 += 1 };
  s0 -> s0 [0, 65535] { R5091 += 1, R5092 += 1 };
  s0 -> s4 [0, 65535] { R5092 += 1, R4999 += 1, R5000 += 1 };
  s0 -> s1 [76, 65535] { R5092 += 1, R5000 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R5092 += 1, R5000 += 1, R165 += 1 };
  s1 -> s7 [0, 65535] { R5092 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5092 += 1, R5000 += 1 };
  s1 -> s1 [76, 65535] { R5092 += 1, R5000 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R5092 += 1, R5000 += 1, R165 += 1 };
  s2 -> s2 [0, 65535] { R5092 += 1, R5000 += 1, R164 += 1, R165 += 1 };
  s2 -> s7 [0, 65535] { R5092 += 1 };
  s2 -> s3 [0, 65535] { R5092 += 1, R5000 += 1, R165 += 1, R166 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [76, 65535] { R5092 += 1, R5000 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R5092 += 1, R5000 += 1, R165 += 1 };
  s3 -> s6 [0, 65535] { R5092 += 1, R5000 += 1 };
  s3 -> s7 [0, 65535] { R5092 += 1 };
  s3 -> s3 [0, 65535] { R5092 += 1, R5000 += 1, R165 += 1, R166 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [76, 65535] { R5092 += 1, R5000 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R5092 += 1, R5000 += 1, R165 += 1 };
  s4 -> s2 [0, 65535] { R5092 += 1, R5000 += 1, R164 += 1, R165 += 1 };
  s4 -> s3 [0, 65535] { R5092 += 1, R5000 += 1, R165 += 1, R166 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5092 += 1, R4999 += 1, R5000 += 1 };
  s4 -> s1 [76, 65535] { R5092 += 1, R5000 += 1, R165 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5092 += 1, R5000 += 1 };
  s6 -> s7 [0, 65535] { R5092 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R5092 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R5094 += 1, R5002 += 1, R172 += 1, R174 += 1 };
  s0 -> s2 [0, 65535] { R5094 += 1, R5002 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s3 [0, 65535] { R5094 += 1, R5001 += 1, R5002 += 1 };
  s0 -> s4 [0, 65535] { R5094 += 1, R5002 += 1, R171 += 1, R172 += 1 };
  s0 -> s0 [0, 65535] { R5093 += 1, R5094 += 1 };
  s0 -> s1 [76, 65535] { R5094 += 1, R5002 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R5094 += 1, R5002 += 1, R172 += 1, R174 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R5094 += 1 };
  s1 -> s7 [0, 65535] { R5094 += 1, R5002 += 1 };
  s1 -> s1 [0, 65535] { R5094 += 1, R5002 += 1, R172 += 1 };
  s1 -> s1 [76, 65535] { R5094 += 1, R5002 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R5094 += 1, R5002 += 1, R172 += 1, R174 += 1 };
  s2 -> s2 [0, 65535] { R5094 += 1, R5002 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R5094 += 1 };
  s2 -> s7 [0, 65535] { R5094 += 1, R5002 += 1 };
  s2 -> s1 [76, 65535] { R5094 += 1, R5002 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R5094 += 1, R5002 += 1, R172 += 1, R174 += 1 };
  s3 -> s2 [0, 65535] { R5094 += 1, R5002 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5094 += 1, R5001 += 1, R5002 += 1 };
  s3 -> s4 [0, 65535] { R5094 += 1, R5002 += 1, R171 += 1, R172 += 1 };
  s3 -> s1 [76, 65535] { R5094 += 1, R5002 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R5094 += 1, R5002 += 1, R172 += 1, R174 += 1 };
  s4 -> s2 [0, 65535] { R5094 += 1, R5002 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5094 += 1 };
  s4 -> s4 [0, 65535] { R5094 += 1, R5002 += 1, R171 += 1, R172 += 1 };
  s4 -> s1 [76, 65535] { R5094 += 1, R5002 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5094 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R5094 += 1 };
  s7 -> s7 [0, 65535] { R5094 += 1, R5002 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s0 [0, 65535] { R5095 += 1, R5096 += 1 };
  s0 -> s1 [0, 65535] { R5096 += 1, R5003 += 1, R5004 += 1 };
  s0 -> s2 [0, 65535] { R5096 += 1, R5004 += 1 };
  s1 -> s1 [0, 65535] { R5096 += 1, R5003 += 1, R5004 += 1 };
  s1 -> s2 [0, 65535] { R5096 += 1, R5004 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5096 += 1, R5004 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R5096 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5096 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R5098 += 1, R5006 += 1, R190 += 1, R192 += 1 };
  s0 -> s2 [0, 65535] { R5098 += 1, R5005 += 1, R5006 += 1 };
  s0 -> s3 [0, 65535] { R5098 += 1, R5006 += 1, R189 += 1, R190 += 1 };
  s0 -> s0 [0, 65535] { R5097 += 1, R5098 += 1 };
  s0 -> s4 [0, 65535] { R5098 += 1, R5006 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s0 -> s1 [78, 65535] { R5098 += 1, R5006 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 75] { R5098 += 1, R5006 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 65535] { R5098 += 1, R5006 += 1, R190 += 1 };
  s1 -> s5 [0, 65535] { R5098 += 1, R5006 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R5098 += 1 };
  s1 -> s1 [78, 65535] { R5098 += 1, R5006 += 1, R190 += 1, R192 += 1 };
  s2 -> s1 [0, 75] { R5098 += 1, R5006 += 1, R190 += 1, R192 += 1 };
  s2 -> s2 [0, 65535] { R5098 += 1, R5005 += 1, R5006 += 1 };
  s2 -> s3 [0, 65535] { R5098 += 1, R5006 += 1, R189 += 1, R190 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [0, 65535] { R5098 += 1, R5006 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s2 -> s1 [78, 65535] { R5098 += 1, R5006 += 1, R190 += 1, R192 += 1 };
  s3 -> s1 [0, 75] { R5098 += 1, R5006 += 1, R190 += 1, R192 += 1 };
  s3 -> s3 [0, 65535] { R5098 += 1, R5006 += 1, R189 += 1, R190 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R5098 += 1, R5006 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s3 -> s7 [0, 65535] { R5098 += 1 };
  s3 -> s1 [78, 65535] { R5098 += 1, R5006 += 1, R190 += 1, R192 += 1 };
  s4 -> s1 [0, 75] { R5098 += 1, R5006 += 1, R190 += 1, R192 += 1 };
  s4 -> s5 [0, 65535] { R5098 += 1, R5006 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R5098 += 1, R5006 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s4 -> s7 [0, 65535] { R5098 += 1 };
  s4 -> s1 [78, 65535] { R5098 += 1, R5006 += 1, R190 += 1, R192 += 1 };
  s5 -> s5 [0, 65535] { R5098 += 1, R5006 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R5098 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5098 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R5100 += 1, R5008 += 1, R4020 += 1, R4021 += 1 };
  s0 -> s2 [0, 65535] { R5100 += 1, R5008 += 1, R4021 += 1, R4023 += 1, R4024 += 1 };
  s0 -> s3 [0, 65535] { R5100 += 1, R5007 += 1, R5008 += 1 };
  s0 -> s4 [0, 65535] { R5100 += 1, R5008 += 1, R4021 += 1, R4022 += 1, R4023 += 1 };
  s0 -> s0 [0, 65535] { R5099 += 1, R5100 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5100 += 1, R5008 += 1, R4020 += 1, R4021 += 1 };
  s1 -> s2 [0, 65535] { R5100 += 1, R5008 += 1, R4021 += 1, R4023 += 1, R4024 += 1 };
  s1 -> s4 [0, 65535] { R5100 += 1, R5008 += 1, R4021 += 1, R4022 += 1, R4023 += 1 };
  s1 -> s7 [0, 65535] { R5100 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5100 += 1, R5008 += 1, R4021 += 1, R4023 += 1, R4024 += 1 };
  s2 -> s8 [0, 65535] { R5100 += 1, R5008 += 1, R4021 += 1 };
  s2 -> s6 [0, 65535] { R5100 += 1, R5008 += 1 };
  s2 -> s7 [0, 65535] { R5100 += 1 };
  s3 -> s1 [0, 65535] { R5100 += 1, R5008 += 1, R4020 += 1, R4021 += 1 };
  s3 -> s2 [0, 65535] { R5100 += 1, R5008 += 1, R4021 += 1, R4023 += 1, R4024 += 1 };
  s3 -> s3 [0, 65535] { R5100 += 1, R5007 += 1, R5008 += 1 };
  s3 -> s4 [0, 65535] { R5100 += 1, R5008 += 1, R4021 += 1, R4022 += 1, R4023 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R5100 += 1, R5008 += 1, R4021 += 1, R4023 += 1, R4024 += 1 };
  s4 -> s4 [0, 65535] { R5100 += 1, R5008 += 1, R4021 += 1, R4022 += 1, R4023 += 1 };
  s4 -> s6 [0, 65535] { R5100 += 1, R5008 += 1 };
  s4 -> s7 [0, 65535] { R5100 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5100 += 1, R5008 += 1 };
  s6 -> s7 [0, 65535] { R5100 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R5100 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s8 [0, 65535] { R5100 += 1, R5008 += 1, R4021 += 1 };
  s8 -> s6 [0, 65535] { R5100 += 1, R5008 += 1 };
  s8 -> s7 [0, 65535] { R5100 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 74] { R5102 += 1, R5010 += 1, R4978 += 1, R4980 += 1 };
  s0 -> s0 [0, 65535] { R5101 += 1, R5102 += 1 };
  s0 -> s2 [0, 65535] { R5102 += 1, R5009 += 1, R5010 += 1 };
  s0 -> s3 [75, 75] { R5102 += 1, R5010 += 1, R4978 += 1, R4980 += 1 };
  s0 -> s4 [78, 78] { R5102 += 1, R5010 += 1, R4978 += 1, R4980 += 1 };
  s0 -> s1 [79, 65535] { R5102 += 1, R5010 += 1, R4978 += 1, R4980 += 1 };
  s1 -> s1 [0, 74] { R5102 += 1, R5010 += 1, R4978 += 1, R4980 += 1 };
  s1 -> s3 [75, 75] { R5102 += 1, R5010 += 1, R4978 += 1, R4980 += 1 };
  s1 -> s4 [78, 78] { R5102 += 1, R5010 += 1, R4978 += 1, R4980 += 1 };
  s1 -> s1 [79, 65535] { R5102 += 1, R5010 += 1, R4978 += 1, R4980 += 1 };
  s2 -> s1 [0, 74] { R5102 += 1, R5010 += 1, R4978 += 1, R4980 += 1 };
  s2 -> s2 [0, 65535] { R5102 += 1, R5009 += 1, R5010 += 1 };
  s2 -> s3 [75, 75] { R5102 += 1, R5010 += 1, R4978 += 1, R4980 += 1 };
  s2 -> s4 [78, 78] { R5102 += 1, R5010 += 1, R4978 += 1, R4980 += 1 };
  s2 -> s1 [79, 65535] { R5102 += 1, R5010 += 1, R4978 += 1, R4980 += 1 };
  s3 -> s3 [0, 75] { R5102 += 1, R5010 += 1, R4978 += 1, R4980 += 1 };
  s3 -> s9 [78, 78] { R5102 += 1, R5010 += 1, R4978 += 1, R4980 += 1 };
  s3 -> s3 [79, 65535] { R5102 += 1, R5010 += 1, R4978 += 1, R4980 += 1 };
  s4 -> s4 [0, 74] { R5102 += 1, R5010 += 1, R4978 += 1, R4980 += 1 };
  s4 -> s4 [0, 65535] { R5102 += 1, R5010 += 1, R4978 += 1 };
  s4 -> s5 [0, 65535] { R5102 += 1, R5010 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R5102 += 1 };
  s4 -> s8 [75, 75] { R5102 += 1, R5010 += 1, R4978 += 1, R4980 += 1 };
  s4 -> s9 [75, 75] { R5102 += 1, R5010 += 1, R4978 += 1, R4980 += 1 };
  s4 -> s4 [78, 65535] { R5102 += 1, R5010 += 1, R4978 += 1, R4980 += 1 };
  s5 -> s5 [0, 65535] { R5102 += 1, R5010 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R5102 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5102 += 1 };
  s8 -> s8 [0, 65535] { R5102 += 1, R5010 += 1, R4978 += 1 };
  s8 -> s5 [0, 65535] { R5102 += 1, R5010 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R5102 += 1 };
  s9 -> s9 [0, 75] { R5102 += 1, R5010 += 1, R4978 += 1, R4980 += 1 };
  s9 -> s5 [0, 65535] { R5102 += 1, R5010 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s9 [0, 65535] { R5102 += 1, R5010 += 1, R4978 += 1 };
  s9 -> s7 [0, 65535] { R5102 += 1 };
  s9 -> s9 [78, 65535] { R5102 += 1, R5010 += 1, R4978 += 1, R4980 += 1 };
  accepting s4, s8, s5, s9, s6, s7;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65535] { R5104 += 1, R5040 += 1, R23 += 1 };
  s0 -> s2 [0, 65535] { R5104 += 1, R5039 += 1, R5040 += 1 };
  s0 -> s0 [0, 65535] { R5103 += 1, R5104 += 1 };
  s1 -> s4 [0, 65535] { R5104 += 1 };
  s1 -> s1 [0, 65535] { R5104 += 1, R5040 += 1, R23 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R5104 += 1, R5040 += 1, R23 += 1 };
  s2 -> s2 [0, 65535] { R5104 += 1, R5039 += 1, R5040 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5104 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R5106 += 1, R5042 += 1 };
  s0 -> s0 [0, 65535] { R5105 += 1, R5106 += 1 };
  s0 -> s2 [0, 65535] { R5106 += 1, R5041 += 1, R5042 += 1 };
  s0 -> s3 [70, 70] { R5106 += 1, R5042 += 1 };
  s0 -> s4 [70, 70] { R5106 += 1, R5042 += 1 };
  s0 -> s5 [75, 75] { R5106 += 1, R5042 += 1 };
  s0 -> s1 [76, 65535] { R5106 += 1, R5042 += 1 };
  s1 -> s1 [0, 69] { R5106 += 1, R5042 += 1 };
  s1 -> s3 [70, 70] { R5106 += 1, R5042 += 1 };
  s1 -> s4 [70, 70] { R5106 += 1, R5042 += 1 };
  s1 -> s5 [75, 75] { R5106 += 1, R5042 += 1 };
  s1 -> s1 [76, 65535] { R5106 += 1, R5042 += 1 };
  s2 -> s1 [0, 69] { R5106 += 1, R5042 += 1 };
  s2 -> s2 [0, 65535] { R5106 += 1, R5041 += 1, R5042 += 1 };
  s2 -> s3 [70, 70] { R5106 += 1, R5042 += 1 };
  s2 -> s4 [70, 70] { R5106 += 1, R5042 += 1 };
  s2 -> s5 [75, 75] { R5106 += 1, R5042 += 1 };
  s2 -> s1 [76, 65535] { R5106 += 1, R5042 += 1 };
  s4 -> s4 [0, 70] { R5106 += 1, R5042 += 1 };
  s4 -> s7 [75, 75] { R5106 += 1, R5042 += 1 };
  s4 -> s4 [76, 65535] { R5106 += 1, R5042 += 1 };
  s5 -> s5 [0, 69] { R5106 += 1, R5042 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R5106 += 1 };
  s5 -> s7 [70, 70] { R5106 += 1, R5042 += 1 };
  s5 -> s8 [70, 70] { R5106 += 1, R5042 += 1 };
  s5 -> s5 [75, 65535] { R5106 += 1, R5042 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 70] { R5106 += 1, R5042 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5106 += 1 };
  s7 -> s7 [75, 65535] { R5106 += 1, R5042 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R5106 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R5108 += 1, R5044 += 1, R137 += 1 };
  s0 -> s0 [0, 65535] { R5107 += 1, R5108 += 1 };
  s0 -> s2 [0, 65535] { R5108 += 1, R5043 += 1, R5044 += 1 };
  s0 -> s3 [70, 70] { R5108 += 1, R5044 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R5108 += 1, R5044 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R5108 += 1, R5044 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R5108 += 1, R5044 += 1, R137 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5108 += 1 };
  s1 -> s3 [70, 70] { R5108 += 1, R5044 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R5108 += 1, R5044 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R5108 += 1, R5044 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R5108 += 1, R5044 += 1, R137 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5108 += 1, R5043 += 1, R5044 += 1 };
  s2 -> s3 [70, 70] { R5108 += 1, R5044 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R5108 += 1, R5044 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R5108 += 1, R5044 += 1, R137 += 1 };
  s3 -> s6 [0, 65535] { R5108 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5108 += 1, R5044 += 1, R137 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5108 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5108 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R5110 += 1, R5046 += 1, R139 += 1 };
  s0 -> s2 [0, 65535] { R5110 += 1, R5045 += 1, R5046 += 1 };
  s0 -> s0 [0, 65535] { R5109 += 1, R5110 += 1 };
  s0 -> s3 [70, 70] { R5110 += 1, R5046 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R5110 += 1, R5046 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R5110 += 1, R5046 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R5110 += 1, R5046 += 1, R139 += 1 };
  s1 -> s1 [0, 65535] { R5110 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R5110 += 1, R5046 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R5110 += 1, R5046 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R5110 += 1, R5046 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R5110 += 1, R5046 += 1, R139 += 1 };
  s2 -> s2 [0, 65535] { R5110 += 1, R5045 += 1, R5046 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R5110 += 1, R5046 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R5110 += 1, R5046 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R5110 += 1, R5046 += 1, R139 += 1 };
  s3 -> s3 [0, 65535] { R5110 += 1, R5046 += 1, R139 += 1 };
  s3 -> s6 [0, 65535] { R5110 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5110 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5110 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R5112 += 1, R5048 += 1, R141 += 1, R142 += 1 };
  s0 -> s2 [0, 65535] { R5112 += 1, R5047 += 1, R5048 += 1 };
  s0 -> s0 [0, 65535] { R5111 += 1, R5112 += 1 };
  s0 -> s3 [70, 70] { R5112 += 1, R5048 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R5112 += 1, R5048 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R5112 += 1, R5048 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R5112 += 1, R5048 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 65535] { R5112 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R5112 += 1, R5048 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R5112 += 1, R5048 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R5112 += 1, R5048 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R5112 += 1, R5048 += 1, R141 += 1, R142 += 1 };
  s2 -> s2 [0, 65535] { R5112 += 1, R5047 += 1, R5048 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R5112 += 1, R5048 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R5112 += 1, R5048 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R5112 += 1, R5048 += 1, R141 += 1, R142 += 1 };
  s3 -> s3 [0, 65535] { R5112 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5112 += 1, R5048 += 1, R141 += 1, R142 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5112 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5112 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R5114 += 1, R5050 += 1, R147 += 1, R148 += 1 };
  s0 -> s0 [0, 65535] { R5113 += 1, R5114 += 1 };
  s0 -> s2 [0, 65535] { R5114 += 1, R5049 += 1, R5050 += 1 };
  s0 -> s3 [70, 70] { R5114 += 1, R5050 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R5114 += 1, R5050 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R5114 += 1, R5050 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R5114 += 1, R5050 += 1, R147 += 1, R148 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5114 += 1 };
  s1 -> s3 [70, 70] { R5114 += 1, R5050 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R5114 += 1, R5050 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R5114 += 1, R5050 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R5114 += 1, R5050 += 1, R147 += 1, R148 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5114 += 1, R5049 += 1, R5050 += 1 };
  s2 -> s3 [70, 70] { R5114 += 1, R5050 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R5114 += 1, R5050 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R5114 += 1, R5050 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R5114 += 1, R5050 += 1, R147 += 1, R148 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R5114 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5114 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5114 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R5116 += 1, R5052 += 1, R151 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R5116 += 1, R5052 += 1, R152 += 1 };
  s0 -> s0 [0, 65535] { R5115 += 1, R5116 += 1 };
  s0 -> s3 [0, 65535] { R5116 += 1, R5051 += 1, R5052 += 1 };
  s0 -> s4 [70, 70] { R5116 += 1, R5052 += 1, R151 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R5116 += 1, R5052 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R5116 += 1, R5052 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R5116 += 1, R5052 += 1, R151 += 1, R152 += 1 };
  s0 -> s2 [71, 74] { R5116 += 1, R5052 += 1, R152 += 1 };
  s0 -> s1 [71, 65535] { R5116 += 1, R5052 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R5116 += 1, R5052 += 1, R152 += 1 };
  s0 -> s2 [76, 65535] { R5116 += 1, R5052 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R5116 += 1, R5052 += 1, R151 += 1, R152 += 1 };
  s1 -> s2 [0, 69] { R5116 += 1, R5052 += 1, R152 += 1 };
  s1 -> s4 [70, 70] { R5116 += 1, R5052 += 1, R151 += 1, R152 += 1 };
  s1 -> s5 [70, 70] { R5116 += 1, R5052 += 1, R152 += 1 };
  s1 -> s6 [70, 70] { R5116 += 1, R5052 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R5116 += 1, R5052 += 1, R151 += 1, R152 += 1 };
  s1 -> s2 [71, 74] { R5116 += 1, R5052 += 1, R152 += 1 };
  s1 -> s1 [71, 65535] { R5116 += 1, R5052 += 1, R151 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R5116 += 1, R5052 += 1, R152 += 1 };
  s1 -> s2 [76, 65535] { R5116 += 1, R5052 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R5116 += 1, R5052 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R5116 += 1, R5052 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R5116 += 1, R5052 += 1, R152 += 1 };
  s2 -> s2 [71, 74] { R5116 += 1, R5052 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R5116 += 1, R5052 += 1, R152 += 1 };
  s2 -> s2 [76, 65535] { R5116 += 1, R5052 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R5116 += 1, R5052 += 1, R151 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R5116 += 1, R5052 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R5116 += 1, R5051 += 1, R5052 += 1 };
  s3 -> s4 [70, 70] { R5116 += 1, R5052 += 1, R151 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R5116 += 1, R5052 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R5116 += 1, R5052 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R5116 += 1, R5052 += 1, R151 += 1, R152 += 1 };
  s3 -> s2 [71, 74] { R5116 += 1, R5052 += 1, R152 += 1 };
  s3 -> s1 [71, 65535] { R5116 += 1, R5052 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R5116 += 1, R5052 += 1, R152 += 1 };
  s3 -> s2 [76, 65535] { R5116 += 1, R5052 += 1, R152 += 1 };
  s5 -> s5 [0, 74] { R5116 += 1, R5052 += 1, R152 += 1 };
  s5 -> s11 [75, 75] { R5116 += 1, R5052 += 1, R152 += 1 };
  s5 -> s5 [76, 65535] { R5116 += 1, R5052 += 1, R152 += 1 };
  s7 -> s5 [0, 74] { R5116 += 1, R5052 += 1, R152 += 1 };
  s7 -> s7 [0, 65535] { R5116 += 1, R5052 += 1, R151 += 1, R152 += 1 };
  s7 -> s11 [75, 75] { R5116 += 1, R5052 += 1, R152 += 1 };
  s7 -> s5 [76, 65535] { R5116 += 1, R5052 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R5116 += 1, R5052 += 1, R152 += 1 };
  s8 -> s8 [0, 65535] { R5116 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R5116 += 1, R5052 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R5116 += 1, R5052 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R5116 += 1, R5052 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R5116 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R5116 += 1, R5052 += 1, R152 += 1 };
  s11 -> s12 [0, 65535] { R5116 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R5116 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R5118 += 1, R5054 += 1, R155 += 1, R156 += 1 };
  s0 -> s0 [0, 65535] { R5117 += 1, R5118 += 1 };
  s0 -> s2 [0, 65535] { R5118 += 1, R5053 += 1, R5054 += 1 };
  s0 -> s3 [70, 70] { R5118 += 1, R5054 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R5118 += 1, R5054 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R5118 += 1, R5054 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R5118 += 1, R5054 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 65535] { R5118 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R5118 += 1, R5054 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R5118 += 1, R5054 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R5118 += 1, R5054 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R5118 += 1, R5054 += 1, R155 += 1, R156 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5118 += 1, R5053 += 1, R5054 += 1 };
  s2 -> s3 [70, 70] { R5118 += 1, R5054 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R5118 += 1, R5054 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R5118 += 1, R5054 += 1, R155 += 1, R156 += 1 };
  s3 -> s3 [0, 65535] { R5118 += 1, R5054 += 1, R155 += 1, R156 += 1 };
  s3 -> s6 [0, 65535] { R5118 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5118 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5118 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R5120 += 1, R5056 += 1, R161 += 1, R162 += 1 };
  s0 -> s2 [0, 65535] { R5120 += 1, R5055 += 1, R5056 += 1 };
  s0 -> s0 [0, 65535] { R5119 += 1, R5120 += 1 };
  s0 -> s3 [70, 70] { R5120 += 1, R5056 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R5120 += 1, R5056 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R5120 += 1, R5056 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R5120 += 1, R5056 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535] { R5120 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R5120 += 1, R5056 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R5120 += 1, R5056 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R5120 += 1, R5056 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R5120 += 1, R5056 += 1, R161 += 1, R162 += 1 };
  s2 -> s2 [0, 65535] { R5120 += 1, R5055 += 1, R5056 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R5120 += 1, R5056 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R5120 += 1, R5056 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R5120 += 1, R5056 += 1, R161 += 1, R162 += 1 };
  s3 -> s3 [0, 65535] { R5120 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R5120 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R5120 += 1, R5056 += 1, R161 += 1, R162 += 1 };
  s5 -> s5 [0, 65535] { R5120 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R5122 += 1, R5058 += 1, R167 += 1, R168 += 1 };
  s0 -> s2 [0, 65535] { R5122 += 1, R5057 += 1, R5058 += 1 };
  s0 -> s0 [0, 65535] { R5121 += 1, R5122 += 1 };
  s0 -> s3 [70, 70] { R5122 += 1, R5058 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R5122 += 1, R5058 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R5122 += 1, R5058 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R5122 += 1, R5058 += 1, R167 += 1, R168 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5122 += 1 };
  s1 -> s3 [70, 70] { R5122 += 1, R5058 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R5122 += 1, R5058 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R5122 += 1, R5058 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R5122 += 1, R5058 += 1, R167 += 1, R168 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5122 += 1, R5057 += 1, R5058 += 1 };
  s2 -> s3 [70, 70] { R5122 += 1, R5058 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R5122 += 1, R5058 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R5122 += 1, R5058 += 1, R167 += 1, R168 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5122 += 1, R5058 += 1, R167 += 1, R168 += 1 };
  s3 -> s6 [0, 65535] { R5122 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5122 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5122 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R5124 += 1, R5060 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s2 [0, 69] { R5124 += 1, R5060 += 1, R175 += 1, R176 += 1 };
  s0 -> s3 [0, 69] { R5124 += 1, R5060 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s4 [0, 65535] { R5124 += 1, R5059 += 1, R5060 += 1 };
  s0 -> s0 [0, 65535] { R5123 += 1, R5124 += 1 };
  s0 -> s5 [70, 70] { R5124 += 1, R5060 += 1, R175 += 1, R176 += 1 };
  s0 -> s6 [70, 70] { R5124 += 1, R5060 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s7 [70, 70] { R5124 += 1, R5060 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s8 [70, 70] { R5124 += 1, R5060 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s9 [70, 70] { R5124 += 1, R5060 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s10 [70, 70] { R5124 += 1, R5060 += 1, R175 += 1, R176 += 1 };
  s0 -> s1 [71, 65535] { R5124 += 1, R5060 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s2 [71, 65535] { R5124 += 1, R5060 += 1, R175 += 1, R176 += 1 };
  s0 -> s3 [71, 65535] { R5124 += 1, R5060 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s1 [0, 69] { R5124 += 1, R5060 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s15 [0, 69] { R5124 += 1, R5060 += 1 };
  s1 -> s17 [0, 69] { R5124 += 1, R5060 += 1, R176 += 1 };
  s1 -> s18 [70, 70] { R5124 += 1, R5060 += 1, R176 += 1 };
  s1 -> s7 [70, 70] { R5124 += 1, R5060 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s11 [70, 70] { R5124 += 1, R5060 += 1 };
  s1 -> s12 [70, 70] { R5124 += 1, R5060 += 1, R176 += 1 };
  s1 -> s9 [70, 70] { R5124 += 1, R5060 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s16 [70, 70] { R5124 += 1, R5060 += 1 };
  s1 -> s1 [71, 65535] { R5124 += 1, R5060 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s15 [71, 65535] { R5124 += 1, R5060 += 1 };
  s1 -> s17 [71, 65535] { R5124 += 1, R5060 += 1, R176 += 1 };
  s2 -> s1 [0, 69] { R5124 += 1, R5060 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [0, 69] { R5124 += 1, R5060 += 1, R175 += 1, R176 += 1 };
  s2 -> s3 [0, 69] { R5124 += 1, R5060 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s5 [70, 70] { R5124 += 1, R5060 += 1, R175 += 1, R176 += 1 };
  s2 -> s6 [70, 70] { R5124 += 1, R5060 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s7 [70, 70] { R5124 += 1, R5060 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s8 [70, 70] { R5124 += 1, R5060 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s9 [70, 70] { R5124 += 1, R5060 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s10 [70, 70] { R5124 += 1, R5060 += 1, R175 += 1, R176 += 1 };
  s2 -> s1 [71, 65535] { R5124 += 1, R5060 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [71, 65535] { R5124 += 1, R5060 += 1, R175 += 1, R176 += 1 };
  s2 -> s3 [71, 65535] { R5124 += 1, R5060 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s1 [0, 69] { R5124 += 1, R5060 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s15 [0, 69] { R5124 += 1, R5060 += 1 };
  s3 -> s3 [0, 69] { R5124 += 1, R5060 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s6 [70, 70] { R5124 += 1, R5060 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s7 [70, 70] { R5124 += 1, R5060 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s11 [70, 70] { R5124 += 1, R5060 += 1 };
  s3 -> s8 [70, 70] { R5124 += 1, R5060 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s3 -> s9 [70, 70] { R5124 += 1, R5060 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s16 [70, 70] { R5124 += 1, R5060 += 1 };
  s3 -> s1 [71, 65535] { R5124 += 1, R5060 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s15 [71, 65535] { R5124 += 1, R5060 += 1 };
  s3 -> s3 [71, 65535] { R5124 += 1, R5060 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s1 [0, 69] { R5124 += 1, R5060 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s2 [0, 69] { R5124 += 1, R5060 += 1, R175 += 1, R176 += 1 };
  s4 -> s3 [0, 69] { R5124 += 1, R5060 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s4 [0, 65535] { R5124 += 1, R5059 += 1, R5060 += 1 };
  s4 -> s5 [70, 70] { R5124 += 1, R5060 += 1, R175 += 1, R176 += 1 };
  s4 -> s6 [70, 70] { R5124 += 1, R5060 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s7 [70, 70] { R5124 += 1, R5060 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s8 [70, 70] { R5124 += 1, R5060 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s9 [70, 70] { R5124 += 1, R5060 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s10 [70, 70] { R5124 += 1, R5060 += 1, R175 += 1, R176 += 1 };
  s4 -> s1 [71, 65535] { R5124 += 1, R5060 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s2 [71, 65535] { R5124 += 1, R5060 += 1, R175 += 1, R176 += 1 };
  s4 -> s3 [71, 65535] { R5124 += 1, R5060 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s5 -> s5 [0, 65535] { R5124 += 1, R5060 += 1, R175 += 1, R176 += 1 };
  s5 -> s6 [0, 65535] { R5124 += 1, R5060 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s5 -> s9 [0, 65535] { R5124 += 1, R5060 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s6 -> s6 [0, 65535] { R5124 += 1, R5060 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s6 -> s11 [0, 65535] { R5124 += 1, R5060 += 1 };
  s6 -> s9 [0, 65535] { R5124 += 1, R5060 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s9 -> s11 [0, 65535] { R5124 += 1, R5060 += 1 };
  s9 -> s12 [0, 65535] { R5124 += 1, R5060 += 1, R176 += 1 };
  s9 -> s9 [0, 65535] { R5124 += 1, R5060 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s11 -> s13 [0, 65535];
  s11 -> s11 [0, 65535] { R5124 += 1, R5060 += 1 };
  s11 -> s14 [0, 65535] { R5124 += 1 };
  s12 -> s11 [0, 65535] { R5124 += 1, R5060 += 1 };
  s12 -> s12 [0, 65535] { R5124 += 1, R5060 += 1, R176 += 1 };
  s13 -> s13 [0, 65535];
  s14 -> s13 [0, 65535];
  s14 -> s14 [0, 65535] { R5124 += 1 };
  s15 -> s15 [0, 69] { R5124 += 1, R5060 += 1 };
  s15 -> s13 [0, 65535];
  s15 -> s15 [0, 65535] { R5124 += 1 };
  s15 -> s11 [70, 70] { R5124 += 1, R5060 += 1 };
  s15 -> s16 [70, 70] { R5124 += 1, R5060 += 1 };
  s15 -> s15 [71, 65535] { R5124 += 1, R5060 += 1 };
  s16 -> s13 [0, 65535];
  s16 -> s16 [0, 65535] { R5124 += 1 };
  s17 -> s15 [0, 69] { R5124 += 1, R5060 += 1 };
  s17 -> s17 [0, 69] { R5124 += 1, R5060 += 1, R176 += 1 };
  s17 -> s18 [70, 70] { R5124 += 1, R5060 += 1, R176 += 1 };
  s17 -> s11 [70, 70] { R5124 += 1, R5060 += 1 };
  s17 -> s12 [70, 70] { R5124 += 1, R5060 += 1, R176 += 1 };
  s17 -> s16 [70, 70] { R5124 += 1, R5060 += 1 };
  s17 -> s15 [71, 65535] { R5124 += 1, R5060 += 1 };
  s17 -> s17 [71, 65535] { R5124 += 1, R5060 += 1, R176 += 1 };
  accepting s16, s13, s14, s15, s11;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R5126 += 1, R5062 += 1, R185 += 1, R186 += 1 };
  s0 -> s2 [0, 65535] { R5126 += 1, R5061 += 1, R5062 += 1 };
  s0 -> s0 [0, 65535] { R5125 += 1, R5126 += 1 };
  s0 -> s3 [70, 70] { R5126 += 1, R5062 += 1, R185 += 1, R186 += 1 };
  s0 -> s4 [70, 70] { R5126 += 1, R5062 += 1, R185 += 1, R186 += 1 };
  s0 -> s1 [71, 65535] { R5126 += 1, R5062 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 69] { R5126 += 1, R5062 += 1, R185 += 1, R186 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5126 += 1 };
  s1 -> s3 [70, 70] { R5126 += 1, R5062 += 1, R185 += 1, R186 += 1 };
  s1 -> s4 [70, 70] { R5126 += 1, R5062 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [71, 65535] { R5126 += 1, R5062 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [0, 69] { R5126 += 1, R5062 += 1, R185 += 1, R186 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5126 += 1, R5061 += 1, R5062 += 1 };
  s2 -> s3 [70, 70] { R5126 += 1, R5062 += 1, R185 += 1, R186 += 1 };
  s2 -> s4 [70, 70] { R5126 += 1, R5062 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [71, 65535] { R5126 += 1, R5062 += 1, R185 += 1, R186 += 1 };
  s3 -> s3 [0, 65535] { R5126 += 1, R5062 += 1, R185 += 1, R186 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R5126 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5126 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5126 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R5128 += 1, R5064 += 1, R4015 += 1, R4016 += 1 };
  s0 -> s2 [0, 65535] { R5128 += 1, R5063 += 1, R5064 += 1 };
  s0 -> s0 [0, 65535] { R5127 += 1, R5128 += 1 };
  s0 -> s3 [70, 70] { R5128 += 1, R5064 += 1, R4015 += 1, R4016 += 1 };
  s0 -> s4 [70, 70] { R5128 += 1, R5064 += 1, R4015 += 1, R4016 += 1 };
  s0 -> s1 [71, 65535] { R5128 += 1, R5064 += 1, R4015 += 1, R4016 += 1 };
  s1 -> s1 [0, 69] { R5128 += 1, R5064 += 1, R4015 += 1, R4016 += 1 };
  s1 -> s1 [0, 65535] { R5128 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R5128 += 1, R5064 += 1, R4015 += 1, R4016 += 1 };
  s1 -> s4 [70, 70] { R5128 += 1, R5064 += 1, R4015 += 1, R4016 += 1 };
  s1 -> s1 [71, 65535] { R5128 += 1, R5064 += 1, R4015 += 1, R4016 += 1 };
  s2 -> s1 [0, 69] { R5128 += 1, R5064 += 1, R4015 += 1, R4016 += 1 };
  s2 -> s2 [0, 65535] { R5128 += 1, R5063 += 1, R5064 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R5128 += 1, R5064 += 1, R4015 += 1, R4016 += 1 };
  s2 -> s4 [70, 70] { R5128 += 1, R5064 += 1, R4015 += 1, R4016 += 1 };
  s2 -> s1 [71, 65535] { R5128 += 1, R5064 += 1, R4015 += 1, R4016 += 1 };
  s3 -> s3 [0, 65535] { R5128 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R5128 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R5128 += 1, R5064 += 1, R4015 += 1, R4016 += 1 };
  s5 -> s5 [0, 65535] { R5128 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R5130 += 1, R5066 += 1, R4974 += 1, R4975 += 1, R4976 += 1 };
  s0 -> s2 [0, 69] { R5130 += 1, R5066 += 1, R4973 += 1, R4974 += 1 };
  s0 -> s3 [0, 69] { R5130 += 1, R5066 += 1, R4974 += 1, R4976 += 1 };
  s0 -> s4 [0, 65535] { R5130 += 1, R5065 += 1, R5066 += 1 };
  s0 -> s0 [0, 65535] { R5129 += 1, R5130 += 1 };
  s0 -> s5 [70, 70] { R5130 += 1, R5066 += 1, R4974 += 1, R4976 += 1 };
  s0 -> s6 [70, 70] { R5130 += 1, R5066 += 1, R4973 += 1, R4974 += 1 };
  s0 -> s7 [70, 70] { R5130 += 1, R5066 += 1, R4973 += 1, R4974 += 1 };
  s0 -> s8 [70, 70] { R5130 += 1, R5066 += 1, R4974 += 1, R4976 += 1 };
  s0 -> s9 [70, 70] { R5130 += 1, R5066 += 1, R4974 += 1, R4975 += 1, R4976 += 1 };
  s0 -> s10 [70, 70] { R5130 += 1, R5066 += 1, R4974 += 1, R4975 += 1, R4976 += 1 };
  s0 -> s3 [71, 74] { R5130 += 1, R5066 += 1, R4974 += 1, R4976 += 1 };
  s0 -> s1 [71, 65535] { R5130 += 1, R5066 += 1, R4974 += 1, R4975 += 1, R4976 += 1 };
  s0 -> s2 [71, 65535] { R5130 += 1, R5066 += 1, R4973 += 1, R4974 += 1 };
  s0 -> s3 [79, 65535] { R5130 += 1, R5066 += 1, R4974 += 1, R4976 += 1 };
  s1 -> s1 [0, 69] { R5130 += 1, R5066 += 1, R4974 += 1, R4975 += 1, R4976 += 1 };
  s1 -> s3 [0, 69] { R5130 += 1, R5066 += 1, R4974 += 1, R4976 += 1 };
  s1 -> s5 [70, 70] { R5130 += 1, R5066 += 1, R4974 += 1, R4976 += 1 };
  s1 -> s8 [70, 70] { R5130 += 1, R5066 += 1, R4974 += 1, R4976 += 1 };
  s1 -> s9 [70, 70] { R5130 += 1, R5066 += 1, R4974 += 1, R4975 += 1, R4976 += 1 };
  s1 -> s10 [70, 70] { R5130 += 1, R5066 += 1, R4974 += 1, R4975 += 1, R4976 += 1 };
  s1 -> s3 [71, 74] { R5130 += 1, R5066 += 1, R4974 += 1, R4976 += 1 };
  s1 -> s1 [71, 65535] { R5130 += 1, R5066 += 1, R4974 += 1, R4975 += 1, R4976 += 1 };
  s1 -> s3 [79, 65535] { R5130 += 1, R5066 += 1, R4974 += 1, R4976 += 1 };
  s2 -> s1 [0, 69] { R5130 += 1, R5066 += 1, R4974 += 1, R4975 += 1, R4976 += 1 };
  s2 -> s2 [0, 69] { R5130 += 1, R5066 += 1, R4973 += 1, R4974 += 1 };
  s2 -> s3 [0, 69] { R5130 += 1, R5066 += 1, R4974 += 1, R4976 += 1 };
  s2 -> s5 [70, 70] { R5130 += 1, R5066 += 1, R4974 += 1, R4976 += 1 };
  s2 -> s6 [70, 70] { R5130 += 1, R5066 += 1, R4973 += 1, R4974 += 1 };
  s2 -> s7 [70, 70] { R5130 += 1, R5066 += 1, R4973 += 1, R4974 += 1 };
  s2 -> s8 [70, 70] { R5130 += 1, R5066 += 1, R4974 += 1, R4976 += 1 };
  s2 -> s9 [70, 70] { R5130 += 1, R5066 += 1, R4974 += 1, R4975 += 1, R4976 += 1 };
  s2 -> s10 [70, 70] { R5130 += 1, R5066 += 1, R4974 += 1, R4975 += 1, R4976 += 1 };
  s2 -> s3 [71, 74] { R5130 += 1, R5066 += 1, R4974 += 1, R4976 += 1 };
  s2 -> s1 [71, 65535] { R5130 += 1, R5066 += 1, R4974 += 1, R4975 += 1, R4976 += 1 };
  s2 -> s2 [71, 65535] { R5130 += 1, R5066 += 1, R4973 += 1, R4974 += 1 };
  s2 -> s3 [79, 65535] { R5130 += 1, R5066 += 1, R4974 += 1, R4976 += 1 };
  s3 -> s3 [0, 69] { R5130 += 1, R5066 += 1, R4974 += 1, R4976 += 1 };
  s3 -> s11 [0, 65535];
  s3 -> s3 [0, 65535] { R5130 += 1 };
  s3 -> s5 [70, 70] { R5130 += 1, R5066 += 1, R4974 += 1, R4976 += 1 };
  s3 -> s8 [70, 70] { R5130 += 1, R5066 += 1, R4974 += 1, R4976 += 1 };
  s3 -> s3 [71, 74] { R5130 += 1, R5066 += 1, R4974 += 1, R4976 += 1 };
  s3 -> s3 [79, 65535] { R5130 += 1, R5066 += 1, R4974 += 1, R4976 += 1 };
  s4 -> s1 [0, 69] { R5130 += 1, R5066 += 1, R4974 += 1, R4975 += 1, R4976 += 1 };
  s4 -> s2 [0, 69] { R5130 += 1, R5066 += 1, R4973 += 1, R4974 += 1 };
  s4 -> s3 [0, 69] { R5130 += 1, R5066 += 1, R4974 += 1, R4976 += 1 };
  s4 -> s4 [0, 65535] { R5130 += 1, R5065 += 1, R5066 += 1 };
  s4 -> s5 [70, 70] { R5130 += 1, R5066 += 1, R4974 += 1, R4976 += 1 };
  s4 -> s6 [70, 70] { R5130 += 1, R5066 += 1, R4973 += 1, R4974 += 1 };
  s4 -> s7 [70, 70] { R5130 += 1, R5066 += 1, R4973 += 1, R4974 += 1 };
  s4 -> s8 [70, 70] { R5130 += 1, R5066 += 1, R4974 += 1, R4976 += 1 };
  s4 -> s9 [70, 70] { R5130 += 1, R5066 += 1, R4974 += 1, R4975 += 1, R4976 += 1 };
  s4 -> s10 [70, 70] { R5130 += 1, R5066 += 1, R4974 += 1, R4975 += 1, R4976 += 1 };
  s4 -> s3 [71, 74] { R5130 += 1, R5066 += 1, R4974 += 1, R4976 += 1 };
  s4 -> s1 [71, 65535] { R5130 += 1, R5066 += 1, R4974 += 1, R4975 += 1, R4976 += 1 };
  s4 -> s2 [71, 65535] { R5130 += 1, R5066 += 1, R4973 += 1, R4974 += 1 };
  s4 -> s3 [79, 65535] { R5130 += 1, R5066 += 1, R4974 += 1, R4976 += 1 };
  s5 -> s5 [0, 74] { R5130 += 1, R5066 += 1, R4974 += 1, R4976 += 1 };
  s5 -> s5 [0, 65535] { R5130 += 1 };
  s5 -> s11 [0, 65535];
  s5 -> s5 [79, 65535] { R5130 += 1, R5066 += 1, R4974 += 1, R4976 += 1 };
  s6 -> s5 [0, 74] { R5130 += 1, R5066 += 1, R4974 += 1, R4976 += 1 };
  s6 -> s6 [0, 65535] { R5130 += 1, R5066 += 1, R4973 += 1, R4974 += 1 };
  s6 -> s10 [0, 65535] { R5130 += 1, R5066 += 1, R4974 += 1, R4975 += 1, R4976 += 1 };
  s6 -> s5 [79, 65535] { R5130 += 1, R5066 += 1, R4974 += 1, R4976 += 1 };
  s8 -> s11 [0, 65535];
  s8 -> s8 [0, 65535] { R5130 += 1 };
  s10 -> s5 [0, 74] { R5130 += 1, R5066 += 1, R4974 += 1, R4976 += 1 };
  s10 -> s10 [0, 65535] { R5130 += 1, R5066 += 1, R4974 += 1, R4975 += 1, R4976 += 1 };
  s10 -> s5 [79, 65535] { R5130 += 1, R5066 += 1, R4974 += 1, R4976 += 1 };
  s11 -> s11 [0, 65535];
  accepting s3, s5, s8, s11;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R5010 && R3 = R5130 && R25 - R5130 = -1 && R26 = R5130 && R27 - R5130 = -1 && R28 = R5130 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R4978 + -1*R4974 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R4978 + -1*R4974 - R130 = 0 && R129 + R4977 + R4973 = 0 && R131 + R4979 + R4975 = 0 && R132 + R4980 + R4976 = 0 && R5009 = 0 && R5041 = 0 && R5042 = 0 && R5051 = 0 && R5052 = 0 && R5059 = 0 && R5060 = 0 && R5065 = 0 && R5066 = 0 && R5067 = 0 && R5068 = R5130 && R5069 = 0 && R5070 = R5130 && R5071 = 0 && R5072 = R5130 && R5073 = 0 && R5074 = R5130 && R5075 = 0 && R5076 = R5130 && R5077 = 0 && R5078 = R5130 && R5079 = 0 && R5080 = R5130 && R5081 = 0 && R5082 = R5130 && R5083 = 0 && R5084 = R5130 && R5085 = 0 && R5086 = R5130 && R5087 = 0 && R5088 = R5130 && R5089 = 0 && R5090 = R5130 && R5091 = 0 && R5092 = R5130 && R5093 = 0 && R5094 = R5130 && R5095 = 0 && R5096 = R5130 && R5097 = 0 && R5098 = R5130 && R5099 = 0 && R5100 = R5130 && R5101 = 0 && R5102 = R5130 && R5103 = 0 && R5104 = R5130 && R5105 = 0 && R5106 = R5130 && R5107 = 0 && R5108 = R5130 && R5109 = 0 && R5110 = R5130 && R5111 = 0 && R5112 = R5130 && R5113 = 0 && R5114 = R5130 && R5115 = 0 && R5116 = R5130 && R5117 = 0 && R5118 = R5130 && R5119 = 0 && R5120 = R5130 && R5121 = 0 && R5122 = R5130 && R5123 = 0 && R5124 = R5130 && R5125 = 0 && R5126 = R5130 && R5127 = 0 && R5128 = R5130 && R5129 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R4978 + -1*R4974 - R130 < 1 && -1 < R5010 && 0 < R5130 && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R4978 + -1*R4974 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R191 + R187 = 0 && R114 + R192 + R188 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R4978 + -1*R4974 - R130 = 0 || R130 + R4978 + R4974 < 1) && (R81 + R158 + R155 = 0 || R130 + R4978 + R4974 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R4978 + -1*R4974 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R4978 + R4974 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R4978 + -1*R4974 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R4978 + R4974 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R4978 + -1*R4974 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R4978 + R4974 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 != 0 || R112 + R190 + R186 + -1*R4978 + -1*R4974 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R4978 + R4974 = 0)) && (R113 + R191 + R187 != 0 || R83 + R160 + R157 + -1*R192 + -1*R188 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R4020 + R4015 != 0 || R120 + R4021 + R4016 + -1*R4978 + -1*R4974 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R4978 + R4974 = 0)) && (R4981 != 0 || R4982 = R5010 || (R22 = 0 && R5010 = 0)) && (R4983 != 0 || R4984 = R5010 || (R22 = 0 && R5010 = 0)) && (R4985 != 0 || R4986 = R5010 || (R22 = 0 && R5010 = 0)) && (R4987 != 0 || R4988 = R5010 || (R22 = 0 && R5010 = 0)) && (R4989 != 0 || R4990 = R5010 || (R22 = 0 && R5010 = 0)) && (R4991 != 0 || R4992 = R5010 || (R22 = 0 && R5010 = 0)) && (R4993 != 0 || R4994 = R5010 || (R22 = 0 && R5010 = 0)) && (R4995 != 0 || R4996 = R5010 || (R22 = 0 && R5010 = 0)) && (R4997 != 0 || R4998 = R5010 || (R22 = 0 && R5010 = 0)) && (R4999 != 0 || R5000 = R5010 || (R22 = 0 && R5010 = 0)) && (R5001 != 0 || R5002 = R5010 || (R22 = 0 && R5010 = 0)) && (R5003 != 0 || R5004 = R5010 || (R22 = 0 && R5010 = 0)) && (R5005 != 0 || R5006 = R5010 || (R22 = 0 && R5010 = 0)) && (R5007 != 0 || R5008 = R5010 || (R22 = 0 && R5010 = 0)) && (R23 = 0 || (R5039 = 0 && R5040 = 0)) && (R23 = 0 || (R5043 = 0 && R5044 = 0)) && (R23 = 0 || (R5045 = 0 && R5046 = 0)) && (R23 = 0 || (R5047 = 0 && R5048 = 0)) && (R23 = 0 || (R5049 = 0 && R5050 = 0)) && (R23 = 0 || (R5053 = 0 && R5054 = 0)) && (R23 = 0 || (R5055 = 0 && R5056 = 0)) && (R23 = 0 || (R5057 = 0 && R5058 = 0)) && (R23 = 0 || (R5061 = 0 && R5062 = 0)) && (R23 = 0 || (R5063 = 0 && R5064 = 0)) && (R24 = 0 || (R5011 = 0 && R5012 = 0)) && (R24 = 0 || (R5013 = 0 && R5014 = 0)) && (R24 = 0 || (R5015 = 0 && R5016 = 0)) && (R24 = 0 || (R5017 = 0 && R5018 = 0)) && (R24 = 0 || (R5019 = 0 && R5020 = 0)) && (R24 = 0 || (R5021 = 0 && R5022 = 0)) && (R24 = 0 || (R5023 = 0 && R5024 = 0)) && (R24 = 0 || (R5025 = 0 && R5026 = 0)) && (R24 = 0 || (R5027 = 0 && R5028 = 0)) && (R24 = 0 || (R5029 = 0 && R5030 = 0)) && (R24 = 0 || (R5031 = 0 && R5032 = 0)) && (R24 = 0 || (R5033 = 0 && R5034 = 0)) && (R24 = 0 || (R5035 = 0 && R5036 = 0)) && (R24 = 0 || (R5037 = 0 && R5038 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R4978 + R4974 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R4978 + R4974 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R4978 + R4974 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 = 0 || (R83 + R160 + R157 = 0 && R130 + R4978 + R4974 = 0)) && (R113 + R191 + R187 = 0 || R83 + R160 + R157 < 1) && (R119 + R4020 + R4015 = 0 || (R83 + R160 + R157 = 0 && R130 + R4978 + R4974 = 0)) && (R123 + R4024 + R4019 = 0 || (R121 + R4022 + R4017 = 0 && R122 + R4023 + R4018 = 0)) && (R4981 = 0 || (R22 = 0 && R5010 = 0)) && (R4983 = 0 || (R22 = 0 && R5010 = 0)) && (R4985 = 0 || (R22 = 0 && R5010 = 0)) && (R4987 = 0 || (R22 = 0 && R5010 = 0)) && (R4989 = 0 || (R22 = 0 && R5010 = 0)) && (R4991 = 0 || (R22 = 0 && R5010 = 0)) && (R4993 = 0 || (R22 = 0 && R5010 = 0)) && (R4995 = 0 || (R22 = 0 && R5010 = 0)) && (R4997 = 0 || (R22 = 0 && R5010 = 0)) && (R4999 = 0 || (R22 = 0 && R5010 = 0)) && (R5001 = 0 || (R22 = 0 && R5010 = 0)) && (R5003 = 0 || (R22 = 0 && R5010 = 0)) && (R5005 = 0 || (R22 = 0 && R5010 = 0)) && (R5007 = 0 || (R22 = 0 && R5010 = 0));
// End of Parikh automata intersection problem
