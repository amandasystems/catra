// Parikh automata intersection problem, generated by OSTRICH+
counter int R101, R102, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R1467, R1468, R1469, R147, R1470, R1471, R1472, R1473, R1474, R1475, R1476, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R2, R2109, R2110, R2111, R2112, R2113, R2114, R2115, R2116, R2117, R2118, R2119, R2120, R2121, R2122, R2123, R2124, R2125, R2126, R2127, R2128, R2129, R2130, R2131, R2132, R2133, R2134, R2135, R2136, R2137, R2138, R2139, R2140, R2141, R2142, R2143, R2144, R2145, R2146, R2147, R2148, R2149, R2150, R2151, R2152, R2153, R2154, R2155, R2156, R2157, R2158, R2159, R2160, R2161, R2162, R2163, R2164, R2165, R2166, R2167, R2168, R2169, R2170, R2171, R2172, R2173, R2174, R2175, R2176, R2177, R2178, R2179, R2180, R2181, R2182, R2183, R2184, R2185, R2186, R2187, R2188, R2189, R2190, R2191, R2192, R2193, R2194, R2195, R2196, R2197, R2198, R2199, R22, R2200, R2201, R2202, R2203, R2204, R2205, R2206, R2207, R2208, R2209, R2210, R2211, R2212, R2213, R2214, R2215, R2216, R2217, R2218, R2219, R2220, R2221, R2222, R2223, R2224, R2225, R2226, R2227, R2228, R2229, R2230, R2231, R2232, R2233, R2234, R2235, R2236, R2237, R2238, R2239, R2240, R2241, R2242, R2243, R2244, R2245, R2246, R2247, R2248, R2249, R2250, R2251, R2252, R2253, R2254, R2255, R2256, R2257, R2258, R2259, R2260, R2261, R2262, R2263, R2264, R2265, R2266, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R5, R63, R65, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R30 += 1 };
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R2148 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R2147 += 1, R2148 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R2148 += 1, R24 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R2150 += 1 };
  s0 -> s0 [0, 65535] { R2149 += 1, R2150 += 1 };
  s0 -> s2 [70, 70] { R2150 += 1 };
  s0 -> s3 [70, 70] { R2150 += 1 };
  s0 -> s1 [76, 65535] { R2150 += 1 };
  s1 -> s1 [0, 69] { R2150 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2150 += 1 };
  s1 -> s3 [70, 70] { R2150 += 1 };
  s1 -> s1 [76, 65535] { R2150 += 1 };
  s2 -> s2 [0, 70] { R2150 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [76, 65535] { R2150 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R2152 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R2151 += 1, R2152 += 1 };
  s0 -> s2 [70, 70] { R2152 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R2152 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R2152 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R2152 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2152 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R2152 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R2152 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2152 += 1, R63 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R2154 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R2153 += 1, R2154 += 1 };
  s0 -> s2 [70, 70] { R2154 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R2154 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R2154 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R2154 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2154 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R2154 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R2154 += 1, R65 += 1 };
  s2 -> s2 [0, 65535] { R2154 += 1, R65 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R2156 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R2155 += 1, R2156 += 1 };
  s0 -> s2 [70, 70] { R2156 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R2156 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R2156 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R2156 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2156 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R2156 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R2156 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535] { R2156 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R2158 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R2157 += 1, R2158 += 1 };
  s0 -> s2 [70, 70] { R2158 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R2158 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R2158 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R2158 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2158 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R2158 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R2158 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2158 += 1, R73 += 1, R74 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R2160 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R2159 += 1, R2160 += 1 };
  s0 -> s2 [70, 70] { R2160 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R2160 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R2160 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R2160 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2160 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R2160 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R2160 += 1, R77 += 1, R78 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2160 += 1, R77 += 1, R78 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R2162 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R2161 += 1, R2162 += 1 };
  s0 -> s2 [70, 70] { R2162 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R2162 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R2162 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R2162 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2162 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R2162 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R2162 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535] { R2162 += 1, R81 += 1, R82 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R2164 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R2163 += 1, R2164 += 1 };
  s0 -> s2 [70, 70] { R2164 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R2164 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R2164 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R2164 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2164 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R2164 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R2164 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2164 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R2166 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R2165 += 1, R2166 += 1 };
  s0 -> s2 [70, 70] { R2166 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R2166 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R2166 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R2166 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2166 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R2166 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R2166 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535] { R2166 += 1, R93 += 1, R94 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R2168 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R2167 += 1, R2168 += 1 };
  s0 -> s2 [70, 70] { R2168 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R2168 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R2168 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R2168 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2168 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R2168 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R2168 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R2168 += 1, R101 += 1, R102 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R2170 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R2169 += 1, R2170 += 1 };
  s0 -> s2 [70, 70] { R2170 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R2170 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R2170 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R2170 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2170 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R2170 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R2170 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535] { R2170 += 1, R111 += 1, R112 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R2172 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R2171 += 1, R2172 += 1 };
  s0 -> s2 [70, 70] { R2172 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R2172 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R2172 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R2172 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2172 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R2172 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R2172 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535] { R2172 += 1, R119 += 1, R120 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R2174 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R2173 += 1, R2174 += 1 };
  s0 -> s2 [70, 70] { R2174 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R2174 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R2174 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R2174 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R2174 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R2174 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R2174 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535] { R2174 += 1, R129 += 1, R130 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R2204 += 1 };
  s0 -> s0 [0, 65535] { R2203 += 1, R2204 += 1 };
  s0 -> s2 [70, 70] { R2204 += 1 };
  s0 -> s1 [71, 65535] { R2204 += 1 };
  s1 -> s1 [0, 69] { R2204 += 1 };
  s1 -> s2 [70, 70] { R2204 += 1 };
  s1 -> s1 [71, 65535] { R2204 += 1 };
  s2 -> s2 [0, 65535] { R2204 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65535] { R2206 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R2205 += 1, R2206 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R2206 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R2208 += 1 };
  s0 -> s0 [0, 65535] { R2207 += 1, R2208 += 1 };
  s0 -> s2 [0, 65535] { R2208 += 1, R12 += 1 };
  s0 -> s3 [70, 70] { R2208 += 1 };
  s0 -> s1 [71, 65535] { R2208 += 1 };
  s1 -> s1 [0, 69] { R2208 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R2208 += 1 };
  s1 -> s1 [71, 65535] { R2208 += 1 };
  s2 -> s1 [0, 69] { R2208 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2208 += 1, R12 += 1 };
  s2 -> s3 [70, 70] { R2208 += 1 };
  s2 -> s1 [71, 65535] { R2208 += 1 };
  s3 -> s3 [0, 65535] { R2208 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R2210 += 1, R2118 += 1 };
  s0 -> s0 [0, 65535] { R2209 += 1, R2210 += 1 };
  s0 -> s2 [0, 65535] { R2210 += 1, R2117 += 1, R2118 += 1 };
  s0 -> s1 [71, 65535] { R2210 += 1, R2118 += 1 };
  s1 -> s1 [0, 69] { R2210 += 1, R2118 += 1 };
  s1 -> s1 [0, 65535] { R2210 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [71, 65535] { R2210 += 1, R2118 += 1 };
  s2 -> s1 [0, 69] { R2210 += 1, R2118 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2210 += 1, R2117 += 1, R2118 += 1 };
  s2 -> s1 [71, 65535] { R2210 += 1, R2118 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R2211 += 1, R2212 += 1 };
  s0 -> s1 [0, 65535] { R2212 += 1, R2119 += 1, R2120 += 1 };
  s0 -> s2 [0, 65535] { R2212 += 1, R2120 += 1, R22 += 1 };
  s1 -> s1 [0, 65535] { R2212 += 1, R2119 += 1, R2120 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R2212 += 1, R2120 += 1, R22 += 1 };
  s2 -> s3 [0, 65535] { R2212 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2212 += 1, R2120 += 1, R22 += 1 };
  s3 -> s3 [0, 65535] { R2212 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R2214 += 1, R2122 += 1 };
  s0 -> s2 [0, 65535] { R2214 += 1, R2121 += 1, R2122 += 1 };
  s0 -> s0 [0, 65535] { R2213 += 1, R2214 += 1 };
  s0 -> s1 [75, 65535] { R2214 += 1, R2122 += 1 };
  s1 -> s1 [0, 70] { R2214 += 1, R2122 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2214 += 1 };
  s1 -> s1 [75, 65535] { R2214 += 1, R2122 += 1 };
  s2 -> s1 [0, 70] { R2214 += 1, R2122 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2214 += 1, R2121 += 1, R2122 += 1 };
  s2 -> s1 [75, 65535] { R2214 += 1, R2122 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R2216 += 1, R2124 += 1, R138 += 1 };
  s0 -> s0 [0, 65535] { R2215 += 1, R2216 += 1 };
  s0 -> s2 [0, 65535] { R2216 += 1, R2123 += 1, R2124 += 1 };
  s1 -> s1 [0, 65535] { R2216 += 1, R2124 += 1, R138 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R2216 += 1 };
  s2 -> s1 [0, 65535] { R2216 += 1, R2124 += 1, R138 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2216 += 1, R2123 += 1, R2124 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2216 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R2218 += 1, R2126 += 1 };
  s0 -> s2 [0, 65535] { R2218 += 1, R2125 += 1, R2126 += 1 };
  s0 -> s0 [0, 65535] { R2217 += 1, R2218 += 1 };
  s0 -> s3 [0, 65535] { R2218 += 1, R2126 += 1, R140 += 1 };
  s0 -> s1 [76, 65535] { R2218 += 1, R2126 += 1 };
  s1 -> s1 [0, 74] { R2218 += 1, R2126 += 1 };
  s1 -> s1 [0, 65535] { R2218 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R2218 += 1, R2126 += 1 };
  s2 -> s1 [0, 74] { R2218 += 1, R2126 += 1 };
  s2 -> s2 [0, 65535] { R2218 += 1, R2125 += 1, R2126 += 1 };
  s2 -> s3 [0, 65535] { R2218 += 1, R2126 += 1, R140 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [76, 65535] { R2218 += 1, R2126 += 1 };
  s3 -> s1 [0, 74] { R2218 += 1, R2126 += 1 };
  s3 -> s4 [0, 65535] { R2218 += 1 };
  s3 -> s3 [0, 65535] { R2218 += 1, R2126 += 1, R140 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [76, 65535] { R2218 += 1, R2126 += 1 };
  s4 -> s4 [0, 65535] { R2218 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R2220 += 1, R2128 += 1, R144 += 1, R145 += 1 };
  s0 -> s2 [0, 65535] { R2220 += 1, R2128 += 1, R145 += 1, R146 += 1 };
  s0 -> s0 [0, 65535] { R2219 += 1, R2220 += 1 };
  s0 -> s3 [0, 65535] { R2220 += 1, R2127 += 1, R2128 += 1 };
  s1 -> s1 [0, 65535] { R2220 += 1, R2128 += 1, R144 += 1, R145 += 1 };
  s1 -> s2 [0, 65535] { R2220 += 1, R2128 += 1, R145 += 1, R146 += 1 };
  s1 -> s6 [0, 65535] { R2220 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R2220 += 1, R2128 += 1 };
  s2 -> s2 [0, 65535] { R2220 += 1, R2128 += 1, R145 += 1, R146 += 1 };
  s2 -> s6 [0, 65535] { R2220 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R2220 += 1, R2128 += 1, R144 += 1, R145 += 1 };
  s3 -> s2 [0, 65535] { R2220 += 1, R2128 += 1, R145 += 1, R146 += 1 };
  s3 -> s3 [0, 65535] { R2220 += 1, R2127 += 1, R2128 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2220 += 1, R2128 += 1 };
  s5 -> s6 [0, 65535] { R2220 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R2220 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R2222 += 1, R2130 += 1, R150 += 1 };
  s0 -> s0 [0, 65535] { R2221 += 1, R2222 += 1 };
  s0 -> s2 [0, 65535] { R2222 += 1, R2129 += 1, R2130 += 1 };
  s0 -> s3 [0, 65535] { R2222 += 1, R2130 += 1, R149 += 1, R150 += 1 };
  s0 -> s4 [75, 75] { R2222 += 1, R2130 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R2222 += 1, R2130 += 1, R150 += 1 };
  s0 -> s1 [79, 65535] { R2222 += 1, R2130 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R2222 += 1, R2130 += 1, R150 += 1 };
  s1 -> s6 [0, 65535] { R2222 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R2222 += 1, R2130 += 1 };
  s1 -> s4 [75, 75] { R2222 += 1, R2130 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R2222 += 1, R2130 += 1, R150 += 1 };
  s1 -> s1 [79, 65535] { R2222 += 1, R2130 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R2222 += 1, R2130 += 1, R150 += 1 };
  s2 -> s2 [0, 65535] { R2222 += 1, R2129 += 1, R2130 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s3 [0, 65535] { R2222 += 1, R2130 += 1, R149 += 1, R150 += 1 };
  s2 -> s4 [75, 75] { R2222 += 1, R2130 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R2222 += 1, R2130 += 1, R150 += 1 };
  s2 -> s1 [79, 65535] { R2222 += 1, R2130 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R2222 += 1, R2130 += 1, R150 += 1 };
  s3 -> s6 [0, 65535] { R2222 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R2222 += 1, R2130 += 1, R149 += 1, R150 += 1 };
  s3 -> s4 [75, 75] { R2222 += 1, R2130 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R2222 += 1, R2130 += 1, R150 += 1 };
  s3 -> s1 [79, 65535] { R2222 += 1, R2130 += 1, R150 += 1 };
  s4 -> s6 [0, 65535] { R2222 += 1 };
  s4 -> s4 [0, 65535] { R2222 += 1, R2130 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 75] { R2222 += 1, R2130 += 1, R150 += 1 };
  s5 -> s6 [0, 65535] { R2222 += 1 };
  s5 -> s5 [0, 65535] { R2222 += 1, R2130 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [79, 65535] { R2222 += 1, R2130 += 1, R150 += 1 };
  s6 -> s6 [0, 65535] { R2222 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s0 [0, 65535] { R2223 += 1, R2224 += 1 };
  s0 -> s1 [0, 65535] { R2224 += 1, R2131 += 1, R2132 += 1 };
  s0 -> s2 [0, 65535] { R2224 += 1, R2132 += 1, R154 += 1 };
  s0 -> s3 [0, 65535] { R2224 += 1, R2132 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R2224 += 1, R2131 += 1, R2132 += 1 };
  s1 -> s2 [0, 65535] { R2224 += 1, R2132 += 1, R154 += 1 };
  s1 -> s3 [0, 65535] { R2224 += 1, R2132 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R2224 += 1 };
  s2 -> s2 [0, 65535] { R2224 += 1, R2132 += 1, R154 += 1 };
  s2 -> s3 [0, 65535] { R2224 += 1, R2132 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R2224 += 1 };
  s3 -> s3 [0, 65535] { R2224 += 1, R2132 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2224 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R2226 += 1, R2133 += 1, R2134 += 1 };
  s0 -> s2 [0, 65535] { R2226 += 1, R2134 += 1, R159 += 1, R160 += 1 };
  s0 -> s0 [0, 65535] { R2225 += 1, R2226 += 1 };
  s0 -> s3 [0, 65535] { R2226 += 1, R2134 += 1, R158 += 1, R159 += 1 };
  s1 -> s1 [0, 65535] { R2226 += 1, R2133 += 1, R2134 += 1 };
  s1 -> s2 [0, 65535] { R2226 += 1, R2134 += 1, R159 += 1, R160 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R2226 += 1, R2134 += 1, R158 += 1, R159 += 1 };
  s2 -> s4 [0, 65535] { R2226 += 1 };
  s2 -> s2 [0, 65535] { R2226 += 1, R2134 += 1, R159 += 1, R160 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R2226 += 1, R2134 += 1 };
  s3 -> s4 [0, 65535] { R2226 += 1 };
  s3 -> s2 [0, 65535] { R2226 += 1, R2134 += 1, R159 += 1, R160 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2226 += 1, R2134 += 1, R158 += 1, R159 += 1 };
  s4 -> s4 [0, 65535] { R2226 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R2226 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2226 += 1, R2134 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R2228 += 1, R2136 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R2228 += 1, R2136 += 1, R165 += 1, R166 += 1 };
  s0 -> s3 [0, 65535] { R2228 += 1, R2135 += 1, R2136 += 1 };
  s0 -> s4 [0, 65535] { R2228 += 1, R2136 += 1, R164 += 1, R165 += 1 };
  s0 -> s0 [0, 65535] { R2227 += 1, R2228 += 1 };
  s0 -> s1 [76, 65535] { R2228 += 1, R2136 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R2228 += 1, R2136 += 1, R165 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R2228 += 1 };
  s1 -> s1 [0, 65535] { R2228 += 1, R2136 += 1 };
  s1 -> s1 [76, 65535] { R2228 += 1, R2136 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R2228 += 1, R2136 += 1, R165 += 1 };
  s2 -> s2 [0, 65535] { R2228 += 1, R2136 += 1, R165 += 1, R166 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R2228 += 1, R2136 += 1 };
  s2 -> s6 [0, 65535] { R2228 += 1 };
  s2 -> s1 [76, 65535] { R2228 += 1, R2136 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R2228 += 1, R2136 += 1, R165 += 1 };
  s3 -> s2 [0, 65535] { R2228 += 1, R2136 += 1, R165 += 1, R166 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2228 += 1, R2135 += 1, R2136 += 1 };
  s3 -> s4 [0, 65535] { R2228 += 1, R2136 += 1, R164 += 1, R165 += 1 };
  s3 -> s1 [76, 65535] { R2228 += 1, R2136 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R2228 += 1, R2136 += 1, R165 += 1 };
  s4 -> s2 [0, 65535] { R2228 += 1, R2136 += 1, R165 += 1, R166 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R2228 += 1 };
  s4 -> s4 [0, 65535] { R2228 += 1, R2136 += 1, R164 += 1, R165 += 1 };
  s4 -> s1 [76, 65535] { R2228 += 1, R2136 += 1, R165 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2228 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R2228 += 1, R2136 += 1 };
  s7 -> s6 [0, 65535] { R2228 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R2230 += 1, R2138 += 1, R172 += 1, R174 += 1 };
  s0 -> s2 [0, 65535] { R2230 += 1, R2138 += 1, R171 += 1, R172 += 1 };
  s0 -> s3 [0, 65535] { R2230 += 1, R2138 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s4 [0, 65535] { R2230 += 1, R2137 += 1, R2138 += 1 };
  s0 -> s0 [0, 65535] { R2229 += 1, R2230 += 1 };
  s0 -> s1 [76, 65535] { R2230 += 1, R2138 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R2230 += 1, R2138 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 65535] { R2230 += 1, R2138 += 1, R172 += 1 };
  s1 -> s6 [0, 65535] { R2230 += 1, R2138 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R2230 += 1 };
  s1 -> s1 [76, 65535] { R2230 += 1, R2138 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R2230 += 1, R2138 += 1, R172 += 1, R174 += 1 };
  s2 -> s2 [0, 65535] { R2230 += 1, R2138 += 1, R171 += 1, R172 += 1 };
  s2 -> s3 [0, 65535] { R2230 += 1, R2138 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R2230 += 1 };
  s2 -> s1 [76, 65535] { R2230 += 1, R2138 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R2230 += 1, R2138 += 1, R172 += 1, R174 += 1 };
  s3 -> s6 [0, 65535] { R2230 += 1, R2138 += 1 };
  s3 -> s3 [0, 65535] { R2230 += 1, R2138 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s7 [0, 65535] { R2230 += 1 };
  s3 -> s1 [76, 65535] { R2230 += 1, R2138 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R2230 += 1, R2138 += 1, R172 += 1, R174 += 1 };
  s4 -> s2 [0, 65535] { R2230 += 1, R2138 += 1, R171 += 1, R172 += 1 };
  s4 -> s3 [0, 65535] { R2230 += 1, R2138 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2230 += 1, R2137 += 1, R2138 += 1 };
  s4 -> s1 [76, 65535] { R2230 += 1, R2138 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2230 += 1, R2138 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s7 [0, 65535] { R2230 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R2230 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R2232 += 1, R2139 += 1, R2140 += 1 };
  s0 -> s0 [0, 65535] { R2231 += 1, R2232 += 1 };
  s0 -> s2 [0, 65535] { R2232 += 1, R2140 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2232 += 1, R2139 += 1, R2140 += 1 };
  s1 -> s2 [0, 65535] { R2232 += 1, R2140 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R2232 += 1 };
  s2 -> s2 [0, 65535] { R2232 += 1, R2140 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2232 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R2234 += 1, R2142 += 1, R190 += 1, R192 += 1 };
  s0 -> s2 [0, 65535] { R2234 += 1, R2142 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s0 -> s3 [0, 65535] { R2234 += 1, R2141 += 1, R2142 += 1 };
  s0 -> s4 [0, 65535] { R2234 += 1, R2142 += 1, R189 += 1, R190 += 1 };
  s0 -> s0 [0, 65535] { R2233 += 1, R2234 += 1 };
  s0 -> s1 [78, 65535] { R2234 += 1, R2142 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 75] { R2234 += 1, R2142 += 1, R190 += 1, R192 += 1 };
  s1 -> s1 [0, 65535] { R2234 += 1, R2142 += 1, R190 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R2234 += 1, R2142 += 1 };
  s1 -> s6 [0, 65535] { R2234 += 1 };
  s1 -> s1 [78, 65535] { R2234 += 1, R2142 += 1, R190 += 1, R192 += 1 };
  s2 -> s1 [0, 75] { R2234 += 1, R2142 += 1, R190 += 1, R192 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R2234 += 1, R2142 += 1 };
  s2 -> s6 [0, 65535] { R2234 += 1 };
  s2 -> s2 [0, 65535] { R2234 += 1, R2142 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s2 -> s1 [78, 65535] { R2234 += 1, R2142 += 1, R190 += 1, R192 += 1 };
  s3 -> s1 [0, 75] { R2234 += 1, R2142 += 1, R190 += 1, R192 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R2234 += 1, R2142 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s3 -> s3 [0, 65535] { R2234 += 1, R2141 += 1, R2142 += 1 };
  s3 -> s4 [0, 65535] { R2234 += 1, R2142 += 1, R189 += 1, R190 += 1 };
  s3 -> s1 [78, 65535] { R2234 += 1, R2142 += 1, R190 += 1, R192 += 1 };
  s4 -> s1 [0, 75] { R2234 += 1, R2142 += 1, R190 += 1, R192 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R2234 += 1 };
  s4 -> s2 [0, 65535] { R2234 += 1, R2142 += 1, R190 += 1, R191 += 1, R192 += 1 };
  s4 -> s4 [0, 65535] { R2234 += 1, R2142 += 1, R189 += 1, R190 += 1 };
  s4 -> s1 [78, 65535] { R2234 += 1, R2142 += 1, R190 += 1, R192 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2234 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R2234 += 1, R2142 += 1 };
  s7 -> s6 [0, 65535] { R2234 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s0 [0, 65535] { R2235 += 1, R2236 += 1 };
  s0 -> s1 [0, 65535] { R2236 += 1, R2144 += 1, R1473 += 1 };
  s0 -> s2 [0, 65535] { R2236 += 1, R2144 += 1 };
  s0 -> s3 [0, 65535] { R2236 += 1, R2143 += 1, R2144 += 1 };
  s1 -> s5 [0, 65535] { R2236 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R2236 += 1, R2144 += 1, R1473 += 1 };
  s1 -> s2 [0, 65535] { R2236 += 1, R2144 += 1 };
  s2 -> s5 [0, 65535] { R2236 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2236 += 1, R2144 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R2236 += 1, R2144 += 1, R1473 += 1 };
  s3 -> s2 [0, 65535] { R2236 += 1, R2144 += 1 };
  s3 -> s3 [0, 65535] { R2236 += 1, R2143 += 1, R2144 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2236 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 75] { R2238 += 1, R2146 += 1, R2114 += 1, R2116 += 1 };
  s0 -> s0 [0, 65535] { R2237 += 1, R2238 += 1 };
  s0 -> s2 [0, 65535] { R2238 += 1, R2145 += 1, R2146 += 1 };
  s0 -> s3 [78, 78] { R2238 += 1, R2146 += 1, R2114 += 1, R2116 += 1 };
  s0 -> s1 [79, 65535] { R2238 += 1, R2146 += 1, R2114 += 1, R2116 += 1 };
  s1 -> s1 [0, 75] { R2238 += 1, R2146 += 1, R2114 += 1, R2116 += 1 };
  s1 -> s3 [78, 78] { R2238 += 1, R2146 += 1, R2114 += 1, R2116 += 1 };
  s1 -> s1 [79, 65535] { R2238 += 1, R2146 += 1, R2114 += 1, R2116 += 1 };
  s2 -> s1 [0, 75] { R2238 += 1, R2146 += 1, R2114 += 1, R2116 += 1 };
  s2 -> s2 [0, 65535] { R2238 += 1, R2145 += 1, R2146 += 1 };
  s2 -> s3 [78, 78] { R2238 += 1, R2146 += 1, R2114 += 1, R2116 += 1 };
  s2 -> s1 [79, 65535] { R2238 += 1, R2146 += 1, R2114 += 1, R2116 += 1 };
  s3 -> s3 [0, 75] { R2238 += 1, R2146 += 1, R2114 += 1, R2116 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R2238 += 1 };
  s3 -> s3 [0, 65535] { R2238 += 1, R2146 += 1, R2114 += 1 };
  s3 -> s6 [0, 65535] { R2238 += 1, R2146 += 1 };
  s3 -> s3 [78, 65535] { R2238 += 1, R2146 += 1, R2114 += 1, R2116 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2238 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R2238 += 1 };
  s6 -> s6 [0, 65535] { R2238 += 1, R2146 += 1 };
  accepting s3, s4, s5, s6;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65535] { R2240 += 1, R2176 += 1, R23 += 1 };
  s0 -> s0 [0, 65535] { R2239 += 1, R2240 += 1 };
  s0 -> s2 [0, 65535] { R2240 += 1, R2175 += 1, R2176 += 1 };
  s1 -> s1 [0, 65535] { R2240 += 1, R2176 += 1, R23 += 1 };
  s1 -> s4 [0, 65535] { R2240 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R2240 += 1, R2176 += 1, R23 += 1 };
  s2 -> s2 [0, 65535] { R2240 += 1, R2175 += 1, R2176 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2240 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R2242 += 1, R2178 += 1 };
  s0 -> s2 [0, 65535] { R2242 += 1, R2177 += 1, R2178 += 1 };
  s0 -> s0 [0, 65535] { R2241 += 1, R2242 += 1 };
  s0 -> s3 [70, 70] { R2242 += 1, R2178 += 1 };
  s0 -> s4 [70, 70] { R2242 += 1, R2178 += 1 };
  s0 -> s5 [75, 75] { R2242 += 1, R2178 += 1 };
  s0 -> s1 [76, 65535] { R2242 += 1, R2178 += 1 };
  s1 -> s1 [0, 69] { R2242 += 1, R2178 += 1 };
  s1 -> s3 [70, 70] { R2242 += 1, R2178 += 1 };
  s1 -> s4 [70, 70] { R2242 += 1, R2178 += 1 };
  s1 -> s5 [75, 75] { R2242 += 1, R2178 += 1 };
  s1 -> s1 [76, 65535] { R2242 += 1, R2178 += 1 };
  s2 -> s1 [0, 69] { R2242 += 1, R2178 += 1 };
  s2 -> s2 [0, 65535] { R2242 += 1, R2177 += 1, R2178 += 1 };
  s2 -> s3 [70, 70] { R2242 += 1, R2178 += 1 };
  s2 -> s4 [70, 70] { R2242 += 1, R2178 += 1 };
  s2 -> s5 [75, 75] { R2242 += 1, R2178 += 1 };
  s2 -> s1 [76, 65535] { R2242 += 1, R2178 += 1 };
  s4 -> s4 [0, 70] { R2242 += 1, R2178 += 1 };
  s4 -> s8 [75, 75] { R2242 += 1, R2178 += 1 };
  s4 -> s4 [76, 65535] { R2242 += 1, R2178 += 1 };
  s5 -> s5 [0, 69] { R2242 += 1, R2178 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R2242 += 1 };
  s5 -> s7 [70, 70] { R2242 += 1, R2178 += 1 };
  s5 -> s8 [70, 70] { R2242 += 1, R2178 += 1 };
  s5 -> s5 [75, 65535] { R2242 += 1, R2178 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2242 += 1 };
  s8 -> s8 [0, 70] { R2242 += 1, R2178 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R2242 += 1 };
  s8 -> s8 [75, 65535] { R2242 += 1, R2178 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R2244 += 1, R2180 += 1, R137 += 1 };
  s0 -> s0 [0, 65535] { R2243 += 1, R2244 += 1 };
  s0 -> s2 [0, 65535] { R2244 += 1, R2179 += 1, R2180 += 1 };
  s0 -> s3 [70, 70] { R2244 += 1, R2180 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R2244 += 1, R2180 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R2244 += 1, R2180 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R2244 += 1, R2180 += 1, R137 += 1 };
  s1 -> s1 [0, 65535] { R2244 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R2244 += 1, R2180 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R2244 += 1, R2180 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R2244 += 1, R2180 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R2244 += 1, R2180 += 1, R137 += 1 };
  s2 -> s2 [0, 65535] { R2244 += 1, R2179 += 1, R2180 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R2244 += 1, R2180 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R2244 += 1, R2180 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R2244 += 1, R2180 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R2244 += 1, R2180 += 1, R137 += 1 };
  s3 -> s6 [0, 65535] { R2244 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2244 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2244 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R2246 += 1, R2182 += 1, R139 += 1 };
  s0 -> s0 [0, 65535] { R2245 += 1, R2246 += 1 };
  s0 -> s2 [0, 65535] { R2246 += 1, R2181 += 1, R2182 += 1 };
  s0 -> s3 [70, 70] { R2246 += 1, R2182 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R2246 += 1, R2182 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R2246 += 1, R2182 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R2246 += 1, R2182 += 1, R139 += 1 };
  s1 -> s1 [0, 65535] { R2246 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R2246 += 1, R2182 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R2246 += 1, R2182 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R2246 += 1, R2182 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R2246 += 1, R2182 += 1, R139 += 1 };
  s2 -> s2 [0, 65535] { R2246 += 1, R2181 += 1, R2182 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R2246 += 1, R2182 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R2246 += 1, R2182 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R2246 += 1, R2182 += 1, R139 += 1 };
  s3 -> s3 [0, 65535] { R2246 += 1, R2182 += 1, R139 += 1 };
  s3 -> s6 [0, 65535] { R2246 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2246 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2246 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R2248 += 1, R2184 += 1, R141 += 1, R142 += 1 };
  s0 -> s2 [0, 65535] { R2248 += 1, R2183 += 1, R2184 += 1 };
  s0 -> s0 [0, 65535] { R2247 += 1, R2248 += 1 };
  s0 -> s3 [70, 70] { R2248 += 1, R2184 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R2248 += 1, R2184 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R2248 += 1, R2184 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R2248 += 1, R2184 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 65535] { R2248 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R2248 += 1, R2184 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R2248 += 1, R2184 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R2248 += 1, R2184 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R2248 += 1, R2184 += 1, R141 += 1, R142 += 1 };
  s2 -> s2 [0, 65535] { R2248 += 1, R2183 += 1, R2184 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R2248 += 1, R2184 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R2248 += 1, R2184 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R2248 += 1, R2184 += 1, R141 += 1, R142 += 1 };
  s3 -> s3 [0, 65535] { R2248 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R2248 += 1 };
  s4 -> s4 [0, 65535] { R2248 += 1, R2184 += 1, R141 += 1, R142 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R2248 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R2250 += 1, R2186 += 1, R147 += 1, R148 += 1 };
  s0 -> s2 [0, 65535] { R2250 += 1, R2185 += 1, R2186 += 1 };
  s0 -> s0 [0, 65535] { R2249 += 1, R2250 += 1 };
  s0 -> s3 [70, 70] { R2250 += 1, R2186 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R2250 += 1, R2186 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R2250 += 1, R2186 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R2250 += 1, R2186 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 65535] { R2250 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R2250 += 1, R2186 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R2250 += 1, R2186 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R2250 += 1, R2186 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R2250 += 1, R2186 += 1, R147 += 1, R148 += 1 };
  s2 -> s2 [0, 65535] { R2250 += 1, R2185 += 1, R2186 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R2250 += 1, R2186 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R2250 += 1, R2186 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R2250 += 1, R2186 += 1, R147 += 1, R148 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2250 += 1, R2186 += 1, R147 += 1, R148 += 1 };
  s3 -> s6 [0, 65535] { R2250 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2250 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2250 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R2252 += 1, R2188 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R2252 += 1, R2188 += 1, R151 += 1, R152 += 1 };
  s0 -> s0 [0, 65535] { R2251 += 1, R2252 += 1 };
  s0 -> s3 [0, 65535] { R2252 += 1, R2187 += 1, R2188 += 1 };
  s0 -> s4 [70, 70] { R2252 += 1, R2188 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R2252 += 1, R2188 += 1, R151 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R2252 += 1, R2188 += 1, R151 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R2252 += 1, R2188 += 1, R152 += 1 };
  s0 -> s1 [71, 74] { R2252 += 1, R2188 += 1, R152 += 1 };
  s0 -> s2 [71, 65535] { R2252 += 1, R2188 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R2252 += 1, R2188 += 1, R152 += 1 };
  s0 -> s1 [76, 65535] { R2252 += 1, R2188 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R2252 += 1, R2188 += 1, R152 += 1 };
  s1 -> s4 [70, 70] { R2252 += 1, R2188 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R2252 += 1, R2188 += 1, R152 += 1 };
  s1 -> s1 [71, 74] { R2252 += 1, R2188 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R2252 += 1, R2188 += 1, R152 += 1 };
  s1 -> s1 [76, 65535] { R2252 += 1, R2188 += 1, R152 += 1 };
  s2 -> s1 [0, 69] { R2252 += 1, R2188 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R2252 += 1, R2188 += 1, R151 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R2252 += 1, R2188 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R2252 += 1, R2188 += 1, R151 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R2252 += 1, R2188 += 1, R151 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R2252 += 1, R2188 += 1, R152 += 1 };
  s2 -> s1 [71, 74] { R2252 += 1, R2188 += 1, R152 += 1 };
  s2 -> s2 [71, 65535] { R2252 += 1, R2188 += 1, R151 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R2252 += 1, R2188 += 1, R152 += 1 };
  s2 -> s1 [76, 65535] { R2252 += 1, R2188 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R2252 += 1, R2188 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R2252 += 1, R2188 += 1, R151 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R2252 += 1, R2187 += 1, R2188 += 1 };
  s3 -> s4 [70, 70] { R2252 += 1, R2188 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R2252 += 1, R2188 += 1, R151 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R2252 += 1, R2188 += 1, R151 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R2252 += 1, R2188 += 1, R152 += 1 };
  s3 -> s1 [71, 74] { R2252 += 1, R2188 += 1, R152 += 1 };
  s3 -> s2 [71, 65535] { R2252 += 1, R2188 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R2252 += 1, R2188 += 1, R152 += 1 };
  s3 -> s1 [76, 65535] { R2252 += 1, R2188 += 1, R152 += 1 };
  s4 -> s4 [0, 74] { R2252 += 1, R2188 += 1, R152 += 1 };
  s4 -> s11 [75, 75] { R2252 += 1, R2188 += 1, R152 += 1 };
  s4 -> s4 [76, 65535] { R2252 += 1, R2188 += 1, R152 += 1 };
  s5 -> s4 [0, 74] { R2252 += 1, R2188 += 1, R152 += 1 };
  s5 -> s5 [0, 65535] { R2252 += 1, R2188 += 1, R151 += 1, R152 += 1 };
  s5 -> s11 [75, 75] { R2252 += 1, R2188 += 1, R152 += 1 };
  s5 -> s4 [76, 65535] { R2252 += 1, R2188 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R2252 += 1, R2188 += 1, R152 += 1 };
  s8 -> s8 [0, 65535] { R2252 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [70, 70] { R2252 += 1, R2188 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R2252 += 1, R2188 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R2252 += 1, R2188 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R2252 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R2252 += 1 };
  s11 -> s11 [0, 65535] { R2252 += 1, R2188 += 1, R152 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R2252 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R2254 += 1, R2190 += 1, R155 += 1, R156 += 1 };
  s0 -> s0 [0, 65535] { R2253 += 1, R2254 += 1 };
  s0 -> s2 [0, 65535] { R2254 += 1, R2189 += 1, R2190 += 1 };
  s0 -> s3 [70, 70] { R2254 += 1, R2190 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R2254 += 1, R2190 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R2254 += 1, R2190 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R2254 += 1, R2190 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 65535] { R2254 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R2254 += 1, R2190 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R2254 += 1, R2190 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R2254 += 1, R2190 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R2254 += 1, R2190 += 1, R155 += 1, R156 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2254 += 1, R2189 += 1, R2190 += 1 };
  s2 -> s3 [70, 70] { R2254 += 1, R2190 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R2254 += 1, R2190 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R2254 += 1, R2190 += 1, R155 += 1, R156 += 1 };
  s3 -> s3 [0, 65535] { R2254 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2254 += 1, R2190 += 1, R155 += 1, R156 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R2254 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2254 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R2256 += 1, R2192 += 1, R161 += 1, R162 += 1 };
  s0 -> s0 [0, 65535] { R2255 += 1, R2256 += 1 };
  s0 -> s2 [0, 65535] { R2256 += 1, R2191 += 1, R2192 += 1 };
  s0 -> s3 [70, 70] { R2256 += 1, R2192 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R2256 += 1, R2192 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R2256 += 1, R2192 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R2256 += 1, R2192 += 1, R161 += 1, R162 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2256 += 1 };
  s1 -> s3 [70, 70] { R2256 += 1, R2192 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R2256 += 1, R2192 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R2256 += 1, R2192 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R2256 += 1, R2192 += 1, R161 += 1, R162 += 1 };
  s2 -> s2 [0, 65535] { R2256 += 1, R2191 += 1, R2192 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R2256 += 1, R2192 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R2256 += 1, R2192 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R2256 += 1, R2192 += 1, R161 += 1, R162 += 1 };
  s3 -> s3 [0, 65535] { R2256 += 1, R2192 += 1, R161 += 1, R162 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R2256 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2256 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2256 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R2258 += 1, R2194 += 1, R167 += 1, R168 += 1 };
  s0 -> s0 [0, 65535] { R2257 += 1, R2258 += 1 };
  s0 -> s2 [0, 65535] { R2258 += 1, R2193 += 1, R2194 += 1 };
  s0 -> s3 [70, 70] { R2258 += 1, R2194 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R2258 += 1, R2194 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R2258 += 1, R2194 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R2258 += 1, R2194 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 65535] { R2258 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R2258 += 1, R2194 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R2258 += 1, R2194 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R2258 += 1, R2194 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R2258 += 1, R2194 += 1, R167 += 1, R168 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2258 += 1, R2193 += 1, R2194 += 1 };
  s2 -> s3 [70, 70] { R2258 += 1, R2194 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R2258 += 1, R2194 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R2258 += 1, R2194 += 1, R167 += 1, R168 += 1 };
  s3 -> s3 [0, 65535] { R2258 += 1, R2194 += 1, R167 += 1, R168 += 1 };
  s3 -> s6 [0, 65535] { R2258 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2258 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2258 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R2260 += 1, R2196 += 1, R175 += 1, R176 += 1 };
  s0 -> s2 [0, 69] { R2260 += 1, R2196 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s3 [0, 69] { R2260 += 1, R2196 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s4 [0, 65535] { R2260 += 1, R2195 += 1, R2196 += 1 };
  s0 -> s0 [0, 65535] { R2259 += 1, R2260 += 1 };
  s0 -> s5 [70, 70] { R2260 += 1, R2196 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s6 [70, 70] { R2260 += 1, R2196 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s7 [70, 70] { R2260 += 1, R2196 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s8 [70, 70] { R2260 += 1, R2196 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s9 [70, 70] { R2260 += 1, R2196 += 1, R175 += 1, R176 += 1 };
  s0 -> s10 [70, 70] { R2260 += 1, R2196 += 1, R175 += 1, R176 += 1 };
  s0 -> s1 [71, 65535] { R2260 += 1, R2196 += 1, R175 += 1, R176 += 1 };
  s0 -> s2 [71, 65535] { R2260 += 1, R2196 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s3 [71, 65535] { R2260 += 1, R2196 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s1 [0, 69] { R2260 += 1, R2196 += 1, R175 += 1, R176 += 1 };
  s1 -> s2 [0, 69] { R2260 += 1, R2196 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s3 [0, 69] { R2260 += 1, R2196 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s5 [70, 70] { R2260 += 1, R2196 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s6 [70, 70] { R2260 += 1, R2196 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s7 [70, 70] { R2260 += 1, R2196 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s8 [70, 70] { R2260 += 1, R2196 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s9 [70, 70] { R2260 += 1, R2196 += 1, R175 += 1, R176 += 1 };
  s1 -> s10 [70, 70] { R2260 += 1, R2196 += 1, R175 += 1, R176 += 1 };
  s1 -> s1 [71, 65535] { R2260 += 1, R2196 += 1, R175 += 1, R176 += 1 };
  s1 -> s2 [71, 65535] { R2260 += 1, R2196 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s3 [71, 65535] { R2260 += 1, R2196 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s2 [0, 69] { R2260 += 1, R2196 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s16 [0, 69] { R2260 += 1, R2196 += 1 };
  s2 -> s3 [0, 69] { R2260 += 1, R2196 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s5 [70, 70] { R2260 += 1, R2196 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s6 [70, 70] { R2260 += 1, R2196 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s7 [70, 70] { R2260 += 1, R2196 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s8 [70, 70] { R2260 += 1, R2196 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s12 [70, 70] { R2260 += 1, R2196 += 1 };
  s2 -> s18 [70, 70] { R2260 += 1, R2196 += 1 };
  s2 -> s2 [71, 65535] { R2260 += 1, R2196 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s16 [71, 65535] { R2260 += 1, R2196 += 1 };
  s2 -> s3 [71, 65535] { R2260 += 1, R2196 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s15 [0, 69] { R2260 += 1, R2196 += 1, R176 += 1 };
  s3 -> s16 [0, 69] { R2260 += 1, R2196 += 1 };
  s3 -> s3 [0, 69] { R2260 += 1, R2196 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s17 [70, 70] { R2260 += 1, R2196 += 1, R176 += 1 };
  s3 -> s11 [70, 70] { R2260 += 1, R2196 += 1, R176 += 1 };
  s3 -> s6 [70, 70] { R2260 += 1, R2196 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s8 [70, 70] { R2260 += 1, R2196 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s12 [70, 70] { R2260 += 1, R2196 += 1 };
  s3 -> s18 [70, 70] { R2260 += 1, R2196 += 1 };
  s3 -> s15 [71, 65535] { R2260 += 1, R2196 += 1, R176 += 1 };
  s3 -> s16 [71, 65535] { R2260 += 1, R2196 += 1 };
  s3 -> s3 [71, 65535] { R2260 += 1, R2196 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s1 [0, 69] { R2260 += 1, R2196 += 1, R175 += 1, R176 += 1 };
  s4 -> s2 [0, 69] { R2260 += 1, R2196 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s3 [0, 69] { R2260 += 1, R2196 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s4 [0, 65535] { R2260 += 1, R2195 += 1, R2196 += 1 };
  s4 -> s5 [70, 70] { R2260 += 1, R2196 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s6 [70, 70] { R2260 += 1, R2196 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s7 [70, 70] { R2260 += 1, R2196 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s8 [70, 70] { R2260 += 1, R2196 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s9 [70, 70] { R2260 += 1, R2196 += 1, R175 += 1, R176 += 1 };
  s4 -> s10 [70, 70] { R2260 += 1, R2196 += 1, R175 += 1, R176 += 1 };
  s4 -> s1 [71, 65535] { R2260 += 1, R2196 += 1, R175 += 1, R176 += 1 };
  s4 -> s2 [71, 65535] { R2260 += 1, R2196 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s3 [71, 65535] { R2260 += 1, R2196 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s7 -> s7 [0, 65535] { R2260 += 1, R2196 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s7 -> s8 [0, 65535] { R2260 += 1, R2196 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s7 -> s12 [0, 65535] { R2260 += 1, R2196 += 1 };
  s8 -> s11 [0, 65535] { R2260 += 1, R2196 += 1, R176 += 1 };
  s8 -> s8 [0, 65535] { R2260 += 1, R2196 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s8 -> s12 [0, 65535] { R2260 += 1, R2196 += 1 };
  s10 -> s7 [0, 65535] { R2260 += 1, R2196 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s10 -> s8 [0, 65535] { R2260 += 1, R2196 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s10 -> s10 [0, 65535] { R2260 += 1, R2196 += 1, R175 += 1, R176 += 1 };
  s11 -> s11 [0, 65535] { R2260 += 1, R2196 += 1, R176 += 1 };
  s11 -> s12 [0, 65535] { R2260 += 1, R2196 += 1 };
  s12 -> s13 [0, 65535];
  s12 -> s12 [0, 65535] { R2260 += 1, R2196 += 1 };
  s12 -> s14 [0, 65535] { R2260 += 1 };
  s13 -> s13 [0, 65535];
  s14 -> s13 [0, 65535];
  s14 -> s14 [0, 65535] { R2260 += 1 };
  s15 -> s15 [0, 69] { R2260 += 1, R2196 += 1, R176 += 1 };
  s15 -> s16 [0, 69] { R2260 += 1, R2196 += 1 };
  s15 -> s17 [70, 70] { R2260 += 1, R2196 += 1, R176 += 1 };
  s15 -> s11 [70, 70] { R2260 += 1, R2196 += 1, R176 += 1 };
  s15 -> s12 [70, 70] { R2260 += 1, R2196 += 1 };
  s15 -> s18 [70, 70] { R2260 += 1, R2196 += 1 };
  s15 -> s15 [71, 65535] { R2260 += 1, R2196 += 1, R176 += 1 };
  s15 -> s16 [71, 65535] { R2260 += 1, R2196 += 1 };
  s16 -> s16 [0, 69] { R2260 += 1, R2196 += 1 };
  s16 -> s13 [0, 65535];
  s16 -> s16 [0, 65535] { R2260 += 1 };
  s16 -> s12 [70, 70] { R2260 += 1, R2196 += 1 };
  s16 -> s18 [70, 70] { R2260 += 1, R2196 += 1 };
  s16 -> s16 [71, 65535] { R2260 += 1, R2196 += 1 };
  s18 -> s13 [0, 65535];
  s18 -> s18 [0, 65535] { R2260 += 1 };
  accepting s16, s12, s13, s14, s18;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R2262 += 1, R2198 += 1, R185 += 1, R186 += 1 };
  s0 -> s0 [0, 65535] { R2261 += 1, R2262 += 1 };
  s0 -> s2 [0, 65535] { R2262 += 1, R2197 += 1, R2198 += 1 };
  s0 -> s3 [70, 70] { R2262 += 1, R2198 += 1, R185 += 1, R186 += 1 };
  s0 -> s4 [70, 70] { R2262 += 1, R2198 += 1, R185 += 1, R186 += 1 };
  s0 -> s1 [71, 65535] { R2262 += 1, R2198 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 69] { R2262 += 1, R2198 += 1, R185 += 1, R186 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2262 += 1 };
  s1 -> s3 [70, 70] { R2262 += 1, R2198 += 1, R185 += 1, R186 += 1 };
  s1 -> s4 [70, 70] { R2262 += 1, R2198 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [71, 65535] { R2262 += 1, R2198 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [0, 69] { R2262 += 1, R2198 += 1, R185 += 1, R186 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2262 += 1, R2197 += 1, R2198 += 1 };
  s2 -> s3 [70, 70] { R2262 += 1, R2198 += 1, R185 += 1, R186 += 1 };
  s2 -> s4 [70, 70] { R2262 += 1, R2198 += 1, R185 += 1, R186 += 1 };
  s2 -> s1 [71, 65535] { R2262 += 1, R2198 += 1, R185 += 1, R186 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2262 += 1, R2198 += 1, R185 += 1, R186 += 1 };
  s3 -> s6 [0, 65535] { R2262 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2262 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2262 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R2264 += 1, R2200 += 1, R1467 += 1, R1468 += 1 };
  s0 -> s2 [0, 69] { R2264 += 1, R2200 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s0 -> s3 [0, 69] { R2264 += 1, R2200 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s0 -> s4 [0, 65535] { R2264 += 1, R2199 += 1, R2200 += 1 };
  s0 -> s0 [0, 65535] { R2263 += 1, R2264 += 1 };
  s0 -> s5 [70, 70] { R2264 += 1, R2200 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s0 -> s6 [70, 70] { R2264 += 1, R2200 += 1, R1467 += 1, R1468 += 1 };
  s0 -> s7 [70, 70] { R2264 += 1, R2200 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s0 -> s8 [70, 70] { R2264 += 1, R2200 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s0 -> s9 [70, 70] { R2264 += 1, R2200 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s0 -> s10 [70, 70] { R2264 += 1, R2200 += 1, R1467 += 1, R1468 += 1 };
  s0 -> s1 [71, 65535] { R2264 += 1, R2200 += 1, R1467 += 1, R1468 += 1 };
  s0 -> s2 [71, 65535] { R2264 += 1, R2200 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s0 -> s3 [71, 65535] { R2264 += 1, R2200 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s1 -> s1 [0, 69] { R2264 += 1, R2200 += 1, R1467 += 1, R1468 += 1 };
  s1 -> s2 [0, 69] { R2264 += 1, R2200 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s1 -> s3 [0, 69] { R2264 += 1, R2200 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s1 -> s5 [70, 70] { R2264 += 1, R2200 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s1 -> s6 [70, 70] { R2264 += 1, R2200 += 1, R1467 += 1, R1468 += 1 };
  s1 -> s7 [70, 70] { R2264 += 1, R2200 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s1 -> s8 [70, 70] { R2264 += 1, R2200 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s1 -> s9 [70, 70] { R2264 += 1, R2200 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s1 -> s10 [70, 70] { R2264 += 1, R2200 += 1, R1467 += 1, R1468 += 1 };
  s1 -> s1 [71, 65535] { R2264 += 1, R2200 += 1, R1467 += 1, R1468 += 1 };
  s1 -> s2 [71, 65535] { R2264 += 1, R2200 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s1 -> s3 [71, 65535] { R2264 += 1, R2200 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s2 -> s2 [0, 69] { R2264 += 1, R2200 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s2 -> s14 [0, 69] { R2264 += 1, R2200 += 1, R1468 += 1 };
  s2 -> s7 [70, 70] { R2264 += 1, R2200 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s2 -> s8 [70, 70] { R2264 += 1, R2200 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s2 -> s11 [70, 70] { R2264 += 1, R2200 += 1, R1468 += 1 };
  s2 -> s15 [70, 70] { R2264 += 1, R2200 += 1, R1468 += 1 };
  s2 -> s2 [71, 65535] { R2264 += 1, R2200 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s2 -> s14 [71, 65535] { R2264 += 1, R2200 += 1, R1468 += 1 };
  s3 -> s2 [0, 69] { R2264 += 1, R2200 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s3 -> s3 [0, 69] { R2264 += 1, R2200 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s3 -> s5 [70, 70] { R2264 += 1, R2200 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s3 -> s7 [70, 70] { R2264 += 1, R2200 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s3 -> s8 [70, 70] { R2264 += 1, R2200 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s3 -> s9 [70, 70] { R2264 += 1, R2200 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s3 -> s2 [71, 65535] { R2264 += 1, R2200 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s3 -> s3 [71, 65535] { R2264 += 1, R2200 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s4 -> s1 [0, 69] { R2264 += 1, R2200 += 1, R1467 += 1, R1468 += 1 };
  s4 -> s2 [0, 69] { R2264 += 1, R2200 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s4 -> s3 [0, 69] { R2264 += 1, R2200 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s4 -> s4 [0, 65535] { R2264 += 1, R2199 += 1, R2200 += 1 };
  s4 -> s5 [70, 70] { R2264 += 1, R2200 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s4 -> s6 [70, 70] { R2264 += 1, R2200 += 1, R1467 += 1, R1468 += 1 };
  s4 -> s7 [70, 70] { R2264 += 1, R2200 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s4 -> s8 [70, 70] { R2264 += 1, R2200 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s4 -> s9 [70, 70] { R2264 += 1, R2200 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s4 -> s10 [70, 70] { R2264 += 1, R2200 += 1, R1467 += 1, R1468 += 1 };
  s4 -> s1 [71, 65535] { R2264 += 1, R2200 += 1, R1467 += 1, R1468 += 1 };
  s4 -> s2 [71, 65535] { R2264 += 1, R2200 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s4 -> s3 [71, 65535] { R2264 += 1, R2200 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s5 -> s5 [0, 65535] { R2264 += 1, R2200 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s5 -> s8 [0, 65535] { R2264 += 1, R2200 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s8 -> s11 [0, 65535] { R2264 += 1, R2200 += 1, R1468 += 1 };
  s8 -> s8 [0, 65535] { R2264 += 1, R2200 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s10 -> s5 [0, 65535] { R2264 += 1, R2200 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s10 -> s8 [0, 65535] { R2264 += 1, R2200 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s10 -> s10 [0, 65535] { R2264 += 1, R2200 += 1, R1467 += 1, R1468 += 1 };
  s11 -> s12 [0, 65535] { R2264 += 1 };
  s11 -> s11 [0, 65535] { R2264 += 1, R2200 += 1, R1468 += 1 };
  s11 -> s13 [0, 65535];
  s12 -> s12 [0, 65535] { R2264 += 1 };
  s12 -> s13 [0, 65535];
  s13 -> s13 [0, 65535];
  s14 -> s14 [0, 69] { R2264 += 1, R2200 += 1, R1468 += 1 };
  s14 -> s13 [0, 65535];
  s14 -> s14 [0, 65535] { R2264 += 1 };
  s14 -> s11 [70, 70] { R2264 += 1, R2200 += 1, R1468 += 1 };
  s14 -> s15 [70, 70] { R2264 += 1, R2200 += 1, R1468 += 1 };
  s14 -> s14 [71, 65535] { R2264 += 1, R2200 += 1, R1468 += 1 };
  s15 -> s15 [0, 65535] { R2264 += 1 };
  s15 -> s13 [0, 65535];
  accepting s12, s13, s14, s15, s11;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s0 -> s2 [0, 69] { R2266 += 1, R2202 += 1, R2110 += 1, R2111 += 1, R2112 += 1 };
  s0 -> s3 [0, 69] { R2266 += 1, R2202 += 1, R2109 += 1, R2110 += 1 };
  s0 -> s4 [0, 65535] { R2266 += 1, R2201 += 1, R2202 += 1 };
  s0 -> s0 [0, 65535] { R2265 += 1, R2266 += 1 };
  s0 -> s5 [70, 70] { R2266 += 1, R2202 += 1, R2110 += 1, R2111 += 1, R2112 += 1 };
  s0 -> s6 [70, 70] { R2266 += 1, R2202 += 1, R2109 += 1, R2110 += 1 };
  s0 -> s7 [70, 70] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s0 -> s8 [70, 70] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s0 -> s9 [70, 70] { R2266 += 1, R2202 += 1, R2110 += 1, R2111 += 1, R2112 += 1 };
  s0 -> s10 [70, 70] { R2266 += 1, R2202 += 1, R2109 += 1, R2110 += 1 };
  s0 -> s1 [71, 74] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s0 -> s2 [71, 65535] { R2266 += 1, R2202 += 1, R2110 += 1, R2111 += 1, R2112 += 1 };
  s0 -> s3 [71, 65535] { R2266 += 1, R2202 += 1, R2109 += 1, R2110 += 1 };
  s0 -> s11 [75, 75] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s0 -> s1 [79, 65535] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s1 -> s1 [0, 69] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s1 -> s7 [70, 70] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s1 -> s8 [70, 70] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s1 -> s1 [71, 74] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s1 -> s11 [75, 75] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s1 -> s1 [79, 65535] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s2 -> s1 [0, 69] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s2 -> s2 [0, 69] { R2266 += 1, R2202 += 1, R2110 += 1, R2111 += 1, R2112 += 1 };
  s2 -> s5 [70, 70] { R2266 += 1, R2202 += 1, R2110 += 1, R2111 += 1, R2112 += 1 };
  s2 -> s7 [70, 70] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s2 -> s8 [70, 70] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s2 -> s9 [70, 70] { R2266 += 1, R2202 += 1, R2110 += 1, R2111 += 1, R2112 += 1 };
  s2 -> s1 [71, 74] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s2 -> s2 [71, 65535] { R2266 += 1, R2202 += 1, R2110 += 1, R2111 += 1, R2112 += 1 };
  s2 -> s11 [75, 75] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s2 -> s1 [79, 65535] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s3 -> s1 [0, 69] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s3 -> s2 [0, 69] { R2266 += 1, R2202 += 1, R2110 += 1, R2111 += 1, R2112 += 1 };
  s3 -> s3 [0, 69] { R2266 += 1, R2202 += 1, R2109 += 1, R2110 += 1 };
  s3 -> s5 [70, 70] { R2266 += 1, R2202 += 1, R2110 += 1, R2111 += 1, R2112 += 1 };
  s3 -> s6 [70, 70] { R2266 += 1, R2202 += 1, R2109 += 1, R2110 += 1 };
  s3 -> s7 [70, 70] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s3 -> s8 [70, 70] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s3 -> s9 [70, 70] { R2266 += 1, R2202 += 1, R2110 += 1, R2111 += 1, R2112 += 1 };
  s3 -> s10 [70, 70] { R2266 += 1, R2202 += 1, R2109 += 1, R2110 += 1 };
  s3 -> s1 [71, 74] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s3 -> s2 [71, 65535] { R2266 += 1, R2202 += 1, R2110 += 1, R2111 += 1, R2112 += 1 };
  s3 -> s3 [71, 65535] { R2266 += 1, R2202 += 1, R2109 += 1, R2110 += 1 };
  s3 -> s11 [75, 75] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s3 -> s1 [79, 65535] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s4 -> s1 [0, 69] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s4 -> s2 [0, 69] { R2266 += 1, R2202 += 1, R2110 += 1, R2111 += 1, R2112 += 1 };
  s4 -> s3 [0, 69] { R2266 += 1, R2202 += 1, R2109 += 1, R2110 += 1 };
  s4 -> s4 [0, 65535] { R2266 += 1, R2201 += 1, R2202 += 1 };
  s4 -> s5 [70, 70] { R2266 += 1, R2202 += 1, R2110 += 1, R2111 += 1, R2112 += 1 };
  s4 -> s6 [70, 70] { R2266 += 1, R2202 += 1, R2109 += 1, R2110 += 1 };
  s4 -> s7 [70, 70] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s4 -> s8 [70, 70] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s4 -> s9 [70, 70] { R2266 += 1, R2202 += 1, R2110 += 1, R2111 += 1, R2112 += 1 };
  s4 -> s10 [70, 70] { R2266 += 1, R2202 += 1, R2109 += 1, R2110 += 1 };
  s4 -> s1 [71, 74] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s4 -> s2 [71, 65535] { R2266 += 1, R2202 += 1, R2110 += 1, R2111 += 1, R2112 += 1 };
  s4 -> s3 [71, 65535] { R2266 += 1, R2202 += 1, R2109 += 1, R2110 += 1 };
  s4 -> s11 [75, 75] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s4 -> s1 [79, 65535] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s6 -> s8 [0, 74] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s6 -> s6 [0, 65535] { R2266 += 1, R2202 += 1, R2109 += 1, R2110 += 1 };
  s6 -> s9 [0, 65535] { R2266 += 1, R2202 += 1, R2110 += 1, R2111 += 1, R2112 += 1 };
  s6 -> s14 [75, 75] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s6 -> s8 [79, 65535] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s8 -> s8 [0, 74] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s8 -> s14 [75, 75] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s8 -> s8 [79, 65535] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s9 -> s8 [0, 74] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s9 -> s9 [0, 65535] { R2266 += 1, R2202 += 1, R2110 += 1, R2111 += 1, R2112 += 1 };
  s9 -> s14 [75, 75] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s9 -> s8 [79, 65535] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s11 -> s11 [0, 69] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s11 [0, 65535] { R2266 += 1 };
  s11 -> s13 [70, 70] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s11 -> s14 [70, 70] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s11 -> s11 [71, 75] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s11 -> s11 [79, 65535] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R2266 += 1 };
  s13 -> s12 [0, 65535];
  s14 -> s14 [0, 75] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R2266 += 1 };
  s14 -> s14 [79, 65535] { R2266 += 1, R2202 += 1, R2110 += 1, R2112 += 1 };
  accepting s11, s12, s13, s14;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R2146 && R3 = R2266 && R25 - R2266 = -1 && R26 = R2266 && R27 - R2266 = -1 && R28 = R2266 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R2114 + -1*R2110 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R2114 + -1*R2110 - R130 = 0 && R129 + R2113 + R2109 = 0 && R131 + R2115 + R2111 = 0 && R132 + R2116 + R2112 = 0 && R2145 = 0 && R2177 = 0 && R2178 = 0 && R2187 = 0 && R2188 = 0 && R2195 = 0 && R2196 = 0 && R2199 = 0 && R2200 = 0 && R2201 = 0 && R2202 = 0 && R2203 = 0 && R2204 = R2266 && R2205 = 0 && R2206 = R2266 && R2207 = 0 && R2208 = R2266 && R2209 = 0 && R2210 = R2266 && R2211 = 0 && R2212 = R2266 && R2213 = 0 && R2214 = R2266 && R2215 = 0 && R2216 = R2266 && R2217 = 0 && R2218 = R2266 && R2219 = 0 && R2220 = R2266 && R2221 = 0 && R2222 = R2266 && R2223 = 0 && R2224 = R2266 && R2225 = 0 && R2226 = R2266 && R2227 = 0 && R2228 = R2266 && R2229 = 0 && R2230 = R2266 && R2231 = 0 && R2232 = R2266 && R2233 = 0 && R2234 = R2266 && R2235 = 0 && R2236 = R2266 && R2237 = 0 && R2238 = R2266 && R2239 = 0 && R2240 = R2266 && R2241 = 0 && R2242 = R2266 && R2243 = 0 && R2244 = R2266 && R2245 = 0 && R2246 = R2266 && R2247 = 0 && R2248 = R2266 && R2249 = 0 && R2250 = R2266 && R2251 = 0 && R2252 = R2266 && R2253 = 0 && R2254 = R2266 && R2255 = 0 && R2256 = R2266 && R2257 = 0 && R2258 = R2266 && R2259 = 0 && R2260 = R2266 && R2261 = 0 && R2262 = R2266 && R2263 = 0 && R2264 = R2266 && R2265 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R2114 + -1*R2110 - R130 < 1 && -1 < R2146 && 0 < R2266 && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R2114 + -1*R2110 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R191 + R187 = 0 && R114 + R192 + R188 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R2114 + -1*R2110 - R130 = 0 || R130 + R2114 + R2110 < 1) && (R81 + R158 + R155 = 0 || R130 + R2114 + R2110 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R2114 + -1*R2110 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R2114 + R2110 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R2114 + -1*R2110 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R2114 + R2110 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R2114 + -1*R2110 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R2114 + R2110 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 != 0 || R112 + R190 + R186 + -1*R2114 + -1*R2110 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R2114 + R2110 = 0)) && (R113 + R191 + R187 != 0 || R83 + R160 + R157 + -1*R192 + -1*R188 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R1472 + R1467 != 0 || R120 + R1473 + R1468 + -1*R2114 + -1*R2110 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R2114 + R2110 = 0)) && (R2117 != 0 || R2118 = R2146 || (R22 = 0 && R2146 = 0)) && (R2119 != 0 || R2120 = R2146 || (R22 = 0 && R2146 = 0)) && (R2121 != 0 || R2122 = R2146 || (R22 = 0 && R2146 = 0)) && (R2123 != 0 || R2124 = R2146 || (R22 = 0 && R2146 = 0)) && (R2125 != 0 || R2126 = R2146 || (R22 = 0 && R2146 = 0)) && (R2127 != 0 || R2128 = R2146 || (R22 = 0 && R2146 = 0)) && (R2129 != 0 || R2130 = R2146 || (R22 = 0 && R2146 = 0)) && (R2131 != 0 || R2132 = R2146 || (R22 = 0 && R2146 = 0)) && (R2133 != 0 || R2134 = R2146 || (R22 = 0 && R2146 = 0)) && (R2135 != 0 || R2136 = R2146 || (R22 = 0 && R2146 = 0)) && (R2137 != 0 || R2138 = R2146 || (R22 = 0 && R2146 = 0)) && (R2139 != 0 || R2140 = R2146 || (R22 = 0 && R2146 = 0)) && (R2141 != 0 || R2142 = R2146 || (R22 = 0 && R2146 = 0)) && (R2143 != 0 || R2144 = R2146 || (R22 = 0 && R2146 = 0)) && (R23 = 0 || (R2175 = 0 && R2176 = 0)) && (R23 = 0 || (R2179 = 0 && R2180 = 0)) && (R23 = 0 || (R2181 = 0 && R2182 = 0)) && (R23 = 0 || (R2183 = 0 && R2184 = 0)) && (R23 = 0 || (R2185 = 0 && R2186 = 0)) && (R23 = 0 || (R2189 = 0 && R2190 = 0)) && (R23 = 0 || (R2191 = 0 && R2192 = 0)) && (R23 = 0 || (R2193 = 0 && R2194 = 0)) && (R23 = 0 || (R2197 = 0 && R2198 = 0)) && (R24 = 0 || (R2147 = 0 && R2148 = 0)) && (R24 = 0 || (R2149 = 0 && R2150 = 0)) && (R24 = 0 || (R2151 = 0 && R2152 = 0)) && (R24 = 0 || (R2153 = 0 && R2154 = 0)) && (R24 = 0 || (R2155 = 0 && R2156 = 0)) && (R24 = 0 || (R2157 = 0 && R2158 = 0)) && (R24 = 0 || (R2159 = 0 && R2160 = 0)) && (R24 = 0 || (R2161 = 0 && R2162 = 0)) && (R24 = 0 || (R2163 = 0 && R2164 = 0)) && (R24 = 0 || (R2165 = 0 && R2166 = 0)) && (R24 = 0 || (R2167 = 0 && R2168 = 0)) && (R24 = 0 || (R2169 = 0 && R2170 = 0)) && (R24 = 0 || (R2171 = 0 && R2172 = 0)) && (R24 = 0 || (R2173 = 0 && R2174 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R2114 + R2110 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R2114 + R2110 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R2114 + R2110 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R189 + R185 = 0 || (R83 + R160 + R157 = 0 && R130 + R2114 + R2110 = 0)) && (R113 + R191 + R187 = 0 || R83 + R160 + R157 < 1) && (R119 + R1472 + R1467 = 0 || (R83 + R160 + R157 = 0 && R130 + R2114 + R2110 = 0)) && (R123 + R1476 + R1471 = 0 || (R121 + R1474 + R1469 = 0 && R122 + R1475 + R1470 = 0)) && (R2117 = 0 || (R22 = 0 && R2146 = 0)) && (R2119 = 0 || (R22 = 0 && R2146 = 0)) && (R2121 = 0 || (R22 = 0 && R2146 = 0)) && (R2123 = 0 || (R22 = 0 && R2146 = 0)) && (R2125 = 0 || (R22 = 0 && R2146 = 0)) && (R2127 = 0 || (R22 = 0 && R2146 = 0)) && (R2129 = 0 || (R22 = 0 && R2146 = 0)) && (R2131 = 0 || (R22 = 0 && R2146 = 0)) && (R2133 = 0 || (R22 = 0 && R2146 = 0)) && (R2135 = 0 || (R22 = 0 && R2146 = 0)) && (R2137 = 0 || (R22 = 0 && R2146 = 0)) && (R2139 = 0 || (R22 = 0 && R2146 = 0)) && (R2141 = 0 || (R22 = 0 && R2146 = 0)) && (R2143 = 0 || (R22 = 0 && R2146 = 0));
// End of Parikh automata intersection problem
