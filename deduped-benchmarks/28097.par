// Parikh automata intersection problem, generated by OSTRICH+
counter int R10077, R10078, R10079, R10080, R10081, R10082, R10083, R10084, R10085, R10086, R10087, R10088, R10089, R10090, R10091, R10092, R10093, R10094, R10095, R10096, R10097, R10098, R10099, R101, R10100, R10101, R10102, R10103, R10104, R10105, R10106, R10107, R10108, R10109, R10110, R10111, R10112, R10113, R10114, R10115, R10116, R10117, R10118, R10119, R10120, R10121, R10122, R10123, R10124, R10125, R10126, R10127, R10128, R10129, R10130, R10131, R10132, R10133, R10134, R10135, R10136, R10137, R10138, R10139, R10140, R10141, R10142, R10143, R10144, R10145, R10146, R10147, R10148, R10149, R10150, R10151, R10152, R10153, R10154, R10155, R10156, R10157, R10158, R10159, R10160, R10161, R10162, R10163, R10164, R10165, R10166, R10167, R10168, R10169, R10170, R10171, R10172, R10173, R10174, R10175, R10176, R10177, R10178, R10179, R10180, R10181, R10182, R10183, R10184, R10185, R10186, R10187, R10188, R10189, R10190, R10191, R10192, R10193, R10194, R10195, R10196, R10197, R10198, R10199, R102, R10200, R10201, R10202, R10203, R10204, R10205, R10206, R10207, R10208, R10209, R10210, R10211, R10212, R10213, R10214, R10215, R10216, R10217, R10218, R10219, R10220, R10221, R10222, R10223, R10224, R10225, R10226, R10227, R10228, R10229, R10230, R10231, R10232, R10233, R10234, R103, R104, R105, R111, R112, R113, R114, R119, R12, R120, R121, R122, R123, R129, R130, R131, R132, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R15, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R2, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R4, R5, R63, R65, R6563, R6564, R6565, R6566, R6567, R6568, R6569, R6570, R67, R68, R69, R73, R74, R77, R78, R81, R82, R83, R87, R88, R89, R9119, R9120, R9121, R9122, R9123, R9124, R9125, R9126, R9127, R9128, R93, R94, R95, R96;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [70, 70];
  s0 -> s0 [71, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [70, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R15 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 69];
  s0 -> s0 [0, 65535] { R16 += 1 };
  s0 -> s2 [70, 70];
  s0 -> s1 [71, 65535];
  s1 -> s1 [0, 69];
  s1 -> s2 [70, 70];
  s1 -> s1 [71, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R26 += 1 };
  s0 -> s0 [0, 65535] { R25 += 1, R26 += 1 };
  s0 -> s2 [9, 13] { R26 += 1 };
  s0 -> s1 [14, 31] { R26 += 1 };
  s0 -> s2 [32, 32] { R26 += 1 };
  s0 -> s1 [33, 65535] { R26 += 1 };
  s1 -> s1 [0, 65535] { R26 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R26 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R27 += 1, R28 += 1 };
  s1 -> s1 [0, 65535] { R28 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R30 += 1 };
  s0 -> s0 [0, 65535] { R29 += 1, R30 += 1 };
  s0 -> s2 [9, 13] { R30 += 1 };
  s0 -> s1 [14, 31] { R30 += 1 };
  s0 -> s2 [32, 32] { R30 += 1 };
  s0 -> s1 [33, 65535] { R30 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R30 += 1 };
  s2 -> s1 [0, 65535] { R30 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R32 += 1, R5 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R10116 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R10115 += 1, R10116 += 1 };
  s1 -> s1 [0, 65535] { R10116 += 1, R24 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 69] { R10118 += 1 };
  s0 -> s0 [0, 65535] { R10117 += 1, R10118 += 1 };
  s0 -> s2 [70, 70] { R10118 += 1 };
  s0 -> s3 [70, 70] { R10118 += 1 };
  s0 -> s1 [76, 65535] { R10118 += 1 };
  s1 -> s1 [0, 69] { R10118 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10118 += 1 };
  s1 -> s3 [70, 70] { R10118 += 1 };
  s1 -> s1 [76, 65535] { R10118 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 70] { R10118 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [76, 65535] { R10118 += 1 };
  accepting s0, s1, s2, s3;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 69] { R10120 += 1, R63 += 1 };
  s0 -> s0 [0, 65535] { R10119 += 1, R10120 += 1 };
  s0 -> s2 [70, 70] { R10120 += 1, R63 += 1 };
  s0 -> s3 [70, 70] { R10120 += 1, R63 += 1 };
  s0 -> s1 [71, 65535] { R10120 += 1, R63 += 1 };
  s1 -> s1 [0, 69] { R10120 += 1, R63 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10120 += 1, R63 += 1 };
  s1 -> s3 [70, 70] { R10120 += 1, R63 += 1 };
  s1 -> s1 [71, 65535] { R10120 += 1, R63 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R10120 += 1, R63 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 69] { R10122 += 1, R65 += 1 };
  s0 -> s0 [0, 65535] { R10121 += 1, R10122 += 1 };
  s0 -> s2 [70, 70] { R10122 += 1, R65 += 1 };
  s0 -> s3 [70, 70] { R10122 += 1, R65 += 1 };
  s0 -> s1 [71, 65535] { R10122 += 1, R65 += 1 };
  s1 -> s1 [0, 69] { R10122 += 1, R65 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10122 += 1, R65 += 1 };
  s1 -> s3 [70, 70] { R10122 += 1, R65 += 1 };
  s1 -> s1 [71, 65535] { R10122 += 1, R65 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R10122 += 1, R65 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 69] { R10124 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R10123 += 1, R10124 += 1 };
  s0 -> s2 [70, 70] { R10124 += 1, R67 += 1, R68 += 1 };
  s0 -> s3 [70, 70] { R10124 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [71, 65535] { R10124 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 69] { R10124 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10124 += 1, R67 += 1, R68 += 1 };
  s1 -> s3 [70, 70] { R10124 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [71, 65535] { R10124 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R10124 += 1, R67 += 1, R68 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 69] { R10126 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R10125 += 1, R10126 += 1 };
  s0 -> s2 [70, 70] { R10126 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [70, 70] { R10126 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [71, 65535] { R10126 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 69] { R10126 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10126 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [70, 70] { R10126 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [71, 65535] { R10126 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R10126 += 1, R73 += 1, R74 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 69] { R10128 += 1, R77 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R10127 += 1, R10128 += 1 };
  s0 -> s2 [70, 70] { R10128 += 1, R77 += 1, R78 += 1 };
  s0 -> s3 [70, 70] { R10128 += 1, R77 += 1, R78 += 1 };
  s0 -> s1 [71, 65535] { R10128 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 69] { R10128 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10128 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [70, 70] { R10128 += 1, R77 += 1, R78 += 1 };
  s1 -> s1 [71, 65535] { R10128 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535] { R10128 += 1, R77 += 1, R78 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 69] { R10130 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R10129 += 1, R10130 += 1 };
  s0 -> s2 [70, 70] { R10130 += 1, R81 += 1, R82 += 1 };
  s0 -> s3 [70, 70] { R10130 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [71, 65535] { R10130 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R10130 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10130 += 1, R81 += 1, R82 += 1 };
  s1 -> s3 [70, 70] { R10130 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [71, 65535] { R10130 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R10130 += 1, R81 += 1, R82 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 69] { R10132 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R10131 += 1, R10132 += 1 };
  s0 -> s2 [70, 70] { R10132 += 1, R87 += 1, R88 += 1 };
  s0 -> s3 [70, 70] { R10132 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [71, 65535] { R10132 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 69] { R10132 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10132 += 1, R87 += 1, R88 += 1 };
  s1 -> s3 [70, 70] { R10132 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [71, 65535] { R10132 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R10132 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 69] { R10134 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R10133 += 1, R10134 += 1 };
  s0 -> s2 [70, 70] { R10134 += 1, R93 += 1, R94 += 1 };
  s0 -> s3 [70, 70] { R10134 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [71, 65535] { R10134 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 69] { R10134 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10134 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [70, 70] { R10134 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [71, 65535] { R10134 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R10134 += 1, R93 += 1, R94 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R10136 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R10135 += 1, R10136 += 1 };
  s0 -> s2 [70, 70] { R10136 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [70, 70] { R10136 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [71, 65535] { R10136 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 69] { R10136 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10136 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [70, 70] { R10136 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [71, 65535] { R10136 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535] { R10136 += 1, R101 += 1, R102 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 69] { R10138 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R10137 += 1, R10138 += 1 };
  s0 -> s2 [70, 70] { R10138 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [70, 70] { R10138 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [71, 65535] { R10138 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 69] { R10138 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10138 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [70, 70] { R10138 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [71, 65535] { R10138 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535] { R10138 += 1, R111 += 1, R112 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R10140 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R10139 += 1, R10140 += 1 };
  s0 -> s2 [70, 70] { R10140 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [70, 70] { R10140 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [71, 65535] { R10140 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 69] { R10140 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10140 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [70, 70] { R10140 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [71, 65535] { R10140 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R10140 += 1, R119 += 1, R120 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R10142 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R10141 += 1, R10142 += 1 };
  s0 -> s2 [70, 70] { R10142 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [70, 70] { R10142 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [71, 65535] { R10142 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 69] { R10142 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [70, 70] { R10142 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [70, 70] { R10142 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [71, 65535] { R10142 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535] { R10142 += 1, R129 += 1, R130 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R10172 += 1 };
  s0 -> s0 [0, 65535] { R10171 += 1, R10172 += 1 };
  s0 -> s2 [70, 70] { R10172 += 1 };
  s0 -> s1 [71, 65535] { R10172 += 1 };
  s1 -> s1 [0, 69] { R10172 += 1 };
  s1 -> s2 [70, 70] { R10172 += 1 };
  s1 -> s1 [71, 65535] { R10172 += 1 };
  s2 -> s2 [0, 65535] { R10172 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  accepting s2, s3;
};
automaton value2_23 {
  init s0;
  s0 -> s0 [0, 65535] { R10173 += 1, R10174 += 1 };
  s0 -> s1 [0, 65535] { R10174 += 1, R2 += 1 };
  s1 -> s1 [0, 65535] { R10174 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R10176 += 1 };
  s0 -> s2 [0, 65535] { R10176 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R10175 += 1, R10176 += 1 };
  s0 -> s3 [70, 70] { R10176 += 1 };
  s0 -> s1 [71, 65535] { R10176 += 1 };
  s1 -> s1 [0, 69] { R10176 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [70, 70] { R10176 += 1 };
  s1 -> s1 [71, 65535] { R10176 += 1 };
  s2 -> s1 [0, 69] { R10176 += 1 };
  s2 -> s2 [0, 65535] { R10176 += 1, R12 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [70, 70] { R10176 += 1 };
  s2 -> s1 [71, 65535] { R10176 += 1 };
  s3 -> s3 [0, 65535] { R10176 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R10178 += 1, R10086 += 1 };
  s0 -> s0 [0, 65535] { R10177 += 1, R10178 += 1 };
  s0 -> s2 [0, 65535] { R10178 += 1, R10085 += 1, R10086 += 1 };
  s0 -> s1 [71, 65535] { R10178 += 1, R10086 += 1 };
  s1 -> s1 [0, 69] { R10178 += 1, R10086 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R10178 += 1 };
  s1 -> s1 [71, 65535] { R10178 += 1, R10086 += 1 };
  s2 -> s1 [0, 69] { R10178 += 1, R10086 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R10178 += 1, R10085 += 1, R10086 += 1 };
  s2 -> s1 [71, 65535] { R10178 += 1, R10086 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R10180 += 1, R10087 += 1, R10088 += 1 };
  s0 -> s0 [0, 65535] { R10179 += 1, R10180 += 1 };
  s0 -> s2 [0, 65535] { R10180 += 1, R10088 += 1, R22 += 1 };
  s1 -> s1 [0, 65535] { R10180 += 1, R10087 += 1, R10088 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R10180 += 1, R10088 += 1, R22 += 1 };
  s2 -> s3 [0, 65535] { R10180 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R10180 += 1, R10088 += 1, R22 += 1 };
  s3 -> s3 [0, 65535] { R10180 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 70] { R10182 += 1, R10090 += 1 };
  s0 -> s2 [0, 65535] { R10182 += 1, R10089 += 1, R10090 += 1 };
  s0 -> s0 [0, 65535] { R10181 += 1, R10182 += 1 };
  s0 -> s1 [75, 65535] { R10182 += 1, R10090 += 1 };
  s1 -> s1 [0, 70] { R10182 += 1, R10090 += 1 };
  s1 -> s1 [0, 65535] { R10182 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [75, 65535] { R10182 += 1, R10090 += 1 };
  s2 -> s1 [0, 70] { R10182 += 1, R10090 += 1 };
  s2 -> s2 [0, 65535] { R10182 += 1, R10089 += 1, R10090 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [75, 65535] { R10182 += 1, R10090 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_28 {
  init s0;
  s0 -> s0 [0, 65535] { R10183 += 1, R10184 += 1 };
  s0 -> s1 [0, 65535] { R10184 += 1, R10092 += 1, R138 += 1 };
  s0 -> s2 [0, 65535] { R10184 += 1, R10091 += 1, R10092 += 1 };
  s1 -> s4 [0, 65535] { R10184 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R10184 += 1, R10092 += 1, R138 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R10184 += 1, R10092 += 1, R138 += 1 };
  s2 -> s2 [0, 65535] { R10184 += 1, R10091 += 1, R10092 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R10184 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 74] { R10186 += 1, R10094 += 1 };
  s0 -> s2 [0, 65535] { R10186 += 1, R10094 += 1, R140 += 1 };
  s0 -> s3 [0, 65535] { R10186 += 1, R10093 += 1, R10094 += 1 };
  s0 -> s0 [0, 65535] { R10185 += 1, R10186 += 1 };
  s0 -> s1 [76, 65535] { R10186 += 1, R10094 += 1 };
  s1 -> s1 [0, 74] { R10186 += 1, R10094 += 1 };
  s1 -> s1 [0, 65535] { R10186 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [76, 65535] { R10186 += 1, R10094 += 1 };
  s2 -> s1 [0, 74] { R10186 += 1, R10094 += 1 };
  s2 -> s2 [0, 65535] { R10186 += 1, R10094 += 1, R140 += 1 };
  s2 -> s5 [0, 65535] { R10186 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [76, 65535] { R10186 += 1, R10094 += 1 };
  s3 -> s1 [0, 74] { R10186 += 1, R10094 += 1 };
  s3 -> s2 [0, 65535] { R10186 += 1, R10094 += 1, R140 += 1 };
  s3 -> s3 [0, 65535] { R10186 += 1, R10093 += 1, R10094 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [76, 65535] { R10186 += 1, R10094 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R10186 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 65535] { R10188 += 1, R10096 += 1, R145 += 1, R146 += 1 };
  s0 -> s2 [0, 65535] { R10188 += 1, R10096 += 1, R144 += 1, R145 += 1 };
  s0 -> s0 [0, 65535] { R10187 += 1, R10188 += 1 };
  s0 -> s3 [0, 65535] { R10188 += 1, R10095 += 1, R10096 += 1 };
  s1 -> s6 [0, 65535] { R10188 += 1, R10096 += 1 };
  s1 -> s1 [0, 65535] { R10188 += 1, R10096 += 1, R145 += 1, R146 += 1 };
  s1 -> s5 [0, 65535] { R10188 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R10188 += 1, R10096 += 1, R145 += 1, R146 += 1 };
  s2 -> s2 [0, 65535] { R10188 += 1, R10096 += 1, R144 += 1, R145 += 1 };
  s2 -> s5 [0, 65535] { R10188 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R10188 += 1, R10096 += 1, R145 += 1, R146 += 1 };
  s3 -> s2 [0, 65535] { R10188 += 1, R10096 += 1, R144 += 1, R145 += 1 };
  s3 -> s3 [0, 65535] { R10188 += 1, R10095 += 1, R10096 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R10188 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R10188 += 1, R10096 += 1 };
  s6 -> s5 [0, 65535] { R10188 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 74] { R10190 += 1, R10098 += 1, R150 += 1 };
  s0 -> s2 [0, 65535] { R10190 += 1, R10097 += 1, R10098 += 1 };
  s0 -> s0 [0, 65535] { R10189 += 1, R10190 += 1 };
  s0 -> s3 [0, 65535] { R10190 += 1, R10098 += 1, R149 += 1, R150 += 1 };
  s0 -> s4 [75, 75] { R10190 += 1, R10098 += 1, R150 += 1 };
  s0 -> s5 [75, 75] { R10190 += 1, R10098 += 1, R150 += 1 };
  s0 -> s1 [79, 65535] { R10190 += 1, R10098 += 1, R150 += 1 };
  s1 -> s1 [0, 74] { R10190 += 1, R10098 += 1, R150 += 1 };
  s1 -> s1 [0, 65535] { R10190 += 1, R10098 += 1 };
  s1 -> s6 [0, 65535] { R10190 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [75, 75] { R10190 += 1, R10098 += 1, R150 += 1 };
  s1 -> s5 [75, 75] { R10190 += 1, R10098 += 1, R150 += 1 };
  s1 -> s1 [79, 65535] { R10190 += 1, R10098 += 1, R150 += 1 };
  s2 -> s1 [0, 74] { R10190 += 1, R10098 += 1, R150 += 1 };
  s2 -> s2 [0, 65535] { R10190 += 1, R10097 += 1, R10098 += 1 };
  s2 -> s3 [0, 65535] { R10190 += 1, R10098 += 1, R149 += 1, R150 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [75, 75] { R10190 += 1, R10098 += 1, R150 += 1 };
  s2 -> s5 [75, 75] { R10190 += 1, R10098 += 1, R150 += 1 };
  s2 -> s1 [79, 65535] { R10190 += 1, R10098 += 1, R150 += 1 };
  s3 -> s1 [0, 74] { R10190 += 1, R10098 += 1, R150 += 1 };
  s3 -> s6 [0, 65535] { R10190 += 1 };
  s3 -> s3 [0, 65535] { R10190 += 1, R10098 += 1, R149 += 1, R150 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [75, 75] { R10190 += 1, R10098 += 1, R150 += 1 };
  s3 -> s5 [75, 75] { R10190 += 1, R10098 += 1, R150 += 1 };
  s3 -> s1 [79, 65535] { R10190 += 1, R10098 += 1, R150 += 1 };
  s4 -> s4 [0, 75] { R10190 += 1, R10098 += 1, R150 += 1 };
  s4 -> s4 [0, 65535] { R10190 += 1, R10098 += 1 };
  s4 -> s6 [0, 65535] { R10190 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [79, 65535] { R10190 += 1, R10098 += 1, R150 += 1 };
  s5 -> s5 [0, 65535] { R10190 += 1, R10098 += 1 };
  s5 -> s6 [0, 65535] { R10190 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R10190 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R10192 += 1, R10099 += 1, R10100 += 1 };
  s0 -> s2 [0, 65535] { R10192 += 1, R10100 += 1 };
  s0 -> s3 [0, 65535] { R10192 += 1, R10100 += 1, R154 += 1 };
  s0 -> s0 [0, 65535] { R10191 += 1, R10192 += 1 };
  s1 -> s1 [0, 65535] { R10192 += 1, R10099 += 1, R10100 += 1 };
  s1 -> s2 [0, 65535] { R10192 += 1, R10100 += 1 };
  s1 -> s3 [0, 65535] { R10192 += 1, R10100 += 1, R154 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s4 [0, 65535] { R10192 += 1 };
  s2 -> s2 [0, 65535] { R10192 += 1, R10100 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R10192 += 1 };
  s3 -> s2 [0, 65535] { R10192 += 1, R10100 += 1 };
  s3 -> s3 [0, 65535] { R10192 += 1, R10100 += 1, R154 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10192 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R10194 += 1, R10102 += 1, R159 += 1, R160 += 1 };
  s0 -> s2 [0, 65535] { R10194 += 1, R10101 += 1, R10102 += 1 };
  s0 -> s3 [0, 65535] { R10194 += 1, R10102 += 1, R158 += 1, R159 += 1 };
  s0 -> s0 [0, 65535] { R10193 += 1, R10194 += 1 };
  s1 -> s1 [0, 65535] { R10194 += 1, R10102 += 1, R159 += 1, R160 += 1 };
  s1 -> s4 [0, 65535] { R10194 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R10194 += 1, R10102 += 1 };
  s2 -> s1 [0, 65535] { R10194 += 1, R10102 += 1, R159 += 1, R160 += 1 };
  s2 -> s2 [0, 65535] { R10194 += 1, R10101 += 1, R10102 += 1 };
  s2 -> s3 [0, 65535] { R10194 += 1, R10102 += 1, R158 += 1, R159 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R10194 += 1, R10102 += 1, R159 += 1, R160 += 1 };
  s3 -> s4 [0, 65535] { R10194 += 1 };
  s3 -> s3 [0, 65535] { R10194 += 1, R10102 += 1, R158 += 1, R159 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10194 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R10194 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10194 += 1, R10102 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 74] { R10196 += 1, R10104 += 1, R165 += 1 };
  s0 -> s2 [0, 65535] { R10196 += 1, R10104 += 1, R165 += 1, R166 += 1 };
  s0 -> s0 [0, 65535] { R10195 += 1, R10196 += 1 };
  s0 -> s3 [0, 65535] { R10196 += 1, R10103 += 1, R10104 += 1 };
  s0 -> s4 [0, 65535] { R10196 += 1, R10104 += 1, R164 += 1, R165 += 1 };
  s0 -> s1 [76, 65535] { R10196 += 1, R10104 += 1, R165 += 1 };
  s1 -> s1 [0, 74] { R10196 += 1, R10104 += 1, R165 += 1 };
  s1 -> s5 [0, 65535] { R10196 += 1 };
  s1 -> s1 [0, 65535] { R10196 += 1, R10104 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [76, 65535] { R10196 += 1, R10104 += 1, R165 += 1 };
  s2 -> s1 [0, 74] { R10196 += 1, R10104 += 1, R165 += 1 };
  s2 -> s7 [0, 65535] { R10196 += 1, R10104 += 1 };
  s2 -> s5 [0, 65535] { R10196 += 1 };
  s2 -> s2 [0, 65535] { R10196 += 1, R10104 += 1, R165 += 1, R166 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [76, 65535] { R10196 += 1, R10104 += 1, R165 += 1 };
  s3 -> s1 [0, 74] { R10196 += 1, R10104 += 1, R165 += 1 };
  s3 -> s2 [0, 65535] { R10196 += 1, R10104 += 1, R165 += 1, R166 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R10196 += 1, R10103 += 1, R10104 += 1 };
  s3 -> s4 [0, 65535] { R10196 += 1, R10104 += 1, R164 += 1, R165 += 1 };
  s3 -> s1 [76, 65535] { R10196 += 1, R10104 += 1, R165 += 1 };
  s4 -> s1 [0, 74] { R10196 += 1, R10104 += 1, R165 += 1 };
  s4 -> s5 [0, 65535] { R10196 += 1 };
  s4 -> s2 [0, 65535] { R10196 += 1, R10104 += 1, R165 += 1, R166 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R10196 += 1, R10104 += 1, R164 += 1, R165 += 1 };
  s4 -> s1 [76, 65535] { R10196 += 1, R10104 += 1, R165 += 1 };
  s5 -> s5 [0, 65535] { R10196 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R10196 += 1, R10104 += 1 };
  s7 -> s5 [0, 65535] { R10196 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 74] { R10198 += 1, R10106 += 1, R172 += 1, R174 += 1 };
  s0 -> s2 [0, 65535] { R10198 += 1, R10105 += 1, R10106 += 1 };
  s0 -> s3 [0, 65535] { R10198 += 1, R10106 += 1, R171 += 1, R172 += 1 };
  s0 -> s4 [0, 65535] { R10198 += 1, R10106 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s0 -> s0 [0, 65535] { R10197 += 1, R10198 += 1 };
  s0 -> s1 [76, 65535] { R10198 += 1, R10106 += 1, R172 += 1, R174 += 1 };
  s1 -> s1 [0, 74] { R10198 += 1, R10106 += 1, R172 += 1, R174 += 1 };
  s1 -> s5 [0, 65535] { R10198 += 1, R10106 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R10198 += 1 };
  s1 -> s1 [0, 65535] { R10198 += 1, R10106 += 1, R172 += 1 };
  s1 -> s1 [76, 65535] { R10198 += 1, R10106 += 1, R172 += 1, R174 += 1 };
  s2 -> s1 [0, 74] { R10198 += 1, R10106 += 1, R172 += 1, R174 += 1 };
  s2 -> s2 [0, 65535] { R10198 += 1, R10105 += 1, R10106 += 1 };
  s2 -> s3 [0, 65535] { R10198 += 1, R10106 += 1, R171 += 1, R172 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [0, 65535] { R10198 += 1, R10106 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s2 -> s1 [76, 65535] { R10198 += 1, R10106 += 1, R172 += 1, R174 += 1 };
  s3 -> s1 [0, 74] { R10198 += 1, R10106 += 1, R172 += 1, R174 += 1 };
  s3 -> s3 [0, 65535] { R10198 += 1, R10106 += 1, R171 += 1, R172 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R10198 += 1 };
  s3 -> s4 [0, 65535] { R10198 += 1, R10106 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s3 -> s1 [76, 65535] { R10198 += 1, R10106 += 1, R172 += 1, R174 += 1 };
  s4 -> s1 [0, 74] { R10198 += 1, R10106 += 1, R172 += 1, R174 += 1 };
  s4 -> s5 [0, 65535] { R10198 += 1, R10106 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R10198 += 1 };
  s4 -> s4 [0, 65535] { R10198 += 1, R10106 += 1, R172 += 1, R173 += 1, R174 += 1 };
  s4 -> s1 [76, 65535] { R10198 += 1, R10106 += 1, R172 += 1, R174 += 1 };
  s5 -> s5 [0, 65535] { R10198 += 1, R10106 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R10198 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R10198 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s0 [0, 65535] { R10199 += 1, R10200 += 1 };
  s0 -> s1 [0, 65535] { R10200 += 1, R10108 += 1 };
  s0 -> s2 [0, 65535] { R10200 += 1, R10107 += 1, R10108 += 1 };
  s1 -> s4 [0, 65535] { R10200 += 1 };
  s1 -> s1 [0, 65535] { R10200 += 1, R10108 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R10200 += 1, R10108 += 1 };
  s2 -> s2 [0, 65535] { R10200 += 1, R10107 += 1, R10108 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R10200 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 75] { R10202 += 1, R10110 += 1, R6568 += 1, R6570 += 1 };
  s0 -> s2 [0, 65535] { R10202 += 1, R10109 += 1, R10110 += 1 };
  s0 -> s0 [0, 65535] { R10201 += 1, R10202 += 1 };
  s0 -> s3 [0, 65535] { R10202 += 1, R10110 += 1 };
  s0 -> s1 [0, 65535] { R10202 += 1, R10110 += 1, R6568 += 1 };
  s0 -> s1 [78, 65535] { R10202 += 1, R10110 += 1, R6568 += 1, R6570 += 1 };
  s1 -> s1 [0, 75] { R10202 += 1, R10110 += 1, R6568 += 1, R6570 += 1 };
  s1 -> s3 [0, 65535] { R10202 += 1, R10110 += 1 };
  s1 -> s1 [0, 65535] { R10202 += 1, R10110 += 1, R6568 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R10202 += 1 };
  s1 -> s1 [78, 65535] { R10202 += 1, R10110 += 1, R6568 += 1, R6570 += 1 };
  s2 -> s1 [0, 75] { R10202 += 1, R10110 += 1, R6568 += 1, R6570 += 1 };
  s2 -> s2 [0, 65535] { R10202 += 1, R10109 += 1, R10110 += 1 };
  s2 -> s3 [0, 65535] { R10202 += 1, R10110 += 1 };
  s2 -> s1 [0, 65535] { R10202 += 1, R10110 += 1, R6568 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [78, 65535] { R10202 += 1, R10110 += 1, R6568 += 1, R6570 += 1 };
  s3 -> s3 [0, 65535] { R10202 += 1, R10110 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R10202 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R10202 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R10204 += 1, R10112 += 1, R9125 += 1 };
  s0 -> s2 [0, 65535] { R10204 += 1, R10112 += 1 };
  s0 -> s0 [0, 65535] { R10203 += 1, R10204 += 1 };
  s0 -> s3 [0, 65535] { R10204 += 1, R10111 += 1, R10112 += 1 };
  s0 -> s4 [0, 65535] { R10204 += 1, R10112 += 1, R9125 += 1, R9127 += 1, R9128 += 1 };
  s1 -> s1 [0, 65535] { R10204 += 1, R10112 += 1, R9125 += 1 };
  s1 -> s5 [0, 65535] { R10204 += 1 };
  s1 -> s2 [0, 65535] { R10204 += 1, R10112 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s5 [0, 65535] { R10204 += 1 };
  s2 -> s2 [0, 65535] { R10204 += 1, R10112 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s1 [0, 65535] { R10204 += 1, R10112 += 1, R9125 += 1 };
  s3 -> s2 [0, 65535] { R10204 += 1, R10112 += 1 };
  s3 -> s3 [0, 65535] { R10204 += 1, R10111 += 1, R10112 += 1 };
  s3 -> s4 [0, 65535] { R10204 += 1, R10112 += 1, R9125 += 1, R9127 += 1, R9128 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s1 [0, 65535] { R10204 += 1, R10112 += 1, R9125 += 1 };
  s4 -> s5 [0, 65535] { R10204 += 1 };
  s4 -> s2 [0, 65535] { R10204 += 1, R10112 += 1 };
  s4 -> s4 [0, 65535] { R10204 += 1, R10112 += 1, R9125 += 1, R9127 += 1, R9128 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R10204 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 74] { R10206 += 1, R10114 += 1, R10082 += 1, R10084 += 1 };
  s0 -> s2 [0, 65535] { R10206 += 1, R10113 += 1, R10114 += 1 };
  s0 -> s0 [0, 65535] { R10205 += 1, R10206 += 1 };
  s0 -> s3 [75, 75] { R10206 += 1, R10114 += 1, R10082 += 1, R10084 += 1 };
  s0 -> s4 [78, 78] { R10206 += 1, R10114 += 1, R10082 += 1, R10084 += 1 };
  s0 -> s1 [79, 65535] { R10206 += 1, R10114 += 1, R10082 += 1, R10084 += 1 };
  s1 -> s1 [0, 74] { R10206 += 1, R10114 += 1, R10082 += 1, R10084 += 1 };
  s1 -> s3 [75, 75] { R10206 += 1, R10114 += 1, R10082 += 1, R10084 += 1 };
  s1 -> s4 [78, 78] { R10206 += 1, R10114 += 1, R10082 += 1, R10084 += 1 };
  s1 -> s1 [79, 65535] { R10206 += 1, R10114 += 1, R10082 += 1, R10084 += 1 };
  s2 -> s1 [0, 74] { R10206 += 1, R10114 += 1, R10082 += 1, R10084 += 1 };
  s2 -> s2 [0, 65535] { R10206 += 1, R10113 += 1, R10114 += 1 };
  s2 -> s3 [75, 75] { R10206 += 1, R10114 += 1, R10082 += 1, R10084 += 1 };
  s2 -> s4 [78, 78] { R10206 += 1, R10114 += 1, R10082 += 1, R10084 += 1 };
  s2 -> s1 [79, 65535] { R10206 += 1, R10114 += 1, R10082 += 1, R10084 += 1 };
  s3 -> s3 [0, 75] { R10206 += 1, R10114 += 1, R10082 += 1, R10084 += 1 };
  s3 -> s9 [78, 78] { R10206 += 1, R10114 += 1, R10082 += 1, R10084 += 1 };
  s3 -> s3 [79, 65535] { R10206 += 1, R10114 += 1, R10082 += 1, R10084 += 1 };
  s4 -> s4 [0, 74] { R10206 += 1, R10114 += 1, R10082 += 1, R10084 += 1 };
  s4 -> s5 [0, 65535] { R10206 += 1 };
  s4 -> s4 [0, 65535] { R10206 += 1, R10114 += 1, R10082 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R10206 += 1, R10114 += 1 };
  s4 -> s8 [75, 75] { R10206 += 1, R10114 += 1, R10082 += 1, R10084 += 1 };
  s4 -> s9 [75, 75] { R10206 += 1, R10114 += 1, R10082 += 1, R10084 += 1 };
  s4 -> s4 [78, 65535] { R10206 += 1, R10114 += 1, R10082 += 1, R10084 += 1 };
  s5 -> s5 [0, 65535] { R10206 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R10206 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R10206 += 1, R10114 += 1 };
  s8 -> s8 [0, 65535] { R10206 += 1, R10114 += 1, R10082 += 1 };
  s8 -> s5 [0, 65535] { R10206 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R10206 += 1, R10114 += 1 };
  s9 -> s9 [0, 75] { R10206 += 1, R10114 += 1, R10082 += 1, R10084 += 1 };
  s9 -> s9 [0, 65535] { R10206 += 1, R10114 += 1, R10082 += 1 };
  s9 -> s5 [0, 65535] { R10206 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s7 [0, 65535] { R10206 += 1, R10114 += 1 };
  s9 -> s9 [78, 65535] { R10206 += 1, R10114 += 1, R10082 += 1, R10084 += 1 };
  accepting s4, s8, s5, s9, s6, s7;
};
automaton value2_40 {
  init s0;
  s0 -> s0 [0, 65535] { R10207 += 1, R10208 += 1 };
  s0 -> s1 [0, 65535] { R10208 += 1, R10143 += 1, R10144 += 1 };
  s0 -> s2 [0, 65535] { R10208 += 1, R10144 += 1, R23 += 1 };
  s1 -> s1 [0, 65535] { R10208 += 1, R10143 += 1, R10144 += 1 };
  s1 -> s2 [0, 65535] { R10208 += 1, R10144 += 1, R23 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R10208 += 1 };
  s2 -> s2 [0, 65535] { R10208 += 1, R10144 += 1, R23 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R10208 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 69] { R10210 += 1, R10146 += 1 };
  s0 -> s2 [0, 65535] { R10210 += 1, R10145 += 1, R10146 += 1 };
  s0 -> s0 [0, 65535] { R10209 += 1, R10210 += 1 };
  s0 -> s3 [70, 70] { R10210 += 1, R10146 += 1 };
  s0 -> s4 [70, 70] { R10210 += 1, R10146 += 1 };
  s0 -> s5 [75, 75] { R10210 += 1, R10146 += 1 };
  s0 -> s1 [76, 65535] { R10210 += 1, R10146 += 1 };
  s1 -> s1 [0, 69] { R10210 += 1, R10146 += 1 };
  s1 -> s3 [70, 70] { R10210 += 1, R10146 += 1 };
  s1 -> s4 [70, 70] { R10210 += 1, R10146 += 1 };
  s1 -> s5 [75, 75] { R10210 += 1, R10146 += 1 };
  s1 -> s1 [76, 65535] { R10210 += 1, R10146 += 1 };
  s2 -> s1 [0, 69] { R10210 += 1, R10146 += 1 };
  s2 -> s2 [0, 65535] { R10210 += 1, R10145 += 1, R10146 += 1 };
  s2 -> s3 [70, 70] { R10210 += 1, R10146 += 1 };
  s2 -> s4 [70, 70] { R10210 += 1, R10146 += 1 };
  s2 -> s5 [75, 75] { R10210 += 1, R10146 += 1 };
  s2 -> s1 [76, 65535] { R10210 += 1, R10146 += 1 };
  s4 -> s4 [0, 70] { R10210 += 1, R10146 += 1 };
  s4 -> s8 [75, 75] { R10210 += 1, R10146 += 1 };
  s4 -> s4 [76, 65535] { R10210 += 1, R10146 += 1 };
  s5 -> s5 [0, 69] { R10210 += 1, R10146 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R10210 += 1 };
  s5 -> s7 [70, 70] { R10210 += 1, R10146 += 1 };
  s5 -> s8 [70, 70] { R10210 += 1, R10146 += 1 };
  s5 -> s5 [75, 65535] { R10210 += 1, R10146 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R10210 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 70] { R10210 += 1, R10146 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R10210 += 1 };
  s8 -> s8 [75, 65535] { R10210 += 1, R10146 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R10212 += 1, R10148 += 1, R137 += 1 };
  s0 -> s0 [0, 65535] { R10211 += 1, R10212 += 1 };
  s0 -> s2 [0, 65535] { R10212 += 1, R10147 += 1, R10148 += 1 };
  s0 -> s3 [70, 70] { R10212 += 1, R10148 += 1, R137 += 1 };
  s0 -> s4 [70, 70] { R10212 += 1, R10148 += 1, R137 += 1 };
  s0 -> s1 [71, 65535] { R10212 += 1, R10148 += 1, R137 += 1 };
  s1 -> s1 [0, 69] { R10212 += 1, R10148 += 1, R137 += 1 };
  s1 -> s1 [0, 65535] { R10212 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R10212 += 1, R10148 += 1, R137 += 1 };
  s1 -> s4 [70, 70] { R10212 += 1, R10148 += 1, R137 += 1 };
  s1 -> s1 [71, 65535] { R10212 += 1, R10148 += 1, R137 += 1 };
  s2 -> s1 [0, 69] { R10212 += 1, R10148 += 1, R137 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R10212 += 1, R10147 += 1, R10148 += 1 };
  s2 -> s3 [70, 70] { R10212 += 1, R10148 += 1, R137 += 1 };
  s2 -> s4 [70, 70] { R10212 += 1, R10148 += 1, R137 += 1 };
  s2 -> s1 [71, 65535] { R10212 += 1, R10148 += 1, R137 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R10212 += 1 };
  s4 -> s5 [0, 65535] { R10212 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R10212 += 1, R10148 += 1, R137 += 1 };
  s5 -> s5 [0, 65535] { R10212 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R10214 += 1, R10150 += 1, R139 += 1 };
  s0 -> s2 [0, 65535] { R10214 += 1, R10149 += 1, R10150 += 1 };
  s0 -> s0 [0, 65535] { R10213 += 1, R10214 += 1 };
  s0 -> s3 [70, 70] { R10214 += 1, R10150 += 1, R139 += 1 };
  s0 -> s4 [70, 70] { R10214 += 1, R10150 += 1, R139 += 1 };
  s0 -> s1 [71, 65535] { R10214 += 1, R10150 += 1, R139 += 1 };
  s1 -> s1 [0, 69] { R10214 += 1, R10150 += 1, R139 += 1 };
  s1 -> s1 [0, 65535] { R10214 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [70, 70] { R10214 += 1, R10150 += 1, R139 += 1 };
  s1 -> s4 [70, 70] { R10214 += 1, R10150 += 1, R139 += 1 };
  s1 -> s1 [71, 65535] { R10214 += 1, R10150 += 1, R139 += 1 };
  s2 -> s1 [0, 69] { R10214 += 1, R10150 += 1, R139 += 1 };
  s2 -> s2 [0, 65535] { R10214 += 1, R10149 += 1, R10150 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [70, 70] { R10214 += 1, R10150 += 1, R139 += 1 };
  s2 -> s4 [70, 70] { R10214 += 1, R10150 += 1, R139 += 1 };
  s2 -> s1 [71, 65535] { R10214 += 1, R10150 += 1, R139 += 1 };
  s3 -> s3 [0, 65535] { R10214 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R10214 += 1, R10150 += 1, R139 += 1 };
  s4 -> s5 [0, 65535] { R10214 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R10214 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R10216 += 1, R10152 += 1, R141 += 1, R142 += 1 };
  s0 -> s0 [0, 65535] { R10215 += 1, R10216 += 1 };
  s0 -> s2 [0, 65535] { R10216 += 1, R10151 += 1, R10152 += 1 };
  s0 -> s3 [70, 70] { R10216 += 1, R10152 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [70, 70] { R10216 += 1, R10152 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [71, 65535] { R10216 += 1, R10152 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 69] { R10216 += 1, R10152 += 1, R141 += 1, R142 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R10216 += 1 };
  s1 -> s3 [70, 70] { R10216 += 1, R10152 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [70, 70] { R10216 += 1, R10152 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [71, 65535] { R10216 += 1, R10152 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [0, 69] { R10216 += 1, R10152 += 1, R141 += 1, R142 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10216 += 1, R10151 += 1, R10152 += 1 };
  s2 -> s3 [70, 70] { R10216 += 1, R10152 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [70, 70] { R10216 += 1, R10152 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [71, 65535] { R10216 += 1, R10152 += 1, R141 += 1, R142 += 1 };
  s3 -> s3 [0, 65535] { R10216 += 1, R10152 += 1, R141 += 1, R142 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R10216 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10216 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10216 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R10218 += 1, R10154 += 1, R147 += 1, R148 += 1 };
  s0 -> s0 [0, 65535] { R10217 += 1, R10218 += 1 };
  s0 -> s2 [0, 65535] { R10218 += 1, R10153 += 1, R10154 += 1 };
  s0 -> s3 [70, 70] { R10218 += 1, R10154 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [70, 70] { R10218 += 1, R10154 += 1, R147 += 1, R148 += 1 };
  s0 -> s1 [71, 65535] { R10218 += 1, R10154 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 69] { R10218 += 1, R10154 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 65535] { R10218 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R10218 += 1, R10154 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [70, 70] { R10218 += 1, R10154 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [71, 65535] { R10218 += 1, R10154 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [0, 69] { R10218 += 1, R10154 += 1, R147 += 1, R148 += 1 };
  s2 -> s2 [0, 65535] { R10218 += 1, R10153 += 1, R10154 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [70, 70] { R10218 += 1, R10154 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [70, 70] { R10218 += 1, R10154 += 1, R147 += 1, R148 += 1 };
  s2 -> s1 [71, 65535] { R10218 += 1, R10154 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535] { R10218 += 1, R10154 += 1, R147 += 1, R148 += 1 };
  s3 -> s6 [0, 65535] { R10218 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10218 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10218 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R10220 += 1, R10156 += 1, R152 += 1 };
  s0 -> s2 [0, 69] { R10220 += 1, R10156 += 1, R151 += 1, R152 += 1 };
  s0 -> s3 [0, 65535] { R10220 += 1, R10155 += 1, R10156 += 1 };
  s0 -> s0 [0, 65535] { R10219 += 1, R10220 += 1 };
  s0 -> s4 [70, 70] { R10220 += 1, R10156 += 1, R152 += 1 };
  s0 -> s5 [70, 70] { R10220 += 1, R10156 += 1, R151 += 1, R152 += 1 };
  s0 -> s6 [70, 70] { R10220 += 1, R10156 += 1, R151 += 1, R152 += 1 };
  s0 -> s7 [70, 70] { R10220 += 1, R10156 += 1, R152 += 1 };
  s0 -> s1 [71, 74] { R10220 += 1, R10156 += 1, R152 += 1 };
  s0 -> s2 [71, 65535] { R10220 += 1, R10156 += 1, R151 += 1, R152 += 1 };
  s0 -> s8 [75, 75] { R10220 += 1, R10156 += 1, R152 += 1 };
  s0 -> s1 [76, 65535] { R10220 += 1, R10156 += 1, R152 += 1 };
  s1 -> s1 [0, 69] { R10220 += 1, R10156 += 1, R152 += 1 };
  s1 -> s4 [70, 70] { R10220 += 1, R10156 += 1, R152 += 1 };
  s1 -> s7 [70, 70] { R10220 += 1, R10156 += 1, R152 += 1 };
  s1 -> s1 [71, 74] { R10220 += 1, R10156 += 1, R152 += 1 };
  s1 -> s8 [75, 75] { R10220 += 1, R10156 += 1, R152 += 1 };
  s1 -> s1 [76, 65535] { R10220 += 1, R10156 += 1, R152 += 1 };
  s2 -> s1 [0, 69] { R10220 += 1, R10156 += 1, R152 += 1 };
  s2 -> s2 [0, 69] { R10220 += 1, R10156 += 1, R151 += 1, R152 += 1 };
  s2 -> s4 [70, 70] { R10220 += 1, R10156 += 1, R152 += 1 };
  s2 -> s5 [70, 70] { R10220 += 1, R10156 += 1, R151 += 1, R152 += 1 };
  s2 -> s6 [70, 70] { R10220 += 1, R10156 += 1, R151 += 1, R152 += 1 };
  s2 -> s7 [70, 70] { R10220 += 1, R10156 += 1, R152 += 1 };
  s2 -> s1 [71, 74] { R10220 += 1, R10156 += 1, R152 += 1 };
  s2 -> s2 [71, 65535] { R10220 += 1, R10156 += 1, R151 += 1, R152 += 1 };
  s2 -> s8 [75, 75] { R10220 += 1, R10156 += 1, R152 += 1 };
  s2 -> s1 [76, 65535] { R10220 += 1, R10156 += 1, R152 += 1 };
  s3 -> s1 [0, 69] { R10220 += 1, R10156 += 1, R152 += 1 };
  s3 -> s2 [0, 69] { R10220 += 1, R10156 += 1, R151 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R10220 += 1, R10155 += 1, R10156 += 1 };
  s3 -> s4 [70, 70] { R10220 += 1, R10156 += 1, R152 += 1 };
  s3 -> s5 [70, 70] { R10220 += 1, R10156 += 1, R151 += 1, R152 += 1 };
  s3 -> s6 [70, 70] { R10220 += 1, R10156 += 1, R151 += 1, R152 += 1 };
  s3 -> s7 [70, 70] { R10220 += 1, R10156 += 1, R152 += 1 };
  s3 -> s1 [71, 74] { R10220 += 1, R10156 += 1, R152 += 1 };
  s3 -> s2 [71, 65535] { R10220 += 1, R10156 += 1, R151 += 1, R152 += 1 };
  s3 -> s8 [75, 75] { R10220 += 1, R10156 += 1, R152 += 1 };
  s3 -> s1 [76, 65535] { R10220 += 1, R10156 += 1, R152 += 1 };
  s4 -> s4 [0, 74] { R10220 += 1, R10156 += 1, R152 += 1 };
  s4 -> s11 [75, 75] { R10220 += 1, R10156 += 1, R152 += 1 };
  s4 -> s4 [76, 65535] { R10220 += 1, R10156 += 1, R152 += 1 };
  s6 -> s4 [0, 74] { R10220 += 1, R10156 += 1, R152 += 1 };
  s6 -> s6 [0, 65535] { R10220 += 1, R10156 += 1, R151 += 1, R152 += 1 };
  s6 -> s11 [75, 75] { R10220 += 1, R10156 += 1, R152 += 1 };
  s6 -> s4 [76, 65535] { R10220 += 1, R10156 += 1, R152 += 1 };
  s8 -> s8 [0, 69] { R10220 += 1, R10156 += 1, R152 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R10220 += 1 };
  s8 -> s10 [70, 70] { R10220 += 1, R10156 += 1, R152 += 1 };
  s8 -> s11 [70, 70] { R10220 += 1, R10156 += 1, R152 += 1 };
  s8 -> s8 [71, 65535] { R10220 += 1, R10156 += 1, R152 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R10220 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R10220 += 1, R10156 += 1, R152 += 1 };
  s11 -> s12 [0, 65535] { R10220 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R10220 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R10222 += 1, R10158 += 1, R155 += 1, R156 += 1 };
  s0 -> s0 [0, 65535] { R10221 += 1, R10222 += 1 };
  s0 -> s2 [0, 65535] { R10222 += 1, R10157 += 1, R10158 += 1 };
  s0 -> s3 [70, 70] { R10222 += 1, R10158 += 1, R155 += 1, R156 += 1 };
  s0 -> s4 [70, 70] { R10222 += 1, R10158 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [71, 65535] { R10222 += 1, R10158 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 69] { R10222 += 1, R10158 += 1, R155 += 1, R156 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R10222 += 1 };
  s1 -> s3 [70, 70] { R10222 += 1, R10158 += 1, R155 += 1, R156 += 1 };
  s1 -> s4 [70, 70] { R10222 += 1, R10158 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [71, 65535] { R10222 += 1, R10158 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [0, 69] { R10222 += 1, R10158 += 1, R155 += 1, R156 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10222 += 1, R10157 += 1, R10158 += 1 };
  s2 -> s3 [70, 70] { R10222 += 1, R10158 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [70, 70] { R10222 += 1, R10158 += 1, R155 += 1, R156 += 1 };
  s2 -> s1 [71, 65535] { R10222 += 1, R10158 += 1, R155 += 1, R156 += 1 };
  s3 -> s3 [0, 65535] { R10222 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10222 += 1, R10158 += 1, R155 += 1, R156 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R10222 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10222 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R10224 += 1, R10160 += 1, R161 += 1, R162 += 1 };
  s0 -> s0 [0, 65535] { R10223 += 1, R10224 += 1 };
  s0 -> s2 [0, 65535] { R10224 += 1, R10159 += 1, R10160 += 1 };
  s0 -> s3 [70, 70] { R10224 += 1, R10160 += 1, R161 += 1, R162 += 1 };
  s0 -> s4 [70, 70] { R10224 += 1, R10160 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [71, 65535] { R10224 += 1, R10160 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 69] { R10224 += 1, R10160 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535] { R10224 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [70, 70] { R10224 += 1, R10160 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [70, 70] { R10224 += 1, R10160 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [71, 65535] { R10224 += 1, R10160 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [0, 69] { R10224 += 1, R10160 += 1, R161 += 1, R162 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10224 += 1, R10159 += 1, R10160 += 1 };
  s2 -> s3 [70, 70] { R10224 += 1, R10160 += 1, R161 += 1, R162 += 1 };
  s2 -> s4 [70, 70] { R10224 += 1, R10160 += 1, R161 += 1, R162 += 1 };
  s2 -> s1 [71, 65535] { R10224 += 1, R10160 += 1, R161 += 1, R162 += 1 };
  s3 -> s6 [0, 65535] { R10224 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R10224 += 1, R10160 += 1, R161 += 1, R162 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10224 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10224 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 69] { R10226 += 1, R10162 += 1, R167 += 1, R168 += 1 };
  s0 -> s0 [0, 65535] { R10225 += 1, R10226 += 1 };
  s0 -> s2 [0, 65535] { R10226 += 1, R10161 += 1, R10162 += 1 };
  s0 -> s3 [70, 70] { R10226 += 1, R10162 += 1, R167 += 1, R168 += 1 };
  s0 -> s4 [70, 70] { R10226 += 1, R10162 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [71, 65535] { R10226 += 1, R10162 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 69] { R10226 += 1, R10162 += 1, R167 += 1, R168 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R10226 += 1 };
  s1 -> s3 [70, 70] { R10226 += 1, R10162 += 1, R167 += 1, R168 += 1 };
  s1 -> s4 [70, 70] { R10226 += 1, R10162 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [71, 65535] { R10226 += 1, R10162 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [0, 69] { R10226 += 1, R10162 += 1, R167 += 1, R168 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R10226 += 1, R10161 += 1, R10162 += 1 };
  s2 -> s3 [70, 70] { R10226 += 1, R10162 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [70, 70] { R10226 += 1, R10162 += 1, R167 += 1, R168 += 1 };
  s2 -> s1 [71, 65535] { R10226 += 1, R10162 += 1, R167 += 1, R168 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R10226 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R10226 += 1, R10162 += 1, R167 += 1, R168 += 1 };
  s4 -> s6 [0, 65535] { R10226 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R10226 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 69] { R10228 += 1, R10164 += 1, R175 += 1, R176 += 1 };
  s0 -> s2 [0, 69] { R10228 += 1, R10164 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s3 [0, 69] { R10228 += 1, R10164 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s0 [0, 65535] { R10227 += 1, R10228 += 1 };
  s0 -> s4 [0, 65535] { R10228 += 1, R10163 += 1, R10164 += 1 };
  s0 -> s5 [70, 70] { R10228 += 1, R10164 += 1, R175 += 1, R176 += 1 };
  s0 -> s6 [70, 70] { R10228 += 1, R10164 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s7 [70, 70] { R10228 += 1, R10164 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s8 [70, 70] { R10228 += 1, R10164 += 1, R175 += 1, R176 += 1 };
  s0 -> s9 [70, 70] { R10228 += 1, R10164 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s10 [70, 70] { R10228 += 1, R10164 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s0 -> s1 [71, 65535] { R10228 += 1, R10164 += 1, R175 += 1, R176 += 1 };
  s0 -> s2 [71, 65535] { R10228 += 1, R10164 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s0 -> s3 [71, 65535] { R10228 += 1, R10164 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s1 [0, 69] { R10228 += 1, R10164 += 1, R175 += 1, R176 += 1 };
  s1 -> s2 [0, 69] { R10228 += 1, R10164 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s3 [0, 69] { R10228 += 1, R10164 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s5 [70, 70] { R10228 += 1, R10164 += 1, R175 += 1, R176 += 1 };
  s1 -> s6 [70, 70] { R10228 += 1, R10164 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s7 [70, 70] { R10228 += 1, R10164 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s8 [70, 70] { R10228 += 1, R10164 += 1, R175 += 1, R176 += 1 };
  s1 -> s9 [70, 70] { R10228 += 1, R10164 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s10 [70, 70] { R10228 += 1, R10164 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s1 -> s1 [71, 65535] { R10228 += 1, R10164 += 1, R175 += 1, R176 += 1 };
  s1 -> s2 [71, 65535] { R10228 += 1, R10164 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s1 -> s3 [71, 65535] { R10228 += 1, R10164 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s15 [0, 69] { R10228 += 1, R10164 += 1 };
  s2 -> s2 [0, 69] { R10228 += 1, R10164 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s3 [0, 69] { R10228 += 1, R10164 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s6 [70, 70] { R10228 += 1, R10164 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s17 [70, 70] { R10228 += 1, R10164 += 1 };
  s2 -> s7 [70, 70] { R10228 += 1, R10164 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s9 [70, 70] { R10228 += 1, R10164 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s11 [70, 70] { R10228 += 1, R10164 += 1 };
  s2 -> s10 [70, 70] { R10228 += 1, R10164 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s2 -> s15 [71, 65535] { R10228 += 1, R10164 += 1 };
  s2 -> s2 [71, 65535] { R10228 += 1, R10164 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s2 -> s3 [71, 65535] { R10228 += 1, R10164 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s15 [0, 69] { R10228 += 1, R10164 += 1 };
  s3 -> s3 [0, 69] { R10228 += 1, R10164 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s16 [0, 69] { R10228 += 1, R10164 += 1, R176 += 1 };
  s3 -> s17 [70, 70] { R10228 += 1, R10164 += 1 };
  s3 -> s9 [70, 70] { R10228 += 1, R10164 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s18 [70, 70] { R10228 += 1, R10164 += 1, R176 += 1 };
  s3 -> s10 [70, 70] { R10228 += 1, R10164 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s11 [70, 70] { R10228 += 1, R10164 += 1 };
  s3 -> s12 [70, 70] { R10228 += 1, R10164 += 1, R176 += 1 };
  s3 -> s15 [71, 65535] { R10228 += 1, R10164 += 1 };
  s3 -> s3 [71, 65535] { R10228 += 1, R10164 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s3 -> s16 [71, 65535] { R10228 += 1, R10164 += 1, R176 += 1 };
  s4 -> s1 [0, 69] { R10228 += 1, R10164 += 1, R175 += 1, R176 += 1 };
  s4 -> s2 [0, 69] { R10228 += 1, R10164 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s3 [0, 69] { R10228 += 1, R10164 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s4 [0, 65535] { R10228 += 1, R10163 += 1, R10164 += 1 };
  s4 -> s5 [70, 70] { R10228 += 1, R10164 += 1, R175 += 1, R176 += 1 };
  s4 -> s6 [70, 70] { R10228 += 1, R10164 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s7 [70, 70] { R10228 += 1, R10164 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s8 [70, 70] { R10228 += 1, R10164 += 1, R175 += 1, R176 += 1 };
  s4 -> s9 [70, 70] { R10228 += 1, R10164 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s10 [70, 70] { R10228 += 1, R10164 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s4 -> s1 [71, 65535] { R10228 += 1, R10164 += 1, R175 += 1, R176 += 1 };
  s4 -> s2 [71, 65535] { R10228 += 1, R10164 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s4 -> s3 [71, 65535] { R10228 += 1, R10164 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s7 -> s7 [0, 65535] { R10228 += 1, R10164 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s7 -> s9 [0, 65535] { R10228 += 1, R10164 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s7 -> s11 [0, 65535] { R10228 += 1, R10164 += 1 };
  s8 -> s7 [0, 65535] { R10228 += 1, R10164 += 1, R176 += 1, R177 += 1, R178 += 1 };
  s8 -> s8 [0, 65535] { R10228 += 1, R10164 += 1, R175 += 1, R176 += 1 };
  s8 -> s9 [0, 65535] { R10228 += 1, R10164 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s9 -> s9 [0, 65535] { R10228 += 1, R10164 += 1, R176 += 1, R178 += 1, R179 += 1 };
  s9 -> s11 [0, 65535] { R10228 += 1, R10164 += 1 };
  s9 -> s12 [0, 65535] { R10228 += 1, R10164 += 1, R176 += 1 };
  s11 -> s13 [0, 65535] { R10228 += 1 };
  s11 -> s11 [0, 65535] { R10228 += 1, R10164 += 1 };
  s11 -> s14 [0, 65535];
  s12 -> s11 [0, 65535] { R10228 += 1, R10164 += 1 };
  s12 -> s12 [0, 65535] { R10228 += 1, R10164 += 1, R176 += 1 };
  s13 -> s13 [0, 65535] { R10228 += 1 };
  s13 -> s14 [0, 65535];
  s14 -> s14 [0, 65535];
  s15 -> s15 [0, 69] { R10228 += 1, R10164 += 1 };
  s15 -> s15 [0, 65535] { R10228 += 1 };
  s15 -> s14 [0, 65535];
  s15 -> s17 [70, 70] { R10228 += 1, R10164 += 1 };
  s15 -> s11 [70, 70] { R10228 += 1, R10164 += 1 };
  s15 -> s15 [71, 65535] { R10228 += 1, R10164 += 1 };
  s16 -> s15 [0, 69] { R10228 += 1, R10164 += 1 };
  s16 -> s16 [0, 69] { R10228 += 1, R10164 += 1, R176 += 1 };
  s16 -> s17 [70, 70] { R10228 += 1, R10164 += 1 };
  s16 -> s18 [70, 70] { R10228 += 1, R10164 += 1, R176 += 1 };
  s16 -> s11 [70, 70] { R10228 += 1, R10164 += 1 };
  s16 -> s12 [70, 70] { R10228 += 1, R10164 += 1, R176 += 1 };
  s16 -> s15 [71, 65535] { R10228 += 1, R10164 += 1 };
  s16 -> s16 [71, 65535] { R10228 += 1, R10164 += 1, R176 += 1 };
  s17 -> s17 [0, 65535] { R10228 += 1 };
  s17 -> s14 [0, 65535];
  accepting s17, s13, s14, s15, s11;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 69] { R10230 += 1, R10166 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s2 [0, 69] { R10230 += 1, R10166 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s3 [0, 69] { R10230 += 1, R10166 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s4 [0, 65535] { R10230 += 1, R10165 += 1, R10166 += 1 };
  s0 -> s0 [0, 65535] { R10229 += 1, R10230 += 1 };
  s0 -> s5 [70, 70] { R10230 += 1, R10166 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s6 [70, 70] { R10230 += 1, R10166 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s7 [70, 70] { R10230 += 1, R10166 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s8 [70, 70] { R10230 += 1, R10166 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s9 [70, 70] { R10230 += 1, R10166 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s10 [70, 70] { R10230 += 1, R10166 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s2 [71, 75] { R10230 += 1, R10166 += 1, R6564 += 1, R6566 += 1 };
  s0 -> s1 [71, 65535] { R10230 += 1, R10166 += 1, R6563 += 1, R6564 += 1 };
  s0 -> s3 [71, 65535] { R10230 += 1, R10166 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s0 -> s2 [78, 65535] { R10230 += 1, R10166 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s1 [0, 69] { R10230 += 1, R10166 += 1, R6563 += 1, R6564 += 1 };
  s1 -> s2 [0, 69] { R10230 += 1, R10166 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s3 [0, 69] { R10230 += 1, R10166 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s1 -> s5 [70, 70] { R10230 += 1, R10166 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s1 -> s6 [70, 70] { R10230 += 1, R10166 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s1 -> s7 [70, 70] { R10230 += 1, R10166 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s8 [70, 70] { R10230 += 1, R10166 += 1, R6563 += 1, R6564 += 1 };
  s1 -> s9 [70, 70] { R10230 += 1, R10166 += 1, R6563 += 1, R6564 += 1 };
  s1 -> s10 [70, 70] { R10230 += 1, R10166 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s2 [71, 75] { R10230 += 1, R10166 += 1, R6564 += 1, R6566 += 1 };
  s1 -> s1 [71, 65535] { R10230 += 1, R10166 += 1, R6563 += 1, R6564 += 1 };
  s1 -> s3 [71, 65535] { R10230 += 1, R10166 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s1 -> s2 [78, 65535] { R10230 += 1, R10166 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s2 [0, 69] { R10230 += 1, R10166 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s2 [0, 65535] { R10230 += 1 };
  s2 -> s11 [0, 65535];
  s2 -> s7 [70, 70] { R10230 += 1, R10166 += 1, R6564 += 1 };
  s2 -> s10 [70, 70] { R10230 += 1, R10166 += 1, R6564 += 1 };
  s2 -> s2 [71, 75] { R10230 += 1, R10166 += 1, R6564 += 1, R6566 += 1 };
  s2 -> s2 [71, 65535] { R10230 += 1, R10166 += 1, R6564 += 1 };
  s2 -> s2 [78, 65535] { R10230 += 1, R10166 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s2 [0, 69] { R10230 += 1, R10166 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s3 [0, 69] { R10230 += 1, R10166 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s3 -> s5 [70, 70] { R10230 += 1, R10166 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s3 -> s6 [70, 70] { R10230 += 1, R10166 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s3 -> s7 [70, 70] { R10230 += 1, R10166 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s10 [70, 70] { R10230 += 1, R10166 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s2 [71, 75] { R10230 += 1, R10166 += 1, R6564 += 1, R6566 += 1 };
  s3 -> s3 [71, 65535] { R10230 += 1, R10166 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s3 -> s2 [78, 65535] { R10230 += 1, R10166 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s1 [0, 69] { R10230 += 1, R10166 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s2 [0, 69] { R10230 += 1, R10166 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s3 [0, 69] { R10230 += 1, R10166 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s4 [0, 65535] { R10230 += 1, R10165 += 1, R10166 += 1 };
  s4 -> s5 [70, 70] { R10230 += 1, R10166 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s6 [70, 70] { R10230 += 1, R10166 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s7 [70, 70] { R10230 += 1, R10166 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s8 [70, 70] { R10230 += 1, R10166 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s9 [70, 70] { R10230 += 1, R10166 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s10 [70, 70] { R10230 += 1, R10166 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s2 [71, 75] { R10230 += 1, R10166 += 1, R6564 += 1, R6566 += 1 };
  s4 -> s1 [71, 65535] { R10230 += 1, R10166 += 1, R6563 += 1, R6564 += 1 };
  s4 -> s3 [71, 65535] { R10230 += 1, R10166 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s4 -> s2 [78, 65535] { R10230 += 1, R10166 += 1, R6564 += 1, R6566 += 1 };
  s6 -> s7 [0, 75] { R10230 += 1, R10166 += 1, R6564 += 1, R6566 += 1 };
  s6 -> s6 [0, 65535] { R10230 += 1, R10166 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s6 -> s7 [78, 65535] { R10230 += 1, R10166 += 1, R6564 += 1, R6566 += 1 };
  s7 -> s7 [0, 75] { R10230 += 1, R10166 += 1, R6564 += 1, R6566 += 1 };
  s7 -> s7 [0, 65535] { R10230 += 1, R10166 += 1, R6564 += 1 };
  s7 -> s12 [0, 65535] { R10230 += 1 };
  s7 -> s11 [0, 65535];
  s7 -> s7 [78, 65535] { R10230 += 1, R10166 += 1, R6564 += 1, R6566 += 1 };
  s9 -> s7 [0, 75] { R10230 += 1, R10166 += 1, R6564 += 1, R6566 += 1 };
  s9 -> s6 [0, 65535] { R10230 += 1, R10166 += 1, R6564 += 1, R6565 += 1, R6566 += 1 };
  s9 -> s9 [0, 65535] { R10230 += 1, R10166 += 1, R6563 += 1, R6564 += 1 };
  s9 -> s7 [78, 65535] { R10230 += 1, R10166 += 1, R6564 += 1, R6566 += 1 };
  s10 -> s10 [0, 65535] { R10230 += 1 };
  s10 -> s11 [0, 65535];
  s11 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R10230 += 1 };
  s12 -> s11 [0, 65535];
  accepting s12, s2, s7, s10, s11;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 69] { R10232 += 1, R10168 += 1, R9119 += 1, R9120 += 1 };
  s0 -> s2 [0, 69] { R10232 += 1, R10168 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s0 -> s3 [0, 69] { R10232 += 1, R10168 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s0 -> s4 [0, 65535] { R10232 += 1, R10167 += 1, R10168 += 1 };
  s0 -> s0 [0, 65535] { R10231 += 1, R10232 += 1 };
  s0 -> s5 [70, 70] { R10232 += 1, R10168 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s0 -> s6 [70, 70] { R10232 += 1, R10168 += 1, R9119 += 1, R9120 += 1 };
  s0 -> s7 [70, 70] { R10232 += 1, R10168 += 1, R9119 += 1, R9120 += 1 };
  s0 -> s8 [70, 70] { R10232 += 1, R10168 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s0 -> s9 [70, 70] { R10232 += 1, R10168 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s0 -> s10 [70, 70] { R10232 += 1, R10168 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s0 -> s1 [71, 65535] { R10232 += 1, R10168 += 1, R9119 += 1, R9120 += 1 };
  s0 -> s2 [71, 65535] { R10232 += 1, R10168 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s0 -> s3 [71, 65535] { R10232 += 1, R10168 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s1 -> s1 [0, 69] { R10232 += 1, R10168 += 1, R9119 += 1, R9120 += 1 };
  s1 -> s2 [0, 69] { R10232 += 1, R10168 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s1 -> s3 [0, 69] { R10232 += 1, R10168 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s1 -> s5 [70, 70] { R10232 += 1, R10168 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s1 -> s6 [70, 70] { R10232 += 1, R10168 += 1, R9119 += 1, R9120 += 1 };
  s1 -> s7 [70, 70] { R10232 += 1, R10168 += 1, R9119 += 1, R9120 += 1 };
  s1 -> s8 [70, 70] { R10232 += 1, R10168 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s1 -> s9 [70, 70] { R10232 += 1, R10168 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s1 -> s10 [70, 70] { R10232 += 1, R10168 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s1 -> s1 [71, 65535] { R10232 += 1, R10168 += 1, R9119 += 1, R9120 += 1 };
  s1 -> s2 [71, 65535] { R10232 += 1, R10168 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s1 -> s3 [71, 65535] { R10232 += 1, R10168 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s2 -> s2 [0, 69] { R10232 += 1, R10168 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s2 -> s3 [0, 69] { R10232 += 1, R10168 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s2 -> s5 [70, 70] { R10232 += 1, R10168 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s2 -> s8 [70, 70] { R10232 += 1, R10168 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s2 -> s9 [70, 70] { R10232 += 1, R10168 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s2 -> s10 [70, 70] { R10232 += 1, R10168 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s2 -> s2 [71, 65535] { R10232 += 1, R10168 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s2 -> s3 [71, 65535] { R10232 += 1, R10168 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s3 -> s3 [0, 69] { R10232 += 1, R10168 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s3 -> s3 [0, 65535] { R10232 += 1 };
  s3 -> s11 [0, 65535];
  s3 -> s5 [70, 70] { R10232 += 1, R10168 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s3 -> s10 [70, 70] { R10232 += 1, R10168 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s3 -> s3 [71, 65535] { R10232 += 1, R10168 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s4 -> s1 [0, 69] { R10232 += 1, R10168 += 1, R9119 += 1, R9120 += 1 };
  s4 -> s2 [0, 69] { R10232 += 1, R10168 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s4 -> s3 [0, 69] { R10232 += 1, R10168 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s4 -> s4 [0, 65535] { R10232 += 1, R10167 += 1, R10168 += 1 };
  s4 -> s5 [70, 70] { R10232 += 1, R10168 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s4 -> s6 [70, 70] { R10232 += 1, R10168 += 1, R9119 += 1, R9120 += 1 };
  s4 -> s7 [70, 70] { R10232 += 1, R10168 += 1, R9119 += 1, R9120 += 1 };
  s4 -> s8 [70, 70] { R10232 += 1, R10168 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s4 -> s9 [70, 70] { R10232 += 1, R10168 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s4 -> s10 [70, 70] { R10232 += 1, R10168 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s4 -> s1 [71, 65535] { R10232 += 1, R10168 += 1, R9119 += 1, R9120 += 1 };
  s4 -> s2 [71, 65535] { R10232 += 1, R10168 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s4 -> s3 [71, 65535] { R10232 += 1, R10168 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s5 -> s5 [0, 65535] { R10232 += 1, R10168 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s5 -> s12 [0, 65535] { R10232 += 1 };
  s5 -> s11 [0, 65535];
  s6 -> s5 [0, 65535] { R10232 += 1, R10168 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s6 -> s6 [0, 65535] { R10232 += 1, R10168 += 1, R9119 += 1, R9120 += 1 };
  s6 -> s9 [0, 65535] { R10232 += 1, R10168 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s9 -> s5 [0, 65535] { R10232 += 1, R10168 += 1, R9120 += 1, R9122 += 1, R9123 += 1 };
  s9 -> s9 [0, 65535] { R10232 += 1, R10168 += 1, R9120 += 1, R9121 += 1, R9122 += 1 };
  s10 -> s11 [0, 65535];
  s10 -> s10 [0, 65535] { R10232 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R10232 += 1 };
  s12 -> s11 [0, 65535];
  accepting s3, s12, s5, s10, s11;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 69] { R10234 += 1, R10170 += 1, R10078 += 1, R10079 += 1, R10080 += 1 };
  s0 -> s2 [0, 69] { R10234 += 1, R10170 += 1, R10078 += 1, R10080 += 1 };
  s0 -> s3 [0, 69] { R10234 += 1, R10170 += 1, R10077 += 1, R10078 += 1 };
  s0 -> s4 [0, 65535] { R10234 += 1, R10169 += 1, R10170 += 1 };
  s0 -> s0 [0, 65535] { R10233 += 1, R10234 += 1 };
  s0 -> s5 [70, 70] { R10234 += 1, R10170 += 1, R10077 += 1, R10078 += 1 };
  s0 -> s6 [70, 70] { R10234 += 1, R10170 += 1, R10078 += 1, R10079 += 1, R10080 += 1 };
  s0 -> s7 [70, 70] { R10234 += 1, R10170 += 1, R10077 += 1, R10078 += 1 };
  s0 -> s8 [70, 70] { R10234 += 1, R10170 += 1, R10078 += 1, R10079 += 1, R10080 += 1 };
  s0 -> s9 [70, 70] { R10234 += 1, R10170 += 1, R10078 += 1, R10080 += 1 };
  s0 -> s10 [70, 70] { R10234 += 1, R10170 += 1, R10078 += 1, R10080 += 1 };
  s0 -> s2 [71, 74] { R10234 += 1, R10170 += 1, R10078 += 1, R10080 += 1 };
  s0 -> s1 [71, 65535] { R10234 += 1, R10170 += 1, R10078 += 1, R10079 += 1, R10080 += 1 };
  s0 -> s3 [71, 65535] { R10234 += 1, R10170 += 1, R10077 += 1, R10078 += 1 };
  s0 -> s2 [79, 65535] { R10234 += 1, R10170 += 1, R10078 += 1, R10080 += 1 };
  s1 -> s1 [0, 69] { R10234 += 1, R10170 += 1, R10078 += 1, R10079 += 1, R10080 += 1 };
  s1 -> s2 [0, 69] { R10234 += 1, R10170 += 1, R10078 += 1, R10080 += 1 };
  s1 -> s6 [70, 70] { R10234 += 1, R10170 += 1, R10078 += 1, R10079 += 1, R10080 += 1 };
  s1 -> s8 [70, 70] { R10234 += 1, R10170 += 1, R10078 += 1, R10079 += 1, R10080 += 1 };
  s1 -> s9 [70, 70] { R10234 += 1, R10170 += 1, R10078 += 1, R10080 += 1 };
  s1 -> s10 [70, 70] { R10234 += 1, R10170 += 1, R10078 += 1, R10080 += 1 };
  s1 -> s2 [71, 74] { R10234 += 1, R10170 += 1, R10078 += 1, R10080 += 1 };
  s1 -> s1 [71, 65535] { R10234 += 1, R10170 += 1, R10078 += 1, R10079 += 1, R10080 += 1 };
  s1 -> s2 [79, 65535] { R10234 += 1, R10170 += 1, R10078 += 1, R10080 += 1 };
  s2 -> s2 [0, 69] { R10234 += 1, R10170 += 1, R10078 += 1, R10080 += 1 };
  s2 -> s11 [0, 65535];
  s2 -> s2 [0, 65535] { R10234 += 1 };
  s2 -> s9 [70, 70] { R10234 += 1, R10170 += 1, R10078 += 1, R10080 += 1 };
  s2 -> s10 [70, 70] { R10234 += 1, R10170 += 1, R10078 += 1, R10080 += 1 };
  s2 -> s2 [71, 74] { R10234 += 1, R10170 += 1, R10078 += 1, R10080 += 1 };
  s2 -> s2 [79, 65535] { R10234 += 1, R10170 += 1, R10078 += 1, R10080 += 1 };
  s3 -> s1 [0, 69] { R10234 += 1, R10170 += 1, R10078 += 1, R10079 += 1, R10080 += 1 };
  s3 -> s2 [0, 69] { R10234 += 1, R10170 += 1, R10078 += 1, R10080 += 1 };
  s3 -> s3 [0, 69] { R10234 += 1, R10170 += 1, R10077 += 1, R10078 += 1 };
  s3 -> s5 [70, 70] { R10234 += 1, R10170 += 1, R10077 += 1, R10078 += 1 };
  s3 -> s6 [70, 70] { R10234 += 1, R10170 += 1, R10078 += 1, R10079 += 1, R10080 += 1 };
  s3 -> s7 [70, 70] { R10234 += 1, R10170 += 1, R10077 += 1, R10078 += 1 };
  s3 -> s8 [70, 70] { R10234 += 1, R10170 += 1, R10078 += 1, R10079 += 1, R10080 += 1 };
  s3 -> s9 [70, 70] { R10234 += 1, R10170 += 1, R10078 += 1, R10080 += 1 };
  s3 -> s10 [70, 70] { R10234 += 1, R10170 += 1, R10078 += 1, R10080 += 1 };
  s3 -> s2 [71, 74] { R10234 += 1, R10170 += 1, R10078 += 1, R10080 += 1 };
  s3 -> s1 [71, 65535] { R10234 += 1, R10170 += 1, R10078 += 1, R10079 += 1, R10080 += 1 };
  s3 -> s3 [71, 65535] { R10234 += 1, R10170 += 1, R10077 += 1, R10078 += 1 };
  s3 -> s2 [79, 65535] { R10234 += 1, R10170 += 1, R10078 += 1, R10080 += 1 };
  s4 -> s1 [0, 69] { R10234 += 1, R10170 += 1, R10078 += 1, R10079 += 1, R10080 += 1 };
  s4 -> s2 [0, 69] { R10234 += 1, R10170 += 1, R10078 += 1, R10080 += 1 };
  s4 -> s3 [0, 69] { R10234 += 1, R10170 += 1, R10077 += 1, R10078 += 1 };
  s4 -> s4 [0, 65535] { R10234 += 1, R10169 += 1, R10170 += 1 };
  s4 -> s5 [70, 70] { R10234 += 1, R10170 += 1, R10077 += 1, R10078 += 1 };
  s4 -> s6 [70, 70] { R10234 += 1, R10170 += 1, R10078 += 1, R10079 += 1, R10080 += 1 };
  s4 -> s7 [70, 70] { R10234 += 1, R10170 += 1, R10077 += 1, R10078 += 1 };
  s4 -> s8 [70, 70] { R10234 += 1, R10170 += 1, R10078 += 1, R10079 += 1, R10080 += 1 };
  s4 -> s9 [70, 70] { R10234 += 1, R10170 += 1, R10078 += 1, R10080 += 1 };
  s4 -> s10 [70, 70] { R10234 += 1, R10170 += 1, R10078 += 1, R10080 += 1 };
  s4 -> s2 [71, 74] { R10234 += 1, R10170 += 1, R10078 += 1, R10080 += 1 };
  s4 -> s1 [71, 65535] { R10234 += 1, R10170 += 1, R10078 += 1, R10079 += 1, R10080 += 1 };
  s4 -> s3 [71, 65535] { R10234 += 1, R10170 += 1, R10077 += 1, R10078 += 1 };
  s4 -> s2 [79, 65535] { R10234 += 1, R10170 += 1, R10078 += 1, R10080 += 1 };
  s7 -> s10 [0, 74] { R10234 += 1, R10170 += 1, R10078 += 1, R10080 += 1 };
  s7 -> s7 [0, 65535] { R10234 += 1, R10170 += 1, R10077 += 1, R10078 += 1 };
  s7 -> s8 [0, 65535] { R10234 += 1, R10170 += 1, R10078 += 1, R10079 += 1, R10080 += 1 };
  s7 -> s10 [79, 65535] { R10234 += 1, R10170 += 1, R10078 += 1, R10080 += 1 };
  s8 -> s10 [0, 74] { R10234 += 1, R10170 += 1, R10078 += 1, R10080 += 1 };
  s8 -> s8 [0, 65535] { R10234 += 1, R10170 += 1, R10078 += 1, R10079 += 1, R10080 += 1 };
  s8 -> s10 [79, 65535] { R10234 += 1, R10170 += 1, R10078 += 1, R10080 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s9 [0, 65535] { R10234 += 1 };
  s10 -> s10 [0, 74] { R10234 += 1, R10170 += 1, R10078 += 1, R10080 += 1 };
  s10 -> s11 [0, 65535];
  s10 -> s10 [0, 65535] { R10234 += 1 };
  s10 -> s10 [79, 65535] { R10234 += 1, R10170 += 1, R10078 += 1, R10080 += 1 };
  s11 -> s11 [0, 65535];
  accepting s2, s9, s10, s11;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [107, 107];
  accepting s1;
};
};
synchronised {  // Automata constraining P7
automaton P7_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R2 = R10114 && R3 = R10234 && R25 - R10234 = -1 && R26 = R10234 && R27 - R10234 = -1 && R28 = R10234 && R29 = 0 && R30 = 1 && R31 = 0 && R32 = 1 && R63 + R138 + R137 + -1*R10082 + -1*R10078 - R130 = 0 && R77 + R153 + R151 = 0 && R78 + R154 + R152 + -1*R10082 + -1*R10078 - R130 = 0 && R129 + R10081 + R10077 = 0 && R131 + R10083 + R10079 = 0 && R132 + R10084 + R10080 = 0 && R10113 = 0 && R10145 = 0 && R10146 = 0 && R10155 = 0 && R10156 = 0 && R10163 = 0 && R10164 = 0 && R10165 = 0 && R10166 = 0 && R10167 = 0 && R10168 = 0 && R10169 = 0 && R10170 = 0 && R10171 = 0 && R10172 = R10234 && R10173 = 0 && R10174 = R10234 && R10175 = 0 && R10176 = R10234 && R10177 = 0 && R10178 = R10234 && R10179 = 0 && R10180 = R10234 && R10181 = 0 && R10182 = R10234 && R10183 = 0 && R10184 = R10234 && R10185 = 0 && R10186 = R10234 && R10187 = 0 && R10188 = R10234 && R10189 = 0 && R10190 = R10234 && R10191 = 0 && R10192 = R10234 && R10193 = 0 && R10194 = R10234 && R10195 = 0 && R10196 = R10234 && R10197 = 0 && R10198 = R10234 && R10199 = 0 && R10200 = R10234 && R10201 = 0 && R10202 = R10234 && R10203 = 0 && R10204 = R10234 && R10205 = 0 && R10206 = R10234 && R10207 = 0 && R10208 = R10234 && R10209 = 0 && R10210 = R10234 && R10211 = 0 && R10212 = R10234 && R10213 = 0 && R10214 = R10234 && R10215 = 0 && R10216 = R10234 && R10217 = 0 && R10218 = R10234 && R10219 = 0 && R10220 = R10234 && R10221 = 0 && R10222 = R10234 && R10223 = 0 && R10224 = R10234 && R10225 = 0 && R10226 = R10234 && R10227 = 0 && R10228 = R10234 && R10229 = 0 && R10230 = R10234 && R10231 = 0 && R10232 = R10234 && R10233 = 0 && R12 < 1 && R15 < 1 && R16 < 1 && R65 + R140 + R139 < 1 && -1*R160 + -1*R157 - R83 < 1 && R89 + R166 + R163 < 1 && -1*R10082 + -1*R10078 - R130 < 1 && -1 < R10114 && 0 < R10234 && (R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R10082 + -1*R10078 - R130 = 0 || R83 + R160 + R157 < 1) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R95 + R173 + R169 = 0 && R96 + R174 + R170 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R103 + R182 + R177 = 0 && R104 + R183 + R178 = 0)) && (R83 + R160 + R157 != 0 || R105 + R184 + R179 = 0 || (R113 + R6569 + R6565 = 0 && R114 + R6570 + R6566 = 0)) && (R83 + R160 + R157 != 0 || ((R81 + R158 + R155 != 0 || R82 + R159 + R156 + -1*R10082 + -1*R10078 - R130 = 0 || R130 + R10082 + R10078 < 1) && (R81 + R158 + R155 = 0 || R130 + R10082 + R10078 < 1))) && (R87 + R164 + R161 != 0 || R88 + R165 + R162 + -1*R10082 + -1*R10078 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R10082 + R10078 = 0)) && (R93 + R171 + R167 != 0 || R94 + R172 + R168 + -1*R10082 + -1*R10078 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R10082 + R10078 = 0)) && (R95 + R173 + R169 != 0 || R83 + R160 + R157 + -1*R174 + -1*R170 - R96 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 != 0 || R102 + R181 + R176 + -1*R10082 + -1*R10078 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R10082 + R10078 = 0)) && (R103 + R182 + R177 != 0 || R83 + R160 + R157 + -1*R183 + -1*R178 - R104 = 0 || R83 + R160 + R157 < 1) && (R111 + R6567 + R6563 != 0 || R112 + R6568 + R6564 + -1*R10082 + -1*R10078 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R10082 + R10078 = 0)) && (R113 + R6569 + R6565 != 0 || R83 + R160 + R157 + -1*R6570 + -1*R6566 - R114 = 0 || R83 + R160 + R157 < 1) && (R119 + R9124 + R9119 != 0 || R120 + R9125 + R9120 + -1*R10082 + -1*R10078 - R130 = 0 || (R83 + R160 + R157 = 0 && R130 + R10082 + R10078 = 0)) && (R10085 != 0 || R10086 = R10114 || (R22 = 0 && R10114 = 0)) && (R10087 != 0 || R10088 = R10114 || (R22 = 0 && R10114 = 0)) && (R10089 != 0 || R10090 = R10114 || (R22 = 0 && R10114 = 0)) && (R10091 != 0 || R10092 = R10114 || (R22 = 0 && R10114 = 0)) && (R10093 != 0 || R10094 = R10114 || (R22 = 0 && R10114 = 0)) && (R10095 != 0 || R10096 = R10114 || (R22 = 0 && R10114 = 0)) && (R10097 != 0 || R10098 = R10114 || (R22 = 0 && R10114 = 0)) && (R10099 != 0 || R10100 = R10114 || (R22 = 0 && R10114 = 0)) && (R10101 != 0 || R10102 = R10114 || (R22 = 0 && R10114 = 0)) && (R10103 != 0 || R10104 = R10114 || (R22 = 0 && R10114 = 0)) && (R10105 != 0 || R10106 = R10114 || (R22 = 0 && R10114 = 0)) && (R10107 != 0 || R10108 = R10114 || (R22 = 0 && R10114 = 0)) && (R10109 != 0 || R10110 = R10114 || (R22 = 0 && R10114 = 0)) && (R10111 != 0 || R10112 = R10114 || (R22 = 0 && R10114 = 0)) && (R23 = 0 || (R10143 = 0 && R10144 = 0)) && (R23 = 0 || (R10147 = 0 && R10148 = 0)) && (R23 = 0 || (R10149 = 0 && R10150 = 0)) && (R23 = 0 || (R10151 = 0 && R10152 = 0)) && (R23 = 0 || (R10153 = 0 && R10154 = 0)) && (R23 = 0 || (R10157 = 0 && R10158 = 0)) && (R23 = 0 || (R10159 = 0 && R10160 = 0)) && (R23 = 0 || (R10161 = 0 && R10162 = 0)) && (R24 = 0 || (R10115 = 0 && R10116 = 0)) && (R24 = 0 || (R10117 = 0 && R10118 = 0)) && (R24 = 0 || (R10119 = 0 && R10120 = 0)) && (R24 = 0 || (R10121 = 0 && R10122 = 0)) && (R24 = 0 || (R10123 = 0 && R10124 = 0)) && (R24 = 0 || (R10125 = 0 && R10126 = 0)) && (R24 = 0 || (R10127 = 0 && R10128 = 0)) && (R24 = 0 || (R10129 = 0 && R10130 = 0)) && (R24 = 0 || (R10131 = 0 && R10132 = 0)) && (R24 = 0 || (R10133 = 0 && R10134 = 0)) && (R24 = 0 || (R10135 = 0 && R10136 = 0)) && (R24 = 0 || (R10137 = 0 && R10138 = 0)) && (R24 = 0 || (R10139 = 0 && R10140 = 0)) && (R24 = 0 || (R10141 = 0 && R10142 = 0)) && (R69 + R146 + R143 = 0 || (R67 + R144 + R141 = 0 && R68 + R145 + R142 = 0)) && (R69 + R146 + R143 = 0 || (R73 + R149 + R147 = 0 && R74 + R150 + R148 = 0)) && (R81 + R158 + R155 = 0 || R83 + R160 + R157 < 1) && (R87 + R164 + R161 = 0 || (R83 + R160 + R157 = 0 && R130 + R10082 + R10078 = 0)) && (R93 + R171 + R167 = 0 || (R83 + R160 + R157 = 0 && R130 + R10082 + R10078 = 0)) && (R95 + R173 + R169 = 0 || R83 + R160 + R157 < 1) && (R101 + R180 + R175 = 0 || (R83 + R160 + R157 = 0 && R130 + R10082 + R10078 = 0)) && (R103 + R182 + R177 = 0 || R83 + R160 + R157 < 1) && (R111 + R6567 + R6563 = 0 || (R83 + R160 + R157 = 0 && R130 + R10082 + R10078 = 0)) && (R113 + R6569 + R6565 = 0 || R83 + R160 + R157 < 1) && (R119 + R9124 + R9119 = 0 || (R83 + R160 + R157 = 0 && R130 + R10082 + R10078 = 0)) && (R123 + R9128 + R9123 = 0 || (R121 + R9126 + R9121 = 0 && R122 + R9127 + R9122 = 0)) && (R10085 = 0 || (R22 = 0 && R10114 = 0)) && (R10087 = 0 || (R22 = 0 && R10114 = 0)) && (R10089 = 0 || (R22 = 0 && R10114 = 0)) && (R10091 = 0 || (R22 = 0 && R10114 = 0)) && (R10093 = 0 || (R22 = 0 && R10114 = 0)) && (R10095 = 0 || (R22 = 0 && R10114 = 0)) && (R10097 = 0 || (R22 = 0 && R10114 = 0)) && (R10099 = 0 || (R22 = 0 && R10114 = 0)) && (R10101 = 0 || (R22 = 0 && R10114 = 0)) && (R10103 = 0 || (R22 = 0 && R10114 = 0)) && (R10105 = 0 || (R22 = 0 && R10114 = 0)) && (R10107 = 0 || (R22 = 0 && R10114 = 0)) && (R10109 = 0 || (R22 = 0 && R10114 = 0)) && (R10111 = 0 || (R22 = 0 && R10114 = 0));
// End of Parikh automata intersection problem
