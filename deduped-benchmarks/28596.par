// Parikh automata intersection problem, generated by OSTRICH+
counter int R0, R1, R118, R119, R120, R121, R122, R123, R124, R125, R126, R127, R128, R129, R13, R130, R131, R132, R133, R134, R135, R136, R137, R138, R139, R14, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R193, R194, R195, R196, R197, R198, R199, R2, R200, R201, R202, R203, R204, R205, R206, R207, R208, R209, R210, R211, R212, R213, R214, R215, R216, R217, R218, R219, R220, R3, R4, R5, R6, R7, R8, R9;
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R5 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 45] { R184 += 1 };
  s0 -> s0 [0, 65535] { R183 += 1, R184 += 1 };
  s0 -> s2 [46, 46] { R184 += 1 };
  s0 -> s3 [47, 47] { R184 += 1 };
  s0 -> s1 [48, 65535] { R184 += 1 };
  s1 -> s1 [0, 45] { R184 += 1 };
  s1 -> s2 [46, 46] { R184 += 1 };
  s1 -> s3 [47, 47] { R184 += 1 };
  s1 -> s1 [48, 65535] { R184 += 1 };
  s2 -> s1 [0, 45] { R184 += 1 };
  s2 -> s2 [46, 46] { R184 += 1 };
  s2 -> s3 [47, 47] { R184 += 1 };
  s2 -> s1 [48, 114] { R184 += 1 };
  s2 -> s8 [115, 115] { R184 += 1 };
  s2 -> s1 [116, 65535] { R184 += 1 };
  s3 -> s3 [0, 45] { R184 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s4 [46, 46] { R184 += 1 };
  s3 -> s3 [47, 65535] { R184 += 1 };
  s4 -> s3 [0, 45] { R184 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s4 [46, 46] { R184 += 1 };
  s4 -> s3 [47, 114] { R184 += 1 };
  s4 -> s5 [115, 115] { R184 += 1 };
  s4 -> s3 [116, 65535] { R184 += 1 };
  s5 -> s3 [0, 45] { R184 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s4 [46, 46] { R184 += 1 };
  s5 -> s3 [47, 110] { R184 += 1 };
  s5 -> s6 [111, 111] { R184 += 1 };
  s5 -> s3 [112, 65535] { R184 += 1 };
  s6 -> s3 [0, 45] { R184 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s4 [46, 46] { R184 += 1 };
  s6 -> s3 [47, 98] { R184 += 1 };
  s6 -> s7 [99, 99] { R184 += 1 };
  s6 -> s3 [100, 65535] { R184 += 1 };
  s7 -> s3 [0, 45] { R184 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s4 [46, 46] { R184 += 1 };
  s7 -> s3 [47, 106] { R184 += 1 };
  s7 -> s3 [108, 65535] { R184 += 1 };
  s8 -> s1 [0, 45] { R184 += 1 };
  s8 -> s2 [46, 46] { R184 += 1 };
  s8 -> s3 [47, 47] { R184 += 1 };
  s8 -> s1 [48, 110] { R184 += 1 };
  s8 -> s9 [111, 111] { R184 += 1 };
  s8 -> s1 [112, 65535] { R184 += 1 };
  s9 -> s1 [0, 45] { R184 += 1 };
  s9 -> s2 [46, 46] { R184 += 1 };
  s9 -> s3 [47, 47] { R184 += 1 };
  s9 -> s1 [48, 98] { R184 += 1 };
  s9 -> s10 [99, 99] { R184 += 1 };
  s9 -> s1 [100, 65535] { R184 += 1 };
  s10 -> s1 [0, 45] { R184 += 1 };
  s10 -> s2 [46, 46] { R184 += 1 };
  s10 -> s3 [47, 47] { R184 += 1 };
  s10 -> s1 [48, 106] { R184 += 1 };
  s10 -> s1 [108, 65535] { R184 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_3 {
  init s0;
  s0 -> s0 [0, 65535] { R185 += 1, R186 += 1 };
  s0 -> s1 [0, 65535] { R186 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R186 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s1 [0, 46] { R188 += 1, R14 += 1 };
  s0 -> s2 [0, 65535] { R188 += 1, R13 += 1, R14 += 1 };
  s0 -> s0 [0, 65535] { R187 += 1, R188 += 1 };
  s0 -> s3 [47, 47] { R188 += 1 };
  s0 -> s1 [48, 65535] { R188 += 1, R14 += 1 };
  s1 -> s1 [0, 46] { R188 += 1, R14 += 1 };
  s1 -> s3 [47, 47] { R188 += 1 };
  s1 -> s1 [48, 65535] { R188 += 1, R14 += 1 };
  s2 -> s1 [0, 46] { R188 += 1, R14 += 1 };
  s2 -> s2 [0, 65535] { R188 += 1, R13 += 1, R14 += 1 };
  s2 -> s3 [47, 47] { R188 += 1 };
  s2 -> s1 [48, 65535] { R188 += 1, R14 += 1 };
  s3 -> s3 [0, 65535] { R188 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 36] { R190 += 1, R152 += 1 };
  s0 -> s2 [0, 65535] { R190 += 1, R151 += 1, R152 += 1 };
  s0 -> s0 [0, 65535] { R189 += 1, R190 += 1 };
  s0 -> s3 [37, 37] { R190 += 1, R152 += 1 };
  s0 -> s1 [38, 42] { R190 += 1, R152 += 1 };
  s0 -> s1 [44, 45] { R190 += 1, R152 += 1 };
  s0 -> s1 [47, 62] { R190 += 1, R152 += 1 };
  s0 -> s1 [64, 65535] { R190 += 1, R152 += 1 };
  s1 -> s1 [0, 36] { R190 += 1, R152 += 1 };
  s1 -> s3 [37, 37] { R190 += 1, R152 += 1 };
  s1 -> s1 [38, 42] { R190 += 1, R152 += 1 };
  s1 -> s1 [44, 45] { R190 += 1, R152 += 1 };
  s1 -> s1 [47, 62] { R190 += 1, R152 += 1 };
  s1 -> s1 [64, 65535] { R190 += 1, R152 += 1 };
  s2 -> s1 [0, 36] { R190 += 1, R152 += 1 };
  s2 -> s2 [0, 65535] { R190 += 1, R151 += 1, R152 += 1 };
  s2 -> s3 [37, 37] { R190 += 1, R152 += 1 };
  s2 -> s1 [38, 42] { R190 += 1, R152 += 1 };
  s2 -> s1 [44, 45] { R190 += 1, R152 += 1 };
  s2 -> s1 [47, 62] { R190 += 1, R152 += 1 };
  s2 -> s1 [64, 65535] { R190 += 1, R152 += 1 };
  s3 -> s3 [0, 42] { R190 += 1, R152 += 1 };
  s3 -> s3 [0, 65535] { R190 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [44, 45] { R190 += 1, R152 += 1 };
  s3 -> s3 [47, 62] { R190 += 1, R152 += 1 };
  s3 -> s3 [64, 65535] { R190 += 1, R152 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton uri_6 {
  init s0;
  s0 -> s1 [0, 65535] { R192 += 1, R154 += 1, R1 += 1 };
  s0 -> s2 [0, 65535] { R192 += 1, R153 += 1, R154 += 1 };
  s0 -> s0 [0, 65535] { R191 += 1, R192 += 1 };
  s1 -> s1 [0, 65535] { R192 += 1, R154 += 1, R1 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R192 += 1 };
  s2 -> s1 [0, 65535] { R192 += 1, R154 += 1, R1 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R192 += 1, R153 += 1, R154 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R192 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_7 {
  init s0;
  s0 -> s1 [0, 62] { R194 += 1, R156 += 1, R120 += 1 };
  s0 -> s2 [0, 65535] { R194 += 1, R156 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [0, 65535] { R194 += 1, R155 += 1, R156 += 1 };
  s0 -> s0 [0, 65535] { R193 += 1, R194 += 1 };
  s0 -> s4 [63, 63] { R194 += 1, R156 += 1, R120 += 1 };
  s0 -> s1 [64, 65535] { R194 += 1, R156 += 1, R120 += 1 };
  s1 -> s1 [0, 65535] { R194 += 1, R156 += 1, R120 += 1 };
  s1 -> s7 [0, 65535] { R194 += 1, R156 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R194 += 1 };
  s2 -> s1 [0, 62] { R194 += 1, R156 += 1, R120 += 1 };
  s2 -> s2 [0, 65535] { R194 += 1, R156 += 1, R119 += 1, R120 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R194 += 1 };
  s2 -> s4 [63, 63] { R194 += 1, R156 += 1, R120 += 1 };
  s2 -> s1 [64, 65535] { R194 += 1, R156 += 1, R120 += 1 };
  s3 -> s1 [0, 62] { R194 += 1, R156 += 1, R120 += 1 };
  s3 -> s2 [0, 65535] { R194 += 1, R156 += 1, R119 += 1, R120 += 1 };
  s3 -> s3 [0, 65535] { R194 += 1, R155 += 1, R156 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s4 [63, 63] { R194 += 1, R156 += 1, R120 += 1 };
  s3 -> s1 [64, 65535] { R194 += 1, R156 += 1, R120 += 1 };
  s4 -> s1 [0, 65535] { R194 += 1, R156 += 1, R120 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R194 += 1 };
  s7 -> s7 [0, 65535] { R194 += 1, R156 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R194 += 1 };
  accepting s3, s5, s2, s6, s1, s7, s0;
};
automaton uri_8 {
  init s0;
  s0 -> s1 [0, 65535] { R196 += 1, R157 += 1, R158 += 1 };
  s0 -> s2 [0, 65535] { R196 += 1, R158 += 1, R121 += 1, R122 += 1 };
  s0 -> s3 [0, 65535] { R196 += 1, R158 += 1, R122 += 1, R6 += 1 };
  s0 -> s0 [0, 65535] { R195 += 1, R196 += 1 };
  s1 -> s1 [0, 65535] { R196 += 1, R157 += 1, R158 += 1 };
  s1 -> s2 [0, 65535] { R196 += 1, R158 += 1, R121 += 1, R122 += 1 };
  s1 -> s3 [0, 65535] { R196 += 1, R158 += 1, R122 += 1, R6 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R196 += 1, R158 += 1, R121 += 1, R122 += 1 };
  s2 -> s3 [0, 65535] { R196 += 1, R158 += 1, R122 += 1, R6 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R196 += 1 };
  s3 -> s4 [0, 65535] { R196 += 1, R158 += 1 };
  s3 -> s3 [0, 65535] { R196 += 1, R158 += 1, R122 += 1, R6 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R196 += 1 };
  s4 -> s4 [0, 65535] { R196 += 1, R158 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R196 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R196 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_9 {
  init s0;
  s0 -> s1 [0, 63] { R198 += 1, R160 += 1 };
  s0 -> s0 [0, 65535] { R197 += 1, R198 += 1 };
  s0 -> s2 [0, 65535] { R198 += 1, R159 += 1, R160 += 1 };
  s0 -> s3 [64, 64] { R198 += 1, R160 += 1 };
  s0 -> s1 [65, 65535] { R198 += 1, R160 += 1 };
  s1 -> s1 [0, 63] { R198 += 1, R160 += 1 };
  s1 -> s3 [64, 64] { R198 += 1, R160 += 1 };
  s1 -> s1 [65, 65535] { R198 += 1, R160 += 1 };
  s2 -> s1 [0, 63] { R198 += 1, R160 += 1 };
  s2 -> s2 [0, 65535] { R198 += 1, R159 += 1, R160 += 1 };
  s2 -> s3 [64, 64] { R198 += 1, R160 += 1 };
  s2 -> s1 [65, 65535] { R198 += 1, R160 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R198 += 1 };
  s3 -> s3 [0, 65535] { R198 += 1, R160 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R198 += 1 };
  accepting s3, s4, s5;
};
automaton uri_10 {
  init s0;
  s0 -> s0 [0, 65535] { R199 += 1, R200 += 1 };
  s0 -> s1 [0, 65535] { R200 += 1, R161 += 1, R162 += 1 };
  s0 -> s2 [0, 65535] { R200 += 1, R162 += 1, R3 += 1 };
  s1 -> s1 [0, 65535] { R200 += 1, R161 += 1, R162 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R200 += 1, R162 += 1, R3 += 1 };
  s2 -> s3 [0, 65535] { R200 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R200 += 1, R162 += 1, R3 += 1 };
  s3 -> s3 [0, 65535] { R200 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_11 {
  init s0;
  s0 -> s1 [0, 36] { R202 += 1, R164 += 1, R132 += 1 };
  s0 -> s2 [0, 65535] { R202 += 1, R164 += 1, R131 += 1, R132 += 1 };
  s0 -> s3 [0, 65535] { R202 += 1, R163 += 1, R164 += 1 };
  s0 -> s0 [0, 65535] { R201 += 1, R202 += 1 };
  s0 -> s1 [38, 42] { R202 += 1, R164 += 1, R132 += 1 };
  s0 -> s1 [44, 57] { R202 += 1, R164 += 1, R132 += 1 };
  s0 -> s1 [59, 63] { R202 += 1, R164 += 1, R132 += 1 };
  s0 -> s1 [65, 65535] { R202 += 1, R164 += 1, R132 += 1 };
  s1 -> s1 [0, 36] { R202 += 1, R164 += 1, R132 += 1 };
  s1 -> s1 [0, 65535] { R202 += 1, R164 += 1 };
  s1 -> s5 [0, 65535] { R202 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [38, 42] { R202 += 1, R164 += 1, R132 += 1 };
  s1 -> s1 [44, 57] { R202 += 1, R164 += 1, R132 += 1 };
  s1 -> s1 [59, 63] { R202 += 1, R164 += 1, R132 += 1 };
  s1 -> s1 [65, 65535] { R202 += 1, R164 += 1, R132 += 1 };
  s2 -> s1 [0, 36] { R202 += 1, R164 += 1, R132 += 1 };
  s2 -> s2 [0, 65535] { R202 += 1, R164 += 1, R131 += 1, R132 += 1 };
  s2 -> s5 [0, 65535] { R202 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [38, 42] { R202 += 1, R164 += 1, R132 += 1 };
  s2 -> s1 [44, 57] { R202 += 1, R164 += 1, R132 += 1 };
  s2 -> s1 [59, 63] { R202 += 1, R164 += 1, R132 += 1 };
  s2 -> s1 [65, 65535] { R202 += 1, R164 += 1, R132 += 1 };
  s3 -> s1 [0, 36] { R202 += 1, R164 += 1, R132 += 1 };
  s3 -> s2 [0, 65535] { R202 += 1, R164 += 1, R131 += 1, R132 += 1 };
  s3 -> s3 [0, 65535] { R202 += 1, R163 += 1, R164 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [38, 42] { R202 += 1, R164 += 1, R132 += 1 };
  s3 -> s1 [44, 57] { R202 += 1, R164 += 1, R132 += 1 };
  s3 -> s1 [59, 63] { R202 += 1, R164 += 1, R132 += 1 };
  s3 -> s1 [65, 65535] { R202 += 1, R164 += 1, R132 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R202 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_12 {
  init s0;
  s0 -> s1 [0, 65535] { R204 += 1, R166 += 1, R134 += 1, R0 += 1 };
  s0 -> s2 [0, 65535] { R204 += 1, R165 += 1, R166 += 1 };
  s0 -> s0 [0, 65535] { R203 += 1, R204 += 1 };
  s0 -> s3 [0, 65535] { R204 += 1, R166 += 1, R133 += 1, R134 += 1 };
  s1 -> s6 [0, 65535] { R204 += 1, R166 += 1 };
  s1 -> s1 [0, 65535] { R204 += 1, R166 += 1, R134 += 1, R0 += 1 };
  s1 -> s4 [0, 65535] { R204 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R204 += 1, R166 += 1, R134 += 1, R0 += 1 };
  s2 -> s2 [0, 65535] { R204 += 1, R165 += 1, R166 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R204 += 1, R166 += 1, R133 += 1, R134 += 1 };
  s3 -> s1 [0, 65535] { R204 += 1, R166 += 1, R134 += 1, R0 += 1 };
  s3 -> s4 [0, 65535] { R204 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R204 += 1, R166 += 1, R133 += 1, R134 += 1 };
  s4 -> s4 [0, 65535] { R204 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R204 += 1, R166 += 1 };
  s6 -> s4 [0, 65535] { R204 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_13 {
  init s0;
  s0 -> s1 [0, 43] { R206 += 1, R168 += 1, R136 += 1 };
  s0 -> s2 [0, 65535] { R206 += 1, R167 += 1, R168 += 1 };
  s0 -> s0 [0, 65535] { R205 += 1, R206 += 1 };
  s0 -> s3 [0, 65535] { R206 += 1, R168 += 1, R135 += 1, R136 += 1 };
  s0 -> s1 [45, 64] { R206 += 1, R168 += 1, R136 += 1 };
  s0 -> s4 [90, 90] { R206 += 1, R168 += 1, R136 += 1 };
  s0 -> s1 [91, 65535] { R206 += 1, R168 += 1, R136 += 1 };
  s1 -> s1 [0, 43] { R206 += 1, R168 += 1, R136 += 1 };
  s1 -> s1 [45, 64] { R206 += 1, R168 += 1, R136 += 1 };
  s1 -> s4 [90, 90] { R206 += 1, R168 += 1, R136 += 1 };
  s1 -> s1 [91, 65535] { R206 += 1, R168 += 1, R136 += 1 };
  s2 -> s1 [0, 43] { R206 += 1, R168 += 1, R136 += 1 };
  s2 -> s2 [0, 65535] { R206 += 1, R167 += 1, R168 += 1 };
  s2 -> s3 [0, 65535] { R206 += 1, R168 += 1, R135 += 1, R136 += 1 };
  s2 -> s1 [45, 64] { R206 += 1, R168 += 1, R136 += 1 };
  s2 -> s4 [90, 90] { R206 += 1, R168 += 1, R136 += 1 };
  s2 -> s1 [91, 65535] { R206 += 1, R168 += 1, R136 += 1 };
  s3 -> s1 [0, 43] { R206 += 1, R168 += 1, R136 += 1 };
  s3 -> s3 [0, 65535] { R206 += 1, R168 += 1, R135 += 1, R136 += 1 };
  s3 -> s1 [45, 64] { R206 += 1, R168 += 1, R136 += 1 };
  s3 -> s4 [90, 90] { R206 += 1, R168 += 1, R136 += 1 };
  s3 -> s1 [91, 65535] { R206 += 1, R168 += 1, R136 += 1 };
  s4 -> s4 [0, 43] { R206 += 1, R168 += 1, R136 += 1 };
  s4 -> s4 [0, 65535] { R206 += 1, R168 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R206 += 1 };
  s4 -> s4 [45, 64] { R206 += 1, R168 += 1, R136 += 1 };
  s4 -> s4 [90, 65535] { R206 += 1, R168 += 1, R136 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R206 += 1 };
  accepting s4, s5, s6;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 65535] { R208 += 1, R170 += 1, R138 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R207 += 1, R208 += 1 };
  s0 -> s2 [0, 65535] { R208 += 1, R169 += 1, R170 += 1 };
  s0 -> s3 [0, 65535] { R208 += 1, R170 += 1, R137 += 1, R138 += 1 };
  s1 -> s4 [0, 65535] { R208 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R208 += 1, R170 += 1 };
  s1 -> s1 [0, 65535] { R208 += 1, R170 += 1, R138 += 1, R2 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R208 += 1, R170 += 1, R138 += 1, R2 += 1 };
  s2 -> s2 [0, 65535] { R208 += 1, R169 += 1, R170 += 1 };
  s2 -> s3 [0, 65535] { R208 += 1, R170 += 1, R137 += 1, R138 += 1 };
  s3 -> s4 [0, 65535] { R208 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R208 += 1, R170 += 1, R138 += 1, R2 += 1 };
  s3 -> s3 [0, 65535] { R208 += 1, R170 += 1, R137 += 1, R138 += 1 };
  s4 -> s4 [0, 65535] { R208 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R208 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R208 += 1, R170 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_15 {
  init s0;
  s0 -> s1 [0, 57] { R210 += 1, R172 += 1, R140 += 1 };
  s0 -> s2 [0, 65535] { R210 += 1, R172 += 1, R139 += 1, R140 += 1 };
  s0 -> s0 [0, 65535] { R209 += 1, R210 += 1 };
  s0 -> s3 [0, 65535] { R210 += 1, R172 += 1, R140 += 1, R8 += 1 };
  s0 -> s4 [0, 65535] { R210 += 1, R171 += 1, R172 += 1 };
  s0 -> s5 [58, 58] { R210 += 1, R172 += 1, R140 += 1 };
  s0 -> s1 [59, 65535] { R210 += 1, R172 += 1, R140 += 1 };
  s1 -> s1 [0, 57] { R210 += 1, R172 += 1, R140 += 1 };
  s1 -> s7 [0, 65535] { R210 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R210 += 1, R172 += 1 };
  s1 -> s5 [58, 58] { R210 += 1, R172 += 1, R140 += 1 };
  s1 -> s1 [59, 65535] { R210 += 1, R172 += 1, R140 += 1 };
  s2 -> s1 [0, 57] { R210 += 1, R172 += 1, R140 += 1 };
  s2 -> s2 [0, 65535] { R210 += 1, R172 += 1, R139 += 1, R140 += 1 };
  s2 -> s3 [0, 65535] { R210 += 1, R172 += 1, R140 += 1, R8 += 1 };
  s2 -> s7 [0, 65535] { R210 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s5 [58, 58] { R210 += 1, R172 += 1, R140 += 1 };
  s2 -> s1 [59, 65535] { R210 += 1, R172 += 1, R140 += 1 };
  s3 -> s1 [0, 57] { R210 += 1, R172 += 1, R140 += 1 };
  s3 -> s3 [0, 65535] { R210 += 1, R172 += 1, R140 += 1, R8 += 1 };
  s3 -> s7 [0, 65535] { R210 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s8 [0, 65535] { R210 += 1, R172 += 1 };
  s3 -> s5 [58, 58] { R210 += 1, R172 += 1, R140 += 1 };
  s3 -> s1 [59, 65535] { R210 += 1, R172 += 1, R140 += 1 };
  s4 -> s1 [0, 57] { R210 += 1, R172 += 1, R140 += 1 };
  s4 -> s2 [0, 65535] { R210 += 1, R172 += 1, R139 += 1, R140 += 1 };
  s4 -> s3 [0, 65535] { R210 += 1, R172 += 1, R140 += 1, R8 += 1 };
  s4 -> s4 [0, 65535] { R210 += 1, R171 += 1, R172 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s5 [58, 58] { R210 += 1, R172 += 1, R140 += 1 };
  s4 -> s1 [59, 65535] { R210 += 1, R172 += 1, R140 += 1 };
  s5 -> s5 [0, 65535] { R210 += 1, R172 += 1, R140 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R210 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R210 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R210 += 1, R172 += 1 };
  accepting s3, s4, s8, s2, s6, s1, s7, s0;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 89] { R212 += 1, R174 += 1, R142 += 1 };
  s0 -> s0 [0, 65535] { R211 += 1, R212 += 1 };
  s0 -> s2 [0, 65535] { R212 += 1, R173 += 1, R174 += 1 };
  s0 -> s3 [0, 65535] { R212 += 1, R174 += 1, R141 += 1, R142 += 1 };
  s0 -> s4 [0, 65535] { R212 += 1, R174 += 1, R142 += 1, R9 += 1 };
  s0 -> s5 [90, 90] { R212 += 1, R174 += 1, R142 += 1 };
  s0 -> s1 [91, 65535] { R212 += 1, R174 += 1, R142 += 1 };
  s1 -> s1 [0, 89] { R212 += 1, R174 += 1, R142 += 1 };
  s1 -> s1 [0, 65535] { R212 += 1, R174 += 1 };
  s1 -> s7 [0, 65535] { R212 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s5 [90, 90] { R212 += 1, R174 += 1, R142 += 1 };
  s1 -> s1 [91, 65535] { R212 += 1, R174 += 1, R142 += 1 };
  s2 -> s1 [0, 89] { R212 += 1, R174 += 1, R142 += 1 };
  s2 -> s2 [0, 65535] { R212 += 1, R173 += 1, R174 += 1 };
  s2 -> s3 [0, 65535] { R212 += 1, R174 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [0, 65535] { R212 += 1, R174 += 1, R142 += 1, R9 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s5 [90, 90] { R212 += 1, R174 += 1, R142 += 1 };
  s2 -> s1 [91, 65535] { R212 += 1, R174 += 1, R142 += 1 };
  s3 -> s1 [0, 89] { R212 += 1, R174 += 1, R142 += 1 };
  s3 -> s3 [0, 65535] { R212 += 1, R174 += 1, R141 += 1, R142 += 1 };
  s3 -> s4 [0, 65535] { R212 += 1, R174 += 1, R142 += 1, R9 += 1 };
  s3 -> s7 [0, 65535] { R212 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s5 [90, 90] { R212 += 1, R174 += 1, R142 += 1 };
  s3 -> s1 [91, 65535] { R212 += 1, R174 += 1, R142 += 1 };
  s4 -> s1 [0, 89] { R212 += 1, R174 += 1, R142 += 1 };
  s4 -> s4 [0, 65535] { R212 += 1, R174 += 1, R142 += 1, R9 += 1 };
  s4 -> s6 [0, 65535] { R212 += 1, R174 += 1 };
  s4 -> s7 [0, 65535] { R212 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s5 [90, 90] { R212 += 1, R174 += 1, R142 += 1 };
  s4 -> s1 [91, 65535] { R212 += 1, R174 += 1, R142 += 1 };
  s5 -> s5 [0, 65535] { R212 += 1, R174 += 1, R142 += 1 };
  s6 -> s6 [0, 65535] { R212 += 1, R174 += 1 };
  s6 -> s7 [0, 65535] { R212 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R212 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s2, s6, s1, s7, s0;
};
automaton uri_17 {
  init s0;
  s0 -> s1 [0, 90] { R214 += 1, R176 += 1, R144 += 1, R124 += 1 };
  s0 -> s0 [0, 65535] { R213 += 1, R214 += 1 };
  s0 -> s2 [0, 65535] { R214 += 1, R175 += 1, R176 += 1 };
  s0 -> s3 [0, 65535] { R214 += 1, R176 += 1, R144 += 1, R123 += 1, R124 += 1 };
  s0 -> s4 [0, 65535] { R214 += 1, R176 += 1, R143 += 1, R144 += 1 };
  s0 -> s5 [91, 91] { R214 += 1, R176 += 1, R144 += 1, R124 += 1 };
  s0 -> s1 [92, 65535] { R214 += 1, R176 += 1, R144 += 1, R124 += 1 };
  s1 -> s6 [0, 65535] { R214 += 1 };
  s1 -> s1 [0, 65535] { R214 += 1, R176 += 1, R144 += 1, R124 += 1 };
  s1 -> s9 [0, 65535] { R214 += 1, R176 += 1, R144 += 1 };
  s1 -> s8 [0, 65535] { R214 += 1, R176 += 1 };
  s1 -> s7 [0, 65535];
  s2 -> s1 [0, 90] { R214 += 1, R176 += 1, R144 += 1, R124 += 1 };
  s2 -> s2 [0, 65535] { R214 += 1, R175 += 1, R176 += 1 };
  s2 -> s3 [0, 65535] { R214 += 1, R176 += 1, R144 += 1, R123 += 1, R124 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [0, 65535] { R214 += 1, R176 += 1, R143 += 1, R144 += 1 };
  s2 -> s5 [91, 91] { R214 += 1, R176 += 1, R144 += 1, R124 += 1 };
  s2 -> s1 [92, 65535] { R214 += 1, R176 += 1, R144 += 1, R124 += 1 };
  s3 -> s1 [0, 90] { R214 += 1, R176 += 1, R144 += 1, R124 += 1 };
  s3 -> s6 [0, 65535] { R214 += 1 };
  s3 -> s3 [0, 65535] { R214 += 1, R176 += 1, R144 += 1, R123 += 1, R124 += 1 };
  s3 -> s8 [0, 65535] { R214 += 1, R176 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s5 [91, 91] { R214 += 1, R176 += 1, R144 += 1, R124 += 1 };
  s3 -> s1 [92, 65535] { R214 += 1, R176 += 1, R144 += 1, R124 += 1 };
  s4 -> s1 [0, 90] { R214 += 1, R176 += 1, R144 += 1, R124 += 1 };
  s4 -> s6 [0, 65535] { R214 += 1 };
  s4 -> s3 [0, 65535] { R214 += 1, R176 += 1, R144 += 1, R123 += 1, R124 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R214 += 1, R176 += 1, R143 += 1, R144 += 1 };
  s4 -> s5 [91, 91] { R214 += 1, R176 += 1, R144 += 1, R124 += 1 };
  s4 -> s1 [92, 65535] { R214 += 1, R176 += 1, R144 += 1, R124 += 1 };
  s5 -> s1 [0, 65535] { R214 += 1, R176 += 1, R144 += 1, R124 += 1 };
  s6 -> s6 [0, 65535] { R214 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R214 += 1 };
  s8 -> s8 [0, 65535] { R214 += 1, R176 += 1 };
  s8 -> s7 [0, 65535];
  s9 -> s6 [0, 65535] { R214 += 1 };
  s9 -> s9 [0, 65535] { R214 += 1, R176 += 1, R144 += 1 };
  s9 -> s8 [0, 65535] { R214 += 1, R176 += 1 };
  s9 -> s7 [0, 65535];
  accepting s3, s4, s8, s2, s9, s6, s1, s7, s0;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 65535] { R216 += 1, R177 += 1, R178 += 1 };
  s0 -> s2 [0, 65535] { R216 += 1, R178 += 1, R146 += 1, R126 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R215 += 1, R216 += 1 };
  s0 -> s3 [0, 65535] { R216 += 1, R178 += 1, R145 += 1, R146 += 1 };
  s0 -> s4 [0, 65535] { R216 += 1, R178 += 1, R146 += 1, R125 += 1, R126 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R216 += 1, R177 += 1, R178 += 1 };
  s1 -> s2 [0, 65535] { R216 += 1, R178 += 1, R146 += 1, R126 += 1, R7 += 1 };
  s1 -> s3 [0, 65535] { R216 += 1, R178 += 1, R145 += 1, R146 += 1 };
  s1 -> s4 [0, 65535] { R216 += 1, R178 += 1, R146 += 1, R125 += 1, R126 += 1 };
  s2 -> s8 [0, 65535] { R216 += 1, R178 += 1, R146 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R216 += 1, R178 += 1, R146 += 1, R126 += 1, R7 += 1 };
  s2 -> s6 [0, 65535] { R216 += 1, R178 += 1 };
  s2 -> s7 [0, 65535] { R216 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R216 += 1, R178 += 1, R146 += 1, R126 += 1, R7 += 1 };
  s3 -> s7 [0, 65535] { R216 += 1 };
  s3 -> s3 [0, 65535] { R216 += 1, R178 += 1, R145 += 1, R146 += 1 };
  s3 -> s4 [0, 65535] { R216 += 1, R178 += 1, R146 += 1, R125 += 1, R126 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R216 += 1, R178 += 1, R146 += 1, R126 += 1, R7 += 1 };
  s4 -> s6 [0, 65535] { R216 += 1, R178 += 1 };
  s4 -> s7 [0, 65535] { R216 += 1 };
  s4 -> s4 [0, 65535] { R216 += 1, R178 += 1, R146 += 1, R125 += 1, R126 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R216 += 1, R178 += 1 };
  s6 -> s7 [0, 65535] { R216 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R216 += 1 };
  s8 -> s8 [0, 65535] { R216 += 1, R178 += 1, R146 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R216 += 1, R178 += 1 };
  s8 -> s7 [0, 65535] { R216 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_19 {
  init s0;
  s0 -> s1 [0, 89] { R218 += 1, R180 += 1, R148 += 1, R128 += 1 };
  s0 -> s0 [0, 65535] { R217 += 1, R218 += 1 };
  s0 -> s2 [0, 65535] { R218 += 1, R180 += 1, R148 += 1, R127 += 1, R128 += 1 };
  s0 -> s3 [0, 65535] { R218 += 1, R180 += 1, R147 += 1, R148 += 1 };
  s0 -> s4 [0, 65535] { R218 += 1, R179 += 1, R180 += 1 };
  s0 -> s1 [91, 65535] { R218 += 1, R180 += 1, R148 += 1, R128 += 1 };
  s1 -> s1 [0, 89] { R218 += 1, R180 += 1, R148 += 1, R128 += 1 };
  s1 -> s6 [0, 65535] { R218 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R218 += 1, R180 += 1, R148 += 1 };
  s1 -> s7 [0, 65535] { R218 += 1, R180 += 1 };
  s1 -> s1 [91, 65535] { R218 += 1, R180 += 1, R148 += 1, R128 += 1 };
  s2 -> s1 [0, 89] { R218 += 1, R180 += 1, R148 += 1, R128 += 1 };
  s2 -> s2 [0, 65535] { R218 += 1, R180 += 1, R148 += 1, R127 += 1, R128 += 1 };
  s2 -> s6 [0, 65535] { R218 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R218 += 1, R180 += 1 };
  s2 -> s1 [91, 65535] { R218 += 1, R180 += 1, R148 += 1, R128 += 1 };
  s3 -> s1 [0, 89] { R218 += 1, R180 += 1, R148 += 1, R128 += 1 };
  s3 -> s2 [0, 65535] { R218 += 1, R180 += 1, R148 += 1, R127 += 1, R128 += 1 };
  s3 -> s3 [0, 65535] { R218 += 1, R180 += 1, R147 += 1, R148 += 1 };
  s3 -> s6 [0, 65535] { R218 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [91, 65535] { R218 += 1, R180 += 1, R148 += 1, R128 += 1 };
  s4 -> s1 [0, 89] { R218 += 1, R180 += 1, R148 += 1, R128 += 1 };
  s4 -> s2 [0, 65535] { R218 += 1, R180 += 1, R148 += 1, R127 += 1, R128 += 1 };
  s4 -> s3 [0, 65535] { R218 += 1, R180 += 1, R147 += 1, R148 += 1 };
  s4 -> s4 [0, 65535] { R218 += 1, R179 += 1, R180 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s1 [91, 65535] { R218 += 1, R180 += 1, R148 += 1, R128 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R218 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R218 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R218 += 1, R180 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 65535] { R220 += 1, R182 += 1, R149 += 1, R150 += 1 };
  s0 -> s2 [0, 65535] { R220 += 1, R182 += 1, R150 += 1, R130 += 1, R118 += 1 };
  s0 -> s3 [0, 65535] { R220 += 1, R181 += 1, R182 += 1 };
  s0 -> s0 [0, 65535] { R219 += 1, R220 += 1 };
  s0 -> s4 [0, 65535] { R220 += 1, R182 += 1, R150 += 1, R129 += 1, R130 += 1 };
  s1 -> s5 [0, 65535] { R220 += 1 };
  s1 -> s1 [0, 65535] { R220 += 1, R182 += 1, R149 += 1, R150 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s2 [0, 65535] { R220 += 1, R182 += 1, R150 += 1, R130 += 1, R118 += 1 };
  s1 -> s4 [0, 65535] { R220 += 1, R182 += 1, R150 += 1, R129 += 1, R130 += 1 };
  s2 -> s5 [0, 65535] { R220 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R220 += 1, R182 += 1, R150 += 1, R130 += 1, R118 += 1 };
  s2 -> s7 [0, 65535] { R220 += 1, R182 += 1 };
  s2 -> s8 [0, 65535] { R220 += 1, R182 += 1, R150 += 1 };
  s3 -> s1 [0, 65535] { R220 += 1, R182 += 1, R149 += 1, R150 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R220 += 1, R182 += 1, R150 += 1, R130 += 1, R118 += 1 };
  s3 -> s3 [0, 65535] { R220 += 1, R181 += 1, R182 += 1 };
  s3 -> s4 [0, 65535] { R220 += 1, R182 += 1, R150 += 1, R129 += 1, R130 += 1 };
  s4 -> s5 [0, 65535] { R220 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s2 [0, 65535] { R220 += 1, R182 += 1, R150 += 1, R130 += 1, R118 += 1 };
  s4 -> s7 [0, 65535] { R220 += 1, R182 += 1 };
  s4 -> s4 [0, 65535] { R220 += 1, R182 += 1, R150 += 1, R129 += 1, R130 += 1 };
  s5 -> s5 [0, 65535] { R220 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R220 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R220 += 1, R182 += 1 };
  s8 -> s5 [0, 65535] { R220 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R220 += 1, R182 += 1 };
  s8 -> s8 [0, 65535] { R220 += 1, R182 += 1, R150 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
};
constraint R2 = R130 && R3 = R150 && R4 = R158 && R5 = R220 && R13 = 0 && R14 = R182 && R123 = 0 && R124 = 1 && R125 = 0 && R126 = 1 && R127 = 0 && R128 = R130 && R129 = 0 && R131 = 0 && R132 = 5 && R133 = 0 && R134 = 5 && R135 = 6 && R136 = R150 && R137 = 6 && R138 = R150 && R139 = 6 && R140 = R150 && R141 = 6 && R142 = R150 && R143 = 6 && R144 = R150 && R145 = 6 && R146 = R150 && R147 = 6 && R148 = R150 && R149 = 6 && R151 - R182 = 1 && R152 = R158 && R153 - R182 = 1 && R154 = R158 && R155 - R182 = 1 && R156 = R158 && R157 - R182 = 1 && R159 = 0 && R160 = R182 && R161 = 0 && R162 = R182 && R163 = 0 && R164 = R182 && R165 = 0 && R166 = R182 && R167 = 0 && R168 = R182 && R169 = 0 && R170 = R182 && R171 = 0 && R172 = R182 && R173 = 0 && R174 = R182 && R175 = 0 && R176 = R182 && R177 = 0 && R178 = R182 && R179 = 0 && R180 = R182 && R181 = 0 && R183 = 10 && R184 = R220 && R185 = 10 && R186 = R220 && R187 = 10 && R188 = R220 && R189 = 10 && R190 = R220 && R191 = 10 && R192 = R220 && R193 = 10 && R194 = R220 && R195 = 10 && R196 = R220 && R197 = 10 && R198 = R220 && R199 = 10 && R200 = R220 && R201 = 10 && R202 = R220 && R203 = 10 && R204 = R220 && R205 = 10 && R206 = R220 && R207 = 10 && R208 = R220 && R209 = 10 && R210 = R220 && R211 = 10 && R212 = R220 && R213 = 10 && R214 = R220 && R215 = 10 && R216 = R220 && R217 = 10 && R218 = R220 && R219 = 10 && R0 != 0 && R1 != 0 && R8 < 1 && R9 < 1 && 0 < R130 && 5 < R150 && R182 < R158 && -1 < R182 && 9 < R220 && (R119 != 0 || ((R6 != 0 || ((R1 != R120 || R120 = 1 || R120 < 0) && (R1 = R120 || R120 = 1 || R1 < 1))) && (R6 = 0 || ((R1 != R120 || R120 = 1 || R120 < 0) && (R120 != 1 || -1 < R1) && (R1 = R120 || R120 = 1))))) && (R121 != 0 || ((R6 != 0 || ((R1 != R122 || R122 = 1 || R122 < 0) && (R1 = R122 || R122 = 1 || R1 < 1))) && (R6 = 0 || ((R1 != R122 || R122 = 1 || R122 < 0) && (R122 != 1 || -1 < R1) && (R1 = R122 || R122 = 1))))) && (R119 = 0 || (R6 = 0 && R1 < 0)) && (R121 = 0 || (R6 = 0 && R1 < 0));
// End of Parikh automata intersection problem
