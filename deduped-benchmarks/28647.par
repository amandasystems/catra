// Parikh automata intersection problem, generated by OSTRICH+
counter int R0, R1, R10, R11, R2, R3, R4, R4721, R4724, R4728, R4729, R5, R5316, R5317, R5321, R5322, R5467, R5468, R5469, R5470, R5471, R5472, R5473, R5474, R5475, R5476, R5477, R5478, R5479, R5480, R5481, R5482, R5483, R5484, R5485, R5486, R5487, R5488, R5489, R5490, R5491, R5492, R5493, R5494, R5495, R5496, R5497, R5498, R5499, R5500, R5501, R5502, R5503, R5504, R5505, R5506, R5507, R5508, R5509, R5510, R5511, R5512, R5513, R5514, R5515, R5516, R5517, R5518, R5519, R5520, R5521, R5522, R5523, R5524, R5525, R5526, R5527, R5528, R5529, R5530, R5531, R5532, R5533, R5534, R5535, R5536, R5537, R5538, R5539, R5540, R5541, R5542, R5543, R5544, R5545, R5546, R5547, R5548, R5549, R5550, R5551, R5552, R5553, R5554, R5555, R5556, R5557, R5558, R5559, R5560, R5561, R5562, R5563, R5564, R5565, R5566, R5567, R5568, R5569, R5570, R5571, R5572, R5573, R5574, R5575, R5576, R5577, R5578, R5579, R5580, R5581, R5582, R5583, R5584, R5585, R5586, R5587, R5588, R5589, R5590, R5591, R5592, R5593, R5594, R5595, R5596, R5597, R5598, R5599, R5600, R5601, R5602, R5603, R5604, R5605, R5606, R5607, R5608, R5609, R5610, R6, R7, R8;
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R6 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 45] { R5560 += 1 };
  s0 -> s0 [0, 65535] { R5559 += 1, R5560 += 1 };
  s0 -> s2 [46, 46] { R5560 += 1 };
  s0 -> s3 [47, 47] { R5560 += 1 };
  s0 -> s1 [48, 65535] { R5560 += 1 };
  s1 -> s1 [0, 45] { R5560 += 1 };
  s1 -> s2 [46, 46] { R5560 += 1 };
  s1 -> s3 [47, 47] { R5560 += 1 };
  s1 -> s1 [48, 65535] { R5560 += 1 };
  s2 -> s1 [0, 45] { R5560 += 1 };
  s2 -> s2 [46, 46] { R5560 += 1 };
  s2 -> s3 [47, 47] { R5560 += 1 };
  s2 -> s1 [48, 114] { R5560 += 1 };
  s2 -> s8 [115, 115] { R5560 += 1 };
  s2 -> s1 [116, 65535] { R5560 += 1 };
  s3 -> s3 [0, 45] { R5560 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s4 [46, 46] { R5560 += 1 };
  s3 -> s3 [47, 65535] { R5560 += 1 };
  s4 -> s3 [0, 45] { R5560 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s4 [46, 46] { R5560 += 1 };
  s4 -> s3 [47, 114] { R5560 += 1 };
  s4 -> s5 [115, 115] { R5560 += 1 };
  s4 -> s3 [116, 65535] { R5560 += 1 };
  s5 -> s3 [0, 45] { R5560 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s4 [46, 46] { R5560 += 1 };
  s5 -> s3 [47, 110] { R5560 += 1 };
  s5 -> s6 [111, 111] { R5560 += 1 };
  s5 -> s3 [112, 65535] { R5560 += 1 };
  s6 -> s3 [0, 45] { R5560 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s4 [46, 46] { R5560 += 1 };
  s6 -> s3 [47, 98] { R5560 += 1 };
  s6 -> s7 [99, 99] { R5560 += 1 };
  s6 -> s3 [100, 65535] { R5560 += 1 };
  s7 -> s3 [0, 45] { R5560 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s4 [46, 46] { R5560 += 1 };
  s7 -> s3 [47, 106] { R5560 += 1 };
  s7 -> s3 [108, 65535] { R5560 += 1 };
  s8 -> s1 [0, 45] { R5560 += 1 };
  s8 -> s2 [46, 46] { R5560 += 1 };
  s8 -> s3 [47, 47] { R5560 += 1 };
  s8 -> s1 [48, 110] { R5560 += 1 };
  s8 -> s9 [111, 111] { R5560 += 1 };
  s8 -> s1 [112, 65535] { R5560 += 1 };
  s9 -> s1 [0, 45] { R5560 += 1 };
  s9 -> s2 [46, 46] { R5560 += 1 };
  s9 -> s3 [47, 47] { R5560 += 1 };
  s9 -> s1 [48, 98] { R5560 += 1 };
  s9 -> s10 [99, 99] { R5560 += 1 };
  s9 -> s1 [100, 65535] { R5560 += 1 };
  s10 -> s1 [0, 45] { R5560 += 1 };
  s10 -> s2 [46, 46] { R5560 += 1 };
  s10 -> s3 [47, 47] { R5560 += 1 };
  s10 -> s1 [48, 106] { R5560 += 1 };
  s10 -> s1 [108, 65535] { R5560 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_3 {
  init s0;
  s0 -> s1 [0, 65535] { R5562 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R5561 += 1, R5562 += 1 };
  s1 -> s1 [0, 65535] { R5562 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s1 [0, 46] { R5564 += 1, R5322 += 1 };
  s0 -> s0 [0, 65535] { R5563 += 1, R5564 += 1 };
  s0 -> s2 [0, 65535] { R5564 += 1, R5321 += 1, R5322 += 1 };
  s0 -> s3 [47, 47] { R5564 += 1 };
  s0 -> s1 [48, 65535] { R5564 += 1, R5322 += 1 };
  s1 -> s1 [0, 46] { R5564 += 1, R5322 += 1 };
  s1 -> s3 [47, 47] { R5564 += 1 };
  s1 -> s1 [48, 65535] { R5564 += 1, R5322 += 1 };
  s2 -> s1 [0, 46] { R5564 += 1, R5322 += 1 };
  s2 -> s2 [0, 65535] { R5564 += 1, R5321 += 1, R5322 += 1 };
  s2 -> s3 [47, 47] { R5564 += 1 };
  s2 -> s1 [48, 65535] { R5564 += 1, R5322 += 1 };
  s3 -> s3 [0, 65535] { R5564 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 62] { R5566 += 1, R5514 += 1 };
  s0 -> s0 [0, 65535] { R5565 += 1, R5566 += 1 };
  s0 -> s2 [0, 65535] { R5566 += 1, R5513 += 1, R5514 += 1 };
  s0 -> s3 [63, 63] { R5566 += 1, R5514 += 1 };
  s0 -> s1 [64, 65535] { R5566 += 1, R5514 += 1 };
  s1 -> s1 [0, 62] { R5566 += 1, R5514 += 1 };
  s1 -> s3 [63, 63] { R5566 += 1, R5514 += 1 };
  s1 -> s1 [64, 65535] { R5566 += 1, R5514 += 1 };
  s2 -> s1 [0, 62] { R5566 += 1, R5514 += 1 };
  s2 -> s2 [0, 65535] { R5566 += 1, R5513 += 1, R5514 += 1 };
  s2 -> s3 [63, 63] { R5566 += 1, R5514 += 1 };
  s2 -> s1 [64, 65535] { R5566 += 1, R5514 += 1 };
  s3 -> s4 [0, 65535] { R5566 += 1 };
  s3 -> s3 [0, 65535] { R5566 += 1, R5514 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5566 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5;
};
automaton uri_6 {
  init s0;
  s0 -> s1 [0, 65535] { R5568 += 1, R5516 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R5567 += 1, R5568 += 1 };
  s0 -> s2 [0, 65535] { R5568 += 1, R5515 += 1, R5516 += 1 };
  s1 -> s1 [0, 65535] { R5568 += 1, R5516 += 1, R2 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R5568 += 1 };
  s2 -> s1 [0, 65535] { R5568 += 1, R5516 += 1, R2 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5568 += 1, R5515 += 1, R5516 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5568 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_7 {
  init s0;
  s0 -> s1 [0, 62] { R5570 += 1, R5518 += 1, R4729 += 1 };
  s0 -> s2 [0, 65535] { R5570 += 1, R5517 += 1, R5518 += 1 };
  s0 -> s3 [0, 65535] { R5570 += 1, R5518 += 1, R4728 += 1, R4729 += 1 };
  s0 -> s0 [0, 65535] { R5569 += 1, R5570 += 1 };
  s0 -> s4 [63, 63] { R5570 += 1, R5518 += 1 };
  s0 -> s1 [64, 65535] { R5570 += 1, R5518 += 1, R4729 += 1 };
  s1 -> s1 [0, 62] { R5570 += 1, R5518 += 1, R4729 += 1 };
  s1 -> s4 [63, 63] { R5570 += 1, R5518 += 1 };
  s1 -> s1 [64, 65535] { R5570 += 1, R5518 += 1, R4729 += 1 };
  s2 -> s1 [0, 62] { R5570 += 1, R5518 += 1, R4729 += 1 };
  s2 -> s2 [0, 65535] { R5570 += 1, R5517 += 1, R5518 += 1 };
  s2 -> s3 [0, 65535] { R5570 += 1, R5518 += 1, R4728 += 1, R4729 += 1 };
  s2 -> s4 [63, 63] { R5570 += 1, R5518 += 1 };
  s2 -> s1 [64, 65535] { R5570 += 1, R5518 += 1, R4729 += 1 };
  s3 -> s1 [0, 62] { R5570 += 1, R5518 += 1, R4729 += 1 };
  s3 -> s3 [0, 65535] { R5570 += 1, R5518 += 1, R4728 += 1, R4729 += 1 };
  s3 -> s4 [63, 63] { R5570 += 1, R5518 += 1 };
  s3 -> s1 [64, 65535] { R5570 += 1, R5518 += 1, R4729 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5570 += 1 };
  s4 -> s4 [0, 65535] { R5570 += 1, R5518 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5570 += 1 };
  accepting s4, s5, s6;
};
automaton uri_8 {
  init s0;
  s0 -> s1 [0, 62] { R5572 += 1, R5520 += 1, R5470 += 1 };
  s0 -> s2 [0, 65535] { R5572 += 1, R5520 += 1, R5469 += 1, R5470 += 1 };
  s0 -> s3 [0, 65535] { R5572 += 1, R5519 += 1, R5520 += 1 };
  s0 -> s0 [0, 65535] { R5571 += 1, R5572 += 1 };
  s0 -> s4 [63, 63] { R5572 += 1, R5520 += 1, R5470 += 1 };
  s0 -> s1 [64, 65535] { R5572 += 1, R5520 += 1, R5470 += 1 };
  s1 -> s7 [0, 65535] { R5572 += 1, R5520 += 1 };
  s1 -> s1 [0, 65535] { R5572 += 1, R5520 += 1, R5470 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R5572 += 1 };
  s2 -> s1 [0, 62] { R5572 += 1, R5520 += 1, R5470 += 1 };
  s2 -> s2 [0, 65535] { R5572 += 1, R5520 += 1, R5469 += 1, R5470 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R5572 += 1 };
  s2 -> s4 [63, 63] { R5572 += 1, R5520 += 1, R5470 += 1 };
  s2 -> s1 [64, 65535] { R5572 += 1, R5520 += 1, R5470 += 1 };
  s3 -> s1 [0, 62] { R5572 += 1, R5520 += 1, R5470 += 1 };
  s3 -> s2 [0, 65535] { R5572 += 1, R5520 += 1, R5469 += 1, R5470 += 1 };
  s3 -> s3 [0, 65535] { R5572 += 1, R5519 += 1, R5520 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s4 [63, 63] { R5572 += 1, R5520 += 1, R5470 += 1 };
  s3 -> s1 [64, 65535] { R5572 += 1, R5520 += 1, R5470 += 1 };
  s4 -> s1 [0, 65535] { R5572 += 1, R5520 += 1, R5470 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5572 += 1 };
  s7 -> s7 [0, 65535] { R5572 += 1, R5520 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R5572 += 1 };
  accepting s3, s5, s2, s6, s1, s7, s0;
};
automaton uri_9 {
  init s0;
  s0 -> s1 [0, 65535] { R5574 += 1, R5521 += 1, R5522 += 1 };
  s0 -> s0 [0, 65535] { R5573 += 1, R5574 += 1 };
  s0 -> s2 [0, 65535] { R5574 += 1, R5522 += 1, R5472 += 1, R7 += 1 };
  s0 -> s3 [0, 65535] { R5574 += 1, R5522 += 1, R5471 += 1, R5472 += 1 };
  s1 -> s1 [0, 65535] { R5574 += 1, R5521 += 1, R5522 += 1 };
  s1 -> s2 [0, 65535] { R5574 += 1, R5522 += 1, R5472 += 1, R7 += 1 };
  s1 -> s3 [0, 65535] { R5574 += 1, R5522 += 1, R5471 += 1, R5472 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s4 [0, 65535] { R5574 += 1 };
  s2 -> s2 [0, 65535] { R5574 += 1, R5522 += 1, R5472 += 1, R7 += 1 };
  s2 -> s6 [0, 65535] { R5574 += 1, R5522 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R5574 += 1 };
  s3 -> s2 [0, 65535] { R5574 += 1, R5522 += 1, R5472 += 1, R7 += 1 };
  s3 -> s3 [0, 65535] { R5574 += 1, R5522 += 1, R5471 += 1, R5472 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5574 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R5574 += 1 };
  s6 -> s6 [0, 65535] { R5574 += 1, R5522 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_10 {
  init s0;
  s0 -> s0 [0, 65535] { R5575 += 1, R5576 += 1 };
  s0 -> s1 [0, 65535] { R5576 += 1, R5524 += 1, R5477 += 1, R5478 += 1 };
  s0 -> s2 [0, 65535] { R5576 += 1, R5523 += 1, R5524 += 1 };
  s0 -> s3 [0, 65535] { R5576 += 1, R5524 += 1, R5478 += 1, R0 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R5576 += 1, R5524 += 1, R5477 += 1, R5478 += 1 };
  s1 -> s6 [0, 65535] { R5576 += 1 };
  s1 -> s3 [0, 65535] { R5576 += 1, R5524 += 1, R5478 += 1, R0 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R5576 += 1, R5524 += 1, R5477 += 1, R5478 += 1 };
  s2 -> s2 [0, 65535] { R5576 += 1, R5523 += 1, R5524 += 1 };
  s2 -> s3 [0, 65535] { R5576 += 1, R5524 += 1, R5478 += 1, R0 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R5576 += 1, R5524 += 1 };
  s3 -> s6 [0, 65535] { R5576 += 1 };
  s3 -> s3 [0, 65535] { R5576 += 1, R5524 += 1, R5478 += 1, R0 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5576 += 1, R5524 += 1 };
  s5 -> s6 [0, 65535] { R5576 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R5576 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_11 {
  init s0;
  s0 -> s1 [0, 60] { R5578 += 1, R5526 += 1, R5480 += 1, R11 += 1 };
  s0 -> s0 [0, 65535] { R5577 += 1, R5578 += 1 };
  s0 -> s2 [0, 65535] { R5578 += 1, R5526 += 1, R5479 += 1, R5480 += 1 };
  s0 -> s3 [0, 65535] { R5578 += 1, R5526 += 1, R5480 += 1, R10 += 1, R11 += 1 };
  s0 -> s4 [0, 65535] { R5578 += 1, R5525 += 1, R5526 += 1 };
  s0 -> s5 [61, 61] { R5578 += 1, R5526 += 1, R5480 += 1 };
  s0 -> s1 [62, 65535] { R5578 += 1, R5526 += 1, R5480 += 1, R11 += 1 };
  s1 -> s1 [0, 60] { R5578 += 1, R5526 += 1, R5480 += 1, R11 += 1 };
  s1 -> s5 [61, 61] { R5578 += 1, R5526 += 1, R5480 += 1 };
  s1 -> s1 [62, 65535] { R5578 += 1, R5526 += 1, R5480 += 1, R11 += 1 };
  s2 -> s1 [0, 60] { R5578 += 1, R5526 += 1, R5480 += 1, R11 += 1 };
  s2 -> s2 [0, 65535] { R5578 += 1, R5526 += 1, R5479 += 1, R5480 += 1 };
  s2 -> s3 [0, 65535] { R5578 += 1, R5526 += 1, R5480 += 1, R10 += 1, R11 += 1 };
  s2 -> s5 [61, 61] { R5578 += 1, R5526 += 1, R5480 += 1 };
  s2 -> s1 [62, 65535] { R5578 += 1, R5526 += 1, R5480 += 1, R11 += 1 };
  s3 -> s1 [0, 60] { R5578 += 1, R5526 += 1, R5480 += 1, R11 += 1 };
  s3 -> s3 [0, 65535] { R5578 += 1, R5526 += 1, R5480 += 1, R10 += 1, R11 += 1 };
  s3 -> s5 [61, 61] { R5578 += 1, R5526 += 1, R5480 += 1 };
  s3 -> s1 [62, 65535] { R5578 += 1, R5526 += 1, R5480 += 1, R11 += 1 };
  s4 -> s1 [0, 60] { R5578 += 1, R5526 += 1, R5480 += 1, R11 += 1 };
  s4 -> s2 [0, 65535] { R5578 += 1, R5526 += 1, R5479 += 1, R5480 += 1 };
  s4 -> s3 [0, 65535] { R5578 += 1, R5526 += 1, R5480 += 1, R10 += 1, R11 += 1 };
  s4 -> s4 [0, 65535] { R5578 += 1, R5525 += 1, R5526 += 1 };
  s4 -> s5 [61, 61] { R5578 += 1, R5526 += 1, R5480 += 1 };
  s4 -> s1 [62, 65535] { R5578 += 1, R5526 += 1, R5480 += 1, R11 += 1 };
  s5 -> s6 [0, 65535] { R5578 += 1 };
  s5 -> s5 [0, 65535] { R5578 += 1, R5526 += 1, R5480 += 1 };
  s5 -> s7 [0, 65535] { R5578 += 1, R5526 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R5578 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s6 [0, 65535] { R5578 += 1 };
  s7 -> s7 [0, 65535] { R5578 += 1, R5526 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton uri_12 {
  init s0;
  s0 -> s1 [0, 58] { R5580 += 1, R5528 += 1, R5482 += 1 };
  s0 -> s2 [0, 65535] { R5580 += 1, R5528 += 1, R5481 += 1, R5482 += 1 };
  s0 -> s0 [0, 65535] { R5579 += 1, R5580 += 1 };
  s0 -> s3 [0, 65535] { R5580 += 1, R5528 += 1, R5482 += 1, R4721 += 1 };
  s0 -> s4 [0, 65535] { R5580 += 1, R5527 += 1, R5528 += 1 };
  s0 -> s5 [59, 59] { R5580 += 1, R5528 += 1, R5482 += 1 };
  s0 -> s1 [60, 65535] { R5580 += 1, R5528 += 1, R5482 += 1 };
  s1 -> s1 [0, 58] { R5580 += 1, R5528 += 1, R5482 += 1 };
  s1 -> s8 [0, 65535] { R5580 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R5580 += 1, R5528 += 1 };
  s1 -> s5 [59, 59] { R5580 += 1, R5528 += 1, R5482 += 1 };
  s1 -> s1 [60, 65535] { R5580 += 1, R5528 += 1, R5482 += 1 };
  s2 -> s1 [0, 58] { R5580 += 1, R5528 += 1, R5482 += 1 };
  s2 -> s2 [0, 65535] { R5580 += 1, R5528 += 1, R5481 += 1, R5482 += 1 };
  s2 -> s3 [0, 65535] { R5580 += 1, R5528 += 1, R5482 += 1, R4721 += 1 };
  s2 -> s8 [0, 65535] { R5580 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s5 [59, 59] { R5580 += 1, R5528 += 1, R5482 += 1 };
  s2 -> s1 [60, 65535] { R5580 += 1, R5528 += 1, R5482 += 1 };
  s3 -> s1 [0, 58] { R5580 += 1, R5528 += 1, R5482 += 1 };
  s3 -> s7 [0, 65535] { R5580 += 1, R5528 += 1 };
  s3 -> s3 [0, 65535] { R5580 += 1, R5528 += 1, R5482 += 1, R4721 += 1 };
  s3 -> s8 [0, 65535] { R5580 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s5 [59, 59] { R5580 += 1, R5528 += 1, R5482 += 1 };
  s3 -> s1 [60, 65535] { R5580 += 1, R5528 += 1, R5482 += 1 };
  s4 -> s1 [0, 58] { R5580 += 1, R5528 += 1, R5482 += 1 };
  s4 -> s2 [0, 65535] { R5580 += 1, R5528 += 1, R5481 += 1, R5482 += 1 };
  s4 -> s3 [0, 65535] { R5580 += 1, R5528 += 1, R5482 += 1, R4721 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R5580 += 1, R5527 += 1, R5528 += 1 };
  s4 -> s5 [59, 59] { R5580 += 1, R5528 += 1, R5482 += 1 };
  s4 -> s1 [60, 65535] { R5580 += 1, R5528 += 1, R5482 += 1 };
  s5 -> s5 [0, 65535] { R5580 += 1, R5528 += 1, R5482 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5580 += 1, R5528 += 1 };
  s7 -> s8 [0, 65535] { R5580 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R5580 += 1 };
  s8 -> s6 [0, 65535];
  accepting s3, s4, s8, s2, s6, s1, s7, s0;
};
automaton uri_13 {
  init s0;
  s0 -> s1 [0, 37] { R5582 += 1, R5530 += 1, R5484 += 1 };
  s0 -> s2 [0, 65535] { R5582 += 1, R5530 += 1, R5484 += 1, R4724 += 1 };
  s0 -> s0 [0, 65535] { R5581 += 1, R5582 += 1 };
  s0 -> s3 [0, 65535] { R5582 += 1, R5530 += 1, R5483 += 1, R5484 += 1 };
  s0 -> s4 [0, 65535] { R5582 += 1, R5529 += 1, R5530 += 1 };
  s0 -> s5 [38, 38] { R5582 += 1, R5530 += 1, R5484 += 1 };
  s0 -> s1 [39, 65535] { R5582 += 1, R5530 += 1, R5484 += 1 };
  s1 -> s1 [0, 37] { R5582 += 1, R5530 += 1, R5484 += 1 };
  s1 -> s7 [0, 65535] { R5582 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R5582 += 1, R5530 += 1 };
  s1 -> s5 [38, 38] { R5582 += 1, R5530 += 1, R5484 += 1 };
  s1 -> s1 [39, 65535] { R5582 += 1, R5530 += 1, R5484 += 1 };
  s2 -> s1 [0, 37] { R5582 += 1, R5530 += 1, R5484 += 1 };
  s2 -> s2 [0, 65535] { R5582 += 1, R5530 += 1, R5484 += 1, R4724 += 1 };
  s2 -> s7 [0, 65535] { R5582 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s8 [0, 65535] { R5582 += 1, R5530 += 1 };
  s2 -> s5 [38, 38] { R5582 += 1, R5530 += 1, R5484 += 1 };
  s2 -> s1 [39, 65535] { R5582 += 1, R5530 += 1, R5484 += 1 };
  s3 -> s1 [0, 37] { R5582 += 1, R5530 += 1, R5484 += 1 };
  s3 -> s2 [0, 65535] { R5582 += 1, R5530 += 1, R5484 += 1, R4724 += 1 };
  s3 -> s7 [0, 65535] { R5582 += 1 };
  s3 -> s3 [0, 65535] { R5582 += 1, R5530 += 1, R5483 += 1, R5484 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s5 [38, 38] { R5582 += 1, R5530 += 1, R5484 += 1 };
  s3 -> s1 [39, 65535] { R5582 += 1, R5530 += 1, R5484 += 1 };
  s4 -> s1 [0, 37] { R5582 += 1, R5530 += 1, R5484 += 1 };
  s4 -> s2 [0, 65535] { R5582 += 1, R5530 += 1, R5484 += 1, R4724 += 1 };
  s4 -> s3 [0, 65535] { R5582 += 1, R5530 += 1, R5483 += 1, R5484 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R5582 += 1, R5529 += 1, R5530 += 1 };
  s4 -> s5 [38, 38] { R5582 += 1, R5530 += 1, R5484 += 1 };
  s4 -> s1 [39, 65535] { R5582 += 1, R5530 += 1, R5484 += 1 };
  s5 -> s5 [0, 65535] { R5582 += 1, R5530 += 1, R5484 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5582 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R5582 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R5582 += 1, R5530 += 1 };
  accepting s3, s4, s8, s2, s6, s1, s7, s0;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 45] { R5584 += 1, R5532 += 1, R5486 += 1 };
  s0 -> s2 [0, 65535] { R5584 += 1, R5532 += 1, R5485 += 1, R5486 += 1 };
  s0 -> s3 [0, 65535] { R5584 += 1, R5531 += 1, R5532 += 1 };
  s0 -> s0 [0, 65535] { R5583 += 1, R5584 += 1 };
  s0 -> s1 [47, 65535] { R5584 += 1, R5532 += 1, R5486 += 1 };
  s1 -> s1 [0, 45] { R5584 += 1, R5532 += 1, R5486 += 1 };
  s1 -> s1 [0, 65535] { R5584 += 1, R5532 += 1 };
  s1 -> s5 [0, 65535] { R5584 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [47, 65535] { R5584 += 1, R5532 += 1, R5486 += 1 };
  s2 -> s1 [0, 45] { R5584 += 1, R5532 += 1, R5486 += 1 };
  s2 -> s2 [0, 65535] { R5584 += 1, R5532 += 1, R5485 += 1, R5486 += 1 };
  s2 -> s5 [0, 65535] { R5584 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [47, 65535] { R5584 += 1, R5532 += 1, R5486 += 1 };
  s3 -> s1 [0, 45] { R5584 += 1, R5532 += 1, R5486 += 1 };
  s3 -> s2 [0, 65535] { R5584 += 1, R5532 += 1, R5485 += 1, R5486 += 1 };
  s3 -> s3 [0, 65535] { R5584 += 1, R5531 += 1, R5532 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [47, 65535] { R5584 += 1, R5532 += 1, R5486 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5584 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_15 {
  init s0;
  s0 -> s0 [0, 65535] { R5585 += 1, R5586 += 1 };
  s0 -> s1 [0, 65535] { R5586 += 1, R5534 += 1, R5488 += 1, R5467 += 1 };
  s0 -> s2 [0, 65535] { R5586 += 1, R5534 += 1, R5487 += 1, R5488 += 1 };
  s0 -> s3 [0, 65535] { R5586 += 1, R5533 += 1, R5534 += 1 };
  s1 -> s1 [0, 65535] { R5586 += 1, R5534 += 1, R5488 += 1, R5467 += 1 };
  s1 -> s6 [0, 65535] { R5586 += 1, R5534 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R5586 += 1 };
  s2 -> s1 [0, 65535] { R5586 += 1, R5534 += 1, R5488 += 1, R5467 += 1 };
  s2 -> s2 [0, 65535] { R5586 += 1, R5534 += 1, R5487 += 1, R5488 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R5586 += 1 };
  s3 -> s1 [0, 65535] { R5586 += 1, R5534 += 1, R5488 += 1, R5467 += 1 };
  s3 -> s2 [0, 65535] { R5586 += 1, R5534 += 1, R5487 += 1, R5488 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5586 += 1, R5533 += 1, R5534 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5586 += 1 };
  s6 -> s6 [0, 65535] { R5586 += 1, R5534 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R5586 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 63] { R5588 += 1, R5536 += 1 };
  s0 -> s2 [0, 65535] { R5588 += 1, R5535 += 1, R5536 += 1 };
  s0 -> s0 [0, 65535] { R5587 += 1, R5588 += 1 };
  s0 -> s3 [64, 64] { R5588 += 1, R5536 += 1 };
  s0 -> s1 [65, 65535] { R5588 += 1, R5536 += 1 };
  s1 -> s1 [0, 63] { R5588 += 1, R5536 += 1 };
  s1 -> s3 [64, 64] { R5588 += 1, R5536 += 1 };
  s1 -> s1 [65, 65535] { R5588 += 1, R5536 += 1 };
  s2 -> s1 [0, 63] { R5588 += 1, R5536 += 1 };
  s2 -> s2 [0, 65535] { R5588 += 1, R5535 += 1, R5536 += 1 };
  s2 -> s3 [64, 64] { R5588 += 1, R5536 += 1 };
  s2 -> s1 [65, 65535] { R5588 += 1, R5536 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R5588 += 1 };
  s3 -> s3 [0, 65535] { R5588 += 1, R5536 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5588 += 1 };
  accepting s3, s4, s5;
};
automaton uri_17 {
  init s0;
  s0 -> s0 [0, 65535] { R5589 += 1, R5590 += 1 };
  s0 -> s1 [0, 65535] { R5590 += 1, R5538 += 1, R4 += 1 };
  s0 -> s2 [0, 65535] { R5590 += 1, R5537 += 1, R5538 += 1 };
  s1 -> s1 [0, 65535] { R5590 += 1, R5538 += 1, R4 += 1 };
  s1 -> s4 [0, 65535] { R5590 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R5590 += 1, R5538 += 1, R4 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5590 += 1, R5537 += 1, R5538 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5590 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 36] { R5592 += 1, R5540 += 1, R5494 += 1 };
  s0 -> s2 [0, 65535] { R5592 += 1, R5539 += 1, R5540 += 1 };
  s0 -> s3 [0, 65535] { R5592 += 1, R5540 += 1, R5493 += 1, R5494 += 1 };
  s0 -> s0 [0, 65535] { R5591 += 1, R5592 += 1 };
  s0 -> s1 [38, 42] { R5592 += 1, R5540 += 1, R5494 += 1 };
  s0 -> s1 [44, 57] { R5592 += 1, R5540 += 1, R5494 += 1 };
  s0 -> s1 [59, 63] { R5592 += 1, R5540 += 1, R5494 += 1 };
  s0 -> s1 [65, 65535] { R5592 += 1, R5540 += 1, R5494 += 1 };
  s1 -> s1 [0, 36] { R5592 += 1, R5540 += 1, R5494 += 1 };
  s1 -> s1 [0, 65535] { R5592 += 1, R5540 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R5592 += 1 };
  s1 -> s1 [38, 42] { R5592 += 1, R5540 += 1, R5494 += 1 };
  s1 -> s1 [44, 57] { R5592 += 1, R5540 += 1, R5494 += 1 };
  s1 -> s1 [59, 63] { R5592 += 1, R5540 += 1, R5494 += 1 };
  s1 -> s1 [65, 65535] { R5592 += 1, R5540 += 1, R5494 += 1 };
  s2 -> s1 [0, 36] { R5592 += 1, R5540 += 1, R5494 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R5592 += 1, R5539 += 1, R5540 += 1 };
  s2 -> s3 [0, 65535] { R5592 += 1, R5540 += 1, R5493 += 1, R5494 += 1 };
  s2 -> s1 [38, 42] { R5592 += 1, R5540 += 1, R5494 += 1 };
  s2 -> s1 [44, 57] { R5592 += 1, R5540 += 1, R5494 += 1 };
  s2 -> s1 [59, 63] { R5592 += 1, R5540 += 1, R5494 += 1 };
  s2 -> s1 [65, 65535] { R5592 += 1, R5540 += 1, R5494 += 1 };
  s3 -> s1 [0, 36] { R5592 += 1, R5540 += 1, R5494 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R5592 += 1, R5540 += 1, R5493 += 1, R5494 += 1 };
  s3 -> s5 [0, 65535] { R5592 += 1 };
  s3 -> s1 [38, 42] { R5592 += 1, R5540 += 1, R5494 += 1 };
  s3 -> s1 [44, 57] { R5592 += 1, R5540 += 1, R5494 += 1 };
  s3 -> s1 [59, 63] { R5592 += 1, R5540 += 1, R5494 += 1 };
  s3 -> s1 [65, 65535] { R5592 += 1, R5540 += 1, R5494 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5592 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_19 {
  init s0;
  s0 -> s1 [0, 65535] { R5594 += 1, R5542 += 1, R5496 += 1, R1 += 1 };
  s0 -> s2 [0, 65535] { R5594 += 1, R5542 += 1, R5495 += 1, R5496 += 1 };
  s0 -> s3 [0, 65535] { R5594 += 1, R5541 += 1, R5542 += 1 };
  s0 -> s0 [0, 65535] { R5593 += 1, R5594 += 1 };
  s1 -> s1 [0, 65535] { R5594 += 1, R5542 += 1, R5496 += 1, R1 += 1 };
  s1 -> s6 [0, 65535] { R5594 += 1, R5542 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R5594 += 1 };
  s2 -> s1 [0, 65535] { R5594 += 1, R5542 += 1, R5496 += 1, R1 += 1 };
  s2 -> s2 [0, 65535] { R5594 += 1, R5542 += 1, R5495 += 1, R5496 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R5594 += 1 };
  s3 -> s1 [0, 65535] { R5594 += 1, R5542 += 1, R5496 += 1, R1 += 1 };
  s3 -> s2 [0, 65535] { R5594 += 1, R5542 += 1, R5495 += 1, R5496 += 1 };
  s3 -> s3 [0, 65535] { R5594 += 1, R5541 += 1, R5542 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5594 += 1 };
  s6 -> s6 [0, 65535] { R5594 += 1, R5542 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R5594 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 43] { R5596 += 1, R5544 += 1, R5498 += 1 };
  s0 -> s2 [0, 65535] { R5596 += 1, R5544 += 1, R5497 += 1, R5498 += 1 };
  s0 -> s3 [0, 65535] { R5596 += 1, R5543 += 1, R5544 += 1 };
  s0 -> s0 [0, 65535] { R5595 += 1, R5596 += 1 };
  s0 -> s1 [45, 64] { R5596 += 1, R5544 += 1, R5498 += 1 };
  s0 -> s4 [90, 90] { R5596 += 1, R5544 += 1, R5498 += 1 };
  s0 -> s1 [91, 65535] { R5596 += 1, R5544 += 1, R5498 += 1 };
  s1 -> s1 [0, 43] { R5596 += 1, R5544 += 1, R5498 += 1 };
  s1 -> s1 [45, 64] { R5596 += 1, R5544 += 1, R5498 += 1 };
  s1 -> s4 [90, 90] { R5596 += 1, R5544 += 1, R5498 += 1 };
  s1 -> s1 [91, 65535] { R5596 += 1, R5544 += 1, R5498 += 1 };
  s2 -> s1 [0, 43] { R5596 += 1, R5544 += 1, R5498 += 1 };
  s2 -> s2 [0, 65535] { R5596 += 1, R5544 += 1, R5497 += 1, R5498 += 1 };
  s2 -> s1 [45, 64] { R5596 += 1, R5544 += 1, R5498 += 1 };
  s2 -> s4 [90, 90] { R5596 += 1, R5544 += 1, R5498 += 1 };
  s2 -> s1 [91, 65535] { R5596 += 1, R5544 += 1, R5498 += 1 };
  s3 -> s1 [0, 43] { R5596 += 1, R5544 += 1, R5498 += 1 };
  s3 -> s2 [0, 65535] { R5596 += 1, R5544 += 1, R5497 += 1, R5498 += 1 };
  s3 -> s3 [0, 65535] { R5596 += 1, R5543 += 1, R5544 += 1 };
  s3 -> s1 [45, 64] { R5596 += 1, R5544 += 1, R5498 += 1 };
  s3 -> s4 [90, 90] { R5596 += 1, R5544 += 1, R5498 += 1 };
  s3 -> s1 [91, 65535] { R5596 += 1, R5544 += 1, R5498 += 1 };
  s4 -> s4 [0, 43] { R5596 += 1, R5544 += 1, R5498 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5596 += 1 };
  s4 -> s4 [0, 65535] { R5596 += 1, R5544 += 1 };
  s4 -> s4 [45, 64] { R5596 += 1, R5544 += 1, R5498 += 1 };
  s4 -> s4 [90, 65535] { R5596 += 1, R5544 += 1, R5498 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5596 += 1 };
  accepting s4, s5, s6;
};
automaton uri_21 {
  init s0;
  s0 -> s1 [0, 65535] { R5598 += 1, R5545 += 1, R5546 += 1 };
  s0 -> s2 [0, 65535] { R5598 += 1, R5546 += 1, R5500 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R5597 += 1, R5598 += 1 };
  s0 -> s3 [0, 65535] { R5598 += 1, R5546 += 1, R5499 += 1, R5500 += 1 };
  s1 -> s1 [0, 65535] { R5598 += 1, R5545 += 1, R5546 += 1 };
  s1 -> s2 [0, 65535] { R5598 += 1, R5546 += 1, R5500 += 1, R3 += 1 };
  s1 -> s3 [0, 65535] { R5598 += 1, R5546 += 1, R5499 += 1, R5500 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5598 += 1, R5546 += 1, R5500 += 1, R3 += 1 };
  s2 -> s6 [0, 65535] { R5598 += 1, R5546 += 1 };
  s2 -> s4 [0, 65535] { R5598 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R5598 += 1, R5546 += 1, R5500 += 1, R3 += 1 };
  s3 -> s3 [0, 65535] { R5598 += 1, R5546 += 1, R5499 += 1, R5500 += 1 };
  s3 -> s4 [0, 65535] { R5598 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5598 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5598 += 1, R5546 += 1 };
  s6 -> s4 [0, 65535] { R5598 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_22 {
  init s0;
  s0 -> s1 [0, 57] { R5600 += 1, R5548 += 1, R5502 += 1 };
  s0 -> s2 [0, 65535] { R5600 += 1, R5547 += 1, R5548 += 1 };
  s0 -> s3 [0, 65535] { R5600 += 1, R5548 += 1, R5502 += 1, R5316 += 1 };
  s0 -> s4 [0, 65535] { R5600 += 1, R5548 += 1, R5501 += 1, R5502 += 1 };
  s0 -> s0 [0, 65535] { R5599 += 1, R5600 += 1 };
  s0 -> s5 [58, 58] { R5600 += 1, R5548 += 1, R5502 += 1 };
  s0 -> s1 [59, 65535] { R5600 += 1, R5548 += 1, R5502 += 1 };
  s1 -> s1 [0, 57] { R5600 += 1, R5548 += 1, R5502 += 1 };
  s1 -> s1 [0, 65535] { R5600 += 1, R5548 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R5600 += 1 };
  s1 -> s5 [58, 58] { R5600 += 1, R5548 += 1, R5502 += 1 };
  s1 -> s1 [59, 65535] { R5600 += 1, R5548 += 1, R5502 += 1 };
  s2 -> s1 [0, 57] { R5600 += 1, R5548 += 1, R5502 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R5600 += 1, R5547 += 1, R5548 += 1 };
  s2 -> s3 [0, 65535] { R5600 += 1, R5548 += 1, R5502 += 1, R5316 += 1 };
  s2 -> s4 [0, 65535] { R5600 += 1, R5548 += 1, R5501 += 1, R5502 += 1 };
  s2 -> s5 [58, 58] { R5600 += 1, R5548 += 1, R5502 += 1 };
  s2 -> s1 [59, 65535] { R5600 += 1, R5548 += 1, R5502 += 1 };
  s3 -> s1 [0, 57] { R5600 += 1, R5548 += 1, R5502 += 1 };
  s3 -> s8 [0, 65535] { R5600 += 1, R5548 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R5600 += 1, R5548 += 1, R5502 += 1, R5316 += 1 };
  s3 -> s7 [0, 65535] { R5600 += 1 };
  s3 -> s5 [58, 58] { R5600 += 1, R5548 += 1, R5502 += 1 };
  s3 -> s1 [59, 65535] { R5600 += 1, R5548 += 1, R5502 += 1 };
  s4 -> s1 [0, 57] { R5600 += 1, R5548 += 1, R5502 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s3 [0, 65535] { R5600 += 1, R5548 += 1, R5502 += 1, R5316 += 1 };
  s4 -> s4 [0, 65535] { R5600 += 1, R5548 += 1, R5501 += 1, R5502 += 1 };
  s4 -> s7 [0, 65535] { R5600 += 1 };
  s4 -> s5 [58, 58] { R5600 += 1, R5548 += 1, R5502 += 1 };
  s4 -> s1 [59, 65535] { R5600 += 1, R5548 += 1, R5502 += 1 };
  s5 -> s5 [0, 65535] { R5600 += 1, R5548 += 1, R5502 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5600 += 1 };
  s8 -> s8 [0, 65535] { R5600 += 1, R5548 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R5600 += 1 };
  accepting s3, s4, s8, s2, s6, s1, s7, s0;
};
automaton uri_23 {
  init s0;
  s0 -> s1 [0, 89] { R5602 += 1, R5550 += 1, R5504 += 1 };
  s0 -> s2 [0, 65535] { R5602 += 1, R5550 += 1, R5503 += 1, R5504 += 1 };
  s0 -> s3 [0, 65535] { R5602 += 1, R5549 += 1, R5550 += 1 };
  s0 -> s0 [0, 65535] { R5601 += 1, R5602 += 1 };
  s0 -> s4 [0, 65535] { R5602 += 1, R5550 += 1, R5504 += 1, R5317 += 1 };
  s0 -> s5 [90, 90] { R5602 += 1, R5550 += 1, R5504 += 1 };
  s0 -> s1 [91, 65535] { R5602 += 1, R5550 += 1, R5504 += 1 };
  s1 -> s1 [0, 89] { R5602 += 1, R5550 += 1, R5504 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R5602 += 1 };
  s1 -> s1 [0, 65535] { R5602 += 1, R5550 += 1 };
  s1 -> s5 [90, 90] { R5602 += 1, R5550 += 1, R5504 += 1 };
  s1 -> s1 [91, 65535] { R5602 += 1, R5550 += 1, R5504 += 1 };
  s2 -> s1 [0, 89] { R5602 += 1, R5550 += 1, R5504 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R5602 += 1 };
  s2 -> s2 [0, 65535] { R5602 += 1, R5550 += 1, R5503 += 1, R5504 += 1 };
  s2 -> s4 [0, 65535] { R5602 += 1, R5550 += 1, R5504 += 1, R5317 += 1 };
  s2 -> s5 [90, 90] { R5602 += 1, R5550 += 1, R5504 += 1 };
  s2 -> s1 [91, 65535] { R5602 += 1, R5550 += 1, R5504 += 1 };
  s3 -> s1 [0, 89] { R5602 += 1, R5550 += 1, R5504 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R5602 += 1, R5550 += 1, R5503 += 1, R5504 += 1 };
  s3 -> s3 [0, 65535] { R5602 += 1, R5549 += 1, R5550 += 1 };
  s3 -> s4 [0, 65535] { R5602 += 1, R5550 += 1, R5504 += 1, R5317 += 1 };
  s3 -> s5 [90, 90] { R5602 += 1, R5550 += 1, R5504 += 1 };
  s3 -> s1 [91, 65535] { R5602 += 1, R5550 += 1, R5504 += 1 };
  s4 -> s1 [0, 89] { R5602 += 1, R5550 += 1, R5504 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R5602 += 1 };
  s4 -> s8 [0, 65535] { R5602 += 1, R5550 += 1 };
  s4 -> s4 [0, 65535] { R5602 += 1, R5550 += 1, R5504 += 1, R5317 += 1 };
  s4 -> s5 [90, 90] { R5602 += 1, R5550 += 1, R5504 += 1 };
  s4 -> s1 [91, 65535] { R5602 += 1, R5550 += 1, R5504 += 1 };
  s5 -> s5 [0, 65535] { R5602 += 1, R5550 += 1, R5504 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5602 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R5602 += 1 };
  s8 -> s8 [0, 65535] { R5602 += 1, R5550 += 1 };
  accepting s3, s4, s8, s2, s6, s1, s7, s0;
};
automaton uri_24 {
  init s0;
  s0 -> s1 [0, 90] { R5604 += 1, R5552 += 1, R5506 += 1, R5474 += 1 };
  s0 -> s2 [0, 65535] { R5604 += 1, R5552 += 1, R5506 += 1, R5473 += 1, R5474 += 1 };
  s0 -> s0 [0, 65535] { R5603 += 1, R5604 += 1 };
  s0 -> s3 [0, 65535] { R5604 += 1, R5551 += 1, R5552 += 1 };
  s0 -> s4 [0, 65535] { R5604 += 1, R5552 += 1, R5505 += 1, R5506 += 1 };
  s0 -> s5 [91, 91] { R5604 += 1, R5552 += 1, R5506 += 1, R5474 += 1 };
  s0 -> s1 [92, 65535] { R5604 += 1, R5552 += 1, R5506 += 1, R5474 += 1 };
  s1 -> s8 [0, 65535] { R5604 += 1, R5552 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R5604 += 1, R5552 += 1, R5506 += 1, R5474 += 1 };
  s1 -> s7 [0, 65535] { R5604 += 1 };
  s1 -> s9 [0, 65535] { R5604 += 1, R5552 += 1, R5506 += 1 };
  s2 -> s1 [0, 90] { R5604 += 1, R5552 += 1, R5506 += 1, R5474 += 1 };
  s2 -> s2 [0, 65535] { R5604 += 1, R5552 += 1, R5506 += 1, R5473 += 1, R5474 += 1 };
  s2 -> s8 [0, 65535] { R5604 += 1, R5552 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R5604 += 1 };
  s2 -> s5 [91, 91] { R5604 += 1, R5552 += 1, R5506 += 1, R5474 += 1 };
  s2 -> s1 [92, 65535] { R5604 += 1, R5552 += 1, R5506 += 1, R5474 += 1 };
  s3 -> s1 [0, 90] { R5604 += 1, R5552 += 1, R5506 += 1, R5474 += 1 };
  s3 -> s2 [0, 65535] { R5604 += 1, R5552 += 1, R5506 += 1, R5473 += 1, R5474 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R5604 += 1, R5551 += 1, R5552 += 1 };
  s3 -> s4 [0, 65535] { R5604 += 1, R5552 += 1, R5505 += 1, R5506 += 1 };
  s3 -> s5 [91, 91] { R5604 += 1, R5552 += 1, R5506 += 1, R5474 += 1 };
  s3 -> s1 [92, 65535] { R5604 += 1, R5552 += 1, R5506 += 1, R5474 += 1 };
  s4 -> s1 [0, 90] { R5604 += 1, R5552 += 1, R5506 += 1, R5474 += 1 };
  s4 -> s2 [0, 65535] { R5604 += 1, R5552 += 1, R5506 += 1, R5473 += 1, R5474 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R5604 += 1 };
  s4 -> s4 [0, 65535] { R5604 += 1, R5552 += 1, R5505 += 1, R5506 += 1 };
  s4 -> s5 [91, 91] { R5604 += 1, R5552 += 1, R5506 += 1, R5474 += 1 };
  s4 -> s1 [92, 65535] { R5604 += 1, R5552 += 1, R5506 += 1, R5474 += 1 };
  s5 -> s1 [0, 65535] { R5604 += 1, R5552 += 1, R5506 += 1, R5474 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5604 += 1 };
  s8 -> s8 [0, 65535] { R5604 += 1, R5552 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R5604 += 1 };
  s9 -> s8 [0, 65535] { R5604 += 1, R5552 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s7 [0, 65535] { R5604 += 1 };
  s9 -> s9 [0, 65535] { R5604 += 1, R5552 += 1, R5506 += 1 };
  accepting s3, s4, s8, s2, s9, s6, s1, s7, s0;
};
automaton uri_25 {
  init s0;
  s0 -> s0 [0, 65535] { R5605 += 1, R5606 += 1 };
  s0 -> s1 [0, 65535] { R5606 += 1, R5554 += 1, R5508 += 1, R5476 += 1, R8 += 1 };
  s0 -> s2 [0, 65535] { R5606 += 1, R5554 += 1, R5508 += 1, R5475 += 1, R5476 += 1 };
  s0 -> s3 [0, 65535] { R5606 += 1, R5554 += 1, R5507 += 1, R5508 += 1 };
  s0 -> s4 [0, 65535] { R5606 += 1, R5553 += 1, R5554 += 1 };
  s1 -> s8 [0, 65535] { R5606 += 1, R5554 += 1, R5508 += 1 };
  s1 -> s1 [0, 65535] { R5606 += 1, R5554 += 1, R5508 += 1, R5476 += 1, R8 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R5606 += 1, R5554 += 1 };
  s1 -> s6 [0, 65535] { R5606 += 1 };
  s2 -> s1 [0, 65535] { R5606 += 1, R5554 += 1, R5508 += 1, R5476 += 1, R8 += 1 };
  s2 -> s2 [0, 65535] { R5606 += 1, R5554 += 1, R5508 += 1, R5475 += 1, R5476 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R5606 += 1, R5554 += 1 };
  s2 -> s6 [0, 65535] { R5606 += 1 };
  s3 -> s1 [0, 65535] { R5606 += 1, R5554 += 1, R5508 += 1, R5476 += 1, R8 += 1 };
  s3 -> s2 [0, 65535] { R5606 += 1, R5554 += 1, R5508 += 1, R5475 += 1, R5476 += 1 };
  s3 -> s3 [0, 65535] { R5606 += 1, R5554 += 1, R5507 += 1, R5508 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R5606 += 1 };
  s4 -> s1 [0, 65535] { R5606 += 1, R5554 += 1, R5508 += 1, R5476 += 1, R8 += 1 };
  s4 -> s2 [0, 65535] { R5606 += 1, R5554 += 1, R5508 += 1, R5475 += 1, R5476 += 1 };
  s4 -> s3 [0, 65535] { R5606 += 1, R5554 += 1, R5507 += 1, R5508 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5606 += 1, R5553 += 1, R5554 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5606 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R5606 += 1, R5554 += 1 };
  s7 -> s6 [0, 65535] { R5606 += 1 };
  s8 -> s8 [0, 65535] { R5606 += 1, R5554 += 1, R5508 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s7 [0, 65535] { R5606 += 1, R5554 += 1 };
  s8 -> s6 [0, 65535] { R5606 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_26 {
  init s0;
  s0 -> s1 [0, 89] { R5608 += 1, R5556 += 1, R5510 += 1, R5490 += 1 };
  s0 -> s0 [0, 65535] { R5607 += 1, R5608 += 1 };
  s0 -> s2 [0, 65535] { R5608 += 1, R5556 += 1, R5510 += 1, R5489 += 1, R5490 += 1 };
  s0 -> s3 [0, 65535] { R5608 += 1, R5556 += 1, R5509 += 1, R5510 += 1 };
  s0 -> s4 [0, 65535] { R5608 += 1, R5555 += 1, R5556 += 1 };
  s0 -> s1 [91, 65535] { R5608 += 1, R5556 += 1, R5510 += 1, R5490 += 1 };
  s1 -> s1 [0, 89] { R5608 += 1, R5556 += 1, R5510 += 1, R5490 += 1 };
  s1 -> s1 [0, 65535] { R5608 += 1, R5556 += 1, R5510 += 1 };
  s1 -> s6 [0, 65535] { R5608 += 1 };
  s1 -> s7 [0, 65535] { R5608 += 1, R5556 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [91, 65535] { R5608 += 1, R5556 += 1, R5510 += 1, R5490 += 1 };
  s2 -> s1 [0, 89] { R5608 += 1, R5556 += 1, R5510 += 1, R5490 += 1 };
  s2 -> s2 [0, 65535] { R5608 += 1, R5556 += 1, R5510 += 1, R5489 += 1, R5490 += 1 };
  s2 -> s6 [0, 65535] { R5608 += 1 };
  s2 -> s7 [0, 65535] { R5608 += 1, R5556 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [91, 65535] { R5608 += 1, R5556 += 1, R5510 += 1, R5490 += 1 };
  s3 -> s1 [0, 89] { R5608 += 1, R5556 += 1, R5510 += 1, R5490 += 1 };
  s3 -> s2 [0, 65535] { R5608 += 1, R5556 += 1, R5510 += 1, R5489 += 1, R5490 += 1 };
  s3 -> s3 [0, 65535] { R5608 += 1, R5556 += 1, R5509 += 1, R5510 += 1 };
  s3 -> s6 [0, 65535] { R5608 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [91, 65535] { R5608 += 1, R5556 += 1, R5510 += 1, R5490 += 1 };
  s4 -> s1 [0, 89] { R5608 += 1, R5556 += 1, R5510 += 1, R5490 += 1 };
  s4 -> s2 [0, 65535] { R5608 += 1, R5556 += 1, R5510 += 1, R5489 += 1, R5490 += 1 };
  s4 -> s3 [0, 65535] { R5608 += 1, R5556 += 1, R5509 += 1, R5510 += 1 };
  s4 -> s4 [0, 65535] { R5608 += 1, R5555 += 1, R5556 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s1 [91, 65535] { R5608 += 1, R5556 += 1, R5510 += 1, R5490 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5608 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R5608 += 1 };
  s7 -> s7 [0, 65535] { R5608 += 1, R5556 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton uri_27 {
  init s0;
  s0 -> s1 [0, 65535] { R5610 += 1, R5558 += 1, R5512 += 1, R5491 += 1, R5492 += 1 };
  s0 -> s0 [0, 65535] { R5609 += 1, R5610 += 1 };
  s0 -> s2 [0, 65535] { R5610 += 1, R5558 += 1, R5512 += 1, R5492 += 1, R5468 += 1 };
  s0 -> s3 [0, 65535] { R5610 += 1, R5557 += 1, R5558 += 1 };
  s0 -> s4 [0, 65535] { R5610 += 1, R5558 += 1, R5511 += 1, R5512 += 1 };
  s1 -> s1 [0, 65535] { R5610 += 1, R5558 += 1, R5512 += 1, R5491 += 1, R5492 += 1 };
  s1 -> s5 [0, 65535] { R5610 += 1 };
  s1 -> s2 [0, 65535] { R5610 += 1, R5558 += 1, R5512 += 1, R5492 += 1, R5468 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s8 [0, 65535] { R5610 += 1, R5558 += 1 };
  s2 -> s7 [0, 65535] { R5610 += 1, R5558 += 1, R5512 += 1 };
  s2 -> s5 [0, 65535] { R5610 += 1 };
  s2 -> s2 [0, 65535] { R5610 += 1, R5558 += 1, R5512 += 1, R5492 += 1, R5468 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s8 [0, 65535] { R5610 += 1, R5558 += 1 };
  s3 -> s1 [0, 65535] { R5610 += 1, R5558 += 1, R5512 += 1, R5491 += 1, R5492 += 1 };
  s3 -> s2 [0, 65535] { R5610 += 1, R5558 += 1, R5512 += 1, R5492 += 1, R5468 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R5610 += 1, R5557 += 1, R5558 += 1 };
  s3 -> s4 [0, 65535] { R5610 += 1, R5558 += 1, R5511 += 1, R5512 += 1 };
  s4 -> s1 [0, 65535] { R5610 += 1, R5558 += 1, R5512 += 1, R5491 += 1, R5492 += 1 };
  s4 -> s5 [0, 65535] { R5610 += 1 };
  s4 -> s2 [0, 65535] { R5610 += 1, R5558 += 1, R5512 += 1, R5492 += 1, R5468 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R5610 += 1, R5558 += 1, R5511 += 1, R5512 += 1 };
  s5 -> s5 [0, 65535] { R5610 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5610 += 1, R5558 += 1, R5512 += 1 };
  s7 -> s5 [0, 65535] { R5610 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s8 [0, 65535] { R5610 += 1, R5558 += 1 };
  s8 -> s5 [0, 65535] { R5610 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R5610 += 1, R5558 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
};
constraint R2 = R5484 && R3 = R5492 && R4 = R5512 && R5 = R5534 && R6 = R5610 && R10 = 0 && R4728 = 0 && R4729 - R5483 = -1 && R5321 = 0 && R5322 = R5558 && R5469 = 0 && R5470 = 1 && R5471 = 0 && R5472 = 1 && R5473 = 0 && R5474 = 1 && R5475 = 0 && R5476 = 1 && R5477 = R5483 && R5478 = R5484 && R5479 = R5483 && R5480 = R5484 && R5481 = R5483 && R5482 = R5484 && R5489 = 0 && R5490 = R5492 && R5491 = 0 && R5493 = 0 && R5494 = 1 && R5495 = 0 && R5496 = 1 && R5497 = 2 && R5498 = R5512 && R5499 = 2 && R5500 = R5512 && R5501 = 2 && R5502 = R5512 && R5503 = 2 && R5504 = R5512 && R5505 = 2 && R5506 = R5512 && R5507 = 2 && R5508 = R5512 && R5509 = 2 && R5510 = R5512 && R5511 = 2 && R5513 - R5558 = 1 && R5514 = R5534 && R5515 - R5558 = 1 && R5516 = R5534 && R5517 - R5558 = 1 && R5518 = R5534 && R5519 - R5558 = 1 && R5520 = R5534 && R5521 - R5558 = 1 && R5522 = R5534 && R5523 - R5558 = 1 && R5524 = R5534 && R5525 - R5558 = 1 && R5526 = R5534 && R5527 - R5558 = 1 && R5528 = R5534 && R5529 - R5558 = 1 && R5530 = R5534 && R5531 - R5558 = 1 && R5532 = R5534 && R5533 - R5558 = 1 && R5535 = 0 && R5536 = R5558 && R5537 = 0 && R5538 = R5558 && R5539 = 0 && R5540 = R5558 && R5541 = 0 && R5542 = R5558 && R5543 = 0 && R5544 = R5558 && R5545 = 0 && R5546 = R5558 && R5547 = 0 && R5548 = R5558 && R5549 = 0 && R5550 = R5558 && R5551 = 0 && R5552 = R5558 && R5553 = 0 && R5554 = R5558 && R5555 = 0 && R5556 = R5558 && R5557 = 0 && R5559 = 10 && R5560 = R5610 && R5561 = 10 && R5562 = R5610 && R5563 = 10 && R5564 = R5610 && R5565 = 10 && R5566 = R5610 && R5567 = 10 && R5568 = R5610 && R5569 = 10 && R5570 = R5610 && R5571 = 10 && R5572 = R5610 && R5573 = 10 && R5574 = R5610 && R5575 = 10 && R5576 = R5610 && R5577 = 10 && R5578 = R5610 && R5579 = 10 && R5580 = R5610 && R5581 = 10 && R5582 = R5610 && R5583 = 10 && R5584 = R5610 && R5585 = 10 && R5586 = R5610 && R5587 = 10 && R5588 = R5610 && R5589 = 10 && R5590 = R5610 && R5591 = 10 && R5592 = R5610 && R5593 = 10 && R5594 = R5610 && R5595 = 10 && R5596 = R5610 && R5597 = 10 && R5598 = R5610 && R5599 = 10 && R5600 = R5610 && R5601 = 10 && R5602 = R5610 && R5603 = 10 && R5604 = R5610 && R5605 = 10 && R5606 = R5610 && R5607 = 10 && R5608 = R5610 && R5609 = 10 && R0 != 0 && R1 != 0 && R11 != -1 && R4721 < 1 && R4724 < 1 && R5316 < 1 && R5317 < 1 && R5483 - R5484 < 1 && 0 < R5483 && 0 < R5492 && 1 < R5512 && R5558 < R5534 && -1 < R5558 && 9 < R5610 && (R5485 != 0 || R5483 - R5486 = 1 || (R5467 = 0 && R5483 = 1)) && (R5487 != 0 || R5483 - R5488 = 1 || (R5467 = 0 && R5483 = 1)) && (R5485 = 0 || (R5467 = 0 && R5483 = 1)) && (R5487 = 0 || (R5467 = 0 && R5483 = 1));
// End of Parikh automata intersection problem
