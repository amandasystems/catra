// Parikh automata intersection problem, generated by OSTRICH+
counter int R0, R1, R13, R14, R2, R3, R4, R5, R6, R6244, R6248, R6249, R7, R7805, R7806, R7807, R7808, R7809, R7810, R7811, R7812, R7813, R7814, R7815, R7816, R7817, R7818, R7819, R7820, R7821, R7822, R7823, R7824, R7825, R7826, R7827, R7828, R7829, R7830, R7831, R7832, R7833, R7834, R7835, R7836, R7837, R7838, R7839, R7840, R7841, R7842, R7843, R7844, R7845, R7846, R7847, R7848, R7849, R7850, R7851, R7852, R7853, R7854, R7855, R7856, R7857, R7858, R7859, R7860, R7861, R7862, R7863, R7864, R7865, R7866, R7867, R7868, R7869, R7870, R7871, R7872, R7873, R7874, R7875, R7876, R7877, R7878, R7879, R7880, R7881, R7882, R7883, R7884, R7885, R7886, R7887, R7888, R7889, R7890, R7891, R7892, R7893, R7894, R7895, R7896, R7897, R7898, R7899, R7900, R7901, R7902, R7903, R7904, R7905, R7906, R7907, R7908, R7909, R7910, R7911, R7912, R7913, R7914, R7915, R7916, R7917, R7918, R7919, R7920, R7921, R7922, R7923, R7924, R7925, R7926, R7927, R7928, R7929, R7930, R7931, R7932, R7933, R7934, R7935, R7936, R7937, R7938, R7939, R7940, R7941, R7942, R7943, R7944, R7945, R7946, R7947, R7948, R7949, R7950, R7951, R7952, R7953, R7954, R7955, R7956, R7957, R7958, R7959, R8, R9;
synchronised {  // Automata constraining P18
automaton P18_0 {
  init s0;
  s0 -> s1 [122, 122];
  accepting s1;
};
};
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s0 [0, 65535] { R6 += 1 };
  accepting s0;
};
automaton uri_1 {
  init s0;
  s0 -> s1 [0, 45] { R7911 += 1 };
  s0 -> s0 [0, 65535] { R7910 += 1, R7911 += 1 };
  s0 -> s2 [46, 46] { R7911 += 1 };
  s0 -> s3 [47, 47] { R7911 += 1 };
  s0 -> s1 [48, 65535] { R7911 += 1 };
  s1 -> s1 [0, 45] { R7911 += 1 };
  s1 -> s2 [46, 46] { R7911 += 1 };
  s1 -> s3 [47, 47] { R7911 += 1 };
  s1 -> s1 [48, 65535] { R7911 += 1 };
  s2 -> s1 [0, 45] { R7911 += 1 };
  s2 -> s2 [46, 46] { R7911 += 1 };
  s2 -> s3 [47, 47] { R7911 += 1 };
  s2 -> s1 [48, 114] { R7911 += 1 };
  s2 -> s8 [115, 115] { R7911 += 1 };
  s2 -> s1 [116, 65535] { R7911 += 1 };
  s3 -> s3 [0, 45] { R7911 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s4 [46, 46] { R7911 += 1 };
  s3 -> s3 [47, 65535] { R7911 += 1 };
  s4 -> s3 [0, 45] { R7911 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s4 [46, 46] { R7911 += 1 };
  s4 -> s3 [47, 114] { R7911 += 1 };
  s4 -> s5 [115, 115] { R7911 += 1 };
  s4 -> s3 [116, 65535] { R7911 += 1 };
  s5 -> s3 [0, 45] { R7911 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s4 [46, 46] { R7911 += 1 };
  s5 -> s3 [47, 110] { R7911 += 1 };
  s5 -> s6 [111, 111] { R7911 += 1 };
  s5 -> s3 [112, 65535] { R7911 += 1 };
  s6 -> s3 [0, 45] { R7911 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s4 [46, 46] { R7911 += 1 };
  s6 -> s3 [47, 98] { R7911 += 1 };
  s6 -> s7 [99, 99] { R7911 += 1 };
  s6 -> s3 [100, 65535] { R7911 += 1 };
  s7 -> s3 [0, 45] { R7911 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s4 [46, 46] { R7911 += 1 };
  s7 -> s3 [47, 106] { R7911 += 1 };
  s7 -> s3 [108, 65535] { R7911 += 1 };
  s8 -> s1 [0, 45] { R7911 += 1 };
  s8 -> s2 [46, 46] { R7911 += 1 };
  s8 -> s3 [47, 47] { R7911 += 1 };
  s8 -> s1 [48, 110] { R7911 += 1 };
  s8 -> s9 [111, 111] { R7911 += 1 };
  s8 -> s1 [112, 65535] { R7911 += 1 };
  s9 -> s1 [0, 45] { R7911 += 1 };
  s9 -> s2 [46, 46] { R7911 += 1 };
  s9 -> s3 [47, 47] { R7911 += 1 };
  s9 -> s1 [48, 98] { R7911 += 1 };
  s9 -> s10 [99, 99] { R7911 += 1 };
  s9 -> s1 [100, 65535] { R7911 += 1 };
  s10 -> s1 [0, 45] { R7911 += 1 };
  s10 -> s2 [46, 46] { R7911 += 1 };
  s10 -> s3 [47, 47] { R7911 += 1 };
  s10 -> s1 [48, 106] { R7911 += 1 };
  s10 -> s1 [108, 65535] { R7911 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 65535] { R7913 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R7912 += 1, R7913 += 1 };
  s1 -> s1 [0, 65535] { R7913 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_3 {
  init s0;
  s0 -> s1 [0, 46] { R7915 += 1, R6249 += 1 };
  s0 -> s2 [0, 65535] { R7915 += 1, R6248 += 1, R6249 += 1 };
  s0 -> s0 [0, 65535] { R7914 += 1, R7915 += 1 };
  s0 -> s3 [47, 47] { R7915 += 1 };
  s0 -> s1 [48, 65535] { R7915 += 1, R6249 += 1 };
  s1 -> s1 [0, 46] { R7915 += 1, R6249 += 1 };
  s1 -> s3 [47, 47] { R7915 += 1 };
  s1 -> s1 [48, 65535] { R7915 += 1, R6249 += 1 };
  s2 -> s1 [0, 46] { R7915 += 1, R6249 += 1 };
  s2 -> s2 [0, 65535] { R7915 += 1, R6248 += 1, R6249 += 1 };
  s2 -> s3 [47, 47] { R7915 += 1 };
  s2 -> s1 [48, 65535] { R7915 += 1, R6249 += 1 };
  s3 -> s3 [0, 65535] { R7915 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton uri_4 {
  init s0;
  s0 -> s1 [0, 65535] { R7917 += 1, R7821 += 1, R1 += 1 };
  s0 -> s0 [0, 65535] { R7916 += 1, R7917 += 1 };
  s0 -> s2 [0, 65535] { R7917 += 1, R7820 += 1, R7821 += 1 };
  s1 -> s1 [0, 65535] { R7917 += 1, R7821 += 1, R1 += 1 };
  s1 -> s4 [0, 65535] { R7917 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R7917 += 1, R7821 += 1, R1 += 1 };
  s2 -> s2 [0, 65535] { R7917 += 1, R7820 += 1, R7821 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R7917 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 63] { R7919 += 1, R7869 += 1 };
  s0 -> s2 [0, 65535] { R7919 += 1, R7868 += 1, R7869 += 1 };
  s0 -> s0 [0, 65535] { R7918 += 1, R7919 += 1 };
  s0 -> s3 [64, 64] { R7919 += 1, R7869 += 1 };
  s0 -> s1 [65, 65535] { R7919 += 1, R7869 += 1 };
  s1 -> s1 [0, 63] { R7919 += 1, R7869 += 1 };
  s1 -> s3 [64, 64] { R7919 += 1, R7869 += 1 };
  s1 -> s1 [65, 65535] { R7919 += 1, R7869 += 1 };
  s2 -> s1 [0, 63] { R7919 += 1, R7869 += 1 };
  s2 -> s2 [0, 65535] { R7919 += 1, R7868 += 1, R7869 += 1 };
  s2 -> s3 [64, 64] { R7919 += 1, R7869 += 1 };
  s2 -> s1 [65, 65535] { R7919 += 1, R7869 += 1 };
  s3 -> s3 [0, 65535] { R7919 += 1, R7869 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R7919 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R7919 += 1 };
  accepting s3, s4, s5;
};
automaton uri_6 {
  init s0;
  s0 -> s1 [0, 65535] { R7921 += 1, R7871 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R7920 += 1, R7921 += 1 };
  s0 -> s2 [0, 65535] { R7921 += 1, R7870 += 1, R7871 += 1 };
  s1 -> s4 [0, 65535] { R7921 += 1 };
  s1 -> s1 [0, 65535] { R7921 += 1, R7871 += 1, R4 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R7921 += 1, R7871 += 1, R4 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R7921 += 1, R7870 += 1, R7871 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R7921 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_7 {
  init s0;
  s0 -> s1 [0, 89] { R7923 += 1, R7873 += 1 };
  s0 -> s2 [0, 65535] { R7923 += 1, R7872 += 1, R7873 += 1 };
  s0 -> s3 [0, 65535] { R7923 += 1, R7873 += 1, R6244 += 1 };
  s0 -> s0 [0, 65535] { R7922 += 1, R7923 += 1 };
  s0 -> s4 [90, 90] { R7923 += 1, R7873 += 1 };
  s0 -> s1 [91, 65535] { R7923 += 1, R7873 += 1 };
  s1 -> s1 [0, 89] { R7923 += 1, R7873 += 1 };
  s1 -> s1 [0, 65535] { R7923 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s4 [90, 90] { R7923 += 1, R7873 += 1 };
  s1 -> s1 [91, 65535] { R7923 += 1, R7873 += 1 };
  s2 -> s1 [0, 89] { R7923 += 1, R7873 += 1 };
  s2 -> s2 [0, 65535] { R7923 += 1, R7872 += 1, R7873 += 1 };
  s2 -> s3 [0, 65535] { R7923 += 1, R7873 += 1, R6244 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [90, 90] { R7923 += 1, R7873 += 1 };
  s2 -> s1 [91, 65535] { R7923 += 1, R7873 += 1 };
  s3 -> s1 [0, 89] { R7923 += 1, R7873 += 1 };
  s3 -> s3 [0, 65535] { R7923 += 1, R7873 += 1, R6244 += 1 };
  s3 -> s5 [0, 65535] { R7923 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s4 [90, 90] { R7923 += 1, R7873 += 1 };
  s3 -> s1 [91, 65535] { R7923 += 1, R7873 += 1 };
  s4 -> s4 [0, 65535] { R7923 += 1, R7873 += 1 };
  s5 -> s5 [0, 65535] { R7923 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s5, s2, s6, s1, s0;
};
automaton uri_8 {
  init s0;
  s0 -> s1 [0, 36] { R7925 += 1, R7875 += 1, R7817 += 1 };
  s0 -> s2 [0, 65535] { R7925 += 1, R7874 += 1, R7875 += 1 };
  s0 -> s0 [0, 65535] { R7924 += 1, R7925 += 1 };
  s0 -> s3 [0, 65535] { R7925 += 1, R7875 += 1, R7816 += 1, R7817 += 1 };
  s0 -> s1 [38, 42] { R7925 += 1, R7875 += 1, R7817 += 1 };
  s0 -> s1 [44, 57] { R7925 += 1, R7875 += 1, R7817 += 1 };
  s0 -> s1 [59, 63] { R7925 += 1, R7875 += 1, R7817 += 1 };
  s0 -> s1 [65, 65535] { R7925 += 1, R7875 += 1, R7817 += 1 };
  s1 -> s1 [0, 36] { R7925 += 1, R7875 += 1, R7817 += 1 };
  s1 -> s1 [0, 65535] { R7925 += 1, R7875 += 1 };
  s1 -> s4 [0, 65535] { R7925 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [38, 42] { R7925 += 1, R7875 += 1, R7817 += 1 };
  s1 -> s1 [44, 57] { R7925 += 1, R7875 += 1, R7817 += 1 };
  s1 -> s1 [59, 63] { R7925 += 1, R7875 += 1, R7817 += 1 };
  s1 -> s1 [65, 65535] { R7925 += 1, R7875 += 1, R7817 += 1 };
  s2 -> s1 [0, 36] { R7925 += 1, R7875 += 1, R7817 += 1 };
  s2 -> s2 [0, 65535] { R7925 += 1, R7874 += 1, R7875 += 1 };
  s2 -> s3 [0, 65535] { R7925 += 1, R7875 += 1, R7816 += 1, R7817 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [38, 42] { R7925 += 1, R7875 += 1, R7817 += 1 };
  s2 -> s1 [44, 57] { R7925 += 1, R7875 += 1, R7817 += 1 };
  s2 -> s1 [59, 63] { R7925 += 1, R7875 += 1, R7817 += 1 };
  s2 -> s1 [65, 65535] { R7925 += 1, R7875 += 1, R7817 += 1 };
  s3 -> s1 [0, 36] { R7925 += 1, R7875 += 1, R7817 += 1 };
  s3 -> s4 [0, 65535] { R7925 += 1 };
  s3 -> s3 [0, 65535] { R7925 += 1, R7875 += 1, R7816 += 1, R7817 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [38, 42] { R7925 += 1, R7875 += 1, R7817 += 1 };
  s3 -> s1 [44, 57] { R7925 += 1, R7875 += 1, R7817 += 1 };
  s3 -> s1 [59, 63] { R7925 += 1, R7875 += 1, R7817 += 1 };
  s3 -> s1 [65, 65535] { R7925 += 1, R7875 += 1, R7817 += 1 };
  s4 -> s4 [0, 65535] { R7925 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_9 {
  init s0;
  s0 -> s0 [0, 65535] { R7926 += 1, R7927 += 1 };
  s0 -> s1 [0, 65535] { R7927 += 1, R7876 += 1, R7877 += 1 };
  s0 -> s2 [0, 65535] { R7927 += 1, R7877 += 1, R7819 += 1, R0 += 1 };
  s0 -> s3 [0, 65535] { R7927 += 1, R7877 += 1, R7818 += 1, R7819 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R7927 += 1, R7876 += 1, R7877 += 1 };
  s1 -> s2 [0, 65535] { R7927 += 1, R7877 += 1, R7819 += 1, R0 += 1 };
  s1 -> s3 [0, 65535] { R7927 += 1, R7877 += 1, R7818 += 1, R7819 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R7927 += 1, R7877 += 1, R7819 += 1, R0 += 1 };
  s2 -> s5 [0, 65535] { R7927 += 1 };
  s2 -> s6 [0, 65535] { R7927 += 1, R7877 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R7927 += 1, R7877 += 1, R7819 += 1, R0 += 1 };
  s3 -> s3 [0, 65535] { R7927 += 1, R7877 += 1, R7818 += 1, R7819 += 1 };
  s3 -> s5 [0, 65535] { R7927 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R7927 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R7927 += 1 };
  s6 -> s6 [0, 65535] { R7927 += 1, R7877 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_10 {
  init s0;
  s0 -> s1 [0, 65535] { R7929 += 1, R7878 += 1, R7879 += 1 };
  s0 -> s2 [0, 65535] { R7929 += 1, R7879 += 1, R7839 += 1, R7806 += 1 };
  s0 -> s0 [0, 65535] { R7928 += 1, R7929 += 1 };
  s0 -> s3 [0, 65535] { R7929 += 1, R7879 += 1, R7838 += 1, R7839 += 1 };
  s1 -> s1 [0, 65535] { R7929 += 1, R7878 += 1, R7879 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R7929 += 1, R7879 += 1, R7839 += 1, R7806 += 1 };
  s1 -> s3 [0, 65535] { R7929 += 1, R7879 += 1, R7838 += 1, R7839 += 1 };
  s2 -> s6 [0, 65535] { R7929 += 1, R7879 += 1 };
  s2 -> s4 [0, 65535] { R7929 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R7929 += 1, R7879 += 1, R7839 += 1, R7806 += 1 };
  s3 -> s4 [0, 65535] { R7929 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R7929 += 1, R7879 += 1, R7839 += 1, R7806 += 1 };
  s3 -> s3 [0, 65535] { R7929 += 1, R7879 += 1, R7838 += 1, R7839 += 1 };
  s4 -> s4 [0, 65535] { R7929 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7929 += 1, R7879 += 1 };
  s6 -> s4 [0, 65535] { R7929 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_11 {
  init s0;
  s0 -> s1 [0, 107] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s0 -> s2 [0, 65535] { R7931 += 1, R7880 += 1, R7881 += 1 };
  s0 -> s0 [0, 65535] { R7930 += 1, R7931 += 1 };
  s0 -> s3 [0, 65535] { R7931 += 1, R7881 += 1, R7840 += 1, R7841 += 1 };
  s0 -> s4 [108, 108] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s0 -> s1 [109, 65535] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s1 -> s1 [0, 65535] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s1 -> s5 [0, 65535] { R7931 += 1 };
  s1 -> s15 [0, 65535] { R7931 += 1, R7881 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s1 [0, 107] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R7931 += 1, R7880 += 1, R7881 += 1 };
  s2 -> s3 [0, 65535] { R7931 += 1, R7881 += 1, R7840 += 1, R7841 += 1 };
  s2 -> s4 [108, 108] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s2 -> s1 [109, 65535] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s3 -> s1 [0, 107] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s3 -> s5 [0, 65535] { R7931 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R7931 += 1, R7881 += 1, R7840 += 1, R7841 += 1 };
  s3 -> s4 [108, 108] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s3 -> s1 [109, 65535] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s4 -> s1 [0, 110] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s4 -> s5 [0, 65535] { R7931 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R7931 += 1, R7881 += 1 };
  s4 -> s7 [111, 111] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s4 -> s1 [112, 65535] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s5 -> s5 [0, 65535] { R7931 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s1 [0, 98] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s7 -> s5 [0, 65535] { R7931 += 1 };
  s7 -> s7 [0, 65535] { R7931 += 1, R7881 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s8 [99, 99] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s7 -> s1 [100, 65535] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s8 -> s1 [0, 96] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s8 -> s5 [0, 65535] { R7931 += 1 };
  s8 -> s8 [0, 65535] { R7931 += 1, R7881 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s9 [97, 97] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s8 -> s1 [98, 65535] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s9 -> s1 [0, 107] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s9 -> s5 [0, 65535] { R7931 += 1 };
  s9 -> s9 [0, 65535] { R7931 += 1, R7881 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s10 [108, 108] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s9 -> s1 [109, 65535] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s10 -> s1 [0, 103] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s10 -> s5 [0, 65535] { R7931 += 1 };
  s10 -> s6 [0, 65535];
  s10 -> s10 [0, 65535] { R7931 += 1, R7881 += 1 };
  s10 -> s11 [104, 104] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s10 -> s1 [105, 65535] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s11 -> s1 [0, 110] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s11 -> s5 [0, 65535] { R7931 += 1 };
  s11 -> s11 [0, 65535] { R7931 += 1, R7881 += 1 };
  s11 -> s6 [0, 65535];
  s11 -> s12 [111, 111] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s11 -> s1 [112, 65535] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s12 -> s1 [0, 114] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s12 -> s12 [0, 65535] { R7931 += 1, R7881 += 1 };
  s12 -> s5 [0, 65535] { R7931 += 1 };
  s12 -> s6 [0, 65535];
  s12 -> s13 [115, 115] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s12 -> s1 [116, 65535] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s13 -> s1 [0, 115] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s13 -> s13 [0, 65535] { R7931 += 1, R7881 += 1 };
  s13 -> s5 [0, 65535] { R7931 += 1 };
  s13 -> s6 [0, 65535];
  s13 -> s14 [116, 116] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s13 -> s1 [117, 65535] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s14 -> s1 [0, 65535] { R7931 += 1, R7881 += 1, R7841 += 1 };
  s15 -> s5 [0, 65535] { R7931 += 1 };
  s15 -> s15 [0, 65535] { R7931 += 1, R7881 += 1 };
  s15 -> s6 [0, 65535];
  accepting s3, s4, s12, s8, s13, s5, s2, s9, s6, s1, s7, s0, s15, s10, s11;
};
automaton uri_12 {
  init s0;
  s0 -> s1 [0, 43] { R7933 += 1, R7883 += 1, R7843 += 1 };
  s0 -> s2 [0, 65535] { R7933 += 1, R7883 += 1, R7842 += 1, R7843 += 1 };
  s0 -> s3 [0, 65535] { R7933 += 1, R7882 += 1, R7883 += 1 };
  s0 -> s0 [0, 65535] { R7932 += 1, R7933 += 1 };
  s0 -> s4 [44, 44] { R7933 += 1, R7883 += 1, R7843 += 1 };
  s0 -> s1 [45, 65535] { R7933 += 1, R7883 += 1, R7843 += 1 };
  s1 -> s1 [0, 43] { R7933 += 1, R7883 += 1, R7843 += 1 };
  s1 -> s4 [44, 44] { R7933 += 1, R7883 += 1, R7843 += 1 };
  s1 -> s1 [45, 65535] { R7933 += 1, R7883 += 1, R7843 += 1 };
  s2 -> s1 [0, 43] { R7933 += 1, R7883 += 1, R7843 += 1 };
  s2 -> s2 [0, 65535] { R7933 += 1, R7883 += 1, R7842 += 1, R7843 += 1 };
  s2 -> s4 [44, 44] { R7933 += 1, R7883 += 1, R7843 += 1 };
  s2 -> s1 [45, 65535] { R7933 += 1, R7883 += 1, R7843 += 1 };
  s3 -> s1 [0, 43] { R7933 += 1, R7883 += 1, R7843 += 1 };
  s3 -> s2 [0, 65535] { R7933 += 1, R7883 += 1, R7842 += 1, R7843 += 1 };
  s3 -> s3 [0, 65535] { R7933 += 1, R7882 += 1, R7883 += 1 };
  s3 -> s4 [44, 44] { R7933 += 1, R7883 += 1, R7843 += 1 };
  s3 -> s1 [45, 65535] { R7933 += 1, R7883 += 1, R7843 += 1 };
  s4 -> s5 [0, 65535] { R7933 += 1 };
  s4 -> s4 [0, 65535] { R7933 += 1, R7883 += 1, R7843 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R7933 += 1, R7883 += 1 };
  s5 -> s5 [0, 65535] { R7933 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R7933 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R7933 += 1, R7883 += 1 };
  accepting s4, s5, s6, s7;
};
automaton uri_13 {
  init s0;
  s0 -> s1 [0, 65535] { R7935 += 1, R7885 += 1, R7845 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R7934 += 1, R7935 += 1 };
  s0 -> s2 [0, 65535] { R7935 += 1, R7884 += 1, R7885 += 1 };
  s0 -> s3 [0, 65535] { R7935 += 1, R7885 += 1, R7844 += 1, R7845 += 1 };
  s1 -> s1 [0, 65535] { R7935 += 1, R7885 += 1, R7845 += 1, R3 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R7935 += 1, R7885 += 1 };
  s1 -> s5 [0, 65535] { R7935 += 1 };
  s2 -> s1 [0, 65535] { R7935 += 1, R7885 += 1, R7845 += 1, R3 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R7935 += 1, R7884 += 1, R7885 += 1 };
  s2 -> s3 [0, 65535] { R7935 += 1, R7885 += 1, R7844 += 1, R7845 += 1 };
  s3 -> s1 [0, 65535] { R7935 += 1, R7885 += 1, R7845 += 1, R3 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R7935 += 1, R7885 += 1, R7844 += 1, R7845 += 1 };
  s3 -> s5 [0, 65535] { R7935 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R7935 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R7935 += 1, R7885 += 1 };
  s6 -> s5 [0, 65535] { R7935 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 43] { R7937 += 1, R7887 += 1, R7847 += 1, R14 += 1 };
  s0 -> s2 [0, 65535] { R7937 += 1, R7886 += 1, R7887 += 1 };
  s0 -> s0 [0, 65535] { R7936 += 1, R7937 += 1 };
  s0 -> s3 [0, 65535] { R7937 += 1, R7887 += 1, R7846 += 1, R7847 += 1 };
  s0 -> s4 [0, 65535] { R7937 += 1, R7887 += 1, R7847 += 1, R13 += 1, R14 += 1 };
  s0 -> s5 [44, 44] { R7937 += 1, R7887 += 1, R7847 += 1 };
  s0 -> s1 [45, 65535] { R7937 += 1, R7887 += 1, R7847 += 1, R14 += 1 };
  s1 -> s1 [0, 43] { R7937 += 1, R7887 += 1, R7847 += 1, R14 += 1 };
  s1 -> s5 [44, 44] { R7937 += 1, R7887 += 1, R7847 += 1 };
  s1 -> s1 [45, 65535] { R7937 += 1, R7887 += 1, R7847 += 1, R14 += 1 };
  s2 -> s1 [0, 43] { R7937 += 1, R7887 += 1, R7847 += 1, R14 += 1 };
  s2 -> s2 [0, 65535] { R7937 += 1, R7886 += 1, R7887 += 1 };
  s2 -> s3 [0, 65535] { R7937 += 1, R7887 += 1, R7846 += 1, R7847 += 1 };
  s2 -> s4 [0, 65535] { R7937 += 1, R7887 += 1, R7847 += 1, R13 += 1, R14 += 1 };
  s2 -> s5 [44, 44] { R7937 += 1, R7887 += 1, R7847 += 1 };
  s2 -> s1 [45, 65535] { R7937 += 1, R7887 += 1, R7847 += 1, R14 += 1 };
  s3 -> s1 [0, 43] { R7937 += 1, R7887 += 1, R7847 += 1, R14 += 1 };
  s3 -> s3 [0, 65535] { R7937 += 1, R7887 += 1, R7846 += 1, R7847 += 1 };
  s3 -> s4 [0, 65535] { R7937 += 1, R7887 += 1, R7847 += 1, R13 += 1, R14 += 1 };
  s3 -> s5 [44, 44] { R7937 += 1, R7887 += 1, R7847 += 1 };
  s3 -> s1 [45, 65535] { R7937 += 1, R7887 += 1, R7847 += 1, R14 += 1 };
  s4 -> s1 [0, 43] { R7937 += 1, R7887 += 1, R7847 += 1, R14 += 1 };
  s4 -> s4 [0, 65535] { R7937 += 1, R7887 += 1, R7847 += 1, R13 += 1, R14 += 1 };
  s4 -> s5 [44, 44] { R7937 += 1, R7887 += 1, R7847 += 1 };
  s4 -> s1 [45, 65535] { R7937 += 1, R7887 += 1, R7847 += 1, R14 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R7937 += 1 };
  s5 -> s5 [0, 65535] { R7937 += 1, R7887 += 1, R7847 += 1 };
  s5 -> s8 [0, 65535] { R7937 += 1, R7887 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R7937 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R7937 += 1 };
  s8 -> s8 [0, 65535] { R7937 += 1, R7887 += 1 };
  accepting s5, s6, s7, s8;
};
automaton uri_15 {
  init s0;
  s0 -> s1 [0, 65535] { R7939 += 1, R7888 += 1, R7889 += 1 };
  s0 -> s2 [0, 65535] { R7939 += 1, R7889 += 1, R7848 += 1, R7849 += 1 };
  s0 -> s0 [0, 65535] { R7938 += 1, R7939 += 1 };
  s0 -> s3 [0, 65535] { R7939 += 1, R7889 += 1, R7849 += 1 };
  s1 -> s1 [0, 65535] { R7939 += 1, R7888 += 1, R7889 += 1 };
  s1 -> s2 [0, 65535] { R7939 += 1, R7889 += 1, R7848 += 1, R7849 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s3 [0, 65535] { R7939 += 1, R7889 += 1, R7849 += 1 };
  s2 -> s2 [0, 65535] { R7939 += 1, R7889 += 1, R7848 += 1, R7849 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R7939 += 1, R7889 += 1, R7849 += 1 };
  s2 -> s5 [0, 65535] { R7939 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R7939 += 1, R7889 += 1, R7849 += 1 };
  s3 -> s5 [0, 65535] { R7939 += 1 };
  s3 -> s6 [0, 65535] { R7939 += 1, R7889 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R7939 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R7939 += 1 };
  s6 -> s6 [0, 65535] { R7939 += 1, R7889 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 64] { R7941 += 1, R7891 += 1, R7851 += 1, R7823 += 1 };
  s0 -> s2 [0, 65535] { R7941 += 1, R7891 += 1, R7851 += 1, R7822 += 1, R7823 += 1 };
  s0 -> s0 [0, 65535] { R7940 += 1, R7941 += 1 };
  s0 -> s3 [0, 65535] { R7941 += 1, R7890 += 1, R7891 += 1 };
  s0 -> s4 [0, 65535] { R7941 += 1, R7891 += 1, R7850 += 1, R7851 += 1 };
  s0 -> s5 [78, 78] { R7941 += 1, R7891 += 1, R7851 += 1, R7823 += 1 };
  s0 -> s1 [79, 65535] { R7941 += 1, R7891 += 1, R7851 += 1, R7823 += 1 };
  s1 -> s1 [0, 64] { R7941 += 1, R7891 += 1, R7851 += 1, R7823 += 1 };
  s1 -> s5 [78, 78] { R7941 += 1, R7891 += 1, R7851 += 1, R7823 += 1 };
  s1 -> s1 [79, 65535] { R7941 += 1, R7891 += 1, R7851 += 1, R7823 += 1 };
  s2 -> s1 [0, 64] { R7941 += 1, R7891 += 1, R7851 += 1, R7823 += 1 };
  s2 -> s2 [0, 65535] { R7941 += 1, R7891 += 1, R7851 += 1, R7822 += 1, R7823 += 1 };
  s2 -> s5 [78, 78] { R7941 += 1, R7891 += 1, R7851 += 1, R7823 += 1 };
  s2 -> s1 [79, 65535] { R7941 += 1, R7891 += 1, R7851 += 1, R7823 += 1 };
  s3 -> s1 [0, 64] { R7941 += 1, R7891 += 1, R7851 += 1, R7823 += 1 };
  s3 -> s2 [0, 65535] { R7941 += 1, R7891 += 1, R7851 += 1, R7822 += 1, R7823 += 1 };
  s3 -> s3 [0, 65535] { R7941 += 1, R7890 += 1, R7891 += 1 };
  s3 -> s4 [0, 65535] { R7941 += 1, R7891 += 1, R7850 += 1, R7851 += 1 };
  s3 -> s5 [78, 78] { R7941 += 1, R7891 += 1, R7851 += 1, R7823 += 1 };
  s3 -> s1 [79, 65535] { R7941 += 1, R7891 += 1, R7851 += 1, R7823 += 1 };
  s4 -> s1 [0, 64] { R7941 += 1, R7891 += 1, R7851 += 1, R7823 += 1 };
  s4 -> s2 [0, 65535] { R7941 += 1, R7891 += 1, R7851 += 1, R7822 += 1, R7823 += 1 };
  s4 -> s4 [0, 65535] { R7941 += 1, R7891 += 1, R7850 += 1, R7851 += 1 };
  s4 -> s5 [78, 78] { R7941 += 1, R7891 += 1, R7851 += 1, R7823 += 1 };
  s4 -> s1 [79, 65535] { R7941 += 1, R7891 += 1, R7851 += 1, R7823 += 1 };
  s5 -> s5 [0, 64] { R7941 += 1, R7891 += 1, R7851 += 1, R7823 += 1 };
  s5 -> s6 [0, 65535] { R7941 += 1 };
  s5 -> s5 [0, 65535] { R7941 += 1, R7891 += 1, R7851 += 1 };
  s5 -> s7 [0, 65535] { R7941 += 1, R7891 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [78, 65535] { R7941 += 1, R7891 += 1, R7851 += 1, R7823 += 1 };
  s6 -> s6 [0, 65535] { R7941 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s6 [0, 65535] { R7941 += 1 };
  s7 -> s7 [0, 65535] { R7941 += 1, R7891 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton uri_17 {
  init s0;
  s0 -> s1 [0, 65535] { R7943 += 1, R7893 += 1, R7853 += 1, R7824 += 1, R7825 += 1 };
  s0 -> s0 [0, 65535] { R7942 += 1, R7943 += 1 };
  s0 -> s2 [0, 65535] { R7943 += 1, R7892 += 1, R7893 += 1 };
  s0 -> s3 [0, 65535] { R7943 += 1, R7893 += 1, R7852 += 1, R7853 += 1 };
  s0 -> s4 [0, 65535] { R7943 += 1, R7893 += 1, R7853 += 1, R7825 += 1, R2 += 1 };
  s1 -> s1 [0, 65535] { R7943 += 1, R7893 += 1, R7853 += 1, R7824 += 1, R7825 += 1 };
  s1 -> s5 [0, 65535] { R7943 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s8 [0, 65535] { R7943 += 1, R7893 += 1 };
  s1 -> s4 [0, 65535] { R7943 += 1, R7893 += 1, R7853 += 1, R7825 += 1, R2 += 1 };
  s2 -> s1 [0, 65535] { R7943 += 1, R7893 += 1, R7853 += 1, R7824 += 1, R7825 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R7943 += 1, R7892 += 1, R7893 += 1 };
  s2 -> s3 [0, 65535] { R7943 += 1, R7893 += 1, R7852 += 1, R7853 += 1 };
  s2 -> s4 [0, 65535] { R7943 += 1, R7893 += 1, R7853 += 1, R7825 += 1, R2 += 1 };
  s3 -> s1 [0, 65535] { R7943 += 1, R7893 += 1, R7853 += 1, R7824 += 1, R7825 += 1 };
  s3 -> s5 [0, 65535] { R7943 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R7943 += 1, R7893 += 1, R7852 += 1, R7853 += 1 };
  s3 -> s4 [0, 65535] { R7943 += 1, R7893 += 1, R7853 += 1, R7825 += 1, R2 += 1 };
  s4 -> s5 [0, 65535] { R7943 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R7943 += 1, R7893 += 1, R7853 += 1 };
  s4 -> s8 [0, 65535] { R7943 += 1, R7893 += 1 };
  s4 -> s4 [0, 65535] { R7943 += 1, R7893 += 1, R7853 += 1, R7825 += 1, R2 += 1 };
  s5 -> s5 [0, 65535] { R7943 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R7943 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R7943 += 1, R7893 += 1, R7853 += 1 };
  s7 -> s8 [0, 65535] { R7943 += 1, R7893 += 1 };
  s8 -> s5 [0, 65535] { R7943 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R7943 += 1, R7893 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 57] { R7945 += 1, R7895 += 1, R7855 += 1, R7827 += 1 };
  s0 -> s2 [0, 65535] { R7945 += 1, R7894 += 1, R7895 += 1 };
  s0 -> s3 [0, 65535] { R7945 += 1, R7895 += 1, R7855 += 1, R7826 += 1, R7827 += 1 };
  s0 -> s0 [0, 65535] { R7944 += 1, R7945 += 1 };
  s0 -> s4 [0, 65535] { R7945 += 1, R7895 += 1, R7855 += 1, R7827 += 1, R8 += 1 };
  s0 -> s5 [0, 65535] { R7945 += 1, R7895 += 1, R7854 += 1, R7855 += 1 };
  s0 -> s6 [58, 58] { R7945 += 1, R7895 += 1, R7855 += 1, R7827 += 1 };
  s0 -> s1 [59, 65535] { R7945 += 1, R7895 += 1, R7855 += 1, R7827 += 1 };
  s1 -> s1 [0, 57] { R7945 += 1, R7895 += 1, R7855 += 1, R7827 += 1 };
  s1 -> s1 [0, 65535] { R7945 += 1, R7895 += 1, R7855 += 1 };
  s1 -> s7 [0, 65535] { R7945 += 1 };
  s1 -> s10 [0, 65535] { R7945 += 1, R7895 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s6 [58, 58] { R7945 += 1, R7895 += 1, R7855 += 1, R7827 += 1 };
  s1 -> s1 [59, 65535] { R7945 += 1, R7895 += 1, R7855 += 1, R7827 += 1 };
  s2 -> s1 [0, 57] { R7945 += 1, R7895 += 1, R7855 += 1, R7827 += 1 };
  s2 -> s2 [0, 65535] { R7945 += 1, R7894 += 1, R7895 += 1 };
  s2 -> s3 [0, 65535] { R7945 += 1, R7895 += 1, R7855 += 1, R7826 += 1, R7827 += 1 };
  s2 -> s4 [0, 65535] { R7945 += 1, R7895 += 1, R7855 += 1, R7827 += 1, R8 += 1 };
  s2 -> s5 [0, 65535] { R7945 += 1, R7895 += 1, R7854 += 1, R7855 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s6 [58, 58] { R7945 += 1, R7895 += 1, R7855 += 1, R7827 += 1 };
  s2 -> s1 [59, 65535] { R7945 += 1, R7895 += 1, R7855 += 1, R7827 += 1 };
  s3 -> s1 [0, 57] { R7945 += 1, R7895 += 1, R7855 += 1, R7827 += 1 };
  s3 -> s3 [0, 65535] { R7945 += 1, R7895 += 1, R7855 += 1, R7826 += 1, R7827 += 1 };
  s3 -> s4 [0, 65535] { R7945 += 1, R7895 += 1, R7855 += 1, R7827 += 1, R8 += 1 };
  s3 -> s7 [0, 65535] { R7945 += 1 };
  s3 -> s10 [0, 65535] { R7945 += 1, R7895 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s6 [58, 58] { R7945 += 1, R7895 += 1, R7855 += 1, R7827 += 1 };
  s3 -> s1 [59, 65535] { R7945 += 1, R7895 += 1, R7855 += 1, R7827 += 1 };
  s4 -> s1 [0, 57] { R7945 += 1, R7895 += 1, R7855 += 1, R7827 += 1 };
  s4 -> s9 [0, 65535] { R7945 += 1, R7895 += 1, R7855 += 1 };
  s4 -> s4 [0, 65535] { R7945 += 1, R7895 += 1, R7855 += 1, R7827 += 1, R8 += 1 };
  s4 -> s7 [0, 65535] { R7945 += 1 };
  s4 -> s10 [0, 65535] { R7945 += 1, R7895 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s6 [58, 58] { R7945 += 1, R7895 += 1, R7855 += 1, R7827 += 1 };
  s4 -> s1 [59, 65535] { R7945 += 1, R7895 += 1, R7855 += 1, R7827 += 1 };
  s5 -> s1 [0, 57] { R7945 += 1, R7895 += 1, R7855 += 1, R7827 += 1 };
  s5 -> s3 [0, 65535] { R7945 += 1, R7895 += 1, R7855 += 1, R7826 += 1, R7827 += 1 };
  s5 -> s4 [0, 65535] { R7945 += 1, R7895 += 1, R7855 += 1, R7827 += 1, R8 += 1 };
  s5 -> s5 [0, 65535] { R7945 += 1, R7895 += 1, R7854 += 1, R7855 += 1 };
  s5 -> s7 [0, 65535] { R7945 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s6 [58, 58] { R7945 += 1, R7895 += 1, R7855 += 1, R7827 += 1 };
  s5 -> s1 [59, 65535] { R7945 += 1, R7895 += 1, R7855 += 1, R7827 += 1 };
  s6 -> s6 [0, 65535] { R7945 += 1, R7895 += 1, R7855 += 1, R7827 += 1 };
  s7 -> s7 [0, 65535] { R7945 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R7945 += 1, R7895 += 1, R7855 += 1 };
  s9 -> s7 [0, 65535] { R7945 += 1 };
  s9 -> s10 [0, 65535] { R7945 += 1, R7895 += 1 };
  s9 -> s8 [0, 65535];
  s10 -> s7 [0, 65535] { R7945 += 1 };
  s10 -> s10 [0, 65535] { R7945 += 1, R7895 += 1 };
  s10 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s1, s7, s0, s10;
};
automaton uri_19 {
  init s0;
  s0 -> s1 [0, 77] { R7947 += 1, R7897 += 1, R7857 += 1, R7829 += 1 };
  s0 -> s2 [0, 65535] { R7947 += 1, R7897 += 1, R7856 += 1, R7857 += 1 };
  s0 -> s3 [0, 65535] { R7947 += 1, R7897 += 1, R7857 += 1, R7829 += 1, R9 += 1 };
  s0 -> s4 [0, 65535] { R7947 += 1, R7897 += 1, R7857 += 1, R7828 += 1, R7829 += 1 };
  s0 -> s0 [0, 65535] { R7946 += 1, R7947 += 1 };
  s0 -> s5 [0, 65535] { R7947 += 1, R7896 += 1, R7897 += 1 };
  s0 -> s6 [78, 78] { R7947 += 1, R7897 += 1, R7857 += 1, R7829 += 1 };
  s0 -> s1 [79, 65535] { R7947 += 1, R7897 += 1, R7857 += 1, R7829 += 1 };
  s1 -> s1 [0, 77] { R7947 += 1, R7897 += 1, R7857 += 1, R7829 += 1 };
  s1 -> s1 [0, 65535] { R7947 += 1, R7897 += 1, R7857 += 1 };
  s1 -> s8 [0, 65535] { R7947 += 1 };
  s1 -> s9 [0, 65535] { R7947 += 1, R7897 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s6 [78, 78] { R7947 += 1, R7897 += 1, R7857 += 1, R7829 += 1 };
  s1 -> s1 [79, 65535] { R7947 += 1, R7897 += 1, R7857 += 1, R7829 += 1 };
  s2 -> s1 [0, 77] { R7947 += 1, R7897 += 1, R7857 += 1, R7829 += 1 };
  s2 -> s2 [0, 65535] { R7947 += 1, R7897 += 1, R7856 += 1, R7857 += 1 };
  s2 -> s3 [0, 65535] { R7947 += 1, R7897 += 1, R7857 += 1, R7829 += 1, R9 += 1 };
  s2 -> s8 [0, 65535] { R7947 += 1 };
  s2 -> s4 [0, 65535] { R7947 += 1, R7897 += 1, R7857 += 1, R7828 += 1, R7829 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s6 [78, 78] { R7947 += 1, R7897 += 1, R7857 += 1, R7829 += 1 };
  s2 -> s1 [79, 65535] { R7947 += 1, R7897 += 1, R7857 += 1, R7829 += 1 };
  s3 -> s1 [0, 77] { R7947 += 1, R7897 += 1, R7857 += 1, R7829 += 1 };
  s3 -> s10 [0, 65535] { R7947 += 1, R7897 += 1, R7857 += 1 };
  s3 -> s3 [0, 65535] { R7947 += 1, R7897 += 1, R7857 += 1, R7829 += 1, R9 += 1 };
  s3 -> s8 [0, 65535] { R7947 += 1 };
  s3 -> s9 [0, 65535] { R7947 += 1, R7897 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s6 [78, 78] { R7947 += 1, R7897 += 1, R7857 += 1, R7829 += 1 };
  s3 -> s1 [79, 65535] { R7947 += 1, R7897 += 1, R7857 += 1, R7829 += 1 };
  s4 -> s1 [0, 77] { R7947 += 1, R7897 += 1, R7857 += 1, R7829 += 1 };
  s4 -> s3 [0, 65535] { R7947 += 1, R7897 += 1, R7857 += 1, R7829 += 1, R9 += 1 };
  s4 -> s8 [0, 65535] { R7947 += 1 };
  s4 -> s4 [0, 65535] { R7947 += 1, R7897 += 1, R7857 += 1, R7828 += 1, R7829 += 1 };
  s4 -> s9 [0, 65535] { R7947 += 1, R7897 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s6 [78, 78] { R7947 += 1, R7897 += 1, R7857 += 1, R7829 += 1 };
  s4 -> s1 [79, 65535] { R7947 += 1, R7897 += 1, R7857 += 1, R7829 += 1 };
  s5 -> s1 [0, 77] { R7947 += 1, R7897 += 1, R7857 += 1, R7829 += 1 };
  s5 -> s2 [0, 65535] { R7947 += 1, R7897 += 1, R7856 += 1, R7857 += 1 };
  s5 -> s3 [0, 65535] { R7947 += 1, R7897 += 1, R7857 += 1, R7829 += 1, R9 += 1 };
  s5 -> s4 [0, 65535] { R7947 += 1, R7897 += 1, R7857 += 1, R7828 += 1, R7829 += 1 };
  s5 -> s5 [0, 65535] { R7947 += 1, R7896 += 1, R7897 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s6 [78, 78] { R7947 += 1, R7897 += 1, R7857 += 1, R7829 += 1 };
  s5 -> s1 [79, 65535] { R7947 += 1, R7897 += 1, R7857 += 1, R7829 += 1 };
  s6 -> s6 [0, 65535] { R7947 += 1, R7897 += 1, R7857 += 1, R7829 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R7947 += 1 };
  s8 -> s7 [0, 65535];
  s9 -> s8 [0, 65535] { R7947 += 1 };
  s9 -> s9 [0, 65535] { R7947 += 1, R7897 += 1 };
  s9 -> s7 [0, 65535];
  s10 -> s10 [0, 65535] { R7947 += 1, R7897 += 1, R7857 += 1 };
  s10 -> s8 [0, 65535] { R7947 += 1 };
  s10 -> s9 [0, 65535] { R7947 += 1, R7897 += 1 };
  s10 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s1, s7, s0, s10;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 90] { R7949 += 1, R7899 += 1, R7859 += 1, R7831 += 1, R7809 += 1 };
  s0 -> s2 [0, 65535] { R7949 += 1, R7898 += 1, R7899 += 1 };
  s0 -> s3 [0, 65535] { R7949 += 1, R7899 += 1, R7858 += 1, R7859 += 1 };
  s0 -> s0 [0, 65535] { R7948 += 1, R7949 += 1 };
  s0 -> s4 [0, 65535] { R7949 += 1, R7899 += 1, R7859 += 1, R7830 += 1, R7831 += 1 };
  s0 -> s5 [0, 65535] { R7949 += 1, R7899 += 1, R7859 += 1, R7831 += 1, R7808 += 1, R7809 += 1 };
  s0 -> s6 [91, 91] { R7949 += 1, R7899 += 1, R7859 += 1, R7831 += 1, R7809 += 1 };
  s0 -> s1 [92, 65535] { R7949 += 1, R7899 += 1, R7859 += 1, R7831 += 1, R7809 += 1 };
  s1 -> s11 [0, 65535] { R7949 += 1, R7899 += 1, R7859 += 1, R7831 += 1 };
  s1 -> s1 [0, 65535] { R7949 += 1, R7899 += 1, R7859 += 1, R7831 += 1, R7809 += 1 };
  s1 -> s7 [0, 65535] { R7949 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s9 [0, 65535] { R7949 += 1, R7899 += 1, R7859 += 1 };
  s1 -> s10 [0, 65535] { R7949 += 1, R7899 += 1 };
  s2 -> s1 [0, 90] { R7949 += 1, R7899 += 1, R7859 += 1, R7831 += 1, R7809 += 1 };
  s2 -> s2 [0, 65535] { R7949 += 1, R7898 += 1, R7899 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s3 [0, 65535] { R7949 += 1, R7899 += 1, R7858 += 1, R7859 += 1 };
  s2 -> s4 [0, 65535] { R7949 += 1, R7899 += 1, R7859 += 1, R7830 += 1, R7831 += 1 };
  s2 -> s5 [0, 65535] { R7949 += 1, R7899 += 1, R7859 += 1, R7831 += 1, R7808 += 1, R7809 += 1 };
  s2 -> s6 [91, 91] { R7949 += 1, R7899 += 1, R7859 += 1, R7831 += 1, R7809 += 1 };
  s2 -> s1 [92, 65535] { R7949 += 1, R7899 += 1, R7859 += 1, R7831 += 1, R7809 += 1 };
  s3 -> s1 [0, 90] { R7949 += 1, R7899 += 1, R7859 += 1, R7831 += 1, R7809 += 1 };
  s3 -> s7 [0, 65535] { R7949 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s3 [0, 65535] { R7949 += 1, R7899 += 1, R7858 += 1, R7859 += 1 };
  s3 -> s4 [0, 65535] { R7949 += 1, R7899 += 1, R7859 += 1, R7830 += 1, R7831 += 1 };
  s3 -> s5 [0, 65535] { R7949 += 1, R7899 += 1, R7859 += 1, R7831 += 1, R7808 += 1, R7809 += 1 };
  s3 -> s6 [91, 91] { R7949 += 1, R7899 += 1, R7859 += 1, R7831 += 1, R7809 += 1 };
  s3 -> s1 [92, 65535] { R7949 += 1, R7899 += 1, R7859 += 1, R7831 += 1, R7809 += 1 };
  s4 -> s1 [0, 90] { R7949 += 1, R7899 += 1, R7859 += 1, R7831 += 1, R7809 += 1 };
  s4 -> s7 [0, 65535] { R7949 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s10 [0, 65535] { R7949 += 1, R7899 += 1 };
  s4 -> s4 [0, 65535] { R7949 += 1, R7899 += 1, R7859 += 1, R7830 += 1, R7831 += 1 };
  s4 -> s5 [0, 65535] { R7949 += 1, R7899 += 1, R7859 += 1, R7831 += 1, R7808 += 1, R7809 += 1 };
  s4 -> s6 [91, 91] { R7949 += 1, R7899 += 1, R7859 += 1, R7831 += 1, R7809 += 1 };
  s4 -> s1 [92, 65535] { R7949 += 1, R7899 += 1, R7859 += 1, R7831 += 1, R7809 += 1 };
  s5 -> s1 [0, 90] { R7949 += 1, R7899 += 1, R7859 += 1, R7831 += 1, R7809 += 1 };
  s5 -> s7 [0, 65535] { R7949 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s9 [0, 65535] { R7949 += 1, R7899 += 1, R7859 += 1 };
  s5 -> s10 [0, 65535] { R7949 += 1, R7899 += 1 };
  s5 -> s5 [0, 65535] { R7949 += 1, R7899 += 1, R7859 += 1, R7831 += 1, R7808 += 1, R7809 += 1 };
  s5 -> s6 [91, 91] { R7949 += 1, R7899 += 1, R7859 += 1, R7831 += 1, R7809 += 1 };
  s5 -> s1 [92, 65535] { R7949 += 1, R7899 += 1, R7859 += 1, R7831 += 1, R7809 += 1 };
  s6 -> s1 [0, 65535] { R7949 += 1, R7899 += 1, R7859 += 1, R7831 += 1, R7809 += 1 };
  s7 -> s7 [0, 65535] { R7949 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s7 [0, 65535] { R7949 += 1 };
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R7949 += 1, R7899 += 1, R7859 += 1 };
  s9 -> s10 [0, 65535] { R7949 += 1, R7899 += 1 };
  s10 -> s7 [0, 65535] { R7949 += 1 };
  s10 -> s8 [0, 65535];
  s10 -> s10 [0, 65535] { R7949 += 1, R7899 += 1 };
  s11 -> s11 [0, 65535] { R7949 += 1, R7899 += 1, R7859 += 1, R7831 += 1 };
  s11 -> s7 [0, 65535] { R7949 += 1 };
  s11 -> s8 [0, 65535];
  s11 -> s9 [0, 65535] { R7949 += 1, R7899 += 1, R7859 += 1 };
  s11 -> s10 [0, 65535] { R7949 += 1, R7899 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s1, s7, s0, s10, s11;
};
automaton uri_21 {
  init s0;
  s0 -> s1 [0, 65535] { R7951 += 1, R7901 += 1, R7860 += 1, R7861 += 1 };
  s0 -> s2 [0, 65535] { R7951 += 1, R7901 += 1, R7861 += 1, R7832 += 1, R7833 += 1 };
  s0 -> s3 [0, 65535] { R7951 += 1, R7901 += 1, R7861 += 1, R7833 += 1, R7810 += 1, R7811 += 1 };
  s0 -> s4 [0, 65535] { R7951 += 1, R7901 += 1, R7861 += 1, R7833 += 1, R7811 += 1, R7 += 1 };
  s0 -> s5 [0, 65535] { R7951 += 1, R7900 += 1, R7901 += 1 };
  s0 -> s0 [0, 65535] { R7950 += 1, R7951 += 1 };
  s1 -> s1 [0, 65535] { R7951 += 1, R7901 += 1, R7860 += 1, R7861 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s2 [0, 65535] { R7951 += 1, R7901 += 1, R7861 += 1, R7832 += 1, R7833 += 1 };
  s1 -> s3 [0, 65535] { R7951 += 1, R7901 += 1, R7861 += 1, R7833 += 1, R7810 += 1, R7811 += 1 };
  s1 -> s4 [0, 65535] { R7951 += 1, R7901 += 1, R7861 += 1, R7833 += 1, R7811 += 1, R7 += 1 };
  s1 -> s7 [0, 65535] { R7951 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R7951 += 1, R7901 += 1, R7861 += 1, R7832 += 1, R7833 += 1 };
  s2 -> s3 [0, 65535] { R7951 += 1, R7901 += 1, R7861 += 1, R7833 += 1, R7810 += 1, R7811 += 1 };
  s2 -> s4 [0, 65535] { R7951 += 1, R7901 += 1, R7861 += 1, R7833 += 1, R7811 += 1, R7 += 1 };
  s2 -> s7 [0, 65535] { R7951 += 1 };
  s2 -> s10 [0, 65535] { R7951 += 1, R7901 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R7951 += 1, R7901 += 1, R7861 += 1, R7833 += 1, R7810 += 1, R7811 += 1 };
  s3 -> s4 [0, 65535] { R7951 += 1, R7901 += 1, R7861 += 1, R7833 += 1, R7811 += 1, R7 += 1 };
  s3 -> s7 [0, 65535] { R7951 += 1 };
  s3 -> s8 [0, 65535] { R7951 += 1, R7901 += 1, R7861 += 1 };
  s3 -> s10 [0, 65535] { R7951 += 1, R7901 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R7951 += 1, R7901 += 1, R7861 += 1, R7833 += 1, R7811 += 1, R7 += 1 };
  s4 -> s7 [0, 65535] { R7951 += 1 };
  s4 -> s8 [0, 65535] { R7951 += 1, R7901 += 1, R7861 += 1 };
  s4 -> s9 [0, 65535] { R7951 += 1, R7901 += 1, R7861 += 1, R7833 += 1 };
  s4 -> s10 [0, 65535] { R7951 += 1, R7901 += 1 };
  s5 -> s1 [0, 65535] { R7951 += 1, R7901 += 1, R7860 += 1, R7861 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s2 [0, 65535] { R7951 += 1, R7901 += 1, R7861 += 1, R7832 += 1, R7833 += 1 };
  s5 -> s3 [0, 65535] { R7951 += 1, R7901 += 1, R7861 += 1, R7833 += 1, R7810 += 1, R7811 += 1 };
  s5 -> s4 [0, 65535] { R7951 += 1, R7901 += 1, R7861 += 1, R7833 += 1, R7811 += 1, R7 += 1 };
  s5 -> s5 [0, 65535] { R7951 += 1, R7900 += 1, R7901 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R7951 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R7951 += 1 };
  s8 -> s8 [0, 65535] { R7951 += 1, R7901 += 1, R7861 += 1 };
  s8 -> s10 [0, 65535] { R7951 += 1, R7901 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s7 [0, 65535] { R7951 += 1 };
  s9 -> s8 [0, 65535] { R7951 += 1, R7901 += 1, R7861 += 1 };
  s9 -> s9 [0, 65535] { R7951 += 1, R7901 += 1, R7861 += 1, R7833 += 1 };
  s9 -> s10 [0, 65535] { R7951 += 1, R7901 += 1 };
  s10 -> s6 [0, 65535];
  s10 -> s7 [0, 65535] { R7951 += 1 };
  s10 -> s10 [0, 65535] { R7951 += 1, R7901 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton uri_22 {
  init s0;
  s0 -> s1 [0, 77] { R7953 += 1, R7903 += 1, R7863 += 1, R7835 += 1, R7813 += 1 };
  s0 -> s2 [0, 65535] { R7953 += 1, R7902 += 1, R7903 += 1 };
  s0 -> s3 [0, 65535] { R7953 += 1, R7903 += 1, R7862 += 1, R7863 += 1 };
  s0 -> s0 [0, 65535] { R7952 += 1, R7953 += 1 };
  s0 -> s4 [0, 65535] { R7953 += 1, R7903 += 1, R7863 += 1, R7835 += 1, R7812 += 1, R7813 += 1 };
  s0 -> s5 [0, 65535] { R7953 += 1, R7903 += 1, R7863 += 1, R7834 += 1, R7835 += 1 };
  s0 -> s6 [78, 78] { R7953 += 1, R7903 += 1, R7863 += 1, R7835 += 1, R7813 += 1 };
  s0 -> s1 [79, 65535] { R7953 += 1, R7903 += 1, R7863 += 1, R7835 += 1, R7813 += 1 };
  s1 -> s1 [0, 77] { R7953 += 1, R7903 += 1, R7863 += 1, R7835 += 1, R7813 += 1 };
  s1 -> s6 [78, 78] { R7953 += 1, R7903 += 1, R7863 += 1, R7835 += 1, R7813 += 1 };
  s1 -> s1 [79, 65535] { R7953 += 1, R7903 += 1, R7863 += 1, R7835 += 1, R7813 += 1 };
  s2 -> s1 [0, 77] { R7953 += 1, R7903 += 1, R7863 += 1, R7835 += 1, R7813 += 1 };
  s2 -> s2 [0, 65535] { R7953 += 1, R7902 += 1, R7903 += 1 };
  s2 -> s3 [0, 65535] { R7953 += 1, R7903 += 1, R7862 += 1, R7863 += 1 };
  s2 -> s4 [0, 65535] { R7953 += 1, R7903 += 1, R7863 += 1, R7835 += 1, R7812 += 1, R7813 += 1 };
  s2 -> s5 [0, 65535] { R7953 += 1, R7903 += 1, R7863 += 1, R7834 += 1, R7835 += 1 };
  s2 -> s6 [78, 78] { R7953 += 1, R7903 += 1, R7863 += 1, R7835 += 1, R7813 += 1 };
  s2 -> s1 [79, 65535] { R7953 += 1, R7903 += 1, R7863 += 1, R7835 += 1, R7813 += 1 };
  s3 -> s1 [0, 77] { R7953 += 1, R7903 += 1, R7863 += 1, R7835 += 1, R7813 += 1 };
  s3 -> s3 [0, 65535] { R7953 += 1, R7903 += 1, R7862 += 1, R7863 += 1 };
  s3 -> s4 [0, 65535] { R7953 += 1, R7903 += 1, R7863 += 1, R7835 += 1, R7812 += 1, R7813 += 1 };
  s3 -> s5 [0, 65535] { R7953 += 1, R7903 += 1, R7863 += 1, R7834 += 1, R7835 += 1 };
  s3 -> s6 [78, 78] { R7953 += 1, R7903 += 1, R7863 += 1, R7835 += 1, R7813 += 1 };
  s3 -> s1 [79, 65535] { R7953 += 1, R7903 += 1, R7863 += 1, R7835 += 1, R7813 += 1 };
  s4 -> s1 [0, 77] { R7953 += 1, R7903 += 1, R7863 += 1, R7835 += 1, R7813 += 1 };
  s4 -> s4 [0, 65535] { R7953 += 1, R7903 += 1, R7863 += 1, R7835 += 1, R7812 += 1, R7813 += 1 };
  s4 -> s6 [78, 78] { R7953 += 1, R7903 += 1, R7863 += 1, R7835 += 1, R7813 += 1 };
  s4 -> s1 [79, 65535] { R7953 += 1, R7903 += 1, R7863 += 1, R7835 += 1, R7813 += 1 };
  s5 -> s1 [0, 77] { R7953 += 1, R7903 += 1, R7863 += 1, R7835 += 1, R7813 += 1 };
  s5 -> s4 [0, 65535] { R7953 += 1, R7903 += 1, R7863 += 1, R7835 += 1, R7812 += 1, R7813 += 1 };
  s5 -> s5 [0, 65535] { R7953 += 1, R7903 += 1, R7863 += 1, R7834 += 1, R7835 += 1 };
  s5 -> s6 [78, 78] { R7953 += 1, R7903 += 1, R7863 += 1, R7835 += 1, R7813 += 1 };
  s5 -> s1 [79, 65535] { R7953 += 1, R7903 += 1, R7863 += 1, R7835 += 1, R7813 += 1 };
  s6 -> s7 [0, 65535] { R7953 += 1, R7903 += 1 };
  s6 -> s8 [0, 65535] { R7953 += 1 };
  s6 -> s9 [0, 65535];
  s6 -> s10 [0, 65535] { R7953 += 1, R7903 += 1, R7863 += 1 };
  s6 -> s6 [0, 65535] { R7953 += 1, R7903 += 1, R7863 += 1, R7835 += 1, R7813 += 1 };
  s6 -> s11 [0, 65535] { R7953 += 1, R7903 += 1, R7863 += 1, R7835 += 1 };
  s7 -> s7 [0, 65535] { R7953 += 1, R7903 += 1 };
  s7 -> s8 [0, 65535] { R7953 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R7953 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  s10 -> s7 [0, 65535] { R7953 += 1, R7903 += 1 };
  s10 -> s8 [0, 65535] { R7953 += 1 };
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R7953 += 1, R7903 += 1, R7863 += 1 };
  s11 -> s7 [0, 65535] { R7953 += 1, R7903 += 1 };
  s11 -> s8 [0, 65535] { R7953 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s10 [0, 65535] { R7953 += 1, R7903 += 1, R7863 += 1 };
  s11 -> s11 [0, 65535] { R7953 += 1, R7903 += 1, R7863 += 1, R7835 += 1 };
  accepting s8, s9, s6, s7, s10, s11;
};
automaton uri_23 {
  init s0;
  s0 -> s0 [0, 65535] { R7954 += 1, R7955 += 1 };
  s0 -> s1 [0, 65535] { R7955 += 1, R7905 += 1, R7864 += 1, R7865 += 1 };
  s0 -> s2 [0, 65535] { R7955 += 1, R7905 += 1, R7865 += 1, R7836 += 1, R7837 += 1 };
  s0 -> s3 [0, 65535] { R7955 += 1, R7904 += 1, R7905 += 1 };
  s0 -> s4 [0, 65535] { R7955 += 1, R7905 += 1, R7865 += 1, R7837 += 1, R7814 += 1, R7815 += 1 };
  s0 -> s5 [0, 65535] { R7955 += 1, R7905 += 1, R7865 += 1, R7837 += 1, R7815 += 1, R7805 += 1 };
  s1 -> s1 [0, 65535] { R7955 += 1, R7905 += 1, R7864 += 1, R7865 += 1 };
  s1 -> s2 [0, 65535] { R7955 += 1, R7905 += 1, R7865 += 1, R7836 += 1, R7837 += 1 };
  s1 -> s4 [0, 65535] { R7955 += 1, R7905 += 1, R7865 += 1, R7837 += 1, R7814 += 1, R7815 += 1 };
  s1 -> s5 [0, 65535] { R7955 += 1, R7905 += 1, R7865 += 1, R7837 += 1, R7815 += 1, R7805 += 1 };
  s1 -> s9 [0, 65535] { R7955 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R7955 += 1, R7905 += 1, R7865 += 1, R7836 += 1, R7837 += 1 };
  s2 -> s4 [0, 65535] { R7955 += 1, R7905 += 1, R7865 += 1, R7837 += 1, R7814 += 1, R7815 += 1 };
  s2 -> s7 [0, 65535] { R7955 += 1, R7905 += 1 };
  s2 -> s5 [0, 65535] { R7955 += 1, R7905 += 1, R7865 += 1, R7837 += 1, R7815 += 1, R7805 += 1 };
  s2 -> s9 [0, 65535] { R7955 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s1 [0, 65535] { R7955 += 1, R7905 += 1, R7864 += 1, R7865 += 1 };
  s3 -> s2 [0, 65535] { R7955 += 1, R7905 += 1, R7865 += 1, R7836 += 1, R7837 += 1 };
  s3 -> s3 [0, 65535] { R7955 += 1, R7904 += 1, R7905 += 1 };
  s3 -> s4 [0, 65535] { R7955 += 1, R7905 += 1, R7865 += 1, R7837 += 1, R7814 += 1, R7815 += 1 };
  s3 -> s5 [0, 65535] { R7955 += 1, R7905 += 1, R7865 += 1, R7837 += 1, R7815 += 1, R7805 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R7955 += 1, R7905 += 1, R7865 += 1, R7837 += 1, R7814 += 1, R7815 += 1 };
  s4 -> s7 [0, 65535] { R7955 += 1, R7905 += 1 };
  s4 -> s5 [0, 65535] { R7955 += 1, R7905 += 1, R7865 += 1, R7837 += 1, R7815 += 1, R7805 += 1 };
  s4 -> s8 [0, 65535] { R7955 += 1, R7905 += 1, R7865 += 1 };
  s4 -> s9 [0, 65535] { R7955 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R7955 += 1, R7905 += 1 };
  s5 -> s5 [0, 65535] { R7955 += 1, R7905 += 1, R7865 += 1, R7837 += 1, R7815 += 1, R7805 += 1 };
  s5 -> s8 [0, 65535] { R7955 += 1, R7905 += 1, R7865 += 1 };
  s5 -> s9 [0, 65535] { R7955 += 1 };
  s5 -> s10 [0, 65535] { R7955 += 1, R7905 += 1, R7865 += 1, R7837 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R7955 += 1, R7905 += 1 };
  s7 -> s9 [0, 65535] { R7955 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R7955 += 1, R7905 += 1 };
  s8 -> s8 [0, 65535] { R7955 += 1, R7905 += 1, R7865 += 1 };
  s8 -> s9 [0, 65535] { R7955 += 1 };
  s8 -> s6 [0, 65535];
  s9 -> s9 [0, 65535] { R7955 += 1 };
  s9 -> s6 [0, 65535];
  s10 -> s6 [0, 65535];
  s10 -> s7 [0, 65535] { R7955 += 1, R7905 += 1 };
  s10 -> s8 [0, 65535] { R7955 += 1, R7905 += 1, R7865 += 1 };
  s10 -> s9 [0, 65535] { R7955 += 1 };
  s10 -> s10 [0, 65535] { R7955 += 1, R7905 += 1, R7865 += 1, R7837 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton uri_24 {
  init s0;
  s0 -> s1 [0, 65535] { R7957 += 1, R7906 += 1, R7907 += 1 };
  s0 -> s0 [0, 65535] { R7956 += 1, R7957 += 1 };
  s0 -> s2 [0, 65535] { R7957 += 1, R7907 += 1, R7866 += 1, R7867 += 1 };
  s0 -> s3 [0, 65535] { R7957 += 1, R7907 += 1, R7867 += 1, R7807 += 1 };
  s1 -> s1 [0, 65535] { R7957 += 1, R7906 += 1, R7907 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R7957 += 1, R7907 += 1, R7866 += 1, R7867 += 1 };
  s1 -> s3 [0, 65535] { R7957 += 1, R7907 += 1, R7867 += 1, R7807 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R7957 += 1 };
  s2 -> s2 [0, 65535] { R7957 += 1, R7907 += 1, R7866 += 1, R7867 += 1 };
  s2 -> s3 [0, 65535] { R7957 += 1, R7907 += 1, R7867 += 1, R7807 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R7957 += 1 };
  s3 -> s6 [0, 65535] { R7957 += 1, R7907 += 1 };
  s3 -> s3 [0, 65535] { R7957 += 1, R7907 += 1, R7867 += 1, R7807 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R7957 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R7957 += 1 };
  s6 -> s6 [0, 65535] { R7957 += 1, R7907 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_25 {
  init s0;
  s0 -> s1 [0, 65535] { R7959 += 1, R7908 += 1, R7909 += 1 };
  s0 -> s0 [0, 65535] { R7958 += 1, R7959 += 1 };
  s0 -> s2 [0, 65535] { R7959 += 1, R7909 += 1 };
  s1 -> s1 [0, 65535] { R7959 += 1, R7908 += 1, R7909 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R7959 += 1, R7909 += 1 };
  s2 -> s3 [0, 65535] { R7959 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R7959 += 1, R7909 += 1 };
  s3 -> s3 [0, 65535] { R7959 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
};
constraint R2 = R7815 && R3 - R7837 = 1 && R4 = R7865 && R5 = R7821 && R6 = R7959 && R13 = 0 && R14 = R7837 && R6248 = 0 && R6249 = R7909 && R7808 = 0 && R7809 = 1 && R7810 = 0 && R7811 = 1 && R7812 = 0 && R7813 = R7815 && R7814 = 0 && R7816 = 0 && R7817 = 16 && R7818 = 0 && R7819 = 16 && R7820 - R7909 = 1 && R7822 = 0 && R7823 = R7837 && R7824 = 0 && R7825 = R7837 && R7826 = 0 && R7827 = R7837 && R7828 = 0 && R7829 = R7837 && R7830 = 0 && R7831 = R7837 && R7832 = 0 && R7833 = R7837 && R7834 = 0 && R7835 = R7837 && R7836 = 0 && R7838 = 0 && R7839 = R7865 && R7840 = 0 && R7841 = R7865 && R7842 = 17 && R7843 = R7865 && R7844 = 17 && R7845 = R7865 && R7846 = 17 && R7847 = R7865 && R7848 = 17 && R7849 = R7865 && R7850 = 17 && R7851 = R7865 && R7852 = 17 && R7853 = R7865 && R7854 = 17 && R7855 = R7865 && R7856 = 17 && R7857 = R7865 && R7858 = 17 && R7859 = R7865 && R7860 = 17 && R7861 = R7865 && R7862 = 17 && R7863 = R7865 && R7864 = 17 && R7868 = 0 && R7869 = R7909 && R7870 = 0 && R7871 = R7909 && R7872 = 0 && R7873 = R7909 && R7874 = 0 && R7875 = R7909 && R7876 = 0 && R7877 = R7909 && R7878 = 0 && R7879 = R7909 && R7880 = 0 && R7881 = R7909 && R7882 = 0 && R7883 = R7909 && R7884 = 0 && R7885 = R7909 && R7886 = 0 && R7887 = R7909 && R7888 = 0 && R7889 = R7909 && R7890 = 0 && R7891 = R7909 && R7892 = 0 && R7893 = R7909 && R7894 = 0 && R7895 = R7909 && R7896 = 0 && R7897 = R7909 && R7898 = 0 && R7899 = R7909 && R7900 = 0 && R7901 = R7909 && R7902 = 0 && R7903 = R7909 && R7904 = 0 && R7905 = R7909 && R7906 = 0 && R7907 = R7909 && R7908 = 0 && R7910 = 10 && R7911 = R7959 && R7912 = 10 && R7913 = R7959 && R7914 = 10 && R7915 = R7959 && R7916 = 10 && R7917 = R7959 && R7918 = 10 && R7919 = R7959 && R7920 = 10 && R7921 = R7959 && R7922 = 10 && R7923 = R7959 && R7924 = 10 && R7925 = R7959 && R7926 = 10 && R7927 = R7959 && R7928 = 10 && R7929 = R7959 && R7930 = 10 && R7931 = R7959 && R7932 = 10 && R7933 = R7959 && R7934 = 10 && R7935 = R7959 && R7936 = 10 && R7937 = R7959 && R7938 = 10 && R7939 = R7959 && R7940 = 10 && R7941 = R7959 && R7942 = 10 && R7943 = R7959 && R7944 = 10 && R7945 = R7959 && R7946 = 10 && R7947 = R7959 && R7948 = 10 && R7949 = R7959 && R7950 = 10 && R7951 = R7959 && R7952 = 10 && R7953 = R7959 && R7954 = 10 && R7955 = R7959 && R7956 = 10 && R7957 = R7959 && R7958 = 10 && R0 != 0 && R1 != 0 && R8 < 1 && R9 < 1 && R6244 < 1 && 0 < R7815 && R7909 < R7821 && -1 < R7837 && 16 < R7865 && -1 < R7909 && 9 < R7959 && (R7807 = 0 || (R7866 = 0 && R7867 = 0));
// End of Parikh automata intersection problem
