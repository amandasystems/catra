// Parikh automata intersection problem, generated by OSTRICH+
counter int R0, R1, R11, R12, R133, R134, R135, R136, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R16, R160, R161, R162, R163, R164, R165, R166, R167, R168, R169, R17, R170, R171, R172, R173, R174, R175, R176, R177, R178, R179, R180, R181, R182, R183, R184, R185, R186, R187, R188, R189, R190, R191, R192, R193, R194, R195, R196, R197, R198, R199, R2, R200, R201, R202, R203, R204, R205, R206, R207, R208, R209, R210, R211, R212, R213, R214, R215, R216, R217, R218, R219, R220, R221, R222, R223, R224, R225, R226, R227, R228, R229, R230, R231, R232, R233, R234, R235, R236, R237, R238, R239, R240, R241, R242, R243, R244, R245, R246, R247, R3, R4, R5, R6, R7, R8;
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R6 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 45] { R211 += 1 };
  s0 -> s0 [0, 65535] { R210 += 1, R211 += 1 };
  s0 -> s2 [46, 46] { R211 += 1 };
  s0 -> s3 [47, 47] { R211 += 1 };
  s0 -> s1 [48, 65535] { R211 += 1 };
  s1 -> s1 [0, 45] { R211 += 1 };
  s1 -> s2 [46, 46] { R211 += 1 };
  s1 -> s3 [47, 47] { R211 += 1 };
  s1 -> s1 [48, 65535] { R211 += 1 };
  s2 -> s1 [0, 45] { R211 += 1 };
  s2 -> s2 [46, 46] { R211 += 1 };
  s2 -> s3 [47, 47] { R211 += 1 };
  s2 -> s1 [48, 114] { R211 += 1 };
  s2 -> s8 [115, 115] { R211 += 1 };
  s2 -> s1 [116, 65535] { R211 += 1 };
  s3 -> s3 [0, 45] { R211 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s4 [46, 46] { R211 += 1 };
  s3 -> s3 [47, 65535] { R211 += 1 };
  s4 -> s3 [0, 45] { R211 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s4 [46, 46] { R211 += 1 };
  s4 -> s3 [47, 114] { R211 += 1 };
  s4 -> s5 [115, 115] { R211 += 1 };
  s4 -> s3 [116, 65535] { R211 += 1 };
  s5 -> s3 [0, 45] { R211 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s4 [46, 46] { R211 += 1 };
  s5 -> s3 [47, 110] { R211 += 1 };
  s5 -> s6 [111, 111] { R211 += 1 };
  s5 -> s3 [112, 65535] { R211 += 1 };
  s6 -> s3 [0, 45] { R211 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s4 [46, 46] { R211 += 1 };
  s6 -> s3 [47, 98] { R211 += 1 };
  s6 -> s7 [99, 99] { R211 += 1 };
  s6 -> s3 [100, 65535] { R211 += 1 };
  s7 -> s3 [0, 45] { R211 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s4 [46, 46] { R211 += 1 };
  s7 -> s3 [47, 106] { R211 += 1 };
  s7 -> s3 [108, 65535] { R211 += 1 };
  s8 -> s1 [0, 45] { R211 += 1 };
  s8 -> s2 [46, 46] { R211 += 1 };
  s8 -> s3 [47, 47] { R211 += 1 };
  s8 -> s1 [48, 110] { R211 += 1 };
  s8 -> s9 [111, 111] { R211 += 1 };
  s8 -> s1 [112, 65535] { R211 += 1 };
  s9 -> s1 [0, 45] { R211 += 1 };
  s9 -> s2 [46, 46] { R211 += 1 };
  s9 -> s3 [47, 47] { R211 += 1 };
  s9 -> s1 [48, 98] { R211 += 1 };
  s9 -> s10 [99, 99] { R211 += 1 };
  s9 -> s1 [100, 65535] { R211 += 1 };
  s10 -> s1 [0, 45] { R211 += 1 };
  s10 -> s2 [46, 46] { R211 += 1 };
  s10 -> s3 [47, 47] { R211 += 1 };
  s10 -> s1 [48, 106] { R211 += 1 };
  s10 -> s1 [108, 65535] { R211 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_3 {
  init s0;
  s0 -> s0 [0, 65535] { R212 += 1, R213 += 1 };
  s0 -> s1 [0, 65535] { R213 += 1, R5 += 1 };
  s1 -> s1 [0, 65535] { R213 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s1 [0, 46] { R215 += 1, R17 += 1 };
  s0 -> s0 [0, 65535] { R214 += 1, R215 += 1 };
  s0 -> s2 [0, 65535] { R215 += 1, R16 += 1, R17 += 1 };
  s0 -> s3 [47, 47] { R215 += 1 };
  s0 -> s1 [48, 65535] { R215 += 1, R17 += 1 };
  s1 -> s1 [0, 46] { R215 += 1, R17 += 1 };
  s1 -> s3 [47, 47] { R215 += 1 };
  s1 -> s1 [48, 65535] { R215 += 1, R17 += 1 };
  s2 -> s1 [0, 46] { R215 += 1, R17 += 1 };
  s2 -> s2 [0, 65535] { R215 += 1, R16 += 1, R17 += 1 };
  s2 -> s3 [47, 47] { R215 += 1 };
  s2 -> s1 [48, 65535] { R215 += 1, R17 += 1 };
  s3 -> s3 [0, 65535] { R215 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 65535] { R217 += 1, R146 += 1, R147 += 1 };
  s0 -> s0 [0, 65535] { R216 += 1, R217 += 1 };
  s0 -> s2 [0, 65535] { R217 += 1, R147 += 1, R1 += 1 };
  s1 -> s1 [0, 65535] { R217 += 1, R146 += 1, R147 += 1 };
  s1 -> s2 [0, 65535] { R217 += 1, R147 += 1, R1 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R217 += 1 };
  s2 -> s2 [0, 65535] { R217 += 1, R147 += 1, R1 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R217 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_6 {
  init s0;
  s0 -> s1 [0, 63] { R219 += 1, R181 += 1 };
  s0 -> s2 [0, 65535] { R219 += 1, R180 += 1, R181 += 1 };
  s0 -> s0 [0, 65535] { R218 += 1, R219 += 1 };
  s0 -> s3 [64, 64] { R219 += 1, R181 += 1 };
  s0 -> s1 [65, 65535] { R219 += 1, R181 += 1 };
  s1 -> s1 [0, 63] { R219 += 1, R181 += 1 };
  s1 -> s3 [64, 64] { R219 += 1, R181 += 1 };
  s1 -> s1 [65, 65535] { R219 += 1, R181 += 1 };
  s2 -> s1 [0, 63] { R219 += 1, R181 += 1 };
  s2 -> s2 [0, 65535] { R219 += 1, R180 += 1, R181 += 1 };
  s2 -> s3 [64, 64] { R219 += 1, R181 += 1 };
  s2 -> s1 [65, 65535] { R219 += 1, R181 += 1 };
  s3 -> s3 [0, 65535] { R219 += 1, R181 += 1 };
  s3 -> s4 [0, 65535] { R219 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R219 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5;
};
automaton uri_7 {
  init s0;
  s0 -> s1 [0, 65535] { R221 += 1, R182 += 1, R183 += 1 };
  s0 -> s0 [0, 65535] { R220 += 1, R221 += 1 };
  s0 -> s2 [0, 65535] { R221 += 1, R183 += 1, R4 += 1 };
  s1 -> s1 [0, 65535] { R221 += 1, R182 += 1, R183 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R221 += 1, R183 += 1, R4 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R221 += 1, R183 += 1, R4 += 1 };
  s2 -> s4 [0, 65535] { R221 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R221 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_8 {
  init s0;
  s0 -> s1 [0, 36] { R223 += 1, R185 += 1, R143 += 1 };
  s0 -> s0 [0, 65535] { R222 += 1, R223 += 1 };
  s0 -> s2 [0, 65535] { R223 += 1, R185 += 1, R142 += 1, R143 += 1 };
  s0 -> s3 [0, 65535] { R223 += 1, R184 += 1, R185 += 1 };
  s0 -> s1 [38, 42] { R223 += 1, R185 += 1, R143 += 1 };
  s0 -> s1 [44, 57] { R223 += 1, R185 += 1, R143 += 1 };
  s0 -> s1 [59, 63] { R223 += 1, R185 += 1, R143 += 1 };
  s0 -> s1 [65, 65535] { R223 += 1, R185 += 1, R143 += 1 };
  s1 -> s1 [0, 36] { R223 += 1, R185 += 1, R143 += 1 };
  s1 -> s1 [0, 65535] { R223 += 1, R185 += 1 };
  s1 -> s5 [0, 65535] { R223 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [38, 42] { R223 += 1, R185 += 1, R143 += 1 };
  s1 -> s1 [44, 57] { R223 += 1, R185 += 1, R143 += 1 };
  s1 -> s1 [59, 63] { R223 += 1, R185 += 1, R143 += 1 };
  s1 -> s1 [65, 65535] { R223 += 1, R185 += 1, R143 += 1 };
  s2 -> s1 [0, 36] { R223 += 1, R185 += 1, R143 += 1 };
  s2 -> s2 [0, 65535] { R223 += 1, R185 += 1, R142 += 1, R143 += 1 };
  s2 -> s5 [0, 65535] { R223 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [38, 42] { R223 += 1, R185 += 1, R143 += 1 };
  s2 -> s1 [44, 57] { R223 += 1, R185 += 1, R143 += 1 };
  s2 -> s1 [59, 63] { R223 += 1, R185 += 1, R143 += 1 };
  s2 -> s1 [65, 65535] { R223 += 1, R185 += 1, R143 += 1 };
  s3 -> s1 [0, 36] { R223 += 1, R185 += 1, R143 += 1 };
  s3 -> s2 [0, 65535] { R223 += 1, R185 += 1, R142 += 1, R143 += 1 };
  s3 -> s3 [0, 65535] { R223 += 1, R184 += 1, R185 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [38, 42] { R223 += 1, R185 += 1, R143 += 1 };
  s3 -> s1 [44, 57] { R223 += 1, R185 += 1, R143 += 1 };
  s3 -> s1 [59, 63] { R223 += 1, R185 += 1, R143 += 1 };
  s3 -> s1 [65, 65535] { R223 += 1, R185 += 1, R143 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R223 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_9 {
  init s0;
  s0 -> s1 [0, 65535] { R225 += 1, R186 += 1, R187 += 1 };
  s0 -> s2 [0, 65535] { R225 += 1, R187 += 1, R144 += 1, R145 += 1 };
  s0 -> s3 [0, 65535] { R225 += 1, R187 += 1, R145 += 1, R0 += 1 };
  s0 -> s0 [0, 65535] { R224 += 1, R225 += 1 };
  s1 -> s1 [0, 65535] { R225 += 1, R186 += 1, R187 += 1 };
  s1 -> s2 [0, 65535] { R225 += 1, R187 += 1, R144 += 1, R145 += 1 };
  s1 -> s3 [0, 65535] { R225 += 1, R187 += 1, R145 += 1, R0 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R225 += 1, R187 += 1, R144 += 1, R145 += 1 };
  s2 -> s3 [0, 65535] { R225 += 1, R187 += 1, R145 += 1, R0 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R225 += 1 };
  s3 -> s4 [0, 65535] { R225 += 1, R187 += 1 };
  s3 -> s3 [0, 65535] { R225 += 1, R187 += 1, R145 += 1, R0 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R225 += 1 };
  s4 -> s4 [0, 65535] { R225 += 1, R187 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R225 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R225 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_10 {
  init s0;
  s0 -> s1 [0, 43] { R227 += 1, R189 += 1, R159 += 1 };
  s0 -> s2 [0, 65535] { R227 += 1, R188 += 1, R189 += 1 };
  s0 -> s0 [0, 65535] { R226 += 1, R227 += 1 };
  s0 -> s3 [0, 65535] { R227 += 1, R189 += 1, R158 += 1, R159 += 1 };
  s0 -> s1 [45, 64] { R227 += 1, R189 += 1, R159 += 1 };
  s0 -> s4 [83, 83] { R227 += 1, R189 += 1, R159 += 1 };
  s0 -> s1 [84, 65535] { R227 += 1, R189 += 1, R159 += 1 };
  s1 -> s1 [0, 43] { R227 += 1, R189 += 1, R159 += 1 };
  s1 -> s1 [45, 64] { R227 += 1, R189 += 1, R159 += 1 };
  s1 -> s4 [83, 83] { R227 += 1, R189 += 1, R159 += 1 };
  s1 -> s1 [84, 65535] { R227 += 1, R189 += 1, R159 += 1 };
  s2 -> s1 [0, 43] { R227 += 1, R189 += 1, R159 += 1 };
  s2 -> s2 [0, 65535] { R227 += 1, R188 += 1, R189 += 1 };
  s2 -> s3 [0, 65535] { R227 += 1, R189 += 1, R158 += 1, R159 += 1 };
  s2 -> s1 [45, 64] { R227 += 1, R189 += 1, R159 += 1 };
  s2 -> s4 [83, 83] { R227 += 1, R189 += 1, R159 += 1 };
  s2 -> s1 [84, 65535] { R227 += 1, R189 += 1, R159 += 1 };
  s3 -> s1 [0, 43] { R227 += 1, R189 += 1, R159 += 1 };
  s3 -> s3 [0, 65535] { R227 += 1, R189 += 1, R158 += 1, R159 += 1 };
  s3 -> s1 [45, 64] { R227 += 1, R189 += 1, R159 += 1 };
  s3 -> s4 [83, 83] { R227 += 1, R189 += 1, R159 += 1 };
  s3 -> s1 [84, 65535] { R227 += 1, R189 += 1, R159 += 1 };
  s4 -> s4 [0, 43] { R227 += 1, R189 += 1, R159 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R227 += 1 };
  s4 -> s4 [0, 65535] { R227 += 1, R189 += 1 };
  s4 -> s4 [45, 64] { R227 += 1, R189 += 1, R159 += 1 };
  s4 -> s4 [83, 65535] { R227 += 1, R189 += 1, R159 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R227 += 1 };
  accepting s4, s5, s6;
};
automaton uri_11 {
  init s0;
  s0 -> s1 [0, 65535] { R229 += 1, R191 += 1, R161 += 1, R3 += 1 };
  s0 -> s2 [0, 65535] { R229 += 1, R190 += 1, R191 += 1 };
  s0 -> s3 [0, 65535] { R229 += 1, R191 += 1, R160 += 1, R161 += 1 };
  s0 -> s0 [0, 65535] { R228 += 1, R229 += 1 };
  s1 -> s1 [0, 65535] { R229 += 1, R191 += 1, R161 += 1, R3 += 1 };
  s1 -> s6 [0, 65535] { R229 += 1, R191 += 1 };
  s1 -> s4 [0, 65535] { R229 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R229 += 1, R191 += 1, R161 += 1, R3 += 1 };
  s2 -> s2 [0, 65535] { R229 += 1, R190 += 1, R191 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R229 += 1, R191 += 1, R160 += 1, R161 += 1 };
  s3 -> s1 [0, 65535] { R229 += 1, R191 += 1, R161 += 1, R3 += 1 };
  s3 -> s4 [0, 65535] { R229 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R229 += 1, R191 += 1, R160 += 1, R161 += 1 };
  s4 -> s4 [0, 65535] { R229 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R229 += 1, R191 += 1 };
  s6 -> s4 [0, 65535] { R229 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_12 {
  init s0;
  s0 -> s1 [0, 57] { R231 += 1, R193 += 1, R163 += 1 };
  s0 -> s2 [0, 65535] { R231 += 1, R193 += 1, R162 += 1, R163 += 1 };
  s0 -> s0 [0, 65535] { R230 += 1, R231 += 1 };
  s0 -> s3 [0, 65535] { R231 += 1, R192 += 1, R193 += 1 };
  s0 -> s4 [0, 65535] { R231 += 1, R193 += 1, R163 += 1, R11 += 1 };
  s0 -> s5 [58, 58] { R231 += 1, R193 += 1, R163 += 1 };
  s0 -> s1 [59, 65535] { R231 += 1, R193 += 1, R163 += 1 };
  s1 -> s1 [0, 57] { R231 += 1, R193 += 1, R163 += 1 };
  s1 -> s6 [0, 65535] { R231 += 1 };
  s1 -> s1 [0, 65535] { R231 += 1, R193 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s5 [58, 58] { R231 += 1, R193 += 1, R163 += 1 };
  s1 -> s1 [59, 65535] { R231 += 1, R193 += 1, R163 += 1 };
  s2 -> s1 [0, 57] { R231 += 1, R193 += 1, R163 += 1 };
  s2 -> s2 [0, 65535] { R231 += 1, R193 += 1, R162 += 1, R163 += 1 };
  s2 -> s6 [0, 65535] { R231 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [0, 65535] { R231 += 1, R193 += 1, R163 += 1, R11 += 1 };
  s2 -> s5 [58, 58] { R231 += 1, R193 += 1, R163 += 1 };
  s2 -> s1 [59, 65535] { R231 += 1, R193 += 1, R163 += 1 };
  s3 -> s1 [0, 57] { R231 += 1, R193 += 1, R163 += 1 };
  s3 -> s2 [0, 65535] { R231 += 1, R193 += 1, R162 += 1, R163 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R231 += 1, R192 += 1, R193 += 1 };
  s3 -> s4 [0, 65535] { R231 += 1, R193 += 1, R163 += 1, R11 += 1 };
  s3 -> s5 [58, 58] { R231 += 1, R193 += 1, R163 += 1 };
  s3 -> s1 [59, 65535] { R231 += 1, R193 += 1, R163 += 1 };
  s4 -> s1 [0, 57] { R231 += 1, R193 += 1, R163 += 1 };
  s4 -> s6 [0, 65535] { R231 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R231 += 1, R193 += 1 };
  s4 -> s4 [0, 65535] { R231 += 1, R193 += 1, R163 += 1, R11 += 1 };
  s4 -> s5 [58, 58] { R231 += 1, R193 += 1, R163 += 1 };
  s4 -> s1 [59, 65535] { R231 += 1, R193 += 1, R163 += 1 };
  s5 -> s5 [0, 65535] { R231 += 1, R193 += 1, R163 += 1 };
  s6 -> s6 [0, 65535] { R231 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R231 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R231 += 1, R193 += 1 };
  accepting s3, s4, s8, s2, s6, s1, s7, s0;
};
automaton uri_13 {
  init s0;
  s0 -> s1 [0, 82] { R233 += 1, R195 += 1, R165 += 1 };
  s0 -> s0 [0, 65535] { R232 += 1, R233 += 1 };
  s0 -> s2 [0, 65535] { R233 += 1, R195 += 1, R164 += 1, R165 += 1 };
  s0 -> s3 [0, 65535] { R233 += 1, R194 += 1, R195 += 1 };
  s0 -> s4 [0, 65535] { R233 += 1, R195 += 1, R165 += 1, R12 += 1 };
  s0 -> s5 [83, 83] { R233 += 1, R195 += 1, R165 += 1 };
  s0 -> s1 [84, 65535] { R233 += 1, R195 += 1, R165 += 1 };
  s1 -> s1 [0, 82] { R233 += 1, R195 += 1, R165 += 1 };
  s1 -> s1 [0, 65535] { R233 += 1, R195 += 1 };
  s1 -> s6 [0, 65535] { R233 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s5 [83, 83] { R233 += 1, R195 += 1, R165 += 1 };
  s1 -> s1 [84, 65535] { R233 += 1, R195 += 1, R165 += 1 };
  s2 -> s1 [0, 82] { R233 += 1, R195 += 1, R165 += 1 };
  s2 -> s2 [0, 65535] { R233 += 1, R195 += 1, R164 += 1, R165 += 1 };
  s2 -> s6 [0, 65535] { R233 += 1 };
  s2 -> s4 [0, 65535] { R233 += 1, R195 += 1, R165 += 1, R12 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s5 [83, 83] { R233 += 1, R195 += 1, R165 += 1 };
  s2 -> s1 [84, 65535] { R233 += 1, R195 += 1, R165 += 1 };
  s3 -> s1 [0, 82] { R233 += 1, R195 += 1, R165 += 1 };
  s3 -> s2 [0, 65535] { R233 += 1, R195 += 1, R164 += 1, R165 += 1 };
  s3 -> s3 [0, 65535] { R233 += 1, R194 += 1, R195 += 1 };
  s3 -> s4 [0, 65535] { R233 += 1, R195 += 1, R165 += 1, R12 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s5 [83, 83] { R233 += 1, R195 += 1, R165 += 1 };
  s3 -> s1 [84, 65535] { R233 += 1, R195 += 1, R165 += 1 };
  s4 -> s1 [0, 82] { R233 += 1, R195 += 1, R165 += 1 };
  s4 -> s6 [0, 65535] { R233 += 1 };
  s4 -> s4 [0, 65535] { R233 += 1, R195 += 1, R165 += 1, R12 += 1 };
  s4 -> s7 [0, 65535] { R233 += 1, R195 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s5 [83, 83] { R233 += 1, R195 += 1, R165 += 1 };
  s4 -> s1 [84, 65535] { R233 += 1, R195 += 1, R165 += 1 };
  s5 -> s5 [0, 65535] { R233 += 1, R195 += 1, R165 += 1 };
  s6 -> s6 [0, 65535] { R233 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s6 [0, 65535] { R233 += 1 };
  s7 -> s7 [0, 65535] { R233 += 1, R195 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s2, s6, s1, s7, s0;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 90] { R235 += 1, R197 += 1, R167 += 1, R135 += 1 };
  s0 -> s2 [0, 65535] { R235 += 1, R197 += 1, R167 += 1, R134 += 1, R135 += 1 };
  s0 -> s3 [0, 65535] { R235 += 1, R196 += 1, R197 += 1 };
  s0 -> s0 [0, 65535] { R234 += 1, R235 += 1 };
  s0 -> s4 [0, 65535] { R235 += 1, R197 += 1, R166 += 1, R167 += 1 };
  s0 -> s5 [91, 91] { R235 += 1, R197 += 1, R167 += 1, R135 += 1 };
  s0 -> s1 [92, 65535] { R235 += 1, R197 += 1, R167 += 1, R135 += 1 };
  s1 -> s8 [0, 65535] { R235 += 1, R197 += 1 };
  s1 -> s1 [0, 65535] { R235 += 1, R197 += 1, R167 += 1, R135 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R235 += 1 };
  s1 -> s9 [0, 65535] { R235 += 1, R197 += 1, R167 += 1 };
  s2 -> s1 [0, 90] { R235 += 1, R197 += 1, R167 += 1, R135 += 1 };
  s2 -> s8 [0, 65535] { R235 += 1, R197 += 1 };
  s2 -> s2 [0, 65535] { R235 += 1, R197 += 1, R167 += 1, R134 += 1, R135 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R235 += 1 };
  s2 -> s5 [91, 91] { R235 += 1, R197 += 1, R167 += 1, R135 += 1 };
  s2 -> s1 [92, 65535] { R235 += 1, R197 += 1, R167 += 1, R135 += 1 };
  s3 -> s1 [0, 90] { R235 += 1, R197 += 1, R167 += 1, R135 += 1 };
  s3 -> s2 [0, 65535] { R235 += 1, R197 += 1, R167 += 1, R134 += 1, R135 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R235 += 1, R196 += 1, R197 += 1 };
  s3 -> s4 [0, 65535] { R235 += 1, R197 += 1, R166 += 1, R167 += 1 };
  s3 -> s5 [91, 91] { R235 += 1, R197 += 1, R167 += 1, R135 += 1 };
  s3 -> s1 [92, 65535] { R235 += 1, R197 += 1, R167 += 1, R135 += 1 };
  s4 -> s1 [0, 90] { R235 += 1, R197 += 1, R167 += 1, R135 += 1 };
  s4 -> s2 [0, 65535] { R235 += 1, R197 += 1, R167 += 1, R134 += 1, R135 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R235 += 1 };
  s4 -> s4 [0, 65535] { R235 += 1, R197 += 1, R166 += 1, R167 += 1 };
  s4 -> s5 [91, 91] { R235 += 1, R197 += 1, R167 += 1, R135 += 1 };
  s4 -> s1 [92, 65535] { R235 += 1, R197 += 1, R167 += 1, R135 += 1 };
  s5 -> s1 [0, 65535] { R235 += 1, R197 += 1, R167 += 1, R135 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R235 += 1 };
  s8 -> s8 [0, 65535] { R235 += 1, R197 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R235 += 1 };
  s9 -> s8 [0, 65535] { R235 += 1, R197 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s7 [0, 65535] { R235 += 1 };
  s9 -> s9 [0, 65535] { R235 += 1, R197 += 1, R167 += 1 };
  accepting s3, s4, s8, s2, s9, s6, s1, s7, s0;
};
automaton uri_15 {
  init s0;
  s0 -> s0 [0, 65535] { R236 += 1, R237 += 1 };
  s0 -> s1 [0, 65535] { R237 += 1, R199 += 1, R169 += 1, R136 += 1, R137 += 1 };
  s0 -> s2 [0, 65535] { R237 += 1, R198 += 1, R199 += 1 };
  s0 -> s3 [0, 65535] { R237 += 1, R199 += 1, R168 += 1, R169 += 1 };
  s0 -> s4 [0, 65535] { R237 += 1, R199 += 1, R169 += 1, R137 += 1, R7 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R237 += 1 };
  s1 -> s1 [0, 65535] { R237 += 1, R199 += 1, R169 += 1, R136 += 1, R137 += 1 };
  s1 -> s8 [0, 65535] { R237 += 1, R199 += 1 };
  s1 -> s4 [0, 65535] { R237 += 1, R199 += 1, R169 += 1, R137 += 1, R7 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [0, 65535] { R237 += 1, R199 += 1, R169 += 1, R136 += 1, R137 += 1 };
  s2 -> s2 [0, 65535] { R237 += 1, R198 += 1, R199 += 1 };
  s2 -> s3 [0, 65535] { R237 += 1, R199 += 1, R168 += 1, R169 += 1 };
  s2 -> s4 [0, 65535] { R237 += 1, R199 += 1, R169 += 1, R137 += 1, R7 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R237 += 1 };
  s3 -> s1 [0, 65535] { R237 += 1, R199 += 1, R169 += 1, R136 += 1, R137 += 1 };
  s3 -> s3 [0, 65535] { R237 += 1, R199 += 1, R168 += 1, R169 += 1 };
  s3 -> s4 [0, 65535] { R237 += 1, R199 += 1, R169 += 1, R137 += 1, R7 += 1 };
  s4 -> s5 [0, 65535] { R237 += 1, R199 += 1, R169 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R237 += 1 };
  s4 -> s8 [0, 65535] { R237 += 1, R199 += 1 };
  s4 -> s4 [0, 65535] { R237 += 1, R199 += 1, R169 += 1, R137 += 1, R7 += 1 };
  s5 -> s5 [0, 65535] { R237 += 1, R199 += 1, R169 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R237 += 1 };
  s5 -> s8 [0, 65535] { R237 += 1, R199 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R237 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R237 += 1 };
  s8 -> s8 [0, 65535] { R237 += 1, R199 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 82] { R239 += 1, R201 += 1, R171 += 1, R149 += 1 };
  s0 -> s2 [0, 65535] { R239 += 1, R201 += 1, R171 += 1, R148 += 1, R149 += 1 };
  s0 -> s3 [0, 65535] { R239 += 1, R201 += 1, R170 += 1, R171 += 1 };
  s0 -> s4 [0, 65535] { R239 += 1, R200 += 1, R201 += 1 };
  s0 -> s0 [0, 65535] { R238 += 1, R239 += 1 };
  s0 -> s5 [83, 83] { R239 += 1, R201 += 1, R171 += 1, R149 += 1 };
  s0 -> s1 [84, 65535] { R239 += 1, R201 += 1, R171 += 1, R149 += 1 };
  s1 -> s1 [0, 82] { R239 += 1, R201 += 1, R171 += 1, R149 += 1 };
  s1 -> s5 [83, 83] { R239 += 1, R201 += 1, R171 += 1, R149 += 1 };
  s1 -> s1 [84, 65535] { R239 += 1, R201 += 1, R171 += 1, R149 += 1 };
  s2 -> s1 [0, 82] { R239 += 1, R201 += 1, R171 += 1, R149 += 1 };
  s2 -> s2 [0, 65535] { R239 += 1, R201 += 1, R171 += 1, R148 += 1, R149 += 1 };
  s2 -> s5 [83, 83] { R239 += 1, R201 += 1, R171 += 1, R149 += 1 };
  s2 -> s1 [84, 65535] { R239 += 1, R201 += 1, R171 += 1, R149 += 1 };
  s3 -> s1 [0, 82] { R239 += 1, R201 += 1, R171 += 1, R149 += 1 };
  s3 -> s2 [0, 65535] { R239 += 1, R201 += 1, R171 += 1, R148 += 1, R149 += 1 };
  s3 -> s3 [0, 65535] { R239 += 1, R201 += 1, R170 += 1, R171 += 1 };
  s3 -> s5 [83, 83] { R239 += 1, R201 += 1, R171 += 1, R149 += 1 };
  s3 -> s1 [84, 65535] { R239 += 1, R201 += 1, R171 += 1, R149 += 1 };
  s4 -> s1 [0, 82] { R239 += 1, R201 += 1, R171 += 1, R149 += 1 };
  s4 -> s2 [0, 65535] { R239 += 1, R201 += 1, R171 += 1, R148 += 1, R149 += 1 };
  s4 -> s3 [0, 65535] { R239 += 1, R201 += 1, R170 += 1, R171 += 1 };
  s4 -> s4 [0, 65535] { R239 += 1, R200 += 1, R201 += 1 };
  s4 -> s5 [83, 83] { R239 += 1, R201 += 1, R171 += 1, R149 += 1 };
  s4 -> s1 [84, 65535] { R239 += 1, R201 += 1, R171 += 1, R149 += 1 };
  s5 -> s6 [0, 65535] { R239 += 1, R201 += 1, R171 += 1 };
  s5 -> s5 [0, 65535] { R239 += 1, R201 += 1, R171 += 1, R149 += 1 };
  s5 -> s7 [0, 65535] { R239 += 1, R201 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s9 [0, 65535] { R239 += 1 };
  s6 -> s6 [0, 65535] { R239 += 1, R201 += 1, R171 += 1 };
  s6 -> s7 [0, 65535] { R239 += 1, R201 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [0, 65535] { R239 += 1 };
  s7 -> s7 [0, 65535] { R239 += 1, R201 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R239 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R239 += 1 };
  accepting s8, s5, s9, s6, s7;
};
automaton uri_17 {
  init s0;
  s0 -> s1 [0, 65535] { R241 += 1, R203 += 1, R172 += 1, R173 += 1 };
  s0 -> s2 [0, 65535] { R241 += 1, R203 += 1, R173 += 1, R150 += 1, R151 += 1 };
  s0 -> s3 [0, 65535] { R241 += 1, R202 += 1, R203 += 1 };
  s0 -> s4 [0, 65535] { R241 += 1, R203 += 1, R173 += 1, R151 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R240 += 1, R241 += 1 };
  s1 -> s1 [0, 65535] { R241 += 1, R203 += 1, R172 += 1, R173 += 1 };
  s1 -> s6 [0, 65535] { R241 += 1 };
  s1 -> s2 [0, 65535] { R241 += 1, R203 += 1, R173 += 1, R150 += 1, R151 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [0, 65535] { R241 += 1, R203 += 1, R173 += 1, R151 += 1, R2 += 1 };
  s2 -> s5 [0, 65535] { R241 += 1, R203 += 1 };
  s2 -> s6 [0, 65535] { R241 += 1 };
  s2 -> s2 [0, 65535] { R241 += 1, R203 += 1, R173 += 1, R150 += 1, R151 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [0, 65535] { R241 += 1, R203 += 1, R173 += 1, R151 += 1, R2 += 1 };
  s3 -> s1 [0, 65535] { R241 += 1, R203 += 1, R172 += 1, R173 += 1 };
  s3 -> s2 [0, 65535] { R241 += 1, R203 += 1, R173 += 1, R150 += 1, R151 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s3 [0, 65535] { R241 += 1, R202 += 1, R203 += 1 };
  s3 -> s4 [0, 65535] { R241 += 1, R203 += 1, R173 += 1, R151 += 1, R2 += 1 };
  s4 -> s5 [0, 65535] { R241 += 1, R203 += 1 };
  s4 -> s6 [0, 65535] { R241 += 1 };
  s4 -> s7 [0, 65535] { R241 += 1, R203 += 1, R173 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [0, 65535] { R241 += 1, R203 += 1, R173 += 1, R151 += 1, R2 += 1 };
  s5 -> s5 [0, 65535] { R241 += 1, R203 += 1 };
  s5 -> s6 [0, 65535] { R241 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R241 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s5 [0, 65535] { R241 += 1, R203 += 1 };
  s7 -> s6 [0, 65535] { R241 += 1 };
  s7 -> s7 [0, 65535] { R241 += 1, R203 += 1, R173 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 82] { R243 += 1, R205 += 1, R175 += 1, R153 += 1 };
  s0 -> s2 [0, 65535] { R243 += 1, R205 += 1, R174 += 1, R175 += 1 };
  s0 -> s3 [0, 65535] { R243 += 1, R205 += 1, R175 += 1, R153 += 1, R8 += 1 };
  s0 -> s4 [0, 65535] { R243 += 1, R205 += 1, R175 += 1, R152 += 1, R153 += 1 };
  s0 -> s5 [0, 65535] { R243 += 1, R204 += 1, R205 += 1 };
  s0 -> s0 [0, 65535] { R242 += 1, R243 += 1 };
  s0 -> s6 [83, 83] { R243 += 1, R205 += 1, R175 += 1, R153 += 1 };
  s0 -> s1 [84, 65535] { R243 += 1, R205 += 1, R175 += 1, R153 += 1 };
  s1 -> s1 [0, 82] { R243 += 1, R205 += 1, R175 += 1, R153 += 1 };
  s1 -> s8 [0, 65535] { R243 += 1 };
  s1 -> s1 [0, 65535] { R243 += 1, R205 += 1, R175 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s9 [0, 65535] { R243 += 1, R205 += 1 };
  s1 -> s6 [83, 83] { R243 += 1, R205 += 1, R175 += 1, R153 += 1 };
  s1 -> s1 [84, 65535] { R243 += 1, R205 += 1, R175 += 1, R153 += 1 };
  s2 -> s1 [0, 82] { R243 += 1, R205 += 1, R175 += 1, R153 += 1 };
  s2 -> s2 [0, 65535] { R243 += 1, R205 += 1, R174 += 1, R175 += 1 };
  s2 -> s8 [0, 65535] { R243 += 1 };
  s2 -> s3 [0, 65535] { R243 += 1, R205 += 1, R175 += 1, R153 += 1, R8 += 1 };
  s2 -> s4 [0, 65535] { R243 += 1, R205 += 1, R175 += 1, R152 += 1, R153 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s6 [83, 83] { R243 += 1, R205 += 1, R175 += 1, R153 += 1 };
  s2 -> s1 [84, 65535] { R243 += 1, R205 += 1, R175 += 1, R153 += 1 };
  s3 -> s1 [0, 82] { R243 += 1, R205 += 1, R175 += 1, R153 += 1 };
  s3 -> s8 [0, 65535] { R243 += 1 };
  s3 -> s10 [0, 65535] { R243 += 1, R205 += 1, R175 += 1 };
  s3 -> s3 [0, 65535] { R243 += 1, R205 += 1, R175 += 1, R153 += 1, R8 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s9 [0, 65535] { R243 += 1, R205 += 1 };
  s3 -> s6 [83, 83] { R243 += 1, R205 += 1, R175 += 1, R153 += 1 };
  s3 -> s1 [84, 65535] { R243 += 1, R205 += 1, R175 += 1, R153 += 1 };
  s4 -> s1 [0, 82] { R243 += 1, R205 += 1, R175 += 1, R153 += 1 };
  s4 -> s8 [0, 65535] { R243 += 1 };
  s4 -> s3 [0, 65535] { R243 += 1, R205 += 1, R175 += 1, R153 += 1, R8 += 1 };
  s4 -> s4 [0, 65535] { R243 += 1, R205 += 1, R175 += 1, R152 += 1, R153 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s9 [0, 65535] { R243 += 1, R205 += 1 };
  s4 -> s6 [83, 83] { R243 += 1, R205 += 1, R175 += 1, R153 += 1 };
  s4 -> s1 [84, 65535] { R243 += 1, R205 += 1, R175 += 1, R153 += 1 };
  s5 -> s1 [0, 82] { R243 += 1, R205 += 1, R175 += 1, R153 += 1 };
  s5 -> s2 [0, 65535] { R243 += 1, R205 += 1, R174 += 1, R175 += 1 };
  s5 -> s3 [0, 65535] { R243 += 1, R205 += 1, R175 += 1, R153 += 1, R8 += 1 };
  s5 -> s4 [0, 65535] { R243 += 1, R205 += 1, R175 += 1, R152 += 1, R153 += 1 };
  s5 -> s5 [0, 65535] { R243 += 1, R204 += 1, R205 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s6 [83, 83] { R243 += 1, R205 += 1, R175 += 1, R153 += 1 };
  s5 -> s1 [84, 65535] { R243 += 1, R205 += 1, R175 += 1, R153 += 1 };
  s6 -> s6 [0, 65535] { R243 += 1, R205 += 1, R175 += 1, R153 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R243 += 1 };
  s8 -> s7 [0, 65535];
  s9 -> s8 [0, 65535] { R243 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s9 [0, 65535] { R243 += 1, R205 += 1 };
  s10 -> s8 [0, 65535] { R243 += 1 };
  s10 -> s10 [0, 65535] { R243 += 1, R205 += 1, R175 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s9 [0, 65535] { R243 += 1, R205 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s1, s7, s0, s10;
};
automaton uri_19 {
  init s0;
  s0 -> s1 [0, 82] { R245 += 1, R207 += 1, R177 += 1, R155 += 1, R139 += 1 };
  s0 -> s2 [0, 65535] { R245 += 1, R207 += 1, R177 += 1, R154 += 1, R155 += 1 };
  s0 -> s3 [0, 65535] { R245 += 1, R207 += 1, R176 += 1, R177 += 1 };
  s0 -> s4 [0, 65535] { R245 += 1, R206 += 1, R207 += 1 };
  s0 -> s0 [0, 65535] { R244 += 1, R245 += 1 };
  s0 -> s5 [0, 65535] { R245 += 1, R207 += 1, R177 += 1, R155 += 1, R138 += 1, R139 += 1 };
  s0 -> s6 [83, 83] { R245 += 1, R207 += 1, R177 += 1, R155 += 1, R139 += 1 };
  s0 -> s1 [84, 65535] { R245 += 1, R207 += 1, R177 += 1, R155 += 1, R139 += 1 };
  s1 -> s1 [0, 82] { R245 += 1, R207 += 1, R177 += 1, R155 += 1, R139 += 1 };
  s1 -> s6 [83, 83] { R245 += 1, R207 += 1, R177 += 1, R155 += 1, R139 += 1 };
  s1 -> s1 [84, 65535] { R245 += 1, R207 += 1, R177 += 1, R155 += 1, R139 += 1 };
  s2 -> s1 [0, 82] { R245 += 1, R207 += 1, R177 += 1, R155 += 1, R139 += 1 };
  s2 -> s2 [0, 65535] { R245 += 1, R207 += 1, R177 += 1, R154 += 1, R155 += 1 };
  s2 -> s5 [0, 65535] { R245 += 1, R207 += 1, R177 += 1, R155 += 1, R138 += 1, R139 += 1 };
  s2 -> s6 [83, 83] { R245 += 1, R207 += 1, R177 += 1, R155 += 1, R139 += 1 };
  s2 -> s1 [84, 65535] { R245 += 1, R207 += 1, R177 += 1, R155 += 1, R139 += 1 };
  s3 -> s1 [0, 82] { R245 += 1, R207 += 1, R177 += 1, R155 += 1, R139 += 1 };
  s3 -> s2 [0, 65535] { R245 += 1, R207 += 1, R177 += 1, R154 += 1, R155 += 1 };
  s3 -> s3 [0, 65535] { R245 += 1, R207 += 1, R176 += 1, R177 += 1 };
  s3 -> s5 [0, 65535] { R245 += 1, R207 += 1, R177 += 1, R155 += 1, R138 += 1, R139 += 1 };
  s3 -> s6 [83, 83] { R245 += 1, R207 += 1, R177 += 1, R155 += 1, R139 += 1 };
  s3 -> s1 [84, 65535] { R245 += 1, R207 += 1, R177 += 1, R155 += 1, R139 += 1 };
  s4 -> s1 [0, 82] { R245 += 1, R207 += 1, R177 += 1, R155 += 1, R139 += 1 };
  s4 -> s2 [0, 65535] { R245 += 1, R207 += 1, R177 += 1, R154 += 1, R155 += 1 };
  s4 -> s3 [0, 65535] { R245 += 1, R207 += 1, R176 += 1, R177 += 1 };
  s4 -> s4 [0, 65535] { R245 += 1, R206 += 1, R207 += 1 };
  s4 -> s5 [0, 65535] { R245 += 1, R207 += 1, R177 += 1, R155 += 1, R138 += 1, R139 += 1 };
  s4 -> s6 [83, 83] { R245 += 1, R207 += 1, R177 += 1, R155 += 1, R139 += 1 };
  s4 -> s1 [84, 65535] { R245 += 1, R207 += 1, R177 += 1, R155 += 1, R139 += 1 };
  s5 -> s1 [0, 82] { R245 += 1, R207 += 1, R177 += 1, R155 += 1, R139 += 1 };
  s5 -> s5 [0, 65535] { R245 += 1, R207 += 1, R177 += 1, R155 += 1, R138 += 1, R139 += 1 };
  s5 -> s6 [83, 83] { R245 += 1, R207 += 1, R177 += 1, R155 += 1, R139 += 1 };
  s5 -> s1 [84, 65535] { R245 += 1, R207 += 1, R177 += 1, R155 += 1, R139 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R245 += 1, R207 += 1 };
  s6 -> s6 [0, 65535] { R245 += 1, R207 += 1, R177 += 1, R155 += 1, R139 += 1 };
  s6 -> s9 [0, 65535] { R245 += 1 };
  s6 -> s10 [0, 65535] { R245 += 1, R207 += 1, R177 += 1, R155 += 1 };
  s6 -> s11 [0, 65535] { R245 += 1, R207 += 1, R177 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R245 += 1, R207 += 1 };
  s8 -> s9 [0, 65535] { R245 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s9 [0, 65535] { R245 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s8 [0, 65535] { R245 += 1, R207 += 1 };
  s10 -> s9 [0, 65535] { R245 += 1 };
  s10 -> s10 [0, 65535] { R245 += 1, R207 += 1, R177 += 1, R155 += 1 };
  s10 -> s11 [0, 65535] { R245 += 1, R207 += 1, R177 += 1 };
  s11 -> s7 [0, 65535];
  s11 -> s8 [0, 65535] { R245 += 1, R207 += 1 };
  s11 -> s9 [0, 65535] { R245 += 1 };
  s11 -> s11 [0, 65535] { R245 += 1, R207 += 1, R177 += 1 };
  accepting s8, s9, s6, s7, s10, s11;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 65535] { R247 += 1, R209 += 1, R179 += 1, R156 += 1, R157 += 1 };
  s0 -> s2 [0, 65535] { R247 += 1, R209 += 1, R179 += 1, R157 += 1, R140 += 1, R141 += 1 };
  s0 -> s0 [0, 65535] { R246 += 1, R247 += 1 };
  s0 -> s3 [0, 65535] { R247 += 1, R209 += 1, R179 += 1, R157 += 1, R141 += 1, R133 += 1 };
  s0 -> s4 [0, 65535] { R247 += 1, R208 += 1, R209 += 1 };
  s0 -> s5 [0, 65535] { R247 += 1, R209 += 1, R178 += 1, R179 += 1 };
  s1 -> s6 [0, 65535] { R247 += 1 };
  s1 -> s1 [0, 65535] { R247 += 1, R209 += 1, R179 += 1, R156 += 1, R157 += 1 };
  s1 -> s2 [0, 65535] { R247 += 1, R209 += 1, R179 += 1, R157 += 1, R140 += 1, R141 += 1 };
  s1 -> s8 [0, 65535] { R247 += 1, R209 += 1 };
  s1 -> s3 [0, 65535] { R247 += 1, R209 += 1, R179 += 1, R157 += 1, R141 += 1, R133 += 1 };
  s1 -> s7 [0, 65535];
  s2 -> s6 [0, 65535] { R247 += 1 };
  s2 -> s2 [0, 65535] { R247 += 1, R209 += 1, R179 += 1, R157 += 1, R140 += 1, R141 += 1 };
  s2 -> s8 [0, 65535] { R247 += 1, R209 += 1 };
  s2 -> s3 [0, 65535] { R247 += 1, R209 += 1, R179 += 1, R157 += 1, R141 += 1, R133 += 1 };
  s2 -> s10 [0, 65535] { R247 += 1, R209 += 1, R179 += 1 };
  s2 -> s7 [0, 65535];
  s3 -> s6 [0, 65535] { R247 += 1 };
  s3 -> s8 [0, 65535] { R247 += 1, R209 += 1 };
  s3 -> s9 [0, 65535] { R247 += 1, R209 += 1, R179 += 1, R157 += 1 };
  s3 -> s3 [0, 65535] { R247 += 1, R209 += 1, R179 += 1, R157 += 1, R141 += 1, R133 += 1 };
  s3 -> s10 [0, 65535] { R247 += 1, R209 += 1, R179 += 1 };
  s3 -> s7 [0, 65535];
  s4 -> s1 [0, 65535] { R247 += 1, R209 += 1, R179 += 1, R156 += 1, R157 += 1 };
  s4 -> s2 [0, 65535] { R247 += 1, R209 += 1, R179 += 1, R157 += 1, R140 += 1, R141 += 1 };
  s4 -> s3 [0, 65535] { R247 += 1, R209 += 1, R179 += 1, R157 += 1, R141 += 1, R133 += 1 };
  s4 -> s4 [0, 65535] { R247 += 1, R208 += 1, R209 += 1 };
  s4 -> s5 [0, 65535] { R247 += 1, R209 += 1, R178 += 1, R179 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s6 [0, 65535] { R247 += 1 };
  s5 -> s1 [0, 65535] { R247 += 1, R209 += 1, R179 += 1, R156 += 1, R157 += 1 };
  s5 -> s2 [0, 65535] { R247 += 1, R209 += 1, R179 += 1, R157 += 1, R140 += 1, R141 += 1 };
  s5 -> s3 [0, 65535] { R247 += 1, R209 += 1, R179 += 1, R157 += 1, R141 += 1, R133 += 1 };
  s5 -> s5 [0, 65535] { R247 += 1, R209 += 1, R178 += 1, R179 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R247 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R247 += 1 };
  s8 -> s8 [0, 65535] { R247 += 1, R209 += 1 };
  s8 -> s7 [0, 65535];
  s9 -> s6 [0, 65535] { R247 += 1 };
  s9 -> s8 [0, 65535] { R247 += 1, R209 += 1 };
  s9 -> s9 [0, 65535] { R247 += 1, R209 += 1, R179 += 1, R157 += 1 };
  s9 -> s10 [0, 65535] { R247 += 1, R209 += 1, R179 += 1 };
  s9 -> s7 [0, 65535];
  s10 -> s6 [0, 65535] { R247 += 1 };
  s10 -> s8 [0, 65535] { R247 += 1, R209 += 1 };
  s10 -> s10 [0, 65535] { R247 += 1, R209 += 1, R179 += 1 };
  s10 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
};
constraint R2 = R139 && R3 = R157 && R4 = R179 && R5 = R147 && R6 = R247 && R16 = 0 && R17 = R209 && R134 = 0 && R135 = 1 && R136 = 0 && R137 = 1 && R138 = 0 && R142 = 0 && R143 = 2 && R144 = 0 && R145 = 2 && R146 - R209 = 1 && R148 = 0 && R149 = R157 && R150 = 0 && R151 = R157 && R152 = 0 && R153 = R157 && R154 = 0 && R155 = R157 && R156 = 0 && R158 = 3 && R159 = R179 && R160 = 3 && R161 = R179 && R162 = 3 && R163 = R179 && R164 = 3 && R165 = R179 && R166 = 3 && R167 = R179 && R168 = 3 && R169 = R179 && R170 = 3 && R171 = R179 && R172 = 3 && R173 = R179 && R174 = 3 && R175 = R179 && R176 = 3 && R177 = R179 && R178 = 3 && R180 = 0 && R181 = R209 && R182 = 0 && R183 = R209 && R184 = 0 && R185 = R209 && R186 = 0 && R187 = R209 && R188 = 0 && R189 = R209 && R190 = 0 && R191 = R209 && R192 = 0 && R193 = R209 && R194 = 0 && R195 = R209 && R196 = 0 && R197 = R209 && R198 = 0 && R199 = R209 && R200 = 0 && R201 = R209 && R202 = 0 && R203 = R209 && R204 = 0 && R205 = R209 && R206 = 0 && R207 = R209 && R208 = 0 && R210 = 10 && R211 = R247 && R212 = 10 && R213 = R247 && R214 = 10 && R215 = R247 && R216 = 10 && R217 = R247 && R218 = 10 && R219 = R247 && R220 = 10 && R221 = R247 && R222 = 10 && R223 = R247 && R224 = 10 && R225 = R247 && R226 = 10 && R227 = R247 && R228 = 10 && R229 = R247 && R230 = 10 && R231 = R247 && R232 = 10 && R233 = R247 && R234 = 10 && R235 = R247 && R236 = 10 && R237 = R247 && R238 = 10 && R239 = R247 && R240 = 10 && R241 = R247 && R242 = 10 && R243 = R247 && R244 = 10 && R245 = R247 && R246 = 10 && R0 != 0 && R1 != 0 && R8 < 1 && R11 < 1 && R12 < 1 && -1 < R139 && R209 < R147 && 0 < R157 && 2 < R179 && -1 < R209 && 9 < R247 && (R140 != 0 || R139 = R141 || (R133 = 0 && R139 = 0)) && (R140 = 0 || (R133 = 0 && R139 = 0));
// End of Parikh automata intersection problem
