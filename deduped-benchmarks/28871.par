// Parikh automata intersection problem, generated by OSTRICH+
counter int R0, R1, R1000, R1001, R1002, R1003, R1004, R1005, R1006, R1007, R1008, R1009, R1010, R1011, R1012, R1013, R1014, R1015, R1016, R1017, R1018, R1019, R1020, R1021, R1022, R1023, R1024, R1025, R1026, R1027, R1028, R1029, R1030, R1031, R1032, R1033, R1034, R1035, R1036, R1037, R1038, R1039, R1040, R1041, R1042, R1043, R1044, R1045, R1046, R11, R12, R2, R3, R4, R5, R531, R532, R6, R7, R791, R792, R8, R9, R920, R921, R922, R923, R924, R925, R926, R927, R928, R929, R930, R931, R932, R933, R934, R935, R936, R937, R938, R939, R940, R941, R942, R943, R944, R945, R946, R947, R948, R949, R950, R951, R952, R953, R954, R955, R956, R957, R958, R959, R960, R961, R962, R963, R964, R965, R966, R967, R968, R969, R970, R971, R972, R973, R974, R975, R976, R977, R978, R979, R980, R981, R982, R983, R984, R985, R986, R987, R988, R989, R990, R991, R992, R993, R994, R995, R996, R997, R998, R999;
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R7 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 45] { R1006 += 1 };
  s0 -> s0 [0, 65535] { R1005 += 1, R1006 += 1 };
  s0 -> s2 [46, 46] { R1006 += 1 };
  s0 -> s3 [47, 47] { R1006 += 1 };
  s0 -> s1 [48, 65535] { R1006 += 1 };
  s1 -> s1 [0, 45] { R1006 += 1 };
  s1 -> s2 [46, 46] { R1006 += 1 };
  s1 -> s3 [47, 47] { R1006 += 1 };
  s1 -> s1 [48, 65535] { R1006 += 1 };
  s2 -> s1 [0, 45] { R1006 += 1 };
  s2 -> s2 [46, 46] { R1006 += 1 };
  s2 -> s3 [47, 47] { R1006 += 1 };
  s2 -> s1 [48, 114] { R1006 += 1 };
  s2 -> s8 [115, 115] { R1006 += 1 };
  s2 -> s1 [116, 65535] { R1006 += 1 };
  s3 -> s3 [0, 45] { R1006 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s4 [46, 46] { R1006 += 1 };
  s3 -> s3 [47, 65535] { R1006 += 1 };
  s4 -> s3 [0, 45] { R1006 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s4 [46, 46] { R1006 += 1 };
  s4 -> s3 [47, 114] { R1006 += 1 };
  s4 -> s5 [115, 115] { R1006 += 1 };
  s4 -> s3 [116, 65535] { R1006 += 1 };
  s5 -> s3 [0, 45] { R1006 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s4 [46, 46] { R1006 += 1 };
  s5 -> s3 [47, 110] { R1006 += 1 };
  s5 -> s6 [111, 111] { R1006 += 1 };
  s5 -> s3 [112, 65535] { R1006 += 1 };
  s6 -> s3 [0, 45] { R1006 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s4 [46, 46] { R1006 += 1 };
  s6 -> s3 [47, 98] { R1006 += 1 };
  s6 -> s7 [99, 99] { R1006 += 1 };
  s6 -> s3 [100, 65535] { R1006 += 1 };
  s7 -> s3 [0, 45] { R1006 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s4 [46, 46] { R1006 += 1 };
  s7 -> s3 [47, 106] { R1006 += 1 };
  s7 -> s3 [108, 65535] { R1006 += 1 };
  s8 -> s1 [0, 45] { R1006 += 1 };
  s8 -> s2 [46, 46] { R1006 += 1 };
  s8 -> s3 [47, 47] { R1006 += 1 };
  s8 -> s1 [48, 110] { R1006 += 1 };
  s8 -> s9 [111, 111] { R1006 += 1 };
  s8 -> s1 [112, 65535] { R1006 += 1 };
  s9 -> s1 [0, 45] { R1006 += 1 };
  s9 -> s2 [46, 46] { R1006 += 1 };
  s9 -> s3 [47, 47] { R1006 += 1 };
  s9 -> s1 [48, 98] { R1006 += 1 };
  s9 -> s10 [99, 99] { R1006 += 1 };
  s9 -> s1 [100, 65535] { R1006 += 1 };
  s10 -> s1 [0, 45] { R1006 += 1 };
  s10 -> s2 [46, 46] { R1006 += 1 };
  s10 -> s3 [47, 47] { R1006 += 1 };
  s10 -> s1 [48, 106] { R1006 += 1 };
  s10 -> s1 [108, 65535] { R1006 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_3 {
  init s0;
  s0 -> s1 [0, 65535] { R1008 += 1, R6 += 1 };
  s0 -> s0 [0, 65535] { R1007 += 1, R1008 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R1008 += 1, R6 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s1 [0, 46] { R1010 += 1, R792 += 1 };
  s0 -> s0 [0, 65535] { R1009 += 1, R1010 += 1 };
  s0 -> s2 [0, 65535] { R1010 += 1, R791 += 1, R792 += 1 };
  s0 -> s3 [47, 47] { R1010 += 1 };
  s0 -> s1 [48, 65535] { R1010 += 1, R792 += 1 };
  s1 -> s1 [0, 46] { R1010 += 1, R792 += 1 };
  s1 -> s3 [47, 47] { R1010 += 1 };
  s1 -> s1 [48, 65535] { R1010 += 1, R792 += 1 };
  s2 -> s1 [0, 46] { R1010 += 1, R792 += 1 };
  s2 -> s2 [0, 65535] { R1010 += 1, R791 += 1, R792 += 1 };
  s2 -> s3 [47, 47] { R1010 += 1 };
  s2 -> s1 [48, 65535] { R1010 += 1, R792 += 1 };
  s3 -> s3 [0, 65535] { R1010 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton uri_5 {
  init s0;
  s0 -> s0 [0, 65535] { R1011 += 1, R1012 += 1 };
  s0 -> s1 [0, 65535] { R1012 += 1, R933 += 1, R934 += 1 };
  s0 -> s2 [0, 65535] { R1012 += 1, R934 += 1, R2 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R1012 += 1, R933 += 1, R934 += 1 };
  s1 -> s2 [0, 65535] { R1012 += 1, R934 += 1, R2 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R1012 += 1 };
  s2 -> s2 [0, 65535] { R1012 += 1, R934 += 1, R2 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1012 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_6 {
  init s0;
  s0 -> s1 [0, 63] { R1014 += 1, R972 += 1 };
  s0 -> s2 [0, 65535] { R1014 += 1, R971 += 1, R972 += 1 };
  s0 -> s0 [0, 65535] { R1013 += 1, R1014 += 1 };
  s0 -> s3 [64, 64] { R1014 += 1, R972 += 1 };
  s0 -> s1 [65, 65535] { R1014 += 1, R972 += 1 };
  s1 -> s1 [0, 63] { R1014 += 1, R972 += 1 };
  s1 -> s3 [64, 64] { R1014 += 1, R972 += 1 };
  s1 -> s1 [65, 65535] { R1014 += 1, R972 += 1 };
  s2 -> s1 [0, 63] { R1014 += 1, R972 += 1 };
  s2 -> s2 [0, 65535] { R1014 += 1, R971 += 1, R972 += 1 };
  s2 -> s3 [64, 64] { R1014 += 1, R972 += 1 };
  s2 -> s1 [65, 65535] { R1014 += 1, R972 += 1 };
  s3 -> s3 [0, 65535] { R1014 += 1, R972 += 1 };
  s3 -> s4 [0, 65535] { R1014 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1014 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5;
};
automaton uri_7 {
  init s0;
  s0 -> s1 [0, 65535] { R1016 += 1, R973 += 1, R974 += 1 };
  s0 -> s2 [0, 65535] { R1016 += 1, R974 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R1015 += 1, R1016 += 1 };
  s1 -> s1 [0, 65535] { R1016 += 1, R973 += 1, R974 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R1016 += 1, R974 += 1, R5 += 1 };
  s2 -> s3 [0, 65535] { R1016 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1016 += 1, R974 += 1, R5 += 1 };
  s3 -> s3 [0, 65535] { R1016 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_8 {
  init s0;
  s0 -> s1 [0, 36] { R1018 += 1, R976 += 1, R930 += 1 };
  s0 -> s2 [0, 65535] { R1018 += 1, R976 += 1, R929 += 1, R930 += 1 };
  s0 -> s0 [0, 65535] { R1017 += 1, R1018 += 1 };
  s0 -> s3 [0, 65535] { R1018 += 1, R975 += 1, R976 += 1 };
  s0 -> s1 [38, 42] { R1018 += 1, R976 += 1, R930 += 1 };
  s0 -> s1 [44, 57] { R1018 += 1, R976 += 1, R930 += 1 };
  s0 -> s1 [59, 63] { R1018 += 1, R976 += 1, R930 += 1 };
  s0 -> s1 [65, 65535] { R1018 += 1, R976 += 1, R930 += 1 };
  s1 -> s1 [0, 36] { R1018 += 1, R976 += 1, R930 += 1 };
  s1 -> s5 [0, 65535] { R1018 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R1018 += 1, R976 += 1 };
  s1 -> s1 [38, 42] { R1018 += 1, R976 += 1, R930 += 1 };
  s1 -> s1 [44, 57] { R1018 += 1, R976 += 1, R930 += 1 };
  s1 -> s1 [59, 63] { R1018 += 1, R976 += 1, R930 += 1 };
  s1 -> s1 [65, 65535] { R1018 += 1, R976 += 1, R930 += 1 };
  s2 -> s1 [0, 36] { R1018 += 1, R976 += 1, R930 += 1 };
  s2 -> s5 [0, 65535] { R1018 += 1 };
  s2 -> s2 [0, 65535] { R1018 += 1, R976 += 1, R929 += 1, R930 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [38, 42] { R1018 += 1, R976 += 1, R930 += 1 };
  s2 -> s1 [44, 57] { R1018 += 1, R976 += 1, R930 += 1 };
  s2 -> s1 [59, 63] { R1018 += 1, R976 += 1, R930 += 1 };
  s2 -> s1 [65, 65535] { R1018 += 1, R976 += 1, R930 += 1 };
  s3 -> s1 [0, 36] { R1018 += 1, R976 += 1, R930 += 1 };
  s3 -> s2 [0, 65535] { R1018 += 1, R976 += 1, R929 += 1, R930 += 1 };
  s3 -> s3 [0, 65535] { R1018 += 1, R975 += 1, R976 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [38, 42] { R1018 += 1, R976 += 1, R930 += 1 };
  s3 -> s1 [44, 57] { R1018 += 1, R976 += 1, R930 += 1 };
  s3 -> s1 [59, 63] { R1018 += 1, R976 += 1, R930 += 1 };
  s3 -> s1 [65, 65535] { R1018 += 1, R976 += 1, R930 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1018 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_9 {
  init s0;
  s0 -> s1 [0, 65535] { R1020 += 1, R978 += 1, R932 += 1, R1 += 1 };
  s0 -> s0 [0, 65535] { R1019 += 1, R1020 += 1 };
  s0 -> s2 [0, 65535] { R1020 += 1, R978 += 1, R931 += 1, R932 += 1 };
  s0 -> s3 [0, 65535] { R1020 += 1, R977 += 1, R978 += 1 };
  s1 -> s1 [0, 65535] { R1020 += 1, R978 += 1, R932 += 1, R1 += 1 };
  s1 -> s6 [0, 65535] { R1020 += 1, R978 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R1020 += 1 };
  s2 -> s1 [0, 65535] { R1020 += 1, R978 += 1, R932 += 1, R1 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R1020 += 1 };
  s2 -> s2 [0, 65535] { R1020 += 1, R978 += 1, R931 += 1, R932 += 1 };
  s3 -> s1 [0, 65535] { R1020 += 1, R978 += 1, R932 += 1, R1 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R1020 += 1, R978 += 1, R931 += 1, R932 += 1 };
  s3 -> s3 [0, 65535] { R1020 += 1, R977 += 1, R978 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1020 += 1 };
  s6 -> s6 [0, 65535] { R1020 += 1, R978 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R1020 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_10 {
  init s0;
  s0 -> s1 [0, 57] { R1022 += 1, R980 += 1, R946 += 1, R532 += 1 };
  s0 -> s2 [0, 65535] { R1022 += 1, R979 += 1, R980 += 1 };
  s0 -> s3 [0, 65535] { R1022 += 1, R980 += 1, R945 += 1, R946 += 1 };
  s0 -> s4 [0, 65535] { R1022 += 1, R980 += 1, R946 += 1, R531 += 1, R532 += 1 };
  s0 -> s0 [0, 65535] { R1021 += 1, R1022 += 1 };
  s0 -> s5 [58, 58] { R1022 += 1, R980 += 1, R946 += 1 };
  s0 -> s1 [59, 65535] { R1022 += 1, R980 += 1, R946 += 1, R532 += 1 };
  s1 -> s1 [0, 57] { R1022 += 1, R980 += 1, R946 += 1, R532 += 1 };
  s1 -> s5 [58, 58] { R1022 += 1, R980 += 1, R946 += 1 };
  s1 -> s1 [59, 65535] { R1022 += 1, R980 += 1, R946 += 1, R532 += 1 };
  s2 -> s1 [0, 57] { R1022 += 1, R980 += 1, R946 += 1, R532 += 1 };
  s2 -> s2 [0, 65535] { R1022 += 1, R979 += 1, R980 += 1 };
  s2 -> s3 [0, 65535] { R1022 += 1, R980 += 1, R945 += 1, R946 += 1 };
  s2 -> s4 [0, 65535] { R1022 += 1, R980 += 1, R946 += 1, R531 += 1, R532 += 1 };
  s2 -> s5 [58, 58] { R1022 += 1, R980 += 1, R946 += 1 };
  s2 -> s1 [59, 65535] { R1022 += 1, R980 += 1, R946 += 1, R532 += 1 };
  s3 -> s1 [0, 57] { R1022 += 1, R980 += 1, R946 += 1, R532 += 1 };
  s3 -> s3 [0, 65535] { R1022 += 1, R980 += 1, R945 += 1, R946 += 1 };
  s3 -> s4 [0, 65535] { R1022 += 1, R980 += 1, R946 += 1, R531 += 1, R532 += 1 };
  s3 -> s5 [58, 58] { R1022 += 1, R980 += 1, R946 += 1 };
  s3 -> s1 [59, 65535] { R1022 += 1, R980 += 1, R946 += 1, R532 += 1 };
  s4 -> s1 [0, 57] { R1022 += 1, R980 += 1, R946 += 1, R532 += 1 };
  s4 -> s4 [0, 65535] { R1022 += 1, R980 += 1, R946 += 1, R531 += 1, R532 += 1 };
  s4 -> s5 [58, 58] { R1022 += 1, R980 += 1, R946 += 1 };
  s4 -> s1 [59, 65535] { R1022 += 1, R980 += 1, R946 += 1, R532 += 1 };
  s5 -> s6 [0, 65535] { R1022 += 1 };
  s5 -> s7 [0, 65535] { R1022 += 1, R980 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R1022 += 1, R980 += 1, R946 += 1 };
  s6 -> s6 [0, 65535] { R1022 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s6 [0, 65535] { R1022 += 1 };
  s7 -> s7 [0, 65535] { R1022 += 1, R980 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton uri_11 {
  init s0;
  s0 -> s0 [0, 65535] { R1023 += 1, R1024 += 1 };
  s0 -> s1 [0, 65535] { R1024 += 1, R981 += 1, R982 += 1 };
  s0 -> s2 [0, 65535] { R1024 += 1, R982 += 1, R947 += 1, R948 += 1 };
  s0 -> s3 [0, 65535] { R1024 += 1, R982 += 1, R948 += 1, R920 += 1 };
  s1 -> s1 [0, 65535] { R1024 += 1, R981 += 1, R982 += 1 };
  s1 -> s2 [0, 65535] { R1024 += 1, R982 += 1, R947 += 1, R948 += 1 };
  s1 -> s3 [0, 65535] { R1024 += 1, R982 += 1, R948 += 1, R920 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s4 [0, 65535] { R1024 += 1 };
  s2 -> s2 [0, 65535] { R1024 += 1, R982 += 1, R947 += 1, R948 += 1 };
  s2 -> s3 [0, 65535] { R1024 += 1, R982 += 1, R948 += 1, R920 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R1024 += 1 };
  s3 -> s3 [0, 65535] { R1024 += 1, R982 += 1, R948 += 1, R920 += 1 };
  s3 -> s5 [0, 65535] { R1024 += 1, R982 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R1024 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s4 [0, 65535] { R1024 += 1 };
  s5 -> s5 [0, 65535] { R1024 += 1, R982 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_12 {
  init s0;
  s0 -> s1 [0, 107] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s0 -> s0 [0, 65535] { R1025 += 1, R1026 += 1 };
  s0 -> s2 [0, 65535] { R1026 += 1, R984 += 1, R950 += 1, R925 += 1, R926 += 1 };
  s0 -> s3 [0, 65535] { R1026 += 1, R983 += 1, R984 += 1 };
  s0 -> s4 [0, 65535] { R1026 += 1, R984 += 1, R949 += 1, R950 += 1 };
  s0 -> s5 [108, 108] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s0 -> s1 [109, 65535] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s1 -> s1 [0, 65535] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s1 -> s6 [0, 65535] { R1026 += 1, R984 += 1 };
  s1 -> s7 [0, 65535] { R1026 += 1 };
  s1 -> s17 [0, 65535] { R1026 += 1, R984 += 1, R950 += 1 };
  s1 -> s8 [0, 65535];
  s2 -> s1 [0, 107] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s2 -> s2 [0, 65535] { R1026 += 1, R984 += 1, R950 += 1, R925 += 1, R926 += 1 };
  s2 -> s6 [0, 65535] { R1026 += 1, R984 += 1 };
  s2 -> s7 [0, 65535] { R1026 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s5 [108, 108] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s2 -> s1 [109, 65535] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s3 -> s1 [0, 107] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s3 -> s2 [0, 65535] { R1026 += 1, R984 += 1, R950 += 1, R925 += 1, R926 += 1 };
  s3 -> s3 [0, 65535] { R1026 += 1, R983 += 1, R984 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s4 [0, 65535] { R1026 += 1, R984 += 1, R949 += 1, R950 += 1 };
  s3 -> s5 [108, 108] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s3 -> s1 [109, 65535] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s4 -> s1 [0, 107] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s4 -> s2 [0, 65535] { R1026 += 1, R984 += 1, R950 += 1, R925 += 1, R926 += 1 };
  s4 -> s7 [0, 65535] { R1026 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [0, 65535] { R1026 += 1, R984 += 1, R949 += 1, R950 += 1 };
  s4 -> s5 [108, 108] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s4 -> s1 [109, 65535] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s5 -> s1 [0, 110] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s5 -> s6 [0, 65535] { R1026 += 1, R984 += 1 };
  s5 -> s7 [0, 65535] { R1026 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R1026 += 1, R984 += 1, R950 += 1 };
  s5 -> s9 [111, 111] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s5 -> s1 [112, 65535] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s6 -> s6 [0, 65535] { R1026 += 1, R984 += 1 };
  s6 -> s7 [0, 65535] { R1026 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R1026 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s1 [0, 98] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s9 -> s6 [0, 65535] { R1026 += 1, R984 += 1 };
  s9 -> s7 [0, 65535] { R1026 += 1 };
  s9 -> s9 [0, 65535] { R1026 += 1, R984 += 1, R950 += 1 };
  s9 -> s8 [0, 65535];
  s9 -> s10 [99, 99] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s9 -> s1 [100, 65535] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s10 -> s1 [0, 96] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s10 -> s6 [0, 65535] { R1026 += 1, R984 += 1 };
  s10 -> s7 [0, 65535] { R1026 += 1 };
  s10 -> s10 [0, 65535] { R1026 += 1, R984 += 1, R950 += 1 };
  s10 -> s8 [0, 65535];
  s10 -> s11 [97, 97] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s10 -> s1 [98, 65535] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s11 -> s1 [0, 107] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s11 -> s6 [0, 65535] { R1026 += 1, R984 += 1 };
  s11 -> s11 [0, 65535] { R1026 += 1, R984 += 1, R950 += 1 };
  s11 -> s7 [0, 65535] { R1026 += 1 };
  s11 -> s8 [0, 65535];
  s11 -> s12 [108, 108] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s11 -> s1 [109, 65535] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s12 -> s1 [0, 103] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s12 -> s6 [0, 65535] { R1026 += 1, R984 += 1 };
  s12 -> s7 [0, 65535] { R1026 += 1 };
  s12 -> s8 [0, 65535];
  s12 -> s12 [0, 65535] { R1026 += 1, R984 += 1, R950 += 1 };
  s12 -> s13 [104, 104] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s12 -> s1 [105, 65535] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s13 -> s1 [0, 110] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s13 -> s6 [0, 65535] { R1026 += 1, R984 += 1 };
  s13 -> s7 [0, 65535] { R1026 += 1 };
  s13 -> s8 [0, 65535];
  s13 -> s13 [0, 65535] { R1026 += 1, R984 += 1, R950 += 1 };
  s13 -> s14 [111, 111] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s13 -> s1 [112, 65535] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s14 -> s1 [0, 114] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s14 -> s6 [0, 65535] { R1026 += 1, R984 += 1 };
  s14 -> s7 [0, 65535] { R1026 += 1 };
  s14 -> s8 [0, 65535];
  s14 -> s14 [0, 65535] { R1026 += 1, R984 += 1, R950 += 1 };
  s14 -> s15 [115, 115] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s14 -> s1 [116, 65535] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s15 -> s1 [0, 115] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s15 -> s6 [0, 65535] { R1026 += 1, R984 += 1 };
  s15 -> s7 [0, 65535] { R1026 += 1 };
  s15 -> s15 [0, 65535] { R1026 += 1, R984 += 1, R950 += 1 };
  s15 -> s8 [0, 65535];
  s15 -> s16 [116, 116] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s15 -> s1 [117, 65535] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s16 -> s1 [0, 65535] { R1026 += 1, R984 += 1, R950 += 1, R926 += 1 };
  s17 -> s6 [0, 65535] { R1026 += 1, R984 += 1 };
  s17 -> s7 [0, 65535] { R1026 += 1 };
  s17 -> s17 [0, 65535] { R1026 += 1, R984 += 1, R950 += 1 };
  s17 -> s8 [0, 65535];
  accepting s17, s3, s4, s12, s8, s13, s5, s2, s9, s14, s6, s1, s7, s0, s15, s10, s11;
};
automaton uri_13 {
  init s0;
  s0 -> s0 [0, 65535] { R1027 += 1, R1028 += 1 };
  s0 -> s1 [0, 65535] { R1028 += 1, R986 += 1, R951 += 1, R952 += 1 };
  s0 -> s2 [0, 65535] { R1028 += 1, R985 += 1, R986 += 1 };
  s0 -> s3 [0, 65535] { R1028 += 1, R986 += 1, R952 += 1, R927 += 1, R928 += 1 };
  s0 -> s4 [0, 65535] { R1028 += 1, R986 += 1, R952 += 1, R928 += 1, R3 += 1 };
  s1 -> s6 [0, 65535] { R1028 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R1028 += 1, R986 += 1, R951 += 1, R952 += 1 };
  s1 -> s3 [0, 65535] { R1028 += 1, R986 += 1, R952 += 1, R927 += 1, R928 += 1 };
  s1 -> s4 [0, 65535] { R1028 += 1, R986 += 1, R952 += 1, R928 += 1, R3 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s1 [0, 65535] { R1028 += 1, R986 += 1, R951 += 1, R952 += 1 };
  s2 -> s2 [0, 65535] { R1028 += 1, R985 += 1, R986 += 1 };
  s2 -> s3 [0, 65535] { R1028 += 1, R986 += 1, R952 += 1, R927 += 1, R928 += 1 };
  s2 -> s4 [0, 65535] { R1028 += 1, R986 += 1, R952 += 1, R928 += 1, R3 += 1 };
  s3 -> s6 [0, 65535] { R1028 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s8 [0, 65535] { R1028 += 1, R986 += 1 };
  s3 -> s3 [0, 65535] { R1028 += 1, R986 += 1, R952 += 1, R927 += 1, R928 += 1 };
  s3 -> s4 [0, 65535] { R1028 += 1, R986 += 1, R952 += 1, R928 += 1, R3 += 1 };
  s4 -> s5 [0, 65535] { R1028 += 1, R986 += 1, R952 += 1 };
  s4 -> s6 [0, 65535] { R1028 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R1028 += 1, R986 += 1 };
  s4 -> s4 [0, 65535] { R1028 += 1, R986 += 1, R952 += 1, R928 += 1, R3 += 1 };
  s5 -> s5 [0, 65535] { R1028 += 1, R986 += 1, R952 += 1 };
  s5 -> s6 [0, 65535] { R1028 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R1028 += 1, R986 += 1 };
  s6 -> s6 [0, 65535] { R1028 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R1028 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R1028 += 1, R986 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 43] { R1030 += 1, R988 += 1, R954 += 1 };
  s0 -> s2 [0, 65535] { R1030 += 1, R987 += 1, R988 += 1 };
  s0 -> s0 [0, 65535] { R1029 += 1, R1030 += 1 };
  s0 -> s3 [0, 65535] { R1030 += 1, R988 += 1, R953 += 1, R954 += 1 };
  s0 -> s4 [44, 44] { R1030 += 1, R988 += 1, R954 += 1 };
  s0 -> s1 [45, 65535] { R1030 += 1, R988 += 1, R954 += 1 };
  s1 -> s1 [0, 43] { R1030 += 1, R988 += 1, R954 += 1 };
  s1 -> s4 [44, 44] { R1030 += 1, R988 += 1, R954 += 1 };
  s1 -> s1 [45, 65535] { R1030 += 1, R988 += 1, R954 += 1 };
  s2 -> s1 [0, 43] { R1030 += 1, R988 += 1, R954 += 1 };
  s2 -> s2 [0, 65535] { R1030 += 1, R987 += 1, R988 += 1 };
  s2 -> s3 [0, 65535] { R1030 += 1, R988 += 1, R953 += 1, R954 += 1 };
  s2 -> s4 [44, 44] { R1030 += 1, R988 += 1, R954 += 1 };
  s2 -> s1 [45, 65535] { R1030 += 1, R988 += 1, R954 += 1 };
  s3 -> s1 [0, 43] { R1030 += 1, R988 += 1, R954 += 1 };
  s3 -> s3 [0, 65535] { R1030 += 1, R988 += 1, R953 += 1, R954 += 1 };
  s3 -> s4 [44, 44] { R1030 += 1, R988 += 1, R954 += 1 };
  s3 -> s1 [45, 65535] { R1030 += 1, R988 += 1, R954 += 1 };
  s4 -> s4 [0, 65535] { R1030 += 1, R988 += 1, R954 += 1 };
  s4 -> s5 [0, 65535] { R1030 += 1 };
  s4 -> s6 [0, 65535] { R1030 += 1, R988 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R1030 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s5 [0, 65535] { R1030 += 1 };
  s6 -> s6 [0, 65535] { R1030 += 1, R988 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s4, s5, s6, s7;
};
automaton uri_15 {
  init s0;
  s0 -> s1 [0, 65535] { R1032 += 1, R990 += 1, R955 += 1, R956 += 1 };
  s0 -> s2 [0, 65535] { R1032 += 1, R989 += 1, R990 += 1 };
  s0 -> s3 [0, 65535] { R1032 += 1, R990 += 1, R956 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R1031 += 1, R1032 += 1 };
  s1 -> s4 [0, 65535] { R1032 += 1 };
  s1 -> s1 [0, 65535] { R1032 += 1, R990 += 1, R955 += 1, R956 += 1 };
  s1 -> s3 [0, 65535] { R1032 += 1, R990 += 1, R956 += 1, R4 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s1 [0, 65535] { R1032 += 1, R990 += 1, R955 += 1, R956 += 1 };
  s2 -> s2 [0, 65535] { R1032 += 1, R989 += 1, R990 += 1 };
  s2 -> s3 [0, 65535] { R1032 += 1, R990 += 1, R956 += 1, R4 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R1032 += 1 };
  s3 -> s5 [0, 65535] { R1032 += 1, R990 += 1 };
  s3 -> s3 [0, 65535] { R1032 += 1, R990 += 1, R956 += 1, R4 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R1032 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s4 [0, 65535] { R1032 += 1 };
  s5 -> s5 [0, 65535] { R1032 += 1, R990 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 43] { R1034 += 1, R992 += 1, R958 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R1033 += 1, R1034 += 1 };
  s0 -> s2 [0, 65535] { R1034 += 1, R991 += 1, R992 += 1 };
  s0 -> s3 [0, 65535] { R1034 += 1, R992 += 1, R957 += 1, R958 += 1 };
  s0 -> s4 [0, 65535] { R1034 += 1, R992 += 1, R958 += 1, R11 += 1, R12 += 1 };
  s0 -> s5 [44, 44] { R1034 += 1, R992 += 1, R958 += 1 };
  s0 -> s1 [45, 65535] { R1034 += 1, R992 += 1, R958 += 1, R12 += 1 };
  s1 -> s1 [0, 43] { R1034 += 1, R992 += 1, R958 += 1, R12 += 1 };
  s1 -> s5 [44, 44] { R1034 += 1, R992 += 1, R958 += 1 };
  s1 -> s1 [45, 65535] { R1034 += 1, R992 += 1, R958 += 1, R12 += 1 };
  s2 -> s1 [0, 43] { R1034 += 1, R992 += 1, R958 += 1, R12 += 1 };
  s2 -> s2 [0, 65535] { R1034 += 1, R991 += 1, R992 += 1 };
  s2 -> s3 [0, 65535] { R1034 += 1, R992 += 1, R957 += 1, R958 += 1 };
  s2 -> s4 [0, 65535] { R1034 += 1, R992 += 1, R958 += 1, R11 += 1, R12 += 1 };
  s2 -> s5 [44, 44] { R1034 += 1, R992 += 1, R958 += 1 };
  s2 -> s1 [45, 65535] { R1034 += 1, R992 += 1, R958 += 1, R12 += 1 };
  s3 -> s1 [0, 43] { R1034 += 1, R992 += 1, R958 += 1, R12 += 1 };
  s3 -> s3 [0, 65535] { R1034 += 1, R992 += 1, R957 += 1, R958 += 1 };
  s3 -> s4 [0, 65535] { R1034 += 1, R992 += 1, R958 += 1, R11 += 1, R12 += 1 };
  s3 -> s5 [44, 44] { R1034 += 1, R992 += 1, R958 += 1 };
  s3 -> s1 [45, 65535] { R1034 += 1, R992 += 1, R958 += 1, R12 += 1 };
  s4 -> s1 [0, 43] { R1034 += 1, R992 += 1, R958 += 1, R12 += 1 };
  s4 -> s4 [0, 65535] { R1034 += 1, R992 += 1, R958 += 1, R11 += 1, R12 += 1 };
  s4 -> s5 [44, 44] { R1034 += 1, R992 += 1, R958 += 1 };
  s4 -> s1 [45, 65535] { R1034 += 1, R992 += 1, R958 += 1, R12 += 1 };
  s5 -> s6 [0, 65535] { R1034 += 1 };
  s5 -> s7 [0, 65535] { R1034 += 1, R992 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R1034 += 1, R992 += 1, R958 += 1 };
  s6 -> s6 [0, 65535] { R1034 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s6 [0, 65535] { R1034 += 1 };
  s7 -> s7 [0, 65535] { R1034 += 1, R992 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton uri_17 {
  init s0;
  s0 -> s1 [0, 65535] { R1036 += 1, R994 += 1, R960 += 1 };
  s0 -> s2 [0, 65535] { R1036 += 1, R994 += 1, R959 += 1, R960 += 1 };
  s0 -> s3 [0, 65535] { R1036 += 1, R993 += 1, R994 += 1 };
  s0 -> s0 [0, 65535] { R1035 += 1, R1036 += 1 };
  s1 -> s1 [0, 65535] { R1036 += 1, R994 += 1, R960 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R1036 += 1 };
  s1 -> s6 [0, 65535] { R1036 += 1, R994 += 1 };
  s2 -> s1 [0, 65535] { R1036 += 1, R994 += 1, R960 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1036 += 1, R994 += 1, R959 += 1, R960 += 1 };
  s2 -> s5 [0, 65535] { R1036 += 1 };
  s3 -> s1 [0, 65535] { R1036 += 1, R994 += 1, R960 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R1036 += 1, R994 += 1, R959 += 1, R960 += 1 };
  s3 -> s3 [0, 65535] { R1036 += 1, R993 += 1, R994 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1036 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R1036 += 1 };
  s6 -> s6 [0, 65535] { R1036 += 1, R994 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 64] { R1038 += 1, R996 += 1, R962 += 1, R936 += 1 };
  s0 -> s0 [0, 65535] { R1037 += 1, R1038 += 1 };
  s0 -> s2 [0, 65535] { R1038 += 1, R995 += 1, R996 += 1 };
  s0 -> s3 [0, 65535] { R1038 += 1, R996 += 1, R962 += 1, R935 += 1, R936 += 1 };
  s0 -> s4 [0, 65535] { R1038 += 1, R996 += 1, R961 += 1, R962 += 1 };
  s0 -> s5 [85, 85] { R1038 += 1, R996 += 1, R962 += 1, R936 += 1 };
  s0 -> s1 [86, 65535] { R1038 += 1, R996 += 1, R962 += 1, R936 += 1 };
  s1 -> s1 [0, 64] { R1038 += 1, R996 += 1, R962 += 1, R936 += 1 };
  s1 -> s5 [85, 85] { R1038 += 1, R996 += 1, R962 += 1, R936 += 1 };
  s1 -> s1 [86, 65535] { R1038 += 1, R996 += 1, R962 += 1, R936 += 1 };
  s2 -> s1 [0, 64] { R1038 += 1, R996 += 1, R962 += 1, R936 += 1 };
  s2 -> s2 [0, 65535] { R1038 += 1, R995 += 1, R996 += 1 };
  s2 -> s3 [0, 65535] { R1038 += 1, R996 += 1, R962 += 1, R935 += 1, R936 += 1 };
  s2 -> s4 [0, 65535] { R1038 += 1, R996 += 1, R961 += 1, R962 += 1 };
  s2 -> s5 [85, 85] { R1038 += 1, R996 += 1, R962 += 1, R936 += 1 };
  s2 -> s1 [86, 65535] { R1038 += 1, R996 += 1, R962 += 1, R936 += 1 };
  s3 -> s1 [0, 64] { R1038 += 1, R996 += 1, R962 += 1, R936 += 1 };
  s3 -> s3 [0, 65535] { R1038 += 1, R996 += 1, R962 += 1, R935 += 1, R936 += 1 };
  s3 -> s5 [85, 85] { R1038 += 1, R996 += 1, R962 += 1, R936 += 1 };
  s3 -> s1 [86, 65535] { R1038 += 1, R996 += 1, R962 += 1, R936 += 1 };
  s4 -> s1 [0, 64] { R1038 += 1, R996 += 1, R962 += 1, R936 += 1 };
  s4 -> s3 [0, 65535] { R1038 += 1, R996 += 1, R962 += 1, R935 += 1, R936 += 1 };
  s4 -> s4 [0, 65535] { R1038 += 1, R996 += 1, R961 += 1, R962 += 1 };
  s4 -> s5 [85, 85] { R1038 += 1, R996 += 1, R962 += 1, R936 += 1 };
  s4 -> s1 [86, 65535] { R1038 += 1, R996 += 1, R962 += 1, R936 += 1 };
  s5 -> s5 [0, 64] { R1038 += 1, R996 += 1, R962 += 1, R936 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R1038 += 1, R996 += 1, R962 += 1 };
  s5 -> s7 [0, 65535] { R1038 += 1, R996 += 1 };
  s5 -> s8 [0, 65535] { R1038 += 1 };
  s5 -> s5 [85, 65535] { R1038 += 1, R996 += 1, R962 += 1, R936 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R1038 += 1, R996 += 1 };
  s7 -> s8 [0, 65535] { R1038 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R1038 += 1 };
  accepting s5, s6, s7, s8;
};
automaton uri_19 {
  init s0;
  s0 -> s1 [0, 65535] { R1040 += 1, R998 += 1, R964 += 1, R938 += 1, R0 += 1 };
  s0 -> s2 [0, 65535] { R1040 += 1, R998 += 1, R963 += 1, R964 += 1 };
  s0 -> s3 [0, 65535] { R1040 += 1, R997 += 1, R998 += 1 };
  s0 -> s4 [0, 65535] { R1040 += 1, R998 += 1, R964 += 1, R937 += 1, R938 += 1 };
  s0 -> s0 [0, 65535] { R1039 += 1, R1040 += 1 };
  s1 -> s1 [0, 65535] { R1040 += 1, R998 += 1, R964 += 1, R938 += 1, R0 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s8 [0, 65535] { R1040 += 1, R998 += 1, R964 += 1 };
  s1 -> s6 [0, 65535] { R1040 += 1, R998 += 1 };
  s1 -> s7 [0, 65535] { R1040 += 1 };
  s2 -> s1 [0, 65535] { R1040 += 1, R998 += 1, R964 += 1, R938 += 1, R0 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1040 += 1, R998 += 1, R963 += 1, R964 += 1 };
  s2 -> s7 [0, 65535] { R1040 += 1 };
  s2 -> s4 [0, 65535] { R1040 += 1, R998 += 1, R964 += 1, R937 += 1, R938 += 1 };
  s3 -> s1 [0, 65535] { R1040 += 1, R998 += 1, R964 += 1, R938 += 1, R0 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R1040 += 1, R998 += 1, R963 += 1, R964 += 1 };
  s3 -> s3 [0, 65535] { R1040 += 1, R997 += 1, R998 += 1 };
  s3 -> s4 [0, 65535] { R1040 += 1, R998 += 1, R964 += 1, R937 += 1, R938 += 1 };
  s4 -> s1 [0, 65535] { R1040 += 1, R998 += 1, R964 += 1, R938 += 1, R0 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1040 += 1, R998 += 1 };
  s4 -> s7 [0, 65535] { R1040 += 1 };
  s4 -> s4 [0, 65535] { R1040 += 1, R998 += 1, R964 += 1, R937 += 1, R938 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1040 += 1, R998 += 1 };
  s6 -> s7 [0, 65535] { R1040 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R1040 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s8 [0, 65535] { R1040 += 1, R998 += 1, R964 += 1 };
  s8 -> s6 [0, 65535] { R1040 += 1, R998 += 1 };
  s8 -> s7 [0, 65535] { R1040 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 57] { R1042 += 1, R1000 += 1, R966 += 1, R940 += 1 };
  s0 -> s2 [0, 65535] { R1042 += 1, R1000 += 1, R966 += 1, R940 += 1, R9 += 1 };
  s0 -> s3 [0, 65535] { R1042 += 1, R1000 += 1, R966 += 1, R939 += 1, R940 += 1 };
  s0 -> s0 [0, 65535] { R1041 += 1, R1042 += 1 };
  s0 -> s4 [0, 65535] { R1042 += 1, R999 += 1, R1000 += 1 };
  s0 -> s5 [0, 65535] { R1042 += 1, R1000 += 1, R965 += 1, R966 += 1 };
  s0 -> s6 [58, 58] { R1042 += 1, R1000 += 1, R966 += 1, R940 += 1 };
  s0 -> s1 [59, 65535] { R1042 += 1, R1000 += 1, R966 += 1, R940 += 1 };
  s1 -> s1 [0, 57] { R1042 += 1, R1000 += 1, R966 += 1, R940 += 1 };
  s1 -> s1 [0, 65535] { R1042 += 1, R1000 += 1, R966 += 1 };
  s1 -> s9 [0, 65535] { R1042 += 1, R1000 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s8 [0, 65535] { R1042 += 1 };
  s1 -> s6 [58, 58] { R1042 += 1, R1000 += 1, R966 += 1, R940 += 1 };
  s1 -> s1 [59, 65535] { R1042 += 1, R1000 += 1, R966 += 1, R940 += 1 };
  s2 -> s1 [0, 57] { R1042 += 1, R1000 += 1, R966 += 1, R940 += 1 };
  s2 -> s2 [0, 65535] { R1042 += 1, R1000 += 1, R966 += 1, R940 += 1, R9 += 1 };
  s2 -> s10 [0, 65535] { R1042 += 1, R1000 += 1, R966 += 1 };
  s2 -> s9 [0, 65535] { R1042 += 1, R1000 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s8 [0, 65535] { R1042 += 1 };
  s2 -> s6 [58, 58] { R1042 += 1, R1000 += 1, R966 += 1, R940 += 1 };
  s2 -> s1 [59, 65535] { R1042 += 1, R1000 += 1, R966 += 1, R940 += 1 };
  s3 -> s1 [0, 57] { R1042 += 1, R1000 += 1, R966 += 1, R940 += 1 };
  s3 -> s2 [0, 65535] { R1042 += 1, R1000 += 1, R966 += 1, R940 += 1, R9 += 1 };
  s3 -> s3 [0, 65535] { R1042 += 1, R1000 += 1, R966 += 1, R939 += 1, R940 += 1 };
  s3 -> s9 [0, 65535] { R1042 += 1, R1000 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s8 [0, 65535] { R1042 += 1 };
  s3 -> s6 [58, 58] { R1042 += 1, R1000 += 1, R966 += 1, R940 += 1 };
  s3 -> s1 [59, 65535] { R1042 += 1, R1000 += 1, R966 += 1, R940 += 1 };
  s4 -> s1 [0, 57] { R1042 += 1, R1000 += 1, R966 += 1, R940 += 1 };
  s4 -> s2 [0, 65535] { R1042 += 1, R1000 += 1, R966 += 1, R940 += 1, R9 += 1 };
  s4 -> s3 [0, 65535] { R1042 += 1, R1000 += 1, R966 += 1, R939 += 1, R940 += 1 };
  s4 -> s4 [0, 65535] { R1042 += 1, R999 += 1, R1000 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s5 [0, 65535] { R1042 += 1, R1000 += 1, R965 += 1, R966 += 1 };
  s4 -> s6 [58, 58] { R1042 += 1, R1000 += 1, R966 += 1, R940 += 1 };
  s4 -> s1 [59, 65535] { R1042 += 1, R1000 += 1, R966 += 1, R940 += 1 };
  s5 -> s1 [0, 57] { R1042 += 1, R1000 += 1, R966 += 1, R940 += 1 };
  s5 -> s2 [0, 65535] { R1042 += 1, R1000 += 1, R966 += 1, R940 += 1, R9 += 1 };
  s5 -> s3 [0, 65535] { R1042 += 1, R1000 += 1, R966 += 1, R939 += 1, R940 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R1042 += 1, R1000 += 1, R965 += 1, R966 += 1 };
  s5 -> s8 [0, 65535] { R1042 += 1 };
  s5 -> s6 [58, 58] { R1042 += 1, R1000 += 1, R966 += 1, R940 += 1 };
  s5 -> s1 [59, 65535] { R1042 += 1, R1000 += 1, R966 += 1, R940 += 1 };
  s6 -> s6 [0, 65535] { R1042 += 1, R1000 += 1, R966 += 1, R940 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R1042 += 1 };
  s9 -> s9 [0, 65535] { R1042 += 1, R1000 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s8 [0, 65535] { R1042 += 1 };
  s10 -> s10 [0, 65535] { R1042 += 1, R1000 += 1, R966 += 1 };
  s10 -> s9 [0, 65535] { R1042 += 1, R1000 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s8 [0, 65535] { R1042 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s1, s7, s0, s10;
};
automaton uri_21 {
  init s0;
  s0 -> s1 [0, 90] { R1044 += 1, R1002 += 1, R968 += 1, R942 += 1, R922 += 1 };
  s0 -> s2 [0, 65535] { R1044 += 1, R1001 += 1, R1002 += 1 };
  s0 -> s3 [0, 65535] { R1044 += 1, R1002 += 1, R968 += 1, R941 += 1, R942 += 1 };
  s0 -> s4 [0, 65535] { R1044 += 1, R1002 += 1, R968 += 1, R942 += 1, R921 += 1, R922 += 1 };
  s0 -> s0 [0, 65535] { R1043 += 1, R1044 += 1 };
  s0 -> s5 [0, 65535] { R1044 += 1, R1002 += 1, R967 += 1, R968 += 1 };
  s0 -> s6 [91, 91] { R1044 += 1, R1002 += 1, R968 += 1, R942 += 1, R922 += 1 };
  s0 -> s1 [92, 65535] { R1044 += 1, R1002 += 1, R968 += 1, R942 += 1, R922 += 1 };
  s1 -> s1 [0, 65535] { R1044 += 1, R1002 += 1, R968 += 1, R942 += 1, R922 += 1 };
  s1 -> s11 [0, 65535] { R1044 += 1, R1002 += 1, R968 += 1, R942 += 1 };
  s1 -> s7 [0, 65535] { R1044 += 1 };
  s1 -> s9 [0, 65535] { R1044 += 1, R1002 += 1, R968 += 1 };
  s1 -> s10 [0, 65535] { R1044 += 1, R1002 += 1 };
  s1 -> s8 [0, 65535];
  s2 -> s1 [0, 90] { R1044 += 1, R1002 += 1, R968 += 1, R942 += 1, R922 += 1 };
  s2 -> s2 [0, 65535] { R1044 += 1, R1001 += 1, R1002 += 1 };
  s2 -> s3 [0, 65535] { R1044 += 1, R1002 += 1, R968 += 1, R941 += 1, R942 += 1 };
  s2 -> s4 [0, 65535] { R1044 += 1, R1002 += 1, R968 += 1, R942 += 1, R921 += 1, R922 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s5 [0, 65535] { R1044 += 1, R1002 += 1, R967 += 1, R968 += 1 };
  s2 -> s6 [91, 91] { R1044 += 1, R1002 += 1, R968 += 1, R942 += 1, R922 += 1 };
  s2 -> s1 [92, 65535] { R1044 += 1, R1002 += 1, R968 += 1, R942 += 1, R922 += 1 };
  s3 -> s1 [0, 90] { R1044 += 1, R1002 += 1, R968 += 1, R942 += 1, R922 += 1 };
  s3 -> s3 [0, 65535] { R1044 += 1, R1002 += 1, R968 += 1, R941 += 1, R942 += 1 };
  s3 -> s4 [0, 65535] { R1044 += 1, R1002 += 1, R968 += 1, R942 += 1, R921 += 1, R922 += 1 };
  s3 -> s7 [0, 65535] { R1044 += 1 };
  s3 -> s10 [0, 65535] { R1044 += 1, R1002 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s6 [91, 91] { R1044 += 1, R1002 += 1, R968 += 1, R942 += 1, R922 += 1 };
  s3 -> s1 [92, 65535] { R1044 += 1, R1002 += 1, R968 += 1, R942 += 1, R922 += 1 };
  s4 -> s1 [0, 90] { R1044 += 1, R1002 += 1, R968 += 1, R942 += 1, R922 += 1 };
  s4 -> s4 [0, 65535] { R1044 += 1, R1002 += 1, R968 += 1, R942 += 1, R921 += 1, R922 += 1 };
  s4 -> s7 [0, 65535] { R1044 += 1 };
  s4 -> s9 [0, 65535] { R1044 += 1, R1002 += 1, R968 += 1 };
  s4 -> s10 [0, 65535] { R1044 += 1, R1002 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s6 [91, 91] { R1044 += 1, R1002 += 1, R968 += 1, R942 += 1, R922 += 1 };
  s4 -> s1 [92, 65535] { R1044 += 1, R1002 += 1, R968 += 1, R942 += 1, R922 += 1 };
  s5 -> s1 [0, 90] { R1044 += 1, R1002 += 1, R968 += 1, R942 += 1, R922 += 1 };
  s5 -> s3 [0, 65535] { R1044 += 1, R1002 += 1, R968 += 1, R941 += 1, R942 += 1 };
  s5 -> s4 [0, 65535] { R1044 += 1, R1002 += 1, R968 += 1, R942 += 1, R921 += 1, R922 += 1 };
  s5 -> s7 [0, 65535] { R1044 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R1044 += 1, R1002 += 1, R967 += 1, R968 += 1 };
  s5 -> s6 [91, 91] { R1044 += 1, R1002 += 1, R968 += 1, R942 += 1, R922 += 1 };
  s5 -> s1 [92, 65535] { R1044 += 1, R1002 += 1, R968 += 1, R942 += 1, R922 += 1 };
  s6 -> s1 [0, 65535] { R1044 += 1, R1002 += 1, R968 += 1, R942 += 1, R922 += 1 };
  s7 -> s7 [0, 65535] { R1044 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s7 [0, 65535] { R1044 += 1 };
  s9 -> s9 [0, 65535] { R1044 += 1, R1002 += 1, R968 += 1 };
  s9 -> s10 [0, 65535] { R1044 += 1, R1002 += 1 };
  s9 -> s8 [0, 65535];
  s10 -> s7 [0, 65535] { R1044 += 1 };
  s10 -> s10 [0, 65535] { R1044 += 1, R1002 += 1 };
  s10 -> s8 [0, 65535];
  s11 -> s11 [0, 65535] { R1044 += 1, R1002 += 1, R968 += 1, R942 += 1 };
  s11 -> s7 [0, 65535] { R1044 += 1 };
  s11 -> s9 [0, 65535] { R1044 += 1, R1002 += 1, R968 += 1 };
  s11 -> s10 [0, 65535] { R1044 += 1, R1002 += 1 };
  s11 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s1, s7, s0, s10, s11;
};
automaton uri_22 {
  init s0;
  s0 -> s0 [0, 65535] { R1045 += 1, R1046 += 1 };
  s0 -> s1 [0, 65535] { R1046 += 1, R1004 += 1, R970 += 1, R943 += 1, R944 += 1 };
  s0 -> s2 [0, 65535] { R1046 += 1, R1004 += 1, R970 += 1, R944 += 1, R924 += 1, R8 += 1 };
  s0 -> s3 [0, 65535] { R1046 += 1, R1004 += 1, R969 += 1, R970 += 1 };
  s0 -> s4 [0, 65535] { R1046 += 1, R1004 += 1, R970 += 1, R944 += 1, R923 += 1, R924 += 1 };
  s0 -> s5 [0, 65535] { R1046 += 1, R1003 += 1, R1004 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R1046 += 1, R1004 += 1, R970 += 1, R943 += 1, R944 += 1 };
  s1 -> s2 [0, 65535] { R1046 += 1, R1004 += 1, R970 += 1, R944 += 1, R924 += 1, R8 += 1 };
  s1 -> s8 [0, 65535] { R1046 += 1 };
  s1 -> s9 [0, 65535] { R1046 += 1, R1004 += 1 };
  s1 -> s4 [0, 65535] { R1046 += 1, R1004 += 1, R970 += 1, R944 += 1, R923 += 1, R924 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R1046 += 1, R1004 += 1, R970 += 1 };
  s2 -> s2 [0, 65535] { R1046 += 1, R1004 += 1, R970 += 1, R944 += 1, R924 += 1, R8 += 1 };
  s2 -> s8 [0, 65535] { R1046 += 1 };
  s2 -> s10 [0, 65535] { R1046 += 1, R1004 += 1, R970 += 1, R944 += 1 };
  s2 -> s9 [0, 65535] { R1046 += 1, R1004 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [0, 65535] { R1046 += 1, R1004 += 1, R970 += 1, R943 += 1, R944 += 1 };
  s3 -> s2 [0, 65535] { R1046 += 1, R1004 += 1, R970 += 1, R944 += 1, R924 += 1, R8 += 1 };
  s3 -> s8 [0, 65535] { R1046 += 1 };
  s3 -> s3 [0, 65535] { R1046 += 1, R1004 += 1, R969 += 1, R970 += 1 };
  s3 -> s4 [0, 65535] { R1046 += 1, R1004 += 1, R970 += 1, R944 += 1, R923 += 1, R924 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R1046 += 1, R1004 += 1, R970 += 1 };
  s4 -> s2 [0, 65535] { R1046 += 1, R1004 += 1, R970 += 1, R944 += 1, R924 += 1, R8 += 1 };
  s4 -> s8 [0, 65535] { R1046 += 1 };
  s4 -> s9 [0, 65535] { R1046 += 1, R1004 += 1 };
  s4 -> s4 [0, 65535] { R1046 += 1, R1004 += 1, R970 += 1, R944 += 1, R923 += 1, R924 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s1 [0, 65535] { R1046 += 1, R1004 += 1, R970 += 1, R943 += 1, R944 += 1 };
  s5 -> s2 [0, 65535] { R1046 += 1, R1004 += 1, R970 += 1, R944 += 1, R924 += 1, R8 += 1 };
  s5 -> s3 [0, 65535] { R1046 += 1, R1004 += 1, R969 += 1, R970 += 1 };
  s5 -> s4 [0, 65535] { R1046 += 1, R1004 += 1, R970 += 1, R944 += 1, R923 += 1, R924 += 1 };
  s5 -> s5 [0, 65535] { R1046 += 1, R1003 += 1, R1004 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R1046 += 1, R1004 += 1, R970 += 1 };
  s7 -> s8 [0, 65535] { R1046 += 1 };
  s7 -> s9 [0, 65535] { R1046 += 1, R1004 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R1046 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s8 [0, 65535] { R1046 += 1 };
  s9 -> s9 [0, 65535] { R1046 += 1, R1004 += 1 };
  s10 -> s6 [0, 65535];
  s10 -> s7 [0, 65535] { R1046 += 1, R1004 += 1, R970 += 1 };
  s10 -> s8 [0, 65535] { R1046 += 1 };
  s10 -> s10 [0, 65535] { R1046 += 1, R1004 += 1, R970 += 1, R944 += 1 };
  s10 -> s9 [0, 65535] { R1046 += 1, R1004 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
};
constraint R4 - R944 = 1 && R5 = R970 && R6 = R934 && R7 = R1046 && R11 = 0 && R12 = R944 && R531 = 0 && R791 = 0 && R792 = R1004 && R925 = 0 && R927 = 0 && R929 = 0 && R930 = 36 && R931 = 0 && R932 = 36 && R933 - R1004 = 1 && R935 = 0 && R936 = R944 && R937 = 0 && R938 = R944 && R939 = 0 && R940 = R944 && R941 = 0 && R942 = R944 && R943 = 0 && R945 = 5 && R946 = R970 && R947 = 5 && R948 = R970 && R949 = 5 && R950 = R970 && R951 = 5 && R952 = R970 && R953 = 37 && R954 = R970 && R955 = 37 && R956 = R970 && R957 = 37 && R958 = R970 && R959 = 37 && R960 = R970 && R961 = 37 && R962 = R970 && R963 = 37 && R964 = R970 && R965 = 37 && R966 = R970 && R967 = 37 && R968 = R970 && R969 = 37 && R971 = 0 && R972 = R1004 && R973 = 0 && R974 = R1004 && R975 = 0 && R976 = R1004 && R977 = 0 && R978 = R1004 && R979 = 0 && R980 = R1004 && R981 = 0 && R982 = R1004 && R983 = 0 && R984 = R1004 && R985 = 0 && R986 = R1004 && R987 = 0 && R988 = R1004 && R989 = 0 && R990 = R1004 && R991 = 0 && R992 = R1004 && R993 = 0 && R994 = R1004 && R995 = 0 && R996 = R1004 && R997 = 0 && R998 = R1004 && R999 = 0 && R1000 = R1004 && R1001 = 0 && R1002 = R1004 && R1003 = 0 && R1005 = 10 && R1006 = R1046 && R1007 = 10 && R1008 = R1046 && R1009 = 10 && R1010 = R1046 && R1011 = 10 && R1012 = R1046 && R1013 = 10 && R1014 = R1046 && R1015 = 10 && R1016 = R1046 && R1017 = 10 && R1018 = R1046 && R1019 = 10 && R1020 = R1046 && R1021 = 10 && R1022 = R1046 && R1023 = 10 && R1024 = R1046 && R1025 = 10 && R1026 = R1046 && R1027 = 10 && R1028 = R1046 && R1029 = 10 && R1030 = R1046 && R1031 = 10 && R1032 = R1046 && R1033 = 10 && R1034 = R1046 && R1035 = 10 && R1036 = R1046 && R1037 = 10 && R1038 = R1046 && R1039 = 10 && R1040 = R1046 && R1041 = 10 && R1042 = R1046 && R1043 = 10 && R1044 = R1046 && R1045 = 10 && R0 != 0 && R1 != 0 && R2 != 0 && R3 != 0 && R9 < 1 && R926 - R532 < 1 && R928 - R532 < 1 && -1 < R532 && R926 - R920 < 1 && R928 - R920 < 1 && R1004 < R934 && -1 < R944 && 36 < R970 && -1 < R1004 && 9 < R1046 && (R921 != 0 || ((R8 != 0 || ((R0 != R922 || R922 = 1 || R922 < 0) && (R0 = R922 || R922 = 1 || R0 < 1))) && (R8 = 0 || ((R0 != R922 || R922 = 1 || R922 < 0) && (R922 != 1 || -1 < R0) && (R0 = R922 || R922 = 1))))) && (R923 != 0 || ((R8 != 0 || ((R0 != R924 || R924 = 1 || R924 < 0) && (R0 = R924 || R924 = 1 || R0 < 1))) && (R8 = 0 || ((R0 != R924 || R924 = 1 || R924 < 0) && (R924 != 1 || -1 < R0) && (R0 = R924 || R924 = 1))))) && (R921 = 0 || (R8 = 0 && R0 < 0)) && (R923 = 0 || (R8 = 0 && R0 < 0)) && (R532 - R926 < 1 || R920 - R926 < 1) && (R532 - R928 < 1 || R920 - R928 < 1);
// End of Parikh automata intersection problem
