// Parikh automata intersection problem, generated by OSTRICH+
counter int R0, R1, R10, R11, R11847, R11848, R11849, R11850, R11851, R11852, R11853, R11854, R11855, R11856, R11857, R11858, R11859, R11860, R11861, R11862, R11863, R11864, R11865, R11866, R11867, R11868, R11869, R11870, R11871, R11872, R11873, R11874, R11875, R11876, R11877, R11878, R11879, R11880, R11881, R11882, R11883, R11884, R11885, R11886, R11887, R11888, R11889, R11890, R11891, R11892, R11893, R11894, R11895, R11896, R11897, R11898, R11899, R11900, R11901, R11902, R11903, R11904, R11905, R11906, R11907, R11908, R11909, R11910, R11911, R11912, R11913, R11914, R11915, R11916, R11917, R11918, R11919, R11920, R11921, R11922, R11923, R11924, R11925, R11926, R11927, R11928, R11929, R11930, R11931, R11932, R11933, R11934, R11935, R11936, R11937, R11938, R11939, R11940, R11941, R11942, R11943, R11944, R11945, R11946, R11947, R11948, R11949, R11950, R11951, R11952, R11953, R11954, R11955, R11956, R11957, R11958, R15, R16, R2, R3, R4, R5, R5988, R5989, R5990, R5991, R5992, R5993, R5994, R5995, R5996, R5997, R5998, R6, R7;
synchronised {  // Automata constraining P59
automaton P59_0 {
  init s0;
  s0 -> s1 [120, 120];
  accepting s1;
};
};
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R4 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 45] { R11914 += 1 };
  s0 -> s0 [0, 65535] { R11913 += 1, R11914 += 1 };
  s0 -> s2 [46, 46] { R11914 += 1 };
  s0 -> s3 [47, 47] { R11914 += 1 };
  s0 -> s1 [48, 65535] { R11914 += 1 };
  s1 -> s1 [0, 45] { R11914 += 1 };
  s1 -> s2 [46, 46] { R11914 += 1 };
  s1 -> s3 [47, 47] { R11914 += 1 };
  s1 -> s1 [48, 65535] { R11914 += 1 };
  s2 -> s1 [0, 45] { R11914 += 1 };
  s2 -> s2 [46, 46] { R11914 += 1 };
  s2 -> s3 [47, 47] { R11914 += 1 };
  s2 -> s1 [48, 114] { R11914 += 1 };
  s2 -> s8 [115, 115] { R11914 += 1 };
  s2 -> s1 [116, 65535] { R11914 += 1 };
  s3 -> s3 [0, 45] { R11914 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s4 [46, 46] { R11914 += 1 };
  s3 -> s3 [47, 65535] { R11914 += 1 };
  s4 -> s3 [0, 45] { R11914 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s4 [46, 46] { R11914 += 1 };
  s4 -> s3 [47, 114] { R11914 += 1 };
  s4 -> s5 [115, 115] { R11914 += 1 };
  s4 -> s3 [116, 65535] { R11914 += 1 };
  s5 -> s3 [0, 45] { R11914 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s4 [46, 46] { R11914 += 1 };
  s5 -> s3 [47, 110] { R11914 += 1 };
  s5 -> s6 [111, 111] { R11914 += 1 };
  s5 -> s3 [112, 65535] { R11914 += 1 };
  s6 -> s3 [0, 45] { R11914 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s4 [46, 46] { R11914 += 1 };
  s6 -> s3 [47, 98] { R11914 += 1 };
  s6 -> s7 [99, 99] { R11914 += 1 };
  s6 -> s3 [100, 65535] { R11914 += 1 };
  s7 -> s3 [0, 45] { R11914 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s4 [46, 46] { R11914 += 1 };
  s7 -> s3 [47, 106] { R11914 += 1 };
  s7 -> s3 [108, 65535] { R11914 += 1 };
  s8 -> s1 [0, 45] { R11914 += 1 };
  s8 -> s2 [46, 46] { R11914 += 1 };
  s8 -> s3 [47, 47] { R11914 += 1 };
  s8 -> s1 [48, 110] { R11914 += 1 };
  s8 -> s9 [111, 111] { R11914 += 1 };
  s8 -> s1 [112, 65535] { R11914 += 1 };
  s9 -> s1 [0, 45] { R11914 += 1 };
  s9 -> s2 [46, 46] { R11914 += 1 };
  s9 -> s3 [47, 47] { R11914 += 1 };
  s9 -> s1 [48, 98] { R11914 += 1 };
  s9 -> s10 [99, 99] { R11914 += 1 };
  s9 -> s1 [100, 65535] { R11914 += 1 };
  s10 -> s1 [0, 45] { R11914 += 1 };
  s10 -> s2 [46, 46] { R11914 += 1 };
  s10 -> s3 [47, 47] { R11914 += 1 };
  s10 -> s1 [48, 106] { R11914 += 1 };
  s10 -> s1 [108, 65535] { R11914 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_3 {
  init s0;
  s0 -> s0 [0, 65535] { R11915 += 1, R11916 += 1 };
  s0 -> s1 [0, 65535] { R11916 += 1, R3 += 1 };
  s1 -> s1 [0, 65535] { R11916 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s1 [0, 46] { R11918 += 1, R16 += 1 };
  s0 -> s2 [0, 65535] { R11918 += 1, R15 += 1, R16 += 1 };
  s0 -> s0 [0, 65535] { R11917 += 1, R11918 += 1 };
  s0 -> s3 [47, 47] { R11918 += 1 };
  s0 -> s1 [48, 65535] { R11918 += 1, R16 += 1 };
  s1 -> s1 [0, 46] { R11918 += 1, R16 += 1 };
  s1 -> s3 [47, 47] { R11918 += 1 };
  s1 -> s1 [48, 65535] { R11918 += 1, R16 += 1 };
  s2 -> s1 [0, 46] { R11918 += 1, R16 += 1 };
  s2 -> s2 [0, 65535] { R11918 += 1, R15 += 1, R16 += 1 };
  s2 -> s3 [47, 47] { R11918 += 1 };
  s2 -> s1 [48, 65535] { R11918 += 1, R16 += 1 };
  s3 -> s3 [0, 65535] { R11918 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 36] { R11920 += 1, R11848 += 1 };
  s0 -> s2 [0, 65535] { R11920 += 1, R11847 += 1, R11848 += 1 };
  s0 -> s0 [0, 65535] { R11919 += 1, R11920 += 1 };
  s0 -> s1 [38, 42] { R11920 += 1, R11848 += 1 };
  s0 -> s1 [44, 45] { R11920 += 1, R11848 += 1 };
  s0 -> s1 [47, 62] { R11920 += 1, R11848 += 1 };
  s0 -> s1 [64, 65535] { R11920 += 1, R11848 += 1 };
  s1 -> s1 [0, 36] { R11920 += 1, R11848 += 1 };
  s1 -> s1 [0, 65535] { R11920 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [38, 42] { R11920 += 1, R11848 += 1 };
  s1 -> s1 [44, 45] { R11920 += 1, R11848 += 1 };
  s1 -> s1 [47, 62] { R11920 += 1, R11848 += 1 };
  s1 -> s1 [64, 65535] { R11920 += 1, R11848 += 1 };
  s2 -> s1 [0, 36] { R11920 += 1, R11848 += 1 };
  s2 -> s2 [0, 65535] { R11920 += 1, R11847 += 1, R11848 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [38, 42] { R11920 += 1, R11848 += 1 };
  s2 -> s1 [44, 45] { R11920 += 1, R11848 += 1 };
  s2 -> s1 [47, 62] { R11920 += 1, R11848 += 1 };
  s2 -> s1 [64, 65535] { R11920 += 1, R11848 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_6 {
  init s0;
  s0 -> s1 [0, 65535] { R11922 += 1, R11849 += 1, R11850 += 1 };
  s0 -> s2 [0, 65535] { R11922 += 1, R11850 += 1, R0 += 1 };
  s0 -> s0 [0, 65535] { R11921 += 1, R11922 += 1 };
  s1 -> s1 [0, 65535] { R11922 += 1, R11849 += 1, R11850 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R11922 += 1, R11850 += 1, R0 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R11922 += 1 };
  s2 -> s2 [0, 65535] { R11922 += 1, R11850 += 1, R0 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R11922 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_7 {
  init s0;
  s0 -> s1 [0, 62] { R11924 += 1, R11852 += 1, R5992 += 1 };
  s0 -> s0 [0, 65535] { R11923 += 1, R11924 += 1 };
  s0 -> s2 [0, 65535] { R11924 += 1, R11852 += 1, R5991 += 1, R5992 += 1 };
  s0 -> s3 [0, 65535] { R11924 += 1, R11851 += 1, R11852 += 1 };
  s0 -> s4 [63, 63] { R11924 += 1, R11852 += 1, R5992 += 1 };
  s0 -> s1 [64, 65535] { R11924 += 1, R11852 += 1, R5992 += 1 };
  s1 -> s7 [0, 65535] { R11924 += 1, R11852 += 1 };
  s1 -> s6 [0, 65535] { R11924 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R11924 += 1, R11852 += 1, R5992 += 1 };
  s2 -> s1 [0, 62] { R11924 += 1, R11852 += 1, R5992 += 1 };
  s2 -> s6 [0, 65535] { R11924 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R11924 += 1, R11852 += 1, R5991 += 1, R5992 += 1 };
  s2 -> s4 [63, 63] { R11924 += 1, R11852 += 1, R5992 += 1 };
  s2 -> s1 [64, 65535] { R11924 += 1, R11852 += 1, R5992 += 1 };
  s3 -> s1 [0, 62] { R11924 += 1, R11852 += 1, R5992 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R11924 += 1, R11852 += 1, R5991 += 1, R5992 += 1 };
  s3 -> s3 [0, 65535] { R11924 += 1, R11851 += 1, R11852 += 1 };
  s3 -> s4 [63, 63] { R11924 += 1, R11852 += 1, R5992 += 1 };
  s3 -> s1 [64, 65535] { R11924 += 1, R11852 += 1, R5992 += 1 };
  s4 -> s1 [0, 65535] { R11924 += 1, R11852 += 1, R5992 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11924 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R11924 += 1, R11852 += 1 };
  s7 -> s6 [0, 65535] { R11924 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s5, s2, s6, s1, s7, s0;
};
automaton uri_8 {
  init s0;
  s0 -> s0 [0, 65535] { R11925 += 1, R11926 += 1 };
  s0 -> s1 [0, 65535] { R11926 += 1, R11854 += 1, R5994 += 1, R5 += 1 };
  s0 -> s2 [0, 65535] { R11926 += 1, R11853 += 1, R11854 += 1 };
  s0 -> s3 [0, 65535] { R11926 += 1, R11854 += 1, R5993 += 1, R5994 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R11926 += 1 };
  s1 -> s1 [0, 65535] { R11926 += 1, R11854 += 1, R5994 += 1, R5 += 1 };
  s1 -> s6 [0, 65535] { R11926 += 1, R11854 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R11926 += 1, R11854 += 1, R5994 += 1, R5 += 1 };
  s2 -> s2 [0, 65535] { R11926 += 1, R11853 += 1, R11854 += 1 };
  s2 -> s3 [0, 65535] { R11926 += 1, R11854 += 1, R5993 += 1, R5994 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R11926 += 1 };
  s3 -> s1 [0, 65535] { R11926 += 1, R11854 += 1, R5994 += 1, R5 += 1 };
  s3 -> s3 [0, 65535] { R11926 += 1, R11854 += 1, R5993 += 1, R5994 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R11926 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R11926 += 1 };
  s6 -> s6 [0, 65535] { R11926 += 1, R11854 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_9 {
  init s0;
  s0 -> s1 [0, 43] { R11928 += 1, R11882 += 1 };
  s0 -> s0 [0, 65535] { R11927 += 1, R11928 += 1 };
  s0 -> s2 [0, 65535] { R11928 += 1, R11881 += 1, R11882 += 1 };
  s0 -> s1 [45, 63] { R11928 += 1, R11882 += 1 };
  s0 -> s3 [88, 88] { R11928 += 1, R11882 += 1 };
  s0 -> s1 [89, 65535] { R11928 += 1, R11882 += 1 };
  s1 -> s1 [0, 43] { R11928 += 1, R11882 += 1 };
  s1 -> s1 [45, 63] { R11928 += 1, R11882 += 1 };
  s1 -> s3 [88, 88] { R11928 += 1, R11882 += 1 };
  s1 -> s1 [89, 65535] { R11928 += 1, R11882 += 1 };
  s2 -> s1 [0, 43] { R11928 += 1, R11882 += 1 };
  s2 -> s2 [0, 65535] { R11928 += 1, R11881 += 1, R11882 += 1 };
  s2 -> s1 [45, 63] { R11928 += 1, R11882 += 1 };
  s2 -> s3 [88, 88] { R11928 += 1, R11882 += 1 };
  s2 -> s1 [89, 65535] { R11928 += 1, R11882 += 1 };
  s3 -> s3 [0, 43] { R11928 += 1, R11882 += 1 };
  s3 -> s3 [0, 65535] { R11928 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [45, 63] { R11928 += 1, R11882 += 1 };
  s3 -> s3 [88, 65535] { R11928 += 1, R11882 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton uri_10 {
  init s0;
  s0 -> s1 [0, 65535] { R11930 += 1, R11883 += 1, R11884 += 1 };
  s0 -> s2 [0, 65535] { R11930 += 1, R11884 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R11929 += 1, R11930 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R11930 += 1, R11883 += 1, R11884 += 1 };
  s1 -> s2 [0, 65535] { R11930 += 1, R11884 += 1, R2 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R11930 += 1 };
  s2 -> s2 [0, 65535] { R11930 += 1, R11884 += 1, R2 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R11930 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_11 {
  init s0;
  s0 -> s1 [0, 57] { R11932 += 1, R11886 += 1 };
  s0 -> s2 [0, 65535] { R11932 += 1, R11886 += 1, R10 += 1 };
  s0 -> s3 [0, 65535] { R11932 += 1, R11885 += 1, R11886 += 1 };
  s0 -> s0 [0, 65535] { R11931 += 1, R11932 += 1 };
  s0 -> s4 [58, 58] { R11932 += 1, R11886 += 1 };
  s0 -> s1 [59, 65535] { R11932 += 1, R11886 += 1 };
  s1 -> s1 [0, 57] { R11932 += 1, R11886 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R11932 += 1 };
  s1 -> s4 [58, 58] { R11932 += 1, R11886 += 1 };
  s1 -> s1 [59, 65535] { R11932 += 1, R11886 += 1 };
  s2 -> s1 [0, 57] { R11932 += 1, R11886 += 1 };
  s2 -> s6 [0, 65535] { R11932 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R11932 += 1, R11886 += 1, R10 += 1 };
  s2 -> s4 [58, 58] { R11932 += 1, R11886 += 1 };
  s2 -> s1 [59, 65535] { R11932 += 1, R11886 += 1 };
  s3 -> s1 [0, 57] { R11932 += 1, R11886 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R11932 += 1, R11886 += 1, R10 += 1 };
  s3 -> s3 [0, 65535] { R11932 += 1, R11885 += 1, R11886 += 1 };
  s3 -> s4 [58, 58] { R11932 += 1, R11886 += 1 };
  s3 -> s1 [59, 65535] { R11932 += 1, R11886 += 1 };
  s4 -> s4 [0, 65535] { R11932 += 1, R11886 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11932 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s5, s2, s6, s1, s0;
};
automaton uri_12 {
  init s0;
  s0 -> s1 [0, 87] { R11934 += 1, R11888 += 1 };
  s0 -> s2 [0, 65535] { R11934 += 1, R11887 += 1, R11888 += 1 };
  s0 -> s3 [0, 65535] { R11934 += 1, R11888 += 1, R11 += 1 };
  s0 -> s0 [0, 65535] { R11933 += 1, R11934 += 1 };
  s0 -> s4 [88, 88] { R11934 += 1, R11888 += 1 };
  s0 -> s1 [89, 65535] { R11934 += 1, R11888 += 1 };
  s1 -> s1 [0, 87] { R11934 += 1, R11888 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R11934 += 1 };
  s1 -> s4 [88, 88] { R11934 += 1, R11888 += 1 };
  s1 -> s1 [89, 65535] { R11934 += 1, R11888 += 1 };
  s2 -> s1 [0, 87] { R11934 += 1, R11888 += 1 };
  s2 -> s2 [0, 65535] { R11934 += 1, R11887 += 1, R11888 += 1 };
  s2 -> s3 [0, 65535] { R11934 += 1, R11888 += 1, R11 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s4 [88, 88] { R11934 += 1, R11888 += 1 };
  s2 -> s1 [89, 65535] { R11934 += 1, R11888 += 1 };
  s3 -> s1 [0, 87] { R11934 += 1, R11888 += 1 };
  s3 -> s3 [0, 65535] { R11934 += 1, R11888 += 1, R11 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R11934 += 1 };
  s3 -> s4 [88, 88] { R11934 += 1, R11888 += 1 };
  s3 -> s1 [89, 65535] { R11934 += 1, R11888 += 1 };
  s4 -> s4 [0, 65535] { R11934 += 1, R11888 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11934 += 1 };
  accepting s3, s5, s2, s6, s1, s0;
};
automaton uri_13 {
  init s0;
  s0 -> s1 [0, 90] { R11936 += 1, R11890 += 1, R5996 += 1 };
  s0 -> s2 [0, 65535] { R11936 += 1, R11889 += 1, R11890 += 1 };
  s0 -> s3 [0, 65535] { R11936 += 1, R11890 += 1, R5995 += 1, R5996 += 1 };
  s0 -> s0 [0, 65535] { R11935 += 1, R11936 += 1 };
  s0 -> s4 [91, 91] { R11936 += 1, R11890 += 1, R5996 += 1 };
  s0 -> s1 [92, 65535] { R11936 += 1, R11890 += 1, R5996 += 1 };
  s1 -> s1 [0, 65535] { R11936 += 1, R11890 += 1, R5996 += 1 };
  s1 -> s5 [0, 65535] { R11936 += 1 };
  s1 -> s7 [0, 65535] { R11936 += 1, R11890 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s1 [0, 90] { R11936 += 1, R11890 += 1, R5996 += 1 };
  s2 -> s2 [0, 65535] { R11936 += 1, R11889 += 1, R11890 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R11936 += 1, R11890 += 1, R5995 += 1, R5996 += 1 };
  s2 -> s4 [91, 91] { R11936 += 1, R11890 += 1, R5996 += 1 };
  s2 -> s1 [92, 65535] { R11936 += 1, R11890 += 1, R5996 += 1 };
  s3 -> s1 [0, 90] { R11936 += 1, R11890 += 1, R5996 += 1 };
  s3 -> s5 [0, 65535] { R11936 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R11936 += 1, R11890 += 1, R5995 += 1, R5996 += 1 };
  s3 -> s4 [91, 91] { R11936 += 1, R11890 += 1, R5996 += 1 };
  s3 -> s1 [92, 65535] { R11936 += 1, R11890 += 1, R5996 += 1 };
  s4 -> s1 [0, 65535] { R11936 += 1, R11890 += 1, R5996 += 1 };
  s5 -> s5 [0, 65535] { R11936 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R11936 += 1 };
  s7 -> s7 [0, 65535] { R11936 += 1, R11890 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s5, s2, s6, s1, s7, s0;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 65535] { R11938 += 1, R11892 += 1, R5997 += 1, R5998 += 1 };
  s0 -> s2 [0, 65535] { R11938 += 1, R11892 += 1, R5998 += 1, R6 += 1 };
  s0 -> s0 [0, 65535] { R11937 += 1, R11938 += 1 };
  s0 -> s3 [0, 65535] { R11938 += 1, R11891 += 1, R11892 += 1 };
  s1 -> s1 [0, 65535] { R11938 += 1, R11892 += 1, R5997 += 1, R5998 += 1 };
  s1 -> s5 [0, 65535] { R11938 += 1 };
  s1 -> s2 [0, 65535] { R11938 += 1, R11892 += 1, R5998 += 1, R6 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R11938 += 1 };
  s2 -> s2 [0, 65535] { R11938 += 1, R11892 += 1, R5998 += 1, R6 += 1 };
  s2 -> s6 [0, 65535] { R11938 += 1, R11892 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R11938 += 1, R11892 += 1, R5997 += 1, R5998 += 1 };
  s3 -> s2 [0, 65535] { R11938 += 1, R11892 += 1, R5998 += 1, R6 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R11938 += 1, R11891 += 1, R11892 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R11938 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R11938 += 1 };
  s6 -> s6 [0, 65535] { R11938 += 1, R11892 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_15 {
  init s0;
  s0 -> s1 [0, 65535] { R11940 += 1, R11893 += 1, R11894 += 1 };
  s0 -> s0 [0, 65535] { R11939 += 1, R11940 += 1 };
  s0 -> s2 [0, 65535] { R11940 += 1, R11894 += 1, R11859 += 1, R11860 += 1 };
  s0 -> s3 [0, 65535] { R11940 += 1, R11894 += 1, R11860 += 1, R5990 += 1 };
  s1 -> s1 [0, 65535] { R11940 += 1, R11893 += 1, R11894 += 1 };
  s1 -> s2 [0, 65535] { R11940 += 1, R11894 += 1, R11859 += 1, R11860 += 1 };
  s1 -> s3 [0, 65535] { R11940 += 1, R11894 += 1, R11860 += 1, R5990 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s5 [0, 65535] { R11940 += 1 };
  s2 -> s2 [0, 65535] { R11940 += 1, R11894 += 1, R11859 += 1, R11860 += 1 };
  s2 -> s3 [0, 65535] { R11940 += 1, R11894 += 1, R11860 += 1, R5990 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R11940 += 1, R11894 += 1 };
  s3 -> s5 [0, 65535] { R11940 += 1 };
  s3 -> s3 [0, 65535] { R11940 += 1, R11894 += 1, R11860 += 1, R5990 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R11940 += 1, R11894 += 1 };
  s4 -> s5 [0, 65535] { R11940 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R11940 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 65535] { R11942 += 1, R11895 += 1, R11896 += 1 };
  s0 -> s0 [0, 65535] { R11941 += 1, R11942 += 1 };
  s0 -> s2 [0, 65535] { R11942 += 1, R11896 += 1, R11861 += 1, R11862 += 1 };
  s0 -> s3 [108, 108] { R11942 += 1, R11896 += 1, R11862 += 1 };
  s1 -> s1 [0, 65535] { R11942 += 1, R11895 += 1, R11896 += 1 };
  s1 -> s2 [0, 65535] { R11942 += 1, R11896 += 1, R11861 += 1, R11862 += 1 };
  s1 -> s3 [108, 108] { R11942 += 1, R11896 += 1, R11862 += 1 };
  s2 -> s2 [0, 65535] { R11942 += 1, R11896 += 1, R11861 += 1, R11862 += 1 };
  s2 -> s3 [108, 108] { R11942 += 1, R11896 += 1, R11862 += 1 };
  s3 -> s4 [111, 111] { R11942 += 1, R11896 += 1, R11862 += 1 };
  s4 -> s5 [99, 99] { R11942 += 1, R11896 += 1, R11862 += 1 };
  s5 -> s6 [97, 97] { R11942 += 1, R11896 += 1, R11862 += 1 };
  s6 -> s7 [108, 108] { R11942 += 1, R11896 += 1, R11862 += 1 };
  s7 -> s8 [104, 104] { R11942 += 1, R11896 += 1, R11862 += 1 };
  s8 -> s9 [111, 111] { R11942 += 1, R11896 += 1, R11862 += 1 };
  s9 -> s10 [115, 115] { R11942 += 1, R11896 += 1, R11862 += 1 };
  s10 -> s11 [116, 116] { R11942 += 1, R11896 += 1, R11862 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s11 [0, 65535] { R11942 += 1, R11896 += 1 };
  s11 -> s13 [0, 65535] { R11942 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R11942 += 1 };
  accepting s11, s12, s13;
};
automaton uri_17 {
  init s0;
  s0 -> s1 [0, 87] { R11944 += 1, R11898 += 1, R11866 += 1 };
  s0 -> s2 [0, 65535] { R11944 += 1, R11897 += 1, R11898 += 1 };
  s0 -> s0 [0, 65535] { R11943 += 1, R11944 += 1 };
  s0 -> s3 [0, 65535] { R11944 += 1, R11898 += 1, R11865 += 1, R11866 += 1 };
  s0 -> s4 [88, 88] { R11944 += 1, R11898 += 1, R11866 += 1 };
  s0 -> s1 [89, 65535] { R11944 += 1, R11898 += 1, R11866 += 1 };
  s1 -> s1 [0, 87] { R11944 += 1, R11898 += 1, R11866 += 1 };
  s1 -> s4 [88, 88] { R11944 += 1, R11898 += 1, R11866 += 1 };
  s1 -> s1 [89, 65535] { R11944 += 1, R11898 += 1, R11866 += 1 };
  s2 -> s1 [0, 87] { R11944 += 1, R11898 += 1, R11866 += 1 };
  s2 -> s2 [0, 65535] { R11944 += 1, R11897 += 1, R11898 += 1 };
  s2 -> s3 [0, 65535] { R11944 += 1, R11898 += 1, R11865 += 1, R11866 += 1 };
  s2 -> s4 [88, 88] { R11944 += 1, R11898 += 1, R11866 += 1 };
  s2 -> s1 [89, 65535] { R11944 += 1, R11898 += 1, R11866 += 1 };
  s3 -> s1 [0, 87] { R11944 += 1, R11898 += 1, R11866 += 1 };
  s3 -> s3 [0, 65535] { R11944 += 1, R11898 += 1, R11865 += 1, R11866 += 1 };
  s3 -> s4 [88, 88] { R11944 += 1, R11898 += 1, R11866 += 1 };
  s3 -> s1 [89, 65535] { R11944 += 1, R11898 += 1, R11866 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R11944 += 1 };
  s4 -> s4 [0, 65535] { R11944 += 1, R11898 += 1, R11866 += 1 };
  s4 -> s7 [0, 65535] { R11944 += 1, R11898 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11944 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R11944 += 1 };
  s7 -> s7 [0, 65535] { R11944 += 1, R11898 += 1 };
  accepting s4, s5, s6, s7;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 65535] { R11946 += 1, R11899 += 1, R11900 += 1 };
  s0 -> s0 [0, 65535] { R11945 += 1, R11946 += 1 };
  s0 -> s2 [0, 65535] { R11946 += 1, R11900 += 1, R11868 += 1, R1 += 1 };
  s0 -> s3 [0, 65535] { R11946 += 1, R11900 += 1, R11867 += 1, R11868 += 1 };
  s1 -> s1 [0, 65535] { R11946 += 1, R11899 += 1, R11900 += 1 };
  s1 -> s2 [0, 65535] { R11946 += 1, R11900 += 1, R11868 += 1, R1 += 1 };
  s1 -> s3 [0, 65535] { R11946 += 1, R11900 += 1, R11867 += 1, R11868 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R11946 += 1, R11900 += 1, R11868 += 1, R1 += 1 };
  s2 -> s4 [0, 65535] { R11946 += 1 };
  s2 -> s6 [0, 65535] { R11946 += 1, R11900 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R11946 += 1, R11900 += 1, R11868 += 1, R1 += 1 };
  s3 -> s4 [0, 65535] { R11946 += 1 };
  s3 -> s3 [0, 65535] { R11946 += 1, R11900 += 1, R11867 += 1, R11868 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R11946 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R11946 += 1 };
  s6 -> s6 [0, 65535] { R11946 += 1, R11900 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_19 {
  init s0;
  s0 -> s1 [0, 87] { R11948 += 1, R11902 += 1, R11870 += 1 };
  s0 -> s0 [0, 65535] { R11947 += 1, R11948 += 1 };
  s0 -> s2 [0, 65535] { R11948 += 1, R11902 += 1, R11869 += 1, R11870 += 1 };
  s0 -> s3 [0, 65535] { R11948 += 1, R11901 += 1, R11902 += 1 };
  s0 -> s4 [0, 65535] { R11948 += 1, R11902 += 1, R11870 += 1, R7 += 1 };
  s0 -> s5 [88, 88] { R11948 += 1, R11902 += 1, R11870 += 1 };
  s0 -> s1 [89, 65535] { R11948 += 1, R11902 += 1, R11870 += 1 };
  s1 -> s1 [0, 87] { R11948 += 1, R11902 += 1, R11870 += 1 };
  s1 -> s1 [0, 65535] { R11948 += 1, R11902 += 1 };
  s1 -> s6 [0, 65535] { R11948 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s5 [88, 88] { R11948 += 1, R11902 += 1, R11870 += 1 };
  s1 -> s1 [89, 65535] { R11948 += 1, R11902 += 1, R11870 += 1 };
  s2 -> s1 [0, 87] { R11948 += 1, R11902 += 1, R11870 += 1 };
  s2 -> s6 [0, 65535] { R11948 += 1 };
  s2 -> s2 [0, 65535] { R11948 += 1, R11902 += 1, R11869 += 1, R11870 += 1 };
  s2 -> s4 [0, 65535] { R11948 += 1, R11902 += 1, R11870 += 1, R7 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s5 [88, 88] { R11948 += 1, R11902 += 1, R11870 += 1 };
  s2 -> s1 [89, 65535] { R11948 += 1, R11902 += 1, R11870 += 1 };
  s3 -> s1 [0, 87] { R11948 += 1, R11902 += 1, R11870 += 1 };
  s3 -> s2 [0, 65535] { R11948 += 1, R11902 += 1, R11869 += 1, R11870 += 1 };
  s3 -> s3 [0, 65535] { R11948 += 1, R11901 += 1, R11902 += 1 };
  s3 -> s4 [0, 65535] { R11948 += 1, R11902 += 1, R11870 += 1, R7 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s5 [88, 88] { R11948 += 1, R11902 += 1, R11870 += 1 };
  s3 -> s1 [89, 65535] { R11948 += 1, R11902 += 1, R11870 += 1 };
  s4 -> s1 [0, 87] { R11948 += 1, R11902 += 1, R11870 += 1 };
  s4 -> s6 [0, 65535] { R11948 += 1 };
  s4 -> s7 [0, 65535] { R11948 += 1, R11902 += 1 };
  s4 -> s4 [0, 65535] { R11948 += 1, R11902 += 1, R11870 += 1, R7 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s5 [88, 88] { R11948 += 1, R11902 += 1, R11870 += 1 };
  s4 -> s1 [89, 65535] { R11948 += 1, R11902 += 1, R11870 += 1 };
  s5 -> s5 [0, 65535] { R11948 += 1, R11902 += 1, R11870 += 1 };
  s6 -> s6 [0, 65535] { R11948 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s6 [0, 65535] { R11948 += 1 };
  s7 -> s7 [0, 65535] { R11948 += 1, R11902 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s2, s6, s1, s7, s0;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 87] { R11950 += 1, R11904 += 1, R11872 += 1, R11856 += 1 };
  s0 -> s2 [0, 65535] { R11950 += 1, R11904 += 1, R11872 += 1, R11855 += 1, R11856 += 1 };
  s0 -> s3 [0, 65535] { R11950 += 1, R11903 += 1, R11904 += 1 };
  s0 -> s4 [0, 65535] { R11950 += 1, R11904 += 1, R11871 += 1, R11872 += 1 };
  s0 -> s0 [0, 65535] { R11949 += 1, R11950 += 1 };
  s0 -> s1 [89, 65535] { R11950 += 1, R11904 += 1, R11872 += 1, R11856 += 1 };
  s1 -> s1 [0, 87] { R11950 += 1, R11904 += 1, R11872 += 1, R11856 += 1 };
  s1 -> s5 [0, 65535] { R11950 += 1 };
  s1 -> s7 [0, 65535] { R11950 += 1, R11904 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R11950 += 1, R11904 += 1, R11872 += 1 };
  s1 -> s1 [89, 65535] { R11950 += 1, R11904 += 1, R11872 += 1, R11856 += 1 };
  s2 -> s1 [0, 87] { R11950 += 1, R11904 += 1, R11872 += 1, R11856 += 1 };
  s2 -> s5 [0, 65535] { R11950 += 1 };
  s2 -> s2 [0, 65535] { R11950 += 1, R11904 += 1, R11872 += 1, R11855 += 1, R11856 += 1 };
  s2 -> s7 [0, 65535] { R11950 += 1, R11904 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [89, 65535] { R11950 += 1, R11904 += 1, R11872 += 1, R11856 += 1 };
  s3 -> s1 [0, 87] { R11950 += 1, R11904 += 1, R11872 += 1, R11856 += 1 };
  s3 -> s2 [0, 65535] { R11950 += 1, R11904 += 1, R11872 += 1, R11855 += 1, R11856 += 1 };
  s3 -> s3 [0, 65535] { R11950 += 1, R11903 += 1, R11904 += 1 };
  s3 -> s4 [0, 65535] { R11950 += 1, R11904 += 1, R11871 += 1, R11872 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [89, 65535] { R11950 += 1, R11904 += 1, R11872 += 1, R11856 += 1 };
  s4 -> s1 [0, 87] { R11950 += 1, R11904 += 1, R11872 += 1, R11856 += 1 };
  s4 -> s5 [0, 65535] { R11950 += 1 };
  s4 -> s2 [0, 65535] { R11950 += 1, R11904 += 1, R11872 += 1, R11855 += 1, R11856 += 1 };
  s4 -> s4 [0, 65535] { R11950 += 1, R11904 += 1, R11871 += 1, R11872 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s1 [89, 65535] { R11950 += 1, R11904 += 1, R11872 += 1, R11856 += 1 };
  s5 -> s5 [0, 65535] { R11950 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R11950 += 1 };
  s7 -> s7 [0, 65535] { R11950 += 1, R11904 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton uri_21 {
  init s0;
  s0 -> s1 [0, 65535] { R11952 += 1, R11906 += 1, R11874 += 1, R11857 += 1, R11858 += 1 };
  s0 -> s2 [0, 65535] { R11952 += 1, R11906 += 1, R11873 += 1, R11874 += 1 };
  s0 -> s3 [0, 65535] { R11952 += 1, R11905 += 1, R11906 += 1 };
  s0 -> s4 [0, 65535] { R11952 += 1, R11906 += 1, R11874 += 1, R11858 += 1, R5988 += 1 };
  s0 -> s0 [0, 65535] { R11951 += 1, R11952 += 1 };
  s1 -> s1 [0, 65535] { R11952 += 1, R11906 += 1, R11874 += 1, R11857 += 1, R11858 += 1 };
  s1 -> s4 [0, 65535] { R11952 += 1, R11906 += 1, R11874 += 1, R11858 += 1, R5988 += 1 };
  s1 -> s5 [0, 65535] { R11952 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s8 [0, 65535] { R11952 += 1, R11906 += 1 };
  s2 -> s1 [0, 65535] { R11952 += 1, R11906 += 1, R11874 += 1, R11857 += 1, R11858 += 1 };
  s2 -> s2 [0, 65535] { R11952 += 1, R11906 += 1, R11873 += 1, R11874 += 1 };
  s2 -> s4 [0, 65535] { R11952 += 1, R11906 += 1, R11874 += 1, R11858 += 1, R5988 += 1 };
  s2 -> s5 [0, 65535] { R11952 += 1 };
  s2 -> s7 [0, 65535];
  s3 -> s1 [0, 65535] { R11952 += 1, R11906 += 1, R11874 += 1, R11857 += 1, R11858 += 1 };
  s3 -> s2 [0, 65535] { R11952 += 1, R11906 += 1, R11873 += 1, R11874 += 1 };
  s3 -> s3 [0, 65535] { R11952 += 1, R11905 += 1, R11906 += 1 };
  s3 -> s4 [0, 65535] { R11952 += 1, R11906 += 1, R11874 += 1, R11858 += 1, R5988 += 1 };
  s3 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R11952 += 1, R11906 += 1, R11874 += 1, R11858 += 1, R5988 += 1 };
  s4 -> s5 [0, 65535] { R11952 += 1 };
  s4 -> s6 [0, 65535] { R11952 += 1, R11906 += 1, R11874 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R11952 += 1, R11906 += 1 };
  s5 -> s5 [0, 65535] { R11952 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s5 [0, 65535] { R11952 += 1 };
  s6 -> s6 [0, 65535] { R11952 += 1, R11906 += 1, R11874 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R11952 += 1, R11906 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s5 [0, 65535] { R11952 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R11952 += 1, R11906 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_22 {
  init s0;
  s0 -> s1 [0, 65535] { R11954 += 1, R11907 += 1, R11908 += 1 };
  s0 -> s2 [0, 65535] { R11954 += 1, R11908 += 1, R11876 += 1 };
  s0 -> s3 [0, 65535] { R11954 += 1, R11908 += 1, R11875 += 1, R11876 += 1 };
  s0 -> s0 [0, 65535] { R11953 += 1, R11954 += 1 };
  s1 -> s1 [0, 65535] { R11954 += 1, R11907 += 1, R11908 += 1 };
  s1 -> s2 [0, 65535] { R11954 += 1, R11908 += 1, R11876 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R11954 += 1, R11908 += 1, R11875 += 1, R11876 += 1 };
  s2 -> s4 [0, 65535] { R11954 += 1 };
  s2 -> s2 [0, 65535] { R11954 += 1, R11908 += 1, R11876 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R11954 += 1, R11908 += 1 };
  s3 -> s4 [0, 65535] { R11954 += 1 };
  s3 -> s2 [0, 65535] { R11954 += 1, R11908 += 1, R11876 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R11954 += 1, R11908 += 1, R11875 += 1, R11876 += 1 };
  s4 -> s4 [0, 65535] { R11954 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R11954 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11954 += 1, R11908 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_23 {
  init s0;
  s0 -> s1 [0, 65535] { R11956 += 1, R11910 += 1, R11878 += 1, R11864 += 1, R5989 += 1 };
  s0 -> s2 [0, 65535] { R11956 += 1, R11909 += 1, R11910 += 1 };
  s0 -> s0 [0, 65535] { R11955 += 1, R11956 += 1 };
  s0 -> s3 [0, 65535] { R11956 += 1, R11910 += 1, R11878 += 1, R11863 += 1, R11864 += 1 };
  s0 -> s4 [0, 65535] { R11956 += 1, R11910 += 1, R11877 += 1, R11878 += 1 };
  s1 -> s1 [0, 65535] { R11956 += 1, R11910 += 1, R11878 += 1, R11864 += 1, R5989 += 1 };
  s1 -> s5 [0, 65535] { R11956 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s8 [0, 65535] { R11956 += 1, R11910 += 1, R11878 += 1 };
  s1 -> s7 [0, 65535] { R11956 += 1, R11910 += 1 };
  s2 -> s1 [0, 65535] { R11956 += 1, R11910 += 1, R11878 += 1, R11864 += 1, R5989 += 1 };
  s2 -> s2 [0, 65535] { R11956 += 1, R11909 += 1, R11910 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R11956 += 1, R11910 += 1, R11878 += 1, R11863 += 1, R11864 += 1 };
  s2 -> s4 [0, 65535] { R11956 += 1, R11910 += 1, R11877 += 1, R11878 += 1 };
  s3 -> s1 [0, 65535] { R11956 += 1, R11910 += 1, R11878 += 1, R11864 += 1, R5989 += 1 };
  s3 -> s5 [0, 65535] { R11956 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R11956 += 1, R11910 += 1, R11878 += 1, R11863 += 1, R11864 += 1 };
  s3 -> s7 [0, 65535] { R11956 += 1, R11910 += 1 };
  s4 -> s1 [0, 65535] { R11956 += 1, R11910 += 1, R11878 += 1, R11864 += 1, R5989 += 1 };
  s4 -> s5 [0, 65535] { R11956 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s3 [0, 65535] { R11956 += 1, R11910 += 1, R11878 += 1, R11863 += 1, R11864 += 1 };
  s4 -> s4 [0, 65535] { R11956 += 1, R11910 += 1, R11877 += 1, R11878 += 1 };
  s5 -> s5 [0, 65535] { R11956 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R11956 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R11956 += 1, R11910 += 1 };
  s8 -> s5 [0, 65535] { R11956 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R11956 += 1, R11910 += 1, R11878 += 1 };
  s8 -> s7 [0, 65535] { R11956 += 1, R11910 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_24 {
  init s0;
  s0 -> s1 [0, 65535] { R11958 += 1, R11911 += 1, R11912 += 1 };
  s0 -> s2 [0, 65535] { R11958 += 1, R11912 += 1, R11880 += 1 };
  s0 -> s3 [0, 65535] { R11958 += 1, R11912 += 1, R11879 += 1, R11880 += 1 };
  s0 -> s0 [0, 65535] { R11957 += 1, R11958 += 1 };
  s1 -> s1 [0, 65535] { R11958 += 1, R11911 += 1, R11912 += 1 };
  s1 -> s2 [0, 65535] { R11958 += 1, R11912 += 1, R11880 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s3 [0, 65535] { R11958 += 1, R11912 += 1, R11879 += 1, R11880 += 1 };
  s2 -> s6 [0, 65535] { R11958 += 1, R11912 += 1 };
  s2 -> s2 [0, 65535] { R11958 += 1, R11912 += 1, R11880 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R11958 += 1 };
  s3 -> s2 [0, 65535] { R11958 += 1, R11912 += 1, R11880 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R11958 += 1, R11912 += 1, R11879 += 1, R11880 += 1 };
  s3 -> s5 [0, 65535] { R11958 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R11958 += 1 };
  s6 -> s6 [0, 65535] { R11958 += 1, R11912 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R11958 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
};
constraint R1 = 0 && R2 = R11880 && R3 = R11854 && R4 = R11958 && R15 = 0 && R16 = R11912 && R5995 = 0 && R5996 = 1 && R5997 = 0 && R5998 = 1 && R11847 - R11912 = 1 && R11848 = R11854 && R11849 - R11912 = 1 && R11850 = R11854 && R11851 - R11912 = 1 && R11852 = R11854 && R11853 - R11912 = 1 && R11861 = 0 && R11862 = 0 && R11865 = 0 && R11866 = R11880 && R11867 = 0 && R11868 = R11880 && R11869 = 0 && R11870 = R11880 && R11871 = 0 && R11872 = R11880 && R11873 = 0 && R11874 = R11880 && R11875 = 0 && R11876 = R11880 && R11877 = 0 && R11878 = R11880 && R11879 = 0 && R11881 = 0 && R11882 = R11912 && R11883 = 0 && R11884 = R11912 && R11885 = 0 && R11886 = R11912 && R11887 = 0 && R11888 = R11912 && R11889 = 0 && R11890 = R11912 && R11891 = 0 && R11892 = R11912 && R11893 = 0 && R11894 = R11912 && R11895 = 0 && R11896 = R11912 && R11897 = 0 && R11898 = R11912 && R11899 = 0 && R11900 = R11912 && R11901 = 0 && R11902 = R11912 && R11903 = 0 && R11904 = R11912 && R11905 = 0 && R11906 = R11912 && R11907 = 0 && R11908 = R11912 && R11909 = 0 && R11910 = R11912 && R11911 = 0 && R11913 = 10 && R11914 = R11958 && R11915 = 10 && R11916 = R11958 && R11917 = 10 && R11918 = R11958 && R11919 = 10 && R11920 = R11958 && R11921 = 10 && R11922 = R11958 && R11923 = 10 && R11924 = R11958 && R11925 = 10 && R11926 = R11958 && R11927 = 10 && R11928 = R11958 && R11929 = 10 && R11930 = R11958 && R11931 = 10 && R11932 = R11958 && R11933 = 10 && R11934 = R11958 && R11935 = 10 && R11936 = R11958 && R11937 = 10 && R11938 = R11958 && R11939 = 10 && R11940 = R11958 && R11941 = 10 && R11942 = R11958 && R11943 = 10 && R11944 = R11958 && R11945 = 10 && R11946 = R11958 && R11947 = 10 && R11948 = R11958 && R11949 = 10 && R11950 = R11958 && R11951 = 10 && R11952 = R11958 && R11953 = 10 && R11954 = R11958 && R11955 = 10 && R11956 = R11958 && R11957 = 10 && R0 != 0 && R7 < 1 && R10 < 1 && R11 < 1 && R11912 < R11854 && 0 < R11880 && -1 < R11912 && 9 < R11958 && (R5991 != 0 || ((R5 != 0 || ((R0 != R5992 || R5992 = 1 || R5992 < 0) && (R0 = R5992 || R5992 = 1 || R0 < 1))) && (R5 = 0 || ((R0 != R5992 || R5992 = 1 || R5992 < 0) && (R5992 != 1 || -1 < R0) && (R0 = R5992 || R5992 = 1))))) && (R5993 != 0 || ((R5 != 0 || ((R0 != R5994 || R5994 = 1 || R5994 < 0) && (R0 = R5994 || R5994 = 1 || R0 < 1))) && (R5 = 0 || ((R0 != R5994 || R5994 = 1 || R5994 < 0) && (R5994 != 1 || -1 < R0) && (R0 = R5994 || R5994 = 1))))) && (R5988 = 0 || (R11855 = 0 && R11856 = 0)) && (R5988 = 0 || (R11857 = 0 && R11858 = 0)) && (R5989 = 0 || (R11863 = 0 && R11864 = 0)) && (R5990 = 0 || (R11859 = 0 && R11860 = 0)) && (R5991 = 0 || (R5 = 0 && R0 < 0)) && (R5993 = 0 || (R5 = 0 && R0 < 0));
// End of Parikh automata intersection problem
