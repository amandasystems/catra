// Parikh automata intersection problem, generated by OSTRICH+
counter int R0, R1, R10, R11, R15, R16, R2, R3, R4, R5, R5988, R5989, R5990, R5991, R5992, R5993, R5994, R5995, R5996, R5997, R5998, R6, R7, R7063, R7064, R7065, R7066, R7067, R7068, R7069, R7070, R7825, R7826, R7827, R7828, R7829, R7830, R7831, R7832, R7833, R7834, R7835, R7836, R7837, R7838, R7839, R7840, R7841, R7842, R7843, R7844, R7845, R7846, R7847, R7848, R7849, R7850, R7851, R7852, R7853, R7854, R7855, R7856, R7857, R7858, R7859, R7860, R7861, R7862, R7863, R7864, R7865, R7866, R7867, R7868, R7869, R7870, R7871, R7872, R7873, R7874, R7875, R7876, R7877, R7878, R7879, R7880, R7881, R7882, R7883, R7884, R7885, R7886, R7887, R7888, R7889, R7890, R7891, R7892, R7893, R7894, R7895, R7896, R7897, R7898, R7899, R7900, R7901, R7902, R7903, R7904, R7905, R7906, R7907, R7908, R7909, R7910, R7911, R7912, R7913, R7914, R7915, R7916, R7917, R7918, R7919, R7920, R7921, R7922, R7923, R7924, R7925, R7926, R7927, R7928, R7929, R7930, R7931, R7932;
synchronised {  // Automata constraining P59
automaton P59_0 {
  init s0;
  s0 -> s1 [120, 120];
  accepting s1;
};
};
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R4 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 45] { R7888 += 1 };
  s0 -> s0 [0, 65535] { R7887 += 1, R7888 += 1 };
  s0 -> s2 [46, 46] { R7888 += 1 };
  s0 -> s3 [47, 47] { R7888 += 1 };
  s0 -> s1 [48, 65535] { R7888 += 1 };
  s1 -> s1 [0, 45] { R7888 += 1 };
  s1 -> s2 [46, 46] { R7888 += 1 };
  s1 -> s3 [47, 47] { R7888 += 1 };
  s1 -> s1 [48, 65535] { R7888 += 1 };
  s2 -> s1 [0, 45] { R7888 += 1 };
  s2 -> s2 [46, 46] { R7888 += 1 };
  s2 -> s3 [47, 47] { R7888 += 1 };
  s2 -> s1 [48, 114] { R7888 += 1 };
  s2 -> s8 [115, 115] { R7888 += 1 };
  s2 -> s1 [116, 65535] { R7888 += 1 };
  s3 -> s3 [0, 45] { R7888 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s4 [46, 46] { R7888 += 1 };
  s3 -> s3 [47, 65535] { R7888 += 1 };
  s4 -> s3 [0, 45] { R7888 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s4 [46, 46] { R7888 += 1 };
  s4 -> s3 [47, 114] { R7888 += 1 };
  s4 -> s5 [115, 115] { R7888 += 1 };
  s4 -> s3 [116, 65535] { R7888 += 1 };
  s5 -> s3 [0, 45] { R7888 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s4 [46, 46] { R7888 += 1 };
  s5 -> s3 [47, 110] { R7888 += 1 };
  s5 -> s6 [111, 111] { R7888 += 1 };
  s5 -> s3 [112, 65535] { R7888 += 1 };
  s6 -> s3 [0, 45] { R7888 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s4 [46, 46] { R7888 += 1 };
  s6 -> s3 [47, 98] { R7888 += 1 };
  s6 -> s7 [99, 99] { R7888 += 1 };
  s6 -> s3 [100, 65535] { R7888 += 1 };
  s7 -> s3 [0, 45] { R7888 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s4 [46, 46] { R7888 += 1 };
  s7 -> s3 [47, 106] { R7888 += 1 };
  s7 -> s3 [108, 65535] { R7888 += 1 };
  s8 -> s1 [0, 45] { R7888 += 1 };
  s8 -> s2 [46, 46] { R7888 += 1 };
  s8 -> s3 [47, 47] { R7888 += 1 };
  s8 -> s1 [48, 110] { R7888 += 1 };
  s8 -> s9 [111, 111] { R7888 += 1 };
  s8 -> s1 [112, 65535] { R7888 += 1 };
  s9 -> s1 [0, 45] { R7888 += 1 };
  s9 -> s2 [46, 46] { R7888 += 1 };
  s9 -> s3 [47, 47] { R7888 += 1 };
  s9 -> s1 [48, 98] { R7888 += 1 };
  s9 -> s10 [99, 99] { R7888 += 1 };
  s9 -> s1 [100, 65535] { R7888 += 1 };
  s10 -> s1 [0, 45] { R7888 += 1 };
  s10 -> s2 [46, 46] { R7888 += 1 };
  s10 -> s3 [47, 47] { R7888 += 1 };
  s10 -> s1 [48, 106] { R7888 += 1 };
  s10 -> s1 [108, 65535] { R7888 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_3 {
  init s0;
  s0 -> s0 [0, 65535] { R7889 += 1, R7890 += 1 };
  s0 -> s1 [0, 65535] { R7890 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R7890 += 1, R3 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s1 [0, 46] { R7892 += 1, R16 += 1 };
  s0 -> s0 [0, 65535] { R7891 += 1, R7892 += 1 };
  s0 -> s2 [0, 65535] { R7892 += 1, R15 += 1, R16 += 1 };
  s0 -> s3 [47, 47] { R7892 += 1 };
  s0 -> s1 [48, 65535] { R7892 += 1, R16 += 1 };
  s1 -> s1 [0, 46] { R7892 += 1, R16 += 1 };
  s1 -> s3 [47, 47] { R7892 += 1 };
  s1 -> s1 [48, 65535] { R7892 += 1, R16 += 1 };
  s2 -> s1 [0, 46] { R7892 += 1, R16 += 1 };
  s2 -> s2 [0, 65535] { R7892 += 1, R15 += 1, R16 += 1 };
  s2 -> s3 [47, 47] { R7892 += 1 };
  s2 -> s1 [48, 65535] { R7892 += 1, R16 += 1 };
  s3 -> s3 [0, 65535] { R7892 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 36] { R7894 += 1, R7064 += 1 };
  s0 -> s2 [0, 65535] { R7894 += 1, R7063 += 1, R7064 += 1 };
  s0 -> s0 [0, 65535] { R7893 += 1, R7894 += 1 };
  s0 -> s1 [38, 42] { R7894 += 1, R7064 += 1 };
  s0 -> s1 [44, 45] { R7894 += 1, R7064 += 1 };
  s0 -> s1 [47, 62] { R7894 += 1, R7064 += 1 };
  s0 -> s1 [64, 65535] { R7894 += 1, R7064 += 1 };
  s1 -> s1 [0, 36] { R7894 += 1, R7064 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R7894 += 1 };
  s1 -> s1 [38, 42] { R7894 += 1, R7064 += 1 };
  s1 -> s1 [44, 45] { R7894 += 1, R7064 += 1 };
  s1 -> s1 [47, 62] { R7894 += 1, R7064 += 1 };
  s1 -> s1 [64, 65535] { R7894 += 1, R7064 += 1 };
  s2 -> s1 [0, 36] { R7894 += 1, R7064 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R7894 += 1, R7063 += 1, R7064 += 1 };
  s2 -> s1 [38, 42] { R7894 += 1, R7064 += 1 };
  s2 -> s1 [44, 45] { R7894 += 1, R7064 += 1 };
  s2 -> s1 [47, 62] { R7894 += 1, R7064 += 1 };
  s2 -> s1 [64, 65535] { R7894 += 1, R7064 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_6 {
  init s0;
  s0 -> s1 [0, 65535] { R7896 += 1, R7065 += 1, R7066 += 1 };
  s0 -> s2 [0, 65535] { R7896 += 1, R7066 += 1, R0 += 1 };
  s0 -> s0 [0, 65535] { R7895 += 1, R7896 += 1 };
  s1 -> s1 [0, 65535] { R7896 += 1, R7065 += 1, R7066 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R7896 += 1, R7066 += 1, R0 += 1 };
  s2 -> s3 [0, 65535] { R7896 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R7896 += 1, R7066 += 1, R0 += 1 };
  s3 -> s3 [0, 65535] { R7896 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_7 {
  init s0;
  s0 -> s1 [0, 62] { R7898 += 1, R7068 += 1, R5992 += 1 };
  s0 -> s2 [0, 65535] { R7898 += 1, R7068 += 1, R5991 += 1, R5992 += 1 };
  s0 -> s3 [0, 65535] { R7898 += 1, R7067 += 1, R7068 += 1 };
  s0 -> s0 [0, 65535] { R7897 += 1, R7898 += 1 };
  s0 -> s4 [63, 63] { R7898 += 1, R7068 += 1, R5992 += 1 };
  s0 -> s1 [64, 65535] { R7898 += 1, R7068 += 1, R5992 += 1 };
  s1 -> s6 [0, 65535] { R7898 += 1 };
  s1 -> s7 [0, 65535] { R7898 += 1, R7068 += 1 };
  s1 -> s1 [0, 65535] { R7898 += 1, R7068 += 1, R5992 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 62] { R7898 += 1, R7068 += 1, R5992 += 1 };
  s2 -> s6 [0, 65535] { R7898 += 1 };
  s2 -> s2 [0, 65535] { R7898 += 1, R7068 += 1, R5991 += 1, R5992 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s4 [63, 63] { R7898 += 1, R7068 += 1, R5992 += 1 };
  s2 -> s1 [64, 65535] { R7898 += 1, R7068 += 1, R5992 += 1 };
  s3 -> s1 [0, 62] { R7898 += 1, R7068 += 1, R5992 += 1 };
  s3 -> s2 [0, 65535] { R7898 += 1, R7068 += 1, R5991 += 1, R5992 += 1 };
  s3 -> s3 [0, 65535] { R7898 += 1, R7067 += 1, R7068 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s4 [63, 63] { R7898 += 1, R7068 += 1, R5992 += 1 };
  s3 -> s1 [64, 65535] { R7898 += 1, R7068 += 1, R5992 += 1 };
  s4 -> s1 [0, 65535] { R7898 += 1, R7068 += 1, R5992 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7898 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R7898 += 1 };
  s7 -> s7 [0, 65535] { R7898 += 1, R7068 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s5, s2, s6, s1, s7, s0;
};
automaton uri_8 {
  init s0;
  s0 -> s1 [0, 65535] { R7900 += 1, R7069 += 1, R7070 += 1 };
  s0 -> s0 [0, 65535] { R7899 += 1, R7900 += 1 };
  s0 -> s2 [0, 65535] { R7900 += 1, R7070 += 1, R5993 += 1, R5994 += 1 };
  s0 -> s3 [0, 65535] { R7900 += 1, R7070 += 1, R5994 += 1, R5 += 1 };
  s1 -> s1 [0, 65535] { R7900 += 1, R7069 += 1, R7070 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R7900 += 1, R7070 += 1, R5993 += 1, R5994 += 1 };
  s1 -> s3 [0, 65535] { R7900 += 1, R7070 += 1, R5994 += 1, R5 += 1 };
  s2 -> s4 [0, 65535] { R7900 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R7900 += 1, R7070 += 1, R5993 += 1, R5994 += 1 };
  s2 -> s3 [0, 65535] { R7900 += 1, R7070 += 1, R5994 += 1, R5 += 1 };
  s3 -> s4 [0, 65535] { R7900 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R7900 += 1, R7070 += 1, R5994 += 1, R5 += 1 };
  s3 -> s6 [0, 65535] { R7900 += 1, R7070 += 1 };
  s4 -> s4 [0, 65535] { R7900 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R7900 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7900 += 1, R7070 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_9 {
  init s0;
  s0 -> s1 [0, 43] { R7902 += 1, R7856 += 1 };
  s0 -> s2 [0, 65535] { R7902 += 1, R7855 += 1, R7856 += 1 };
  s0 -> s0 [0, 65535] { R7901 += 1, R7902 += 1 };
  s0 -> s1 [45, 63] { R7902 += 1, R7856 += 1 };
  s0 -> s3 [88, 88] { R7902 += 1, R7856 += 1 };
  s0 -> s1 [89, 65535] { R7902 += 1, R7856 += 1 };
  s1 -> s1 [0, 43] { R7902 += 1, R7856 += 1 };
  s1 -> s1 [45, 63] { R7902 += 1, R7856 += 1 };
  s1 -> s3 [88, 88] { R7902 += 1, R7856 += 1 };
  s1 -> s1 [89, 65535] { R7902 += 1, R7856 += 1 };
  s2 -> s1 [0, 43] { R7902 += 1, R7856 += 1 };
  s2 -> s2 [0, 65535] { R7902 += 1, R7855 += 1, R7856 += 1 };
  s2 -> s1 [45, 63] { R7902 += 1, R7856 += 1 };
  s2 -> s3 [88, 88] { R7902 += 1, R7856 += 1 };
  s2 -> s1 [89, 65535] { R7902 += 1, R7856 += 1 };
  s3 -> s3 [0, 43] { R7902 += 1, R7856 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R7902 += 1 };
  s3 -> s3 [45, 63] { R7902 += 1, R7856 += 1 };
  s3 -> s3 [88, 65535] { R7902 += 1, R7856 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton uri_10 {
  init s0;
  s0 -> s1 [0, 65535] { R7904 += 1, R7858 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R7903 += 1, R7904 += 1 };
  s0 -> s2 [0, 65535] { R7904 += 1, R7857 += 1, R7858 += 1 };
  s1 -> s1 [0, 65535] { R7904 += 1, R7858 += 1, R2 += 1 };
  s1 -> s4 [0, 65535] { R7904 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R7904 += 1, R7858 += 1, R2 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R7904 += 1, R7857 += 1, R7858 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R7904 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_11 {
  init s0;
  s0 -> s1 [0, 57] { R7906 += 1, R7860 += 1 };
  s0 -> s2 [0, 65535] { R7906 += 1, R7859 += 1, R7860 += 1 };
  s0 -> s0 [0, 65535] { R7905 += 1, R7906 += 1 };
  s0 -> s3 [0, 65535] { R7906 += 1, R7860 += 1, R10 += 1 };
  s0 -> s4 [58, 58] { R7906 += 1, R7860 += 1 };
  s0 -> s1 [59, 65535] { R7906 += 1, R7860 += 1 };
  s1 -> s1 [0, 57] { R7906 += 1, R7860 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R7906 += 1 };
  s1 -> s4 [58, 58] { R7906 += 1, R7860 += 1 };
  s1 -> s1 [59, 65535] { R7906 += 1, R7860 += 1 };
  s2 -> s1 [0, 57] { R7906 += 1, R7860 += 1 };
  s2 -> s2 [0, 65535] { R7906 += 1, R7859 += 1, R7860 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R7906 += 1, R7860 += 1, R10 += 1 };
  s2 -> s4 [58, 58] { R7906 += 1, R7860 += 1 };
  s2 -> s1 [59, 65535] { R7906 += 1, R7860 += 1 };
  s3 -> s1 [0, 57] { R7906 += 1, R7860 += 1 };
  s3 -> s5 [0, 65535] { R7906 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R7906 += 1, R7860 += 1, R10 += 1 };
  s3 -> s4 [58, 58] { R7906 += 1, R7860 += 1 };
  s3 -> s1 [59, 65535] { R7906 += 1, R7860 += 1 };
  s4 -> s4 [0, 65535] { R7906 += 1, R7860 += 1 };
  s5 -> s5 [0, 65535] { R7906 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s5, s2, s6, s1, s0;
};
automaton uri_12 {
  init s0;
  s0 -> s1 [0, 87] { R7908 += 1, R7862 += 1 };
  s0 -> s2 [0, 65535] { R7908 += 1, R7862 += 1, R11 += 1 };
  s0 -> s0 [0, 65535] { R7907 += 1, R7908 += 1 };
  s0 -> s3 [0, 65535] { R7908 += 1, R7861 += 1, R7862 += 1 };
  s0 -> s4 [88, 88] { R7908 += 1, R7862 += 1 };
  s0 -> s1 [89, 65535] { R7908 += 1, R7862 += 1 };
  s1 -> s1 [0, 87] { R7908 += 1, R7862 += 1 };
  s1 -> s1 [0, 65535] { R7908 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s4 [88, 88] { R7908 += 1, R7862 += 1 };
  s1 -> s1 [89, 65535] { R7908 += 1, R7862 += 1 };
  s2 -> s1 [0, 87] { R7908 += 1, R7862 += 1 };
  s2 -> s2 [0, 65535] { R7908 += 1, R7862 += 1, R11 += 1 };
  s2 -> s6 [0, 65535] { R7908 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s4 [88, 88] { R7908 += 1, R7862 += 1 };
  s2 -> s1 [89, 65535] { R7908 += 1, R7862 += 1 };
  s3 -> s1 [0, 87] { R7908 += 1, R7862 += 1 };
  s3 -> s2 [0, 65535] { R7908 += 1, R7862 += 1, R11 += 1 };
  s3 -> s3 [0, 65535] { R7908 += 1, R7861 += 1, R7862 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s4 [88, 88] { R7908 += 1, R7862 += 1 };
  s3 -> s1 [89, 65535] { R7908 += 1, R7862 += 1 };
  s4 -> s4 [0, 65535] { R7908 += 1, R7862 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7908 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s5, s2, s6, s1, s0;
};
automaton uri_13 {
  init s0;
  s0 -> s1 [0, 90] { R7910 += 1, R7864 += 1, R5996 += 1 };
  s0 -> s2 [0, 65535] { R7910 += 1, R7864 += 1, R5995 += 1, R5996 += 1 };
  s0 -> s3 [0, 65535] { R7910 += 1, R7863 += 1, R7864 += 1 };
  s0 -> s0 [0, 65535] { R7909 += 1, R7910 += 1 };
  s0 -> s4 [91, 91] { R7910 += 1, R7864 += 1, R5996 += 1 };
  s0 -> s1 [92, 65535] { R7910 += 1, R7864 += 1, R5996 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R7910 += 1, R7864 += 1, R5996 += 1 };
  s1 -> s7 [0, 65535] { R7910 += 1, R7864 += 1 };
  s1 -> s6 [0, 65535] { R7910 += 1 };
  s2 -> s1 [0, 90] { R7910 += 1, R7864 += 1, R5996 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R7910 += 1, R7864 += 1, R5995 += 1, R5996 += 1 };
  s2 -> s6 [0, 65535] { R7910 += 1 };
  s2 -> s4 [91, 91] { R7910 += 1, R7864 += 1, R5996 += 1 };
  s2 -> s1 [92, 65535] { R7910 += 1, R7864 += 1, R5996 += 1 };
  s3 -> s1 [0, 90] { R7910 += 1, R7864 += 1, R5996 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R7910 += 1, R7864 += 1, R5995 += 1, R5996 += 1 };
  s3 -> s3 [0, 65535] { R7910 += 1, R7863 += 1, R7864 += 1 };
  s3 -> s4 [91, 91] { R7910 += 1, R7864 += 1, R5996 += 1 };
  s3 -> s1 [92, 65535] { R7910 += 1, R7864 += 1, R5996 += 1 };
  s4 -> s1 [0, 65535] { R7910 += 1, R7864 += 1, R5996 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7910 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R7910 += 1, R7864 += 1 };
  s7 -> s6 [0, 65535] { R7910 += 1 };
  accepting s3, s5, s2, s6, s1, s7, s0;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 65535] { R7912 += 1, R7865 += 1, R7866 += 1 };
  s0 -> s0 [0, 65535] { R7911 += 1, R7912 += 1 };
  s0 -> s2 [0, 65535] { R7912 += 1, R7866 += 1, R5997 += 1, R5998 += 1 };
  s0 -> s3 [0, 65535] { R7912 += 1, R7866 += 1, R5998 += 1, R6 += 1 };
  s1 -> s1 [0, 65535] { R7912 += 1, R7865 += 1, R7866 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R7912 += 1, R7866 += 1, R5997 += 1, R5998 += 1 };
  s1 -> s3 [0, 65535] { R7912 += 1, R7866 += 1, R5998 += 1, R6 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R7912 += 1, R7866 += 1, R5997 += 1, R5998 += 1 };
  s2 -> s6 [0, 65535] { R7912 += 1 };
  s2 -> s3 [0, 65535] { R7912 += 1, R7866 += 1, R5998 += 1, R6 += 1 };
  s3 -> s4 [0, 65535] { R7912 += 1, R7866 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R7912 += 1 };
  s3 -> s3 [0, 65535] { R7912 += 1, R7866 += 1, R5998 += 1, R6 += 1 };
  s4 -> s4 [0, 65535] { R7912 += 1, R7866 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R7912 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7912 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_15 {
  init s0;
  s0 -> s1 [0, 65535] { R7914 += 1, R7867 += 1, R7868 += 1 };
  s0 -> s2 [0, 65535] { R7914 += 1, R7868 += 1, R7832 += 1, R5990 += 1 };
  s0 -> s0 [0, 65535] { R7913 += 1, R7914 += 1 };
  s0 -> s3 [0, 65535] { R7914 += 1, R7868 += 1, R7831 += 1, R7832 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R7914 += 1, R7867 += 1, R7868 += 1 };
  s1 -> s2 [0, 65535] { R7914 += 1, R7868 += 1, R7832 += 1, R5990 += 1 };
  s1 -> s3 [0, 65535] { R7914 += 1, R7868 += 1, R7831 += 1, R7832 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R7914 += 1, R7868 += 1, R7832 += 1, R5990 += 1 };
  s2 -> s6 [0, 65535] { R7914 += 1, R7868 += 1 };
  s2 -> s5 [0, 65535] { R7914 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R7914 += 1, R7868 += 1, R7832 += 1, R5990 += 1 };
  s3 -> s3 [0, 65535] { R7914 += 1, R7868 += 1, R7831 += 1, R7832 += 1 };
  s3 -> s5 [0, 65535] { R7914 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R7914 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R7914 += 1, R7868 += 1 };
  s6 -> s5 [0, 65535] { R7914 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 65535] { R7916 += 1, R7870 += 1, R7833 += 1, R7834 += 1 };
  s0 -> s2 [0, 65535] { R7916 += 1, R7869 += 1, R7870 += 1 };
  s0 -> s0 [0, 65535] { R7915 += 1, R7916 += 1 };
  s0 -> s3 [108, 108] { R7916 += 1, R7870 += 1, R7834 += 1 };
  s1 -> s1 [0, 65535] { R7916 += 1, R7870 += 1, R7833 += 1, R7834 += 1 };
  s1 -> s3 [108, 108] { R7916 += 1, R7870 += 1, R7834 += 1 };
  s2 -> s1 [0, 65535] { R7916 += 1, R7870 += 1, R7833 += 1, R7834 += 1 };
  s2 -> s2 [0, 65535] { R7916 += 1, R7869 += 1, R7870 += 1 };
  s2 -> s3 [108, 108] { R7916 += 1, R7870 += 1, R7834 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R7916 += 1 };
  s3 -> s3 [0, 65535] { R7916 += 1, R7870 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R7916 += 1 };
  accepting s3, s4, s5;
};
automaton uri_17 {
  init s0;
  s0 -> s1 [0, 87] { R7918 += 1, R7872 += 1, R7840 += 1 };
  s0 -> s2 [0, 65535] { R7918 += 1, R7872 += 1, R7839 += 1, R7840 += 1 };
  s0 -> s0 [0, 65535] { R7917 += 1, R7918 += 1 };
  s0 -> s3 [0, 65535] { R7918 += 1, R7871 += 1, R7872 += 1 };
  s0 -> s4 [88, 88] { R7918 += 1, R7872 += 1, R7840 += 1 };
  s0 -> s1 [89, 65535] { R7918 += 1, R7872 += 1, R7840 += 1 };
  s1 -> s1 [0, 87] { R7918 += 1, R7872 += 1, R7840 += 1 };
  s1 -> s4 [88, 88] { R7918 += 1, R7872 += 1, R7840 += 1 };
  s1 -> s1 [89, 65535] { R7918 += 1, R7872 += 1, R7840 += 1 };
  s2 -> s1 [0, 87] { R7918 += 1, R7872 += 1, R7840 += 1 };
  s2 -> s2 [0, 65535] { R7918 += 1, R7872 += 1, R7839 += 1, R7840 += 1 };
  s2 -> s4 [88, 88] { R7918 += 1, R7872 += 1, R7840 += 1 };
  s2 -> s1 [89, 65535] { R7918 += 1, R7872 += 1, R7840 += 1 };
  s3 -> s1 [0, 87] { R7918 += 1, R7872 += 1, R7840 += 1 };
  s3 -> s2 [0, 65535] { R7918 += 1, R7872 += 1, R7839 += 1, R7840 += 1 };
  s3 -> s3 [0, 65535] { R7918 += 1, R7871 += 1, R7872 += 1 };
  s3 -> s4 [88, 88] { R7918 += 1, R7872 += 1, R7840 += 1 };
  s3 -> s1 [89, 65535] { R7918 += 1, R7872 += 1, R7840 += 1 };
  s4 -> s4 [0, 65535] { R7918 += 1, R7872 += 1, R7840 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R7918 += 1, R7872 += 1 };
  s4 -> s7 [0, 65535] { R7918 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7918 += 1, R7872 += 1 };
  s6 -> s7 [0, 65535] { R7918 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R7918 += 1 };
  accepting s4, s5, s6, s7;
};
automaton uri_18 {
  init s0;
  s0 -> s0 [0, 65535] { R7919 += 1, R7920 += 1 };
  s0 -> s1 [0, 65535] { R7920 += 1, R7874 += 1, R7842 += 1, R1 += 1 };
  s0 -> s2 [0, 65535] { R7920 += 1, R7874 += 1, R7841 += 1, R7842 += 1 };
  s0 -> s3 [0, 65535] { R7920 += 1, R7873 += 1, R7874 += 1 };
  s1 -> s1 [0, 65535] { R7920 += 1, R7874 += 1, R7842 += 1, R1 += 1 };
  s1 -> s5 [0, 65535] { R7920 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R7920 += 1, R7874 += 1 };
  s2 -> s1 [0, 65535] { R7920 += 1, R7874 += 1, R7842 += 1, R1 += 1 };
  s2 -> s5 [0, 65535] { R7920 += 1 };
  s2 -> s2 [0, 65535] { R7920 += 1, R7874 += 1, R7841 += 1, R7842 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R7920 += 1, R7874 += 1, R7842 += 1, R1 += 1 };
  s3 -> s2 [0, 65535] { R7920 += 1, R7874 += 1, R7841 += 1, R7842 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R7920 += 1, R7873 += 1, R7874 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R7920 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R7920 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R7920 += 1, R7874 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_19 {
  init s0;
  s0 -> s1 [0, 87] { R7922 += 1, R7876 += 1, R7844 += 1 };
  s0 -> s2 [0, 65535] { R7922 += 1, R7875 += 1, R7876 += 1 };
  s0 -> s3 [0, 65535] { R7922 += 1, R7876 += 1, R7843 += 1, R7844 += 1 };
  s0 -> s4 [0, 65535] { R7922 += 1, R7876 += 1, R7844 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R7921 += 1, R7922 += 1 };
  s0 -> s5 [88, 88] { R7922 += 1, R7876 += 1, R7844 += 1 };
  s0 -> s1 [89, 65535] { R7922 += 1, R7876 += 1, R7844 += 1 };
  s1 -> s1 [0, 87] { R7922 += 1, R7876 += 1, R7844 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R7922 += 1, R7876 += 1 };
  s1 -> s8 [0, 65535] { R7922 += 1 };
  s1 -> s5 [88, 88] { R7922 += 1, R7876 += 1, R7844 += 1 };
  s1 -> s1 [89, 65535] { R7922 += 1, R7876 += 1, R7844 += 1 };
  s2 -> s1 [0, 87] { R7922 += 1, R7876 += 1, R7844 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R7922 += 1, R7875 += 1, R7876 += 1 };
  s2 -> s3 [0, 65535] { R7922 += 1, R7876 += 1, R7843 += 1, R7844 += 1 };
  s2 -> s4 [0, 65535] { R7922 += 1, R7876 += 1, R7844 += 1, R7 += 1 };
  s2 -> s5 [88, 88] { R7922 += 1, R7876 += 1, R7844 += 1 };
  s2 -> s1 [89, 65535] { R7922 += 1, R7876 += 1, R7844 += 1 };
  s3 -> s1 [0, 87] { R7922 += 1, R7876 += 1, R7844 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R7922 += 1, R7876 += 1, R7843 += 1, R7844 += 1 };
  s3 -> s4 [0, 65535] { R7922 += 1, R7876 += 1, R7844 += 1, R7 += 1 };
  s3 -> s8 [0, 65535] { R7922 += 1 };
  s3 -> s5 [88, 88] { R7922 += 1, R7876 += 1, R7844 += 1 };
  s3 -> s1 [89, 65535] { R7922 += 1, R7876 += 1, R7844 += 1 };
  s4 -> s1 [0, 87] { R7922 += 1, R7876 += 1, R7844 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R7922 += 1, R7876 += 1 };
  s4 -> s4 [0, 65535] { R7922 += 1, R7876 += 1, R7844 += 1, R7 += 1 };
  s4 -> s8 [0, 65535] { R7922 += 1 };
  s4 -> s5 [88, 88] { R7922 += 1, R7876 += 1, R7844 += 1 };
  s4 -> s1 [89, 65535] { R7922 += 1, R7876 += 1, R7844 += 1 };
  s5 -> s5 [0, 65535] { R7922 += 1, R7876 += 1, R7844 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R7922 += 1, R7876 += 1 };
  s7 -> s8 [0, 65535] { R7922 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R7922 += 1 };
  accepting s3, s4, s8, s2, s6, s1, s7, s0;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 87] { R7924 += 1, R7878 += 1, R7846 += 1, R7826 += 1 };
  s0 -> s0 [0, 65535] { R7923 += 1, R7924 += 1 };
  s0 -> s2 [0, 65535] { R7924 += 1, R7878 += 1, R7846 += 1, R7825 += 1, R7826 += 1 };
  s0 -> s3 [0, 65535] { R7924 += 1, R7878 += 1, R7845 += 1, R7846 += 1 };
  s0 -> s4 [0, 65535] { R7924 += 1, R7877 += 1, R7878 += 1 };
  s0 -> s1 [89, 65535] { R7924 += 1, R7878 += 1, R7846 += 1, R7826 += 1 };
  s1 -> s1 [0, 87] { R7924 += 1, R7878 += 1, R7846 += 1, R7826 += 1 };
  s1 -> s1 [0, 65535] { R7924 += 1, R7878 += 1, R7846 += 1 };
  s1 -> s7 [0, 65535] { R7924 += 1, R7878 += 1 };
  s1 -> s6 [0, 65535] { R7924 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [89, 65535] { R7924 += 1, R7878 += 1, R7846 += 1, R7826 += 1 };
  s2 -> s1 [0, 87] { R7924 += 1, R7878 += 1, R7846 += 1, R7826 += 1 };
  s2 -> s7 [0, 65535] { R7924 += 1, R7878 += 1 };
  s2 -> s2 [0, 65535] { R7924 += 1, R7878 += 1, R7846 += 1, R7825 += 1, R7826 += 1 };
  s2 -> s6 [0, 65535] { R7924 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [89, 65535] { R7924 += 1, R7878 += 1, R7846 += 1, R7826 += 1 };
  s3 -> s1 [0, 87] { R7924 += 1, R7878 += 1, R7846 += 1, R7826 += 1 };
  s3 -> s2 [0, 65535] { R7924 += 1, R7878 += 1, R7846 += 1, R7825 += 1, R7826 += 1 };
  s3 -> s3 [0, 65535] { R7924 += 1, R7878 += 1, R7845 += 1, R7846 += 1 };
  s3 -> s6 [0, 65535] { R7924 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [89, 65535] { R7924 += 1, R7878 += 1, R7846 += 1, R7826 += 1 };
  s4 -> s1 [0, 87] { R7924 += 1, R7878 += 1, R7846 += 1, R7826 += 1 };
  s4 -> s2 [0, 65535] { R7924 += 1, R7878 += 1, R7846 += 1, R7825 += 1, R7826 += 1 };
  s4 -> s3 [0, 65535] { R7924 += 1, R7878 += 1, R7845 += 1, R7846 += 1 };
  s4 -> s4 [0, 65535] { R7924 += 1, R7877 += 1, R7878 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s1 [89, 65535] { R7924 += 1, R7878 += 1, R7846 += 1, R7826 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7924 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R7924 += 1, R7878 += 1 };
  s7 -> s6 [0, 65535] { R7924 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton uri_21 {
  init s0;
  s0 -> s1 [0, 65535] { R7926 += 1, R7880 += 1, R7848 += 1, R7827 += 1, R7828 += 1 };
  s0 -> s2 [0, 65535] { R7926 += 1, R7880 += 1, R7848 += 1, R7828 += 1, R5988 += 1 };
  s0 -> s3 [0, 65535] { R7926 += 1, R7880 += 1, R7847 += 1, R7848 += 1 };
  s0 -> s4 [0, 65535] { R7926 += 1, R7879 += 1, R7880 += 1 };
  s0 -> s0 [0, 65535] { R7925 += 1, R7926 += 1 };
  s1 -> s1 [0, 65535] { R7926 += 1, R7880 += 1, R7848 += 1, R7827 += 1, R7828 += 1 };
  s1 -> s2 [0, 65535] { R7926 += 1, R7880 += 1, R7848 += 1, R7828 += 1, R5988 += 1 };
  s1 -> s6 [0, 65535] { R7926 += 1 };
  s1 -> s8 [0, 65535] { R7926 += 1, R7880 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R7926 += 1, R7880 += 1, R7848 += 1 };
  s2 -> s2 [0, 65535] { R7926 += 1, R7880 += 1, R7848 += 1, R7828 += 1, R5988 += 1 };
  s2 -> s6 [0, 65535] { R7926 += 1 };
  s2 -> s8 [0, 65535] { R7926 += 1, R7880 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R7926 += 1, R7880 += 1, R7848 += 1, R7827 += 1, R7828 += 1 };
  s3 -> s2 [0, 65535] { R7926 += 1, R7880 += 1, R7848 += 1, R7828 += 1, R5988 += 1 };
  s3 -> s6 [0, 65535] { R7926 += 1 };
  s3 -> s3 [0, 65535] { R7926 += 1, R7880 += 1, R7847 += 1, R7848 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R7926 += 1, R7880 += 1, R7848 += 1, R7827 += 1, R7828 += 1 };
  s4 -> s2 [0, 65535] { R7926 += 1, R7880 += 1, R7848 += 1, R7828 += 1, R5988 += 1 };
  s4 -> s3 [0, 65535] { R7926 += 1, R7880 += 1, R7847 += 1, R7848 += 1 };
  s4 -> s4 [0, 65535] { R7926 += 1, R7879 += 1, R7880 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7926 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R7926 += 1, R7880 += 1, R7848 += 1 };
  s7 -> s6 [0, 65535] { R7926 += 1 };
  s7 -> s8 [0, 65535] { R7926 += 1, R7880 += 1 };
  s7 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R7926 += 1 };
  s8 -> s8 [0, 65535] { R7926 += 1, R7880 += 1 };
  s8 -> s5 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_22 {
  init s0;
  s0 -> s1 [0, 65535] { R7928 += 1, R7882 += 1, R7850 += 1, R7829 += 1, R7830 += 1 };
  s0 -> s0 [0, 65535] { R7927 += 1, R7928 += 1 };
  s0 -> s2 [0, 65535] { R7928 += 1, R7881 += 1, R7882 += 1 };
  s0 -> s3 [0, 65535] { R7928 += 1, R7882 += 1, R7849 += 1, R7850 += 1 };
  s0 -> s4 [99, 99] { R7928 += 1, R7882 += 1, R7850 += 1, R7830 += 1 };
  s1 -> s1 [0, 65535] { R7928 += 1, R7882 += 1, R7850 += 1, R7829 += 1, R7830 += 1 };
  s1 -> s4 [99, 99] { R7928 += 1, R7882 += 1, R7850 += 1, R7830 += 1 };
  s2 -> s1 [0, 65535] { R7928 += 1, R7882 += 1, R7850 += 1, R7829 += 1, R7830 += 1 };
  s2 -> s2 [0, 65535] { R7928 += 1, R7881 += 1, R7882 += 1 };
  s2 -> s3 [0, 65535] { R7928 += 1, R7882 += 1, R7849 += 1, R7850 += 1 };
  s2 -> s4 [99, 99] { R7928 += 1, R7882 += 1, R7850 += 1, R7830 += 1 };
  s3 -> s1 [0, 65535] { R7928 += 1, R7882 += 1, R7850 += 1, R7829 += 1, R7830 += 1 };
  s3 -> s3 [0, 65535] { R7928 += 1, R7882 += 1, R7849 += 1, R7850 += 1 };
  s3 -> s4 [99, 99] { R7928 += 1, R7882 += 1, R7850 += 1, R7830 += 1 };
  s4 -> s5 [97, 97] { R7928 += 1, R7882 += 1, R7850 += 1, R7830 += 1 };
  s5 -> s6 [108, 108] { R7928 += 1, R7882 += 1, R7850 += 1, R7830 += 1 };
  s6 -> s7 [104, 104] { R7928 += 1, R7882 += 1, R7850 += 1, R7830 += 1 };
  s7 -> s8 [111, 111] { R7928 += 1, R7882 += 1, R7850 += 1, R7830 += 1 };
  s8 -> s9 [115, 115] { R7928 += 1, R7882 += 1, R7850 += 1, R7830 += 1 };
  s9 -> s10 [116, 116] { R7928 += 1, R7882 += 1, R7850 += 1, R7830 += 1 };
  s10 -> s10 [0, 65535] { R7928 += 1, R7882 += 1, R7850 += 1 };
  s10 -> s11 [0, 65535];
  s10 -> s12 [0, 65535] { R7928 += 1 };
  s10 -> s13 [0, 65535] { R7928 += 1, R7882 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R7928 += 1 };
  s13 -> s11 [0, 65535];
  s13 -> s12 [0, 65535] { R7928 += 1 };
  s13 -> s13 [0, 65535] { R7928 += 1, R7882 += 1 };
  accepting s10, s11, s12, s13;
};
automaton uri_23 {
  init s0;
  s0 -> s1 [0, 65535] { R7930 += 1, R7884 += 1, R7851 += 1, R7852 += 1 };
  s0 -> s2 [0, 65535] { R7930 += 1, R7884 += 1, R7852 += 1, R7835 += 1, R7836 += 1 };
  s0 -> s3 [0, 65535] { R7930 += 1, R7884 += 1, R7852 += 1, R7836 += 1, R5989 += 1 };
  s0 -> s4 [0, 65535] { R7930 += 1, R7883 += 1, R7884 += 1 };
  s0 -> s0 [0, 65535] { R7929 += 1, R7930 += 1 };
  s1 -> s1 [0, 65535] { R7930 += 1, R7884 += 1, R7851 += 1, R7852 += 1 };
  s1 -> s2 [0, 65535] { R7930 += 1, R7884 += 1, R7852 += 1, R7835 += 1, R7836 += 1 };
  s1 -> s3 [0, 65535] { R7930 += 1, R7884 += 1, R7852 += 1, R7836 += 1, R5989 += 1 };
  s1 -> s7 [0, 65535] { R7930 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R7930 += 1, R7884 += 1, R7852 += 1, R7835 += 1, R7836 += 1 };
  s2 -> s3 [0, 65535] { R7930 += 1, R7884 += 1, R7852 += 1, R7836 += 1, R5989 += 1 };
  s2 -> s7 [0, 65535] { R7930 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s8 [0, 65535] { R7930 += 1, R7884 += 1 };
  s3 -> s3 [0, 65535] { R7930 += 1, R7884 += 1, R7852 += 1, R7836 += 1, R5989 += 1 };
  s3 -> s6 [0, 65535] { R7930 += 1, R7884 += 1, R7852 += 1 };
  s3 -> s7 [0, 65535] { R7930 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s8 [0, 65535] { R7930 += 1, R7884 += 1 };
  s4 -> s1 [0, 65535] { R7930 += 1, R7884 += 1, R7851 += 1, R7852 += 1 };
  s4 -> s2 [0, 65535] { R7930 += 1, R7884 += 1, R7852 += 1, R7835 += 1, R7836 += 1 };
  s4 -> s3 [0, 65535] { R7930 += 1, R7884 += 1, R7852 += 1, R7836 += 1, R5989 += 1 };
  s4 -> s4 [0, 65535] { R7930 += 1, R7883 += 1, R7884 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7930 += 1, R7884 += 1, R7852 += 1 };
  s6 -> s7 [0, 65535] { R7930 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s8 [0, 65535] { R7930 += 1, R7884 += 1 };
  s7 -> s7 [0, 65535] { R7930 += 1 };
  s7 -> s5 [0, 65535];
  s8 -> s7 [0, 65535] { R7930 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s8 [0, 65535] { R7930 += 1, R7884 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_24 {
  init s0;
  s0 -> s1 [0, 65535] { R7932 += 1, R7886 += 1, R7854 += 1, R7837 += 1, R7838 += 1 };
  s0 -> s2 [0, 65535] { R7932 += 1, R7885 += 1, R7886 += 1 };
  s0 -> s3 [0, 65535] { R7932 += 1, R7886 += 1, R7853 += 1, R7854 += 1 };
  s0 -> s0 [0, 65535] { R7931 += 1, R7932 += 1 };
  s0 -> s4 [111, 111] { R7932 += 1, R7886 += 1, R7854 += 1, R7838 += 1 };
  s1 -> s1 [0, 65535] { R7932 += 1, R7886 += 1, R7854 += 1, R7837 += 1, R7838 += 1 };
  s1 -> s4 [111, 111] { R7932 += 1, R7886 += 1, R7854 += 1, R7838 += 1 };
  s2 -> s1 [0, 65535] { R7932 += 1, R7886 += 1, R7854 += 1, R7837 += 1, R7838 += 1 };
  s2 -> s2 [0, 65535] { R7932 += 1, R7885 += 1, R7886 += 1 };
  s2 -> s3 [0, 65535] { R7932 += 1, R7886 += 1, R7853 += 1, R7854 += 1 };
  s2 -> s4 [111, 111] { R7932 += 1, R7886 += 1, R7854 += 1, R7838 += 1 };
  s3 -> s1 [0, 65535] { R7932 += 1, R7886 += 1, R7854 += 1, R7837 += 1, R7838 += 1 };
  s3 -> s3 [0, 65535] { R7932 += 1, R7886 += 1, R7853 += 1, R7854 += 1 };
  s3 -> s4 [111, 111] { R7932 += 1, R7886 += 1, R7854 += 1, R7838 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R7932 += 1, R7886 += 1, R7854 += 1 };
  s4 -> s6 [0, 65535] { R7932 += 1 };
  s4 -> s7 [0, 65535] { R7932 += 1, R7886 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7932 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R7932 += 1 };
  s7 -> s7 [0, 65535] { R7932 += 1, R7886 += 1 };
  accepting s4, s5, s6, s7;
};
};
constraint R1 = R7830 && R2 = R7854 && R3 = R7070 && R4 = R7932 && R15 = 0 && R16 = R7886 && R5995 = 0 && R5996 = 1 && R5997 = 0 && R5998 = 1 && R7063 - R7886 = 1 && R7064 = R7070 && R7065 - R7886 = 1 && R7066 = R7070 && R7067 - R7886 = 1 && R7068 = R7070 && R7069 - R7886 = 1 && R7829 = 0 && R7833 = 0 && R7834 = 0 && R7837 = 0 && R7838 = 0 && R7839 = 0 && R7840 = R7854 && R7841 = 0 && R7842 = R7854 && R7843 = 0 && R7844 = R7854 && R7845 = 0 && R7846 = R7854 && R7847 = 0 && R7848 = R7854 && R7849 = 0 && R7850 = R7854 && R7851 = 0 && R7852 = R7854 && R7853 = 0 && R7855 = 0 && R7856 = R7886 && R7857 = 0 && R7858 = R7886 && R7859 = 0 && R7860 = R7886 && R7861 = 0 && R7862 = R7886 && R7863 = 0 && R7864 = R7886 && R7865 = 0 && R7866 = R7886 && R7867 = 0 && R7868 = R7886 && R7869 = 0 && R7870 = R7886 && R7871 = 0 && R7872 = R7886 && R7873 = 0 && R7874 = R7886 && R7875 = 0 && R7876 = R7886 && R7877 = 0 && R7878 = R7886 && R7879 = 0 && R7880 = R7886 && R7881 = 0 && R7882 = R7886 && R7883 = 0 && R7884 = R7886 && R7885 = 0 && R7887 = 10 && R7888 = R7932 && R7889 = 10 && R7890 = R7932 && R7891 = 10 && R7892 = R7932 && R7893 = 10 && R7894 = R7932 && R7895 = 10 && R7896 = R7932 && R7897 = 10 && R7898 = R7932 && R7899 = 10 && R7900 = R7932 && R7901 = 10 && R7902 = R7932 && R7903 = 10 && R7904 = R7932 && R7905 = 10 && R7906 = R7932 && R7907 = 10 && R7908 = R7932 && R7909 = 10 && R7910 = R7932 && R7911 = 10 && R7912 = R7932 && R7913 = 10 && R7914 = R7932 && R7915 = 10 && R7916 = R7932 && R7917 = 10 && R7918 = R7932 && R7919 = 10 && R7920 = R7932 && R7921 = 10 && R7922 = R7932 && R7923 = 10 && R7924 = R7932 && R7925 = 10 && R7926 = R7932 && R7927 = 10 && R7928 = R7932 && R7929 = 10 && R7930 = R7932 && R7931 = 10 && R0 != 0 && R7 < 1 && R10 < 1 && R11 < 1 && R7886 < R7070 && -1 < R7830 && 0 < R7854 && -1 < R7886 && 9 < R7932 && (R5991 != 0 || ((R5 != 0 || ((R0 != R5992 || R5992 = 1 || R5992 < 0) && (R0 = R5992 || R5992 = 1 || R0 < 1))) && (R5 = 0 || ((R0 != R5992 || R5992 = 1 || R5992 < 0) && (R5992 != 1 || -1 < R0) && (R0 = R5992 || R5992 = 1))))) && (R5993 != 0 || ((R5 != 0 || ((R0 != R5994 || R5994 = 1 || R5994 < 0) && (R0 = R5994 || R5994 = 1 || R0 < 1))) && (R5 = 0 || ((R0 != R5994 || R5994 = 1 || R5994 < 0) && (R5994 != 1 || -1 < R0) && (R0 = R5994 || R5994 = 1))))) && (R7825 != 0 || R7826 = R7830 || (R5988 = 0 && R7830 = 0)) && (R7827 != 0 || R7828 = R7830 || (R5988 = 0 && R7830 = 0)) && (R5989 = 0 || (R7835 = 0 && R7836 = 0)) && (R5990 = 0 || (R7831 = 0 && R7832 = 0)) && (R5991 = 0 || (R5 = 0 && R0 < 0)) && (R5993 = 0 || (R5 = 0 && R0 < 0)) && (R7825 = 0 || (R5988 = 0 && R7830 = 0)) && (R7827 = 0 || (R5988 = 0 && R7830 = 0));
// End of Parikh automata intersection problem
