// Parikh automata intersection problem, generated by OSTRICH+
counter int R0, R1, R10, R11, R15, R16, R2, R3, R4, R5, R5988, R5989, R5990, R5991, R5992, R5993, R5994, R5995, R5996, R5997, R5998, R6, R7, R7063, R7064, R7065, R7066, R7067, R7068, R7069, R7070, R7071, R7072, R7073, R7074, R7075, R7076, R7077, R7078, R7079, R7080, R7081, R7082, R7083, R7084, R7085, R7086, R7087, R7088, R7089, R7090, R7091, R7092, R7093, R7094, R7095, R7096, R7097, R7098, R7099, R7100, R7101, R7102, R7103, R7104, R7105, R7106, R7107, R7108, R7109, R7110, R7111, R7112, R7113, R7114, R7115, R7116, R7117, R7118, R7119, R7120, R7121, R7122, R7123, R7124, R7125, R7126, R7127, R7128, R7129, R7130, R7131, R7132, R7133, R7134, R7135, R7136, R7137, R7138, R7139, R7140, R7141, R7142, R7143, R7144, R7145, R7146, R7147, R7148, R7149, R7150, R7151, R7152, R7153, R7154, R7155, R7156, R7157, R7158, R7159, R7160, R7161, R7162, R7163, R7164, R7165, R7166, R7167, R7168, R7169, R7170, R7171, R7172, R7173, R7174, R7175, R7176;
synchronised {  // Automata constraining P59
automaton P59_0 {
  init s0;
  s0 -> s1 [120, 120];
  accepting s1;
};
};
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R4 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 45] { R7132 += 1 };
  s0 -> s0 [0, 65535] { R7131 += 1, R7132 += 1 };
  s0 -> s2 [46, 46] { R7132 += 1 };
  s0 -> s3 [47, 47] { R7132 += 1 };
  s0 -> s1 [48, 65535] { R7132 += 1 };
  s1 -> s1 [0, 45] { R7132 += 1 };
  s1 -> s2 [46, 46] { R7132 += 1 };
  s1 -> s3 [47, 47] { R7132 += 1 };
  s1 -> s1 [48, 65535] { R7132 += 1 };
  s2 -> s1 [0, 45] { R7132 += 1 };
  s2 -> s2 [46, 46] { R7132 += 1 };
  s2 -> s3 [47, 47] { R7132 += 1 };
  s2 -> s1 [48, 114] { R7132 += 1 };
  s2 -> s8 [115, 115] { R7132 += 1 };
  s2 -> s1 [116, 65535] { R7132 += 1 };
  s3 -> s3 [0, 45] { R7132 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s4 [46, 46] { R7132 += 1 };
  s3 -> s3 [47, 65535] { R7132 += 1 };
  s4 -> s3 [0, 45] { R7132 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s4 [46, 46] { R7132 += 1 };
  s4 -> s3 [47, 114] { R7132 += 1 };
  s4 -> s5 [115, 115] { R7132 += 1 };
  s4 -> s3 [116, 65535] { R7132 += 1 };
  s5 -> s3 [0, 45] { R7132 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s4 [46, 46] { R7132 += 1 };
  s5 -> s3 [47, 110] { R7132 += 1 };
  s5 -> s6 [111, 111] { R7132 += 1 };
  s5 -> s3 [112, 65535] { R7132 += 1 };
  s6 -> s3 [0, 45] { R7132 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s4 [46, 46] { R7132 += 1 };
  s6 -> s3 [47, 98] { R7132 += 1 };
  s6 -> s7 [99, 99] { R7132 += 1 };
  s6 -> s3 [100, 65535] { R7132 += 1 };
  s7 -> s3 [0, 45] { R7132 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s4 [46, 46] { R7132 += 1 };
  s7 -> s3 [47, 106] { R7132 += 1 };
  s7 -> s3 [108, 65535] { R7132 += 1 };
  s8 -> s1 [0, 45] { R7132 += 1 };
  s8 -> s2 [46, 46] { R7132 += 1 };
  s8 -> s3 [47, 47] { R7132 += 1 };
  s8 -> s1 [48, 110] { R7132 += 1 };
  s8 -> s9 [111, 111] { R7132 += 1 };
  s8 -> s1 [112, 65535] { R7132 += 1 };
  s9 -> s1 [0, 45] { R7132 += 1 };
  s9 -> s2 [46, 46] { R7132 += 1 };
  s9 -> s3 [47, 47] { R7132 += 1 };
  s9 -> s1 [48, 98] { R7132 += 1 };
  s9 -> s10 [99, 99] { R7132 += 1 };
  s9 -> s1 [100, 65535] { R7132 += 1 };
  s10 -> s1 [0, 45] { R7132 += 1 };
  s10 -> s2 [46, 46] { R7132 += 1 };
  s10 -> s3 [47, 47] { R7132 += 1 };
  s10 -> s1 [48, 106] { R7132 += 1 };
  s10 -> s1 [108, 65535] { R7132 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_3 {
  init s0;
  s0 -> s0 [0, 65535] { R7133 += 1, R7134 += 1 };
  s0 -> s1 [0, 65535] { R7134 += 1, R3 += 1 };
  s1 -> s1 [0, 65535] { R7134 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s1 [0, 46] { R7136 += 1, R16 += 1 };
  s0 -> s2 [0, 65535] { R7136 += 1, R15 += 1, R16 += 1 };
  s0 -> s0 [0, 65535] { R7135 += 1, R7136 += 1 };
  s0 -> s3 [47, 47] { R7136 += 1 };
  s0 -> s1 [48, 65535] { R7136 += 1, R16 += 1 };
  s1 -> s1 [0, 46] { R7136 += 1, R16 += 1 };
  s1 -> s3 [47, 47] { R7136 += 1 };
  s1 -> s1 [48, 65535] { R7136 += 1, R16 += 1 };
  s2 -> s1 [0, 46] { R7136 += 1, R16 += 1 };
  s2 -> s2 [0, 65535] { R7136 += 1, R15 += 1, R16 += 1 };
  s2 -> s3 [47, 47] { R7136 += 1 };
  s2 -> s1 [48, 65535] { R7136 += 1, R16 += 1 };
  s3 -> s3 [0, 65535] { R7136 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 36] { R7138 += 1, R7064 += 1 };
  s0 -> s2 [0, 65535] { R7138 += 1, R7063 += 1, R7064 += 1 };
  s0 -> s0 [0, 65535] { R7137 += 1, R7138 += 1 };
  s0 -> s1 [38, 42] { R7138 += 1, R7064 += 1 };
  s0 -> s1 [44, 45] { R7138 += 1, R7064 += 1 };
  s0 -> s1 [47, 62] { R7138 += 1, R7064 += 1 };
  s0 -> s1 [64, 65535] { R7138 += 1, R7064 += 1 };
  s1 -> s1 [0, 36] { R7138 += 1, R7064 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R7138 += 1 };
  s1 -> s1 [38, 42] { R7138 += 1, R7064 += 1 };
  s1 -> s1 [44, 45] { R7138 += 1, R7064 += 1 };
  s1 -> s1 [47, 62] { R7138 += 1, R7064 += 1 };
  s1 -> s1 [64, 65535] { R7138 += 1, R7064 += 1 };
  s2 -> s1 [0, 36] { R7138 += 1, R7064 += 1 };
  s2 -> s2 [0, 65535] { R7138 += 1, R7063 += 1, R7064 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [38, 42] { R7138 += 1, R7064 += 1 };
  s2 -> s1 [44, 45] { R7138 += 1, R7064 += 1 };
  s2 -> s1 [47, 62] { R7138 += 1, R7064 += 1 };
  s2 -> s1 [64, 65535] { R7138 += 1, R7064 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_6 {
  init s0;
  s0 -> s1 [0, 65535] { R7140 += 1, R7065 += 1, R7066 += 1 };
  s0 -> s0 [0, 65535] { R7139 += 1, R7140 += 1 };
  s0 -> s2 [0, 65535] { R7140 += 1, R7066 += 1, R0 += 1 };
  s1 -> s1 [0, 65535] { R7140 += 1, R7065 += 1, R7066 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R7140 += 1, R7066 += 1, R0 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R7140 += 1 };
  s2 -> s2 [0, 65535] { R7140 += 1, R7066 += 1, R0 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R7140 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_7 {
  init s0;
  s0 -> s1 [0, 62] { R7142 += 1, R7068 += 1, R5992 += 1 };
  s0 -> s2 [0, 65535] { R7142 += 1, R7068 += 1, R5991 += 1, R5992 += 1 };
  s0 -> s0 [0, 65535] { R7141 += 1, R7142 += 1 };
  s0 -> s3 [0, 65535] { R7142 += 1, R7067 += 1, R7068 += 1 };
  s0 -> s4 [63, 63] { R7142 += 1, R7068 += 1, R5992 += 1 };
  s0 -> s1 [64, 65535] { R7142 += 1, R7068 += 1, R5992 += 1 };
  s1 -> s6 [0, 65535] { R7142 += 1 };
  s1 -> s1 [0, 65535] { R7142 += 1, R7068 += 1, R5992 += 1 };
  s1 -> s7 [0, 65535] { R7142 += 1, R7068 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 62] { R7142 += 1, R7068 += 1, R5992 += 1 };
  s2 -> s6 [0, 65535] { R7142 += 1 };
  s2 -> s2 [0, 65535] { R7142 += 1, R7068 += 1, R5991 += 1, R5992 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s4 [63, 63] { R7142 += 1, R7068 += 1, R5992 += 1 };
  s2 -> s1 [64, 65535] { R7142 += 1, R7068 += 1, R5992 += 1 };
  s3 -> s1 [0, 62] { R7142 += 1, R7068 += 1, R5992 += 1 };
  s3 -> s2 [0, 65535] { R7142 += 1, R7068 += 1, R5991 += 1, R5992 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R7142 += 1, R7067 += 1, R7068 += 1 };
  s3 -> s4 [63, 63] { R7142 += 1, R7068 += 1, R5992 += 1 };
  s3 -> s1 [64, 65535] { R7142 += 1, R7068 += 1, R5992 += 1 };
  s4 -> s1 [0, 65535] { R7142 += 1, R7068 += 1, R5992 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7142 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R7142 += 1 };
  s7 -> s7 [0, 65535] { R7142 += 1, R7068 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s5, s2, s6, s1, s7, s0;
};
automaton uri_8 {
  init s0;
  s0 -> s1 [0, 65535] { R7144 += 1, R7070 += 1, R5994 += 1, R5 += 1 };
  s0 -> s2 [0, 65535] { R7144 += 1, R7070 += 1, R5993 += 1, R5994 += 1 };
  s0 -> s3 [0, 65535] { R7144 += 1, R7069 += 1, R7070 += 1 };
  s0 -> s0 [0, 65535] { R7143 += 1, R7144 += 1 };
  s1 -> s5 [0, 65535] { R7144 += 1 };
  s1 -> s1 [0, 65535] { R7144 += 1, R7070 += 1, R5994 += 1, R5 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R7144 += 1, R7070 += 1 };
  s2 -> s5 [0, 65535] { R7144 += 1 };
  s2 -> s1 [0, 65535] { R7144 += 1, R7070 += 1, R5994 += 1, R5 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R7144 += 1, R7070 += 1, R5993 += 1, R5994 += 1 };
  s3 -> s1 [0, 65535] { R7144 += 1, R7070 += 1, R5994 += 1, R5 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R7144 += 1, R7070 += 1, R5993 += 1, R5994 += 1 };
  s3 -> s3 [0, 65535] { R7144 += 1, R7069 += 1, R7070 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R7144 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R7144 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R7144 += 1, R7070 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_9 {
  init s0;
  s0 -> s1 [0, 43] { R7146 += 1, R7100 += 1 };
  s0 -> s2 [0, 65535] { R7146 += 1, R7099 += 1, R7100 += 1 };
  s0 -> s0 [0, 65535] { R7145 += 1, R7146 += 1 };
  s0 -> s1 [45, 63] { R7146 += 1, R7100 += 1 };
  s0 -> s3 [88, 88] { R7146 += 1, R7100 += 1 };
  s0 -> s1 [89, 65535] { R7146 += 1, R7100 += 1 };
  s1 -> s1 [0, 43] { R7146 += 1, R7100 += 1 };
  s1 -> s1 [45, 63] { R7146 += 1, R7100 += 1 };
  s1 -> s3 [88, 88] { R7146 += 1, R7100 += 1 };
  s1 -> s1 [89, 65535] { R7146 += 1, R7100 += 1 };
  s2 -> s1 [0, 43] { R7146 += 1, R7100 += 1 };
  s2 -> s2 [0, 65535] { R7146 += 1, R7099 += 1, R7100 += 1 };
  s2 -> s1 [45, 63] { R7146 += 1, R7100 += 1 };
  s2 -> s3 [88, 88] { R7146 += 1, R7100 += 1 };
  s2 -> s1 [89, 65535] { R7146 += 1, R7100 += 1 };
  s3 -> s3 [0, 43] { R7146 += 1, R7100 += 1 };
  s3 -> s3 [0, 65535] { R7146 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [45, 63] { R7146 += 1, R7100 += 1 };
  s3 -> s3 [88, 65535] { R7146 += 1, R7100 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton uri_10 {
  init s0;
  s0 -> s0 [0, 65535] { R7147 += 1, R7148 += 1 };
  s0 -> s1 [0, 65535] { R7148 += 1, R7102 += 1, R2 += 1 };
  s0 -> s2 [0, 65535] { R7148 += 1, R7101 += 1, R7102 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R7148 += 1, R7102 += 1, R2 += 1 };
  s1 -> s4 [0, 65535] { R7148 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R7148 += 1, R7102 += 1, R2 += 1 };
  s2 -> s2 [0, 65535] { R7148 += 1, R7101 += 1, R7102 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R7148 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_11 {
  init s0;
  s0 -> s1 [0, 57] { R7150 += 1, R7104 += 1 };
  s0 -> s0 [0, 65535] { R7149 += 1, R7150 += 1 };
  s0 -> s2 [0, 65535] { R7150 += 1, R7103 += 1, R7104 += 1 };
  s0 -> s3 [0, 65535] { R7150 += 1, R7104 += 1, R10 += 1 };
  s0 -> s4 [58, 58] { R7150 += 1, R7104 += 1 };
  s0 -> s1 [59, 65535] { R7150 += 1, R7104 += 1 };
  s1 -> s1 [0, 57] { R7150 += 1, R7104 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R7150 += 1 };
  s1 -> s4 [58, 58] { R7150 += 1, R7104 += 1 };
  s1 -> s1 [59, 65535] { R7150 += 1, R7104 += 1 };
  s2 -> s1 [0, 57] { R7150 += 1, R7104 += 1 };
  s2 -> s2 [0, 65535] { R7150 += 1, R7103 += 1, R7104 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R7150 += 1, R7104 += 1, R10 += 1 };
  s2 -> s4 [58, 58] { R7150 += 1, R7104 += 1 };
  s2 -> s1 [59, 65535] { R7150 += 1, R7104 += 1 };
  s3 -> s1 [0, 57] { R7150 += 1, R7104 += 1 };
  s3 -> s5 [0, 65535] { R7150 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R7150 += 1, R7104 += 1, R10 += 1 };
  s3 -> s4 [58, 58] { R7150 += 1, R7104 += 1 };
  s3 -> s1 [59, 65535] { R7150 += 1, R7104 += 1 };
  s4 -> s4 [0, 65535] { R7150 += 1, R7104 += 1 };
  s5 -> s5 [0, 65535] { R7150 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s5, s2, s6, s1, s0;
};
automaton uri_12 {
  init s0;
  s0 -> s1 [0, 87] { R7152 += 1, R7106 += 1 };
  s0 -> s0 [0, 65535] { R7151 += 1, R7152 += 1 };
  s0 -> s2 [0, 65535] { R7152 += 1, R7106 += 1, R11 += 1 };
  s0 -> s3 [0, 65535] { R7152 += 1, R7105 += 1, R7106 += 1 };
  s0 -> s4 [88, 88] { R7152 += 1, R7106 += 1 };
  s0 -> s1 [89, 65535] { R7152 += 1, R7106 += 1 };
  s1 -> s1 [0, 87] { R7152 += 1, R7106 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R7152 += 1 };
  s1 -> s4 [88, 88] { R7152 += 1, R7106 += 1 };
  s1 -> s1 [89, 65535] { R7152 += 1, R7106 += 1 };
  s2 -> s1 [0, 87] { R7152 += 1, R7106 += 1 };
  s2 -> s6 [0, 65535] { R7152 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R7152 += 1, R7106 += 1, R11 += 1 };
  s2 -> s4 [88, 88] { R7152 += 1, R7106 += 1 };
  s2 -> s1 [89, 65535] { R7152 += 1, R7106 += 1 };
  s3 -> s1 [0, 87] { R7152 += 1, R7106 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R7152 += 1, R7106 += 1, R11 += 1 };
  s3 -> s3 [0, 65535] { R7152 += 1, R7105 += 1, R7106 += 1 };
  s3 -> s4 [88, 88] { R7152 += 1, R7106 += 1 };
  s3 -> s1 [89, 65535] { R7152 += 1, R7106 += 1 };
  s4 -> s4 [0, 65535] { R7152 += 1, R7106 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7152 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s5, s2, s6, s1, s0;
};
automaton uri_13 {
  init s0;
  s0 -> s1 [0, 90] { R7154 += 1, R7108 += 1, R5996 += 1 };
  s0 -> s0 [0, 65535] { R7153 += 1, R7154 += 1 };
  s0 -> s2 [0, 65535] { R7154 += 1, R7107 += 1, R7108 += 1 };
  s0 -> s3 [0, 65535] { R7154 += 1, R7108 += 1, R5995 += 1, R5996 += 1 };
  s0 -> s4 [91, 91] { R7154 += 1, R7108 += 1, R5996 += 1 };
  s0 -> s1 [92, 65535] { R7154 += 1, R7108 += 1, R5996 += 1 };
  s1 -> s1 [0, 65535] { R7154 += 1, R7108 += 1, R5996 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R7154 += 1, R7108 += 1 };
  s1 -> s6 [0, 65535] { R7154 += 1 };
  s2 -> s1 [0, 90] { R7154 += 1, R7108 += 1, R5996 += 1 };
  s2 -> s2 [0, 65535] { R7154 += 1, R7107 += 1, R7108 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R7154 += 1, R7108 += 1, R5995 += 1, R5996 += 1 };
  s2 -> s4 [91, 91] { R7154 += 1, R7108 += 1, R5996 += 1 };
  s2 -> s1 [92, 65535] { R7154 += 1, R7108 += 1, R5996 += 1 };
  s3 -> s1 [0, 90] { R7154 += 1, R7108 += 1, R5996 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R7154 += 1, R7108 += 1, R5995 += 1, R5996 += 1 };
  s3 -> s6 [0, 65535] { R7154 += 1 };
  s3 -> s4 [91, 91] { R7154 += 1, R7108 += 1, R5996 += 1 };
  s3 -> s1 [92, 65535] { R7154 += 1, R7108 += 1, R5996 += 1 };
  s4 -> s1 [0, 65535] { R7154 += 1, R7108 += 1, R5996 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7154 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R7154 += 1, R7108 += 1 };
  s7 -> s6 [0, 65535] { R7154 += 1 };
  accepting s3, s5, s2, s6, s1, s7, s0;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 65535] { R7156 += 1, R7110 += 1, R5997 += 1, R5998 += 1 };
  s0 -> s2 [0, 65535] { R7156 += 1, R7109 += 1, R7110 += 1 };
  s0 -> s3 [0, 65535] { R7156 += 1, R7110 += 1, R5998 += 1, R6 += 1 };
  s0 -> s0 [0, 65535] { R7155 += 1, R7156 += 1 };
  s1 -> s1 [0, 65535] { R7156 += 1, R7110 += 1, R5997 += 1, R5998 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s3 [0, 65535] { R7156 += 1, R7110 += 1, R5998 += 1, R6 += 1 };
  s1 -> s5 [0, 65535] { R7156 += 1 };
  s2 -> s1 [0, 65535] { R7156 += 1, R7110 += 1, R5997 += 1, R5998 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R7156 += 1, R7109 += 1, R7110 += 1 };
  s2 -> s3 [0, 65535] { R7156 += 1, R7110 += 1, R5998 += 1, R6 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R7156 += 1, R7110 += 1, R5998 += 1, R6 += 1 };
  s3 -> s5 [0, 65535] { R7156 += 1 };
  s3 -> s6 [0, 65535] { R7156 += 1, R7110 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R7156 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R7156 += 1 };
  s6 -> s6 [0, 65535] { R7156 += 1, R7110 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_15 {
  init s0;
  s0 -> s1 [0, 65535] { R7158 += 1, R7112 += 1, R7076 += 1, R5990 += 1 };
  s0 -> s2 [0, 65535] { R7158 += 1, R7111 += 1, R7112 += 1 };
  s0 -> s0 [0, 65535] { R7157 += 1, R7158 += 1 };
  s0 -> s3 [0, 65535] { R7158 += 1, R7112 += 1, R7075 += 1, R7076 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R7158 += 1, R7112 += 1 };
  s1 -> s1 [0, 65535] { R7158 += 1, R7112 += 1, R7076 += 1, R5990 += 1 };
  s1 -> s5 [0, 65535] { R7158 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R7158 += 1, R7112 += 1, R7076 += 1, R5990 += 1 };
  s2 -> s2 [0, 65535] { R7158 += 1, R7111 += 1, R7112 += 1 };
  s2 -> s3 [0, 65535] { R7158 += 1, R7112 += 1, R7075 += 1, R7076 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R7158 += 1, R7112 += 1, R7076 += 1, R5990 += 1 };
  s3 -> s5 [0, 65535] { R7158 += 1 };
  s3 -> s3 [0, 65535] { R7158 += 1, R7112 += 1, R7075 += 1, R7076 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R7158 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R7158 += 1, R7112 += 1 };
  s6 -> s5 [0, 65535] { R7158 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 65535] { R7160 += 1, R7114 += 1, R7077 += 1, R7078 += 1 };
  s0 -> s0 [0, 65535] { R7159 += 1, R7160 += 1 };
  s0 -> s2 [0, 65535] { R7160 += 1, R7113 += 1, R7114 += 1 };
  s0 -> s3 [108, 108] { R7160 += 1, R7114 += 1, R7078 += 1 };
  s1 -> s1 [0, 65535] { R7160 += 1, R7114 += 1, R7077 += 1, R7078 += 1 };
  s1 -> s3 [108, 108] { R7160 += 1, R7114 += 1, R7078 += 1 };
  s2 -> s1 [0, 65535] { R7160 += 1, R7114 += 1, R7077 += 1, R7078 += 1 };
  s2 -> s2 [0, 65535] { R7160 += 1, R7113 += 1, R7114 += 1 };
  s2 -> s3 [108, 108] { R7160 += 1, R7114 += 1, R7078 += 1 };
  s3 -> s4 [0, 65535] { R7160 += 1 };
  s3 -> s3 [0, 65535] { R7160 += 1, R7114 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R7160 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5;
};
automaton uri_17 {
  init s0;
  s0 -> s1 [0, 87] { R7162 += 1, R7116 += 1, R7084 += 1 };
  s0 -> s2 [0, 65535] { R7162 += 1, R7115 += 1, R7116 += 1 };
  s0 -> s3 [0, 65535] { R7162 += 1, R7116 += 1, R7083 += 1, R7084 += 1 };
  s0 -> s0 [0, 65535] { R7161 += 1, R7162 += 1 };
  s0 -> s4 [88, 88] { R7162 += 1, R7116 += 1, R7084 += 1 };
  s0 -> s1 [89, 65535] { R7162 += 1, R7116 += 1, R7084 += 1 };
  s1 -> s1 [0, 87] { R7162 += 1, R7116 += 1, R7084 += 1 };
  s1 -> s4 [88, 88] { R7162 += 1, R7116 += 1, R7084 += 1 };
  s1 -> s1 [89, 65535] { R7162 += 1, R7116 += 1, R7084 += 1 };
  s2 -> s1 [0, 87] { R7162 += 1, R7116 += 1, R7084 += 1 };
  s2 -> s2 [0, 65535] { R7162 += 1, R7115 += 1, R7116 += 1 };
  s2 -> s3 [0, 65535] { R7162 += 1, R7116 += 1, R7083 += 1, R7084 += 1 };
  s2 -> s4 [88, 88] { R7162 += 1, R7116 += 1, R7084 += 1 };
  s2 -> s1 [89, 65535] { R7162 += 1, R7116 += 1, R7084 += 1 };
  s3 -> s1 [0, 87] { R7162 += 1, R7116 += 1, R7084 += 1 };
  s3 -> s3 [0, 65535] { R7162 += 1, R7116 += 1, R7083 += 1, R7084 += 1 };
  s3 -> s4 [88, 88] { R7162 += 1, R7116 += 1, R7084 += 1 };
  s3 -> s1 [89, 65535] { R7162 += 1, R7116 += 1, R7084 += 1 };
  s4 -> s5 [0, 65535] { R7162 += 1, R7116 += 1 };
  s4 -> s4 [0, 65535] { R7162 += 1, R7116 += 1, R7084 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R7162 += 1 };
  s5 -> s5 [0, 65535] { R7162 += 1, R7116 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R7162 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R7162 += 1 };
  accepting s4, s5, s6, s7;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 65535] { R7164 += 1, R7118 += 1, R7086 += 1, R1 += 1 };
  s0 -> s2 [0, 65535] { R7164 += 1, R7118 += 1, R7085 += 1, R7086 += 1 };
  s0 -> s0 [0, 65535] { R7163 += 1, R7164 += 1 };
  s0 -> s3 [0, 65535] { R7164 += 1, R7117 += 1, R7118 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R7164 += 1, R7118 += 1, R7086 += 1, R1 += 1 };
  s1 -> s6 [0, 65535] { R7164 += 1, R7118 += 1 };
  s1 -> s5 [0, 65535] { R7164 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R7164 += 1, R7118 += 1, R7086 += 1, R1 += 1 };
  s2 -> s2 [0, 65535] { R7164 += 1, R7118 += 1, R7085 += 1, R7086 += 1 };
  s2 -> s5 [0, 65535] { R7164 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R7164 += 1, R7118 += 1, R7086 += 1, R1 += 1 };
  s3 -> s2 [0, 65535] { R7164 += 1, R7118 += 1, R7085 += 1, R7086 += 1 };
  s3 -> s3 [0, 65535] { R7164 += 1, R7117 += 1, R7118 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R7164 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R7164 += 1, R7118 += 1 };
  s6 -> s5 [0, 65535] { R7164 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_19 {
  init s0;
  s0 -> s1 [0, 87] { R7166 += 1, R7120 += 1, R7088 += 1 };
  s0 -> s2 [0, 65535] { R7166 += 1, R7120 += 1, R7087 += 1, R7088 += 1 };
  s0 -> s0 [0, 65535] { R7165 += 1, R7166 += 1 };
  s0 -> s3 [0, 65535] { R7166 += 1, R7119 += 1, R7120 += 1 };
  s0 -> s4 [0, 65535] { R7166 += 1, R7120 += 1, R7088 += 1, R7 += 1 };
  s0 -> s5 [88, 88] { R7166 += 1, R7120 += 1, R7088 += 1 };
  s0 -> s1 [89, 65535] { R7166 += 1, R7120 += 1, R7088 += 1 };
  s1 -> s1 [0, 87] { R7166 += 1, R7120 += 1, R7088 += 1 };
  s1 -> s6 [0, 65535] { R7166 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R7166 += 1, R7120 += 1 };
  s1 -> s5 [88, 88] { R7166 += 1, R7120 += 1, R7088 += 1 };
  s1 -> s1 [89, 65535] { R7166 += 1, R7120 += 1, R7088 += 1 };
  s2 -> s1 [0, 87] { R7166 += 1, R7120 += 1, R7088 += 1 };
  s2 -> s2 [0, 65535] { R7166 += 1, R7120 += 1, R7087 += 1, R7088 += 1 };
  s2 -> s6 [0, 65535] { R7166 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [0, 65535] { R7166 += 1, R7120 += 1, R7088 += 1, R7 += 1 };
  s2 -> s5 [88, 88] { R7166 += 1, R7120 += 1, R7088 += 1 };
  s2 -> s1 [89, 65535] { R7166 += 1, R7120 += 1, R7088 += 1 };
  s3 -> s1 [0, 87] { R7166 += 1, R7120 += 1, R7088 += 1 };
  s3 -> s2 [0, 65535] { R7166 += 1, R7120 += 1, R7087 += 1, R7088 += 1 };
  s3 -> s3 [0, 65535] { R7166 += 1, R7119 += 1, R7120 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [0, 65535] { R7166 += 1, R7120 += 1, R7088 += 1, R7 += 1 };
  s3 -> s5 [88, 88] { R7166 += 1, R7120 += 1, R7088 += 1 };
  s3 -> s1 [89, 65535] { R7166 += 1, R7120 += 1, R7088 += 1 };
  s4 -> s1 [0, 87] { R7166 += 1, R7120 += 1, R7088 += 1 };
  s4 -> s6 [0, 65535] { R7166 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R7166 += 1, R7120 += 1, R7088 += 1, R7 += 1 };
  s4 -> s8 [0, 65535] { R7166 += 1, R7120 += 1 };
  s4 -> s5 [88, 88] { R7166 += 1, R7120 += 1, R7088 += 1 };
  s4 -> s1 [89, 65535] { R7166 += 1, R7120 += 1, R7088 += 1 };
  s5 -> s5 [0, 65535] { R7166 += 1, R7120 += 1, R7088 += 1 };
  s6 -> s6 [0, 65535] { R7166 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R7166 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R7166 += 1, R7120 += 1 };
  accepting s3, s4, s8, s2, s6, s1, s7, s0;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 87] { R7168 += 1, R7122 += 1, R7090 += 1, R7072 += 1 };
  s0 -> s2 [0, 65535] { R7168 += 1, R7122 += 1, R7090 += 1, R7071 += 1, R7072 += 1 };
  s0 -> s0 [0, 65535] { R7167 += 1, R7168 += 1 };
  s0 -> s3 [0, 65535] { R7168 += 1, R7121 += 1, R7122 += 1 };
  s0 -> s4 [0, 65535] { R7168 += 1, R7122 += 1, R7089 += 1, R7090 += 1 };
  s0 -> s1 [89, 65535] { R7168 += 1, R7122 += 1, R7090 += 1, R7072 += 1 };
  s1 -> s1 [0, 87] { R7168 += 1, R7122 += 1, R7090 += 1, R7072 += 1 };
  s1 -> s7 [0, 65535] { R7168 += 1, R7122 += 1 };
  s1 -> s1 [0, 65535] { R7168 += 1, R7122 += 1, R7090 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R7168 += 1 };
  s1 -> s1 [89, 65535] { R7168 += 1, R7122 += 1, R7090 += 1, R7072 += 1 };
  s2 -> s1 [0, 87] { R7168 += 1, R7122 += 1, R7090 += 1, R7072 += 1 };
  s2 -> s2 [0, 65535] { R7168 += 1, R7122 += 1, R7090 += 1, R7071 += 1, R7072 += 1 };
  s2 -> s7 [0, 65535] { R7168 += 1, R7122 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R7168 += 1 };
  s2 -> s1 [89, 65535] { R7168 += 1, R7122 += 1, R7090 += 1, R7072 += 1 };
  s3 -> s1 [0, 87] { R7168 += 1, R7122 += 1, R7090 += 1, R7072 += 1 };
  s3 -> s2 [0, 65535] { R7168 += 1, R7122 += 1, R7090 += 1, R7071 += 1, R7072 += 1 };
  s3 -> s3 [0, 65535] { R7168 += 1, R7121 += 1, R7122 += 1 };
  s3 -> s4 [0, 65535] { R7168 += 1, R7122 += 1, R7089 += 1, R7090 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [89, 65535] { R7168 += 1, R7122 += 1, R7090 += 1, R7072 += 1 };
  s4 -> s1 [0, 87] { R7168 += 1, R7122 += 1, R7090 += 1, R7072 += 1 };
  s4 -> s2 [0, 65535] { R7168 += 1, R7122 += 1, R7090 += 1, R7071 += 1, R7072 += 1 };
  s4 -> s4 [0, 65535] { R7168 += 1, R7122 += 1, R7089 += 1, R7090 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R7168 += 1 };
  s4 -> s1 [89, 65535] { R7168 += 1, R7122 += 1, R7090 += 1, R7072 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7168 += 1 };
  s7 -> s7 [0, 65535] { R7168 += 1, R7122 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R7168 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton uri_21 {
  init s0;
  s0 -> s1 [0, 65535] { R7170 += 1, R7124 += 1, R7091 += 1, R7092 += 1 };
  s0 -> s0 [0, 65535] { R7169 += 1, R7170 += 1 };
  s0 -> s2 [0, 65535] { R7170 += 1, R7124 += 1, R7092 += 1, R7073 += 1, R7074 += 1 };
  s0 -> s3 [0, 65535] { R7170 += 1, R7124 += 1, R7092 += 1, R7074 += 1, R5988 += 1 };
  s0 -> s4 [0, 65535] { R7170 += 1, R7123 += 1, R7124 += 1 };
  s1 -> s1 [0, 65535] { R7170 += 1, R7124 += 1, R7091 += 1, R7092 += 1 };
  s1 -> s7 [0, 65535] { R7170 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R7170 += 1, R7124 += 1, R7092 += 1, R7073 += 1, R7074 += 1 };
  s1 -> s3 [0, 65535] { R7170 += 1, R7124 += 1, R7092 += 1, R7074 += 1, R5988 += 1 };
  s2 -> s6 [0, 65535] { R7170 += 1, R7124 += 1 };
  s2 -> s7 [0, 65535] { R7170 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R7170 += 1, R7124 += 1, R7092 += 1, R7073 += 1, R7074 += 1 };
  s2 -> s3 [0, 65535] { R7170 += 1, R7124 += 1, R7092 += 1, R7074 += 1, R5988 += 1 };
  s3 -> s6 [0, 65535] { R7170 += 1, R7124 += 1 };
  s3 -> s7 [0, 65535] { R7170 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R7170 += 1, R7124 += 1, R7092 += 1, R7074 += 1, R5988 += 1 };
  s3 -> s8 [0, 65535] { R7170 += 1, R7124 += 1, R7092 += 1 };
  s4 -> s1 [0, 65535] { R7170 += 1, R7124 += 1, R7091 += 1, R7092 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R7170 += 1, R7124 += 1, R7092 += 1, R7073 += 1, R7074 += 1 };
  s4 -> s3 [0, 65535] { R7170 += 1, R7124 += 1, R7092 += 1, R7074 += 1, R5988 += 1 };
  s4 -> s4 [0, 65535] { R7170 += 1, R7123 += 1, R7124 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7170 += 1, R7124 += 1 };
  s6 -> s7 [0, 65535] { R7170 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R7170 += 1 };
  s7 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R7170 += 1, R7124 += 1 };
  s8 -> s7 [0, 65535] { R7170 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s8 [0, 65535] { R7170 += 1, R7124 += 1, R7092 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_22 {
  init s0;
  s0 -> s1 [0, 65535] { R7172 += 1, R7126 += 1, R7094 += 1 };
  s0 -> s2 [0, 65535] { R7172 += 1, R7125 += 1, R7126 += 1 };
  s0 -> s3 [0, 65535] { R7172 += 1, R7126 += 1, R7093 += 1, R7094 += 1 };
  s0 -> s0 [0, 65535] { R7171 += 1, R7172 += 1 };
  s1 -> s1 [0, 65535] { R7172 += 1, R7126 += 1, R7094 += 1 };
  s1 -> s4 [0, 65535] { R7172 += 1 };
  s1 -> s6 [0, 65535] { R7172 += 1, R7126 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R7172 += 1, R7126 += 1, R7094 += 1 };
  s2 -> s2 [0, 65535] { R7172 += 1, R7125 += 1, R7126 += 1 };
  s2 -> s3 [0, 65535] { R7172 += 1, R7126 += 1, R7093 += 1, R7094 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R7172 += 1, R7126 += 1, R7094 += 1 };
  s3 -> s3 [0, 65535] { R7172 += 1, R7126 += 1, R7093 += 1, R7094 += 1 };
  s3 -> s4 [0, 65535] { R7172 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R7172 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R7172 += 1 };
  s6 -> s6 [0, 65535] { R7172 += 1, R7126 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_23 {
  init s0;
  s0 -> s1 [0, 65535] { R7174 += 1, R7128 += 1, R7095 += 1, R7096 += 1 };
  s0 -> s2 [0, 65535] { R7174 += 1, R7128 += 1, R7096 += 1, R7079 += 1, R7080 += 1 };
  s0 -> s3 [0, 65535] { R7174 += 1, R7128 += 1, R7096 += 1, R7080 += 1, R5989 += 1 };
  s0 -> s0 [0, 65535] { R7173 += 1, R7174 += 1 };
  s0 -> s4 [0, 65535] { R7174 += 1, R7127 += 1, R7128 += 1 };
  s1 -> s6 [0, 65535] { R7174 += 1 };
  s1 -> s1 [0, 65535] { R7174 += 1, R7128 += 1, R7095 += 1, R7096 += 1 };
  s1 -> s2 [0, 65535] { R7174 += 1, R7128 += 1, R7096 += 1, R7079 += 1, R7080 += 1 };
  s1 -> s3 [0, 65535] { R7174 += 1, R7128 += 1, R7096 += 1, R7080 += 1, R5989 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R7174 += 1 };
  s2 -> s2 [0, 65535] { R7174 += 1, R7128 += 1, R7096 += 1, R7079 += 1, R7080 += 1 };
  s2 -> s7 [0, 65535] { R7174 += 1, R7128 += 1 };
  s2 -> s3 [0, 65535] { R7174 += 1, R7128 += 1, R7096 += 1, R7080 += 1, R5989 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R7174 += 1 };
  s3 -> s7 [0, 65535] { R7174 += 1, R7128 += 1 };
  s3 -> s3 [0, 65535] { R7174 += 1, R7128 += 1, R7096 += 1, R7080 += 1, R5989 += 1 };
  s3 -> s8 [0, 65535] { R7174 += 1, R7128 += 1, R7096 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R7174 += 1, R7128 += 1, R7095 += 1, R7096 += 1 };
  s4 -> s2 [0, 65535] { R7174 += 1, R7128 += 1, R7096 += 1, R7079 += 1, R7080 += 1 };
  s4 -> s3 [0, 65535] { R7174 += 1, R7128 += 1, R7096 += 1, R7080 += 1, R5989 += 1 };
  s4 -> s4 [0, 65535] { R7174 += 1, R7127 += 1, R7128 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7174 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R7174 += 1 };
  s7 -> s7 [0, 65535] { R7174 += 1, R7128 += 1 };
  s7 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R7174 += 1 };
  s8 -> s7 [0, 65535] { R7174 += 1, R7128 += 1 };
  s8 -> s8 [0, 65535] { R7174 += 1, R7128 += 1, R7096 += 1 };
  s8 -> s5 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_24 {
  init s0;
  s0 -> s1 [0, 65535] { R7176 += 1, R7130 += 1, R7098 += 1, R7081 += 1, R7082 += 1 };
  s0 -> s2 [0, 65535] { R7176 += 1, R7129 += 1, R7130 += 1 };
  s0 -> s0 [0, 65535] { R7175 += 1, R7176 += 1 };
  s0 -> s3 [0, 65535] { R7176 += 1, R7130 += 1, R7097 += 1, R7098 += 1 };
  s0 -> s4 [111, 111] { R7176 += 1, R7130 += 1, R7098 += 1, R7082 += 1 };
  s1 -> s1 [0, 65535] { R7176 += 1, R7130 += 1, R7098 += 1, R7081 += 1, R7082 += 1 };
  s1 -> s4 [111, 111] { R7176 += 1, R7130 += 1, R7098 += 1, R7082 += 1 };
  s2 -> s1 [0, 65535] { R7176 += 1, R7130 += 1, R7098 += 1, R7081 += 1, R7082 += 1 };
  s2 -> s2 [0, 65535] { R7176 += 1, R7129 += 1, R7130 += 1 };
  s2 -> s3 [0, 65535] { R7176 += 1, R7130 += 1, R7097 += 1, R7098 += 1 };
  s2 -> s4 [111, 111] { R7176 += 1, R7130 += 1, R7098 += 1, R7082 += 1 };
  s3 -> s1 [0, 65535] { R7176 += 1, R7130 += 1, R7098 += 1, R7081 += 1, R7082 += 1 };
  s3 -> s3 [0, 65535] { R7176 += 1, R7130 += 1, R7097 += 1, R7098 += 1 };
  s3 -> s4 [111, 111] { R7176 += 1, R7130 += 1, R7098 += 1, R7082 += 1 };
  s4 -> s5 [99, 99] { R7176 += 1, R7130 += 1, R7098 += 1, R7082 += 1 };
  s5 -> s6 [97, 97] { R7176 += 1, R7130 += 1, R7098 += 1, R7082 += 1 };
  s6 -> s7 [108, 108] { R7176 += 1, R7130 += 1, R7098 += 1, R7082 += 1 };
  s7 -> s8 [104, 104] { R7176 += 1, R7130 += 1, R7098 += 1, R7082 += 1 };
  s8 -> s9 [111, 111] { R7176 += 1, R7130 += 1, R7098 += 1, R7082 += 1 };
  s9 -> s10 [115, 115] { R7176 += 1, R7130 += 1, R7098 += 1, R7082 += 1 };
  s10 -> s11 [116, 116] { R7176 += 1, R7130 += 1, R7098 += 1, R7082 += 1 };
  s11 -> s11 [0, 65535] { R7176 += 1, R7130 += 1, R7098 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [0, 65535] { R7176 += 1 };
  s11 -> s14 [0, 65535] { R7176 += 1, R7130 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R7176 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s13 [0, 65535] { R7176 += 1 };
  s14 -> s14 [0, 65535] { R7176 += 1, R7130 += 1 };
  accepting s11, s12, s13, s14;
};
};
constraint R1 = 0 && R2 = R7098 && R3 = R7070 && R4 = R7176 && R15 = 0 && R16 = R7130 && R5995 = 0 && R5996 = 1 && R5997 = 0 && R5998 = 1 && R7063 - R7130 = 1 && R7064 = R7070 && R7065 - R7130 = 1 && R7066 = R7070 && R7067 - R7130 = 1 && R7068 = R7070 && R7069 - R7130 = 1 && R7077 = 0 && R7078 = 0 && R7081 = 0 && R7082 = 0 && R7083 = 0 && R7084 = R7098 && R7085 = 0 && R7086 = R7098 && R7087 = 0 && R7088 = R7098 && R7089 = 0 && R7090 = R7098 && R7091 = 0 && R7092 = R7098 && R7093 = 0 && R7094 = R7098 && R7095 = 0 && R7096 = R7098 && R7097 = 0 && R7099 = 0 && R7100 = R7130 && R7101 = 0 && R7102 = R7130 && R7103 = 0 && R7104 = R7130 && R7105 = 0 && R7106 = R7130 && R7107 = 0 && R7108 = R7130 && R7109 = 0 && R7110 = R7130 && R7111 = 0 && R7112 = R7130 && R7113 = 0 && R7114 = R7130 && R7115 = 0 && R7116 = R7130 && R7117 = 0 && R7118 = R7130 && R7119 = 0 && R7120 = R7130 && R7121 = 0 && R7122 = R7130 && R7123 = 0 && R7124 = R7130 && R7125 = 0 && R7126 = R7130 && R7127 = 0 && R7128 = R7130 && R7129 = 0 && R7131 = 10 && R7132 = R7176 && R7133 = 10 && R7134 = R7176 && R7135 = 10 && R7136 = R7176 && R7137 = 10 && R7138 = R7176 && R7139 = 10 && R7140 = R7176 && R7141 = 10 && R7142 = R7176 && R7143 = 10 && R7144 = R7176 && R7145 = 10 && R7146 = R7176 && R7147 = 10 && R7148 = R7176 && R7149 = 10 && R7150 = R7176 && R7151 = 10 && R7152 = R7176 && R7153 = 10 && R7154 = R7176 && R7155 = 10 && R7156 = R7176 && R7157 = 10 && R7158 = R7176 && R7159 = 10 && R7160 = R7176 && R7161 = 10 && R7162 = R7176 && R7163 = 10 && R7164 = R7176 && R7165 = 10 && R7166 = R7176 && R7167 = 10 && R7168 = R7176 && R7169 = 10 && R7170 = R7176 && R7171 = 10 && R7172 = R7176 && R7173 = 10 && R7174 = R7176 && R7175 = 10 && R0 != 0 && R7 < 1 && R10 < 1 && R11 < 1 && R7130 < R7070 && 0 < R7098 && -1 < R7130 && 9 < R7176 && (R5991 != 0 || ((R5 != 0 || ((R0 != R5992 || R5992 = 1 || R5992 < 0) && (R0 = R5992 || R5992 = 1 || R0 < 1))) && (R5 = 0 || ((R0 != R5992 || R5992 = 1 || R5992 < 0) && (R5992 != 1 || -1 < R0) && (R0 = R5992 || R5992 = 1))))) && (R5993 != 0 || ((R5 != 0 || ((R0 != R5994 || R5994 = 1 || R5994 < 0) && (R0 = R5994 || R5994 = 1 || R0 < 1))) && (R5 = 0 || ((R0 != R5994 || R5994 = 1 || R5994 < 0) && (R5994 != 1 || -1 < R0) && (R0 = R5994 || R5994 = 1))))) && (R5988 = 0 || (R7071 = 0 && R7072 = 0)) && (R5988 = 0 || (R7073 = 0 && R7074 = 0)) && (R5989 = 0 || (R7079 = 0 && R7080 = 0)) && (R5990 = 0 || (R7075 = 0 && R7076 = 0)) && (R5991 = 0 || (R5 = 0 && R0 < 0)) && (R5993 = 0 || (R5 = 0 && R0 < 0));
// End of Parikh automata intersection problem
