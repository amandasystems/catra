// Parikh automata intersection problem, generated by OSTRICH+
counter int R0, R1, R10, R11, R15, R16, R2, R3, R4, R5, R5988, R5989, R5990, R5991, R5992, R5993, R5994, R5995, R5996, R5997, R5998, R6, R7, R7063, R7064, R7065, R7066, R7067, R7068, R7069, R7070, R7717, R7718, R7719, R7720, R7721, R7722, R7723, R7724, R7725, R7726, R7727, R7728, R7729, R7730, R7731, R7732, R7733, R7734, R7735, R7736, R7737, R7738, R7739, R7740, R7741, R7742, R7743, R7744, R7745, R7746, R7747, R7748, R7749, R7750, R7751, R7752, R7753, R7754, R7755, R7756, R7757, R7758, R7759, R7760, R7761, R7762, R7763, R7764, R7765, R7766, R7767, R7768, R7769, R7770, R7771, R7772, R7773, R7774, R7775, R7776, R7777, R7778, R7779, R7780, R7781, R7782, R7783, R7784, R7785, R7786, R7787, R7788, R7789, R7790, R7791, R7792, R7793, R7794, R7795, R7796, R7797, R7798, R7799, R7800, R7801, R7802, R7803, R7804, R7805, R7806, R7807, R7808, R7809, R7810, R7811, R7812, R7813, R7814, R7815, R7816, R7817, R7818, R7819, R7820, R7821, R7822, R7823, R7824;
synchronised {  // Automata constraining P59
automaton P59_0 {
  init s0;
  s0 -> s1 [120, 120];
  accepting s1;
};
};
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R4 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 45] { R7780 += 1 };
  s0 -> s0 [0, 65535] { R7779 += 1, R7780 += 1 };
  s0 -> s2 [46, 46] { R7780 += 1 };
  s0 -> s3 [47, 47] { R7780 += 1 };
  s0 -> s1 [48, 65535] { R7780 += 1 };
  s1 -> s1 [0, 45] { R7780 += 1 };
  s1 -> s2 [46, 46] { R7780 += 1 };
  s1 -> s3 [47, 47] { R7780 += 1 };
  s1 -> s1 [48, 65535] { R7780 += 1 };
  s2 -> s1 [0, 45] { R7780 += 1 };
  s2 -> s2 [46, 46] { R7780 += 1 };
  s2 -> s3 [47, 47] { R7780 += 1 };
  s2 -> s1 [48, 114] { R7780 += 1 };
  s2 -> s8 [115, 115] { R7780 += 1 };
  s2 -> s1 [116, 65535] { R7780 += 1 };
  s3 -> s3 [0, 45] { R7780 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s4 [46, 46] { R7780 += 1 };
  s3 -> s3 [47, 65535] { R7780 += 1 };
  s4 -> s3 [0, 45] { R7780 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s4 [46, 46] { R7780 += 1 };
  s4 -> s3 [47, 114] { R7780 += 1 };
  s4 -> s5 [115, 115] { R7780 += 1 };
  s4 -> s3 [116, 65535] { R7780 += 1 };
  s5 -> s3 [0, 45] { R7780 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s4 [46, 46] { R7780 += 1 };
  s5 -> s3 [47, 110] { R7780 += 1 };
  s5 -> s6 [111, 111] { R7780 += 1 };
  s5 -> s3 [112, 65535] { R7780 += 1 };
  s6 -> s3 [0, 45] { R7780 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s4 [46, 46] { R7780 += 1 };
  s6 -> s3 [47, 98] { R7780 += 1 };
  s6 -> s7 [99, 99] { R7780 += 1 };
  s6 -> s3 [100, 65535] { R7780 += 1 };
  s7 -> s3 [0, 45] { R7780 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s4 [46, 46] { R7780 += 1 };
  s7 -> s3 [47, 106] { R7780 += 1 };
  s7 -> s3 [108, 65535] { R7780 += 1 };
  s8 -> s1 [0, 45] { R7780 += 1 };
  s8 -> s2 [46, 46] { R7780 += 1 };
  s8 -> s3 [47, 47] { R7780 += 1 };
  s8 -> s1 [48, 110] { R7780 += 1 };
  s8 -> s9 [111, 111] { R7780 += 1 };
  s8 -> s1 [112, 65535] { R7780 += 1 };
  s9 -> s1 [0, 45] { R7780 += 1 };
  s9 -> s2 [46, 46] { R7780 += 1 };
  s9 -> s3 [47, 47] { R7780 += 1 };
  s9 -> s1 [48, 98] { R7780 += 1 };
  s9 -> s10 [99, 99] { R7780 += 1 };
  s9 -> s1 [100, 65535] { R7780 += 1 };
  s10 -> s1 [0, 45] { R7780 += 1 };
  s10 -> s2 [46, 46] { R7780 += 1 };
  s10 -> s3 [47, 47] { R7780 += 1 };
  s10 -> s1 [48, 106] { R7780 += 1 };
  s10 -> s1 [108, 65535] { R7780 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_3 {
  init s0;
  s0 -> s0 [0, 65535] { R7781 += 1, R7782 += 1 };
  s0 -> s1 [0, 65535] { R7782 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R7782 += 1, R3 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s1 [0, 46] { R7784 += 1, R16 += 1 };
  s0 -> s0 [0, 65535] { R7783 += 1, R7784 += 1 };
  s0 -> s2 [0, 65535] { R7784 += 1, R15 += 1, R16 += 1 };
  s0 -> s3 [47, 47] { R7784 += 1 };
  s0 -> s1 [48, 65535] { R7784 += 1, R16 += 1 };
  s1 -> s1 [0, 46] { R7784 += 1, R16 += 1 };
  s1 -> s3 [47, 47] { R7784 += 1 };
  s1 -> s1 [48, 65535] { R7784 += 1, R16 += 1 };
  s2 -> s1 [0, 46] { R7784 += 1, R16 += 1 };
  s2 -> s2 [0, 65535] { R7784 += 1, R15 += 1, R16 += 1 };
  s2 -> s3 [47, 47] { R7784 += 1 };
  s2 -> s1 [48, 65535] { R7784 += 1, R16 += 1 };
  s3 -> s3 [0, 65535] { R7784 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 36] { R7786 += 1, R7064 += 1 };
  s0 -> s2 [0, 65535] { R7786 += 1, R7063 += 1, R7064 += 1 };
  s0 -> s0 [0, 65535] { R7785 += 1, R7786 += 1 };
  s0 -> s1 [38, 42] { R7786 += 1, R7064 += 1 };
  s0 -> s1 [44, 45] { R7786 += 1, R7064 += 1 };
  s0 -> s1 [47, 62] { R7786 += 1, R7064 += 1 };
  s0 -> s1 [64, 65535] { R7786 += 1, R7064 += 1 };
  s1 -> s1 [0, 36] { R7786 += 1, R7064 += 1 };
  s1 -> s1 [0, 65535] { R7786 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [38, 42] { R7786 += 1, R7064 += 1 };
  s1 -> s1 [44, 45] { R7786 += 1, R7064 += 1 };
  s1 -> s1 [47, 62] { R7786 += 1, R7064 += 1 };
  s1 -> s1 [64, 65535] { R7786 += 1, R7064 += 1 };
  s2 -> s1 [0, 36] { R7786 += 1, R7064 += 1 };
  s2 -> s2 [0, 65535] { R7786 += 1, R7063 += 1, R7064 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [38, 42] { R7786 += 1, R7064 += 1 };
  s2 -> s1 [44, 45] { R7786 += 1, R7064 += 1 };
  s2 -> s1 [47, 62] { R7786 += 1, R7064 += 1 };
  s2 -> s1 [64, 65535] { R7786 += 1, R7064 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_6 {
  init s0;
  s0 -> s1 [0, 65535] { R7788 += 1, R7065 += 1, R7066 += 1 };
  s0 -> s2 [0, 65535] { R7788 += 1, R7066 += 1, R0 += 1 };
  s0 -> s0 [0, 65535] { R7787 += 1, R7788 += 1 };
  s1 -> s1 [0, 65535] { R7788 += 1, R7065 += 1, R7066 += 1 };
  s1 -> s2 [0, 65535] { R7788 += 1, R7066 += 1, R0 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R7788 += 1, R7066 += 1, R0 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R7788 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R7788 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_7 {
  init s0;
  s0 -> s1 [0, 62] { R7790 += 1, R7068 += 1, R5992 += 1 };
  s0 -> s0 [0, 65535] { R7789 += 1, R7790 += 1 };
  s0 -> s2 [0, 65535] { R7790 += 1, R7068 += 1, R5991 += 1, R5992 += 1 };
  s0 -> s3 [0, 65535] { R7790 += 1, R7067 += 1, R7068 += 1 };
  s0 -> s4 [63, 63] { R7790 += 1, R7068 += 1, R5992 += 1 };
  s0 -> s1 [64, 65535] { R7790 += 1, R7068 += 1, R5992 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R7790 += 1, R7068 += 1 };
  s1 -> s1 [0, 65535] { R7790 += 1, R7068 += 1, R5992 += 1 };
  s1 -> s6 [0, 65535] { R7790 += 1 };
  s2 -> s1 [0, 62] { R7790 += 1, R7068 += 1, R5992 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R7790 += 1, R7068 += 1, R5991 += 1, R5992 += 1 };
  s2 -> s6 [0, 65535] { R7790 += 1 };
  s2 -> s4 [63, 63] { R7790 += 1, R7068 += 1, R5992 += 1 };
  s2 -> s1 [64, 65535] { R7790 += 1, R7068 += 1, R5992 += 1 };
  s3 -> s1 [0, 62] { R7790 += 1, R7068 += 1, R5992 += 1 };
  s3 -> s2 [0, 65535] { R7790 += 1, R7068 += 1, R5991 += 1, R5992 += 1 };
  s3 -> s3 [0, 65535] { R7790 += 1, R7067 += 1, R7068 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s4 [63, 63] { R7790 += 1, R7068 += 1, R5992 += 1 };
  s3 -> s1 [64, 65535] { R7790 += 1, R7068 += 1, R5992 += 1 };
  s4 -> s1 [0, 65535] { R7790 += 1, R7068 += 1, R5992 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7790 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R7790 += 1, R7068 += 1 };
  s7 -> s6 [0, 65535] { R7790 += 1 };
  accepting s3, s5, s2, s6, s1, s7, s0;
};
automaton uri_8 {
  init s0;
  s0 -> s1 [0, 65535] { R7792 += 1, R7070 += 1, R5994 += 1, R5 += 1 };
  s0 -> s2 [0, 65535] { R7792 += 1, R7069 += 1, R7070 += 1 };
  s0 -> s3 [0, 65535] { R7792 += 1, R7070 += 1, R5993 += 1, R5994 += 1 };
  s0 -> s0 [0, 65535] { R7791 += 1, R7792 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R7792 += 1, R7070 += 1, R5994 += 1, R5 += 1 };
  s1 -> s5 [0, 65535] { R7792 += 1 };
  s1 -> s6 [0, 65535] { R7792 += 1, R7070 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R7792 += 1, R7070 += 1, R5994 += 1, R5 += 1 };
  s2 -> s2 [0, 65535] { R7792 += 1, R7069 += 1, R7070 += 1 };
  s2 -> s3 [0, 65535] { R7792 += 1, R7070 += 1, R5993 += 1, R5994 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R7792 += 1, R7070 += 1, R5994 += 1, R5 += 1 };
  s3 -> s5 [0, 65535] { R7792 += 1 };
  s3 -> s3 [0, 65535] { R7792 += 1, R7070 += 1, R5993 += 1, R5994 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R7792 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R7792 += 1 };
  s6 -> s6 [0, 65535] { R7792 += 1, R7070 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_9 {
  init s0;
  s0 -> s1 [0, 43] { R7794 += 1, R7748 += 1 };
  s0 -> s0 [0, 65535] { R7793 += 1, R7794 += 1 };
  s0 -> s2 [0, 65535] { R7794 += 1, R7747 += 1, R7748 += 1 };
  s0 -> s1 [45, 63] { R7794 += 1, R7748 += 1 };
  s0 -> s3 [88, 88] { R7794 += 1, R7748 += 1 };
  s0 -> s1 [89, 65535] { R7794 += 1, R7748 += 1 };
  s1 -> s1 [0, 43] { R7794 += 1, R7748 += 1 };
  s1 -> s1 [45, 63] { R7794 += 1, R7748 += 1 };
  s1 -> s3 [88, 88] { R7794 += 1, R7748 += 1 };
  s1 -> s1 [89, 65535] { R7794 += 1, R7748 += 1 };
  s2 -> s1 [0, 43] { R7794 += 1, R7748 += 1 };
  s2 -> s2 [0, 65535] { R7794 += 1, R7747 += 1, R7748 += 1 };
  s2 -> s1 [45, 63] { R7794 += 1, R7748 += 1 };
  s2 -> s3 [88, 88] { R7794 += 1, R7748 += 1 };
  s2 -> s1 [89, 65535] { R7794 += 1, R7748 += 1 };
  s3 -> s3 [0, 43] { R7794 += 1, R7748 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R7794 += 1 };
  s3 -> s3 [45, 63] { R7794 += 1, R7748 += 1 };
  s3 -> s3 [88, 65535] { R7794 += 1, R7748 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton uri_10 {
  init s0;
  s0 -> s1 [0, 65535] { R7796 += 1, R7750 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R7795 += 1, R7796 += 1 };
  s0 -> s2 [0, 65535] { R7796 += 1, R7749 += 1, R7750 += 1 };
  s1 -> s1 [0, 65535] { R7796 += 1, R7750 += 1, R2 += 1 };
  s1 -> s4 [0, 65535] { R7796 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R7796 += 1, R7750 += 1, R2 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R7796 += 1, R7749 += 1, R7750 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R7796 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_11 {
  init s0;
  s0 -> s1 [0, 57] { R7798 += 1, R7752 += 1 };
  s0 -> s2 [0, 65535] { R7798 += 1, R7752 += 1, R10 += 1 };
  s0 -> s3 [0, 65535] { R7798 += 1, R7751 += 1, R7752 += 1 };
  s0 -> s0 [0, 65535] { R7797 += 1, R7798 += 1 };
  s0 -> s4 [58, 58] { R7798 += 1, R7752 += 1 };
  s0 -> s1 [59, 65535] { R7798 += 1, R7752 += 1 };
  s1 -> s1 [0, 57] { R7798 += 1, R7752 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R7798 += 1 };
  s1 -> s4 [58, 58] { R7798 += 1, R7752 += 1 };
  s1 -> s1 [59, 65535] { R7798 += 1, R7752 += 1 };
  s2 -> s1 [0, 57] { R7798 += 1, R7752 += 1 };
  s2 -> s2 [0, 65535] { R7798 += 1, R7752 += 1, R10 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R7798 += 1 };
  s2 -> s4 [58, 58] { R7798 += 1, R7752 += 1 };
  s2 -> s1 [59, 65535] { R7798 += 1, R7752 += 1 };
  s3 -> s1 [0, 57] { R7798 += 1, R7752 += 1 };
  s3 -> s2 [0, 65535] { R7798 += 1, R7752 += 1, R10 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R7798 += 1, R7751 += 1, R7752 += 1 };
  s3 -> s4 [58, 58] { R7798 += 1, R7752 += 1 };
  s3 -> s1 [59, 65535] { R7798 += 1, R7752 += 1 };
  s4 -> s4 [0, 65535] { R7798 += 1, R7752 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7798 += 1 };
  accepting s3, s5, s2, s6, s1, s0;
};
automaton uri_12 {
  init s0;
  s0 -> s1 [0, 87] { R7800 += 1, R7754 += 1 };
  s0 -> s2 [0, 65535] { R7800 += 1, R7753 += 1, R7754 += 1 };
  s0 -> s0 [0, 65535] { R7799 += 1, R7800 += 1 };
  s0 -> s3 [0, 65535] { R7800 += 1, R7754 += 1, R11 += 1 };
  s0 -> s4 [88, 88] { R7800 += 1, R7754 += 1 };
  s0 -> s1 [89, 65535] { R7800 += 1, R7754 += 1 };
  s1 -> s1 [0, 87] { R7800 += 1, R7754 += 1 };
  s1 -> s1 [0, 65535] { R7800 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s4 [88, 88] { R7800 += 1, R7754 += 1 };
  s1 -> s1 [89, 65535] { R7800 += 1, R7754 += 1 };
  s2 -> s1 [0, 87] { R7800 += 1, R7754 += 1 };
  s2 -> s2 [0, 65535] { R7800 += 1, R7753 += 1, R7754 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R7800 += 1, R7754 += 1, R11 += 1 };
  s2 -> s4 [88, 88] { R7800 += 1, R7754 += 1 };
  s2 -> s1 [89, 65535] { R7800 += 1, R7754 += 1 };
  s3 -> s1 [0, 87] { R7800 += 1, R7754 += 1 };
  s3 -> s5 [0, 65535] { R7800 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R7800 += 1, R7754 += 1, R11 += 1 };
  s3 -> s4 [88, 88] { R7800 += 1, R7754 += 1 };
  s3 -> s1 [89, 65535] { R7800 += 1, R7754 += 1 };
  s4 -> s4 [0, 65535] { R7800 += 1, R7754 += 1 };
  s5 -> s5 [0, 65535] { R7800 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s5, s2, s6, s1, s0;
};
automaton uri_13 {
  init s0;
  s0 -> s1 [0, 90] { R7802 += 1, R7756 += 1, R5996 += 1 };
  s0 -> s0 [0, 65535] { R7801 += 1, R7802 += 1 };
  s0 -> s2 [0, 65535] { R7802 += 1, R7756 += 1, R5995 += 1, R5996 += 1 };
  s0 -> s3 [0, 65535] { R7802 += 1, R7755 += 1, R7756 += 1 };
  s0 -> s4 [91, 91] { R7802 += 1, R7756 += 1, R5996 += 1 };
  s0 -> s1 [92, 65535] { R7802 += 1, R7756 += 1, R5996 += 1 };
  s1 -> s7 [0, 65535] { R7802 += 1, R7756 += 1 };
  s1 -> s6 [0, 65535] { R7802 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R7802 += 1, R7756 += 1, R5996 += 1 };
  s2 -> s1 [0, 90] { R7802 += 1, R7756 += 1, R5996 += 1 };
  s2 -> s6 [0, 65535] { R7802 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R7802 += 1, R7756 += 1, R5995 += 1, R5996 += 1 };
  s2 -> s4 [91, 91] { R7802 += 1, R7756 += 1, R5996 += 1 };
  s2 -> s1 [92, 65535] { R7802 += 1, R7756 += 1, R5996 += 1 };
  s3 -> s1 [0, 90] { R7802 += 1, R7756 += 1, R5996 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R7802 += 1, R7756 += 1, R5995 += 1, R5996 += 1 };
  s3 -> s3 [0, 65535] { R7802 += 1, R7755 += 1, R7756 += 1 };
  s3 -> s4 [91, 91] { R7802 += 1, R7756 += 1, R5996 += 1 };
  s3 -> s1 [92, 65535] { R7802 += 1, R7756 += 1, R5996 += 1 };
  s4 -> s1 [0, 65535] { R7802 += 1, R7756 += 1, R5996 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7802 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R7802 += 1, R7756 += 1 };
  s7 -> s6 [0, 65535] { R7802 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s5, s2, s6, s1, s7, s0;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 65535] { R7804 += 1, R7757 += 1, R7758 += 1 };
  s0 -> s2 [0, 65535] { R7804 += 1, R7758 += 1, R5998 += 1, R6 += 1 };
  s0 -> s3 [0, 65535] { R7804 += 1, R7758 += 1, R5997 += 1, R5998 += 1 };
  s0 -> s0 [0, 65535] { R7803 += 1, R7804 += 1 };
  s1 -> s1 [0, 65535] { R7804 += 1, R7757 += 1, R7758 += 1 };
  s1 -> s2 [0, 65535] { R7804 += 1, R7758 += 1, R5998 += 1, R6 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R7804 += 1, R7758 += 1, R5997 += 1, R5998 += 1 };
  s2 -> s2 [0, 65535] { R7804 += 1, R7758 += 1, R5998 += 1, R6 += 1 };
  s2 -> s6 [0, 65535] { R7804 += 1, R7758 += 1 };
  s2 -> s4 [0, 65535] { R7804 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R7804 += 1, R7758 += 1, R5998 += 1, R6 += 1 };
  s3 -> s4 [0, 65535] { R7804 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R7804 += 1, R7758 += 1, R5997 += 1, R5998 += 1 };
  s4 -> s4 [0, 65535] { R7804 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7804 += 1, R7758 += 1 };
  s6 -> s4 [0, 65535] { R7804 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_15 {
  init s0;
  s0 -> s1 [0, 65535] { R7806 += 1, R7760 += 1, R7723 += 1, R7724 += 1 };
  s0 -> s0 [0, 65535] { R7805 += 1, R7806 += 1 };
  s0 -> s2 [0, 65535] { R7806 += 1, R7759 += 1, R7760 += 1 };
  s0 -> s3 [0, 65535] { R7806 += 1, R7760 += 1, R7724 += 1, R5990 += 1 };
  s1 -> s4 [0, 65535] { R7806 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R7806 += 1, R7760 += 1, R7723 += 1, R7724 += 1 };
  s1 -> s3 [0, 65535] { R7806 += 1, R7760 += 1, R7724 += 1, R5990 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [0, 65535] { R7806 += 1, R7760 += 1, R7723 += 1, R7724 += 1 };
  s2 -> s2 [0, 65535] { R7806 += 1, R7759 += 1, R7760 += 1 };
  s2 -> s3 [0, 65535] { R7806 += 1, R7760 += 1, R7724 += 1, R5990 += 1 };
  s3 -> s4 [0, 65535] { R7806 += 1 };
  s3 -> s5 [0, 65535] { R7806 += 1, R7760 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R7806 += 1, R7760 += 1, R7724 += 1, R5990 += 1 };
  s4 -> s4 [0, 65535] { R7806 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s4 [0, 65535] { R7806 += 1 };
  s5 -> s5 [0, 65535] { R7806 += 1, R7760 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 65535] { R7808 += 1, R7761 += 1, R7762 += 1 };
  s0 -> s2 [0, 65535] { R7808 += 1, R7762 += 1, R7725 += 1, R7726 += 1 };
  s0 -> s0 [0, 65535] { R7807 += 1, R7808 += 1 };
  s0 -> s3 [108, 108] { R7808 += 1, R7762 += 1, R7726 += 1 };
  s1 -> s1 [0, 65535] { R7808 += 1, R7761 += 1, R7762 += 1 };
  s1 -> s2 [0, 65535] { R7808 += 1, R7762 += 1, R7725 += 1, R7726 += 1 };
  s1 -> s3 [108, 108] { R7808 += 1, R7762 += 1, R7726 += 1 };
  s2 -> s2 [0, 65535] { R7808 += 1, R7762 += 1, R7725 += 1, R7726 += 1 };
  s2 -> s3 [108, 108] { R7808 += 1, R7762 += 1, R7726 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R7808 += 1, R7762 += 1 };
  s3 -> s5 [0, 65535] { R7808 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R7808 += 1 };
  accepting s3, s4, s5;
};
automaton uri_17 {
  init s0;
  s0 -> s1 [0, 87] { R7810 += 1, R7764 += 1, R7732 += 1 };
  s0 -> s2 [0, 65535] { R7810 += 1, R7763 += 1, R7764 += 1 };
  s0 -> s3 [0, 65535] { R7810 += 1, R7764 += 1, R7731 += 1, R7732 += 1 };
  s0 -> s0 [0, 65535] { R7809 += 1, R7810 += 1 };
  s0 -> s4 [88, 88] { R7810 += 1, R7764 += 1, R7732 += 1 };
  s0 -> s1 [89, 65535] { R7810 += 1, R7764 += 1, R7732 += 1 };
  s1 -> s1 [0, 87] { R7810 += 1, R7764 += 1, R7732 += 1 };
  s1 -> s4 [88, 88] { R7810 += 1, R7764 += 1, R7732 += 1 };
  s1 -> s1 [89, 65535] { R7810 += 1, R7764 += 1, R7732 += 1 };
  s2 -> s1 [0, 87] { R7810 += 1, R7764 += 1, R7732 += 1 };
  s2 -> s2 [0, 65535] { R7810 += 1, R7763 += 1, R7764 += 1 };
  s2 -> s3 [0, 65535] { R7810 += 1, R7764 += 1, R7731 += 1, R7732 += 1 };
  s2 -> s4 [88, 88] { R7810 += 1, R7764 += 1, R7732 += 1 };
  s2 -> s1 [89, 65535] { R7810 += 1, R7764 += 1, R7732 += 1 };
  s3 -> s1 [0, 87] { R7810 += 1, R7764 += 1, R7732 += 1 };
  s3 -> s3 [0, 65535] { R7810 += 1, R7764 += 1, R7731 += 1, R7732 += 1 };
  s3 -> s4 [88, 88] { R7810 += 1, R7764 += 1, R7732 += 1 };
  s3 -> s1 [89, 65535] { R7810 += 1, R7764 += 1, R7732 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R7810 += 1, R7764 += 1 };
  s4 -> s4 [0, 65535] { R7810 += 1, R7764 += 1, R7732 += 1 };
  s4 -> s7 [0, 65535] { R7810 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7810 += 1, R7764 += 1 };
  s6 -> s7 [0, 65535] { R7810 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R7810 += 1 };
  accepting s4, s5, s6, s7;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 65535] { R7812 += 1, R7766 += 1, R7733 += 1, R7734 += 1 };
  s0 -> s2 [0, 65535] { R7812 += 1, R7765 += 1, R7766 += 1 };
  s0 -> s0 [0, 65535] { R7811 += 1, R7812 += 1 };
  s0 -> s3 [0, 65535] { R7812 += 1, R7766 += 1, R7734 += 1, R1 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R7812 += 1 };
  s1 -> s1 [0, 65535] { R7812 += 1, R7766 += 1, R7733 += 1, R7734 += 1 };
  s1 -> s3 [0, 65535] { R7812 += 1, R7766 += 1, R7734 += 1, R1 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R7812 += 1, R7766 += 1, R7733 += 1, R7734 += 1 };
  s2 -> s2 [0, 65535] { R7812 += 1, R7765 += 1, R7766 += 1 };
  s2 -> s3 [0, 65535] { R7812 += 1, R7766 += 1, R7734 += 1, R1 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R7812 += 1, R7766 += 1 };
  s3 -> s6 [0, 65535] { R7812 += 1 };
  s3 -> s3 [0, 65535] { R7812 += 1, R7766 += 1, R7734 += 1, R1 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R7812 += 1, R7766 += 1 };
  s5 -> s6 [0, 65535] { R7812 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R7812 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_19 {
  init s0;
  s0 -> s1 [0, 87] { R7814 += 1, R7768 += 1, R7736 += 1 };
  s0 -> s0 [0, 65535] { R7813 += 1, R7814 += 1 };
  s0 -> s2 [0, 65535] { R7814 += 1, R7767 += 1, R7768 += 1 };
  s0 -> s3 [0, 65535] { R7814 += 1, R7768 += 1, R7736 += 1, R7 += 1 };
  s0 -> s4 [0, 65535] { R7814 += 1, R7768 += 1, R7735 += 1, R7736 += 1 };
  s0 -> s5 [88, 88] { R7814 += 1, R7768 += 1, R7736 += 1 };
  s0 -> s1 [89, 65535] { R7814 += 1, R7768 += 1, R7736 += 1 };
  s1 -> s1 [0, 87] { R7814 += 1, R7768 += 1, R7736 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R7814 += 1, R7768 += 1 };
  s1 -> s7 [0, 65535] { R7814 += 1 };
  s1 -> s5 [88, 88] { R7814 += 1, R7768 += 1, R7736 += 1 };
  s1 -> s1 [89, 65535] { R7814 += 1, R7768 += 1, R7736 += 1 };
  s2 -> s1 [0, 87] { R7814 += 1, R7768 += 1, R7736 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R7814 += 1, R7767 += 1, R7768 += 1 };
  s2 -> s3 [0, 65535] { R7814 += 1, R7768 += 1, R7736 += 1, R7 += 1 };
  s2 -> s4 [0, 65535] { R7814 += 1, R7768 += 1, R7735 += 1, R7736 += 1 };
  s2 -> s5 [88, 88] { R7814 += 1, R7768 += 1, R7736 += 1 };
  s2 -> s1 [89, 65535] { R7814 += 1, R7768 += 1, R7736 += 1 };
  s3 -> s1 [0, 87] { R7814 += 1, R7768 += 1, R7736 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R7814 += 1, R7768 += 1, R7736 += 1, R7 += 1 };
  s3 -> s7 [0, 65535] { R7814 += 1 };
  s3 -> s8 [0, 65535] { R7814 += 1, R7768 += 1 };
  s3 -> s5 [88, 88] { R7814 += 1, R7768 += 1, R7736 += 1 };
  s3 -> s1 [89, 65535] { R7814 += 1, R7768 += 1, R7736 += 1 };
  s4 -> s1 [0, 87] { R7814 += 1, R7768 += 1, R7736 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s3 [0, 65535] { R7814 += 1, R7768 += 1, R7736 += 1, R7 += 1 };
  s4 -> s7 [0, 65535] { R7814 += 1 };
  s4 -> s4 [0, 65535] { R7814 += 1, R7768 += 1, R7735 += 1, R7736 += 1 };
  s4 -> s5 [88, 88] { R7814 += 1, R7768 += 1, R7736 += 1 };
  s4 -> s1 [89, 65535] { R7814 += 1, R7768 += 1, R7736 += 1 };
  s5 -> s5 [0, 65535] { R7814 += 1, R7768 += 1, R7736 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R7814 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R7814 += 1 };
  s8 -> s8 [0, 65535] { R7814 += 1, R7768 += 1 };
  accepting s3, s4, s8, s2, s6, s1, s7, s0;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 87] { R7816 += 1, R7770 += 1, R7738 += 1, R7718 += 1 };
  s0 -> s2 [0, 65535] { R7816 += 1, R7769 += 1, R7770 += 1 };
  s0 -> s3 [0, 65535] { R7816 += 1, R7770 += 1, R7738 += 1, R7717 += 1, R7718 += 1 };
  s0 -> s4 [0, 65535] { R7816 += 1, R7770 += 1, R7737 += 1, R7738 += 1 };
  s0 -> s0 [0, 65535] { R7815 += 1, R7816 += 1 };
  s0 -> s1 [89, 65535] { R7816 += 1, R7770 += 1, R7738 += 1, R7718 += 1 };
  s1 -> s1 [0, 87] { R7816 += 1, R7770 += 1, R7738 += 1, R7718 += 1 };
  s1 -> s7 [0, 65535] { R7816 += 1, R7770 += 1 };
  s1 -> s5 [0, 65535] { R7816 += 1 };
  s1 -> s1 [0, 65535] { R7816 += 1, R7770 += 1, R7738 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [89, 65535] { R7816 += 1, R7770 += 1, R7738 += 1, R7718 += 1 };
  s2 -> s1 [0, 87] { R7816 += 1, R7770 += 1, R7738 += 1, R7718 += 1 };
  s2 -> s2 [0, 65535] { R7816 += 1, R7769 += 1, R7770 += 1 };
  s2 -> s3 [0, 65535] { R7816 += 1, R7770 += 1, R7738 += 1, R7717 += 1, R7718 += 1 };
  s2 -> s4 [0, 65535] { R7816 += 1, R7770 += 1, R7737 += 1, R7738 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [89, 65535] { R7816 += 1, R7770 += 1, R7738 += 1, R7718 += 1 };
  s3 -> s1 [0, 87] { R7816 += 1, R7770 += 1, R7738 += 1, R7718 += 1 };
  s3 -> s7 [0, 65535] { R7816 += 1, R7770 += 1 };
  s3 -> s5 [0, 65535] { R7816 += 1 };
  s3 -> s3 [0, 65535] { R7816 += 1, R7770 += 1, R7738 += 1, R7717 += 1, R7718 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [89, 65535] { R7816 += 1, R7770 += 1, R7738 += 1, R7718 += 1 };
  s4 -> s1 [0, 87] { R7816 += 1, R7770 += 1, R7738 += 1, R7718 += 1 };
  s4 -> s5 [0, 65535] { R7816 += 1 };
  s4 -> s3 [0, 65535] { R7816 += 1, R7770 += 1, R7738 += 1, R7717 += 1, R7718 += 1 };
  s4 -> s4 [0, 65535] { R7816 += 1, R7770 += 1, R7737 += 1, R7738 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s1 [89, 65535] { R7816 += 1, R7770 += 1, R7738 += 1, R7718 += 1 };
  s5 -> s5 [0, 65535] { R7816 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R7816 += 1, R7770 += 1 };
  s7 -> s5 [0, 65535] { R7816 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton uri_21 {
  init s0;
  s0 -> s1 [0, 65535] { R7818 += 1, R7772 += 1, R7740 += 1, R7720 += 1, R5988 += 1 };
  s0 -> s2 [0, 65535] { R7818 += 1, R7771 += 1, R7772 += 1 };
  s0 -> s3 [0, 65535] { R7818 += 1, R7772 += 1, R7740 += 1, R7719 += 1, R7720 += 1 };
  s0 -> s0 [0, 65535] { R7817 += 1, R7818 += 1 };
  s0 -> s4 [0, 65535] { R7818 += 1, R7772 += 1, R7739 += 1, R7740 += 1 };
  s1 -> s1 [0, 65535] { R7818 += 1, R7772 += 1, R7740 += 1, R7720 += 1, R5988 += 1 };
  s1 -> s8 [0, 65535] { R7818 += 1, R7772 += 1, R7740 += 1 };
  s1 -> s7 [0, 65535] { R7818 += 1, R7772 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R7818 += 1 };
  s2 -> s1 [0, 65535] { R7818 += 1, R7772 += 1, R7740 += 1, R7720 += 1, R5988 += 1 };
  s2 -> s2 [0, 65535] { R7818 += 1, R7771 += 1, R7772 += 1 };
  s2 -> s3 [0, 65535] { R7818 += 1, R7772 += 1, R7740 += 1, R7719 += 1, R7720 += 1 };
  s2 -> s4 [0, 65535] { R7818 += 1, R7772 += 1, R7739 += 1, R7740 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R7818 += 1, R7772 += 1, R7740 += 1, R7720 += 1, R5988 += 1 };
  s3 -> s3 [0, 65535] { R7818 += 1, R7772 += 1, R7740 += 1, R7719 += 1, R7720 += 1 };
  s3 -> s7 [0, 65535] { R7818 += 1, R7772 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R7818 += 1 };
  s4 -> s1 [0, 65535] { R7818 += 1, R7772 += 1, R7740 += 1, R7720 += 1, R5988 += 1 };
  s4 -> s3 [0, 65535] { R7818 += 1, R7772 += 1, R7740 += 1, R7719 += 1, R7720 += 1 };
  s4 -> s4 [0, 65535] { R7818 += 1, R7772 += 1, R7739 += 1, R7740 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R7818 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7818 += 1 };
  s7 -> s7 [0, 65535] { R7818 += 1, R7772 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R7818 += 1 };
  s8 -> s8 [0, 65535] { R7818 += 1, R7772 += 1, R7740 += 1 };
  s8 -> s7 [0, 65535] { R7818 += 1, R7772 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R7818 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_22 {
  init s0;
  s0 -> s1 [0, 65535] { R7820 += 1, R7774 += 1, R7741 += 1, R7742 += 1 };
  s0 -> s0 [0, 65535] { R7819 += 1, R7820 += 1 };
  s0 -> s2 [0, 65535] { R7820 += 1, R7774 += 1, R7742 += 1, R7721 += 1, R7722 += 1 };
  s0 -> s3 [0, 65535] { R7820 += 1, R7773 += 1, R7774 += 1 };
  s0 -> s4 [97, 97] { R7820 += 1, R7774 += 1, R7742 += 1, R7722 += 1 };
  s1 -> s1 [0, 65535] { R7820 += 1, R7774 += 1, R7741 += 1, R7742 += 1 };
  s1 -> s2 [0, 65535] { R7820 += 1, R7774 += 1, R7742 += 1, R7721 += 1, R7722 += 1 };
  s1 -> s4 [97, 97] { R7820 += 1, R7774 += 1, R7742 += 1, R7722 += 1 };
  s2 -> s2 [0, 65535] { R7820 += 1, R7774 += 1, R7742 += 1, R7721 += 1, R7722 += 1 };
  s2 -> s4 [97, 97] { R7820 += 1, R7774 += 1, R7742 += 1, R7722 += 1 };
  s3 -> s1 [0, 65535] { R7820 += 1, R7774 += 1, R7741 += 1, R7742 += 1 };
  s3 -> s2 [0, 65535] { R7820 += 1, R7774 += 1, R7742 += 1, R7721 += 1, R7722 += 1 };
  s3 -> s3 [0, 65535] { R7820 += 1, R7773 += 1, R7774 += 1 };
  s3 -> s4 [97, 97] { R7820 += 1, R7774 += 1, R7742 += 1, R7722 += 1 };
  s4 -> s5 [108, 108] { R7820 += 1, R7774 += 1, R7742 += 1, R7722 += 1 };
  s5 -> s6 [104, 104] { R7820 += 1, R7774 += 1, R7742 += 1, R7722 += 1 };
  s6 -> s7 [111, 111] { R7820 += 1, R7774 += 1, R7742 += 1, R7722 += 1 };
  s7 -> s8 [115, 115] { R7820 += 1, R7774 += 1, R7742 += 1, R7722 += 1 };
  s8 -> s9 [116, 116] { R7820 += 1, R7774 += 1, R7742 += 1, R7722 += 1 };
  s9 -> s9 [0, 65535] { R7820 += 1, R7774 += 1, R7742 += 1 };
  s9 -> s10 [0, 65535] { R7820 += 1 };
  s9 -> s11 [0, 65535] { R7820 += 1, R7774 += 1 };
  s9 -> s12 [0, 65535];
  s10 -> s10 [0, 65535] { R7820 += 1 };
  s10 -> s12 [0, 65535];
  s11 -> s10 [0, 65535] { R7820 += 1 };
  s11 -> s11 [0, 65535] { R7820 += 1, R7774 += 1 };
  s11 -> s12 [0, 65535];
  s12 -> s12 [0, 65535];
  accepting s9, s10, s11, s12;
};
automaton uri_23 {
  init s0;
  s0 -> s1 [0, 65535] { R7822 += 1, R7776 += 1, R7744 += 1, R7728 += 1, R5989 += 1 };
  s0 -> s2 [0, 65535] { R7822 += 1, R7776 += 1, R7743 += 1, R7744 += 1 };
  s0 -> s3 [0, 65535] { R7822 += 1, R7776 += 1, R7744 += 1, R7727 += 1, R7728 += 1 };
  s0 -> s4 [0, 65535] { R7822 += 1, R7775 += 1, R7776 += 1 };
  s0 -> s0 [0, 65535] { R7821 += 1, R7822 += 1 };
  s1 -> s8 [0, 65535] { R7822 += 1, R7776 += 1, R7744 += 1 };
  s1 -> s1 [0, 65535] { R7822 += 1, R7776 += 1, R7744 += 1, R7728 += 1, R5989 += 1 };
  s1 -> s6 [0, 65535] { R7822 += 1 };
  s1 -> s7 [0, 65535] { R7822 += 1, R7776 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R7822 += 1, R7776 += 1, R7744 += 1, R7728 += 1, R5989 += 1 };
  s2 -> s6 [0, 65535] { R7822 += 1 };
  s2 -> s2 [0, 65535] { R7822 += 1, R7776 += 1, R7743 += 1, R7744 += 1 };
  s2 -> s3 [0, 65535] { R7822 += 1, R7776 += 1, R7744 += 1, R7727 += 1, R7728 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R7822 += 1, R7776 += 1, R7744 += 1, R7728 += 1, R5989 += 1 };
  s3 -> s6 [0, 65535] { R7822 += 1 };
  s3 -> s7 [0, 65535] { R7822 += 1, R7776 += 1 };
  s3 -> s3 [0, 65535] { R7822 += 1, R7776 += 1, R7744 += 1, R7727 += 1, R7728 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R7822 += 1, R7776 += 1, R7744 += 1, R7728 += 1, R5989 += 1 };
  s4 -> s2 [0, 65535] { R7822 += 1, R7776 += 1, R7743 += 1, R7744 += 1 };
  s4 -> s3 [0, 65535] { R7822 += 1, R7776 += 1, R7744 += 1, R7727 += 1, R7728 += 1 };
  s4 -> s4 [0, 65535] { R7822 += 1, R7775 += 1, R7776 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7822 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R7822 += 1 };
  s7 -> s7 [0, 65535] { R7822 += 1, R7776 += 1 };
  s7 -> s5 [0, 65535];
  s8 -> s8 [0, 65535] { R7822 += 1, R7776 += 1, R7744 += 1 };
  s8 -> s6 [0, 65535] { R7822 += 1 };
  s8 -> s7 [0, 65535] { R7822 += 1, R7776 += 1 };
  s8 -> s5 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_24 {
  init s0;
  s0 -> s1 [0, 65535] { R7824 += 1, R7778 += 1, R7745 += 1, R7746 += 1 };
  s0 -> s2 [0, 65535] { R7824 += 1, R7778 += 1, R7746 += 1, R7729 += 1, R7730 += 1 };
  s0 -> s0 [0, 65535] { R7823 += 1, R7824 += 1 };
  s0 -> s3 [0, 65535] { R7824 += 1, R7777 += 1, R7778 += 1 };
  s0 -> s4 [111, 111] { R7824 += 1, R7778 += 1, R7746 += 1, R7730 += 1 };
  s1 -> s1 [0, 65535] { R7824 += 1, R7778 += 1, R7745 += 1, R7746 += 1 };
  s1 -> s2 [0, 65535] { R7824 += 1, R7778 += 1, R7746 += 1, R7729 += 1, R7730 += 1 };
  s1 -> s4 [111, 111] { R7824 += 1, R7778 += 1, R7746 += 1, R7730 += 1 };
  s2 -> s2 [0, 65535] { R7824 += 1, R7778 += 1, R7746 += 1, R7729 += 1, R7730 += 1 };
  s2 -> s4 [111, 111] { R7824 += 1, R7778 += 1, R7746 += 1, R7730 += 1 };
  s3 -> s1 [0, 65535] { R7824 += 1, R7778 += 1, R7745 += 1, R7746 += 1 };
  s3 -> s2 [0, 65535] { R7824 += 1, R7778 += 1, R7746 += 1, R7729 += 1, R7730 += 1 };
  s3 -> s3 [0, 65535] { R7824 += 1, R7777 += 1, R7778 += 1 };
  s3 -> s4 [111, 111] { R7824 += 1, R7778 += 1, R7746 += 1, R7730 += 1 };
  s4 -> s5 [99, 99] { R7824 += 1, R7778 += 1, R7746 += 1, R7730 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R7824 += 1, R7778 += 1, R7746 += 1 };
  s5 -> s7 [0, 65535] { R7824 += 1, R7778 += 1 };
  s5 -> s8 [0, 65535] { R7824 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R7824 += 1, R7778 += 1 };
  s7 -> s8 [0, 65535] { R7824 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R7824 += 1 };
  accepting s5, s6, s7, s8;
};
};
constraint R1 = R7722 && R2 = R7746 && R3 = R7070 && R4 = R7824 && R15 = 0 && R16 = R7778 && R5995 = 0 && R5996 = 1 && R5997 = 0 && R5998 = 1 && R7063 - R7778 = 1 && R7064 = R7070 && R7065 - R7778 = 1 && R7066 = R7070 && R7067 - R7778 = 1 && R7068 = R7070 && R7069 - R7778 = 1 && R7721 = 0 && R7725 = 0 && R7726 = 0 && R7729 = 0 && R7730 = 0 && R7731 = 0 && R7732 = R7746 && R7733 = 0 && R7734 = R7746 && R7735 = 0 && R7736 = R7746 && R7737 = 0 && R7738 = R7746 && R7739 = 0 && R7740 = R7746 && R7741 = 0 && R7742 = R7746 && R7743 = 0 && R7744 = R7746 && R7745 = 0 && R7747 = 0 && R7748 = R7778 && R7749 = 0 && R7750 = R7778 && R7751 = 0 && R7752 = R7778 && R7753 = 0 && R7754 = R7778 && R7755 = 0 && R7756 = R7778 && R7757 = 0 && R7758 = R7778 && R7759 = 0 && R7760 = R7778 && R7761 = 0 && R7762 = R7778 && R7763 = 0 && R7764 = R7778 && R7765 = 0 && R7766 = R7778 && R7767 = 0 && R7768 = R7778 && R7769 = 0 && R7770 = R7778 && R7771 = 0 && R7772 = R7778 && R7773 = 0 && R7774 = R7778 && R7775 = 0 && R7776 = R7778 && R7777 = 0 && R7779 = 10 && R7780 = R7824 && R7781 = 10 && R7782 = R7824 && R7783 = 10 && R7784 = R7824 && R7785 = 10 && R7786 = R7824 && R7787 = 10 && R7788 = R7824 && R7789 = 10 && R7790 = R7824 && R7791 = 10 && R7792 = R7824 && R7793 = 10 && R7794 = R7824 && R7795 = 10 && R7796 = R7824 && R7797 = 10 && R7798 = R7824 && R7799 = 10 && R7800 = R7824 && R7801 = 10 && R7802 = R7824 && R7803 = 10 && R7804 = R7824 && R7805 = 10 && R7806 = R7824 && R7807 = 10 && R7808 = R7824 && R7809 = 10 && R7810 = R7824 && R7811 = 10 && R7812 = R7824 && R7813 = 10 && R7814 = R7824 && R7815 = 10 && R7816 = R7824 && R7817 = 10 && R7818 = R7824 && R7819 = 10 && R7820 = R7824 && R7821 = 10 && R7822 = R7824 && R7823 = 10 && R0 != 0 && R7 < 1 && R10 < 1 && R11 < 1 && R7778 < R7070 && -1 < R7722 && 0 < R7746 && -1 < R7778 && 9 < R7824 && (R5991 != 0 || ((R5 != 0 || ((R0 != R5992 || R5992 = 1 || R5992 < 0) && (R0 = R5992 || R5992 = 1 || R0 < 1))) && (R5 = 0 || ((R0 != R5992 || R5992 = 1 || R5992 < 0) && (R5992 != 1 || -1 < R0) && (R0 = R5992 || R5992 = 1))))) && (R5993 != 0 || ((R5 != 0 || ((R0 != R5994 || R5994 = 1 || R5994 < 0) && (R0 = R5994 || R5994 = 1 || R0 < 1))) && (R5 = 0 || ((R0 != R5994 || R5994 = 1 || R5994 < 0) && (R5994 != 1 || -1 < R0) && (R0 = R5994 || R5994 = 1))))) && (R7717 != 0 || R7718 = R7722 || (R5988 = 0 && R7722 = 0)) && (R7719 != 0 || R7720 = R7722 || (R5988 = 0 && R7722 = 0)) && (R5989 = 0 || (R7727 = 0 && R7728 = 0)) && (R5990 = 0 || (R7723 = 0 && R7724 = 0)) && (R5991 = 0 || (R5 = 0 && R0 < 0)) && (R5993 = 0 || (R5 = 0 && R0 < 0)) && (R7717 = 0 || (R5988 = 0 && R7722 = 0)) && (R7719 = 0 || (R5988 = 0 && R7722 = 0));
// End of Parikh automata intersection problem
