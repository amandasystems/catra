// Parikh automata intersection problem, generated by OSTRICH+
counter int R0, R10, R11, R12, R15, R19, R2, R20, R216, R217, R218, R219, R220, R221, R222, R223, R224, R225, R226, R227, R228, R229, R230, R231, R232, R233, R234, R235, R237, R238, R239, R240, R241, R242, R243, R244, R245, R246, R247, R248, R249, R250, R251, R252, R253, R254, R255, R256, R257, R258, R259, R260, R261, R262, R263, R264, R265, R266, R267, R268, R269, R270, R271, R272, R273, R274, R275, R276, R277, R278, R279, R280, R281, R282, R283, R284, R285, R286, R287, R288, R289, R290, R291, R292, R293, R294, R295, R296, R297, R298, R299, R3, R300, R301, R302, R303, R304, R305, R306, R307, R308, R309, R310, R311, R312, R313, R314, R315, R316, R317, R318, R319, R320, R321, R322, R323, R324, R325, R326, R327, R328, R329, R330, R331, R332, R333, R334, R335, R336, R337, R338, R339, R340, R341, R342, R343, R344, R345, R346, R347, R348, R349, R350, R351, R352, R353, R354, R355, R356, R357, R358, R359, R360, R361, R362, R363, R364, R365, R366, R367, R368, R369, R370, R371, R372, R373, R374, R375, R376, R377, R378, R379, R380, R381, R382, R383, R384, R385, R386, R387, R388, R389, R390, R391, R392, R393, R394, R395, R396, R397, R398, R399, R4, R400, R401, R402, R403, R404, R405, R406, R407, R408, R409, R410, R5, R6, R7, R8, R9;
synchronised {  // Automata constraining P70
automaton P70_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R8 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 45] { R348 += 1 };
  s0 -> s0 [0, 65535] { R347 += 1, R348 += 1 };
  s0 -> s2 [46, 46] { R348 += 1 };
  s0 -> s3 [47, 47] { R348 += 1 };
  s0 -> s1 [48, 65535] { R348 += 1 };
  s1 -> s1 [0, 45] { R348 += 1 };
  s1 -> s2 [46, 46] { R348 += 1 };
  s1 -> s3 [47, 47] { R348 += 1 };
  s1 -> s1 [48, 65535] { R348 += 1 };
  s2 -> s1 [0, 45] { R348 += 1 };
  s2 -> s2 [46, 46] { R348 += 1 };
  s2 -> s3 [47, 47] { R348 += 1 };
  s2 -> s1 [48, 114] { R348 += 1 };
  s2 -> s8 [115, 115] { R348 += 1 };
  s2 -> s1 [116, 65535] { R348 += 1 };
  s3 -> s3 [0, 45] { R348 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s4 [46, 46] { R348 += 1 };
  s3 -> s3 [47, 65535] { R348 += 1 };
  s4 -> s3 [0, 45] { R348 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s4 [46, 46] { R348 += 1 };
  s4 -> s3 [47, 114] { R348 += 1 };
  s4 -> s5 [115, 115] { R348 += 1 };
  s4 -> s3 [116, 65535] { R348 += 1 };
  s5 -> s3 [0, 45] { R348 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s4 [46, 46] { R348 += 1 };
  s5 -> s3 [47, 110] { R348 += 1 };
  s5 -> s6 [111, 111] { R348 += 1 };
  s5 -> s3 [112, 65535] { R348 += 1 };
  s6 -> s3 [0, 45] { R348 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s4 [46, 46] { R348 += 1 };
  s6 -> s3 [47, 98] { R348 += 1 };
  s6 -> s7 [99, 99] { R348 += 1 };
  s6 -> s3 [100, 65535] { R348 += 1 };
  s7 -> s3 [0, 45] { R348 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s4 [46, 46] { R348 += 1 };
  s7 -> s3 [47, 106] { R348 += 1 };
  s7 -> s3 [108, 65535] { R348 += 1 };
  s8 -> s1 [0, 45] { R348 += 1 };
  s8 -> s2 [46, 46] { R348 += 1 };
  s8 -> s3 [47, 47] { R348 += 1 };
  s8 -> s1 [48, 110] { R348 += 1 };
  s8 -> s9 [111, 111] { R348 += 1 };
  s8 -> s1 [112, 65535] { R348 += 1 };
  s9 -> s1 [0, 45] { R348 += 1 };
  s9 -> s2 [46, 46] { R348 += 1 };
  s9 -> s3 [47, 47] { R348 += 1 };
  s9 -> s1 [48, 98] { R348 += 1 };
  s9 -> s10 [99, 99] { R348 += 1 };
  s9 -> s1 [100, 65535] { R348 += 1 };
  s10 -> s1 [0, 45] { R348 += 1 };
  s10 -> s2 [46, 46] { R348 += 1 };
  s10 -> s3 [47, 47] { R348 += 1 };
  s10 -> s1 [48, 106] { R348 += 1 };
  s10 -> s1 [108, 65535] { R348 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_3 {
  init s0;
  s0 -> s1 [0, 65535] { R350 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R349 += 1, R350 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R350 += 1, R7 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s1 [0, 46] { R352 += 1, R20 += 1 };
  s0 -> s2 [0, 65535] { R352 += 1, R19 += 1, R20 += 1 };
  s0 -> s0 [0, 65535] { R351 += 1, R352 += 1 };
  s0 -> s3 [47, 47] { R352 += 1 };
  s0 -> s1 [48, 65535] { R352 += 1, R20 += 1 };
  s1 -> s1 [0, 46] { R352 += 1, R20 += 1 };
  s1 -> s3 [47, 47] { R352 += 1 };
  s1 -> s1 [48, 65535] { R352 += 1, R20 += 1 };
  s2 -> s1 [0, 46] { R352 += 1, R20 += 1 };
  s2 -> s2 [0, 65535] { R352 += 1, R19 += 1, R20 += 1 };
  s2 -> s3 [47, 47] { R352 += 1 };
  s2 -> s1 [48, 65535] { R352 += 1, R20 += 1 };
  s3 -> s3 [0, 65535] { R352 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 63] { R354 += 1, R264 += 1 };
  s0 -> s0 [0, 65535] { R353 += 1, R354 += 1 };
  s0 -> s2 [0, 65535] { R354 += 1, R263 += 1, R264 += 1 };
  s0 -> s3 [64, 64] { R354 += 1, R264 += 1 };
  s0 -> s1 [65, 65535] { R354 += 1, R264 += 1 };
  s1 -> s1 [0, 63] { R354 += 1, R264 += 1 };
  s1 -> s3 [64, 64] { R354 += 1, R264 += 1 };
  s1 -> s1 [65, 65535] { R354 += 1, R264 += 1 };
  s2 -> s1 [0, 63] { R354 += 1, R264 += 1 };
  s2 -> s2 [0, 65535] { R354 += 1, R263 += 1, R264 += 1 };
  s2 -> s3 [64, 64] { R354 += 1, R264 += 1 };
  s2 -> s1 [65, 65535] { R354 += 1, R264 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R354 += 1, R264 += 1 };
  s3 -> s5 [0, 65535] { R354 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R354 += 1 };
  accepting s3, s4, s5;
};
automaton uri_6 {
  init s0;
  s0 -> s1 [0, 65535] { R356 += 1, R265 += 1, R266 += 1 };
  s0 -> s0 [0, 65535] { R355 += 1, R356 += 1 };
  s0 -> s2 [0, 65535] { R356 += 1, R266 += 1, R6 += 1 };
  s1 -> s1 [0, 65535] { R356 += 1, R265 += 1, R266 += 1 };
  s1 -> s2 [0, 65535] { R356 += 1, R266 += 1, R6 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R356 += 1 };
  s2 -> s2 [0, 65535] { R356 += 1, R266 += 1, R6 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R356 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_7 {
  init s0;
  s0 -> s1 [0, 42] { R358 += 1, R268 += 1, R228 += 1 };
  s0 -> s0 [0, 65535] { R357 += 1, R358 += 1 };
  s0 -> s2 [0, 65535] { R358 += 1, R268 += 1, R227 += 1, R228 += 1 };
  s0 -> s3 [0, 65535] { R358 += 1, R267 += 1, R268 += 1 };
  s0 -> s4 [43, 43] { R358 += 1, R268 += 1, R228 += 1 };
  s0 -> s1 [44, 57] { R358 += 1, R268 += 1, R228 += 1 };
  s0 -> s1 [59, 63] { R358 += 1, R268 += 1, R228 += 1 };
  s0 -> s1 [65, 65535] { R358 += 1, R268 += 1, R228 += 1 };
  s1 -> s1 [0, 42] { R358 += 1, R268 += 1, R228 += 1 };
  s1 -> s4 [43, 43] { R358 += 1, R268 += 1, R228 += 1 };
  s1 -> s1 [44, 57] { R358 += 1, R268 += 1, R228 += 1 };
  s1 -> s1 [59, 63] { R358 += 1, R268 += 1, R228 += 1 };
  s1 -> s1 [65, 65535] { R358 += 1, R268 += 1, R228 += 1 };
  s2 -> s1 [0, 42] { R358 += 1, R268 += 1, R228 += 1 };
  s2 -> s2 [0, 65535] { R358 += 1, R268 += 1, R227 += 1, R228 += 1 };
  s2 -> s4 [43, 43] { R358 += 1, R268 += 1, R228 += 1 };
  s2 -> s1 [44, 57] { R358 += 1, R268 += 1, R228 += 1 };
  s2 -> s1 [59, 63] { R358 += 1, R268 += 1, R228 += 1 };
  s2 -> s1 [65, 65535] { R358 += 1, R268 += 1, R228 += 1 };
  s3 -> s1 [0, 42] { R358 += 1, R268 += 1, R228 += 1 };
  s3 -> s2 [0, 65535] { R358 += 1, R268 += 1, R227 += 1, R228 += 1 };
  s3 -> s3 [0, 65535] { R358 += 1, R267 += 1, R268 += 1 };
  s3 -> s4 [43, 43] { R358 += 1, R268 += 1, R228 += 1 };
  s3 -> s1 [44, 57] { R358 += 1, R268 += 1, R228 += 1 };
  s3 -> s1 [59, 63] { R358 += 1, R268 += 1, R228 += 1 };
  s3 -> s1 [65, 65535] { R358 += 1, R268 += 1, R228 += 1 };
  s4 -> s4 [0, 57] { R358 += 1, R268 += 1, R228 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R358 += 1, R268 += 1 };
  s4 -> s6 [0, 65535] { R358 += 1 };
  s4 -> s4 [59, 63] { R358 += 1, R268 += 1, R228 += 1 };
  s4 -> s4 [65, 65535] { R358 += 1, R268 += 1, R228 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R358 += 1 };
  accepting s4, s5, s6;
};
automaton uri_8 {
  init s0;
  s0 -> s1 [0, 65535] { R360 += 1, R270 += 1, R229 += 1, R230 += 1 };
  s0 -> s2 [0, 65535] { R360 += 1, R270 += 1, R230 += 1, R0 += 1 };
  s0 -> s0 [0, 65535] { R359 += 1, R360 += 1 };
  s0 -> s3 [0, 65535] { R360 += 1, R269 += 1, R270 += 1 };
  s1 -> s1 [0, 65535] { R360 += 1, R270 += 1, R229 += 1, R230 += 1 };
  s1 -> s2 [0, 65535] { R360 += 1, R270 += 1, R230 += 1, R0 += 1 };
  s1 -> s5 [0, 65535] { R360 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R360 += 1, R270 += 1, R230 += 1, R0 += 1 };
  s2 -> s5 [0, 65535] { R360 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s6 [0, 65535] { R360 += 1, R270 += 1 };
  s3 -> s1 [0, 65535] { R360 += 1, R270 += 1, R229 += 1, R230 += 1 };
  s3 -> s2 [0, 65535] { R360 += 1, R270 += 1, R230 += 1, R0 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R360 += 1, R269 += 1, R270 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R360 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R360 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R360 += 1, R270 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_9 {
  init s0;
  s0 -> s1 [0, 36] { R362 += 1, R272 += 1, R232 += 1 };
  s0 -> s2 [0, 65535] { R362 += 1, R271 += 1, R272 += 1 };
  s0 -> s0 [0, 65535] { R361 += 1, R362 += 1 };
  s0 -> s3 [0, 65535] { R362 += 1, R272 += 1, R231 += 1, R232 += 1 };
  s0 -> s1 [38, 42] { R362 += 1, R272 += 1, R232 += 1 };
  s0 -> s1 [44, 57] { R362 += 1, R272 += 1, R232 += 1 };
  s0 -> s1 [59, 63] { R362 += 1, R272 += 1, R232 += 1 };
  s0 -> s1 [65, 65535] { R362 += 1, R272 += 1, R232 += 1 };
  s1 -> s1 [0, 36] { R362 += 1, R272 += 1, R232 += 1 };
  s1 -> s1 [0, 65535] { R362 += 1, R272 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R362 += 1 };
  s1 -> s1 [38, 42] { R362 += 1, R272 += 1, R232 += 1 };
  s1 -> s1 [44, 57] { R362 += 1, R272 += 1, R232 += 1 };
  s1 -> s1 [59, 63] { R362 += 1, R272 += 1, R232 += 1 };
  s1 -> s1 [65, 65535] { R362 += 1, R272 += 1, R232 += 1 };
  s2 -> s1 [0, 36] { R362 += 1, R272 += 1, R232 += 1 };
  s2 -> s2 [0, 65535] { R362 += 1, R271 += 1, R272 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R362 += 1, R272 += 1, R231 += 1, R232 += 1 };
  s2 -> s1 [38, 42] { R362 += 1, R272 += 1, R232 += 1 };
  s2 -> s1 [44, 57] { R362 += 1, R272 += 1, R232 += 1 };
  s2 -> s1 [59, 63] { R362 += 1, R272 += 1, R232 += 1 };
  s2 -> s1 [65, 65535] { R362 += 1, R272 += 1, R232 += 1 };
  s3 -> s1 [0, 36] { R362 += 1, R272 += 1, R232 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R362 += 1, R272 += 1, R231 += 1, R232 += 1 };
  s3 -> s5 [0, 65535] { R362 += 1 };
  s3 -> s1 [38, 42] { R362 += 1, R272 += 1, R232 += 1 };
  s3 -> s1 [44, 57] { R362 += 1, R272 += 1, R232 += 1 };
  s3 -> s1 [59, 63] { R362 += 1, R272 += 1, R232 += 1 };
  s3 -> s1 [65, 65535] { R362 += 1, R272 += 1, R232 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R362 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_10 {
  init s0;
  s0 -> s1 [0, 65535] { R364 += 1, R274 += 1, R233 += 1, R234 += 1 };
  s0 -> s2 [0, 65535] { R364 += 1, R274 += 1, R234 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R363 += 1, R364 += 1 };
  s0 -> s3 [0, 65535] { R364 += 1, R273 += 1, R274 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R364 += 1, R274 += 1, R233 += 1, R234 += 1 };
  s1 -> s5 [0, 65535] { R364 += 1 };
  s1 -> s2 [0, 65535] { R364 += 1, R274 += 1, R234 += 1, R3 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R364 += 1 };
  s2 -> s2 [0, 65535] { R364 += 1, R274 += 1, R234 += 1, R3 += 1 };
  s2 -> s6 [0, 65535] { R364 += 1, R274 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R364 += 1, R274 += 1, R233 += 1, R234 += 1 };
  s3 -> s2 [0, 65535] { R364 += 1, R274 += 1, R234 += 1, R3 += 1 };
  s3 -> s3 [0, 65535] { R364 += 1, R273 += 1, R274 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R364 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R364 += 1 };
  s6 -> s6 [0, 65535] { R364 += 1, R274 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_11 {
  init s0;
  s0 -> s1 [0, 43] { R366 += 1, R276 += 1, R238 += 1 };
  s0 -> s2 [0, 65535] { R366 += 1, R275 += 1, R276 += 1 };
  s0 -> s3 [0, 65535] { R366 += 1, R276 += 1, R237 += 1, R238 += 1 };
  s0 -> s0 [0, 65535] { R365 += 1, R366 += 1 };
  s0 -> s1 [45, 64] { R366 += 1, R276 += 1, R238 += 1 };
  s0 -> s1 [91, 65535] { R366 += 1, R276 += 1, R238 += 1 };
  s1 -> s1 [0, 43] { R366 += 1, R276 += 1, R238 += 1 };
  s1 -> s4 [0, 65535] { R366 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R366 += 1, R276 += 1 };
  s1 -> s1 [45, 64] { R366 += 1, R276 += 1, R238 += 1 };
  s1 -> s1 [91, 65535] { R366 += 1, R276 += 1, R238 += 1 };
  s2 -> s1 [0, 43] { R366 += 1, R276 += 1, R238 += 1 };
  s2 -> s2 [0, 65535] { R366 += 1, R275 += 1, R276 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R366 += 1, R276 += 1, R237 += 1, R238 += 1 };
  s2 -> s1 [45, 64] { R366 += 1, R276 += 1, R238 += 1 };
  s2 -> s1 [91, 65535] { R366 += 1, R276 += 1, R238 += 1 };
  s3 -> s1 [0, 43] { R366 += 1, R276 += 1, R238 += 1 };
  s3 -> s4 [0, 65535] { R366 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R366 += 1, R276 += 1, R237 += 1, R238 += 1 };
  s3 -> s1 [45, 64] { R366 += 1, R276 += 1, R238 += 1 };
  s3 -> s1 [91, 65535] { R366 += 1, R276 += 1, R238 += 1 };
  s4 -> s4 [0, 65535] { R366 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_12 {
  init s0;
  s0 -> s1 [0, 65535] { R368 += 1, R278 += 1, R239 += 1, R240 += 1 };
  s0 -> s2 [0, 65535] { R368 += 1, R278 += 1, R240 += 1, R2 += 1 };
  s0 -> s3 [0, 65535] { R368 += 1, R277 += 1, R278 += 1 };
  s0 -> s0 [0, 65535] { R367 += 1, R368 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R368 += 1, R278 += 1, R239 += 1, R240 += 1 };
  s1 -> s2 [0, 65535] { R368 += 1, R278 += 1, R240 += 1, R2 += 1 };
  s1 -> s6 [0, 65535] { R368 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R368 += 1, R278 += 1, R240 += 1, R2 += 1 };
  s2 -> s5 [0, 65535] { R368 += 1, R278 += 1 };
  s2 -> s6 [0, 65535] { R368 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R368 += 1, R278 += 1, R239 += 1, R240 += 1 };
  s3 -> s2 [0, 65535] { R368 += 1, R278 += 1, R240 += 1, R2 += 1 };
  s3 -> s3 [0, 65535] { R368 += 1, R277 += 1, R278 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R368 += 1, R278 += 1 };
  s5 -> s6 [0, 65535] { R368 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R368 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_13 {
  init s0;
  s0 -> s1 [0, 57] { R370 += 1, R280 += 1, R242 += 1 };
  s0 -> s2 [0, 65535] { R370 += 1, R280 += 1, R242 += 1, R11 += 1 };
  s0 -> s3 [0, 65535] { R370 += 1, R279 += 1, R280 += 1 };
  s0 -> s4 [0, 65535] { R370 += 1, R280 += 1, R241 += 1, R242 += 1 };
  s0 -> s0 [0, 65535] { R369 += 1, R370 += 1 };
  s0 -> s5 [58, 58] { R370 += 1, R280 += 1, R242 += 1 };
  s0 -> s1 [59, 65535] { R370 += 1, R280 += 1, R242 += 1 };
  s1 -> s1 [0, 57] { R370 += 1, R280 += 1, R242 += 1 };
  s1 -> s6 [0, 65535] { R370 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R370 += 1, R280 += 1 };
  s1 -> s5 [58, 58] { R370 += 1, R280 += 1, R242 += 1 };
  s1 -> s1 [59, 65535] { R370 += 1, R280 += 1, R242 += 1 };
  s2 -> s1 [0, 57] { R370 += 1, R280 += 1, R242 += 1 };
  s2 -> s2 [0, 65535] { R370 += 1, R280 += 1, R242 += 1, R11 += 1 };
  s2 -> s6 [0, 65535] { R370 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s8 [0, 65535] { R370 += 1, R280 += 1 };
  s2 -> s5 [58, 58] { R370 += 1, R280 += 1, R242 += 1 };
  s2 -> s1 [59, 65535] { R370 += 1, R280 += 1, R242 += 1 };
  s3 -> s1 [0, 57] { R370 += 1, R280 += 1, R242 += 1 };
  s3 -> s2 [0, 65535] { R370 += 1, R280 += 1, R242 += 1, R11 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R370 += 1, R279 += 1, R280 += 1 };
  s3 -> s4 [0, 65535] { R370 += 1, R280 += 1, R241 += 1, R242 += 1 };
  s3 -> s5 [58, 58] { R370 += 1, R280 += 1, R242 += 1 };
  s3 -> s1 [59, 65535] { R370 += 1, R280 += 1, R242 += 1 };
  s4 -> s1 [0, 57] { R370 += 1, R280 += 1, R242 += 1 };
  s4 -> s2 [0, 65535] { R370 += 1, R280 += 1, R242 += 1, R11 += 1 };
  s4 -> s6 [0, 65535] { R370 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R370 += 1, R280 += 1, R241 += 1, R242 += 1 };
  s4 -> s5 [58, 58] { R370 += 1, R280 += 1, R242 += 1 };
  s4 -> s1 [59, 65535] { R370 += 1, R280 += 1, R242 += 1 };
  s5 -> s5 [0, 65535] { R370 += 1, R280 += 1, R242 += 1 };
  s6 -> s6 [0, 65535] { R370 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R370 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R370 += 1, R280 += 1 };
  accepting s3, s4, s8, s2, s6, s1, s7, s0;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 90] { R372 += 1, R282 += 1, R244 += 1, R220 += 1 };
  s0 -> s2 [0, 65535] { R372 += 1, R282 += 1, R243 += 1, R244 += 1 };
  s0 -> s3 [0, 65535] { R372 += 1, R282 += 1, R244 += 1, R219 += 1, R220 += 1 };
  s0 -> s4 [0, 65535] { R372 += 1, R281 += 1, R282 += 1 };
  s0 -> s0 [0, 65535] { R371 += 1, R372 += 1 };
  s0 -> s5 [91, 91] { R372 += 1, R282 += 1, R244 += 1, R220 += 1 };
  s0 -> s1 [92, 65535] { R372 += 1, R282 += 1, R244 += 1, R220 += 1 };
  s1 -> s1 [0, 65535] { R372 += 1, R282 += 1, R244 += 1, R220 += 1 };
  s1 -> s7 [0, 65535] { R372 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s8 [0, 65535] { R372 += 1, R282 += 1 };
  s1 -> s9 [0, 65535] { R372 += 1, R282 += 1, R244 += 1 };
  s2 -> s1 [0, 90] { R372 += 1, R282 += 1, R244 += 1, R220 += 1 };
  s2 -> s2 [0, 65535] { R372 += 1, R282 += 1, R243 += 1, R244 += 1 };
  s2 -> s7 [0, 65535] { R372 += 1 };
  s2 -> s3 [0, 65535] { R372 += 1, R282 += 1, R244 += 1, R219 += 1, R220 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s5 [91, 91] { R372 += 1, R282 += 1, R244 += 1, R220 += 1 };
  s2 -> s1 [92, 65535] { R372 += 1, R282 += 1, R244 += 1, R220 += 1 };
  s3 -> s1 [0, 90] { R372 += 1, R282 += 1, R244 += 1, R220 += 1 };
  s3 -> s7 [0, 65535] { R372 += 1 };
  s3 -> s3 [0, 65535] { R372 += 1, R282 += 1, R244 += 1, R219 += 1, R220 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s8 [0, 65535] { R372 += 1, R282 += 1 };
  s3 -> s5 [91, 91] { R372 += 1, R282 += 1, R244 += 1, R220 += 1 };
  s3 -> s1 [92, 65535] { R372 += 1, R282 += 1, R244 += 1, R220 += 1 };
  s4 -> s1 [0, 90] { R372 += 1, R282 += 1, R244 += 1, R220 += 1 };
  s4 -> s2 [0, 65535] { R372 += 1, R282 += 1, R243 += 1, R244 += 1 };
  s4 -> s3 [0, 65535] { R372 += 1, R282 += 1, R244 += 1, R219 += 1, R220 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R372 += 1, R281 += 1, R282 += 1 };
  s4 -> s5 [91, 91] { R372 += 1, R282 += 1, R244 += 1, R220 += 1 };
  s4 -> s1 [92, 65535] { R372 += 1, R282 += 1, R244 += 1, R220 += 1 };
  s5 -> s1 [0, 65535] { R372 += 1, R282 += 1, R244 += 1, R220 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R372 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R372 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R372 += 1, R282 += 1 };
  s9 -> s7 [0, 65535] { R372 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s8 [0, 65535] { R372 += 1, R282 += 1 };
  s9 -> s9 [0, 65535] { R372 += 1, R282 += 1, R244 += 1 };
  accepting s3, s4, s8, s2, s9, s6, s1, s7, s0;
};
automaton uri_15 {
  init s0;
  s0 -> s1 [0, 65535] { R374 += 1, R284 += 1, R246 += 1, R221 += 1, R222 += 1 };
  s0 -> s2 [0, 65535] { R374 += 1, R284 += 1, R246 += 1, R222 += 1, R9 += 1 };
  s0 -> s3 [0, 65535] { R374 += 1, R284 += 1, R245 += 1, R246 += 1 };
  s0 -> s4 [0, 65535] { R374 += 1, R283 += 1, R284 += 1 };
  s0 -> s0 [0, 65535] { R373 += 1, R374 += 1 };
  s1 -> s1 [0, 65535] { R374 += 1, R284 += 1, R246 += 1, R221 += 1, R222 += 1 };
  s1 -> s2 [0, 65535] { R374 += 1, R284 += 1, R246 += 1, R222 += 1, R9 += 1 };
  s1 -> s6 [0, 65535] { R374 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R374 += 1, R284 += 1 };
  s2 -> s2 [0, 65535] { R374 += 1, R284 += 1, R246 += 1, R222 += 1, R9 += 1 };
  s2 -> s6 [0, 65535] { R374 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R374 += 1, R284 += 1 };
  s2 -> s8 [0, 65535] { R374 += 1, R284 += 1, R246 += 1 };
  s3 -> s1 [0, 65535] { R374 += 1, R284 += 1, R246 += 1, R221 += 1, R222 += 1 };
  s3 -> s2 [0, 65535] { R374 += 1, R284 += 1, R246 += 1, R222 += 1, R9 += 1 };
  s3 -> s3 [0, 65535] { R374 += 1, R284 += 1, R245 += 1, R246 += 1 };
  s3 -> s6 [0, 65535] { R374 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R374 += 1, R284 += 1, R246 += 1, R221 += 1, R222 += 1 };
  s4 -> s2 [0, 65535] { R374 += 1, R284 += 1, R246 += 1, R222 += 1, R9 += 1 };
  s4 -> s3 [0, 65535] { R374 += 1, R284 += 1, R245 += 1, R246 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R374 += 1, R283 += 1, R284 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R374 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R374 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R374 += 1, R284 += 1 };
  s8 -> s6 [0, 65535] { R374 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s7 [0, 65535] { R374 += 1, R284 += 1 };
  s8 -> s8 [0, 65535] { R374 += 1, R284 += 1, R246 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 42] { R376 += 1, R312 += 1 };
  s0 -> s0 [0, 65535] { R375 += 1, R376 += 1 };
  s0 -> s2 [0, 65535] { R376 += 1, R311 += 1, R312 += 1 };
  s0 -> s3 [43, 43] { R376 += 1, R312 += 1 };
  s0 -> s1 [44, 45] { R376 += 1, R312 += 1 };
  s0 -> s1 [47, 62] { R376 += 1, R312 += 1 };
  s0 -> s1 [64, 65535] { R376 += 1, R312 += 1 };
  s1 -> s1 [0, 42] { R376 += 1, R312 += 1 };
  s1 -> s3 [43, 43] { R376 += 1, R312 += 1 };
  s1 -> s1 [44, 45] { R376 += 1, R312 += 1 };
  s1 -> s1 [47, 62] { R376 += 1, R312 += 1 };
  s1 -> s1 [64, 65535] { R376 += 1, R312 += 1 };
  s2 -> s1 [0, 42] { R376 += 1, R312 += 1 };
  s2 -> s2 [0, 65535] { R376 += 1, R311 += 1, R312 += 1 };
  s2 -> s3 [43, 43] { R376 += 1, R312 += 1 };
  s2 -> s1 [44, 45] { R376 += 1, R312 += 1 };
  s2 -> s1 [47, 62] { R376 += 1, R312 += 1 };
  s2 -> s1 [64, 65535] { R376 += 1, R312 += 1 };
  s3 -> s3 [0, 45] { R376 += 1, R312 += 1 };
  s3 -> s3 [0, 65535] { R376 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [47, 62] { R376 += 1, R312 += 1 };
  s3 -> s3 [64, 65535] { R376 += 1, R312 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton uri_17 {
  init s0;
  s0 -> s1 [0, 65535] { R378 += 1, R313 += 1, R314 += 1 };
  s0 -> s0 [0, 65535] { R377 += 1, R378 += 1 };
  s0 -> s2 [0, 65535] { R378 += 1, R314 += 1, R5 += 1 };
  s1 -> s1 [0, 65535] { R378 += 1, R313 += 1, R314 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R378 += 1, R314 += 1, R5 += 1 };
  s2 -> s3 [0, 65535] { R378 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R378 += 1, R314 += 1, R5 += 1 };
  s3 -> s3 [0, 65535] { R378 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 42] { R380 += 1, R316 += 1 };
  s0 -> s2 [0, 65535] { R380 += 1, R316 += 1, R15 += 1 };
  s0 -> s0 [0, 65535] { R379 += 1, R380 += 1 };
  s0 -> s3 [0, 65535] { R380 += 1, R315 += 1, R316 += 1 };
  s0 -> s4 [43, 43] { R380 += 1, R316 += 1 };
  s0 -> s1 [44, 65535] { R380 += 1, R316 += 1 };
  s1 -> s1 [0, 42] { R380 += 1, R316 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R380 += 1 };
  s1 -> s4 [43, 43] { R380 += 1, R316 += 1 };
  s1 -> s1 [44, 65535] { R380 += 1, R316 += 1 };
  s2 -> s1 [0, 42] { R380 += 1, R316 += 1 };
  s2 -> s2 [0, 65535] { R380 += 1, R316 += 1, R15 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R380 += 1 };
  s2 -> s4 [43, 43] { R380 += 1, R316 += 1 };
  s2 -> s1 [44, 65535] { R380 += 1, R316 += 1 };
  s3 -> s1 [0, 42] { R380 += 1, R316 += 1 };
  s3 -> s2 [0, 65535] { R380 += 1, R316 += 1, R15 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R380 += 1, R315 += 1, R316 += 1 };
  s3 -> s4 [43, 43] { R380 += 1, R316 += 1 };
  s3 -> s1 [44, 65535] { R380 += 1, R316 += 1 };
  s4 -> s4 [0, 65535] { R380 += 1, R316 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R380 += 1 };
  accepting s3, s5, s2, s6, s1, s0;
};
automaton uri_19 {
  init s0;
  s0 -> s1 [0, 62] { R382 += 1, R318 += 1, R224 += 1 };
  s0 -> s0 [0, 65535] { R381 += 1, R382 += 1 };
  s0 -> s2 [0, 65535] { R382 += 1, R318 += 1, R223 += 1, R224 += 1 };
  s0 -> s3 [0, 65535] { R382 += 1, R317 += 1, R318 += 1 };
  s0 -> s4 [63, 63] { R382 += 1, R318 += 1, R224 += 1 };
  s0 -> s1 [64, 65535] { R382 += 1, R318 += 1, R224 += 1 };
  s1 -> s1 [0, 65535] { R382 += 1, R318 += 1, R224 += 1 };
  s1 -> s6 [0, 65535] { R382 += 1 };
  s1 -> s7 [0, 65535] { R382 += 1, R318 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 62] { R382 += 1, R318 += 1, R224 += 1 };
  s2 -> s6 [0, 65535] { R382 += 1 };
  s2 -> s2 [0, 65535] { R382 += 1, R318 += 1, R223 += 1, R224 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s4 [63, 63] { R382 += 1, R318 += 1, R224 += 1 };
  s2 -> s1 [64, 65535] { R382 += 1, R318 += 1, R224 += 1 };
  s3 -> s1 [0, 62] { R382 += 1, R318 += 1, R224 += 1 };
  s3 -> s2 [0, 65535] { R382 += 1, R318 += 1, R223 += 1, R224 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R382 += 1, R317 += 1, R318 += 1 };
  s3 -> s4 [63, 63] { R382 += 1, R318 += 1, R224 += 1 };
  s3 -> s1 [64, 65535] { R382 += 1, R318 += 1, R224 += 1 };
  s4 -> s1 [0, 65535] { R382 += 1, R318 += 1, R224 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R382 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R382 += 1 };
  s7 -> s7 [0, 65535] { R382 += 1, R318 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s5, s2, s6, s1, s7, s0;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 65535] { R384 += 1, R320 += 1, R225 += 1, R226 += 1 };
  s0 -> s2 [0, 65535] { R384 += 1, R320 += 1, R226 += 1, R10 += 1 };
  s0 -> s3 [0, 65535] { R384 += 1, R319 += 1, R320 += 1 };
  s0 -> s0 [0, 65535] { R383 += 1, R384 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R384 += 1, R320 += 1, R225 += 1, R226 += 1 };
  s1 -> s6 [0, 65535] { R384 += 1 };
  s1 -> s2 [0, 65535] { R384 += 1, R320 += 1, R226 += 1, R10 += 1 };
  s2 -> s5 [0, 65535] { R384 += 1, R320 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s6 [0, 65535] { R384 += 1 };
  s2 -> s2 [0, 65535] { R384 += 1, R320 += 1, R226 += 1, R10 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R384 += 1, R320 += 1, R225 += 1, R226 += 1 };
  s3 -> s2 [0, 65535] { R384 += 1, R320 += 1, R226 += 1, R10 += 1 };
  s3 -> s3 [0, 65535] { R384 += 1, R319 += 1, R320 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R384 += 1, R320 += 1 };
  s5 -> s4 [0, 65535];
  s5 -> s6 [0, 65535] { R384 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R384 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_21 {
  init s0;
  s0 -> s1 [0, 65535] { R386 += 1, R322 += 1, R258 += 1, R218 += 1 };
  s0 -> s0 [0, 65535] { R385 += 1, R386 += 1 };
  s0 -> s2 [0, 65535] { R386 += 1, R321 += 1, R322 += 1 };
  s0 -> s3 [0, 65535] { R386 += 1, R322 += 1, R257 += 1, R258 += 1 };
  s1 -> s1 [0, 65535] { R386 += 1, R322 += 1, R258 += 1, R218 += 1 };
  s1 -> s6 [0, 65535] { R386 += 1, R322 += 1 };
  s1 -> s4 [0, 65535] { R386 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R386 += 1, R322 += 1, R258 += 1, R218 += 1 };
  s2 -> s2 [0, 65535] { R386 += 1, R321 += 1, R322 += 1 };
  s2 -> s3 [0, 65535] { R386 += 1, R322 += 1, R257 += 1, R258 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R386 += 1, R322 += 1, R258 += 1, R218 += 1 };
  s3 -> s4 [0, 65535] { R386 += 1 };
  s3 -> s3 [0, 65535] { R386 += 1, R322 += 1, R257 += 1, R258 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R386 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R386 += 1, R322 += 1 };
  s6 -> s4 [0, 65535] { R386 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_22 {
  init s0;
  s0 -> s1 [0, 36] { R388 += 1, R324 += 1, R260 += 1 };
  s0 -> s0 [0, 65535] { R387 += 1, R388 += 1 };
  s0 -> s2 [0, 65535] { R388 += 1, R324 += 1, R259 += 1, R260 += 1 };
  s0 -> s3 [0, 65535] { R388 += 1, R323 += 1, R324 += 1 };
  s0 -> s1 [38, 42] { R388 += 1, R324 += 1, R260 += 1 };
  s0 -> s4 [43, 43] { R388 += 1, R324 += 1, R260 += 1 };
  s0 -> s5 [43, 43] { R388 += 1, R324 += 1, R260 += 1 };
  s0 -> s1 [44, 65535] { R388 += 1, R324 += 1, R260 += 1 };
  s1 -> s1 [0, 36] { R388 += 1, R324 += 1, R260 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R388 += 1, R324 += 1 };
  s1 -> s7 [0, 65535] { R388 += 1 };
  s1 -> s1 [38, 42] { R388 += 1, R324 += 1, R260 += 1 };
  s1 -> s4 [43, 43] { R388 += 1, R324 += 1, R260 += 1 };
  s1 -> s5 [43, 43] { R388 += 1, R324 += 1, R260 += 1 };
  s1 -> s1 [44, 65535] { R388 += 1, R324 += 1, R260 += 1 };
  s2 -> s1 [0, 36] { R388 += 1, R324 += 1, R260 += 1 };
  s2 -> s2 [0, 65535] { R388 += 1, R324 += 1, R259 += 1, R260 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R388 += 1 };
  s2 -> s1 [38, 42] { R388 += 1, R324 += 1, R260 += 1 };
  s2 -> s4 [43, 43] { R388 += 1, R324 += 1, R260 += 1 };
  s2 -> s5 [43, 43] { R388 += 1, R324 += 1, R260 += 1 };
  s2 -> s1 [44, 65535] { R388 += 1, R324 += 1, R260 += 1 };
  s3 -> s1 [0, 36] { R388 += 1, R324 += 1, R260 += 1 };
  s3 -> s2 [0, 65535] { R388 += 1, R324 += 1, R259 += 1, R260 += 1 };
  s3 -> s3 [0, 65535] { R388 += 1, R323 += 1, R324 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [38, 42] { R388 += 1, R324 += 1, R260 += 1 };
  s3 -> s4 [43, 43] { R388 += 1, R324 += 1, R260 += 1 };
  s3 -> s5 [43, 43] { R388 += 1, R324 += 1, R260 += 1 };
  s3 -> s1 [44, 65535] { R388 += 1, R324 += 1, R260 += 1 };
  s4 -> s4 [0, 36] { R388 += 1, R324 += 1, R260 += 1 };
  s4 -> s4 [0, 65535] { R388 += 1, R324 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R388 += 1 };
  s4 -> s4 [38, 65535] { R388 += 1, R324 += 1, R260 += 1 };
  s5 -> s5 [0, 65535] { R388 += 1, R324 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R388 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R388 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton uri_23 {
  init s0;
  s0 -> s1 [0, 42] { R390 += 1, R326 += 1, R262 += 1, R235 += 1 };
  s0 -> s0 [0, 65535] { R389 += 1, R390 += 1 };
  s0 -> s2 [0, 65535] { R390 += 1, R326 += 1, R261 += 1, R262 += 1 };
  s0 -> s3 [0, 65535] { R390 += 1, R325 += 1, R326 += 1 };
  s0 -> s4 [43, 43] { R390 += 1, R326 += 1, R262 += 1, R235 += 1 };
  s0 -> s5 [43, 43] { R390 += 1, R326 += 1, R262 += 1, R235 += 1 };
  s0 -> s1 [44, 65535] { R390 += 1, R326 += 1, R262 += 1, R235 += 1 };
  s1 -> s1 [0, 42] { R390 += 1, R326 += 1, R262 += 1, R235 += 1 };
  s1 -> s1 [0, 65535] { R390 += 1, R326 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s8 [0, 65535] { R390 += 1 };
  s1 -> s4 [43, 43] { R390 += 1, R326 += 1, R262 += 1, R235 += 1 };
  s1 -> s5 [43, 43] { R390 += 1, R326 += 1, R262 += 1, R235 += 1 };
  s1 -> s1 [44, 65535] { R390 += 1, R326 += 1, R262 += 1, R235 += 1 };
  s2 -> s1 [0, 42] { R390 += 1, R326 += 1, R262 += 1, R235 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R390 += 1, R326 += 1, R261 += 1, R262 += 1 };
  s2 -> s8 [0, 65535] { R390 += 1 };
  s2 -> s4 [43, 43] { R390 += 1, R326 += 1, R262 += 1, R235 += 1 };
  s2 -> s5 [43, 43] { R390 += 1, R326 += 1, R262 += 1, R235 += 1 };
  s2 -> s1 [44, 65535] { R390 += 1, R326 += 1, R262 += 1, R235 += 1 };
  s3 -> s1 [0, 42] { R390 += 1, R326 += 1, R262 += 1, R235 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R390 += 1, R326 += 1, R261 += 1, R262 += 1 };
  s3 -> s3 [0, 65535] { R390 += 1, R325 += 1, R326 += 1 };
  s3 -> s4 [43, 43] { R390 += 1, R326 += 1, R262 += 1, R235 += 1 };
  s3 -> s5 [43, 43] { R390 += 1, R326 += 1, R262 += 1, R235 += 1 };
  s3 -> s1 [44, 65535] { R390 += 1, R326 += 1, R262 += 1, R235 += 1 };
  s4 -> s4 [0, 65535] { R390 += 1, R326 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s8 [0, 65535] { R390 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R390 += 1, R326 += 1 };
  s5 -> s8 [0, 65535] { R390 += 1 };
  s5 -> s5 [0, 65535] { R390 += 1, R326 += 1, R262 += 1, R235 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R390 += 1, R326 += 1 };
  s7 -> s8 [0, 65535] { R390 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R390 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_24 {
  init s0;
  s0 -> s1 [0, 42] { R392 += 1, R328 += 1, R292 += 1 };
  s0 -> s2 [0, 65535] { R392 += 1, R327 += 1, R328 += 1 };
  s0 -> s0 [0, 65535] { R391 += 1, R392 += 1 };
  s0 -> s3 [0, 65535] { R392 += 1, R328 += 1, R291 += 1, R292 += 1 };
  s0 -> s4 [43, 43] { R392 += 1, R328 += 1, R292 += 1 };
  s0 -> s1 [44, 65535] { R392 += 1, R328 += 1, R292 += 1 };
  s1 -> s1 [0, 42] { R392 += 1, R328 += 1, R292 += 1 };
  s1 -> s4 [43, 43] { R392 += 1, R328 += 1, R292 += 1 };
  s1 -> s1 [44, 65535] { R392 += 1, R328 += 1, R292 += 1 };
  s2 -> s1 [0, 42] { R392 += 1, R328 += 1, R292 += 1 };
  s2 -> s2 [0, 65535] { R392 += 1, R327 += 1, R328 += 1 };
  s2 -> s3 [0, 65535] { R392 += 1, R328 += 1, R291 += 1, R292 += 1 };
  s2 -> s4 [43, 43] { R392 += 1, R328 += 1, R292 += 1 };
  s2 -> s1 [44, 65535] { R392 += 1, R328 += 1, R292 += 1 };
  s3 -> s1 [0, 42] { R392 += 1, R328 += 1, R292 += 1 };
  s3 -> s3 [0, 65535] { R392 += 1, R328 += 1, R291 += 1, R292 += 1 };
  s3 -> s4 [43, 43] { R392 += 1, R328 += 1, R292 += 1 };
  s3 -> s1 [44, 65535] { R392 += 1, R328 += 1, R292 += 1 };
  s4 -> s5 [0, 65535] { R392 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R392 += 1, R328 += 1 };
  s4 -> s4 [0, 65535] { R392 += 1, R328 += 1, R292 += 1 };
  s5 -> s5 [0, 65535] { R392 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R392 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R392 += 1, R328 += 1 };
  accepting s4, s5, s6, s7;
};
automaton uri_25 {
  init s0;
  s0 -> s0 [0, 65535] { R393 += 1, R394 += 1 };
  s0 -> s1 [0, 65535] { R394 += 1, R329 += 1, R330 += 1 };
  s0 -> s2 [0, 65535] { R394 += 1, R330 += 1, R294 += 1, R4 += 1 };
  s0 -> s3 [0, 65535] { R394 += 1, R330 += 1, R293 += 1, R294 += 1 };
  s1 -> s1 [0, 65535] { R394 += 1, R329 += 1, R330 += 1 };
  s1 -> s2 [0, 65535] { R394 += 1, R330 += 1, R294 += 1, R4 += 1 };
  s1 -> s3 [0, 65535] { R394 += 1, R330 += 1, R293 += 1, R294 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s4 [0, 65535] { R394 += 1 };
  s2 -> s6 [0, 65535] { R394 += 1, R330 += 1 };
  s2 -> s2 [0, 65535] { R394 += 1, R330 += 1, R294 += 1, R4 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R394 += 1 };
  s3 -> s2 [0, 65535] { R394 += 1, R330 += 1, R294 += 1, R4 += 1 };
  s3 -> s3 [0, 65535] { R394 += 1, R330 += 1, R293 += 1, R294 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R394 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R394 += 1 };
  s6 -> s6 [0, 65535] { R394 += 1, R330 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_26 {
  init s0;
  s0 -> s1 [0, 42] { R396 += 1, R332 += 1, R296 += 1 };
  s0 -> s2 [0, 65535] { R396 += 1, R332 += 1, R295 += 1, R296 += 1 };
  s0 -> s3 [0, 65535] { R396 += 1, R331 += 1, R332 += 1 };
  s0 -> s0 [0, 65535] { R395 += 1, R396 += 1 };
  s0 -> s4 [0, 65535] { R396 += 1, R332 += 1, R296 += 1, R12 += 1 };
  s0 -> s5 [43, 43] { R396 += 1, R332 += 1, R296 += 1 };
  s0 -> s1 [44, 65535] { R396 += 1, R332 += 1, R296 += 1 };
  s1 -> s1 [0, 42] { R396 += 1, R332 += 1, R296 += 1 };
  s1 -> s6 [0, 65535] { R396 += 1 };
  s1 -> s1 [0, 65535] { R396 += 1, R332 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s5 [43, 43] { R396 += 1, R332 += 1, R296 += 1 };
  s1 -> s1 [44, 65535] { R396 += 1, R332 += 1, R296 += 1 };
  s2 -> s1 [0, 42] { R396 += 1, R332 += 1, R296 += 1 };
  s2 -> s6 [0, 65535] { R396 += 1 };
  s2 -> s2 [0, 65535] { R396 += 1, R332 += 1, R295 += 1, R296 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [0, 65535] { R396 += 1, R332 += 1, R296 += 1, R12 += 1 };
  s2 -> s5 [43, 43] { R396 += 1, R332 += 1, R296 += 1 };
  s2 -> s1 [44, 65535] { R396 += 1, R332 += 1, R296 += 1 };
  s3 -> s1 [0, 42] { R396 += 1, R332 += 1, R296 += 1 };
  s3 -> s2 [0, 65535] { R396 += 1, R332 += 1, R295 += 1, R296 += 1 };
  s3 -> s3 [0, 65535] { R396 += 1, R331 += 1, R332 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s4 [0, 65535] { R396 += 1, R332 += 1, R296 += 1, R12 += 1 };
  s3 -> s5 [43, 43] { R396 += 1, R332 += 1, R296 += 1 };
  s3 -> s1 [44, 65535] { R396 += 1, R332 += 1, R296 += 1 };
  s4 -> s1 [0, 42] { R396 += 1, R332 += 1, R296 += 1 };
  s4 -> s6 [0, 65535] { R396 += 1 };
  s4 -> s7 [0, 65535] { R396 += 1, R332 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [0, 65535] { R396 += 1, R332 += 1, R296 += 1, R12 += 1 };
  s4 -> s5 [43, 43] { R396 += 1, R332 += 1, R296 += 1 };
  s4 -> s1 [44, 65535] { R396 += 1, R332 += 1, R296 += 1 };
  s5 -> s5 [0, 65535] { R396 += 1, R332 += 1, R296 += 1 };
  s6 -> s6 [0, 65535] { R396 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s6 [0, 65535] { R396 += 1 };
  s7 -> s7 [0, 65535] { R396 += 1, R332 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s2, s6, s1, s7, s0;
};
automaton uri_27 {
  init s0;
  s0 -> s1 [0, 42] { R398 += 1, R334 += 1, R298 += 1, R250 += 1 };
  s0 -> s2 [0, 65535] { R398 += 1, R333 += 1, R334 += 1 };
  s0 -> s3 [0, 65535] { R398 += 1, R334 += 1, R297 += 1, R298 += 1 };
  s0 -> s4 [0, 65535] { R398 += 1, R334 += 1, R298 += 1, R249 += 1, R250 += 1 };
  s0 -> s0 [0, 65535] { R397 += 1, R398 += 1 };
  s0 -> s1 [44, 65535] { R398 += 1, R334 += 1, R298 += 1, R250 += 1 };
  s1 -> s1 [0, 42] { R398 += 1, R334 += 1, R298 += 1, R250 += 1 };
  s1 -> s5 [0, 65535] { R398 += 1, R334 += 1 };
  s1 -> s6 [0, 65535] { R398 += 1 };
  s1 -> s1 [0, 65535] { R398 += 1, R334 += 1, R298 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [44, 65535] { R398 += 1, R334 += 1, R298 += 1, R250 += 1 };
  s2 -> s1 [0, 42] { R398 += 1, R334 += 1, R298 += 1, R250 += 1 };
  s2 -> s2 [0, 65535] { R398 += 1, R333 += 1, R334 += 1 };
  s2 -> s3 [0, 65535] { R398 += 1, R334 += 1, R297 += 1, R298 += 1 };
  s2 -> s4 [0, 65535] { R398 += 1, R334 += 1, R298 += 1, R249 += 1, R250 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s1 [44, 65535] { R398 += 1, R334 += 1, R298 += 1, R250 += 1 };
  s3 -> s1 [0, 42] { R398 += 1, R334 += 1, R298 += 1, R250 += 1 };
  s3 -> s3 [0, 65535] { R398 += 1, R334 += 1, R297 += 1, R298 += 1 };
  s3 -> s6 [0, 65535] { R398 += 1 };
  s3 -> s4 [0, 65535] { R398 += 1, R334 += 1, R298 += 1, R249 += 1, R250 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s1 [44, 65535] { R398 += 1, R334 += 1, R298 += 1, R250 += 1 };
  s4 -> s1 [0, 42] { R398 += 1, R334 += 1, R298 += 1, R250 += 1 };
  s4 -> s5 [0, 65535] { R398 += 1, R334 += 1 };
  s4 -> s6 [0, 65535] { R398 += 1 };
  s4 -> s4 [0, 65535] { R398 += 1, R334 += 1, R298 += 1, R249 += 1, R250 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s1 [44, 65535] { R398 += 1, R334 += 1, R298 += 1, R250 += 1 };
  s5 -> s5 [0, 65535] { R398 += 1, R334 += 1 };
  s5 -> s6 [0, 65535] { R398 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R398 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton uri_28 {
  init s0;
  s0 -> s1 [0, 65535] { R400 += 1, R336 += 1, R300 += 1, R251 += 1, R252 += 1 };
  s0 -> s2 [0, 65535] { R400 += 1, R336 += 1, R299 += 1, R300 += 1 };
  s0 -> s0 [0, 65535] { R399 += 1, R400 += 1 };
  s0 -> s3 [0, 65535] { R400 += 1, R336 += 1, R300 += 1, R252 += 1, R216 += 1 };
  s0 -> s4 [0, 65535] { R400 += 1, R335 += 1, R336 += 1 };
  s1 -> s1 [0, 65535] { R400 += 1, R336 += 1, R300 += 1, R251 += 1, R252 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R400 += 1 };
  s1 -> s3 [0, 65535] { R400 += 1, R336 += 1, R300 += 1, R252 += 1, R216 += 1 };
  s1 -> s7 [0, 65535] { R400 += 1, R336 += 1 };
  s2 -> s1 [0, 65535] { R400 += 1, R336 += 1, R300 += 1, R251 += 1, R252 += 1 };
  s2 -> s2 [0, 65535] { R400 += 1, R336 += 1, R299 += 1, R300 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R400 += 1 };
  s2 -> s3 [0, 65535] { R400 += 1, R336 += 1, R300 += 1, R252 += 1, R216 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R400 += 1 };
  s3 -> s3 [0, 65535] { R400 += 1, R336 += 1, R300 += 1, R252 += 1, R216 += 1 };
  s3 -> s7 [0, 65535] { R400 += 1, R336 += 1 };
  s3 -> s8 [0, 65535] { R400 += 1, R336 += 1, R300 += 1 };
  s4 -> s1 [0, 65535] { R400 += 1, R336 += 1, R300 += 1, R251 += 1, R252 += 1 };
  s4 -> s2 [0, 65535] { R400 += 1, R336 += 1, R299 += 1, R300 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R400 += 1, R336 += 1, R300 += 1, R252 += 1, R216 += 1 };
  s4 -> s4 [0, 65535] { R400 += 1, R335 += 1, R336 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R400 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R400 += 1 };
  s7 -> s7 [0, 65535] { R400 += 1, R336 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R400 += 1 };
  s8 -> s7 [0, 65535] { R400 += 1, R336 += 1 };
  s8 -> s8 [0, 65535] { R400 += 1, R336 += 1, R300 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_29 {
  init s0;
  s0 -> s1 [0, 36] { R402 += 1, R338 += 1, R302 += 1, R254 += 1 };
  s0 -> s2 [0, 65535] { R402 += 1, R338 += 1, R301 += 1, R302 += 1 };
  s0 -> s0 [0, 65535] { R401 += 1, R402 += 1 };
  s0 -> s3 [0, 65535] { R402 += 1, R337 += 1, R338 += 1 };
  s0 -> s4 [0, 65535] { R402 += 1, R338 += 1, R302 += 1, R253 += 1, R254 += 1 };
  s0 -> s1 [38, 65535] { R402 += 1, R338 += 1, R302 += 1, R254 += 1 };
  s1 -> s1 [0, 36] { R402 += 1, R338 += 1, R302 += 1, R254 += 1 };
  s1 -> s5 [0, 65535] { R402 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R402 += 1, R338 += 1 };
  s1 -> s1 [0, 65535] { R402 += 1, R338 += 1, R302 += 1 };
  s1 -> s1 [38, 65535] { R402 += 1, R338 += 1, R302 += 1, R254 += 1 };
  s2 -> s1 [0, 36] { R402 += 1, R338 += 1, R302 += 1, R254 += 1 };
  s2 -> s5 [0, 65535] { R402 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R402 += 1, R338 += 1, R301 += 1, R302 += 1 };
  s2 -> s4 [0, 65535] { R402 += 1, R338 += 1, R302 += 1, R253 += 1, R254 += 1 };
  s2 -> s1 [38, 65535] { R402 += 1, R338 += 1, R302 += 1, R254 += 1 };
  s3 -> s1 [0, 36] { R402 += 1, R338 += 1, R302 += 1, R254 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R402 += 1, R338 += 1, R301 += 1, R302 += 1 };
  s3 -> s3 [0, 65535] { R402 += 1, R337 += 1, R338 += 1 };
  s3 -> s4 [0, 65535] { R402 += 1, R338 += 1, R302 += 1, R253 += 1, R254 += 1 };
  s3 -> s1 [38, 65535] { R402 += 1, R338 += 1, R302 += 1, R254 += 1 };
  s4 -> s1 [0, 36] { R402 += 1, R338 += 1, R302 += 1, R254 += 1 };
  s4 -> s5 [0, 65535] { R402 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R402 += 1, R338 += 1 };
  s4 -> s4 [0, 65535] { R402 += 1, R338 += 1, R302 += 1, R253 += 1, R254 += 1 };
  s4 -> s1 [38, 65535] { R402 += 1, R338 += 1, R302 += 1, R254 += 1 };
  s5 -> s5 [0, 65535] { R402 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R402 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R402 += 1, R338 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton uri_30 {
  init s0;
  s0 -> s0 [0, 65535] { R403 += 1, R404 += 1 };
  s0 -> s1 [0, 65535] { R404 += 1, R340 += 1, R304 += 1, R255 += 1, R256 += 1 };
  s0 -> s2 [0, 65535] { R404 += 1, R340 += 1, R304 += 1, R256 += 1, R248 += 1 };
  s0 -> s3 [0, 65535] { R404 += 1, R340 += 1, R303 += 1, R304 += 1 };
  s0 -> s4 [0, 65535] { R404 += 1, R339 += 1, R340 += 1 };
  s1 -> s1 [0, 65535] { R404 += 1, R340 += 1, R304 += 1, R255 += 1, R256 += 1 };
  s1 -> s7 [0, 65535] { R404 += 1, R340 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R404 += 1, R340 += 1, R304 += 1, R256 += 1, R248 += 1 };
  s1 -> s6 [0, 65535] { R404 += 1 };
  s2 -> s7 [0, 65535] { R404 += 1, R340 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R404 += 1, R340 += 1, R304 += 1, R256 += 1, R248 += 1 };
  s2 -> s6 [0, 65535] { R404 += 1 };
  s2 -> s8 [0, 65535] { R404 += 1, R340 += 1, R304 += 1 };
  s3 -> s1 [0, 65535] { R404 += 1, R340 += 1, R304 += 1, R255 += 1, R256 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R404 += 1, R340 += 1, R304 += 1, R256 += 1, R248 += 1 };
  s3 -> s3 [0, 65535] { R404 += 1, R340 += 1, R303 += 1, R304 += 1 };
  s3 -> s6 [0, 65535] { R404 += 1 };
  s4 -> s1 [0, 65535] { R404 += 1, R340 += 1, R304 += 1, R255 += 1, R256 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R404 += 1, R340 += 1, R304 += 1, R256 += 1, R248 += 1 };
  s4 -> s3 [0, 65535] { R404 += 1, R340 += 1, R303 += 1, R304 += 1 };
  s4 -> s4 [0, 65535] { R404 += 1, R339 += 1, R340 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R404 += 1 };
  s7 -> s7 [0, 65535] { R404 += 1, R340 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R404 += 1 };
  s8 -> s7 [0, 65535] { R404 += 1, R340 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R404 += 1 };
  s8 -> s8 [0, 65535] { R404 += 1, R340 += 1, R304 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_31 {
  init s0;
  s0 -> s1 [0, 65535] { R406 += 1, R342 += 1, R305 += 1, R306 += 1 };
  s0 -> s0 [0, 65535] { R405 += 1, R406 += 1 };
  s0 -> s2 [0, 65535] { R406 += 1, R342 += 1, R306 += 1, R286 += 1, R217 += 1 };
  s0 -> s3 [0, 65535] { R406 += 1, R342 += 1, R306 += 1, R285 += 1, R286 += 1 };
  s0 -> s4 [0, 65535] { R406 += 1, R341 += 1, R342 += 1 };
  s1 -> s1 [0, 65535] { R406 += 1, R342 += 1, R305 += 1, R306 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R406 += 1, R342 += 1, R306 += 1, R286 += 1, R217 += 1 };
  s1 -> s7 [0, 65535] { R406 += 1 };
  s1 -> s3 [0, 65535] { R406 += 1, R342 += 1, R306 += 1, R285 += 1, R286 += 1 };
  s2 -> s8 [0, 65535] { R406 += 1, R342 += 1, R306 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R406 += 1, R342 += 1, R306 += 1, R286 += 1, R217 += 1 };
  s2 -> s6 [0, 65535] { R406 += 1, R342 += 1 };
  s2 -> s7 [0, 65535] { R406 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R406 += 1, R342 += 1, R306 += 1, R286 += 1, R217 += 1 };
  s3 -> s6 [0, 65535] { R406 += 1, R342 += 1 };
  s3 -> s7 [0, 65535] { R406 += 1 };
  s3 -> s3 [0, 65535] { R406 += 1, R342 += 1, R306 += 1, R285 += 1, R286 += 1 };
  s4 -> s1 [0, 65535] { R406 += 1, R342 += 1, R305 += 1, R306 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R406 += 1, R342 += 1, R306 += 1, R286 += 1, R217 += 1 };
  s4 -> s3 [0, 65535] { R406 += 1, R342 += 1, R306 += 1, R285 += 1, R286 += 1 };
  s4 -> s4 [0, 65535] { R406 += 1, R341 += 1, R342 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R406 += 1, R342 += 1 };
  s6 -> s7 [0, 65535] { R406 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R406 += 1 };
  s8 -> s8 [0, 65535] { R406 += 1, R342 += 1, R306 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R406 += 1, R342 += 1 };
  s8 -> s7 [0, 65535] { R406 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_32 {
  init s0;
  s0 -> s1 [0, 36] { R408 += 1, R344 += 1, R308 += 1, R288 += 1 };
  s0 -> s2 [0, 65535] { R408 += 1, R344 += 1, R308 += 1, R287 += 1, R288 += 1 };
  s0 -> s0 [0, 65535] { R407 += 1, R408 += 1 };
  s0 -> s3 [0, 65535] { R408 += 1, R343 += 1, R344 += 1 };
  s0 -> s4 [0, 65535] { R408 += 1, R344 += 1, R307 += 1, R308 += 1 };
  s0 -> s1 [38, 42] { R408 += 1, R344 += 1, R308 += 1, R288 += 1 };
  s0 -> s5 [43, 43] { R408 += 1, R344 += 1, R308 += 1, R288 += 1 };
  s0 -> s6 [43, 43] { R408 += 1, R344 += 1, R308 += 1, R288 += 1 };
  s0 -> s1 [44, 65535] { R408 += 1, R344 += 1, R308 += 1, R288 += 1 };
  s1 -> s1 [0, 36] { R408 += 1, R344 += 1, R308 += 1, R288 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s8 [0, 65535] { R408 += 1, R344 += 1 };
  s1 -> s9 [0, 65535] { R408 += 1 };
  s1 -> s1 [0, 65535] { R408 += 1, R344 += 1, R308 += 1 };
  s1 -> s1 [38, 42] { R408 += 1, R344 += 1, R308 += 1, R288 += 1 };
  s1 -> s5 [43, 43] { R408 += 1, R344 += 1, R308 += 1, R288 += 1 };
  s1 -> s6 [43, 43] { R408 += 1, R344 += 1, R308 += 1, R288 += 1 };
  s1 -> s1 [44, 65535] { R408 += 1, R344 += 1, R308 += 1, R288 += 1 };
  s2 -> s1 [0, 36] { R408 += 1, R344 += 1, R308 += 1, R288 += 1 };
  s2 -> s2 [0, 65535] { R408 += 1, R344 += 1, R308 += 1, R287 += 1, R288 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s8 [0, 65535] { R408 += 1, R344 += 1 };
  s2 -> s9 [0, 65535] { R408 += 1 };
  s2 -> s1 [38, 42] { R408 += 1, R344 += 1, R308 += 1, R288 += 1 };
  s2 -> s5 [43, 43] { R408 += 1, R344 += 1, R308 += 1, R288 += 1 };
  s2 -> s6 [43, 43] { R408 += 1, R344 += 1, R308 += 1, R288 += 1 };
  s2 -> s1 [44, 65535] { R408 += 1, R344 += 1, R308 += 1, R288 += 1 };
  s3 -> s1 [0, 36] { R408 += 1, R344 += 1, R308 += 1, R288 += 1 };
  s3 -> s2 [0, 65535] { R408 += 1, R344 += 1, R308 += 1, R287 += 1, R288 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R408 += 1, R343 += 1, R344 += 1 };
  s3 -> s4 [0, 65535] { R408 += 1, R344 += 1, R307 += 1, R308 += 1 };
  s3 -> s1 [38, 42] { R408 += 1, R344 += 1, R308 += 1, R288 += 1 };
  s3 -> s5 [43, 43] { R408 += 1, R344 += 1, R308 += 1, R288 += 1 };
  s3 -> s6 [43, 43] { R408 += 1, R344 += 1, R308 += 1, R288 += 1 };
  s3 -> s1 [44, 65535] { R408 += 1, R344 += 1, R308 += 1, R288 += 1 };
  s4 -> s1 [0, 36] { R408 += 1, R344 += 1, R308 += 1, R288 += 1 };
  s4 -> s2 [0, 65535] { R408 += 1, R344 += 1, R308 += 1, R287 += 1, R288 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s9 [0, 65535] { R408 += 1 };
  s4 -> s4 [0, 65535] { R408 += 1, R344 += 1, R307 += 1, R308 += 1 };
  s4 -> s1 [38, 42] { R408 += 1, R344 += 1, R308 += 1, R288 += 1 };
  s4 -> s5 [43, 43] { R408 += 1, R344 += 1, R308 += 1, R288 += 1 };
  s4 -> s6 [43, 43] { R408 += 1, R344 += 1, R308 += 1, R288 += 1 };
  s4 -> s1 [44, 65535] { R408 += 1, R344 += 1, R308 += 1, R288 += 1 };
  s5 -> s5 [0, 36] { R408 += 1, R344 += 1, R308 += 1, R288 += 1 };
  s5 -> s5 [0, 65535] { R408 += 1, R344 += 1, R308 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R408 += 1, R344 += 1 };
  s5 -> s9 [0, 65535] { R408 += 1 };
  s5 -> s5 [38, 65535] { R408 += 1, R344 += 1, R308 += 1, R288 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R408 += 1, R344 += 1 };
  s6 -> s6 [0, 65535] { R408 += 1, R344 += 1, R308 += 1 };
  s6 -> s9 [0, 65535] { R408 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R408 += 1, R344 += 1 };
  s8 -> s9 [0, 65535] { R408 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s9 [0, 65535] { R408 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton uri_33 {
  init s0;
  s0 -> s1 [0, 42] { R410 += 1, R346 += 1, R310 += 1, R290 += 1, R247 += 1 };
  s0 -> s0 [0, 65535] { R409 += 1, R410 += 1 };
  s0 -> s2 [0, 65535] { R410 += 1, R346 += 1, R309 += 1, R310 += 1 };
  s0 -> s3 [0, 65535] { R410 += 1, R346 += 1, R310 += 1, R289 += 1, R290 += 1 };
  s0 -> s4 [0, 65535] { R410 += 1, R345 += 1, R346 += 1 };
  s0 -> s5 [43, 43] { R410 += 1, R346 += 1, R310 += 1, R290 += 1, R247 += 1 };
  s0 -> s6 [43, 43] { R410 += 1, R346 += 1, R310 += 1, R290 += 1, R247 += 1 };
  s0 -> s1 [44, 65535] { R410 += 1, R346 += 1, R310 += 1, R290 += 1, R247 += 1 };
  s1 -> s1 [0, 42] { R410 += 1, R346 += 1, R310 += 1, R290 += 1, R247 += 1 };
  s1 -> s1 [0, 65535] { R410 += 1, R346 += 1, R310 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s8 [0, 65535] { R410 += 1, R346 += 1 };
  s1 -> s9 [0, 65535] { R410 += 1 };
  s1 -> s5 [43, 43] { R410 += 1, R346 += 1, R310 += 1, R290 += 1, R247 += 1 };
  s1 -> s6 [43, 43] { R410 += 1, R346 += 1, R310 += 1, R290 += 1, R247 += 1 };
  s1 -> s1 [44, 65535] { R410 += 1, R346 += 1, R310 += 1, R290 += 1, R247 += 1 };
  s2 -> s1 [0, 42] { R410 += 1, R346 += 1, R310 += 1, R290 += 1, R247 += 1 };
  s2 -> s2 [0, 65535] { R410 += 1, R346 += 1, R309 += 1, R310 += 1 };
  s2 -> s3 [0, 65535] { R410 += 1, R346 += 1, R310 += 1, R289 += 1, R290 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s9 [0, 65535] { R410 += 1 };
  s2 -> s5 [43, 43] { R410 += 1, R346 += 1, R310 += 1, R290 += 1, R247 += 1 };
  s2 -> s6 [43, 43] { R410 += 1, R346 += 1, R310 += 1, R290 += 1, R247 += 1 };
  s2 -> s1 [44, 65535] { R410 += 1, R346 += 1, R310 += 1, R290 += 1, R247 += 1 };
  s3 -> s1 [0, 42] { R410 += 1, R346 += 1, R310 += 1, R290 += 1, R247 += 1 };
  s3 -> s3 [0, 65535] { R410 += 1, R346 += 1, R310 += 1, R289 += 1, R290 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s8 [0, 65535] { R410 += 1, R346 += 1 };
  s3 -> s9 [0, 65535] { R410 += 1 };
  s3 -> s5 [43, 43] { R410 += 1, R346 += 1, R310 += 1, R290 += 1, R247 += 1 };
  s3 -> s6 [43, 43] { R410 += 1, R346 += 1, R310 += 1, R290 += 1, R247 += 1 };
  s3 -> s1 [44, 65535] { R410 += 1, R346 += 1, R310 += 1, R290 += 1, R247 += 1 };
  s4 -> s1 [0, 42] { R410 += 1, R346 += 1, R310 += 1, R290 += 1, R247 += 1 };
  s4 -> s2 [0, 65535] { R410 += 1, R346 += 1, R309 += 1, R310 += 1 };
  s4 -> s3 [0, 65535] { R410 += 1, R346 += 1, R310 += 1, R289 += 1, R290 += 1 };
  s4 -> s4 [0, 65535] { R410 += 1, R345 += 1, R346 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s5 [43, 43] { R410 += 1, R346 += 1, R310 += 1, R290 += 1, R247 += 1 };
  s4 -> s6 [43, 43] { R410 += 1, R346 += 1, R310 += 1, R290 += 1, R247 += 1 };
  s4 -> s1 [44, 65535] { R410 += 1, R346 += 1, R310 += 1, R290 += 1, R247 += 1 };
  s5 -> s10 [0, 65535] { R410 += 1, R346 += 1, R310 += 1 };
  s5 -> s5 [0, 65535] { R410 += 1, R346 += 1, R310 += 1, R290 += 1, R247 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R410 += 1, R346 += 1 };
  s5 -> s9 [0, 65535] { R410 += 1 };
  s6 -> s6 [0, 65535] { R410 += 1, R346 += 1, R310 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R410 += 1, R346 += 1 };
  s6 -> s9 [0, 65535] { R410 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R410 += 1, R346 += 1 };
  s8 -> s9 [0, 65535] { R410 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s9 [0, 65535] { R410 += 1 };
  s10 -> s10 [0, 65535] { R410 += 1, R346 += 1, R310 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s8 [0, 65535] { R410 += 1, R346 += 1 };
  s10 -> s9 [0, 65535] { R410 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
};
constraint R5 = R310 && R6 = R246 && R7 = R346 && R8 = R410 && R19 = 0 && R20 - R345 = -1 && R223 = 0 && R224 = 1 && R225 = 0 && R226 = 1 && R227 = 0 && R228 = 4 && R229 = 0 && R230 = 4 && R231 = 0 && R232 = 3 && R233 = 0 && R234 = 3 && R237 = 4 && R238 = R246 && R239 = 4 && R240 = R246 && R241 = 4 && R242 = R246 && R243 = 4 && R244 = R246 && R245 = 4 && R263 = 0 && R264 - R345 = -1 && R265 = 0 && R266 - R345 = -1 && R267 = 0 && R268 - R345 = -1 && R269 = 0 && R270 - R345 = -1 && R271 = 0 && R272 - R345 = -1 && R273 = 0 && R274 - R345 = -1 && R275 = 0 && R276 - R345 = -1 && R277 = 0 && R278 - R345 = -1 && R279 = 0 && R280 - R345 = -1 && R281 = 0 && R282 - R345 = -1 && R283 = 0 && R284 - R345 = -1 && R291 = 0 && R292 = R310 && R293 = 0 && R294 = R310 && R295 = 0 && R296 = R310 && R297 = 0 && R298 = R310 && R299 = 0 && R300 = R310 && R301 = 0 && R302 = R310 && R303 = 0 && R304 = R310 && R305 = 0 && R306 = R310 && R307 = 0 && R308 = R310 && R309 = 0 && R311 = R345 && R312 = R346 && R313 = R345 && R314 = R346 && R315 = R345 && R316 = R346 && R317 = R345 && R318 = R346 && R319 = R345 && R320 = R346 && R321 = R345 && R322 = R346 && R323 = R345 && R324 = R346 && R325 = R345 && R326 = R346 && R327 = R345 && R328 = R346 && R329 = R345 && R330 = R346 && R331 = R345 && R332 = R346 && R333 = R345 && R334 = R346 && R335 = R345 && R336 = R346 && R337 = R345 && R338 = R346 && R339 = R345 && R340 = R346 && R341 = R345 && R342 = R346 && R343 = R345 && R344 = R346 && R347 = 10 && R348 = R410 && R349 = 10 && R350 = R410 && R351 = 10 && R352 = R410 && R353 = 10 && R354 = R410 && R355 = 10 && R356 = R410 && R357 = 10 && R358 = R410 && R359 = 10 && R360 = R410 && R361 = 10 && R362 = R410 && R363 = 10 && R364 = R410 && R365 = 10 && R366 = R410 && R367 = 10 && R368 = R410 && R369 = 10 && R370 = R410 && R371 = 10 && R372 = R410 && R373 = 10 && R374 = R410 && R375 = 10 && R376 = R410 && R377 = 10 && R378 = R410 && R379 = 10 && R380 = R410 && R381 = 10 && R382 = R410 && R383 = 10 && R384 = R410 && R385 = 10 && R386 = R410 && R387 = 10 && R388 = R410 && R389 = 10 && R390 = R410 && R391 = 10 && R392 = R410 && R393 = 10 && R394 = R410 && R395 = 10 && R396 = R410 && R397 = 10 && R398 = R410 && R399 = 10 && R400 = R410 && R401 = 10 && R402 = R410 && R403 = 10 && R404 = R410 && R405 = 10 && R406 = R410 && R407 = 10 && R408 = R410 && R409 = 10 && R0 != 0 && R2 != 0 && R3 != 0 && R235 + R248 + R247 != 0 && -1 < R4 && R11 < 1 && R12 < 1 && R15 < 1 && 3 < R246 && 0 < R310 && R345 - R346 < 1 && 0 < R345 && 9 < R410 && (R4 != 0 || R216 = 0 || (R249 = 0 && R250 = 0)) && (R4 != 0 || R216 = 0 || (R251 = 0 && R252 = 0)) && (R4 != 0 || R216 = 0 || (R253 = 0 && R254 = 0)) && (R4 != 0 || R216 = 0 || (R255 = 0 && R256 = 0)) && (R219 != 0 || ((R9 != 0 || ((R2 != R220 || R220 = 1 || R220 < 0) && (R2 = R220 || R220 = 1 || R2 < 1))) && (R9 = 0 || ((R2 != R220 || R220 = 1 || R220 < 0) && (R220 != 1 || -1 < R2) && (R2 = R220 || R220 = 1))))) && (R221 != 0 || ((R9 != 0 || ((R2 != R222 || R222 = 1 || R222 < 0) && (R2 = R222 || R222 = 1 || R2 < 1))) && (R9 = 0 || ((R2 != R222 || R222 = 1 || R222 < 0) && (R222 != 1 || -1 < R2) && (R2 = R222 || R222 = 1))))) && (R249 != 0 || R4 = R250 || R4 < 1) && (R251 != 0 || R4 = R252 || R4 < 1) && (R253 != 0 || R4 = R254 || R4 < 1) && (R255 != 0 || R4 = R256 || R4 < 1) && (R217 = 0 || (R285 = 0 && R286 = 0)) && (R217 = 0 || (R287 = 0 && R288 = 0)) && (R217 = 0 || (R289 = 0 && R290 = 0)) && (R218 = 0 || (R257 = 0 && R258 = 0)) && (R218 = 0 || (R259 = 0 && R260 = 0)) && (R218 = 0 || (R261 = 0 && R262 = 0)) && (R219 = 0 || (R9 = 0 && R2 < 0)) && (R221 = 0 || (R9 = 0 && R2 < 0)) && (R249 = 0 || R4 < 1) && (R251 = 0 || R4 < 1) && (R253 = 0 || R4 < 1) && (R255 = 0 || R4 < 1);
// End of Parikh automata intersection problem
