// Parikh automata intersection problem, generated by OSTRICH+
counter int R0, R1, R10, R11, R12, R13, R16, R19, R20353, R20354, R20355, R20356, R20357, R20358, R20359, R20360, R20361, R20362, R20363, R20364, R20365, R20366, R20367, R20368, R20369, R20370, R20371, R20372, R20373, R20374, R20375, R20376, R20377, R20378, R20379, R20380, R20381, R20382, R20383, R20384, R20385, R20386, R20387, R20388, R20389, R20390, R20391, R20392, R20393, R20394, R20395, R20396, R20397, R20398, R20399, R20400, R20401, R20402, R20403, R20404, R20405, R20406, R20407, R20408, R20409, R20410, R20411, R20412, R20413, R20414, R20415, R20416, R20417, R20418, R20419, R20420, R20421, R20422, R20423, R20424, R20425, R20426, R20427, R20428, R20429, R20430, R20431, R20432, R20433, R20434, R20435, R20436, R20437, R20438, R20439, R20440, R20441, R20442, R20443, R20444, R20445, R20446, R20447, R20448, R20449, R20450, R20451, R20452, R20453, R20454, R20455, R20456, R20457, R20458, R20459, R20460, R20461, R20462, R20463, R20464, R20465, R20466, R20467, R20468, R20469, R20470, R20471, R20472, R20473, R20474, R20475, R20476, R20477, R20478, R20479, R20480, R20481, R20482, R20483, R20484, R20485, R20486, R20487, R20488, R20489, R20490, R20491, R20492, R20493, R20494, R20495, R20496, R20497, R20498, R20499, R20500, R20501, R20502, R20503, R20504, R20505, R20506, R20507, R20508, R20509, R20510, R20511, R20512, R20513, R20514, R20515, R20516, R20517, R20518, R20519, R20520, R20521, R20522, R20523, R20524, R20525, R20526, R20527, R20528, R20529, R20530, R20531, R20532, R20533, R20534, R20535, R20536, R20537, R20538, R20539, R20540, R23, R24, R3, R4, R5, R6, R7, R8, R9;
synchronised {  // Automata constraining P70
automaton P70_0 {
  init s0;
  s0 -> s1 [122, 122];
  accepting s1;
};
};
synchronised {  // Automata constraining P84
automaton P84_0 {
  init s0;
  s0 -> s1 [119, 119];
  accepting s1;
};
};
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R9 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 45] { R20474 += 1 };
  s0 -> s0 [0, 65535] { R20473 += 1, R20474 += 1 };
  s0 -> s2 [46, 46] { R20474 += 1 };
  s0 -> s3 [47, 47] { R20474 += 1 };
  s0 -> s1 [48, 65535] { R20474 += 1 };
  s1 -> s1 [0, 45] { R20474 += 1 };
  s1 -> s2 [46, 46] { R20474 += 1 };
  s1 -> s3 [47, 47] { R20474 += 1 };
  s1 -> s1 [48, 65535] { R20474 += 1 };
  s2 -> s1 [0, 45] { R20474 += 1 };
  s2 -> s2 [46, 46] { R20474 += 1 };
  s2 -> s3 [47, 47] { R20474 += 1 };
  s2 -> s1 [48, 114] { R20474 += 1 };
  s2 -> s8 [115, 115] { R20474 += 1 };
  s2 -> s1 [116, 65535] { R20474 += 1 };
  s3 -> s3 [0, 45] { R20474 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s4 [46, 46] { R20474 += 1 };
  s3 -> s3 [47, 65535] { R20474 += 1 };
  s4 -> s3 [0, 45] { R20474 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s4 [46, 46] { R20474 += 1 };
  s4 -> s3 [47, 114] { R20474 += 1 };
  s4 -> s5 [115, 115] { R20474 += 1 };
  s4 -> s3 [116, 65535] { R20474 += 1 };
  s5 -> s3 [0, 45] { R20474 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s4 [46, 46] { R20474 += 1 };
  s5 -> s3 [47, 110] { R20474 += 1 };
  s5 -> s6 [111, 111] { R20474 += 1 };
  s5 -> s3 [112, 65535] { R20474 += 1 };
  s6 -> s3 [0, 45] { R20474 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s4 [46, 46] { R20474 += 1 };
  s6 -> s3 [47, 98] { R20474 += 1 };
  s6 -> s7 [99, 99] { R20474 += 1 };
  s6 -> s3 [100, 65535] { R20474 += 1 };
  s7 -> s3 [0, 45] { R20474 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s4 [46, 46] { R20474 += 1 };
  s7 -> s3 [47, 106] { R20474 += 1 };
  s7 -> s3 [108, 65535] { R20474 += 1 };
  s8 -> s1 [0, 45] { R20474 += 1 };
  s8 -> s2 [46, 46] { R20474 += 1 };
  s8 -> s3 [47, 47] { R20474 += 1 };
  s8 -> s1 [48, 110] { R20474 += 1 };
  s8 -> s9 [111, 111] { R20474 += 1 };
  s8 -> s1 [112, 65535] { R20474 += 1 };
  s9 -> s1 [0, 45] { R20474 += 1 };
  s9 -> s2 [46, 46] { R20474 += 1 };
  s9 -> s3 [47, 47] { R20474 += 1 };
  s9 -> s1 [48, 98] { R20474 += 1 };
  s9 -> s10 [99, 99] { R20474 += 1 };
  s9 -> s1 [100, 65535] { R20474 += 1 };
  s10 -> s1 [0, 45] { R20474 += 1 };
  s10 -> s2 [46, 46] { R20474 += 1 };
  s10 -> s3 [47, 47] { R20474 += 1 };
  s10 -> s1 [48, 106] { R20474 += 1 };
  s10 -> s1 [108, 65535] { R20474 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_3 {
  init s0;
  s0 -> s0 [0, 65535] { R20475 += 1, R20476 += 1 };
  s0 -> s1 [0, 65535] { R20476 += 1, R8 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R20476 += 1, R8 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s1 [0, 46] { R20478 += 1, R24 += 1 };
  s0 -> s2 [0, 65535] { R20478 += 1, R23 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R20477 += 1, R20478 += 1 };
  s0 -> s3 [47, 47] { R20478 += 1 };
  s0 -> s1 [48, 65535] { R20478 += 1, R24 += 1 };
  s1 -> s1 [0, 46] { R20478 += 1, R24 += 1 };
  s1 -> s3 [47, 47] { R20478 += 1 };
  s1 -> s1 [48, 65535] { R20478 += 1, R24 += 1 };
  s2 -> s1 [0, 46] { R20478 += 1, R24 += 1 };
  s2 -> s2 [0, 65535] { R20478 += 1, R23 += 1, R24 += 1 };
  s2 -> s3 [47, 47] { R20478 += 1 };
  s2 -> s1 [48, 65535] { R20478 += 1, R24 += 1 };
  s3 -> s3 [0, 65535] { R20478 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 36] { R20480 += 1, R20406 += 1 };
  s0 -> s0 [0, 65535] { R20479 += 1, R20480 += 1 };
  s0 -> s2 [0, 65535] { R20480 += 1, R20405 += 1, R20406 += 1 };
  s0 -> s1 [38, 42] { R20480 += 1, R20406 += 1 };
  s0 -> s1 [44, 45] { R20480 += 1, R20406 += 1 };
  s0 -> s1 [47, 62] { R20480 += 1, R20406 += 1 };
  s0 -> s1 [64, 65535] { R20480 += 1, R20406 += 1 };
  s1 -> s1 [0, 36] { R20480 += 1, R20406 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R20480 += 1 };
  s1 -> s1 [38, 42] { R20480 += 1, R20406 += 1 };
  s1 -> s1 [44, 45] { R20480 += 1, R20406 += 1 };
  s1 -> s1 [47, 62] { R20480 += 1, R20406 += 1 };
  s1 -> s1 [64, 65535] { R20480 += 1, R20406 += 1 };
  s2 -> s1 [0, 36] { R20480 += 1, R20406 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R20480 += 1, R20405 += 1, R20406 += 1 };
  s2 -> s1 [38, 42] { R20480 += 1, R20406 += 1 };
  s2 -> s1 [44, 45] { R20480 += 1, R20406 += 1 };
  s2 -> s1 [47, 62] { R20480 += 1, R20406 += 1 };
  s2 -> s1 [64, 65535] { R20480 += 1, R20406 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_6 {
  init s0;
  s0 -> s0 [0, 65535] { R20481 += 1, R20482 += 1 };
  s0 -> s1 [0, 65535] { R20482 += 1, R20408 += 1, R5 += 1 };
  s0 -> s2 [0, 65535] { R20482 += 1, R20407 += 1, R20408 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R20482 += 1 };
  s1 -> s1 [0, 65535] { R20482 += 1, R20408 += 1, R5 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R20482 += 1, R20408 += 1, R5 += 1 };
  s2 -> s2 [0, 65535] { R20482 += 1, R20407 += 1, R20408 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R20482 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_7 {
  init s0;
  s0 -> s1 [0, 62] { R20484 += 1, R20410 += 1, R20362 += 1 };
  s0 -> s2 [0, 65535] { R20484 += 1, R20410 += 1, R20361 += 1, R20362 += 1 };
  s0 -> s3 [0, 65535] { R20484 += 1, R20409 += 1, R20410 += 1 };
  s0 -> s0 [0, 65535] { R20483 += 1, R20484 += 1 };
  s0 -> s4 [63, 63] { R20484 += 1, R20410 += 1, R20362 += 1 };
  s0 -> s1 [64, 65535] { R20484 += 1, R20410 += 1, R20362 += 1 };
  s1 -> s6 [0, 65535] { R20484 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R20484 += 1, R20410 += 1, R20362 += 1 };
  s1 -> s7 [0, 65535] { R20484 += 1, R20410 += 1 };
  s2 -> s1 [0, 62] { R20484 += 1, R20410 += 1, R20362 += 1 };
  s2 -> s6 [0, 65535] { R20484 += 1 };
  s2 -> s2 [0, 65535] { R20484 += 1, R20410 += 1, R20361 += 1, R20362 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s4 [63, 63] { R20484 += 1, R20410 += 1, R20362 += 1 };
  s2 -> s1 [64, 65535] { R20484 += 1, R20410 += 1, R20362 += 1 };
  s3 -> s1 [0, 62] { R20484 += 1, R20410 += 1, R20362 += 1 };
  s3 -> s2 [0, 65535] { R20484 += 1, R20410 += 1, R20361 += 1, R20362 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R20484 += 1, R20409 += 1, R20410 += 1 };
  s3 -> s4 [63, 63] { R20484 += 1, R20410 += 1, R20362 += 1 };
  s3 -> s1 [64, 65535] { R20484 += 1, R20410 += 1, R20362 += 1 };
  s4 -> s1 [0, 65535] { R20484 += 1, R20410 += 1, R20362 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R20484 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R20484 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R20484 += 1, R20410 += 1 };
  accepting s3, s5, s2, s6, s1, s7, s0;
};
automaton uri_8 {
  init s0;
  s0 -> s1 [0, 65535] { R20486 += 1, R20411 += 1, R20412 += 1 };
  s0 -> s2 [0, 65535] { R20486 += 1, R20412 += 1, R20363 += 1, R20364 += 1 };
  s0 -> s3 [0, 65535] { R20486 += 1, R20412 += 1, R20364 += 1, R11 += 1 };
  s0 -> s0 [0, 65535] { R20485 += 1, R20486 += 1 };
  s1 -> s1 [0, 65535] { R20486 += 1, R20411 += 1, R20412 += 1 };
  s1 -> s2 [0, 65535] { R20486 += 1, R20412 += 1, R20363 += 1, R20364 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R20486 += 1, R20412 += 1, R20364 += 1, R11 += 1 };
  s2 -> s2 [0, 65535] { R20486 += 1, R20412 += 1, R20363 += 1, R20364 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R20486 += 1, R20412 += 1, R20364 += 1, R11 += 1 };
  s2 -> s6 [0, 65535] { R20486 += 1 };
  s3 -> s4 [0, 65535] { R20486 += 1, R20412 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R20486 += 1, R20412 += 1, R20364 += 1, R11 += 1 };
  s3 -> s6 [0, 65535] { R20486 += 1 };
  s4 -> s4 [0, 65535] { R20486 += 1, R20412 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R20486 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R20486 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_9 {
  init s0;
  s0 -> s1 [0, 63] { R20488 += 1, R20420 += 1 };
  s0 -> s2 [0, 65535] { R20488 += 1, R20419 += 1, R20420 += 1 };
  s0 -> s0 [0, 65535] { R20487 += 1, R20488 += 1 };
  s0 -> s3 [64, 64] { R20488 += 1, R20420 += 1 };
  s0 -> s1 [65, 65535] { R20488 += 1, R20420 += 1 };
  s1 -> s1 [0, 63] { R20488 += 1, R20420 += 1 };
  s1 -> s3 [64, 64] { R20488 += 1, R20420 += 1 };
  s1 -> s1 [65, 65535] { R20488 += 1, R20420 += 1 };
  s2 -> s1 [0, 63] { R20488 += 1, R20420 += 1 };
  s2 -> s2 [0, 65535] { R20488 += 1, R20419 += 1, R20420 += 1 };
  s2 -> s3 [64, 64] { R20488 += 1, R20420 += 1 };
  s2 -> s1 [65, 65535] { R20488 += 1, R20420 += 1 };
  s3 -> s3 [0, 65535] { R20488 += 1, R20420 += 1 };
  s3 -> s4 [0, 65535] { R20488 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R20488 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5;
};
automaton uri_10 {
  init s0;
  s0 -> s0 [0, 65535] { R20489 += 1, R20490 += 1 };
  s0 -> s1 [0, 65535] { R20490 += 1, R20421 += 1, R20422 += 1 };
  s0 -> s2 [0, 65535] { R20490 += 1, R20422 += 1, R7 += 1 };
  s1 -> s1 [0, 65535] { R20490 += 1, R20421 += 1, R20422 += 1 };
  s1 -> s2 [0, 65535] { R20490 += 1, R20422 += 1, R7 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R20490 += 1 };
  s2 -> s2 [0, 65535] { R20490 += 1, R20422 += 1, R7 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R20490 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_11 {
  init s0;
  s0 -> s1 [0, 86] { R20492 += 1, R20424 += 1 };
  s0 -> s2 [0, 65535] { R20492 += 1, R20424 += 1, R16 += 1 };
  s0 -> s3 [0, 65535] { R20492 += 1, R20423 += 1, R20424 += 1 };
  s0 -> s0 [0, 65535] { R20491 += 1, R20492 += 1 };
  s0 -> s4 [87, 87] { R20492 += 1, R20424 += 1 };
  s0 -> s1 [88, 65535] { R20492 += 1, R20424 += 1 };
  s1 -> s1 [0, 86] { R20492 += 1, R20424 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R20492 += 1 };
  s1 -> s4 [87, 87] { R20492 += 1, R20424 += 1 };
  s1 -> s1 [88, 65535] { R20492 += 1, R20424 += 1 };
  s2 -> s1 [0, 86] { R20492 += 1, R20424 += 1 };
  s2 -> s2 [0, 65535] { R20492 += 1, R20424 += 1, R16 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R20492 += 1 };
  s2 -> s4 [87, 87] { R20492 += 1, R20424 += 1 };
  s2 -> s1 [88, 65535] { R20492 += 1, R20424 += 1 };
  s3 -> s1 [0, 86] { R20492 += 1, R20424 += 1 };
  s3 -> s2 [0, 65535] { R20492 += 1, R20424 += 1, R16 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R20492 += 1, R20423 += 1, R20424 += 1 };
  s3 -> s4 [87, 87] { R20492 += 1, R20424 += 1 };
  s3 -> s1 [88, 65535] { R20492 += 1, R20424 += 1 };
  s4 -> s4 [0, 65535] { R20492 += 1, R20424 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R20492 += 1 };
  accepting s3, s5, s2, s6, s1, s0;
};
automaton uri_12 {
  init s0;
  s0 -> s1 [0, 89] { R20494 += 1, R20426 += 1 };
  s0 -> s2 [0, 65535] { R20494 += 1, R20426 += 1, R19 += 1 };
  s0 -> s0 [0, 65535] { R20493 += 1, R20494 += 1 };
  s0 -> s3 [0, 65535] { R20494 += 1, R20425 += 1, R20426 += 1 };
  s0 -> s4 [90, 90] { R20494 += 1, R20426 += 1 };
  s0 -> s1 [91, 65535] { R20494 += 1, R20426 += 1 };
  s1 -> s1 [0, 89] { R20494 += 1, R20426 += 1 };
  s1 -> s1 [0, 65535] { R20494 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s4 [90, 90] { R20494 += 1, R20426 += 1 };
  s1 -> s1 [91, 65535] { R20494 += 1, R20426 += 1 };
  s2 -> s1 [0, 89] { R20494 += 1, R20426 += 1 };
  s2 -> s2 [0, 65535] { R20494 += 1, R20426 += 1, R19 += 1 };
  s2 -> s6 [0, 65535] { R20494 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s4 [90, 90] { R20494 += 1, R20426 += 1 };
  s2 -> s1 [91, 65535] { R20494 += 1, R20426 += 1 };
  s3 -> s1 [0, 89] { R20494 += 1, R20426 += 1 };
  s3 -> s2 [0, 65535] { R20494 += 1, R20426 += 1, R19 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R20494 += 1, R20425 += 1, R20426 += 1 };
  s3 -> s4 [90, 90] { R20494 += 1, R20426 += 1 };
  s3 -> s1 [91, 65535] { R20494 += 1, R20426 += 1 };
  s4 -> s4 [0, 65535] { R20494 += 1, R20426 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R20494 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s5, s2, s6, s1, s0;
};
automaton uri_13 {
  init s0;
  s0 -> s1 [0, 36] { R20496 += 1, R20428 += 1, R20368 += 1 };
  s0 -> s0 [0, 65535] { R20495 += 1, R20496 += 1 };
  s0 -> s2 [0, 65535] { R20496 += 1, R20427 += 1, R20428 += 1 };
  s0 -> s3 [0, 65535] { R20496 += 1, R20428 += 1, R20367 += 1, R20368 += 1 };
  s0 -> s1 [38, 42] { R20496 += 1, R20428 += 1, R20368 += 1 };
  s0 -> s1 [44, 57] { R20496 += 1, R20428 += 1, R20368 += 1 };
  s0 -> s1 [59, 63] { R20496 += 1, R20428 += 1, R20368 += 1 };
  s0 -> s1 [65, 65535] { R20496 += 1, R20428 += 1, R20368 += 1 };
  s1 -> s1 [0, 36] { R20496 += 1, R20428 += 1, R20368 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R20496 += 1 };
  s1 -> s1 [0, 65535] { R20496 += 1, R20428 += 1 };
  s1 -> s1 [38, 42] { R20496 += 1, R20428 += 1, R20368 += 1 };
  s1 -> s1 [44, 57] { R20496 += 1, R20428 += 1, R20368 += 1 };
  s1 -> s1 [59, 63] { R20496 += 1, R20428 += 1, R20368 += 1 };
  s1 -> s1 [65, 65535] { R20496 += 1, R20428 += 1, R20368 += 1 };
  s2 -> s1 [0, 36] { R20496 += 1, R20428 += 1, R20368 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R20496 += 1, R20427 += 1, R20428 += 1 };
  s2 -> s3 [0, 65535] { R20496 += 1, R20428 += 1, R20367 += 1, R20368 += 1 };
  s2 -> s1 [38, 42] { R20496 += 1, R20428 += 1, R20368 += 1 };
  s2 -> s1 [44, 57] { R20496 += 1, R20428 += 1, R20368 += 1 };
  s2 -> s1 [59, 63] { R20496 += 1, R20428 += 1, R20368 += 1 };
  s2 -> s1 [65, 65535] { R20496 += 1, R20428 += 1, R20368 += 1 };
  s3 -> s1 [0, 36] { R20496 += 1, R20428 += 1, R20368 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R20496 += 1 };
  s3 -> s3 [0, 65535] { R20496 += 1, R20428 += 1, R20367 += 1, R20368 += 1 };
  s3 -> s1 [38, 42] { R20496 += 1, R20428 += 1, R20368 += 1 };
  s3 -> s1 [44, 57] { R20496 += 1, R20428 += 1, R20368 += 1 };
  s3 -> s1 [59, 63] { R20496 += 1, R20428 += 1, R20368 += 1 };
  s3 -> s1 [65, 65535] { R20496 += 1, R20428 += 1, R20368 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R20496 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 65535] { R20498 += 1, R20429 += 1, R20430 += 1 };
  s0 -> s2 [0, 65535] { R20498 += 1, R20430 += 1, R20369 += 1, R20370 += 1 };
  s0 -> s0 [0, 65535] { R20497 += 1, R20498 += 1 };
  s0 -> s3 [0, 65535] { R20498 += 1, R20430 += 1, R20370 += 1, R4 += 1 };
  s1 -> s1 [0, 65535] { R20498 += 1, R20429 += 1, R20430 += 1 };
  s1 -> s2 [0, 65535] { R20498 += 1, R20430 += 1, R20369 += 1, R20370 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R20498 += 1, R20430 += 1, R20370 += 1, R4 += 1 };
  s2 -> s2 [0, 65535] { R20498 += 1, R20430 += 1, R20369 += 1, R20370 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R20498 += 1 };
  s2 -> s3 [0, 65535] { R20498 += 1, R20430 += 1, R20370 += 1, R4 += 1 };
  s3 -> s4 [0, 65535] { R20498 += 1, R20430 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R20498 += 1 };
  s3 -> s3 [0, 65535] { R20498 += 1, R20430 += 1, R20370 += 1, R4 += 1 };
  s4 -> s4 [0, 65535] { R20498 += 1, R20430 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R20498 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R20498 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_15 {
  init s0;
  s0 -> s1 [0, 36] { R20500 += 1, R20432 += 1, R20372 += 1 };
  s0 -> s2 [0, 65535] { R20500 += 1, R20432 += 1, R20371 += 1, R20372 += 1 };
  s0 -> s3 [0, 65535] { R20500 += 1, R20431 += 1, R20432 += 1 };
  s0 -> s0 [0, 65535] { R20499 += 1, R20500 += 1 };
  s0 -> s1 [38, 42] { R20500 += 1, R20432 += 1, R20372 += 1 };
  s0 -> s1 [44, 57] { R20500 += 1, R20432 += 1, R20372 += 1 };
  s0 -> s1 [59, 63] { R20500 += 1, R20432 += 1, R20372 += 1 };
  s0 -> s1 [65, 65535] { R20500 += 1, R20432 += 1, R20372 += 1 };
  s1 -> s1 [0, 36] { R20500 += 1, R20432 += 1, R20372 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R20500 += 1 };
  s1 -> s1 [0, 65535] { R20500 += 1, R20432 += 1 };
  s1 -> s1 [38, 42] { R20500 += 1, R20432 += 1, R20372 += 1 };
  s1 -> s1 [44, 57] { R20500 += 1, R20432 += 1, R20372 += 1 };
  s1 -> s1 [59, 63] { R20500 += 1, R20432 += 1, R20372 += 1 };
  s1 -> s1 [65, 65535] { R20500 += 1, R20432 += 1, R20372 += 1 };
  s2 -> s1 [0, 36] { R20500 += 1, R20432 += 1, R20372 += 1 };
  s2 -> s2 [0, 65535] { R20500 += 1, R20432 += 1, R20371 += 1, R20372 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R20500 += 1 };
  s2 -> s1 [38, 42] { R20500 += 1, R20432 += 1, R20372 += 1 };
  s2 -> s1 [44, 57] { R20500 += 1, R20432 += 1, R20372 += 1 };
  s2 -> s1 [59, 63] { R20500 += 1, R20432 += 1, R20372 += 1 };
  s2 -> s1 [65, 65535] { R20500 += 1, R20432 += 1, R20372 += 1 };
  s3 -> s1 [0, 36] { R20500 += 1, R20432 += 1, R20372 += 1 };
  s3 -> s2 [0, 65535] { R20500 += 1, R20432 += 1, R20371 += 1, R20372 += 1 };
  s3 -> s3 [0, 65535] { R20500 += 1, R20431 += 1, R20432 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [38, 42] { R20500 += 1, R20432 += 1, R20372 += 1 };
  s3 -> s1 [44, 57] { R20500 += 1, R20432 += 1, R20372 += 1 };
  s3 -> s1 [59, 63] { R20500 += 1, R20432 += 1, R20372 += 1 };
  s3 -> s1 [65, 65535] { R20500 += 1, R20432 += 1, R20372 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R20500 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 65535] { R20502 += 1, R20434 += 1, R20374 += 1, R1 += 1 };
  s0 -> s2 [0, 65535] { R20502 += 1, R20433 += 1, R20434 += 1 };
  s0 -> s0 [0, 65535] { R20501 += 1, R20502 += 1 };
  s0 -> s3 [0, 65535] { R20502 += 1, R20434 += 1, R20373 += 1, R20374 += 1 };
  s1 -> s1 [0, 65535] { R20502 += 1, R20434 += 1, R20374 += 1, R1 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R20502 += 1 };
  s1 -> s6 [0, 65535] { R20502 += 1, R20434 += 1 };
  s2 -> s1 [0, 65535] { R20502 += 1, R20434 += 1, R20374 += 1, R1 += 1 };
  s2 -> s2 [0, 65535] { R20502 += 1, R20433 += 1, R20434 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R20502 += 1, R20434 += 1, R20373 += 1, R20374 += 1 };
  s3 -> s1 [0, 65535] { R20502 += 1, R20434 += 1, R20374 += 1, R1 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R20502 += 1, R20434 += 1, R20373 += 1, R20374 += 1 };
  s3 -> s5 [0, 65535] { R20502 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R20502 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R20502 += 1 };
  s6 -> s6 [0, 65535] { R20502 += 1, R20434 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_17 {
  init s0;
  s0 -> s0 [0, 65535] { R20503 += 1, R20504 += 1 };
  s0 -> s1 [0, 65535] { R20504 += 1, R20436 += 1, R20377 += 1, R20378 += 1 };
  s0 -> s2 [0, 65535] { R20504 += 1, R20436 += 1, R20378 += 1, R20353 += 1 };
  s0 -> s3 [0, 65535] { R20504 += 1, R20435 += 1, R20436 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R20504 += 1, R20436 += 1, R20377 += 1, R20378 += 1 };
  s1 -> s2 [0, 65535] { R20504 += 1, R20436 += 1, R20378 += 1, R20353 += 1 };
  s1 -> s6 [0, 65535] { R20504 += 1 };
  s2 -> s5 [0, 65535] { R20504 += 1, R20436 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R20504 += 1, R20436 += 1, R20378 += 1, R20353 += 1 };
  s2 -> s6 [0, 65535] { R20504 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R20504 += 1, R20436 += 1, R20377 += 1, R20378 += 1 };
  s3 -> s2 [0, 65535] { R20504 += 1, R20436 += 1, R20378 += 1, R20353 += 1 };
  s3 -> s3 [0, 65535] { R20504 += 1, R20435 += 1, R20436 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R20504 += 1, R20436 += 1 };
  s5 -> s4 [0, 65535];
  s5 -> s6 [0, 65535] { R20504 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R20504 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 107] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s0 -> s2 [0, 65535] { R20506 += 1, R20437 += 1, R20438 += 1 };
  s0 -> s3 [0, 65535] { R20506 += 1, R20438 += 1, R20379 += 1, R20380 += 1 };
  s0 -> s0 [0, 65535] { R20505 += 1, R20506 += 1 };
  s0 -> s4 [108, 108] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s0 -> s1 [109, 65535] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s1 -> s1 [0, 65535] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s1 -> s5 [0, 65535] { R20506 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s15 [0, 65535] { R20506 += 1, R20438 += 1 };
  s2 -> s1 [0, 107] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s2 -> s2 [0, 65535] { R20506 += 1, R20437 += 1, R20438 += 1 };
  s2 -> s3 [0, 65535] { R20506 += 1, R20438 += 1, R20379 += 1, R20380 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [108, 108] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s2 -> s1 [109, 65535] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s3 -> s1 [0, 107] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s3 -> s5 [0, 65535] { R20506 += 1 };
  s3 -> s3 [0, 65535] { R20506 += 1, R20438 += 1, R20379 += 1, R20380 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s4 [108, 108] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s3 -> s1 [109, 65535] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s4 -> s1 [0, 110] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s4 -> s4 [0, 65535] { R20506 += 1, R20438 += 1 };
  s4 -> s5 [0, 65535] { R20506 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [111, 111] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s4 -> s1 [112, 65535] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s5 -> s5 [0, 65535] { R20506 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s1 [0, 98] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s7 -> s7 [0, 65535] { R20506 += 1, R20438 += 1 };
  s7 -> s5 [0, 65535] { R20506 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s8 [99, 99] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s7 -> s1 [100, 65535] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s8 -> s1 [0, 96] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s8 -> s5 [0, 65535] { R20506 += 1 };
  s8 -> s8 [0, 65535] { R20506 += 1, R20438 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s9 [97, 97] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s8 -> s1 [98, 65535] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s9 -> s1 [0, 107] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s9 -> s5 [0, 65535] { R20506 += 1 };
  s9 -> s9 [0, 65535] { R20506 += 1, R20438 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s10 [108, 108] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s9 -> s1 [109, 65535] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s10 -> s1 [0, 103] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s10 -> s10 [0, 65535] { R20506 += 1, R20438 += 1 };
  s10 -> s5 [0, 65535] { R20506 += 1 };
  s10 -> s6 [0, 65535];
  s10 -> s11 [104, 104] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s10 -> s1 [105, 65535] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s11 -> s1 [0, 110] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s11 -> s11 [0, 65535] { R20506 += 1, R20438 += 1 };
  s11 -> s5 [0, 65535] { R20506 += 1 };
  s11 -> s6 [0, 65535];
  s11 -> s12 [111, 111] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s11 -> s1 [112, 65535] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s12 -> s1 [0, 114] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s12 -> s12 [0, 65535] { R20506 += 1, R20438 += 1 };
  s12 -> s5 [0, 65535] { R20506 += 1 };
  s12 -> s6 [0, 65535];
  s12 -> s13 [115, 115] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s12 -> s1 [116, 65535] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s13 -> s1 [0, 115] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s13 -> s13 [0, 65535] { R20506 += 1, R20438 += 1 };
  s13 -> s5 [0, 65535] { R20506 += 1 };
  s13 -> s6 [0, 65535];
  s13 -> s14 [116, 116] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s13 -> s1 [117, 65535] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s14 -> s1 [0, 65535] { R20506 += 1, R20438 += 1, R20380 += 1 };
  s15 -> s5 [0, 65535] { R20506 += 1 };
  s15 -> s6 [0, 65535];
  s15 -> s15 [0, 65535] { R20506 += 1, R20438 += 1 };
  accepting s3, s4, s12, s8, s13, s5, s2, s9, s6, s1, s7, s0, s15, s10, s11;
};
automaton uri_19 {
  init s0;
  s0 -> s1 [0, 65535] { R20508 += 1, R20440 += 1, R20381 += 1, R20382 += 1 };
  s0 -> s2 [0, 65535] { R20508 += 1, R20439 += 1, R20440 += 1 };
  s0 -> s0 [0, 65535] { R20507 += 1, R20508 += 1 };
  s0 -> s3 [0, 65535] { R20508 += 1, R20440 += 1, R20382 += 1, R20376 += 1 };
  s1 -> s1 [0, 65535] { R20508 += 1, R20440 += 1, R20381 += 1, R20382 += 1 };
  s1 -> s4 [0, 65535] { R20508 += 1 };
  s1 -> s3 [0, 65535] { R20508 += 1, R20440 += 1, R20382 += 1, R20376 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R20508 += 1, R20440 += 1, R20381 += 1, R20382 += 1 };
  s2 -> s2 [0, 65535] { R20508 += 1, R20439 += 1, R20440 += 1 };
  s2 -> s3 [0, 65535] { R20508 += 1, R20440 += 1, R20382 += 1, R20376 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R20508 += 1 };
  s3 -> s3 [0, 65535] { R20508 += 1, R20440 += 1, R20382 += 1, R20376 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R20508 += 1, R20440 += 1 };
  s4 -> s4 [0, 65535] { R20508 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R20508 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R20508 += 1, R20440 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_20 {
  init s0;
  s0 -> s0 [0, 65535] { R20509 += 1, R20510 += 1 };
  s0 -> s1 [0, 65535] { R20510 += 1, R20441 += 1, R20442 += 1 };
  s0 -> s2 [0, 65535] { R20510 += 1, R20442 += 1, R20383 += 1, R20384 += 1 };
  s0 -> s3 [0, 65535] { R20510 += 1, R20442 += 1, R20384 += 1, R20354 += 1 };
  s1 -> s1 [0, 65535] { R20510 += 1, R20441 += 1, R20442 += 1 };
  s1 -> s2 [0, 65535] { R20510 += 1, R20442 += 1, R20383 += 1, R20384 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R20510 += 1, R20442 += 1, R20384 += 1, R20354 += 1 };
  s2 -> s2 [0, 65535] { R20510 += 1, R20442 += 1, R20383 += 1, R20384 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R20510 += 1, R20442 += 1, R20384 += 1, R20354 += 1 };
  s2 -> s6 [0, 65535] { R20510 += 1 };
  s3 -> s4 [0, 65535] { R20510 += 1, R20442 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R20510 += 1, R20442 += 1, R20384 += 1, R20354 += 1 };
  s3 -> s6 [0, 65535] { R20510 += 1 };
  s4 -> s4 [0, 65535] { R20510 += 1, R20442 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R20510 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R20510 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_21 {
  init s0;
  s0 -> s1 [0, 107] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s0 -> s2 [0, 65535] { R20512 += 1, R20444 += 1, R20385 += 1, R20386 += 1 };
  s0 -> s3 [0, 65535] { R20512 += 1, R20443 += 1, R20444 += 1 };
  s0 -> s0 [0, 65535] { R20511 += 1, R20512 += 1 };
  s0 -> s4 [108, 108] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s0 -> s1 [109, 65535] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s1 -> s1 [0, 65535] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s1 -> s5 [0, 65535] { R20512 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s15 [0, 65535] { R20512 += 1, R20444 += 1 };
  s2 -> s1 [0, 107] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s2 -> s2 [0, 65535] { R20512 += 1, R20444 += 1, R20385 += 1, R20386 += 1 };
  s2 -> s5 [0, 65535] { R20512 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [108, 108] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s2 -> s1 [109, 65535] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s3 -> s1 [0, 107] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s3 -> s2 [0, 65535] { R20512 += 1, R20444 += 1, R20385 += 1, R20386 += 1 };
  s3 -> s3 [0, 65535] { R20512 += 1, R20443 += 1, R20444 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s4 [108, 108] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s3 -> s1 [109, 65535] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s4 -> s1 [0, 110] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s4 -> s4 [0, 65535] { R20512 += 1, R20444 += 1 };
  s4 -> s5 [0, 65535] { R20512 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [111, 111] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s4 -> s1 [112, 65535] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s5 -> s5 [0, 65535] { R20512 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s1 [0, 98] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s7 -> s5 [0, 65535] { R20512 += 1 };
  s7 -> s7 [0, 65535] { R20512 += 1, R20444 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s8 [99, 99] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s7 -> s1 [100, 65535] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s8 -> s1 [0, 96] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s8 -> s5 [0, 65535] { R20512 += 1 };
  s8 -> s8 [0, 65535] { R20512 += 1, R20444 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s9 [97, 97] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s8 -> s1 [98, 65535] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s9 -> s1 [0, 107] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s9 -> s9 [0, 65535] { R20512 += 1, R20444 += 1 };
  s9 -> s5 [0, 65535] { R20512 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s10 [108, 108] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s9 -> s1 [109, 65535] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s10 -> s1 [0, 103] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s10 -> s10 [0, 65535] { R20512 += 1, R20444 += 1 };
  s10 -> s5 [0, 65535] { R20512 += 1 };
  s10 -> s6 [0, 65535];
  s10 -> s11 [104, 104] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s10 -> s1 [105, 65535] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s11 -> s1 [0, 110] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s11 -> s11 [0, 65535] { R20512 += 1, R20444 += 1 };
  s11 -> s5 [0, 65535] { R20512 += 1 };
  s11 -> s6 [0, 65535];
  s11 -> s12 [111, 111] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s11 -> s1 [112, 65535] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s12 -> s1 [0, 114] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s12 -> s12 [0, 65535] { R20512 += 1, R20444 += 1 };
  s12 -> s5 [0, 65535] { R20512 += 1 };
  s12 -> s6 [0, 65535];
  s12 -> s13 [115, 115] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s12 -> s1 [116, 65535] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s13 -> s1 [0, 115] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s13 -> s13 [0, 65535] { R20512 += 1, R20444 += 1 };
  s13 -> s5 [0, 65535] { R20512 += 1 };
  s13 -> s6 [0, 65535];
  s13 -> s14 [116, 116] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s13 -> s1 [117, 65535] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s14 -> s1 [0, 65535] { R20512 += 1, R20444 += 1, R20386 += 1 };
  s15 -> s5 [0, 65535] { R20512 += 1 };
  s15 -> s6 [0, 65535];
  s15 -> s15 [0, 65535] { R20512 += 1, R20444 += 1 };
  accepting s3, s4, s12, s8, s13, s5, s2, s9, s6, s1, s7, s0, s15, s10, s11;
};
automaton uri_22 {
  init s0;
  s0 -> s1 [0, 43] { R20514 += 1, R20446 += 1, R20388 += 1 };
  s0 -> s2 [0, 65535] { R20514 += 1, R20446 += 1, R20387 += 1, R20388 += 1 };
  s0 -> s0 [0, 65535] { R20513 += 1, R20514 += 1 };
  s0 -> s3 [0, 65535] { R20514 += 1, R20445 += 1, R20446 += 1 };
  s0 -> s1 [45, 64] { R20514 += 1, R20446 += 1, R20388 += 1 };
  s0 -> s1 [91, 65535] { R20514 += 1, R20446 += 1, R20388 += 1 };
  s1 -> s1 [0, 43] { R20514 += 1, R20446 += 1, R20388 += 1 };
  s1 -> s1 [0, 65535] { R20514 += 1, R20446 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R20514 += 1 };
  s1 -> s1 [45, 64] { R20514 += 1, R20446 += 1, R20388 += 1 };
  s1 -> s1 [91, 65535] { R20514 += 1, R20446 += 1, R20388 += 1 };
  s2 -> s1 [0, 43] { R20514 += 1, R20446 += 1, R20388 += 1 };
  s2 -> s2 [0, 65535] { R20514 += 1, R20446 += 1, R20387 += 1, R20388 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R20514 += 1 };
  s2 -> s1 [45, 64] { R20514 += 1, R20446 += 1, R20388 += 1 };
  s2 -> s1 [91, 65535] { R20514 += 1, R20446 += 1, R20388 += 1 };
  s3 -> s1 [0, 43] { R20514 += 1, R20446 += 1, R20388 += 1 };
  s3 -> s2 [0, 65535] { R20514 += 1, R20446 += 1, R20387 += 1, R20388 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R20514 += 1, R20445 += 1, R20446 += 1 };
  s3 -> s1 [45, 64] { R20514 += 1, R20446 += 1, R20388 += 1 };
  s3 -> s1 [91, 65535] { R20514 += 1, R20446 += 1, R20388 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R20514 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_23 {
  init s0;
  s0 -> s1 [0, 65535] { R20516 += 1, R20448 += 1, R20389 += 1, R20390 += 1 };
  s0 -> s2 [0, 65535] { R20516 += 1, R20447 += 1, R20448 += 1 };
  s0 -> s3 [0, 65535] { R20516 += 1, R20448 += 1, R20390 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R20515 += 1, R20516 += 1 };
  s1 -> s4 [0, 65535] { R20516 += 1 };
  s1 -> s1 [0, 65535] { R20516 += 1, R20448 += 1, R20389 += 1, R20390 += 1 };
  s1 -> s3 [0, 65535] { R20516 += 1, R20448 += 1, R20390 += 1, R3 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R20516 += 1, R20448 += 1, R20389 += 1, R20390 += 1 };
  s2 -> s2 [0, 65535] { R20516 += 1, R20447 += 1, R20448 += 1 };
  s2 -> s3 [0, 65535] { R20516 += 1, R20448 += 1, R20390 += 1, R3 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R20516 += 1 };
  s3 -> s3 [0, 65535] { R20516 += 1, R20448 += 1, R20390 += 1, R3 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R20516 += 1, R20448 += 1 };
  s4 -> s4 [0, 65535] { R20516 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R20516 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R20516 += 1, R20448 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_24 {
  init s0;
  s0 -> s1 [0, 57] { R20518 += 1, R20450 += 1, R20392 += 1 };
  s0 -> s0 [0, 65535] { R20517 += 1, R20518 += 1 };
  s0 -> s2 [0, 65535] { R20518 += 1, R20450 += 1, R20392 += 1, R12 += 1 };
  s0 -> s3 [0, 65535] { R20518 += 1, R20450 += 1, R20391 += 1, R20392 += 1 };
  s0 -> s4 [0, 65535] { R20518 += 1, R20449 += 1, R20450 += 1 };
  s0 -> s5 [58, 58] { R20518 += 1, R20450 += 1, R20392 += 1 };
  s0 -> s1 [59, 65535] { R20518 += 1, R20450 += 1, R20392 += 1 };
  s1 -> s1 [0, 57] { R20518 += 1, R20450 += 1, R20392 += 1 };
  s1 -> s7 [0, 65535] { R20518 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R20518 += 1, R20450 += 1 };
  s1 -> s5 [58, 58] { R20518 += 1, R20450 += 1, R20392 += 1 };
  s1 -> s1 [59, 65535] { R20518 += 1, R20450 += 1, R20392 += 1 };
  s2 -> s1 [0, 57] { R20518 += 1, R20450 += 1, R20392 += 1 };
  s2 -> s7 [0, 65535] { R20518 += 1 };
  s2 -> s8 [0, 65535] { R20518 += 1, R20450 += 1 };
  s2 -> s2 [0, 65535] { R20518 += 1, R20450 += 1, R20392 += 1, R12 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s5 [58, 58] { R20518 += 1, R20450 += 1, R20392 += 1 };
  s2 -> s1 [59, 65535] { R20518 += 1, R20450 += 1, R20392 += 1 };
  s3 -> s1 [0, 57] { R20518 += 1, R20450 += 1, R20392 += 1 };
  s3 -> s7 [0, 65535] { R20518 += 1 };
  s3 -> s2 [0, 65535] { R20518 += 1, R20450 += 1, R20392 += 1, R12 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R20518 += 1, R20450 += 1, R20391 += 1, R20392 += 1 };
  s3 -> s5 [58, 58] { R20518 += 1, R20450 += 1, R20392 += 1 };
  s3 -> s1 [59, 65535] { R20518 += 1, R20450 += 1, R20392 += 1 };
  s4 -> s1 [0, 57] { R20518 += 1, R20450 += 1, R20392 += 1 };
  s4 -> s2 [0, 65535] { R20518 += 1, R20450 += 1, R20392 += 1, R12 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s3 [0, 65535] { R20518 += 1, R20450 += 1, R20391 += 1, R20392 += 1 };
  s4 -> s4 [0, 65535] { R20518 += 1, R20449 += 1, R20450 += 1 };
  s4 -> s5 [58, 58] { R20518 += 1, R20450 += 1, R20392 += 1 };
  s4 -> s1 [59, 65535] { R20518 += 1, R20450 += 1, R20392 += 1 };
  s5 -> s5 [0, 65535] { R20518 += 1, R20450 += 1, R20392 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R20518 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R20518 += 1 };
  s8 -> s8 [0, 65535] { R20518 += 1, R20450 += 1 };
  s8 -> s6 [0, 65535];
  accepting s3, s4, s8, s2, s6, s1, s7, s0;
};
automaton uri_25 {
  init s0;
  s0 -> s1 [0, 90] { R20520 += 1, R20452 += 1, R20394 += 1, R20358 += 1 };
  s0 -> s2 [0, 65535] { R20520 += 1, R20451 += 1, R20452 += 1 };
  s0 -> s0 [0, 65535] { R20519 += 1, R20520 += 1 };
  s0 -> s3 [0, 65535] { R20520 += 1, R20452 += 1, R20393 += 1, R20394 += 1 };
  s0 -> s4 [0, 65535] { R20520 += 1, R20452 += 1, R20394 += 1, R20357 += 1, R20358 += 1 };
  s0 -> s5 [91, 91] { R20520 += 1, R20452 += 1, R20394 += 1, R20358 += 1 };
  s0 -> s1 [92, 65535] { R20520 += 1, R20452 += 1, R20394 += 1, R20358 += 1 };
  s1 -> s9 [0, 65535] { R20520 += 1, R20452 += 1, R20394 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R20520 += 1 };
  s1 -> s8 [0, 65535] { R20520 += 1, R20452 += 1 };
  s1 -> s1 [0, 65535] { R20520 += 1, R20452 += 1, R20394 += 1, R20358 += 1 };
  s2 -> s1 [0, 90] { R20520 += 1, R20452 += 1, R20394 += 1, R20358 += 1 };
  s2 -> s2 [0, 65535] { R20520 += 1, R20451 += 1, R20452 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R20520 += 1, R20452 += 1, R20393 += 1, R20394 += 1 };
  s2 -> s4 [0, 65535] { R20520 += 1, R20452 += 1, R20394 += 1, R20357 += 1, R20358 += 1 };
  s2 -> s5 [91, 91] { R20520 += 1, R20452 += 1, R20394 += 1, R20358 += 1 };
  s2 -> s1 [92, 65535] { R20520 += 1, R20452 += 1, R20394 += 1, R20358 += 1 };
  s3 -> s1 [0, 90] { R20520 += 1, R20452 += 1, R20394 += 1, R20358 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R20520 += 1, R20452 += 1, R20393 += 1, R20394 += 1 };
  s3 -> s4 [0, 65535] { R20520 += 1, R20452 += 1, R20394 += 1, R20357 += 1, R20358 += 1 };
  s3 -> s7 [0, 65535] { R20520 += 1 };
  s3 -> s5 [91, 91] { R20520 += 1, R20452 += 1, R20394 += 1, R20358 += 1 };
  s3 -> s1 [92, 65535] { R20520 += 1, R20452 += 1, R20394 += 1, R20358 += 1 };
  s4 -> s1 [0, 90] { R20520 += 1, R20452 += 1, R20394 += 1, R20358 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R20520 += 1, R20452 += 1, R20394 += 1, R20357 += 1, R20358 += 1 };
  s4 -> s7 [0, 65535] { R20520 += 1 };
  s4 -> s8 [0, 65535] { R20520 += 1, R20452 += 1 };
  s4 -> s5 [91, 91] { R20520 += 1, R20452 += 1, R20394 += 1, R20358 += 1 };
  s4 -> s1 [92, 65535] { R20520 += 1, R20452 += 1, R20394 += 1, R20358 += 1 };
  s5 -> s1 [0, 65535] { R20520 += 1, R20452 += 1, R20394 += 1, R20358 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R20520 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R20520 += 1 };
  s8 -> s8 [0, 65535] { R20520 += 1, R20452 += 1 };
  s9 -> s9 [0, 65535] { R20520 += 1, R20452 += 1, R20394 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s7 [0, 65535] { R20520 += 1 };
  s9 -> s8 [0, 65535] { R20520 += 1, R20452 += 1 };
  accepting s3, s4, s8, s2, s9, s6, s1, s7, s0;
};
automaton uri_26 {
  init s0;
  s0 -> s0 [0, 65535] { R20521 += 1, R20522 += 1 };
  s0 -> s1 [0, 65535] { R20522 += 1, R20453 += 1, R20454 += 1 };
  s0 -> s2 [0, 65535] { R20522 += 1, R20454 += 1, R20396 += 1, R20360 += 1, R10 += 1 };
  s0 -> s3 [0, 65535] { R20522 += 1, R20454 += 1, R20396 += 1, R20359 += 1, R20360 += 1 };
  s0 -> s4 [0, 65535] { R20522 += 1, R20454 += 1, R20395 += 1, R20396 += 1 };
  s1 -> s1 [0, 65535] { R20522 += 1, R20453 += 1, R20454 += 1 };
  s1 -> s2 [0, 65535] { R20522 += 1, R20454 += 1, R20396 += 1, R20360 += 1, R10 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R20522 += 1, R20454 += 1, R20396 += 1, R20359 += 1, R20360 += 1 };
  s1 -> s4 [0, 65535] { R20522 += 1, R20454 += 1, R20395 += 1, R20396 += 1 };
  s2 -> s2 [0, 65535] { R20522 += 1, R20454 += 1, R20396 += 1, R20360 += 1, R10 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R20522 += 1, R20454 += 1 };
  s2 -> s8 [0, 65535] { R20522 += 1, R20454 += 1, R20396 += 1 };
  s2 -> s6 [0, 65535] { R20522 += 1 };
  s3 -> s2 [0, 65535] { R20522 += 1, R20454 += 1, R20396 += 1, R20360 += 1, R10 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R20522 += 1, R20454 += 1, R20396 += 1, R20359 += 1, R20360 += 1 };
  s3 -> s7 [0, 65535] { R20522 += 1, R20454 += 1 };
  s3 -> s6 [0, 65535] { R20522 += 1 };
  s4 -> s2 [0, 65535] { R20522 += 1, R20454 += 1, R20396 += 1, R20360 += 1, R10 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R20522 += 1, R20454 += 1, R20396 += 1, R20359 += 1, R20360 += 1 };
  s4 -> s4 [0, 65535] { R20522 += 1, R20454 += 1, R20395 += 1, R20396 += 1 };
  s4 -> s6 [0, 65535] { R20522 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R20522 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R20522 += 1, R20454 += 1 };
  s7 -> s6 [0, 65535] { R20522 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s7 [0, 65535] { R20522 += 1, R20454 += 1 };
  s8 -> s8 [0, 65535] { R20522 += 1, R20454 += 1, R20396 += 1 };
  s8 -> s6 [0, 65535] { R20522 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_27 {
  init s0;
  s0 -> s1 [0, 43] { R20524 += 1, R20456 += 1, R20398 += 1 };
  s0 -> s0 [0, 65535] { R20523 += 1, R20524 += 1 };
  s0 -> s2 [0, 65535] { R20524 += 1, R20455 += 1, R20456 += 1 };
  s0 -> s3 [0, 65535] { R20524 += 1, R20456 += 1, R20397 += 1, R20398 += 1 };
  s0 -> s4 [44, 44] { R20524 += 1, R20456 += 1, R20398 += 1 };
  s0 -> s1 [45, 65535] { R20524 += 1, R20456 += 1, R20398 += 1 };
  s1 -> s1 [0, 43] { R20524 += 1, R20456 += 1, R20398 += 1 };
  s1 -> s4 [44, 44] { R20524 += 1, R20456 += 1, R20398 += 1 };
  s1 -> s1 [45, 65535] { R20524 += 1, R20456 += 1, R20398 += 1 };
  s2 -> s1 [0, 43] { R20524 += 1, R20456 += 1, R20398 += 1 };
  s2 -> s2 [0, 65535] { R20524 += 1, R20455 += 1, R20456 += 1 };
  s2 -> s3 [0, 65535] { R20524 += 1, R20456 += 1, R20397 += 1, R20398 += 1 };
  s2 -> s4 [44, 44] { R20524 += 1, R20456 += 1, R20398 += 1 };
  s2 -> s1 [45, 65535] { R20524 += 1, R20456 += 1, R20398 += 1 };
  s3 -> s1 [0, 43] { R20524 += 1, R20456 += 1, R20398 += 1 };
  s3 -> s3 [0, 65535] { R20524 += 1, R20456 += 1, R20397 += 1, R20398 += 1 };
  s3 -> s4 [44, 44] { R20524 += 1, R20456 += 1, R20398 += 1 };
  s3 -> s1 [45, 65535] { R20524 += 1, R20456 += 1, R20398 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R20524 += 1, R20456 += 1 };
  s4 -> s7 [0, 65535] { R20524 += 1 };
  s4 -> s4 [0, 65535] { R20524 += 1, R20456 += 1, R20398 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R20524 += 1, R20456 += 1 };
  s6 -> s7 [0, 65535] { R20524 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R20524 += 1 };
  accepting s4, s5, s6, s7;
};
automaton uri_28 {
  init s0;
  s0 -> s1 [0, 65535] { R20526 += 1, R20457 += 1, R20458 += 1 };
  s0 -> s0 [0, 65535] { R20525 += 1, R20526 += 1 };
  s0 -> s2 [0, 65535] { R20526 += 1, R20458 += 1, R20400 += 1, R6 += 1 };
  s0 -> s3 [0, 65535] { R20526 += 1, R20458 += 1, R20399 += 1, R20400 += 1 };
  s1 -> s1 [0, 65535] { R20526 += 1, R20457 += 1, R20458 += 1 };
  s1 -> s2 [0, 65535] { R20526 += 1, R20458 += 1, R20400 += 1, R6 += 1 };
  s1 -> s3 [0, 65535] { R20526 += 1, R20458 += 1, R20399 += 1, R20400 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s4 [0, 65535] { R20526 += 1 };
  s2 -> s6 [0, 65535] { R20526 += 1, R20458 += 1 };
  s2 -> s2 [0, 65535] { R20526 += 1, R20458 += 1, R20400 += 1, R6 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R20526 += 1 };
  s3 -> s2 [0, 65535] { R20526 += 1, R20458 += 1, R20400 += 1, R6 += 1 };
  s3 -> s3 [0, 65535] { R20526 += 1, R20458 += 1, R20399 += 1, R20400 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R20526 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R20526 += 1 };
  s6 -> s6 [0, 65535] { R20526 += 1, R20458 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_29 {
  init s0;
  s0 -> s1 [0, 43] { R20528 += 1, R20460 += 1, R20402 += 1 };
  s0 -> s2 [0, 65535] { R20528 += 1, R20460 += 1, R20401 += 1, R20402 += 1 };
  s0 -> s3 [0, 65535] { R20528 += 1, R20459 += 1, R20460 += 1 };
  s0 -> s0 [0, 65535] { R20527 += 1, R20528 += 1 };
  s0 -> s4 [0, 65535] { R20528 += 1, R20460 += 1, R20402 += 1, R13 += 1 };
  s0 -> s5 [44, 44] { R20528 += 1, R20460 += 1, R20402 += 1 };
  s0 -> s1 [45, 65535] { R20528 += 1, R20460 += 1, R20402 += 1 };
  s1 -> s1 [0, 43] { R20528 += 1, R20460 += 1, R20402 += 1 };
  s1 -> s1 [0, 65535] { R20528 += 1, R20460 += 1 };
  s1 -> s6 [0, 65535] { R20528 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s5 [44, 44] { R20528 += 1, R20460 += 1, R20402 += 1 };
  s1 -> s1 [45, 65535] { R20528 += 1, R20460 += 1, R20402 += 1 };
  s2 -> s1 [0, 43] { R20528 += 1, R20460 += 1, R20402 += 1 };
  s2 -> s2 [0, 65535] { R20528 += 1, R20460 += 1, R20401 += 1, R20402 += 1 };
  s2 -> s6 [0, 65535] { R20528 += 1 };
  s2 -> s4 [0, 65535] { R20528 += 1, R20460 += 1, R20402 += 1, R13 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s5 [44, 44] { R20528 += 1, R20460 += 1, R20402 += 1 };
  s2 -> s1 [45, 65535] { R20528 += 1, R20460 += 1, R20402 += 1 };
  s3 -> s1 [0, 43] { R20528 += 1, R20460 += 1, R20402 += 1 };
  s3 -> s2 [0, 65535] { R20528 += 1, R20460 += 1, R20401 += 1, R20402 += 1 };
  s3 -> s3 [0, 65535] { R20528 += 1, R20459 += 1, R20460 += 1 };
  s3 -> s4 [0, 65535] { R20528 += 1, R20460 += 1, R20402 += 1, R13 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s5 [44, 44] { R20528 += 1, R20460 += 1, R20402 += 1 };
  s3 -> s1 [45, 65535] { R20528 += 1, R20460 += 1, R20402 += 1 };
  s4 -> s1 [0, 43] { R20528 += 1, R20460 += 1, R20402 += 1 };
  s4 -> s6 [0, 65535] { R20528 += 1 };
  s4 -> s4 [0, 65535] { R20528 += 1, R20460 += 1, R20402 += 1, R13 += 1 };
  s4 -> s7 [0, 65535] { R20528 += 1, R20460 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s5 [44, 44] { R20528 += 1, R20460 += 1, R20402 += 1 };
  s4 -> s1 [45, 65535] { R20528 += 1, R20460 += 1, R20402 += 1 };
  s5 -> s5 [0, 65535] { R20528 += 1, R20460 += 1, R20402 += 1 };
  s6 -> s6 [0, 65535] { R20528 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s6 [0, 65535] { R20528 += 1 };
  s7 -> s7 [0, 65535] { R20528 += 1, R20460 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s2, s6, s1, s7, s0;
};
automaton uri_30 {
  init s0;
  s0 -> s1 [0, 65535] { R20530 += 1, R20462 += 1, R20404 += 1, R20366 += 1, R0 += 1 };
  s0 -> s2 [0, 65535] { R20530 += 1, R20462 += 1, R20403 += 1, R20404 += 1 };
  s0 -> s0 [0, 65535] { R20529 += 1, R20530 += 1 };
  s0 -> s3 [0, 65535] { R20530 += 1, R20462 += 1, R20404 += 1, R20365 += 1, R20366 += 1 };
  s0 -> s4 [0, 65535] { R20530 += 1, R20461 += 1, R20462 += 1 };
  s1 -> s1 [0, 65535] { R20530 += 1, R20462 += 1, R20404 += 1, R20366 += 1, R0 += 1 };
  s1 -> s8 [0, 65535] { R20530 += 1, R20462 += 1, R20404 += 1 };
  s1 -> s6 [0, 65535] { R20530 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R20530 += 1, R20462 += 1 };
  s2 -> s1 [0, 65535] { R20530 += 1, R20462 += 1, R20404 += 1, R20366 += 1, R0 += 1 };
  s2 -> s2 [0, 65535] { R20530 += 1, R20462 += 1, R20403 += 1, R20404 += 1 };
  s2 -> s6 [0, 65535] { R20530 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R20530 += 1, R20462 += 1, R20404 += 1, R20365 += 1, R20366 += 1 };
  s3 -> s1 [0, 65535] { R20530 += 1, R20462 += 1, R20404 += 1, R20366 += 1, R0 += 1 };
  s3 -> s6 [0, 65535] { R20530 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s7 [0, 65535] { R20530 += 1, R20462 += 1 };
  s3 -> s3 [0, 65535] { R20530 += 1, R20462 += 1, R20404 += 1, R20365 += 1, R20366 += 1 };
  s4 -> s1 [0, 65535] { R20530 += 1, R20462 += 1, R20404 += 1, R20366 += 1, R0 += 1 };
  s4 -> s2 [0, 65535] { R20530 += 1, R20462 += 1, R20403 += 1, R20404 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R20530 += 1, R20462 += 1, R20404 += 1, R20365 += 1, R20366 += 1 };
  s4 -> s4 [0, 65535] { R20530 += 1, R20461 += 1, R20462 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R20530 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R20530 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R20530 += 1, R20462 += 1 };
  s8 -> s8 [0, 65535] { R20530 += 1, R20462 += 1, R20404 += 1 };
  s8 -> s6 [0, 65535] { R20530 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s7 [0, 65535] { R20530 += 1, R20462 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_31 {
  init s0;
  s0 -> s1 [0, 65535] { R20532 += 1, R20463 += 1, R20464 += 1 };
  s0 -> s2 [0, 65535] { R20532 += 1, R20464 += 1, R20414 += 1, R20355 += 1 };
  s0 -> s3 [0, 65535] { R20532 += 1, R20464 += 1, R20413 += 1, R20414 += 1 };
  s0 -> s0 [0, 65535] { R20531 += 1, R20532 += 1 };
  s1 -> s1 [0, 65535] { R20532 += 1, R20463 += 1, R20464 += 1 };
  s1 -> s2 [0, 65535] { R20532 += 1, R20464 += 1, R20414 += 1, R20355 += 1 };
  s1 -> s3 [0, 65535] { R20532 += 1, R20464 += 1, R20413 += 1, R20414 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R20532 += 1, R20464 += 1 };
  s2 -> s2 [0, 65535] { R20532 += 1, R20464 += 1, R20414 += 1, R20355 += 1 };
  s2 -> s4 [0, 65535] { R20532 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R20532 += 1, R20464 += 1, R20414 += 1, R20355 += 1 };
  s3 -> s3 [0, 65535] { R20532 += 1, R20464 += 1, R20413 += 1, R20414 += 1 };
  s3 -> s4 [0, 65535] { R20532 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R20532 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R20532 += 1, R20464 += 1 };
  s6 -> s4 [0, 65535] { R20532 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_32 {
  init s0;
  s0 -> s1 [0, 65535] { R20534 += 1, R20466 += 1 };
  s0 -> s0 [0, 65535] { R20533 += 1, R20534 += 1 };
  s0 -> s2 [0, 65535] { R20534 += 1, R20465 += 1, R20466 += 1 };
  s1 -> s1 [0, 65535] { R20534 += 1, R20466 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R20534 += 1 };
  s2 -> s1 [0, 65535] { R20534 += 1, R20466 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R20534 += 1, R20465 += 1, R20466 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R20534 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_33 {
  init s0;
  s0 -> s1 [0, 86] { R20536 += 1, R20468 += 1, R20416 += 1, R20375 += 1 };
  s0 -> s0 [0, 65535] { R20535 += 1, R20536 += 1 };
  s0 -> s2 [0, 65535] { R20536 += 1, R20467 += 1, R20468 += 1 };
  s0 -> s3 [0, 65535] { R20536 += 1, R20468 += 1, R20415 += 1, R20416 += 1 };
  s0 -> s4 [87, 87] { R20536 += 1, R20468 += 1, R20416 += 1, R20375 += 1 };
  s0 -> s5 [87, 87] { R20536 += 1, R20468 += 1, R20416 += 1, R20375 += 1 };
  s0 -> s1 [88, 65535] { R20536 += 1, R20468 += 1, R20416 += 1, R20375 += 1 };
  s1 -> s1 [0, 86] { R20536 += 1, R20468 += 1, R20416 += 1, R20375 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R20536 += 1, R20468 += 1 };
  s1 -> s8 [0, 65535] { R20536 += 1 };
  s1 -> s4 [87, 87] { R20536 += 1, R20468 += 1, R20416 += 1, R20375 += 1 };
  s1 -> s5 [87, 87] { R20536 += 1, R20468 += 1, R20416 += 1, R20375 += 1 };
  s1 -> s1 [88, 65535] { R20536 += 1, R20468 += 1, R20416 += 1, R20375 += 1 };
  s2 -> s1 [0, 86] { R20536 += 1, R20468 += 1, R20416 += 1, R20375 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R20536 += 1, R20467 += 1, R20468 += 1 };
  s2 -> s3 [0, 65535] { R20536 += 1, R20468 += 1, R20415 += 1, R20416 += 1 };
  s2 -> s4 [87, 87] { R20536 += 1, R20468 += 1, R20416 += 1, R20375 += 1 };
  s2 -> s5 [87, 87] { R20536 += 1, R20468 += 1, R20416 += 1, R20375 += 1 };
  s2 -> s1 [88, 65535] { R20536 += 1, R20468 += 1, R20416 += 1, R20375 += 1 };
  s3 -> s1 [0, 86] { R20536 += 1, R20468 += 1, R20416 += 1, R20375 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s8 [0, 65535] { R20536 += 1 };
  s3 -> s3 [0, 65535] { R20536 += 1, R20468 += 1, R20415 += 1, R20416 += 1 };
  s3 -> s4 [87, 87] { R20536 += 1, R20468 += 1, R20416 += 1, R20375 += 1 };
  s3 -> s5 [87, 87] { R20536 += 1, R20468 += 1, R20416 += 1, R20375 += 1 };
  s3 -> s1 [88, 65535] { R20536 += 1, R20468 += 1, R20416 += 1, R20375 += 1 };
  s4 -> s4 [0, 65535] { R20536 += 1, R20468 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s8 [0, 65535] { R20536 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R20536 += 1, R20468 += 1 };
  s5 -> s8 [0, 65535] { R20536 += 1 };
  s5 -> s5 [0, 65535] { R20536 += 1, R20468 += 1, R20416 += 1, R20375 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R20536 += 1, R20468 += 1 };
  s7 -> s8 [0, 65535] { R20536 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R20536 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_34 {
  init s0;
  s0 -> s0 [0, 65535] { R20537 += 1, R20538 += 1 };
  s0 -> s1 [0, 65535] { R20538 += 1, R20470 += 1, R20418 += 1, R20356 += 1 };
  s0 -> s2 [0, 65535] { R20538 += 1, R20469 += 1, R20470 += 1 };
  s0 -> s3 [0, 65535] { R20538 += 1, R20470 += 1, R20417 += 1, R20418 += 1 };
  s1 -> s1 [0, 65535] { R20538 += 1, R20470 += 1, R20418 += 1, R20356 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R20538 += 1 };
  s1 -> s6 [0, 65535] { R20538 += 1, R20470 += 1 };
  s2 -> s1 [0, 65535] { R20538 += 1, R20470 += 1, R20418 += 1, R20356 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R20538 += 1, R20469 += 1, R20470 += 1 };
  s2 -> s3 [0, 65535] { R20538 += 1, R20470 += 1, R20417 += 1, R20418 += 1 };
  s3 -> s1 [0, 65535] { R20538 += 1, R20470 += 1, R20418 += 1, R20356 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R20538 += 1, R20470 += 1, R20417 += 1, R20418 += 1 };
  s3 -> s5 [0, 65535] { R20538 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R20538 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R20538 += 1 };
  s6 -> s6 [0, 65535] { R20538 += 1, R20470 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_35 {
  init s0;
  s0 -> s0 [0, 65535] { R20539 += 1, R20540 += 1 };
  s0 -> s1 [0, 65535] { R20540 += 1, R20471 += 1, R20472 += 1 };
  s0 -> s2 [0, 65535] { R20540 += 1, R20472 += 1 };
  s1 -> s1 [0, 65535] { R20540 += 1, R20471 += 1, R20472 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R20540 += 1, R20472 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R20540 += 1 };
  s2 -> s2 [0, 65535] { R20540 += 1, R20472 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R20540 += 1 };
  accepting s3, s4, s2, s1, s0;
};
};
constraint R6 = R20366 && R7 = R20404 && R8 = R20412 && R9 = R20540 && R23 = 0 && R24 = R20472 && R20365 = 0 && R20367 = 0 && R20368 = 10 && R20369 = 0 && R20370 = 10 && R20371 = 0 && R20372 = 2 && R20373 = 0 && R20374 = 2 && R20377 = 0 && R20378 = R20404 && R20379 = 0 && R20380 = R20404 && R20381 = 0 && R20382 = R20404 && R20383 = 0 && R20384 = R20404 && R20385 = 0 && R20386 = R20404 && R20387 = 11 && R20388 = R20404 && R20389 = 11 && R20390 = R20404 && R20391 = 11 && R20392 = R20404 && R20393 = 11 && R20394 = R20404 && R20395 = 11 && R20396 = R20404 && R20397 = 3 && R20398 = R20404 && R20399 = 3 && R20400 = R20404 && R20401 = 3 && R20402 = R20404 && R20403 = 3 && R20405 - R20472 = 1 && R20406 = R20412 && R20407 - R20472 = 1 && R20408 = R20412 && R20409 - R20472 = 1 && R20410 = R20412 && R20411 - R20472 = 1 && R20419 = 0 && R20420 = R20472 && R20421 = 0 && R20422 = R20472 && R20423 = 0 && R20424 = R20472 && R20425 = 0 && R20426 = R20472 && R20427 = 0 && R20428 = R20472 && R20429 = 0 && R20430 = R20472 && R20431 = 0 && R20432 = R20472 && R20433 = 0 && R20434 = R20472 && R20435 = 0 && R20436 = R20472 && R20437 = 0 && R20438 = R20472 && R20439 = 0 && R20440 = R20472 && R20441 = 0 && R20442 = R20472 && R20443 = 0 && R20444 = R20472 && R20445 = 0 && R20446 = R20472 && R20447 = 0 && R20448 = R20472 && R20449 = 0 && R20450 = R20472 && R20451 = 0 && R20452 = R20472 && R20453 = 0 && R20454 = R20472 && R20455 = 0 && R20456 = R20472 && R20457 = 0 && R20458 = R20472 && R20459 = 0 && R20460 = R20472 && R20461 = 0 && R20462 = R20472 && R20463 = 0 && R20464 = R20472 && R20465 = 0 && R20466 = R20472 && R20467 = 0 && R20468 = R20472 && R20469 = 0 && R20470 = R20472 && R20471 = 0 && R20473 = 10 && R20474 = R20540 && R20475 = 10 && R20476 = R20540 && R20477 = 10 && R20478 = R20540 && R20479 = 10 && R20480 = R20540 && R20481 = 10 && R20482 = R20540 && R20483 = 10 && R20484 = R20540 && R20485 = 10 && R20486 = R20540 && R20487 = 10 && R20488 = R20540 && R20489 = 10 && R20490 = R20540 && R20491 = 10 && R20492 = R20540 && R20493 = 10 && R20494 = R20540 && R20495 = 10 && R20496 = R20540 && R20497 = 10 && R20498 = R20540 && R20499 = 10 && R20500 = R20540 && R20501 = 10 && R20502 = R20540 && R20503 = 10 && R20504 = R20540 && R20505 = 10 && R20506 = R20540 && R20507 = 10 && R20508 = R20540 && R20509 = 10 && R20510 = R20540 && R20511 = 10 && R20512 = R20540 && R20513 = 10 && R20514 = R20540 && R20515 = 10 && R20516 = R20540 && R20517 = 10 && R20518 = R20540 && R20519 = 10 && R20520 = R20540 && R20521 = 10 && R20522 = R20540 && R20523 = 10 && R20524 = R20540 && R20525 = 10 && R20526 = R20540 && R20527 = 10 && R20528 = R20540 && R20529 = 10 && R20530 = R20540 && R20531 = 10 && R20532 = R20540 && R20533 = 10 && R20534 = R20540 && R20535 = 10 && R20536 = R20540 && R20537 = 10 && R20538 = R20540 && R20539 = 10 && R0 != 0 && R1 != 0 && R3 != 0 && R4 != 0 && R5 != 0 && R20376 + R20375 != 0 && R12 < 1 && R13 < 1 && R16 < 1 && R19 < 1 && 0 < R20366 && 10 < R20404 && R20472 < R20412 && -1 < R20472 && 9 < R20540 && (R20357 != 0 || ((R10 != 0 || ((R3 != R20358 || R20358 = 1 || R20358 < 0) && (R3 = R20358 || R20358 = 1 || R3 < 1))) && (R10 = 0 || ((R3 != R20358 || R20358 = 1 || R20358 < 0) && (R20358 != 1 || -1 < R3) && (R3 = R20358 || R20358 = 1))))) && (R20359 != 0 || ((R10 != 0 || ((R3 != R20360 || R20360 = 1 || R20360 < 0) && (R3 = R20360 || R20360 = 1 || R3 < 1))) && (R10 = 0 || ((R3 != R20360 || R20360 = 1 || R20360 < 0) && (R20360 != 1 || -1 < R3) && (R3 = R20360 || R20360 = 1))))) && (R20361 != 0 || ((R11 != 0 || ((R5 != R20362 || R20362 = 1 || R20362 < 0) && (R5 = R20362 || R20362 = 1 || R5 < 1))) && (R11 = 0 || ((R5 != R20362 || R20362 = 1 || R20362 < 0) && (R20362 != 1 || -1 < R5) && (R5 = R20362 || R20362 = 1))))) && (R20363 != 0 || ((R11 != 0 || ((R5 != R20364 || R20364 = 1 || R20364 < 0) && (R5 = R20364 || R20364 = 1 || R5 < 1))) && (R11 = 0 || ((R5 != R20364 || R20364 = 1 || R20364 < 0) && (R20364 != 1 || -1 < R5) && (R5 = R20364 || R20364 = 1))))) && (R20355 = 0 || (R20413 = 0 && R20414 = 0)) && (R20355 = 0 || (R20415 = 0 && R20416 = 0)) && (R20356 = 0 || (R20417 = 0 && R20418 = 0)) && (R20357 = 0 || (R10 = 0 && R3 < 0)) && (R20359 = 0 || (R10 = 0 && R3 < 0)) && (R20361 = 0 || (R11 = 0 && R5 < 0)) && (R20363 = 0 || (R11 = 0 && R5 < 0));
// End of Parikh automata intersection problem
