// Parikh automata intersection problem, generated by OSTRICH+
counter int R0, R1, R12, R13, R17, R18, R198, R199, R2, R200, R201, R202, R203, R204, R205, R206, R207, R208, R209, R210, R211, R212, R213, R214, R215, R216, R217, R218, R219, R220, R221, R222, R223, R224, R225, R226, R227, R228, R229, R230, R231, R232, R233, R234, R235, R236, R237, R238, R239, R240, R241, R242, R243, R244, R245, R246, R247, R248, R249, R250, R251, R252, R253, R254, R255, R256, R257, R258, R259, R260, R261, R262, R263, R264, R265, R266, R267, R268, R269, R270, R271, R272, R273, R274, R275, R276, R277, R278, R279, R280, R281, R282, R283, R284, R285, R286, R287, R288, R289, R290, R291, R292, R293, R294, R295, R296, R297, R298, R299, R3, R300, R301, R302, R303, R304, R305, R306, R307, R308, R309, R310, R311, R312, R313, R314, R315, R316, R317, R318, R319, R320, R321, R322, R323, R324, R325, R326, R327, R328, R329, R330, R331, R332, R333, R334, R335, R336, R337, R338, R339, R340, R341, R342, R343, R344, R345, R346, R347, R348, R349, R350, R351, R352, R353, R354, R355, R356, R357, R358, R359, R360, R361, R362, R363, R364, R365, R366, R367, R368, R369, R370, R371, R372, R373, R374, R375, R376, R4, R5, R6, R7, R8, R9;
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R6 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 45] { R324 += 1 };
  s0 -> s0 [0, 65535] { R323 += 1, R324 += 1 };
  s0 -> s2 [46, 46] { R324 += 1 };
  s0 -> s3 [47, 47] { R324 += 1 };
  s0 -> s1 [48, 65535] { R324 += 1 };
  s1 -> s1 [0, 45] { R324 += 1 };
  s1 -> s2 [46, 46] { R324 += 1 };
  s1 -> s3 [47, 47] { R324 += 1 };
  s1 -> s1 [48, 65535] { R324 += 1 };
  s2 -> s1 [0, 45] { R324 += 1 };
  s2 -> s2 [46, 46] { R324 += 1 };
  s2 -> s3 [47, 47] { R324 += 1 };
  s2 -> s1 [48, 114] { R324 += 1 };
  s2 -> s8 [115, 115] { R324 += 1 };
  s2 -> s1 [116, 65535] { R324 += 1 };
  s3 -> s3 [0, 45] { R324 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s4 [46, 46] { R324 += 1 };
  s3 -> s3 [47, 65535] { R324 += 1 };
  s4 -> s3 [0, 45] { R324 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s4 [46, 46] { R324 += 1 };
  s4 -> s3 [47, 114] { R324 += 1 };
  s4 -> s5 [115, 115] { R324 += 1 };
  s4 -> s3 [116, 65535] { R324 += 1 };
  s5 -> s3 [0, 45] { R324 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s4 [46, 46] { R324 += 1 };
  s5 -> s3 [47, 110] { R324 += 1 };
  s5 -> s6 [111, 111] { R324 += 1 };
  s5 -> s3 [112, 65535] { R324 += 1 };
  s6 -> s3 [0, 45] { R324 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s4 [46, 46] { R324 += 1 };
  s6 -> s3 [47, 98] { R324 += 1 };
  s6 -> s7 [99, 99] { R324 += 1 };
  s6 -> s3 [100, 65535] { R324 += 1 };
  s7 -> s3 [0, 45] { R324 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s4 [46, 46] { R324 += 1 };
  s7 -> s3 [47, 106] { R324 += 1 };
  s7 -> s3 [108, 65535] { R324 += 1 };
  s8 -> s1 [0, 45] { R324 += 1 };
  s8 -> s2 [46, 46] { R324 += 1 };
  s8 -> s3 [47, 47] { R324 += 1 };
  s8 -> s1 [48, 110] { R324 += 1 };
  s8 -> s9 [111, 111] { R324 += 1 };
  s8 -> s1 [112, 65535] { R324 += 1 };
  s9 -> s1 [0, 45] { R324 += 1 };
  s9 -> s2 [46, 46] { R324 += 1 };
  s9 -> s3 [47, 47] { R324 += 1 };
  s9 -> s1 [48, 98] { R324 += 1 };
  s9 -> s10 [99, 99] { R324 += 1 };
  s9 -> s1 [100, 65535] { R324 += 1 };
  s10 -> s1 [0, 45] { R324 += 1 };
  s10 -> s2 [46, 46] { R324 += 1 };
  s10 -> s3 [47, 47] { R324 += 1 };
  s10 -> s1 [48, 106] { R324 += 1 };
  s10 -> s1 [108, 65535] { R324 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_3 {
  init s0;
  s0 -> s1 [0, 65535] { R326 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R325 += 1, R326 += 1 };
  s1 -> s1 [0, 65535] { R326 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s1 [0, 46] { R328 += 1, R18 += 1 };
  s0 -> s2 [0, 65535] { R328 += 1, R17 += 1, R18 += 1 };
  s0 -> s0 [0, 65535] { R327 += 1, R328 += 1 };
  s0 -> s3 [47, 47] { R328 += 1 };
  s0 -> s1 [48, 65535] { R328 += 1, R18 += 1 };
  s1 -> s1 [0, 46] { R328 += 1, R18 += 1 };
  s1 -> s3 [47, 47] { R328 += 1 };
  s1 -> s1 [48, 65535] { R328 += 1, R18 += 1 };
  s2 -> s1 [0, 46] { R328 += 1, R18 += 1 };
  s2 -> s2 [0, 65535] { R328 += 1, R17 += 1, R18 += 1 };
  s2 -> s3 [47, 47] { R328 += 1 };
  s2 -> s1 [48, 65535] { R328 += 1, R18 += 1 };
  s3 -> s3 [0, 65535] { R328 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 42] { R330 += 1, R214 += 1 };
  s0 -> s0 [0, 65535] { R329 += 1, R330 += 1 };
  s0 -> s2 [0, 65535] { R330 += 1, R213 += 1, R214 += 1 };
  s0 -> s3 [43, 43] { R330 += 1, R214 += 1 };
  s0 -> s1 [44, 45] { R330 += 1, R214 += 1 };
  s0 -> s1 [47, 62] { R330 += 1, R214 += 1 };
  s0 -> s1 [64, 65535] { R330 += 1, R214 += 1 };
  s1 -> s1 [0, 42] { R330 += 1, R214 += 1 };
  s1 -> s3 [43, 43] { R330 += 1, R214 += 1 };
  s1 -> s1 [44, 45] { R330 += 1, R214 += 1 };
  s1 -> s1 [47, 62] { R330 += 1, R214 += 1 };
  s1 -> s1 [64, 65535] { R330 += 1, R214 += 1 };
  s2 -> s1 [0, 42] { R330 += 1, R214 += 1 };
  s2 -> s2 [0, 65535] { R330 += 1, R213 += 1, R214 += 1 };
  s2 -> s3 [43, 43] { R330 += 1, R214 += 1 };
  s2 -> s1 [44, 45] { R330 += 1, R214 += 1 };
  s2 -> s1 [47, 62] { R330 += 1, R214 += 1 };
  s2 -> s1 [64, 65535] { R330 += 1, R214 += 1 };
  s3 -> s3 [0, 45] { R330 += 1, R214 += 1 };
  s3 -> s3 [0, 65535] { R330 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [47, 62] { R330 += 1, R214 += 1 };
  s3 -> s3 [64, 65535] { R330 += 1, R214 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton uri_6 {
  init s0;
  s0 -> s1 [0, 65535] { R332 += 1, R215 += 1, R216 += 1 };
  s0 -> s0 [0, 65535] { R331 += 1, R332 += 1 };
  s0 -> s2 [0, 65535] { R332 += 1, R216 += 1, R1 += 1 };
  s1 -> s1 [0, 65535] { R332 += 1, R215 += 1, R216 += 1 };
  s1 -> s2 [0, 65535] { R332 += 1, R216 += 1, R1 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R332 += 1 };
  s2 -> s2 [0, 65535] { R332 += 1, R216 += 1, R1 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R332 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_7 {
  init s0;
  s0 -> s1 [0, 62] { R334 += 1, R218 += 1, R202 += 1 };
  s0 -> s0 [0, 65535] { R333 += 1, R334 += 1 };
  s0 -> s2 [0, 65535] { R334 += 1, R217 += 1, R218 += 1 };
  s0 -> s3 [0, 65535] { R334 += 1, R218 += 1, R201 += 1, R202 += 1 };
  s0 -> s4 [63, 63] { R334 += 1, R218 += 1, R202 += 1 };
  s0 -> s1 [64, 65535] { R334 += 1, R218 += 1, R202 += 1 };
  s1 -> s1 [0, 65535] { R334 += 1, R218 += 1, R202 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R334 += 1 };
  s1 -> s7 [0, 65535] { R334 += 1, R218 += 1 };
  s2 -> s1 [0, 62] { R334 += 1, R218 += 1, R202 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R334 += 1, R217 += 1, R218 += 1 };
  s2 -> s3 [0, 65535] { R334 += 1, R218 += 1, R201 += 1, R202 += 1 };
  s2 -> s4 [63, 63] { R334 += 1, R218 += 1, R202 += 1 };
  s2 -> s1 [64, 65535] { R334 += 1, R218 += 1, R202 += 1 };
  s3 -> s1 [0, 62] { R334 += 1, R218 += 1, R202 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R334 += 1, R218 += 1, R201 += 1, R202 += 1 };
  s3 -> s6 [0, 65535] { R334 += 1 };
  s3 -> s4 [63, 63] { R334 += 1, R218 += 1, R202 += 1 };
  s3 -> s1 [64, 65535] { R334 += 1, R218 += 1, R202 += 1 };
  s4 -> s1 [0, 65535] { R334 += 1, R218 += 1, R202 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R334 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R334 += 1 };
  s7 -> s7 [0, 65535] { R334 += 1, R218 += 1 };
  accepting s3, s5, s2, s6, s1, s7, s0;
};
automaton uri_8 {
  init s0;
  s0 -> s1 [0, 65535] { R336 += 1, R219 += 1, R220 += 1 };
  s0 -> s0 [0, 65535] { R335 += 1, R336 += 1 };
  s0 -> s2 [0, 65535] { R336 += 1, R220 += 1, R203 += 1, R204 += 1 };
  s0 -> s3 [0, 65535] { R336 += 1, R220 += 1, R204 += 1, R7 += 1 };
  s1 -> s1 [0, 65535] { R336 += 1, R219 += 1, R220 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R336 += 1, R220 += 1, R203 += 1, R204 += 1 };
  s1 -> s3 [0, 65535] { R336 += 1, R220 += 1, R204 += 1, R7 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R336 += 1, R220 += 1, R203 += 1, R204 += 1 };
  s2 -> s3 [0, 65535] { R336 += 1, R220 += 1, R204 += 1, R7 += 1 };
  s2 -> s6 [0, 65535] { R336 += 1 };
  s3 -> s4 [0, 65535] { R336 += 1, R220 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R336 += 1, R220 += 1, R204 += 1, R7 += 1 };
  s3 -> s6 [0, 65535] { R336 += 1 };
  s4 -> s4 [0, 65535] { R336 += 1, R220 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R336 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R336 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_9 {
  init s0;
  s0 -> s1 [0, 63] { R338 += 1, R284 += 1 };
  s0 -> s2 [0, 65535] { R338 += 1, R283 += 1, R284 += 1 };
  s0 -> s0 [0, 65535] { R337 += 1, R338 += 1 };
  s0 -> s3 [64, 64] { R338 += 1, R284 += 1 };
  s0 -> s1 [65, 65535] { R338 += 1, R284 += 1 };
  s1 -> s1 [0, 63] { R338 += 1, R284 += 1 };
  s1 -> s3 [64, 64] { R338 += 1, R284 += 1 };
  s1 -> s1 [65, 65535] { R338 += 1, R284 += 1 };
  s2 -> s1 [0, 63] { R338 += 1, R284 += 1 };
  s2 -> s2 [0, 65535] { R338 += 1, R283 += 1, R284 += 1 };
  s2 -> s3 [64, 64] { R338 += 1, R284 += 1 };
  s2 -> s1 [65, 65535] { R338 += 1, R284 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R338 += 1, R284 += 1 };
  s3 -> s5 [0, 65535] { R338 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R338 += 1 };
  accepting s3, s4, s5;
};
automaton uri_10 {
  init s0;
  s0 -> s1 [0, 65535] { R340 += 1, R285 += 1, R286 += 1 };
  s0 -> s2 [0, 65535] { R340 += 1, R286 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R339 += 1, R340 += 1 };
  s1 -> s1 [0, 65535] { R340 += 1, R285 += 1, R286 += 1 };
  s1 -> s2 [0, 65535] { R340 += 1, R286 += 1, R4 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R340 += 1, R286 += 1, R4 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R340 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R340 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_11 {
  init s0;
  s0 -> s1 [0, 36] { R342 += 1, R288 += 1, R210 += 1 };
  s0 -> s2 [0, 65535] { R342 += 1, R287 += 1, R288 += 1 };
  s0 -> s3 [0, 65535] { R342 += 1, R288 += 1, R209 += 1, R210 += 1 };
  s0 -> s0 [0, 65535] { R341 += 1, R342 += 1 };
  s0 -> s1 [38, 42] { R342 += 1, R288 += 1, R210 += 1 };
  s0 -> s1 [44, 57] { R342 += 1, R288 += 1, R210 += 1 };
  s0 -> s1 [59, 63] { R342 += 1, R288 += 1, R210 += 1 };
  s0 -> s1 [65, 65535] { R342 += 1, R288 += 1, R210 += 1 };
  s1 -> s1 [0, 36] { R342 += 1, R288 += 1, R210 += 1 };
  s1 -> s4 [0, 65535] { R342 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R342 += 1, R288 += 1 };
  s1 -> s1 [38, 42] { R342 += 1, R288 += 1, R210 += 1 };
  s1 -> s1 [44, 57] { R342 += 1, R288 += 1, R210 += 1 };
  s1 -> s1 [59, 63] { R342 += 1, R288 += 1, R210 += 1 };
  s1 -> s1 [65, 65535] { R342 += 1, R288 += 1, R210 += 1 };
  s2 -> s1 [0, 36] { R342 += 1, R288 += 1, R210 += 1 };
  s2 -> s2 [0, 65535] { R342 += 1, R287 += 1, R288 += 1 };
  s2 -> s3 [0, 65535] { R342 += 1, R288 += 1, R209 += 1, R210 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [38, 42] { R342 += 1, R288 += 1, R210 += 1 };
  s2 -> s1 [44, 57] { R342 += 1, R288 += 1, R210 += 1 };
  s2 -> s1 [59, 63] { R342 += 1, R288 += 1, R210 += 1 };
  s2 -> s1 [65, 65535] { R342 += 1, R288 += 1, R210 += 1 };
  s3 -> s1 [0, 36] { R342 += 1, R288 += 1, R210 += 1 };
  s3 -> s3 [0, 65535] { R342 += 1, R288 += 1, R209 += 1, R210 += 1 };
  s3 -> s4 [0, 65535] { R342 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [38, 42] { R342 += 1, R288 += 1, R210 += 1 };
  s3 -> s1 [44, 57] { R342 += 1, R288 += 1, R210 += 1 };
  s3 -> s1 [59, 63] { R342 += 1, R288 += 1, R210 += 1 };
  s3 -> s1 [65, 65535] { R342 += 1, R288 += 1, R210 += 1 };
  s4 -> s4 [0, 65535] { R342 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_12 {
  init s0;
  s0 -> s1 [0, 65535] { R344 += 1, R289 += 1, R290 += 1 };
  s0 -> s0 [0, 65535] { R343 += 1, R344 += 1 };
  s0 -> s2 [0, 65535] { R344 += 1, R290 += 1, R212 += 1, R0 += 1 };
  s0 -> s3 [0, 65535] { R344 += 1, R290 += 1, R211 += 1, R212 += 1 };
  s1 -> s1 [0, 65535] { R344 += 1, R289 += 1, R290 += 1 };
  s1 -> s2 [0, 65535] { R344 += 1, R290 += 1, R212 += 1, R0 += 1 };
  s1 -> s3 [0, 65535] { R344 += 1, R290 += 1, R211 += 1, R212 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s6 [0, 65535] { R344 += 1, R290 += 1 };
  s2 -> s2 [0, 65535] { R344 += 1, R290 += 1, R212 += 1, R0 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R344 += 1 };
  s3 -> s2 [0, 65535] { R344 += 1, R290 += 1, R212 += 1, R0 += 1 };
  s3 -> s3 [0, 65535] { R344 += 1, R290 += 1, R211 += 1, R212 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R344 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R344 += 1 };
  s6 -> s6 [0, 65535] { R344 += 1, R290 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R344 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_13 {
  init s0;
  s0 -> s1 [0, 43] { R346 += 1, R292 += 1, R252 += 1 };
  s0 -> s0 [0, 65535] { R345 += 1, R346 += 1 };
  s0 -> s2 [0, 65535] { R346 += 1, R292 += 1, R251 += 1, R252 += 1 };
  s0 -> s3 [0, 65535] { R346 += 1, R291 += 1, R292 += 1 };
  s0 -> s1 [45, 64] { R346 += 1, R292 += 1, R252 += 1 };
  s0 -> s4 [83, 83] { R346 += 1, R292 += 1, R252 += 1 };
  s0 -> s1 [84, 65535] { R346 += 1, R292 += 1, R252 += 1 };
  s1 -> s1 [0, 43] { R346 += 1, R292 += 1, R252 += 1 };
  s1 -> s1 [45, 64] { R346 += 1, R292 += 1, R252 += 1 };
  s1 -> s4 [83, 83] { R346 += 1, R292 += 1, R252 += 1 };
  s1 -> s1 [84, 65535] { R346 += 1, R292 += 1, R252 += 1 };
  s2 -> s1 [0, 43] { R346 += 1, R292 += 1, R252 += 1 };
  s2 -> s2 [0, 65535] { R346 += 1, R292 += 1, R251 += 1, R252 += 1 };
  s2 -> s1 [45, 64] { R346 += 1, R292 += 1, R252 += 1 };
  s2 -> s4 [83, 83] { R346 += 1, R292 += 1, R252 += 1 };
  s2 -> s1 [84, 65535] { R346 += 1, R292 += 1, R252 += 1 };
  s3 -> s1 [0, 43] { R346 += 1, R292 += 1, R252 += 1 };
  s3 -> s2 [0, 65535] { R346 += 1, R292 += 1, R251 += 1, R252 += 1 };
  s3 -> s3 [0, 65535] { R346 += 1, R291 += 1, R292 += 1 };
  s3 -> s1 [45, 64] { R346 += 1, R292 += 1, R252 += 1 };
  s3 -> s4 [83, 83] { R346 += 1, R292 += 1, R252 += 1 };
  s3 -> s1 [84, 65535] { R346 += 1, R292 += 1, R252 += 1 };
  s4 -> s4 [0, 43] { R346 += 1, R292 += 1, R252 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R346 += 1 };
  s4 -> s4 [0, 65535] { R346 += 1, R292 += 1 };
  s4 -> s4 [45, 64] { R346 += 1, R292 += 1, R252 += 1 };
  s4 -> s4 [83, 65535] { R346 += 1, R292 += 1, R252 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R346 += 1 };
  accepting s4, s5, s6;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 65535] { R348 += 1, R294 += 1, R254 += 1, R3 += 1 };
  s0 -> s2 [0, 65535] { R348 += 1, R294 += 1, R253 += 1, R254 += 1 };
  s0 -> s0 [0, 65535] { R347 += 1, R348 += 1 };
  s0 -> s3 [0, 65535] { R348 += 1, R293 += 1, R294 += 1 };
  s1 -> s5 [0, 65535] { R348 += 1 };
  s1 -> s1 [0, 65535] { R348 += 1, R294 += 1, R254 += 1, R3 += 1 };
  s1 -> s6 [0, 65535] { R348 += 1, R294 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R348 += 1 };
  s2 -> s1 [0, 65535] { R348 += 1, R294 += 1, R254 += 1, R3 += 1 };
  s2 -> s2 [0, 65535] { R348 += 1, R294 += 1, R253 += 1, R254 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R348 += 1, R294 += 1, R254 += 1, R3 += 1 };
  s3 -> s2 [0, 65535] { R348 += 1, R294 += 1, R253 += 1, R254 += 1 };
  s3 -> s3 [0, 65535] { R348 += 1, R293 += 1, R294 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R348 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R348 += 1 };
  s6 -> s6 [0, 65535] { R348 += 1, R294 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_15 {
  init s0;
  s0 -> s1 [0, 57] { R350 += 1, R296 += 1, R256 += 1 };
  s0 -> s2 [0, 65535] { R350 += 1, R296 += 1, R255 += 1, R256 += 1 };
  s0 -> s3 [0, 65535] { R350 += 1, R296 += 1, R256 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R349 += 1, R350 += 1 };
  s0 -> s4 [0, 65535] { R350 += 1, R295 += 1, R296 += 1 };
  s0 -> s5 [58, 58] { R350 += 1, R296 += 1, R256 += 1 };
  s0 -> s1 [59, 65535] { R350 += 1, R296 += 1, R256 += 1 };
  s1 -> s1 [0, 57] { R350 += 1, R296 += 1, R256 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R350 += 1, R296 += 1 };
  s1 -> s7 [0, 65535] { R350 += 1 };
  s1 -> s5 [58, 58] { R350 += 1, R296 += 1, R256 += 1 };
  s1 -> s1 [59, 65535] { R350 += 1, R296 += 1, R256 += 1 };
  s2 -> s1 [0, 57] { R350 += 1, R296 += 1, R256 += 1 };
  s2 -> s2 [0, 65535] { R350 += 1, R296 += 1, R255 += 1, R256 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R350 += 1, R296 += 1, R256 += 1, R12 += 1 };
  s2 -> s7 [0, 65535] { R350 += 1 };
  s2 -> s5 [58, 58] { R350 += 1, R296 += 1, R256 += 1 };
  s2 -> s1 [59, 65535] { R350 += 1, R296 += 1, R256 += 1 };
  s3 -> s1 [0, 57] { R350 += 1, R296 += 1, R256 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R350 += 1, R296 += 1, R256 += 1, R12 += 1 };
  s3 -> s7 [0, 65535] { R350 += 1 };
  s3 -> s8 [0, 65535] { R350 += 1, R296 += 1 };
  s3 -> s5 [58, 58] { R350 += 1, R296 += 1, R256 += 1 };
  s3 -> s1 [59, 65535] { R350 += 1, R296 += 1, R256 += 1 };
  s4 -> s1 [0, 57] { R350 += 1, R296 += 1, R256 += 1 };
  s4 -> s2 [0, 65535] { R350 += 1, R296 += 1, R255 += 1, R256 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s3 [0, 65535] { R350 += 1, R296 += 1, R256 += 1, R12 += 1 };
  s4 -> s4 [0, 65535] { R350 += 1, R295 += 1, R296 += 1 };
  s4 -> s5 [58, 58] { R350 += 1, R296 += 1, R256 += 1 };
  s4 -> s1 [59, 65535] { R350 += 1, R296 += 1, R256 += 1 };
  s5 -> s5 [0, 65535] { R350 += 1, R296 += 1, R256 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R350 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R350 += 1 };
  s8 -> s8 [0, 65535] { R350 += 1, R296 += 1 };
  accepting s3, s4, s8, s2, s6, s1, s7, s0;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 82] { R352 += 1, R298 += 1, R258 += 1 };
  s0 -> s0 [0, 65535] { R351 += 1, R352 += 1 };
  s0 -> s2 [0, 65535] { R352 += 1, R298 += 1, R257 += 1, R258 += 1 };
  s0 -> s3 [0, 65535] { R352 += 1, R298 += 1, R258 += 1, R13 += 1 };
  s0 -> s4 [0, 65535] { R352 += 1, R297 += 1, R298 += 1 };
  s0 -> s5 [83, 83] { R352 += 1, R298 += 1, R258 += 1 };
  s0 -> s1 [84, 65535] { R352 += 1, R298 += 1, R258 += 1 };
  s1 -> s1 [0, 82] { R352 += 1, R298 += 1, R258 += 1 };
  s1 -> s7 [0, 65535] { R352 += 1 };
  s1 -> s1 [0, 65535] { R352 += 1, R298 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s5 [83, 83] { R352 += 1, R298 += 1, R258 += 1 };
  s1 -> s1 [84, 65535] { R352 += 1, R298 += 1, R258 += 1 };
  s2 -> s1 [0, 82] { R352 += 1, R298 += 1, R258 += 1 };
  s2 -> s7 [0, 65535] { R352 += 1 };
  s2 -> s2 [0, 65535] { R352 += 1, R298 += 1, R257 += 1, R258 += 1 };
  s2 -> s3 [0, 65535] { R352 += 1, R298 += 1, R258 += 1, R13 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s5 [83, 83] { R352 += 1, R298 += 1, R258 += 1 };
  s2 -> s1 [84, 65535] { R352 += 1, R298 += 1, R258 += 1 };
  s3 -> s1 [0, 82] { R352 += 1, R298 += 1, R258 += 1 };
  s3 -> s7 [0, 65535] { R352 += 1 };
  s3 -> s3 [0, 65535] { R352 += 1, R298 += 1, R258 += 1, R13 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s8 [0, 65535] { R352 += 1, R298 += 1 };
  s3 -> s5 [83, 83] { R352 += 1, R298 += 1, R258 += 1 };
  s3 -> s1 [84, 65535] { R352 += 1, R298 += 1, R258 += 1 };
  s4 -> s1 [0, 82] { R352 += 1, R298 += 1, R258 += 1 };
  s4 -> s2 [0, 65535] { R352 += 1, R298 += 1, R257 += 1, R258 += 1 };
  s4 -> s3 [0, 65535] { R352 += 1, R298 += 1, R258 += 1, R13 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R352 += 1, R297 += 1, R298 += 1 };
  s4 -> s5 [83, 83] { R352 += 1, R298 += 1, R258 += 1 };
  s4 -> s1 [84, 65535] { R352 += 1, R298 += 1, R258 += 1 };
  s5 -> s5 [0, 65535] { R352 += 1, R298 += 1, R258 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R352 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R352 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R352 += 1, R298 += 1 };
  accepting s3, s4, s8, s2, s6, s1, s7, s0;
};
automaton uri_17 {
  init s0;
  s0 -> s1 [0, 90] { R354 += 1, R300 += 1, R260 += 1, R206 += 1 };
  s0 -> s2 [0, 65535] { R354 += 1, R300 += 1, R260 += 1, R205 += 1, R206 += 1 };
  s0 -> s0 [0, 65535] { R353 += 1, R354 += 1 };
  s0 -> s3 [0, 65535] { R354 += 1, R300 += 1, R259 += 1, R260 += 1 };
  s0 -> s4 [0, 65535] { R354 += 1, R299 += 1, R300 += 1 };
  s0 -> s5 [91, 91] { R354 += 1, R300 += 1, R260 += 1, R206 += 1 };
  s0 -> s1 [92, 65535] { R354 += 1, R300 += 1, R260 += 1, R206 += 1 };
  s1 -> s9 [0, 65535] { R354 += 1, R300 += 1, R260 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s8 [0, 65535] { R354 += 1, R300 += 1 };
  s1 -> s7 [0, 65535] { R354 += 1 };
  s1 -> s1 [0, 65535] { R354 += 1, R300 += 1, R260 += 1, R206 += 1 };
  s2 -> s1 [0, 90] { R354 += 1, R300 += 1, R260 += 1, R206 += 1 };
  s2 -> s2 [0, 65535] { R354 += 1, R300 += 1, R260 += 1, R205 += 1, R206 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s8 [0, 65535] { R354 += 1, R300 += 1 };
  s2 -> s7 [0, 65535] { R354 += 1 };
  s2 -> s5 [91, 91] { R354 += 1, R300 += 1, R260 += 1, R206 += 1 };
  s2 -> s1 [92, 65535] { R354 += 1, R300 += 1, R260 += 1, R206 += 1 };
  s3 -> s1 [0, 90] { R354 += 1, R300 += 1, R260 += 1, R206 += 1 };
  s3 -> s2 [0, 65535] { R354 += 1, R300 += 1, R260 += 1, R205 += 1, R206 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R354 += 1, R300 += 1, R259 += 1, R260 += 1 };
  s3 -> s7 [0, 65535] { R354 += 1 };
  s3 -> s5 [91, 91] { R354 += 1, R300 += 1, R260 += 1, R206 += 1 };
  s3 -> s1 [92, 65535] { R354 += 1, R300 += 1, R260 += 1, R206 += 1 };
  s4 -> s1 [0, 90] { R354 += 1, R300 += 1, R260 += 1, R206 += 1 };
  s4 -> s2 [0, 65535] { R354 += 1, R300 += 1, R260 += 1, R205 += 1, R206 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s3 [0, 65535] { R354 += 1, R300 += 1, R259 += 1, R260 += 1 };
  s4 -> s4 [0, 65535] { R354 += 1, R299 += 1, R300 += 1 };
  s4 -> s5 [91, 91] { R354 += 1, R300 += 1, R260 += 1, R206 += 1 };
  s4 -> s1 [92, 65535] { R354 += 1, R300 += 1, R260 += 1, R206 += 1 };
  s5 -> s1 [0, 65535] { R354 += 1, R300 += 1, R260 += 1, R206 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R354 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R354 += 1, R300 += 1 };
  s8 -> s7 [0, 65535] { R354 += 1 };
  s9 -> s9 [0, 65535] { R354 += 1, R300 += 1, R260 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s8 [0, 65535] { R354 += 1, R300 += 1 };
  s9 -> s7 [0, 65535] { R354 += 1 };
  accepting s3, s4, s8, s2, s9, s6, s1, s7, s0;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 65535] { R356 += 1, R302 += 1, R262 += 1, R207 += 1, R208 += 1 };
  s0 -> s2 [0, 65535] { R356 += 1, R302 += 1, R262 += 1, R208 += 1, R8 += 1 };
  s0 -> s3 [0, 65535] { R356 += 1, R301 += 1, R302 += 1 };
  s0 -> s4 [0, 65535] { R356 += 1, R302 += 1, R261 += 1, R262 += 1 };
  s0 -> s0 [0, 65535] { R355 += 1, R356 += 1 };
  s1 -> s1 [0, 65535] { R356 += 1, R302 += 1, R262 += 1, R207 += 1, R208 += 1 };
  s1 -> s2 [0, 65535] { R356 += 1, R302 += 1, R262 += 1, R208 += 1, R8 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s8 [0, 65535] { R356 += 1, R302 += 1 };
  s1 -> s6 [0, 65535] { R356 += 1 };
  s2 -> s7 [0, 65535] { R356 += 1, R302 += 1, R262 += 1 };
  s2 -> s2 [0, 65535] { R356 += 1, R302 += 1, R262 += 1, R208 += 1, R8 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s8 [0, 65535] { R356 += 1, R302 += 1 };
  s2 -> s6 [0, 65535] { R356 += 1 };
  s3 -> s1 [0, 65535] { R356 += 1, R302 += 1, R262 += 1, R207 += 1, R208 += 1 };
  s3 -> s2 [0, 65535] { R356 += 1, R302 += 1, R262 += 1, R208 += 1, R8 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R356 += 1, R301 += 1, R302 += 1 };
  s3 -> s4 [0, 65535] { R356 += 1, R302 += 1, R261 += 1, R262 += 1 };
  s4 -> s1 [0, 65535] { R356 += 1, R302 += 1, R262 += 1, R207 += 1, R208 += 1 };
  s4 -> s2 [0, 65535] { R356 += 1, R302 += 1, R262 += 1, R208 += 1, R8 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R356 += 1, R302 += 1, R261 += 1, R262 += 1 };
  s4 -> s6 [0, 65535] { R356 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R356 += 1 };
  s7 -> s7 [0, 65535] { R356 += 1, R302 += 1, R262 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s8 [0, 65535] { R356 += 1, R302 += 1 };
  s7 -> s6 [0, 65535] { R356 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s8 [0, 65535] { R356 += 1, R302 += 1 };
  s8 -> s6 [0, 65535] { R356 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_19 {
  init s0;
  s0 -> s1 [0, 65535] { R358 += 1, R303 += 1, R304 += 1 };
  s0 -> s2 [0, 65535] { R358 += 1, R304 += 1, R264 += 1, R228 += 1, R200 += 1 };
  s0 -> s3 [0, 65535] { R358 += 1, R304 += 1, R264 += 1, R227 += 1, R228 += 1 };
  s0 -> s0 [0, 65535] { R357 += 1, R358 += 1 };
  s0 -> s4 [0, 65535] { R358 += 1, R304 += 1, R263 += 1, R264 += 1 };
  s1 -> s1 [0, 65535] { R358 += 1, R303 += 1, R304 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R358 += 1, R304 += 1, R264 += 1, R228 += 1, R200 += 1 };
  s1 -> s3 [0, 65535] { R358 += 1, R304 += 1, R264 += 1, R227 += 1, R228 += 1 };
  s1 -> s4 [0, 65535] { R358 += 1, R304 += 1, R263 += 1, R264 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s8 [0, 65535] { R358 += 1, R304 += 1, R264 += 1 };
  s2 -> s7 [0, 65535] { R358 += 1, R304 += 1 };
  s2 -> s2 [0, 65535] { R358 += 1, R304 += 1, R264 += 1, R228 += 1, R200 += 1 };
  s2 -> s6 [0, 65535] { R358 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s7 [0, 65535] { R358 += 1, R304 += 1 };
  s3 -> s2 [0, 65535] { R358 += 1, R304 += 1, R264 += 1, R228 += 1, R200 += 1 };
  s3 -> s3 [0, 65535] { R358 += 1, R304 += 1, R264 += 1, R227 += 1, R228 += 1 };
  s3 -> s6 [0, 65535] { R358 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R358 += 1, R304 += 1, R264 += 1, R228 += 1, R200 += 1 };
  s4 -> s3 [0, 65535] { R358 += 1, R304 += 1, R264 += 1, R227 += 1, R228 += 1 };
  s4 -> s6 [0, 65535] { R358 += 1 };
  s4 -> s4 [0, 65535] { R358 += 1, R304 += 1, R263 += 1, R264 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R358 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R358 += 1, R304 += 1 };
  s7 -> s6 [0, 65535] { R358 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s8 [0, 65535] { R358 += 1, R304 += 1, R264 += 1 };
  s8 -> s7 [0, 65535] { R358 += 1, R304 += 1 };
  s8 -> s6 [0, 65535] { R358 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 82] { R360 += 1, R306 += 1, R266 += 1, R230 += 1 };
  s0 -> s2 [0, 65535] { R360 += 1, R306 += 1, R265 += 1, R266 += 1 };
  s0 -> s3 [0, 65535] { R360 += 1, R305 += 1, R306 += 1 };
  s0 -> s0 [0, 65535] { R359 += 1, R360 += 1 };
  s0 -> s4 [0, 65535] { R360 += 1, R306 += 1, R266 += 1, R229 += 1, R230 += 1 };
  s0 -> s5 [83, 83] { R360 += 1, R306 += 1, R266 += 1, R230 += 1 };
  s0 -> s6 [83, 83] { R360 += 1, R306 += 1, R266 += 1, R230 += 1 };
  s0 -> s1 [91, 65535] { R360 += 1, R306 += 1, R266 += 1, R230 += 1 };
  s1 -> s1 [0, 82] { R360 += 1, R306 += 1, R266 += 1, R230 += 1 };
  s1 -> s7 [0, 65535] { R360 += 1 };
  s1 -> s8 [0, 65535] { R360 += 1, R306 += 1 };
  s1 -> s1 [0, 65535] { R360 += 1, R306 += 1, R266 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s5 [83, 83] { R360 += 1, R306 += 1, R266 += 1, R230 += 1 };
  s1 -> s6 [83, 83] { R360 += 1, R306 += 1, R266 += 1, R230 += 1 };
  s1 -> s1 [91, 65535] { R360 += 1, R306 += 1, R266 += 1, R230 += 1 };
  s2 -> s1 [0, 82] { R360 += 1, R306 += 1, R266 += 1, R230 += 1 };
  s2 -> s2 [0, 65535] { R360 += 1, R306 += 1, R265 += 1, R266 += 1 };
  s2 -> s7 [0, 65535] { R360 += 1 };
  s2 -> s4 [0, 65535] { R360 += 1, R306 += 1, R266 += 1, R229 += 1, R230 += 1 };
  s2 -> s9 [0, 65535];
  s2 -> s5 [83, 83] { R360 += 1, R306 += 1, R266 += 1, R230 += 1 };
  s2 -> s6 [83, 83] { R360 += 1, R306 += 1, R266 += 1, R230 += 1 };
  s2 -> s1 [91, 65535] { R360 += 1, R306 += 1, R266 += 1, R230 += 1 };
  s3 -> s1 [0, 82] { R360 += 1, R306 += 1, R266 += 1, R230 += 1 };
  s3 -> s2 [0, 65535] { R360 += 1, R306 += 1, R265 += 1, R266 += 1 };
  s3 -> s3 [0, 65535] { R360 += 1, R305 += 1, R306 += 1 };
  s3 -> s4 [0, 65535] { R360 += 1, R306 += 1, R266 += 1, R229 += 1, R230 += 1 };
  s3 -> s9 [0, 65535];
  s3 -> s5 [83, 83] { R360 += 1, R306 += 1, R266 += 1, R230 += 1 };
  s3 -> s6 [83, 83] { R360 += 1, R306 += 1, R266 += 1, R230 += 1 };
  s3 -> s1 [91, 65535] { R360 += 1, R306 += 1, R266 += 1, R230 += 1 };
  s4 -> s1 [0, 82] { R360 += 1, R306 += 1, R266 += 1, R230 += 1 };
  s4 -> s7 [0, 65535] { R360 += 1 };
  s4 -> s8 [0, 65535] { R360 += 1, R306 += 1 };
  s4 -> s4 [0, 65535] { R360 += 1, R306 += 1, R266 += 1, R229 += 1, R230 += 1 };
  s4 -> s9 [0, 65535];
  s4 -> s5 [83, 83] { R360 += 1, R306 += 1, R266 += 1, R230 += 1 };
  s4 -> s6 [83, 83] { R360 += 1, R306 += 1, R266 += 1, R230 += 1 };
  s4 -> s1 [91, 65535] { R360 += 1, R306 += 1, R266 += 1, R230 += 1 };
  s5 -> s5 [0, 83] { R360 += 1, R306 += 1, R266 += 1, R230 += 1 };
  s5 -> s7 [0, 65535] { R360 += 1 };
  s5 -> s8 [0, 65535] { R360 += 1, R306 += 1 };
  s5 -> s9 [0, 65535];
  s5 -> s5 [0, 65535] { R360 += 1, R306 += 1, R266 += 1 };
  s5 -> s5 [91, 65535] { R360 += 1, R306 += 1, R266 += 1, R230 += 1 };
  s6 -> s7 [0, 65535] { R360 += 1 };
  s6 -> s8 [0, 65535] { R360 += 1, R306 += 1 };
  s6 -> s9 [0, 65535];
  s6 -> s6 [0, 65535] { R360 += 1, R306 += 1, R266 += 1 };
  s7 -> s7 [0, 65535] { R360 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s7 [0, 65535] { R360 += 1 };
  s8 -> s8 [0, 65535] { R360 += 1, R306 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton uri_21 {
  init s0;
  s0 -> s1 [0, 82] { R362 += 1, R308 += 1, R268 += 1, R236 += 1 };
  s0 -> s2 [0, 65535] { R362 += 1, R307 += 1, R308 += 1 };
  s0 -> s3 [0, 65535] { R362 += 1, R308 += 1, R267 += 1, R268 += 1 };
  s0 -> s4 [0, 65535] { R362 += 1, R308 += 1, R268 += 1, R235 += 1, R236 += 1 };
  s0 -> s0 [0, 65535] { R361 += 1, R362 += 1 };
  s0 -> s5 [83, 83] { R362 += 1, R308 += 1, R268 += 1, R236 += 1 };
  s0 -> s1 [84, 65535] { R362 += 1, R308 += 1, R268 += 1, R236 += 1 };
  s1 -> s1 [0, 82] { R362 += 1, R308 += 1, R268 += 1, R236 += 1 };
  s1 -> s5 [83, 83] { R362 += 1, R308 += 1, R268 += 1, R236 += 1 };
  s1 -> s1 [84, 65535] { R362 += 1, R308 += 1, R268 += 1, R236 += 1 };
  s2 -> s1 [0, 82] { R362 += 1, R308 += 1, R268 += 1, R236 += 1 };
  s2 -> s2 [0, 65535] { R362 += 1, R307 += 1, R308 += 1 };
  s2 -> s3 [0, 65535] { R362 += 1, R308 += 1, R267 += 1, R268 += 1 };
  s2 -> s4 [0, 65535] { R362 += 1, R308 += 1, R268 += 1, R235 += 1, R236 += 1 };
  s2 -> s5 [83, 83] { R362 += 1, R308 += 1, R268 += 1, R236 += 1 };
  s2 -> s1 [84, 65535] { R362 += 1, R308 += 1, R268 += 1, R236 += 1 };
  s3 -> s1 [0, 82] { R362 += 1, R308 += 1, R268 += 1, R236 += 1 };
  s3 -> s3 [0, 65535] { R362 += 1, R308 += 1, R267 += 1, R268 += 1 };
  s3 -> s4 [0, 65535] { R362 += 1, R308 += 1, R268 += 1, R235 += 1, R236 += 1 };
  s3 -> s5 [83, 83] { R362 += 1, R308 += 1, R268 += 1, R236 += 1 };
  s3 -> s1 [84, 65535] { R362 += 1, R308 += 1, R268 += 1, R236 += 1 };
  s4 -> s1 [0, 82] { R362 += 1, R308 += 1, R268 += 1, R236 += 1 };
  s4 -> s4 [0, 65535] { R362 += 1, R308 += 1, R268 += 1, R235 += 1, R236 += 1 };
  s4 -> s5 [83, 83] { R362 += 1, R308 += 1, R268 += 1, R236 += 1 };
  s4 -> s1 [84, 65535] { R362 += 1, R308 += 1, R268 += 1, R236 += 1 };
  s5 -> s6 [0, 65535] { R362 += 1, R308 += 1, R268 += 1 };
  s5 -> s7 [0, 65535] { R362 += 1 };
  s5 -> s8 [0, 65535] { R362 += 1, R308 += 1 };
  s5 -> s9 [0, 65535];
  s5 -> s5 [0, 65535] { R362 += 1, R308 += 1, R268 += 1, R236 += 1 };
  s6 -> s6 [0, 65535] { R362 += 1, R308 += 1, R268 += 1 };
  s6 -> s7 [0, 65535] { R362 += 1 };
  s6 -> s8 [0, 65535] { R362 += 1, R308 += 1 };
  s6 -> s9 [0, 65535];
  s7 -> s7 [0, 65535] { R362 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s7 [0, 65535] { R362 += 1 };
  s8 -> s8 [0, 65535] { R362 += 1, R308 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  accepting s8, s5, s9, s6, s7;
};
automaton uri_22 {
  init s0;
  s0 -> s1 [0, 65535] { R364 += 1, R310 += 1, R270 += 1, R238 += 1, R2 += 1 };
  s0 -> s2 [0, 65535] { R364 += 1, R310 += 1, R269 += 1, R270 += 1 };
  s0 -> s3 [0, 65535] { R364 += 1, R309 += 1, R310 += 1 };
  s0 -> s0 [0, 65535] { R363 += 1, R364 += 1 };
  s0 -> s4 [0, 65535] { R364 += 1, R310 += 1, R270 += 1, R237 += 1, R238 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R364 += 1, R310 += 1, R270 += 1, R238 += 1, R2 += 1 };
  s1 -> s6 [0, 65535] { R364 += 1 };
  s1 -> s7 [0, 65535] { R364 += 1, R310 += 1 };
  s1 -> s8 [0, 65535] { R364 += 1, R310 += 1, R270 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R364 += 1, R310 += 1, R270 += 1, R238 += 1, R2 += 1 };
  s2 -> s6 [0, 65535] { R364 += 1 };
  s2 -> s2 [0, 65535] { R364 += 1, R310 += 1, R269 += 1, R270 += 1 };
  s2 -> s4 [0, 65535] { R364 += 1, R310 += 1, R270 += 1, R237 += 1, R238 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R364 += 1, R310 += 1, R270 += 1, R238 += 1, R2 += 1 };
  s3 -> s2 [0, 65535] { R364 += 1, R310 += 1, R269 += 1, R270 += 1 };
  s3 -> s3 [0, 65535] { R364 += 1, R309 += 1, R310 += 1 };
  s3 -> s4 [0, 65535] { R364 += 1, R310 += 1, R270 += 1, R237 += 1, R238 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R364 += 1, R310 += 1, R270 += 1, R238 += 1, R2 += 1 };
  s4 -> s6 [0, 65535] { R364 += 1 };
  s4 -> s7 [0, 65535] { R364 += 1, R310 += 1 };
  s4 -> s4 [0, 65535] { R364 += 1, R310 += 1, R270 += 1, R237 += 1, R238 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R364 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R364 += 1 };
  s7 -> s7 [0, 65535] { R364 += 1, R310 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R364 += 1 };
  s8 -> s7 [0, 65535] { R364 += 1, R310 += 1 };
  s8 -> s8 [0, 65535] { R364 += 1, R310 += 1, R270 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_23 {
  init s0;
  s0 -> s1 [0, 82] { R366 += 1, R312 += 1, R272 += 1, R240 += 1 };
  s0 -> s2 [0, 65535] { R366 += 1, R311 += 1, R312 += 1 };
  s0 -> s0 [0, 65535] { R365 += 1, R366 += 1 };
  s0 -> s3 [0, 65535] { R366 += 1, R312 += 1, R271 += 1, R272 += 1 };
  s0 -> s4 [0, 65535] { R366 += 1, R312 += 1, R272 += 1, R239 += 1, R240 += 1 };
  s0 -> s5 [0, 65535] { R366 += 1, R312 += 1, R272 += 1, R240 += 1, R9 += 1 };
  s0 -> s6 [83, 83] { R366 += 1, R312 += 1, R272 += 1, R240 += 1 };
  s0 -> s1 [84, 65535] { R366 += 1, R312 += 1, R272 += 1, R240 += 1 };
  s1 -> s1 [0, 82] { R366 += 1, R312 += 1, R272 += 1, R240 += 1 };
  s1 -> s7 [0, 65535] { R366 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s1 [0, 65535] { R366 += 1, R312 += 1, R272 += 1 };
  s1 -> s9 [0, 65535] { R366 += 1, R312 += 1 };
  s1 -> s6 [83, 83] { R366 += 1, R312 += 1, R272 += 1, R240 += 1 };
  s1 -> s1 [84, 65535] { R366 += 1, R312 += 1, R272 += 1, R240 += 1 };
  s2 -> s1 [0, 82] { R366 += 1, R312 += 1, R272 += 1, R240 += 1 };
  s2 -> s2 [0, 65535] { R366 += 1, R311 += 1, R312 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s3 [0, 65535] { R366 += 1, R312 += 1, R271 += 1, R272 += 1 };
  s2 -> s4 [0, 65535] { R366 += 1, R312 += 1, R272 += 1, R239 += 1, R240 += 1 };
  s2 -> s5 [0, 65535] { R366 += 1, R312 += 1, R272 += 1, R240 += 1, R9 += 1 };
  s2 -> s6 [83, 83] { R366 += 1, R312 += 1, R272 += 1, R240 += 1 };
  s2 -> s1 [84, 65535] { R366 += 1, R312 += 1, R272 += 1, R240 += 1 };
  s3 -> s1 [0, 82] { R366 += 1, R312 += 1, R272 += 1, R240 += 1 };
  s3 -> s7 [0, 65535] { R366 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s3 [0, 65535] { R366 += 1, R312 += 1, R271 += 1, R272 += 1 };
  s3 -> s4 [0, 65535] { R366 += 1, R312 += 1, R272 += 1, R239 += 1, R240 += 1 };
  s3 -> s5 [0, 65535] { R366 += 1, R312 += 1, R272 += 1, R240 += 1, R9 += 1 };
  s3 -> s6 [83, 83] { R366 += 1, R312 += 1, R272 += 1, R240 += 1 };
  s3 -> s1 [84, 65535] { R366 += 1, R312 += 1, R272 += 1, R240 += 1 };
  s4 -> s1 [0, 82] { R366 += 1, R312 += 1, R272 += 1, R240 += 1 };
  s4 -> s7 [0, 65535] { R366 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [0, 65535] { R366 += 1, R312 += 1, R272 += 1, R239 += 1, R240 += 1 };
  s4 -> s5 [0, 65535] { R366 += 1, R312 += 1, R272 += 1, R240 += 1, R9 += 1 };
  s4 -> s9 [0, 65535] { R366 += 1, R312 += 1 };
  s4 -> s6 [83, 83] { R366 += 1, R312 += 1, R272 += 1, R240 += 1 };
  s4 -> s1 [84, 65535] { R366 += 1, R312 += 1, R272 += 1, R240 += 1 };
  s5 -> s1 [0, 82] { R366 += 1, R312 += 1, R272 += 1, R240 += 1 };
  s5 -> s7 [0, 65535] { R366 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R366 += 1, R312 += 1, R272 += 1, R240 += 1, R9 += 1 };
  s5 -> s9 [0, 65535] { R366 += 1, R312 += 1 };
  s5 -> s10 [0, 65535] { R366 += 1, R312 += 1, R272 += 1 };
  s5 -> s6 [83, 83] { R366 += 1, R312 += 1, R272 += 1, R240 += 1 };
  s5 -> s1 [84, 65535] { R366 += 1, R312 += 1, R272 += 1, R240 += 1 };
  s6 -> s6 [0, 65535] { R366 += 1, R312 += 1, R272 += 1, R240 += 1 };
  s7 -> s7 [0, 65535] { R366 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s7 [0, 65535] { R366 += 1 };
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R366 += 1, R312 += 1 };
  s10 -> s7 [0, 65535] { R366 += 1 };
  s10 -> s8 [0, 65535];
  s10 -> s9 [0, 65535] { R366 += 1, R312 += 1 };
  s10 -> s10 [0, 65535] { R366 += 1, R312 += 1, R272 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s1, s7, s0, s10;
};
automaton uri_24 {
  init s0;
  s0 -> s1 [0, 82] { R368 += 1, R314 += 1, R274 += 1, R242 += 1, R222 += 1 };
  s0 -> s0 [0, 65535] { R367 += 1, R368 += 1 };
  s0 -> s2 [0, 65535] { R368 += 1, R313 += 1, R314 += 1 };
  s0 -> s3 [0, 65535] { R368 += 1, R314 += 1, R274 += 1, R241 += 1, R242 += 1 };
  s0 -> s4 [0, 65535] { R368 += 1, R314 += 1, R274 += 1, R242 += 1, R221 += 1, R222 += 1 };
  s0 -> s5 [0, 65535] { R368 += 1, R314 += 1, R273 += 1, R274 += 1 };
  s0 -> s1 [84, 65535] { R368 += 1, R314 += 1, R274 += 1, R242 += 1, R222 += 1 };
  s1 -> s1 [0, 82] { R368 += 1, R314 += 1, R274 += 1, R242 += 1, R222 += 1 };
  s1 -> s1 [0, 65535] { R368 += 1, R314 += 1, R274 += 1, R242 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s8 [0, 65535] { R368 += 1, R314 += 1, R274 += 1 };
  s1 -> s9 [0, 65535] { R368 += 1, R314 += 1 };
  s1 -> s7 [0, 65535] { R368 += 1 };
  s1 -> s1 [84, 65535] { R368 += 1, R314 += 1, R274 += 1, R242 += 1, R222 += 1 };
  s2 -> s1 [0, 82] { R368 += 1, R314 += 1, R274 += 1, R242 += 1, R222 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R368 += 1, R313 += 1, R314 += 1 };
  s2 -> s3 [0, 65535] { R368 += 1, R314 += 1, R274 += 1, R241 += 1, R242 += 1 };
  s2 -> s4 [0, 65535] { R368 += 1, R314 += 1, R274 += 1, R242 += 1, R221 += 1, R222 += 1 };
  s2 -> s5 [0, 65535] { R368 += 1, R314 += 1, R273 += 1, R274 += 1 };
  s2 -> s1 [84, 65535] { R368 += 1, R314 += 1, R274 += 1, R242 += 1, R222 += 1 };
  s3 -> s1 [0, 82] { R368 += 1, R314 += 1, R274 += 1, R242 += 1, R222 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R368 += 1, R314 += 1, R274 += 1, R241 += 1, R242 += 1 };
  s3 -> s9 [0, 65535] { R368 += 1, R314 += 1 };
  s3 -> s4 [0, 65535] { R368 += 1, R314 += 1, R274 += 1, R242 += 1, R221 += 1, R222 += 1 };
  s3 -> s7 [0, 65535] { R368 += 1 };
  s3 -> s1 [84, 65535] { R368 += 1, R314 += 1, R274 += 1, R242 += 1, R222 += 1 };
  s4 -> s1 [0, 82] { R368 += 1, R314 += 1, R274 += 1, R242 += 1, R222 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s8 [0, 65535] { R368 += 1, R314 += 1, R274 += 1 };
  s4 -> s9 [0, 65535] { R368 += 1, R314 += 1 };
  s4 -> s4 [0, 65535] { R368 += 1, R314 += 1, R274 += 1, R242 += 1, R221 += 1, R222 += 1 };
  s4 -> s7 [0, 65535] { R368 += 1 };
  s4 -> s1 [84, 65535] { R368 += 1, R314 += 1, R274 += 1, R242 += 1, R222 += 1 };
  s5 -> s1 [0, 82] { R368 += 1, R314 += 1, R274 += 1, R242 += 1, R222 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s3 [0, 65535] { R368 += 1, R314 += 1, R274 += 1, R241 += 1, R242 += 1 };
  s5 -> s4 [0, 65535] { R368 += 1, R314 += 1, R274 += 1, R242 += 1, R221 += 1, R222 += 1 };
  s5 -> s5 [0, 65535] { R368 += 1, R314 += 1, R273 += 1, R274 += 1 };
  s5 -> s7 [0, 65535] { R368 += 1 };
  s5 -> s1 [84, 65535] { R368 += 1, R314 += 1, R274 += 1, R242 += 1, R222 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R368 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R368 += 1, R314 += 1, R274 += 1 };
  s8 -> s9 [0, 65535] { R368 += 1, R314 += 1 };
  s8 -> s7 [0, 65535] { R368 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s9 [0, 65535] { R368 += 1, R314 += 1 };
  s9 -> s7 [0, 65535] { R368 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton uri_25 {
  init s0;
  s0 -> s1 [0, 65535] { R370 += 1, R316 += 1, R276 += 1, R244 += 1, R223 += 1, R224 += 1 };
  s0 -> s2 [0, 65535] { R370 += 1, R316 += 1, R275 += 1, R276 += 1 };
  s0 -> s3 [0, 65535] { R370 += 1, R315 += 1, R316 += 1 };
  s0 -> s4 [0, 65535] { R370 += 1, R316 += 1, R276 += 1, R244 += 1, R224 += 1, R198 += 1 };
  s0 -> s0 [0, 65535] { R369 += 1, R370 += 1 };
  s0 -> s5 [0, 65535] { R370 += 1, R316 += 1, R276 += 1, R243 += 1, R244 += 1 };
  s1 -> s9 [0, 65535] { R370 += 1, R316 += 1, R276 += 1 };
  s1 -> s6 [0, 65535] { R370 += 1, R316 += 1 };
  s1 -> s1 [0, 65535] { R370 += 1, R316 += 1, R276 += 1, R244 += 1, R223 += 1, R224 += 1 };
  s1 -> s7 [0, 65535] { R370 += 1 };
  s1 -> s4 [0, 65535] { R370 += 1, R316 += 1, R276 += 1, R244 += 1, R224 += 1, R198 += 1 };
  s1 -> s8 [0, 65535];
  s2 -> s1 [0, 65535] { R370 += 1, R316 += 1, R276 += 1, R244 += 1, R223 += 1, R224 += 1 };
  s2 -> s2 [0, 65535] { R370 += 1, R316 += 1, R275 += 1, R276 += 1 };
  s2 -> s7 [0, 65535] { R370 += 1 };
  s2 -> s4 [0, 65535] { R370 += 1, R316 += 1, R276 += 1, R244 += 1, R224 += 1, R198 += 1 };
  s2 -> s5 [0, 65535] { R370 += 1, R316 += 1, R276 += 1, R243 += 1, R244 += 1 };
  s2 -> s8 [0, 65535];
  s3 -> s1 [0, 65535] { R370 += 1, R316 += 1, R276 += 1, R244 += 1, R223 += 1, R224 += 1 };
  s3 -> s2 [0, 65535] { R370 += 1, R316 += 1, R275 += 1, R276 += 1 };
  s3 -> s3 [0, 65535] { R370 += 1, R315 += 1, R316 += 1 };
  s3 -> s4 [0, 65535] { R370 += 1, R316 += 1, R276 += 1, R244 += 1, R224 += 1, R198 += 1 };
  s3 -> s5 [0, 65535] { R370 += 1, R316 += 1, R276 += 1, R243 += 1, R244 += 1 };
  s3 -> s8 [0, 65535];
  s4 -> s9 [0, 65535] { R370 += 1, R316 += 1, R276 += 1 };
  s4 -> s6 [0, 65535] { R370 += 1, R316 += 1 };
  s4 -> s10 [0, 65535] { R370 += 1, R316 += 1, R276 += 1, R244 += 1 };
  s4 -> s7 [0, 65535] { R370 += 1 };
  s4 -> s4 [0, 65535] { R370 += 1, R316 += 1, R276 += 1, R244 += 1, R224 += 1, R198 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s6 [0, 65535] { R370 += 1, R316 += 1 };
  s5 -> s1 [0, 65535] { R370 += 1, R316 += 1, R276 += 1, R244 += 1, R223 += 1, R224 += 1 };
  s5 -> s7 [0, 65535] { R370 += 1 };
  s5 -> s4 [0, 65535] { R370 += 1, R316 += 1, R276 += 1, R244 += 1, R224 += 1, R198 += 1 };
  s5 -> s5 [0, 65535] { R370 += 1, R316 += 1, R276 += 1, R243 += 1, R244 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R370 += 1, R316 += 1 };
  s6 -> s7 [0, 65535] { R370 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R370 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R370 += 1, R316 += 1, R276 += 1 };
  s9 -> s6 [0, 65535] { R370 += 1, R316 += 1 };
  s9 -> s7 [0, 65535] { R370 += 1 };
  s9 -> s8 [0, 65535];
  s10 -> s9 [0, 65535] { R370 += 1, R316 += 1, R276 += 1 };
  s10 -> s6 [0, 65535] { R370 += 1, R316 += 1 };
  s10 -> s10 [0, 65535] { R370 += 1, R316 += 1, R276 += 1, R244 += 1 };
  s10 -> s7 [0, 65535] { R370 += 1 };
  s10 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton uri_26 {
  init s0;
  s0 -> s1 [0, 83] { R372 += 1, R318 += 1, R278 += 1, R246 += 1, R226 += 1 };
  s0 -> s2 [0, 65535] { R372 += 1, R317 += 1, R318 += 1 };
  s0 -> s3 [0, 65535] { R372 += 1, R318 += 1, R278 += 1, R246 += 1, R225 += 1, R226 += 1 };
  s0 -> s4 [0, 65535] { R372 += 1, R318 += 1, R277 += 1, R278 += 1 };
  s0 -> s5 [0, 65535] { R372 += 1, R318 += 1, R278 += 1, R245 += 1, R246 += 1 };
  s0 -> s0 [0, 65535] { R371 += 1, R372 += 1 };
  s0 -> s1 [91, 65535] { R372 += 1, R318 += 1, R278 += 1, R246 += 1, R226 += 1 };
  s1 -> s1 [0, 83] { R372 += 1, R318 += 1, R278 += 1, R246 += 1, R226 += 1 };
  s1 -> s9 [0, 65535] { R372 += 1, R318 += 1, R278 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R372 += 1, R318 += 1 };
  s1 -> s8 [0, 65535] { R372 += 1 };
  s1 -> s1 [0, 65535] { R372 += 1, R318 += 1, R278 += 1, R246 += 1 };
  s1 -> s1 [91, 65535] { R372 += 1, R318 += 1, R278 += 1, R246 += 1, R226 += 1 };
  s2 -> s1 [0, 83] { R372 += 1, R318 += 1, R278 += 1, R246 += 1, R226 += 1 };
  s2 -> s2 [0, 65535] { R372 += 1, R317 += 1, R318 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R372 += 1, R318 += 1, R278 += 1, R246 += 1, R225 += 1, R226 += 1 };
  s2 -> s4 [0, 65535] { R372 += 1, R318 += 1, R277 += 1, R278 += 1 };
  s2 -> s5 [0, 65535] { R372 += 1, R318 += 1, R278 += 1, R245 += 1, R246 += 1 };
  s2 -> s1 [91, 65535] { R372 += 1, R318 += 1, R278 += 1, R246 += 1, R226 += 1 };
  s3 -> s1 [0, 83] { R372 += 1, R318 += 1, R278 += 1, R246 += 1, R226 += 1 };
  s3 -> s9 [0, 65535] { R372 += 1, R318 += 1, R278 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R372 += 1, R318 += 1 };
  s3 -> s3 [0, 65535] { R372 += 1, R318 += 1, R278 += 1, R246 += 1, R225 += 1, R226 += 1 };
  s3 -> s8 [0, 65535] { R372 += 1 };
  s3 -> s1 [91, 65535] { R372 += 1, R318 += 1, R278 += 1, R246 += 1, R226 += 1 };
  s4 -> s1 [0, 83] { R372 += 1, R318 += 1, R278 += 1, R246 += 1, R226 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s3 [0, 65535] { R372 += 1, R318 += 1, R278 += 1, R246 += 1, R225 += 1, R226 += 1 };
  s4 -> s4 [0, 65535] { R372 += 1, R318 += 1, R277 += 1, R278 += 1 };
  s4 -> s5 [0, 65535] { R372 += 1, R318 += 1, R278 += 1, R245 += 1, R246 += 1 };
  s4 -> s8 [0, 65535] { R372 += 1 };
  s4 -> s1 [91, 65535] { R372 += 1, R318 += 1, R278 += 1, R246 += 1, R226 += 1 };
  s5 -> s1 [0, 83] { R372 += 1, R318 += 1, R278 += 1, R246 += 1, R226 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R372 += 1, R318 += 1 };
  s5 -> s3 [0, 65535] { R372 += 1, R318 += 1, R278 += 1, R246 += 1, R225 += 1, R226 += 1 };
  s5 -> s5 [0, 65535] { R372 += 1, R318 += 1, R278 += 1, R245 += 1, R246 += 1 };
  s5 -> s8 [0, 65535] { R372 += 1 };
  s5 -> s1 [91, 65535] { R372 += 1, R318 += 1, R278 += 1, R246 += 1, R226 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R372 += 1, R318 += 1 };
  s7 -> s8 [0, 65535] { R372 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R372 += 1 };
  s9 -> s9 [0, 65535] { R372 += 1, R318 += 1, R278 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s7 [0, 65535] { R372 += 1, R318 += 1 };
  s9 -> s8 [0, 65535] { R372 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton uri_27 {
  init s0;
  s0 -> s0 [0, 65535] { R373 += 1, R374 += 1 };
  s0 -> s1 [0, 65535] { R374 += 1, R320 += 1, R279 += 1, R280 += 1 };
  s0 -> s2 [0, 65535] { R374 += 1, R320 += 1, R280 += 1, R248 += 1, R232 += 1, R199 += 1 };
  s0 -> s3 [0, 65535] { R374 += 1, R319 += 1, R320 += 1 };
  s0 -> s4 [0, 65535] { R374 += 1, R320 += 1, R280 += 1, R247 += 1, R248 += 1 };
  s0 -> s5 [0, 65535] { R374 += 1, R320 += 1, R280 += 1, R248 += 1, R231 += 1, R232 += 1 };
  s1 -> s1 [0, 65535] { R374 += 1, R320 += 1, R279 += 1, R280 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s2 [0, 65535] { R374 += 1, R320 += 1, R280 += 1, R248 += 1, R232 += 1, R199 += 1 };
  s1 -> s8 [0, 65535] { R374 += 1 };
  s1 -> s4 [0, 65535] { R374 += 1, R320 += 1, R280 += 1, R247 += 1, R248 += 1 };
  s1 -> s5 [0, 65535] { R374 += 1, R320 += 1, R280 += 1, R248 += 1, R231 += 1, R232 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R374 += 1, R320 += 1, R280 += 1, R248 += 1, R232 += 1, R199 += 1 };
  s2 -> s7 [0, 65535] { R374 += 1, R320 += 1 };
  s2 -> s8 [0, 65535] { R374 += 1 };
  s2 -> s9 [0, 65535] { R374 += 1, R320 += 1, R280 += 1 };
  s2 -> s10 [0, 65535] { R374 += 1, R320 += 1, R280 += 1, R248 += 1 };
  s3 -> s1 [0, 65535] { R374 += 1, R320 += 1, R279 += 1, R280 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R374 += 1, R320 += 1, R280 += 1, R248 += 1, R232 += 1, R199 += 1 };
  s3 -> s3 [0, 65535] { R374 += 1, R319 += 1, R320 += 1 };
  s3 -> s4 [0, 65535] { R374 += 1, R320 += 1, R280 += 1, R247 += 1, R248 += 1 };
  s3 -> s5 [0, 65535] { R374 += 1, R320 += 1, R280 += 1, R248 += 1, R231 += 1, R232 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s2 [0, 65535] { R374 += 1, R320 += 1, R280 += 1, R248 += 1, R232 += 1, R199 += 1 };
  s4 -> s7 [0, 65535] { R374 += 1, R320 += 1 };
  s4 -> s8 [0, 65535] { R374 += 1 };
  s4 -> s4 [0, 65535] { R374 += 1, R320 += 1, R280 += 1, R247 += 1, R248 += 1 };
  s4 -> s5 [0, 65535] { R374 += 1, R320 += 1, R280 += 1, R248 += 1, R231 += 1, R232 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s2 [0, 65535] { R374 += 1, R320 += 1, R280 += 1, R248 += 1, R232 += 1, R199 += 1 };
  s5 -> s7 [0, 65535] { R374 += 1, R320 += 1 };
  s5 -> s8 [0, 65535] { R374 += 1 };
  s5 -> s9 [0, 65535] { R374 += 1, R320 += 1, R280 += 1 };
  s5 -> s5 [0, 65535] { R374 += 1, R320 += 1, R280 += 1, R248 += 1, R231 += 1, R232 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R374 += 1, R320 += 1 };
  s7 -> s8 [0, 65535] { R374 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R374 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s7 [0, 65535] { R374 += 1, R320 += 1 };
  s9 -> s8 [0, 65535] { R374 += 1 };
  s9 -> s9 [0, 65535] { R374 += 1, R320 += 1, R280 += 1 };
  s10 -> s6 [0, 65535];
  s10 -> s7 [0, 65535] { R374 += 1, R320 += 1 };
  s10 -> s8 [0, 65535] { R374 += 1 };
  s10 -> s9 [0, 65535] { R374 += 1, R320 += 1, R280 += 1 };
  s10 -> s10 [0, 65535] { R374 += 1, R320 += 1, R280 += 1, R248 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton uri_28 {
  init s0;
  s0 -> s1 [0, 82] { R376 += 1, R322 += 1, R282 += 1, R250 += 1, R234 += 1 };
  s0 -> s2 [0, 65535] { R376 += 1, R321 += 1, R322 += 1 };
  s0 -> s3 [0, 65535] { R376 += 1, R322 += 1, R282 += 1, R249 += 1, R250 += 1 };
  s0 -> s0 [0, 65535] { R375 += 1, R376 += 1 };
  s0 -> s4 [0, 65535] { R376 += 1, R322 += 1, R282 += 1, R250 += 1, R233 += 1, R234 += 1 };
  s0 -> s5 [0, 65535] { R376 += 1, R322 += 1, R281 += 1, R282 += 1 };
  s0 -> s6 [83, 83] { R376 += 1, R322 += 1, R282 += 1, R250 += 1, R234 += 1 };
  s0 -> s7 [83, 83] { R376 += 1, R322 += 1, R282 += 1, R250 += 1, R234 += 1 };
  s0 -> s1 [91, 65535] { R376 += 1, R322 += 1, R282 += 1, R250 += 1, R234 += 1 };
  s1 -> s1 [0, 82] { R376 += 1, R322 += 1, R282 += 1, R250 += 1, R234 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s9 [0, 65535] { R376 += 1, R322 += 1, R282 += 1 };
  s1 -> s10 [0, 65535] { R376 += 1 };
  s1 -> s1 [0, 65535] { R376 += 1, R322 += 1, R282 += 1, R250 += 1 };
  s1 -> s11 [0, 65535] { R376 += 1, R322 += 1 };
  s1 -> s6 [83, 83] { R376 += 1, R322 += 1, R282 += 1, R250 += 1, R234 += 1 };
  s1 -> s7 [83, 83] { R376 += 1, R322 += 1, R282 += 1, R250 += 1, R234 += 1 };
  s1 -> s1 [91, 65535] { R376 += 1, R322 += 1, R282 += 1, R250 += 1, R234 += 1 };
  s2 -> s1 [0, 82] { R376 += 1, R322 += 1, R282 += 1, R250 += 1, R234 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R376 += 1, R321 += 1, R322 += 1 };
  s2 -> s3 [0, 65535] { R376 += 1, R322 += 1, R282 += 1, R249 += 1, R250 += 1 };
  s2 -> s4 [0, 65535] { R376 += 1, R322 += 1, R282 += 1, R250 += 1, R233 += 1, R234 += 1 };
  s2 -> s5 [0, 65535] { R376 += 1, R322 += 1, R281 += 1, R282 += 1 };
  s2 -> s6 [83, 83] { R376 += 1, R322 += 1, R282 += 1, R250 += 1, R234 += 1 };
  s2 -> s7 [83, 83] { R376 += 1, R322 += 1, R282 += 1, R250 += 1, R234 += 1 };
  s2 -> s1 [91, 65535] { R376 += 1, R322 += 1, R282 += 1, R250 += 1, R234 += 1 };
  s3 -> s1 [0, 82] { R376 += 1, R322 += 1, R282 += 1, R250 += 1, R234 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s3 [0, 65535] { R376 += 1, R322 += 1, R282 += 1, R249 += 1, R250 += 1 };
  s3 -> s4 [0, 65535] { R376 += 1, R322 += 1, R282 += 1, R250 += 1, R233 += 1, R234 += 1 };
  s3 -> s10 [0, 65535] { R376 += 1 };
  s3 -> s11 [0, 65535] { R376 += 1, R322 += 1 };
  s3 -> s6 [83, 83] { R376 += 1, R322 += 1, R282 += 1, R250 += 1, R234 += 1 };
  s3 -> s7 [83, 83] { R376 += 1, R322 += 1, R282 += 1, R250 += 1, R234 += 1 };
  s3 -> s1 [91, 65535] { R376 += 1, R322 += 1, R282 += 1, R250 += 1, R234 += 1 };
  s4 -> s1 [0, 82] { R376 += 1, R322 += 1, R282 += 1, R250 += 1, R234 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s9 [0, 65535] { R376 += 1, R322 += 1, R282 += 1 };
  s4 -> s4 [0, 65535] { R376 += 1, R322 += 1, R282 += 1, R250 += 1, R233 += 1, R234 += 1 };
  s4 -> s10 [0, 65535] { R376 += 1 };
  s4 -> s11 [0, 65535] { R376 += 1, R322 += 1 };
  s4 -> s6 [83, 83] { R376 += 1, R322 += 1, R282 += 1, R250 += 1, R234 += 1 };
  s4 -> s7 [83, 83] { R376 += 1, R322 += 1, R282 += 1, R250 += 1, R234 += 1 };
  s4 -> s1 [91, 65535] { R376 += 1, R322 += 1, R282 += 1, R250 += 1, R234 += 1 };
  s5 -> s1 [0, 82] { R376 += 1, R322 += 1, R282 += 1, R250 += 1, R234 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s3 [0, 65535] { R376 += 1, R322 += 1, R282 += 1, R249 += 1, R250 += 1 };
  s5 -> s4 [0, 65535] { R376 += 1, R322 += 1, R282 += 1, R250 += 1, R233 += 1, R234 += 1 };
  s5 -> s10 [0, 65535] { R376 += 1 };
  s5 -> s5 [0, 65535] { R376 += 1, R322 += 1, R281 += 1, R282 += 1 };
  s5 -> s6 [83, 83] { R376 += 1, R322 += 1, R282 += 1, R250 += 1, R234 += 1 };
  s5 -> s7 [83, 83] { R376 += 1, R322 += 1, R282 += 1, R250 += 1, R234 += 1 };
  s5 -> s1 [91, 65535] { R376 += 1, R322 += 1, R282 += 1, R250 += 1, R234 += 1 };
  s6 -> s6 [0, 65535] { R376 += 1, R322 += 1, R282 += 1, R250 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [0, 65535] { R376 += 1, R322 += 1, R282 += 1 };
  s6 -> s10 [0, 65535] { R376 += 1 };
  s6 -> s11 [0, 65535] { R376 += 1, R322 += 1 };
  s7 -> s7 [0, 83] { R376 += 1, R322 += 1, R282 += 1, R250 += 1, R234 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R376 += 1, R322 += 1, R282 += 1 };
  s7 -> s10 [0, 65535] { R376 += 1 };
  s7 -> s7 [0, 65535] { R376 += 1, R322 += 1, R282 += 1, R250 += 1 };
  s7 -> s11 [0, 65535] { R376 += 1, R322 += 1 };
  s7 -> s7 [91, 65535] { R376 += 1, R322 += 1, R282 += 1, R250 += 1, R234 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R376 += 1, R322 += 1, R282 += 1 };
  s9 -> s10 [0, 65535] { R376 += 1 };
  s9 -> s11 [0, 65535] { R376 += 1, R322 += 1 };
  s10 -> s8 [0, 65535];
  s10 -> s10 [0, 65535] { R376 += 1 };
  s11 -> s8 [0, 65535];
  s11 -> s10 [0, 65535] { R376 += 1 };
  s11 -> s11 [0, 65535] { R376 += 1, R322 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10, s11;
};
};
synchronised {  // Automata constraining c11
automaton c11_0 {
  init s0;
  s0 -> s1 [115, 115];
  accepting s1;
};
};
constraint R3 = R250 && R4 = R282 && R5 = R220 && R6 = R376 && R17 = 0 && R18 = R322 && R205 = 0 && R206 = 1 && R207 = 0 && R208 = 1 && R209 = 0 && R210 = 2 && R211 = 0 && R212 = 2 && R213 - R322 = 1 && R214 = R220 && R215 - R322 = 1 && R216 = R220 && R217 - R322 = 1 && R218 = R220 && R219 - R322 = 1 && R235 = 0 && R236 = R250 && R237 = 0 && R238 = R250 && R239 = 0 && R240 = R250 && R241 = 0 && R242 = R250 && R243 = 0 && R244 = R250 && R245 = 0 && R246 = R250 && R247 = 0 && R248 = R250 && R249 = 0 && R251 = 3 && R252 = R282 && R253 = 3 && R254 = R282 && R255 = 3 && R256 = R282 && R257 = 3 && R258 = R282 && R259 = 3 && R260 = R282 && R261 = 3 && R262 = R282 && R263 = 3 && R264 = R282 && R265 = 3 && R266 = R282 && R267 = 3 && R268 = R282 && R269 = 3 && R270 = R282 && R271 = 3 && R272 = R282 && R273 = 3 && R274 = R282 && R275 = 3 && R276 = R282 && R277 = 3 && R278 = R282 && R279 = 3 && R280 = R282 && R281 = 3 && R283 = 0 && R284 = R322 && R285 = 0 && R286 = R322 && R287 = 0 && R288 = R322 && R289 = 0 && R290 = R322 && R291 = 0 && R292 = R322 && R293 = 0 && R294 = R322 && R295 = 0 && R296 = R322 && R297 = 0 && R298 = R322 && R299 = 0 && R300 = R322 && R301 = 0 && R302 = R322 && R303 = 0 && R304 = R322 && R305 = 0 && R306 = R322 && R307 = 0 && R308 = R322 && R309 = 0 && R310 = R322 && R311 = 0 && R312 = R322 && R313 = 0 && R314 = R322 && R315 = 0 && R316 = R322 && R317 = 0 && R318 = R322 && R319 = 0 && R320 = R322 && R321 = 0 && R323 = 10 && R324 = R376 && R325 = 10 && R326 = R376 && R327 = 10 && R328 = R376 && R329 = 10 && R330 = R376 && R331 = 10 && R332 = R376 && R333 = 10 && R334 = R376 && R335 = 10 && R336 = R376 && R337 = 10 && R338 = R376 && R339 = 10 && R340 = R376 && R341 = 10 && R342 = R376 && R343 = 10 && R344 = R376 && R345 = 10 && R346 = R376 && R347 = 10 && R348 = R376 && R349 = 10 && R350 = R376 && R351 = 10 && R352 = R376 && R353 = 10 && R354 = R376 && R355 = 10 && R356 = R376 && R357 = 10 && R358 = R376 && R359 = 10 && R360 = R376 && R361 = 10 && R362 = R376 && R363 = 10 && R364 = R376 && R365 = 10 && R366 = R376 && R367 = 10 && R368 = R376 && R369 = 10 && R370 = R376 && R371 = 10 && R372 = R376 && R373 = 10 && R374 = R376 && R375 = 10 && R0 != 0 && R1 != 0 && -1 < R2 && R9 < 1 && R12 < 1 && R13 < 1 && R322 < R220 && 0 < R250 && 2 < R282 && -1 < R322 && 9 < R376 && (R2 != 0 || R198 = 0 || (R221 = 0 && R222 = 0)) && (R2 != 0 || R198 = 0 || (R223 = 0 && R224 = 0)) && (R2 != 0 || R198 = 0 || (R225 = 0 && R226 = 0)) && (R201 != 0 || ((R7 != 0 || ((R1 != R202 || R202 = 1 || R202 < 0) && (R1 = R202 || R202 = 1 || R1 < 1))) && (R7 = 0 || ((R1 != R202 || R202 = 1 || R202 < 0) && (R202 != 1 || -1 < R1) && (R1 = R202 || R202 = 1))))) && (R203 != 0 || ((R7 != 0 || ((R1 != R204 || R204 = 1 || R204 < 0) && (R1 = R204 || R204 = 1 || R1 < 1))) && (R7 = 0 || ((R1 != R204 || R204 = 1 || R204 < 0) && (R204 != 1 || -1 < R1) && (R1 = R204 || R204 = 1))))) && (R221 != 0 || R2 = R222 || R2 < 1) && (R223 != 0 || R2 = R224 || R2 < 1) && (R225 != 0 || R2 = R226 || R2 < 1) && (R199 = 0 || (R231 = 0 && R232 = 0)) && (R199 = 0 || (R233 = 0 && R234 = 0)) && (R200 = 0 || (R227 = 0 && R228 = 0)) && (R200 = 0 || (R229 = 0 && R230 = 0)) && (R201 = 0 || (R7 = 0 && R1 < 0)) && (R203 = 0 || (R7 = 0 && R1 < 0)) && (R221 = 0 || R2 < 1) && (R223 = 0 || R2 < 1) && (R225 = 0 || R2 < 1);
// End of Parikh automata intersection problem
