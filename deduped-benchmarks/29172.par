// Parikh automata intersection problem, generated by OSTRICH+
counter int R0, R10, R11, R14, R17442, R17443, R17444, R17445, R17446, R17447, R17448, R17449, R17450, R17451, R17452, R17453, R17454, R17455, R17456, R17457, R17458, R17459, R17460, R17461, R17462, R17463, R17464, R17465, R17466, R17467, R17468, R17469, R17470, R17471, R17472, R17473, R17474, R17475, R17476, R17477, R17478, R17479, R17480, R17481, R17482, R17483, R17484, R17485, R17486, R17487, R17488, R17489, R17490, R17491, R17492, R17493, R17494, R17495, R17496, R17497, R17498, R17499, R17500, R17501, R17502, R17503, R17504, R17505, R17506, R17507, R17508, R17509, R17510, R17511, R17512, R17513, R17514, R17515, R17516, R17517, R17518, R17519, R17520, R17521, R17522, R17523, R17524, R17525, R17526, R17527, R17528, R17529, R17530, R17531, R17532, R17533, R17534, R17535, R17536, R17537, R17538, R17539, R17540, R17541, R17542, R17543, R17544, R17545, R17546, R17547, R17548, R17549, R17550, R17551, R17552, R17553, R17554, R17555, R17556, R17557, R17558, R17559, R17560, R17561, R17562, R17563, R17564, R17565, R17566, R17567, R17568, R17569, R17570, R17571, R17572, R17573, R17574, R17575, R17576, R17577, R17578, R17579, R17580, R17581, R17582, R17583, R17584, R17585, R17586, R17587, R17588, R17589, R17590, R17591, R17592, R17593, R17594, R17595, R17596, R17597, R17598, R17599, R17600, R17601, R17602, R17603, R18, R19, R2, R3, R4, R5, R6, R7, R8, R9;
synchronised {  // Automata constraining P67
automaton P67_0 {
  init s0;
  s0 -> s1 [122, 122];
  accepting s1;
};
};
synchronised {  // Automata constraining P81
automaton P81_0 {
  init s0;
  s0 -> s1 [119, 119];
  accepting s1;
};
};
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R7 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 45] { R17545 += 1 };
  s0 -> s0 [0, 65535] { R17544 += 1, R17545 += 1 };
  s0 -> s2 [46, 46] { R17545 += 1 };
  s0 -> s3 [47, 47] { R17545 += 1 };
  s0 -> s1 [48, 65535] { R17545 += 1 };
  s1 -> s1 [0, 45] { R17545 += 1 };
  s1 -> s2 [46, 46] { R17545 += 1 };
  s1 -> s3 [47, 47] { R17545 += 1 };
  s1 -> s1 [48, 65535] { R17545 += 1 };
  s2 -> s1 [0, 45] { R17545 += 1 };
  s2 -> s2 [46, 46] { R17545 += 1 };
  s2 -> s3 [47, 47] { R17545 += 1 };
  s2 -> s1 [48, 114] { R17545 += 1 };
  s2 -> s8 [115, 115] { R17545 += 1 };
  s2 -> s1 [116, 65535] { R17545 += 1 };
  s3 -> s3 [0, 45] { R17545 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s4 [46, 46] { R17545 += 1 };
  s3 -> s3 [47, 65535] { R17545 += 1 };
  s4 -> s3 [0, 45] { R17545 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s4 [46, 46] { R17545 += 1 };
  s4 -> s3 [47, 114] { R17545 += 1 };
  s4 -> s5 [115, 115] { R17545 += 1 };
  s4 -> s3 [116, 65535] { R17545 += 1 };
  s5 -> s3 [0, 45] { R17545 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s4 [46, 46] { R17545 += 1 };
  s5 -> s3 [47, 110] { R17545 += 1 };
  s5 -> s6 [111, 111] { R17545 += 1 };
  s5 -> s3 [112, 65535] { R17545 += 1 };
  s6 -> s3 [0, 45] { R17545 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s4 [46, 46] { R17545 += 1 };
  s6 -> s3 [47, 98] { R17545 += 1 };
  s6 -> s7 [99, 99] { R17545 += 1 };
  s6 -> s3 [100, 65535] { R17545 += 1 };
  s7 -> s3 [0, 45] { R17545 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s4 [46, 46] { R17545 += 1 };
  s7 -> s3 [47, 106] { R17545 += 1 };
  s7 -> s3 [108, 65535] { R17545 += 1 };
  s8 -> s1 [0, 45] { R17545 += 1 };
  s8 -> s2 [46, 46] { R17545 += 1 };
  s8 -> s3 [47, 47] { R17545 += 1 };
  s8 -> s1 [48, 110] { R17545 += 1 };
  s8 -> s9 [111, 111] { R17545 += 1 };
  s8 -> s1 [112, 65535] { R17545 += 1 };
  s9 -> s1 [0, 45] { R17545 += 1 };
  s9 -> s2 [46, 46] { R17545 += 1 };
  s9 -> s3 [47, 47] { R17545 += 1 };
  s9 -> s1 [48, 98] { R17545 += 1 };
  s9 -> s10 [99, 99] { R17545 += 1 };
  s9 -> s1 [100, 65535] { R17545 += 1 };
  s10 -> s1 [0, 45] { R17545 += 1 };
  s10 -> s2 [46, 46] { R17545 += 1 };
  s10 -> s3 [47, 47] { R17545 += 1 };
  s10 -> s1 [48, 106] { R17545 += 1 };
  s10 -> s1 [108, 65535] { R17545 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_3 {
  init s0;
  s0 -> s0 [0, 65535] { R17546 += 1, R17547 += 1 };
  s0 -> s1 [0, 65535] { R17547 += 1, R6 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R17547 += 1, R6 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s1 [0, 46] { R17549 += 1, R19 += 1 };
  s0 -> s0 [0, 65535] { R17548 += 1, R17549 += 1 };
  s0 -> s2 [0, 65535] { R17549 += 1, R18 += 1, R19 += 1 };
  s0 -> s3 [47, 47] { R17549 += 1 };
  s0 -> s1 [48, 65535] { R17549 += 1, R19 += 1 };
  s1 -> s1 [0, 46] { R17549 += 1, R19 += 1 };
  s1 -> s3 [47, 47] { R17549 += 1 };
  s1 -> s1 [48, 65535] { R17549 += 1, R19 += 1 };
  s2 -> s1 [0, 46] { R17549 += 1, R19 += 1 };
  s2 -> s2 [0, 65535] { R17549 += 1, R18 += 1, R19 += 1 };
  s2 -> s3 [47, 47] { R17549 += 1 };
  s2 -> s1 [48, 65535] { R17549 += 1, R19 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R17549 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 36] { R17551 += 1, R17485 += 1 };
  s0 -> s2 [0, 65535] { R17551 += 1, R17484 += 1, R17485 += 1 };
  s0 -> s0 [0, 65535] { R17550 += 1, R17551 += 1 };
  s0 -> s1 [38, 42] { R17551 += 1, R17485 += 1 };
  s0 -> s1 [44, 45] { R17551 += 1, R17485 += 1 };
  s0 -> s1 [47, 62] { R17551 += 1, R17485 += 1 };
  s0 -> s1 [64, 65535] { R17551 += 1, R17485 += 1 };
  s1 -> s1 [0, 36] { R17551 += 1, R17485 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R17551 += 1 };
  s1 -> s1 [38, 42] { R17551 += 1, R17485 += 1 };
  s1 -> s1 [44, 45] { R17551 += 1, R17485 += 1 };
  s1 -> s1 [47, 62] { R17551 += 1, R17485 += 1 };
  s1 -> s1 [64, 65535] { R17551 += 1, R17485 += 1 };
  s2 -> s1 [0, 36] { R17551 += 1, R17485 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R17551 += 1, R17484 += 1, R17485 += 1 };
  s2 -> s1 [38, 42] { R17551 += 1, R17485 += 1 };
  s2 -> s1 [44, 45] { R17551 += 1, R17485 += 1 };
  s2 -> s1 [47, 62] { R17551 += 1, R17485 += 1 };
  s2 -> s1 [64, 65535] { R17551 += 1, R17485 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_6 {
  init s0;
  s0 -> s0 [0, 65535] { R17552 += 1, R17553 += 1 };
  s0 -> s1 [0, 65535] { R17553 += 1, R17487 += 1, R4 += 1 };
  s0 -> s2 [0, 65535] { R17553 += 1, R17486 += 1, R17487 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R17553 += 1, R17487 += 1, R4 += 1 };
  s1 -> s4 [0, 65535] { R17553 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R17553 += 1, R17487 += 1, R4 += 1 };
  s2 -> s2 [0, 65535] { R17553 += 1, R17486 += 1, R17487 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R17553 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_7 {
  init s0;
  s0 -> s1 [0, 62] { R17555 += 1, R17489 += 1, R17451 += 1 };
  s0 -> s2 [0, 65535] { R17555 += 1, R17488 += 1, R17489 += 1 };
  s0 -> s3 [0, 65535] { R17555 += 1, R17489 += 1, R17450 += 1, R17451 += 1 };
  s0 -> s0 [0, 65535] { R17554 += 1, R17555 += 1 };
  s0 -> s4 [63, 63] { R17555 += 1, R17489 += 1, R17451 += 1 };
  s0 -> s1 [64, 65535] { R17555 += 1, R17489 += 1, R17451 += 1 };
  s1 -> s7 [0, 65535] { R17555 += 1, R17489 += 1 };
  s1 -> s1 [0, 65535] { R17555 += 1, R17489 += 1, R17451 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R17555 += 1 };
  s2 -> s1 [0, 62] { R17555 += 1, R17489 += 1, R17451 += 1 };
  s2 -> s2 [0, 65535] { R17555 += 1, R17488 += 1, R17489 += 1 };
  s2 -> s3 [0, 65535] { R17555 += 1, R17489 += 1, R17450 += 1, R17451 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s4 [63, 63] { R17555 += 1, R17489 += 1, R17451 += 1 };
  s2 -> s1 [64, 65535] { R17555 += 1, R17489 += 1, R17451 += 1 };
  s3 -> s1 [0, 62] { R17555 += 1, R17489 += 1, R17451 += 1 };
  s3 -> s3 [0, 65535] { R17555 += 1, R17489 += 1, R17450 += 1, R17451 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R17555 += 1 };
  s3 -> s4 [63, 63] { R17555 += 1, R17489 += 1, R17451 += 1 };
  s3 -> s1 [64, 65535] { R17555 += 1, R17489 += 1, R17451 += 1 };
  s4 -> s1 [0, 65535] { R17555 += 1, R17489 += 1, R17451 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R17555 += 1 };
  s7 -> s7 [0, 65535] { R17555 += 1, R17489 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R17555 += 1 };
  accepting s3, s5, s2, s6, s1, s7, s0;
};
automaton uri_8 {
  init s0;
  s0 -> s0 [0, 65535] { R17556 += 1, R17557 += 1 };
  s0 -> s1 [0, 65535] { R17557 += 1, R17491 += 1, R17452 += 1, R17453 += 1 };
  s0 -> s2 [0, 65535] { R17557 += 1, R17490 += 1, R17491 += 1 };
  s0 -> s3 [0, 65535] { R17557 += 1, R17491 += 1, R17453 += 1, R9 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R17557 += 1, R17491 += 1, R17452 += 1, R17453 += 1 };
  s1 -> s5 [0, 65535] { R17557 += 1 };
  s1 -> s3 [0, 65535] { R17557 += 1, R17491 += 1, R17453 += 1, R9 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R17557 += 1, R17491 += 1, R17452 += 1, R17453 += 1 };
  s2 -> s2 [0, 65535] { R17557 += 1, R17490 += 1, R17491 += 1 };
  s2 -> s3 [0, 65535] { R17557 += 1, R17491 += 1, R17453 += 1, R9 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R17557 += 1 };
  s3 -> s6 [0, 65535] { R17557 += 1, R17491 += 1 };
  s3 -> s3 [0, 65535] { R17557 += 1, R17491 += 1, R17453 += 1, R9 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R17557 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R17557 += 1 };
  s6 -> s6 [0, 65535] { R17557 += 1, R17491 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_9 {
  init s0;
  s0 -> s1 [0, 63] { R17559 += 1, R17499 += 1 };
  s0 -> s2 [0, 65535] { R17559 += 1, R17498 += 1, R17499 += 1 };
  s0 -> s0 [0, 65535] { R17558 += 1, R17559 += 1 };
  s0 -> s3 [64, 64] { R17559 += 1, R17499 += 1 };
  s0 -> s1 [65, 65535] { R17559 += 1, R17499 += 1 };
  s1 -> s1 [0, 63] { R17559 += 1, R17499 += 1 };
  s1 -> s3 [64, 64] { R17559 += 1, R17499 += 1 };
  s1 -> s1 [65, 65535] { R17559 += 1, R17499 += 1 };
  s2 -> s1 [0, 63] { R17559 += 1, R17499 += 1 };
  s2 -> s2 [0, 65535] { R17559 += 1, R17498 += 1, R17499 += 1 };
  s2 -> s3 [64, 64] { R17559 += 1, R17499 += 1 };
  s2 -> s1 [65, 65535] { R17559 += 1, R17499 += 1 };
  s3 -> s4 [0, 65535] { R17559 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R17559 += 1, R17499 += 1 };
  s4 -> s4 [0, 65535] { R17559 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5;
};
automaton uri_10 {
  init s0;
  s0 -> s1 [0, 65535] { R17561 += 1, R17500 += 1, R17501 += 1 };
  s0 -> s0 [0, 65535] { R17560 += 1, R17561 += 1 };
  s0 -> s2 [0, 65535] { R17561 += 1, R17501 += 1, R5 += 1 };
  s1 -> s1 [0, 65535] { R17561 += 1, R17500 += 1, R17501 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R17561 += 1, R17501 += 1, R5 += 1 };
  s2 -> s3 [0, 65535] { R17561 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R17561 += 1, R17501 += 1, R5 += 1 };
  s3 -> s3 [0, 65535] { R17561 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_11 {
  init s0;
  s0 -> s1 [0, 86] { R17563 += 1, R17503 += 1 };
  s0 -> s2 [0, 65535] { R17563 += 1, R17503 += 1, R11 += 1 };
  s0 -> s0 [0, 65535] { R17562 += 1, R17563 += 1 };
  s0 -> s3 [0, 65535] { R17563 += 1, R17502 += 1, R17503 += 1 };
  s0 -> s4 [87, 87] { R17563 += 1, R17503 += 1 };
  s0 -> s1 [88, 65535] { R17563 += 1, R17503 += 1 };
  s1 -> s1 [0, 86] { R17563 += 1, R17503 += 1 };
  s1 -> s1 [0, 65535] { R17563 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s4 [87, 87] { R17563 += 1, R17503 += 1 };
  s1 -> s1 [88, 65535] { R17563 += 1, R17503 += 1 };
  s2 -> s1 [0, 86] { R17563 += 1, R17503 += 1 };
  s2 -> s6 [0, 65535] { R17563 += 1 };
  s2 -> s2 [0, 65535] { R17563 += 1, R17503 += 1, R11 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s4 [87, 87] { R17563 += 1, R17503 += 1 };
  s2 -> s1 [88, 65535] { R17563 += 1, R17503 += 1 };
  s3 -> s1 [0, 86] { R17563 += 1, R17503 += 1 };
  s3 -> s2 [0, 65535] { R17563 += 1, R17503 += 1, R11 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R17563 += 1, R17502 += 1, R17503 += 1 };
  s3 -> s4 [87, 87] { R17563 += 1, R17503 += 1 };
  s3 -> s1 [88, 65535] { R17563 += 1, R17503 += 1 };
  s4 -> s4 [0, 65535] { R17563 += 1, R17503 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R17563 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s5, s2, s6, s1, s0;
};
automaton uri_12 {
  init s0;
  s0 -> s1 [0, 89] { R17565 += 1, R17505 += 1 };
  s0 -> s0 [0, 65535] { R17564 += 1, R17565 += 1 };
  s0 -> s2 [0, 65535] { R17565 += 1, R17504 += 1, R17505 += 1 };
  s0 -> s3 [0, 65535] { R17565 += 1, R17505 += 1, R14 += 1 };
  s0 -> s4 [90, 90] { R17565 += 1, R17505 += 1 };
  s0 -> s1 [91, 65535] { R17565 += 1, R17505 += 1 };
  s1 -> s1 [0, 89] { R17565 += 1, R17505 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R17565 += 1 };
  s1 -> s4 [90, 90] { R17565 += 1, R17505 += 1 };
  s1 -> s1 [91, 65535] { R17565 += 1, R17505 += 1 };
  s2 -> s1 [0, 89] { R17565 += 1, R17505 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R17565 += 1, R17504 += 1, R17505 += 1 };
  s2 -> s3 [0, 65535] { R17565 += 1, R17505 += 1, R14 += 1 };
  s2 -> s4 [90, 90] { R17565 += 1, R17505 += 1 };
  s2 -> s1 [91, 65535] { R17565 += 1, R17505 += 1 };
  s3 -> s1 [0, 89] { R17565 += 1, R17505 += 1 };
  s3 -> s5 [0, 65535] { R17565 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R17565 += 1, R17505 += 1, R14 += 1 };
  s3 -> s4 [90, 90] { R17565 += 1, R17505 += 1 };
  s3 -> s1 [91, 65535] { R17565 += 1, R17505 += 1 };
  s4 -> s4 [0, 65535] { R17565 += 1, R17505 += 1 };
  s5 -> s5 [0, 65535] { R17565 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s5, s2, s6, s1, s0;
};
automaton uri_13 {
  init s0;
  s0 -> s1 [0, 36] { R17567 += 1, R17507 += 1, R17455 += 1 };
  s0 -> s0 [0, 65535] { R17566 += 1, R17567 += 1 };
  s0 -> s2 [0, 65535] { R17567 += 1, R17506 += 1, R17507 += 1 };
  s0 -> s3 [0, 65535] { R17567 += 1, R17507 += 1, R17454 += 1, R17455 += 1 };
  s0 -> s1 [38, 42] { R17567 += 1, R17507 += 1, R17455 += 1 };
  s0 -> s1 [44, 57] { R17567 += 1, R17507 += 1, R17455 += 1 };
  s0 -> s1 [59, 63] { R17567 += 1, R17507 += 1, R17455 += 1 };
  s0 -> s1 [65, 65535] { R17567 += 1, R17507 += 1, R17455 += 1 };
  s1 -> s1 [0, 36] { R17567 += 1, R17507 += 1, R17455 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R17567 += 1 };
  s1 -> s1 [0, 65535] { R17567 += 1, R17507 += 1 };
  s1 -> s1 [38, 42] { R17567 += 1, R17507 += 1, R17455 += 1 };
  s1 -> s1 [44, 57] { R17567 += 1, R17507 += 1, R17455 += 1 };
  s1 -> s1 [59, 63] { R17567 += 1, R17507 += 1, R17455 += 1 };
  s1 -> s1 [65, 65535] { R17567 += 1, R17507 += 1, R17455 += 1 };
  s2 -> s1 [0, 36] { R17567 += 1, R17507 += 1, R17455 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R17567 += 1, R17506 += 1, R17507 += 1 };
  s2 -> s3 [0, 65535] { R17567 += 1, R17507 += 1, R17454 += 1, R17455 += 1 };
  s2 -> s1 [38, 42] { R17567 += 1, R17507 += 1, R17455 += 1 };
  s2 -> s1 [44, 57] { R17567 += 1, R17507 += 1, R17455 += 1 };
  s2 -> s1 [59, 63] { R17567 += 1, R17507 += 1, R17455 += 1 };
  s2 -> s1 [65, 65535] { R17567 += 1, R17507 += 1, R17455 += 1 };
  s3 -> s1 [0, 36] { R17567 += 1, R17507 += 1, R17455 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R17567 += 1 };
  s3 -> s3 [0, 65535] { R17567 += 1, R17507 += 1, R17454 += 1, R17455 += 1 };
  s3 -> s1 [38, 42] { R17567 += 1, R17507 += 1, R17455 += 1 };
  s3 -> s1 [44, 57] { R17567 += 1, R17507 += 1, R17455 += 1 };
  s3 -> s1 [59, 63] { R17567 += 1, R17507 += 1, R17455 += 1 };
  s3 -> s1 [65, 65535] { R17567 += 1, R17507 += 1, R17455 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R17567 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 65535] { R17569 += 1, R17509 += 1, R17456 += 1, R17457 += 1 };
  s0 -> s0 [0, 65535] { R17568 += 1, R17569 += 1 };
  s0 -> s2 [0, 65535] { R17569 += 1, R17509 += 1, R17457 += 1, R3 += 1 };
  s0 -> s3 [0, 65535] { R17569 += 1, R17508 += 1, R17509 += 1 };
  s1 -> s1 [0, 65535] { R17569 += 1, R17509 += 1, R17456 += 1, R17457 += 1 };
  s1 -> s2 [0, 65535] { R17569 += 1, R17509 += 1, R17457 += 1, R3 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R17569 += 1 };
  s2 -> s5 [0, 65535] { R17569 += 1, R17509 += 1 };
  s2 -> s2 [0, 65535] { R17569 += 1, R17509 += 1, R17457 += 1, R3 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s6 [0, 65535] { R17569 += 1 };
  s3 -> s1 [0, 65535] { R17569 += 1, R17509 += 1, R17456 += 1, R17457 += 1 };
  s3 -> s2 [0, 65535] { R17569 += 1, R17509 += 1, R17457 += 1, R3 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R17569 += 1, R17508 += 1, R17509 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R17569 += 1, R17509 += 1 };
  s5 -> s4 [0, 65535];
  s5 -> s6 [0, 65535] { R17569 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R17569 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_15 {
  init s0;
  s0 -> s1 [0, 42] { R17571 += 1, R17511 += 1, R17459 += 1 };
  s0 -> s2 [0, 65535] { R17571 += 1, R17511 += 1, R17458 += 1, R17459 += 1 };
  s0 -> s3 [0, 65535] { R17571 += 1, R17510 += 1, R17511 += 1 };
  s0 -> s0 [0, 65535] { R17570 += 1, R17571 += 1 };
  s0 -> s4 [43, 43] { R17571 += 1, R17511 += 1, R17459 += 1 };
  s0 -> s1 [44, 57] { R17571 += 1, R17511 += 1, R17459 += 1 };
  s0 -> s1 [59, 63] { R17571 += 1, R17511 += 1, R17459 += 1 };
  s0 -> s1 [65, 65535] { R17571 += 1, R17511 += 1, R17459 += 1 };
  s1 -> s1 [0, 42] { R17571 += 1, R17511 += 1, R17459 += 1 };
  s1 -> s4 [43, 43] { R17571 += 1, R17511 += 1, R17459 += 1 };
  s1 -> s1 [44, 57] { R17571 += 1, R17511 += 1, R17459 += 1 };
  s1 -> s1 [59, 63] { R17571 += 1, R17511 += 1, R17459 += 1 };
  s1 -> s1 [65, 65535] { R17571 += 1, R17511 += 1, R17459 += 1 };
  s2 -> s1 [0, 42] { R17571 += 1, R17511 += 1, R17459 += 1 };
  s2 -> s2 [0, 65535] { R17571 += 1, R17511 += 1, R17458 += 1, R17459 += 1 };
  s2 -> s4 [43, 43] { R17571 += 1, R17511 += 1, R17459 += 1 };
  s2 -> s1 [44, 57] { R17571 += 1, R17511 += 1, R17459 += 1 };
  s2 -> s1 [59, 63] { R17571 += 1, R17511 += 1, R17459 += 1 };
  s2 -> s1 [65, 65535] { R17571 += 1, R17511 += 1, R17459 += 1 };
  s3 -> s1 [0, 42] { R17571 += 1, R17511 += 1, R17459 += 1 };
  s3 -> s2 [0, 65535] { R17571 += 1, R17511 += 1, R17458 += 1, R17459 += 1 };
  s3 -> s3 [0, 65535] { R17571 += 1, R17510 += 1, R17511 += 1 };
  s3 -> s4 [43, 43] { R17571 += 1, R17511 += 1, R17459 += 1 };
  s3 -> s1 [44, 57] { R17571 += 1, R17511 += 1, R17459 += 1 };
  s3 -> s1 [59, 63] { R17571 += 1, R17511 += 1, R17459 += 1 };
  s3 -> s1 [65, 65535] { R17571 += 1, R17511 += 1, R17459 += 1 };
  s4 -> s4 [0, 57] { R17571 += 1, R17511 += 1, R17459 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R17571 += 1 };
  s4 -> s4 [0, 65535] { R17571 += 1, R17511 += 1 };
  s4 -> s4 [59, 63] { R17571 += 1, R17511 += 1, R17459 += 1 };
  s4 -> s4 [65, 65535] { R17571 += 1, R17511 += 1, R17459 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R17571 += 1 };
  accepting s4, s5, s6;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 65535] { R17573 += 1, R17513 += 1, R17461 += 1, R0 += 1 };
  s0 -> s0 [0, 65535] { R17572 += 1, R17573 += 1 };
  s0 -> s2 [0, 65535] { R17573 += 1, R17512 += 1, R17513 += 1 };
  s0 -> s3 [0, 65535] { R17573 += 1, R17513 += 1, R17460 += 1, R17461 += 1 };
  s1 -> s1 [0, 65535] { R17573 += 1, R17513 += 1, R17461 += 1, R0 += 1 };
  s1 -> s4 [0, 65535] { R17573 += 1 };
  s1 -> s6 [0, 65535] { R17573 += 1, R17513 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R17573 += 1, R17513 += 1, R17461 += 1, R0 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R17573 += 1, R17512 += 1, R17513 += 1 };
  s2 -> s3 [0, 65535] { R17573 += 1, R17513 += 1, R17460 += 1, R17461 += 1 };
  s3 -> s1 [0, 65535] { R17573 += 1, R17513 += 1, R17461 += 1, R0 += 1 };
  s3 -> s4 [0, 65535] { R17573 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R17573 += 1, R17513 += 1, R17460 += 1, R17461 += 1 };
  s4 -> s4 [0, 65535] { R17573 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R17573 += 1 };
  s6 -> s6 [0, 65535] { R17573 += 1, R17513 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_17 {
  init s0;
  s0 -> s1 [0, 65535] { R17575 += 1, R17515 += 1, R17465 += 1, R17442 += 1 };
  s0 -> s2 [0, 65535] { R17575 += 1, R17514 += 1, R17515 += 1 };
  s0 -> s0 [0, 65535] { R17574 += 1, R17575 += 1 };
  s0 -> s3 [0, 65535] { R17575 += 1, R17515 += 1, R17464 += 1, R17465 += 1 };
  s1 -> s1 [0, 65535] { R17575 += 1, R17515 += 1, R17465 += 1, R17442 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R17575 += 1, R17515 += 1 };
  s1 -> s5 [0, 65535] { R17575 += 1 };
  s2 -> s1 [0, 65535] { R17575 += 1, R17515 += 1, R17465 += 1, R17442 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R17575 += 1, R17514 += 1, R17515 += 1 };
  s2 -> s3 [0, 65535] { R17575 += 1, R17515 += 1, R17464 += 1, R17465 += 1 };
  s3 -> s1 [0, 65535] { R17575 += 1, R17515 += 1, R17465 += 1, R17442 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R17575 += 1, R17515 += 1, R17464 += 1, R17465 += 1 };
  s3 -> s5 [0, 65535] { R17575 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R17575 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R17575 += 1, R17515 += 1 };
  s6 -> s5 [0, 65535] { R17575 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 107] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s0 -> s0 [0, 65535] { R17576 += 1, R17577 += 1 };
  s0 -> s2 [0, 65535] { R17577 += 1, R17517 += 1, R17466 += 1, R17467 += 1 };
  s0 -> s3 [0, 65535] { R17577 += 1, R17516 += 1, R17517 += 1 };
  s0 -> s4 [108, 108] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s0 -> s1 [109, 65535] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s1 -> s15 [0, 65535] { R17577 += 1, R17517 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R17577 += 1 };
  s1 -> s1 [0, 65535] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s2 -> s1 [0, 107] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R17577 += 1 };
  s2 -> s2 [0, 65535] { R17577 += 1, R17517 += 1, R17466 += 1, R17467 += 1 };
  s2 -> s4 [108, 108] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s2 -> s1 [109, 65535] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s3 -> s1 [0, 107] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R17577 += 1, R17517 += 1, R17466 += 1, R17467 += 1 };
  s3 -> s3 [0, 65535] { R17577 += 1, R17516 += 1, R17517 += 1 };
  s3 -> s4 [108, 108] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s3 -> s1 [109, 65535] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s4 -> s1 [0, 110] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R17577 += 1 };
  s4 -> s4 [0, 65535] { R17577 += 1, R17517 += 1 };
  s4 -> s7 [111, 111] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s4 -> s1 [112, 65535] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R17577 += 1 };
  s7 -> s1 [0, 98] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R17577 += 1 };
  s7 -> s7 [0, 65535] { R17577 += 1, R17517 += 1 };
  s7 -> s8 [99, 99] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s7 -> s1 [100, 65535] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s8 -> s1 [0, 96] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R17577 += 1 };
  s8 -> s8 [0, 65535] { R17577 += 1, R17517 += 1 };
  s8 -> s9 [97, 97] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s8 -> s1 [98, 65535] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s9 -> s1 [0, 107] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s9 -> s5 [0, 65535];
  s9 -> s9 [0, 65535] { R17577 += 1, R17517 += 1 };
  s9 -> s6 [0, 65535] { R17577 += 1 };
  s9 -> s10 [108, 108] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s9 -> s1 [109, 65535] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s10 -> s1 [0, 103] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s10 -> s5 [0, 65535];
  s10 -> s6 [0, 65535] { R17577 += 1 };
  s10 -> s10 [0, 65535] { R17577 += 1, R17517 += 1 };
  s10 -> s11 [104, 104] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s10 -> s1 [105, 65535] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s11 -> s1 [0, 110] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s11 -> s5 [0, 65535];
  s11 -> s6 [0, 65535] { R17577 += 1 };
  s11 -> s11 [0, 65535] { R17577 += 1, R17517 += 1 };
  s11 -> s12 [111, 111] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s11 -> s1 [112, 65535] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s12 -> s1 [0, 114] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s12 -> s5 [0, 65535];
  s12 -> s6 [0, 65535] { R17577 += 1 };
  s12 -> s12 [0, 65535] { R17577 += 1, R17517 += 1 };
  s12 -> s13 [115, 115] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s12 -> s1 [116, 65535] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s13 -> s1 [0, 115] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s13 -> s5 [0, 65535];
  s13 -> s6 [0, 65535] { R17577 += 1 };
  s13 -> s13 [0, 65535] { R17577 += 1, R17517 += 1 };
  s13 -> s14 [116, 116] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s13 -> s1 [117, 65535] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s14 -> s1 [0, 65535] { R17577 += 1, R17517 += 1, R17467 += 1 };
  s15 -> s15 [0, 65535] { R17577 += 1, R17517 += 1 };
  s15 -> s5 [0, 65535];
  s15 -> s6 [0, 65535] { R17577 += 1 };
  accepting s3, s4, s12, s8, s13, s5, s2, s9, s6, s1, s7, s0, s15, s10, s11;
};
automaton uri_19 {
  init s0;
  s0 -> s1 [0, 65535] { R17579 += 1, R17519 += 1, R17468 += 1, R17469 += 1 };
  s0 -> s0 [0, 65535] { R17578 += 1, R17579 += 1 };
  s0 -> s2 [0, 65535] { R17579 += 1, R17518 += 1, R17519 += 1 };
  s0 -> s3 [0, 65535] { R17579 += 1, R17519 += 1, R17469 += 1, R17463 += 1 };
  s1 -> s1 [0, 65535] { R17579 += 1, R17519 += 1, R17468 += 1, R17469 += 1 };
  s1 -> s5 [0, 65535] { R17579 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [0, 65535] { R17579 += 1, R17519 += 1, R17469 += 1, R17463 += 1 };
  s2 -> s1 [0, 65535] { R17579 += 1, R17519 += 1, R17468 += 1, R17469 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R17579 += 1, R17518 += 1, R17519 += 1 };
  s2 -> s3 [0, 65535] { R17579 += 1, R17519 += 1, R17469 += 1, R17463 += 1 };
  s3 -> s4 [0, 65535] { R17579 += 1, R17519 += 1 };
  s3 -> s5 [0, 65535] { R17579 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R17579 += 1, R17519 += 1, R17469 += 1, R17463 += 1 };
  s4 -> s4 [0, 65535] { R17579 += 1, R17519 += 1 };
  s4 -> s5 [0, 65535] { R17579 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R17579 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 65535] { R17581 += 1, R17520 += 1, R17521 += 1 };
  s0 -> s0 [0, 65535] { R17580 += 1, R17581 += 1 };
  s0 -> s2 [0, 65535] { R17581 += 1, R17521 += 1, R17471 += 1, R17443 += 1 };
  s0 -> s3 [0, 65535] { R17581 += 1, R17521 += 1, R17470 += 1, R17471 += 1 };
  s1 -> s1 [0, 65535] { R17581 += 1, R17520 += 1, R17521 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R17581 += 1, R17521 += 1, R17471 += 1, R17443 += 1 };
  s1 -> s3 [0, 65535] { R17581 += 1, R17521 += 1, R17470 += 1, R17471 += 1 };
  s2 -> s6 [0, 65535] { R17581 += 1, R17521 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R17581 += 1 };
  s2 -> s2 [0, 65535] { R17581 += 1, R17521 += 1, R17471 += 1, R17443 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R17581 += 1 };
  s3 -> s2 [0, 65535] { R17581 += 1, R17521 += 1, R17471 += 1, R17443 += 1 };
  s3 -> s3 [0, 65535] { R17581 += 1, R17521 += 1, R17470 += 1, R17471 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R17581 += 1 };
  s6 -> s6 [0, 65535] { R17581 += 1, R17521 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R17581 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_21 {
  init s0;
  s0 -> s1 [0, 107] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s0 -> s2 [0, 65535] { R17583 += 1, R17523 += 1, R17472 += 1, R17473 += 1 };
  s0 -> s0 [0, 65535] { R17582 += 1, R17583 += 1 };
  s0 -> s3 [0, 65535] { R17583 += 1, R17522 += 1, R17523 += 1 };
  s0 -> s4 [108, 108] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s0 -> s1 [109, 65535] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s1 -> s1 [0, 65535] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s1 -> s15 [0, 65535] { R17583 += 1, R17523 += 1 };
  s1 -> s5 [0, 65535] { R17583 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s1 [0, 107] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s2 -> s2 [0, 65535] { R17583 += 1, R17523 += 1, R17472 += 1, R17473 += 1 };
  s2 -> s5 [0, 65535] { R17583 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [108, 108] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s2 -> s1 [109, 65535] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s3 -> s1 [0, 107] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s3 -> s2 [0, 65535] { R17583 += 1, R17523 += 1, R17472 += 1, R17473 += 1 };
  s3 -> s3 [0, 65535] { R17583 += 1, R17522 += 1, R17523 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s4 [108, 108] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s3 -> s1 [109, 65535] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s4 -> s1 [0, 110] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s4 -> s4 [0, 65535] { R17583 += 1, R17523 += 1 };
  s4 -> s5 [0, 65535] { R17583 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [111, 111] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s4 -> s1 [112, 65535] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s5 -> s5 [0, 65535] { R17583 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s1 [0, 98] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s7 -> s7 [0, 65535] { R17583 += 1, R17523 += 1 };
  s7 -> s5 [0, 65535] { R17583 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s8 [99, 99] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s7 -> s1 [100, 65535] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s8 -> s1 [0, 96] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s8 -> s5 [0, 65535] { R17583 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R17583 += 1, R17523 += 1 };
  s8 -> s9 [97, 97] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s8 -> s1 [98, 65535] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s9 -> s1 [0, 107] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s9 -> s5 [0, 65535] { R17583 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s9 [0, 65535] { R17583 += 1, R17523 += 1 };
  s9 -> s10 [108, 108] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s9 -> s1 [109, 65535] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s10 -> s1 [0, 103] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s10 -> s10 [0, 65535] { R17583 += 1, R17523 += 1 };
  s10 -> s5 [0, 65535] { R17583 += 1 };
  s10 -> s6 [0, 65535];
  s10 -> s11 [104, 104] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s10 -> s1 [105, 65535] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s11 -> s1 [0, 110] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s11 -> s5 [0, 65535] { R17583 += 1 };
  s11 -> s6 [0, 65535];
  s11 -> s11 [0, 65535] { R17583 += 1, R17523 += 1 };
  s11 -> s12 [111, 111] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s11 -> s1 [112, 65535] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s12 -> s1 [0, 114] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s12 -> s12 [0, 65535] { R17583 += 1, R17523 += 1 };
  s12 -> s5 [0, 65535] { R17583 += 1 };
  s12 -> s6 [0, 65535];
  s12 -> s13 [115, 115] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s12 -> s1 [116, 65535] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s13 -> s1 [0, 115] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s13 -> s13 [0, 65535] { R17583 += 1, R17523 += 1 };
  s13 -> s5 [0, 65535] { R17583 += 1 };
  s13 -> s6 [0, 65535];
  s13 -> s14 [116, 116] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s13 -> s1 [117, 65535] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s14 -> s1 [0, 65535] { R17583 += 1, R17523 += 1, R17473 += 1 };
  s15 -> s15 [0, 65535] { R17583 += 1, R17523 += 1 };
  s15 -> s5 [0, 65535] { R17583 += 1 };
  s15 -> s6 [0, 65535];
  accepting s3, s4, s12, s8, s13, s5, s2, s9, s6, s1, s7, s0, s15, s10, s11;
};
automaton uri_22 {
  init s0;
  s0 -> s1 [0, 43] { R17585 += 1, R17525 += 1, R17475 += 1 };
  s0 -> s2 [0, 65535] { R17585 += 1, R17525 += 1, R17474 += 1, R17475 += 1 };
  s0 -> s3 [0, 65535] { R17585 += 1, R17524 += 1, R17525 += 1 };
  s0 -> s0 [0, 65535] { R17584 += 1, R17585 += 1 };
  s0 -> s1 [45, 64] { R17585 += 1, R17525 += 1, R17475 += 1 };
  s0 -> s1 [91, 65535] { R17585 += 1, R17525 += 1, R17475 += 1 };
  s1 -> s1 [0, 43] { R17585 += 1, R17525 += 1, R17475 += 1 };
  s1 -> s5 [0, 65535] { R17585 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R17585 += 1, R17525 += 1 };
  s1 -> s1 [45, 64] { R17585 += 1, R17525 += 1, R17475 += 1 };
  s1 -> s1 [91, 65535] { R17585 += 1, R17525 += 1, R17475 += 1 };
  s2 -> s1 [0, 43] { R17585 += 1, R17525 += 1, R17475 += 1 };
  s2 -> s2 [0, 65535] { R17585 += 1, R17525 += 1, R17474 += 1, R17475 += 1 };
  s2 -> s5 [0, 65535] { R17585 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [45, 64] { R17585 += 1, R17525 += 1, R17475 += 1 };
  s2 -> s1 [91, 65535] { R17585 += 1, R17525 += 1, R17475 += 1 };
  s3 -> s1 [0, 43] { R17585 += 1, R17525 += 1, R17475 += 1 };
  s3 -> s2 [0, 65535] { R17585 += 1, R17525 += 1, R17474 += 1, R17475 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R17585 += 1, R17524 += 1, R17525 += 1 };
  s3 -> s1 [45, 64] { R17585 += 1, R17525 += 1, R17475 += 1 };
  s3 -> s1 [91, 65535] { R17585 += 1, R17525 += 1, R17475 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R17585 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_23 {
  init s0;
  s0 -> s1 [0, 65535] { R17587 += 1, R17526 += 1, R17527 += 1 };
  s0 -> s2 [0, 65535] { R17587 += 1, R17527 += 1, R17477 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R17586 += 1, R17587 += 1 };
  s0 -> s3 [0, 65535] { R17587 += 1, R17527 += 1, R17476 += 1, R17477 += 1 };
  s1 -> s1 [0, 65535] { R17587 += 1, R17526 += 1, R17527 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R17587 += 1, R17527 += 1, R17477 += 1, R2 += 1 };
  s1 -> s3 [0, 65535] { R17587 += 1, R17527 += 1, R17476 += 1, R17477 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R17587 += 1 };
  s2 -> s6 [0, 65535] { R17587 += 1, R17527 += 1 };
  s2 -> s2 [0, 65535] { R17587 += 1, R17527 += 1, R17477 += 1, R2 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R17587 += 1 };
  s3 -> s2 [0, 65535] { R17587 += 1, R17527 += 1, R17477 += 1, R2 += 1 };
  s3 -> s3 [0, 65535] { R17587 += 1, R17527 += 1, R17476 += 1, R17477 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R17587 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R17587 += 1 };
  s6 -> s6 [0, 65535] { R17587 += 1, R17527 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_24 {
  init s0;
  s0 -> s1 [0, 57] { R17589 += 1, R17529 += 1, R17479 += 1 };
  s0 -> s2 [0, 65535] { R17589 += 1, R17528 += 1, R17529 += 1 };
  s0 -> s0 [0, 65535] { R17588 += 1, R17589 += 1 };
  s0 -> s3 [0, 65535] { R17589 += 1, R17529 += 1, R17479 += 1, R10 += 1 };
  s0 -> s4 [0, 65535] { R17589 += 1, R17529 += 1, R17478 += 1, R17479 += 1 };
  s0 -> s5 [58, 58] { R17589 += 1, R17529 += 1, R17479 += 1 };
  s0 -> s1 [59, 65535] { R17589 += 1, R17529 += 1, R17479 += 1 };
  s1 -> s1 [0, 57] { R17589 += 1, R17529 += 1, R17479 += 1 };
  s1 -> s6 [0, 65535] { R17589 += 1 };
  s1 -> s1 [0, 65535] { R17589 += 1, R17529 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s5 [58, 58] { R17589 += 1, R17529 += 1, R17479 += 1 };
  s1 -> s1 [59, 65535] { R17589 += 1, R17529 += 1, R17479 += 1 };
  s2 -> s1 [0, 57] { R17589 += 1, R17529 += 1, R17479 += 1 };
  s2 -> s2 [0, 65535] { R17589 += 1, R17528 += 1, R17529 += 1 };
  s2 -> s3 [0, 65535] { R17589 += 1, R17529 += 1, R17479 += 1, R10 += 1 };
  s2 -> s4 [0, 65535] { R17589 += 1, R17529 += 1, R17478 += 1, R17479 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s5 [58, 58] { R17589 += 1, R17529 += 1, R17479 += 1 };
  s2 -> s1 [59, 65535] { R17589 += 1, R17529 += 1, R17479 += 1 };
  s3 -> s1 [0, 57] { R17589 += 1, R17529 += 1, R17479 += 1 };
  s3 -> s8 [0, 65535] { R17589 += 1, R17529 += 1 };
  s3 -> s3 [0, 65535] { R17589 += 1, R17529 += 1, R17479 += 1, R10 += 1 };
  s3 -> s6 [0, 65535] { R17589 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s5 [58, 58] { R17589 += 1, R17529 += 1, R17479 += 1 };
  s3 -> s1 [59, 65535] { R17589 += 1, R17529 += 1, R17479 += 1 };
  s4 -> s1 [0, 57] { R17589 += 1, R17529 += 1, R17479 += 1 };
  s4 -> s3 [0, 65535] { R17589 += 1, R17529 += 1, R17479 += 1, R10 += 1 };
  s4 -> s6 [0, 65535] { R17589 += 1 };
  s4 -> s4 [0, 65535] { R17589 += 1, R17529 += 1, R17478 += 1, R17479 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s5 [58, 58] { R17589 += 1, R17529 += 1, R17479 += 1 };
  s4 -> s1 [59, 65535] { R17589 += 1, R17529 += 1, R17479 += 1 };
  s5 -> s5 [0, 65535] { R17589 += 1, R17529 += 1, R17479 += 1 };
  s6 -> s6 [0, 65535] { R17589 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R17589 += 1, R17529 += 1 };
  s8 -> s6 [0, 65535] { R17589 += 1 };
  s8 -> s7 [0, 65535];
  accepting s3, s4, s8, s2, s6, s1, s7, s0;
};
automaton uri_25 {
  init s0;
  s0 -> s1 [0, 90] { R17591 += 1, R17531 += 1, R17481 += 1, R17447 += 1 };
  s0 -> s2 [0, 65535] { R17591 += 1, R17531 += 1, R17481 += 1, R17446 += 1, R17447 += 1 };
  s0 -> s0 [0, 65535] { R17590 += 1, R17591 += 1 };
  s0 -> s3 [0, 65535] { R17591 += 1, R17530 += 1, R17531 += 1 };
  s0 -> s4 [0, 65535] { R17591 += 1, R17531 += 1, R17480 += 1, R17481 += 1 };
  s0 -> s5 [91, 91] { R17591 += 1, R17531 += 1, R17481 += 1, R17447 += 1 };
  s0 -> s1 [92, 65535] { R17591 += 1, R17531 += 1, R17481 += 1, R17447 += 1 };
  s1 -> s8 [0, 65535] { R17591 += 1, R17531 += 1 };
  s1 -> s1 [0, 65535] { R17591 += 1, R17531 += 1, R17481 += 1, R17447 += 1 };
  s1 -> s6 [0, 65535] { R17591 += 1 };
  s1 -> s9 [0, 65535] { R17591 += 1, R17531 += 1, R17481 += 1 };
  s1 -> s7 [0, 65535];
  s2 -> s1 [0, 90] { R17591 += 1, R17531 += 1, R17481 += 1, R17447 += 1 };
  s2 -> s8 [0, 65535] { R17591 += 1, R17531 += 1 };
  s2 -> s2 [0, 65535] { R17591 += 1, R17531 += 1, R17481 += 1, R17446 += 1, R17447 += 1 };
  s2 -> s6 [0, 65535] { R17591 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s5 [91, 91] { R17591 += 1, R17531 += 1, R17481 += 1, R17447 += 1 };
  s2 -> s1 [92, 65535] { R17591 += 1, R17531 += 1, R17481 += 1, R17447 += 1 };
  s3 -> s1 [0, 90] { R17591 += 1, R17531 += 1, R17481 += 1, R17447 += 1 };
  s3 -> s2 [0, 65535] { R17591 += 1, R17531 += 1, R17481 += 1, R17446 += 1, R17447 += 1 };
  s3 -> s3 [0, 65535] { R17591 += 1, R17530 += 1, R17531 += 1 };
  s3 -> s4 [0, 65535] { R17591 += 1, R17531 += 1, R17480 += 1, R17481 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s5 [91, 91] { R17591 += 1, R17531 += 1, R17481 += 1, R17447 += 1 };
  s3 -> s1 [92, 65535] { R17591 += 1, R17531 += 1, R17481 += 1, R17447 += 1 };
  s4 -> s1 [0, 90] { R17591 += 1, R17531 += 1, R17481 += 1, R17447 += 1 };
  s4 -> s2 [0, 65535] { R17591 += 1, R17531 += 1, R17481 += 1, R17446 += 1, R17447 += 1 };
  s4 -> s6 [0, 65535] { R17591 += 1 };
  s4 -> s4 [0, 65535] { R17591 += 1, R17531 += 1, R17480 += 1, R17481 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s5 [91, 91] { R17591 += 1, R17531 += 1, R17481 += 1, R17447 += 1 };
  s4 -> s1 [92, 65535] { R17591 += 1, R17531 += 1, R17481 += 1, R17447 += 1 };
  s5 -> s1 [0, 65535] { R17591 += 1, R17531 += 1, R17481 += 1, R17447 += 1 };
  s6 -> s6 [0, 65535] { R17591 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R17591 += 1, R17531 += 1 };
  s8 -> s6 [0, 65535] { R17591 += 1 };
  s8 -> s7 [0, 65535];
  s9 -> s8 [0, 65535] { R17591 += 1, R17531 += 1 };
  s9 -> s6 [0, 65535] { R17591 += 1 };
  s9 -> s9 [0, 65535] { R17591 += 1, R17531 += 1, R17481 += 1 };
  s9 -> s7 [0, 65535];
  accepting s3, s4, s8, s2, s9, s6, s1, s7, s0;
};
automaton uri_26 {
  init s0;
  s0 -> s1 [0, 65535] { R17593 += 1, R17532 += 1, R17533 += 1 };
  s0 -> s2 [0, 65535] { R17593 += 1, R17533 += 1, R17483 += 1, R17448 += 1, R17449 += 1 };
  s0 -> s3 [0, 65535] { R17593 += 1, R17533 += 1, R17482 += 1, R17483 += 1 };
  s0 -> s4 [0, 65535] { R17593 += 1, R17533 += 1, R17483 += 1, R17449 += 1, R8 += 1 };
  s0 -> s0 [0, 65535] { R17592 += 1, R17593 += 1 };
  s1 -> s1 [0, 65535] { R17593 += 1, R17532 += 1, R17533 += 1 };
  s1 -> s2 [0, 65535] { R17593 += 1, R17533 += 1, R17483 += 1, R17448 += 1, R17449 += 1 };
  s1 -> s3 [0, 65535] { R17593 += 1, R17533 += 1, R17482 += 1, R17483 += 1 };
  s1 -> s4 [0, 65535] { R17593 += 1, R17533 += 1, R17483 += 1, R17449 += 1, R8 += 1 };
  s1 -> s8 [0, 65535];
  s2 -> s5 [0, 65535] { R17593 += 1 };
  s2 -> s2 [0, 65535] { R17593 += 1, R17533 += 1, R17483 += 1, R17448 += 1, R17449 += 1 };
  s2 -> s4 [0, 65535] { R17593 += 1, R17533 += 1, R17483 += 1, R17449 += 1, R8 += 1 };
  s2 -> s6 [0, 65535] { R17593 += 1, R17533 += 1 };
  s2 -> s8 [0, 65535];
  s3 -> s5 [0, 65535] { R17593 += 1 };
  s3 -> s2 [0, 65535] { R17593 += 1, R17533 += 1, R17483 += 1, R17448 += 1, R17449 += 1 };
  s3 -> s3 [0, 65535] { R17593 += 1, R17533 += 1, R17482 += 1, R17483 += 1 };
  s3 -> s4 [0, 65535] { R17593 += 1, R17533 += 1, R17483 += 1, R17449 += 1, R8 += 1 };
  s3 -> s8 [0, 65535];
  s4 -> s5 [0, 65535] { R17593 += 1 };
  s4 -> s4 [0, 65535] { R17593 += 1, R17533 += 1, R17483 += 1, R17449 += 1, R8 += 1 };
  s4 -> s6 [0, 65535] { R17593 += 1, R17533 += 1 };
  s4 -> s7 [0, 65535] { R17593 += 1, R17533 += 1, R17483 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R17593 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s5 [0, 65535] { R17593 += 1 };
  s6 -> s6 [0, 65535] { R17593 += 1, R17533 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s5 [0, 65535] { R17593 += 1 };
  s7 -> s6 [0, 65535] { R17593 += 1, R17533 += 1 };
  s7 -> s7 [0, 65535] { R17593 += 1, R17533 += 1, R17483 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_27 {
  init s0;
  s0 -> s0 [0, 65535] { R17594 += 1, R17595 += 1 };
  s0 -> s1 [0, 65535] { R17595 += 1, R17535 += 1, R17493 += 1, R17444 += 1 };
  s0 -> s2 [0, 65535] { R17595 += 1, R17535 += 1, R17492 += 1, R17493 += 1 };
  s0 -> s3 [0, 65535] { R17595 += 1, R17534 += 1, R17535 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R17595 += 1, R17535 += 1, R17493 += 1, R17444 += 1 };
  s1 -> s5 [0, 65535] { R17595 += 1 };
  s1 -> s6 [0, 65535] { R17595 += 1, R17535 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R17595 += 1, R17535 += 1, R17493 += 1, R17444 += 1 };
  s2 -> s2 [0, 65535] { R17595 += 1, R17535 += 1, R17492 += 1, R17493 += 1 };
  s2 -> s5 [0, 65535] { R17595 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R17595 += 1, R17535 += 1, R17493 += 1, R17444 += 1 };
  s3 -> s2 [0, 65535] { R17595 += 1, R17535 += 1, R17492 += 1, R17493 += 1 };
  s3 -> s3 [0, 65535] { R17595 += 1, R17534 += 1, R17535 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R17595 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R17595 += 1 };
  s6 -> s6 [0, 65535] { R17595 += 1, R17535 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_28 {
  init s0;
  s0 -> s1 [0, 65535] { R17597 += 1, R17537 += 1 };
  s0 -> s2 [0, 65535] { R17597 += 1, R17536 += 1, R17537 += 1 };
  s0 -> s0 [0, 65535] { R17596 += 1, R17597 += 1 };
  s1 -> s4 [0, 65535] { R17597 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R17597 += 1, R17537 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R17597 += 1, R17537 += 1 };
  s2 -> s2 [0, 65535] { R17597 += 1, R17536 += 1, R17537 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R17597 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_29 {
  init s0;
  s0 -> s1 [0, 86] { R17599 += 1, R17539 += 1, R17495 += 1, R17462 += 1 };
  s0 -> s0 [0, 65535] { R17598 += 1, R17599 += 1 };
  s0 -> s2 [0, 65535] { R17599 += 1, R17539 += 1, R17494 += 1, R17495 += 1 };
  s0 -> s3 [0, 65535] { R17599 += 1, R17538 += 1, R17539 += 1 };
  s0 -> s4 [87, 87] { R17599 += 1, R17539 += 1, R17495 += 1, R17462 += 1 };
  s0 -> s5 [87, 87] { R17599 += 1, R17539 += 1, R17495 += 1, R17462 += 1 };
  s0 -> s1 [88, 65535] { R17599 += 1, R17539 += 1, R17495 += 1, R17462 += 1 };
  s1 -> s1 [0, 86] { R17599 += 1, R17539 += 1, R17495 += 1, R17462 += 1 };
  s1 -> s6 [0, 65535] { R17599 += 1 };
  s1 -> s1 [0, 65535] { R17599 += 1, R17539 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [87, 87] { R17599 += 1, R17539 += 1, R17495 += 1, R17462 += 1 };
  s1 -> s5 [87, 87] { R17599 += 1, R17539 += 1, R17495 += 1, R17462 += 1 };
  s1 -> s1 [88, 65535] { R17599 += 1, R17539 += 1, R17495 += 1, R17462 += 1 };
  s2 -> s1 [0, 86] { R17599 += 1, R17539 += 1, R17495 += 1, R17462 += 1 };
  s2 -> s6 [0, 65535] { R17599 += 1 };
  s2 -> s2 [0, 65535] { R17599 += 1, R17539 += 1, R17494 += 1, R17495 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [87, 87] { R17599 += 1, R17539 += 1, R17495 += 1, R17462 += 1 };
  s2 -> s5 [87, 87] { R17599 += 1, R17539 += 1, R17495 += 1, R17462 += 1 };
  s2 -> s1 [88, 65535] { R17599 += 1, R17539 += 1, R17495 += 1, R17462 += 1 };
  s3 -> s1 [0, 86] { R17599 += 1, R17539 += 1, R17495 += 1, R17462 += 1 };
  s3 -> s2 [0, 65535] { R17599 += 1, R17539 += 1, R17494 += 1, R17495 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R17599 += 1, R17538 += 1, R17539 += 1 };
  s3 -> s4 [87, 87] { R17599 += 1, R17539 += 1, R17495 += 1, R17462 += 1 };
  s3 -> s5 [87, 87] { R17599 += 1, R17539 += 1, R17495 += 1, R17462 += 1 };
  s3 -> s1 [88, 65535] { R17599 += 1, R17539 += 1, R17495 += 1, R17462 += 1 };
  s4 -> s4 [0, 65535] { R17599 += 1, R17539 += 1 };
  s4 -> s6 [0, 65535] { R17599 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s6 [0, 65535] { R17599 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R17599 += 1, R17539 += 1 };
  s5 -> s5 [0, 65535] { R17599 += 1, R17539 += 1, R17495 += 1, R17462 += 1 };
  s6 -> s6 [0, 65535] { R17599 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R17599 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R17599 += 1, R17539 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_30 {
  init s0;
  s0 -> s1 [0, 65535] { R17601 += 1, R17541 += 1, R17497 += 1, R17445 += 1 };
  s0 -> s2 [0, 65535] { R17601 += 1, R17540 += 1, R17541 += 1 };
  s0 -> s3 [0, 65535] { R17601 += 1, R17541 += 1, R17496 += 1, R17497 += 1 };
  s0 -> s0 [0, 65535] { R17600 += 1, R17601 += 1 };
  s1 -> s6 [0, 65535] { R17601 += 1, R17541 += 1 };
  s1 -> s4 [0, 65535] { R17601 += 1 };
  s1 -> s1 [0, 65535] { R17601 += 1, R17541 += 1, R17497 += 1, R17445 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R17601 += 1, R17541 += 1, R17497 += 1, R17445 += 1 };
  s2 -> s2 [0, 65535] { R17601 += 1, R17540 += 1, R17541 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R17601 += 1, R17541 += 1, R17496 += 1, R17497 += 1 };
  s3 -> s4 [0, 65535] { R17601 += 1 };
  s3 -> s1 [0, 65535] { R17601 += 1, R17541 += 1, R17497 += 1, R17445 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R17601 += 1, R17541 += 1, R17496 += 1, R17497 += 1 };
  s4 -> s4 [0, 65535] { R17601 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R17601 += 1, R17541 += 1 };
  s6 -> s4 [0, 65535] { R17601 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_31 {
  init s0;
  s0 -> s1 [0, 65535] { R17603 += 1, R17543 += 1 };
  s0 -> s2 [0, 65535] { R17603 += 1, R17542 += 1, R17543 += 1 };
  s0 -> s0 [0, 65535] { R17602 += 1, R17603 += 1 };
  s1 -> s1 [0, 65535] { R17603 += 1, R17543 += 1 };
  s1 -> s4 [0, 65535] { R17603 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R17603 += 1, R17543 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R17603 += 1, R17542 += 1, R17543 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R17603 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
};
constraint R5 = R17483 && R6 = R17491 && R7 = R17603 && R18 = 0 && R19 = R17543 && R17454 = 0 && R17455 = 10 && R17456 = 0 && R17457 = 10 && R17458 = 0 && R17459 = 2 && R17460 = 0 && R17461 = 2 && R17464 = 0 && R17465 = R17483 && R17466 = 0 && R17467 = R17483 && R17468 = 0 && R17469 = R17483 && R17470 = 0 && R17471 = R17483 && R17472 = 0 && R17473 = R17483 && R17474 = 11 && R17475 = R17483 && R17476 = 11 && R17477 = R17483 && R17478 = 11 && R17479 = R17483 && R17480 = 11 && R17481 = R17483 && R17482 = 11 && R17484 - R17543 = 1 && R17485 = R17491 && R17486 - R17543 = 1 && R17487 = R17491 && R17488 - R17543 = 1 && R17489 = R17491 && R17490 - R17543 = 1 && R17498 = 0 && R17499 = R17543 && R17500 = 0 && R17501 = R17543 && R17502 = 0 && R17503 = R17543 && R17504 = 0 && R17505 = R17543 && R17506 = 0 && R17507 = R17543 && R17508 = 0 && R17509 = R17543 && R17510 = 0 && R17511 = R17543 && R17512 = 0 && R17513 = R17543 && R17514 = 0 && R17515 = R17543 && R17516 = 0 && R17517 = R17543 && R17518 = 0 && R17519 = R17543 && R17520 = 0 && R17521 = R17543 && R17522 = 0 && R17523 = R17543 && R17524 = 0 && R17525 = R17543 && R17526 = 0 && R17527 = R17543 && R17528 = 0 && R17529 = R17543 && R17530 = 0 && R17531 = R17543 && R17532 = 0 && R17533 = R17543 && R17534 = 0 && R17535 = R17543 && R17536 = 0 && R17537 = R17543 && R17538 = 0 && R17539 = R17543 && R17540 = 0 && R17541 = R17543 && R17542 = 0 && R17544 = 10 && R17545 = R17603 && R17546 = 10 && R17547 = R17603 && R17548 = 10 && R17549 = R17603 && R17550 = 10 && R17551 = R17603 && R17552 = 10 && R17553 = R17603 && R17554 = 10 && R17555 = R17603 && R17556 = 10 && R17557 = R17603 && R17558 = 10 && R17559 = R17603 && R17560 = 10 && R17561 = R17603 && R17562 = 10 && R17563 = R17603 && R17564 = 10 && R17565 = R17603 && R17566 = 10 && R17567 = R17603 && R17568 = 10 && R17569 = R17603 && R17570 = 10 && R17571 = R17603 && R17572 = 10 && R17573 = R17603 && R17574 = 10 && R17575 = R17603 && R17576 = 10 && R17577 = R17603 && R17578 = 10 && R17579 = R17603 && R17580 = 10 && R17581 = R17603 && R17582 = 10 && R17583 = R17603 && R17584 = 10 && R17585 = R17603 && R17586 = 10 && R17587 = R17603 && R17588 = 10 && R17589 = R17603 && R17590 = 10 && R17591 = R17603 && R17592 = 10 && R17593 = R17603 && R17594 = 10 && R17595 = R17603 && R17596 = 10 && R17597 = R17603 && R17598 = 10 && R17599 = R17603 && R17600 = 10 && R17601 = R17603 && R17602 = 10 && R0 != 0 && R2 != 0 && R3 != 0 && R4 != 0 && R17463 + R17462 != 0 && R10 < 1 && R11 < 1 && R14 < 1 && 10 < R17483 && R17543 < R17491 && -1 < R17543 && 9 < R17603 && (R17446 != 0 || ((R8 != 0 || ((R2 != R17447 || R17447 = 1 || R17447 < 0) && (R2 = R17447 || R17447 = 1 || R2 < 1))) && (R8 = 0 || ((R2 != R17447 || R17447 = 1 || R17447 < 0) && (R17447 != 1 || -1 < R2) && (R2 = R17447 || R17447 = 1))))) && (R17448 != 0 || ((R8 != 0 || ((R2 != R17449 || R17449 = 1 || R17449 < 0) && (R2 = R17449 || R17449 = 1 || R2 < 1))) && (R8 = 0 || ((R2 != R17449 || R17449 = 1 || R17449 < 0) && (R17449 != 1 || -1 < R2) && (R2 = R17449 || R17449 = 1))))) && (R17450 != 0 || ((R9 != 0 || ((R4 != R17451 || R17451 = 1 || R17451 < 0) && (R4 = R17451 || R17451 = 1 || R4 < 1))) && (R9 = 0 || ((R4 != R17451 || R17451 = 1 || R17451 < 0) && (R17451 != 1 || -1 < R4) && (R4 = R17451 || R17451 = 1))))) && (R17452 != 0 || ((R9 != 0 || ((R4 != R17453 || R17453 = 1 || R17453 < 0) && (R4 = R17453 || R17453 = 1 || R4 < 1))) && (R9 = 0 || ((R4 != R17453 || R17453 = 1 || R17453 < 0) && (R17453 != 1 || -1 < R4) && (R4 = R17453 || R17453 = 1))))) && (R17444 = 0 || (R17492 = 0 && R17493 = 0)) && (R17444 = 0 || (R17494 = 0 && R17495 = 0)) && (R17445 = 0 || (R17496 = 0 && R17497 = 0)) && (R17446 = 0 || (R8 = 0 && R2 < 0)) && (R17448 = 0 || (R8 = 0 && R2 < 0)) && (R17450 = 0 || (R9 = 0 && R4 < 0)) && (R17452 = 0 || (R9 = 0 && R4 < 0));
// End of Parikh automata intersection problem
