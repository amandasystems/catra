// Parikh automata intersection problem, generated by OSTRICH+
counter int R0, R1, R11, R12, R2, R2458, R2462, R2463, R3, R3074, R3075, R3380, R3381, R3532, R3533, R3534, R3535, R3536, R3537, R3538, R3539, R3540, R3541, R3542, R3543, R3544, R3545, R3546, R3547, R3548, R3549, R3550, R3551, R3552, R3553, R3554, R3555, R3556, R3557, R3558, R3559, R3560, R3561, R3562, R3563, R3564, R3565, R3566, R3567, R3568, R3569, R3570, R3571, R3572, R3573, R3574, R3575, R3576, R3577, R3578, R3579, R3580, R3581, R3582, R3583, R3584, R3585, R3586, R3587, R3588, R3589, R3590, R3591, R3592, R3593, R3594, R3595, R3596, R3597, R3598, R3599, R3600, R3601, R3602, R3603, R3604, R3605, R3606, R3607, R3608, R3609, R3610, R3611, R3612, R3613, R3614, R3615, R3616, R3617, R3618, R3619, R3620, R3621, R3622, R3623, R3624, R3625, R3626, R3627, R3628, R3629, R3630, R3631, R3632, R3633, R3634, R3635, R3636, R3637, R3638, R3639, R3640, R3641, R3642, R3643, R3644, R3645, R3646, R3647, R3648, R3649, R3650, R3651, R3652, R3653, R3654, R3655, R3656, R3657, R3658, R3659, R3660, R3661, R3662, R3663, R3664, R3665, R3666, R3667, R3668, R3669, R3670, R3671, R3672, R3673, R3674, R3675, R3676, R3677, R3678, R3679, R3680, R3681, R4, R5, R6, R7, R8, R9;
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R6 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 45] { R3629 += 1 };
  s0 -> s0 [0, 65535] { R3628 += 1, R3629 += 1 };
  s0 -> s2 [46, 46] { R3629 += 1 };
  s0 -> s3 [47, 47] { R3629 += 1 };
  s0 -> s1 [48, 65535] { R3629 += 1 };
  s1 -> s1 [0, 45] { R3629 += 1 };
  s1 -> s2 [46, 46] { R3629 += 1 };
  s1 -> s3 [47, 47] { R3629 += 1 };
  s1 -> s1 [48, 65535] { R3629 += 1 };
  s2 -> s1 [0, 45] { R3629 += 1 };
  s2 -> s2 [46, 46] { R3629 += 1 };
  s2 -> s3 [47, 47] { R3629 += 1 };
  s2 -> s1 [48, 114] { R3629 += 1 };
  s2 -> s8 [115, 115] { R3629 += 1 };
  s2 -> s1 [116, 65535] { R3629 += 1 };
  s3 -> s3 [0, 45] { R3629 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s4 [46, 46] { R3629 += 1 };
  s3 -> s3 [47, 65535] { R3629 += 1 };
  s4 -> s3 [0, 45] { R3629 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s4 [46, 46] { R3629 += 1 };
  s4 -> s3 [47, 114] { R3629 += 1 };
  s4 -> s5 [115, 115] { R3629 += 1 };
  s4 -> s3 [116, 65535] { R3629 += 1 };
  s5 -> s3 [0, 45] { R3629 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s4 [46, 46] { R3629 += 1 };
  s5 -> s3 [47, 110] { R3629 += 1 };
  s5 -> s6 [111, 111] { R3629 += 1 };
  s5 -> s3 [112, 65535] { R3629 += 1 };
  s6 -> s3 [0, 45] { R3629 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s4 [46, 46] { R3629 += 1 };
  s6 -> s3 [47, 98] { R3629 += 1 };
  s6 -> s7 [99, 99] { R3629 += 1 };
  s6 -> s3 [100, 65535] { R3629 += 1 };
  s7 -> s3 [0, 45] { R3629 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s4 [46, 46] { R3629 += 1 };
  s7 -> s3 [47, 106] { R3629 += 1 };
  s7 -> s3 [108, 65535] { R3629 += 1 };
  s8 -> s1 [0, 45] { R3629 += 1 };
  s8 -> s2 [46, 46] { R3629 += 1 };
  s8 -> s3 [47, 47] { R3629 += 1 };
  s8 -> s1 [48, 110] { R3629 += 1 };
  s8 -> s9 [111, 111] { R3629 += 1 };
  s8 -> s1 [112, 65535] { R3629 += 1 };
  s9 -> s1 [0, 45] { R3629 += 1 };
  s9 -> s2 [46, 46] { R3629 += 1 };
  s9 -> s3 [47, 47] { R3629 += 1 };
  s9 -> s1 [48, 98] { R3629 += 1 };
  s9 -> s10 [99, 99] { R3629 += 1 };
  s9 -> s1 [100, 65535] { R3629 += 1 };
  s10 -> s1 [0, 45] { R3629 += 1 };
  s10 -> s2 [46, 46] { R3629 += 1 };
  s10 -> s3 [47, 47] { R3629 += 1 };
  s10 -> s1 [48, 106] { R3629 += 1 };
  s10 -> s1 [108, 65535] { R3629 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_3 {
  init s0;
  s0 -> s0 [0, 65535] { R3630 += 1, R3631 += 1 };
  s0 -> s1 [0, 65535] { R3631 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R3631 += 1, R5 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s1 [0, 46] { R3633 += 1, R3381 += 1 };
  s0 -> s2 [0, 65535] { R3633 += 1, R3380 += 1, R3381 += 1 };
  s0 -> s0 [0, 65535] { R3632 += 1, R3633 += 1 };
  s0 -> s3 [47, 47] { R3633 += 1 };
  s0 -> s1 [48, 65535] { R3633 += 1, R3381 += 1 };
  s1 -> s1 [0, 46] { R3633 += 1, R3381 += 1 };
  s1 -> s3 [47, 47] { R3633 += 1 };
  s1 -> s1 [48, 65535] { R3633 += 1, R3381 += 1 };
  s2 -> s1 [0, 46] { R3633 += 1, R3381 += 1 };
  s2 -> s2 [0, 65535] { R3633 += 1, R3380 += 1, R3381 += 1 };
  s2 -> s3 [47, 47] { R3633 += 1 };
  s2 -> s1 [48, 65535] { R3633 += 1, R3381 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3633 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 62] { R3635 += 1, R3581 += 1 };
  s0 -> s2 [0, 65535] { R3635 += 1, R3580 += 1, R3581 += 1 };
  s0 -> s0 [0, 65535] { R3634 += 1, R3635 += 1 };
  s0 -> s3 [63, 63] { R3635 += 1, R3581 += 1 };
  s0 -> s1 [64, 65535] { R3635 += 1, R3581 += 1 };
  s1 -> s1 [0, 62] { R3635 += 1, R3581 += 1 };
  s1 -> s3 [63, 63] { R3635 += 1, R3581 += 1 };
  s1 -> s1 [64, 65535] { R3635 += 1, R3581 += 1 };
  s2 -> s1 [0, 62] { R3635 += 1, R3581 += 1 };
  s2 -> s2 [0, 65535] { R3635 += 1, R3580 += 1, R3581 += 1 };
  s2 -> s3 [63, 63] { R3635 += 1, R3581 += 1 };
  s2 -> s1 [64, 65535] { R3635 += 1, R3581 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3635 += 1, R3581 += 1 };
  s3 -> s5 [0, 65535] { R3635 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3635 += 1 };
  accepting s3, s4, s5;
};
automaton uri_6 {
  init s0;
  s0 -> s1 [0, 65535] { R3637 += 1, R3582 += 1, R3583 += 1 };
  s0 -> s2 [0, 65535] { R3637 += 1, R3583 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R3636 += 1, R3637 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3637 += 1, R3582 += 1, R3583 += 1 };
  s1 -> s2 [0, 65535] { R3637 += 1, R3583 += 1, R3 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R3637 += 1 };
  s2 -> s2 [0, 65535] { R3637 += 1, R3583 += 1, R3 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3637 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_7 {
  init s0;
  s0 -> s1 [0, 62] { R3639 += 1, R3585 += 1, R3075 += 1 };
  s0 -> s2 [0, 65535] { R3639 += 1, R3585 += 1, R3074 += 1, R3075 += 1 };
  s0 -> s3 [0, 65535] { R3639 += 1, R3584 += 1, R3585 += 1 };
  s0 -> s0 [0, 65535] { R3638 += 1, R3639 += 1 };
  s0 -> s4 [63, 63] { R3639 += 1, R3585 += 1 };
  s0 -> s1 [64, 65535] { R3639 += 1, R3585 += 1, R3075 += 1 };
  s1 -> s1 [0, 62] { R3639 += 1, R3585 += 1, R3075 += 1 };
  s1 -> s4 [63, 63] { R3639 += 1, R3585 += 1 };
  s1 -> s1 [64, 65535] { R3639 += 1, R3585 += 1, R3075 += 1 };
  s2 -> s1 [0, 62] { R3639 += 1, R3585 += 1, R3075 += 1 };
  s2 -> s2 [0, 65535] { R3639 += 1, R3585 += 1, R3074 += 1, R3075 += 1 };
  s2 -> s4 [63, 63] { R3639 += 1, R3585 += 1 };
  s2 -> s1 [64, 65535] { R3639 += 1, R3585 += 1, R3075 += 1 };
  s3 -> s1 [0, 62] { R3639 += 1, R3585 += 1, R3075 += 1 };
  s3 -> s2 [0, 65535] { R3639 += 1, R3585 += 1, R3074 += 1, R3075 += 1 };
  s3 -> s3 [0, 65535] { R3639 += 1, R3584 += 1, R3585 += 1 };
  s3 -> s4 [63, 63] { R3639 += 1, R3585 += 1 };
  s3 -> s1 [64, 65535] { R3639 += 1, R3585 += 1, R3075 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3639 += 1, R3585 += 1 };
  s4 -> s6 [0, 65535] { R3639 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3639 += 1 };
  accepting s4, s5, s6;
};
automaton uri_8 {
  init s0;
  s0 -> s1 [0, 62] { R3641 += 1, R3587 += 1, R3539 += 1 };
  s0 -> s2 [0, 65535] { R3641 += 1, R3586 += 1, R3587 += 1 };
  s0 -> s3 [0, 65535] { R3641 += 1, R3587 += 1, R3538 += 1, R3539 += 1 };
  s0 -> s0 [0, 65535] { R3640 += 1, R3641 += 1 };
  s0 -> s4 [63, 63] { R3641 += 1, R3587 += 1, R3539 += 1 };
  s0 -> s1 [64, 65535] { R3641 += 1, R3587 += 1, R3539 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R3641 += 1, R3587 += 1 };
  s1 -> s6 [0, 65535] { R3641 += 1 };
  s1 -> s1 [0, 65535] { R3641 += 1, R3587 += 1, R3539 += 1 };
  s2 -> s1 [0, 62] { R3641 += 1, R3587 += 1, R3539 += 1 };
  s2 -> s2 [0, 65535] { R3641 += 1, R3586 += 1, R3587 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R3641 += 1, R3587 += 1, R3538 += 1, R3539 += 1 };
  s2 -> s4 [63, 63] { R3641 += 1, R3587 += 1, R3539 += 1 };
  s2 -> s1 [64, 65535] { R3641 += 1, R3587 += 1, R3539 += 1 };
  s3 -> s1 [0, 62] { R3641 += 1, R3587 += 1, R3539 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3641 += 1, R3587 += 1, R3538 += 1, R3539 += 1 };
  s3 -> s6 [0, 65535] { R3641 += 1 };
  s3 -> s4 [63, 63] { R3641 += 1, R3587 += 1, R3539 += 1 };
  s3 -> s1 [64, 65535] { R3641 += 1, R3587 += 1, R3539 += 1 };
  s4 -> s1 [0, 65535] { R3641 += 1, R3587 += 1, R3539 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3641 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R3641 += 1, R3587 += 1 };
  s7 -> s6 [0, 65535] { R3641 += 1 };
  accepting s3, s5, s2, s6, s1, s7, s0;
};
automaton uri_9 {
  init s0;
  s0 -> s1 [0, 65535] { R3643 += 1, R3589 += 1, R3541 += 1, R8 += 1 };
  s0 -> s2 [0, 65535] { R3643 += 1, R3589 += 1, R3540 += 1, R3541 += 1 };
  s0 -> s0 [0, 65535] { R3642 += 1, R3643 += 1 };
  s0 -> s3 [0, 65535] { R3643 += 1, R3588 += 1, R3589 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R3643 += 1, R3589 += 1 };
  s1 -> s5 [0, 65535] { R3643 += 1 };
  s1 -> s1 [0, 65535] { R3643 += 1, R3589 += 1, R3541 += 1, R8 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R3643 += 1 };
  s2 -> s1 [0, 65535] { R3643 += 1, R3589 += 1, R3541 += 1, R8 += 1 };
  s2 -> s2 [0, 65535] { R3643 += 1, R3589 += 1, R3540 += 1, R3541 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R3643 += 1, R3589 += 1, R3541 += 1, R8 += 1 };
  s3 -> s2 [0, 65535] { R3643 += 1, R3589 += 1, R3540 += 1, R3541 += 1 };
  s3 -> s3 [0, 65535] { R3643 += 1, R3588 += 1, R3589 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3643 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R3643 += 1, R3589 += 1 };
  s6 -> s5 [0, 65535] { R3643 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_10 {
  init s0;
  s0 -> s1 [0, 36] { R3645 += 1, R3591 += 1, R3547 += 1 };
  s0 -> s2 [0, 65535] { R3645 += 1, R3590 += 1, R3591 += 1 };
  s0 -> s3 [0, 65535] { R3645 += 1, R3591 += 1, R3546 += 1, R3547 += 1 };
  s0 -> s0 [0, 65535] { R3644 += 1, R3645 += 1 };
  s0 -> s4 [37, 37] { R3645 += 1, R3591 += 1, R3547 += 1 };
  s0 -> s1 [38, 42] { R3645 += 1, R3591 += 1, R3547 += 1 };
  s0 -> s1 [44, 45] { R3645 += 1, R3591 += 1, R3547 += 1 };
  s0 -> s1 [47, 65535] { R3645 += 1, R3591 += 1, R3547 += 1 };
  s1 -> s1 [0, 36] { R3645 += 1, R3591 += 1, R3547 += 1 };
  s1 -> s4 [37, 37] { R3645 += 1, R3591 += 1, R3547 += 1 };
  s1 -> s1 [38, 42] { R3645 += 1, R3591 += 1, R3547 += 1 };
  s1 -> s1 [44, 45] { R3645 += 1, R3591 += 1, R3547 += 1 };
  s1 -> s1 [47, 65535] { R3645 += 1, R3591 += 1, R3547 += 1 };
  s2 -> s1 [0, 36] { R3645 += 1, R3591 += 1, R3547 += 1 };
  s2 -> s2 [0, 65535] { R3645 += 1, R3590 += 1, R3591 += 1 };
  s2 -> s3 [0, 65535] { R3645 += 1, R3591 += 1, R3546 += 1, R3547 += 1 };
  s2 -> s4 [37, 37] { R3645 += 1, R3591 += 1, R3547 += 1 };
  s2 -> s1 [38, 42] { R3645 += 1, R3591 += 1, R3547 += 1 };
  s2 -> s1 [44, 45] { R3645 += 1, R3591 += 1, R3547 += 1 };
  s2 -> s1 [47, 65535] { R3645 += 1, R3591 += 1, R3547 += 1 };
  s3 -> s1 [0, 36] { R3645 += 1, R3591 += 1, R3547 += 1 };
  s3 -> s3 [0, 65535] { R3645 += 1, R3591 += 1, R3546 += 1, R3547 += 1 };
  s3 -> s4 [37, 37] { R3645 += 1, R3591 += 1, R3547 += 1 };
  s3 -> s1 [38, 42] { R3645 += 1, R3591 += 1, R3547 += 1 };
  s3 -> s1 [44, 45] { R3645 += 1, R3591 += 1, R3547 += 1 };
  s3 -> s1 [47, 65535] { R3645 += 1, R3591 += 1, R3547 += 1 };
  s4 -> s4 [0, 42] { R3645 += 1, R3591 += 1, R3547 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3645 += 1, R3591 += 1 };
  s4 -> s6 [0, 65535] { R3645 += 1 };
  s4 -> s4 [44, 45] { R3645 += 1, R3591 += 1, R3547 += 1 };
  s4 -> s4 [47, 65535] { R3645 += 1, R3591 += 1, R3547 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3645 += 1 };
  accepting s4, s5, s6;
};
automaton uri_11 {
  init s0;
  s0 -> s0 [0, 65535] { R3646 += 1, R3647 += 1 };
  s0 -> s1 [0, 65535] { R3647 += 1, R3593 += 1, R3549 += 1, R3533 += 1 };
  s0 -> s2 [0, 65535] { R3647 += 1, R3593 += 1, R3548 += 1, R3549 += 1 };
  s0 -> s3 [0, 65535] { R3647 += 1, R3592 += 1, R3593 += 1 };
  s1 -> s1 [0, 65535] { R3647 += 1, R3593 += 1, R3549 += 1, R3533 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R3647 += 1, R3593 += 1 };
  s1 -> s5 [0, 65535] { R3647 += 1 };
  s2 -> s1 [0, 65535] { R3647 += 1, R3593 += 1, R3549 += 1, R3533 += 1 };
  s2 -> s2 [0, 65535] { R3647 += 1, R3593 += 1, R3548 += 1, R3549 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R3647 += 1 };
  s3 -> s1 [0, 65535] { R3647 += 1, R3593 += 1, R3549 += 1, R3533 += 1 };
  s3 -> s2 [0, 65535] { R3647 += 1, R3593 += 1, R3548 += 1, R3549 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3647 += 1, R3592 += 1, R3593 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3647 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R3647 += 1, R3593 += 1 };
  s6 -> s5 [0, 65535] { R3647 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_12 {
  init s0;
  s0 -> s1 [0, 31] { R3649 += 1, R3595 += 1, R3555 += 1 };
  s0 -> s0 [0, 65535] { R3648 += 1, R3649 += 1 };
  s0 -> s2 [0, 65535] { R3649 += 1, R3594 += 1, R3595 += 1 };
  s0 -> s3 [0, 65535] { R3649 += 1, R3595 += 1, R3554 += 1, R3555 += 1 };
  s0 -> s1 [33, 60] { R3649 += 1, R3595 += 1, R3555 += 1 };
  s0 -> s4 [61, 61] { R3649 += 1, R3595 += 1, R3555 += 1 };
  s0 -> s1 [62, 65535] { R3649 += 1, R3595 += 1, R3555 += 1 };
  s1 -> s1 [0, 31] { R3649 += 1, R3595 += 1, R3555 += 1 };
  s1 -> s1 [33, 60] { R3649 += 1, R3595 += 1, R3555 += 1 };
  s1 -> s4 [61, 61] { R3649 += 1, R3595 += 1, R3555 += 1 };
  s1 -> s1 [62, 65535] { R3649 += 1, R3595 += 1, R3555 += 1 };
  s2 -> s1 [0, 31] { R3649 += 1, R3595 += 1, R3555 += 1 };
  s2 -> s2 [0, 65535] { R3649 += 1, R3594 += 1, R3595 += 1 };
  s2 -> s3 [0, 65535] { R3649 += 1, R3595 += 1, R3554 += 1, R3555 += 1 };
  s2 -> s1 [33, 60] { R3649 += 1, R3595 += 1, R3555 += 1 };
  s2 -> s4 [61, 61] { R3649 += 1, R3595 += 1, R3555 += 1 };
  s2 -> s1 [62, 65535] { R3649 += 1, R3595 += 1, R3555 += 1 };
  s3 -> s1 [0, 31] { R3649 += 1, R3595 += 1, R3555 += 1 };
  s3 -> s3 [0, 65535] { R3649 += 1, R3595 += 1, R3554 += 1, R3555 += 1 };
  s3 -> s1 [33, 60] { R3649 += 1, R3595 += 1, R3555 += 1 };
  s3 -> s4 [61, 61] { R3649 += 1, R3595 += 1, R3555 += 1 };
  s3 -> s1 [62, 65535] { R3649 += 1, R3595 += 1, R3555 += 1 };
  s4 -> s4 [0, 31] { R3649 += 1, R3595 += 1, R3555 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3649 += 1, R3595 += 1 };
  s4 -> s6 [0, 65535] { R3649 += 1 };
  s4 -> s4 [33, 65535] { R3649 += 1, R3595 += 1, R3555 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3649 += 1 };
  accepting s4, s5, s6;
};
automaton uri_13 {
  init s0;
  s0 -> s0 [0, 65535] { R3650 += 1, R3651 += 1 };
  s0 -> s1 [0, 65535] { R3651 += 1, R3596 += 1, R3597 += 1 };
  s0 -> s2 [0, 65535] { R3651 += 1, R3597 += 1, R3557 += 1, R2 += 1 };
  s0 -> s3 [0, 65535] { R3651 += 1, R3597 += 1, R3556 += 1, R3557 += 1 };
  s1 -> s1 [0, 65535] { R3651 += 1, R3596 += 1, R3597 += 1 };
  s1 -> s2 [0, 65535] { R3651 += 1, R3597 += 1, R3557 += 1, R2 += 1 };
  s1 -> s3 [0, 65535] { R3651 += 1, R3597 += 1, R3556 += 1, R3557 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3651 += 1, R3597 += 1, R3557 += 1, R2 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s6 [0, 65535] { R3651 += 1, R3597 += 1 };
  s2 -> s5 [0, 65535] { R3651 += 1 };
  s3 -> s2 [0, 65535] { R3651 += 1, R3597 += 1, R3557 += 1, R2 += 1 };
  s3 -> s3 [0, 65535] { R3651 += 1, R3597 += 1, R3556 += 1, R3557 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R3651 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3651 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R3651 += 1, R3597 += 1 };
  s6 -> s5 [0, 65535] { R3651 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 58] { R3653 += 1, R3599 += 1, R3559 += 1, R12 += 1 };
  s0 -> s2 [0, 65535] { R3653 += 1, R3599 += 1, R3558 += 1, R3559 += 1 };
  s0 -> s3 [0, 65535] { R3653 += 1, R3599 += 1, R3559 += 1, R11 += 1, R12 += 1 };
  s0 -> s4 [0, 65535] { R3653 += 1, R3598 += 1, R3599 += 1 };
  s0 -> s0 [0, 65535] { R3652 += 1, R3653 += 1 };
  s0 -> s5 [59, 59] { R3653 += 1, R3599 += 1, R3559 += 1 };
  s0 -> s1 [60, 65535] { R3653 += 1, R3599 += 1, R3559 += 1, R12 += 1 };
  s1 -> s1 [0, 58] { R3653 += 1, R3599 += 1, R3559 += 1, R12 += 1 };
  s1 -> s5 [59, 59] { R3653 += 1, R3599 += 1, R3559 += 1 };
  s1 -> s1 [60, 65535] { R3653 += 1, R3599 += 1, R3559 += 1, R12 += 1 };
  s2 -> s1 [0, 58] { R3653 += 1, R3599 += 1, R3559 += 1, R12 += 1 };
  s2 -> s2 [0, 65535] { R3653 += 1, R3599 += 1, R3558 += 1, R3559 += 1 };
  s2 -> s3 [0, 65535] { R3653 += 1, R3599 += 1, R3559 += 1, R11 += 1, R12 += 1 };
  s2 -> s5 [59, 59] { R3653 += 1, R3599 += 1, R3559 += 1 };
  s2 -> s1 [60, 65535] { R3653 += 1, R3599 += 1, R3559 += 1, R12 += 1 };
  s3 -> s1 [0, 58] { R3653 += 1, R3599 += 1, R3559 += 1, R12 += 1 };
  s3 -> s3 [0, 65535] { R3653 += 1, R3599 += 1, R3559 += 1, R11 += 1, R12 += 1 };
  s3 -> s5 [59, 59] { R3653 += 1, R3599 += 1, R3559 += 1 };
  s3 -> s1 [60, 65535] { R3653 += 1, R3599 += 1, R3559 += 1, R12 += 1 };
  s4 -> s1 [0, 58] { R3653 += 1, R3599 += 1, R3559 += 1, R12 += 1 };
  s4 -> s2 [0, 65535] { R3653 += 1, R3599 += 1, R3558 += 1, R3559 += 1 };
  s4 -> s3 [0, 65535] { R3653 += 1, R3599 += 1, R3559 += 1, R11 += 1, R12 += 1 };
  s4 -> s4 [0, 65535] { R3653 += 1, R3598 += 1, R3599 += 1 };
  s4 -> s5 [59, 59] { R3653 += 1, R3599 += 1, R3559 += 1 };
  s4 -> s1 [60, 65535] { R3653 += 1, R3599 += 1, R3559 += 1, R12 += 1 };
  s5 -> s5 [0, 65535] { R3653 += 1, R3599 += 1, R3559 += 1 };
  s5 -> s6 [0, 65535] { R3653 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R3653 += 1, R3599 += 1 };
  s6 -> s6 [0, 65535] { R3653 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R3653 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R3653 += 1, R3599 += 1 };
  accepting s5, s6, s7, s8;
};
automaton uri_15 {
  init s0;
  s0 -> s1 [0, 37] { R3655 += 1, R3601 += 1, R3561 += 1 };
  s0 -> s0 [0, 65535] { R3654 += 1, R3655 += 1 };
  s0 -> s2 [0, 65535] { R3655 += 1, R3600 += 1, R3601 += 1 };
  s0 -> s3 [0, 65535] { R3655 += 1, R3601 += 1, R3561 += 1, R2458 += 1 };
  s0 -> s4 [0, 65535] { R3655 += 1, R3601 += 1, R3560 += 1, R3561 += 1 };
  s0 -> s5 [38, 38] { R3655 += 1, R3601 += 1, R3561 += 1 };
  s0 -> s1 [39, 65535] { R3655 += 1, R3601 += 1, R3561 += 1 };
  s1 -> s1 [0, 37] { R3655 += 1, R3601 += 1, R3561 += 1 };
  s1 -> s1 [0, 65535] { R3655 += 1, R3601 += 1 };
  s1 -> s6 [0, 65535] { R3655 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s5 [38, 38] { R3655 += 1, R3601 += 1, R3561 += 1 };
  s1 -> s1 [39, 65535] { R3655 += 1, R3601 += 1, R3561 += 1 };
  s2 -> s1 [0, 37] { R3655 += 1, R3601 += 1, R3561 += 1 };
  s2 -> s2 [0, 65535] { R3655 += 1, R3600 += 1, R3601 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s3 [0, 65535] { R3655 += 1, R3601 += 1, R3561 += 1, R2458 += 1 };
  s2 -> s4 [0, 65535] { R3655 += 1, R3601 += 1, R3560 += 1, R3561 += 1 };
  s2 -> s5 [38, 38] { R3655 += 1, R3601 += 1, R3561 += 1 };
  s2 -> s1 [39, 65535] { R3655 += 1, R3601 += 1, R3561 += 1 };
  s3 -> s1 [0, 37] { R3655 += 1, R3601 += 1, R3561 += 1 };
  s3 -> s6 [0, 65535] { R3655 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R3655 += 1, R3601 += 1, R3561 += 1, R2458 += 1 };
  s3 -> s8 [0, 65535] { R3655 += 1, R3601 += 1 };
  s3 -> s5 [38, 38] { R3655 += 1, R3601 += 1, R3561 += 1 };
  s3 -> s1 [39, 65535] { R3655 += 1, R3601 += 1, R3561 += 1 };
  s4 -> s1 [0, 37] { R3655 += 1, R3601 += 1, R3561 += 1 };
  s4 -> s6 [0, 65535] { R3655 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s3 [0, 65535] { R3655 += 1, R3601 += 1, R3561 += 1, R2458 += 1 };
  s4 -> s4 [0, 65535] { R3655 += 1, R3601 += 1, R3560 += 1, R3561 += 1 };
  s4 -> s5 [38, 38] { R3655 += 1, R3601 += 1, R3561 += 1 };
  s4 -> s1 [39, 65535] { R3655 += 1, R3601 += 1, R3561 += 1 };
  s5 -> s5 [0, 65535] { R3655 += 1, R3601 += 1, R3561 += 1 };
  s6 -> s6 [0, 65535] { R3655 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R3655 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R3655 += 1, R3601 += 1 };
  accepting s3, s4, s8, s2, s6, s1, s7, s0;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 60] { R3657 += 1, R3603 += 1, R3563 += 1, R2463 += 1 };
  s0 -> s2 [0, 65535] { R3657 += 1, R3602 += 1, R3603 += 1 };
  s0 -> s0 [0, 65535] { R3656 += 1, R3657 += 1 };
  s0 -> s3 [0, 65535] { R3657 += 1, R3603 += 1, R3563 += 1, R2462 += 1, R2463 += 1 };
  s0 -> s4 [0, 65535] { R3657 += 1, R3603 += 1, R3562 += 1, R3563 += 1 };
  s0 -> s5 [61, 61] { R3657 += 1, R3603 += 1, R3563 += 1 };
  s0 -> s1 [62, 65535] { R3657 += 1, R3603 += 1, R3563 += 1, R2463 += 1 };
  s1 -> s1 [0, 60] { R3657 += 1, R3603 += 1, R3563 += 1, R2463 += 1 };
  s1 -> s5 [61, 61] { R3657 += 1, R3603 += 1, R3563 += 1 };
  s1 -> s1 [62, 65535] { R3657 += 1, R3603 += 1, R3563 += 1, R2463 += 1 };
  s2 -> s1 [0, 60] { R3657 += 1, R3603 += 1, R3563 += 1, R2463 += 1 };
  s2 -> s2 [0, 65535] { R3657 += 1, R3602 += 1, R3603 += 1 };
  s2 -> s3 [0, 65535] { R3657 += 1, R3603 += 1, R3563 += 1, R2462 += 1, R2463 += 1 };
  s2 -> s4 [0, 65535] { R3657 += 1, R3603 += 1, R3562 += 1, R3563 += 1 };
  s2 -> s5 [61, 61] { R3657 += 1, R3603 += 1, R3563 += 1 };
  s2 -> s1 [62, 65535] { R3657 += 1, R3603 += 1, R3563 += 1, R2463 += 1 };
  s3 -> s1 [0, 60] { R3657 += 1, R3603 += 1, R3563 += 1, R2463 += 1 };
  s3 -> s3 [0, 65535] { R3657 += 1, R3603 += 1, R3563 += 1, R2462 += 1, R2463 += 1 };
  s3 -> s5 [61, 61] { R3657 += 1, R3603 += 1, R3563 += 1 };
  s3 -> s1 [62, 65535] { R3657 += 1, R3603 += 1, R3563 += 1, R2463 += 1 };
  s4 -> s1 [0, 60] { R3657 += 1, R3603 += 1, R3563 += 1, R2463 += 1 };
  s4 -> s3 [0, 65535] { R3657 += 1, R3603 += 1, R3563 += 1, R2462 += 1, R2463 += 1 };
  s4 -> s4 [0, 65535] { R3657 += 1, R3603 += 1, R3562 += 1, R3563 += 1 };
  s4 -> s5 [61, 61] { R3657 += 1, R3603 += 1, R3563 += 1 };
  s4 -> s1 [62, 65535] { R3657 += 1, R3603 += 1, R3563 += 1, R2463 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R3657 += 1 };
  s5 -> s8 [0, 65535] { R3657 += 1, R3603 += 1 };
  s5 -> s5 [0, 65535] { R3657 += 1, R3603 += 1, R3563 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3657 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R3657 += 1 };
  s8 -> s8 [0, 65535] { R3657 += 1, R3603 += 1 };
  accepting s5, s6, s7, s8;
};
automaton uri_17 {
  init s0;
  s0 -> s1 [0, 65535] { R3659 += 1, R3605 += 1, R3565 += 1 };
  s0 -> s0 [0, 65535] { R3658 += 1, R3659 += 1 };
  s0 -> s2 [0, 65535] { R3659 += 1, R3604 += 1, R3605 += 1 };
  s0 -> s3 [0, 65535] { R3659 += 1, R3605 += 1, R3564 += 1, R3565 += 1 };
  s1 -> s1 [0, 65535] { R3659 += 1, R3605 += 1, R3565 += 1 };
  s1 -> s6 [0, 65535] { R3659 += 1, R3605 += 1 };
  s1 -> s4 [0, 65535] { R3659 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R3659 += 1, R3605 += 1, R3565 += 1 };
  s2 -> s2 [0, 65535] { R3659 += 1, R3604 += 1, R3605 += 1 };
  s2 -> s3 [0, 65535] { R3659 += 1, R3605 += 1, R3564 += 1, R3565 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R3659 += 1, R3605 += 1, R3565 += 1 };
  s3 -> s3 [0, 65535] { R3659 += 1, R3605 += 1, R3564 += 1, R3565 += 1 };
  s3 -> s4 [0, 65535] { R3659 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3659 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3659 += 1, R3605 += 1 };
  s6 -> s4 [0, 65535] { R3659 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 64] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s0 -> s2 [0, 65535] { R3661 += 1, R3606 += 1, R3607 += 1 };
  s0 -> s0 [0, 65535] { R3660 += 1, R3661 += 1 };
  s0 -> s3 [0, 65535] { R3661 += 1, R3607 += 1, R3566 += 1, R3567 += 1 };
  s0 -> s4 [0, 65535] { R3661 += 1, R3607 += 1, R3567 += 1, R3542 += 1, R3543 += 1 };
  s0 -> s1 [91, 113] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s0 -> s5 [114, 114] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s0 -> s1 [115, 65535] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s1 -> s1 [0, 64] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s1 -> s6 [0, 65535] { R3661 += 1, R3607 += 1 };
  s1 -> s7 [0, 65535] { R3661 += 1 };
  s1 -> s1 [0, 65535] { R3661 += 1, R3607 += 1, R3567 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s1 [91, 65535] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s2 -> s1 [0, 64] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s2 -> s2 [0, 65535] { R3661 += 1, R3606 += 1, R3607 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s3 [0, 65535] { R3661 += 1, R3607 += 1, R3566 += 1, R3567 += 1 };
  s2 -> s4 [0, 65535] { R3661 += 1, R3607 += 1, R3567 += 1, R3542 += 1, R3543 += 1 };
  s2 -> s1 [91, 113] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s2 -> s5 [114, 114] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s2 -> s1 [115, 65535] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s3 -> s1 [0, 64] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s3 -> s7 [0, 65535] { R3661 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s3 [0, 65535] { R3661 += 1, R3607 += 1, R3566 += 1, R3567 += 1 };
  s3 -> s4 [0, 65535] { R3661 += 1, R3607 += 1, R3567 += 1, R3542 += 1, R3543 += 1 };
  s3 -> s1 [91, 113] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s3 -> s5 [114, 114] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s3 -> s1 [115, 65535] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s4 -> s1 [0, 64] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s4 -> s6 [0, 65535] { R3661 += 1, R3607 += 1 };
  s4 -> s7 [0, 65535] { R3661 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [0, 65535] { R3661 += 1, R3607 += 1, R3567 += 1, R3542 += 1, R3543 += 1 };
  s4 -> s1 [91, 113] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s4 -> s5 [114, 114] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s4 -> s1 [115, 65535] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s5 -> s1 [0, 64] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s5 -> s6 [0, 65535] { R3661 += 1, R3607 += 1 };
  s5 -> s7 [0, 65535] { R3661 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R3661 += 1, R3607 += 1, R3567 += 1 };
  s5 -> s1 [91, 100] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s5 -> s9 [101, 101] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s5 -> s1 [102, 65535] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s6 -> s6 [0, 65535] { R3661 += 1, R3607 += 1 };
  s6 -> s7 [0, 65535] { R3661 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R3661 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s1 [0, 64] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s9 -> s6 [0, 65535] { R3661 += 1, R3607 += 1 };
  s9 -> s7 [0, 65535] { R3661 += 1 };
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R3661 += 1, R3607 += 1, R3567 += 1 };
  s9 -> s1 [91, 96] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s9 -> s10 [97, 97] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s9 -> s1 [98, 65535] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s10 -> s1 [0, 64] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s10 -> s6 [0, 65535] { R3661 += 1, R3607 += 1 };
  s10 -> s7 [0, 65535] { R3661 += 1 };
  s10 -> s10 [0, 65535] { R3661 += 1, R3607 += 1, R3567 += 1 };
  s10 -> s8 [0, 65535];
  s10 -> s1 [91, 99] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s10 -> s11 [100, 100] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s10 -> s1 [101, 65535] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s11 -> s1 [0, 64] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s11 -> s6 [0, 65535] { R3661 += 1, R3607 += 1 };
  s11 -> s11 [0, 65535] { R3661 += 1, R3607 += 1, R3567 += 1 };
  s11 -> s7 [0, 65535] { R3661 += 1 };
  s11 -> s8 [0, 65535];
  s11 -> s1 [91, 111] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s11 -> s12 [112, 112] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s11 -> s1 [113, 65535] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s12 -> s1 [0, 64] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s12 -> s12 [0, 65535] { R3661 += 1, R3607 += 1, R3567 += 1 };
  s12 -> s6 [0, 65535] { R3661 += 1, R3607 += 1 };
  s12 -> s7 [0, 65535] { R3661 += 1 };
  s12 -> s8 [0, 65535];
  s12 -> s1 [91, 113] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s12 -> s13 [114, 114] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s12 -> s1 [115, 65535] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s13 -> s1 [0, 64] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s13 -> s6 [0, 65535] { R3661 += 1, R3607 += 1 };
  s13 -> s7 [0, 65535] { R3661 += 1 };
  s13 -> s13 [0, 65535] { R3661 += 1, R3607 += 1, R3567 += 1 };
  s13 -> s8 [0, 65535];
  s13 -> s1 [91, 100] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s13 -> s14 [101, 101] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s13 -> s1 [102, 65535] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s14 -> s1 [0, 64] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s14 -> s6 [0, 65535] { R3661 += 1, R3607 += 1 };
  s14 -> s7 [0, 65535] { R3661 += 1 };
  s14 -> s14 [0, 65535] { R3661 += 1, R3607 += 1, R3567 += 1 };
  s14 -> s8 [0, 65535];
  s14 -> s1 [91, 101] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s14 -> s15 [102, 102] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s14 -> s1 [103, 65535] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s15 -> s1 [0, 64] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s15 -> s6 [0, 65535] { R3661 += 1, R3607 += 1 };
  s15 -> s7 [0, 65535] { R3661 += 1 };
  s15 -> s15 [0, 65535] { R3661 += 1, R3607 += 1, R3567 += 1 };
  s15 -> s8 [0, 65535];
  s15 -> s1 [91, 100] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s15 -> s16 [101, 101] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s15 -> s1 [102, 65535] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s16 -> s1 [0, 64] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s16 -> s16 [0, 65535] { R3661 += 1, R3607 += 1, R3567 += 1 };
  s16 -> s6 [0, 65535] { R3661 += 1, R3607 += 1 };
  s16 -> s7 [0, 65535] { R3661 += 1 };
  s16 -> s8 [0, 65535];
  s16 -> s1 [91, 113] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s16 -> s17 [114, 114] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s16 -> s1 [115, 65535] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s17 -> s1 [0, 64] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s17 -> s6 [0, 65535] { R3661 += 1, R3607 += 1 };
  s17 -> s7 [0, 65535] { R3661 += 1 };
  s17 -> s17 [0, 65535] { R3661 += 1, R3607 += 1, R3567 += 1 };
  s17 -> s8 [0, 65535];
  s17 -> s1 [91, 100] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s17 -> s18 [101, 101] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s17 -> s1 [102, 65535] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s18 -> s1 [0, 64] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s18 -> s6 [0, 65535] { R3661 += 1, R3607 += 1 };
  s18 -> s18 [0, 65535] { R3661 += 1, R3607 += 1, R3567 += 1 };
  s18 -> s7 [0, 65535] { R3661 += 1 };
  s18 -> s8 [0, 65535];
  s18 -> s1 [91, 109] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s18 -> s19 [110, 110] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s18 -> s1 [111, 65535] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s19 -> s1 [0, 64] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s19 -> s6 [0, 65535] { R3661 += 1, R3607 += 1 };
  s19 -> s19 [0, 65535] { R3661 += 1, R3607 += 1, R3567 += 1 };
  s19 -> s7 [0, 65535] { R3661 += 1 };
  s19 -> s8 [0, 65535];
  s19 -> s1 [91, 98] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s19 -> s20 [99, 99] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s19 -> s1 [100, 65535] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s20 -> s1 [0, 64] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s20 -> s6 [0, 65535] { R3661 += 1, R3607 += 1 };
  s20 -> s7 [0, 65535] { R3661 += 1 };
  s20 -> s20 [0, 65535] { R3661 += 1, R3607 += 1, R3567 += 1 };
  s20 -> s8 [0, 65535];
  s20 -> s1 [91, 100] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s20 -> s21 [101, 101] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s20 -> s1 [102, 65535] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s21 -> s1 [0, 64] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s21 -> s6 [0, 65535] { R3661 += 1, R3607 += 1 };
  s21 -> s7 [0, 65535] { R3661 += 1 };
  s21 -> s8 [0, 65535];
  s21 -> s21 [0, 65535] { R3661 += 1, R3607 += 1, R3567 += 1 };
  s21 -> s1 [91, 115] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s21 -> s22 [116, 116] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s21 -> s1 [117, 65535] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s22 -> s1 [0, 64] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s22 -> s22 [0, 65535] { R3661 += 1, R3607 += 1, R3567 += 1 };
  s22 -> s6 [0, 65535] { R3661 += 1, R3607 += 1 };
  s22 -> s7 [0, 65535] { R3661 += 1 };
  s22 -> s8 [0, 65535];
  s22 -> s1 [91, 96] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s22 -> s23 [97, 97] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s22 -> s1 [98, 65535] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s23 -> s1 [0, 64] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s23 -> s6 [0, 65535] { R3661 += 1, R3607 += 1 };
  s23 -> s7 [0, 65535] { R3661 += 1 };
  s23 -> s8 [0, 65535];
  s23 -> s23 [0, 65535] { R3661 += 1, R3607 += 1, R3567 += 1 };
  s23 -> s1 [91, 102] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s23 -> s24 [103, 103] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s23 -> s1 [104, 65535] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s24 -> s1 [0, 64] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s24 -> s6 [0, 65535] { R3661 += 1, R3607 += 1 };
  s24 -> s24 [0, 65535] { R3661 += 1, R3607 += 1, R3567 += 1 };
  s24 -> s7 [0, 65535] { R3661 += 1 };
  s24 -> s8 [0, 65535];
  s24 -> s1 [91, 114] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s24 -> s25 [115, 115] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s24 -> s1 [116, 65535] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s25 -> s1 [0, 64] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  s25 -> s1 [91, 65535] { R3661 += 1, R3607 += 1, R3567 += 1, R3543 += 1 };
  accepting s17, s3, s16, s4, s19, s12, s8, s24, s13, s5, s23, s2, s9, s14, s22, s21, s6, s1, s20, s7, s0, s18, s15, s10, s11;
};
automaton uri_19 {
  init s0;
  s0 -> s1 [0, 65535] { R3663 += 1, R3608 += 1, R3609 += 1 };
  s0 -> s0 [0, 65535] { R3662 += 1, R3663 += 1 };
  s0 -> s2 [0, 65535] { R3663 += 1, R3609 += 1, R3569 += 1, R3545 += 1, R3532 += 1 };
  s0 -> s3 [0, 65535] { R3663 += 1, R3609 += 1, R3569 += 1, R3544 += 1, R3545 += 1 };
  s0 -> s4 [0, 65535] { R3663 += 1, R3609 += 1, R3568 += 1, R3569 += 1 };
  s1 -> s1 [0, 65535] { R3663 += 1, R3608 += 1, R3609 += 1 };
  s1 -> s2 [0, 65535] { R3663 += 1, R3609 += 1, R3569 += 1, R3545 += 1, R3532 += 1 };
  s1 -> s3 [0, 65535] { R3663 += 1, R3609 += 1, R3569 += 1, R3544 += 1, R3545 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s4 [0, 65535] { R3663 += 1, R3609 += 1, R3568 += 1, R3569 += 1 };
  s2 -> s8 [0, 65535] { R3663 += 1, R3609 += 1, R3569 += 1 };
  s2 -> s2 [0, 65535] { R3663 += 1, R3609 += 1, R3569 += 1, R3545 += 1, R3532 += 1 };
  s2 -> s5 [0, 65535] { R3663 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R3663 += 1, R3609 += 1 };
  s3 -> s2 [0, 65535] { R3663 += 1, R3609 += 1, R3569 += 1, R3545 += 1, R3532 += 1 };
  s3 -> s5 [0, 65535] { R3663 += 1 };
  s3 -> s3 [0, 65535] { R3663 += 1, R3609 += 1, R3569 += 1, R3544 += 1, R3545 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R3663 += 1, R3609 += 1 };
  s4 -> s2 [0, 65535] { R3663 += 1, R3609 += 1, R3569 += 1, R3545 += 1, R3532 += 1 };
  s4 -> s5 [0, 65535] { R3663 += 1 };
  s4 -> s3 [0, 65535] { R3663 += 1, R3609 += 1, R3569 += 1, R3544 += 1, R3545 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3663 += 1, R3609 += 1, R3568 += 1, R3569 += 1 };
  s5 -> s5 [0, 65535] { R3663 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R3663 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3663 += 1, R3609 += 1 };
  s8 -> s8 [0, 65535] { R3663 += 1, R3609 += 1, R3569 += 1 };
  s8 -> s5 [0, 65535] { R3663 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R3663 += 1, R3609 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 63] { R3665 += 1, R3611 += 1 };
  s0 -> s0 [0, 65535] { R3664 += 1, R3665 += 1 };
  s0 -> s2 [0, 65535] { R3665 += 1, R3610 += 1, R3611 += 1 };
  s0 -> s3 [64, 64] { R3665 += 1, R3611 += 1 };
  s0 -> s1 [65, 65535] { R3665 += 1, R3611 += 1 };
  s1 -> s1 [0, 63] { R3665 += 1, R3611 += 1 };
  s1 -> s3 [64, 64] { R3665 += 1, R3611 += 1 };
  s1 -> s1 [65, 65535] { R3665 += 1, R3611 += 1 };
  s2 -> s1 [0, 63] { R3665 += 1, R3611 += 1 };
  s2 -> s2 [0, 65535] { R3665 += 1, R3610 += 1, R3611 += 1 };
  s2 -> s3 [64, 64] { R3665 += 1, R3611 += 1 };
  s2 -> s1 [65, 65535] { R3665 += 1, R3611 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R3665 += 1 };
  s3 -> s3 [0, 65535] { R3665 += 1, R3611 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3665 += 1 };
  accepting s3, s4, s5;
};
automaton uri_21 {
  init s0;
  s0 -> s1 [0, 65535] { R3667 += 1, R3613 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R3666 += 1, R3667 += 1 };
  s0 -> s2 [0, 65535] { R3667 += 1, R3612 += 1, R3613 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3667 += 1, R3613 += 1, R4 += 1 };
  s1 -> s4 [0, 65535] { R3667 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R3667 += 1, R3613 += 1, R4 += 1 };
  s2 -> s2 [0, 65535] { R3667 += 1, R3612 += 1, R3613 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3667 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_22 {
  init s0;
  s0 -> s1 [0, 36] { R3669 += 1, R3615 += 1, R3551 += 1 };
  s0 -> s2 [0, 65535] { R3669 += 1, R3614 += 1, R3615 += 1 };
  s0 -> s0 [0, 65535] { R3668 += 1, R3669 += 1 };
  s0 -> s3 [0, 65535] { R3669 += 1, R3615 += 1, R3550 += 1, R3551 += 1 };
  s0 -> s1 [38, 42] { R3669 += 1, R3615 += 1, R3551 += 1 };
  s0 -> s1 [44, 57] { R3669 += 1, R3615 += 1, R3551 += 1 };
  s0 -> s1 [59, 63] { R3669 += 1, R3615 += 1, R3551 += 1 };
  s0 -> s1 [65, 65535] { R3669 += 1, R3615 += 1, R3551 += 1 };
  s1 -> s1 [0, 36] { R3669 += 1, R3615 += 1, R3551 += 1 };
  s1 -> s1 [0, 65535] { R3669 += 1, R3615 += 1 };
  s1 -> s4 [0, 65535] { R3669 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [38, 42] { R3669 += 1, R3615 += 1, R3551 += 1 };
  s1 -> s1 [44, 57] { R3669 += 1, R3615 += 1, R3551 += 1 };
  s1 -> s1 [59, 63] { R3669 += 1, R3615 += 1, R3551 += 1 };
  s1 -> s1 [65, 65535] { R3669 += 1, R3615 += 1, R3551 += 1 };
  s2 -> s1 [0, 36] { R3669 += 1, R3615 += 1, R3551 += 1 };
  s2 -> s2 [0, 65535] { R3669 += 1, R3614 += 1, R3615 += 1 };
  s2 -> s3 [0, 65535] { R3669 += 1, R3615 += 1, R3550 += 1, R3551 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [38, 42] { R3669 += 1, R3615 += 1, R3551 += 1 };
  s2 -> s1 [44, 57] { R3669 += 1, R3615 += 1, R3551 += 1 };
  s2 -> s1 [59, 63] { R3669 += 1, R3615 += 1, R3551 += 1 };
  s2 -> s1 [65, 65535] { R3669 += 1, R3615 += 1, R3551 += 1 };
  s3 -> s1 [0, 36] { R3669 += 1, R3615 += 1, R3551 += 1 };
  s3 -> s3 [0, 65535] { R3669 += 1, R3615 += 1, R3550 += 1, R3551 += 1 };
  s3 -> s4 [0, 65535] { R3669 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [38, 42] { R3669 += 1, R3615 += 1, R3551 += 1 };
  s3 -> s1 [44, 57] { R3669 += 1, R3615 += 1, R3551 += 1 };
  s3 -> s1 [59, 63] { R3669 += 1, R3615 += 1, R3551 += 1 };
  s3 -> s1 [65, 65535] { R3669 += 1, R3615 += 1, R3551 += 1 };
  s4 -> s4 [0, 65535] { R3669 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_23 {
  init s0;
  s0 -> s1 [0, 65535] { R3671 += 1, R3616 += 1, R3617 += 1 };
  s0 -> s2 [0, 65535] { R3671 += 1, R3617 += 1, R3552 += 1, R3553 += 1 };
  s0 -> s0 [0, 65535] { R3670 += 1, R3671 += 1 };
  s0 -> s3 [0, 65535] { R3671 += 1, R3617 += 1, R3553 += 1, R1 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R3671 += 1, R3616 += 1, R3617 += 1 };
  s1 -> s2 [0, 65535] { R3671 += 1, R3617 += 1, R3552 += 1, R3553 += 1 };
  s1 -> s3 [0, 65535] { R3671 += 1, R3617 += 1, R3553 += 1, R1 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R3671 += 1 };
  s2 -> s2 [0, 65535] { R3671 += 1, R3617 += 1, R3552 += 1, R3553 += 1 };
  s2 -> s3 [0, 65535] { R3671 += 1, R3617 += 1, R3553 += 1, R1 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R3671 += 1 };
  s3 -> s6 [0, 65535] { R3671 += 1, R3617 += 1 };
  s3 -> s3 [0, 65535] { R3671 += 1, R3617 += 1, R3553 += 1, R1 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3671 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R3671 += 1 };
  s6 -> s6 [0, 65535] { R3671 += 1, R3617 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_24 {
  init s0;
  s0 -> s1 [0, 43] { R3673 += 1, R3619 += 1, R3571 += 1 };
  s0 -> s2 [0, 65535] { R3673 += 1, R3618 += 1, R3619 += 1 };
  s0 -> s0 [0, 65535] { R3672 += 1, R3673 += 1 };
  s0 -> s3 [0, 65535] { R3673 += 1, R3619 += 1, R3570 += 1, R3571 += 1 };
  s0 -> s1 [45, 64] { R3673 += 1, R3619 += 1, R3571 += 1 };
  s0 -> s1 [91, 65535] { R3673 += 1, R3619 += 1, R3571 += 1 };
  s1 -> s1 [0, 43] { R3673 += 1, R3619 += 1, R3571 += 1 };
  s1 -> s1 [0, 65535] { R3673 += 1, R3619 += 1 };
  s1 -> s4 [0, 65535] { R3673 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [45, 64] { R3673 += 1, R3619 += 1, R3571 += 1 };
  s1 -> s1 [91, 65535] { R3673 += 1, R3619 += 1, R3571 += 1 };
  s2 -> s1 [0, 43] { R3673 += 1, R3619 += 1, R3571 += 1 };
  s2 -> s2 [0, 65535] { R3673 += 1, R3618 += 1, R3619 += 1 };
  s2 -> s3 [0, 65535] { R3673 += 1, R3619 += 1, R3570 += 1, R3571 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [45, 64] { R3673 += 1, R3619 += 1, R3571 += 1 };
  s2 -> s1 [91, 65535] { R3673 += 1, R3619 += 1, R3571 += 1 };
  s3 -> s1 [0, 43] { R3673 += 1, R3619 += 1, R3571 += 1 };
  s3 -> s4 [0, 65535] { R3673 += 1 };
  s3 -> s3 [0, 65535] { R3673 += 1, R3619 += 1, R3570 += 1, R3571 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [45, 64] { R3673 += 1, R3619 += 1, R3571 += 1 };
  s3 -> s1 [91, 65535] { R3673 += 1, R3619 += 1, R3571 += 1 };
  s4 -> s4 [0, 65535] { R3673 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_25 {
  init s0;
  s0 -> s1 [0, 65535] { R3675 += 1, R3621 += 1, R3573 += 1, R0 += 1 };
  s0 -> s2 [0, 65535] { R3675 += 1, R3620 += 1, R3621 += 1 };
  s0 -> s0 [0, 65535] { R3674 += 1, R3675 += 1 };
  s0 -> s3 [0, 65535] { R3675 += 1, R3621 += 1, R3572 += 1, R3573 += 1 };
  s1 -> s1 [0, 65535] { R3675 += 1, R3621 += 1, R3573 += 1, R0 += 1 };
  s1 -> s6 [0, 65535] { R3675 += 1, R3621 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R3675 += 1 };
  s2 -> s1 [0, 65535] { R3675 += 1, R3621 += 1, R3573 += 1, R0 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3675 += 1, R3620 += 1, R3621 += 1 };
  s2 -> s3 [0, 65535] { R3675 += 1, R3621 += 1, R3572 += 1, R3573 += 1 };
  s3 -> s1 [0, 65535] { R3675 += 1, R3621 += 1, R3573 += 1, R0 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R3675 += 1 };
  s3 -> s3 [0, 65535] { R3675 += 1, R3621 += 1, R3572 += 1, R3573 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3675 += 1 };
  s6 -> s6 [0, 65535] { R3675 += 1, R3621 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R3675 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_26 {
  init s0;
  s0 -> s1 [0, 57] { R3677 += 1, R3623 += 1, R3575 += 1 };
  s0 -> s2 [0, 65535] { R3677 += 1, R3622 += 1, R3623 += 1 };
  s0 -> s3 [0, 65535] { R3677 += 1, R3623 += 1, R3574 += 1, R3575 += 1 };
  s0 -> s0 [0, 65535] { R3676 += 1, R3677 += 1 };
  s0 -> s4 [0, 65535] { R3677 += 1, R3623 += 1, R3575 += 1, R9 += 1 };
  s0 -> s5 [58, 58] { R3677 += 1, R3623 += 1, R3575 += 1 };
  s0 -> s1 [59, 65535] { R3677 += 1, R3623 += 1, R3575 += 1 };
  s1 -> s1 [0, 57] { R3677 += 1, R3623 += 1, R3575 += 1 };
  s1 -> s6 [0, 65535] { R3677 += 1 };
  s1 -> s1 [0, 65535] { R3677 += 1, R3623 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s5 [58, 58] { R3677 += 1, R3623 += 1, R3575 += 1 };
  s1 -> s1 [59, 65535] { R3677 += 1, R3623 += 1, R3575 += 1 };
  s2 -> s1 [0, 57] { R3677 += 1, R3623 += 1, R3575 += 1 };
  s2 -> s2 [0, 65535] { R3677 += 1, R3622 += 1, R3623 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s3 [0, 65535] { R3677 += 1, R3623 += 1, R3574 += 1, R3575 += 1 };
  s2 -> s4 [0, 65535] { R3677 += 1, R3623 += 1, R3575 += 1, R9 += 1 };
  s2 -> s5 [58, 58] { R3677 += 1, R3623 += 1, R3575 += 1 };
  s2 -> s1 [59, 65535] { R3677 += 1, R3623 += 1, R3575 += 1 };
  s3 -> s1 [0, 57] { R3677 += 1, R3623 += 1, R3575 += 1 };
  s3 -> s6 [0, 65535] { R3677 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R3677 += 1, R3623 += 1, R3574 += 1, R3575 += 1 };
  s3 -> s4 [0, 65535] { R3677 += 1, R3623 += 1, R3575 += 1, R9 += 1 };
  s3 -> s5 [58, 58] { R3677 += 1, R3623 += 1, R3575 += 1 };
  s3 -> s1 [59, 65535] { R3677 += 1, R3623 += 1, R3575 += 1 };
  s4 -> s1 [0, 57] { R3677 += 1, R3623 += 1, R3575 += 1 };
  s4 -> s6 [0, 65535] { R3677 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R3677 += 1, R3623 += 1 };
  s4 -> s4 [0, 65535] { R3677 += 1, R3623 += 1, R3575 += 1, R9 += 1 };
  s4 -> s5 [58, 58] { R3677 += 1, R3623 += 1, R3575 += 1 };
  s4 -> s1 [59, 65535] { R3677 += 1, R3623 += 1, R3575 += 1 };
  s5 -> s5 [0, 65535] { R3677 += 1, R3623 += 1, R3575 += 1 };
  s6 -> s6 [0, 65535] { R3677 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R3677 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R3677 += 1, R3623 += 1 };
  accepting s3, s4, s8, s2, s6, s1, s7, s0;
};
automaton uri_27 {
  init s0;
  s0 -> s1 [0, 90] { R3679 += 1, R3625 += 1, R3577 += 1, R3535 += 1 };
  s0 -> s2 [0, 65535] { R3679 += 1, R3625 += 1, R3577 += 1, R3534 += 1, R3535 += 1 };
  s0 -> s0 [0, 65535] { R3678 += 1, R3679 += 1 };
  s0 -> s3 [0, 65535] { R3679 += 1, R3624 += 1, R3625 += 1 };
  s0 -> s4 [0, 65535] { R3679 += 1, R3625 += 1, R3576 += 1, R3577 += 1 };
  s0 -> s5 [91, 91] { R3679 += 1, R3625 += 1, R3577 += 1, R3535 += 1 };
  s0 -> s1 [92, 65535] { R3679 += 1, R3625 += 1, R3577 += 1, R3535 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s8 [0, 65535] { R3679 += 1, R3625 += 1 };
  s1 -> s7 [0, 65535] { R3679 += 1 };
  s1 -> s1 [0, 65535] { R3679 += 1, R3625 += 1, R3577 += 1, R3535 += 1 };
  s1 -> s9 [0, 65535] { R3679 += 1, R3625 += 1, R3577 += 1 };
  s2 -> s1 [0, 90] { R3679 += 1, R3625 += 1, R3577 += 1, R3535 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s8 [0, 65535] { R3679 += 1, R3625 += 1 };
  s2 -> s7 [0, 65535] { R3679 += 1 };
  s2 -> s2 [0, 65535] { R3679 += 1, R3625 += 1, R3577 += 1, R3534 += 1, R3535 += 1 };
  s2 -> s5 [91, 91] { R3679 += 1, R3625 += 1, R3577 += 1, R3535 += 1 };
  s2 -> s1 [92, 65535] { R3679 += 1, R3625 += 1, R3577 += 1, R3535 += 1 };
  s3 -> s1 [0, 90] { R3679 += 1, R3625 += 1, R3577 += 1, R3535 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R3679 += 1, R3625 += 1, R3577 += 1, R3534 += 1, R3535 += 1 };
  s3 -> s3 [0, 65535] { R3679 += 1, R3624 += 1, R3625 += 1 };
  s3 -> s4 [0, 65535] { R3679 += 1, R3625 += 1, R3576 += 1, R3577 += 1 };
  s3 -> s5 [91, 91] { R3679 += 1, R3625 += 1, R3577 += 1, R3535 += 1 };
  s3 -> s1 [92, 65535] { R3679 += 1, R3625 += 1, R3577 += 1, R3535 += 1 };
  s4 -> s1 [0, 90] { R3679 += 1, R3625 += 1, R3577 += 1, R3535 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R3679 += 1 };
  s4 -> s2 [0, 65535] { R3679 += 1, R3625 += 1, R3577 += 1, R3534 += 1, R3535 += 1 };
  s4 -> s4 [0, 65535] { R3679 += 1, R3625 += 1, R3576 += 1, R3577 += 1 };
  s4 -> s5 [91, 91] { R3679 += 1, R3625 += 1, R3577 += 1, R3535 += 1 };
  s4 -> s1 [92, 65535] { R3679 += 1, R3625 += 1, R3577 += 1, R3535 += 1 };
  s5 -> s1 [0, 65535] { R3679 += 1, R3625 += 1, R3577 += 1, R3535 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3679 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R3679 += 1, R3625 += 1 };
  s8 -> s7 [0, 65535] { R3679 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s8 [0, 65535] { R3679 += 1, R3625 += 1 };
  s9 -> s7 [0, 65535] { R3679 += 1 };
  s9 -> s9 [0, 65535] { R3679 += 1, R3625 += 1, R3577 += 1 };
  accepting s3, s4, s8, s2, s9, s6, s1, s7, s0;
};
automaton uri_28 {
  init s0;
  s0 -> s1 [0, 65535] { R3681 += 1, R3627 += 1, R3578 += 1, R3579 += 1 };
  s0 -> s0 [0, 65535] { R3680 += 1, R3681 += 1 };
  s0 -> s2 [0, 65535] { R3681 += 1, R3626 += 1, R3627 += 1 };
  s0 -> s3 [0, 65535] { R3681 += 1, R3627 += 1, R3579 += 1, R3537 += 1, R7 += 1 };
  s0 -> s4 [0, 65535] { R3681 += 1, R3627 += 1, R3579 += 1, R3536 += 1, R3537 += 1 };
  s1 -> s1 [0, 65535] { R3681 += 1, R3627 += 1, R3578 += 1, R3579 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R3681 += 1 };
  s1 -> s3 [0, 65535] { R3681 += 1, R3627 += 1, R3579 += 1, R3537 += 1, R7 += 1 };
  s1 -> s4 [0, 65535] { R3681 += 1, R3627 += 1, R3579 += 1, R3536 += 1, R3537 += 1 };
  s2 -> s1 [0, 65535] { R3681 += 1, R3627 += 1, R3578 += 1, R3579 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3681 += 1, R3626 += 1, R3627 += 1 };
  s2 -> s3 [0, 65535] { R3681 += 1, R3627 += 1, R3579 += 1, R3537 += 1, R7 += 1 };
  s2 -> s4 [0, 65535] { R3681 += 1, R3627 += 1, R3579 += 1, R3536 += 1, R3537 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s8 [0, 65535] { R3681 += 1, R3627 += 1, R3579 += 1 };
  s3 -> s6 [0, 65535] { R3681 += 1, R3627 += 1 };
  s3 -> s7 [0, 65535] { R3681 += 1 };
  s3 -> s3 [0, 65535] { R3681 += 1, R3627 += 1, R3579 += 1, R3537 += 1, R7 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3681 += 1, R3627 += 1 };
  s4 -> s7 [0, 65535] { R3681 += 1 };
  s4 -> s3 [0, 65535] { R3681 += 1, R3627 += 1, R3579 += 1, R3537 += 1, R7 += 1 };
  s4 -> s4 [0, 65535] { R3681 += 1, R3627 += 1, R3579 += 1, R3536 += 1, R3537 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3681 += 1, R3627 += 1 };
  s6 -> s7 [0, 65535] { R3681 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R3681 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s8 [0, 65535] { R3681 += 1, R3627 += 1, R3579 += 1 };
  s8 -> s6 [0, 65535] { R3681 += 1, R3627 += 1 };
  s8 -> s7 [0, 65535] { R3681 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
};
constraint R2 - R2463 = 1 && R3 = R3569 && R4 = R3579 && R5 = R3609 && R6 = R3681 && R11 = 0 && R2462 = 0 && R3074 = 0 && R3075 - R3568 = -1 && R3380 = 0 && R3381 = R3627 && R3538 = 0 && R3539 = 1 && R3540 = 0 && R3541 = 1 && R3546 = 0 && R3547 - R3568 = -1 && R3550 = 0 && R3551 = 1 && R3552 = 0 && R3553 = 1 && R3554 = R3568 && R3555 = R3569 && R3556 = R3568 && R3557 = R3569 && R3558 = R3568 && R3559 = R3569 && R3560 = R3568 && R3561 = R3569 && R3562 = R3568 && R3563 = R3569 && R3564 = R3568 && R3565 = R3569 && R3566 = R3568 && R3567 = R3569 && R3570 = 2 && R3571 = R3579 && R3572 = 2 && R3573 = R3579 && R3574 = 2 && R3575 = R3579 && R3576 = 2 && R3577 = R3579 && R3578 = 2 && R3580 - R3627 = 1 && R3581 = R3609 && R3582 - R3627 = 1 && R3583 = R3609 && R3584 - R3627 = 1 && R3585 = R3609 && R3586 - R3627 = 1 && R3587 = R3609 && R3588 - R3627 = 1 && R3589 = R3609 && R3590 - R3627 = 1 && R3591 = R3609 && R3592 - R3627 = 1 && R3593 = R3609 && R3594 - R3627 = 1 && R3595 = R3609 && R3596 - R3627 = 1 && R3597 = R3609 && R3598 - R3627 = 1 && R3599 = R3609 && R3600 - R3627 = 1 && R3601 = R3609 && R3602 - R3627 = 1 && R3603 = R3609 && R3604 - R3627 = 1 && R3605 = R3609 && R3606 - R3627 = 1 && R3607 = R3609 && R3608 - R3627 = 1 && R3610 = 0 && R3611 = R3627 && R3612 = 0 && R3613 = R3627 && R3614 = 0 && R3615 = R3627 && R3616 = 0 && R3617 = R3627 && R3618 = 0 && R3619 = R3627 && R3620 = 0 && R3621 = R3627 && R3622 = 0 && R3623 = R3627 && R3624 = 0 && R3625 = R3627 && R3626 = 0 && R3628 = 10 && R3629 = R3681 && R3630 = 10 && R3631 = R3681 && R3632 = 10 && R3633 = R3681 && R3634 = 10 && R3635 = R3681 && R3636 = 10 && R3637 = R3681 && R3638 = 10 && R3639 = R3681 && R3640 = 10 && R3641 = R3681 && R3642 = 10 && R3643 = R3681 && R3644 = 10 && R3645 = R3681 && R3646 = 10 && R3647 = R3681 && R3648 = 10 && R3649 = R3681 && R3650 = 10 && R3651 = R3681 && R3652 = 10 && R3653 = R3681 && R3654 = 10 && R3655 = R3681 && R3656 = 10 && R3657 = R3681 && R3658 = 10 && R3659 = R3681 && R3660 = 10 && R3661 = R3681 && R3662 = 10 && R3663 = R3681 && R3664 = 10 && R3665 = R3681 && R3666 = 10 && R3667 = R3681 && R3668 = 10 && R3669 = R3681 && R3670 = 10 && R3671 = R3681 && R3672 = 10 && R3673 = R3681 && R3674 = 10 && R3675 = R3681 && R3676 = 10 && R3677 = R3681 && R3678 = 10 && R3679 = R3681 && R3680 = 10 && R0 != 0 && R1 != 0 && R9 < 1 && R12 < 0 && R2458 < 1 && -1 < R2463 && R3568 - R3569 < 1 && 0 < R3568 && 1 < R3579 && R3627 < R3609 && -1 < R3627 && 9 < R3681 && (R2463 != 0 || R3532 = 0 || (R3542 = 0 && R3543 = 0)) && (R2463 != 0 || R3532 = 0 || (R3544 = 0 && R3545 = 0)) && (R3534 != 0 || ((R7 != 0 || ((R0 != R3535 || R3535 = 1 || R3535 < 0) && (R0 = R3535 || R3535 = 1 || R0 < 1))) && (R7 = 0 || ((R0 != R3535 || R3535 = 1 || R3535 < 0) && (R3535 != 1 || -1 < R0) && (R0 = R3535 || R3535 = 1))))) && (R3536 != 0 || ((R7 != 0 || ((R0 != R3537 || R3537 = 1 || R3537 < 0) && (R0 = R3537 || R3537 = 1 || R0 < 1))) && (R7 = 0 || ((R0 != R3537 || R3537 = 1 || R3537 < 0) && (R3537 != 1 || -1 < R0) && (R0 = R3537 || R3537 = 1))))) && (R3542 != 0 || R2463 = R3543 || R2463 < 1) && (R3544 != 0 || R2463 = R3545 || R2463 < 1) && (R3548 != 0 || R3549 - R3568 = -1 || (R3533 = 0 && R3568 = 1)) && (R3534 = 0 || (R7 = 0 && R0 < 0)) && (R3536 = 0 || (R7 = 0 && R0 < 0)) && (R3542 = 0 || R2463 < 1) && (R3544 = 0 || R2463 < 1) && (R3548 = 0 || (R3533 = 0 && R3568 = 1));
// End of Parikh automata intersection problem
