// Parikh automata intersection problem, generated by OSTRICH+
counter int R0, R1, R11, R12, R16, R17, R2, R3, R4, R481, R482, R483, R484, R485, R486, R487, R488, R489, R490, R491, R492, R493, R494, R495, R496, R497, R498, R499, R5, R500, R501, R502, R503, R504, R505, R506, R507, R508, R509, R510, R511, R512, R513, R514, R515, R516, R517, R518, R519, R520, R521, R522, R523, R524, R525, R526, R527, R528, R529, R530, R531, R532, R533, R534, R535, R536, R537, R538, R539, R540, R541, R542, R543, R544, R545, R546, R547, R548, R549, R550, R551, R552, R553, R554, R555, R556, R557, R558, R559, R560, R561, R562, R563, R564, R565, R566, R567, R568, R569, R570, R571, R572, R573, R574, R575, R576, R577, R578, R579, R580, R581, R582, R583, R584, R585, R586, R587, R588, R589, R590, R591, R592, R593, R594, R595, R596, R597, R598, R599, R6, R600, R601, R602, R603, R604, R605, R606, R607, R608, R609, R610, R611, R612, R613, R614, R615, R616, R617, R618, R619, R620, R621, R622, R623, R624, R625, R626, R627, R628, R629, R630, R631, R632, R633, R634, R635, R636, R637, R638, R639, R640, R641, R642, R643, R7, R8;
synchronised {  // Automata constraining c11
automaton c11_0 {
  init s0;
  s0 -> s1 [115, 115];
  accepting s1;
};
};
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R6 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 45] { R597 += 1 };
  s0 -> s0 [0, 65535] { R596 += 1, R597 += 1 };
  s0 -> s2 [46, 46] { R597 += 1 };
  s0 -> s3 [47, 47] { R597 += 1 };
  s0 -> s1 [48, 65535] { R597 += 1 };
  s1 -> s1 [0, 45] { R597 += 1 };
  s1 -> s2 [46, 46] { R597 += 1 };
  s1 -> s3 [47, 47] { R597 += 1 };
  s1 -> s1 [48, 65535] { R597 += 1 };
  s2 -> s1 [0, 45] { R597 += 1 };
  s2 -> s2 [46, 46] { R597 += 1 };
  s2 -> s3 [47, 47] { R597 += 1 };
  s2 -> s1 [48, 114] { R597 += 1 };
  s2 -> s8 [115, 115] { R597 += 1 };
  s2 -> s1 [116, 65535] { R597 += 1 };
  s3 -> s3 [0, 45] { R597 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s4 [46, 46] { R597 += 1 };
  s3 -> s3 [47, 65535] { R597 += 1 };
  s4 -> s3 [0, 45] { R597 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s4 [46, 46] { R597 += 1 };
  s4 -> s3 [47, 114] { R597 += 1 };
  s4 -> s5 [115, 115] { R597 += 1 };
  s4 -> s3 [116, 65535] { R597 += 1 };
  s5 -> s3 [0, 45] { R597 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s4 [46, 46] { R597 += 1 };
  s5 -> s3 [47, 110] { R597 += 1 };
  s5 -> s6 [111, 111] { R597 += 1 };
  s5 -> s3 [112, 65535] { R597 += 1 };
  s6 -> s3 [0, 45] { R597 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s4 [46, 46] { R597 += 1 };
  s6 -> s3 [47, 98] { R597 += 1 };
  s6 -> s7 [99, 99] { R597 += 1 };
  s6 -> s3 [100, 65535] { R597 += 1 };
  s7 -> s3 [0, 45] { R597 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s4 [46, 46] { R597 += 1 };
  s7 -> s3 [47, 106] { R597 += 1 };
  s7 -> s3 [108, 65535] { R597 += 1 };
  s8 -> s1 [0, 45] { R597 += 1 };
  s8 -> s2 [46, 46] { R597 += 1 };
  s8 -> s3 [47, 47] { R597 += 1 };
  s8 -> s1 [48, 110] { R597 += 1 };
  s8 -> s9 [111, 111] { R597 += 1 };
  s8 -> s1 [112, 65535] { R597 += 1 };
  s9 -> s1 [0, 45] { R597 += 1 };
  s9 -> s2 [46, 46] { R597 += 1 };
  s9 -> s3 [47, 47] { R597 += 1 };
  s9 -> s1 [48, 98] { R597 += 1 };
  s9 -> s10 [99, 99] { R597 += 1 };
  s9 -> s1 [100, 65535] { R597 += 1 };
  s10 -> s1 [0, 45] { R597 += 1 };
  s10 -> s2 [46, 46] { R597 += 1 };
  s10 -> s3 [47, 47] { R597 += 1 };
  s10 -> s1 [48, 106] { R597 += 1 };
  s10 -> s1 [108, 65535] { R597 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_3 {
  init s0;
  s0 -> s0 [0, 65535] { R598 += 1, R599 += 1 };
  s0 -> s1 [0, 65535] { R599 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R599 += 1, R5 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s1 [0, 46] { R601 += 1, R17 += 1 };
  s0 -> s2 [0, 65535] { R601 += 1, R16 += 1, R17 += 1 };
  s0 -> s0 [0, 65535] { R600 += 1, R601 += 1 };
  s0 -> s3 [47, 47] { R601 += 1 };
  s0 -> s1 [48, 65535] { R601 += 1, R17 += 1 };
  s1 -> s1 [0, 46] { R601 += 1, R17 += 1 };
  s1 -> s3 [47, 47] { R601 += 1 };
  s1 -> s1 [48, 65535] { R601 += 1, R17 += 1 };
  s2 -> s1 [0, 46] { R601 += 1, R17 += 1 };
  s2 -> s2 [0, 65535] { R601 += 1, R16 += 1, R17 += 1 };
  s2 -> s3 [47, 47] { R601 += 1 };
  s2 -> s1 [48, 65535] { R601 += 1, R17 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R601 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 65535] { R603 += 1, R492 += 1, R493 += 1 };
  s0 -> s0 [0, 65535] { R602 += 1, R603 += 1 };
  s0 -> s2 [0, 65535] { R603 += 1, R493 += 1, R1 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R603 += 1, R492 += 1, R493 += 1 };
  s1 -> s2 [0, 65535] { R603 += 1, R493 += 1, R1 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R603 += 1 };
  s2 -> s2 [0, 65535] { R603 += 1, R493 += 1, R1 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R603 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_6 {
  init s0;
  s0 -> s1 [0, 63] { R605 += 1, R557 += 1 };
  s0 -> s2 [0, 65535] { R605 += 1, R556 += 1, R557 += 1 };
  s0 -> s0 [0, 65535] { R604 += 1, R605 += 1 };
  s0 -> s3 [64, 64] { R605 += 1, R557 += 1 };
  s0 -> s1 [65, 65535] { R605 += 1, R557 += 1 };
  s1 -> s1 [0, 63] { R605 += 1, R557 += 1 };
  s1 -> s3 [64, 64] { R605 += 1, R557 += 1 };
  s1 -> s1 [65, 65535] { R605 += 1, R557 += 1 };
  s2 -> s1 [0, 63] { R605 += 1, R557 += 1 };
  s2 -> s2 [0, 65535] { R605 += 1, R556 += 1, R557 += 1 };
  s2 -> s3 [64, 64] { R605 += 1, R557 += 1 };
  s2 -> s1 [65, 65535] { R605 += 1, R557 += 1 };
  s3 -> s4 [0, 65535] { R605 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R605 += 1, R557 += 1 };
  s4 -> s4 [0, 65535] { R605 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5;
};
automaton uri_7 {
  init s0;
  s0 -> s0 [0, 65535] { R606 += 1, R607 += 1 };
  s0 -> s1 [0, 65535] { R607 += 1, R559 += 1, R4 += 1 };
  s0 -> s2 [0, 65535] { R607 += 1, R558 += 1, R559 += 1 };
  s1 -> s1 [0, 65535] { R607 += 1, R559 += 1, R4 += 1 };
  s1 -> s4 [0, 65535] { R607 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R607 += 1, R559 += 1, R4 += 1 };
  s2 -> s2 [0, 65535] { R607 += 1, R558 += 1, R559 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R607 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_8 {
  init s0;
  s0 -> s1 [0, 36] { R609 += 1, R561 += 1, R489 += 1 };
  s0 -> s2 [0, 65535] { R609 += 1, R560 += 1, R561 += 1 };
  s0 -> s0 [0, 65535] { R608 += 1, R609 += 1 };
  s0 -> s3 [0, 65535] { R609 += 1, R561 += 1, R488 += 1, R489 += 1 };
  s0 -> s1 [38, 42] { R609 += 1, R561 += 1, R489 += 1 };
  s0 -> s1 [44, 57] { R609 += 1, R561 += 1, R489 += 1 };
  s0 -> s1 [59, 63] { R609 += 1, R561 += 1, R489 += 1 };
  s0 -> s1 [65, 65535] { R609 += 1, R561 += 1, R489 += 1 };
  s1 -> s1 [0, 36] { R609 += 1, R561 += 1, R489 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R609 += 1 };
  s1 -> s1 [0, 65535] { R609 += 1, R561 += 1 };
  s1 -> s1 [38, 42] { R609 += 1, R561 += 1, R489 += 1 };
  s1 -> s1 [44, 57] { R609 += 1, R561 += 1, R489 += 1 };
  s1 -> s1 [59, 63] { R609 += 1, R561 += 1, R489 += 1 };
  s1 -> s1 [65, 65535] { R609 += 1, R561 += 1, R489 += 1 };
  s2 -> s1 [0, 36] { R609 += 1, R561 += 1, R489 += 1 };
  s2 -> s2 [0, 65535] { R609 += 1, R560 += 1, R561 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R609 += 1, R561 += 1, R488 += 1, R489 += 1 };
  s2 -> s1 [38, 42] { R609 += 1, R561 += 1, R489 += 1 };
  s2 -> s1 [44, 57] { R609 += 1, R561 += 1, R489 += 1 };
  s2 -> s1 [59, 63] { R609 += 1, R561 += 1, R489 += 1 };
  s2 -> s1 [65, 65535] { R609 += 1, R561 += 1, R489 += 1 };
  s3 -> s1 [0, 36] { R609 += 1, R561 += 1, R489 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R609 += 1 };
  s3 -> s3 [0, 65535] { R609 += 1, R561 += 1, R488 += 1, R489 += 1 };
  s3 -> s1 [38, 42] { R609 += 1, R561 += 1, R489 += 1 };
  s3 -> s1 [44, 57] { R609 += 1, R561 += 1, R489 += 1 };
  s3 -> s1 [59, 63] { R609 += 1, R561 += 1, R489 += 1 };
  s3 -> s1 [65, 65535] { R609 += 1, R561 += 1, R489 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R609 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_9 {
  init s0;
  s0 -> s1 [0, 65535] { R611 += 1, R563 += 1, R490 += 1, R491 += 1 };
  s0 -> s2 [0, 65535] { R611 += 1, R563 += 1, R491 += 1, R0 += 1 };
  s0 -> s3 [0, 65535] { R611 += 1, R562 += 1, R563 += 1 };
  s0 -> s0 [0, 65535] { R610 += 1, R611 += 1 };
  s1 -> s1 [0, 65535] { R611 += 1, R563 += 1, R490 += 1, R491 += 1 };
  s1 -> s2 [0, 65535] { R611 += 1, R563 += 1, R491 += 1, R0 += 1 };
  s1 -> s6 [0, 65535] { R611 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R611 += 1, R563 += 1, R491 += 1, R0 += 1 };
  s2 -> s5 [0, 65535] { R611 += 1, R563 += 1 };
  s2 -> s6 [0, 65535] { R611 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R611 += 1, R563 += 1, R490 += 1, R491 += 1 };
  s3 -> s2 [0, 65535] { R611 += 1, R563 += 1, R491 += 1, R0 += 1 };
  s3 -> s3 [0, 65535] { R611 += 1, R562 += 1, R563 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R611 += 1, R563 += 1 };
  s5 -> s6 [0, 65535] { R611 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R611 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_10 {
  init s0;
  s0 -> s1 [0, 43] { R613 += 1, R565 += 1, R525 += 1 };
  s0 -> s2 [0, 65535] { R613 += 1, R564 += 1, R565 += 1 };
  s0 -> s0 [0, 65535] { R612 += 1, R613 += 1 };
  s0 -> s3 [0, 65535] { R613 += 1, R565 += 1, R524 += 1, R525 += 1 };
  s0 -> s1 [45, 64] { R613 += 1, R565 += 1, R525 += 1 };
  s0 -> s4 [83, 83] { R613 += 1, R565 += 1, R525 += 1 };
  s0 -> s1 [84, 65535] { R613 += 1, R565 += 1, R525 += 1 };
  s1 -> s1 [0, 43] { R613 += 1, R565 += 1, R525 += 1 };
  s1 -> s1 [45, 64] { R613 += 1, R565 += 1, R525 += 1 };
  s1 -> s4 [83, 83] { R613 += 1, R565 += 1, R525 += 1 };
  s1 -> s1 [84, 65535] { R613 += 1, R565 += 1, R525 += 1 };
  s2 -> s1 [0, 43] { R613 += 1, R565 += 1, R525 += 1 };
  s2 -> s2 [0, 65535] { R613 += 1, R564 += 1, R565 += 1 };
  s2 -> s3 [0, 65535] { R613 += 1, R565 += 1, R524 += 1, R525 += 1 };
  s2 -> s1 [45, 64] { R613 += 1, R565 += 1, R525 += 1 };
  s2 -> s4 [83, 83] { R613 += 1, R565 += 1, R525 += 1 };
  s2 -> s1 [84, 65535] { R613 += 1, R565 += 1, R525 += 1 };
  s3 -> s1 [0, 43] { R613 += 1, R565 += 1, R525 += 1 };
  s3 -> s3 [0, 65535] { R613 += 1, R565 += 1, R524 += 1, R525 += 1 };
  s3 -> s1 [45, 64] { R613 += 1, R565 += 1, R525 += 1 };
  s3 -> s4 [83, 83] { R613 += 1, R565 += 1, R525 += 1 };
  s3 -> s1 [84, 65535] { R613 += 1, R565 += 1, R525 += 1 };
  s4 -> s4 [0, 43] { R613 += 1, R565 += 1, R525 += 1 };
  s4 -> s5 [0, 65535] { R613 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R613 += 1, R565 += 1 };
  s4 -> s4 [45, 64] { R613 += 1, R565 += 1, R525 += 1 };
  s4 -> s4 [83, 65535] { R613 += 1, R565 += 1, R525 += 1 };
  s5 -> s5 [0, 65535] { R613 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s4, s5, s6;
};
automaton uri_11 {
  init s0;
  s0 -> s1 [0, 65535] { R615 += 1, R567 += 1, R527 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R614 += 1, R615 += 1 };
  s0 -> s2 [0, 65535] { R615 += 1, R566 += 1, R567 += 1 };
  s0 -> s3 [0, 65535] { R615 += 1, R567 += 1, R526 += 1, R527 += 1 };
  s1 -> s1 [0, 65535] { R615 += 1, R567 += 1, R527 += 1, R3 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R615 += 1, R567 += 1 };
  s1 -> s5 [0, 65535] { R615 += 1 };
  s2 -> s1 [0, 65535] { R615 += 1, R567 += 1, R527 += 1, R3 += 1 };
  s2 -> s2 [0, 65535] { R615 += 1, R566 += 1, R567 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R615 += 1, R567 += 1, R526 += 1, R527 += 1 };
  s3 -> s1 [0, 65535] { R615 += 1, R567 += 1, R527 += 1, R3 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R615 += 1, R567 += 1, R526 += 1, R527 += 1 };
  s3 -> s5 [0, 65535] { R615 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R615 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R615 += 1, R567 += 1 };
  s6 -> s5 [0, 65535] { R615 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_12 {
  init s0;
  s0 -> s1 [0, 57] { R617 += 1, R569 += 1, R529 += 1 };
  s0 -> s2 [0, 65535] { R617 += 1, R568 += 1, R569 += 1 };
  s0 -> s3 [0, 65535] { R617 += 1, R569 += 1, R528 += 1, R529 += 1 };
  s0 -> s4 [0, 65535] { R617 += 1, R569 += 1, R529 += 1, R11 += 1 };
  s0 -> s0 [0, 65535] { R616 += 1, R617 += 1 };
  s0 -> s5 [58, 58] { R617 += 1, R569 += 1, R529 += 1 };
  s0 -> s1 [59, 65535] { R617 += 1, R569 += 1, R529 += 1 };
  s1 -> s1 [0, 57] { R617 += 1, R569 += 1, R529 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R617 += 1 };
  s1 -> s1 [0, 65535] { R617 += 1, R569 += 1 };
  s1 -> s5 [58, 58] { R617 += 1, R569 += 1, R529 += 1 };
  s1 -> s1 [59, 65535] { R617 += 1, R569 += 1, R529 += 1 };
  s2 -> s1 [0, 57] { R617 += 1, R569 += 1, R529 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R617 += 1, R568 += 1, R569 += 1 };
  s2 -> s3 [0, 65535] { R617 += 1, R569 += 1, R528 += 1, R529 += 1 };
  s2 -> s4 [0, 65535] { R617 += 1, R569 += 1, R529 += 1, R11 += 1 };
  s2 -> s5 [58, 58] { R617 += 1, R569 += 1, R529 += 1 };
  s2 -> s1 [59, 65535] { R617 += 1, R569 += 1, R529 += 1 };
  s3 -> s1 [0, 57] { R617 += 1, R569 += 1, R529 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R617 += 1, R569 += 1, R528 += 1, R529 += 1 };
  s3 -> s7 [0, 65535] { R617 += 1 };
  s3 -> s4 [0, 65535] { R617 += 1, R569 += 1, R529 += 1, R11 += 1 };
  s3 -> s5 [58, 58] { R617 += 1, R569 += 1, R529 += 1 };
  s3 -> s1 [59, 65535] { R617 += 1, R569 += 1, R529 += 1 };
  s4 -> s1 [0, 57] { R617 += 1, R569 += 1, R529 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R617 += 1 };
  s4 -> s4 [0, 65535] { R617 += 1, R569 += 1, R529 += 1, R11 += 1 };
  s4 -> s8 [0, 65535] { R617 += 1, R569 += 1 };
  s4 -> s5 [58, 58] { R617 += 1, R569 += 1, R529 += 1 };
  s4 -> s1 [59, 65535] { R617 += 1, R569 += 1, R529 += 1 };
  s5 -> s5 [0, 65535] { R617 += 1, R569 += 1, R529 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R617 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R617 += 1 };
  s8 -> s8 [0, 65535] { R617 += 1, R569 += 1 };
  accepting s3, s4, s8, s2, s6, s1, s7, s0;
};
automaton uri_13 {
  init s0;
  s0 -> s1 [0, 82] { R619 += 1, R571 += 1, R531 += 1 };
  s0 -> s2 [0, 65535] { R619 += 1, R571 += 1, R530 += 1, R531 += 1 };
  s0 -> s0 [0, 65535] { R618 += 1, R619 += 1 };
  s0 -> s3 [0, 65535] { R619 += 1, R570 += 1, R571 += 1 };
  s0 -> s4 [0, 65535] { R619 += 1, R571 += 1, R531 += 1, R12 += 1 };
  s0 -> s5 [83, 83] { R619 += 1, R571 += 1, R531 += 1 };
  s0 -> s1 [84, 65535] { R619 += 1, R571 += 1, R531 += 1 };
  s1 -> s1 [0, 82] { R619 += 1, R571 += 1, R531 += 1 };
  s1 -> s6 [0, 65535] { R619 += 1 };
  s1 -> s1 [0, 65535] { R619 += 1, R571 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s5 [83, 83] { R619 += 1, R571 += 1, R531 += 1 };
  s1 -> s1 [84, 65535] { R619 += 1, R571 += 1, R531 += 1 };
  s2 -> s1 [0, 82] { R619 += 1, R571 += 1, R531 += 1 };
  s2 -> s2 [0, 65535] { R619 += 1, R571 += 1, R530 += 1, R531 += 1 };
  s2 -> s6 [0, 65535] { R619 += 1 };
  s2 -> s4 [0, 65535] { R619 += 1, R571 += 1, R531 += 1, R12 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s5 [83, 83] { R619 += 1, R571 += 1, R531 += 1 };
  s2 -> s1 [84, 65535] { R619 += 1, R571 += 1, R531 += 1 };
  s3 -> s1 [0, 82] { R619 += 1, R571 += 1, R531 += 1 };
  s3 -> s2 [0, 65535] { R619 += 1, R571 += 1, R530 += 1, R531 += 1 };
  s3 -> s3 [0, 65535] { R619 += 1, R570 += 1, R571 += 1 };
  s3 -> s4 [0, 65535] { R619 += 1, R571 += 1, R531 += 1, R12 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s5 [83, 83] { R619 += 1, R571 += 1, R531 += 1 };
  s3 -> s1 [84, 65535] { R619 += 1, R571 += 1, R531 += 1 };
  s4 -> s1 [0, 82] { R619 += 1, R571 += 1, R531 += 1 };
  s4 -> s6 [0, 65535] { R619 += 1 };
  s4 -> s4 [0, 65535] { R619 += 1, R571 += 1, R531 += 1, R12 += 1 };
  s4 -> s7 [0, 65535] { R619 += 1, R571 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s5 [83, 83] { R619 += 1, R571 += 1, R531 += 1 };
  s4 -> s1 [84, 65535] { R619 += 1, R571 += 1, R531 += 1 };
  s5 -> s5 [0, 65535] { R619 += 1, R571 += 1, R531 += 1 };
  s6 -> s6 [0, 65535] { R619 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s6 [0, 65535] { R619 += 1 };
  s7 -> s7 [0, 65535] { R619 += 1, R571 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s2, s6, s1, s7, s0;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 90] { R621 += 1, R573 += 1, R533 += 1, R485 += 1 };
  s0 -> s2 [0, 65535] { R621 += 1, R572 += 1, R573 += 1 };
  s0 -> s0 [0, 65535] { R620 += 1, R621 += 1 };
  s0 -> s3 [0, 65535] { R621 += 1, R573 += 1, R532 += 1, R533 += 1 };
  s0 -> s4 [0, 65535] { R621 += 1, R573 += 1, R533 += 1, R484 += 1, R485 += 1 };
  s0 -> s5 [91, 91] { R621 += 1, R573 += 1, R533 += 1, R485 += 1 };
  s0 -> s1 [92, 65535] { R621 += 1, R573 += 1, R533 += 1, R485 += 1 };
  s1 -> s1 [0, 65535] { R621 += 1, R573 += 1, R533 += 1, R485 += 1 };
  s1 -> s6 [0, 65535] { R621 += 1, R573 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s8 [0, 65535] { R621 += 1 };
  s1 -> s9 [0, 65535] { R621 += 1, R573 += 1, R533 += 1 };
  s2 -> s1 [0, 90] { R621 += 1, R573 += 1, R533 += 1, R485 += 1 };
  s2 -> s2 [0, 65535] { R621 += 1, R572 += 1, R573 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s3 [0, 65535] { R621 += 1, R573 += 1, R532 += 1, R533 += 1 };
  s2 -> s4 [0, 65535] { R621 += 1, R573 += 1, R533 += 1, R484 += 1, R485 += 1 };
  s2 -> s5 [91, 91] { R621 += 1, R573 += 1, R533 += 1, R485 += 1 };
  s2 -> s1 [92, 65535] { R621 += 1, R573 += 1, R533 += 1, R485 += 1 };
  s3 -> s1 [0, 90] { R621 += 1, R573 += 1, R533 += 1, R485 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s8 [0, 65535] { R621 += 1 };
  s3 -> s3 [0, 65535] { R621 += 1, R573 += 1, R532 += 1, R533 += 1 };
  s3 -> s4 [0, 65535] { R621 += 1, R573 += 1, R533 += 1, R484 += 1, R485 += 1 };
  s3 -> s5 [91, 91] { R621 += 1, R573 += 1, R533 += 1, R485 += 1 };
  s3 -> s1 [92, 65535] { R621 += 1, R573 += 1, R533 += 1, R485 += 1 };
  s4 -> s1 [0, 90] { R621 += 1, R573 += 1, R533 += 1, R485 += 1 };
  s4 -> s6 [0, 65535] { R621 += 1, R573 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R621 += 1 };
  s4 -> s4 [0, 65535] { R621 += 1, R573 += 1, R533 += 1, R484 += 1, R485 += 1 };
  s4 -> s5 [91, 91] { R621 += 1, R573 += 1, R533 += 1, R485 += 1 };
  s4 -> s1 [92, 65535] { R621 += 1, R573 += 1, R533 += 1, R485 += 1 };
  s5 -> s1 [0, 65535] { R621 += 1, R573 += 1, R533 += 1, R485 += 1 };
  s6 -> s6 [0, 65535] { R621 += 1, R573 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R621 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R621 += 1 };
  s9 -> s6 [0, 65535] { R621 += 1, R573 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s8 [0, 65535] { R621 += 1 };
  s9 -> s9 [0, 65535] { R621 += 1, R573 += 1, R533 += 1 };
  accepting s3, s4, s8, s2, s9, s6, s1, s7, s0;
};
automaton uri_15 {
  init s0;
  s0 -> s0 [0, 65535] { R622 += 1, R623 += 1 };
  s0 -> s1 [0, 65535] { R623 += 1, R575 += 1, R535 += 1, R486 += 1, R487 += 1 };
  s0 -> s2 [0, 65535] { R623 += 1, R575 += 1, R535 += 1, R487 += 1, R7 += 1 };
  s0 -> s3 [0, 65535] { R623 += 1, R575 += 1, R534 += 1, R535 += 1 };
  s0 -> s4 [0, 65535] { R623 += 1, R574 += 1, R575 += 1 };
  s1 -> s7 [0, 65535] { R623 += 1, R575 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R623 += 1 };
  s1 -> s1 [0, 65535] { R623 += 1, R575 += 1, R535 += 1, R486 += 1, R487 += 1 };
  s1 -> s2 [0, 65535] { R623 += 1, R575 += 1, R535 += 1, R487 += 1, R7 += 1 };
  s2 -> s7 [0, 65535] { R623 += 1, R575 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R623 += 1 };
  s2 -> s2 [0, 65535] { R623 += 1, R575 += 1, R535 += 1, R487 += 1, R7 += 1 };
  s2 -> s8 [0, 65535] { R623 += 1, R575 += 1, R535 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R623 += 1 };
  s3 -> s1 [0, 65535] { R623 += 1, R575 += 1, R535 += 1, R486 += 1, R487 += 1 };
  s3 -> s2 [0, 65535] { R623 += 1, R575 += 1, R535 += 1, R487 += 1, R7 += 1 };
  s3 -> s3 [0, 65535] { R623 += 1, R575 += 1, R534 += 1, R535 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R623 += 1, R575 += 1, R535 += 1, R486 += 1, R487 += 1 };
  s4 -> s2 [0, 65535] { R623 += 1, R575 += 1, R535 += 1, R487 += 1, R7 += 1 };
  s4 -> s3 [0, 65535] { R623 += 1, R575 += 1, R534 += 1, R535 += 1 };
  s4 -> s4 [0, 65535] { R623 += 1, R574 += 1, R575 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R623 += 1 };
  s7 -> s7 [0, 65535] { R623 += 1, R575 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R623 += 1 };
  s8 -> s7 [0, 65535] { R623 += 1, R575 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R623 += 1 };
  s8 -> s8 [0, 65535] { R623 += 1, R575 += 1, R535 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 65535] { R625 += 1, R577 += 1, R537 += 1, R501 += 1, R483 += 1 };
  s0 -> s2 [0, 65535] { R625 += 1, R577 += 1, R537 += 1, R500 += 1, R501 += 1 };
  s0 -> s3 [0, 65535] { R625 += 1, R577 += 1, R536 += 1, R537 += 1 };
  s0 -> s0 [0, 65535] { R624 += 1, R625 += 1 };
  s0 -> s4 [0, 65535] { R625 += 1, R576 += 1, R577 += 1 };
  s1 -> s1 [0, 65535] { R625 += 1, R577 += 1, R537 += 1, R501 += 1, R483 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R625 += 1, R577 += 1 };
  s1 -> s6 [0, 65535] { R625 += 1 };
  s1 -> s8 [0, 65535] { R625 += 1, R577 += 1, R537 += 1 };
  s2 -> s1 [0, 65535] { R625 += 1, R577 += 1, R537 += 1, R501 += 1, R483 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R625 += 1, R577 += 1, R537 += 1, R500 += 1, R501 += 1 };
  s2 -> s7 [0, 65535] { R625 += 1, R577 += 1 };
  s2 -> s6 [0, 65535] { R625 += 1 };
  s3 -> s1 [0, 65535] { R625 += 1, R577 += 1, R537 += 1, R501 += 1, R483 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R625 += 1, R577 += 1, R537 += 1, R500 += 1, R501 += 1 };
  s3 -> s3 [0, 65535] { R625 += 1, R577 += 1, R536 += 1, R537 += 1 };
  s3 -> s6 [0, 65535] { R625 += 1 };
  s4 -> s1 [0, 65535] { R625 += 1, R577 += 1, R537 += 1, R501 += 1, R483 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R625 += 1, R577 += 1, R537 += 1, R500 += 1, R501 += 1 };
  s4 -> s3 [0, 65535] { R625 += 1, R577 += 1, R536 += 1, R537 += 1 };
  s4 -> s4 [0, 65535] { R625 += 1, R576 += 1, R577 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R625 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R625 += 1, R577 += 1 };
  s7 -> s6 [0, 65535] { R625 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s7 [0, 65535] { R625 += 1, R577 += 1 };
  s8 -> s6 [0, 65535] { R625 += 1 };
  s8 -> s8 [0, 65535] { R625 += 1, R577 += 1, R537 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_17 {
  init s0;
  s0 -> s1 [0, 82] { R627 += 1, R579 += 1, R539 += 1, R503 += 1 };
  s0 -> s0 [0, 65535] { R626 += 1, R627 += 1 };
  s0 -> s2 [0, 65535] { R627 += 1, R579 += 1, R539 += 1, R502 += 1, R503 += 1 };
  s0 -> s3 [0, 65535] { R627 += 1, R578 += 1, R579 += 1 };
  s0 -> s4 [0, 65535] { R627 += 1, R579 += 1, R538 += 1, R539 += 1 };
  s0 -> s5 [83, 83] { R627 += 1, R579 += 1, R539 += 1, R503 += 1 };
  s0 -> s6 [83, 83] { R627 += 1, R579 += 1, R539 += 1, R503 += 1 };
  s0 -> s1 [86, 65535] { R627 += 1, R579 += 1, R539 += 1, R503 += 1 };
  s1 -> s1 [0, 82] { R627 += 1, R579 += 1, R539 += 1, R503 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s8 [0, 65535] { R627 += 1 };
  s1 -> s1 [0, 65535] { R627 += 1, R579 += 1, R539 += 1 };
  s1 -> s9 [0, 65535] { R627 += 1, R579 += 1 };
  s1 -> s5 [83, 83] { R627 += 1, R579 += 1, R539 += 1, R503 += 1 };
  s1 -> s6 [83, 83] { R627 += 1, R579 += 1, R539 += 1, R503 += 1 };
  s1 -> s1 [86, 65535] { R627 += 1, R579 += 1, R539 += 1, R503 += 1 };
  s2 -> s1 [0, 82] { R627 += 1, R579 += 1, R539 += 1, R503 += 1 };
  s2 -> s2 [0, 65535] { R627 += 1, R579 += 1, R539 += 1, R502 += 1, R503 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s8 [0, 65535] { R627 += 1 };
  s2 -> s9 [0, 65535] { R627 += 1, R579 += 1 };
  s2 -> s5 [83, 83] { R627 += 1, R579 += 1, R539 += 1, R503 += 1 };
  s2 -> s6 [83, 83] { R627 += 1, R579 += 1, R539 += 1, R503 += 1 };
  s2 -> s1 [86, 65535] { R627 += 1, R579 += 1, R539 += 1, R503 += 1 };
  s3 -> s1 [0, 82] { R627 += 1, R579 += 1, R539 += 1, R503 += 1 };
  s3 -> s2 [0, 65535] { R627 += 1, R579 += 1, R539 += 1, R502 += 1, R503 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R627 += 1, R578 += 1, R579 += 1 };
  s3 -> s4 [0, 65535] { R627 += 1, R579 += 1, R538 += 1, R539 += 1 };
  s3 -> s5 [83, 83] { R627 += 1, R579 += 1, R539 += 1, R503 += 1 };
  s3 -> s6 [83, 83] { R627 += 1, R579 += 1, R539 += 1, R503 += 1 };
  s3 -> s1 [86, 65535] { R627 += 1, R579 += 1, R539 += 1, R503 += 1 };
  s4 -> s1 [0, 82] { R627 += 1, R579 += 1, R539 += 1, R503 += 1 };
  s4 -> s2 [0, 65535] { R627 += 1, R579 += 1, R539 += 1, R502 += 1, R503 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R627 += 1 };
  s4 -> s4 [0, 65535] { R627 += 1, R579 += 1, R538 += 1, R539 += 1 };
  s4 -> s5 [83, 83] { R627 += 1, R579 += 1, R539 += 1, R503 += 1 };
  s4 -> s6 [83, 83] { R627 += 1, R579 += 1, R539 += 1, R503 += 1 };
  s4 -> s1 [86, 65535] { R627 += 1, R579 += 1, R539 += 1, R503 += 1 };
  s5 -> s5 [0, 65535] { R627 += 1, R579 += 1, R539 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R627 += 1 };
  s5 -> s9 [0, 65535] { R627 += 1, R579 += 1 };
  s6 -> s6 [0, 83] { R627 += 1, R579 += 1, R539 += 1, R503 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R627 += 1, R579 += 1, R539 += 1 };
  s6 -> s8 [0, 65535] { R627 += 1 };
  s6 -> s9 [0, 65535] { R627 += 1, R579 += 1 };
  s6 -> s6 [86, 65535] { R627 += 1, R579 += 1, R539 += 1, R503 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R627 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s8 [0, 65535] { R627 += 1 };
  s9 -> s9 [0, 65535] { R627 += 1, R579 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 82] { R629 += 1, R581 += 1, R541 += 1, R509 += 1 };
  s0 -> s2 [0, 65535] { R629 += 1, R581 += 1, R540 += 1, R541 += 1 };
  s0 -> s3 [0, 65535] { R629 += 1, R581 += 1, R541 += 1, R508 += 1, R509 += 1 };
  s0 -> s0 [0, 65535] { R628 += 1, R629 += 1 };
  s0 -> s4 [0, 65535] { R629 += 1, R580 += 1, R581 += 1 };
  s0 -> s5 [83, 83] { R629 += 1, R581 += 1, R541 += 1, R509 += 1 };
  s0 -> s1 [84, 65535] { R629 += 1, R581 += 1, R541 += 1, R509 += 1 };
  s1 -> s1 [0, 82] { R629 += 1, R581 += 1, R541 += 1, R509 += 1 };
  s1 -> s5 [83, 83] { R629 += 1, R581 += 1, R541 += 1, R509 += 1 };
  s1 -> s1 [84, 65535] { R629 += 1, R581 += 1, R541 += 1, R509 += 1 };
  s2 -> s1 [0, 82] { R629 += 1, R581 += 1, R541 += 1, R509 += 1 };
  s2 -> s2 [0, 65535] { R629 += 1, R581 += 1, R540 += 1, R541 += 1 };
  s2 -> s3 [0, 65535] { R629 += 1, R581 += 1, R541 += 1, R508 += 1, R509 += 1 };
  s2 -> s5 [83, 83] { R629 += 1, R581 += 1, R541 += 1, R509 += 1 };
  s2 -> s1 [84, 65535] { R629 += 1, R581 += 1, R541 += 1, R509 += 1 };
  s3 -> s1 [0, 82] { R629 += 1, R581 += 1, R541 += 1, R509 += 1 };
  s3 -> s3 [0, 65535] { R629 += 1, R581 += 1, R541 += 1, R508 += 1, R509 += 1 };
  s3 -> s5 [83, 83] { R629 += 1, R581 += 1, R541 += 1, R509 += 1 };
  s3 -> s1 [84, 65535] { R629 += 1, R581 += 1, R541 += 1, R509 += 1 };
  s4 -> s1 [0, 82] { R629 += 1, R581 += 1, R541 += 1, R509 += 1 };
  s4 -> s2 [0, 65535] { R629 += 1, R581 += 1, R540 += 1, R541 += 1 };
  s4 -> s3 [0, 65535] { R629 += 1, R581 += 1, R541 += 1, R508 += 1, R509 += 1 };
  s4 -> s4 [0, 65535] { R629 += 1, R580 += 1, R581 += 1 };
  s4 -> s5 [83, 83] { R629 += 1, R581 += 1, R541 += 1, R509 += 1 };
  s4 -> s1 [84, 65535] { R629 += 1, R581 += 1, R541 += 1, R509 += 1 };
  s5 -> s5 [0, 65535] { R629 += 1, R581 += 1, R541 += 1, R509 += 1 };
  s5 -> s6 [0, 65535] { R629 += 1 };
  s5 -> s7 [0, 65535] { R629 += 1, R581 += 1, R541 += 1 };
  s5 -> s8 [0, 65535] { R629 += 1, R581 += 1 };
  s5 -> s9 [0, 65535];
  s6 -> s6 [0, 65535] { R629 += 1 };
  s6 -> s9 [0, 65535];
  s7 -> s6 [0, 65535] { R629 += 1 };
  s7 -> s7 [0, 65535] { R629 += 1, R581 += 1, R541 += 1 };
  s7 -> s8 [0, 65535] { R629 += 1, R581 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s6 [0, 65535] { R629 += 1 };
  s8 -> s8 [0, 65535] { R629 += 1, R581 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  accepting s8, s5, s9, s6, s7;
};
automaton uri_19 {
  init s0;
  s0 -> s1 [0, 65535] { R631 += 1, R583 += 1, R543 += 1, R510 += 1, R511 += 1 };
  s0 -> s2 [0, 65535] { R631 += 1, R582 += 1, R583 += 1 };
  s0 -> s0 [0, 65535] { R630 += 1, R631 += 1 };
  s0 -> s3 [0, 65535] { R631 += 1, R583 += 1, R542 += 1, R543 += 1 };
  s0 -> s4 [0, 65535] { R631 += 1, R583 += 1, R543 += 1, R511 += 1, R2 += 1 };
  s1 -> s1 [0, 65535] { R631 += 1, R583 += 1, R543 += 1, R510 += 1, R511 += 1 };
  s1 -> s6 [0, 65535] { R631 += 1, R583 += 1 };
  s1 -> s4 [0, 65535] { R631 += 1, R583 += 1, R543 += 1, R511 += 1, R2 += 1 };
  s1 -> s7 [0, 65535] { R631 += 1 };
  s1 -> s8 [0, 65535];
  s2 -> s1 [0, 65535] { R631 += 1, R583 += 1, R543 += 1, R510 += 1, R511 += 1 };
  s2 -> s2 [0, 65535] { R631 += 1, R582 += 1, R583 += 1 };
  s2 -> s3 [0, 65535] { R631 += 1, R583 += 1, R542 += 1, R543 += 1 };
  s2 -> s4 [0, 65535] { R631 += 1, R583 += 1, R543 += 1, R511 += 1, R2 += 1 };
  s2 -> s8 [0, 65535];
  s3 -> s1 [0, 65535] { R631 += 1, R583 += 1, R543 += 1, R510 += 1, R511 += 1 };
  s3 -> s3 [0, 65535] { R631 += 1, R583 += 1, R542 += 1, R543 += 1 };
  s3 -> s4 [0, 65535] { R631 += 1, R583 += 1, R543 += 1, R511 += 1, R2 += 1 };
  s3 -> s7 [0, 65535] { R631 += 1 };
  s3 -> s8 [0, 65535];
  s4 -> s5 [0, 65535] { R631 += 1, R583 += 1, R543 += 1 };
  s4 -> s6 [0, 65535] { R631 += 1, R583 += 1 };
  s4 -> s4 [0, 65535] { R631 += 1, R583 += 1, R543 += 1, R511 += 1, R2 += 1 };
  s4 -> s7 [0, 65535] { R631 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R631 += 1, R583 += 1, R543 += 1 };
  s5 -> s6 [0, 65535] { R631 += 1, R583 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s7 [0, 65535] { R631 += 1 };
  s6 -> s6 [0, 65535] { R631 += 1, R583 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s7 [0, 65535] { R631 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R631 += 1 };
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 82] { R633 += 1, R585 += 1, R545 += 1, R513 += 1 };
  s0 -> s2 [0, 65535] { R633 += 1, R585 += 1, R545 += 1, R513 += 1, R8 += 1 };
  s0 -> s3 [0, 65535] { R633 += 1, R585 += 1, R545 += 1, R512 += 1, R513 += 1 };
  s0 -> s4 [0, 65535] { R633 += 1, R585 += 1, R544 += 1, R545 += 1 };
  s0 -> s5 [0, 65535] { R633 += 1, R584 += 1, R585 += 1 };
  s0 -> s0 [0, 65535] { R632 += 1, R633 += 1 };
  s0 -> s6 [83, 83] { R633 += 1, R585 += 1, R545 += 1, R513 += 1 };
  s0 -> s1 [84, 65535] { R633 += 1, R585 += 1, R545 += 1, R513 += 1 };
  s1 -> s1 [0, 82] { R633 += 1, R585 += 1, R545 += 1, R513 += 1 };
  s1 -> s9 [0, 65535] { R633 += 1, R585 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s8 [0, 65535] { R633 += 1 };
  s1 -> s1 [0, 65535] { R633 += 1, R585 += 1, R545 += 1 };
  s1 -> s6 [83, 83] { R633 += 1, R585 += 1, R545 += 1, R513 += 1 };
  s1 -> s1 [84, 65535] { R633 += 1, R585 += 1, R545 += 1, R513 += 1 };
  s2 -> s1 [0, 82] { R633 += 1, R585 += 1, R545 += 1, R513 += 1 };
  s2 -> s2 [0, 65535] { R633 += 1, R585 += 1, R545 += 1, R513 += 1, R8 += 1 };
  s2 -> s9 [0, 65535] { R633 += 1, R585 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s10 [0, 65535] { R633 += 1, R585 += 1, R545 += 1 };
  s2 -> s8 [0, 65535] { R633 += 1 };
  s2 -> s6 [83, 83] { R633 += 1, R585 += 1, R545 += 1, R513 += 1 };
  s2 -> s1 [84, 65535] { R633 += 1, R585 += 1, R545 += 1, R513 += 1 };
  s3 -> s1 [0, 82] { R633 += 1, R585 += 1, R545 += 1, R513 += 1 };
  s3 -> s2 [0, 65535] { R633 += 1, R585 += 1, R545 += 1, R513 += 1, R8 += 1 };
  s3 -> s3 [0, 65535] { R633 += 1, R585 += 1, R545 += 1, R512 += 1, R513 += 1 };
  s3 -> s9 [0, 65535] { R633 += 1, R585 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s8 [0, 65535] { R633 += 1 };
  s3 -> s6 [83, 83] { R633 += 1, R585 += 1, R545 += 1, R513 += 1 };
  s3 -> s1 [84, 65535] { R633 += 1, R585 += 1, R545 += 1, R513 += 1 };
  s4 -> s1 [0, 82] { R633 += 1, R585 += 1, R545 += 1, R513 += 1 };
  s4 -> s2 [0, 65535] { R633 += 1, R585 += 1, R545 += 1, R513 += 1, R8 += 1 };
  s4 -> s3 [0, 65535] { R633 += 1, R585 += 1, R545 += 1, R512 += 1, R513 += 1 };
  s4 -> s4 [0, 65535] { R633 += 1, R585 += 1, R544 += 1, R545 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R633 += 1 };
  s4 -> s6 [83, 83] { R633 += 1, R585 += 1, R545 += 1, R513 += 1 };
  s4 -> s1 [84, 65535] { R633 += 1, R585 += 1, R545 += 1, R513 += 1 };
  s5 -> s1 [0, 82] { R633 += 1, R585 += 1, R545 += 1, R513 += 1 };
  s5 -> s2 [0, 65535] { R633 += 1, R585 += 1, R545 += 1, R513 += 1, R8 += 1 };
  s5 -> s3 [0, 65535] { R633 += 1, R585 += 1, R545 += 1, R512 += 1, R513 += 1 };
  s5 -> s4 [0, 65535] { R633 += 1, R585 += 1, R544 += 1, R545 += 1 };
  s5 -> s5 [0, 65535] { R633 += 1, R584 += 1, R585 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s6 [83, 83] { R633 += 1, R585 += 1, R545 += 1, R513 += 1 };
  s5 -> s1 [84, 65535] { R633 += 1, R585 += 1, R545 += 1, R513 += 1 };
  s6 -> s6 [0, 65535] { R633 += 1, R585 += 1, R545 += 1, R513 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R633 += 1 };
  s9 -> s9 [0, 65535] { R633 += 1, R585 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s8 [0, 65535] { R633 += 1 };
  s10 -> s9 [0, 65535] { R633 += 1, R585 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s10 [0, 65535] { R633 += 1, R585 += 1, R545 += 1 };
  s10 -> s8 [0, 65535] { R633 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s1, s7, s0, s10;
};
automaton uri_21 {
  init s0;
  s0 -> s1 [0, 82] { R635 += 1, R587 += 1, R547 += 1, R515 += 1, R495 += 1 };
  s0 -> s2 [0, 65535] { R635 += 1, R587 += 1, R546 += 1, R547 += 1 };
  s0 -> s3 [0, 65535] { R635 += 1, R587 += 1, R547 += 1, R514 += 1, R515 += 1 };
  s0 -> s4 [0, 65535] { R635 += 1, R587 += 1, R547 += 1, R515 += 1, R494 += 1, R495 += 1 };
  s0 -> s5 [0, 65535] { R635 += 1, R586 += 1, R587 += 1 };
  s0 -> s0 [0, 65535] { R634 += 1, R635 += 1 };
  s0 -> s1 [84, 65535] { R635 += 1, R587 += 1, R547 += 1, R515 += 1, R495 += 1 };
  s1 -> s1 [0, 82] { R635 += 1, R587 += 1, R547 += 1, R515 += 1, R495 += 1 };
  s1 -> s7 [0, 65535] { R635 += 1 };
  s1 -> s8 [0, 65535] { R635 += 1, R587 += 1, R547 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s9 [0, 65535] { R635 += 1, R587 += 1 };
  s1 -> s1 [0, 65535] { R635 += 1, R587 += 1, R547 += 1, R515 += 1 };
  s1 -> s1 [84, 65535] { R635 += 1, R587 += 1, R547 += 1, R515 += 1, R495 += 1 };
  s2 -> s1 [0, 82] { R635 += 1, R587 += 1, R547 += 1, R515 += 1, R495 += 1 };
  s2 -> s7 [0, 65535] { R635 += 1 };
  s2 -> s2 [0, 65535] { R635 += 1, R587 += 1, R546 += 1, R547 += 1 };
  s2 -> s3 [0, 65535] { R635 += 1, R587 += 1, R547 += 1, R514 += 1, R515 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [0, 65535] { R635 += 1, R587 += 1, R547 += 1, R515 += 1, R494 += 1, R495 += 1 };
  s2 -> s1 [84, 65535] { R635 += 1, R587 += 1, R547 += 1, R515 += 1, R495 += 1 };
  s3 -> s1 [0, 82] { R635 += 1, R587 += 1, R547 += 1, R515 += 1, R495 += 1 };
  s3 -> s7 [0, 65535] { R635 += 1 };
  s3 -> s3 [0, 65535] { R635 += 1, R587 += 1, R547 += 1, R514 += 1, R515 += 1 };
  s3 -> s9 [0, 65535] { R635 += 1, R587 += 1 };
  s3 -> s4 [0, 65535] { R635 += 1, R587 += 1, R547 += 1, R515 += 1, R494 += 1, R495 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [84, 65535] { R635 += 1, R587 += 1, R547 += 1, R515 += 1, R495 += 1 };
  s4 -> s1 [0, 82] { R635 += 1, R587 += 1, R547 += 1, R515 += 1, R495 += 1 };
  s4 -> s7 [0, 65535] { R635 += 1 };
  s4 -> s8 [0, 65535] { R635 += 1, R587 += 1, R547 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s9 [0, 65535] { R635 += 1, R587 += 1 };
  s4 -> s4 [0, 65535] { R635 += 1, R587 += 1, R547 += 1, R515 += 1, R494 += 1, R495 += 1 };
  s4 -> s1 [84, 65535] { R635 += 1, R587 += 1, R547 += 1, R515 += 1, R495 += 1 };
  s5 -> s1 [0, 82] { R635 += 1, R587 += 1, R547 += 1, R515 += 1, R495 += 1 };
  s5 -> s2 [0, 65535] { R635 += 1, R587 += 1, R546 += 1, R547 += 1 };
  s5 -> s3 [0, 65535] { R635 += 1, R587 += 1, R547 += 1, R514 += 1, R515 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s4 [0, 65535] { R635 += 1, R587 += 1, R547 += 1, R515 += 1, R494 += 1, R495 += 1 };
  s5 -> s5 [0, 65535] { R635 += 1, R586 += 1, R587 += 1 };
  s5 -> s1 [84, 65535] { R635 += 1, R587 += 1, R547 += 1, R515 += 1, R495 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R635 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R635 += 1 };
  s8 -> s8 [0, 65535] { R635 += 1, R587 += 1, R547 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s9 [0, 65535] { R635 += 1, R587 += 1 };
  s9 -> s7 [0, 65535] { R635 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s9 [0, 65535] { R635 += 1, R587 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton uri_22 {
  init s0;
  s0 -> s1 [0, 65535] { R637 += 1, R589 += 1, R549 += 1, R517 += 1, R497 += 1, R481 += 1 };
  s0 -> s2 [0, 65535] { R637 += 1, R589 += 1, R548 += 1, R549 += 1 };
  s0 -> s0 [0, 65535] { R636 += 1, R637 += 1 };
  s0 -> s3 [0, 65535] { R637 += 1, R589 += 1, R549 += 1, R517 += 1, R496 += 1, R497 += 1 };
  s0 -> s4 [0, 65535] { R637 += 1, R588 += 1, R589 += 1 };
  s0 -> s5 [0, 65535] { R637 += 1, R589 += 1, R549 += 1, R516 += 1, R517 += 1 };
  s1 -> s1 [0, 65535] { R637 += 1, R589 += 1, R549 += 1, R517 += 1, R497 += 1, R481 += 1 };
  s1 -> s9 [0, 65535] { R637 += 1, R589 += 1, R549 += 1 };
  s1 -> s10 [0, 65535] { R637 += 1, R589 += 1, R549 += 1, R517 += 1 };
  s1 -> s6 [0, 65535] { R637 += 1 };
  s1 -> s7 [0, 65535] { R637 += 1, R589 += 1 };
  s1 -> s8 [0, 65535];
  s2 -> s1 [0, 65535] { R637 += 1, R589 += 1, R549 += 1, R517 += 1, R497 += 1, R481 += 1 };
  s2 -> s6 [0, 65535] { R637 += 1 };
  s2 -> s2 [0, 65535] { R637 += 1, R589 += 1, R548 += 1, R549 += 1 };
  s2 -> s3 [0, 65535] { R637 += 1, R589 += 1, R549 += 1, R517 += 1, R496 += 1, R497 += 1 };
  s2 -> s5 [0, 65535] { R637 += 1, R589 += 1, R549 += 1, R516 += 1, R517 += 1 };
  s2 -> s8 [0, 65535];
  s3 -> s1 [0, 65535] { R637 += 1, R589 += 1, R549 += 1, R517 += 1, R497 += 1, R481 += 1 };
  s3 -> s9 [0, 65535] { R637 += 1, R589 += 1, R549 += 1 };
  s3 -> s6 [0, 65535] { R637 += 1 };
  s3 -> s3 [0, 65535] { R637 += 1, R589 += 1, R549 += 1, R517 += 1, R496 += 1, R497 += 1 };
  s3 -> s7 [0, 65535] { R637 += 1, R589 += 1 };
  s3 -> s8 [0, 65535];
  s4 -> s1 [0, 65535] { R637 += 1, R589 += 1, R549 += 1, R517 += 1, R497 += 1, R481 += 1 };
  s4 -> s2 [0, 65535] { R637 += 1, R589 += 1, R548 += 1, R549 += 1 };
  s4 -> s3 [0, 65535] { R637 += 1, R589 += 1, R549 += 1, R517 += 1, R496 += 1, R497 += 1 };
  s4 -> s4 [0, 65535] { R637 += 1, R588 += 1, R589 += 1 };
  s4 -> s5 [0, 65535] { R637 += 1, R589 += 1, R549 += 1, R516 += 1, R517 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s1 [0, 65535] { R637 += 1, R589 += 1, R549 += 1, R517 += 1, R497 += 1, R481 += 1 };
  s5 -> s6 [0, 65535] { R637 += 1 };
  s5 -> s3 [0, 65535] { R637 += 1, R589 += 1, R549 += 1, R517 += 1, R496 += 1, R497 += 1 };
  s5 -> s7 [0, 65535] { R637 += 1, R589 += 1 };
  s5 -> s5 [0, 65535] { R637 += 1, R589 += 1, R549 += 1, R516 += 1, R517 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R637 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s6 [0, 65535] { R637 += 1 };
  s7 -> s7 [0, 65535] { R637 += 1, R589 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R637 += 1, R589 += 1, R549 += 1 };
  s9 -> s6 [0, 65535] { R637 += 1 };
  s9 -> s7 [0, 65535] { R637 += 1, R589 += 1 };
  s9 -> s8 [0, 65535];
  s10 -> s9 [0, 65535] { R637 += 1, R589 += 1, R549 += 1 };
  s10 -> s10 [0, 65535] { R637 += 1, R589 += 1, R549 += 1, R517 += 1 };
  s10 -> s6 [0, 65535] { R637 += 1 };
  s10 -> s7 [0, 65535] { R637 += 1, R589 += 1 };
  s10 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton uri_23 {
  init s0;
  s0 -> s1 [0, 83] { R639 += 1, R591 += 1, R551 += 1, R519 += 1, R499 += 1 };
  s0 -> s2 [0, 65535] { R639 += 1, R590 += 1, R591 += 1 };
  s0 -> s3 [0, 65535] { R639 += 1, R591 += 1, R551 += 1, R518 += 1, R519 += 1 };
  s0 -> s4 [0, 65535] { R639 += 1, R591 += 1, R550 += 1, R551 += 1 };
  s0 -> s0 [0, 65535] { R638 += 1, R639 += 1 };
  s0 -> s5 [0, 65535] { R639 += 1, R591 += 1, R551 += 1, R519 += 1, R498 += 1, R499 += 1 };
  s0 -> s1 [85, 65535] { R639 += 1, R591 += 1, R551 += 1, R519 += 1, R499 += 1 };
  s1 -> s1 [0, 83] { R639 += 1, R591 += 1, R551 += 1, R519 += 1, R499 += 1 };
  s1 -> s6 [0, 65535] { R639 += 1, R591 += 1 };
  s1 -> s7 [0, 65535] { R639 += 1, R591 += 1, R551 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s9 [0, 65535] { R639 += 1 };
  s1 -> s1 [0, 65535] { R639 += 1, R591 += 1, R551 += 1, R519 += 1 };
  s1 -> s1 [85, 65535] { R639 += 1, R591 += 1, R551 += 1, R519 += 1, R499 += 1 };
  s2 -> s1 [0, 83] { R639 += 1, R591 += 1, R551 += 1, R519 += 1, R499 += 1 };
  s2 -> s2 [0, 65535] { R639 += 1, R590 += 1, R591 += 1 };
  s2 -> s3 [0, 65535] { R639 += 1, R591 += 1, R551 += 1, R518 += 1, R519 += 1 };
  s2 -> s4 [0, 65535] { R639 += 1, R591 += 1, R550 += 1, R551 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s5 [0, 65535] { R639 += 1, R591 += 1, R551 += 1, R519 += 1, R498 += 1, R499 += 1 };
  s2 -> s1 [85, 65535] { R639 += 1, R591 += 1, R551 += 1, R519 += 1, R499 += 1 };
  s3 -> s1 [0, 83] { R639 += 1, R591 += 1, R551 += 1, R519 += 1, R499 += 1 };
  s3 -> s6 [0, 65535] { R639 += 1, R591 += 1 };
  s3 -> s3 [0, 65535] { R639 += 1, R591 += 1, R551 += 1, R518 += 1, R519 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s9 [0, 65535] { R639 += 1 };
  s3 -> s5 [0, 65535] { R639 += 1, R591 += 1, R551 += 1, R519 += 1, R498 += 1, R499 += 1 };
  s3 -> s1 [85, 65535] { R639 += 1, R591 += 1, R551 += 1, R519 += 1, R499 += 1 };
  s4 -> s1 [0, 83] { R639 += 1, R591 += 1, R551 += 1, R519 += 1, R499 += 1 };
  s4 -> s3 [0, 65535] { R639 += 1, R591 += 1, R551 += 1, R518 += 1, R519 += 1 };
  s4 -> s4 [0, 65535] { R639 += 1, R591 += 1, R550 += 1, R551 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s9 [0, 65535] { R639 += 1 };
  s4 -> s5 [0, 65535] { R639 += 1, R591 += 1, R551 += 1, R519 += 1, R498 += 1, R499 += 1 };
  s4 -> s1 [85, 65535] { R639 += 1, R591 += 1, R551 += 1, R519 += 1, R499 += 1 };
  s5 -> s1 [0, 83] { R639 += 1, R591 += 1, R551 += 1, R519 += 1, R499 += 1 };
  s5 -> s6 [0, 65535] { R639 += 1, R591 += 1 };
  s5 -> s7 [0, 65535] { R639 += 1, R591 += 1, R551 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s9 [0, 65535] { R639 += 1 };
  s5 -> s5 [0, 65535] { R639 += 1, R591 += 1, R551 += 1, R519 += 1, R498 += 1, R499 += 1 };
  s5 -> s1 [85, 65535] { R639 += 1, R591 += 1, R551 += 1, R519 += 1, R499 += 1 };
  s6 -> s6 [0, 65535] { R639 += 1, R591 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [0, 65535] { R639 += 1 };
  s7 -> s6 [0, 65535] { R639 += 1, R591 += 1 };
  s7 -> s7 [0, 65535] { R639 += 1, R591 += 1, R551 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R639 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R639 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton uri_24 {
  init s0;
  s0 -> s1 [0, 65535] { R641 += 1, R593 += 1, R552 += 1, R553 += 1 };
  s0 -> s2 [0, 65535] { R641 += 1, R592 += 1, R593 += 1 };
  s0 -> s3 [0, 65535] { R641 += 1, R593 += 1, R553 += 1, R520 += 1, R521 += 1 };
  s0 -> s4 [0, 65535] { R641 += 1, R593 += 1, R553 += 1, R521 += 1, R505 += 1, R482 += 1 };
  s0 -> s0 [0, 65535] { R640 += 1, R641 += 1 };
  s0 -> s5 [0, 65535] { R641 += 1, R593 += 1, R553 += 1, R521 += 1, R504 += 1, R505 += 1 };
  s1 -> s1 [0, 65535] { R641 += 1, R593 += 1, R552 += 1, R553 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [0, 65535] { R641 += 1, R593 += 1, R553 += 1, R520 += 1, R521 += 1 };
  s1 -> s8 [0, 65535] { R641 += 1 };
  s1 -> s4 [0, 65535] { R641 += 1, R593 += 1, R553 += 1, R521 += 1, R505 += 1, R482 += 1 };
  s1 -> s5 [0, 65535] { R641 += 1, R593 += 1, R553 += 1, R521 += 1, R504 += 1, R505 += 1 };
  s2 -> s1 [0, 65535] { R641 += 1, R593 += 1, R552 += 1, R553 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R641 += 1, R592 += 1, R593 += 1 };
  s2 -> s3 [0, 65535] { R641 += 1, R593 += 1, R553 += 1, R520 += 1, R521 += 1 };
  s2 -> s4 [0, 65535] { R641 += 1, R593 += 1, R553 += 1, R521 += 1, R505 += 1, R482 += 1 };
  s2 -> s5 [0, 65535] { R641 += 1, R593 += 1, R553 += 1, R521 += 1, R504 += 1, R505 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R641 += 1, R593 += 1, R553 += 1, R520 += 1, R521 += 1 };
  s3 -> s7 [0, 65535] { R641 += 1, R593 += 1 };
  s3 -> s8 [0, 65535] { R641 += 1 };
  s3 -> s4 [0, 65535] { R641 += 1, R593 += 1, R553 += 1, R521 += 1, R505 += 1, R482 += 1 };
  s3 -> s5 [0, 65535] { R641 += 1, R593 += 1, R553 += 1, R521 += 1, R504 += 1, R505 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R641 += 1, R593 += 1 };
  s4 -> s8 [0, 65535] { R641 += 1 };
  s4 -> s4 [0, 65535] { R641 += 1, R593 += 1, R553 += 1, R521 += 1, R505 += 1, R482 += 1 };
  s4 -> s10 [0, 65535] { R641 += 1, R593 += 1, R553 += 1, R521 += 1 };
  s4 -> s9 [0, 65535] { R641 += 1, R593 += 1, R553 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R641 += 1, R593 += 1 };
  s5 -> s8 [0, 65535] { R641 += 1 };
  s5 -> s4 [0, 65535] { R641 += 1, R593 += 1, R553 += 1, R521 += 1, R505 += 1, R482 += 1 };
  s5 -> s9 [0, 65535] { R641 += 1, R593 += 1, R553 += 1 };
  s5 -> s5 [0, 65535] { R641 += 1, R593 += 1, R553 += 1, R521 += 1, R504 += 1, R505 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R641 += 1, R593 += 1 };
  s7 -> s8 [0, 65535] { R641 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R641 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s7 [0, 65535] { R641 += 1, R593 += 1 };
  s9 -> s8 [0, 65535] { R641 += 1 };
  s9 -> s9 [0, 65535] { R641 += 1, R593 += 1, R553 += 1 };
  s10 -> s6 [0, 65535];
  s10 -> s7 [0, 65535] { R641 += 1, R593 += 1 };
  s10 -> s8 [0, 65535] { R641 += 1 };
  s10 -> s10 [0, 65535] { R641 += 1, R593 += 1, R553 += 1, R521 += 1 };
  s10 -> s9 [0, 65535] { R641 += 1, R593 += 1, R553 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton uri_25 {
  init s0;
  s0 -> s1 [0, 82] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s0 -> s0 [0, 65535] { R642 += 1, R643 += 1 };
  s0 -> s2 [0, 65535] { R643 += 1, R595 += 1, R554 += 1, R555 += 1 };
  s0 -> s3 [0, 65535] { R643 += 1, R594 += 1, R595 += 1 };
  s0 -> s4 [0, 65535] { R643 += 1, R595 += 1, R555 += 1, R522 += 1, R523 += 1 };
  s0 -> s5 [0, 65535] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R506 += 1, R507 += 1 };
  s0 -> s6 [83, 83] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s0 -> s7 [83, 83] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s0 -> s8 [85, 85] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s0 -> s1 [86, 65535] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s1 -> s1 [0, 82] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s1 -> s6 [83, 83] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s1 -> s7 [83, 83] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s1 -> s8 [85, 85] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s1 -> s1 [86, 65535] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s2 -> s1 [0, 82] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s2 -> s2 [0, 65535] { R643 += 1, R595 += 1, R554 += 1, R555 += 1 };
  s2 -> s4 [0, 65535] { R643 += 1, R595 += 1, R555 += 1, R522 += 1, R523 += 1 };
  s2 -> s5 [0, 65535] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R506 += 1, R507 += 1 };
  s2 -> s6 [83, 83] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s2 -> s7 [83, 83] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s2 -> s8 [85, 85] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s2 -> s1 [86, 65535] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s3 -> s1 [0, 82] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s3 -> s2 [0, 65535] { R643 += 1, R595 += 1, R554 += 1, R555 += 1 };
  s3 -> s3 [0, 65535] { R643 += 1, R594 += 1, R595 += 1 };
  s3 -> s4 [0, 65535] { R643 += 1, R595 += 1, R555 += 1, R522 += 1, R523 += 1 };
  s3 -> s5 [0, 65535] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R506 += 1, R507 += 1 };
  s3 -> s6 [83, 83] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s3 -> s7 [83, 83] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s3 -> s8 [85, 85] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s3 -> s1 [86, 65535] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s4 -> s1 [0, 82] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s4 -> s4 [0, 65535] { R643 += 1, R595 += 1, R555 += 1, R522 += 1, R523 += 1 };
  s4 -> s5 [0, 65535] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R506 += 1, R507 += 1 };
  s4 -> s6 [83, 83] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s4 -> s7 [83, 83] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s4 -> s8 [85, 85] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s4 -> s1 [86, 65535] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s5 -> s1 [0, 82] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s5 -> s5 [0, 65535] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R506 += 1, R507 += 1 };
  s5 -> s6 [83, 83] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s5 -> s7 [83, 83] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s5 -> s8 [85, 85] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s5 -> s1 [86, 65535] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s6 -> s6 [0, 83] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s6 -> s14 [85, 85] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s6 -> s6 [86, 65535] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s8 -> s8 [0, 82] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s8 -> s8 [0, 65535] { R643 += 1, R595 += 1, R555 += 1, R523 += 1 };
  s8 -> s9 [0, 65535] { R643 += 1 };
  s8 -> s10 [0, 65535];
  s8 -> s11 [0, 65535] { R643 += 1, R595 += 1, R555 += 1 };
  s8 -> s12 [0, 65535] { R643 += 1, R595 += 1 };
  s8 -> s13 [83, 83] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s8 -> s14 [83, 83] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s8 -> s8 [85, 65535] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s9 -> s9 [0, 65535] { R643 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  s11 -> s9 [0, 65535] { R643 += 1 };
  s11 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R643 += 1, R595 += 1, R555 += 1 };
  s11 -> s12 [0, 65535] { R643 += 1, R595 += 1 };
  s12 -> s9 [0, 65535] { R643 += 1 };
  s12 -> s10 [0, 65535];
  s12 -> s12 [0, 65535] { R643 += 1, R595 += 1 };
  s13 -> s13 [0, 65535] { R643 += 1, R595 += 1, R555 += 1, R523 += 1 };
  s13 -> s9 [0, 65535] { R643 += 1 };
  s13 -> s10 [0, 65535];
  s13 -> s11 [0, 65535] { R643 += 1, R595 += 1, R555 += 1 };
  s13 -> s12 [0, 65535] { R643 += 1, R595 += 1 };
  s14 -> s14 [0, 83] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  s14 -> s14 [0, 65535] { R643 += 1, R595 += 1, R555 += 1, R523 += 1 };
  s14 -> s9 [0, 65535] { R643 += 1 };
  s14 -> s10 [0, 65535];
  s14 -> s11 [0, 65535] { R643 += 1, R595 += 1, R555 += 1 };
  s14 -> s12 [0, 65535] { R643 += 1, R595 += 1 };
  s14 -> s14 [85, 65535] { R643 += 1, R595 += 1, R555 += 1, R523 += 1, R507 += 1 };
  accepting s12, s8, s13, s9, s14, s10, s11;
};
};
constraint R3 = R523 && R4 = R555 && R5 = R493 && R6 = R643 && R16 = 0 && R17 = R595 && R484 = 0 && R485 = 1 && R486 = 0 && R487 = 1 && R488 = 0 && R489 = 2 && R490 = 0 && R491 = 2 && R492 - R595 = 1 && R506 = 0 && R507 = 0 && R508 = 0 && R509 = R523 && R510 = 0 && R511 = R523 && R512 = 0 && R513 = R523 && R514 = 0 && R515 = R523 && R516 = 0 && R517 = R523 && R518 = 0 && R519 = R523 && R520 = 0 && R521 = R523 && R522 = 0 && R524 = 3 && R525 = R555 && R526 = 3 && R527 = R555 && R528 = 3 && R529 = R555 && R530 = 3 && R531 = R555 && R532 = 3 && R533 = R555 && R534 = 3 && R535 = R555 && R536 = 3 && R537 = R555 && R538 = 3 && R539 = R555 && R540 = 3 && R541 = R555 && R542 = 3 && R543 = R555 && R544 = 3 && R545 = R555 && R546 = 3 && R547 = R555 && R548 = 3 && R549 = R555 && R550 = 3 && R551 = R555 && R552 = 3 && R553 = R555 && R554 = 3 && R556 = 0 && R557 = R595 && R558 = 0 && R559 = R595 && R560 = 0 && R561 = R595 && R562 = 0 && R563 = R595 && R564 = 0 && R565 = R595 && R566 = 0 && R567 = R595 && R568 = 0 && R569 = R595 && R570 = 0 && R571 = R595 && R572 = 0 && R573 = R595 && R574 = 0 && R575 = R595 && R576 = 0 && R577 = R595 && R578 = 0 && R579 = R595 && R580 = 0 && R581 = R595 && R582 = 0 && R583 = R595 && R584 = 0 && R585 = R595 && R586 = 0 && R587 = R595 && R588 = 0 && R589 = R595 && R590 = 0 && R591 = R595 && R592 = 0 && R593 = R595 && R594 = 0 && R596 = 10 && R597 = R643 && R598 = 10 && R599 = R643 && R600 = 10 && R601 = R643 && R602 = 10 && R603 = R643 && R604 = 10 && R605 = R643 && R606 = 10 && R607 = R643 && R608 = 10 && R609 = R643 && R610 = 10 && R611 = R643 && R612 = 10 && R613 = R643 && R614 = 10 && R615 = R643 && R616 = 10 && R617 = R643 && R618 = 10 && R619 = R643 && R620 = 10 && R621 = R643 && R622 = 10 && R623 = R643 && R624 = 10 && R625 = R643 && R626 = 10 && R627 = R643 && R628 = 10 && R629 = R643 && R630 = 10 && R631 = R643 && R632 = 10 && R633 = R643 && R634 = 10 && R635 = R643 && R636 = 10 && R637 = R643 && R638 = 10 && R639 = R643 && R640 = 10 && R641 = R643 && R642 = 10 && R0 != 0 && R1 != 0 && -1 < R2 && R8 < 1 && R11 < 1 && R12 < 1 && R595 < R493 && 0 < R523 && 2 < R555 && -1 < R595 && 9 < R643 && (R2 != 0 || R481 = 0 || (R494 = 0 && R495 = 0)) && (R2 != 0 || R481 = 0 || (R496 = 0 && R497 = 0)) && (R2 != 0 || R481 = 0 || (R498 = 0 && R499 = 0)) && (R494 != 0 || R2 = R495 || R2 < 1) && (R496 != 0 || R2 = R497 || R2 < 1) && (R498 != 0 || R2 = R499 || R2 < 1) && (R482 = 0 || (R504 = 0 && R505 = 0)) && (R483 = 0 || (R500 = 0 && R501 = 0)) && (R483 = 0 || (R502 = 0 && R503 = 0)) && (R494 = 0 || R2 < 1) && (R496 = 0 || R2 < 1) && (R498 = 0 || R2 < 1);
// End of Parikh automata intersection problem
