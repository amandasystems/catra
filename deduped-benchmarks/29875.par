// Parikh automata intersection problem, generated by OSTRICH+
counter int R0, R1, R10, R11960, R11961, R12, R13, R17933, R17934, R17935, R17936, R17937, R17938, R17939, R17940, R17941, R17942, R17943, R17944, R17945, R17946, R17947, R17948, R17949, R17950, R17951, R18904, R18905, R18906, R18907, R18908, R18909, R18910, R18911, R18912, R18913, R18914, R18915, R18916, R18917, R18918, R18919, R18920, R18921, R18922, R18923, R18924, R18925, R18926, R18927, R18928, R18929, R18930, R18931, R18932, R18933, R18934, R18935, R18936, R18937, R18938, R18939, R18940, R18941, R18942, R18943, R18944, R18945, R18946, R18947, R18948, R18949, R18950, R18951, R18952, R18953, R18954, R18955, R18956, R18957, R18958, R18959, R18960, R18961, R18962, R18963, R18964, R18965, R18966, R18967, R18968, R18969, R18970, R18971, R18972, R18973, R18974, R18975, R18976, R18977, R18978, R18979, R18980, R18981, R18982, R18983, R18984, R18985, R18986, R18987, R18988, R18989, R18990, R18991, R18992, R18993, R18994, R18995, R18996, R18997, R18998, R18999, R19000, R19001, R19002, R19003, R19004, R19005, R19006, R19007, R2, R3, R4, R5, R6, R7;
synchronised {  // Automata constraining P58
automaton P58_0 {
  init s0;
  s0 -> s1 [119, 119];
  accepting s1;
};
};
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R4 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 45] { R18963 += 1 };
  s0 -> s0 [0, 65535] { R18962 += 1, R18963 += 1 };
  s0 -> s2 [46, 46] { R18963 += 1 };
  s0 -> s3 [47, 47] { R18963 += 1 };
  s0 -> s1 [48, 65535] { R18963 += 1 };
  s1 -> s1 [0, 45] { R18963 += 1 };
  s1 -> s2 [46, 46] { R18963 += 1 };
  s1 -> s3 [47, 47] { R18963 += 1 };
  s1 -> s1 [48, 65535] { R18963 += 1 };
  s2 -> s1 [0, 45] { R18963 += 1 };
  s2 -> s2 [46, 46] { R18963 += 1 };
  s2 -> s3 [47, 47] { R18963 += 1 };
  s2 -> s1 [48, 114] { R18963 += 1 };
  s2 -> s8 [115, 115] { R18963 += 1 };
  s2 -> s1 [116, 65535] { R18963 += 1 };
  s3 -> s3 [0, 45] { R18963 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s4 [46, 46] { R18963 += 1 };
  s3 -> s3 [47, 65535] { R18963 += 1 };
  s4 -> s3 [0, 45] { R18963 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s4 [46, 46] { R18963 += 1 };
  s4 -> s3 [47, 114] { R18963 += 1 };
  s4 -> s5 [115, 115] { R18963 += 1 };
  s4 -> s3 [116, 65535] { R18963 += 1 };
  s5 -> s3 [0, 45] { R18963 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s4 [46, 46] { R18963 += 1 };
  s5 -> s3 [47, 110] { R18963 += 1 };
  s5 -> s6 [111, 111] { R18963 += 1 };
  s5 -> s3 [112, 65535] { R18963 += 1 };
  s6 -> s3 [0, 45] { R18963 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s4 [46, 46] { R18963 += 1 };
  s6 -> s3 [47, 98] { R18963 += 1 };
  s6 -> s7 [99, 99] { R18963 += 1 };
  s6 -> s3 [100, 65535] { R18963 += 1 };
  s7 -> s3 [0, 45] { R18963 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s4 [46, 46] { R18963 += 1 };
  s7 -> s3 [47, 106] { R18963 += 1 };
  s7 -> s3 [108, 65535] { R18963 += 1 };
  s8 -> s1 [0, 45] { R18963 += 1 };
  s8 -> s2 [46, 46] { R18963 += 1 };
  s8 -> s3 [47, 47] { R18963 += 1 };
  s8 -> s1 [48, 110] { R18963 += 1 };
  s8 -> s9 [111, 111] { R18963 += 1 };
  s8 -> s1 [112, 65535] { R18963 += 1 };
  s9 -> s1 [0, 45] { R18963 += 1 };
  s9 -> s2 [46, 46] { R18963 += 1 };
  s9 -> s3 [47, 47] { R18963 += 1 };
  s9 -> s1 [48, 98] { R18963 += 1 };
  s9 -> s10 [99, 99] { R18963 += 1 };
  s9 -> s1 [100, 65535] { R18963 += 1 };
  s10 -> s1 [0, 45] { R18963 += 1 };
  s10 -> s2 [46, 46] { R18963 += 1 };
  s10 -> s3 [47, 47] { R18963 += 1 };
  s10 -> s1 [48, 106] { R18963 += 1 };
  s10 -> s1 [108, 65535] { R18963 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_3 {
  init s0;
  s0 -> s1 [0, 65535] { R18965 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R18964 += 1, R18965 += 1 };
  s1 -> s1 [0, 65535] { R18965 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s1 [0, 46] { R18967 += 1, R11961 += 1 };
  s0 -> s0 [0, 65535] { R18966 += 1, R18967 += 1 };
  s0 -> s2 [0, 65535] { R18967 += 1, R11960 += 1, R11961 += 1 };
  s0 -> s3 [47, 47] { R18967 += 1 };
  s0 -> s1 [48, 65535] { R18967 += 1, R11961 += 1 };
  s1 -> s1 [0, 46] { R18967 += 1, R11961 += 1 };
  s1 -> s3 [47, 47] { R18967 += 1 };
  s1 -> s1 [48, 65535] { R18967 += 1, R11961 += 1 };
  s2 -> s1 [0, 46] { R18967 += 1, R11961 += 1 };
  s2 -> s2 [0, 65535] { R18967 += 1, R11960 += 1, R11961 += 1 };
  s2 -> s3 [47, 47] { R18967 += 1 };
  s2 -> s1 [48, 65535] { R18967 += 1, R11961 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R18967 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 36] { R18969 += 1, R17945 += 1 };
  s0 -> s2 [0, 65535] { R18969 += 1, R17944 += 1, R17945 += 1 };
  s0 -> s0 [0, 65535] { R18968 += 1, R18969 += 1 };
  s0 -> s1 [38, 42] { R18969 += 1, R17945 += 1 };
  s0 -> s1 [44, 45] { R18969 += 1, R17945 += 1 };
  s0 -> s1 [47, 62] { R18969 += 1, R17945 += 1 };
  s0 -> s1 [64, 65535] { R18969 += 1, R17945 += 1 };
  s1 -> s1 [0, 36] { R18969 += 1, R17945 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R18969 += 1 };
  s1 -> s1 [38, 42] { R18969 += 1, R17945 += 1 };
  s1 -> s1 [44, 45] { R18969 += 1, R17945 += 1 };
  s1 -> s1 [47, 62] { R18969 += 1, R17945 += 1 };
  s1 -> s1 [64, 65535] { R18969 += 1, R17945 += 1 };
  s2 -> s1 [0, 36] { R18969 += 1, R17945 += 1 };
  s2 -> s2 [0, 65535] { R18969 += 1, R17944 += 1, R17945 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [38, 42] { R18969 += 1, R17945 += 1 };
  s2 -> s1 [44, 45] { R18969 += 1, R17945 += 1 };
  s2 -> s1 [47, 62] { R18969 += 1, R17945 += 1 };
  s2 -> s1 [64, 65535] { R18969 += 1, R17945 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_6 {
  init s0;
  s0 -> s1 [0, 65535] { R18971 += 1, R17946 += 1, R17947 += 1 };
  s0 -> s2 [0, 65535] { R18971 += 1, R17947 += 1, R0 += 1 };
  s0 -> s0 [0, 65535] { R18970 += 1, R18971 += 1 };
  s1 -> s1 [0, 65535] { R18971 += 1, R17946 += 1, R17947 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R18971 += 1, R17947 += 1, R0 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R18971 += 1 };
  s2 -> s2 [0, 65535] { R18971 += 1, R17947 += 1, R0 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R18971 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_7 {
  init s0;
  s0 -> s1 [0, 62] { R18973 += 1, R17949 += 1, R17937 += 1 };
  s0 -> s2 [0, 65535] { R18973 += 1, R17949 += 1, R17936 += 1, R17937 += 1 };
  s0 -> s3 [0, 65535] { R18973 += 1, R17948 += 1, R17949 += 1 };
  s0 -> s0 [0, 65535] { R18972 += 1, R18973 += 1 };
  s0 -> s4 [63, 63] { R18973 += 1, R17949 += 1, R17937 += 1 };
  s0 -> s1 [64, 65535] { R18973 += 1, R17949 += 1, R17937 += 1 };
  s1 -> s7 [0, 65535] { R18973 += 1, R17949 += 1 };
  s1 -> s1 [0, 65535] { R18973 += 1, R17949 += 1, R17937 += 1 };
  s1 -> s6 [0, 65535] { R18973 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 62] { R18973 += 1, R17949 += 1, R17937 += 1 };
  s2 -> s2 [0, 65535] { R18973 += 1, R17949 += 1, R17936 += 1, R17937 += 1 };
  s2 -> s6 [0, 65535] { R18973 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s4 [63, 63] { R18973 += 1, R17949 += 1, R17937 += 1 };
  s2 -> s1 [64, 65535] { R18973 += 1, R17949 += 1, R17937 += 1 };
  s3 -> s1 [0, 62] { R18973 += 1, R17949 += 1, R17937 += 1 };
  s3 -> s2 [0, 65535] { R18973 += 1, R17949 += 1, R17936 += 1, R17937 += 1 };
  s3 -> s3 [0, 65535] { R18973 += 1, R17948 += 1, R17949 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s4 [63, 63] { R18973 += 1, R17949 += 1, R17937 += 1 };
  s3 -> s1 [64, 65535] { R18973 += 1, R17949 += 1, R17937 += 1 };
  s4 -> s1 [0, 65535] { R18973 += 1, R17949 += 1, R17937 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R18973 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R18973 += 1, R17949 += 1 };
  s7 -> s6 [0, 65535] { R18973 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s5, s2, s6, s1, s7, s0;
};
automaton uri_8 {
  init s0;
  s0 -> s1 [0, 65535] { R18975 += 1, R17950 += 1, R17951 += 1 };
  s0 -> s2 [0, 65535] { R18975 += 1, R17951 += 1, R17939 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R18974 += 1, R18975 += 1 };
  s0 -> s3 [0, 65535] { R18975 += 1, R17951 += 1, R17938 += 1, R17939 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R18975 += 1, R17950 += 1, R17951 += 1 };
  s1 -> s2 [0, 65535] { R18975 += 1, R17951 += 1, R17939 += 1, R5 += 1 };
  s1 -> s3 [0, 65535] { R18975 += 1, R17951 += 1, R17938 += 1, R17939 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R18975 += 1, R17951 += 1, R17939 += 1, R5 += 1 };
  s2 -> s6 [0, 65535] { R18975 += 1, R17951 += 1 };
  s2 -> s5 [0, 65535] { R18975 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R18975 += 1, R17951 += 1, R17939 += 1, R5 += 1 };
  s3 -> s5 [0, 65535] { R18975 += 1 };
  s3 -> s3 [0, 65535] { R18975 += 1, R17951 += 1, R17938 += 1, R17939 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R18975 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R18975 += 1, R17951 += 1 };
  s6 -> s5 [0, 65535] { R18975 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_9 {
  init s0;
  s0 -> s1 [0, 43] { R18977 += 1, R18931 += 1 };
  s0 -> s2 [0, 65535] { R18977 += 1, R18930 += 1, R18931 += 1 };
  s0 -> s0 [0, 65535] { R18976 += 1, R18977 += 1 };
  s0 -> s1 [45, 63] { R18977 += 1, R18931 += 1 };
  s0 -> s3 [87, 87] { R18977 += 1, R18931 += 1 };
  s0 -> s1 [88, 65535] { R18977 += 1, R18931 += 1 };
  s1 -> s1 [0, 43] { R18977 += 1, R18931 += 1 };
  s1 -> s1 [45, 63] { R18977 += 1, R18931 += 1 };
  s1 -> s3 [87, 87] { R18977 += 1, R18931 += 1 };
  s1 -> s1 [88, 65535] { R18977 += 1, R18931 += 1 };
  s2 -> s1 [0, 43] { R18977 += 1, R18931 += 1 };
  s2 -> s2 [0, 65535] { R18977 += 1, R18930 += 1, R18931 += 1 };
  s2 -> s1 [45, 63] { R18977 += 1, R18931 += 1 };
  s2 -> s3 [87, 87] { R18977 += 1, R18931 += 1 };
  s2 -> s1 [88, 65535] { R18977 += 1, R18931 += 1 };
  s3 -> s3 [0, 43] { R18977 += 1, R18931 += 1 };
  s3 -> s3 [0, 65535] { R18977 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [45, 63] { R18977 += 1, R18931 += 1 };
  s3 -> s3 [87, 65535] { R18977 += 1, R18931 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton uri_10 {
  init s0;
  s0 -> s1 [0, 65535] { R18979 += 1, R18933 += 1, R2 += 1 };
  s0 -> s2 [0, 65535] { R18979 += 1, R18932 += 1, R18933 += 1 };
  s0 -> s0 [0, 65535] { R18978 += 1, R18979 += 1 };
  s1 -> s1 [0, 65535] { R18979 += 1, R18933 += 1, R2 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R18979 += 1 };
  s2 -> s1 [0, 65535] { R18979 += 1, R18933 += 1, R2 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R18979 += 1, R18932 += 1, R18933 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R18979 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_11 {
  init s0;
  s0 -> s1 [0, 57] { R18981 += 1, R18935 += 1 };
  s0 -> s2 [0, 65535] { R18981 += 1, R18934 += 1, R18935 += 1 };
  s0 -> s0 [0, 65535] { R18980 += 1, R18981 += 1 };
  s0 -> s3 [0, 65535] { R18981 += 1, R18935 += 1, R10 += 1 };
  s0 -> s4 [58, 58] { R18981 += 1, R18935 += 1 };
  s0 -> s1 [59, 65535] { R18981 += 1, R18935 += 1 };
  s1 -> s1 [0, 57] { R18981 += 1, R18935 += 1 };
  s1 -> s1 [0, 65535] { R18981 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s4 [58, 58] { R18981 += 1, R18935 += 1 };
  s1 -> s1 [59, 65535] { R18981 += 1, R18935 += 1 };
  s2 -> s1 [0, 57] { R18981 += 1, R18935 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R18981 += 1, R18934 += 1, R18935 += 1 };
  s2 -> s3 [0, 65535] { R18981 += 1, R18935 += 1, R10 += 1 };
  s2 -> s4 [58, 58] { R18981 += 1, R18935 += 1 };
  s2 -> s1 [59, 65535] { R18981 += 1, R18935 += 1 };
  s3 -> s1 [0, 57] { R18981 += 1, R18935 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R18981 += 1 };
  s3 -> s3 [0, 65535] { R18981 += 1, R18935 += 1, R10 += 1 };
  s3 -> s4 [58, 58] { R18981 += 1, R18935 += 1 };
  s3 -> s1 [59, 65535] { R18981 += 1, R18935 += 1 };
  s4 -> s4 [0, 65535] { R18981 += 1, R18935 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R18981 += 1 };
  accepting s3, s5, s2, s6, s1, s0;
};
automaton uri_12 {
  init s0;
  s0 -> s1 [0, 86] { R18983 += 1, R18937 += 1, R13 += 1 };
  s0 -> s0 [0, 65535] { R18982 += 1, R18983 += 1 };
  s0 -> s2 [0, 65535] { R18983 += 1, R18937 += 1, R12 += 1, R13 += 1 };
  s0 -> s3 [0, 65535] { R18983 += 1, R18936 += 1, R18937 += 1 };
  s0 -> s4 [87, 87] { R18983 += 1, R18937 += 1 };
  s0 -> s1 [88, 65535] { R18983 += 1, R18937 += 1, R13 += 1 };
  s1 -> s1 [0, 86] { R18983 += 1, R18937 += 1, R13 += 1 };
  s1 -> s4 [87, 87] { R18983 += 1, R18937 += 1 };
  s1 -> s1 [88, 65535] { R18983 += 1, R18937 += 1, R13 += 1 };
  s2 -> s1 [0, 86] { R18983 += 1, R18937 += 1, R13 += 1 };
  s2 -> s2 [0, 65535] { R18983 += 1, R18937 += 1, R12 += 1, R13 += 1 };
  s2 -> s4 [87, 87] { R18983 += 1, R18937 += 1 };
  s2 -> s1 [88, 65535] { R18983 += 1, R18937 += 1, R13 += 1 };
  s3 -> s1 [0, 86] { R18983 += 1, R18937 += 1, R13 += 1 };
  s3 -> s2 [0, 65535] { R18983 += 1, R18937 += 1, R12 += 1, R13 += 1 };
  s3 -> s3 [0, 65535] { R18983 += 1, R18936 += 1, R18937 += 1 };
  s3 -> s4 [87, 87] { R18983 += 1, R18937 += 1 };
  s3 -> s1 [88, 65535] { R18983 += 1, R18937 += 1, R13 += 1 };
  s4 -> s5 [0, 65535] { R18983 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R18983 += 1, R18937 += 1 };
  s5 -> s5 [0, 65535] { R18983 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s4, s5, s6;
};
automaton uri_13 {
  init s0;
  s0 -> s1 [0, 90] { R18985 += 1, R18939 += 1, R17941 += 1 };
  s0 -> s2 [0, 65535] { R18985 += 1, R18939 += 1, R17940 += 1, R17941 += 1 };
  s0 -> s3 [0, 65535] { R18985 += 1, R18938 += 1, R18939 += 1 };
  s0 -> s0 [0, 65535] { R18984 += 1, R18985 += 1 };
  s0 -> s4 [91, 91] { R18985 += 1, R18939 += 1, R17941 += 1 };
  s0 -> s1 [92, 65535] { R18985 += 1, R18939 += 1, R17941 += 1 };
  s1 -> s6 [0, 65535] { R18985 += 1 };
  s1 -> s1 [0, 65535] { R18985 += 1, R18939 += 1, R17941 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R18985 += 1, R18939 += 1 };
  s2 -> s1 [0, 90] { R18985 += 1, R18939 += 1, R17941 += 1 };
  s2 -> s6 [0, 65535] { R18985 += 1 };
  s2 -> s2 [0, 65535] { R18985 += 1, R18939 += 1, R17940 += 1, R17941 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s4 [91, 91] { R18985 += 1, R18939 += 1, R17941 += 1 };
  s2 -> s1 [92, 65535] { R18985 += 1, R18939 += 1, R17941 += 1 };
  s3 -> s1 [0, 90] { R18985 += 1, R18939 += 1, R17941 += 1 };
  s3 -> s2 [0, 65535] { R18985 += 1, R18939 += 1, R17940 += 1, R17941 += 1 };
  s3 -> s3 [0, 65535] { R18985 += 1, R18938 += 1, R18939 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s4 [91, 91] { R18985 += 1, R18939 += 1, R17941 += 1 };
  s3 -> s1 [92, 65535] { R18985 += 1, R18939 += 1, R17941 += 1 };
  s4 -> s1 [0, 65535] { R18985 += 1, R18939 += 1, R17941 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R18985 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R18985 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R18985 += 1, R18939 += 1 };
  accepting s3, s5, s2, s6, s1, s7, s0;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 65535] { R18987 += 1, R18940 += 1, R18941 += 1 };
  s0 -> s0 [0, 65535] { R18986 += 1, R18987 += 1 };
  s0 -> s2 [0, 65535] { R18987 += 1, R18941 += 1, R17942 += 1, R17943 += 1 };
  s0 -> s3 [0, 65535] { R18987 += 1, R18941 += 1, R17943 += 1, R6 += 1 };
  s1 -> s1 [0, 65535] { R18987 += 1, R18940 += 1, R18941 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s2 [0, 65535] { R18987 += 1, R18941 += 1, R17942 += 1, R17943 += 1 };
  s1 -> s3 [0, 65535] { R18987 += 1, R18941 += 1, R17943 += 1, R6 += 1 };
  s2 -> s4 [0, 65535] { R18987 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R18987 += 1, R18941 += 1, R17942 += 1, R17943 += 1 };
  s2 -> s3 [0, 65535] { R18987 += 1, R18941 += 1, R17943 += 1, R6 += 1 };
  s3 -> s4 [0, 65535] { R18987 += 1 };
  s3 -> s5 [0, 65535] { R18987 += 1, R18941 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R18987 += 1, R18941 += 1, R17943 += 1, R6 += 1 };
  s4 -> s4 [0, 65535] { R18987 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s4 [0, 65535] { R18987 += 1 };
  s5 -> s5 [0, 65535] { R18987 += 1, R18941 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_15 {
  init s0;
  s0 -> s0 [0, 65535] { R18988 += 1, R18989 += 1 };
  s0 -> s1 [0, 65535] { R18989 += 1, R18943 += 1, R18910 += 1, R18911 += 1 };
  s0 -> s2 [0, 65535] { R18989 += 1, R18943 += 1, R18911 += 1, R17935 += 1 };
  s0 -> s3 [0, 65535] { R18989 += 1, R18942 += 1, R18943 += 1 };
  s1 -> s1 [0, 65535] { R18989 += 1, R18943 += 1, R18910 += 1, R18911 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R18989 += 1, R18943 += 1, R18911 += 1, R17935 += 1 };
  s1 -> s6 [0, 65535] { R18989 += 1 };
  s2 -> s5 [0, 65535] { R18989 += 1, R18943 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R18989 += 1, R18943 += 1, R18911 += 1, R17935 += 1 };
  s2 -> s6 [0, 65535] { R18989 += 1 };
  s3 -> s1 [0, 65535] { R18989 += 1, R18943 += 1, R18910 += 1, R18911 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R18989 += 1, R18943 += 1, R18911 += 1, R17935 += 1 };
  s3 -> s3 [0, 65535] { R18989 += 1, R18942 += 1, R18943 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R18989 += 1, R18943 += 1 };
  s5 -> s4 [0, 65535];
  s5 -> s6 [0, 65535] { R18989 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R18989 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 65535] { R18991 += 1, R18945 += 1 };
  s0 -> s2 [0, 65535] { R18991 += 1, R18944 += 1, R18945 += 1 };
  s0 -> s0 [0, 65535] { R18990 += 1, R18991 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R18991 += 1, R18945 += 1 };
  s1 -> s4 [0, 65535] { R18991 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R18991 += 1, R18945 += 1 };
  s2 -> s2 [0, 65535] { R18991 += 1, R18944 += 1, R18945 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R18991 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_17 {
  init s0;
  s0 -> s1 [0, 86] { R18993 += 1, R18947 += 1, R18915 += 1 };
  s0 -> s2 [0, 65535] { R18993 += 1, R18946 += 1, R18947 += 1 };
  s0 -> s0 [0, 65535] { R18992 += 1, R18993 += 1 };
  s0 -> s3 [0, 65535] { R18993 += 1, R18947 += 1, R18914 += 1, R18915 += 1 };
  s0 -> s4 [87, 87] { R18993 += 1, R18947 += 1, R18915 += 1 };
  s0 -> s1 [88, 65535] { R18993 += 1, R18947 += 1, R18915 += 1 };
  s1 -> s1 [0, 86] { R18993 += 1, R18947 += 1, R18915 += 1 };
  s1 -> s4 [87, 87] { R18993 += 1, R18947 += 1, R18915 += 1 };
  s1 -> s1 [88, 65535] { R18993 += 1, R18947 += 1, R18915 += 1 };
  s2 -> s1 [0, 86] { R18993 += 1, R18947 += 1, R18915 += 1 };
  s2 -> s2 [0, 65535] { R18993 += 1, R18946 += 1, R18947 += 1 };
  s2 -> s3 [0, 65535] { R18993 += 1, R18947 += 1, R18914 += 1, R18915 += 1 };
  s2 -> s4 [87, 87] { R18993 += 1, R18947 += 1, R18915 += 1 };
  s2 -> s1 [88, 65535] { R18993 += 1, R18947 += 1, R18915 += 1 };
  s3 -> s1 [0, 86] { R18993 += 1, R18947 += 1, R18915 += 1 };
  s3 -> s3 [0, 65535] { R18993 += 1, R18947 += 1, R18914 += 1, R18915 += 1 };
  s3 -> s4 [87, 87] { R18993 += 1, R18947 += 1, R18915 += 1 };
  s3 -> s1 [88, 65535] { R18993 += 1, R18947 += 1, R18915 += 1 };
  s4 -> s5 [0, 65535] { R18993 += 1, R18947 += 1 };
  s4 -> s4 [0, 65535] { R18993 += 1, R18947 += 1, R18915 += 1 };
  s4 -> s6 [0, 65535] { R18993 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R18993 += 1, R18947 += 1 };
  s5 -> s6 [0, 65535] { R18993 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R18993 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s4, s5, s6, s7;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 65535] { R18995 += 1, R18949 += 1, R18916 += 1, R18917 += 1 };
  s0 -> s2 [0, 65535] { R18995 += 1, R18949 += 1, R18917 += 1, R1 += 1 };
  s0 -> s3 [0, 65535] { R18995 += 1, R18948 += 1, R18949 += 1 };
  s0 -> s0 [0, 65535] { R18994 += 1, R18995 += 1 };
  s1 -> s5 [0, 65535] { R18995 += 1 };
  s1 -> s1 [0, 65535] { R18995 += 1, R18949 += 1, R18916 += 1, R18917 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R18995 += 1, R18949 += 1, R18917 += 1, R1 += 1 };
  s2 -> s5 [0, 65535] { R18995 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R18995 += 1, R18949 += 1, R18917 += 1, R1 += 1 };
  s2 -> s6 [0, 65535] { R18995 += 1, R18949 += 1 };
  s3 -> s1 [0, 65535] { R18995 += 1, R18949 += 1, R18916 += 1, R18917 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R18995 += 1, R18949 += 1, R18917 += 1, R1 += 1 };
  s3 -> s3 [0, 65535] { R18995 += 1, R18948 += 1, R18949 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R18995 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R18995 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R18995 += 1, R18949 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_19 {
  init s0;
  s0 -> s1 [0, 86] { R18997 += 1, R18951 += 1, R18919 += 1 };
  s0 -> s2 [0, 65535] { R18997 += 1, R18950 += 1, R18951 += 1 };
  s0 -> s0 [0, 65535] { R18996 += 1, R18997 += 1 };
  s0 -> s3 [0, 65535] { R18997 += 1, R18951 += 1, R18919 += 1, R7 += 1 };
  s0 -> s4 [0, 65535] { R18997 += 1, R18951 += 1, R18918 += 1, R18919 += 1 };
  s0 -> s5 [87, 87] { R18997 += 1, R18951 += 1, R18919 += 1 };
  s0 -> s1 [88, 65535] { R18997 += 1, R18951 += 1, R18919 += 1 };
  s1 -> s1 [0, 86] { R18997 += 1, R18951 += 1, R18919 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R18997 += 1 };
  s1 -> s1 [0, 65535] { R18997 += 1, R18951 += 1 };
  s1 -> s5 [87, 87] { R18997 += 1, R18951 += 1, R18919 += 1 };
  s1 -> s1 [88, 65535] { R18997 += 1, R18951 += 1, R18919 += 1 };
  s2 -> s1 [0, 86] { R18997 += 1, R18951 += 1, R18919 += 1 };
  s2 -> s2 [0, 65535] { R18997 += 1, R18950 += 1, R18951 += 1 };
  s2 -> s3 [0, 65535] { R18997 += 1, R18951 += 1, R18919 += 1, R7 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [0, 65535] { R18997 += 1, R18951 += 1, R18918 += 1, R18919 += 1 };
  s2 -> s5 [87, 87] { R18997 += 1, R18951 += 1, R18919 += 1 };
  s2 -> s1 [88, 65535] { R18997 += 1, R18951 += 1, R18919 += 1 };
  s3 -> s1 [0, 86] { R18997 += 1, R18951 += 1, R18919 += 1 };
  s3 -> s3 [0, 65535] { R18997 += 1, R18951 += 1, R18919 += 1, R7 += 1 };
  s3 -> s8 [0, 65535] { R18997 += 1, R18951 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R18997 += 1 };
  s3 -> s5 [87, 87] { R18997 += 1, R18951 += 1, R18919 += 1 };
  s3 -> s1 [88, 65535] { R18997 += 1, R18951 += 1, R18919 += 1 };
  s4 -> s1 [0, 86] { R18997 += 1, R18951 += 1, R18919 += 1 };
  s4 -> s3 [0, 65535] { R18997 += 1, R18951 += 1, R18919 += 1, R7 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R18997 += 1, R18951 += 1, R18918 += 1, R18919 += 1 };
  s4 -> s7 [0, 65535] { R18997 += 1 };
  s4 -> s5 [87, 87] { R18997 += 1, R18951 += 1, R18919 += 1 };
  s4 -> s1 [88, 65535] { R18997 += 1, R18951 += 1, R18919 += 1 };
  s5 -> s5 [0, 65535] { R18997 += 1, R18951 += 1, R18919 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R18997 += 1 };
  s8 -> s8 [0, 65535] { R18997 += 1, R18951 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R18997 += 1 };
  accepting s3, s4, s8, s2, s6, s1, s7, s0;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 86] { R18999 += 1, R18953 += 1, R18921 += 1, R18905 += 1 };
  s0 -> s2 [0, 65535] { R18999 += 1, R18953 += 1, R18920 += 1, R18921 += 1 };
  s0 -> s0 [0, 65535] { R18998 += 1, R18999 += 1 };
  s0 -> s3 [0, 65535] { R18999 += 1, R18952 += 1, R18953 += 1 };
  s0 -> s4 [0, 65535] { R18999 += 1, R18953 += 1, R18921 += 1, R18904 += 1, R18905 += 1 };
  s0 -> s1 [88, 65535] { R18999 += 1, R18953 += 1, R18921 += 1, R18905 += 1 };
  s1 -> s1 [0, 86] { R18999 += 1, R18953 += 1, R18921 += 1, R18905 += 1 };
  s1 -> s5 [0, 65535] { R18999 += 1, R18953 += 1 };
  s1 -> s1 [0, 65535] { R18999 += 1, R18953 += 1, R18921 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R18999 += 1 };
  s1 -> s1 [88, 65535] { R18999 += 1, R18953 += 1, R18921 += 1, R18905 += 1 };
  s2 -> s1 [0, 86] { R18999 += 1, R18953 += 1, R18921 += 1, R18905 += 1 };
  s2 -> s2 [0, 65535] { R18999 += 1, R18953 += 1, R18920 += 1, R18921 += 1 };
  s2 -> s4 [0, 65535] { R18999 += 1, R18953 += 1, R18921 += 1, R18904 += 1, R18905 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R18999 += 1 };
  s2 -> s1 [88, 65535] { R18999 += 1, R18953 += 1, R18921 += 1, R18905 += 1 };
  s3 -> s1 [0, 86] { R18999 += 1, R18953 += 1, R18921 += 1, R18905 += 1 };
  s3 -> s2 [0, 65535] { R18999 += 1, R18953 += 1, R18920 += 1, R18921 += 1 };
  s3 -> s3 [0, 65535] { R18999 += 1, R18952 += 1, R18953 += 1 };
  s3 -> s4 [0, 65535] { R18999 += 1, R18953 += 1, R18921 += 1, R18904 += 1, R18905 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [88, 65535] { R18999 += 1, R18953 += 1, R18921 += 1, R18905 += 1 };
  s4 -> s1 [0, 86] { R18999 += 1, R18953 += 1, R18921 += 1, R18905 += 1 };
  s4 -> s5 [0, 65535] { R18999 += 1, R18953 += 1 };
  s4 -> s4 [0, 65535] { R18999 += 1, R18953 += 1, R18921 += 1, R18904 += 1, R18905 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R18999 += 1 };
  s4 -> s1 [88, 65535] { R18999 += 1, R18953 += 1, R18921 += 1, R18905 += 1 };
  s5 -> s5 [0, 65535] { R18999 += 1, R18953 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R18999 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R18999 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton uri_21 {
  init s0;
  s0 -> s0 [0, 65535] { R19000 += 1, R19001 += 1 };
  s0 -> s1 [0, 65535] { R19001 += 1, R18955 += 1, R18923 += 1, R18906 += 1, R18907 += 1 };
  s0 -> s2 [0, 65535] { R19001 += 1, R18955 += 1, R18923 += 1, R18907 += 1, R17933 += 1 };
  s0 -> s3 [0, 65535] { R19001 += 1, R18954 += 1, R18955 += 1 };
  s0 -> s4 [0, 65535] { R19001 += 1, R18955 += 1, R18922 += 1, R18923 += 1 };
  s1 -> s7 [0, 65535] { R19001 += 1, R18955 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R19001 += 1, R18955 += 1, R18923 += 1, R18906 += 1, R18907 += 1 };
  s1 -> s2 [0, 65535] { R19001 += 1, R18955 += 1, R18923 += 1, R18907 += 1, R17933 += 1 };
  s1 -> s6 [0, 65535] { R19001 += 1 };
  s2 -> s7 [0, 65535] { R19001 += 1, R18955 += 1 };
  s2 -> s8 [0, 65535] { R19001 += 1, R18955 += 1, R18923 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R19001 += 1, R18955 += 1, R18923 += 1, R18907 += 1, R17933 += 1 };
  s2 -> s6 [0, 65535] { R19001 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R19001 += 1, R18955 += 1, R18923 += 1, R18906 += 1, R18907 += 1 };
  s3 -> s2 [0, 65535] { R19001 += 1, R18955 += 1, R18923 += 1, R18907 += 1, R17933 += 1 };
  s3 -> s3 [0, 65535] { R19001 += 1, R18954 += 1, R18955 += 1 };
  s3 -> s4 [0, 65535] { R19001 += 1, R18955 += 1, R18922 += 1, R18923 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R19001 += 1, R18955 += 1, R18923 += 1, R18906 += 1, R18907 += 1 };
  s4 -> s2 [0, 65535] { R19001 += 1, R18955 += 1, R18923 += 1, R18907 += 1, R17933 += 1 };
  s4 -> s6 [0, 65535] { R19001 += 1 };
  s4 -> s4 [0, 65535] { R19001 += 1, R18955 += 1, R18922 += 1, R18923 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R19001 += 1 };
  s7 -> s7 [0, 65535] { R19001 += 1, R18955 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R19001 += 1 };
  s8 -> s7 [0, 65535] { R19001 += 1, R18955 += 1 };
  s8 -> s8 [0, 65535] { R19001 += 1, R18955 += 1, R18923 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R19001 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_22 {
  init s0;
  s0 -> s1 [0, 65535] { R19003 += 1, R18957 += 1, R18924 += 1, R18925 += 1 };
  s0 -> s0 [0, 65535] { R19002 += 1, R19003 += 1 };
  s0 -> s2 [0, 65535] { R19003 += 1, R18957 += 1, R18925 += 1, R18908 += 1, R18909 += 1 };
  s0 -> s3 [0, 65535] { R19003 += 1, R18956 += 1, R18957 += 1 };
  s0 -> s4 [108, 108] { R19003 += 1, R18957 += 1, R18925 += 1, R18909 += 1 };
  s1 -> s1 [0, 65535] { R19003 += 1, R18957 += 1, R18924 += 1, R18925 += 1 };
  s1 -> s2 [0, 65535] { R19003 += 1, R18957 += 1, R18925 += 1, R18908 += 1, R18909 += 1 };
  s1 -> s4 [108, 108] { R19003 += 1, R18957 += 1, R18925 += 1, R18909 += 1 };
  s2 -> s2 [0, 65535] { R19003 += 1, R18957 += 1, R18925 += 1, R18908 += 1, R18909 += 1 };
  s2 -> s4 [108, 108] { R19003 += 1, R18957 += 1, R18925 += 1, R18909 += 1 };
  s3 -> s1 [0, 65535] { R19003 += 1, R18957 += 1, R18924 += 1, R18925 += 1 };
  s3 -> s2 [0, 65535] { R19003 += 1, R18957 += 1, R18925 += 1, R18908 += 1, R18909 += 1 };
  s3 -> s3 [0, 65535] { R19003 += 1, R18956 += 1, R18957 += 1 };
  s3 -> s4 [108, 108] { R19003 += 1, R18957 += 1, R18925 += 1, R18909 += 1 };
  s4 -> s5 [111, 111] { R19003 += 1, R18957 += 1, R18925 += 1, R18909 += 1 };
  s5 -> s6 [99, 99] { R19003 += 1, R18957 += 1, R18925 += 1, R18909 += 1 };
  s6 -> s7 [97, 97] { R19003 += 1, R18957 += 1, R18925 += 1, R18909 += 1 };
  s7 -> s8 [108, 108] { R19003 += 1, R18957 += 1, R18925 += 1, R18909 += 1 };
  s8 -> s9 [104, 104] { R19003 += 1, R18957 += 1, R18925 += 1, R18909 += 1 };
  s9 -> s10 [111, 111] { R19003 += 1, R18957 += 1, R18925 += 1, R18909 += 1 };
  s10 -> s11 [115, 115] { R19003 += 1, R18957 += 1, R18925 += 1, R18909 += 1 };
  s11 -> s12 [116, 116] { R19003 += 1, R18957 += 1, R18925 += 1, R18909 += 1 };
  s12 -> s12 [0, 65535] { R19003 += 1, R18957 += 1, R18925 += 1 };
  s12 -> s13 [0, 65535] { R19003 += 1 };
  s12 -> s14 [0, 65535];
  s12 -> s15 [0, 65535] { R19003 += 1, R18957 += 1 };
  s13 -> s13 [0, 65535] { R19003 += 1 };
  s13 -> s14 [0, 65535];
  s14 -> s14 [0, 65535];
  s15 -> s13 [0, 65535] { R19003 += 1 };
  s15 -> s14 [0, 65535];
  s15 -> s15 [0, 65535] { R19003 += 1, R18957 += 1 };
  accepting s12, s13, s14, s15;
};
automaton uri_23 {
  init s0;
  s0 -> s1 [0, 65535] { R19005 += 1, R18959 += 1, R18927 += 1, R18913 += 1, R17934 += 1 };
  s0 -> s2 [0, 65535] { R19005 += 1, R18959 += 1, R18926 += 1, R18927 += 1 };
  s0 -> s0 [0, 65535] { R19004 += 1, R19005 += 1 };
  s0 -> s3 [0, 65535] { R19005 += 1, R18958 += 1, R18959 += 1 };
  s0 -> s4 [0, 65535] { R19005 += 1, R18959 += 1, R18927 += 1, R18912 += 1, R18913 += 1 };
  s1 -> s8 [0, 65535] { R19005 += 1, R18959 += 1, R18927 += 1 };
  s1 -> s1 [0, 65535] { R19005 += 1, R18959 += 1, R18927 += 1, R18913 += 1, R17934 += 1 };
  s1 -> s5 [0, 65535] { R19005 += 1 };
  s1 -> s6 [0, 65535] { R19005 += 1, R18959 += 1 };
  s1 -> s7 [0, 65535];
  s2 -> s1 [0, 65535] { R19005 += 1, R18959 += 1, R18927 += 1, R18913 += 1, R17934 += 1 };
  s2 -> s5 [0, 65535] { R19005 += 1 };
  s2 -> s2 [0, 65535] { R19005 += 1, R18959 += 1, R18926 += 1, R18927 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [0, 65535] { R19005 += 1, R18959 += 1, R18927 += 1, R18912 += 1, R18913 += 1 };
  s3 -> s1 [0, 65535] { R19005 += 1, R18959 += 1, R18927 += 1, R18913 += 1, R17934 += 1 };
  s3 -> s2 [0, 65535] { R19005 += 1, R18959 += 1, R18926 += 1, R18927 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R19005 += 1, R18958 += 1, R18959 += 1 };
  s3 -> s4 [0, 65535] { R19005 += 1, R18959 += 1, R18927 += 1, R18912 += 1, R18913 += 1 };
  s4 -> s1 [0, 65535] { R19005 += 1, R18959 += 1, R18927 += 1, R18913 += 1, R17934 += 1 };
  s4 -> s5 [0, 65535] { R19005 += 1 };
  s4 -> s6 [0, 65535] { R19005 += 1, R18959 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R19005 += 1, R18959 += 1, R18927 += 1, R18912 += 1, R18913 += 1 };
  s5 -> s5 [0, 65535] { R19005 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s5 [0, 65535] { R19005 += 1 };
  s6 -> s6 [0, 65535] { R19005 += 1, R18959 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R19005 += 1, R18959 += 1, R18927 += 1 };
  s8 -> s5 [0, 65535] { R19005 += 1 };
  s8 -> s6 [0, 65535] { R19005 += 1, R18959 += 1 };
  s8 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_24 {
  init s0;
  s0 -> s1 [0, 65535] { R19007 += 1, R18961 += 1, R18929 += 1 };
  s0 -> s2 [0, 65535] { R19007 += 1, R18960 += 1, R18961 += 1 };
  s0 -> s3 [0, 65535] { R19007 += 1, R18961 += 1, R18928 += 1, R18929 += 1 };
  s0 -> s0 [0, 65535] { R19006 += 1, R19007 += 1 };
  s1 -> s4 [0, 65535] { R19007 += 1 };
  s1 -> s1 [0, 65535] { R19007 += 1, R18961 += 1, R18929 += 1 };
  s1 -> s6 [0, 65535] { R19007 += 1, R18961 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R19007 += 1, R18961 += 1, R18929 += 1 };
  s2 -> s2 [0, 65535] { R19007 += 1, R18960 += 1, R18961 += 1 };
  s2 -> s3 [0, 65535] { R19007 += 1, R18961 += 1, R18928 += 1, R18929 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R19007 += 1 };
  s3 -> s1 [0, 65535] { R19007 += 1, R18961 += 1, R18929 += 1 };
  s3 -> s3 [0, 65535] { R19007 += 1, R18961 += 1, R18928 += 1, R18929 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R19007 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R19007 += 1 };
  s6 -> s6 [0, 65535] { R19007 += 1, R18961 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
};
