// Parikh automata intersection problem, generated by OSTRICH+
counter int R0, R1, R10, R11, R12, R13, R14, R15, R18, R20621, R20622, R21, R21661, R21662, R21663, R21664, R21665, R21666, R21667, R21668, R21669, R21670, R21671, R21672, R21673, R21674, R21675, R21676, R21677, R21678, R21679, R21680, R21681, R21682, R21683, R21684, R21685, R21686, R21687, R21688, R21689, R21690, R21691, R21692, R21693, R21694, R21695, R21696, R21697, R21698, R21699, R21700, R21701, R21702, R21703, R21704, R21705, R21706, R21707, R21708, R21709, R21710, R21711, R21712, R21713, R21714, R21715, R21716, R21717, R21718, R21719, R21720, R21721, R21722, R21723, R21724, R21725, R21726, R21727, R21728, R21729, R21730, R21731, R21732, R21733, R21734, R21735, R21736, R21737, R21738, R21739, R21740, R21741, R21742, R21743, R21744, R21745, R21746, R21747, R21748, R21749, R21750, R21751, R21752, R21753, R21754, R21755, R21756, R21757, R21758, R21759, R21760, R21761, R21762, R21763, R21764, R21765, R21766, R21767, R21768, R21769, R21770, R21771, R21772, R21773, R21774, R21775, R21776, R21777, R21778, R21779, R21780, R21781, R21782, R21783, R21784, R21785, R21786, R21787, R21788, R21789, R21790, R21791, R21792, R21793, R21794, R21795, R21796, R21797, R21798, R21799, R21800, R21801, R21802, R21803, R21804, R21805, R21806, R21807, R21808, R21809, R21810, R21811, R21812, R21813, R21814, R21815, R21816, R21817, R21818, R21819, R21820, R21821, R21822, R21823, R21824, R21825, R21826, R21827, R21828, R21829, R21830, R21831, R21832, R21833, R21834, R21835, R21836, R21837, R21838, R21839, R21840, R21841, R21842, R21843, R21844, R21845, R21846, R21847, R21848, R21849, R21850, R21851, R21852, R21853, R21854, R21855, R21856, R21857, R21858, R21859, R21860, R21861, R21862, R21863, R21864, R21865, R21866, R21867, R21868, R24, R27, R28, R29, R3, R30, R31, R32, R33, R34, R35, R36, R37, R38, R39, R4, R40, R41, R42, R43, R44, R45, R46, R47, R48, R49, R5, R50, R6, R7, R8, R9;
synchronised {  // Automata constraining P70
automaton P70_0 {
  init s0;
  s0 -> s1 [122, 122];
  accepting s1;
};
};
synchronised {  // Automata constraining P84
automaton P84_0 {
  init s0;
  s0 -> s1 [119, 119];
  accepting s1;
};
};
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R9 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 45] { R21792 += 1 };
  s0 -> s0 [0, 65535] { R21791 += 1, R21792 += 1 };
  s0 -> s2 [46, 46] { R21792 += 1 };
  s0 -> s3 [47, 47] { R21792 += 1 };
  s0 -> s1 [48, 65535] { R21792 += 1 };
  s1 -> s1 [0, 45] { R21792 += 1 };
  s1 -> s2 [46, 46] { R21792 += 1 };
  s1 -> s3 [47, 47] { R21792 += 1 };
  s1 -> s1 [48, 65535] { R21792 += 1 };
  s2 -> s1 [0, 45] { R21792 += 1 };
  s2 -> s2 [46, 46] { R21792 += 1 };
  s2 -> s3 [47, 47] { R21792 += 1 };
  s2 -> s1 [48, 114] { R21792 += 1 };
  s2 -> s8 [115, 115] { R21792 += 1 };
  s2 -> s1 [116, 65535] { R21792 += 1 };
  s3 -> s3 [0, 45] { R21792 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s4 [46, 46] { R21792 += 1 };
  s3 -> s3 [47, 65535] { R21792 += 1 };
  s4 -> s3 [0, 45] { R21792 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s4 [46, 46] { R21792 += 1 };
  s4 -> s3 [47, 114] { R21792 += 1 };
  s4 -> s5 [115, 115] { R21792 += 1 };
  s4 -> s3 [116, 65535] { R21792 += 1 };
  s5 -> s3 [0, 45] { R21792 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s4 [46, 46] { R21792 += 1 };
  s5 -> s3 [47, 110] { R21792 += 1 };
  s5 -> s6 [111, 111] { R21792 += 1 };
  s5 -> s3 [112, 65535] { R21792 += 1 };
  s6 -> s3 [0, 45] { R21792 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s4 [46, 46] { R21792 += 1 };
  s6 -> s3 [47, 98] { R21792 += 1 };
  s6 -> s7 [99, 99] { R21792 += 1 };
  s6 -> s3 [100, 65535] { R21792 += 1 };
  s7 -> s3 [0, 45] { R21792 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s4 [46, 46] { R21792 += 1 };
  s7 -> s3 [47, 106] { R21792 += 1 };
  s7 -> s3 [108, 65535] { R21792 += 1 };
  s8 -> s1 [0, 45] { R21792 += 1 };
  s8 -> s2 [46, 46] { R21792 += 1 };
  s8 -> s3 [47, 47] { R21792 += 1 };
  s8 -> s1 [48, 110] { R21792 += 1 };
  s8 -> s9 [111, 111] { R21792 += 1 };
  s8 -> s1 [112, 65535] { R21792 += 1 };
  s9 -> s1 [0, 45] { R21792 += 1 };
  s9 -> s2 [46, 46] { R21792 += 1 };
  s9 -> s3 [47, 47] { R21792 += 1 };
  s9 -> s1 [48, 98] { R21792 += 1 };
  s9 -> s10 [99, 99] { R21792 += 1 };
  s9 -> s1 [100, 65535] { R21792 += 1 };
  s10 -> s1 [0, 45] { R21792 += 1 };
  s10 -> s2 [46, 46] { R21792 += 1 };
  s10 -> s3 [47, 47] { R21792 += 1 };
  s10 -> s1 [48, 106] { R21792 += 1 };
  s10 -> s1 [108, 65535] { R21792 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_3 {
  init s0;
  s0 -> s0 [0, 65535] { R21793 += 1, R21794 += 1 };
  s0 -> s1 [0, 65535] { R21794 += 1, R8 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R21794 += 1, R8 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s1 [0, 46] { R21796 += 1 };
  s0 -> s0 [0, 65535] { R21795 += 1, R21796 += 1 };
  s0 -> s2 [0, 65535] { R21796 += 1, R24 += 1 };
  s0 -> s3 [47, 47] { R21796 += 1 };
  s0 -> s1 [48, 65535] { R21796 += 1 };
  s1 -> s1 [0, 46] { R21796 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [47, 47] { R21796 += 1 };
  s1 -> s1 [48, 65535] { R21796 += 1 };
  s2 -> s1 [0, 46] { R21796 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R21796 += 1, R24 += 1 };
  s2 -> s3 [47, 47] { R21796 += 1 };
  s2 -> s1 [48, 65535] { R21796 += 1 };
  s3 -> s3 [0, 65535] { R21796 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 36] { R21798 += 1, R21692 += 1 };
  s0 -> s2 [0, 65535] { R21798 += 1, R21691 += 1, R21692 += 1 };
  s0 -> s0 [0, 65535] { R21797 += 1, R21798 += 1 };
  s0 -> s1 [38, 42] { R21798 += 1, R21692 += 1 };
  s0 -> s1 [44, 45] { R21798 += 1, R21692 += 1 };
  s0 -> s1 [47, 62] { R21798 += 1, R21692 += 1 };
  s0 -> s1 [64, 65535] { R21798 += 1, R21692 += 1 };
  s1 -> s1 [0, 36] { R21798 += 1, R21692 += 1 };
  s1 -> s1 [0, 65535] { R21798 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [38, 42] { R21798 += 1, R21692 += 1 };
  s1 -> s1 [44, 45] { R21798 += 1, R21692 += 1 };
  s1 -> s1 [47, 62] { R21798 += 1, R21692 += 1 };
  s1 -> s1 [64, 65535] { R21798 += 1, R21692 += 1 };
  s2 -> s1 [0, 36] { R21798 += 1, R21692 += 1 };
  s2 -> s2 [0, 65535] { R21798 += 1, R21691 += 1, R21692 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [38, 42] { R21798 += 1, R21692 += 1 };
  s2 -> s1 [44, 45] { R21798 += 1, R21692 += 1 };
  s2 -> s1 [47, 62] { R21798 += 1, R21692 += 1 };
  s2 -> s1 [64, 65535] { R21798 += 1, R21692 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_6 {
  init s0;
  s0 -> s1 [0, 65535] { R21800 += 1, R21694 += 1, R5 += 1 };
  s0 -> s2 [0, 65535] { R21800 += 1, R21693 += 1, R21694 += 1 };
  s0 -> s0 [0, 65535] { R21799 += 1, R21800 += 1 };
  s1 -> s1 [0, 65535] { R21800 += 1, R21694 += 1, R5 += 1 };
  s1 -> s4 [0, 65535] { R21800 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R21800 += 1, R21694 += 1, R5 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R21800 += 1, R21693 += 1, R21694 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R21800 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_7 {
  init s0;
  s0 -> s1 [0, 62] { R21802 += 1, R21696 += 1, R40 += 1 };
  s0 -> s2 [0, 65535] { R21802 += 1, R21695 += 1, R21696 += 1 };
  s0 -> s3 [0, 65535] { R21802 += 1, R21696 += 1, R39 += 1, R40 += 1 };
  s0 -> s0 [0, 65535] { R21801 += 1, R21802 += 1 };
  s0 -> s4 [63, 63] { R21802 += 1, R21696 += 1, R40 += 1 };
  s0 -> s1 [64, 65535] { R21802 += 1, R21696 += 1, R40 += 1 };
  s1 -> s1 [0, 65535] { R21802 += 1, R21696 += 1, R40 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R21802 += 1 };
  s1 -> s7 [0, 65535] { R21802 += 1, R21696 += 1 };
  s2 -> s1 [0, 62] { R21802 += 1, R21696 += 1, R40 += 1 };
  s2 -> s2 [0, 65535] { R21802 += 1, R21695 += 1, R21696 += 1 };
  s2 -> s3 [0, 65535] { R21802 += 1, R21696 += 1, R39 += 1, R40 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s4 [63, 63] { R21802 += 1, R21696 += 1, R40 += 1 };
  s2 -> s1 [64, 65535] { R21802 += 1, R21696 += 1, R40 += 1 };
  s3 -> s1 [0, 62] { R21802 += 1, R21696 += 1, R40 += 1 };
  s3 -> s3 [0, 65535] { R21802 += 1, R21696 += 1, R39 += 1, R40 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R21802 += 1 };
  s3 -> s4 [63, 63] { R21802 += 1, R21696 += 1, R40 += 1 };
  s3 -> s1 [64, 65535] { R21802 += 1, R21696 += 1, R40 += 1 };
  s4 -> s1 [0, 65535] { R21802 += 1, R21696 += 1, R40 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R21802 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R21802 += 1 };
  s7 -> s7 [0, 65535] { R21802 += 1, R21696 += 1 };
  accepting s3, s5, s2, s6, s1, s7, s0;
};
automaton uri_8 {
  init s0;
  s0 -> s0 [0, 65535] { R21803 += 1, R21804 += 1 };
  s0 -> s1 [0, 65535] { R21804 += 1, R21698 += 1, R42 += 1, R12 += 1 };
  s0 -> s2 [0, 65535] { R21804 += 1, R21697 += 1, R21698 += 1 };
  s0 -> s3 [0, 65535] { R21804 += 1, R21698 += 1, R41 += 1, R42 += 1 };
  s1 -> s4 [0, 65535] { R21804 += 1 };
  s1 -> s1 [0, 65535] { R21804 += 1, R21698 += 1, R42 += 1, R12 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R21804 += 1, R21698 += 1 };
  s2 -> s1 [0, 65535] { R21804 += 1, R21698 += 1, R42 += 1, R12 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R21804 += 1, R21697 += 1, R21698 += 1 };
  s2 -> s3 [0, 65535] { R21804 += 1, R21698 += 1, R41 += 1, R42 += 1 };
  s3 -> s4 [0, 65535] { R21804 += 1 };
  s3 -> s1 [0, 65535] { R21804 += 1, R21698 += 1, R42 += 1, R12 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R21804 += 1, R21698 += 1, R41 += 1, R42 += 1 };
  s4 -> s4 [0, 65535] { R21804 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R21804 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R21804 += 1, R21698 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_9 {
  init s0;
  s0 -> s1 [0, 63] { R21806 += 1, R21728 += 1 };
  s0 -> s0 [0, 65535] { R21805 += 1, R21806 += 1 };
  s0 -> s2 [0, 65535] { R21806 += 1, R21727 += 1, R21728 += 1 };
  s0 -> s3 [64, 64] { R21806 += 1, R21728 += 1 };
  s0 -> s1 [65, 65535] { R21806 += 1, R21728 += 1 };
  s1 -> s1 [0, 63] { R21806 += 1, R21728 += 1 };
  s1 -> s3 [64, 64] { R21806 += 1, R21728 += 1 };
  s1 -> s1 [65, 65535] { R21806 += 1, R21728 += 1 };
  s2 -> s1 [0, 63] { R21806 += 1, R21728 += 1 };
  s2 -> s2 [0, 65535] { R21806 += 1, R21727 += 1, R21728 += 1 };
  s2 -> s3 [64, 64] { R21806 += 1, R21728 += 1 };
  s2 -> s1 [65, 65535] { R21806 += 1, R21728 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R21806 += 1 };
  s3 -> s3 [0, 65535] { R21806 += 1, R21728 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R21806 += 1 };
  accepting s3, s4, s5;
};
automaton uri_10 {
  init s0;
  s0 -> s0 [0, 65535] { R21807 += 1, R21808 += 1 };
  s0 -> s1 [0, 65535] { R21808 += 1, R21729 += 1, R21730 += 1 };
  s0 -> s2 [0, 65535] { R21808 += 1, R21730 += 1, R7 += 1 };
  s1 -> s1 [0, 65535] { R21808 += 1, R21729 += 1, R21730 += 1 };
  s1 -> s2 [0, 65535] { R21808 += 1, R21730 += 1, R7 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R21808 += 1 };
  s2 -> s2 [0, 65535] { R21808 += 1, R21730 += 1, R7 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R21808 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_11 {
  init s0;
  s0 -> s1 [0, 86] { R21810 += 1, R21732 += 1 };
  s0 -> s0 [0, 65535] { R21809 += 1, R21810 += 1 };
  s0 -> s2 [0, 65535] { R21810 += 1, R21732 += 1, R18 += 1 };
  s0 -> s3 [0, 65535] { R21810 += 1, R21731 += 1, R21732 += 1 };
  s0 -> s4 [87, 87] { R21810 += 1, R21732 += 1 };
  s0 -> s1 [88, 65535] { R21810 += 1, R21732 += 1 };
  s1 -> s1 [0, 86] { R21810 += 1, R21732 += 1 };
  s1 -> s1 [0, 65535] { R21810 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s4 [87, 87] { R21810 += 1, R21732 += 1 };
  s1 -> s1 [88, 65535] { R21810 += 1, R21732 += 1 };
  s2 -> s1 [0, 86] { R21810 += 1, R21732 += 1 };
  s2 -> s6 [0, 65535] { R21810 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R21810 += 1, R21732 += 1, R18 += 1 };
  s2 -> s4 [87, 87] { R21810 += 1, R21732 += 1 };
  s2 -> s1 [88, 65535] { R21810 += 1, R21732 += 1 };
  s3 -> s1 [0, 86] { R21810 += 1, R21732 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R21810 += 1, R21732 += 1, R18 += 1 };
  s3 -> s3 [0, 65535] { R21810 += 1, R21731 += 1, R21732 += 1 };
  s3 -> s4 [87, 87] { R21810 += 1, R21732 += 1 };
  s3 -> s1 [88, 65535] { R21810 += 1, R21732 += 1 };
  s4 -> s4 [0, 65535] { R21810 += 1, R21732 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R21810 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s5, s2, s6, s1, s0;
};
automaton uri_12 {
  init s0;
  s0 -> s1 [0, 89] { R21812 += 1, R21734 += 1 };
  s0 -> s2 [0, 65535] { R21812 += 1, R21734 += 1, R21 += 1 };
  s0 -> s0 [0, 65535] { R21811 += 1, R21812 += 1 };
  s0 -> s3 [0, 65535] { R21812 += 1, R21733 += 1, R21734 += 1 };
  s0 -> s4 [90, 90] { R21812 += 1, R21734 += 1 };
  s0 -> s1 [91, 65535] { R21812 += 1, R21734 += 1 };
  s1 -> s1 [0, 89] { R21812 += 1, R21734 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R21812 += 1 };
  s1 -> s4 [90, 90] { R21812 += 1, R21734 += 1 };
  s1 -> s1 [91, 65535] { R21812 += 1, R21734 += 1 };
  s2 -> s1 [0, 89] { R21812 += 1, R21734 += 1 };
  s2 -> s2 [0, 65535] { R21812 += 1, R21734 += 1, R21 += 1 };
  s2 -> s6 [0, 65535] { R21812 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s4 [90, 90] { R21812 += 1, R21734 += 1 };
  s2 -> s1 [91, 65535] { R21812 += 1, R21734 += 1 };
  s3 -> s1 [0, 89] { R21812 += 1, R21734 += 1 };
  s3 -> s2 [0, 65535] { R21812 += 1, R21734 += 1, R21 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R21812 += 1, R21733 += 1, R21734 += 1 };
  s3 -> s4 [90, 90] { R21812 += 1, R21734 += 1 };
  s3 -> s1 [91, 65535] { R21812 += 1, R21734 += 1 };
  s4 -> s4 [0, 65535] { R21812 += 1, R21734 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R21812 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s5, s2, s6, s1, s0;
};
automaton uri_13 {
  init s0;
  s0 -> s1 [0, 36] { R21814 += 1, R21736 += 1, R44 += 1 };
  s0 -> s0 [0, 65535] { R21813 += 1, R21814 += 1 };
  s0 -> s2 [0, 65535] { R21814 += 1, R21735 += 1, R21736 += 1 };
  s0 -> s3 [0, 65535] { R21814 += 1, R21736 += 1, R43 += 1, R44 += 1 };
  s0 -> s1 [38, 42] { R21814 += 1, R21736 += 1, R44 += 1 };
  s0 -> s1 [44, 57] { R21814 += 1, R21736 += 1, R44 += 1 };
  s0 -> s1 [59, 63] { R21814 += 1, R21736 += 1, R44 += 1 };
  s0 -> s1 [65, 65535] { R21814 += 1, R21736 += 1, R44 += 1 };
  s1 -> s1 [0, 36] { R21814 += 1, R21736 += 1, R44 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R21814 += 1 };
  s1 -> s1 [0, 65535] { R21814 += 1, R21736 += 1 };
  s1 -> s1 [38, 42] { R21814 += 1, R21736 += 1, R44 += 1 };
  s1 -> s1 [44, 57] { R21814 += 1, R21736 += 1, R44 += 1 };
  s1 -> s1 [59, 63] { R21814 += 1, R21736 += 1, R44 += 1 };
  s1 -> s1 [65, 65535] { R21814 += 1, R21736 += 1, R44 += 1 };
  s2 -> s1 [0, 36] { R21814 += 1, R21736 += 1, R44 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R21814 += 1, R21735 += 1, R21736 += 1 };
  s2 -> s3 [0, 65535] { R21814 += 1, R21736 += 1, R43 += 1, R44 += 1 };
  s2 -> s1 [38, 42] { R21814 += 1, R21736 += 1, R44 += 1 };
  s2 -> s1 [44, 57] { R21814 += 1, R21736 += 1, R44 += 1 };
  s2 -> s1 [59, 63] { R21814 += 1, R21736 += 1, R44 += 1 };
  s2 -> s1 [65, 65535] { R21814 += 1, R21736 += 1, R44 += 1 };
  s3 -> s1 [0, 36] { R21814 += 1, R21736 += 1, R44 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R21814 += 1 };
  s3 -> s3 [0, 65535] { R21814 += 1, R21736 += 1, R43 += 1, R44 += 1 };
  s3 -> s1 [38, 42] { R21814 += 1, R21736 += 1, R44 += 1 };
  s3 -> s1 [44, 57] { R21814 += 1, R21736 += 1, R44 += 1 };
  s3 -> s1 [59, 63] { R21814 += 1, R21736 += 1, R44 += 1 };
  s3 -> s1 [65, 65535] { R21814 += 1, R21736 += 1, R44 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R21814 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 65535] { R21816 += 1, R21737 += 1, R21738 += 1 };
  s0 -> s2 [0, 65535] { R21816 += 1, R21738 += 1, R45 += 1, R46 += 1 };
  s0 -> s0 [0, 65535] { R21815 += 1, R21816 += 1 };
  s0 -> s3 [0, 65535] { R21816 += 1, R21738 += 1, R46 += 1, R4 += 1 };
  s1 -> s1 [0, 65535] { R21816 += 1, R21737 += 1, R21738 += 1 };
  s1 -> s2 [0, 65535] { R21816 += 1, R21738 += 1, R45 += 1, R46 += 1 };
  s1 -> s3 [0, 65535] { R21816 += 1, R21738 += 1, R46 += 1, R4 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R21816 += 1, R21738 += 1, R45 += 1, R46 += 1 };
  s2 -> s5 [0, 65535] { R21816 += 1 };
  s2 -> s3 [0, 65535] { R21816 += 1, R21738 += 1, R46 += 1, R4 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R21816 += 1, R21738 += 1 };
  s3 -> s5 [0, 65535] { R21816 += 1 };
  s3 -> s3 [0, 65535] { R21816 += 1, R21738 += 1, R46 += 1, R4 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R21816 += 1, R21738 += 1 };
  s4 -> s5 [0, 65535] { R21816 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R21816 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_15 {
  init s0;
  s0 -> s1 [0, 36] { R21818 += 1, R21740 += 1, R48 += 1 };
  s0 -> s2 [0, 65535] { R21818 += 1, R21739 += 1, R21740 += 1 };
  s0 -> s0 [0, 65535] { R21817 += 1, R21818 += 1 };
  s0 -> s3 [0, 65535] { R21818 += 1, R21740 += 1, R47 += 1, R48 += 1 };
  s0 -> s1 [38, 42] { R21818 += 1, R21740 += 1, R48 += 1 };
  s0 -> s1 [44, 57] { R21818 += 1, R21740 += 1, R48 += 1 };
  s0 -> s1 [59, 63] { R21818 += 1, R21740 += 1, R48 += 1 };
  s0 -> s1 [65, 65535] { R21818 += 1, R21740 += 1, R48 += 1 };
  s1 -> s1 [0, 36] { R21818 += 1, R21740 += 1, R48 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R21818 += 1, R21740 += 1 };
  s1 -> s5 [0, 65535] { R21818 += 1 };
  s1 -> s1 [38, 42] { R21818 += 1, R21740 += 1, R48 += 1 };
  s1 -> s1 [44, 57] { R21818 += 1, R21740 += 1, R48 += 1 };
  s1 -> s1 [59, 63] { R21818 += 1, R21740 += 1, R48 += 1 };
  s1 -> s1 [65, 65535] { R21818 += 1, R21740 += 1, R48 += 1 };
  s2 -> s1 [0, 36] { R21818 += 1, R21740 += 1, R48 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R21818 += 1, R21739 += 1, R21740 += 1 };
  s2 -> s3 [0, 65535] { R21818 += 1, R21740 += 1, R47 += 1, R48 += 1 };
  s2 -> s1 [38, 42] { R21818 += 1, R21740 += 1, R48 += 1 };
  s2 -> s1 [44, 57] { R21818 += 1, R21740 += 1, R48 += 1 };
  s2 -> s1 [59, 63] { R21818 += 1, R21740 += 1, R48 += 1 };
  s2 -> s1 [65, 65535] { R21818 += 1, R21740 += 1, R48 += 1 };
  s3 -> s1 [0, 36] { R21818 += 1, R21740 += 1, R48 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R21818 += 1 };
  s3 -> s3 [0, 65535] { R21818 += 1, R21740 += 1, R47 += 1, R48 += 1 };
  s3 -> s1 [38, 42] { R21818 += 1, R21740 += 1, R48 += 1 };
  s3 -> s1 [44, 57] { R21818 += 1, R21740 += 1, R48 += 1 };
  s3 -> s1 [59, 63] { R21818 += 1, R21740 += 1, R48 += 1 };
  s3 -> s1 [65, 65535] { R21818 += 1, R21740 += 1, R48 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R21818 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 65535] { R21820 += 1, R21741 += 1, R21742 += 1 };
  s0 -> s2 [0, 65535] { R21820 += 1, R21742 += 1, R50 += 1, R1 += 1 };
  s0 -> s0 [0, 65535] { R21819 += 1, R21820 += 1 };
  s0 -> s3 [0, 65535] { R21820 += 1, R21742 += 1, R49 += 1, R50 += 1 };
  s1 -> s1 [0, 65535] { R21820 += 1, R21741 += 1, R21742 += 1 };
  s1 -> s2 [0, 65535] { R21820 += 1, R21742 += 1, R50 += 1, R1 += 1 };
  s1 -> s3 [0, 65535] { R21820 += 1, R21742 += 1, R49 += 1, R50 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s4 [0, 65535] { R21820 += 1 };
  s2 -> s2 [0, 65535] { R21820 += 1, R21742 += 1, R50 += 1, R1 += 1 };
  s2 -> s6 [0, 65535] { R21820 += 1, R21742 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R21820 += 1 };
  s3 -> s2 [0, 65535] { R21820 += 1, R21742 += 1, R50 += 1, R1 += 1 };
  s3 -> s3 [0, 65535] { R21820 += 1, R21742 += 1, R49 += 1, R50 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R21820 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R21820 += 1 };
  s6 -> s6 [0, 65535] { R21820 += 1, R21742 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_17 {
  init s0;
  s0 -> s1 [0, 65535] { R21822 += 1, R21744 += 1, R21671 += 1, R21672 += 1 };
  s0 -> s2 [0, 65535] { R21822 += 1, R21744 += 1, R21672 += 1, R27 += 1 };
  s0 -> s0 [0, 65535] { R21821 += 1, R21822 += 1 };
  s0 -> s3 [0, 65535] { R21822 += 1, R21743 += 1, R21744 += 1 };
  s1 -> s1 [0, 65535] { R21822 += 1, R21744 += 1, R21671 += 1, R21672 += 1 };
  s1 -> s2 [0, 65535] { R21822 += 1, R21744 += 1, R21672 += 1, R27 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R21822 += 1 };
  s2 -> s5 [0, 65535] { R21822 += 1, R21744 += 1 };
  s2 -> s2 [0, 65535] { R21822 += 1, R21744 += 1, R21672 += 1, R27 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s6 [0, 65535] { R21822 += 1 };
  s3 -> s1 [0, 65535] { R21822 += 1, R21744 += 1, R21671 += 1, R21672 += 1 };
  s3 -> s2 [0, 65535] { R21822 += 1, R21744 += 1, R21672 += 1, R27 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R21822 += 1, R21743 += 1, R21744 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R21822 += 1, R21744 += 1 };
  s5 -> s4 [0, 65535];
  s5 -> s6 [0, 65535] { R21822 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R21822 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 115] { R21824 += 1, R21746 += 1, R21674 += 1 };
  s0 -> s0 [0, 65535] { R21823 += 1, R21824 += 1 };
  s0 -> s2 [0, 65535] { R21824 += 1, R21745 += 1, R21746 += 1 };
  s0 -> s3 [0, 65535] { R21824 += 1, R21746 += 1, R21673 += 1, R21674 += 1 };
  s0 -> s4 [116, 116] { R21824 += 1, R21746 += 1, R21674 += 1 };
  s0 -> s1 [117, 65535] { R21824 += 1, R21746 += 1, R21674 += 1 };
  s1 -> s7 [0, 65535] { R21824 += 1, R21746 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R21824 += 1 };
  s1 -> s1 [0, 65535] { R21824 += 1, R21746 += 1, R21674 += 1 };
  s2 -> s1 [0, 115] { R21824 += 1, R21746 += 1, R21674 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R21824 += 1, R21745 += 1, R21746 += 1 };
  s2 -> s3 [0, 65535] { R21824 += 1, R21746 += 1, R21673 += 1, R21674 += 1 };
  s2 -> s4 [116, 116] { R21824 += 1, R21746 += 1, R21674 += 1 };
  s2 -> s1 [117, 65535] { R21824 += 1, R21746 += 1, R21674 += 1 };
  s3 -> s1 [0, 115] { R21824 += 1, R21746 += 1, R21674 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R21824 += 1 };
  s3 -> s3 [0, 65535] { R21824 += 1, R21746 += 1, R21673 += 1, R21674 += 1 };
  s3 -> s4 [116, 116] { R21824 += 1, R21746 += 1, R21674 += 1 };
  s3 -> s1 [117, 65535] { R21824 += 1, R21746 += 1, R21674 += 1 };
  s4 -> s1 [0, 65535] { R21824 += 1, R21746 += 1, R21674 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R21824 += 1 };
  s7 -> s7 [0, 65535] { R21824 += 1, R21746 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R21824 += 1 };
  accepting s3, s5, s2, s6, s1, s7, s0;
};
automaton uri_19 {
  init s0;
  s0 -> s1 [0, 65535] { R21826 += 1, R21747 += 1, R21748 += 1 };
  s0 -> s2 [0, 65535] { R21826 += 1, R21748 += 1, R21676 += 1, R20622 += 1 };
  s0 -> s0 [0, 65535] { R21825 += 1, R21826 += 1 };
  s0 -> s3 [0, 65535] { R21826 += 1, R21748 += 1, R21675 += 1, R21676 += 1 };
  s1 -> s1 [0, 65535] { R21826 += 1, R21747 += 1, R21748 += 1 };
  s1 -> s2 [0, 65535] { R21826 += 1, R21748 += 1, R21676 += 1, R20622 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R21826 += 1, R21748 += 1, R21675 += 1, R21676 += 1 };
  s2 -> s6 [0, 65535] { R21826 += 1, R21748 += 1 };
  s2 -> s4 [0, 65535] { R21826 += 1 };
  s2 -> s2 [0, 65535] { R21826 += 1, R21748 += 1, R21676 += 1, R20622 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R21826 += 1 };
  s3 -> s2 [0, 65535] { R21826 += 1, R21748 += 1, R21676 += 1, R20622 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R21826 += 1, R21748 += 1, R21675 += 1, R21676 += 1 };
  s4 -> s4 [0, 65535] { R21826 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R21826 += 1, R21748 += 1 };
  s6 -> s4 [0, 65535] { R21826 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 65535] { R21828 += 1, R21749 += 1, R21750 += 1 };
  s0 -> s2 [0, 65535] { R21828 += 1, R21750 += 1, R21678 += 1, R28 += 1 };
  s0 -> s3 [0, 65535] { R21828 += 1, R21750 += 1, R21677 += 1, R21678 += 1 };
  s0 -> s0 [0, 65535] { R21827 += 1, R21828 += 1 };
  s1 -> s1 [0, 65535] { R21828 += 1, R21749 += 1, R21750 += 1 };
  s1 -> s2 [0, 65535] { R21828 += 1, R21750 += 1, R21678 += 1, R28 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R21828 += 1, R21750 += 1, R21677 += 1, R21678 += 1 };
  s2 -> s4 [0, 65535] { R21828 += 1 };
  s2 -> s6 [0, 65535] { R21828 += 1, R21750 += 1 };
  s2 -> s2 [0, 65535] { R21828 += 1, R21750 += 1, R21678 += 1, R28 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R21828 += 1 };
  s3 -> s2 [0, 65535] { R21828 += 1, R21750 += 1, R21678 += 1, R28 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R21828 += 1, R21750 += 1, R21677 += 1, R21678 += 1 };
  s4 -> s4 [0, 65535] { R21828 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R21828 += 1 };
  s6 -> s6 [0, 65535] { R21828 += 1, R21750 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_21 {
  init s0;
  s0 -> s1 [0, 107] { R21830 += 1, R21752 += 1, R21680 += 1 };
  s0 -> s2 [0, 65535] { R21830 += 1, R21752 += 1, R21679 += 1, R21680 += 1 };
  s0 -> s3 [0, 65535] { R21830 += 1, R21751 += 1, R21752 += 1 };
  s0 -> s0 [0, 65535] { R21829 += 1, R21830 += 1 };
  s0 -> s4 [108, 108] { R21830 += 1, R21752 += 1, R21680 += 1 };
  s0 -> s1 [109, 65535] { R21830 += 1, R21752 += 1, R21680 += 1 };
  s1 -> s11 [0, 65535] { R21830 += 1, R21752 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R21830 += 1 };
  s1 -> s1 [0, 65535] { R21830 += 1, R21752 += 1, R21680 += 1 };
  s2 -> s1 [0, 107] { R21830 += 1, R21752 += 1, R21680 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R21830 += 1 };
  s2 -> s2 [0, 65535] { R21830 += 1, R21752 += 1, R21679 += 1, R21680 += 1 };
  s2 -> s4 [108, 108] { R21830 += 1, R21752 += 1, R21680 += 1 };
  s2 -> s1 [109, 65535] { R21830 += 1, R21752 += 1, R21680 += 1 };
  s3 -> s1 [0, 107] { R21830 += 1, R21752 += 1, R21680 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R21830 += 1, R21752 += 1, R21679 += 1, R21680 += 1 };
  s3 -> s3 [0, 65535] { R21830 += 1, R21751 += 1, R21752 += 1 };
  s3 -> s4 [108, 108] { R21830 += 1, R21752 += 1, R21680 += 1 };
  s3 -> s1 [109, 65535] { R21830 += 1, R21752 += 1, R21680 += 1 };
  s4 -> s1 [0, 103] { R21830 += 1, R21752 += 1, R21680 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R21830 += 1 };
  s4 -> s4 [0, 65535] { R21830 += 1, R21752 += 1 };
  s4 -> s7 [104, 104] { R21830 += 1, R21752 += 1, R21680 += 1 };
  s4 -> s1 [105, 65535] { R21830 += 1, R21752 += 1, R21680 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R21830 += 1 };
  s7 -> s1 [0, 110] { R21830 += 1, R21752 += 1, R21680 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R21830 += 1 };
  s7 -> s7 [0, 65535] { R21830 += 1, R21752 += 1 };
  s7 -> s8 [111, 111] { R21830 += 1, R21752 += 1, R21680 += 1 };
  s7 -> s1 [112, 65535] { R21830 += 1, R21752 += 1, R21680 += 1 };
  s8 -> s1 [0, 114] { R21830 += 1, R21752 += 1, R21680 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R21830 += 1 };
  s8 -> s8 [0, 65535] { R21830 += 1, R21752 += 1 };
  s8 -> s9 [115, 115] { R21830 += 1, R21752 += 1, R21680 += 1 };
  s8 -> s1 [116, 65535] { R21830 += 1, R21752 += 1, R21680 += 1 };
  s9 -> s1 [0, 115] { R21830 += 1, R21752 += 1, R21680 += 1 };
  s9 -> s9 [0, 65535] { R21830 += 1, R21752 += 1 };
  s9 -> s5 [0, 65535];
  s9 -> s6 [0, 65535] { R21830 += 1 };
  s9 -> s10 [116, 116] { R21830 += 1, R21752 += 1, R21680 += 1 };
  s9 -> s1 [117, 65535] { R21830 += 1, R21752 += 1, R21680 += 1 };
  s10 -> s1 [0, 65535] { R21830 += 1, R21752 += 1, R21680 += 1 };
  s11 -> s11 [0, 65535] { R21830 += 1, R21752 += 1 };
  s11 -> s5 [0, 65535];
  s11 -> s6 [0, 65535] { R21830 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s11;
};
automaton uri_22 {
  init s0;
  s0 -> s1 [0, 43] { R21832 += 1, R21754 += 1, R21682 += 1 };
  s0 -> s2 [0, 65535] { R21832 += 1, R21753 += 1, R21754 += 1 };
  s0 -> s3 [0, 65535] { R21832 += 1, R21754 += 1, R21681 += 1, R21682 += 1 };
  s0 -> s0 [0, 65535] { R21831 += 1, R21832 += 1 };
  s0 -> s1 [45, 64] { R21832 += 1, R21754 += 1, R21682 += 1 };
  s0 -> s1 [91, 65535] { R21832 += 1, R21754 += 1, R21682 += 1 };
  s1 -> s1 [0, 43] { R21832 += 1, R21754 += 1, R21682 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R21832 += 1, R21754 += 1 };
  s1 -> s5 [0, 65535] { R21832 += 1 };
  s1 -> s1 [45, 64] { R21832 += 1, R21754 += 1, R21682 += 1 };
  s1 -> s1 [91, 65535] { R21832 += 1, R21754 += 1, R21682 += 1 };
  s2 -> s1 [0, 43] { R21832 += 1, R21754 += 1, R21682 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R21832 += 1, R21753 += 1, R21754 += 1 };
  s2 -> s3 [0, 65535] { R21832 += 1, R21754 += 1, R21681 += 1, R21682 += 1 };
  s2 -> s1 [45, 64] { R21832 += 1, R21754 += 1, R21682 += 1 };
  s2 -> s1 [91, 65535] { R21832 += 1, R21754 += 1, R21682 += 1 };
  s3 -> s1 [0, 43] { R21832 += 1, R21754 += 1, R21682 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R21832 += 1, R21754 += 1, R21681 += 1, R21682 += 1 };
  s3 -> s5 [0, 65535] { R21832 += 1 };
  s3 -> s1 [45, 64] { R21832 += 1, R21754 += 1, R21682 += 1 };
  s3 -> s1 [91, 65535] { R21832 += 1, R21754 += 1, R21682 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R21832 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_23 {
  init s0;
  s0 -> s1 [0, 65535] { R21834 += 1, R21755 += 1, R21756 += 1 };
  s0 -> s0 [0, 65535] { R21833 += 1, R21834 += 1 };
  s0 -> s2 [0, 65535] { R21834 += 1, R21756 += 1, R21684 += 1, R3 += 1 };
  s0 -> s3 [0, 65535] { R21834 += 1, R21756 += 1, R21683 += 1, R21684 += 1 };
  s1 -> s1 [0, 65535] { R21834 += 1, R21755 += 1, R21756 += 1 };
  s1 -> s2 [0, 65535] { R21834 += 1, R21756 += 1, R21684 += 1, R3 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R21834 += 1, R21756 += 1, R21683 += 1, R21684 += 1 };
  s2 -> s6 [0, 65535] { R21834 += 1, R21756 += 1 };
  s2 -> s2 [0, 65535] { R21834 += 1, R21756 += 1, R21684 += 1, R3 += 1 };
  s2 -> s4 [0, 65535] { R21834 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R21834 += 1, R21756 += 1, R21684 += 1, R3 += 1 };
  s3 -> s4 [0, 65535] { R21834 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R21834 += 1, R21756 += 1, R21683 += 1, R21684 += 1 };
  s4 -> s4 [0, 65535] { R21834 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R21834 += 1, R21756 += 1 };
  s6 -> s4 [0, 65535] { R21834 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_24 {
  init s0;
  s0 -> s1 [0, 57] { R21836 += 1, R21758 += 1, R21686 += 1 };
  s0 -> s2 [0, 65535] { R21836 += 1, R21758 += 1, R21686 += 1, R14 += 1 };
  s0 -> s3 [0, 65535] { R21836 += 1, R21757 += 1, R21758 += 1 };
  s0 -> s4 [0, 65535] { R21836 += 1, R21758 += 1, R21685 += 1, R21686 += 1 };
  s0 -> s0 [0, 65535] { R21835 += 1, R21836 += 1 };
  s0 -> s5 [58, 58] { R21836 += 1, R21758 += 1, R21686 += 1 };
  s0 -> s1 [59, 65535] { R21836 += 1, R21758 += 1, R21686 += 1 };
  s1 -> s1 [0, 57] { R21836 += 1, R21758 += 1, R21686 += 1 };
  s1 -> s1 [0, 65535] { R21836 += 1, R21758 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R21836 += 1 };
  s1 -> s5 [58, 58] { R21836 += 1, R21758 += 1, R21686 += 1 };
  s1 -> s1 [59, 65535] { R21836 += 1, R21758 += 1, R21686 += 1 };
  s2 -> s1 [0, 57] { R21836 += 1, R21758 += 1, R21686 += 1 };
  s2 -> s2 [0, 65535] { R21836 += 1, R21758 += 1, R21686 += 1, R14 += 1 };
  s2 -> s8 [0, 65535] { R21836 += 1, R21758 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R21836 += 1 };
  s2 -> s5 [58, 58] { R21836 += 1, R21758 += 1, R21686 += 1 };
  s2 -> s1 [59, 65535] { R21836 += 1, R21758 += 1, R21686 += 1 };
  s3 -> s1 [0, 57] { R21836 += 1, R21758 += 1, R21686 += 1 };
  s3 -> s2 [0, 65535] { R21836 += 1, R21758 += 1, R21686 += 1, R14 += 1 };
  s3 -> s3 [0, 65535] { R21836 += 1, R21757 += 1, R21758 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R21836 += 1, R21758 += 1, R21685 += 1, R21686 += 1 };
  s3 -> s5 [58, 58] { R21836 += 1, R21758 += 1, R21686 += 1 };
  s3 -> s1 [59, 65535] { R21836 += 1, R21758 += 1, R21686 += 1 };
  s4 -> s1 [0, 57] { R21836 += 1, R21758 += 1, R21686 += 1 };
  s4 -> s2 [0, 65535] { R21836 += 1, R21758 += 1, R21686 += 1, R14 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R21836 += 1 };
  s4 -> s4 [0, 65535] { R21836 += 1, R21758 += 1, R21685 += 1, R21686 += 1 };
  s4 -> s5 [58, 58] { R21836 += 1, R21758 += 1, R21686 += 1 };
  s4 -> s1 [59, 65535] { R21836 += 1, R21758 += 1, R21686 += 1 };
  s5 -> s5 [0, 65535] { R21836 += 1, R21758 += 1, R21686 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R21836 += 1 };
  s8 -> s8 [0, 65535] { R21836 += 1, R21758 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R21836 += 1 };
  accepting s3, s4, s8, s2, s6, s1, s7, s0;
};
automaton uri_25 {
  init s0;
  s0 -> s1 [0, 90] { R21838 += 1, R21760 += 1, R21688 += 1, R36 += 1 };
  s0 -> s2 [0, 65535] { R21838 += 1, R21760 += 1, R21688 += 1, R35 += 1, R36 += 1 };
  s0 -> s3 [0, 65535] { R21838 += 1, R21759 += 1, R21760 += 1 };
  s0 -> s4 [0, 65535] { R21838 += 1, R21760 += 1, R21687 += 1, R21688 += 1 };
  s0 -> s0 [0, 65535] { R21837 += 1, R21838 += 1 };
  s0 -> s5 [91, 91] { R21838 += 1, R21760 += 1, R21688 += 1, R36 += 1 };
  s0 -> s1 [92, 65535] { R21838 += 1, R21760 += 1, R21688 += 1, R36 += 1 };
  s1 -> s8 [0, 65535] { R21838 += 1, R21760 += 1 };
  s1 -> s6 [0, 65535] { R21838 += 1 };
  s1 -> s9 [0, 65535] { R21838 += 1, R21760 += 1, R21688 += 1 };
  s1 -> s1 [0, 65535] { R21838 += 1, R21760 += 1, R21688 += 1, R36 += 1 };
  s1 -> s7 [0, 65535];
  s2 -> s1 [0, 90] { R21838 += 1, R21760 += 1, R21688 += 1, R36 += 1 };
  s2 -> s8 [0, 65535] { R21838 += 1, R21760 += 1 };
  s2 -> s6 [0, 65535] { R21838 += 1 };
  s2 -> s2 [0, 65535] { R21838 += 1, R21760 += 1, R21688 += 1, R35 += 1, R36 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s5 [91, 91] { R21838 += 1, R21760 += 1, R21688 += 1, R36 += 1 };
  s2 -> s1 [92, 65535] { R21838 += 1, R21760 += 1, R21688 += 1, R36 += 1 };
  s3 -> s1 [0, 90] { R21838 += 1, R21760 += 1, R21688 += 1, R36 += 1 };
  s3 -> s2 [0, 65535] { R21838 += 1, R21760 += 1, R21688 += 1, R35 += 1, R36 += 1 };
  s3 -> s3 [0, 65535] { R21838 += 1, R21759 += 1, R21760 += 1 };
  s3 -> s4 [0, 65535] { R21838 += 1, R21760 += 1, R21687 += 1, R21688 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s5 [91, 91] { R21838 += 1, R21760 += 1, R21688 += 1, R36 += 1 };
  s3 -> s1 [92, 65535] { R21838 += 1, R21760 += 1, R21688 += 1, R36 += 1 };
  s4 -> s1 [0, 90] { R21838 += 1, R21760 += 1, R21688 += 1, R36 += 1 };
  s4 -> s6 [0, 65535] { R21838 += 1 };
  s4 -> s2 [0, 65535] { R21838 += 1, R21760 += 1, R21688 += 1, R35 += 1, R36 += 1 };
  s4 -> s4 [0, 65535] { R21838 += 1, R21760 += 1, R21687 += 1, R21688 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s5 [91, 91] { R21838 += 1, R21760 += 1, R21688 += 1, R36 += 1 };
  s4 -> s1 [92, 65535] { R21838 += 1, R21760 += 1, R21688 += 1, R36 += 1 };
  s5 -> s1 [0, 65535] { R21838 += 1, R21760 += 1, R21688 += 1, R36 += 1 };
  s6 -> s6 [0, 65535] { R21838 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R21838 += 1, R21760 += 1 };
  s8 -> s6 [0, 65535] { R21838 += 1 };
  s8 -> s7 [0, 65535];
  s9 -> s8 [0, 65535] { R21838 += 1, R21760 += 1 };
  s9 -> s6 [0, 65535] { R21838 += 1 };
  s9 -> s9 [0, 65535] { R21838 += 1, R21760 += 1, R21688 += 1 };
  s9 -> s7 [0, 65535];
  accepting s3, s4, s8, s2, s9, s6, s1, s7, s0;
};
automaton uri_26 {
  init s0;
  s0 -> s1 [0, 65535] { R21840 += 1, R21761 += 1, R21762 += 1 };
  s0 -> s2 [0, 65535] { R21840 += 1, R21762 += 1, R21690 += 1, R38 += 1, R11 += 1 };
  s0 -> s3 [0, 65535] { R21840 += 1, R21762 += 1, R21689 += 1, R21690 += 1 };
  s0 -> s0 [0, 65535] { R21839 += 1, R21840 += 1 };
  s0 -> s4 [0, 65535] { R21840 += 1, R21762 += 1, R21690 += 1, R37 += 1, R38 += 1 };
  s1 -> s1 [0, 65535] { R21840 += 1, R21761 += 1, R21762 += 1 };
  s1 -> s2 [0, 65535] { R21840 += 1, R21762 += 1, R21690 += 1, R38 += 1, R11 += 1 };
  s1 -> s3 [0, 65535] { R21840 += 1, R21762 += 1, R21689 += 1, R21690 += 1 };
  s1 -> s4 [0, 65535] { R21840 += 1, R21762 += 1, R21690 += 1, R37 += 1, R38 += 1 };
  s1 -> s7 [0, 65535];
  s2 -> s2 [0, 65535] { R21840 += 1, R21762 += 1, R21690 += 1, R38 += 1, R11 += 1 };
  s2 -> s5 [0, 65535] { R21840 += 1 };
  s2 -> s8 [0, 65535] { R21840 += 1, R21762 += 1, R21690 += 1 };
  s2 -> s6 [0, 65535] { R21840 += 1, R21762 += 1 };
  s2 -> s7 [0, 65535];
  s3 -> s2 [0, 65535] { R21840 += 1, R21762 += 1, R21690 += 1, R38 += 1, R11 += 1 };
  s3 -> s3 [0, 65535] { R21840 += 1, R21762 += 1, R21689 += 1, R21690 += 1 };
  s3 -> s5 [0, 65535] { R21840 += 1 };
  s3 -> s4 [0, 65535] { R21840 += 1, R21762 += 1, R21690 += 1, R37 += 1, R38 += 1 };
  s3 -> s7 [0, 65535];
  s4 -> s2 [0, 65535] { R21840 += 1, R21762 += 1, R21690 += 1, R38 += 1, R11 += 1 };
  s4 -> s5 [0, 65535] { R21840 += 1 };
  s4 -> s4 [0, 65535] { R21840 += 1, R21762 += 1, R21690 += 1, R37 += 1, R38 += 1 };
  s4 -> s6 [0, 65535] { R21840 += 1, R21762 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R21840 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s5 [0, 65535] { R21840 += 1 };
  s6 -> s6 [0, 65535] { R21840 += 1, R21762 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s5 [0, 65535] { R21840 += 1 };
  s8 -> s8 [0, 65535] { R21840 += 1, R21762 += 1, R21690 += 1 };
  s8 -> s6 [0, 65535] { R21840 += 1, R21762 += 1 };
  s8 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_27 {
  init s0;
  s0 -> s1 [0, 43] { R21842 += 1, R21764 += 1, R21700 += 1 };
  s0 -> s0 [0, 65535] { R21841 += 1, R21842 += 1 };
  s0 -> s2 [0, 65535] { R21842 += 1, R21763 += 1, R21764 += 1 };
  s0 -> s3 [0, 65535] { R21842 += 1, R21764 += 1, R21699 += 1, R21700 += 1 };
  s0 -> s4 [44, 44] { R21842 += 1, R21764 += 1, R21700 += 1 };
  s0 -> s1 [45, 65535] { R21842 += 1, R21764 += 1, R21700 += 1 };
  s1 -> s1 [0, 43] { R21842 += 1, R21764 += 1, R21700 += 1 };
  s1 -> s4 [44, 44] { R21842 += 1, R21764 += 1, R21700 += 1 };
  s1 -> s1 [45, 65535] { R21842 += 1, R21764 += 1, R21700 += 1 };
  s2 -> s1 [0, 43] { R21842 += 1, R21764 += 1, R21700 += 1 };
  s2 -> s2 [0, 65535] { R21842 += 1, R21763 += 1, R21764 += 1 };
  s2 -> s3 [0, 65535] { R21842 += 1, R21764 += 1, R21699 += 1, R21700 += 1 };
  s2 -> s4 [44, 44] { R21842 += 1, R21764 += 1, R21700 += 1 };
  s2 -> s1 [45, 65535] { R21842 += 1, R21764 += 1, R21700 += 1 };
  s3 -> s1 [0, 43] { R21842 += 1, R21764 += 1, R21700 += 1 };
  s3 -> s3 [0, 65535] { R21842 += 1, R21764 += 1, R21699 += 1, R21700 += 1 };
  s3 -> s4 [44, 44] { R21842 += 1, R21764 += 1, R21700 += 1 };
  s3 -> s1 [45, 65535] { R21842 += 1, R21764 += 1, R21700 += 1 };
  s4 -> s5 [0, 65535] { R21842 += 1 };
  s4 -> s6 [0, 65535] { R21842 += 1, R21764 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R21842 += 1, R21764 += 1, R21700 += 1 };
  s5 -> s5 [0, 65535] { R21842 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s5 [0, 65535] { R21842 += 1 };
  s6 -> s6 [0, 65535] { R21842 += 1, R21764 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s4, s5, s6, s7;
};
automaton uri_28 {
  init s0;
  s0 -> s0 [0, 65535] { R21843 += 1, R21844 += 1 };
  s0 -> s1 [0, 65535] { R21844 += 1, R21765 += 1, R21766 += 1 };
  s0 -> s2 [0, 65535] { R21844 += 1, R21766 += 1, R21701 += 1, R21702 += 1 };
  s0 -> s3 [0, 65535] { R21844 += 1, R21766 += 1, R21702 += 1, R6 += 1 };
  s1 -> s1 [0, 65535] { R21844 += 1, R21765 += 1, R21766 += 1 };
  s1 -> s2 [0, 65535] { R21844 += 1, R21766 += 1, R21701 += 1, R21702 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [0, 65535] { R21844 += 1, R21766 += 1, R21702 += 1, R6 += 1 };
  s2 -> s2 [0, 65535] { R21844 += 1, R21766 += 1, R21701 += 1, R21702 += 1 };
  s2 -> s5 [0, 65535] { R21844 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R21844 += 1, R21766 += 1, R21702 += 1, R6 += 1 };
  s3 -> s4 [0, 65535] { R21844 += 1, R21766 += 1 };
  s3 -> s5 [0, 65535] { R21844 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R21844 += 1, R21766 += 1, R21702 += 1, R6 += 1 };
  s4 -> s4 [0, 65535] { R21844 += 1, R21766 += 1 };
  s4 -> s5 [0, 65535] { R21844 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R21844 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_29 {
  init s0;
  s0 -> s1 [0, 43] { R21846 += 1, R21768 += 1, R21704 += 1 };
  s0 -> s2 [0, 65535] { R21846 += 1, R21767 += 1, R21768 += 1 };
  s0 -> s3 [0, 65535] { R21846 += 1, R21768 += 1, R21704 += 1, R15 += 1 };
  s0 -> s4 [0, 65535] { R21846 += 1, R21768 += 1, R21703 += 1, R21704 += 1 };
  s0 -> s0 [0, 65535] { R21845 += 1, R21846 += 1 };
  s0 -> s5 [44, 44] { R21846 += 1, R21768 += 1, R21704 += 1 };
  s0 -> s1 [45, 65535] { R21846 += 1, R21768 += 1, R21704 += 1 };
  s1 -> s1 [0, 43] { R21846 += 1, R21768 += 1, R21704 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R21846 += 1 };
  s1 -> s1 [0, 65535] { R21846 += 1, R21768 += 1 };
  s1 -> s5 [44, 44] { R21846 += 1, R21768 += 1, R21704 += 1 };
  s1 -> s1 [45, 65535] { R21846 += 1, R21768 += 1, R21704 += 1 };
  s2 -> s1 [0, 43] { R21846 += 1, R21768 += 1, R21704 += 1 };
  s2 -> s2 [0, 65535] { R21846 += 1, R21767 += 1, R21768 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R21846 += 1, R21768 += 1, R21704 += 1, R15 += 1 };
  s2 -> s4 [0, 65535] { R21846 += 1, R21768 += 1, R21703 += 1, R21704 += 1 };
  s2 -> s5 [44, 44] { R21846 += 1, R21768 += 1, R21704 += 1 };
  s2 -> s1 [45, 65535] { R21846 += 1, R21768 += 1, R21704 += 1 };
  s3 -> s1 [0, 43] { R21846 += 1, R21768 += 1, R21704 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R21846 += 1, R21768 += 1, R21704 += 1, R15 += 1 };
  s3 -> s7 [0, 65535] { R21846 += 1 };
  s3 -> s8 [0, 65535] { R21846 += 1, R21768 += 1 };
  s3 -> s5 [44, 44] { R21846 += 1, R21768 += 1, R21704 += 1 };
  s3 -> s1 [45, 65535] { R21846 += 1, R21768 += 1, R21704 += 1 };
  s4 -> s1 [0, 43] { R21846 += 1, R21768 += 1, R21704 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s3 [0, 65535] { R21846 += 1, R21768 += 1, R21704 += 1, R15 += 1 };
  s4 -> s7 [0, 65535] { R21846 += 1 };
  s4 -> s4 [0, 65535] { R21846 += 1, R21768 += 1, R21703 += 1, R21704 += 1 };
  s4 -> s5 [44, 44] { R21846 += 1, R21768 += 1, R21704 += 1 };
  s4 -> s1 [45, 65535] { R21846 += 1, R21768 += 1, R21704 += 1 };
  s5 -> s5 [0, 65535] { R21846 += 1, R21768 += 1, R21704 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R21846 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R21846 += 1 };
  s8 -> s8 [0, 65535] { R21846 += 1, R21768 += 1 };
  accepting s3, s4, s8, s2, s6, s1, s7, s0;
};
automaton uri_30 {
  init s0;
  s0 -> s1 [0, 65535] { R21848 += 1, R21770 += 1, R21706 += 1 };
  s0 -> s2 [0, 65535] { R21848 += 1, R21770 += 1, R21705 += 1, R21706 += 1 };
  s0 -> s3 [0, 65535] { R21848 += 1, R21769 += 1, R21770 += 1 };
  s0 -> s0 [0, 65535] { R21847 += 1, R21848 += 1 };
  s1 -> s1 [0, 65535] { R21848 += 1, R21770 += 1, R21706 += 1 };
  s1 -> s6 [0, 65535] { R21848 += 1, R21770 += 1 };
  s1 -> s5 [0, 65535] { R21848 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R21848 += 1, R21770 += 1, R21706 += 1 };
  s2 -> s2 [0, 65535] { R21848 += 1, R21770 += 1, R21705 += 1, R21706 += 1 };
  s2 -> s5 [0, 65535] { R21848 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R21848 += 1, R21770 += 1, R21706 += 1 };
  s3 -> s2 [0, 65535] { R21848 += 1, R21770 += 1, R21705 += 1, R21706 += 1 };
  s3 -> s3 [0, 65535] { R21848 += 1, R21769 += 1, R21770 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R21848 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R21848 += 1, R21770 += 1 };
  s6 -> s5 [0, 65535] { R21848 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_31 {
  init s0;
  s0 -> s1 [0, 64] { R21850 += 1, R21772 += 1, R21708 += 1, R21662 += 1 };
  s0 -> s0 [0, 65535] { R21849 += 1, R21850 += 1 };
  s0 -> s2 [0, 65535] { R21850 += 1, R21772 += 1, R21708 += 1, R21661 += 1, R21662 += 1 };
  s0 -> s3 [0, 65535] { R21850 += 1, R21771 += 1, R21772 += 1 };
  s0 -> s4 [0, 65535] { R21850 += 1, R21772 += 1, R21707 += 1, R21708 += 1 };
  s0 -> s5 [70, 70] { R21850 += 1, R21772 += 1, R21708 += 1, R21662 += 1 };
  s0 -> s1 [71, 65535] { R21850 += 1, R21772 += 1, R21708 += 1, R21662 += 1 };
  s1 -> s1 [0, 64] { R21850 += 1, R21772 += 1, R21708 += 1, R21662 += 1 };
  s1 -> s5 [70, 70] { R21850 += 1, R21772 += 1, R21708 += 1, R21662 += 1 };
  s1 -> s1 [71, 65535] { R21850 += 1, R21772 += 1, R21708 += 1, R21662 += 1 };
  s2 -> s1 [0, 64] { R21850 += 1, R21772 += 1, R21708 += 1, R21662 += 1 };
  s2 -> s2 [0, 65535] { R21850 += 1, R21772 += 1, R21708 += 1, R21661 += 1, R21662 += 1 };
  s2 -> s5 [70, 70] { R21850 += 1, R21772 += 1, R21708 += 1, R21662 += 1 };
  s2 -> s1 [71, 65535] { R21850 += 1, R21772 += 1, R21708 += 1, R21662 += 1 };
  s3 -> s1 [0, 64] { R21850 += 1, R21772 += 1, R21708 += 1, R21662 += 1 };
  s3 -> s2 [0, 65535] { R21850 += 1, R21772 += 1, R21708 += 1, R21661 += 1, R21662 += 1 };
  s3 -> s3 [0, 65535] { R21850 += 1, R21771 += 1, R21772 += 1 };
  s3 -> s4 [0, 65535] { R21850 += 1, R21772 += 1, R21707 += 1, R21708 += 1 };
  s3 -> s5 [70, 70] { R21850 += 1, R21772 += 1, R21708 += 1, R21662 += 1 };
  s3 -> s1 [71, 65535] { R21850 += 1, R21772 += 1, R21708 += 1, R21662 += 1 };
  s4 -> s1 [0, 64] { R21850 += 1, R21772 += 1, R21708 += 1, R21662 += 1 };
  s4 -> s2 [0, 65535] { R21850 += 1, R21772 += 1, R21708 += 1, R21661 += 1, R21662 += 1 };
  s4 -> s4 [0, 65535] { R21850 += 1, R21772 += 1, R21707 += 1, R21708 += 1 };
  s4 -> s5 [70, 70] { R21850 += 1, R21772 += 1, R21708 += 1, R21662 += 1 };
  s4 -> s1 [71, 65535] { R21850 += 1, R21772 += 1, R21708 += 1, R21662 += 1 };
  s5 -> s5 [0, 64] { R21850 += 1, R21772 += 1, R21708 += 1, R21662 += 1 };
  s5 -> s6 [0, 65535] { R21850 += 1, R21772 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R21850 += 1 };
  s5 -> s5 [0, 65535] { R21850 += 1, R21772 += 1, R21708 += 1 };
  s5 -> s5 [70, 65535] { R21850 += 1, R21772 += 1, R21708 += 1, R21662 += 1 };
  s6 -> s6 [0, 65535] { R21850 += 1, R21772 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R21850 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R21850 += 1 };
  accepting s5, s6, s7, s8;
};
automaton uri_32 {
  init s0;
  s0 -> s1 [0, 65535] { R21852 += 1, R21774 += 1, R21710 += 1, R21664 += 1, R0 += 1 };
  s0 -> s0 [0, 65535] { R21851 += 1, R21852 += 1 };
  s0 -> s2 [0, 65535] { R21852 += 1, R21774 += 1, R21709 += 1, R21710 += 1 };
  s0 -> s3 [0, 65535] { R21852 += 1, R21774 += 1, R21710 += 1, R21663 += 1, R21664 += 1 };
  s0 -> s4 [0, 65535] { R21852 += 1, R21773 += 1, R21774 += 1 };
  s1 -> s6 [0, 65535] { R21852 += 1 };
  s1 -> s7 [0, 65535] { R21852 += 1, R21774 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R21852 += 1, R21774 += 1, R21710 += 1, R21664 += 1, R0 += 1 };
  s1 -> s8 [0, 65535] { R21852 += 1, R21774 += 1, R21710 += 1 };
  s2 -> s6 [0, 65535] { R21852 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R21852 += 1, R21774 += 1, R21710 += 1, R21664 += 1, R0 += 1 };
  s2 -> s2 [0, 65535] { R21852 += 1, R21774 += 1, R21709 += 1, R21710 += 1 };
  s2 -> s3 [0, 65535] { R21852 += 1, R21774 += 1, R21710 += 1, R21663 += 1, R21664 += 1 };
  s3 -> s6 [0, 65535] { R21852 += 1 };
  s3 -> s7 [0, 65535] { R21852 += 1, R21774 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R21852 += 1, R21774 += 1, R21710 += 1, R21664 += 1, R0 += 1 };
  s3 -> s3 [0, 65535] { R21852 += 1, R21774 += 1, R21710 += 1, R21663 += 1, R21664 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R21852 += 1, R21774 += 1, R21710 += 1, R21664 += 1, R0 += 1 };
  s4 -> s2 [0, 65535] { R21852 += 1, R21774 += 1, R21709 += 1, R21710 += 1 };
  s4 -> s3 [0, 65535] { R21852 += 1, R21774 += 1, R21710 += 1, R21663 += 1, R21664 += 1 };
  s4 -> s4 [0, 65535] { R21852 += 1, R21773 += 1, R21774 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R21852 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R21852 += 1 };
  s7 -> s7 [0, 65535] { R21852 += 1, R21774 += 1 };
  s7 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R21852 += 1 };
  s8 -> s7 [0, 65535] { R21852 += 1, R21774 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s8 [0, 65535] { R21852 += 1, R21774 += 1, R21710 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_33 {
  init s0;
  s0 -> s1 [0, 57] { R21854 += 1, R21776 += 1, R21712 += 1, R21666 += 1 };
  s0 -> s2 [0, 65535] { R21854 += 1, R21775 += 1, R21776 += 1 };
  s0 -> s0 [0, 65535] { R21853 += 1, R21854 += 1 };
  s0 -> s3 [0, 65535] { R21854 += 1, R21776 += 1, R21712 += 1, R21665 += 1, R21666 += 1 };
  s0 -> s4 [0, 65535] { R21854 += 1, R21776 += 1, R21712 += 1, R21666 += 1, R13 += 1 };
  s0 -> s5 [0, 65535] { R21854 += 1, R21776 += 1, R21711 += 1, R21712 += 1 };
  s0 -> s6 [58, 58] { R21854 += 1, R21776 += 1, R21712 += 1, R21666 += 1 };
  s0 -> s1 [59, 65535] { R21854 += 1, R21776 += 1, R21712 += 1, R21666 += 1 };
  s1 -> s1 [0, 57] { R21854 += 1, R21776 += 1, R21712 += 1, R21666 += 1 };
  s1 -> s7 [0, 65535] { R21854 += 1 };
  s1 -> s1 [0, 65535] { R21854 += 1, R21776 += 1, R21712 += 1 };
  s1 -> s9 [0, 65535] { R21854 += 1, R21776 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s6 [58, 58] { R21854 += 1, R21776 += 1, R21712 += 1, R21666 += 1 };
  s1 -> s1 [59, 65535] { R21854 += 1, R21776 += 1, R21712 += 1, R21666 += 1 };
  s2 -> s1 [0, 57] { R21854 += 1, R21776 += 1, R21712 += 1, R21666 += 1 };
  s2 -> s2 [0, 65535] { R21854 += 1, R21775 += 1, R21776 += 1 };
  s2 -> s3 [0, 65535] { R21854 += 1, R21776 += 1, R21712 += 1, R21665 += 1, R21666 += 1 };
  s2 -> s4 [0, 65535] { R21854 += 1, R21776 += 1, R21712 += 1, R21666 += 1, R13 += 1 };
  s2 -> s5 [0, 65535] { R21854 += 1, R21776 += 1, R21711 += 1, R21712 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s6 [58, 58] { R21854 += 1, R21776 += 1, R21712 += 1, R21666 += 1 };
  s2 -> s1 [59, 65535] { R21854 += 1, R21776 += 1, R21712 += 1, R21666 += 1 };
  s3 -> s1 [0, 57] { R21854 += 1, R21776 += 1, R21712 += 1, R21666 += 1 };
  s3 -> s3 [0, 65535] { R21854 += 1, R21776 += 1, R21712 += 1, R21665 += 1, R21666 += 1 };
  s3 -> s4 [0, 65535] { R21854 += 1, R21776 += 1, R21712 += 1, R21666 += 1, R13 += 1 };
  s3 -> s7 [0, 65535] { R21854 += 1 };
  s3 -> s9 [0, 65535] { R21854 += 1, R21776 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s6 [58, 58] { R21854 += 1, R21776 += 1, R21712 += 1, R21666 += 1 };
  s3 -> s1 [59, 65535] { R21854 += 1, R21776 += 1, R21712 += 1, R21666 += 1 };
  s4 -> s1 [0, 57] { R21854 += 1, R21776 += 1, R21712 += 1, R21666 += 1 };
  s4 -> s4 [0, 65535] { R21854 += 1, R21776 += 1, R21712 += 1, R21666 += 1, R13 += 1 };
  s4 -> s7 [0, 65535] { R21854 += 1 };
  s4 -> s9 [0, 65535] { R21854 += 1, R21776 += 1 };
  s4 -> s10 [0, 65535] { R21854 += 1, R21776 += 1, R21712 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s6 [58, 58] { R21854 += 1, R21776 += 1, R21712 += 1, R21666 += 1 };
  s4 -> s1 [59, 65535] { R21854 += 1, R21776 += 1, R21712 += 1, R21666 += 1 };
  s5 -> s1 [0, 57] { R21854 += 1, R21776 += 1, R21712 += 1, R21666 += 1 };
  s5 -> s3 [0, 65535] { R21854 += 1, R21776 += 1, R21712 += 1, R21665 += 1, R21666 += 1 };
  s5 -> s4 [0, 65535] { R21854 += 1, R21776 += 1, R21712 += 1, R21666 += 1, R13 += 1 };
  s5 -> s7 [0, 65535] { R21854 += 1 };
  s5 -> s5 [0, 65535] { R21854 += 1, R21776 += 1, R21711 += 1, R21712 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s6 [58, 58] { R21854 += 1, R21776 += 1, R21712 += 1, R21666 += 1 };
  s5 -> s1 [59, 65535] { R21854 += 1, R21776 += 1, R21712 += 1, R21666 += 1 };
  s6 -> s6 [0, 65535] { R21854 += 1, R21776 += 1, R21712 += 1, R21666 += 1 };
  s7 -> s7 [0, 65535] { R21854 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s7 [0, 65535] { R21854 += 1 };
  s9 -> s9 [0, 65535] { R21854 += 1, R21776 += 1 };
  s9 -> s8 [0, 65535];
  s10 -> s7 [0, 65535] { R21854 += 1 };
  s10 -> s9 [0, 65535] { R21854 += 1, R21776 += 1 };
  s10 -> s10 [0, 65535] { R21854 += 1, R21776 += 1, R21712 += 1 };
  s10 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s1, s7, s0, s10;
};
automaton uri_34 {
  init s0;
  s0 -> s1 [0, 90] { R21856 += 1, R21778 += 1, R21714 += 1, R21668 += 1, R32 += 1 };
  s0 -> s2 [0, 65535] { R21856 += 1, R21778 += 1, R21713 += 1, R21714 += 1 };
  s0 -> s3 [0, 65535] { R21856 += 1, R21777 += 1, R21778 += 1 };
  s0 -> s4 [0, 65535] { R21856 += 1, R21778 += 1, R21714 += 1, R21668 += 1, R31 += 1, R32 += 1 };
  s0 -> s0 [0, 65535] { R21855 += 1, R21856 += 1 };
  s0 -> s5 [0, 65535] { R21856 += 1, R21778 += 1, R21714 += 1, R21667 += 1, R21668 += 1 };
  s0 -> s6 [91, 91] { R21856 += 1, R21778 += 1, R21714 += 1, R21668 += 1, R32 += 1 };
  s0 -> s1 [92, 65535] { R21856 += 1, R21778 += 1, R21714 += 1, R21668 += 1, R32 += 1 };
  s1 -> s10 [0, 65535] { R21856 += 1, R21778 += 1, R21714 += 1 };
  s1 -> s7 [0, 65535] { R21856 += 1, R21778 += 1 };
  s1 -> s1 [0, 65535] { R21856 += 1, R21778 += 1, R21714 += 1, R21668 += 1, R32 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s11 [0, 65535] { R21856 += 1, R21778 += 1, R21714 += 1, R21668 += 1 };
  s1 -> s9 [0, 65535] { R21856 += 1 };
  s2 -> s1 [0, 90] { R21856 += 1, R21778 += 1, R21714 += 1, R21668 += 1, R32 += 1 };
  s2 -> s2 [0, 65535] { R21856 += 1, R21778 += 1, R21713 += 1, R21714 += 1 };
  s2 -> s4 [0, 65535] { R21856 += 1, R21778 += 1, R21714 += 1, R21668 += 1, R31 += 1, R32 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s9 [0, 65535] { R21856 += 1 };
  s2 -> s5 [0, 65535] { R21856 += 1, R21778 += 1, R21714 += 1, R21667 += 1, R21668 += 1 };
  s2 -> s6 [91, 91] { R21856 += 1, R21778 += 1, R21714 += 1, R21668 += 1, R32 += 1 };
  s2 -> s1 [92, 65535] { R21856 += 1, R21778 += 1, R21714 += 1, R21668 += 1, R32 += 1 };
  s3 -> s1 [0, 90] { R21856 += 1, R21778 += 1, R21714 += 1, R21668 += 1, R32 += 1 };
  s3 -> s2 [0, 65535] { R21856 += 1, R21778 += 1, R21713 += 1, R21714 += 1 };
  s3 -> s3 [0, 65535] { R21856 += 1, R21777 += 1, R21778 += 1 };
  s3 -> s4 [0, 65535] { R21856 += 1, R21778 += 1, R21714 += 1, R21668 += 1, R31 += 1, R32 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s5 [0, 65535] { R21856 += 1, R21778 += 1, R21714 += 1, R21667 += 1, R21668 += 1 };
  s3 -> s6 [91, 91] { R21856 += 1, R21778 += 1, R21714 += 1, R21668 += 1, R32 += 1 };
  s3 -> s1 [92, 65535] { R21856 += 1, R21778 += 1, R21714 += 1, R21668 += 1, R32 += 1 };
  s4 -> s1 [0, 90] { R21856 += 1, R21778 += 1, R21714 += 1, R21668 += 1, R32 += 1 };
  s4 -> s10 [0, 65535] { R21856 += 1, R21778 += 1, R21714 += 1 };
  s4 -> s7 [0, 65535] { R21856 += 1, R21778 += 1 };
  s4 -> s4 [0, 65535] { R21856 += 1, R21778 += 1, R21714 += 1, R21668 += 1, R31 += 1, R32 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s9 [0, 65535] { R21856 += 1 };
  s4 -> s6 [91, 91] { R21856 += 1, R21778 += 1, R21714 += 1, R21668 += 1, R32 += 1 };
  s4 -> s1 [92, 65535] { R21856 += 1, R21778 += 1, R21714 += 1, R21668 += 1, R32 += 1 };
  s5 -> s1 [0, 90] { R21856 += 1, R21778 += 1, R21714 += 1, R21668 += 1, R32 += 1 };
  s5 -> s7 [0, 65535] { R21856 += 1, R21778 += 1 };
  s5 -> s4 [0, 65535] { R21856 += 1, R21778 += 1, R21714 += 1, R21668 += 1, R31 += 1, R32 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s9 [0, 65535] { R21856 += 1 };
  s5 -> s5 [0, 65535] { R21856 += 1, R21778 += 1, R21714 += 1, R21667 += 1, R21668 += 1 };
  s5 -> s6 [91, 91] { R21856 += 1, R21778 += 1, R21714 += 1, R21668 += 1, R32 += 1 };
  s5 -> s1 [92, 65535] { R21856 += 1, R21778 += 1, R21714 += 1, R21668 += 1, R32 += 1 };
  s6 -> s1 [0, 65535] { R21856 += 1, R21778 += 1, R21714 += 1, R21668 += 1, R32 += 1 };
  s7 -> s7 [0, 65535] { R21856 += 1, R21778 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R21856 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R21856 += 1 };
  s10 -> s10 [0, 65535] { R21856 += 1, R21778 += 1, R21714 += 1 };
  s10 -> s7 [0, 65535] { R21856 += 1, R21778 += 1 };
  s10 -> s8 [0, 65535];
  s10 -> s9 [0, 65535] { R21856 += 1 };
  s11 -> s10 [0, 65535] { R21856 += 1, R21778 += 1, R21714 += 1 };
  s11 -> s7 [0, 65535] { R21856 += 1, R21778 += 1 };
  s11 -> s8 [0, 65535];
  s11 -> s11 [0, 65535] { R21856 += 1, R21778 += 1, R21714 += 1, R21668 += 1 };
  s11 -> s9 [0, 65535] { R21856 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s1, s7, s0, s10, s11;
};
automaton uri_35 {
  init s0;
  s0 -> s1 [0, 65535] { R21858 += 1, R21780 += 1, R21716 += 1, R21670 += 1, R33 += 1, R34 += 1 };
  s0 -> s2 [0, 65535] { R21858 += 1, R21780 += 1, R21716 += 1, R21670 += 1, R34 += 1, R10 += 1 };
  s0 -> s0 [0, 65535] { R21857 += 1, R21858 += 1 };
  s0 -> s3 [0, 65535] { R21858 += 1, R21779 += 1, R21780 += 1 };
  s0 -> s4 [0, 65535] { R21858 += 1, R21780 += 1, R21715 += 1, R21716 += 1 };
  s0 -> s5 [0, 65535] { R21858 += 1, R21780 += 1, R21716 += 1, R21669 += 1, R21670 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R21858 += 1, R21780 += 1 };
  s1 -> s1 [0, 65535] { R21858 += 1, R21780 += 1, R21716 += 1, R21670 += 1, R33 += 1, R34 += 1 };
  s1 -> s2 [0, 65535] { R21858 += 1, R21780 += 1, R21716 += 1, R21670 += 1, R34 += 1, R10 += 1 };
  s1 -> s8 [0, 65535] { R21858 += 1 };
  s1 -> s9 [0, 65535] { R21858 += 1, R21780 += 1, R21716 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R21858 += 1, R21780 += 1 };
  s2 -> s2 [0, 65535] { R21858 += 1, R21780 += 1, R21716 += 1, R21670 += 1, R34 += 1, R10 += 1 };
  s2 -> s8 [0, 65535] { R21858 += 1 };
  s2 -> s9 [0, 65535] { R21858 += 1, R21780 += 1, R21716 += 1 };
  s2 -> s10 [0, 65535] { R21858 += 1, R21780 += 1, R21716 += 1, R21670 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [0, 65535] { R21858 += 1, R21780 += 1, R21716 += 1, R21670 += 1, R33 += 1, R34 += 1 };
  s3 -> s2 [0, 65535] { R21858 += 1, R21780 += 1, R21716 += 1, R21670 += 1, R34 += 1, R10 += 1 };
  s3 -> s3 [0, 65535] { R21858 += 1, R21779 += 1, R21780 += 1 };
  s3 -> s4 [0, 65535] { R21858 += 1, R21780 += 1, R21715 += 1, R21716 += 1 };
  s3 -> s5 [0, 65535] { R21858 += 1, R21780 += 1, R21716 += 1, R21669 += 1, R21670 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s1 [0, 65535] { R21858 += 1, R21780 += 1, R21716 += 1, R21670 += 1, R33 += 1, R34 += 1 };
  s4 -> s2 [0, 65535] { R21858 += 1, R21780 += 1, R21716 += 1, R21670 += 1, R34 += 1, R10 += 1 };
  s4 -> s8 [0, 65535] { R21858 += 1 };
  s4 -> s4 [0, 65535] { R21858 += 1, R21780 += 1, R21715 += 1, R21716 += 1 };
  s4 -> s5 [0, 65535] { R21858 += 1, R21780 += 1, R21716 += 1, R21669 += 1, R21670 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R21858 += 1, R21780 += 1 };
  s5 -> s1 [0, 65535] { R21858 += 1, R21780 += 1, R21716 += 1, R21670 += 1, R33 += 1, R34 += 1 };
  s5 -> s2 [0, 65535] { R21858 += 1, R21780 += 1, R21716 += 1, R21670 += 1, R34 += 1, R10 += 1 };
  s5 -> s8 [0, 65535] { R21858 += 1 };
  s5 -> s5 [0, 65535] { R21858 += 1, R21780 += 1, R21716 += 1, R21669 += 1, R21670 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R21858 += 1, R21780 += 1 };
  s7 -> s8 [0, 65535] { R21858 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R21858 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s7 [0, 65535] { R21858 += 1, R21780 += 1 };
  s9 -> s8 [0, 65535] { R21858 += 1 };
  s9 -> s9 [0, 65535] { R21858 += 1, R21780 += 1, R21716 += 1 };
  s10 -> s6 [0, 65535];
  s10 -> s7 [0, 65535] { R21858 += 1, R21780 += 1 };
  s10 -> s8 [0, 65535] { R21858 += 1 };
  s10 -> s9 [0, 65535] { R21858 += 1, R21780 += 1, R21716 += 1 };
  s10 -> s10 [0, 65535] { R21858 += 1, R21780 += 1, R21716 += 1, R21670 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton uri_36 {
  init s0;
  s0 -> s1 [0, 65535] { R21860 += 1, R21781 += 1, R21782 += 1 };
  s0 -> s2 [0, 65535] { R21860 += 1, R21782 += 1, R21718 += 1, R29 += 1 };
  s0 -> s3 [0, 65535] { R21860 += 1, R21782 += 1, R21717 += 1, R21718 += 1 };
  s0 -> s0 [0, 65535] { R21859 += 1, R21860 += 1 };
  s1 -> s1 [0, 65535] { R21860 += 1, R21781 += 1, R21782 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R21860 += 1, R21782 += 1, R21718 += 1, R29 += 1 };
  s1 -> s3 [0, 65535] { R21860 += 1, R21782 += 1, R21717 += 1, R21718 += 1 };
  s2 -> s6 [0, 65535] { R21860 += 1, R21782 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R21860 += 1, R21782 += 1, R21718 += 1, R29 += 1 };
  s2 -> s5 [0, 65535] { R21860 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R21860 += 1, R21782 += 1, R21718 += 1, R29 += 1 };
  s3 -> s5 [0, 65535] { R21860 += 1 };
  s3 -> s3 [0, 65535] { R21860 += 1, R21782 += 1, R21717 += 1, R21718 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R21860 += 1 };
  s6 -> s6 [0, 65535] { R21860 += 1, R21782 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R21860 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_37 {
  init s0;
  s0 -> s1 [0, 65535] { R21862 += 1, R21783 += 1, R21784 += 1 };
  s0 -> s2 [0, 65535] { R21862 += 1, R21784 += 1, R21719 += 1, R21720 += 1 };
  s0 -> s0 [0, 65535] { R21861 += 1, R21862 += 1 };
  s0 -> s3 [108, 108] { R21862 += 1, R21784 += 1, R21720 += 1 };
  s1 -> s1 [0, 65535] { R21862 += 1, R21783 += 1, R21784 += 1 };
  s1 -> s2 [0, 65535] { R21862 += 1, R21784 += 1, R21719 += 1, R21720 += 1 };
  s1 -> s3 [108, 108] { R21862 += 1, R21784 += 1, R21720 += 1 };
  s2 -> s2 [0, 65535] { R21862 += 1, R21784 += 1, R21719 += 1, R21720 += 1 };
  s2 -> s3 [108, 108] { R21862 += 1, R21784 += 1, R21720 += 1 };
  s3 -> s4 [111, 111] { R21862 += 1, R21784 += 1, R21720 += 1 };
  s4 -> s5 [99, 99] { R21862 += 1, R21784 += 1, R21720 += 1 };
  s5 -> s6 [97, 97] { R21862 += 1, R21784 += 1, R21720 += 1 };
  s6 -> s7 [108, 108] { R21862 += 1, R21784 += 1, R21720 += 1 };
  s7 -> s8 [104, 104] { R21862 += 1, R21784 += 1, R21720 += 1 };
  s8 -> s9 [111, 111] { R21862 += 1, R21784 += 1, R21720 += 1 };
  s9 -> s10 [115, 115] { R21862 += 1, R21784 += 1, R21720 += 1 };
  s10 -> s11 [0, 65535] { R21862 += 1 };
  s10 -> s12 [0, 65535];
  s10 -> s10 [0, 65535] { R21862 += 1, R21784 += 1 };
  s11 -> s11 [0, 65535] { R21862 += 1 };
  s11 -> s12 [0, 65535];
  s12 -> s12 [0, 65535];
  accepting s10, s11, s12;
};
automaton uri_38 {
  init s0;
  s0 -> s1 [0, 86] { R21864 += 1, R21786 += 1, R21722 += 1, R20621 += 1 };
  s0 -> s0 [0, 65535] { R21863 += 1, R21864 += 1 };
  s0 -> s2 [0, 65535] { R21864 += 1, R21785 += 1, R21786 += 1 };
  s0 -> s3 [0, 65535] { R21864 += 1, R21786 += 1, R21721 += 1, R21722 += 1 };
  s0 -> s4 [87, 87] { R21864 += 1, R21786 += 1, R21722 += 1, R20621 += 1 };
  s0 -> s5 [87, 87] { R21864 += 1, R21786 += 1, R21722 += 1, R20621 += 1 };
  s0 -> s1 [88, 65535] { R21864 += 1, R21786 += 1, R21722 += 1, R20621 += 1 };
  s1 -> s1 [0, 86] { R21864 += 1, R21786 += 1, R21722 += 1, R20621 += 1 };
  s1 -> s6 [0, 65535] { R21864 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R21864 += 1, R21786 += 1 };
  s1 -> s4 [87, 87] { R21864 += 1, R21786 += 1, R21722 += 1, R20621 += 1 };
  s1 -> s5 [87, 87] { R21864 += 1, R21786 += 1, R21722 += 1, R20621 += 1 };
  s1 -> s1 [88, 65535] { R21864 += 1, R21786 += 1, R21722 += 1, R20621 += 1 };
  s2 -> s1 [0, 86] { R21864 += 1, R21786 += 1, R21722 += 1, R20621 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s2 [0, 65535] { R21864 += 1, R21785 += 1, R21786 += 1 };
  s2 -> s3 [0, 65535] { R21864 += 1, R21786 += 1, R21721 += 1, R21722 += 1 };
  s2 -> s4 [87, 87] { R21864 += 1, R21786 += 1, R21722 += 1, R20621 += 1 };
  s2 -> s5 [87, 87] { R21864 += 1, R21786 += 1, R21722 += 1, R20621 += 1 };
  s2 -> s1 [88, 65535] { R21864 += 1, R21786 += 1, R21722 += 1, R20621 += 1 };
  s3 -> s1 [0, 86] { R21864 += 1, R21786 += 1, R21722 += 1, R20621 += 1 };
  s3 -> s6 [0, 65535] { R21864 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R21864 += 1, R21786 += 1, R21721 += 1, R21722 += 1 };
  s3 -> s4 [87, 87] { R21864 += 1, R21786 += 1, R21722 += 1, R20621 += 1 };
  s3 -> s5 [87, 87] { R21864 += 1, R21786 += 1, R21722 += 1, R20621 += 1 };
  s3 -> s1 [88, 65535] { R21864 += 1, R21786 += 1, R21722 += 1, R20621 += 1 };
  s4 -> s4 [0, 65535] { R21864 += 1, R21786 += 1, R21722 += 1, R20621 += 1 };
  s4 -> s6 [0, 65535] { R21864 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R21864 += 1, R21786 += 1 };
  s5 -> s6 [0, 65535] { R21864 += 1 };
  s5 -> s5 [0, 65535] { R21864 += 1, R21786 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R21864 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R21864 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R21864 += 1, R21786 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_39 {
  init s0;
  s0 -> s1 [0, 65535] { R21866 += 1, R21788 += 1, R21723 += 1, R21724 += 1 };
  s0 -> s2 [0, 65535] { R21866 += 1, R21788 += 1, R21724 += 1, R30 += 1 };
  s0 -> s0 [0, 65535] { R21865 += 1, R21866 += 1 };
  s0 -> s3 [0, 65535] { R21866 += 1, R21787 += 1, R21788 += 1 };
  s1 -> s1 [0, 65535] { R21866 += 1, R21788 += 1, R21723 += 1, R21724 += 1 };
  s1 -> s2 [0, 65535] { R21866 += 1, R21788 += 1, R21724 += 1, R30 += 1 };
  s1 -> s5 [0, 65535] { R21866 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R21866 += 1, R21788 += 1, R21724 += 1, R30 += 1 };
  s2 -> s5 [0, 65535] { R21866 += 1 };
  s2 -> s6 [0, 65535] { R21866 += 1, R21788 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R21866 += 1, R21788 += 1, R21723 += 1, R21724 += 1 };
  s3 -> s2 [0, 65535] { R21866 += 1, R21788 += 1, R21724 += 1, R30 += 1 };
  s3 -> s3 [0, 65535] { R21866 += 1, R21787 += 1, R21788 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R21866 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R21866 += 1 };
  s6 -> s6 [0, 65535] { R21866 += 1, R21788 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_40 {
  init s0;
  s0 -> s1 [0, 65535] { R21868 += 1, R21789 += 1, R21790 += 1 };
  s0 -> s2 [0, 65535] { R21868 += 1, R21790 += 1, R21725 += 1, R21726 += 1 };
  s0 -> s0 [0, 65535] { R21867 += 1, R21868 += 1 };
  s0 -> s3 [108, 108] { R21868 += 1, R21790 += 1, R21726 += 1 };
  s1 -> s1 [0, 65535] { R21868 += 1, R21789 += 1, R21790 += 1 };
  s1 -> s2 [0, 65535] { R21868 += 1, R21790 += 1, R21725 += 1, R21726 += 1 };
  s1 -> s3 [108, 108] { R21868 += 1, R21790 += 1, R21726 += 1 };
  s2 -> s2 [0, 65535] { R21868 += 1, R21790 += 1, R21725 += 1, R21726 += 1 };
  s2 -> s3 [108, 108] { R21868 += 1, R21790 += 1, R21726 += 1 };
  s3 -> s4 [111, 111] { R21868 += 1, R21790 += 1, R21726 += 1 };
  s4 -> s5 [99, 99] { R21868 += 1, R21790 += 1, R21726 += 1 };
  s5 -> s6 [97, 97] { R21868 += 1, R21790 += 1, R21726 += 1 };
  s6 -> s7 [0, 65535] { R21868 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R21868 += 1, R21790 += 1 };
  s7 -> s7 [0, 65535] { R21868 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s6, s7, s8;
};
};
