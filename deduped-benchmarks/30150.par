// Parikh automata intersection problem, generated by OSTRICH+
counter int R0, R1, R13, R14, R2, R273, R274, R3, R4, R402, R403, R404, R405, R406, R407, R408, R409, R410, R411, R412, R413, R414, R415, R416, R417, R418, R419, R420, R421, R422, R423, R424, R425, R426, R427, R428, R429, R430, R431, R432, R433, R434, R435, R436, R437, R438, R439, R440, R441, R442, R443, R444, R445, R446, R447, R448, R449, R450, R451, R452, R453, R454, R455, R456, R457, R458, R459, R460, R461, R462, R463, R464, R465, R466, R467, R468, R469, R470, R471, R472, R473, R474, R475, R476, R477, R478, R479, R480, R481, R482, R483, R484, R485, R486, R487, R488, R489, R490, R491, R492, R493, R494, R495, R496, R497, R498, R499, R5, R500, R501, R502, R503, R504, R505, R506, R507, R508, R509, R510, R511, R512, R513, R514, R515, R516, R517, R518, R519, R520, R521, R522, R523, R524, R525, R526, R527, R528, R6, R7, R8, R9;
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R6 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 45] { R490 += 1 };
  s0 -> s0 [0, 65535] { R489 += 1, R490 += 1 };
  s0 -> s2 [46, 46] { R490 += 1 };
  s0 -> s3 [47, 47] { R490 += 1 };
  s0 -> s1 [48, 65535] { R490 += 1 };
  s1 -> s1 [0, 45] { R490 += 1 };
  s1 -> s2 [46, 46] { R490 += 1 };
  s1 -> s3 [47, 47] { R490 += 1 };
  s1 -> s1 [48, 65535] { R490 += 1 };
  s2 -> s1 [0, 45] { R490 += 1 };
  s2 -> s2 [46, 46] { R490 += 1 };
  s2 -> s3 [47, 47] { R490 += 1 };
  s2 -> s1 [48, 114] { R490 += 1 };
  s2 -> s8 [115, 115] { R490 += 1 };
  s2 -> s1 [116, 65535] { R490 += 1 };
  s3 -> s3 [0, 45] { R490 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s4 [46, 46] { R490 += 1 };
  s3 -> s3 [47, 65535] { R490 += 1 };
  s4 -> s3 [0, 45] { R490 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s4 [46, 46] { R490 += 1 };
  s4 -> s3 [47, 114] { R490 += 1 };
  s4 -> s5 [115, 115] { R490 += 1 };
  s4 -> s3 [116, 65535] { R490 += 1 };
  s5 -> s3 [0, 45] { R490 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s4 [46, 46] { R490 += 1 };
  s5 -> s3 [47, 110] { R490 += 1 };
  s5 -> s6 [111, 111] { R490 += 1 };
  s5 -> s3 [112, 65535] { R490 += 1 };
  s6 -> s3 [0, 45] { R490 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s4 [46, 46] { R490 += 1 };
  s6 -> s3 [47, 98] { R490 += 1 };
  s6 -> s7 [99, 99] { R490 += 1 };
  s6 -> s3 [100, 65535] { R490 += 1 };
  s7 -> s3 [0, 45] { R490 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s4 [46, 46] { R490 += 1 };
  s7 -> s3 [47, 106] { R490 += 1 };
  s7 -> s3 [108, 65535] { R490 += 1 };
  s8 -> s1 [0, 45] { R490 += 1 };
  s8 -> s2 [46, 46] { R490 += 1 };
  s8 -> s3 [47, 47] { R490 += 1 };
  s8 -> s1 [48, 110] { R490 += 1 };
  s8 -> s9 [111, 111] { R490 += 1 };
  s8 -> s1 [112, 65535] { R490 += 1 };
  s9 -> s1 [0, 45] { R490 += 1 };
  s9 -> s2 [46, 46] { R490 += 1 };
  s9 -> s3 [47, 47] { R490 += 1 };
  s9 -> s1 [48, 98] { R490 += 1 };
  s9 -> s10 [99, 99] { R490 += 1 };
  s9 -> s1 [100, 65535] { R490 += 1 };
  s10 -> s1 [0, 45] { R490 += 1 };
  s10 -> s2 [46, 46] { R490 += 1 };
  s10 -> s3 [47, 47] { R490 += 1 };
  s10 -> s1 [48, 106] { R490 += 1 };
  s10 -> s1 [108, 65535] { R490 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_3 {
  init s0;
  s0 -> s1 [0, 65535] { R492 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R491 += 1, R492 += 1 };
  s1 -> s1 [0, 65535] { R492 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s1 [0, 46] { R494 += 1, R274 += 1 };
  s0 -> s0 [0, 65535] { R493 += 1, R494 += 1 };
  s0 -> s2 [0, 65535] { R494 += 1, R273 += 1, R274 += 1 };
  s0 -> s3 [47, 47] { R494 += 1 };
  s0 -> s1 [48, 65535] { R494 += 1, R274 += 1 };
  s1 -> s1 [0, 46] { R494 += 1, R274 += 1 };
  s1 -> s3 [47, 47] { R494 += 1 };
  s1 -> s1 [48, 65535] { R494 += 1, R274 += 1 };
  s2 -> s1 [0, 46] { R494 += 1, R274 += 1 };
  s2 -> s2 [0, 65535] { R494 += 1, R273 += 1, R274 += 1 };
  s2 -> s3 [47, 47] { R494 += 1 };
  s2 -> s1 [48, 65535] { R494 += 1, R274 += 1 };
  s3 -> s3 [0, 65535] { R494 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 65535] { R496 += 1, R416 += 1, R1 += 1 };
  s0 -> s2 [0, 65535] { R496 += 1, R415 += 1, R416 += 1 };
  s0 -> s0 [0, 65535] { R495 += 1, R496 += 1 };
  s1 -> s1 [0, 65535] { R496 += 1, R416 += 1, R1 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R496 += 1 };
  s2 -> s1 [0, 65535] { R496 += 1, R416 += 1, R1 += 1 };
  s2 -> s2 [0, 65535] { R496 += 1, R415 += 1, R416 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R496 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_6 {
  init s0;
  s0 -> s1 [0, 63] { R498 += 1, R458 += 1 };
  s0 -> s2 [0, 65535] { R498 += 1, R457 += 1, R458 += 1 };
  s0 -> s0 [0, 65535] { R497 += 1, R498 += 1 };
  s0 -> s3 [64, 64] { R498 += 1, R458 += 1 };
  s0 -> s1 [65, 65535] { R498 += 1, R458 += 1 };
  s1 -> s1 [0, 63] { R498 += 1, R458 += 1 };
  s1 -> s3 [64, 64] { R498 += 1, R458 += 1 };
  s1 -> s1 [65, 65535] { R498 += 1, R458 += 1 };
  s2 -> s1 [0, 63] { R498 += 1, R458 += 1 };
  s2 -> s2 [0, 65535] { R498 += 1, R457 += 1, R458 += 1 };
  s2 -> s3 [64, 64] { R498 += 1, R458 += 1 };
  s2 -> s1 [65, 65535] { R498 += 1, R458 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R498 += 1 };
  s3 -> s3 [0, 65535] { R498 += 1, R458 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R498 += 1 };
  accepting s3, s4, s5;
};
automaton uri_7 {
  init s0;
  s0 -> s0 [0, 65535] { R499 += 1, R500 += 1 };
  s0 -> s1 [0, 65535] { R500 += 1, R460 += 1, R4 += 1 };
  s0 -> s2 [0, 65535] { R500 += 1, R459 += 1, R460 += 1 };
  s1 -> s4 [0, 65535] { R500 += 1 };
  s1 -> s1 [0, 65535] { R500 += 1, R460 += 1, R4 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R500 += 1, R460 += 1, R4 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R500 += 1, R459 += 1, R460 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R500 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_8 {
  init s0;
  s0 -> s1 [0, 36] { R502 += 1, R462 += 1, R412 += 1 };
  s0 -> s2 [0, 65535] { R502 += 1, R461 += 1, R462 += 1 };
  s0 -> s0 [0, 65535] { R501 += 1, R502 += 1 };
  s0 -> s3 [0, 65535] { R502 += 1, R462 += 1, R411 += 1, R412 += 1 };
  s0 -> s1 [38, 42] { R502 += 1, R462 += 1, R412 += 1 };
  s0 -> s1 [44, 57] { R502 += 1, R462 += 1, R412 += 1 };
  s0 -> s1 [59, 63] { R502 += 1, R462 += 1, R412 += 1 };
  s0 -> s1 [65, 65535] { R502 += 1, R462 += 1, R412 += 1 };
  s1 -> s1 [0, 36] { R502 += 1, R462 += 1, R412 += 1 };
  s1 -> s1 [0, 65535] { R502 += 1, R462 += 1 };
  s1 -> s4 [0, 65535] { R502 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [38, 42] { R502 += 1, R462 += 1, R412 += 1 };
  s1 -> s1 [44, 57] { R502 += 1, R462 += 1, R412 += 1 };
  s1 -> s1 [59, 63] { R502 += 1, R462 += 1, R412 += 1 };
  s1 -> s1 [65, 65535] { R502 += 1, R462 += 1, R412 += 1 };
  s2 -> s1 [0, 36] { R502 += 1, R462 += 1, R412 += 1 };
  s2 -> s2 [0, 65535] { R502 += 1, R461 += 1, R462 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R502 += 1, R462 += 1, R411 += 1, R412 += 1 };
  s2 -> s1 [38, 42] { R502 += 1, R462 += 1, R412 += 1 };
  s2 -> s1 [44, 57] { R502 += 1, R462 += 1, R412 += 1 };
  s2 -> s1 [59, 63] { R502 += 1, R462 += 1, R412 += 1 };
  s2 -> s1 [65, 65535] { R502 += 1, R462 += 1, R412 += 1 };
  s3 -> s1 [0, 36] { R502 += 1, R462 += 1, R412 += 1 };
  s3 -> s4 [0, 65535] { R502 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R502 += 1, R462 += 1, R411 += 1, R412 += 1 };
  s3 -> s1 [38, 42] { R502 += 1, R462 += 1, R412 += 1 };
  s3 -> s1 [44, 57] { R502 += 1, R462 += 1, R412 += 1 };
  s3 -> s1 [59, 63] { R502 += 1, R462 += 1, R412 += 1 };
  s3 -> s1 [65, 65535] { R502 += 1, R462 += 1, R412 += 1 };
  s4 -> s4 [0, 65535] { R502 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_9 {
  init s0;
  s0 -> s0 [0, 65535] { R503 += 1, R504 += 1 };
  s0 -> s1 [0, 65535] { R504 += 1, R464 += 1, R414 += 1, R0 += 1 };
  s0 -> s2 [0, 65535] { R504 += 1, R463 += 1, R464 += 1 };
  s0 -> s3 [0, 65535] { R504 += 1, R464 += 1, R413 += 1, R414 += 1 };
  s1 -> s4 [0, 65535] { R504 += 1 };
  s1 -> s1 [0, 65535] { R504 += 1, R464 += 1, R414 += 1, R0 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R504 += 1, R464 += 1 };
  s2 -> s1 [0, 65535] { R504 += 1, R464 += 1, R414 += 1, R0 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R504 += 1, R463 += 1, R464 += 1 };
  s2 -> s3 [0, 65535] { R504 += 1, R464 += 1, R413 += 1, R414 += 1 };
  s3 -> s4 [0, 65535] { R504 += 1 };
  s3 -> s1 [0, 65535] { R504 += 1, R464 += 1, R414 += 1, R0 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R504 += 1, R464 += 1, R413 += 1, R414 += 1 };
  s4 -> s4 [0, 65535] { R504 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R504 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R504 += 1, R464 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_10 {
  init s0;
  s0 -> s1 [0, 43] { R506 += 1, R466 += 1, R434 += 1 };
  s0 -> s0 [0, 65535] { R505 += 1, R506 += 1 };
  s0 -> s2 [0, 65535] { R506 += 1, R465 += 1, R466 += 1 };
  s0 -> s3 [0, 65535] { R506 += 1, R466 += 1, R433 += 1, R434 += 1 };
  s0 -> s4 [44, 44] { R506 += 1, R466 += 1, R434 += 1 };
  s0 -> s1 [45, 65535] { R506 += 1, R466 += 1, R434 += 1 };
  s1 -> s1 [0, 43] { R506 += 1, R466 += 1, R434 += 1 };
  s1 -> s4 [44, 44] { R506 += 1, R466 += 1, R434 += 1 };
  s1 -> s1 [45, 65535] { R506 += 1, R466 += 1, R434 += 1 };
  s2 -> s1 [0, 43] { R506 += 1, R466 += 1, R434 += 1 };
  s2 -> s2 [0, 65535] { R506 += 1, R465 += 1, R466 += 1 };
  s2 -> s3 [0, 65535] { R506 += 1, R466 += 1, R433 += 1, R434 += 1 };
  s2 -> s4 [44, 44] { R506 += 1, R466 += 1, R434 += 1 };
  s2 -> s1 [45, 65535] { R506 += 1, R466 += 1, R434 += 1 };
  s3 -> s1 [0, 43] { R506 += 1, R466 += 1, R434 += 1 };
  s3 -> s3 [0, 65535] { R506 += 1, R466 += 1, R433 += 1, R434 += 1 };
  s3 -> s4 [44, 44] { R506 += 1, R466 += 1, R434 += 1 };
  s3 -> s1 [45, 65535] { R506 += 1, R466 += 1, R434 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R506 += 1, R466 += 1, R434 += 1 };
  s4 -> s6 [0, 65535] { R506 += 1, R466 += 1 };
  s4 -> s7 [0, 65535] { R506 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R506 += 1, R466 += 1 };
  s6 -> s7 [0, 65535] { R506 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R506 += 1 };
  accepting s4, s5, s6, s7;
};
automaton uri_11 {
  init s0;
  s0 -> s1 [0, 65535] { R508 += 1, R467 += 1, R468 += 1 };
  s0 -> s0 [0, 65535] { R507 += 1, R508 += 1 };
  s0 -> s2 [0, 65535] { R508 += 1, R468 += 1, R436 += 1, R3 += 1 };
  s0 -> s3 [0, 65535] { R508 += 1, R468 += 1, R435 += 1, R436 += 1 };
  s1 -> s1 [0, 65535] { R508 += 1, R467 += 1, R468 += 1 };
  s1 -> s2 [0, 65535] { R508 += 1, R468 += 1, R436 += 1, R3 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R508 += 1, R468 += 1, R435 += 1, R436 += 1 };
  s2 -> s2 [0, 65535] { R508 += 1, R468 += 1, R436 += 1, R3 += 1 };
  s2 -> s4 [0, 65535] { R508 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R508 += 1, R468 += 1 };
  s3 -> s2 [0, 65535] { R508 += 1, R468 += 1, R436 += 1, R3 += 1 };
  s3 -> s4 [0, 65535] { R508 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R508 += 1, R468 += 1, R435 += 1, R436 += 1 };
  s4 -> s4 [0, 65535] { R508 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R508 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R508 += 1, R468 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_12 {
  init s0;
  s0 -> s1 [0, 43] { R510 += 1, R470 += 1, R438 += 1, R14 += 1 };
  s0 -> s2 [0, 65535] { R510 += 1, R470 += 1, R438 += 1, R13 += 1, R14 += 1 };
  s0 -> s0 [0, 65535] { R509 += 1, R510 += 1 };
  s0 -> s3 [0, 65535] { R510 += 1, R470 += 1, R437 += 1, R438 += 1 };
  s0 -> s4 [0, 65535] { R510 += 1, R469 += 1, R470 += 1 };
  s0 -> s5 [44, 44] { R510 += 1, R470 += 1, R438 += 1 };
  s0 -> s1 [45, 65535] { R510 += 1, R470 += 1, R438 += 1, R14 += 1 };
  s1 -> s1 [0, 43] { R510 += 1, R470 += 1, R438 += 1, R14 += 1 };
  s1 -> s5 [44, 44] { R510 += 1, R470 += 1, R438 += 1 };
  s1 -> s1 [45, 65535] { R510 += 1, R470 += 1, R438 += 1, R14 += 1 };
  s2 -> s1 [0, 43] { R510 += 1, R470 += 1, R438 += 1, R14 += 1 };
  s2 -> s2 [0, 65535] { R510 += 1, R470 += 1, R438 += 1, R13 += 1, R14 += 1 };
  s2 -> s5 [44, 44] { R510 += 1, R470 += 1, R438 += 1 };
  s2 -> s1 [45, 65535] { R510 += 1, R470 += 1, R438 += 1, R14 += 1 };
  s3 -> s1 [0, 43] { R510 += 1, R470 += 1, R438 += 1, R14 += 1 };
  s3 -> s2 [0, 65535] { R510 += 1, R470 += 1, R438 += 1, R13 += 1, R14 += 1 };
  s3 -> s3 [0, 65535] { R510 += 1, R470 += 1, R437 += 1, R438 += 1 };
  s3 -> s5 [44, 44] { R510 += 1, R470 += 1, R438 += 1 };
  s3 -> s1 [45, 65535] { R510 += 1, R470 += 1, R438 += 1, R14 += 1 };
  s4 -> s1 [0, 43] { R510 += 1, R470 += 1, R438 += 1, R14 += 1 };
  s4 -> s2 [0, 65535] { R510 += 1, R470 += 1, R438 += 1, R13 += 1, R14 += 1 };
  s4 -> s3 [0, 65535] { R510 += 1, R470 += 1, R437 += 1, R438 += 1 };
  s4 -> s4 [0, 65535] { R510 += 1, R469 += 1, R470 += 1 };
  s4 -> s5 [44, 44] { R510 += 1, R470 += 1, R438 += 1 };
  s4 -> s1 [45, 65535] { R510 += 1, R470 += 1, R438 += 1, R14 += 1 };
  s5 -> s5 [0, 65535] { R510 += 1, R470 += 1, R438 += 1 };
  s5 -> s6 [0, 65535] { R510 += 1 };
  s5 -> s7 [0, 65535] { R510 += 1, R470 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R510 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s6 [0, 65535] { R510 += 1 };
  s7 -> s7 [0, 65535] { R510 += 1, R470 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton uri_13 {
  init s0;
  s0 -> s1 [0, 65535] { R512 += 1, R471 += 1, R472 += 1 };
  s0 -> s2 [0, 65535] { R512 += 1, R472 += 1, R439 += 1, R440 += 1 };
  s0 -> s0 [0, 65535] { R511 += 1, R512 += 1 };
  s0 -> s3 [0, 65535] { R512 += 1, R472 += 1, R440 += 1 };
  s1 -> s1 [0, 65535] { R512 += 1, R471 += 1, R472 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R512 += 1, R472 += 1, R439 += 1, R440 += 1 };
  s1 -> s3 [0, 65535] { R512 += 1, R472 += 1, R440 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R512 += 1 };
  s2 -> s2 [0, 65535] { R512 += 1, R472 += 1, R439 += 1, R440 += 1 };
  s2 -> s3 [0, 65535] { R512 += 1, R472 += 1, R440 += 1 };
  s3 -> s4 [0, 65535] { R512 += 1, R472 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R512 += 1 };
  s3 -> s3 [0, 65535] { R512 += 1, R472 += 1, R440 += 1 };
  s4 -> s4 [0, 65535] { R512 += 1, R472 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R512 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R512 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 64] { R514 += 1, R474 += 1, R442 += 1, R418 += 1 };
  s0 -> s2 [0, 65535] { R514 += 1, R474 += 1, R442 += 1, R417 += 1, R418 += 1 };
  s0 -> s3 [0, 65535] { R514 += 1, R473 += 1, R474 += 1 };
  s0 -> s4 [0, 65535] { R514 += 1, R474 += 1, R441 += 1, R442 += 1 };
  s0 -> s0 [0, 65535] { R513 += 1, R514 += 1 };
  s0 -> s5 [88, 88] { R514 += 1, R474 += 1, R442 += 1, R418 += 1 };
  s0 -> s1 [89, 65535] { R514 += 1, R474 += 1, R442 += 1, R418 += 1 };
  s1 -> s1 [0, 64] { R514 += 1, R474 += 1, R442 += 1, R418 += 1 };
  s1 -> s5 [88, 88] { R514 += 1, R474 += 1, R442 += 1, R418 += 1 };
  s1 -> s1 [89, 65535] { R514 += 1, R474 += 1, R442 += 1, R418 += 1 };
  s2 -> s1 [0, 64] { R514 += 1, R474 += 1, R442 += 1, R418 += 1 };
  s2 -> s2 [0, 65535] { R514 += 1, R474 += 1, R442 += 1, R417 += 1, R418 += 1 };
  s2 -> s5 [88, 88] { R514 += 1, R474 += 1, R442 += 1, R418 += 1 };
  s2 -> s1 [89, 65535] { R514 += 1, R474 += 1, R442 += 1, R418 += 1 };
  s3 -> s1 [0, 64] { R514 += 1, R474 += 1, R442 += 1, R418 += 1 };
  s3 -> s2 [0, 65535] { R514 += 1, R474 += 1, R442 += 1, R417 += 1, R418 += 1 };
  s3 -> s3 [0, 65535] { R514 += 1, R473 += 1, R474 += 1 };
  s3 -> s4 [0, 65535] { R514 += 1, R474 += 1, R441 += 1, R442 += 1 };
  s3 -> s5 [88, 88] { R514 += 1, R474 += 1, R442 += 1, R418 += 1 };
  s3 -> s1 [89, 65535] { R514 += 1, R474 += 1, R442 += 1, R418 += 1 };
  s4 -> s1 [0, 64] { R514 += 1, R474 += 1, R442 += 1, R418 += 1 };
  s4 -> s2 [0, 65535] { R514 += 1, R474 += 1, R442 += 1, R417 += 1, R418 += 1 };
  s4 -> s4 [0, 65535] { R514 += 1, R474 += 1, R441 += 1, R442 += 1 };
  s4 -> s5 [88, 88] { R514 += 1, R474 += 1, R442 += 1, R418 += 1 };
  s4 -> s1 [89, 65535] { R514 += 1, R474 += 1, R442 += 1, R418 += 1 };
  s5 -> s5 [0, 64] { R514 += 1, R474 += 1, R442 += 1, R418 += 1 };
  s5 -> s6 [0, 65535] { R514 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R514 += 1, R474 += 1 };
  s5 -> s5 [0, 65535] { R514 += 1, R474 += 1, R442 += 1 };
  s5 -> s5 [88, 65535] { R514 += 1, R474 += 1, R442 += 1, R418 += 1 };
  s6 -> s6 [0, 65535] { R514 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R514 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R514 += 1, R474 += 1 };
  accepting s5, s6, s7, s8;
};
automaton uri_15 {
  init s0;
  s0 -> s1 [0, 65535] { R516 += 1, R476 += 1, R443 += 1, R444 += 1 };
  s0 -> s0 [0, 65535] { R515 += 1, R516 += 1 };
  s0 -> s2 [0, 65535] { R516 += 1, R476 += 1, R444 += 1, R419 += 1, R420 += 1 };
  s0 -> s3 [0, 65535] { R516 += 1, R475 += 1, R476 += 1 };
  s0 -> s4 [0, 65535] { R516 += 1, R476 += 1, R444 += 1, R420 += 1, R2 += 1 };
  s1 -> s1 [0, 65535] { R516 += 1, R476 += 1, R443 += 1, R444 += 1 };
  s1 -> s6 [0, 65535] { R516 += 1 };
  s1 -> s2 [0, 65535] { R516 += 1, R476 += 1, R444 += 1, R419 += 1, R420 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [0, 65535] { R516 += 1, R476 += 1, R444 += 1, R420 += 1, R2 += 1 };
  s2 -> s5 [0, 65535] { R516 += 1, R476 += 1 };
  s2 -> s6 [0, 65535] { R516 += 1 };
  s2 -> s2 [0, 65535] { R516 += 1, R476 += 1, R444 += 1, R419 += 1, R420 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [0, 65535] { R516 += 1, R476 += 1, R444 += 1, R420 += 1, R2 += 1 };
  s3 -> s1 [0, 65535] { R516 += 1, R476 += 1, R443 += 1, R444 += 1 };
  s3 -> s2 [0, 65535] { R516 += 1, R476 += 1, R444 += 1, R419 += 1, R420 += 1 };
  s3 -> s3 [0, 65535] { R516 += 1, R475 += 1, R476 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s4 [0, 65535] { R516 += 1, R476 += 1, R444 += 1, R420 += 1, R2 += 1 };
  s4 -> s5 [0, 65535] { R516 += 1, R476 += 1 };
  s4 -> s6 [0, 65535] { R516 += 1 };
  s4 -> s7 [0, 65535] { R516 += 1, R476 += 1, R444 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [0, 65535] { R516 += 1, R476 += 1, R444 += 1, R420 += 1, R2 += 1 };
  s5 -> s5 [0, 65535] { R516 += 1, R476 += 1 };
  s5 -> s6 [0, 65535] { R516 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R516 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s5 [0, 65535] { R516 += 1, R476 += 1 };
  s7 -> s6 [0, 65535] { R516 += 1 };
  s7 -> s7 [0, 65535] { R516 += 1, R476 += 1, R444 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 57] { R518 += 1, R478 += 1, R446 += 1, R422 += 1 };
  s0 -> s2 [0, 65535] { R518 += 1, R478 += 1, R446 += 1, R421 += 1, R422 += 1 };
  s0 -> s3 [0, 65535] { R518 += 1, R477 += 1, R478 += 1 };
  s0 -> s4 [0, 65535] { R518 += 1, R478 += 1, R445 += 1, R446 += 1 };
  s0 -> s5 [0, 65535] { R518 += 1, R478 += 1, R446 += 1, R422 += 1, R8 += 1 };
  s0 -> s0 [0, 65535] { R517 += 1, R518 += 1 };
  s0 -> s6 [58, 58] { R518 += 1, R478 += 1, R446 += 1, R422 += 1 };
  s0 -> s1 [59, 65535] { R518 += 1, R478 += 1, R446 += 1, R422 += 1 };
  s1 -> s1 [0, 57] { R518 += 1, R478 += 1, R446 += 1, R422 += 1 };
  s1 -> s7 [0, 65535] { R518 += 1, R478 += 1 };
  s1 -> s1 [0, 65535] { R518 += 1, R478 += 1, R446 += 1 };
  s1 -> s9 [0, 65535] { R518 += 1 };
  s1 -> s10 [0, 65535];
  s1 -> s6 [58, 58] { R518 += 1, R478 += 1, R446 += 1, R422 += 1 };
  s1 -> s1 [59, 65535] { R518 += 1, R478 += 1, R446 += 1, R422 += 1 };
  s2 -> s1 [0, 57] { R518 += 1, R478 += 1, R446 += 1, R422 += 1 };
  s2 -> s2 [0, 65535] { R518 += 1, R478 += 1, R446 += 1, R421 += 1, R422 += 1 };
  s2 -> s7 [0, 65535] { R518 += 1, R478 += 1 };
  s2 -> s5 [0, 65535] { R518 += 1, R478 += 1, R446 += 1, R422 += 1, R8 += 1 };
  s2 -> s9 [0, 65535] { R518 += 1 };
  s2 -> s10 [0, 65535];
  s2 -> s6 [58, 58] { R518 += 1, R478 += 1, R446 += 1, R422 += 1 };
  s2 -> s1 [59, 65535] { R518 += 1, R478 += 1, R446 += 1, R422 += 1 };
  s3 -> s1 [0, 57] { R518 += 1, R478 += 1, R446 += 1, R422 += 1 };
  s3 -> s2 [0, 65535] { R518 += 1, R478 += 1, R446 += 1, R421 += 1, R422 += 1 };
  s3 -> s3 [0, 65535] { R518 += 1, R477 += 1, R478 += 1 };
  s3 -> s4 [0, 65535] { R518 += 1, R478 += 1, R445 += 1, R446 += 1 };
  s3 -> s5 [0, 65535] { R518 += 1, R478 += 1, R446 += 1, R422 += 1, R8 += 1 };
  s3 -> s10 [0, 65535];
  s3 -> s6 [58, 58] { R518 += 1, R478 += 1, R446 += 1, R422 += 1 };
  s3 -> s1 [59, 65535] { R518 += 1, R478 += 1, R446 += 1, R422 += 1 };
  s4 -> s1 [0, 57] { R518 += 1, R478 += 1, R446 += 1, R422 += 1 };
  s4 -> s2 [0, 65535] { R518 += 1, R478 += 1, R446 += 1, R421 += 1, R422 += 1 };
  s4 -> s4 [0, 65535] { R518 += 1, R478 += 1, R445 += 1, R446 += 1 };
  s4 -> s5 [0, 65535] { R518 += 1, R478 += 1, R446 += 1, R422 += 1, R8 += 1 };
  s4 -> s9 [0, 65535] { R518 += 1 };
  s4 -> s10 [0, 65535];
  s4 -> s6 [58, 58] { R518 += 1, R478 += 1, R446 += 1, R422 += 1 };
  s4 -> s1 [59, 65535] { R518 += 1, R478 += 1, R446 += 1, R422 += 1 };
  s5 -> s1 [0, 57] { R518 += 1, R478 += 1, R446 += 1, R422 += 1 };
  s5 -> s7 [0, 65535] { R518 += 1, R478 += 1 };
  s5 -> s8 [0, 65535] { R518 += 1, R478 += 1, R446 += 1 };
  s5 -> s5 [0, 65535] { R518 += 1, R478 += 1, R446 += 1, R422 += 1, R8 += 1 };
  s5 -> s9 [0, 65535] { R518 += 1 };
  s5 -> s10 [0, 65535];
  s5 -> s6 [58, 58] { R518 += 1, R478 += 1, R446 += 1, R422 += 1 };
  s5 -> s1 [59, 65535] { R518 += 1, R478 += 1, R446 += 1, R422 += 1 };
  s6 -> s6 [0, 65535] { R518 += 1, R478 += 1, R446 += 1, R422 += 1 };
  s7 -> s7 [0, 65535] { R518 += 1, R478 += 1 };
  s7 -> s9 [0, 65535] { R518 += 1 };
  s7 -> s10 [0, 65535];
  s8 -> s7 [0, 65535] { R518 += 1, R478 += 1 };
  s8 -> s8 [0, 65535] { R518 += 1, R478 += 1, R446 += 1 };
  s8 -> s9 [0, 65535] { R518 += 1 };
  s8 -> s10 [0, 65535];
  s9 -> s9 [0, 65535] { R518 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s1, s7, s0, s10;
};
automaton uri_17 {
  init s0;
  s0 -> s1 [0, 87] { R520 += 1, R480 += 1, R448 += 1, R424 += 1 };
  s0 -> s0 [0, 65535] { R519 += 1, R520 += 1 };
  s0 -> s2 [0, 65535] { R520 += 1, R480 += 1, R448 += 1, R424 += 1, R9 += 1 };
  s0 -> s3 [0, 65535] { R520 += 1, R480 += 1, R448 += 1, R423 += 1, R424 += 1 };
  s0 -> s4 [0, 65535] { R520 += 1, R479 += 1, R480 += 1 };
  s0 -> s5 [0, 65535] { R520 += 1, R480 += 1, R447 += 1, R448 += 1 };
  s0 -> s6 [88, 88] { R520 += 1, R480 += 1, R448 += 1, R424 += 1 };
  s0 -> s1 [89, 65535] { R520 += 1, R480 += 1, R448 += 1, R424 += 1 };
  s1 -> s1 [0, 87] { R520 += 1, R480 += 1, R448 += 1, R424 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R520 += 1, R480 += 1, R448 += 1 };
  s1 -> s9 [0, 65535] { R520 += 1, R480 += 1 };
  s1 -> s8 [0, 65535] { R520 += 1 };
  s1 -> s6 [88, 88] { R520 += 1, R480 += 1, R448 += 1, R424 += 1 };
  s1 -> s1 [89, 65535] { R520 += 1, R480 += 1, R448 += 1, R424 += 1 };
  s2 -> s1 [0, 87] { R520 += 1, R480 += 1, R448 += 1, R424 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s2 [0, 65535] { R520 += 1, R480 += 1, R448 += 1, R424 += 1, R9 += 1 };
  s2 -> s9 [0, 65535] { R520 += 1, R480 += 1 };
  s2 -> s10 [0, 65535] { R520 += 1, R480 += 1, R448 += 1 };
  s2 -> s8 [0, 65535] { R520 += 1 };
  s2 -> s6 [88, 88] { R520 += 1, R480 += 1, R448 += 1, R424 += 1 };
  s2 -> s1 [89, 65535] { R520 += 1, R480 += 1, R448 += 1, R424 += 1 };
  s3 -> s1 [0, 87] { R520 += 1, R480 += 1, R448 += 1, R424 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s2 [0, 65535] { R520 += 1, R480 += 1, R448 += 1, R424 += 1, R9 += 1 };
  s3 -> s3 [0, 65535] { R520 += 1, R480 += 1, R448 += 1, R423 += 1, R424 += 1 };
  s3 -> s9 [0, 65535] { R520 += 1, R480 += 1 };
  s3 -> s8 [0, 65535] { R520 += 1 };
  s3 -> s6 [88, 88] { R520 += 1, R480 += 1, R448 += 1, R424 += 1 };
  s3 -> s1 [89, 65535] { R520 += 1, R480 += 1, R448 += 1, R424 += 1 };
  s4 -> s1 [0, 87] { R520 += 1, R480 += 1, R448 += 1, R424 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s2 [0, 65535] { R520 += 1, R480 += 1, R448 += 1, R424 += 1, R9 += 1 };
  s4 -> s3 [0, 65535] { R520 += 1, R480 += 1, R448 += 1, R423 += 1, R424 += 1 };
  s4 -> s4 [0, 65535] { R520 += 1, R479 += 1, R480 += 1 };
  s4 -> s5 [0, 65535] { R520 += 1, R480 += 1, R447 += 1, R448 += 1 };
  s4 -> s6 [88, 88] { R520 += 1, R480 += 1, R448 += 1, R424 += 1 };
  s4 -> s1 [89, 65535] { R520 += 1, R480 += 1, R448 += 1, R424 += 1 };
  s5 -> s1 [0, 87] { R520 += 1, R480 += 1, R448 += 1, R424 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s2 [0, 65535] { R520 += 1, R480 += 1, R448 += 1, R424 += 1, R9 += 1 };
  s5 -> s3 [0, 65535] { R520 += 1, R480 += 1, R448 += 1, R423 += 1, R424 += 1 };
  s5 -> s5 [0, 65535] { R520 += 1, R480 += 1, R447 += 1, R448 += 1 };
  s5 -> s8 [0, 65535] { R520 += 1 };
  s5 -> s6 [88, 88] { R520 += 1, R480 += 1, R448 += 1, R424 += 1 };
  s5 -> s1 [89, 65535] { R520 += 1, R480 += 1, R448 += 1, R424 += 1 };
  s6 -> s6 [0, 65535] { R520 += 1, R480 += 1, R448 += 1, R424 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R520 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s9 [0, 65535] { R520 += 1, R480 += 1 };
  s9 -> s8 [0, 65535] { R520 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s9 [0, 65535] { R520 += 1, R480 += 1 };
  s10 -> s10 [0, 65535] { R520 += 1, R480 += 1, R448 += 1 };
  s10 -> s8 [0, 65535] { R520 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s1, s7, s0, s10;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 90] { R522 += 1, R482 += 1, R450 += 1, R426 += 1, R404 += 1 };
  s0 -> s2 [0, 65535] { R522 += 1, R482 += 1, R450 += 1, R425 += 1, R426 += 1 };
  s0 -> s3 [0, 65535] { R522 += 1, R482 += 1, R450 += 1, R426 += 1, R403 += 1, R404 += 1 };
  s0 -> s4 [0, 65535] { R522 += 1, R482 += 1, R449 += 1, R450 += 1 };
  s0 -> s5 [0, 65535] { R522 += 1, R481 += 1, R482 += 1 };
  s0 -> s0 [0, 65535] { R521 += 1, R522 += 1 };
  s0 -> s6 [91, 91] { R522 += 1, R482 += 1, R450 += 1, R426 += 1, R404 += 1 };
  s0 -> s1 [92, 65535] { R522 += 1, R482 += 1, R450 += 1, R426 += 1, R404 += 1 };
  s1 -> s9 [0, 65535] { R522 += 1, R482 += 1, R450 += 1 };
  s1 -> s11 [0, 65535] { R522 += 1, R482 += 1, R450 += 1, R426 += 1 };
  s1 -> s10 [0, 65535] { R522 += 1, R482 += 1 };
  s1 -> s1 [0, 65535] { R522 += 1, R482 += 1, R450 += 1, R426 += 1, R404 += 1 };
  s1 -> s8 [0, 65535] { R522 += 1 };
  s1 -> s7 [0, 65535];
  s2 -> s1 [0, 90] { R522 += 1, R482 += 1, R450 += 1, R426 += 1, R404 += 1 };
  s2 -> s2 [0, 65535] { R522 += 1, R482 += 1, R450 += 1, R425 += 1, R426 += 1 };
  s2 -> s3 [0, 65535] { R522 += 1, R482 += 1, R450 += 1, R426 += 1, R403 += 1, R404 += 1 };
  s2 -> s10 [0, 65535] { R522 += 1, R482 += 1 };
  s2 -> s8 [0, 65535] { R522 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s6 [91, 91] { R522 += 1, R482 += 1, R450 += 1, R426 += 1, R404 += 1 };
  s2 -> s1 [92, 65535] { R522 += 1, R482 += 1, R450 += 1, R426 += 1, R404 += 1 };
  s3 -> s1 [0, 90] { R522 += 1, R482 += 1, R450 += 1, R426 += 1, R404 += 1 };
  s3 -> s9 [0, 65535] { R522 += 1, R482 += 1, R450 += 1 };
  s3 -> s3 [0, 65535] { R522 += 1, R482 += 1, R450 += 1, R426 += 1, R403 += 1, R404 += 1 };
  s3 -> s10 [0, 65535] { R522 += 1, R482 += 1 };
  s3 -> s8 [0, 65535] { R522 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s6 [91, 91] { R522 += 1, R482 += 1, R450 += 1, R426 += 1, R404 += 1 };
  s3 -> s1 [92, 65535] { R522 += 1, R482 += 1, R450 += 1, R426 += 1, R404 += 1 };
  s4 -> s1 [0, 90] { R522 += 1, R482 += 1, R450 += 1, R426 += 1, R404 += 1 };
  s4 -> s2 [0, 65535] { R522 += 1, R482 += 1, R450 += 1, R425 += 1, R426 += 1 };
  s4 -> s3 [0, 65535] { R522 += 1, R482 += 1, R450 += 1, R426 += 1, R403 += 1, R404 += 1 };
  s4 -> s4 [0, 65535] { R522 += 1, R482 += 1, R449 += 1, R450 += 1 };
  s4 -> s8 [0, 65535] { R522 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s6 [91, 91] { R522 += 1, R482 += 1, R450 += 1, R426 += 1, R404 += 1 };
  s4 -> s1 [92, 65535] { R522 += 1, R482 += 1, R450 += 1, R426 += 1, R404 += 1 };
  s5 -> s1 [0, 90] { R522 += 1, R482 += 1, R450 += 1, R426 += 1, R404 += 1 };
  s5 -> s2 [0, 65535] { R522 += 1, R482 += 1, R450 += 1, R425 += 1, R426 += 1 };
  s5 -> s3 [0, 65535] { R522 += 1, R482 += 1, R450 += 1, R426 += 1, R403 += 1, R404 += 1 };
  s5 -> s4 [0, 65535] { R522 += 1, R482 += 1, R449 += 1, R450 += 1 };
  s5 -> s5 [0, 65535] { R522 += 1, R481 += 1, R482 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s6 [91, 91] { R522 += 1, R482 += 1, R450 += 1, R426 += 1, R404 += 1 };
  s5 -> s1 [92, 65535] { R522 += 1, R482 += 1, R450 += 1, R426 += 1, R404 += 1 };
  s6 -> s1 [0, 65535] { R522 += 1, R482 += 1, R450 += 1, R426 += 1, R404 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R522 += 1 };
  s8 -> s7 [0, 65535];
  s9 -> s9 [0, 65535] { R522 += 1, R482 += 1, R450 += 1 };
  s9 -> s10 [0, 65535] { R522 += 1, R482 += 1 };
  s9 -> s8 [0, 65535] { R522 += 1 };
  s9 -> s7 [0, 65535];
  s10 -> s10 [0, 65535] { R522 += 1, R482 += 1 };
  s10 -> s8 [0, 65535] { R522 += 1 };
  s10 -> s7 [0, 65535];
  s11 -> s9 [0, 65535] { R522 += 1, R482 += 1, R450 += 1 };
  s11 -> s11 [0, 65535] { R522 += 1, R482 += 1, R450 += 1, R426 += 1 };
  s11 -> s10 [0, 65535] { R522 += 1, R482 += 1 };
  s11 -> s8 [0, 65535] { R522 += 1 };
  s11 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s1, s7, s0, s10, s11;
};
automaton uri_19 {
  init s0;
  s0 -> s0 [0, 65535] { R523 += 1, R524 += 1 };
  s0 -> s1 [0, 65535] { R524 += 1, R484 += 1, R452 += 1, R427 += 1, R428 += 1 };
  s0 -> s2 [0, 65535] { R524 += 1, R484 += 1, R452 += 1, R428 += 1, R406 += 1, R7 += 1 };
  s0 -> s3 [0, 65535] { R524 += 1, R484 += 1, R451 += 1, R452 += 1 };
  s0 -> s4 [0, 65535] { R524 += 1, R484 += 1, R452 += 1, R428 += 1, R405 += 1, R406 += 1 };
  s0 -> s5 [0, 65535] { R524 += 1, R483 += 1, R484 += 1 };
  s1 -> s7 [0, 65535] { R524 += 1, R484 += 1 };
  s1 -> s1 [0, 65535] { R524 += 1, R484 += 1, R452 += 1, R427 += 1, R428 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s2 [0, 65535] { R524 += 1, R484 += 1, R452 += 1, R428 += 1, R406 += 1, R7 += 1 };
  s1 -> s9 [0, 65535] { R524 += 1 };
  s1 -> s4 [0, 65535] { R524 += 1, R484 += 1, R452 += 1, R428 += 1, R405 += 1, R406 += 1 };
  s2 -> s7 [0, 65535] { R524 += 1, R484 += 1 };
  s2 -> s8 [0, 65535] { R524 += 1, R484 += 1, R452 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R524 += 1, R484 += 1, R452 += 1, R428 += 1, R406 += 1, R7 += 1 };
  s2 -> s9 [0, 65535] { R524 += 1 };
  s2 -> s10 [0, 65535] { R524 += 1, R484 += 1, R452 += 1, R428 += 1 };
  s3 -> s1 [0, 65535] { R524 += 1, R484 += 1, R452 += 1, R427 += 1, R428 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R524 += 1, R484 += 1, R452 += 1, R428 += 1, R406 += 1, R7 += 1 };
  s3 -> s9 [0, 65535] { R524 += 1 };
  s3 -> s3 [0, 65535] { R524 += 1, R484 += 1, R451 += 1, R452 += 1 };
  s3 -> s4 [0, 65535] { R524 += 1, R484 += 1, R452 += 1, R428 += 1, R405 += 1, R406 += 1 };
  s4 -> s7 [0, 65535] { R524 += 1, R484 += 1 };
  s4 -> s8 [0, 65535] { R524 += 1, R484 += 1, R452 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s2 [0, 65535] { R524 += 1, R484 += 1, R452 += 1, R428 += 1, R406 += 1, R7 += 1 };
  s4 -> s9 [0, 65535] { R524 += 1 };
  s4 -> s4 [0, 65535] { R524 += 1, R484 += 1, R452 += 1, R428 += 1, R405 += 1, R406 += 1 };
  s5 -> s1 [0, 65535] { R524 += 1, R484 += 1, R452 += 1, R427 += 1, R428 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s2 [0, 65535] { R524 += 1, R484 += 1, R452 += 1, R428 += 1, R406 += 1, R7 += 1 };
  s5 -> s3 [0, 65535] { R524 += 1, R484 += 1, R451 += 1, R452 += 1 };
  s5 -> s4 [0, 65535] { R524 += 1, R484 += 1, R452 += 1, R428 += 1, R405 += 1, R406 += 1 };
  s5 -> s5 [0, 65535] { R524 += 1, R483 += 1, R484 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R524 += 1, R484 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s9 [0, 65535] { R524 += 1 };
  s8 -> s7 [0, 65535] { R524 += 1, R484 += 1 };
  s8 -> s8 [0, 65535] { R524 += 1, R484 += 1, R452 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s9 [0, 65535] { R524 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s9 [0, 65535] { R524 += 1 };
  s10 -> s7 [0, 65535] { R524 += 1, R484 += 1 };
  s10 -> s8 [0, 65535] { R524 += 1, R484 += 1, R452 += 1 };
  s10 -> s6 [0, 65535];
  s10 -> s9 [0, 65535] { R524 += 1 };
  s10 -> s10 [0, 65535] { R524 += 1, R484 += 1, R452 += 1, R428 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 87] { R526 += 1, R486 += 1, R454 += 1, R430 += 1, R408 += 1 };
  s0 -> s2 [0, 65535] { R526 += 1, R485 += 1, R486 += 1 };
  s0 -> s3 [0, 65535] { R526 += 1, R486 += 1, R454 += 1, R429 += 1, R430 += 1 };
  s0 -> s0 [0, 65535] { R525 += 1, R526 += 1 };
  s0 -> s4 [0, 65535] { R526 += 1, R486 += 1, R454 += 1, R430 += 1, R407 += 1, R408 += 1 };
  s0 -> s5 [0, 65535] { R526 += 1, R486 += 1, R453 += 1, R454 += 1 };
  s0 -> s6 [88, 88] { R526 += 1, R486 += 1, R454 += 1, R430 += 1, R408 += 1 };
  s0 -> s1 [89, 65535] { R526 += 1, R486 += 1, R454 += 1, R430 += 1, R408 += 1 };
  s1 -> s1 [0, 87] { R526 += 1, R486 += 1, R454 += 1, R430 += 1, R408 += 1 };
  s1 -> s6 [88, 88] { R526 += 1, R486 += 1, R454 += 1, R430 += 1, R408 += 1 };
  s1 -> s1 [89, 65535] { R526 += 1, R486 += 1, R454 += 1, R430 += 1, R408 += 1 };
  s2 -> s1 [0, 87] { R526 += 1, R486 += 1, R454 += 1, R430 += 1, R408 += 1 };
  s2 -> s2 [0, 65535] { R526 += 1, R485 += 1, R486 += 1 };
  s2 -> s3 [0, 65535] { R526 += 1, R486 += 1, R454 += 1, R429 += 1, R430 += 1 };
  s2 -> s4 [0, 65535] { R526 += 1, R486 += 1, R454 += 1, R430 += 1, R407 += 1, R408 += 1 };
  s2 -> s5 [0, 65535] { R526 += 1, R486 += 1, R453 += 1, R454 += 1 };
  s2 -> s6 [88, 88] { R526 += 1, R486 += 1, R454 += 1, R430 += 1, R408 += 1 };
  s2 -> s1 [89, 65535] { R526 += 1, R486 += 1, R454 += 1, R430 += 1, R408 += 1 };
  s3 -> s1 [0, 87] { R526 += 1, R486 += 1, R454 += 1, R430 += 1, R408 += 1 };
  s3 -> s3 [0, 65535] { R526 += 1, R486 += 1, R454 += 1, R429 += 1, R430 += 1 };
  s3 -> s4 [0, 65535] { R526 += 1, R486 += 1, R454 += 1, R430 += 1, R407 += 1, R408 += 1 };
  s3 -> s6 [88, 88] { R526 += 1, R486 += 1, R454 += 1, R430 += 1, R408 += 1 };
  s3 -> s1 [89, 65535] { R526 += 1, R486 += 1, R454 += 1, R430 += 1, R408 += 1 };
  s4 -> s1 [0, 87] { R526 += 1, R486 += 1, R454 += 1, R430 += 1, R408 += 1 };
  s4 -> s4 [0, 65535] { R526 += 1, R486 += 1, R454 += 1, R430 += 1, R407 += 1, R408 += 1 };
  s4 -> s6 [88, 88] { R526 += 1, R486 += 1, R454 += 1, R430 += 1, R408 += 1 };
  s4 -> s1 [89, 65535] { R526 += 1, R486 += 1, R454 += 1, R430 += 1, R408 += 1 };
  s5 -> s1 [0, 87] { R526 += 1, R486 += 1, R454 += 1, R430 += 1, R408 += 1 };
  s5 -> s3 [0, 65535] { R526 += 1, R486 += 1, R454 += 1, R429 += 1, R430 += 1 };
  s5 -> s4 [0, 65535] { R526 += 1, R486 += 1, R454 += 1, R430 += 1, R407 += 1, R408 += 1 };
  s5 -> s5 [0, 65535] { R526 += 1, R486 += 1, R453 += 1, R454 += 1 };
  s5 -> s6 [88, 88] { R526 += 1, R486 += 1, R454 += 1, R430 += 1, R408 += 1 };
  s5 -> s1 [89, 65535] { R526 += 1, R486 += 1, R454 += 1, R430 += 1, R408 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R526 += 1, R486 += 1, R454 += 1, R430 += 1 };
  s6 -> s6 [0, 65535] { R526 += 1, R486 += 1, R454 += 1, R430 += 1, R408 += 1 };
  s6 -> s9 [0, 65535] { R526 += 1, R486 += 1 };
  s6 -> s10 [0, 65535] { R526 += 1 };
  s6 -> s11 [0, 65535] { R526 += 1, R486 += 1, R454 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R526 += 1, R486 += 1, R454 += 1, R430 += 1 };
  s8 -> s9 [0, 65535] { R526 += 1, R486 += 1 };
  s8 -> s10 [0, 65535] { R526 += 1 };
  s8 -> s11 [0, 65535] { R526 += 1, R486 += 1, R454 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s9 [0, 65535] { R526 += 1, R486 += 1 };
  s9 -> s10 [0, 65535] { R526 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s10 [0, 65535] { R526 += 1 };
  s11 -> s7 [0, 65535];
  s11 -> s9 [0, 65535] { R526 += 1, R486 += 1 };
  s11 -> s10 [0, 65535] { R526 += 1 };
  s11 -> s11 [0, 65535] { R526 += 1, R486 += 1, R454 += 1 };
  accepting s8, s9, s6, s7, s10, s11;
};
automaton uri_21 {
  init s0;
  s0 -> s1 [0, 65535] { R528 += 1, R488 += 1, R456 += 1, R432 += 1, R409 += 1, R410 += 1 };
  s0 -> s0 [0, 65535] { R527 += 1, R528 += 1 };
  s0 -> s2 [0, 65535] { R528 += 1, R488 += 1, R456 += 1, R432 += 1, R410 += 1, R402 += 1 };
  s0 -> s3 [0, 65535] { R528 += 1, R488 += 1, R455 += 1, R456 += 1 };
  s0 -> s4 [0, 65535] { R528 += 1, R488 += 1, R456 += 1, R431 += 1, R432 += 1 };
  s0 -> s5 [0, 65535] { R528 += 1, R487 += 1, R488 += 1 };
  s1 -> s1 [0, 65535] { R528 += 1, R488 += 1, R456 += 1, R432 += 1, R409 += 1, R410 += 1 };
  s1 -> s7 [0, 65535] { R528 += 1 };
  s1 -> s8 [0, 65535] { R528 += 1, R488 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s10 [0, 65535] { R528 += 1, R488 += 1, R456 += 1 };
  s1 -> s2 [0, 65535] { R528 += 1, R488 += 1, R456 += 1, R432 += 1, R410 += 1, R402 += 1 };
  s2 -> s7 [0, 65535] { R528 += 1 };
  s2 -> s9 [0, 65535] { R528 += 1, R488 += 1, R456 += 1, R432 += 1 };
  s2 -> s8 [0, 65535] { R528 += 1, R488 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s10 [0, 65535] { R528 += 1, R488 += 1, R456 += 1 };
  s2 -> s2 [0, 65535] { R528 += 1, R488 += 1, R456 += 1, R432 += 1, R410 += 1, R402 += 1 };
  s3 -> s1 [0, 65535] { R528 += 1, R488 += 1, R456 += 1, R432 += 1, R409 += 1, R410 += 1 };
  s3 -> s7 [0, 65535] { R528 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R528 += 1, R488 += 1, R456 += 1, R432 += 1, R410 += 1, R402 += 1 };
  s3 -> s3 [0, 65535] { R528 += 1, R488 += 1, R455 += 1, R456 += 1 };
  s3 -> s4 [0, 65535] { R528 += 1, R488 += 1, R456 += 1, R431 += 1, R432 += 1 };
  s4 -> s1 [0, 65535] { R528 += 1, R488 += 1, R456 += 1, R432 += 1, R409 += 1, R410 += 1 };
  s4 -> s7 [0, 65535] { R528 += 1 };
  s4 -> s8 [0, 65535] { R528 += 1, R488 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s2 [0, 65535] { R528 += 1, R488 += 1, R456 += 1, R432 += 1, R410 += 1, R402 += 1 };
  s4 -> s4 [0, 65535] { R528 += 1, R488 += 1, R456 += 1, R431 += 1, R432 += 1 };
  s5 -> s1 [0, 65535] { R528 += 1, R488 += 1, R456 += 1, R432 += 1, R409 += 1, R410 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s2 [0, 65535] { R528 += 1, R488 += 1, R456 += 1, R432 += 1, R410 += 1, R402 += 1 };
  s5 -> s3 [0, 65535] { R528 += 1, R488 += 1, R455 += 1, R456 += 1 };
  s5 -> s4 [0, 65535] { R528 += 1, R488 += 1, R456 += 1, R431 += 1, R432 += 1 };
  s5 -> s5 [0, 65535] { R528 += 1, R487 += 1, R488 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R528 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R528 += 1 };
  s8 -> s8 [0, 65535] { R528 += 1, R488 += 1 };
  s8 -> s6 [0, 65535];
  s9 -> s7 [0, 65535] { R528 += 1 };
  s9 -> s9 [0, 65535] { R528 += 1, R488 += 1, R456 += 1, R432 += 1 };
  s9 -> s8 [0, 65535] { R528 += 1, R488 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s10 [0, 65535] { R528 += 1, R488 += 1, R456 += 1 };
  s10 -> s7 [0, 65535] { R528 += 1 };
  s10 -> s8 [0, 65535] { R528 += 1, R488 += 1 };
  s10 -> s6 [0, 65535];
  s10 -> s10 [0, 65535] { R528 += 1, R488 += 1, R456 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
};
constraint R2 = R410 && R3 - R432 = 1 && R4 = R456 && R5 = R416 && R6 = R528 && R13 = 0 && R14 = R432 && R273 = 0 && R274 = R488 && R403 = 0 && R404 = 1 && R405 = 0 && R406 = 1 && R407 = 0 && R408 = R410 && R409 = 0 && R411 = 0 && R412 = 8 && R413 = 0 && R414 = 8 && R415 - R488 = 1 && R417 = 0 && R418 = R432 && R419 = 0 && R420 = R432 && R421 = 0 && R422 = R432 && R423 = 0 && R424 = R432 && R425 = 0 && R426 = R432 && R427 = 0 && R428 = R432 && R429 = 0 && R430 = R432 && R431 = 0 && R433 = 9 && R434 = R456 && R435 = 9 && R436 = R456 && R437 = 9 && R438 = R456 && R439 = 9 && R440 = R456 && R441 = 9 && R442 = R456 && R443 = 9 && R444 = R456 && R445 = 9 && R446 = R456 && R447 = 9 && R448 = R456 && R449 = 9 && R450 = R456 && R451 = 9 && R452 = R456 && R453 = 9 && R454 = R456 && R455 = 9 && R457 = 0 && R458 = R488 && R459 = 0 && R460 = R488 && R461 = 0 && R462 = R488 && R463 = 0 && R464 = R488 && R465 = 0 && R466 = R488 && R467 = 0 && R468 = R488 && R469 = 0 && R470 = R488 && R471 = 0 && R472 = R488 && R473 = 0 && R474 = R488 && R475 = 0 && R476 = R488 && R477 = 0 && R478 = R488 && R479 = 0 && R480 = R488 && R481 = 0 && R482 = R488 && R483 = 0 && R484 = R488 && R485 = 0 && R486 = R488 && R487 = 0 && R489 = 10 && R490 = R528 && R491 = 10 && R492 = R528 && R493 = 10 && R494 = R528 && R495 = 10 && R496 = R528 && R497 = 10 && R498 = R528 && R499 = 10 && R500 = R528 && R501 = 10 && R502 = R528 && R503 = 10 && R504 = R528 && R505 = 10 && R506 = R528 && R507 = 10 && R508 = R528 && R509 = 10 && R510 = R528 && R511 = 10 && R512 = R528 && R513 = 10 && R514 = R528 && R515 = 10 && R516 = R528 && R517 = 10 && R518 = R528 && R519 = 10 && R520 = R528 && R521 = 10 && R522 = R528 && R523 = 10 && R524 = R528 && R525 = 10 && R526 = R528 && R527 = 10 && R0 != 0 && R1 != 0 && R8 < 1 && R9 < 1 && 0 < R410 && R488 < R416 && -1 < R432 && 8 < R456 && -1 < R488 && 9 < R528;
// End of Parikh automata intersection problem
