// Parikh automata intersection problem, generated by OSTRICH+
counter int R0, R1, R10, R1000, R1001, R1002, R1003, R1004, R1005, R1006, R1007, R1008, R1009, R1010, R1011, R1012, R1013, R1014, R1015, R1016, R1017, R1018, R1019, R1020, R1021, R1022, R1023, R1024, R1025, R1026, R1027, R1028, R1029, R1030, R1031, R1032, R1033, R1034, R1035, R1036, R1037, R1038, R1039, R1040, R1041, R1042, R1043, R1044, R1045, R11, R2, R3, R4, R5, R530, R531, R6, R7, R790, R791, R8, R919, R920, R921, R922, R923, R924, R925, R926, R927, R928, R929, R930, R931, R932, R933, R934, R935, R936, R937, R938, R939, R940, R941, R942, R943, R944, R945, R946, R947, R948, R949, R950, R951, R952, R953, R954, R955, R956, R957, R958, R959, R960, R961, R962, R963, R964, R965, R966, R967, R968, R969, R970, R971, R972, R973, R974, R975, R976, R977, R978, R979, R980, R981, R982, R983, R984, R985, R986, R987, R988, R989, R990, R991, R992, R993, R994, R995, R996, R997, R998, R999;
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R6 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 45] { R1007 += 1 };
  s0 -> s0 [0, 65535] { R1006 += 1, R1007 += 1 };
  s0 -> s2 [46, 46] { R1007 += 1 };
  s0 -> s3 [47, 47] { R1007 += 1 };
  s0 -> s1 [48, 65535] { R1007 += 1 };
  s1 -> s1 [0, 45] { R1007 += 1 };
  s1 -> s2 [46, 46] { R1007 += 1 };
  s1 -> s3 [47, 47] { R1007 += 1 };
  s1 -> s1 [48, 65535] { R1007 += 1 };
  s2 -> s1 [0, 45] { R1007 += 1 };
  s2 -> s2 [46, 46] { R1007 += 1 };
  s2 -> s3 [47, 47] { R1007 += 1 };
  s2 -> s1 [48, 114] { R1007 += 1 };
  s2 -> s8 [115, 115] { R1007 += 1 };
  s2 -> s1 [116, 65535] { R1007 += 1 };
  s3 -> s3 [0, 45] { R1007 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s4 [46, 46] { R1007 += 1 };
  s3 -> s3 [47, 65535] { R1007 += 1 };
  s4 -> s3 [0, 45] { R1007 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s4 [46, 46] { R1007 += 1 };
  s4 -> s3 [47, 114] { R1007 += 1 };
  s4 -> s5 [115, 115] { R1007 += 1 };
  s4 -> s3 [116, 65535] { R1007 += 1 };
  s5 -> s3 [0, 45] { R1007 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s4 [46, 46] { R1007 += 1 };
  s5 -> s3 [47, 110] { R1007 += 1 };
  s5 -> s6 [111, 111] { R1007 += 1 };
  s5 -> s3 [112, 65535] { R1007 += 1 };
  s6 -> s3 [0, 45] { R1007 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s4 [46, 46] { R1007 += 1 };
  s6 -> s3 [47, 98] { R1007 += 1 };
  s6 -> s7 [99, 99] { R1007 += 1 };
  s6 -> s3 [100, 65535] { R1007 += 1 };
  s7 -> s3 [0, 45] { R1007 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s4 [46, 46] { R1007 += 1 };
  s7 -> s3 [47, 106] { R1007 += 1 };
  s7 -> s3 [108, 65535] { R1007 += 1 };
  s8 -> s1 [0, 45] { R1007 += 1 };
  s8 -> s2 [46, 46] { R1007 += 1 };
  s8 -> s3 [47, 47] { R1007 += 1 };
  s8 -> s1 [48, 110] { R1007 += 1 };
  s8 -> s9 [111, 111] { R1007 += 1 };
  s8 -> s1 [112, 65535] { R1007 += 1 };
  s9 -> s1 [0, 45] { R1007 += 1 };
  s9 -> s2 [46, 46] { R1007 += 1 };
  s9 -> s3 [47, 47] { R1007 += 1 };
  s9 -> s1 [48, 98] { R1007 += 1 };
  s9 -> s10 [99, 99] { R1007 += 1 };
  s9 -> s1 [100, 65535] { R1007 += 1 };
  s10 -> s1 [0, 45] { R1007 += 1 };
  s10 -> s2 [46, 46] { R1007 += 1 };
  s10 -> s3 [47, 47] { R1007 += 1 };
  s10 -> s1 [48, 106] { R1007 += 1 };
  s10 -> s1 [108, 65535] { R1007 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_3 {
  init s0;
  s0 -> s0 [0, 65535] { R1008 += 1, R1009 += 1 };
  s0 -> s1 [0, 65535] { R1009 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R1009 += 1, R5 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s1 [0, 46] { R1011 += 1, R791 += 1 };
  s0 -> s2 [0, 65535] { R1011 += 1, R790 += 1, R791 += 1 };
  s0 -> s0 [0, 65535] { R1010 += 1, R1011 += 1 };
  s0 -> s3 [47, 47] { R1011 += 1 };
  s0 -> s1 [48, 65535] { R1011 += 1, R791 += 1 };
  s1 -> s1 [0, 46] { R1011 += 1, R791 += 1 };
  s1 -> s3 [47, 47] { R1011 += 1 };
  s1 -> s1 [48, 65535] { R1011 += 1, R791 += 1 };
  s2 -> s1 [0, 46] { R1011 += 1, R791 += 1 };
  s2 -> s2 [0, 65535] { R1011 += 1, R790 += 1, R791 += 1 };
  s2 -> s3 [47, 47] { R1011 += 1 };
  s2 -> s1 [48, 65535] { R1011 += 1, R791 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1011 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton uri_5 {
  init s0;
  s0 -> s0 [0, 65535] { R1012 += 1, R1013 += 1 };
  s0 -> s1 [0, 65535] { R1013 += 1, R933 += 1, R1 += 1 };
  s0 -> s2 [0, 65535] { R1013 += 1, R932 += 1, R933 += 1 };
  s1 -> s1 [0, 65535] { R1013 += 1, R933 += 1, R1 += 1 };
  s1 -> s4 [0, 65535] { R1013 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R1013 += 1, R933 += 1, R1 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1013 += 1, R932 += 1, R933 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1013 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_6 {
  init s0;
  s0 -> s1 [0, 63] { R1015 += 1, R975 += 1 };
  s0 -> s2 [0, 65535] { R1015 += 1, R974 += 1, R975 += 1 };
  s0 -> s0 [0, 65535] { R1014 += 1, R1015 += 1 };
  s0 -> s3 [64, 64] { R1015 += 1, R975 += 1 };
  s0 -> s1 [65, 65535] { R1015 += 1, R975 += 1 };
  s1 -> s1 [0, 63] { R1015 += 1, R975 += 1 };
  s1 -> s3 [64, 64] { R1015 += 1, R975 += 1 };
  s1 -> s1 [65, 65535] { R1015 += 1, R975 += 1 };
  s2 -> s1 [0, 63] { R1015 += 1, R975 += 1 };
  s2 -> s2 [0, 65535] { R1015 += 1, R974 += 1, R975 += 1 };
  s2 -> s3 [64, 64] { R1015 += 1, R975 += 1 };
  s2 -> s1 [65, 65535] { R1015 += 1, R975 += 1 };
  s3 -> s3 [0, 65535] { R1015 += 1, R975 += 1 };
  s3 -> s4 [0, 65535] { R1015 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1015 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5;
};
automaton uri_7 {
  init s0;
  s0 -> s0 [0, 65535] { R1016 += 1, R1017 += 1 };
  s0 -> s1 [0, 65535] { R1017 += 1, R976 += 1, R977 += 1 };
  s0 -> s2 [0, 65535] { R1017 += 1, R977 += 1, R4 += 1 };
  s1 -> s1 [0, 65535] { R1017 += 1, R976 += 1, R977 += 1 };
  s1 -> s2 [0, 65535] { R1017 += 1, R977 += 1, R4 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1017 += 1, R977 += 1, R4 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R1017 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1017 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_8 {
  init s0;
  s0 -> s1 [0, 36] { R1019 += 1, R979 += 1, R929 += 1 };
  s0 -> s2 [0, 65535] { R1019 += 1, R979 += 1, R928 += 1, R929 += 1 };
  s0 -> s0 [0, 65535] { R1018 += 1, R1019 += 1 };
  s0 -> s3 [0, 65535] { R1019 += 1, R978 += 1, R979 += 1 };
  s0 -> s1 [38, 42] { R1019 += 1, R979 += 1, R929 += 1 };
  s0 -> s1 [44, 57] { R1019 += 1, R979 += 1, R929 += 1 };
  s0 -> s1 [59, 63] { R1019 += 1, R979 += 1, R929 += 1 };
  s0 -> s1 [65, 65535] { R1019 += 1, R979 += 1, R929 += 1 };
  s1 -> s1 [0, 36] { R1019 += 1, R979 += 1, R929 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R1019 += 1, R979 += 1 };
  s1 -> s5 [0, 65535] { R1019 += 1 };
  s1 -> s1 [38, 42] { R1019 += 1, R979 += 1, R929 += 1 };
  s1 -> s1 [44, 57] { R1019 += 1, R979 += 1, R929 += 1 };
  s1 -> s1 [59, 63] { R1019 += 1, R979 += 1, R929 += 1 };
  s1 -> s1 [65, 65535] { R1019 += 1, R979 += 1, R929 += 1 };
  s2 -> s1 [0, 36] { R1019 += 1, R979 += 1, R929 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1019 += 1, R979 += 1, R928 += 1, R929 += 1 };
  s2 -> s5 [0, 65535] { R1019 += 1 };
  s2 -> s1 [38, 42] { R1019 += 1, R979 += 1, R929 += 1 };
  s2 -> s1 [44, 57] { R1019 += 1, R979 += 1, R929 += 1 };
  s2 -> s1 [59, 63] { R1019 += 1, R979 += 1, R929 += 1 };
  s2 -> s1 [65, 65535] { R1019 += 1, R979 += 1, R929 += 1 };
  s3 -> s1 [0, 36] { R1019 += 1, R979 += 1, R929 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R1019 += 1, R979 += 1, R928 += 1, R929 += 1 };
  s3 -> s3 [0, 65535] { R1019 += 1, R978 += 1, R979 += 1 };
  s3 -> s1 [38, 42] { R1019 += 1, R979 += 1, R929 += 1 };
  s3 -> s1 [44, 57] { R1019 += 1, R979 += 1, R929 += 1 };
  s3 -> s1 [59, 63] { R1019 += 1, R979 += 1, R929 += 1 };
  s3 -> s1 [65, 65535] { R1019 += 1, R979 += 1, R929 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1019 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_9 {
  init s0;
  s0 -> s1 [0, 65535] { R1021 += 1, R980 += 1, R981 += 1 };
  s0 -> s2 [0, 65535] { R1021 += 1, R981 += 1, R931 += 1, R0 += 1 };
  s0 -> s0 [0, 65535] { R1020 += 1, R1021 += 1 };
  s0 -> s3 [0, 65535] { R1021 += 1, R981 += 1, R930 += 1, R931 += 1 };
  s1 -> s1 [0, 65535] { R1021 += 1, R980 += 1, R981 += 1 };
  s1 -> s2 [0, 65535] { R1021 += 1, R981 += 1, R931 += 1, R0 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R1021 += 1, R981 += 1, R930 += 1, R931 += 1 };
  s2 -> s4 [0, 65535] { R1021 += 1 };
  s2 -> s6 [0, 65535] { R1021 += 1, R981 += 1 };
  s2 -> s2 [0, 65535] { R1021 += 1, R981 += 1, R931 += 1, R0 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R1021 += 1 };
  s3 -> s2 [0, 65535] { R1021 += 1, R981 += 1, R931 += 1, R0 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1021 += 1, R981 += 1, R930 += 1, R931 += 1 };
  s4 -> s4 [0, 65535] { R1021 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R1021 += 1 };
  s6 -> s6 [0, 65535] { R1021 += 1, R981 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_10 {
  init s0;
  s0 -> s1 [0, 43] { R1023 += 1, R983 += 1, R951 += 1 };
  s0 -> s2 [0, 65535] { R1023 += 1, R983 += 1, R950 += 1, R951 += 1 };
  s0 -> s0 [0, 65535] { R1022 += 1, R1023 += 1 };
  s0 -> s3 [0, 65535] { R1023 += 1, R982 += 1, R983 += 1 };
  s0 -> s4 [44, 44] { R1023 += 1, R983 += 1, R951 += 1 };
  s0 -> s1 [45, 65535] { R1023 += 1, R983 += 1, R951 += 1 };
  s1 -> s1 [0, 43] { R1023 += 1, R983 += 1, R951 += 1 };
  s1 -> s4 [44, 44] { R1023 += 1, R983 += 1, R951 += 1 };
  s1 -> s1 [45, 65535] { R1023 += 1, R983 += 1, R951 += 1 };
  s2 -> s1 [0, 43] { R1023 += 1, R983 += 1, R951 += 1 };
  s2 -> s2 [0, 65535] { R1023 += 1, R983 += 1, R950 += 1, R951 += 1 };
  s2 -> s4 [44, 44] { R1023 += 1, R983 += 1, R951 += 1 };
  s2 -> s1 [45, 65535] { R1023 += 1, R983 += 1, R951 += 1 };
  s3 -> s1 [0, 43] { R1023 += 1, R983 += 1, R951 += 1 };
  s3 -> s2 [0, 65535] { R1023 += 1, R983 += 1, R950 += 1, R951 += 1 };
  s3 -> s3 [0, 65535] { R1023 += 1, R982 += 1, R983 += 1 };
  s3 -> s4 [44, 44] { R1023 += 1, R983 += 1, R951 += 1 };
  s3 -> s1 [45, 65535] { R1023 += 1, R983 += 1, R951 += 1 };
  s4 -> s5 [0, 65535] { R1023 += 1, R983 += 1 };
  s4 -> s6 [0, 65535] { R1023 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R1023 += 1, R983 += 1, R951 += 1 };
  s5 -> s5 [0, 65535] { R1023 += 1, R983 += 1 };
  s5 -> s6 [0, 65535] { R1023 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R1023 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s4, s5, s6, s7;
};
automaton uri_11 {
  init s0;
  s0 -> s0 [0, 65535] { R1024 += 1, R1025 += 1 };
  s0 -> s1 [0, 65535] { R1025 += 1, R985 += 1, R952 += 1, R953 += 1 };
  s0 -> s2 [0, 65535] { R1025 += 1, R984 += 1, R985 += 1 };
  s0 -> s3 [0, 65535] { R1025 += 1, R985 += 1, R953 += 1, R3 += 1 };
  s1 -> s1 [0, 65535] { R1025 += 1, R985 += 1, R952 += 1, R953 += 1 };
  s1 -> s3 [0, 65535] { R1025 += 1, R985 += 1, R953 += 1, R3 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R1025 += 1 };
  s2 -> s1 [0, 65535] { R1025 += 1, R985 += 1, R952 += 1, R953 += 1 };
  s2 -> s2 [0, 65535] { R1025 += 1, R984 += 1, R985 += 1 };
  s2 -> s3 [0, 65535] { R1025 += 1, R985 += 1, R953 += 1, R3 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1025 += 1, R985 += 1, R953 += 1, R3 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R1025 += 1 };
  s3 -> s6 [0, 65535] { R1025 += 1, R985 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1025 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R1025 += 1 };
  s6 -> s6 [0, 65535] { R1025 += 1, R985 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_12 {
  init s0;
  s0 -> s1 [0, 43] { R1027 += 1, R987 += 1, R955 += 1, R531 += 1 };
  s0 -> s2 [0, 65535] { R1027 += 1, R987 += 1, R955 += 1, R530 += 1, R531 += 1 };
  s0 -> s3 [0, 65535] { R1027 += 1, R986 += 1, R987 += 1 };
  s0 -> s4 [0, 65535] { R1027 += 1, R987 += 1, R954 += 1, R955 += 1 };
  s0 -> s0 [0, 65535] { R1026 += 1, R1027 += 1 };
  s0 -> s5 [44, 44] { R1027 += 1, R987 += 1, R955 += 1 };
  s0 -> s1 [45, 65535] { R1027 += 1, R987 += 1, R955 += 1, R531 += 1 };
  s1 -> s1 [0, 43] { R1027 += 1, R987 += 1, R955 += 1, R531 += 1 };
  s1 -> s5 [44, 44] { R1027 += 1, R987 += 1, R955 += 1 };
  s1 -> s1 [45, 65535] { R1027 += 1, R987 += 1, R955 += 1, R531 += 1 };
  s2 -> s1 [0, 43] { R1027 += 1, R987 += 1, R955 += 1, R531 += 1 };
  s2 -> s2 [0, 65535] { R1027 += 1, R987 += 1, R955 += 1, R530 += 1, R531 += 1 };
  s2 -> s5 [44, 44] { R1027 += 1, R987 += 1, R955 += 1 };
  s2 -> s1 [45, 65535] { R1027 += 1, R987 += 1, R955 += 1, R531 += 1 };
  s3 -> s1 [0, 43] { R1027 += 1, R987 += 1, R955 += 1, R531 += 1 };
  s3 -> s2 [0, 65535] { R1027 += 1, R987 += 1, R955 += 1, R530 += 1, R531 += 1 };
  s3 -> s3 [0, 65535] { R1027 += 1, R986 += 1, R987 += 1 };
  s3 -> s4 [0, 65535] { R1027 += 1, R987 += 1, R954 += 1, R955 += 1 };
  s3 -> s5 [44, 44] { R1027 += 1, R987 += 1, R955 += 1 };
  s3 -> s1 [45, 65535] { R1027 += 1, R987 += 1, R955 += 1, R531 += 1 };
  s4 -> s1 [0, 43] { R1027 += 1, R987 += 1, R955 += 1, R531 += 1 };
  s4 -> s2 [0, 65535] { R1027 += 1, R987 += 1, R955 += 1, R530 += 1, R531 += 1 };
  s4 -> s4 [0, 65535] { R1027 += 1, R987 += 1, R954 += 1, R955 += 1 };
  s4 -> s5 [44, 44] { R1027 += 1, R987 += 1, R955 += 1 };
  s4 -> s1 [45, 65535] { R1027 += 1, R987 += 1, R955 += 1, R531 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R1027 += 1, R987 += 1 };
  s5 -> s5 [0, 65535] { R1027 += 1, R987 += 1, R955 += 1 };
  s5 -> s8 [0, 65535] { R1027 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R1027 += 1, R987 += 1 };
  s7 -> s8 [0, 65535] { R1027 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R1027 += 1 };
  accepting s5, s6, s7, s8;
};
automaton uri_13 {
  init s0;
  s0 -> s1 [0, 65535] { R1029 += 1, R989 += 1, R957 += 1 };
  s0 -> s2 [0, 65535] { R1029 += 1, R989 += 1, R956 += 1, R957 += 1 };
  s0 -> s3 [0, 65535] { R1029 += 1, R988 += 1, R989 += 1 };
  s0 -> s0 [0, 65535] { R1028 += 1, R1029 += 1 };
  s1 -> s1 [0, 65535] { R1029 += 1, R989 += 1, R957 += 1 };
  s1 -> s5 [0, 65535] { R1029 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R1029 += 1, R989 += 1 };
  s2 -> s1 [0, 65535] { R1029 += 1, R989 += 1, R957 += 1 };
  s2 -> s2 [0, 65535] { R1029 += 1, R989 += 1, R956 += 1, R957 += 1 };
  s2 -> s5 [0, 65535] { R1029 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R1029 += 1, R989 += 1, R957 += 1 };
  s3 -> s2 [0, 65535] { R1029 += 1, R989 += 1, R956 += 1, R957 += 1 };
  s3 -> s3 [0, 65535] { R1029 += 1, R988 += 1, R989 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1029 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R1029 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R1029 += 1, R989 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 64] { R1031 += 1, R991 += 1, R959 += 1, R935 += 1 };
  s0 -> s2 [0, 65535] { R1031 += 1, R991 += 1, R958 += 1, R959 += 1 };
  s0 -> s3 [0, 65535] { R1031 += 1, R990 += 1, R991 += 1 };
  s0 -> s0 [0, 65535] { R1030 += 1, R1031 += 1 };
  s0 -> s4 [0, 65535] { R1031 += 1, R991 += 1, R959 += 1, R934 += 1, R935 += 1 };
  s0 -> s5 [85, 85] { R1031 += 1, R991 += 1, R959 += 1, R935 += 1 };
  s0 -> s1 [86, 65535] { R1031 += 1, R991 += 1, R959 += 1, R935 += 1 };
  s1 -> s1 [0, 64] { R1031 += 1, R991 += 1, R959 += 1, R935 += 1 };
  s1 -> s5 [85, 85] { R1031 += 1, R991 += 1, R959 += 1, R935 += 1 };
  s1 -> s1 [86, 65535] { R1031 += 1, R991 += 1, R959 += 1, R935 += 1 };
  s2 -> s1 [0, 64] { R1031 += 1, R991 += 1, R959 += 1, R935 += 1 };
  s2 -> s2 [0, 65535] { R1031 += 1, R991 += 1, R958 += 1, R959 += 1 };
  s2 -> s4 [0, 65535] { R1031 += 1, R991 += 1, R959 += 1, R934 += 1, R935 += 1 };
  s2 -> s5 [85, 85] { R1031 += 1, R991 += 1, R959 += 1, R935 += 1 };
  s2 -> s1 [86, 65535] { R1031 += 1, R991 += 1, R959 += 1, R935 += 1 };
  s3 -> s1 [0, 64] { R1031 += 1, R991 += 1, R959 += 1, R935 += 1 };
  s3 -> s2 [0, 65535] { R1031 += 1, R991 += 1, R958 += 1, R959 += 1 };
  s3 -> s3 [0, 65535] { R1031 += 1, R990 += 1, R991 += 1 };
  s3 -> s4 [0, 65535] { R1031 += 1, R991 += 1, R959 += 1, R934 += 1, R935 += 1 };
  s3 -> s5 [85, 85] { R1031 += 1, R991 += 1, R959 += 1, R935 += 1 };
  s3 -> s1 [86, 65535] { R1031 += 1, R991 += 1, R959 += 1, R935 += 1 };
  s4 -> s1 [0, 64] { R1031 += 1, R991 += 1, R959 += 1, R935 += 1 };
  s4 -> s4 [0, 65535] { R1031 += 1, R991 += 1, R959 += 1, R934 += 1, R935 += 1 };
  s4 -> s5 [85, 85] { R1031 += 1, R991 += 1, R959 += 1, R935 += 1 };
  s4 -> s1 [86, 65535] { R1031 += 1, R991 += 1, R959 += 1, R935 += 1 };
  s5 -> s5 [0, 64] { R1031 += 1, R991 += 1, R959 += 1, R935 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R1031 += 1 };
  s5 -> s5 [0, 65535] { R1031 += 1, R991 += 1, R959 += 1 };
  s5 -> s8 [0, 65535] { R1031 += 1, R991 += 1 };
  s5 -> s5 [85, 65535] { R1031 += 1, R991 += 1, R959 += 1, R935 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R1031 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R1031 += 1 };
  s8 -> s8 [0, 65535] { R1031 += 1, R991 += 1 };
  accepting s5, s6, s7, s8;
};
automaton uri_15 {
  init s0;
  s0 -> s1 [0, 65535] { R1033 += 1, R993 += 1, R961 += 1, R936 += 1, R937 += 1 };
  s0 -> s2 [0, 65535] { R1033 += 1, R993 += 1, R961 += 1, R937 += 1, R2 += 1 };
  s0 -> s3 [0, 65535] { R1033 += 1, R992 += 1, R993 += 1 };
  s0 -> s0 [0, 65535] { R1032 += 1, R1033 += 1 };
  s0 -> s4 [0, 65535] { R1033 += 1, R993 += 1, R960 += 1, R961 += 1 };
  s1 -> s1 [0, 65535] { R1033 += 1, R993 += 1, R961 += 1, R936 += 1, R937 += 1 };
  s1 -> s2 [0, 65535] { R1033 += 1, R993 += 1, R961 += 1, R937 += 1, R2 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R1033 += 1 };
  s1 -> s8 [0, 65535] { R1033 += 1, R993 += 1 };
  s2 -> s7 [0, 65535] { R1033 += 1, R993 += 1, R961 += 1 };
  s2 -> s2 [0, 65535] { R1033 += 1, R993 += 1, R961 += 1, R937 += 1, R2 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R1033 += 1 };
  s2 -> s8 [0, 65535] { R1033 += 1, R993 += 1 };
  s3 -> s1 [0, 65535] { R1033 += 1, R993 += 1, R961 += 1, R936 += 1, R937 += 1 };
  s3 -> s2 [0, 65535] { R1033 += 1, R993 += 1, R961 += 1, R937 += 1, R2 += 1 };
  s3 -> s3 [0, 65535] { R1033 += 1, R992 += 1, R993 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R1033 += 1, R993 += 1, R960 += 1, R961 += 1 };
  s4 -> s1 [0, 65535] { R1033 += 1, R993 += 1, R961 += 1, R936 += 1, R937 += 1 };
  s4 -> s2 [0, 65535] { R1033 += 1, R993 += 1, R961 += 1, R937 += 1, R2 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1033 += 1 };
  s4 -> s4 [0, 65535] { R1033 += 1, R993 += 1, R960 += 1, R961 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1033 += 1 };
  s7 -> s7 [0, 65535] { R1033 += 1, R993 += 1, R961 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R1033 += 1 };
  s7 -> s8 [0, 65535] { R1033 += 1, R993 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R1033 += 1 };
  s8 -> s8 [0, 65535] { R1033 += 1, R993 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 57] { R1035 += 1, R995 += 1, R963 += 1, R939 += 1 };
  s0 -> s0 [0, 65535] { R1034 += 1, R1035 += 1 };
  s0 -> s2 [0, 65535] { R1035 += 1, R995 += 1, R963 += 1, R939 += 1, R8 += 1 };
  s0 -> s3 [0, 65535] { R1035 += 1, R995 += 1, R962 += 1, R963 += 1 };
  s0 -> s4 [0, 65535] { R1035 += 1, R994 += 1, R995 += 1 };
  s0 -> s5 [0, 65535] { R1035 += 1, R995 += 1, R963 += 1, R938 += 1, R939 += 1 };
  s0 -> s6 [58, 58] { R1035 += 1, R995 += 1, R963 += 1, R939 += 1 };
  s0 -> s1 [59, 65535] { R1035 += 1, R995 += 1, R963 += 1, R939 += 1 };
  s1 -> s1 [0, 57] { R1035 += 1, R995 += 1, R963 += 1, R939 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s8 [0, 65535] { R1035 += 1, R995 += 1 };
  s1 -> s1 [0, 65535] { R1035 += 1, R995 += 1, R963 += 1 };
  s1 -> s9 [0, 65535] { R1035 += 1 };
  s1 -> s6 [58, 58] { R1035 += 1, R995 += 1, R963 += 1, R939 += 1 };
  s1 -> s1 [59, 65535] { R1035 += 1, R995 += 1, R963 += 1, R939 += 1 };
  s2 -> s1 [0, 57] { R1035 += 1, R995 += 1, R963 += 1, R939 += 1 };
  s2 -> s2 [0, 65535] { R1035 += 1, R995 += 1, R963 += 1, R939 += 1, R8 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s8 [0, 65535] { R1035 += 1, R995 += 1 };
  s2 -> s10 [0, 65535] { R1035 += 1, R995 += 1, R963 += 1 };
  s2 -> s9 [0, 65535] { R1035 += 1 };
  s2 -> s6 [58, 58] { R1035 += 1, R995 += 1, R963 += 1, R939 += 1 };
  s2 -> s1 [59, 65535] { R1035 += 1, R995 += 1, R963 += 1, R939 += 1 };
  s3 -> s1 [0, 57] { R1035 += 1, R995 += 1, R963 += 1, R939 += 1 };
  s3 -> s2 [0, 65535] { R1035 += 1, R995 += 1, R963 += 1, R939 += 1, R8 += 1 };
  s3 -> s3 [0, 65535] { R1035 += 1, R995 += 1, R962 += 1, R963 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s9 [0, 65535] { R1035 += 1 };
  s3 -> s5 [0, 65535] { R1035 += 1, R995 += 1, R963 += 1, R938 += 1, R939 += 1 };
  s3 -> s6 [58, 58] { R1035 += 1, R995 += 1, R963 += 1, R939 += 1 };
  s3 -> s1 [59, 65535] { R1035 += 1, R995 += 1, R963 += 1, R939 += 1 };
  s4 -> s1 [0, 57] { R1035 += 1, R995 += 1, R963 += 1, R939 += 1 };
  s4 -> s2 [0, 65535] { R1035 += 1, R995 += 1, R963 += 1, R939 += 1, R8 += 1 };
  s4 -> s3 [0, 65535] { R1035 += 1, R995 += 1, R962 += 1, R963 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R1035 += 1, R994 += 1, R995 += 1 };
  s4 -> s5 [0, 65535] { R1035 += 1, R995 += 1, R963 += 1, R938 += 1, R939 += 1 };
  s4 -> s6 [58, 58] { R1035 += 1, R995 += 1, R963 += 1, R939 += 1 };
  s4 -> s1 [59, 65535] { R1035 += 1, R995 += 1, R963 += 1, R939 += 1 };
  s5 -> s1 [0, 57] { R1035 += 1, R995 += 1, R963 += 1, R939 += 1 };
  s5 -> s2 [0, 65535] { R1035 += 1, R995 += 1, R963 += 1, R939 += 1, R8 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R1035 += 1, R995 += 1 };
  s5 -> s9 [0, 65535] { R1035 += 1 };
  s5 -> s5 [0, 65535] { R1035 += 1, R995 += 1, R963 += 1, R938 += 1, R939 += 1 };
  s5 -> s6 [58, 58] { R1035 += 1, R995 += 1, R963 += 1, R939 += 1 };
  s5 -> s1 [59, 65535] { R1035 += 1, R995 += 1, R963 += 1, R939 += 1 };
  s6 -> s6 [0, 65535] { R1035 += 1, R995 += 1, R963 += 1, R939 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R1035 += 1, R995 += 1 };
  s8 -> s9 [0, 65535] { R1035 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s9 [0, 65535] { R1035 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s8 [0, 65535] { R1035 += 1, R995 += 1 };
  s10 -> s10 [0, 65535] { R1035 += 1, R995 += 1, R963 += 1 };
  s10 -> s9 [0, 65535] { R1035 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s1, s7, s0, s10;
};
automaton uri_17 {
  init s0;
  s0 -> s1 [0, 84] { R1037 += 1, R997 += 1, R965 += 1, R941 += 1, R11 += 1 };
  s0 -> s2 [0, 65535] { R1037 += 1, R997 += 1, R964 += 1, R965 += 1 };
  s0 -> s3 [0, 65535] { R1037 += 1, R997 += 1, R965 += 1, R940 += 1, R941 += 1 };
  s0 -> s4 [0, 65535] { R1037 += 1, R996 += 1, R997 += 1 };
  s0 -> s5 [0, 65535] { R1037 += 1, R997 += 1, R965 += 1, R941 += 1, R10 += 1, R11 += 1 };
  s0 -> s0 [0, 65535] { R1036 += 1, R1037 += 1 };
  s0 -> s6 [85, 85] { R1037 += 1, R997 += 1, R965 += 1, R941 += 1 };
  s0 -> s1 [86, 65535] { R1037 += 1, R997 += 1, R965 += 1, R941 += 1, R11 += 1 };
  s1 -> s1 [0, 84] { R1037 += 1, R997 += 1, R965 += 1, R941 += 1, R11 += 1 };
  s1 -> s6 [85, 85] { R1037 += 1, R997 += 1, R965 += 1, R941 += 1 };
  s1 -> s1 [86, 65535] { R1037 += 1, R997 += 1, R965 += 1, R941 += 1, R11 += 1 };
  s2 -> s1 [0, 84] { R1037 += 1, R997 += 1, R965 += 1, R941 += 1, R11 += 1 };
  s2 -> s2 [0, 65535] { R1037 += 1, R997 += 1, R964 += 1, R965 += 1 };
  s2 -> s3 [0, 65535] { R1037 += 1, R997 += 1, R965 += 1, R940 += 1, R941 += 1 };
  s2 -> s5 [0, 65535] { R1037 += 1, R997 += 1, R965 += 1, R941 += 1, R10 += 1, R11 += 1 };
  s2 -> s6 [85, 85] { R1037 += 1, R997 += 1, R965 += 1, R941 += 1 };
  s2 -> s1 [86, 65535] { R1037 += 1, R997 += 1, R965 += 1, R941 += 1, R11 += 1 };
  s3 -> s1 [0, 84] { R1037 += 1, R997 += 1, R965 += 1, R941 += 1, R11 += 1 };
  s3 -> s3 [0, 65535] { R1037 += 1, R997 += 1, R965 += 1, R940 += 1, R941 += 1 };
  s3 -> s5 [0, 65535] { R1037 += 1, R997 += 1, R965 += 1, R941 += 1, R10 += 1, R11 += 1 };
  s3 -> s6 [85, 85] { R1037 += 1, R997 += 1, R965 += 1, R941 += 1 };
  s3 -> s1 [86, 65535] { R1037 += 1, R997 += 1, R965 += 1, R941 += 1, R11 += 1 };
  s4 -> s1 [0, 84] { R1037 += 1, R997 += 1, R965 += 1, R941 += 1, R11 += 1 };
  s4 -> s2 [0, 65535] { R1037 += 1, R997 += 1, R964 += 1, R965 += 1 };
  s4 -> s3 [0, 65535] { R1037 += 1, R997 += 1, R965 += 1, R940 += 1, R941 += 1 };
  s4 -> s4 [0, 65535] { R1037 += 1, R996 += 1, R997 += 1 };
  s4 -> s5 [0, 65535] { R1037 += 1, R997 += 1, R965 += 1, R941 += 1, R10 += 1, R11 += 1 };
  s4 -> s6 [85, 85] { R1037 += 1, R997 += 1, R965 += 1, R941 += 1 };
  s4 -> s1 [86, 65535] { R1037 += 1, R997 += 1, R965 += 1, R941 += 1, R11 += 1 };
  s5 -> s1 [0, 84] { R1037 += 1, R997 += 1, R965 += 1, R941 += 1, R11 += 1 };
  s5 -> s5 [0, 65535] { R1037 += 1, R997 += 1, R965 += 1, R941 += 1, R10 += 1, R11 += 1 };
  s5 -> s6 [85, 85] { R1037 += 1, R997 += 1, R965 += 1, R941 += 1 };
  s5 -> s1 [86, 65535] { R1037 += 1, R997 += 1, R965 += 1, R941 += 1, R11 += 1 };
  s6 -> s7 [0, 65535] { R1037 += 1, R997 += 1, R965 += 1 };
  s6 -> s8 [0, 65535] { R1037 += 1 };
  s6 -> s9 [0, 65535];
  s6 -> s10 [0, 65535] { R1037 += 1, R997 += 1 };
  s6 -> s6 [0, 65535] { R1037 += 1, R997 += 1, R965 += 1, R941 += 1 };
  s7 -> s7 [0, 65535] { R1037 += 1, R997 += 1, R965 += 1 };
  s7 -> s8 [0, 65535] { R1037 += 1 };
  s7 -> s9 [0, 65535];
  s7 -> s10 [0, 65535] { R1037 += 1, R997 += 1 };
  s8 -> s8 [0, 65535] { R1037 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  s10 -> s8 [0, 65535] { R1037 += 1 };
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R1037 += 1, R997 += 1 };
  accepting s8, s9, s6, s7, s10;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 90] { R1039 += 1, R999 += 1, R967 += 1, R943 += 1, R921 += 1 };
  s0 -> s2 [0, 65535] { R1039 += 1, R999 += 1, R966 += 1, R967 += 1 };
  s0 -> s3 [0, 65535] { R1039 += 1, R998 += 1, R999 += 1 };
  s0 -> s4 [0, 65535] { R1039 += 1, R999 += 1, R967 += 1, R943 += 1, R920 += 1, R921 += 1 };
  s0 -> s5 [0, 65535] { R1039 += 1, R999 += 1, R967 += 1, R942 += 1, R943 += 1 };
  s0 -> s0 [0, 65535] { R1038 += 1, R1039 += 1 };
  s0 -> s6 [91, 91] { R1039 += 1, R999 += 1, R967 += 1, R943 += 1, R921 += 1 };
  s0 -> s1 [92, 65535] { R1039 += 1, R999 += 1, R967 += 1, R943 += 1, R921 += 1 };
  s1 -> s10 [0, 65535] { R1039 += 1, R999 += 1, R967 += 1 };
  s1 -> s11 [0, 65535] { R1039 += 1, R999 += 1, R967 += 1, R943 += 1 };
  s1 -> s7 [0, 65535] { R1039 += 1 };
  s1 -> s1 [0, 65535] { R1039 += 1, R999 += 1, R967 += 1, R943 += 1, R921 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s9 [0, 65535] { R1039 += 1, R999 += 1 };
  s2 -> s1 [0, 90] { R1039 += 1, R999 += 1, R967 += 1, R943 += 1, R921 += 1 };
  s2 -> s7 [0, 65535] { R1039 += 1 };
  s2 -> s2 [0, 65535] { R1039 += 1, R999 += 1, R966 += 1, R967 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [0, 65535] { R1039 += 1, R999 += 1, R967 += 1, R943 += 1, R920 += 1, R921 += 1 };
  s2 -> s5 [0, 65535] { R1039 += 1, R999 += 1, R967 += 1, R942 += 1, R943 += 1 };
  s2 -> s6 [91, 91] { R1039 += 1, R999 += 1, R967 += 1, R943 += 1, R921 += 1 };
  s2 -> s1 [92, 65535] { R1039 += 1, R999 += 1, R967 += 1, R943 += 1, R921 += 1 };
  s3 -> s1 [0, 90] { R1039 += 1, R999 += 1, R967 += 1, R943 += 1, R921 += 1 };
  s3 -> s2 [0, 65535] { R1039 += 1, R999 += 1, R966 += 1, R967 += 1 };
  s3 -> s3 [0, 65535] { R1039 += 1, R998 += 1, R999 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s4 [0, 65535] { R1039 += 1, R999 += 1, R967 += 1, R943 += 1, R920 += 1, R921 += 1 };
  s3 -> s5 [0, 65535] { R1039 += 1, R999 += 1, R967 += 1, R942 += 1, R943 += 1 };
  s3 -> s6 [91, 91] { R1039 += 1, R999 += 1, R967 += 1, R943 += 1, R921 += 1 };
  s3 -> s1 [92, 65535] { R1039 += 1, R999 += 1, R967 += 1, R943 += 1, R921 += 1 };
  s4 -> s1 [0, 90] { R1039 += 1, R999 += 1, R967 += 1, R943 += 1, R921 += 1 };
  s4 -> s10 [0, 65535] { R1039 += 1, R999 += 1, R967 += 1 };
  s4 -> s7 [0, 65535] { R1039 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s9 [0, 65535] { R1039 += 1, R999 += 1 };
  s4 -> s4 [0, 65535] { R1039 += 1, R999 += 1, R967 += 1, R943 += 1, R920 += 1, R921 += 1 };
  s4 -> s6 [91, 91] { R1039 += 1, R999 += 1, R967 += 1, R943 += 1, R921 += 1 };
  s4 -> s1 [92, 65535] { R1039 += 1, R999 += 1, R967 += 1, R943 += 1, R921 += 1 };
  s5 -> s1 [0, 90] { R1039 += 1, R999 += 1, R967 += 1, R943 += 1, R921 += 1 };
  s5 -> s7 [0, 65535] { R1039 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s9 [0, 65535] { R1039 += 1, R999 += 1 };
  s5 -> s4 [0, 65535] { R1039 += 1, R999 += 1, R967 += 1, R943 += 1, R920 += 1, R921 += 1 };
  s5 -> s5 [0, 65535] { R1039 += 1, R999 += 1, R967 += 1, R942 += 1, R943 += 1 };
  s5 -> s6 [91, 91] { R1039 += 1, R999 += 1, R967 += 1, R943 += 1, R921 += 1 };
  s5 -> s1 [92, 65535] { R1039 += 1, R999 += 1, R967 += 1, R943 += 1, R921 += 1 };
  s6 -> s1 [0, 65535] { R1039 += 1, R999 += 1, R967 += 1, R943 += 1, R921 += 1 };
  s7 -> s7 [0, 65535] { R1039 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s7 [0, 65535] { R1039 += 1 };
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R1039 += 1, R999 += 1 };
  s10 -> s10 [0, 65535] { R1039 += 1, R999 += 1, R967 += 1 };
  s10 -> s7 [0, 65535] { R1039 += 1 };
  s10 -> s8 [0, 65535];
  s10 -> s9 [0, 65535] { R1039 += 1, R999 += 1 };
  s11 -> s10 [0, 65535] { R1039 += 1, R999 += 1, R967 += 1 };
  s11 -> s11 [0, 65535] { R1039 += 1, R999 += 1, R967 += 1, R943 += 1 };
  s11 -> s7 [0, 65535] { R1039 += 1 };
  s11 -> s8 [0, 65535];
  s11 -> s9 [0, 65535] { R1039 += 1, R999 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s1, s7, s0, s10, s11;
};
automaton uri_19 {
  init s0;
  s0 -> s1 [0, 65535] { R1041 += 1, R1001 += 1, R969 += 1, R944 += 1, R945 += 1 };
  s0 -> s2 [0, 65535] { R1041 += 1, R1001 += 1, R968 += 1, R969 += 1 };
  s0 -> s0 [0, 65535] { R1040 += 1, R1041 += 1 };
  s0 -> s3 [0, 65535] { R1041 += 1, R1001 += 1, R969 += 1, R945 += 1, R922 += 1, R923 += 1 };
  s0 -> s4 [0, 65535] { R1041 += 1, R1000 += 1, R1001 += 1 };
  s0 -> s5 [0, 65535] { R1041 += 1, R1001 += 1, R969 += 1, R945 += 1, R923 += 1, R7 += 1 };
  s1 -> s1 [0, 65535] { R1041 += 1, R1001 += 1, R969 += 1, R944 += 1, R945 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s9 [0, 65535] { R1041 += 1, R1001 += 1 };
  s1 -> s3 [0, 65535] { R1041 += 1, R1001 += 1, R969 += 1, R945 += 1, R922 += 1, R923 += 1 };
  s1 -> s5 [0, 65535] { R1041 += 1, R1001 += 1, R969 += 1, R945 += 1, R923 += 1, R7 += 1 };
  s1 -> s10 [0, 65535] { R1041 += 1 };
  s2 -> s1 [0, 65535] { R1041 += 1, R1001 += 1, R969 += 1, R944 += 1, R945 += 1 };
  s2 -> s2 [0, 65535] { R1041 += 1, R1001 += 1, R968 += 1, R969 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s3 [0, 65535] { R1041 += 1, R1001 += 1, R969 += 1, R945 += 1, R922 += 1, R923 += 1 };
  s2 -> s5 [0, 65535] { R1041 += 1, R1001 += 1, R969 += 1, R945 += 1, R923 += 1, R7 += 1 };
  s2 -> s10 [0, 65535] { R1041 += 1 };
  s3 -> s6 [0, 65535] { R1041 += 1, R1001 += 1, R969 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s9 [0, 65535] { R1041 += 1, R1001 += 1 };
  s3 -> s3 [0, 65535] { R1041 += 1, R1001 += 1, R969 += 1, R945 += 1, R922 += 1, R923 += 1 };
  s3 -> s5 [0, 65535] { R1041 += 1, R1001 += 1, R969 += 1, R945 += 1, R923 += 1, R7 += 1 };
  s3 -> s10 [0, 65535] { R1041 += 1 };
  s4 -> s1 [0, 65535] { R1041 += 1, R1001 += 1, R969 += 1, R944 += 1, R945 += 1 };
  s4 -> s2 [0, 65535] { R1041 += 1, R1001 += 1, R968 += 1, R969 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s3 [0, 65535] { R1041 += 1, R1001 += 1, R969 += 1, R945 += 1, R922 += 1, R923 += 1 };
  s4 -> s4 [0, 65535] { R1041 += 1, R1000 += 1, R1001 += 1 };
  s4 -> s5 [0, 65535] { R1041 += 1, R1001 += 1, R969 += 1, R945 += 1, R923 += 1, R7 += 1 };
  s5 -> s6 [0, 65535] { R1041 += 1, R1001 += 1, R969 += 1 };
  s5 -> s7 [0, 65535] { R1041 += 1, R1001 += 1, R969 += 1, R945 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s9 [0, 65535] { R1041 += 1, R1001 += 1 };
  s5 -> s5 [0, 65535] { R1041 += 1, R1001 += 1, R969 += 1, R945 += 1, R923 += 1, R7 += 1 };
  s5 -> s10 [0, 65535] { R1041 += 1 };
  s6 -> s6 [0, 65535] { R1041 += 1, R1001 += 1, R969 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [0, 65535] { R1041 += 1, R1001 += 1 };
  s6 -> s10 [0, 65535] { R1041 += 1 };
  s7 -> s6 [0, 65535] { R1041 += 1, R1001 += 1, R969 += 1 };
  s7 -> s7 [0, 65535] { R1041 += 1, R1001 += 1, R969 += 1, R945 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R1041 += 1, R1001 += 1 };
  s7 -> s10 [0, 65535] { R1041 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R1041 += 1, R1001 += 1 };
  s9 -> s10 [0, 65535] { R1041 += 1 };
  s10 -> s8 [0, 65535];
  s10 -> s10 [0, 65535] { R1041 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 84] { R1043 += 1, R1003 += 1, R971 += 1, R947 += 1, R925 += 1 };
  s0 -> s2 [0, 65535] { R1043 += 1, R1003 += 1, R970 += 1, R971 += 1 };
  s0 -> s0 [0, 65535] { R1042 += 1, R1043 += 1 };
  s0 -> s3 [0, 65535] { R1043 += 1, R1003 += 1, R971 += 1, R947 += 1, R924 += 1, R925 += 1 };
  s0 -> s4 [0, 65535] { R1043 += 1, R1003 += 1, R971 += 1, R946 += 1, R947 += 1 };
  s0 -> s5 [0, 65535] { R1043 += 1, R1002 += 1, R1003 += 1 };
  s0 -> s6 [85, 85] { R1043 += 1, R1003 += 1, R971 += 1, R947 += 1, R925 += 1 };
  s0 -> s1 [86, 65535] { R1043 += 1, R1003 += 1, R971 += 1, R947 += 1, R925 += 1 };
  s1 -> s1 [0, 84] { R1043 += 1, R1003 += 1, R971 += 1, R947 += 1, R925 += 1 };
  s1 -> s6 [85, 85] { R1043 += 1, R1003 += 1, R971 += 1, R947 += 1, R925 += 1 };
  s1 -> s1 [86, 65535] { R1043 += 1, R1003 += 1, R971 += 1, R947 += 1, R925 += 1 };
  s2 -> s1 [0, 84] { R1043 += 1, R1003 += 1, R971 += 1, R947 += 1, R925 += 1 };
  s2 -> s2 [0, 65535] { R1043 += 1, R1003 += 1, R970 += 1, R971 += 1 };
  s2 -> s3 [0, 65535] { R1043 += 1, R1003 += 1, R971 += 1, R947 += 1, R924 += 1, R925 += 1 };
  s2 -> s4 [0, 65535] { R1043 += 1, R1003 += 1, R971 += 1, R946 += 1, R947 += 1 };
  s2 -> s6 [85, 85] { R1043 += 1, R1003 += 1, R971 += 1, R947 += 1, R925 += 1 };
  s2 -> s1 [86, 65535] { R1043 += 1, R1003 += 1, R971 += 1, R947 += 1, R925 += 1 };
  s3 -> s1 [0, 84] { R1043 += 1, R1003 += 1, R971 += 1, R947 += 1, R925 += 1 };
  s3 -> s3 [0, 65535] { R1043 += 1, R1003 += 1, R971 += 1, R947 += 1, R924 += 1, R925 += 1 };
  s3 -> s6 [85, 85] { R1043 += 1, R1003 += 1, R971 += 1, R947 += 1, R925 += 1 };
  s3 -> s1 [86, 65535] { R1043 += 1, R1003 += 1, R971 += 1, R947 += 1, R925 += 1 };
  s4 -> s1 [0, 84] { R1043 += 1, R1003 += 1, R971 += 1, R947 += 1, R925 += 1 };
  s4 -> s3 [0, 65535] { R1043 += 1, R1003 += 1, R971 += 1, R947 += 1, R924 += 1, R925 += 1 };
  s4 -> s4 [0, 65535] { R1043 += 1, R1003 += 1, R971 += 1, R946 += 1, R947 += 1 };
  s4 -> s6 [85, 85] { R1043 += 1, R1003 += 1, R971 += 1, R947 += 1, R925 += 1 };
  s4 -> s1 [86, 65535] { R1043 += 1, R1003 += 1, R971 += 1, R947 += 1, R925 += 1 };
  s5 -> s1 [0, 84] { R1043 += 1, R1003 += 1, R971 += 1, R947 += 1, R925 += 1 };
  s5 -> s2 [0, 65535] { R1043 += 1, R1003 += 1, R970 += 1, R971 += 1 };
  s5 -> s3 [0, 65535] { R1043 += 1, R1003 += 1, R971 += 1, R947 += 1, R924 += 1, R925 += 1 };
  s5 -> s4 [0, 65535] { R1043 += 1, R1003 += 1, R971 += 1, R946 += 1, R947 += 1 };
  s5 -> s5 [0, 65535] { R1043 += 1, R1002 += 1, R1003 += 1 };
  s5 -> s6 [85, 85] { R1043 += 1, R1003 += 1, R971 += 1, R947 += 1, R925 += 1 };
  s5 -> s1 [86, 65535] { R1043 += 1, R1003 += 1, R971 += 1, R947 += 1, R925 += 1 };
  s6 -> s6 [0, 65535] { R1043 += 1, R1003 += 1, R971 += 1, R947 += 1, R925 += 1 };
  s6 -> s7 [0, 65535] { R1043 += 1 };
  s6 -> s8 [0, 65535] { R1043 += 1, R1003 += 1 };
  s6 -> s9 [0, 65535] { R1043 += 1, R1003 += 1, R971 += 1, R947 += 1 };
  s6 -> s10 [0, 65535];
  s6 -> s11 [0, 65535] { R1043 += 1, R1003 += 1, R971 += 1 };
  s7 -> s7 [0, 65535] { R1043 += 1 };
  s7 -> s10 [0, 65535];
  s8 -> s7 [0, 65535] { R1043 += 1 };
  s8 -> s8 [0, 65535] { R1043 += 1, R1003 += 1 };
  s8 -> s10 [0, 65535];
  s9 -> s7 [0, 65535] { R1043 += 1 };
  s9 -> s8 [0, 65535] { R1043 += 1, R1003 += 1 };
  s9 -> s9 [0, 65535] { R1043 += 1, R1003 += 1, R971 += 1, R947 += 1 };
  s9 -> s10 [0, 65535];
  s9 -> s11 [0, 65535] { R1043 += 1, R1003 += 1, R971 += 1 };
  s10 -> s10 [0, 65535];
  s11 -> s7 [0, 65535] { R1043 += 1 };
  s11 -> s8 [0, 65535] { R1043 += 1, R1003 += 1 };
  s11 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R1043 += 1, R1003 += 1, R971 += 1 };
  accepting s8, s9, s6, s7, s10, s11;
};
automaton uri_21 {
  init s0;
  s0 -> s1 [0, 65535] { R1045 += 1, R1005 += 1, R972 += 1, R973 += 1 };
  s0 -> s0 [0, 65535] { R1044 += 1, R1045 += 1 };
  s0 -> s2 [0, 65535] { R1045 += 1, R1004 += 1, R1005 += 1 };
  s0 -> s3 [0, 65535] { R1045 += 1, R1005 += 1, R973 += 1, R949 += 1, R926 += 1, R927 += 1 };
  s0 -> s4 [0, 65535] { R1045 += 1, R1005 += 1, R973 += 1, R949 += 1, R927 += 1, R919 += 1 };
  s0 -> s5 [0, 65535] { R1045 += 1, R1005 += 1, R973 += 1, R948 += 1, R949 += 1 };
  s1 -> s1 [0, 65535] { R1045 += 1, R1005 += 1, R972 += 1, R973 += 1 };
  s1 -> s6 [0, 65535] { R1045 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s3 [0, 65535] { R1045 += 1, R1005 += 1, R973 += 1, R949 += 1, R926 += 1, R927 += 1 };
  s1 -> s4 [0, 65535] { R1045 += 1, R1005 += 1, R973 += 1, R949 += 1, R927 += 1, R919 += 1 };
  s1 -> s5 [0, 65535] { R1045 += 1, R1005 += 1, R973 += 1, R948 += 1, R949 += 1 };
  s2 -> s1 [0, 65535] { R1045 += 1, R1005 += 1, R972 += 1, R973 += 1 };
  s2 -> s2 [0, 65535] { R1045 += 1, R1004 += 1, R1005 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s3 [0, 65535] { R1045 += 1, R1005 += 1, R973 += 1, R949 += 1, R926 += 1, R927 += 1 };
  s2 -> s4 [0, 65535] { R1045 += 1, R1005 += 1, R973 += 1, R949 += 1, R927 += 1, R919 += 1 };
  s2 -> s5 [0, 65535] { R1045 += 1, R1005 += 1, R973 += 1, R948 += 1, R949 += 1 };
  s3 -> s6 [0, 65535] { R1045 += 1 };
  s3 -> s9 [0, 65535] { R1045 += 1, R1005 += 1, R973 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s8 [0, 65535] { R1045 += 1, R1005 += 1 };
  s3 -> s4 [0, 65535] { R1045 += 1, R1005 += 1, R973 += 1, R949 += 1, R927 += 1, R919 += 1 };
  s3 -> s3 [0, 65535] { R1045 += 1, R1005 += 1, R973 += 1, R949 += 1, R926 += 1, R927 += 1 };
  s4 -> s6 [0, 65535] { R1045 += 1 };
  s4 -> s9 [0, 65535] { R1045 += 1, R1005 += 1, R973 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s10 [0, 65535] { R1045 += 1, R1005 += 1, R973 += 1, R949 += 1 };
  s4 -> s4 [0, 65535] { R1045 += 1, R1005 += 1, R973 += 1, R949 += 1, R927 += 1, R919 += 1 };
  s4 -> s8 [0, 65535] { R1045 += 1, R1005 += 1 };
  s5 -> s6 [0, 65535] { R1045 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R1045 += 1, R1005 += 1 };
  s5 -> s4 [0, 65535] { R1045 += 1, R1005 += 1, R973 += 1, R949 += 1, R927 += 1, R919 += 1 };
  s5 -> s3 [0, 65535] { R1045 += 1, R1005 += 1, R973 += 1, R949 += 1, R926 += 1, R927 += 1 };
  s5 -> s5 [0, 65535] { R1045 += 1, R1005 += 1, R973 += 1, R948 += 1, R949 += 1 };
  s6 -> s6 [0, 65535] { R1045 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R1045 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R1045 += 1, R1005 += 1 };
  s9 -> s6 [0, 65535] { R1045 += 1 };
  s9 -> s9 [0, 65535] { R1045 += 1, R1005 += 1, R973 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s8 [0, 65535] { R1045 += 1, R1005 += 1 };
  s10 -> s6 [0, 65535] { R1045 += 1 };
  s10 -> s9 [0, 65535] { R1045 += 1, R1005 += 1, R973 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s10 [0, 65535] { R1045 += 1, R1005 += 1, R973 += 1, R949 += 1 };
  s10 -> s8 [0, 65535] { R1045 += 1, R1005 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
};
constraint R2 = R925 && R3 - R949 = 1 && R4 = R973 && R5 = R933 && R6 = R1045 && R10 = 0 && R11 - R924 = -1 && R530 = 0 && R531 = R949 && R790 = 0 && R791 = R1005 && R920 = 0 && R921 = 1 && R922 = 0 && R923 = 1 && R928 = 0 && R929 = 6 && R930 = 0 && R931 = 6 && R932 - R1005 = 1 && R934 = 0 && R935 = R949 && R936 = 0 && R937 = R949 && R938 = 0 && R939 = R949 && R940 = 0 && R941 = R949 && R942 = 0 && R943 = R949 && R944 = 0 && R945 = R949 && R946 = 0 && R947 = R949 && R948 = 0 && R950 = 7 && R951 = R973 && R952 = 7 && R953 = R973 && R954 = 7 && R955 = R973 && R956 = 7 && R957 = R973 && R958 = 7 && R959 = R973 && R960 = 7 && R961 = R973 && R962 = 7 && R963 = R973 && R964 = 7 && R965 = R973 && R966 = 7 && R967 = R973 && R968 = 7 && R969 = R973 && R970 = 7 && R971 = R973 && R972 = 7 && R974 = 0 && R975 = R1005 && R976 = 0 && R977 = R1005 && R978 = 0 && R979 = R1005 && R980 = 0 && R981 = R1005 && R982 = 0 && R983 = R1005 && R984 = 0 && R985 = R1005 && R986 = 0 && R987 = R1005 && R988 = 0 && R989 = R1005 && R990 = 0 && R991 = R1005 && R992 = 0 && R993 = R1005 && R994 = 0 && R995 = R1005 && R996 = 0 && R997 = R1005 && R998 = 0 && R999 = R1005 && R1000 = 0 && R1001 = R1005 && R1002 = 0 && R1003 = R1005 && R1004 = 0 && R1006 = 10 && R1007 = R1045 && R1008 = 10 && R1009 = R1045 && R1010 = 10 && R1011 = R1045 && R1012 = 10 && R1013 = R1045 && R1014 = 10 && R1015 = R1045 && R1016 = 10 && R1017 = R1045 && R1018 = 10 && R1019 = R1045 && R1020 = 10 && R1021 = R1045 && R1022 = 10 && R1023 = R1045 && R1024 = 10 && R1025 = R1045 && R1026 = 10 && R1027 = R1045 && R1028 = 10 && R1029 = R1045 && R1030 = 10 && R1031 = R1045 && R1032 = 10 && R1033 = R1045 && R1034 = 10 && R1035 = R1045 && R1036 = 10 && R1037 = R1045 && R1038 = 10 && R1039 = R1045 && R1040 = 10 && R1041 = R1045 && R1042 = 10 && R1043 = R1045 && R1044 = 10 && R0 != 0 && R1 != 0 && R8 < 1 && R924 - R925 < 1 && -1 < R924 && 0 < R925 && R1005 < R933 && -1 < R949 && 6 < R973 && -1 < R1005 && 9 < R1045 && (R924 != R926 || R925 = R927 || ((R919 != 0 || R925 - R926 < 1 || R926 < 0) && (R919 = 0 || R925 < R926 || R926 < 0))) && (R924 = R926 || (R919 = 0 && R924 = R925));
// End of Parikh automata intersection problem
