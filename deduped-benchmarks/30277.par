// Parikh automata intersection problem, generated by OSTRICH+
counter int R0, R1, R11, R12, R2, R2459, R2460, R3, R3683, R3684, R4, R4295, R4296, R4601, R4602, R4753, R4754, R4755, R4756, R4757, R4758, R4759, R4760, R4761, R4762, R4763, R4764, R4765, R4766, R4767, R4768, R4769, R4770, R4771, R4772, R4773, R4774, R4775, R4776, R4777, R4778, R4779, R4780, R4781, R4782, R4783, R4784, R4785, R4786, R4787, R4788, R4789, R4790, R4791, R4792, R4793, R4794, R4795, R4796, R4797, R4798, R4799, R4800, R4801, R4802, R4803, R4804, R4805, R4806, R4807, R4808, R4809, R4810, R4811, R4812, R4813, R4814, R4815, R4816, R4817, R4818, R4819, R4820, R4821, R4822, R4823, R4824, R4825, R4826, R4827, R4828, R4829, R4830, R4831, R4832, R4833, R4834, R4835, R4836, R4837, R4838, R4839, R4840, R4841, R4842, R4843, R4844, R4845, R4846, R4847, R4848, R4849, R4850, R4851, R4852, R4853, R4854, R4855, R4856, R4857, R4858, R4859, R4860, R4861, R4862, R4863, R4864, R4865, R4866, R4867, R4868, R4869, R4870, R4871, R4872, R4873, R4874, R4875, R4876, R4877, R4878, R4879, R4880, R4881, R4882, R4883, R4884, R4885, R4886, R4887, R4888, R4889, R4890, R4891, R4892, R4893, R4894, R4895, R4896, R4897, R4898, R4899, R4900, R4901, R4902, R5, R6, R7, R8, R9;
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R6 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 45] { R4850 += 1 };
  s0 -> s0 [0, 65535] { R4849 += 1, R4850 += 1 };
  s0 -> s2 [46, 46] { R4850 += 1 };
  s0 -> s3 [47, 47] { R4850 += 1 };
  s0 -> s1 [48, 65535] { R4850 += 1 };
  s1 -> s1 [0, 45] { R4850 += 1 };
  s1 -> s2 [46, 46] { R4850 += 1 };
  s1 -> s3 [47, 47] { R4850 += 1 };
  s1 -> s1 [48, 65535] { R4850 += 1 };
  s2 -> s1 [0, 45] { R4850 += 1 };
  s2 -> s2 [46, 46] { R4850 += 1 };
  s2 -> s3 [47, 47] { R4850 += 1 };
  s2 -> s1 [48, 114] { R4850 += 1 };
  s2 -> s8 [115, 115] { R4850 += 1 };
  s2 -> s1 [116, 65535] { R4850 += 1 };
  s3 -> s3 [0, 45] { R4850 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s4 [46, 46] { R4850 += 1 };
  s3 -> s3 [47, 65535] { R4850 += 1 };
  s4 -> s3 [0, 45] { R4850 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s4 [46, 46] { R4850 += 1 };
  s4 -> s3 [47, 114] { R4850 += 1 };
  s4 -> s5 [115, 115] { R4850 += 1 };
  s4 -> s3 [116, 65535] { R4850 += 1 };
  s5 -> s3 [0, 45] { R4850 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s4 [46, 46] { R4850 += 1 };
  s5 -> s3 [47, 110] { R4850 += 1 };
  s5 -> s6 [111, 111] { R4850 += 1 };
  s5 -> s3 [112, 65535] { R4850 += 1 };
  s6 -> s3 [0, 45] { R4850 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s4 [46, 46] { R4850 += 1 };
  s6 -> s3 [47, 98] { R4850 += 1 };
  s6 -> s7 [99, 99] { R4850 += 1 };
  s6 -> s3 [100, 65535] { R4850 += 1 };
  s7 -> s3 [0, 45] { R4850 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s4 [46, 46] { R4850 += 1 };
  s7 -> s3 [47, 106] { R4850 += 1 };
  s7 -> s3 [108, 65535] { R4850 += 1 };
  s8 -> s1 [0, 45] { R4850 += 1 };
  s8 -> s2 [46, 46] { R4850 += 1 };
  s8 -> s3 [47, 47] { R4850 += 1 };
  s8 -> s1 [48, 110] { R4850 += 1 };
  s8 -> s9 [111, 111] { R4850 += 1 };
  s8 -> s1 [112, 65535] { R4850 += 1 };
  s9 -> s1 [0, 45] { R4850 += 1 };
  s9 -> s2 [46, 46] { R4850 += 1 };
  s9 -> s3 [47, 47] { R4850 += 1 };
  s9 -> s1 [48, 98] { R4850 += 1 };
  s9 -> s10 [99, 99] { R4850 += 1 };
  s9 -> s1 [100, 65535] { R4850 += 1 };
  s10 -> s1 [0, 45] { R4850 += 1 };
  s10 -> s2 [46, 46] { R4850 += 1 };
  s10 -> s3 [47, 47] { R4850 += 1 };
  s10 -> s1 [48, 106] { R4850 += 1 };
  s10 -> s1 [108, 65535] { R4850 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_3 {
  init s0;
  s0 -> s1 [0, 65535] { R4852 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R4851 += 1, R4852 += 1 };
  s1 -> s1 [0, 65535] { R4852 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s1 [0, 46] { R4854 += 1, R4602 += 1 };
  s0 -> s0 [0, 65535] { R4853 += 1, R4854 += 1 };
  s0 -> s2 [0, 65535] { R4854 += 1, R4601 += 1, R4602 += 1 };
  s0 -> s3 [47, 47] { R4854 += 1 };
  s0 -> s1 [48, 65535] { R4854 += 1, R4602 += 1 };
  s1 -> s1 [0, 46] { R4854 += 1, R4602 += 1 };
  s1 -> s3 [47, 47] { R4854 += 1 };
  s1 -> s1 [48, 65535] { R4854 += 1, R4602 += 1 };
  s2 -> s1 [0, 46] { R4854 += 1, R4602 += 1 };
  s2 -> s2 [0, 65535] { R4854 += 1, R4601 += 1, R4602 += 1 };
  s2 -> s3 [47, 47] { R4854 += 1 };
  s2 -> s1 [48, 65535] { R4854 += 1, R4602 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4854 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 62] { R4856 += 1, R4802 += 1 };
  s0 -> s2 [0, 65535] { R4856 += 1, R4801 += 1, R4802 += 1 };
  s0 -> s0 [0, 65535] { R4855 += 1, R4856 += 1 };
  s0 -> s3 [63, 63] { R4856 += 1, R4802 += 1 };
  s0 -> s1 [64, 65535] { R4856 += 1, R4802 += 1 };
  s1 -> s1 [0, 62] { R4856 += 1, R4802 += 1 };
  s1 -> s3 [63, 63] { R4856 += 1, R4802 += 1 };
  s1 -> s1 [64, 65535] { R4856 += 1, R4802 += 1 };
  s2 -> s1 [0, 62] { R4856 += 1, R4802 += 1 };
  s2 -> s2 [0, 65535] { R4856 += 1, R4801 += 1, R4802 += 1 };
  s2 -> s3 [63, 63] { R4856 += 1, R4802 += 1 };
  s2 -> s1 [64, 65535] { R4856 += 1, R4802 += 1 };
  s3 -> s3 [0, 65535] { R4856 += 1, R4802 += 1 };
  s3 -> s4 [0, 65535] { R4856 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4856 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5;
};
automaton uri_6 {
  init s0;
  s0 -> s0 [0, 65535] { R4857 += 1, R4858 += 1 };
  s0 -> s1 [0, 65535] { R4858 += 1, R4804 += 1, R3 += 1 };
  s0 -> s2 [0, 65535] { R4858 += 1, R4803 += 1, R4804 += 1 };
  s1 -> s1 [0, 65535] { R4858 += 1, R4804 += 1, R3 += 1 };
  s1 -> s4 [0, 65535] { R4858 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4858 += 1, R4804 += 1, R3 += 1 };
  s2 -> s2 [0, 65535] { R4858 += 1, R4803 += 1, R4804 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4858 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_7 {
  init s0;
  s0 -> s1 [0, 62] { R4860 += 1, R4806 += 1, R4296 += 1 };
  s0 -> s2 [0, 65535] { R4860 += 1, R4805 += 1, R4806 += 1 };
  s0 -> s3 [0, 65535] { R4860 += 1, R4806 += 1, R4295 += 1, R4296 += 1 };
  s0 -> s0 [0, 65535] { R4859 += 1, R4860 += 1 };
  s0 -> s4 [63, 63] { R4860 += 1, R4806 += 1 };
  s0 -> s1 [64, 65535] { R4860 += 1, R4806 += 1, R4296 += 1 };
  s1 -> s1 [0, 62] { R4860 += 1, R4806 += 1, R4296 += 1 };
  s1 -> s4 [63, 63] { R4860 += 1, R4806 += 1 };
  s1 -> s1 [64, 65535] { R4860 += 1, R4806 += 1, R4296 += 1 };
  s2 -> s1 [0, 62] { R4860 += 1, R4806 += 1, R4296 += 1 };
  s2 -> s2 [0, 65535] { R4860 += 1, R4805 += 1, R4806 += 1 };
  s2 -> s3 [0, 65535] { R4860 += 1, R4806 += 1, R4295 += 1, R4296 += 1 };
  s2 -> s4 [63, 63] { R4860 += 1, R4806 += 1 };
  s2 -> s1 [64, 65535] { R4860 += 1, R4806 += 1, R4296 += 1 };
  s3 -> s1 [0, 62] { R4860 += 1, R4806 += 1, R4296 += 1 };
  s3 -> s3 [0, 65535] { R4860 += 1, R4806 += 1, R4295 += 1, R4296 += 1 };
  s3 -> s4 [63, 63] { R4860 += 1, R4806 += 1 };
  s3 -> s1 [64, 65535] { R4860 += 1, R4806 += 1, R4296 += 1 };
  s4 -> s4 [0, 65535] { R4860 += 1, R4806 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4860 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4860 += 1 };
  accepting s4, s5, s6;
};
automaton uri_8 {
  init s0;
  s0 -> s1 [0, 62] { R4862 += 1, R4808 += 1, R4760 += 1 };
  s0 -> s0 [0, 65535] { R4861 += 1, R4862 += 1 };
  s0 -> s2 [0, 65535] { R4862 += 1, R4808 += 1, R4759 += 1, R4760 += 1 };
  s0 -> s3 [0, 65535] { R4862 += 1, R4807 += 1, R4808 += 1 };
  s0 -> s4 [63, 63] { R4862 += 1, R4808 += 1, R4760 += 1 };
  s0 -> s1 [64, 65535] { R4862 += 1, R4808 += 1, R4760 += 1 };
  s1 -> s6 [0, 65535] { R4862 += 1 };
  s1 -> s7 [0, 65535] { R4862 += 1, R4808 += 1 };
  s1 -> s1 [0, 65535] { R4862 += 1, R4808 += 1, R4760 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 62] { R4862 += 1, R4808 += 1, R4760 += 1 };
  s2 -> s6 [0, 65535] { R4862 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4862 += 1, R4808 += 1, R4759 += 1, R4760 += 1 };
  s2 -> s4 [63, 63] { R4862 += 1, R4808 += 1, R4760 += 1 };
  s2 -> s1 [64, 65535] { R4862 += 1, R4808 += 1, R4760 += 1 };
  s3 -> s1 [0, 62] { R4862 += 1, R4808 += 1, R4760 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R4862 += 1, R4808 += 1, R4759 += 1, R4760 += 1 };
  s3 -> s3 [0, 65535] { R4862 += 1, R4807 += 1, R4808 += 1 };
  s3 -> s4 [63, 63] { R4862 += 1, R4808 += 1, R4760 += 1 };
  s3 -> s1 [64, 65535] { R4862 += 1, R4808 += 1, R4760 += 1 };
  s4 -> s1 [0, 65535] { R4862 += 1, R4808 += 1, R4760 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4862 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R4862 += 1 };
  s7 -> s7 [0, 65535] { R4862 += 1, R4808 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s5, s2, s6, s1, s7, s0;
};
automaton uri_9 {
  init s0;
  s0 -> s1 [0, 65535] { R4864 += 1, R4810 += 1, R4761 += 1, R4762 += 1 };
  s0 -> s0 [0, 65535] { R4863 += 1, R4864 += 1 };
  s0 -> s2 [0, 65535] { R4864 += 1, R4810 += 1, R4762 += 1, R8 += 1 };
  s0 -> s3 [0, 65535] { R4864 += 1, R4809 += 1, R4810 += 1 };
  s1 -> s1 [0, 65535] { R4864 += 1, R4810 += 1, R4761 += 1, R4762 += 1 };
  s1 -> s2 [0, 65535] { R4864 += 1, R4810 += 1, R4762 += 1, R8 += 1 };
  s1 -> s6 [0, 65535] { R4864 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R4864 += 1, R4810 += 1 };
  s2 -> s2 [0, 65535] { R4864 += 1, R4810 += 1, R4762 += 1, R8 += 1 };
  s2 -> s6 [0, 65535] { R4864 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R4864 += 1, R4810 += 1, R4761 += 1, R4762 += 1 };
  s3 -> s2 [0, 65535] { R4864 += 1, R4810 += 1, R4762 += 1, R8 += 1 };
  s3 -> s3 [0, 65535] { R4864 += 1, R4809 += 1, R4810 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4864 += 1, R4810 += 1 };
  s5 -> s6 [0, 65535] { R4864 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R4864 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_10 {
  init s0;
  s0 -> s1 [0, 45] { R4866 += 1, R4812 += 1, R4768 += 1 };
  s0 -> s0 [0, 65535] { R4865 += 1, R4866 += 1 };
  s0 -> s2 [0, 65535] { R4866 += 1, R4812 += 1, R4767 += 1, R4768 += 1 };
  s0 -> s3 [0, 65535] { R4866 += 1, R4811 += 1, R4812 += 1 };
  s0 -> s1 [47, 65535] { R4866 += 1, R4812 += 1, R4768 += 1 };
  s1 -> s1 [0, 45] { R4866 += 1, R4812 += 1, R4768 += 1 };
  s1 -> s1 [0, 65535] { R4866 += 1, R4812 += 1 };
  s1 -> s5 [0, 65535] { R4866 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [47, 65535] { R4866 += 1, R4812 += 1, R4768 += 1 };
  s2 -> s1 [0, 45] { R4866 += 1, R4812 += 1, R4768 += 1 };
  s2 -> s2 [0, 65535] { R4866 += 1, R4812 += 1, R4767 += 1, R4768 += 1 };
  s2 -> s5 [0, 65535] { R4866 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [47, 65535] { R4866 += 1, R4812 += 1, R4768 += 1 };
  s3 -> s1 [0, 45] { R4866 += 1, R4812 += 1, R4768 += 1 };
  s3 -> s2 [0, 65535] { R4866 += 1, R4812 += 1, R4767 += 1, R4768 += 1 };
  s3 -> s3 [0, 65535] { R4866 += 1, R4811 += 1, R4812 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [47, 65535] { R4866 += 1, R4812 += 1, R4768 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4866 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_11 {
  init s0;
  s0 -> s0 [0, 65535] { R4867 += 1, R4868 += 1 };
  s0 -> s1 [0, 65535] { R4868 += 1, R4814 += 1, R4769 += 1, R4770 += 1 };
  s0 -> s2 [0, 65535] { R4868 += 1, R4814 += 1, R4770 += 1, R4754 += 1 };
  s0 -> s3 [0, 65535] { R4868 += 1, R4813 += 1, R4814 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R4868 += 1, R4814 += 1, R4769 += 1, R4770 += 1 };
  s1 -> s2 [0, 65535] { R4868 += 1, R4814 += 1, R4770 += 1, R4754 += 1 };
  s1 -> s5 [0, 65535] { R4868 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4868 += 1, R4814 += 1, R4770 += 1, R4754 += 1 };
  s2 -> s5 [0, 65535] { R4868 += 1 };
  s2 -> s6 [0, 65535] { R4868 += 1, R4814 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R4868 += 1, R4814 += 1, R4769 += 1, R4770 += 1 };
  s3 -> s2 [0, 65535] { R4868 += 1, R4814 += 1, R4770 += 1, R4754 += 1 };
  s3 -> s3 [0, 65535] { R4868 += 1, R4813 += 1, R4814 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4868 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R4868 += 1 };
  s6 -> s6 [0, 65535] { R4868 += 1, R4814 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_12 {
  init s0;
  s0 -> s1 [0, 31] { R4870 += 1, R4816 += 1, R4776 += 1 };
  s0 -> s2 [0, 65535] { R4870 += 1, R4816 += 1, R4775 += 1, R4776 += 1 };
  s0 -> s0 [0, 65535] { R4869 += 1, R4870 += 1 };
  s0 -> s3 [0, 65535] { R4870 += 1, R4815 += 1, R4816 += 1 };
  s0 -> s1 [33, 60] { R4870 += 1, R4816 += 1, R4776 += 1 };
  s0 -> s4 [61, 61] { R4870 += 1, R4816 += 1, R4776 += 1 };
  s0 -> s1 [62, 65535] { R4870 += 1, R4816 += 1, R4776 += 1 };
  s1 -> s1 [0, 31] { R4870 += 1, R4816 += 1, R4776 += 1 };
  s1 -> s1 [33, 60] { R4870 += 1, R4816 += 1, R4776 += 1 };
  s1 -> s4 [61, 61] { R4870 += 1, R4816 += 1, R4776 += 1 };
  s1 -> s1 [62, 65535] { R4870 += 1, R4816 += 1, R4776 += 1 };
  s2 -> s1 [0, 31] { R4870 += 1, R4816 += 1, R4776 += 1 };
  s2 -> s2 [0, 65535] { R4870 += 1, R4816 += 1, R4775 += 1, R4776 += 1 };
  s2 -> s1 [33, 60] { R4870 += 1, R4816 += 1, R4776 += 1 };
  s2 -> s4 [61, 61] { R4870 += 1, R4816 += 1, R4776 += 1 };
  s2 -> s1 [62, 65535] { R4870 += 1, R4816 += 1, R4776 += 1 };
  s3 -> s1 [0, 31] { R4870 += 1, R4816 += 1, R4776 += 1 };
  s3 -> s2 [0, 65535] { R4870 += 1, R4816 += 1, R4775 += 1, R4776 += 1 };
  s3 -> s3 [0, 65535] { R4870 += 1, R4815 += 1, R4816 += 1 };
  s3 -> s1 [33, 60] { R4870 += 1, R4816 += 1, R4776 += 1 };
  s3 -> s4 [61, 61] { R4870 += 1, R4816 += 1, R4776 += 1 };
  s3 -> s1 [62, 65535] { R4870 += 1, R4816 += 1, R4776 += 1 };
  s4 -> s4 [0, 31] { R4870 += 1, R4816 += 1, R4776 += 1 };
  s4 -> s5 [0, 65535] { R4870 += 1 };
  s4 -> s4 [0, 65535] { R4870 += 1, R4816 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [33, 65535] { R4870 += 1, R4816 += 1, R4776 += 1 };
  s5 -> s5 [0, 65535] { R4870 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s4, s5, s6;
};
automaton uri_13 {
  init s0;
  s0 -> s0 [0, 65535] { R4871 += 1, R4872 += 1 };
  s0 -> s1 [0, 65535] { R4872 += 1, R4818 += 1, R4777 += 1, R4778 += 1 };
  s0 -> s2 [0, 65535] { R4872 += 1, R4817 += 1, R4818 += 1 };
  s0 -> s3 [0, 65535] { R4872 += 1, R4818 += 1, R4778 += 1, R2 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R4872 += 1, R4818 += 1, R4777 += 1, R4778 += 1 };
  s1 -> s3 [0, 65535] { R4872 += 1, R4818 += 1, R4778 += 1, R2 += 1 };
  s1 -> s6 [0, 65535] { R4872 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R4872 += 1, R4818 += 1, R4777 += 1, R4778 += 1 };
  s2 -> s2 [0, 65535] { R4872 += 1, R4817 += 1, R4818 += 1 };
  s2 -> s3 [0, 65535] { R4872 += 1, R4818 += 1, R4778 += 1, R2 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R4872 += 1, R4818 += 1 };
  s3 -> s3 [0, 65535] { R4872 += 1, R4818 += 1, R4778 += 1, R2 += 1 };
  s3 -> s6 [0, 65535] { R4872 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4872 += 1, R4818 += 1 };
  s5 -> s6 [0, 65535] { R4872 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R4872 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 58] { R4874 += 1, R4820 += 1, R4780 += 1, R12 += 1 };
  s0 -> s2 [0, 65535] { R4874 += 1, R4820 += 1, R4779 += 1, R4780 += 1 };
  s0 -> s3 [0, 65535] { R4874 += 1, R4820 += 1, R4780 += 1, R11 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R4873 += 1, R4874 += 1 };
  s0 -> s4 [0, 65535] { R4874 += 1, R4819 += 1, R4820 += 1 };
  s0 -> s5 [59, 59] { R4874 += 1, R4820 += 1, R4780 += 1 };
  s0 -> s1 [60, 65535] { R4874 += 1, R4820 += 1, R4780 += 1, R12 += 1 };
  s1 -> s1 [0, 58] { R4874 += 1, R4820 += 1, R4780 += 1, R12 += 1 };
  s1 -> s5 [59, 59] { R4874 += 1, R4820 += 1, R4780 += 1 };
  s1 -> s1 [60, 65535] { R4874 += 1, R4820 += 1, R4780 += 1, R12 += 1 };
  s2 -> s1 [0, 58] { R4874 += 1, R4820 += 1, R4780 += 1, R12 += 1 };
  s2 -> s2 [0, 65535] { R4874 += 1, R4820 += 1, R4779 += 1, R4780 += 1 };
  s2 -> s3 [0, 65535] { R4874 += 1, R4820 += 1, R4780 += 1, R11 += 1, R12 += 1 };
  s2 -> s5 [59, 59] { R4874 += 1, R4820 += 1, R4780 += 1 };
  s2 -> s1 [60, 65535] { R4874 += 1, R4820 += 1, R4780 += 1, R12 += 1 };
  s3 -> s1 [0, 58] { R4874 += 1, R4820 += 1, R4780 += 1, R12 += 1 };
  s3 -> s3 [0, 65535] { R4874 += 1, R4820 += 1, R4780 += 1, R11 += 1, R12 += 1 };
  s3 -> s5 [59, 59] { R4874 += 1, R4820 += 1, R4780 += 1 };
  s3 -> s1 [60, 65535] { R4874 += 1, R4820 += 1, R4780 += 1, R12 += 1 };
  s4 -> s1 [0, 58] { R4874 += 1, R4820 += 1, R4780 += 1, R12 += 1 };
  s4 -> s2 [0, 65535] { R4874 += 1, R4820 += 1, R4779 += 1, R4780 += 1 };
  s4 -> s3 [0, 65535] { R4874 += 1, R4820 += 1, R4780 += 1, R11 += 1, R12 += 1 };
  s4 -> s4 [0, 65535] { R4874 += 1, R4819 += 1, R4820 += 1 };
  s4 -> s5 [59, 59] { R4874 += 1, R4820 += 1, R4780 += 1 };
  s4 -> s1 [60, 65535] { R4874 += 1, R4820 += 1, R4780 += 1, R12 += 1 };
  s5 -> s6 [0, 65535] { R4874 += 1, R4820 += 1 };
  s5 -> s5 [0, 65535] { R4874 += 1, R4820 += 1, R4780 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R4874 += 1 };
  s6 -> s6 [0, 65535] { R4874 += 1, R4820 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R4874 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R4874 += 1 };
  accepting s5, s6, s7, s8;
};
automaton uri_15 {
  init s0;
  s0 -> s1 [0, 37] { R4876 += 1, R4822 += 1, R4782 += 1, R2460 += 1 };
  s0 -> s2 [0, 65535] { R4876 += 1, R4822 += 1, R4781 += 1, R4782 += 1 };
  s0 -> s3 [0, 65535] { R4876 += 1, R4822 += 1, R4782 += 1, R2459 += 1, R2460 += 1 };
  s0 -> s0 [0, 65535] { R4875 += 1, R4876 += 1 };
  s0 -> s4 [0, 65535] { R4876 += 1, R4821 += 1, R4822 += 1 };
  s0 -> s5 [38, 38] { R4876 += 1, R4822 += 1, R4782 += 1 };
  s0 -> s1 [39, 65535] { R4876 += 1, R4822 += 1, R4782 += 1, R2460 += 1 };
  s1 -> s1 [0, 37] { R4876 += 1, R4822 += 1, R4782 += 1, R2460 += 1 };
  s1 -> s5 [38, 38] { R4876 += 1, R4822 += 1, R4782 += 1 };
  s1 -> s1 [39, 65535] { R4876 += 1, R4822 += 1, R4782 += 1, R2460 += 1 };
  s2 -> s1 [0, 37] { R4876 += 1, R4822 += 1, R4782 += 1, R2460 += 1 };
  s2 -> s2 [0, 65535] { R4876 += 1, R4822 += 1, R4781 += 1, R4782 += 1 };
  s2 -> s3 [0, 65535] { R4876 += 1, R4822 += 1, R4782 += 1, R2459 += 1, R2460 += 1 };
  s2 -> s5 [38, 38] { R4876 += 1, R4822 += 1, R4782 += 1 };
  s2 -> s1 [39, 65535] { R4876 += 1, R4822 += 1, R4782 += 1, R2460 += 1 };
  s3 -> s1 [0, 37] { R4876 += 1, R4822 += 1, R4782 += 1, R2460 += 1 };
  s3 -> s3 [0, 65535] { R4876 += 1, R4822 += 1, R4782 += 1, R2459 += 1, R2460 += 1 };
  s3 -> s5 [38, 38] { R4876 += 1, R4822 += 1, R4782 += 1 };
  s3 -> s1 [39, 65535] { R4876 += 1, R4822 += 1, R4782 += 1, R2460 += 1 };
  s4 -> s1 [0, 37] { R4876 += 1, R4822 += 1, R4782 += 1, R2460 += 1 };
  s4 -> s2 [0, 65535] { R4876 += 1, R4822 += 1, R4781 += 1, R4782 += 1 };
  s4 -> s3 [0, 65535] { R4876 += 1, R4822 += 1, R4782 += 1, R2459 += 1, R2460 += 1 };
  s4 -> s4 [0, 65535] { R4876 += 1, R4821 += 1, R4822 += 1 };
  s4 -> s5 [38, 38] { R4876 += 1, R4822 += 1, R4782 += 1 };
  s4 -> s1 [39, 65535] { R4876 += 1, R4822 += 1, R4782 += 1, R2460 += 1 };
  s5 -> s6 [0, 65535] { R4876 += 1 };
  s5 -> s7 [0, 65535] { R4876 += 1, R4822 += 1 };
  s5 -> s5 [0, 65535] { R4876 += 1, R4822 += 1, R4782 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R4876 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s6 [0, 65535] { R4876 += 1 };
  s7 -> s7 [0, 65535] { R4876 += 1, R4822 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 60] { R4878 += 1, R4824 += 1, R4784 += 1, R3684 += 1 };
  s0 -> s0 [0, 65535] { R4877 += 1, R4878 += 1 };
  s0 -> s2 [0, 65535] { R4878 += 1, R4824 += 1, R4784 += 1, R3683 += 1, R3684 += 1 };
  s0 -> s3 [0, 65535] { R4878 += 1, R4824 += 1, R4783 += 1, R4784 += 1 };
  s0 -> s4 [0, 65535] { R4878 += 1, R4823 += 1, R4824 += 1 };
  s0 -> s5 [61, 61] { R4878 += 1, R4824 += 1, R4784 += 1 };
  s0 -> s1 [62, 65535] { R4878 += 1, R4824 += 1, R4784 += 1, R3684 += 1 };
  s1 -> s1 [0, 60] { R4878 += 1, R4824 += 1, R4784 += 1, R3684 += 1 };
  s1 -> s5 [61, 61] { R4878 += 1, R4824 += 1, R4784 += 1 };
  s1 -> s1 [62, 65535] { R4878 += 1, R4824 += 1, R4784 += 1, R3684 += 1 };
  s2 -> s1 [0, 60] { R4878 += 1, R4824 += 1, R4784 += 1, R3684 += 1 };
  s2 -> s2 [0, 65535] { R4878 += 1, R4824 += 1, R4784 += 1, R3683 += 1, R3684 += 1 };
  s2 -> s5 [61, 61] { R4878 += 1, R4824 += 1, R4784 += 1 };
  s2 -> s1 [62, 65535] { R4878 += 1, R4824 += 1, R4784 += 1, R3684 += 1 };
  s3 -> s1 [0, 60] { R4878 += 1, R4824 += 1, R4784 += 1, R3684 += 1 };
  s3 -> s2 [0, 65535] { R4878 += 1, R4824 += 1, R4784 += 1, R3683 += 1, R3684 += 1 };
  s3 -> s3 [0, 65535] { R4878 += 1, R4824 += 1, R4783 += 1, R4784 += 1 };
  s3 -> s5 [61, 61] { R4878 += 1, R4824 += 1, R4784 += 1 };
  s3 -> s1 [62, 65535] { R4878 += 1, R4824 += 1, R4784 += 1, R3684 += 1 };
  s4 -> s1 [0, 60] { R4878 += 1, R4824 += 1, R4784 += 1, R3684 += 1 };
  s4 -> s2 [0, 65535] { R4878 += 1, R4824 += 1, R4784 += 1, R3683 += 1, R3684 += 1 };
  s4 -> s3 [0, 65535] { R4878 += 1, R4824 += 1, R4783 += 1, R4784 += 1 };
  s4 -> s4 [0, 65535] { R4878 += 1, R4823 += 1, R4824 += 1 };
  s4 -> s5 [61, 61] { R4878 += 1, R4824 += 1, R4784 += 1 };
  s4 -> s1 [62, 65535] { R4878 += 1, R4824 += 1, R4784 += 1, R3684 += 1 };
  s5 -> s6 [0, 65535] { R4878 += 1, R4824 += 1 };
  s5 -> s7 [0, 65535] { R4878 += 1 };
  s5 -> s5 [0, 65535] { R4878 += 1, R4824 += 1, R4784 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R4878 += 1, R4824 += 1 };
  s6 -> s7 [0, 65535] { R4878 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R4878 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton uri_17 {
  init s0;
  s0 -> s1 [0, 65535] { R4880 += 1, R4825 += 1, R4826 += 1 };
  s0 -> s2 [0, 65535] { R4880 += 1, R4826 += 1, R4785 += 1, R4786 += 1 };
  s0 -> s3 [0, 65535] { R4880 += 1, R4826 += 1, R4786 += 1 };
  s0 -> s0 [0, 65535] { R4879 += 1, R4880 += 1 };
  s1 -> s1 [0, 65535] { R4880 += 1, R4825 += 1, R4826 += 1 };
  s1 -> s2 [0, 65535] { R4880 += 1, R4826 += 1, R4785 += 1, R4786 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s3 [0, 65535] { R4880 += 1, R4826 += 1, R4786 += 1 };
  s2 -> s2 [0, 65535] { R4880 += 1, R4826 += 1, R4785 += 1, R4786 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R4880 += 1 };
  s2 -> s3 [0, 65535] { R4880 += 1, R4826 += 1, R4786 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R4880 += 1 };
  s3 -> s6 [0, 65535] { R4880 += 1, R4826 += 1 };
  s3 -> s3 [0, 65535] { R4880 += 1, R4826 += 1, R4786 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4880 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R4880 += 1 };
  s6 -> s6 [0, 65535] { R4880 += 1, R4826 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 64] { R4882 += 1, R4828 += 1, R4788 += 1, R4764 += 1 };
  s0 -> s2 [0, 65535] { R4882 += 1, R4828 += 1, R4787 += 1, R4788 += 1 };
  s0 -> s3 [0, 65535] { R4882 += 1, R4828 += 1, R4788 += 1, R4763 += 1, R4764 += 1 };
  s0 -> s4 [0, 65535] { R4882 += 1, R4827 += 1, R4828 += 1 };
  s0 -> s0 [0, 65535] { R4881 += 1, R4882 += 1 };
  s0 -> s5 [81, 81] { R4882 += 1, R4828 += 1, R4788 += 1, R4764 += 1 };
  s0 -> s1 [82, 65535] { R4882 += 1, R4828 += 1, R4788 += 1, R4764 += 1 };
  s1 -> s1 [0, 64] { R4882 += 1, R4828 += 1, R4788 += 1, R4764 += 1 };
  s1 -> s5 [81, 81] { R4882 += 1, R4828 += 1, R4788 += 1, R4764 += 1 };
  s1 -> s1 [82, 65535] { R4882 += 1, R4828 += 1, R4788 += 1, R4764 += 1 };
  s2 -> s1 [0, 64] { R4882 += 1, R4828 += 1, R4788 += 1, R4764 += 1 };
  s2 -> s2 [0, 65535] { R4882 += 1, R4828 += 1, R4787 += 1, R4788 += 1 };
  s2 -> s3 [0, 65535] { R4882 += 1, R4828 += 1, R4788 += 1, R4763 += 1, R4764 += 1 };
  s2 -> s5 [81, 81] { R4882 += 1, R4828 += 1, R4788 += 1, R4764 += 1 };
  s2 -> s1 [82, 65535] { R4882 += 1, R4828 += 1, R4788 += 1, R4764 += 1 };
  s3 -> s1 [0, 64] { R4882 += 1, R4828 += 1, R4788 += 1, R4764 += 1 };
  s3 -> s3 [0, 65535] { R4882 += 1, R4828 += 1, R4788 += 1, R4763 += 1, R4764 += 1 };
  s3 -> s5 [81, 81] { R4882 += 1, R4828 += 1, R4788 += 1, R4764 += 1 };
  s3 -> s1 [82, 65535] { R4882 += 1, R4828 += 1, R4788 += 1, R4764 += 1 };
  s4 -> s1 [0, 64] { R4882 += 1, R4828 += 1, R4788 += 1, R4764 += 1 };
  s4 -> s2 [0, 65535] { R4882 += 1, R4828 += 1, R4787 += 1, R4788 += 1 };
  s4 -> s3 [0, 65535] { R4882 += 1, R4828 += 1, R4788 += 1, R4763 += 1, R4764 += 1 };
  s4 -> s4 [0, 65535] { R4882 += 1, R4827 += 1, R4828 += 1 };
  s4 -> s5 [81, 81] { R4882 += 1, R4828 += 1, R4788 += 1, R4764 += 1 };
  s4 -> s1 [82, 65535] { R4882 += 1, R4828 += 1, R4788 += 1, R4764 += 1 };
  s5 -> s5 [0, 64] { R4882 += 1, R4828 += 1, R4788 += 1, R4764 += 1 };
  s5 -> s5 [0, 65535] { R4882 += 1, R4828 += 1, R4788 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R4882 += 1 };
  s5 -> s8 [0, 65535] { R4882 += 1, R4828 += 1 };
  s5 -> s5 [81, 65535] { R4882 += 1, R4828 += 1, R4788 += 1, R4764 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4882 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R4882 += 1 };
  s8 -> s8 [0, 65535] { R4882 += 1, R4828 += 1 };
  accepting s5, s6, s7, s8;
};
automaton uri_19 {
  init s0;
  s0 -> s1 [0, 65535] { R4884 += 1, R4830 += 1, R4790 += 1, R4765 += 1, R4766 += 1 };
  s0 -> s0 [0, 65535] { R4883 += 1, R4884 += 1 };
  s0 -> s2 [0, 65535] { R4884 += 1, R4830 += 1, R4789 += 1, R4790 += 1 };
  s0 -> s3 [0, 65535] { R4884 += 1, R4829 += 1, R4830 += 1 };
  s0 -> s4 [0, 65535] { R4884 += 1, R4830 += 1, R4790 += 1, R4766 += 1, R4753 += 1 };
  s1 -> s5 [0, 65535] { R4884 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R4884 += 1, R4830 += 1, R4790 += 1, R4765 += 1, R4766 += 1 };
  s1 -> s8 [0, 65535] { R4884 += 1, R4830 += 1 };
  s1 -> s4 [0, 65535] { R4884 += 1, R4830 += 1, R4790 += 1, R4766 += 1, R4753 += 1 };
  s2 -> s5 [0, 65535] { R4884 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [0, 65535] { R4884 += 1, R4830 += 1, R4790 += 1, R4765 += 1, R4766 += 1 };
  s2 -> s2 [0, 65535] { R4884 += 1, R4830 += 1, R4789 += 1, R4790 += 1 };
  s2 -> s4 [0, 65535] { R4884 += 1, R4830 += 1, R4790 += 1, R4766 += 1, R4753 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [0, 65535] { R4884 += 1, R4830 += 1, R4790 += 1, R4765 += 1, R4766 += 1 };
  s3 -> s2 [0, 65535] { R4884 += 1, R4830 += 1, R4789 += 1, R4790 += 1 };
  s3 -> s3 [0, 65535] { R4884 += 1, R4829 += 1, R4830 += 1 };
  s3 -> s4 [0, 65535] { R4884 += 1, R4830 += 1, R4790 += 1, R4766 += 1, R4753 += 1 };
  s4 -> s5 [0, 65535] { R4884 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R4884 += 1, R4830 += 1, R4790 += 1 };
  s4 -> s8 [0, 65535] { R4884 += 1, R4830 += 1 };
  s4 -> s4 [0, 65535] { R4884 += 1, R4830 += 1, R4790 += 1, R4766 += 1, R4753 += 1 };
  s5 -> s5 [0, 65535] { R4884 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R4884 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4884 += 1, R4830 += 1, R4790 += 1 };
  s7 -> s8 [0, 65535] { R4884 += 1, R4830 += 1 };
  s8 -> s5 [0, 65535] { R4884 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R4884 += 1, R4830 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 63] { R4886 += 1, R4832 += 1 };
  s0 -> s0 [0, 65535] { R4885 += 1, R4886 += 1 };
  s0 -> s2 [0, 65535] { R4886 += 1, R4831 += 1, R4832 += 1 };
  s0 -> s3 [64, 64] { R4886 += 1, R4832 += 1 };
  s0 -> s1 [65, 65535] { R4886 += 1, R4832 += 1 };
  s1 -> s1 [0, 63] { R4886 += 1, R4832 += 1 };
  s1 -> s3 [64, 64] { R4886 += 1, R4832 += 1 };
  s1 -> s1 [65, 65535] { R4886 += 1, R4832 += 1 };
  s2 -> s1 [0, 63] { R4886 += 1, R4832 += 1 };
  s2 -> s2 [0, 65535] { R4886 += 1, R4831 += 1, R4832 += 1 };
  s2 -> s3 [64, 64] { R4886 += 1, R4832 += 1 };
  s2 -> s1 [65, 65535] { R4886 += 1, R4832 += 1 };
  s3 -> s4 [0, 65535] { R4886 += 1 };
  s3 -> s3 [0, 65535] { R4886 += 1, R4832 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4886 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5;
};
automaton uri_21 {
  init s0;
  s0 -> s0 [0, 65535] { R4887 += 1, R4888 += 1 };
  s0 -> s1 [0, 65535] { R4888 += 1, R4834 += 1, R4 += 1 };
  s0 -> s2 [0, 65535] { R4888 += 1, R4833 += 1, R4834 += 1 };
  s1 -> s1 [0, 65535] { R4888 += 1, R4834 += 1, R4 += 1 };
  s1 -> s4 [0, 65535] { R4888 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4888 += 1, R4834 += 1, R4 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4888 += 1, R4833 += 1, R4834 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4888 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_22 {
  init s0;
  s0 -> s1 [0, 36] { R4890 += 1, R4836 += 1, R4772 += 1 };
  s0 -> s2 [0, 65535] { R4890 += 1, R4836 += 1, R4771 += 1, R4772 += 1 };
  s0 -> s3 [0, 65535] { R4890 += 1, R4835 += 1, R4836 += 1 };
  s0 -> s0 [0, 65535] { R4889 += 1, R4890 += 1 };
  s0 -> s1 [38, 42] { R4890 += 1, R4836 += 1, R4772 += 1 };
  s0 -> s1 [44, 57] { R4890 += 1, R4836 += 1, R4772 += 1 };
  s0 -> s1 [59, 63] { R4890 += 1, R4836 += 1, R4772 += 1 };
  s0 -> s1 [65, 65535] { R4890 += 1, R4836 += 1, R4772 += 1 };
  s1 -> s1 [0, 36] { R4890 += 1, R4836 += 1, R4772 += 1 };
  s1 -> s5 [0, 65535] { R4890 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R4890 += 1, R4836 += 1 };
  s1 -> s1 [38, 42] { R4890 += 1, R4836 += 1, R4772 += 1 };
  s1 -> s1 [44, 57] { R4890 += 1, R4836 += 1, R4772 += 1 };
  s1 -> s1 [59, 63] { R4890 += 1, R4836 += 1, R4772 += 1 };
  s1 -> s1 [65, 65535] { R4890 += 1, R4836 += 1, R4772 += 1 };
  s2 -> s1 [0, 36] { R4890 += 1, R4836 += 1, R4772 += 1 };
  s2 -> s5 [0, 65535] { R4890 += 1 };
  s2 -> s2 [0, 65535] { R4890 += 1, R4836 += 1, R4771 += 1, R4772 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [38, 42] { R4890 += 1, R4836 += 1, R4772 += 1 };
  s2 -> s1 [44, 57] { R4890 += 1, R4836 += 1, R4772 += 1 };
  s2 -> s1 [59, 63] { R4890 += 1, R4836 += 1, R4772 += 1 };
  s2 -> s1 [65, 65535] { R4890 += 1, R4836 += 1, R4772 += 1 };
  s3 -> s1 [0, 36] { R4890 += 1, R4836 += 1, R4772 += 1 };
  s3 -> s2 [0, 65535] { R4890 += 1, R4836 += 1, R4771 += 1, R4772 += 1 };
  s3 -> s3 [0, 65535] { R4890 += 1, R4835 += 1, R4836 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [38, 42] { R4890 += 1, R4836 += 1, R4772 += 1 };
  s3 -> s1 [44, 57] { R4890 += 1, R4836 += 1, R4772 += 1 };
  s3 -> s1 [59, 63] { R4890 += 1, R4836 += 1, R4772 += 1 };
  s3 -> s1 [65, 65535] { R4890 += 1, R4836 += 1, R4772 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4890 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_23 {
  init s0;
  s0 -> s1 [0, 65535] { R4892 += 1, R4838 += 1, R4773 += 1, R4774 += 1 };
  s0 -> s2 [0, 65535] { R4892 += 1, R4838 += 1, R4774 += 1, R1 += 1 };
  s0 -> s0 [0, 65535] { R4891 += 1, R4892 += 1 };
  s0 -> s3 [0, 65535] { R4892 += 1, R4837 += 1, R4838 += 1 };
  s1 -> s1 [0, 65535] { R4892 += 1, R4838 += 1, R4773 += 1, R4774 += 1 };
  s1 -> s2 [0, 65535] { R4892 += 1, R4838 += 1, R4774 += 1, R1 += 1 };
  s1 -> s5 [0, 65535] { R4892 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4892 += 1, R4838 += 1, R4774 += 1, R1 += 1 };
  s2 -> s5 [0, 65535] { R4892 += 1 };
  s2 -> s6 [0, 65535] { R4892 += 1, R4838 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R4892 += 1, R4838 += 1, R4773 += 1, R4774 += 1 };
  s3 -> s2 [0, 65535] { R4892 += 1, R4838 += 1, R4774 += 1, R1 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4892 += 1, R4837 += 1, R4838 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4892 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R4892 += 1 };
  s6 -> s6 [0, 65535] { R4892 += 1, R4838 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_24 {
  init s0;
  s0 -> s1 [0, 43] { R4894 += 1, R4840 += 1, R4792 += 1 };
  s0 -> s0 [0, 65535] { R4893 += 1, R4894 += 1 };
  s0 -> s2 [0, 65535] { R4894 += 1, R4839 += 1, R4840 += 1 };
  s0 -> s3 [0, 65535] { R4894 += 1, R4840 += 1, R4791 += 1, R4792 += 1 };
  s0 -> s1 [45, 64] { R4894 += 1, R4840 += 1, R4792 += 1 };
  s0 -> s1 [91, 65535] { R4894 += 1, R4840 += 1, R4792 += 1 };
  s1 -> s1 [0, 43] { R4894 += 1, R4840 += 1, R4792 += 1 };
  s1 -> s4 [0, 65535] { R4894 += 1 };
  s1 -> s1 [0, 65535] { R4894 += 1, R4840 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [45, 64] { R4894 += 1, R4840 += 1, R4792 += 1 };
  s1 -> s1 [91, 65535] { R4894 += 1, R4840 += 1, R4792 += 1 };
  s2 -> s1 [0, 43] { R4894 += 1, R4840 += 1, R4792 += 1 };
  s2 -> s2 [0, 65535] { R4894 += 1, R4839 += 1, R4840 += 1 };
  s2 -> s3 [0, 65535] { R4894 += 1, R4840 += 1, R4791 += 1, R4792 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [45, 64] { R4894 += 1, R4840 += 1, R4792 += 1 };
  s2 -> s1 [91, 65535] { R4894 += 1, R4840 += 1, R4792 += 1 };
  s3 -> s1 [0, 43] { R4894 += 1, R4840 += 1, R4792 += 1 };
  s3 -> s4 [0, 65535] { R4894 += 1 };
  s3 -> s3 [0, 65535] { R4894 += 1, R4840 += 1, R4791 += 1, R4792 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [45, 64] { R4894 += 1, R4840 += 1, R4792 += 1 };
  s3 -> s1 [91, 65535] { R4894 += 1, R4840 += 1, R4792 += 1 };
  s4 -> s4 [0, 65535] { R4894 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_25 {
  init s0;
  s0 -> s1 [0, 65535] { R4896 += 1, R4842 += 1, R4794 += 1, R0 += 1 };
  s0 -> s2 [0, 65535] { R4896 += 1, R4842 += 1, R4793 += 1, R4794 += 1 };
  s0 -> s0 [0, 65535] { R4895 += 1, R4896 += 1 };
  s0 -> s3 [0, 65535] { R4896 += 1, R4841 += 1, R4842 += 1 };
  s1 -> s1 [0, 65535] { R4896 += 1, R4842 += 1, R4794 += 1, R0 += 1 };
  s1 -> s5 [0, 65535] { R4896 += 1 };
  s1 -> s6 [0, 65535] { R4896 += 1, R4842 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R4896 += 1, R4842 += 1, R4794 += 1, R0 += 1 };
  s2 -> s5 [0, 65535] { R4896 += 1 };
  s2 -> s2 [0, 65535] { R4896 += 1, R4842 += 1, R4793 += 1, R4794 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R4896 += 1, R4842 += 1, R4794 += 1, R0 += 1 };
  s3 -> s2 [0, 65535] { R4896 += 1, R4842 += 1, R4793 += 1, R4794 += 1 };
  s3 -> s3 [0, 65535] { R4896 += 1, R4841 += 1, R4842 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4896 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R4896 += 1 };
  s6 -> s6 [0, 65535] { R4896 += 1, R4842 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_26 {
  init s0;
  s0 -> s1 [0, 57] { R4898 += 1, R4844 += 1, R4796 += 1 };
  s0 -> s2 [0, 65535] { R4898 += 1, R4844 += 1, R4795 += 1, R4796 += 1 };
  s0 -> s3 [0, 65535] { R4898 += 1, R4843 += 1, R4844 += 1 };
  s0 -> s0 [0, 65535] { R4897 += 1, R4898 += 1 };
  s0 -> s4 [0, 65535] { R4898 += 1, R4844 += 1, R4796 += 1, R9 += 1 };
  s0 -> s5 [58, 58] { R4898 += 1, R4844 += 1, R4796 += 1 };
  s0 -> s1 [59, 65535] { R4898 += 1, R4844 += 1, R4796 += 1 };
  s1 -> s1 [0, 57] { R4898 += 1, R4844 += 1, R4796 += 1 };
  s1 -> s6 [0, 65535] { R4898 += 1 };
  s1 -> s1 [0, 65535] { R4898 += 1, R4844 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s5 [58, 58] { R4898 += 1, R4844 += 1, R4796 += 1 };
  s1 -> s1 [59, 65535] { R4898 += 1, R4844 += 1, R4796 += 1 };
  s2 -> s1 [0, 57] { R4898 += 1, R4844 += 1, R4796 += 1 };
  s2 -> s6 [0, 65535] { R4898 += 1 };
  s2 -> s2 [0, 65535] { R4898 += 1, R4844 += 1, R4795 += 1, R4796 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [0, 65535] { R4898 += 1, R4844 += 1, R4796 += 1, R9 += 1 };
  s2 -> s5 [58, 58] { R4898 += 1, R4844 += 1, R4796 += 1 };
  s2 -> s1 [59, 65535] { R4898 += 1, R4844 += 1, R4796 += 1 };
  s3 -> s1 [0, 57] { R4898 += 1, R4844 += 1, R4796 += 1 };
  s3 -> s2 [0, 65535] { R4898 += 1, R4844 += 1, R4795 += 1, R4796 += 1 };
  s3 -> s3 [0, 65535] { R4898 += 1, R4843 += 1, R4844 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s4 [0, 65535] { R4898 += 1, R4844 += 1, R4796 += 1, R9 += 1 };
  s3 -> s5 [58, 58] { R4898 += 1, R4844 += 1, R4796 += 1 };
  s3 -> s1 [59, 65535] { R4898 += 1, R4844 += 1, R4796 += 1 };
  s4 -> s1 [0, 57] { R4898 += 1, R4844 += 1, R4796 += 1 };
  s4 -> s6 [0, 65535] { R4898 += 1 };
  s4 -> s7 [0, 65535] { R4898 += 1, R4844 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [0, 65535] { R4898 += 1, R4844 += 1, R4796 += 1, R9 += 1 };
  s4 -> s5 [58, 58] { R4898 += 1, R4844 += 1, R4796 += 1 };
  s4 -> s1 [59, 65535] { R4898 += 1, R4844 += 1, R4796 += 1 };
  s5 -> s5 [0, 65535] { R4898 += 1, R4844 += 1, R4796 += 1 };
  s6 -> s6 [0, 65535] { R4898 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s6 [0, 65535] { R4898 += 1 };
  s7 -> s7 [0, 65535] { R4898 += 1, R4844 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s2, s6, s1, s7, s0;
};
automaton uri_27 {
  init s0;
  s0 -> s1 [0, 90] { R4900 += 1, R4846 += 1, R4798 += 1, R4756 += 1 };
  s0 -> s2 [0, 65535] { R4900 += 1, R4846 += 1, R4798 += 1, R4755 += 1, R4756 += 1 };
  s0 -> s3 [0, 65535] { R4900 += 1, R4845 += 1, R4846 += 1 };
  s0 -> s4 [0, 65535] { R4900 += 1, R4846 += 1, R4797 += 1, R4798 += 1 };
  s0 -> s0 [0, 65535] { R4899 += 1, R4900 += 1 };
  s0 -> s5 [91, 91] { R4900 += 1, R4846 += 1, R4798 += 1, R4756 += 1 };
  s0 -> s1 [92, 65535] { R4900 += 1, R4846 += 1, R4798 += 1, R4756 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R4900 += 1, R4846 += 1, R4798 += 1, R4756 += 1 };
  s1 -> s9 [0, 65535] { R4900 += 1, R4846 += 1, R4798 += 1 };
  s1 -> s7 [0, 65535] { R4900 += 1 };
  s1 -> s8 [0, 65535] { R4900 += 1, R4846 += 1 };
  s2 -> s1 [0, 90] { R4900 += 1, R4846 += 1, R4798 += 1, R4756 += 1 };
  s2 -> s2 [0, 65535] { R4900 += 1, R4846 += 1, R4798 += 1, R4755 += 1, R4756 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R4900 += 1 };
  s2 -> s8 [0, 65535] { R4900 += 1, R4846 += 1 };
  s2 -> s5 [91, 91] { R4900 += 1, R4846 += 1, R4798 += 1, R4756 += 1 };
  s2 -> s1 [92, 65535] { R4900 += 1, R4846 += 1, R4798 += 1, R4756 += 1 };
  s3 -> s1 [0, 90] { R4900 += 1, R4846 += 1, R4798 += 1, R4756 += 1 };
  s3 -> s2 [0, 65535] { R4900 += 1, R4846 += 1, R4798 += 1, R4755 += 1, R4756 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R4900 += 1, R4845 += 1, R4846 += 1 };
  s3 -> s4 [0, 65535] { R4900 += 1, R4846 += 1, R4797 += 1, R4798 += 1 };
  s3 -> s5 [91, 91] { R4900 += 1, R4846 += 1, R4798 += 1, R4756 += 1 };
  s3 -> s1 [92, 65535] { R4900 += 1, R4846 += 1, R4798 += 1, R4756 += 1 };
  s4 -> s1 [0, 90] { R4900 += 1, R4846 += 1, R4798 += 1, R4756 += 1 };
  s4 -> s2 [0, 65535] { R4900 += 1, R4846 += 1, R4798 += 1, R4755 += 1, R4756 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4900 += 1, R4846 += 1, R4797 += 1, R4798 += 1 };
  s4 -> s7 [0, 65535] { R4900 += 1 };
  s4 -> s5 [91, 91] { R4900 += 1, R4846 += 1, R4798 += 1, R4756 += 1 };
  s4 -> s1 [92, 65535] { R4900 += 1, R4846 += 1, R4798 += 1, R4756 += 1 };
  s5 -> s1 [0, 65535] { R4900 += 1, R4846 += 1, R4798 += 1, R4756 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4900 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R4900 += 1 };
  s8 -> s8 [0, 65535] { R4900 += 1, R4846 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s9 [0, 65535] { R4900 += 1, R4846 += 1, R4798 += 1 };
  s9 -> s7 [0, 65535] { R4900 += 1 };
  s9 -> s8 [0, 65535] { R4900 += 1, R4846 += 1 };
  accepting s3, s4, s8, s2, s9, s6, s1, s7, s0;
};
automaton uri_28 {
  init s0;
  s0 -> s1 [0, 65535] { R4902 += 1, R4847 += 1, R4848 += 1 };
  s0 -> s2 [0, 65535] { R4902 += 1, R4848 += 1, R4799 += 1, R4800 += 1 };
  s0 -> s3 [0, 65535] { R4902 += 1, R4848 += 1, R4800 += 1, R4758 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R4901 += 1, R4902 += 1 };
  s0 -> s4 [0, 65535] { R4902 += 1, R4848 += 1, R4800 += 1, R4757 += 1, R4758 += 1 };
  s1 -> s1 [0, 65535] { R4902 += 1, R4847 += 1, R4848 += 1 };
  s1 -> s2 [0, 65535] { R4902 += 1, R4848 += 1, R4799 += 1, R4800 += 1 };
  s1 -> s3 [0, 65535] { R4902 += 1, R4848 += 1, R4800 += 1, R4758 += 1, R7 += 1 };
  s1 -> s4 [0, 65535] { R4902 += 1, R4848 += 1, R4800 += 1, R4757 += 1, R4758 += 1 };
  s1 -> s7 [0, 65535];
  s2 -> s2 [0, 65535] { R4902 += 1, R4848 += 1, R4799 += 1, R4800 += 1 };
  s2 -> s3 [0, 65535] { R4902 += 1, R4848 += 1, R4800 += 1, R4758 += 1, R7 += 1 };
  s2 -> s4 [0, 65535] { R4902 += 1, R4848 += 1, R4800 += 1, R4757 += 1, R4758 += 1 };
  s2 -> s6 [0, 65535] { R4902 += 1 };
  s2 -> s7 [0, 65535];
  s3 -> s8 [0, 65535] { R4902 += 1, R4848 += 1, R4800 += 1 };
  s3 -> s5 [0, 65535] { R4902 += 1, R4848 += 1 };
  s3 -> s3 [0, 65535] { R4902 += 1, R4848 += 1, R4800 += 1, R4758 += 1, R7 += 1 };
  s3 -> s6 [0, 65535] { R4902 += 1 };
  s3 -> s7 [0, 65535];
  s4 -> s5 [0, 65535] { R4902 += 1, R4848 += 1 };
  s4 -> s3 [0, 65535] { R4902 += 1, R4848 += 1, R4800 += 1, R4758 += 1, R7 += 1 };
  s4 -> s4 [0, 65535] { R4902 += 1, R4848 += 1, R4800 += 1, R4757 += 1, R4758 += 1 };
  s4 -> s6 [0, 65535] { R4902 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R4902 += 1, R4848 += 1 };
  s5 -> s6 [0, 65535] { R4902 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R4902 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R4902 += 1, R4848 += 1, R4800 += 1 };
  s8 -> s5 [0, 65535] { R4902 += 1, R4848 += 1 };
  s8 -> s6 [0, 65535] { R4902 += 1 };
  s8 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
};
constraint R2 - R4764 = 1 && R3 = R4790 && R4 = R4800 && R5 = R4830 && R6 = R4902 && R11 = 0 && R2459 = 0 && R3683 = 0 && R3684 = R4764 && R4295 = 0 && R4296 - R4789 = -1 && R4601 = 0 && R4602 = R4848 && R4759 = 0 && R4760 = 1 && R4761 = 0 && R4762 = 1 && R4763 = 0 && R4771 = 0 && R4772 = 1 && R4773 = 0 && R4774 = 1 && R4775 = R4789 && R4776 = R4790 && R4777 = R4789 && R4778 = R4790 && R4779 = R4789 && R4780 = R4790 && R4781 = R4789 && R4782 = R4790 && R4783 = R4789 && R4784 = R4790 && R4785 = R4789 && R4786 = R4790 && R4787 = R4789 && R4788 = R4790 && R4791 = 2 && R4792 = R4800 && R4793 = 2 && R4794 = R4800 && R4795 = 2 && R4796 = R4800 && R4797 = 2 && R4798 = R4800 && R4799 = 2 && R4801 - R4848 = 1 && R4802 = R4830 && R4803 - R4848 = 1 && R4804 = R4830 && R4805 - R4848 = 1 && R4806 = R4830 && R4807 - R4848 = 1 && R4808 = R4830 && R4809 - R4848 = 1 && R4810 = R4830 && R4811 - R4848 = 1 && R4812 = R4830 && R4813 - R4848 = 1 && R4814 = R4830 && R4815 - R4848 = 1 && R4816 = R4830 && R4817 - R4848 = 1 && R4818 = R4830 && R4819 - R4848 = 1 && R4820 = R4830 && R4821 - R4848 = 1 && R4822 = R4830 && R4823 - R4848 = 1 && R4824 = R4830 && R4825 - R4848 = 1 && R4826 = R4830 && R4827 - R4848 = 1 && R4828 = R4830 && R4829 - R4848 = 1 && R4831 = 0 && R4832 = R4848 && R4833 = 0 && R4834 = R4848 && R4835 = 0 && R4836 = R4848 && R4837 = 0 && R4838 = R4848 && R4839 = 0 && R4840 = R4848 && R4841 = 0 && R4842 = R4848 && R4843 = 0 && R4844 = R4848 && R4845 = 0 && R4846 = R4848 && R4847 = 0 && R4849 = 10 && R4850 = R4902 && R4851 = 10 && R4852 = R4902 && R4853 = 10 && R4854 = R4902 && R4855 = 10 && R4856 = R4902 && R4857 = 10 && R4858 = R4902 && R4859 = 10 && R4860 = R4902 && R4861 = 10 && R4862 = R4902 && R4863 = 10 && R4864 = R4902 && R4865 = 10 && R4866 = R4902 && R4867 = 10 && R4868 = R4902 && R4869 = 10 && R4870 = R4902 && R4871 = 10 && R4872 = R4902 && R4873 = 10 && R4874 = R4902 && R4875 = 10 && R4876 = R4902 && R4877 = 10 && R4878 = R4902 && R4879 = 10 && R4880 = R4902 && R4881 = 10 && R4882 = R4902 && R4883 = 10 && R4884 = R4902 && R4885 = 10 && R4886 = R4902 && R4887 = 10 && R4888 = R4902 && R4889 = 10 && R4890 = R4902 && R4891 = 10 && R4892 = R4902 && R4893 = 10 && R4894 = R4902 && R4895 = 10 && R4896 = R4902 && R4897 = 10 && R4898 = R4902 && R4899 = 10 && R4900 = R4902 && R4901 = 10 && R0 != 0 && R1 != 0 && R9 < 1 && R12 < 0 && R2460 < 0 && -1 < R4764 && R4789 - R4790 < 1 && 0 < R4789 && 1 < R4800 && R4848 < R4830 && -1 < R4848 && 9 < R4902 && (R4755 != 0 || ((R7 != 0 || ((R0 != R4756 || R4756 = 1 || R4756 < 0) && (R0 = R4756 || R4756 = 1 || R0 < 1))) && (R7 = 0 || ((R0 != R4756 || R4756 = 1 || R4756 < 0) && (R4756 != 1 || -1 < R0) && (R0 = R4756 || R4756 = 1))))) && (R4757 != 0 || ((R7 != 0 || ((R0 != R4758 || R4758 = 1 || R4758 < 0) && (R0 = R4758 || R4758 = 1 || R0 < 1))) && (R7 = 0 || ((R0 != R4758 || R4758 = 1 || R4758 < 0) && (R4758 != 1 || -1 < R0) && (R0 = R4758 || R4758 = 1))))) && (R4765 != 0 || R4764 = R4766 || (R4753 = 0 && R4764 = 0)) && (R4767 != 0 || R4768 - R4789 = -1 || (R4754 = 0 && R4789 = 1)) && (R4769 != 0 || R4770 - R4789 = -1 || (R4754 = 0 && R4789 = 1)) && (R4755 = 0 || (R7 = 0 && R0 < 0)) && (R4757 = 0 || (R7 = 0 && R0 < 0)) && (R4765 = 0 || (R4753 = 0 && R4764 = 0)) && (R4767 = 0 || (R4754 = 0 && R4789 = 1)) && (R4769 = 0 || (R4754 = 0 && R4789 = 1));
// End of Parikh automata intersection problem
