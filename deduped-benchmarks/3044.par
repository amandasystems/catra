// Parikh automata intersection problem, generated by OSTRICH+
counter int R1330, R1331, R1332, R1333, R1334, R1335, R1336, R1337, R1338, R1339, R1340, R1341, R1342, R1343, R1344, R1345, R1346, R1347, R1348, R1349, R1350, R1351, R1352, R1353, R1354, R1355, R1356, R1357, R1358, R1359, R1360, R1361, R1362, R1363, R1364, R1365, R1366, R1367, R1368, R1369, R1370, R1371, R1372, R1373, R1374, R1375, R1376, R1377, R1378, R1379, R1380, R1381, R1382, R1383, R1384, R1385, R1386, R1387, R1388, R1389, R1390, R1391, R1392, R1393, R1394, R1395, R1396, R1397, R1398, R1399, R1400, R1401, R1402, R1403, R1404, R1405, R1406, R1407, R1408, R1409, R1410, R1411, R1412, R1413, R1414, R1415, R1416, R1417, R1418, R1419, R1420, R1421, R1422, R1423, R1424, R1425, R1426, R1427, R1428, R1429, R1430, R1431, R1432, R1433, R1434, R1435, R1436, R1437, R1438, R1439, R1440, R1441, R1442, R1443, R1444, R1445, R1446, R1447, R1448, R1449, R1450, R1451, R1452, R1453, R1454, R1455, R1456, R1457, R1458, R1459, R1460, R1461, R1462, R1463, R1464, R1465, R1466, R1467, R1468, R1469, R1470, R1471, R1472, R1473, R1474, R1475, R1476, R1477, R1478, R1479, R1480, R1481, R1482, R1483, R1484, R1485, R1486, R1487, R1488, R1489, R1490, R1491, R1492, R1493, R1494, R1495, R1496, R1497, R1498, R1499, R18, R21, R26, R27, R28, R29, R3, R30, R31, R3192, R3193, R3194, R3195, R3196, R3197, R3198, R3199, R32, R3200, R3201, R3202, R3203, R33, R34, R35, R36, R37, R38, R39, R3924, R3925, R3926, R3927, R3928, R3929, R3930, R3931, R3932, R3933, R3934, R3935, R3936, R3937, R3938, R3939, R3940, R3941, R3942, R3943, R3944, R3945, R3946, R3947, R3948, R3949, R3950, R3951, R3952, R3953, R3954, R3955, R3956, R3957, R3958, R3959, R3960, R3961, R3962, R3963, R3964, R3965, R3966, R3967, R3968, R3969, R3970, R3971, R3972, R3973, R3974, R3975, R3976, R3977, R3978, R3979, R3980, R3981, R3982, R3983, R3984, R3985, R3986, R3987, R3988, R3989, R3990, R3991, R3992, R3993, R3994, R3995, R3996, R3997, R3998, R3999, R4, R40, R4000, R4001, R4002, R4003, R4004, R4005, R4006, R4007, R4008, R4009, R4010, R4011, R4012, R4013, R4014, R4015, R4016, R4017, R4018, R4019, R4020, R4021, R4022, R4023, R4024, R4025, R4026, R4027, R4028, R4029, R4030, R4031, R4032, R4033, R4034, R4035, R4036, R4037, R4038, R4039, R4040, R4041, R4042, R4043, R4044, R4045, R4046, R4047, R4048, R4049, R4050, R4051, R4052, R4053, R4054, R4055, R4056, R4057, R4058, R4059, R4060, R4061, R4062, R4063, R4064, R4065, R4066, R4067, R4068, R4069, R4070, R4071, R4072, R4073, R4074, R4075, R4076, R4077, R4078, R4079, R4080, R4081, R4082, R4083, R4084, R4085, R4086, R4087, R4088, R4089, R4090, R4091, R4092, R4093, R4094, R4095, R4096, R4097, R4098, R4099, R41, R4100, R4101, R4102, R4103, R4104, R4105, R4106, R4107, R4108, R4109, R4110, R4111, R4112, R4113, R4114, R4115, R4116, R4117, R4118, R4119, R4120, R4121, R4122, R4123, R4124, R4125, R4126, R4127, R4128, R4129, R4130, R4131, R4132, R4133, R4134, R4135, R4136, R4137, R4138, R4139, R4140, R4141, R4142, R4143, R4144, R4145, R4146, R4147, R4148, R4149, R4150, R4151, R4152, R4153, R4154, R4155, R4156, R4157, R4158, R4159, R4160, R4161, R4162, R4163, R42, R43, R5, R6, R7, R8;
synchronised {  // Automata constraining P6
automaton P6_0 {
  init s0;
  s0 -> s1 [99, 99];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R4 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R21 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R36 += 1, R37 += 1 };
  s0 -> s1 [32, 32] { R37 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 65535] { R39 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R38 += 1, R39 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R39 += 1, R7 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R41 += 1 };
  s0 -> s0 [0, 65535] { R40 += 1, R41 += 1 };
  s0 -> s2 [9, 13] { R41 += 1 };
  s0 -> s1 [14, 31] { R41 += 1 };
  s0 -> s2 [32, 32] { R41 += 1 };
  s0 -> s1 [33, 65535] { R41 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R41 += 1 };
  s2 -> s1 [0, 65535] { R41 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 65535] { R43 += 1, R8 += 1 };
  s0 -> s0 [0, 65535] { R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535] { R43 += 1, R8 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R4045 += 1 };
  s0 -> s0 [0, 65535] { R4044 += 1, R4045 += 1 };
  s0 -> s2 [67, 67] { R4045 += 1 };
  s0 -> s1 [68, 65535] { R4045 += 1 };
  s1 -> s1 [0, 64] { R4045 += 1 };
  s1 -> s2 [67, 67] { R4045 += 1 };
  s1 -> s1 [68, 65535] { R4045 += 1 };
  s2 -> s2 [0, 64] { R4045 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [67, 65535] { R4045 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R4047 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R4046 += 1, R4047 += 1 };
  s1 -> s1 [0, 65535] { R4047 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 66] { R4049 += 1 };
  s0 -> s2 [0, 65535] { R4049 += 1, R18 += 1 };
  s0 -> s0 [0, 65535] { R4048 += 1, R4049 += 1 };
  s0 -> s3 [67, 67] { R4049 += 1 };
  s0 -> s1 [68, 65535] { R4049 += 1 };
  s1 -> s1 [0, 66] { R4049 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [67, 67] { R4049 += 1 };
  s1 -> s1 [68, 65535] { R4049 += 1 };
  s2 -> s1 [0, 66] { R4049 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4049 += 1, R18 += 1 };
  s2 -> s3 [67, 67] { R4049 += 1 };
  s2 -> s1 [68, 65535] { R4049 += 1 };
  s3 -> s3 [0, 65535] { R4049 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R4051 += 1, R29 += 1 };
  s0 -> s2 [0, 65535] { R4051 += 1, R28 += 1, R29 += 1 };
  s0 -> s0 [0, 65535] { R4050 += 1, R4051 += 1 };
  s0 -> s3 [9, 13] { R4051 += 1, R29 += 1 };
  s0 -> s1 [14, 31] { R4051 += 1, R29 += 1 };
  s0 -> s3 [32, 32] { R4051 += 1, R29 += 1 };
  s0 -> s1 [33, 65535] { R4051 += 1, R29 += 1 };
  s1 -> s5 [0, 65535] { R4051 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R4051 += 1, R29 += 1 };
  s2 -> s1 [0, 8] { R4051 += 1, R29 += 1 };
  s2 -> s2 [0, 65535] { R4051 += 1, R28 += 1, R29 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [9, 13] { R4051 += 1, R29 += 1 };
  s2 -> s1 [14, 31] { R4051 += 1, R29 += 1 };
  s2 -> s3 [32, 32] { R4051 += 1, R29 += 1 };
  s2 -> s1 [33, 65535] { R4051 += 1, R29 += 1 };
  s3 -> s1 [0, 65535] { R4051 += 1, R29 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4051 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 65535] { R4053 += 1, R31 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R4052 += 1, R4053 += 1 };
  s0 -> s2 [0, 65535] { R4053 += 1, R30 += 1, R31 += 1 };
  s1 -> s1 [0, 65535] { R4053 += 1, R31 += 1, R5 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R4053 += 1 };
  s2 -> s1 [0, 65535] { R4053 += 1, R31 += 1, R5 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4053 += 1, R30 += 1, R31 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4053 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R4055 += 1, R33 += 1 };
  s0 -> s2 [0, 65535] { R4055 += 1, R32 += 1, R33 += 1 };
  s0 -> s0 [0, 65535] { R4054 += 1, R4055 += 1 };
  s0 -> s3 [9, 13] { R4055 += 1, R33 += 1 };
  s0 -> s1 [14, 31] { R4055 += 1, R33 += 1 };
  s0 -> s3 [32, 32] { R4055 += 1, R33 += 1 };
  s0 -> s1 [33, 65535] { R4055 += 1, R33 += 1 };
  s1 -> s5 [0, 65535] { R4055 += 1 };
  s1 -> s1 [0, 65535] { R4055 += 1, R33 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 8] { R4055 += 1, R33 += 1 };
  s2 -> s2 [0, 65535] { R4055 += 1, R32 += 1, R33 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [9, 13] { R4055 += 1, R33 += 1 };
  s2 -> s1 [14, 31] { R4055 += 1, R33 += 1 };
  s2 -> s3 [32, 32] { R4055 += 1, R33 += 1 };
  s2 -> s1 [33, 65535] { R4055 += 1, R33 += 1 };
  s3 -> s1 [0, 65535] { R4055 += 1, R33 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4055 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 65535] { R4057 += 1, R35 += 1, R6 += 1 };
  s0 -> s0 [0, 65535] { R4056 += 1, R4057 += 1 };
  s0 -> s2 [0, 65535] { R4057 += 1, R34 += 1, R35 += 1 };
  s1 -> s4 [0, 65535] { R4057 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4057 += 1, R35 += 1, R6 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4057 += 1, R35 += 1, R6 += 1 };
  s2 -> s2 [0, 65535] { R4057 += 1, R34 += 1, R35 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4057 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 66] { R4059 += 1, R3939 += 1 };
  s0 -> s0 [0, 65535] { R4058 += 1, R4059 += 1 };
  s0 -> s2 [0, 65535] { R4059 += 1, R3938 += 1, R3939 += 1 };
  s0 -> s1 [68, 65535] { R4059 += 1, R3939 += 1 };
  s1 -> s1 [0, 66] { R4059 += 1, R3939 += 1 };
  s1 -> s1 [0, 65535] { R4059 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [68, 65535] { R4059 += 1, R3939 += 1 };
  s2 -> s1 [0, 66] { R4059 += 1, R3939 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4059 += 1, R3938 += 1, R3939 += 1 };
  s2 -> s1 [68, 65535] { R4059 += 1, R3939 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 65535] { R4061 += 1, R3941 += 1, R26 += 1 };
  s0 -> s2 [0, 65535] { R4061 += 1, R3940 += 1, R3941 += 1 };
  s0 -> s0 [0, 65535] { R4060 += 1, R4061 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R4061 += 1 };
  s1 -> s1 [0, 65535] { R4061 += 1, R3941 += 1, R26 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4061 += 1, R3941 += 1, R26 += 1 };
  s2 -> s2 [0, 65535] { R4061 += 1, R3940 += 1, R3941 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4061 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 67] { R4063 += 1, R3943 += 1 };
  s0 -> s0 [0, 65535] { R4062 += 1, R4063 += 1 };
  s0 -> s2 [0, 65535] { R4063 += 1, R3942 += 1, R3943 += 1 };
  s0 -> s1 [70, 65535] { R4063 += 1, R3943 += 1 };
  s1 -> s1 [0, 67] { R4063 += 1, R3943 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4063 += 1 };
  s1 -> s1 [70, 65535] { R4063 += 1, R3943 += 1 };
  s2 -> s1 [0, 67] { R4063 += 1, R3943 += 1 };
  s2 -> s2 [0, 65535] { R4063 += 1, R3942 += 1, R3943 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [70, 65535] { R4063 += 1, R3943 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 65535] { R4065 += 1, R3944 += 1, R3945 += 1 };
  s0 -> s0 [0, 65535] { R4064 += 1, R4065 += 1 };
  s0 -> s2 [0, 65535] { R4065 += 1, R3945 += 1, R1331 += 1 };
  s1 -> s1 [0, 65535] { R4065 += 1, R3944 += 1, R3945 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R4065 += 1, R3945 += 1, R1331 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4065 += 1, R3945 += 1, R1331 += 1 };
  s2 -> s4 [0, 65535] { R4065 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4065 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R4067 += 1, R3947 += 1 };
  s0 -> s0 [0, 65535] { R4066 += 1, R4067 += 1 };
  s0 -> s2 [0, 65535] { R4067 += 1, R3946 += 1, R3947 += 1 };
  s0 -> s3 [0, 65535] { R4067 += 1, R3947 += 1, R1333 += 1 };
  s0 -> s1 [71, 65535] { R4067 += 1, R3947 += 1 };
  s1 -> s1 [0, 69] { R4067 += 1, R3947 += 1 };
  s1 -> s1 [0, 65535] { R4067 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [71, 65535] { R4067 += 1, R3947 += 1 };
  s2 -> s1 [0, 69] { R4067 += 1, R3947 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4067 += 1, R3946 += 1, R3947 += 1 };
  s2 -> s3 [0, 65535] { R4067 += 1, R3947 += 1, R1333 += 1 };
  s2 -> s1 [71, 65535] { R4067 += 1, R3947 += 1 };
  s3 -> s1 [0, 69] { R4067 += 1, R3947 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4067 += 1, R3947 += 1, R1333 += 1 };
  s3 -> s5 [0, 65535] { R4067 += 1 };
  s3 -> s1 [71, 65535] { R4067 += 1, R3947 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4067 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 65535] { R4069 += 1, R3949 += 1, R1338 += 1, R1339 += 1 };
  s0 -> s2 [0, 65535] { R4069 += 1, R3949 += 1, R1337 += 1, R1338 += 1 };
  s0 -> s0 [0, 65535] { R4068 += 1, R4069 += 1 };
  s0 -> s3 [0, 65535] { R4069 += 1, R3948 += 1, R3949 += 1 };
  s1 -> s5 [0, 65535] { R4069 += 1 };
  s1 -> s1 [0, 65535] { R4069 += 1, R3949 += 1, R1338 += 1, R1339 += 1 };
  s1 -> s6 [0, 65535] { R4069 += 1, R3949 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R4069 += 1 };
  s2 -> s1 [0, 65535] { R4069 += 1, R3949 += 1, R1338 += 1, R1339 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4069 += 1, R3949 += 1, R1337 += 1, R1338 += 1 };
  s3 -> s1 [0, 65535] { R4069 += 1, R3949 += 1, R1338 += 1, R1339 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R4069 += 1, R3949 += 1, R1337 += 1, R1338 += 1 };
  s3 -> s3 [0, 65535] { R4069 += 1, R3948 += 1, R3949 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4069 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R4069 += 1 };
  s6 -> s6 [0, 65535] { R4069 += 1, R3949 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R4071 += 1, R3951 += 1, R1343 += 1 };
  s0 -> s0 [0, 65535] { R4070 += 1, R4071 += 1 };
  s0 -> s2 [0, 65535] { R4071 += 1, R3950 += 1, R3951 += 1 };
  s0 -> s3 [0, 65535] { R4071 += 1, R3951 += 1, R1342 += 1, R1343 += 1 };
  s0 -> s4 [70, 70] { R4071 += 1, R3951 += 1, R1343 += 1 };
  s0 -> s5 [70, 70] { R4071 += 1, R3951 += 1, R1343 += 1 };
  s0 -> s1 [77, 65535] { R4071 += 1, R3951 += 1, R1343 += 1 };
  s1 -> s1 [0, 69] { R4071 += 1, R3951 += 1, R1343 += 1 };
  s1 -> s6 [0, 65535] { R4071 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R4071 += 1, R3951 += 1 };
  s1 -> s4 [70, 70] { R4071 += 1, R3951 += 1, R1343 += 1 };
  s1 -> s5 [70, 70] { R4071 += 1, R3951 += 1, R1343 += 1 };
  s1 -> s1 [77, 65535] { R4071 += 1, R3951 += 1, R1343 += 1 };
  s2 -> s1 [0, 69] { R4071 += 1, R3951 += 1, R1343 += 1 };
  s2 -> s2 [0, 65535] { R4071 += 1, R3950 += 1, R3951 += 1 };
  s2 -> s3 [0, 65535] { R4071 += 1, R3951 += 1, R1342 += 1, R1343 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [70, 70] { R4071 += 1, R3951 += 1, R1343 += 1 };
  s2 -> s5 [70, 70] { R4071 += 1, R3951 += 1, R1343 += 1 };
  s2 -> s1 [77, 65535] { R4071 += 1, R3951 += 1, R1343 += 1 };
  s3 -> s1 [0, 69] { R4071 += 1, R3951 += 1, R1343 += 1 };
  s3 -> s6 [0, 65535] { R4071 += 1 };
  s3 -> s3 [0, 65535] { R4071 += 1, R3951 += 1, R1342 += 1, R1343 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [70, 70] { R4071 += 1, R3951 += 1, R1343 += 1 };
  s3 -> s5 [70, 70] { R4071 += 1, R3951 += 1, R1343 += 1 };
  s3 -> s1 [77, 65535] { R4071 += 1, R3951 += 1, R1343 += 1 };
  s4 -> s6 [0, 65535] { R4071 += 1 };
  s4 -> s4 [0, 65535] { R4071 += 1, R3951 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 70] { R4071 += 1, R3951 += 1, R1343 += 1 };
  s5 -> s6 [0, 65535] { R4071 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R4071 += 1, R3951 += 1 };
  s5 -> s5 [77, 65535] { R4071 += 1, R3951 += 1, R1343 += 1 };
  s6 -> s6 [0, 65535] { R4071 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R4073 += 1, R3953 += 1, R1348 += 1, R1349 += 1 };
  s0 -> s2 [0, 65535] { R4073 += 1, R3952 += 1, R3953 += 1 };
  s0 -> s3 [0, 65535] { R4073 += 1, R3953 += 1, R1347 += 1, R1348 += 1 };
  s0 -> s0 [0, 65535] { R4072 += 1, R4073 += 1 };
  s0 -> s4 [70, 70] { R4073 += 1, R3953 += 1, R1348 += 1, R1349 += 1 };
  s0 -> s5 [70, 70] { R4073 += 1, R3953 += 1, R1348 += 1, R1349 += 1 };
  s0 -> s1 [71, 65535] { R4073 += 1, R3953 += 1, R1348 += 1, R1349 += 1 };
  s1 -> s1 [0, 69] { R4073 += 1, R3953 += 1, R1348 += 1, R1349 += 1 };
  s1 -> s7 [0, 65535] { R4073 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s1 [0, 65535] { R4073 += 1, R3953 += 1 };
  s1 -> s4 [70, 70] { R4073 += 1, R3953 += 1, R1348 += 1, R1349 += 1 };
  s1 -> s5 [70, 70] { R4073 += 1, R3953 += 1, R1348 += 1, R1349 += 1 };
  s1 -> s1 [71, 65535] { R4073 += 1, R3953 += 1, R1348 += 1, R1349 += 1 };
  s2 -> s1 [0, 69] { R4073 += 1, R3953 += 1, R1348 += 1, R1349 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R4073 += 1, R3952 += 1, R3953 += 1 };
  s2 -> s3 [0, 65535] { R4073 += 1, R3953 += 1, R1347 += 1, R1348 += 1 };
  s2 -> s4 [70, 70] { R4073 += 1, R3953 += 1, R1348 += 1, R1349 += 1 };
  s2 -> s5 [70, 70] { R4073 += 1, R3953 += 1, R1348 += 1, R1349 += 1 };
  s2 -> s1 [71, 65535] { R4073 += 1, R3953 += 1, R1348 += 1, R1349 += 1 };
  s3 -> s1 [0, 69] { R4073 += 1, R3953 += 1, R1348 += 1, R1349 += 1 };
  s3 -> s7 [0, 65535] { R4073 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s3 [0, 65535] { R4073 += 1, R3953 += 1, R1347 += 1, R1348 += 1 };
  s3 -> s4 [70, 70] { R4073 += 1, R3953 += 1, R1348 += 1, R1349 += 1 };
  s3 -> s5 [70, 70] { R4073 += 1, R3953 += 1, R1348 += 1, R1349 += 1 };
  s3 -> s1 [71, 65535] { R4073 += 1, R3953 += 1, R1348 += 1, R1349 += 1 };
  s4 -> s7 [0, 65535] { R4073 += 1 };
  s4 -> s4 [0, 65535] { R4073 += 1, R3953 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s6 [0, 65535] { R4073 += 1, R3953 += 1 };
  s5 -> s7 [0, 65535] { R4073 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R4073 += 1, R3953 += 1, R1348 += 1, R1349 += 1 };
  s6 -> s6 [0, 65535] { R4073 += 1, R3953 += 1 };
  s6 -> s7 [0, 65535] { R4073 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R4073 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R4075 += 1, R3955 += 1, R1354 += 1, R1355 += 1 };
  s0 -> s2 [0, 65535] { R4075 += 1, R3955 += 1, R1353 += 1, R1354 += 1 };
  s0 -> s0 [0, 65535] { R4074 += 1, R4075 += 1 };
  s0 -> s3 [0, 65535] { R4075 += 1, R3954 += 1, R3955 += 1 };
  s0 -> s4 [70, 70] { R4075 += 1, R3955 += 1, R1354 += 1, R1355 += 1 };
  s0 -> s5 [70, 70] { R4075 += 1, R3955 += 1, R1354 += 1, R1355 += 1 };
  s0 -> s1 [71, 65535] { R4075 += 1, R3955 += 1, R1354 += 1, R1355 += 1 };
  s1 -> s1 [0, 69] { R4075 += 1, R3955 += 1, R1354 += 1, R1355 += 1 };
  s1 -> s1 [0, 65535] { R4075 += 1, R3955 += 1 };
  s1 -> s6 [0, 65535] { R4075 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [70, 70] { R4075 += 1, R3955 += 1, R1354 += 1, R1355 += 1 };
  s1 -> s5 [70, 70] { R4075 += 1, R3955 += 1, R1354 += 1, R1355 += 1 };
  s1 -> s1 [71, 65535] { R4075 += 1, R3955 += 1, R1354 += 1, R1355 += 1 };
  s2 -> s1 [0, 69] { R4075 += 1, R3955 += 1, R1354 += 1, R1355 += 1 };
  s2 -> s2 [0, 65535] { R4075 += 1, R3955 += 1, R1353 += 1, R1354 += 1 };
  s2 -> s6 [0, 65535] { R4075 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [70, 70] { R4075 += 1, R3955 += 1, R1354 += 1, R1355 += 1 };
  s2 -> s5 [70, 70] { R4075 += 1, R3955 += 1, R1354 += 1, R1355 += 1 };
  s2 -> s1 [71, 65535] { R4075 += 1, R3955 += 1, R1354 += 1, R1355 += 1 };
  s3 -> s1 [0, 69] { R4075 += 1, R3955 += 1, R1354 += 1, R1355 += 1 };
  s3 -> s2 [0, 65535] { R4075 += 1, R3955 += 1, R1353 += 1, R1354 += 1 };
  s3 -> s3 [0, 65535] { R4075 += 1, R3954 += 1, R3955 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s4 [70, 70] { R4075 += 1, R3955 += 1, R1354 += 1, R1355 += 1 };
  s3 -> s5 [70, 70] { R4075 += 1, R3955 += 1, R1354 += 1, R1355 += 1 };
  s3 -> s1 [71, 65535] { R4075 += 1, R3955 += 1, R1354 += 1, R1355 += 1 };
  s4 -> s4 [0, 65535] { R4075 += 1, R3955 += 1 };
  s4 -> s6 [0, 65535] { R4075 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R4075 += 1, R3955 += 1, R1354 += 1, R1355 += 1 };
  s5 -> s6 [0, 65535] { R4075 += 1 };
  s5 -> s7 [0, 65535] { R4075 += 1, R3955 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R4075 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s6 [0, 65535] { R4075 += 1 };
  s7 -> s7 [0, 65535] { R4075 += 1, R3955 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 69] { R4077 += 1, R3957 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s0 -> s2 [0, 65535] { R4077 += 1, R3956 += 1, R3957 += 1 };
  s0 -> s0 [0, 65535] { R4076 += 1, R4077 += 1 };
  s0 -> s3 [0, 65535] { R4077 += 1, R3957 += 1, R1360 += 1, R1361 += 1 };
  s0 -> s4 [70, 70] { R4077 += 1, R3957 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s0 -> s5 [70, 70] { R4077 += 1, R3957 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s0 -> s1 [71, 65535] { R4077 += 1, R3957 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s1 -> s1 [0, 69] { R4077 += 1, R3957 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R4077 += 1, R3957 += 1 };
  s1 -> s8 [0, 65535] { R4077 += 1 };
  s1 -> s4 [70, 70] { R4077 += 1, R3957 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s1 -> s5 [70, 70] { R4077 += 1, R3957 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s1 -> s1 [71, 65535] { R4077 += 1, R3957 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s2 -> s1 [0, 69] { R4077 += 1, R3957 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R4077 += 1, R3956 += 1, R3957 += 1 };
  s2 -> s3 [0, 65535] { R4077 += 1, R3957 += 1, R1360 += 1, R1361 += 1 };
  s2 -> s4 [70, 70] { R4077 += 1, R3957 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s2 -> s5 [70, 70] { R4077 += 1, R3957 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s2 -> s1 [71, 65535] { R4077 += 1, R3957 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s3 -> s1 [0, 69] { R4077 += 1, R3957 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R4077 += 1, R3957 += 1, R1360 += 1, R1361 += 1 };
  s3 -> s8 [0, 65535] { R4077 += 1 };
  s3 -> s4 [70, 70] { R4077 += 1, R3957 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s3 -> s5 [70, 70] { R4077 += 1, R3957 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s3 -> s1 [71, 65535] { R4077 += 1, R3957 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4077 += 1, R3957 += 1 };
  s4 -> s8 [0, 65535] { R4077 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R4077 += 1, R3957 += 1 };
  s5 -> s5 [0, 65535] { R4077 += 1, R3957 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s5 -> s8 [0, 65535] { R4077 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4077 += 1, R3957 += 1 };
  s7 -> s8 [0, 65535] { R4077 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R4077 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R4079 += 1, R3959 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s0 -> s2 [0, 65535] { R4079 += 1, R3959 += 1, R1369 += 1, R1370 += 1 };
  s0 -> s0 [0, 65535] { R4078 += 1, R4079 += 1 };
  s0 -> s3 [0, 65535] { R4079 += 1, R3958 += 1, R3959 += 1 };
  s0 -> s4 [70, 70] { R4079 += 1, R3959 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s0 -> s5 [70, 70] { R4079 += 1, R3959 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s0 -> s1 [71, 65535] { R4079 += 1, R3959 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s1 -> s1 [0, 69] { R4079 += 1, R3959 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s1 -> s1 [0, 65535] { R4079 += 1, R3959 += 1 };
  s1 -> s6 [0, 65535] { R4079 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [70, 70] { R4079 += 1, R3959 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s1 -> s5 [70, 70] { R4079 += 1, R3959 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s1 -> s1 [71, 65535] { R4079 += 1, R3959 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s2 -> s1 [0, 69] { R4079 += 1, R3959 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s2 -> s2 [0, 65535] { R4079 += 1, R3959 += 1, R1369 += 1, R1370 += 1 };
  s2 -> s6 [0, 65535] { R4079 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [70, 70] { R4079 += 1, R3959 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s2 -> s5 [70, 70] { R4079 += 1, R3959 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s2 -> s1 [71, 65535] { R4079 += 1, R3959 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s3 -> s1 [0, 69] { R4079 += 1, R3959 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s3 -> s2 [0, 65535] { R4079 += 1, R3959 += 1, R1369 += 1, R1370 += 1 };
  s3 -> s3 [0, 65535] { R4079 += 1, R3958 += 1, R3959 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [70, 70] { R4079 += 1, R3959 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s3 -> s5 [70, 70] { R4079 += 1, R3959 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s3 -> s1 [71, 65535] { R4079 += 1, R3959 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s4 -> s4 [0, 65535] { R4079 += 1, R3959 += 1 };
  s4 -> s6 [0, 65535] { R4079 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s6 [0, 65535] { R4079 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R4079 += 1, R3959 += 1 };
  s5 -> s5 [0, 65535] { R4079 += 1, R3959 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s6 -> s6 [0, 65535] { R4079 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R4079 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R4079 += 1, R3959 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R4081 += 1, R3961 += 1, R1377 += 1 };
  s0 -> s2 [0, 65535] { R4081 += 1, R3961 += 1, R1376 += 1, R1377 += 1 };
  s0 -> s0 [0, 65535] { R4080 += 1, R4081 += 1 };
  s0 -> s3 [0, 65535] { R4081 += 1, R3960 += 1, R3961 += 1 };
  s0 -> s4 [70, 70] { R4081 += 1, R3961 += 1, R1377 += 1 };
  s0 -> s1 [71, 65535] { R4081 += 1, R3961 += 1, R1377 += 1 };
  s1 -> s1 [0, 69] { R4081 += 1, R3961 += 1, R1377 += 1 };
  s1 -> s4 [70, 70] { R4081 += 1, R3961 += 1, R1377 += 1 };
  s1 -> s1 [71, 65535] { R4081 += 1, R3961 += 1, R1377 += 1 };
  s2 -> s1 [0, 69] { R4081 += 1, R3961 += 1, R1377 += 1 };
  s2 -> s2 [0, 65535] { R4081 += 1, R3961 += 1, R1376 += 1, R1377 += 1 };
  s2 -> s4 [70, 70] { R4081 += 1, R3961 += 1, R1377 += 1 };
  s2 -> s1 [71, 65535] { R4081 += 1, R3961 += 1, R1377 += 1 };
  s3 -> s1 [0, 69] { R4081 += 1, R3961 += 1, R1377 += 1 };
  s3 -> s2 [0, 65535] { R4081 += 1, R3961 += 1, R1376 += 1, R1377 += 1 };
  s3 -> s3 [0, 65535] { R4081 += 1, R3960 += 1, R3961 += 1 };
  s3 -> s4 [70, 70] { R4081 += 1, R3961 += 1, R1377 += 1 };
  s3 -> s1 [71, 65535] { R4081 += 1, R3961 += 1, R1377 += 1 };
  s4 -> s4 [0, 65535] { R4081 += 1, R3961 += 1, R1377 += 1 };
  s4 -> s5 [0, 65535] { R4081 += 1, R3961 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R4081 += 1 };
  s5 -> s5 [0, 65535] { R4081 += 1, R3961 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R4081 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4081 += 1 };
  accepting s4, s5, s6, s7;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R4083 += 1, R3962 += 1, R3963 += 1 };
  s0 -> s2 [0, 65535] { R4083 += 1, R3963 += 1, R1381 += 1, R1382 += 1 };
  s0 -> s3 [0, 65535] { R4083 += 1, R3963 += 1, R1382 += 1, R1383 += 1 };
  s0 -> s0 [0, 65535] { R4082 += 1, R4083 += 1 };
  s1 -> s1 [0, 65535] { R4083 += 1, R3962 += 1, R3963 += 1 };
  s1 -> s2 [0, 65535] { R4083 += 1, R3963 += 1, R1381 += 1, R1382 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R4083 += 1, R3963 += 1, R1382 += 1, R1383 += 1 };
  s2 -> s2 [0, 65535] { R4083 += 1, R3963 += 1, R1381 += 1, R1382 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R4083 += 1, R3963 += 1, R1382 += 1, R1383 += 1 };
  s2 -> s6 [0, 65535] { R4083 += 1 };
  s3 -> s4 [0, 65535] { R4083 += 1, R3963 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4083 += 1, R3963 += 1, R1382 += 1, R1383 += 1 };
  s3 -> s6 [0, 65535] { R4083 += 1 };
  s4 -> s4 [0, 65535] { R4083 += 1, R3963 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4083 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4083 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 69] { R4085 += 1, R3965 += 1, R1388 += 1 };
  s0 -> s0 [0, 65535] { R4084 += 1, R4085 += 1 };
  s0 -> s2 [0, 65535] { R4085 += 1, R3964 += 1, R3965 += 1 };
  s0 -> s3 [0, 65535] { R4085 += 1, R3965 += 1, R1387 += 1, R1388 += 1 };
  s0 -> s4 [0, 65535] { R4085 += 1, R3965 += 1, R1388 += 1, R1389 += 1 };
  s0 -> s1 [71, 65535] { R4085 += 1, R3965 += 1, R1388 += 1 };
  s1 -> s1 [0, 69] { R4085 += 1, R3965 += 1, R1388 += 1 };
  s1 -> s7 [0, 65535] { R4085 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R4085 += 1, R3965 += 1 };
  s1 -> s1 [71, 65535] { R4085 += 1, R3965 += 1, R1388 += 1 };
  s2 -> s1 [0, 69] { R4085 += 1, R3965 += 1, R1388 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R4085 += 1, R3964 += 1, R3965 += 1 };
  s2 -> s3 [0, 65535] { R4085 += 1, R3965 += 1, R1387 += 1, R1388 += 1 };
  s2 -> s4 [0, 65535] { R4085 += 1, R3965 += 1, R1388 += 1, R1389 += 1 };
  s2 -> s1 [71, 65535] { R4085 += 1, R3965 += 1, R1388 += 1 };
  s3 -> s1 [0, 69] { R4085 += 1, R3965 += 1, R1388 += 1 };
  s3 -> s4 [0, 65535] { R4085 += 1, R3965 += 1, R1388 += 1, R1389 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R4085 += 1, R3965 += 1, R1387 += 1, R1388 += 1 };
  s3 -> s7 [0, 65535] { R4085 += 1 };
  s3 -> s1 [71, 65535] { R4085 += 1, R3965 += 1, R1388 += 1 };
  s4 -> s1 [0, 69] { R4085 += 1, R3965 += 1, R1388 += 1 };
  s4 -> s4 [0, 65535] { R4085 += 1, R3965 += 1, R1388 += 1, R1389 += 1 };
  s4 -> s5 [0, 65535] { R4085 += 1, R3965 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R4085 += 1 };
  s4 -> s1 [71, 65535] { R4085 += 1, R3965 += 1, R1388 += 1 };
  s5 -> s5 [0, 65535] { R4085 += 1, R3965 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R4085 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4085 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 69] { R4087 += 1, R3967 += 1, R1395 += 1, R1397 += 1 };
  s0 -> s2 [0, 65535] { R4087 += 1, R3967 += 1, R1394 += 1, R1395 += 1 };
  s0 -> s0 [0, 65535] { R4086 += 1, R4087 += 1 };
  s0 -> s3 [0, 65535] { R4087 += 1, R3966 += 1, R3967 += 1 };
  s0 -> s4 [0, 65535] { R4087 += 1, R3967 += 1, R1395 += 1, R1396 += 1, R1397 += 1 };
  s0 -> s1 [71, 65535] { R4087 += 1, R3967 += 1, R1395 += 1, R1397 += 1 };
  s1 -> s1 [0, 69] { R4087 += 1, R3967 += 1, R1395 += 1, R1397 += 1 };
  s1 -> s1 [0, 65535] { R4087 += 1, R3967 += 1, R1395 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R4087 += 1 };
  s1 -> s7 [0, 65535] { R4087 += 1, R3967 += 1 };
  s1 -> s1 [71, 65535] { R4087 += 1, R3967 += 1, R1395 += 1, R1397 += 1 };
  s2 -> s1 [0, 69] { R4087 += 1, R3967 += 1, R1395 += 1, R1397 += 1 };
  s2 -> s2 [0, 65535] { R4087 += 1, R3967 += 1, R1394 += 1, R1395 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s4 [0, 65535] { R4087 += 1, R3967 += 1, R1395 += 1, R1396 += 1, R1397 += 1 };
  s2 -> s6 [0, 65535] { R4087 += 1 };
  s2 -> s1 [71, 65535] { R4087 += 1, R3967 += 1, R1395 += 1, R1397 += 1 };
  s3 -> s1 [0, 69] { R4087 += 1, R3967 += 1, R1395 += 1, R1397 += 1 };
  s3 -> s2 [0, 65535] { R4087 += 1, R3967 += 1, R1394 += 1, R1395 += 1 };
  s3 -> s3 [0, 65535] { R4087 += 1, R3966 += 1, R3967 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R4087 += 1, R3967 += 1, R1395 += 1, R1396 += 1, R1397 += 1 };
  s3 -> s1 [71, 65535] { R4087 += 1, R3967 += 1, R1395 += 1, R1397 += 1 };
  s4 -> s1 [0, 69] { R4087 += 1, R3967 += 1, R1395 += 1, R1397 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4087 += 1, R3967 += 1, R1395 += 1, R1396 += 1, R1397 += 1 };
  s4 -> s6 [0, 65535] { R4087 += 1 };
  s4 -> s7 [0, 65535] { R4087 += 1, R3967 += 1 };
  s4 -> s1 [71, 65535] { R4087 += 1, R3967 += 1, R1395 += 1, R1397 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4087 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R4087 += 1 };
  s7 -> s7 [0, 65535] { R4087 += 1, R3967 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R4089 += 1, R3969 += 1, R1404 += 1, R1405 += 1, R1406 += 1 };
  s0 -> s2 [0, 65535] { R4089 += 1, R3969 += 1, R1403 += 1, R1404 += 1 };
  s0 -> s0 [0, 65535] { R4088 += 1, R4089 += 1 };
  s0 -> s3 [0, 65535] { R4089 += 1, R3968 += 1, R3969 += 1 };
  s0 -> s4 [0, 65535] { R4089 += 1, R3969 += 1, R1404 += 1, R1406 += 1, R1407 += 1 };
  s1 -> s1 [0, 65535] { R4089 += 1, R3969 += 1, R1404 += 1, R1405 += 1, R1406 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R4089 += 1 };
  s1 -> s7 [0, 65535] { R4089 += 1, R3969 += 1 };
  s1 -> s4 [0, 65535] { R4089 += 1, R3969 += 1, R1404 += 1, R1406 += 1, R1407 += 1 };
  s2 -> s1 [0, 65535] { R4089 += 1, R3969 += 1, R1404 += 1, R1405 += 1, R1406 += 1 };
  s2 -> s2 [0, 65535] { R4089 += 1, R3969 += 1, R1403 += 1, R1404 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R4089 += 1 };
  s2 -> s4 [0, 65535] { R4089 += 1, R3969 += 1, R1404 += 1, R1406 += 1, R1407 += 1 };
  s3 -> s1 [0, 65535] { R4089 += 1, R3969 += 1, R1404 += 1, R1405 += 1, R1406 += 1 };
  s3 -> s2 [0, 65535] { R4089 += 1, R3969 += 1, R1403 += 1, R1404 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4089 += 1, R3968 += 1, R3969 += 1 };
  s3 -> s4 [0, 65535] { R4089 += 1, R3969 += 1, R1404 += 1, R1406 += 1, R1407 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4089 += 1 };
  s4 -> s7 [0, 65535] { R4089 += 1, R3969 += 1 };
  s4 -> s8 [0, 65535] { R4089 += 1, R3969 += 1, R1404 += 1 };
  s4 -> s4 [0, 65535] { R4089 += 1, R3969 += 1, R1404 += 1, R1406 += 1, R1407 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4089 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R4089 += 1 };
  s7 -> s7 [0, 65535] { R4089 += 1, R3969 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R4089 += 1 };
  s8 -> s7 [0, 65535] { R4089 += 1, R3969 += 1 };
  s8 -> s8 [0, 65535] { R4089 += 1, R3969 += 1, R1404 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 70] { R4091 += 1, R3971 += 1, R1413 += 1, R1415 += 1 };
  s0 -> s2 [0, 65535] { R4091 += 1, R3970 += 1, R3971 += 1 };
  s0 -> s3 [0, 65535] { R4091 += 1, R3971 += 1, R1412 += 1, R1413 += 1 };
  s0 -> s0 [0, 65535] { R4090 += 1, R4091 += 1 };
  s0 -> s4 [0, 65535] { R4091 += 1, R3971 += 1, R1413 += 1, R1414 += 1, R1415 += 1 };
  s0 -> s1 [76, 65535] { R4091 += 1, R3971 += 1, R1413 += 1, R1415 += 1 };
  s1 -> s1 [0, 70] { R4091 += 1, R3971 += 1, R1413 += 1, R1415 += 1 };
  s1 -> s1 [0, 65535] { R4091 += 1, R3971 += 1, R1413 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R4091 += 1 };
  s1 -> s7 [0, 65535] { R4091 += 1, R3971 += 1 };
  s1 -> s1 [76, 65535] { R4091 += 1, R3971 += 1, R1413 += 1, R1415 += 1 };
  s2 -> s1 [0, 70] { R4091 += 1, R3971 += 1, R1413 += 1, R1415 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4091 += 1, R3970 += 1, R3971 += 1 };
  s2 -> s3 [0, 65535] { R4091 += 1, R3971 += 1, R1412 += 1, R1413 += 1 };
  s2 -> s4 [0, 65535] { R4091 += 1, R3971 += 1, R1413 += 1, R1414 += 1, R1415 += 1 };
  s2 -> s1 [76, 65535] { R4091 += 1, R3971 += 1, R1413 += 1, R1415 += 1 };
  s3 -> s1 [0, 70] { R4091 += 1, R3971 += 1, R1413 += 1, R1415 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4091 += 1, R3971 += 1, R1412 += 1, R1413 += 1 };
  s3 -> s6 [0, 65535] { R4091 += 1 };
  s3 -> s4 [0, 65535] { R4091 += 1, R3971 += 1, R1413 += 1, R1414 += 1, R1415 += 1 };
  s3 -> s1 [76, 65535] { R4091 += 1, R3971 += 1, R1413 += 1, R1415 += 1 };
  s4 -> s1 [0, 70] { R4091 += 1, R3971 += 1, R1413 += 1, R1415 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4091 += 1 };
  s4 -> s7 [0, 65535] { R4091 += 1, R3971 += 1 };
  s4 -> s4 [0, 65535] { R4091 += 1, R3971 += 1, R1413 += 1, R1414 += 1, R1415 += 1 };
  s4 -> s1 [76, 65535] { R4091 += 1, R3971 += 1, R1413 += 1, R1415 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4091 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R4091 += 1 };
  s7 -> s7 [0, 65535] { R4091 += 1, R3971 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 65535] { R4093 += 1, R3973 += 1, R1421 += 1, R1422 += 1 };
  s0 -> s0 [0, 65535] { R4092 += 1, R4093 += 1 };
  s0 -> s2 [0, 65535] { R4093 += 1, R3972 += 1, R3973 += 1 };
  s0 -> s3 [0, 65535] { R4093 += 1, R3973 += 1, R1422 += 1, R1424 += 1, R1425 += 1 };
  s0 -> s4 [0, 65535] { R4093 += 1, R3973 += 1, R1422 += 1, R1423 += 1, R1424 += 1 };
  s1 -> s1 [0, 65535] { R4093 += 1, R3973 += 1, R1421 += 1, R1422 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R4093 += 1 };
  s1 -> s3 [0, 65535] { R4093 += 1, R3973 += 1, R1422 += 1, R1424 += 1, R1425 += 1 };
  s1 -> s4 [0, 65535] { R4093 += 1, R3973 += 1, R1422 += 1, R1423 += 1, R1424 += 1 };
  s2 -> s1 [0, 65535] { R4093 += 1, R3973 += 1, R1421 += 1, R1422 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4093 += 1, R3972 += 1, R3973 += 1 };
  s2 -> s3 [0, 65535] { R4093 += 1, R3973 += 1, R1422 += 1, R1424 += 1, R1425 += 1 };
  s2 -> s4 [0, 65535] { R4093 += 1, R3973 += 1, R1422 += 1, R1423 += 1, R1424 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R4093 += 1, R3973 += 1 };
  s3 -> s7 [0, 65535] { R4093 += 1 };
  s3 -> s3 [0, 65535] { R4093 += 1, R3973 += 1, R1422 += 1, R1424 += 1, R1425 += 1 };
  s3 -> s8 [0, 65535] { R4093 += 1, R3973 += 1, R1422 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4093 += 1, R3973 += 1 };
  s4 -> s7 [0, 65535] { R4093 += 1 };
  s4 -> s3 [0, 65535] { R4093 += 1, R3973 += 1, R1422 += 1, R1424 += 1, R1425 += 1 };
  s4 -> s4 [0, 65535] { R4093 += 1, R3973 += 1, R1422 += 1, R1423 += 1, R1424 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4093 += 1, R3973 += 1 };
  s6 -> s7 [0, 65535] { R4093 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R4093 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R4093 += 1, R3973 += 1 };
  s8 -> s7 [0, 65535] { R4093 += 1 };
  s8 -> s8 [0, 65535] { R4093 += 1, R3973 += 1, R1422 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 75] { R4095 += 1, R3975 += 1, R1432 += 1, R1434 += 1 };
  s0 -> s2 [0, 65535] { R4095 += 1, R3974 += 1, R3975 += 1 };
  s0 -> s3 [0, 65535] { R4095 += 1, R3975 += 1, R1431 += 1, R1432 += 1 };
  s0 -> s4 [0, 65535] { R4095 += 1, R3975 += 1, R1432 += 1, R1433 += 1, R1434 += 1 };
  s0 -> s0 [0, 65535] { R4094 += 1, R4095 += 1 };
  s0 -> s5 [0, 65535] { R4095 += 1, R3975 += 1, R1432 += 1, R1434 += 1, R1435 += 1 };
  s0 -> s1 [77, 65535] { R4095 += 1, R3975 += 1, R1432 += 1, R1434 += 1 };
  s1 -> s1 [0, 75] { R4095 += 1, R3975 += 1, R1432 += 1, R1434 += 1 };
  s1 -> s1 [0, 65535] { R4095 += 1, R3975 += 1, R1432 += 1 };
  s1 -> s6 [0, 65535] { R4095 += 1 };
  s1 -> s8 [0, 65535] { R4095 += 1, R3975 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s1 [77, 65535] { R4095 += 1, R3975 += 1, R1432 += 1, R1434 += 1 };
  s2 -> s1 [0, 75] { R4095 += 1, R3975 += 1, R1432 += 1, R1434 += 1 };
  s2 -> s2 [0, 65535] { R4095 += 1, R3974 += 1, R3975 += 1 };
  s2 -> s3 [0, 65535] { R4095 += 1, R3975 += 1, R1431 += 1, R1432 += 1 };
  s2 -> s4 [0, 65535] { R4095 += 1, R3975 += 1, R1432 += 1, R1433 += 1, R1434 += 1 };
  s2 -> s9 [0, 65535];
  s2 -> s5 [0, 65535] { R4095 += 1, R3975 += 1, R1432 += 1, R1434 += 1, R1435 += 1 };
  s2 -> s1 [77, 65535] { R4095 += 1, R3975 += 1, R1432 += 1, R1434 += 1 };
  s3 -> s1 [0, 75] { R4095 += 1, R3975 += 1, R1432 += 1, R1434 += 1 };
  s3 -> s6 [0, 65535] { R4095 += 1 };
  s3 -> s3 [0, 65535] { R4095 += 1, R3975 += 1, R1431 += 1, R1432 += 1 };
  s3 -> s4 [0, 65535] { R4095 += 1, R3975 += 1, R1432 += 1, R1433 += 1, R1434 += 1 };
  s3 -> s9 [0, 65535];
  s3 -> s5 [0, 65535] { R4095 += 1, R3975 += 1, R1432 += 1, R1434 += 1, R1435 += 1 };
  s3 -> s1 [77, 65535] { R4095 += 1, R3975 += 1, R1432 += 1, R1434 += 1 };
  s4 -> s1 [0, 75] { R4095 += 1, R3975 += 1, R1432 += 1, R1434 += 1 };
  s4 -> s6 [0, 65535] { R4095 += 1 };
  s4 -> s8 [0, 65535] { R4095 += 1, R3975 += 1 };
  s4 -> s4 [0, 65535] { R4095 += 1, R3975 += 1, R1432 += 1, R1433 += 1, R1434 += 1 };
  s4 -> s9 [0, 65535];
  s4 -> s5 [0, 65535] { R4095 += 1, R3975 += 1, R1432 += 1, R1434 += 1, R1435 += 1 };
  s4 -> s1 [77, 65535] { R4095 += 1, R3975 += 1, R1432 += 1, R1434 += 1 };
  s5 -> s1 [0, 75] { R4095 += 1, R3975 += 1, R1432 += 1, R1434 += 1 };
  s5 -> s6 [0, 65535] { R4095 += 1 };
  s5 -> s7 [0, 65535] { R4095 += 1, R3975 += 1, R1432 += 1 };
  s5 -> s8 [0, 65535] { R4095 += 1, R3975 += 1 };
  s5 -> s9 [0, 65535];
  s5 -> s5 [0, 65535] { R4095 += 1, R3975 += 1, R1432 += 1, R1434 += 1, R1435 += 1 };
  s5 -> s1 [77, 65535] { R4095 += 1, R3975 += 1, R1432 += 1, R1434 += 1 };
  s6 -> s6 [0, 65535] { R4095 += 1 };
  s6 -> s9 [0, 65535];
  s7 -> s6 [0, 65535] { R4095 += 1 };
  s7 -> s7 [0, 65535] { R4095 += 1, R3975 += 1, R1432 += 1 };
  s7 -> s8 [0, 65535] { R4095 += 1, R3975 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s6 [0, 65535] { R4095 += 1 };
  s8 -> s8 [0, 65535] { R4095 += 1, R3975 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s0 [0, 65535] { R4096 += 1, R4097 += 1 };
  s0 -> s1 [0, 65535] { R4097 += 1, R3976 += 1, R3977 += 1 };
  s0 -> s2 [0, 65535] { R4097 += 1, R3977 += 1, R1443 += 1, R1445 += 1, R1447 += 1 };
  s0 -> s3 [0, 65535] { R4097 += 1, R3977 += 1, R1443 += 1, R1444 += 1, R1445 += 1 };
  s0 -> s4 [0, 65535] { R4097 += 1, R3977 += 1, R1442 += 1, R1443 += 1 };
  s0 -> s5 [0, 65535] { R4097 += 1, R3977 += 1, R1443 += 1, R1445 += 1 };
  s1 -> s1 [0, 65535] { R4097 += 1, R3976 += 1, R3977 += 1 };
  s1 -> s2 [0, 65535] { R4097 += 1, R3977 += 1, R1443 += 1, R1445 += 1, R1447 += 1 };
  s1 -> s3 [0, 65535] { R4097 += 1, R3977 += 1, R1443 += 1, R1444 += 1, R1445 += 1 };
  s1 -> s4 [0, 65535] { R4097 += 1, R3977 += 1, R1442 += 1, R1443 += 1 };
  s1 -> s5 [0, 65535] { R4097 += 1, R3977 += 1, R1443 += 1, R1445 += 1 };
  s1 -> s9 [0, 65535];
  s2 -> s6 [0, 65535] { R4097 += 1 };
  s2 -> s7 [0, 65535] { R4097 += 1, R3977 += 1 };
  s2 -> s2 [0, 65535] { R4097 += 1, R3977 += 1, R1443 += 1, R1445 += 1, R1447 += 1 };
  s2 -> s8 [0, 65535] { R4097 += 1, R3977 += 1, R1443 += 1 };
  s2 -> s5 [0, 65535] { R4097 += 1, R3977 += 1, R1443 += 1, R1445 += 1 };
  s2 -> s9 [0, 65535];
  s3 -> s6 [0, 65535] { R4097 += 1 };
  s3 -> s7 [0, 65535] { R4097 += 1, R3977 += 1 };
  s3 -> s2 [0, 65535] { R4097 += 1, R3977 += 1, R1443 += 1, R1445 += 1, R1447 += 1 };
  s3 -> s3 [0, 65535] { R4097 += 1, R3977 += 1, R1443 += 1, R1444 += 1, R1445 += 1 };
  s3 -> s5 [0, 65535] { R4097 += 1, R3977 += 1, R1443 += 1, R1445 += 1 };
  s3 -> s9 [0, 65535];
  s4 -> s6 [0, 65535] { R4097 += 1 };
  s4 -> s2 [0, 65535] { R4097 += 1, R3977 += 1, R1443 += 1, R1445 += 1, R1447 += 1 };
  s4 -> s3 [0, 65535] { R4097 += 1, R3977 += 1, R1443 += 1, R1444 += 1, R1445 += 1 };
  s4 -> s4 [0, 65535] { R4097 += 1, R3977 += 1, R1442 += 1, R1443 += 1 };
  s4 -> s5 [0, 65535] { R4097 += 1, R3977 += 1, R1443 += 1, R1445 += 1 };
  s4 -> s9 [0, 65535];
  s5 -> s6 [0, 65535] { R4097 += 1 };
  s5 -> s7 [0, 65535] { R4097 += 1, R3977 += 1 };
  s5 -> s8 [0, 65535] { R4097 += 1, R3977 += 1, R1443 += 1 };
  s5 -> s5 [0, 65535] { R4097 += 1, R3977 += 1, R1443 += 1, R1445 += 1 };
  s5 -> s9 [0, 65535];
  s6 -> s6 [0, 65535] { R4097 += 1 };
  s6 -> s9 [0, 65535];
  s7 -> s6 [0, 65535] { R4097 += 1 };
  s7 -> s7 [0, 65535] { R4097 += 1, R3977 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s6 [0, 65535] { R4097 += 1 };
  s8 -> s7 [0, 65535] { R4097 += 1, R3977 += 1 };
  s8 -> s8 [0, 65535] { R4097 += 1, R3977 += 1, R1443 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 65535] { R4099 += 1, R3979 += 1, R1456 += 1, R1458 += 1, R1459 += 1, R1460 += 1 };
  s0 -> s2 [0, 65535] { R4099 += 1, R3979 += 1, R1456 += 1, R1458 += 1, R1460 += 1, R1461 += 1 };
  s0 -> s0 [0, 65535] { R4098 += 1, R4099 += 1 };
  s0 -> s3 [0, 65535] { R4099 += 1, R3979 += 1, R1455 += 1, R1456 += 1 };
  s0 -> s4 [0, 65535] { R4099 += 1, R3979 += 1, R1456 += 1, R1457 += 1, R1458 += 1 };
  s0 -> s5 [0, 65535] { R4099 += 1, R3978 += 1, R3979 += 1 };
  s1 -> s1 [0, 65535] { R4099 += 1, R3979 += 1, R1456 += 1, R1458 += 1, R1459 += 1, R1460 += 1 };
  s1 -> s2 [0, 65535] { R4099 += 1, R3979 += 1, R1456 += 1, R1458 += 1, R1460 += 1, R1461 += 1 };
  s1 -> s7 [0, 65535] { R4099 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s9 [0, 65535] { R4099 += 1, R3979 += 1, R1456 += 1 };
  s1 -> s8 [0, 65535] { R4099 += 1, R3979 += 1 };
  s2 -> s2 [0, 65535] { R4099 += 1, R3979 += 1, R1456 += 1, R1458 += 1, R1460 += 1, R1461 += 1 };
  s2 -> s7 [0, 65535] { R4099 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s9 [0, 65535] { R4099 += 1, R3979 += 1, R1456 += 1 };
  s2 -> s10 [0, 65535] { R4099 += 1, R3979 += 1, R1456 += 1, R1458 += 1 };
  s2 -> s8 [0, 65535] { R4099 += 1, R3979 += 1 };
  s3 -> s1 [0, 65535] { R4099 += 1, R3979 += 1, R1456 += 1, R1458 += 1, R1459 += 1, R1460 += 1 };
  s3 -> s2 [0, 65535] { R4099 += 1, R3979 += 1, R1456 += 1, R1458 += 1, R1460 += 1, R1461 += 1 };
  s3 -> s7 [0, 65535] { R4099 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R4099 += 1, R3979 += 1, R1455 += 1, R1456 += 1 };
  s3 -> s4 [0, 65535] { R4099 += 1, R3979 += 1, R1456 += 1, R1457 += 1, R1458 += 1 };
  s4 -> s1 [0, 65535] { R4099 += 1, R3979 += 1, R1456 += 1, R1458 += 1, R1459 += 1, R1460 += 1 };
  s4 -> s2 [0, 65535] { R4099 += 1, R3979 += 1, R1456 += 1, R1458 += 1, R1460 += 1, R1461 += 1 };
  s4 -> s7 [0, 65535] { R4099 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4099 += 1, R3979 += 1, R1456 += 1, R1457 += 1, R1458 += 1 };
  s4 -> s8 [0, 65535] { R4099 += 1, R3979 += 1 };
  s5 -> s1 [0, 65535] { R4099 += 1, R3979 += 1, R1456 += 1, R1458 += 1, R1459 += 1, R1460 += 1 };
  s5 -> s2 [0, 65535] { R4099 += 1, R3979 += 1, R1456 += 1, R1458 += 1, R1460 += 1, R1461 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s3 [0, 65535] { R4099 += 1, R3979 += 1, R1455 += 1, R1456 += 1 };
  s5 -> s4 [0, 65535] { R4099 += 1, R3979 += 1, R1456 += 1, R1457 += 1, R1458 += 1 };
  s5 -> s5 [0, 65535] { R4099 += 1, R3978 += 1, R3979 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4099 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R4099 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R4099 += 1, R3979 += 1 };
  s9 -> s7 [0, 65535] { R4099 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s9 [0, 65535] { R4099 += 1, R3979 += 1, R1456 += 1 };
  s9 -> s8 [0, 65535] { R4099 += 1, R3979 += 1 };
  s10 -> s7 [0, 65535] { R4099 += 1 };
  s10 -> s6 [0, 65535];
  s10 -> s9 [0, 65535] { R4099 += 1, R3979 += 1, R1456 += 1 };
  s10 -> s10 [0, 65535] { R4099 += 1, R3979 += 1, R1456 += 1, R1458 += 1 };
  s10 -> s8 [0, 65535] { R4099 += 1, R3979 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_35 {
  init s0;
  s0 -> s0 [0, 65535] { R4100 += 1, R4101 += 1 };
  s0 -> s1 [0, 65535] { R4101 += 1, R3981 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s0 -> s2 [0, 65535] { R4101 += 1, R3980 += 1, R3981 += 1 };
  s0 -> s3 [0, 65535] { R4101 += 1, R3981 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s0 -> s4 [0, 65535] { R4101 += 1, R3981 += 1, R1467 += 1, R1468 += 1 };
  s1 -> s1 [0, 65535] { R4101 += 1, R3981 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s1 -> s8 [0, 65535] { R4101 += 1, R3981 += 1, R1468 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R4101 += 1, R3981 += 1 };
  s1 -> s6 [0, 65535] { R4101 += 1 };
  s2 -> s1 [0, 65535] { R4101 += 1, R3981 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s2 -> s2 [0, 65535] { R4101 += 1, R3980 += 1, R3981 += 1 };
  s2 -> s3 [0, 65535] { R4101 += 1, R3981 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s4 [0, 65535] { R4101 += 1, R3981 += 1, R1467 += 1, R1468 += 1 };
  s3 -> s1 [0, 65535] { R4101 += 1, R3981 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s3 -> s3 [0, 65535] { R4101 += 1, R3981 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s7 [0, 65535] { R4101 += 1, R3981 += 1 };
  s3 -> s6 [0, 65535] { R4101 += 1 };
  s4 -> s1 [0, 65535] { R4101 += 1, R3981 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s4 -> s3 [0, 65535] { R4101 += 1, R3981 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4101 += 1, R3981 += 1, R1467 += 1, R1468 += 1 };
  s4 -> s6 [0, 65535] { R4101 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4101 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R4101 += 1, R3981 += 1 };
  s7 -> s6 [0, 65535] { R4101 += 1 };
  s8 -> s8 [0, 65535] { R4101 += 1, R3981 += 1, R1468 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s7 [0, 65535] { R4101 += 1, R3981 += 1 };
  s8 -> s6 [0, 65535] { R4101 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R4103 += 1, R3983 += 1, R1477 += 1, R1479 += 1 };
  s0 -> s2 [0, 65535] { R4103 += 1, R3983 += 1, R1476 += 1, R1477 += 1 };
  s0 -> s0 [0, 65535] { R4102 += 1, R4103 += 1 };
  s0 -> s3 [0, 65535] { R4103 += 1, R3982 += 1, R3983 += 1 };
  s0 -> s4 [0, 65535] { R4103 += 1, R3983 += 1, R1477 += 1, R1478 += 1, R1479 += 1 };
  s0 -> s5 [70, 70] { R4103 += 1, R3983 += 1, R1477 += 1, R1479 += 1 };
  s0 -> s6 [76, 76] { R4103 += 1, R3983 += 1, R1477 += 1, R1479 += 1 };
  s0 -> s1 [77, 65535] { R4103 += 1, R3983 += 1, R1477 += 1, R1479 += 1 };
  s1 -> s1 [0, 69] { R4103 += 1, R3983 += 1, R1477 += 1, R1479 += 1 };
  s1 -> s5 [70, 70] { R4103 += 1, R3983 += 1, R1477 += 1, R1479 += 1 };
  s1 -> s6 [76, 76] { R4103 += 1, R3983 += 1, R1477 += 1, R1479 += 1 };
  s1 -> s1 [77, 65535] { R4103 += 1, R3983 += 1, R1477 += 1, R1479 += 1 };
  s2 -> s1 [0, 69] { R4103 += 1, R3983 += 1, R1477 += 1, R1479 += 1 };
  s2 -> s2 [0, 65535] { R4103 += 1, R3983 += 1, R1476 += 1, R1477 += 1 };
  s2 -> s4 [0, 65535] { R4103 += 1, R3983 += 1, R1477 += 1, R1478 += 1, R1479 += 1 };
  s2 -> s5 [70, 70] { R4103 += 1, R3983 += 1, R1477 += 1, R1479 += 1 };
  s2 -> s6 [76, 76] { R4103 += 1, R3983 += 1, R1477 += 1, R1479 += 1 };
  s2 -> s1 [77, 65535] { R4103 += 1, R3983 += 1, R1477 += 1, R1479 += 1 };
  s3 -> s1 [0, 69] { R4103 += 1, R3983 += 1, R1477 += 1, R1479 += 1 };
  s3 -> s2 [0, 65535] { R4103 += 1, R3983 += 1, R1476 += 1, R1477 += 1 };
  s3 -> s3 [0, 65535] { R4103 += 1, R3982 += 1, R3983 += 1 };
  s3 -> s4 [0, 65535] { R4103 += 1, R3983 += 1, R1477 += 1, R1478 += 1, R1479 += 1 };
  s3 -> s5 [70, 70] { R4103 += 1, R3983 += 1, R1477 += 1, R1479 += 1 };
  s3 -> s6 [76, 76] { R4103 += 1, R3983 += 1, R1477 += 1, R1479 += 1 };
  s3 -> s1 [77, 65535] { R4103 += 1, R3983 += 1, R1477 += 1, R1479 += 1 };
  s4 -> s1 [0, 69] { R4103 += 1, R3983 += 1, R1477 += 1, R1479 += 1 };
  s4 -> s4 [0, 65535] { R4103 += 1, R3983 += 1, R1477 += 1, R1478 += 1, R1479 += 1 };
  s4 -> s5 [70, 70] { R4103 += 1, R3983 += 1, R1477 += 1, R1479 += 1 };
  s4 -> s6 [76, 76] { R4103 += 1, R3983 += 1, R1477 += 1, R1479 += 1 };
  s4 -> s1 [77, 65535] { R4103 += 1, R3983 += 1, R1477 += 1, R1479 += 1 };
  s5 -> s5 [0, 70] { R4103 += 1, R3983 += 1, R1477 += 1, R1479 += 1 };
  s5 -> s10 [76, 76] { R4103 += 1, R3983 += 1, R1477 += 1, R1479 += 1 };
  s5 -> s5 [77, 65535] { R4103 += 1, R3983 += 1, R1477 += 1, R1479 += 1 };
  s6 -> s6 [0, 69] { R4103 += 1, R3983 += 1, R1477 += 1, R1479 += 1 };
  s6 -> s6 [0, 65535] { R4103 += 1, R3983 += 1, R1477 += 1 };
  s6 -> s7 [0, 65535] { R4103 += 1 };
  s6 -> s8 [0, 65535] { R4103 += 1, R3983 += 1 };
  s6 -> s9 [0, 65535];
  s6 -> s10 [70, 70] { R4103 += 1, R3983 += 1, R1477 += 1, R1479 += 1 };
  s6 -> s11 [70, 70] { R4103 += 1, R3983 += 1, R1477 += 1, R1479 += 1 };
  s6 -> s6 [76, 65535] { R4103 += 1, R3983 += 1, R1477 += 1, R1479 += 1 };
  s7 -> s7 [0, 65535] { R4103 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s7 [0, 65535] { R4103 += 1 };
  s8 -> s8 [0, 65535] { R4103 += 1, R3983 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 70] { R4103 += 1, R3983 += 1, R1477 += 1, R1479 += 1 };
  s10 -> s7 [0, 65535] { R4103 += 1 };
  s10 -> s8 [0, 65535] { R4103 += 1, R3983 += 1 };
  s10 -> s10 [0, 65535] { R4103 += 1, R3983 += 1, R1477 += 1 };
  s10 -> s9 [0, 65535];
  s10 -> s10 [76, 65535] { R4103 += 1, R3983 += 1, R1477 += 1, R1479 += 1 };
  s11 -> s7 [0, 65535] { R4103 += 1 };
  s11 -> s8 [0, 65535] { R4103 += 1, R3983 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R4103 += 1, R3983 += 1, R1477 += 1 };
  accepting s8, s9, s6, s7, s10, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R4105 += 1, R3985 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s0 -> s2 [0, 65535] { R4105 += 1, R3985 += 1, R1486 += 1, R1487 += 1, R1488 += 1 };
  s0 -> s3 [0, 65535] { R4105 += 1, R3985 += 1, R1485 += 1, R1486 += 1 };
  s0 -> s4 [0, 65535] { R4105 += 1, R3984 += 1, R3985 += 1 };
  s0 -> s0 [0, 65535] { R4104 += 1, R4105 += 1 };
  s0 -> s5 [70, 70] { R4105 += 1, R3985 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s0 -> s6 [70, 70] { R4105 += 1, R3985 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s0 -> s1 [71, 65535] { R4105 += 1, R3985 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s1 -> s1 [0, 69] { R4105 += 1, R3985 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R4105 += 1, R3985 += 1, R1486 += 1 };
  s1 -> s8 [0, 65535] { R4105 += 1, R3985 += 1 };
  s1 -> s9 [0, 65535] { R4105 += 1 };
  s1 -> s5 [70, 70] { R4105 += 1, R3985 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s1 -> s6 [70, 70] { R4105 += 1, R3985 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s1 -> s1 [71, 65535] { R4105 += 1, R3985 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s2 -> s1 [0, 69] { R4105 += 1, R3985 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s2 -> s2 [0, 65535] { R4105 += 1, R3985 += 1, R1486 += 1, R1487 += 1, R1488 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s8 [0, 65535] { R4105 += 1, R3985 += 1 };
  s2 -> s9 [0, 65535] { R4105 += 1 };
  s2 -> s5 [70, 70] { R4105 += 1, R3985 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s2 -> s6 [70, 70] { R4105 += 1, R3985 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s2 -> s1 [71, 65535] { R4105 += 1, R3985 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s3 -> s1 [0, 69] { R4105 += 1, R3985 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s3 -> s2 [0, 65535] { R4105 += 1, R3985 += 1, R1486 += 1, R1487 += 1, R1488 += 1 };
  s3 -> s3 [0, 65535] { R4105 += 1, R3985 += 1, R1485 += 1, R1486 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s9 [0, 65535] { R4105 += 1 };
  s3 -> s5 [70, 70] { R4105 += 1, R3985 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s3 -> s6 [70, 70] { R4105 += 1, R3985 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s3 -> s1 [71, 65535] { R4105 += 1, R3985 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s4 -> s1 [0, 69] { R4105 += 1, R3985 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s4 -> s2 [0, 65535] { R4105 += 1, R3985 += 1, R1486 += 1, R1487 += 1, R1488 += 1 };
  s4 -> s3 [0, 65535] { R4105 += 1, R3985 += 1, R1485 += 1, R1486 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R4105 += 1, R3984 += 1, R3985 += 1 };
  s4 -> s5 [70, 70] { R4105 += 1, R3985 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s4 -> s6 [70, 70] { R4105 += 1, R3985 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s4 -> s1 [71, 65535] { R4105 += 1, R3985 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s5 -> s5 [0, 65535] { R4105 += 1, R3985 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R4105 += 1, R3985 += 1 };
  s5 -> s9 [0, 65535] { R4105 += 1 };
  s5 -> s10 [0, 65535] { R4105 += 1, R3985 += 1, R1486 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R4105 += 1, R3985 += 1 };
  s6 -> s6 [0, 65535] { R4105 += 1, R3985 += 1, R1486 += 1 };
  s6 -> s9 [0, 65535] { R4105 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R4105 += 1, R3985 += 1 };
  s8 -> s9 [0, 65535] { R4105 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s9 [0, 65535] { R4105 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s8 [0, 65535] { R4105 += 1, R3985 += 1 };
  s10 -> s9 [0, 65535] { R4105 += 1 };
  s10 -> s10 [0, 65535] { R4105 += 1, R3985 += 1, R1486 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R4107 += 1, R3987 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s0 -> s2 [0, 65535] { R4107 += 1, R3987 += 1, R1495 += 1, R1496 += 1 };
  s0 -> s3 [0, 65535] { R4107 += 1, R3986 += 1, R3987 += 1 };
  s0 -> s0 [0, 65535] { R4106 += 1, R4107 += 1 };
  s0 -> s4 [0, 65535] { R4107 += 1, R3987 += 1, R1496 += 1, R1497 += 1, R1498 += 1 };
  s0 -> s5 [70, 70] { R4107 += 1, R3987 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s0 -> s6 [70, 70] { R4107 += 1, R3987 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s0 -> s1 [71, 65535] { R4107 += 1, R3987 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s1 -> s1 [0, 69] { R4107 += 1, R3987 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s1 -> s7 [0, 65535] { R4107 += 1, R3987 += 1 };
  s1 -> s1 [0, 65535] { R4107 += 1, R3987 += 1, R1496 += 1 };
  s1 -> s8 [0, 65535] { R4107 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s5 [70, 70] { R4107 += 1, R3987 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s1 -> s6 [70, 70] { R4107 += 1, R3987 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s1 -> s1 [71, 65535] { R4107 += 1, R3987 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s2 -> s1 [0, 69] { R4107 += 1, R3987 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s2 -> s2 [0, 65535] { R4107 += 1, R3987 += 1, R1495 += 1, R1496 += 1 };
  s2 -> s8 [0, 65535] { R4107 += 1 };
  s2 -> s9 [0, 65535];
  s2 -> s4 [0, 65535] { R4107 += 1, R3987 += 1, R1496 += 1, R1497 += 1, R1498 += 1 };
  s2 -> s5 [70, 70] { R4107 += 1, R3987 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s2 -> s6 [70, 70] { R4107 += 1, R3987 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s2 -> s1 [71, 65535] { R4107 += 1, R3987 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s3 -> s1 [0, 69] { R4107 += 1, R3987 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s3 -> s2 [0, 65535] { R4107 += 1, R3987 += 1, R1495 += 1, R1496 += 1 };
  s3 -> s3 [0, 65535] { R4107 += 1, R3986 += 1, R3987 += 1 };
  s3 -> s9 [0, 65535];
  s3 -> s4 [0, 65535] { R4107 += 1, R3987 += 1, R1496 += 1, R1497 += 1, R1498 += 1 };
  s3 -> s5 [70, 70] { R4107 += 1, R3987 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s3 -> s6 [70, 70] { R4107 += 1, R3987 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s3 -> s1 [71, 65535] { R4107 += 1, R3987 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s4 -> s1 [0, 69] { R4107 += 1, R3987 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s4 -> s7 [0, 65535] { R4107 += 1, R3987 += 1 };
  s4 -> s8 [0, 65535] { R4107 += 1 };
  s4 -> s9 [0, 65535];
  s4 -> s4 [0, 65535] { R4107 += 1, R3987 += 1, R1496 += 1, R1497 += 1, R1498 += 1 };
  s4 -> s5 [70, 70] { R4107 += 1, R3987 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s4 -> s6 [70, 70] { R4107 += 1, R3987 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s4 -> s1 [71, 65535] { R4107 += 1, R3987 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s5 -> s7 [0, 65535] { R4107 += 1, R3987 += 1 };
  s5 -> s8 [0, 65535] { R4107 += 1 };
  s5 -> s5 [0, 65535] { R4107 += 1, R3987 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s5 -> s9 [0, 65535];
  s5 -> s10 [0, 65535] { R4107 += 1, R3987 += 1, R1496 += 1 };
  s6 -> s7 [0, 65535] { R4107 += 1, R3987 += 1 };
  s6 -> s8 [0, 65535] { R4107 += 1 };
  s6 -> s9 [0, 65535];
  s6 -> s6 [0, 65535] { R4107 += 1, R3987 += 1, R1496 += 1 };
  s7 -> s7 [0, 65535] { R4107 += 1, R3987 += 1 };
  s7 -> s8 [0, 65535] { R4107 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R4107 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  s10 -> s7 [0, 65535] { R4107 += 1, R3987 += 1 };
  s10 -> s8 [0, 65535] { R4107 += 1 };
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R4107 += 1, R3987 += 1, R1496 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 69] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3202 += 1, R3203 += 1 };
  s0 -> s2 [0, 69] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s0 -> s3 [0, 65535] { R4109 += 1, R3988 += 1, R3989 += 1 };
  s0 -> s0 [0, 65535] { R4108 += 1, R4109 += 1 };
  s0 -> s4 [70, 70] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3202 += 1, R3203 += 1 };
  s0 -> s5 [70, 70] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s0 -> s2 [71, 75] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s0 -> s1 [71, 65535] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3202 += 1, R3203 += 1 };
  s0 -> s6 [76, 76] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s0 -> s2 [77, 65535] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s1 -> s1 [0, 69] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3202 += 1, R3203 += 1 };
  s1 -> s2 [0, 69] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s1 -> s4 [70, 70] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3202 += 1, R3203 += 1 };
  s1 -> s5 [70, 70] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s1 -> s2 [71, 75] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s1 -> s1 [71, 65535] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3202 += 1, R3203 += 1 };
  s1 -> s6 [76, 76] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s1 -> s2 [77, 65535] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s2 -> s2 [0, 69] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s2 -> s5 [70, 70] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s2 -> s2 [71, 75] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s2 -> s6 [76, 76] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s2 -> s2 [77, 65535] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s3 -> s1 [0, 69] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3202 += 1, R3203 += 1 };
  s3 -> s2 [0, 69] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s3 -> s3 [0, 65535] { R4109 += 1, R3988 += 1, R3989 += 1 };
  s3 -> s4 [70, 70] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3202 += 1, R3203 += 1 };
  s3 -> s5 [70, 70] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s3 -> s2 [71, 75] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s3 -> s1 [71, 65535] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3202 += 1, R3203 += 1 };
  s3 -> s6 [76, 76] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s3 -> s2 [77, 65535] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s4 -> s5 [0, 75] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s4 -> s4 [0, 65535] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3202 += 1, R3203 += 1 };
  s4 -> s11 [76, 76] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s4 -> s5 [77, 65535] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s5 -> s5 [0, 75] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s5 -> s11 [76, 76] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s5 -> s5 [77, 65535] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s6 -> s6 [0, 69] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s6 -> s6 [0, 65535] { R4109 += 1, R3989 += 1, R3199 += 1 };
  s6 -> s7 [0, 65535] { R4109 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [0, 65535] { R4109 += 1, R3989 += 1 };
  s6 -> s10 [70, 70] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s6 -> s11 [70, 70] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s6 -> s6 [71, 65535] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s7 -> s7 [0, 65535] { R4109 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s7 [0, 65535] { R4109 += 1 };
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R4109 += 1, R3989 += 1 };
  s10 -> s10 [0, 65535] { R4109 += 1, R3989 += 1, R3199 += 1 };
  s10 -> s7 [0, 65535] { R4109 += 1 };
  s10 -> s8 [0, 65535];
  s10 -> s9 [0, 65535] { R4109 += 1, R3989 += 1 };
  s11 -> s7 [0, 65535] { R4109 += 1 };
  s11 -> s12 [0, 65535] { R4109 += 1, R3989 += 1, R3199 += 1 };
  s11 -> s8 [0, 65535];
  s11 -> s11 [0, 65535] { R4109 += 1, R3989 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s11 -> s9 [0, 65535] { R4109 += 1, R3989 += 1 };
  s12 -> s7 [0, 65535] { R4109 += 1 };
  s12 -> s12 [0, 65535] { R4109 += 1, R3989 += 1, R3199 += 1 };
  s12 -> s8 [0, 65535];
  s12 -> s9 [0, 65535] { R4109 += 1, R3989 += 1 };
  accepting s12, s8, s9, s6, s7, s10, s11;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65535] { R4111 += 1, R3990 += 1, R3991 += 1 };
  s0 -> s2 [0, 65535] { R4111 += 1, R3991 += 1 };
  s0 -> s3 [0, 65535] { R4111 += 1, R3991 += 1, R3932 += 1 };
  s0 -> s0 [0, 65535] { R4110 += 1, R4111 += 1 };
  s1 -> s1 [0, 65535] { R4111 += 1, R3990 += 1, R3991 += 1 };
  s1 -> s2 [0, 65535] { R4111 += 1, R3991 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s3 [0, 65535] { R4111 += 1, R3991 += 1, R3932 += 1 };
  s2 -> s2 [0, 65535] { R4111 += 1, R3991 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R4111 += 1 };
  s3 -> s2 [0, 65535] { R4111 += 1, R3991 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R4111 += 1 };
  s3 -> s3 [0, 65535] { R4111 += 1, R3991 += 1, R3932 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4111 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 65535] { R4113 += 1, R3992 += 1, R3993 += 1 };
  s0 -> s2 [0, 65535] { R4113 += 1, R3993 += 1, R27 += 1 };
  s0 -> s0 [0, 65535] { R4112 += 1, R4113 += 1 };
  s1 -> s1 [0, 65535] { R4113 += 1, R3992 += 1, R3993 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R4113 += 1, R3993 += 1, R27 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4113 += 1, R3993 += 1, R27 += 1 };
  s2 -> s4 [0, 65535] { R4113 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4113 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 66] { R4115 += 1, R3995 += 1 };
  s0 -> s2 [0, 65535] { R4115 += 1, R3994 += 1, R3995 += 1 };
  s0 -> s0 [0, 65535] { R4114 += 1, R4115 += 1 };
  s0 -> s3 [67, 67] { R4115 += 1, R3995 += 1 };
  s0 -> s4 [67, 67] { R4115 += 1, R3995 += 1 };
  s0 -> s5 [70, 70] { R4115 += 1, R3995 += 1 };
  s0 -> s1 [71, 65535] { R4115 += 1, R3995 += 1 };
  s1 -> s1 [0, 66] { R4115 += 1, R3995 += 1 };
  s1 -> s3 [67, 67] { R4115 += 1, R3995 += 1 };
  s1 -> s4 [67, 67] { R4115 += 1, R3995 += 1 };
  s1 -> s5 [70, 70] { R4115 += 1, R3995 += 1 };
  s1 -> s1 [71, 65535] { R4115 += 1, R3995 += 1 };
  s2 -> s1 [0, 66] { R4115 += 1, R3995 += 1 };
  s2 -> s2 [0, 65535] { R4115 += 1, R3994 += 1, R3995 += 1 };
  s2 -> s3 [67, 67] { R4115 += 1, R3995 += 1 };
  s2 -> s4 [67, 67] { R4115 += 1, R3995 += 1 };
  s2 -> s5 [70, 70] { R4115 += 1, R3995 += 1 };
  s2 -> s1 [71, 65535] { R4115 += 1, R3995 += 1 };
  s3 -> s3 [0, 67] { R4115 += 1, R3995 += 1 };
  s3 -> s7 [70, 70] { R4115 += 1, R3995 += 1 };
  s3 -> s3 [71, 65535] { R4115 += 1, R3995 += 1 };
  s5 -> s5 [0, 66] { R4115 += 1, R3995 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4115 += 1 };
  s5 -> s7 [67, 67] { R4115 += 1, R3995 += 1 };
  s5 -> s8 [67, 67] { R4115 += 1, R3995 += 1 };
  s5 -> s5 [70, 65535] { R4115 += 1, R3995 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 67] { R4115 += 1, R3995 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4115 += 1 };
  s7 -> s7 [70, 65535] { R4115 += 1, R3995 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R4115 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 66] { R4117 += 1, R3997 += 1, R1330 += 1 };
  s0 -> s0 [0, 65535] { R4116 += 1, R4117 += 1 };
  s0 -> s2 [0, 65535] { R4117 += 1, R3996 += 1, R3997 += 1 };
  s0 -> s3 [67, 67] { R4117 += 1, R3997 += 1, R1330 += 1 };
  s0 -> s4 [67, 67] { R4117 += 1, R3997 += 1, R1330 += 1 };
  s0 -> s1 [68, 65535] { R4117 += 1, R3997 += 1, R1330 += 1 };
  s1 -> s1 [0, 66] { R4117 += 1, R3997 += 1, R1330 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4117 += 1 };
  s1 -> s3 [67, 67] { R4117 += 1, R3997 += 1, R1330 += 1 };
  s1 -> s4 [67, 67] { R4117 += 1, R3997 += 1, R1330 += 1 };
  s1 -> s1 [68, 65535] { R4117 += 1, R3997 += 1, R1330 += 1 };
  s2 -> s1 [0, 66] { R4117 += 1, R3997 += 1, R1330 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4117 += 1, R3996 += 1, R3997 += 1 };
  s2 -> s3 [67, 67] { R4117 += 1, R3997 += 1, R1330 += 1 };
  s2 -> s4 [67, 67] { R4117 += 1, R3997 += 1, R1330 += 1 };
  s2 -> s1 [68, 65535] { R4117 += 1, R3997 += 1, R1330 += 1 };
  s3 -> s6 [0, 65535] { R4117 += 1 };
  s3 -> s3 [0, 65535] { R4117 += 1, R3997 += 1, R1330 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4117 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4117 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 66] { R4119 += 1, R3999 += 1, R1332 += 1 };
  s0 -> s2 [0, 65535] { R4119 += 1, R3998 += 1, R3999 += 1 };
  s0 -> s0 [0, 65535] { R4118 += 1, R4119 += 1 };
  s0 -> s3 [67, 67] { R4119 += 1, R3999 += 1, R1332 += 1 };
  s0 -> s4 [67, 67] { R4119 += 1, R3999 += 1, R1332 += 1 };
  s0 -> s1 [68, 65535] { R4119 += 1, R3999 += 1, R1332 += 1 };
  s1 -> s1 [0, 66] { R4119 += 1, R3999 += 1, R1332 += 1 };
  s1 -> s1 [0, 65535] { R4119 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R4119 += 1, R3999 += 1, R1332 += 1 };
  s1 -> s4 [67, 67] { R4119 += 1, R3999 += 1, R1332 += 1 };
  s1 -> s1 [68, 65535] { R4119 += 1, R3999 += 1, R1332 += 1 };
  s2 -> s1 [0, 66] { R4119 += 1, R3999 += 1, R1332 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4119 += 1, R3998 += 1, R3999 += 1 };
  s2 -> s3 [67, 67] { R4119 += 1, R3999 += 1, R1332 += 1 };
  s2 -> s4 [67, 67] { R4119 += 1, R3999 += 1, R1332 += 1 };
  s2 -> s1 [68, 65535] { R4119 += 1, R3999 += 1, R1332 += 1 };
  s3 -> s3 [0, 65535] { R4119 += 1, R3999 += 1, R1332 += 1 };
  s3 -> s6 [0, 65535] { R4119 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4119 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4119 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 66] { R4121 += 1, R4001 += 1, R1334 += 1, R1335 += 1 };
  s0 -> s2 [0, 65535] { R4121 += 1, R4000 += 1, R4001 += 1 };
  s0 -> s0 [0, 65535] { R4120 += 1, R4121 += 1 };
  s0 -> s3 [67, 67] { R4121 += 1, R4001 += 1, R1334 += 1, R1335 += 1 };
  s0 -> s4 [67, 67] { R4121 += 1, R4001 += 1, R1334 += 1, R1335 += 1 };
  s0 -> s1 [68, 65535] { R4121 += 1, R4001 += 1, R1334 += 1, R1335 += 1 };
  s1 -> s1 [0, 66] { R4121 += 1, R4001 += 1, R1334 += 1, R1335 += 1 };
  s1 -> s1 [0, 65535] { R4121 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R4121 += 1, R4001 += 1, R1334 += 1, R1335 += 1 };
  s1 -> s4 [67, 67] { R4121 += 1, R4001 += 1, R1334 += 1, R1335 += 1 };
  s1 -> s1 [68, 65535] { R4121 += 1, R4001 += 1, R1334 += 1, R1335 += 1 };
  s2 -> s1 [0, 66] { R4121 += 1, R4001 += 1, R1334 += 1, R1335 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R4121 += 1, R4000 += 1, R4001 += 1 };
  s2 -> s3 [67, 67] { R4121 += 1, R4001 += 1, R1334 += 1, R1335 += 1 };
  s2 -> s4 [67, 67] { R4121 += 1, R4001 += 1, R1334 += 1, R1335 += 1 };
  s2 -> s1 [68, 65535] { R4121 += 1, R4001 += 1, R1334 += 1, R1335 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R4121 += 1 };
  s4 -> s5 [0, 65535] { R4121 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4121 += 1, R4001 += 1, R1334 += 1, R1335 += 1 };
  s5 -> s5 [0, 65535] { R4121 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 66] { R4123 += 1, R4003 += 1, R1340 += 1, R1341 += 1 };
  s0 -> s0 [0, 65535] { R4122 += 1, R4123 += 1 };
  s0 -> s2 [0, 65535] { R4123 += 1, R4002 += 1, R4003 += 1 };
  s0 -> s3 [67, 67] { R4123 += 1, R4003 += 1, R1340 += 1, R1341 += 1 };
  s0 -> s4 [67, 67] { R4123 += 1, R4003 += 1, R1340 += 1, R1341 += 1 };
  s0 -> s1 [68, 65535] { R4123 += 1, R4003 += 1, R1340 += 1, R1341 += 1 };
  s1 -> s1 [0, 66] { R4123 += 1, R4003 += 1, R1340 += 1, R1341 += 1 };
  s1 -> s1 [0, 65535] { R4123 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R4123 += 1, R4003 += 1, R1340 += 1, R1341 += 1 };
  s1 -> s4 [67, 67] { R4123 += 1, R4003 += 1, R1340 += 1, R1341 += 1 };
  s1 -> s1 [68, 65535] { R4123 += 1, R4003 += 1, R1340 += 1, R1341 += 1 };
  s2 -> s1 [0, 66] { R4123 += 1, R4003 += 1, R1340 += 1, R1341 += 1 };
  s2 -> s2 [0, 65535] { R4123 += 1, R4002 += 1, R4003 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R4123 += 1, R4003 += 1, R1340 += 1, R1341 += 1 };
  s2 -> s4 [67, 67] { R4123 += 1, R4003 += 1, R1340 += 1, R1341 += 1 };
  s2 -> s1 [68, 65535] { R4123 += 1, R4003 += 1, R1340 += 1, R1341 += 1 };
  s3 -> s3 [0, 65535] { R4123 += 1, R4003 += 1, R1340 += 1, R1341 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R4123 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4123 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4123 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 66] { R4125 += 1, R4005 += 1, R1344 += 1, R1345 += 1 };
  s0 -> s2 [0, 65535] { R4125 += 1, R4004 += 1, R4005 += 1 };
  s0 -> s0 [0, 65535] { R4124 += 1, R4125 += 1 };
  s0 -> s3 [67, 67] { R4125 += 1, R4005 += 1, R1344 += 1, R1345 += 1 };
  s0 -> s4 [67, 67] { R4125 += 1, R4005 += 1, R1344 += 1, R1345 += 1 };
  s0 -> s1 [68, 65535] { R4125 += 1, R4005 += 1, R1344 += 1, R1345 += 1 };
  s1 -> s1 [0, 66] { R4125 += 1, R4005 += 1, R1344 += 1, R1345 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4125 += 1 };
  s1 -> s3 [67, 67] { R4125 += 1, R4005 += 1, R1344 += 1, R1345 += 1 };
  s1 -> s4 [67, 67] { R4125 += 1, R4005 += 1, R1344 += 1, R1345 += 1 };
  s1 -> s1 [68, 65535] { R4125 += 1, R4005 += 1, R1344 += 1, R1345 += 1 };
  s2 -> s1 [0, 66] { R4125 += 1, R4005 += 1, R1344 += 1, R1345 += 1 };
  s2 -> s2 [0, 65535] { R4125 += 1, R4004 += 1, R4005 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R4125 += 1, R4005 += 1, R1344 += 1, R1345 += 1 };
  s2 -> s4 [67, 67] { R4125 += 1, R4005 += 1, R1344 += 1, R1345 += 1 };
  s2 -> s1 [68, 65535] { R4125 += 1, R4005 += 1, R1344 += 1, R1345 += 1 };
  s3 -> s6 [0, 65535] { R4125 += 1 };
  s3 -> s3 [0, 65535] { R4125 += 1, R4005 += 1, R1344 += 1, R1345 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4125 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4125 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 66] { R4127 += 1, R4007 += 1, R1350 += 1, R1351 += 1 };
  s0 -> s2 [0, 65535] { R4127 += 1, R4006 += 1, R4007 += 1 };
  s0 -> s0 [0, 65535] { R4126 += 1, R4127 += 1 };
  s0 -> s3 [67, 67] { R4127 += 1, R4007 += 1, R1350 += 1, R1351 += 1 };
  s0 -> s4 [67, 67] { R4127 += 1, R4007 += 1, R1350 += 1, R1351 += 1 };
  s0 -> s1 [68, 65535] { R4127 += 1, R4007 += 1, R1350 += 1, R1351 += 1 };
  s1 -> s1 [0, 66] { R4127 += 1, R4007 += 1, R1350 += 1, R1351 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4127 += 1 };
  s1 -> s3 [67, 67] { R4127 += 1, R4007 += 1, R1350 += 1, R1351 += 1 };
  s1 -> s4 [67, 67] { R4127 += 1, R4007 += 1, R1350 += 1, R1351 += 1 };
  s1 -> s1 [68, 65535] { R4127 += 1, R4007 += 1, R1350 += 1, R1351 += 1 };
  s2 -> s1 [0, 66] { R4127 += 1, R4007 += 1, R1350 += 1, R1351 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4127 += 1, R4006 += 1, R4007 += 1 };
  s2 -> s3 [67, 67] { R4127 += 1, R4007 += 1, R1350 += 1, R1351 += 1 };
  s2 -> s4 [67, 67] { R4127 += 1, R4007 += 1, R1350 += 1, R1351 += 1 };
  s2 -> s1 [68, 65535] { R4127 += 1, R4007 += 1, R1350 += 1, R1351 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R4127 += 1 };
  s3 -> s3 [0, 65535] { R4127 += 1, R4007 += 1, R1350 += 1, R1351 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4127 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4127 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 66] { R4129 += 1, R4009 += 1, R1356 += 1, R1357 += 1 };
  s0 -> s0 [0, 65535] { R4128 += 1, R4129 += 1 };
  s0 -> s2 [0, 65535] { R4129 += 1, R4008 += 1, R4009 += 1 };
  s0 -> s3 [67, 67] { R4129 += 1, R4009 += 1, R1356 += 1, R1357 += 1 };
  s0 -> s4 [67, 67] { R4129 += 1, R4009 += 1, R1356 += 1, R1357 += 1 };
  s0 -> s1 [68, 65535] { R4129 += 1, R4009 += 1, R1356 += 1, R1357 += 1 };
  s1 -> s1 [0, 66] { R4129 += 1, R4009 += 1, R1356 += 1, R1357 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4129 += 1 };
  s1 -> s3 [67, 67] { R4129 += 1, R4009 += 1, R1356 += 1, R1357 += 1 };
  s1 -> s4 [67, 67] { R4129 += 1, R4009 += 1, R1356 += 1, R1357 += 1 };
  s1 -> s1 [68, 65535] { R4129 += 1, R4009 += 1, R1356 += 1, R1357 += 1 };
  s2 -> s1 [0, 66] { R4129 += 1, R4009 += 1, R1356 += 1, R1357 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4129 += 1, R4008 += 1, R4009 += 1 };
  s2 -> s3 [67, 67] { R4129 += 1, R4009 += 1, R1356 += 1, R1357 += 1 };
  s2 -> s4 [67, 67] { R4129 += 1, R4009 += 1, R1356 += 1, R1357 += 1 };
  s2 -> s1 [68, 65535] { R4129 += 1, R4009 += 1, R1356 += 1, R1357 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4129 += 1, R4009 += 1, R1356 += 1, R1357 += 1 };
  s3 -> s6 [0, 65535] { R4129 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4129 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4129 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 66] { R4131 += 1, R4011 += 1, R1364 += 1, R1365 += 1 };
  s0 -> s0 [0, 65535] { R4130 += 1, R4131 += 1 };
  s0 -> s2 [0, 65535] { R4131 += 1, R4010 += 1, R4011 += 1 };
  s0 -> s3 [67, 67] { R4131 += 1, R4011 += 1, R1364 += 1, R1365 += 1 };
  s0 -> s4 [67, 67] { R4131 += 1, R4011 += 1, R1364 += 1, R1365 += 1 };
  s0 -> s1 [68, 65535] { R4131 += 1, R4011 += 1, R1364 += 1, R1365 += 1 };
  s1 -> s1 [0, 66] { R4131 += 1, R4011 += 1, R1364 += 1, R1365 += 1 };
  s1 -> s1 [0, 65535] { R4131 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R4131 += 1, R4011 += 1, R1364 += 1, R1365 += 1 };
  s1 -> s4 [67, 67] { R4131 += 1, R4011 += 1, R1364 += 1, R1365 += 1 };
  s1 -> s1 [68, 65535] { R4131 += 1, R4011 += 1, R1364 += 1, R1365 += 1 };
  s2 -> s1 [0, 66] { R4131 += 1, R4011 += 1, R1364 += 1, R1365 += 1 };
  s2 -> s2 [0, 65535] { R4131 += 1, R4010 += 1, R4011 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R4131 += 1, R4011 += 1, R1364 += 1, R1365 += 1 };
  s2 -> s4 [67, 67] { R4131 += 1, R4011 += 1, R1364 += 1, R1365 += 1 };
  s2 -> s1 [68, 65535] { R4131 += 1, R4011 += 1, R1364 += 1, R1365 += 1 };
  s3 -> s3 [0, 65535] { R4131 += 1, R4011 += 1, R1364 += 1, R1365 += 1 };
  s3 -> s6 [0, 65535] { R4131 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4131 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4131 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 66] { R4133 += 1, R4013 += 1, R1374 += 1, R1375 += 1 };
  s0 -> s0 [0, 65535] { R4132 += 1, R4133 += 1 };
  s0 -> s2 [0, 65535] { R4133 += 1, R4012 += 1, R4013 += 1 };
  s0 -> s3 [67, 67] { R4133 += 1, R4013 += 1, R1374 += 1, R1375 += 1 };
  s0 -> s4 [67, 67] { R4133 += 1, R4013 += 1, R1374 += 1, R1375 += 1 };
  s0 -> s1 [68, 65535] { R4133 += 1, R4013 += 1, R1374 += 1, R1375 += 1 };
  s1 -> s1 [0, 66] { R4133 += 1, R4013 += 1, R1374 += 1, R1375 += 1 };
  s1 -> s1 [0, 65535] { R4133 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R4133 += 1, R4013 += 1, R1374 += 1, R1375 += 1 };
  s1 -> s4 [67, 67] { R4133 += 1, R4013 += 1, R1374 += 1, R1375 += 1 };
  s1 -> s1 [68, 65535] { R4133 += 1, R4013 += 1, R1374 += 1, R1375 += 1 };
  s2 -> s1 [0, 66] { R4133 += 1, R4013 += 1, R1374 += 1, R1375 += 1 };
  s2 -> s2 [0, 65535] { R4133 += 1, R4012 += 1, R4013 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R4133 += 1, R4013 += 1, R1374 += 1, R1375 += 1 };
  s2 -> s4 [67, 67] { R4133 += 1, R4013 += 1, R1374 += 1, R1375 += 1 };
  s2 -> s1 [68, 65535] { R4133 += 1, R4013 += 1, R1374 += 1, R1375 += 1 };
  s3 -> s3 [0, 65535] { R4133 += 1, R4013 += 1, R1374 += 1, R1375 += 1 };
  s3 -> s6 [0, 65535] { R4133 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4133 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4133 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 66] { R4135 += 1, R4015 += 1, R1378 += 1, R1379 += 1 };
  s0 -> s0 [0, 65535] { R4134 += 1, R4135 += 1 };
  s0 -> s2 [0, 65535] { R4135 += 1, R4014 += 1, R4015 += 1 };
  s0 -> s3 [67, 67] { R4135 += 1, R4015 += 1, R1378 += 1, R1379 += 1 };
  s0 -> s4 [67, 67] { R4135 += 1, R4015 += 1, R1378 += 1, R1379 += 1 };
  s0 -> s1 [68, 65535] { R4135 += 1, R4015 += 1, R1378 += 1, R1379 += 1 };
  s1 -> s1 [0, 66] { R4135 += 1, R4015 += 1, R1378 += 1, R1379 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4135 += 1 };
  s1 -> s3 [67, 67] { R4135 += 1, R4015 += 1, R1378 += 1, R1379 += 1 };
  s1 -> s4 [67, 67] { R4135 += 1, R4015 += 1, R1378 += 1, R1379 += 1 };
  s1 -> s1 [68, 65535] { R4135 += 1, R4015 += 1, R1378 += 1, R1379 += 1 };
  s2 -> s1 [0, 66] { R4135 += 1, R4015 += 1, R1378 += 1, R1379 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4135 += 1, R4014 += 1, R4015 += 1 };
  s2 -> s3 [67, 67] { R4135 += 1, R4015 += 1, R1378 += 1, R1379 += 1 };
  s2 -> s4 [67, 67] { R4135 += 1, R4015 += 1, R1378 += 1, R1379 += 1 };
  s2 -> s1 [68, 65535] { R4135 += 1, R4015 += 1, R1378 += 1, R1379 += 1 };
  s3 -> s6 [0, 65535] { R4135 += 1 };
  s3 -> s3 [0, 65535] { R4135 += 1, R4015 += 1, R1378 += 1, R1379 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4135 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4135 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 66] { R4137 += 1, R4017 += 1, R1384 += 1, R1385 += 1 };
  s0 -> s2 [0, 65535] { R4137 += 1, R4016 += 1, R4017 += 1 };
  s0 -> s0 [0, 65535] { R4136 += 1, R4137 += 1 };
  s0 -> s3 [67, 67] { R4137 += 1, R4017 += 1, R1384 += 1, R1385 += 1 };
  s0 -> s4 [67, 67] { R4137 += 1, R4017 += 1, R1384 += 1, R1385 += 1 };
  s0 -> s1 [68, 65535] { R4137 += 1, R4017 += 1, R1384 += 1, R1385 += 1 };
  s1 -> s1 [0, 66] { R4137 += 1, R4017 += 1, R1384 += 1, R1385 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R4137 += 1 };
  s1 -> s3 [67, 67] { R4137 += 1, R4017 += 1, R1384 += 1, R1385 += 1 };
  s1 -> s4 [67, 67] { R4137 += 1, R4017 += 1, R1384 += 1, R1385 += 1 };
  s1 -> s1 [68, 65535] { R4137 += 1, R4017 += 1, R1384 += 1, R1385 += 1 };
  s2 -> s1 [0, 66] { R4137 += 1, R4017 += 1, R1384 += 1, R1385 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R4137 += 1, R4016 += 1, R4017 += 1 };
  s2 -> s3 [67, 67] { R4137 += 1, R4017 += 1, R1384 += 1, R1385 += 1 };
  s2 -> s4 [67, 67] { R4137 += 1, R4017 += 1, R1384 += 1, R1385 += 1 };
  s2 -> s1 [68, 65535] { R4137 += 1, R4017 += 1, R1384 += 1, R1385 += 1 };
  s3 -> s3 [0, 65535] { R4137 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R4137 += 1 };
  s4 -> s4 [0, 65535] { R4137 += 1, R4017 += 1, R1384 += 1, R1385 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4137 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_54 {
  init s0;
  s0 -> s1 [0, 66] { R4139 += 1, R4019 += 1, R1390 += 1, R1391 += 1 };
  s0 -> s0 [0, 65535] { R4138 += 1, R4139 += 1 };
  s0 -> s2 [0, 65535] { R4139 += 1, R4018 += 1, R4019 += 1 };
  s0 -> s3 [67, 67] { R4139 += 1, R4019 += 1, R1390 += 1, R1391 += 1 };
  s0 -> s4 [67, 67] { R4139 += 1, R4019 += 1, R1390 += 1, R1391 += 1 };
  s0 -> s1 [68, 65535] { R4139 += 1, R4019 += 1, R1390 += 1, R1391 += 1 };
  s1 -> s1 [0, 66] { R4139 += 1, R4019 += 1, R1390 += 1, R1391 += 1 };
  s1 -> s1 [0, 65535] { R4139 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R4139 += 1, R4019 += 1, R1390 += 1, R1391 += 1 };
  s1 -> s4 [67, 67] { R4139 += 1, R4019 += 1, R1390 += 1, R1391 += 1 };
  s1 -> s1 [68, 65535] { R4139 += 1, R4019 += 1, R1390 += 1, R1391 += 1 };
  s2 -> s1 [0, 66] { R4139 += 1, R4019 += 1, R1390 += 1, R1391 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R4139 += 1, R4018 += 1, R4019 += 1 };
  s2 -> s3 [67, 67] { R4139 += 1, R4019 += 1, R1390 += 1, R1391 += 1 };
  s2 -> s4 [67, 67] { R4139 += 1, R4019 += 1, R1390 += 1, R1391 += 1 };
  s2 -> s1 [68, 65535] { R4139 += 1, R4019 += 1, R1390 += 1, R1391 += 1 };
  s3 -> s3 [0, 65535] { R4139 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R4139 += 1 };
  s4 -> s4 [0, 65535] { R4139 += 1, R4019 += 1, R1390 += 1, R1391 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4139 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_55 {
  init s0;
  s0 -> s1 [0, 66] { R4141 += 1, R4021 += 1, R1398 += 1, R1399 += 1 };
  s0 -> s2 [0, 65535] { R4141 += 1, R4020 += 1, R4021 += 1 };
  s0 -> s0 [0, 65535] { R4140 += 1, R4141 += 1 };
  s0 -> s3 [67, 67] { R4141 += 1, R4021 += 1, R1398 += 1, R1399 += 1 };
  s0 -> s4 [67, 67] { R4141 += 1, R4021 += 1, R1398 += 1, R1399 += 1 };
  s0 -> s1 [68, 65535] { R4141 += 1, R4021 += 1, R1398 += 1, R1399 += 1 };
  s1 -> s1 [0, 66] { R4141 += 1, R4021 += 1, R1398 += 1, R1399 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R4141 += 1 };
  s1 -> s3 [67, 67] { R4141 += 1, R4021 += 1, R1398 += 1, R1399 += 1 };
  s1 -> s4 [67, 67] { R4141 += 1, R4021 += 1, R1398 += 1, R1399 += 1 };
  s1 -> s1 [68, 65535] { R4141 += 1, R4021 += 1, R1398 += 1, R1399 += 1 };
  s2 -> s1 [0, 66] { R4141 += 1, R4021 += 1, R1398 += 1, R1399 += 1 };
  s2 -> s2 [0, 65535] { R4141 += 1, R4020 += 1, R4021 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R4141 += 1, R4021 += 1, R1398 += 1, R1399 += 1 };
  s2 -> s4 [67, 67] { R4141 += 1, R4021 += 1, R1398 += 1, R1399 += 1 };
  s2 -> s1 [68, 65535] { R4141 += 1, R4021 += 1, R1398 += 1, R1399 += 1 };
  s3 -> s3 [0, 65535] { R4141 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R4141 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4141 += 1, R4021 += 1, R1398 += 1, R1399 += 1 };
  s5 -> s5 [0, 65535] { R4141 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_56 {
  init s0;
  s0 -> s1 [0, 66] { R4143 += 1, R4023 += 1, R1408 += 1, R1409 += 1 };
  s0 -> s2 [0, 65535] { R4143 += 1, R4022 += 1, R4023 += 1 };
  s0 -> s0 [0, 65535] { R4142 += 1, R4143 += 1 };
  s0 -> s3 [67, 67] { R4143 += 1, R4023 += 1, R1408 += 1, R1409 += 1 };
  s0 -> s4 [67, 67] { R4143 += 1, R4023 += 1, R1408 += 1, R1409 += 1 };
  s0 -> s1 [68, 65535] { R4143 += 1, R4023 += 1, R1408 += 1, R1409 += 1 };
  s1 -> s1 [0, 66] { R4143 += 1, R4023 += 1, R1408 += 1, R1409 += 1 };
  s1 -> s1 [0, 65535] { R4143 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R4143 += 1, R4023 += 1, R1408 += 1, R1409 += 1 };
  s1 -> s4 [67, 67] { R4143 += 1, R4023 += 1, R1408 += 1, R1409 += 1 };
  s1 -> s1 [68, 65535] { R4143 += 1, R4023 += 1, R1408 += 1, R1409 += 1 };
  s2 -> s1 [0, 66] { R4143 += 1, R4023 += 1, R1408 += 1, R1409 += 1 };
  s2 -> s2 [0, 65535] { R4143 += 1, R4022 += 1, R4023 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R4143 += 1, R4023 += 1, R1408 += 1, R1409 += 1 };
  s2 -> s4 [67, 67] { R4143 += 1, R4023 += 1, R1408 += 1, R1409 += 1 };
  s2 -> s1 [68, 65535] { R4143 += 1, R4023 += 1, R1408 += 1, R1409 += 1 };
  s3 -> s6 [0, 65535] { R4143 += 1 };
  s3 -> s3 [0, 65535] { R4143 += 1, R4023 += 1, R1408 += 1, R1409 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4143 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4143 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_57 {
  init s0;
  s0 -> s1 [0, 66] { R4145 += 1, R4025 += 1, R1416 += 1, R1417 += 1 };
  s0 -> s0 [0, 65535] { R4144 += 1, R4145 += 1 };
  s0 -> s2 [0, 65535] { R4145 += 1, R4024 += 1, R4025 += 1 };
  s0 -> s3 [67, 67] { R4145 += 1, R4025 += 1, R1416 += 1, R1417 += 1 };
  s0 -> s4 [67, 67] { R4145 += 1, R4025 += 1, R1416 += 1, R1417 += 1 };
  s0 -> s1 [68, 65535] { R4145 += 1, R4025 += 1, R1416 += 1, R1417 += 1 };
  s1 -> s1 [0, 66] { R4145 += 1, R4025 += 1, R1416 += 1, R1417 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4145 += 1 };
  s1 -> s3 [67, 67] { R4145 += 1, R4025 += 1, R1416 += 1, R1417 += 1 };
  s1 -> s4 [67, 67] { R4145 += 1, R4025 += 1, R1416 += 1, R1417 += 1 };
  s1 -> s1 [68, 65535] { R4145 += 1, R4025 += 1, R1416 += 1, R1417 += 1 };
  s2 -> s1 [0, 66] { R4145 += 1, R4025 += 1, R1416 += 1, R1417 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4145 += 1, R4024 += 1, R4025 += 1 };
  s2 -> s3 [67, 67] { R4145 += 1, R4025 += 1, R1416 += 1, R1417 += 1 };
  s2 -> s4 [67, 67] { R4145 += 1, R4025 += 1, R1416 += 1, R1417 += 1 };
  s2 -> s1 [68, 65535] { R4145 += 1, R4025 += 1, R1416 += 1, R1417 += 1 };
  s3 -> s3 [0, 65535] { R4145 += 1, R4025 += 1, R1416 += 1, R1417 += 1 };
  s3 -> s6 [0, 65535] { R4145 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4145 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4145 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_58 {
  init s0;
  s0 -> s1 [0, 66] { R4147 += 1, R4027 += 1, R1426 += 1, R1427 += 1 };
  s0 -> s2 [0, 65535] { R4147 += 1, R4026 += 1, R4027 += 1 };
  s0 -> s0 [0, 65535] { R4146 += 1, R4147 += 1 };
  s0 -> s3 [67, 67] { R4147 += 1, R4027 += 1, R1426 += 1, R1427 += 1 };
  s0 -> s4 [67, 67] { R4147 += 1, R4027 += 1, R1426 += 1, R1427 += 1 };
  s0 -> s1 [68, 65535] { R4147 += 1, R4027 += 1, R1426 += 1, R1427 += 1 };
  s1 -> s1 [0, 66] { R4147 += 1, R4027 += 1, R1426 += 1, R1427 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4147 += 1 };
  s1 -> s3 [67, 67] { R4147 += 1, R4027 += 1, R1426 += 1, R1427 += 1 };
  s1 -> s4 [67, 67] { R4147 += 1, R4027 += 1, R1426 += 1, R1427 += 1 };
  s1 -> s1 [68, 65535] { R4147 += 1, R4027 += 1, R1426 += 1, R1427 += 1 };
  s2 -> s1 [0, 66] { R4147 += 1, R4027 += 1, R1426 += 1, R1427 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4147 += 1, R4026 += 1, R4027 += 1 };
  s2 -> s3 [67, 67] { R4147 += 1, R4027 += 1, R1426 += 1, R1427 += 1 };
  s2 -> s4 [67, 67] { R4147 += 1, R4027 += 1, R1426 += 1, R1427 += 1 };
  s2 -> s1 [68, 65535] { R4147 += 1, R4027 += 1, R1426 += 1, R1427 += 1 };
  s3 -> s6 [0, 65535] { R4147 += 1 };
  s3 -> s3 [0, 65535] { R4147 += 1, R4027 += 1, R1426 += 1, R1427 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4147 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4147 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_59 {
  init s0;
  s0 -> s1 [0, 66] { R4149 += 1, R4029 += 1, R1436 += 1, R1437 += 1 };
  s0 -> s2 [0, 65535] { R4149 += 1, R4028 += 1, R4029 += 1 };
  s0 -> s0 [0, 65535] { R4148 += 1, R4149 += 1 };
  s0 -> s3 [67, 67] { R4149 += 1, R4029 += 1, R1436 += 1, R1437 += 1 };
  s0 -> s4 [67, 67] { R4149 += 1, R4029 += 1, R1436 += 1, R1437 += 1 };
  s0 -> s1 [68, 65535] { R4149 += 1, R4029 += 1, R1436 += 1, R1437 += 1 };
  s1 -> s1 [0, 66] { R4149 += 1, R4029 += 1, R1436 += 1, R1437 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4149 += 1 };
  s1 -> s3 [67, 67] { R4149 += 1, R4029 += 1, R1436 += 1, R1437 += 1 };
  s1 -> s4 [67, 67] { R4149 += 1, R4029 += 1, R1436 += 1, R1437 += 1 };
  s1 -> s1 [68, 65535] { R4149 += 1, R4029 += 1, R1436 += 1, R1437 += 1 };
  s2 -> s1 [0, 66] { R4149 += 1, R4029 += 1, R1436 += 1, R1437 += 1 };
  s2 -> s2 [0, 65535] { R4149 += 1, R4028 += 1, R4029 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R4149 += 1, R4029 += 1, R1436 += 1, R1437 += 1 };
  s2 -> s4 [67, 67] { R4149 += 1, R4029 += 1, R1436 += 1, R1437 += 1 };
  s2 -> s1 [68, 65535] { R4149 += 1, R4029 += 1, R1436 += 1, R1437 += 1 };
  s3 -> s6 [0, 65535] { R4149 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4149 += 1, R4029 += 1, R1436 += 1, R1437 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4149 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4149 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_60 {
  init s0;
  s0 -> s1 [0, 66] { R4151 += 1, R4031 += 1, R1448 += 1, R1449 += 1 };
  s0 -> s0 [0, 65535] { R4150 += 1, R4151 += 1 };
  s0 -> s2 [0, 65535] { R4151 += 1, R4030 += 1, R4031 += 1 };
  s0 -> s3 [67, 67] { R4151 += 1, R4031 += 1, R1448 += 1, R1449 += 1 };
  s0 -> s4 [67, 67] { R4151 += 1, R4031 += 1, R1448 += 1, R1449 += 1 };
  s0 -> s1 [68, 65535] { R4151 += 1, R4031 += 1, R1448 += 1, R1449 += 1 };
  s1 -> s1 [0, 66] { R4151 += 1, R4031 += 1, R1448 += 1, R1449 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4151 += 1 };
  s1 -> s3 [67, 67] { R4151 += 1, R4031 += 1, R1448 += 1, R1449 += 1 };
  s1 -> s4 [67, 67] { R4151 += 1, R4031 += 1, R1448 += 1, R1449 += 1 };
  s1 -> s1 [68, 65535] { R4151 += 1, R4031 += 1, R1448 += 1, R1449 += 1 };
  s2 -> s1 [0, 66] { R4151 += 1, R4031 += 1, R1448 += 1, R1449 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4151 += 1, R4030 += 1, R4031 += 1 };
  s2 -> s3 [67, 67] { R4151 += 1, R4031 += 1, R1448 += 1, R1449 += 1 };
  s2 -> s4 [67, 67] { R4151 += 1, R4031 += 1, R1448 += 1, R1449 += 1 };
  s2 -> s1 [68, 65535] { R4151 += 1, R4031 += 1, R1448 += 1, R1449 += 1 };
  s3 -> s3 [0, 65535] { R4151 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4151 += 1, R4031 += 1, R1448 += 1, R1449 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4151 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4151 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_61 {
  init s0;
  s0 -> s1 [0, 66] { R4153 += 1, R4033 += 1, R1462 += 1, R1463 += 1 };
  s0 -> s0 [0, 65535] { R4152 += 1, R4153 += 1 };
  s0 -> s2 [0, 65535] { R4153 += 1, R4032 += 1, R4033 += 1 };
  s0 -> s3 [67, 67] { R4153 += 1, R4033 += 1, R1462 += 1, R1463 += 1 };
  s0 -> s4 [67, 67] { R4153 += 1, R4033 += 1, R1462 += 1, R1463 += 1 };
  s0 -> s1 [68, 65535] { R4153 += 1, R4033 += 1, R1462 += 1, R1463 += 1 };
  s1 -> s1 [0, 66] { R4153 += 1, R4033 += 1, R1462 += 1, R1463 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4153 += 1 };
  s1 -> s3 [67, 67] { R4153 += 1, R4033 += 1, R1462 += 1, R1463 += 1 };
  s1 -> s4 [67, 67] { R4153 += 1, R4033 += 1, R1462 += 1, R1463 += 1 };
  s1 -> s1 [68, 65535] { R4153 += 1, R4033 += 1, R1462 += 1, R1463 += 1 };
  s2 -> s1 [0, 66] { R4153 += 1, R4033 += 1, R1462 += 1, R1463 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4153 += 1, R4032 += 1, R4033 += 1 };
  s2 -> s3 [67, 67] { R4153 += 1, R4033 += 1, R1462 += 1, R1463 += 1 };
  s2 -> s4 [67, 67] { R4153 += 1, R4033 += 1, R1462 += 1, R1463 += 1 };
  s2 -> s1 [68, 65535] { R4153 += 1, R4033 += 1, R1462 += 1, R1463 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4153 += 1, R4033 += 1, R1462 += 1, R1463 += 1 };
  s3 -> s6 [0, 65535] { R4153 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4153 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4153 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_62 {
  init s0;
  s0 -> s1 [0, 66] { R4155 += 1, R4035 += 1, R1472 += 1, R1473 += 1 };
  s0 -> s0 [0, 65535] { R4154 += 1, R4155 += 1 };
  s0 -> s2 [0, 65535] { R4155 += 1, R4034 += 1, R4035 += 1 };
  s0 -> s3 [67, 67] { R4155 += 1, R4035 += 1, R1472 += 1, R1473 += 1 };
  s0 -> s4 [67, 67] { R4155 += 1, R4035 += 1, R1472 += 1, R1473 += 1 };
  s0 -> s1 [68, 65535] { R4155 += 1, R4035 += 1, R1472 += 1, R1473 += 1 };
  s1 -> s1 [0, 66] { R4155 += 1, R4035 += 1, R1472 += 1, R1473 += 1 };
  s1 -> s1 [0, 65535] { R4155 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R4155 += 1, R4035 += 1, R1472 += 1, R1473 += 1 };
  s1 -> s4 [67, 67] { R4155 += 1, R4035 += 1, R1472 += 1, R1473 += 1 };
  s1 -> s1 [68, 65535] { R4155 += 1, R4035 += 1, R1472 += 1, R1473 += 1 };
  s2 -> s1 [0, 66] { R4155 += 1, R4035 += 1, R1472 += 1, R1473 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R4155 += 1, R4034 += 1, R4035 += 1 };
  s2 -> s3 [67, 67] { R4155 += 1, R4035 += 1, R1472 += 1, R1473 += 1 };
  s2 -> s4 [67, 67] { R4155 += 1, R4035 += 1, R1472 += 1, R1473 += 1 };
  s2 -> s1 [68, 65535] { R4155 += 1, R4035 += 1, R1472 += 1, R1473 += 1 };
  s3 -> s3 [0, 65535] { R4155 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R4155 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4155 += 1, R4035 += 1, R1472 += 1, R1473 += 1 };
  s5 -> s5 [0, 65535] { R4155 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_63 {
  init s0;
  s0 -> s1 [0, 66] { R4157 += 1, R4037 += 1, R1480 += 1, R1481 += 1 };
  s0 -> s2 [0, 65535] { R4157 += 1, R4036 += 1, R4037 += 1 };
  s0 -> s0 [0, 65535] { R4156 += 1, R4157 += 1 };
  s0 -> s3 [67, 67] { R4157 += 1, R4037 += 1, R1480 += 1, R1481 += 1 };
  s0 -> s4 [67, 67] { R4157 += 1, R4037 += 1, R1480 += 1, R1481 += 1 };
  s0 -> s1 [68, 65535] { R4157 += 1, R4037 += 1, R1480 += 1, R1481 += 1 };
  s1 -> s1 [0, 66] { R4157 += 1, R4037 += 1, R1480 += 1, R1481 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4157 += 1 };
  s1 -> s3 [67, 67] { R4157 += 1, R4037 += 1, R1480 += 1, R1481 += 1 };
  s1 -> s4 [67, 67] { R4157 += 1, R4037 += 1, R1480 += 1, R1481 += 1 };
  s1 -> s1 [68, 65535] { R4157 += 1, R4037 += 1, R1480 += 1, R1481 += 1 };
  s2 -> s1 [0, 66] { R4157 += 1, R4037 += 1, R1480 += 1, R1481 += 1 };
  s2 -> s2 [0, 65535] { R4157 += 1, R4036 += 1, R4037 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R4157 += 1, R4037 += 1, R1480 += 1, R1481 += 1 };
  s2 -> s4 [67, 67] { R4157 += 1, R4037 += 1, R1480 += 1, R1481 += 1 };
  s2 -> s1 [68, 65535] { R4157 += 1, R4037 += 1, R1480 += 1, R1481 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4157 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4157 += 1, R4037 += 1, R1480 += 1, R1481 += 1 };
  s4 -> s6 [0, 65535] { R4157 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4157 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_64 {
  init s0;
  s0 -> s1 [0, 66] { R4159 += 1, R4039 += 1, R1490 += 1, R1491 += 1 };
  s0 -> s0 [0, 65535] { R4158 += 1, R4159 += 1 };
  s0 -> s2 [0, 65535] { R4159 += 1, R4038 += 1, R4039 += 1 };
  s0 -> s3 [67, 67] { R4159 += 1, R4039 += 1, R1490 += 1, R1491 += 1 };
  s0 -> s4 [67, 67] { R4159 += 1, R4039 += 1, R1490 += 1, R1491 += 1 };
  s0 -> s1 [68, 65535] { R4159 += 1, R4039 += 1, R1490 += 1, R1491 += 1 };
  s1 -> s1 [0, 66] { R4159 += 1, R4039 += 1, R1490 += 1, R1491 += 1 };
  s1 -> s1 [0, 65535] { R4159 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R4159 += 1, R4039 += 1, R1490 += 1, R1491 += 1 };
  s1 -> s4 [67, 67] { R4159 += 1, R4039 += 1, R1490 += 1, R1491 += 1 };
  s1 -> s1 [68, 65535] { R4159 += 1, R4039 += 1, R1490 += 1, R1491 += 1 };
  s2 -> s1 [0, 66] { R4159 += 1, R4039 += 1, R1490 += 1, R1491 += 1 };
  s2 -> s2 [0, 65535] { R4159 += 1, R4038 += 1, R4039 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R4159 += 1, R4039 += 1, R1490 += 1, R1491 += 1 };
  s2 -> s4 [67, 67] { R4159 += 1, R4039 += 1, R1490 += 1, R1491 += 1 };
  s2 -> s1 [68, 65535] { R4159 += 1, R4039 += 1, R1490 += 1, R1491 += 1 };
  s3 -> s3 [0, 65535] { R4159 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4159 += 1, R4039 += 1, R1490 += 1, R1491 += 1 };
  s4 -> s5 [0, 65535] { R4159 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4159 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_65 {
  init s0;
  s0 -> s1 [0, 66] { R4161 += 1, R4041 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s0 -> s2 [0, 66] { R4161 += 1, R4041 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s0 -> s3 [0, 66] { R4161 += 1, R4041 += 1, R3192 += 1, R3193 += 1 };
  s0 -> s0 [0, 65535] { R4160 += 1, R4161 += 1 };
  s0 -> s4 [0, 65535] { R4161 += 1, R4040 += 1, R4041 += 1 };
  s0 -> s5 [67, 67] { R4161 += 1, R4041 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s0 -> s6 [67, 67] { R4161 += 1, R4041 += 1, R3192 += 1, R3193 += 1 };
  s0 -> s7 [67, 67] { R4161 += 1, R4041 += 1, R3192 += 1, R3193 += 1 };
  s0 -> s8 [67, 67] { R4161 += 1, R4041 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s0 -> s9 [67, 67] { R4161 += 1, R4041 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s0 -> s10 [67, 67] { R4161 += 1, R4041 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s0 -> s1 [68, 69] { R4161 += 1, R4041 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s0 -> s2 [68, 65535] { R4161 += 1, R4041 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s0 -> s3 [68, 65535] { R4161 += 1, R4041 += 1, R3192 += 1, R3193 += 1 };
  s0 -> s1 [71, 65535] { R4161 += 1, R4041 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s1 -> s1 [0, 66] { R4161 += 1, R4041 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s1 -> s1 [0, 65535] { R4161 += 1 };
  s1 -> s11 [0, 65535];
  s1 -> s5 [67, 67] { R4161 += 1, R4041 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s1 -> s8 [67, 67] { R4161 += 1, R4041 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s1 -> s1 [68, 69] { R4161 += 1, R4041 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s1 -> s1 [71, 65535] { R4161 += 1, R4041 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s2 -> s1 [0, 66] { R4161 += 1, R4041 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s2 -> s2 [0, 66] { R4161 += 1, R4041 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s2 -> s5 [67, 67] { R4161 += 1, R4041 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s2 -> s8 [67, 67] { R4161 += 1, R4041 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s2 -> s9 [67, 67] { R4161 += 1, R4041 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s2 -> s10 [67, 67] { R4161 += 1, R4041 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s2 -> s1 [68, 69] { R4161 += 1, R4041 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s2 -> s2 [68, 65535] { R4161 += 1, R4041 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s2 -> s1 [71, 65535] { R4161 += 1, R4041 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s3 -> s1 [0, 66] { R4161 += 1, R4041 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s3 -> s2 [0, 66] { R4161 += 1, R4041 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s3 -> s3 [0, 66] { R4161 += 1, R4041 += 1, R3192 += 1, R3193 += 1 };
  s3 -> s5 [67, 67] { R4161 += 1, R4041 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s3 -> s6 [67, 67] { R4161 += 1, R4041 += 1, R3192 += 1, R3193 += 1 };
  s3 -> s7 [67, 67] { R4161 += 1, R4041 += 1, R3192 += 1, R3193 += 1 };
  s3 -> s8 [67, 67] { R4161 += 1, R4041 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s3 -> s9 [67, 67] { R4161 += 1, R4041 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s3 -> s10 [67, 67] { R4161 += 1, R4041 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s3 -> s1 [68, 69] { R4161 += 1, R4041 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s3 -> s2 [68, 65535] { R4161 += 1, R4041 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s3 -> s3 [68, 65535] { R4161 += 1, R4041 += 1, R3192 += 1, R3193 += 1 };
  s3 -> s1 [71, 65535] { R4161 += 1, R4041 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s4 -> s1 [0, 66] { R4161 += 1, R4041 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s4 -> s2 [0, 66] { R4161 += 1, R4041 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s4 -> s3 [0, 66] { R4161 += 1, R4041 += 1, R3192 += 1, R3193 += 1 };
  s4 -> s4 [0, 65535] { R4161 += 1, R4040 += 1, R4041 += 1 };
  s4 -> s5 [67, 67] { R4161 += 1, R4041 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s4 -> s6 [67, 67] { R4161 += 1, R4041 += 1, R3192 += 1, R3193 += 1 };
  s4 -> s7 [67, 67] { R4161 += 1, R4041 += 1, R3192 += 1, R3193 += 1 };
  s4 -> s8 [67, 67] { R4161 += 1, R4041 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s4 -> s9 [67, 67] { R4161 += 1, R4041 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s4 -> s10 [67, 67] { R4161 += 1, R4041 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s4 -> s1 [68, 69] { R4161 += 1, R4041 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s4 -> s2 [68, 65535] { R4161 += 1, R4041 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s4 -> s3 [68, 65535] { R4161 += 1, R4041 += 1, R3192 += 1, R3193 += 1 };
  s4 -> s1 [71, 65535] { R4161 += 1, R4041 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s5 -> s5 [0, 69] { R4161 += 1, R4041 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s5 -> s5 [0, 65535] { R4161 += 1 };
  s5 -> s11 [0, 65535];
  s5 -> s5 [71, 65535] { R4161 += 1, R4041 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s7 -> s5 [0, 69] { R4161 += 1, R4041 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s7 -> s7 [0, 65535] { R4161 += 1, R4041 += 1, R3192 += 1, R3193 += 1 };
  s7 -> s10 [0, 65535] { R4161 += 1, R4041 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s7 -> s5 [71, 65535] { R4161 += 1, R4041 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s8 -> s8 [0, 65535] { R4161 += 1 };
  s8 -> s11 [0, 65535];
  s10 -> s5 [0, 69] { R4161 += 1, R4041 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s10 -> s10 [0, 65535] { R4161 += 1, R4041 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s10 -> s5 [71, 65535] { R4161 += 1, R4041 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s11 -> s11 [0, 65535];
  accepting s1, s5, s8, s11;
};
automaton value2_66 {
  init s0;
  s0 -> s1 [0, 66] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s0 -> s2 [0, 66] { R4163 += 1, R4043 += 1, R3924 += 1, R3925 += 1 };
  s0 -> s3 [0, 66] { R4163 += 1, R4043 += 1, R3925 += 1, R3926 += 1, R3927 += 1 };
  s0 -> s4 [0, 65535] { R4163 += 1, R4042 += 1, R4043 += 1 };
  s0 -> s0 [0, 65535] { R4162 += 1, R4163 += 1 };
  s0 -> s5 [67, 67] { R4163 += 1, R4043 += 1, R3925 += 1, R3926 += 1, R3927 += 1 };
  s0 -> s6 [67, 67] { R4163 += 1, R4043 += 1, R3925 += 1, R3926 += 1, R3927 += 1 };
  s0 -> s7 [67, 67] { R4163 += 1, R4043 += 1, R3924 += 1, R3925 += 1 };
  s0 -> s8 [67, 67] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s0 -> s9 [67, 67] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s0 -> s10 [67, 67] { R4163 += 1, R4043 += 1, R3924 += 1, R3925 += 1 };
  s0 -> s1 [68, 69] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s0 -> s2 [68, 65535] { R4163 += 1, R4043 += 1, R3924 += 1, R3925 += 1 };
  s0 -> s3 [68, 65535] { R4163 += 1, R4043 += 1, R3925 += 1, R3926 += 1, R3927 += 1 };
  s0 -> s11 [70, 70] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s0 -> s1 [71, 65535] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s1 -> s1 [0, 66] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s1 -> s8 [67, 67] { R4163 += 1, R4043 += 1, R3925 += 1 };
  s1 -> s9 [67, 67] { R4163 += 1, R4043 += 1, R3925 += 1 };
  s1 -> s1 [68, 69] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s1 -> s1 [68, 65535] { R4163 += 1, R4043 += 1, R3925 += 1 };
  s1 -> s11 [70, 70] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s1 -> s1 [71, 65535] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s2 -> s1 [0, 66] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s2 -> s2 [0, 66] { R4163 += 1, R4043 += 1, R3924 += 1, R3925 += 1 };
  s2 -> s3 [0, 66] { R4163 += 1, R4043 += 1, R3925 += 1, R3926 += 1, R3927 += 1 };
  s2 -> s5 [67, 67] { R4163 += 1, R4043 += 1, R3925 += 1, R3926 += 1, R3927 += 1 };
  s2 -> s6 [67, 67] { R4163 += 1, R4043 += 1, R3925 += 1, R3926 += 1, R3927 += 1 };
  s2 -> s7 [67, 67] { R4163 += 1, R4043 += 1, R3924 += 1, R3925 += 1 };
  s2 -> s8 [67, 67] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s2 -> s9 [67, 67] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s2 -> s10 [67, 67] { R4163 += 1, R4043 += 1, R3924 += 1, R3925 += 1 };
  s2 -> s1 [68, 69] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s2 -> s2 [68, 65535] { R4163 += 1, R4043 += 1, R3924 += 1, R3925 += 1 };
  s2 -> s3 [68, 65535] { R4163 += 1, R4043 += 1, R3925 += 1, R3926 += 1, R3927 += 1 };
  s2 -> s11 [70, 70] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s2 -> s1 [71, 65535] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s3 -> s1 [0, 66] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s3 -> s3 [0, 66] { R4163 += 1, R4043 += 1, R3925 += 1, R3926 += 1, R3927 += 1 };
  s3 -> s5 [67, 67] { R4163 += 1, R4043 += 1, R3925 += 1, R3926 += 1, R3927 += 1 };
  s3 -> s6 [67, 67] { R4163 += 1, R4043 += 1, R3925 += 1, R3926 += 1, R3927 += 1 };
  s3 -> s8 [67, 67] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s3 -> s9 [67, 67] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s3 -> s1 [68, 69] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s3 -> s3 [68, 65535] { R4163 += 1, R4043 += 1, R3925 += 1, R3926 += 1, R3927 += 1 };
  s3 -> s11 [70, 70] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s3 -> s1 [71, 65535] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s4 -> s1 [0, 66] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s4 -> s2 [0, 66] { R4163 += 1, R4043 += 1, R3924 += 1, R3925 += 1 };
  s4 -> s3 [0, 66] { R4163 += 1, R4043 += 1, R3925 += 1, R3926 += 1, R3927 += 1 };
  s4 -> s4 [0, 65535] { R4163 += 1, R4042 += 1, R4043 += 1 };
  s4 -> s5 [67, 67] { R4163 += 1, R4043 += 1, R3925 += 1, R3926 += 1, R3927 += 1 };
  s4 -> s6 [67, 67] { R4163 += 1, R4043 += 1, R3925 += 1, R3926 += 1, R3927 += 1 };
  s4 -> s7 [67, 67] { R4163 += 1, R4043 += 1, R3924 += 1, R3925 += 1 };
  s4 -> s8 [67, 67] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s4 -> s9 [67, 67] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s4 -> s10 [67, 67] { R4163 += 1, R4043 += 1, R3924 += 1, R3925 += 1 };
  s4 -> s1 [68, 69] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s4 -> s2 [68, 65535] { R4163 += 1, R4043 += 1, R3924 += 1, R3925 += 1 };
  s4 -> s3 [68, 65535] { R4163 += 1, R4043 += 1, R3925 += 1, R3926 += 1, R3927 += 1 };
  s4 -> s11 [70, 70] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s4 -> s1 [71, 65535] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s5 -> s9 [0, 69] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s5 -> s5 [0, 65535] { R4163 += 1, R4043 += 1, R3925 += 1, R3926 += 1, R3927 += 1 };
  s5 -> s14 [70, 70] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s5 -> s9 [71, 65535] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s7 -> s9 [0, 69] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s7 -> s5 [0, 65535] { R4163 += 1, R4043 += 1, R3925 += 1, R3926 += 1, R3927 += 1 };
  s7 -> s7 [0, 65535] { R4163 += 1, R4043 += 1, R3924 += 1, R3925 += 1 };
  s7 -> s14 [70, 70] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s7 -> s9 [71, 65535] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s9 -> s9 [0, 69] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s9 -> s9 [0, 65535] { R4163 += 1, R4043 += 1, R3925 += 1 };
  s9 -> s14 [70, 70] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s9 -> s9 [71, 65535] { R4163 += 1, R4043 += 1, R3925 += 1, R3927 += 1, R3928 += 1, R3929 += 1 };
  s11 -> s11 [0, 66] { R4163 += 1, R4043 += 1, R3925 += 1 };
  s11 -> s11 [0, 65535] { R4163 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s13 [67, 67] { R4163 += 1, R4043 += 1, R3925 += 1 };
  s11 -> s14 [67, 67] { R4163 += 1, R4043 += 1, R3925 += 1 };
  s11 -> s11 [68, 65535] { R4163 += 1, R4043 += 1, R3925 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R4163 += 1 };
  s13 -> s12 [0, 65535];
  s14 -> s15 [0, 65535] { R4163 += 1 };
  s14 -> s14 [0, 65535] { R4163 += 1, R4043 += 1, R3925 += 1 };
  s14 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R4163 += 1 };
  s15 -> s12 [0, 65535];
  accepting s12, s13, s14, s15, s11;
};
};
synchronised {  // Automata constraining P17
automaton P17_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R3991 && R4 - R4163 = 1 && R28 - R3991 = -1 && R29 = R3991 && R30 - R3991 = -1 && R31 = R3991 && R32 = 0 && R33 = 1 && R34 = 0 && R35 = 1 && R36 = R4163 && R37 - R4163 = 1 && R38 = R4163 && R39 - R4163 = 1 && R40 = 0 && R41 = 1 && R42 = 0 && R43 = 1 && R1331 + R1330 + -1*R3199 + -1*R3193 = 0 && R1349 + R1346 + R1425 + R1420 + R1489 + R1484 + -1*R3203 + -1*R3197 - R1441 - R1447 - R1359 - R1363 = 0 && R1362 + R1358 + R1446 + R1440 + R3202 + R3196 = 0 && R1376 + R1374 = 0 && R1377 + R1375 + -1*R3199 + -1*R3193 = 0 && R1476 + R1472 = 0 && R1477 + R1473 + -1*R3199 + -1*R3193 = 0 && R1478 + R1474 = 0 && R1479 + R1475 = 0 && R3198 + R3192 = 0 && R3200 + R3194 = 0 && R3201 + R3195 = 0 && R3938 = 0 && R3939 = R3991 && R3940 = 0 && R3941 = R3991 && R3942 = 0 && R3943 = R3991 && R3944 = 0 && R3945 = R3991 && R3946 = 0 && R3947 = R3991 && R3948 = 0 && R3949 = R3991 && R3950 = 0 && R3951 = R3991 && R3952 = 0 && R3953 = R3991 && R3954 = 0 && R3955 = R3991 && R3956 = 0 && R3957 = R3991 && R3958 = 0 && R3959 = R3991 && R3960 = 0 && R3961 = R3991 && R3962 = 0 && R3963 = R3991 && R3964 = 0 && R3965 = R3991 && R3966 = 0 && R3967 = R3991 && R3968 = 0 && R3969 = R3991 && R3970 = 0 && R3971 = R3991 && R3972 = 0 && R3973 = R3991 && R3974 = 0 && R3975 = R3991 && R3976 = 0 && R3977 = R3991 && R3978 = 0 && R3979 = R3991 && R3980 = 0 && R3981 = R3991 && R3982 = 0 && R3983 = R3991 && R3984 = 0 && R3985 = R3991 && R3986 = 0 && R3987 = R3991 && R3988 = 0 && R3989 = R3991 && R3990 = 0 && R3994 = 0 && R3995 = 0 && R4040 = 0 && R4041 = 0 && R4042 = 0 && R4043 = 0 && R4044 = 0 && R4045 = R4163 && R4046 = 0 && R4047 = R4163 && R4048 = 0 && R4049 = R4163 && R4050 = 0 && R4051 = R4163 && R4052 = 0 && R4053 = R4163 && R4054 = 0 && R4055 = R4163 && R4056 = 0 && R4057 = R4163 && R4058 = 0 && R4059 = R4163 && R4060 = 0 && R4061 = R4163 && R4062 = 0 && R4063 = R4163 && R4064 = 0 && R4065 = R4163 && R4066 = 0 && R4067 = R4163 && R4068 = 0 && R4069 = R4163 && R4070 = 0 && R4071 = R4163 && R4072 = 0 && R4073 = R4163 && R4074 = 0 && R4075 = R4163 && R4076 = 0 && R4077 = R4163 && R4078 = 0 && R4079 = R4163 && R4080 = 0 && R4081 = R4163 && R4082 = 0 && R4083 = R4163 && R4084 = 0 && R4085 = R4163 && R4086 = 0 && R4087 = R4163 && R4088 = 0 && R4089 = R4163 && R4090 = 0 && R4091 = R4163 && R4092 = 0 && R4093 = R4163 && R4094 = 0 && R4095 = R4163 && R4096 = 0 && R4097 = R4163 && R4098 = 0 && R4099 = R4163 && R4100 = 0 && R4101 = R4163 && R4102 = 0 && R4103 = R4163 && R4104 = 0 && R4105 = R4163 && R4106 = 0 && R4107 = R4163 && R4108 = 0 && R4109 = R4163 && R4110 = 0 && R4111 = R4163 && R4112 = 0 && R4113 = R4163 && R4114 = 0 && R4115 = R4163 && R4116 = 0 && R4117 = R4163 && R4118 = 0 && R4119 = R4163 && R4120 = 0 && R4121 = R4163 && R4122 = 0 && R4123 = R4163 && R4124 = 0 && R4125 = R4163 && R4126 = 0 && R4127 = R4163 && R4128 = 0 && R4129 = R4163 && R4130 = 0 && R4131 = R4163 && R4132 = 0 && R4133 = R4163 && R4134 = 0 && R4135 = R4163 && R4136 = 0 && R4137 = R4163 && R4138 = 0 && R4139 = R4163 && R4140 = 0 && R4141 = R4163 && R4142 = 0 && R4143 = R4163 && R4144 = 0 && R4145 = R4163 && R4146 = 0 && R4147 = R4163 && R4148 = 0 && R4149 = R4163 && R4150 = 0 && R4151 = R4163 && R4152 = 0 && R4153 = R4163 && R4154 = 0 && R4155 = R4163 && R4156 = 0 && R4157 = R4163 && R4158 = 0 && R4159 = R4163 && R4160 = 0 && R4161 = R4163 && R4162 = 0 && R18 < 1 && R21 < 1 && R1333 + R1332 < 1 && R1355 + R1352 + R1435 + R1430 + R1499 + R1494 < 1 && -1*R3203 + -1*R3197 - R1441 - R1447 - R1359 - R1363 < 1 && -1*R1383 + -1*R1380 < 1 && R1389 + R1386 < 1 && -1*R3199 + -1*R3193 < 1 && 0 < R3991 && -1 < R4163 && (R1363 + R1359 + R1447 + R1441 + R3203 + R3197 != 0 || R1373 + R1368 + R1461 + R1454 + R3937 + R3930 = 0 || (R1371 + R1366 + R1459 + R1452 + R3935 + R3928 = 0 && R1372 + R1367 + R1460 + R1453 + R3936 + R3929 = 0)) && (R1371 + R1366 + R1459 + R1452 + R3935 + R3928 != 0 || R1363 + R1359 + R1447 + R1441 + R3203 + R3197 + -1*R3936 + -1*R3929 - R1453 - R1460 - R1367 - R1372 = 0 || R1363 + R1359 + R1447 + R1441 + R3203 + R3197 < 1) && (R1381 + R1378 != 0 || R1382 + R1379 + -1*R3199 + -1*R3193 = 0 || R1383 + R1380 < 1) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1396 + R1392 = 0 && R1397 + R1393 = 0)) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1405 + R1400 = 0 && R1406 + R1401 = 0)) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1414 + R1410 = 0 && R1415 + R1411 = 0)) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1423 + R1418 = 0 && R1424 + R1419 = 0)) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1433 + R1428 = 0 && R1434 + R1429 = 0)) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1444 + R1438 = 0 && R1445 + R1439 = 0)) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1457 + R1450 = 0 && R1458 + R1451 = 0)) && (R1383 + R1380 != 0 || ((R1381 + R1378 != 0 || R1382 + R1379 + -1*R3199 + -1*R3193 = 0 || R3199 + R3193 < 1) && (R1381 + R1378 = 0 || R3199 + R3193 < 1))) && (R1387 + R1384 != 0 || R1388 + R1385 + -1*R3199 + -1*R3193 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1394 + R1390 != 0 || R1395 + R1391 + -1*R3199 + -1*R3193 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1396 + R1392 != 0 || R1383 + R1380 + -1*R1397 + -1*R1393 = 0 || R1383 + R1380 < 1) && (R1403 + R1398 != 0 || R1404 + R1399 + -1*R3199 + -1*R3193 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1405 + R1400 != 0 || R1383 + R1380 + -1*R1406 + -1*R1401 = 0 || R1383 + R1380 < 1) && (R1412 + R1408 != 0 || R1413 + R1409 + -1*R3199 + -1*R3193 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1414 + R1410 != 0 || R1383 + R1380 + -1*R1415 + -1*R1411 = 0 || R1383 + R1380 < 1) && (R1421 + R1416 != 0 || R1422 + R1417 + -1*R3199 + -1*R3193 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1423 + R1418 != 0 || R1383 + R1380 + -1*R1424 + -1*R1419 = 0 || R1383 + R1380 < 1) && (R1431 + R1426 != 0 || R1432 + R1427 + -1*R3199 + -1*R3193 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1433 + R1428 != 0 || R1383 + R1380 + -1*R1434 + -1*R1429 = 0 || R1383 + R1380 < 1) && (R1442 + R1436 != 0 || R1443 + R1437 + -1*R3199 + -1*R3193 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1444 + R1438 != 0 || R1383 + R1380 + -1*R1445 + -1*R1439 = 0 || R1383 + R1380 < 1) && (R1455 + R1448 != 0 || R1456 + R1449 + -1*R3199 + -1*R3193 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1457 + R1450 != 0 || R1383 + R1380 + -1*R1458 + -1*R1451 = 0 || R1383 + R1380 < 1) && (R1467 + R1462 != 0 || R1468 + R1463 + -1*R3199 + -1*R3193 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1485 + R1480 != 0 || R1486 + R1481 + -1*R3199 + -1*R3193 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1495 + R1490 != 0 || R1496 + R1491 + -1*R3199 + -1*R3193 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R3931 + R3924 != 0 || R3199 + R3193 + -1*R3932 + -1*R3925 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R27 = 0 || (R3992 = 0 && R3993 = 0)) && (R27 = 0 || (R3996 = 0 && R3997 = 0)) && (R27 = 0 || (R3998 = 0 && R3999 = 0)) && (R27 = 0 || (R4000 = 0 && R4001 = 0)) && (R27 = 0 || (R4002 = 0 && R4003 = 0)) && (R27 = 0 || (R4004 = 0 && R4005 = 0)) && (R27 = 0 || (R4006 = 0 && R4007 = 0)) && (R27 = 0 || (R4008 = 0 && R4009 = 0)) && (R27 = 0 || (R4010 = 0 && R4011 = 0)) && (R27 = 0 || (R4012 = 0 && R4013 = 0)) && (R27 = 0 || (R4014 = 0 && R4015 = 0)) && (R27 = 0 || (R4016 = 0 && R4017 = 0)) && (R27 = 0 || (R4018 = 0 && R4019 = 0)) && (R27 = 0 || (R4020 = 0 && R4021 = 0)) && (R27 = 0 || (R4022 = 0 && R4023 = 0)) && (R27 = 0 || (R4024 = 0 && R4025 = 0)) && (R27 = 0 || (R4026 = 0 && R4027 = 0)) && (R27 = 0 || (R4028 = 0 && R4029 = 0)) && (R27 = 0 || (R4030 = 0 && R4031 = 0)) && (R27 = 0 || (R4032 = 0 && R4033 = 0)) && (R27 = 0 || (R4034 = 0 && R4035 = 0)) && (R27 = 0 || (R4036 = 0 && R4037 = 0)) && (R27 = 0 || (R4038 = 0 && R4039 = 0)) && (R1339 + R1336 = 0 || (R1337 + R1334 = 0 && R1338 + R1335 = 0)) && (R1339 + R1336 = 0 || (R1342 + R1340 = 0 && R1343 + R1341 = 0)) && (R1339 + R1336 = 0 || (R1347 + R1344 = 0 && R1348 + R1345 = 0)) && (R1339 + R1336 = 0 || (R1353 + R1350 = 0 && R1354 + R1351 = 0)) && (R1339 + R1336 = 0 || (R1360 + R1356 = 0 && R1361 + R1357 = 0)) && (R1339 + R1336 = 0 || (R1369 + R1364 = 0 && R1370 + R1365 = 0)) && (R1371 + R1366 + R1459 + R1452 + R3935 + R3928 = 0 || R1363 + R1359 + R1447 + R1441 + R3203 + R3197 < 1) && (R1381 + R1378 = 0 || R1383 + R1380 < 1) && (R1387 + R1384 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1394 + R1390 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1396 + R1392 = 0 || R1383 + R1380 < 1) && (R1403 + R1398 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1405 + R1400 = 0 || R1383 + R1380 < 1) && (R1412 + R1408 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1414 + R1410 = 0 || R1383 + R1380 < 1) && (R1421 + R1416 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1423 + R1418 = 0 || R1383 + R1380 < 1) && (R1431 + R1426 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1433 + R1428 = 0 || R1383 + R1380 < 1) && (R1442 + R1436 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1444 + R1438 = 0 || R1383 + R1380 < 1) && (R1455 + R1448 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1457 + R1450 = 0 || R1383 + R1380 < 1) && (R1467 + R1462 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1471 + R1466 = 0 || (R1469 + R1464 = 0 && R1470 + R1465 = 0)) && (R1471 + R1466 = 0 || (R1487 + R1482 = 0 && R1488 + R1483 = 0)) && (R1471 + R1466 = 0 || (R1497 + R1492 = 0 && R1498 + R1493 = 0)) && (R1471 + R1466 = 0 || (R3933 + R3926 = 0 && R3934 + R3927 = 0)) && (R1485 + R1480 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1495 + R1490 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R3931 + R3924 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0));
// End of Parikh automata intersection problem
