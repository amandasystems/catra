// Parikh automata intersection problem, generated by OSTRICH+
counter int R12814, R12815, R12816, R12817, R12818, R12819, R12820, R12821, R12822, R12823, R13510, R13511, R13512, R13513, R13514, R13515, R13788, R13789, R13790, R13791, R13792, R13793, R13794, R13795, R13796, R13797, R13798, R13799, R13800, R13801, R13802, R13803, R13804, R13805, R13806, R13807, R13808, R13809, R13810, R13811, R13812, R13813, R13814, R13815, R13816, R13817, R13818, R13819, R13820, R13821, R13822, R13823, R13824, R13825, R13826, R13827, R13828, R13829, R13830, R13831, R13832, R13833, R13834, R13835, R13836, R13837, R13838, R13839, R13840, R13841, R13842, R13843, R13844, R13845, R13846, R13847, R13848, R13849, R13850, R13851, R13852, R13853, R13854, R13855, R13856, R13857, R13858, R13859, R13860, R13861, R13862, R13863, R13864, R13865, R13866, R13867, R13868, R13869, R13870, R13871, R13872, R13873, R13874, R13875, R13876, R13877, R13878, R13879, R13880, R13881, R13882, R13883, R13884, R13885, R13886, R13887, R13888, R13889, R13890, R13891, R13892, R13893, R13894, R13895, R13896, R13897, R13898, R13899, R13900, R13901, R13902, R13903, R13904, R13905, R13906, R13907, R13908, R13909, R13910, R13911, R13912, R13913, R13914, R13915, R13916, R13917, R13918, R13919, R13920, R13921, R13922, R13923, R14, R15, R18, R21, R24, R27, R28, R3, R31, R32, R33, R34, R35, R36, R37, R38, R39, R40, R408, R409, R41, R410, R411, R412, R413, R414, R415, R416, R417, R418, R419, R42, R420, R421, R43, R44, R45, R5, R56, R57, R58, R59, R6, R60, R61, R62, R63, R64, R65, R66, R67, R68, R69, R7, R74, R75, R76, R77, R78, R79, R8, R80, R81, R82, R83, R84, R85, R86, R87;
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R6 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 65];
  s0 -> s0 [0, 65535] { R21 += 1 };
  s0 -> s2 [66, 66];
  s0 -> s1 [67, 65535];
  s1 -> s1 [0, 65];
  s1 -> s2 [66, 66];
  s1 -> s1 [67, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton uri_3 {
  init s0;
  s0 -> s1 [0, 64];
  s0 -> s0 [0, 65535] { R24 += 1 };
  s0 -> s2 [65, 65];
  s0 -> s1 [66, 65535];
  s1 -> s1 [0, 64];
  s1 -> s2 [65, 65];
  s1 -> s1 [66, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton uri_4 {
  init s0;
  s0 -> s0 [0, 65535] { R62 += 1, R63 += 1 };
  s0 -> s1 [0, 65535] { R63 += 1, R35 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R63 += 1, R35 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 107] { R65 += 1 };
  s0 -> s0 [0, 65535] { R64 += 1, R65 += 1 };
  s0 -> s2 [108, 108] { R65 += 1 };
  s0 -> s1 [109, 65535] { R65 += 1 };
  s1 -> s11 [0, 65535];
  s1 -> s1 [0, 65535] { R65 += 1 };
  s2 -> s1 [0, 110] { R65 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s3 [111, 111] { R65 += 1 };
  s2 -> s1 [112, 65535] { R65 += 1 };
  s3 -> s1 [0, 98] { R65 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s4 [99, 99] { R65 += 1 };
  s3 -> s1 [100, 65535] { R65 += 1 };
  s4 -> s1 [0, 96] { R65 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s5 [97, 97] { R65 += 1 };
  s4 -> s1 [98, 65535] { R65 += 1 };
  s5 -> s1 [0, 107] { R65 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s6 [108, 108] { R65 += 1 };
  s5 -> s1 [109, 65535] { R65 += 1 };
  s6 -> s1 [0, 103] { R65 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s7 [104, 104] { R65 += 1 };
  s6 -> s1 [105, 65535] { R65 += 1 };
  s7 -> s1 [0, 110] { R65 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s8 [111, 111] { R65 += 1 };
  s7 -> s1 [112, 65535] { R65 += 1 };
  s8 -> s1 [0, 114] { R65 += 1 };
  s8 -> s8 [0, 65535];
  s8 -> s9 [115, 115] { R65 += 1 };
  s8 -> s1 [116, 65535] { R65 += 1 };
  s9 -> s1 [0, 115] { R65 += 1 };
  s9 -> s9 [0, 65535];
  s9 -> s10 [116, 116] { R65 += 1 };
  s9 -> s1 [117, 65535] { R65 += 1 };
  s10 -> s1 [0, 65535] { R65 += 1 };
  s11 -> s11 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s11;
};
automaton uri_6 {
  init s0;
  s0 -> s1 [0, 65535] { R67 += 1, R45 += 1 };
  s0 -> s0 [0, 65535] { R66 += 1, R67 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R67 += 1, R45 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_7 {
  init s0;
  s0 -> s1 [0, 65535] { R79 += 1, R36 += 1 };
  s0 -> s0 [0, 65535] { R78 += 1, R79 += 1 };
  s1 -> s1 [0, 65535] { R79 += 1, R36 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_8 {
  init s0;
  s0 -> s0 [0, 65535];
  accepting s0;
};
automaton uri_9 {
  init s0;
  s0 -> s0 [0, 65535] { R80 += 1, R81 += 1 };
  s0 -> s1 [0, 65535] { R81 += 1, R37 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R81 += 1, R37 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_10 {
  init s0;
  s0 -> s0 [0, 65535];
  accepting s0;
};
automaton uri_11 {
  init s0;
  s0 -> s1 [0, 65] { R83 += 1, R44 += 1 };
  s0 -> s0 [0, 65535] { R82 += 1, R83 += 1 };
  s0 -> s2 [66, 66] { R83 += 1, R44 += 1 };
  s0 -> s3 [66, 66] { R83 += 1, R44 += 1 };
  s0 -> s1 [67, 65535] { R83 += 1, R44 += 1 };
  s1 -> s1 [0, 65] { R83 += 1, R44 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [66, 66] { R83 += 1, R44 += 1 };
  s1 -> s3 [66, 66] { R83 += 1, R44 += 1 };
  s1 -> s1 [67, 65535] { R83 += 1, R44 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R83 += 1, R44 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_12 {
  init s0;
  s0 -> s0 [0, 65535] { R13818 += 1, R13819 += 1 };
  s0 -> s1 [0, 65535] { R13819 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R13819 += 1, R3 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_13 {
  init s0;
  s0 -> s1 [0, 64] { R13821 += 1 };
  s0 -> s0 [0, 65535] { R13820 += 1, R13821 += 1 };
  s0 -> s2 [0, 65535] { R13821 += 1, R8 += 1 };
  s0 -> s3 [65, 65] { R13821 += 1 };
  s0 -> s1 [66, 65535] { R13821 += 1 };
  s1 -> s1 [0, 64] { R13821 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [65, 65] { R13821 += 1 };
  s1 -> s1 [66, 65535] { R13821 += 1 };
  s2 -> s1 [0, 64] { R13821 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13821 += 1, R8 += 1 };
  s2 -> s3 [65, 65] { R13821 += 1 };
  s2 -> s1 [66, 65535] { R13821 += 1 };
  s3 -> s3 [0, 65535] { R13821 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 65535] { R13823 += 1, R68 += 1, R69 += 1 };
  s0 -> s2 [0, 65535] { R13823 += 1, R69 += 1, R27 += 1 };
  s0 -> s0 [0, 65535] { R13822 += 1, R13823 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R13823 += 1, R68 += 1, R69 += 1 };
  s1 -> s2 [0, 65535] { R13823 += 1, R69 += 1, R27 += 1 };
  s2 -> s3 [0, 65535] { R13823 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13823 += 1, R69 += 1, R27 += 1 };
  s3 -> s3 [0, 65535] { R13823 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_15 {
  init s0;
  s0 -> s0 [0, 65535] { R13824 += 1, R13825 += 1 };
  s0 -> s1 [0, 65535] { R13825 += 1 };
  s1 -> s1 [0, 65535] { R13825 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_16 {
  init s0;
  s0 -> s0 [0, 65535] { R13826 += 1, R13827 += 1 };
  s0 -> s1 [0, 65535] { R13827 += 1, R84 += 1, R85 += 1 };
  s0 -> s2 [0, 65535] { R13827 += 1, R85 += 1, R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R13827 += 1, R84 += 1, R85 += 1 };
  s1 -> s2 [0, 65535] { R13827 += 1, R85 += 1, R28 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R13827 += 1 };
  s2 -> s2 [0, 65535] { R13827 += 1, R85 += 1, R28 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13827 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_17 {
  init s0;
  s0 -> s1 [0, 65535] { R13829 += 1, R86 += 1, R87 += 1 };
  s0 -> s0 [0, 65535] { R13828 += 1, R13829 += 1 };
  s0 -> s2 [108, 108] { R13829 += 1, R87 += 1 };
  s1 -> s1 [0, 65535] { R13829 += 1, R86 += 1, R87 += 1 };
  s1 -> s2 [108, 108] { R13829 += 1, R87 += 1 };
  s2 -> s3 [111, 111] { R13829 += 1, R87 += 1 };
  s3 -> s4 [99, 99] { R13829 += 1, R87 += 1 };
  s4 -> s5 [65, 65] { R13829 += 1, R87 += 1 };
  s4 -> s6 [65, 65] { R13829 += 1, R87 += 1 };
  s4 -> s7 [97, 97] { R13829 += 1, R87 += 1 };
  s5 -> s14 [108, 108] { R13829 += 1, R87 += 1 };
  s7 -> s8 [108, 108] { R13829 += 1, R87 += 1 };
  s8 -> s9 [104, 104] { R13829 += 1, R87 += 1 };
  s9 -> s10 [111, 111] { R13829 += 1, R87 += 1 };
  s10 -> s11 [115, 115] { R13829 += 1, R87 += 1 };
  s11 -> s12 [116, 116] { R13829 += 1, R87 += 1 };
  s12 -> s13 [0, 65535];
  s12 -> s12 [0, 65535] { R13829 += 1 };
  s13 -> s13 [0, 65535];
  s14 -> s15 [104, 104] { R13829 += 1, R87 += 1 };
  s15 -> s16 [111, 111] { R13829 += 1, R87 += 1 };
  s16 -> s17 [115, 115] { R13829 += 1, R87 += 1 };
  s17 -> s18 [116, 116] { R13829 += 1, R87 += 1 };
  s18 -> s13 [0, 65535];
  s18 -> s18 [0, 65535] { R13829 += 1 };
  accepting s12, s13, s18;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 43] { R13853 += 1 };
  s0 -> s0 [0, 65535] { R13852 += 1, R13853 += 1 };
  s0 -> s1 [45, 45] { R13853 += 1 };
  s0 -> s2 [46, 46] { R13853 += 1 };
  s0 -> s1 [48, 62] { R13853 += 1 };
  s0 -> s3 [65, 65] { R13853 += 1 };
  s0 -> s1 [66, 65535] { R13853 += 1 };
  s1 -> s1 [0, 43] { R13853 += 1 };
  s1 -> s1 [45, 45] { R13853 += 1 };
  s1 -> s2 [46, 46] { R13853 += 1 };
  s1 -> s1 [48, 62] { R13853 += 1 };
  s1 -> s3 [65, 65] { R13853 += 1 };
  s1 -> s1 [66, 65535] { R13853 += 1 };
  s2 -> s1 [0, 43] { R13853 += 1 };
  s2 -> s1 [45, 45] { R13853 += 1 };
  s2 -> s2 [46, 46] { R13853 += 1 };
  s2 -> s1 [48, 62] { R13853 += 1 };
  s2 -> s3 [65, 65] { R13853 += 1 };
  s2 -> s1 [66, 114] { R13853 += 1 };
  s2 -> s8 [115, 115] { R13853 += 1 };
  s2 -> s1 [116, 65535] { R13853 += 1 };
  s3 -> s3 [0, 43] { R13853 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [45, 45] { R13853 += 1 };
  s3 -> s4 [46, 46] { R13853 += 1 };
  s3 -> s3 [48, 62] { R13853 += 1 };
  s3 -> s3 [65, 65535] { R13853 += 1 };
  s4 -> s3 [0, 43] { R13853 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s3 [45, 45] { R13853 += 1 };
  s4 -> s4 [46, 46] { R13853 += 1 };
  s4 -> s3 [48, 62] { R13853 += 1 };
  s4 -> s3 [65, 114] { R13853 += 1 };
  s4 -> s5 [115, 115] { R13853 += 1 };
  s4 -> s3 [116, 65535] { R13853 += 1 };
  s5 -> s3 [0, 43] { R13853 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s3 [45, 45] { R13853 += 1 };
  s5 -> s4 [46, 46] { R13853 += 1 };
  s5 -> s3 [48, 62] { R13853 += 1 };
  s5 -> s3 [65, 110] { R13853 += 1 };
  s5 -> s6 [111, 111] { R13853 += 1 };
  s5 -> s3 [112, 65535] { R13853 += 1 };
  s6 -> s3 [0, 43] { R13853 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s3 [45, 45] { R13853 += 1 };
  s6 -> s4 [46, 46] { R13853 += 1 };
  s6 -> s3 [48, 62] { R13853 += 1 };
  s6 -> s3 [65, 98] { R13853 += 1 };
  s6 -> s7 [99, 99] { R13853 += 1 };
  s6 -> s3 [100, 65535] { R13853 += 1 };
  s7 -> s3 [0, 43] { R13853 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s3 [45, 45] { R13853 += 1 };
  s7 -> s4 [46, 46] { R13853 += 1 };
  s7 -> s3 [48, 62] { R13853 += 1 };
  s7 -> s3 [65, 106] { R13853 += 1 };
  s7 -> s3 [108, 65535] { R13853 += 1 };
  s8 -> s1 [0, 43] { R13853 += 1 };
  s8 -> s1 [45, 45] { R13853 += 1 };
  s8 -> s2 [46, 46] { R13853 += 1 };
  s8 -> s1 [48, 62] { R13853 += 1 };
  s8 -> s3 [65, 65] { R13853 += 1 };
  s8 -> s1 [66, 110] { R13853 += 1 };
  s8 -> s9 [111, 111] { R13853 += 1 };
  s8 -> s1 [112, 65535] { R13853 += 1 };
  s9 -> s1 [0, 43] { R13853 += 1 };
  s9 -> s1 [45, 45] { R13853 += 1 };
  s9 -> s2 [46, 46] { R13853 += 1 };
  s9 -> s1 [48, 62] { R13853 += 1 };
  s9 -> s3 [65, 65] { R13853 += 1 };
  s9 -> s1 [66, 98] { R13853 += 1 };
  s9 -> s10 [99, 99] { R13853 += 1 };
  s9 -> s1 [100, 65535] { R13853 += 1 };
  s10 -> s1 [0, 43] { R13853 += 1 };
  s10 -> s1 [45, 45] { R13853 += 1 };
  s10 -> s2 [46, 46] { R13853 += 1 };
  s10 -> s1 [48, 62] { R13853 += 1 };
  s10 -> s3 [65, 65] { R13853 += 1 };
  s10 -> s1 [66, 106] { R13853 += 1 };
  s10 -> s1 [108, 65535] { R13853 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_19 {
  init s0;
  s0 -> s1 [0, 65535] { R13855 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R13854 += 1, R13855 += 1 };
  s1 -> s1 [0, 65535] { R13855 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 57] { R13857 += 1 };
  s0 -> s0 [0, 65535] { R13856 += 1, R13857 += 1 };
  s0 -> s2 [0, 65535] { R13857 += 1, R14 += 1 };
  s0 -> s3 [58, 58] { R13857 += 1 };
  s0 -> s1 [59, 65535] { R13857 += 1 };
  s1 -> s1 [0, 57] { R13857 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [58, 58] { R13857 += 1 };
  s1 -> s1 [59, 65535] { R13857 += 1 };
  s2 -> s1 [0, 57] { R13857 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13857 += 1, R14 += 1 };
  s2 -> s3 [58, 58] { R13857 += 1 };
  s2 -> s1 [59, 65535] { R13857 += 1 };
  s3 -> s3 [0, 65535] { R13857 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton uri_21 {
  init s0;
  s0 -> s1 [0, 42] { R13859 += 1 };
  s0 -> s0 [0, 65535] { R13858 += 1, R13859 += 1 };
  s0 -> s2 [0, 65535] { R13859 += 1, R15 += 1 };
  s0 -> s3 [43, 43] { R13859 += 1 };
  s0 -> s1 [44, 65535] { R13859 += 1 };
  s1 -> s1 [0, 42] { R13859 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [43, 43] { R13859 += 1 };
  s1 -> s1 [44, 65535] { R13859 += 1 };
  s2 -> s1 [0, 42] { R13859 += 1 };
  s2 -> s2 [0, 65535] { R13859 += 1, R15 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [43, 43] { R13859 += 1 };
  s2 -> s1 [44, 65535] { R13859 += 1 };
  s3 -> s3 [0, 65535] { R13859 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton uri_22 {
  init s0;
  s0 -> s1 [0, 64] { R13861 += 1 };
  s0 -> s0 [0, 65535] { R13860 += 1, R13861 += 1 };
  s0 -> s2 [0, 65535] { R13861 += 1, R18 += 1 };
  s0 -> s3 [65, 65] { R13861 += 1 };
  s0 -> s1 [66, 65535] { R13861 += 1 };
  s1 -> s1 [0, 64] { R13861 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [65, 65] { R13861 += 1 };
  s1 -> s1 [66, 65535] { R13861 += 1 };
  s2 -> s1 [0, 64] { R13861 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13861 += 1, R18 += 1 };
  s2 -> s3 [65, 65] { R13861 += 1 };
  s2 -> s1 [66, 65535] { R13861 += 1 };
  s3 -> s3 [0, 65535] { R13861 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton uri_23 {
  init s0;
  s0 -> s1 [0, 90] { R13863 += 1, R39 += 1 };
  s0 -> s2 [0, 65535] { R13863 += 1, R38 += 1, R39 += 1 };
  s0 -> s0 [0, 65535] { R13862 += 1, R13863 += 1 };
  s0 -> s3 [91, 91] { R13863 += 1, R39 += 1 };
  s0 -> s1 [92, 65535] { R13863 += 1, R39 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R13863 += 1 };
  s1 -> s1 [0, 65535] { R13863 += 1, R39 += 1 };
  s2 -> s1 [0, 90] { R13863 += 1, R39 += 1 };
  s2 -> s2 [0, 65535] { R13863 += 1, R38 += 1, R39 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [91, 91] { R13863 += 1, R39 += 1 };
  s2 -> s1 [92, 65535] { R13863 += 1, R39 += 1 };
  s3 -> s1 [0, 65535] { R13863 += 1, R39 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13863 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton uri_24 {
  init s0;
  s0 -> s1 [0, 65535] { R13865 += 1, R40 += 1, R41 += 1 };
  s0 -> s2 [0, 65535] { R13865 += 1, R41 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R13864 += 1, R13865 += 1 };
  s1 -> s1 [0, 65535] { R13865 += 1, R40 += 1, R41 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R13865 += 1, R41 += 1, R7 += 1 };
  s2 -> s3 [0, 65535] { R13865 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13865 += 1, R41 += 1, R7 += 1 };
  s3 -> s3 [0, 65535] { R13865 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_25 {
  init s0;
  s0 -> s0 [0, 65535] { R13866 += 1, R13867 += 1 };
  s0 -> s1 [0, 65535] { R13867 += 1, R57 += 1, R31 += 1 };
  s0 -> s2 [0, 65535] { R13867 += 1, R56 += 1, R57 += 1 };
  s1 -> s1 [0, 65535] { R13867 += 1, R57 += 1, R31 += 1 };
  s1 -> s4 [0, 65535] { R13867 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R13867 += 1, R57 += 1, R31 += 1 };
  s2 -> s2 [0, 65535] { R13867 += 1, R56 += 1, R57 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13867 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_26 {
  init s0;
  s0 -> s1 [0, 107] { R13869 += 1, R59 += 1 };
  s0 -> s2 [0, 65535] { R13869 += 1, R58 += 1, R59 += 1 };
  s0 -> s0 [0, 65535] { R13868 += 1, R13869 += 1 };
  s0 -> s3 [108, 108] { R13869 += 1, R59 += 1 };
  s0 -> s1 [109, 65535] { R13869 += 1, R59 += 1 };
  s1 -> s13 [0, 65535] { R13869 += 1 };
  s1 -> s1 [0, 65535] { R13869 += 1, R59 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 107] { R13869 += 1, R59 += 1 };
  s2 -> s2 [0, 65535] { R13869 += 1, R58 += 1, R59 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [108, 108] { R13869 += 1, R59 += 1 };
  s2 -> s1 [109, 65535] { R13869 += 1, R59 += 1 };
  s3 -> s1 [0, 110] { R13869 += 1, R59 += 1 };
  s3 -> s3 [0, 65535] { R13869 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [111, 111] { R13869 += 1, R59 += 1 };
  s3 -> s1 [112, 65535] { R13869 += 1, R59 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s1 [0, 98] { R13869 += 1, R59 += 1 };
  s5 -> s5 [0, 65535] { R13869 += 1 };
  s5 -> s4 [0, 65535];
  s5 -> s6 [99, 99] { R13869 += 1, R59 += 1 };
  s5 -> s1 [100, 65535] { R13869 += 1, R59 += 1 };
  s6 -> s1 [0, 96] { R13869 += 1, R59 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R13869 += 1 };
  s6 -> s7 [97, 97] { R13869 += 1, R59 += 1 };
  s6 -> s1 [98, 65535] { R13869 += 1, R59 += 1 };
  s7 -> s1 [0, 107] { R13869 += 1, R59 += 1 };
  s7 -> s4 [0, 65535];
  s7 -> s7 [0, 65535] { R13869 += 1 };
  s7 -> s8 [108, 108] { R13869 += 1, R59 += 1 };
  s7 -> s1 [109, 65535] { R13869 += 1, R59 += 1 };
  s8 -> s1 [0, 103] { R13869 += 1, R59 += 1 };
  s8 -> s4 [0, 65535];
  s8 -> s8 [0, 65535] { R13869 += 1 };
  s8 -> s9 [104, 104] { R13869 += 1, R59 += 1 };
  s8 -> s1 [105, 65535] { R13869 += 1, R59 += 1 };
  s9 -> s1 [0, 110] { R13869 += 1, R59 += 1 };
  s9 -> s4 [0, 65535];
  s9 -> s9 [0, 65535] { R13869 += 1 };
  s9 -> s10 [111, 111] { R13869 += 1, R59 += 1 };
  s9 -> s1 [112, 65535] { R13869 += 1, R59 += 1 };
  s10 -> s1 [0, 114] { R13869 += 1, R59 += 1 };
  s10 -> s10 [0, 65535] { R13869 += 1 };
  s10 -> s4 [0, 65535];
  s10 -> s11 [115, 115] { R13869 += 1, R59 += 1 };
  s10 -> s1 [116, 65535] { R13869 += 1, R59 += 1 };
  s11 -> s1 [0, 115] { R13869 += 1, R59 += 1 };
  s11 -> s4 [0, 65535];
  s11 -> s11 [0, 65535] { R13869 += 1 };
  s11 -> s12 [116, 116] { R13869 += 1, R59 += 1 };
  s11 -> s1 [117, 65535] { R13869 += 1, R59 += 1 };
  s12 -> s1 [0, 65535] { R13869 += 1, R59 += 1 };
  s13 -> s13 [0, 65535] { R13869 += 1 };
  s13 -> s4 [0, 65535];
  accepting s3, s4, s8, s13, s5, s2, s9, s6, s1, s7, s0, s10, s11;
};
automaton uri_27 {
  init s0;
  s0 -> s0 [0, 65535] { R13870 += 1, R13871 += 1 };
  s0 -> s1 [0, 65535] { R13871 += 1, R60 += 1, R61 += 1 };
  s0 -> s2 [0, 65535] { R13871 += 1, R61 += 1, R43 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R13871 += 1, R60 += 1, R61 += 1 };
  s1 -> s2 [0, 65535] { R13871 += 1, R61 += 1, R43 += 1 };
  s2 -> s3 [0, 65535] { R13871 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13871 += 1, R61 += 1, R43 += 1 };
  s3 -> s3 [0, 65535] { R13871 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_28 {
  init s0;
  s0 -> s1 [0, 65535] { R13873 += 1, R74 += 1, R75 += 1 };
  s0 -> s0 [0, 65535] { R13872 += 1, R13873 += 1 };
  s0 -> s2 [0, 65535] { R13873 += 1, R75 += 1, R33 += 1 };
  s1 -> s1 [0, 65535] { R13873 += 1, R74 += 1, R75 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R13873 += 1, R75 += 1, R33 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R13873 += 1 };
  s2 -> s2 [0, 65535] { R13873 += 1, R75 += 1, R33 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13873 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_29 {
  init s0;
  s0 -> s1 [0, 65535] { R13875 += 1 };
  s0 -> s0 [0, 65535] { R13874 += 1, R13875 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R13875 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_30 {
  init s0;
  s0 -> s1 [0, 42] { R13877 += 1, R77 += 1, R42 += 1 };
  s0 -> s2 [0, 65535] { R13877 += 1, R76 += 1, R77 += 1 };
  s0 -> s0 [0, 65535] { R13876 += 1, R13877 += 1 };
  s0 -> s3 [43, 43] { R13877 += 1, R77 += 1, R42 += 1 };
  s0 -> s4 [43, 43] { R13877 += 1, R77 += 1, R42 += 1 };
  s0 -> s1 [44, 65535] { R13877 += 1, R77 += 1, R42 += 1 };
  s1 -> s1 [0, 42] { R13877 += 1, R77 += 1, R42 += 1 };
  s1 -> s1 [0, 65535] { R13877 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [43, 43] { R13877 += 1, R77 += 1, R42 += 1 };
  s1 -> s4 [43, 43] { R13877 += 1, R77 += 1, R42 += 1 };
  s1 -> s1 [44, 65535] { R13877 += 1, R77 += 1, R42 += 1 };
  s2 -> s1 [0, 42] { R13877 += 1, R77 += 1, R42 += 1 };
  s2 -> s2 [0, 65535] { R13877 += 1, R76 += 1, R77 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [43, 43] { R13877 += 1, R77 += 1, R42 += 1 };
  s2 -> s4 [43, 43] { R13877 += 1, R77 += 1, R42 += 1 };
  s2 -> s1 [44, 65535] { R13877 += 1, R77 += 1, R42 += 1 };
  s3 -> s3 [0, 65535] { R13877 += 1, R77 += 1, R42 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R13877 += 1 };
  s4 -> s4 [0, 65535] { R13877 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13877 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_31 {
  init s0;
  s0 -> s1 [0, 64] { R13879 += 1, R13795 += 1 };
  s0 -> s2 [0, 65535] { R13879 += 1, R13794 += 1, R13795 += 1 };
  s0 -> s0 [0, 65535] { R13878 += 1, R13879 += 1 };
  s0 -> s1 [66, 65535] { R13879 += 1, R13795 += 1 };
  s1 -> s1 [0, 64] { R13879 += 1, R13795 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R13879 += 1 };
  s1 -> s1 [66, 65535] { R13879 += 1, R13795 += 1 };
  s2 -> s1 [0, 64] { R13879 += 1, R13795 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13879 += 1, R13794 += 1, R13795 += 1 };
  s2 -> s1 [66, 65535] { R13879 += 1, R13795 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_32 {
  init s0;
  s0 -> s1 [0, 65535] { R13881 += 1, R13797 += 1, R32 += 1 };
  s0 -> s2 [0, 65535] { R13881 += 1, R13796 += 1, R13797 += 1 };
  s0 -> s0 [0, 65535] { R13880 += 1, R13881 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R13881 += 1, R13797 += 1, R32 += 1 };
  s1 -> s4 [0, 65535] { R13881 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R13881 += 1, R13797 += 1, R32 += 1 };
  s2 -> s2 [0, 65535] { R13881 += 1, R13796 += 1, R13797 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13881 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_33 {
  init s0;
  s0 -> s1 [0, 65] { R13883 += 1, R13799 += 1 };
  s0 -> s2 [0, 65535] { R13883 += 1, R13798 += 1, R13799 += 1 };
  s0 -> s0 [0, 65535] { R13882 += 1, R13883 += 1 };
  s0 -> s1 [80, 65535] { R13883 += 1, R13799 += 1 };
  s1 -> s1 [0, 65] { R13883 += 1, R13799 += 1 };
  s1 -> s1 [0, 65535] { R13883 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [80, 65535] { R13883 += 1, R13799 += 1 };
  s2 -> s1 [0, 65] { R13883 += 1, R13799 += 1 };
  s2 -> s2 [0, 65535] { R13883 += 1, R13798 += 1, R13799 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [80, 65535] { R13883 += 1, R13799 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_34 {
  init s0;
  s0 -> s1 [0, 65535] { R13885 += 1, R13800 += 1, R13801 += 1 };
  s0 -> s2 [0, 65535] { R13885 += 1, R13801 += 1, R409 += 1 };
  s0 -> s0 [0, 65535] { R13884 += 1, R13885 += 1 };
  s1 -> s1 [0, 65535] { R13885 += 1, R13800 += 1, R13801 += 1 };
  s1 -> s2 [0, 65535] { R13885 += 1, R13801 += 1, R409 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13885 += 1, R13801 += 1, R409 += 1 };
  s2 -> s3 [0, 65535] { R13885 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13885 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_35 {
  init s0;
  s0 -> s1 [0, 79] { R13887 += 1, R13803 += 1 };
  s0 -> s2 [0, 65535] { R13887 += 1, R13802 += 1, R13803 += 1 };
  s0 -> s3 [0, 65535] { R13887 += 1, R13803 += 1, R411 += 1 };
  s0 -> s0 [0, 65535] { R13886 += 1, R13887 += 1 };
  s0 -> s1 [81, 65535] { R13887 += 1, R13803 += 1 };
  s1 -> s1 [0, 79] { R13887 += 1, R13803 += 1 };
  s1 -> s1 [0, 65535] { R13887 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [81, 65535] { R13887 += 1, R13803 += 1 };
  s2 -> s1 [0, 79] { R13887 += 1, R13803 += 1 };
  s2 -> s2 [0, 65535] { R13887 += 1, R13802 += 1, R13803 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R13887 += 1, R13803 += 1, R411 += 1 };
  s2 -> s1 [81, 65535] { R13887 += 1, R13803 += 1 };
  s3 -> s1 [0, 79] { R13887 += 1, R13803 += 1 };
  s3 -> s4 [0, 65535] { R13887 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R13887 += 1, R13803 += 1, R411 += 1 };
  s3 -> s1 [81, 65535] { R13887 += 1, R13803 += 1 };
  s4 -> s4 [0, 65535] { R13887 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_36 {
  init s0;
  s0 -> s1 [0, 79] { R13889 += 1, R13805 += 1, R415 += 1 };
  s0 -> s2 [0, 65535] { R13889 += 1, R13804 += 1, R13805 += 1 };
  s0 -> s0 [0, 65535] { R13888 += 1, R13889 += 1 };
  s0 -> s3 [0, 65535] { R13889 += 1, R13805 += 1, R414 += 1, R415 += 1 };
  s0 -> s1 [81, 65535] { R13889 += 1, R13805 += 1, R415 += 1 };
  s1 -> s1 [0, 79] { R13889 += 1, R13805 += 1, R415 += 1 };
  s1 -> s1 [0, 65535] { R13889 += 1, R13805 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R13889 += 1 };
  s1 -> s1 [81, 65535] { R13889 += 1, R13805 += 1, R415 += 1 };
  s2 -> s1 [0, 79] { R13889 += 1, R13805 += 1, R415 += 1 };
  s2 -> s2 [0, 65535] { R13889 += 1, R13804 += 1, R13805 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R13889 += 1, R13805 += 1, R414 += 1, R415 += 1 };
  s2 -> s1 [81, 65535] { R13889 += 1, R13805 += 1, R415 += 1 };
  s3 -> s1 [0, 79] { R13889 += 1, R13805 += 1, R415 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13889 += 1, R13805 += 1, R414 += 1, R415 += 1 };
  s3 -> s5 [0, 65535] { R13889 += 1 };
  s3 -> s1 [81, 65535] { R13889 += 1, R13805 += 1, R415 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13889 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_37 {
  init s0;
  s0 -> s1 [0, 65535] { R13891 += 1, R13807 += 1, R419 += 1, R420 += 1 };
  s0 -> s2 [0, 65535] { R13891 += 1, R13807 += 1, R420 += 1, R421 += 1 };
  s0 -> s3 [0, 65535] { R13891 += 1, R13806 += 1, R13807 += 1 };
  s0 -> s0 [0, 65535] { R13890 += 1, R13891 += 1 };
  s1 -> s1 [0, 65535] { R13891 += 1, R13807 += 1, R419 += 1, R420 += 1 };
  s1 -> s5 [0, 65535] { R13891 += 1 };
  s1 -> s2 [0, 65535] { R13891 += 1, R13807 += 1, R420 += 1, R421 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R13891 += 1 };
  s2 -> s2 [0, 65535] { R13891 += 1, R13807 += 1, R420 += 1, R421 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s6 [0, 65535] { R13891 += 1, R13807 += 1 };
  s3 -> s1 [0, 65535] { R13891 += 1, R13807 += 1, R419 += 1, R420 += 1 };
  s3 -> s2 [0, 65535] { R13891 += 1, R13807 += 1, R420 += 1, R421 += 1 };
  s3 -> s3 [0, 65535] { R13891 += 1, R13806 += 1, R13807 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13891 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R13891 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R13891 += 1, R13807 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_38 {
  init s0;
  s0 -> s1 [0, 80] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s0 -> s0 [0, 65535] { R13892 += 1, R13893 += 1 };
  s0 -> s2 [0, 65535] { R13893 += 1, R13808 += 1, R13809 += 1 };
  s0 -> s3 [0, 65535] { R13893 += 1, R13809 += 1 };
  s0 -> s1 [91, 110] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s0 -> s4 [111, 111] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s0 -> s1 [112, 65535] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s1 -> s1 [0, 80] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R13893 += 1 };
  s1 -> s1 [0, 65535] { R13893 += 1, R13809 += 1 };
  s1 -> s1 [91, 65535] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s2 -> s1 [0, 80] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13893 += 1, R13808 += 1, R13809 += 1 };
  s2 -> s3 [0, 65535] { R13893 += 1, R13809 += 1 };
  s2 -> s1 [91, 110] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s2 -> s4 [111, 111] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s2 -> s1 [112, 65535] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s3 -> s1 [0, 80] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R13893 += 1 };
  s3 -> s3 [0, 65535] { R13893 += 1, R13809 += 1 };
  s3 -> s1 [91, 110] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s3 -> s4 [111, 111] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s3 -> s1 [112, 65535] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s4 -> s1 [0, 80] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R13893 += 1 };
  s4 -> s4 [0, 65535] { R13893 += 1, R13809 += 1 };
  s4 -> s1 [91, 98] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s4 -> s7 [99, 99] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s4 -> s1 [100, 65535] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13893 += 1 };
  s7 -> s1 [0, 80] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R13893 += 1 };
  s7 -> s7 [0, 65535] { R13893 += 1, R13809 += 1 };
  s7 -> s1 [91, 96] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s7 -> s8 [97, 97] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s7 -> s1 [98, 65535] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s8 -> s1 [0, 80] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s8 [0, 65535] { R13893 += 1, R13809 += 1 };
  s8 -> s6 [0, 65535] { R13893 += 1 };
  s8 -> s1 [91, 107] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s8 -> s9 [108, 108] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s8 -> s1 [109, 65535] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s9 -> s1 [0, 80] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s9 -> s5 [0, 65535];
  s9 -> s6 [0, 65535] { R13893 += 1 };
  s9 -> s9 [0, 65535] { R13893 += 1, R13809 += 1 };
  s9 -> s1 [91, 103] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s9 -> s10 [104, 104] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s9 -> s1 [105, 65535] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s10 -> s1 [0, 80] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s10 -> s5 [0, 65535];
  s10 -> s6 [0, 65535] { R13893 += 1 };
  s10 -> s10 [0, 65535] { R13893 += 1, R13809 += 1 };
  s10 -> s1 [91, 110] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s10 -> s11 [111, 111] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s10 -> s1 [112, 65535] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s11 -> s1 [0, 80] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s11 -> s11 [0, 65535] { R13893 += 1, R13809 += 1 };
  s11 -> s5 [0, 65535];
  s11 -> s6 [0, 65535] { R13893 += 1 };
  s11 -> s1 [91, 114] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s11 -> s12 [115, 115] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s11 -> s1 [116, 65535] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s12 -> s1 [0, 80] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s12 -> s12 [0, 65535] { R13893 += 1, R13809 += 1 };
  s12 -> s5 [0, 65535];
  s12 -> s6 [0, 65535] { R13893 += 1 };
  s12 -> s1 [91, 115] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s12 -> s13 [116, 116] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s12 -> s1 [117, 65535] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s13 -> s1 [0, 80] { R13893 += 1, R13809 += 1, R12817 += 1 };
  s13 -> s1 [91, 65535] { R13893 += 1, R13809 += 1, R12817 += 1 };
  accepting s3, s4, s12, s8, s5, s2, s9, s6, s1, s7, s0, s10, s11;
};
automaton uri_39 {
  init s0;
  s0 -> s1 [0, 65535] { R13895 += 1, R13811 += 1, R12821 += 1, R12822 += 1 };
  s0 -> s0 [0, 65535] { R13894 += 1, R13895 += 1 };
  s0 -> s2 [0, 65535] { R13895 += 1, R13811 += 1, R12822 += 1, R12823 += 1 };
  s0 -> s3 [0, 65535] { R13895 += 1, R13810 += 1, R13811 += 1 };
  s1 -> s1 [0, 65535] { R13895 += 1, R13811 += 1, R12821 += 1, R12822 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R13895 += 1 };
  s1 -> s2 [0, 65535] { R13895 += 1, R13811 += 1, R12822 += 1, R12823 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R13895 += 1 };
  s2 -> s2 [0, 65535] { R13895 += 1, R13811 += 1, R12822 += 1, R12823 += 1 };
  s2 -> s6 [0, 65535] { R13895 += 1, R13811 += 1 };
  s3 -> s1 [0, 65535] { R13895 += 1, R13811 += 1, R12821 += 1, R12822 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R13895 += 1, R13811 += 1, R12822 += 1, R12823 += 1 };
  s3 -> s3 [0, 65535] { R13895 += 1, R13810 += 1, R13811 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13895 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R13895 += 1 };
  s6 -> s6 [0, 65535] { R13895 += 1, R13811 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_40 {
  init s0;
  s0 -> s1 [0, 65535] { R13897 += 1, R13813 += 1 };
  s0 -> s0 [0, 65535] { R13896 += 1, R13897 += 1 };
  s0 -> s2 [0, 65535] { R13897 += 1, R13813 += 1, R13514 += 1, R13515 += 1 };
  s0 -> s3 [0, 65535] { R13897 += 1, R13812 += 1, R13813 += 1 };
  s1 -> s1 [0, 65535] { R13897 += 1, R13813 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R13897 += 1 };
  s2 -> s1 [0, 65535] { R13897 += 1, R13813 += 1 };
  s2 -> s2 [0, 65535] { R13897 += 1, R13813 += 1, R13514 += 1, R13515 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R13897 += 1 };
  s3 -> s1 [0, 65535] { R13897 += 1, R13813 += 1 };
  s3 -> s2 [0, 65535] { R13897 += 1, R13813 += 1, R13514 += 1, R13515 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13897 += 1, R13812 += 1, R13813 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13897 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_41 {
  init s0;
  s0 -> s1 [0, 65535] { R13899 += 1, R13814 += 1, R13815 += 1 };
  s0 -> s0 [0, 65535] { R13898 += 1, R13899 += 1 };
  s0 -> s2 [0, 65535] { R13899 += 1, R13815 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R13899 += 1, R13814 += 1, R13815 += 1 };
  s1 -> s2 [0, 65535] { R13899 += 1, R13815 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13899 += 1, R13815 += 1 };
  s2 -> s4 [0, 65535] { R13899 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13899 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_42 {
  init s0;
  s0 -> s1 [0, 65535] { R13901 += 1, R13816 += 1, R13817 += 1 };
  s0 -> s0 [0, 65535] { R13900 += 1, R13901 += 1 };
  s0 -> s2 [0, 65535] { R13901 += 1, R13817 += 1 };
  s1 -> s1 [0, 65535] { R13901 += 1, R13816 += 1, R13817 += 1 };
  s1 -> s2 [0, 65535] { R13901 += 1, R13817 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R13901 += 1 };
  s2 -> s2 [0, 65535] { R13901 += 1, R13817 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13901 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_43 {
  init s0;
  s0 -> s1 [0, 65535] { R13903 += 1, R13831 += 1, R34 += 1 };
  s0 -> s0 [0, 65535] { R13902 += 1, R13903 += 1 };
  s0 -> s2 [0, 65535] { R13903 += 1, R13830 += 1, R13831 += 1 };
  s1 -> s4 [0, 65535] { R13903 += 1 };
  s1 -> s1 [0, 65535] { R13903 += 1, R13831 += 1, R34 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R13903 += 1, R13831 += 1, R34 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13903 += 1, R13830 += 1, R13831 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13903 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_44 {
  init s0;
  s0 -> s1 [0, 64] { R13905 += 1, R13833 += 1 };
  s0 -> s0 [0, 65535] { R13904 += 1, R13905 += 1 };
  s0 -> s2 [0, 65535] { R13905 += 1, R13832 += 1, R13833 += 1 };
  s0 -> s3 [65, 65] { R13905 += 1, R13833 += 1 };
  s0 -> s4 [65, 65] { R13905 += 1, R13833 += 1 };
  s0 -> s5 [80, 80] { R13905 += 1, R13833 += 1 };
  s0 -> s1 [81, 65535] { R13905 += 1, R13833 += 1 };
  s1 -> s1 [0, 64] { R13905 += 1, R13833 += 1 };
  s1 -> s3 [65, 65] { R13905 += 1, R13833 += 1 };
  s1 -> s4 [65, 65] { R13905 += 1, R13833 += 1 };
  s1 -> s5 [80, 80] { R13905 += 1, R13833 += 1 };
  s1 -> s1 [81, 65535] { R13905 += 1, R13833 += 1 };
  s2 -> s1 [0, 64] { R13905 += 1, R13833 += 1 };
  s2 -> s2 [0, 65535] { R13905 += 1, R13832 += 1, R13833 += 1 };
  s2 -> s3 [65, 65] { R13905 += 1, R13833 += 1 };
  s2 -> s4 [65, 65] { R13905 += 1, R13833 += 1 };
  s2 -> s5 [80, 80] { R13905 += 1, R13833 += 1 };
  s2 -> s1 [81, 65535] { R13905 += 1, R13833 += 1 };
  s3 -> s3 [0, 65] { R13905 += 1, R13833 += 1 };
  s3 -> s8 [80, 80] { R13905 += 1, R13833 += 1 };
  s3 -> s3 [81, 65535] { R13905 += 1, R13833 += 1 };
  s5 -> s5 [0, 64] { R13905 += 1, R13833 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R13905 += 1 };
  s5 -> s7 [65, 65] { R13905 += 1, R13833 += 1 };
  s5 -> s8 [65, 65] { R13905 += 1, R13833 += 1 };
  s5 -> s5 [80, 65535] { R13905 += 1, R13833 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R13905 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 65] { R13905 += 1, R13833 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R13905 += 1 };
  s8 -> s8 [80, 65535] { R13905 += 1, R13833 += 1 };
  accepting s5, s6, s7, s8;
};
automaton uri_45 {
  init s0;
  s0 -> s1 [0, 64] { R13907 += 1, R13835 += 1, R408 += 1 };
  s0 -> s2 [0, 65535] { R13907 += 1, R13834 += 1, R13835 += 1 };
  s0 -> s0 [0, 65535] { R13906 += 1, R13907 += 1 };
  s0 -> s3 [65, 65] { R13907 += 1, R13835 += 1, R408 += 1 };
  s0 -> s4 [65, 65] { R13907 += 1, R13835 += 1, R408 += 1 };
  s0 -> s1 [66, 65535] { R13907 += 1, R13835 += 1, R408 += 1 };
  s1 -> s1 [0, 64] { R13907 += 1, R13835 += 1, R408 += 1 };
  s1 -> s1 [0, 65535] { R13907 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R13907 += 1, R13835 += 1, R408 += 1 };
  s1 -> s4 [65, 65] { R13907 += 1, R13835 += 1, R408 += 1 };
  s1 -> s1 [66, 65535] { R13907 += 1, R13835 += 1, R408 += 1 };
  s2 -> s1 [0, 64] { R13907 += 1, R13835 += 1, R408 += 1 };
  s2 -> s2 [0, 65535] { R13907 += 1, R13834 += 1, R13835 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R13907 += 1, R13835 += 1, R408 += 1 };
  s2 -> s4 [65, 65] { R13907 += 1, R13835 += 1, R408 += 1 };
  s2 -> s1 [66, 65535] { R13907 += 1, R13835 += 1, R408 += 1 };
  s3 -> s6 [0, 65535] { R13907 += 1 };
  s3 -> s3 [0, 65535] { R13907 += 1, R13835 += 1, R408 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13907 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13907 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_46 {
  init s0;
  s0 -> s1 [0, 64] { R13909 += 1, R13837 += 1, R410 += 1 };
  s0 -> s2 [0, 65535] { R13909 += 1, R13836 += 1, R13837 += 1 };
  s0 -> s0 [0, 65535] { R13908 += 1, R13909 += 1 };
  s0 -> s3 [65, 65] { R13909 += 1, R13837 += 1, R410 += 1 };
  s0 -> s4 [65, 65] { R13909 += 1, R13837 += 1, R410 += 1 };
  s0 -> s1 [66, 65535] { R13909 += 1, R13837 += 1, R410 += 1 };
  s1 -> s1 [0, 64] { R13909 += 1, R13837 += 1, R410 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13909 += 1 };
  s1 -> s3 [65, 65] { R13909 += 1, R13837 += 1, R410 += 1 };
  s1 -> s4 [65, 65] { R13909 += 1, R13837 += 1, R410 += 1 };
  s1 -> s1 [66, 65535] { R13909 += 1, R13837 += 1, R410 += 1 };
  s2 -> s1 [0, 64] { R13909 += 1, R13837 += 1, R410 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13909 += 1, R13836 += 1, R13837 += 1 };
  s2 -> s3 [65, 65] { R13909 += 1, R13837 += 1, R410 += 1 };
  s2 -> s4 [65, 65] { R13909 += 1, R13837 += 1, R410 += 1 };
  s2 -> s1 [66, 65535] { R13909 += 1, R13837 += 1, R410 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R13909 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R13909 += 1 };
  s4 -> s4 [0, 65535] { R13909 += 1, R13837 += 1, R410 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13909 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_47 {
  init s0;
  s0 -> s1 [0, 64] { R13911 += 1, R13839 += 1, R412 += 1, R413 += 1 };
  s0 -> s0 [0, 65535] { R13910 += 1, R13911 += 1 };
  s0 -> s2 [0, 65535] { R13911 += 1, R13838 += 1, R13839 += 1 };
  s0 -> s3 [65, 65] { R13911 += 1, R13839 += 1, R412 += 1, R413 += 1 };
  s0 -> s4 [65, 65] { R13911 += 1, R13839 += 1, R412 += 1, R413 += 1 };
  s0 -> s1 [66, 65535] { R13911 += 1, R13839 += 1, R412 += 1, R413 += 1 };
  s1 -> s1 [0, 64] { R13911 += 1, R13839 += 1, R412 += 1, R413 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R13911 += 1 };
  s1 -> s3 [65, 65] { R13911 += 1, R13839 += 1, R412 += 1, R413 += 1 };
  s1 -> s4 [65, 65] { R13911 += 1, R13839 += 1, R412 += 1, R413 += 1 };
  s1 -> s1 [66, 65535] { R13911 += 1, R13839 += 1, R412 += 1, R413 += 1 };
  s2 -> s1 [0, 64] { R13911 += 1, R13839 += 1, R412 += 1, R413 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R13911 += 1, R13838 += 1, R13839 += 1 };
  s2 -> s3 [65, 65] { R13911 += 1, R13839 += 1, R412 += 1, R413 += 1 };
  s2 -> s4 [65, 65] { R13911 += 1, R13839 += 1, R412 += 1, R413 += 1 };
  s2 -> s1 [66, 65535] { R13911 += 1, R13839 += 1, R412 += 1, R413 += 1 };
  s3 -> s3 [0, 65535] { R13911 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R13911 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R13911 += 1, R13839 += 1, R412 += 1, R413 += 1 };
  s5 -> s5 [0, 65535] { R13911 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_48 {
  init s0;
  s0 -> s1 [0, 64] { R13913 += 1, R13841 += 1, R416 += 1, R417 += 1 };
  s0 -> s2 [0, 65535] { R13913 += 1, R13840 += 1, R13841 += 1 };
  s0 -> s0 [0, 65535] { R13912 += 1, R13913 += 1 };
  s0 -> s3 [65, 65] { R13913 += 1, R13841 += 1, R416 += 1, R417 += 1 };
  s0 -> s4 [65, 65] { R13913 += 1, R13841 += 1, R416 += 1, R417 += 1 };
  s0 -> s1 [66, 65535] { R13913 += 1, R13841 += 1, R416 += 1, R417 += 1 };
  s1 -> s1 [0, 64] { R13913 += 1, R13841 += 1, R416 += 1, R417 += 1 };
  s1 -> s1 [0, 65535] { R13913 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R13913 += 1, R13841 += 1, R416 += 1, R417 += 1 };
  s1 -> s4 [65, 65] { R13913 += 1, R13841 += 1, R416 += 1, R417 += 1 };
  s1 -> s1 [66, 65535] { R13913 += 1, R13841 += 1, R416 += 1, R417 += 1 };
  s2 -> s1 [0, 64] { R13913 += 1, R13841 += 1, R416 += 1, R417 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13913 += 1, R13840 += 1, R13841 += 1 };
  s2 -> s3 [65, 65] { R13913 += 1, R13841 += 1, R416 += 1, R417 += 1 };
  s2 -> s4 [65, 65] { R13913 += 1, R13841 += 1, R416 += 1, R417 += 1 };
  s2 -> s1 [66, 65535] { R13913 += 1, R13841 += 1, R416 += 1, R417 += 1 };
  s3 -> s3 [0, 65535] { R13913 += 1, R13841 += 1, R416 += 1, R417 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R13913 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13913 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13913 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_49 {
  init s0;
  s0 -> s1 [0, 64] { R13915 += 1, R13843 += 1, R12814 += 1, R12815 += 1 };
  s0 -> s2 [0, 65535] { R13915 += 1, R13842 += 1, R13843 += 1 };
  s0 -> s0 [0, 65535] { R13914 += 1, R13915 += 1 };
  s0 -> s3 [65, 65] { R13915 += 1, R13843 += 1, R12814 += 1, R12815 += 1 };
  s0 -> s4 [65, 65] { R13915 += 1, R13843 += 1, R12814 += 1, R12815 += 1 };
  s0 -> s1 [66, 65535] { R13915 += 1, R13843 += 1, R12814 += 1, R12815 += 1 };
  s0 -> s5 [108, 108] { R13915 += 1, R13843 += 1, R12815 += 1 };
  s1 -> s1 [0, 64] { R13915 += 1, R13843 += 1, R12814 += 1, R12815 += 1 };
  s1 -> s3 [65, 65] { R13915 += 1, R13843 += 1, R12814 += 1, R12815 += 1 };
  s1 -> s4 [65, 65] { R13915 += 1, R13843 += 1, R12814 += 1, R12815 += 1 };
  s1 -> s1 [66, 65535] { R13915 += 1, R13843 += 1, R12814 += 1, R12815 += 1 };
  s1 -> s5 [108, 108] { R13915 += 1, R13843 += 1, R12815 += 1 };
  s2 -> s1 [0, 64] { R13915 += 1, R13843 += 1, R12814 += 1, R12815 += 1 };
  s2 -> s2 [0, 65535] { R13915 += 1, R13842 += 1, R13843 += 1 };
  s2 -> s3 [65, 65] { R13915 += 1, R13843 += 1, R12814 += 1, R12815 += 1 };
  s2 -> s4 [65, 65] { R13915 += 1, R13843 += 1, R12814 += 1, R12815 += 1 };
  s2 -> s1 [66, 65535] { R13915 += 1, R13843 += 1, R12814 += 1, R12815 += 1 };
  s2 -> s5 [108, 108] { R13915 += 1, R13843 += 1, R12815 += 1 };
  s3 -> s3 [0, 65535] { R13915 += 1, R13843 += 1, R12814 += 1, R12815 += 1 };
  s3 -> s8 [108, 108] { R13915 += 1, R13843 += 1, R12815 += 1 };
  s5 -> s5 [0, 64] { R13915 += 1, R13843 += 1 };
  s5 -> s5 [0, 65535] { R13915 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [65, 65] { R13915 += 1, R13843 += 1 };
  s5 -> s8 [65, 65] { R13915 += 1, R13843 += 1 };
  s5 -> s5 [66, 65535] { R13915 += 1, R13843 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R13915 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s9 [0, 65535] { R13915 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R13915 += 1, R13843 += 1 };
  s9 -> s9 [0, 65535] { R13915 += 1 };
  s9 -> s6 [0, 65535];
  accepting s8, s5, s9, s6, s7;
};
automaton uri_50 {
  init s0;
  s0 -> s1 [0, 64] { R13917 += 1, R13845 += 1, R12818 += 1, R12819 += 1 };
  s0 -> s0 [0, 65535] { R13916 += 1, R13917 += 1 };
  s0 -> s2 [0, 65535] { R13917 += 1, R13844 += 1, R13845 += 1 };
  s0 -> s3 [65, 65] { R13917 += 1, R13845 += 1, R12818 += 1, R12819 += 1 };
  s0 -> s4 [65, 65] { R13917 += 1, R13845 += 1, R12818 += 1, R12819 += 1 };
  s0 -> s1 [66, 65535] { R13917 += 1, R13845 += 1, R12818 += 1, R12819 += 1 };
  s1 -> s1 [0, 64] { R13917 += 1, R13845 += 1, R12818 += 1, R12819 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13917 += 1 };
  s1 -> s3 [65, 65] { R13917 += 1, R13845 += 1, R12818 += 1, R12819 += 1 };
  s1 -> s4 [65, 65] { R13917 += 1, R13845 += 1, R12818 += 1, R12819 += 1 };
  s1 -> s1 [66, 65535] { R13917 += 1, R13845 += 1, R12818 += 1, R12819 += 1 };
  s2 -> s1 [0, 64] { R13917 += 1, R13845 += 1, R12818 += 1, R12819 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13917 += 1, R13844 += 1, R13845 += 1 };
  s2 -> s3 [65, 65] { R13917 += 1, R13845 += 1, R12818 += 1, R12819 += 1 };
  s2 -> s4 [65, 65] { R13917 += 1, R13845 += 1, R12818 += 1, R12819 += 1 };
  s2 -> s1 [66, 65535] { R13917 += 1, R13845 += 1, R12818 += 1, R12819 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R13917 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R13917 += 1 };
  s4 -> s4 [0, 65535] { R13917 += 1, R13845 += 1, R12818 += 1, R12819 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13917 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_51 {
  init s0;
  s0 -> s1 [0, 64] { R13919 += 1, R13847 += 1, R13511 += 1, R13512 += 1 };
  s0 -> s2 [0, 64] { R13919 += 1, R13847 += 1, R13510 += 1, R13511 += 1 };
  s0 -> s0 [0, 65535] { R13918 += 1, R13919 += 1 };
  s0 -> s3 [0, 65535] { R13919 += 1, R13846 += 1, R13847 += 1 };
  s0 -> s4 [65, 65] { R13919 += 1, R13847 += 1, R13511 += 1, R13512 += 1 };
  s0 -> s5 [65, 65] { R13919 += 1, R13847 += 1, R13511 += 1, R13512 += 1 };
  s0 -> s6 [65, 65] { R13919 += 1, R13847 += 1, R13510 += 1, R13511 += 1 };
  s0 -> s7 [65, 65] { R13919 += 1, R13847 += 1, R13510 += 1, R13511 += 1 };
  s0 -> s1 [66, 65535] { R13919 += 1, R13847 += 1, R13511 += 1, R13512 += 1 };
  s0 -> s2 [66, 65535] { R13919 += 1, R13847 += 1, R13510 += 1, R13511 += 1 };
  s1 -> s1 [0, 64] { R13919 += 1, R13847 += 1, R13511 += 1, R13512 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s1 [0, 65535] { R13919 += 1 };
  s1 -> s4 [65, 65] { R13919 += 1, R13847 += 1, R13511 += 1, R13512 += 1 };
  s1 -> s5 [65, 65] { R13919 += 1, R13847 += 1, R13511 += 1, R13512 += 1 };
  s1 -> s1 [66, 65535] { R13919 += 1, R13847 += 1, R13511 += 1, R13512 += 1 };
  s2 -> s1 [0, 64] { R13919 += 1, R13847 += 1, R13511 += 1, R13512 += 1 };
  s2 -> s2 [0, 64] { R13919 += 1, R13847 += 1, R13510 += 1, R13511 += 1 };
  s2 -> s4 [65, 65] { R13919 += 1, R13847 += 1, R13511 += 1, R13512 += 1 };
  s2 -> s5 [65, 65] { R13919 += 1, R13847 += 1, R13511 += 1, R13512 += 1 };
  s2 -> s6 [65, 65] { R13919 += 1, R13847 += 1, R13510 += 1, R13511 += 1 };
  s2 -> s7 [65, 65] { R13919 += 1, R13847 += 1, R13510 += 1, R13511 += 1 };
  s2 -> s1 [66, 65535] { R13919 += 1, R13847 += 1, R13511 += 1, R13512 += 1 };
  s2 -> s2 [66, 65535] { R13919 += 1, R13847 += 1, R13510 += 1, R13511 += 1 };
  s3 -> s1 [0, 64] { R13919 += 1, R13847 += 1, R13511 += 1, R13512 += 1 };
  s3 -> s2 [0, 64] { R13919 += 1, R13847 += 1, R13510 += 1, R13511 += 1 };
  s3 -> s3 [0, 65535] { R13919 += 1, R13846 += 1, R13847 += 1 };
  s3 -> s4 [65, 65] { R13919 += 1, R13847 += 1, R13511 += 1, R13512 += 1 };
  s3 -> s5 [65, 65] { R13919 += 1, R13847 += 1, R13511 += 1, R13512 += 1 };
  s3 -> s6 [65, 65] { R13919 += 1, R13847 += 1, R13510 += 1, R13511 += 1 };
  s3 -> s7 [65, 65] { R13919 += 1, R13847 += 1, R13510 += 1, R13511 += 1 };
  s3 -> s1 [66, 65535] { R13919 += 1, R13847 += 1, R13511 += 1, R13512 += 1 };
  s3 -> s2 [66, 65535] { R13919 += 1, R13847 += 1, R13510 += 1, R13511 += 1 };
  s4 -> s4 [0, 65535] { R13919 += 1, R13847 += 1, R13511 += 1, R13512 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s9 [0, 65535] { R13919 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R13919 += 1 };
  s7 -> s4 [0, 65535] { R13919 += 1, R13847 += 1, R13511 += 1, R13512 += 1 };
  s7 -> s7 [0, 65535] { R13919 += 1, R13847 += 1, R13510 += 1, R13511 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R13919 += 1 };
  accepting s4, s8, s5, s9, s1;
};
automaton uri_52 {
  init s0;
  s0 -> s1 [0, 64] { R13921 += 1, R13849 += 1 };
  s0 -> s2 [0, 65535] { R13921 += 1, R13848 += 1, R13849 += 1 };
  s0 -> s0 [0, 65535] { R13920 += 1, R13921 += 1 };
  s0 -> s3 [65, 65] { R13921 += 1, R13849 += 1 };
  s0 -> s4 [65, 65] { R13921 += 1, R13849 += 1 };
  s0 -> s1 [66, 65535] { R13921 += 1, R13849 += 1 };
  s1 -> s1 [0, 64] { R13921 += 1, R13849 += 1 };
  s1 -> s1 [0, 65535] { R13921 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R13921 += 1, R13849 += 1 };
  s1 -> s4 [65, 65] { R13921 += 1, R13849 += 1 };
  s1 -> s1 [66, 65535] { R13921 += 1, R13849 += 1 };
  s2 -> s1 [0, 64] { R13921 += 1, R13849 += 1 };
  s2 -> s2 [0, 65535] { R13921 += 1, R13848 += 1, R13849 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R13921 += 1, R13849 += 1 };
  s2 -> s4 [65, 65] { R13921 += 1, R13849 += 1 };
  s2 -> s1 [66, 65535] { R13921 += 1, R13849 += 1 };
  s3 -> s3 [0, 65535] { R13921 += 1, R13849 += 1 };
  s3 -> s6 [0, 65535] { R13921 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13921 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13921 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_53 {
  init s0;
  s0 -> s1 [0, 64] { R13923 += 1, R13851 += 1, R13788 += 1, R13789 += 1 };
  s0 -> s2 [0, 64] { R13923 += 1, R13851 += 1, R13789 += 1, R13790 += 1 };
  s0 -> s0 [0, 65535] { R13922 += 1, R13923 += 1 };
  s0 -> s3 [0, 65535] { R13923 += 1, R13850 += 1, R13851 += 1 };
  s0 -> s4 [65, 65] { R13923 += 1, R13851 += 1, R13788 += 1, R13789 += 1 };
  s0 -> s5 [65, 65] { R13923 += 1, R13851 += 1, R13788 += 1, R13789 += 1 };
  s0 -> s6 [65, 65] { R13923 += 1, R13851 += 1, R13789 += 1, R13790 += 1 };
  s0 -> s7 [65, 65] { R13923 += 1, R13851 += 1, R13789 += 1, R13790 += 1 };
  s0 -> s2 [66, 79] { R13923 += 1, R13851 += 1, R13789 += 1, R13790 += 1 };
  s0 -> s1 [66, 65535] { R13923 += 1, R13851 += 1, R13788 += 1, R13789 += 1 };
  s0 -> s8 [80, 80] { R13923 += 1, R13851 += 1, R13789 += 1, R13790 += 1 };
  s0 -> s2 [81, 65535] { R13923 += 1, R13851 += 1, R13789 += 1, R13790 += 1 };
  s1 -> s1 [0, 64] { R13923 += 1, R13851 += 1, R13788 += 1, R13789 += 1 };
  s1 -> s2 [0, 64] { R13923 += 1, R13851 += 1, R13789 += 1, R13790 += 1 };
  s1 -> s4 [65, 65] { R13923 += 1, R13851 += 1, R13788 += 1, R13789 += 1 };
  s1 -> s5 [65, 65] { R13923 += 1, R13851 += 1, R13788 += 1, R13789 += 1 };
  s1 -> s6 [65, 65] { R13923 += 1, R13851 += 1, R13789 += 1, R13790 += 1 };
  s1 -> s7 [65, 65] { R13923 += 1, R13851 += 1, R13789 += 1, R13790 += 1 };
  s1 -> s2 [66, 79] { R13923 += 1, R13851 += 1, R13789 += 1, R13790 += 1 };
  s1 -> s1 [66, 65535] { R13923 += 1, R13851 += 1, R13788 += 1, R13789 += 1 };
  s1 -> s8 [80, 80] { R13923 += 1, R13851 += 1, R13789 += 1, R13790 += 1 };
  s1 -> s2 [81, 65535] { R13923 += 1, R13851 += 1, R13789 += 1, R13790 += 1 };
  s2 -> s2 [0, 64] { R13923 += 1, R13851 += 1, R13789 += 1, R13790 += 1 };
  s2 -> s6 [65, 65] { R13923 += 1, R13851 += 1 };
  s2 -> s7 [65, 65] { R13923 += 1, R13851 += 1 };
  s2 -> s2 [66, 79] { R13923 += 1, R13851 += 1, R13789 += 1, R13790 += 1 };
  s2 -> s2 [66, 65535] { R13923 += 1, R13851 += 1 };
  s2 -> s8 [80, 80] { R13923 += 1, R13851 += 1, R13789 += 1, R13790 += 1 };
  s2 -> s2 [81, 65535] { R13923 += 1, R13851 += 1, R13789 += 1, R13790 += 1 };
  s3 -> s1 [0, 64] { R13923 += 1, R13851 += 1, R13788 += 1, R13789 += 1 };
  s3 -> s2 [0, 64] { R13923 += 1, R13851 += 1, R13789 += 1, R13790 += 1 };
  s3 -> s3 [0, 65535] { R13923 += 1, R13850 += 1, R13851 += 1 };
  s3 -> s4 [65, 65] { R13923 += 1, R13851 += 1, R13788 += 1, R13789 += 1 };
  s3 -> s5 [65, 65] { R13923 += 1, R13851 += 1, R13788 += 1, R13789 += 1 };
  s3 -> s6 [65, 65] { R13923 += 1, R13851 += 1, R13789 += 1, R13790 += 1 };
  s3 -> s7 [65, 65] { R13923 += 1, R13851 += 1, R13789 += 1, R13790 += 1 };
  s3 -> s2 [66, 79] { R13923 += 1, R13851 += 1, R13789 += 1, R13790 += 1 };
  s3 -> s1 [66, 65535] { R13923 += 1, R13851 += 1, R13788 += 1, R13789 += 1 };
  s3 -> s8 [80, 80] { R13923 += 1, R13851 += 1, R13789 += 1, R13790 += 1 };
  s3 -> s2 [81, 65535] { R13923 += 1, R13851 += 1, R13789 += 1, R13790 += 1 };
  s5 -> s6 [0, 79] { R13923 += 1, R13851 += 1, R13789 += 1, R13790 += 1 };
  s5 -> s5 [0, 65535] { R13923 += 1, R13851 += 1, R13788 += 1, R13789 += 1 };
  s5 -> s11 [80, 80] { R13923 += 1, R13851 += 1, R13789 += 1, R13790 += 1 };
  s5 -> s6 [81, 65535] { R13923 += 1, R13851 += 1, R13789 += 1, R13790 += 1 };
  s6 -> s6 [0, 79] { R13923 += 1, R13851 += 1, R13789 += 1, R13790 += 1 };
  s6 -> s6 [0, 65535] { R13923 += 1, R13851 += 1 };
  s6 -> s11 [80, 80] { R13923 += 1, R13851 += 1, R13789 += 1, R13790 += 1 };
  s6 -> s6 [81, 65535] { R13923 += 1, R13851 += 1, R13789 += 1, R13790 += 1 };
  s8 -> s8 [0, 64] { R13923 += 1, R13851 += 1 };
  s8 -> s8 [0, 65535] { R13923 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [65, 65] { R13923 += 1, R13851 += 1 };
  s8 -> s11 [65, 65] { R13923 += 1, R13851 += 1 };
  s8 -> s8 [66, 65535] { R13923 += 1, R13851 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R13923 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R13923 += 1 };
  s11 -> s11 [0, 65535] { R13923 += 1, R13851 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R13923 += 1 };
  accepting s12, s8, s9, s10, s11;
};
};
synchronised {  // Automata constraining P58
automaton P58_0 {
  init s0;
  s0 -> s1 [112, 112];
  accepting s1;
};
};
synchronised {  // Automata constraining P88
automaton P88_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
synchronised {  // Automata constraining P6
automaton P6_0 {
  init s0;
  s0 -> s1 [97, 97];
  accepting s1;
};
};
synchronised {  // Automata constraining c2
automaton c2_0 {
  init s0;
  s0 -> s1 [98, 98];
  accepting s1;
};
};
constraint R3 = 0 && R5 = R13817 && R6 = R13923 && R38 = 0 && R39 = 1 && R40 = 0 && R41 = 1 && R56 = 0 && R57 = R13817 && R58 = 0 && R59 = R13817 && R60 = 0 && R61 = R13817 && R62 = 0 && R63 = R13923 && R64 = 0 && R65 = R13923 && R66 = 0 && R67 = R13923 && R86 = 0 && R87 = 0 && R13794 = 0 && R13795 = R13817 && R13796 = 0 && R13797 = R13817 && R13798 = 0 && R13799 = R13817 && R13800 = 0 && R13801 = R13817 && R13802 = 0 && R13803 = R13817 && R13804 = 0 && R13805 = R13817 && R13806 = 0 && R13807 = R13817 && R13808 = 0 && R13809 = R13817 && R13810 = 0 && R13811 = R13817 && R13812 = 0 && R13813 = R13817 && R13814 = 0 && R13815 = R13817 && R13816 = 0 && R13818 = 0 && R13819 = R13923 && R13820 = 0 && R13821 = R13923 && R13822 = 0 && R13823 = R13923 && R13824 = 0 && R13825 = R13923 && R13826 = 0 && R13827 = R13923 && R13828 = 0 && R13829 = R13923 && R13832 = 0 && R13833 = 0 && R13842 = 0 && R13843 = 0 && R13846 = 0 && R13847 = 0 && R13850 = 0 && R13851 = 0 && R13852 = 10 && R13853 = R13923 && R13854 = 10 && R13855 = R13923 && R13856 = 10 && R13857 = R13923 && R13858 = 10 && R13859 = R13923 && R13860 = 10 && R13861 = R13923 && R13862 = 10 && R13863 = R13923 && R13864 = 10 && R13865 = R13923 && R13866 = 10 && R13867 = R13923 && R13868 = 10 && R13869 = R13923 && R13870 = 10 && R13871 = R13923 && R13872 = 10 && R13873 = R13923 && R13874 = 10 && R13875 = R13923 && R13876 = 10 && R13877 = R13923 && R13878 = 10 && R13879 = R13923 && R13880 = 10 && R13881 = R13923 && R13882 = 10 && R13883 = R13923 && R13884 = 10 && R13885 = R13923 && R13886 = 10 && R13887 = R13923 && R13888 = 10 && R13889 = R13923 && R13890 = 10 && R13891 = R13923 && R13892 = 10 && R13893 = R13923 && R13894 = 10 && R13895 = R13923 && R13896 = 10 && R13897 = R13923 && R13898 = 10 && R13899 = R13923 && R13900 = 10 && R13901 = R13923 && R13902 = 10 && R13903 = R13923 && R13904 = 10 && R13905 = R13923 && R13906 = 10 && R13907 = R13923 && R13908 = 10 && R13909 = R13923 && R13910 = 10 && R13911 = R13923 && R13912 = 10 && R13913 = R13923 && R13914 = 10 && R13915 = R13923 && R13916 = 10 && R13917 = R13923 && R13918 = 10 && R13919 = R13923 && R13920 = 10 && R13921 = R13923 && R13922 = 10 && R43 + R42 != 0 && R45 + R44 != 0 && R12823 + R12820 + R13793 + R13790 != 0 && R8 < 1 && R14 < 1 && R15 < 1 && R18 < 1 && R21 < 1 && R24 < 1 && -1*R409 + -1*R408 < 1 && R411 + R410 < 1 && 0 < R13817 && 9 < R13923 && (R409 + R408 != 0 || R421 + R418 = 0 || (R414 + R412 = 0 && R415 + R413 = 0)) && (R409 + R408 != 0 || R421 + R418 = 0 || (R419 + R416 = 0 && R420 + R417 = 0)) && (R409 + R408 != 0 || R421 + R418 = 0 || (R12816 + R12814 = 0 && R12817 + R12815 = 0)) && (R409 + R408 != 0 || R421 + R418 = 0 || (R12821 + R12818 = 0 && R12822 + R12819 = 0)) && (R414 + R412 != 0 || R409 + R408 + -1*R415 + -1*R413 = 0 || R409 + R408 < 1) && (R419 + R416 != 0 || R409 + R408 + -1*R420 + -1*R417 = 0 || R409 + R408 < 1) && (R12816 + R12814 != 0 || R409 + R408 + -1*R12817 + -1*R12815 = 0 || R409 + R408 < 1) && (R12821 + R12818 != 0 || R409 + R408 + -1*R12822 + -1*R12819 = 0 || R409 + R408 < 1) && (R27 = 0 || (R68 = 0 && R69 = 0)) && (R28 = 0 || (R84 = 0 && R85 = 0)) && (R33 = 0 || (R74 = 0 && R75 = 0)) && (R33 = 0 || (R76 = 0 && R77 = 0)) && (R34 = 0 || (R13830 = 0 && R13831 = 0)) && (R34 = 0 || (R13834 = 0 && R13835 = 0)) && (R34 = 0 || (R13836 = 0 && R13837 = 0)) && (R34 = 0 || (R13838 = 0 && R13839 = 0)) && (R34 = 0 || (R13840 = 0 && R13841 = 0)) && (R34 = 0 || (R13844 = 0 && R13845 = 0)) && (R34 = 0 || (R13848 = 0 && R13849 = 0)) && (R36 = 0 || (R78 = 0 && R79 = 0)) && (R37 = 0 || (R80 = 0 && R81 = 0)) && (R37 = 0 || (R82 = 0 && R83 = 0)) && (R414 + R412 = 0 || R409 + R408 < 1) && (R419 + R416 = 0 || R409 + R408 < 1) && (R12816 + R12814 = 0 || R409 + R408 < 1) && (R12821 + R12818 = 0 || R409 + R408 < 1) && (R13515 + R13512 = 0 || (R13513 + R13510 = 0 && R13514 + R13511 = 0)) && (R13515 + R13512 = 0 || (R13791 + R13788 = 0 && R13792 + R13789 = 0));
// End of Parikh automata intersection problem
